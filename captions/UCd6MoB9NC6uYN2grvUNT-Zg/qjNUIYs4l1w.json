[
  {
    "start": "0",
    "end": "50000"
  },
  {
    "text": "thank you for joining me to learn about",
    "start": "60",
    "end": "2220"
  },
  {
    "text": "how Amazon devops grew a machine",
    "start": "2220",
    "end": "4680"
  },
  {
    "text": "learning powered service from AWS",
    "start": "4680",
    "end": "7080"
  },
  {
    "text": "helping developers to improve the",
    "start": "7080",
    "end": "9480"
  },
  {
    "text": "operational performance and availability",
    "start": "9480",
    "end": "11519"
  },
  {
    "text": "of serverless applications",
    "start": "11519",
    "end": "14219"
  },
  {
    "text": "my name is Shivan Singh and I'm a",
    "start": "14219",
    "end": "16740"
  },
  {
    "text": "principal solution architect here at AWS",
    "start": "16740",
    "end": "19260"
  },
  {
    "text": "and a devops crew ambassador",
    "start": "19260",
    "end": "22560"
  },
  {
    "text": "in this episode I am going to show you",
    "start": "22560",
    "end": "24960"
  },
  {
    "text": "how Amazon devops grew for serverless a",
    "start": "24960",
    "end": "28439"
  },
  {
    "text": "new ml powered capability can",
    "start": "28439",
    "end": "30900"
  },
  {
    "text": "automatically detect Anonymous Behavior",
    "start": "30900",
    "end": "33420"
  },
  {
    "text": "at the AWS Lambda function level Amazon",
    "start": "33420",
    "end": "36660"
  },
  {
    "text": "dynamodb table and provide ml powered",
    "start": "36660",
    "end": "40440"
  },
  {
    "text": "recommendations to remediate any issues",
    "start": "40440",
    "end": "43379"
  },
  {
    "text": "that were detected",
    "start": "43379",
    "end": "45000"
  },
  {
    "text": "but let's first understand what is",
    "start": "45000",
    "end": "47700"
  },
  {
    "text": "Amazon devops group",
    "start": "47700",
    "end": "50780"
  },
  {
    "start": "50000",
    "end": "183000"
  },
  {
    "text": "devops Guru is a fully managed service",
    "start": "54480",
    "end": "56699"
  },
  {
    "text": "that uses machine learning informed by",
    "start": "56699",
    "end": "59399"
  },
  {
    "text": "years of experience from amazon.com and",
    "start": "59399",
    "end": "62340"
  },
  {
    "text": "AWS operational excellence",
    "start": "62340",
    "end": "64978"
  },
  {
    "text": "models can identify anomalous Behavior",
    "start": "64979",
    "end": "67920"
  },
  {
    "text": "such as increased latency error rates",
    "start": "67920",
    "end": "71280"
  },
  {
    "text": "and resource constraints and surface",
    "start": "71280",
    "end": "74100"
  },
  {
    "text": "critical issues that could cause",
    "start": "74100",
    "end": "75840"
  },
  {
    "text": "potential outages or service disruptions",
    "start": "75840",
    "end": "79260"
  },
  {
    "text": "it doesn't require you to have any",
    "start": "79260",
    "end": "81360"
  },
  {
    "text": "machine learning expertise to use it",
    "start": "81360",
    "end": "84720"
  },
  {
    "text": "once you sign up for the service it",
    "start": "84720",
    "end": "87000"
  },
  {
    "text": "automatically starts monitoring the data",
    "start": "87000",
    "end": "88979"
  },
  {
    "text": "and metrics to understand your",
    "start": "88979",
    "end": "90960"
  },
  {
    "text": "application's behavior",
    "start": "90960",
    "end": "92700"
  },
  {
    "text": "devops crew reduces noise and help focus",
    "start": "92700",
    "end": "95640"
  },
  {
    "text": "on highest severity issues with detailed",
    "start": "95640",
    "end": "98759"
  },
  {
    "text": "insights to provide a quicker mttr",
    "start": "98759",
    "end": "102960"
  },
  {
    "text": "the reactive insights of this capability",
    "start": "102960",
    "end": "105119"
  },
  {
    "text": "help you troubleshoot ongoing issues",
    "start": "105119",
    "end": "107640"
  },
  {
    "text": "affecting serverless applications",
    "start": "107640",
    "end": "109399"
  },
  {
    "text": "efficiently with actionable",
    "start": "109399",
    "end": "111780"
  },
  {
    "text": "recommendations that help you identify",
    "start": "111780",
    "end": "114720"
  },
  {
    "text": "and fix the root cost in the shortest",
    "start": "114720",
    "end": "116939"
  },
  {
    "text": "time possible",
    "start": "116939",
    "end": "119579"
  },
  {
    "text": "devops group for serverless also",
    "start": "119579",
    "end": "121740"
  },
  {
    "text": "provides proactive insights that help",
    "start": "121740",
    "end": "123899"
  },
  {
    "text": "you identify a wider range of",
    "start": "123899",
    "end": "125880"
  },
  {
    "text": "operational anomalies long before your",
    "start": "125880",
    "end": "128940"
  },
  {
    "text": "serverless application performance is",
    "start": "128940",
    "end": "130920"
  },
  {
    "text": "affected",
    "start": "130920",
    "end": "132180"
  },
  {
    "text": "it also gives you recommendations on how",
    "start": "132180",
    "end": "135120"
  },
  {
    "text": "to resolve the root cause of the issues",
    "start": "135120",
    "end": "138120"
  },
  {
    "text": "it enables developers to proactively",
    "start": "138120",
    "end": "140520"
  },
  {
    "text": "detect application issues before",
    "start": "140520",
    "end": "143040"
  },
  {
    "text": "an event that affects the customer",
    "start": "143040",
    "end": "144959"
  },
  {
    "text": "occurs",
    "start": "144959",
    "end": "146459"
  },
  {
    "text": "for example if provision concurrency is",
    "start": "146459",
    "end": "149700"
  },
  {
    "text": "set too low for a Lambda function and",
    "start": "149700",
    "end": "152340"
  },
  {
    "text": "traffic for this application is growing",
    "start": "152340",
    "end": "154319"
  },
  {
    "text": "devops group will detect the growing",
    "start": "154319",
    "end": "156660"
  },
  {
    "text": "traffic and the application latency",
    "start": "156660",
    "end": "158700"
  },
  {
    "text": "degradation and generate a proactive",
    "start": "158700",
    "end": "161340"
  },
  {
    "text": "Insight showing the issue when an issue",
    "start": "161340",
    "end": "164340"
  },
  {
    "text": "is detected devops grew for serverless",
    "start": "164340",
    "end": "166500"
  },
  {
    "text": "displays the finding in the devops group",
    "start": "166500",
    "end": "168540"
  },
  {
    "text": "console and sends notification using",
    "start": "168540",
    "end": "171000"
  },
  {
    "text": "Amazon event Bridge or Amazon simple",
    "start": "171000",
    "end": "173640"
  },
  {
    "text": "notification service",
    "start": "173640",
    "end": "175319"
  },
  {
    "text": "this allows developers to automatically",
    "start": "175319",
    "end": "177540"
  },
  {
    "text": "manage and take real-time action on the",
    "start": "177540",
    "end": "180840"
  },
  {
    "text": "discovered issues",
    "start": "180840",
    "end": "183300"
  },
  {
    "start": "183000",
    "end": "218000"
  },
  {
    "text": "devops group for serverless provides",
    "start": "183300",
    "end": "185160"
  },
  {
    "text": "proactive insights for Lambda and Amazon",
    "start": "185160",
    "end": "187560"
  },
  {
    "text": "dynamodp some of the operational issues",
    "start": "187560",
    "end": "190860"
  },
  {
    "text": "and the proactive insights that are",
    "start": "190860",
    "end": "192659"
  },
  {
    "text": "available today are Lambda concrete",
    "start": "192659",
    "end": "195480"
  },
  {
    "text": "executions reaching account limit Lambda",
    "start": "195480",
    "end": "199019"
  },
  {
    "text": "provision concurrency function limit",
    "start": "199019",
    "end": "200940"
  },
  {
    "text": "breached",
    "start": "200940",
    "end": "202500"
  },
  {
    "text": "account read write capacity for dynamodb",
    "start": "202500",
    "end": "205500"
  },
  {
    "text": "consumption reaching account limit",
    "start": "205500",
    "end": "207720"
  },
  {
    "text": "and dynamodb table read write consumed",
    "start": "207720",
    "end": "211260"
  },
  {
    "text": "capacity reaching table limit",
    "start": "211260",
    "end": "214620"
  },
  {
    "text": "now let's look at a typical serverless",
    "start": "214620",
    "end": "216900"
  },
  {
    "text": "application architecture",
    "start": "216900",
    "end": "219959"
  },
  {
    "text": "of API Gateway to serve both static and",
    "start": "219959",
    "end": "222840"
  },
  {
    "text": "dynamic content",
    "start": "222840",
    "end": "224280"
  },
  {
    "text": "you have Lambda functions talking with",
    "start": "224280",
    "end": "226680"
  },
  {
    "text": "other functions or databases such as",
    "start": "226680",
    "end": "229140"
  },
  {
    "text": "dynamodb",
    "start": "229140",
    "end": "230760"
  },
  {
    "text": "all this is generating a lot of metrics",
    "start": "230760",
    "end": "233760"
  },
  {
    "text": "logs and Trace data that is being sent",
    "start": "233760",
    "end": "237360"
  },
  {
    "text": "to dashboards or monitored via alarmed",
    "start": "237360",
    "end": "241140"
  },
  {
    "text": "by your itops teams",
    "start": "241140",
    "end": "244080"
  },
  {
    "text": "spikes in workloads fluctuations are",
    "start": "244080",
    "end": "246900"
  },
  {
    "text": "causing you to keep changing these",
    "start": "246900",
    "end": "249060"
  },
  {
    "text": "thresholds for alarms or keep a constant",
    "start": "249060",
    "end": "252780"
  },
  {
    "text": "eye for what's real and significant",
    "start": "252780",
    "end": "255239"
  },
  {
    "text": "versus what's not",
    "start": "255239",
    "end": "257940"
  },
  {
    "text": "take this example of serverless",
    "start": "257940",
    "end": "259560"
  },
  {
    "text": "architecture with API Gateway Lambda and",
    "start": "259560",
    "end": "262680"
  },
  {
    "text": "dynamodb your customers are experiencing",
    "start": "262680",
    "end": "266040"
  },
  {
    "text": "a problem with this app",
    "start": "266040",
    "end": "267780"
  },
  {
    "text": "you have configured your thresholds and",
    "start": "267780",
    "end": "270419"
  },
  {
    "text": "alarms well you see all three components",
    "start": "270419",
    "end": "273600"
  },
  {
    "text": "failing dynamodb throttling Lambda",
    "start": "273600",
    "end": "276960"
  },
  {
    "text": "function failing and API Gateway slammed",
    "start": "276960",
    "end": "279840"
  },
  {
    "text": "with 500 errors",
    "start": "279840",
    "end": "281639"
  },
  {
    "text": "to resolve this issue you would need to",
    "start": "281639",
    "end": "284639"
  },
  {
    "text": "understand the root cause of the issue",
    "start": "284639",
    "end": "286979"
  },
  {
    "text": "and what the side effects are",
    "start": "286979",
    "end": "289259"
  },
  {
    "text": "in this case even though the Lambda",
    "start": "289259",
    "end": "292320"
  },
  {
    "text": "function and the API Gateway endpoint",
    "start": "292320",
    "end": "294540"
  },
  {
    "text": "are both failing they are just side",
    "start": "294540",
    "end": "297300"
  },
  {
    "text": "effects of the root cause which is",
    "start": "297300",
    "end": "299940"
  },
  {
    "text": "reduced capacity of dynamodb table",
    "start": "299940",
    "end": "303479"
  },
  {
    "text": "after resolving the incident the",
    "start": "303479",
    "end": "305880"
  },
  {
    "text": "operator would have to spend more time",
    "start": "305880",
    "end": "307860"
  },
  {
    "text": "on a postmodern to identify the read",
    "start": "307860",
    "end": "310500"
  },
  {
    "text": "capacity of the dynamodb table being",
    "start": "310500",
    "end": "313259"
  },
  {
    "text": "decreased because of a bug in a previous",
    "start": "313259",
    "end": "315419"
  },
  {
    "text": "application release",
    "start": "315419",
    "end": "317100"
  },
  {
    "text": "this is the power of adding Amazon",
    "start": "317100",
    "end": "319259"
  },
  {
    "text": "devops Guru by reducing this Ops burden",
    "start": "319259",
    "end": "322380"
  },
  {
    "text": "using machine learning based anomaly",
    "start": "322380",
    "end": "324900"
  },
  {
    "text": "detectors",
    "start": "324900",
    "end": "325979"
  },
  {
    "text": "it monitors your application by",
    "start": "325979",
    "end": "328380"
  },
  {
    "text": "ingesting operational data coming from",
    "start": "328380",
    "end": "331020"
  },
  {
    "text": "cloudwatch and cloudtrail",
    "start": "331020",
    "end": "333180"
  },
  {
    "text": "in this example devops crew checks the",
    "start": "333180",
    "end": "336419"
  },
  {
    "text": "relevant events on cloudtrail and",
    "start": "336419",
    "end": "339120"
  },
  {
    "text": "Compares them with the operational",
    "start": "339120",
    "end": "340740"
  },
  {
    "text": "metrics from cloudwatch",
    "start": "340740",
    "end": "343139"
  },
  {
    "text": "based on this data when it detects the",
    "start": "343139",
    "end": "346080"
  },
  {
    "text": "anomaly it creates an Insight which",
    "start": "346080",
    "end": "349259"
  },
  {
    "text": "presents the relevant metrics so the",
    "start": "349259",
    "end": "351720"
  },
  {
    "text": "operator can quickly find and fix the",
    "start": "351720",
    "end": "354600"
  },
  {
    "text": "root cause of the incident",
    "start": "354600",
    "end": "356639"
  },
  {
    "text": "in this example architecture where all",
    "start": "356639",
    "end": "359820"
  },
  {
    "text": "three resources are showing up as",
    "start": "359820",
    "end": "361680"
  },
  {
    "text": "failing devops Guru cuts through the",
    "start": "361680",
    "end": "364139"
  },
  {
    "text": "Noise by identifying that someone has",
    "start": "364139",
    "end": "366720"
  },
  {
    "text": "changed the dynamodb table read capacity",
    "start": "366720",
    "end": "369139"
  },
  {
    "text": "just before the anomaly has detected and",
    "start": "369139",
    "end": "372660"
  },
  {
    "text": "provides a recommendation of rolling",
    "start": "372660",
    "end": "374520"
  },
  {
    "text": "back this change",
    "start": "374520",
    "end": "376680"
  },
  {
    "start": "376000",
    "end": "483000"
  },
  {
    "text": "let's take a look on how does the",
    "start": "376680",
    "end": "378479"
  },
  {
    "text": "service work",
    "start": "378479",
    "end": "379919"
  },
  {
    "text": "we start by having a collection of an",
    "start": "379919",
    "end": "382560"
  },
  {
    "text": "application either tagged for cloud",
    "start": "382560",
    "end": "384600"
  },
  {
    "text": "formation Stacks or enabling the service",
    "start": "384600",
    "end": "387900"
  },
  {
    "text": "across the region or organization",
    "start": "387900",
    "end": "390780"
  },
  {
    "text": "as we talked about we are consuming from",
    "start": "390780",
    "end": "393720"
  },
  {
    "text": "cloudwatch cloudtrail X-ray and RDS",
    "start": "393720",
    "end": "397139"
  },
  {
    "text": "performance insights these are the data",
    "start": "397139",
    "end": "400199"
  },
  {
    "text": "stores for the service the input signal",
    "start": "400199",
    "end": "402720"
  },
  {
    "text": "for the machine learning models",
    "start": "402720",
    "end": "405180"
  },
  {
    "text": "Amazon devops crew then takes the data",
    "start": "405180",
    "end": "408060"
  },
  {
    "text": "stores to analyze and look for anomalies",
    "start": "408060",
    "end": "410699"
  },
  {
    "text": "Behavior based on our machine learning",
    "start": "410699",
    "end": "413520"
  },
  {
    "text": "models from amazon.com and AWS",
    "start": "413520",
    "end": "417600"
  },
  {
    "text": "prior we talked about enabling the",
    "start": "417600",
    "end": "420120"
  },
  {
    "text": "service and using a cloud formation as a",
    "start": "420120",
    "end": "422520"
  },
  {
    "text": "method to collect a specify applications",
    "start": "422520",
    "end": "425880"
  },
  {
    "text": "it is also used from an event history",
    "start": "425880",
    "end": "428520"
  },
  {
    "text": "standpoint",
    "start": "428520",
    "end": "430319"
  },
  {
    "text": "the service tracks any stack deployments",
    "start": "430319",
    "end": "432840"
  },
  {
    "text": "to pull in this data and correlates a",
    "start": "432840",
    "end": "435780"
  },
  {
    "text": "deployment with issue with a possible",
    "start": "435780",
    "end": "438360"
  },
  {
    "text": "caused by a deployment",
    "start": "438360",
    "end": "440880"
  },
  {
    "text": "Amazon devops Guru then takes all this",
    "start": "440880",
    "end": "443400"
  },
  {
    "text": "input and produces an insight",
    "start": "443400",
    "end": "446220"
  },
  {
    "text": "an Insight is made up of three core",
    "start": "446220",
    "end": "448500"
  },
  {
    "text": "items metrics enrichment data which is",
    "start": "448500",
    "end": "452280"
  },
  {
    "text": "not static and evolves as the issue is",
    "start": "452280",
    "end": "454740"
  },
  {
    "text": "happening and aws's recommendations",
    "start": "454740",
    "end": "458940"
  },
  {
    "text": "devops Guru automatically correlates the",
    "start": "458940",
    "end": "461639"
  },
  {
    "text": "issue across various services and",
    "start": "461639",
    "end": "464160"
  },
  {
    "text": "resources",
    "start": "464160",
    "end": "466440"
  },
  {
    "text": "the service leverages SNS for",
    "start": "466440",
    "end": "468599"
  },
  {
    "text": "notifications and you can integrate with",
    "start": "468599",
    "end": "471180"
  },
  {
    "text": "OP Center and also third parties such as",
    "start": "471180",
    "end": "473940"
  },
  {
    "text": "pager Duty and obstainy",
    "start": "473940",
    "end": "476699"
  },
  {
    "text": "with SNS you don't need to monitor the",
    "start": "476699",
    "end": "479460"
  },
  {
    "text": "dashboard we bring the insights to you",
    "start": "479460",
    "end": "483419"
  },
  {
    "start": "483000",
    "end": "872000"
  },
  {
    "text": "with that let's go to the demo and see",
    "start": "483419",
    "end": "486000"
  },
  {
    "text": "the devops guru for serverless in action",
    "start": "486000",
    "end": "488520"
  },
  {
    "text": "for demo I will deploy a serverless",
    "start": "488520",
    "end": "490919"
  },
  {
    "text": "application as shown in this",
    "start": "490919",
    "end": "492599"
  },
  {
    "text": "architecture diagram using cloud",
    "start": "492599",
    "end": "494099"
  },
  {
    "text": "formation template",
    "start": "494099",
    "end": "495720"
  },
  {
    "text": "Amazon devops could automatically",
    "start": "495720",
    "end": "497639"
  },
  {
    "text": "ingests and analyzes metrics for all",
    "start": "497639",
    "end": "500340"
  },
  {
    "text": "resources it has been enabled for this",
    "start": "500340",
    "end": "502979"
  },
  {
    "text": "allows Amazon devops Guru to establish a",
    "start": "502979",
    "end": "505740"
  },
  {
    "text": "baseline or normal operating patterns",
    "start": "505740",
    "end": "508500"
  },
  {
    "text": "which enable the pre-training machine",
    "start": "508500",
    "end": "510479"
  },
  {
    "text": "learning models to detect deviations",
    "start": "510479",
    "end": "513839"
  },
  {
    "text": "to get started navigate to the devops",
    "start": "513839",
    "end": "516240"
  },
  {
    "text": "group console",
    "start": "516240",
    "end": "519080"
  },
  {
    "text": "and enable the service for your Lambda",
    "start": "523500",
    "end": "525660"
  },
  {
    "text": "based applications other supported",
    "start": "525660",
    "end": "527880"
  },
  {
    "text": "resources or your entire account",
    "start": "527880",
    "end": "531560"
  },
  {
    "text": "in this demo I'm using Cloud9 as my",
    "start": "542640",
    "end": "545220"
  },
  {
    "text": "development environment I have a cloud",
    "start": "545220",
    "end": "547500"
  },
  {
    "text": "formation template which I have used to",
    "start": "547500",
    "end": "549899"
  },
  {
    "text": "deploy the serverless application as",
    "start": "549899",
    "end": "551940"
  },
  {
    "text": "shown in the previous architecture",
    "start": "551940",
    "end": "553320"
  },
  {
    "text": "diagram in my AWS account",
    "start": "553320",
    "end": "555899"
  },
  {
    "text": "to simulate an issue I will go ahead and",
    "start": "555899",
    "end": "558420"
  },
  {
    "text": "reduce the read capacity units for my",
    "start": "558420",
    "end": "561060"
  },
  {
    "text": "dynamodb table to 1.",
    "start": "561060",
    "end": "565279"
  },
  {
    "text": "now I will use the terminal and update",
    "start": "568200",
    "end": "570420"
  },
  {
    "text": "the cloud formation stack using awcli",
    "start": "570420",
    "end": "575160"
  },
  {
    "text": "next let's wait for stack update to be",
    "start": "585899",
    "end": "588480"
  },
  {
    "text": "completed which will take few minutes",
    "start": "588480",
    "end": "592040"
  },
  {
    "text": "okay the stack update is completed",
    "start": "601620",
    "end": "604019"
  },
  {
    "text": "successfully now which means we have",
    "start": "604019",
    "end": "606360"
  },
  {
    "text": "successfully reduced the read capacity",
    "start": "606360",
    "end": "608519"
  },
  {
    "text": "units of our dynamodb table to 1.",
    "start": "608519",
    "end": "612300"
  },
  {
    "text": "now to generate the insights we need to",
    "start": "612300",
    "end": "616140"
  },
  {
    "text": "intentionally break the application and",
    "start": "616140",
    "end": "618540"
  },
  {
    "text": "inject failures",
    "start": "618540",
    "end": "620040"
  },
  {
    "text": "to do that I will deliver a very high",
    "start": "620040",
    "end": "622920"
  },
  {
    "text": "amount of HTTP traffic targeted at the",
    "start": "622920",
    "end": "625800"
  },
  {
    "text": "API Gateway",
    "start": "625800",
    "end": "628580"
  },
  {
    "text": "I have pre-created a python script which",
    "start": "633420",
    "end": "636060"
  },
  {
    "text": "when called repeatedly loops and HTTP",
    "start": "636060",
    "end": "638880"
  },
  {
    "text": "requests to the API invoking the Lambda",
    "start": "638880",
    "end": "641820"
  },
  {
    "text": "function and dynamodb table to read the",
    "start": "641820",
    "end": "644880"
  },
  {
    "text": "data",
    "start": "644880",
    "end": "645779"
  },
  {
    "text": "I will run the python script and create",
    "start": "645779",
    "end": "648180"
  },
  {
    "text": "four instances of it to create a search",
    "start": "648180",
    "end": "651360"
  },
  {
    "text": "in traffic to the API endpoint",
    "start": "651360",
    "end": "653880"
  },
  {
    "text": "this is required to generate the",
    "start": "653880",
    "end": "656160"
  },
  {
    "text": "appropriate traffic to generate",
    "start": "656160",
    "end": "657899"
  },
  {
    "text": "anomalous imitric in this application",
    "start": "657899",
    "end": "660420"
  },
  {
    "text": "stack",
    "start": "660420",
    "end": "662839"
  },
  {
    "text": "it takes at least 10 to 15 minutes to",
    "start": "667800",
    "end": "670380"
  },
  {
    "text": "see an operational insights generated in",
    "start": "670380",
    "end": "672660"
  },
  {
    "text": "devops Guru",
    "start": "672660",
    "end": "675440"
  },
  {
    "text": "while we keep sending HTTP requests to",
    "start": "678540",
    "end": "681180"
  },
  {
    "text": "our API endpoint devops Guru monitors",
    "start": "681180",
    "end": "684180"
  },
  {
    "text": "for anomalies log insights that provide",
    "start": "684180",
    "end": "687060"
  },
  {
    "text": "details about the metrics indicating an",
    "start": "687060",
    "end": "690120"
  },
  {
    "text": "anomaly and prints actionable",
    "start": "690120",
    "end": "692399"
  },
  {
    "text": "recommendations to mitigate the anomaly",
    "start": "692399",
    "end": "696920"
  },
  {
    "text": "under normal conditions devops Guru",
    "start": "703680",
    "end": "706380"
  },
  {
    "text": "dashboard will show the ongoing insights",
    "start": "706380",
    "end": "708600"
  },
  {
    "text": "counter to be zero",
    "start": "708600",
    "end": "711360"
  },
  {
    "text": "it monitors a high number of metrics",
    "start": "711360",
    "end": "713700"
  },
  {
    "text": "behind the scenes and offloads the",
    "start": "713700",
    "end": "715800"
  },
  {
    "text": "operator from manually monitoring any",
    "start": "715800",
    "end": "718019"
  },
  {
    "text": "counters or graphs",
    "start": "718019",
    "end": "720240"
  },
  {
    "text": "it raises an alert in the form of an",
    "start": "720240",
    "end": "722519"
  },
  {
    "text": "Insight only when anomaly occurs",
    "start": "722519",
    "end": "726360"
  },
  {
    "text": "let's select the ongoing insight to see",
    "start": "726360",
    "end": "729180"
  },
  {
    "text": "more details",
    "start": "729180",
    "end": "731959"
  },
  {
    "text": "the inside page opens and it displays",
    "start": "734279",
    "end": "736920"
  },
  {
    "text": "information relevant to the Insight",
    "start": "736920",
    "end": "739040"
  },
  {
    "text": "metrics events and recommended actions",
    "start": "739040",
    "end": "742500"
  },
  {
    "text": "for the issue",
    "start": "742500",
    "end": "744120"
  },
  {
    "text": "let's examine this page in more detail",
    "start": "744120",
    "end": "747240"
  },
  {
    "text": "at the top of the page",
    "start": "747240",
    "end": "749640"
  },
  {
    "text": "is the inside overview with a",
    "start": "749640",
    "end": "751800"
  },
  {
    "text": "description of what the Insight is about",
    "start": "751800",
    "end": "753779"
  },
  {
    "text": "and the severity of the issue",
    "start": "753779",
    "end": "757800"
  },
  {
    "text": "you also learn if the issue is ongoing",
    "start": "757800",
    "end": "760500"
  },
  {
    "text": "and when it started if the issue is not",
    "start": "760500",
    "end": "763500"
  },
  {
    "text": "happening anymore you can learn the end",
    "start": "763500",
    "end": "765959"
  },
  {
    "text": "date for that insight",
    "start": "765959",
    "end": "769220"
  },
  {
    "text": "next is the aggregated metric section",
    "start": "771600",
    "end": "774180"
  },
  {
    "text": "where it shows metrics for all the",
    "start": "774180",
    "end": "776700"
  },
  {
    "text": "resources that it detected anomalies in",
    "start": "776700",
    "end": "779399"
  },
  {
    "text": "dynamodb Lambda and API Gateway",
    "start": "779399",
    "end": "782880"
  },
  {
    "text": "note that depending upon your traffic",
    "start": "782880",
    "end": "784980"
  },
  {
    "text": "pattern Lambda settings Baseline traffic",
    "start": "784980",
    "end": "787740"
  },
  {
    "text": "the list of metrics may vary",
    "start": "787740",
    "end": "790320"
  },
  {
    "text": "in this case the timeline shows that an",
    "start": "790320",
    "end": "793139"
  },
  {
    "text": "anomaly for dynamodb started first and",
    "start": "793139",
    "end": "796079"
  },
  {
    "text": "was followed by API Gateway and Lambda",
    "start": "796079",
    "end": "799320"
  },
  {
    "text": "this helps us understand the cause and",
    "start": "799320",
    "end": "801600"
  },
  {
    "text": "symptoms and prioritize the right",
    "start": "801600",
    "end": "803760"
  },
  {
    "text": "anomaly investigation",
    "start": "803760",
    "end": "806899"
  },
  {
    "text": "relevant events are the next information",
    "start": "817560",
    "end": "819540"
  },
  {
    "text": "Box available on the page these are AWS",
    "start": "819540",
    "end": "823079"
  },
  {
    "text": "cloudtrail events that devops Guru uses",
    "start": "823079",
    "end": "825959"
  },
  {
    "text": "combined with cloudwatch metrics and",
    "start": "825959",
    "end": "828540"
  },
  {
    "text": "operational data to identify anomalous",
    "start": "828540",
    "end": "830880"
  },
  {
    "text": "behavior that created the insight",
    "start": "830880",
    "end": "834680"
  },
  {
    "text": "and finally on the page is the",
    "start": "838139",
    "end": "840120"
  },
  {
    "text": "recommendation information box where",
    "start": "840120",
    "end": "842160"
  },
  {
    "text": "devops Guru will output all the",
    "start": "842160",
    "end": "844260"
  },
  {
    "text": "generated recommendations to help you",
    "start": "844260",
    "end": "846060"
  },
  {
    "text": "address the issue you can use the",
    "start": "846060",
    "end": "848339"
  },
  {
    "text": "recommendations to learn the immediate",
    "start": "848339",
    "end": "850200"
  },
  {
    "text": "steps you can take to remediate the",
    "start": "850200",
    "end": "852540"
  },
  {
    "text": "issue",
    "start": "852540",
    "end": "854839"
  },
  {
    "text": "for one of the insights devops crew",
    "start": "857399",
    "end": "859500"
  },
  {
    "text": "recommends you tune the provision",
    "start": "859500",
    "end": "861240"
  },
  {
    "text": "concurrency for your Lambda function it",
    "start": "861240",
    "end": "863820"
  },
  {
    "text": "tells you to which value to set it based",
    "start": "863820",
    "end": "866339"
  },
  {
    "text": "on the past utilization of your function",
    "start": "866339",
    "end": "868139"
  },
  {
    "text": "you can also find the reasoning on why",
    "start": "868139",
    "end": "870600"
  },
  {
    "text": "devops could recommends this insight",
    "start": "870600",
    "end": "873000"
  },
  {
    "start": "872000",
    "end": "915000"
  },
  {
    "text": "so that's devops group for serverless",
    "start": "873000",
    "end": "875040"
  },
  {
    "text": "and how you can use to automatically",
    "start": "875040",
    "end": "877380"
  },
  {
    "text": "detect anomalous behavior of your",
    "start": "877380",
    "end": "879540"
  },
  {
    "text": "serverless application environment and",
    "start": "879540",
    "end": "882000"
  },
  {
    "text": "use ml power recommendations to",
    "start": "882000",
    "end": "884339"
  },
  {
    "text": "remediate any issues that were detected",
    "start": "884339",
    "end": "887040"
  },
  {
    "text": "I hope this episode gave you a good",
    "start": "887040",
    "end": "889199"
  },
  {
    "text": "sense about how devops Guru applies",
    "start": "889199",
    "end": "891560"
  },
  {
    "text": "artificial intelligence and machine",
    "start": "891560",
    "end": "894000"
  },
  {
    "text": "learning into your development and",
    "start": "894000",
    "end": "896399"
  },
  {
    "text": "operations workflows to improve the",
    "start": "896399",
    "end": "899100"
  },
  {
    "text": "operation performance and availability",
    "start": "899100",
    "end": "901199"
  },
  {
    "text": "of serverless applications",
    "start": "901199",
    "end": "903720"
  },
  {
    "text": "don't forget to watch the other devops",
    "start": "903720",
    "end": "906120"
  },
  {
    "text": "Crew episodes which also deep dives into",
    "start": "906120",
    "end": "908940"
  },
  {
    "text": "other use cases thanks for watching",
    "start": "908940",
    "end": "913399"
  }
]