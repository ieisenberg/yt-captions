[
  {
    "text": "in today's modern world your border is an interface between yourself and the consumer businesses today not only need",
    "start": "30",
    "end": "6509"
  },
  {
    "text": "an online presence but need to ensure they can deal with an ever-increasing hostile environment but its traditional",
    "start": "6509",
    "end": "12960"
  },
  {
    "text": "security enough given that modern day attacks mainly focus at the application layer in this session I'll illustrate",
    "start": "12960",
    "end": "18660"
  },
  {
    "text": "how you can leverage eight of your security services in conjunction with the wider AWS platform to create an",
    "start": "18660",
    "end": "25019"
  },
  {
    "text": "architecture that dynamically responds to what is occurring in your environment allowing you to build a self defending",
    "start": "25019",
    "end": "30539"
  },
  {
    "text": "border to protect your online assets let's quickly talk about the state of play in business today in this",
    "start": "30539",
    "end": "37500"
  },
  {
    "text": "ever-increasing digital world the frequency of attacks are increasing urine in but at the same time the attack",
    "start": "37500",
    "end": "44340"
  },
  {
    "text": "vectors are becoming more and more complex businesses are often pro longing",
    "start": "44340",
    "end": "49620"
  },
  {
    "text": "and extending out their security investments sweating out their asset there are more rules and regulations",
    "start": "49620",
    "end": "55530"
  },
  {
    "text": "that need to be adhered to and let's face it you know it can be difficult to be compliant and lastly we have a",
    "start": "55530",
    "end": "61980"
  },
  {
    "text": "plethora of disparate disconnected log sources that we struggle to extract value from so what are the threats",
    "start": "61980",
    "end": "70409"
  },
  {
    "text": "facing today's online websites look there are many so let's quickly talk",
    "start": "70409",
    "end": "75960"
  },
  {
    "text": "about them firstly we have the open web application security project style",
    "start": "75960",
    "end": "81210"
  },
  {
    "text": "attacks or I was for short the OWASP top 10 is a list of the 10 most dangerous",
    "start": "81210",
    "end": "86310"
  },
  {
    "text": "web application security exploits as well as effective methods for mitigation we're talking attacks on websites via",
    "start": "86310",
    "end": "93180"
  },
  {
    "text": "methods such as sequel injection cross-site request forgery insecure D serialization and so on the wasp top-10",
    "start": "93180",
    "end": "101970"
  },
  {
    "text": "was last updated in 2017 and it's no surprise that number one on the list is",
    "start": "101970",
    "end": "107399"
  },
  {
    "text": "injection injection occurs when a malicious actor can send hostile data to an interpreter and almost any point any",
    "start": "107399",
    "end": "114509"
  },
  {
    "text": "type of data can be that hostile data now injection is mainly found in legacy",
    "start": "114509",
    "end": "121680"
  },
  {
    "text": "applications but it can be found in sequel and no sequel queries alder XML parsers and SMTP and whilst you know",
    "start": "121680",
    "end": "129090"
  },
  {
    "text": "it's relatively simple detect sequel injection when performing static code analysis Injection can result in data loss",
    "start": "129090",
    "end": "135450"
  },
  {
    "text": "corruption of data disclosure to unauthorized parties and in some cases complete host takeover if we take a look",
    "start": "135450",
    "end": "142350"
  },
  {
    "text": "at this simplistic example here I've decided to log into a website I've entered in my username and password",
    "start": "142350",
    "end": "148020"
  },
  {
    "text": "which has translated from the web server into a T sequel query which is being executed against a database engine as we",
    "start": "148020",
    "end": "154920"
  },
  {
    "text": "can see above you know pretty innocent here but we know not everyone is",
    "start": "154920",
    "end": "160620"
  },
  {
    "text": "innocent and by not validating our user input in this case our malicious actor has been able to return all usernames",
    "start": "160620",
    "end": "167100"
  },
  {
    "text": "and passwords as a record set you know obviously this would require a bit of massaging to return as HTML but you get",
    "start": "167100",
    "end": "174270"
  },
  {
    "text": "the idea moving on from a wasp style attacks we have activist and crime syndicate these",
    "start": "174270",
    "end": "180870"
  },
  {
    "text": "style of attacks are becoming more prevalent and bolder in their target selection crime syndicates often target",
    "start": "180870",
    "end": "187740"
  },
  {
    "text": "high-profile sites in exchange for monetary funds pay X bitcoins by y date",
    "start": "187740",
    "end": "192900"
  },
  {
    "text": "or will take your site offline whereas hacktivists are more intent in changing the victims behavior",
    "start": "192900",
    "end": "199250"
  },
  {
    "text": "individuals can be collateral damage in this fight and regardless if you agree with the hacktivist political cause",
    "start": "199250",
    "end": "204870"
  },
  {
    "text": "their methodology and intent remains criminal costume mine back to earlier",
    "start": "204870",
    "end": "210959"
  },
  {
    "text": "this year as a security community we faced multi terabit level attacks being",
    "start": "210959",
    "end": "217110"
  },
  {
    "text": "performed by publicly accessible accessible memcache D service with UDP access left open a botnet is a",
    "start": "217110",
    "end": "224280"
  },
  {
    "text": "collection of Internet connected devices running one or more but botnets can be",
    "start": "224280",
    "end": "229530"
  },
  {
    "text": "used to perform distributed denial of service steal data and allows the",
    "start": "229530",
    "end": "234660"
  },
  {
    "text": "attacker access to the device and its connection now let's take a look at this",
    "start": "234660",
    "end": "239970"
  },
  {
    "text": "simplistic example now imagine is being scaled out to hundreds of thousands to millions of devices today botnets are",
    "start": "239970",
    "end": "246989"
  },
  {
    "text": "not only for their creators having most likely bought the malware that's created the bot today's owners will either use",
    "start": "246989",
    "end": "252300"
  },
  {
    "text": "the botnet for themselves or rent it out by the hour or another arbitrary metric",
    "start": "252300",
    "end": "257690"
  },
  {
    "text": "so how we fighting these threats now being security professionals of course",
    "start": "257690",
    "end": "262830"
  },
  {
    "text": "we're going to be using controls and we have various controls of",
    "start": "262830",
    "end": "267960"
  },
  {
    "text": "to provide countermeasures against these types of attacks but there are problems the traditional approaches of defending",
    "start": "267960",
    "end": "274410"
  },
  {
    "text": "one's border does not scale in terms of effort versus return firstly these proprietary systems are often incredibly",
    "start": "274410",
    "end": "280890"
  },
  {
    "text": "expensive requiring larger front costs as well as the use of professional services for implementation but more",
    "start": "280890",
    "end": "288000"
  },
  {
    "text": "importantly businesses the world over are adopting a DevOps methodology and these businesses rely on automated",
    "start": "288000",
    "end": "293820"
  },
  {
    "text": "deployments and they often see an opportunity to automate security as well dev SEC ops but these traditional",
    "start": "293820",
    "end": "300720"
  },
  {
    "text": "approaches often lack a multi vendor integration and lastly if your website",
    "start": "300720",
    "end": "305790"
  },
  {
    "text": "has a high release cadence you know hundreds of times per month how often is security getting in the way of genuine",
    "start": "305790",
    "end": "311970"
  },
  {
    "text": "transactions so enough theory here let's make this problem real let me introduce",
    "start": "311970",
    "end": "317550"
  },
  {
    "text": "you to the snowy unicorn elevator company their website is based on the",
    "start": "317550",
    "end": "323160"
  },
  {
    "text": "popular commercial off-the-shelf software WordPress but they have modified it extensively to work with their ERP and CRM platforms they have",
    "start": "323160",
    "end": "331380"
  },
  {
    "text": "just invented a revolutionary new type of elevator and because of this traffic to their website is exploding by orders",
    "start": "331380",
    "end": "337500"
  },
  {
    "text": "of magnitude month on month but with IT not being their core business function their security posture could be",
    "start": "337500",
    "end": "343500"
  },
  {
    "text": "described at best as block and tackle they are reactive they make manual",
    "start": "343500",
    "end": "348720"
  },
  {
    "text": "firewall changes they do nothing with their log artifacts and recently received an email ransom stating the",
    "start": "348720",
    "end": "354540"
  },
  {
    "text": "site will be brought offline this Sunday unless they pay a hundred bitcoins hopefully none of this sounds familiar",
    "start": "354540",
    "end": "359760"
  },
  {
    "text": "to anyone here all right so Before we jump into some demos let's just trace our architecture",
    "start": "359760",
    "end": "366210"
  },
  {
    "text": "from left to right users resolved their domain via Amazon route 53 to which the zone apex resolves",
    "start": "366210",
    "end": "373110"
  },
  {
    "text": "to an application load balancer and to ensure deployed capacity matches user",
    "start": "373110",
    "end": "378840"
  },
  {
    "text": "demand their front-end has been deployed in an auto scaling group on the backend they have an RDS database spread across",
    "start": "378840",
    "end": "385560"
  },
  {
    "text": "multiple availability zones to provide high availability they also have a",
    "start": "385560",
    "end": "390900"
  },
  {
    "text": "bastion host which is used for remote administration purposes and whilst they",
    "start": "390900",
    "end": "396030"
  },
  {
    "text": "can lock down nine ports between say their front-end Apache and their back-end my cecal be",
    "start": "396030",
    "end": "401129"
  },
  {
    "text": "an online business they need to keep port 80 and 443 open to everyone including bad actors today I'll be",
    "start": "401129",
    "end": "410039"
  },
  {
    "text": "leveraging Kali Linux and it will form the basis of our attacks for those who aren't familiar with Kali Linux : Linux",
    "start": "410039",
    "end": "416669"
  },
  {
    "text": "is a Debian derived Linux distribution perfect for penetration testing and forensic gardening it contains several",
    "start": "416669",
    "end": "423659"
  },
  {
    "text": "hundred tools that are prepackaged with the operating system that makes it perfect for prodding and poking other",
    "start": "423659",
    "end": "428699"
  },
  {
    "text": "systems it's available in 32-bit 64-bit and arm architectures and you can find",
    "start": "428699",
    "end": "434159"
  },
  {
    "text": "it in the AWS marketplace as I have done today so wearing my attackers hat what",
    "start": "434159",
    "end": "439529"
  },
  {
    "text": "attacks are we going to be performing today well the first thing I need to do is perform a little bit of application",
    "start": "439529",
    "end": "445919"
  },
  {
    "text": "discovery I'm looking for breadcrumbs of information here that will plant help me plan my attack so I'm looking for things",
    "start": "445919",
    "end": "451499"
  },
  {
    "text": "like HTTP headers script engine versions directory structures and so on I'm then going to crawl and extract as",
    "start": "451499",
    "end": "459509"
  },
  {
    "text": "much information as I can from them you know perhaps for a future phishing campaign on their customers I'll launch",
    "start": "459509",
    "end": "466589"
  },
  {
    "text": "some a wasp style attacks I'll let a serving of denial of service and the",
    "start": "466589",
    "end": "472589"
  },
  {
    "text": "cherry on top will be a brute-force attack can we switch the demo please all",
    "start": "472589",
    "end": "481079"
  },
  {
    "text": "right so here we are in Firefox and as per my description you know it's a two-tier stack with Apache on the front",
    "start": "481079",
    "end": "486599"
  },
  {
    "text": "end and my sequel on the back end it's pretty standard stuff and given that WordPress today constitutes over 30% of",
    "start": "486599",
    "end": "493259"
  },
  {
    "text": "websites worldwide hopefully this has synergies to many other sites you manage and keep secure yourself so the first",
    "start": "493259",
    "end": "500189"
  },
  {
    "text": "thing we'll be doing today is scraping this website and in order to do this we've crafted a simple scraping script",
    "start": "500189",
    "end": "506339"
  },
  {
    "text": "as you can see here it's just using a combination of curl and double you get nothing too fancy",
    "start": "506339",
    "end": "511849"
  },
  {
    "text": "so we'll kick this off a bit too fast",
    "start": "511849",
    "end": "518008"
  },
  {
    "text": "here then all right we'll slow it down later all right so while starts running let's take a look at their robots file",
    "start": "518009",
    "end": "524550"
  },
  {
    "text": "and look for me through someone who's familiar with WordPress and have been playing with it for ages having in the",
    "start": "524550",
    "end": "531059"
  },
  {
    "text": "robots file the disallow with the WP admin it's a pretty clear indicator that I think they're running WordPress",
    "start": "531059",
    "end": "536319"
  },
  {
    "text": "so I think they're running WordPress but I still don't know that but what I can do is leverage Kali Linux and one of the",
    "start": "536319",
    "end": "542290"
  },
  {
    "text": "built-in tools of Kali Linux is called WP scan so you can download WP scan as a docker container run on your Mac your",
    "start": "542290",
    "end": "549370"
  },
  {
    "text": "Windows PC it is built into Kali Linux but given WP scan does take some time to",
    "start": "549370",
    "end": "554949"
  },
  {
    "text": "run and we're time limited today we've run this before the session and WP scan is a wordpress vulnerability scanner so",
    "start": "554949",
    "end": "561790"
  },
  {
    "text": "we've run this just before the session and what we can deduce based on the output of this is their WordPress",
    "start": "561790",
    "end": "569949"
  },
  {
    "text": "version is four point seven nine so they're a little bit behind on their WordPress patching earlier above we've",
    "start": "569949",
    "end": "575350"
  },
  {
    "text": "got a PHP version is 7.0 1 6 there is a vulnerability in versions of WordPress",
    "start": "575350",
    "end": "581319"
  },
  {
    "text": "less than or equal to four point nine four now the current version is four point nine five and there's some more",
    "start": "581319",
    "end": "587620"
  },
  {
    "text": "vulnerabilities and finally they've got a theme Brooklyn and a plug-in called",
    "start": "587620",
    "end": "594339"
  },
  {
    "text": "apartment management in their WordPress version now the plugin that was detected is called apartment management now",
    "start": "594339",
    "end": "601569"
  },
  {
    "text": "apartment management is a wordpress plugin that has been designed to manage building maintenance tasks the snow",
    "start": "601569",
    "end": "607870"
  },
  {
    "text": "unicorn elevator company have repurposed this plugin not to manage building and maintenance tasks but to be able to",
    "start": "607870",
    "end": "615490"
  },
  {
    "text": "manage the maintenance tasks of their elevators and one of the functions of",
    "start": "615490",
    "end": "620910"
  },
  {
    "text": "this plug-in is the ability to send private messages as we can see here if",
    "start": "620910",
    "end": "626199"
  },
  {
    "text": "anyone decode this message please reach out afterwards um so the ability to send",
    "start": "626199",
    "end": "632079"
  },
  {
    "text": "private messages so why am i showing you this well the reason I'm showing you this is",
    "start": "632079",
    "end": "637809"
  },
  {
    "text": "whilst WP scan doesn't think this plug-in is vulnerable I've spent a bit of time probably a",
    "start": "637809",
    "end": "642850"
  },
  {
    "text": "better part of a few days and um crafted some queries we're gonna perform a multi stage sequel injection now it's not as",
    "start": "642850",
    "end": "650829"
  },
  {
    "text": "simple as just running this directly against the database engine because you know after all port 3306 is not publicly",
    "start": "650829",
    "end": "657610"
  },
  {
    "text": "exposed and in order for this to be successful I need an injection vector and that is going to be the apartment",
    "start": "657610",
    "end": "663939"
  },
  {
    "text": "management private messaging system and to make things a little bit more complicated I need a multi field",
    "start": "663939",
    "end": "670210"
  },
  {
    "text": "multirow record set to return as a single field with a single row so I've had to encode things and you know do all",
    "start": "670210",
    "end": "677050"
  },
  {
    "text": "sorts of our joins etc so the first query we're going to run is going to",
    "start": "677050",
    "end": "682150"
  },
  {
    "text": "return all the tables contained within their WordPress database and what stands",
    "start": "682150",
    "end": "690070"
  },
  {
    "text": "out to me here is this accounts table because it doesn't have the same WP underscore prefix as the other tables in",
    "start": "690070",
    "end": "697150"
  },
  {
    "text": "their database now I want to know more information about this so for any of you who are familiar with my sequel or a",
    "start": "697150",
    "end": "703660"
  },
  {
    "text": "relational database you can take a look at the information schema so we'll run the next query and what this is showing",
    "start": "703660",
    "end": "712390"
  },
  {
    "text": "is the fields contained within this table and what this shows is this table",
    "start": "712390",
    "end": "720820"
  },
  {
    "text": "contains three fields name date of birth and address so now since I know what",
    "start": "720820",
    "end": "727150"
  },
  {
    "text": "fields are contained in this table we can run our next query so look above the URL is the actual sequel query and in",
    "start": "727150",
    "end": "733540"
  },
  {
    "text": "the URL is that encoded to execute against the partner management so now look since I know what the fields are we",
    "start": "733540",
    "end": "741160"
  },
  {
    "text": "can extract this information and just like that they have gone from having a",
    "start": "741160",
    "end": "746260"
  },
  {
    "text": "you know okay day to having a terrible day personal identifiable information has just been disclosed including first",
    "start": "746260",
    "end": "753130"
  },
  {
    "text": "names last names and date of birth you know not a good day for them at all",
    "start": "753130",
    "end": "759000"
  },
  {
    "text": "now WP scan mentioned before that there was a vulnerability in versions of WordPress equal to less than or equal to",
    "start": "759540",
    "end": "767020"
  },
  {
    "text": "4.9 for now 4.95 is the current version so we're not going to tail what's inside",
    "start": "767020",
    "end": "774490"
  },
  {
    "text": "the script but suffice to say being responsible for a very small payload",
    "start": "774490",
    "end": "779650"
  },
  {
    "text": "that we're sending Apache Apache is having to respond back you know with a huge payload so even if we can't take",
    "start": "779650",
    "end": "785740"
  },
  {
    "text": "this site offline we can cause him significant financial pain by increasing",
    "start": "785740",
    "end": "791080"
  },
  {
    "text": "their outbound bandwidth by hundreds of megabits per second so we're back in Firefox here and we've reloaded the site",
    "start": "791080",
    "end": "797770"
  },
  {
    "text": "so what I hope will happen here is website will slow down come to a crawl",
    "start": "797770",
    "end": "802779"
  },
  {
    "text": "and eventually give up",
    "start": "802779",
    "end": "806970"
  },
  {
    "text": "so it's definitely taking its time we may need to come back to this or look",
    "start": "824140",
    "end": "832990"
  },
  {
    "text": "can we try amplifying this from a foreign it form Edition from an additional session from Kali Linux",
    "start": "832990",
    "end": "840300"
  },
  {
    "text": "all right so look it did take a bit of time but just like that all nodes in their auto scaling group because",
    "start": "847260",
    "end": "852910"
  },
  {
    "text": "remember they're running auto scaling I'm now offline so every node is now unhealthy their website is completely",
    "start": "852910",
    "end": "859270"
  },
  {
    "text": "offline so I mentioned also to before",
    "start": "859270",
    "end": "865180"
  },
  {
    "text": "that their architecture contains a bastion host now I know it's not possible to query a DNS zone for an a",
    "start": "865180",
    "end": "871690"
  },
  {
    "text": "record that you don't know but you know in the wild west of the internet IP scans with TCP fingerprinting occur at",
    "start": "871690",
    "end": "878710"
  },
  {
    "text": "disturbingly high rates so we're running a port scan over there Bastion host and what this is showing us is that port",
    "start": "878710",
    "end": "884800"
  },
  {
    "text": "3389 is open and for those who aren't familiar with port 3389 port 3389 is",
    "start": "884800",
    "end": "890770"
  },
  {
    "text": "used for remote desktop protocol which is the protocol used to remotely manage Windows servers so for good measure",
    "start": "890770",
    "end": "897100"
  },
  {
    "text": "we're going to perform a brute-force attack so we're going to use Hydra which again is part of carly linux i've",
    "start": "897100",
    "end": "902380"
  },
  {
    "text": "downloaded a password file from git containing 2.1 million passwords I'm going to assume the standard Windows",
    "start": "902380",
    "end": "908410"
  },
  {
    "text": "administrator username and we're just going to iterate through this and leave this running can we switch back to the",
    "start": "908410",
    "end": "913660"
  },
  {
    "text": "slides please all right so what did you guys think of this demo",
    "start": "913660",
    "end": "919870"
  },
  {
    "text": "all the trademarks of an expert UI design team right look for a business",
    "start": "919870",
    "end": "925480"
  },
  {
    "text": "relying on its online presence one guy with a laptop over there has caused chaos their website is currently offline",
    "start": "925480",
    "end": "932710"
  },
  {
    "text": "they cannot manage orders they cannot manage their inventory personal identifiable information was",
    "start": "932710",
    "end": "938980"
  },
  {
    "text": "just breached and with the increase in data breach notification laws around the world this could have a real serious",
    "start": "938980",
    "end": "944110"
  },
  {
    "text": "consequences for them you know it could be the end for them but what's really scary is this all flew under the radar",
    "start": "944110",
    "end": "949750"
  },
  {
    "text": "and it's clear if we're going to climb up the InfoSec maturity curve we really",
    "start": "949750",
    "end": "955480"
  },
  {
    "text": "need a smarter approach approach and in order to do that we need some new tools and ideally as a developer I want to",
    "start": "955480",
    "end": "964750"
  },
  {
    "text": "keep my request as far away from my origin as possible not only to improve my security posture but to improve",
    "start": "964750",
    "end": "971410"
  },
  {
    "text": "performance and the first tool I'll be adding today is a double shield a diverse shield is a fully managed",
    "start": "971410",
    "end": "977230"
  },
  {
    "text": "distributed denial-of-service protection service let's guards applications on AWS aw shield",
    "start": "977230",
    "end": "984100"
  },
  {
    "text": "provides automatic always on inline mitigation so there is no need to contact eight of your support to benefit",
    "start": "984100",
    "end": "990579"
  },
  {
    "text": "from DDoS protection it comes in two flavors standard and advanced shield",
    "start": "990579",
    "end": "995680"
  },
  {
    "text": "standard protects against most commonly and frequently occurring Network and transport layer attacks and what's more",
    "start": "995680",
    "end": "1001620"
  },
  {
    "text": "it is completely free however when you combine cloud front with Amazon route 53",
    "start": "1001620",
    "end": "1007589"
  },
  {
    "text": "and shield standard you receive comprehensive protection against all known layer three and four attacks for",
    "start": "1007589",
    "end": "1014939"
  },
  {
    "text": "more advanced protection targeting your application you can subscribe to shield advanced so remember us in the previous",
    "start": "1014939",
    "end": "1024030"
  },
  {
    "text": "demonstration or our malicious actor with these botnet army well with shield these requests are going to be dropped",
    "start": "1024030",
    "end": "1030449"
  },
  {
    "text": "at one of our hundred and thirty plus edge locations around the world the next",
    "start": "1030449",
    "end": "1036178"
  },
  {
    "text": "tool I'm going to add is a double swath in a degree swath is a web application firewall designed to safeguard your",
    "start": "1036179",
    "end": "1042449"
  },
  {
    "text": "applications from common exploits that could compromise security consume excessive resources and so on it",
    "start": "1042449",
    "end": "1050490"
  },
  {
    "text": "contains a full-featured API so you can tie a double swath in with your dev sec ops tool chain so from initial creation",
    "start": "1050490",
    "end": "1058020"
  },
  {
    "text": "through the deployment and maintenance of rules I mentioned I washed top ten earlier well with a double swath you can",
    "start": "1058020",
    "end": "1063720"
  },
  {
    "text": "mitigate against all known I was top ten vulnerabilities it just doesn't mitigate against knowing keywords or patterns it",
    "start": "1063720",
    "end": "1070260"
  },
  {
    "text": "performs your old decoding to prevent encoding flying under the radar before I",
    "start": "1070260",
    "end": "1075630"
  },
  {
    "text": "was pretty successful in launching a multi-stage sequel injection you know this took a lot of time and it",
    "start": "1075630",
    "end": "1081030"
  },
  {
    "text": "flew past and built in defenses of WordPress but you know once again with their new tools we're able to block",
    "start": "1081030",
    "end": "1087120"
  },
  {
    "text": "these and the same thing goes for any of the other hosts top ten vulnerabilities whilst AWS wife isn't going to be a",
    "start": "1087120",
    "end": "1092909"
  },
  {
    "text": "silver bullet for laps coding standards it is going to buy you time while your developers plug those gaps or you wait",
    "start": "1092909",
    "end": "1098880"
  },
  {
    "text": "for a new version from your software vendor so we've all been in the security",
    "start": "1098880",
    "end": "1105000"
  },
  {
    "text": "caper long enough to know what I've shown you thus far yeah it really isn't game-changing and you're right",
    "start": "1105000",
    "end": "1112230"
  },
  {
    "text": "you know whilst these approaches may be better than what's traditionally available it is still a game of cat and",
    "start": "1112230",
    "end": "1118380"
  },
  {
    "text": "mouse and whilst you struggle to get one step ahead malicious actors are finding new and innovative ways to attack your",
    "start": "1118380",
    "end": "1123929"
  },
  {
    "text": "organization so I didn't come here today to teach you guys how to build a better",
    "start": "1123929",
    "end": "1130740"
  },
  {
    "text": "candle we're here today how to build a light bulb self defending borders so we",
    "start": "1130740",
    "end": "1138059"
  },
  {
    "text": "have some new architecture here and the key to our architecture is a wsof but",
    "start": "1138059",
    "end": "1143100"
  },
  {
    "text": "more specifically the web ACR which will act as a central inspection and decisioning point for all incoming traffic the protective functions of this",
    "start": "1143100",
    "end": "1150210"
  },
  {
    "text": "architecture will determine what rules get applied and what rules get removed aw suave as well as other services",
    "start": "1150210",
    "end": "1156270"
  },
  {
    "text": "contained within our architecture our domain is now resolving to an Amazon CloudFront distribution which is being",
    "start": "1156270",
    "end": "1163200"
  },
  {
    "text": "protected by shield to allow only port 80 and 443 traffic CloudFront is handling both static and dynamic content",
    "start": "1163200",
    "end": "1169440"
  },
  {
    "text": "and for content that cannot be delivered at the edge it will be retrieved from our origin which is our application load",
    "start": "1169440",
    "end": "1175710"
  },
  {
    "text": "balancer and to further increase our security posture our application load balancer is set as such to only accept",
    "start": "1175710",
    "end": "1182010"
  },
  {
    "text": "requests originating from Amazon CloudFront just as a saying goes if",
    "start": "1182010",
    "end": "1188340"
  },
  {
    "text": "you're not keeping score well it's just practice all logs generated by CloudFront our application load balancer",
    "start": "1188340",
    "end": "1195540"
  },
  {
    "text": "and our web servers apache are being pushed into an amazon s3 bucket which will be ingested by our architecture to",
    "start": "1195540",
    "end": "1201660"
  },
  {
    "text": "drive operational intelligence and lastly we have our honeypot endpoint which is a security mechanism designed",
    "start": "1201660",
    "end": "1207960"
  },
  {
    "text": "to lure and deflect incoming attacks I chose WordPress today not only because it's popular but because there is plenty",
    "start": "1207960",
    "end": "1214590"
  },
  {
    "text": "of collateral available online on how to compromise and deface an unpatched unsupported version of WordPress our",
    "start": "1214590",
    "end": "1221280"
  },
  {
    "text": "honeypot will detect inbound requests from content scrapers and bad BOTS don't obey our robots file as well as those",
    "start": "1221280",
    "end": "1227250"
  },
  {
    "text": "trying to access known application exploits to which we will take action so",
    "start": "1227250",
    "end": "1232650"
  },
  {
    "text": "I'm going to pause here and change gear because this is where this session gets real we know AWS provides a suite of",
    "start": "1232650",
    "end": "1239340"
  },
  {
    "text": "best-of-breed security services but we provide a portfolio of building blocks to help you architect and",
    "start": "1239340",
    "end": "1245639"
  },
  {
    "text": "develop robust security practices there's Amazon sqs and Amazon SNS are fully managed queuing and messaging",
    "start": "1245639",
    "end": "1252029"
  },
  {
    "text": "platforms to help decouple your architectures there's dynamodb and Amazon s3 are",
    "start": "1252029",
    "end": "1257279"
  },
  {
    "text": "durable and scalable storage services perfect for audit trails and logs and I've also listed quite a few non",
    "start": "1257279",
    "end": "1264570"
  },
  {
    "text": "security related services and yes this is a security session and yes it's on",
    "start": "1264570",
    "end": "1270239"
  },
  {
    "text": "purpose and that's because it's 2018 and in 2018 security can no longer be looked",
    "start": "1270239",
    "end": "1276209"
  },
  {
    "text": "at in isolation and it's these services that really help empower you to build modern robust security architectures the",
    "start": "1276209",
    "end": "1282450"
  },
  {
    "text": "key to adding smart into our border today is the use of AWS lambda and eight",
    "start": "1282450",
    "end": "1287519"
  },
  {
    "text": "of your step functions these two services are giving us a capability to programmatically drive the configuration",
    "start": "1287519",
    "end": "1292799"
  },
  {
    "text": "of AWS and external services plus the capability to avoid false positives now",
    "start": "1292799",
    "end": "1299129"
  },
  {
    "text": "there might be a few of us in the room who aren't that familiar with lambda and step functions and look that's okay",
    "start": "1299129",
    "end": "1304169"
  },
  {
    "text": "let's just drop to a quick 101 overview AWS lambda is a service compute service",
    "start": "1304169",
    "end": "1310739"
  },
  {
    "text": "that runs your code in response to events in fact it can run your code in response to many events such as a file",
    "start": "1310739",
    "end": "1317549"
  },
  {
    "text": "upload to Amazon s3 state change via 8 of your step functions or a HTTP request",
    "start": "1317549",
    "end": "1323489"
  },
  {
    "text": "with Amazon API gateway the code you write for lambda is called a lambda function and it is ready to run as soon",
    "start": "1323489",
    "end": "1330509"
  },
  {
    "text": "as it's triggered service means a simple but useable primitive your code as a",
    "start": "1330509",
    "end": "1336809"
  },
  {
    "text": "lambda function with nothing that looks like a server or a container there is no",
    "start": "1336809",
    "end": "1343259"
  },
  {
    "text": "need to worry about provisioning configuring and securing servers and for",
    "start": "1343259",
    "end": "1349079"
  },
  {
    "text": "the Microsoft people in the room no more Patch Tuesday availability and scalability is managed by us and unlike",
    "start": "1349079",
    "end": "1356509"
  },
  {
    "text": "on-premises container or ec2 you don't pay for idle you pay for compute time",
    "start": "1356509",
    "end": "1362789"
  },
  {
    "text": "which is a time it takes your functions to execute in units of 100 milliseconds and that is why lambda is perfect for",
    "start": "1362789",
    "end": "1369749"
  },
  {
    "text": "our event-driven architecture equally as important though is eight of your step functions AWS step functions is part of",
    "start": "1369749",
    "end": "1376679"
  },
  {
    "text": "the eight of your service family it makes it really easy to orchestrate a lambda functions for service",
    "start": "1376679",
    "end": "1381730"
  },
  {
    "text": "applications if you're using lambda today a bit your applications have more than one function one endpoint one",
    "start": "1381730",
    "end": "1388060"
  },
  {
    "text": "module in fact it's common to have lots of functions and that's where step functions comes in step functions is a",
    "start": "1388060",
    "end": "1394240"
  },
  {
    "text": "reliable way to step through the functions of your application to ensure they run in the order as prescribed step",
    "start": "1394240",
    "end": "1400750"
  },
  {
    "text": "functions triggers and tracks each step so if an issue does go wrong you can quickly hone in and debug",
    "start": "1400750",
    "end": "1406390"
  },
  {
    "text": "so why step functions today I'm using step functions as a common architectural",
    "start": "1406390",
    "end": "1412240"
  },
  {
    "text": "pattern but let's quickly talk through the use case with our honeypot and it all starts when a request to our",
    "start": "1412240",
    "end": "1418030"
  },
  {
    "text": "honeypot is made so ap ID gateway is going to fulfill that request an API gateway is going to proxy that request",
    "start": "1418030",
    "end": "1423940"
  },
  {
    "text": "through to our lambda function our lambda function is going to extract the IP address and the HTTP user agent and",
    "start": "1423940",
    "end": "1430330"
  },
  {
    "text": "it's going to pass this information and a few others into our state machine and the first thing your state machine will",
    "start": "1430330",
    "end": "1436780"
  },
  {
    "text": "do is try and deem have I seen as a tack type before and it will do so by comparing the HTTP user agent against",
    "start": "1436780",
    "end": "1443890"
  },
  {
    "text": "the dynamodb table if there's a match we will automatically add the IP address into eight of your soif otherwise we're",
    "start": "1443890",
    "end": "1451150"
  },
  {
    "text": "going to contact our InfoSec team and we're going to wait we're gonna ask them to manually review this and assuming",
    "start": "1451150",
    "end": "1457150"
  },
  {
    "text": "they deem this to be a malicious HTTP user agent we will then update dynamodb put the",
    "start": "1457150",
    "end": "1463150"
  },
  {
    "text": "user agent in and add the IP address into AWS woth what I've built here is a",
    "start": "1463150",
    "end": "1468190"
  },
  {
    "text": "reusable an extendable pattern that could be extended with from multiple inputs driving multiple outputs and we",
    "start": "1468190",
    "end": "1474190"
  },
  {
    "text": "will be used throughout our self-defending architecture I'll go back",
    "start": "1474190",
    "end": "1479950"
  },
  {
    "text": "for you sir you're right",
    "start": "1479950",
    "end": "1483419"
  },
  {
    "text": "can we switch a demo please all right so",
    "start": "1488620",
    "end": "1493700"
  },
  {
    "text": "we're back in Firefox here we've got the same website we've got a different URL in the corner it's self-defending TSU BC",
    "start": "1493700",
    "end": "1500059"
  },
  {
    "text": "calm it is the same website it's got the same robots file everything's are saying but look don't",
    "start": "1500059",
    "end": "1507200"
  },
  {
    "text": "take my word for this let's take a look at the results of WP scan to which we also ran earlier and to make things a",
    "start": "1507200",
    "end": "1514430"
  },
  {
    "text": "little bit clearer let's diff the results in the left in red we have our original architecture in",
    "start": "1514430",
    "end": "1520220"
  },
  {
    "text": "the right in green we have our self defending architecture we can see that PHP version is still the same the",
    "start": "1520220",
    "end": "1527870"
  },
  {
    "text": "WordPress version is still the same we've got the same vulnerabilities",
    "start": "1527870",
    "end": "1533170"
  },
  {
    "text": "different URLs etc but all in all it's the same but I'm not sure for those who",
    "start": "1533860",
    "end": "1540080"
  },
  {
    "text": "are paying attention above we've got some bits of different information here we now have Amazon CloudFront",
    "start": "1540080",
    "end": "1545960"
  },
  {
    "text": "sitting in the HTTP headers and by virtue of using cloud front with route 53 we're protected by shield basic and",
    "start": "1545960",
    "end": "1552710"
  },
  {
    "text": "all the features that shield basic provides so before I was pretty successful in launching a multi-stage",
    "start": "1552710",
    "end": "1558200"
  },
  {
    "text": "sequel injection let's try that once again",
    "start": "1558200",
    "end": "1562540"
  },
  {
    "text": "so there's gone from having a terrible day to being able to detect take",
    "start": "1568140",
    "end": "1573809"
  },
  {
    "text": "programmatic action and block this alright so look that didn't work WP scan still mentioned in the results",
    "start": "1573809",
    "end": "1580890"
  },
  {
    "text": "that we're still vulnerable for a denial of service attack so we're gonna run the",
    "start": "1580890",
    "end": "1588540"
  },
  {
    "text": "same script targeting ourself defending architecture will run this from multiple SSH sessions in order to amplify the",
    "start": "1588540",
    "end": "1595260"
  },
  {
    "text": "attack and whilst this is running let's jump back into Firefox and in order to",
    "start": "1595260",
    "end": "1601350"
  },
  {
    "text": "quantify the performance of this website let's leverage Firefox inspector so we",
    "start": "1601350",
    "end": "1612750"
  },
  {
    "text": "will refresh the page not only is the",
    "start": "1612750",
    "end": "1620910"
  },
  {
    "text": "website online but it is still extremely performant and that is because shield standard and cloud front are dropping",
    "start": "1620910",
    "end": "1626010"
  },
  {
    "text": "these requests are 130 plus edge locations all right so now let's try and",
    "start": "1626010",
    "end": "1633270"
  },
  {
    "text": "Reese crepe this web site so it will open up our scraping script will pause",
    "start": "1633270",
    "end": "1643410"
  },
  {
    "text": "there Marcus just for a moment look and as you can see it's the same script as",
    "start": "1643410",
    "end": "1648809"
  },
  {
    "text": "before we're using curl we're iterating through a loop and we're pulling back some information with W get nothing too",
    "start": "1648809",
    "end": "1656160"
  },
  {
    "text": "special going on here all right so we'll kick that off and whilst that's running",
    "start": "1656160",
    "end": "1661190"
  },
  {
    "text": "let's jump back into Firefox for a second let's take a look at their robots file now based on the robots file and",
    "start": "1661190",
    "end": "1670410"
  },
  {
    "text": "the disallow section compliant scripts and spiders should not go there but the",
    "start": "1670410",
    "end": "1675450"
  },
  {
    "text": "thing is I'm a scraper and I simply don't care so I'm trying to scrape and",
    "start": "1675450",
    "end": "1680910"
  },
  {
    "text": "extract as much information as I can now whilst I was just talking then my phone",
    "start": "1680910",
    "end": "1686520"
  },
  {
    "text": "has just started vibrating and lo and behold I've received a message now I alluded to the fact earlier I'm using",
    "start": "1686520",
    "end": "1692970"
  },
  {
    "text": "Amazon simple notification service today not only to send a message to my phone",
    "start": "1692970",
    "end": "1698790"
  },
  {
    "text": "but I'm using it in a fan-out method send messages to my email as well so as we can see here we've received an email",
    "start": "1698790",
    "end": "1705940"
  },
  {
    "text": "saying a honeypot has activity has been detected we've got the IP address 54 2 5",
    "start": "1705940",
    "end": "1713440"
  },
  {
    "text": "2 1 5 6 11 and the user agent W get one point one nine point four and the reason",
    "start": "1713440",
    "end": "1722050"
  },
  {
    "text": "we got this email is because we haven't seen this user agent before and we can validate what's taking place in a few",
    "start": "1722050",
    "end": "1727720"
  },
  {
    "text": "ways we can drop back in the carly linux here and we can take a look at the results of our scraping script and we can see",
    "start": "1727720",
    "end": "1738880"
  },
  {
    "text": "lambda or AP our gateway has proxied the request through to our lambda function and a lambda function has returned you",
    "start": "1738880",
    "end": "1744790"
  },
  {
    "text": "know a cheeky message thanks for the visit with us I think I removed the smiley face thanks for the visit and the",
    "start": "1744790",
    "end": "1749950"
  },
  {
    "text": "IP address now we got this message because actually we'll jump in the step",
    "start": "1749950",
    "end": "1758530"
  },
  {
    "text": "functions right now so what this is also done has started a SAN active running state machine so we're in the step",
    "start": "1758530",
    "end": "1765340"
  },
  {
    "text": "functions console here and we can see that our state machine has been initiated with a payload of JSON data",
    "start": "1765340",
    "end": "1772030"
  },
  {
    "text": "we've got the IP address the user agent and some other bits of arbitrary details",
    "start": "1772030",
    "end": "1778090"
  },
  {
    "text": "and we're currently in a wait condition as indicated by the Box in blue here and",
    "start": "1778090",
    "end": "1783510"
  },
  {
    "text": "the reason we're in a white condition is because we haven't seen this attack type before and we can validate this by going",
    "start": "1783510",
    "end": "1789820"
  },
  {
    "text": "to our console here and has crafted a script using the aid of your cell line so I'm asking you know asking dynamodb",
    "start": "1789820",
    "end": "1796450"
  },
  {
    "text": "do you have any records with the user agent of W get one point one nine point four we've no records so what we can now",
    "start": "1796450",
    "end": "1804700"
  },
  {
    "text": "do where you know we've come to the conclusion this is malicious we're going to go back into our email and we're",
    "start": "1804700",
    "end": "1809830"
  },
  {
    "text": "going to approve this and what's going to happen is the state machine task token is going to be passed back in via",
    "start": "1809830",
    "end": "1815020"
  },
  {
    "text": "API gateway API gateway is going to pass this through to our lambda function which is going to call our state machine",
    "start": "1815020",
    "end": "1820600"
  },
  {
    "text": "back and execute the next lambda function update worth bad bot ACL which",
    "start": "1820600",
    "end": "1825850"
  },
  {
    "text": "it now has and we can validate this you know via a plethora of ways we can let's",
    "start": "1825850",
    "end": "1831790"
  },
  {
    "text": "let's go to the command line we you know we can look at the console here now IP address is now listed we",
    "start": "1831790",
    "end": "1839400"
  },
  {
    "text": "have the IP address of our column Linux instance if we jump back to the console",
    "start": "1839400",
    "end": "1844679"
  },
  {
    "text": "and take a look at a dynamo DV table so",
    "start": "1844679",
    "end": "1849720"
  },
  {
    "text": "now rather than returning zero records this user agent is listed so if we get a",
    "start": "1849720",
    "end": "1855240"
  },
  {
    "text": "subsequent attack we're automatically going to ban any IPS with this user agent who hits our site but more",
    "start": "1855240",
    "end": "1861540"
  },
  {
    "text": "importantly I can just rerun the script rather than taking minutes to run and returning HTTP to hundreds this is now",
    "start": "1861540",
    "end": "1869190"
  },
  {
    "text": "only going to take a shoot a few short seconds and return HTTP 404s can when",
    "start": "1869190",
    "end": "1880559"
  },
  {
    "text": "you switch back to the slides place so hopefully there are plenty of developers",
    "start": "1880559",
    "end": "1886440"
  },
  {
    "text": "in the room here look at development principle is to always use feedback loops and this next function I like to",
    "start": "1886440",
    "end": "1893370"
  },
  {
    "text": "think as a safety mechanism should our previous attempts be unsuccessful at catching the bad guys I've added in",
    "start": "1893370",
    "end": "1899549"
  },
  {
    "text": "another AWS service here AWS guard duty now eight of his guard duty is a fully managed threat detection",
    "start": "1899549",
    "end": "1906419"
  },
  {
    "text": "service that continuously monitors your account for suspicious or unauthorized behavior and it does so by looking for",
    "start": "1906419",
    "end": "1914370"
  },
  {
    "text": "unusual API calls detects compromised ac2 instances all those performing",
    "start": "1914370",
    "end": "1919710"
  },
  {
    "text": "reconnaissance on your account so you might ask what value is guard duty providing us well guard duty is",
    "start": "1919710",
    "end": "1927750"
  },
  {
    "text": "providing us the IPS who managed to hit our account with suspicious or inconsistent behavior as well as those",
    "start": "1927750",
    "end": "1934950"
  },
  {
    "text": "who originate from third-party IP reputation lists such as spam house proof points drop list or the Tor exit",
    "start": "1934950",
    "end": "1942030"
  },
  {
    "text": "node list and I'll be taking the JSON output and feeding this into our lambda",
    "start": "1942030",
    "end": "1947460"
  },
  {
    "text": "step functions pattern guard duty generates its findings using three",
    "start": "1947460",
    "end": "1952559"
  },
  {
    "text": "different data feeds firstly we enable a",
    "start": "1952559",
    "end": "1959809"
  },
  {
    "text": "duplicate VPC log stream so there is no need for you to turn on V PC flow log so",
    "start": "1959809",
    "end": "1965520"
  },
  {
    "text": "we're pausing your V PC flow down on the dns front queries made from your",
    "start": "1965520",
    "end": "1970980"
  },
  {
    "text": "ec2 instances - questionable domains eg your Bitcoin mining or something like",
    "start": "1970980",
    "end": "1976710"
  },
  {
    "text": "that or you know part of a botnet that will get picked up as well as your route 53 locks if you are using Amazon",
    "start": "1976710",
    "end": "1982830"
  },
  {
    "text": "route 53 are taken into account plus your history of API calls detected by",
    "start": "1982830",
    "end": "1988230"
  },
  {
    "text": "cloud trail that can be from the CLR console or SDK but it also takes into account the I am credentials and the IP",
    "start": "1988230",
    "end": "1995129"
  },
  {
    "text": "address of those who are making that call and that's all fed into guard duty to generate findings and these findings",
    "start": "1995129",
    "end": "2002269"
  },
  {
    "text": "are available in Amazon Cloud Watch so not only can you detect but you can report and act via cloud watch events",
    "start": "2002269",
    "end": "2009610"
  },
  {
    "text": "today I'm using step functions and lambda but you could very well send this to a seam or sock using Amazon simple",
    "start": "2009610",
    "end": "2017179"
  },
  {
    "text": "notification service you know with so many choices available it is really up to you can we cut back to the demo",
    "start": "2017179",
    "end": "2025009"
  },
  {
    "text": "please alright so if you remember in the very first demo we launched a brute",
    "start": "2025009",
    "end": "2030350"
  },
  {
    "text": "force attack leveraging hydro running on Kali and while speaking to you my phone",
    "start": "2030350",
    "end": "2036379"
  },
  {
    "text": "once again has started vibrating so rather than look at my phone I'm sure",
    "start": "2036379",
    "end": "2041659"
  },
  {
    "text": "I've received a message let's jump back into our email here and we can see that",
    "start": "2041659",
    "end": "2046970"
  },
  {
    "text": "our brute-force attack has been detected excuse me Veigar duty and we've taken",
    "start": "2046970",
    "end": "2053658"
  },
  {
    "text": "this JSON payload that guard duty generates and we've fed this through our lambda step function machine and",
    "start": "2053659",
    "end": "2058750"
  },
  {
    "text": "generated a pretty email but what this is also done has created another active",
    "start": "2058750",
    "end": "2064310"
  },
  {
    "text": "state machine but this time we're not touching AWS wife we're going to manipulate the ec2 guest firewall now",
    "start": "2064310",
    "end": "2071569"
  },
  {
    "text": "look we're nearing our time together today and I hope I've established a bit of trust with you but look that's ok I",
    "start": "2071569",
    "end": "2078319"
  },
  {
    "text": "understand I can be spammed you know critical at times just in case you think this is smoke and mirrors we're going to tell knit into our",
    "start": "2078319",
    "end": "2084560"
  },
  {
    "text": "bastion host and as you can see we can connect port 3389 it works fine so let's",
    "start": "2084560",
    "end": "2095750"
  },
  {
    "text": "jump back into our email we're going to approve it and what it's going to do we're going to",
    "start": "2095750",
    "end": "2101360"
  },
  {
    "text": "about through API gateway into lambda into our state machine and execute our next lambda function update ec2 guest",
    "start": "2101360",
    "end": "2108350"
  },
  {
    "text": "firewall all right so that's taken place",
    "start": "2108350",
    "end": "2116440"
  },
  {
    "text": "now if we try and tell NIT back in it",
    "start": "2116440",
    "end": "2122120"
  },
  {
    "text": "doesn't work so just like that we have leveraged a guard duty finding to drive",
    "start": "2122120",
    "end": "2129410"
  },
  {
    "text": "orchestration within our environment and remember look this was just an example you could extend this with multiple",
    "start": "2129410",
    "end": "2134990"
  },
  {
    "text": "inputs you know multiple findings feed that into your state machine and drive multiple outputs out there can we switch",
    "start": "2134990",
    "end": "2142010"
  },
  {
    "text": "back to the slides please so let's recap what we just saw we have climbed the",
    "start": "2142010",
    "end": "2149030"
  },
  {
    "text": "curve we have taken the snowy unicorn elevator company from an architecture that was reactive and Static and",
    "start": "2149030",
    "end": "2155540"
  },
  {
    "text": "provided little to no visibility into one that is proactive self defending and",
    "start": "2155540",
    "end": "2160970"
  },
  {
    "text": "drives maturity within their organization and we've done this not only by leveraging traditional security",
    "start": "2160970",
    "end": "2166820"
  },
  {
    "text": "services but by leveraging the services you see above services that were once",
    "start": "2166820",
    "end": "2172100"
  },
  {
    "text": "the realm of architects and developers have augmented our architecture providing us a pattern that will not",
    "start": "2172100",
    "end": "2177950"
  },
  {
    "text": "only work for today but scale for tomorrow and all at the same time reducing our administrative overhead",
    "start": "2177950",
    "end": "2185950"
  },
  {
    "text": "please see the following links to help you get started with lambda and step functions as well as two great blog",
    "start": "2185950",
    "end": "2191870"
  },
  {
    "text": "posts to which this session was loosely based on now I believe if you scan your badge on the way out you'll receive",
    "start": "2191870",
    "end": "2197810"
  },
  {
    "text": "these electronically but I'll pause here to let you take a few photos",
    "start": "2197810",
    "end": "2202600"
  },
  {
    "text": "all right and before thank you [Applause]",
    "start": "2218450",
    "end": "2228179"
  }
]