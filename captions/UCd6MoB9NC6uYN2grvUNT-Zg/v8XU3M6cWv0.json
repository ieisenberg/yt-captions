[
  {
    "start": "0",
    "end": "27000"
  },
  {
    "text": "[Music]",
    "start": "1600",
    "end": "11840"
  },
  {
    "text": "hello my name is pariksit a cloud",
    "start": "11840",
    "end": "14080"
  },
  {
    "text": "support engineer here at aws office in",
    "start": "14080",
    "end": "16320"
  },
  {
    "text": "sydney today i am going to show you how",
    "start": "16320",
    "end": "18800"
  },
  {
    "text": "to troubleshoot a failed health check",
    "start": "18800",
    "end": "20480"
  },
  {
    "text": "for a load balancer in amazon elastic",
    "start": "20480",
    "end": "23119"
  },
  {
    "text": "kubernetes service let's get started",
    "start": "23119",
    "end": "26080"
  },
  {
    "text": "to troubleshoot health check issues with",
    "start": "26080",
    "end": "27680"
  },
  {
    "start": "27000",
    "end": "71000"
  },
  {
    "text": "the load balancer in amazon eks we must",
    "start": "27680",
    "end": "30160"
  },
  {
    "text": "locate one of the possible failures that",
    "start": "30160",
    "end": "32160"
  },
  {
    "text": "might be applicable in your case check",
    "start": "32160",
    "end": "34320"
  },
  {
    "text": "the status of the part",
    "start": "34320",
    "end": "36000"
  },
  {
    "text": "if the application container in the pod",
    "start": "36000",
    "end": "37920"
  },
  {
    "text": "isn't running then the load balancer",
    "start": "37920",
    "end": "39920"
  },
  {
    "text": "health check isn't answered and it can",
    "start": "39920",
    "end": "42000"
  },
  {
    "text": "fail check if the pod is in running",
    "start": "42000",
    "end": "44399"
  },
  {
    "text": "status and the containers in the board",
    "start": "44399",
    "end": "46480"
  },
  {
    "text": "are ready open your terminal run the",
    "start": "46480",
    "end": "48719"
  },
  {
    "text": "following command to check the status of",
    "start": "48719",
    "end": "50480"
  },
  {
    "text": "the pod",
    "start": "50480",
    "end": "51520"
  },
  {
    "text": "as we can see from this output that two",
    "start": "51520",
    "end": "54559"
  },
  {
    "text": "of my pods are restarting and the status",
    "start": "54559",
    "end": "58559"
  },
  {
    "text": "of one of the pod is flipping between",
    "start": "58559",
    "end": "61520"
  },
  {
    "text": "flash look back off and error",
    "start": "61520",
    "end": "63840"
  },
  {
    "text": "also as we can see that not all my",
    "start": "63840",
    "end": "66479"
  },
  {
    "text": "containers are in ready state",
    "start": "66479",
    "end": "68720"
  },
  {
    "text": "this is what we need to be aware of",
    "start": "68720",
    "end": "71200"
  },
  {
    "start": "71000",
    "end": "95000"
  },
  {
    "text": "check the pod and service label",
    "start": "71200",
    "end": "72720"
  },
  {
    "text": "selectors",
    "start": "72720",
    "end": "74000"
  },
  {
    "text": "for the pod labels run the following",
    "start": "74000",
    "end": "76240"
  },
  {
    "text": "command",
    "start": "76240",
    "end": "77680"
  },
  {
    "text": "to verify that your kubernetes service",
    "start": "77680",
    "end": "79920"
  },
  {
    "text": "is using the correct port labels run the",
    "start": "79920",
    "end": "82159"
  },
  {
    "text": "following command to check that its",
    "start": "82159",
    "end": "83920"
  },
  {
    "text": "output matches the pod labels in the",
    "start": "83920",
    "end": "86080"
  },
  {
    "text": "previous command output as we can see",
    "start": "86080",
    "end": "89040"
  },
  {
    "text": "service selector label and port label do",
    "start": "89040",
    "end": "91280"
  },
  {
    "text": "not match",
    "start": "91280",
    "end": "93119"
  },
  {
    "text": "now let's check the missing endpoints",
    "start": "93119",
    "end": "95280"
  },
  {
    "start": "95000",
    "end": "123000"
  },
  {
    "text": "the kubernetes controller for service",
    "start": "95280",
    "end": "97280"
  },
  {
    "text": "selector continuously scans for pod that",
    "start": "97280",
    "end": "100240"
  },
  {
    "text": "matches its selector and then post",
    "start": "100240",
    "end": "102320"
  },
  {
    "text": "updates to an endpoint object if you",
    "start": "102320",
    "end": "105600"
  },
  {
    "text": "selected an incorrect label then no",
    "start": "105600",
    "end": "108079"
  },
  {
    "text": "endpoints appears run the following",
    "start": "108079",
    "end": "110079"
  },
  {
    "text": "command",
    "start": "110079",
    "end": "112479"
  },
  {
    "text": "check if the endpoint is missing",
    "start": "112720",
    "end": "114960"
  },
  {
    "text": "to fix this situation we need to edit",
    "start": "114960",
    "end": "117439"
  },
  {
    "text": "kubernetes service and add this correct",
    "start": "117439",
    "end": "119840"
  },
  {
    "text": "selector label",
    "start": "119840",
    "end": "122000"
  },
  {
    "text": "check the service traffic policy and",
    "start": "122000",
    "end": "123920"
  },
  {
    "start": "123000",
    "end": "245000"
  },
  {
    "text": "cluster security groups for issues with",
    "start": "123920",
    "end": "126960"
  },
  {
    "text": "application load balancers",
    "start": "126960",
    "end": "128720"
  },
  {
    "text": "unhealthy targets in the application",
    "start": "128720",
    "end": "130560"
  },
  {
    "text": "load balancer target groups typically",
    "start": "130560",
    "end": "133120"
  },
  {
    "text": "happens for two reasons either the",
    "start": "133120",
    "end": "135200"
  },
  {
    "text": "service traffic policy spec dot external",
    "start": "135200",
    "end": "138080"
  },
  {
    "text": "traffic policy is set to local instead",
    "start": "138080",
    "end": "140400"
  },
  {
    "text": "of cluster check for this with the",
    "start": "140400",
    "end": "142959"
  },
  {
    "text": "following two commands verify that the",
    "start": "142959",
    "end": "145840"
  },
  {
    "text": "traffic policy is correctly configured",
    "start": "145840",
    "end": "148000"
  },
  {
    "text": "if it's local",
    "start": "148000",
    "end": "150800"
  },
  {
    "text": "change the setting to cluster",
    "start": "151360",
    "end": "155239"
  },
  {
    "text": "or the node groups in a cluster have",
    "start": "157280",
    "end": "159360"
  },
  {
    "text": "different cluster security groups",
    "start": "159360",
    "end": "160959"
  },
  {
    "text": "associated with them",
    "start": "160959",
    "end": "162640"
  },
  {
    "text": "and traffic cannot flow freely between",
    "start": "162640",
    "end": "164959"
  },
  {
    "text": "the node groups",
    "start": "164959",
    "end": "166400"
  },
  {
    "text": "check for this with following steps to",
    "start": "166400",
    "end": "168959"
  },
  {
    "text": "check the cluster security groups open",
    "start": "168959",
    "end": "171120"
  },
  {
    "text": "the amazon ec2 console",
    "start": "171120",
    "end": "173599"
  },
  {
    "text": "select the healthy instance",
    "start": "173599",
    "end": "176959"
  },
  {
    "text": "choose the security tab and then click",
    "start": "177200",
    "end": "179680"
  },
  {
    "text": "security group ingress rules",
    "start": "179680",
    "end": "182319"
  },
  {
    "text": "select the unhealthy instance",
    "start": "182319",
    "end": "185519"
  },
  {
    "text": "choose the security tab",
    "start": "185519",
    "end": "187200"
  },
  {
    "text": "and then check the security group",
    "start": "187200",
    "end": "188959"
  },
  {
    "text": "ingress rules if the security group for",
    "start": "188959",
    "end": "191120"
  },
  {
    "text": "each instance is different then you must",
    "start": "191120",
    "end": "193280"
  },
  {
    "text": "modify security ingress rule in the",
    "start": "193280",
    "end": "195200"
  },
  {
    "text": "security group console from the security",
    "start": "195200",
    "end": "197680"
  },
  {
    "text": "tab select security group id",
    "start": "197680",
    "end": "201360"
  },
  {
    "text": "choose the added inbound rules button to",
    "start": "201360",
    "end": "203519"
  },
  {
    "text": "modify ingress rules",
    "start": "203519",
    "end": "205760"
  },
  {
    "text": "add inbound rules to allow traffic from",
    "start": "205760",
    "end": "208400"
  },
  {
    "text": "the other node groups in the cluster",
    "start": "208400",
    "end": "213079"
  },
  {
    "text": "verify that your service is configured",
    "start": "242239",
    "end": "244400"
  },
  {
    "text": "for a target port the target port must",
    "start": "244400",
    "end": "247439"
  },
  {
    "start": "245000",
    "end": "275000"
  },
  {
    "text": "match the container port in the pod that",
    "start": "247439",
    "end": "250879"
  },
  {
    "text": "service is sending traffic to",
    "start": "250879",
    "end": "253120"
  },
  {
    "text": "to verify what your target port is",
    "start": "253120",
    "end": "255519"
  },
  {
    "text": "configured to",
    "start": "255519",
    "end": "257120"
  },
  {
    "text": "run the following command",
    "start": "257120",
    "end": "258720"
  },
  {
    "text": "in this example output the target port",
    "start": "258720",
    "end": "261199"
  },
  {
    "text": "is configured to 8080",
    "start": "261199",
    "end": "263360"
  },
  {
    "text": "however because the container port is",
    "start": "263360",
    "end": "265440"
  },
  {
    "text": "set to 80 you must configure the target",
    "start": "265440",
    "end": "268560"
  },
  {
    "text": "port to 80.",
    "start": "268560",
    "end": "271520"
  },
  {
    "start": "275000",
    "end": "317000"
  },
  {
    "text": "verify that your aws load balancer",
    "start": "275280",
    "end": "277680"
  },
  {
    "text": "controller has the correct permissions",
    "start": "277680",
    "end": "280000"
  },
  {
    "text": "the aws load balancer controller must",
    "start": "280000",
    "end": "282240"
  },
  {
    "text": "have the correct permission to update",
    "start": "282240",
    "end": "284240"
  },
  {
    "text": "security groups to allow traffic from",
    "start": "284240",
    "end": "286479"
  },
  {
    "text": "the load balancer to instances or parts",
    "start": "286479",
    "end": "289919"
  },
  {
    "text": "if the controller doesn't have correct",
    "start": "289919",
    "end": "291759"
  },
  {
    "text": "permissions then you receive errors",
    "start": "291759",
    "end": "294720"
  },
  {
    "text": "to check for errors in aws load balancer",
    "start": "294720",
    "end": "297520"
  },
  {
    "text": "controller deployment logs use this",
    "start": "297520",
    "end": "299520"
  },
  {
    "text": "command",
    "start": "299520",
    "end": "301918"
  },
  {
    "text": "check for errors in the individual",
    "start": "302800",
    "end": "304560"
  },
  {
    "text": "controller pod logs",
    "start": "304560",
    "end": "308360"
  },
  {
    "text": "check the ingress annotations for issues",
    "start": "314560",
    "end": "316720"
  },
  {
    "text": "with application load balancers for",
    "start": "316720",
    "end": "319120"
  },
  {
    "start": "317000",
    "end": "353000"
  },
  {
    "text": "issues with application load balancer",
    "start": "319120",
    "end": "321680"
  },
  {
    "text": "check the kubernetes ingress annotations",
    "start": "321680",
    "end": "324080"
  },
  {
    "text": "to find ingress annotations that are",
    "start": "324080",
    "end": "326240"
  },
  {
    "text": "specific to your use case",
    "start": "326240",
    "end": "328479"
  },
  {
    "text": "see ingress annotations from the",
    "start": "328479",
    "end": "330240"
  },
  {
    "text": "kubernetes website find the link in the",
    "start": "330240",
    "end": "332880"
  },
  {
    "text": "description below check the kubernetes",
    "start": "332880",
    "end": "334800"
  },
  {
    "text": "service annotation for issues with",
    "start": "334800",
    "end": "336960"
  },
  {
    "text": "network load balancers for issues with",
    "start": "336960",
    "end": "339360"
  },
  {
    "text": "the network load balancer check the",
    "start": "339360",
    "end": "341120"
  },
  {
    "text": "kubernetes service annotations to find",
    "start": "341120",
    "end": "343440"
  },
  {
    "text": "kubernetes service annotations that are",
    "start": "343440",
    "end": "345680"
  },
  {
    "text": "specific to your use case see service",
    "start": "345680",
    "end": "348080"
  },
  {
    "text": "annotations from the kubernetes website",
    "start": "348080",
    "end": "350880"
  },
  {
    "text": "find the link in the description below",
    "start": "350880",
    "end": "353120"
  },
  {
    "start": "353000",
    "end": "422000"
  },
  {
    "text": "manually test a health check check your",
    "start": "353120",
    "end": "355120"
  },
  {
    "text": "application pod ip address",
    "start": "355120",
    "end": "358479"
  },
  {
    "text": "run a test pod to manually test a health",
    "start": "358479",
    "end": "361039"
  },
  {
    "text": "check within the cluster for http health",
    "start": "361039",
    "end": "363680"
  },
  {
    "text": "checks",
    "start": "363680",
    "end": "364960"
  },
  {
    "text": "for http health check use the following",
    "start": "364960",
    "end": "367360"
  },
  {
    "text": "command check the http response status",
    "start": "367360",
    "end": "370000"
  },
  {
    "text": "code",
    "start": "370000",
    "end": "371199"
  },
  {
    "text": "if the response status code is 200 okay",
    "start": "371199",
    "end": "373759"
  },
  {
    "text": "then your application is responding",
    "start": "373759",
    "end": "375600"
  },
  {
    "text": "correctly on the health check path if",
    "start": "375600",
    "end": "377680"
  },
  {
    "text": "the http response status code is 3xx or",
    "start": "377680",
    "end": "380960"
  },
  {
    "text": "4xx then you can change your health",
    "start": "380960",
    "end": "383520"
  },
  {
    "text": "check path",
    "start": "383520",
    "end": "386080"
  },
  {
    "text": "the following annotation can fix the",
    "start": "386960",
    "end": "389120"
  },
  {
    "text": "health check path or you can use the",
    "start": "389120",
    "end": "391840"
  },
  {
    "text": "following annotation on the ingress",
    "start": "391840",
    "end": "394080"
  },
  {
    "text": "resource to add a successful health",
    "start": "394080",
    "end": "396319"
  },
  {
    "text": "check response status code range",
    "start": "396319",
    "end": "400240"
  },
  {
    "text": "for tcp health checks",
    "start": "402560",
    "end": "404960"
  },
  {
    "text": "use the following command to install the",
    "start": "404960",
    "end": "407840"
  },
  {
    "text": "netcat command",
    "start": "407840",
    "end": "410720"
  },
  {
    "text": "test the tcp health checks",
    "start": "416000",
    "end": "419440"
  },
  {
    "text": "check the networking for networking",
    "start": "419680",
    "end": "421599"
  },
  {
    "text": "issue",
    "start": "421599",
    "end": "422400"
  },
  {
    "start": "422000",
    "end": "472000"
  },
  {
    "text": "verify the following the multiple node",
    "start": "422400",
    "end": "424639"
  },
  {
    "text": "groups in the eks cluster can freely",
    "start": "424639",
    "end": "426880"
  },
  {
    "text": "communicate with each other the network",
    "start": "426880",
    "end": "429280"
  },
  {
    "text": "access control list that's associated",
    "start": "429280",
    "end": "431440"
  },
  {
    "text": "with the subnet where your pods are",
    "start": "431440",
    "end": "433440"
  },
  {
    "text": "running",
    "start": "433440",
    "end": "434479"
  },
  {
    "text": "allows traffic from the load balancer",
    "start": "434479",
    "end": "436560"
  },
  {
    "text": "subnet side range the network acl that's",
    "start": "436560",
    "end": "439440"
  },
  {
    "text": "associated with your load balancer",
    "start": "439440",
    "end": "441280"
  },
  {
    "text": "subnet should allow written traffic on",
    "start": "441280",
    "end": "443599"
  },
  {
    "text": "the ephemeral port range",
    "start": "443599",
    "end": "445680"
  },
  {
    "text": "from the subnet where the pods are",
    "start": "445680",
    "end": "447599"
  },
  {
    "text": "running the route table allows local",
    "start": "447599",
    "end": "449919"
  },
  {
    "text": "traffic from within the vpc cider range",
    "start": "449919",
    "end": "453120"
  },
  {
    "text": "and finally restart the cube proxy if",
    "start": "453120",
    "end": "455840"
  },
  {
    "text": "the cube proxy that runs on each node",
    "start": "455840",
    "end": "458720"
  },
  {
    "text": "isn't behaving correctly",
    "start": "458720",
    "end": "460800"
  },
  {
    "text": "then it could fail to update iptable",
    "start": "460800",
    "end": "463759"
  },
  {
    "text": "rules for the service and endpoints",
    "start": "463759",
    "end": "466400"
  },
  {
    "text": "restart the queue proxy to force it to",
    "start": "466400",
    "end": "468720"
  },
  {
    "text": "recheck and update iptable rules",
    "start": "468720",
    "end": "471599"
  },
  {
    "text": "thanks for watching and happy cloud",
    "start": "471599",
    "end": "473520"
  },
  {
    "start": "472000",
    "end": "486000"
  },
  {
    "text": "computing from all of us here at aws",
    "start": "473520",
    "end": "476630"
  },
  {
    "text": "[Applause]",
    "start": "476630",
    "end": "478400"
  },
  {
    "text": "[Music]",
    "start": "478400",
    "end": "484879"
  },
  {
    "text": "you",
    "start": "484879",
    "end": "486960"
  }
]