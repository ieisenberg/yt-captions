[
  {
    "text": "thank you everyone for coming today really appreciate the full house uh glad to see some excitement in this brand new service my name is Jamie Kenny uh along",
    "start": "1240",
    "end": "8240"
  },
  {
    "text": "with DG Balentine we're the two product managers for a new service we announced today called AWS batch uh I want to use",
    "start": "8240",
    "end": "14559"
  },
  {
    "text": "our time today to walk through a few different topics starting with a brief history and some background on batch Computing um sharing a little bit of of",
    "start": "14559",
    "end": "21680"
  },
  {
    "text": "the the concepts of the adws batch service and then getting into use cases and even take it for a spin with the",
    "start": "21680",
    "end": "27640"
  },
  {
    "text": "demo um starting though with with a little bit of background so when we were we building this service we thought okay",
    "start": "27640",
    "end": "33120"
  },
  {
    "text": "what what are some of the core components of batch Computing a lot of customers are running batch workloads on AWS but what are the the common",
    "start": "33120",
    "end": "39079"
  },
  {
    "text": "denominators to these workloads and it really comes down to really two key areas the first is that batch Computing",
    "start": "39079",
    "end": "45440"
  },
  {
    "text": "workloads um can run asynchronously it's not important that these jobs run immediately as the API is submitted it's",
    "start": "45440",
    "end": "51960"
  },
  {
    "text": "okay if it takes a little bit of time perhaps for the for the first instance to launch if you're submitting your first small job to a queue uh and",
    "start": "51960",
    "end": "59359"
  },
  {
    "text": "secondly because these jobs are are running asynchronously um especially when these jobs are part of a larger",
    "start": "59359",
    "end": "64720"
  },
  {
    "text": "pipeline or or workflow it's important to keep track of the the specific order in which these jobs run so the ability",
    "start": "64720",
    "end": "70040"
  },
  {
    "text": "to specify dependencies between jobs is a a core element of batch Computing and then as we were we were thinking about",
    "start": "70040",
    "end": "76200"
  },
  {
    "text": "what the service might look like uh we we started doing a bit of research and so we went back ways because batch",
    "start": "76200",
    "end": "82320"
  },
  {
    "text": "Computing as you know is is not a New Concept it's been around for decades um what we see here is is Margaret Hamilton",
    "start": "82320",
    "end": "88079"
  },
  {
    "text": "she was the developer for the program this is the the stack of code that that she helped write for the Apollo missions",
    "start": "88079",
    "end": "94399"
  },
  {
    "text": "and this is actually the the IBM uh supercomputer that was used to uh to generate the the applications that were",
    "start": "94399",
    "end": "100799"
  },
  {
    "text": "eventually hard soldered onto the onboard computer on the on the Apollo U on the Apollo command",
    "start": "100799",
    "end": "107280"
  },
  {
    "text": "capsule so a few of you got uh Punch Cards I'll have more and you'll you'll see these at the at the compute Booth",
    "start": "107280",
    "end": "113479"
  },
  {
    "text": "tomorrow too I'll bring another stack by uh but what several of you hold in your hand is actually the first batch",
    "start": "113479",
    "end": "118560"
  },
  {
    "text": "Computing API and we thought we could maybe do a little bit better uh than than than punch card so I I apologize we",
    "start": "118560",
    "end": "125200"
  },
  {
    "text": "don't have a a punch card import service we don't have a punch card reader project posted to adus labs yet if",
    "start": "125200",
    "end": "130599"
  },
  {
    "text": "there's customer demand we're listening uh we'll try to get there maybe we'll have a giant semi Tru that can pull up",
    "start": "130599",
    "end": "135879"
  },
  {
    "text": "and and get your your Punch Cards because the information density is a little bit low um but you some of the",
    "start": "135879",
    "end": "142120"
  },
  {
    "text": "other uh pieces of inspiration we took we looked at the the cost of supercomputing and how that's changed over time uh so this is you know Circa",
    "start": "142120",
    "end": "149360"
  },
  {
    "text": "Circa mid 70s a a crazy supercomputer this was the first commercially available supercomputer could do 167",
    "start": "149360",
    "end": "155879"
  },
  {
    "text": "million transactions per second uh and uh this computer cost you know in in",
    "start": "155879",
    "end": "161760"
  },
  {
    "text": "$76 1976 you about about $9 million uh of which a million of that was",
    "start": "161760",
    "end": "168360"
  },
  {
    "text": "attributed to the to the storage cost now AWS you know has been around",
    "start": "168360",
    "end": "173480"
  },
  {
    "text": "for a little while now we haven't been around for many decades but we've been around for about a decade and uh one of",
    "start": "173480",
    "end": "179280"
  },
  {
    "text": "the the very first public case studies uh that that I recall from my my early days at AWS was the New York Times times",
    "start": "179280",
    "end": "186360"
  },
  {
    "text": "machine project and this was a really groundbreaking project for for me because I it helped me see the the true",
    "start": "186360",
    "end": "191879"
  },
  {
    "text": "potential of of elastic compute and the ability to very cost effectively run workloads that have a little bit of",
    "start": "191879",
    "end": "197760"
  },
  {
    "text": "flexibility as to when they run and how they execute so with the the New York Times time machine project uh they they",
    "start": "197760",
    "end": "204040"
  },
  {
    "text": "spun up an an elastic cluster of ec2 instances uh using infrastructure or or code that they they developed themselves",
    "start": "204040",
    "end": "210319"
  },
  {
    "text": "to uh manage the queuing of jobs manage the provisioning of resources um and and",
    "start": "210319",
    "end": "215599"
  },
  {
    "text": "even creating a an elastically scaled EMR cluster uh and they with this they were able to process 11 million Articles",
    "start": "215599",
    "end": "222360"
  },
  {
    "text": "of of tiffs that they uh performed OCR on so they could create a searchable index of of all the the past uh 130",
    "start": "222360",
    "end": "228879"
  },
  {
    "text": "years of of archived New York Times uh issues and at the time in 2007 um before",
    "start": "228879",
    "end": "235280"
  },
  {
    "text": "we've had uh you many many many price Cuts uh this workload cost 800 $190 that",
    "start": "235280",
    "end": "240920"
  },
  {
    "text": "that's quite a bit less expensive than the almost $9 million for for the crazy supercomputer and I think if if we were",
    "start": "240920",
    "end": "246079"
  },
  {
    "text": "to run the same workload today we could probably do the same for for just a few dollars uh so economics are are",
    "start": "246079",
    "end": "252200"
  },
  {
    "text": "definitely improving but uh running uh an on a a batch Computing workload",
    "start": "252200",
    "end": "257959"
  },
  {
    "text": "requires a bit of work and I want to talk a little bit about what that looks like on premise and what that looks like on AWS so starting with on premise not",
    "start": "257959",
    "end": "265560"
  },
  {
    "text": "surprising that if you're going to run batch Computing workloads you first need to provision a lot of storage and and a lot of servers and historically the",
    "start": "265560",
    "end": "272440"
  },
  {
    "text": "approach that that folks have taken is to provision a lot of identical servers and these servers are are typically",
    "start": "272440",
    "end": "278039"
  },
  {
    "text": "sized either for the greatest common denominator of workloads which could be a little bit expensive if you're trying",
    "start": "278039",
    "end": "283360"
  },
  {
    "text": "to accommodate any any type of workload that might run on these servers or they're they're they're designed to run",
    "start": "283360",
    "end": "289320"
  },
  {
    "text": "the majority of workloads and so it's accepted that some workloads might not be the best fit but in general you're going to serve your your users fairly",
    "start": "289320",
    "end": "295280"
  },
  {
    "text": "well and then you have network attached storage that often has a shared set of installed programs that are accessible to any computer in addition to that of",
    "start": "295280",
    "end": "302560"
  },
  {
    "text": "course you need to manage backups uh security networking infrastructure you need to have people that that are",
    "start": "302560",
    "end": "308160"
  },
  {
    "text": "available to respond and help out your users and and operate the system and you typically have to uh use some commercial",
    "start": "308160",
    "end": "313919"
  },
  {
    "text": "software which requires often times expensive contracts and and these these take some time to be negotiated you know",
    "start": "313919",
    "end": "319240"
  },
  {
    "text": "on an annual or or every couple of year basis so comparing this with oh pardon",
    "start": "319240",
    "end": "324360"
  },
  {
    "text": "me um so let's let's look at at at uh how",
    "start": "324360",
    "end": "329960"
  },
  {
    "text": "this this model might work and and maybe some of the challenges challenges that exist around this so uh what you see in",
    "start": "329960",
    "end": "335199"
  },
  {
    "text": "this presentation are are shapes that represent different types of workloads so the the blue squares uh represent CPU",
    "start": "335199",
    "end": "340919"
  },
  {
    "text": "intensive workloads uh the orange circles represent memory intensive workloads and the the yellow triangles",
    "start": "340919",
    "end": "346639"
  },
  {
    "text": "represent uh dis or or network IO intensive workloads and the funnel is the queue that you're submitting your",
    "start": "346639",
    "end": "352000"
  },
  {
    "text": "jobs to in your in your onr cluster and this works well if your jobs are are sized appropriately for the the types of",
    "start": "352000",
    "end": "358160"
  },
  {
    "text": "machines that you have at your disposal you can quickly run through all these jobs um until you run out of capacity",
    "start": "358160",
    "end": "363720"
  },
  {
    "text": "and then jobs either you wait in the queue or they or they fail because they're they're unable to run in the the time that you'd like to complete them",
    "start": "363720",
    "end": "370400"
  },
  {
    "text": "that's a pretty good case actually for for on-prem traditionally managed batch systems now what what actually happens",
    "start": "370400",
    "end": "377000"
  },
  {
    "text": "though is that you have a diversity of workloads not only in the the types of of requirements around CPU and memory and and dis and network iio uh but you",
    "start": "377000",
    "end": "384759"
  },
  {
    "text": "have variations in the in the magnitude of those requirements too and so the the jobs that are sized relative to the to",
    "start": "384759",
    "end": "391319"
  },
  {
    "text": "the resources you have they're they're able to run um but when you have smaller jobs they don't necessarily take up all",
    "start": "391319",
    "end": "397000"
  },
  {
    "text": "the space in those resources so if you have you know 64 vcpus on on your machine you might only be using 48 of",
    "start": "397000",
    "end": "402759"
  },
  {
    "text": "them and so you've got some unused capacity there uh but if you have larger machines um they're not able to run or",
    "start": "402759",
    "end": "408759"
  },
  {
    "text": "larger workloads they're not able to run and um and there therefore you get inefficient utilization of the resources",
    "start": "408759",
    "end": "415080"
  },
  {
    "text": "that you've provisioned and you have unhappy users because these jobs aren't necessarily able to run or run as",
    "start": "415080",
    "end": "420240"
  },
  {
    "text": "quickly as they'd like so compare this then now going a step further we we",
    "start": "420240",
    "end": "426240"
  },
  {
    "text": "heard in the in Andy's keynote talk um that there's a a growing trend of of adoption of various types of of",
    "start": "426240",
    "end": "431680"
  },
  {
    "text": "accelerators you know quick show of hands how many folks in the room are are are using gpus today for gpgpu workloads",
    "start": "431680",
    "end": "437160"
  },
  {
    "text": "or GPU accelerated workloads okay um and how many folks are are considering heading down this path in the near-",
    "start": "437160",
    "end": "444199"
  },
  {
    "text": "term okay uh anybody excited by the the fpga launch the other day yeah fpga so",
    "start": "444199",
    "end": "450879"
  },
  {
    "text": "if if gpus give us you know a couple of orders of magnitude acceleration for jobs that are traditionally run on CPUs",
    "start": "450879",
    "end": "457240"
  },
  {
    "text": "fpgas have potential to give us yet another order or even two orders of magnitude of acceleration um both in",
    "start": "457240",
    "end": "463080"
  },
  {
    "text": "performance and also the uh the power consumption and so there's a lot of efficiency gains that come here of course there's going to be some work to",
    "start": "463080",
    "end": "469520"
  },
  {
    "text": "enable our applications to take advantage of these but if you're to try to run these workloads on a cluster that you built maybe a couple of years ago uh",
    "start": "469520",
    "end": "475720"
  },
  {
    "text": "on premise you're going to have a hard time fitting these diverse set of work loads effectively on on the cluster and",
    "start": "475720",
    "end": "481520"
  },
  {
    "text": "so if you're going to run the same workload maybe the cloud has some advantages and so with all all these new",
    "start": "481520",
    "end": "488639"
  },
  {
    "text": "instance types that that we've launched of course you're able to provision resources as your jobs are submitted you're able to provision appropriately",
    "start": "488639",
    "end": "494759"
  },
  {
    "text": "sized resources as those jobs are submitted great right however there's some challenges to this approach in",
    "start": "494759",
    "end": "501120"
  },
  {
    "text": "order to build the system that that we just showed you where you have uh fpga jobs running on our F1 instances you",
    "start": "501120",
    "end": "507479"
  },
  {
    "text": "have GPU accelerated workloads running on our two instances you have to uh build a lot of undifferentiated heavy lifting yourselves you have to um figure",
    "start": "507479",
    "end": "514839"
  },
  {
    "text": "out how you're going to provision your ec2 resources you have to manage autoscaling you have to set up a queuing system potentially using sqs and storing",
    "start": "514839",
    "end": "521719"
  },
  {
    "text": "some metadata and Dynamo DB you want to monitor the system so you're probably going to have some cloudwatch scheduled events uh that are are triggering Lambda",
    "start": "521719",
    "end": "528320"
  },
  {
    "text": "functions that might create custom uh cloudwatch metrics uh and and on and on now we have reference architectures that",
    "start": "528320",
    "end": "534480"
  },
  {
    "text": "help guide you through that process and historically this is the approach that many people have taken and including many teams within AWS if you look at the",
    "start": "534480",
    "end": "541640"
  },
  {
    "text": "elastic transcod there's a batch system underneath that if you look at our machine learning Services we had to build a batch system for both training",
    "start": "541640",
    "end": "547760"
  },
  {
    "text": "of the models and batch execution of those models within Amazon we've easily built batch systems ourselves many many",
    "start": "547760",
    "end": "553519"
  },
  {
    "text": "tens of times maybe even even 100 times depending on on how you uh how you measure those systems long and short of",
    "start": "553519",
    "end": "560560"
  },
  {
    "text": "it a lot of people have have reinvented very very similar wheels and so we think we have a better approach we we wanted",
    "start": "560560",
    "end": "566279"
  },
  {
    "text": "to build a a self-driving car company instead of teaching people how to build Wills so uh today we'd like to introduce",
    "start": "566279",
    "end": "572040"
  },
  {
    "text": "the AWS batch service and the the core goals of our service were to help you our our our helpful users uh accomplish",
    "start": "572040",
    "end": "579480"
  },
  {
    "text": "a few things first we wanted to provide a fully managed service we want to reduce the amount of undifferentiated heavy lifting that you have we want you",
    "start": "579480",
    "end": "585440"
  },
  {
    "text": "to be able to focus on your jobs tell us about the requirements of those jobs tell us the applications you'd like to",
    "start": "585440",
    "end": "590480"
  },
  {
    "text": "run and we'll go figure out how to execute them so that you don't have to worry about infrastructure you can you can focus on supporting your customers",
    "start": "590480",
    "end": "597399"
  },
  {
    "text": "second uh we while we we see a lot of value that comes from uh ads",
    "start": "597399",
    "end": "602959"
  },
  {
    "text": "capabilities such as as autoscaling uh and identity and access management and uh and the cost savings that come from",
    "start": "602959",
    "end": "610000"
  },
  {
    "text": "capabilities such as ec2 spot we thought that batch that was built on the cloud for the cloud uh could actually benefit",
    "start": "610000",
    "end": "617120"
  },
  {
    "text": "in a number of other ways too and so we wanted to make the service very easily integrated with as many other AWS",
    "start": "617120",
    "end": "623079"
  },
  {
    "text": "Services as possible uh I'm sure if you've attended some of the Keynotes for the past few days you've heard about Lex you've heard about poly you've heard",
    "start": "623079",
    "end": "628800"
  },
  {
    "text": "about the recognition Service uh we have a increasing range of services that um benefit tremendously from operating in",
    "start": "628800",
    "end": "635560"
  },
  {
    "text": "in a batch mode so if you have uh you have perhaps thousands of of documents you'd like to convert into an MP3 using",
    "start": "635560",
    "end": "641920"
  },
  {
    "text": "poly or if you have a a corpus of images and an S3 bucket that you'd like to perform image recognition on um batch is",
    "start": "641920",
    "end": "648760"
  },
  {
    "text": "a fantastic way to to tackle those types of problems so we make it very simple for you to integrate these Services into",
    "start": "648760",
    "end": "654440"
  },
  {
    "text": "the ABS batch jobs that you run with identity and access management uh roles assigned per each of your tasks or each",
    "start": "654440",
    "end": "660440"
  },
  {
    "text": "of your jobs and then of course we want to give you access to ec2 spot but without some of the challenges or",
    "start": "660440",
    "end": "666240"
  },
  {
    "text": "complexity that some of our users have reported uh with with ec2 spot and spot block and and and U and scheduled",
    "start": "666240",
    "end": "673000"
  },
  {
    "text": "reserved instances and so giving you the ability to tell us what types of resources you want and if if using spot",
    "start": "673000",
    "end": "678839"
  },
  {
    "text": "what type of bid you'd like to make uh we want to greatly simplify the provisioning of those resources so the with AWS batch we now",
    "start": "678839",
    "end": "686360"
  },
  {
    "text": "offer fully managed batch Computing Primitives we allow you to run your applications that are either explicitly",
    "start": "686360",
    "end": "693399"
  },
  {
    "text": "or implicitly containerized so giving us a a Docker command a Docker container image and and the parameters with which",
    "start": "693399",
    "end": "699320"
  },
  {
    "text": "you'd like us to run that that Docker image um or giving us a zip that you'd like us to run on top of a default",
    "start": "699320",
    "end": "704440"
  },
  {
    "text": "Amazon Linux machine image and then we'll take care of Amazon Linux container image and then we'll take care",
    "start": "704440",
    "end": "709480"
  },
  {
    "text": "of the rest for you so some of the concepts involved with the service include uh very familiar terms to",
    "start": "709480",
    "end": "715440"
  },
  {
    "text": "anybody who's worked with batch systems in the past jobs job definition cues computer environments and of course",
    "start": "715440",
    "end": "722320"
  },
  {
    "text": "theer so stepping through each of these in a little bit more detail jobs uh that",
    "start": "722320",
    "end": "727519"
  },
  {
    "text": "that you specify are submitted to an AWS batch job queue within your account you can have multiple job cues and each of",
    "start": "727519",
    "end": "735040"
  },
  {
    "text": "these job cues U can have a relative priority to each other your jobs can reside in these job cues until they're",
    "start": "735040",
    "end": "740920"
  },
  {
    "text": "ready to run either because those jobs have an external dependency on another job or because we're waiting for uh",
    "start": "740920",
    "end": "746959"
  },
  {
    "text": "resources to be launched for those jobs to run upon if you want to submit a job we have an OS batch uh uh create job Q",
    "start": "746959",
    "end": "753360"
  },
  {
    "text": "command that will allow you to start submitting your jobs the job cues that you create are",
    "start": "753360",
    "end": "759000"
  },
  {
    "text": "mapped to a compute environment or potentially multiple compute environments and a compute environment",
    "start": "759000",
    "end": "764600"
  },
  {
    "text": "uh can be either uh one of two types it could be a managed compute environment in which you're giving us some guard rails you're telling us the minmax and",
    "start": "764600",
    "end": "771240"
  },
  {
    "text": "desired number of vcpus and aggregate you're telling us which instance types you would like us to launch on your",
    "start": "771240",
    "end": "776560"
  },
  {
    "text": "behalf either being very prescriptive and saying only launch c58 XLS or telling us optimal let let AWS batch",
    "start": "776560",
    "end": "784079"
  },
  {
    "text": "figured out for me and then uh if you want to use spot you tell us what percentage of on demand pricing you would like us to bid on your behalf you",
    "start": "784079",
    "end": "790639"
  },
  {
    "text": "tell us about the VPC subnets you can launch in tags to apply and a few other features and then we will start to",
    "start": "790639",
    "end": "796440"
  },
  {
    "text": "launch compute resources in response to the arrival of jobs and the resource requirements of each of those jobs so if",
    "start": "796440",
    "end": "802440"
  },
  {
    "text": "you have a lot of memory intensive jobs we'll start launching instances that have appropriate amounts of of memory fore workloads if you have uh C",
    "start": "802440",
    "end": "809040"
  },
  {
    "text": "intensive workloads that don't need as much memory we can we can run those on uh compute resources that are more appropriately sized for those jobs and",
    "start": "809040",
    "end": "815360"
  },
  {
    "text": "because we're running your jobs uh within Docker containers uh we have the ability to run multiple jobs",
    "start": "815360",
    "end": "820639"
  },
  {
    "text": "concurrently on the same host and so we get more uh efficiency gains in the execution of those those jobs on top of",
    "start": "820639",
    "end": "825720"
  },
  {
    "text": "your ec2 instances the instances that we launch are launching within your ads",
    "start": "825720",
    "end": "830839"
  },
  {
    "text": "account so you'll see these popping up in the ec2 console and um you have the ability to uh to interact with them if",
    "start": "830839",
    "end": "837199"
  },
  {
    "text": "you like if you want to specify a key pair and assign these instances to a security group that gives you SSH access",
    "start": "837199",
    "end": "843079"
  },
  {
    "text": "you can do that uh a lot of the customers that we've spoken to already during our our beta have said that they they might actually prefer not to",
    "start": "843079",
    "end": "848839"
  },
  {
    "text": "connect to these instances and just focus on executing their jobs now this works we think for the the majority of",
    "start": "848839",
    "end": "854639"
  },
  {
    "text": "of the hopefully users of of the service now but there there are some categories of users who have uh resource",
    "start": "854639",
    "end": "860759"
  },
  {
    "text": "requirements that go beyond what we're going to be providing by default at launch with our our minimum viable product which is available today and so",
    "start": "860759",
    "end": "867639"
  },
  {
    "text": "for those users we're going to be also offering unmanaged computer environments so you can think of these as being very",
    "start": "867639",
    "end": "872759"
  },
  {
    "text": "similar to an ECS cluster uh for those of you who have used the ec2 container service and ECS clusters as you know is",
    "start": "872759",
    "end": "879079"
  },
  {
    "text": "a logical representation of a of a collection of compute resources so if you create an unmanaged compute environment we will then create an ECS",
    "start": "879079",
    "end": "886399"
  },
  {
    "text": "cluster for you you can launch your instances of an Ami that has the ECS agent installed running a compatible",
    "start": "886399",
    "end": "892519"
  },
  {
    "text": "version of of Linux and uh those instances once they're launched and registered with the ECS cluster we've",
    "start": "892519",
    "end": "898199"
  },
  {
    "text": "created for you are accessible and we'll start scheduling jobs to those to those compute Resources with unmanaged uh uh",
    "start": "898199",
    "end": "905480"
  },
  {
    "text": "with unmanaged Compu environments you have the ability to attach terabytes of of EBS storage to each of your Compu resources you can attach EFS file",
    "start": "905480",
    "end": "912880"
  },
  {
    "text": "systems uh luster orange FS you know file system of of your choice to these instances and allows you to also take",
    "start": "912880",
    "end": "920480"
  },
  {
    "text": "advantage of of dedicated instances or or a number of other ec2 features so effectively giving you custom um custom",
    "start": "920480",
    "end": "926759"
  },
  {
    "text": "ec2 instances on which we can uh SCH your jobs so before you schedule a job though",
    "start": "926759",
    "end": "932639"
  },
  {
    "text": "uh first thing you need to do is actually register a job definition you tell us a little bit about effectively this is a template for for the the job",
    "start": "932639",
    "end": "939160"
  },
  {
    "text": "or the jobs that you'd like to run a job definition tells us the application you'd like to run the role that you'd",
    "start": "939160",
    "end": "945240"
  },
  {
    "text": "like to associate with the job when it executes uh the the mount points um so if you have a a mount Point that's maybe",
    "start": "945240",
    "end": "951360"
  },
  {
    "text": "SL ms-12 3 4 five on the host how you'd like to map that within the container",
    "start": "951360",
    "end": "956920"
  },
  {
    "text": "instance when we actually execute the job uh as well as uh environmental variables and and other properties of the container with these job definitions",
    "start": "956920",
    "end": "964560"
  },
  {
    "text": "some of our users may choose to create a job definition per job that they execute other users may choose to override one",
    "start": "964560",
    "end": "971440"
  },
  {
    "text": "or or multiple parameters um and simply create a few job definitions that they use as templates for common classes of",
    "start": "971440",
    "end": "977480"
  },
  {
    "text": "of jobs that they submit now when you're actually ready to submit your job to your job queue that's",
    "start": "977480",
    "end": "982959"
  },
  {
    "text": "mapped to one or multiple computer environments using that job definition um you'll do so using the command that",
    "start": "982959",
    "end": "988160"
  },
  {
    "text": "you see here um and as we mentioned your jobs will uh can either reference a container image or if you're submitting",
    "start": "988160",
    "end": "993920"
  },
  {
    "text": "a job through the console you'll be able to upload a zip containing your application uh we'll also give you uh",
    "start": "993920",
    "end": "999120"
  },
  {
    "text": "the ability uh similar to what we do with the ECS Lambda console the ability to paste in some code and kind of uh",
    "start": "999120",
    "end": "1004680"
  },
  {
    "text": "give us a a python script or or some um some JavaScript code that you would like us to run on your behalf we'll zip it up",
    "start": "1004680",
    "end": "1011440"
  },
  {
    "text": "for you upload it to your S3 bucket and then uh reference that when we when we run an Amazon Linux container instance",
    "start": "1011440",
    "end": "1017639"
  },
  {
    "text": "to execute the the code within that zip file now um you've noticed that we've",
    "start": "1017639",
    "end": "1023560"
  },
  {
    "text": "we've launched if you attended the keynote this morning that we're we're launching in preview mode that's because there's a couple of features that we want to be able to add to ads batch",
    "start": "1023560",
    "end": "1030480"
  },
  {
    "text": "before we give everybody access to it and one of those features is the ability to run arrays of jobs so we've talked a",
    "start": "1030480",
    "end": "1036520"
  },
  {
    "text": "little bit about simple jobs these are jobs that can run on a single host uh using one or or as many vcpus as you get",
    "start": "1036520",
    "end": "1042480"
  },
  {
    "text": "on a machine as much memory is available on a machine uh but for many users they want to simplify the submission of many",
    "start": "1042480",
    "end": "1048960"
  },
  {
    "text": "many many jobs and so in that case we have we're working on a feature that you'll soon see with the service called",
    "start": "1048960",
    "end": "1054160"
  },
  {
    "text": "array jobs where you can give us the command that you'd like to run and say run a thousand copies of this and here's",
    "start": "1054160",
    "end": "1059200"
  },
  {
    "text": "the array of of parameters for all of those jobs that we're running and then each job can do effectively the same",
    "start": "1059200",
    "end": "1064240"
  },
  {
    "text": "thing but each working on their part of the of the bigger puzzle uh a great approach for parametric sweeps and Mony",
    "start": "1064240",
    "end": "1069360"
  },
  {
    "text": "Carlo simulations uh another type of job execution that we're going to be adding to uh that I think was mentioned by",
    "start": "1069360",
    "end": "1075840"
  },
  {
    "text": "verer is the ability to execute jobs as Lambda function and we'll talk about why you might want to use AWS batch to",
    "start": "1075840",
    "end": "1081159"
  },
  {
    "text": "execute Lambda functions in just a bit so um as we were designing this service I this probably back in the March April",
    "start": "1081159",
    "end": "1087559"
  },
  {
    "text": "time frame uh du and I were were thinking a bit about uh the types of workloads that we expected to see and",
    "start": "1087559",
    "end": "1093240"
  },
  {
    "text": "Life Sciences is a a a really core workload that we wanted to focus upon and um did some research and we found a",
    "start": "1093240",
    "end": "1099320"
  },
  {
    "text": "common pipeline for for Next Generation sequencing where you get an unassembled effectively collection of puzzle pieces",
    "start": "1099320",
    "end": "1104640"
  },
  {
    "text": "that you first need to assemble uh you need to then you know make sure that you've assembled it in in the correct order and then you can start doing some",
    "start": "1104640",
    "end": "1110880"
  },
  {
    "text": "analysis with that individual genome and then against a larger Corpus of genomes and this involves a lot of steps and the",
    "start": "1110880",
    "end": "1117559"
  },
  {
    "text": "the the dag that you see in front of you is is actually a very common reference uh pipeline for for genomics",
    "start": "1117559",
    "end": "1124200"
  },
  {
    "text": "workloads and we thought well maybe we should have a submit workflow API for the service but then as we talked to a",
    "start": "1124200",
    "end": "1129840"
  },
  {
    "text": "few more customers we realized that different customers have different approaches and tools and languages that they'd like to use for workflows so we",
    "start": "1129840",
    "end": "1136280"
  },
  {
    "text": "we got rid of the submit workflow API and instead said what if we add job dependencies to the submit job API and",
    "start": "1136280",
    "end": "1142640"
  },
  {
    "text": "so with the AWS batch submit job command or or or API action you can reference other jobs that you only want to start",
    "start": "1142640",
    "end": "1149480"
  },
  {
    "text": "once the first job has succeeded and so this allows you to use flow or dag based workflow engines of your choice you can",
    "start": "1149480",
    "end": "1155679"
  },
  {
    "text": "use AWS step functions you can use Pegasus you can use um Luigi you could",
    "start": "1155679",
    "end": "1160840"
  },
  {
    "text": "use the workflow engine of your choice and simply have the workflow engine either submit jobs one wait for that to",
    "start": "1160840",
    "end": "1165880"
  },
  {
    "text": "complete then submit job two then three then four or submit jobs 1 2 3 4 specifying the dependencies that exist",
    "start": "1165880",
    "end": "1172720"
  },
  {
    "text": "such that four depends on three three on two two on one and then AWS batch will ensure that those jobs run in the right",
    "start": "1172720",
    "end": "1178000"
  },
  {
    "text": "order once their dependencies have met have been met we'll run the jobs in the order that they've",
    "start": "1178000",
    "end": "1184000"
  },
  {
    "text": "arrived so the the system or the component of ads batch that runs with",
    "start": "1184000",
    "end": "1189440"
  },
  {
    "text": "behind the scenes that makes sure that those jobs run in the right order on appropriately sized resources and is",
    "start": "1189440",
    "end": "1195280"
  },
  {
    "text": "it's responsible for ensuring that we we scale up and down as appropriate with the the right heterogeneous mixx of compute resources is theer and so theer",
    "start": "1195280",
    "end": "1203720"
  },
  {
    "text": "um the one that we'll we'll launch with ensures that we run jobs in in approximately the same order in which they're submitted once all of their",
    "start": "1203720",
    "end": "1210159"
  },
  {
    "text": "their dependencies have been met over time uh we we have uh the goal to submit actually a number of of scheduling",
    "start": "1210159",
    "end": "1216200"
  },
  {
    "text": "algorithms some customers have expressed a desire for uh fair share scheduling deadline scheduling is a common",
    "start": "1216200",
    "end": "1221600"
  },
  {
    "text": "requirement that we here and we have a few other ideas that we um we'll probably talk about uh a little bit more in",
    "start": "1221600",
    "end": "1227159"
  },
  {
    "text": "2017 uh before we get into uh work uh into use cases or or some reference",
    "start": "1227159",
    "end": "1232840"
  },
  {
    "text": "architectures just wanted to quickly show the the types of apis that will support for the service uh documentation",
    "start": "1232840",
    "end": "1238200"
  },
  {
    "text": "for the service should be appearing uh relatively soon um and if anybody signs up for the preview hopefully quite a few",
    "start": "1238200",
    "end": "1243400"
  },
  {
    "text": "show of hands who signed up for the preview already okay hopefully more of you will sign up soon um the preview uh",
    "start": "1243400",
    "end": "1249320"
  },
  {
    "text": "you'll be getting a link to the documentation uh as soon as we Whit list your account as well as access to the console uh and the ability to start",
    "start": "1249320",
    "end": "1255200"
  },
  {
    "text": "using the surface okay another important feature of this service um it's free uh we we",
    "start": "1255200",
    "end": "1262600"
  },
  {
    "text": "don't charge for the service we only charge for the underlying compute resources that you use so the ec2 instances or database calls or storage",
    "start": "1262600",
    "end": "1268520"
  },
  {
    "text": "that you use for your jobs uh so hopefully this will help further reduce the cost of running batch batch Computing workloads on on",
    "start": "1268520",
    "end": "1274799"
  },
  {
    "text": "AWS uh and then uh just a little bit more detail the the preview release uh is currently in the US east region uh as",
    "start": "1274799",
    "end": "1281440"
  },
  {
    "text": "we move to to GA hopefully very quickly uh we're going to be um going GA in",
    "start": "1281440",
    "end": "1287279"
  },
  {
    "text": "Virginia and then exping to other regions as quickly as we possibly can while we also add support for array jobs",
    "start": "1287279",
    "end": "1292360"
  },
  {
    "text": "and Lambda jobs uh quickly going back just for a moment um one one question",
    "start": "1292360",
    "end": "1297640"
  },
  {
    "text": "that may come up is why would you want to use Lambda functions with AWS batch well the first reason is you might want",
    "start": "1297640",
    "end": "1302799"
  },
  {
    "text": "to use uh the array job primitive to submit many many copies of of a Lambda job um we also support job retries so if",
    "start": "1302799",
    "end": "1310200"
  },
  {
    "text": "you have a Lambda function that uh may be interacting with something else that that could time out uh will ensure that",
    "start": "1310200",
    "end": "1316200"
  },
  {
    "text": "we retry that Lambda function um until it's successful up to the the number of retries that you've specified and then",
    "start": "1316200",
    "end": "1322200"
  },
  {
    "text": "you could also use Lambda functions as part of a pipeline that may go back and forth between Lambda execution and",
    "start": "1322200",
    "end": "1327720"
  },
  {
    "text": "containerized uh job execution okay and then one other point I'd like to talk about just briefly this",
    "start": "1327720",
    "end": "1333919"
  },
  {
    "text": "is actually been talked about a little bit today uh is that there's a lot of different categories of of batch workloads when when some people think of",
    "start": "1333919",
    "end": "1340760"
  },
  {
    "text": "batch they they think of uh ETL and and uh Big Data workloads where uh you might",
    "start": "1340760",
    "end": "1346000"
  },
  {
    "text": "want to actually look at using a service like itic map reduce and its ability to interact with a data Lake in S3 uh talk",
    "start": "1346000",
    "end": "1352279"
  },
  {
    "text": "natively to to Dynamo DB and red shift um for some customers they might also choose to use batch to to run some of",
    "start": "1352279",
    "end": "1358279"
  },
  {
    "text": "these workloads uh again we we offer many tools and services so you can find the right fit for for your organization",
    "start": "1358279",
    "end": "1364320"
  },
  {
    "text": "another common category of batch workloads is is cron execution we have lots of little jobs that are happening at at recurring times we're a great",
    "start": "1364320",
    "end": "1370640"
  },
  {
    "text": "platform to execute those jobs but we're probably not the going to have the best console experience to manage the",
    "start": "1370640",
    "end": "1376360"
  },
  {
    "text": "scheduling of those jobs uh scheduling in terms of calendar and clock time and so you may want to work with a with with",
    "start": "1376360",
    "end": "1382600"
  },
  {
    "text": "cron or with a thirdparty solution open source or commercial to trigger the execution or submission of of AD best",
    "start": "1382600",
    "end": "1388360"
  },
  {
    "text": "batch jobs for those workloads but that does leave a a massive amount of of of of highs scale um embarrassingly",
    "start": "1388360",
    "end": "1395640"
  },
  {
    "text": "parallel and and collections of of large single node computations that are really a great fit for AWS",
    "start": "1395640",
    "end": "1401840"
  },
  {
    "text": "batch okay uh before we get to the demo just want to walk very quickly through a few uh reference implementations that we",
    "start": "1401840",
    "end": "1408360"
  },
  {
    "text": "had in mind as we were designing the service so the first one is is DNA sequencing so if you have a a DNA",
    "start": "1408360",
    "end": "1413919"
  },
  {
    "text": "sequencer um often times they they're now able to write directly to S3 as as samples are being processed you get your",
    "start": "1413919",
    "end": "1420159"
  },
  {
    "text": "your underlined genome files in uh in a format that then uh is is ready to be",
    "start": "1420159",
    "end": "1425520"
  },
  {
    "text": "processed by ads batch so the way that you trigger the submission of these of these batch jobs is to have a a an S3",
    "start": "1425520",
    "end": "1431279"
  },
  {
    "text": "event trigger a Lambda function that might do an initial scan of those files extract some metadata and then use that",
    "start": "1431279",
    "end": "1438240"
  },
  {
    "text": "to submit the the pipeline of jobs to ads batch with job dependencies specified at submission time we'll then",
    "start": "1438240",
    "end": "1444440"
  },
  {
    "text": "run through that that pipeline of jobs uh issuing retries as appropriate and then the results can be written back to",
    "start": "1444440",
    "end": "1449919"
  },
  {
    "text": "your uh to your S3 bucket or to a different S3 bucket if you like and then um you can use other tools to uh such as",
    "start": "1449919",
    "end": "1456440"
  },
  {
    "text": "EMR for for example to do population level uh genomic analysis against those",
    "start": "1456440",
    "end": "1461559"
  },
  {
    "text": "workloads uh what we see here is an example architecture that we've uh we've already developed and tested Aaron",
    "start": "1461559",
    "end": "1467799"
  },
  {
    "text": "Freedman one of the life sciences Solutions architects in our team uh worked with Angel pizaro and I to to",
    "start": "1467799",
    "end": "1473240"
  },
  {
    "text": "develop this architecture what you see here is what I just described but using unmanaged computer environments U each",
    "start": "1473240",
    "end": "1479640"
  },
  {
    "text": "of the of the instances in the uh ECS cluster that we create as part of an unmanaged computer environment has",
    "start": "1479640",
    "end": "1485320"
  },
  {
    "text": "access to multiple terabytes of of EBS storage there's an autoscaling group that's actually being used to to scale",
    "start": "1485320",
    "end": "1491159"
  },
  {
    "text": "up and down the number of nodes in the cluster and the way that we uh we we direct Autos scaling to work is we have",
    "start": "1491159",
    "end": "1496880"
  },
  {
    "text": "a CL cloudwatch scheduled event that's firing a Lambda function that queries the renable jobs in the job queue and as",
    "start": "1496880",
    "end": "1503720"
  },
  {
    "text": "the number of rentable jobs increases that indicates we need more work to be done we need more resources to process those jobs and so uh that Lambda",
    "start": "1503720",
    "end": "1511080"
  },
  {
    "text": "function creates a cloudwatch metric that causes us to scale up the autoscaling group as the jobs uh in a",
    "start": "1511080",
    "end": "1516919"
  },
  {
    "text": "reable state start to decline we start to scale down the resources uh using that same cloudwatch metric the results",
    "start": "1516919",
    "end": "1522279"
  },
  {
    "text": "are then written back to an S3 bucket of course there's no credentials built into the jobs themselves because the jobs",
    "start": "1522279",
    "end": "1527320"
  },
  {
    "text": "have an Associated identity and access management role so you can very safely and securely um have adbs batch interact",
    "start": "1527320",
    "end": "1534159"
  },
  {
    "text": "with other ads services such as dynb or S3 uh computational chemistry I won't go",
    "start": "1534159",
    "end": "1539679"
  },
  {
    "text": "into as much detail so that we have a little bit more time for Q&A and and demos another great fit uh media",
    "start": "1539679",
    "end": "1544760"
  },
  {
    "text": "transcoding and encoding is is something that's uh very commonly used you'll have all these slides available um as we we",
    "start": "1544760",
    "end": "1550360"
  },
  {
    "text": "publish our our session so um maybe I'll I'll move on just for a bit um what I'd like to do is is get to the demo before",
    "start": "1550360",
    "end": "1558039"
  },
  {
    "text": "we go to the interactive service wanted to show something that we",
    "start": "1558039",
    "end": "1565360"
  },
  {
    "text": "we hope to include in in verner's keyo today but we didn't quite make it with all of the the great announcements we had today and so this is a um kind of an",
    "start": "1565360",
    "end": "1572760"
  },
  {
    "text": "animation we put together for AWS batch so what we see here is a a collection of jobs uh each of these jobs has three",
    "start": "1572760",
    "end": "1579760"
  },
  {
    "text": "stages in the pipeline and each of the the colors and shapes has different resource requirements memory CPU IO Etc",
    "start": "1579760",
    "end": "1587080"
  },
  {
    "text": "and so these jobs are submitted to a a job Q q1 which is mapped to an ond",
    "start": "1587080",
    "end": "1592679"
  },
  {
    "text": "demand computer environment that has a a a Min of zero and a Max of of of 20",
    "start": "1592679",
    "end": "1597840"
  },
  {
    "text": "instances it would actually be expressed in vcpus and as we submit jobs to the",
    "start": "1597840",
    "end": "1603840"
  },
  {
    "text": "queue and start processing them you'll see that we only process the red jobs because they're the first job in in the",
    "start": "1603840",
    "end": "1610120"
  },
  {
    "text": "pipeline and we don't want to start processing the blue and green jobs because their dependencies have not yet been met and we're running the red jobs",
    "start": "1610120",
    "end": "1616000"
  },
  {
    "text": "on on a compute optimized instance the C4 maybe a C5 now um as those complete we're able to run the next step in the",
    "start": "1616000",
    "end": "1622240"
  },
  {
    "text": "pipeline and so we start spinning up uh memory optimized instances to run memory intensive workloads both the the blue",
    "start": "1622240",
    "end": "1628120"
  },
  {
    "text": "and the green workloads great now we also have a second cue of work that we we want to run it's it's lower priority",
    "start": "1628120",
    "end": "1634399"
  },
  {
    "text": "work and it's it's work that can take advantage of a broader range of of instance types and so we create a second",
    "start": "1634399",
    "end": "1639679"
  },
  {
    "text": "que and a second compute environment that's a a spot compute environment and it's set to only launch instances when",
    "start": "1639679",
    "end": "1645240"
  },
  {
    "text": "the spot price dips below a certain percentage of on demand pricing and so we start submitting lots and lots of work to this queue but because the spot",
    "start": "1645240",
    "end": "1651679"
  },
  {
    "text": "price is still a little bit higher than we'd like to pay uh no work is happening but once the spot price dips below the",
    "start": "1651679",
    "end": "1657840"
  },
  {
    "text": "the threshold that we specified adbo batch automatically starts launching instances for you and work from that",
    "start": "1657840",
    "end": "1663399"
  },
  {
    "text": "second queue starts getting processed now I still have a lot of work in my first queue so what I can do is",
    "start": "1663399",
    "end": "1670480"
  },
  {
    "text": "also map that second compute environment my spot compute environment to that first queue so that when the spot price",
    "start": "1670480",
    "end": "1676320"
  },
  {
    "text": "is again below that certain threshold I'm able to take advantage of a much larger pool of compute resources so that",
    "start": "1676320",
    "end": "1681760"
  },
  {
    "text": "I'm preferentially doing the work from my my first cu the higher priority q and",
    "start": "1681760",
    "end": "1686840"
  },
  {
    "text": "only once all of that work has been drained and it'll take just a second for that for that work to drain since we have so many compute resources um then",
    "start": "1686840",
    "end": "1693519"
  },
  {
    "text": "I'll start processing work for my my second que um and then as you'll see here and",
    "start": "1693519",
    "end": "1699200"
  },
  {
    "text": "skipping along so dle has a Time some chance talk um as the the jobs um",
    "start": "1699200",
    "end": "1704760"
  },
  {
    "text": "finished and we we no longer require the CPU optimized and eventually the memory optimized instances we start turning off instances for",
    "start": "1704760",
    "end": "1711000"
  },
  {
    "text": "you okay why don't we actually take a look at the real service now so I'll hand off to to Dule",
    "start": "1711000",
    "end": "1717720"
  },
  {
    "text": "now thank you Jamie you're welcome I'll plug it in okay thanks man y um that's a",
    "start": "1718799",
    "end": "1724440"
  },
  {
    "text": "cool demo yeah it's easier than doing live demos uh so so uh you can tell he's",
    "start": "1724440",
    "end": "1731200"
  },
  {
    "text": "the outband product manager um so my name is dle Valentine one of the other product managers on AWS batch uh I've",
    "start": "1731200",
    "end": "1736720"
  },
  {
    "text": "been with Amazon on a little over four years now and I've spent most of my time actually talking and and working with",
    "start": "1736720",
    "end": "1742679"
  },
  {
    "text": "customers on batch Computing uh specifically in the high performance Computing space and uh We've we've been",
    "start": "1742679",
    "end": "1747919"
  },
  {
    "text": "working on this uh I actually uh a lot of fun doing this we we wanted to do this for quite a long time and what we",
    "start": "1747919",
    "end": "1753799"
  },
  {
    "text": "hope we've done now and what we're introducing today is the the foundation for a lot more batch Computing Primitives that we can build on top of",
    "start": "1753799",
    "end": "1760320"
  },
  {
    "text": "this and uh hopefully it's uh pretty exciting for the customers to see what they can do with it so I uh I'm the",
    "start": "1760320",
    "end": "1766120"
  },
  {
    "text": "brave crazy guy who thought we'd do a live demo",
    "start": "1766120",
    "end": "1771518"
  },
  {
    "text": "so password",
    "start": "1772240",
    "end": "1775720"
  },
  {
    "text": "Works screen work yep okay okay uh let's do that as well can",
    "start": "1779440",
    "end": "1787240"
  },
  {
    "text": "everyone see that okay good yeah",
    "start": "1787240",
    "end": "1794000"
  },
  {
    "text": "awesome awesome",
    "start": "1794000",
    "end": "1799320"
  },
  {
    "text": "that's not our software is it that that is not our software that's someone else's software",
    "start": "1800519",
    "end": "1806480"
  },
  {
    "text": "actually uh yeah let's give it a shop see if that works Co you restored an empty one",
    "start": "1807960",
    "end": "1815480"
  },
  {
    "text": "okay cool uh did everyone noticed the new console home launch last week yeah I",
    "start": "1815480",
    "end": "1820799"
  },
  {
    "text": "I still can't find [Laughter]",
    "start": "1820799",
    "end": "1826039"
  },
  {
    "text": "anything uh all righty so uh what I wanted to do was um",
    "start": "1826039",
    "end": "1831919"
  },
  {
    "text": "have a little bit of a play with the service uh so we're up in preview right now what that means is that we're uh ready to start taking customers but",
    "start": "1831919",
    "end": "1838080"
  },
  {
    "text": "we've got a few more things we want to get done before we announce the service as GA and make it available to everyone",
    "start": "1838080",
    "end": "1843200"
  },
  {
    "text": "and start expanding around the globe um what Jamie uh sort of introduced you was some of the concepts some of the",
    "start": "1843200",
    "end": "1848840"
  },
  {
    "text": "Primitives the Notions of job cues and compute environments and job definitions",
    "start": "1848840",
    "end": "1854080"
  },
  {
    "text": "um uh as with all good demos uh I went of course and sort of pre-typed half of the stuff because you don't want to watch me making typos across the screen",
    "start": "1854080",
    "end": "1860720"
  },
  {
    "text": "that's not really cool demo um so what I'm going to do is I'm going to walk through some of things that are usually done either with the console I didn't",
    "start": "1860720",
    "end": "1866279"
  },
  {
    "text": "set the console up for today but uh stuff that would normally be done through the console you can just click through the wizard and takes care of it",
    "start": "1866279",
    "end": "1871799"
  },
  {
    "text": "uh or like everything in AWS we have a CLI so you can go in and use the CLI I'll also take a little moment to",
    "start": "1871799",
    "end": "1877080"
  },
  {
    "text": "explain some of the things that that we're doing in here oh that's already off and running um so what we're doing",
    "start": "1877080",
    "end": "1885039"
  },
  {
    "text": "here is creating a computer environment now you can think of a computer environment as a collection of resources",
    "start": "1885039",
    "end": "1891080"
  },
  {
    "text": "that are required for the jobs to run um when we think about a Compu environment internally as the service team we think",
    "start": "1891080",
    "end": "1897480"
  },
  {
    "text": "of it as a set of constraints and guidance the customer has given us so these are these are the the things you",
    "start": "1897480",
    "end": "1903320"
  },
  {
    "text": "want us to do it's like a contract so you've said to us I want you to use certain instance types I only want them",
    "start": "1903320",
    "end": "1908480"
  },
  {
    "text": "in this a if we're using spot this is the price I want you to bid and the rest of it I want you to take care of so that",
    "start": "1908480",
    "end": "1914480"
  },
  {
    "text": "that's the ask and so when you make the create Compu environment call you're providing that data to us and I I'll",
    "start": "1914480",
    "end": "1920080"
  },
  {
    "text": "really quickly take a look at what we provided here so uh these things are stuff Jamie mentioned so we're doing",
    "start": "1920080",
    "end": "1925120"
  },
  {
    "text": "managed and some State we're doing an ec2 one some minin some Max CPUs that need to be created instance types so in",
    "start": "1925120",
    "end": "1933240"
  },
  {
    "text": "this example we set instance types to Optimal now optimal isn't an instance we launched on on Wednesday Andy didn't",
    "start": "1933240",
    "end": "1939559"
  },
  {
    "text": "launch optimal there's so many of them uh so what optimal actually is is a collection of instance types and it's in",
    "start": "1939559",
    "end": "1945799"
  },
  {
    "text": "our documentation and right now it refers to the C4 M4 and R4 family and we",
    "start": "1945799",
    "end": "1952279"
  },
  {
    "text": "will pick out of those instance types the ones that make the most sense for the jobs you've submitted you can also",
    "start": "1952279",
    "end": "1958039"
  },
  {
    "text": "change this to be a very specific list like Jamie said like I only want to have c38 extra large or you can do shorthand",
    "start": "1958039",
    "end": "1965639"
  },
  {
    "text": "function in here and say I like the C3 family and just use C3 and nothing else because any one of the C3 family will",
    "start": "1965639",
    "end": "1972399"
  },
  {
    "text": "work and if you're submitting a single job you don't want to launch an eight extra large but if you put 10,000 J jobs in we should definitely use the larger",
    "start": "1972399",
    "end": "1979039"
  },
  {
    "text": "instances to to to solve that for you and then kind of the the obvious thing subnets uh Security Group IDs key pairs",
    "start": "1979039",
    "end": "1986679"
  },
  {
    "text": "um some tags so you can pass tags through in the API it's pretty important for people so uh not only can you",
    "start": "1986679",
    "end": "1993279"
  },
  {
    "text": "provide your own tags but we'll tag the resources with an AWS batch tag uh so it's easy to do and uh and then a",
    "start": "1993279",
    "end": "2000080"
  },
  {
    "text": "service role so we need a role that uh we can operate in your account so uh you'll find this in the IM console under",
    "start": "2000080",
    "end": "2006240"
  },
  {
    "text": "the list of available roles and so it's gone ahead and created that computer environment so if I do",
    "start": "2006240",
    "end": "2012200"
  },
  {
    "text": "[Music] a a describ computer environments call",
    "start": "2012200",
    "end": "2018519"
  },
  {
    "text": "I'll find that I've got two computer environments because uh I believe in safety so I launched one earlier that if",
    "start": "2018519",
    "end": "2024039"
  },
  {
    "text": "this one didn't work we could use as well so uh what I've got here is two of them one of them is called demo one and",
    "start": "2024039",
    "end": "2030240"
  },
  {
    "text": "uh it's already up and running I I launched that before we came over couple of things that are slightly different in here this one the desired CPUs is",
    "start": "2030240",
    "end": "2036519"
  },
  {
    "text": "already set to 16 and like I said I used the shorthand C3 so it means anything in the C3 family will work for me in this",
    "start": "2036519",
    "end": "2042559"
  },
  {
    "text": "computer environment and so I should be able to find that actually in our system and then the one I just created which is",
    "start": "2042559",
    "end": "2048679"
  },
  {
    "text": "called live demo just to remind me we're doing it live and uh in here we've got optimal for the instance types and the",
    "start": "2048679",
    "end": "2055079"
  },
  {
    "text": "tags that we wanted to pass through so the next thing I need to do is create a job queue",
    "start": "2055079",
    "end": "2061240"
  },
  {
    "text": "now let me do this actually",
    "start": "2061240",
    "end": "2068878"
  },
  {
    "text": "so um within a job queue we have something called compute environment order so when Jamie gave that demo he he",
    "start": "2075200",
    "end": "2082079"
  },
  {
    "text": "noted that the top one was taking all the C4s and the r3s and it was the one that was taking the high priority work",
    "start": "2082079",
    "end": "2088440"
  },
  {
    "text": "and then they added another Compu environment called The Spot compute environment had all the yellow jobs that were being fed into it and what Jamie",
    "start": "2088440",
    "end": "2094398"
  },
  {
    "text": "had done in that demo there is he' taken the job Cube and he' specified the compute environment order and he'",
    "start": "2094399",
    "end": "2099400"
  },
  {
    "text": "specified the first compute environment with a uh compute environment order of one and the second one with two so the",
    "start": "2099400",
    "end": "2105920"
  },
  {
    "text": "compute environment order is just an integer um lower integer is first higher integer is later and you can have up to",
    "start": "2105920",
    "end": "2112280"
  },
  {
    "text": "three compute environments right now all in one job queue and it will order their it way through those and it will only",
    "start": "2112280",
    "end": "2117400"
  },
  {
    "text": "scale those up when that the first computer environment can no longer scale or when the first computer environment",
    "start": "2117400",
    "end": "2122680"
  },
  {
    "text": "is fully utilized by by the system so uh I'm going to go ahead and create one",
    "start": "2122680",
    "end": "2128119"
  },
  {
    "text": "with my copy paste here to make life",
    "start": "2128119",
    "end": "2131880"
  },
  {
    "text": "simple see that's why we have copy paste you don't watch me doing this all",
    "start": "2139920",
    "end": "2145519"
  },
  {
    "text": "day and uh I also made another one of these earlier as well just in case nothing was working so we have two job",
    "start": "2146640",
    "end": "2151720"
  },
  {
    "text": "cues in here we have demo one and I have live demo and uh you can see that they're pointing at uh two different uh",
    "start": "2151720",
    "end": "2157400"
  },
  {
    "text": "computer environments and I could update that and and move them over you also note that these have things like State",
    "start": "2157400",
    "end": "2162480"
  },
  {
    "text": "and Status so state is something you control state is a property that when you're uh you want to stop jobs going to",
    "start": "2162480",
    "end": "2169800"
  },
  {
    "text": "a computer environment or you want to stop a job queue from accepting work or you want things to gracefully drain down",
    "start": "2169800",
    "end": "2175200"
  },
  {
    "text": "you can control that through the state of them and the status is our feedback to you that you know we were successful",
    "start": "2175200",
    "end": "2180359"
  },
  {
    "text": "in creating resources or the config that you passed to us was valid and we were able to bring the system up",
    "start": "2180359",
    "end": "2187440"
  },
  {
    "text": "so uh some job definitions Jamie mentioned are the templates for jobs now",
    "start": "2187440",
    "end": "2193720"
  },
  {
    "text": "they take a little bit longer to create so I of course went ahead and did those first um the first one which is clearly",
    "start": "2193720",
    "end": "2199400"
  },
  {
    "text": "my favorite I've been doing HBC a little over a decade now uh I've probably lost",
    "start": "2199400",
    "end": "2204480"
  },
  {
    "text": "count of the number of sleep jobs I've run to make sure that the very expensive computer we just bought actually works",
    "start": "2204480",
    "end": "2209520"
  },
  {
    "text": "so uh that's the same job we use when we're getting first started is we like to fire a sleep job in and make sure that the very expensive system is",
    "start": "2209520",
    "end": "2215960"
  },
  {
    "text": "capable of doing nothing for 60 seconds so um the Sleep job here just to walk you through what it looks like um it's",
    "start": "2215960",
    "end": "2223200"
  },
  {
    "text": "got an active status so uh job definitions are revisioned similar to task definitions in ECS what this",
    "start": "2223200",
    "end": "2230119"
  },
  {
    "text": "enables you to do is actually to push new versions of job definitions out without impacting any workflow that you",
    "start": "2230119",
    "end": "2236720"
  },
  {
    "text": "have you may have created a genomics workflow like Jamie gave in the earlier examples and it's pointing at versioned",
    "start": "2236720",
    "end": "2243400"
  },
  {
    "text": "Job definitions now that might be critical for compliance reasons it might be critical because changing it might",
    "start": "2243400",
    "end": "2249079"
  },
  {
    "text": "break something someone's doing and they have a deadline and it's important you don't break their work and so it's possible for you to reference with or",
    "start": "2249079",
    "end": "2255319"
  },
  {
    "text": "without the revision the job definition When You're Building your pipelines and so if you use the the revision number",
    "start": "2255319",
    "end": "2260880"
  },
  {
    "text": "you'll be able to always get that one um you can make them inactive and no future",
    "start": "2260880",
    "end": "2266000"
  },
  {
    "text": "jobs will use them but it doesn't impact any running jobs or any jobs already submitted into the system so um we've",
    "start": "2266000",
    "end": "2273240"
  },
  {
    "text": "got some stuff called parameters in here so parameter are the notion of being",
    "start": "2273240",
    "end": "2278520"
  },
  {
    "text": "able to Define defaults within a job definition and then also being able to accept them when you submit jobs so what",
    "start": "2278520",
    "end": "2284640"
  },
  {
    "text": "I've done here is I've created a parameter called Sleep Time set to 120 seconds so 2 minutes and then down here",
    "start": "2284640",
    "end": "2291880"
  },
  {
    "text": "in the command which is being passed into the busy box container which has sleep in it I'm actually referencing",
    "start": "2291880",
    "end": "2297760"
  },
  {
    "text": "that parameter with a ref so I do ref colon colon sleep time and then when the job is submitted I can either take it",
    "start": "2297760",
    "end": "2305000"
  },
  {
    "text": "from the parameters provided here or I can overwrite it at submit time with a new parameter and change it without",
    "start": "2305000",
    "end": "2310040"
  },
  {
    "text": "having to create a new job definition what I can also do is not provide the",
    "start": "2310040",
    "end": "2315079"
  },
  {
    "text": "parameters here but still reference them and it makes it a required parameter so",
    "start": "2315079",
    "end": "2320520"
  },
  {
    "text": "if someone tries to submit the job and they don't provide the sleep time it's going to throw a client exception saying",
    "start": "2320520",
    "end": "2326119"
  },
  {
    "text": "sleep time is required to submit the job so you can actually build up quite complex job definitions where you have",
    "start": "2326119",
    "end": "2332200"
  },
  {
    "text": "required parameters with defaults defaults are overridable required parameters must be provided and there's",
    "start": "2332200",
    "end": "2337680"
  },
  {
    "text": "no default so the the sort of examples we do there is if you're doing like genomics gatk like you actually have to",
    "start": "2337680",
    "end": "2343119"
  },
  {
    "text": "provide the BAM file and it's required for it to move forward whereas you may actually have some defaults about maybe the data set that you're querying for",
    "start": "2343119",
    "end": "2349400"
  },
  {
    "text": "that job definition you can leave them set as parameters um some of the other stuff in here um things are semi",
    "start": "2349400",
    "end": "2356400"
  },
  {
    "text": "interesting memory and vcpus so um when we were looking at building the batch system uh Docker is sort of one of the",
    "start": "2356400",
    "end": "2363680"
  },
  {
    "text": "technologies that that's behind this containerization uh they think of CPUs in 1024 units and uh we sat down and spoke",
    "start": "2363680",
    "end": "2371760"
  },
  {
    "text": "to a lot of customers they were like no no we we think about CPUs just the whole CPUs um there's no floating Point CPUs",
    "start": "2371760",
    "end": "2377599"
  },
  {
    "text": "there so uh it's it's somewhat interesting for you when you first get started but everything is a vcpu based",
    "start": "2377599",
    "end": "2382880"
  },
  {
    "text": "and and it actually makes a lot of sense because all of our ec2 instances are vcpu based and so what you're specifying",
    "start": "2382880",
    "end": "2388640"
  },
  {
    "text": "effectively is the amount of ec2 that you're looking for the other thing that we've tried to do is really keep you",
    "start": "2388640",
    "end": "2395079"
  },
  {
    "text": "focused around job level Primitives so what do the job require and and less about how I want my compute to be",
    "start": "2395079",
    "end": "2401440"
  },
  {
    "text": "brought up and what specific one I'm looking for but rather Define the requirements and we'll go find the right one for",
    "start": "2401440",
    "end": "2407480"
  },
  {
    "text": "you um uh Jamie hinted at it earlier Lambda so this one's a containerized uh job function and we'll go ahead and",
    "start": "2407480",
    "end": "2415800"
  },
  {
    "text": "submit this",
    "start": "2415800",
    "end": "2418720"
  },
  {
    "text": "so now you're using a different job",
    "start": "2425359",
    "end": "2431560"
  },
  {
    "text": "definition for that for the job you just submitted right tole oh I did yeah I put the stress one in sorry well it's six",
    "start": "2431560",
    "end": "2436680"
  },
  {
    "text": "and a half a dozen",
    "start": "2436680",
    "end": "2440040"
  },
  {
    "text": "um so what we can see here is I didn't quite walk it through but it's exactly the same self-explanatory this is a",
    "start": "2449040",
    "end": "2454880"
  },
  {
    "text": "stress test job so it been up CPU in memory and actually makes something appear in consoles and logs Etc um it's",
    "start": "2454880",
    "end": "2461480"
  },
  {
    "text": "already jumped into its runnable state and so",
    "start": "2461480",
    "end": "2466960"
  },
  {
    "text": "um just a quick walk through of the states that we support in the system right now so we have submitted pending",
    "start": "2477200",
    "end": "2483760"
  },
  {
    "text": "runnable starting running succeeding did and failed and I'll really quickly walk",
    "start": "2483760",
    "end": "2489520"
  },
  {
    "text": "through what those mean and what's happening within the environment so you have sort of a bit of an understanding of how the system functions behind the",
    "start": "2489520",
    "end": "2495760"
  },
  {
    "text": "scenes so submitted is a state that you you may see depending on the volume of work you have in the system you'll note",
    "start": "2495760",
    "end": "2501920"
  },
  {
    "text": "that when I did describe jobs it was already at runnable so it already jumped forward to two states what submitted",
    "start": "2501920",
    "end": "2507680"
  },
  {
    "text": "means is that the front ends accepted your job and we persisted it into a data store and that we're going to start",
    "start": "2507680",
    "end": "2513160"
  },
  {
    "text": "looking at that job that means your job is there okay that that's it done so from a web service perspective API is",
    "start": "2513160",
    "end": "2519280"
  },
  {
    "text": "complete we've got your job um if it moves into pending it means that there's dependencies for this job and so when a",
    "start": "2519280",
    "end": "2527160"
  },
  {
    "text": "job is sitting in pending it means there's other things that are required for this job to be able to move into another state if it's in runnable it",
    "start": "2527160",
    "end": "2534920"
  },
  {
    "text": "means that we've evaluated the job there's absolutely no reason as far as the scheduler is concerned this job",
    "start": "2534920",
    "end": "2540200"
  },
  {
    "text": "should not be running so it's in a runnable state but it's likely that we don't have any capacity in the computer",
    "start": "2540200",
    "end": "2546480"
  },
  {
    "text": "environment and so at this point we're probably telling the computer environment that it needs to go add some",
    "start": "2546480",
    "end": "2551960"
  },
  {
    "text": "capacity scale up Etc um if it's in starting it means we've given it off to ECS and said hey please go and run this",
    "start": "2551960",
    "end": "2558680"
  },
  {
    "text": "job for us and I think running succeeded and failed are somewhat self-explanatory but uh the running is when it's on the",
    "start": "2558680",
    "end": "2565200"
  },
  {
    "text": "cluster succeeded means that we took and it's a very classic exit Code Zero this is how Docker thinks about it it's a",
    "start": "2565200",
    "end": "2571280"
  },
  {
    "text": "very unicy way I quite like it myself and failed is nonzero so you can have anything there at all and it will be",
    "start": "2571280",
    "end": "2577119"
  },
  {
    "text": "failed and you can build dependencies around these states as well so let me just take a look see if",
    "start": "2577119",
    "end": "2584280"
  },
  {
    "text": "this is there so he's still runnable so assuming my console fu is",
    "start": "2584280",
    "end": "2591280"
  },
  {
    "text": "working behind a managed computer environment we leverage autoscaling to go ahead and spin up an",
    "start": "2591280",
    "end": "2598040"
  },
  {
    "text": "environment now it hasn't gone and spun up an environment for the live demo one yet and the reason for that is it takes",
    "start": "2598040",
    "end": "2605160"
  },
  {
    "text": "a little bit of time to evaluate the job queue it doesn't immediately start launching capacity now how long it takes",
    "start": "2605160",
    "end": "2611400"
  },
  {
    "text": "is something that we're honestly still waiting for more feedback from customers we're going to dial that into the",
    "start": "2611400",
    "end": "2616480"
  },
  {
    "text": "appropriate number you want to be really careful um if you over index on the single job problem then you end up",
    "start": "2616480",
    "end": "2622960"
  },
  {
    "text": "building a system that launches one instance immediately um and then someone comes along and starts submitting a job",
    "start": "2622960",
    "end": "2628040"
  },
  {
    "text": "every two minutes and you end up with thousands of small instances and they're like I really wanted maybe 10 big",
    "start": "2628040",
    "end": "2633599"
  },
  {
    "text": "instances that would have been much more effective way of doing this the algorithm that we use or the the",
    "start": "2633599",
    "end": "2638680"
  },
  {
    "text": "approach that we take is a least instances approach to to capacity we",
    "start": "2638680",
    "end": "2644200"
  },
  {
    "text": "think of instances or all of the resources they use as having a cost now while the cost of compute for a C3 large",
    "start": "2644200",
    "end": "2651559"
  },
  {
    "text": "is the same as a c34 extra large just a quarter of it it takes four Enis to",
    "start": "2651559",
    "end": "2657480"
  },
  {
    "text": "launch four C4s takes four IPS it starts burning through resources you may not",
    "start": "2657480",
    "end": "2663319"
  },
  {
    "text": "have in your environment you might not have unlimited IP addresses and so we actually want to be sort of conservative",
    "start": "2663319",
    "end": "2669160"
  },
  {
    "text": "about how we use those resources and and what we do with them so this guy should hopefully go",
    "start": "2669160",
    "end": "2675960"
  },
  {
    "text": "wake up on alter scaling in the background while we're doing while he's waking up let me grab one I created",
    "start": "2675960",
    "end": "2683760"
  },
  {
    "text": "earlier and stick it",
    "start": "2683760",
    "end": "2688760"
  },
  {
    "text": "in",
    "start": "2694960",
    "end": "2697960"
  },
  {
    "text": "so both these guys have gone into the submit probably it'll take about 60 seconds for something to evaluate them and decide to",
    "start": "2724079",
    "end": "2730000"
  },
  {
    "text": "move them forward and when it does we should see that the first job we submitted which was the Sleep job it's",
    "start": "2730000",
    "end": "2736760"
  },
  {
    "text": "going to go through and find a a compute resource in the ECS cluster that's already there and then the second job",
    "start": "2736760",
    "end": "2742480"
  },
  {
    "text": "should move into a pending State and it should be waiting for that first one to",
    "start": "2742480",
    "end": "2747760"
  },
  {
    "text": "finish so the first job is moved to runnable the second job is moved to pending so this job has a dependency in",
    "start": "2748640",
    "end": "2755680"
  },
  {
    "text": "fact we can probably see the dependson here the thing about the dependson it's a list so you can actually have multiple",
    "start": "2755680",
    "end": "2761079"
  },
  {
    "text": "dependen you can build quite a wide graph on there or wide dag um and you can specify that all of them need to to",
    "start": "2761079",
    "end": "2767559"
  },
  {
    "text": "be successful and then the bottom job here is now moved to starting so what",
    "start": "2767559",
    "end": "2773240"
  },
  {
    "text": "that means is if I go in and actually take a look at ECS we should actually find in here that we've got some ECS",
    "start": "2773240",
    "end": "2781280"
  },
  {
    "text": "clusters uh live demo is quietly coming up in the background you'll notice as well so if I go back here to my",
    "start": "2781280",
    "end": "2787240"
  },
  {
    "text": "autoscaling groups and sorry if I'm jumping around folks you hopefully can stick with this um it'll bring that up",
    "start": "2787240",
    "end": "2794200"
  },
  {
    "text": "in a second so this one demo one should now actually have a task running on it",
    "start": "2794200",
    "end": "2799440"
  },
  {
    "text": "so we've pushed that task all the way out and it's now sitting on the ECS cluster now I could go and bring up our",
    "start": "2799440",
    "end": "2804839"
  },
  {
    "text": "console if we brought our console up today and and sort of show you it from our side as well but these are the under the underpinning Services one of the",
    "start": "2804839",
    "end": "2811800"
  },
  {
    "text": "things we did and I think Jamie hinted at it when we we started was we saw a lot of customer building all of this and",
    "start": "2811800",
    "end": "2816880"
  },
  {
    "text": "pulling them together and we thought we could do it two ways we could hide all",
    "start": "2816880",
    "end": "2822000"
  },
  {
    "text": "of the sausage making and all you would have is a batch job that disappeared off somewhere but the pretty overwhelming",
    "start": "2822000",
    "end": "2828720"
  },
  {
    "text": "feedback we got from customers was I kind of still want to see it I want to know that my instances can access all my resources I might want to add my own",
    "start": "2828720",
    "end": "2835359"
  },
  {
    "text": "storage I have a whole bunch of things I might want to do and so we've basically let you see how it operates like we put",
    "start": "2835359",
    "end": "2841880"
  },
  {
    "text": "all the resources into your account for you to take a look at it um so this job here I think sleeps for two",
    "start": "2841880",
    "end": "2849079"
  },
  {
    "text": "minutes probably and this guy will stay pending and move forward if I go back",
    "start": "2849079",
    "end": "2854200"
  },
  {
    "text": "without jumping around too much we should in a moment end up with",
    "start": "2854200",
    "end": "2861960"
  },
  {
    "text": "a he's still waiting to go forward",
    "start": "2867800",
    "end": "2872559"
  },
  {
    "text": "okay and then the last thing I want to pull up here is logs so all of the batch",
    "start": "2874720",
    "end": "2883480"
  },
  {
    "text": "jobs within AWS batch log to cloudwatch logs so all of the standard outst",
    "start": "2883480",
    "end": "2888880"
  },
  {
    "text": "standard error goes into a cloudwatch log stream there's an AWS batch log group and so it's very easy to go in and",
    "start": "2888880",
    "end": "2895280"
  },
  {
    "text": "find those logs it's very easy to also build tooling around those logs you can even have alerts on there so you can",
    "start": "2895280",
    "end": "2901079"
  },
  {
    "text": "actually trigger things that will cause alarms to be generated when logs are are generated as well um if we take a look",
    "start": "2901079",
    "end": "2907640"
  },
  {
    "text": "in here this was the stress test one I ran earlier so all of the logging output in here was it running for 60 seconds on",
    "start": "2907640",
    "end": "2914359"
  },
  {
    "text": "a stress job um the job ID or the the name of the stream is the job name the",
    "start": "2914359",
    "end": "2920440"
  },
  {
    "text": "job ID and then the container ID um if we do a retry on the job we'll actually be able to put all of the logs in the",
    "start": "2920440",
    "end": "2926760"
  },
  {
    "text": "same log stream with different uh details on them let's see if it's brought up the other",
    "start": "2926760",
    "end": "2933559"
  },
  {
    "text": "one not yet okay okay so that's us putting jobs into the system and",
    "start": "2933559",
    "end": "2938920"
  },
  {
    "text": "probably at this point 2 minutes has passed so this guy succeeded and this guy is now runnable so it moved from",
    "start": "2938920",
    "end": "2945200"
  },
  {
    "text": "pending to runnable the system's comfortable that it can move the job forward and hopefully within a sort of",
    "start": "2945200",
    "end": "2950920"
  },
  {
    "text": "about 60 seconds that'll move into starting and running and it'll start to run that job out in the cluster as well",
    "start": "2950920",
    "end": "2957000"
  },
  {
    "text": "so that was a little bit of a live demo fortunately everything works right now uh of AWS batch and uh very happy to",
    "start": "2957000",
    "end": "2963680"
  },
  {
    "text": "take any questions uh that you guys have today thank",
    "start": "2963680",
    "end": "2968240"
  },
  {
    "text": "you",
    "start": "2968799",
    "end": "2971799"
  }
]