[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "in this video you'll see how to notify",
    "start": "320",
    "end": "2320"
  },
  {
    "text": "customers of incoming deliveries using",
    "start": "2320",
    "end": "4319"
  },
  {
    "text": "amazon location service with this fully",
    "start": "4319",
    "end": "7120"
  },
  {
    "text": "managed service",
    "start": "7120",
    "end": "8080"
  },
  {
    "text": "you can create a geofence on a map track",
    "start": "8080",
    "end": "10320"
  },
  {
    "text": "whether delivery drivers have entered",
    "start": "10320",
    "end": "11840"
  },
  {
    "text": "the geofence",
    "start": "11840",
    "end": "12880"
  },
  {
    "text": "and send automatic notifications in the",
    "start": "12880",
    "end": "14799"
  },
  {
    "text": "event of entry",
    "start": "14799",
    "end": "16800"
  },
  {
    "text": "to get started let's navigate to amazon",
    "start": "16800",
    "end": "19039"
  },
  {
    "start": "17000",
    "end": "81000"
  },
  {
    "text": "location service",
    "start": "19039",
    "end": "20000"
  },
  {
    "text": "and take a look at our geofence",
    "start": "20000",
    "end": "21279"
  },
  {
    "text": "collection",
    "start": "21279",
    "end": "23760"
  },
  {
    "text": "a geofence is a virtual boundary on a",
    "start": "23760",
    "end": "25840"
  },
  {
    "text": "map",
    "start": "25840",
    "end": "26800"
  },
  {
    "text": "as you can see we already have a",
    "start": "26800",
    "end": "28400"
  },
  {
    "text": "geofence collection that was created",
    "start": "28400",
    "end": "30000"
  },
  {
    "text": "by amazon location service but for our",
    "start": "30000",
    "end": "32238"
  },
  {
    "text": "purposes we'll create a new one",
    "start": "32239",
    "end": "34960"
  },
  {
    "text": "we'll use this geofence collection to",
    "start": "34960",
    "end": "36559"
  },
  {
    "text": "store and manage geofences used for",
    "start": "36559",
    "end": "38480"
  },
  {
    "text": "deliveries",
    "start": "38480",
    "end": "41040"
  },
  {
    "text": "let's not create an eventbridge rule for",
    "start": "41760",
    "end": "43600"
  },
  {
    "text": "this collection we'll make one later but",
    "start": "43600",
    "end": "45600"
  },
  {
    "text": "for now",
    "start": "45600",
    "end": "46160"
  },
  {
    "text": "let's just create the geofence",
    "start": "46160",
    "end": "47600"
  },
  {
    "text": "collection resource",
    "start": "47600",
    "end": "49840"
  },
  {
    "text": "now that we have a geofence collection",
    "start": "49840",
    "end": "51600"
  },
  {
    "text": "let's add a geofence to it",
    "start": "51600",
    "end": "54960"
  },
  {
    "text": "let's download the example geojson file",
    "start": "55680",
    "end": "60320"
  },
  {
    "text": "this file provides an example of the",
    "start": "61199",
    "end": "62800"
  },
  {
    "text": "formatting used to define a geofence",
    "start": "62800",
    "end": "65040"
  },
  {
    "text": "if you wish you can modify it to suit",
    "start": "65040",
    "end": "66799"
  },
  {
    "text": "your needs inserting coordinates for the",
    "start": "66799",
    "end": "68720"
  },
  {
    "text": "specific geographical area you want to",
    "start": "68720",
    "end": "70840"
  },
  {
    "text": "monitor",
    "start": "70840",
    "end": "73680"
  },
  {
    "text": "for the purposes of this example this",
    "start": "73680",
    "end": "75520"
  },
  {
    "text": "file is ready to use",
    "start": "75520",
    "end": "76880"
  },
  {
    "text": "let's add it to the collection",
    "start": "76880",
    "end": "80079"
  },
  {
    "start": "81000",
    "end": "110000"
  },
  {
    "text": "our collection now contains a geofence",
    "start": "81840",
    "end": "83600"
  },
  {
    "text": "around north vancouver",
    "start": "83600",
    "end": "85439"
  },
  {
    "text": "to determine when the geofence has been",
    "start": "85439",
    "end": "87200"
  },
  {
    "text": "entered we can create a tracker",
    "start": "87200",
    "end": "90640"
  },
  {
    "text": "a tracker is a resource that receives",
    "start": "90640",
    "end": "92400"
  },
  {
    "text": "location updates from devices that send",
    "start": "92400",
    "end": "94320"
  },
  {
    "text": "geolocation positions",
    "start": "94320",
    "end": "95680"
  },
  {
    "text": "such as mobile phones or gps devices",
    "start": "95680",
    "end": "100320"
  },
  {
    "text": "now let's link the tracker to the",
    "start": "100320",
    "end": "101600"
  },
  {
    "text": "geofence collection we created so that",
    "start": "101600",
    "end": "103520"
  },
  {
    "text": "all location updates received by the",
    "start": "103520",
    "end": "105200"
  },
  {
    "text": "tracker are automatically evaluated",
    "start": "105200",
    "end": "107040"
  },
  {
    "text": "against the geofences in the collection",
    "start": "107040",
    "end": "110240"
  },
  {
    "start": "110000",
    "end": "213000"
  },
  {
    "text": "next we'll use an amazon simple",
    "start": "110240",
    "end": "111840"
  },
  {
    "text": "notification service or sns to notify",
    "start": "111840",
    "end": "114560"
  },
  {
    "text": "users anytime the tracker receives an",
    "start": "114560",
    "end": "116479"
  },
  {
    "text": "update",
    "start": "116479",
    "end": "116880"
  },
  {
    "text": "indicating the geofence has been entered",
    "start": "116880",
    "end": "119840"
  },
  {
    "text": "let's create a new sns topic",
    "start": "119840",
    "end": "123438"
  },
  {
    "text": "we'll retain the default settings and",
    "start": "125200",
    "end": "126719"
  },
  {
    "text": "create the topic",
    "start": "126719",
    "end": "129840"
  },
  {
    "text": "next let's create a subscription for the",
    "start": "131920",
    "end": "133760"
  },
  {
    "text": "topic in order to designate a target for",
    "start": "133760",
    "end": "135680"
  },
  {
    "text": "our notification",
    "start": "135680",
    "end": "138560"
  },
  {
    "text": "we'll select email as the protocol and",
    "start": "139280",
    "end": "141280"
  },
  {
    "text": "specify an email address to receive the",
    "start": "141280",
    "end": "143200"
  },
  {
    "text": "notification",
    "start": "143200",
    "end": "145840"
  },
  {
    "text": "let's create the subscription",
    "start": "148959",
    "end": "152160"
  },
  {
    "text": "we can confirm the subscription by",
    "start": "153680",
    "end": "155120"
  },
  {
    "text": "sending a confirmation url to the email",
    "start": "155120",
    "end": "157200"
  },
  {
    "text": "address we entered",
    "start": "157200",
    "end": "160000"
  },
  {
    "text": "we can enter the confirmation url here",
    "start": "160160",
    "end": "162239"
  },
  {
    "text": "and click it in the email",
    "start": "162239",
    "end": "165280"
  },
  {
    "text": "the subscription has been confirmed next",
    "start": "165760",
    "end": "168480"
  },
  {
    "text": "let's edit it to include a filter policy",
    "start": "168480",
    "end": "172560"
  },
  {
    "text": "by default the sns topic subscriber",
    "start": "175040",
    "end": "177280"
  },
  {
    "text": "receives every message published to the",
    "start": "177280",
    "end": "178959"
  },
  {
    "text": "topic",
    "start": "178959",
    "end": "179920"
  },
  {
    "text": "the policy will filter which",
    "start": "179920",
    "end": "181200"
  },
  {
    "text": "notifications the subscriber receives",
    "start": "181200",
    "end": "185840"
  },
  {
    "text": "we now have an sns topic a subscription",
    "start": "185840",
    "end": "188159"
  },
  {
    "text": "and a filter policy",
    "start": "188159",
    "end": "191200"
  },
  {
    "text": "the next step in the process is to",
    "start": "193040",
    "end": "194560"
  },
  {
    "text": "create a lambda function in aws lambda",
    "start": "194560",
    "end": "199840"
  },
  {
    "text": "we'll select python 3.8 for the runtime",
    "start": "202159",
    "end": "204720"
  },
  {
    "text": "specify a name and create the function",
    "start": "204720",
    "end": "213360"
  },
  {
    "text": "this function will leverage the sns",
    "start": "213360",
    "end": "215040"
  },
  {
    "text": "topic we created earlier to notify",
    "start": "215040",
    "end": "216959"
  },
  {
    "text": "customers of incoming deliveries",
    "start": "216959",
    "end": "218959"
  },
  {
    "text": "let's edit the function's code",
    "start": "218959",
    "end": "222000"
  },
  {
    "text": "we'll replace this text with our own",
    "start": "222000",
    "end": "224840"
  },
  {
    "text": "code",
    "start": "224840",
    "end": "226400"
  },
  {
    "text": "now let's deploy the changes next",
    "start": "226400",
    "end": "229519"
  },
  {
    "text": "let's edit the configuration to give",
    "start": "229519",
    "end": "231040"
  },
  {
    "text": "this function permission to invoke the",
    "start": "231040",
    "end": "232640"
  },
  {
    "text": "sns topic",
    "start": "232640",
    "end": "235519"
  },
  {
    "text": "let's click into the execution role and",
    "start": "237519",
    "end": "239439"
  },
  {
    "text": "add an inline policy",
    "start": "239439",
    "end": "242640"
  },
  {
    "text": "we'll add json code to grant the need of",
    "start": "243120",
    "end": "245040"
  },
  {
    "text": "permission",
    "start": "245040",
    "end": "247519"
  },
  {
    "text": "let's review the policy we'll give the",
    "start": "249120",
    "end": "252560"
  },
  {
    "text": "policy a name and create",
    "start": "252560",
    "end": "254000"
  },
  {
    "text": "it",
    "start": "254000",
    "end": "256159"
  },
  {
    "start": "258000",
    "end": "346000"
  },
  {
    "text": "now that the lambda function has the",
    "start": "258079",
    "end": "259440"
  },
  {
    "text": "appropriate permissions we'll create an",
    "start": "259440",
    "end": "261120"
  },
  {
    "text": "event bridge rule",
    "start": "261120",
    "end": "262079"
  },
  {
    "text": "that will perform actions in response to",
    "start": "262079",
    "end": "263919"
  },
  {
    "text": "an entry event from our geofence",
    "start": "263919",
    "end": "267040"
  },
  {
    "text": "amazon eventbridge is a serverless event",
    "start": "267040",
    "end": "269040"
  },
  {
    "text": "bus that efficiently connects",
    "start": "269040",
    "end": "270479"
  },
  {
    "text": "applications together using data from",
    "start": "270479",
    "end": "272240"
  },
  {
    "text": "aws services such as amazon location",
    "start": "272240",
    "end": "274639"
  },
  {
    "text": "service",
    "start": "274639",
    "end": "277040"
  },
  {
    "text": "let's create a rule that will act on a",
    "start": "277040",
    "end": "278639"
  },
  {
    "text": "geofence enter event",
    "start": "278639",
    "end": "283840"
  },
  {
    "text": "we'll build an event pattern for this",
    "start": "284960",
    "end": "286479"
  },
  {
    "text": "rule",
    "start": "286479",
    "end": "288720"
  },
  {
    "text": "this pattern will be predefined by the",
    "start": "289360",
    "end": "291040"
  },
  {
    "text": "service",
    "start": "291040",
    "end": "293440"
  },
  {
    "text": "the service provider is aws",
    "start": "294080",
    "end": "297360"
  },
  {
    "text": "the service name is amazon location",
    "start": "297360",
    "end": "299199"
  },
  {
    "text": "service",
    "start": "299199",
    "end": "301600"
  },
  {
    "text": "and the event type is location geofence",
    "start": "303520",
    "end": "307599"
  },
  {
    "text": "event",
    "start": "308840",
    "end": "310080"
  },
  {
    "text": "this will specifically be for enter",
    "start": "310080",
    "end": "312000"
  },
  {
    "text": "events",
    "start": "312000",
    "end": "314400"
  },
  {
    "text": "we'll select the lambda function we",
    "start": "316800",
    "end": "318240"
  },
  {
    "text": "created earlier as a target and create",
    "start": "318240",
    "end": "320240"
  },
  {
    "text": "the rule",
    "start": "320240",
    "end": "325840"
  },
  {
    "text": "now let's create another lambda function",
    "start": "327440",
    "end": "329199"
  },
  {
    "text": "that will publish a delivery driver's",
    "start": "329199",
    "end": "330720"
  },
  {
    "text": "location to the amazon location tracker",
    "start": "330720",
    "end": "332720"
  },
  {
    "text": "we created earlier",
    "start": "332720",
    "end": "335039"
  },
  {
    "text": "as before we'll name the function and",
    "start": "335039",
    "end": "336960"
  },
  {
    "text": "use python 3.8 for the runtime",
    "start": "336960",
    "end": "341039"
  },
  {
    "start": "346000",
    "end": "362000"
  },
  {
    "text": "let's find the function we just created",
    "start": "346880",
    "end": "348560"
  },
  {
    "text": "and drill into it",
    "start": "348560",
    "end": "353840"
  },
  {
    "text": "let's take a look at the code for this",
    "start": "357600",
    "end": "358960"
  },
  {
    "text": "function",
    "start": "358960",
    "end": "361360"
  },
  {
    "start": "362000",
    "end": "406000"
  },
  {
    "text": "notice that we're specifying the name of",
    "start": "362319",
    "end": "363840"
  },
  {
    "text": "the tracker we created",
    "start": "363840",
    "end": "365520"
  },
  {
    "text": "the function receives an event",
    "start": "365520",
    "end": "366800"
  },
  {
    "text": "containing the latitude longitude and id",
    "start": "366800",
    "end": "369280"
  },
  {
    "text": "of the device sending the information",
    "start": "369280",
    "end": "371440"
  },
  {
    "text": "it then sends this information to the",
    "start": "371440",
    "end": "372960"
  },
  {
    "text": "tracker in batch updates",
    "start": "372960",
    "end": "375600"
  },
  {
    "text": "for the purposes of this example we also",
    "start": "375600",
    "end": "377680"
  },
  {
    "text": "have code here that changes and updates",
    "start": "377680",
    "end": "379360"
  },
  {
    "text": "the latitude",
    "start": "379360",
    "end": "380080"
  },
  {
    "text": "and longitude every two seconds in order",
    "start": "380080",
    "end": "382240"
  },
  {
    "text": "to simulate a device moving across the",
    "start": "382240",
    "end": "384000"
  },
  {
    "text": "location",
    "start": "384000",
    "end": "385440"
  },
  {
    "text": "next let's add a policy granting this",
    "start": "385440",
    "end": "387199"
  },
  {
    "text": "function permission to send updates to",
    "start": "387199",
    "end": "388880"
  },
  {
    "text": "the tracker",
    "start": "388880",
    "end": "395840"
  },
  {
    "text": "let's name and create the policy",
    "start": "400560",
    "end": "404160"
  },
  {
    "text": "now let's test the lambda function we",
    "start": "407039",
    "end": "408639"
  },
  {
    "text": "just created",
    "start": "408639",
    "end": "411360"
  },
  {
    "text": "we'll go back to the code and configure",
    "start": "413280",
    "end": "415039"
  },
  {
    "text": "a test event",
    "start": "415039",
    "end": "423840"
  },
  {
    "text": "let's specify some different",
    "start": "440639",
    "end": "441759"
  },
  {
    "text": "geographical positions and create the",
    "start": "441759",
    "end": "443520"
  },
  {
    "text": "test event",
    "start": "443520",
    "end": "446160"
  },
  {
    "text": "now let's test the function",
    "start": "447520",
    "end": "451520"
  },
  {
    "start": "451000",
    "end": "493000"
  },
  {
    "text": "the lambda function has been executed",
    "start": "451520",
    "end": "455280"
  },
  {
    "text": "from the monitor tab we can view the",
    "start": "457520",
    "end": "459280"
  },
  {
    "text": "logs in cloudwatch",
    "start": "459280",
    "end": "461919"
  },
  {
    "text": "let's locate the delivery notifier among",
    "start": "461919",
    "end": "463919"
  },
  {
    "text": "the log groups",
    "start": "463919",
    "end": "466720"
  },
  {
    "text": "notice that a new log stream was just",
    "start": "468879",
    "end": "470479"
  },
  {
    "text": "created let's take a look",
    "start": "470479",
    "end": "474000"
  },
  {
    "text": "we can see that our notifier was",
    "start": "474720",
    "end": "476160"
  },
  {
    "text": "triggered because our geofence was",
    "start": "476160",
    "end": "477599"
  },
  {
    "text": "entered",
    "start": "477599",
    "end": "479840"
  },
  {
    "text": "you've just seen how to notify customers",
    "start": "479840",
    "end": "481599"
  },
  {
    "text": "of incoming deliveries using amazon",
    "start": "481599",
    "end": "483440"
  },
  {
    "text": "location service",
    "start": "483440",
    "end": "485280"
  },
  {
    "text": "you can learn more about this topic in",
    "start": "485280",
    "end": "486879"
  },
  {
    "text": "the description and links for this video",
    "start": "486879",
    "end": "489280"
  },
  {
    "text": "thanks for watching now it's your turn",
    "start": "489280",
    "end": "490800"
  },
  {
    "text": "to try",
    "start": "490800",
    "end": "493840"
  }
]