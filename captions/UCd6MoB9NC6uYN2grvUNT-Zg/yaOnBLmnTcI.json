[
  {
    "start": "0",
    "end": "73000"
  },
  {
    "text": "hello everyone and welcome to aws",
    "start": "640",
    "end": "2720"
  },
  {
    "text": "databases video series",
    "start": "2720",
    "end": "4240"
  },
  {
    "text": "here we talk about aws cloud databases",
    "start": "4240",
    "end": "7279"
  },
  {
    "text": "their features and functionalities and",
    "start": "7279",
    "end": "9200"
  },
  {
    "text": "we also see how you can use these",
    "start": "9200",
    "end": "10800"
  },
  {
    "text": "features to solve some common database",
    "start": "10800",
    "end": "13120"
  },
  {
    "text": "issues",
    "start": "13120",
    "end": "13920"
  },
  {
    "text": "like performance availability",
    "start": "13920",
    "end": "15759"
  },
  {
    "text": "scalability and more",
    "start": "15759",
    "end": "17600"
  },
  {
    "text": "my name is adit samanth i'm a senior",
    "start": "17600",
    "end": "19840"
  },
  {
    "text": "solutions architect here at aws",
    "start": "19840",
    "end": "21920"
  },
  {
    "text": "and i specialize in database",
    "start": "21920",
    "end": "23840"
  },
  {
    "text": "technologies including",
    "start": "23840",
    "end": "25359"
  },
  {
    "text": "amazon aurora and amazon rds",
    "start": "25359",
    "end": "28400"
  },
  {
    "text": "last time we discussed amazon or our",
    "start": "28400",
    "end": "30560"
  },
  {
    "text": "global databases",
    "start": "30560",
    "end": "31840"
  },
  {
    "text": "today we're going to continue that",
    "start": "31840",
    "end": "33120"
  },
  {
    "text": "discussion and we are going to talk",
    "start": "33120",
    "end": "35040"
  },
  {
    "text": "about",
    "start": "35040",
    "end": "35440"
  },
  {
    "text": "manage plan failover feature we're going",
    "start": "35440",
    "end": "38079"
  },
  {
    "text": "to see how this feature helps you",
    "start": "38079",
    "end": "40320"
  },
  {
    "text": "with the issues of cross-region disaster",
    "start": "40320",
    "end": "42879"
  },
  {
    "text": "recovery",
    "start": "42879",
    "end": "43600"
  },
  {
    "text": "and data locality that come with",
    "start": "43600",
    "end": "46640"
  },
  {
    "text": "a global scale so let's dive in",
    "start": "46640",
    "end": "50960"
  },
  {
    "text": "okay so for agenda today we will do",
    "start": "53680",
    "end": "57280"
  },
  {
    "text": "a quick overview of amazon aura",
    "start": "57280",
    "end": "59280"
  },
  {
    "text": "architecture",
    "start": "59280",
    "end": "60719"
  },
  {
    "text": "then we will do a quick overview of the",
    "start": "60719",
    "end": "62800"
  },
  {
    "text": "global database architecture",
    "start": "62800",
    "end": "64960"
  },
  {
    "text": "then we'll look at some of the use cases",
    "start": "64960",
    "end": "66799"
  },
  {
    "text": "for manage plan failover",
    "start": "66799",
    "end": "68799"
  },
  {
    "text": "and how it works and then we'll do the",
    "start": "68799",
    "end": "71119"
  },
  {
    "text": "demo",
    "start": "71119",
    "end": "73840"
  },
  {
    "start": "73000",
    "end": "175000"
  },
  {
    "text": "so amazon r is a database that we built",
    "start": "73920",
    "end": "75920"
  },
  {
    "text": "for the cloud",
    "start": "75920",
    "end": "77360"
  },
  {
    "text": "it takes advantage of the abundance of",
    "start": "77360",
    "end": "79280"
  },
  {
    "text": "storage and compute that is available in",
    "start": "79280",
    "end": "80960"
  },
  {
    "text": "the cloud",
    "start": "80960",
    "end": "81759"
  },
  {
    "text": "which makes it highly scalable one",
    "start": "81759",
    "end": "84560"
  },
  {
    "text": "architectural uniqueness",
    "start": "84560",
    "end": "85840"
  },
  {
    "text": "about aurora is that we decouple the",
    "start": "85840",
    "end": "88400"
  },
  {
    "text": "compute",
    "start": "88400",
    "end": "89040"
  },
  {
    "text": "from storage which enables these two",
    "start": "89040",
    "end": "91680"
  },
  {
    "text": "components to scale independently",
    "start": "91680",
    "end": "94400"
  },
  {
    "text": "at the bottom of the slide you can see",
    "start": "94400",
    "end": "96240"
  },
  {
    "text": "the distributed storage subsystem that",
    "start": "96240",
    "end": "98079"
  },
  {
    "text": "aura uses",
    "start": "98079",
    "end": "99360"
  },
  {
    "text": "which stripes the data across",
    "start": "99360",
    "end": "100880"
  },
  {
    "text": "potentially hundreds of storage nodes",
    "start": "100880",
    "end": "103119"
  },
  {
    "text": "we replicate the data across multiple",
    "start": "103119",
    "end": "105680"
  },
  {
    "text": "availability zones",
    "start": "105680",
    "end": "106799"
  },
  {
    "text": "while simultaneously backing it up to s3",
    "start": "106799",
    "end": "109280"
  },
  {
    "text": "which is",
    "start": "109280",
    "end": "109920"
  },
  {
    "text": "our object storage subsystem",
    "start": "109920",
    "end": "113280"
  },
  {
    "text": "this makes the storage highly durable",
    "start": "113280",
    "end": "115759"
  },
  {
    "text": "and resilient to failures",
    "start": "115759",
    "end": "117840"
  },
  {
    "text": "the aurora storage subsystem can grow",
    "start": "117840",
    "end": "120560"
  },
  {
    "text": "and shrink automatically as the database",
    "start": "120560",
    "end": "122799"
  },
  {
    "text": "grows and shrinks",
    "start": "122799",
    "end": "124719"
  },
  {
    "text": "amazon aura can have a single primary",
    "start": "124719",
    "end": "127840"
  },
  {
    "text": "node which is a read slash",
    "start": "127840",
    "end": "130000"
  },
  {
    "text": "write node and up to 15 read replicas",
    "start": "130000",
    "end": "134560"
  },
  {
    "text": "we can also define auto scaling policies",
    "start": "134560",
    "end": "136720"
  },
  {
    "text": "that can spin up and spin down read",
    "start": "136720",
    "end": "138560"
  },
  {
    "text": "replicas based on the workload",
    "start": "138560",
    "end": "141360"
  },
  {
    "text": "the primary node can scale up and down",
    "start": "141360",
    "end": "144640"
  },
  {
    "text": "in provision mode",
    "start": "144640",
    "end": "145840"
  },
  {
    "text": "and when you make sizing changes on the",
    "start": "145840",
    "end": "148080"
  },
  {
    "text": "primary node that usually requires a",
    "start": "148080",
    "end": "149840"
  },
  {
    "text": "restart",
    "start": "149840",
    "end": "151120"
  },
  {
    "text": "but we also have a serverless aurora",
    "start": "151120",
    "end": "153120"
  },
  {
    "text": "mode which can scale up and down",
    "start": "153120",
    "end": "154959"
  },
  {
    "text": "automatically as the workload demand",
    "start": "154959",
    "end": "156879"
  },
  {
    "text": "grows and shrinks",
    "start": "156879",
    "end": "158080"
  },
  {
    "text": "at re invent 2020 we also discussed",
    "start": "158080",
    "end": "160800"
  },
  {
    "text": "plans to release serverless v2 which",
    "start": "160800",
    "end": "162879"
  },
  {
    "text": "makes the scaling even more seamless",
    "start": "162879",
    "end": "165360"
  },
  {
    "text": "so overall the aurora architecture is",
    "start": "165360",
    "end": "167200"
  },
  {
    "text": "designed to be highly available",
    "start": "167200",
    "end": "169200"
  },
  {
    "text": "highly resilient to failures and",
    "start": "169200",
    "end": "171280"
  },
  {
    "text": "scalable",
    "start": "171280",
    "end": "172319"
  },
  {
    "text": "and elastic",
    "start": "172319",
    "end": "175280"
  },
  {
    "start": "175000",
    "end": "273000"
  },
  {
    "text": "so let's quickly talk about some of the",
    "start": "176560",
    "end": "178400"
  },
  {
    "text": "use cases for aurora global databases",
    "start": "178400",
    "end": "181200"
  },
  {
    "text": "aurora global database is designed for",
    "start": "181200",
    "end": "183360"
  },
  {
    "text": "globally distributed applications",
    "start": "183360",
    "end": "185680"
  },
  {
    "text": "and it allows a single database to span",
    "start": "185680",
    "end": "188239"
  },
  {
    "text": "multiple availability",
    "start": "188239",
    "end": "189599"
  },
  {
    "text": "uh multiple aws regions um the use cases",
    "start": "189599",
    "end": "194080"
  },
  {
    "text": "um are um there are two primary use",
    "start": "194080",
    "end": "196879"
  },
  {
    "text": "cases",
    "start": "196879",
    "end": "197360"
  },
  {
    "text": "right so the first use case is fast",
    "start": "197360",
    "end": "199680"
  },
  {
    "text": "cross region disaster recovery",
    "start": "199680",
    "end": "201840"
  },
  {
    "text": "so if you have an application that needs",
    "start": "201840",
    "end": "203440"
  },
  {
    "text": "to be available in case of a regional",
    "start": "203440",
    "end": "205440"
  },
  {
    "text": "outage",
    "start": "205440",
    "end": "206239"
  },
  {
    "text": "that can happen due to let's say network",
    "start": "206239",
    "end": "208720"
  },
  {
    "text": "issue or",
    "start": "208720",
    "end": "209599"
  },
  {
    "text": "you know several other things global",
    "start": "209599",
    "end": "211360"
  },
  {
    "text": "database can help",
    "start": "211360",
    "end": "212799"
  },
  {
    "text": "global databases use physical",
    "start": "212799",
    "end": "215040"
  },
  {
    "text": "replication technology to keep the",
    "start": "215040",
    "end": "216959"
  },
  {
    "text": "database",
    "start": "216959",
    "end": "217599"
  },
  {
    "text": "in sync across regions and if there is a",
    "start": "217599",
    "end": "220080"
  },
  {
    "text": "need for failover",
    "start": "220080",
    "end": "221200"
  },
  {
    "text": "it can be done very quickly usually in",
    "start": "221200",
    "end": "224000"
  },
  {
    "text": "single digit minutes",
    "start": "224000",
    "end": "225680"
  },
  {
    "text": "one thing to keep in mind here that the",
    "start": "225680",
    "end": "227519"
  },
  {
    "text": "cross region replication",
    "start": "227519",
    "end": "228959"
  },
  {
    "text": "is still asynchronous which means that",
    "start": "228959",
    "end": "231200"
  },
  {
    "text": "there is a possibility of some data loss",
    "start": "231200",
    "end": "233439"
  },
  {
    "text": "when you do a failover another use case",
    "start": "233439",
    "end": "236879"
  },
  {
    "text": "is data locality if you have an",
    "start": "236879",
    "end": "239200"
  },
  {
    "text": "application that is globally used",
    "start": "239200",
    "end": "241439"
  },
  {
    "text": "you can use the global database to make",
    "start": "241439",
    "end": "243200"
  },
  {
    "text": "data available close to that local",
    "start": "243200",
    "end": "245040"
  },
  {
    "text": "region",
    "start": "245040",
    "end": "246000"
  },
  {
    "text": "when the application needs to read from",
    "start": "246000",
    "end": "247760"
  },
  {
    "text": "the database it can",
    "start": "247760",
    "end": "249280"
  },
  {
    "text": "read from that region directly making",
    "start": "249280",
    "end": "252560"
  },
  {
    "text": "the results return pretty quickly",
    "start": "252560",
    "end": "256079"
  },
  {
    "text": "this makes user experience in that",
    "start": "256079",
    "end": "258000"
  },
  {
    "text": "region really really good",
    "start": "258000",
    "end": "260239"
  },
  {
    "text": "the same asynchronous replication still",
    "start": "260239",
    "end": "262160"
  },
  {
    "text": "applies here",
    "start": "262160",
    "end": "263440"
  },
  {
    "text": "so there will be some lag usually under",
    "start": "263440",
    "end": "265680"
  },
  {
    "text": "a second",
    "start": "265680",
    "end": "266960"
  },
  {
    "text": "so as long as your application in the",
    "start": "266960",
    "end": "268400"
  },
  {
    "text": "secondary region can tolerate",
    "start": "268400",
    "end": "269840"
  },
  {
    "text": "replication lag",
    "start": "269840",
    "end": "270800"
  },
  {
    "text": "you should be fine",
    "start": "270800",
    "end": "273520"
  },
  {
    "start": "273000",
    "end": "338000"
  },
  {
    "text": "let's do a quick overview of how global",
    "start": "274400",
    "end": "276320"
  },
  {
    "text": "database works",
    "start": "276320",
    "end": "277759"
  },
  {
    "text": "like i mentioned in the slide before we",
    "start": "277759",
    "end": "279759"
  },
  {
    "text": "use a physical replication across",
    "start": "279759",
    "end": "281840"
  },
  {
    "text": "regions",
    "start": "281840",
    "end": "283199"
  },
  {
    "text": "you can see that we have our primary",
    "start": "283199",
    "end": "285360"
  },
  {
    "text": "region which is",
    "start": "285360",
    "end": "286320"
  },
  {
    "text": "also which has an outbound replication",
    "start": "286320",
    "end": "288800"
  },
  {
    "text": "fleet",
    "start": "288800",
    "end": "289600"
  },
  {
    "text": "which receives all the delta changes",
    "start": "289600",
    "end": "291680"
  },
  {
    "text": "from that region",
    "start": "291680",
    "end": "292880"
  },
  {
    "text": "and sends it to the secondary region the",
    "start": "292880",
    "end": "295199"
  },
  {
    "text": "secondary region",
    "start": "295199",
    "end": "296960"
  },
  {
    "text": "in the secondary region we also have an",
    "start": "296960",
    "end": "298639"
  },
  {
    "text": "inbound replication fleet which receives",
    "start": "298639",
    "end": "300720"
  },
  {
    "text": "those changes and passes it to the",
    "start": "300720",
    "end": "302400"
  },
  {
    "text": "database storage",
    "start": "302400",
    "end": "303759"
  },
  {
    "text": "which gets applied directly on the",
    "start": "303759",
    "end": "306000"
  },
  {
    "text": "storage nodes",
    "start": "306000",
    "end": "307440"
  },
  {
    "text": "since we're using physical replication",
    "start": "307440",
    "end": "309440"
  },
  {
    "text": "the replication lag",
    "start": "309440",
    "end": "311039"
  },
  {
    "text": "on secondary is typically less than a",
    "start": "311039",
    "end": "313360"
  },
  {
    "text": "second",
    "start": "313360",
    "end": "314800"
  },
  {
    "text": "since we're continuously applying the",
    "start": "314800",
    "end": "316400"
  },
  {
    "text": "changes to the secondary in case of a",
    "start": "316400",
    "end": "318160"
  },
  {
    "text": "failover",
    "start": "318160",
    "end": "319199"
  },
  {
    "text": "promotion of secondary happens in under",
    "start": "319199",
    "end": "322400"
  },
  {
    "text": "a minute as well",
    "start": "322400",
    "end": "324160"
  },
  {
    "text": "now this of course is just a quick",
    "start": "324160",
    "end": "325759"
  },
  {
    "text": "overview if you like to",
    "start": "325759",
    "end": "327600"
  },
  {
    "text": "get a deep dive i highly recommend that",
    "start": "327600",
    "end": "329759"
  },
  {
    "text": "you go take a look at",
    "start": "329759",
    "end": "330960"
  },
  {
    "text": "our global databases deep dive video for",
    "start": "330960",
    "end": "334080"
  },
  {
    "text": "which i'll leave",
    "start": "334080",
    "end": "335039"
  },
  {
    "text": "a link in the description",
    "start": "335039",
    "end": "339840"
  },
  {
    "start": "338000",
    "end": "451000"
  },
  {
    "text": "so now let's talk about the managed",
    "start": "339840",
    "end": "342320"
  },
  {
    "text": "failover feature",
    "start": "342320",
    "end": "344000"
  },
  {
    "text": "this feature was released in early 2021",
    "start": "344000",
    "end": "346320"
  },
  {
    "text": "and it supports both",
    "start": "346320",
    "end": "347440"
  },
  {
    "text": "mysql and postgresql versions of aura",
    "start": "347440",
    "end": "350800"
  },
  {
    "text": "so what is the use case here so one use",
    "start": "350800",
    "end": "353840"
  },
  {
    "text": "case is if you want",
    "start": "353840",
    "end": "355680"
  },
  {
    "text": "to set up and easily test cross region",
    "start": "355680",
    "end": "358560"
  },
  {
    "text": "disaster recovery",
    "start": "358560",
    "end": "360319"
  },
  {
    "text": "managed plan failover will help you do",
    "start": "360319",
    "end": "362240"
  },
  {
    "text": "just that in a completely automated",
    "start": "362240",
    "end": "364400"
  },
  {
    "text": "fashion",
    "start": "364400",
    "end": "365360"
  },
  {
    "text": "when you're ready to do the failover or",
    "start": "365360",
    "end": "367680"
  },
  {
    "text": "a failover drill",
    "start": "367680",
    "end": "368960"
  },
  {
    "text": "you just cause a failover from the",
    "start": "368960",
    "end": "370479"
  },
  {
    "text": "console or from cli",
    "start": "370479",
    "end": "372880"
  },
  {
    "text": "and the cluster will automatically fail",
    "start": "372880",
    "end": "374800"
  },
  {
    "text": "over to the other region",
    "start": "374800",
    "end": "376560"
  },
  {
    "text": "another use case is when you have an",
    "start": "376560",
    "end": "378400"
  },
  {
    "text": "application that needs to move",
    "start": "378400",
    "end": "380000"
  },
  {
    "text": "from one region to the other region",
    "start": "380000",
    "end": "382080"
  },
  {
    "text": "again you click a button",
    "start": "382080",
    "end": "383360"
  },
  {
    "text": "on the console or run a cli command and",
    "start": "383360",
    "end": "386960"
  },
  {
    "text": "the cluster moves over",
    "start": "386960",
    "end": "388560"
  },
  {
    "text": "and switches roles between the primary",
    "start": "388560",
    "end": "391039"
  },
  {
    "text": "and secondary",
    "start": "391039",
    "end": "392479"
  },
  {
    "text": "you can do this failover with zero rpo",
    "start": "392479",
    "end": "395199"
  },
  {
    "text": "as in",
    "start": "395199",
    "end": "395919"
  },
  {
    "text": "no data loss and we'll see how this is",
    "start": "395919",
    "end": "398720"
  },
  {
    "text": "done",
    "start": "398720",
    "end": "399039"
  },
  {
    "text": "in this next slide uh this is",
    "start": "399039",
    "end": "402319"
  },
  {
    "text": "actually quite a big improvement uh over",
    "start": "402319",
    "end": "405280"
  },
  {
    "text": "our",
    "start": "405280",
    "end": "405919"
  },
  {
    "text": "um you know when this before when this",
    "start": "405919",
    "end": "408880"
  },
  {
    "text": "feature didn't exist right",
    "start": "408880",
    "end": "410479"
  },
  {
    "text": "so when this feature didn't exist the",
    "start": "410479",
    "end": "412800"
  },
  {
    "text": "failover meant you had to actually",
    "start": "412800",
    "end": "414400"
  },
  {
    "text": "break the global cluster topology uh",
    "start": "414400",
    "end": "417599"
  },
  {
    "text": "this would make the secondary region a",
    "start": "417599",
    "end": "419759"
  },
  {
    "text": "stand",
    "start": "419759",
    "end": "420319"
  },
  {
    "text": "alone cluster and then you would use it",
    "start": "420319",
    "end": "422400"
  },
  {
    "text": "as a dr or",
    "start": "422400",
    "end": "423680"
  },
  {
    "text": "you know to make any rights so now",
    "start": "423680",
    "end": "426960"
  },
  {
    "text": "you don't have to do any of that it is",
    "start": "426960",
    "end": "428560"
  },
  {
    "text": "completely automated when you do a",
    "start": "428560",
    "end": "430240"
  },
  {
    "text": "failover",
    "start": "430240",
    "end": "431039"
  },
  {
    "text": "the topology doesn't break at all so in",
    "start": "431039",
    "end": "433360"
  },
  {
    "text": "summary",
    "start": "433360",
    "end": "434240"
  },
  {
    "text": "manage plan failover reverses the",
    "start": "434240",
    "end": "436160"
  },
  {
    "text": "replication direction",
    "start": "436160",
    "end": "438000"
  },
  {
    "text": "promotes the secondary to be the new",
    "start": "438000",
    "end": "439599"
  },
  {
    "text": "primary without",
    "start": "439599",
    "end": "441360"
  },
  {
    "text": "losing any data or breaking the global",
    "start": "441360",
    "end": "443919"
  },
  {
    "text": "database",
    "start": "443919",
    "end": "444720"
  },
  {
    "text": "topology so this is and it's done in",
    "start": "444720",
    "end": "447759"
  },
  {
    "text": "completely hands-off way so that's",
    "start": "447759",
    "end": "449440"
  },
  {
    "text": "pretty cool",
    "start": "449440",
    "end": "451840"
  },
  {
    "start": "451000",
    "end": "572000"
  },
  {
    "text": "all right so let's look at how the",
    "start": "452639",
    "end": "455280"
  },
  {
    "text": "managed plan",
    "start": "455280",
    "end": "456160"
  },
  {
    "text": "or plan managed failover works so on",
    "start": "456160",
    "end": "458880"
  },
  {
    "text": "this slide",
    "start": "458880",
    "end": "459759"
  },
  {
    "text": "we have our primary region which is the",
    "start": "459759",
    "end": "462080"
  },
  {
    "text": "ohio region",
    "start": "462080",
    "end": "463520"
  },
  {
    "text": "as you can see in the primary region we",
    "start": "463520",
    "end": "465440"
  },
  {
    "text": "have our primary node",
    "start": "465440",
    "end": "466800"
  },
  {
    "text": "and two read replicas they're connected",
    "start": "466800",
    "end": "470160"
  },
  {
    "text": "to the globally distribu the distributed",
    "start": "470160",
    "end": "472800"
  },
  {
    "text": "storage",
    "start": "472800",
    "end": "473520"
  },
  {
    "text": "subsystem this storage subsystem",
    "start": "473520",
    "end": "476879"
  },
  {
    "text": "is getting replicated to two secondary",
    "start": "476879",
    "end": "479520"
  },
  {
    "text": "regions",
    "start": "479520",
    "end": "480080"
  },
  {
    "text": "northern virginia and ireland and then",
    "start": "480080",
    "end": "482960"
  },
  {
    "text": "the app connects",
    "start": "482960",
    "end": "483919"
  },
  {
    "text": "to the primary node so let's say that we",
    "start": "483919",
    "end": "487120"
  },
  {
    "text": "click to promote",
    "start": "487120",
    "end": "488319"
  },
  {
    "text": "north virginia which is the current",
    "start": "488319",
    "end": "490319"
  },
  {
    "text": "secondary region to the primary",
    "start": "490319",
    "end": "492000"
  },
  {
    "text": "region now what we do is",
    "start": "492000",
    "end": "495280"
  },
  {
    "text": "we stop the rights in the current",
    "start": "495280",
    "end": "497919"
  },
  {
    "text": "primary region which is the ohio region",
    "start": "497919",
    "end": "499599"
  },
  {
    "text": "right so we drain that node",
    "start": "499599",
    "end": "501199"
  },
  {
    "text": "make sure all the rights are stopped",
    "start": "501199",
    "end": "504240"
  },
  {
    "text": "now the other thing we do is",
    "start": "504240",
    "end": "507360"
  },
  {
    "text": "we also wait for all the secondary",
    "start": "507360",
    "end": "509199"
  },
  {
    "text": "regions to completely catch up right so",
    "start": "509199",
    "end": "511120"
  },
  {
    "text": "the rights on the primary have stopped",
    "start": "511120",
    "end": "513599"
  },
  {
    "text": "and then now we are waiting for the",
    "start": "513599",
    "end": "514959"
  },
  {
    "text": "secondary region to catch up so if you",
    "start": "514959",
    "end": "516800"
  },
  {
    "text": "remember in the last slide i said",
    "start": "516800",
    "end": "518800"
  },
  {
    "text": "that hey you know when you do a managed",
    "start": "518800",
    "end": "520880"
  },
  {
    "text": "planned",
    "start": "520880",
    "end": "521839"
  },
  {
    "text": "plan manage failover there is going to",
    "start": "521839",
    "end": "524560"
  },
  {
    "text": "be",
    "start": "524560",
    "end": "525760"
  },
  {
    "text": "zero rpo and this is how we make sure",
    "start": "525760",
    "end": "528160"
  },
  {
    "text": "that there is zero rpo because we're",
    "start": "528160",
    "end": "529680"
  },
  {
    "text": "catching",
    "start": "529680",
    "end": "530959"
  },
  {
    "text": "letting the secondary regions catch up",
    "start": "530959",
    "end": "533120"
  },
  {
    "text": "to that replication",
    "start": "533120",
    "end": "536080"
  },
  {
    "text": "now once the replication catch up",
    "start": "536080",
    "end": "538320"
  },
  {
    "text": "catches up we",
    "start": "538320",
    "end": "539920"
  },
  {
    "text": "promote the north virginia region to the",
    "start": "539920",
    "end": "542800"
  },
  {
    "text": "new primary",
    "start": "542800",
    "end": "544080"
  },
  {
    "text": "and then we also re-establish the",
    "start": "544080",
    "end": "547760"
  },
  {
    "text": "replication so we reverse the",
    "start": "547760",
    "end": "549200"
  },
  {
    "text": "replication direction from virginia to",
    "start": "549200",
    "end": "551600"
  },
  {
    "text": "ohio",
    "start": "551600",
    "end": "552320"
  },
  {
    "text": "and also to any other secondary regions",
    "start": "552320",
    "end": "554640"
  },
  {
    "text": "from the new primary",
    "start": "554640",
    "end": "556720"
  },
  {
    "text": "and now the new rights are available",
    "start": "556720",
    "end": "559920"
  },
  {
    "text": "in the new primary which is north",
    "start": "559920",
    "end": "561440"
  },
  {
    "text": "virginia region and at this point you",
    "start": "561440",
    "end": "563920"
  },
  {
    "text": "simply",
    "start": "563920",
    "end": "564640"
  },
  {
    "text": "redirect your application to the new",
    "start": "564640",
    "end": "566959"
  },
  {
    "text": "primary",
    "start": "566959",
    "end": "567680"
  },
  {
    "text": "and you're good to go so pretty simple",
    "start": "567680",
    "end": "570399"
  },
  {
    "text": "and straightforward",
    "start": "570399",
    "end": "573120"
  },
  {
    "start": "572000",
    "end": "716000"
  },
  {
    "text": "all right so um so that was kind of the",
    "start": "573200",
    "end": "575920"
  },
  {
    "text": "theory behind",
    "start": "575920",
    "end": "577120"
  },
  {
    "text": "planned manage failover let's take a",
    "start": "577120",
    "end": "578959"
  },
  {
    "text": "look at the demo and see how this works",
    "start": "578959",
    "end": "582800"
  },
  {
    "text": "okay so the first thing we're going to",
    "start": "583920",
    "end": "585200"
  },
  {
    "text": "do as part of this demo is",
    "start": "585200",
    "end": "587279"
  },
  {
    "text": "we will examine the global cluster",
    "start": "587279",
    "end": "590240"
  },
  {
    "text": "topology",
    "start": "590240",
    "end": "591600"
  },
  {
    "text": "now we will not be creating a new global",
    "start": "591600",
    "end": "594959"
  },
  {
    "text": "cluster",
    "start": "594959",
    "end": "595600"
  },
  {
    "text": "as part of this demo if you'd like to",
    "start": "595600",
    "end": "597440"
  },
  {
    "text": "see how to create the global cluster",
    "start": "597440",
    "end": "599839"
  },
  {
    "text": "i highly recommend you you look at our",
    "start": "599839",
    "end": "602160"
  },
  {
    "text": "global deep dive",
    "start": "602160",
    "end": "603600"
  },
  {
    "text": "global database deep dive video i'll",
    "start": "603600",
    "end": "605519"
  },
  {
    "text": "leave a link in the description",
    "start": "605519",
    "end": "607680"
  },
  {
    "text": "so on the top here we have our global",
    "start": "607680",
    "end": "610880"
  },
  {
    "text": "database cluster which is the container",
    "start": "610880",
    "end": "614000"
  },
  {
    "text": "for the",
    "start": "614000",
    "end": "614640"
  },
  {
    "text": "entire global databases which contains",
    "start": "614640",
    "end": "617600"
  },
  {
    "text": "both the regions",
    "start": "617600",
    "end": "619120"
  },
  {
    "text": "so the name of the global database",
    "start": "619120",
    "end": "621120"
  },
  {
    "text": "cluster is global dash cluster",
    "start": "621120",
    "end": "623760"
  },
  {
    "text": "next we have our primary",
    "start": "623760",
    "end": "626880"
  },
  {
    "text": "region which is global dash region dash",
    "start": "626880",
    "end": "629519"
  },
  {
    "text": "one",
    "start": "629519",
    "end": "630399"
  },
  {
    "text": "and as you can see this is us east one",
    "start": "630399",
    "end": "634399"
  },
  {
    "text": "and in this region we have reader and",
    "start": "634399",
    "end": "637440"
  },
  {
    "text": "writer both",
    "start": "637440",
    "end": "639279"
  },
  {
    "text": "now if we look at our connectivity and",
    "start": "639279",
    "end": "640880"
  },
  {
    "text": "security you would see that we have two",
    "start": "640880",
    "end": "642880"
  },
  {
    "text": "endpoints",
    "start": "642880",
    "end": "643680"
  },
  {
    "text": "there is a cluster endpoint which is",
    "start": "643680",
    "end": "645680"
  },
  {
    "text": "also the writer endpoint",
    "start": "645680",
    "end": "648320"
  },
  {
    "text": "and we have a reader endpoint and you",
    "start": "648320",
    "end": "651279"
  },
  {
    "text": "can see",
    "start": "651279",
    "end": "652000"
  },
  {
    "text": "that both of these endpoints are",
    "start": "652000",
    "end": "653920"
  },
  {
    "text": "available",
    "start": "653920",
    "end": "655360"
  },
  {
    "text": "so now if we switch to our",
    "start": "655360",
    "end": "659279"
  },
  {
    "text": "secondary region let me switch to the",
    "start": "659279",
    "end": "661920"
  },
  {
    "text": "secondary region tab",
    "start": "661920",
    "end": "664240"
  },
  {
    "text": "you would see that our secondary region",
    "start": "664240",
    "end": "666560"
  },
  {
    "text": "is called global dash region dash 2",
    "start": "666560",
    "end": "669279"
  },
  {
    "text": "and it is in us west one",
    "start": "669279",
    "end": "672720"
  },
  {
    "text": "and it has only a single reader instance",
    "start": "672720",
    "end": "676560"
  },
  {
    "text": "now if we go down here and look at the",
    "start": "676560",
    "end": "678640"
  },
  {
    "text": "connectivity and security",
    "start": "678640",
    "end": "680399"
  },
  {
    "text": "you would see that this also has two",
    "start": "680399",
    "end": "682959"
  },
  {
    "text": "endpoints",
    "start": "682959",
    "end": "684399"
  },
  {
    "text": "it has a writer endpoint and a reader",
    "start": "684399",
    "end": "686880"
  },
  {
    "text": "endpoint but",
    "start": "686880",
    "end": "688880"
  },
  {
    "text": "you would see that the writer endpoint",
    "start": "688880",
    "end": "691279"
  },
  {
    "text": "is actually inactive",
    "start": "691279",
    "end": "693680"
  },
  {
    "text": "so when we do the failover later in the",
    "start": "693680",
    "end": "697200"
  },
  {
    "text": "demo you would see that this inactive",
    "start": "697200",
    "end": "699200"
  },
  {
    "text": "writer",
    "start": "699200",
    "end": "699680"
  },
  {
    "text": "endpoint would become available and we",
    "start": "699680",
    "end": "701440"
  },
  {
    "text": "would be able to connect to it",
    "start": "701440",
    "end": "704640"
  },
  {
    "text": "so before we do anything else let's go",
    "start": "704640",
    "end": "707120"
  },
  {
    "text": "ahead",
    "start": "707120",
    "end": "707920"
  },
  {
    "text": "and connect to these regional endpoints",
    "start": "707920",
    "end": "711360"
  },
  {
    "text": "in the global database cluster and see",
    "start": "711360",
    "end": "714000"
  },
  {
    "text": "how they behave",
    "start": "714000",
    "end": "716560"
  },
  {
    "start": "716000",
    "end": "735000"
  },
  {
    "text": "so i have two linux",
    "start": "716560",
    "end": "720160"
  },
  {
    "text": "clients here the client on the left hand",
    "start": "720160",
    "end": "723839"
  },
  {
    "text": "side",
    "start": "723839",
    "end": "724480"
  },
  {
    "text": "is in us east one which is the current",
    "start": "724480",
    "end": "727440"
  },
  {
    "text": "primary region",
    "start": "727440",
    "end": "728720"
  },
  {
    "text": "and the client on the right hand side is",
    "start": "728720",
    "end": "730800"
  },
  {
    "text": "in us west one",
    "start": "730800",
    "end": "732079"
  },
  {
    "text": "which is currently the secondary region",
    "start": "732079",
    "end": "735600"
  },
  {
    "start": "735000",
    "end": "774000"
  },
  {
    "text": "so what we'll do is we will connect",
    "start": "735600",
    "end": "738639"
  },
  {
    "text": "to the primary rider endpoint",
    "start": "738639",
    "end": "742480"
  },
  {
    "text": "from east one which is also the primary",
    "start": "742480",
    "end": "744720"
  },
  {
    "text": "region",
    "start": "744720",
    "end": "747120"
  },
  {
    "text": "okay so if you notice here the end point",
    "start": "748639",
    "end": "752399"
  },
  {
    "text": "i'm using",
    "start": "752399",
    "end": "753200"
  },
  {
    "text": "is the global region one cluster",
    "start": "753200",
    "end": "755040"
  },
  {
    "text": "endpoint which is the right",
    "start": "755040",
    "end": "756240"
  },
  {
    "text": "endpoint and i'm going to go ahead and",
    "start": "756240",
    "end": "758240"
  },
  {
    "text": "connect to it",
    "start": "758240",
    "end": "759360"
  },
  {
    "text": "and as you can see it works fine and i'm",
    "start": "759360",
    "end": "761600"
  },
  {
    "text": "able to connect",
    "start": "761600",
    "end": "763200"
  },
  {
    "text": "now the next thing we're going to do is",
    "start": "763200",
    "end": "765519"
  },
  {
    "text": "we're going to go to the secondary",
    "start": "765519",
    "end": "766959"
  },
  {
    "text": "region",
    "start": "766959",
    "end": "768079"
  },
  {
    "text": "and we will try to connect to that",
    "start": "768079",
    "end": "770320"
  },
  {
    "text": "writer endpoint",
    "start": "770320",
    "end": "771519"
  },
  {
    "text": "on the secondary and see if it works",
    "start": "771519",
    "end": "774959"
  },
  {
    "start": "774000",
    "end": "809000"
  },
  {
    "text": "so if i try that you would see that we",
    "start": "774959",
    "end": "777680"
  },
  {
    "text": "get an error and says that",
    "start": "777680",
    "end": "779279"
  },
  {
    "text": "it can't find this host the reason why",
    "start": "779279",
    "end": "781760"
  },
  {
    "text": "it can't find the host",
    "start": "781760",
    "end": "783120"
  },
  {
    "text": "is because this writer endpoint or the",
    "start": "783120",
    "end": "785920"
  },
  {
    "text": "cluster endpoint on the secondary region",
    "start": "785920",
    "end": "787760"
  },
  {
    "text": "is currently inactive",
    "start": "787760",
    "end": "789519"
  },
  {
    "text": "so the only way we can connect to the",
    "start": "789519",
    "end": "791120"
  },
  {
    "text": "secondary instance is",
    "start": "791120",
    "end": "792639"
  },
  {
    "text": "by connecting to the reader endpoint so",
    "start": "792639",
    "end": "795600"
  },
  {
    "text": "let's do that",
    "start": "795600",
    "end": "798319"
  },
  {
    "text": "now if you notice here now i'm",
    "start": "798880",
    "end": "800959"
  },
  {
    "text": "connecting to",
    "start": "800959",
    "end": "802240"
  },
  {
    "text": "the reader endpoint and you would see",
    "start": "802240",
    "end": "804720"
  },
  {
    "text": "that this dash",
    "start": "804720",
    "end": "805920"
  },
  {
    "text": "ro in the reader endpoint name here",
    "start": "805920",
    "end": "809200"
  },
  {
    "start": "809000",
    "end": "910000"
  },
  {
    "text": "okay so i'm able to connect now so let's",
    "start": "809200",
    "end": "812480"
  },
  {
    "text": "go ahead and create a table",
    "start": "812480",
    "end": "814560"
  },
  {
    "text": "on the primary region and let's see what",
    "start": "814560",
    "end": "817680"
  },
  {
    "text": "behavior",
    "start": "817680",
    "end": "818160"
  },
  {
    "text": "we get okay so i'm just going to",
    "start": "818160",
    "end": "822639"
  },
  {
    "text": "create a quick table we're going to keep",
    "start": "822639",
    "end": "824639"
  },
  {
    "text": "this super simple",
    "start": "824639",
    "end": "826399"
  },
  {
    "text": "uh we're not going to do anything any",
    "start": "826399",
    "end": "828240"
  },
  {
    "text": "fancy",
    "start": "828240",
    "end": "829440"
  },
  {
    "text": "querying here we just want to observe",
    "start": "829440",
    "end": "831519"
  },
  {
    "text": "the",
    "start": "831519",
    "end": "832800"
  },
  {
    "text": "you know results of creating a table",
    "start": "832800",
    "end": "834560"
  },
  {
    "text": "inserting some rows and see how that",
    "start": "834560",
    "end": "836160"
  },
  {
    "text": "behaves",
    "start": "836160",
    "end": "837120"
  },
  {
    "text": "on the global database so let's go ahead",
    "start": "837120",
    "end": "840000"
  },
  {
    "text": "and create a simple",
    "start": "840000",
    "end": "841519"
  },
  {
    "text": "table this table only has an uh",
    "start": "841519",
    "end": "844639"
  },
  {
    "text": "integer value and it also captures when",
    "start": "844639",
    "end": "847760"
  },
  {
    "text": "that value was inserted",
    "start": "847760",
    "end": "849199"
  },
  {
    "text": "right super simple now i'm going to go",
    "start": "849199",
    "end": "852000"
  },
  {
    "text": "ahead and insert",
    "start": "852000",
    "end": "853199"
  },
  {
    "text": "a row into that",
    "start": "853199",
    "end": "857120"
  },
  {
    "text": "okay now the next thing we're going to",
    "start": "857120",
    "end": "859680"
  },
  {
    "text": "do",
    "start": "859680",
    "end": "860320"
  },
  {
    "text": "is let's do a select and make sure that",
    "start": "860320",
    "end": "863360"
  },
  {
    "text": "the row was inserted",
    "start": "863360",
    "end": "864880"
  },
  {
    "text": "so we see that the row was inserted at",
    "start": "864880",
    "end": "867279"
  },
  {
    "text": "this time",
    "start": "867279",
    "end": "868720"
  },
  {
    "text": "now we'll run the same query on the",
    "start": "868720",
    "end": "870720"
  },
  {
    "text": "secondary",
    "start": "870720",
    "end": "872880"
  },
  {
    "text": "and you see that we see that uh one row",
    "start": "872880",
    "end": "876320"
  },
  {
    "text": "uh was added and it got replicated",
    "start": "876320",
    "end": "878560"
  },
  {
    "text": "immediately",
    "start": "878560",
    "end": "879920"
  },
  {
    "text": "so let's just quickly add another row",
    "start": "879920",
    "end": "885680"
  },
  {
    "text": "here and immediately run a select here",
    "start": "885680",
    "end": "889440"
  },
  {
    "text": "and you see that on the secondary region",
    "start": "889440",
    "end": "892800"
  },
  {
    "text": "the select the inserts are getting very",
    "start": "892800",
    "end": "895440"
  },
  {
    "text": "quickly",
    "start": "895440",
    "end": "896079"
  },
  {
    "text": "replicated and we have seen that the",
    "start": "896079",
    "end": "899199"
  },
  {
    "text": "the replication lag is rough most of the",
    "start": "899199",
    "end": "901680"
  },
  {
    "text": "time under one second even if you",
    "start": "901680",
    "end": "904000"
  },
  {
    "text": "create clusters uh between us east and",
    "start": "904000",
    "end": "907440"
  },
  {
    "text": "usds which is between coast to coast",
    "start": "907440",
    "end": "911279"
  },
  {
    "start": "910000",
    "end": "1163000"
  },
  {
    "text": "so the next thing we're going to do is",
    "start": "911279",
    "end": "913680"
  },
  {
    "text": "we are going to cause",
    "start": "913680",
    "end": "915279"
  },
  {
    "text": "a failover okay so let's head back to",
    "start": "915279",
    "end": "917920"
  },
  {
    "text": "our",
    "start": "917920",
    "end": "919519"
  },
  {
    "text": "console and click on the cluster",
    "start": "919519",
    "end": "923920"
  },
  {
    "text": "global cluster identifier we're going to",
    "start": "923920",
    "end": "926959"
  },
  {
    "text": "go ahead and click on actions",
    "start": "926959",
    "end": "928800"
  },
  {
    "text": "and then we're going to click on",
    "start": "928800",
    "end": "930480"
  },
  {
    "text": "failover global database",
    "start": "930480",
    "end": "932160"
  },
  {
    "text": "right it is that simple for doing a",
    "start": "932160",
    "end": "935360"
  },
  {
    "text": "failover",
    "start": "935360",
    "end": "936320"
  },
  {
    "text": "now the option we are presented is which",
    "start": "936320",
    "end": "939199"
  },
  {
    "text": "region we",
    "start": "939199",
    "end": "940000"
  },
  {
    "text": "need to fail over to so keep in mind our",
    "start": "940000",
    "end": "942160"
  },
  {
    "text": "global region one",
    "start": "942160",
    "end": "943600"
  },
  {
    "text": "which is in us east one is our primary",
    "start": "943600",
    "end": "946240"
  },
  {
    "text": "so",
    "start": "946240",
    "end": "946720"
  },
  {
    "text": "the only other region we have added is",
    "start": "946720",
    "end": "948560"
  },
  {
    "text": "global region two hence that is the only",
    "start": "948560",
    "end": "950720"
  },
  {
    "text": "option",
    "start": "950720",
    "end": "951440"
  },
  {
    "text": "presented to us if we had more than one",
    "start": "951440",
    "end": "953279"
  },
  {
    "text": "region we would have the ability to fail",
    "start": "953279",
    "end": "955600"
  },
  {
    "text": "over to one of the other secondary",
    "start": "955600",
    "end": "957199"
  },
  {
    "text": "regions",
    "start": "957199",
    "end": "958160"
  },
  {
    "text": "so you can see currently the cluster is",
    "start": "958160",
    "end": "960880"
  },
  {
    "text": "all caught up so there is no lag",
    "start": "960880",
    "end": "962880"
  },
  {
    "text": "and it also shows us the status and",
    "start": "962880",
    "end": "964480"
  },
  {
    "text": "number of instances which is just a",
    "start": "964480",
    "end": "966000"
  },
  {
    "text": "single instance right now",
    "start": "966000",
    "end": "967839"
  },
  {
    "text": "in the secondary region so let's go",
    "start": "967839",
    "end": "969440"
  },
  {
    "text": "ahead and click on that and click on",
    "start": "969440",
    "end": "971440"
  },
  {
    "text": "failover global databases",
    "start": "971440",
    "end": "973040"
  },
  {
    "text": "and this would kick off the activity of",
    "start": "973040",
    "end": "976399"
  },
  {
    "text": "fail failing over right so you can see",
    "start": "976399",
    "end": "979680"
  },
  {
    "text": "that the status is shown up here on the",
    "start": "979680",
    "end": "981680"
  },
  {
    "text": "top",
    "start": "981680",
    "end": "983199"
  },
  {
    "text": "and if you remember from our",
    "start": "983199",
    "end": "984639"
  },
  {
    "text": "presentation this goes through the four",
    "start": "984639",
    "end": "986880"
  },
  {
    "text": "steps of failover",
    "start": "986880",
    "end": "988560"
  },
  {
    "text": "you can also see the same status",
    "start": "988560",
    "end": "992240"
  },
  {
    "text": "on the global cluster it shows that it's",
    "start": "992240",
    "end": "994959"
  },
  {
    "text": "failing over and it's going to go",
    "start": "994959",
    "end": "996639"
  },
  {
    "text": "through all these four steps",
    "start": "996639",
    "end": "998079"
  },
  {
    "text": "and we're going to observe them as they",
    "start": "998079",
    "end": "1000320"
  },
  {
    "text": "move between those",
    "start": "1000320",
    "end": "1002079"
  },
  {
    "text": "statuses",
    "start": "1002079",
    "end": "1004639"
  },
  {
    "text": "okay so now you can see that our primary",
    "start": "1007279",
    "end": "1010560"
  },
  {
    "text": "region",
    "start": "1010560",
    "end": "1011360"
  },
  {
    "text": "has gone from available to modifying",
    "start": "1011360",
    "end": "1014800"
  },
  {
    "text": "and the role now shows as pending for",
    "start": "1014800",
    "end": "1018160"
  },
  {
    "text": "both regions because we will end up",
    "start": "1018160",
    "end": "1019920"
  },
  {
    "text": "reversing the roles",
    "start": "1019920",
    "end": "1022240"
  },
  {
    "text": "so this is uh the the primary region has",
    "start": "1022240",
    "end": "1026240"
  },
  {
    "text": "now",
    "start": "1026240",
    "end": "1026640"
  },
  {
    "text": "stopped accepting any rights and",
    "start": "1026640",
    "end": "1029839"
  },
  {
    "text": "it's waiting for the secondary region to",
    "start": "1029839",
    "end": "1032000"
  },
  {
    "text": "catch up the replication",
    "start": "1032000",
    "end": "1039839"
  },
  {
    "text": "okay so now we are in our second step",
    "start": "1042079",
    "end": "1046319"
  },
  {
    "text": "of our failover you would see that it's",
    "start": "1046319",
    "end": "1049600"
  },
  {
    "text": "saying that the cluster global region 1",
    "start": "1049600",
    "end": "1052640"
  },
  {
    "text": "is being demoted to secondary and we",
    "start": "1052640",
    "end": "1055039"
  },
  {
    "text": "also see that it's being reflected in",
    "start": "1055039",
    "end": "1057360"
  },
  {
    "text": "the status",
    "start": "1057360",
    "end": "1059440"
  },
  {
    "text": "if you also notice the order of regions",
    "start": "1059440",
    "end": "1063600"
  },
  {
    "text": "have flipped so now global region 1",
    "start": "1063600",
    "end": "1066799"
  },
  {
    "text": "is at the bottom and global region 2 is",
    "start": "1066799",
    "end": "1068960"
  },
  {
    "text": "at the top because",
    "start": "1068960",
    "end": "1070320"
  },
  {
    "text": "the global region 2 will become primary",
    "start": "1070320",
    "end": "1072720"
  },
  {
    "text": "even though it still",
    "start": "1072720",
    "end": "1074320"
  },
  {
    "text": "shows as role as pending and",
    "start": "1074320",
    "end": "1077919"
  },
  {
    "text": "in the short time we were speaking here",
    "start": "1077919",
    "end": "1080080"
  },
  {
    "text": "the",
    "start": "1080080",
    "end": "1081200"
  },
  {
    "text": "all the four steps have been completed",
    "start": "1081200",
    "end": "1084320"
  },
  {
    "text": "um the status still shows us uh",
    "start": "1084320",
    "end": "1087600"
  },
  {
    "text": "failing over so we'll give it a a few",
    "start": "1087600",
    "end": "1089840"
  },
  {
    "text": "few more seconds",
    "start": "1089840",
    "end": "1090799"
  },
  {
    "text": "for this to complete",
    "start": "1090799",
    "end": "1094960"
  },
  {
    "text": "okay and now you can see that the",
    "start": "1094960",
    "end": "1097679"
  },
  {
    "text": "failover",
    "start": "1097679",
    "end": "1098720"
  },
  {
    "text": "has completed and our roles",
    "start": "1098720",
    "end": "1101760"
  },
  {
    "text": "of these two regions have changed our",
    "start": "1101760",
    "end": "1104960"
  },
  {
    "text": "second global region two is now the",
    "start": "1104960",
    "end": "1107440"
  },
  {
    "text": "primary",
    "start": "1107440",
    "end": "1108000"
  },
  {
    "text": "role and global region 1 is now",
    "start": "1108000",
    "end": "1110720"
  },
  {
    "text": "secondary",
    "start": "1110720",
    "end": "1111679"
  },
  {
    "text": "now the status still shows modifying but",
    "start": "1111679",
    "end": "1114000"
  },
  {
    "text": "let's hit",
    "start": "1114000",
    "end": "1115120"
  },
  {
    "text": "a quick refresh on the browser and we",
    "start": "1115120",
    "end": "1117120"
  },
  {
    "text": "should see",
    "start": "1117120",
    "end": "1118160"
  },
  {
    "text": "that the status for the entire cluster",
    "start": "1118160",
    "end": "1120080"
  },
  {
    "text": "is available",
    "start": "1120080",
    "end": "1123840"
  },
  {
    "text": "and there we go so in summary",
    "start": "1126960",
    "end": "1130240"
  },
  {
    "text": "we were able to do the entire failover",
    "start": "1130240",
    "end": "1132559"
  },
  {
    "text": "right here from the console",
    "start": "1132559",
    "end": "1135200"
  },
  {
    "text": "we simply clicked on a button we",
    "start": "1135200",
    "end": "1137520"
  },
  {
    "text": "reversed",
    "start": "1137520",
    "end": "1138240"
  },
  {
    "text": "the order of replication our global",
    "start": "1138240",
    "end": "1140880"
  },
  {
    "text": "region 2 which is in us west one now",
    "start": "1140880",
    "end": "1142799"
  },
  {
    "text": "became the primary as you can see here",
    "start": "1142799",
    "end": "1145440"
  },
  {
    "text": "and the global region one which was in",
    "start": "1145440",
    "end": "1148160"
  },
  {
    "text": "which is in us",
    "start": "1148160",
    "end": "1148960"
  },
  {
    "text": "east one became the secondary so",
    "start": "1148960",
    "end": "1152000"
  },
  {
    "text": "now let's do a quick experiment and try",
    "start": "1152000",
    "end": "1154480"
  },
  {
    "text": "to connect",
    "start": "1154480",
    "end": "1155360"
  },
  {
    "text": "to these new uh primaries and",
    "start": "1155360",
    "end": "1158720"
  },
  {
    "text": "secondaries using our",
    "start": "1158720",
    "end": "1160240"
  },
  {
    "text": "queries as we did before and see how",
    "start": "1160240",
    "end": "1161919"
  },
  {
    "text": "that works",
    "start": "1161919",
    "end": "1164160"
  },
  {
    "start": "1163000",
    "end": "1322000"
  },
  {
    "text": "okay so now that the failover has",
    "start": "1164160",
    "end": "1166240"
  },
  {
    "text": "completed let's try to",
    "start": "1166240",
    "end": "1168160"
  },
  {
    "text": "execute the same connection again and",
    "start": "1168160",
    "end": "1170000"
  },
  {
    "text": "see what happens",
    "start": "1170000",
    "end": "1171840"
  },
  {
    "text": "so i'm going to run the same exact",
    "start": "1171840",
    "end": "1175520"
  },
  {
    "text": "connection as we tried to do before from",
    "start": "1175520",
    "end": "1178559"
  },
  {
    "text": "the us",
    "start": "1178559",
    "end": "1179120"
  },
  {
    "text": "east one region now the u.s",
    "start": "1179120",
    "end": "1182240"
  },
  {
    "text": "east one region is a secondary right so",
    "start": "1182240",
    "end": "1184400"
  },
  {
    "text": "let's try to connect",
    "start": "1184400",
    "end": "1185919"
  },
  {
    "text": "now this is the same connection string",
    "start": "1185919",
    "end": "1188640"
  },
  {
    "text": "uh the same endpoint",
    "start": "1188640",
    "end": "1190160"
  },
  {
    "text": "as we did before and it fails",
    "start": "1190160",
    "end": "1194080"
  },
  {
    "text": "now the reason it fails is because after",
    "start": "1194080",
    "end": "1196000"
  },
  {
    "text": "the failover",
    "start": "1196000",
    "end": "1197360"
  },
  {
    "text": "this endpoint has become inactive so",
    "start": "1197360",
    "end": "1200559"
  },
  {
    "text": "if we look at the global region one",
    "start": "1200559",
    "end": "1203760"
  },
  {
    "text": "under connectivity and security",
    "start": "1203760",
    "end": "1206559"
  },
  {
    "text": "our old rider endpoint has now become",
    "start": "1206559",
    "end": "1208960"
  },
  {
    "text": "inactive so we can't connect to it",
    "start": "1208960",
    "end": "1210720"
  },
  {
    "text": "anymore",
    "start": "1210720",
    "end": "1211760"
  },
  {
    "text": "so the only way we can connect to it is",
    "start": "1211760",
    "end": "1214400"
  },
  {
    "text": "by",
    "start": "1214400",
    "end": "1215200"
  },
  {
    "text": "going to the reader endpoint",
    "start": "1215200",
    "end": "1218240"
  },
  {
    "text": "so let's do that again",
    "start": "1218240",
    "end": "1221840"
  },
  {
    "text": "if i connect to this endpoint you see",
    "start": "1222240",
    "end": "1224240"
  },
  {
    "text": "that there is global region 1 dash",
    "start": "1224240",
    "end": "1226000"
  },
  {
    "text": "ro in the name we can connect to it",
    "start": "1226000",
    "end": "1228640"
  },
  {
    "text": "without any problems",
    "start": "1228640",
    "end": "1230480"
  },
  {
    "text": "now let's connect to the us east",
    "start": "1230480",
    "end": "1234480"
  },
  {
    "text": "one region but this time we will connect",
    "start": "1234480",
    "end": "1237919"
  },
  {
    "text": "to the writer endpoint",
    "start": "1237919",
    "end": "1239760"
  },
  {
    "text": "see there's no dash arrow in this name",
    "start": "1239760",
    "end": "1243600"
  },
  {
    "text": "and we connect just fine now we will",
    "start": "1243600",
    "end": "1247280"
  },
  {
    "text": "just redo our query",
    "start": "1247280",
    "end": "1251200"
  },
  {
    "text": "of uh inserting a value now instead of",
    "start": "1251200",
    "end": "1254640"
  },
  {
    "text": "running from us east one i'll run the",
    "start": "1254640",
    "end": "1256720"
  },
  {
    "text": "insert from us west one",
    "start": "1256720",
    "end": "1260480"
  },
  {
    "text": "and we will do the select",
    "start": "1260559",
    "end": "1263679"
  },
  {
    "text": "from us east one which is the secondary",
    "start": "1263679",
    "end": "1266080"
  },
  {
    "text": "region now",
    "start": "1266080",
    "end": "1268240"
  },
  {
    "text": "and we see that value here as well",
    "start": "1268240",
    "end": "1272480"
  },
  {
    "text": "so essentially what we have done here is",
    "start": "1272480",
    "end": "1276400"
  },
  {
    "text": "we caused a failover from the console",
    "start": "1276400",
    "end": "1279600"
  },
  {
    "text": "and we used the new connection strings",
    "start": "1279600",
    "end": "1282480"
  },
  {
    "text": "to connect from both regions",
    "start": "1282480",
    "end": "1284240"
  },
  {
    "text": "and we were able to see the effects of",
    "start": "1284240",
    "end": "1286640"
  },
  {
    "text": "failover and how the",
    "start": "1286640",
    "end": "1288400"
  },
  {
    "text": "direction of replication reversed and",
    "start": "1288400",
    "end": "1291360"
  },
  {
    "text": "also",
    "start": "1291360",
    "end": "1291840"
  },
  {
    "text": "we saw how the new endpoints became kind",
    "start": "1291840",
    "end": "1294960"
  },
  {
    "text": "of swapped",
    "start": "1294960",
    "end": "1295840"
  },
  {
    "text": "their modes so",
    "start": "1295840",
    "end": "1298960"
  },
  {
    "text": "this is great but one of the common",
    "start": "1298960",
    "end": "1300880"
  },
  {
    "text": "things that customers ask us",
    "start": "1300880",
    "end": "1303360"
  },
  {
    "text": "is how do i manage connection strings",
    "start": "1303360",
    "end": "1307039"
  },
  {
    "text": "so i'm going to show you a quick",
    "start": "1307039",
    "end": "1309440"
  },
  {
    "text": "improvement over this architecture that",
    "start": "1309440",
    "end": "1311280"
  },
  {
    "text": "you can do",
    "start": "1311280",
    "end": "1311919"
  },
  {
    "text": "using route53 and how",
    "start": "1311919",
    "end": "1315039"
  },
  {
    "text": "you can connect using the same endpoint",
    "start": "1315039",
    "end": "1318000"
  },
  {
    "text": "even when failover happens",
    "start": "1318000",
    "end": "1321600"
  },
  {
    "start": "1322000",
    "end": "1435000"
  },
  {
    "text": "so let's look at how you can use route53",
    "start": "1323200",
    "end": "1326400"
  },
  {
    "text": "dns service to manage your global",
    "start": "1326400",
    "end": "1328320"
  },
  {
    "text": "database endpoints",
    "start": "1328320",
    "end": "1329760"
  },
  {
    "text": "so that your applications don't have to",
    "start": "1329760",
    "end": "1331840"
  },
  {
    "text": "change their connection strings",
    "start": "1331840",
    "end": "1333360"
  },
  {
    "text": "after a failover in this architecture",
    "start": "1333360",
    "end": "1336720"
  },
  {
    "text": "we're using route53 and we have created",
    "start": "1336720",
    "end": "1339520"
  },
  {
    "text": "a private hosted zone",
    "start": "1339520",
    "end": "1341679"
  },
  {
    "text": "the private hosted zone lets you add",
    "start": "1341679",
    "end": "1344159"
  },
  {
    "text": "vpcs from both regions",
    "start": "1344159",
    "end": "1346480"
  },
  {
    "text": "and lets you direct your incoming",
    "start": "1346480",
    "end": "1348240"
  },
  {
    "text": "request to the active",
    "start": "1348240",
    "end": "1350240"
  },
  {
    "text": "rider endpoint so in this state",
    "start": "1350240",
    "end": "1353440"
  },
  {
    "text": "we have our primary region usc 1 on the",
    "start": "1353440",
    "end": "1356799"
  },
  {
    "text": "left hand side",
    "start": "1356799",
    "end": "1358240"
  },
  {
    "text": "and the secondary region usos 2 on the",
    "start": "1358240",
    "end": "1361200"
  },
  {
    "text": "right hand side",
    "start": "1361200",
    "end": "1362559"
  },
  {
    "text": "we have created a private hosted zone",
    "start": "1362559",
    "end": "1365200"
  },
  {
    "text": "that can reach to both regions",
    "start": "1365200",
    "end": "1367039"
  },
  {
    "text": "and the respective epcs where the global",
    "start": "1367039",
    "end": "1369280"
  },
  {
    "text": "database cluster resides",
    "start": "1369280",
    "end": "1371360"
  },
  {
    "text": "and we create a cname record that points",
    "start": "1371360",
    "end": "1373919"
  },
  {
    "text": "to the current writer endpoint",
    "start": "1373919",
    "end": "1375600"
  },
  {
    "text": "in the primary region",
    "start": "1375600",
    "end": "1378559"
  },
  {
    "text": "after the failover we simply update the",
    "start": "1380000",
    "end": "1382240"
  },
  {
    "text": "cname record to the new writer",
    "start": "1382240",
    "end": "1384080"
  },
  {
    "text": "in the secondary region and applications",
    "start": "1384080",
    "end": "1386640"
  },
  {
    "text": "will never",
    "start": "1386640",
    "end": "1387360"
  },
  {
    "text": "never have to make any connection string",
    "start": "1387360",
    "end": "1389440"
  },
  {
    "text": "changes and will continue to talk to the",
    "start": "1389440",
    "end": "1391440"
  },
  {
    "text": "same route 53 dns endpoint",
    "start": "1391440",
    "end": "1394000"
  },
  {
    "text": "you can make this architecture",
    "start": "1394000",
    "end": "1395679"
  },
  {
    "text": "completely hands off",
    "start": "1395679",
    "end": "1397200"
  },
  {
    "text": "by creating a lambda function that makes",
    "start": "1397200",
    "end": "1399520"
  },
  {
    "text": "this change automatically",
    "start": "1399520",
    "end": "1401039"
  },
  {
    "text": "without any sort of manual intervention",
    "start": "1401039",
    "end": "1404960"
  },
  {
    "text": "thank you so much for spending the time",
    "start": "1405919",
    "end": "1407360"
  },
  {
    "text": "here with us today going through this",
    "start": "1407360",
    "end": "1408960"
  },
  {
    "text": "video",
    "start": "1408960",
    "end": "1409760"
  },
  {
    "text": "i hope you learned a little more about",
    "start": "1409760",
    "end": "1411760"
  },
  {
    "text": "managed plan failover feature of amazon",
    "start": "1411760",
    "end": "1413919"
  },
  {
    "text": "or our global databases",
    "start": "1413919",
    "end": "1415440"
  },
  {
    "text": "i hope you enjoy the demos if you have",
    "start": "1415440",
    "end": "1417440"
  },
  {
    "text": "any questions feel free to reach out to",
    "start": "1417440",
    "end": "1419120"
  },
  {
    "text": "your aws teams",
    "start": "1419120",
    "end": "1420720"
  },
  {
    "text": "as always here's wishing you happy cloud",
    "start": "1420720",
    "end": "1423279"
  },
  {
    "text": "computing from",
    "start": "1423279",
    "end": "1424159"
  },
  {
    "text": "everyone here at aws thank you so much",
    "start": "1424159",
    "end": "1431840"
  },
  {
    "text": "you",
    "start": "1435279",
    "end": "1437360"
  }
]