[
  {
    "start": "0",
    "end": "47000"
  },
  {
    "text": "well hello hello again for many of you here I'm Tim Wagner for any of you joining us in this session I'm the",
    "start": "760",
    "end": "7279"
  },
  {
    "text": "general manager for both Lambda and API Gateway and joining up joining me here",
    "start": "7279",
    "end": "12320"
  },
  {
    "text": "on stage today is Rory Jacob he's one of the developers on the Lambda team he's going to be helping me out with some of",
    "start": "12320",
    "end": "17400"
  },
  {
    "text": "the cool demos for some of the new features we want to show you today now if you heard verner's keynote",
    "start": "17400",
    "end": "23560"
  },
  {
    "text": "or my State of the Union Address you've already know about some of the new things that we're doing with Lambda and",
    "start": "23560",
    "end": "29119"
  },
  {
    "text": "with API Gateway in this session we're going to go into a little more detail and show you some of the demos of things like Sam and doq to",
    "start": "29119",
    "end": "36600"
  },
  {
    "text": "give you better insight and deeper insight into how they",
    "start": "36600",
    "end": "41160"
  },
  {
    "text": "work see if I can advance here all righty so we're not going to cover too",
    "start": "44120",
    "end": "50800"
  },
  {
    "start": "47000",
    "end": "47000"
  },
  {
    "text": "much in this session about the lamb Lambda Basics so I'm going to presume most of you know what Lambda is and what",
    "start": "50800",
    "end": "56520"
  },
  {
    "text": "we use it for scalable serverless compute in the Cloud I do want to quickly however frame",
    "start": "56520",
    "end": "64080"
  },
  {
    "text": "where we've made these new Investments and why so we think about the capabilities of a serverless platform as",
    "start": "64080",
    "end": "70600"
  },
  {
    "text": "kind of these nine different categories the core logic things like Lambda and event processing orchestration and State",
    "start": "70600",
    "end": "78000"
  },
  {
    "text": "Management how you can build and orchestrate an entire application together how we hook up data sources and",
    "start": "78000",
    "end": "84360"
  },
  {
    "text": "make them responsive and flexible together how we model those applications",
    "start": "84360",
    "end": "89479"
  },
  {
    "text": "how we talk talk about the different pieces that compose them the broader developer ecosystem",
    "start": "89479",
    "end": "95200"
  },
  {
    "text": "that Lambda sits in not just AWS but also third parties and open source Integrations monetization and",
    "start": "95200",
    "end": "103399"
  },
  {
    "text": "marketplaces security and access control reliability and performance and then global scale and",
    "start": "103399",
    "end": "111360"
  },
  {
    "text": "increasingly Global in every sense of the word not just including data",
    "start": "111360",
    "end": "116759"
  },
  {
    "text": "senders so let's go ahead and get started see this",
    "start": "116759",
    "end": "123320"
  },
  {
    "text": "one all right so the first thing I want to tell you about here today is cicd for",
    "start": "135280",
    "end": "141200"
  },
  {
    "text": "serverless apps we're going to talk about some of the new features I want to tell you a little more detail about Sam",
    "start": "141200",
    "end": "147720"
  },
  {
    "text": "the serverless application model and in particular how Sam gets used in both cloud formation and in building those",
    "start": "147720",
    "end": "154160"
  },
  {
    "text": "pipelines to do the package and deployment operations that let your serverless apps get built with",
    "start": "154160",
    "end": "160319"
  },
  {
    "text": "increasing ease and then we'll talk a little bit about how code build helps make that job",
    "start": "160319",
    "end": "167239"
  },
  {
    "text": "in particular of packaging especially node and python apps much easier by",
    "start": "167239",
    "end": "172360"
  },
  {
    "text": "being able to supply thirdparty libraries for you but before we do that I want to make",
    "start": "172360",
    "end": "177879"
  },
  {
    "text": "sure everybody heard the news environment variables are",
    "start": "177879",
    "end": "182599"
  },
  {
    "text": "here so we brought this out a little early uh couple of weeks before reinvent this has been our most requested",
    "start": "184519",
    "end": "191280"
  },
  {
    "text": "customer feature and we wanted to do it in a way that provided appropriate",
    "start": "191280",
    "end": "197120"
  },
  {
    "text": "security so fully integrated with KMS allowing you to also bring your own keys if that's what you like to do also",
    "start": "197120",
    "end": "203400"
  },
  {
    "text": "making it simple so you don't have to do that if you don't want to do it and making sure that it plays really nicely",
    "start": "203400",
    "end": "209000"
  },
  {
    "text": "with Amazon excuse me with AWS lambda's publishing mechanism so that if you want",
    "start": "209000",
    "end": "214599"
  },
  {
    "text": "to create immutable snapshots of your code you can also create immutable snapshots of that code's configuration",
    "start": "214599",
    "end": "221280"
  },
  {
    "text": "so you can have reliable trustworthy combinations of those two things together while still giving you the",
    "start": "221280",
    "end": "227000"
  },
  {
    "text": "flexibility and the freedom to change either anytime you need to so fully integrate it with publishing",
    "start": "227000",
    "end": "234640"
  },
  {
    "text": "fully integrate it with the versioning model and of course you can you can set",
    "start": "234640",
    "end": "240040"
  },
  {
    "start": "236000",
    "end": "236000"
  },
  {
    "text": "environment variables in the console you can of course do it programmatically and accessing it in in your code from any of",
    "start": "240040",
    "end": "245360"
  },
  {
    "text": "the languages including our new language is just the standard mechanism for retrieving uh whatever the environment",
    "start": "245360",
    "end": "252120"
  },
  {
    "text": "is in either python node or",
    "start": "252120",
    "end": "256639"
  },
  {
    "start": "257000",
    "end": "257000"
  },
  {
    "text": "Java now let's move on and talk a little bit about Sam the seress application",
    "start": "257639",
    "end": "263360"
  },
  {
    "text": "model so as I described earlier in the State of the Union Sam is a common language for describing the content of a",
    "start": "263360",
    "end": "270320"
  },
  {
    "text": "serverless app and we've made cloud formation speak Sam so it's got native",
    "start": "270320",
    "end": "275720"
  },
  {
    "text": "support built in for this new language now what actually happens is you can",
    "start": "275720",
    "end": "281280"
  },
  {
    "text": "think of it almost like a macro processor so it will take the Sam information and it will convert it into",
    "start": "281280",
    "end": "287560"
  },
  {
    "text": "standard cloud formation template speak so all the things that cloud",
    "start": "287560",
    "end": "293160"
  },
  {
    "text": "formation can do today all of the different kinds of deployments it can do all the things that it can configure all",
    "start": "293160",
    "end": "298520"
  },
  {
    "text": "of that power is still EX accessible to you there's no Cliff here that you kind of fall over but you get to model the",
    "start": "298520",
    "end": "304520"
  },
  {
    "text": "serverless parts in a very simplified fashion one that we can also use in a lot of other places while still giving",
    "start": "304520",
    "end": "310560"
  },
  {
    "text": "you access to all of the Power of cloud formation and then we've added some command line tools that you'll see here",
    "start": "310560",
    "end": "316440"
  },
  {
    "text": "to package and deploy Lambda based apps as well now you can also walk up to the",
    "start": "316440",
    "end": "322120"
  },
  {
    "text": "Lambda console and point to any blueprint or any of your existing functions and say give me a Sam for that thing and based on the information that",
    "start": "322120",
    "end": "328960"
  },
  {
    "text": "we have will give you an exported Sam file that you can then go use and turn around and inject back again in a build",
    "start": "328960",
    "end": "337440"
  },
  {
    "start": "337000",
    "end": "337000"
  },
  {
    "text": "cycle so here's an example of a Sam file this is a complete representation of a",
    "start": "338960",
    "end": "344120"
  },
  {
    "text": "really simple serverless app and it's got all the basics it's got a function it's got an API and it's got a nosql",
    "start": "344120",
    "end": "350880"
  },
  {
    "text": "data source and you can see there in just a few lines that we're able to capture the content and composition and",
    "start": "350880",
    "end": "357960"
  },
  {
    "text": "relationships that went into that system Simple serverless app and if you're saying well that's no",
    "start": "357960",
    "end": "363120"
  },
  {
    "text": "big deal here's what that replaced and this is one of the reasons",
    "start": "363120",
    "end": "368720"
  },
  {
    "text": "that it's really important to have a model that's both human readable and comprehensible like the one on the left",
    "start": "368720",
    "end": "375520"
  },
  {
    "text": "but also machine readable so that not only AWS but other companies and",
    "start": "375520",
    "end": "381280"
  },
  {
    "text": "projects as well can interact with it and that's the reason we've also",
    "start": "381280",
    "end": "386880"
  },
  {
    "start": "384000",
    "end": "384000"
  },
  {
    "text": "chosen to open source the the specific if ation for the serverless application model so is Apache 2 licensed up there",
    "start": "386880",
    "end": "394599"
  },
  {
    "text": "as a GitHub project in AWS Labs with the intent of being able to share that broadly with all of our ecosystem",
    "start": "394599",
    "end": "401440"
  },
  {
    "text": "partners and avoid avoid the the problems and pitfalls of having",
    "start": "401440",
    "end": "406720"
  },
  {
    "text": "everybody Define this in a different way so you can think of it as kind of defragging the modeling part of our",
    "start": "406720",
    "end": "412720"
  },
  {
    "text": "serverless ecosystem and community and so we're really excited to help that do that as a way of accelerating and",
    "start": "412720",
    "end": "418599"
  },
  {
    "text": "helping to power the forward now with that I'm going to turn things over to Rory I'm going to start",
    "start": "418599",
    "end": "424319"
  },
  {
    "text": "to take a look at how this actually works in practice awesome thanks Tim uh my name",
    "start": "424319",
    "end": "431160"
  },
  {
    "text": "is Rory uh as Tim said I am a uh engineer on the Lambda team and if we",
    "start": "431160",
    "end": "438840"
  },
  {
    "text": "just quickly switch over to my laptop we will see uh Sam floating around over here and I'm going to walk you through a",
    "start": "438840",
    "end": "444039"
  },
  {
    "text": "little demo I made that kind of shows the combination of all the different pieces we've seen talked about at this",
    "start": "444039",
    "end": "450319"
  },
  {
    "text": "whole presentation uh today as well as uh the what's new or the state of the union for servus earlier as well the",
    "start": "450319",
    "end": "456919"
  },
  {
    "text": "Keynotes that have happened over the past couple days uh so here we are this is Sam floating around uh he's pretty",
    "start": "456919",
    "end": "463360"
  },
  {
    "text": "lonely he's at reinvent but he didn't really come with anyone and he wants to have a better time uh there's all these",
    "start": "463360",
    "end": "468960"
  },
  {
    "text": "different events so we essentially want to make sure that Sam has the friends he needs uh to uh enjoy his time of re",
    "start": "468960",
    "end": "476520"
  },
  {
    "text": "event so I have a website right here I have a Lambda function which tells me uh",
    "start": "476520",
    "end": "482840"
  },
  {
    "text": "how many friends you should have and we'll kind of get into the other parts of it in a second so the first thing we're going to do is take a look at the",
    "start": "482840",
    "end": "488680"
  },
  {
    "text": "Lambda function which is right here uh super simple Lambda function all we do",
    "start": "488680",
    "end": "494000"
  },
  {
    "text": "here is I'm taking the Sam count right here and I'm taking this multiplier",
    "start": "494000",
    "end": "501240"
  },
  {
    "text": "which is using the environment variables we were uh released about a week or two ago and then we're taking this we're",
    "start": "501240",
    "end": "507400"
  },
  {
    "text": "multiplying them together and returning that value so really really simple function all that it does so for the",
    "start": "507400",
    "end": "513120"
  },
  {
    "text": "time being let's just change this let's say 17 seems like a better number that's",
    "start": "513120",
    "end": "519919"
  },
  {
    "text": "you know not too big that uh yeah you know he can actually get a beer when he goes to the pub but small enough that he",
    "start": "519919",
    "end": "527080"
  },
  {
    "text": "has a good amount of people to kind of hang out with and enjoy himself so we change this let's just make this change",
    "start": "527080",
    "end": "532720"
  },
  {
    "text": "now I'm going to uh add this change to my repo so I'm using GitHub as my",
    "start": "532720",
    "end": "538680"
  },
  {
    "text": "Repository you can use code commit GitHub all is the same but for this demo I'm going to use GitHub I'm going to",
    "start": "538680",
    "end": "545160"
  },
  {
    "text": "commit this change here say let's let's give Sam some",
    "start": "545160",
    "end": "552720"
  },
  {
    "text": "friends and push this and now what's going to happen is this is going to go to my GitHub repository and you'll see",
    "start": "554399",
    "end": "560480"
  },
  {
    "text": "how what happens in the future as we go through the different parts uh so I have my Lambda function which I just talked",
    "start": "560480",
    "end": "566839"
  },
  {
    "text": "about but what other parts do I need for this kind of whole demo uh so I wanted to kind of write those out to give me a",
    "start": "566839",
    "end": "572320"
  },
  {
    "text": "better idea of what parts of the serverless model and the serverless website I can use to build everything so",
    "start": "572320",
    "end": "579720"
  },
  {
    "text": "we need the the website right the website that showed the floating Sam icon so I need some sort of website I'm",
    "start": "579720",
    "end": "586000"
  },
  {
    "text": "using S3 so I'm using S3 for a static website uh to",
    "start": "586000",
    "end": "592200"
  },
  {
    "text": "display display the the party essentially right the next step is I",
    "start": "592200",
    "end": "597399"
  },
  {
    "text": "need that Lambda function that I just wrote and just updated to get tell me how many people should be in this party",
    "start": "597399",
    "end": "603600"
  },
  {
    "text": "so I need a Lambda function the next thing is I need an endpoint to call that invokes my Lambda",
    "start": "603600",
    "end": "610480"
  },
  {
    "text": "function that gives me that data so I need something probably API Gateway and thankfully with the Sam template I can",
    "start": "610480",
    "end": "616839"
  },
  {
    "text": "Define that whole thing and we'll show how we're defining that in a second so I need an API endpoint to invoke the",
    "start": "616839",
    "end": "623800"
  },
  {
    "text": "function and the very last thing is I have dependencies I'm taking into this function I have a node module if you",
    "start": "623800",
    "end": "630480"
  },
  {
    "text": "I'll go over in a little bit but I'm taking a node module called uh moments which involves getting data information",
    "start": "630480",
    "end": "636920"
  },
  {
    "text": "I don't want to zip this up I don't want to do anything with that I just want to have a repo with my code and I want something else to build this package",
    "start": "636920",
    "end": "643720"
  },
  {
    "text": "this and deploy this for me so I need some sort of building and package management build uh",
    "start": "643720",
    "end": "651519"
  },
  {
    "text": "package download and zip so that's where we're going to get to the code build part and",
    "start": "651839",
    "end": "657680"
  },
  {
    "text": "we'll get to that in a second um so for the API part over here here is my Sam",
    "start": "657680",
    "end": "664200"
  },
  {
    "text": "template this is the only template that I wrote which generated essentially everything I needed for my API I have at",
    "start": "664200",
    "end": "671079"
  },
  {
    "text": "the very top here um my function definition I have my environment",
    "start": "671079",
    "end": "677200"
  },
  {
    "text": "variables that I was talking about previously I am taking that in as a parameter and at the very end I'm",
    "start": "677200",
    "end": "683120"
  },
  {
    "text": "defining an event this one being the API and it's a get method now",
    "start": "683120",
    "end": "689880"
  },
  {
    "text": "before Tim showed you what the whole cloud formation would make you do to create these things and Link them all",
    "start": "689880",
    "end": "696160"
  },
  {
    "text": "together this does everything for me so it creates my function links my API sets",
    "start": "696160",
    "end": "701519"
  },
  {
    "text": "everything up so they're connected and I have done literally nothing besides these seven lines of",
    "start": "701519",
    "end": "706760"
  },
  {
    "text": "code and uh now that I've kind of gone through that I think we have the different pieces here and I'm going to",
    "start": "706760",
    "end": "712639"
  },
  {
    "text": "bring it back to Tim he's going to show you how this all kind of glues together and then we're going to go back to what",
    "start": "712639",
    "end": "718000"
  },
  {
    "text": "this happens with this party okay we can flip back to computer one",
    "start": "718000",
    "end": "724480"
  },
  {
    "text": "here so this is what's going to happen conceptually now we've set up a code",
    "start": "725959",
    "end": "731279"
  },
  {
    "start": "726000",
    "end": "726000"
  },
  {
    "text": "pipeline that's going to be able to automatically detect and retrieve those",
    "start": "731279",
    "end": "736680"
  },
  {
    "text": "changes that we already pushed earlier right so that's going to be extracted from",
    "start": "736680",
    "end": "741720"
  },
  {
    "text": "GitHub and then the new the new part is it's going to be able to hand it over to code build our newly announced service",
    "start": "741720",
    "end": "748480"
  },
  {
    "text": "today that's going to be able to do the packaging for us so it's going to take that package that that library that Rory",
    "start": "748480",
    "end": "754560"
  },
  {
    "text": "pointed out moments and automatically download that and include it so that's functionality that comes prepackaged",
    "start": "754560",
    "end": "761360"
  },
  {
    "text": "today in code build now once we're there we'll be able",
    "start": "761360",
    "end": "768480"
  },
  {
    "text": "to do either npm pipping if it's Java we could do the Java compilation you could bring your own Docker so you've got the",
    "start": "768480",
    "end": "774440"
  },
  {
    "text": "support for building all the different kinds of languages and capabilities that you need",
    "start": "774440",
    "end": "780399"
  },
  {
    "text": "and then finally once we've gotten all of that code set up we'll package it into the form that Lambda recognizes",
    "start": "780399",
    "end": "786800"
  },
  {
    "text": "same thing it uses today sort of a zip file fully elaborated with all the libraries so it's got no module",
    "start": "786800",
    "end": "793120"
  },
  {
    "text": "dependencies on anything else can run as a fully self-contained unit and then we'll get to the final",
    "start": "793120",
    "end": "799040"
  },
  {
    "text": "step here where code pipeline will integrate with cloud formation hand over both the code and the Sam template and",
    "start": "799040",
    "end": "806079"
  },
  {
    "text": "then we'll see that go off and deploy and either build in the first place or update previously existing",
    "start": "806079",
    "end": "813480"
  },
  {
    "text": "pieces and those can include Lambda functions apis data stores and other pieces here",
    "start": "813480",
    "end": "821040"
  },
  {
    "text": "so I'm going to hand this back over to Rory and we're going to go take a look at uh where we've gotten to in our",
    "start": "821040",
    "end": "826320"
  },
  {
    "text": "pipeline here and see some of this in action awesome so let's go back to here",
    "start": "826320",
    "end": "831560"
  },
  {
    "text": "and let's go take a look at this pipeline uh so here we are this is code pipelines uh all I'm defining here is",
    "start": "831560",
    "end": "838320"
  },
  {
    "text": "I've created this before and I have it pulling from a git repository make sure this coming up",
    "start": "838320",
    "end": "846800"
  },
  {
    "text": "right there we go there we go uh I have a git repositor I'm pulling from you can see that it it pulled the change",
    "start": "846800",
    "end": "852759"
  },
  {
    "text": "automatically I didn't do anything I didn't tell it to pull things it is pulling things as it is happening uh The",
    "start": "852759",
    "end": "858399"
  },
  {
    "text": "Next Step H there we",
    "start": "858399",
    "end": "865519"
  },
  {
    "text": "go uh the next step that's going to happen here is we're going to have it go to code build and actually build my",
    "start": "865519",
    "end": "872680"
  },
  {
    "text": "source so let's take a look at what that next thing step looks like uh as I talked about earlier I have this",
    "start": "872680",
    "end": "878920"
  },
  {
    "text": "package.json and here I've defined my dependency I need this package called moment and I need at least version",
    "start": "878920",
    "end": "886759"
  },
  {
    "text": "2.16 so normally you know you run npm install locally you zip it up you publish this",
    "start": "886759",
    "end": "892959"
  },
  {
    "text": "whole package to Lambda uh what I've actually done here is using C build I can Define this build spec and what the",
    "start": "892959",
    "end": "900320"
  },
  {
    "text": "build spec does is I have build steps that it runs in order does whatever uh require basically runs these commands",
    "start": "900320",
    "end": "906839"
  },
  {
    "text": "and then gives you an output artifact you can deploy so here I have the first two steps I have my npm install",
    "start": "906839",
    "end": "912720"
  },
  {
    "text": "obviously if you're using python this could be your uh requirements. Tex so your pip and the next stop that we do is",
    "start": "912720",
    "end": "919480"
  },
  {
    "text": "this AWS Cloud information package command which is the new uh command that we introduced with the Sam template and",
    "start": "919480",
    "end": "925639"
  },
  {
    "text": "that takes your input Sam template which in I my case I called the sam. yaml uh",
    "start": "925639",
    "end": "932920"
  },
  {
    "text": "you pass in an S3 bucket where you want to store the resulting uh template or",
    "start": "932920",
    "end": "937959"
  },
  {
    "text": "sorry the resulting um combined artifact and then you give it the name of the artifact you're going to Output so that",
    "start": "937959",
    "end": "944560"
  },
  {
    "text": "is going to be your cloud formation artifact right so that's all I've done we can if we go back to cloud formation",
    "start": "944560",
    "end": "950720"
  },
  {
    "text": "here we can see inside code",
    "start": "950720",
    "end": "955879"
  },
  {
    "text": "build that it actually has run all the",
    "start": "956639",
    "end": "962199"
  },
  {
    "text": "steps it has run all the steps it has taken everything has run my bill steps",
    "start": "962839",
    "end": "967880"
  },
  {
    "text": "and is given me that output artifact and now if we go back to the",
    "start": "967880",
    "end": "975040"
  },
  {
    "text": "pipeline zoom out",
    "start": "975040",
    "end": "978639"
  },
  {
    "text": "here yeah one second if we go back to here I can see",
    "start": "980440",
    "end": "986959"
  },
  {
    "text": "that Sam has some friends to play with so essentially what I've what we've just done is we've made the code change we've",
    "start": "986959",
    "end": "993440"
  },
  {
    "text": "built it we've deployed it and I've had it's done all that for me inside the whole CD",
    "start": "993440",
    "end": "1000600"
  },
  {
    "text": "Pipeline and the next step is obviously this is really cool like we haven't had",
    "start": "1000600",
    "end": "1006199"
  },
  {
    "text": "this before and this is a like an integration of the different parts but I know this is reinvent and I went to uh",
    "start": "1006199",
    "end": "1012920"
  },
  {
    "text": "the pub crawl last night I know this is not exactly what reinvent is like so I'm going to go back to my function here I'm",
    "start": "1012920",
    "end": "1020040"
  },
  {
    "text": "going refresh the page so it gets the newest version of the function and I can see here here's the",
    "start": "1020040",
    "end": "1027319"
  },
  {
    "text": "code change that I made so before I had it set to uh one and now instead I have",
    "start": "1027319",
    "end": "1034160"
  },
  {
    "text": "it set to 17 so if I go down here to my Sam",
    "start": "1034160",
    "end": "1039558"
  },
  {
    "text": "multiplier get this up I'm going to change this to 20 let's",
    "start": "1042120",
    "end": "1049160"
  },
  {
    "text": "say 20 why not save this and I go back to my page and now",
    "start": "1049160",
    "end": "1056400"
  },
  {
    "text": "this is more what it feels like to be a kind of the reinvents here",
    "start": "1056400",
    "end": "1061760"
  },
  {
    "text": "um so that's kind of the combination of everything we have the uh the Sam",
    "start": "1061760",
    "end": "1067559"
  },
  {
    "text": "template we're using Code build to actually build and package our application we're using uh environment",
    "start": "1067559",
    "end": "1073520"
  },
  {
    "text": "variables to allow for operational configuration and we're kind of combining all this together which which",
    "start": "1073520",
    "end": "1078919"
  },
  {
    "text": "is really important to have a really good service architecture uh so now I'm going to pass this back to Tim he's going to keep talking about new things",
    "start": "1078919",
    "end": "1086559"
  },
  {
    "text": "thanks so what you saw there was a complete cicd experience from you know the code change all the way through to",
    "start": "1086559",
    "end": "1094080"
  },
  {
    "text": "an update to what was in this case a a simple serverless web app that was running and then we followed that up",
    "start": "1094080",
    "end": "1101080"
  },
  {
    "text": "with a configuration change so illustrating the new environment variables and also showing the fact that",
    "start": "1101080",
    "end": "1107559"
  },
  {
    "text": "the pieces of the servess app haven't turned back into a monolith so Rory was able to go in and change that",
    "start": "1107559",
    "end": "1113480"
  },
  {
    "text": "environment variable and we could update the application without having to do a complete deployment through the pipeline",
    "start": "1113480",
    "end": "1118760"
  },
  {
    "text": "although of course we can do that as well so the benefits of the microservices but still the Simplicity",
    "start": "1118760",
    "end": "1124280"
  },
  {
    "text": "and the capability of a complete entwined pipeline yeah yeah it's like",
    "start": "1124280",
    "end": "1129400"
  },
  {
    "start": "1128000",
    "end": "1128000"
  },
  {
    "text": "the refresherator I want to point out a couple of other things here just in case case you missed it while not a Lambda feature per se one of the things a lot",
    "start": "1129400",
    "end": "1136960"
  },
  {
    "text": "of you have asked for is the ability to map more easily from cloud watch metrics",
    "start": "1136960",
    "end": "1142039"
  },
  {
    "text": "that indicate anomalous problems into logs and so I'm really excited to to",
    "start": "1142039",
    "end": "1148559"
  },
  {
    "text": "point out one of the recent cloudwatch deliveries in the runup to reinvent here where in addition to percentiles which",
    "start": "1148559",
    "end": "1154840"
  },
  {
    "text": "we love it at uh at AWS and use all the time they've also added a metrics to",
    "start": "1154840",
    "end": "1160400"
  },
  {
    "text": "logs feature so you can go in find a metric that you think is suspicious or somehow anomalous and then be able to",
    "start": "1160400",
    "end": "1167080"
  },
  {
    "text": "hop directly to the Cloud watch logs that tell you in detail what happened so",
    "start": "1167080",
    "end": "1172600"
  },
  {
    "text": "you can utilize the metrics and the logs that Lambda is already generating and be able to tie them and correlate them",
    "start": "1172600",
    "end": "1178080"
  },
  {
    "text": "together more easily as a diagnostic",
    "start": "1178080",
    "end": "1182240"
  },
  {
    "text": "experience so Diagnostics in general is a really important area for for serverless apps and for Lambda apps in",
    "start": "1183200",
    "end": "1191000"
  },
  {
    "text": "particular and as we talked about earlier we want to make this and make this as transparent and simple a process",
    "start": "1191000",
    "end": "1197400"
  },
  {
    "text": "as possible so that you can see see what's happening under the covers and be able to find performance problems or",
    "start": "1197400",
    "end": "1204159"
  },
  {
    "text": "other kinds of functional issues and then go diagnose them and so I'm want to talk a little bit here about our new",
    "start": "1204159",
    "end": "1210960"
  },
  {
    "text": "x-ray feature and some of the capabilities that it's going to",
    "start": "1210960",
    "end": "1216520"
  },
  {
    "start": "1215000",
    "end": "1215000"
  },
  {
    "text": "introduce so x-ray is designed to give you visibility into events as they travel from one service to another so",
    "start": "1216520",
    "end": "1223840"
  },
  {
    "text": "imagine a kind of a typical experience where you upload an object that triggers a Lambda function then maybe you have to",
    "start": "1223840",
    "end": "1229520"
  },
  {
    "text": "call Dynamo to write some things into a database maybe you call some other services all good until you start having",
    "start": "1229520",
    "end": "1236720"
  },
  {
    "text": "a problem like maybe that event didn't run when you thought it would or maybe you thought that it was processing you",
    "start": "1236720",
    "end": "1242360"
  },
  {
    "text": "know 100 events a second but you're only seeing two or three what do you do so this is where x-ray comes in you can",
    "start": "1242360",
    "end": "1249039"
  },
  {
    "text": "think of it as essentially a cross-service event-based profiling mechanism lets you trace calls and",
    "start": "1249039",
    "end": "1255280"
  },
  {
    "text": "generate timing information from Lambda to other functions and I've shown you here the",
    "start": "1255280",
    "end": "1261120"
  },
  {
    "text": "configuration which is super simple but just a few lines of code either added or changed we've been able to take this",
    "start": "1261120",
    "end": "1267039"
  },
  {
    "text": "sample function and get it ready to roll with x-ray this is the way it's going to be",
    "start": "1267039",
    "end": "1272600"
  },
  {
    "text": "initially in preview our goal actually when we get it to GA is to actually have a complete zero touch mechanism so you",
    "start": "1272600",
    "end": "1279720"
  },
  {
    "text": "won't have to actually change your code at all in order to be able to gain lots of insights from x-ray although of",
    "start": "1279720",
    "end": "1285799"
  },
  {
    "text": "course you're welcome and the idea is also that as with you can always put as much custom",
    "start": "1285799",
    "end": "1291559"
  },
  {
    "text": "logging or information in as you like x-ray is launching in preview today",
    "start": "1291559",
    "end": "1297919"
  },
  {
    "text": "and Lambda sport will be coming soon in the next few weeks now one of the things you'll be",
    "start": "1297919",
    "end": "1303320"
  },
  {
    "text": "able to do when we get there is draw a graphical representation of your service",
    "start": "1303320",
    "end": "1308919"
  },
  {
    "text": "topology and this is really exciting because each of these circles represents a piece of your application and then the",
    "start": "1308919",
    "end": "1315520"
  },
  {
    "text": "lines between them indicate the dependencies indicate the event flow between the different parts that can be",
    "start": "1315520",
    "end": "1322080"
  },
  {
    "text": "one event or one Lambda function calling another Lambda function it can be an API backed by a Lambda function or it could",
    "start": "1322080",
    "end": "1328679"
  },
  {
    "text": "be another AWS service ultimately as we bring more online to support x-ray that",
    "start": "1328679",
    "end": "1334120"
  },
  {
    "text": "are able to send events to Lambda and you'll be able to both see",
    "start": "1334120",
    "end": "1339200"
  },
  {
    "text": "dependencies that maybe you weren't expecting because we all know that sometimes in large production systems we find things we don't as suspect but also",
    "start": "1339200",
    "end": "1346440"
  },
  {
    "text": "detect places where maybe throttling has happened happening so that you can find the choke point on an event and trace it",
    "start": "1346440",
    "end": "1352360"
  },
  {
    "text": "back to the origin and the source once you figured out on the to on this service map where the problem is",
    "start": "1352360",
    "end": "1359080"
  },
  {
    "text": "then you can drill in and get detailed information that helps you figure out am",
    "start": "1359080",
    "end": "1365039"
  },
  {
    "text": "I experiencing long dwell times am I calling another service that's being slow am I retrying more times than I",
    "start": "1365039",
    "end": "1371320"
  },
  {
    "text": "expected all of that information that today is a little bit opaque and harder to to pull out of the system becomes",
    "start": "1371320",
    "end": "1378600"
  },
  {
    "text": "very visible and simple to understand with x-ray so we're really excited about this",
    "start": "1378600",
    "end": "1384039"
  },
  {
    "text": "we think it's going to be a great new diagnostic capability for the system and we're looking forward to having that in",
    "start": "1384039",
    "end": "1389279"
  },
  {
    "text": "your hands in the next several weeks now I want to talk about a few",
    "start": "1389279",
    "end": "1395200"
  },
  {
    "text": "additional Lambda features that we're launching today the first one of these is for our",
    "start": "1395200",
    "end": "1401520"
  },
  {
    "text": "kinus users and it's a new Kinesis iterator",
    "start": "1401520",
    "end": "1407000"
  },
  {
    "start": "1403000",
    "end": "1403000"
  },
  {
    "text": "type now we've always given you the ability to start at the beginning of a stream and to start at the end of a",
    "start": "1407000",
    "end": "1414520"
  },
  {
    "text": "stream today we're also giving you the ability to start anywhere you want in the middle of a",
    "start": "1414520",
    "end": "1421679"
  },
  {
    "text": "stream at timestamp is not just another iterator type it's also really important",
    "start": "1423480",
    "end": "1428520"
  },
  {
    "text": "because it gives you some great new capabilities you can disable the stream and and then come back and enable it",
    "start": "1428520",
    "end": "1435120"
  },
  {
    "text": "again picking up exactly where you left off you can also decide to essentially",
    "start": "1435120",
    "end": "1440600"
  },
  {
    "text": "roll forward or backwards if there's some events in there that you don't need to read so it's a much more flexible mechanism for positioning and placing",
    "start": "1440600",
    "end": "1447320"
  },
  {
    "text": "yourself within streaming data so we're really excited about",
    "start": "1447320",
    "end": "1452880"
  },
  {
    "text": "that you heard earlier in the keynote most likely about our new language Edition today so we're bringing C in the",
    "start": "1453400",
    "end": "1460240"
  },
  {
    "text": "form of uh of net core to",
    "start": "1460240",
    "end": "1464679"
  },
  {
    "text": "Lambda and we have lots of Enterprises that that use C and as a a guy with a",
    "start": "1466679",
    "end": "1472120"
  },
  {
    "text": "historical relationship to c i um I'm very well aware that there are a lot of people who love that language and who",
    "start": "1472120",
    "end": "1479200"
  },
  {
    "text": "have been asking us to bring the power and flexibility of Lambda and C",
    "start": "1479200",
    "end": "1484799"
  },
  {
    "text": "together now in doing this we've retri we've tried to retain The Best of Both Worlds just like Java we've made it",
    "start": "1484799",
    "end": "1490840"
  },
  {
    "text": "really easy to run uh C functions and code inside of Lambda without having to",
    "start": "1490840",
    "end": "1496919"
  },
  {
    "text": "make changes to them we provide you with the same kind of metrics and logging capability you're used to in all the",
    "start": "1496919",
    "end": "1502039"
  },
  {
    "text": "rest of our languages just as with Java will make it really easy to serialize and deserialize typical AWS events so S3",
    "start": "1502039",
    "end": "1509679"
  },
  {
    "text": "events will fit very naturally into this and we've integrated this with",
    "start": "1509679",
    "end": "1515559"
  },
  {
    "text": "visual studio so C developers who are used to living in that IDE in that environment will have an easy fast fun",
    "start": "1515559",
    "end": "1522760"
  },
  {
    "text": "and idiomatically um uh conventional way of writing and deploying their code",
    "start": "1522760",
    "end": "1530320"
  },
  {
    "start": "1529000",
    "end": "1529000"
  },
  {
    "text": "now as you might have heard me say earlier one of the things that we've heard from lots of our customers is that",
    "start": "1532279",
    "end": "1538960"
  },
  {
    "text": "they need a way to create completely reliable end to-end processing when they're doing asynchronous",
    "start": "1538960",
    "end": "1546480"
  },
  {
    "text": "event either because they don't want to lose something maybe they uploaded an object and they need to ensure that it's",
    "start": "1546480",
    "end": "1551919"
  },
  {
    "text": "been processed or maybe the the content of the event itself represents",
    "start": "1551919",
    "end": "1557360"
  },
  {
    "text": "information that they don't have stored someplace and without a highly reliable mechanism they have to create duplicate",
    "start": "1557360",
    "end": "1564399"
  },
  {
    "text": "copies or they have to have a second channel for that information meaning that their serous architecture might not",
    "start": "1564399",
    "end": "1569960"
  },
  {
    "text": "be as simple as it could otherwise be so we're really excited today to introduce dead letter Q support for Lambda and the",
    "start": "1569960",
    "end": "1578360"
  },
  {
    "text": "way this works is that yeah we're excited too um it's",
    "start": "1578360",
    "end": "1584279"
  },
  {
    "text": "super easy to configure you basically just tell us here's the AR of an sqs Q or an SNS topic and anytime we're not",
    "start": "1584279",
    "end": "1592159"
  },
  {
    "text": "able to get your event successfully processed through your code so we don't get a successful return from it we'll",
    "start": "1592159",
    "end": "1598159"
  },
  {
    "text": "send it to either that queue or that topic for you to take action on it and you can set these up per function so you",
    "start": "1598159",
    "end": "1604159"
  },
  {
    "text": "can have different to different cues or different topics per Lambda function works for all async invokes regardless",
    "start": "1604159",
    "end": "1609600"
  },
  {
    "text": "of where that event comes from and if there's any problem in your configuration as a fallback we'll also",
    "start": "1609600",
    "end": "1616640"
  },
  {
    "text": "issue you a cloudwatch metric so as a kind of ultimate back stop if anything's wrong in your configuration",
    "start": "1616640",
    "end": "1622320"
  },
  {
    "text": "you'll at least know that you need to go take a look at that in order to repair your dlq setup and",
    "start": "1622320",
    "end": "1629159"
  },
  {
    "text": "config now we're going to take a little look here at um at dlq in action so what",
    "start": "1629159",
    "end": "1634799"
  },
  {
    "text": "Rory's going to Rory's going to come join me on stage here again and we're going to look at a really simple doq",
    "start": "1634799",
    "end": "1641279"
  },
  {
    "text": "setup we're going to simulate some S3 events coming into a Lambda function",
    "start": "1641279",
    "end": "1646919"
  },
  {
    "text": "only the Lambda function isn't to behave well it's not going to be able to process those events and as a result",
    "start": "1646919",
    "end": "1652480"
  },
  {
    "text": "what it's going to do is send them to a dlq in this case in the form of SNS and we're actually going to route that to",
    "start": "1652480",
    "end": "1658600"
  },
  {
    "text": "another Lambda function to take some action so wor is going to step us through this architecture in the code",
    "start": "1658600",
    "end": "1664320"
  },
  {
    "text": "perfect thanks Tim uh yeah with everything that we've done here with asynchronous dlq uh will show this",
    "start": "1664320",
    "end": "1671720"
  },
  {
    "text": "example we're going to kind of go over how dlq is useful for those error scenarios we were talking about and see",
    "start": "1671720",
    "end": "1676919"
  },
  {
    "text": "what do you actually get out of DL Cube uh so for me I have a super simple function obviously this is just example",
    "start": "1676919",
    "end": "1684279"
  },
  {
    "text": "but you can have any kind of AC gr EV vent um have a dlq in U hooked up to",
    "start": "1684279",
    "end": "1690440"
  },
  {
    "text": "some sort of uh quer U have a dlq that you push to some sort of recovery",
    "start": "1690440",
    "end": "1696360"
  },
  {
    "text": "functions we'll kind of go through the details on that uh the first one here we have a function uh it's very very simple",
    "start": "1696360",
    "end": "1702519"
  },
  {
    "text": "all I'm doing in this function is I getting a bucket I am getting a key",
    "start": "1702519",
    "end": "1709480"
  },
  {
    "text": "and I'm trying to get that but that object from S3 so very simple uh and",
    "start": "1709480",
    "end": "1715760"
  },
  {
    "text": "when I get the object I'm just returning the content of that object obviously here I have this exception where I'm",
    "start": "1715760",
    "end": "1722039"
  },
  {
    "text": "printing the exception I'm having this other error that I'm printing out and I'm reising that exception and the main",
    "start": "1722039",
    "end": "1729320"
  },
  {
    "text": "part of notice is that if this is an S3 no bucket or the object doesn't exist",
    "start": "1729320",
    "end": "1734840"
  },
  {
    "text": "that is the error that I'm re raising here uh and then you'll see that this is actually the error that we are able to get inside our dlq and kind of work",
    "start": "1734840",
    "end": "1742360"
  },
  {
    "text": "through that so in this configuration uh in the back here under advanced settings there's this area over",
    "start": "1742360",
    "end": "1749399"
  },
  {
    "text": "here called D dlq settings and I've picked a dlq resource for an SNS topic",
    "start": "1749399",
    "end": "1755559"
  },
  {
    "text": "and specifically called dlq demo which I've just defined right here simple",
    "start": "1755559",
    "end": "1761000"
  },
  {
    "text": "topic I've subscribed in this scenario a Lambda function and what this L Lambda",
    "start": "1761000",
    "end": "1766080"
  },
  {
    "text": "function will do is it will write a cloud watch logs the airor so obviously this is a a very small example uh just",
    "start": "1766080",
    "end": "1773360"
  },
  {
    "text": "writing to log so I know and can recover from this but you can imagine doing things that are much bigger with that",
    "start": "1773360",
    "end": "1779519"
  },
  {
    "text": "you can put that into a database you can keep track of the errors you can uh even",
    "start": "1779519",
    "end": "1784960"
  },
  {
    "text": "do things like Auto Recovery based on certain scenarios so there's a lot of different cool things you can do with TQ",
    "start": "1784960",
    "end": "1790240"
  },
  {
    "text": "uh in this example we're just going to write to the to cloudwatch so here is the result uh I'm taking this m message",
    "start": "1790240",
    "end": "1798760"
  },
  {
    "text": "this is the uh payload that caused the error so this is actually the invoke",
    "start": "1798760",
    "end": "1804640"
  },
  {
    "text": "payload into my asynchronous event here is this message attribute which will actually contain the error that was",
    "start": "1804640",
    "end": "1811640"
  },
  {
    "text": "received um or that was thrown by the invoke and I'm just outputting that cloud cloudwatch logs so we go to",
    "start": "1811640",
    "end": "1818960"
  },
  {
    "text": "cloudwatch right now I've been kind of invoking this uh a little bit in the background so we'll just wait for this",
    "start": "1818960",
    "end": "1824480"
  },
  {
    "text": "to come out but in a second we'll actually see that uh the cloudwatch logs will display all those different areas",
    "start": "1824480",
    "end": "1831720"
  },
  {
    "text": "so we can even go oh here we go me reload",
    "start": "1831720",
    "end": "1838960"
  },
  {
    "text": "this give it a second fig there we go so in this here we can see my request I",
    "start": "1841559",
    "end": "1847600"
  },
  {
    "text": "have inside there the request ID so I can track it down if I'm using SDK track it to the actual request the client made",
    "start": "1847600",
    "end": "1854960"
  },
  {
    "text": "I have the error type um 200 is what we throw uh if your function itself errors",
    "start": "1854960",
    "end": "1861679"
  },
  {
    "text": "and here is the actual error message that my function threw so I'm saying that there's no bucket that exists and",
    "start": "1861679",
    "end": "1867960"
  },
  {
    "text": "in the next part here I can see what the payload was that caused that to happen so now I have all the pieces to",
    "start": "1867960",
    "end": "1873480"
  },
  {
    "text": "essentially figure out what happened with my asynchronous invoke great thanks",
    "start": "1873480",
    "end": "1882200"
  },
  {
    "text": "R so if we flip back here I'm going to just give you kind of a quick picture of what we just looked at there so this is",
    "start": "1882639",
    "end": "1888600"
  },
  {
    "text": "a an illustration of sort of the that dlq architecture where his original function was generating failed events we",
    "start": "1888600",
    "end": "1895039"
  },
  {
    "text": "pass them to SNS and then we published them into another function which in this case was acting as our error Handler and",
    "start": "1895039",
    "end": "1902000"
  },
  {
    "text": "two kind of things to note here you know first of all because those events can be super important to you we have absolute",
    "start": "1902000",
    "end": "1907240"
  },
  {
    "text": "payload Fidelity so all the bits that came into your original async invoke make it out to the doq so you've haven't",
    "start": "1907240",
    "end": "1913760"
  },
  {
    "text": "lost any information there's no lossess and you also so there the other",
    "start": "1913760",
    "end": "1918799"
  },
  {
    "text": "thing that we do which is we give you these side cars so we provide some metadata that says to the best of our",
    "start": "1918799",
    "end": "1923840"
  },
  {
    "text": "knowledge what failed and why so that you have an opportunity to go figure out you know was it um uh was it was a bad",
    "start": "1923840",
    "end": "1931960"
  },
  {
    "text": "input was it a par an uncaught exception that you had um not the whole level of diagnostic capability that something",
    "start": "1931960",
    "end": "1937919"
  },
  {
    "text": "like x-ray will give you but hopefully enough information as part of that payload parcel that you'll be able to",
    "start": "1937919",
    "end": "1943120"
  },
  {
    "text": "see and detect what the actual problem was",
    "start": "1943120",
    "end": "1948399"
  },
  {
    "start": "1946000",
    "end": "1946000"
  },
  {
    "text": "now I want to make sure we're kind of all caught up in some of the um many Integrations as all of you know I'm sure",
    "start": "1949159",
    "end": "1955519"
  },
  {
    "text": "Lambda is integrated with lots of other parts of the AWS portfolio either events",
    "start": "1955519",
    "end": "1960679"
  },
  {
    "text": "that can send to it or custom um or customization and extensibility like we",
    "start": "1960679",
    "end": "1966080"
  },
  {
    "text": "do with Cognito and AWS config but a few that have happened recently and there",
    "start": "1966080",
    "end": "1971440"
  },
  {
    "text": "been so many of them I want to make sure that we're all on the same page so just in case you missed it Amazon Aurora has",
    "start": "1971440",
    "end": "1977200"
  },
  {
    "text": "now added SQL triggers using Lambda functions so store procedures in the",
    "start": "1977200",
    "end": "1982559"
  },
  {
    "text": "cloud in the form of Lambda we've also recently implemented",
    "start": "1982559",
    "end": "1989240"
  },
  {
    "start": "1986000",
    "end": "1986000"
  },
  {
    "text": "what we call the pass through mode for API Gateway so if you just need an HTTP",
    "start": "1989240",
    "end": "1994480"
  },
  {
    "text": "endpoint on a on top of a Lambda function we've made that really easy very transparent you don't have to set",
    "start": "1994480",
    "end": "2000120"
  },
  {
    "text": "up mapping templates you don't have to set up lots of different end points we'll just pass everything through to",
    "start": "2000120",
    "end": "2005279"
  },
  {
    "text": "your Lambda function and then what we've done with that is also launched uh an",
    "start": "2005279",
    "end": "2011159"
  },
  {
    "text": "Express wrapper as an open source project so in case you like using Express and you want to write web apps",
    "start": "2011159",
    "end": "2016760"
  },
  {
    "text": "in Lambda we've made that super simple to do on top of the pass through mode",
    "start": "2016760",
    "end": "2022880"
  },
  {
    "text": "functionality now just in the last week or so uh mobile hub has launched Enterprise connectors that are built",
    "start": "2023279",
    "end": "2030360"
  },
  {
    "text": "using Lambda functions so if you want to create mobile apps in fact it's not even limited to mobile if you want to create",
    "start": "2030360",
    "end": "2036480"
  },
  {
    "text": "any apps that use these connectors to go out to for example Salesforce you now have a really easy way to do that and",
    "start": "2036480",
    "end": "2043559"
  },
  {
    "text": "those Enterprise connectors you should imagine we're going to continue adding to that set there to provide you with",
    "start": "2043559",
    "end": "2048720"
  },
  {
    "text": "broader capability and finally S3 has launched",
    "start": "2048720",
    "end": "2054919"
  },
  {
    "text": "cloud trail events on a per object basis super important feature for for those of you who use S3 and lots of different",
    "start": "2054919",
    "end": "2061520"
  },
  {
    "text": "things that you can you can do with it lots of important auditing applications but I thought I'd point out one that has",
    "start": "2061520",
    "end": "2067240"
  },
  {
    "text": "particular interest to Lambda users which is that it effectively also now lets you respond to get events on S3 so",
    "start": "2067240",
    "end": "2074679"
  },
  {
    "text": "if you need to do some kind of custom audit traces or take other actions when objects are being retrieved you can now",
    "start": "2074679",
    "end": "2080240"
  },
  {
    "text": "do that on S3 now I mentioned in passing here uh",
    "start": "2080240",
    "end": "2086240"
  },
  {
    "start": "2083000",
    "end": "2083000"
  },
  {
    "text": "web app Frameworks and we've been doing a lot of investment as has the the",
    "start": "2086240",
    "end": "2091760"
  },
  {
    "text": "community around us in making Lambda easier to use for building serverless web apps lot lot of great reasons for",
    "start": "2091760",
    "end": "2098640"
  },
  {
    "text": "this the scale down to zero the instant ability to burst up to high levels of traffic make it really simple as a",
    "start": "2098640",
    "end": "2105839"
  },
  {
    "text": "topology and an architectural approach but until recently one of the challenges was being able to use some of those",
    "start": "2105839",
    "end": "2112160"
  },
  {
    "text": "Frameworks that you're used to so with things like chalice and our",
    "start": "2112160",
    "end": "2118359"
  },
  {
    "text": "our Express open source projects from AWS and with open- Source offerings from",
    "start": "2118359",
    "end": "2123920"
  },
  {
    "text": "Claudia JS and others you can now find mechanisms out there to do flask whiskey",
    "start": "2123920",
    "end": "2129880"
  },
  {
    "text": "Express asp.net core and others and so we're really excited about this helping",
    "start": "2129880",
    "end": "2136440"
  },
  {
    "text": "people build web apps faster and simpler without having to give up the part of the Frameworks that they love but still",
    "start": "2136440",
    "end": "2143040"
  },
  {
    "text": "gaining all the benefits of a serverless",
    "start": "2143040",
    "end": "2147079"
  },
  {
    "text": "approach now one of the really nice things about Lambda is how stateless",
    "start": "2151800",
    "end": "2157000"
  },
  {
    "text": "those functions are are you have you essentially are",
    "start": "2157000",
    "end": "2162200"
  },
  {
    "text": "coralled into doing a great design approach where your code and your dat or",
    "start": "2162200",
    "end": "2167640"
  },
  {
    "text": "your your code and your storage live separately and that works out really well for lots of things especially",
    "start": "2167640",
    "end": "2174560"
  },
  {
    "text": "places where it's a kind of a onetoone binding you upload an object to S3 and",
    "start": "2174560",
    "end": "2180040"
  },
  {
    "text": "you run some code you put a record into Kinesis and you run some code you change something in Dynamo and you run some",
    "start": "2180040",
    "end": "2185359"
  },
  {
    "text": "code but what happens if you need to choreograph multiple functions maybe you",
    "start": "2185359",
    "end": "2191839"
  },
  {
    "text": "upload an object to S3 and you want to do 10 different transforms on that object wait till they all finish and",
    "start": "2191839",
    "end": "2198000"
  },
  {
    "text": "then send a message out via SNS to indicate that they're done well that gets a little harder if every one of",
    "start": "2198000",
    "end": "2203400"
  },
  {
    "text": "those functions is stateless it's tough for them to watch the other functions you don't want all of them to have to",
    "start": "2203400",
    "end": "2208640"
  },
  {
    "text": "kind of do some complicated distributed timer it gets a little bit more tricky",
    "start": "2208640",
    "end": "2213800"
  },
  {
    "text": "to build an application that has that level of choreography in it and so when you have these more elaborate mechanisms",
    "start": "2213800",
    "end": "2221119"
  },
  {
    "start": "2217000",
    "end": "2217000"
  },
  {
    "text": "that you need in order to order functions together or choreograph their activity that's where AWS step functions",
    "start": "2221119",
    "end": "2227800"
  },
  {
    "text": "comes in it's a mechanism to reliably orchestrate well lots of things in the",
    "start": "2227800",
    "end": "2233200"
  },
  {
    "text": "cloud but particularly multiple Lambda functions so for example maybe you've",
    "start": "2233200",
    "end": "2238680"
  },
  {
    "text": "got a function and you want to run it more than our stock three times now with a relatively simple Loop inside of AWS",
    "start": "2238680",
    "end": "2245640"
  },
  {
    "text": "step functions you can trigger that function multiple times until you've decided that it's accomplished whatever you were hoping it would",
    "start": "2245640",
    "end": "2251880"
  },
  {
    "text": "do or you might want to take action and in an event handler and then regardless",
    "start": "2251880",
    "end": "2258560"
  },
  {
    "text": "of what happened even if your function failed execute a call back that can do",
    "start": "2258560",
    "end": "2263880"
  },
  {
    "text": "something when you're when that's finished essentially building a TR catch Handler around an event processing",
    "start": "2263880",
    "end": "2272160"
  },
  {
    "text": "function there also might be situations where you need to wait so you can't have a Lambda functions sit there all day",
    "start": "2272280",
    "end": "2278480"
  },
  {
    "text": "long you're waiting for something to happen but you can run a step function and step functions can go for hours days",
    "start": "2278480",
    "end": "2284760"
  },
  {
    "text": "weeks months for as long as you need them to so you can repeatedly trigger a function in fact several functions in",
    "start": "2284760",
    "end": "2290720"
  },
  {
    "text": "order to choreograph a larger a larger workflow that can span more",
    "start": "2290720",
    "end": "2296960"
  },
  {
    "text": "time and now I'm going to ask Roy to join me um one last time here we're going to take a look at one of these",
    "start": "2298880",
    "end": "2304720"
  },
  {
    "text": "examples in particular the one where we to be able to take an image and do multiple kinds of transforms to it at",
    "start": "2304720",
    "end": "2310920"
  },
  {
    "text": "once awesome thanks Tim uh so as Tim said I'm going to go through a super",
    "start": "2310920",
    "end": "2316880"
  },
  {
    "text": "simple demo of taking uh step functions and in my example all I'm doing is I'm going to convert this image this is a",
    "start": "2316880",
    "end": "2323319"
  },
  {
    "text": "picture I took this past summer uh when I took a trip to Barcelona this is the",
    "start": "2323319",
    "end": "2328640"
  },
  {
    "text": "sagata Familia if you know anything about this church it is crazy old it's been being built for like 120 years and",
    "start": "2328640",
    "end": "2334800"
  },
  {
    "text": "there's still like 20 or 30 years left but it is amazing amazing but what I want is I have this in a JPEG format I",
    "start": "2334800",
    "end": "2340640"
  },
  {
    "text": "want it in you can know you can resize it you can do a bunch of stuff I just want it in a PNG and BMP let's just say",
    "start": "2340640",
    "end": "2347200"
  },
  {
    "text": "that's what I want to do for this example so I've actually already placed this into an S3 bucket uh I have my file",
    "start": "2347200",
    "end": "2355200"
  },
  {
    "text": "here it's the bucket's apply Nam serverless step function demo and then",
    "start": "2355200",
    "end": "2360839"
  },
  {
    "text": "if we go to my workflow this is one that's already executed but this is the workflow in itself the graph iCal",
    "start": "2360839",
    "end": "2367800"
  },
  {
    "text": "representation of what my workflow will do so I see I have a start I am setting",
    "start": "2367800",
    "end": "2373119"
  },
  {
    "text": "up for these three different conversions so I'm going to convert to PNG jpeg I already have JPEG but let's say it",
    "start": "2373119",
    "end": "2378599"
  },
  {
    "text": "didn't necessarily have it in JPEG and BMP and then the the important thing is",
    "start": "2378599",
    "end": "2384160"
  },
  {
    "text": "these be these actual conversion functions are actually just the same function but it's being ped different",
    "start": "2384160",
    "end": "2390160"
  },
  {
    "text": "values so inside these setup functions I'm injecting into it I need to convert it to PNG I need to convert it to jpeg I",
    "start": "2390160",
    "end": "2397880"
  },
  {
    "text": "need to convert it to BMP so my function in itself is the exact same the state before it actually defines what is",
    "start": "2397880",
    "end": "2404160"
  },
  {
    "text": "happening so let's take a look at and start a new execution so all I have to",
    "start": "2404160",
    "end": "2411400"
  },
  {
    "text": "do here is click new execution I have an input that I can pass into it I've",
    "start": "2411400",
    "end": "2416680"
  },
  {
    "text": "already practiced and obviously set this up so you don't have to worry about me remembering what everything is called uh",
    "start": "2416680",
    "end": "2424240"
  },
  {
    "text": "and I can just paste it in here in this scenario I have a source bucket",
    "start": "2424240",
    "end": "2429480"
  },
  {
    "text": "which is the bucket I showed you the image key which is the image key that I also showed you and the operation which",
    "start": "2429480",
    "end": "2435680"
  },
  {
    "text": "is a convert operation so let us start this execution and see what happens in",
    "start": "2435680",
    "end": "2441359"
  },
  {
    "text": "the scenario so here you can see it's already starting to light up let me Zoom this in a little bit",
    "start": "2441359",
    "end": "2447040"
  },
  {
    "text": "more and here as we start going through the execution you'll start seeing that these things go green indicating that",
    "start": "2447040",
    "end": "2453400"
  },
  {
    "text": "they have finished so already the JP conversion and the BMP conversion is finished so if I go to this S3 console here zoom",
    "start": "2453400",
    "end": "2460400"
  },
  {
    "text": "out and refresh the page you will start seeing that these things are appearing immediately happening in",
    "start": "2460400",
    "end": "2468520"
  },
  {
    "text": "parallel go back here this should show in a second that",
    "start": "2468839",
    "end": "2474200"
  },
  {
    "text": "the PNG finished perfect PNG has finished go back to the console page for",
    "start": "2474200",
    "end": "2479720"
  },
  {
    "text": "the S3 bucket and I can see that all three image conversions are here I could even open an image if I so",
    "start": "2479720",
    "end": "2486079"
  },
  {
    "text": "please and and we should see the PNG version of that image once it downloads so we can open this up and",
    "start": "2486079",
    "end": "2493200"
  },
  {
    "text": "there is my PNG image all it is is did my conversion put an S3 and all happening in parallel orchestrated with",
    "start": "2493200",
    "end": "2499079"
  },
  {
    "text": "step functions great",
    "start": "2499079",
    "end": "2504560"
  },
  {
    "text": "thanks and of course one of the things you saw happening there was these three functions executing at different rates",
    "start": "2507599",
    "end": "2513520"
  },
  {
    "text": "and while they differ by just a few seconds in the demo Rory just showed you you you can imagine very different",
    "start": "2513520",
    "end": "2518839"
  },
  {
    "text": "completion rates there more functions or fewer functions in each of those different parallel threads and of course",
    "start": "2518839",
    "end": "2524960"
  },
  {
    "text": "maybe steps that exceed 5 minutes and so now with state with step functions you can choreograph these increasingly",
    "start": "2524960",
    "end": "2532599"
  },
  {
    "text": "complex um dependencies chronologies and different kinds of workflows together um",
    "start": "2532599",
    "end": "2538560"
  },
  {
    "text": "and as some of you have asked I'll just go ahead and answer the maybe the implicit question swf still exists if",
    "start": "2538560",
    "end": "2543680"
  },
  {
    "text": "you're a simple workflow user of course we still uh support that product but we wanted to make sure that we had",
    "start": "2543680",
    "end": "2549040"
  },
  {
    "text": "something that was especially tailored and especially simple for seress applications and so we think step",
    "start": "2549040",
    "end": "2555160"
  },
  {
    "text": "functions is going to be the easiest way for people to do that and of course we Illustrated this with the console today",
    "start": "2555160",
    "end": "2561000"
  },
  {
    "text": "um all available of course via apis and sdks shall be rolled out by the end of the",
    "start": "2561000",
    "end": "2567440"
  },
  {
    "text": "day now we've been talking a lot about Lambda so far here but I want to uh I want to make sure that I'm also fair to",
    "start": "2567440",
    "end": "2573319"
  },
  {
    "text": "the other service that I own which is API Gateway so I tell you a little bit about some of the new features that we're launching over",
    "start": "2573319",
    "end": "2579160"
  },
  {
    "start": "2579000",
    "end": "2579000"
  },
  {
    "text": "there first of all just to catch everybody up um a couple of weeks ago we launched binary",
    "start": "2579160",
    "end": "2585140"
  },
  {
    "text": "[Applause] encoding like environment variables uh",
    "start": "2585140",
    "end": "2591359"
  },
  {
    "text": "this one has been a much requested feature we know that lots of companies are uh using different kinds of media",
    "start": "2591359",
    "end": "2598800"
  },
  {
    "text": "types audio video other binary files and we're really feeling that there was it was challenging to translate those",
    "start": "2598800",
    "end": "2606160"
  },
  {
    "text": "things into Json on in order to use API gateways so happy to Binary encoding support here lets you serve images audio",
    "start": "2606160",
    "end": "2613119"
  },
  {
    "text": "and other types of content and we've also try to make it as simple as possible to integrate with Lambda on the",
    "start": "2613119",
    "end": "2619200"
  },
  {
    "text": "back end so that especially if you're using that pass through mode we can automatically convert that into into a",
    "start": "2619200",
    "end": "2625520"
  },
  {
    "text": "um Json form that Lambda can process and then convert it back into binary on the",
    "start": "2625520",
    "end": "2630640"
  },
  {
    "text": "way out again so try to make that as streamlined as possible if you need to do that base 64 encode decode cycle",
    "start": "2630640",
    "end": "2639040"
  },
  {
    "start": "2637000",
    "end": "2637000"
  },
  {
    "text": "now you might have heard me talking earlier about our launch of support for documentation as part of",
    "start": "2639720",
    "end": "2645440"
  },
  {
    "text": "apis this is obviously a missing piece and we're really excited to get that into the API Gateway",
    "start": "2645440",
    "end": "2653000"
  },
  {
    "text": "product couple of things to note here uh first of all that we support Swagger Import and Export so you can Define your",
    "start": "2653040",
    "end": "2660160"
  },
  {
    "text": "documentation and then you can load it in and Export it again we've also done",
    "start": "2660160",
    "end": "2665400"
  },
  {
    "text": "an inheritance feature so if you've got common documentation around say error",
    "start": "2665400",
    "end": "2670960"
  },
  {
    "text": "messages or parameters uh We've made it really easy to write that and then use references to it and have it kind of",
    "start": "2670960",
    "end": "2677319"
  },
  {
    "text": "automatically inherit so you have less work to do as you're defining documentation and you can still export",
    "start": "2677319",
    "end": "2683000"
  },
  {
    "text": "it in completely standard Swagger if you like or you can keep it in that inheritance format and roundtrip it as a",
    "start": "2683000",
    "end": "2688839"
  },
  {
    "text": "special XY extension now one of the things that's kind of hard to show here a little bit",
    "start": "2688839",
    "end": "2694800"
  },
  {
    "text": "on screen but we thought was really important with Doc was actually to support two different flavors of workflows because what we",
    "start": "2694800",
    "end": "2701720"
  },
  {
    "text": "heard from customers is that sometimes the API developer is different from the",
    "start": "2701720",
    "end": "2707040"
  },
  {
    "text": "person who's developing and uploading the documentation and so we've made it possible for you to rev the docs",
    "start": "2707040",
    "end": "2713079"
  },
  {
    "text": "independent of the apis that enables you to either set them up in different pipelines have different",
    "start": "2713079",
    "end": "2719280"
  },
  {
    "text": "people doing them or just ensure that you're not touching any of the bits related to your API logic when you go",
    "start": "2719280",
    "end": "2726040"
  },
  {
    "text": "ahead and add or increment or correct a spelling error for example in a documentation",
    "start": "2726040",
    "end": "2732400"
  },
  {
    "start": "2732000",
    "end": "2732000"
  },
  {
    "text": "string now the other exciting thing about uh Gateway is Marketplace",
    "start": "2733960",
    "end": "2739720"
  },
  {
    "text": "integration so lots of people today are using gateway to manage and simplify the process of",
    "start": "2739720",
    "end": "2746440"
  },
  {
    "text": "constructing and hosting apis AWS Marketplace has just recently",
    "start": "2746440",
    "end": "2752559"
  },
  {
    "text": "announced support for API products and so of course was very natural for us to",
    "start": "2752559",
    "end": "2758000"
  },
  {
    "text": "put these two things together to make it super simple for API Gateway apis to be hosted on the",
    "start": "2758000",
    "end": "2764520"
  },
  {
    "text": "marketplace and this helps people who are looking for your apis easily discover what they want they can go",
    "start": "2764520",
    "end": "2770280"
  },
  {
    "text": "procure it and then once they're using it you need a way to track that usage and turn",
    "start": "2770280",
    "end": "2777240"
  },
  {
    "text": "that back into a building mechanism and so that's the other part of the integration that we're launching today",
    "start": "2777240",
    "end": "2783160"
  },
  {
    "text": "is to provide that zero touch billing support so we automatically track the",
    "start": "2783160",
    "end": "2788359"
  },
  {
    "text": "API usage thanks to API Keys we know who the consumer is and we can map that back",
    "start": "2788359",
    "end": "2793599"
  },
  {
    "text": "into their into their AWS account and send that bill to them automatically you don't have to write any code you don't",
    "start": "2793599",
    "end": "2799440"
  },
  {
    "text": "have to generate those bills no work at all and this gives you a really simple",
    "start": "2799440",
    "end": "2804680"
  },
  {
    "text": "way to monetize your microservices and we're pleased to announce that uh two customers have already done just that uh",
    "start": "2804680",
    "end": "2811400"
  },
  {
    "text": "F secure which has released their their URL reputation apis this week and dok",
    "start": "2811400",
    "end": "2816480"
  },
  {
    "text": "who leas their speech understanding apis so customers already hopping on this we're really excited about it giving",
    "start": "2816480",
    "end": "2822760"
  },
  {
    "text": "people that opportunity to monetize microservices and apis very",
    "start": "2822760",
    "end": "2829000"
  },
  {
    "start": "2828000",
    "end": "2828000"
  },
  {
    "text": "easily now as part of that you need a way to distribute API keys and so we've",
    "start": "2829280",
    "end": "2835960"
  },
  {
    "text": "also released today an open source reference implementation for a developer portal for API Gateway it helps",
    "start": "2835960",
    "end": "2843520"
  },
  {
    "text": "developers consume your apis it gives you a stock way of vending out API Keys",
    "start": "2843520",
    "end": "2849440"
  },
  {
    "text": "through through user interface and with Cognito integration and of course it's built",
    "start": "2849440",
    "end": "2854760"
  },
  {
    "text": "into that a API or AWS Marketplace integration so that it would make it",
    "start": "2854760",
    "end": "2859839"
  },
  {
    "text": "really simple for you to take this reference and then redirect people who are purchasing your API over to your",
    "start": "2859839",
    "end": "2866079"
  },
  {
    "text": "copy of the portal you're of course free to use your own you can take this in and extend it and modify it however you like",
    "start": "2866079",
    "end": "2872720"
  },
  {
    "text": "but it's a great way to get started and kind of completes that picture of setting up an AWS monetization",
    "start": "2872720",
    "end": "2880160"
  },
  {
    "text": "strategy now I want to hop back to Lambda here a little bit and talk about",
    "start": "2883839",
    "end": "2889319"
  },
  {
    "text": "another theme here which is new places that you can use Lambda functions and",
    "start": "2889319",
    "end": "2894720"
  },
  {
    "text": "we're constantly excited to look for other places that we can take this interesting technology and bring that",
    "start": "2894720",
    "end": "2902040"
  },
  {
    "text": "simplification that serverless methodology that kind of agility and rapid time to Market to new kinds of use",
    "start": "2902040",
    "end": "2909640"
  },
  {
    "text": "cases and new kinds of scenarios so the first one I want to",
    "start": "2909640",
    "end": "2915319"
  },
  {
    "start": "2913000",
    "end": "2913000"
  },
  {
    "text": "talk about are Bots constructed with Lambda so you",
    "start": "2915319",
    "end": "2920960"
  },
  {
    "text": "heard today about about Amazon Lex which is our new speech understanding platform",
    "start": "2920960",
    "end": "2926319"
  },
  {
    "text": "and if you've ever written an Alexa skill this works very similarly so you can describe the kinds",
    "start": "2926319",
    "end": "2933119"
  },
  {
    "text": "of of sample speech utter utterances that you want indicate which parts you need to be filled in turned into",
    "start": "2933119",
    "end": "2940200"
  },
  {
    "text": "parameters and then just like uh an Alexa skill Lex will be able to turn",
    "start": "2940200",
    "end": "2945480"
  },
  {
    "text": "that into a model for you and match that up to spoken or written",
    "start": "2945480",
    "end": "2950559"
  },
  {
    "text": "conversations and one particularly fun use case for that is creating",
    "start": "2950559",
    "end": "2956040"
  },
  {
    "text": "intelligent chat Bots lots of companies have gotten excited about the ability to engage",
    "start": "2956040",
    "end": "2962359"
  },
  {
    "text": "their customers and their users in a simple written form whether that's through text or web hosted chat or",
    "start": "2962359",
    "end": "2969200"
  },
  {
    "text": "something that uh an existing application that they use like messenger and so Lex will be launching",
    "start": "2969200",
    "end": "2975520"
  },
  {
    "text": "uh in preview but with support initially for Facebook and the AWS mobile hub and",
    "start": "2975520",
    "end": "2980960"
  },
  {
    "text": "with slack and twillo integration coming soon and we're really excited about that by giving Lambda functions as the",
    "start": "2980960",
    "end": "2988599"
  },
  {
    "text": "mechanism then to implement those chap Bots take the fill out model and then",
    "start": "2988599",
    "end": "2994240"
  },
  {
    "text": "run all of the business logic whether that's a you know something that you want to go do in terms of an Enterprise",
    "start": "2994240",
    "end": "2999880"
  },
  {
    "text": "procurement connecting to back things on the back end or a bot that you're building for maybe some other kind of",
    "start": "2999880",
    "end": "3005240"
  },
  {
    "text": "social engagement but whatever your logic is hosting it as a Lambda function so we're really excited about that",
    "start": "3005240",
    "end": "3011040"
  },
  {
    "text": "capability and what customers are going to build with it and one of the other things we",
    "start": "3011040",
    "end": "3017520"
  },
  {
    "start": "3014000",
    "end": "3014000"
  },
  {
    "text": "announced this week is integration between Lambda and AWS fire hose so in the next couple of weeks",
    "start": "3017520",
    "end": "3024520"
  },
  {
    "text": "we're going to be delivering a combination of these two things so that you can ingest huge amounts of streaming",
    "start": "3024520",
    "end": "3031160"
  },
  {
    "text": "data into firehouse and route to S3 red shift or elastic search and along the",
    "start": "3031160",
    "end": "3037640"
  },
  {
    "text": "way have it run through a Lambda function so that you can transform audit aggregate or do whatever you like with",
    "start": "3037640",
    "end": "3043440"
  },
  {
    "text": "those records and there's a a flexible buffering mechanism and of course the built-in scalability of fire hose which",
    "start": "3043440",
    "end": "3050440"
  },
  {
    "text": "is a great match to the flexibility and autos scalability of Lambda and we think",
    "start": "3050440",
    "end": "3055760"
  },
  {
    "text": "the two of these things together are going to provide a really amazing capability for data ingestion as well as",
    "start": "3055760",
    "end": "3062000"
  },
  {
    "text": "doing streaming types of analytics where people need to just pump a lot of data and convert that data on the Fly and",
    "start": "3062000",
    "end": "3069160"
  },
  {
    "text": "route to wherever their data lake is ultimately going to",
    "start": "3069160",
    "end": "3073480"
  },
  {
    "start": "3074000",
    "end": "3074000"
  },
  {
    "text": "be now in Andy's keynote you saw our latest generation of AWS",
    "start": "3077200",
    "end": "3082520"
  },
  {
    "text": "snowballs and lots of customers who are using snowballs to egress data from",
    "start": "3082520",
    "end": "3087799"
  },
  {
    "text": "their storage uh from their their existing on-prem data centers into AWS",
    "start": "3087799",
    "end": "3093240"
  },
  {
    "text": "cloud storage have asked us to make it easier for them to do things like",
    "start": "3093240",
    "end": "3098520"
  },
  {
    "text": "transcode media as they place it up there compress it in real time do certain kinds of of custom auditing that",
    "start": "3098520",
    "end": "3105319"
  },
  {
    "text": "you know might be hard to build in for every customer you know and we kind of scratched our head and we thought and",
    "start": "3105319",
    "end": "3110559"
  },
  {
    "text": "thought about that a little bit and said you know it kind of sounds a lot like a Lambda function it sounds a lot like",
    "start": "3110559",
    "end": "3115680"
  },
  {
    "text": "using Lambda and S3 together and so that's exactly what we did we've created local replicas of Lambda and S3 that",
    "start": "3115680",
    "end": "3123200"
  },
  {
    "text": "allow you to code in that same kind of programming model but execute those functions in production inside of the",
    "start": "3123200",
    "end": "3130400"
  },
  {
    "text": "snowball as they're ingesting the data so that you can accomplish these activities that are outside of our",
    "start": "3130400",
    "end": "3137319"
  },
  {
    "text": "classic data centers but still operating in a way and a mechanism that gives you the advantages of the serverless lamb",
    "start": "3137319",
    "end": "3144000"
  },
  {
    "text": "based approach and then we thought you know we should go one better here I mean that",
    "start": "3144000",
    "end": "3149760"
  },
  {
    "start": "3147000",
    "end": "3147000"
  },
  {
    "text": "was really useful maybe other people want to do this so the other thing that we announced this week that extends",
    "start": "3149760",
    "end": "3156640"
  },
  {
    "text": "Lambda is Green Grass and it basically takes Lambda functions onto arbitrary devices so that any hardware",
    "start": "3156640",
    "end": "3163799"
  },
  {
    "text": "manufacturer is able to do the same thing that we just did with the snowball if they have a need for very low no",
    "start": "3163799",
    "end": "3170240"
  },
  {
    "text": "latency near real time or partially or maybe even at some point completely disconnected execution",
    "start": "3170240",
    "end": "3176960"
  },
  {
    "text": "they can do that in the form of a local message broker and a Lambda function that runs right on the",
    "start": "3176960",
    "end": "3183559"
  },
  {
    "text": "device so cloud storage and compute coupled together running essentially on",
    "start": "3183559",
    "end": "3188760"
  },
  {
    "text": "an on an in an iot setting right on a device which could be a tractor driving out in a field a ship somewhere out in",
    "start": "3188760",
    "end": "3195240"
  },
  {
    "text": "the ocean and lets you do all kinds of interesting things become very responsive operate obviously without",
    "start": "3195240",
    "end": "3201319"
  },
  {
    "text": "connectivity and also filter down the data because we know a lot of that data never actually makes it into the cloud",
    "start": "3201319",
    "end": "3207520"
  },
  {
    "text": "and then when you reconnect the data that is Meaningful can be pushed back up again and of course you can take further",
    "start": "3207520",
    "end": "3213640"
  },
  {
    "text": "and more extensive and more elaborate analysis and analytics for the part that you do want to upload to the cloud so",
    "start": "3213640",
    "end": "3220200"
  },
  {
    "text": "look for more information to come and of course we're launching this in in preview with lots of interesting applications there we're really excited",
    "start": "3220200",
    "end": "3226680"
  },
  {
    "text": "to see what where customers are going to take this and finally I want to tell you",
    "start": "3226680",
    "end": "3232319"
  },
  {
    "text": "about lamb at the edge so we've already already placed Lambda in lots of different data centers",
    "start": "3232319",
    "end": "3239119"
  },
  {
    "text": "and that gives customers the opportunity to execute where their storage is close to their",
    "start": "3239119",
    "end": "3245920"
  },
  {
    "text": "clients but we also have all of these pops 68 points of presence in around the",
    "start": "3245920",
    "end": "3251240"
  },
  {
    "text": "globe that are where we today process our",
    "start": "3251240",
    "end": "3257040"
  },
  {
    "text": "cloudfront distribution as we send out storage and content and customers have",
    "start": "3257040",
    "end": "3262160"
  },
  {
    "text": "asked us to be able to take action as those events come in to cloudfront and",
    "start": "3262160",
    "end": "3268079"
  },
  {
    "text": "as we do content and origin fetches back into our data centers and so we're excited here to take the first step of",
    "start": "3268079",
    "end": "3274599"
  },
  {
    "text": "moving lamb out into those pops with our preview of lamb at the edge so initially",
    "start": "3274599",
    "end": "3280079"
  },
  {
    "text": "no JS 50 milliseconds of running time and just the headers but you should expect us to start dropping the limits",
    "start": "3280079",
    "end": "3286920"
  },
  {
    "text": "here and expanding the set of things that you can do with this over time we think this is going to be a really",
    "start": "3286920",
    "end": "3292240"
  },
  {
    "text": "interesting new use case and we're excited by the prospect of low latency applications that can run extremely",
    "start": "3292240",
    "end": "3298839"
  },
  {
    "text": "close to all of your client apps so encourage you to join the preview now and keep an eye on this for",
    "start": "3298839",
    "end": "3305000"
  },
  {
    "text": "future progress and finally I'd be remiss if I didn't mention some of the other",
    "start": "3305000",
    "end": "3311079"
  },
  {
    "text": "exciting things that are new not necessarily from AWS but more broadly serverless conferences serverless books",
    "start": "3311079",
    "end": "3319400"
  },
  {
    "text": "courses certifications and of course a large and growing partner ecosystem building all",
    "start": "3319400",
    "end": "3325680"
  },
  {
    "text": "kinds of Interest interesting things everything from deployment and development Technologies to event",
    "start": "3325680",
    "end": "3331960"
  },
  {
    "text": "integration to different kinds of code libraries and many of those can be found on the partner site um and some of them",
    "start": "3331960",
    "end": "3339440"
  },
  {
    "text": "uh also as blueprints in the AWS console and of course a large and",
    "start": "3339440",
    "end": "3345440"
  },
  {
    "text": "vibrant and growing open- Source ecosystem as well uh our own Sam spec",
    "start": "3345440",
    "end": "3350920"
  },
  {
    "text": "out there is in great company with chalice and Apex and of course companies like the surus framework who are making",
    "start": "3350920",
    "end": "3358000"
  },
  {
    "text": "it really easy to do local build package and testing for serverless functions",
    "start": "3358000",
    "end": "3363640"
  },
  {
    "text": "they're really excited to see everything that's going on out there and especially excited by some of the stuff that we see",
    "start": "3363640",
    "end": "3368760"
  },
  {
    "text": "coming up including various kinds of Big Data scientific and numerical Computing",
    "start": "3368760",
    "end": "3373880"
  },
  {
    "text": "packages um we think that there are lots of interesting media types and Frameworks that are about to be built",
    "start": "3373880",
    "end": "3381720"
  },
  {
    "text": "here so we have a whole day today today over here in the Mirage of ser less uh programs and presentations for you",
    "start": "3382119",
    "end": "3389079"
  },
  {
    "text": "wanted to call your attention to three that I've talked about here and that um we looked at a little bit in the what's",
    "start": "3389079",
    "end": "3394400"
  },
  {
    "text": "news session um at 2:30 there'll be a drill down on serverless cicd so if",
    "start": "3394400",
    "end": "3399559"
  },
  {
    "text": "you'd like to learn more about Sam and how he helps you do that that Pipeline and get your code deployed uh or wiin",
    "start": "3399559",
    "end": "3405599"
  },
  {
    "text": "stain we'll be talking about that at 4:00 we've got a drill in on Bots and so",
    "start": "3405599",
    "end": "3410720"
  },
  {
    "text": "if you're interested in in building chat Bots and using Lambda functions to create Bots uh we're going to going to",
    "start": "3410720",
    "end": "3416400"
  },
  {
    "text": "be talking about that and how it integrates with Lex for a whole hour and finally Tim Bray one of our principal",
    "start": "3416400",
    "end": "3421720"
  },
  {
    "text": "Engineers is going to be giving a presentation also at 230 on step functions so if you're interested in",
    "start": "3421720",
    "end": "3427280"
  },
  {
    "text": "choreography larger distributed applications and and management Tim is going to be talking all about the kind",
    "start": "3427280",
    "end": "3433440"
  },
  {
    "text": "of the Genesis the thinking the design and showing a bunch of demos all around step functions so encourage you to go",
    "start": "3433440",
    "end": "3440039"
  },
  {
    "text": "see more of that and also please join us in our serverless journey I love tweeting about all the things that are",
    "start": "3440039",
    "end": "3445799"
  },
  {
    "text": "going on on in the the serverless world I promis my tw Twitter stream is always",
    "start": "3445799",
    "end": "3450920"
  },
  {
    "text": "politics free and look forward to engaging with a lot of you out there in the uh in the social media world as well",
    "start": "3450920",
    "end": "3459079"
  },
  {
    "text": "I've included some useful links here also so if you want to follow up on some of the other topics uh you can do that",
    "start": "3459079",
    "end": "3465280"
  },
  {
    "text": "so please help us out with evaluations and thank you so much",
    "start": "3465280",
    "end": "3471359"
  }
]