[
  {
    "text": "[ambient sounds] If there’s an upside to this past\nyear of working from home,",
    "start": "500",
    "end": "7310"
  },
  {
    "text": "it’s that I’ve been able\nto spend it in my hometown. Amsterdam. I can’t remember\nwhen I was able to spend",
    "start": "8040",
    "end": "16083"
  },
  {
    "text": "such an unbroken stretch\nof time in one place. And it’s my place.",
    "start": "16150",
    "end": "20866"
  },
  {
    "text": "[ambient noise] Amsterdam is the story\nof people harnessing technology.",
    "start": "21430",
    "end": "26220"
  },
  {
    "text": "All of these canals\nthat were built centuries ago as a way to direct water away\nfrom settlements",
    "start": "26930",
    "end": "32170"
  },
  {
    "text": "became the centerpiece technology\nthat enabled the expansion of a city, the flow of commerce,",
    "start": "32760",
    "end": "38823"
  },
  {
    "text": "and ultimately a connection\nthat reached out to the entire world.",
    "start": "38890",
    "end": "42700"
  },
  {
    "text": "For me, this beautiful city is\na reminder of what becomes possible when you connect people\nand ideas.",
    "start": "43900",
    "end": "50373"
  },
  {
    "text": "It shows what can be done\nby artists and technologists on behalf of people\nin communities. [music playing]",
    "start": "50440",
    "end": "57554"
  },
  {
    "text": "All we need is some creativity,\nthe right tools, and some room to build.\nTechnology always moves forwards",
    "start": "57700",
    "end": "66103"
  },
  {
    "text": "but sometimes it's also good\nto look back, to look at where we came from,\nto understand our foundation,",
    "start": "66170",
    "end": "72840"
  },
  {
    "text": "and the building blocks\nthat have propelled us at lightning speeds\ninto the world we live in now.",
    "start": "73660",
    "end": "79078"
  },
  {
    "text": "Which is why I’m so excited\nto have found a place that will help me tell the stories\nof yesterday, today, and beyond.",
    "start": "79856",
    "end": "88669"
  },
  {
    "text": "[music playing] [music playing]",
    "start": "88855",
    "end": "102459"
  },
  {
    "text": "I’m speaking to you today from the CSM Suikerfabriek or Sugar City\nas it is called today.",
    "start": "103363",
    "end": "110000"
  },
  {
    "text": "A factory in Halfweg\njust outside of Amsterdam and today\na traditional heritage site",
    "start": "110940",
    "end": "117353"
  },
  {
    "text": "as it stands at the site of a castle\nused by the Rijnland Water Board. [music playing]",
    "start": "117420",
    "end": "126709"
  },
  {
    "text": "Sugar City or the Suikerfabriek\nin Dutch was built in 1863",
    "start": "127070",
    "end": "132330"
  },
  {
    "text": "and was one of the many\nsugar beet processing plants here in the Netherlands. The site has evolved\nover the years",
    "start": "132850",
    "end": "139430"
  },
  {
    "text": "and today it is used for music\nevents and retail shopping. And although\nit has changed a lot,",
    "start": "140100",
    "end": "145880"
  },
  {
    "text": "the stories this place tells about\ntechnology, resilience and operations",
    "start": "146440",
    "end": "151743"
  },
  {
    "text": "are still valuable\nin the digital world we live in today. These are the evaporation boilers\nthat were used for sugar processing.",
    "start": "151810",
    "end": "159819"
  },
  {
    "text": "Equipment like this was managed\nfrom a central control room. If it were running today, it would\nbe operating much differently.",
    "start": "160750",
    "end": "167840"
  },
  {
    "text": "Modern factories rely heavily\non IT devices, data gathered\ndirectly from equipment,",
    "start": "168720",
    "end": "173790"
  },
  {
    "text": "and real time computing to quickly\nalert when there is a problem. A device, that is AWS Snowcone,\ncould be one way for Sugar City,",
    "start": "174360",
    "end": "182853"
  },
  {
    "text": "if it were operating today, to collect data as it is coming\nfrom the equipment.",
    "start": "182920",
    "end": "187860"
  },
  {
    "text": "The Snowcone could process\nthe data, store it, and connect the boiler\nto the factory’s alerting and out emissions systems.",
    "start": "188700",
    "end": "195062"
  },
  {
    "text": "This way, the factory\nisn’t bound by latency or transfer speeds\nof the internet connection.",
    "start": "195130",
    "end": "199739"
  },
  {
    "text": "This factory has stood here\nfor over a hundred and fifty years.",
    "start": "201600",
    "end": "206600"
  },
  {
    "text": "It has a lot of stories to tell. We can learn a lot\nfrom places like this. We just need to know where to look.",
    "start": "207630",
    "end": "214590"
  },
  {
    "text": "[music playing]",
    "start": "215029",
    "end": "223850"
  },
  {
    "text": "It has been a challenging year\nfor all of us. Everyone I know has been affected,\neither professionally or personally.",
    "start": "225960",
    "end": "233600"
  },
  {
    "text": "And I’ve talked to quite\na few of our customers who’ve been affected\nin the most dramatic way,",
    "start": "234280",
    "end": "239510"
  },
  {
    "text": "with either family members\nor colleagues passing away. We have a long way to go\nbefore we can leave 2020 behind.",
    "start": "240030",
    "end": "247350"
  },
  {
    "text": "As builders,\nwe face unique challenges to keep doing what we were doing.\nBut we also have the opportunity",
    "start": "248890",
    "end": "256302"
  },
  {
    "text": "to make a disproportional\nimpact as digital has become the default way\nto access services.",
    "start": "256370",
    "end": "262510"
  },
  {
    "text": "With the success of these\nessential digital services, we’ll continue to expand on that",
    "start": "263660",
    "end": "269493"
  },
  {
    "text": "even if we can return\nto some form of normal. 2020 has tested all of our systems.\nPhysically and digital, and mentally.",
    "start": "269560",
    "end": "279943"
  },
  {
    "text": "And with the changing needs\nand behaviors of our customers, the needs of our applications\nare changing as well.",
    "start": "280960",
    "end": "287310"
  },
  {
    "text": "Just like this factory, many businesses have had to change\nand adapt in order to survive.",
    "start": "288680",
    "end": "294680"
  },
  {
    "text": "It’s never been more important\nto stop, assess your needs, and ensure you’re focusing\non the right things.",
    "start": "296250",
    "end": "302719"
  },
  {
    "text": "At Amazon and AWS, we’ve been\nvery fortunate in a lot of ways. Although many things are different,",
    "start": "304960",
    "end": "311000"
  },
  {
    "text": "not a lot has changed\nabout how we work. Our focus on small\nindependent teams that are self-sustainable\nand self-directed",
    "start": "311610",
    "end": "319050"
  },
  {
    "text": "set us up for success\nin these challenging times. And we’ve seen all around us\nthat many companies",
    "start": "319990",
    "end": "326893"
  },
  {
    "text": "that rely on complex supply chains\nto meet increased demand are having\nserious challenges.",
    "start": "326960",
    "end": "332750"
  },
  {
    "text": "And it is also very fortunate\nat AWS that we’re part of a business\nthat relies on robust procurement",
    "start": "333870",
    "end": "340103"
  },
  {
    "text": "and fulfillment processes.\nIt allowed us to keep up with demand",
    "start": "340170",
    "end": "344470"
  },
  {
    "text": "even when other Cloud providers\nwere struggling. We’ve been doing remote development\nfor a long time",
    "start": "345240",
    "end": "352049"
  },
  {
    "text": "so we already had the tools,\nprocesses, and mechanisms in place to distribute\na collaboration for teams",
    "start": "352620",
    "end": "358223"
  },
  {
    "text": "that are spread out\nall over the world. We have a long history\nto go where the talent",
    "start": "358290",
    "end": "363313"
  },
  {
    "text": "is instead of forcing everyone\nto come to Seattle.",
    "start": "363380",
    "end": "366510"
  },
  {
    "text": "All our engineers are working\nfrom home or, actually, anywhere they would like,\njust not the office.",
    "start": "368450",
    "end": "374440"
  },
  {
    "text": "And given the success we had with it, I don’t think that’s going\nto change any time soon.",
    "start": "375320",
    "end": "379620"
  },
  {
    "text": "Whilst Amazon and AWS have been\nvery fortunate to be able to be paid for this, many of our customers\nhave not been so lucky.",
    "start": "381500",
    "end": "387750"
  },
  {
    "text": "Think about the hospitality\nand the airline industries. In talking to some of\nour airline industry customers,",
    "start": "388810",
    "end": "396533"
  },
  {
    "text": "they expect that even if we can leave\nthe pandemic behind in 2021,",
    "start": "396600",
    "end": "400880"
  },
  {
    "text": "they do not expect\nto fully recover until 2025. And they expect that\nlong-haul business travel",
    "start": "401740",
    "end": "408983"
  },
  {
    "text": "may never return\nto previous levels. Their cargo divisions, however,\ndo expect to survive.",
    "start": "409050",
    "end": "414800"
  },
  {
    "text": "And I’ve seen how some of them\nare pivoting to find new businesses or are doubling down\non the things that do work.",
    "start": "415430",
    "end": "421500"
  },
  {
    "text": "And there’s an interesting analogy\nwith this sugar factory. With the diminishing need for sugar,",
    "start": "422940",
    "end": "427780"
  },
  {
    "text": "they pivoted to focusing\non storage and packaging. And when that moved offsite,",
    "start": "428300",
    "end": "433973"
  },
  {
    "text": "this factory was converted\ninto a retail and events space. But when this factory was focused\non only adapting to changes,",
    "start": "434040",
    "end": "443380"
  },
  {
    "text": "the other sugar factories\nin the Netherlands were branching out\ninto other industries. Today, there are two significant\nDutch sugar providers.",
    "start": "444080",
    "end": "451449"
  },
  {
    "text": "But in addition to sugar, one processes other crops\nlike potatoes and onions, and the other one is a producer\nof baking ingredients.",
    "start": "452850",
    "end": "460310"
  },
  {
    "text": "They diversified to better\nbe able to withstand unexpected hardships like this.",
    "start": "461030",
    "end": "466000"
  },
  {
    "text": "Now, we were very fortunate\nthat we had established a number of years ago an AWS\nDisaster Response Team",
    "start": "467900",
    "end": "474550"
  },
  {
    "text": "whose task it is\nto immediately reach out to customers who may have been\nnegatively affected by a natural disaster,\nlike earthquakes or typhoons.",
    "start": "475260",
    "end": "483330"
  },
  {
    "text": "And as such,\nwe hit the ground running when we saw how customers started\nto get affected by the pandemic.",
    "start": "484590",
    "end": "489170"
  },
  {
    "text": "Personally, I’ve been working\nwith quite a number of our customers who have been adversely affected to help them get fundamental control\nover their cost by moving to,",
    "start": "490550",
    "end": "499763"
  },
  {
    "text": "what I’ve called in past keynotes,\ncost aware architectures",
    "start": "499830",
    "end": "503729"
  },
  {
    "text": "so that the business has knobs\nto turn with respect to scale, reliability, performance to meet\ntheir needs now and in the future.",
    "start": "505080",
    "end": "512909"
  },
  {
    "text": "A number of these customers\nhave also seen down times as an opportunity\nto accelerate and innovate.",
    "start": "514600",
    "end": "521110"
  },
  {
    "text": "One of the most important\nways that technology and the business\ncan work together",
    "start": "522110",
    "end": "526709"
  },
  {
    "text": "is by using data to power\nnew experiences for your customers. I want to introduce you\nto an AWS customer",
    "start": "527300",
    "end": "534823"
  },
  {
    "text": "who really embraced this idea. Ava is a digital health company\nwith a mission",
    "start": "534890",
    "end": "540023"
  },
  {
    "text": "to advance women’s\nreproductive health by bringing together artificial\nintelligence and clinical research.",
    "start": "540090",
    "end": "546199"
  },
  {
    "text": "So, let’s hand over the camera\nto Lea von Bidder, Ava’s co-founder and CEO,",
    "start": "547220",
    "end": "552373"
  },
  {
    "text": "who’s recording in her home\nin Switzerland. She has a great story\nabout the amazing insights",
    "start": "552440",
    "end": "558403"
  },
  {
    "text": "that Ava is able to produce\nfor their customers by making new use\nof the data they collect.",
    "start": "558470",
    "end": "564540"
  },
  {
    "text": "Thanks, Werner.\nI’m really happy to be here today and share with you insights\nabout how we at Ava",
    "start": "565860",
    "end": "571200"
  },
  {
    "text": "harnessed the power of machine\nlearning, clinical research, Cloud technologies, and AWS services\nto improve women’s health.",
    "start": "571720",
    "end": "579839"
  },
  {
    "text": "Digital technology\nand Cloud services have transformed almost every aspect\nof our daily lives.",
    "start": "580370",
    "end": "586080"
  },
  {
    "text": "With just one tap,\nI can order a ride, get a room, share a photo.",
    "start": "586970",
    "end": "592090"
  },
  {
    "text": "And, of course, digital technologies\nhave also started to revolutionize\nmodern medicine with AI",
    "start": "592910",
    "end": "599203"
  },
  {
    "text": "being able to do\nreally interesting things, such as diagnose fractures\nor detect atrial fibrillation.",
    "start": "599270",
    "end": "605630"
  },
  {
    "text": "However, when it comes\nto women’s health, progress has been very slow and this\nis largely due to the lack of funding",
    "start": "606470",
    "end": "613743"
  },
  {
    "text": "and due to the lack\nof research in this space. We at Ava want to change that",
    "start": "613810",
    "end": "618899"
  },
  {
    "text": "because we believe that so many women\nall around the world face unique",
    "start": "620250",
    "end": "625323"
  },
  {
    "text": "and often unaddressed\nhealth challenges when it comes\nto their reproductive health. Be that contraception, conception,\npregnancy or menopause.",
    "start": "625390",
    "end": "634140"
  },
  {
    "text": "Our vision is to be\na long-term trusted companion for women across\ntheir reproductive journey",
    "start": "635760",
    "end": "640760"
  },
  {
    "text": "by giving them personalized,\ndata-driven and actionable insights about their health.\nAnd how do we do that?",
    "start": "641390",
    "end": "647600"
  },
  {
    "text": "We’re doing it by bringing together\nartificial intelligence and clinical research. For our users, it all starts\nwith the Ava bracelet.",
    "start": "648250",
    "end": "655740"
  },
  {
    "text": "A wearable device that collects\nindividual health data about her, including breathing rate, heart rate,\nheart rate variability ratio,",
    "start": "656920",
    "end": "665393"
  },
  {
    "text": "perfusion, and skin temperature. Every night, we collect more\nthan three million data",
    "start": "665460",
    "end": "670573"
  },
  {
    "text": "points from each of our customers and integrate that data\ninto their health histories",
    "start": "670640",
    "end": "675279"
  },
  {
    "text": "where our multiple algorithms\nimprove over time, learning each woman’s\nmenstrual cycle patterns",
    "start": "675930",
    "end": "682393"
  },
  {
    "text": "and making individualized\nhealth recommendations. In 2016, we launched\nour first product.",
    "start": "682460",
    "end": "688263"
  },
  {
    "text": "The Ava fertility tracker. And we have since then helped over\nforty thousand couples get pregnant",
    "start": "688330",
    "end": "694493"
  },
  {
    "text": "using the bracelet by empowering them\nwith actionable insights and by giving them a daily\nreal time fertility indication",
    "start": "694560",
    "end": "703073"
  },
  {
    "text": "so they can better time\nconceptive sex. But we are not simply\nin the fertility business. What we’ve actually built\nis a technology platform",
    "start": "703140",
    "end": "710653"
  },
  {
    "text": "for collecting long-term personal\nhealth data for women over five, ten, fifteen years and more.",
    "start": "710720",
    "end": "717529"
  },
  {
    "text": "And in fact, it is managing\nthis huge dataset that is really at the core\nof our business.",
    "start": "718150",
    "end": "723050"
  },
  {
    "text": "So, when we started our journey\nfive years ago, we put a lot of thinking into\nhow to best set this up",
    "start": "724130",
    "end": "729993"
  },
  {
    "text": "and which Cloud provider to choose\nbecause we knew, if we were successful,\nour data would grow exponentially",
    "start": "730060",
    "end": "737443"
  },
  {
    "text": "and we would have\nmassive amounts of data to be processed and stored\nin close to real time.",
    "start": "737510",
    "end": "742570"
  },
  {
    "text": "We knew we needed to be able\nto scale our computing power to manage the daily traffic peaks\nthat result from our users",
    "start": "744430",
    "end": "750853"
  },
  {
    "text": "syncing their device each morning.\nWe needed security to protect",
    "start": "750920",
    "end": "756183"
  },
  {
    "text": "the sensitive personal\nhealth data we collect. And we needed\na flexible architecture to be able to add new services\nand applications on a regular basis.",
    "start": "756250",
    "end": "764830"
  },
  {
    "text": "Ultimately, we selected AWS\nas our Cloud provider. Especially for the reliability\nand efficiency of Managed Services,",
    "start": "765440",
    "end": "772950"
  },
  {
    "text": "data solutions like\nAmazon Relational Database Service, MongoDB on AWS,\nand Amazon Simple Storage",
    "start": "773700",
    "end": "780293"
  },
  {
    "text": "Service that enable us to operate the three hundred terabytes\nof users’ health data",
    "start": "780360",
    "end": "785623"
  },
  {
    "text": "in a reliable\nand secure way, the ease with which\nwe can orchestrate services",
    "start": "785690",
    "end": "791213"
  },
  {
    "text": "and deploy web applications,\nand of course, a large community of developers\nand guidance around best practices",
    "start": "791280",
    "end": "799743"
  },
  {
    "text": "to bring it all together.\nThanks to our collaboration with AWS, we have the technology we need\nto accelerate our ability to innovate",
    "start": "799810",
    "end": "807503"
  },
  {
    "text": "and to provide new medical\ngrade services and applications. Following the success\nof our fertility application",
    "start": "807570",
    "end": "813453"
  },
  {
    "text": "and in line with our vision,\nwe will soon be launching a non-hormonal\ncontraceptive solution.",
    "start": "813520",
    "end": "818560"
  },
  {
    "text": "We’ve also been able to move\nvery quickly to address the current\nCOVID-19 pandemic by developing an early detection\nalgorithm that works for everybody",
    "start": "819940",
    "end": "827720"
  },
  {
    "text": "but is particularly\nwell suited for women. When COVID-19 hit, we found\nourselves in an unusual position.",
    "start": "828240",
    "end": "835720"
  },
  {
    "text": "The Ava bracelet was one of\nthe only medical grade devices on the market with multiple sensors",
    "start": "836650",
    "end": "841803"
  },
  {
    "text": "potentially related\nto COVID-19 symptoms such as temperature\nor breathing rate data.",
    "start": "841870",
    "end": "846690"
  },
  {
    "text": "We quickly realized that we could\nutilize our unique clinical knowledge as well as our personalized\nunderstanding of our users’ data",
    "start": "847920",
    "end": "854433"
  },
  {
    "text": "to detect anomalies\nin body temperature, heart rate,\nand breathing rate in a way that could aid in early detection\nof COVID-19 infection,",
    "start": "854500",
    "end": "862920"
  },
  {
    "text": "even before users realize they’re ill\nor they experience symptoms. This represented a huge\nstep forward in point of care.",
    "start": "863450",
    "end": "871190"
  },
  {
    "text": "Providing users\nwith actionable insights, it can lead them to seek testing or to self-isolate\nto reduce transmission risks.",
    "start": "872080",
    "end": "878443"
  },
  {
    "text": "In just a couple of weeks,\nwe developed and deployed a two-thousand-person pilot study,\nLiechtenstein, to collect data",
    "start": "878510",
    "end": "885923"
  },
  {
    "text": "and train an algorithm\nfor early COVID-19 detection. Now, we are ready\nto validate our algorithm",
    "start": "885990",
    "end": "892343"
  },
  {
    "text": "on a much larger sample\nof twenty thousand men and women.",
    "start": "892410",
    "end": "896230"
  },
  {
    "text": "Soon, we will be opening recruitment\nfor this medical trial as part of the COVID-RED\nConsortium",
    "start": "897520",
    "end": "902793"
  },
  {
    "text": "funded by the Innovative\nMedicine Initiative. This project brings together\nleading academic",
    "start": "902860",
    "end": "908753"
  },
  {
    "text": "and industry experts\nin public health, epidemiology, wearable technology,\nand machine learning.",
    "start": "908820",
    "end": "915110"
  },
  {
    "text": "So, how does it work? Participants will wear\nthe Ava bracelet for nine months,",
    "start": "916280",
    "end": "920990"
  },
  {
    "text": "during which time they will receive\nreal time daily indicators about their likelihood\nof having a COVID-19 infection",
    "start": "921780",
    "end": "928183"
  },
  {
    "text": "based on their personal health data\nand self-reported symptoms. Our goal is to see\nif we can leverage",
    "start": "928250",
    "end": "934463"
  },
  {
    "text": "the power of AI\nand personal health data to aid in early detection\nas well as provide advice on",
    "start": "934530",
    "end": "940193"
  },
  {
    "text": "when to seek testing\nor other treatment so that medical resources can be\nconserved and used more efficiently.",
    "start": "940260",
    "end": "946870"
  },
  {
    "text": "The speed at which we’ve been able\nto support the COVID-RED Consortium and begin clinical trials\nis a great example of what’s possible",
    "start": "948340",
    "end": "956173"
  },
  {
    "text": "when a small flexible company\nlike Ava is backed by AWS, with a scalable, flexible,",
    "start": "956240",
    "end": "963263"
  },
  {
    "text": "and well-architected\ninfrastructure. And it’s exciting because\nthe clinical work we’re doing",
    "start": "963330",
    "end": "969103"
  },
  {
    "text": "with the COVID-RED Consortium\nhas utility beyond COVID-19. It has the potential to aid\nin early detection",
    "start": "969170",
    "end": "975803"
  },
  {
    "text": "of other types\nof infection as well. Because when we started with Ava,\nour goal was to improve women’s lives",
    "start": "975870",
    "end": "983563"
  },
  {
    "text": "for the better\nby giving them more control and understanding of\ntheir reproductive journey.",
    "start": "983630",
    "end": "988530"
  },
  {
    "text": "I am really proud of the work\nwe’ve done at Ava to realize and expand\non that vision,",
    "start": "989570",
    "end": "994260"
  },
  {
    "text": "and even more so to see\nour data-driven and scientifically proven insights applied to the global good\nof early COVID-19 detection.",
    "start": "994950",
    "end": "1001800"
  },
  {
    "text": "Thanks to our fantastic team,\nour wonderful customers, the partners who have\nsupported us along the way,",
    "start": "1002430",
    "end": "1008833"
  },
  {
    "text": "and everyone at AWS\nwho has been part of our journey.",
    "start": "1008900",
    "end": "1011460"
  },
  {
    "text": "Thanks, Lea. That was great. The thing I really like\nabout Ava’s story",
    "start": "1014230",
    "end": "1019333"
  },
  {
    "text": "is how they consider\nthemselves a data company, much more than\na device manufacturer.",
    "start": "1019400",
    "end": "1024960"
  },
  {
    "text": "And this really shows\nhow business and technology can work together to create\nsomething greater",
    "start": "1026010",
    "end": "1031633"
  },
  {
    "text": "than that they were able\nto do on their own. Customers like Brainly did a lot\nto prepare for events like COVID",
    "start": "1031700",
    "end": "1040310"
  },
  {
    "text": "but still had\nquite a few surprises. I talked to them a few weeks ago\nfor a recent episode of Now Go Build.",
    "start": "1040940",
    "end": "1048020"
  },
  {
    "text": "They’re an online learning system that helps students\nwith their homework.",
    "start": "1049080",
    "end": "1053000"
  },
  {
    "text": "And even before the pandemic,\nthey were growing and built an infrastructure\nto handle their growth.",
    "start": "1054200",
    "end": "1059490"
  },
  {
    "text": "As schools moved out of the classroom\nafter the pandemic hit, Brainly saw a dramatic\nincrease in usage.",
    "start": "1060420",
    "end": "1067290"
  },
  {
    "text": "In the span of four months,\nthey hit a growth target that they’d originally thought\nwould take twelve months to achieve.",
    "start": "1067850",
    "end": "1074830"
  },
  {
    "text": "They grew from a hundred\nand fifty million users at the end of 2019 to two hundred\nand fifty million users in May 2020.",
    "start": "1076170",
    "end": "1085310"
  },
  {
    "text": "I remember their CTO saying,\n“I thought we knew our business.” The way students learnt\nand worked together",
    "start": "1086720",
    "end": "1094293"
  },
  {
    "text": "before the pandemic\nwas very different after they started\nand attended classes online.",
    "start": "1094360",
    "end": "1099710"
  },
  {
    "text": "Brainly had built\nsignificant automation for scaling up and down based on well-known\ntraffic patterns they had.",
    "start": "1100730",
    "end": "1106100"
  },
  {
    "text": "But not everything\nwas automated because their long-term scaling\nhad been extremely predictable",
    "start": "1107290",
    "end": "1113090"
  },
  {
    "text": "and their systems weren’t built\nto handle dramatic spikes in usage. And certain services\nlike caching and databases",
    "start": "1114250",
    "end": "1121362"
  },
  {
    "text": "were alerting only a few hours before\nthey degraded instead of weeks.",
    "start": "1121430",
    "end": "1125390"
  },
  {
    "text": "Cost efficiency unexpectedly\nscaled better than the infrastructure",
    "start": "1127040",
    "end": "1131660"
  },
  {
    "text": "and they were able\nto exploit economies of scale. Their estimation is that\nit cost forty percent",
    "start": "1132430",
    "end": "1138403"
  },
  {
    "text": "less to scale to this level\nthat initially predicted. Another interesting\nobservation they made",
    "start": "1138470",
    "end": "1145610"
  },
  {
    "text": "is that fewer distractions\nand interruptions in the office let them much better\ndevelop productively.",
    "start": "1146320",
    "end": "1152260"
  },
  {
    "text": "Now, today’s developers need\nthe right tools to be able to work\noutside the office.",
    "start": "1154450",
    "end": "1158940"
  },
  {
    "text": "And it’s not just working from home,\nit’s working from anywhere. Your tools should all be part\nof the heavy lifting of IT.",
    "start": "1159560",
    "end": "1166639"
  },
  {
    "text": "They should enable you\nto move fast and get a job done\nreliably and securely.",
    "start": "1167510",
    "end": "1172100"
  },
  {
    "text": "But as our infrastructure is changing\nand the way systems are being built is changing rapidly\nbecause of the Cloud,",
    "start": "1173800",
    "end": "1179790"
  },
  {
    "text": "we need to update\nour tools as well. And many of us do not want to be\ntied to our laptops for developing.",
    "start": "1180880",
    "end": "1186690"
  },
  {
    "text": "And especially engineers have become\nhooked on Amazon WorkSpaces. Actually, an interesting story",
    "start": "1187300",
    "end": "1193423"
  },
  {
    "text": "is that one of my colleagues\nhad a laptop crash but without easy access\nto centralized IT helpdesk,",
    "start": "1193490",
    "end": "1199543"
  },
  {
    "text": "he was forced to move to WorkSpace\nas a temporary solution. But he’s so happy now,\nhe will not go back.",
    "start": "1199610",
    "end": "1205530"
  },
  {
    "text": "Now, it’s typically thought of\nas a business productivity too but it is also ideal\nfor development from anywhere.",
    "start": "1206830",
    "end": "1214630"
  },
  {
    "text": "And you can make\nmultiple workspace configurations with everything set up ready\nto go like your IV of choice, environmental code,\nand things like that.",
    "start": "1215550",
    "end": "1223110"
  },
  {
    "text": "So, this is the equivalent\nof your Cloud Developer Desktop.",
    "start": "1224450",
    "end": "1228419"
  },
  {
    "text": "Makes it easy to work\nwherever you are and from any type of device.",
    "start": "1229720",
    "end": "1234159"
  },
  {
    "text": "But AWS Cloud9 is really the next\ngeneration of this experience. Browser based, limits spend of needs,\nand improves responsiveness.",
    "start": "1236280",
    "end": "1244960"
  },
  {
    "text": "If you work on multiple\ndifferent projects, you can have different developer\nenvironments for each of those.",
    "start": "1246100",
    "end": "1251380"
  },
  {
    "text": "And it is used\nby many teams at Amazon as an alternative to Cloud Desktops.\nCloud9 has the concept of builders,",
    "start": "1252380",
    "end": "1260323"
  },
  {
    "text": "a series of tasks\nthat built your system, runners, how and where you want\nto run your system, and debuggers.",
    "start": "1260390",
    "end": "1267363"
  },
  {
    "text": "What is extremely useful\nin Cloud9 is that you can share\nwhat you’re doing live with someone else which enables,\nfor example, remote pair programming.",
    "start": "1267430",
    "end": "1275590"
  },
  {
    "text": "But because it’s a Cloud IDE\nwith live sharing features, we saw a significant increase\nin usage of Cloud9.",
    "start": "1277190",
    "end": "1285060"
  },
  {
    "text": "One particular area\nwhere Cloud9 has become extremely popular\nis in education.",
    "start": "1285930",
    "end": "1291250"
  },
  {
    "text": "For example, Harvard’s online\nCS50 course uses Cloud9\nfor teaching computer science.",
    "start": "1292280",
    "end": "1298139"
  },
  {
    "text": "The AWS Console and other dashboards\nare great for exploring services and seeing what they can do.\nBut if you are as old as me,",
    "start": "1298740",
    "end": "1307720"
  },
  {
    "text": "I prefer to use the terminal\nfor common tasks. But I also have a bunch\nof not-so-great scripts",
    "start": "1308510",
    "end": "1315100"
  },
  {
    "text": "to then set up the environment that I need for\nany particular task at hand. So, I’m excited to announce today",
    "start": "1315650",
    "end": "1322549"
  },
  {
    "text": "another way where we’re meeting\ndevelopers where they are and giving them\nthe best of both worlds.",
    "start": "1323140",
    "end": "1328930"
  },
  {
    "text": "Today, we’re launching\nAWS CloudShell. It is a new service\nbuilt into the AWS Console",
    "start": "1329600",
    "end": "1336143"
  },
  {
    "text": "that gives you access to a\nLinux terminal inside your browser by just clicking on an icon.",
    "start": "1336210",
    "end": "1341419"
  },
  {
    "text": "And when you start\na new CloudShell session, it is automatically preconfigured\nto have the same API permissions",
    "start": "1341950",
    "end": "1347273"
  },
  {
    "text": "as you do in your console. This means you don’t have\nto manage multiple profiles",
    "start": "1347340",
    "end": "1352743"
  },
  {
    "text": "or API credentials for different dev,\ntest and production environments like you would normally have\nif you worked in a terminal.",
    "start": "1352810",
    "end": "1359339"
  },
  {
    "text": "With these credentials\nbeing automatically forwarded, it is simple to start\na new CloudShell session",
    "start": "1360660",
    "end": "1366403"
  },
  {
    "text": "and use the preinstalled\nAWS tools straight away. The AWS CLI,\nElastic Container Service CLI,",
    "start": "1366470",
    "end": "1374693"
  },
  {
    "text": "and the Service Application Model CLI\nare all standards inside CloudShell.",
    "start": "1374760",
    "end": "1380660"
  },
  {
    "text": "And CloudShell is not just an AWS\ncommand line interface though. It is a fully featured\nShell environment based on a Linux 2",
    "start": "1381820",
    "end": "1388350"
  },
  {
    "text": "and includes several other\ncommon CLI tools preinstalled,\nlike Python and notes, Bash,",
    "start": "1389200",
    "end": "1395033"
  },
  {
    "text": "PowerShell, FIM, Git, and so on.\nAnd just like any other regular Shell environment, you can install\nwhichever additional tool",
    "start": "1395100",
    "end": "1403653"
  },
  {
    "text": "you need to get a job done.\nOne of my favorites would be the CDK.",
    "start": "1403720",
    "end": "1407500"
  },
  {
    "text": "Unlike a regular\nenvironment though, changes to the operating system\ndon’t persist between sessions",
    "start": "1409330",
    "end": "1414813"
  },
  {
    "text": "so you don’t need to worry\nabout cleaning up anything if you accidentally\nbreak the environment.",
    "start": "1414880",
    "end": "1419290"
  },
  {
    "text": "However, you do have up to one\ngig of persistent storage in your home directory\nat no cost",
    "start": "1420430",
    "end": "1425710"
  },
  {
    "text": "so you can keep your data\neven if you forget to download it or copy it to S3\nwhen you finish working.",
    "start": "1426430",
    "end": "1431870"
  },
  {
    "text": "CloudShell continues that trend\nin making the right tools available whenever you need them\nfrom wherever you are.",
    "start": "1433200",
    "end": "1440560"
  },
  {
    "text": "And we hope you find it\na valuable addition to your process of building software\nand managing infrastructure.",
    "start": "1441290",
    "end": "1447250"
  },
  {
    "text": "[music playing]",
    "start": "1447654",
    "end": "1454881"
  },
  {
    "text": "Next to the major issues\nthis year of COVID-19, racial, social\nand economic inequalities,",
    "start": "1456630",
    "end": "1462930"
  },
  {
    "text": "battling climate change deserves\nthe highest priority of our attention. Building our infrastructure\nsystems and services",
    "start": "1463800",
    "end": "1472393"
  },
  {
    "text": "in ways that minimize the impact\non future generations is our foremost concern.",
    "start": "1472460",
    "end": "1477950"
  },
  {
    "text": "Sustainability is defined\nas understanding the impact of materials\nand energy we consume,",
    "start": "1479530",
    "end": "1485029"
  },
  {
    "text": "measuring the lifecycle\nof those materials, and applying best practices\nto reduce the impact of their use.",
    "start": "1485790",
    "end": "1491820"
  },
  {
    "text": "Running applications in a Cloud has been more sustainable\nfrom day one. A typical enterprise data center",
    "start": "1493530",
    "end": "1499923"
  },
  {
    "text": "will have fifteen to twenty\npercent utilization at best.",
    "start": "1499990",
    "end": "1504440"
  },
  {
    "text": "The multi-tenant nature\nof the Cloud, which allows for efficient resource\nsharing combined with techniques",
    "start": "1505280",
    "end": "1511482"
  },
  {
    "text": "such as the spoke market,\nenables much higher utilization.",
    "start": "1511550",
    "end": "1515220"
  },
  {
    "text": "According to 451 Research, running\nyour applications in the Cloud reduces your carbon footprint\nof your systems",
    "start": "1516840",
    "end": "1524633"
  },
  {
    "text": "by eighty-eight percent. Sixty-one percent\nof the carbon reduction",
    "start": "1524700",
    "end": "1530833"
  },
  {
    "text": "can be attributed\nto more efficient servers\nand higher server utilization. Eleven percent to more efficient\ndata center facilities.",
    "start": "1530900",
    "end": "1539170"
  },
  {
    "text": "And seventy percent\ncan be attributed to reduced electricity consumption\nand renewable energy usage.",
    "start": "1540170",
    "end": "1546290"
  },
  {
    "text": "This is why AWS is committed\nto running our business in the most environmentally\nfriendly way",
    "start": "1547640",
    "end": "1552653"
  },
  {
    "text": "possible and achieving hundred\npercent renewable energy usage for our global infrastructure.",
    "start": "1552720",
    "end": "1558820"
  },
  {
    "text": "In general, sustainability\nin the Cloud is focused on innovation that the data center\narchitects continue to do.",
    "start": "1559370",
    "end": "1565502"
  },
  {
    "text": "For example, to reduce\nenergy usage and water usage.",
    "start": "1565570",
    "end": "1569299"
  },
  {
    "text": "But I am frequently asked\nby our customers, “But what can we do?”\nI believe, therefore,",
    "start": "1570870",
    "end": "1576443"
  },
  {
    "text": "the sustainability\nof our digital systems, we need a shared\nresponsibility model as well.",
    "start": "1576510",
    "end": "1581910"
  },
  {
    "text": "At AWS, we will continue\nto innovate in building the most\nsustainable infrastructure.",
    "start": "1582840",
    "end": "1587460"
  },
  {
    "text": "But I think it’s time\nwe start thinking about what we can do\nas application builders to get better control\nover resource usage",
    "start": "1588360",
    "end": "1595553"
  },
  {
    "text": "and start making sure that we\ncan meet the sustainability goals our businesses have set.",
    "start": "1595620",
    "end": "1601660"
  },
  {
    "text": "And because AWS charges\nby consumption, many times reducing\nyour cost also has the impact",
    "start": "1603110",
    "end": "1609333"
  },
  {
    "text": "of reducing\nyour environmental impact. But I have really seen\nseveral cases with our customers",
    "start": "1609400",
    "end": "1615363"
  },
  {
    "text": "where they are willing to spend more\nto meet their sustainability goals.",
    "start": "1615430",
    "end": "1619330"
  },
  {
    "text": "The best solution architects\nare now available to help our customers\nwith how to analyze software",
    "start": "1620700",
    "end": "1626083"
  },
  {
    "text": "and hardware patterns\nfor sustainability and the sustainability of your\ndevelopment and deployment processes.",
    "start": "1626150",
    "end": "1632450"
  },
  {
    "text": "And not just on\nthe architecture side. It also provides guidance\nwith respect to a business decision\nwhich could be made,",
    "start": "1634040",
    "end": "1640303"
  },
  {
    "text": "such as considering things such as\ntrading the quality of results to use less resources.",
    "start": "1640370",
    "end": "1646960"
  },
  {
    "text": "Looking at factors\nsuch as availability, response time, or even accuracy\nwhich can all be adjusted",
    "start": "1647890",
    "end": "1655303"
  },
  {
    "text": "to use fewer resources\nin yet another example of how we as builders\nneed to build controls",
    "start": "1655370",
    "end": "1662913"
  },
  {
    "text": "that make the business to be able\nto make those sorts of trade-offs.",
    "start": "1662980",
    "end": "1666780"
  },
  {
    "text": "In addition to the climate pledge and broader sustainability\ngoals at Amazon, I’m excited that we’re\ntaking these steps",
    "start": "1668400",
    "end": "1674753"
  },
  {
    "text": "to help our customers learn\nhow to be more sustainable. And one of the interesting\nrecent developments in server design",
    "start": "1674820",
    "end": "1682400"
  },
  {
    "text": "that may help you meet\nyour sustainability goals is the introduction of the ARM\nprocessor for date center compute.",
    "start": "1682990",
    "end": "1690400"
  },
  {
    "text": "One of my colleagues, James Hamilton,\ndistinguished engineer at Amazon, once challenged me to count\nthe number of ARM processors",
    "start": "1691270",
    "end": "1698133"
  },
  {
    "text": "running in my office. I believe I came to seventeen.\nFrom printers to cameras.",
    "start": "1698200",
    "end": "1704573"
  },
  {
    "text": "From home automation devices\nto mobile phones. Everything was running ARM.",
    "start": "1704640",
    "end": "1710053"
  },
  {
    "text": "Only my laptop\nwas running a non-ARM CPU. At AWS, we started developing ARM\nbased processors years ago,",
    "start": "1710120",
    "end": "1717580"
  },
  {
    "text": "before running it for real compute\nworkloads was a mainstream idea.",
    "start": "1718130",
    "end": "1721910"
  },
  {
    "text": "Initially, we focused\non non-customer facing technologies\nsuch as our storage engines.",
    "start": "1723210",
    "end": "1727920"
  },
  {
    "text": "But quickly we started\nto realize that the tremendous performance\nand price advantages",
    "start": "1728630",
    "end": "1733773"
  },
  {
    "text": "could be had by our customers if we just would bring ARM\nto the compute engines as well.",
    "start": "1733840",
    "end": "1739539"
  },
  {
    "text": "We had already seen\nthat the popularity of ARM-based platforms\nsuch Raspberry Pi ensured that many Linux distributions\nand packages would support ARM.",
    "start": "1741170",
    "end": "1749600"
  },
  {
    "text": "Now the recently released AWS\nGraviton2-based instances make it easy to run ARM applications\non the cloud performantly.",
    "start": "1750930",
    "end": "1759460"
  },
  {
    "text": "These processes\nare ARMv.8.2 compliant, have 64 physical cores\nand use 7 nanometer manufacturing",
    "start": "1760750",
    "end": "1769443"
  },
  {
    "text": "with 30 billion transistors\nwith ARM variants of many instances\nincluding our memory,",
    "start": "1769510",
    "end": "1776002"
  },
  {
    "text": "compute and general\npurpose instances. We’ve found\nthat high level languages such as Node.js,\nPython, Java, .NET Core, .NET",
    "start": "1776070",
    "end": "1785093"
  },
  {
    "text": "5, typically run without problems. Amazon ECS, Amazon EKS,\nAmazon ECR, CodeBuild,",
    "start": "1785160",
    "end": "1792553"
  },
  {
    "text": "Docker all have support\nfor Graviton2 instances. I see migrate into Graviton and ARM\nas a long-term business investment.",
    "start": "1792620",
    "end": "1801850"
  },
  {
    "text": "ARM processes have lower costs and higher price per performance\nration and for example,",
    "start": "1802730",
    "end": "1808783"
  },
  {
    "text": "the Graviton2 has 20% lower cost\nbut 40% better price performance.",
    "start": "1808850",
    "end": "1814730"
  },
  {
    "text": "Think about that. When was the last time you could see\nthis significant of an improvement",
    "start": "1815595",
    "end": "1821560"
  },
  {
    "text": "just to changing\nto a different processor? And now whether lifting\nand shifting will work",
    "start": "1822220",
    "end": "1828270"
  },
  {
    "text": "is in general dependent\non third party applications and related dependencies.\nEven if your code will run on ARM,",
    "start": "1828850",
    "end": "1836453"
  },
  {
    "text": "it doesn’t mean\nthat the Python library that you’re using\nwhich may actually be a wrapper around some C code is.",
    "start": "1836520",
    "end": "1842200"
  },
  {
    "text": "To be successful, build pipeline\nand container clusters need to be created\nand managed separately",
    "start": "1843410",
    "end": "1849793"
  },
  {
    "text": "for ARM-based\ncontainers and binaries. ARM is definitely a platform",
    "start": "1849860",
    "end": "1856963"
  },
  {
    "text": "with a significant\ninnovative future ahead. And I advise every business\nto investigate",
    "start": "1857030",
    "end": "1863383"
  },
  {
    "text": "whether they are willing to make\nthe investment to migrate.",
    "start": "1863450",
    "end": "1867149"
  },
  {
    "text": "Being a builder means\na lifelong of learning and it is one of the things\nI truly love about being a developer.",
    "start": "1871330",
    "end": "1878080"
  },
  {
    "text": "There’s always a new language,\na new library, an open-source project\nor a new service",
    "start": "1878870",
    "end": "1884033"
  },
  {
    "text": "that will make your head spin\nand look at development differently. I believe we have the most\namazing jobs in the world.",
    "start": "1884100",
    "end": "1891713"
  },
  {
    "text": "We have the opportunity\nto create something new every day or to improve something small\nthat makes you smile – and proud.",
    "start": "1891780",
    "end": "1899580"
  },
  {
    "text": "And to truly delight\nyour customers in ways that really puts\na smile on your face.",
    "start": "1900500",
    "end": "1905030"
  },
  {
    "text": "That’s why a lot\nof the hundred days of code in the early days of the pandemic\nchallenging you to learn something new.\nI learned a new language – Rust.",
    "start": "1906010",
    "end": "1914270"
  },
  {
    "text": "I hadn’t worked with teams\ninside AWS that were using Rust\nbecause of its safety properties,",
    "start": "1915010",
    "end": "1919520"
  },
  {
    "text": "but it blew my mind\nhow to do system level programming in a truly modern language.",
    "start": "1920060",
    "end": "1925289"
  },
  {
    "text": "I will talk a bit more about\nRust later. Something that saw a tremendous\nrise in activity",
    "start": "1925920",
    "end": "1932010"
  },
  {
    "text": "was the Amazon Builder library. It helps developers benefit\nfrom 25 years of developing secure\nand scalable systems at Amazon.",
    "start": "1932550",
    "end": "1940870"
  },
  {
    "text": "Builders clearly took the opportunity\nto dive deep on hard topics and educate themselves when otherwise\nthey may not have had time for it.",
    "start": "1941930",
    "end": "1950809"
  },
  {
    "text": "AWS Academy provides\nhigh education institutions with a free ready to teach cloud\ncomputing curriculum.",
    "start": "1952640",
    "end": "1959370"
  },
  {
    "text": "And one of the programs\nI’m really proud of is AWS re/Start.",
    "start": "1960610",
    "end": "1965520"
  },
  {
    "text": "It focuses on cloud skills\nfor unemployed and under-employed individuals\nincluding military veterans,",
    "start": "1966380",
    "end": "1973183"
  },
  {
    "text": "their families\nand young people. We’re also working with other\norganizations like the ReDi School",
    "start": "1973250",
    "end": "1979193"
  },
  {
    "text": "who has helped refugees\nlearn coding skills that will either lead\nto employment, more education or even creating\nstart-ups of their own.",
    "start": "1979260",
    "end": "1986929"
  },
  {
    "text": "And by investing in programs\nlike this we are dedicated to educating\na diverse group of future builders",
    "start": "1988140",
    "end": "1994390"
  },
  {
    "text": "who have lived\nthrough this pandemic and will be building better\nbecause of it.",
    "start": "1994980",
    "end": "2000040"
  },
  {
    "text": "[music playing]",
    "start": "2002891",
    "end": "2011849"
  },
  {
    "text": "Almost every year at re:Invent\nI’ve talked about how over the years",
    "start": "2012645",
    "end": "2017341"
  },
  {
    "text": "we’ve implemented\nfull tolerance at Amazon and based\non those experiences,",
    "start": "2017670",
    "end": "2022673"
  },
  {
    "text": "what best practice advice\nwe can give you to meet the full tolerance\nrequirements of your application.",
    "start": "2022740",
    "end": "2027950"
  },
  {
    "text": "But today I would like\nto take a step up and talk about how full tolerance\nis only one of the means",
    "start": "2029470",
    "end": "2036883"
  },
  {
    "text": "to achieve the more encompassing\nconcept of dependability.",
    "start": "2036950",
    "end": "2041210"
  },
  {
    "text": "Dependability is when the delivery\nof a service can be trusted with the avoidance of unacceptable\nfrequent or severe failures.",
    "start": "2042780",
    "end": "2051750"
  },
  {
    "text": "Now what is unacceptable\nis a business decision, not a technology one.",
    "start": "2052840",
    "end": "2057932"
  },
  {
    "text": "If certain failures or rate\nof failures are acceptable, then the system\nis still dependable.",
    "start": "2058000",
    "end": "2064110"
  },
  {
    "text": "Dependability has many properties –\navailability, reliability, safety,",
    "start": "2065530",
    "end": "2070010"
  },
  {
    "text": "confidentiality, integrity,\nmaintainability and observability.",
    "start": "2070850",
    "end": "2075600"
  },
  {
    "text": "If you think about\nhow to achieve dependability, there are several means to it.\nIt’s not just full tolerance,",
    "start": "2076970",
    "end": "2083023"
  },
  {
    "text": "but equally important\nare fault prevention, fault removal and fault forecasting.\nWe often talk about other properties",
    "start": "2083090",
    "end": "2091962"
  },
  {
    "text": "related to dependability as well.\nConcepts like robustness. Can your system be dependable\nin the presence of external faults?",
    "start": "2092030",
    "end": "2100840"
  },
  {
    "text": "Is the system survivable? Can it handle active\nin progress faults?",
    "start": "2102080",
    "end": "2106910"
  },
  {
    "text": "And resilience.\nCan the system deal with changes? And resilience\nis a unique property",
    "start": "2107660",
    "end": "2113803"
  },
  {
    "text": "because it deals with three\ndifferent types of changes. There are foreseen changes like",
    "start": "2113870",
    "end": "2119873"
  },
  {
    "text": "when you launch a new version\nof your system or foreseeable changes like when you move\nto a new hardware platform.",
    "start": "2119940",
    "end": "2126940"
  },
  {
    "text": "And then there are\nunforeseen changes like when the number\nof service requests",
    "start": "2127960",
    "end": "2132903"
  },
  {
    "text": "explodes beyond\nwhat you had planned for. Now in years past,\nI thought quite a bit",
    "start": "2132970",
    "end": "2139003"
  },
  {
    "text": "how to build evolvable software\nand how that deals with changes. I remember I talked to you\nabout how we built S3.",
    "start": "2139070",
    "end": "2147030"
  },
  {
    "text": "We knew that the system\nunder the covers would need to change",
    "start": "2148230",
    "end": "2152730"
  },
  {
    "text": "either with new orders\nof magnitude of scale or with the introduction\nof new features.",
    "start": "2153390",
    "end": "2158500"
  },
  {
    "text": "Evolvability deals with all\nthe properties of dependability.",
    "start": "2159520",
    "end": "2163770"
  },
  {
    "text": "A less commonly known approach\nto building dependable systems is the concept of diversity",
    "start": "2166010",
    "end": "2170940"
  },
  {
    "text": "which is basically using\ntwo or more components that have the same functionality, but have been built\nin isolation from each other.",
    "start": "2171710",
    "end": "2178970"
  },
  {
    "text": "For example, here at Sugar City,\nthere are two generators. We’re going to take a look\nat them in a minute.",
    "start": "2180370",
    "end": "2186473"
  },
  {
    "text": "Diversity means that each generator\nwould have been sourced from different manufacturers,\nbut again this is a business decision",
    "start": "2186540",
    "end": "2194553"
  },
  {
    "text": "based on whether failures would be\nunacceptably frequent and/or severe.",
    "start": "2194620",
    "end": "2199750"
  },
  {
    "text": "One of the interesting things\nI’ve learned about this factory is that it only processed sugar\nabout three months out of the year.",
    "start": "2205460",
    "end": "2213130"
  },
  {
    "text": "This was to coincide\nwith the sugar beet harvest. They prepared all year\nfor the three months",
    "start": "2214190",
    "end": "2220173"
  },
  {
    "text": "that farmers would bring the sugar\nbeets here to be processed. It was so busy that workers\nhad to bring in mattresses and sleep",
    "start": "2220240",
    "end": "2227723"
  },
  {
    "text": "in the corners to have enough time\nto get everything done even though it was regularly\n40 degrees Celsius",
    "start": "2227790",
    "end": "2234343"
  },
  {
    "text": "which is well over\na hundred degrees Fahrenheit. Downtime during this three months\nwould be catastrophic.",
    "start": "2234410",
    "end": "2241730"
  },
  {
    "text": "Whoa, there’s quite an echo here. Although you can also\nstill hear a hum.",
    "start": "2244530",
    "end": "2251310"
  },
  {
    "text": "Even this derelict factory\nstill feels it’s alive.",
    "start": "2251890",
    "end": "2255910"
  },
  {
    "text": "So electricity was crucial\nfor the factory. In this turbine hall,",
    "start": "2257780",
    "end": "2263303"
  },
  {
    "text": "the two generators were used\nto produce electricity that powered the entire factory.\nUnfortunately in those days and today",
    "start": "2263370",
    "end": "2271710"
  },
  {
    "text": "and in the future,\nfaults are a given. As are changes in the system\nor impacting external factors.",
    "start": "2272240",
    "end": "2279589"
  },
  {
    "text": "In today’s world\nof digital technologies, much of the thinking\nthat built dependable systems and processes in those days\nis still applicable today.",
    "start": "2280670",
    "end": "2289730"
  },
  {
    "text": "[music playing]",
    "start": "2291350",
    "end": "2297350"
  },
  {
    "text": "Just like a sugar factory,\nevery online retailer knows that just a few months\nout of the year",
    "start": "2298540",
    "end": "2304280"
  },
  {
    "text": "can be important to have\na thriving business. A profitable holiday season\nand the launch of a new product",
    "start": "2304860",
    "end": "2311843"
  },
  {
    "text": "are the times that are most critical\nto the success of a company. That’s why I’m excited to have Nicole\nhere from Lego to talk to us today.",
    "start": "2311910",
    "end": "2319720"
  },
  {
    "text": "Nicole is an engineering manager working on Lego’s\ndirect shopper technology team.",
    "start": "2320420",
    "end": "2324799"
  },
  {
    "text": "She has a great story\nabout the resilience challenges they overcame after\nthe application crashed",
    "start": "2325560",
    "end": "2332213"
  },
  {
    "text": "during the launch\nof a really cool Lego set. Thanks Werner. I’m very excited\nto represent",
    "start": "2332280",
    "end": "2337643"
  },
  {
    "text": "the direct shopper technology team\nat the Lego Group here today and take you on\nour serverless journey so far.",
    "start": "2337710",
    "end": "2343263"
  },
  {
    "text": "At the Lego Group our mission\nis to inspire and develop\nthe builders of tomorrow by becoming a global force\nfor innovating",
    "start": "2343330",
    "end": "2349223"
  },
  {
    "text": "and establishing\nlearning through play. As an almost 90-year old company, we have consistently innovated\nand reimagined our approach",
    "start": "2349290",
    "end": "2356233"
  },
  {
    "text": "to achieving our mission\nand technology has been a key enabler\nfor getting our message out there.",
    "start": "2356300",
    "end": "2361119"
  },
  {
    "text": "We use a variety of services\nacross the company each fit for the purpose\nthat they were selected for.",
    "start": "2361670",
    "end": "2366429"
  },
  {
    "text": "I’m going to talk about the journey\nof the team behind Lego.com, specifically the pages\nwhere you’re browsing for products,",
    "start": "2367090",
    "end": "2372753"
  },
  {
    "text": "redeeming VIP rewards or completing\nyour order through checkout. We are the direct shopper technology\nteam with engineers in the UK,",
    "start": "2372820",
    "end": "2380253"
  },
  {
    "text": "United States and Denmark. Our main challenges typically\nto the world of e-commerce, the traffic patterns\nare extremely spikey",
    "start": "2380320",
    "end": "2387412"
  },
  {
    "text": "and with regular product\nlaunches and sales events driving customers to the site\nall at the same time.",
    "start": "2387480",
    "end": "2393680"
  },
  {
    "text": "This diagram shows\nour typical traffic patterns on one of our busier sales days and every year the number of visitors\nto the site keeps growing.",
    "start": "2394260",
    "end": "2401980"
  },
  {
    "text": "Now imagine trying to tackle\nall of that spikiness and year on year growth\nwith an on-premise monolith",
    "start": "2402610",
    "end": "2407813"
  },
  {
    "text": "tied to backend systems\nwith limited scale. Back in 2017 we had\na highly anticipated sales event",
    "start": "2407880",
    "end": "2413583"
  },
  {
    "text": "for the Millennium Falcon set,\nthe biggest Lego set at the time and an extremely popular\nproduct line.",
    "start": "2413650",
    "end": "2419250"
  },
  {
    "text": "On the launch day we experienced\na huge spike in traffic that resulted in our backend\nservices being overwhelmed",
    "start": "2419860",
    "end": "2425613"
  },
  {
    "text": "and all our customers could see\nwas the maintenance page. The service that failed the hardest\nwas a small piece of functionality",
    "start": "2425680",
    "end": "2431753"
  },
  {
    "text": "that calculated sales tags. It made a call back to our\non-premise tax calculation system",
    "start": "2431820",
    "end": "2436973"
  },
  {
    "text": "which very quickly\nreached its limits. At that point we knew that\nwe were on a trajectory for growth",
    "start": "2437040",
    "end": "2442093"
  },
  {
    "text": "that could no longer be sustained\nwith an on-premise system. There were three key drivers\nthat took us to the cloud.",
    "start": "2442160",
    "end": "2447953"
  },
  {
    "text": "Renting the commodities\nmeant that we instead of maintaining infrastructure that was not a differentiating factor\nfor the Lego Group,",
    "start": "2448020",
    "end": "2454022"
  },
  {
    "text": "meant we could\ninstead focus that energy on building\nawesome shopper experiences and you saw the profiles\nthat I showed before.",
    "start": "2454190",
    "end": "2460493"
  },
  {
    "text": "Having that flexibility to scale\nto support a very spiky demand profile and having the exact capacity we need\nwhen we needed it was critical.",
    "start": "2460560",
    "end": "2468230"
  },
  {
    "text": "And finally having\na composable architecture down to the most granular levels\nenabled us to have speed to market",
    "start": "2468800",
    "end": "2475053"
  },
  {
    "text": "and also flexibility to keep\ninnovating and pushing boundaries. Here is a high-level view\nof where we are today.",
    "start": "2475120",
    "end": "2481332"
  },
  {
    "text": "We made the conscious decision\nto extract and focus\non our business logic and decompose that across several\nlayers of serverless services.",
    "start": "2481400",
    "end": "2488160"
  },
  {
    "text": "We batched them by carefully\nselected third party vendors who provide specialized services\nlike payments providers",
    "start": "2488710",
    "end": "2494483"
  },
  {
    "text": "and content management systems. Each of our layers is designed\nto scale automatically and independently to support\nan ever-changing traffic profile",
    "start": "2494550",
    "end": "2502713"
  },
  {
    "text": "and this design also allows us\nto handle multiple squads operating across all parts\nof the site concurrently",
    "start": "2502780",
    "end": "2509413"
  },
  {
    "text": "and you’ll see why\nthat’s important in a moment. Our journey to the cloud started with migrating a single\nuser facing service,",
    "start": "2509480",
    "end": "2515613"
  },
  {
    "text": "the one to calculate sales tax and three backend\nprocessing services back in 2018",
    "start": "2515680",
    "end": "2520703"
  },
  {
    "text": "just to show that serverless\ncould work for us. Ten months later we then\nmatched our existing capabilities",
    "start": "2520770",
    "end": "2526233"
  },
  {
    "text": "with a completely\nserverless platform that immediately started handling\nthe same level of traffic and transactions\nas our existing platform.",
    "start": "2526300",
    "end": "2533230"
  },
  {
    "text": "We then immediately\nstarted exceeding those rates of transactions\nand traffic and setting new records\nevery few months.",
    "start": "2533850",
    "end": "2539800"
  },
  {
    "text": "We started off this year\nwith an ambitious roadmap, a growing team and a platform\nthat was only a couple of months old",
    "start": "2540390",
    "end": "2546112"
  },
  {
    "text": "and then the question came, could we deliver on\nthat ambitious roadmap with twice the number of engineers\nall onboarded remotely",
    "start": "2546180",
    "end": "2552913"
  },
  {
    "text": "and keep the platform stable all while handling high season\nlevels of traffic? The answer was yes.",
    "start": "2552980",
    "end": "2558813"
  },
  {
    "text": "And not only have we doubled\nthe number of services in production, we’ve managed to do so while handling\nincreasingly busy sales periods.",
    "start": "2558880",
    "end": "2565540"
  },
  {
    "text": "To put some numbers to the growth\nwe experienced in the past year and a half, we now have three times\nthe number of engineers in the team",
    "start": "2566180",
    "end": "2572343"
  },
  {
    "text": "and we’ve since launched\nanother 36 serverless services, pushing the number of lambda\nfunctions in production over 260.",
    "start": "2572410",
    "end": "2579683"
  },
  {
    "text": "The growing team meant that\nwe had to distribute many tasks previously held centrally\nby an infrastructure team,",
    "start": "2579750",
    "end": "2584862"
  },
  {
    "text": "so automation has been key\nto supporting the ever-growing number of squads\nand application engineers to get their services\nand features into production,",
    "start": "2584930",
    "end": "2592362"
  },
  {
    "text": "not only at their own pace,\nbut safely. We’ve moved to a self-service model\nwhere possible, for example, creating a script\nthat creates standard integration",
    "start": "2592430",
    "end": "2600603"
  },
  {
    "text": "and deployment pipelines\nfor any new service. The ultimate goal is to develop\nour application engineers",
    "start": "2600670",
    "end": "2605843"
  },
  {
    "text": "into DevOps engineers who own and operate\ntheir services and production. One of our first steps\ntowards that goal",
    "start": "2605910",
    "end": "2611662"
  },
  {
    "text": "was to introduce a standard\nwhere all serverless services were to implement canary deployments\nusing AWS Code Deploy",
    "start": "2611730",
    "end": "2617973"
  },
  {
    "text": "and this gives the automatic\nrollback when necessary. And that leads me on\nto serverless operations.",
    "start": "2618040",
    "end": "2623372"
  },
  {
    "text": "We have focused on observability\nand our fan-out operations model where our on-call team monitors\nsome key high-level metrics centrally",
    "start": "2623440",
    "end": "2631132"
  },
  {
    "text": "and then each service\nhas been categorized based on how critical it is\nto our key user journeys.",
    "start": "2631200",
    "end": "2636410"
  },
  {
    "text": "We then have a default\nset of alerts that are to be implemented\non each service and tuned to the profile of that\nservice by the squad that owns it.",
    "start": "2636990",
    "end": "2644323"
  },
  {
    "text": "This is giving\nour engineering team a starting point of how to monitor\ntheir services in production and not only detect,",
    "start": "2644390",
    "end": "2650203"
  },
  {
    "text": "but react to issues that are\nhappening in this space quickly. The growing team means we can’t\nhave tacit standards anymore.",
    "start": "2650270",
    "end": "2656013"
  },
  {
    "text": "The team is made up of engineers\nat all stages of their careers and with differing levels\nof experience with the technologies\nwe’re using.",
    "start": "2656080",
    "end": "2662073"
  },
  {
    "text": "I’ve mentioned already\na couple of standards that we’ve set and they define\nwhat a good service means to us.",
    "start": "2662140",
    "end": "2667353"
  },
  {
    "text": "They define the hallmarks\nof a good service that not only uses the latest\ncoding practices and patterns\nthat we’ve developed over time,",
    "start": "2667420",
    "end": "2674103"
  },
  {
    "text": "but also those guidelines\nfor safer deployment and monitoring of services, so that\nthey’re easier to own and operate.",
    "start": "2674170",
    "end": "2680353"
  },
  {
    "text": "We have started comparing\nour standards with the AWS well architected framework and\nspecifically the AWS Serverless Lens",
    "start": "2680420",
    "end": "2686453"
  },
  {
    "text": "and this has shown\nthat they mainly are in the operational\nexcellency pillar with a little bit in cost\noptimization and a bit in security.",
    "start": "2686520",
    "end": "2693373"
  },
  {
    "text": "And so looking to what\nwe’re focusing on next, we want to define the standards and the remaining reliability\nand performance pillars",
    "start": "2693440",
    "end": "2699593"
  },
  {
    "text": "and then we can start looking at\nmaking the standard more visible. We want to show our engineers\nthe services that they own,",
    "start": "2699660",
    "end": "2705273"
  },
  {
    "text": "what state they’re in,\nall in one place. And then we can start adding on\nthings like maybe a leaderboard.",
    "start": "2705340",
    "end": "2710313"
  },
  {
    "text": "This should add in that\ncompetitive element, so that owning a service becomes\na point of pride within the team.",
    "start": "2710380",
    "end": "2715370"
  },
  {
    "text": "And then we can start playing with the next level\nof serverless operations. We have chaos engineering\non our roadmap",
    "start": "2715960",
    "end": "2721513"
  },
  {
    "text": "and this should enable the team\nto really break apart their services, test out the failure cases\nfor an entire third party",
    "start": "2721580",
    "end": "2727573"
  },
  {
    "text": "and that means that we can craft\nour shopper experiences to still be awesome even when part of\nthe platform disappears for a bit.",
    "start": "2727640",
    "end": "2734613"
  },
  {
    "text": "It’s hard to imagine\nthat we only started our journey to the cloud back in 2017, but time flies when you’re having fun\nand we’ve learnt a lot along the way.",
    "start": "2734680",
    "end": "2742162"
  },
  {
    "text": "The name Lego is an abbreviation\nof two Danish words – leg and godt, meaning ‘play well’",
    "start": "2742230",
    "end": "2747382"
  },
  {
    "text": "and when play is at the core\nof everything you do, the learnings\nand opportunities are endless.",
    "start": "2747450",
    "end": "2752250"
  },
  {
    "text": "Thank you.",
    "start": "2753330",
    "end": "2753935"
  },
  {
    "text": "Thanks Nicole. What is great\nabout the Lego story is that in addition to providing\na more stable platform,",
    "start": "2762030",
    "end": "2769520"
  },
  {
    "text": "migrating from a monolithic design\nto serverless also freed up engineer time\nto work on new features.",
    "start": "2770080",
    "end": "2777170"
  },
  {
    "text": "Like Lego, Zoom is\nanother great example of how a company used\nsmart application design",
    "start": "2779150",
    "end": "2785573"
  },
  {
    "text": "to scale quickly as they were flooded\nwith traffic during the pandemic. Just like Brainly they had\nwell-understood traffic patterns",
    "start": "2785640",
    "end": "2794223"
  },
  {
    "text": "and even relied\non manual scaling on AWS because their traffic\nwas so predictable.",
    "start": "2794290",
    "end": "2799260"
  },
  {
    "text": "But after the pandemic hit, they quickly experienced\na 30x growth.",
    "start": "2800800",
    "end": "2806060"
  },
  {
    "text": "One of the really smart decisions\nthey made before the pandemic was to split their application\ninto different services.",
    "start": "2806700",
    "end": "2813930"
  },
  {
    "text": "They broke the part\nof the applications that handled the management\nof meetings like authentication and scheduling\nand starting a meeting from the part",
    "start": "2814900",
    "end": "2824353"
  },
  {
    "text": "of the application\nthat streams video. Meeting management\nis a pretty light task",
    "start": "2824420",
    "end": "2829902"
  },
  {
    "text": "and isn’t dependent on latency. On the other hand,\nstreaming video requires a significant amount\nof bandwidth and compute power",
    "start": "2829970",
    "end": "2837800"
  },
  {
    "text": "and it needs\nto be close to the users. Before the pandemic,\nthe management component",
    "start": "2838600",
    "end": "2844013"
  },
  {
    "text": "had sometimes more traffic\nthan the streaming part had.",
    "start": "2844080",
    "end": "2848960"
  },
  {
    "text": "After the pandemic hit,\nthey relied on scale of AWS and our ability to keep up with\ncapacity needs to add media service",
    "start": "2850370",
    "end": "2859333"
  },
  {
    "text": "to handle the video and streaming\nfor people around the world. Over the last several months\nthere were times when their engineers",
    "start": "2859400",
    "end": "2867973"
  },
  {
    "text": "were adding 5,000-6,000\nservers a night on AWS",
    "start": "2868040",
    "end": "2872650"
  },
  {
    "text": "and just like Brainly, Zoom\nalso saw customer behavior change because of the pandemic.",
    "start": "2873290",
    "end": "2880093"
  },
  {
    "text": "When they started out, Zoom primarily\nprovided services to business users.",
    "start": "2880160",
    "end": "2884720"
  },
  {
    "text": "Today they see significant usage by\nindividuals in education institutions.",
    "start": "2885480",
    "end": "2891109"
  },
  {
    "text": "And this affected the design\nof their application and how they approached scaling.",
    "start": "2892110",
    "end": "2896640"
  },
  {
    "text": "Take education, for example. Before the pandemic,\nonly a few teachers at a school",
    "start": "2897930",
    "end": "2903192"
  },
  {
    "text": "might be using Zoom at the same time. Today, in a district\nthat is fully remote,",
    "start": "2903260",
    "end": "2909320"
  },
  {
    "text": "every teacher is likely to be\nrunning a meeting in parallel with other teachers.",
    "start": "2910030",
    "end": "2914089"
  },
  {
    "text": "And these type of changes meant that\nZoom was regularly hitting new bottlenecks and challenges\nthat they hadn’t seen before.",
    "start": "2915470",
    "end": "2922480"
  },
  {
    "text": "But because of their architecture,\nthey were able to quickly address them and even add many new features\nwhile handling extreme scaling.",
    "start": "2923960",
    "end": "2933410"
  },
  {
    "text": "By following best practices\nand decomposing their system into separate components\nthat each had unique scaling,",
    "start": "2935000",
    "end": "2941912"
  },
  {
    "text": "performance\nand security requirements, Zoom designed a system that can adapt\nto these unexpected changes.",
    "start": "2941980",
    "end": "2948280"
  },
  {
    "text": "And they’ve been able to succeed\nand provide a service that is essential to their customers.",
    "start": "2949140",
    "end": "2955710"
  },
  {
    "text": "If you follow cloud best practices\naround microservices, load balancing,\nmultiple availability zones,",
    "start": "2956380",
    "end": "2963790"
  },
  {
    "text": "you’re likely in great shape from an\napplication architecture perspective.",
    "start": "2964440",
    "end": "2968500"
  },
  {
    "text": "But what about the application code\nthat actually runs within the system.",
    "start": "2969640",
    "end": "2974140"
  },
  {
    "text": "When it comes to dependability,\na step that is often missed is the logic of the application\ncode itself.",
    "start": "2975600",
    "end": "2981950"
  },
  {
    "text": "Now almost all developers today\nwrite unit tests and provide code reviews to look\nfor errors as they’re developing.",
    "start": "2983070",
    "end": "2990190"
  },
  {
    "text": "But at AWS we take this a step\nfurther and use tools based on mathematical logic to prove\nthat our code does only",
    "start": "2991930",
    "end": "3001353"
  },
  {
    "text": "what we want it to do\nand nothing more. This is hard.\nIt’s time consuming",
    "start": "3001420",
    "end": "3008233"
  },
  {
    "text": "and something that most businesses\ndon’t have the ability to invest in. For example, one of our teams\nhas recently published a paper",
    "start": "3008300",
    "end": "3016213"
  },
  {
    "text": "that outlines how we prove\nthe correctness of the KMS protocol.",
    "start": "3016280",
    "end": "3019630"
  },
  {
    "text": "When we say that we have the most\nsecure, global infrastructure,",
    "start": "3021620",
    "end": "3025950"
  },
  {
    "text": "this is rooted\nin the continuous work we do to demonstrate\nthis claim with mathematical rigor.",
    "start": "3026710",
    "end": "3032200"
  },
  {
    "text": "We do this to answer\nthe most important question – are we really\nprotecting our customers?",
    "start": "3033860",
    "end": "3040040"
  },
  {
    "text": "I want to talk to you\nabout this more, but before I do, I want to tell you\nhow I think about reasoning.",
    "start": "3041840",
    "end": "3047869"
  },
  {
    "text": "Reasoning is the actual thinking\nabout something in a logical, sensible way. As engineers we reason\nour problems all the time.",
    "start": "3049060",
    "end": "3057140"
  },
  {
    "text": "We design systems to solve complex\nproblems with many variables. Again, look at this factory.",
    "start": "3058470",
    "end": "3064580"
  },
  {
    "text": "To produce sugar\nthere’s a multi-stage process. Farmers bring beets to the factory\nwhere they then are washed",
    "start": "3065200",
    "end": "3072453"
  },
  {
    "text": "with high-pressure cannons.\nThen they’re sliced into small strips before being combined with hot water\nduring a process called diffusion.",
    "start": "3072520",
    "end": "3079600"
  },
  {
    "text": "The diffusers create a sort of juice\nthat’s put in an evaporator and spun in a centrifuge\nto separate the sugar from the water.",
    "start": "3080790",
    "end": "3089030"
  },
  {
    "text": "After all this happens the sugar\nis packaged and shipped. Now this process\nis not all that complicated.",
    "start": "3090080",
    "end": "3096250"
  },
  {
    "text": "It has a distinct start and end and the steps in between have to be\nfollowed exactly in that order.",
    "start": "3096860",
    "end": "3102920"
  },
  {
    "text": "If you put it in a flowchart\nit would be pretty simple. And when Jean Baptiste invested\nthis process in the early 1800s",
    "start": "3104710",
    "end": "3113173"
  },
  {
    "text": "he had to reason out each stage\nbased on the input it had and the output it created and what\nwas required to get to the end stage.",
    "start": "3113240",
    "end": "3122830"
  },
  {
    "text": "This is the same process you’re using\nwhen you’re developing software. You create functions,\neach with an input and an output",
    "start": "3124460",
    "end": "3130743"
  },
  {
    "text": "and they pass information\nto each other. And when your program is small\nit’s pretty simple to see how data",
    "start": "3130810",
    "end": "3137603"
  },
  {
    "text": "is going to move\nfrom one function to another. You could easily create a flowchart\nto describe all the possible paths",
    "start": "3137670",
    "end": "3144753"
  },
  {
    "text": "your application logic will take. But in reality, most applications\naren’t that simple,",
    "start": "3144820",
    "end": "3151930"
  },
  {
    "text": "or if they are,\nthey don’t stay that way for long. In most applications there are hundreds\nto thousands of unique functions",
    "start": "3153340",
    "end": "3161823"
  },
  {
    "text": "with each taking the different\nset of inputs and creating an output\nthat is passed onto another function",
    "start": "3161890",
    "end": "3167559"
  },
  {
    "text": "and instead of always being\nfollowed in a specific order, functions can call other functions\ndepending on what they’re asked to do",
    "start": "3169120",
    "end": "3177853"
  },
  {
    "text": "or the specific of the data\nthat was passed to them. Now imagine the complexity\nof the flowchart",
    "start": "3177920",
    "end": "3184863"
  },
  {
    "text": "that you would need to build\nto represent all the paths\nthat your application could take.",
    "start": "3184930",
    "end": "3189370"
  },
  {
    "text": "There’s no way that a human\ncan possibly know all of this and that’s where the field\nof automatic reasoning comes in.",
    "start": "3190520",
    "end": "3197720"
  },
  {
    "text": "Automatic reasoning can also be\ncalled computer-aided development.",
    "start": "3199710",
    "end": "3203950"
  },
  {
    "text": "Automatic reasoning\ncomes in many forms and it is simply the process\nof using computers to prove anything",
    "start": "3204760",
    "end": "3211650"
  },
  {
    "text": "that can be described\nwith complex logic. In fact, this is one of the first\nmajor use cases",
    "start": "3212290",
    "end": "3217753"
  },
  {
    "text": "for early scientific computers. Some of the first programs\never written were attempting",
    "start": "3217820",
    "end": "3223093"
  },
  {
    "text": "to find proofs\nin mathematical logic. One form of automatic reasoning\nis formal verification.",
    "start": "3223160",
    "end": "3230780"
  },
  {
    "text": "Formal verification involves\nconverting the logic of an application\ninto a specification",
    "start": "3232110",
    "end": "3237000"
  },
  {
    "text": "and then mathematically proving\nthat the spec does exactly what it is\nsupposed to do – no matter what.",
    "start": "3237810",
    "end": "3243809"
  },
  {
    "text": "It’s very expensive and difficult\nand time-consuming.",
    "start": "3245230",
    "end": "3249220"
  },
  {
    "text": "It only makes sense for applications where the cost of failure\nis truly devastating.",
    "start": "3250450",
    "end": "3255390"
  },
  {
    "text": "Organizations like NASA\nuse formal verification to ensure that space missions that\ncost hundreds of millions of dollars",
    "start": "3256770",
    "end": "3263933"
  },
  {
    "text": "and risk people’s lives,\ndon’t fail because of software bugs. Intel invested heavily\nin formal verification",
    "start": "3264000",
    "end": "3271993"
  },
  {
    "text": "after the floating point bug in early\nprocessors caused a massive recall. Today, all the leading\nchip manufacturers",
    "start": "3272060",
    "end": "3279773"
  },
  {
    "text": "including AWS develop processors\nusing formal verification tools.",
    "start": "3279840",
    "end": "3284790"
  },
  {
    "text": "Another area where we’re\nusing formal verification is in one of my favorite\nservices – Amazon S3.",
    "start": "3285430",
    "end": "3291609"
  },
  {
    "text": "When we pioneered S3 in 2006\nwe built it because we knew customers\nwanted storage for the internet.",
    "start": "3292710",
    "end": "3300540"
  },
  {
    "text": "Our top design priorities in 2006\nwere elasticity, reliability, durability\nand performance",
    "start": "3301700",
    "end": "3308953"
  },
  {
    "text": "because that was what mattered\nto our customers. Given that nobody had ever built\nanything of this scale before,",
    "start": "3309020",
    "end": "3315790"
  },
  {
    "text": "we relied on fundamental\ndistributed systems concepts to make sure\nwe could meet those guarantees.",
    "start": "3316820",
    "end": "3322520"
  },
  {
    "text": "In fact I think S3 is the only\nproduct we ever launched with a list of distributed systems\nconcepts in the press release.",
    "start": "3323660",
    "end": "3331980"
  },
  {
    "text": "But with the knowledge that failures\nof components big and small are a given,\nremember everything fails,",
    "start": "3333790",
    "end": "3341193"
  },
  {
    "text": "all the time, we need to balance\nthe trade-off between availability",
    "start": "3341260",
    "end": "3346993"
  },
  {
    "text": "and consistency based on the now\ninfamous CAP theorem.",
    "start": "3347060",
    "end": "3350480"
  },
  {
    "text": "Given the applications\nwe initially target, we decided that availability,\nalways be able to access your object,",
    "start": "3352310",
    "end": "3358480"
  },
  {
    "text": "had a higher priority than getting\nthe last update to your object. And there could be\na small window of time",
    "start": "3359260",
    "end": "3366760"
  },
  {
    "text": "between when you updated\nyour object and an all read request would give you\nthe updated data.",
    "start": "3367323",
    "end": "3373150"
  },
  {
    "text": "The data was there stored\nreliably and durable, but the metadata\nwas eventually consistent.",
    "start": "3374160",
    "end": "3381080"
  },
  {
    "text": "As S3 has evolved into a more\ngeneralized storage engine, it is now used for many real-time\nprocessing applications",
    "start": "3382520",
    "end": "3390553"
  },
  {
    "text": "like for example,\nanalytics on top of a data lake. The majority of S3 access now\nis machine to machine",
    "start": "3390620",
    "end": "3398790"
  },
  {
    "text": "instead of human to machine. Now it turns out that machines\nhave a much harder time reasoning",
    "start": "3399480",
    "end": "3405343"
  },
  {
    "text": "about eventual consistency\nthan I ever anticipated. And there is the law\nof preservation of complexity.",
    "start": "3405410",
    "end": "3413050"
  },
  {
    "text": "If you need strong consistency on top\nof an eventual consistent system, you need to do the work.",
    "start": "3414120",
    "end": "3420923"
  },
  {
    "text": "Over time, we learnt that quite\na few of our customers were building that complexity\ninto their applications",
    "start": "3420990",
    "end": "3428673"
  },
  {
    "text": "to achieve strong consistency. We knew that if we did\nthat work for them,",
    "start": "3428740",
    "end": "3434570"
  },
  {
    "text": "life would be a lot easier\nfor our customers. To achieve that, we had to introduce\nnew protocols for cache coherence",
    "start": "3435100",
    "end": "3443303"
  },
  {
    "text": "and distributed systems communication\nin the request path for S3’s metadata storage.",
    "start": "3443370",
    "end": "3448950"
  },
  {
    "text": "This allowed us to ensure\nthat every S3 index storage service always has the latest metadata and\nwas in sync with the cache servers.",
    "start": "3450260",
    "end": "3458690"
  },
  {
    "text": "And we had to introduce all of this\nwhile continuing to run S3 without impact to availability\nor performance.",
    "start": "3460090",
    "end": "3466790"
  },
  {
    "text": "S3 had to evolve\ninto the next generation without our customers\nbeing impacted in any way.",
    "start": "3468200",
    "end": "3474270"
  },
  {
    "text": "So while we did traditional\nperformance, integration, load, and unit testing,\nwe knew there were some edge cases",
    "start": "3475660",
    "end": "3484172"
  },
  {
    "text": "that this would not\nbe sufficient for. For example, when read operations\nrace with write operations",
    "start": "3484240",
    "end": "3491673"
  },
  {
    "text": "at very high concurrency\non a versioned item, the system can enter\nedge states leading",
    "start": "3491740",
    "end": "3498473"
  },
  {
    "text": "to eventual consistency again. And this is where\nformal verification comes in.",
    "start": "3498540",
    "end": "3503490"
  },
  {
    "text": "We relied heavily on it and exploit\nmillions of combinations of states\nthrough formal mathematical models.",
    "start": "3504470",
    "end": "3511620"
  },
  {
    "text": "We would never have been able\nto prove to ourselves that we covered all edge cases\nwithout formal verification.",
    "start": "3512990",
    "end": "3519289"
  },
  {
    "text": "And because of all that we are\nnow able to confidently announce that Amazon S3 delivers\nstrong read-after-write consistency",
    "start": "3520520",
    "end": "3530313"
  },
  {
    "text": "for only storage request without changes to any performance\nor availability,",
    "start": "3530380",
    "end": "3536382"
  },
  {
    "text": "without sacrificing\nregional isolation for applications and at no additional cost.",
    "start": "3536450",
    "end": "3541730"
  },
  {
    "text": "The field of automated reasoning is having an impact on AWS\nservices in many other ways.",
    "start": "3543420",
    "end": "3548540"
  },
  {
    "text": "I’ve always talked about security and you’ve heard me say\nit every year, “Encrypt everything.”",
    "start": "3549250",
    "end": "3555180"
  },
  {
    "text": "Security is the most\nimportant thing that we can be focused on\nfor our customers and I think it’s something\nthat to be on top of the mind",
    "start": "3556540",
    "end": "3564273"
  },
  {
    "text": "of every customer themselves as well,\nno matter what they are building.",
    "start": "3564340",
    "end": "3568100"
  },
  {
    "text": "When you are developing\nsomething new, it is possible to build the system that unintentionally allows\naccess you didn’t intend on.",
    "start": "3569370",
    "end": "3577500"
  },
  {
    "text": "At AWS we asked ourselves, “How can we help customers\nwith this?” And we were making\nsignificant investments",
    "start": "3578950",
    "end": "3585813"
  },
  {
    "text": "into security-focused tools\nthat use automated reasoning to help detect security gaps.",
    "start": "3585880",
    "end": "3592020"
  },
  {
    "text": "One of these is the recently\nannounced VPC Reachability Analyzer. In AWS it’s amazingly simple\nto set up a network.",
    "start": "3593080",
    "end": "3600450"
  },
  {
    "text": "It is truly something\nthat impresses me to this day. And if you need to isolate\ndifferent parts",
    "start": "3601430",
    "end": "3607713"
  },
  {
    "text": "of your application\nfrom other parts, or from the internet,\nI can easily do that.",
    "start": "3607780",
    "end": "3613510"
  },
  {
    "text": "I can create a network ACL,\na security group, or a subnet to isolate\nthese parts from the network.",
    "start": "3614690",
    "end": "3619940"
  },
  {
    "text": "But just like my application logic, the logic of a network\nincreases in complexity",
    "start": "3621180",
    "end": "3626900"
  },
  {
    "text": "the more work you do on it. Most workloads on AWS of any\ncomplexity have many subnets,",
    "start": "3627510",
    "end": "3633192"
  },
  {
    "text": "have many network interfaces,\nhave many security groups, and often all these things\nreference each other.",
    "start": "3633260",
    "end": "3638810"
  },
  {
    "text": "If you’re trying to trace the path\nfrom one end to the other, it quickly looks like\nthe flow charts logic problem",
    "start": "3640380",
    "end": "3648153"
  },
  {
    "text": "we had with our\napplication earlier. And it’s why we built the Amazon\nVPC Reachability Analyzer.",
    "start": "3648220",
    "end": "3655260"
  },
  {
    "text": "The Reachability Analyzer uses\nthe same automated reasoning processes to look\nat your AWS configuration",
    "start": "3656420",
    "end": "3663140"
  },
  {
    "text": "without sending a single packet. It can tell if your system\nis doing what you want it to do.",
    "start": "3663720",
    "end": "3669760"
  },
  {
    "text": "You can use it to troubleshoot why you can’t reach\none server from another.",
    "start": "3671300",
    "end": "3676220"
  },
  {
    "text": "With the Reachability Analyzer\nyou only need to tell us what rules you want to validate",
    "start": "3677580",
    "end": "3682160"
  },
  {
    "text": "and we automatically build\nthe logic to test and verify it.",
    "start": "3682690",
    "end": "3686270"
  },
  {
    "text": "This is just one of the many tools\nwe offer to customers that are powered\nwith the automated reasoning.",
    "start": "3687910",
    "end": "3693050"
  },
  {
    "text": "And the more complex\nyour applications grow, the more important tools\nlike this are becoming.",
    "start": "3693930",
    "end": "3698760"
  },
  {
    "text": "What all these tools\nhave in common though is that we make it easy\nto define rules and test them",
    "start": "3700280",
    "end": "3706599"
  },
  {
    "text": "because they are based\non configuration. The S3 block\npublic access feature.",
    "start": "3707410",
    "end": "3713143"
  },
  {
    "text": "Allows you to configure\nbucket permissions as long as they don’t provide\nunrestricted access to the internet.",
    "start": "3713210",
    "end": "3720260"
  },
  {
    "text": "Our AWS IAM Access Analyzer validates\nthat your IAM policies",
    "start": "3721660",
    "end": "3727442"
  },
  {
    "text": "only allow what you intended. Without automatic reasoning\npowered tools you tell us",
    "start": "3727510",
    "end": "3733073"
  },
  {
    "text": "both what the rules or policies are and they need to tell\nwhat you want to verify.",
    "start": "3733140",
    "end": "3738120"
  },
  {
    "text": "All of this is powered\nby technology developed by the AWS automatic reasoning group,\na technology called ‘Zelkova.’",
    "start": "3739690",
    "end": "3746520"
  },
  {
    "text": "Zelkova translates policy\ninto precise mathematical language",
    "start": "3747790",
    "end": "3752150"
  },
  {
    "text": "and then uses automated\nreasoning tools to check\ntheir properties. These tools include\nautomated reasoners",
    "start": "3752870",
    "end": "3760003"
  },
  {
    "text": "called ‘Satisfiable\nModulo theories,’ SMT, which automatically prove\nor disprove formulas",
    "start": "3760070",
    "end": "3768432"
  },
  {
    "text": "over constant strings,\nregular expressions, dates, and IP addresses.",
    "start": "3768500",
    "end": "3772920"
  },
  {
    "text": "Zelkova makes broad statements\nabout all resource requests because it’s based on mathematics\nand proves",
    "start": "3773760",
    "end": "3782513"
  },
  {
    "text": "instead of heuristics,\npatterns, or simulation. Next to the services we already\ndiscussed is used in AWS",
    "start": "3782580",
    "end": "3791573"
  },
  {
    "text": "Config, AWS\nTrusted Advisor, Amazon Macie, Amazon GuardDuty, AWS\nIoT Device Defender, and more.",
    "start": "3791640",
    "end": "3799829"
  },
  {
    "text": "One of the most important\nbenefits is that users can leverage these tools to help\nidentify gaps in the design phase",
    "start": "3801310",
    "end": "3809513"
  },
  {
    "text": "before any data is exposed. Furthermore,\nthis acknowledges automated.",
    "start": "3809580",
    "end": "3815000"
  },
  {
    "text": "We are moving manual\nhuman intervention to help provide\ngreater scalability.",
    "start": "3815860",
    "end": "3820010"
  },
  {
    "text": "And finally, it is provable.\nBy converting the problem into a logic-based\nmathematical equation",
    "start": "3821030",
    "end": "3827619"
  },
  {
    "text": "it can be proven\nwith mathematical certainty. Now I would to change it up\nfor a minute.",
    "start": "3828270",
    "end": "3834839"
  },
  {
    "text": "I will talk more about how and why we build the things\nthe way we do at AWS.",
    "start": "3835430",
    "end": "3841529"
  },
  {
    "text": "At Amazon we have a long history\nof allowing our engineers to pick the tools that work best\nfor the problem at hand.",
    "start": "3843050",
    "end": "3848930"
  },
  {
    "text": "We have a number of centralized\nsupported languages and tools, but we do not force them on anyone.",
    "start": "3850070",
    "end": "3855799"
  },
  {
    "text": "For example,\nwhen we needed to do fast UI prototyping for Amazon Fresh, Ruby on Rails was the best tool\nfor that even when we knew",
    "start": "3857920",
    "end": "3866573"
  },
  {
    "text": "it wouldn’t be the language\nused to scale it up. Marc Brooker gave a great talk\nat re:Invent called",
    "start": "3866640",
    "end": "3875113"
  },
  {
    "text": "‘Creating\nTechnology Standards at Amazon,’ where he talks\nabout the trade-offs",
    "start": "3875180",
    "end": "3880150"
  },
  {
    "text": "between using what’s familiar\nand safe, Java or C++,",
    "start": "3880710",
    "end": "3884380"
  },
  {
    "text": "and what may be new and risky. He makes an important point here\nthat’s worth paying attention to.",
    "start": "3885730",
    "end": "3892070"
  },
  {
    "text": "The time to develop software\nis relatively small compared to the time\nyour software will be running",
    "start": "3892680",
    "end": "3899253"
  },
  {
    "text": "and needs to be maintained. As such, when the team\ndecided to develop",
    "start": "3899320",
    "end": "3904553"
  },
  {
    "text": "the next generation\nof a load balancer in Rust, it was not about what was\neasy and comfortable,",
    "start": "3904620",
    "end": "3910703"
  },
  {
    "text": "which would have been Java or C++, but what would be better for\nthe long-term success of the system.",
    "start": "3910770",
    "end": "3916940"
  },
  {
    "text": "Next we are having\ngreat safety features and no garbage collector,\nthe main driver for choosing",
    "start": "3918290",
    "end": "3923473"
  },
  {
    "text": "Rust was that it’s a great language\nfor using automated reasoning and formal verification\nof the application logic.",
    "start": "3923540",
    "end": "3930120"
  },
  {
    "text": "We continue to improve\nour reasoning tools and because of that the team prefer\nto take the approach",
    "start": "3931340",
    "end": "3937313"
  },
  {
    "text": "of learning a new language\nto build the foundation with the support\nof automated reasoning.",
    "start": "3937380",
    "end": "3942830"
  },
  {
    "text": "This allowed them the benefit\nto prove that our code was doing\nexactly what they intended.",
    "start": "3944120",
    "end": "3948819"
  },
  {
    "text": "And because of the ability\nto enable verification, Rust has become\nextremely popular in AWS",
    "start": "3949950",
    "end": "3956333"
  },
  {
    "text": "and more and more of our systems\nare working in Rust, especially those systems\nrequired to build the bendable,",
    "start": "3956400",
    "end": "3963423"
  },
  {
    "text": "secure services for our customers. Another area of\ndependability deals with usability.",
    "start": "3963490",
    "end": "3971630"
  },
  {
    "text": "In essence what if then,\nour faults in your input data. How are you dealing\nwith faults in general?",
    "start": "3972370",
    "end": "3978800"
  },
  {
    "text": "The fault handling part of your code are probably\nnot frequently exercised.",
    "start": "3979900",
    "end": "3984370"
  },
  {
    "text": "So, how can you be sure\nthat your application will continue to be dependent, or dependable,\nregardless what you throw at it?",
    "start": "3985660",
    "end": "3993420"
  },
  {
    "text": "Similar to automated reasoning, Fault Injection allows you to discover\nthese unknowable unknowns.",
    "start": "3994600",
    "end": "4001480"
  },
  {
    "text": "One way this is done with application\ncode is fuzz testing, or fuzzing.",
    "start": "4002600",
    "end": "4007590"
  },
  {
    "text": "Fuzzing works by sending bad data\nto your application in a way that tries\nto make it crash.",
    "start": "4008530",
    "end": "4014520"
  },
  {
    "text": "Imagine a form or your websites\nor an API that accepts data, or even a mobile phone application,\nwhat would happen if your application",
    "start": "4015680",
    "end": "4025203"
  },
  {
    "text": "was sent malformed data\nthat causes errors? Or what if this happened maliciously?",
    "start": "4025270",
    "end": "4031750"
  },
  {
    "text": "This is exactly what happened\nin the case of Heartbleed a few years ago. The open SSL library\nwas making assumptions",
    "start": "4033020",
    "end": "4040673"
  },
  {
    "text": "that during a Heartbleed request\nthe server should send\nexactly what was requested.",
    "start": "4040740",
    "end": "4046040"
  },
  {
    "text": "This bug was originally\ndiscovered by fuzz testing because the fuzzer\nmade a malformed request",
    "start": "4047350",
    "end": "4054253"
  },
  {
    "text": "and the offending function\nhappily returned it. And because of things like this,\nwe are using fuzzing",
    "start": "4054320",
    "end": "4061863"
  },
  {
    "text": "extensively at AWS. I use it to test both our APIs\nand our code itself.",
    "start": "4061930",
    "end": "4067280"
  },
  {
    "text": "But even if your code\nis perfectly written, hardware fails, packets get dropped,\nand unexpected traffic spikes happen.",
    "start": "4068580",
    "end": "4076000"
  },
  {
    "text": "Even well-built\ncloud applications today can depend on dozens of services,\nand components all working together.",
    "start": "4076980",
    "end": "4084859"
  },
  {
    "text": "And failures can happen\nat every level. To understand how your\napplication will behave",
    "start": "4085920",
    "end": "4092043"
  },
  {
    "text": "when these events happen, the best form of testing\nis chaos engineering. Now this isn’t a new idea and has\nbeen around for quite a while.",
    "start": "4092110",
    "end": "4100853"
  },
  {
    "text": "Netflix popularized\nthis concept many years ago and the tool they built\nwas called ‘Chaos Monkey.’",
    "start": "4100920",
    "end": "4107069"
  },
  {
    "text": "The goal of chaos engineering\nis to understand how your application\nresponds to issues",
    "start": "4108480",
    "end": "4113992"
  },
  {
    "text": "by injecting failures\ninto your infrastructure, usually winning\nagainst production systems.",
    "start": "4114060",
    "end": "4120290"
  },
  {
    "text": "Chaos experiments can include generating a baseline traffic load\nagainst the system,",
    "start": "4121660",
    "end": "4126529"
  },
  {
    "text": "adding latency\ninto all database calls, and then validating\ntimeouts and retries.",
    "start": "4127130",
    "end": "4131970"
  },
  {
    "text": "And unlike automated reasoning, we believe that chaos engineering\nis for everyone,",
    "start": "4133120",
    "end": "4138722"
  },
  {
    "text": "not just shops running\nat Amazon or Netflix scale, and that’s why, today,\nI am excited to preannounce",
    "start": "4138790",
    "end": "4145783"
  },
  {
    "text": "a new service built to simplify\nthe process of running chaos\nexperiments in the cloud.",
    "start": "4145850",
    "end": "4152150"
  },
  {
    "text": "AWS Fault Injection Simulator\nis a fully managed chaos engineering service\nthat makes it easy to discover",
    "start": "4153200",
    "end": "4160402"
  },
  {
    "text": "vulnerable parts\nin your applications. AWS FIS helps developers easily\nset up and run controlled chaos",
    "start": "4160470",
    "end": "4169473"
  },
  {
    "text": "engineering experiments across\na range of AWS services. FIS gives you the ability\nto inject faults",
    "start": "4169540",
    "end": "4177283"
  },
  {
    "text": "so it has latency, or failure or underlying compute\nnetworking databases, and more, that includes\ncontrol playing level fault",
    "start": "4177350",
    "end": "4185180"
  },
  {
    "text": "such as API throttling\nand server errors that weren’t previously possible for\ncustomers to do this in the cloud.",
    "start": "4185950",
    "end": "4193520"
  },
  {
    "text": "And FIS makes it easy\nto run safe experiments. We build it to follow the typical\nchaos experimental workflow",
    "start": "4194580",
    "end": "4202940"
  },
  {
    "text": "where you understand\nyour steady state, set a hypothesis, inject faults,\nand momentary application.",
    "start": "4204000",
    "end": "4210730"
  },
  {
    "text": "When the experiment is over, FIS will tell you if your\nhypothesis was confirmed",
    "start": "4212020",
    "end": "4217040"
  },
  {
    "text": "and you can use the data\ncollected by CloudWatch to decide where you need\nto make improvements.",
    "start": "4217850",
    "end": "4223740"
  },
  {
    "text": "FIS removes the barriers\nto adopting chaos engineering.",
    "start": "4224870",
    "end": "4228960"
  },
  {
    "text": "I see a lot of benefits\nfor incorporating chaos engineering into your business.",
    "start": "4230210",
    "end": "4235150"
  },
  {
    "text": "From running game days\nor incorporating chaos experiments\ninto your CI/CD workflows,",
    "start": "4235840",
    "end": "4241400"
  },
  {
    "text": "most people think about chaos\nengineering for resilience, and that’s true, but it’s also performance\nimprovements you can make.",
    "start": "4241990",
    "end": "4249739"
  },
  {
    "text": "It is the blind spots that you\ncan catch in your monitoring. And perhaps the most underrated\nis the experience your teams",
    "start": "4250630",
    "end": "4259693"
  },
  {
    "text": "will get learning how to respond\nto infrequent but critical events.",
    "start": "4259760",
    "end": "4264840"
  },
  {
    "text": "Mean time to resolution is not just about\nyour architecture and automation,",
    "start": "4265980",
    "end": "4271140"
  },
  {
    "text": "but it is also about\nthe operational muscles that you build\nand exercise over time.",
    "start": "4271840",
    "end": "4277120"
  },
  {
    "text": "There is no better way to test\nyour system than chaos engineering. And with FIS you won’t need\nto be an expert",
    "start": "4278410",
    "end": "4286463"
  },
  {
    "text": "to incorporate it\ninto your organization. AWS Fault Injection Simulator\nwill be available in early 2021",
    "start": "4286530",
    "end": "4294290"
  },
  {
    "text": "and will include the ability\nto run fault actions against services such as EC2,\nRDS, ECS, EKS and more.",
    "start": "4294830",
    "end": "4301840"
  },
  {
    "text": "Out of all the things\nwe’re announcing this year, this is the one\nthat I am most excited about.",
    "start": "4303470",
    "end": "4308960"
  },
  {
    "text": "By offering this as a service, I believe that we are going to have\na massive positive impact",
    "start": "4309760",
    "end": "4315023"
  },
  {
    "text": "on building more robust,\nmore durable, and more dependable systems\nin the cloud.",
    "start": "4315090",
    "end": "4320390"
  },
  {
    "text": "[music playing]",
    "start": "4322819",
    "end": "4332012"
  },
  {
    "text": "When we talked about\nthe history of dependability, I mentioned systems theory.",
    "start": "4333320",
    "end": "4338283"
  },
  {
    "text": "A related field of that\nis systems control theory.",
    "start": "4338350",
    "end": "4342340"
  },
  {
    "text": "It has been crucial in building\nmany dependable industrial and other systems.",
    "start": "4343400",
    "end": "4349200"
  },
  {
    "text": "The most important pioneer\nin this field was Professor Rudolf Kálmán.",
    "start": "4349800",
    "end": "4354440"
  },
  {
    "text": "In 1960 he defined concepts\nsuch as whether a system was controllable",
    "start": "4355310",
    "end": "4360622"
  },
  {
    "text": "and observable, or actually unobservable. To be observable is something we know\nas software engineers all too well.",
    "start": "4363022",
    "end": "4372740"
  },
  {
    "text": "How can you infer the internal state\nof a system from its outputs?",
    "start": "4373610",
    "end": "4379440"
  },
  {
    "text": "These can be functional outputs\nlike voltage and amperage or the turbines,\nor nonfunctional output",
    "start": "4381120",
    "end": "4388843"
  },
  {
    "text": "like the turbine temperature sensors\nor rotation speed measurements.",
    "start": "4388910",
    "end": "4393560"
  },
  {
    "text": "And this is what we try to achieve\nwith the observability property",
    "start": "4395040",
    "end": "4399983"
  },
  {
    "text": "of a dependable system. How can we infer\nthe internal state",
    "start": "4400050",
    "end": "4405409"
  },
  {
    "text": "of our digital systems\nfrom its outputs? This can include\nboth functional replies",
    "start": "4405930",
    "end": "4412203"
  },
  {
    "text": "from API\ncalls for example, or requests to other parts\nof the system",
    "start": "4412270",
    "end": "4416700"
  },
  {
    "text": "from nonfunctional information\nthat we collect through other means. We’ve been monitoring systems\nfor years.",
    "start": "4417790",
    "end": "4424800"
  },
  {
    "text": "And I remember the earliest\nmonitoring tools came with Unix,",
    "start": "4425530",
    "end": "4430219"
  },
  {
    "text": "VMStat, Syslog, Netstat,\net cetera. And it wasn’t until the late 90s\nthat tools like Nagios",
    "start": "4430730",
    "end": "4439523"
  },
  {
    "text": "and RRDtool became popular. Monitoring is for operators.\nJust like this factory,",
    "start": "4439590",
    "end": "4447920"
  },
  {
    "text": "an operator would stand\nin front of this dashboard to watch a gauge start\nto close to end",
    "start": "4448690",
    "end": "4456513"
  },
  {
    "text": "or a light would start flashing\nwhenever there was a problem.",
    "start": "4457060",
    "end": "4460320"
  },
  {
    "text": "Monitoring means that you\nalready know what is important. You think, have all\nthe data you need,",
    "start": "4462090",
    "end": "4470260"
  },
  {
    "text": "and you are just watching it and get\nan alert when it goes out of spec. And this was possible\nfor a factory like this",
    "start": "4470940",
    "end": "4477302"
  },
  {
    "text": "because, relatively speaking, there wasn’t a lot\nthey could monitor.",
    "start": "4477370",
    "end": "4482760"
  },
  {
    "text": "The generators were\nthe most important thing, which is why all\nthe dashboards were there.",
    "start": "4484100",
    "end": "4489370"
  },
  {
    "text": "The equipment that was\nprocessing the beats was all managed by people\nwho worked with it day in and day out",
    "start": "4491200",
    "end": "4497940"
  },
  {
    "text": "and could tell when it wasn’t cutting\nas well as it had before, or if it started to hum\nin a different way.",
    "start": "4499150",
    "end": "4505680"
  },
  {
    "text": "A factory like this is a living,\nbreathing thing, and when your workers\nspend literally all day here,",
    "start": "4506960",
    "end": "4514420"
  },
  {
    "text": "they know when something is not right and when it is going\nto break before it does.",
    "start": "4515360",
    "end": "4520750"
  },
  {
    "text": "It’s a bit like\nthe experienced car mechanic that just needs to listen\nto your engine",
    "start": "4522180",
    "end": "4526900"
  },
  {
    "text": "to tell you the crankshaft\nis about to go out. There’s a pair of magnificent\nsensors of course",
    "start": "4527650",
    "end": "4534930"
  },
  {
    "text": "and a lot of experience\nhow to interpret output and thus, its internal state.",
    "start": "4535530",
    "end": "4540860"
  },
  {
    "text": "However, if there is a car\nhe hasn’t seen before, or a problem sound\nthat he has never heard,",
    "start": "4542480",
    "end": "4548420"
  },
  {
    "text": "his experience\ndoesn’t help that much. But in our world what happens\nwhen everything is automated,",
    "start": "4549700",
    "end": "4557083"
  },
  {
    "text": "and you’re not working with the same\nequipment day in and day out, or when your ears and eyes\nare not sufficient.",
    "start": "4557150",
    "end": "4564860"
  },
  {
    "text": "Classical monitoring deals\nwith two questions. What is broken\nand why is it broken?",
    "start": "4566870",
    "end": "4573380"
  },
  {
    "text": "Monitoring uses a predefined\nset of metrics and logs to determine\nknown failures.",
    "start": "4574750",
    "end": "4579430"
  },
  {
    "text": "In general with monitoring\nand alarming, you can’t predict\nwhen things will fail.",
    "start": "4580310",
    "end": "4586250"
  },
  {
    "text": "You can only take action\nwhen they do. And it’s why we used\nto call people",
    "start": "4587110",
    "end": "4592613"
  },
  {
    "text": "who monitored these systems\n‘operators,’ and not engineers.",
    "start": "4592680",
    "end": "4596580"
  },
  {
    "text": "The generators here at Sugar City\nare extremely complex.",
    "start": "4598200",
    "end": "4602660"
  },
  {
    "text": "It is unlikely that an operator\nof the dashboard knew how to repair it\nwhen something went wrong.",
    "start": "4603800",
    "end": "4610460"
  },
  {
    "text": "But they did know when\nthe sounding alarm and gauges moved to where\nthey weren’t supposed to go.",
    "start": "4612220",
    "end": "4617570"
  },
  {
    "text": "And systems continue\nto increase in complexity. It is impossible to put every\nimportant metric for that system",
    "start": "4618810",
    "end": "4627392"
  },
  {
    "text": "on a single dashboard\nthat the user watches. Think about everything that\ngoes into a modern application.",
    "start": "4627460",
    "end": "4633520"
  },
  {
    "text": "They have metrics\nfor the service containers and functions\nthat you are managing. Your application has counters\nand logs for all the work it’s doing.",
    "start": "4634300",
    "end": "4641390"
  },
  {
    "text": "You may have anywhere from thousands\nto millions of customers, all which have data\nabout what they are doing",
    "start": "4641930",
    "end": "4649430"
  },
  {
    "text": "and how they are interacting\nwith your application. It is impossible to put all of this\non a dashboard",
    "start": "4649980",
    "end": "4656370"
  },
  {
    "text": "that a human watches to define alerts\nfor each of these metrics",
    "start": "4656940",
    "end": "4662273"
  },
  {
    "text": "to tell you\nwhen they’re going out of spec. At Amazon we’ve been\non a 25-year journey",
    "start": "4662340",
    "end": "4670643"
  },
  {
    "text": "to improve the processes\nof managing our systems. And we’ve long left a notion\nthat just monitoring",
    "start": "4670710",
    "end": "4677153"
  },
  {
    "text": "was sufficient to manage our systems. We’ve embarked on a holistic\napproach to operations",
    "start": "4677220",
    "end": "4684160"
  },
  {
    "text": "from collecting\nmassive amounts of data and logs, to how we analyze them\nto how we solve",
    "start": "4684900",
    "end": "4692293"
  },
  {
    "text": "and talk about problems\nwhen they do happen, and this is what observability\nis all about.",
    "start": "4692360",
    "end": "4698280"
  },
  {
    "text": "How can we make sure\nwe have the data, the tools, and the mechanisms,",
    "start": "4699290",
    "end": "4705073"
  },
  {
    "text": "to quickly resolve problems\nin a fundamental way? How can we without\nreaching into the system",
    "start": "4705140",
    "end": "4712820"
  },
  {
    "text": "infer internal state\nfrom the data that we have?",
    "start": "4713730",
    "end": "4717440"
  },
  {
    "text": "At Amazon, our most important drivers\nhave always been customer centric.",
    "start": "4719490",
    "end": "4724300"
  },
  {
    "text": "Find and resolve problems\nbefore they impact customers.",
    "start": "4725350",
    "end": "4729330"
  },
  {
    "text": "Understand the impact\non your customers where you couldn’t prevent it\nand fix the problem",
    "start": "4730590",
    "end": "4737090"
  },
  {
    "text": "so that it never happens again. [music playing]",
    "start": "4737910",
    "end": "4750646"
  },
  {
    "text": "Observability centers on three\nenabling technologies, metrics, logging, and tracing.",
    "start": "4750900",
    "end": "4757533"
  },
  {
    "text": "All three are important\nbut serve different purposes, but I do think logging is the most\nfundamental one to get right.",
    "start": "4757600",
    "end": "4765889"
  },
  {
    "text": "Back at the first re:Invent\nI made a bold statement. I told you to “Log everything”\nand I meant it.",
    "start": "4767440",
    "end": "4774949"
  },
  {
    "text": "Log everything.\nLogs are the source of truth for what’s going on at any given\nmoment inside your infrastructure.",
    "start": "4775750",
    "end": "4784130"
  },
  {
    "text": "At Amazon, every service\nform the Hypervisor to network gear generates logs\nthat are indexed, compressed,",
    "start": "4785150",
    "end": "4792633"
  },
  {
    "text": "and stored durably. We have gone through a few\ndifferent log collection systems at Amazon over the years.",
    "start": "4792700",
    "end": "4799403"
  },
  {
    "text": "In the early days we were\nmounting NFS servers and writing directly to logs\nacross the network.",
    "start": "4799470",
    "end": "4805280"
  },
  {
    "text": "And we were digging through\nthose logs with bash, sets, cut and org.\nIt was painful and time consuming.",
    "start": "4806740",
    "end": "4814880"
  },
  {
    "text": "But it was the best option\nat the time. And as we grew and matured\nwe built the custom client",
    "start": "4815570",
    "end": "4821993"
  },
  {
    "text": "that stored logs in their sleep. And this made it easy\nto get logs over our servers",
    "start": "4822060",
    "end": "4827153"
  },
  {
    "text": "and store them durably. The search for errors\nand to generate ad hoc metrics",
    "start": "4827220",
    "end": "4833543"
  },
  {
    "text": "we queried those logs with\na distributed Hadoop cluster. And this was significantly\nmore scalable",
    "start": "4833610",
    "end": "4841263"
  },
  {
    "text": "than a mounted file system\npast with Linux commands. But every system\ngrows in complexity.",
    "start": "4841330",
    "end": "4847640"
  },
  {
    "text": "Our largest applications are made up\nof hundreds of microservices, each potentially generating\nterabytes of logs a day.",
    "start": "4848970",
    "end": "4856710"
  },
  {
    "text": "Using Amazon EMR to query the logs\nfor those services could take hours.",
    "start": "4857810",
    "end": "4862420"
  },
  {
    "text": "So, we took everything\nwe had learned so far and we created CloudWatch logs.",
    "start": "4863330",
    "end": "4867980"
  },
  {
    "text": "With it, you have\na single pane of glass where you can view all logs\nfrom every service, every container,",
    "start": "4868850",
    "end": "4875913"
  },
  {
    "text": "and every application\nthat you monitor. You can search your logs\nfor specific error codes,",
    "start": "4875980",
    "end": "4881633"
  },
  {
    "text": "filter them based\non different fields, or create alarms\nfor different conditions.",
    "start": "4881700",
    "end": "4886199"
  },
  {
    "text": "It’s a powerful service\nbut it’s still just the first step.",
    "start": "4887230",
    "end": "4891940"
  },
  {
    "text": "When building an end-to-end\nobservability system you need logs,\nmetrics, and tracing.",
    "start": "4893330",
    "end": "4898654"
  },
  {
    "text": "If your logs are the source of truth the metrics that you monitor\nand graft should come from your logs.",
    "start": "4900115",
    "end": "4906239"
  },
  {
    "text": "One of the most challenging things\nfor software developers however is, especially if they are\ndisconnected from operations,",
    "start": "4907990",
    "end": "4913590"
  },
  {
    "text": "is to create metrics\nin a monitoring system. And this is when why,\nwhen you ask an organization",
    "start": "4914410",
    "end": "4921093"
  },
  {
    "text": "what metrics they are monitoring,\nthey will start talking about system-level metrics\nlike CPU utilization",
    "start": "4921160",
    "end": "4926372"
  },
  {
    "text": "or service level metrics\nlike number of requests. Those sort of metrics\nare usually",
    "start": "4926440",
    "end": "4933393"
  },
  {
    "text": "collected automatically\nfor you by AWS, or they are modules that are built\ninto your monitoring application.",
    "start": "4933460",
    "end": "4939980"
  },
  {
    "text": "For Amazon we heard\nfrom our developers that it was too difficult\nto publish metrics.",
    "start": "4941430",
    "end": "4946480"
  },
  {
    "text": "And there are lots of ways\nto get metrics into a system but they often require configuration\nor additional dependencies",
    "start": "4947590",
    "end": "4954153"
  },
  {
    "text": "on libraries\nthat you need to keep up to date. We needed a system that made\ncreating metrics dead easy",
    "start": "4954220",
    "end": "4961520"
  },
  {
    "text": "so we stopped\nand asked ourselves, “What’s the easiest way\nfor a developer to write data?”",
    "start": "4962550",
    "end": "4968140"
  },
  {
    "text": "Well, anyone who has written code\nwithout a debugger knows how easy writing\nto STDOUT is.",
    "start": "4969120",
    "end": "4975083"
  },
  {
    "text": "And you don’t need\nany libraries. You don’t need any dependencies\nand there’s no configuration.",
    "start": "4976138",
    "end": "4980650"
  },
  {
    "text": "We let our developers define,\ngraph and track to one data by just building a string\nand writing it to STDOUT.",
    "start": "4981700",
    "end": "4989590"
  },
  {
    "text": "And because we are already logging\nto STDOUT we can generate JSON and have it forwarded\nto CloudWatch logs.",
    "start": "4991380",
    "end": "4997650"
  },
  {
    "text": "We are doing this through logs\ninstead of creating a new metric because this typically ends up\nbecoming high cardinality data.",
    "start": "4998390",
    "end": "5006110"
  },
  {
    "text": "Now, one of the challenges\nwith allowing developers to create arbitrary metrics\nat Amazon scale,",
    "start": "5007920",
    "end": "5012920"
  },
  {
    "text": "is the level of cardinality\nit creates. Now, cardinality sounds\nlike a complex topic",
    "start": "5013710",
    "end": "5019910"
  },
  {
    "text": "but it's actually\nrelatively simple. The total number of unique\nentries in your data",
    "start": "5020520",
    "end": "5025510"
  },
  {
    "text": "the higher the cardinality is. Now let me show you an example. If you’re familiar with time series\ndatabases this might sound familiar.",
    "start": "5026110",
    "end": "5034180"
  },
  {
    "text": "Each event has one or more\ndimensions associated with it. Suppose I have a CloudWatch",
    "start": "5035250",
    "end": "5041282"
  },
  {
    "text": "metric\ncalled ‘Disc Free Bytes,’ whose dimensions are Amazon\nEC2 instance ID and",
    "start": "5041350",
    "end": "5047896"
  },
  {
    "text": "and the OS mount point\nor a drive letter. This has a cardinality of two because there are two unique metrics\none for each drive.",
    "start": "5048295",
    "end": "5056060"
  },
  {
    "text": "If you have 100 of those instances\neach with two drives then the cardinality of this is 200.",
    "start": "5057170",
    "end": "5062780"
  },
  {
    "text": "Now suppose you have a CloudWatch\nmetric called ‘Response Latency,’ whose dimensions are the server’s\ninstance ID, the customer ID.",
    "start": "5064160",
    "end": "5073650"
  },
  {
    "text": "And suppose that I have a hundred\nservers and one million customers.",
    "start": "5075160",
    "end": "5079940"
  },
  {
    "text": "The cardinality of that metric\nwill be 100 million. Creating a 100 million metrics\nin CloudWatch",
    "start": "5080790",
    "end": "5088423"
  },
  {
    "text": "will be rather expensive, inefficient,\nand difficult to analyze.",
    "start": "5088490",
    "end": "5092730"
  },
  {
    "text": "Now suppose we have\nthousands of hosts, millions of accounts\nand billions of records,",
    "start": "5093660",
    "end": "5099960"
  },
  {
    "text": "the level of cardinality in a data\nset like this makes it impossible to use standard metrics\nand tools to investigate problems",
    "start": "5100960",
    "end": "5108052"
  },
  {
    "text": "and to understand\nthe impact of events. Graphing individual data points\nalso loses the context of a metric.",
    "start": "5108120",
    "end": "5115620"
  },
  {
    "text": "Imagine a request log that measured\nwhich server took the request, which account made it,\nand how long it took.",
    "start": "5116680",
    "end": "5123930"
  },
  {
    "text": "If you graphed requests, account,\nand time individually, there’s no way\nto cross reference them.",
    "start": "5125290",
    "end": "5131040"
  },
  {
    "text": "All of the details in relationships\nthat are in the logs are lost. If there is a fault there is\nno way of telling which server",
    "start": "5131910",
    "end": "5138823"
  },
  {
    "text": "that it came from or, more importantly,\nwhich users were affected.",
    "start": "5138890",
    "end": "5143000"
  },
  {
    "text": "You won’t be able to tell\nif the faults happened for all requests\nor just specific ones.",
    "start": "5144330",
    "end": "5150210"
  },
  {
    "text": "But since now we have\nall your data in one place, you can start to understand",
    "start": "5153150",
    "end": "5158763"
  },
  {
    "text": "how your metrics interact\nwith each other. And this is where\nthe real cool stuff happens.",
    "start": "5158830",
    "end": "5165429"
  },
  {
    "text": "Let’s say you’re monitoring\nyour API you have a graph like this. There’s probably\na few questions",
    "start": "5165950",
    "end": "5172253"
  },
  {
    "text": "that you’re going to have\nto answer right away. Which API is failing?\nHow many customers are impacted?",
    "start": "5172320",
    "end": "5180020"
  },
  {
    "text": "Which customers\nare impacted the most? Is it one bad host or multiple?",
    "start": "5180550",
    "end": "5185230"
  },
  {
    "text": "Which shards, partitions,\nbuckets are having issues. Finding these answers\nin high cardinality data",
    "start": "5186140",
    "end": "5192503"
  },
  {
    "text": "is exactly why we build\nContributor Insights. With Contributor Insights, you can\nanalyze logs to dynamically extract",
    "start": "5192570",
    "end": "5200873"
  },
  {
    "text": "and report on contributor data. Our goal is to make it easy\nto take a graph like this",
    "start": "5200940",
    "end": "5207900"
  },
  {
    "text": "and to show you\nwhat’s contributing to the change. You can see metrics\nabout top-end contributors,",
    "start": "5208670",
    "end": "5215360"
  },
  {
    "text": "the total number of unique\ncontributors and their usage. For example,\ncan you find bad hosts,",
    "start": "5215880",
    "end": "5222340"
  },
  {
    "text": "identify the heaviest\nnetwork users, or find URLs that generate\nthe most errors?",
    "start": "5222960",
    "end": "5227890"
  },
  {
    "text": "And of course your metrics\nare related we can graph and report on metrics\nas they relate to each other.",
    "start": "5228920",
    "end": "5235110"
  },
  {
    "text": "Now let’s take\nour API faults example and show you\nhow contributive insights lets you find out\nwhat the problem is.",
    "start": "5236790",
    "end": "5243080"
  },
  {
    "text": "Let’s start with a series of logs\nthat just include a few fields. UI, host, customer ID,",
    "start": "5244710",
    "end": "5250762"
  },
  {
    "text": "and whether the request failed or not.",
    "start": "5250830",
    "end": "5254900"
  },
  {
    "text": "Using CloudWatch alarms,\nwe’re going to learn that a number of API failures\ninvolve a value that we defined.",
    "start": "5256560",
    "end": "5262040"
  },
  {
    "text": "So we open contributive insights and look at a few rules\nthat we have already defined.",
    "start": "5263270",
    "end": "5267620"
  },
  {
    "text": "First, we can look at the rule that shows top five failures\nby request time.",
    "start": "5268470",
    "end": "5272429"
  },
  {
    "text": "So it doesn’t look like the problem\nis specific to any API. Now what if you fail it,\nlook at it, by host.",
    "start": "5274410",
    "end": "5281060"
  },
  {
    "text": "Ah, so host A has the failure. Let’s say we fix it and want to know\nwhich customers were most impacted",
    "start": "5282190",
    "end": "5290273"
  },
  {
    "text": "so we can contact them. You can build whatever rules\nyou need to understand",
    "start": "5290340",
    "end": "5295323"
  },
  {
    "text": "which metric is contributing to\nthe behavior of your application.",
    "start": "5295390",
    "end": "5298870"
  },
  {
    "text": "If you needed to reference these regularly you could generate\npersistent graphs from these rules",
    "start": "5300460",
    "end": "5305513"
  },
  {
    "text": "and add to them\nyour dashboards and alarms. We are providing built-in rules\nthat you can use to analyze metrics",
    "start": "5305580",
    "end": "5313063"
  },
  {
    "text": "from other AWS services. For example,\nwith Dynamo DB rules,",
    "start": "5313130",
    "end": "5318403"
  },
  {
    "text": "you can quickly determine\nwhich items or partition keys are the cause of any shuttling that\nis happening in your database.",
    "start": "5318470",
    "end": "5325580"
  },
  {
    "text": "With Contributor Insights, you have\nthe power to understand cause, impact and blast radius of faults\nquickly and easily.",
    "start": "5326920",
    "end": "5335770"
  },
  {
    "text": "This re:Invent will also\nannounce Amazon DevOps Guru.",
    "start": "5337966",
    "end": "5342139"
  },
  {
    "text": "DevOps Guru takes the expertise that we’ve built from operating\nthe infrastructure",
    "start": "5343250",
    "end": "5348463"
  },
  {
    "text": "and detecting failures\nover the last 20 years, into a service.",
    "start": "5348530",
    "end": "5353326"
  },
  {
    "text": "It uses machine learning\nto identify potential issues inside of your account",
    "start": "5353840",
    "end": "5358380"
  },
  {
    "text": "and also provide links\nto recommend fixes. Available through the console,",
    "start": "5359001",
    "end": "5365653"
  },
  {
    "text": "you can search\nand visualize operational data across Amazon CloudWatch, AWS",
    "start": "5365720",
    "end": "5370773"
  },
  {
    "text": "Config, AWS CloudTrail, AWS\nCloudFormation, and AWS X-Ray.",
    "start": "5370840",
    "end": "5375599"
  },
  {
    "text": "For example, DevOps Guru can predict\nwhen the amount of data in an RDS",
    "start": "5376770",
    "end": "5382073"
  },
  {
    "text": "database will exceed\nyou provision storage. This would have been great\nfor Brainly",
    "start": "5382140",
    "end": "5388313"
  },
  {
    "text": "during the early stages\nof the pandemic since this one was of the services\nthey were scaling manually.",
    "start": "5388380",
    "end": "5393600"
  },
  {
    "text": "It’s all recommended changes\nto instance sizes and configurations,",
    "start": "5394910",
    "end": "5399650"
  },
  {
    "text": "before an application\nruns out of resources. Now, the last requirement\nof an observable system is tracing.",
    "start": "5400200",
    "end": "5409369"
  },
  {
    "text": "Most application requests\ninvolve many services working together\nto fulfill the request.",
    "start": "5410540",
    "end": "5415179"
  },
  {
    "text": "Even simple 3-tier apps\nhave to pass through a load balancer, to servers and a database.\nWhen working on a distributed system,",
    "start": "5416540",
    "end": "5424893"
  },
  {
    "text": "tracing the source of intermittent\nand undetermined failures can be extremely difficult.",
    "start": "5424960",
    "end": "5431010"
  },
  {
    "text": "And this can be mitigated\nby the use of a request ID that’s passed through\nevery layer of your stack.",
    "start": "5432110",
    "end": "5438340"
  },
  {
    "text": "A trace ID is a unique identifier\nthat is stamped on the request by the Front Door service.",
    "start": "5439100",
    "end": "5444826"
  },
  {
    "text": "From there,\nthe trace ID is propagated to every other service\nthe request touches.",
    "start": "5445521",
    "end": "5450690"
  },
  {
    "text": "If you’ve ever logged\na support into S3, you have been asked to provide this.",
    "start": "5451890",
    "end": "5456924"
  },
  {
    "text": "For S3 the X-AMZ-Request-ID is an ID that is passed to every\none of the services that make up S3.",
    "start": "5457470",
    "end": "5465059"
  },
  {
    "text": "This allows us to correlate logs\nbetween different backend services.",
    "start": "5466260",
    "end": "5470449"
  },
  {
    "text": "It helps us understand exactly which\nhosts and services serve the request,",
    "start": "5471330",
    "end": "5476970"
  },
  {
    "text": "to find any errors\nassociated with it. Tracing provides you\nwith the ability to understand",
    "start": "5477810",
    "end": "5484662"
  },
  {
    "text": "exactly what happens\nthroughout your entire system. But, let me repeat this.",
    "start": "5484730",
    "end": "5492000"
  },
  {
    "text": "You must pass the trace ID between\nyour tiers and put it in your logs.",
    "start": "5492570",
    "end": "5498070"
  },
  {
    "text": "They make extensive use of canaries\nto monitor our system. The term ‘canaries’\nactually comes from coal miners.",
    "start": "5499200",
    "end": "5506010"
  },
  {
    "text": "They placed canaries in the mines\nto know when there was a problem. And because they are smaller\nand more sensitive,",
    "start": "5506770",
    "end": "5513800"
  },
  {
    "text": "the canary would get sick and stop\nsinging before any of the miners did. For application monitoring,\nyour canary has the same purpose.",
    "start": "5514320",
    "end": "5522929"
  },
  {
    "text": "Canaries perform the same actions\nas your customers. They continuously verify\nyour customer experience",
    "start": "5523650",
    "end": "5530470"
  },
  {
    "text": "even when you don’t have\nany customer traffic. Canaries should run continuously,\nand especially during deployments,",
    "start": "5531030",
    "end": "5538620"
  },
  {
    "text": "and alarm any time\nthere is something unexpected. Even if your application\nhasn’t failed,",
    "start": "5539460",
    "end": "5546260"
  },
  {
    "text": "a canary can give you\nan early warning by alerting when something took,\nfor example, longer than expected.",
    "start": "5547030",
    "end": "5551870"
  },
  {
    "text": "And to build your own canaries\nwe have CloudWatch Synthetics. Canaries built with CloudWatch\nSynthetics are NodeJS scripts,",
    "start": "5553040",
    "end": "5560722"
  },
  {
    "text": "they run as Lambda functions\nin your account. They work for both HTTP and HTTPS\nand can test for UI components",
    "start": "5560790",
    "end": "5569043"
  },
  {
    "text": "by providing programmatic access\nto a headless Google Chrome.",
    "start": "5569110",
    "end": "5572500"
  },
  {
    "text": "One of the great things\nabout building canaries with CloudWatch Synthetics is that it integrates\nwith CloudWatch Service Lens,",
    "start": "5574210",
    "end": "5582043"
  },
  {
    "text": "and AWS X-Ray, to provide a graphical\nend-to-end view of the services\nin your application.",
    "start": "5582110",
    "end": "5589020"
  },
  {
    "text": "Now, I would like to introduce now,\nBecky Weiss. She is a Senior Principal Engineer\nwho worked on many of our systems,",
    "start": "5591040",
    "end": "5598413"
  },
  {
    "text": "including AWS IAM,\nAmazon VPC and Lambda.",
    "start": "5598480",
    "end": "5602970"
  },
  {
    "text": "Becky is one of the many experts\nwe have on monitoring. She has some insights into how\nAmazon engineers think about data",
    "start": "5604120",
    "end": "5612920"
  },
  {
    "text": "and why it’s unique. Thank you, Werner, and welcome\nto all you re:Invent attendees.",
    "start": "5613760",
    "end": "5618949"
  },
  {
    "text": "My name is Becky Weiss,\nI am an engineer at AWS, or, as we like to call it here,\na ‘service owner’, and it’s my honor to give you\nthe AWS service owner’s perspective",
    "start": "5619530",
    "end": "5628003"
  },
  {
    "text": "on this topic of monitoring\nand observability. Now if you ever read anything\nabout how Amazon does business,",
    "start": "5628070",
    "end": "5633253"
  },
  {
    "text": "you know that a principle\nsitting in the middle of everything we do\nis customer obsession. And our principle doesn’t stop\nat our product roadmap,",
    "start": "5633320",
    "end": "5640552"
  },
  {
    "text": "rather it extends into every aspect\nof how we operate our services. And yes, maybe even especially\nhow we think",
    "start": "5640620",
    "end": "5648263"
  },
  {
    "text": "about the eventuality of failure. Everything fails eventually,\nyou know that,",
    "start": "5648330",
    "end": "5653383"
  },
  {
    "text": "and you design\nin a way that expects it. And for me and for the many\ntalented operators that I get to work with at AWS,",
    "start": "5653450",
    "end": "5659823"
  },
  {
    "text": "the name of the game is whether\nwe can see these signals of impending failure\nbefore our customers",
    "start": "5659890",
    "end": "5665773"
  },
  {
    "text": "actually experience failure.\nSo how do we do that? Well, we’ve got our logging system,\nwe’ve got our graphs,",
    "start": "5665840",
    "end": "5671453"
  },
  {
    "text": "we’ve got our dashboards,\nwe’ve got great tools, we continually invest heavily\nin those tools, we are never done.",
    "start": "5671520",
    "end": "5677523"
  },
  {
    "text": "And you might be expecting me\nto say next that it’s all automated, and maybe it’ll surprise\nyou to hear this",
    "start": "5677590",
    "end": "5682972"
  },
  {
    "text": "from an AWS engineer,\nbut automation is necessary but not completely sufficient\nfor operational excellence.",
    "start": "5683040",
    "end": "5690203"
  },
  {
    "text": "Don’t get me wrong, automation\ndoes play a large role, and we rely on it heavily,\nso what’s the rest of it?",
    "start": "5690270",
    "end": "5696262"
  },
  {
    "text": "Mindset and experience. The good old-fashioned practice\nof a human brain doing what the human brain does,\nlooking for patterns,",
    "start": "5696330",
    "end": "5702623"
  },
  {
    "text": "and being curious\nabout what it sees. We train our operators\nto be optimistic pessimists, they are optimistic\nabout the business",
    "start": "5702690",
    "end": "5709193"
  },
  {
    "text": "and ever-expanding universe\nof possibilities it creates for our customers,\nbut we’re pessimistic and curious",
    "start": "5709260",
    "end": "5716173"
  },
  {
    "text": "when it comes\nto operational health. For a couple of minutes, we are going\nto have a little bit of fun.",
    "start": "5716240",
    "end": "5721483"
  },
  {
    "text": "I am going to take you\ninto the human side of all of these things\nthat we measure, plot and chart. I am going to show you graphs\nlike the ones we see,",
    "start": "5721550",
    "end": "5728499"
  },
  {
    "text": "take you through what we think\nabout them and the questions we ask. And to do that,\nI am going to take you",
    "start": "5729040",
    "end": "5734323"
  },
  {
    "text": "through three contrived scenarios. These aren’t real graphs,\nI actually drew them by hand,",
    "start": "5734390",
    "end": "5739130"
  },
  {
    "text": "but they’re similar\nto the ones we see, and I am going to take you inside\nour brains as we look at them.",
    "start": "5739640",
    "end": "5744250"
  },
  {
    "text": "Here’s our first fake graph.\nWell, we’re privileged here at AWS to get to work with a lot of graphs\nshaped like this one,",
    "start": "5744790",
    "end": "5750493"
  },
  {
    "text": "and I hope you are too\nin your business, because this graph shows\nmore volume over time. That’s great,\nthat’s business success.",
    "start": "5750560",
    "end": "5757150"
  },
  {
    "text": "Alright. Now I’m going to show you a\ndifferent graph for the same service. This graph is measuring\nsomething where more of it,",
    "start": "5758320",
    "end": "5765523"
  },
  {
    "text": "higher value, is worse. It could be latency,\nit could be other things that negatively correlate\nwith your customer experience,",
    "start": "5765590",
    "end": "5771783"
  },
  {
    "text": "like maybe how long it takes\nto complete a workflow or process a chunk of data.\nSo what do I see here?",
    "start": "5771850",
    "end": "5777293"
  },
  {
    "text": "Well, I see that as my business\ngrows over time, this metric’s growing too,\nand that’s bad.",
    "start": "5777360",
    "end": "5782110"
  },
  {
    "text": "And not only that, but it’s getting\nmore variable, and that’s bad too. So now I can’t tell you exactly\nwhat’s going wrong here,",
    "start": "5782630",
    "end": "5789043"
  },
  {
    "text": "it’s fake, I literally\ncan’t tell you that. But at AWS, based on\nour experience at scale,",
    "start": "5789110",
    "end": "5794403"
  },
  {
    "text": "I could almost guarantee you\nfrom a graph like this that we’re approaching\nsome kind of constraint,",
    "start": "5794470",
    "end": "5799763"
  },
  {
    "text": "limit, contended resource, maybe a new pattern\nthat we didn’t know about before. And we might even be starting\nto bump our heads on it,",
    "start": "5799830",
    "end": "5806892"
  },
  {
    "text": "even if, from\na customer’s perspective, things are still mostly fine. So we are always actively\nlooking for shapes like this",
    "start": "5806960",
    "end": "5813733"
  },
  {
    "text": "on our dashboards, because sometimes these things\ndo take quite a bit of work to find and fix\nand we make those investments.",
    "start": "5813800",
    "end": "5820110"
  },
  {
    "text": "Okay, here’s our second graph. So we followed best practices,\nour service runs canaries",
    "start": "5821310",
    "end": "5826443"
  },
  {
    "text": "that automate end-to-end scenarios\nthat ensure they are working. Yours should too, we talked\na little bit before",
    "start": "5826510",
    "end": "5831563"
  },
  {
    "text": "about CloudWatch Synthetics\nas a great tool to help you do this. So, we have a graph of failures,\nand it looks like we’ve failed a run,",
    "start": "5831630",
    "end": "5838460"
  },
  {
    "text": "so you review it,\nmaybe you even know why, like maybe you knew that\na direct dependency of yours was having a problem\nduring that minute.",
    "start": "5839140",
    "end": "5845030"
  },
  {
    "text": "But again, let’s look at it\nthrough that mindset of that curious\noptimist/pessimist.",
    "start": "5845790",
    "end": "5850360"
  },
  {
    "text": "There is a lot of empty space\nin this picture. So I know what happened\nduring that one minute, my canary failed is what happened.\nBut what about all that other time?",
    "start": "5851050",
    "end": "5859219"
  },
  {
    "text": "I don’t know. It could be good news,\nit could be bad news. No news could be good news,\nbecause it didn’t fail.",
    "start": "5860090",
    "end": "5865873"
  },
  {
    "text": "It could also be bad news because maybe the canary\ncouldn’t even fun for some reason. I don’t know.\nAnd we don’t like not knowing.",
    "start": "5865940",
    "end": "5873673"
  },
  {
    "text": "So if we see a graph like that, and it’s something we monitor\nand care about, we want this graph instead.",
    "start": "5873740",
    "end": "5878940"
  },
  {
    "text": "We want that canary posting a\nzero value when it runs and succeeds, because then we know that no news\nis bad news, so we can take action.",
    "start": "5879490",
    "end": "5887000"
  },
  {
    "text": "Okay, final example, I’ll show you\na little bit of good news. This one looks good, right, I am measuring my latencies\nand percentiles.",
    "start": "5888460",
    "end": "5896052"
  },
  {
    "text": "I’ve got 99th percentile here, I’ve set an alarm threshold\nthat’s meaningful to me and my customers,\nmm, pretty good, yeah, great job.",
    "start": "5896120",
    "end": "5903440"
  },
  {
    "text": "And you know what we would do\nwith a graph like this? We’d lower the threshold.\nWhy did we lower that threshold?",
    "start": "5904230",
    "end": "5910370"
  },
  {
    "text": "Because, typically,\nthe original threshold, we would have put\nsome thought into, we would have set it well\nwithin the bounds",
    "start": "5910920",
    "end": "5915923"
  },
  {
    "text": "of what we’ve determined to be\nan acceptable customer experience, so our customers were fine with\nanything under that original line.",
    "start": "5915990",
    "end": "5922463"
  },
  {
    "text": "But once again,\na lot can happen under that line. The graph could go like this. And even if our customers\nwouldn’t have been affected,",
    "start": "5922530",
    "end": "5929653"
  },
  {
    "text": "it’s a signal for us curious\npessimists that something changed. We want to know what that is,\nmaybe do something about it",
    "start": "5929720",
    "end": "5935683"
  },
  {
    "text": "if there’s a new constraint\nbeing quietly encountered. Okay, now all that might have just\nlooked like obvious commonsense.",
    "start": "5935750",
    "end": "5941443"
  },
  {
    "text": "You know what it is. But the reality is,\nwhen you go around and you look\nat the various approaches to operations out there in the world,\nthere is a wide range.",
    "start": "5941510",
    "end": "5948340"
  },
  {
    "text": "Everybody has got\ntheir metrics around latency and service faults and great tools,\nbut what about your mindset?",
    "start": "5949010",
    "end": "5954203"
  },
  {
    "text": "Are you measuring the things\nyour customers care about? And if it were to change,\nwould you get that signal?",
    "start": "5954270",
    "end": "5960473"
  },
  {
    "text": "Are you looking at that data\nlike a curious optimistic pessimist? The operationally trained brain\nis primed to ask these questions.",
    "start": "5960540",
    "end": "5968389"
  },
  {
    "text": "I personally find\noperating AWS services with that mindset to be one of\nthe most interesting and rewarding things I have\never had the opportunity to do.",
    "start": "5969200",
    "end": "5976543"
  },
  {
    "text": "And if you approach\noperating your own systems with that same sense\nof curiosity, I bet you’ll find the same\nover wherever you are,",
    "start": "5976610",
    "end": "5983703"
  },
  {
    "text": "doing whatever it is\nthat you do in the cloud. Thank you very much. And have a wonderful re:Invent.\nHappy operating.",
    "start": "5983770",
    "end": "5990530"
  },
  {
    "text": "Thanks, Becky.\nI think you’re absolutely right. At the end of the day,",
    "start": "5991390",
    "end": "5996613"
  },
  {
    "text": "all these systems\nare being monitored by humans. They’ll all just guessing\nwhat method you think",
    "start": "5996680",
    "end": "6002412"
  },
  {
    "text": "we are going to need\nand where they should alarm. For example, when your metrics\nfallout a particular ways",
    "start": "6002480",
    "end": "6008723"
  },
  {
    "text": "for a certain time period. We talked a lot\nabout CloudWatch today,",
    "start": "6008790",
    "end": "6013370"
  },
  {
    "text": "but when it comes to collecting and\nvisualizing modern operations data, there are a few open source tools\nthat have become very popular.",
    "start": "6014180",
    "end": "6022409"
  },
  {
    "text": "As part of the Cloud Computing\nNative Foundation, or actually I say that wrong,\nCloud Native Computing Foundation,",
    "start": "6023467",
    "end": "6031083"
  },
  {
    "text": "Prometheus is a tool\nthat makes it easy for customers to monitor container\nenvironments at scale.",
    "start": "6031770",
    "end": "6037330"
  },
  {
    "text": "Grafana is an open\nsource project for interactive data\nvisualization services",
    "start": "6038660",
    "end": "6044300"
  },
  {
    "text": "used for monitoring\nand alarming, that’s commonly used with\nthe Prometheus open source project.",
    "start": "6044810",
    "end": "6051140"
  },
  {
    "text": "Grafana supports\nmultiple data sources, such as Prometheus,\nAmazon CloudWatch, AWS",
    "start": "6052470",
    "end": "6059133"
  },
  {
    "text": "X-Ray,\nElasticsearch and AWS Timestream, allowing for the creation\nof dashboards",
    "start": "6059200",
    "end": "6065633"
  },
  {
    "text": "and alerts\nfrom multiple sources. Although it’s easy\nto deploy a single",
    "start": "6065700",
    "end": "6071103"
  },
  {
    "text": "Prometheus or Grafana\nserver in AWS, it can take weeks of work\nto scale across multiple servers",
    "start": "6071170",
    "end": "6078503"
  },
  {
    "text": "and configure the entire environment\nfor high availability.",
    "start": "6078570",
    "end": "6082340"
  },
  {
    "text": "So I am excited to announce Amazon Managed Service\nfor Grafana and Prometheus.",
    "start": "6083870",
    "end": "6089400"
  },
  {
    "text": "Using these services, we will manage the provisioning\nand setup for Prometheus",
    "start": "6090870",
    "end": "6095350"
  },
  {
    "text": "along with, of course, ongoing\nmaintenance and scaling operations. The Prometheus Query Language\nis optimized",
    "start": "6096020",
    "end": "6103083"
  },
  {
    "text": "for large volumes of data,\ncommonly in container monitoring.",
    "start": "6103150",
    "end": "6107980"
  },
  {
    "text": "This makes it easy\nto search and group metrics, such as CPU memory and latency\nat a granular level",
    "start": "6109070",
    "end": "6117693"
  },
  {
    "text": "so the container issues can be\nisolated and alarmed on quickly.",
    "start": "6117760",
    "end": "6121539"
  },
  {
    "text": "Engineering teams can use the same\nfamiliar Prometheus Query Language to filter, aggregate\nand alarm on metrics",
    "start": "6123140",
    "end": "6130433"
  },
  {
    "text": "and quickly gain\nperformance visibility without any code changes.",
    "start": "6130500",
    "end": "6134880"
  },
  {
    "text": "The Amazon Managed Service\nfor Grafana makes it simple\nfor engineering teams to query, visualize and alert\non data services",
    "start": "6135880",
    "end": "6143763"
  },
  {
    "text": "such as metrics, logs and traces,\nno matter where they are stored.",
    "start": "6143830",
    "end": "6148030"
  },
  {
    "text": "These services are available\ntoday as a preview on AWS.",
    "start": "6149590",
    "end": "6153949"
  },
  {
    "text": "When it comes to observability, we talked a lot about CloudWatch\nand other AWS services.",
    "start": "6155990",
    "end": "6161240"
  },
  {
    "text": "But AWS isn’t the only company\nbuilding these services. And I’ve always said that AWS is\nso much more than just AWS services.",
    "start": "6162650",
    "end": "6173220"
  },
  {
    "text": "And I’d be remiss if I didn’t\nrecognize all the tools being developed for a complete\nmonitoring and alerting ecosystem.",
    "start": "6174170",
    "end": "6181250"
  },
  {
    "text": "We have great partners who are\nalso operating in this space, like Sumo Logic and Splunk\nand Datadog",
    "start": "6182410",
    "end": "6188603"
  },
  {
    "text": "and New Relic and AppDynamics. But all these have a different\napproach to collecting data.",
    "start": "6188670",
    "end": "6194240"
  },
  {
    "text": "And it can be challenging\nto combine the different approaches, which is something the Cloud\nNative Computing Foundation",
    "start": "6195450",
    "end": "6201863"
  },
  {
    "text": "is trying to create\na foundational approach for, with the OpenTelemetry Project.",
    "start": "6201930",
    "end": "6208273"
  },
  {
    "text": "Open Telemetry provides open source\nAPIs, libraries and agents, to collect traces and metrics\nvia partition monitoring.",
    "start": "6208340",
    "end": "6215340"
  },
  {
    "text": "The AWS distro for OpenTelemetry\nconsists of collectors that are built\ninto the application",
    "start": "6216630",
    "end": "6222543"
  },
  {
    "text": "and exporters that send data back\nto backend analytics targets.",
    "start": "6222610",
    "end": "6226900"
  },
  {
    "text": "In addition to supporting AWS\ntargets like CloudWatch and X-Ray, customers can also send traces\nand application metrics",
    "start": "6227870",
    "end": "6235153"
  },
  {
    "text": "to a number of AWS partners\nand third-party providers. The distro for OpenTelemetry",
    "start": "6235220",
    "end": "6241833"
  },
  {
    "text": "simplifies the process\nof collecting data by allowing you to instrument\nyour applications just once,",
    "start": "6241900",
    "end": "6248250"
  },
  {
    "text": "instead of using\nmultiple tools from different vendors to collect metrics and traces.",
    "start": "6248950",
    "end": "6253490"
  },
  {
    "text": "We are excited about\nthe OpenTelemetry Project and, in addition\nto providing this distribution,",
    "start": "6254010",
    "end": "6260150"
  },
  {
    "text": "we are also contributing\nto the upstream project for a number of components. Now, no matter\nhow you choose to log,",
    "start": "6260820",
    "end": "6268313"
  },
  {
    "text": "monitor, trace and alert,\nthere is a tool that fits your needs.",
    "start": "6268380",
    "end": "6273150"
  },
  {
    "text": "[music playing]",
    "start": "6274149",
    "end": "6282906"
  },
  {
    "text": "We have covered\na lot of ground today. We have talked about\nthe importance of development,",
    "start": "6283904",
    "end": "6288630"
  },
  {
    "text": "how to build dependable applications,\nand how to effectively run them.",
    "start": "6289180",
    "end": "6293450"
  },
  {
    "text": "If you paid close attention, you will notice that there has been\na trend with all these things.",
    "start": "6294750",
    "end": "6299350"
  },
  {
    "text": "More and more AWS is taking tasks\nthat can be slow, difficult, or time-consuming,\nand making them easier to use",
    "start": "6300360",
    "end": "6308733"
  },
  {
    "text": "by using advanced technologies\nto simplify them. These technologies can include\nautomated reasoning,",
    "start": "6308800",
    "end": "6315383"
  },
  {
    "text": "or even machine learning. Take this AWS Panorama\nappliance, for example.",
    "start": "6315450",
    "end": "6321100"
  },
  {
    "text": "This device allows you\nto deploy machine learning models to existing\nindustrial cameras,",
    "start": "6322020",
    "end": "6327303"
  },
  {
    "text": "like the ones that will be here\nin this factory. With this device a business\ncould run computer vision models",
    "start": "6327370",
    "end": "6334003"
  },
  {
    "text": "for tasks such\nas quality control, or part identification or security\nor workplace safety.",
    "start": "6334070",
    "end": "6341230"
  },
  {
    "text": "And this isn’t changing\nany of the processes that weren’t already done, but it’s improving them\nand allowing the operators",
    "start": "6342680",
    "end": "6350282"
  },
  {
    "text": "who perform them\nto work more efficiently. Or there’s Amazon Lookout\nfor Equipment,",
    "start": "6350350",
    "end": "6356660"
  },
  {
    "text": "a machine learning service that detects abnormal equipment\nbehavior using IoT sensors.",
    "start": "6357530",
    "end": "6363110"
  },
  {
    "text": "As technologies advance, you will continue to see\nthese technologies improve our work.",
    "start": "6364340",
    "end": "6369440"
  },
  {
    "text": "So instead we can\nall be more efficient. At AWS, with every\nnew service we build,",
    "start": "6370070",
    "end": "6376340"
  },
  {
    "text": "we ask how we can make it better\nby using machine learning. And you can see this\nwith many of the services",
    "start": "6377190",
    "end": "6383143"
  },
  {
    "text": "we’ve released over the past\nfew weeks around databases, security, and operations.",
    "start": "6383210",
    "end": "6387760"
  },
  {
    "text": "These aren’t machine\nlearning services, but they are services\nenhanced by machine learning.",
    "start": "6389330",
    "end": "6394630"
  },
  {
    "text": "Amazon isn’t alone\nin doing this. Just like Ava, businesses around\nthe world are integrating machine",
    "start": "6396170",
    "end": "6401923"
  },
  {
    "text": "learning in its existing applications and data to get more value out\nof what they already have.",
    "start": "6401990",
    "end": "6407230"
  },
  {
    "text": "As technology that powers\nour work advances, we will continue to chip away\nat the heavy lifting",
    "start": "6408640",
    "end": "6414283"
  },
  {
    "text": "that we all do\non a daily basis. So, as you are building\nor using a system,",
    "start": "6414350",
    "end": "6418949"
  },
  {
    "text": "take a few minutes to think about\nwhich parts can evolve\nfrom simple automation,",
    "start": "6419780",
    "end": "6424920"
  },
  {
    "text": "and can make use\nof advanced technologies such as machine learning. You might be surprised by all\nthe places that ML can help.",
    "start": "6425580",
    "end": "6434490"
  },
  {
    "text": "When we started today,\nwe talked a lot about how AWS is meeting\ndevelopers where there are.",
    "start": "6437030",
    "end": "6442190"
  },
  {
    "text": "And what if we applied machine\nlearning to that? Services like Amazon CodeGuru\nwere built to solve problems",
    "start": "6443630",
    "end": "6451163"
  },
  {
    "text": "exactly like this.\nWhen you are writing software, there are a lot of things\nthat need to be checked.",
    "start": "6451230",
    "end": "6458510"
  },
  {
    "text": "Problems like memory leaks,\nor hard coded credentials and duplicate lines\nafter refactoring,",
    "start": "6459910",
    "end": "6465650"
  },
  {
    "text": "which won’t prevent\nyour code from compiling, but can still cause problems\nfor your application.",
    "start": "6466840",
    "end": "6472170"
  },
  {
    "text": "Typically, these problems\nare identified during when your code reviews\nbefore branches are merged.",
    "start": "6473610",
    "end": "6478820"
  },
  {
    "text": "But these are difficult tasks,\nand some vulnerabilities are easy to miss,",
    "start": "6480100",
    "end": "6485563"
  },
  {
    "text": "especially if there are many changes\nthat are happening at once. And that’s why we build\nAmazon CodeGuru.",
    "start": "6485630",
    "end": "6491480"
  },
  {
    "text": "CodeGuru uses machine\nlearning to automate code you’ve used during\napplication development",
    "start": "6492610",
    "end": "6498500"
  },
  {
    "text": "and to profile applications\nafter they have been deployed. As code is checked in,\nCodeGuru reviewer",
    "start": "6499260",
    "end": "6506583"
  },
  {
    "text": "will automatically\ngive you your code, just like a senior engineer\nin your team would do.",
    "start": "6506650",
    "end": "6511030"
  },
  {
    "text": "It provides advice on what’s wrong,\nand gives you links to documentation.",
    "start": "6512280",
    "end": "6516429"
  },
  {
    "text": "It was great, but how it works\nis that it does these checks automatically\nwhen you check in the code,",
    "start": "6517890",
    "end": "6523980"
  },
  {
    "text": "just like you would do\nwith another code review. This way you can find\nand fix problems early,",
    "start": "6525020",
    "end": "6531700"
  },
  {
    "text": "and the code reviews performed\nby members of your team can focus on more important aspects\nof your business logic.",
    "start": "6532320",
    "end": "6538000"
  },
  {
    "text": "CodeGuru Profiler, on the other hand,\nattaches to running applications in your test\nor production environment.",
    "start": "6539720",
    "end": "6546150"
  },
  {
    "text": "Using machine learning,\nit inspects your running applications in order to find\nperformance bottlenecks.",
    "start": "6547300",
    "end": "6553050"
  },
  {
    "text": "It allows you\nto troubleshoot latency, and CPU utilization issues.",
    "start": "6553850",
    "end": "6558330"
  },
  {
    "text": "Learn where you can\nreduce infrastructure costs. It identifies\napplication performance issues",
    "start": "6558890",
    "end": "6564579"
  },
  {
    "text": "by combining automated\nreviews from CodeGuru with the learnings from AWS\nFault Injection Simulator",
    "start": "6566219",
    "end": "6573350"
  },
  {
    "text": "and the recommendations\nfrom DevOps Guru, we can improve the entire\ndevelopment lifecycle",
    "start": "6573940",
    "end": "6580403"
  },
  {
    "text": "using machine learning.\nAnd this is just the beginning. There are so many parts\nof application development",
    "start": "6580470",
    "end": "6587823"
  },
  {
    "text": "that involve writing and rewriting\nbits of our applications that are essentially just plumbing\nand aren’t of any business value.",
    "start": "6587890",
    "end": "6595980"
  },
  {
    "text": "As the tools we use advance,\nmachine learning is going to continue to remove undifferentiated heavy\nlifting of building software.",
    "start": "6597570",
    "end": "6605830"
  },
  {
    "text": "Like machine learning, another field\nI am getting really excited about, and that I think is going\nto change our assumptions",
    "start": "6606780",
    "end": "6613543"
  },
  {
    "text": "about what is possible in the world,\nis quantum computing. I know. We’ve been hearing\nabout Quantum for years now,",
    "start": "6613610",
    "end": "6621253"
  },
  {
    "text": "and how it will be\nthe next big thing. I truly believe\nthat at some point",
    "start": "6621320",
    "end": "6626843"
  },
  {
    "text": "it will become the next\ngame-changing technology. It’s going to happen slow at first,",
    "start": "6626910",
    "end": "6632470"
  },
  {
    "text": "providing small optimizations\nand enhancements, but eventually it will revolutionize\nthe areas it is well-suited for.",
    "start": "6633060",
    "end": "6640190"
  },
  {
    "text": "Chemistry research,\ndrug discovery, material sciences, they are all going to be\nsome of the first industries",
    "start": "6642010",
    "end": "6648853"
  },
  {
    "text": "that will benefit\nfrom quantum computing. Just like GPUs have changed\nthe field of machine learning,",
    "start": "6648920",
    "end": "6655510"
  },
  {
    "text": "I believe that quantum processors\nwill eventually do the same for many of these\nscientific fields.",
    "start": "6656370",
    "end": "6661810"
  },
  {
    "text": "AWS is investing\nheavily in quantum. Our Quantum Solutions Lab\nconnects experts with organizations",
    "start": "6663090",
    "end": "6669943"
  },
  {
    "text": "to build internal expertise\nand strategies required to run\nquantum workloads.",
    "start": "6670010",
    "end": "6675340"
  },
  {
    "text": "The AWS Center for Quantum Computing\nis a partnership with Caltech where we are researching quantum\ncomputing algorithms and heart rate.",
    "start": "6676690",
    "end": "6684110"
  },
  {
    "text": "Just last week, our scientists\npublished a new research paper showing a theoretical quantum\ncomputing system with groundbreaking",
    "start": "6685620",
    "end": "6692983"
  },
  {
    "text": "improvements in error correction. We also launched Amazon Braket\nwhich democratizes access",
    "start": "6693050",
    "end": "6700613"
  },
  {
    "text": "to quantum resources\nfrom a number of providers. And this is where the power\nof the cloud really shines.",
    "start": "6700680",
    "end": "6707800"
  },
  {
    "text": "A popular use case of Braket is\nfor developers to learn to evaluate if quantum could enhance\ntheir workloads as it advances.",
    "start": "6708470",
    "end": "6716130"
  },
  {
    "text": "Historically, you’d have to wait\nfor technology like this to leave the research phase,",
    "start": "6717420",
    "end": "6722892"
  },
  {
    "text": "be turned into\na mass-produced product, and purchased at enormous cost.",
    "start": "6722960",
    "end": "6728150"
  },
  {
    "text": "Only then would you\nbe able to determine if it would actually help you. But making quantum computers\nan expert assistance available",
    "start": "6729530",
    "end": "6737213"
  },
  {
    "text": "to every developer today, we are helping AWS\ncustomers stay one step ahead.",
    "start": "6737280",
    "end": "6743000"
  },
  {
    "text": "As a software developer, now is the time to start thinking\nabout quantum computing.",
    "start": "6744290",
    "end": "6749500"
  },
  {
    "text": "It is the way that we are\nstarting to see machine learning make an impact\non our daily lives,",
    "start": "6750470",
    "end": "6755430"
  },
  {
    "text": "and the future that technologies\nlike quantum computing will enable that make me so excited about cloud\nand technology as a whole.",
    "start": "6756360",
    "end": "6764050"
  },
  {
    "text": "And I am excited to see\nhow developers will use these technologies to truly\nimprove the world around us.",
    "start": "6765560",
    "end": "6772090"
  },
  {
    "text": "I want to thank you for spending\ntime with me today as we explore this amazing space\nfor my favorite city.",
    "start": "6773880",
    "end": "6781290"
  },
  {
    "text": "This year has been challenging\nin a lot of ways, but I also believe that challenges\nare the best time to reflect",
    "start": "6782760",
    "end": "6789210"
  },
  {
    "text": "and think about\nwhether you are building the right services\nfor your customers.",
    "start": "6789860",
    "end": "6793800"
  },
  {
    "text": "We have talked about how AWS\nis meeting developers where they are, and that’s because\nyou are our customers.",
    "start": "6795240",
    "end": "6802380"
  },
  {
    "text": "As you develop your applications, think about what you can do to meet\nyour customers where they are.",
    "start": "6803550",
    "end": "6810200"
  },
  {
    "text": "Many of us have experienced\nsevere anxiety and uncertainty\nabout the future in the past year.",
    "start": "6811650",
    "end": "6817810"
  },
  {
    "text": "Uncertainty about their jobs,\nhealth, financial future, family, and much more.\nI strongly urge our customers,",
    "start": "6818520",
    "end": "6827723"
  },
  {
    "text": "for example those\nin financial services, to be conscious about this when they build new ways\nto engage their customers.",
    "start": "6827790",
    "end": "6834550"
  },
  {
    "text": "Address these important\nissues upfront, and let them come back,\nfor example, in the way you design\nyour interfaces,",
    "start": "6835810",
    "end": "6842810"
  },
  {
    "text": "or what services you could\nbuild for your customers that helps them in addressing\ntheir uncertainty.",
    "start": "6844270",
    "end": "6849560"
  },
  {
    "text": "For almost all of us, digital\nservices have become essential.",
    "start": "6851130",
    "end": "6855780"
  },
  {
    "text": "But this means that these services\nare not just for the digital natives with their fiber connections\nand the latest smartphones.",
    "start": "6857020",
    "end": "6863579"
  },
  {
    "text": "Consider the experiences\nyou are building for them, and how they access them.",
    "start": "6864880",
    "end": "6869760"
  },
  {
    "text": "Not everyone has 5G or even a strong\nWi-Fi connection at home.",
    "start": "6870290",
    "end": "6874380"
  },
  {
    "text": "If you build essential services, make sure they also work on low\nbandwidth, high latency connections.",
    "start": "6875403",
    "end": "6882400"
  },
  {
    "text": "There are enough news reports of kids having to go to the parking lot\nof a grocery store or a fast-food restaurant",
    "start": "6883530",
    "end": "6890693"
  },
  {
    "text": "to just get a decent\ninternet connection for school. The applications you build\nare essential for your customers,",
    "start": "6890760",
    "end": "6898750"
  },
  {
    "text": "whether you are\nbuilding a service that helps people budget\nwhat they have, and helps them predict\ntheir immediate financial future,",
    "start": "6899360",
    "end": "6906370"
  },
  {
    "text": "or maybe you are\nbuilding a website that helps people stay\nconnected to each other where they wouldn’t\nbe able to otherwise.",
    "start": "6907350",
    "end": "6913240"
  },
  {
    "text": "We, as developers, have\na responsibility to our customers",
    "start": "6913990",
    "end": "6919043"
  },
  {
    "text": "to build the best applications\nwe can for them in ways that take the current\nreality very seriously.",
    "start": "6919110",
    "end": "6926070"
  },
  {
    "text": "It's never been a better time\nto use your knowledge, skills and talents\nto make a difference in the world.",
    "start": "6928770",
    "end": "6934810"
  },
  {
    "text": "Now, go build. [music playing]",
    "start": "6936860",
    "end": "6946828"
  }
]