[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "so as you can see this is cloud formation under the hood my name is Adam Thomas this is DJ Edwards we're both",
    "start": "4440",
    "end": "9800"
  },
  {
    "text": "software Engineers of cloud formation and uh we're going to take questions at the end um so once we're done I'll just",
    "start": "9800",
    "end": "17400"
  },
  {
    "text": "throw it up to the mic and you can walk up and ask us questions for a while and",
    "start": "17400",
    "end": "23000"
  },
  {
    "text": "you'll and to get started so you might be asking yourself what is cloud formation un I'm going to",
    "start": "23480",
    "end": "30800"
  },
  {
    "start": "24000",
    "end": "80000"
  },
  {
    "text": "be mean and not go over that at all so hopefully you're Advanced users of cloud information there was a talk that uh",
    "start": "30800",
    "end": "37280"
  },
  {
    "text": "went into some more of the basics that was uh 0 to 68 cloud formation unfortunately that's already happened",
    "start": "37280",
    "end": "43120"
  },
  {
    "text": "but you can get the video online there are also some Hands-On Labs that you can walk up and uh learn about Cloud",
    "start": "43120",
    "end": "48360"
  },
  {
    "text": "information at your own pace so if you don't know Cloud information very well I don't want you to leave I just want you",
    "start": "48360",
    "end": "53559"
  },
  {
    "text": "to learn what you can go take a Hands-On lab and then apply what you learned today to your knowledge and cloud",
    "start": "53559",
    "end": "59280"
  },
  {
    "text": "formation so what are we going to go over I'm going to spend most of the talk on",
    "start": "59280",
    "end": "64400"
  },
  {
    "text": "custom resources so what they are what you can do with them and how you can write one and since DJ and I work on CFN",
    "start": "64400",
    "end": "71119"
  },
  {
    "text": "and nit we're going to work uh we're going to work some content in at the end um about some new things that you might",
    "start": "71119",
    "end": "76920"
  },
  {
    "text": "not know about with see if inet so let's jump into custom resources",
    "start": "76920",
    "end": "83040"
  },
  {
    "start": "80000",
    "end": "430000"
  },
  {
    "text": "and so we've identified basically four main things that cloud formation can do for you custom resources can do for you",
    "start": "83040",
    "end": "88560"
  },
  {
    "text": "you can add new resources um which you can kind of guess from the name you can also interact with the cloud information",
    "start": "88560",
    "end": "94040"
  },
  {
    "text": "workflow they create update and delete workflows you can get Dynamic data into a stack from uh sources other than",
    "start": "94040",
    "end": "101560"
  },
  {
    "text": "parameters and you can extend the capabilities of existing resources that cloud information can create for you",
    "start": "101560",
    "end": "108200"
  },
  {
    "text": "today so what is a custom resource it's an SNS topic but that on its own is not",
    "start": "108200",
    "end": "113280"
  },
  {
    "text": "very useful to you so you hook that SNS topic up to a service that can read Json messages that cloud information will",
    "start": "113280",
    "end": "119320"
  },
  {
    "text": "send to your service you manage the life cycle of a resource and then send a Json response back and that's how you",
    "start": "119320",
    "end": "125159"
  },
  {
    "text": "integrate into Cloud information so if we look at the um a",
    "start": "125159",
    "end": "131000"
  },
  {
    "text": "little snippet of what a custom resource might look like you can see it has a type of custom colon colon my custom",
    "start": "131000",
    "end": "137480"
  },
  {
    "text": "resource so you can put whatever you want after those two colons um and then",
    "start": "137480",
    "end": "143280"
  },
  {
    "text": "the properties there's only one required property and that's the service token",
    "start": "143280",
    "end": "148319"
  },
  {
    "text": "and you can see the format today is an s topic Arn so that's the topic Arn which will receive the messages from",
    "start": "148319",
    "end": "155400"
  },
  {
    "text": "cloudformation and then the the properties can be whatever you want you can name them whatever you want you can",
    "start": "155400",
    "end": "160599"
  },
  {
    "text": "have as many of them as can fit in the template and it can be of any Json structure and we'll just pass that on down to the custom resource",
    "start": "160599",
    "end": "167040"
  },
  {
    "text": "implementation to do with what you want so as long as they're valid Jason it can be anything we don't validate",
    "start": "167040",
    "end": "175159"
  },
  {
    "text": "them so let's jump into the first type of custom resource the adding a new resource",
    "start": "175159",
    "end": "180519"
  },
  {
    "text": "so a new resource is really anything that you can create update and delete um",
    "start": "180519",
    "end": "186599"
  },
  {
    "text": "you might be thinking well you already do ec2 instances autoscaling groups load balancers what really more do I need you",
    "start": "186599",
    "end": "191640"
  },
  {
    "text": "to add and I would encourage you to think outside the box and think about software resources the schema for your",
    "start": "191640",
    "end": "197519"
  },
  {
    "text": "database a Docker container um if you running an Apache server in your data center adding an entry to a",
    "start": "197519",
    "end": "204239"
  },
  {
    "text": "configuration file pointing at your config at your Cloud information stack is certainly a resource",
    "start": "204239",
    "end": "210799"
  },
  {
    "text": "so let's meet a user of custom resources and this is Steve Steve loves relational",
    "start": "210799",
    "end": "215879"
  },
  {
    "text": "databases if you ask him what version his application is he would tell you the version of his schema before he' tell",
    "start": "215879",
    "end": "221159"
  },
  {
    "text": "you the version of anything else but Steve doesn't want to run SQL scripts by hand he finds it very",
    "start": "221159",
    "end": "227360"
  },
  {
    "text": "dangerous he wants a more controlled environment for custom resources or for for uh for updating a",
    "start": "227360",
    "end": "233920"
  },
  {
    "text": "schema so he thinks the template since he loves cloud formation should Define his schema explicitly",
    "start": "233920",
    "end": "240920"
  },
  {
    "text": "when he wants to update his schema he should just call update stack and when something fails either in his schema",
    "start": "240920",
    "end": "247079"
  },
  {
    "text": "update or in a downstream resource the schema should roll back to the last known good",
    "start": "247079",
    "end": "253840"
  },
  {
    "text": "State and so Steve's solution is going to be to write a custom resource using liquibase liquibase is an open- Source",
    "start": "253840",
    "end": "261320"
  },
  {
    "text": "uh scheme and refactoring Tool there are a lot of tools like that out there this just happens to be the one that Steve knows best lucky for him liquid base",
    "start": "261320",
    "end": "268960"
  },
  {
    "text": "supports Jason formatting out of the box so he can inline Jason uh schema into",
    "start": "268960",
    "end": "274520"
  },
  {
    "text": "his template and pass it directly to liquibase so this is an Abridged version",
    "start": "274520",
    "end": "280759"
  },
  {
    "text": "of what the template will look like um you see we have the custom database schema of omitted a bunch of other stuff",
    "start": "280759",
    "end": "286639"
  },
  {
    "text": "to focus on this part the database change log that's the name of the uh",
    "start": "286639",
    "end": "292560"
  },
  {
    "text": "core object in a liquibase um schema document and so a database change log",
    "start": "292560",
    "end": "298960"
  },
  {
    "text": "has a list of ch sets that has a list of changes and so you can see here that there's one the first change set is",
    "start": "298960",
    "end": "305720"
  },
  {
    "text": "going to create a table with the name of person and then add some columns so let's take a look at this",
    "start": "305720",
    "end": "312400"
  },
  {
    "text": "live switch all right and since I don't want",
    "start": "312400",
    "end": "318400"
  },
  {
    "text": "to make you guys wait for an RDS database to create I've already created one for us um this schema demo stack if",
    "start": "318400",
    "end": "325720"
  },
  {
    "text": "we take a look at what the template looks like this is a little bit more um of the syntax so you can see that it's",
    "start": "325720",
    "end": "332800"
  },
  {
    "text": "describing um what the SQL schema will look like and so I have an ID column and",
    "start": "332800",
    "end": "338400"
  },
  {
    "text": "I have a fruit column and what I'd like to",
    "start": "338400",
    "end": "342960"
  },
  {
    "text": "do is add another column and so I add another change set to my my template and I just add a",
    "start": "344080",
    "end": "351639"
  },
  {
    "text": "vegetables column because I couldn't think of anything else so let's go ahead and call update",
    "start": "351639",
    "end": "356759"
  },
  {
    "text": "stack just like you would normally",
    "start": "356759",
    "end": "361440"
  },
  {
    "text": "with my",
    "start": "364880",
    "end": "367280"
  },
  {
    "text": "template all right and now let's go to kick off a cloud information workflow and I'm going to pull up the",
    "start": "372039",
    "end": "380400"
  },
  {
    "text": "schema right here and so you can see I have two columns in my example uh table ID and fruit and so",
    "start": "380400",
    "end": "391560"
  },
  {
    "text": "once we hit update and progress in the my DB schema now my code is running",
    "start": "392840",
    "end": "398560"
  },
  {
    "text": "that's going to call liquibase and so the time that spins an update in progress is largely going to be the time liquibase spins",
    "start": "398560",
    "end": "405880"
  },
  {
    "text": "running so we'll just wait for that to complete and now we went to update complete on the stack so I should be",
    "start": "407840",
    "end": "414000"
  },
  {
    "text": "able to if everything works correctly have a third column called vegetables",
    "start": "414000",
    "end": "420440"
  },
  {
    "text": "so that as you can see a simple update stack with some Json formatting uh updated the schema of my",
    "start": "420440",
    "end": "427960"
  },
  {
    "start": "430000",
    "end": "602000"
  },
  {
    "text": "database so let's look at the second type of custom resource which is a resource that interacts with the cloud information workflows that create update",
    "start": "431879",
    "end": "438680"
  },
  {
    "text": "and delete workflows there's a resource in the cloud information library today called weight condition that already",
    "start": "438680",
    "end": "445120"
  },
  {
    "text": "does this and it interacts with the create workflow so if you're installing software on an ec2 instance you use a",
    "start": "445120",
    "end": "450960"
  },
  {
    "text": "weight condition to wait until that software is done and then when the software is done installing you signal",
    "start": "450960",
    "end": "456639"
  },
  {
    "text": "the weight condition and the create workflow continues if your software fails you signal the weight condition",
    "start": "456639",
    "end": "462440"
  },
  {
    "text": "and you roll that back a custom resource can do the exact same thing but you can extend it to the other workflows to to",
    "start": "462440",
    "end": "469199"
  },
  {
    "text": "provide those hooks for you so you can react to the workflow State you can make the workflow wait until you do something",
    "start": "469199",
    "end": "475319"
  },
  {
    "text": "else and you can fail the workflow if something's not right",
    "start": "475319",
    "end": "480879"
  },
  {
    "text": "so let's meet Frank Frank is a person who loves to analyze data on EBS and he",
    "start": "480879",
    "end": "486440"
  },
  {
    "text": "uses Cloud information snapshot on delete feature to save his results so he's got an EBS volume that has a bunch",
    "start": "486440",
    "end": "492120"
  },
  {
    "text": "of data on it he runs some analysis saves the analysis results back to EBS and then he deletes the stack and the",
    "start": "492120",
    "end": "498879"
  },
  {
    "text": "snapshot has his results on it so when he creates that snapshot he wants it to",
    "start": "498879",
    "end": "503960"
  },
  {
    "text": "be consistent he wants Cloud information to be able to cleanly unmount it take a snapshot and delete the volume",
    "start": "503960",
    "end": "511440"
  },
  {
    "text": "so you might be thinking why is this hard typically people put a mount statement in their user data scripts and",
    "start": "511599",
    "end": "517839"
  },
  {
    "text": "the user data script isn't run by cloud formation that's run by the ec2 instance so cloud formation doesn't know that",
    "start": "517839",
    "end": "523120"
  },
  {
    "text": "that mount has occurred what you need to happen is for that mount to be unmounted",
    "start": "523120",
    "end": "529040"
  },
  {
    "text": "before you try to detach the volume unfortunately ec2 is going to be deleted after we go ahead and try to detach that",
    "start": "529040",
    "end": "535920"
  },
  {
    "text": "volume so what the custom resource lets you do is to pull that mount and dismounting logic up into the cloud",
    "start": "535920",
    "end": "541160"
  },
  {
    "text": "formation stack so cloud formation knows to Dismount the volume before it tries",
    "start": "541160",
    "end": "546519"
  },
  {
    "text": "to detach it so what's Frank going to do he's actually going to write his custom",
    "start": "546519",
    "end": "552160"
  },
  {
    "text": "resource in bash and it's going to run directly on the instance that has his EBS volume mounted so he doesn't need to",
    "start": "552160",
    "end": "558600"
  },
  {
    "text": "run an entire service dedicated to just mounting and unmounting volumes no more hard word required so on create an",
    "start": "558600",
    "end": "565240"
  },
  {
    "text": "update he's going to mount the drive and on delete he's going to unmount it",
    "start": "565240",
    "end": "571240"
  },
  {
    "text": "so this is an a bridge version of what his template will look like the first part is a volume attachment and that's",
    "start": "571240",
    "end": "577200"
  },
  {
    "text": "built into a cloud formation today so that takes an EBS volume and attaches it to an ec2",
    "start": "577200",
    "end": "583600"
  },
  {
    "text": "instance the second part is his custom resource you can see it's called the volume Mount he specifies the same",
    "start": "583600",
    "end": "590200"
  },
  {
    "text": "device that he's going to use in the volume attachment Dev xvh and then he tells it to Mount to SL Mount analysis",
    "start": "590200",
    "end": "597680"
  },
  {
    "text": "so on create it'll do this mount and on delete it'll unmount it so let's take a",
    "start": "597680",
    "end": "603040"
  },
  {
    "start": "602000",
    "end": "759000"
  },
  {
    "text": "look at this",
    "start": "603040",
    "end": "605440"
  },
  {
    "text": "live so I'm on an ec2 instance now and you can see that I have uh run df- to",
    "start": "609680",
    "end": "615600"
  },
  {
    "text": "show Dev xvh mounted on Mount",
    "start": "615600",
    "end": "620880"
  },
  {
    "text": "analysis and if I look in here I've got the three bash scripts and then I just log out what happens when those bash",
    "start": "620920",
    "end": "626760"
  },
  {
    "text": "scripts run let's go ahead and take a look at this",
    "start": "626760",
    "end": "632279"
  },
  {
    "text": "template so you can see up here um I'm not going to scroll all the way up because there's a lot of Jason I'm sure",
    "start": "634720",
    "end": "640320"
  },
  {
    "text": "you guys don't want to look at there's an ec2 volume and there's a volume attachment like I said and then we have",
    "start": "640320",
    "end": "645880"
  },
  {
    "text": "this volume Mount and you can see here I've done two things with the pens on I have the volume attachment so I want the",
    "start": "645880",
    "end": "651680"
  },
  {
    "text": "EBS volume to be attached to the ec2 instance before I try to mount it and I have a weight condition that is actually",
    "start": "651680",
    "end": "657519"
  },
  {
    "text": "waiting until the C resource is ready to process on the instance this uh custom",
    "start": "657519",
    "end": "663480"
  },
  {
    "text": "resource definition since the custom resource is actually running on the same box and so to simulate a delete I don't",
    "start": "663480",
    "end": "671120"
  },
  {
    "text": "want to try to delete a stack while we're watching because it'll end up terminating the ec2 instance and that demo will not go very well I'm going to",
    "start": "671120",
    "end": "677880"
  },
  {
    "text": "actually just remove the mount and so what that's going to do when I call update stack Cloud information will see that that mount no longer exists and",
    "start": "677880",
    "end": "684959"
  },
  {
    "text": "it'll simply call delete on it so if I go over here",
    "start": "684959",
    "end": "691240"
  },
  {
    "text": "call update",
    "start": "693000",
    "end": "695560"
  },
  {
    "text": "stack all right and so now we wait for the workflow to kick off I'll go back to",
    "start": "703600",
    "end": "709959"
  },
  {
    "text": "the instance and you can see the delete script I'll just while we're waiting that to work",
    "start": "709959",
    "end": "715720"
  },
  {
    "text": "off um there's not a lot to it it all fits on this one page page um basically I'm checking to see if the mount point",
    "start": "715720",
    "end": "721440"
  },
  {
    "text": "is there uh in the properties and if unmount succeeds I send back success",
    "start": "721440",
    "end": "727320"
  },
  {
    "text": "otherwise I send back failure and you can see now there's a",
    "start": "727320",
    "end": "732920"
  },
  {
    "text": "delete log here where there wasn't one before which means delete ran and you can see I just run ount on SL Mount",
    "start": "732920",
    "end": "740040"
  },
  {
    "text": "analysis and if I look at df- it's not mounted",
    "start": "740040",
    "end": "745560"
  },
  {
    "text": "anymore and the cloud information stack has gone to update complete where it ran delete on the volume out as",
    "start": "745560",
    "end": "752320"
  },
  {
    "text": "you can see on that right there all right now I'm going to turn it over to",
    "start": "752320",
    "end": "759279"
  },
  {
    "start": "759000",
    "end": "1141000"
  },
  {
    "text": "DJ who's going to take you through the remaining custom resources and how to build one for yourself",
    "start": "759279",
    "end": "766639"
  },
  {
    "text": "okay [Music] so what we're going to do",
    "start": "779760",
    "end": "786959"
  },
  {
    "text": "is okay um so what I'm going to talk about is the third type which is dynamic",
    "start": "801120",
    "end": "808160"
  },
  {
    "text": "getting Dynamic data into your stacks and traditionally today there's kind of two ways that you do this the",
    "start": "808160",
    "end": "814120"
  },
  {
    "text": "first is the parameters which kind of allow you to get free form user input um you can constrain on regular expressions",
    "start": "814120",
    "end": "820240"
  },
  {
    "text": "or other things um at a stack by Stack basis and then mappings is another way",
    "start": "820240",
    "end": "825680"
  },
  {
    "text": "which is a little bit more static you can react to Dynamic parameters or other values of the template um to figure out",
    "start": "825680",
    "end": "832320"
  },
  {
    "text": "things like the appropriate Ami ID for your region um you know the the type of architecture you want to build on and",
    "start": "832320",
    "end": "838199"
  },
  {
    "text": "those kind of things so what custom resources really that you do um is allows you to kind of",
    "start": "838199",
    "end": "844160"
  },
  {
    "text": "centralize your selection logic basically the data that you want to inject to your your Stacks while they're",
    "start": "844160",
    "end": "849560"
  },
  {
    "text": "building um you can you can move that logic somewhere else and apply it to all Stacks that you create um and the great",
    "start": "849560",
    "end": "856279"
  },
  {
    "text": "thing about this is you can do those lookups for that data in S3 Dynamo DB RDS you could call out to other AWS apis",
    "start": "856279",
    "end": "864360"
  },
  {
    "text": "or virtually any third party data store or service that you might be already running today so it really let you interact with things uh that you might",
    "start": "864360",
    "end": "870839"
  },
  {
    "text": "already have so let's jump right into kind of a a customer example and let's meet Bill Bill is the head of operations",
    "start": "870839",
    "end": "877759"
  },
  {
    "text": "for a large Tech firm and he manages a wide range of services um but he needs",
    "start": "877759",
    "end": "883199"
  },
  {
    "text": "to ensure that they're always running on a fully validated and tested Ami um and",
    "start": "883199",
    "end": "888839"
  },
  {
    "text": "so the Pinnacle kind of his career is he's been managing this Excel spreadsheet for years and that's how he",
    "start": "888839",
    "end": "894480"
  },
  {
    "text": "tracks his zomies and he's very very proud of this but it's become very difficult for him to maintain and and it's not easy for him to get things out",
    "start": "894480",
    "end": "901480"
  },
  {
    "text": "so what does Bill need he needs to be able to push out his zomies in a central way so when he makes a change to anami",
    "start": "901480",
    "end": "907480"
  },
  {
    "text": "for a security update something like that he needs a way to very easily let um all the services pick that up when",
    "start": "907480",
    "end": "913240"
  },
  {
    "text": "they do their updates or or their next deployment and he also doesn't want to have to edit all these templates that",
    "start": "913240",
    "end": "918560"
  },
  {
    "text": "he's created over the years um which is what he has to do today and one of the key things that he'd really like to do",
    "start": "918560",
    "end": "924639"
  },
  {
    "text": "is to be able to audit what amies are running where when so if there is a security event or they need to do some",
    "start": "924639",
    "end": "930759"
  },
  {
    "text": "sort of log dive things like that he can very easily figure out what Stacks are running it who's running them when they",
    "start": "930759",
    "end": "937920"
  },
  {
    "text": "were running them so he can pull the information that he needs so what is Bill's solution so",
    "start": "937920",
    "end": "943720"
  },
  {
    "text": "Bill's going to create a manifest file he's going to generate this from his excel in his case he's familiar with Json since he does cloud formation so",
    "start": "943720",
    "end": "950639"
  },
  {
    "text": "he's basically going to export his Excel spreadsheet um into a file that he can",
    "start": "950639",
    "end": "956000"
  },
  {
    "text": "upload to S3 and version it as he needs and then he's going to create a simple python script that's going to look up",
    "start": "956000",
    "end": "962279"
  },
  {
    "text": "his Ami IDs out of this manifest file based on things such as the region the operating system the architecture or the",
    "start": "962279",
    "end": "969000"
  },
  {
    "text": "version of the operating system that he wants to run so let's jump in and look at what this might kind of look like so at the",
    "start": "969000",
    "end": "976279"
  },
  {
    "text": "top we kind of have our custom resource um and this is the part that he's implementing and you can see he's asking",
    "start": "976279",
    "end": "982519"
  },
  {
    "text": "for um an auntu image 1304 on a 64-bit architecture and one of the things",
    "start": "982519",
    "end": "989000"
  },
  {
    "text": "things that's that's great about this is when he looks at his template now he's not looking at an Oni ID he's looking at",
    "start": "989000",
    "end": "994160"
  },
  {
    "text": "exactly what he wants to run so his template's now giving him more information about what the template's",
    "start": "994160",
    "end": "999319"
  },
  {
    "text": "actually using and then to get that into say an ec2 instance he can actually just ref his custom resource like he would",
    "start": "999319",
    "end": "1005880"
  },
  {
    "text": "any other resource in his case he hasn't returned the Omi ID for him so let's jump right into a small",
    "start": "1005880",
    "end": "1012880"
  },
  {
    "text": "little demo",
    "start": "1012880",
    "end": "1016160"
  },
  {
    "text": "and so we come over",
    "start": "1020560",
    "end": "1023759"
  },
  {
    "text": "here and what we can see is he's defined two custom Ami lookups here his first",
    "start": "1026839",
    "end": "1033760"
  },
  {
    "text": "one he's he's looking up for auntu um and what you can see is I've actually excluded um the version and he's coded",
    "start": "1033760",
    "end": "1040438"
  },
  {
    "text": "this up in such a way that if he doesn't specify a version that'll just pull the latest version of auntu that he's has",
    "start": "1040439",
    "end": "1045520"
  },
  {
    "text": "approved at his company um and then we also do a window those instance down here he's being a little more specific",
    "start": "1045520",
    "end": "1051360"
  },
  {
    "text": "saying that I need Windows 2008 for this um and so it's actually pretty straightforward you can um and he can",
    "start": "1051360",
    "end": "1058200"
  },
  {
    "text": "look that up so if we just jump over if we jump over to his example",
    "start": "1058200",
    "end": "1064080"
  },
  {
    "text": "manifest to kind of give you an idea of what this might look like and it's not necessarily the the prettiest thing um",
    "start": "1064080",
    "end": "1071240"
  },
  {
    "text": "but you can see he's he's come up with his structure where he kind of defines his his operating system breaks it down",
    "start": "1071240",
    "end": "1077840"
  },
  {
    "text": "um and then provides different options and so you would usually see this actually in all of your templates you do something like this in your mapping",
    "start": "1077840",
    "end": "1083960"
  },
  {
    "text": "sections but he's able to centralize this for himself do it once and then use it in his templates in a nice",
    "start": "1083960",
    "end": "1089919"
  },
  {
    "text": "way but this part isn't really kind of you know the pretty part about this the",
    "start": "1089919",
    "end": "1095159"
  },
  {
    "text": "part that that really kind of wins it over for him is his audit table and so",
    "start": "1095159",
    "end": "1100600"
  },
  {
    "text": "if we jump over to his Dynamo DB table what we can see is um I've run a couple stacks to kind of get a little seed data",
    "start": "1100600",
    "end": "1106799"
  },
  {
    "text": "in here um is that it's actually putting entries so he can come over to his Dynamo um DB table he could build a",
    "start": "1106799",
    "end": "1112679"
  },
  {
    "text": "console if he'd like where he can very quickly audit and see who's using you know which amies where they're using",
    "start": "1112679",
    "end": "1118919"
  },
  {
    "text": "them when they were created when they were deleted and that really allows him to um figure out who he needs to to uh",
    "start": "1118919",
    "end": "1126960"
  },
  {
    "text": "who he needs to get in contact with if there's a security vulnerability in some of their software and they need to roll out an update he can very quickly find",
    "start": "1126960",
    "end": "1132760"
  },
  {
    "text": "that information so it gives him a lot more insight than his Excel spreadsheet that he's been managing for years",
    "start": "1132760",
    "end": "1140039"
  },
  {
    "start": "1141000",
    "end": "1525000"
  },
  {
    "text": "so let's move on to the The Fourth Kind of example um and this is one of the more complicated ones um this is",
    "start": "1143600",
    "end": "1149320"
  },
  {
    "text": "extending the capabilities of an existing resource um and so when you",
    "start": "1149320",
    "end": "1154559"
  },
  {
    "text": "look at cloud formation today it's really concerned about the create update and delete workflows of the",
    "start": "1154559",
    "end": "1160360"
  },
  {
    "text": "resources however certain services and resources actually have a life cycle that exists outside of these and that's",
    "start": "1160360",
    "end": "1166200"
  },
  {
    "text": "something that cloud formation doesn't deal with today um and so there's no place to put that",
    "start": "1166200",
    "end": "1171520"
  },
  {
    "text": "type of logic and encapsulate your your business logic in the template and this is where uh the customer resources can",
    "start": "1171520",
    "end": "1177200"
  },
  {
    "text": "kind of come in and help so let's jump in and meet Tom Tom manages a fleet of virtual desktops in",
    "start": "1177200",
    "end": "1183480"
  },
  {
    "text": "AWS he likes to use Autos scaling that allows him to keep a consistent Fleet size to make sure that his users will",
    "start": "1183480",
    "end": "1189120"
  },
  {
    "text": "always have a desktop that they can connect into um sorry and he uses VNC to",
    "start": "1189120",
    "end": "1195400"
  },
  {
    "text": "connect to their to their virtual desktops so what are kind of his requirements um",
    "start": "1195400",
    "end": "1201280"
  },
  {
    "text": "Tom needs his servers to be easy to remember and get into so he's come up with a really really clever Simpsons",
    "start": "1201280",
    "end": "1206440"
  },
  {
    "text": "naming scheme for his host so his end users don't need to remember the dynamic names that come up with the ec2",
    "start": "1206440",
    "end": "1211880"
  },
  {
    "text": "instances they can just remember that they need to log in to Homer um and when",
    "start": "1211880",
    "end": "1217000"
  },
  {
    "text": "a server when he needs to take a Ser a server out for maintenance um or to upgrade it to a larger size or downgrade",
    "start": "1217000",
    "end": "1223039"
  },
  {
    "text": "it to a different size depending on his user needs he needs those names to be recycled so that people don't have to know 50 uh symptons characters that can",
    "start": "1223039",
    "end": "1230919"
  },
  {
    "text": "remember a couple and always get into a box somewhere so what's his solution he's",
    "start": "1230919",
    "end": "1235960"
  },
  {
    "text": "written a python script that's going to respond to autoscaling notifications and this may be a feature of autoscaling",
    "start": "1235960",
    "end": "1241320"
  },
  {
    "text": "that you're not familiar with but it's actually kind of a neat little one what it is is when you create your autoscaling group you can tell it that",
    "start": "1241320",
    "end": "1247159"
  },
  {
    "text": "you're interested in certain events that happen on it such as an instance being terminated or an instance coming into",
    "start": "1247159",
    "end": "1253720"
  },
  {
    "text": "service and what it'll do is it'll publish that notification to an SNS topic of your choice",
    "start": "1253720",
    "end": "1259200"
  },
  {
    "text": "uh and that's what Tom has has done and he's going to take those notifications and manage the Route 53 entries for the",
    "start": "1259200",
    "end": "1265240"
  },
  {
    "text": "instances as they come in and out and he's going to use a Dynamo DB table to keep track of which names have been used",
    "start": "1265240",
    "end": "1271440"
  },
  {
    "text": "which ones are available and by who so let's look at what this might look like in your Json so we'll start",
    "start": "1271440",
    "end": "1278520"
  },
  {
    "text": "off with his DNS processor here which is the custom resource um and you can see it has a hosted Zone ID that's a Route",
    "start": "1278520",
    "end": "1284720"
  },
  {
    "text": "53 concept and that's basically your domain name um but the kind of interesting part here is his DNS pattern",
    "start": "1284720",
    "end": "1291440"
  },
  {
    "text": "and this is where he's defining what he wants his host names to look like and since it's Dynamic he can't just put",
    "start": "1291440",
    "end": "1296600"
  },
  {
    "text": "them in so what he's done is he's leveraged a a mustache type style syntax um and if you can follow this a little",
    "start": "1296600",
    "end": "1302960"
  },
  {
    "text": "bit basically what he's doing is creating names like uh homer. uswest",
    "start": "1302960",
    "end": "1308679"
  },
  {
    "text": "2toms domain.com so then when he defines his",
    "start": "1308679",
    "end": "1314000"
  },
  {
    "text": "autoscaling group he starts off by creating that notif notification configuration we were talking about and",
    "start": "1314000",
    "end": "1320080"
  },
  {
    "text": "he's saying he wants to see ec2 instance launches and ec2 instance terminations now the topic Arn you can",
    "start": "1320080",
    "end": "1327400"
  },
  {
    "text": "see he's actually pulling he's doing a get at on his custom resource so topic is one of the the data pieces that his",
    "start": "1327400",
    "end": "1333760"
  },
  {
    "text": "custom resource is returning and providing to his template um now this is the part here",
    "start": "1333760",
    "end": "1339600"
  },
  {
    "text": "the tag so he's actually going to tag his autoscaling group and the reason he needs to do this and why these are a little bit more complicated to work with",
    "start": "1339600",
    "end": "1346120"
  },
  {
    "text": "is because he's working outside of the context of cloud formation so when one of these events gets triggered it's not",
    "start": "1346120",
    "end": "1351799"
  },
  {
    "text": "actually part of a cloud formation resource so he needs to actually have a little bit of context when he gets that notification from autoscaling um like",
    "start": "1351799",
    "end": "1360039"
  },
  {
    "text": "which DNS records he needs to actually modify so what he's doing is he's tagging this with the physical resource",
    "start": "1360039",
    "end": "1365520"
  },
  {
    "text": "ID of his DNS processor so he can look up those notifications and know which which one he needs to actually",
    "start": "1365520",
    "end": "1371799"
  },
  {
    "text": "modify so let's just jump into um a simple example well somewhat simple",
    "start": "1371799",
    "end": "1379760"
  },
  {
    "text": "and what we'll do is we're we're going to look at the Route 53 console and so I've already spun this up and so he has two instances that are active a and Ry",
    "start": "1381320",
    "end": "1389480"
  },
  {
    "text": "um but you can see oops he forgot to put his region in there so what we're going",
    "start": "1389480",
    "end": "1395520"
  },
  {
    "text": "to do is we'll go over to cloud formation and we're going to do an update stack on",
    "start": "1395520",
    "end": "1400679"
  },
  {
    "text": "this um and not to bore you with looking at the template because it's not that",
    "start": "1400679",
    "end": "1406000"
  },
  {
    "text": "interesting um we're going to update it so that it has",
    "start": "1406000",
    "end": "1412159"
  },
  {
    "text": "that region in there and this will let us kind of see part of the the uh flow",
    "start": "1412159",
    "end": "1417240"
  },
  {
    "text": "that we want to talk about with cloud formation if I can get there fast enough hopefully so if we watch our Route 53",
    "start": "1417240",
    "end": "1423720"
  },
  {
    "text": "I'm going to keep refreshing this because I don't want to miss it but what we're going to see happen",
    "start": "1423720",
    "end": "1428760"
  },
  {
    "text": "hopefully is now he has four DNS entries so you",
    "start": "1428760",
    "end": "1433960"
  },
  {
    "text": "may be asking yourself why are there four at this point what's happened is cloud formation has recognized that",
    "start": "1433960",
    "end": "1439880"
  },
  {
    "text": "there's an update to to my resource so it's it's sent me the update request saying hey here's the new domains that I",
    "start": "1439880",
    "end": "1445760"
  },
  {
    "text": "want you to register uh or the new instances I want you to register and what's happening is all your update",
    "start": "1445760",
    "end": "1452919"
  },
  {
    "text": "should be responsible for is doing the changes that you need um and so in my",
    "start": "1452919",
    "end": "1457960"
  },
  {
    "text": "case it's just creating the new Route 53 entries and what I'm going to respond back with is a new physical resource ID",
    "start": "1457960",
    "end": "1463840"
  },
  {
    "text": "when you when you give that new physical resource ID cloud formation recognizes and says hey you you created a new",
    "start": "1463840",
    "end": "1469200"
  },
  {
    "text": "resource you haven't updated the existing one and we call this a replacement update so it's basically",
    "start": "1469200",
    "end": "1474360"
  },
  {
    "text": "it's a two-phase so once you say that it's update complete cloud formation is going to issue a second event to tell",
    "start": "1474360",
    "end": "1479960"
  },
  {
    "text": "you to delete the old one and what that allows you to do is one keep the existing stack and resources in place in",
    "start": "1479960",
    "end": "1486080"
  },
  {
    "text": "case something goes wrong roll back becomes very very easy it's basically no work you just delete what you did during",
    "start": "1486080",
    "end": "1491720"
  },
  {
    "text": "the update that failed um what it also lets you do is keep things available um",
    "start": "1491720",
    "end": "1497760"
  },
  {
    "text": "in this case a person could continue using the old domain until the new ones are in place",
    "start": "1497760",
    "end": "1502960"
  },
  {
    "text": "um and you'll see that with with many resources within cloud formation and a technique that we use to kind of give you that availability um so we recommend",
    "start": "1502960",
    "end": "1509520"
  },
  {
    "text": "you do that when it makes sense for your resources and so if I just refresh this again you'll see that it's cleaned up",
    "start": "1509520",
    "end": "1515000"
  },
  {
    "text": "the old ones through that delete workflow and only the new ones with the the regions in them are actually",
    "start": "1515000",
    "end": "1522559"
  },
  {
    "text": "registered so we'll switch back here to our presentation and so now that we've kind",
    "start": "1523559",
    "end": "1529000"
  },
  {
    "text": "of gone through and shown you some examples of what you could do with custom resources you might be wondering well how do I actually start building",
    "start": "1529000",
    "end": "1535080"
  },
  {
    "text": "them and the core thing that you'll need to do is you need to write the code that can respond to your create update and",
    "start": "1535080",
    "end": "1540760"
  },
  {
    "text": "delete events and then you also potentially will need to write the code um to respond to the notifications",
    "start": "1540760",
    "end": "1546440"
  },
  {
    "text": "getting published to this SNS topic um we strongly recommend that you you um",
    "start": "1546440",
    "end": "1551480"
  },
  {
    "text": "attach an sqsq to the SNS topic um you can also have those posted back but the sqsq kind of provides you some fault",
    "start": "1551480",
    "end": "1557799"
  },
  {
    "text": "tolerance um it means your back end isn't tied directly um to the SNS topic and things like that so it makes a little bit",
    "start": "1557799",
    "end": "1563520"
  },
  {
    "text": "easier for you to update um or bring things out of service and your messages will just queue up and when your your",
    "start": "1563520",
    "end": "1569480"
  },
  {
    "text": "back end comes back up it can start processing messages and nothing's really lost so let's kind of look at a little",
    "start": "1569480",
    "end": "1575640"
  },
  {
    "start": "1575000",
    "end": "1623000"
  },
  {
    "text": "diagram and a workflow of what's what's kind of happening and so the first step that's going to happen is cloud formation is going to start building",
    "start": "1575640",
    "end": "1581799"
  },
  {
    "text": "your custom resource and this something you're you're used to today and when it does that cloud information is going to send that create notification to your",
    "start": "1581799",
    "end": "1588399"
  },
  {
    "text": "custom resource hopefully your custom resource is going to create that resource and it",
    "start": "1588399",
    "end": "1593600"
  },
  {
    "text": "returns a Json message back to cloud formation telling it the status and any data that you want to provide cloud",
    "start": "1593600",
    "end": "1600440"
  },
  {
    "text": "formation is going to process that jsaw message and it's going to store that data so it can be used later and then",
    "start": "1600440",
    "end": "1605760"
  },
  {
    "text": "it's going to continue on the workflow and Pro create any more resources that depend on your resource or come",
    "start": "1605760",
    "end": "1612159"
  },
  {
    "text": "after and what it's going to provide is those other resources can now actually get at any of that data that you",
    "start": "1612159",
    "end": "1617919"
  },
  {
    "text": "returned through gats and Reps um and so that's kind of your your basic flow so",
    "start": "1617919",
    "end": "1624120"
  },
  {
    "start": "1623000",
    "end": "1725000"
  },
  {
    "text": "from an architecture standpoint what does a custom resource kind of look like and we'll start off over here kind of on",
    "start": "1624120",
    "end": "1630159"
  },
  {
    "text": "on your left hand side with the AWS cloud formation where it's going to create that custom resource it in IT",
    "start": "1630159",
    "end": "1635840"
  },
  {
    "text": "issues that that notification to your custom resource topic um and as we recommend it it immediately dumps that",
    "start": "1635840",
    "end": "1642120"
  },
  {
    "text": "into an sqsq you could change this out to meet your needs however you want to architect this um but this kind of keeps",
    "start": "1642120",
    "end": "1647919"
  },
  {
    "text": "it simp simple and a little more reliable and then you have your custom resource implementation that will be sitting there polling um your sqsq when",
    "start": "1647919",
    "end": "1655440"
  },
  {
    "text": "a message comes in it's going to start building whatever that resource is or deleting it whatever the step is once it's complete it's going to just send",
    "start": "1655440",
    "end": "1661840"
  },
  {
    "text": "that back to Cloud information so it's actually a pretty simple workflow to kind of follow um but you might be",
    "start": "1661840",
    "end": "1667720"
  },
  {
    "text": "asking you know you work in an Enterprise environment we run everything in a VPC can I do this inside of VPC and",
    "start": "1667720",
    "end": "1673760"
  },
  {
    "text": "you absolutely can and it doesn't become much more complicated the first flow is pretty much the same which going to get",
    "start": "1673760",
    "end": "1679840"
  },
  {
    "text": "published to the SNS topic it goes to your sqsq um then your customer resource impation will pull s the S sqs and",
    "start": "1679840",
    "end": "1687799"
  },
  {
    "text": "that's however you do that today so however from your VPC whether you do that through aat um however you talk to",
    "start": "1687799",
    "end": "1693640"
  },
  {
    "text": "your AWS services today you just follow that exact same thing so you pull sqs you get your message um you can go back",
    "start": "1693640",
    "end": "1701039"
  },
  {
    "text": "through your VPN if you need to contact something internal to your network so if you're actually building some type of",
    "start": "1701039",
    "end": "1706080"
  },
  {
    "text": "resource that is contained within your company that's that's not public um you can certainly do that through a VPN so",
    "start": "1706080",
    "end": "1712120"
  },
  {
    "text": "you can build up or contact services that you want once it's complete you just send it back to cloud formation in",
    "start": "1712120",
    "end": "1717960"
  },
  {
    "text": "the same way that you were talking to your sqsq um it really doesn't become any more",
    "start": "1717960",
    "end": "1723720"
  },
  {
    "text": "complicated so now we've kind of looked at that what kind of defines a good resource and one of the keys is that you",
    "start": "1723720",
    "end": "1729760"
  },
  {
    "text": "want your resource to be item potent if you're not familiar with what this means basically what it means is per one",
    "start": "1729760",
    "end": "1735080"
  },
  {
    "text": "unique request regardless of the number of times that your service sees it you should be responding with the same",
    "start": "1735080",
    "end": "1740120"
  },
  {
    "text": "result um it's actually really important because sometimes there may be Network blips a message might be resent so it's",
    "start": "1740120",
    "end": "1746440"
  },
  {
    "text": "important that you build your service in such a way that you can handle that and respond so you're not creating multiple resources um for your",
    "start": "1746440",
    "end": "1754360"
  },
  {
    "text": "users another big key is you want your resource to be immediately available when you say you're complete so when you",
    "start": "1754360",
    "end": "1761440"
  },
  {
    "text": "send that create complete back to cloud formation you want to ensure that your resource is actually ready for use you",
    "start": "1761440",
    "end": "1767240"
  },
  {
    "text": "don't want to send the create complete but still have a background task still processing and creating the rest of your",
    "start": "1767240",
    "end": "1772919"
  },
  {
    "text": "resources um it can be tempting to say I want to get this re I want to get this back and my stack moving very quickly",
    "start": "1772919",
    "end": "1778480"
  },
  {
    "text": "but if you have other resources that depend on that resource being uh created you're going to get some very strange um",
    "start": "1778480",
    "end": "1784519"
  },
  {
    "text": "behaviors where they might call out to try and get something but the resource isn't complete so you really want to make sure that when you send back your",
    "start": "1784519",
    "end": "1790919"
  },
  {
    "text": "your status results that you are actually in the state that you're saying you're in um another big thing is is you want",
    "start": "1790919",
    "end": "1797720"
  },
  {
    "text": "to make sure your resources can be deleted pretty much from any state that you could imagine that it could get into",
    "start": "1797720",
    "end": "1803000"
  },
  {
    "text": "um so like and say there's an update failure or a delete failure you really don't want your customers or your Stacks",
    "start": "1803000",
    "end": "1809480"
  },
  {
    "text": "to be stuck because your custom resource can't delete from a specific state so you want to make sure that regardless of",
    "start": "1809480",
    "end": "1814919"
  },
  {
    "text": "the state that the resource is in when you get that delete message from cloud formation that you're able to handle that and clean up the",
    "start": "1814919",
    "end": "1820799"
  },
  {
    "text": "resources um and this one's Les is more of a Guidance the last one from us um so",
    "start": "1820799",
    "end": "1826760"
  },
  {
    "text": "it's not really going to break anything but makes your life a lot easier is when you build a custom resource try and",
    "start": "1826760",
    "end": "1832880"
  },
  {
    "text": "focus your custom resource on a one specific piece of functionality it's very easy to say hey this custom",
    "start": "1832880",
    "end": "1838640"
  },
  {
    "text": "resource I can encapsulate a whole bunch of stuff and it looks really great in your template it makes it a lot easier to write your template because you just",
    "start": "1838640",
    "end": "1844200"
  },
  {
    "text": "put in this custom one custom resource and it does 50 things for you uh but we'",
    "start": "1844200",
    "end": "1849399"
  },
  {
    "text": "strongly strongly recommend don't do that um because it becomes very very difficult during the update workflows",
    "start": "1849399",
    "end": "1855880"
  },
  {
    "text": "when you need to actually um get get your dependencies right get the ordering right leave that to cloud formation and",
    "start": "1855880",
    "end": "1861200"
  },
  {
    "text": "just create multiple custom resources and do small pieces one at a time and if you're looking for an example of this in",
    "start": "1861200",
    "end": "1866960"
  },
  {
    "text": "cloud formation because this is a lesson learned um for us as well is elastic low balancers support embedded policies um",
    "start": "1866960",
    "end": "1874519"
  },
  {
    "text": "which is really nice from a customer perspective um but custom policies can actually depend on each other and so by",
    "start": "1874519",
    "end": "1881760"
  },
  {
    "text": "embedding it there's actually no way to um to actually uh Define that reference",
    "start": "1881760",
    "end": "1888399"
  },
  {
    "text": "between the two and so there's actually two ways you can do custom policies and so um we strongly recommend that you",
    "start": "1888399",
    "end": "1894480"
  },
  {
    "text": "just keep it to one piece of functionality and don't don't embed try embed multiple resources within one",
    "start": "1894480",
    "end": "1899600"
  },
  {
    "text": "custom resource just break them out into two and let cloudformation that can handle the dependencies between them you",
    "start": "1899600",
    "end": "1904840"
  },
  {
    "text": "just need to focus on individual pieces of code so we've kind of been saying it's",
    "start": "1904840",
    "end": "1910039"
  },
  {
    "start": "1909000",
    "end": "1960000"
  },
  {
    "text": "it's pretty simple to do this um but there are a lot of moving pieces and so what we've actually done is we've",
    "start": "1910039",
    "end": "1915679"
  },
  {
    "text": "created something we call AWS um cloud formation Resource Bridge and this is a crossplatform hook based demon that you",
    "start": "1915679",
    "end": "1922639"
  },
  {
    "text": "can leverage today um that handles all of most of the architecture for you so it's going to do it's going to handle",
    "start": "1922639",
    "end": "1928639"
  },
  {
    "text": "getting the messages off your sqsq um and then posting your results back to cloud formation so it handles",
    "start": "1928639",
    "end": "1934399"
  },
  {
    "text": "that that whole piece of it and all you need to do is apply the scripts to do the create update and delete you can",
    "start": "1934399",
    "end": "1940279"
  },
  {
    "text": "write them in you know whatever language you like however you want to do that so it lets you kind of just focus on your core business logic and not worrying",
    "start": "1940279",
    "end": "1946159"
  },
  {
    "text": "about pulling the sqsq or trying to get your data back to CL information we've released this under open source under",
    "start": "1946159",
    "end": "1952240"
  },
  {
    "text": "the Apache 2 license so you can install or Fork it off of GitHub um so jump out",
    "start": "1952240",
    "end": "1957919"
  },
  {
    "text": "there and get it um also all the example code that you've seen today um we've also put out",
    "start": "1957919",
    "end": "1964279"
  },
  {
    "text": "on GitHub for you and anybody that's work with confirmation templates you know that stealing from someone else's",
    "start": "1964279",
    "end": "1969639"
  },
  {
    "text": "template is the best way to create your own templates and these are no different from that so go out there look at the",
    "start": "1969639",
    "end": "1974960"
  },
  {
    "text": "examples use them as your base steal stuff from them uh and just build some really great custom",
    "start": "1974960",
    "end": "1980120"
  },
  {
    "text": "resources and so I'm going to turn it back over to Adam to talk a little bit about CF and it um since we kind of",
    "start": "1980120",
    "end": "1985519"
  },
  {
    "text": "promised we'd do that all right thanks",
    "start": "1985519",
    "end": "1993159"
  },
  {
    "text": "DJ so CFN AIT if you've used Cloud information for any period of time something you've interacted with if",
    "start": "1993440",
    "end": "1998760"
  },
  {
    "text": "you've used sample templates that's what we use to install the software that runs on them like WordPress so you can",
    "start": "1998760",
    "end": "2004240"
  },
  {
    "text": "download files start services and install packages um on E2 instances that cloud information has spun up for you",
    "start": "2004240",
    "end": "2010760"
  },
  {
    "text": "and it works really on any platform that can support python too so windows and Linux specifically is what we",
    "start": "2010760",
    "end": "2016960"
  },
  {
    "text": "distributed on so we noticed a lot of people put configuration files in their cloud formation templates and the only",
    "start": "2016960",
    "end": "2024159"
  },
  {
    "text": "way to stitch together the static part of your configuration file with the pieces you need to pull from the other",
    "start": "2024159",
    "end": "2029360"
  },
  {
    "text": "resources in your template is with the join function and join can get really ugly really fast we also noticed that",
    "start": "2029360",
    "end": "2035080"
  },
  {
    "text": "cloud that configuration files have a lot of boiler plate in them so what we decided to do is to add mustache support",
    "start": "2035080",
    "end": "2041440"
  },
  {
    "text": "to see if inet files so you simply add a key called context and see if inet will automatically process it as a template",
    "start": "2041440",
    "end": "2048599"
  },
  {
    "text": "so let's take a look at an example of a WordPress configuration as you'd find it in a cloud information template so this",
    "start": "2048599",
    "end": "2054440"
  },
  {
    "text": "is the first page of the WordPress configuration it's stuck together with join and there are basically four fields",
    "start": "2054440",
    "end": "2060919"
  },
  {
    "text": "that it's pulling from the rest of the template the database name user password and the host the rest of it there are",
    "start": "2060919",
    "end": "2066599"
  },
  {
    "text": "two more pages of it it's just a bunch of stuff you're sticking together with with the joint function so it really",
    "start": "2066599",
    "end": "2071839"
  },
  {
    "text": "makes your template ugly so if you use the mustache feature you can turn it",
    "start": "2071839",
    "end": "2077158"
  },
  {
    "text": "into this so we have a file that we're going to download from GitHub that is a mustache template so since you're",
    "start": "2077159",
    "end": "2083760"
  },
  {
    "text": "pulling it from GitHub you can version it just like you would version your template and you can give it an explicit revision so you know what exactly what's",
    "start": "2083760",
    "end": "2089638"
  },
  {
    "text": "going on to the box and then we Supply the context so now DB inpoint DB name DB user and DB",
    "start": "2089639",
    "end": "2096800"
  },
  {
    "text": "password will become variables exposed to mustache so you can just insert those into the template and cloudformation",
    "start": "2096800",
    "end": "2103200"
  },
  {
    "text": "will put them in at runtime and you can use a lot more of the features of mustache as well you can uh do embedded",
    "start": "2103200",
    "end": "2110480"
  },
  {
    "text": "properties you can do lists and iterate over them most of the things you do with mustache you can do with this as",
    "start": "2110480",
    "end": "2117520"
  },
  {
    "text": "well a big request we've gotten a lot for cloud formation is to support I IM",
    "start": "2117560",
    "end": "2122680"
  },
  {
    "text": "roles and the most interesting part of Ro support was downloading files from S3",
    "start": "2122680",
    "end": "2128200"
  },
  {
    "text": "using CF internet and so it supports it today it's actually supported it for some time um but when you're downloading",
    "start": "2128200",
    "end": "2135200"
  },
  {
    "text": "a secured file from S3 don't just think about it as I'm going to download my War file that I'm running um with your",
    "start": "2135200",
    "end": "2141359"
  },
  {
    "text": "proprietary business logic you can also store non AWS credentials in it like your database username and password",
    "start": "2141359",
    "end": "2147119"
  },
  {
    "text": "service in points that you don't want uh people to know about necessarily or like if you want enable or disable features",
    "start": "2147119",
    "end": "2152720"
  },
  {
    "text": "at runtime um that are already in your code and obviously configuration files as well if they have secure things in",
    "start": "2152720",
    "end": "2158720"
  },
  {
    "text": "them you can also download those from S3 and so to do this in the template",
    "start": "2158720",
    "end": "2163839"
  },
  {
    "text": "there's two pieces the first is the AWS Cloud information authentication piece so you can see here we've defined a roll",
    "start": "2163839",
    "end": "2169760"
  },
  {
    "text": "creds object that's of S3 type and it points to the RO name My3 Ro if you've",
    "start": "2169760",
    "end": "2174800"
  },
  {
    "text": "created the IM am Ro in your template this is going to become a ref and you'll just ref the RO that you",
    "start": "2174800",
    "end": "2180440"
  },
  {
    "text": "created and then we have a file called secrets. text that nobody will ever try to look into and we're going to download",
    "start": "2180440",
    "end": "2186560"
  },
  {
    "text": "that from S3 and you can see there's an authentication key pointing at roll creds so anytime we try to download this",
    "start": "2186560",
    "end": "2192480"
  },
  {
    "text": "file we'll sign that with the I Ro you",
    "start": "2192480",
    "end": "2197200"
  },
  {
    "text": "provided also wanted to touch on CFN Hub it's been there since the beginning installed with CFN andit but we don't",
    "start": "2198200",
    "end": "2204040"
  },
  {
    "text": "use it very much in the sample templates um it's available as a service on Linux",
    "start": "2204040",
    "end": "2209319"
  },
  {
    "text": "and windows so it actually runs as a demon and it listens for changes to your Cloud information stack and runs scripts",
    "start": "2209319",
    "end": "2214800"
  },
  {
    "text": "when those changes happen so you'd say whenever the Meda data is updated on my ec2 instance rerun CFN andet would be a",
    "start": "2214800",
    "end": "2220839"
  },
  {
    "text": "common use case for CFN Hub and you might be thinking that sounds a lot like a custom resource and",
    "start": "2220839",
    "end": "2227040"
  },
  {
    "text": "it is a custom resource does require an SNS topic and usually an sqsq so there's",
    "start": "2227040",
    "end": "2232560"
  },
  {
    "text": "a there's a higher barrier entry there but C and hub doesn't have nearly as many features as a custom resource so C",
    "start": "2232560",
    "end": "2239000"
  },
  {
    "text": "and hub can't interact with Cloud information whatsoever it's just a listener so the workflow is not going to",
    "start": "2239000",
    "end": "2244240"
  },
  {
    "text": "wait for CF and hub to be done if CF and hub crashes and burns and fails miserably the cloud information workflow",
    "start": "2244240",
    "end": "2249960"
  },
  {
    "text": "will say update complete I'm done and you can't pass data back into the stack from CFN Hub so it's really like just um",
    "start": "2249960",
    "end": "2257480"
  },
  {
    "text": "starting a new thread and running that thread and ignoring the",
    "start": "2257480",
    "end": "2262839"
  },
  {
    "text": "result and that's pretty much it for today so hopefully you learned a little bit about custom resources and how they",
    "start": "2262839",
    "end": "2268720"
  },
  {
    "text": "let you extend cloud formation um and a little bit about what we've added to CF internet",
    "start": "2268720",
    "end": "2274319"
  },
  {
    "text": "recently we'll be available for questions um now and I'm going to be",
    "start": "2274319",
    "end": "2279680"
  },
  {
    "text": "working the booth in reinvent Central tomorrow morning and we'll try to be available at the dev Lounge so since",
    "start": "2279680",
    "end": "2285480"
  },
  {
    "text": "there's a lot of amazonians around you can take a picture of our faces and compare us to everybody you see and",
    "start": "2285480",
    "end": "2290800"
  },
  {
    "text": "hopefully you'll find us eventually so feedback is really important there's places to leave",
    "start": "2290800",
    "end": "2296160"
  },
  {
    "text": "feedback set up all around um so this is again DMG 303 CL information of the hood",
    "start": "2296160",
    "end": "2301480"
  },
  {
    "text": "we really look forward to it both positive and negative and uh we'll take questions at the mic now thanks",
    "start": "2301480",
    "end": "2309240"
  }
]