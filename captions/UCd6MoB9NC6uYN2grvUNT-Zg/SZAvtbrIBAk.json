[
  {
    "start": "0",
    "end": "38000"
  },
  {
    "text": "just to introduce myself my name is John Phillips I'm a principal product manager in ec2 I've been into the company for",
    "start": "0",
    "end": "6750"
  },
  {
    "text": "about three years which makes me tenured for for how quickly we're growing it's great to have",
    "start": "6750",
    "end": "12929"
  },
  {
    "text": "to see everyone here it's really exciting to see that the crowd and thank you for attending you all have a lot of",
    "start": "12929",
    "end": "20820"
  },
  {
    "text": "curiosity about ec2 that makes sense because often ec2 performance is critical for the performance of your",
    "start": "20820",
    "end": "26699"
  },
  {
    "text": "applications and so today we're gonna talk to you about how easy to instances",
    "start": "26699",
    "end": "31740"
  },
  {
    "text": "deliver system performance",
    "start": "31740",
    "end": "34910"
  },
  {
    "start": "38000",
    "end": "38000"
  },
  {
    "text": "whenever I whenever I talk about ec2 I",
    "start": "38000",
    "end": "43140"
  },
  {
    "text": "start by saying ec2 is big and it's not just because we've got an incredible scale we've got a global scale and we",
    "start": "43140",
    "end": "50879"
  },
  {
    "text": "have data centers all over the world well it's because there's just a lot to learn about ec2 and you could you could",
    "start": "50879",
    "end": "56699"
  },
  {
    "text": "have deep dives on a number of topics one of them is how you purchase ec2 instances so you could you could go into",
    "start": "56699",
    "end": "64408"
  },
  {
    "text": "spot and there's some great sessions this week on spot spot you could you could go into reserved instances you",
    "start": "64409",
    "end": "71490"
  },
  {
    "text": "could get into our new offering dedicated hosts and of course there's on-demand and so there's a lot to learn",
    "start": "71490",
    "end": "77130"
  },
  {
    "text": "there there's a lot to learn about our networking so you've got VPC and you've",
    "start": "77130",
    "end": "82860"
  },
  {
    "text": "got a ton of VPC features and there's some great networking talks this week in there that are you know good for deep",
    "start": "82860",
    "end": "88650"
  },
  {
    "text": "diving into that area there there are also our AP is on the ways that you interact with these two two instances so",
    "start": "88650",
    "end": "95880"
  },
  {
    "text": "the the commands that you use to launch and set up your instances the armies themselves you've got auto scaling",
    "start": "95880",
    "end": "102509"
  },
  {
    "text": "CloudFormation and all those things are really awesome to know too",
    "start": "102509",
    "end": "107990"
  },
  {
    "text": "and the analogy I like to draw between all these and the virtual machines themselves are that the AP is and the",
    "start": "107990",
    "end": "115110"
  },
  {
    "text": "other ways to actually purchase and get and get set up or like getting in the car and turning the ignition turning the",
    "start": "115110",
    "end": "120570"
  },
  {
    "text": "key and turning the ignition and that the virtual machine performance itself is like the is like driving the car so",
    "start": "120570",
    "end": "129989"
  },
  {
    "text": "virtual machine performance is like driving the car this session is about driving the car",
    "start": "129989",
    "end": "135349"
  },
  {
    "text": "and again you know our instances are sitting in data centers all over the world and they're in hardware they're on",
    "start": "136159",
    "end": "143879"
  },
  {
    "text": "hardware with hypervisors and the virtual machine sit on top of that and over time we've greatly expanded the",
    "start": "143879",
    "end": "150569"
  },
  {
    "start": "149000",
    "end": "149000"
  },
  {
    "text": "breadth of our offering so we started back in 2006 and we had we had one instance it didn't have a name back then",
    "start": "150569",
    "end": "157230"
  },
  {
    "text": "but it's actually you know became to be the m1 small had one V CPU and 1.7",
    "start": "157230",
    "end": "162659"
  },
  {
    "text": "gigabytes of memory and since I've joined back in 2012 it's crazy to think about how much we've done we've greatly",
    "start": "162659",
    "end": "169620"
  },
  {
    "text": "expanded the offering and there are two reasons for that one of them is that",
    "start": "169620",
    "end": "174780"
  },
  {
    "text": "we've introduced new families we now have a bunch of instance families or five instance families general-purpose",
    "start": "174780",
    "end": "180870"
  },
  {
    "text": "computer optimized storage optimized memory optimized GPUs and then within",
    "start": "180870",
    "end": "186780"
  },
  {
    "text": "each family we've started to turn out generations so what we use generations",
    "start": "186780",
    "end": "193459"
  },
  {
    "text": "to deliver new features and performance that are relevant to a particular instance family and we've recently",
    "start": "193459",
    "end": "200220"
  },
  {
    "text": "introduced D 2 C 4 and M 4 as current",
    "start": "200220",
    "end": "206340"
  },
  {
    "text": "generations and the storage optimized general-purpose and compute optimized",
    "start": "206340",
    "end": "212340"
  },
  {
    "text": "families and so we've got a ton to choose from and it's really an understanding for the performances each",
    "start": "212340",
    "end": "218549"
  },
  {
    "text": "is really important for understanding which one to choose so what to expect so we're gonna first",
    "start": "218549",
    "end": "225599"
  },
  {
    "start": "222000",
    "end": "222000"
  },
  {
    "text": "take some time to define system performance and why it's so important and then we're going to get into how",
    "start": "225599",
    "end": "230669"
  },
  {
    "text": "Amazon ec2 instances deliver instance performance in a virtualized world and",
    "start": "230669",
    "end": "235919"
  },
  {
    "text": "then along the way give you some some tips and some tricks how to make the most out of your experience because once",
    "start": "235919",
    "end": "242099"
  },
  {
    "text": "you once you know you're making the most out of your instance experience then you can then you can focus on selecting the",
    "start": "242099",
    "end": "247169"
  },
  {
    "text": "right instance and making the right instance selection for your workload",
    "start": "247169",
    "end": "251569"
  },
  {
    "text": "so defining performance in order to improve performance the first step is to",
    "start": "253849",
    "end": "259160"
  },
  {
    "text": "actually define what it is and figure out how to measure it and I and I like to talk about how servers are hired to",
    "start": "259160",
    "end": "266120"
  },
  {
    "start": "263000",
    "end": "263000"
  },
  {
    "text": "do jobs you know and what that job is really depends on what your business objectives are or what your personal",
    "start": "266120",
    "end": "272210"
  },
  {
    "text": "objectives are what the application is doing and so if you try to generalize",
    "start": "272210",
    "end": "279520"
  },
  {
    "text": "there are a few things to think about a few way to describe performance one is",
    "start": "279520",
    "end": "285729"
  },
  {
    "start": "280000",
    "end": "280000"
  },
  {
    "text": "response time you know when you when you how quickly is that how quickly can you do a unit of work however you define",
    "start": "285729",
    "end": "292910"
  },
  {
    "text": "what that unit is its throughput is you know how much of a work per unit of time",
    "start": "292910",
    "end": "298130"
  },
  {
    "text": "can you get done and then often consistency is really really important so paying attention not just to what the",
    "start": "298130",
    "end": "304759"
  },
  {
    "text": "performance is and in response time or throughput but also how consistently you get that performance and we're how you",
    "start": "304759",
    "end": "311840"
  },
  {
    "text": "how do you define performance really depends on your perspective so if you're looking at a database application you know when you when you",
    "start": "311840",
    "end": "318530"
  },
  {
    "text": "issue the query how quickly does it come back how many queries per second can you run how many transactions per second can",
    "start": "318530",
    "end": "325220"
  },
  {
    "text": "you do it's a web application you're talking about requests response time how many requests per second can you run if",
    "start": "325220",
    "end": "331699"
  },
  {
    "text": "you're doing machine learning inferences how many inferences can you do Priya at a time and then when you move down the",
    "start": "331699",
    "end": "337669"
  },
  {
    "text": "stack getting closer to the virtual machine itself you'll consider things like file system performance you know",
    "start": "337669",
    "end": "343490"
  },
  {
    "text": "are you getting are you getting cache hits on your on your file system cache and statistics in your buffer and then",
    "start": "343490",
    "end": "350509"
  },
  {
    "text": "once you get down to the device level you're talking about CPU memory disk i/o",
    "start": "350509",
    "end": "355729"
  },
  {
    "text": "Network i/o and how those how those resources are utilized and saturated and",
    "start": "355729",
    "end": "362979"
  },
  {
    "text": "how efficiently those resources are utilized directly impacts your applications performance a simple a",
    "start": "362979",
    "end": "373039"
  },
  {
    "start": "372000",
    "end": "372000"
  },
  {
    "text": "simple thread state model for understanding that as really if your application is either on the CPU and user mode and executing or it's not and",
    "start": "373039",
    "end": "380449"
  },
  {
    "text": "if it's not that can be doing a number of things it can be waiting on the CPU to get scheduled it",
    "start": "380449",
    "end": "387020"
  },
  {
    "text": "could be waiting for disk or network IO it could be waiting for memory to page in or it could just be idle but but",
    "start": "387020",
    "end": "395690"
  },
  {
    "text": "again this is it's a it's a simple model for simply saying that your workload performance depends on the resources",
    "start": "395690",
    "end": "401930"
  },
  {
    "text": "that support it and how efficiently they're utilized it so when we think about instances we think about CPU",
    "start": "401930",
    "end": "409009"
  },
  {
    "start": "405000",
    "end": "405000"
  },
  {
    "text": "memory the network interface and disk and some of the key factors there are for CPU for example number of sockets",
    "start": "409009",
    "end": "416030"
  },
  {
    "text": "remember of course the power of those cores the clock frequency the bursting",
    "start": "416030",
    "end": "421190"
  },
  {
    "text": "capability and then the key indicator that you'll you'll notice when you run some of your performance monitoring",
    "start": "421190",
    "end": "426740"
  },
  {
    "text": "tools and our CPU utilization and run queue length for memory you care a lot",
    "start": "426740",
    "end": "432289"
  },
  {
    "text": "about memory capacity and the key indicators there how much free memory you have if you don't have free memory",
    "start": "432289",
    "end": "438440"
  },
  {
    "text": "you'll often see anonymous paging or swapping to disk that's a sign that your",
    "start": "438440",
    "end": "443690"
  },
  {
    "text": "memory bottleneck when you're when you're talking about network you look at the max bandwidth that your network",
    "start": "443690",
    "end": "450080"
  },
  {
    "text": "interface can produce it's packet rate and you're considering receive and transmit throughput over that capability",
    "start": "450080",
    "end": "456979"
  },
  {
    "text": "as how helpfully that resource is utilized and with disks you've got",
    "start": "456979",
    "end": "462409"
  },
  {
    "text": "input/output operations per second or IELTS and throughput and again your your",
    "start": "462409",
    "end": "467779"
  },
  {
    "text": "the device can get saturated so you may have a wait queue length and you're looking at device utilization and also",
    "start": "467779",
    "end": "473900"
  },
  {
    "text": "device errors and so your application can get bottleneck on any one of these things and getting the most out of each",
    "start": "473900",
    "end": "480620"
  },
  {
    "text": "of the resource is important so you can first understand where the bottlenecks are and then so you can choose the right",
    "start": "480620",
    "end": "485990"
  },
  {
    "text": "instance type and the key there the key lesson there is that for something it's",
    "start": "485990",
    "end": "492319"
  },
  {
    "start": "489000",
    "end": "489000"
  },
  {
    "text": "a hundred percent utilized adding you know at you know can't it can't accept anymore work and you need to focus on",
    "start": "492319",
    "end": "499250"
  },
  {
    "text": "that bottleneck in order to improve the applicant your applications performance and it's actually interesting because you don't necessarily need to see 100%",
    "start": "499250",
    "end": "506900"
  },
  {
    "text": "utilization of something when you're measuring and you're considering admittedly averages or five minute averages or something like that you",
    "start": "506900",
    "end": "513500"
  },
  {
    "text": "could see an average of 60 70 80 % utilization and actually still be",
    "start": "513500",
    "end": "518990"
  },
  {
    "text": "bottlenecking on that source because when you look at the smaller time intervals you're getting up to 100% and so just to make this a",
    "start": "518990",
    "end": "528520"
  },
  {
    "text": "little more real we set up a example a web application it's a it's a two server",
    "start": "528520",
    "end": "535090"
  },
  {
    "text": "architecture or client server and we had we had the client drive load onto a",
    "start": "535090",
    "end": "540490"
  },
  {
    "text": "media wiki installation running on Apache with 140 pages we did a little",
    "start": "540490",
    "end": "546850"
  },
  {
    "text": "bit of optimizing we did PHP op ops code caching and we did some filesystem caching and try to reduce the overhead",
    "start": "546850",
    "end": "553270"
  },
  {
    "text": "and and then over time we drove load so we use siege and we and then we used",
    "start": "553270",
    "end": "558940"
  },
  {
    "text": "cPanel on the server or sorry not cPanel we used collected e on the server to do",
    "start": "558940",
    "end": "564700"
  },
  {
    "text": "monitoring and the monitoring collected at 10-second intervals so we got a pretty good idea of of what resources",
    "start": "564700",
    "end": "570190"
  },
  {
    "text": "were being used and it hooked into Apache so we can see what requests per second were being driven and this chart",
    "start": "570190",
    "end": "575640"
  },
  {
    "text": "this chart shows you know the that I up to requests per second over time it is a",
    "start": "575640",
    "end": "581260"
  },
  {
    "text": "quick note about about monitoring monitoring is really important and we",
    "start": "581260",
    "end": "586720"
  },
  {
    "text": "offer a bunch of cloud watch statistics to help you with that but it's really a shared effort because we you know",
    "start": "586720",
    "end": "592210"
  },
  {
    "text": "intentionally you can't see everything that's going on inside your instance so it's very helpful to you'll use tools there's some great some great partners",
    "start": "592210",
    "end": "599650"
  },
  {
    "text": "that we have that provide tools and we have open sort and there are open source tools out there for collecting statistics on what's going on in your",
    "start": "599650",
    "end": "604810"
  },
  {
    "text": "servers in this particular case we first took a look at at memory statistics and",
    "start": "604810",
    "end": "611620"
  },
  {
    "text": "this is an import large and so it has eight gigs of memory and with plenty of plenty of free memory so you look at it",
    "start": "611620",
    "end": "618640"
  },
  {
    "text": "we're pretty happy that we're not if you go look at the swapping to we're not doing any swapping or anonymous paging so we're pretty happy that there's",
    "start": "618640",
    "end": "624970"
  },
  {
    "text": "enough memory on the host then we wouldn't looked at disk stats and this is attached to an EBS GP 2 volume our",
    "start": "624970",
    "end": "632560"
  },
  {
    "text": "general-purpose SSD volume and you can see from the charts that we're not driving a ton of eye ops it's actually",
    "start": "632560",
    "end": "639910"
  },
  {
    "text": "alright so you can see that our file system cache is actually working pretty well all the reads are getting caught",
    "start": "639910",
    "end": "645279"
  },
  {
    "text": "and the bikes being transferred is pretty small and so just from from the",
    "start": "645279",
    "end": "650980"
  },
  {
    "text": "drive from the EBS formitz definition we know that we're actually not hitting a bottleneck there",
    "start": "650980",
    "end": "656750"
  },
  {
    "text": "let me look at network stats we've got packets per second and you've got bytes transferred and again you can",
    "start": "656750",
    "end": "663030"
  },
  {
    "text": "see you can see the load increasing over time like when we'd expect we're driving a really low number of packets per",
    "start": "663030",
    "end": "669000"
  },
  {
    "text": "second received and transmitted and then we're not saturating our network so we",
    "start": "669000",
    "end": "675270"
  },
  {
    "text": "finally looked at CPU utilization and it's broken down and pretty good granularity we see that this is actually",
    "start": "675270",
    "end": "681840"
  },
  {
    "text": "where we're approaching our bottleneck and it just happens to be if you did a",
    "start": "681840",
    "end": "686970"
  },
  {
    "text": "cursory installation of MediaWiki this is what happens but the the charts broken down in two categories one is the",
    "start": "686970",
    "end": "694410"
  },
  {
    "text": "user mode and CPU utilization and the other is system and system is is the",
    "start": "694410",
    "end": "700020"
  },
  {
    "text": "time that your your kernel spends executing system calls and so your applications not on the CPU it's been",
    "start": "700020",
    "end": "706260"
  },
  {
    "text": "context switch out but the kernel is executing privileged instructions so it's it's really important to understand",
    "start": "706260",
    "end": "712890"
  },
  {
    "text": "this because instant selection on ec2 is this is a tantamount to performance",
    "start": "712890",
    "end": "719130"
  },
  {
    "start": "715000",
    "end": "715000"
  },
  {
    "text": "tuning and it's really pretty incredible it used to be that if you bought a server you spent a lot of money upfront",
    "start": "719130",
    "end": "724380"
  },
  {
    "text": "you waited a long time to get it and then you you you really really really needed to make it work for whatever you",
    "start": "724380",
    "end": "730230"
  },
  {
    "text": "had in mind and it could be a stressful process to make it work if there's a lot of risk involved and a lot of money up",
    "start": "730230",
    "end": "736050"
  },
  {
    "text": "front and with ec2 you can you can try out an instance and give it back just as easily as you launched it and experiment",
    "start": "736050",
    "end": "742530"
  },
  {
    "text": "with a new configuration and find out the one that's that's best suited for your workload ok so so we talked about",
    "start": "742530",
    "end": "752430"
  },
  {
    "text": "why it's so important to understand workload performance and we talked about how you can look at resource utilization",
    "start": "752430",
    "end": "758880"
  },
  {
    "text": "of your ec2 instance and so the question is that's that's all interesting and you",
    "start": "758880",
    "end": "764880"
  },
  {
    "text": "know maybe we knew that already but how do you actually give me compute performance how do you actually give me",
    "start": "764880",
    "end": "770550"
  },
  {
    "text": "I owe performance in a virtualized world I kind of get it on bare metal but and",
    "start": "770550",
    "end": "775650"
  },
  {
    "text": "when you're virtualized how does that happen virtualization being key to what we do here because it's it's critical to being",
    "start": "775650",
    "end": "781500"
  },
  {
    "text": "able to spin up instances quickly it's critical to being able to give them back so it really gives you that agility that",
    "start": "781500",
    "end": "787760"
  },
  {
    "text": "that comes with ec2 so we're first going to talk about how we deliver a compute",
    "start": "787760",
    "end": "793310"
  },
  {
    "text": "performance so as I kind of pointed out",
    "start": "793310",
    "end": "800930"
  },
  {
    "start": "796000",
    "end": "796000"
  },
  {
    "text": "earlier there are two predominant types of CPU utilization one was system system",
    "start": "800930",
    "end": "807740"
  },
  {
    "text": "calls in kernel mode and the other was user mode and x86 64 CPUs have at least",
    "start": "807740",
    "end": "816530"
  },
  {
    "text": "two protection levels and on bare metal they're used to the lowest or the most",
    "start": "816530",
    "end": "823370"
  },
  {
    "text": "privileged level is used to execute privileged instructions on the CPU which changed the state of the system these",
    "start": "823370",
    "end": "829490"
  },
  {
    "text": "can be anything from changing memory mappings to requesting i/o to time keeping and it's to protect the system",
    "start": "829490",
    "end": "837170"
  },
  {
    "text": "from applications and so when you want",
    "start": "837170",
    "end": "842750"
  },
  {
    "text": "to layer on virtualization and you want to actually virtualize the machine the question is where do you put the virtual",
    "start": "842750",
    "end": "849950"
  },
  {
    "text": "machine manager where do you put the hypervisor so that it can then enforce those same kind of protections for the",
    "start": "849950",
    "end": "855110"
  },
  {
    "text": "system but at a layer layer below the kernel of the operating system in the guest virtual machine and just to make",
    "start": "855110",
    "end": "865490"
  },
  {
    "text": "it a little more but first just to make it a little more concrete what we're talking about when we say privileged instructions I used to command s trace",
    "start": "865490",
    "end": "872480"
  },
  {
    "start": "866000",
    "end": "866000"
  },
  {
    "text": "on the on the same web application to let us know what types of system calls",
    "start": "872480",
    "end": "878060"
  },
  {
    "text": "are being are being used most frequently where we're spending the most time so what you know why does system call",
    "start": "878060",
    "end": "884210"
  },
  {
    "text": "performance matter why does privileged instruction performance matter and in this particular case we're we're just",
    "start": "884210",
    "end": "889820"
  },
  {
    "text": "we're reading a bunch of wiki pages you can see that there are a lot of file operations we've got reads writes opens",
    "start": "889820",
    "end": "895850"
  },
  {
    "text": "and closes and in stats and file stats so that's pretty expected but those the performance of those particular",
    "start": "895850",
    "end": "902120"
  },
  {
    "text": "instructions will be important to an application as as you look at your CPU utilization chart and you see the system",
    "start": "902120",
    "end": "908930"
  },
  {
    "text": "performance consuming a greater majority of the CPU than what we have for this application okay",
    "start": "908930",
    "end": "915950"
  },
  {
    "text": "so system call performance is important prior to intel vt-x which is a hardware",
    "start": "915950",
    "end": "923120"
  },
  {
    "start": "920000",
    "end": "920000"
  },
  {
    "text": "virtualization technology you still had the two protection modes on the CPU and you had to figure out how is a virtual",
    "start": "923120",
    "end": "931579"
  },
  {
    "text": "machine good and trap privileged instructions and moderate the execution of those instructions and way back in",
    "start": "931579",
    "end": "937490"
  },
  {
    "text": "the day there really there were really two options there was one option for that and when it all first started that was binary translation and so it was the",
    "start": "937490",
    "end": "943519"
  },
  {
    "text": "VM the virtual machine hyper or the VM M job or the hypervisor job to actually scan the instruction stream that a tech",
    "start": "943519",
    "end": "949940"
  },
  {
    "text": "when there was a privileged instruction and then handle it that's a very expensive process but the upside of that",
    "start": "949940",
    "end": "956839"
  },
  {
    "text": "was that you really didn't need to modify the guest operating system what",
    "start": "956839",
    "end": "961910"
  },
  {
    "text": "came next was para virtualization which offered a simplified device model and it",
    "start": "961910",
    "end": "967250"
  },
  {
    "text": "basically it basically ignored a bunch of stuff it said ok you know for privileged instructions that the the",
    "start": "967250",
    "end": "974389"
  },
  {
    "text": "most privileged mode can't or that hypervisor can't trap right away we're just going to ignore them and but we're",
    "start": "974389",
    "end": "980389"
  },
  {
    "text": "gonna have to tell the operating system and the guest to replace them with hyper calls which were to replace some system",
    "start": "980389",
    "end": "986149"
  },
  {
    "text": "calls he also had para virtualized extensions to replace some device",
    "start": "986149",
    "end": "991579"
  },
  {
    "text": "emulation because there was you know network devices and and and disk devices that were very expensive to emulate but",
    "start": "991579",
    "end": "999860"
  },
  {
    "text": "even with para virtualization in a tutoring structure like this system",
    "start": "999860",
    "end": "1005470"
  },
  {
    "text": "calls had to go through the system calls or hyper calls had to go through the virtual machine manager and added latency so you what you would see is his",
    "start": "1005470",
    "end": "1012220"
  },
  {
    "text": "system call performance supper so what's",
    "start": "1012220",
    "end": "1017709"
  },
  {
    "start": "1017000",
    "end": "1017000"
  },
  {
    "text": "next hardware virtualization so this is after intel vt-x this created another",
    "start": "1017709",
    "end": "1023740"
  },
  {
    "text": "privileged level privilege level and the cpu sort of hypervisor to sit in this meant that you could get down to the",
    "start": "1023740",
    "end": "1030339"
  },
  {
    "text": "most privileged brain very quickly for certain instructions and then in fact you get really great performance on",
    "start": "1030339",
    "end": "1035949"
  },
  {
    "text": "system calls without having to modify a guest operating system this is this is",
    "start": "1035949",
    "end": "1042400"
  },
  {
    "text": "what you know all the current generation Amazon ec2 instances have today",
    "start": "1042400",
    "end": "1047438"
  },
  {
    "text": "and so this is a great new a great new way that provided a lot of flexibility and the guests and trying to launch",
    "start": "1047439",
    "end": "1053139"
  },
  {
    "text": "whatever operating system you needed to but you still had some devices to",
    "start": "1053139",
    "end": "1058239"
  },
  {
    "text": "emulate that we're very expensive to do network devices are very complicated and to fully emulate them actually required",
    "start": "1058239",
    "end": "1064600"
  },
  {
    "text": "a lot of work and could slow down your network performance or same thing for discs and so what happened is we would",
    "start": "1064600",
    "end": "1070749"
  },
  {
    "text": "use prayer virtualized extensions opportunistically to improve performance where it was",
    "start": "1070749",
    "end": "1076809"
  },
  {
    "text": "necessary and and so we did that for network and block i/o we're actually going to talk about a little bit more",
    "start": "1076809",
    "end": "1082450"
  },
  {
    "text": "about that later but the result is a virtualization spectrum we're on the one",
    "start": "1082450",
    "end": "1087609"
  },
  {
    "text": "hand you've got the modified operating system and on the other hand you got an unmodified and then sort of in the middle is the best performance where",
    "start": "1087609",
    "end": "1094239"
  },
  {
    "text": "you've got a pv h vm system that that gives you the best performance and",
    "start": "1094239",
    "end": "1099850"
  },
  {
    "text": "that's what we call the amp r HBM armies and so we we offer a couple of AMI types",
    "start": "1099850",
    "end": "1106419"
  },
  {
    "text": "Amazon machine image types one or one is PV and the other is H VM which is",
    "start": "1106419",
    "end": "1111999"
  },
  {
    "text": "actually PV HBM it's it's hardware virtualized with the paravirtualized extensions for a network and disk i/o",
    "start": "1111999",
    "end": "1118440"
  },
  {
    "text": "and the important thing to remember here just the tip to take home is use h vm",
    "start": "1118440",
    "end": "1124659"
  },
  {
    "text": "mommies and and this is just a picture of the amazon linux detail page where we talk about all the different options",
    "start": "1124659",
    "end": "1130720"
  },
  {
    "text": "that you have and you can still launch Peavey's pv back to Ami's but you really want to use hardware virtualization with",
    "start": "1130720",
    "end": "1136539"
  },
  {
    "text": "the paravirtualized drivers for Network and disk IO and that's the HBM AMI",
    "start": "1136539",
    "end": "1141778"
  },
  {
    "start": "1143000",
    "end": "1143000"
  },
  {
    "text": "speaking of system calls and before we close out this topic one pretty important one that it's helpful to talk",
    "start": "1145410",
    "end": "1153270"
  },
  {
    "text": "about it's actually good time of day or free performance counter it's the calls that you'll you'll make they actually",
    "start": "1153270",
    "end": "1158310"
  },
  {
    "text": "get get time and it can be really impactful for a couple of reasons that",
    "start": "1158310",
    "end": "1163680"
  },
  {
    "text": "one is you might be doing debugging or JVM tracing or something like that it's really critical that you get really high",
    "start": "1163680",
    "end": "1170370"
  },
  {
    "text": "performance access to time so that you can so you can do debugging and then the",
    "start": "1170370",
    "end": "1175770"
  },
  {
    "text": "other thing is that you want to make sure it's very accurate so you don't get you know unstable unstable time can",
    "start": "1175770",
    "end": "1180840"
  },
  {
    "text": "cause all kinds of problems and so you've got a couple options on ec2 today",
    "start": "1180840",
    "end": "1186690"
  },
  {
    "text": "and you can actually query the available clock sources to see what your options are Xen has a para virtualized timer",
    "start": "1186690",
    "end": "1194370"
  },
  {
    "text": "there's the TSC and there are a few other options and the important thing",
    "start": "1194370",
    "end": "1199470"
  },
  {
    "text": "about the model in virtualization is that the operating system is actually querying for time rather than getting events for time if it if it were to use",
    "start": "1199470",
    "end": "1207630"
  },
  {
    "text": "purely to use timer interrupts but it was scheduled off of you know off of a B",
    "start": "1207630",
    "end": "1213570"
  },
  {
    "text": "CPU and we'll talk about how we can you can schedule instances on an off of CPUs",
    "start": "1213570",
    "end": "1218880"
  },
  {
    "text": "then it could have a distorted view of time and so we clearly query clock",
    "start": "1218880",
    "end": "1223980"
  },
  {
    "text": "sources and the tip here is actually to use TSC it's it's a CPU counter excess",
    "start": "1223980",
    "end": "1230160"
  },
  {
    "text": "accessible from from user space with you know with some help and all of our",
    "start": "1230160",
    "end": "1236820"
  },
  {
    "text": "current generations instances support TSE is a clock source here's an example in Linux of how you can go change it you",
    "start": "1236820",
    "end": "1243810"
  },
  {
    "text": "can query you're available clock sources and then you can look at your current clock source you can use a text editor",
    "start": "1243810",
    "end": "1249750"
  },
  {
    "text": "to of your choice to to change the grub configuration in the kernel kernel line",
    "start": "1249750",
    "end": "1255540"
  },
  {
    "text": "to use a different clock source okay so",
    "start": "1255540",
    "end": "1260760"
  },
  {
    "text": "that's that's system call performance now what about just the hypervisors put",
    "start": "1260760",
    "end": "1266970"
  },
  {
    "start": "1261000",
    "end": "1261000"
  },
  {
    "text": "one of its key jobs is the schedule of CPU so that make sure every instance gets gets gets CPU time if you're using",
    "start": "1266970",
    "end": "1274170"
  },
  {
    "text": "HP I'm amazed now the question is like okay so so I know I know what to do",
    "start": "1274170",
    "end": "1279179"
  },
  {
    "text": "there I know how to get the best of some call performance now how do I understand when I launch an instance how it",
    "start": "1279179",
    "end": "1285270"
  },
  {
    "text": "actually gets CPU scheduled by the hypervisor there are a couple of ways to",
    "start": "1285270",
    "end": "1290640"
  },
  {
    "text": "do that and I've labeled them in two categories one is a fixed allocation which essentially means that you're",
    "start": "1290640",
    "end": "1298410"
  },
  {
    "text": "you're given a constant you're given a constant allocation of CPU that can be",
    "start": "1298410",
    "end": "1303900"
  },
  {
    "text": "done in a couple ways one is you just you get dedicated access to course there's a direct relationship between",
    "start": "1303900",
    "end": "1309210"
  },
  {
    "text": "your instance of virtual CPUs and the underlying course and you get the cores",
    "start": "1309210",
    "end": "1314370"
  },
  {
    "text": "whether or not you need them and that's that's the that's the uncapped version",
    "start": "1314370",
    "end": "1320400"
  },
  {
    "text": "of it the cap version of it is when you want to you give a fixed allocation but it's enforced by the hypervisor",
    "start": "1320400",
    "end": "1326820"
  },
  {
    "text": "scheduler and it can actually put a cap on the virtual CPU so you can get a fraction of the underlying course",
    "start": "1326820",
    "end": "1334220"
  },
  {
    "text": "there's other scheduling that's often done at least as an option and it",
    "start": "1334220",
    "end": "1339540"
  },
  {
    "text": "doesn't pertain to the ec2 instances but it's interesting to look at variable allocation can result in variable",
    "start": "1339540",
    "end": "1345450"
  },
  {
    "text": "performance and the motivations for doing something like that if you if you",
    "start": "1345450",
    "end": "1350580"
  },
  {
    "text": "if you see variable performance is that there's often the goal of work conservation so it's a provider that's",
    "start": "1350580",
    "end": "1356400"
  },
  {
    "text": "looking to maximize their CPU utilization rather than give a predictable experience and there are a",
    "start": "1356400",
    "end": "1362760"
  },
  {
    "text": "couple of different schedulers you can do that and one of the one of the ways is fairness schedulers or share",
    "start": "1362760",
    "end": "1367799"
  },
  {
    "text": "schedulers so that when this when the box is used up you can give virtual machines priority on the CPU another",
    "start": "1367799",
    "end": "1374400"
  },
  {
    "text": "would be a deadline or response time scheduler where the idea is that say you you know you're getting web request you",
    "start": "1374400",
    "end": "1381090"
  },
  {
    "text": "want to make sure the virtual machines that are getting web requests on your system are being handled at quickly and",
    "start": "1381090",
    "end": "1386760"
  },
  {
    "text": "so the deadlines scheduler just ensures that the CPU gets the the virtual CPUs",
    "start": "1386760",
    "end": "1391890"
  },
  {
    "text": "are scheduled on the physical CPUs quickly okay but in ec2 we provide fixed",
    "start": "1391890",
    "end": "1399860"
  },
  {
    "start": "1399000",
    "end": "1399000"
  },
  {
    "text": "allocations and one of the examples where we do that and we do it we do a kind of a direct relationship between",
    "start": "1399860",
    "end": "1406190"
  },
  {
    "text": "cores and B CPUs you get them whenever you even if you're not using them is c4 and it's really c4 m4d to all of our all",
    "start": "1406190",
    "end": "1415730"
  },
  {
    "text": "of the current generation instances and a really cool thing about doing that is it enables you to do a couple of things",
    "start": "1415730",
    "end": "1423040"
  },
  {
    "text": "it enables it enables really predictable performance and consistent performance and it also enables us to give finer",
    "start": "1423040",
    "end": "1429710"
  },
  {
    "text": "grained controls over the underlying course because they're yours see four instances is when we first release",
    "start": "1429710",
    "end": "1436700"
  },
  {
    "text": "something called p and c state controls which allows you to control the sleep and the power states of the underlying",
    "start": "1436700",
    "end": "1442880"
  },
  {
    "text": "Intel CPU and you can do that with the c-4 eight extra log which is our largest size and C 4 is our fastest is the",
    "start": "1442880",
    "end": "1451070"
  },
  {
    "text": "fastest ec2 instance out there so why",
    "start": "1451070",
    "end": "1456350"
  },
  {
    "start": "1455000",
    "end": "1455000"
  },
  {
    "text": "would you want to do that well what's interesting about being able to control the C and P States is that if you put",
    "start": "1456350",
    "end": "1461690"
  },
  {
    "text": "all the cores in an idle at a deeper idle state that creates the thermal Headroom for you to actually turbo up or",
    "start": "1461690",
    "end": "1467840"
  },
  {
    "text": "put into a higher power state a single core so that you can get up to 300 megahertz higher clock frequency and so",
    "start": "1467840",
    "end": "1473900"
  },
  {
    "text": "if you're really tinkering around with performance and you have an application that would benefit from really high single thread performance you can do",
    "start": "1473900",
    "end": "1480080"
  },
  {
    "text": "that the trade-off is that to wake those idle cores up is that you incur a little",
    "start": "1480080",
    "end": "1485870"
  },
  {
    "text": "bit of variability and so if you're if your application is isn't tolerant of variability you can that you might not",
    "start": "1485870",
    "end": "1493130"
  },
  {
    "text": "want to do this and you could actually lock everything in to a consistent power state to make it a little more concrete",
    "start": "1493130",
    "end": "1500510"
  },
  {
    "start": "1500000",
    "end": "1500000"
  },
  {
    "text": "about when this is useful is if you've got an application like a transcoding application that leverages ABX to avx2",
    "start": "1500510",
    "end": "1506570"
  },
  {
    "text": "is a very hungry interests power-hungry instruction and so when you run it it actually takes all the cores down into a",
    "start": "1506570",
    "end": "1513770"
  },
  {
    "text": "lower power state and if you don't preset the processor down into the lower the cores down to the lower power state",
    "start": "1513770",
    "end": "1519920"
  },
  {
    "text": "you can actually cause a bunch of you can cause some variability and again if your workload is very",
    "start": "1519920",
    "end": "1525410"
  },
  {
    "text": "ability sensitive you may not want to do that okay so with see four instances you",
    "start": "1525410",
    "end": "1533780"
  },
  {
    "start": "1530000",
    "end": "1530000"
  },
  {
    "text": "get fixed allocations you get the cores they're yours with T two instances we introduced something I think is really",
    "start": "1533780",
    "end": "1539060"
  },
  {
    "text": "cool and that is fixed allocations enforced with fixed allocations of CPU",
    "start": "1539060",
    "end": "1545420"
  },
  {
    "text": "and force with CPU credits when we created t2 we basically responded to",
    "start": "1545420",
    "end": "1551120"
  },
  {
    "text": "feedback that hey I know my application needs a bunch of memory I know how much memory it needs but I often find that",
    "start": "1551120",
    "end": "1557870"
  },
  {
    "text": "the CPU is idle now we wanted to figure out a way to give customers an instance",
    "start": "1557870",
    "end": "1563180"
  },
  {
    "text": "that have less CPU without doing a hard cap on the amount of CPU you get so that",
    "start": "1563180",
    "end": "1569630"
  },
  {
    "text": "essentially when you use the CPU you get the full core as if you're running on you know a c3 or c4 for instance but",
    "start": "1569630",
    "end": "1576860"
  },
  {
    "text": "you're limited in to how long you can do that and it's been a really it's been a really effective way for customers to",
    "start": "1576860",
    "end": "1583220"
  },
  {
    "text": "take applications that don't need a ton of CPU and they can operate within their credit balance and just have incredible",
    "start": "1583220",
    "end": "1589160"
  },
  {
    "text": "performance for for a fraction of the cost and so here's the lineup with t2 we recently launched the t2 large out of",
    "start": "1589160",
    "end": "1596360"
  },
  {
    "text": "response to customer feedback has got eight eight gigs of ram into V CPUs and",
    "start": "1596360",
    "end": "1602540"
  },
  {
    "text": "I'll take a little bit of time to explain the credit model and then relate it back down to the hypervisor in how",
    "start": "1602540",
    "end": "1608530"
  },
  {
    "start": "1606000",
    "end": "1606000"
  },
  {
    "text": "how this is actually enforced so that you could think about the credit model",
    "start": "1608530",
    "end": "1613640"
  },
  {
    "text": "for t2 instances as a credit bucket they continuously receive credits over time",
    "start": "1613640",
    "end": "1619250"
  },
  {
    "text": "and they actually start with the pretty hefty balance when you first launch a t2 instance so when you start up your your",
    "start": "1619250",
    "end": "1625820"
  },
  {
    "text": "you're running at full speed now the instance consumes credits when it's scheduled on to the cpu in other words",
    "start": "1625820",
    "end": "1632810"
  },
  {
    "text": "when you're using your when your application needs to use the CPU it's scheduled on and you deduct from your",
    "start": "1632810",
    "end": "1639290"
  },
  {
    "text": "credit balance the other thing is that the credits expire or leak after 24",
    "start": "1639290",
    "end": "1644600"
  },
  {
    "text": "hours this model allows us to ensure that you're getting you know a fixed amount of performance over a period of",
    "start": "1644600",
    "end": "1650990"
  },
  {
    "text": "time and if you happen to need more it that that's a that's great you can you can actually use a t2 larger saw as a",
    "start": "1650990",
    "end": "1657260"
  },
  {
    "text": "larger t2 size or another instance pipe okay so this is this is a",
    "start": "1657260",
    "end": "1662430"
  },
  {
    "text": "new model for delivering CPU how do you keep track of it the tip is to actually",
    "start": "1662430",
    "end": "1667740"
  },
  {
    "start": "1667000",
    "end": "1667000"
  },
  {
    "text": "look at some of the new unique cloud watch metrics that are specific at t2 and that's the CPU credit balance and",
    "start": "1667740",
    "end": "1674720"
  },
  {
    "text": "the CPU credit usage so you can actually you know the hypervisor keeps track of all this stuff and then we we throw it",
    "start": "1674720",
    "end": "1682050"
  },
  {
    "text": "into cloud watch that you can see how much how much CPU credit your t2 instances have so between c4 and t2 as",
    "start": "1682050",
    "end": "1691080"
  },
  {
    "text": "examples you've got a couple of ways that that the the we can deliver virtual machine performance through the",
    "start": "1691080",
    "end": "1697380"
  },
  {
    "text": "hypervisor what about monitoring performance and before we close out the",
    "start": "1697380",
    "end": "1702810"
  },
  {
    "start": "1700000",
    "end": "1700000"
  },
  {
    "text": "CP topic I just wanted to talk about monitoring performance so we looked at the charts earlier and we saw that you",
    "start": "1702810",
    "end": "1709170"
  },
  {
    "text": "can a couple indicators of work that's being done you've got user time you've got system time and you've got io wait",
    "start": "1709170",
    "end": "1715080"
  },
  {
    "text": "time for example else you may not even be using the CPU but what happens if",
    "start": "1715080",
    "end": "1721020"
  },
  {
    "text": "your sketch if the virtual machine manager the hypervisor schedules you off the CPU for example when you run out of",
    "start": "1721020",
    "end": "1728190"
  },
  {
    "text": "t2 credits so you're normally getting the full core performance on t2 and you've been out of credits so now you're",
    "start": "1728190",
    "end": "1733860"
  },
  {
    "text": "you're being throttled to the rate at which you receive credits that actually",
    "start": "1733860",
    "end": "1739860"
  },
  {
    "text": "shows up as something called steal time and a common misconception was steal",
    "start": "1739860",
    "end": "1745530"
  },
  {
    "start": "1740000",
    "end": "1740000"
  },
  {
    "text": "time is that it's actually hurting your workloads performance you see it you wonder what it is",
    "start": "1745530",
    "end": "1750660"
  },
  {
    "text": "and you think gosh it's having performance that's stolen from me and it's actually more appropriately labeled",
    "start": "1750660",
    "end": "1757350"
  },
  {
    "text": "something like you know involuntarily schedule off the CPU and in the case of",
    "start": "1757350",
    "end": "1762960"
  },
  {
    "text": "t2 which uses a CPU cap to enforce the cpu credit balance of zero that that",
    "start": "1762960",
    "end": "1769770"
  },
  {
    "text": "happens you know you at millisecond intervals at a time slice you're actually scheduled off the cpu so that",
    "start": "1769770",
    "end": "1775950"
  },
  {
    "text": "you're actually operating at a rate once you're out of CPU credits which is consistent with the rate of which you",
    "start": "1775950",
    "end": "1781320"
  },
  {
    "text": "earn the credits or what we call baseline performance so the key the key here is to leverage cloud watch metrics",
    "start": "1781320",
    "end": "1787800"
  },
  {
    "text": "keep track of your CPU credit balances and there are also a couple other educate",
    "start": "1787800",
    "end": "1792909"
  },
  {
    "text": "is where the hypervisor is doing work and you might see little blips of steal time but the key again is to remember",
    "start": "1792909",
    "end": "1798009"
  },
  {
    "text": "that it's act not actually impacting your instance performance I in the case",
    "start": "1798009",
    "end": "1803019"
  },
  {
    "text": "of t2 it's part of the product definition the cpu credit product definition okay so we talked about how",
    "start": "1803019",
    "end": "1813099"
  },
  {
    "text": "the virtual machine we schedules instances on and off CPUs and how we deliver that what about IO your workload",
    "start": "1813099",
    "end": "1819849"
  },
  {
    "text": "performance is often you know very dependent on performance whether it's disk IO or Network IO how does that work",
    "start": "1819849",
    "end": "1828239"
  },
  {
    "start": "1828000",
    "end": "1828000"
  },
  {
    "text": "well it's the hypervisors it's the it's a virtualization and the hypervisors job to schedule ira requests between between",
    "start": "1828239",
    "end": "1836109"
  },
  {
    "text": "virtual machines and shared physical devices and there are a couple ways to do that one common way is that is the",
    "start": "1836109",
    "end": "1843190"
  },
  {
    "text": "pair of virtualized Network and disk driver model way which is called the",
    "start": "1843190",
    "end": "1848259"
  },
  {
    "text": "split driver model and I'll spend some time talking a little bit more about that after Intel reduced introduced a",
    "start": "1848259",
    "end": "1857139"
  },
  {
    "text": "feature called Intel vtd which introduced an i/o memory management unit you can actually also do direct device",
    "start": "1857139",
    "end": "1863919"
  },
  {
    "text": "pass-through of an i/o device or an accelerator directly to the instances",
    "start": "1863919",
    "end": "1869379"
  },
  {
    "text": "and so you avoid any of the i/o scheduling by the hypervisor all together",
    "start": "1869379",
    "end": "1875909"
  },
  {
    "text": "so first the split driver model this is a depiction of how it kind of works you've got you've got the hardware layer",
    "start": "1877259",
    "end": "1884139"
  },
  {
    "text": "with all the physical resources you've got the the virtual machine manager layer and then you've got the guest",
    "start": "1884139",
    "end": "1889299"
  },
  {
    "text": "domains and then something called the driver domain the driver domain has the actual physical device drivers in it and",
    "start": "1889299",
    "end": "1895590"
  },
  {
    "text": "what we call the back-end network or a block device driver the back-end network",
    "start": "1895590",
    "end": "1900909"
  },
  {
    "text": "or block device driver communicates with a front-end driver that sits in the guest operating systems and this is a",
    "start": "1900909",
    "end": "1906940"
  },
  {
    "text": "simplified version of a driver and it doesn't so it doesn't require any expensive emulation on the part of the",
    "start": "1906940",
    "end": "1913960"
  },
  {
    "text": "hypervisor or in the driver domain so",
    "start": "1913960",
    "end": "1919960"
  },
  {
    "text": "how did the out of the back-end and front-end drivers actually communicate with each other we'll find out that actually matters a",
    "start": "1919960",
    "end": "1925419"
  },
  {
    "text": "lot because can use you can you can you can employ some kernels and pay attention to some things that allow you to get much much",
    "start": "1925419",
    "end": "1931770"
  },
  {
    "text": "better performance in the split driver model so they're really three things that make the split driver model work",
    "start": "1931770",
    "end": "1938370"
  },
  {
    "text": "one is a communication ring buffer which is a shared memory page between the",
    "start": "1938370",
    "end": "1943410"
  },
  {
    "text": "guest domain and the i/o domain and that's that's where the guest domain will put in component operations and",
    "start": "1943410",
    "end": "1950040"
  },
  {
    "text": "commands it'll say I want to do a read I want to do a write and the other part of",
    "start": "1950040",
    "end": "1955950"
  },
  {
    "text": "it is an event notification system called event channels where after the",
    "start": "1955950",
    "end": "1961230"
  },
  {
    "text": "guests for example says I want to do a read it rings the doorbell to the driver domain and says do this read for me and",
    "start": "1961230",
    "end": "1968600"
  },
  {
    "text": "then the final part of it is a memory granting system so that when the i/o is",
    "start": "1968600",
    "end": "1974670"
  },
  {
    "text": "ready so the driver domain for example grabs the information it needs from the disk pulls it into memory that memory is",
    "start": "1974670",
    "end": "1982200"
  },
  {
    "text": "actually granted and shared with the the guests so that it can then go pull the data back into the in to infer use",
    "start": "1982200",
    "end": "1989010"
  },
  {
    "text": "forgot by the application so three things a communication rebuffed our communication ring buffer an event",
    "start": "1989010",
    "end": "1995730"
  },
  {
    "text": "channel notification system and then a mechanism for granting shared memory between the two domains so that you can",
    "start": "1995730",
    "end": "2001340"
  },
  {
    "text": "transfer lots of data so that that seems",
    "start": "2001340",
    "end": "2006500"
  },
  {
    "text": "kind of complicated and involves a lot of steps I'll walk you through those steps but the the key here is that any",
    "start": "2006500",
    "end": "2015110"
  },
  {
    "text": "inefficiencies in this process are going to show up when you're doing a lot a lot of i/o and we've got an instance that is",
    "start": "2015110",
    "end": "2021920"
  },
  {
    "text": "capable of doing a lot of i/o and that is as I - instances so when we launched",
    "start": "2021920",
    "end": "2028640"
  },
  {
    "start": "2023000",
    "end": "2023000"
  },
  {
    "text": "it you know we marketed as being able to do 600 365 ka random retie hops that's",
    "start": "2028640",
    "end": "2034010"
  },
  {
    "text": "just a ton of I own an insane amount it's a really awesome instance type and I often joke that if you don't know what",
    "start": "2034010",
    "end": "2040220"
  },
  {
    "text": "instance to use you can start with an with an i to eight extra-large and then work it down from there so how do you",
    "start": "2040220",
    "end": "2050480"
  },
  {
    "text": "actually get 365,000 retie ops here's the process that I just described and so",
    "start": "2050480",
    "end": "2056210"
  },
  {
    "text": "that the the chart the blocks on the right are the virtual memory then you have the virtual memory of the IO domain and the steps",
    "start": "2056210",
    "end": "2063100"
  },
  {
    "text": "are that the guest the instance actually grants memory to the IO domain and it",
    "start": "2063100",
    "end": "2068649"
  },
  {
    "text": "does so through a hyper call to the virtual machine manager it it writes the commands at once the operations it wants",
    "start": "2068650",
    "end": "2074950"
  },
  {
    "text": "to execute to the communication ring buffer it signals to the driver domain",
    "start": "2074950",
    "end": "2080230"
  },
  {
    "text": "that it wants those that to go read the ring buffer and actually do what it what it needs to do and then the driver",
    "start": "2080230",
    "end": "2086110"
  },
  {
    "text": "domain maps those grants performs the operation copies the data into the grants and then signals back to the the",
    "start": "2086110",
    "end": "2093370"
  },
  {
    "text": "instance and it on maps the grant the the memory and every pages that have",
    "start": "2093370",
    "end": "2098890"
  },
  {
    "text": "been granted and this is actually expensive because in the process of",
    "start": "2098890",
    "end": "2103900"
  },
  {
    "text": "mapping an unmapped grant granted pages it encrypted the system incurs TLB",
    "start": "2103900",
    "end": "2109870"
  },
  {
    "text": "flushes and those are those can be expensive and so what you'll see in 3.33",
    "start": "2109870",
    "end": "2115030"
  },
  {
    "text": "da-da-da-da carl's is that you're not actually able to achieve the rated performance of an of",
    "start": "2115030",
    "end": "2120190"
  },
  {
    "text": "an i2 and i2 8 extra-large 365 ki ops",
    "start": "2120190",
    "end": "2126000"
  },
  {
    "text": "you actually need to use a kernel that supports persistent and indirect grants and the difference in the process here",
    "start": "2126000",
    "end": "2133270"
  },
  {
    "text": "as is that the mapping and on mapping doesn't happen the the i/o domain and",
    "start": "2133270",
    "end": "2139300"
  },
  {
    "text": "the guest domain pre agree on a shared a shared shared grant pool which in other",
    "start": "2139300",
    "end": "2146020"
  },
  {
    "text": "words is that you know granted pages and instead of of doing all the mapping on a",
    "start": "2146020",
    "end": "2151180"
  },
  {
    "text": "mapping the guest just copies to and from the grant pool and so if you're",
    "start": "2151180",
    "end": "2157900"
  },
  {
    "text": "using 300 kernel or greater you actually benefit from this performance improvement you can drive the 365 K read",
    "start": "2157900",
    "end": "2164950"
  },
  {
    "text": "I ops that we discussed for the I to 8 extra-large and to be more concrete you",
    "start": "2164950",
    "end": "2172930"
  },
  {
    "text": "can use Amazon Linux 13 not oh nine or later Ubuntu 1404 or later and rel 7 or later",
    "start": "2172930",
    "end": "2181980"
  },
  {
    "text": "to take advantage of this feature so one",
    "start": "2182289",
    "end": "2188349"
  },
  {
    "start": "2188000",
    "end": "2188000"
  },
  {
    "text": "thing that we talked about in the process of explaining the split driver model is event handling so there's a",
    "start": "2188349",
    "end": "2196150"
  },
  {
    "text": "notification system so that the guests can ring the doorbell of the driver domain and vice versa and you can think",
    "start": "2196150",
    "end": "2202239"
  },
  {
    "text": "about events as interrupts a virtual CPU has to get preempted and handle the",
    "start": "2202239",
    "end": "2207789"
  },
  {
    "text": "callbacks and that can be expensive if you're doing a ton of i/o are getting a ton of notifications and if you're in",
    "start": "2207789",
    "end": "2214449"
  },
  {
    "text": "the proximity of a hundred thousand two hundred thousand notifications and they're all being handled by a single",
    "start": "2214449",
    "end": "2219729"
  },
  {
    "text": "virtual CPU on the guest it can actually overwhelm that CPU and you can see reduced CPU performance so there was an",
    "start": "2219729",
    "end": "2228249"
  },
  {
    "text": "early kernel version 2.6 dot thirty-six wear notifications went to a single",
    "start": "2228249",
    "end": "2233709"
  },
  {
    "text": "virtual hardware interrupt and beyond that you had support for event callbacks",
    "start": "2233709",
    "end": "2240039"
  },
  {
    "text": "in Zen which allows the hypervisor to or less the instance tell the hypervisor",
    "start": "2240039",
    "end": "2245829"
  },
  {
    "text": "dispatch B CPUs to target with event notifications you can actually see that",
    "start": "2245829",
    "end": "2251319"
  },
  {
    "text": "this is enabled and that you're more more clear more evenly distributing events across the event notifications",
    "start": "2251319",
    "end": "2257739"
  },
  {
    "text": "across B CPUs by checking D message and looking for the text Zen hvm callback",
    "start": "2257739",
    "end": "2263380"
  },
  {
    "text": "vector for event deliveries enable and you can you can actually look in Linux",
    "start": "2263380",
    "end": "2268799"
  },
  {
    "text": "at your interrupts and an interrupt Council over time and ensure that they're they're evenly distributed over",
    "start": "2268799",
    "end": "2275289"
  },
  {
    "text": "B CPUs and that's an important performance improvement irq balance is is another package that helps distribute",
    "start": "2275289",
    "end": "2283359"
  },
  {
    "text": "interrupts and it supports Zen event callbacks in version 1.0 seven or higher",
    "start": "2283359",
    "end": "2290489"
  },
  {
    "text": "so in addition to using the the modern kernels you just want to make sure that you're the model the modern kernels get",
    "start": "2290489",
    "end": "2297429"
  },
  {
    "text": "you a lot and so using the modern kernels are really helpful for doing i/o in a virtualized environment and then irq balancing is also important so that",
    "start": "2297429",
    "end": "2307539"
  },
  {
    "start": "2306000",
    "end": "2306000"
  },
  {
    "text": "was disc now on to networking so a lot",
    "start": "2307539",
    "end": "2312549"
  },
  {
    "text": "of what we talked about for disk i/o also apply - Network IO you've got the split the",
    "start": "2312549",
    "end": "2320290"
  },
  {
    "text": "split driver model with front-end drivers and back-end drivers the device driver sits in the driver domain and",
    "start": "2320290",
    "end": "2327430"
  },
  {
    "text": "communicates with the physical NIC and so this is just a quick illustration of",
    "start": "2327430",
    "end": "2333390"
  },
  {
    "text": "a packet going through into the front-end driver the backend driver",
    "start": "2333390",
    "end": "2338560"
  },
  {
    "text": "copied that essentially what happened here is the guest wrote into a communication ring buffer signaled to",
    "start": "2338560",
    "end": "2345490"
  },
  {
    "text": "the driver domain it read from the communication ring before the the pages",
    "start": "2345490",
    "end": "2350740"
  },
  {
    "text": "it was granted what the data it needs and what to do with it and then sends the data out through the physical NIC",
    "start": "2350740",
    "end": "2357720"
  },
  {
    "text": "well what if you could just avoid all of",
    "start": "2357720",
    "end": "2362860"
  },
  {
    "text": "this what if you could directly pass through a network device to the instance",
    "start": "2362860",
    "end": "2368410"
  },
  {
    "text": "and avoid all this traversing and you can we introduced enhanced networking a",
    "start": "2368410",
    "end": "2375630"
  },
  {
    "start": "2374000",
    "end": "2374000"
  },
  {
    "text": "little while ago and it uses single route IO virtualization to expose a",
    "start": "2375630",
    "end": "2381430"
  },
  {
    "text": "physical they had to expose a physical network device through a virtual function to an instance and this means",
    "start": "2381430",
    "end": "2388450"
  },
  {
    "text": "you completely disintermediate the driver domain you don't in this",
    "start": "2388450",
    "end": "2394570"
  },
  {
    "text": "particular case you're using a specialized driver and you don't need to worry about persistent grants for the network i/o performance and you can just",
    "start": "2394570",
    "end": "2403150"
  },
  {
    "text": "get you can get to a ton a ton higher I ops because you've got a physical device",
    "start": "2403150",
    "end": "2408160"
  },
  {
    "text": "that's dedicated for doing the packet processing for you so you get lower latencies high I ops and the trick is is",
    "start": "2408160",
    "end": "2414730"
  },
  {
    "text": "that your your OS needs to know I needs to have the right drivers installed and ec2 needs to be told that you're using",
    "start": "2414730",
    "end": "2422140"
  },
  {
    "text": "enhanced networking because we will we will do a configuration in the hypervisor itself that says hey I want",
    "start": "2422140",
    "end": "2428920"
  },
  {
    "text": "you to expose the virtual networking functions to this instance versus using this Plitvice for device driver model",
    "start": "2428920",
    "end": "2436920"
  },
  {
    "text": "and so after enhanced networking you've got a different paradigm the data goes",
    "start": "2437340",
    "end": "2445240"
  },
  {
    "start": "2439000",
    "end": "2439000"
  },
  {
    "text": "from the application to the NIC driver within the guest straight to the IRS our Iove network",
    "start": "2445240",
    "end": "2450890"
  },
  {
    "text": "device in our case what we have today is the until eight to five 99 Network driver it's included in Amazon Linux and",
    "start": "2450890",
    "end": "2458330"
  },
  {
    "text": "you can also download it and install it on your own so the tip is to use enhance",
    "start": "2458330",
    "end": "2464900"
  },
  {
    "start": "2462000",
    "end": "2462000"
  },
  {
    "text": "networking you get high I ops low Layton sees the instance must support it and",
    "start": "2464900",
    "end": "2470770"
  },
  {
    "text": "the way that this signaling actually happens so you signal to ec2 to use this",
    "start": "2470770",
    "end": "2476360"
  },
  {
    "text": "property is through an ami an omni property and so you look for that your armies have and your armies have this",
    "start": "2476360",
    "end": "2484370"
  },
  {
    "text": "property on your friend what the command is but you can look at you can look at it through the console or using the",
    "start": "2484370",
    "end": "2490550"
  },
  {
    "text": "command line when you describe an ami and it will say SR I would be simple if it's enabled ok so we've talked a lot",
    "start": "2490550",
    "end": "2499610"
  },
  {
    "text": "about the importance of understanding performance about the importance of understanding what the resources are capable of we've got a number of",
    "start": "2499610",
    "end": "2506180"
  },
  {
    "text": "instances that having that have great technology under the hood Intel CPUs",
    "start": "2506180",
    "end": "2512420"
  },
  {
    "text": "lots of fast SSDs we backed and we've got we've got a model for delivering CPU",
    "start": "2512420",
    "end": "2519020"
  },
  {
    "text": "that allows you to to pay less for it because you don't need as much and that's t2 and you can use CPU credits",
    "start": "2519020",
    "end": "2526580"
  },
  {
    "text": "instead of having CPU laying around when you don't need it and we've talked about device pass-through and how you can get",
    "start": "2526580",
    "end": "2533030"
  },
  {
    "text": "really awesome networking performance and how the how the hypervisor in a",
    "start": "2533030",
    "end": "2538880"
  },
  {
    "text": "virtual machine world is actually delivered so just to recap instant",
    "start": "2538880",
    "end": "2546470"
  },
  {
    "text": "selection is tantamount to performance tuning like it I can't stress this enough setting up definitions and performance",
    "start": "2546470",
    "end": "2552860"
  },
  {
    "text": "monitoring performance and then making changes you know ec2 is awesome for that",
    "start": "2552860",
    "end": "2558110"
  },
  {
    "text": "you can give an instance back just as quickly as you got it so like I said you could start with an i to eight extra-large and then and then give it",
    "start": "2558110",
    "end": "2563900"
  },
  {
    "text": "back to us as soon as you find out it's too much for what you need and and but",
    "start": "2563900",
    "end": "2569600"
  },
  {
    "text": "in order to start this process you need to know that you're actually getting the most out of your ec2 instance to begin",
    "start": "2569600",
    "end": "2575060"
  },
  {
    "text": "with and so we talked about using PV HBM Ami's so make sure that",
    "start": "2575060",
    "end": "2581849"
  },
  {
    "start": "2577000",
    "end": "2577000"
  },
  {
    "text": "you're you're taking advantage of hardware virtualization and make sure you're taking advantage of pair of",
    "start": "2581849",
    "end": "2587459"
  },
  {
    "text": "virtualized extensions where it makes sense to and that's to use pv h PM Ami's layer on to that enhance networking",
    "start": "2587459",
    "end": "2594449"
  },
  {
    "text": "drivers and making sure your instances Ami's tell us that you're using enhanced networking and you get the best of",
    "start": "2594449",
    "end": "2599849"
  },
  {
    "text": "hardware virtualization pv extensions and device pass-through timekeeping use",
    "start": "2599849",
    "end": "2608190"
  },
  {
    "text": "the TSC that'll give you the best performance and when I'm talking about",
    "start": "2608190",
    "end": "2614009"
  },
  {
    "text": "the different ways we deliver CP performance when you get the cores and the cores are dedicated to you we can offer things like finer control over",
    "start": "2614009",
    "end": "2620640"
  },
  {
    "text": "them and so you've got C state and P state control which is really cool if you're getting into tuning for specific",
    "start": "2620640",
    "end": "2627269"
  },
  {
    "text": "workloads for example workloads that use a BX to monitor your t2 CPU credits t2",
    "start": "2627269",
    "end": "2634979"
  },
  {
    "text": "SR a really awesome option I talked to customers particularly big customers that that have a big IT organization but",
    "start": "2634979",
    "end": "2641940"
  },
  {
    "text": "they want to give their developers flexibility and agility so they let their developers go and launch bunch of instances well you don't want them",
    "start": "2641940",
    "end": "2648630"
  },
  {
    "text": "watching you actually don't want them launching i28 extra larges if you're concerned about cost first and and t2 is",
    "start": "2648630",
    "end": "2655259"
  },
  {
    "text": "a terrific default if you're if you're trying to govern your organization to experiment with instances and have them",
    "start": "2655259",
    "end": "2660630"
  },
  {
    "text": "start with T to use modern kernel versions to take advantage of persistent",
    "start": "2660630",
    "end": "2667170"
  },
  {
    "text": "grants for i/o performance this makes a huge difference you can when you're running a benchmark you can see a 50% to",
    "start": "2667170",
    "end": "2673979"
  },
  {
    "text": "80 to 90% performance difference on a ops if you've got persistent grants versus not using persistent grants and",
    "start": "2673979",
    "end": "2681719"
  },
  {
    "text": "then remember that event callbacks need to be distributed across guest virtual CPUs and if you're if you're seeing one",
    "start": "2681719",
    "end": "2689339"
  },
  {
    "text": "B CPU pegged really high and you see you check where the interrupts are being delivered they're all being delivered to",
    "start": "2689339",
    "end": "2694769"
  },
  {
    "text": "that B CPU and a high i/o situation for example you can look at distributing",
    "start": "2694769",
    "end": "2700319"
  },
  {
    "text": "those IR cues better and that's again making sure using model modern kernel versions and also making sure using irq",
    "start": "2700319",
    "end": "2706049"
  },
  {
    "text": "balancing tools and then again using hands networking so really appreciate",
    "start": "2706049",
    "end": "2713699"
  },
  {
    "text": "you guys being here that we could talk a little bit more about how we had deliver virtualized",
    "start": "2713699",
    "end": "2719440"
  },
  {
    "text": "performance and I hope you can take these tips home if you didn't hear something that you wanted to hear we've",
    "start": "2719440",
    "end": "2725710"
  },
  {
    "text": "we've got a lot in the ec2 documentation but we've also got a bunch of our engineers here around a developer booth",
    "start": "2725710",
    "end": "2731560"
  },
  {
    "text": "and I'll be available outside right after this to answer any of your questions so thank you very much",
    "start": "2731560",
    "end": "2739650"
  }
]