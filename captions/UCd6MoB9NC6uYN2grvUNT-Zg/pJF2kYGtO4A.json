[
  {
    "start": "0",
    "end": "16000"
  },
  {
    "text": "hello my name is satishati vakeshwaran",
    "start": "640",
    "end": "3360"
  },
  {
    "text": "and i'm a senior product engineer on the",
    "start": "3360",
    "end": "5440"
  },
  {
    "text": "amazon redshift team",
    "start": "5440",
    "end": "8160"
  },
  {
    "text": "in this video i'm going to show you a",
    "start": "8160",
    "end": "9920"
  },
  {
    "text": "simple demo of how to create a model",
    "start": "9920",
    "end": "12480"
  },
  {
    "text": "using amazon redshift's ml feature",
    "start": "12480",
    "end": "17119"
  },
  {
    "start": "16000",
    "end": "58000"
  },
  {
    "text": "amazon redshift's ml feature allows sql",
    "start": "17119",
    "end": "19680"
  },
  {
    "text": "users",
    "start": "19680",
    "end": "20240"
  },
  {
    "text": "such as data analysts database",
    "start": "20240",
    "end": "22080"
  },
  {
    "text": "developers and data scientists",
    "start": "22080",
    "end": "23920"
  },
  {
    "text": "to create train and deploy machine",
    "start": "23920",
    "end": "26160"
  },
  {
    "text": "learning models",
    "start": "26160",
    "end": "27119"
  },
  {
    "text": "using familiar sql commands in amazon",
    "start": "27119",
    "end": "29359"
  },
  {
    "text": "redship",
    "start": "29359",
    "end": "30400"
  },
  {
    "text": "amazon redshift ml seamlessly uses",
    "start": "30400",
    "end": "33520"
  },
  {
    "text": "amazon sagemaker for training models",
    "start": "33520",
    "end": "36000"
  },
  {
    "text": "while the predictions are done in",
    "start": "36000",
    "end": "37680"
  },
  {
    "text": "amazon dreadshift amazon redshift ml",
    "start": "37680",
    "end": "41040"
  },
  {
    "text": "automatically discovers and tunes the",
    "start": "41040",
    "end": "43200"
  },
  {
    "text": "best model",
    "start": "43200",
    "end": "44320"
  },
  {
    "text": "based on the training data set using",
    "start": "44320",
    "end": "46559"
  },
  {
    "text": "amazon stage maker",
    "start": "46559",
    "end": "47760"
  },
  {
    "text": "autopilot amazon stage maker neo",
    "start": "47760",
    "end": "50879"
  },
  {
    "text": "compiles the trained model as an",
    "start": "50879",
    "end": "52640"
  },
  {
    "text": "executable which is deployed as a sql",
    "start": "52640",
    "end": "54960"
  },
  {
    "text": "udf",
    "start": "54960",
    "end": "55760"
  },
  {
    "text": "in amazon redshift",
    "start": "55760",
    "end": "58879"
  },
  {
    "start": "58000",
    "end": "296000"
  },
  {
    "text": "let's go to the demo",
    "start": "58879",
    "end": "62000"
  },
  {
    "text": "for the demo imagine a data analyst with",
    "start": "62879",
    "end": "66080"
  },
  {
    "text": "no machine learning expertise is running",
    "start": "66080",
    "end": "67840"
  },
  {
    "text": "the create model",
    "start": "67840",
    "end": "68880"
  },
  {
    "text": "to predict whether a mobile subscriber",
    "start": "68880",
    "end": "71040"
  },
  {
    "text": "will churn for a given time period",
    "start": "71040",
    "end": "73360"
  },
  {
    "text": "we will use an imaginary data set for a",
    "start": "73360",
    "end": "75680"
  },
  {
    "text": "mobile operator",
    "start": "75680",
    "end": "78000"
  },
  {
    "text": "the table customer activity is already",
    "start": "78000",
    "end": "80159"
  },
  {
    "text": "created and loaded",
    "start": "80159",
    "end": "81680"
  },
  {
    "text": "in the database",
    "start": "81680",
    "end": "84400"
  },
  {
    "text": "for training purposes we will use the",
    "start": "85360",
    "end": "87200"
  },
  {
    "text": "customer data before the year 2020",
    "start": "87200",
    "end": "89840"
  },
  {
    "text": "and for the inference queries we will",
    "start": "89840",
    "end": "91600"
  },
  {
    "text": "use the customer data from",
    "start": "91600",
    "end": "93040"
  },
  {
    "text": "2020. let's run the create model command",
    "start": "93040",
    "end": "97200"
  },
  {
    "text": "with the training data coming from a",
    "start": "97200",
    "end": "98960"
  },
  {
    "text": "select query",
    "start": "98960",
    "end": "100560"
  },
  {
    "text": "i've already replaced the required iam",
    "start": "100560",
    "end": "103280"
  },
  {
    "text": "role",
    "start": "103280",
    "end": "103920"
  },
  {
    "text": "and the s3 bucket values in the command",
    "start": "103920",
    "end": "107119"
  },
  {
    "text": "the s3 bucket is used to store",
    "start": "107119",
    "end": "109200"
  },
  {
    "text": "intermediate results",
    "start": "109200",
    "end": "110640"
  },
  {
    "text": "and for amazon sage maker to utilize the",
    "start": "110640",
    "end": "113200"
  },
  {
    "text": "training data set",
    "start": "113200",
    "end": "116000"
  },
  {
    "text": "the target option specifies which column",
    "start": "116000",
    "end": "118960"
  },
  {
    "text": "is the machine learning label",
    "start": "118960",
    "end": "120799"
  },
  {
    "text": "and in our case it is the churn column",
    "start": "120799",
    "end": "124640"
  },
  {
    "text": "the create model might take some time",
    "start": "124640",
    "end": "126960"
  },
  {
    "text": "because many activities take place",
    "start": "126960",
    "end": "129200"
  },
  {
    "text": "behind the scenes in creating the best",
    "start": "129200",
    "end": "130879"
  },
  {
    "text": "trained model using amazon stage maker",
    "start": "130879",
    "end": "133200"
  },
  {
    "text": "autopilot",
    "start": "133200",
    "end": "135840"
  },
  {
    "text": "let's run the command",
    "start": "136560",
    "end": "143840"
  },
  {
    "text": "at the end of creating the model a",
    "start": "145040",
    "end": "146560"
  },
  {
    "text": "redshift sql function named",
    "start": "146560",
    "end": "148520"
  },
  {
    "text": "mlfn customer churn is created",
    "start": "148520",
    "end": "151680"
  },
  {
    "text": "which will be used for predict",
    "start": "151680",
    "end": "153519"
  },
  {
    "text": "prediction queries",
    "start": "153519",
    "end": "156160"
  },
  {
    "text": "the create model command is complete now",
    "start": "156160",
    "end": "160319"
  },
  {
    "text": "the show model command can be used to",
    "start": "161599",
    "end": "163680"
  },
  {
    "text": "check the status of the create model",
    "start": "163680",
    "end": "165760"
  },
  {
    "text": "let's run this command",
    "start": "165760",
    "end": "171840"
  },
  {
    "text": "you can see now the model state is ready",
    "start": "173840",
    "end": "177920"
  },
  {
    "text": "now let's run done some predictions",
    "start": "178000",
    "end": "182159"
  },
  {
    "text": "here is an example prediction query",
    "start": "183040",
    "end": "185120"
  },
  {
    "text": "which uses the sql function",
    "start": "185120",
    "end": "186959"
  },
  {
    "text": "created by the model the inputs are the",
    "start": "186959",
    "end": "189599"
  },
  {
    "text": "same columns",
    "start": "189599",
    "end": "190640"
  },
  {
    "text": "that are used in the create model",
    "start": "190640",
    "end": "192640"
  },
  {
    "text": "command",
    "start": "192640",
    "end": "193760"
  },
  {
    "text": "let me run this query now anything that",
    "start": "193760",
    "end": "196159"
  },
  {
    "text": "is true",
    "start": "196159",
    "end": "197360"
  },
  {
    "text": "in the output is an indication that the",
    "start": "197360",
    "end": "199280"
  },
  {
    "text": "customer is going to churn",
    "start": "199280",
    "end": "213840"
  },
  {
    "text": "here is another variation of the",
    "start": "221120",
    "end": "222959"
  },
  {
    "text": "inference query",
    "start": "222959",
    "end": "224239"
  },
  {
    "text": "which gives the total count of customers",
    "start": "224239",
    "end": "226480"
  },
  {
    "text": "who are going to churn",
    "start": "226480",
    "end": "227760"
  },
  {
    "text": "versus who are going to stay let me run",
    "start": "227760",
    "end": "232879"
  },
  {
    "text": "this",
    "start": "238840",
    "end": "241360"
  },
  {
    "text": "so as you can see 298 customers",
    "start": "241360",
    "end": "244720"
  },
  {
    "text": "are going to churn based on the",
    "start": "244720",
    "end": "246560"
  },
  {
    "text": "prediction",
    "start": "246560",
    "end": "249040"
  },
  {
    "text": "i'm going to show you the inference in",
    "start": "249439",
    "end": "250799"
  },
  {
    "text": "the form of visualization using amazon",
    "start": "250799",
    "end": "253040"
  },
  {
    "text": "quick site for more insights",
    "start": "253040",
    "end": "256000"
  },
  {
    "text": "i have used the inference functions to",
    "start": "256000",
    "end": "258160"
  },
  {
    "text": "analyze more patterns using",
    "start": "258160",
    "end": "259919"
  },
  {
    "text": "visualization share",
    "start": "259919",
    "end": "263040"
  },
  {
    "text": "first one is customer channel by month",
    "start": "265360",
    "end": "267199"
  },
  {
    "text": "as you can see",
    "start": "267199",
    "end": "268880"
  },
  {
    "text": "july and october have the highest churn",
    "start": "268880",
    "end": "270960"
  },
  {
    "text": "rate",
    "start": "270960",
    "end": "273199"
  },
  {
    "text": "the second one is customer churn by",
    "start": "274160",
    "end": "275600"
  },
  {
    "text": "state",
    "start": "275600",
    "end": "277759"
  },
  {
    "text": "in this case new jersey has the highest",
    "start": "277759",
    "end": "280320"
  },
  {
    "text": "turn rate",
    "start": "280320",
    "end": "281280"
  },
  {
    "text": "followed by the state of new york in",
    "start": "281280",
    "end": "284080"
  },
  {
    "text": "this video",
    "start": "284080",
    "end": "285280"
  },
  {
    "text": "we introduced and did a demo on simple",
    "start": "285280",
    "end": "287919"
  },
  {
    "text": "create model",
    "start": "287919",
    "end": "288880"
  },
  {
    "text": "using amazon redshift ml thanks for",
    "start": "288880",
    "end": "293440"
  },
  {
    "text": "watching",
    "start": "294840",
    "end": "297840"
  }
]