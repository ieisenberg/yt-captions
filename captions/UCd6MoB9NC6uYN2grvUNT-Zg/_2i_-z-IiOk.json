[
  {
    "text": "hi everyone I'm Sasha I'm the lead",
    "start": "0",
    "end": "2550"
  },
  {
    "text": "engineer at Pongo Pongo is a fin tech",
    "start": "2550",
    "end": "5790"
  },
  {
    "text": "startup and we provide real-time payment",
    "start": "5790",
    "end": "8429"
  },
  {
    "text": "processing to our customers I've been at",
    "start": "8429",
    "end": "11550"
  },
  {
    "text": "panco forgot a year and a half and I",
    "start": "11550",
    "end": "13650"
  },
  {
    "text": "lead a team small team with six",
    "start": "13650",
    "end": "15360"
  },
  {
    "text": "engineer's but they're really talented",
    "start": "15360",
    "end": "18890"
  },
  {
    "text": "so today I'm gonna be talking about",
    "start": "19400",
    "end": "21390"
  },
  {
    "text": "bundle I may not have heard of us and",
    "start": "21390",
    "end": "23430"
  },
  {
    "text": "what we do which is real-time payment",
    "start": "23430",
    "end": "24900"
  },
  {
    "text": "processing I'll get into a little bit of",
    "start": "24900",
    "end": "28529"
  },
  {
    "text": "our architecture and how we're able to",
    "start": "28529",
    "end": "29939"
  },
  {
    "text": "do payment processing in real time",
    "start": "29939",
    "end": "31949"
  },
  {
    "text": "touching on some of the applications",
    "start": "31949",
    "end": "33630"
  },
  {
    "text": "involved and then in order in our",
    "start": "33630",
    "end": "37230"
  },
  {
    "text": "platform we use a ton of services from",
    "start": "37230",
    "end": "38850"
  },
  {
    "text": "AWS but there's three in particular",
    "start": "38850",
    "end": "40920"
  },
  {
    "text": "really important when we talk about",
    "start": "40920",
    "end": "42870"
  },
  {
    "text": "transactional processing so I want to",
    "start": "42870",
    "end": "45360"
  },
  {
    "text": "highlight those and how they've allowed",
    "start": "45360",
    "end": "46860"
  },
  {
    "text": "us to overcome some of the challenges",
    "start": "46860",
    "end": "48320"
  },
  {
    "text": "first one would be AWS simple queue",
    "start": "48320",
    "end": "50940"
  },
  {
    "text": "service national on AWS key management",
    "start": "50940",
    "end": "53520"
  },
  {
    "text": "service and third the SCC to auto scale",
    "start": "53520",
    "end": "58460"
  },
  {
    "text": "so humble analogy there in Toronto and",
    "start": "59460",
    "end": "61620"
  },
  {
    "text": "April 2017 since then our engineering",
    "start": "61620",
    "end": "65400"
  },
  {
    "text": "team has grown from two to about six the",
    "start": "65400",
    "end": "69360"
  },
  {
    "text": "Punggol platform itself acts as a hub",
    "start": "69360",
    "end": "71850"
  },
  {
    "text": "and connects to various payment networks",
    "start": "71850",
    "end": "73380"
  },
  {
    "text": "visa UFT ACH in order to provide",
    "start": "73380",
    "end": "76950"
  },
  {
    "text": "flexibility to our customers to pay the",
    "start": "76950",
    "end": "78780"
  },
  {
    "text": "way they want but the Pongo Pongo",
    "start": "78780",
    "end": "81750"
  },
  {
    "text": "platform was born out of the idea of",
    "start": "81750",
    "end": "83190"
  },
  {
    "text": "bringing real-time payments to Canada in",
    "start": "83190",
    "end": "85170"
  },
  {
    "text": "the past couple years",
    "start": "85170",
    "end": "86790"
  },
  {
    "text": "modern payment networks like Visa and",
    "start": "86790",
    "end": "88590"
  },
  {
    "text": "MasterCard have allowed third parties",
    "start": "88590",
    "end": "90450"
  },
  {
    "text": "and innovative companies like bungle in",
    "start": "90450",
    "end": "93030"
  },
  {
    "text": "order access to their networks to",
    "start": "93030",
    "end": "94890"
  },
  {
    "text": "process transactions so that's where the",
    "start": "94890",
    "end": "97170"
  },
  {
    "text": "real time comes in",
    "start": "97170",
    "end": "99920"
  },
  {
    "text": "so with your time statements we get",
    "start": "102380",
    "end": "105149"
  },
  {
    "text": "real-time business payments so the",
    "start": "105149",
    "end": "107549"
  },
  {
    "text": "business payment landscape in Canada",
    "start": "107549",
    "end": "109049"
  },
  {
    "text": "hasn't changed much in the past decade",
    "start": "109049",
    "end": "110700"
  },
  {
    "text": "or so they still write cheques they",
    "start": "110700",
    "end": "113490"
  },
  {
    "text": "still send dfts but checks are slow",
    "start": "113490",
    "end": "116700"
  },
  {
    "text": "expensive prone to fraud eft is also",
    "start": "116700",
    "end": "120240"
  },
  {
    "text": "fairly slow so when a business uses",
    "start": "120240",
    "end": "124289"
  },
  {
    "text": "Punggol they're able to process payments",
    "start": "124289",
    "end": "126240"
  },
  {
    "text": "through these more modern networks Visa",
    "start": "126240",
    "end": "127709"
  },
  {
    "text": "and MasterCard and the payments settle",
    "start": "127709",
    "end": "130798"
  },
  {
    "text": "in in a matter of minutes and seconds so",
    "start": "130799",
    "end": "132720"
  },
  {
    "text": "they're able to make these payments in",
    "start": "132720",
    "end": "133920"
  },
  {
    "text": "real time which is very important so",
    "start": "133920",
    "end": "137370"
  },
  {
    "text": "some examples of this for companies",
    "start": "137370",
    "end": "140730"
  },
  {
    "text": "whose core business revolves around real",
    "start": "140730",
    "end": "142950"
  },
  {
    "text": "time so if you're a lender who's",
    "start": "142950",
    "end": "145049"
  },
  {
    "text": "automated the underwriting process",
    "start": "145049",
    "end": "146220"
  },
  {
    "text": "you're now able to disperse funds just",
    "start": "146220",
    "end": "149040"
  },
  {
    "text": "as quickly or for the new pay of the new",
    "start": "149040",
    "end": "153120"
  },
  {
    "text": "gig economy a real-time payroll anyone",
    "start": "153120",
    "end": "157019"
  },
  {
    "text": "everyone works in Canada's you're",
    "start": "157019",
    "end": "158849"
  },
  {
    "text": "familiar with a two-week pay cycle right",
    "start": "158849",
    "end": "161390"
  },
  {
    "text": "well work has changed and people want to",
    "start": "161390",
    "end": "164069"
  },
  {
    "text": "get paid now at the end of their shift",
    "start": "164069",
    "end": "165389"
  },
  {
    "text": "or at the end of the day an example of",
    "start": "165389",
    "end": "168000"
  },
  {
    "text": "this is drivers of ride-sharing",
    "start": "168000",
    "end": "169739"
  },
  {
    "text": "applications they want to get paid per",
    "start": "169739",
    "end": "172530"
  },
  {
    "text": "ride or once they've done driving for",
    "start": "172530",
    "end": "174600"
  },
  {
    "text": "the day and real-time payments makes as",
    "start": "174600",
    "end": "177120"
  },
  {
    "text": "possible",
    "start": "177120",
    "end": "179510"
  },
  {
    "text": "so how do we do this well we started",
    "start": "179959",
    "end": "183409"
  },
  {
    "text": "building the pumping platform about a",
    "start": "183409",
    "end": "184670"
  },
  {
    "text": "year ago so we had the advantage to",
    "start": "184670",
    "end": "187219"
  },
  {
    "text": "choose some modern technologies and tool",
    "start": "187219",
    "end": "188870"
  },
  {
    "text": "sets and we also took a cloud first",
    "start": "188870",
    "end": "191090"
  },
  {
    "text": "approach so we really looked for what",
    "start": "191090",
    "end": "193040"
  },
  {
    "text": "out what was out there and what can we",
    "start": "193040",
    "end": "194420"
  },
  {
    "text": "utilize without trying to reinvent the",
    "start": "194420",
    "end": "196010"
  },
  {
    "text": "wheel so we also knew that when closing",
    "start": "196010",
    "end": "200540"
  },
  {
    "text": "transactions",
    "start": "200540",
    "end": "201349"
  },
  {
    "text": "concurrency would be one of the first",
    "start": "201349",
    "end": "203060"
  },
  {
    "text": "challenges we face so if anyone heard of",
    "start": "203060",
    "end": "205549"
  },
  {
    "text": "a language called elixir yeah okay at",
    "start": "205549",
    "end": "209480"
  },
  {
    "text": "one hand it's better than better than I",
    "start": "209480",
    "end": "211579"
  },
  {
    "text": "thought so ellipse is a language built",
    "start": "211579",
    "end": "214909"
  },
  {
    "text": "around concurrency it's built the",
    "start": "214909",
    "end": "217280"
  },
  {
    "text": "functional language and it sits atop the",
    "start": "217280",
    "end": "219200"
  },
  {
    "text": "Erlang VM which was built with",
    "start": "219200",
    "end": "221329"
  },
  {
    "text": "concurrency and fault-tolerance in mind",
    "start": "221329",
    "end": "223810"
  },
  {
    "text": "so our poor platform consists of several",
    "start": "223810",
    "end": "227060"
  },
  {
    "text": "applications mostly written in elixir",
    "start": "227060",
    "end": "228739"
  },
  {
    "text": "that communicate through a central",
    "start": "228739",
    "end": "230719"
  },
  {
    "text": "messaging system when processing",
    "start": "230719",
    "end": "233689"
  },
  {
    "text": "transactions we do see payment card data",
    "start": "233689",
    "end": "235969"
  },
  {
    "text": "so it must be a PCI compliant",
    "start": "235969",
    "end": "238010"
  },
  {
    "text": "environment for anyone who worked in",
    "start": "238010",
    "end": "240200"
  },
  {
    "text": "that kind of scenario you know how",
    "start": "240200",
    "end": "242750"
  },
  {
    "text": "challenging it can be for anyone who",
    "start": "242750",
    "end": "245090"
  },
  {
    "text": "hasn't consider yourselves pretty lucky",
    "start": "245090",
    "end": "247629"
  },
  {
    "text": "so we explores both the public API and a",
    "start": "247629",
    "end": "250729"
  },
  {
    "text": "web front times and we leverage a ton of",
    "start": "250729",
    "end": "253669"
  },
  {
    "text": "AWS services to make this possible with",
    "start": "253669",
    "end": "256250"
  },
  {
    "text": "just a small team",
    "start": "256250",
    "end": "258880"
  },
  {
    "text": "so here is kind of a high level diagram",
    "start": "259810",
    "end": "261760"
  },
  {
    "text": "of the Pongo platform we have a web",
    "start": "261760",
    "end": "264940"
  },
  {
    "text": "front-end which is a series of static",
    "start": "264940",
    "end": "266410"
  },
  {
    "text": "follows served through s3 and CloudFront",
    "start": "266410",
    "end": "269100"
  },
  {
    "text": "we also accept through our API requests",
    "start": "269100",
    "end": "273639"
  },
  {
    "text": "so all transaction requests come into",
    "start": "273639",
    "end": "276010"
  },
  {
    "text": "our first application which is teller",
    "start": "276010",
    "end": "278430"
  },
  {
    "text": "teller as part of its own ec2 autoscale",
    "start": "278430",
    "end": "280900"
  },
  {
    "text": "bid",
    "start": "280900",
    "end": "281580"
  },
  {
    "text": "teller then communicates with some other",
    "start": "281580",
    "end": "283630"
  },
  {
    "text": "AWS services such as SES such as last",
    "start": "283630",
    "end": "286419"
  },
  {
    "text": "Akash and RDS one Stella has received",
    "start": "286419",
    "end": "289870"
  },
  {
    "text": "this transaction or best simply run",
    "start": "289870",
    "end": "291850"
  },
  {
    "text": "through some simple business rules and",
    "start": "291850",
    "end": "293230"
  },
  {
    "text": "validations and then place the message",
    "start": "293230",
    "end": "295210"
  },
  {
    "text": "onto our messaging queues so our",
    "start": "295210",
    "end": "297880"
  },
  {
    "text": "messaging cues are sqs FIFO queues next",
    "start": "297880",
    "end": "302169"
  },
  {
    "text": "the core application the one involving",
    "start": "302169",
    "end": "304090"
  },
  {
    "text": "the actual payment processing is able to",
    "start": "304090",
    "end": "305919"
  },
  {
    "text": "retrieve these messages",
    "start": "305919",
    "end": "307030"
  },
  {
    "text": "it's then able to add the appropriate",
    "start": "307030",
    "end": "309430"
  },
  {
    "text": "payment card data it decrypts this data",
    "start": "309430",
    "end": "312340"
  },
  {
    "text": "using AWS kms and it able to forward the",
    "start": "312340",
    "end": "315760"
  },
  {
    "text": "message on to the appropriate payment",
    "start": "315760",
    "end": "317410"
  },
  {
    "text": "network once that done once that's",
    "start": "317410",
    "end": "320440"
  },
  {
    "text": "complete core is able to put the message",
    "start": "320440",
    "end": "322360"
  },
  {
    "text": "back onto the messaging system for",
    "start": "322360",
    "end": "324280"
  },
  {
    "text": "further reconciliation downstream so",
    "start": "324280",
    "end": "329080"
  },
  {
    "text": "that's kind of the flow in a high-level",
    "start": "329080",
    "end": "332400"
  },
  {
    "text": "so as you can see we use a ton of",
    "start": "332430",
    "end": "334600"
  },
  {
    "text": "services from AWS to make this possible",
    "start": "334600",
    "end": "336370"
  },
  {
    "text": "and that's really just from the",
    "start": "336370",
    "end": "339100"
  },
  {
    "text": "application developers perspective we",
    "start": "339100",
    "end": "340870"
  },
  {
    "text": "also use a lot of the networking stuff",
    "start": "340870",
    "end": "342280"
  },
  {
    "text": "as well but there are three really",
    "start": "342280",
    "end": "345700"
  },
  {
    "text": "important services in transaction",
    "start": "345700",
    "end": "347470"
  },
  {
    "text": "processing that I want to highlight and",
    "start": "347470",
    "end": "349720"
  },
  {
    "text": "really talk about and show the",
    "start": "349720",
    "end": "350860"
  },
  {
    "text": "challenges that they've helped us solve",
    "start": "350860",
    "end": "352260"
  },
  {
    "text": "so the first one being AWS key",
    "start": "352260",
    "end": "354789"
  },
  {
    "text": "management service the next AWS simple",
    "start": "354789",
    "end": "357280"
  },
  {
    "text": "queue service and the third AWS ec2",
    "start": "357280",
    "end": "359890"
  },
  {
    "text": "autoscale so the next couple slides I'm",
    "start": "359890",
    "end": "362710"
  },
  {
    "text": "going to show three distinct challenges",
    "start": "362710",
    "end": "364690"
  },
  {
    "text": "we faced when building this transaction",
    "start": "364690",
    "end": "366460"
  },
  {
    "text": "processing system and how each of these",
    "start": "366460",
    "end": "369010"
  },
  {
    "text": "services a lot of us to overcome it",
    "start": "369010",
    "end": "372330"
  },
  {
    "text": "so the first one is encryption key",
    "start": "375100",
    "end": "377600"
  },
  {
    "text": "management so as I said Hangul is a PCI",
    "start": "377600",
    "end": "380810"
  },
  {
    "text": "DSS compliant environment so we store",
    "start": "380810",
    "end": "383600"
  },
  {
    "text": "credit card data and along with that",
    "start": "383600",
    "end": "385190"
  },
  {
    "text": "comes some very strong rules we need to",
    "start": "385190",
    "end": "387889"
  },
  {
    "text": "ensure that where we store the card",
    "start": "387889",
    "end": "389600"
  },
  {
    "text": "number it is unreadable",
    "start": "389600",
    "end": "391040"
  },
  {
    "text": "we need to mean we need to store our key",
    "start": "391040",
    "end": "394100"
  },
  {
    "text": "encryption key in a separate location",
    "start": "394100",
    "end": "395840"
  },
  {
    "text": "from our data encryption key we also",
    "start": "395840",
    "end": "398870"
  },
  {
    "text": "need to rotate these keys once they've",
    "start": "398870",
    "end": "401030"
  },
  {
    "text": "hit their end-of-life we also need to",
    "start": "401030",
    "end": "404120"
  },
  {
    "text": "provide detailed audit trail for access",
    "start": "404120",
    "end": "406250"
  },
  {
    "text": "to all of these keys and then lastly we",
    "start": "406250",
    "end": "409220"
  },
  {
    "text": "need to implement dual control so dual",
    "start": "409220",
    "end": "411110"
  },
  {
    "text": "control means that no single entity can",
    "start": "411110",
    "end": "413810"
  },
  {
    "text": "have access to both the cripton keys or",
    "start": "413810",
    "end": "416240"
  },
  {
    "text": "the decryption process itself so they do",
    "start": "416240",
    "end": "421340"
  },
  {
    "text": "exist various hardware and software",
    "start": "421340",
    "end": "423500"
  },
  {
    "text": "solutions that will provide this for you",
    "start": "423500",
    "end": "425500"
  },
  {
    "text": "but for young startup",
    "start": "425500",
    "end": "427460"
  },
  {
    "text": "they're expensive and other solutions",
    "start": "427460",
    "end": "430430"
  },
  {
    "text": "can be difficult to scale so we wanted",
    "start": "430430",
    "end": "432410"
  },
  {
    "text": "to take again a cloud-first approach so",
    "start": "432410",
    "end": "434780"
  },
  {
    "text": "we chose AWS kms",
    "start": "434780",
    "end": "438250"
  },
  {
    "text": "so right away AWS kms is a PCI DSS level",
    "start": "439740",
    "end": "443220"
  },
  {
    "text": "one certified environment so they",
    "start": "443220",
    "end": "445140"
  },
  {
    "text": "automatically satisfy our requirement to",
    "start": "445140",
    "end": "446970"
  },
  {
    "text": "hold the key encryption keys they also",
    "start": "446970",
    "end": "449760"
  },
  {
    "text": "provide us key rotation right away right",
    "start": "449760",
    "end": "452310"
  },
  {
    "text": "out of the box of the quick",
    "start": "452310",
    "end": "453740"
  },
  {
    "text": "they provide audit capabilities for",
    "start": "453740",
    "end": "456150"
  },
  {
    "text": "access to these keys through cloud watch",
    "start": "456150",
    "end": "458640"
  },
  {
    "text": "and cloud trail and by separating where",
    "start": "458640",
    "end": "463050"
  },
  {
    "text": "the encryption keys are held by creating",
    "start": "463050",
    "end": "466050"
  },
  {
    "text": "separate AWS accounts one to hold the",
    "start": "466050",
    "end": "469170"
  },
  {
    "text": "encryption keys and one to hold the",
    "start": "469170",
    "end": "470580"
  },
  {
    "text": "application that actually is involved",
    "start": "470580",
    "end": "472020"
  },
  {
    "text": "with decryption we're going to satisfy",
    "start": "472020",
    "end": "473730"
  },
  {
    "text": "the dual control requirement so a toluse",
    "start": "473730",
    "end": "477510"
  },
  {
    "text": "kms really right away solves a lot of",
    "start": "477510",
    "end": "480510"
  },
  {
    "text": "the problems and requirements that we",
    "start": "480510",
    "end": "482040"
  },
  {
    "text": "had and minimize the amount of custom",
    "start": "482040",
    "end": "484110"
  },
  {
    "text": "code we had to write in order to build",
    "start": "484110",
    "end": "486180"
  },
  {
    "text": "this key management solution so the",
    "start": "486180",
    "end": "491250"
  },
  {
    "text": "second challenge we face as you can see",
    "start": "491250",
    "end": "493710"
  },
  {
    "text": "is there's a lot of communication in",
    "start": "493710",
    "end": "496140"
  },
  {
    "text": "autumn applications and third parties",
    "start": "496140",
    "end": "497820"
  },
  {
    "text": "involved in processing a transaction so",
    "start": "497820",
    "end": "500430"
  },
  {
    "text": "in animating should maintain our robust",
    "start": "500430",
    "end": "503070"
  },
  {
    "text": "communication method between all these",
    "start": "503070",
    "end": "504450"
  },
  {
    "text": "applications so for that we introduced a",
    "start": "504450",
    "end": "506610"
  },
  {
    "text": "central messaging system by using a",
    "start": "506610",
    "end": "510000"
  },
  {
    "text": "central messaging system it allows us to",
    "start": "510000",
    "end": "512310"
  },
  {
    "text": "handle scenarios where a third-party",
    "start": "512310",
    "end": "515039"
  },
  {
    "text": "payment processor may be unavailable",
    "start": "515040",
    "end": "517469"
  },
  {
    "text": "right while application is still able to",
    "start": "517470",
    "end": "520440"
  },
  {
    "text": "accept transactions place them on the",
    "start": "520440",
    "end": "522810"
  },
  {
    "text": "queue and wait and further ability of",
    "start": "522810",
    "end": "525810"
  },
  {
    "text": "that payment network again another",
    "start": "525810",
    "end": "528570"
  },
  {
    "text": "scenario occurs where we already see",
    "start": "528570",
    "end": "531060"
  },
  {
    "text": "large amount a large volume of",
    "start": "531060",
    "end": "532560"
  },
  {
    "text": "transactions and we don't want to just",
    "start": "532560",
    "end": "534600"
  },
  {
    "text": "simply pass through and flood our",
    "start": "534600",
    "end": "536700"
  },
  {
    "text": "partner payment networks so by using the",
    "start": "536700",
    "end": "539040"
  },
  {
    "text": "queues we can provide back pressure and",
    "start": "539040",
    "end": "540690"
  },
  {
    "text": "with the core application provide still",
    "start": "540690",
    "end": "543840"
  },
  {
    "text": "that constant flow of transactions",
    "start": "543840",
    "end": "547370"
  },
  {
    "text": "so we do process transaction messages in",
    "start": "548480",
    "end": "551330"
  },
  {
    "text": "this queueing system so we need to",
    "start": "551330",
    "end": "553550"
  },
  {
    "text": "ensure that messages are able to be",
    "start": "553550",
    "end": "554840"
  },
  {
    "text": "encrypted on the fly and that nothing's",
    "start": "554840",
    "end": "557270"
  },
  {
    "text": "lost right that's unacceptable in the",
    "start": "557270",
    "end": "559940"
  },
  {
    "text": "world of payments we can't lose your",
    "start": "559940",
    "end": "562460"
  },
  {
    "text": "transaction so that was very important",
    "start": "562460",
    "end": "564650"
  },
  {
    "text": "for us here here earlier what that pod",
    "start": "564650",
    "end": "567140"
  },
  {
    "text": "give a fantastic talk and in-depth look",
    "start": "567140",
    "end": "569180"
  },
  {
    "text": "at messaging semantics very important so",
    "start": "569180",
    "end": "573440"
  },
  {
    "text": "we had some requirements when looking",
    "start": "573440",
    "end": "575660"
  },
  {
    "text": "for these queueing systems one is that",
    "start": "575660",
    "end": "577370"
  },
  {
    "text": "it works well with Erlang and elixir at",
    "start": "577370",
    "end": "579530"
  },
  {
    "text": "all the languages to is that it's easy",
    "start": "579530",
    "end": "582770"
  },
  {
    "text": "it's easy to scale for a small team we",
    "start": "582770",
    "end": "584870"
  },
  {
    "text": "don't want to handle the infrastructure",
    "start": "584870",
    "end": "586180"
  },
  {
    "text": "do they in transaction volume so we want",
    "start": "586180",
    "end": "588770"
  },
  {
    "text": "it to just be automatic and the third is",
    "start": "588770",
    "end": "592610"
  },
  {
    "text": "it's fast right we're processing",
    "start": "592610",
    "end": "594680"
  },
  {
    "text": "transactions in real time we want this",
    "start": "594680",
    "end": "596750"
  },
  {
    "text": "thing to happen and about three seconds",
    "start": "596750",
    "end": "598820"
  },
  {
    "text": "right we can't wait for the queues in",
    "start": "598820",
    "end": "601370"
  },
  {
    "text": "that case so we did explore some of the",
    "start": "601370",
    "end": "606230"
  },
  {
    "text": "calming messaging technologies out there",
    "start": "606230",
    "end": "607730"
  },
  {
    "text": "tap Redis rather than queue you guys",
    "start": "607730",
    "end": "610850"
  },
  {
    "text": "probably used some combination of those",
    "start": "610850",
    "end": "613240"
  },
  {
    "text": "but we found that election being new",
    "start": "613240",
    "end": "616160"
  },
  {
    "text": "there wasn't proper support for it or",
    "start": "616160",
    "end": "618460"
  },
  {
    "text": "there were too complex for the size of",
    "start": "618460",
    "end": "620690"
  },
  {
    "text": "our team we didn't want to be",
    "start": "620690",
    "end": "622640"
  },
  {
    "text": "overwhelmed in complexity and",
    "start": "622640",
    "end": "625000"
  },
  {
    "text": "considering how important a component",
    "start": "625000",
    "end": "627230"
  },
  {
    "text": "this was in our application so we chose",
    "start": "627230",
    "end": "632330"
  },
  {
    "text": "SQ us and it was basically a drop in",
    "start": "632330",
    "end": "635030"
  },
  {
    "text": "drop in implementation for us message",
    "start": "635030",
    "end": "639680"
  },
  {
    "text": "encryption at the click of a button",
    "start": "639680",
    "end": "640970"
  },
  {
    "text": "right I using the FIFO queues we get",
    "start": "640970",
    "end": "644840"
  },
  {
    "text": "strict ordering which is important when",
    "start": "644840",
    "end": "646670"
  },
  {
    "text": "it comes to transactions we want to",
    "start": "646670",
    "end": "648560"
  },
  {
    "text": "ensure that we've pulled money from one",
    "start": "648560",
    "end": "650870"
  },
  {
    "text": "location before pushing it to another we",
    "start": "650870",
    "end": "654140"
  },
  {
    "text": "also get simple message deduplication",
    "start": "654140",
    "end": "655780"
  },
  {
    "text": "kind of out of the box again we do need",
    "start": "655780",
    "end": "659210"
  },
  {
    "text": "to enforce some trucks at the",
    "start": "659210",
    "end": "660320"
  },
  {
    "text": "application layer but it's nice to know",
    "start": "660320",
    "end": "662150"
  },
  {
    "text": "that that is there",
    "start": "662150",
    "end": "665410"
  },
  {
    "text": "and yeah and it scales automatically as",
    "start": "665910",
    "end": "668279"
  },
  {
    "text": "well right so we don't have to worry",
    "start": "668279",
    "end": "669930"
  },
  {
    "text": "about increased transaction volumes",
    "start": "669930",
    "end": "671520"
  },
  {
    "text": "overwhelming our queues so as to is",
    "start": "671520",
    "end": "674700"
  },
  {
    "text": "really really helped us with this",
    "start": "674700",
    "end": "675870"
  },
  {
    "text": "problem and and made it a simple",
    "start": "675870",
    "end": "677790"
  },
  {
    "text": "decision",
    "start": "677790",
    "end": "680029"
  },
  {
    "text": "so the last one is that at its core",
    "start": "682480",
    "end": "685960"
  },
  {
    "text": "Pongo",
    "start": "685960",
    "end": "686590"
  },
  {
    "text": "is a transaction processing engine and",
    "start": "686590",
    "end": "688720"
  },
  {
    "text": "transaction volumes very they're not",
    "start": "688720",
    "end": "690580"
  },
  {
    "text": "constant we do hit spikes and we do see",
    "start": "690580",
    "end": "694240"
  },
  {
    "text": "lo times either side our main",
    "start": "694240",
    "end": "697540"
  },
  {
    "text": "development language is elixir so we do",
    "start": "697540",
    "end": "700990"
  },
  {
    "text": "we are able to squeeze a lot of",
    "start": "700990",
    "end": "702970"
  },
  {
    "text": "performance a lot of raw compute power",
    "start": "702970",
    "end": "704470"
  },
  {
    "text": "out of any given machine so elixir",
    "start": "704470",
    "end": "707530"
  },
  {
    "text": "itself runs it decoding elixir runs and",
    "start": "707530",
    "end": "710800"
  },
  {
    "text": "lightweight processes and each of these",
    "start": "710800",
    "end": "712450"
  },
  {
    "text": "is able to be garbage collected",
    "start": "712450",
    "end": "713670"
  },
  {
    "text": "individually so it means that we don't",
    "start": "713670",
    "end": "716200"
  },
  {
    "text": "have them to stop the world garbage",
    "start": "716200",
    "end": "717580"
  },
  {
    "text": "collection processes of other languages",
    "start": "717580",
    "end": "719640"
  },
  {
    "text": "so it gives us the ability to really",
    "start": "719640",
    "end": "721750"
  },
  {
    "text": "squeeze every ounce of performance out",
    "start": "721750",
    "end": "723460"
  },
  {
    "text": "of a machine",
    "start": "723460",
    "end": "724590"
  },
  {
    "text": "alright so why don't we just go buy the",
    "start": "724590",
    "end": "727510"
  },
  {
    "text": "biggest machine at the store",
    "start": "727510",
    "end": "728770"
  },
  {
    "text": "call it a day and we're going on forward",
    "start": "728770",
    "end": "730920"
  },
  {
    "text": "all right but that's that doesn't fit",
    "start": "730920",
    "end": "734350"
  },
  {
    "text": "right it's too expensive we're a small",
    "start": "734350",
    "end": "736390"
  },
  {
    "text": "start-up we want to optimize on costs we",
    "start": "736390",
    "end": "738070"
  },
  {
    "text": "want to be able to scale with the",
    "start": "738070",
    "end": "739690"
  },
  {
    "text": "transaction volumes appropriately you",
    "start": "739690",
    "end": "742870"
  },
  {
    "text": "know it's hope about we don't just want",
    "start": "742870",
    "end": "744370"
  },
  {
    "text": "to scale a whole system in one way right",
    "start": "744370",
    "end": "746470"
  },
  {
    "text": "we have multiple applications with",
    "start": "746470",
    "end": "747910"
  },
  {
    "text": "different usage patterns teller core",
    "start": "747910",
    "end": "750450"
  },
  {
    "text": "right so we wanted to apply different",
    "start": "750450",
    "end": "752650"
  },
  {
    "text": "scaling rules to different parts of our",
    "start": "752650",
    "end": "754450"
  },
  {
    "text": "platform",
    "start": "754450",
    "end": "756870"
  },
  {
    "text": "so Inc and ECS autoscale so here using",
    "start": "758180",
    "end": "763250"
  },
  {
    "text": "ETS auto-scale a TC to our spell sorry",
    "start": "763250",
    "end": "765410"
  },
  {
    "text": "we're able to find separate scaling",
    "start": "765410",
    "end": "767600"
  },
  {
    "text": "groups for our applications so one for",
    "start": "767600",
    "end": "769280"
  },
  {
    "text": "teller and one for court this allows us",
    "start": "769280",
    "end": "772550"
  },
  {
    "text": "to handle off scenarios where we receive",
    "start": "772550",
    "end": "774950"
  },
  {
    "text": "a large influx of transactions we can",
    "start": "774950",
    "end": "777560"
  },
  {
    "text": "scale up teller appropriately based on",
    "start": "777560",
    "end": "779630"
  },
  {
    "text": "simple metrics like CPA CPU utilization",
    "start": "779630",
    "end": "781640"
  },
  {
    "text": "on the machines and accept those",
    "start": "781640",
    "end": "784550"
  },
  {
    "text": "transactions and place them on the",
    "start": "784550",
    "end": "786080"
  },
  {
    "text": "queues we can then scale core",
    "start": "786080",
    "end": "788330"
  },
  {
    "text": "differently and maintain a constant flow",
    "start": "788330",
    "end": "789920"
  },
  {
    "text": "right so we only want to get to pass on",
    "start": "789920",
    "end": "792680"
  },
  {
    "text": "a constant rate of messages to not flood",
    "start": "792680",
    "end": "795320"
  },
  {
    "text": "our payment networks so we can ensure",
    "start": "795320",
    "end": "798140"
  },
  {
    "text": "that core always has a consistent number",
    "start": "798140",
    "end": "800060"
  },
  {
    "text": "of machines if one fails the autoscale",
    "start": "800060",
    "end": "802400"
  },
  {
    "text": "group will reboot and give us a new",
    "start": "802400",
    "end": "804890"
  },
  {
    "text": "machine",
    "start": "804890",
    "end": "805850"
  },
  {
    "text": "well teller can scale up and down",
    "start": "805850",
    "end": "807520"
  },
  {
    "text": "completely independently and the best",
    "start": "807520",
    "end": "810740"
  },
  {
    "text": "part of this is once we set up we don't",
    "start": "810740",
    "end": "812360"
  },
  {
    "text": "have to worry right it does this",
    "start": "812360",
    "end": "814280"
  },
  {
    "text": "automatically for us we're not guessing",
    "start": "814280",
    "end": "816710"
  },
  {
    "text": "about scheduling oh we think there's",
    "start": "816710",
    "end": "819650"
  },
  {
    "text": "going to be a large ball in their",
    "start": "819650",
    "end": "820550"
  },
  {
    "text": "transactions due to this because it's",
    "start": "820550",
    "end": "822050"
  },
  {
    "text": "very hard and we don't know",
    "start": "822050",
    "end": "824890"
  },
  {
    "text": "so here is just a quick review of how we",
    "start": "826949",
    "end": "829319"
  },
  {
    "text": "use if some of the services we use so",
    "start": "829319",
    "end": "831209"
  },
  {
    "text": "when we receive a transactional request",
    "start": "831209",
    "end": "832850"
  },
  {
    "text": "that will cost this first process by",
    "start": "832850",
    "end": "834989"
  },
  {
    "text": "application teller teller then takes out",
    "start": "834989",
    "end": "839100"
  },
  {
    "text": "transaction requests and places it on",
    "start": "839100",
    "end": "840839"
  },
  {
    "text": "our queuing system which we use using",
    "start": "840839",
    "end": "842429"
  },
  {
    "text": "AWS sqs that message is then read",
    "start": "842429",
    "end": "845939"
  },
  {
    "text": "through our core system which contacts",
    "start": "845939",
    "end": "848160"
  },
  {
    "text": "kms I know there to probe up to in order",
    "start": "848160",
    "end": "852359"
  },
  {
    "text": "to perform the encryption and decryption",
    "start": "852359",
    "end": "853379"
  },
  {
    "text": "process for a payment card data and for",
    "start": "853379",
    "end": "856499"
  },
  {
    "text": "that message on to the payment networks",
    "start": "856499",
    "end": "859879"
  },
  {
    "text": "so just kind of to wrap up the main",
    "start": "862680",
    "end": "864540"
  },
  {
    "text": "services have really helped Cesc us kms",
    "start": "864540",
    "end": "866999"
  },
  {
    "text": "and auto-scale they really allowed a",
    "start": "866999",
    "end": "869999"
  },
  {
    "text": "small team to build a robust and",
    "start": "869999",
    "end": "872430"
  },
  {
    "text": "reliable payment processing engine",
    "start": "872430",
    "end": "874619"
  },
  {
    "text": "something we couldn't have done if we",
    "start": "874619",
    "end": "877319"
  },
  {
    "text": "went for an on-premises approach and",
    "start": "877319",
    "end": "879779"
  },
  {
    "text": "tried to reinvent the wheel right we",
    "start": "879779",
    "end": "882240"
  },
  {
    "text": "want to process transactions we don't",
    "start": "882240",
    "end": "883619"
  },
  {
    "text": "need to to build some of these services",
    "start": "883619",
    "end": "886290"
  },
  {
    "text": "for us",
    "start": "886290",
    "end": "888829"
  },
  {
    "text": "so thank you that's amazing Thank You",
    "start": "889740",
    "end": "896730"
  },
  {
    "text": "Sasha very much",
    "start": "896730",
    "end": "898350"
  },
  {
    "text": "questions for such",
    "start": "898350",
    "end": "902569"
  },
  {
    "text": "hi how are you handling food or our slow",
    "start": "907640",
    "end": "912090"
  },
  {
    "text": "process payments process payments so you",
    "start": "912090",
    "end": "918060"
  },
  {
    "text": "like parceling in what way meaning that",
    "start": "918060",
    "end": "921450"
  },
  {
    "text": "between the collection of the well yeah",
    "start": "921450",
    "end": "923970"
  },
  {
    "text": "money is going from the economy it's not",
    "start": "923970",
    "end": "926760"
  },
  {
    "text": "it's not going to to the right so a",
    "start": "926760",
    "end": "933060"
  },
  {
    "text": "person process payments of course a",
    "start": "933060",
    "end": "934620"
  },
  {
    "text": "difficult connect different a handle so",
    "start": "934620",
    "end": "937200"
  },
  {
    "text": "the connection between core and the",
    "start": "937200",
    "end": "939150"
  },
  {
    "text": "payment network is very payment network",
    "start": "939150",
    "end": "941100"
  },
  {
    "text": "independent each payment network a",
    "start": "941100",
    "end": "944180"
  },
  {
    "text": "partial payment to a different payment",
    "start": "944180",
    "end": "946170"
  },
  {
    "text": "network means a different thing so some",
    "start": "946170",
    "end": "948570"
  },
  {
    "text": "payment network",
    "start": "948570",
    "end": "949470"
  },
  {
    "text": "so we're unable to fully validate that",
    "start": "949470",
    "end": "952460"
  },
  {
    "text": "the payment was processed on that",
    "start": "952460",
    "end": "954960"
  },
  {
    "text": "network there is an internal queuing",
    "start": "954960",
    "end": "957000"
  },
  {
    "text": "system within core to not provide an",
    "start": "957000",
    "end": "959790"
  },
  {
    "text": "answer back to the rest of the system",
    "start": "959790",
    "end": "961410"
  },
  {
    "text": "until it's satisfied with the response",
    "start": "961410",
    "end": "963450"
  },
  {
    "text": "from the payment network so things like",
    "start": "963450",
    "end": "965190"
  },
  {
    "text": "timeouts may happen so",
    "start": "965190",
    "end": "968420"
  },
  {
    "text": "so",
    "start": "971580",
    "end": "974209"
  },
  {
    "text": "Oh TTL yeah so the time to move on the",
    "start": "975660",
    "end": "980070"
  },
  {
    "text": "message is about",
    "start": "980070",
    "end": "981480"
  },
  {
    "text": "so in general we spend a lot of time we",
    "start": "981480",
    "end": "985260"
  },
  {
    "text": "use dead letter cues instead so we try",
    "start": "985260",
    "end": "987030"
  },
  {
    "text": "so we have a long TTL on the queue",
    "start": "987030",
    "end": "989250"
  },
  {
    "text": "itself but in a couple days and the way",
    "start": "989250",
    "end": "994290"
  },
  {
    "text": "we can handle that is we try and retry",
    "start": "994290",
    "end": "995880"
  },
  {
    "text": "messages with a payment network if that",
    "start": "995880",
    "end": "997950"
  },
  {
    "text": "fails they're able to be placed on the",
    "start": "997950",
    "end": "999540"
  },
  {
    "text": "dead-letter queues which we take great",
    "start": "999540",
    "end": "1000770"
  },
  {
    "text": "advantage of it allows us to look at",
    "start": "1000770",
    "end": "1003260"
  },
  {
    "text": "that message understand why it failed",
    "start": "1003260",
    "end": "1004760"
  },
  {
    "text": "was it we constructed the message",
    "start": "1004760",
    "end": "1006530"
  },
  {
    "text": "incorrectly or that that payment network",
    "start": "1006530",
    "end": "1008690"
  },
  {
    "text": "was unavailable we can then place that",
    "start": "1008690",
    "end": "1010520"
  },
  {
    "text": "message per scenario back on the queues",
    "start": "1010520",
    "end": "1013190"
  },
  {
    "text": "and continue the process",
    "start": "1013190",
    "end": "1016210"
  },
  {
    "text": "if I question you mentioned you use ec2",
    "start": "1020520",
    "end": "1025380"
  },
  {
    "text": "instances and what was the rationale to",
    "start": "1025380",
    "end": "1029130"
  },
  {
    "text": "go was easy - instead of containers for",
    "start": "1029130",
    "end": "1031530"
  },
  {
    "text": "example what is the rationale to go with",
    "start": "1031530",
    "end": "1035400"
  },
  {
    "text": "ec2 instead of containers we just chose",
    "start": "1035400",
    "end": "1042150"
  },
  {
    "text": "wrong ec2 instances based on a couple of",
    "start": "1042150",
    "end": "1046020"
  },
  {
    "text": "factors number one our development",
    "start": "1046020",
    "end": "1049230"
  },
  {
    "text": "language being a whipser the container",
    "start": "1049230",
    "end": "1051840"
  },
  {
    "text": "size would get quite large",
    "start": "1051840",
    "end": "1054300"
  },
  {
    "text": "we had to package a lot of things in",
    "start": "1054300",
    "end": "1056070"
  },
  {
    "text": "there number two we were we didn't want",
    "start": "1056070",
    "end": "1062100"
  },
  {
    "text": "to try too many new services out at once",
    "start": "1062100",
    "end": "1063660"
  },
  {
    "text": "we knew the performance of elixir some",
    "start": "1063660",
    "end": "1066900"
  },
  {
    "text": "other developers have worked in the past",
    "start": "1066900",
    "end": "1068040"
  },
  {
    "text": "on raw machines and the Erlang runtime",
    "start": "1068040",
    "end": "1071100"
  },
  {
    "text": "itself which is a lecture is part of",
    "start": "1071100",
    "end": "1073820"
  },
  {
    "text": "actually provides a ton of information",
    "start": "1073820",
    "end": "1076410"
  },
  {
    "text": "and and wants to function in a stateful",
    "start": "1076410",
    "end": "1078030"
  },
  {
    "text": "way it wants to have control and access",
    "start": "1078030",
    "end": "1080130"
  },
  {
    "text": "to the entire machine it doesn't want to",
    "start": "1080130",
    "end": "1081840"
  },
  {
    "text": "be constrained to a container and a lot",
    "start": "1081840",
    "end": "1083970"
  },
  {
    "text": "of the native functionality of relying",
    "start": "1083970",
    "end": "1087050"
  },
  {
    "text": "depends on it actually having access to",
    "start": "1087050",
    "end": "1089790"
  },
  {
    "text": "the entire machine not being sedimented",
    "start": "1089790",
    "end": "1091920"
  },
  {
    "text": "in some kind of container so that's why",
    "start": "1091920",
    "end": "1094380"
  },
  {
    "text": "we haven't jumped on to the container",
    "start": "1094380",
    "end": "1095850"
  },
  {
    "text": "bandwagon at this point we've not wind",
    "start": "1095850",
    "end": "1098250"
  },
  {
    "text": "said no but the Erlang so the o-line",
    "start": "1098250",
    "end": "1100890"
  },
  {
    "text": "system does like to be stateful whereas",
    "start": "1100890",
    "end": "1103679"
  },
  {
    "text": "containers are really not you want to",
    "start": "1103679",
    "end": "1105780"
  },
  {
    "text": "tear one down and place a new one well",
    "start": "1105780",
    "end": "1108090"
  },
  {
    "text": "Elaine wants to run forever so it's",
    "start": "1108090",
    "end": "1110910"
  },
  {
    "text": "really just a difference of opinion with",
    "start": "1110910",
    "end": "1112700"
  },
  {
    "text": "the runtime environment and language we",
    "start": "1112700",
    "end": "1115020"
  },
  {
    "text": "chose and containers themselves",
    "start": "1115020",
    "end": "1118280"
  },
  {
    "text": "[Applause]",
    "start": "1118780",
    "end": "1122400"
  },
  {
    "text": "all right starch thank you very much",
    "start": "1122400",
    "end": "1124440"
  },
  {
    "text": "again thank you tongue",
    "start": "1124440",
    "end": "1125540"
  },
  {
    "text": "[Applause]",
    "start": "1125540",
    "end": "1128910"
  }
]