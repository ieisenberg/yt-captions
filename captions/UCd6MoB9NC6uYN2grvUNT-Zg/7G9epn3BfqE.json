[
  {
    "start": "0",
    "end": "96000"
  },
  {
    "text": "good morning everybody I hope you all enjoyed the replay party last night and",
    "start": "860",
    "end": "6930"
  },
  {
    "text": "you're feeling fresh and ready and energized for the last day of reinvent 2018 now have you ever wished that you",
    "start": "6930",
    "end": "16139"
  },
  {
    "text": "could look back in time at the data in your database and see how it changed and",
    "start": "16139",
    "end": "22230"
  },
  {
    "text": "see what happened that caused it to get into the current state it said and I",
    "start": "22230",
    "end": "27750"
  },
  {
    "text": "mean really kind of dive into the details of what happened look at the precise transactions that were executed",
    "start": "27750",
    "end": "34590"
  },
  {
    "text": "when they were executed what they did and know that everything that you're",
    "start": "34590",
    "end": "40230"
  },
  {
    "text": "looking at is 100% accurate and correct I'm Chris and this is Andrew and we're",
    "start": "40230",
    "end": "47309"
  },
  {
    "text": "here to talk to you about quantum ledger database or qld be our new database",
    "start": "47309",
    "end": "53430"
  },
  {
    "text": "service that is designed to help with exactly that problem now as you probably",
    "start": "53430",
    "end": "60629"
  },
  {
    "text": "heard an Andy's keynote on Wednesday cue ODB is a new class of ledger",
    "start": "60629",
    "end": "65909"
  },
  {
    "text": "database service that is designed to keep a complete and verifiable history",
    "start": "65909",
    "end": "71159"
  },
  {
    "text": "of all changes to your application data ql DB makes it simple to explore your",
    "start": "71159",
    "end": "77820"
  },
  {
    "text": "data history or data lineage and see how your application has evolved over time and this in turn makes it easy to build",
    "start": "77820",
    "end": "86150"
  },
  {
    "text": "system of record type applications or applications where having that complete history that is verifiable is critical",
    "start": "86150",
    "end": "95750"
  },
  {
    "start": "96000",
    "end": "132000"
  },
  {
    "text": "now we built ql DB to deal with these problems of building system of record",
    "start": "96290",
    "end": "102180"
  },
  {
    "text": "applications and these are problems that we've seen several of our customers face",
    "start": "102180",
    "end": "107790"
  },
  {
    "text": "and indeed we've actually faced them ourselves but it turns out that we are",
    "start": "107790",
    "end": "112979"
  },
  {
    "text": "definitely not the first people to have to deal with these problems and for pretty much the past fifty five hundred",
    "start": "112979",
    "end": "119520"
  },
  {
    "text": "years when you look at civilizations all around the world people have been",
    "start": "119520",
    "end": "125250"
  },
  {
    "text": "dealing with this challenge of keeping accurate records and verifiable history for a very long time",
    "start": "125250",
    "end": "132630"
  },
  {
    "start": "132000",
    "end": "159000"
  },
  {
    "text": "going back as far as 3500 BC to ancient Mesopotamia one of the very first known",
    "start": "132630",
    "end": "140220"
  },
  {
    "text": "forms of writing called cuneiform writing was invented the Mesopotamians",
    "start": "140220",
    "end": "146460"
  },
  {
    "text": "would carve shapes and symbols into stone or set them into wet clay to",
    "start": "146460",
    "end": "152250"
  },
  {
    "text": "record data and would write down a wide range of information in this way this",
    "start": "152250",
    "end": "160590"
  },
  {
    "start": "159000",
    "end": "197000"
  },
  {
    "text": "clay tablet over here is believed to be from around 3100 BC and actually records",
    "start": "160590",
    "end": "167910"
  },
  {
    "text": "information of the distribution of grain or barley from a large temple to the",
    "start": "167910",
    "end": "173490"
  },
  {
    "text": "people surrounding it the dashed lines that you can see which were embedded with reeds in the clay when it was wet",
    "start": "173490",
    "end": "179580"
  },
  {
    "text": "denote the kind of goods that they were talking about the the little peg holes in the in the tablet talked about the",
    "start": "179580",
    "end": "186960"
  },
  {
    "text": "numerical values and kind of denote how much of the goods were being distributed and there are many other examples like",
    "start": "186960",
    "end": "193560"
  },
  {
    "text": "this in museums around the world to this day now as the writing form evolved over",
    "start": "193560",
    "end": "200940"
  },
  {
    "start": "197000",
    "end": "308000"
  },
  {
    "text": "the years it became more and more used more broadly in conducting business and",
    "start": "200940",
    "end": "207360"
  },
  {
    "text": "recording business agreements and legal proceedings and things like that and the",
    "start": "207360",
    "end": "213000"
  },
  {
    "text": "Mesopotamians realized that they needed a way of really establishing the kind of",
    "start": "213000",
    "end": "219300"
  },
  {
    "text": "authenticity of the documents they were writing and they actually invented one",
    "start": "219300",
    "end": "224430"
  },
  {
    "text": "of the first forms of signing that that we know about which is called a cylinder seal each person who was interested in",
    "start": "224430",
    "end": "232350"
  },
  {
    "text": "writing a document or participating in a document would have a cylinder which had",
    "start": "232350",
    "end": "237450"
  },
  {
    "text": "a bunch of shapes embedded on it and when a document had been written in the wet clay they would kind of roll the",
    "start": "237450",
    "end": "244050"
  },
  {
    "text": "cylinder across the clay and thereby embed their signature much like we do",
    "start": "244050",
    "end": "250500"
  },
  {
    "text": "with your normal signature today or a digital signature on computers and attest to the authenticity of the",
    "start": "250500",
    "end": "257010"
  },
  {
    "text": "document and the fact that they were actually present at the time and you know that they had signed it and agreed",
    "start": "257010",
    "end": "263010"
  },
  {
    "text": "to the contents the Tolton tablet on the right of the screen is the",
    "start": "263010",
    "end": "269280"
  },
  {
    "text": "proceeding from a court case about ownership dispute of some or other thing",
    "start": "269280",
    "end": "274500"
  },
  {
    "text": "and it contains testimony from witnesses which is then signed with their cylinder",
    "start": "274500",
    "end": "279870"
  },
  {
    "text": "seals the square tablet on the left actually recorded a loan of some silver",
    "start": "279870",
    "end": "286770"
  },
  {
    "text": "from one person to another and to covered the terms of the loan how much silver was loaned what the repayments",
    "start": "286770",
    "end": "292590"
  },
  {
    "text": "were and again it was signed by the participants to establish the",
    "start": "292590",
    "end": "297630"
  },
  {
    "text": "authenticity so that at a later at a later stage you could go back and verify that the loan really did happen and that",
    "start": "297630",
    "end": "304770"
  },
  {
    "text": "the person really should repay this over moving forward another thousand or so",
    "start": "304770",
    "end": "311970"
  },
  {
    "start": "308000",
    "end": "334000"
  },
  {
    "text": "years and we get to ancient Egypt and the Egyptians are very well known for",
    "start": "311970",
    "end": "317550"
  },
  {
    "text": "their hieroglyphs they would paint them in two unto stone or carve them into stone and they would record a wide range",
    "start": "317550",
    "end": "325860"
  },
  {
    "text": "of information in this way things like tax information business dealings stories and so on but perhaps more",
    "start": "325860",
    "end": "336120"
  },
  {
    "start": "334000",
    "end": "404000"
  },
  {
    "text": "importantly actually is that they invented one of the first known forms of paper writing using a paper called",
    "start": "336120",
    "end": "344190"
  },
  {
    "text": "papyrus papyrus writing was fairly prevalent in ancient Egypt and again was",
    "start": "344190",
    "end": "351630"
  },
  {
    "text": "used to record a range of information this example here is actually a letter",
    "start": "351630",
    "end": "356880"
  },
  {
    "text": "from a believed to be a middle-class ancient Egyptian recording details about",
    "start": "356880",
    "end": "362280"
  },
  {
    "text": "a lease that he wanted to take out on some land discussing the price of the least relative to some other land and",
    "start": "362280",
    "end": "368400"
  },
  {
    "text": "talking about rations that needed to be provided to people in fact historians",
    "start": "368400",
    "end": "374340"
  },
  {
    "text": "actually created this prevalence of writing and record-keeping as one of the reasons that the ancient Egyptian",
    "start": "374340",
    "end": "381090"
  },
  {
    "text": "civilization was able to be as successful as it was the pharaohs and",
    "start": "381090",
    "end": "386910"
  },
  {
    "text": "the scribes would be able to keep accurate track of taxes surplus resources where they distributed",
    "start": "386910",
    "end": "394349"
  },
  {
    "text": "resources to and this enabled the Pharaohs to use their resources much much more efficient",
    "start": "394349",
    "end": "400080"
  },
  {
    "text": "in the pursuit of their goals and objectives move forward another 3,000",
    "start": "400080",
    "end": "406620"
  },
  {
    "start": "404000",
    "end": "539000"
  },
  {
    "text": "years and we get to one of the most pivotal moments really in record-keeping",
    "start": "406620",
    "end": "411780"
  },
  {
    "text": "which is the advent or formalization of double-entry accounting or double-entry",
    "start": "411780",
    "end": "418110"
  },
  {
    "text": "bookkeeping indeed this is where the concept of the ledger as we know it",
    "start": "418110",
    "end": "423780"
  },
  {
    "text": "today and as we talked about it in the context of of our product and many blockchain or",
    "start": "423780",
    "end": "430530"
  },
  {
    "text": "distributed ledger products actually comes from before the double entry",
    "start": "430530",
    "end": "435659"
  },
  {
    "text": "accounting approach was invented and became used business owners would have a",
    "start": "435659",
    "end": "441750"
  },
  {
    "text": "very difficult time of analyzing their business and understanding how it was",
    "start": "441750",
    "end": "447509"
  },
  {
    "text": "performing which parts of it were performing well and which parts of it wouldn't they would struggle to keep",
    "start": "447509",
    "end": "455219"
  },
  {
    "text": "track of where money was coming from where it was being spent and at the end",
    "start": "455219",
    "end": "460319"
  },
  {
    "text": "of each month they would know whether they had turned a profit or a loss but they wouldn't really know why with",
    "start": "460319",
    "end": "467310"
  },
  {
    "text": "double entry accounting the idea was that every time any money left your",
    "start": "467310",
    "end": "472529"
  },
  {
    "text": "business or you spent any money you were debit one account with you the",
    "start": "472529",
    "end": "477599"
  },
  {
    "text": "amount that you had spent and credit another account with the equal amount similarly when you receive money and",
    "start": "477599",
    "end": "484400"
  },
  {
    "text": "this made it easy at the end of the month to go back and kind of check that",
    "start": "484400",
    "end": "489750"
  },
  {
    "text": "everything that you'd spent reconciled with everything that you recorded and the other accounts and essentially",
    "start": "489750",
    "end": "495509"
  },
  {
    "text": "balanced the books which is where the term comes from and in doing so this",
    "start": "495509",
    "end": "500550"
  },
  {
    "text": "actually created a complete order trail of every single change that happened in businesses finances and made it really",
    "start": "500550",
    "end": "506849"
  },
  {
    "text": "easy for the business owners to dig in and see where money was going what it was being spent on and ultimately drive",
    "start": "506849",
    "end": "514250"
  },
  {
    "text": "substantially higher business efficiency they would know where to double down on investments know where to cut back know",
    "start": "514250",
    "end": "521010"
  },
  {
    "text": "which parts of the business to to close and so on and indeed this has had such a",
    "start": "521010",
    "end": "526709"
  },
  {
    "text": "significant impact that to this day most businesses around the world still use",
    "start": "526709",
    "end": "532260"
  },
  {
    "text": "double entry accounting or some form of it to manage their finances and this brings us to",
    "start": "532260",
    "end": "542089"
  },
  {
    "start": "539000",
    "end": "760000"
  },
  {
    "text": "record-keeping today now a lot has changed over the past few thousand years",
    "start": "542089",
    "end": "547980"
  },
  {
    "text": "but record keeping and maintaining an accurate history of business details and",
    "start": "547980",
    "end": "554670"
  },
  {
    "text": "transactions and things that have happened is still really fundamental to everything we do and in many cases it's",
    "start": "554670",
    "end": "563640"
  },
  {
    "text": "a lot more pervasive and a lot more important than it has ever be and there",
    "start": "563640",
    "end": "569459"
  },
  {
    "text": "are several examples across a range of industries when you look at them where it's clear that maintaining accurate and",
    "start": "569459",
    "end": "575610"
  },
  {
    "text": "complete historical records is critical banking and finance for example the",
    "start": "575610",
    "end": "582390"
  },
  {
    "text": "obvious one here is recording for anybody's bank account the debits and",
    "start": "582390",
    "end": "587910"
  },
  {
    "text": "credits that happen on the account or the past transactions keeping track of",
    "start": "587910",
    "end": "593370"
  },
  {
    "text": "all of these is important so that people can reconcile how much money they have at the end of the month or understand",
    "start": "593370",
    "end": "600329"
  },
  {
    "text": "exactly where their money has been spent and where they've gotten it from or if there's a dispute about a transaction",
    "start": "600329",
    "end": "606300"
  },
  {
    "text": "your I I say I paid you you say I didn't and you know we can go back to these records and verify what actually",
    "start": "606300",
    "end": "613680"
  },
  {
    "text": "happened but there are other examples to take a loan application process for",
    "start": "613680",
    "end": "619290"
  },
  {
    "text": "example this this process your or a loan application goes through many different stages of process and recording the",
    "start": "619290",
    "end": "626760"
  },
  {
    "text": "details of the process is important again so that if there's ever a dispute about what happened we can go back and",
    "start": "626760",
    "end": "633930"
  },
  {
    "text": "look at the look at the truth and resolve the dispute ecommerce has",
    "start": "633930",
    "end": "640470"
  },
  {
    "text": "several examples perhaps the most obvious of which is if somebody buy",
    "start": "640470",
    "end": "645510"
  },
  {
    "text": "something from a online retailer tracking everything from the moment they click the Buy button to the moment it",
    "start": "645510",
    "end": "652170"
  },
  {
    "text": "arrives at their door tracking the fulfillment process in the warehouse when here the Pickers picked the item",
    "start": "652170",
    "end": "658529"
  },
  {
    "text": "the Packers packet they send it off to the shipping Network and ultimately arise this is critical so that if",
    "start": "658529",
    "end": "666790"
  },
  {
    "text": "customer doesn't get the item that they ordered or they get the wrong size of shoes or something else goes wrong the",
    "start": "666790",
    "end": "673930"
  },
  {
    "text": "business can kind of dive into the details of exactly what happened during the fulfillment of that item understand",
    "start": "673930",
    "end": "680410"
  },
  {
    "text": "precisely where things went wrong and correct their process so that they can deliver a better customer experience and",
    "start": "680410",
    "end": "687100"
  },
  {
    "text": "also drive improved efficiency in their business but customers also expect",
    "start": "687100",
    "end": "693070"
  },
  {
    "text": "online retailers to keep a complete history of all their orders they want to",
    "start": "693070",
    "end": "698590"
  },
  {
    "text": "know everything they purchased when they purchased it how much they paid for it when it was delivered and they expect",
    "start": "698590",
    "end": "704950"
  },
  {
    "text": "that to be complete correct and accurate in the transport and logistics base",
    "start": "704950",
    "end": "712110"
  },
  {
    "text": "especially as the world becomes more globalized and more assets and more inventory move across the world cross",
    "start": "712110",
    "end": "719320"
  },
  {
    "text": "more borders go between more different transport networks it's critical for",
    "start": "719320",
    "end": "724780"
  },
  {
    "text": "businesses to be able to keep an accurate order trail of where all their goods are where their inventory or",
    "start": "724780",
    "end": "731160"
  },
  {
    "text": "components that they're shipping are so that if they ever find that they don't have the right the right things that",
    "start": "731160",
    "end": "737470"
  },
  {
    "text": "they need in your the warehouse or the factory when they need them they can",
    "start": "737470",
    "end": "743140"
  },
  {
    "text": "again go and understand exactly where things went wrong correct the process and you ensure that they actually get",
    "start": "743140",
    "end": "749830"
  },
  {
    "text": "their goods and ultimately drive better business efficiency and an improved",
    "start": "749830",
    "end": "755620"
  },
  {
    "text": "customer experience for their customers and there are several others so what's",
    "start": "755620",
    "end": "763270"
  },
  {
    "start": "760000",
    "end": "972000"
  },
  {
    "text": "the problem well when databases and computers were first introduced in the 60s and 70s they",
    "start": "763270",
    "end": "771310"
  },
  {
    "text": "had this profound impact on businesses they enable businesses to automate many",
    "start": "771310",
    "end": "777910"
  },
  {
    "text": "of the kind of your record-keeping and administrative tasks that previously had",
    "start": "777910",
    "end": "784300"
  },
  {
    "text": "taken a considerable amount of human effort and thus allowed businesses to move much much faster become more",
    "start": "784300",
    "end": "791380"
  },
  {
    "text": "efficient and get more done but the databases were fundamentally built",
    "start": "791380",
    "end": "797590"
  },
  {
    "text": "around these three core operations of update and delete at least in part",
    "start": "797590",
    "end": "803800"
  },
  {
    "text": "because at the time storage was so expensive in in 1970 gigabyte of storage",
    "start": "803800",
    "end": "810399"
  },
  {
    "text": "would cost about 185 thousand dollars and so it wasn't really practical to",
    "start": "810399",
    "end": "815560"
  },
  {
    "text": "keep a history of all the changes as they happened and these update and",
    "start": "815560",
    "end": "821319"
  },
  {
    "text": "insert and delete operations would make it really easy to permanently modify or",
    "start": "821319",
    "end": "826959"
  },
  {
    "text": "permanently delete data in a way where there was really no way to get it back had no way to see what had happened but",
    "start": "826959",
    "end": "834879"
  },
  {
    "text": "the business requirements fundamentally haven't changed and the record-keeping requirements haven't changed and so",
    "start": "834879",
    "end": "840819"
  },
  {
    "text": "developers have built techniques to work around these constraints and we see use",
    "start": "840819",
    "end": "846129"
  },
  {
    "text": "of things like order trails and order tables and record tombstoning being used",
    "start": "846129",
    "end": "852069"
  },
  {
    "text": "fairly fairly commonly to create these historical records of what has happened",
    "start": "852069",
    "end": "857819"
  },
  {
    "text": "but these come with problems first of all the order trails and order tables",
    "start": "857819",
    "end": "863740"
  },
  {
    "text": "can be some of the most resource intensive tables in a database they tend to grow without bound",
    "start": "863740",
    "end": "869379"
  },
  {
    "text": "they are often bigger than any other table and they can cause scaling problems for databases and we see people",
    "start": "869379",
    "end": "875949"
  },
  {
    "text": "using techniques like partition tables or pushing data to data warehouses or",
    "start": "875949",
    "end": "881649"
  },
  {
    "text": "you know running pruning jobs which themselves can cause performance problems for the database moreover if",
    "start": "881649",
    "end": "889029"
  },
  {
    "text": "you're actually trying to record events in the precise order in which they happened that causes a serialization",
    "start": "889029",
    "end": "895930"
  },
  {
    "text": "point in your database and modern databases are really built around the idea of being able to do operations in",
    "start": "895930",
    "end": "901839"
  },
  {
    "text": "parallel and this can slow your application down at the same time these",
    "start": "901839",
    "end": "907420"
  },
  {
    "text": "approaches can be somewhat error-prone and can result in incomplete or incorrect historical data if you want to",
    "start": "907420",
    "end": "914800"
  },
  {
    "text": "create an order trail you pretty much have to write some kind of custom code or stored procedure or database trigger",
    "start": "914800",
    "end": "921519"
  },
  {
    "text": "and you have to really get those right at the same time developers are kind of",
    "start": "921519",
    "end": "928029"
  },
  {
    "text": "trading off between recording too much information and dealing with the scaling",
    "start": "928029",
    "end": "933069"
  },
  {
    "text": "problems or recording you know just the minimal amount of information that they think they need and running the risk of not",
    "start": "933069",
    "end": "940749"
  },
  {
    "text": "having information that they need when they need it finally the data in the",
    "start": "940749",
    "end": "947470"
  },
  {
    "text": "databases and traditional databases is really impossible to verify cryptographically even if you get all",
    "start": "947470",
    "end": "954669"
  },
  {
    "text": "those other things right and even if you put your auditing mechanisms around your database somebody with root access or",
    "start": "954669",
    "end": "962109"
  },
  {
    "text": "sucide min access to your database can go in there and make changes that are difficult to difficult to identify",
    "start": "962109",
    "end": "968889"
  },
  {
    "text": "and difficult to detect and so more and",
    "start": "968889",
    "end": "974859"
  },
  {
    "text": "more often we're seeing custom is starting to experiment with the idea of using blockchain technologies or",
    "start": "974859",
    "end": "981099"
  },
  {
    "text": "distributed ledger technologies to solve these record-keeping problems where they need kind of complete and verifiable",
    "start": "981099",
    "end": "987629"
  },
  {
    "text": "history and indeed this exciting technology brings a lot in the space and",
    "start": "987629",
    "end": "993999"
  },
  {
    "text": "you can use it to create complete and verifiable records of everything that",
    "start": "993999",
    "end": "999009"
  },
  {
    "text": "has happened in your application but again using block chains and distributed",
    "start": "999009",
    "end": "1004349"
  },
  {
    "text": "Ledger's comes with its own set of problems fundamentally the blockchain was designed for a different purpose",
    "start": "1004349",
    "end": "1011659"
  },
  {
    "text": "it was really designed around the idea of building decentralized applications",
    "start": "1011659",
    "end": "1017729"
  },
  {
    "text": "that is an application where there's no single owner there's no one entity who",
    "start": "1017729",
    "end": "1023669"
  },
  {
    "text": "owns the data controls the application and the application logic but rather",
    "start": "1023669",
    "end": "1029399"
  },
  {
    "text": "there's a consortium of many parties in the case of cryptocurrencies millions",
    "start": "1029399",
    "end": "1034709"
  },
  {
    "text": "but many parties who collectively earn the application logic they own the data",
    "start": "1034709",
    "end": "1039720"
  },
  {
    "text": "and they all agree upon the changes that are made to the data but many of these",
    "start": "1039720",
    "end": "1045808"
  },
  {
    "text": "applications that need record-keeping don't require decentralization a lot of the ones we looked at earlier on",
    "start": "1045809",
    "end": "1051799"
  },
  {
    "text": "fundamentally decentralized applications and using a blockchain or distributed",
    "start": "1051799",
    "end": "1057870"
  },
  {
    "text": "ledger technology in a case where your application doesn't need decentralization brings a lot of",
    "start": "1057870",
    "end": "1063840"
  },
  {
    "text": "additional complexity is really unnecessary for your business for example applications built on block",
    "start": "1063840",
    "end": "1071610"
  },
  {
    "text": "chains typically have to integrate very tightly with the blockchain framework in the case of hyper ledger fabric your",
    "start": "1071610",
    "end": "1079559"
  },
  {
    "text": "application will have to use chain code quite extensively to be able to get things done in other blockchain",
    "start": "1079559",
    "end": "1085649"
  },
  {
    "text": "frameworks things like smart contracts are used and this really means that your application is part of the blockchain",
    "start": "1085649",
    "end": "1091950"
  },
  {
    "text": "and you know you have to deploy it to the blockchain network the API is that",
    "start": "1091950",
    "end": "1097879"
  },
  {
    "text": "the blockchain systems offer for data access are also relatively simplistic",
    "start": "1097879",
    "end": "1103470"
  },
  {
    "text": "and low-level and this means that to get the same kind of functionality that you can get from a traditional database you",
    "start": "1103470",
    "end": "1110580"
  },
  {
    "text": "have to write a lot more application code for the same reasons applications",
    "start": "1110580",
    "end": "1117120"
  },
  {
    "text": "built on block chains can also be more difficult to maintain than traditional applications the tight coupling between",
    "start": "1117120",
    "end": "1123929"
  },
  {
    "text": "your application code and the blockchain means you have to really be careful about deployment things have to be",
    "start": "1123929",
    "end": "1130409"
  },
  {
    "text": "deployed in a very coordinated fashion you nodes it's more difficult to make",
    "start": "1130409",
    "end": "1135960"
  },
  {
    "text": "changes because you're working with lower level API s and you can look at",
    "start": "1135960",
    "end": "1140970"
  },
  {
    "text": "all the Forks that have happened in crypto currencies as evidence of just how difficult it can be to drive change",
    "start": "1140970",
    "end": "1146039"
  },
  {
    "text": "in a true decentralized application finally applications built on block",
    "start": "1146039",
    "end": "1152250"
  },
  {
    "text": "chains can be more difficult to scale than applications built on traditional application traditional databases this",
    "start": "1152250",
    "end": "1159269"
  },
  {
    "text": "is at least in part because the block chains have a lot more machinery to enable the decentralized consensus",
    "start": "1159269",
    "end": "1164669"
  },
  {
    "text": "algorithms but the net result is that they have lower scaling ceilings in terms of throughput and typically in",
    "start": "1164669",
    "end": "1172049"
  },
  {
    "text": "terms of storage size as well and all of this together means that if you choose",
    "start": "1172049",
    "end": "1177570"
  },
  {
    "text": "to build an application on a blockchain and your application doesn't really need decentralization you end up spending a",
    "start": "1177570",
    "end": "1184379"
  },
  {
    "text": "lot more time and effort building your application than you would otherwise and",
    "start": "1184379",
    "end": "1191509"
  },
  {
    "text": "this is why we chose to build Amazon ql DB amazon ql DB is both",
    "start": "1191509",
    "end": "1199470"
  },
  {
    "text": "on tried-and-tested Amazon technology that was purpose-built for building",
    "start": "1199470",
    "end": "1205620"
  },
  {
    "text": "system of record applications that are reliable at scale with ql DB you get",
    "start": "1205620",
    "end": "1212370"
  },
  {
    "text": "data immutability for all of your historical data every time you write a",
    "start": "1212370",
    "end": "1217590"
  },
  {
    "text": "transaction it is committed to an append-only journal and it cannot be modified or deleted at a later stage the",
    "start": "1217590",
    "end": "1226740"
  },
  {
    "text": "data written to the QL DB journal is also a cryptographically verifiable this",
    "start": "1226740",
    "end": "1232409"
  },
  {
    "text": "means that at some point in the future you can go back and you can look at any one of your transactions and you can",
    "start": "1232409",
    "end": "1238320"
  },
  {
    "text": "prove that it hasn't been modified since you wrote it having the full history of",
    "start": "1238320",
    "end": "1244620"
  },
  {
    "text": "your data brings transparency to your application it's easy to look at how",
    "start": "1244620",
    "end": "1250440"
  },
  {
    "text": "your data has evolved look at how you're you know how the contents of your system have changed and know that what you're",
    "start": "1250440",
    "end": "1256080"
  },
  {
    "text": "looking at is complete and 100% correct ql DB is also fast it scales with your",
    "start": "1256080",
    "end": "1264269"
  },
  {
    "text": "application and it performs with low latency and this means you don't need to make that trade-off between having a",
    "start": "1264269",
    "end": "1271110"
  },
  {
    "text": "high performance scalable application on the one hand and an application where you get verifiability and complete",
    "start": "1271110",
    "end": "1277110"
  },
  {
    "text": "history on the other hand and finally we've both QR DB to be really easy to",
    "start": "1277110",
    "end": "1282570"
  },
  {
    "text": "use it comes with a familiar sequel api it supports a document data model that",
    "start": "1282570",
    "end": "1289950"
  },
  {
    "text": "lets you store structured and unstructured data easily and it offers",
    "start": "1289950",
    "end": "1295259"
  },
  {
    "text": "full transactional acid functionality additionally ql DB is serverless meaning",
    "start": "1295259",
    "end": "1303960"
  },
  {
    "text": "you don't have to worry about provisioning machines or nodes or managing read or write throughput you",
    "start": "1303960",
    "end": "1309720"
  },
  {
    "text": "simply create your ledger code up your application and go and with this as a",
    "start": "1309720",
    "end": "1315389"
  },
  {
    "text": "backdrop I'm going to hand over to Andrew to talk about how it really works ok thanks Chris",
    "start": "1315389",
    "end": "1323299"
  },
  {
    "start": "1320000",
    "end": "1405000"
  },
  {
    "text": "so I Chris said he told you about reasons why you might want to use Amazon quantum ledger database and I'm gonna",
    "start": "1323299",
    "end": "1330539"
  },
  {
    "text": "talk more about how he'll to be really works so just to start out at the",
    "start": "1330539",
    "end": "1337410"
  },
  {
    "text": "very simple a ledger has at its core this immutable append-only journal there",
    "start": "1337410",
    "end": "1344040"
  },
  {
    "text": "you can see all the blocks on the journal I'm going to talk a lot about this later these represent coherent",
    "start": "1344040",
    "end": "1350820"
  },
  {
    "text": "transactions which gives you the answer the question that I'm sure has been on a lot of your minds which is how is it",
    "start": "1350820",
    "end": "1357000"
  },
  {
    "text": "that somebody with the name Andrew certain is working on a product with quantum in the name but the answer is",
    "start": "1357000",
    "end": "1364650"
  },
  {
    "text": "that quantum here does not refer to quantum computing or quantum mechanics but really to quantum meaning a change",
    "start": "1364650",
    "end": "1371820"
  },
  {
    "text": "that has no intermediate States so each transaction is recorded on the ledger in",
    "start": "1371820",
    "end": "1377190"
  },
  {
    "text": "this way in addition we have ways to query the data in the ledger there's a",
    "start": "1377190",
    "end": "1382590"
  },
  {
    "text": "current table there are history tables I'll get into those more a little bit",
    "start": "1382590",
    "end": "1387690"
  },
  {
    "text": "later in a financial ledger which this we are sort of generalized in those",
    "start": "1387690",
    "end": "1392760"
  },
  {
    "text": "concepts the journal represents the actual credits and debits in an account and then there's a summary that",
    "start": "1392760",
    "end": "1399750"
  },
  {
    "text": "represents the current balances and so we're we're generalizing that for a database alright how does it work so I'm",
    "start": "1399750",
    "end": "1408570"
  },
  {
    "start": "1405000",
    "end": "1552000"
  },
  {
    "text": "gonna use a Department of Motor Vehicles example for a while we want to register cars we want to make sure that we have",
    "start": "1408570",
    "end": "1415920"
  },
  {
    "text": "the complete history of all those cars alright so here's a super simple ledger",
    "start": "1415920",
    "end": "1421410"
  },
  {
    "text": "that they might have created it's only got one table the cars table so you can see here the journal and the two",
    "start": "1421410",
    "end": "1427350"
  },
  {
    "text": "different views we have of this table current and history so let's imagine that someone comes along to register a",
    "start": "1427350",
    "end": "1433890"
  },
  {
    "text": "new collar so what happens the first thing that happens is the transaction is",
    "start": "1433890",
    "end": "1439410"
  },
  {
    "text": "written to the journal okay so before any views are updated we write it to the journal then we update maybe the current",
    "start": "1439410",
    "end": "1448110"
  },
  {
    "text": "view and the history view you can see here that both of these are very much the same because there's only been one",
    "start": "1448110",
    "end": "1453300"
  },
  {
    "text": "thing done to the to the to the ledger so far okay so let's imagine now Tracey",
    "start": "1453300",
    "end": "1460740"
  },
  {
    "text": "comes along and she sells her car to Ronnie and Ronnie comes into the DMV and wants to register the car",
    "start": "1460740",
    "end": "1466450"
  },
  {
    "text": "so we execute this statement again the first thing that happens is we write the transaction to the journal and I'm gonna",
    "start": "1466450",
    "end": "1474580"
  },
  {
    "text": "talk a lot more about this later but we hash chain these transactions together to make sure that the journal is",
    "start": "1474580",
    "end": "1482259"
  },
  {
    "text": "immutable maybe the history table gets updated a",
    "start": "1482259",
    "end": "1488739"
  },
  {
    "text": "little bit before the current table my point here is that the the key thing",
    "start": "1488739",
    "end": "1493840"
  },
  {
    "text": "that happens is we update the journal and then all these derive views that are queryable get updated independently okay",
    "start": "1493840",
    "end": "1503289"
  },
  {
    "text": "finally maybe this car gets totaled or Ronnie moves out of state so it gets",
    "start": "1503289",
    "end": "1508840"
  },
  {
    "text": "registered in a different state and so we're gonna delete this car from the from the DMV database so we delete it",
    "start": "1508840",
    "end": "1517989"
  },
  {
    "text": "from the current but in the history we have some sort of tombstone I'm not",
    "start": "1517989",
    "end": "1523090"
  },
  {
    "text": "gonna get super into the details I wrote sort of deleted here as Chris mentioned and I'll talk about some more we have a",
    "start": "1523090",
    "end": "1529720"
  },
  {
    "text": "document data model so we have a little bit more flexibility than a classic relational model even though I drew it",
    "start": "1529720",
    "end": "1535539"
  },
  {
    "text": "this way I just perform melee arity so that's that's how the DMV application",
    "start": "1535539",
    "end": "1541450"
  },
  {
    "text": "would work Onkyo to be now I want to walk you through a scenario about where this really might be important for the",
    "start": "1541450",
    "end": "1548710"
  },
  {
    "text": "customers but first let me sort of compare that to what it would look like",
    "start": "1548710",
    "end": "1555100"
  },
  {
    "start": "1552000",
    "end": "1671000"
  },
  {
    "text": "if they were using a more traditional relational database so they still have",
    "start": "1555100",
    "end": "1560139"
  },
  {
    "text": "the same two tables a current and a history but now when we insert into the",
    "start": "1560139",
    "end": "1566590"
  },
  {
    "text": "the tables we insert directly say into the current table and we need some way to get the history table updated as",
    "start": "1566590",
    "end": "1573460"
  },
  {
    "text": "chris mentioned this could be that applications have to remember hey whenever i do something to the current table i wrote the history table some",
    "start": "1573460",
    "end": "1580600"
  },
  {
    "text": "databases have some MVCC that you can take advantage of i'm gonna imagine that",
    "start": "1580600",
    "end": "1586480"
  },
  {
    "text": "they have a trigger with a stored procedure that updates the history version okay then",
    "start": "1586480",
    "end": "1593230"
  },
  {
    "text": "same thing tracy sells the car to Ronnie we update the current state our stored procedure creates some version",
    "start": "1593230",
    "end": "1600509"
  },
  {
    "text": "a history and then again the car is",
    "start": "1600509",
    "end": "1605940"
  },
  {
    "text": "removed from the database and here you know I don't know if you know about the",
    "start": "1605940",
    "end": "1610979"
  },
  {
    "text": "columns or what but again in the relational database you have a few more constraints and how you represent the data my my main point here is that the",
    "start": "1610979",
    "end": "1620549"
  },
  {
    "text": "this process is not built into the database there are many different databases have solutions for how it gets built on top but it's not fundamental to",
    "start": "1620549",
    "end": "1627269"
  },
  {
    "text": "the database in addition there may be some system logs audit logs these could",
    "start": "1627269",
    "end": "1633329"
  },
  {
    "text": "be in human readable format they might be an XML again the point is these are sort of added on to the traditional",
    "start": "1633329",
    "end": "1639989"
  },
  {
    "text": "database alright so with that as our backdrop let's imagine let's go and talk",
    "start": "1639989",
    "end": "1645089"
  },
  {
    "text": "about like what does verifiability really mean alright so let's imagine that the police are investigating an old",
    "start": "1645089",
    "end": "1651419"
  },
  {
    "text": "crime and they find a clue that this car was used in a crime on August 2nd 2013",
    "start": "1651419",
    "end": "1657199"
  },
  {
    "text": "which was the day before Tracy sold the car to Ronnie so they go and they arrest Tracy and it goes to trial but Tracy's",
    "start": "1657199",
    "end": "1664589"
  },
  {
    "text": "lawyer claims that this is all a big setup that actually the car was sold on August 1st so it should be Ronnie they",
    "start": "1664589",
    "end": "1669899"
  },
  {
    "text": "should be putting in jail so here's the big question that we have to answer which is when was this car actually sold",
    "start": "1669899",
    "end": "1675749"
  },
  {
    "start": "1671000",
    "end": "1800000"
  },
  {
    "text": "August 1st or August 3rd all right so first thing that that happens is the",
    "start": "1675749",
    "end": "1680789"
  },
  {
    "text": "prosecution puts Ronnie up on the stand so Ronnie shows his receipt from the DMV it clearly shows that the car was sold",
    "start": "1680789",
    "end": "1688499"
  },
  {
    "text": "on August 3rd but of course Tracy's lawyer just says well hold on you could have just printed that at home you know",
    "start": "1688499",
    "end": "1694469"
  },
  {
    "text": "how do we know that that's really true so the next thing that happens is that the prosecution calls the DMV database",
    "start": "1694469",
    "end": "1701489"
  },
  {
    "text": "engineer to the stand maybe this isn't completely realistic but but they ask",
    "start": "1701489",
    "end": "1709529"
  },
  {
    "text": "her you know is Ronnie's receipt valid and she says yes I swear that this",
    "start": "1709529",
    "end": "1714779"
  },
  {
    "text": "receipt is an actual receipt issued from the DMV but Tracy's lawyer of course puts out",
    "start": "1714779",
    "end": "1719999"
  },
  {
    "text": "that she could be lying so then the prosecution asks her to show the database tables the system laws the",
    "start": "1719999",
    "end": "1726989"
  },
  {
    "text": "audit tables to prove that this really happened on August 3rd and so she does all that",
    "start": "1726989",
    "end": "1732440"
  },
  {
    "text": "remember we're in that in the traditional case here so then Tracy's lawyer asks well hold on",
    "start": "1732440",
    "end": "1738720"
  },
  {
    "text": "could somebody of your skill and access have modified all these records to change the data and she says yes so",
    "start": "1738720",
    "end": "1744870"
  },
  {
    "text": "that's sort of the end of the line in many traditional databases so what could happen if she if the DMV were using kill",
    "start": "1744870",
    "end": "1752130"
  },
  {
    "text": "to be so remember you know when we're talking about how it works so the first",
    "start": "1752130",
    "end": "1757890"
  },
  {
    "text": "thing is when he makes this query of the history tables she can say there are no",
    "start": "1757890",
    "end": "1764160"
  },
  {
    "text": "instructions in the API to modify the history tables directly the only thing",
    "start": "1764160",
    "end": "1769290"
  },
  {
    "text": "the history tables do is reflect changes that are made in the journal second there's no API to modify journal entries",
    "start": "1769290",
    "end": "1776310"
  },
  {
    "text": "the only thing you can do is execute statements that append the journal and so she can say there's no super user or",
    "start": "1776310",
    "end": "1784410"
  },
  {
    "text": "admin rights that would allow me to modify this but beyond that the journal is actually cryptographically us hashed",
    "start": "1784410",
    "end": "1792030"
  },
  {
    "text": "to ensure immutability and so I want to talk this is really fundamental to what we do so I want to talk a little while",
    "start": "1792030",
    "end": "1797700"
  },
  {
    "text": "about what that really means and how it works okay so here's our first",
    "start": "1797700",
    "end": "1803190"
  },
  {
    "start": "1800000",
    "end": "1983000"
  },
  {
    "text": "transaction on the journal as the transaction is being submitted all the data in the transaction is put through a",
    "start": "1803190",
    "end": "1809190"
  },
  {
    "text": "cryptographic hash function these functions are designed to take input data and convert them into a signature",
    "start": "1809190",
    "end": "1816240"
  },
  {
    "text": "or hash or digest that reflects the information in that in that data and",
    "start": "1816240",
    "end": "1822810"
  },
  {
    "text": "I'll explain all that more as we go on so here we're using sha-256",
    "start": "1822810",
    "end": "1830070"
  },
  {
    "text": "which is one of these functions it's readily available on most computer platforms it's actually defined by the",
    "start": "1830070",
    "end": "1836730"
  },
  {
    "text": "National Institute of Standards technology so it's not some you know proprietary thing that Amazon has",
    "start": "1836730",
    "end": "1842310"
  },
  {
    "text": "invented this is a well known algorithm okay so we take the data in the",
    "start": "1842310",
    "end": "1847650"
  },
  {
    "text": "transaction we compute the sha-256 and we get this number so that's that H of t1 in the little purple box that I",
    "start": "1847650",
    "end": "1854460"
  },
  {
    "text": "showed earlier all right well what about the second transaction okay we we write",
    "start": "1854460",
    "end": "1861300"
  },
  {
    "text": "it to journal or it's about to be written to the journal okay so if we put that transaction",
    "start": "1861300",
    "end": "1867520"
  },
  {
    "text": "through your shot 256 we get the number you see but we're forgetting something which is the hash chaining that we",
    "start": "1867520",
    "end": "1874420"
  },
  {
    "text": "talked about before so instead of just putting each transactions data into the",
    "start": "1874420",
    "end": "1880150"
  },
  {
    "text": "hash function we also append the hash value for the previous transaction into",
    "start": "1880150",
    "end": "1885910"
  },
  {
    "text": "the hash function and so this is actually the value that we get for H of",
    "start": "1885910",
    "end": "1891460"
  },
  {
    "text": "T 2 and then similarly we do that for",
    "start": "1891460",
    "end": "1897970"
  },
  {
    "text": "the last transaction so getting back to the trial scenario you know when when",
    "start": "1897970",
    "end": "1905380"
  },
  {
    "text": "Tracey's asked ok well but how do we know that somebody didn't modify this",
    "start": "1905380",
    "end": "1910990"
  },
  {
    "text": "journal after the fact we can look at this H of T to value so let's imagine",
    "start": "1910990",
    "end": "1918309"
  },
  {
    "text": "that you know somehow this date was changed from 8 3 to 8 1 in this metadata",
    "start": "1918309",
    "end": "1923650"
  },
  {
    "text": "alright so this is just a very small one bit change in the data however one of",
    "start": "1923650",
    "end": "1931960"
  },
  {
    "text": "the important characteristics of a cryptographic hash function is very small changes to the input data cause",
    "start": "1931960",
    "end": "1938830"
  },
  {
    "text": "very large and unpredictable changes to the output data so when you run this new transaction through the shot 256 you get",
    "start": "1938830",
    "end": "1947140"
  },
  {
    "text": "this completely different hash value so the first thing she could say is well you know they win and they change this",
    "start": "1947140",
    "end": "1952690"
  },
  {
    "text": "transaction if you know but the hash value is different okay we know that that something has gone wrong and so since that didn't happen we know hey",
    "start": "1952690",
    "end": "1959200"
  },
  {
    "text": "this transaction has not been tampered with and as you guys as I've said you know",
    "start": "1959200",
    "end": "1966670"
  },
  {
    "text": "shot to G is very well known I want to show you like how easy it is for anybody to compute these again this isn't",
    "start": "1966670",
    "end": "1972610"
  },
  {
    "text": "something that you need to you know download some massive client from Amazon to do it's defined by NIST so you could",
    "start": "1972610",
    "end": "1979450"
  },
  {
    "text": "actually implement it yourself if you want it's on most computer program so",
    "start": "1979450",
    "end": "1984970"
  },
  {
    "start": "1983000",
    "end": "2085000"
  },
  {
    "text": "our platform so when I was making this presentation I literally just used the sha-256 some utility on my Linux laptop",
    "start": "1984970",
    "end": "1992620"
  },
  {
    "text": "and I know some of you are thinking how could we make such an awesome PowerPoint presentation",
    "start": "1992620",
    "end": "1997990"
  },
  {
    "text": "Linux laptop the answer is I have an Amazon workspaces Windows machine I",
    "start": "1997990",
    "end": "2003030"
  },
  {
    "text": "encourage you all to do the same there are also a lot of online shot to disks",
    "start": "2003030",
    "end": "2011780"
  },
  {
    "text": "computation engines here's one for example that you could download and use and they say when you're doing a",
    "start": "2011780",
    "end": "2018840"
  },
  {
    "text": "presentation you should never do a live demo but let's try has anybody been checking my hash values by the way let's",
    "start": "2018840",
    "end": "2025650"
  },
  {
    "text": "see how they are okay so this is just this online page that gives you shot 256",
    "start": "2025650",
    "end": "2035220"
  },
  {
    "text": "[Music]",
    "start": "2035220",
    "end": "2038258"
  },
  {
    "text": "paste oh this is why you don't do online",
    "start": "2041360",
    "end": "2049770"
  },
  {
    "text": "demos right I bet Java scripts not enabled oh well that's why you don't do online demos you",
    "start": "2049770",
    "end": "2060118"
  },
  {
    "text": "can try it yourself alright if you really want to understand how",
    "start": "2060119",
    "end": "2065820"
  },
  {
    "text": "sha-256 works I encourage you to check out this blog post where he will teach",
    "start": "2065820",
    "end": "2072690"
  },
  {
    "text": "you how to compute a shot 256 by hand it'll take you the better part of a day",
    "start": "2072690",
    "end": "2078480"
  },
  {
    "text": "to do it but you will really understand how sha-256 works ok so again this is",
    "start": "2078480",
    "end": "2087510"
  },
  {
    "start": "2085000",
    "end": "2239000"
  },
  {
    "text": "really critical to understanding how our immutability and verifiability works so",
    "start": "2087510",
    "end": "2092608"
  },
  {
    "text": "I want to run one more example through so let's imagine that instead of",
    "start": "2092609",
    "end": "2098220"
  },
  {
    "text": "changing the date we go to that first transaction and we change the Tracy with an AI to chase a with the Y now in utf-8",
    "start": "2098220",
    "end": "2106109"
  },
  {
    "text": "this just so happens to be another one bit change so one thing you might ask is",
    "start": "2106109",
    "end": "2111119"
  },
  {
    "text": "well why doesn't somebody if they're trying to make this change just maybe",
    "start": "2111119",
    "end": "2116850"
  },
  {
    "text": "add some extra data into the block or change something else so that it ends up being the same hash value and this is",
    "start": "2116850",
    "end": "2123750"
  },
  {
    "text": "the second critical component of a cryptographic hash function which is it is computationally infeasible to compute",
    "start": "2123750",
    "end": "2130200"
  },
  {
    "text": "a pre-image that is to know what you want the output to be and to figure out what the input",
    "start": "2130200",
    "end": "2135240"
  },
  {
    "text": "should be and just for context this is really at the core of Bitcoin my name so",
    "start": "2135240",
    "end": "2140359"
  },
  {
    "text": "in Bitcoin you are trying to find a pre-image to match a particular prefix",
    "start": "2140359",
    "end": "2148140"
  },
  {
    "text": "of a sha-256 so right now it's 80 bits so you have to match the first 80 bits",
    "start": "2148140",
    "end": "2153240"
  },
  {
    "text": "of A Shau prefix that's about a third of it Bitcoin right now is running at about 2 to the 64th hashes per second that's",
    "start": "2153240",
    "end": "2161010"
  },
  {
    "text": "about 40 quintillion hashes per second and it takes him 10 minutes to find this okay so and each bit that you add that",
    "start": "2161010",
    "end": "2169050"
  },
  {
    "text": "you need to match it doesn't just you know if you've matched a third it doesn't take you three times as long to",
    "start": "2169050",
    "end": "2174180"
  },
  {
    "text": "match the whole thing each bit basically doubles the amount of computing power a time it would take so it's sort of heat death of the universe",
    "start": "2174180",
    "end": "2180780"
  },
  {
    "text": "kind of time frames that were that we're talking about okay so let's imagine still if this happened and they change",
    "start": "2180780",
    "end": "2188040"
  },
  {
    "text": "this one and then this one gets changed and then this women gets changed and so how do you really know you know that",
    "start": "2188040",
    "end": "2193470"
  },
  {
    "text": "nothing has changed well so fortunately if you just save any of these hash values right so I say the last one that",
    "start": "2193470",
    "end": "2201060"
  },
  {
    "text": "I saw then from that point I can go and recheck every single transaction up to",
    "start": "2201060",
    "end": "2206520"
  },
  {
    "text": "that point and if that last hash value is the same we know that not a single transaction anywhere in the changes",
    "start": "2206520",
    "end": "2212099"
  },
  {
    "text": "anywhere in the chain has changed so this is really what we mean by verifiability",
    "start": "2212099",
    "end": "2217800"
  },
  {
    "text": "is that any any possible change in the log is immediately detectable by anyone",
    "start": "2217800",
    "end": "2224720"
  },
  {
    "text": "okay so that's that's what I want to say",
    "start": "2224720",
    "end": "2230430"
  },
  {
    "text": "about the journal and immutability now I want to talk about our data model I'm",
    "start": "2230430",
    "end": "2239700"
  },
  {
    "text": "gonna go back in time a little bit not quite as far back as Chris went but like to the 1960s and 70s and I'm also going",
    "start": "2239700",
    "end": "2248190"
  },
  {
    "text": "to use a ecommerce example so customer's orders order items instead of the DMV",
    "start": "2248190",
    "end": "2253380"
  },
  {
    "text": "example so when databases were first coming out the way that data models were",
    "start": "2253380",
    "end": "2258780"
  },
  {
    "text": "constructed were really to take the same data structures that people were using in their applications and map",
    "start": "2258780",
    "end": "2264130"
  },
  {
    "text": "into the database and so you know when we choose data structures for",
    "start": "2264130",
    "end": "2269529"
  },
  {
    "text": "applications it's often about well how am I gonna access the data and how do i navigate from one piece of data to",
    "start": "2269529",
    "end": "2274839"
  },
  {
    "text": "another and so this was sort of the natural thing to do for databases the problem is that when I'm building an",
    "start": "2274839",
    "end": "2281079"
  },
  {
    "text": "application and I decide to change the data structures that I'm using you know",
    "start": "2281079",
    "end": "2286089"
  },
  {
    "text": "I fire up the application again and I load the data structures in memory it's not very costly once I've written them",
    "start": "2286089",
    "end": "2292869"
  },
  {
    "text": "to disk and especially you know the medium that they had in the 1960s and 70s it was very hard to change the data",
    "start": "2292869",
    "end": "2300729"
  },
  {
    "text": "structures on disk so this this caused a lot of problems until the relational",
    "start": "2300729",
    "end": "2307029"
  },
  {
    "text": "data model was invented and obviously given the dominance of that data model",
    "start": "2307029",
    "end": "2313539"
  },
  {
    "text": "for databases over the last 30 40 years that was a great innovation and it really freed developers up from having",
    "start": "2313539",
    "end": "2319959"
  },
  {
    "text": "to think about how am I going to navigate my data ahead of time because I",
    "start": "2319959",
    "end": "2325449"
  },
  {
    "text": "don't have to decide our customers subordinate to orders or order subordinate to customers ahead of time",
    "start": "2325449",
    "end": "2331019"
  },
  {
    "text": "one of the key innovation is the relational data model is everything as a top-level entity right and so the way",
    "start": "2331019",
    "end": "2337359"
  },
  {
    "text": "you assemble different queries is that you match these things together in relations and so you don't have to",
    "start": "2337359",
    "end": "2343539"
  },
  {
    "text": "decide ahead of time how you're gonna populate your data structures now of",
    "start": "2343539",
    "end": "2348789"
  },
  {
    "text": "course with this innovation came another problem which is the object relational mapping problem which I'm sure all of",
    "start": "2348789",
    "end": "2354579"
  },
  {
    "text": "you have had to deal with which is okay well yes it's great that I have this flexibility in my data model but I have",
    "start": "2354579",
    "end": "2360910"
  },
  {
    "text": "actual data structures that I need to load and now we need to map between the two things and actually with modern",
    "start": "2360910",
    "end": "2368199"
  },
  {
    "text": "programming languages this problem has gotten worse because many modern languages allow you to define these",
    "start": "2368199",
    "end": "2375699"
  },
  {
    "text": "nested data structures very natively very idiomatically so let's imagine that",
    "start": "2375699",
    "end": "2382390"
  },
  {
    "text": "this is an order data structure now you can mix these two ways of having the",
    "start": "2382390",
    "end": "2388359"
  },
  {
    "text": "data structures so you can see like the customer is actually a pointer to some separate data structure whereas the",
    "start": "2388359",
    "end": "2394869"
  },
  {
    "text": "shipping address and the list of order items are nested within this document and I know that if any of",
    "start": "2394869",
    "end": "2400470"
  },
  {
    "text": "you have tried to store these things in relational databases you know that it can be tricky which is why we chose a",
    "start": "2400470",
    "end": "2406170"
  },
  {
    "text": "document data model for kill to be so this might be the document data model",
    "start": "2406170",
    "end": "2412859"
  },
  {
    "text": "for the data structure I just showed you so you can see the customer ID is still",
    "start": "2412859",
    "end": "2419100"
  },
  {
    "text": "just an identifier so maybe that gets loaded in some other table or stored in some other table where is the address",
    "start": "2419100",
    "end": "2426119"
  },
  {
    "text": "and the list of order items are literally stored in the document and so",
    "start": "2426119",
    "end": "2431400"
  },
  {
    "text": "now I'm sure you guys are all wondering well wait a second you said it's sequel but now you're telling me it says document data model how does that work",
    "start": "2431400",
    "end": "2438020"
  },
  {
    "text": "I'm not going to go into it a ton but here's some quick examples so let's",
    "start": "2438020",
    "end": "2445109"
  },
  {
    "start": "2444000",
    "end": "2686000"
  },
  {
    "text": "imagine that you have the traditional relational data model and so you've got",
    "start": "2445109",
    "end": "2451140"
  },
  {
    "text": "an orders table and an addresses table and you want to find all the orders that are being shipped to Washington State so",
    "start": "2451140",
    "end": "2458250"
  },
  {
    "text": "you execute a query similar to this there's obviously many forms that you know you could write this query in but",
    "start": "2458250",
    "end": "2463470"
  },
  {
    "text": "let's look at this one so here we have the orders table and the addresses table",
    "start": "2463470",
    "end": "2469160"
  },
  {
    "text": "we have this join condition on the bottom and then we have our selection criteria that say you know I want to see",
    "start": "2469160",
    "end": "2475530"
  },
  {
    "text": "the orders where the state filled in the address record is Washington okay so how",
    "start": "2475530",
    "end": "2480600"
  },
  {
    "text": "might you do this in the document data model okay so the first thing is there's no addresses table so you get rid of",
    "start": "2480600",
    "end": "2487170"
  },
  {
    "text": "that so how do you how do you create the selection criteria okay so we've extend",
    "start": "2487170",
    "end": "2495840"
  },
  {
    "text": "the sequel just with this dot notation so if you want to look into nested",
    "start": "2495840",
    "end": "2500940"
  },
  {
    "text": "fields it's you know pretty intuitive you just say okay well I want to get something out of the shipping address and I want that the state field out of",
    "start": "2500940",
    "end": "2507750"
  },
  {
    "text": "that and then finally obviously we don't need a join condition",
    "start": "2507750",
    "end": "2513230"
  },
  {
    "text": "I wait for the camera okay all right so what about another query so here we want",
    "start": "2515730",
    "end": "2523380"
  },
  {
    "text": "to get all of the orders with items for a given customer and again you can see",
    "start": "2523380",
    "end": "2529380"
  },
  {
    "text": "that here's what the traditional sequel might look like so we have the orders table we have the order items table we",
    "start": "2529380",
    "end": "2536250"
  },
  {
    "text": "have this join condition on the bottom and a selection criteria right after the where statement and how is this going to",
    "start": "2536250",
    "end": "2544080"
  },
  {
    "text": "look like you killed to be um so again we don't have an order items table but we have this as a field within the order",
    "start": "2544080",
    "end": "2551310"
  },
  {
    "text": "right so again you can we've extended sequel to allow you to specify nested",
    "start": "2551310",
    "end": "2559130"
  },
  {
    "text": "documents as join tables essentially and this is really the fundamental insight I",
    "start": "2559130",
    "end": "2564420"
  },
  {
    "text": "think that we not me but other people at Amazon had which is when you when you're",
    "start": "2564420",
    "end": "2572160"
  },
  {
    "text": "looking at nested documents and and you're thinking about them in relation to join tables they really are in some",
    "start": "2572160",
    "end": "2577440"
  },
  {
    "text": "ways duals of each other right and so you can think of it as well I have this foreign key from the subordinate table",
    "start": "2577440",
    "end": "2583410"
  },
  {
    "text": "or you can think of it as nesting and and we've tried to leverage that syntax throughout kill to beat alright so we've",
    "start": "2583410",
    "end": "2590580"
  },
  {
    "text": "we've changed the table description and then obviously we just don't need the",
    "start": "2590580",
    "end": "2595950"
  },
  {
    "text": "join statement again the joins are sort of implicit in that the items that you care about are already nested within",
    "start": "2595950",
    "end": "2602310"
  },
  {
    "text": "that document so now this statement is going to literally return you a result",
    "start": "2602310",
    "end": "2609150"
  },
  {
    "text": "set which has one item for every order item just like the sequel did so you'll get order and order item the same order",
    "start": "2609150",
    "end": "2616440"
  },
  {
    "text": "the other order item just like you would in traditional sequel obviously because it's a document data model you could",
    "start": "2616440",
    "end": "2622980"
  },
  {
    "text": "just drop the nesting and then you would get a single result per order with the",
    "start": "2622980",
    "end": "2628350"
  },
  {
    "text": "nested structure I wish I had time to talk to you about all the other sort of",
    "start": "2628350",
    "end": "2635250"
  },
  {
    "text": "really interesting things about Kiel to be we could talk about our transaction isolation model we could talk about",
    "start": "2635250",
    "end": "2641550"
  },
  {
    "text": "scaling we could talk a ton more about schema in the preview we will be",
    "start": "2641550",
    "end": "2646710"
  },
  {
    "text": "supporting purely open content which means that your documents can be stored with whatever fields you want we",
    "start": "2646710",
    "end": "2653839"
  },
  {
    "text": "will certainly be adding support for more restrictive schema that's I think super important for developers to be",
    "start": "2653839",
    "end": "2659539"
  },
  {
    "text": "able to define things one of the reasons that we want you all to sign up for preview and Chris will talk about this",
    "start": "2659539",
    "end": "2665719"
  },
  {
    "text": "some more is we want to get your feedback we're very customer driven company of course and so as we develop",
    "start": "2665719",
    "end": "2671449"
  },
  {
    "text": "these this functionality we're gonna rely on your feedback on you know what things are important what things are",
    "start": "2671449",
    "end": "2676910"
  },
  {
    "text": "working what things aren't and so I really encourage you to sign up for the preview with that I'm gonna turn it back over to Chris thank you Andrew I promise",
    "start": "2676910",
    "end": "2687979"
  },
  {
    "start": "2686000",
    "end": "2911000"
  },
  {
    "text": "to stay in the present day for the rest of the talk so where should you really",
    "start": "2687979",
    "end": "2693890"
  },
  {
    "text": "consider using QLD B well we we talked about a bunch of examples of record-keeping earlier in the talk but I",
    "start": "2693890",
    "end": "2701319"
  },
  {
    "text": "wanted to talk just a bit more about the right kind of places to think about using this product because it's new and",
    "start": "2701319",
    "end": "2706880"
  },
  {
    "text": "because it's different to really anything else that's out there today fundamentally we think that QLD B is",
    "start": "2706880",
    "end": "2713599"
  },
  {
    "text": "appropriate for where you're building system of record applications or ledger like applications where you need to keep",
    "start": "2713599",
    "end": "2720829"
  },
  {
    "text": "that complete history or potentially need to verify your history and where",
    "start": "2720829",
    "end": "2726019"
  },
  {
    "text": "the application is centralized meaning you or your organization or your company is the single owner of the application",
    "start": "2726019",
    "end": "2733339"
  },
  {
    "text": "and has the authority to change it in the way that they want and really owns all of the data in addition to the cases",
    "start": "2733339",
    "end": "2741349"
  },
  {
    "text": "we talked about earlier you could consider using QLD B in things like HR",
    "start": "2741349",
    "end": "2746779"
  },
  {
    "text": "and payroll for example keeping track of employees and a company when they when",
    "start": "2746779",
    "end": "2752059"
  },
  {
    "text": "they join their job titles promotions compensation changes accrual of time off",
    "start": "2752059",
    "end": "2758599"
  },
  {
    "text": "you're using time off things like hours if you have a if you have employees who you're talking and clock out you may",
    "start": "2758599",
    "end": "2766069"
  },
  {
    "text": "want to record exactly when they're working so that you can pay them correctly and know that you've paid them correctly and be able to really prove it",
    "start": "2766069",
    "end": "2772279"
  },
  {
    "text": "and so on another example is if you're in manufacturing and perhaps you",
    "start": "2772279",
    "end": "2778880"
  },
  {
    "text": "manufacture the kind of goods where recalls are a you know unfortunate reality of life and they can happen for",
    "start": "2778880",
    "end": "2785350"
  },
  {
    "text": "example if you're manufacturing cars or maybe drugs or something like that and you want to be able to keep a really",
    "start": "2785350",
    "end": "2792940"
  },
  {
    "text": "accurate and precise order trail for every batch of product you create or for every individual product you create of",
    "start": "2792940",
    "end": "2799480"
  },
  {
    "text": "what components went into it potentially which factory it was created and where",
    "start": "2799480",
    "end": "2804970"
  },
  {
    "text": "on the supply on the premier of the pipeline of manufacturing each thing was",
    "start": "2804970",
    "end": "2810100"
  },
  {
    "text": "installed and potentially where each of your products was shipped to to be sold",
    "start": "2810100",
    "end": "2815170"
  },
  {
    "text": "and again for something like this using QLD B will give you that complete order trail so that if you ever do have to",
    "start": "2815170",
    "end": "2821980"
  },
  {
    "text": "recall product it's easy to dig in I understand exactly what product of yours",
    "start": "2821980",
    "end": "2827620"
  },
  {
    "text": "is affected which ones you need to recall and recall precisely the ones that need to come back and not kind of",
    "start": "2827620",
    "end": "2834030"
  },
  {
    "text": "you know pull too many things back or you know worse miss some things that really do need to be recalled and so",
    "start": "2834030",
    "end": "2840640"
  },
  {
    "text": "it's really these kind of applications with centralized control where where the data history is valuable whether it's",
    "start": "2840640",
    "end": "2847210"
  },
  {
    "text": "for you know debugging issues or auditing issues or being able to recall",
    "start": "2847210",
    "end": "2852580"
  },
  {
    "text": "how things have changed or just because you you need that history to understand how your business has evolved and maybe",
    "start": "2852580",
    "end": "2858310"
  },
  {
    "text": "identify process improvements and with that I would like to invite everybody",
    "start": "2858310",
    "end": "2865300"
  },
  {
    "text": "here to sign up for our preview as Andrew mentioned this is you know this is a new product it's a new space for us",
    "start": "2865300",
    "end": "2871840"
  },
  {
    "text": "and we would absolutely love to have customers working with us on figuring",
    "start": "2871840",
    "end": "2877690"
  },
  {
    "text": "out how we evolve this product and the right kind of features to build onto it and so and as we work towards general",
    "start": "2877690",
    "end": "2884200"
  },
  {
    "text": "availability thank you very much for attending it's been a pleasure talking",
    "start": "2884200",
    "end": "2889390"
  },
  {
    "text": "to you [Applause]",
    "start": "2889390",
    "end": "2895209"
  },
  {
    "text": "if you would please take a moment to complete the session server in the mobile app will appreciate that and",
    "start": "2896559",
    "end": "2902380"
  },
  {
    "text": "Andrew and I will be hanging out up here for a little bit and then outside the venue to answer any questions and we",
    "start": "2902380",
    "end": "2908180"
  },
  {
    "text": "would love to talk to you thank you everybody",
    "start": "2908180",
    "end": "2911469"
  }
]