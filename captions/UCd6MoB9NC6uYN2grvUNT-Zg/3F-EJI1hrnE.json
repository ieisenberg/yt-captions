[
  {
    "start": "0",
    "end": "50000"
  },
  {
    "text": "so welcome everyone to today's session my name is Ian Scofield and this is parse bhuva and we are both solutions",
    "start": "30",
    "end": "6960"
  },
  {
    "text": "architects here on the Amazon partner team and today we're going to be talking to you about why you'd want to move from",
    "start": "6960",
    "end": "13440"
  },
  {
    "text": "a monolithic architecture to a service one we're going to start off by kind of covering just very briefly like what is",
    "start": "13440",
    "end": "19350"
  },
  {
    "text": "a monolithic architecture what are some of the limitations and why would I want to move to service we'll talk about some",
    "start": "19350",
    "end": "25769"
  },
  {
    "text": "of the benefits in a service architecture and we're going to kind of get into what does this transformation process look like so there's a five-step",
    "start": "25769",
    "end": "32640"
  },
  {
    "text": "method and we're going to go through these steps we're going to take a sample application through these five steps and",
    "start": "32640",
    "end": "38399"
  },
  {
    "text": "then I'll hand it over to powers who's going to show you what this application actually looks like he went ahead and built it so he'll show you in the AWS",
    "start": "38399",
    "end": "45000"
  },
  {
    "text": "console what the service looks like what are the services we're using what are some of the best practices so with that",
    "start": "45000",
    "end": "50910"
  },
  {
    "text": "we'll kick it off so who here by a show of hands is has actually built a service application before ok so some so as",
    "start": "50910",
    "end": "60030"
  },
  {
    "text": "cloud is becoming the new normal there are a lot of trends that are becoming more and more popular and server lists",
    "start": "60030",
    "end": "65729"
  },
  {
    "text": "is one of these trends and so server lists just by its name is really not having to manage or use servers so there",
    "start": "65729",
    "end": "72900"
  },
  {
    "text": "are three kind of I'll call pillars that we're going to cover here that really kind of define what service is and how",
    "start": "72900",
    "end": "79380"
  },
  {
    "text": "you can benefit from it so the first is the concept of using manage services so",
    "start": "79380",
    "end": "84509"
  },
  {
    "text": "AWS has managed services so things like Amazon s3 RDS dynamodb and lambda and all these",
    "start": "84509",
    "end": "92579"
  },
  {
    "text": "services provide functionality that you can use and consume without having to",
    "start": "92579",
    "end": "98280"
  },
  {
    "text": "provision any of the underlying infrastructure so I'm not creating auto scaling groups I'm you know not creating",
    "start": "98280",
    "end": "103649"
  },
  {
    "text": "ec2 instances I'm not creating launch configurations you can use things like lambda where you just define your code",
    "start": "103649",
    "end": "109619"
  },
  {
    "text": "you hand it over to the language service it may take care of provisioning it and managing it for you you're not having to",
    "start": "109619",
    "end": "115049"
  },
  {
    "text": "worry about kind of capacity management or deploying across multiple availability zones across all the AWS",
    "start": "115049",
    "end": "121649"
  },
  {
    "text": "services we have the concept of a shared responsibility model and this is where we kind of delineate what AWS is",
    "start": "121649",
    "end": "128310"
  },
  {
    "text": "responsible for securing and then what you as the customer are responsible for securing so if we take a look at Amazon ec2 AWS",
    "start": "128310",
    "end": "136600"
  },
  {
    "text": "takes care of securing the physical data center we take care of securing the hypervisor and then you as the customer",
    "start": "136600",
    "end": "142210"
  },
  {
    "text": "who has root access to that instance you're responsible for securing the OS you're responsible for security group",
    "start": "142210",
    "end": "148510"
  },
  {
    "text": "rules you're responsible for continuing to patch that instance and so there's that share responsibility model where",
    "start": "148510",
    "end": "154000"
  },
  {
    "text": "AWS takes care of some of these pieces and you as the customer take care of some of these pieces now when we look at",
    "start": "154000",
    "end": "159850"
  },
  {
    "text": "managed services there's a difference there in that AWS is taken care more of these layers so like with lambda AWS is",
    "start": "159850",
    "end": "166720"
  },
  {
    "text": "still taking care of the data center they're still taking care of the operator or the excuse me they're still",
    "start": "166720",
    "end": "172750"
  },
  {
    "text": "taking care of the data center they're still taking care of the hypervisor but now they're taking care of the OS as well because you're only worrying about",
    "start": "172750",
    "end": "179980"
  },
  {
    "text": "your code and so this kind of leads into the second point which is developer productivity because you're not having",
    "start": "179980",
    "end": "185560"
  },
  {
    "text": "to worry about securing the operating system you're not provisioning infrastructure you're not you know creating auto-scaling groups you can",
    "start": "185560",
    "end": "191260"
  },
  {
    "text": "focus more on what your business is what differentiates you and that's your application that's your code and so by",
    "start": "191260",
    "end": "198160"
  },
  {
    "text": "doing that we're able to bring things faster to market you're able to iterate at a much more rapid pace third is the",
    "start": "198160",
    "end": "205210"
  },
  {
    "text": "ability to scale your application as your business continues to grow you want to make sure that your application can",
    "start": "205210",
    "end": "210580"
  },
  {
    "text": "continue to grow with it and scaling is a key part of this both scaling in and out and so by taking advantage of these",
    "start": "210580",
    "end": "217780"
  },
  {
    "text": "server love services a lot of this has taken care of for you so we take a look at lambda we can continue to invoke our functions and",
    "start": "217780",
    "end": "224350"
  },
  {
    "text": "land a service takes care of provisioning those across ec2 instances for us in multiple AZ's we just don't",
    "start": "224350",
    "end": "230440"
  },
  {
    "text": "worry about it we just continue to invoke our functions and Atlanta service takes care of it same thing with the nm ODB if we use the",
    "start": "230440",
    "end": "236800"
  },
  {
    "text": "auto scaling that's built into dynamodb we can continue to you know hit our dynamodb tables you can continue to add",
    "start": "236800",
    "end": "243010"
  },
  {
    "text": "or remove provision capacity on our behalf so we know kind of what are the",
    "start": "243010",
    "end": "248440"
  },
  {
    "start": "246000",
    "end": "315000"
  },
  {
    "text": "benefits of a service application but for some context let's talk about where we're coming from a monolithic",
    "start": "248440",
    "end": "253630"
  },
  {
    "text": "application is you know by a nature a large unruly application so kind of here",
    "start": "253630",
    "end": "259030"
  },
  {
    "text": "in the diagram you see that there are a number of pieces and all these pieces are very tightly coupled they're very",
    "start": "259030",
    "end": "264150"
  },
  {
    "text": "connected their inner join so there's not physical separation or logical separation between them and so this can",
    "start": "264150",
    "end": "270780"
  },
  {
    "text": "bring about some challenges so if one of those specifics players one of those specific parts of our application we",
    "start": "270780",
    "end": "276599"
  },
  {
    "text": "wanted to redeploy it how do we do that or what if one of these specific pieces fails how do all the other pieces react",
    "start": "276599",
    "end": "283370"
  },
  {
    "text": "typically it's not very well a lot of times your application kind of has a binary failure state it either works or",
    "start": "283370",
    "end": "289919"
  },
  {
    "text": "it doesn't because there's no separation between the components it kind of has this waterfall effect where it trickles",
    "start": "289919",
    "end": "295529"
  },
  {
    "text": "across all the different services also because their application is deployed as",
    "start": "295529",
    "end": "300900"
  },
  {
    "text": "a single unit but not only have a lot of scaling here it's a one service is getting hit much heavier than others we",
    "start": "300900",
    "end": "307560"
  },
  {
    "text": "can't just provision more capacity for that specific service our only option is to really just get a bigger box",
    "start": "307560",
    "end": "312719"
  },
  {
    "text": "and even then that can only take you so far so your first thought first thought might be okay",
    "start": "312719",
    "end": "318360"
  },
  {
    "text": "well land is service land is cool I have a monolithic application let me just put my application instead of a lambda",
    "start": "318360",
    "end": "323849"
  },
  {
    "text": "function now that's not really going to work because a lot of the application is a large long-running",
    "start": "323849",
    "end": "330270"
  },
  {
    "text": "application a lambda function is supposed to be a small short-lived task so the language service really shines",
    "start": "330270",
    "end": "337740"
  },
  {
    "text": "once you've adopted a micro services architecture now who here has heard of micro services heard that phrase before",
    "start": "337740",
    "end": "343710"
  },
  {
    "text": "lots of people so we've talked about it in a lot of AWS talks and we're really trying to drive people to adopt these",
    "start": "343710",
    "end": "350370"
  },
  {
    "text": "architectures because there's a lot of benefits that come from them so if we compare these two architectures we have",
    "start": "350370",
    "end": "356159"
  },
  {
    "start": "353000",
    "end": "387000"
  },
  {
    "text": "our monolithic versus our micro services so we can see that we now have all this",
    "start": "356159",
    "end": "361469"
  },
  {
    "text": "separation between these components and this gives us kind of a lot of flexibility here so things like being",
    "start": "361469",
    "end": "367229"
  },
  {
    "text": "able to write different services in different languages being able to deploy different services at different times",
    "start": "367229",
    "end": "372810"
  },
  {
    "text": "and also from an organizational construct your development teams can now operate autonomously they're able to",
    "start": "372810",
    "end": "379110"
  },
  {
    "text": "kind of operate at their own pace instead of having to you know kind of subscribe to the entire applications",
    "start": "379110",
    "end": "385199"
  },
  {
    "text": "development cycle so as we move into this transformation process we're going",
    "start": "385199",
    "end": "391139"
  },
  {
    "start": "387000",
    "end": "441000"
  },
  {
    "text": "to take our sample application through this and so we have a live polling application so Paris is going to show it",
    "start": "391139",
    "end": "397680"
  },
  {
    "text": "to you in the second half but we ask you a series of question we ingest those answers when you stroll them into a database and then we display",
    "start": "397680",
    "end": "404010"
  },
  {
    "text": "them visually back to you now yes this is not a monolithic by nature application but it's still",
    "start": "404010",
    "end": "410130"
  },
  {
    "text": "representative it's still kind of tightly coupled it's still all running on the same easy to instance and so it",
    "start": "410130",
    "end": "415560"
  },
  {
    "text": "still has some of those same limitations so to break it apart we have our web server we have our app service or did",
    "start": "415560",
    "end": "422640"
  },
  {
    "text": "access service and our visualization service it sits behind the load balancer and runs on an ec2 instance and it's",
    "start": "422640",
    "end": "429930"
  },
  {
    "text": "backed by a relational database now as a reminder there are many customers that run you know these types of",
    "start": "429930",
    "end": "435060"
  },
  {
    "text": "architectures on ec2 instances just fine but the way our application is built we have some limitations so the first is",
    "start": "435060",
    "end": "442050"
  },
  {
    "start": "441000",
    "end": "464000"
  },
  {
    "text": "it's hard to scale we're currently storing state inside of our application so if our instance were to die we run",
    "start": "442050",
    "end": "448350"
  },
  {
    "text": "the risk of losing all that state and so because our state is not broken out of our application it limits our options to",
    "start": "448350",
    "end": "455160"
  },
  {
    "text": "be able to scale our application we can't just horizontally scale and add more nodes so our only option is to",
    "start": "455160",
    "end": "460890"
  },
  {
    "text": "scale up but even still that only gets us so far and so this leads us to our next point is we can't handle",
    "start": "460890",
    "end": "467700"
  },
  {
    "start": "464000",
    "end": "522000"
  },
  {
    "text": "component failures so because our state is stores locally we run the risk of losing that state so a common example",
    "start": "467700",
    "end": "473520"
  },
  {
    "text": "you're here for this is an e-commerce website so let's say users browsing the site they're going through and adding things to their shopping cart they go to",
    "start": "473520",
    "end": "480270"
  },
  {
    "text": "checkout and all this in their shopping cart is empty so what has happened is that web server has died so all that state that was stored",
    "start": "480270",
    "end": "486690"
  },
  {
    "text": "locally on that web server is now gone and so two things there one that's a terrible customer experience and two",
    "start": "486690",
    "end": "492270"
  },
  {
    "text": "most likely they're going to abandon that purchase process so now you've just lost that sale so similarly to our",
    "start": "492270",
    "end": "497790"
  },
  {
    "text": "application we're ingesting these votes we're storing them locally but we're kind of holding on to them we're not really",
    "start": "497790",
    "end": "502800"
  },
  {
    "text": "storing them very quickly durably outside of our application and we eventually kind of lazy to write them into our database and so we run the risk",
    "start": "502800",
    "end": "509520"
  },
  {
    "text": "of losing that data so similarly if you have another service that is kind of a real-time processing service you're not",
    "start": "509520",
    "end": "515700"
  },
  {
    "text": "storing those durably outside of your instance or outside of your application you run the risk of losing all that data that's in flight third is we have a very",
    "start": "515700",
    "end": "524039"
  },
  {
    "start": "522000",
    "end": "575000"
  },
  {
    "text": "slow deployment process because our application is deployed as a single unit we run the risk of",
    "start": "524040",
    "end": "530750"
  },
  {
    "text": "you know kind of hampering development teams you know if they want to push a bug or fix a bug or push a new feature",
    "start": "530750",
    "end": "535970"
  },
  {
    "text": "or enhancement they have to wait for the entire application you know they don't have their individual QA QC processes",
    "start": "535970",
    "end": "542240"
  },
  {
    "text": "they can't do their individual testing and then just push the prod also it leads our limits our options so things",
    "start": "542240",
    "end": "549500"
  },
  {
    "text": "like what does our change management look like what does our deployment time look like do we have blackout dates",
    "start": "549500",
    "end": "554690"
  },
  {
    "text": "across our organization what languages our application written in all these decisions are now made unilaterally",
    "start": "554690",
    "end": "560660"
  },
  {
    "text": "across the organization instead of within your individual development teams they're most likely going to operate at",
    "start": "560660",
    "end": "565670"
  },
  {
    "text": "different paces and have their own ways of approaching problems so how do we get from this monolithic architecture to",
    "start": "565670",
    "end": "572570"
  },
  {
    "text": "eight micro services in service architecture so now we're going to walk through what this transformation process",
    "start": "572570",
    "end": "578990"
  },
  {
    "text": "looks like so I'm going to cover what the five steps are briefly and then we'll start to walk through our application through this process so you",
    "start": "578990",
    "end": "585320"
  },
  {
    "text": "can understand what happens at each one of these steps so we'll do our initial discovery we'll start to design our",
    "start": "585320",
    "end": "592190"
  },
  {
    "text": "applications we'll kind of start to construct what we want to use what are the services we're going to use how are we going to connect it all together and",
    "start": "592190",
    "end": "599150"
  },
  {
    "text": "then we'll have to start writing our code we'll define our templates we'll start kind of refactoring our application well deploy our application",
    "start": "599150",
    "end": "604850"
  },
  {
    "text": "and then based on the lessons learned throughout this process and then continuing you know as we continue to",
    "start": "604850",
    "end": "610880"
  },
  {
    "text": "operate our application and production we'll continue to refine and iterate on this so our initial step is our",
    "start": "610880",
    "end": "617690"
  },
  {
    "start": "615000",
    "end": "779000"
  },
  {
    "text": "discovery so an application that is monolithic is very large it's very unruly so it's kind of hard to really",
    "start": "617690",
    "end": "624020"
  },
  {
    "text": "dissect it and pull everything apart the best way to look at it is what are the core business functions of this",
    "start": "624020",
    "end": "630020"
  },
  {
    "text": "application so like if we take a look at our application we ingest the votes we",
    "start": "630020",
    "end": "635180"
  },
  {
    "text": "store them in a database we would treat them from a database and we display them graphically and so these loosely map to",
    "start": "635180",
    "end": "641330"
  },
  {
    "text": "our components now yes this is not a large monolithic application that is going to have a very large list but the",
    "start": "641330",
    "end": "647690"
  },
  {
    "text": "same principles do apply now the little caveat here is that most likely as you",
    "start": "647690",
    "end": "652700"
  },
  {
    "text": "go through this process you're not going to have this clean cookie cutter delineation between your services and",
    "start": "652700",
    "end": "657860"
  },
  {
    "text": "that's okay and so this is why we do this initial discovery process because you're going to identify areas",
    "start": "657860",
    "end": "663680"
  },
  {
    "text": "where you might need to refactor your code and this is going to kind of help you define your time line as you go",
    "start": "663680",
    "end": "669140"
  },
  {
    "text": "through this process so you can start to pull off the individual pieces and say okay this is you know where we want to",
    "start": "669140",
    "end": "674750"
  },
  {
    "text": "define our boundaries this is where we want to define this individual component we're going to make this a service and",
    "start": "674750",
    "end": "680000"
  },
  {
    "text": "so once we define these components then we can start to identify you know what",
    "start": "680000",
    "end": "685430"
  },
  {
    "text": "are the requirements from an infrastructure perspective things like where we going to store our state what",
    "start": "685430",
    "end": "691550"
  },
  {
    "text": "are our compute requirements is it compute intensive do we need an API is it public-facing is it private facing",
    "start": "691550",
    "end": "697970"
  },
  {
    "text": "what are our storage requirements you know do we have you know really high i/o requirements or already you working with",
    "start": "697970",
    "end": "703940"
  },
  {
    "text": "media files we need large sequential storage security requirements etc these",
    "start": "703940",
    "end": "709190"
  },
  {
    "text": "are all going to be defined by what your application currently is as well as your organizational requirements things like",
    "start": "709190",
    "end": "714680"
  },
  {
    "text": "InfoSec and other things so once we've defined these requirements we can then",
    "start": "714680",
    "end": "719720"
  },
  {
    "text": "start to map those to the AWS resources so things like okay we need a database so that's naturally going to test yours",
    "start": "719720",
    "end": "726980"
  },
  {
    "text": "towards something like RDS or DynamoDB but this leads to additional decision",
    "start": "726980",
    "end": "732020"
  },
  {
    "text": "points we want to stick with a relational model or we want to move towards you know a non relational model",
    "start": "732020",
    "end": "737060"
  },
  {
    "text": "so those are some decisions that you have to make as an organization what do you want to shift to you know as you",
    "start": "737060",
    "end": "742250"
  },
  {
    "text": "begin this transformation process there are those decision points that now is the time to make them not when you're",
    "start": "742250",
    "end": "747410"
  },
  {
    "text": "halfway through building secondly what are you're going to use for your compute you could use something like lambda you",
    "start": "747410",
    "end": "753709"
  },
  {
    "text": "can use ECS which is our container service or easy to yes this talk is",
    "start": "753709",
    "end": "758810"
  },
  {
    "text": "mostly on serverless but i want to call out that not every application is a perfect fit for the service model that's okay there are some",
    "start": "758810",
    "end": "765770"
  },
  {
    "text": "applications that are a better fit for ECS or ec2 or there may be some requirements where Lander just won't fit",
    "start": "765770",
    "end": "771829"
  },
  {
    "text": "into that model so it's important you kind of evaluate everything evenly depending on what your application is",
    "start": "771829",
    "end": "777170"
  },
  {
    "text": "and what your requirements are so when we take all our pieces we'll go ahead",
    "start": "777170",
    "end": "782240"
  },
  {
    "start": "779000",
    "end": "811000"
  },
  {
    "text": "and map these to our ruff architecture so we're storing our static content and s3 we put cloud front in front of it so",
    "start": "782240",
    "end": "789170"
  },
  {
    "text": "we're using this for our caching layer to lower our latency and get our content closer to our users we were able to deke",
    "start": "789170",
    "end": "796140"
  },
  {
    "text": "hose or application into various lambda functions and then we're using API gateway to invoke those functions and we",
    "start": "796140",
    "end": "802860"
  },
  {
    "text": "have our data that's stored in dynamo DB because what's where did it was key value pairs so it works very well with",
    "start": "802860",
    "end": "808920"
  },
  {
    "text": "DynamoDB so as we come up with this model first question is how do I secure",
    "start": "808920",
    "end": "815490"
  },
  {
    "start": "811000",
    "end": "919000"
  },
  {
    "text": "it's important as you build your application to think about security not only while your application is running",
    "start": "815490",
    "end": "820980"
  },
  {
    "text": "but when you're designing it when you're deploying it when you're building it when you're continuing to operate it and",
    "start": "820980",
    "end": "826080"
  },
  {
    "text": "so even though your application is spread across a large number of AWS services you still have a great security",
    "start": "826080",
    "end": "832800"
  },
  {
    "text": "posture so all the AWS services are built with security in mind so with",
    "start": "832800",
    "end": "838140"
  },
  {
    "text": "cloud fund we can use ordinary access identities to be able to control where's our content coming from we can use",
    "start": "838140",
    "end": "844410"
  },
  {
    "text": "things like geo based restriction to limit who can access our content with Amazon s3 we can define things like",
    "start": "844410",
    "end": "850380"
  },
  {
    "text": "bucket policies and object ACLs to again control who has access to our content then we can use things like API keys and",
    "start": "850380",
    "end": "858300"
  },
  {
    "text": "API gateway to control who has access to it we can write a custom authorizer and use jot tokens to control you know again",
    "start": "858300",
    "end": "864150"
  },
  {
    "text": "who has access to it we also have the IAM constructs that we can apply it to services like lambda and dynamodb so who",
    "start": "864150",
    "end": "870870"
  },
  {
    "text": "can invoke our functions who can put an item in our dynamodb table and all these things we can define infrastructure as",
    "start": "870870",
    "end": "877920"
  },
  {
    "text": "code and so a lot of people have heard this term before so you can use things like CloudFormation templates to define",
    "start": "877920",
    "end": "884910"
  },
  {
    "text": "not only your resources but also the security constructs around those resources so we can define things like",
    "start": "884910",
    "end": "890700"
  },
  {
    "text": "our bucket puppies our security group rules everything that now you can see here on this diagram and so we now have",
    "start": "890700",
    "end": "898380"
  },
  {
    "text": "security at two layers so we can define who can change these things so we're storing this templates most likely in",
    "start": "898380",
    "end": "904560"
  },
  {
    "text": "code commit or github so we can control who has access to commit to this repository who can change a security",
    "start": "904560",
    "end": "910860"
  },
  {
    "text": "group rule in a template and recommit that as well as the actual security constructs themselves that we've defined like the security group rules or the",
    "start": "910860",
    "end": "917550"
  },
  {
    "text": "bucket policies in addition to security it's important that you know what's",
    "start": "917550",
    "end": "923250"
  },
  {
    "start": "919000",
    "end": "1022000"
  },
  {
    "text": "happening within your application you want to have kind of the visibility into our things performing well are they",
    "start": "923250",
    "end": "928790"
  },
  {
    "text": "performing well do I have pain points and friction points similar to security the AWS services have monitoring",
    "start": "928790",
    "end": "934850"
  },
  {
    "text": "functions that are built into it so things like access logs for s3 and CloudFront you can see who's accessing",
    "start": "934850",
    "end": "939860"
  },
  {
    "text": "those where those requests coming from with cloud trail we can monitor all the API calls within our accounts and that's",
    "start": "939860",
    "end": "946160"
  },
  {
    "text": "a good one to have enabled by default is to be able to store these cloud travel Cloud trail logs external to your",
    "start": "946160",
    "end": "953150"
  },
  {
    "text": "account and have some sort of anomaly detection a lot of people take these cloud trail logs and I know they're",
    "start": "953150",
    "end": "958760"
  },
  {
    "text": "storing this cloud your logs but they never go through and actually analyze them they're never looking for hey I never you know work in the u.s. west to",
    "start": "958760",
    "end": "965270"
  },
  {
    "text": "region but now I'm seeing easy to essence get spun up so by having some alerting or monitoring based on these",
    "start": "965270",
    "end": "970880"
  },
  {
    "text": "cloud trail logs you can kind of identify things that are happening within your AWS account we also have the",
    "start": "970880",
    "end": "975950"
  },
  {
    "text": "ability to ingest application level metrics so with cloud frog cloud watch we can look at things that are at the",
    "start": "975950",
    "end": "982430"
  },
  {
    "text": "application layer that cloud trail can't our cloud watch can't natively see we also can look at things like the latency",
    "start": "982430",
    "end": "989480"
  },
  {
    "text": "and the count of requests an API gateway or DynamoDB we can look at things like throttle request with Lando we can look",
    "start": "989480",
    "end": "995960"
  },
  {
    "text": "at the duration and any errors but we can also enable x-ray which is a tracing service that will allow you to see the",
    "start": "995960",
    "end": "1002770"
  },
  {
    "text": "relationships between your landed functions so if I have a lambda function that invokes another lambda function I can see and trace those causes the trees",
    "start": "1002770",
    "end": "1009910"
  },
  {
    "text": "across the land functions or if I make calls to external services like SNS or sqs or dynamodb I can see what that",
    "start": "1009910",
    "end": "1017410"
  },
  {
    "text": "request looks like and I can see how that impacted my function and duration",
    "start": "1017410",
    "end": "1022830"
  },
  {
    "start": "1022000",
    "end": "1095000"
  },
  {
    "text": "so at this point we've kind of defined what our resources are what are the AWS requirements you know we kind of have a",
    "start": "1022830",
    "end": "1029410"
  },
  {
    "text": "roadmap for how we're going to deploy this what are the services that we're going to start to pull away from our",
    "start": "1029410",
    "end": "1034480"
  },
  {
    "text": "monolithic application but we need to actually start building it and these steps kind of bleed into each other because we can use frameworks and",
    "start": "1034480",
    "end": "1040660"
  },
  {
    "text": "frameworks allow us to kind of again abstract away some of the actual infrastructure provisioning steps and",
    "start": "1040660",
    "end": "1046480"
  },
  {
    "text": "again focus more on our application so if we're defining something like an API we're going to use API gateway and we're",
    "start": "1046480",
    "end": "1053530"
  },
  {
    "text": "going to use lambda functions now in order for us to create this you're going to create your API gateway you're gonna create your stage you're gonna create",
    "start": "1053530",
    "end": "1060010"
  },
  {
    "text": "your resources you're going to create you're gonna fit your lambda function you're also going to create the invoke permission that allows API gateway to",
    "start": "1060010",
    "end": "1066480"
  },
  {
    "text": "invoke that lambda function so there's a lot of individual pieces that you have to kind of juggle and keep track of but",
    "start": "1066480",
    "end": "1071790"
  },
  {
    "text": "really only one of those pieces is actually really related to your application so you can use things like frameworks to be able to just say this",
    "start": "1071790",
    "end": "1078840"
  },
  {
    "text": "is my Lander function this is the endpoint I want to hit you figure it out and so that's where these frameworks really shine so we have things like the",
    "start": "1078840",
    "end": "1085920"
  },
  {
    "text": "AWS service application model we have the service framework we have there's Zappa there's chalice and there's many other",
    "start": "1085920",
    "end": "1092280"
  },
  {
    "text": "out there depending on the language and what you're familiar with so I want to",
    "start": "1092280",
    "end": "1097350"
  },
  {
    "start": "1095000",
    "end": "1173000"
  },
  {
    "text": "dive into Sam just a little bit more because I think it's a pretty powerful tool and we've used it for a number of",
    "start": "1097350",
    "end": "1102480"
  },
  {
    "text": "projects internally and so again it allows you to define your infrastructures code and this is because",
    "start": "1102480",
    "end": "1107940"
  },
  {
    "text": "it sits on top of cloud formation so cloud formations to the service that allows you to define it resources and",
    "start": "1107940",
    "end": "1114060"
  },
  {
    "text": "then it's able to provision those resources and it's intelligent enough to determine the order in which these",
    "start": "1114060",
    "end": "1119460"
  },
  {
    "text": "resources should be provision so if I'm creating an ec2 instance it knows it has to create the vbc in the security group",
    "start": "1119460",
    "end": "1125700"
  },
  {
    "text": "first sley if I'm tearing my stack down it knows that has to kill the ec2 instance first before it goes through",
    "start": "1125700",
    "end": "1131970"
  },
  {
    "text": "and kills the security group and the vbc it's also smart enough to know the difference between deploy the stack",
    "start": "1131970",
    "end": "1138090"
  },
  {
    "text": "before I change let's say a security group rule I'll only change that resource so you can continue to incorporate this into",
    "start": "1138090",
    "end": "1144600"
  },
  {
    "text": "your OCS 2d pipeline to be able to continue to make changes and use CloudFormation as that executioner to",
    "start": "1144600",
    "end": "1151020"
  },
  {
    "text": "provision and deprovision your resources and because Sam sits on top of cloud formation you're able to use all of your",
    "start": "1151020",
    "end": "1157680"
  },
  {
    "text": "existing cloud formation templates to continue to operate without having to migrate or change or anything you just",
    "start": "1157680",
    "end": "1164460"
  },
  {
    "text": "take advantage of the new transforms that are available within Sam you define your lambda functions and you define all",
    "start": "1164460",
    "end": "1169890"
  },
  {
    "text": "your typical resources and you're able to provision it so here's the example",
    "start": "1169890",
    "end": "1174960"
  },
  {
    "start": "1173000",
    "end": "1296000"
  },
  {
    "text": "that I gave previously where you're defining an API you're defining a lambda function and a dynamodb table on the",
    "start": "1174960",
    "end": "1180870"
  },
  {
    "text": "left-hand side we have a CloudFormation template that creates all the resources so creates our stage our resources our",
    "start": "1180870",
    "end": "1185880"
  },
  {
    "text": "methods our permissions or lambda functions in our and our DynamoDB table now you can see there's a lot of lines",
    "start": "1185880",
    "end": "1191550"
  },
  {
    "text": "there there's a lot of essentially boiler plate code on the right hand side we're creating the exact same thing and Sam we",
    "start": "1191550",
    "end": "1197220"
  },
  {
    "text": "can see it's a lot less lines so this allows you to focus less on the template and more on your application so saving",
    "start": "1197220",
    "end": "1203910"
  },
  {
    "text": "you time so we know what have our infrastructures code we know we can use",
    "start": "1203910",
    "end": "1210150"
  },
  {
    "text": "CloudFormation or any of the other templating services out there so we can set up our pipeline and this will allow",
    "start": "1210150",
    "end": "1215340"
  },
  {
    "text": "us to continue to operate at a much faster pace now this example is going to focus mostly on Sam",
    "start": "1215340",
    "end": "1221070"
  },
  {
    "text": "but the same principles to apply to really anything works so on the left hand side we'd have our templates so",
    "start": "1221070",
    "end": "1227610"
  },
  {
    "text": "this is going to encompass things like wretched clusters dynamodb tables or lambda functions and so on",
    "start": "1227610",
    "end": "1233100"
  },
  {
    "text": "it'll also include our application code so the actual deployment package for your lambda functions so this is things",
    "start": "1233100",
    "end": "1239130"
  },
  {
    "text": "like your job your nodejs your Python and so on that's what we'll do is we'll go ahead we'll package this up well",
    "start": "1239130",
    "end": "1245640"
  },
  {
    "text": "store it in s3 and so at this point we have a service template that's pointing to these artifacts so we'll hand this",
    "start": "1245640",
    "end": "1251640"
  },
  {
    "text": "template to the CloudFormation service they'll go ahead it'll kind of decompose this it'll make those inferences based",
    "start": "1251640",
    "end": "1257160"
  },
  {
    "text": "on what are the resources we need to create so the service framework or the Sam framework is able to identify okay I",
    "start": "1257160",
    "end": "1263520"
  },
  {
    "text": "have an endpoint I have a lambda function I'll go through and create all those resources for you and so it spits out a template that CloudFormation then",
    "start": "1263520",
    "end": "1269940"
  },
  {
    "text": "interprets and then deploys on your behalf and so if we put this all together this kind of defines our pipeline so we have our packaging step",
    "start": "1269940",
    "end": "1276720"
  },
  {
    "text": "we'll go through and put everything together we can kind of store this weekend version that and code commit or",
    "start": "1276720",
    "end": "1282300"
  },
  {
    "text": "github and then we can use something like code pipeline to be able to execute all these various stages and so we can",
    "start": "1282300",
    "end": "1288470"
  },
  {
    "text": "use code pipeline to kick off our build process you know package everything",
    "start": "1288470",
    "end": "1293520"
  },
  {
    "text": "store it in s3 and then go ahead and deploy it so at this point I'm going to",
    "start": "1293520",
    "end": "1298800"
  },
  {
    "start": "1296000",
    "end": "1565000"
  },
  {
    "text": "pass it over to parse who's gonna show you kind of nitty-gritty what those details look like how this application",
    "start": "1298800",
    "end": "1304140"
  },
  {
    "text": "was built and what the servos framework can do thank you again",
    "start": "1304140",
    "end": "1311040"
  },
  {
    "text": "that was awesome so you had talked about you know what what are things that you need to think about when you're moving",
    "start": "1311040",
    "end": "1316890"
  },
  {
    "text": "from a microphone from monolithic to a micro service application I have a little bit of a small demo",
    "start": "1316890",
    "end": "1323580"
  },
  {
    "text": "like you all to pull up your smartphone's their laptops I see many of them have it open and go to this website",
    "start": "1323580",
    "end": "1328740"
  },
  {
    "text": "demo club XYZ right and in parallel also I'll also go there let me open that it's",
    "start": "1328740",
    "end": "1343200"
  },
  {
    "text": "a nice little game where you know you answer some nice questions over there",
    "start": "1343200",
    "end": "1349170"
  },
  {
    "text": "and what I'm gonna do in parallel is I'm gonna pull up another page which will basically show us the results of the",
    "start": "1349170",
    "end": "1355320"
  },
  {
    "text": "polls that we are all voting for all",
    "start": "1355320",
    "end": "1362490"
  },
  {
    "text": "right so we'll give it about a minute and a half max for everybody to get",
    "start": "1362490",
    "end": "1368640"
  },
  {
    "text": "their votes in all right which I'm",
    "start": "1368640",
    "end": "1376020"
  },
  {
    "text": "starting to see words trickle in",
    "start": "1376020",
    "end": "1379490"
  },
  {
    "text": "all right hundred books are in I think we got another least 200 in here right I",
    "start": "1414870",
    "end": "1422070"
  },
  {
    "text": "think 142 good okay all right 30 seconds",
    "start": "1422070",
    "end": "1430200"
  },
  {
    "text": "and we'll we should walk through the results to see what people think in this room right",
    "start": "1430200",
    "end": "1437780"
  },
  {
    "text": "[Music] so it doesn't look like many people want to take selfies and post it on social",
    "start": "1441220",
    "end": "1446650"
  },
  {
    "text": "media from the initial reaction hopefully you can read this okay this",
    "start": "1446650",
    "end": "1453460"
  },
  {
    "text": "this is a little better right okay 176 votes I think will I think this",
    "start": "1453460",
    "end": "1462160"
  },
  {
    "text": "is a pretty good number right so the first question was would you rather be unable to use search engines or social media as I said not many people gonna",
    "start": "1462160",
    "end": "1469210"
  },
  {
    "text": "continue to take selfies and posted on social media so only 10% of the people",
    "start": "1469210",
    "end": "1474310"
  },
  {
    "text": "would you know its traded for a thousand dollars I 11 percent now and then six",
    "start": "1474310",
    "end": "1482590"
  },
  {
    "text": "percent on the search engines right okay and then would you rather be 10 minutes late or 20 minutes early",
    "start": "1482590",
    "end": "1489160"
  },
  {
    "text": "forty five percent of us would like to be right on time while a good you know forty two percent wants to be early I",
    "start": "1489160",
    "end": "1495580"
  },
  {
    "text": "think being early is good is a good sign right permanently 500 years in the future or",
    "start": "1495580",
    "end": "1502120"
  },
  {
    "text": "500 years in the in the in the in the president right in the 30 to 21st",
    "start": "1502120",
    "end": "1507520"
  },
  {
    "text": "century 32 percent of people think you know we're good where we are I personally think this is a very exciting time with all the innovation going on so",
    "start": "1507520",
    "end": "1515110"
  },
  {
    "text": "that's a good choice 54% of the people would like to be somewhere in the future",
    "start": "1515110",
    "end": "1520240"
  },
  {
    "text": "so and I'm thinking self-driving not even self-driving cars right itself for having planes or whatever right where",
    "start": "1520240",
    "end": "1526360"
  },
  {
    "text": "you can fly by yourself maybe right and then you know amazingly fast typing",
    "start": "1526360",
    "end": "1532900"
  },
  {
    "text": "speed versus be able to read ridiculously fast interestingly and I",
    "start": "1532900",
    "end": "1538600"
  },
  {
    "text": "saw I'm seeing this as a pattern and many of my talks where now people do want to read fast right I'd argue though",
    "start": "1538600",
    "end": "1544990"
  },
  {
    "text": "you know you know really fast is one thing and then processing that is another thing right so it should really",
    "start": "1544990",
    "end": "1551170"
  },
  {
    "text": "be reading fast and processing it fast enough at the same time right so well",
    "start": "1551170",
    "end": "1556660"
  },
  {
    "text": "that was a little interesting exercise for all of us right I'll get back to my slide I have a couple of slides and then",
    "start": "1556660",
    "end": "1562990"
  },
  {
    "text": "we'll you know go through demo right all right so you know what's the high level architecture I think Ian",
    "start": "1562990",
    "end": "1568710"
  },
  {
    "start": "1565000",
    "end": "1629000"
  },
  {
    "text": "spoke about this right he said you know basically the static content which is on s3 you've got your API gave way which is",
    "start": "1568710",
    "end": "1575670"
  },
  {
    "text": "really your front-end into you all your application and your logic in the back right you've got lambda which is then going",
    "start": "1575670",
    "end": "1581910"
  },
  {
    "text": "and storing it into DynamoDB right now of course you could have RDS all right you could have ec2 instances you could",
    "start": "1581910",
    "end": "1587850"
  },
  {
    "text": "have your own API gateway and you could host the static content or the entire content on a web server write it if it's",
    "start": "1587850",
    "end": "1594000"
  },
  {
    "text": "a monolithic application is usually another seller right so this is the high level functional view you know but but",
    "start": "1594000",
    "end": "1600000"
  },
  {
    "text": "you know as Ian talked about right we are to think about many things we have to think about security we have to think about scale or we have to think about",
    "start": "1600000",
    "end": "1605640"
  },
  {
    "text": "latency we have to think about you know hotkey issues you know that may arise in your database right because if you're",
    "start": "1605640",
    "end": "1611790"
  },
  {
    "text": "running this across millions of people in a country then you know you're going to get millions of votes at the same",
    "start": "1611790",
    "end": "1617760"
  },
  {
    "text": "time right it's it's gonna be really high traffic so how do you handle that right so you know let's talk to the",
    "start": "1617760",
    "end": "1623550"
  },
  {
    "text": "detailed architecture so you had a browser right which is the DNS is hosted on rocks 53 and then we have s3 over",
    "start": "1623550",
    "end": "1631050"
  },
  {
    "start": "1629000",
    "end": "1734000"
  },
  {
    "text": "here and cloud farm right what would s3 what I'm doing here is I am having a configured bucket policies and ACLs with",
    "start": "1631050",
    "end": "1638550"
  },
  {
    "text": "CloudFront I've made sure that Origin national identity is enabled so only CloudFront can access s3 so if you were",
    "start": "1638550",
    "end": "1645240"
  },
  {
    "text": "to hit the s3 page it directly you would not be in a little--just access denied right so that way you are basically",
    "start": "1645240",
    "end": "1651420"
  },
  {
    "text": "restricting CloudFront you're only enabling class one to be able to access s3 now if you were running this you know",
    "start": "1651420",
    "end": "1658290"
  },
  {
    "text": "in a country where you only want citizens of that country to respond let's say you know for example it's a",
    "start": "1658290",
    "end": "1663390"
  },
  {
    "text": "presidential poll right then you can enable you know geo restriction where",
    "start": "1663390",
    "end": "1669150"
  },
  {
    "text": "you can make sure that only people in a certain area or a certain district or a certain country is able to get in and vote right if you have an application",
    "start": "1669150",
    "end": "1676200"
  },
  {
    "text": "that is you know having multiple bases and you want to carry on you know based on signed cookies then you could use",
    "start": "1676200",
    "end": "1681810"
  },
  {
    "text": "that functionality if you want to share to the small number of people you could assign URLs and having it on CloudFront",
    "start": "1681810",
    "end": "1687690"
  },
  {
    "text": "provides you with a lot of DDoS protection so right now this is an interesting one",
    "start": "1687690",
    "end": "1693850"
  },
  {
    "text": "over here right so you know I thought about when I was building this application I thought you know one of the demos that I was presenting you know",
    "start": "1693850",
    "end": "1700420"
  },
  {
    "text": "some people just had refreshed continuously and they would you know continue to vote right so in order to be",
    "start": "1700420",
    "end": "1706270"
  },
  {
    "text": "able to authenticate and make sure and this application did not ask you for username password did not ask you to",
    "start": "1706270",
    "end": "1711580"
  },
  {
    "text": "register you do not have to link it with any social media account right so in order to do that and I use an authentic",
    "start": "1711580",
    "end": "1718510"
  },
  {
    "text": "unauthenticated ID so that you know I basically store them in dynamo dB and next time it comes in I made sure that",
    "start": "1718510",
    "end": "1725470"
  },
  {
    "text": "this user has not already bought it and that's when it'll accept it so if you were to try to refresh your page and try",
    "start": "1725470",
    "end": "1730840"
  },
  {
    "text": "to go vote again it'll say you know thanks for trying you already voted though right so that's where I'm using kognito so that's the you know the first",
    "start": "1730840",
    "end": "1737860"
  },
  {
    "start": "1734000",
    "end": "1871000"
  },
  {
    "text": "portion is the static layer second portion is the you know dynamic layer right now with kognito what I'm doing is",
    "start": "1737860",
    "end": "1743830"
  },
  {
    "text": "I'm getting a token I'm using that to gain and I am credential to then use for my API gateway so if somebody were to",
    "start": "1743830",
    "end": "1750419"
  },
  {
    "text": "directly go into the API gateway they cannot use use API gateway because that",
    "start": "1750419",
    "end": "1755799"
  },
  {
    "text": "token is missing right that that credential is missing all right with the API gateway you know as in fact what you",
    "start": "1755799",
    "end": "1761470"
  },
  {
    "text": "get a lot of functionality around throttling or on caching you can monetize it with uses plans and most of",
    "start": "1761470",
    "end": "1767290"
  },
  {
    "text": "you in this in this room are partners right so you know if you want to monetize your API this is your service",
    "start": "1767290",
    "end": "1772570"
  },
  {
    "text": "that you would use but there is a problem in this architecture right if you were the uses across millions of",
    "start": "1772570",
    "end": "1778360"
  },
  {
    "text": "millions of customers and millions of users how do you make sure that there is no hot key issues right let's say one",
    "start": "1778360",
    "end": "1784809"
  },
  {
    "text": "cannon let's say it's a pretty presidential election and you know you're taking a vote or a pole and one",
    "start": "1784809",
    "end": "1789970"
  },
  {
    "text": "candidate is you know just famous right then and all the words go to him or her right how do you prevent and make sure",
    "start": "1789970",
    "end": "1796840"
  },
  {
    "text": "that that you know it doesn't result in a hot key I mean that's why I have this aggregation layer so what this hopefully",
    "start": "1796840",
    "end": "1804010"
  },
  {
    "text": "this works right what this DynamoDB storing this town of ODB is storing all the individual votes right so every",
    "start": "1804010",
    "end": "1810549"
  },
  {
    "text": "person every so each person will have four votes right because you have four questions and that's what this dynamo DB",
    "start": "1810549",
    "end": "1818800"
  },
  {
    "text": "table will store all of that I've enabled streams so that way in soon as a vote comes in to DynamoDB",
    "start": "1818800",
    "end": "1824429"
  },
  {
    "text": "there is a stream that gets pulled off lamda subscribed to this frame and then what it's doing is it's basically doing",
    "start": "1824429",
    "end": "1830850"
  },
  {
    "text": "an aggregation function rather this with this lambda and it's throwing it into this DynamoDB table now the second",
    "start": "1830850",
    "end": "1837749"
  },
  {
    "text": "DynamoDB table all it has is sixteen records right not 12 right three into four so you've",
    "start": "1837749",
    "end": "1843929"
  },
  {
    "text": "got you got four questions you've got three options for each so you only have 12 options and our total right so that",
    "start": "1843929",
    "end": "1851399"
  },
  {
    "text": "DynamoDB table all it does is all those lambda function will do is it goes and increments it by what and then you've",
    "start": "1851399",
    "end": "1857340"
  },
  {
    "text": "got your presentation layer which will basically that's another in a simple lambda function that'll package it up",
    "start": "1857340",
    "end": "1862830"
  },
  {
    "text": "and you know senator your presentation layer right so now with that being said let's go to our console hopefully it all",
    "start": "1862830",
    "end": "1872820"
  },
  {
    "start": "1871000",
    "end": "2316000"
  },
  {
    "text": "works we'll start with s3 and I'm sure the",
    "start": "1872820",
    "end": "1880440"
  },
  {
    "text": "session is expired",
    "start": "1880440",
    "end": "1883039"
  },
  {
    "text": "okay so that's three you know I have this bucket this is demo club XYZ right",
    "start": "1887620",
    "end": "1894010"
  },
  {
    "text": "and if you look at the bucket policy as we spoke about it in our you guys can see is it better now okay so what do you",
    "start": "1894010",
    "end": "1902559"
  },
  {
    "text": "what do you see over here is I've enabled you know this bucket part I've put in this bucket policy which",
    "start": "1902559",
    "end": "1908680"
  },
  {
    "text": "basically make sure that only cloud front is able to access it right that's so that's really it so there's there's",
    "start": "1908680",
    "end": "1914740"
  },
  {
    "text": "the s3 page and make sure that only class one can access it and you know nobody else from outside can hit that s3",
    "start": "1914740",
    "end": "1921820"
  },
  {
    "text": "page directly right so that's the static layer and now let's look at cloud right",
    "start": "1921820",
    "end": "1927730"
  },
  {
    "text": "let's look at how I've enabled cloth on so this is a CloudFront distribution right here right and I've set up a",
    "start": "1927730",
    "end": "1933280"
  },
  {
    "text": "behavior over here right so you have many options right you can you can you",
    "start": "1933280",
    "end": "1939010"
  },
  {
    "text": "know redirect HTTP to HTTPS which is what I'm doing here or you can just take HTTP or just HTTP as well right to make",
    "start": "1939010",
    "end": "1946690"
  },
  {
    "text": "it secure what I've done over here I just took any any HTTP request that",
    "start": "1946690",
    "end": "1951910"
  },
  {
    "text": "comes in I'm automatically forwarding that to an HTTPS URL for security reasons right and if you look at the",
    "start": "1951910",
    "end": "1958809"
  },
  {
    "text": "origin s3 is the origin over here right it creates a bucket policy and s3 basically is the only one that can",
    "start": "1958809",
    "end": "1965230"
  },
  {
    "text": "access it right right and have used all edge locations for best performance",
    "start": "1965230",
    "end": "1970690"
  },
  {
    "text": "right all right so now let's look at",
    "start": "1970690",
    "end": "1976420"
  },
  {
    "text": "kognito right so we talked about you know why we used cognate all right so over here as you can see I've used in a",
    "start": "1976420",
    "end": "1981790"
  },
  {
    "text": "not candidate all ten together at all it's basically assuming a role which will enable them enable it to access API",
    "start": "1981790",
    "end": "1987490"
  },
  {
    "text": "gateway and in lambda and so on and so forth right with Cognito what you could also do you know if you are you can also",
    "start": "1987490",
    "end": "1994360"
  },
  {
    "text": "you know do you can also link you to the other authentication providers right so you lose your m is an ID it is Facebook",
    "start": "1994360",
    "end": "2000390"
  },
  {
    "text": "you could use Google Twitter or in or whatnot right so you could do all of that with kognito as well right and now",
    "start": "2000390",
    "end": "2008190"
  },
  {
    "text": "with this okay so here's my API right",
    "start": "2008190",
    "end": "2013380"
  },
  {
    "text": "that I've created using API gateway and you know as Ian talked about already you've got your get you've got a puts",
    "start": "2013380",
    "end": "2018660"
  },
  {
    "text": "right you got simple methods that you've configured over here so if you look at my integration request right it's basically",
    "start": "2018660",
    "end": "2025609"
  },
  {
    "text": "a lambda proxy I'm calling a function called make sure I'm calling a function",
    "start": "2025609",
    "end": "2033019"
  },
  {
    "text": "called cast vote right which is basically which is basically this first one right this first function that's",
    "start": "2033019",
    "end": "2039229"
  },
  {
    "text": "called cast vote right and what that function is doing is all it's doing is it's it's you know",
    "start": "2039229",
    "end": "2044419"
  },
  {
    "text": "putting it putting individual records in the dynamodb table all right so let's",
    "start": "2044419",
    "end": "2049429"
  },
  {
    "text": "look at that lambda functions real quick I'll walk you through how I'm making sure that users can only you know vote",
    "start": "2049429",
    "end": "2055250"
  },
  {
    "text": "once and not multiple times right so if you look at here this is a simple lambda code that I wrote in Python all I'm",
    "start": "2055250",
    "end": "2062000"
  },
  {
    "text": "doing and this is a really really simple Python code right I'm initiating a table",
    "start": "2062000",
    "end": "2067520"
  },
  {
    "text": "over here and coming down here and just doing a put item and if you see I'm",
    "start": "2067520",
    "end": "2073069"
  },
  {
    "text": "using I'm using real lab DynamoDB inbuilt expressions right which is one of it is a condition expression so I'm",
    "start": "2073069",
    "end": "2079970"
  },
  {
    "text": "making sure that this attribute does not exist right before I put the item so that takes care of all of it right in a",
    "start": "2079970",
    "end": "2086419"
  },
  {
    "text": "monolithic world you know you would have to you know cold right make sure you have a query if it says you know select",
    "start": "2086419",
    "end": "2091819"
  },
  {
    "text": "from the stay we'll see if this user exists and then that returns are a card set and then you go in and then you",
    "start": "2091819",
    "end": "2097010"
  },
  {
    "text": "perform additional checks right with with with this architecture you can basically you know minimize all of that",
    "start": "2097010",
    "end": "2102500"
  },
  {
    "text": "code because of you know you can directly use these libraries right so",
    "start": "2102500",
    "end": "2107540"
  },
  {
    "text": "that's lambda that's the first lambda function now let's look at the dynamodb table real quick so I've got two",
    "start": "2107540",
    "end": "2117020"
  },
  {
    "text": "dynamodb tables here right the first one is for the vote table right the actual",
    "start": "2117020",
    "end": "2126700"
  },
  {
    "text": "okay extend this out a little bit okay so the first one is you know for it",
    "start": "2127359",
    "end": "2134089"
  },
  {
    "text": "to capture all of the votes and the second one is the aggregation so we'll look at the first one right now with the",
    "start": "2134089",
    "end": "2140990"
  },
  {
    "text": "first one you know this dynamodb table right it'll continue to grow right as you on the",
    "start": "2140990",
    "end": "2146810"
  },
  {
    "text": "wrong one I clicked on the aggregated one so this is the vote table so you see you have a you know you have individual",
    "start": "2146810",
    "end": "2154220"
  },
  {
    "text": "votes stored in here right now what I've enabled over here you know over time if you look at this architecture right and",
    "start": "2154220",
    "end": "2159829"
  },
  {
    "text": "you say well there are millions of users there are going to be millions of votes because you know each person has so many works right become for every question",
    "start": "2159829",
    "end": "2166940"
  },
  {
    "text": "now you will run into a situation where you're paying a lot of money because the DynamoDB table is so huge that it ends",
    "start": "2166940",
    "end": "2172940"
  },
  {
    "text": "up costing you more so what you could do you could use a function with dynamodb it's called TTL time to live this",
    "start": "2172940",
    "end": "2179869"
  },
  {
    "text": "basically defines you know where at what point it'll expire on its own right so",
    "start": "2179869",
    "end": "2184940"
  },
  {
    "text": "as you can see this one expires November 29 so I think that's tomorrow right it",
    "start": "2184940",
    "end": "2190760"
  },
  {
    "text": "just expires in 24 hours now you could keep this if you wanted to right if you wanted to do analytics on",
    "start": "2190760",
    "end": "2196130"
  },
  {
    "text": "top of it at a later point in time or if you want to do some if there's an audit requirement then you could use this one",
    "start": "2196130",
    "end": "2202040"
  },
  {
    "text": "right so if you look at the structure really simple structure right it's at",
    "start": "2202040",
    "end": "2209569"
  },
  {
    "text": "category 1 which is question 1 the user selected C for question 2 it's selected",
    "start": "2209569",
    "end": "2215060"
  },
  {
    "text": "B AC and so on right and this is the TTL and this is the user ID that we got from",
    "start": "2215060",
    "end": "2220460"
  },
  {
    "text": "cognitive right pretty simple architecture now if you see if you look",
    "start": "2220460",
    "end": "2227060"
  },
  {
    "text": "here right there's a trigger enabled over here right and that's because you",
    "start": "2227060",
    "end": "2232849"
  },
  {
    "text": "want to make sure that you know once once a record is inserted it is being captured by the next lambda function so",
    "start": "2232849",
    "end": "2239300"
  },
  {
    "text": "let's look at that lambda function real quick the second lambda function I had lambda",
    "start": "2239300",
    "end": "2244579"
  },
  {
    "text": "up in somewhere above this open it here lambda functions go to my function",
    "start": "2244579",
    "end": "2253960"
  },
  {
    "text": "look at the water together right so this is basically the lambda function which",
    "start": "2256840",
    "end": "2261920"
  },
  {
    "text": "is aggregating the votes right oops fat fingers okay so all I'm doing here",
    "start": "2261920",
    "end": "2270830"
  },
  {
    "text": "is I'm basically taking them and I'm basically then putting it into the next table right so if you look over here the",
    "start": "2270830",
    "end": "2277640"
  },
  {
    "text": "saying update item and the reason I'm not inserting an item the first time it will insert an item the second time were",
    "start": "2277640",
    "end": "2282800"
  },
  {
    "text": "on it it's going to update that and because all you're doing is you're incrementing the count by one right so",
    "start": "2282800",
    "end": "2287990"
  },
  {
    "text": "that's the second lambda function which is used in this aggregation layer right here right let's see and that's really",
    "start": "2287990",
    "end": "2297260"
  },
  {
    "text": "the demo right it's a simple architecture as you can see it's it's being built around all of the several",
    "start": "2297260",
    "end": "2304250"
  },
  {
    "text": "services now if this was a if this was a monolithic architecture right then you would you know if I start thinking about",
    "start": "2304250",
    "end": "2310430"
  },
  {
    "text": "what I have to do for each of these components then one more okay for each",
    "start": "2310430",
    "end": "2317000"
  },
  {
    "start": "2316000",
    "end": "2424000"
  },
  {
    "text": "of these components then it's a it's a bigger architecture right you've got to think about scaling you've got to think towards security you've got to think",
    "start": "2317000",
    "end": "2323450"
  },
  {
    "text": "about all these things right here if you know let's talk about scaling right so with the API gateway it scales",
    "start": "2323450",
    "end": "2329510"
  },
  {
    "text": "automatically right so you really don't have to do anything from a scaling perspective right it's it's designed to",
    "start": "2329510",
    "end": "2334880"
  },
  {
    "text": "handle millions of requests concurrent requests the same thing with lambda as well right it's designed to do that",
    "start": "2334880",
    "end": "2341320"
  },
  {
    "text": "which dynamodb we were it's designed to do that you can use auto scaling functionality to automatically increase",
    "start": "2341320",
    "end": "2348050"
  },
  {
    "text": "or decrease the amount of write and read throughput right and the same with in all the other lambda function and the",
    "start": "2348050",
    "end": "2354410"
  },
  {
    "text": "dynamodb so from a scaling aspect we've completely taken care of this right from a security aspect right because we're",
    "start": "2354410",
    "end": "2361670"
  },
  {
    "text": "using cognero and then we are using I am credentials to assume a role and to be",
    "start": "2361670",
    "end": "2367160"
  },
  {
    "text": "able to authenticate into other services we are taking care of the security aspect as well right and from a cost",
    "start": "2367160",
    "end": "2372290"
  },
  {
    "text": "aspect because these are several services you don't pay for anything that's not running so with ec2 although",
    "start": "2372290",
    "end": "2377960"
  },
  {
    "text": "you have great plans with reserved instances and whatnot right you'll save a lot of money using that but still if the instance is not running",
    "start": "2377960",
    "end": "2385349"
  },
  {
    "text": "you're still ending up paying for it right so with with you know these several services are you know you're not",
    "start": "2385349",
    "end": "2391259"
  },
  {
    "text": "paying for anything that you're not it's that when it's not running right so that's one of our four core principles",
    "start": "2391259",
    "end": "2397289"
  },
  {
    "text": "you know when we when we share serverless we'd really mean it should be now you",
    "start": "2397289",
    "end": "2402420"
  },
  {
    "text": "know you shouldn't have to pay for any time that you're not using it it should be scalable fault tolerance should be",
    "start": "2402420",
    "end": "2408599"
  },
  {
    "text": "built-in and so on right so you've taken care of scale you've taken care of securely we've taken care of cost as",
    "start": "2408599",
    "end": "2415349"
  },
  {
    "text": "well and that really is a demo right and that's the detail work - I'd like to welcome Ian back on stage so we could do",
    "start": "2415349",
    "end": "2421470"
  },
  {
    "text": "Q&A with you guys yeah and I've listed some resources over here these slides",
    "start": "2421470",
    "end": "2427410"
  },
  {
    "start": "2424000",
    "end": "2474000"
  },
  {
    "text": "will be posted I think these are some great resources that you should definitely use you know the lambda deep",
    "start": "2427410",
    "end": "2435029"
  },
  {
    "text": "dive is a really cool one I think I think they're all great the Sam deep dive you know Ian talked a little bit",
    "start": "2435029",
    "end": "2440400"
  },
  {
    "text": "about Sam there's a deep dive on YouTube and encourage you to go look at it",
    "start": "2440400",
    "end": "2445490"
  },
  {
    "text": "there's a developer tooling ian talked a little bit about that as well there's a server list page and there's a nice",
    "start": "2445490",
    "end": "2452009"
  },
  {
    "text": "building you're several as web app right that's the first web app that you could build and essentially ready to give you",
    "start": "2452009",
    "end": "2457950"
  },
  {
    "text": "a walk through step by step on how to go about building it like we'll take questions yes",
    "start": "2457950",
    "end": "2466910"
  },
  {
    "text": "yeah the question is do have the Sun github or something I'm working on it we'll post about them yes yeah you do",
    "start": "2473310",
    "end": "2486640"
  },
  {
    "start": "2474000",
    "end": "2558000"
  },
  {
    "text": "want to take that yeah so for the CSE DP so like when when he pushed post as",
    "start": "2486640",
    "end": "2492010"
  },
  {
    "text": "their code you'll see that you know this will all be defined in a template so again you can commit that to something",
    "start": "2492010",
    "end": "2497260"
  },
  {
    "text": "like code commit or github and so now I have it an inversion table auditable",
    "start": "2497260",
    "end": "2502300"
  },
  {
    "text": "fashion and so when I make those changes to my infrastructure I can go and push that into my pipeline so it's using",
    "start": "2502300",
    "end": "2507880"
  },
  {
    "text": "something like code pipeline or a third party partner solution you can now go through that pipeline you can have",
    "start": "2507880",
    "end": "2512890"
  },
  {
    "text": "different stages so it can be triggered when you do your commits so they can do something like invoke some testing you",
    "start": "2512890",
    "end": "2518320"
  },
  {
    "text": "can now deploy it to a staging environment then do your testing there and then promote it to prod so you can kind of define your steps but through",
    "start": "2518320",
    "end": "2524890"
  },
  {
    "text": "every step you're going to have some sort of provisioning aspect and so you something like CloudFormation to deploy those resources within an AWS account or",
    "start": "2524890",
    "end": "2531730"
  },
  {
    "text": "multiple ad waste accounts to do something like stack sets or something like that great yes",
    "start": "2531730",
    "end": "2538950"
  },
  {
    "text": "you could use lambda to do that so his question is you know if there are if I",
    "start": "2557020",
    "end": "2562040"
  },
  {
    "start": "2558000",
    "end": "2634000"
  },
  {
    "text": "have to consolidate multiple data sources into one and then put it in the aggregated table can I do that on the",
    "start": "2562040",
    "end": "2567590"
  },
  {
    "text": "API gateway you think you could do it on the API gateway but I would say you know use lambda to really process that",
    "start": "2567590",
    "end": "2574550"
  },
  {
    "text": "quickly put it together and then send it off to wherever you need to right right or the other option is you could stream",
    "start": "2574550",
    "end": "2581540"
  },
  {
    "text": "it into Kinesis and then use cleanest firehose to send it to s3 or rut shift",
    "start": "2581540",
    "end": "2587030"
  },
  {
    "text": "or whatever you need to write that's another option yes somebody else had a yes",
    "start": "2587030",
    "end": "2593140"
  },
  {
    "text": "[Music] Yeah right",
    "start": "2608250",
    "end": "2614480"
  },
  {
    "text": "[Music] disgust pike yeah so I guess it kind of depends there so I mean if you have",
    "start": "2632400",
    "end": "2639020"
  },
  {
    "text": "let's say like one hundred percent of your capacity is currently operating on your ec2 instances within your monolithic application depending on kind",
    "start": "2639020",
    "end": "2646070"
  },
  {
    "text": "of the pieces that you start to pull out it's going to cut them off set the amount of ec2 usage that you're gonna need and then that would be offset by",
    "start": "2646070",
    "end": "2651920"
  },
  {
    "text": "you know some of the land the usage that's starting to come online so there's going to be kind of a you know like you said it's not gonna be turn",
    "start": "2651920",
    "end": "2657650"
  },
  {
    "text": "everything off you know then turn everything on so there's going to be kind of that that point where you're slowly transitioning between ec2 in",
    "start": "2657650",
    "end": "2663650"
  },
  {
    "text": "lambda and so that's again gonna come in into that design phase where you're determining you know what are the pieces",
    "start": "2663650",
    "end": "2668960"
  },
  {
    "text": "that I'm gonna pull out you know commonly you'll see customers pull out you know specific pieces specific services specific components and that's",
    "start": "2668960",
    "end": "2675500"
  },
  {
    "text": "going to give them the ability to you know get more familiar with the process you know and you know this is a learning",
    "start": "2675500",
    "end": "2681320"
  },
  {
    "text": "process it's it's a lot different from just running an application on ec2 instance versus okay now I'm using API",
    "start": "2681320",
    "end": "2686330"
  },
  {
    "text": "gateway and lambda you know it's kind of a mind shift and so we see a lot of customers that'll do kind of a specific",
    "start": "2686330",
    "end": "2691370"
  },
  {
    "text": "piece at a time and so you can kind of start to proportionally change things yes there might be a little bit of a",
    "start": "2691370",
    "end": "2696650"
  },
  {
    "text": "spike due to the learning curve and depending on the services that you're moving but you can't offset I wouldn't say it's gonna skyrocket no I think",
    "start": "2696650",
    "end": "2702650"
  },
  {
    "text": "there's ways you can kind of architect around that depending on the pieces you're moving at a time yeah I think one of the keys to takes you know small",
    "start": "2702650",
    "end": "2709130"
  },
  {
    "start": "2707000",
    "end": "2749000"
  },
  {
    "text": "pieces plan it out start moving it in chunks based on functionality and then you break it right so over time you will",
    "start": "2709130",
    "end": "2715340"
  },
  {
    "text": "actually see your costs go down because as you said right easy to class go down while the server less you know slowly",
    "start": "2715340",
    "end": "2721370"
  },
  {
    "text": "picks up right and pay as you go so it's cheaper right yes",
    "start": "2721370",
    "end": "2727420"
  },
  {
    "text": "yeah you talked about Sam a little bit",
    "start": "2743550",
    "end": "2749320"
  },
  {
    "start": "2749000",
    "end": "2802000"
  },
  {
    "text": "right yes I mean you could package multiple functions in one but again so it kind of depends on now you can break",
    "start": "2749320",
    "end": "2755740"
  },
  {
    "text": "everything apart into its you know a million different pieces or you can kind of start to aggregate some of those functions together and this you know I",
    "start": "2755740",
    "end": "2761800"
  },
  {
    "text": "wouldn't say it's a one-size-fits-all to the recommendation there it really kind of depends on your application I mean",
    "start": "2761800",
    "end": "2766810"
  },
  {
    "text": "keep in mind one of those things where if this function were to fail and I'm doing five operations at once like how is my application handling that like am",
    "start": "2766810",
    "end": "2772750"
  },
  {
    "text": "i able to kind of unwind those operations from the previous three steps it's kind of where you see people start to break it apart of different steps",
    "start": "2772750",
    "end": "2778990"
  },
  {
    "text": "because now you kind of have that atomic option where if this thing fails I don't have to worry about unwinding other pieces you know you also get into",
    "start": "2778990",
    "end": "2785260"
  },
  {
    "text": "function duration if I'm doing a bunch of different things in a single lambda function you know now my functions are very long you know so there's there's",
    "start": "2785260",
    "end": "2791680"
  },
  {
    "text": "some other things that kind of come into play there so I think it's kind of a give-and-take between how much you want to you know blow everything apart versus",
    "start": "2791680",
    "end": "2797890"
  },
  {
    "text": "you know how much do I want to put things together for kind of an ease of use perspective I think one two acted",
    "start": "2797890",
    "end": "2804099"
  },
  {
    "start": "2802000",
    "end": "2844000"
  },
  {
    "text": "that I think one way to look at it on how to break it down right is you know teams operate autonomously right so even",
    "start": "2804099",
    "end": "2810190"
  },
  {
    "text": "within Amazon teams operate really autonomously so if you were to and every team has you know multiple code",
    "start": "2810190",
    "end": "2816910"
  },
  {
    "text": "deployments going in so if you want to you know think about breaking your code out based on a function that a team is",
    "start": "2816910",
    "end": "2823869"
  },
  {
    "text": "doing right that may be one way to think about it right and go about breaking it down right yes yes",
    "start": "2823869",
    "end": "2834180"
  },
  {
    "text": "in the surrealist ward what's but what's the best way to handle so you can use like with Ralph if you're three you get",
    "start": "2840230",
    "end": "2846930"
  },
  {
    "start": "2844000",
    "end": "2872000"
  },
  {
    "text": "so you can have your architecture set up in a number of different countries based on kind of your requirements and so you can use something like Ralph 53 that's",
    "start": "2846930",
    "end": "2853140"
  },
  {
    "text": "gonna direct you to the right end point so you can direct it to the correct CloudFront distribution or API gateway",
    "start": "2853140",
    "end": "2858300"
  },
  {
    "text": "distribution and then that's going to go through and kind of put you in the right region where you can start storing your data based on the right gentleman demo",
    "start": "2858300",
    "end": "2865650"
  },
  {
    "text": "table s3 bucket etc you can kind of use that that rapidly three to kind of be that that gatekeeper into which which",
    "start": "2865650",
    "end": "2871560"
  },
  {
    "text": "region like and then from a security perspective we never move data from one region to another region automatically",
    "start": "2871560",
    "end": "2878099"
  },
  {
    "start": "2872000",
    "end": "2926000"
  },
  {
    "text": "unless you explicitly asked us to do it so it's all it's totally in your control data is really yours right awesome yes",
    "start": "2878099",
    "end": "2888319"
  },
  {
    "text": "[Music]",
    "start": "2892390",
    "end": "2895519"
  },
  {
    "text": "via API Gatorade Oh vote via the API get way it was coupled",
    "start": "2905269",
    "end": "2911339"
  },
  {
    "text": "to the API gateway not to the front end right yeah so there are so your question",
    "start": "2911339",
    "end": "2927539"
  },
  {
    "start": "2926000",
    "end": "3006000"
  },
  {
    "text": "is could you trigger a lambda function from a cue from message queue you know I know that you could figure it based on",
    "start": "2927539",
    "end": "2934469"
  },
  {
    "text": "you know objects that arrive new and s3 or you could so yeah Harris mentioned",
    "start": "2934469",
    "end": "2939930"
  },
  {
    "text": "Kinesis earlier so you can use something like case the streams oh yeah so you can publish that data into Kinesis stream",
    "start": "2939930",
    "end": "2945329"
  },
  {
    "text": "and then you know every 250 milliseconds based on your batch size that you can figure Lander can kind of pull those things off so it's not a one-to-one",
    "start": "2945329",
    "end": "2950910"
  },
  {
    "text": "mapping you can kind of aggregate those originally by getting you know like my bachelor's like right say 100 votes and",
    "start": "2950910",
    "end": "2956099"
  },
  {
    "text": "I can pull those into my lambda function to my aggregation there you know and that's a benefit there because it could save on your Dynamo capacity you know",
    "start": "2956099",
    "end": "2961710"
  },
  {
    "text": "you could do that you know kind of aggregate those results and they're doing one update item versus one propose so like that's kind of the cool part",
    "start": "2961710",
    "end": "2968519"
  },
  {
    "text": "about the serverless architecture is you can do know really anything there's a bunch of different ways you can approach it you know you can use like sqs and",
    "start": "2968519",
    "end": "2973799"
  },
  {
    "text": "pull things off there but then you're kind of manually doing that polling you can use streams or re invoke it for you you can have the one-to-one mapping with",
    "start": "2973799",
    "end": "2980460"
  },
  {
    "text": "api gateway you can do some of that some of that stuff with the velocity templates in API gateways or your body",
    "start": "2980460",
    "end": "2986309"
  },
  {
    "text": "mappings you know there's kind of a bunch of different ways you can scan the cat there yeah",
    "start": "2986309",
    "end": "2993530"
  },
  {
    "text": "[Music]",
    "start": "2993530",
    "end": "2996639"
  },
  {
    "text": "Direct Connect like I you mean like a Debbie Esther I mean you can still you",
    "start": "3004620",
    "end": "3011380"
  },
  {
    "start": "3006000",
    "end": "3088000"
  },
  {
    "text": "it's like there's we're in the partner session you know you can use a lot of partner products for kind of your sam'l",
    "start": "3011380",
    "end": "3016780"
  },
  {
    "text": "integrations you can use things like octave but like you know you can do a lot of that stuff with Cognito as well",
    "start": "3016780",
    "end": "3021910"
  },
  {
    "text": "so what they're the options are there are there some complications yes I mean there you have to manage those",
    "start": "3021910",
    "end": "3027250"
  },
  {
    "text": "credentials within your application now for like the users perspective using with Cognito but now you can still kind",
    "start": "3027250",
    "end": "3032770"
  },
  {
    "text": "of roll your own sam'l provider as well so yeah I mean there's a bunch of options there AWS or what's that another",
    "start": "3032770",
    "end": "3043030"
  },
  {
    "text": "synchronization approach okay we can chat after if you'd like a little we'll",
    "start": "3043030",
    "end": "3049060"
  },
  {
    "text": "talk a little more in detail to understand use case and then we'll we'll come with the architecture",
    "start": "3049060",
    "end": "3055740"
  },
  {
    "text": "I'm saying that time yep oh you're",
    "start": "3071120",
    "end": "3088890"
  },
  {
    "start": "3088000",
    "end": "3160000"
  },
  {
    "text": "saying any other way apart from the console instead of some so you could use Sam templates that Ian talked about",
    "start": "3088890",
    "end": "3094350"
  },
  {
    "text": "right you can basically define you know where you sew in a lambda and I may be",
    "start": "3094350",
    "end": "3103140"
  },
  {
    "text": "misunderstanding question I'm sorry but like when you define your lender function and you have your expert so I'm assuming you're using like nodejs or",
    "start": "3103140",
    "end": "3108840"
  },
  {
    "text": "something you have your handler and you specify what that entry point is and so but the",
    "start": "3108840",
    "end": "3114870"
  },
  {
    "text": "land function is always going to go that one because it's configured at a function level not look at correct yeah",
    "start": "3114870",
    "end": "3126020"
  },
  {
    "text": "so we're doing at an application similar so game date we're using the same thing",
    "start": "3126020",
    "end": "3131280"
  },
  {
    "text": "we have you know like 30 different exports in the same lambda function so we have the same deployment package we just have different functions that have",
    "start": "3131280",
    "end": "3136800"
  },
  {
    "text": "different entry points so the lambda zip file is the same for all those functions but we're just tying the lambda function this is this function this is your",
    "start": "3136800",
    "end": "3143040"
  },
  {
    "text": "handler this is this function this is your handler so we've kind of separated it at a function level even though it's",
    "start": "3143040",
    "end": "3148260"
  },
  {
    "text": "still the same code it's still the same you know JavaScript file within it",
    "start": "3148260",
    "end": "3153410"
  },
  {
    "text": "Oh inside the lambda yeah you can't specify a specific handler you specified the lambda function in the lander",
    "start": "3159740",
    "end": "3165440"
  },
  {
    "start": "3160000",
    "end": "3214000"
  },
  {
    "text": "function specifies a specific export yeah right directly do it function the",
    "start": "3165440",
    "end": "3174440"
  },
  {
    "text": "only way you could possibly do that is to have you know one main handler in your lambda function and that's",
    "start": "3174440",
    "end": "3179720"
  },
  {
    "text": "basically your router Handler in there and so then you could kind of invoke the correct method within that right yeah",
    "start": "3179720",
    "end": "3185410"
  },
  {
    "text": "okay yes",
    "start": "3185410",
    "end": "3189010"
  },
  {
    "text": "[Music]",
    "start": "3200260",
    "end": "3207260"
  },
  {
    "text": "so with you can run your lambda functions in a V PC which you could kind of scope it down but then you're gonna",
    "start": "3213200",
    "end": "3219630"
  },
  {
    "text": "have you're gonna pay the penalty because the lambda function enter VBC is using an e and I so I think that would",
    "start": "3219630",
    "end": "3224790"
  },
  {
    "text": "kind of nullify that your videos x-ray to basically see what how much time was",
    "start": "3224790",
    "end": "3230520"
  },
  {
    "text": "taking okay if you use extra to see the monitoring aspect yeah I think the only way to really determine and nail it down would be to kind of you know run those",
    "start": "3230520",
    "end": "3236280"
  },
  {
    "text": "tests internally to have you know maybe maybe a host that you haven't in a V PC and you kind of test it if you're running it in your v bc to kind of get",
    "start": "3236280",
    "end": "3242010"
  },
  {
    "text": "those metrics ourselves i don't have those metrics you know we could possibly chat about it afterwards to see if there's no something else to do lambda",
    "start": "3242010",
    "end": "3248340"
  },
  {
    "text": "teams here so it's cool question we could ask i think we could do dive deeper to that yeah",
    "start": "3248340",
    "end": "3255680"
  },
  {
    "text": "[Music] step functions",
    "start": "3271290",
    "end": "3277980"
  },
  {
    "text": "separate step step function okay how's",
    "start": "3279440",
    "end": "3286680"
  },
  {
    "start": "3286000",
    "end": "3381000"
  },
  {
    "text": "the response on step yes the purpose has been huge a lot of people have loved it that was so we used to have we still do",
    "start": "3286680",
    "end": "3292560"
  },
  {
    "text": "have the simple workflow service which kind of gives you that ability to have that state machine but it it just wasn't",
    "start": "3292560",
    "end": "3298349"
  },
  {
    "text": "one of a kind of really heavily used services and so step functions was kind of a way to you know bind both okay we",
    "start": "3298349",
    "end": "3304829"
  },
  {
    "text": "know people are using lambda functions we know people love the server list you know kind of world but they need a way to stitch these things together and so",
    "start": "3304829",
    "end": "3311670"
  },
  {
    "text": "that's where step function says really kind of shine and you know we're using it to do two things like we have a whole",
    "start": "3311670",
    "end": "3317190"
  },
  {
    "text": "account provisioning process and so there's like 30 different steps in there we're using organizations to go through and to it",
    "start": "3317190",
    "end": "3322290"
  },
  {
    "text": "previously routes these together by hand where we have a lambda function and then would go through and execute you know invoke another lambda function so you",
    "start": "3322290",
    "end": "3328410"
  },
  {
    "text": "can kind of you know have these you know daisy chain landed functions but it was very nasty and it didn't really have we",
    "start": "3328410",
    "end": "3333930"
  },
  {
    "text": "didn't have any error handling if we took a step back so like what if these land functions fails we don't have a way to really catch that I don't have a way",
    "start": "3333930",
    "end": "3339780"
  },
  {
    "text": "to invoke another function that's further downstream and so that's kind of where step functions shines because you have kind of that orchestration level",
    "start": "3339780",
    "end": "3346530"
  },
  {
    "text": "that's above it so you can do things like raise exceptions and then catch those errors and then you know kind of slipstream chutes and ladders to another",
    "start": "3346530",
    "end": "3351930"
  },
  {
    "text": "step within it so it's yeah it's gotten a lot of traction there's a lot of things that really benefit you",
    "start": "3351930",
    "end": "3357180"
  },
  {
    "text": "especially if you go towards the serverless model yeah I've seen customers used up functions pretty extensive you've done ahem wonderful",
    "start": "3357180",
    "end": "3363540"
  },
  {
    "text": "things to perform yeah",
    "start": "3363540",
    "end": "3368660"
  },
  {
    "text": "yeah yeah yeah one of one of the things",
    "start": "3374150",
    "end": "3382999"
  },
  {
    "start": "3381000",
    "end": "3467000"
  },
  {
    "text": "I've seen is you know under estimating the amount of time it'll take to decouple some of these components right",
    "start": "3382999",
    "end": "3388519"
  },
  {
    "text": "so how four times you think you know it's it's it's gonna take two weeks or three weeks to decouple this entire",
    "start": "3388519",
    "end": "3394309"
  },
  {
    "text": "functionality but what sometimes you know customers do miss out on is to make sure that all the dependencies are also",
    "start": "3394309",
    "end": "3400460"
  },
  {
    "text": "taken care of so that's definitely one thing that you should think about the other thing is you know from a performance standpoint I do you want to",
    "start": "3400460",
    "end": "3406819"
  },
  {
    "text": "do an end-to-end testing right you want to do a system test you want to do an integration test you want to make sure",
    "start": "3406819",
    "end": "3411859"
  },
  {
    "text": "that from a usability perspective you know it's it's it should be better than or it should be same or better than what",
    "start": "3411859",
    "end": "3418940"
  },
  {
    "text": "you already had so those are a couple of you know performance is one that often sometimes people forget the readwrite",
    "start": "3418940",
    "end": "3425420"
  },
  {
    "text": "throughput that we talked about it over time once you're once you see their traffic spike sometimes you know you get",
    "start": "3425420",
    "end": "3431930"
  },
  {
    "text": "throttle back right you want to make sure that you've got enough three tried to put provision or you turn on auto",
    "start": "3431930",
    "end": "3437749"
  },
  {
    "text": "scaling right so those are a couple of you know broad areas where I've seen you know customers sometimes you know it's",
    "start": "3437749",
    "end": "3444170"
  },
  {
    "text": "like a you know blind spot right sometimes they just turn they just don't see it and then they realize over time",
    "start": "3444170",
    "end": "3450400"
  },
  {
    "text": "so those are some couple of things and then on the project management side you know you want to plan it out you want to",
    "start": "3450400",
    "end": "3456980"
  },
  {
    "text": "face these things out and over time so to make sure that every individual component is fully tested fully",
    "start": "3456980",
    "end": "3462920"
  },
  {
    "text": "integrated fully it ready while you're working the other ones right so you could have parallel teams working on multiple areas",
    "start": "3462920",
    "end": "3469789"
  },
  {
    "text": "right so that task and integration testing becomes all the more important right so definitely say those are top",
    "start": "3469789",
    "end": "3475400"
  },
  {
    "text": "three things you and do you have any other things that come to mind no I think that I mean it really comes down to when you go to the micro services and",
    "start": "3475400",
    "end": "3483109"
  },
  {
    "text": "service approach you really kind of have to fully adopt it so you really want to kind of reduce those dependencies",
    "start": "3483109",
    "end": "3488239"
  },
  {
    "text": "between the components so you know by shoving similar things in the same lambda function you really haven't gained yourself anything because now if",
    "start": "3488239",
    "end": "3494239"
  },
  {
    "text": "one service fails you're now affecting other services because you want to have kind of that that clean logical physical",
    "start": "3494239",
    "end": "3499400"
  },
  {
    "text": "separation between things and so we see people kind of doing that halfway point you know by not fully separating things",
    "start": "3499400",
    "end": "3504799"
  },
  {
    "text": "out because maybe there are some dependents maybe I'm kind of always used to the service being there and being able to",
    "start": "3504799",
    "end": "3509800"
  },
  {
    "text": "talk to that service instead of funding everything through a central API so kind of doing that halfway approach for you",
    "start": "3509800",
    "end": "3514900"
  },
  {
    "text": "you're still kind of the model at the camp but you're using serverless you know so you don't really get the benefits of it and so that kind of gives",
    "start": "3514900",
    "end": "3521350"
  },
  {
    "text": "it you know not the best experience because you haven't really given it the full shot that's an se that's kind of one of the",
    "start": "3521350",
    "end": "3527470"
  },
  {
    "text": "common things we see and then make sure that you shut down those instances that were running moves the monolithic",
    "start": "3527470",
    "end": "3533140"
  },
  {
    "text": "application right so because your costs will go up all the way so causes continuous stay up so shut it down so",
    "start": "3533140",
    "end": "3538390"
  },
  {
    "text": "you're not paying for it all right I think we are right at time so thank you very much for coming it was a pleasure",
    "start": "3538390",
    "end": "3544690"
  },
  {
    "text": "talking to you all and I hope you have a great treatment conference Thank You Jerry",
    "start": "3544690",
    "end": "3550920"
  }
]