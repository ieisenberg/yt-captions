[
  {
    "start": "0",
    "end": "53000"
  },
  {
    "text": "hi",
    "start": "5359",
    "end": "5759"
  },
  {
    "text": "and welcome to getting started with",
    "start": "5759",
    "end": "7520"
  },
  {
    "text": "secure tunneling",
    "start": "7520",
    "end": "9200"
  },
  {
    "text": "my name is greg breen and i'm an iot",
    "start": "9200",
    "end": "11679"
  },
  {
    "text": "specialist solutions architect with aws",
    "start": "11679",
    "end": "16240"
  },
  {
    "text": "in this video we'll cover secure",
    "start": "16240",
    "end": "18000"
  },
  {
    "text": "tunneling a feature of aws iot",
    "start": "18000",
    "end": "20560"
  },
  {
    "text": "device management when devices are",
    "start": "20560",
    "end": "23119"
  },
  {
    "text": "deployed behind firewalls at remote",
    "start": "23119",
    "end": "25119"
  },
  {
    "text": "sites",
    "start": "25119",
    "end": "25680"
  },
  {
    "text": "you often need a way to gain access to",
    "start": "25680",
    "end": "27760"
  },
  {
    "text": "those devices",
    "start": "27760",
    "end": "28960"
  },
  {
    "text": "for troubleshooting configuration",
    "start": "28960",
    "end": "30800"
  },
  {
    "text": "updates and other operational tasks",
    "start": "30800",
    "end": "33760"
  },
  {
    "text": "secure tunneling helps customers",
    "start": "33760",
    "end": "35680"
  },
  {
    "text": "establish bi-directional communication",
    "start": "35680",
    "end": "37840"
  },
  {
    "text": "to remote devices",
    "start": "37840",
    "end": "39440"
  },
  {
    "text": "over a secure connection that is managed",
    "start": "39440",
    "end": "41840"
  },
  {
    "text": "by aws iot",
    "start": "41840",
    "end": "44320"
  },
  {
    "text": "secure tunneling does not require",
    "start": "44320",
    "end": "46719"
  },
  {
    "text": "updates to your existing",
    "start": "46719",
    "end": "48079"
  },
  {
    "text": "inbound firewall rules so you can",
    "start": "48079",
    "end": "50320"
  },
  {
    "text": "maintain your existing security level",
    "start": "50320",
    "end": "53920"
  },
  {
    "start": "53000",
    "end": "174000"
  },
  {
    "text": "in this video i'll present a",
    "start": "53920",
    "end": "55840"
  },
  {
    "text": "demonstration of one particular use case",
    "start": "55840",
    "end": "58239"
  },
  {
    "text": "of secure tunneling",
    "start": "58239",
    "end": "59680"
  },
  {
    "text": "namely an ssh connection to a raspberry",
    "start": "59680",
    "end": "62239"
  },
  {
    "text": "pi",
    "start": "62239",
    "end": "63039"
  },
  {
    "text": "the prerequisites shown here are for",
    "start": "63039",
    "end": "65040"
  },
  {
    "text": "this particular demo",
    "start": "65040",
    "end": "66479"
  },
  {
    "text": "not the secure tunneling feature more",
    "start": "66479",
    "end": "68400"
  },
  {
    "text": "generally",
    "start": "68400",
    "end": "69760"
  },
  {
    "text": "first you need a linux based device to",
    "start": "69760",
    "end": "71840"
  },
  {
    "text": "use as your iot thing",
    "start": "71840",
    "end": "73760"
  },
  {
    "text": "a raspberry pi or linux pc is sufficient",
    "start": "73760",
    "end": "76640"
  },
  {
    "text": "for the demo",
    "start": "76640",
    "end": "77840"
  },
  {
    "text": "next the device must have an ssh daemon",
    "start": "77840",
    "end": "80640"
  },
  {
    "text": "running",
    "start": "80640",
    "end": "81600"
  },
  {
    "text": "if you wanted to for example use secure",
    "start": "81600",
    "end": "84159"
  },
  {
    "text": "tunneling to access",
    "start": "84159",
    "end": "85360"
  },
  {
    "text": "ftp you would of course need an ftp",
    "start": "85360",
    "end": "88159"
  },
  {
    "text": "server running",
    "start": "88159",
    "end": "89280"
  },
  {
    "text": "likewise for any other service your",
    "start": "89280",
    "end": "91680"
  },
  {
    "text": "firewall must allow the device to have",
    "start": "91680",
    "end": "93759"
  },
  {
    "text": "outbound traffic on port 443 you need to",
    "start": "93759",
    "end": "97280"
  },
  {
    "text": "have created a corresponding iot thing",
    "start": "97280",
    "end": "99920"
  },
  {
    "text": "in aws iot registry",
    "start": "99920",
    "end": "102399"
  },
  {
    "text": "and saved the keys and the certificates",
    "start": "102399",
    "end": "105920"
  },
  {
    "text": "to use secure tunneling your device",
    "start": "105920",
    "end": "108320"
  },
  {
    "text": "needs to have",
    "start": "108320",
    "end": "109040"
  },
  {
    "text": "aws iot secure tunneling local proxy",
    "start": "109040",
    "end": "112880"
  },
  {
    "text": "for this demo i'll be using aws iot",
    "start": "112880",
    "end": "116000"
  },
  {
    "text": "device",
    "start": "116000",
    "end": "116560"
  },
  {
    "text": "client it's an iot reference",
    "start": "116560",
    "end": "118880"
  },
  {
    "text": "implementation",
    "start": "118880",
    "end": "120000"
  },
  {
    "text": "that includes support for secure",
    "start": "120000",
    "end": "121840"
  },
  {
    "text": "tunneling it has the aws iot secure",
    "start": "121840",
    "end": "125040"
  },
  {
    "text": "tunneling local proxy",
    "start": "125040",
    "end": "126560"
  },
  {
    "text": "baked in aws iot device client",
    "start": "126560",
    "end": "129920"
  },
  {
    "text": "just makes it easy to get started with",
    "start": "129920",
    "end": "131920"
  },
  {
    "text": "several aws iot device management",
    "start": "131920",
    "end": "135040"
  },
  {
    "text": "and aws iot device defender features",
    "start": "135040",
    "end": "138400"
  },
  {
    "text": "but it's not required for using the",
    "start": "138400",
    "end": "140160"
  },
  {
    "text": "secure tunneling feature in general",
    "start": "140160",
    "end": "142720"
  },
  {
    "text": "nonetheless to follow the demo you'll",
    "start": "142720",
    "end": "144879"
  },
  {
    "text": "need to have downloaded the aws",
    "start": "144879",
    "end": "147120"
  },
  {
    "text": "iot device client source code from",
    "start": "147120",
    "end": "149360"
  },
  {
    "text": "github",
    "start": "149360",
    "end": "150160"
  },
  {
    "text": "built it for your device and configured",
    "start": "150160",
    "end": "152160"
  },
  {
    "text": "it with the appropriate thing name",
    "start": "152160",
    "end": "154080"
  },
  {
    "text": "certificates and private key we've",
    "start": "154080",
    "end": "156560"
  },
  {
    "text": "provided a link to the github repository",
    "start": "156560",
    "end": "158959"
  },
  {
    "text": "in the video description",
    "start": "158959",
    "end": "161040"
  },
  {
    "text": "finally you need to have downloaded the",
    "start": "161040",
    "end": "163120"
  },
  {
    "text": "aws iot",
    "start": "163120",
    "end": "164640"
  },
  {
    "text": "secure tunneling local proxy source code",
    "start": "164640",
    "end": "166879"
  },
  {
    "text": "from github",
    "start": "166879",
    "end": "167840"
  },
  {
    "text": "and built it for your machine we've also",
    "start": "167840",
    "end": "170319"
  },
  {
    "text": "provided a link to that repository",
    "start": "170319",
    "end": "172400"
  },
  {
    "text": "in the video description before we get",
    "start": "172400",
    "end": "175440"
  },
  {
    "text": "started with the demo",
    "start": "175440",
    "end": "176879"
  },
  {
    "text": "let's review how secure tunneling works",
    "start": "176879",
    "end": "180319"
  },
  {
    "text": "on the left you'll see a remote device",
    "start": "180319",
    "end": "182640"
  },
  {
    "text": "or thing",
    "start": "182640",
    "end": "183440"
  },
  {
    "text": "which is considered the destination for",
    "start": "183440",
    "end": "185519"
  },
  {
    "text": "the tunnel",
    "start": "185519",
    "end": "186720"
  },
  {
    "text": "in the middle you have the aws cloud",
    "start": "186720",
    "end": "189120"
  },
  {
    "text": "with aws",
    "start": "189120",
    "end": "190239"
  },
  {
    "text": "iot core and aws iot device management",
    "start": "190239",
    "end": "194640"
  },
  {
    "text": "and on the right you have the operator",
    "start": "194640",
    "end": "196480"
  },
  {
    "text": "who wants to execute a remote ssh",
    "start": "196480",
    "end": "198959"
  },
  {
    "text": "session into the iot thing the operator",
    "start": "198959",
    "end": "202319"
  },
  {
    "text": "machine is considered the source",
    "start": "202319",
    "end": "204080"
  },
  {
    "text": "of the tunnel the local proxy command",
    "start": "204080",
    "end": "206640"
  },
  {
    "text": "line utility",
    "start": "206640",
    "end": "207519"
  },
  {
    "text": "has been compiled and installed on the",
    "start": "207519",
    "end": "209840"
  },
  {
    "text": "source the operator machine",
    "start": "209840",
    "end": "212239"
  },
  {
    "text": "additionally in the case of our demo the",
    "start": "212239",
    "end": "214480"
  },
  {
    "text": "aws iot",
    "start": "214480",
    "end": "216000"
  },
  {
    "text": "device client has been compiled and",
    "start": "216000",
    "end": "218239"
  },
  {
    "text": "installed on the destination",
    "start": "218239",
    "end": "220959"
  },
  {
    "text": "device client includes local proxy and",
    "start": "220959",
    "end": "223599"
  },
  {
    "text": "the aws",
    "start": "223599",
    "end": "224560"
  },
  {
    "text": "iot device sdk for c plus",
    "start": "224560",
    "end": "228080"
  },
  {
    "text": "device client connects to iot core and",
    "start": "228080",
    "end": "230480"
  },
  {
    "text": "subscribes to the reserved",
    "start": "230480",
    "end": "232239"
  },
  {
    "text": "topic for the secure tunneling",
    "start": "232239",
    "end": "233840"
  },
  {
    "text": "notifications",
    "start": "233840",
    "end": "235360"
  },
  {
    "text": "this notification is an optional feature",
    "start": "235360",
    "end": "237519"
  },
  {
    "text": "that provides a convenient way of",
    "start": "237519",
    "end": "239280"
  },
  {
    "text": "getting the access token",
    "start": "239280",
    "end": "240959"
  },
  {
    "text": "to the destination's local proxy if you",
    "start": "240959",
    "end": "243840"
  },
  {
    "text": "have an",
    "start": "243840",
    "end": "244239"
  },
  {
    "text": "out-of-band way of delivering that token",
    "start": "244239",
    "end": "246159"
  },
  {
    "text": "to your device then your device doesn't",
    "start": "246159",
    "end": "248400"
  },
  {
    "text": "need to connect to iot core",
    "start": "248400",
    "end": "250319"
  },
  {
    "text": "nor use this notification just to create",
    "start": "250319",
    "end": "252959"
  },
  {
    "text": "a secured tunnel",
    "start": "252959",
    "end": "255840"
  },
  {
    "text": "first the operator issues an open tunnel",
    "start": "255920",
    "end": "258400"
  },
  {
    "text": "command",
    "start": "258400",
    "end": "258959"
  },
  {
    "text": "to aws iot device management",
    "start": "258959",
    "end": "262960"
  },
  {
    "text": "this publishes a notification message",
    "start": "262960",
    "end": "265120"
  },
  {
    "text": "through aws",
    "start": "265120",
    "end": "266320"
  },
  {
    "text": "iot core the notification is received on",
    "start": "266320",
    "end": "270240"
  },
  {
    "text": "the reserved",
    "start": "270240",
    "end": "271040"
  },
  {
    "text": "topic that the thing is subscribed to",
    "start": "271040",
    "end": "274160"
  },
  {
    "text": "this notification message includes the",
    "start": "274160",
    "end": "276479"
  },
  {
    "text": "destination access",
    "start": "276479",
    "end": "277840"
  },
  {
    "text": "token the aws",
    "start": "277840",
    "end": "280880"
  },
  {
    "text": "iot device client uses the destination",
    "start": "280880",
    "end": "283680"
  },
  {
    "text": "access token to initialize its embedded",
    "start": "283680",
    "end": "286160"
  },
  {
    "text": "local proxy",
    "start": "286160",
    "end": "288400"
  },
  {
    "text": "this will initialize the local proxy in",
    "start": "288400",
    "end": "290639"
  },
  {
    "text": "destination mode",
    "start": "290639",
    "end": "292000"
  },
  {
    "text": "and connect the destination side of the",
    "start": "292000",
    "end": "294840"
  },
  {
    "text": "tunnel",
    "start": "294840",
    "end": "296320"
  },
  {
    "text": "the operator downloads the source access",
    "start": "296320",
    "end": "298560"
  },
  {
    "text": "token that is issued by the aws console",
    "start": "298560",
    "end": "301360"
  },
  {
    "text": "when the tunnel was opened",
    "start": "301360",
    "end": "304080"
  },
  {
    "text": "next the operator uses that source",
    "start": "304080",
    "end": "306400"
  },
  {
    "text": "access token to initialize the local",
    "start": "306400",
    "end": "308560"
  },
  {
    "text": "proxy in source mode",
    "start": "308560",
    "end": "311120"
  },
  {
    "text": "and the source side of the tunnel is",
    "start": "311120",
    "end": "312800"
  },
  {
    "text": "connected",
    "start": "312800",
    "end": "314320"
  },
  {
    "text": "with both sides of the tunnel connected",
    "start": "314320",
    "end": "316320"
  },
  {
    "text": "the operator can open the ssh",
    "start": "316320",
    "end": "318800"
  },
  {
    "text": "session via the local proxy now i'll",
    "start": "318800",
    "end": "321840"
  },
  {
    "text": "show you how this works on the console",
    "start": "321840",
    "end": "325840"
  },
  {
    "start": "325000",
    "end": "551000"
  },
  {
    "text": "okay i'll run device client on my",
    "start": "326080",
    "end": "328560"
  },
  {
    "text": "raspberry pi",
    "start": "328560",
    "end": "331280"
  },
  {
    "text": "okay device client is up and running and",
    "start": "334639",
    "end": "336880"
  },
  {
    "text": "is subscribing to the reserve topic",
    "start": "336880",
    "end": "339120"
  },
  {
    "text": "for tunnel notifications",
    "start": "339120",
    "end": "342560"
  },
  {
    "text": "after you've logged into the management",
    "start": "344000",
    "end": "345600"
  },
  {
    "text": "console navigate to iot",
    "start": "345600",
    "end": "349919"
  },
  {
    "text": "core",
    "start": "350840",
    "end": "352639"
  },
  {
    "text": "then device management and tunnels",
    "start": "352639",
    "end": "356800"
  },
  {
    "text": "next create a tunnel give it a",
    "start": "356800",
    "end": "359360"
  },
  {
    "text": "description",
    "start": "359360",
    "end": "361918"
  },
  {
    "text": "enter the service to be used in this",
    "start": "362240",
    "end": "364639"
  },
  {
    "text": "case ssh",
    "start": "364639",
    "end": "367840"
  },
  {
    "text": "notice the add new service button you",
    "start": "368000",
    "end": "370880"
  },
  {
    "text": "can in fact use multiple services",
    "start": "370880",
    "end": "373120"
  },
  {
    "text": "on the one tunnel select your thing",
    "start": "373120",
    "end": "377280"
  },
  {
    "text": "in my case raspberry pi 4",
    "start": "377280",
    "end": "381360"
  },
  {
    "text": "finally enter a timeout this is the",
    "start": "381360",
    "end": "383840"
  },
  {
    "text": "duration the tunnel will be maintained",
    "start": "383840",
    "end": "385840"
  },
  {
    "text": "before it is automatically disconnected",
    "start": "385840",
    "end": "388000"
  },
  {
    "text": "we'll use 30 minutes we'll skip the",
    "start": "388000",
    "end": "390880"
  },
  {
    "text": "resource tags",
    "start": "390880",
    "end": "392560"
  },
  {
    "text": "and create the tunnel download the",
    "start": "392560",
    "end": "396319"
  },
  {
    "text": "access token for source",
    "start": "396319",
    "end": "398240"
  },
  {
    "text": "this will be used by the local proxy on",
    "start": "398240",
    "end": "400400"
  },
  {
    "text": "your operator machine",
    "start": "400400",
    "end": "401759"
  },
  {
    "text": "shortly returning to the device client",
    "start": "401759",
    "end": "405919"
  },
  {
    "text": "output we can observe that it received",
    "start": "405919",
    "end": "408319"
  },
  {
    "text": "an mqtt",
    "start": "408319",
    "end": "409440"
  },
  {
    "text": "tunnel notification and the destination",
    "start": "409440",
    "end": "412000"
  },
  {
    "text": "connection part of the tunnel was",
    "start": "412000",
    "end": "413680"
  },
  {
    "text": "established",
    "start": "413680",
    "end": "416319"
  },
  {
    "text": "if we click through to the new tunnel on",
    "start": "416800",
    "end": "418720"
  },
  {
    "text": "the aws console",
    "start": "418720",
    "end": "420479"
  },
  {
    "text": "we can see that it's open",
    "start": "420479",
    "end": "423840"
  },
  {
    "text": "and that the destination is connected",
    "start": "424319",
    "end": "428240"
  },
  {
    "text": "open a pair of terminal sessions on your",
    "start": "428240",
    "end": "430319"
  },
  {
    "text": "machine one for local proxy",
    "start": "430319",
    "end": "432720"
  },
  {
    "text": "and one for your ssh client",
    "start": "432720",
    "end": "436800"
  },
  {
    "text": "notice the local proxy command line",
    "start": "436800",
    "end": "438800"
  },
  {
    "text": "options the aws region",
    "start": "438800",
    "end": "441120"
  },
  {
    "text": "in which the secure tunnel is located",
    "start": "441120",
    "end": "443520"
  },
  {
    "text": "the port on which local proxy will",
    "start": "443520",
    "end": "445440"
  },
  {
    "text": "listen for incoming connections",
    "start": "445440",
    "end": "447440"
  },
  {
    "text": "and finally the source access token",
    "start": "447440",
    "end": "451840"
  },
  {
    "text": "we can refresh the aws console and see",
    "start": "455280",
    "end": "458720"
  },
  {
    "text": "that the secure tunnel",
    "start": "458720",
    "end": "460080"
  },
  {
    "text": "has formed a connection on the source",
    "start": "460080",
    "end": "462160"
  },
  {
    "text": "side now that local proxy is running",
    "start": "462160",
    "end": "465840"
  },
  {
    "text": "next on my right hand terminal session",
    "start": "465919",
    "end": "468479"
  },
  {
    "text": "we'll initialize the ssh session",
    "start": "468479",
    "end": "471120"
  },
  {
    "text": "we need to connect to the local proxy on",
    "start": "471120",
    "end": "473199"
  },
  {
    "text": "port 5555",
    "start": "473199",
    "end": "475120"
  },
  {
    "text": "the port on which it's listening the",
    "start": "475120",
    "end": "477280"
  },
  {
    "text": "username is a user on your iot device",
    "start": "477280",
    "end": "480240"
  },
  {
    "text": "in this case my raspberry pi and its",
    "start": "480240",
    "end": "482560"
  },
  {
    "text": "default user",
    "start": "482560",
    "end": "483599"
  },
  {
    "text": "pi",
    "start": "483599",
    "end": "485840"
  },
  {
    "text": "now that i've established my ssh session",
    "start": "486720",
    "end": "489520"
  },
  {
    "text": "i can securely troubleshoot",
    "start": "489520",
    "end": "491280"
  },
  {
    "text": "configure updates or perform a number of",
    "start": "491280",
    "end": "493520"
  },
  {
    "text": "other operational tasks",
    "start": "493520",
    "end": "495440"
  },
  {
    "text": "i'm also free to disconnect and",
    "start": "495440",
    "end": "497280"
  },
  {
    "text": "reconnect multiple times within the one",
    "start": "497280",
    "end": "499759"
  },
  {
    "text": "open tunnel session",
    "start": "499759",
    "end": "502879"
  },
  {
    "text": "when you're done you can exit your ssh",
    "start": "502960",
    "end": "505360"
  },
  {
    "text": "session",
    "start": "505360",
    "end": "506000"
  },
  {
    "text": "by returning to the aws console to close",
    "start": "506000",
    "end": "509199"
  },
  {
    "text": "or delete your tunnel",
    "start": "509199",
    "end": "512479"
  },
  {
    "text": "so again in this getting started demo we",
    "start": "517200",
    "end": "519919"
  },
  {
    "text": "walked through how to open a tunnel",
    "start": "519919",
    "end": "521680"
  },
  {
    "text": "in the aws management console initiate",
    "start": "521680",
    "end": "524640"
  },
  {
    "text": "the tunnel",
    "start": "524640",
    "end": "525200"
  },
  {
    "text": "using the local proxy and access token",
    "start": "525200",
    "end": "527680"
  },
  {
    "text": "connect both the destination and the",
    "start": "527680",
    "end": "529440"
  },
  {
    "text": "source sides of the secure tunnel",
    "start": "529440",
    "end": "531279"
  },
  {
    "text": "and then initiate the ssh session using",
    "start": "531279",
    "end": "534080"
  },
  {
    "text": "the local proxy",
    "start": "534080",
    "end": "535680"
  },
  {
    "text": "to learn more visit the aws iot device",
    "start": "535680",
    "end": "538959"
  },
  {
    "text": "management web page",
    "start": "538959",
    "end": "540399"
  },
  {
    "text": "and also explore the secure tunneling",
    "start": "540399",
    "end": "542640"
  },
  {
    "text": "developer documentation",
    "start": "542640",
    "end": "544320"
  },
  {
    "text": "for a deeper dive on concepts and more",
    "start": "544320",
    "end": "546800"
  },
  {
    "text": "advanced capabilities",
    "start": "546800",
    "end": "553600"
  }
]