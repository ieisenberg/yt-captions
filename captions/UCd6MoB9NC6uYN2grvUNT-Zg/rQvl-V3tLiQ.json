[
  {
    "start": "0",
    "end": "35000"
  },
  {
    "text": "my name is Tom I'm a specialist solution architects I'm joined today by Steve principled solution architect both of us",
    "start": "359",
    "end": "7919"
  },
  {
    "text": "focus on networking women within AWS so we spend a lot of time with variety",
    "start": "7919",
    "end": "14040"
  },
  {
    "text": "of customers from startups to really large enterprises and we help them build highly available and highly scalable",
    "start": "14040",
    "end": "20369"
  },
  {
    "text": "Network environments on AWS and today we're going to do exactly that we're going to look at how you build that",
    "start": "20369",
    "end": "26279"
  },
  {
    "text": "network on AWS how you design your VPC and how can you leverage some of the new capabilities we're released released",
    "start": "26279",
    "end": "33120"
  },
  {
    "text": "recently and if you familiar with networking this is gonna be something",
    "start": "33120",
    "end": "39809"
  },
  {
    "start": "35000",
    "end": "35000"
  },
  {
    "text": "that you've seen many times if not this is an example of how traditional network",
    "start": "39809",
    "end": "44940"
  },
  {
    "text": "environment might look like so in the middle you have your data centers connected to each other over fiber you",
    "start": "44940",
    "end": "52410"
  },
  {
    "text": "deploy your applications inside those eight centers you connect those eight centers back into your wide area network",
    "start": "52410",
    "end": "57780"
  },
  {
    "text": "to over to your one you can have VPN tunnels coming into your environments of virtual private networks and then if you",
    "start": "57780",
    "end": "65400"
  },
  {
    "text": "need you can connect updates enter into the internet if your applications need to be internet facing so how does this",
    "start": "65400",
    "end": "71549"
  },
  {
    "text": "compare to what we do in NE ws conceptually is actually gonna be very",
    "start": "71549",
    "end": "77610"
  },
  {
    "text": "very similar but now instead of your data centers you have your new virtual",
    "start": "77610",
    "end": "82860"
  },
  {
    "text": "private cloud your VP sees where you deploy your applications the interconnected over B PC peering instead",
    "start": "82860",
    "end": "89939"
  },
  {
    "text": "of fiber they still can have connectivity back to on-premise either over Direct Connect or using VPN again",
    "start": "89939",
    "end": "96600"
  },
  {
    "text": "and if you need to you can connect out to your to the internet as well if your applications needed the one major",
    "start": "96600",
    "end": "103740"
  },
  {
    "text": "difference between this environment and the one I showed you earlier is that you can provision this within minutes so",
    "start": "103740",
    "end": "109229"
  },
  {
    "text": "it's very easy to to deploy and it takes really little time so today what we're going to do we're going to spend some",
    "start": "109229",
    "end": "115740"
  },
  {
    "text": "time on discussing all of those different connectivity options so we'll start from building the V PC and covering all of those different",
    "start": "115740",
    "end": "121320"
  },
  {
    "text": "connectivity options that we see here and the level is going to be kind of high level architecture overview so if",
    "start": "121320",
    "end": "128399"
  },
  {
    "text": "you were hoping for deep dive into configuration you still have a chance to sneak out and",
    "start": "128399",
    "end": "133670"
  },
  {
    "text": "see if there's maybe another session that you're interested in but if the architecture is what you came here for then let's kick off so before we start",
    "start": "133670",
    "end": "142909"
  },
  {
    "start": "141000",
    "end": "141000"
  },
  {
    "text": "let's talk about the main building block of your environment the VPC the virtual private cloud I already mentioned that",
    "start": "142909",
    "end": "149269"
  },
  {
    "text": "it's similar to your data center environment but what does it actually mean it's an isolated environment in AWS",
    "start": "149269",
    "end": "156500"
  },
  {
    "text": "isolated Network environment that you have full control over so you decide what what IP address range you're going",
    "start": "156500",
    "end": "163459"
  },
  {
    "text": "to assign to that environment you decide how it's going to be divided what applications are going to be deployed inside and what those applications are",
    "start": "163459",
    "end": "170030"
  },
  {
    "text": "going to be communicating with and then you'll be deploying a virtual private cloud than one of AWS 18 regions so you",
    "start": "170030",
    "end": "177500"
  },
  {
    "text": "can put it in or Virginia you can put it in Islands you can put it in Sydney if you want and then inside of those",
    "start": "177500",
    "end": "183590"
  },
  {
    "text": "regions we have availability zones and availability zones give you the ability to make your application highly",
    "start": "183590",
    "end": "189530"
  },
  {
    "text": "available so in case of a failure in case of an outage they're designed to fail failed independently from one",
    "start": "189530",
    "end": "195799"
  },
  {
    "text": "another so to have your application highly available you deploy it across",
    "start": "195799",
    "end": "200810"
  },
  {
    "text": "different availability zones and you would do it by creating a subnet in each availability zones and then deploying",
    "start": "200810",
    "end": "206389"
  },
  {
    "text": "your Elastic Compute cloud instance ec2 instance inside that subnet and an ec2",
    "start": "206389",
    "end": "212150"
  },
  {
    "text": "instance it's the equivalent of your virtual server from your - world ok so",
    "start": "212150",
    "end": "220280"
  },
  {
    "text": "now that we have a V PC let's connect that V PC to the Internet and to do that we have four simple steps number one",
    "start": "220280",
    "end": "227329"
  },
  {
    "text": "will define the IP address range for that V PC then we'll chop it up into smaller subnets so subdivide that IP",
    "start": "227329",
    "end": "233720"
  },
  {
    "text": "address range then we'll talk about how we can configure routing and finally decide what we're allowing to connect to",
    "start": "233720",
    "end": "240650"
  },
  {
    "text": "our applications from the outside outside world so our V PC is a network",
    "start": "240650",
    "end": "245780"
  },
  {
    "text": "it will need an IP address range let's give it one so here is one that we will use throughout the session so 170 31 0.0",
    "start": "245780",
    "end": "253549"
  },
  {
    "start": "249000",
    "end": "249000"
  },
  {
    "text": "/ 16 that's going to be a range we'll use throughout the session today and it's written in The Cider notation and I",
    "start": "253549",
    "end": "260209"
  },
  {
    "text": "know it sounds like a delicious beverage but in this case cider stands for classless inter in the main routing and it's effectively a",
    "start": "260209",
    "end": "266720"
  },
  {
    "text": "way of writing IP addresses where we have the IP address followed by a slash and then the number and what it means is",
    "start": "266720",
    "end": "275090"
  },
  {
    "text": "if we convert that IP address into binary it will have 32 bits and then",
    "start": "275090",
    "end": "280130"
  },
  {
    "text": "that slash 16 locks down the uppermost 16 bit for us so translating this into plain English",
    "start": "280130",
    "end": "287060"
  },
  {
    "text": "what we're saying here is VP see instances in a VP see all going to have",
    "start": "287060",
    "end": "292669"
  },
  {
    "text": "IP addresses starting with 1 7 2 31 something something ok so we can select",
    "start": "292669",
    "end": "300949"
  },
  {
    "start": "299000",
    "end": "299000"
  },
  {
    "text": "any range we want for a VP see so why this is any better than than any other range we can we could have selected well",
    "start": "300949",
    "end": "307580"
  },
  {
    "text": "for once it's coming from the RFC 1919 standard and that standard defines the",
    "start": "307580",
    "end": "313990"
  },
  {
    "text": "IP addresses to be used in virtual in in private networks so VP see is a private",
    "start": "313990",
    "end": "320720"
  },
  {
    "text": "network so why not give it an IP address from the private network range a second reason why this range is good is we we",
    "start": "320720",
    "end": "327740"
  },
  {
    "text": "gave it a slash 16 so we gave it quite a big amount of IP addresses we have a lot of room to grow we can start splitting",
    "start": "327740",
    "end": "333919"
  },
  {
    "text": "it up into subnets but don't worry even if you gave your VP see a smaller range",
    "start": "333919",
    "end": "339229"
  },
  {
    "text": "you can always expand it in the future and we'll go we'll cover that as well and finally a golden rule for credit for",
    "start": "339229",
    "end": "345800"
  },
  {
    "text": "configuring your networks is over avoid IP address overlap so make sure that the",
    "start": "345800",
    "end": "351080"
  },
  {
    "text": "IP addresses you're deploying inside the V PC are different to anything else on premise or in any of environments you're",
    "start": "351080",
    "end": "356330"
  },
  {
    "text": "using ok what if you need an ipv6 address well you can request that as",
    "start": "356330",
    "end": "362030"
  },
  {
    "text": "well when you create a V PC in this case you don't get to select what IP address is you'll get one assigned it will come",
    "start": "362030",
    "end": "368419"
  },
  {
    "text": "from the global unicast IP address range of Amazon it's going to be internet root",
    "start": "368419",
    "end": "373639"
  },
  {
    "text": "of all IP address range and the bit mask allocated move it is actually quite big so you have quite a lot of ipv6 IP",
    "start": "373639",
    "end": "380389"
  },
  {
    "text": "addresses to play with and then how we would deploy that as you will do will stack your instances and by dual stack I",
    "start": "380389",
    "end": "386210"
  },
  {
    "text": "mean you will deploy an instance give it both an ipv4 as well as ipv6 address and",
    "start": "386210",
    "end": "391580"
  },
  {
    "text": "then depending on what environment that instance is communicating with it will use the appropriate IP address",
    "start": "391580",
    "end": "398169"
  },
  {
    "text": "okay so we have a range defined let's start splitting it into subnets so let's",
    "start": "398169",
    "end": "404539"
  },
  {
    "start": "404000",
    "end": "404000"
  },
  {
    "text": "use an example here we have a V PC let's say this is a V PC in Ireland where we",
    "start": "404539",
    "end": "410029"
  },
  {
    "text": "have three availability zones a B and C so if you remember too the availability",
    "start": "410029",
    "end": "415249"
  },
  {
    "text": "zones help us with v availability of our applications so now we need to create subnets that we will put into those",
    "start": "415249",
    "end": "421279"
  },
  {
    "text": "availability zones and we can do that we create three subnets and we decide what the IP address ranges are going to be",
    "start": "421279",
    "end": "427460"
  },
  {
    "text": "for those subnets and you can notice here that the the bitmask has changed slightly it's now a slash 24 instead of",
    "start": "427460",
    "end": "434689"
  },
  {
    "text": "a slash 16 but what that means is we're locking down a little bit more bits in that IP address so now anything in the",
    "start": "434689",
    "end": "441169"
  },
  {
    "text": "first subnet will always start with 170 31.0 followed by whatever number the",
    "start": "441169",
    "end": "447229"
  },
  {
    "text": "second subnet 1 170 31.1 the third subnet 170 31.2 so that gives us the",
    "start": "447229",
    "end": "453439"
  },
  {
    "text": "subnet configuration to start deploying applications now let's go through a",
    "start": "453439",
    "end": "458449"
  },
  {
    "text": "scenario where let's say we've run out of IP addresses so the original allocation we did was too small or maybe we started with just",
    "start": "458449",
    "end": "466520"
  },
  {
    "text": "using 2 availability zone so now we want to expand to the third one so again let's get an another example let's say",
    "start": "466520",
    "end": "473029"
  },
  {
    "text": "this is still the island region where you know we have three availability zones but we only used two and we used",
    "start": "473029",
    "end": "480499"
  },
  {
    "text": "up all of IP IP addresses and now we've run out of IP addresses for the third zone that we want to expand to all we",
    "start": "480499",
    "end": "486019"
  },
  {
    "text": "need to do is go back to the V PC and say we want another side of Locke and in this case we can request and decide what",
    "start": "486019",
    "end": "492709"
  },
  {
    "text": "it's going to be 1 7 to 21 in our example / 16 and then we can start subdividing that block into smaller",
    "start": "492709",
    "end": "498860"
  },
  {
    "text": "subnets and putting the putting applications into our third availability zone ok so some golden rules and",
    "start": "498860",
    "end": "507050"
  },
  {
    "start": "505000",
    "end": "505000"
  },
  {
    "text": "recommendations about IP addressing inside your VDC so start big give yourself that / 16 unless you have",
    "start": "507050",
    "end": "514010"
  },
  {
    "text": "reasons not to remember you can always expand that / 16 for subnets / 24",
    "start": "514010",
    "end": "520219"
  },
  {
    "text": "actually good a good bit masks to use they give you 251 IP addresses but also",
    "start": "520219",
    "end": "525380"
  },
  {
    "text": "they're easily read by us humans and then finally if you want your application to be highly",
    "start": "525380",
    "end": "530610"
  },
  {
    "text": "available deploy it across multiple availability zones okay so we have IP addressing defined",
    "start": "530610",
    "end": "536970"
  },
  {
    "text": "let's start sending packets back and forth and to send packets we need to have some routing rules we need to have",
    "start": "536970",
    "end": "543390"
  },
  {
    "text": "a route table that will tell us how to forward packets depending on the destination that packet is going to so",
    "start": "543390",
    "end": "549810"
  },
  {
    "start": "549000",
    "end": "549000"
  },
  {
    "text": "each V PC is going to have a default route table associated with it we call the main route table but you can also",
    "start": "549810",
    "end": "556880"
  },
  {
    "text": "create separate truth tables for those different subnets you create if you want them to have different rules configured",
    "start": "556880",
    "end": "564720"
  },
  {
    "text": "and we'll cover that example a little bit later as well but let's have a look at how that default route table actually",
    "start": "564720",
    "end": "571920"
  },
  {
    "text": "looks like so this is our V PC and this is the route table the the main route table that it's using so all of the",
    "start": "571920",
    "end": "577290"
  },
  {
    "text": "sudden is by default we'll be using this particular route table inside right now we have a single entry and what that",
    "start": "577290",
    "end": "583380"
  },
  {
    "text": "entry says is that any traffic going to 172 3100 516 so the range of our V PC",
    "start": "583380",
    "end": "589589"
  },
  {
    "text": "should stay inside of e PC makes a lot of sense right but what if we start",
    "start": "589589",
    "end": "595050"
  },
  {
    "text": "sending packets elsewhere what if we are sending packets to the Internet well without any additional rules in the",
    "start": "595050",
    "end": "600660"
  },
  {
    "text": "routing table they just get dropped so you have to have a specific rule for the traffic to be forwarded out so there's",
    "start": "600660",
    "end": "607680"
  },
  {
    "text": "two steps to actually start get your V PC to start communicating with the Internet and the first step is to create",
    "start": "607680",
    "end": "614370"
  },
  {
    "text": "a gateway so with exit and entry point for any traffic to and from the internet and we can do that by creating an an IG",
    "start": "614370",
    "end": "623160"
  },
  {
    "start": "621000",
    "end": "621000"
  },
  {
    "text": "W internet gateway this is an Amazon managed object and it will be used as a",
    "start": "623160",
    "end": "629250"
  },
  {
    "text": "target in your routing table so once we have the gateway we can go back to a routing table and we can start adding",
    "start": "629250",
    "end": "636920"
  },
  {
    "text": "start adding an additional routing table an additional routing entry in there to allow for traffic destined to the",
    "start": "636920",
    "end": "642810"
  },
  {
    "text": "internet to use the internet gateway to get out and come back in to our environment",
    "start": "642810",
    "end": "649250"
  },
  {
    "text": "so we'll take question afterwards but the question is here about include the",
    "start": "652860",
    "end": "657910"
  },
  {
    "text": "response traffic so Internet gateway allows the traffic to go through in both directions think about it as a two-way",
    "start": "657910",
    "end": "663250"
  },
  {
    "text": "door traffic goes out but traffic originating from the outside of a VPC can also go in and connect to your",
    "start": "663250",
    "end": "668950"
  },
  {
    "text": "instances okay so we've opened up our V",
    "start": "668950",
    "end": "673990"
  },
  {
    "text": "PC from a routing point of view we have traffic going in and out but now we want to be able to open what what traffic do",
    "start": "673990",
    "end": "682330"
  },
  {
    "text": "we want to allow so from a routing point of view we can have anything flowing but we haven't actually open anything up from a security point of view so we have",
    "start": "682330",
    "end": "689680"
  },
  {
    "text": "two different layer four security options for our V pcs and these are network access control lists knuckles",
    "start": "689680",
    "end": "695470"
  },
  {
    "text": "and security groups and here we're going to focus on security groups if you want to talk to us about network access",
    "start": "695470",
    "end": "701530"
  },
  {
    "text": "control this feel free to catch us after this session we'll be just outside in the E and the expo area so security",
    "start": "701530",
    "end": "710050"
  },
  {
    "text": "groups think about them as your as a stateful firewall that you would wrap around either your instance a single",
    "start": "710050",
    "end": "715690"
  },
  {
    "text": "instance or a group of instances and let's look an example of how that",
    "start": "715690",
    "end": "720790"
  },
  {
    "start": "720000",
    "end": "720000"
  },
  {
    "text": "actually would look like how would it work so let's go back to our V PC in Ireland now we deploy the number of",
    "start": "720790",
    "end": "726850"
  },
  {
    "text": "instances in there and let's say the top layer of instances the yellow ones are our web service so these are expecting",
    "start": "726850",
    "end": "734440"
  },
  {
    "text": "TCP port 80 connections so HTTP connections from the outside to connect to them so users from the Internet",
    "start": "734440",
    "end": "740290"
  },
  {
    "text": "should be connect to should be able to connect to our web servers and then we have a second here which are our back",
    "start": "740290",
    "end": "745720"
  },
  {
    "text": "ends so let's say these are running some arbitrary port TCP 2 3 4 5 and all they expect is",
    "start": "745720",
    "end": "752440"
  },
  {
    "text": "connections from the web service they shouldn't be reachable from anyone else except from from the web servers so now",
    "start": "752440",
    "end": "758980"
  },
  {
    "text": "we have two different security profiles here right the the web service we should be communicating with the Internet and",
    "start": "758980",
    "end": "764410"
  },
  {
    "text": "our backends that should be isolated so we can now wrap those into two different security groups the web service will go",
    "start": "764410",
    "end": "772090"
  },
  {
    "text": "into my web server security group the backends are going to go into my back-end security group once we have",
    "start": "772090",
    "end": "777310"
  },
  {
    "text": "that defined we can start feeding rules for those specific security group for the web servers we're going to be",
    "start": "777310",
    "end": "782620"
  },
  {
    "text": "allowing any traffic on port 80s or HTTP connections so that's our web service",
    "start": "782620",
    "end": "788480"
  },
  {
    "text": "and for the backends oh we will allow is connections from the web servers themselves so that's how it's modeled",
    "start": "788480",
    "end": "795260"
  },
  {
    "text": "from a point of view of the diagram but let's have a look at how this is actually configured how does it look like in the configuration so this is our",
    "start": "795260",
    "end": "802610"
  },
  {
    "start": "801000",
    "end": "801000"
  },
  {
    "text": "security group for the web service in here you can see this two entries and",
    "start": "802610",
    "end": "808000"
  },
  {
    "text": "we're allowing HTTP traffic so TCP port 80 traffic from any ipv4 as well as ipv6",
    "start": "808000",
    "end": "815330"
  },
  {
    "text": "sources that's why there's two entries so if you do all stuck to your application and your application is listening on both ipv6 and ipv4 address",
    "start": "815330",
    "end": "821780"
  },
  {
    "text": "you'll be able to allow HTTP traffic to connect to do it on either one of those IP addresses so here is the our entry so",
    "start": "821780",
    "end": "829610"
  },
  {
    "text": "that basically takes care of the connectivity from the outside to our web service recently we've also added an",
    "start": "829610",
    "end": "835550"
  },
  {
    "text": "additional feature in there to allow you to give yourself rule descriptions for those different rules you're adding maybe for two rules you'll know why",
    "start": "835550",
    "end": "843080"
  },
  {
    "text": "they're there but once you get to 1500 it can get quite complicated to then go back and figure out why why some rules",
    "start": "843080",
    "end": "848480"
  },
  {
    "text": "were added in the first place okay but let's have a look at how the security group for the backends looks like so",
    "start": "848480",
    "end": "855350"
  },
  {
    "start": "851000",
    "end": "851000"
  },
  {
    "text": "here we have a single entry and that single entry is allowing TCP port 2 3 4 5 so the port we've defined could be any",
    "start": "855350",
    "end": "861890"
  },
  {
    "text": "port really but we're only allowing the my web server security group as the source so we don't have to allow this",
    "start": "861890",
    "end": "869420"
  },
  {
    "text": "configuration based on subnet we don't have to maintain the list of service ourselves as long as we've put",
    "start": "869420",
    "end": "875840"
  },
  {
    "text": "all of our web service into my web server security groups security group they'll all be able to access our backends and it doesn't matter if the",
    "start": "875840",
    "end": "883130"
  },
  {
    "text": "service will be in the different subnets it doesn't matter if they say if you need to add additional service and to entomb the my web server security group",
    "start": "883130",
    "end": "890240"
  },
  {
    "text": "to all be able to connect to the backends as long as they're in that security group very powerful feature",
    "start": "890240",
    "end": "896709"
  },
  {
    "text": "ok so let's take a check of where we are we've created a V PC we've configure the",
    "start": "897010",
    "end": "902870"
  },
  {
    "text": "IP addressing chopped up into subnets we configure the routing and then we open up access using security group so we",
    "start": "902870",
    "end": "910700"
  },
  {
    "text": "allowed what we want to receive the traffic we want to receive so we have it connected to the Internet let's see what's beyond that so what",
    "start": "910700",
    "end": "918530"
  },
  {
    "text": "we'll do we'll look at how you can configure those different routing tables per subnet and why you would do that in",
    "start": "918530",
    "end": "924410"
  },
  {
    "text": "the first place we'll talk about connecting different V pcs together and then finally we will talk about how you will connect your V PC back to your",
    "start": "924410",
    "end": "932210"
  },
  {
    "text": "on-premise environment so I mentioned earlier that your subnets could actually",
    "start": "932210",
    "end": "937880"
  },
  {
    "text": "have different routing tables defined so you can have a subnet that is isolated",
    "start": "937880",
    "end": "943880"
  },
  {
    "text": "from being able to connect to the internet in the first place purely from a routing point of view and you might",
    "start": "943880",
    "end": "948950"
  },
  {
    "text": "ask why would I need to do that if I have security groups I have not cause I can lock down my environment but it",
    "start": "948950",
    "end": "954590"
  },
  {
    "text": "could be a couple reasons could be a compliance requirement where your application scans shouldn't be in the",
    "start": "954590",
    "end": "959840"
  },
  {
    "text": "subnet that even has a reach ability to the internet or it could be more of a belt and bracelets approach where you",
    "start": "959840",
    "end": "965060"
  },
  {
    "text": "just want to cover all the bases and make sure you're completely closing off your application so let's again have a",
    "start": "965060",
    "end": "971240"
  },
  {
    "start": "970000",
    "end": "970000"
  },
  {
    "text": "look at an example and in this example we're focusing on a single availability zone so we'll see slightly less subnets",
    "start": "971240",
    "end": "977900"
  },
  {
    "text": "then the normal think about it as a single availability zone as zoomed in view so again we have our web service so",
    "start": "977900",
    "end": "984590"
  },
  {
    "text": "these are the same web service we had earlier they need to communicate with the internet and below we have a",
    "start": "984590",
    "end": "989720"
  },
  {
    "text": "back-end service that need to be isolated all they need to communicate with are our web servers so now we can",
    "start": "989720",
    "end": "996530"
  },
  {
    "text": "put them into two different subnets and the top subnet the web server subnet will have a route to the Internet",
    "start": "996530",
    "end": "1002050"
  },
  {
    "text": "gateway so it will allow traffic to and from the Internet and the second subnet",
    "start": "1002050",
    "end": "1007420"
  },
  {
    "text": "will have no route to the Internet so there will be no reach ability of those backends purely from a routing point of",
    "start": "1007420",
    "end": "1013180"
  },
  {
    "text": "view from the outside world as well as those backends will not be able to connect to the internet and you'll",
    "start": "1013180",
    "end": "1019510"
  },
  {
    "text": "notice here that we actually have a naming convention for those type of subnets so the subnet with the routes to",
    "start": "1019510",
    "end": "1024699"
  },
  {
    "text": "the Internet is actually called the public subnet even though you can completely close it off so it might have no connectivity all together by putting",
    "start": "1024699",
    "end": "1031209"
  },
  {
    "text": "security groups around all of your instances we still call it public and then the subnet without a routing table",
    "start": "1031209",
    "end": "1037900"
  },
  {
    "text": "is the private subnet now what if you actually need the backends to be able to",
    "start": "1037900",
    "end": "1043810"
  },
  {
    "text": "connect to the Internet but you don't want anything connecting to them in the first place well let's have a look at how that would",
    "start": "1043810",
    "end": "1049480"
  },
  {
    "start": "1049000",
    "end": "1049000"
  },
  {
    "text": "be done so we shuffled the design a little bit so now we have our private",
    "start": "1049480",
    "end": "1054610"
  },
  {
    "text": "subnet on the left and public subnet on the right private subnet still doesn't",
    "start": "1054610",
    "end": "1060040"
  },
  {
    "text": "have a route to the Internet public subnets still has the route to the internet so now traditionally in your",
    "start": "1060040",
    "end": "1065950"
  },
  {
    "text": "on-premise environment you'd use something like network address translation not to map those internal devices to be able to connect to the",
    "start": "1065950",
    "end": "1072340"
  },
  {
    "text": "outside world and you can do that in any ws as well you can deploy an app gateway",
    "start": "1072340",
    "end": "1078990"
  },
  {
    "text": "which will have a public IP address associated with it then that gateway",
    "start": "1078990",
    "end": "1084010"
  },
  {
    "text": "will be deployed inside the public subnet and it'll be a target for the",
    "start": "1084010",
    "end": "1089140"
  },
  {
    "text": "route table of your private subnet so now if we zoom in on the private subnet",
    "start": "1089140",
    "end": "1094180"
  },
  {
    "text": "routing table which will be different from the default main routing table for the whole VPC you can see here that",
    "start": "1094180",
    "end": "1099910"
  },
  {
    "text": "we're sending all the traffic to the internet via are not gateway so from the traffic flow point of view imagine a",
    "start": "1099910",
    "end": "1106990"
  },
  {
    "text": "private subnet instance maybe trying to connect to to download some software updates to a young repo and the traffic",
    "start": "1106990",
    "end": "1114460"
  },
  {
    "text": "will be first forwarded to the NAP gateway the nod gateway will translate that private IP address to its own public IP address and send the traffic",
    "start": "1114460",
    "end": "1120580"
  },
  {
    "text": "on its way the nut gateway will also maintain State so remember all the connections going out so when the",
    "start": "1120580",
    "end": "1126100"
  },
  {
    "text": "traffic is coming back we'll reverse the mapping and send the traffic back to our instance so this way our private subnet",
    "start": "1126100",
    "end": "1133450"
  },
  {
    "text": "instances can communicate with the internet but nothing can still connected and from from the routing point of view",
    "start": "1133450",
    "end": "1140400"
  },
  {
    "text": "and I know I mentioned already a couple of gateways internet gateway not gateway",
    "start": "1140400",
    "end": "1145570"
  },
  {
    "text": "Steve when he talks about connecting to you on premise he's going to talk another about another gateway virtual",
    "start": "1145570",
    "end": "1151930"
  },
  {
    "text": "private gateway so you might be thinking what is it all about one of those gateways is this something I need to",
    "start": "1151930",
    "end": "1157420"
  },
  {
    "text": "manage is this a single point of failure and the answer is no there are not single points of failure these are all",
    "start": "1157420",
    "end": "1162760"
  },
  {
    "text": "AWS managed objects so we take care of high availability we take care of scalability of them so all you need to",
    "start": "1162760",
    "end": "1169360"
  },
  {
    "text": "do is just configure them in your environment and start using them effectively zero maintenance object",
    "start": "1169360",
    "end": "1176500"
  },
  {
    "text": "okay so let's go to talking about how we could connect to different V BCS together and to do that we will use V PC",
    "start": "1176500",
    "end": "1183890"
  },
  {
    "text": "peering and this will allow us to have one V PC communicate with another very similar to what we saw in the beginning",
    "start": "1183890",
    "end": "1189950"
  },
  {
    "text": "the kind of private fiber between our data centers but in this case it's V PC",
    "start": "1189950",
    "end": "1195050"
  },
  {
    "text": "peering and a very common scenario where you would actually use that is when",
    "start": "1195050",
    "end": "1200270"
  },
  {
    "start": "1197000",
    "end": "1197000"
  },
  {
    "text": "you're running a shared services V PC and the shared services V PC as a V PC that would house services that other",
    "start": "1200270",
    "end": "1206960"
  },
  {
    "text": "applications V pcs might want to consume so things like Active Directory DNS logging monitoring authentication in",
    "start": "1206960",
    "end": "1214700"
  },
  {
    "text": "might not be cost effective to have those deployed in all of your application V pcs then you can create a shared services V PC where you would",
    "start": "1214700",
    "end": "1220610"
  },
  {
    "text": "deploy those services and peer all the applications the PCs with that share services V PC now in the example here",
    "start": "1220610",
    "end": "1227450"
  },
  {
    "text": "here the V PC a is actually a shared services V PC one",
    "start": "1227450",
    "end": "1232490"
  },
  {
    "text": "important thing to note is that VC peering is one to one so it doesn't support transitive routing so just because V PCC",
    "start": "1232490",
    "end": "1239450"
  },
  {
    "text": "is paired with a and D CD is paired with a doesn't mean that the PC C and D can",
    "start": "1239450",
    "end": "1245780"
  },
  {
    "text": "communicate to each other to do that if you have the other appointments that you need C and E to communicate as well you",
    "start": "1245780",
    "end": "1251840"
  },
  {
    "text": "create another one to one parent okay so from a configuration point of view how",
    "start": "1251840",
    "end": "1256970"
  },
  {
    "text": "this would look like so again we have our application V PC on the left the 170 16 on the right hand side now we have a",
    "start": "1256970",
    "end": "1264350"
  },
  {
    "text": "shared services v bc that we need to pair with 10 5500 / 16 so there's four",
    "start": "1264350",
    "end": "1270260"
  },
  {
    "text": "steps to establish the V PC peering the first two are effectively initiating and",
    "start": "1270260",
    "end": "1276430"
  },
  {
    "text": "accepting appearing requests so a - n - a handshake and these will happen no",
    "start": "1276430",
    "end": "1281450"
  },
  {
    "text": "matter if those V pcs are in the same account or in different accounts the process is the same",
    "start": "1281450",
    "end": "1286520"
  },
  {
    "text": "once that handshake is established we have the theme PC peering ready but it's doing nothing it's just sitting there",
    "start": "1286520",
    "end": "1292010"
  },
  {
    "text": "waiting to be used so the next thing we have to do very similar to when we are configuring Internet access is actually",
    "start": "1292010",
    "end": "1298100"
  },
  {
    "start": "1295000",
    "end": "1295000"
  },
  {
    "text": "configure our routing so we need to tell each V PC about all the other V PC started pairing with so if we zoom in",
    "start": "1298100",
    "end": "1304580"
  },
  {
    "text": "into the application V PC routing table we now have an additional entry in there saying that 1055 so the IP address range",
    "start": "1304580",
    "end": "1311970"
  },
  {
    "text": "of the shared services V PC is now reachable via that peering we created",
    "start": "1311970",
    "end": "1317340"
  },
  {
    "text": "earlier and we would have to do the same exact thing on the shared services V PC to tell it about our application V PC",
    "start": "1317340",
    "end": "1324890"
  },
  {
    "text": "okay so you can probably figure out what's the last that they're actually allowed for the traffic to go through and other security groups so we need to",
    "start": "1324890",
    "end": "1332670"
  },
  {
    "start": "1330000",
    "end": "1330000"
  },
  {
    "text": "open up the security groups to tell to allow the specific traffic that we want to allow between the between the V pcs",
    "start": "1332670",
    "end": "1338880"
  },
  {
    "text": "and the good thing about the V PC peering inside the region aside a single",
    "start": "1338880",
    "end": "1344310"
  },
  {
    "text": "region is that you can refer to a security group created in another V PC typically security groups are isolated",
    "start": "1344310",
    "end": "1350760"
  },
  {
    "text": "where to a specific V PC but once you establish a DPC peering between two V pcs in the same region you can refer to",
    "start": "1350760",
    "end": "1357750"
  },
  {
    "text": "those security groups and use them in the configuration so in the example here our own security group is the group in",
    "start": "1357750",
    "end": "1364260"
  },
  {
    "text": "our application V PC blue security group is in the shared service V PC and in that shirt services the PC we can go in",
    "start": "1364260",
    "end": "1370800"
  },
  {
    "text": "go into that blue security group and configure rules saying we're allowing orange security groups okay so what if",
    "start": "1370800",
    "end": "1379320"
  },
  {
    "start": "1378000",
    "end": "1378000"
  },
  {
    "text": "you have a requirement for your V PCs to appear across different regions you can",
    "start": "1379320",
    "end": "1384450"
  },
  {
    "text": "do that as well you can establish peering between VP's there on different regions in this example here we have a V",
    "start": "1384450",
    "end": "1389940"
  },
  {
    "text": "PC in Ireland peering with a B PC in North Virginia this some things to",
    "start": "1389940",
    "end": "1395340"
  },
  {
    "text": "consider here because traffic is obviously going to be leaving the region you've defined originally right so if",
    "start": "1395340",
    "end": "1400500"
  },
  {
    "text": "it's in u.s. it's gonna have to leave us to go to Europe so there's some additional notes about this AWS will",
    "start": "1400500",
    "end": "1406680"
  },
  {
    "text": "encrypt all the traffic going over the interagency PC peering without creating a single point of failure or a",
    "start": "1406680",
    "end": "1413070"
  },
  {
    "text": "bottleneck and also ensure that the traffic will stay on our backbone so never leave the backbone okay so let's",
    "start": "1413070",
    "end": "1422280"
  },
  {
    "start": "1422000",
    "end": "1422000"
  },
  {
    "text": "have a look where we are we now created our V PC connected into the Internet",
    "start": "1422280",
    "end": "1428029"
  },
  {
    "text": "and we've now configured it to be paired with yet another V PC so Steve will now",
    "start": "1428029",
    "end": "1433580"
  },
  {
    "text": "cover how those V pcs could connect back to you on premise and he also covers some of the examples of using different",
    "start": "1433580",
    "end": "1440809"
  },
  {
    "text": "services both inside your V PC as well as outside your V PC thanks ok so the V",
    "start": "1440809",
    "end": "1447950"
  },
  {
    "text": "pcs that we've got built already we've focused very much on ec2 instances inside those V pcs communicating with",
    "start": "1447950",
    "end": "1454369"
  },
  {
    "text": "each other communicating out with the internet but the chances are you'll want to connect this environment back to a few other things so we're going to look",
    "start": "1454369",
    "end": "1460639"
  },
  {
    "text": "at those in a bit of detail so as a starting point we're going to look at VPNs Virtual Private Networks and Direct",
    "start": "1460639",
    "end": "1466879"
  },
  {
    "text": "Connect so what are these these two pieces of technology we have that we can use to connect our V pcs back to our",
    "start": "1466879",
    "end": "1472849"
  },
  {
    "text": "on-premises network well this is now a pretty familiar diagram you've seen lots of variations on this but now what we've",
    "start": "1472849",
    "end": "1478700"
  },
  {
    "text": "got on the right hand side is our on-premises network perhaps our existing data centers or some infrastructure that",
    "start": "1478700",
    "end": "1484759"
  },
  {
    "text": "already exists on your side of the connectivity that we want to establish well VPN and Direct Connect both sit",
    "start": "1484759",
    "end": "1491330"
  },
  {
    "text": "between these two environments and when it comes down to it both of them are about establishing reliable and",
    "start": "1491330",
    "end": "1496429"
  },
  {
    "text": "consistent connectivity between them but they're both very different technologies so let's take a look at the VPN side of",
    "start": "1496429",
    "end": "1503479"
  },
  {
    "start": "1501000",
    "end": "1501000"
  },
  {
    "text": "things first so from an address point of view we've still got our familiar 172 31 network on",
    "start": "1503479",
    "end": "1509089"
  },
  {
    "text": "the left-hand side in our V PC but back in our data center we're using 192 168 now if we're going to build a VPN",
    "start": "1509089",
    "end": "1515719"
  },
  {
    "text": "connection between these two we need to carry that over something so we carry that over the internet we need to",
    "start": "1515719",
    "end": "1521749"
  },
  {
    "text": "identify the two endpoints of this virtual private network connection and one of those endpoints is in your data",
    "start": "1521749",
    "end": "1527330"
  },
  {
    "text": "center within your infrastructure so we refer to this device whatever it may be a firewall or router as the customer",
    "start": "1527330",
    "end": "1534109"
  },
  {
    "text": "gateway so you define that in the AWS console we aren't quite at the point where you click create customer gateway",
    "start": "1534109",
    "end": "1539899"
  },
  {
    "text": "and it magically appears in your network but it's the software definition of what that object is we need to connect",
    "start": "1539899",
    "end": "1545359"
  },
  {
    "text": "something on the AWS side so we have another type of gateway the virtual private gateway or vgw so we now have",
    "start": "1545359",
    "end": "1551659"
  },
  {
    "text": "these two endpoints that we want to connect together over the Internet well we do at this point when we create a VPN",
    "start": "1551659",
    "end": "1558139"
  },
  {
    "text": "connection via the console of our api's we actually can - IPSec tunnels that run over the",
    "start": "1558139",
    "end": "1564419"
  },
  {
    "text": "Internet we configure - high availability they actually terminate in two different availability zones on the AWS side and",
    "start": "1564419",
    "end": "1570480"
  },
  {
    "text": "they connect back to your root of your customer gateway on the other end of the connection so at this point we do have",
    "start": "1570480",
    "end": "1576149"
  },
  {
    "text": "connectivity between our two environments but we're going over the internet which means we are subject to",
    "start": "1576149",
    "end": "1581490"
  },
  {
    "text": "kind of internet weather events if you want to call it that you know a little bit of variable latency unpredictable",
    "start": "1581490",
    "end": "1586860"
  },
  {
    "text": "performance that kind of thing but actually this is a very very common deployment and it's suitable for many",
    "start": "1586860",
    "end": "1591990"
  },
  {
    "text": "many customers now to use this connection we have to do one further thing and you've probably got the gist",
    "start": "1591990",
    "end": "1597750"
  },
  {
    "text": "now that to do anything interesting in a V PC we need to configure entries in a route table so what you see here is a",
    "start": "1597750",
    "end": "1604019"
  },
  {
    "text": "route table that's going to exist in our V PC inside 172 31 and we need to put some entries in there that say to get to",
    "start": "1604019",
    "end": "1610379"
  },
  {
    "text": "our on-premises network which is 192 168 we need to put an entry into that route table so this is what it would look like",
    "start": "1610379",
    "end": "1617159"
  },
  {
    "text": "you might have spotted this earlier we have an entry for the V GW in one of the earlier screenshots but you can see here",
    "start": "1617159",
    "end": "1622409"
  },
  {
    "text": "it's exactly the same as you've seen for the internet gateway for the peering connection simply define the remote address range specify the target of that",
    "start": "1622409",
    "end": "1629490"
  },
  {
    "text": "connectivity in this case the Virtual Private Gateway and it will send the traffic over this VPN connection now",
    "start": "1629490",
    "end": "1635879"
  },
  {
    "text": "there's a column that you might have noticed there that says propagated this is actually an option that we have where you can say anything that is received by",
    "start": "1635879",
    "end": "1642029"
  },
  {
    "text": "the Virtual Private Gateway automatically create routes for it in the route table so you can choose whether to turn that on or off for your",
    "start": "1642029",
    "end": "1648750"
  },
  {
    "text": "using dynamic routing protocol so using BGP in this case you would turn that on it would automatically appear for you so",
    "start": "1648750",
    "end": "1654419"
  },
  {
    "text": "if you add other VPN connections the route tables update to match so what",
    "start": "1654419",
    "end": "1659669"
  },
  {
    "start": "1659000",
    "end": "1659000"
  },
  {
    "text": "about Direct Connect to more specifically direct connect gateway so Direct Connect is a reliable and",
    "start": "1659669",
    "end": "1665340"
  },
  {
    "text": "consistent connection that goes directly into the AWS network from your infrastructure so wondering for this is",
    "start": "1665340",
    "end": "1672240"
  },
  {
    "text": "actually our Direct Connect locations which we have many around the world and the other end of it via perhaps a carrier or one of our Direct Connect",
    "start": "1672240",
    "end": "1678539"
  },
  {
    "text": "partners terminates in your network there's still a device on your side a Rooter that you would need to deploy and",
    "start": "1678539",
    "end": "1683909"
  },
  {
    "text": "configure but you then connect into that Direct Connect location using fiber so these are typically one gig or 10 gig",
    "start": "1683909",
    "end": "1689879"
  },
  {
    "text": "connections there are smaller bandwidth available via some of our partners but we're going to stick with the dedicate",
    "start": "1689879",
    "end": "1695520"
  },
  {
    "text": "poor 1l 10-gig that connection goes into the direct connect location and then on to the AWS backbone network and from",
    "start": "1695520",
    "end": "1702150"
  },
  {
    "text": "there we need to connect to our V PC we use something called a private virtual interface which then connects into the",
    "start": "1702150",
    "end": "1708420"
  },
  {
    "text": "direct connect gateway now these are just objects that you define in the console they define things like the VLAN the BGP details and now you can reach",
    "start": "1708420",
    "end": "1715230"
  },
  {
    "text": "the direct connect gateway on the other side of the direct connect gateway we have our V PC so what if we want to",
    "start": "1715230",
    "end": "1721980"
  },
  {
    "text": "connect to multiple V pcs now our V PC from earlier it was on that particular address range it was in one particular",
    "start": "1721980",
    "end": "1728340"
  },
  {
    "text": "region what the direct connect gateway does is it separates the region's from each other and from your connection so",
    "start": "1728340",
    "end": "1734850"
  },
  {
    "text": "it sits in the middle and then links them all together for you so in the example here we've got our direct connect gateway we've still got our",
    "start": "1734850",
    "end": "1740640"
  },
  {
    "text": "single one gig Direct Connect via London but now we're connecting to EU s1 which is in Ireland and we're connecting to a",
    "start": "1740640",
    "end": "1747510"
  },
  {
    "text": "V PC that is in EU central one so these are two different AWS regions independent of V pcs that you can reach",
    "start": "1747510",
    "end": "1754080"
  },
  {
    "text": "both of them now via that single connection in London obviously we would",
    "start": "1754080",
    "end": "1759420"
  },
  {
    "text": "recommend that you have some resilience in this solution and actually it's very common for customers to have multiple",
    "start": "1759420",
    "end": "1764820"
  },
  {
    "text": "data centers or multiple locations on their side of the infrastructure and in which case you absolutely should be",
    "start": "1764820",
    "end": "1769830"
  },
  {
    "text": "establishing multiple connections so you can bring these connections via two different Direct Connect locations so",
    "start": "1769830",
    "end": "1775080"
  },
  {
    "text": "the example I'm using here is that you have some of your infrastructure perhaps in Frankfurt connecting via one",
    "start": "1775080",
    "end": "1780450"
  },
  {
    "text": "of our Direct Connect locations there and another one in London connecting via the original location we were using so",
    "start": "1780450",
    "end": "1786570"
  },
  {
    "text": "we now have resilient connectivity from your network into the direct connect gateway infrastructure the direct",
    "start": "1786570",
    "end": "1791670"
  },
  {
    "text": "connect gateway infrastructure then connects to your V pcs so now we have resilient and diverse connectivity into",
    "start": "1791670",
    "end": "1797790"
  },
  {
    "text": "two different regions and from your on-premises Network you can reach both of the V pcs that you created so in",
    "start": "1797790",
    "end": "1804750"
  },
  {
    "text": "terms of the traffic flow that is allowed within this set up traffic can flow from your network to AWS and vice",
    "start": "1804750",
    "end": "1811410"
  },
  {
    "start": "1806000",
    "end": "1806000"
  },
  {
    "text": "versa what is not possible using Direct Connect gateway is using it to route between your two locations or using it",
    "start": "1811410",
    "end": "1818820"
  },
  {
    "text": "to route between two V pcs but why would you want to route between two V pcs we've already talked about V PC peering",
    "start": "1818820",
    "end": "1824490"
  },
  {
    "text": "that's what you would use to establish that connection so these are the traffic flows that you can't do with at connect gateway so both VPN and",
    "start": "1824490",
    "end": "1833669"
  },
  {
    "start": "1832000",
    "end": "1832000"
  },
  {
    "text": "Direct Connect give you connectivity into your V PC deployed correctly you have resilient connectivity diverse",
    "start": "1833669",
    "end": "1839820"
  },
  {
    "text": "connectivity remember those two VPN tunnels that we have it's a pair of them we recommend you use both of them for",
    "start": "1839820",
    "end": "1845760"
  },
  {
    "text": "that high availability and on the direct connect side multiple connections configured for failover or load balancing as you need to when you use",
    "start": "1845760",
    "end": "1853049"
  },
  {
    "text": "Direct Connect because you're bringing your traffic directly into the AWS Network any traffic leaving AWS we",
    "start": "1853049",
    "end": "1858240"
  },
  {
    "text": "actually charge you at a reduced rate you're not going over the internet you're going over this dedicated pipe into your network so you benefit from a",
    "start": "1858240",
    "end": "1864150"
  },
  {
    "text": "reduced rate of data transfer and actually if you can only deploy perhaps one direct connect connection which",
    "start": "1864150",
    "end": "1870150"
  },
  {
    "text": "would be you know kind of against best practice you absolutely must have a backup so just always consider deploying both put a Direct Connect in place put a",
    "start": "1870150",
    "end": "1877770"
  },
  {
    "text": "VPN as a backup and we give you the the tools to be able to them failover between those as long as you configure",
    "start": "1877770",
    "end": "1882929"
  },
  {
    "text": "both your side and outside appropriately so if we go back to our architecture",
    "start": "1882929",
    "end": "1888540"
  },
  {
    "text": "that we were looking at at the very beginning here we actually have pretty much all of the components we've talked about now we have our two V pcs they're",
    "start": "1888540",
    "end": "1894840"
  },
  {
    "text": "communicating with each other we have our one connectivity using AWS direct connect to the top of the diagram we",
    "start": "1894840",
    "end": "1900750"
  },
  {
    "text": "have internet connectivity at the bottom so we've actually built all of the components we talked about connecting two sets of infrastructure together what",
    "start": "1900750",
    "end": "1908610"
  },
  {
    "text": "we haven't looked at though are some of the other AWS services so at the moment we focused very much on ec2 virtual",
    "start": "1908610",
    "end": "1914730"
  },
  {
    "text": "machines running inside your V PC but as I'm sure you're aware we have a whole bunch of other services some of those",
    "start": "1914730",
    "end": "1920610"
  },
  {
    "text": "services when you launch them run inside your V PC an example would be RDS or relational database service or perhaps",
    "start": "1920610",
    "end": "1926940"
  },
  {
    "text": "an elastic load balancing environment other services exist outside your V PC so things like s3 DynamoDB sqs so",
    "start": "1926940",
    "end": "1935880"
  },
  {
    "text": "there's two sets of services here that we need to look at and consider how do we connect to them from our V PC infrastructure so let's start by briefly",
    "start": "1935880",
    "end": "1944280"
  },
  {
    "text": "looking at the ones that exist inside our V PC and RDS is the example we're going to use here so when you launch an",
    "start": "1944280",
    "end": "1951000"
  },
  {
    "text": "RDS instance it appears inside your V PC and it has an IP address and a DNS name the resolves inside your V PC your ec2",
    "start": "1951000",
    "end": "1959280"
  },
  {
    "text": "instances can talk directly to it there's no need to have an Internet gateway of any kind you can just reach that RDS",
    "start": "1959280",
    "end": "1964610"
  },
  {
    "text": "instance you can do things like define a security group and use that to then",
    "start": "1964610",
    "end": "1969860"
  },
  {
    "text": "control access to the RDS instance these are all the the common constructs that we've talked about so far",
    "start": "1969860",
    "end": "1975020"
  },
  {
    "text": "you can do things like take RDS and now make it multi a Z so we can run two sets",
    "start": "1975020",
    "end": "1980270"
  },
  {
    "text": "of the RDS instances across different availability zones for you and you can connect to them all within that VPC",
    "start": "1980270",
    "end": "1985850"
  },
  {
    "text": "environment the other example an application load balancer part of the",
    "start": "1985850",
    "end": "1990860"
  },
  {
    "start": "1988000",
    "end": "1988000"
  },
  {
    "text": "elastic load balancing family so in this case we want to create an application load balancer and spread our traffic",
    "start": "1990860",
    "end": "1996530"
  },
  {
    "text": "across multiple ec2 instances again the load balancer has IP addresses that are",
    "start": "1996530",
    "end": "2001720"
  },
  {
    "text": "within your V PC so when traffic comes into the load balancer environment whether that's an internal load balancer",
    "start": "2001720",
    "end": "2006970"
  },
  {
    "text": "or an internet facing one it is then load balanced across the instances in the different AZ's so these are services",
    "start": "2006970",
    "end": "2013360"
  },
  {
    "text": "that exist inside our V PC what about services that are outside the V PC well",
    "start": "2013360",
    "end": "2019470"
  },
  {
    "text": "this is where we have something called V PC endpoints for AWS services so it's",
    "start": "2019470",
    "end": "2025060"
  },
  {
    "text": "dive into a little bit more detail on how this works so let's take an s3 bucket so a simple storage service",
    "start": "2025060",
    "end": "2030550"
  },
  {
    "text": "you've put some data into an s3 bucket if you wanted to access that from an ec2 instance what you do is say I have my",
    "start": "2030550",
    "end": "2037060"
  },
  {
    "text": "application here I need to reach out to it where is s3 well s3 you would normally access over the internet it has",
    "start": "2037060",
    "end": "2042460"
  },
  {
    "text": "public IP addresses so that's fine our date is over here let's create an Internet gateway and use that to reach",
    "start": "2042460",
    "end": "2049060"
  },
  {
    "text": "out so this is now the connectivity path we reach out over the Internet gateway we reach into s3 retrieve whatever data",
    "start": "2049060",
    "end": "2055929"
  },
  {
    "text": "we need and bring it back to our ec2 instance but actually what if you don't want to have an Internet gateway on this",
    "start": "2055929",
    "end": "2061690"
  },
  {
    "text": "particular V PC so this is where V PC endpoints comes in now we have two",
    "start": "2061690",
    "end": "2067389"
  },
  {
    "start": "2063000",
    "end": "2063000"
  },
  {
    "text": "different types of V PC endpoints and the first one I'm going to talk about our gateway endpoints so when you look",
    "start": "2067390",
    "end": "2072879"
  },
  {
    "text": "in the console you see this list of different endpoints and it's continually growing these are the two that are currently there for gateway endpoints so",
    "start": "2072880",
    "end": "2078879"
  },
  {
    "text": "we have s 3 and we have DynamoDB so what we're going to do is replace our internet gateway now with a V PC",
    "start": "2078880",
    "end": "2085389"
  },
  {
    "start": "2083000",
    "end": "2083000"
  },
  {
    "text": "endpoint well V PC endpoints are are a way of reaching out to s3 without going out via the internet gateway but it also",
    "start": "2085390",
    "end": "2092169"
  },
  {
    "text": "gives you a couple of other benefits here now when you create that VPC endpoint we need to tell your V PC how to get to the",
    "start": "2092169",
    "end": "2098690"
  },
  {
    "text": "IP addresses of where it knows s3 is so we need to create an entry in the route table now rather than you putting all of",
    "start": "2098690",
    "end": "2105019"
  },
  {
    "text": "the different IP addresses in for s3 which actually change we will actually create an entry in there for what's",
    "start": "2105019",
    "end": "2110569"
  },
  {
    "text": "called a prefix list which is something we maintain in the background that updates and keeps track of all the IP",
    "start": "2110569",
    "end": "2115910"
  },
  {
    "text": "addresses used for s3 that prefix list then says if I have any traffic that is going to s3 I'm trying to reach out to",
    "start": "2115910",
    "end": "2122779"
  },
  {
    "text": "get that data back to my ec2 instance then go via the VPC endpoint that's the target of this route we also have a",
    "start": "2122779",
    "end": "2131660"
  },
  {
    "start": "2131000",
    "end": "2131000"
  },
  {
    "text": "little bit more control over this traffic we can use iam policies Identity and Access Management to control what",
    "start": "2131660",
    "end": "2137150"
  },
  {
    "text": "happens in terms of where I can reach using this VPC endpoint so if we look at the VPN point itself and create a policy",
    "start": "2137150",
    "end": "2144109"
  },
  {
    "text": "there we can say I have the following s3 bucket that is where my data is and that is the only thing on s3 that I should be",
    "start": "2144109",
    "end": "2150319"
  },
  {
    "text": "able to reach from within this VPC we can also go one step further and deploy a policy on the s3 bucket itself and the",
    "start": "2150319",
    "end": "2157190"
  },
  {
    "text": "s3 bucket policy can say I will only allow connectivity into this bucket to retrieve data if it came via that VPC",
    "start": "2157190",
    "end": "2164059"
  },
  {
    "text": "endpoint so even though s3 is reachable over the Internet and if you authorize the access in you could potentially then",
    "start": "2164059",
    "end": "2170299"
  },
  {
    "text": "access that data over the Internet this policy would only allow it via the VPC endpoint and the same model applies for",
    "start": "2170299",
    "end": "2176960"
  },
  {
    "text": "dynamodb so these are things that you can do with gateway endpoints the other",
    "start": "2176960",
    "end": "2182059"
  },
  {
    "start": "2181000",
    "end": "2181000"
  },
  {
    "text": "type of VPN points we have our interface endpoints and these behave a little bit differently so here are some of the",
    "start": "2182059",
    "end": "2187849"
  },
  {
    "text": "examples that are currently available when you create a VPC endpoint that is an interface endpoint something a bit",
    "start": "2187849",
    "end": "2193700"
  },
  {
    "start": "2192000",
    "end": "2192000"
  },
  {
    "text": "different happens so the example I'm gonna use here are the ec2 API so perhaps you're calling some of our API",
    "start": "2193700",
    "end": "2199039"
  },
  {
    "text": "is from your ec2 instances and again you don't want to have an Internet gateway so in this case you create the VPC",
    "start": "2199039",
    "end": "2205670"
  },
  {
    "text": "endpoint it exists in your V PC again but this time what actually happens is",
    "start": "2205670",
    "end": "2210739"
  },
  {
    "text": "you get some elastic network interfaces created within your V PC more specifically one per subnet now they",
    "start": "2210739",
    "end": "2218779"
  },
  {
    "text": "have IP addresses that are inside your V PC so obviously your ec2 instances can then reach them what happens is you make",
    "start": "2218779",
    "end": "2225589"
  },
  {
    "text": "a request to one of those elastic Network interfaces on an IP address that's inside the V PC it then gets sent via",
    "start": "2225589",
    "end": "2232040"
  },
  {
    "text": "the interface end point out to in this case the ec2 API why do we create multiples of these elastic network",
    "start": "2232040",
    "end": "2238609"
  },
  {
    "text": "interfaces obviously for high availability so you can call any of these and we will then connect it out to the ec2 api's for you",
    "start": "2238609",
    "end": "2244880"
  },
  {
    "text": "again there are no internet gateways in this infrastructure here now what about DNS for these endpoints",
    "start": "2244880",
    "end": "2253220"
  },
  {
    "text": "if you've used things like the AWS CLI you're used to saying AWS ec2 describe instances in there you didn't specify",
    "start": "2253220",
    "end": "2259280"
  },
  {
    "text": "the end point you were connecting to we automatically look up the fact that it's ec2 or EU West wonder Amazon AWS calm",
    "start": "2259280",
    "end": "2266240"
  },
  {
    "text": "but inside your V PC we now have these two endpoints on IP addresses that are yours in your V PC and that's where we",
    "start": "2266240",
    "end": "2272329"
  },
  {
    "text": "need to send the traffic now we create some do centuries for you as you can see they don't quite match the name that",
    "start": "2272329",
    "end": "2277970"
  },
  {
    "text": "we're expecting for the API endpoint so in your code or when you're using the CLI you can then specify the endpoint to",
    "start": "2277970",
    "end": "2284780"
  },
  {
    "text": "use so that's one option but the other option is actually that we will create a special DNS entry for you that only",
    "start": "2284780",
    "end": "2291530"
  },
  {
    "text": "resolves inside your V PC that resolves to these particular endpoints so",
    "start": "2291530",
    "end": "2296839"
  },
  {
    "text": "basically you can now find the ec2 API is exactly where you expect them to be in terms of DNS now these interface",
    "start": "2296839",
    "end": "2304609"
  },
  {
    "text": "endpoints actually use something called private link now private link is the technology behind this and actually it's",
    "start": "2304609",
    "end": "2310040"
  },
  {
    "text": "available for more than just AWS services so you can actually create your own end points from other V pcs put them",
    "start": "2310040",
    "end": "2316520"
  },
  {
    "text": "behind a network load balancer and then offer an interface endpoint private link to another VP C and it could be one of",
    "start": "2316520",
    "end": "2322760"
  },
  {
    "text": "your VP C's or someone else's all of this without creating an Internet gateway so this is a nice scalable way",
    "start": "2322760",
    "end": "2328460"
  },
  {
    "text": "of presenting various services from one of your VP C's without using V PC peering if it will work nicely via",
    "start": "2328460",
    "end": "2334310"
  },
  {
    "text": "network globe answer and run on your ec2 instances in this shared services V PC perhaps equally some of our partners",
    "start": "2334310",
    "end": "2340730"
  },
  {
    "text": "have offerings which they're presenting via private link interface endpoints so you can see some examples on the screen",
    "start": "2340730",
    "end": "2345950"
  },
  {
    "text": "here and one of the ways that these can be launched is actually just via the marketplace so this will create the",
    "start": "2345950",
    "end": "2351290"
  },
  {
    "text": "endpoints for you now we have all of this traffic flowing inside our V PC it would be nice to get",
    "start": "2351290",
    "end": "2357710"
  },
  {
    "text": "a bit of visibility of actually what's happening in this V PC and this is where V PC floo logs fits in so VPC flow logs",
    "start": "2357710",
    "end": "2364340"
  },
  {
    "text": "allows you to capture metadata about the traffic that's flowing it's not a packet capture it's the metadata so what do I",
    "start": "2364340",
    "end": "2370430"
  },
  {
    "text": "mean by that well first of all we need to turn it on how do we do that well we need to go to our V PC and decide at",
    "start": "2370430",
    "end": "2376820"
  },
  {
    "text": "which points do we want to take this traffic and put it into some logs now it's incredibly useful for doing",
    "start": "2376820",
    "end": "2382310"
  },
  {
    "text": "things like troubleshooting at which point you might want to enable flow logs for a very specific network interface but equally you might just do it for",
    "start": "2382310",
    "end": "2389120"
  },
  {
    "text": "doing some analysis of your traffic and some reporting in which case you would probably choose to record it for the",
    "start": "2389120",
    "end": "2394160"
  },
  {
    "text": "whole of the V PC what does that look like this is what the AWS console looks like you would actually go in here and",
    "start": "2394160",
    "end": "2400370"
  },
  {
    "start": "2396000",
    "end": "2396000"
  },
  {
    "text": "choose where to enable V PC flow logging so in this case we've turned it on for the whole of the V PC and we're choosing",
    "start": "2400370",
    "end": "2406970"
  },
  {
    "text": "to send this to file watch logs now in cloud watch logs if we go and look at that what we actually see it's a whole",
    "start": "2406970",
    "end": "2413870"
  },
  {
    "start": "2413000",
    "end": "2413000"
  },
  {
    "text": "load of data about every traffic flow that is happening inside your V PC now if you're choosing to capture everything",
    "start": "2413870",
    "end": "2419810"
  },
  {
    "text": "that's going in your V PC you're probably going to need something to analyze this but I just pulled out a particular example here so this is an",
    "start": "2419810",
    "end": "2426110"
  },
  {
    "text": "entry that was rejected now it's recorded it's been rejected and it will have been a security group or a",
    "start": "2426110",
    "end": "2431240"
  },
  {
    "text": "network ACL that has rejected it so if we want to understand a little bit more about this is there something that we should have actually opened up in a",
    "start": "2431240",
    "end": "2437240"
  },
  {
    "text": "security group perhaps well if we look in a bit more detail it was rejected and it was on port 2 701 5 now I don't know",
    "start": "2437240",
    "end": "2443930"
  },
  {
    "text": "about you but I have no idea what that port is and it's probably not something I wanted open in my V PC anyway so it's",
    "start": "2443930",
    "end": "2449750"
  },
  {
    "text": "been correctly rejected that's exactly the right behavior and if I want you to then dig into that I can obviously take the rest of the details from that flow",
    "start": "2449750",
    "end": "2456290"
  },
  {
    "text": "log sentry and go and look at who was that who was perhaps probing my network is it a service that perhaps I should",
    "start": "2456290",
    "end": "2462110"
  },
  {
    "text": "have been running and I forgot to open so flow logs is very useful all of those contexts so let's just take a step back",
    "start": "2462110",
    "end": "2470810"
  },
  {
    "start": "2468000",
    "end": "2468000"
  },
  {
    "text": "for a moment and look at our overall V PC one more time from a slightly different perspective we have our ec2",
    "start": "2470810",
    "end": "2475850"
  },
  {
    "text": "instances running inside our V PC they are running inside different subnets which exist in different availability",
    "start": "2475850",
    "end": "2481850"
  },
  {
    "text": "zones we have security groups to authorize traffic flow within our V PC",
    "start": "2481850",
    "end": "2487670"
  },
  {
    "start": "2483000",
    "end": "2483000"
  },
  {
    "text": "and to allow access into those instances perhaps from the internet or over those VPN and Direct Connect connections",
    "start": "2487670",
    "end": "2494300"
  },
  {
    "text": "we can access services inside our VP see those RDS instances that I talked about",
    "start": "2494300",
    "end": "2499390"
  },
  {
    "text": "we can monitor that traffic we can create entries in VP see flow logs and store them in cloud watch logs so we're",
    "start": "2499390",
    "end": "2505670"
  },
  {
    "text": "getting good visibility of now what's going on in our VP see we can connect to both the internet and to our on-premises",
    "start": "2505670",
    "end": "2513830"
  },
  {
    "start": "2508000",
    "end": "2508000"
  },
  {
    "text": "network so we have Internet gateway and we have the virtual private gateway we",
    "start": "2513830",
    "end": "2519140"
  },
  {
    "text": "also then have other VP CSV PC peering both within a region across regions between accounts in the same account and",
    "start": "2519140",
    "end": "2526490"
  },
  {
    "text": "we have our VP CM points for reaching things like s3 so with all of those tools you now have plenty of options to",
    "start": "2526490",
    "end": "2532700"
  },
  {
    "text": "connect to everything you would want to within your VP C or completely isolate it so anywhere on that scale now I just",
    "start": "2532700",
    "end": "2539720"
  },
  {
    "text": "wanted to take one moment to talk about some changes that have happened across our ec2 instances so over the years",
    "start": "2539720",
    "end": "2545090"
  },
  {
    "text": "these represent here are different easy to instance types within the compute family so we have c1 at the beginning",
    "start": "2545090",
    "end": "2551180"
  },
  {
    "text": "here this supported a network throughput of one gigabit per second you can see that as we've iterated right the way up",
    "start": "2551180",
    "end": "2556700"
  },
  {
    "text": "to the most recent instance type at c5 we now have the elastic network adapter with the c5 instances we support 25",
    "start": "2556700",
    "end": "2563870"
  },
  {
    "text": "gigabits per second on those instance types so you know you can see that the growth and the range of performance that",
    "start": "2563870",
    "end": "2569480"
  },
  {
    "text": "has it's changed over time within our ec2 instances in terms of instance",
    "start": "2569480",
    "end": "2575420"
  },
  {
    "start": "2574000",
    "end": "2574000"
  },
  {
    "text": "bandwidth limits I wanted to clarify some things here so first of all 25 gig",
    "start": "2575420",
    "end": "2580550"
  },
  {
    "text": "that number we talked about on those c5 instances that's the amount of bandwidth you can have between ec2 instances in",
    "start": "2580550",
    "end": "2586310"
  },
  {
    "text": "the same placement group but actually we went a little bit further than that towards the end of last year as long as",
    "start": "2586310",
    "end": "2592280"
  },
  {
    "text": "the instance types now supports 25 gig you can actually get that within the region between any of your ec2 instances",
    "start": "2592280",
    "end": "2598540"
  },
  {
    "text": "if you're reaching out to s3 using say those V PC endpoints we talked about",
    "start": "2598540",
    "end": "2603590"
  },
  {
    "text": "again as long as the instance type supports 25 gig you get that full bandwidth to s3 and then finally for any",
    "start": "2603590",
    "end": "2610340"
  },
  {
    "text": "traffic that is actually leaving your V PC out to the internet or via the internet gateway or via the virtual",
    "start": "2610340",
    "end": "2615620"
  },
  {
    "text": "private gateway at that point the bandwidth limit is five gigabits per second so there's a little bit more",
    "start": "2615620",
    "end": "2620840"
  },
  {
    "text": "detail there on on our bandwidth limits within V PC now just as we're running out of time it",
    "start": "2620840",
    "end": "2627059"
  },
  {
    "start": "2625000",
    "end": "2625000"
  },
  {
    "text": "feels like we should talk about the time sink service so this is something that we launched towards the end of last year",
    "start": "2627059",
    "end": "2632099"
  },
  {
    "text": "it is an NTP service that is available to your ec2 instances so you don't need to reach out to the internet to get a",
    "start": "2632099",
    "end": "2638010"
  },
  {
    "text": "time sink anymore and you don't have to run your own time sink service this actually exists on an IP address which",
    "start": "2638010",
    "end": "2643710"
  },
  {
    "text": "is only reachable from your ec2 instance it's not even an IP address within the range of your V PC it's a 169 2 5 4",
    "start": "2643710",
    "end": "2650099"
  },
  {
    "text": "address some of you might be familiar with the metadata service that exists on a similar address well in this case one",
    "start": "2650099",
    "end": "2655589"
  },
  {
    "text": "six nine two five four one six nine one two three the talking clock the NTP port quite easy to remember you can reach the",
    "start": "2655589",
    "end": "2661980"
  },
  {
    "text": "NTP source from AWS on that IP address from any of your ec2 instances so with",
    "start": "2661980",
    "end": "2668130"
  },
  {
    "text": "that I'd like to say thank you very much on behalf of myself and Tom and we're going to be at the ada rios village on the upper level for about the next 15 or",
    "start": "2668130",
    "end": "2674040"
  },
  {
    "text": "20 minutes if you've got any questions but thanks very much for coming to the session [Applause]",
    "start": "2674040",
    "end": "2681589"
  }
]