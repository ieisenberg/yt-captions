[
  {
    "text": "hello and welcome back I'm vinit with",
    "start": "4880",
    "end": "7920"
  },
  {
    "text": "AWS in my previous video I walk you",
    "start": "7920",
    "end": "11080"
  },
  {
    "text": "through how to set up the AWS amplifier",
    "start": "11080",
    "end": "13599"
  },
  {
    "text": "resource for face",
    "start": "13599",
    "end": "15840"
  },
  {
    "text": "liveness in this video I'm going to walk",
    "start": "15840",
    "end": "18680"
  },
  {
    "text": "you through how we can create the Amazon",
    "start": "18680",
    "end": "21119"
  },
  {
    "text": "recognition face less back end using the",
    "start": "21119",
    "end": "23560"
  },
  {
    "text": "Amazon recognition face liveness",
    "start": "23560",
    "end": "26519"
  },
  {
    "text": "AP to use the Amazon recognition face",
    "start": "26519",
    "end": "29560"
  },
  {
    "text": "liveness API we must create a back end",
    "start": "29560",
    "end": "32200"
  },
  {
    "text": "that carries out the following steps",
    "start": "32200",
    "end": "34360"
  },
  {
    "text": "first call create face liveness session",
    "start": "34360",
    "end": "37360"
  },
  {
    "text": "to initiate a phas liveness",
    "start": "37360",
    "end": "39680"
  },
  {
    "text": "session when the create phas liveness",
    "start": "39680",
    "end": "41960"
  },
  {
    "text": "session API operation is completed and",
    "start": "41960",
    "end": "44600"
  },
  {
    "text": "return the session ID after that the UI",
    "start": "44600",
    "end": "47399"
  },
  {
    "text": "prompt the user to submit a video",
    "start": "47399",
    "end": "50360"
  },
  {
    "text": "selfie the AWS amplifies face liveness",
    "start": "50360",
    "end": "53520"
  },
  {
    "text": "detector component then call start pH pH",
    "start": "53520",
    "end": "56800"
  },
  {
    "text": "liveness session to perform liveness",
    "start": "56800",
    "end": "58960"
  },
  {
    "text": "detection",
    "start": "58960",
    "end": "61480"
  },
  {
    "text": "second call get face livess session",
    "start": "61480",
    "end": "64320"
  },
  {
    "text": "results to return the detection result",
    "start": "64320",
    "end": "67240"
  },
  {
    "text": "associated with the face liveness",
    "start": "67240",
    "end": "70600"
  },
  {
    "text": "session let's first create the back end",
    "start": "70600",
    "end": "73080"
  },
  {
    "text": "for create pH liveness",
    "start": "73080",
    "end": "75520"
  },
  {
    "text": "session create pH livess session AP",
    "start": "75520",
    "end": "78280"
  },
  {
    "text": "operation create a face liveness session",
    "start": "78280",
    "end": "80759"
  },
  {
    "text": "and return a unique session",
    "start": "80759",
    "end": "82960"
  },
  {
    "text": "ID so here is my python",
    "start": "82960",
    "end": "86119"
  },
  {
    "text": "code I'm using the boto 3 boto 3",
    "start": "86119",
    "end": "90240"
  },
  {
    "text": "provides a python API for AWS",
    "start": "90240",
    "end": "92560"
  },
  {
    "text": "infrastructure",
    "start": "92560",
    "end": "94040"
  },
  {
    "text": "Services we first get the recognition",
    "start": "94040",
    "end": "97399"
  },
  {
    "text": "client and then we call the create phas",
    "start": "97399",
    "end": "100479"
  },
  {
    "text": "livess session operation and in response",
    "start": "100479",
    "end": "103399"
  },
  {
    "text": "it return the session",
    "start": "103399",
    "end": "106560"
  },
  {
    "text": "ID as part of the input for this",
    "start": "106600",
    "end": "109200"
  },
  {
    "text": "operation it is also possible to specify",
    "start": "109200",
    "end": "112360"
  },
  {
    "text": "an Amazon S3 bucket location this allow",
    "start": "112360",
    "end": "115759"
  },
  {
    "text": "the storage of a reference image and",
    "start": "115759",
    "end": "118439"
  },
  {
    "text": "audit image generated during the pH less",
    "start": "118439",
    "end": "122600"
  },
  {
    "text": "session the Amazon S3 bucket must be",
    "start": "122600",
    "end": "125439"
  },
  {
    "text": "located in the caller AWS account and",
    "start": "125439",
    "end": "127920"
  },
  {
    "text": "will be in the same region as the face",
    "start": "127920",
    "end": "129800"
  },
  {
    "text": "liveness end",
    "start": "129800",
    "end": "131920"
  },
  {
    "text": "point Additionally the S3 object keys",
    "start": "131920",
    "end": "134720"
  },
  {
    "text": "are generated by the face",
    "start": "134720",
    "end": "137720"
  },
  {
    "text": "livess we can also pass another setting",
    "start": "137720",
    "end": "140760"
  },
  {
    "text": "called audit image limit which is a",
    "start": "140760",
    "end": "142959"
  },
  {
    "text": "number between Z and",
    "start": "142959",
    "end": "145400"
  },
  {
    "text": "4 now let's check the request and",
    "start": "145400",
    "end": "148040"
  },
  {
    "text": "response in the developer guide",
    "start": "148040",
    "end": "151840"
  },
  {
    "text": "so for this create pH liveness session I",
    "start": "152360",
    "end": "155400"
  },
  {
    "text": "have this sample request in that we can",
    "start": "155400",
    "end": "158120"
  },
  {
    "text": "pass the S3 bucket as well as S3 bucket",
    "start": "158120",
    "end": "160760"
  },
  {
    "text": "prefix and audit",
    "start": "160760",
    "end": "163000"
  },
  {
    "text": "image and that audit image limit as I",
    "start": "163000",
    "end": "165959"
  },
  {
    "text": "say can be between 0 and",
    "start": "165959",
    "end": "168519"
  },
  {
    "text": "4 and in response we get the session",
    "start": "168519",
    "end": "173920"
  },
  {
    "text": "ID now let's create the back end for get",
    "start": "174360",
    "end": "177840"
  },
  {
    "text": "pH liveness session result",
    "start": "177840",
    "end": "181840"
  },
  {
    "text": "the get pH less session result API",
    "start": "182400",
    "end": "184959"
  },
  {
    "text": "operation retrieves the result of a",
    "start": "184959",
    "end": "187480"
  },
  {
    "text": "specific pH livess session it required",
    "start": "187480",
    "end": "190640"
  },
  {
    "text": "the session IDs input and return the",
    "start": "190640",
    "end": "193080"
  },
  {
    "text": "corresponding phas liveness confidence",
    "start": "193080",
    "end": "195720"
  },
  {
    "text": "scode it also provide a reference image",
    "start": "195720",
    "end": "199000"
  },
  {
    "text": "that's also includes a phas bounding box",
    "start": "199000",
    "end": "201680"
  },
  {
    "text": "and audit image that also contains phase",
    "start": "201680",
    "end": "204440"
  },
  {
    "text": "bounding",
    "start": "204440",
    "end": "205680"
  },
  {
    "text": "box the phas liveness confidence score",
    "start": "205680",
    "end": "208360"
  },
  {
    "text": "can range from 0 to 100",
    "start": "208360",
    "end": "211760"
  },
  {
    "text": "so here is my python code again I'm",
    "start": "211920",
    "end": "214799"
  },
  {
    "text": "using boto 3 that's provide a python API",
    "start": "214799",
    "end": "217439"
  },
  {
    "text": "for AWS infrastructure services so we",
    "start": "217439",
    "end": "220680"
  },
  {
    "text": "first get the recognition client and",
    "start": "220680",
    "end": "223519"
  },
  {
    "text": "then we call the get pH livess session",
    "start": "223519",
    "end": "225680"
  },
  {
    "text": "result and we pass the SN IDs",
    "start": "225680",
    "end": "228720"
  },
  {
    "text": "input after that we get the response and",
    "start": "228720",
    "end": "231799"
  },
  {
    "text": "as part of the response we also get the",
    "start": "231799",
    "end": "233519"
  },
  {
    "text": "confidence score as well as",
    "start": "233519",
    "end": "235799"
  },
  {
    "text": "status now let's check the request and",
    "start": "235799",
    "end": "238319"
  },
  {
    "text": "response in the developer",
    "start": "238319",
    "end": "241400"
  },
  {
    "text": "guide so here we pass the session ID in",
    "start": "241400",
    "end": "244439"
  },
  {
    "text": "the request and in the response we get",
    "start": "244439",
    "end": "246959"
  },
  {
    "text": "the session ID confidence score as well",
    "start": "246959",
    "end": "250040"
  },
  {
    "text": "as reference image and the bounding box",
    "start": "250040",
    "end": "253400"
  },
  {
    "text": "we also get the audit image if we pass",
    "start": "253400",
    "end": "255879"
  },
  {
    "text": "the audit image limit as part of the",
    "start": "255879",
    "end": "258079"
  },
  {
    "text": "first API call called create face",
    "start": "258079",
    "end": "259759"
  },
  {
    "text": "liveness session this audit image",
    "start": "259759",
    "end": "262240"
  },
  {
    "text": "basically returns in best effort and",
    "start": "262240",
    "end": "264560"
  },
  {
    "text": "based on the duration of the selfie",
    "start": "264560",
    "end": "266280"
  },
  {
    "text": "video",
    "start": "266280",
    "end": "269280"
  },
  {
    "text": "in this video I walk you through how we",
    "start": "273120",
    "end": "275560"
  },
  {
    "text": "can create the Amazon recognition face",
    "start": "275560",
    "end": "277880"
  },
  {
    "text": "liveness backend and what is the request",
    "start": "277880",
    "end": "280199"
  },
  {
    "text": "and response for the API operation for",
    "start": "280199",
    "end": "283199"
  },
  {
    "text": "more details we can check the developer",
    "start": "283199",
    "end": "286240"
  },
  {
    "text": "guide in my next video I will walk you",
    "start": "286240",
    "end": "289320"
  },
  {
    "text": "through how we can configure and",
    "start": "289320",
    "end": "291120"
  },
  {
    "text": "customize our react app and integrate",
    "start": "291120",
    "end": "294039"
  },
  {
    "text": "and integrate with the back end API and",
    "start": "294039",
    "end": "296280"
  },
  {
    "text": "as well as quick demo",
    "start": "296280",
    "end": "299880"
  },
  {
    "text": "[Music]",
    "start": "299880",
    "end": "303130"
  }
]