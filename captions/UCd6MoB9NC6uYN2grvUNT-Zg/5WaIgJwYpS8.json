[
  {
    "text": "in this video you'll see how to get",
    "start": "0",
    "end": "1800"
  },
  {
    "text": "started with Amazon managed streaming",
    "start": "1800",
    "end": "3600"
  },
  {
    "text": "for Apache Kafka or msk you'll learn how",
    "start": "3600",
    "end": "6720"
  },
  {
    "text": "to provision an msk cluster create a",
    "start": "6720",
    "end": "8940"
  },
  {
    "text": "Kafka topic and produce and consume",
    "start": "8940",
    "end": "10920"
  },
  {
    "text": "messages from the cluster",
    "start": "10920",
    "end": "13019"
  },
  {
    "text": "to demonstrate the solution we will",
    "start": "13019",
    "end": "14880"
  },
  {
    "text": "create a simple msk cluster with three",
    "start": "14880",
    "end": "16859"
  },
  {
    "text": "Brokers and three availability zones",
    "start": "16859",
    "end": "19320"
  },
  {
    "text": "we will also create an Amazon elastic",
    "start": "19320",
    "end": "21180"
  },
  {
    "text": "compute cloud or ec2 instance that will",
    "start": "21180",
    "end": "23699"
  },
  {
    "text": "allow us to send commands to our msk",
    "start": "23699",
    "end": "25619"
  },
  {
    "text": "cluster and to produce and consume data",
    "start": "25619",
    "end": "28019"
  },
  {
    "text": "from the cluster",
    "start": "28019",
    "end": "29519"
  },
  {
    "text": "the msk cluster and ec2 instance will be",
    "start": "29519",
    "end": "32220"
  },
  {
    "text": "hosted within the same virtual private",
    "start": "32220",
    "end": "34020"
  },
  {
    "text": "cloud or VPC on AWS",
    "start": "34020",
    "end": "37940"
  },
  {
    "text": "Amazon msk is a fully managed service",
    "start": "38040",
    "end": "40559"
  },
  {
    "text": "that enables you to build and run",
    "start": "40559",
    "end": "42120"
  },
  {
    "text": "applications that use Apache Kafka to",
    "start": "42120",
    "end": "44219"
  },
  {
    "text": "process streaming data to begin let's",
    "start": "44219",
    "end": "46739"
  },
  {
    "text": "take a quick look at the developer guide",
    "start": "46739",
    "end": "48840"
  },
  {
    "text": "the developer guide which can be found",
    "start": "48840",
    "end": "50820"
  },
  {
    "text": "on the AWS website provides a high level",
    "start": "50820",
    "end": "53399"
  },
  {
    "text": "view of msk we encourage you to refer to",
    "start": "53399",
    "end": "56219"
  },
  {
    "text": "it for any help you might need",
    "start": "56219",
    "end": "58020"
  },
  {
    "text": "let's return to the msk console to",
    "start": "58020",
    "end": "60239"
  },
  {
    "text": "create a simple cluster",
    "start": "60239",
    "end": "62760"
  },
  {
    "text": "we'll use the Custom Creation method so",
    "start": "62760",
    "end": "64680"
  },
  {
    "text": "that we can specify all the details of",
    "start": "64680",
    "end": "66299"
  },
  {
    "text": "the cluster",
    "start": "66299",
    "end": "67619"
  },
  {
    "text": "let's name our cluster",
    "start": "67619",
    "end": "70939"
  },
  {
    "text": "for the purposes of this example we'll",
    "start": "73080",
    "end": "74880"
  },
  {
    "text": "create a provision cluster this will",
    "start": "74880",
    "end": "77100"
  },
  {
    "text": "allow us to specify the number of",
    "start": "77100",
    "end": "78600"
  },
  {
    "text": "Brokers and the amount of storage per",
    "start": "78600",
    "end": "80220"
  },
  {
    "text": "broker",
    "start": "80220",
    "end": "81420"
  },
  {
    "text": "we'll select a broker that makes sense",
    "start": "81420",
    "end": "83040"
  },
  {
    "text": "for a test workload rather than a",
    "start": "83040",
    "end": "84720"
  },
  {
    "text": "production workload",
    "start": "84720",
    "end": "87500"
  },
  {
    "text": "let's reduce the storage volume to 100",
    "start": "90299",
    "end": "92100"
  },
  {
    "text": "gigabytes",
    "start": "92100",
    "end": "93780"
  },
  {
    "text": "we'll retain the default configuration",
    "start": "93780",
    "end": "95400"
  },
  {
    "text": "and continue",
    "start": "95400",
    "end": "97939"
  },
  {
    "text": "let's select a VPC that has already been",
    "start": "98460",
    "end": "100500"
  },
  {
    "text": "created",
    "start": "100500",
    "end": "101520"
  },
  {
    "text": "we'll need to select the same VPC later",
    "start": "101520",
    "end": "103740"
  },
  {
    "text": "on when we create the ec2 instance to",
    "start": "103740",
    "end": "105900"
  },
  {
    "text": "host our producers and consumers",
    "start": "105900",
    "end": "108240"
  },
  {
    "text": "let's specify the zones and subnets",
    "start": "108240",
    "end": "110880"
  },
  {
    "text": "we need three zones and subnets because",
    "start": "110880",
    "end": "112979"
  },
  {
    "text": "we selected a cluster that has three",
    "start": "112979",
    "end": "114720"
  },
  {
    "text": "availability zones",
    "start": "114720",
    "end": "117619"
  },
  {
    "text": "we'll create a security group to assign",
    "start": "136920",
    "end": "139739"
  },
  {
    "text": "let's enter a name and description for",
    "start": "139739",
    "end": "141540"
  },
  {
    "text": "the group",
    "start": "141540",
    "end": "143840"
  },
  {
    "text": "we'll connect to the VPC we chose",
    "start": "146280",
    "end": "148080"
  },
  {
    "text": "earlier",
    "start": "148080",
    "end": "150440"
  },
  {
    "text": "we'll retain the default settings for",
    "start": "151560",
    "end": "153180"
  },
  {
    "text": "now but we'll return once the cluster is",
    "start": "153180",
    "end": "155099"
  },
  {
    "text": "created",
    "start": "155099",
    "end": "156060"
  },
  {
    "text": "now that the security group has been",
    "start": "156060",
    "end": "157620"
  },
  {
    "text": "created let's connect it to the msk",
    "start": "157620",
    "end": "159540"
  },
  {
    "text": "cluster",
    "start": "159540",
    "end": "162079"
  },
  {
    "text": "now we can remove the default Security",
    "start": "165959",
    "end": "167700"
  },
  {
    "text": "Group",
    "start": "167700",
    "end": "170120"
  },
  {
    "text": "we'll turn on Plain text traffic and",
    "start": "174360",
    "end": "176400"
  },
  {
    "text": "retain the rest of the security settings",
    "start": "176400",
    "end": "179280"
  },
  {
    "text": "we'll retain the default monitoring and",
    "start": "179280",
    "end": "181260"
  },
  {
    "text": "tag settings as well",
    "start": "181260",
    "end": "184220"
  },
  {
    "text": "let's review our settings and create the",
    "start": "185760",
    "end": "187620"
  },
  {
    "text": "cluster",
    "start": "187620",
    "end": "189980"
  },
  {
    "text": "the cluster is still being created and",
    "start": "193500",
    "end": "195540"
  },
  {
    "text": "should take about 15 minutes to complete",
    "start": "195540",
    "end": "197340"
  },
  {
    "text": "in the meantime let's navigate to ec2",
    "start": "197340",
    "end": "199920"
  },
  {
    "text": "and launch an ec2 instance",
    "start": "199920",
    "end": "203540"
  },
  {
    "text": "this instance will serve as a client",
    "start": "205860",
    "end": "207599"
  },
  {
    "text": "machine that we'll use to create a topic",
    "start": "207599",
    "end": "209340"
  },
  {
    "text": "that produces and consumes data let's",
    "start": "209340",
    "end": "211379"
  },
  {
    "text": "give it a name",
    "start": "211379",
    "end": "214040"
  },
  {
    "text": "we'll create a new key pair for the",
    "start": "216239",
    "end": "218099"
  },
  {
    "text": "instance",
    "start": "218099",
    "end": "220400"
  },
  {
    "text": "let's edit the network settings",
    "start": "226260",
    "end": "229379"
  },
  {
    "text": "once again we'll select the same VPC",
    "start": "229379",
    "end": "231480"
  },
  {
    "text": "that the msk cluster is in",
    "start": "231480",
    "end": "235099"
  },
  {
    "text": "let's enter a name and description for",
    "start": "235860",
    "end": "237599"
  },
  {
    "text": "the group",
    "start": "237599",
    "end": "239840"
  },
  {
    "text": "we'll need an inbound rule that will",
    "start": "245159",
    "end": "246900"
  },
  {
    "text": "allow us to connect to our ec2 instance",
    "start": "246900",
    "end": "248819"
  },
  {
    "text": "using SSH from the AWS CLI we already",
    "start": "248819",
    "end": "252239"
  },
  {
    "text": "have a rule by default so let's go ahead",
    "start": "252239",
    "end": "254099"
  },
  {
    "text": "and launch the instance",
    "start": "254099",
    "end": "257000"
  },
  {
    "text": "the instance is launched let's go back",
    "start": "257100",
    "end": "259079"
  },
  {
    "text": "to msk",
    "start": "259079",
    "end": "261299"
  },
  {
    "text": "let's wait for our msk cluster to finish",
    "start": "261299",
    "end": "263400"
  },
  {
    "text": "creating",
    "start": "263400",
    "end": "265880"
  },
  {
    "text": "our msk cluster has launched let's take",
    "start": "266160",
    "end": "268500"
  },
  {
    "text": "a look at the metrics",
    "start": "268500",
    "end": "270120"
  },
  {
    "text": "there isn't much here yet but as we use",
    "start": "270120",
    "end": "272040"
  },
  {
    "text": "the msk cluster more data will populate",
    "start": "272040",
    "end": "275040"
  },
  {
    "text": "in the properties tab let's find the",
    "start": "275040",
    "end": "277139"
  },
  {
    "text": "security group and point it toward the",
    "start": "277139",
    "end": "278639"
  },
  {
    "text": "ec2 instance we just created",
    "start": "278639",
    "end": "282259"
  },
  {
    "text": "here's the ec2 instance we launched",
    "start": "292919",
    "end": "296840"
  },
  {
    "text": "next we'll attach an AWS identity and",
    "start": "297360",
    "end": "300060"
  },
  {
    "text": "access management or IAM roll to the ec2",
    "start": "300060",
    "end": "302880"
  },
  {
    "text": "instance",
    "start": "302880",
    "end": "305300"
  },
  {
    "text": "for the purposes of this example an IAM",
    "start": "305699",
    "end": "307919"
  },
  {
    "text": "role has already been created for this",
    "start": "307919",
    "end": "309540"
  },
  {
    "text": "instance let's attach it",
    "start": "309540",
    "end": "312800"
  },
  {
    "text": "our msk cluster and ec2 instance are",
    "start": "312900",
    "end": "315240"
  },
  {
    "text": "both ready let's connect them",
    "start": "315240",
    "end": "318680"
  },
  {
    "text": "we'll use the AWS CLI to confirm the",
    "start": "321660",
    "end": "324120"
  },
  {
    "text": "connection",
    "start": "324120",
    "end": "325320"
  },
  {
    "text": "as you can see we are now connected to",
    "start": "325320",
    "end": "327240"
  },
  {
    "text": "the ec2 instance as expected",
    "start": "327240",
    "end": "330918"
  },
  {
    "text": "here are all the commands that we'll use",
    "start": "331020",
    "end": "332759"
  },
  {
    "text": "in the CLI",
    "start": "332759",
    "end": "334440"
  },
  {
    "text": "first let's use this command to install",
    "start": "334440",
    "end": "336300"
  },
  {
    "text": "Java",
    "start": "336300",
    "end": "338960"
  },
  {
    "text": "we'll confirm that we want to continue",
    "start": "343979",
    "end": "345539"
  },
  {
    "text": "with the installation",
    "start": "345539",
    "end": "348380"
  },
  {
    "text": "Java has been installed next let's run",
    "start": "350460",
    "end": "353100"
  },
  {
    "text": "the command to install Kafka",
    "start": "353100",
    "end": "356600"
  },
  {
    "text": "Kafka is installed we can now create our",
    "start": "359160",
    "end": "361860"
  },
  {
    "text": "first topic",
    "start": "361860",
    "end": "363000"
  },
  {
    "text": "first we need to copy our bootstrap",
    "start": "363000",
    "end": "364919"
  },
  {
    "text": "servers plain text",
    "start": "364919",
    "end": "367820"
  },
  {
    "text": "now we can paste the plain text where we",
    "start": "371940",
    "end": "373979"
  },
  {
    "text": "need it in each of these commands",
    "start": "373979",
    "end": "377180"
  },
  {
    "text": "now that the plain text has been",
    "start": "377340",
    "end": "378840"
  },
  {
    "text": "inserted into all the commands let's",
    "start": "378840",
    "end": "380460"
  },
  {
    "text": "paste them into the CLI",
    "start": "380460",
    "end": "383660"
  },
  {
    "text": "first we'll create a topic",
    "start": "383880",
    "end": "387259"
  },
  {
    "text": "next we'll generate a list of our topics",
    "start": "387600",
    "end": "390479"
  },
  {
    "text": "next we'll create a producer to produce",
    "start": "390479",
    "end": "392520"
  },
  {
    "text": "data to our topic",
    "start": "392520",
    "end": "394319"
  },
  {
    "text": "before we run this command we'll",
    "start": "394319",
    "end": "396360"
  },
  {
    "text": "duplicate this screen so we can see both",
    "start": "396360",
    "end": "398160"
  },
  {
    "text": "the producers and the consumer's views",
    "start": "398160",
    "end": "401960"
  },
  {
    "text": "the producer's screen is on the left",
    "start": "402120",
    "end": "403860"
  },
  {
    "text": "we'll enter the last command and when we",
    "start": "403860",
    "end": "406259"
  },
  {
    "text": "input information both CLI instances",
    "start": "406259",
    "end": "408479"
  },
  {
    "text": "should reflect it",
    "start": "408479",
    "end": "411180"
  },
  {
    "text": "we've put data in as the producer now",
    "start": "411180",
    "end": "413759"
  },
  {
    "text": "we'll run a command allowing our",
    "start": "413759",
    "end": "414960"
  },
  {
    "text": "consumer to see that data",
    "start": "414960",
    "end": "417600"
  },
  {
    "text": "we can now see the data any information",
    "start": "417600",
    "end": "420000"
  },
  {
    "text": "input from the producer will now be",
    "start": "420000",
    "end": "421740"
  },
  {
    "text": "reflected in the consumer CLI",
    "start": "421740",
    "end": "425479"
  },
  {
    "text": "you've just seen how to get started with",
    "start": "426419",
    "end": "428100"
  },
  {
    "text": "Amazon msk",
    "start": "428100",
    "end": "430080"
  },
  {
    "text": "you can learn more about this topic in",
    "start": "430080",
    "end": "431819"
  },
  {
    "text": "the description and links for this video",
    "start": "431819",
    "end": "433199"
  },
  {
    "text": "thanks for watching now it's your turn",
    "start": "433199",
    "end": "435180"
  },
  {
    "text": "to try",
    "start": "435180",
    "end": "437479"
  }
]