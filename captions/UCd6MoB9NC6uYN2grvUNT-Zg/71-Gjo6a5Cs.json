[
  {
    "start": "0",
    "end": "196000"
  },
  {
    "text": "hello and welcome to part three of the IAM policy evaluation video series where",
    "start": "1140",
    "end": "6720"
  },
  {
    "text": "we'll talk about policy evaluation chains this is an advanced topic but an important one if you're someone that",
    "start": "6720",
    "end": "12900"
  },
  {
    "text": "writes resource-based policies my name is Matt Latrell and I'm a principal Solutions architect in the AWS identity",
    "start": "12900",
    "end": "19199"
  },
  {
    "text": "let's get started I'll start today by introducing a model",
    "start": "19199",
    "end": "24960"
  },
  {
    "text": "for understanding policy evaluation which shows you how different IEM policies work together to evaluate a",
    "start": "24960",
    "end": "31439"
  },
  {
    "text": "request we'll then use that model to compare different ways of writing resource-based",
    "start": "31439",
    "end": "37200"
  },
  {
    "text": "policies and lastly I'll provide some practical guidance on ways that I recommend to use",
    "start": "37200",
    "end": "42960"
  },
  {
    "text": "the principal element in your resource-based policies",
    "start": "42960",
    "end": "47899"
  },
  {
    "text": "since this video covers more advanced topics there are a few things that you should know before getting started",
    "start": "49320",
    "end": "55199"
  },
  {
    "text": "you'll first need a general understanding of IIM policy syntax and the policy matching semantics you need",
    "start": "55199",
    "end": "61620"
  },
  {
    "text": "to understand what a resource-based policy is and how resource-based policies differ from identity-based",
    "start": "61620",
    "end": "67860"
  },
  {
    "text": "policies if you need a refresher for any of these see part one of this video series",
    "start": "67860",
    "end": "73979"
  },
  {
    "text": "you'll also need a general understanding of the other types of IM policies such as permissions boundaries and service",
    "start": "73979",
    "end": "80759"
  },
  {
    "text": "control policies our focus in this video is on how these policies come together to make an",
    "start": "80759",
    "end": "86040"
  },
  {
    "text": "authorization decision we won't talk much about the situations where you should use each policy type",
    "start": "86040",
    "end": "93860"
  },
  {
    "text": "before we can understand how requests are evaluated we need to talk about the different types of principles that make",
    "start": "95700",
    "end": "101100"
  },
  {
    "text": "requests the first principle that makes requests is the role session a role always has a",
    "start": "101100",
    "end": "107460"
  },
  {
    "text": "corresponding session which is the principle that actually makes the request an IM role by itself does not",
    "start": "107460",
    "end": "114119"
  },
  {
    "text": "make requests without a session most of the examples in this presentation will focus on the",
    "start": "114119",
    "end": "119159"
  },
  {
    "text": "evaluation of requests made by IEM roles the next principle that makes requests",
    "start": "119159",
    "end": "125939"
  },
  {
    "text": "is an IM user IM users do not have sessions and they do make requests",
    "start": "125939",
    "end": "131280"
  },
  {
    "text": "themselves we also have what we call a Federated",
    "start": "131280",
    "end": "136319"
  },
  {
    "text": "user and a Federated user is a principal that has received credentials by using",
    "start": "136319",
    "end": "141540"
  },
  {
    "text": "the STS get Federation token API this is not a user that is Federated by way of",
    "start": "141540",
    "end": "147480"
  },
  {
    "text": "an identity provider most customers won't use this type of Federated user often",
    "start": "147480",
    "end": "154760"
  },
  {
    "text": "next we have an anonymous principle which is a principle that makes unauthenticated requests to AWS",
    "start": "154800",
    "end": "162720"
  },
  {
    "text": "and then we have the root user which is a special type of principle that you should not be using for everyday tasks",
    "start": "162720",
    "end": "168780"
  },
  {
    "text": "the root user has full access to your AWS account most of this video will look at the",
    "start": "168780",
    "end": "175019"
  },
  {
    "text": "policy evaluation Logic for requests made by IM role sessions which share the same logic for as requests made by",
    "start": "175019",
    "end": "182099"
  },
  {
    "text": "Federated users we'll touch briefly on how IM users are slightly different here",
    "start": "182099",
    "end": "189019"
  },
  {
    "text": "with that in mind let me introduce policy evaluation chains",
    "start": "189800",
    "end": "196400"
  },
  {
    "start": "196000",
    "end": "196000"
  },
  {
    "text": "here's a look at a sample policy evaluation chain for a request made by an IM role session for a resource in the",
    "start": "198120",
    "end": "205080"
  },
  {
    "text": "same account an incoming request flows from left to right in this model",
    "start": "205080",
    "end": "210840"
  },
  {
    "text": "as the request travels from one orange node in the chain to the next the request is evaluated against the",
    "start": "210840",
    "end": "217200"
  },
  {
    "text": "policies shown in white using the policy matching semantics that we discussed in",
    "start": "217200",
    "end": "222239"
  },
  {
    "text": "earlier videos in this series for a request to be allowed every policy",
    "start": "222239",
    "end": "227940"
  },
  {
    "text": "in the chain must explicitly allow the requests if any single policy does not",
    "start": "227940",
    "end": "233159"
  },
  {
    "text": "have a matching allow statement or has a matching deny statement then the request is denied",
    "start": "233159",
    "end": "239040"
  },
  {
    "text": "let's walk through an example we started the organization and evaluate",
    "start": "239040",
    "end": "244080"
  },
  {
    "text": "the request against the service control policies attached to the organization if access is allowed by the service",
    "start": "244080",
    "end": "250739"
  },
  {
    "text": "control policies we move on to the account and evaluate the request against any identity based policies attached to",
    "start": "250739",
    "end": "257160"
  },
  {
    "text": "the principal if the identity based policies allow access we evaluate the request against",
    "start": "257160",
    "end": "262740"
  },
  {
    "text": "any permissions boundaries if any are attached and finally we evaluate the request",
    "start": "262740",
    "end": "269160"
  },
  {
    "text": "against the session policy associated with the rules session every role session has a session policy",
    "start": "269160",
    "end": "275759"
  },
  {
    "text": "if you don't specify a session policy when you create a rule session it defaults to allowing all actions and all",
    "start": "275759",
    "end": "282180"
  },
  {
    "text": "resources and acts as a pass-through in other words the default session policy says to trust the results of the",
    "start": "282180",
    "end": "289259"
  },
  {
    "text": "Upstream policies and let the identity-based policy and permissions boundary decide what the principal can",
    "start": "289259",
    "end": "295020"
  },
  {
    "text": "or can't access if each policy in the evaluation chain allows access then the request is",
    "start": "295020",
    "end": "300780"
  },
  {
    "text": "allowed not pictured here are VPC endpoint policies which I excluded to simplify",
    "start": "300780",
    "end": "306300"
  },
  {
    "text": "the model VPC endpoint policies function similarly to service control policies in the",
    "start": "306300",
    "end": "311820"
  },
  {
    "text": "evaluation chain but are only evaluated when a request passes through a VPC endpoint",
    "start": "311820",
    "end": "317699"
  },
  {
    "text": "you may have also noticed there's a new concept of a boundary pictured here and this is just a virtual representation of",
    "start": "317699",
    "end": "324479"
  },
  {
    "text": "the principle that the permissions boundary is evaluated against it's not something that you could put in any kind",
    "start": "324479",
    "end": "330000"
  },
  {
    "text": "of IIM policy you can however use the values for the three boxes that you see highlighted as",
    "start": "330000",
    "end": "337020"
  },
  {
    "text": "values of the principal element of an IM policy the account the role and the",
    "start": "337020",
    "end": "342360"
  },
  {
    "text": "session",
    "start": "342360",
    "end": "344538"
  },
  {
    "text": "before we go any further with this model I want to take a brief aside to talk about how service control policies are",
    "start": "348780",
    "end": "354780"
  },
  {
    "text": "evaluated in this highlighted portion of the evaluation chain",
    "start": "354780",
    "end": "359900"
  },
  {
    "start": "360000",
    "end": "360000"
  },
  {
    "text": "let's use this organizational structure for our example and assume that our policy evaluation is being done within",
    "start": "361080",
    "end": "366960"
  },
  {
    "text": "account 1. when a principal from account 1 makes a request",
    "start": "366960",
    "end": "372479"
  },
  {
    "text": "IAM will grab the service control policies for account 1 oua and any service control policies",
    "start": "372479",
    "end": "379800"
  },
  {
    "text": "attached to the root node IEM then evaluates each level of the",
    "start": "379800",
    "end": "387120"
  },
  {
    "text": "organizational hierarchy independently there must be a matching statement with",
    "start": "387120",
    "end": "393300"
  },
  {
    "text": "an effect of allow in a service control policy attached at each level of the organizational hierarchy for the request",
    "start": "393300",
    "end": "400319"
  },
  {
    "text": "to be allowed by your service control policies the request then continues on to the",
    "start": "400319",
    "end": "405660"
  },
  {
    "text": "rest of the policy evaluation chain once we reach the account node in this image here we can zoom back out and",
    "start": "405660",
    "end": "412440"
  },
  {
    "text": "continue to evaluate our request against the rest of the policy evaluation chain",
    "start": "412440",
    "end": "418340"
  },
  {
    "start": "421000",
    "end": "421000"
  },
  {
    "text": "so whenever you see a request passed through the white bar labeled SCP shown",
    "start": "421020",
    "end": "426120"
  },
  {
    "text": "highlighted here on your screen you should understand that there are multiple evaluations one for each level",
    "start": "426120",
    "end": "431940"
  },
  {
    "text": "of the organization's hierarchy that occur in this step the model hides those evaluations for",
    "start": "431940",
    "end": "438000"
  },
  {
    "text": "you in order to keep it simpler one additional thing to call it is that service control policies are only",
    "start": "438000",
    "end": "443880"
  },
  {
    "text": "evaluated if the principal making the request belongs to your organization",
    "start": "443880",
    "end": "448919"
  },
  {
    "text": "it's important to keep that in mind when we start talking about resource-based policies which have the ability to allow",
    "start": "448919",
    "end": "454860"
  },
  {
    "text": "and deny requests for principles outside of your organization",
    "start": "454860",
    "end": "460400"
  },
  {
    "text": "we're going to use this model to refine the two rules of policy evaluation that we introduced in the first video of this",
    "start": "461699",
    "end": "467220"
  },
  {
    "text": "series the first rule now says at least one statement with an effect of allow for",
    "start": "467220",
    "end": "473759"
  },
  {
    "text": "all policies in the evaluation chain must match for a request to be allowed",
    "start": "473759",
    "end": "479520"
  },
  {
    "text": "in the first video we only dealt with a single policy type in this video we'll show you how all of the policy types",
    "start": "479520",
    "end": "486360"
  },
  {
    "text": "work together to make an authorization decision the second rule of policy evaluation",
    "start": "486360",
    "end": "491759"
  },
  {
    "text": "Remains the Same and states that a matching statement with an effect of deny in any policy regardless of if that",
    "start": "491759",
    "end": "499199"
  },
  {
    "text": "policy is part of the evaluation chain takes precedence over a matching statement with an effect of allow",
    "start": "499199",
    "end": "507620"
  },
  {
    "text": "with that in mind let's go back to talking about policy evaluation chains and this time we'll add resource-based",
    "start": "510599",
    "end": "517800"
  },
  {
    "text": "policies it's important to note that everything we talk about in this particular section is still for a request that is made",
    "start": "517800",
    "end": "525420"
  },
  {
    "text": "where the principal and the resource are in the same account",
    "start": "525420",
    "end": "530720"
  },
  {
    "start": "531000",
    "end": "531000"
  },
  {
    "text": "here's what our evaluation chain looks like when we introduce resource-based policies the resource-based policy is represented",
    "start": "533399",
    "end": "540540"
  },
  {
    "text": "by this Orange Box here at the top of the model you can see that the resource-based",
    "start": "540540",
    "end": "546600"
  },
  {
    "text": "policy has three arrows coming out of it that point to the account the role",
    "start": "546600",
    "end": "552959"
  },
  {
    "text": "in the session these arrows represent the paths that a",
    "start": "552959",
    "end": "558180"
  },
  {
    "text": "request can take through the policy evaluation chain for requests within the same account",
    "start": "558180",
    "end": "563700"
  },
  {
    "text": "the path that a request takes depends on the value of the principal element in the resource-based policy",
    "start": "563700",
    "end": "570420"
  },
  {
    "text": "the model also shows that a request can reach the session by following the path",
    "start": "570420",
    "end": "575459"
  },
  {
    "text": "directly from the organization to the account this is shown by the bottom Arrow coming",
    "start": "575459",
    "end": "582240"
  },
  {
    "text": "out of the organization node on the left the path on the top travels to the resource-based policy and follows the",
    "start": "582240",
    "end": "588899"
  },
  {
    "text": "arrow that matches the value of the principal element in the resource-based policy the bottom path that starts with the",
    "start": "588899",
    "end": "595800"
  },
  {
    "text": "account is linear does not change and runs through all of the policies attached to the principle",
    "start": "595800",
    "end": "601500"
  },
  {
    "text": "for a request to be allowed at least one of the paths to the session must contain explicit allow statements in all",
    "start": "601500",
    "end": "608399"
  },
  {
    "text": "policies in the chain an explicit deny in any policy regardless of if the policy is part of",
    "start": "608399",
    "end": "615060"
  },
  {
    "text": "the chain results in the request being denied",
    "start": "615060",
    "end": "619700"
  },
  {
    "text": "so what are the possible values you can use for the principal element in a resource-based policy and when I say",
    "start": "621000",
    "end": "626640"
  },
  {
    "text": "principal element in this video I'm referring specifically to the AWS principle type there are a few other",
    "start": "626640",
    "end": "632880"
  },
  {
    "text": "principle types but I'm going to focus on the AWS principle type for this video",
    "start": "632880",
    "end": "638760"
  },
  {
    "text": "a wildcard value specifies all principles be very careful when using a",
    "start": "638760",
    "end": "643920"
  },
  {
    "text": "wildcard value in a policy statement with an effect of allow unless you need to Grant Public Access",
    "start": "643920",
    "end": "649740"
  },
  {
    "text": "to your resources this should only be done when combined with an appropriate condition key",
    "start": "649740",
    "end": "655200"
  },
  {
    "text": "a reminder from our first video that a wildcard by itself is the only valid use of a wild card in the principal element",
    "start": "655200",
    "end": "663540"
  },
  {
    "text": "you can also choose to use the account in the principal element and both of the representations that you see here are",
    "start": "663540",
    "end": "669540"
  },
  {
    "text": "the same you can choose to use either then we have the role which allows you",
    "start": "669540",
    "end": "676019"
  },
  {
    "text": "to specify a specific role that should have access to the resource this could also be an IM user",
    "start": "676019",
    "end": "682680"
  },
  {
    "text": "and lastly you can choose to specify an individual role session in the principal element though you should typically",
    "start": "682680",
    "end": "688920"
  },
  {
    "text": "prefer using the rule over the session in your principal element in most situations",
    "start": "688920",
    "end": "694860"
  },
  {
    "text": "the possible values here correspond directly to the boxes in the model that we just showed on the previous slide",
    "start": "694860",
    "end": "700740"
  },
  {
    "text": "so the value that you choose here is important it defines which policies IEM looks at for matching allow statements",
    "start": "700740",
    "end": "707579"
  },
  {
    "text": "when authorizing a request let's walk through some examples to help",
    "start": "707579",
    "end": "713880"
  },
  {
    "start": "712000",
    "end": "712000"
  },
  {
    "text": "you understand this Behavior let's start with what our evaluation chain looks like when there's no allow",
    "start": "713880",
    "end": "719700"
  },
  {
    "text": "in a resource-based policy on the resource and in this case you can see that the",
    "start": "719700",
    "end": "726660"
  },
  {
    "text": "only path available that the request can take is the one directly to the account there is no path through the",
    "start": "726660",
    "end": "732660"
  },
  {
    "text": "resource-based policy IM evaluates each of the policies in the policy evaluation chain against the",
    "start": "732660",
    "end": "738839"
  },
  {
    "text": "authorization context of the request if there is a matching allow statement in every policy in the chain and no",
    "start": "738839",
    "end": "745140"
  },
  {
    "text": "matching deny statement then access is allowed for that request",
    "start": "745140",
    "end": "750380"
  },
  {
    "text": "okay let's look at an example where we do have a resource-based policy with an allow effect that looks something like",
    "start": "752339",
    "end": "758579"
  },
  {
    "text": "this one this is an S3 bucket policy where I've specified the account as the value of",
    "start": "758579",
    "end": "764220"
  },
  {
    "text": "the principal element don't worry about anything other than the fact that this policy has an effective allow and what the value of",
    "start": "764220",
    "end": "771360"
  },
  {
    "text": "the principal element is the rest of the policy statement is not important to your understanding of this model",
    "start": "771360",
    "end": "778459"
  },
  {
    "text": "this time there is a matching allow statement in the resource-based policy you'll see that when im evaluates this",
    "start": "780360",
    "end": "786839"
  },
  {
    "text": "request that there is now a path through the resource-based policy",
    "start": "786839",
    "end": "791940"
  },
  {
    "text": "the request then follows the arrow that corresponds with the value of the principal element in this case the",
    "start": "791940",
    "end": "798000"
  },
  {
    "text": "account and once again if we have a matching allow statement in all of the policies that make up the evaluation chain",
    "start": "798000",
    "end": "804839"
  },
  {
    "text": "then access is allowed now it turns off that the path through",
    "start": "804839",
    "end": "811560"
  },
  {
    "text": "the resource-based policy ends up being identical to the path that the request can take directly through the account",
    "start": "811560",
    "end": "817220"
  },
  {
    "text": "independent of the resource-based policy that you're seeing here so generally speaking there's not really",
    "start": "817220",
    "end": "824519"
  },
  {
    "text": "a reason to use the account ID as the value of the principal element in a resource-based policy with an effective",
    "start": "824519",
    "end": "830459"
  },
  {
    "text": "allow if the resource and principle are within the same account KMS key policy is an IM role trust",
    "start": "830459",
    "end": "838079"
  },
  {
    "text": "policies are two exceptions to this rule that we'll discuss later",
    "start": "838079",
    "end": "843320"
  },
  {
    "text": "now let's look at what happens when we have a statement with an effect of allow that specifies an IM role as the value",
    "start": "844920",
    "end": "851040"
  },
  {
    "text": "of the principal element in that same S3 bucket policy",
    "start": "851040",
    "end": "856459"
  },
  {
    "start": "858000",
    "end": "858000"
  },
  {
    "text": "when the value of the principal element is a role and the resource-based policy allows the request the path through the",
    "start": "858660",
    "end": "865320"
  },
  {
    "text": "resource-based policy changes following the arrow to the role",
    "start": "865320",
    "end": "871100"
  },
  {
    "text": "now what does this mean it means that this path no longer travels through or requires a matching allow statement in",
    "start": "873779",
    "end": "881220"
  },
  {
    "text": "an identity-based policy IEM will still look for a matching deny statement in an identity-based policy",
    "start": "881220",
    "end": "887760"
  },
  {
    "text": "and the request will still be denied if a matching denied statement is found in the identity-based policy or in any",
    "start": "887760",
    "end": "894720"
  },
  {
    "text": "other policy but we can see here how the value of the principal element impacts how the request is evaluated",
    "start": "894720",
    "end": "902720"
  },
  {
    "text": "now here's an example where we have a resource-based policy that allows access to some other role we would say that we",
    "start": "903779",
    "end": "910199"
  },
  {
    "text": "have an implicit deny in the resource-based policy let's see how this request looks to our model",
    "start": "910199",
    "end": "916880"
  },
  {
    "start": "917000",
    "end": "917000"
  },
  {
    "text": "the model first attempts to follow the path of the resource-based policy",
    "start": "917399",
    "end": "922759"
  },
  {
    "text": "but since there's no matching allow statement this path stops here",
    "start": "922980",
    "end": "927920"
  },
  {
    "text": "there is however still a path for the request to take directly to the account and through the identity based policy we",
    "start": "928440",
    "end": "935639"
  },
  {
    "text": "only need one path to the session with matching allow statements in all policies in order for our request to be",
    "start": "935639",
    "end": "942120"
  },
  {
    "text": "allowed lastly let's look at what happens when",
    "start": "942120",
    "end": "949019"
  },
  {
    "text": "the value of the principal element is the role session Arn as I mentioned earlier this is not something that you",
    "start": "949019",
    "end": "955560"
  },
  {
    "text": "typically want to do but it's important to show you how it behaves",
    "start": "955560",
    "end": "960620"
  },
  {
    "start": "961000",
    "end": "961000"
  },
  {
    "text": "when the value of the principal element is the rule session and the resource-based policy allows the request",
    "start": "962339",
    "end": "967740"
  },
  {
    "text": "the path through the policy evaluation chain changes and follows the arrow directly to the session",
    "start": "967740",
    "end": "976160"
  },
  {
    "text": "this means that IEM does not need a matching allow statement in the identity-based policy the permissions",
    "start": "976680",
    "end": "982199"
  },
  {
    "text": "boundary or the session policy the only matching allow statement that's needed is in the service control",
    "start": "982199",
    "end": "988320"
  },
  {
    "text": "policies and in the resource-based policy it's worth repeating here that explicit",
    "start": "988320",
    "end": "994260"
  },
  {
    "text": "denies in any of these policies will still result in the request being denied even if they are not part of the path",
    "start": "994260",
    "end": "1001220"
  },
  {
    "text": "that the request takes through the chain",
    "start": "1001220",
    "end": "1005019"
  },
  {
    "text": "let's take a look at what happens if we have that same policy with the where the role session Arn is the value of the",
    "start": "1008540",
    "end": "1014779"
  },
  {
    "text": "principal element but instead we have an explicit deny in a permissions boundary",
    "start": "1014779",
    "end": "1021339"
  },
  {
    "text": "you can see that IAM finds a matching denied statement in the permissions boundary and the request is denied",
    "start": "1023720",
    "end": "1029480"
  },
  {
    "text": "IM will look for matching deny statements in all policies even if they are not part of the path that the",
    "start": "1029480",
    "end": "1035298"
  },
  {
    "text": "request takes through the evaluation chain if you make use of permissions boundaries in your environment you may",
    "start": "1035299",
    "end": "1041900"
  },
  {
    "text": "want to consider adding explicit denies in them for this reason",
    "start": "1041900",
    "end": "1046720"
  },
  {
    "start": "1049000",
    "end": "1049000"
  },
  {
    "text": "I mentioned that KMS key policies and IM rule trust policies are different for both of these resource-based",
    "start": "1049460",
    "end": "1055640"
  },
  {
    "text": "policies there's only a single path from the organization and therefore only a single arrow in our model",
    "start": "1055640",
    "end": "1062419"
  },
  {
    "text": "said differently there must always be an allow in the resource-based policy for KMS key policies and IM rule trust",
    "start": "1062419",
    "end": "1069620"
  },
  {
    "text": "policies if there is no explicit allow in the resource-based policy the evaluation ends with an implicit deny",
    "start": "1069620",
    "end": "1078880"
  },
  {
    "text": "you can see that there is no alternate path from the organization to the account for KMS key policies or IM rule",
    "start": "1080179",
    "end": "1086600"
  },
  {
    "text": "trust policies",
    "start": "1086600",
    "end": "1089260"
  },
  {
    "text": "because of this when you write KMS key policies or IM rule trust policies it can make sense to use an account ID as",
    "start": "1092299",
    "end": "1099020"
  },
  {
    "text": "the value for your principal element for Access within the same account let's see what that looks like in our",
    "start": "1099020",
    "end": "1104720"
  },
  {
    "text": "model",
    "start": "1104720",
    "end": "1106900"
  },
  {
    "start": "1108000",
    "end": "1108000"
  },
  {
    "text": "the allow in the resource-based policy with the value of the principal element as the account ID",
    "start": "1110120",
    "end": "1116059"
  },
  {
    "text": "allows the request to continue to the account node and follow the path through all of the IAM policies",
    "start": "1116059",
    "end": "1122840"
  },
  {
    "text": "this pattern requires an allow in an identity based policy and you'll often hear it referred to as the KMS key",
    "start": "1122840",
    "end": "1129559"
  },
  {
    "text": "policy delegating Access Control to iam",
    "start": "1129559",
    "end": "1134200"
  },
  {
    "text": "so up until this point we've only talked about IM rules an evaluation chain for",
    "start": "1139640",
    "end": "1144679"
  },
  {
    "text": "an IM user has a few differences for one there's no session involved in the",
    "start": "1144679",
    "end": "1150320"
  },
  {
    "text": "request and secondly the order of the evaluation of the permissions boundary and the",
    "start": "1150320",
    "end": "1155780"
  },
  {
    "text": "identity based policy is switch when compared to an IM role the permissions boundary comes before",
    "start": "1155780",
    "end": "1161960"
  },
  {
    "text": "the identity based policy in the chain now this has some implications when it comes to resource-based policy",
    "start": "1161960",
    "end": "1167900"
  },
  {
    "text": "evaluation here we have our familiar bucket policy",
    "start": "1167900",
    "end": "1174500"
  },
  {
    "text": "but this time we've specified an IEM user as the value of the principal element and let's see what happens",
    "start": "1174500",
    "end": "1182200"
  },
  {
    "start": "1183000",
    "end": "1183000"
  },
  {
    "text": "when we look at the evaluation chain for an IM user we see that if we specify the user as the value of the principal",
    "start": "1184700",
    "end": "1190880"
  },
  {
    "text": "element there is a path where IM does not require an allow in the identity-based policy or the permissions",
    "start": "1190880",
    "end": "1197000"
  },
  {
    "text": "boundary the same rules with explicit denies apply here IEM will still look for an",
    "start": "1197000",
    "end": "1203000"
  },
  {
    "text": "explicit deny in any of these policies",
    "start": "1203000",
    "end": "1207220"
  },
  {
    "text": "the examples you've seen until now have all been for evaluation where the principal and the resource are within",
    "start": "1211160",
    "end": "1216919"
  },
  {
    "text": "the same account now let's take a look at how cross account requests are evaluated",
    "start": "1216919",
    "end": "1223299"
  },
  {
    "start": "1224000",
    "end": "1224000"
  },
  {
    "text": "for a request to be allowed across an account boundary the resource-based policy in the resources account",
    "start": "1224360",
    "end": "1231740"
  },
  {
    "text": "and the evaluation chain in the principles account must both allow access",
    "start": "1231740",
    "end": "1238640"
  },
  {
    "text": "the value specified in the principal element of the resource-based policy when accesses cross account defines",
    "start": "1238640",
    "end": "1245840"
  },
  {
    "text": "which principles can access the resource but does not modify the evaluation chain like you saw for requests within the",
    "start": "1245840",
    "end": "1252740"
  },
  {
    "text": "same account so if I specify an account ID in the resource-based policy of my resource",
    "start": "1252740",
    "end": "1259520"
  },
  {
    "text": "that means that any principle in that account can access my resource if that principle also has a path through the",
    "start": "1259520",
    "end": "1266480"
  },
  {
    "text": "evaluation chain in their account that grants access if I specify a specific role",
    "start": "1266480",
    "end": "1272840"
  },
  {
    "text": "then only that specific role can access my instant my resource and if I specify a role session then",
    "start": "1272840",
    "end": "1280820"
  },
  {
    "text": "only a rule session with that specific name can access my resource an important reminder when writing",
    "start": "1280820",
    "end": "1287299"
  },
  {
    "text": "resource-based policies for cross account access is that your service control policies only apply to",
    "start": "1287299",
    "end": "1292880"
  },
  {
    "text": "principles in your organization if a principal from another organization makes a request to your resource your",
    "start": "1292880",
    "end": "1299360"
  },
  {
    "text": "service control policies will not affect that request",
    "start": "1299360",
    "end": "1304120"
  },
  {
    "text": "to recap for cross account access the story is a bit more straightforward the account with the resource must Grant",
    "start": "1306980",
    "end": "1313880"
  },
  {
    "text": "access to the principal in the other account using a resource-based policy the account with the principal must have",
    "start": "1313880",
    "end": "1321260"
  },
  {
    "text": "a path through the policy evaluation chain that allows access to the resource this means that all the policies that",
    "start": "1321260",
    "end": "1328039"
  },
  {
    "text": "make up the evaluation chain must allow access to that cross account resource",
    "start": "1328039",
    "end": "1333919"
  },
  {
    "text": "the principal element of the resource-based policy defines what principles can access the resource or",
    "start": "1333919",
    "end": "1339679"
  },
  {
    "text": "the scope of access but does not modify the policy evaluation chain",
    "start": "1339679",
    "end": "1345700"
  },
  {
    "text": "let's move on from talking about the model and start looking at some practical applications",
    "start": "1348860",
    "end": "1355299"
  },
  {
    "text": "here's an example of a bucket policy that we've seen already where the role is defined as the value of the principal",
    "start": "1357580",
    "end": "1363799"
  },
  {
    "text": "element again we're just focused on the principal element value for now",
    "start": "1363799",
    "end": "1369760"
  },
  {
    "text": "so take that same bucket policy and what happens when the role that we reference in the policy gets deleted",
    "start": "1370640",
    "end": "1378159"
  },
  {
    "text": "you may have seen something that looks a little like this in your resource-based policies at some point",
    "start": "1379039",
    "end": "1384260"
  },
  {
    "text": "this string that starts with a r o a is the unique ID of the role when you save",
    "start": "1384260",
    "end": "1390860"
  },
  {
    "text": "a resource-based policy that references a specific roles Arn that Arn gets",
    "start": "1390860",
    "end": "1397039"
  },
  {
    "text": "translated to the unique ID of the role behind the scenes and this is to tie the resource-based",
    "start": "1397039",
    "end": "1402919"
  },
  {
    "text": "policy to a specific instance of an IM role this helps protect against the case",
    "start": "1402919",
    "end": "1408799"
  },
  {
    "text": "where you delete a role and someone else comes along and creates a role with the same name",
    "start": "1408799",
    "end": "1414020"
  },
  {
    "text": "the trade-off here is that if I need to create to delete and recreate a role for",
    "start": "1414020",
    "end": "1419360"
  },
  {
    "text": "a valid reason like needing to change a property of the role that requires Recreation then I also need to go and",
    "start": "1419360",
    "end": "1426559"
  },
  {
    "text": "update all of my resource-based policies that reference that role after I recreate it",
    "start": "1426559",
    "end": "1432320"
  },
  {
    "text": "now this Behavior may not always be what you want let's say that the rule you're",
    "start": "1432320",
    "end": "1437419"
  },
  {
    "text": "referencing in your policy is a rule in an external account that belongs to a trusted third party",
    "start": "1437419",
    "end": "1443360"
  },
  {
    "text": "you might not have any control over when they delete or recreate their IM roles",
    "start": "1443360",
    "end": "1448460"
  },
  {
    "text": "once the role referenced in the resource-based policy is deleted the policy statement no longer works for",
    "start": "1448460",
    "end": "1454460"
  },
  {
    "text": "that role by Design and you cannot save the policy until you remove the statement with that aroa identifier that",
    "start": "1454460",
    "end": "1462559"
  },
  {
    "text": "you see here so what else can you do",
    "start": "1462559",
    "end": "1467620"
  },
  {
    "text": "this statement also grants access to a specific IM role the difference is that this example uses",
    "start": "1468200",
    "end": "1474559"
  },
  {
    "text": "the AWS principle Arn condition key combined with the account ID in the",
    "start": "1474559",
    "end": "1479960"
  },
  {
    "text": "value of the principal element this policy is not impacted if a role is",
    "start": "1479960",
    "end": "1485000"
  },
  {
    "text": "deleted and recreated and the trade-off in this case is that there is a risk that someone else could",
    "start": "1485000",
    "end": "1490880"
  },
  {
    "text": "create a role with the same name and have access to your resource so you need to think carefully about",
    "start": "1490880",
    "end": "1496880"
  },
  {
    "text": "which risk is more important to you in which situation if you want to allow access only to a",
    "start": "1496880",
    "end": "1502880"
  },
  {
    "text": "specific instance of an IM role then you should specify that IM role in the principal element",
    "start": "1502880",
    "end": "1508700"
  },
  {
    "text": "if you want to ensure that the policy statement still works even if the role were to be deleted and recreated you can",
    "start": "1508700",
    "end": "1515659"
  },
  {
    "text": "use the AWS principal Arn condition key as you see here note that this policy statement is not",
    "start": "1515659",
    "end": "1522740"
  },
  {
    "text": "exactly equivalent with the previous policy this policy statement still requires an allow in an identity-based",
    "start": "1522740",
    "end": "1529400"
  },
  {
    "text": "policy because the value of the principal element is the account ID",
    "start": "1529400",
    "end": "1534500"
  },
  {
    "text": "this makes this policy statement generally only useful for cross account access or same account access with KMS",
    "start": "1534500",
    "end": "1541279"
  },
  {
    "text": "key policies and IM rule trust policies",
    "start": "1541279",
    "end": "1545799"
  },
  {
    "text": "moving on so let's take a look at some more examples and try to tie them back to our model",
    "start": "1548360",
    "end": "1554539"
  },
  {
    "text": "these two policy statements look very similar but they are slightly different the top statement uses the account as",
    "start": "1554539",
    "end": "1561500"
  },
  {
    "text": "the value of the principal element and the bottom statement uses a wild card both statements use the AWS principal",
    "start": "1561500",
    "end": "1568580"
  },
  {
    "text": "Arn condition key to restrict access to a specific IM role",
    "start": "1568580",
    "end": "1573740"
  },
  {
    "text": "now for cross account access these two statements are effectively the same though I'd still recommend the use of",
    "start": "1573740",
    "end": "1579860"
  },
  {
    "text": "the statement that uses the account ID in the principal element just to avoid the use of a wildcard principle element",
    "start": "1579860",
    "end": "1587360"
  },
  {
    "text": "for requests where the principal and the resource are within the same account there are some interesting differences",
    "start": "1587360",
    "end": "1592640"
  },
  {
    "text": "in how these statements evaluate let's take a look",
    "start": "1592640",
    "end": "1597100"
  },
  {
    "text": "let's first take a look at what our policy evaluation model looks like when we have the account in the principal",
    "start": "1598340",
    "end": "1603380"
  },
  {
    "text": "element remember that we've also included a condition key that Scopes this policy down to a particular role as well",
    "start": "1603380",
    "end": "1611320"
  },
  {
    "text": "so this request takes the same path through the evaluation chain that it would if there were no resource-based",
    "start": "1612740",
    "end": "1618380"
  },
  {
    "text": "policy all the policies shown need to allow access for access to be allowed",
    "start": "1618380",
    "end": "1625360"
  },
  {
    "text": "now what happens when we instead use a wildcard as the value of the principal element for Access within the same",
    "start": "1626419",
    "end": "1632000"
  },
  {
    "start": "1627000",
    "end": "1627000"
  },
  {
    "text": "account remember again that we do have the AWS principle Arn condition key so access is",
    "start": "1632000",
    "end": "1638299"
  },
  {
    "text": "still limited to a specific role since a wild card has the value of the principal element matches all possible",
    "start": "1638299",
    "end": "1644179"
  },
  {
    "text": "principles there are four possible paths the evaluation can take through the chain",
    "start": "1644179",
    "end": "1650179"
  },
  {
    "text": "the first path does not involve the resource-based policy at all and follows the arrows to the account and through",
    "start": "1650179",
    "end": "1656419"
  },
  {
    "text": "all the policies attached to the principal",
    "start": "1656419",
    "end": "1660340"
  },
  {
    "text": "the second path looks at the wildcard value for the principal element and follows the first matching principle",
    "start": "1662059",
    "end": "1668059"
  },
  {
    "text": "through the account",
    "start": "1668059",
    "end": "1671020"
  },
  {
    "text": "path number three follows the next matching principle the role and you can start to see the differences this path",
    "start": "1674480",
    "end": "1681140"
  },
  {
    "text": "is not require an allow in an identity-based policy",
    "start": "1681140",
    "end": "1685840"
  },
  {
    "text": "in path number four matches our last principle in the model the session this path does not require an allow in",
    "start": "1689419",
    "end": "1696679"
  },
  {
    "text": "an identity-based policy a permissions boundary or a session policy IM will consider each of these paths but",
    "start": "1696679",
    "end": "1704299"
  },
  {
    "text": "only one of these paths needs to Grant access for access to be allowed path 4 that you see here is the path",
    "start": "1704299",
    "end": "1711260"
  },
  {
    "text": "that requires the fewest amount of policies to allow the request needing only an allow in the service control",
    "start": "1711260",
    "end": "1716900"
  },
  {
    "text": "policies and the resource-based policy to summarize this means that for Access",
    "start": "1716900",
    "end": "1723620"
  },
  {
    "text": "where the principal and the resource are within the same account when using a wild card in the principal element an IM",
    "start": "1723620",
    "end": "1731059"
  },
  {
    "text": "rule would not need an allow in an identity-based policy a permissions boundary or a session policy for the",
    "start": "1731059",
    "end": "1737720"
  },
  {
    "text": "request to be allowed even when that wild card in the principal element is constrained by a",
    "start": "1737720",
    "end": "1743360"
  },
  {
    "text": "condition key like we saw in this example with the AWS principle Arn condition key",
    "start": "1743360",
    "end": "1748940"
  },
  {
    "text": "remember that this is only true in both the principal and resource are within the same account",
    "start": "1748940",
    "end": "1753980"
  },
  {
    "text": "and also remember that IM will still look for matching deny statements in any of the policies regardless of if they",
    "start": "1753980",
    "end": "1760220"
  },
  {
    "text": "are part of the path or not",
    "start": "1760220",
    "end": "1763539"
  },
  {
    "text": "before we move on I want to call out there that there are only four possible values for the AWS principle Arn",
    "start": "1765799",
    "end": "1771919"
  },
  {
    "text": "condition key in the authorization context the value you should use depends on the type of principle that is making the",
    "start": "1771919",
    "end": "1778220"
  },
  {
    "text": "request this value Remains the Same throughout the authorization of the request even as",
    "start": "1778220",
    "end": "1783919"
  },
  {
    "text": "the request is compared against different policy types so for an IM role the AWS principle Arn",
    "start": "1783919",
    "end": "1790100"
  },
  {
    "text": "value Remains the roles Arn in the authorization context throughout the authorization of the requests",
    "start": "1790100",
    "end": "1798460"
  },
  {
    "text": "the not principal element we touched on the not principle element in the first video of the series let's",
    "start": "1802039",
    "end": "1807380"
  },
  {
    "text": "revisit the topic now that we have an understanding of the policy evaluation model and can reason about why it",
    "start": "1807380",
    "end": "1812779"
  },
  {
    "text": "behaves the way it does let's start with a reminder that you",
    "start": "1812779",
    "end": "1818000"
  },
  {
    "text": "should not use the not principle element with an effect of an allow why this allows every other principle except",
    "start": "1818000",
    "end": "1825500"
  },
  {
    "text": "for the one you specified this is almost always not what you're intending to do and this is effectively granting public",
    "start": "1825500",
    "end": "1831500"
  },
  {
    "text": "access to your resource do not do this with that out of the way let's take a",
    "start": "1831500",
    "end": "1836840"
  },
  {
    "text": "look at the not principle element with an effective deny",
    "start": "1836840",
    "end": "1841240"
  },
  {
    "text": "the author of the policy that you see here intended to explicitly deny all principles except for my role but this",
    "start": "1842179",
    "end": "1849620"
  },
  {
    "text": "doesn't work think back to our policy evaluation model and ask yourself why not",
    "start": "1849620",
    "end": "1854840"
  },
  {
    "text": "there are four possible values for a principal element that gets substituted into the authorization context for each",
    "start": "1854840",
    "end": "1861200"
  },
  {
    "text": "request made by an IM rule this policy statement only excludes one",
    "start": "1861200",
    "end": "1866240"
  },
  {
    "text": "of those values the role the not principle element didn't include",
    "start": "1866240",
    "end": "1872779"
  },
  {
    "text": "the account the boundary or the session shown here in red and there are four possible principal",
    "start": "1872779",
    "end": "1879740"
  },
  {
    "text": "elements involved in this request the account the rule the boundary and",
    "start": "1879740",
    "end": "1884779"
  },
  {
    "text": "the session the only principal element that we excluded in the not principal element was the role",
    "start": "1884779",
    "end": "1891260"
  },
  {
    "text": "this means that axis is still denied for the account the boundary and the session and we said that an explicits an eye",
    "start": "1891260",
    "end": "1897980"
  },
  {
    "text": "anywhere in our policy evaluation chain results in a denied request so any requests to this resource would end up",
    "start": "1897980",
    "end": "1904520"
  },
  {
    "text": "being denied now what happens if we exclude multiple",
    "start": "1904520",
    "end": "1910700"
  },
  {
    "text": "different principal values from our policy here we include the account the role and",
    "start": "1910700",
    "end": "1916220"
  },
  {
    "text": "the role session and this works in some cases but this",
    "start": "1916220",
    "end": "1923899"
  },
  {
    "text": "won't work if you have a permissions boundary attached to the role then you'd still be denied access regardless of",
    "start": "1923899",
    "end": "1929659"
  },
  {
    "text": "what was in the permissions boundary because this introduces the boundary principle that you can't put in a",
    "start": "1929659",
    "end": "1935000"
  },
  {
    "text": "resource-based policy but don't worry there's a better way",
    "start": "1935000",
    "end": "1940840"
  },
  {
    "text": "we go back to our friend the adobe's principle Arn condition key since condition key values in the",
    "start": "1942020",
    "end": "1947480"
  },
  {
    "text": "authorization context don't change as we move through the policy evaluation chain the value for the AWS principle Arn",
    "start": "1947480",
    "end": "1953659"
  },
  {
    "text": "condition key will be the Arn of the rule at each step in the chain so this resource-based policy Works to",
    "start": "1953659",
    "end": "1960740"
  },
  {
    "text": "deny everyone except for the rule that we specify and you could add additional rules as",
    "start": "1960740",
    "end": "1965840"
  },
  {
    "text": "values for the AWS principle error and condition key as well you can also use a wild card somewhere",
    "start": "1965840",
    "end": "1971299"
  },
  {
    "text": "in the condition key value which is something that you can't do in the principal or not principal elements",
    "start": "1971299",
    "end": "1977419"
  },
  {
    "text": "the takeaway from this section is that you should prefer the use of the AWS principle Arn condition key over the not",
    "start": "1977419",
    "end": "1983659"
  },
  {
    "text": "principle element especially avoid using the not principle element in a statement with an effective",
    "start": "1983659",
    "end": "1989360"
  },
  {
    "text": "allow I've told you that the value you specify",
    "start": "1989360",
    "end": "1995299"
  },
  {
    "text": "for your principal element is important so what value for the principle element should you actually use",
    "start": "1995299",
    "end": "2002278"
  },
  {
    "start": "2003000",
    "end": "2003000"
  },
  {
    "text": "we'll start with principal values for cross account access for granting cross-account access I",
    "start": "2003519",
    "end": "2008620"
  },
  {
    "text": "generally recommend one of these three options in a policy statement with an effect of allow",
    "start": "2008620",
    "end": "2013720"
  },
  {
    "text": "the top option trust the entire two's account which we're considering an account that's external to our resources",
    "start": "2013720",
    "end": "2019899"
  },
  {
    "text": "account for this example this statement has no attached condition keys",
    "start": "2019899",
    "end": "2025419"
  },
  {
    "text": "the middle and bottom options both trust a specific rule in the account but do so",
    "start": "2025419",
    "end": "2030580"
  },
  {
    "text": "in a different way note that I'm only showing the principal and condition elements of these policy",
    "start": "2030580",
    "end": "2036640"
  },
  {
    "text": "statements these aren't valid statements and you would still need to fill in the action resource and effects for these",
    "start": "2036640",
    "end": "2042700"
  },
  {
    "text": "policies but I want the focus to be on these elements of a policy statement for this section",
    "start": "2042700",
    "end": "2049558"
  },
  {
    "text": "let's take a look at each option starting with the first option trusting the entire account",
    "start": "2052300",
    "end": "2058358"
  },
  {
    "text": "the benefit of trusting the entire account is that you can avoid the potential availability issue that could",
    "start": "2058359",
    "end": "2064118"
  },
  {
    "text": "happen if you were to specify a role as the value of the principal element this availability issue is the one we",
    "start": "2064119",
    "end": "2071320"
  },
  {
    "text": "discussed earlier that occurs if the external account deletes or recreates the role",
    "start": "2071320",
    "end": "2076720"
  },
  {
    "text": "as you saw the Rule's unique ID would then show up in the policy and the external account would no longer have",
    "start": "2076720",
    "end": "2083138"
  },
  {
    "text": "access to the bucket trusting the entire account can be useful in cases where you don't own the",
    "start": "2083139",
    "end": "2088540"
  },
  {
    "text": "account that you're granting access to if you think about it you probably have some level of implicit trust to the",
    "start": "2088540",
    "end": "2095020"
  },
  {
    "text": "entire account regardless of what you put in the policy because you often have no control over who can assume what role",
    "start": "2095020",
    "end": "2101680"
  },
  {
    "text": "in that external account if you don't own that external account",
    "start": "2101680",
    "end": "2106800"
  },
  {
    "text": "the second option is trusting a specific role by placing the role in the principal element",
    "start": "2109079",
    "end": "2115540"
  },
  {
    "text": "trusting a specific role in an external account can be useful if you own the account you're granting access to",
    "start": "2115540",
    "end": "2121300"
  },
  {
    "text": "this means that you do have control over the creation deletion life cycle of that role as well as the security controls",
    "start": "2121300",
    "end": "2128079"
  },
  {
    "text": "that prevent it from being assumed by other principles in that account this makes it less likely that the role",
    "start": "2128079",
    "end": "2134020"
  },
  {
    "text": "will be deleted or recreated which may cause an availability issue or if you do need to delete and recreate",
    "start": "2134020",
    "end": "2141099"
  },
  {
    "text": "the rule you have total control over the timing and can make an update to the policy",
    "start": "2141099",
    "end": "2147299"
  },
  {
    "text": "lastly this policy is a combination of the two previous policies this policy",
    "start": "2148960",
    "end": "2154180"
  },
  {
    "text": "uses the all twos account number as the value in the principal element but also uses the AWS principle Arn condition key",
    "start": "2154180",
    "end": "2160599"
  },
  {
    "text": "to specify a specific role that is allowed access this means that if the rule is deleted",
    "start": "2160599",
    "end": "2166480"
  },
  {
    "text": "and recreated then the policy will still Grant access to the role the risk that you accept when you use a",
    "start": "2166480",
    "end": "2173380"
  },
  {
    "text": "policy like this is that it's possible for someone else in the Altus account to create a rule with the same name if the",
    "start": "2173380",
    "end": "2180160"
  },
  {
    "text": "original role were deleted and not recreated this can also be a useful pattern if you",
    "start": "2180160",
    "end": "2186700"
  },
  {
    "text": "own the account you are granting access to and have controls that ensure that no one else can create a rule with the same",
    "start": "2186700",
    "end": "2192460"
  },
  {
    "text": "name there are legitimate use cases where you may need to recreate a role such as the",
    "start": "2192460",
    "end": "2198339"
  },
  {
    "text": "modification of certain properties of that role or even accidental use cases where your infrastructure as code ends",
    "start": "2198339",
    "end": "2204640"
  },
  {
    "text": "up deleting and recreating a role",
    "start": "2204640",
    "end": "2208078"
  },
  {
    "start": "2209000",
    "end": "2209000"
  },
  {
    "text": "what if you need to Grant access to a resource to your entire organization this is one of the few times that I",
    "start": "2210339",
    "end": "2216880"
  },
  {
    "text": "recommend the use of a wild card in the principal element and this can be a useful policy if you",
    "start": "2216880",
    "end": "2222700"
  },
  {
    "text": "have something like an SNS topic or an S3 bucket that should be available to anyone within your organization but",
    "start": "2222700",
    "end": "2229359"
  },
  {
    "text": "should not be publicly available this policy includes two conditions the",
    "start": "2229359",
    "end": "2234760"
  },
  {
    "text": "first condition says that principles making a request to this resource must belong to a specific organization and",
    "start": "2234760",
    "end": "2241180"
  },
  {
    "text": "that's this o dash example in this policy the second condition is interesting and",
    "start": "2241180",
    "end": "2247000"
  },
  {
    "text": "it says that this policy does not apply if the principal is in the same account as the resource to which this policy is",
    "start": "2247000",
    "end": "2253720"
  },
  {
    "text": "attached why are we doing that remember when we walked through the behavior of a wild card as the value of",
    "start": "2253720",
    "end": "2260560"
  },
  {
    "text": "the principal element for same account requests earlier in this video since a wild card matches all principles",
    "start": "2260560",
    "end": "2267240"
  },
  {
    "text": "this statement would Grant access to all principles in the same account without",
    "start": "2267240",
    "end": "2272380"
  },
  {
    "text": "requiring the principles to have an allow in an identity-based policy if we did not include this condition",
    "start": "2272380",
    "end": "2278140"
  },
  {
    "text": "so we add this condition that says that this statement does not apply for principles in the Sam account to avoid",
    "start": "2278140",
    "end": "2284859"
  },
  {
    "text": "this Behavior I do recommend writing a policy statement like this for",
    "start": "2284859",
    "end": "2289900"
  },
  {
    "text": "organization-wide Access and then writing a separate statement if principles in the same account need",
    "start": "2289900",
    "end": "2296020"
  },
  {
    "text": "access to the resource or for same account access you can just rely on identity based policies",
    "start": "2296020",
    "end": "2304200"
  },
  {
    "start": "2306000",
    "end": "2306000"
  },
  {
    "text": "speaking of same account access what principles should you use in a resource-based policy for that",
    "start": "2307119",
    "end": "2312640"
  },
  {
    "text": "firstly many customers will choose to exclusively use identity-based policies for granting access to resources within",
    "start": "2312640",
    "end": "2319240"
  },
  {
    "text": "the same account the benefit to doing this is that you only need to look at your identity based",
    "start": "2319240",
    "end": "2324820"
  },
  {
    "text": "policies to determine what access that identity has if you do decide to use resource-based",
    "start": "2324820",
    "end": "2332200"
  },
  {
    "text": "policies for same account access you're primarily going to be using the middle option here where you specify the rule",
    "start": "2332200",
    "end": "2338260"
  },
  {
    "text": "as the value of the principal element remember from our model that you do not need an allow in an identity-based",
    "start": "2338260",
    "end": "2344619"
  },
  {
    "text": "policy when you do this if you're working with an IEM rule trust",
    "start": "2344619",
    "end": "2349720"
  },
  {
    "text": "policy or a KMS key policy you can also use either the top and bottom options with the account number as the value of",
    "start": "2349720",
    "end": "2356800"
  },
  {
    "text": "the principal element these options can be useful if you still want to require the role to have an",
    "start": "2356800",
    "end": "2362920"
  },
  {
    "text": "allow in an identity-based policy to be able to access the resource these options are often described as",
    "start": "2362920",
    "end": "2369460"
  },
  {
    "text": "delegating access to your identity based policies to summarize",
    "start": "2369460",
    "end": "2374680"
  },
  {
    "text": "the principal element value that you use for same account access depends on where you want to manage that access",
    "start": "2374680",
    "end": "2380500"
  },
  {
    "text": "if you want to manage access in your identity-based policies you can choose to avoid adding and allowing a",
    "start": "2380500",
    "end": "2386200"
  },
  {
    "text": "resource-based policy altogether and use the top or bottom option here for KMS key policies and IM rule trust",
    "start": "2386200",
    "end": "2393339"
  },
  {
    "text": "policies if you want to manage access in resource-based policies you're probably",
    "start": "2393339",
    "end": "2398619"
  },
  {
    "text": "going to choose the middle option here and specify a role as the value of the principal element",
    "start": "2398619",
    "end": "2405480"
  },
  {
    "text": "throughout most of this talk we've ignored the presence of EPC endpoint policies primarily because they evaluate",
    "start": "2408940",
    "end": "2414339"
  },
  {
    "text": "similarly to service control policies one important thing to note about BBC endpoints in particular is that there",
    "start": "2414339",
    "end": "2421480"
  },
  {
    "text": "are additional condition keys that you can use in your policies that are only available when the request passes",
    "start": "2421480",
    "end": "2427420"
  },
  {
    "text": "through avpc endpoint these are Keys like AWS Source VPC and AWS source vpce",
    "start": "2427420",
    "end": "2434680"
  },
  {
    "text": "the IAM documentation will tell you when a condition key relies on a request passing through a VPC endpoint to be",
    "start": "2434680",
    "end": "2441640"
  },
  {
    "text": "available here's a quick look at how VPC endpoint",
    "start": "2441640",
    "end": "2446800"
  },
  {
    "text": "policies fit into the policy evaluation chain if there is a VPC endpoint policy",
    "start": "2446800",
    "end": "2453220"
  },
  {
    "text": "present and the request is made through of the VPC endpoint you can see that they function similarly it's a service",
    "start": "2453220",
    "end": "2459160"
  },
  {
    "text": "control policies",
    "start": "2459160",
    "end": "2462059"
  },
  {
    "text": "VPC endpoint policy statements with an effect of allow will generally use a wildcard principle with some conditions",
    "start": "2465280",
    "end": "2471520"
  },
  {
    "text": "attached this just means that the VPC endpoint will pass all principles through to the",
    "start": "2471520",
    "end": "2476859"
  },
  {
    "text": "next policy in the chain as long as it meets the conditional criteria VP standpoint policies typically act",
    "start": "2476859",
    "end": "2483520"
  },
  {
    "text": "like a filter the VPC endpoint policy shown here ensures that only principles that belong",
    "start": "2483520",
    "end": "2489339"
  },
  {
    "text": "to my organization can make requests through my VPC endpoints",
    "start": "2489339",
    "end": "2495299"
  },
  {
    "text": "VP standpoint policy statements with an effective deny are also usually written using a wildcard as the value of the",
    "start": "2497260",
    "end": "2503619"
  },
  {
    "text": "principal element this policy statement also denies access unless the principal making the request",
    "start": "2503619",
    "end": "2509680"
  },
  {
    "text": "belongs to the organization that I specified if you use a deny statement like this",
    "start": "2509680",
    "end": "2515079"
  },
  {
    "text": "you will also need a separate statement that allows access",
    "start": "2515079",
    "end": "2520078"
  },
  {
    "text": "and with that we'll wrap up this video we went over a lot today and three practical takeaways from this video are",
    "start": "2522460",
    "end": "2529359"
  },
  {
    "text": "that one the value of the principal element in a resource-based policy can",
    "start": "2529359",
    "end": "2534400"
  },
  {
    "text": "impact how IM evaluates a request by modifying the path through the policy evaluation chain",
    "start": "2534400",
    "end": "2540700"
  },
  {
    "text": "Remember That explicit denies are always honored even if they are not part of the evaluation chain",
    "start": "2540700",
    "end": "2548079"
  },
  {
    "text": "the not principal elements should generally be avoided the AWS principle Arn condition key is what you should use",
    "start": "2548079",
    "end": "2555099"
  },
  {
    "text": "in its place when choosing what value to use in the principal element of a resource-based",
    "start": "2555099",
    "end": "2561460"
  },
  {
    "text": "policy think carefully about your trust model be extra careful when using a wild card",
    "start": "2561460",
    "end": "2566680"
  },
  {
    "text": "in the principal element even when paired with additional condition keys",
    "start": "2566680",
    "end": "2572460"
  },
  {
    "text": "thank you and I hope to see you again in the next video",
    "start": "2572859",
    "end": "2577380"
  }
]