[
  {
    "text": "- Please join us in this video",
    "start": "0",
    "end": "1680"
  },
  {
    "text": "as we write a simple\nsource code with few lines",
    "start": "1680",
    "end": "5009"
  },
  {
    "text": "using AWS ExpressLink to\nbuild our weather station.",
    "start": "5010",
    "end": "7950"
  },
  {
    "text": "We are collecting data\nand we are going to show",
    "start": "7950",
    "end": "10469"
  },
  {
    "text": "how that works a little\nmore in depth here.",
    "start": "10470",
    "end": "12810"
  },
  {
    "text": "And now over to our technical expert, Dan.",
    "start": "12810",
    "end": "15510"
  },
  {
    "text": "- [Daniel] Here we have\nthe weather Uno sketch",
    "start": "15510",
    "end": "18570"
  },
  {
    "text": "for our ExpressLink weather station.",
    "start": "18570",
    "end": "21150"
  },
  {
    "text": "First, you must include\nthe SparkFun libraries",
    "start": "21150",
    "end": "25050"
  },
  {
    "text": "for the weather station board.",
    "start": "25050",
    "end": "27180"
  },
  {
    "text": "This includes a pressure\nlibrary and a humidity library.",
    "start": "27180",
    "end": "31290"
  },
  {
    "text": "At the top of the sketch,",
    "start": "31290",
    "end": "32790"
  },
  {
    "text": "there's a number of global variables.",
    "start": "32790",
    "end": "34833"
  },
  {
    "text": "We'll scroll down to\nthe interrupt routines.",
    "start": "39210",
    "end": "42573"
  },
  {
    "text": "Here we see a rain interrupt routine,",
    "start": "46470",
    "end": "50820"
  },
  {
    "text": "and a wind speed interrupt routine.",
    "start": "50820",
    "end": "53313"
  },
  {
    "text": "Next, we have the setup function.",
    "start": "57210",
    "end": "60270"
  },
  {
    "text": "This is run once when the board powers up.",
    "start": "60270",
    "end": "63273"
  },
  {
    "text": "Here, we set up the serial\nfor the ExpressLink.",
    "start": "65580",
    "end": "70580"
  },
  {
    "text": "And next, we connect to AWS IoT\nwith the AT CONNECT command.",
    "start": "76980",
    "end": "81980"
  },
  {
    "text": "Next in the setup,",
    "start": "87390",
    "end": "89073"
  },
  {
    "text": "we configure the pressure\nsensor, the humidity sensor.",
    "start": "90480",
    "end": "95480"
  },
  {
    "text": "And we attach the rain and\nwind speed interrupt routines.",
    "start": "105870",
    "end": "110870"
  },
  {
    "text": "We attach the external interrupt\npins to the IRQ functions.",
    "start": "113610",
    "end": "118610"
  },
  {
    "text": "Now we move on to the main loop.",
    "start": "120150",
    "end": "122403"
  },
  {
    "text": "In the main loop,",
    "start": "124650",
    "end": "125880"
  },
  {
    "text": "we have to keep track of each minute",
    "start": "125880",
    "end": "129209"
  },
  {
    "text": "so that we can calculate wind\nspeed and rain by the minute.",
    "start": "129210",
    "end": "134210"
  },
  {
    "text": "Here, you can see the\ncalculations being done.",
    "start": "135810",
    "end": "138513"
  },
  {
    "text": "And finally, we calculate\nall the readings every second",
    "start": "148479",
    "end": "152760"
  },
  {
    "text": "with the calcWeather function.",
    "start": "152760",
    "end": "154833"
  },
  {
    "text": "This assigns all the values",
    "start": "160410",
    "end": "162060"
  },
  {
    "text": "to the global variables we defined above.",
    "start": "162060",
    "end": "164849"
  },
  {
    "text": "Now we send our readings\nevery minute to AWS IoT.",
    "start": "164850",
    "end": "169177"
  },
  {
    "text": "Here we'll move down to\nthe sendWeather function.",
    "start": "173160",
    "end": "176313"
  },
  {
    "text": "In sendWeather,",
    "start": "184376",
    "end": "185626"
  },
  {
    "text": "we issue an AT CONNECT\ncommand over the serial,",
    "start": "187470",
    "end": "192030"
  },
  {
    "text": "and then we assemble the JSON payload",
    "start": "192030",
    "end": "194980"
  },
  {
    "text": "and use AT+SEND1 to\nsend it to AWS IoT core.",
    "start": "195960",
    "end": "200673"
  },
  {
    "text": "That's the entire weather station sketch.",
    "start": "213480",
    "end": "216780"
  },
  {
    "text": "- Thanks Dan for taking us through",
    "start": "216780",
    "end": "219000"
  },
  {
    "text": "each function of code and showcasing",
    "start": "219000",
    "end": "221430"
  },
  {
    "text": "how quickly and easily we\ncan use AWS ExpressLink.",
    "start": "221430",
    "end": "225092"
  }
]