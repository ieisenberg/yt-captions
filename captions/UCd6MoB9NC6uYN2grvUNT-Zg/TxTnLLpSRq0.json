[
  {
    "text": "to add a REST API using an AWS lambda",
    "start": "1570",
    "end": "5170"
  },
  {
    "text": "function we can run the amplifi add a PR",
    "start": "5170",
    "end": "7870"
  },
  {
    "text": "command",
    "start": "7870",
    "end": "10290"
  },
  {
    "text": "for the type of service will choose rest",
    "start": "10360",
    "end": "13680"
  },
  {
    "text": "the API that will be creating will be",
    "start": "13680",
    "end": "16360"
  },
  {
    "text": "fetching a list of people so we'll call",
    "start": "16360",
    "end": "18250"
  },
  {
    "text": "the API people API",
    "start": "18250",
    "end": "21810"
  },
  {
    "text": "for the path will give it a path of",
    "start": "22310",
    "end": "24410"
  },
  {
    "text": "slash people for the lambda function",
    "start": "24410",
    "end": "27500"
  },
  {
    "text": "datasource will create a new lambda",
    "start": "27500",
    "end": "29450"
  },
  {
    "text": "function next we're asked for a label",
    "start": "29450",
    "end": "32720"
  },
  {
    "text": "for the lambda function will call this",
    "start": "32720",
    "end": "34670"
  },
  {
    "text": "people function",
    "start": "34670",
    "end": "37110"
  },
  {
    "text": "and for the name of the lambda function",
    "start": "37110",
    "end": "39390"
  },
  {
    "text": "will also call it people function for",
    "start": "39390",
    "end": "42390"
  },
  {
    "text": "the function template that we'd like to",
    "start": "42390",
    "end": "43710"
  },
  {
    "text": "use we'll use a server less Express",
    "start": "43710",
    "end": "46020"
  },
  {
    "text": "function next we'll be asked if we'd",
    "start": "46020",
    "end": "48990"
  },
  {
    "text": "like to edit the local function now",
    "start": "48990",
    "end": "50670"
  },
  {
    "text": "we'll choose yes this should open up",
    "start": "50670",
    "end": "53870"
  },
  {
    "text": "implement slash function",
    "start": "53870",
    "end": "56130"
  },
  {
    "text": "slash people function slash source slash",
    "start": "56130",
    "end": "59130"
  },
  {
    "text": "app j/s and our text editor and a pious",
    "start": "59130",
    "end": "62790"
  },
  {
    "text": "will see the code for our lambda",
    "start": "62790",
    "end": "64170"
  },
  {
    "text": "function we'll scroll down until we see",
    "start": "64170",
    "end": "66660"
  },
  {
    "text": "app docket slash people right now slash",
    "start": "66660",
    "end": "69750"
  },
  {
    "text": "people is returning an object with a",
    "start": "69750",
    "end": "71940"
  },
  {
    "text": "success property in a URL we'll go ahead",
    "start": "71940",
    "end": "74729"
  },
  {
    "text": "and create a new array called people in",
    "start": "74729",
    "end": "77430"
  },
  {
    "text": "hard code some data",
    "start": "77430",
    "end": "80360"
  },
  {
    "text": "you",
    "start": "86330",
    "end": "88390"
  },
  {
    "text": "next we'll update the response to return",
    "start": "95220",
    "end": "97990"
  },
  {
    "text": "the array of people",
    "start": "97990",
    "end": "100920"
  },
  {
    "text": "next save this vowel and jump back to",
    "start": "102079",
    "end": "104359"
  },
  {
    "text": "the command line",
    "start": "104359",
    "end": "106399"
  },
  {
    "text": "we're next s if we'd like to restrict",
    "start": "106399",
    "end": "108619"
  },
  {
    "text": "API access",
    "start": "108619",
    "end": "109850"
  },
  {
    "text": "since we have authentication enabled",
    "start": "109850",
    "end": "111619"
  },
  {
    "text": "we'll choose yes for access will give",
    "start": "111619",
    "end": "114289"
  },
  {
    "text": "authenticated users only access and for",
    "start": "114289",
    "end": "117049"
  },
  {
    "text": "the type of access will choose read",
    "start": "117049",
    "end": "120819"
  },
  {
    "text": "with the local configuration created we",
    "start": "121710",
    "end": "124500"
  },
  {
    "text": "can run amplify push to push the new",
    "start": "124500",
    "end": "126620"
  },
  {
    "text": "configuration to our account and create",
    "start": "126620",
    "end": "128850"
  },
  {
    "text": "the resources",
    "start": "128850",
    "end": "131570"
  },
  {
    "text": "once the resources have been created",
    "start": "134780",
    "end": "136970"
  },
  {
    "text": "open up a piace s",
    "start": "136970",
    "end": "140380"
  },
  {
    "text": "here we'll first import API from AWS",
    "start": "141000",
    "end": "143820"
  },
  {
    "text": "amplify",
    "start": "143820",
    "end": "146600"
  },
  {
    "text": "in our class definition we'll define an",
    "start": "148890",
    "end": "151470"
  },
  {
    "text": "initial state of people and set it to an",
    "start": "151470",
    "end": "153690"
  },
  {
    "text": "empty array we'll create a component did",
    "start": "153690",
    "end": "157320"
  },
  {
    "text": "mount lifecycle method that will call",
    "start": "157320",
    "end": "159300"
  },
  {
    "text": "API get and here we'll pass in the name",
    "start": "159300",
    "end": "162510"
  },
  {
    "text": "of the API as well as the path that we",
    "start": "162510",
    "end": "164910"
  },
  {
    "text": "would like to fetch",
    "start": "164910",
    "end": "167570"
  },
  {
    "text": "the data returned from the API will be",
    "start": "173560",
    "end": "176510"
  },
  {
    "text": "an object with an array of people",
    "start": "176510",
    "end": "179390"
  },
  {
    "text": "when the data is returned from the API",
    "start": "179390",
    "end": "181310"
  },
  {
    "text": "we'll call this set state setting the",
    "start": "181310",
    "end": "184340"
  },
  {
    "text": "value of people to data dot people",
    "start": "184340",
    "end": "188260"
  },
  {
    "text": "you",
    "start": "194050",
    "end": "196110"
  },
  {
    "text": "in our render method we'll map over the",
    "start": "196290",
    "end": "198780"
  },
  {
    "text": "people array showing the person's name",
    "start": "198780",
    "end": "201060"
  },
  {
    "text": "as well as the hair color for every item",
    "start": "201060",
    "end": "203250"
  },
  {
    "text": "in the array",
    "start": "203250",
    "end": "205730"
  },
  {
    "text": "now we'll save the file and we'll run",
    "start": "210630",
    "end": "213060"
  },
  {
    "text": "MPM start to launch the app",
    "start": "213060",
    "end": "216590"
  },
  {
    "text": "if everything is working properly we",
    "start": "219430",
    "end": "221470"
  },
  {
    "text": "should see the data rendered to our",
    "start": "221470",
    "end": "222970"
  },
  {
    "text": "screen right now our API is only",
    "start": "222970",
    "end": "226180"
  },
  {
    "text": "returning hard-coded data let's update",
    "start": "226180",
    "end": "228489"
  },
  {
    "text": "the API to fetch data from a third party",
    "start": "228489",
    "end": "231099"
  },
  {
    "text": "API to do so we're going to need to",
    "start": "231099",
    "end": "233290"
  },
  {
    "text": "install the Axios package to send HTTP",
    "start": "233290",
    "end": "236049"
  },
  {
    "text": "requests change into amplifier /",
    "start": "236049",
    "end": "238810"
  },
  {
    "text": "back-end / function / people function /",
    "start": "238810",
    "end": "242470"
  },
  {
    "text": "source",
    "start": "242470",
    "end": "244950"
  },
  {
    "text": "from within this directory we'll go",
    "start": "246069",
    "end": "248200"
  },
  {
    "text": "ahead and install the Axios package",
    "start": "248200",
    "end": "252069"
  },
  {
    "text": "well next up an app das from the backend",
    "start": "252069",
    "end": "254680"
  },
  {
    "text": "/ function / people function / source",
    "start": "254680",
    "end": "258430"
  },
  {
    "text": "folder",
    "start": "258430",
    "end": "260850"
  },
  {
    "text": "here will first require Axios from the",
    "start": "266920",
    "end": "270110"
  },
  {
    "text": "Axios package",
    "start": "270110",
    "end": "272919"
  },
  {
    "text": "well then call Axios get passing in the",
    "start": "277290",
    "end": "280350"
  },
  {
    "text": "URL for the open source Star Wars API",
    "start": "280350",
    "end": "284900"
  },
  {
    "text": "Axios will return a promise so we'll set",
    "start": "285280",
    "end": "288110"
  },
  {
    "text": "a dot den and a dot catch function",
    "start": "288110",
    "end": "292270"
  },
  {
    "text": "if there's an error we'll return a JSON",
    "start": "292700",
    "end": "295250"
  },
  {
    "text": "object containing an error property and",
    "start": "295250",
    "end": "297680"
  },
  {
    "text": "setting people to know",
    "start": "297680",
    "end": "300850"
  },
  {
    "text": "you",
    "start": "306580",
    "end": "308638"
  },
  {
    "text": "if it's successful we'll go ahead and",
    "start": "309630",
    "end": "312210"
  },
  {
    "text": "create a new variable called people",
    "start": "312210",
    "end": "313830"
  },
  {
    "text": "setting it to response data a dot",
    "start": "313830",
    "end": "316410"
  },
  {
    "text": "results",
    "start": "316410",
    "end": "318920"
  },
  {
    "text": "well then return a JSON object with an",
    "start": "320270",
    "end": "322789"
  },
  {
    "text": "air property set to null along with the",
    "start": "322789",
    "end": "325039"
  },
  {
    "text": "people array",
    "start": "325039",
    "end": "327580"
  },
  {
    "text": "since we've made changes to our lambda",
    "start": "331439",
    "end": "333809"
  },
  {
    "text": "function we're gonna need a run amplify",
    "start": "333809",
    "end": "335550"
  },
  {
    "text": "push again",
    "start": "335550",
    "end": "338149"
  },
  {
    "text": "once the resources have been updated in",
    "start": "342770",
    "end": "345200"
  },
  {
    "text": "your account",
    "start": "345200",
    "end": "345770"
  },
  {
    "text": "we'll run NPM start to restart the",
    "start": "345770",
    "end": "347750"
  },
  {
    "text": "reactive",
    "start": "347750",
    "end": "349980"
  },
  {
    "text": "when the app loads we should now see the",
    "start": "349980",
    "end": "352110"
  },
  {
    "text": "data being returned from the Star Wars",
    "start": "352110",
    "end": "353760"
  },
  {
    "text": "API",
    "start": "353760",
    "end": "356270"
  },
  {
    "text": "you",
    "start": "361720",
    "end": "363780"
  }
]