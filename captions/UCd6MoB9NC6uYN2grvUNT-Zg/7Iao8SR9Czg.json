[
  {
    "text": "in this video you'll see how to simplify",
    "start": "210",
    "end": "2220"
  },
  {
    "text": "custom rule creation using the AWS",
    "start": "2220",
    "end": "4859"
  },
  {
    "text": "config rural development kit or RDK with",
    "start": "4859",
    "end": "8250"
  },
  {
    "text": "this tool you can rapidly develop and",
    "start": "8250",
    "end": "10110"
  },
  {
    "text": "deploy custom rules for AWS config",
    "start": "10110",
    "end": "12180"
  },
  {
    "text": "automate deployment tasks and short and",
    "start": "12180",
    "end": "14400"
  },
  {
    "text": "compliance feedback cycles",
    "start": "14400",
    "end": "16789"
  },
  {
    "text": "the RDK is an open-source command-line",
    "start": "16789",
    "end": "18920"
  },
  {
    "text": "utility that helps you set up AWS config",
    "start": "18920",
    "end": "21199"
  },
  {
    "text": "author rules and then test them using a",
    "start": "21199",
    "end": "23300"
  },
  {
    "text": "variety of AWS resource types to get",
    "start": "23300",
    "end": "26180"
  },
  {
    "text": "started let's navigate to the config",
    "start": "26180",
    "end": "27949"
  },
  {
    "text": "dashboard",
    "start": "27949",
    "end": "30550"
  },
  {
    "text": "before you can use the RDK AWS config",
    "start": "31020",
    "end": "34050"
  },
  {
    "text": "must already be enabled and associated",
    "start": "34050",
    "end": "35940"
  },
  {
    "text": "with a delivery bucket and service",
    "start": "35940",
    "end": "37440"
  },
  {
    "text": "linked role let's take a look at the",
    "start": "37440",
    "end": "39420"
  },
  {
    "text": "rules page",
    "start": "39420",
    "end": "41989"
  },
  {
    "text": "rules represent your desired",
    "start": "42710",
    "end": "44329"
  },
  {
    "text": "configuration settings AWS config",
    "start": "44329",
    "end": "46940"
  },
  {
    "text": "evaluates whether your resource",
    "start": "46940",
    "end": "48350"
  },
  {
    "text": "configurations comply with relevant",
    "start": "48350",
    "end": "49790"
  },
  {
    "text": "rules and summarizes the compliance",
    "start": "49790",
    "end": "51890"
  },
  {
    "text": "results for the purposes of this example",
    "start": "51890",
    "end": "54260"
  },
  {
    "text": "we already have a few rules next let's",
    "start": "54260",
    "end": "57680"
  },
  {
    "text": "check the RDK github page to ensure we",
    "start": "57680",
    "end": "60079"
  },
  {
    "text": "have the required permissions",
    "start": "60079",
    "end": "62980"
  },
  {
    "text": "this page provides links to sample rule",
    "start": "63940",
    "end": "66220"
  },
  {
    "text": "and test definitions will select policy",
    "start": "66220",
    "end": "68800"
  },
  {
    "text": "to find the permissions necessary for",
    "start": "68800",
    "end": "70540"
  },
  {
    "text": "using the RDK",
    "start": "70540",
    "end": "72720"
  },
  {
    "text": "scroll down to see the permissions",
    "start": "72720",
    "end": "74370"
  },
  {
    "text": "necessary to use our DK with an AWS",
    "start": "74370",
    "end": "76650"
  },
  {
    "text": "account if your AWS account has the",
    "start": "76650",
    "end": "79440"
  },
  {
    "text": "necessary permissions to manipulate AWS",
    "start": "79440",
    "end": "81600"
  },
  {
    "text": "config lambda and AWS Identity and",
    "start": "81600",
    "end": "84120"
  },
  {
    "text": "Access Management or I am resources as",
    "start": "84120",
    "end": "86700"
  },
  {
    "text": "specified in this JSON file then you're",
    "start": "86700",
    "end": "89160"
  },
  {
    "text": "ready to move on to building AWS config",
    "start": "89160",
    "end": "91260"
  },
  {
    "text": "rules with our DK to get started open a",
    "start": "91260",
    "end": "94650"
  },
  {
    "text": "terminal with the AWS command-line",
    "start": "94650",
    "end": "96390"
  },
  {
    "text": "interface or CLI installed and proper",
    "start": "96390",
    "end": "99090"
  },
  {
    "text": "account credentials set",
    "start": "99090",
    "end": "102049"
  },
  {
    "text": "after making sure that pip is installed",
    "start": "102900",
    "end": "104820"
  },
  {
    "text": "run the command to install the RDK",
    "start": "104820",
    "end": "108890"
  },
  {
    "text": "next make sure the RDK is installed by",
    "start": "109100",
    "end": "111500"
  },
  {
    "text": "attempting to run it without specifying",
    "start": "111500",
    "end": "112909"
  },
  {
    "text": "any parameters",
    "start": "112909",
    "end": "115280"
  },
  {
    "text": "after confirming that the RDK is",
    "start": "115280",
    "end": "116900"
  },
  {
    "text": "installed initialize it",
    "start": "116900",
    "end": "119189"
  },
  {
    "text": "the RDK has been initialized and a",
    "start": "119189",
    "end": "121350"
  },
  {
    "text": "working directory has been created to",
    "start": "121350",
    "end": "122850"
  },
  {
    "text": "hold your rule definitions you can run",
    "start": "122850",
    "end": "125280"
  },
  {
    "text": "the init command to configure AWS config",
    "start": "125280",
    "end": "127770"
  },
  {
    "text": "in the account specified by your",
    "start": "127770",
    "end": "129090"
  },
  {
    "text": "credentials if this has not already been",
    "start": "129090",
    "end": "130739"
  },
  {
    "text": "done",
    "start": "130739",
    "end": "132340"
  },
  {
    "text": "now you can create a rule in this case",
    "start": "132340",
    "end": "135010"
  },
  {
    "text": "let's create a rule that checks at the",
    "start": "135010",
    "end": "136450"
  },
  {
    "text": "Amazon Elastic Compute cloud or Amazon",
    "start": "136450",
    "end": "138640"
  },
  {
    "text": "ec2 instances associated with our",
    "start": "138640",
    "end": "140830"
  },
  {
    "text": "account conform to a specific instance",
    "start": "140830",
    "end": "142630"
  },
  {
    "text": "type t2 Micro",
    "start": "142630",
    "end": "145420"
  },
  {
    "text": "notice that the syntax of the command",
    "start": "145420",
    "end": "147310"
  },
  {
    "text": "specifies the resource type to be",
    "start": "147310",
    "end": "148900"
  },
  {
    "text": "analyzed as well as the desired instance",
    "start": "148900",
    "end": "151090"
  },
  {
    "text": "type which we are entering as the input",
    "start": "151090",
    "end": "153250"
  },
  {
    "text": "parameter desired instance type notice",
    "start": "153250",
    "end": "156280"
  },
  {
    "text": "also that Python is specified as the",
    "start": "156280",
    "end": "158080"
  },
  {
    "text": "runtime the full list of parameters can",
    "start": "158080",
    "end": "160480"
  },
  {
    "text": "be found in the RDK documentation",
    "start": "160480",
    "end": "163300"
  },
  {
    "text": "running this command creates a folder in",
    "start": "163300",
    "end": "165340"
  },
  {
    "text": "the working directory with template code",
    "start": "165340",
    "end": "166900"
  },
  {
    "text": "for defining the rule as well as for",
    "start": "166900",
    "end": "168730"
  },
  {
    "text": "testing it and changing parameters let's",
    "start": "168730",
    "end": "171100"
  },
  {
    "text": "look at the template rule definition",
    "start": "171100",
    "end": "174210"
  },
  {
    "text": "let's start implementing the basic logic",
    "start": "174870",
    "end": "176790"
  },
  {
    "text": "necessary for this rule to return a",
    "start": "176790",
    "end": "178500"
  },
  {
    "text": "compliance status appropriate for",
    "start": "178500",
    "end": "180060"
  },
  {
    "text": "checking ec2 instances for conformance",
    "start": "180060",
    "end": "182160"
  },
  {
    "text": "to a target instance type",
    "start": "182160",
    "end": "185300"
  },
  {
    "text": "the template code has predefined",
    "start": "186630",
    "end": "188280"
  },
  {
    "text": "functions which AWS config will look for",
    "start": "188280",
    "end": "190320"
  },
  {
    "text": "when determining compliance status each",
    "start": "190320",
    "end": "192660"
  },
  {
    "text": "function contains a doc string with",
    "start": "192660",
    "end": "194280"
  },
  {
    "text": "information about parameters passed into",
    "start": "194280",
    "end": "195990"
  },
  {
    "text": "the function required output schema and",
    "start": "195990",
    "end": "198120"
  },
  {
    "text": "behavior of the function with respect to",
    "start": "198120",
    "end": "199980"
  },
  {
    "text": "interpretation by other AWS services",
    "start": "199980",
    "end": "204200"
  },
  {
    "text": "let's add the custom logic necessary to",
    "start": "204920",
    "end": "207140"
  },
  {
    "text": "determine ec2 instance type compliance",
    "start": "207140",
    "end": "211420"
  },
  {
    "text": "this logic checks whether the resource",
    "start": "212140",
    "end": "214060"
  },
  {
    "text": "type being analyzed by the rule is an",
    "start": "214060",
    "end": "215890"
  },
  {
    "text": "ec2 instance if not it is deemed not",
    "start": "215890",
    "end": "218650"
  },
  {
    "text": "applicable and the rule returns no",
    "start": "218650",
    "end": "220300"
  },
  {
    "text": "compliance status let's add code for",
    "start": "220300",
    "end": "222910"
  },
  {
    "text": "what should be done if the resource is",
    "start": "222910",
    "end": "224260"
  },
  {
    "text": "discovered to be an ec2 instance",
    "start": "224260",
    "end": "227130"
  },
  {
    "text": "this logic checks whether the instance",
    "start": "227130",
    "end": "229170"
  },
  {
    "text": "has an instance type of t2 micro as we",
    "start": "229170",
    "end": "231810"
  },
  {
    "text": "previously defined in the input",
    "start": "231810",
    "end": "233160"
  },
  {
    "text": "parameters if so the rule returns a",
    "start": "233160",
    "end": "235620"
  },
  {
    "text": "compliance status of compliant now let's",
    "start": "235620",
    "end": "238590"
  },
  {
    "text": "add code for what should be done if the",
    "start": "238590",
    "end": "240210"
  },
  {
    "text": "instance does not match the desired",
    "start": "240210",
    "end": "241770"
  },
  {
    "text": "instance type",
    "start": "241770",
    "end": "243410"
  },
  {
    "text": "if the ec2 instance does not match our",
    "start": "243410",
    "end": "245750"
  },
  {
    "text": "desired instance type the rule will",
    "start": "245750",
    "end": "247670"
  },
  {
    "text": "return a compliance status of",
    "start": "247670",
    "end": "249080"
  },
  {
    "text": "non-compliant more complex logic and",
    "start": "249080",
    "end": "252350"
  },
  {
    "text": "further conditional statements can be",
    "start": "252350",
    "end": "253580"
  },
  {
    "text": "added and other properties and resource",
    "start": "253580",
    "end": "255500"
  },
  {
    "text": "types can be analyzed in this case let's",
    "start": "255500",
    "end": "258140"
  },
  {
    "text": "move on",
    "start": "258140",
    "end": "260470"
  },
  {
    "text": "you can also optionally define your own",
    "start": "261609",
    "end": "263770"
  },
  {
    "text": "unit tests to ensure the compliance",
    "start": "263770",
    "end": "265479"
  },
  {
    "text": "reports return the results you expect",
    "start": "265479",
    "end": "267250"
  },
  {
    "text": "for our purposes let's continue and take",
    "start": "267250",
    "end": "269830"
  },
  {
    "text": "a look at the parameters template",
    "start": "269830",
    "end": "273120"
  },
  {
    "text": "this template was automatically created",
    "start": "273780",
    "end": "275850"
  },
  {
    "text": "with the parameters we specified upon",
    "start": "275850",
    "end": "277470"
  },
  {
    "text": "creation of the rule notice what that we",
    "start": "277470",
    "end": "279780"
  },
  {
    "text": "specified an association between desire",
    "start": "279780",
    "end": "281880"
  },
  {
    "text": "to instant type and T to not micro under",
    "start": "281880",
    "end": "284400"
  },
  {
    "text": "the input parameters field these",
    "start": "284400",
    "end": "286680"
  },
  {
    "text": "parameters were used in the rule code we",
    "start": "286680",
    "end": "288450"
  },
  {
    "text": "added earlier next let's return to the",
    "start": "288450",
    "end": "291240"
  },
  {
    "text": "command prompt to test the rule",
    "start": "291240",
    "end": "294590"
  },
  {
    "text": "let's test this rule using the tests in",
    "start": "295500",
    "end": "297600"
  },
  {
    "text": "the predefined template",
    "start": "297600",
    "end": "300680"
  },
  {
    "text": "ask the tests",
    "start": "301070",
    "end": "302770"
  },
  {
    "text": "rules can also be modified through the",
    "start": "302770",
    "end": "304750"
  },
  {
    "text": "command line using the modify command",
    "start": "304750",
    "end": "306580"
  },
  {
    "text": "any parameters you specify that differ",
    "start": "306580",
    "end": "309099"
  },
  {
    "text": "from those outlined in the parameters",
    "start": "309099",
    "end": "310629"
  },
  {
    "text": "file will be updated",
    "start": "310629",
    "end": "311800"
  },
  {
    "text": "whereas non specified parameters will be",
    "start": "311800",
    "end": "313810"
  },
  {
    "text": "unaffected",
    "start": "313810",
    "end": "315520"
  },
  {
    "text": "in this case let's update the frequency",
    "start": "315520",
    "end": "317740"
  },
  {
    "text": "of compliance checks to one hour without",
    "start": "317740",
    "end": "320139"
  },
  {
    "text": "a specified frequency rules will only",
    "start": "320139",
    "end": "322330"
  },
  {
    "text": "detect compliance based on configuration",
    "start": "322330",
    "end": "324340"
  },
  {
    "text": "changes",
    "start": "324340",
    "end": "325940"
  },
  {
    "text": "the rule has been successfully modified",
    "start": "325940",
    "end": "329020"
  },
  {
    "text": "note that your rule must be deployed",
    "start": "329020",
    "end": "331030"
  },
  {
    "text": "beforehand has any effect on the rules",
    "start": "331030",
    "end": "332800"
  },
  {
    "text": "as they exist in AWS config let's do so",
    "start": "332800",
    "end": "336069"
  },
  {
    "text": "now using the deploy command",
    "start": "336069",
    "end": "339479"
  },
  {
    "text": "the deployment is complete let's go to",
    "start": "339860",
    "end": "342169"
  },
  {
    "text": "AWS config to see the newly created rule",
    "start": "342169",
    "end": "346419"
  },
  {
    "text": "refresh the page",
    "start": "347300",
    "end": "350470"
  },
  {
    "text": "as you can see the new rule is now",
    "start": "350580",
    "end": "352770"
  },
  {
    "text": "present in AWS config let's look at its",
    "start": "352770",
    "end": "355289"
  },
  {
    "text": "compliance report",
    "start": "355289",
    "end": "358129"
  },
  {
    "text": "notice that all resources in the scope",
    "start": "361190",
    "end": "363290"
  },
  {
    "text": "of this newly created rule are ec2",
    "start": "363290",
    "end": "365270"
  },
  {
    "text": "instances as expected since we specified",
    "start": "365270",
    "end": "368180"
  },
  {
    "text": "T 2 dot micro as our desired instance",
    "start": "368180",
    "end": "370430"
  },
  {
    "text": "type let's check to confirm that this",
    "start": "370430",
    "end": "372200"
  },
  {
    "text": "non-compliant instance has a differing",
    "start": "372200",
    "end": "374030"
  },
  {
    "text": "instance type",
    "start": "374030",
    "end": "376600"
  },
  {
    "text": "as expected the instance type is not t 2",
    "start": "377380",
    "end": "380290"
  },
  {
    "text": "dot micro but T 2 not small next let's",
    "start": "380290",
    "end": "384070"
  },
  {
    "text": "navigate to cloud formation to see the",
    "start": "384070",
    "end": "386050"
  },
  {
    "text": "created cloud formation stack associated",
    "start": "386050",
    "end": "388210"
  },
  {
    "text": "with this rule",
    "start": "388210",
    "end": "389969"
  },
  {
    "text": "when you deploy a newly created rule",
    "start": "389969",
    "end": "391829"
  },
  {
    "text": "with the RDK a cloud formation stack is",
    "start": "391829",
    "end": "394169"
  },
  {
    "text": "automatically created to define the",
    "start": "394169",
    "end": "395999"
  },
  {
    "text": "resources necessary to deploy the rule",
    "start": "395999",
    "end": "397919"
  },
  {
    "text": "to AWS config let's navigate to the",
    "start": "397919",
    "end": "400919"
  },
  {
    "text": "resources tab to see what was created",
    "start": "400919",
    "end": "402869"
  },
  {
    "text": "for this rule",
    "start": "402869",
    "end": "405379"
  },
  {
    "text": "as you can see this cloud formation",
    "start": "406260",
    "end": "408270"
  },
  {
    "text": "stack created a lambda permission a",
    "start": "408270",
    "end": "409980"
  },
  {
    "text": "config rule an AWS I am role for lambda",
    "start": "409980",
    "end": "413010"
  },
  {
    "text": "and a lambda function let's take a brief",
    "start": "413010",
    "end": "415770"
  },
  {
    "text": "look at the lambda function",
    "start": "415770",
    "end": "418970"
  },
  {
    "text": "here's the function code for the defined",
    "start": "419710",
    "end": "421630"
  },
  {
    "text": "rule which is identical to the code we",
    "start": "421630",
    "end": "423580"
  },
  {
    "text": "saw earlier in the CLI",
    "start": "423580",
    "end": "426870"
  },
  {
    "text": "additional variables such as tags",
    "start": "428370",
    "end": "430470"
  },
  {
    "text": "associated with the rule or cloud",
    "start": "430470",
    "end": "432000"
  },
  {
    "text": "formation stack can be found here as",
    "start": "432000",
    "end": "433740"
  },
  {
    "text": "well",
    "start": "433740",
    "end": "435918"
  },
  {
    "text": "let's head back to the AWS CLI and make",
    "start": "437340",
    "end": "440130"
  },
  {
    "text": "a minor change in our AWS config rule to",
    "start": "440130",
    "end": "442560"
  },
  {
    "text": "see how it updates",
    "start": "442560",
    "end": "445250"
  },
  {
    "text": "let's go to the parameters file and",
    "start": "446010",
    "end": "447960"
  },
  {
    "text": "change the desired instance type to t2",
    "start": "447960",
    "end": "450090"
  },
  {
    "text": "dot small",
    "start": "450090",
    "end": "452630"
  },
  {
    "text": "we could have made the same change with",
    "start": "453540",
    "end": "455190"
  },
  {
    "text": "the command prompt using the modify",
    "start": "455190",
    "end": "456720"
  },
  {
    "text": "command",
    "start": "456720",
    "end": "458090"
  },
  {
    "text": "note that no changes will take place in",
    "start": "458090",
    "end": "460160"
  },
  {
    "text": "AWS config until this rule is redeployed",
    "start": "460160",
    "end": "462530"
  },
  {
    "text": "let's deploy it now",
    "start": "462530",
    "end": "465940"
  },
  {
    "text": "now that the rule has been deployed",
    "start": "469530",
    "end": "471060"
  },
  {
    "text": "again let's check the compliance report",
    "start": "471060",
    "end": "473040"
  },
  {
    "text": "in AWS config to see whether it has",
    "start": "473040",
    "end": "474870"
  },
  {
    "text": "changed",
    "start": "474870",
    "end": "476300"
  },
  {
    "text": "as you can see instead of the one",
    "start": "476300",
    "end": "478159"
  },
  {
    "text": "non-compliant resource we saw earlier we",
    "start": "478159",
    "end": "480229"
  },
  {
    "text": "now have four let's drill down",
    "start": "480229",
    "end": "483940"
  },
  {
    "text": "notice that the loan non-compliant",
    "start": "486120",
    "end": "488100"
  },
  {
    "text": "resource from before is now the loan",
    "start": "488100",
    "end": "489720"
  },
  {
    "text": "compliant resource let's check to make",
    "start": "489720",
    "end": "492240"
  },
  {
    "text": "sure it has an instance type of T 2 dot",
    "start": "492240",
    "end": "494160"
  },
  {
    "text": "small",
    "start": "494160",
    "end": "496550"
  },
  {
    "text": "as expected the instance type is t2 not",
    "start": "497330",
    "end": "500300"
  },
  {
    "text": "small which is compliant with the",
    "start": "500300",
    "end": "502039"
  },
  {
    "text": "updated version of the rule other",
    "start": "502039",
    "end": "504560"
  },
  {
    "text": "properties of our resource type as well",
    "start": "504560",
    "end": "506539"
  },
  {
    "text": "as relationships to other resource types",
    "start": "506539",
    "end": "508340"
  },
  {
    "text": "can be probed with our RDK rule and used",
    "start": "508340",
    "end": "510860"
  },
  {
    "text": "to develop complex logic and determining",
    "start": "510860",
    "end": "512750"
  },
  {
    "text": "compliance let's return to the AWS CLI",
    "start": "512750",
    "end": "515360"
  },
  {
    "text": "to look at some examples of this logic",
    "start": "515360",
    "end": "517399"
  },
  {
    "text": "for ec2 instances",
    "start": "517399",
    "end": "520659"
  },
  {
    "text": "using the sample see I command you can",
    "start": "521510",
    "end": "523729"
  },
  {
    "text": "see various properties of a given",
    "start": "523729",
    "end": "525230"
  },
  {
    "text": "configuration item that can be called",
    "start": "525230",
    "end": "526820"
  },
  {
    "text": "from our code to develop complex logic",
    "start": "526820",
    "end": "528649"
  },
  {
    "text": "for compliance let's run it now for the",
    "start": "528649",
    "end": "531019"
  },
  {
    "text": "configuration item for ec2 instances",
    "start": "531019",
    "end": "535149"
  },
  {
    "text": "you've just seen how to simplify custom",
    "start": "535779",
    "end": "537910"
  },
  {
    "text": "rule creation using the AWS config rule",
    "start": "537910",
    "end": "540160"
  },
  {
    "text": "development kit",
    "start": "540160",
    "end": "541680"
  },
  {
    "text": "thanks for watching now it's your turn",
    "start": "541680",
    "end": "543510"
  },
  {
    "text": "to try",
    "start": "543510",
    "end": "545839"
  }
]