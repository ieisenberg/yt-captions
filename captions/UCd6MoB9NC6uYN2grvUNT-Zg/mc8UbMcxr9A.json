[
  {
    "text": "all right thank you for coming out my name is Carmen Puccio I'm a principal solutions architect here at AWS I'm",
    "start": "0",
    "end": "5279"
  },
  {
    "text": "joined with mandus Malmberg who's also a principal Solutions Architect and Peter hacked who's a is a senior Technical",
    "start": "5279",
    "end": "11400"
  },
  {
    "text": "Evangelist at dynaTrace I appreciate you guys coming out at lunchtime hopefully you find this talk interesting so what",
    "start": "11400",
    "end": "16949"
  },
  {
    "text": "we're going to talk about today is essentially how can you take your traditional application and move it towards a containerized workload but",
    "start": "16949",
    "end": "22619"
  },
  {
    "text": "specifically we're gonna figure out how to break down a monolith right so when we start thinking about like mass migrations or any kind of migration",
    "start": "22619",
    "end": "28859"
  },
  {
    "text": "especially specifically like the the the legacy IT real-estate you run into these",
    "start": "28859",
    "end": "34469"
  },
  {
    "text": "monolithic architectures and a lot of people are trying to figure out how to move them over and they want to take advantage of the cloud they want to take",
    "start": "34469",
    "end": "40440"
  },
  {
    "text": "advantage of things like containers and server lists but they don't necessarily know how to break these things apart so we're gonna show you guys how to do that",
    "start": "40440",
    "end": "46110"
  },
  {
    "text": "today so we have quite a bit of slides and then we're gonna get into a demo right so to start it off we'll just give",
    "start": "46110",
    "end": "51629"
  },
  {
    "text": "you this nice little introduction here's the model that's right I'm not gonna read this for you this was from Wikipedia but essentially we all know",
    "start": "51629",
    "end": "57870"
  },
  {
    "text": "what a monolith is right it's this tightly coupled thing it's it's inside your data center it's probably been there for years you know your",
    "start": "57870",
    "end": "63510"
  },
  {
    "text": "development teams probably don't even exist anymore the people that originally build it but you still want to move it right so it has pros and cons and right",
    "start": "63510",
    "end": "71520"
  },
  {
    "text": "here so again I'm not going to necessarily read this to you but mandus who is our developer advocate and",
    "start": "71520",
    "end": "76740"
  },
  {
    "text": "he actually built the monolith right I'm gonna ask him a question it's like manis mm-hmm it's like a case this is a case",
    "start": "76740",
    "end": "82710"
  },
  {
    "text": "study but type of thing so so mandus so we have our example application right and it's our booking service and I saw",
    "start": "82710",
    "end": "90090"
  },
  {
    "text": "AWS personalized and I want to be able to start making recommendations inside of it how long would it take you to",
    "start": "90090",
    "end": "95520"
  },
  {
    "text": "actually put something in place if we wanted it out by Christmas with our monolithic application I mean that's a great idea we can predict and we can",
    "start": "95520",
    "end": "101579"
  },
  {
    "text": "suggest some some vacations to people that's a good idea I mean we could get it out there on the hall for the second",
    "start": "101579",
    "end": "107820"
  },
  {
    "text": "or 2019 yeah but I need it in like the next two weeks why is it gonna take so long because it takes about three days",
    "start": "107820",
    "end": "113670"
  },
  {
    "text": "to compile and then we have to go through technical testing and those things it takes us a while what happens if I get you more hardware we're kind of",
    "start": "113670",
    "end": "120780"
  },
  {
    "text": "at the limit of vertical scaling right now but we're told that in six years you know quantum computing will be available and they will be yeah so you",
    "start": "120780",
    "end": "128970"
  },
  {
    "text": "get it right so there's all these challenges that come along with and you don't want to run into these things you want to figure out how you",
    "start": "128970",
    "end": "134370"
  },
  {
    "text": "can do this stuff quickly you want to figure out how you can have all of these pieces broken apart and move its scale right so that's what we're going to talk",
    "start": "134370",
    "end": "141150"
  },
  {
    "text": "to you about today right so if you look at the development lifecycle it's essentially the same thing right you",
    "start": "141150",
    "end": "146370"
  },
  {
    "text": "have your developers you have your model if they're still building they're still testing and they're still releasing code the one thing that's tough here is",
    "start": "146370",
    "end": "152190"
  },
  {
    "text": "everything's self-contained the test process takes a really long time and there's all these interdependent components right and we want to figure",
    "start": "152190",
    "end": "157890"
  },
  {
    "text": "out how to break that so you can actually make this process quicker so why should I migrate it right so before",
    "start": "157890",
    "end": "164160"
  },
  {
    "text": "I get into the house right we want to talk about things from the mass migration team because we feel that the",
    "start": "164160",
    "end": "169470"
  },
  {
    "text": "principles that we learned from that team are relevant here as well right so mandus and I both come from that team we're also on the AWS container team but",
    "start": "169470",
    "end": "176790"
  },
  {
    "text": "what you're seeing here is our ours right so this is from Gartner we've publicized this out a million times and",
    "start": "176790",
    "end": "181890"
  },
  {
    "text": "you know it's there's no right path here right we talked about the planning we talked about the strategy we talked",
    "start": "181890",
    "end": "187980"
  },
  {
    "text": "about all the things that go into place that essentially moving workloads over at scale and just because one path is shorter than the other or at least it",
    "start": "187980",
    "end": "194070"
  },
  {
    "text": "seems to be shorter doesn't mean it's necessarily the best path right so we really want to attack it like in",
    "start": "194070",
    "end": "199620"
  },
  {
    "text": "multiple phases and that's what we do here and over the course of like the last two and a half years we have this",
    "start": "199620",
    "end": "205890"
  },
  {
    "text": "this process and this process we call it our mental model and we go from a point of evaluating what we have planning it",
    "start": "205890",
    "end": "212340"
  },
  {
    "text": "out designing migrating and optimizing right so essentially like how do I understand what I have inside my data",
    "start": "212340",
    "end": "218700"
  },
  {
    "text": "center how do I understand what my monolith is doing and how do I use that to kind of break it apart and come apart",
    "start": "218700",
    "end": "224070"
  },
  {
    "text": "with a migration strategy to either pick it up potentially as is or how do I pick it up and maybe break out certain pieces",
    "start": "224070",
    "end": "230370"
  },
  {
    "text": "and move it into a containerized workload and then after I've done that how do i optimize after a fact right so",
    "start": "230370",
    "end": "237180"
  },
  {
    "text": "we're really gonna focus on this discover and plan piece right so we really really feel that before do you",
    "start": "237180",
    "end": "243450"
  },
  {
    "text": "move anything out of your data center and you move these applications over you need to know every single thing this application is doing it's not just from",
    "start": "243450",
    "end": "249870"
  },
  {
    "text": "the CPU and memory and disk and network perspective it's all the way down to the code what's it interacting with what's",
    "start": "249870",
    "end": "255690"
  },
  {
    "text": "the latency like are things tightly coupled or things loosely coupled right you really want to go into that level of",
    "start": "255690",
    "end": "261000"
  },
  {
    "text": "detail and there's tools that can help you do that and that's what we're gonna show you today so these questions are universal so",
    "start": "261000",
    "end": "267900"
  },
  {
    "text": "whether you're going from on-premise monolith to containerized services to cloud native right you have to answer",
    "start": "267900",
    "end": "273810"
  },
  {
    "text": "these questions before you even think about moving you have to answer these questions even after you've moved right so these these are like think of these",
    "start": "273810",
    "end": "279870"
  },
  {
    "text": "is like your Universal theme right so then this topic comes up should I consider containers as part of my",
    "start": "279870",
    "end": "285870"
  },
  {
    "text": "strategy people hear about this lift and shift right pick things up move it over AWS is the server migration service it",
    "start": "285870",
    "end": "291990"
  },
  {
    "text": "allows you to pick your application up you know basically in this this mirror copy think of it as like a VM copy or a",
    "start": "291990",
    "end": "298020"
  },
  {
    "text": "VM snapshot of your machine into AWS when you see two instance but can you move your applications over to a",
    "start": "298020",
    "end": "303300"
  },
  {
    "text": "container right and mandus is gonna give you a little bit about that yeah that's kind of interesting you saw the 6oz on",
    "start": "303300",
    "end": "308759"
  },
  {
    "text": "this on the screen there we're common psychobot and that's we're traditionally being left and shifts we spoken about URI host right and we've been kind of",
    "start": "308759",
    "end": "315210"
  },
  {
    "text": "looking and talking about maybe adding a seventh one or maybe calling it something like refits where you do a lot",
    "start": "315210",
    "end": "321210"
  },
  {
    "text": "of the same steps that you would do in lift and shift without changing any of the code in your application in your",
    "start": "321210",
    "end": "326430"
  },
  {
    "text": "monolith but you refits it and put it into a container because containers lend to that ability so once you refit it you",
    "start": "326430",
    "end": "333089"
  },
  {
    "text": "put the monolithic application as it is and run it in the container but that container now that it has that shippable",
    "start": "333089",
    "end": "339300"
  },
  {
    "text": "characteristic it allows you to achieve a couple of things that we think is core",
    "start": "339300",
    "end": "344520"
  },
  {
    "text": "to success and its core to making that migration a true digital modernization of your business and those core tenets",
    "start": "344520",
    "end": "350490"
  },
  {
    "text": "are those things that make you more elastic that helps you be highly available but more specifically and most",
    "start": "350490",
    "end": "356699"
  },
  {
    "text": "importantly give you agility so how do you get that from a container platform right in a container platform just by",
    "start": "356699",
    "end": "363629"
  },
  {
    "text": "adding that binary or that monolithic application into a container you kind of accelerate the development because the",
    "start": "363629",
    "end": "369120"
  },
  {
    "text": "time it takes for you to share the code to mimic the code in the experience of that application inside of your developer environments and making sure",
    "start": "369120",
    "end": "375629"
  },
  {
    "text": "that it has the unified experience in the production environment already accelerates so you already immediately",
    "start": "375629",
    "end": "381509"
  },
  {
    "text": "gained some agility in your business it allows you to faster iterate on your application make changes more quickly",
    "start": "381509",
    "end": "386729"
  },
  {
    "text": "even if it's still in that monolithic state and if with that fast iteration and that easier adoption for your",
    "start": "386729",
    "end": "392819"
  },
  {
    "text": "developers and your engineers you can start breaking out that monolith a little bit faster so",
    "start": "392819",
    "end": "398009"
  },
  {
    "text": "the first tip is get it into the container and then learn what your applications doing right like you have to understand what's actually happening",
    "start": "398009",
    "end": "403800"
  },
  {
    "text": "inside of your container so we have many customers running containers on AWS there's been a lot of resources and a",
    "start": "403800",
    "end": "409740"
  },
  {
    "text": "lot of research done that shows that the most cost of the most containers in the world are currently running on AWS",
    "start": "409740",
    "end": "415229"
  },
  {
    "text": "it's the perfect modularity for cloud computing we talk about elasticity and agility and scaling and being able to",
    "start": "415229",
    "end": "421740"
  },
  {
    "text": "scale down when it's required but what does containers really really give me",
    "start": "421740",
    "end": "427139"
  },
  {
    "text": "like we've spoken a little bit about agility and it gives you that ability to iterate quickly but why should I still",
    "start": "427139",
    "end": "432389"
  },
  {
    "text": "do that because I can technically do that with a bunch of VMs I can take Nikki pic to take my application package",
    "start": "432389",
    "end": "437699"
  },
  {
    "text": "into an ami and then run it on my VM well the cost saving opportunities in something like burn packing or alone is",
    "start": "437699",
    "end": "445199"
  },
  {
    "text": "worth investing in containers because you can now run multiple versions of the same application with different",
    "start": "445199",
    "end": "451259"
  },
  {
    "text": "dependencies on the same host it exponentially saves the effort and cost",
    "start": "451259",
    "end": "456539"
  },
  {
    "text": "of your infrastructure it also breaks down on effort because now once you build a container image that has the",
    "start": "456539",
    "end": "462779"
  },
  {
    "text": "requirements or the basic requirements for something like app monitoring security or it in compliance into what",
    "start": "462779",
    "end": "468689"
  },
  {
    "text": "we call a container layer your teams across all of your business units can consume that same layer and don't need",
    "start": "468689",
    "end": "475110"
  },
  {
    "text": "to invest time in R&D and also building out that layer themselves so you might have this initial investment where you",
    "start": "475110",
    "end": "481289"
  },
  {
    "text": "might put some time into R&D for building those base layers but once that those layers are secured they're inside",
    "start": "481289",
    "end": "487199"
  },
  {
    "text": "of your security teams repositories they're inside of your deployment repositories accelerating development for your application engineers and for",
    "start": "487199",
    "end": "494339"
  },
  {
    "text": "your product owners exponentially picks up and that effort that you break down saves you cost and obviously the",
    "start": "494339",
    "end": "500939"
  },
  {
    "text": "simplification of maintenance through the orchestration layers that you use now that's also where we as Amazon kind",
    "start": "500939",
    "end": "507360"
  },
  {
    "text": "of stepped in and try to make the orchestration of containers a lot easier for you because running a container on a",
    "start": "507360",
    "end": "512849"
  },
  {
    "text": "developer's laptop that's easy I mean you can do that in a couple of seconds and there's some great tooling to do that but running a container at scale",
    "start": "512849",
    "end": "519839"
  },
  {
    "text": "with thousands of applications and thousands of containers across hundreds of hosts or thousands of hosts get complicated",
    "start": "519839",
    "end": "525600"
  },
  {
    "text": "so the deployment benefits that we want to do is we want to create an automated pipeline where we shift some of the",
    "start": "525600",
    "end": "531190"
  },
  {
    "text": "responsibilities of that application experience where the customer interacts with the application to the left of the",
    "start": "531190",
    "end": "538150"
  },
  {
    "text": "pipeline where the developer sets now we did something interesting at Amazon a couple years ago when we were modernizing our business and when we",
    "start": "538150",
    "end": "544690"
  },
  {
    "text": "were transforming and breaking down our monolith our monolith was called obidos you can look it up on Wikipedia and we",
    "start": "544690",
    "end": "551200"
  },
  {
    "text": "created something called cells but today it's more commonly known as micro-services but we decided to give",
    "start": "551200",
    "end": "557050"
  },
  {
    "text": "our developers the responsibility not only for the code of the application but also the experience that the customers",
    "start": "557050",
    "end": "562690"
  },
  {
    "text": "have running their application or working with application and we found something very interesting happening we",
    "start": "562690",
    "end": "567850"
  },
  {
    "text": "actually found out developers started writing beta code and they started writing code faster because none of the",
    "start": "567850",
    "end": "574630"
  },
  {
    "text": "developers wanted to get paged at like 3 a.m. in the morning because the application went down due to bad code so",
    "start": "574630",
    "end": "580570"
  },
  {
    "text": "with containers you can accelerate this ownership moving to the left and building out the resources inside of",
    "start": "580570",
    "end": "587290"
  },
  {
    "text": "your code repositories securing it checking it automatically in the pipeline's pushing it to something like an image",
    "start": "587290",
    "end": "592540"
  },
  {
    "text": "repository in ECR and then deploying it at scale across any of the variety of managed container services that we have",
    "start": "592540",
    "end": "600310"
  },
  {
    "text": "for example we have Amazon ECS and then we have Amazon container services for kubernetes which is our managed",
    "start": "600310",
    "end": "606550"
  },
  {
    "text": "kubernetes officer offering also known as eks where you manage your ec2 infrastructure but we manage the control",
    "start": "606550",
    "end": "613240"
  },
  {
    "text": "plane for you we manage all the heavy lifting around making sure the orchestration itself works as expected",
    "start": "613240",
    "end": "618640"
  },
  {
    "text": "and we do all the security and in-place attachments and things like that for you then we have something called AWS",
    "start": "618640",
    "end": "624730"
  },
  {
    "text": "Fargate which is a subset of Amazon UCS which not only manages the control plane for you but also manages the worker",
    "start": "624730",
    "end": "631750"
  },
  {
    "text": "nodes where your applications will be running it's really this experience of here's my application in a container I",
    "start": "631750",
    "end": "637810"
  },
  {
    "text": "give it to Amazon run it I don't care where just run it for me I don't care where you're running it I just want my",
    "start": "637810",
    "end": "643450"
  },
  {
    "text": "application to run and that just accelerates that deployment and that iteration and that agility that we spoke",
    "start": "643450",
    "end": "649000"
  },
  {
    "text": "about a little bit earlier so a modern development lifecycle actually happens in something we call a multi high",
    "start": "649000",
    "end": "655410"
  },
  {
    "text": "multi-lane highway deployment solution where you have multiple developers working on the same applications at the",
    "start": "655410",
    "end": "661810"
  },
  {
    "text": "same time running through tests bolding testing and releasing at the same time you have to do it in a synchronous",
    "start": "661810",
    "end": "669040"
  },
  {
    "text": "asynchronous manner at that or an asynchronous manner at the same time with synchronous results and that can be",
    "start": "669040",
    "end": "674439"
  },
  {
    "text": "difficult especially if you want to start integrating and making sure that you comply to things like PCI compliance",
    "start": "674439",
    "end": "680379"
  },
  {
    "text": "or even making sure that your security tests and TVs and those type of things aren't being affected so roading",
    "start": "680379",
    "end": "686470"
  },
  {
    "text": "deployments is one of the huge benefits that you have with containers we've all done running the point",
    "start": "686470",
    "end": "691600"
  },
  {
    "text": "deployments with ec2 instances we've done it with on-premises we've always got these convoluted playbooks and",
    "start": "691600",
    "end": "696670"
  },
  {
    "text": "different tools where we have to retire and we have to drain connections and",
    "start": "696670",
    "end": "701679"
  },
  {
    "text": "push out all of these things and it's always a pain it's never an easy thing containers have made it so much easier because you have this one idempotent",
    "start": "701679",
    "end": "709029"
  },
  {
    "text": "module of ship ability that is called a container it sits in a very highly scalable very active image repository",
    "start": "709029",
    "end": "716499"
  },
  {
    "text": "which is managed for you in Amazon by it called Amazon ECR and that image gets",
    "start": "716499",
    "end": "721839"
  },
  {
    "text": "deployed to hundreds of nodes automatically through the orchestration system so service a can be set to do a",
    "start": "721839",
    "end": "729040"
  },
  {
    "text": "certain desired counter for basic deployment if you know that you have an always running cluster that has a",
    "start": "729040",
    "end": "735220"
  },
  {
    "text": "minimum requirement you set that desired count as four but you can also then have four containers and the system will make",
    "start": "735220",
    "end": "741339"
  },
  {
    "text": "sure that if a container fails that it gets replaced if something happens but now you want to independently scale that",
    "start": "741339",
    "end": "748360"
  },
  {
    "text": "as requests come up so you enable all scaling and that will add more containers from that same image that you",
    "start": "748360",
    "end": "755290"
  },
  {
    "text": "know will act exactly the same way when you deploy it into your cluster and scale requests across all of these new",
    "start": "755290",
    "end": "761919"
  },
  {
    "text": "containers so now that will make sure that when the minimum health capacity or the minimum healthy capacity is 75% it",
    "start": "761919",
    "end": "769329"
  },
  {
    "text": "basically just strings down and you have less containers inside of that environment or it grows out as well if",
    "start": "769329",
    "end": "775149"
  },
  {
    "text": "you need to so that's a rolling deployment right so we basically make sure that we always have a certain",
    "start": "775149",
    "end": "781209"
  },
  {
    "text": "amount of containers running so we have a minimum health capacity of 75 contains the same containers running the latest",
    "start": "781209",
    "end": "786369"
  },
  {
    "text": "version and we replace in process without needing to switch over any of our deployment functions we have canary",
    "start": "786369",
    "end": "793240"
  },
  {
    "text": "deployments which is also a very common deployment where you do testing and the failure and we can actually use our service",
    "start": "793240",
    "end": "798630"
  },
  {
    "text": "route 53 where it does health checks against certain end points and if it detects a failure automatically changes",
    "start": "798630",
    "end": "804750"
  },
  {
    "text": "DNA's to another load balancer and it connects to the skin to that new end point that we know is all available and",
    "start": "804750",
    "end": "810839"
  },
  {
    "text": "again because we have the ship ability in the container we can deploy the application across multiple regions and",
    "start": "810839",
    "end": "816540"
  },
  {
    "text": "not just availability zones so you're no longer restricted by things like EBS volumes that only allow you to launch",
    "start": "816540",
    "end": "822839"
  },
  {
    "text": "that same instance with the same image in the same availability zone now with a container you can quite literally deploy",
    "start": "822839",
    "end": "829350"
  },
  {
    "text": "your container in any region flip over the DNS records and have the same customer experience that they had in the",
    "start": "829350",
    "end": "835290"
  },
  {
    "text": "failing region so where do I start well the first thing you have to do is",
    "start": "835290",
    "end": "841470"
  },
  {
    "text": "you have to understand what your monolith is doing we have this premise that you have to understand what you're",
    "start": "841470",
    "end": "846600"
  },
  {
    "text": "doing so investigate what you're doing take one small step further go forward make",
    "start": "846600",
    "end": "851850"
  },
  {
    "text": "one small change reevaluate where you are and then do that again right so it's figure out",
    "start": "851850",
    "end": "857790"
  },
  {
    "text": "where I am make a change evaluate where I am again and reiterate and the best",
    "start": "857790",
    "end": "863190"
  },
  {
    "text": "way to do that or actually the only way to do that is to use data because we all have a gut feeling of what to do but we",
    "start": "863190",
    "end": "869100"
  },
  {
    "text": "really need to do date to have the data to tell us what our applications are doing so our partners on dynaTrace",
    "start": "869100",
    "end": "875520"
  },
  {
    "text": "really gives us the ability to introspect into discovering our workloads yeah yeah so to go one step",
    "start": "875520",
    "end": "881040"
  },
  {
    "text": "further on that right because again you know you don't want to be interviewing people you don't want to rely on cmdbs",
    "start": "881040",
    "end": "886500"
  },
  {
    "text": "or decentralised you know they're they're out of date you don't have the metrics you need to essentially break this thing apart it needs to be a",
    "start": "886500",
    "end": "892290"
  },
  {
    "text": "data-driven result so again when we talked about portfolio discovery in the traditional sense we would think about",
    "start": "892290",
    "end": "897690"
  },
  {
    "text": "like the application owners the environment you would look at things like CPU you would look at things that like memory you might want to start",
    "start": "897690",
    "end": "903930"
  },
  {
    "text": "thinking about right sizing things like that that's the traditional way of thinking about portfolio data discovery",
    "start": "903930",
    "end": "909329"
  },
  {
    "text": "at the same time you still need to think about the application connections when you think about an application specifically a monolith you want to know",
    "start": "909329",
    "end": "915690"
  },
  {
    "text": "all the pieces that are that are involved right so dependencies are super important and you still want to start to",
    "start": "915690",
    "end": "920820"
  },
  {
    "text": "think about the actual performance metrics right service naming and tagging is very important as well but really",
    "start": "920820",
    "end": "926279"
  },
  {
    "text": "these things that you've seen on these prior two slides these are helping you kind of get to a decision where you can figure out what first but in the context of breaking up",
    "start": "926279",
    "end": "933030"
  },
  {
    "text": "a monolith which we're gonna talk about in a second this is just the starting point right you need to go much much deeper than that right so again here's",
    "start": "933030",
    "end": "939840"
  },
  {
    "text": "just a couple of the partners that we work with in this space and some of the AWS tooling as well we're here to talk a",
    "start": "939840",
    "end": "945570"
  },
  {
    "text": "little bit about dynaTrace we're gonna let dynaTrace do their thing but again it needs to be a data-driven result so",
    "start": "945570",
    "end": "951090"
  },
  {
    "text": "if you want to get your application you want to take that monolith and break it apart start thinking about containers and we're gonna show you this in a demo",
    "start": "951090",
    "end": "957120"
  },
  {
    "text": "you need to use some sort of tool and dynaTrace in our case this is the example right so with that said I'm gonna pass it to Peter thanks Carmen yep",
    "start": "957120",
    "end": "963330"
  },
  {
    "text": "so hi my name is Peter hack I'm with Diana trace and so the real question is",
    "start": "963330",
    "end": "970410"
  },
  {
    "text": "where do you start right so when we look at this we we have kind of broken this out that what can dine and trace bring",
    "start": "970410",
    "end": "977460"
  },
  {
    "text": "to the table how does it help you to understand your applications and so this is the first part dynaTrace actually has",
    "start": "977460",
    "end": "985410"
  },
  {
    "text": "a smart scape and the smart scape will automatically discover all the dependencies that exist within your",
    "start": "985410",
    "end": "990480"
  },
  {
    "text": "environment so as those applications are talking to each other dynaTrace already instrumented them",
    "start": "990480",
    "end": "995700"
  },
  {
    "text": "automatically and through that we're able to discover all of the different dependency maps that exist for those",
    "start": "995700",
    "end": "1002180"
  },
  {
    "text": "applications how they're talking well how what's the most expensive etc so you're able to then from that level",
    "start": "1002180",
    "end": "1008180"
  },
  {
    "text": "using the AI we can analyze that and then use our automation API to help understand kind of if you're gonna make",
    "start": "1008180",
    "end": "1014840"
  },
  {
    "text": "these movements if you're gonna move things to for instance migrating into AWS or you're already an AWS and you",
    "start": "1014840",
    "end": "1021020"
  },
  {
    "text": "want to break things apart understanding is this talking my already s database am I using lambda if I want to use lambda",
    "start": "1021020",
    "end": "1026480"
  },
  {
    "text": "how does that work and can I understand the connections of those transactions so bad or worse during the during the",
    "start": "1026480",
    "end": "1032930"
  },
  {
    "text": "transition so it's kind of an example of our smart scape and as you can see this is all Auto discovered and what we're",
    "start": "1032930",
    "end": "1039350"
  },
  {
    "text": "actually presenting to you in this view is understanding kind of the full stack of your application so the service calls",
    "start": "1039350",
    "end": "1046430"
  },
  {
    "text": "the dependencies that exist in those service calls for instance the Tomcat instance in the middle and all of the",
    "start": "1046430",
    "end": "1052160"
  },
  {
    "text": "components that it relies upon so all those dependencies as well as on the left understanding where it's running is",
    "start": "1052160",
    "end": "1057980"
  },
  {
    "text": "it running on ec2 instances in your data center and understanding how those relationships are and at any layer",
    "start": "1057980",
    "end": "1064400"
  },
  {
    "text": "of that you can also see those dependencies so which hosts are talking to which hosts which processes are talking which processes so as an example",
    "start": "1064400",
    "end": "1073850"
  },
  {
    "text": "of this LAN Bay is a peer-to-peer lending company in the UK and they did a full migration from the monolith from",
    "start": "1073850",
    "end": "1080480"
  },
  {
    "text": "their existing environments directly into AWS and they use dynaTrace to do this and what was really important is",
    "start": "1080480",
    "end": "1087050"
  },
  {
    "text": "because we gave that full breadth of understanding of their application stacks of all the logging and all the",
    "start": "1087050",
    "end": "1092150"
  },
  {
    "text": "details they were able to very quickly migrate over in a matter of but I think it was like six weeks it was like a six",
    "start": "1092150",
    "end": "1098090"
  },
  {
    "text": "week adventure there's actually a you can go to our site and take a look at the case study on that as well but all",
    "start": "1098090",
    "end": "1105350"
  },
  {
    "text": "right so let's talk about this model that's right we're talking about - yep yep all right so when we're looking at a model it this is kind of the this is the",
    "start": "1105350",
    "end": "1111920"
  },
  {
    "text": "block version of it right you have endpoints that are talking to your application to your monolith and from",
    "start": "1111920",
    "end": "1118520"
  },
  {
    "text": "that inside there's a lot of different services going on and then those are have dependent services outside of this",
    "start": "1118520",
    "end": "1124460"
  },
  {
    "text": "so calling databases calling queues calling et cetera so how does the how does this work well so one of the things",
    "start": "1124460",
    "end": "1131150"
  },
  {
    "text": "that Andre says is well we can break that out so this as you can see is another kind of view of this but this is",
    "start": "1131150",
    "end": "1136550"
  },
  {
    "text": "from dynaTrace so looking at a service right the monolith this customer front-end we see the calling services",
    "start": "1136550",
    "end": "1142520"
  },
  {
    "text": "that are coming in we see all of the infrastructure that it lies on so these four tomcat instances below as well as",
    "start": "1142520",
    "end": "1149660"
  },
  {
    "text": "the host they're running on and to the right the dependencies that exist downstream so being able to see all of",
    "start": "1149660",
    "end": "1155840"
  },
  {
    "text": "these different components is really a key part of breaking up that monolith so",
    "start": "1155840",
    "end": "1162350"
  },
  {
    "text": "all of this data is discovered automatically and dynaTrace in addition to that is also discovering your endpoints so now you can also understand",
    "start": "1162350",
    "end": "1169340"
  },
  {
    "text": "what's my load on these endpoints which ones are my most expensive what makes the most sense to break out into a",
    "start": "1169340",
    "end": "1174350"
  },
  {
    "text": "monolith so Donna trace in this case is presenting a number of endpoints detecting those endpoints and showing",
    "start": "1174350",
    "end": "1179990"
  },
  {
    "text": "you detail about that so then we could take what's called a service flow and you can look at the service flow where",
    "start": "1179990",
    "end": "1186290"
  },
  {
    "text": "my endpoints are communicating downstream to other services in this case looking at my I have my front end",
    "start": "1186290",
    "end": "1192560"
  },
  {
    "text": "which is my monolith talking to back-end services and you'll see that we can see execution flow what how often it's",
    "start": "1192560",
    "end": "1199130"
  },
  {
    "text": "called how tightly coupled these services are and this gives us a lot of insight into what's going on in the",
    "start": "1199130",
    "end": "1205670"
  },
  {
    "text": "environment itself to take that a little further right if we look at it from the",
    "start": "1205670",
    "end": "1210770"
  },
  {
    "text": "dependency map we really get a true understanding of the dependencies of all of the calls that are being made from",
    "start": "1210770",
    "end": "1216530"
  },
  {
    "text": "that from that service right so it's not just my service calls another service",
    "start": "1216530",
    "end": "1221870"
  },
  {
    "text": "downstream it calls a number of other services downstream and being able to understand those patterns and those call",
    "start": "1221870",
    "end": "1226970"
  },
  {
    "text": "patterns have specific loads and how tightly coupled each of those services are dynaTrace can expose all that for",
    "start": "1226970",
    "end": "1233840"
  },
  {
    "text": "you through that service flow for each endpoint all right so what we learned",
    "start": "1233840",
    "end": "1239510"
  },
  {
    "text": "well we have a service and this is through dynaTrace able to discover for",
    "start": "1239510",
    "end": "1245360"
  },
  {
    "text": "you what that monolith looks like inside I see all of my endpoints there talking into dynaTrace pipes sorry I talk into",
    "start": "1245360",
    "end": "1251930"
  },
  {
    "text": "your monolith and nine trace has helped you to discover how those paths go what all those patterns look like so this can",
    "start": "1251930",
    "end": "1257900"
  },
  {
    "text": "help you then to discover which monolith I should break apart is it a problematic one I have a lot of errors on is it",
    "start": "1257900",
    "end": "1263150"
  },
  {
    "text": "something that consumes a lot of CPU maybe I want to move that out or are they tightly coupled services so when we",
    "start": "1263150",
    "end": "1270380"
  },
  {
    "text": "do this we kind of break this apart by the entry points so this is actually something in demonstrating the demo but",
    "start": "1270380",
    "end": "1276080"
  },
  {
    "text": "what is what are your what are your entry points inside the service those entry points represent all of the different service oriented architecture",
    "start": "1276080",
    "end": "1283070"
  },
  {
    "text": "built into your Mart might model it that you now want to break out into components that can be put into containers and deployed in an item",
    "start": "1283070",
    "end": "1290600"
  },
  {
    "text": "potent way outside of the service right so outside of that monolith built separately tested separately look you",
    "start": "1290600",
    "end": "1296030"
  },
  {
    "text": "know inside of your pipeline so how do we do this well first let's look at that",
    "start": "1296030",
    "end": "1301370"
  },
  {
    "text": "endpoint and figure out which methods which classes we're actually using is our entry point which ones are the most",
    "start": "1301370",
    "end": "1307130"
  },
  {
    "text": "expensive so we find an entry point that we want to package up and within that we",
    "start": "1307130",
    "end": "1312170"
  },
  {
    "text": "create rules around that entry point so anytime I see this entry point this class this method I want to use that as",
    "start": "1312170",
    "end": "1319550"
  },
  {
    "text": "a virtual service so within my monolith I'm without touching any code whatsoever",
    "start": "1319550",
    "end": "1324740"
  },
  {
    "text": "dynaTrace is providing you the ability to virtually break apart your monolith",
    "start": "1324740",
    "end": "1329900"
  },
  {
    "text": "and in doing so you then are able to see that we can now choose those different entry points now",
    "start": "1329900",
    "end": "1337040"
  },
  {
    "text": "the entry points here could have already been automatically discovered and displayed as services but at this point",
    "start": "1337040",
    "end": "1342650"
  },
  {
    "text": "I can choose maybe it's my journey or my booking that I want to move out as a as a separate service because those are",
    "start": "1342650",
    "end": "1348680"
  },
  {
    "text": "things that I'm seeing there are a lot of problems with or they're more likely they're better a candidate for instance",
    "start": "1348680",
    "end": "1354380"
  },
  {
    "text": "to be in a container running in a more accelerated development cycle so then we",
    "start": "1354380",
    "end": "1360680"
  },
  {
    "text": "essentially can refactor this and we can show as we work through the service as",
    "start": "1360680",
    "end": "1366590"
  },
  {
    "text": "the through the service flow we can actually understand our things tightly coupled is this actually a good",
    "start": "1366590",
    "end": "1372470"
  },
  {
    "text": "candidate if something is talking a hundred percent to each other you know one service is talking to another service inside the monolith that uh you",
    "start": "1372470",
    "end": "1378380"
  },
  {
    "text": "know 100 percent of the time do I really want to break it apart because now I'm moving out of in-memory communication to",
    "start": "1378380",
    "end": "1384440"
  },
  {
    "text": "network based communication container container and and that could actually introduce latency and things like that",
    "start": "1384440",
    "end": "1389750"
  },
  {
    "text": "that we don't want to so this dynaTrace is giving you the ability to choose in an intelligent way through the data of",
    "start": "1389750",
    "end": "1395360"
  },
  {
    "text": "what is the right piece to break apart of course afterwards we can also show",
    "start": "1395360",
    "end": "1402260"
  },
  {
    "text": "you the performance of that service beforehand and after so as you make those changes dynaTrace can help you to",
    "start": "1402260",
    "end": "1408230"
  },
  {
    "text": "balance and actually compare the performance before and after and if we have a lot of errors if there's",
    "start": "1408230",
    "end": "1413300"
  },
  {
    "text": "increased CPU consumption we want to be able to present that to you as well and",
    "start": "1413300",
    "end": "1418820"
  },
  {
    "text": "in addition from the container monitoring in addition to our AWS integration that we can provide a lot of",
    "start": "1418820",
    "end": "1424190"
  },
  {
    "text": "details on we also can see an auto discover all the containerized applications themselves and be able to",
    "start": "1424190",
    "end": "1430550"
  },
  {
    "text": "show a service monitoring within those containers also with also no changes to your code your images you don't have to",
    "start": "1430550",
    "end": "1436580"
  },
  {
    "text": "rebuild your images with an agent or anything it's all part of the it's all part of the one agent that dynaTrace",
    "start": "1436580",
    "end": "1441950"
  },
  {
    "text": "provides and actually in the demo we'll go through a little bit of this right so by quick show of hands how many of the",
    "start": "1441950",
    "end": "1448730"
  },
  {
    "text": "people in the audience actually have been working with containers and are familiar with containers ok so at least",
    "start": "1448730",
    "end": "1455300"
  },
  {
    "text": "most of people here know what a docker file is and how a docker image works great because we do speak about it and",
    "start": "1455300",
    "end": "1462640"
  },
  {
    "text": "we show it in the video okay so let's kick off this video this",
    "start": "1462640",
    "end": "1468320"
  },
  {
    "text": "the first portion is basically just the discovery there we go okay so what this",
    "start": "1468320",
    "end": "1474770"
  },
  {
    "text": "video is gonna go fast to follow along we're installing in one agent how do you do it well with an ec2 instance it's",
    "start": "1474770",
    "end": "1480260"
  },
  {
    "text": "actually quite easy we just grab our Linux install our data put it into the user data of your ec2 instance and then",
    "start": "1480260",
    "end": "1487010"
  },
  {
    "text": "when you deploy that instance it'll automatically come up with the agent installed so then we can automatically",
    "start": "1487010",
    "end": "1492080"
  },
  {
    "text": "present that data to you as well so what is the one agent oh sorry yeah so for those of you not familiar with dynaTrace",
    "start": "1492080",
    "end": "1498050"
  },
  {
    "text": "we have a single agent that you install into the nodes where your applications are running in this case an ec2 instance",
    "start": "1498050",
    "end": "1503900"
  },
  {
    "text": "but we also support through the one agent a number of other technologies and containers and otherwise the value of",
    "start": "1503900",
    "end": "1509270"
  },
  {
    "text": "this though is it covers all of the technologies Java PHP da no js' etc so through doing this model you can do the",
    "start": "1509270",
    "end": "1516680"
  },
  {
    "text": "monolith whether it is any of those application technologies ok ok so we",
    "start": "1516680",
    "end": "1522890"
  },
  {
    "text": "have our now or all the specific metric data around our host that's all to automatically discover it out of the one",
    "start": "1522890",
    "end": "1528710"
  },
  {
    "text": "agent but in addition to that we're also able to discover all the processes that are running on that hose and for dotnet",
    "start": "1528710",
    "end": "1533930"
  },
  {
    "text": "job etc we're automatically able to instrument them as well so we see we have this front end this is my front end",
    "start": "1533930",
    "end": "1539960"
  },
  {
    "text": "is a because my monolith and we're gonna start exploring that data so we look at",
    "start": "1539960",
    "end": "1545090"
  },
  {
    "text": "the specific host we look at the front end monolith data here and we're able to",
    "start": "1545090",
    "end": "1550910"
  },
  {
    "text": "discover all the endpoints all of the metrics the response times request data etcetera all of the again all of the",
    "start": "1550910",
    "end": "1558070"
  },
  {
    "text": "service dependencies that exist between the different calls to this service as",
    "start": "1558070",
    "end": "1563150"
  },
  {
    "text": "well or this process as well as out and the service layer below we're able to see the specific services that we want",
    "start": "1563150",
    "end": "1569630"
  },
  {
    "text": "to present then of course all of this data is presented as well in the smart scape now the smart scape is a pretty",
    "start": "1569630",
    "end": "1575210"
  },
  {
    "text": "picture but there's a lot going on here and we can present to you all of the stack data understanding you know top to",
    "start": "1575210",
    "end": "1581600"
  },
  {
    "text": "bottom where my applications are running what service endpoints are exposed what processes they're running on which hosts",
    "start": "1581600",
    "end": "1586730"
  },
  {
    "text": "in which data centers and all of this is automatically discovered by that one agent as well so when we look",
    "start": "1586730",
    "end": "1592010"
  },
  {
    "text": "specifically at a particular Tomcat I have a full stack view of that Tomcat instance as well as all of",
    "start": "1592010",
    "end": "1597470"
  },
  {
    "text": "dependencies that exist for that Tomcat instance specifically in this case my front end so there's my monolith so what",
    "start": "1597470",
    "end": "1603710"
  },
  {
    "text": "are we gonna do when we look at this particular monolith I have my as you saw earlier my incoming service calls my",
    "start": "1603710",
    "end": "1609799"
  },
  {
    "text": "outgoing service calls and I can look at all of the requests for this particular monolith and in that I'm looking down at",
    "start": "1609799",
    "end": "1615799"
  },
  {
    "text": "all of the expensive queries that are going on or this you are eyes that are coming in as well as my service flow so",
    "start": "1615799",
    "end": "1621260"
  },
  {
    "text": "now in my service flow I can see that I had these four back-end monolith services that I'm talking to our",
    "start": "1621260",
    "end": "1626960"
  },
  {
    "text": "back-end services and in those back-end services they have a you know we have other service flow dependencies existing",
    "start": "1626960",
    "end": "1633320"
  },
  {
    "text": "and we can see calls down to presents the database etc but in this case we're going to kind of virtually break up that",
    "start": "1633320",
    "end": "1639710"
  },
  {
    "text": "model that's right using those custom services we talked about before so it's it's all inside the UI you're not changing anything in your code all",
    "start": "1639710",
    "end": "1646400"
  },
  {
    "text": "you're doing is we have some rules that we defined already but we're gonna kind of walk through one of these rules and essentially what I've done is I've",
    "start": "1646400",
    "end": "1652370"
  },
  {
    "text": "defined the booking bean that is my entry point here and I have a method",
    "start": "1652370",
    "end": "1658850"
  },
  {
    "text": "that I'm using as that trigger so dynaTrace automatically will see that trigger and now instead of for services",
    "start": "1658850",
    "end": "1665510"
  },
  {
    "text": "that are dependent on an out of six so the six the two that we routed were the two service the two custom services I",
    "start": "1665510",
    "end": "1672169"
  },
  {
    "text": "added in which were my front-end booking and my front-end journey right so those",
    "start": "1672169",
    "end": "1677510"
  },
  {
    "text": "two are actually still in my monolith but I'm now treating them as a completely separate service to see where",
    "start": "1677510",
    "end": "1686390"
  },
  {
    "text": "this goes so now okay so when we look down at the service flow what you see now is it",
    "start": "1686390",
    "end": "1691940"
  },
  {
    "text": "still as four but there's actually three services that I really aren't contributing a lot so we're showing you know the most contributions at the top",
    "start": "1691940",
    "end": "1698030"
  },
  {
    "text": "but in this case you can see my front-end monolith on either side here so you see my friend and monolith being",
    "start": "1698030",
    "end": "1703520"
  },
  {
    "text": "being presented and now I can actually filter just for that in the service load so now I can see across this that my",
    "start": "1703520",
    "end": "1709789"
  },
  {
    "text": "front I monolith then caused calls my back-end right so my booking calls my front-end booking calls the back so in",
    "start": "1709789",
    "end": "1716330"
  },
  {
    "text": "this now I have a really good understanding of what's going on in my model all right so what do we do next",
    "start": "1716330",
    "end": "1722960"
  },
  {
    "text": "well well we want to put it in a container we want to run it in in Fargate so remember Fargate is our",
    "start": "1722960",
    "end": "1729080"
  },
  {
    "text": "container a service container service so you take the image and you just give it to for",
    "start": "1729080",
    "end": "1734270"
  },
  {
    "text": "gate and far gate runs it on our managed nodes so you can imagine that in that situation you cannot take the one agent",
    "start": "1734270",
    "end": "1741470"
  },
  {
    "text": "and install it on the ec2 host because you don't have access to the ec2 hosts so we have to take the one agent and put",
    "start": "1741470",
    "end": "1748160"
  },
  {
    "text": "the one agent into our container image and because container images allow us to do that and that's how the technology",
    "start": "1748160",
    "end": "1754370"
  },
  {
    "text": "works it's not very difficult it really starts off with adding the one agent",
    "start": "1754370",
    "end": "1759560"
  },
  {
    "text": "from a layer that we've already created that our security have signed off on from from before and put that into our",
    "start": "1759560",
    "end": "1766310"
  },
  {
    "text": "existing docket all definition and then using that to execute the launch process",
    "start": "1766310",
    "end": "1772490"
  },
  {
    "text": "of our application so basically our entry point so right here you can see",
    "start": "1772490",
    "end": "1777950"
  },
  {
    "text": "that so at the left-hand side of the screen you can see me building the application stack now we have the full",
    "start": "1777950",
    "end": "1783920"
  },
  {
    "text": "stack you can see we've broken out all of the different discovered services so we've got the backend we've got the",
    "start": "1783920",
    "end": "1789620"
  },
  {
    "text": "front-end we have all of the different services and the different layers that we discovered using the dynaTrace tool",
    "start": "1789620",
    "end": "1795440"
  },
  {
    "text": "and we created something called the docker compose file so this docker compose file allows us to immutably",
    "start": "1795440",
    "end": "1802130"
  },
  {
    "text": "provide infrastructure to all of our developers so that when they develop their application and test their",
    "start": "1802130",
    "end": "1807890"
  },
  {
    "text": "application they can always bring up the same services in exactly the same manner so Carmen can work on this product I can",
    "start": "1807890",
    "end": "1814520"
  },
  {
    "text": "work on this product anybody else can work at this product at the same time individually on our laptops and make",
    "start": "1814520",
    "end": "1819710"
  },
  {
    "text": "changes and be sure that all of us have the same experience and that the changes that we make will affect the overall",
    "start": "1819710",
    "end": "1826070"
  },
  {
    "text": "project in the same manner so in our definition we define all of our services",
    "start": "1826070",
    "end": "1831230"
  },
  {
    "text": "like the back-end service the front-end service but we also want to make sure that now that we've containerized our",
    "start": "1831230",
    "end": "1837080"
  },
  {
    "text": "application it also acts and experiences the same performance or even better",
    "start": "1837080",
    "end": "1842390"
  },
  {
    "text": "performance than it did before it was containerized and therefore we need to also do monitoring on it and the way we",
    "start": "1842390",
    "end": "1848330"
  },
  {
    "text": "do that is inside of that definition we promote provide the command that allows us to execute the one agent and the one",
    "start": "1848330",
    "end": "1855410"
  },
  {
    "text": "agent it's a simple override command like that inside of our container we don't need to make a change to our",
    "start": "1855410",
    "end": "1860900"
  },
  {
    "text": "code we don't need to make significant changes to our docker file we just add this command and we have this",
    "start": "1860900",
    "end": "1866250"
  },
  {
    "text": "command run our initial start process that will invoke the actual violent race",
    "start": "1866250",
    "end": "1872040"
  },
  {
    "text": "one agent inside of our container and keep track of the process that it was launching and monitor and reports to",
    "start": "1872040",
    "end": "1877950"
  },
  {
    "text": "that monitoring once that image has been compiled and as image has been both we can then upload it to our container",
    "start": "1877950",
    "end": "1884130"
  },
  {
    "text": "registry so you can see here for example me creating the new container registry for our back-end service that will allow",
    "start": "1884130",
    "end": "1891000"
  },
  {
    "text": "me to now log into our ECR system so for those who's never used EGR who's never",
    "start": "1891000",
    "end": "1896040"
  },
  {
    "text": "used Amazon ECR so Amazon ECR is a fully compliant ocmi container registry and",
    "start": "1896040",
    "end": "1902130"
  },
  {
    "text": "we've just added some security levels on top of it to integrate natively with AWS I am and the way that you log into it is",
    "start": "1902130",
    "end": "1909300"
  },
  {
    "text": "very simply the same way you log into any system with the docker login command and we've made that even a little bit",
    "start": "1909300",
    "end": "1914790"
  },
  {
    "text": "easier by integrating that to our AWS CLI tools so here you can see me logging in and authenticating using the AWS CLI",
    "start": "1914790",
    "end": "1922200"
  },
  {
    "text": "tools there it logs in and you can see it's succeeded and now I can take the repository URI the actual repository",
    "start": "1922200",
    "end": "1930120"
  },
  {
    "text": "name of the new repository I created and I can tag my local images with it once",
    "start": "1930120",
    "end": "1935460"
  },
  {
    "text": "I've tagged my local images with it I can upload that image into ETR and then pull it and deploy it into Fargate so",
    "start": "1935460",
    "end": "1942150"
  },
  {
    "text": "I've listed all of the images that I built there you can see I select the latest image ID using the darker normal",
    "start": "1942150",
    "end": "1950250"
  },
  {
    "text": "docker commands and I tag it with my report report remote repository I'm",
    "start": "1950250",
    "end": "1957270"
  },
  {
    "text": "gonna do another list just to show that the tag actually has been applied and now I can do a very simple docker push",
    "start": "1957270",
    "end": "1963600"
  },
  {
    "text": "so its docker images push and there we go so that'll upload all of the layers now the nice thing is in ECR we only upload",
    "start": "1963600",
    "end": "1971220"
  },
  {
    "text": "the layers that we don't already have so you'll see that there's actually a discrepancy in size from what it shows",
    "start": "1971220",
    "end": "1977160"
  },
  {
    "text": "on on your localhost and what it actually stores for you in each jar because many of these are things like st. OS layers and those type of things",
    "start": "1977160",
    "end": "1983250"
  },
  {
    "text": "that'll share images that we don't need to bull you for so once you have it in",
    "start": "1983250",
    "end": "1988470"
  },
  {
    "text": "ECR you now have the ability to seamlessly add that into a toss definition in Fargate which you'll see in just a second and we",
    "start": "1988470",
    "end": "1995250"
  },
  {
    "text": "can deploy the application through that now one of the great features of ECR is that we have something called",
    "start": "1995250",
    "end": "2000470"
  },
  {
    "text": "a lifecycle policy so for those who are familiar with AWS s3 you know that you can actually retire objects after a",
    "start": "2000470",
    "end": "2007580"
  },
  {
    "text": "certain amount of time or if a certain version has been extended so the same thing happens with EGR if you do a high",
    "start": "2007580",
    "end": "2014179"
  },
  {
    "text": "number of releases and have a high cadence of building images and pushing it to ECR which we expect you will if",
    "start": "2014179",
    "end": "2019460"
  },
  {
    "text": "you are doing it in an automated fashion you can have lifecycle policies that will automatically retire and delete",
    "start": "2019460",
    "end": "2025759"
  },
  {
    "text": "images that are older than a specific time that you set and clean out that repository to make sure that you're not",
    "start": "2025759",
    "end": "2031730"
  },
  {
    "text": "wasting money on irrelevant images that you no longer need so now that the Fargate cluster which deploy their",
    "start": "2031730",
    "end": "2037850"
  },
  {
    "text": "application into the Fargate cluster it's running on a completely managed environment completely obfuscated your",
    "start": "2037850",
    "end": "2043369"
  },
  {
    "text": "container is just running you don't care about the nodes you don't care about the cluster you just care about the actual",
    "start": "2043369",
    "end": "2048559"
  },
  {
    "text": "application performance we go back to the dynaTrace console and we now monitor this new application that's running in",
    "start": "2048559",
    "end": "2055128"
  },
  {
    "text": "the ECAC Fargate cluster and see how it's acting as opposed to when it was running on an ec2 instance thanks a lot",
    "start": "2055129",
    "end": "2060770"
  },
  {
    "text": "mandus so yeah so now because the band has put the one agent into his container so it's automatically deployed dynaTrace",
    "start": "2060770",
    "end": "2067398"
  },
  {
    "text": "is automatic ANSI it's seamless we don't treat it differently than the original services you were looking at before so",
    "start": "2067399",
    "end": "2073158"
  },
  {
    "text": "we see this process running we see the services that expose and you'll see that now we have this lambda or the sorry",
    "start": "2073159",
    "end": "2079579"
  },
  {
    "text": "this far gate front end and back end as well and those if you notice these services there's six services again and",
    "start": "2079579",
    "end": "2086240"
  },
  {
    "text": "the reason is because dynaTrace already has the the entry point and the method so we've already since those rules exist",
    "start": "2086240",
    "end": "2092450"
  },
  {
    "text": "dynaTrace will apply it to these as well so now far gate in far gate we see across again the service flow that you",
    "start": "2092450",
    "end": "2098839"
  },
  {
    "text": "are familiar with before and we can see the performance and what you'll also notice though is that the far gate the",
    "start": "2098839",
    "end": "2104900"
  },
  {
    "text": "second one down there that far gate namespace was listed actually without a proxy because it's still in the same",
    "start": "2104900",
    "end": "2110390"
  },
  {
    "text": "container or otherwise so in this case we're looking now at a dashboard we can create dashboards on CPU utilization",
    "start": "2110390",
    "end": "2116540"
  },
  {
    "text": "memory utilization you know just general quality and uptime so ultimately though",
    "start": "2116540",
    "end": "2122000"
  },
  {
    "text": "when we do this we want to know which is better right so which did we get better performance so we have lots of different",
    "start": "2122000",
    "end": "2127520"
  },
  {
    "text": "ways to compare this we could look at this from we have something called management zone so we go all of my Fargate or all of my ec2",
    "start": "2127520",
    "end": "2135690"
  },
  {
    "text": "monolith based applications through this through this filtering but I can also filter specifically maybe for a specific",
    "start": "2135690",
    "end": "2142050"
  },
  {
    "text": "type of service so maybe I want to look only for my booking service and say from my booking service how did it perform",
    "start": "2142050",
    "end": "2148410"
  },
  {
    "text": "before how does it perform now which is better is it might is it my far gate or is it my monolith which one's performing",
    "start": "2148410",
    "end": "2155310"
  },
  {
    "text": "better so in this case we see a little bit of an imbalance going on there but in in either of these I can look and",
    "start": "2155310",
    "end": "2161430"
  },
  {
    "text": "understand kind of the behaviors in a different number different ways I can do comparisons straight out of charting",
    "start": "2161430",
    "end": "2166859"
  },
  {
    "text": "right off the screen this happens to be load so I'm showing load distribution but you could also look at for instance",
    "start": "2166859",
    "end": "2172530"
  },
  {
    "text": "CPU response time or etc so all of these pieces can be built into a list of",
    "start": "2172530",
    "end": "2179130"
  },
  {
    "text": "charts and those charts can very easily be brought into your dashboard so you can see again a comparison of the race",
    "start": "2179130",
    "end": "2184470"
  },
  {
    "text": "right which is my ec2 instance better running with the monolith or is it better in Fargate I can also see the",
    "start": "2184470",
    "end": "2190320"
  },
  {
    "text": "distribution as well as you know my throughput and things like that so these are different ways for you to expose",
    "start": "2190320",
    "end": "2195750"
  },
  {
    "text": "this information and then be able to say okay well it is not running as well or I'm running very slowly why",
    "start": "2195750",
    "end": "2202560"
  },
  {
    "text": "so now dynaTrace allows you to dig down into this and look specifically at for instance the hot spots is it is it the",
    "start": "2202560",
    "end": "2209250"
  },
  {
    "text": "calls that I'm making is it my database queries is it the code execution so I'm looking at this looking at the hot spots",
    "start": "2209250",
    "end": "2215220"
  },
  {
    "text": "of the code execution I can identify very quickly where what's most expensive to me where I'm which methods which",
    "start": "2215220",
    "end": "2220800"
  },
  {
    "text": "classes I'm spending the most time and this is essentially what dying trees can provide for this particular use case",
    "start": "2220800",
    "end": "2226800"
  },
  {
    "text": "there's a number of other use cases of course what dying trees can provide to you if you're in this monolith journey",
    "start": "2226800",
    "end": "2232790"
  },
  {
    "text": "so that's fantastic because now we have data-driven information that tells us about water applications doing I touched",
    "start": "2232790",
    "end": "2240180"
  },
  {
    "text": "on this very quickly and very very highly just before I started the demo",
    "start": "2240180",
    "end": "2245369"
  },
  {
    "text": "just before we started the demo about the value of iteration now the idea of iteration through modernization is not a",
    "start": "2245369",
    "end": "2252750"
  },
  {
    "text": "significantly new idea we've been advocating this for many years and we've always said that you should fail fast",
    "start": "2252750",
    "end": "2257940"
  },
  {
    "text": "make that mistake early on in development experience fail fast iterate and get to your customers with the right",
    "start": "2257940",
    "end": "2263790"
  },
  {
    "text": "answers and make your customer experience better and don't be afraid of failure but it's a difficult thing to do how many of you",
    "start": "2263790",
    "end": "2270480"
  },
  {
    "text": "know about iteration and failing without fear but have actually achieved it by",
    "start": "2270480",
    "end": "2275550"
  },
  {
    "text": "show of hands maybe one or two people in this room right it's very difficult",
    "start": "2275550",
    "end": "2280830"
  },
  {
    "text": "especially if you're taking from an environment where you're running a monolithic application on an on-premises enterprise-grade environment and how do",
    "start": "2280830",
    "end": "2288420"
  },
  {
    "text": "you get to this point where you fail without fear and with this data-driven information and being able to monitor",
    "start": "2288420",
    "end": "2294540"
  },
  {
    "text": "your stack know what your customers are doing what the customer experience is and through the container technologies",
    "start": "2294540",
    "end": "2300030"
  },
  {
    "text": "and automation that you've put in place you can now more easily iterate on that design you can now more easily go and",
    "start": "2300030",
    "end": "2305670"
  },
  {
    "text": "say well my customers are having a bad experience when we load the page right when they go to our homepage and we try",
    "start": "2305670",
    "end": "2312570"
  },
  {
    "text": "to do a listing on all of the orders or all of the available travel options that they have our applications going slowly",
    "start": "2312570",
    "end": "2317700"
  },
  {
    "text": "and you can use this data inspector dates or see to the micro to the code level where the bottleneck is and using",
    "start": "2317700",
    "end": "2325619"
  },
  {
    "text": "your automation container technologies you can make the changes and execute those changes into your production",
    "start": "2325619",
    "end": "2330690"
  },
  {
    "text": "environment in a very short amount of time we have a customer that is a one of",
    "start": "2330690",
    "end": "2336390"
  },
  {
    "text": "the leading examples of how an enterprise-grade customer that has a hundred and six years old they have",
    "start": "2336390",
    "end": "2341880"
  },
  {
    "text": "literally been around before the invention of the microchip they they used to be around when stagecoaches was",
    "start": "2341880",
    "end": "2347070"
  },
  {
    "text": "running around the country right they were there 106 years old and they were able to modernize their business to the",
    "start": "2347070",
    "end": "2352830"
  },
  {
    "text": "point where they conceptualize a new product for the people that was using the customers that were using their",
    "start": "2352830",
    "end": "2358440"
  },
  {
    "text": "their business tools and get that new conceptualized product into the production environment and into the",
    "start": "2358440",
    "end": "2364950"
  },
  {
    "text": "hands of those customers within six weeks six weeks they came up with the idea they had the idea they bought the",
    "start": "2364950",
    "end": "2372000"
  },
  {
    "text": "idea with their developers they iterate it and they got it into the hands of the customers within six weeks along the",
    "start": "2372000",
    "end": "2377280"
  },
  {
    "text": "line they failed along the line they made mistakes but they iterates it and they made sure that their business logic",
    "start": "2377280",
    "end": "2383790"
  },
  {
    "text": "their application was stolen compliance with PCI was slowing compliance with all of the regulations and the rules that",
    "start": "2383790",
    "end": "2389160"
  },
  {
    "text": "they needed to follow in the area that they were working on so how many of the customers in the room today actually are",
    "start": "2389160",
    "end": "2394380"
  },
  {
    "text": "working in a regulated industry yep that's kind of something we expect",
    "start": "2394380",
    "end": "2400390"
  },
  {
    "text": "to see so how can dynaTrace actually help customers in a regulated industry so there's a number of ways we can do",
    "start": "2400390",
    "end": "2406750"
  },
  {
    "text": "this so we have in some regulated industries it's about retention so you",
    "start": "2406750",
    "end": "2412090"
  },
  {
    "text": "if you need to retain your data for periods of time we have the opportunity you have the opportunity to do an",
    "start": "2412090",
    "end": "2417370"
  },
  {
    "text": "on-prem deployment is supposed to SAS so dynaTrace can work in either mutton you know bimodal in either way so if you",
    "start": "2417370",
    "end": "2424060"
  },
  {
    "text": "have regulatory issues where you need to understand for instance transactionally",
    "start": "2424060",
    "end": "2429370"
  },
  {
    "text": "what's going on between users we can we can present that as well and store that data up for you as well okay so Coleman",
    "start": "2429370",
    "end": "2436270"
  },
  {
    "text": "I know that you have an experience with using enemies native services in your previous life before you're doing AWS",
    "start": "2436270",
    "end": "2442090"
  },
  {
    "text": "and I know that you always talk to me about how if containers were really around back then and all your life would",
    "start": "2442090",
    "end": "2448150"
  },
  {
    "text": "be a lot easier yeah can you kind of tell me tell the audience what you going to say yeah absolutely so like when we",
    "start": "2448150",
    "end": "2453700"
  },
  {
    "text": "used to think about like our migration this was something that we were working on as part of the mass migration team we were thinking about it in this lift and",
    "start": "2453700",
    "end": "2458950"
  },
  {
    "text": "shift model right so we were basically picking up our applications placing them down we didn't necessarily have that",
    "start": "2458950",
    "end": "2464170"
  },
  {
    "text": "flexibility right so if there was a code change it was still you know very much around those principles of manual",
    "start": "2464170",
    "end": "2470260"
  },
  {
    "text": "deployment you know we might have been doing some sort of blue-green testing around cut overs but then we learned right like it was like it was more along",
    "start": "2470260",
    "end": "2476530"
  },
  {
    "text": "the lines of like how can we actually do this and fail fast like mandus was talking about we eventually got to the point where we were thinking about how",
    "start": "2476530",
    "end": "2483040"
  },
  {
    "text": "can we do things at the configuration management level but in a way that's still kind of treating those",
    "start": "2483040",
    "end": "2488170"
  },
  {
    "text": "applications like cattle wow I'm sorry like Pat said not cattle right and that's the way that we wanted to eventually go right but containers",
    "start": "2488170",
    "end": "2494680"
  },
  {
    "text": "weren't as popular back then and at the same time - I don't think that the technology surrounding it was as",
    "start": "2494680",
    "end": "2500230"
  },
  {
    "text": "prevalent right so when we talk about like how can you migrate your applications at scale how can you break these monoliths apart this is the kind",
    "start": "2500230",
    "end": "2507610"
  },
  {
    "text": "of stuff that dynaTrace and containers together enable right and we didn't have that capability back then again and",
    "start": "2507610",
    "end": "2512620"
  },
  {
    "text": "we're only talking about four years ago yeah it's it's it's it's amazing how quickly it's evolved in the last four",
    "start": "2512620",
    "end": "2517840"
  },
  {
    "text": "years yeah technologies are relatively relatively new in the industry but they've had a big impact and they're",
    "start": "2517840",
    "end": "2522910"
  },
  {
    "text": "really making their transformation journey a lot easier when we talk containers we always say that containers",
    "start": "2522910",
    "end": "2528760"
  },
  {
    "text": "alone is not the solution containers alone really gives you the ability to make portable applications",
    "start": "2528760",
    "end": "2534650"
  },
  {
    "text": "but at scale and truly transforming a business isn't very easy with only containers you have to think about",
    "start": "2534650",
    "end": "2540230"
  },
  {
    "text": "orchestration you have to think about everything that goes with it so how many people in the room think they have a",
    "start": "2540230",
    "end": "2546020"
  },
  {
    "text": "good day helps practice in their business or an SRE practice in their business I mean it's not a trick",
    "start": "2546020",
    "end": "2552290"
  },
  {
    "text": "question you can answer if you think that you are it's but we usually challenge that when people say yes we",
    "start": "2552290",
    "end": "2557569"
  },
  {
    "text": "have DevOps in our business right and we challenge that we say well at any point in your DevOps practice when a developer",
    "start": "2557569",
    "end": "2563510"
  },
  {
    "text": "pushes code to his repository does he or she have to wait for a manual",
    "start": "2563510",
    "end": "2569000"
  },
  {
    "text": "intervention from something like a security team or a compliance team or at any point is there a manual input",
    "start": "2569000",
    "end": "2575329"
  },
  {
    "text": "intervention where a human needs to get involved in the process if the answer is yes then we challenge and say that that",
    "start": "2575329",
    "end": "2582260"
  },
  {
    "text": "Davos practice might not be as effective as you think and the reason for that is that through all of the data that we've",
    "start": "2582260",
    "end": "2588650"
  },
  {
    "text": "gathered and through all of the experience that we've had with our customers we have found that humans tend to be the most error-prone fact-checkers",
    "start": "2588650",
    "end": "2595490"
  },
  {
    "text": "in health checkers inside of the business if your application tests are written in the correct way and your",
    "start": "2595490",
    "end": "2601040"
  },
  {
    "text": "business tests are written in the correct way it accelerates you to get your products your customers faster and",
    "start": "2601040",
    "end": "2606710"
  },
  {
    "text": "then helps you focus on things like saving money on infrastructure iterating on your application builds iterating on",
    "start": "2606710",
    "end": "2613250"
  },
  {
    "text": "the actual performance of your application and when we bring up the business owners the writing tests we",
    "start": "2613250",
    "end": "2619220"
  },
  {
    "text": "always see a lot of people sit back and they listen up a little bit and I think well how does that work how do we actually add our but have our business",
    "start": "2619220",
    "end": "2626569"
  },
  {
    "text": "owners the people that own the product and want to understand and own the customer experience of that product how",
    "start": "2626569",
    "end": "2632180"
  },
  {
    "text": "do we have them write tests they're not technical they're not the people that actually know how to write code and what",
    "start": "2632180",
    "end": "2637700"
  },
  {
    "text": "we have a couple of customers that have done this they literally had their product owners take some customers out",
    "start": "2637700",
    "end": "2643130"
  },
  {
    "text": "have them record things like sessions on a web browser in a web browser and how and they took that data and track that",
    "start": "2643130",
    "end": "2650569"
  },
  {
    "text": "data around how everything has happened and how long it took for it to respond and what the customer experience was and",
    "start": "2650569",
    "end": "2656030"
  },
  {
    "text": "then they replay that in automated tests as business tests and if those fail and",
    "start": "2656030",
    "end": "2661520"
  },
  {
    "text": "push back then they take things like dynaTrace and they look why did this happen why did the respond response take longer and then",
    "start": "2661520",
    "end": "2667880"
  },
  {
    "text": "they find oh well this time instead of using a recursive step function for us to go into the data we use the for loop",
    "start": "2667880",
    "end": "2674000"
  },
  {
    "text": "and I just pushed up a CPU usage and therefore everything just basically became a bottleneck at the back right so",
    "start": "2674000",
    "end": "2680110"
  },
  {
    "text": "remove those human errors remove those human interventions and also make sure",
    "start": "2680110",
    "end": "2685520"
  },
  {
    "text": "that the trustee in your business and the culture in your business changes to a point where the developers can",
    "start": "2685520",
    "end": "2691850"
  },
  {
    "text": "actually work with a security team as a unified team the security team should never be the stopper or this is all the",
    "start": "2691850",
    "end": "2698360"
  },
  {
    "text": "blocking point for your business we get too many customers come to us and say we have created these fantastic containers",
    "start": "2698360",
    "end": "2705230"
  },
  {
    "text": "we have these pipelines using fantastic tools and we've integrated monitoring and we've built this application within",
    "start": "2705230",
    "end": "2711080"
  },
  {
    "text": "three weeks but our security team has taken six months to review it and they still don't know whether they can",
    "start": "2711080",
    "end": "2716570"
  },
  {
    "text": "whitelist it or not it's not a great experience for your developers and it's at that point where the developers sit",
    "start": "2716570",
    "end": "2722480"
  },
  {
    "text": "around playing with each in playing with the counter-strike go or something I'd work because they are compiling the code",
    "start": "2722480",
    "end": "2727910"
  },
  {
    "text": "of the kernel at the back end right it's not a great experience it motivates them another thing in the culture and this is",
    "start": "2727910",
    "end": "2734030"
  },
  {
    "text": "something that we at Amazon kind of do and I think I've spoken to the dynamic trace team as well as like we really celebrate failure we celebrate failure",
    "start": "2734030",
    "end": "2741350"
  },
  {
    "text": "we have this internal thing of where we award people using something called a phone to a high con and we actually",
    "start": "2741350",
    "end": "2747530"
  },
  {
    "text": "celebrate that if you find a bug inside of like any of our products that we've created on the launch day or before",
    "start": "2747530",
    "end": "2754730"
  },
  {
    "text": "launch day or through beta testing if you find something like that or if you make a product fail we actually",
    "start": "2754730",
    "end": "2760220"
  },
  {
    "text": "celebrate that and you get a phone - like on it's it's it's a it's a badge of honor to say that you found this and we",
    "start": "2760220",
    "end": "2765380"
  },
  {
    "text": "want people to find these bugs before they go to market before they get into the hands of customers because rather",
    "start": "2765380",
    "end": "2770870"
  },
  {
    "text": "than let them fail for us and be able to iterate quickly and fix that failure and get a good product out to our customers",
    "start": "2770870",
    "end": "2777080"
  },
  {
    "text": "then the other way around we don't want to invest six to eight months with no testing or not with no experience",
    "start": "2777080",
    "end": "2783800"
  },
  {
    "text": "testing and not failing because we're afraid to fail right we celebrate failure we change the way that we goal",
    "start": "2783800",
    "end": "2790310"
  },
  {
    "text": "our engineers our developers our sre engineers the people up that our product owners work with we change the way that",
    "start": "2790310",
    "end": "2796910"
  },
  {
    "text": "the we goal and what their success looks like we're not tracking them on the amount of lines of code they write we track them",
    "start": "2796910",
    "end": "2803750"
  },
  {
    "text": "on the amounts of features that they were able to set to to improve the customer experience to minimize the CPU",
    "start": "2803750",
    "end": "2810200"
  },
  {
    "text": "usage those type of things because we were able to look at the data and work backwards from the data and say these",
    "start": "2810200",
    "end": "2816049"
  },
  {
    "text": "are the places we can improve on to make our customer experiences better and because we've put in place all of this",
    "start": "2816049",
    "end": "2822619"
  },
  {
    "text": "automation because we've broken it down to micro services we were able to iterate and implement those changes a",
    "start": "2822619",
    "end": "2827839"
  },
  {
    "text": "lot faster yeah yeah all right so so with that said I think like again the key point or the key takeaway here right",
    "start": "2827839",
    "end": "2834410"
  },
  {
    "text": "is before you break this thing apart or before you think about moving any application right you need this kind of",
    "start": "2834410",
    "end": "2839960"
  },
  {
    "text": "data to make a data-driven decision right you're not just going to guess you're not just going to kind of just pick things up willy-nilly you really",
    "start": "2839960",
    "end": "2846140"
  },
  {
    "text": "have to make an educated decision about where you're gonna basically pick the thing apart and then move it and then iterate on it after you move and again",
    "start": "2846140",
    "end": "2852230"
  },
  {
    "text": "things like dynaTrace and then container technologies really help you in that space right so when we talk about this",
    "start": "2852230",
    "end": "2857599"
  },
  {
    "text": "lift and shift mentality when we talk about you know moving applications over if you have this kind of data in the",
    "start": "2857599",
    "end": "2863210"
  },
  {
    "text": "beginning of your project it should allow you to theoretically break these monoliths apart right again there's obviously going to be code changes that",
    "start": "2863210",
    "end": "2869150"
  },
  {
    "text": "are needed and you're gonna try and move the application over and you might see failure like you said but because it's sitting inside of a container now that's",
    "start": "2869150",
    "end": "2875599"
  },
  {
    "text": "great you know what as long as you have test plans in place it should fail you shouldn't impact your customers and you",
    "start": "2875599",
    "end": "2880789"
  },
  {
    "text": "should be able to iterate upon that and eventually get to a pillar where everybody's happy right so if I come back to mandus next year if we put",
    "start": "2880789",
    "end": "2887119"
  },
  {
    "text": "potentially broken this thing apart and I say to mandus hey you know what I want to put this new personalized service or",
    "start": "2887119",
    "end": "2892160"
  },
  {
    "text": "this new personalized functionality in place how long is it gonna take me now a couple of hours that's the hope right",
    "start": "2892160",
    "end": "2897200"
  },
  {
    "text": "that's where you want to be right so what my skills in Ruby yeah yeah all",
    "start": "2897200",
    "end": "2902869"
  },
  {
    "text": "right perfect so but that's the kind of stuff that you will really want to think about so again there's a lot of theoretical pieces here",
    "start": "2902869",
    "end": "2908089"
  },
  {
    "text": "but the one thing that is not theoretical you can't do this without having data right and this is what they're bringing to the table and that's",
    "start": "2908089",
    "end": "2914390"
  },
  {
    "text": "that's hopefully what we tried to instill what you guys today right I think our core message today is that breaking down the monolith is something",
    "start": "2914390",
    "end": "2921140"
  },
  {
    "text": "that everybody has been thinking of there's a lot of resources out there that constantly talks about the things",
    "start": "2921140",
    "end": "2926359"
  },
  {
    "text": "you should be doing when you break down the monolith and there's a lot of resources about how you should be running containers but the",
    "start": "2926359",
    "end": "2932930"
  },
  {
    "text": "truth is none of that happens if you don't know what your applications doing if you don't know what your application",
    "start": "2932930",
    "end": "2938240"
  },
  {
    "text": "performance looks like you need to gather that data before you go down this journey so if you don't take away",
    "start": "2938240",
    "end": "2944089"
  },
  {
    "text": "anything from this session other than that to know that you need to go and find the data and how to look at",
    "start": "2944089",
    "end": "2950089"
  },
  {
    "text": "that data and where to get that data then I'd be happy yeah awesome all right so with that said I mean I appreciate",
    "start": "2950089",
    "end": "2955849"
  },
  {
    "text": "you guys coming out again I know it's lunchtime there are some related breakouts this week and again you know these are in the past but everything",
    "start": "2955849",
    "end": "2962000"
  },
  {
    "text": "should be up on YouTube and SlideShare so if you want to check them out they should be up there by now because it's you know Thursday but other than",
    "start": "2962000",
    "end": "2968720"
  },
  {
    "text": "that again thank you for your time I hope you learned something today and have a great conference all right thank you thank you",
    "start": "2968720",
    "end": "2976088"
  }
]