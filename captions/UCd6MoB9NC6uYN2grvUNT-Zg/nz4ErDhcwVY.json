[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "[Music]",
    "start": "50",
    "end": "1010"
  },
  {
    "text": "[Applause]",
    "start": "1010",
    "end": "4088"
  },
  {
    "text": "[Music]",
    "start": "4960",
    "end": "11689"
  },
  {
    "text": "hello i am john ankel a cloud support",
    "start": "12320",
    "end": "14400"
  },
  {
    "text": "engineer here at the aos office in",
    "start": "14400",
    "end": "16400"
  },
  {
    "text": "dublin",
    "start": "16400",
    "end": "17520"
  },
  {
    "text": "today i'm going to show you how to",
    "start": "17520",
    "end": "19439"
  },
  {
    "text": "integrate an los apps in graphql api",
    "start": "19439",
    "end": "22480"
  },
  {
    "text": "with a dynamodb table that has an",
    "start": "22480",
    "end": "24240"
  },
  {
    "text": "attribute with json data",
    "start": "24240",
    "end": "26560"
  },
  {
    "text": "let's get started",
    "start": "26560",
    "end": "29279"
  },
  {
    "text": "first let's create the demo dynamodb",
    "start": "29279",
    "end": "31519"
  },
  {
    "start": "30000",
    "end": "100000"
  },
  {
    "text": "table and insert an item in it",
    "start": "31519",
    "end": "35040"
  },
  {
    "text": "after logging into the aws management",
    "start": "35040",
    "end": "37120"
  },
  {
    "text": "console navigate to the dynamodb console",
    "start": "37120",
    "end": "41440"
  },
  {
    "text": "in the dashboard select create table",
    "start": "41440",
    "end": "45440"
  },
  {
    "text": "provide a table name and partition key",
    "start": "45440",
    "end": "48239"
  },
  {
    "text": "for this demo i will use products as the",
    "start": "48239",
    "end": "50640"
  },
  {
    "text": "table name and id as the partition key",
    "start": "50640",
    "end": "55039"
  },
  {
    "text": "defining the sort key is optional so i",
    "start": "55039",
    "end": "57680"
  },
  {
    "text": "will skip it",
    "start": "57680",
    "end": "58960"
  },
  {
    "text": "but you can define your own circuit if",
    "start": "58960",
    "end": "61120"
  },
  {
    "text": "necessary",
    "start": "61120",
    "end": "63199"
  },
  {
    "text": "go to the new table and choose the",
    "start": "63199",
    "end": "65040"
  },
  {
    "text": "explore table items button",
    "start": "65040",
    "end": "68400"
  },
  {
    "text": "choose create item",
    "start": "68400",
    "end": "71680"
  },
  {
    "text": "choose json and toggle the view dynamodb",
    "start": "71760",
    "end": "74799"
  },
  {
    "text": "control",
    "start": "74799",
    "end": "77040"
  },
  {
    "text": "paste a json document in this demo i'll",
    "start": "77040",
    "end": "80000"
  },
  {
    "text": "use the following json structure",
    "start": "80000",
    "end": "83439"
  },
  {
    "text": "you can also see this json object in",
    "start": "83439",
    "end": "85759"
  },
  {
    "text": "dynamodb json format by toggling the",
    "start": "85759",
    "end": "88799"
  },
  {
    "text": "view dynamodb json button",
    "start": "88799",
    "end": "91439"
  },
  {
    "text": "choose create item",
    "start": "91439",
    "end": "93840"
  },
  {
    "text": "we can verify the new item was created",
    "start": "93840",
    "end": "96079"
  },
  {
    "text": "under item's return",
    "start": "96079",
    "end": "99280"
  },
  {
    "text": "now let's create the graphql api in ls",
    "start": "99360",
    "end": "102720"
  },
  {
    "start": "100000",
    "end": "138000"
  },
  {
    "text": "appsync navigate to the los app sync",
    "start": "102720",
    "end": "105439"
  },
  {
    "text": "console",
    "start": "105439",
    "end": "107920"
  },
  {
    "text": "choose create api",
    "start": "108079",
    "end": "111439"
  },
  {
    "text": "on the getting start page under",
    "start": "111439",
    "end": "113600"
  },
  {
    "text": "customize your api or import from amazon",
    "start": "113600",
    "end": "116399"
  },
  {
    "text": "dynamodb",
    "start": "116399",
    "end": "117840"
  },
  {
    "text": "select build from scratch",
    "start": "117840",
    "end": "120560"
  },
  {
    "text": "then choose start",
    "start": "120560",
    "end": "123200"
  },
  {
    "text": "in the api name field enter a name for",
    "start": "123200",
    "end": "125840"
  },
  {
    "text": "the api",
    "start": "125840",
    "end": "128319"
  },
  {
    "text": "for this demo i will use product api",
    "start": "128319",
    "end": "131840"
  },
  {
    "text": "choose create",
    "start": "131840",
    "end": "134720"
  },
  {
    "text": "now let's create the dynamodb data",
    "start": "134720",
    "end": "137040"
  },
  {
    "text": "source",
    "start": "137040",
    "end": "138080"
  },
  {
    "start": "138000",
    "end": "190000"
  },
  {
    "text": "choose data sources on the left panel",
    "start": "138080",
    "end": "141599"
  },
  {
    "text": "choose create a source",
    "start": "141599",
    "end": "145120"
  },
  {
    "text": "now under the create new data source",
    "start": "145200",
    "end": "148000"
  },
  {
    "text": "enter the data source name that you want",
    "start": "148000",
    "end": "149920"
  },
  {
    "text": "to define",
    "start": "149920",
    "end": "152000"
  },
  {
    "text": "for this demo i will use products",
    "start": "152000",
    "end": "154840"
  },
  {
    "text": "dynamodb for data source type choose",
    "start": "154840",
    "end": "157519"
  },
  {
    "text": "amazon dynamodb table for region choose",
    "start": "157519",
    "end": "160800"
  },
  {
    "text": "the region that contains your dynamodb",
    "start": "160800",
    "end": "162879"
  },
  {
    "text": "table",
    "start": "162879",
    "end": "163920"
  },
  {
    "text": "for table name choose the table that you",
    "start": "163920",
    "end": "165920"
  },
  {
    "text": "just created",
    "start": "165920",
    "end": "167280"
  },
  {
    "text": "you can provide an existing role that",
    "start": "167280",
    "end": "169200"
  },
  {
    "text": "allows the aws apps in service to manage",
    "start": "169200",
    "end": "172239"
  },
  {
    "text": "the dynamodb table or just let it create",
    "start": "172239",
    "end": "174879"
  },
  {
    "text": "a new one for you",
    "start": "174879",
    "end": "176879"
  },
  {
    "text": "for this demo i will let the wizard",
    "start": "176879",
    "end": "178959"
  },
  {
    "text": "create a new role for me",
    "start": "178959",
    "end": "181920"
  },
  {
    "text": "choose create",
    "start": "181920",
    "end": "184879"
  },
  {
    "text": "now let's configure the graphql schema",
    "start": "184879",
    "end": "187360"
  },
  {
    "text": "definition that will allow us to access",
    "start": "187360",
    "end": "190159"
  },
  {
    "start": "190000",
    "end": "264000"
  },
  {
    "text": "the next json attribute in the dynamodb",
    "start": "190159",
    "end": "192800"
  },
  {
    "text": "table choose schema on the left panel",
    "start": "192800",
    "end": "197280"
  },
  {
    "text": "copy and paste the provided schema into",
    "start": "197280",
    "end": "199360"
  },
  {
    "text": "the editor",
    "start": "199360",
    "end": "200560"
  },
  {
    "text": "this demo schema has a get items query",
    "start": "200560",
    "end": "203280"
  },
  {
    "text": "and it will return data following the",
    "start": "203280",
    "end": "205440"
  },
  {
    "text": "format of the all data type",
    "start": "205440",
    "end": "208879"
  },
  {
    "text": "then choose save schema",
    "start": "208879",
    "end": "212560"
  },
  {
    "text": "now it's time to attach the resolver on",
    "start": "212560",
    "end": "215200"
  },
  {
    "text": "the schema page of your api on the",
    "start": "215200",
    "end": "217760"
  },
  {
    "text": "resolvers scroll to the get items query",
    "start": "217760",
    "end": "222400"
  },
  {
    "text": "or in the resolvers types you can filter",
    "start": "222400",
    "end": "224720"
  },
  {
    "text": "by query type",
    "start": "224720",
    "end": "226799"
  },
  {
    "text": "next go to the get items field and",
    "start": "226799",
    "end": "229360"
  },
  {
    "text": "choose attach",
    "start": "229360",
    "end": "231280"
  },
  {
    "text": "on the create new resolvers page for the",
    "start": "231280",
    "end": "233840"
  },
  {
    "text": "source name",
    "start": "233840",
    "end": "235040"
  },
  {
    "text": "select the name of the dynamodb table",
    "start": "235040",
    "end": "237120"
  },
  {
    "text": "that you created",
    "start": "237120",
    "end": "240000"
  },
  {
    "text": "this demo i'll select paradox dynamodb",
    "start": "240000",
    "end": "243599"
  },
  {
    "text": "which i created on a previous step",
    "start": "243599",
    "end": "246319"
  },
  {
    "text": "the request and response mapping",
    "start": "246319",
    "end": "247920"
  },
  {
    "text": "templates will be populated",
    "start": "247920",
    "end": "249920"
  },
  {
    "text": "automatically with the get item dynamodb",
    "start": "249920",
    "end": "252560"
  },
  {
    "text": "operation",
    "start": "252560",
    "end": "254959"
  },
  {
    "text": "for this demo it's not necessary to",
    "start": "254959",
    "end": "257120"
  },
  {
    "text": "further customize them choose save",
    "start": "257120",
    "end": "259840"
  },
  {
    "text": "resolvers",
    "start": "259840",
    "end": "262400"
  },
  {
    "text": "finally it's time to set our graphql api",
    "start": "262400",
    "end": "266160"
  },
  {
    "start": "264000",
    "end": "301000"
  },
  {
    "text": "in the left navigation pane choose",
    "start": "266160",
    "end": "268400"
  },
  {
    "text": "queries",
    "start": "268400",
    "end": "269840"
  },
  {
    "text": "in the query editor you can design your",
    "start": "269840",
    "end": "271919"
  },
  {
    "text": "graphql query for this demo i will paste",
    "start": "271919",
    "end": "275120"
  },
  {
    "text": "the following query",
    "start": "275120",
    "end": "277840"
  },
  {
    "text": "this query will get the dynamodb table",
    "start": "277840",
    "end": "280479"
  },
  {
    "text": "items where the id is 1 2 3.",
    "start": "280479",
    "end": "284160"
  },
  {
    "text": "to run the test query choose the play",
    "start": "284160",
    "end": "286240"
  },
  {
    "text": "button",
    "start": "286240",
    "end": "288000"
  },
  {
    "text": "you can now see the return data on the",
    "start": "288000",
    "end": "290160"
  },
  {
    "text": "right panel of the queries page",
    "start": "290160",
    "end": "293600"
  },
  {
    "text": "with these steps you can query nested",
    "start": "293600",
    "end": "296080"
  },
  {
    "text": "json data stored in a dynamodb table",
    "start": "296080",
    "end": "299199"
  },
  {
    "text": "from your own illest apps in graphql api",
    "start": "299199",
    "end": "303120"
  },
  {
    "start": "301000",
    "end": "327000"
  },
  {
    "text": "and now you know how to integrate an lls",
    "start": "303120",
    "end": "305600"
  },
  {
    "text": "apps in graphql api with a dynamodb",
    "start": "305600",
    "end": "308080"
  },
  {
    "text": "table that has an attribute with json",
    "start": "308080",
    "end": "309759"
  },
  {
    "text": "data",
    "start": "309759",
    "end": "311520"
  },
  {
    "text": "thanks for watching and happy cloud",
    "start": "311520",
    "end": "313759"
  },
  {
    "text": "computing from all of us here at aws",
    "start": "313759",
    "end": "317080"
  },
  {
    "text": "[Music]",
    "start": "317080",
    "end": "318120"
  },
  {
    "text": "[Applause]",
    "start": "318120",
    "end": "319870"
  },
  {
    "text": "[Music]",
    "start": "319870",
    "end": "323040"
  },
  {
    "text": "[Music]",
    "start": "325080",
    "end": "326400"
  },
  {
    "text": "you",
    "start": "326400",
    "end": "328479"
  }
]