[
  {
    "start": "0",
    "end": "27000"
  },
  {
    "text": "hello folks my name is Edie Lima and I am a Solutions Architect",
    "start": "5330",
    "end": "10559"
  },
  {
    "text": "with AWS based out of the beautiful melbourne in australia hope you're having a great day so far thank you for",
    "start": "10559",
    "end": "16770"
  },
  {
    "text": "joining us today this is supercharging applications with graph QL and AWS ad sync if I were to",
    "start": "16770",
    "end": "29609"
  },
  {
    "text": "sum up this session one sentence I'd say we're here to talk about the new philosophy for building backhand ap is",
    "start": "29609",
    "end": "35450"
  },
  {
    "text": "the current golden golden standard for api's is almost twenty years old and has some limitations however it is tried",
    "start": "35450",
    "end": "43309"
  },
  {
    "text": "tested and has very good and well-established design and architectural patterns that are widely",
    "start": "43309",
    "end": "48719"
  },
  {
    "text": "adopted it won't go away any time soon and there is two very good reasons to",
    "start": "48719",
    "end": "54059"
  },
  {
    "text": "use it we will talk about another alternative API technology optimized for",
    "start": "54059",
    "end": "59070"
  },
  {
    "text": "performance and flexibility that is agnostic of underlying data sources and also allows for rapid prototyping and",
    "start": "59070",
    "end": "65790"
  },
  {
    "text": "iteration we will also talk about a very exciting and a bless service that was released recently and takes full",
    "start": "65790",
    "end": "72780"
  },
  {
    "text": "advantage of this next generation API technology should make it easy building collaborative mobile and web",
    "start": "72780",
    "end": "78750"
  },
  {
    "text": "applications that deliver responsive and enhanced user experiences finally we",
    "start": "78750",
    "end": "85140"
  },
  {
    "text": "will end the session with a little demo that showcases different concepts and very cool features when building web and",
    "start": "85140",
    "end": "93420"
  },
  {
    "start": "91000",
    "end": "132000"
  },
  {
    "text": "mobile apps developers face different challenges in managing application data data requirements vary across different",
    "start": "93420",
    "end": "100049"
  },
  {
    "text": "devices and become exponentially harder when multiple users share data other",
    "start": "100049",
    "end": "105780"
  },
  {
    "text": "than that uses what instant access to their content and once you have access to that data when they're offline not",
    "start": "105780",
    "end": "113310"
  },
  {
    "text": "only that but also they want the data it should be automatically synchronized in the background when the network becomes",
    "start": "113310",
    "end": "118799"
  },
  {
    "text": "available again what if your client of front-end developer how to make it easier to manage the data without",
    "start": "118799",
    "end": "124590"
  },
  {
    "text": "learning backend or distributed systems concepts how can the address of this",
    "start": "124590",
    "end": "130140"
  },
  {
    "text": "challenge before we start let's first discuss how",
    "start": "130140",
    "end": "135260"
  },
  {
    "start": "132000",
    "end": "214000"
  },
  {
    "text": "traditional data fetching works let's imagine I have a block replication backed by a REST API if my client needs",
    "start": "135260",
    "end": "143000"
  },
  {
    "text": "to access a list of blog posts I have to make an API call to a specific endpoint posts the IP I will return I IDs for the",
    "start": "143000",
    "end": "151850"
  },
  {
    "text": "posts if I need that about the specific posts I have choose the idea I just retrieved and call another endpoint you",
    "start": "151850",
    "end": "158330"
  },
  {
    "text": "get information about the posts you using the post info endpoint for instance maybe I need to now make a",
    "start": "158330",
    "end": "165380"
  },
  {
    "text": "third call to get that about post by author so on so forth as my data",
    "start": "165380",
    "end": "170630"
  },
  {
    "text": "requirements get more specific I need to create different endpoints and customize them accordingly you can imagine it",
    "start": "170630",
    "end": "177350"
  },
  {
    "text": "won't scale well as the API gets more complex with more endpoints it becomes hard to manage there are some advantages",
    "start": "177350",
    "end": "185120"
  },
  {
    "text": "to it rest is a true and tested API technology with establish architectural",
    "start": "185120",
    "end": "190820"
  },
  {
    "text": "patterns and it's based on standard HTTP because however if you need to build",
    "start": "190820",
    "end": "196730"
  },
  {
    "text": "relationships between those endpoints or if you need to query the data dynamically or implement ordering and",
    "start": "196730",
    "end": "202610"
  },
  {
    "text": "pagination or get real-time notifications when data changes you need to develop it yourself on the backend",
    "start": "202610",
    "end": "208580"
  },
  {
    "text": "rest won't support any of these features out of the box is there a better way",
    "start": "208580",
    "end": "218380"
  },
  {
    "start": "214000",
    "end": "262000"
  },
  {
    "text": "well as a matter of fact there is and it's called graph key where Oh graphically well was created in 2012 by",
    "start": "219310",
    "end": "226459"
  },
  {
    "text": "Facebook and open source in 2015 now here is an open standard basically if",
    "start": "226459",
    "end": "231860"
  },
  {
    "text": "use Facebook since 2012 you'll be making graph girl calls for years the idea",
    "start": "231860",
    "end": "237650"
  },
  {
    "text": "behind the development of graph QL was to simplify data needs for both client product developers and server-side",
    "start": "237650",
    "end": "243320"
  },
  {
    "text": "engineers regardless of what languages they're using in either environment rethinking that affection from the",
    "start": "243320",
    "end": "249709"
  },
  {
    "text": "perspective of product designers and developers companies such as Twitter github Pinterest and many others with a",
    "start": "249709",
    "end": "256549"
  },
  {
    "text": "large amount of uses are also using graph QL in production at scales but",
    "start": "256549",
    "end": "263479"
  },
  {
    "start": "262000",
    "end": "319000"
  },
  {
    "text": "what is graph QL Groff growl as the name describes it is a data query language for api's it is",
    "start": "263479",
    "end": "270320"
  },
  {
    "text": "also a runtime to fulfill those queries it is very important to know this graph QL is not a graph database if you want",
    "start": "270320",
    "end": "278660"
  },
  {
    "text": "to learn more about graph databases I suggest you take a look at our new service Amazon Neptune graph QoS",
    "start": "278660",
    "end": "285710"
  },
  {
    "text": "expresses a declarative language for requesting data from your applications backends it uses a type system that",
    "start": "285710",
    "end": "292220"
  },
  {
    "text": "allows to understand data requirements and get meaningful error messages making it easy to use in prototype bref URI is",
    "start": "292220",
    "end": "300350"
  },
  {
    "text": "able to get data from many resources in a single request only client clients who receive the data they ask for nothing",
    "start": "300350",
    "end": "306890"
  },
  {
    "text": "more nothing less it also has an interesting feature called introspection that allows to",
    "start": "306890",
    "end": "312800"
  },
  {
    "text": "query the graph query schema to understand the data format and now so helps you document your API where I",
    "start": "312800",
    "end": "321110"
  },
  {
    "start": "319000",
    "end": "376000"
  },
  {
    "text": "believe what picture is better than words to describe one of the main vendors of graph QL let's go back to",
    "start": "321110",
    "end": "326420"
  },
  {
    "text": "your example a blog post application in order to fetch that that you populate my front and user interface I need to make",
    "start": "326420",
    "end": "333620"
  },
  {
    "text": "a call and get the list of posts and post IDs then use one or more IDs to",
    "start": "333620",
    "end": "340190"
  },
  {
    "text": "retrieve comments so I need to make a second call then if I need to get information about the authors I need to",
    "start": "340190",
    "end": "347030"
  },
  {
    "text": "make another API call shattered endpoint in order to get the data that I needed I",
    "start": "347030",
    "end": "353150"
  },
  {
    "text": "had to make 380 I caused because I was either over fetching or under fetching",
    "start": "353150",
    "end": "358820"
  },
  {
    "text": "data with graph QL I only have one endpoint and I only need to make one",
    "start": "358820",
    "end": "364850"
  },
  {
    "text": "single API call the data is retrieved from multiple data sources automatically for me and this that's a sources can be",
    "start": "364850",
    "end": "371630"
  },
  {
    "text": "anything sequin oseco HTTP it doesn't matter graph query also boards three",
    "start": "371630",
    "end": "377900"
  },
  {
    "start": "376000",
    "end": "393000"
  },
  {
    "text": "types of operations queries to read data mutations to write or update data and",
    "start": "377900",
    "end": "384460"
  },
  {
    "text": "subscriptions there are specifically linked to mutations and allowed to receive that in real time whenever data",
    "start": "384460",
    "end": "390920"
  },
  {
    "text": "is changed or updated now let's take a look at a more detailed example let's",
    "start": "390920",
    "end": "398030"
  },
  {
    "start": "393000",
    "end": "468000"
  },
  {
    "text": "imagine I have a simple event racking up the first step is to create a graph now schema with the final schema",
    "start": "398030",
    "end": "405810"
  },
  {
    "text": "with an event type that has specific properties such as IPG name when and",
    "start": "405810",
    "end": "411030"
  },
  {
    "text": "where the event squash take place we also define a query operation to retrieve the data about the events from",
    "start": "411030",
    "end": "416550"
  },
  {
    "text": "the backend the query now invokes the query operation to retrieve the data",
    "start": "416550",
    "end": "423890"
  },
  {
    "text": "however it only needs ID in the name of the event notice it doesn't require any other data as soon as the operation can",
    "start": "423890",
    "end": "431640"
  },
  {
    "text": "takes place the client that gets the data as requested but what if now the client needs to know",
    "start": "431640",
    "end": "438450"
  },
  {
    "text": "when the events going to take place well it just needs a big query and called the",
    "start": "438450",
    "end": "443910"
  },
  {
    "text": "graph API again graph QL allows you get exactly the data required required and whenever it is",
    "start": "443910",
    "end": "451140"
  },
  {
    "text": "required no over fetching and no under fetching there is only one endpoint and there is",
    "start": "451140",
    "end": "457830"
  },
  {
    "text": "no need to change anything at the backend or create separate endpoints the client defines the data in the backend",
    "start": "457830",
    "end": "463620"
  },
  {
    "text": "is optimized to provide only what the client needs so until last year I used",
    "start": "463620",
    "end": "470190"
  },
  {
    "start": "468000",
    "end": "501000"
  },
  {
    "text": "to hear a lot from customers graph growl sounds great and I want you to run my own graph growth so everyone made up",
    "start": "470190",
    "end": "475950"
  },
  {
    "text": "less well let's stop right there first",
    "start": "475950",
    "end": "481860"
  },
  {
    "text": "of all servers they are so 2014 aren't they and when you talk about servers",
    "start": "481860",
    "end": "489270"
  },
  {
    "text": "they have to think about installing patching configuring deploying and if you serious about it then you worry",
    "start": "489270",
    "end": "494490"
  },
  {
    "text": "about high availability and auto scaling lots of work and lots of undifferentiated heavy lifting you",
    "start": "494490",
    "end": "502919"
  },
  {
    "start": "501000",
    "end": "534000"
  },
  {
    "text": "should be focusing on your application and your business differentiators and not infrastructure to run your",
    "start": "502919",
    "end": "508350"
  },
  {
    "text": "applications the last time we spend on infrastructure maintenance and operations the more time you can focus",
    "start": "508350",
    "end": "514200"
  },
  {
    "text": "on new features and improving our application to speed up business outcomes and that's why we release a",
    "start": "514200",
    "end": "521669"
  },
  {
    "text": "double SF Sinclair event the service just recently graduated from preview to GA last month and it is also currently",
    "start": "521669",
    "end": "529320"
  },
  {
    "text": "available in Sydney region for a means that customers I'm sick is a managed service graphical",
    "start": "529320",
    "end": "538019"
  },
  {
    "start": "534000",
    "end": "586000"
  },
  {
    "text": "services perfect for interacting with application doctor it connects your resources in",
    "start": "538019",
    "end": "543269"
  },
  {
    "text": "your only SS account allowing to make your data available in real-time or offline as it supports AWS lambda or",
    "start": "543269",
    "end": "552470"
  },
  {
    "text": "awesome service compute service as a source you can use app sync as a graph",
    "start": "552470",
    "end": "557759"
  },
  {
    "text": "girl facade for any SS service to lambda it also allows to perform conflict",
    "start": "557759",
    "end": "563069"
  },
  {
    "text": "detection in resolution in the cloud instead of doing it in the client app sync integrates with a SS identity",
    "start": "563069",
    "end": "569489"
  },
  {
    "text": "access and management kognito use the boost and you can use API key is providing really powerful",
    "start": "569489",
    "end": "575220"
  },
  {
    "text": "options to secure your API there is also a new feature recently released you can",
    "start": "575220",
    "end": "580230"
  },
  {
    "text": "use external open ID connect providers short indicate and authorize of graph your course but how does it work well",
    "start": "580230",
    "end": "589799"
  },
  {
    "start": "586000",
    "end": "668000"
  },
  {
    "text": "it's very easy to get started you just need to upload your graphical schema fully compliant if the open source back",
    "start": "589799",
    "end": "597019"
  },
  {
    "text": "alternatively if you don't know much about graph graph schema there's the",
    "start": "597019",
    "end": "602220"
  },
  {
    "text": "cool feature where you can just point app sync to an existing dynamodb table and it will automatically create a graph",
    "start": "602220",
    "end": "608129"
  },
  {
    "text": "cowskin or based on the on the existing table attributes with this camera in place you can connect your data sources",
    "start": "608129",
    "end": "615089"
  },
  {
    "text": "trap sync using what I call resolvers we currently support Amazon DynamoDB our no",
    "start": "615089",
    "end": "620429"
  },
  {
    "text": "sequel manage database service Amazon Elastic search I'll manage elastic search service or a SS lambdas data",
    "start": "620429",
    "end": "627779"
  },
  {
    "text": "sources and that's it we all said you start making graph curl API calls EPS",
    "start": "627779",
    "end": "633959"
  },
  {
    "text": "Inc will update that in real time and manage connections when the clients off lines in a good usual AWS service",
    "start": "633959",
    "end": "643350"
  },
  {
    "text": "service fashion yep sync is inherently highly available in scales automatically according to",
    "start": "643350",
    "end": "648720"
  },
  {
    "text": "demand you can easily add geospatial search features to your application or by elastic search via the graphical API",
    "start": "648720",
    "end": "655439"
  },
  {
    "text": "and make the data available real time for users EPS Inc supports all sorts of clients in",
    "start": "655439",
    "end": "662309"
  },
  {
    "text": "all our screen sizes be its native mobile or web clients",
    "start": "662309",
    "end": "668389"
  },
  {
    "start": "668000",
    "end": "750000"
  },
  {
    "text": "since it is a graph girl managed service fully compliant with the graph girl or",
    "start": "668840",
    "end": "673980"
  },
  {
    "text": "spec clients received it bad that they asked for nothing more nothing laughs yes you can retrieve data from multiple",
    "start": "673980",
    "end": "681900"
  },
  {
    "text": "data sources in this single request in our demo later on we use for DynamoDB tables another benefit from graph PRL",
    "start": "681900",
    "end": "689910"
  },
  {
    "text": "introspection and documentation out-of-the-box allowing clients require the graph go schema which also helps you",
    "start": "689910",
    "end": "696180"
  },
  {
    "text": "to augment your data in the format it needs to be accessed on we support react",
    "start": "696180",
    "end": "701880"
  },
  {
    "text": "native Android iOS and JavaScript in general our SDK integrates of the widely",
    "start": "701880",
    "end": "707010"
  },
  {
    "text": "used open source Apollo graphical client since our SDK is also open source it",
    "start": "707010",
    "end": "712050"
  },
  {
    "text": "allows the Apollo team and our app sync service team to contribute to each other's projects and github is the",
    "start": "712050",
    "end": "718380"
  },
  {
    "text": "beauty of open source app sync also allows you to write three mutations with optimistic UI providing a better user",
    "start": "718380",
    "end": "725160"
  },
  {
    "text": "experience what does that mean basically it allows the front-end should be",
    "start": "725160",
    "end": "730710"
  },
  {
    "text": "updated optimistically first assuming the server will be updated right after that this is very useful in offline",
    "start": "730710",
    "end": "736800"
  },
  {
    "text": "scenarios as the user will see the interface updated regardless of the connection in any situation or network",
    "start": "736800",
    "end": "743460"
  },
  {
    "text": "state real-time conflict resolution and offline people will just take care of that the consistency with app sync you",
    "start": "743460",
    "end": "752040"
  },
  {
    "start": "750000",
    "end": "802000"
  },
  {
    "text": "can mix and match data sources on graph grow types let's say we have a dynamo DB in elasticsearch on in our back-end I",
    "start": "752040",
    "end": "759980"
  },
  {
    "text": "can have a search query raging for an elastic search in a least square reading from dynamo DB if I need to update my",
    "start": "759980",
    "end": "767460"
  },
  {
    "text": "dating dynamo I can use a mutation since I own the back-end resources I can then",
    "start": "767460",
    "end": "774480"
  },
  {
    "text": "use dynamo DB streams hooked up shown under function should keep my data on dynamo DB synchronized with elastic",
    "start": "774480",
    "end": "779880"
  },
  {
    "text": "search in this scenario I have a very powerful flexible",
    "start": "779880",
    "end": "785130"
  },
  {
    "text": "resilient and scalable back-end where my client can read write and also perform",
    "start": "785130",
    "end": "790200"
  },
  {
    "text": "full-text search on data very easily and very fast best of all the whole back-end",
    "start": "790200",
    "end": "795750"
  },
  {
    "text": "is managed by AWS and you don't have to worry about any maintenance tests",
    "start": "795750",
    "end": "801800"
  },
  {
    "text": "now let's talk about real time before ABS sink in order to have a capable real",
    "start": "801970",
    "end": "807500"
  },
  {
    "start": "802000",
    "end": "851000"
  },
  {
    "text": "time application you needed to have a fleet of web servers a cluster of pub/sub servers maybe a Redis cluster",
    "start": "807500",
    "end": "814400"
  },
  {
    "text": "and a fleet of WebSocket servers when you talk about the fleet or a cluster we",
    "start": "814400",
    "end": "819950"
  },
  {
    "text": "also have to take into consideration installing configuring and patching maintaining automating high availability",
    "start": "819950",
    "end": "826670"
  },
  {
    "text": "in auto scaling all of them that's lots of work in and on itself just before I can get started with your app",
    "start": "826670",
    "end": "832640"
  },
  {
    "text": "development with app sync we remove all that and differentiate and heavy-lifting",
    "start": "832640",
    "end": "838790"
  },
  {
    "text": "allowing you to have a fully managed highly available in scalable graph queue API endpoint in minutes you can start",
    "start": "838790",
    "end": "845480"
  },
  {
    "text": "prototyping and developing your application very easily straight away",
    "start": "845480",
    "end": "851140"
  },
  {
    "start": "851000",
    "end": "870000"
  },
  {
    "text": "with the real time elapsing taking advantage of graphical subscriptions using MQTT over WebSockets for those who",
    "start": "851140",
    "end": "859010"
  },
  {
    "text": "don't know MQTT it's a very lightweight and fast pub/sub protocol best of all you don't",
    "start": "859010",
    "end": "865130"
  },
  {
    "text": "need to manage those WebSocket connections EPS Inc does all of that for you basically when your client invokes a",
    "start": "865130",
    "end": "872900"
  },
  {
    "start": "870000",
    "end": "891000"
  },
  {
    "text": "subscription operation AB sync we will turn the WebSocket URL and the connection payload the clients will then",
    "start": "872900",
    "end": "880640"
  },
  {
    "text": "call auto URL using a secure web socket connection that we will remain connected to your back-end and not the very",
    "start": "880640",
    "end": "892700"
  },
  {
    "start": "891000",
    "end": "941000"
  },
  {
    "text": "important feature you're not seeing is the use of request and response mapping templates you can use them to modify the",
    "start": "892700",
    "end": "898100"
  },
  {
    "text": "data before and after it reaches your back end when the cloud invokes a graph",
    "start": "898100",
    "end": "903500"
  },
  {
    "text": "graph query invitation or subscription you can use a V ETL or velocity template",
    "start": "903500",
    "end": "909500"
  },
  {
    "text": "to modify the query before it gets the data source maybe you need to add",
    "start": "909500",
    "end": "914510"
  },
  {
    "text": "specific parameters or use utility helpers to validate the payload creating identifiers of our allocating conditions",
    "start": "914510",
    "end": "921080"
  },
  {
    "text": "before reaching the back-end then reached modified invalid data request then reaches the data source to",
    "start": "921080",
    "end": "927980"
  },
  {
    "text": "perform the operation and after the operation takes place in the data source you can also have a response",
    "start": "927980",
    "end": "934070"
  },
  {
    "text": "templates modify the data on the way back to the client map then mapping",
    "start": "934070",
    "end": "942470"
  },
  {
    "text": "templates also a lot of very important capability fine-grained access control",
    "start": "942470",
    "end": "947720"
  },
  {
    "text": "when the user is authenticated by a kognito user pool or an external open-eyed UConnect provider for example",
    "start": "947720",
    "end": "952760"
  },
  {
    "text": "a jadibooti talk can ascend trap sync with the request you can add condition",
    "start": "952760",
    "end": "957860"
  },
  {
    "text": "no checks in the request mapping them play authorize access based on different requirements before the operations",
    "start": "957860",
    "end": "963380"
  },
  {
    "text": "executed at the datasource for example",
    "start": "963380",
    "end": "968570"
  },
  {
    "text": "you can have simple checks where only users in certain groups can perform actions by using a simple if-else",
    "start": "968570",
    "end": "974840"
  },
  {
    "text": "statement or you can have advanced scenarios with additional logic where only specific users or groups can",
    "start": "974840",
    "end": "980990"
  },
  {
    "text": "perform actions it's a it's all very customizable and flexible using your own VTL code now let's talk about conflict",
    "start": "980990",
    "end": "990650"
  },
  {
    "start": "988000",
    "end": "1050000"
  },
  {
    "text": "resolution imagine we have a document sharing application our use Jayne creates a document however Jane has to",
    "start": "990650",
    "end": "998990"
  },
  {
    "text": "jump on a plane and goes a flying and Jane keeps working on the document in the plane while offline John who is back",
    "start": "998990",
    "end": "1007300"
  },
  {
    "text": "at their office starts updating the document with some use for information and does it one more time creating a",
    "start": "1007300",
    "end": "1013930"
  },
  {
    "text": "version 3 of the document Jay then arrives at her destination and goes back",
    "start": "1013930",
    "end": "1019030"
  },
  {
    "text": "online again with app sync you can configure your application in such a way",
    "start": "1019030",
    "end": "1024280"
  },
  {
    "text": "that a new version 4 of the document is created where all the updates are committed this is done using mapping",
    "start": "1024280",
    "end": "1033819"
  },
  {
    "text": "templates as well where it can configure different conflict resolution strategies client wins server wins silent project",
    "start": "1033820",
    "end": "1040890"
  },
  {
    "text": "but most importantly you can create and learn the function with your own conflict resolution logic for any custom",
    "start": "1040890",
    "end": "1047230"
  },
  {
    "text": "requirements it's great apps Inc also allow support for complex object there",
    "start": "1047230",
    "end": "1054250"
  },
  {
    "start": "1050000",
    "end": "1083000"
  },
  {
    "text": "is a helper that converts graph QL queries annotations by using custom types as three objects an s3 object",
    "start": "1054250",
    "end": "1060700"
  },
  {
    "text": "input this makes it easy to restore contents this images or video with graph",
    "start": "1060700",
    "end": "1066940"
  },
  {
    "text": "QL it creates an s3 link which is a persistent JSON structure in dynamo DB with a reference point atchoo Amazon s3",
    "start": "1066940",
    "end": "1075210"
  },
  {
    "text": "the object can be directly uploaded or downloading using the pointer atlas to reach s3 or managed object storage",
    "start": "1075210",
    "end": "1081550"
  },
  {
    "text": "service we have a very handy sample app available on github that you can easily",
    "start": "1081550",
    "end": "1088750"
  },
  {
    "start": "1083000",
    "end": "1097000"
  },
  {
    "text": "clone and deploy minutes to test its functionality the link is available in screen feel free to call movie on",
    "start": "1088750",
    "end": "1098260"
  },
  {
    "start": "1097000",
    "end": "1124000"
  },
  {
    "text": "offline support app seek offline capabilities take advantage of different local storage mediums you saw data while",
    "start": "1098260",
    "end": "1104800"
  },
  {
    "text": "the client is disconnected depending on the type of quantity using browser local storage for web clients a sink storage",
    "start": "1104800",
    "end": "1111370"
  },
  {
    "text": "for react native or Seacole item native platform you can preload the database as well as configure the offline behavior",
    "start": "1111370",
    "end": "1117460"
  },
  {
    "text": "to send that that over Wi-Fi or using Wi-Fi and cellular app sync was released",
    "start": "1117460",
    "end": "1126220"
  },
  {
    "start": "1124000",
    "end": "1158000"
  },
  {
    "text": "back in November at the brain event and the service team has been on Absalon and",
    "start": "1126220",
    "end": "1131920"
  },
  {
    "text": "out absolutely incredible and fantastic pace of innovation releasing new features non-stop every couple of weeks",
    "start": "1131920",
    "end": "1138610"
  },
  {
    "text": "such as local pubsub resolvers where we don't actually need a data source unions",
    "start": "1138610",
    "end": "1143680"
  },
  {
    "text": "interfaces custom headers as well as expansion to different regions including Sydney I'm not sure if me annoying them",
    "start": "1143680",
    "end": "1151840"
  },
  {
    "text": "with phone calls and spamming their mailboxes had anything to do with the Sydney release though but with GA last",
    "start": "1151840",
    "end": "1160000"
  },
  {
    "text": "month it couldn't be different we had some very exciting new features implemented",
    "start": "1160000",
    "end": "1165250"
  },
  {
    "text": "as part of the general availability release such as called watch support called formation support subscription",
    "start": "1165250",
    "end": "1171250"
  },
  {
    "text": "resolvers HIPAA compliance let's take a",
    "start": "1171250",
    "end": "1179470"
  },
  {
    "text": "closer look some of these features now at the absent",
    "start": "1179470",
    "end": "1186149"
  },
  {
    "text": "console very similar to can be done if lambda these days it can create a use and use mod context objects locally for",
    "start": "1186149",
    "end": "1193080"
  },
  {
    "text": "testing purposes I'm having some issues here if my prepared demo but let's go",
    "start": "1193080",
    "end": "1199139"
  },
  {
    "text": "back to the slides you can also access",
    "start": "1199139",
    "end": "1204690"
  },
  {
    "text": "called watch logs related to the test call from the absent graphic ID in the console and see useful information to",
    "start": "1204690",
    "end": "1211200"
  },
  {
    "text": "troubleshoot any issues basically you can test and view logs in the same place without even leaving the absent console",
    "start": "1211200",
    "end": "1217590"
  },
  {
    "text": "now or you can easily click view and Cloud watch link to see all the API calls in the cloud watch console app",
    "start": "1217590",
    "end": "1228450"
  },
  {
    "start": "1227000",
    "end": "1253000"
  },
  {
    "text": "sync resolvers can now make use of dynamo to be batch operations that spend one or more tables in the region this",
    "start": "1228450",
    "end": "1234120"
  },
  {
    "text": "allows you to choose a list of keys in a single query read records in multiple tables write read records in bulk to",
    "start": "1234120",
    "end": "1240360"
  },
  {
    "text": "multiple tables and conditionally write or delete related records across multiple tables",
    "start": "1240360",
    "end": "1245789"
  },
  {
    "text": "it's an incredible feature it makes it even easier to run batch operations in dynamo the great ada black simplified",
    "start": "1245789",
    "end": "1255120"
  },
  {
    "start": "1253000",
    "end": "1298000"
  },
  {
    "text": "javascript library and readable as mobile or CLI now I also support that sync it means web and react native developers",
    "start": "1255120",
    "end": "1262110"
  },
  {
    "text": "can now easily integrate mode to boy SS data sources in their apps via SS app",
    "start": "1262110",
    "end": "1267240"
  },
  {
    "text": "sink and use real-time data synchronization capabilities in their apps using the new graph QL feature of",
    "start": "1267240",
    "end": "1274080"
  },
  {
    "text": "the API category in the SS amplify amplify is a very powerful library from",
    "start": "1274080",
    "end": "1279299"
  },
  {
    "text": "the for the font front-end and then using conjunction with the a SS Mobile CLI you can have your back-end resources",
    "start": "1279299",
    "end": "1286230"
  },
  {
    "text": "such as analytics file hosting content delivery network and authentication deployed and configure for you using one",
    "start": "1286230",
    "end": "1293129"
  },
  {
    "text": "or two comments in a couple of minutes",
    "start": "1293129",
    "end": "1297110"
  },
  {
    "start": "1298000",
    "end": "1329000"
  },
  {
    "text": "for instance recently with the AWS simplify your Y components in the mobile",
    "start": "1298220",
    "end": "1303240"
  },
  {
    "text": "CLI I was able to create a react web application with cognitive motive factor authentication in s3 private picture",
    "start": "1303240",
    "end": "1310679"
  },
  {
    "text": "album with 29:29 lines of code in less than 10 minutes this powerful tools",
    "start": "1310679",
    "end": "1316330"
  },
  {
    "text": "allowed to streamline in speed up back-end and front-end development may even easier to develop to develop on it",
    "start": "1316330",
    "end": "1323200"
  },
  {
    "text": "up less now with a double accessing support it gets even better",
    "start": "1323200",
    "end": "1328528"
  },
  {
    "text": "but now let's address the elephant in the room shall we we talked about REST",
    "start": "1329100",
    "end": "1334270"
  },
  {
    "text": "API and some limitations and you talked about how graph curls solve some of those problems we have a fantastic rest",
    "start": "1334270",
    "end": "1341200"
  },
  {
    "text": "api service called api gateway and now we have an also fantastic graph cure api service called app sync this is a matter",
    "start": "1341200",
    "end": "1350679"
  },
  {
    "text": "of rest versus graph QL api gator vs. app st. well shouldn't be it's a matter",
    "start": "1350679",
    "end": "1359529"
  },
  {
    "start": "1356000",
    "end": "1392000"
  },
  {
    "text": "of what's the best tool for the job why not use both of them rest is not going anywhere and has been a truly tried and",
    "start": "1359529",
    "end": "1366909"
  },
  {
    "text": "tested code standard for many years with very good architectural patterns if you",
    "start": "1366909",
    "end": "1372370"
  },
  {
    "text": "have a simple API of few endpoints where s is perfectly fine use api gateway however if you have complex data",
    "start": "1372370",
    "end": "1378760"
  },
  {
    "text": "requirements or you need the real time in offline capabilities kept sync is here for you both Apps Sync and API",
    "start": "1378760",
    "end": "1385059"
  },
  {
    "text": "gator are fantastic and very powerful tools for your developer tool box",
    "start": "1385059",
    "end": "1390510"
  },
  {
    "start": "1392000",
    "end": "1459000"
  },
  {
    "text": "without enough thought let's see it in action for a couple of demos I developed",
    "start": "1392669",
    "end": "1398200"
  },
  {
    "text": "a chat application with a friend and fellow Amazonian in the United States across time zones and continents and",
    "start": "1398200",
    "end": "1403840"
  },
  {
    "text": "it's now available in github we also wrote a companion blog post explaining the app its components and how it takes",
    "start": "1403840",
    "end": "1410980"
  },
  {
    "text": "advantage of nifty app and sync features feel free to clone and trine your only",
    "start": "1410980",
    "end": "1416200"
  },
  {
    "text": "SS account thanks to confirmation in the mobile CLI it takes only a cup of ministry configure and deploy the app is",
    "start": "1416200",
    "end": "1426309"
  },
  {
    "text": "called chat ql it is also progressive web app what's the best way to quickly",
    "start": "1426309",
    "end": "1432010"
  },
  {
    "text": "demonstrate real time capabilities a chat application fits the bill perfectly",
    "start": "1432010",
    "end": "1437880"
  },
  {
    "text": "we have a Cognito user boosts onboarding and authenticating our users a valid",
    "start": "1438210",
    "end": "1443350"
  },
  {
    "text": "user receives a GWT token which is sent your app sync to identify and authorize the yep sink then uses resolvers to send and",
    "start": "1443350",
    "end": "1451210"
  },
  {
    "text": "retrieve that that you four different dynamodb tables that saw that about users conversations and messages this is",
    "start": "1451210",
    "end": "1460180"
  },
  {
    "start": "1459000",
    "end": "1494000"
  },
  {
    "text": "the high level purview of the apps that the model a graph representation can help us understand how we need to store",
    "start": "1460180",
    "end": "1467110"
  },
  {
    "text": "and relate data the nodes represented that they want to store the edges represent connections relations or",
    "start": "1467110",
    "end": "1473800"
  },
  {
    "text": "associations between the data graph QL allows to create relations between the",
    "start": "1473800",
    "end": "1479020"
  },
  {
    "text": "data types which means relations between no sequel databases this is incredibly",
    "start": "1479020",
    "end": "1484840"
  },
  {
    "text": "powerful for putting aside all the other great features if anything else epson",
    "start": "1484840",
    "end": "1490000"
  },
  {
    "text": "becomes an amazing logic layer enhancing DynamoDB but now let's let's go to the",
    "start": "1490000",
    "end": "1496930"
  },
  {
    "start": "1494000",
    "end": "1647000"
  },
  {
    "text": "demo let me try to open my bio I have my",
    "start": "1496930",
    "end": "1505960"
  },
  {
    "text": "mobile here with me let's see if the",
    "start": "1505960",
    "end": "1516100"
  },
  {
    "text": "demo cause bots are with us today yes is back ok great ok so here I have my",
    "start": "1516100",
    "end": "1537450"
  },
  {
    "text": "application I have application on my web browser and I have my progress about",
    "start": "1537450",
    "end": "1542770"
  },
  {
    "text": "that so as you can see as a progressive at the epoch also installs my app drawer",
    "start": "1542770",
    "end": "1548530"
  },
  {
    "text": "and it looks in behave like a normal mobile app so I have a user here it's",
    "start": "1548530",
    "end": "1554560"
  },
  {
    "text": "called mate and I have a user on my mobile",
    "start": "1554560",
    "end": "1559630"
  },
  {
    "text": "it's called dude so let me signing with both users and they they have this",
    "start": "1559630",
    "end": "1566680"
  },
  {
    "text": "conversation that's going on for weeks right they're best friends so you can send messages from from one user to the",
    "start": "1566680",
    "end": "1575020"
  },
  {
    "text": "other and I can go here my mobile [Music] and also send a message back as you can",
    "start": "1575020",
    "end": "1583900"
  },
  {
    "text": "see you have messages going back and forth if I take a look here at the network tab of my browser I can see here",
    "start": "1583900",
    "end": "1592600"
  },
  {
    "text": "this is basically a graph QL message and here I have the data but you know those",
    "start": "1592600",
    "end": "1599860"
  },
  {
    "text": "guys are best friends and they'd have like thousands of messages if I were to retrieve those messages at once that",
    "start": "1599860",
    "end": "1606190"
  },
  {
    "text": "would affect performance significantly significantly so take a look here at the",
    "start": "1606190",
    "end": "1612850"
  },
  {
    "text": "end of my networking calls as I start scrolling up I'm making more calls",
    "start": "1612850",
    "end": "1620190"
  },
  {
    "text": "providing that very nice infinite scrolling capability to my UI and",
    "start": "1620190",
    "end": "1626190"
  },
  {
    "text": "basically what I'm using here is what I call connections in graph QL which is",
    "start": "1626190",
    "end": "1631600"
  },
  {
    "text": "buting support for pagination I'm just retrieving ten messages at a time so and",
    "start": "1631600",
    "end": "1638050"
  },
  {
    "text": "I have a token that tells me where my next and messages are and it just can come here and and check my messages back",
    "start": "1638050",
    "end": "1644740"
  },
  {
    "text": "and forth but now let's say I need to go",
    "start": "1644740",
    "end": "1650590"
  },
  {
    "start": "1647000",
    "end": "1718000"
  },
  {
    "text": "offline or I'm going on a plane or something like that so let's go offline",
    "start": "1650590",
    "end": "1655930"
  },
  {
    "text": "here so I'm gonna click this offline button and I'm gonna send an offline",
    "start": "1655930",
    "end": "1665080"
  },
  {
    "text": "message so as you can see I'm not",
    "start": "1665080",
    "end": "1671050"
  },
  {
    "text": "sending any Network calls and I didn't get the message on my mobile device so",
    "start": "1671050",
    "end": "1677620"
  },
  {
    "text": "if I take a look here at the at the UI itself I have those green checkmarks",
    "start": "1677620",
    "end": "1684180"
  },
  {
    "text": "that basically tell my user that message was sent successfully if this check marks great basically it tells me that",
    "start": "1684180",
    "end": "1690220"
  },
  {
    "text": "this is an offline message if I go back online again so let's go back online so",
    "start": "1690220",
    "end": "1701260"
  },
  {
    "text": "my mobile just received a message and I sent a message here I can try again",
    "start": "1701260",
    "end": "1708850"
  },
  {
    "text": "just confirm",
    "start": "1708850",
    "end": "1712350"
  },
  {
    "text": "and the message is received but let's take a look at the back and now also",
    "start": "1717090",
    "end": "1724590"
  },
  {
    "start": "1718000",
    "end": "1728000"
  },
  {
    "text": "check here my mobile so this is the absent also I have a car of api's you",
    "start": "1724590",
    "end": "1731320"
  },
  {
    "start": "1728000",
    "end": "1745000"
  },
  {
    "text": "can easily create an API on that sink and you can use a sample schema the sample schema create an advanced",
    "start": "1731320",
    "end": "1738460"
  },
  {
    "text": "application and it's going to create a cup of that dynamodb tables at the back hand for you you start dancing for the",
    "start": "1738460",
    "end": "1744130"
  },
  {
    "text": "typing but let's actually check the chat application right so my chat application",
    "start": "1744130",
    "end": "1751330"
  },
  {
    "start": "1745000",
    "end": "1762000"
  },
  {
    "text": "absent gives me a grass going point I have specific settings here or at the",
    "start": "1751330",
    "end": "1756580"
  },
  {
    "text": "pharmacy here each authorization pipes I have a usable authenticating my users",
    "start": "1756580",
    "end": "1761740"
  },
  {
    "text": "and here I have a data source of this right I have four different dynamodb",
    "start": "1761740",
    "end": "1769360"
  },
  {
    "start": "1762000",
    "end": "1780000"
  },
  {
    "text": "tables I also have my schema here it's",
    "start": "1769360",
    "end": "1776620"
  },
  {
    "text": "my graph cow schema and my schema has",
    "start": "1776620",
    "end": "1782560"
  },
  {
    "start": "1780000",
    "end": "1800000"
  },
  {
    "text": "specific types but also has specific operations as I actuate so I have here a",
    "start": "1782560",
    "end": "1789790"
  },
  {
    "text": "query and mutations so let's take a look here at the resolver so resolvers are",
    "start": "1789790",
    "end": "1796930"
  },
  {
    "text": "associated with those operations and basically here i define my data source",
    "start": "1796930",
    "end": "1802990"
  },
  {
    "text": "which is one of my tables and I have my VTL template here where I can basically",
    "start": "1802990",
    "end": "1808980"
  },
  {
    "text": "transform of verifies and that and here is also where I create my conflict",
    "start": "1808980",
    "end": "1816040"
  },
  {
    "text": "resolution strategies like configure my conflict resolution strategies I can also have a response mapping template",
    "start": "1816040",
    "end": "1821320"
  },
  {
    "text": "that transforms the data back but my favorite part of the app sync console it",
    "start": "1821320",
    "end": "1830770"
  },
  {
    "start": "1830000",
    "end": "1856000"
  },
  {
    "text": "has a graph QL IDE butene so I can log in with my user boots we go back to",
    "start": "1830770",
    "end": "1838390"
  },
  {
    "text": "music ooh here I have a client ID I can't just copy this and paste here I",
    "start": "1838390",
    "end": "1846369"
  },
  {
    "text": "have my username dude this is the same user I'm logged in a my mobile and the",
    "start": "1846369",
    "end": "1857980"
  },
  {
    "start": "1856000",
    "end": "1889000"
  },
  {
    "text": "great thing about having my app on github so if you go to the app sync page",
    "start": "1857980",
    "end": "1863379"
  },
  {
    "text": "where you have resources you'll be able to access the angular chat app and the",
    "start": "1863379",
    "end": "1869169"
  },
  {
    "text": "great thing in the interest of time I can just copy my my graphically well or",
    "start": "1869169",
    "end": "1881730"
  },
  {
    "text": "my graphically well queries annotations so we can do some more demos later so I",
    "start": "1881759",
    "end": "1887980"
  },
  {
    "text": "have my graph growth folder here have all my mutations and queries so it's got an informations about the user I'm",
    "start": "1887980",
    "end": "1893110"
  },
  {
    "start": "1889000",
    "end": "1947000"
  },
  {
    "text": "logged in with so I just gonna copy this now and go to the console and just I",
    "start": "1893110",
    "end": "1902710"
  },
  {
    "text": "receive the data about my IDs and username if it's registered but if I",
    "start": "1902710",
    "end": "1908710"
  },
  {
    "text": "just want to get my IDs now nothing else it's very easy if graphically I just get",
    "start": "1908710",
    "end": "1914019"
  },
  {
    "text": "what I need or because I can I can also",
    "start": "1914019",
    "end": "1921369"
  },
  {
    "text": "use the username yeah",
    "start": "1921369",
    "end": "1928799"
  },
  {
    "text": "I'm sorry no I think it's username",
    "start": "1928799",
    "end": "1933910"
  },
  {
    "text": "I can just get my my documentation sorry",
    "start": "1933910",
    "end": "1939610"
  },
  {
    "text": "I can just get the results here let's go back yeah",
    "start": "1939610",
    "end": "1947640"
  },
  {
    "start": "1947000",
    "end": "1976000"
  },
  {
    "text": "so but now let's do some changes let's runs some rotations right so it have a",
    "start": "1947799",
    "end": "1954400"
  },
  {
    "text": "permutation here where I have my user",
    "start": "1954400",
    "end": "1959070"
  },
  {
    "text": "just copy this remove this part and and",
    "start": "1960360",
    "end": "1971559"
  },
  {
    "text": "we're gonna change the username shupette so on my UI here on my mobile device I",
    "start": "1971559",
    "end": "1980320"
  },
  {
    "start": "1976000",
    "end": "2021000"
  },
  {
    "text": "added a little UI components that tells me in the user name and I I hope that UI",
    "start": "1980320",
    "end": "1987159"
  },
  {
    "text": "component your subscription so if I I where I issued is notation to change my",
    "start": "1987159",
    "end": "1993159"
  },
  {
    "text": "username just notice my you I just changed in real time as well and I can",
    "start": "1993159",
    "end": "1999460"
  },
  {
    "text": "go to my to my data would it be table you see the user name is change let's",
    "start": "1999460",
    "end": "2005850"
  },
  {
    "text": "let's change it back to dude or else may it's gonna be really upset so again",
    "start": "2005850",
    "end": "2013860"
  },
  {
    "text": "change in real time if I go to my dynamodb table here in the backend it's changed but let's take a look at some",
    "start": "2013860",
    "end": "2023220"
  },
  {
    "start": "2021000",
    "end": "2082000"
  },
  {
    "text": "other very interesting table it's not",
    "start": "2023220",
    "end": "2028470"
  },
  {
    "text": "saying that's created a state di here so in let's use an empty schema I'm",
    "start": "2028470",
    "end": "2040049"
  },
  {
    "text": "going to select this and let's let's say",
    "start": "2040049",
    "end": "2048750"
  },
  {
    "text": "we have a car API right so just change this trip car car here",
    "start": "2048750",
    "end": "2058790"
  },
  {
    "text": "I have a car make and maybe I'll add a car collar as I strained so I can save",
    "start": "2059020",
    "end": "2071260"
  },
  {
    "text": "my schema sorry that's a big car here I",
    "start": "2071260",
    "end": "2078700"
  },
  {
    "text": "can save my schema so I have a valid",
    "start": "2078700",
    "end": "2084010"
  },
  {
    "start": "2082000",
    "end": "2105000"
  },
  {
    "text": "schema but I don't have a backhand yet so I don't have databases so it can create those resources directly from the",
    "start": "2084010",
    "end": "2090940"
  },
  {
    "text": "console so let's create so it's my type I define a type car so I can create a",
    "start": "2090940",
    "end": "2097510"
  },
  {
    "text": "dynamo DB table here where I specify the primary key and I can add specific index as if I need sugar rice but the best",
    "start": "2097510",
    "end": "2106960"
  },
  {
    "start": "2105000",
    "end": "2134000"
  },
  {
    "text": "thing is I think actually extends mice my schema and add all of that to my",
    "start": "2106960",
    "end": "2114730"
  },
  {
    "text": "schema qu optimized and basically make it a more complete API for me so I'm",
    "start": "2114730",
    "end": "2124540"
  },
  {
    "text": "just it's just creating dynamodb tables here might take a couple of seconds also",
    "start": "2124540",
    "end": "2134140"
  },
  {
    "start": "2134000",
    "end": "2292000"
  },
  {
    "text": "going to create some resolve but there you go so now I can start making queries",
    "start": "2134140",
    "end": "2140040"
  },
  {
    "text": "she mine nearly creates that created backhand so let's create a mutation here",
    "start": "2140040",
    "end": "2146380"
  },
  {
    "text": "as you can see this is because this of the because of the documentation you",
    "start": "2146380",
    "end": "2156340"
  },
  {
    "text": "thing without sync so I can have access to all my schema here and how I need to",
    "start": "2156340",
    "end": "2163540"
  },
  {
    "text": "make those those comments or mutations or queries so create car it",
    "start": "2163540",
    "end": "2171880"
  },
  {
    "text": "autocompletes for me so I just use an input let's say I want an ID of one make",
    "start": "2171880",
    "end": "2182700"
  },
  {
    "text": "let's make it Holden and",
    "start": "2182700",
    "end": "2189070"
  },
  {
    "text": "our brain and I want it to return to me",
    "start": "2189070",
    "end": "2197880"
  },
  {
    "text": "the IT and to make okay",
    "start": "2197880",
    "end": "2203080"
  },
  {
    "text": "so that was created for me let's create",
    "start": "2203080",
    "end": "2209140"
  },
  {
    "text": "another car maybe Ford and the caller go",
    "start": "2209140",
    "end": "2215110"
  },
  {
    "text": "ahead and maybe a toy car VW and color",
    "start": "2215110",
    "end": "2223240"
  },
  {
    "text": "black and let's check my dynamodb here",
    "start": "2223240",
    "end": "2231030"
  },
  {
    "text": "just oh I have a car table there created already so I can come here and you can",
    "start": "2231030",
    "end": "2238960"
  },
  {
    "text": "see my items which is created for me all right I want to query those guys now so",
    "start": "2238960",
    "end": "2247150"
  },
  {
    "text": "let's make a query list cars these cars",
    "start": "2247150",
    "end": "2259470"
  },
  {
    "text": "and I want some items there all right I want you leave my cars by ID and make so",
    "start": "2259470",
    "end": "2269800"
  },
  {
    "text": "school with all the complaints so I guess the least of my car so now I want a house with the color so as you can see",
    "start": "2269800",
    "end": "2279850"
  },
  {
    "text": "I created a full API with a highly scalable database without even leaving",
    "start": "2279850",
    "end": "2286030"
  },
  {
    "text": "the absent consoler any doubt yet the coding anything I can quickly prototype my data here but let's",
    "start": "2286030",
    "end": "2293530"
  },
  {
    "start": "2292000",
    "end": "2313000"
  },
  {
    "text": "imagine here I don't know anything about graph QL so I don't know how to create a",
    "start": "2293530",
    "end": "2299650"
  },
  {
    "text": "schema or anything like that so let's create another API call notes I still I",
    "start": "2299650",
    "end": "2308890"
  },
  {
    "text": "get my endpoint here so I have a scheme",
    "start": "2308890",
    "end": "2314350"
  },
  {
    "start": "2313000",
    "end": "2334000"
  },
  {
    "text": "at empty I don't know anything about the graph now schemas however I do have a dynamo DB table call no",
    "start": "2314350",
    "end": "2323460"
  },
  {
    "text": "so I can just select my table its own it",
    "start": "2323930",
    "end": "2329310"
  },
  {
    "text": "is office to my table name notes just",
    "start": "2329310",
    "end": "2334830"
  },
  {
    "start": "2334000",
    "end": "2365000"
  },
  {
    "text": "create a new role but there's a little check mark here automatically generate the graph cows schema yeah I want that I",
    "start": "2334830",
    "end": "2341160"
  },
  {
    "text": "don't know much about graph QL someone told me is good so I also going to add here another",
    "start": "2341160",
    "end": "2349250"
  },
  {
    "text": "another attribute that I have my table because this is an unknown key attribute right so I'm just gonna click create so",
    "start": "2351320",
    "end": "2360030"
  },
  {
    "text": "H con Mac to my existing DynamoDB table and basically create out the wiring to",
    "start": "2360030",
    "end": "2367349"
  },
  {
    "start": "2365000",
    "end": "2424000"
  },
  {
    "text": "enable it should be accessed via graph QL so I have my schema here but now",
    "start": "2367349",
    "end": "2373950"
  },
  {
    "text": "let's make some queries shall we I wanna take a look at my notes",
    "start": "2373950",
    "end": "2380599"
  },
  {
    "text": "so let's query here list nodes and I",
    "start": "2380599",
    "end": "2390780"
  },
  {
    "text": "want some items let's give me the note ID the user ID",
    "start": "2390780",
    "end": "2401790"
  },
  {
    "text": "and the note itself so if I issue my query I get all my notes in the back end",
    "start": "2401790",
    "end": "2409260"
  },
  {
    "text": "and sometimes Li what if I want to get you add pagination so let's add here",
    "start": "2409260",
    "end": "2415920"
  },
  {
    "text": "just what my first four notes and I want to add my token here so I get four notes",
    "start": "2415920",
    "end": "2426030"
  },
  {
    "text": "and I get a token I can refer whenever I need to get the next four notes so again",
    "start": "2426030",
    "end": "2434130"
  },
  {
    "text": "you notice I didn't have to leave the console the developer onboarding",
    "start": "2434130",
    "end": "2439380"
  },
  {
    "text": "experience it's a very nice experience you can get a pin running really quickly and you can start prototyping and your",
    "start": "2439380",
    "end": "2445349"
  },
  {
    "text": "backhand is ready in a matter of minutes",
    "start": "2445349",
    "end": "2449060"
  },
  {
    "text": "let's go back to this lives I'd like to",
    "start": "2450740",
    "end": "2456349"
  },
  {
    "start": "2455000",
    "end": "2503000"
  },
  {
    "text": "share some takeaways from my experience using graph here on sinc don't boil the",
    "start": "2456349",
    "end": "2461690"
  },
  {
    "text": "ocean start small test try and iterate so we can understand the concept not",
    "start": "2461690",
    "end": "2466730"
  },
  {
    "text": "every single UI component needs to be real-time from the get-go or need complex conflict to conflict resolution",
    "start": "2466730",
    "end": "2473330"
  },
  {
    "text": "strategies use UI indicators to let your users know they're offline so they can",
    "start": "2473330",
    "end": "2479330"
  },
  {
    "text": "relax and press the application will manage the connection automatically and send the data when they back online take",
    "start": "2479330",
    "end": "2486320"
  },
  {
    "text": "advantage of the powerful buting graphic capabilities such as pagination and relations in o sequel it's very",
    "start": "2486320",
    "end": "2493160"
  },
  {
    "text": "important to provide a good user experience for your users so they keep engaged and coming back to your app at sync checks lots of boxes to make it",
    "start": "2493160",
    "end": "2500480"
  },
  {
    "text": "easy and seamless so I'd like to make a challenge either when you finish",
    "start": "2500480",
    "end": "2507530"
  },
  {
    "start": "2503000",
    "end": "2530000"
  },
  {
    "text": "watching this webinar or when you get home tonight choose one of our sample apps and deploy app syncing your own",
    "start": "2507530",
    "end": "2513230"
  },
  {
    "text": "accounts to get started and try yourself all of these awesome and powerful features then decide to think about how",
    "start": "2513230",
    "end": "2519859"
  },
  {
    "text": "I can use them to supercharge your own applications go huge eps Inc makes it",
    "start": "2519859",
    "end": "2525410"
  },
  {
    "text": "really easy to develop and supercharge your application with graph UL on on",
    "start": "2525410",
    "end": "2532310"
  },
  {
    "start": "2530000",
    "end": "2576000"
  },
  {
    "text": "other good news we are also returning for popular developed series across six cities in in Australia New Zealand make",
    "start": "2532310",
    "end": "2540770"
  },
  {
    "text": "sure you register and come over for some great insights on how to apply the twelve factors to service applications",
    "start": "2540770",
    "end": "2547160"
  },
  {
    "text": "and before I end up today I just want you to to ask you your feedback it's",
    "start": "2547160",
    "end": "2556339"
  },
  {
    "text": "very important for us you want to hear if you enjoy the session if you want to see and have more of those webinars and",
    "start": "2556339",
    "end": "2563660"
  },
  {
    "text": "what sort of of use cases and services you want to hear more about it's very",
    "start": "2563660",
    "end": "2570950"
  },
  {
    "text": "important for it so please take some time to fill up the survey and let us know how it goes",
    "start": "2570950",
    "end": "2577390"
  },
  {
    "start": "2576000",
    "end": "2961000"
  },
  {
    "text": "thank you very much",
    "start": "2577499",
    "end": "2580829"
  },
  {
    "text": "[Music]",
    "start": "2594070",
    "end": "2597339"
  },
  {
    "text": "yeah I think we have time for some questions so let me address some of the",
    "start": "2680680",
    "end": "2687160"
  },
  {
    "text": "questions here so this AB sink work well with relational data like my sequel absolutely you can basically can connect",
    "start": "2687160",
    "end": "2694930"
  },
  {
    "text": "Rothko of anything so if you have an RDS database you can use lambda datasource",
    "start": "2694930",
    "end": "2702910"
  },
  {
    "text": "and I'm saying to connect your database and get sequel data in your in your API",
    "start": "2702910",
    "end": "2711599"
  },
  {
    "text": "is it possible to use auto off providers like Google Facebook so now we support",
    "start": "2715380",
    "end": "2723099"
  },
  {
    "text": "open ID connect providers so as long as your provider is not an ID connect",
    "start": "2723099",
    "end": "2729130"
  },
  {
    "text": "provider you can use the tokens tchoo tchoo basically authorizing access to",
    "start": "2729130",
    "end": "2738490"
  },
  {
    "text": "your your back hands",
    "start": "2738490",
    "end": "2741570"
  },
  {
    "text": "let me see what other questions here I have both IPA gateway in a sink which",
    "start": "2752890",
    "end": "2761259"
  },
  {
    "text": "one should choose well again it's the best tool for the job kind of thing right right so if I get to is great and",
    "start": "2761259",
    "end": "2771220"
  },
  {
    "text": "I think is also great graphical well too so again if you need if you have complex",
    "start": "2771220",
    "end": "2777039"
  },
  {
    "text": "that does data requirements if you have offline real-time capability you can use graphic UL depending on how many",
    "start": "2777039",
    "end": "2784950"
  },
  {
    "text": "endpoints you have on your API a REST API but we should definitely use it",
    "start": "2784950",
    "end": "2790749"
  },
  {
    "text": "again today they're both amazing services they are not mutually exclusive so we can have",
    "start": "2790749",
    "end": "2797799"
  },
  {
    "text": "parts of your application using API in three parts of your application using Apps Sync it's not a problem at all it's",
    "start": "2797799",
    "end": "2803680"
  },
  {
    "text": "just more tools for developing toolbox",
    "start": "2803680",
    "end": "2807450"
  },
  {
    "text": "does that sink work with other database types organ dynamodb for now we support",
    "start": "2809759",
    "end": "2815859"
  },
  {
    "text": "dynamo DB on elastics finished directly for other DB types you have to use",
    "start": "2815859",
    "end": "2821440"
  },
  {
    "text": "lambda as a proxy can we use PI - nice",
    "start": "2821440",
    "end": "2830799"
  },
  {
    "text": "coding language of app sync well as long as you have a graphical client in your Python application there is no problem",
    "start": "2830799",
    "end": "2839799"
  },
  {
    "text": "at all you just need a graphical client to issue those graphical coughs I can also use lambda right on the back end",
    "start": "2839799",
    "end": "2845529"
  },
  {
    "text": "there's not a problem at all",
    "start": "2845529",
    "end": "2848369"
  },
  {
    "text": "how would she use existing graph KPI from this issue lambda again you can use",
    "start": "2853589",
    "end": "2861369"
  },
  {
    "text": "lambda proxy there and connect",
    "start": "2861369",
    "end": "2865798"
  },
  {
    "text": "is it possible to run a single locally no at the moment that's not possible but",
    "start": "2872780",
    "end": "2881990"
  },
  {
    "text": "it might come in the future release never now how do you limit the query",
    "start": "2881990",
    "end": "2897930"
  },
  {
    "text": "result by specifying certain conditions and filtering so basically you need to",
    "start": "2897930",
    "end": "2903720"
  },
  {
    "text": "use a mapping template the resolver and then use a VTL to to basically create",
    "start": "2903720",
    "end": "2911340"
  },
  {
    "text": "specific conditions of filters you can use the first it meant it can be for loops anything that you need and I think",
    "start": "2911340",
    "end": "2923150"
  },
  {
    "text": "that Oh folks and again a please take a",
    "start": "2923150",
    "end": "2933000"
  },
  {
    "text": "look at the dev launch registration link you can access their register today also",
    "start": "2933000",
    "end": "2939330"
  },
  {
    "text": "you're going to make these slides and in the recording of the webinar available",
    "start": "2939330",
    "end": "2944760"
  },
  {
    "text": "so people can can access later and well",
    "start": "2944760",
    "end": "2956940"
  },
  {
    "text": "thank you very much for spending lunch time with us have a great day",
    "start": "2956940",
    "end": "2962150"
  }
]