[
  {
    "text": "greetings greetings guys so I will be talking about a quick architecture",
    "start": "1610",
    "end": "9000"
  },
  {
    "text": "overview as Jeremy say says we will be covering the foundations a higher level",
    "start": "9000",
    "end": "16560"
  },
  {
    "text": "in terms of architecture okay if we my plan is go through those contents so",
    "start": "16560",
    "end": "24390"
  },
  {
    "text": "from the general overview what I calling here the back end flow we will see what",
    "start": "24390",
    "end": "32040"
  },
  {
    "text": "back-end means here but it's the process that managed that connection and what it",
    "start": "32040",
    "end": "37770"
  },
  {
    "text": "does the auxillary process which means",
    "start": "37770",
    "end": "43140"
  },
  {
    "text": "here everything else that is not a back-end process that's handling that connection then we will talk a bit about",
    "start": "43140",
    "end": "50610"
  },
  {
    "text": "the disk layout and how things are organized internally in Postgres and then because we are talking about",
    "start": "50610",
    "end": "58800"
  },
  {
    "text": "the disk layout we will talk about the pages and purples and Postgres usually",
    "start": "58800",
    "end": "65250"
  },
  {
    "text": "we call pages when it's in memory but it could be also the data blocks inside the",
    "start": "65250",
    "end": "72540"
  },
  {
    "text": "data fire inside the table data file then we will talk about the",
    "start": "72540",
    "end": "78509"
  },
  {
    "text": "multi-version concurrency control the MVC see that we can argue that it's one",
    "start": "78509",
    "end": "86159"
  },
  {
    "text": "of the core one of the core components inside the Postgres database because it",
    "start": "86159",
    "end": "92790"
  },
  {
    "text": "how it handles not only the concurrency has the name said but how to handle the",
    "start": "92790",
    "end": "99450"
  },
  {
    "text": "locking system the conference through multiple connections trying to do",
    "start": "99450",
    "end": "106250"
  },
  {
    "text": "multiple things at the same time let's say if I am managing a bank I need to",
    "start": "106250",
    "end": "115799"
  },
  {
    "text": "redraw money from my account and the post money James account and I went to",
    "start": "115799",
    "end": "122939"
  },
  {
    "text": "that operation occurred in the most atomic way but if the money goes out",
    "start": "122939",
    "end": "131849"
  },
  {
    "text": "from my account I must be sure that it goes and jeremy's account otherwise it should not be out",
    "start": "131849",
    "end": "138960"
  },
  {
    "text": "of my account and then MVCC is there to",
    "start": "138960",
    "end": "143970"
  },
  {
    "text": "ensure that in the easiest way possible and by easiest I mean from the company",
    "start": "143970",
    "end": "151440"
  },
  {
    "text": "from the research utilization viewpoint and how the algorithm handles that in",
    "start": "151440",
    "end": "160140"
  },
  {
    "text": "the possible ways to control that but that we will see that bring few issues",
    "start": "160140",
    "end": "167670"
  },
  {
    "text": "in the long run that create old versions of turbos that will require vacuum and",
    "start": "167670",
    "end": "177030"
  },
  {
    "text": "that's when company that's very specific on posters and then we will glue",
    "start": "177030",
    "end": "184460"
  },
  {
    "text": "everything together talking about the shared memory and the writer had log",
    "start": "184460",
    "end": "189960"
  },
  {
    "text": "mechanism and then checkpoint back write checkpoint in background writer and that",
    "start": "189960",
    "end": "196860"
  },
  {
    "text": "will be then very high level covering those things so I would try to not take",
    "start": "196860",
    "end": "204540"
  },
  {
    "text": "more than 60 minutes talking about that but for sure we could spend one day",
    "start": "204540",
    "end": "210030"
  },
  {
    "text": "talking of one of each component here so the idea is giving a general idea I will",
    "start": "210030",
    "end": "216120"
  },
  {
    "text": "share this deck after I after this presentation which has few links as well",
    "start": "216120",
    "end": "222990"
  },
  {
    "text": "for each one of those topics okay so",
    "start": "222990",
    "end": "229130"
  },
  {
    "text": "just a brief word here so what is poster",
    "start": "229130",
    "end": "234180"
  },
  {
    "text": "is and why it's poster goose it's something that's not new probably there",
    "start": "234180",
    "end": "240630"
  },
  {
    "text": "are few people that we imagine that post chrism hype thing that is just happening",
    "start": "240630",
    "end": "247410"
  },
  {
    "text": "from the last five years but it's a very stable and solid project that was",
    "start": "247410",
    "end": "254280"
  },
  {
    "text": "created in Berkeley in 1985 and the name",
    "start": "254280",
    "end": "261329"
  },
  {
    "text": "came from an old database name ingress so the post",
    "start": "261330",
    "end": "267120"
  },
  {
    "text": "is post ingress that's the name there's a vibrant community online and",
    "start": "267120",
    "end": "274280"
  },
  {
    "text": "presidential community that you can seek people around the world to discuss ideas",
    "start": "274280",
    "end": "281540"
  },
  {
    "text": "develop together and share your ideas",
    "start": "281540",
    "end": "287150"
  },
  {
    "text": "it's a free software but by free usually people have this concept that free means",
    "start": "287150",
    "end": "293850"
  },
  {
    "text": "I don't need to pay anything and you don't need to pay for their lives the license but it means that you still need",
    "start": "293850",
    "end": "300330"
  },
  {
    "text": "to pay for sports to need to pay your DBA is to need to pay for taking care of",
    "start": "300330",
    "end": "308700"
  },
  {
    "text": "your database so we could thread good translate that for a low low cost of",
    "start": "308700",
    "end": "313740"
  },
  {
    "text": "ownership due to the posters licensing so yeah there's professional commercial",
    "start": "313740",
    "end": "319979"
  },
  {
    "text": "support as you will see in any other engines like Seco server oracle sybase",
    "start": "319979",
    "end": "327860"
  },
  {
    "text": "yeah it's another database and another",
    "start": "327860",
    "end": "334350"
  },
  {
    "text": "thing that I could mention here that I think it worth to mention in an open slide is that post via skype has a very",
    "start": "334350",
    "end": "341820"
  },
  {
    "text": "clear versioning policy and a development cycle release notes so it's",
    "start": "341820",
    "end": "347430"
  },
  {
    "text": "very predictable how new features are released how bugs are Patchett why you",
    "start": "347430",
    "end": "355020"
  },
  {
    "text": "should keep on the latest minor version things like that that we can discuss it",
    "start": "355020",
    "end": "363840"
  },
  {
    "text": "later on okay so to start talking about",
    "start": "363840",
    "end": "370410"
  },
  {
    "text": "the architecture we need to understand how the client the application connect",
    "start": "370410",
    "end": "378510"
  },
  {
    "text": "with the database and there's a very simple diagram here that we will say",
    "start": "378510",
    "end": "388169"
  },
  {
    "text": "that Postgres the clients the application we will use the early PQ",
    "start": "388169",
    "end": "395240"
  },
  {
    "text": "that's the client library and the leap you will open",
    "start": "395240",
    "end": "400320"
  },
  {
    "text": "a connection and try to authenticate with the postmaster this authentication",
    "start": "400320",
    "end": "406950"
  },
  {
    "text": "will fork another process inside the Linux and that other process will be",
    "start": "406950",
    "end": "414630"
  },
  {
    "text": "responsible for that connection here we are talking about Li P cubed it could be",
    "start": "414630",
    "end": "420170"
  },
  {
    "text": "JDBC driver for example then that back-end process of course if you have",
    "start": "420170",
    "end": "430940"
  },
  {
    "text": "50 connections those 50 connections must know which what each one is doing they",
    "start": "430940",
    "end": "438630"
  },
  {
    "text": "need to understand that if I'm open a table and other session is open the same",
    "start": "438630",
    "end": "445980"
  },
  {
    "text": "table what that session is doing I'm allowed to lock that table or not and",
    "start": "445980",
    "end": "452930"
  },
  {
    "text": "that integration and that communication between those process it's done through",
    "start": "452930",
    "end": "459390"
  },
  {
    "text": "the shared memory that's pre-allocated when the postmaster is launched it then",
    "start": "459390",
    "end": "467460"
  },
  {
    "text": "of course you have kernel stack that will handle these buffers and the",
    "start": "467460",
    "end": "474030"
  },
  {
    "text": "storage itself okay when when the tea",
    "start": "474030",
    "end": "484230"
  },
  {
    "text": "one detail that's important to mention here is that the Postgres protocol is",
    "start": "484230",
    "end": "489830"
  },
  {
    "text": "from 80s so it's it's very detail in",
    "start": "489830",
    "end": "498180"
  },
  {
    "text": "terms of how it's implemented and at that time it was assumed that tcp it's",
    "start": "498180",
    "end": "507990"
  },
  {
    "text": "not it was not as standard yet so you have somehow re-implementation of few",
    "start": "507990",
    "end": "516000"
  },
  {
    "text": "things that you have given and tcp/ip that's reimplemented and only PQ okay so",
    "start": "516000",
    "end": "528440"
  },
  {
    "text": "you will see that each connection now it's handled by a different",
    "start": "528440",
    "end": "534120"
  },
  {
    "text": "process idea different back end through those fork processes okay",
    "start": "534120",
    "end": "539790"
  },
  {
    "text": "and each back-end is also responsible for its own authentication so you kind",
    "start": "539790",
    "end": "546540"
  },
  {
    "text": "of fork first to have that process out indicate for you and if that authentication and it's wrong your",
    "start": "546540",
    "end": "555870"
  },
  {
    "text": "passwords wrong your our users wrong then the process will terminate itself",
    "start": "555870",
    "end": "563870"
  },
  {
    "text": "so yep Li PQ it's a client-server protocol and you will use the socket",
    "start": "563870",
    "end": "571730"
  },
  {
    "text": "interface nowadays to communicate through tcp/ip then we will talk also",
    "start": "571730",
    "end": "584070"
  },
  {
    "text": "about the auxiliary processes and how the auxillary process and those back-end",
    "start": "584070",
    "end": "590220"
  },
  {
    "text": "process are tied together with the shared memory so the disk layout and how",
    "start": "590220",
    "end": "603029"
  },
  {
    "text": "files are distributed we will see that there is the database cluster and the",
    "start": "603029",
    "end": "611490"
  },
  {
    "text": "cluster word specifically is can create some sort of a confusion for the the",
    "start": "611490",
    "end": "621150"
  },
  {
    "text": "user that's seeing it for the first time on post miss community because cluster here does not mean a set of instances",
    "start": "621150",
    "end": "629970"
  },
  {
    "text": "are different machines as you wish it means a set of databases inside the same",
    "start": "629970",
    "end": "638640"
  },
  {
    "text": "instance and that's the terminology using Postgres documentation that",
    "start": "638640",
    "end": "644790"
  },
  {
    "text": "sometimes if you are reading it for the first time you see the word cluster for",
    "start": "644790",
    "end": "651660"
  },
  {
    "text": "example PG CTL we start the cluster but you say but I'm I don't want to restart",
    "start": "651660",
    "end": "657570"
  },
  {
    "text": "a cluster I want to restart just this instance yet your instance is the cluster because it handles multiple",
    "start": "657570",
    "end": "664050"
  },
  {
    "text": "databases inside the same instance and it's a concept that Postgres has",
    "start": "664050",
    "end": "670470"
  },
  {
    "text": "from pretty much from the beginning that you can have multiple databases inside",
    "start": "670470",
    "end": "676360"
  },
  {
    "text": "the same instance you don't need to have multiple instance to have multiple",
    "start": "676360",
    "end": "683049"
  },
  {
    "text": "databases okay and there's this something very specific on posters so",
    "start": "683049",
    "end": "691869"
  },
  {
    "text": "you have like inside the cluster but we can replace that word cluster to make it",
    "start": "691869",
    "end": "699040"
  },
  {
    "text": "easier to understand that cluster here means instance so have the database",
    "start": "699040",
    "end": "705399"
  },
  {
    "text": "instance which has multiple database DB 1 DB 2 DB n those database they are",
    "start": "705399",
    "end": "712949"
  },
  {
    "text": "isolated from each other so you cannot join one table from database one with",
    "start": "712949",
    "end": "720910"
  },
  {
    "text": "database too easily you can do that but you will need to do a link a DB link",
    "start": "720910",
    "end": "727779"
  },
  {
    "text": "between those two databases as you are doing a DB link with another instance ok",
    "start": "727779",
    "end": "735309"
  },
  {
    "text": "because they are really isolated from each other but then you have DB n here",
    "start": "735309",
    "end": "742360"
  },
  {
    "text": "that you can have multiple schemas and by schemas here we can understand like",
    "start": "742360",
    "end": "749949"
  },
  {
    "text": "logical containers ok so I can have my public schema that's the default schema",
    "start": "749949",
    "end": "756220"
  },
  {
    "text": "but I can have schema HR schema accounting schema marketing and each one",
    "start": "756220",
    "end": "764110"
  },
  {
    "text": "of those schemas handling objects for their own business and then those",
    "start": "764110",
    "end": "769389"
  },
  {
    "text": "schemas I can join tables from different",
    "start": "769389",
    "end": "774699"
  },
  {
    "text": "schemas inside the same database that's given I can have foreign keys between",
    "start": "774699",
    "end": "781540"
  },
  {
    "text": "them so and another thing that people",
    "start": "781540",
    "end": "790119"
  },
  {
    "text": "will create some confusion when coming from our code that sometimes kima will",
    "start": "790119",
    "end": "797919"
  },
  {
    "text": "me user and user means kima but here they are not related",
    "start": "797919",
    "end": "804460"
  },
  {
    "text": "with the user that connects with the database so schema it's just a logical",
    "start": "804460",
    "end": "810570"
  },
  {
    "text": "container it's just we can't do an allergy like it's a directory when I put",
    "start": "810570",
    "end": "817180"
  },
  {
    "text": "my files my objects but this is just an analogy okay schema is not a directory",
    "start": "817180",
    "end": "823930"
  },
  {
    "text": "is just a container a logical container which I can use to divide my objects",
    "start": "823930",
    "end": "829830"
  },
  {
    "text": "with a logical meaning like I say accounting marketing HR and put objects",
    "start": "829830",
    "end": "839310"
  },
  {
    "text": "in a different schema to have it organize it okay or even I could have",
    "start": "839310",
    "end": "846270"
  },
  {
    "text": "the penny on my data model I could have different schemas for different",
    "start": "846270",
    "end": "854370"
  },
  {
    "text": "companies or different business units and then I can merge them together it",
    "start": "854370",
    "end": "862030"
  },
  {
    "text": "really depends it's very flexible internally and they host each database",
    "start": "862030",
    "end": "871540"
  },
  {
    "text": "is a directory there's a specific directory with an ID which will contain",
    "start": "871540",
    "end": "880180"
  },
  {
    "text": "out that our data files for each table or each index or each sequence that's",
    "start": "880180",
    "end": "889110"
  },
  {
    "text": "inside that host which will be used by the the postmaster okay in the back ends",
    "start": "889110",
    "end": "900420"
  },
  {
    "text": "and then we need to start talking about the backends okay how the back end work",
    "start": "900420",
    "end": "909570"
  },
  {
    "text": "remember that the back end here is the process inside the UNIX that handles",
    "start": "909570",
    "end": "916390"
  },
  {
    "text": "your connection okay so he's responsible for your session so to first start I can",
    "start": "916390",
    "end": "925750"
  },
  {
    "text": "already say that because one process is designed to handle your connection if",
    "start": "925750",
    "end": "933100"
  },
  {
    "text": "you have 1,000 connections you will have 1,000",
    "start": "933100",
    "end": "938950"
  },
  {
    "text": "processes to deal with your which each",
    "start": "938950",
    "end": "944620"
  },
  {
    "text": "one of your connection ok so there's a",
    "start": "944620",
    "end": "950310"
  },
  {
    "text": "very good slide from Bruce margin here that tells how the back end will behave",
    "start": "950310",
    "end": "961500"
  },
  {
    "text": "when the statement is coming from the application ok so there is another cut",
    "start": "961500",
    "end": "970630"
  },
  {
    "text": "here from what we see in the previous slide when the lead PQ is responsible to",
    "start": "970630",
    "end": "976710"
  },
  {
    "text": "connect the Postgres with the application which we can see the main",
    "start": "976710",
    "end": "983620"
  },
  {
    "text": "here then this green square is the back",
    "start": "983620",
    "end": "989170"
  },
  {
    "text": "end behaving and the work flow inside that green green scares the sub-modules",
    "start": "989170",
    "end": "1000480"
  },
  {
    "text": "that is inside that back end so we will talk about the parsing phase we also had",
    "start": "1000480",
    "end": "1008100"
  },
  {
    "text": "the traffic cop that will be used to divide which is a complex query and then",
    "start": "1008100",
    "end": "1015650"
  },
  {
    "text": "from what is a simple comment and by",
    "start": "1015650",
    "end": "1021930"
  },
  {
    "text": "complex query here we are talking about select inserts updates and deletes not",
    "start": "1021930",
    "end": "1030870"
  },
  {
    "text": "really complex in terms of how big your query is how if there's joins or not",
    "start": "1030870",
    "end": "1039410"
  },
  {
    "text": "complex is everything that's not a comment and by comment here will be a",
    "start": "1039410",
    "end": "1045959"
  },
  {
    "text": "copy a create table an outer table those",
    "start": "1045959",
    "end": "1051720"
  },
  {
    "text": "things will be like comment utility then we have the rewrite phase that nowadays",
    "start": "1051720",
    "end": "1059460"
  },
  {
    "text": "is use it will be used more to decode",
    "start": "1059460",
    "end": "1064920"
  },
  {
    "text": "views into queries then we will have the generate",
    "start": "1064920",
    "end": "1075150"
  },
  {
    "text": "paths in the generate plans take in",
    "start": "1075150",
    "end": "1080820"
  },
  {
    "text": "consideration the statistics that is constantly collected by the auto vacuum",
    "start": "1080820",
    "end": "1089300"
  },
  {
    "text": "workers and of course if you run analyze and then you have this equation phase",
    "start": "1089300",
    "end": "1097140"
  },
  {
    "text": "this equation plan this process can retro element 8 itself",
    "start": "1097140",
    "end": "1104760"
  },
  {
    "text": "if you have Suba queries and if you have",
    "start": "1104760",
    "end": "1110540"
  },
  {
    "text": "start procedures or views and then finally when the Secutor goes on it",
    "start": "1110600",
    "end": "1117510"
  },
  {
    "text": "gives the result back to your client so",
    "start": "1117510",
    "end": "1126240"
  },
  {
    "text": "what I try to do in my my next few slides here is to dive deep a bit into",
    "start": "1126240",
    "end": "1135290"
  },
  {
    "text": "which one of those phases okay and as I",
    "start": "1135290",
    "end": "1141630"
  },
  {
    "text": "mentioned before each one of those lights has few references and links to sometimes dogs or Postgres source code",
    "start": "1141630",
    "end": "1151200"
  },
  {
    "text": "from the implementation of that part inside the backend so that might help us",
    "start": "1151200",
    "end": "1158610"
  },
  {
    "text": "to dive deep later as well so one thing that the leap peak you thinking here in",
    "start": "1158610",
    "end": "1165630"
  },
  {
    "text": "the client side have in mind is that it's a custom protocol so it must take",
    "start": "1165630",
    "end": "1172730"
  },
  {
    "text": "pretty much they have lift of network communication even if it's implementing",
    "start": "1172730",
    "end": "1178290"
  },
  {
    "text": "on top of tcp/ip you must control network timeouts you must control if",
    "start": "1178290",
    "end": "1185910"
  },
  {
    "text": "it's a security connection it must use a library for SSL connection but it must",
    "start": "1185910",
    "end": "1193050"
  },
  {
    "text": "call those functions itself inside the",
    "start": "1193050",
    "end": "1198420"
  },
  {
    "text": "leap EQ protocol so there's a lot of settings that you can do both on",
    "start": "1198420",
    "end": "1205290"
  },
  {
    "text": "client side as well in the server side to manage how this protocol will behave",
    "start": "1205290",
    "end": "1212330"
  },
  {
    "text": "it has few other features as well for",
    "start": "1212630",
    "end": "1217740"
  },
  {
    "text": "example a synchronous notification listing not Phi command imposters that",
    "start": "1217740",
    "end": "1223920"
  },
  {
    "text": "can be used to do queuing so this is a very good feature from the Olympic queue",
    "start": "1223920",
    "end": "1235530"
  },
  {
    "text": "itself the native native SSL support",
    "start": "1235530",
    "end": "1241130"
  },
  {
    "text": "based SSL libraries that I mentioned is that thing that I was saying that we",
    "start": "1241130",
    "end": "1249810"
  },
  {
    "text": "have a library that implements the SSL connection but how that implementation",
    "start": "1249810",
    "end": "1256800"
  },
  {
    "text": "calls those functions is done by the lipid queue itself the lipid queue also",
    "start": "1256800",
    "end": "1262080"
  },
  {
    "text": "implements the book import/export through the copy comment the cop",
    "start": "1262080",
    "end": "1267780"
  },
  {
    "text": "statement that's very useful to do large operations when you are dealing with a",
    "start": "1267780",
    "end": "1275270"
  },
  {
    "text": "large table what million rows I want to get from a CSV an important a table I do",
    "start": "1275270",
    "end": "1282690"
  },
  {
    "text": "not do this doing 1 million inserts because it will have the overhead in",
    "start": "1282690",
    "end": "1291060"
  },
  {
    "text": "terms of parsing that statement of doing",
    "start": "1291060",
    "end": "1296610"
  },
  {
    "text": "a lot of extra work so if I already know beforehand that I need to insert 1",
    "start": "1296610",
    "end": "1303540"
  },
  {
    "text": "million rows or registers from a CSV file I must use the cop comment to make",
    "start": "1303540",
    "end": "1311910"
  },
  {
    "text": "it faster okay so then following the",
    "start": "1311910",
    "end": "1318180"
  },
  {
    "text": "arrow with the arrow here we see that the lipid queue connects with the back",
    "start": "1318180",
    "end": "1325290"
  },
  {
    "text": "end ok and what the back end or the back ends the multiple process that we have",
    "start": "1325290",
    "end": "1330660"
  },
  {
    "text": "for each connection that we have will be the will do now those multiple",
    "start": "1330660",
    "end": "1337900"
  },
  {
    "text": "process simply find that flow will do",
    "start": "1337900",
    "end": "1344380"
  },
  {
    "text": "the parser the optimizer in the executor phase okay so the parser",
    "start": "1344380",
    "end": "1352840"
  },
  {
    "text": "first thing the parser will do it's a lexical analysis it's make sure that the",
    "start": "1352840",
    "end": "1358809"
  },
  {
    "text": "syntax that you are using it's a valid syntax it's a valid grammar if you are",
    "start": "1358809",
    "end": "1366429"
  },
  {
    "text": "not misspelling some comment if that common it's make it it's making sense",
    "start": "1366429",
    "end": "1373030"
  },
  {
    "text": "from the the seco grammar that's implemented inside Postgres okay and that is done using few",
    "start": "1373030",
    "end": "1387090"
  },
  {
    "text": "few things here there the five for the lexical analysis and the grammar itself",
    "start": "1387090",
    "end": "1393570"
  },
  {
    "text": "that it used bison in Flex that's an",
    "start": "1393570",
    "end": "1399010"
  },
  {
    "text": "open source tools as well that implement implements those parsing languages okay",
    "start": "1399010",
    "end": "1407100"
  },
  {
    "text": "the results in this phase will be a parse tree and we can think in terms of",
    "start": "1407100",
    "end": "1417210"
  },
  {
    "text": "decoding the language the Seco language",
    "start": "1417210",
    "end": "1422730"
  },
  {
    "text": "instructors that you say if I'm doing a select which sieve functions inside the",
    "start": "1422730",
    "end": "1428890"
  },
  {
    "text": "source code must be called to do the Select sometimes you take select a",
    "start": "1428890",
    "end": "1437440"
  },
  {
    "text": "simple select select star from table a by giving some database magical thing",
    "start": "1437440",
    "end": "1444549"
  },
  {
    "text": "internally will do that for us but we need to remember there's some source code doing that for us and to do those",
    "start": "1444549",
    "end": "1451299"
  },
  {
    "text": "things we need to decode the simple select in terms of C operations C",
    "start": "1451299",
    "end": "1457600"
  },
  {
    "text": "functions inside the database codes to do that and that it's done in this phase",
    "start": "1457600",
    "end": "1463840"
  },
  {
    "text": "here okay of course if instead select I misspelled a select and I had",
    "start": "1463840",
    "end": "1472000"
  },
  {
    "text": "an extra e on the end that comment is invalid the Seco grammar does not",
    "start": "1472000",
    "end": "1479230"
  },
  {
    "text": "implement a select e with the e in the end so it gives a neighbor that comment",
    "start": "1479230",
    "end": "1484900"
  },
  {
    "text": "is invalid that's done in this phase here okay",
    "start": "1484900",
    "end": "1489910"
  },
  {
    "text": "it will generate a parse tree it trees a data structure in the memory that we",
    "start": "1489910",
    "end": "1496090"
  },
  {
    "text": "represented that that comment that you are trying to execute but by that time",
    "start": "1496090",
    "end": "1503940"
  },
  {
    "text": "you are not validating objects yet so you don't really know if the table",
    "start": "1503940",
    "end": "1509080"
  },
  {
    "text": "resists or not if the column is this or not but you have now it's the personals",
    "start": "1509080",
    "end": "1516460"
  },
  {
    "text": "is to add those things okay as the",
    "start": "1516460",
    "end": "1522970"
  },
  {
    "text": "function is this if you're trying to call a function to the code time stamps",
    "start": "1522970",
    "end": "1529630"
  },
  {
    "text": "to string it's done in this phase and",
    "start": "1529630",
    "end": "1535650"
  },
  {
    "text": "then you have the rewrite face the which I mention before its most used nowadays",
    "start": "1535650",
    "end": "1541360"
  },
  {
    "text": "to replace views into normal queries but you can also manipulate the rewrite",
    "start": "1541360",
    "end": "1548830"
  },
  {
    "text": "directly you I mean the developer the DBA and do some trick stuff which is not",
    "start": "1548830",
    "end": "1556660"
  },
  {
    "text": "recommended nowadays but still can do that for example if I try to insert",
    "start": "1556660",
    "end": "1562300"
  },
  {
    "text": "something in a table instead insert in that table I start in other table that's",
    "start": "1562300",
    "end": "1568510"
  },
  {
    "text": "possible in sometimes it's useful to know that it's possible to do that so",
    "start": "1568510",
    "end": "1574120"
  },
  {
    "text": "that's done in the rewrite face that fix something very specific on unpause which is not triggers something and then I",
    "start": "1574120",
    "end": "1583320"
  },
  {
    "text": "could say lower level than triggers and it's something interesting",
    "start": "1583320",
    "end": "1591179"
  },
  {
    "text": "okay so now we have the parse tree and we need to we need to know what to do if",
    "start": "1592330",
    "end": "1599980"
  },
  {
    "text": "the parse tree we already know that it common desist the common represents",
    "start": "1599980",
    "end": "1605590"
  },
  {
    "text": "those sieve functions and those if functions will try to access object",
    "start": "1605590",
    "end": "1613240"
  },
  {
    "text": "table way with columns c1 and c2 for example so now we need to understand how",
    "start": "1613240",
    "end": "1620290"
  },
  {
    "text": "I will do that and by how I mean should I use an index to access it I'm talking",
    "start": "1620290",
    "end": "1628300"
  },
  {
    "text": "about the entire table just one row in that stable if I should use the in index",
    "start": "1628300",
    "end": "1634210"
  },
  {
    "text": "which index I should use those things and those operations are done here by",
    "start": "1634210",
    "end": "1644050"
  },
  {
    "text": "the optimizer which will be decoding the parse tree to get an execution plan okay",
    "start": "1644050",
    "end": "1651580"
  },
  {
    "text": "if I'm doing a joint which the join mat which the join method that I will do",
    "start": "1651580",
    "end": "1658180"
  },
  {
    "text": "hash join a nested loop if I'm using an",
    "start": "1658180",
    "end": "1664090"
  },
  {
    "text": "aggregation how that will be taken in place and that fails the optimizer phase",
    "start": "1664090",
    "end": "1673540"
  },
  {
    "text": "will get the parse tree that it's that we could consider ate the table plus",
    "start": "1673540",
    "end": "1680520"
  },
  {
    "text": "statistics sorry the table statistics",
    "start": "1680520",
    "end": "1685570"
  },
  {
    "text": "plus the cost parameters and get this equation plan tree okay and that part is",
    "start": "1685570",
    "end": "1694630"
  },
  {
    "text": "important for a DBA what is a cost parameters here the cost parameters we",
    "start": "1694630",
    "end": "1701740"
  },
  {
    "text": "could imagine like they are the factors that represent your host your",
    "start": "1701740",
    "end": "1708160"
  },
  {
    "text": "environment and by factors I'm talking",
    "start": "1708160",
    "end": "1713890"
  },
  {
    "text": "about absolute factors exactly which the difference between a random access and a",
    "start": "1713890",
    "end": "1721900"
  },
  {
    "text": "sequential access when I'm trying to get a role in your database it's a way how you can control",
    "start": "1721900",
    "end": "1730970"
  },
  {
    "text": "the optimizer itself by manipulating those factors okay so it's a kind of",
    "start": "1730970",
    "end": "1739669"
  },
  {
    "text": "external knobs that you have to manipulate how the optimizer will behave",
    "start": "1739669",
    "end": "1745799"
  },
  {
    "text": "so it's important for the DBA understand the optimizer behavior itself and how",
    "start": "1745799",
    "end": "1753480"
  },
  {
    "text": "those knobs interfere with that behavior based on the query that he's trying to",
    "start": "1753480",
    "end": "1759690"
  },
  {
    "text": "do and there are multiple cost parameters for multiple different",
    "start": "1759690",
    "end": "1766460"
  },
  {
    "text": "actions that the optimizer will generate",
    "start": "1766460",
    "end": "1771509"
  },
  {
    "text": "those actions is the execution plan 3 west west execution plan 3 is done is",
    "start": "1771509",
    "end": "1780350"
  },
  {
    "text": "pretty much it is that how poss receive access your data so you have a rainy-day",
    "start": "1780350",
    "end": "1788210"
  },
  {
    "text": "the the final plan to execute that data",
    "start": "1788840",
    "end": "1795149"
  },
  {
    "text": "ok you know that there's the comment explained that allows you to observe",
    "start": "1795149",
    "end": "1801509"
  },
  {
    "text": "that Planetree it's pretty much the output from the operation so to explain we generate and",
    "start": "1801509",
    "end": "1809519"
  },
  {
    "text": "you observe those costs you observe how much time it should take and if you run",
    "start": "1809519",
    "end": "1818700"
  },
  {
    "text": "explain analyze it gets the real data after the real execution so when you run",
    "start": "1818700",
    "end": "1824129"
  },
  {
    "text": "it's playing in our eyes in a query it pretty much get everything the time on",
    "start": "1824129",
    "end": "1831059"
  },
  {
    "text": "each one of those phases how much time you take by join the table how much time",
    "start": "1831059",
    "end": "1838559"
  },
  {
    "text": "you take in the where clause how much time you take aggregating that value",
    "start": "1838559",
    "end": "1844710"
  },
  {
    "text": "that you receive from that join everything you get and you get those",
    "start": "1844710",
    "end": "1850769"
  },
  {
    "text": "metrics from there usually explained allies will give you the best",
    "start": "1850769",
    "end": "1858090"
  },
  {
    "text": "idea of how much time your query will take so developers constantly talk about",
    "start": "1858090",
    "end": "1866059"
  },
  {
    "text": "test-driven development for example and it's interesting that sometimes you",
    "start": "1866059",
    "end": "1874739"
  },
  {
    "text": "forget to add and explain analyze for queries that you are doing in the",
    "start": "1874739",
    "end": "1881960"
  },
  {
    "text": "application to get those metrics and it's pretty rich in terms of metrics so",
    "start": "1881960",
    "end": "1889109"
  },
  {
    "text": "it's some good products as well getting",
    "start": "1889109",
    "end": "1894239"
  },
  {
    "text": "the explained allies of the most common queries that rinse and interpret those",
    "start": "1894239",
    "end": "1900239"
  },
  {
    "text": "data and see that it's skewered in terms of watch X what I would expect that",
    "start": "1900239",
    "end": "1906839"
  },
  {
    "text": "behaves or not ok so then there is a",
    "start": "1906839",
    "end": "1914849"
  },
  {
    "text": "cuter there is a cuter once you have the execution tree we will get the a copy of",
    "start": "1914849",
    "end": "1924719"
  },
  {
    "text": "the plan tree which it's me the state tree that will control which step is",
    "start": "1924719",
    "end": "1930869"
  },
  {
    "text": "being executed ok and of course the executor needs to know about the memory management the",
    "start": "1930869",
    "end": "1939149"
  },
  {
    "text": "transactions access methods how I access",
    "start": "1939149",
    "end": "1944219"
  },
  {
    "text": "that row internally in the page and then I go to the access itself that's how the",
    "start": "1944219",
    "end": "1952499"
  },
  {
    "text": "access is implemented for different types of objects that I can access for",
    "start": "1952499",
    "end": "1958080"
  },
  {
    "text": "example if it's an index I have different types of indexes that's",
    "start": "1958080",
    "end": "1965580"
  },
  {
    "text": "something very good and Postgres I have even a possibility of extend how an",
    "start": "1965580",
    "end": "1973649"
  },
  {
    "text": "index work using those expression index types here balance at 3 rash gene gist",
    "start": "1973649",
    "end": "1985009"
  },
  {
    "text": "special access methods for indexes and then the heap itself heap",
    "start": "1985009",
    "end": "1991950"
  },
  {
    "text": "when we see hip in the source code is a table access they're the wrong table access okay",
    "start": "1991950",
    "end": "1999620"
  },
  {
    "text": "and that would be the end of this",
    "start": "2000430",
    "end": "2005900"
  },
  {
    "text": "occasion phase and then you get the data from the disk or from the memory depends",
    "start": "2005900",
    "end": "2011810"
  },
  {
    "text": "where your data already are and give that data back to your application so we",
    "start": "2011810",
    "end": "2021260"
  },
  {
    "text": "see there's a lot of things implemented internally on the simple back end that's handling your connection it's not just",
    "start": "2021260",
    "end": "2028640"
  },
  {
    "text": "handling your connection is doing all that abase stuff that you want to do",
    "start": "2028640",
    "end": "2034690"
  },
  {
    "text": "okay so now we need to talk a bit about the auxillary processes and I would just",
    "start": "2036910",
    "end": "2043580"
  },
  {
    "text": "try to cover it as fast as possible because there's a lot of auxiliary processes auxilary process here it's",
    "start": "2043580",
    "end": "2053149"
  },
  {
    "text": "everything that it's not just the backend that's handling our connection okay we have auto vacuum starts",
    "start": "2053150",
    "end": "2060919"
  },
  {
    "text": "collector that collects activities from your database information about how much",
    "start": "2060919",
    "end": "2068990"
  },
  {
    "text": "that table was accessed how much how how",
    "start": "2068990",
    "end": "2077659"
  },
  {
    "text": "much the number of how many's the name the number of dead rows the dead stop",
    "start": "2077660",
    "end": "2083960"
  },
  {
    "text": "was inside that object okay and then we see the Wow writer that's responsible",
    "start": "2083960",
    "end": "2093679"
  },
  {
    "text": "for controlling the the execution of the",
    "start": "2093679",
    "end": "2101300"
  },
  {
    "text": "redo mechanism Impostors so we have the",
    "start": "2101300",
    "end": "2107540"
  },
  {
    "text": "backend process here when trying to access the shared memory getting the",
    "start": "2107540",
    "end": "2113840"
  },
  {
    "text": "ball buffers writing using the wall writer mechanism to the raw files which",
    "start": "2113840",
    "end": "2120620"
  },
  {
    "text": "will after be used by the archiver",
    "start": "2120620",
    "end": "2125840"
  },
  {
    "text": "to send this to an archive storage okay",
    "start": "2125840",
    "end": "2137840"
  },
  {
    "text": "so now going a bit deeper in terms of pages and the memory itself and how is",
    "start": "2137840",
    "end": "2146090"
  },
  {
    "text": "the data structure of those processes what those processes are trying to do",
    "start": "2146090",
    "end": "2152060"
  },
  {
    "text": "which the fine granularity in terms of data internally in the posters so we",
    "start": "2152060",
    "end": "2159080"
  },
  {
    "text": "already know that we see the backend process here and each process has its",
    "start": "2159080",
    "end": "2164120"
  },
  {
    "text": "own memory structures 410th buffers",
    "start": "2164120",
    "end": "2171950"
  },
  {
    "text": "workmen and maintenance work men pretty much we can highlight the workmen here",
    "start": "2171950",
    "end": "2179030"
  },
  {
    "text": "for hash joints or any sort of internal operations that the backend is doing for",
    "start": "2179030",
    "end": "2186590"
  },
  {
    "text": "example joints as I mentioned aggregations orders if your query",
    "start": "2186590",
    "end": "2192830"
  },
  {
    "text": "realize a lot of memory for those operations it's a parameter that you can",
    "start": "2192830",
    "end": "2199760"
  },
  {
    "text": "increase and then you have a shared memory global pool here that all those",
    "start": "2199760",
    "end": "2206360"
  },
  {
    "text": "processes will talk with so one process know which odd what each other is doing",
    "start": "2206360",
    "end": "2213980"
  },
  {
    "text": "and then that memory the shared memory",
    "start": "2213980",
    "end": "2219320"
  },
  {
    "text": "will be synced with the data files itself we've got a bit deeper in terms",
    "start": "2219320",
    "end": "2227630"
  },
  {
    "text": "of the data structure we see that",
    "start": "2227630",
    "end": "2233540"
  },
  {
    "text": "there's the data directory and there's a directory for each database and one file",
    "start": "2233540",
    "end": "2240370"
  },
  {
    "text": "for each object it could be an index it could be a table that file is divided in",
    "start": "2240370",
    "end": "2249110"
  },
  {
    "text": "8k pages okay and then if we zoom in into those 8k pages we have the page",
    "start": "2249110",
    "end": "2257810"
  },
  {
    "text": "reader and we have I think pointers which will",
    "start": "2257810",
    "end": "2263539"
  },
  {
    "text": "point to tuples in the end of that data structure so we have the header in the",
    "start": "2263539",
    "end": "2271789"
  },
  {
    "text": "either pointers from the top point to the end of the data structure and they",
    "start": "2271789",
    "end": "2276980"
  },
  {
    "text": "will meet in the middle once it they meet in the middle another page will be created of course hopefully",
    "start": "2276980",
    "end": "2285589"
  },
  {
    "text": "speaking here there's a lot of things that we need to understand when we go",
    "start": "2285589",
    "end": "2291710"
  },
  {
    "text": "deep how those things are manipulated okay we can control we can control the",
    "start": "2291710",
    "end": "2301220"
  },
  {
    "text": "empty space here that is tolerated or not how how assume you need to create",
    "start": "2301220",
    "end": "2308930"
  },
  {
    "text": "a new page okay so just a bit as zooming",
    "start": "2308930",
    "end": "2319339"
  },
  {
    "text": "in here if we take that previous slide where we have multiple weight K pages",
    "start": "2319339",
    "end": "2327079"
  },
  {
    "text": "and the I think item pointers go into tuples those tuples here if we zoom in",
    "start": "2327079",
    "end": "2336079"
  },
  {
    "text": "and then we will see that the top of itself has a header so it's not the",
    "start": "2336079",
    "end": "2341720"
  },
  {
    "text": "header for the page okay it's not the Hydra for the page but the header for",
    "start": "2341720",
    "end": "2346789"
  },
  {
    "text": "the top o itself which has few interesting columns here that we can",
    "start": "2346789",
    "end": "2353869"
  },
  {
    "text": "discuss later and then the values itself okay value is for integers for text and then",
    "start": "2353869",
    "end": "2364039"
  },
  {
    "text": "the next step of okay but the next step is before if we looking from right to",
    "start": "2364039",
    "end": "2372739"
  },
  {
    "text": "bottom the next step will be after",
    "start": "2372739",
    "end": "2378430"
  },
  {
    "text": "and of course so it's possible to learn more and there are few interesting ways",
    "start": "2379830",
    "end": "2386950"
  },
  {
    "text": "to learn more that it's using the page expect extinction they filed them it's a",
    "start": "2386950",
    "end": "2393910"
  },
  {
    "text": "third party - that allows you to see the file itself and they storage folder",
    "start": "2393910",
    "end": "2400720"
  },
  {
    "text": "inside the post resource code okay then",
    "start": "2400720",
    "end": "2407350"
  },
  {
    "text": "now we talk about pages and we talk about those data structures we need to",
    "start": "2407350",
    "end": "2415510"
  },
  {
    "text": "understand what is multi-version concurrency control understand it's very",
    "start": "2415510",
    "end": "2423030"
  },
  {
    "text": "it's kind of presumption of mind saying understand because I don't say that I",
    "start": "2423030",
    "end": "2429070"
  },
  {
    "text": "myself understand fully the MVCC it's a very complex algorithm and how it's implemented it's it's very very complex",
    "start": "2429070",
    "end": "2438280"
  },
  {
    "text": "there are few videos that I can share with you that I'm using to learn about it myself but we can talk about the",
    "start": "2438280",
    "end": "2448510"
  },
  {
    "text": "purpose and some strategies that MVCC does use to do its job okay so the",
    "start": "2448510",
    "end": "2456640"
  },
  {
    "text": "purpose is maintain data consistency consistency internally so if I'm trying",
    "start": "2456640",
    "end": "2465850"
  },
  {
    "text": "to change a row I must ensure that the change will be consistently applied if I",
    "start": "2465850",
    "end": "2475300"
  },
  {
    "text": "commit that change to other objects to other sessions sorry that is observing",
    "start": "2475300",
    "end": "2482260"
  },
  {
    "text": "that change I also must ensure that readers will not block will not be",
    "start": "2482260",
    "end": "2488770"
  },
  {
    "text": "blocking writers and writers will not be blocking readers at least for DML if I'm",
    "start": "2488770",
    "end": "2494440"
  },
  {
    "text": "certain if I'm updating or if I'm deleting selects will not be blocked by",
    "start": "2494440",
    "end": "2501130"
  },
  {
    "text": "those operations then of course the painting of the operation that I'm doing for example changing the table itself",
    "start": "2501130",
    "end": "2510550"
  },
  {
    "text": "and adding an axe for a row for a few for few period of",
    "start": "2510550",
    "end": "2517810"
  },
  {
    "text": "time for a short period of time that will block the object and it's a write",
    "start": "2517810",
    "end": "2526390"
  },
  {
    "text": "operation so yeah readers not blocking writers and writers",
    "start": "2526390",
    "end": "2534460"
  },
  {
    "text": "not blocking readers in the day by day operations of course there are",
    "start": "2534460",
    "end": "2540910"
  },
  {
    "text": "operations that might block your your database and we need to have that in",
    "start": "2540910",
    "end": "2548080"
  },
  {
    "text": "mind when we are talking as and with DBAs because sometimes we can observe",
    "start": "2548080",
    "end": "2555330"
  },
  {
    "text": "people say okay I'm creating an index CRM application is down because creating",
    "start": "2555330",
    "end": "2560920"
  },
  {
    "text": "an index without the concurrently parameter will block your table for",
    "start": "2560920",
    "end": "2568830"
  },
  {
    "text": "everything else okay so that's something that you should know and yeah another",
    "start": "2568830",
    "end": "2578290"
  },
  {
    "text": "things that MVC does as well as provide transaction insulation in concurrent",
    "start": "2578290",
    "end": "2584140"
  },
  {
    "text": "transactions prevents transaction from viewing consistent data it's that example that we were talking",
    "start": "2584140",
    "end": "2591460"
  },
  {
    "text": "before if I'm reader if I want to do a",
    "start": "2591460",
    "end": "2600310"
  },
  {
    "text": "transaction cash transaction if I want to transfer money from one entity to",
    "start": "2600310",
    "end": "2609490"
  },
  {
    "text": "another I want to do in the most atomic way so then VCC is controlling that okay",
    "start": "2609490",
    "end": "2617530"
  },
  {
    "text": "and to do that it you have to need to use a few locking and locking modes",
    "start": "2617530",
    "end": "2625800"
  },
  {
    "text": "internally we will see as well how it",
    "start": "2625800",
    "end": "2631420"
  },
  {
    "text": "will lock the shared buffer to not allow other process get the data what we'll",
    "start": "2631420",
    "end": "2640000"
  },
  {
    "text": "call a latch or a lightweight lock of course I need to persist the state of",
    "start": "2640000",
    "end": "2647369"
  },
  {
    "text": "each transaction if the transaction war was already committed or not and if that",
    "start": "2647369",
    "end": "2655680"
  },
  {
    "text": "transaction was aborted for example so we have a few mechanisms to do that for",
    "start": "2655680",
    "end": "2661259"
  },
  {
    "text": "the transaction itself but I also remember when I was talking about the pages and the header we have a few",
    "start": "2661259",
    "end": "2670109"
  },
  {
    "text": "concepts and how this is implemented on phosphorous for example the X mean",
    "start": "2670109",
    "end": "2675630"
  },
  {
    "text": "internal column tells about the ID that creates that row and the xmax tells",
    "start": "2675630",
    "end": "2684509"
  },
  {
    "text": "about the ID that the leads that row and which ID is the ID of the transaction",
    "start": "2684509",
    "end": "2692369"
  },
  {
    "text": "and the MVCC implements that mechanism",
    "start": "2692369",
    "end": "2697829"
  },
  {
    "text": "to understand that Row was deleted how how how the poster is how the back-end",
    "start": "2697829",
    "end": "2704220"
  },
  {
    "text": "knows that the row was deleted because there's xmax on that step oh okay so I",
    "start": "2704220",
    "end": "2711539"
  },
  {
    "text": "like to use the topo in terms of the physical row and rows the logical rule",
    "start": "2711539",
    "end": "2717539"
  },
  {
    "text": "that you see your application see but your application might not see a",
    "start": "2717539",
    "end": "2724489"
  },
  {
    "text": "physical row that was already deleted before and that's interesting because",
    "start": "2724489",
    "end": "2732230"
  },
  {
    "text": "that may arise the question so you are telling me that if I delete a row the",
    "start": "2732230",
    "end": "2740609"
  },
  {
    "text": "row is not really deleted and yes that's true if I delete a row you will keep",
    "start": "2740609",
    "end": "2748739"
  },
  {
    "text": "another version of the row the previous version of the row and you will need a",
    "start": "2748739",
    "end": "2756619"
  },
  {
    "text": "mechanism to clean that role that we Kovak okay so vacuum will keep the pages",
    "start": "2756619",
    "end": "2764369"
  },
  {
    "text": "clean removing those rows those tuples",
    "start": "2764369",
    "end": "2770150"
  },
  {
    "text": "better saying so the premise here is",
    "start": "2770150",
    "end": "2775559"
  },
  {
    "text": "when a row is deleted the kinda seems there's a tipple okay and",
    "start": "2775559",
    "end": "2781110"
  },
  {
    "text": "the top was just Marcus dead I don't need that topo anymore the same thing will happen",
    "start": "2781110",
    "end": "2787530"
  },
  {
    "text": "in an update okay just an advice for architectures and developers if you're",
    "start": "2787530",
    "end": "2794310"
  },
  {
    "text": "update constantly it means that you need vacuum constantly as well because update",
    "start": "2794310",
    "end": "2801180"
  },
  {
    "text": "creates a new version of the topo so the",
    "start": "2801180",
    "end": "2807120"
  },
  {
    "text": "vacuum will clean your page there's a cost involved on that that requires i/o",
    "start": "2807120",
    "end": "2815010"
  },
  {
    "text": "require CPU as well but not it's a cost",
    "start": "2815010",
    "end": "2820830"
  },
  {
    "text": "that it worth that cost because how the MVCC works is that makes very fast to",
    "start": "2820830",
    "end": "2828150"
  },
  {
    "text": "row to hoe back to row back an operation and even to insert a new row so the",
    "start": "2828150",
    "end": "2835920"
  },
  {
    "text": "trade-off it is very good there are four types of vacuum operation okay there's",
    "start": "2835920",
    "end": "2843870"
  },
  {
    "text": "the normal vacuum that reclaimed dead turpis from pages by removing those",
    "start": "2843870",
    "end": "2849840"
  },
  {
    "text": "pointers there's the full vac that also reclaimed that purpose from pages but in",
    "start": "2849840",
    "end": "2856950"
  },
  {
    "text": "fact it's not the word here is not really good because what if I come",
    "start": "2856950",
    "end": "2862560"
  },
  {
    "text": "fooders it does recreate the entire table and indexes from scratch so it's pretty much",
    "start": "2862560",
    "end": "2870390"
  },
  {
    "text": "a deep copy of that object and physically into another object and",
    "start": "2870390",
    "end": "2876120"
  },
  {
    "text": "then switch the catalog and that operation will do exclusive lock from",
    "start": "2876120",
    "end": "2884310"
  },
  {
    "text": "the beginning to the end there are few alternatives to to vacuum foo okay",
    "start": "2884310",
    "end": "2891650"
  },
  {
    "text": "there's the vacuum freeze that's very important about how the MVCC itself",
    "start": "2891650",
    "end": "2898650"
  },
  {
    "text": "works and the vacuum freeze it's used to prevent the transaction ID wraparound",
    "start": "2898650",
    "end": "2905210"
  },
  {
    "text": "phenomenon here that will",
    "start": "2905210",
    "end": "2909650"
  },
  {
    "text": "would be very important when we are doing few labs and then the shared",
    "start": "2910480",
    "end": "2916600"
  },
  {
    "text": "memory here will glue everything together okay shared memory of a few coats of the",
    "start": "2916600",
    "end": "2925690"
  },
  {
    "text": "shared memory itself the shared memory is of course the representation of everything together",
    "start": "2925690",
    "end": "2933300"
  },
  {
    "text": "the writer had log it's the redo mechanism that will",
    "start": "2937950",
    "end": "2944010"
  },
  {
    "text": "facilitate how changes are made in those data files okay and ensure the",
    "start": "2944010",
    "end": "2952240"
  },
  {
    "text": "durability of those transactions so if you commit you be rest assured that the",
    "start": "2952240",
    "end": "2959920"
  },
  {
    "text": "commit is already in the disk but also it will give you as fast as possible the",
    "start": "2959920",
    "end": "2966970"
  },
  {
    "text": "return of that commit to not the committee will not take a while to be",
    "start": "2966970",
    "end": "2972250"
  },
  {
    "text": "flushing the disk okay so have having that previous slide in mind those phases",
    "start": "2972250",
    "end": "2979330"
  },
  {
    "text": "there's a cooter itself needs to do few things to ensure the committee's done",
    "start": "2979330",
    "end": "2986670"
  },
  {
    "text": "for example in case an update that your committee it must update the shared",
    "start": "2986670",
    "end": "2992020"
  },
  {
    "text": "memory and then it needs to ensure that that change is physically on the wall",
    "start": "2992020",
    "end": "2998920"
  },
  {
    "text": "files or redo logs if you are used to oracle terminology okay the",
    "start": "2998920",
    "end": "3008490"
  },
  {
    "text": "implementation of each one of those phases here link it you have the X log",
    "start": "3008490",
    "end": "3017820"
  },
  {
    "text": "insert that's how the transaction is always a painting the they were five",
    "start": "3017820",
    "end": "3025680"
  },
  {
    "text": "okay for each each change that you do it could be a maintenance change like a",
    "start": "3025680",
    "end": "3032340"
  },
  {
    "text": "vacuum it could be when you're creating an index or changing a table you you are",
    "start": "3032340",
    "end": "3038670"
  },
  {
    "text": "always a painting the wall fire the transaction",
    "start": "3038670",
    "end": "3043980"
  },
  {
    "text": "journaling mechanism okay a journaling if you compare with a journaling file",
    "start": "3043980",
    "end": "3050220"
  },
  {
    "text": "system it's a fair comparison the wall file that keeps the transaction with a",
    "start": "3050220",
    "end": "3057210"
  },
  {
    "text": "journaling mechanism in the file system",
    "start": "3057210",
    "end": "3062330"
  },
  {
    "text": "so then we have the the cheque pointer in background writer that will sync the",
    "start": "3062869",
    "end": "3069750"
  },
  {
    "text": "dirt pages in the shared memory with the data files itself so we have here an X",
    "start": "3069750",
    "end": "3078450"
  },
  {
    "text": "log insert a painting the wall file after the shared memory is updated as",
    "start": "3078450",
    "end": "3084540"
  },
  {
    "text": "well in parallel you will see the check pointer applying a record a register in",
    "start": "3084540",
    "end": "3094230"
  },
  {
    "text": "the wall file say hey I synced all files here in my data files i sync it all",
    "start": "3094230",
    "end": "3101490"
  },
  {
    "text": "dirty pages on my data files so if a crash of course it's safe recovery from",
    "start": "3101490",
    "end": "3107220"
  },
  {
    "text": "there and it will mark the wall file from there and the background writer",
    "start": "3107220",
    "end": "3114180"
  },
  {
    "text": "will be constantly will be constantly flushing the shared memory to the data",
    "start": "3114180",
    "end": "3122100"
  },
  {
    "text": "files the background writer was introduced it not exactly at the same",
    "start": "3122100",
    "end": "3129600"
  },
  {
    "text": "time the check pointer was introduced it so it was introduced it to make the",
    "start": "3129600",
    "end": "3135600"
  },
  {
    "text": "checkpoint or life easier and speed up",
    "start": "3135600",
    "end": "3140670"
  },
  {
    "text": "the checkpoint operations so in summary",
    "start": "3140670",
    "end": "3147000"
  },
  {
    "text": "here try to cover multiple aspects from the architecture each one of those as I",
    "start": "3147000",
    "end": "3153630"
  },
  {
    "text": "mentioned there was very specific points that I think Jeremy would like to cover",
    "start": "3153630",
    "end": "3159900"
  },
  {
    "text": "and dive deep with you guys and see which more we can learn from each one of",
    "start": "3159900",
    "end": "3168420"
  },
  {
    "text": "those",
    "start": "3168420",
    "end": "3170630"
  }
]