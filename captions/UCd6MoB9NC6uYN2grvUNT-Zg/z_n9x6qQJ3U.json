[
  {
    "start": "0",
    "end": "90000"
  },
  {
    "text": "okay I think we're back thank you I can",
    "start": "2510",
    "end": "7859"
  },
  {
    "text": "do it without slides but for the demos it's difficult I can mime you know deep",
    "start": "7859",
    "end": "13530"
  },
  {
    "text": "learning training but now that is not that exciting I guess okay welcome back",
    "start": "13530",
    "end": "19109"
  },
  {
    "text": "I hope you had a good lunch and coffee alright because you'll need it in so in",
    "start": "19109",
    "end": "27420"
  },
  {
    "text": "the previous session we talked about the theory the concepts of deep learning and",
    "start": "27420",
    "end": "35250"
  },
  {
    "text": "how the training process works and all the all the magic that happens under the",
    "start": "35250",
    "end": "40980"
  },
  {
    "text": "hood so in this session we're going to take all that stuff for granted now and we're going to start training and",
    "start": "40980",
    "end": "48780"
  },
  {
    "text": "running models and to do this I'm going to use a Jeep Wrangler Brera called Apache MX net which is the the library",
    "start": "48780",
    "end": "58500"
  },
  {
    "text": "of choice for EWS when it comes to deep running and of course I will explain why and most of this session will actually",
    "start": "58500",
    "end": "65549"
  },
  {
    "text": "be running demos and seeing those concepts that we saw earlier in action",
    "start": "65549",
    "end": "72119"
  },
  {
    "text": "right so we're going to try and apply everything that we learned and run some code okay and yes and of course I'll",
    "start": "72119",
    "end": "84930"
  },
  {
    "text": "share some resources so more resources for you to learn I think I need to change my batteries here okay let's get",
    "start": "84930",
    "end": "90720"
  },
  {
    "start": "90000",
    "end": "435000"
  },
  {
    "text": "started with a Apache IMAX net so MX net is an open-source project it started in",
    "start": "90720",
    "end": "98210"
  },
  {
    "text": "2015 and originally was a university",
    "start": "98210",
    "end": "103500"
  },
  {
    "text": "driven project Carnegie Mellon and then University of Washington joined and as",
    "start": "103500",
    "end": "109979"
  },
  {
    "text": "the project grew of course then individual developers and companies came",
    "start": "109979",
    "end": "115439"
  },
  {
    "text": "and and contributed not sure how accurate that stat is but probably a few",
    "start": "115439",
    "end": "123990"
  },
  {
    "text": "months ago the top committer at MX net was still an apple engineer and AWS had four of the top",
    "start": "123990",
    "end": "132890"
  },
  {
    "text": "commuters okay and so why do we like it well the first reason is it supports",
    "start": "132890",
    "end": "139850"
  },
  {
    "text": "multiple languages if you're already doing deep learning today most of the",
    "start": "139850",
    "end": "146930"
  },
  {
    "text": "existing libraries usually work within a single language right or maybe two but",
    "start": "146930",
    "end": "152780"
  },
  {
    "text": "most of the time it's gonna be Python C++ but mostly Python right so you have",
    "start": "152780",
    "end": "161239"
  },
  {
    "text": "the choice between Python and Python yeah that's a choice that's a choice and",
    "start": "161239",
    "end": "168140"
  },
  {
    "text": "I love Python so they're personally I see nothing wrong with that but as it happens we have millions of customers",
    "start": "168140",
    "end": "173209"
  },
  {
    "text": "and well we could have a run a poll right now and you know some of you are",
    "start": "173209",
    "end": "179120"
  },
  {
    "text": "using Python some of you are using Scala some of you are using C++ etc etc and",
    "start": "179120",
    "end": "185560"
  },
  {
    "text": "maybe some other less respectable things as well no names right but that's okay so my",
    "start": "185560",
    "end": "193730"
  },
  {
    "text": "point is more languages are just better okay so if you work with MX net you can",
    "start": "193730",
    "end": "199610"
  },
  {
    "text": "do Python of course you can do R which is a very popular language for there are",
    "start": "199610",
    "end": "205970"
  },
  {
    "text": "science you can use MATLAB actually you can import MATLAB models into you can",
    "start": "205970",
    "end": "212360"
  },
  {
    "text": "import MX that models into MATLAB you could use C++ of course because NX that",
    "start": "212360",
    "end": "217850"
  },
  {
    "text": "is natively written in C++ so that's obviously the fastest option there you",
    "start": "217850",
    "end": "222890"
  },
  {
    "text": "could use Scala if you wanted and we also have an SDK for spark right just we",
    "start": "222890",
    "end": "229190"
  },
  {
    "text": "want to be sure to mention it so if you want to if you want to if you want to run Scala API is on MX net that works",
    "start": "229190",
    "end": "237190"
  },
  {
    "text": "and and what else what did I forget oh yes and Perl all right anybody want",
    "start": "237190",
    "end": "243560"
  },
  {
    "text": "to do deep learning in Perl okay here's the door I know somebody loved it enough",
    "start": "243560",
    "end": "251720"
  },
  {
    "text": "to build the api's right so alright see where it's a very open library you can",
    "start": "251720",
    "end": "257209"
  },
  {
    "text": "add even the Perl to it so that's good seriously the reason why I think this is",
    "start": "257209",
    "end": "262310"
  },
  {
    "text": "important is because when you work in the experimentation environment you tend to like flexible",
    "start": "262310",
    "end": "270500"
  },
  {
    "text": "languages like let's say Perl know Python and it's an obsession Python and",
    "start": "270500",
    "end": "277510"
  },
  {
    "text": "NR but as you move into production and you tend to freeze the model then you",
    "start": "277510",
    "end": "285860"
  },
  {
    "text": "probably care more about performance right speed training speed and of course prediction speed and then I guess C++",
    "start": "285860",
    "end": "293180"
  },
  {
    "text": "and Scala will give you good results so if your library only supports Python well then you have to live with Python",
    "start": "293180",
    "end": "300169"
  },
  {
    "text": "in production which is maybe not the fastest option or you have to rewrite",
    "start": "300169",
    "end": "305870"
  },
  {
    "text": "and retrain your model with different library supporting a different language and that's that's a big no-no for me",
    "start": "305870",
    "end": "313639"
  },
  {
    "text": "right so it's a huge source of problems and time and wasting time so having multiple languages is good you can",
    "start": "313639",
    "end": "320120"
  },
  {
    "text": "experiment in Python very easily rewrite your code and or you write MX net code",
    "start": "320120",
    "end": "326690"
  },
  {
    "text": "in C++ and use the same model that you trained in Python for prediction and and have maximum performance okay the second",
    "start": "326690",
    "end": "334789"
  },
  {
    "text": "thing that we like is that MX networks equally well in very tiny environments",
    "start": "334789",
    "end": "341470"
  },
  {
    "text": "raspberry PI's D plans that Adrienne",
    "start": "341470",
    "end": "346580"
  },
  {
    "text": "mentioned this morning small things right small things are able",
    "start": "346580",
    "end": "352310"
  },
  {
    "text": "to do prediction with an x net and of course as you move into bigger things",
    "start": "352310",
    "end": "358930"
  },
  {
    "text": "high-performance servers multi-gpu servers even have maybe running training",
    "start": "358930",
    "end": "364580"
  },
  {
    "text": "on multiple instances distributed training etc MX that scales very very",
    "start": "364580",
    "end": "369740"
  },
  {
    "text": "well and we benchmarked it to up to 256 GPUs that's a expensive demo expensive",
    "start": "369740",
    "end": "377090"
  },
  {
    "text": "benchmark I think and we showed that MX that scales linearly up to there so that",
    "start": "377090",
    "end": "382820"
  },
  {
    "text": "means if you have a huge training job and you need to run it on one GPU for",
    "start": "382820",
    "end": "389210"
  },
  {
    "text": "let's say 16 days well if you run it on 16 GPUs it would take close to a day",
    "start": "389210",
    "end": "397310"
  },
  {
    "text": "okay that's what linear skating is so very good and you know we don't necessarily see these these features in",
    "start": "397310",
    "end": "406880"
  },
  {
    "text": "other libraries and well the last thing we like very much is that it's now part",
    "start": "406880",
    "end": "412790"
  },
  {
    "text": "of the Apache Incubator so it's really a patchy IMAX net and that means no single",
    "start": "412790",
    "end": "418430"
  },
  {
    "text": "entity controls the project no single entity could decide to steer the project",
    "start": "418430",
    "end": "426500"
  },
  {
    "text": "in the direction that the community doesn't like and no single entity could decide to close some part of the source",
    "start": "426500",
    "end": "432890"
  },
  {
    "text": "base of the codebase and unfortunately these things have been known to happen",
    "start": "432890",
    "end": "438350"
  },
  {
    "start": "435000",
    "end": "442000"
  },
  {
    "text": "in the past okay so these are the main reason why we like it so what do you",
    "start": "438350",
    "end": "443900"
  },
  {
    "start": "442000",
    "end": "522000"
  },
  {
    "text": "what will you find in innomax net you'll find so in this case the Python API it's",
    "start": "443900",
    "end": "452360"
  },
  {
    "text": "a high level API the objects that you work with are very high level objects usually there are full layers",
    "start": "452360",
    "end": "459320"
  },
  {
    "text": "okay so you can recognize that first one fully connected it's basically one layer",
    "start": "459320",
    "end": "465140"
  },
  {
    "text": "for a fully connected network just like the one we saw in in my previous talk we",
    "start": "465140",
    "end": "470540"
  },
  {
    "text": "see the convolution object again that lets you define a convolutional layer",
    "start": "470540",
    "end": "477160"
  },
  {
    "text": "and the pooling object which I mentioned two ls TMS etc and more so you don't get",
    "start": "477160",
    "end": "483680"
  },
  {
    "text": "to work with every individual neuron which 99.9% of us don't want to do",
    "start": "483680",
    "end": "489680"
  },
  {
    "text": "anyway you just combine layers and activation functions in just a few lines",
    "start": "489680",
    "end": "495650"
  },
  {
    "text": "of code and using this using this Lego box right you can build all of those use",
    "start": "495650",
    "end": "503210"
  },
  {
    "text": "cases that I told you about this morning remember the gear up projects that I showed you they go from you know image",
    "start": "503210",
    "end": "509150"
  },
  {
    "text": "recognition to OCR to machine translation etc so my point is an X that",
    "start": "509150",
    "end": "515419"
  },
  {
    "text": "is flexible enough to build all those different architectures okay a couple of",
    "start": "515420",
    "end": "523310"
  },
  {
    "start": "522000",
    "end": "586000"
  },
  {
    "text": "newer features that I want to point out I think they they make a difference as well so the first one is called a model",
    "start": "523310",
    "end": "529160"
  },
  {
    "text": "server and this is a an additional tool present in MX net and as you guess from the name",
    "start": "529160",
    "end": "535990"
  },
  {
    "text": "this will let you serve predictions with",
    "start": "535990",
    "end": "541610"
  },
  {
    "text": "with an existing web server that's built in there from any model that you train",
    "start": "541610",
    "end": "547880"
  },
  {
    "text": "ok so you can train your model in MX net and just fire up the model server with a",
    "start": "547880",
    "end": "553520"
  },
  {
    "text": "CLI command and start serving HTTP predictions so it's very convenient if you want to test if you want to test",
    "start": "553520",
    "end": "560870"
  },
  {
    "text": "your app probably it's performing HTTP based predictions so you don't have to",
    "start": "560870",
    "end": "566360"
  },
  {
    "text": "write a test app and you don't have to worry with all the plumbing you can just",
    "start": "566360",
    "end": "572779"
  },
  {
    "text": "fire up the model server and start running predictions ok you could even use this in introduction why not right",
    "start": "572779",
    "end": "578420"
  },
  {
    "text": "if you do some some load testing and scaling it's probably it's probably strong enough to be used in production",
    "start": "578420",
    "end": "584660"
  },
  {
    "text": "to serve predictions the other feature that I like is called Oh n and X quite a",
    "start": "584660",
    "end": "591350"
  },
  {
    "start": "586000",
    "end": "649000"
  },
  {
    "text": "complex acronym which basically lets you import and export models between MX net",
    "start": "591350",
    "end": "598610"
  },
  {
    "text": "and other libraries so this includes cafe the Facebook library",
    "start": "598610",
    "end": "605720"
  },
  {
    "text": "the Microsoft toolkit is part of this and if I'm not mistaken I think PI torch",
    "start": "605720",
    "end": "611240"
  },
  {
    "text": "is part of it as well so a couple of missing we know we'd love to have them",
    "start": "611240",
    "end": "616640"
  },
  {
    "text": "onboard but sounds complicated so anyway this means you could see on get up a",
    "start": "616640",
    "end": "622880"
  },
  {
    "text": "very cool project based on a cafe model let's say and you could just grab this",
    "start": "622880",
    "end": "629120"
  },
  {
    "text": "model and convert it and load it directly in MX net okay so this extends",
    "start": "629120",
    "end": "634850"
  },
  {
    "text": "of course the number of projects that you could use directly the number of models that you could use directly ok so",
    "start": "634850",
    "end": "641000"
  },
  {
    "text": "it's a and of course it goes both ways right you can export model to other libraries too so pretty pretty excited",
    "start": "641000",
    "end": "647899"
  },
  {
    "text": "to have that ok let's look at a couple of api's important objects that we'll",
    "start": "647899",
    "end": "654680"
  },
  {
    "start": "649000",
    "end": "1037000"
  },
  {
    "text": "see all across our code so it's important to be familiar with those so as we saw this morning the first thing",
    "start": "654680",
    "end": "660500"
  },
  {
    "text": "that we do is we need of course to put our date into some kind of data structure that",
    "start": "660500",
    "end": "666290"
  },
  {
    "text": "will be used for training prediction etc okay so this object is called ng array",
    "start": "666290",
    "end": "672440"
  },
  {
    "text": "in MX net which is just a multi-dimensional array okay so n dimension array nothing more nothing",
    "start": "672440",
    "end": "679070"
  },
  {
    "text": "less okay and as we'll see you know this can be pretty big pretty big arrays so",
    "start": "679070",
    "end": "684980"
  },
  {
    "text": "that's where we'll load the samples the labels and this is what we'll train on",
    "start": "684980",
    "end": "691420"
  },
  {
    "text": "then we need to build the models okay we need to combine the layers define",
    "start": "691420",
    "end": "698330"
  },
  {
    "text": "weights define activation functions etc etc okay and we saw some examples of",
    "start": "698330",
    "end": "703970"
  },
  {
    "text": "that API just on the slide two minutes ago so the one that you saw actually on",
    "start": "703970",
    "end": "711410"
  },
  {
    "text": "that slide is called the symbol API okay it's the original MX net API which is",
    "start": "711410",
    "end": "717050"
  },
  {
    "text": "very high-level and this works in symbolic mode that's why it's called a",
    "start": "717050",
    "end": "723080"
  },
  {
    "text": "symbolic API so let me explain when you're working symbolic mode you define",
    "start": "723080",
    "end": "728240"
  },
  {
    "text": "the model right you combine the layers you build it completely right and then",
    "start": "728240",
    "end": "734840"
  },
  {
    "text": "it's frozen and you since it's frozen you can optimize the hell out of it",
    "start": "734840",
    "end": "742550"
  },
  {
    "text": "right it's like an execution graph and you can apply graph optimization techniques to save memory to to save",
    "start": "742550",
    "end": "752860"
  },
  {
    "text": "processing time right you can do all kinds of optimization on an execution graph and you can do this because it's",
    "start": "752860",
    "end": "759950"
  },
  {
    "text": "frozen you know it's not going to change and once you run this optimization then you can train okay so this sounds really",
    "start": "759950",
    "end": "766730"
  },
  {
    "text": "good and it is because it means you can get lower memory usage you can get faster training performance etc etc but",
    "start": "766730",
    "end": "774650"
  },
  {
    "text": "the downside to this is that it's a black box okay so once the training once",
    "start": "774650",
    "end": "780110"
  },
  {
    "text": "the training process starts there's very little you can do actually there's very little you can do except wait wait for",
    "start": "780110",
    "end": "787160"
  },
  {
    "text": "the training process to be complete and evaluate the result so you can't stop the training process you cannot inspect",
    "start": "787160",
    "end": "794360"
  },
  {
    "text": "the layers you can you cannot inspect the weights and so if the training process goes wrong it's very difficult",
    "start": "794360",
    "end": "800749"
  },
  {
    "text": "to understand why okay so this symbolic API is very good when you need maximum",
    "start": "800749",
    "end": "806600"
  },
  {
    "text": "performance okay and that's probably when you're running prediction and and",
    "start": "806600",
    "end": "812720"
  },
  {
    "text": "when you know the network is performing okay and when you're actually experimenting when you're learning from",
    "start": "812720",
    "end": "820009"
  },
  {
    "text": "the data when you're trying to understand why what network would be appropriate and why these specific",
    "start": "820009",
    "end": "826699"
  },
  {
    "text": "network works and this one doesn't well then you probably should use the gluon",
    "start": "826699",
    "end": "831709"
  },
  {
    "text": "API which is the newer API introduced last year and this one is not symbolic",
    "start": "831709",
    "end": "837290"
  },
  {
    "text": "it's just what we call imperative programming which is the way you you and me write code everyday right just normal",
    "start": "837290",
    "end": "843980"
  },
  {
    "text": "code and so this means we can now stop another training process we could have",
    "start": "843980",
    "end": "849350"
  },
  {
    "text": "the Python debugger in there and we could step through the training process we could look at weights we could",
    "start": "849350",
    "end": "855350"
  },
  {
    "text": "inspect everything okay so we could actually treat the training process just like every other piece of code okay and",
    "start": "855350",
    "end": "862489"
  },
  {
    "text": "that's what the gluon api does now the downside to it is of course you're not running all those fancy optimizations so",
    "start": "862489",
    "end": "870829"
  },
  {
    "text": "training with gluon is going to be slower okay and and predicting with the",
    "start": "870829",
    "end": "876259"
  },
  {
    "text": "gluon is going to be slower unless unless because it's never that simple of",
    "start": "876259",
    "end": "882829"
  },
  {
    "text": "course unless you use hybrid networks okay so hybrid networks are a way to",
    "start": "882829",
    "end": "888919"
  },
  {
    "text": "convert gluon models into symbolic models okay and then you get very very",
    "start": "888919",
    "end": "896209"
  },
  {
    "text": "close to the symbolic performance okay but again you lose you lose the",
    "start": "896209",
    "end": "903290"
  },
  {
    "text": "visibility inside the training process so you get the best of both worlds I think you can use the gluon api to build",
    "start": "903290",
    "end": "910189"
  },
  {
    "text": "very flexible code code that you could debug and inspect etc and then if you're",
    "start": "910189",
    "end": "917629"
  },
  {
    "text": "happy with that model you could hybrid and that's impossible to say hybridize it try saying that ten times fast",
    "start": "917629",
    "end": "924980"
  },
  {
    "text": "hybridized hybridize it and get really close to the symbolic performance okay or you could",
    "start": "924980",
    "end": "931360"
  },
  {
    "text": "just rewrite symbolic code and a new symbolic code okay so best of both worlds okay the next",
    "start": "931360",
    "end": "940210"
  },
  {
    "text": "subject that we need is a way to serve data to the model during the training",
    "start": "940210",
    "end": "947530"
  },
  {
    "text": "process batch by batch remember we do batch training and it would be painful to have to yes sorry you have to speak",
    "start": "947530",
    "end": "956770"
  },
  {
    "text": "louder I'm not sure I understand your",
    "start": "956770",
    "end": "965620"
  },
  {
    "text": "question so the symbolic API you'll see",
    "start": "965620",
    "end": "972700"
  },
  {
    "text": "some examples but the symbolic API is just an API that lets you very easily build the networks okay but the",
    "start": "972700",
    "end": "978850"
  },
  {
    "text": "difference between the symbolic API and the gluon API is that once the network is defined right when it once it's built",
    "start": "978850",
    "end": "985930"
  },
  {
    "text": "with the symbolic API it sits frozen it's optimized and you",
    "start": "985930",
    "end": "991180"
  },
  {
    "text": "cannot inspect it inspected during training okay you just run the training and get your results and if you like",
    "start": "991180",
    "end": "997750"
  },
  {
    "text": "them fine if you don't like them it's pretty difficult to understand why okay that's the difference the gluon API is",
    "start": "997750",
    "end": "1003690"
  },
  {
    "text": "just code so you can stop it inspect it debug it right it's different",
    "start": "1003690",
    "end": "1010130"
  },
  {
    "text": "you can do the same thing you can do the exact same thing with both okay you can",
    "start": "1017520",
    "end": "1023050"
  },
  {
    "text": "manipulate the same objects build the same models etc again the difference is one will let you inspect the training",
    "start": "1023050",
    "end": "1030699"
  },
  {
    "text": "process and one will not right that's the only difference okay okay",
    "start": "1030700",
    "end": "1038620"
  },
  {
    "start": "1037000",
    "end": "1064000"
  },
  {
    "text": "so yes the iterator so the iterator will slice the data set automatically for you",
    "start": "1038620",
    "end": "1044230"
  },
  {
    "text": "and let you serve those batches automatically so one less thing to worry about and of course we need an API to",
    "start": "1044230",
    "end": "1053760"
  },
  {
    "text": "start training and less safe models and load models etc and it's the module API",
    "start": "1054030",
    "end": "1059920"
  },
  {
    "text": "okay so we will see those four or five things in the code so all those",
    "start": "1059920",
    "end": "1065500"
  },
  {
    "start": "1064000",
    "end": "1172000"
  },
  {
    "text": "notebooks that I'm gonna use are around github and of course you will get those",
    "start": "1065500",
    "end": "1071020"
  },
  {
    "text": "slides in the next few days and so you will get the links as well okay so let's get started alright so I should just",
    "start": "1071020",
    "end": "1084220"
  },
  {
    "text": "stop this one for now okay okay so here",
    "start": "1084220",
    "end": "1096700"
  },
  {
    "text": "we go let me make sure it's stopped yeah",
    "start": "1096700",
    "end": "1102250"
  },
  {
    "text": "it's fine okay can you read okay yeah",
    "start": "1102250",
    "end": "1107850"
  },
  {
    "text": "okay if it's too small at some point just let me know okay okay so let's start with a pretty simple one to put",
    "start": "1107850",
    "end": "1115120"
  },
  {
    "text": "all those pieces together I call it the hello world example so what are we going to do here is we're going to build a",
    "start": "1115120",
    "end": "1125020"
  },
  {
    "text": "synthetic data set or random data set and we're going to try and learn it okay sounds like a strange ID but maybe it's",
    "start": "1125020",
    "end": "1133000"
  },
  {
    "text": "not so strange okay so let's import a max net first and I'm going to generate",
    "start": "1133000",
    "end": "1139740"
  },
  {
    "text": "10,000 samples okay each sample is just a vector with 100 random floating-point",
    "start": "1139740",
    "end": "1147430"
  },
  {
    "text": "values between 0 and 1 okay so my dad my dataset is 10,000",
    "start": "1147430",
    "end": "1153190"
  },
  {
    "text": "lines 100 columns and each element is just a random float between 0 & 1 okay",
    "start": "1153190",
    "end": "1159160"
  },
  {
    "text": "and I will us save 2000 samples for validation okay",
    "start": "1159160",
    "end": "1164260"
  },
  {
    "text": "80/20 alright so just let's define some constants okay and let's generate the",
    "start": "1164260",
    "end": "1170770"
  },
  {
    "text": "data set so that's done okay so X is my",
    "start": "1170770",
    "end": "1177160"
  },
  {
    "start": "1172000",
    "end": "1236000"
  },
  {
    "text": "data set okay you can see the shape 10,000 by 100 and I feel that with the",
    "start": "1177160",
    "end": "1183370"
  },
  {
    "text": "random values from a uniform distribution between 0 and 1 and then I generate my labels too and my labels are",
    "start": "1183370",
    "end": "1192960"
  },
  {
    "text": "random integers between 0 and 9 included okay I've got 10 categories",
    "start": "1193500",
    "end": "1199240"
  },
  {
    "text": "okay so samples 10,000 lines hundred columns labels 10,000 lines obviously",
    "start": "1199240",
    "end": "1206710"
  },
  {
    "text": "and just one column and integer between 0 and 9 okay okay so that's my set so",
    "start": "1206710",
    "end": "1212710"
  },
  {
    "text": "now I need to split it between training and validation again I'm using MX 9",
    "start": "1212710",
    "end": "1218860"
  },
  {
    "text": "api's to do this as you can see MX dot nd music the ng array API here and if",
    "start": "1218860",
    "end": "1224410"
  },
  {
    "text": "you're familiar with numpy in python this is very very close to numpy if you you'll be at home if you know numpy okay",
    "start": "1224410",
    "end": "1232390"
  },
  {
    "text": "and I can see the different shapes so I can see my training set here okay 8,000",
    "start": "1232390",
    "end": "1238090"
  },
  {
    "text": "by 100 plus the labels and the validation set 2,000 by 100 and the labels okay so far so good now let's",
    "start": "1238090",
    "end": "1247270"
  },
  {
    "text": "define a simple fully connected Network and this is actually the same as the one",
    "start": "1247270",
    "end": "1252850"
  },
  {
    "text": "you saw this morning so I've got an input layer called data and one of the",
    "start": "1252850",
    "end": "1257950"
  },
  {
    "text": "nice things about MX net is I don't have to size it okay and I'll have to say how many neurons are in there",
    "start": "1257950",
    "end": "1263290"
  },
  {
    "text": "MX net will figure it out automatically when I bind this to the data set and then I've got a first fully connected",
    "start": "1263290",
    "end": "1270310"
  },
  {
    "text": "layer with 1024 neurons activated by the raloo activation function that we saw",
    "start": "1270310",
    "end": "1276850"
  },
  {
    "text": "this morning as well and then I've got the output layer okay with",
    "start": "1276850",
    "end": "1282940"
  },
  {
    "text": "ten categories because remember I've got ten classes so I do need to have ten I",
    "start": "1282940",
    "end": "1288099"
  },
  {
    "text": "would put neurons here and I need to use a mathematical function called softmax",
    "start": "1288099",
    "end": "1293919"
  },
  {
    "text": "because if I don't do that if I just keep this fc2 thing as my output what I",
    "start": "1293919",
    "end": "1300489"
  },
  {
    "text": "will actually get inside of those neurons will be arbitrary sized",
    "start": "1300489",
    "end": "1306330"
  },
  {
    "text": "numerical values okay and I don't want that remember I want probabilities okay",
    "start": "1306330",
    "end": "1311889"
  },
  {
    "text": "so I just take those values and I run them through the softmax function function and what softmax does so it's",
    "start": "1311889",
    "end": "1318940"
  },
  {
    "text": "gonna take those ten values it's going to transform them so that each of them is between zero and one and their sum is",
    "start": "1318940",
    "end": "1326349"
  },
  {
    "text": "one and then I can see those as probabilities okay and the last thing I'm doing here is I'm",
    "start": "1326349",
    "end": "1334479"
  },
  {
    "text": "actually creating the model and saying I want to use a CPU to train okay",
    "start": "1334479",
    "end": "1340539"
  },
  {
    "text": "that's another nice IMAX net feature if I want it to train on GPU I would just do this and that's it that's all it",
    "start": "1340539",
    "end": "1347409"
  },
  {
    "text": "takes right and if I want multiple GPUs I would just have a dictionary saying MX",
    "start": "1347409",
    "end": "1352929"
  },
  {
    "text": "GPU 0 MX GPU 1 etc etc okay so very very simple to switch from one to the other",
    "start": "1352929",
    "end": "1359349"
  },
  {
    "text": "if you work on your laptop probably you do not have a GPU you can just work like this and then move that code to the",
    "start": "1359349",
    "end": "1365559"
  },
  {
    "text": "server and just change this and be happy all right ok then I need to build my",
    "start": "1365559",
    "end": "1371470"
  },
  {
    "text": "iterator so I'll just take my training set my training labels give the batch size which i think is 16 here and build",
    "start": "1371470",
    "end": "1379450"
  },
  {
    "text": "that iterator which will serve the data to the model ok so that I don't have to do it ok and the last step before",
    "start": "1379450",
    "end": "1389019"
  },
  {
    "text": "training is to do this so I need to bind my iterator my iterators actually to the",
    "start": "1389019",
    "end": "1397149"
  },
  {
    "text": "model okay and then MX net will actually resize or size the input layer according",
    "start": "1397149",
    "end": "1404769"
  },
  {
    "text": "to the the data shape okay so now my input layer will be 100 neurons because",
    "start": "1404769",
    "end": "1411429"
  },
  {
    "text": "I've got 100 features then I need to initialize my parameters okay because if you remember this",
    "start": "1411429",
    "end": "1417300"
  },
  {
    "text": "morning we said all those weights start from random values so why should I even",
    "start": "1417300",
    "end": "1422990"
  },
  {
    "text": "initialize them right I could start with the random stuff okay so probably but as",
    "start": "1422990",
    "end": "1432480"
  },
  {
    "text": "I like saying not all random things are created equal so there are some better",
    "start": "1432480",
    "end": "1438900"
  },
  {
    "text": "random ways than others and initializing",
    "start": "1438900",
    "end": "1444000"
  },
  {
    "text": "the those weights randomly but in a clever fashion will help you train",
    "start": "1444000",
    "end": "1449580"
  },
  {
    "text": "better right so this is another one of these lose your sanity discussions ok so",
    "start": "1449580",
    "end": "1456720"
  },
  {
    "text": "let's not go into that keep in mind there are some clever initialization",
    "start": "1456720",
    "end": "1463590"
  },
  {
    "text": "techniques that still use random data but that lead to better training and the",
    "start": "1463590",
    "end": "1468660"
  },
  {
    "text": "Xavier method has been shown to work pretty well and it's called Xavi because",
    "start": "1468660",
    "end": "1474450"
  },
  {
    "text": "it's the first name of his inventor exactly ago another French researcher",
    "start": "1474450",
    "end": "1479600"
  },
  {
    "text": "okay you could use some other techniques but this one works well and the final",
    "start": "1479600",
    "end": "1485970"
  },
  {
    "text": "thing we haven't discussed of course is we need to provide an optimization function so we're going to use Grandpa",
    "start": "1485970",
    "end": "1491580"
  },
  {
    "text": "SGG which is fine here and the learning rate of 0.1 which is a very typical",
    "start": "1491580",
    "end": "1497040"
  },
  {
    "text": "value right and it's going to be fixed so we're going to stick to 0.1 during",
    "start": "1497040",
    "end": "1502710"
  },
  {
    "text": "all the training ok and that's it and now we can train so how many lines of",
    "start": "1502710",
    "end": "1509580"
  },
  {
    "text": "code did we actually write now three okay this doesn't count for 10 all right",
    "start": "1509580",
    "end": "1518670"
  },
  {
    "text": "15 20 lots of constants they don't really count ok I'll give you 30 lines",
    "start": "1518670",
    "end": "1525630"
  },
  {
    "text": "of code right ok so congratulations you're doing deep learning in 30 lines",
    "start": "1525630",
    "end": "1530730"
  },
  {
    "text": "of Python code that anyone can write right anybody can read and understand",
    "start": "1530730",
    "end": "1535740"
  },
  {
    "text": "this ok of course it's the first time you see this API so it might look a little alien but right how much time",
    "start": "1535740",
    "end": "1543900"
  },
  {
    "text": "could you spend understanding all the finer details in this not right so this is it this is y mx that i",
    "start": "1543900",
    "end": "1551070"
  },
  {
    "text": "think is a nice library because you don't write a lot of code and it's very high level and it's very easy to",
    "start": "1551070",
    "end": "1557610"
  },
  {
    "text": "understand and you can focus on the model and the data which is where the value lies I think so let's look at the",
    "start": "1557610",
    "end": "1563730"
  },
  {
    "text": "log here so we see the MX net log we see the the a box going by on the left here",
    "start": "1563730",
    "end": "1568909"
  },
  {
    "text": "hopefully we see the training actressy going up okay and we're trying for 50 I",
    "start": "1568909",
    "end": "1575130"
  },
  {
    "text": "think all right so fine yeah 53 percent fifty seven percent let's",
    "start": "1575130",
    "end": "1580289"
  },
  {
    "text": "keep going down you know where this is going right if you were there this morning okay here we go",
    "start": "1580289",
    "end": "1586590"
  },
  {
    "start": "1581000",
    "end": "1612000"
  },
  {
    "text": "hundred percent right so that's one thing I didn't lie about okay we do get",
    "start": "1586590",
    "end": "1592049"
  },
  {
    "text": "to hundred percent which means right that this model can perfectly learn",
    "start": "1592049",
    "end": "1598080"
  },
  {
    "text": "those eight thousand samples so I could take any of those eight thousand random things forward then through the model",
    "start": "1598080",
    "end": "1606000"
  },
  {
    "text": "and I would get the right category right alarm bells should be ringing okay so of",
    "start": "1606000",
    "end": "1614190"
  },
  {
    "start": "1612000",
    "end": "1840000"
  },
  {
    "text": "course there's nowhere else to go beyond hard percent so we stay there fine",
    "start": "1614190",
    "end": "1620039"
  },
  {
    "text": "what about validation accuracy now because we remember we don't really care about training accuracy well we care",
    "start": "1620039",
    "end": "1625799"
  },
  {
    "text": "about training accuracy going up right because it shows we're learning but what about other samples that this network",
    "start": "1625799",
    "end": "1633809"
  },
  {
    "text": "hasn't seen and you can actually guess what the value is going to be all right",
    "start": "1633809",
    "end": "1641610"
  },
  {
    "text": "let's backtrack a bit let me have some coffee first why do we even use deep",
    "start": "1641610",
    "end": "1648929"
  },
  {
    "text": "learning white what do we want to figure out with deep learning we want you to",
    "start": "1648929",
    "end": "1656909"
  },
  {
    "text": "feature extraction so we want to find patterns right okay thank you and then",
    "start": "1656909",
    "end": "1664919"
  },
  {
    "text": "yes we want to do we want to be able to predict later on ok well let's stay on the features for now okay what is this",
    "start": "1664919",
    "end": "1672570"
  },
  {
    "text": "data set random should we find any patterns in there",
    "start": "1672570",
    "end": "1678919"
  },
  {
    "text": "hopefully not if we do it means we have a really really bad random number generator right",
    "start": "1678919",
    "end": "1684820"
  },
  {
    "text": "which is probably security issue all right we're gonna break a WS with this",
    "start": "1684820",
    "end": "1690100"
  },
  {
    "text": "demo okay so we shouldn't find anything here right okay so we still managed to",
    "start": "1690100",
    "end": "1695290"
  },
  {
    "text": "learn it because probably we're overfitting like hell right now if I",
    "start": "1695290",
    "end": "1702309"
  },
  {
    "text": "take those random validation samples from ten categories and they have no pattern whatsoever and my network has no",
    "start": "1702309",
    "end": "1709780"
  },
  {
    "text": "clue whatsoever about any pattern because there isn't any parent to be found right and you need to classify",
    "start": "1709780",
    "end": "1715750"
  },
  {
    "text": "them in ten categories how often will you be right one in ten yes so what",
    "start": "1715750",
    "end": "1724210"
  },
  {
    "text": "should be the validation accuracy there",
    "start": "1724210",
    "end": "1727770"
  },
  {
    "text": "ten percent okay so that's my not so",
    "start": "1733200",
    "end": "1738460"
  },
  {
    "text": "silly example you could you could fool a lot of people with this okay that's a",
    "start": "1738460",
    "end": "1744730"
  },
  {
    "text": "great way I didn't say is this can fool",
    "start": "1744730",
    "end": "1752919"
  },
  {
    "text": "a lot of people okay because we learn many things here we learn that garbage",
    "start": "1752919",
    "end": "1758559"
  },
  {
    "text": "in garbage out okay it was true thirty years ago it's still true with deep",
    "start": "1758559",
    "end": "1764890"
  },
  {
    "text": "learning okay so once again there is nothing magical about deep learning if your data is crappy if it doesn't have",
    "start": "1764890",
    "end": "1771910"
  },
  {
    "text": "any patterns if it's unclean if it's full of missing values bla bla bla bla",
    "start": "1771910",
    "end": "1778240"
  },
  {
    "text": "bla you will not get good results okay so that's super super important if your",
    "start": "1778240",
    "end": "1783790"
  },
  {
    "text": "data is meaningless your model is meaningless too okay now you understand how this works",
    "start": "1783790",
    "end": "1789610"
  },
  {
    "text": "why would it be magical right it's multiplications a dish adding and and",
    "start": "1789610",
    "end": "1795900"
  },
  {
    "text": "computing derivatives it's just math so it's not clever right it's just math okay first thing we learn we need to pay",
    "start": "1795900",
    "end": "1803200"
  },
  {
    "text": "attention to data second thing we know now is training accuracy going up is",
    "start": "1803200",
    "end": "1808210"
  },
  {
    "text": "very nice but if we don't keep our eye on validation accuracy we're just not looking at anything",
    "start": "1808210",
    "end": "1813400"
  },
  {
    "text": "right we're just happy and then disappointed right okay and and yeah so",
    "start": "1813400",
    "end": "1824140"
  },
  {
    "text": "these are the two or three things I didn't count that we need to keep an eye on right quality of data validation",
    "start": "1824140",
    "end": "1832540"
  },
  {
    "text": "accuracy and of course testing with real-life samples okay so not so silly",
    "start": "1832540",
    "end": "1840180"
  },
  {
    "start": "1840000",
    "end": "2145000"
  },
  {
    "text": "okay now let's try and learn a real data set so we're going to use one that I'm",
    "start": "1840180",
    "end": "1849430"
  },
  {
    "text": "sure you've seen before because it's convenient and it's small it's called the M NIST data set of course you've",
    "start": "1849430",
    "end": "1855610"
  },
  {
    "text": "seen this right it's a handwritten digits oh that's my blog post Wow I'm",
    "start": "1855610",
    "end": "1863170"
  },
  {
    "text": "pretty high in Google cool this is a fifty thousand handwritten digits 0 to 9",
    "start": "1863170",
    "end": "1870820"
  },
  {
    "text": "and of course the game is to classify them properly so since we're in Germany I have to point out there's a better one",
    "start": "1870820",
    "end": "1877930"
  },
  {
    "text": "if you're tired of working with M list a small company called zalando probably",
    "start": "1877930",
    "end": "1886060"
  },
  {
    "text": "you've never heard of them but I wish them a lot of success yeah do we have",
    "start": "1886060",
    "end": "1895360"
  },
  {
    "text": "anyone from salento in the room before I make too much fun now they're they're great AWS customer now actually it happened to",
    "start": "1895360",
    "end": "1901300"
  },
  {
    "text": "me that you know I did a session somewhere else and and we had people actually working on this in the room so",
    "start": "1901300",
    "end": "1906610"
  },
  {
    "text": "it was pretty funny so that's why I know I say hi mm every time now so they build",
    "start": "1906610",
    "end": "1912610"
  },
  {
    "text": "fashion and mist which is it's a drop-in replacement for M list so it's got the",
    "start": "1912610",
    "end": "1917800"
  },
  {
    "text": "same number of apps a number of images same number of classes same image size",
    "start": "1917800",
    "end": "1922930"
  },
  {
    "text": "so it's completely identical right and you can just use this one as a drop-in replacement and it's much harder to",
    "start": "1922930",
    "end": "1928900"
  },
  {
    "text": "learn of course than the digits so whenever you happy when you get 99.7%",
    "start": "1928900",
    "end": "1934570"
  },
  {
    "text": "accuracy on them list and you feel you know everything about deep learning move to this one and learn again right this",
    "start": "1934570",
    "end": "1942370"
  },
  {
    "text": "one's giving me a harder time but we'll stick to the easy one for today",
    "start": "1942370",
    "end": "1947790"
  },
  {
    "text": "okay so this data set like I said 50k images let me just clear this 50k images",
    "start": "1947790",
    "end": "1955990"
  },
  {
    "text": "ten categories black-and-white images 28 pixels by 28 pixels so I downloaded it",
    "start": "1955990",
    "end": "1963280"
  },
  {
    "text": "already of course a million times so let's not do that again we're going to train for 50 a box we're going to build",
    "start": "1963280",
    "end": "1969070"
  },
  {
    "text": "an iterator and this data set is so well known that most deploying libraries",
    "start": "1969070",
    "end": "1975820"
  },
  {
    "text": "actually have it - Rachel's directly for M list so you don't even have to pass the filename very good okay let's build",
    "start": "1975820",
    "end": "1983800"
  },
  {
    "text": "another fully connected Network and this one so I will have an input layer of",
    "start": "1983800",
    "end": "1990040"
  },
  {
    "text": "course and well we got a problem now because those are images right 28 by 28",
    "start": "1990040",
    "end": "1997679"
  },
  {
    "text": "so I don't count really well but that's two dimensions what did we see about",
    "start": "1997679",
    "end": "2003059"
  },
  {
    "text": "those input layers four fully connected networks they're pretty flat on day it's a vector so we have to flatten that 28",
    "start": "2003059",
    "end": "2012809"
  },
  {
    "text": "28 image into a 784 vector fine okay all",
    "start": "2012809",
    "end": "2019200"
  },
  {
    "text": "right that wasn't too bad thank you a mex night for the flattened operation then I have a fully connected",
    "start": "2019200",
    "end": "2024929"
  },
  {
    "text": "layer with 1024 neurons activated by riilu that I have a second fully",
    "start": "2024929",
    "end": "2030420"
  },
  {
    "text": "connected layer with 512 neurons activated by real ooh and then I've got my output layer with 10 new neurons",
    "start": "2030420",
    "end": "2037050"
  },
  {
    "text": "because I've got 10 categories because 0 to 9 and I use softmax again because I want probability or",
    "start": "2037050",
    "end": "2044000"
  },
  {
    "text": "probability looking numbers ok see 7 6 7",
    "start": "2044000",
    "end": "2050128"
  },
  {
    "text": "lines and that's a pretty complicated model already right ok five seven lines",
    "start": "2050129",
    "end": "2057929"
  },
  {
    "text": "of code all right let's run this click click and again we need to bind it and",
    "start": "2057929",
    "end": "2066858"
  },
  {
    "text": "we're not gonna use oh yeah we're going to use the GPU because I'm not paying my bills all right we're gonna use the GPU",
    "start": "2066859",
    "end": "2072960"
  },
  {
    "text": "now bind initialize and yeah I'm not",
    "start": "2072960",
    "end": "2078300"
  },
  {
    "text": "gonna use SGG I'm gonna use one of those fancy adaptive optimizers but his other",
    "start": "2078300",
    "end": "2083940"
  },
  {
    "text": "delta remember that those optimizers racing down the saddle point this is one",
    "start": "2083940",
    "end": "2089879"
  },
  {
    "text": "of them and and I'm gonna start with 0.1 again train see aren't you happy you",
    "start": "2089880",
    "end": "2099570"
  },
  {
    "text": "came here today right I guess some of you have been reading deep learning stuff for months as I'm and I'll never",
    "start": "2099570",
    "end": "2105270"
  },
  {
    "text": "learn this right because it always stalled with the big equations right this made me mad for six months",
    "start": "2105270",
    "end": "2111570"
  },
  {
    "text": "literally and then I realized I could just ignore the equations and work with",
    "start": "2111570",
    "end": "2116610"
  },
  {
    "text": "the code right and of course at some point the equations show up when you",
    "start": "2116610",
    "end": "2122100"
  },
  {
    "text": "dive deep enough they do show up and well it's up to you to decide if you want to learn them or not but my point",
    "start": "2122100",
    "end": "2129180"
  },
  {
    "text": "and the only thing I want to convince you of today is you can get a whole lot done without going into the equations",
    "start": "2129180",
    "end": "2135810"
  },
  {
    "text": "right and you can actually be autonomous and build those models and use them in your apps without going into the science",
    "start": "2135810",
    "end": "2143900"
  },
  {
    "text": "so look at this this is impressive right after one epic we get 93% training",
    "start": "2143900",
    "end": "2151020"
  },
  {
    "start": "2145000",
    "end": "2235000"
  },
  {
    "text": "accuracy and 94% validation accuracy just one epic okay so this is very this",
    "start": "2151020",
    "end": "2156510"
  },
  {
    "text": "is learning very well okay let's go down yeah yeah when do we do it one of the",
    "start": "2156510",
    "end": "2164850"
  },
  {
    "text": "percent again so let's keep an eye on overfitting okay 98 22 so hopefully this isn't going",
    "start": "2164850",
    "end": "2171810"
  },
  {
    "text": "down 98 23 22 okay so it's kind of the plateau area now yeah it stays stable",
    "start": "2171810",
    "end": "2181290"
  },
  {
    "text": "there oh and actually for the very last epic it goes up a bit okay so 98 26 not",
    "start": "2181290",
    "end": "2188670"
  },
  {
    "text": "so bad let's save this model that's all it takes one API call and now I have a",
    "start": "2188670",
    "end": "2194220"
  },
  {
    "text": "local file with all the weights that I learned and I can load this and share it and give it to people to use etc etc",
    "start": "2194220",
    "end": "2201200"
  },
  {
    "text": "okay not really complicated okay so 98",
    "start": "2201200",
    "end": "2206880"
  },
  {
    "text": "26 is this good is this bad right we don't really know",
    "start": "2206880",
    "end": "2212910"
  },
  {
    "text": "we don't really know because that's what validation accuracy tells me but again what my users are gonna send to this",
    "start": "2212910",
    "end": "2219420"
  },
  {
    "text": "model are not those endless samples they're gonna send something else they're gonna send their own samples so",
    "start": "2219420",
    "end": "2225480"
  },
  {
    "text": "it's always good practice to test with extra samples that are completely out of",
    "start": "2225480",
    "end": "2231029"
  },
  {
    "text": "the training set of the validation set right people usually call that the test set so I said well I need the test set",
    "start": "2231029",
    "end": "2239930"
  },
  {
    "start": "2235000",
    "end": "2529000"
  },
  {
    "text": "so I took my favorite paintbrush application right like a five-year-old",
    "start": "2239930",
    "end": "2247349"
  },
  {
    "text": "and I drew some digits okay and I'm",
    "start": "2247349",
    "end": "2252450"
  },
  {
    "text": "gonna take those digits and of course they're 28 by 28 et cetera and I'm gonna push them through the",
    "start": "2252450",
    "end": "2258000"
  },
  {
    "text": "model and see what happens there okay so I need a function to load an image",
    "start": "2258000",
    "end": "2265440"
  },
  {
    "text": "okay these are PNG images so I just need to know I'm loading them with an open CV",
    "start": "2265440",
    "end": "2271799"
  },
  {
    "text": "the opencv library I'm normalizing the pixel values because that's how the youngest ampoules have",
    "start": "2271799",
    "end": "2277559"
  },
  {
    "text": "been built okay so pixel values are actually between 0 & 1 and then I need to make sure that the dimensions are in",
    "start": "2277559",
    "end": "2284250"
  },
  {
    "text": "the right order and I build an NG array okay so I take a PNG image and I beelin",
    "start": "2284250",
    "end": "2289680"
  },
  {
    "text": "any array okay predicting it's quite simple I just need to call I take my NT",
    "start": "2289680",
    "end": "2297690"
  },
  {
    "text": "array and I forward it through the model using the forward API okay and then I",
    "start": "2297690",
    "end": "2304410"
  },
  {
    "text": "can read the output okay so I will read the ten probabilities on the output layer okay and I will hopefully finding",
    "start": "2304410",
    "end": "2312450"
  },
  {
    "text": "that the top probability is the right class for this okay not a lot of code",
    "start": "2312450",
    "end": "2317970"
  },
  {
    "text": "and then of course I need to load the model which is as complicated as load",
    "start": "2317970",
    "end": "2323789"
  },
  {
    "text": "checkpoint right we use safe checkpoint to save it and then I instantiate it if",
    "start": "2323789",
    "end": "2329549"
  },
  {
    "text": "you want I bind it to my data shape okay so this looks a bit weird so let me",
    "start": "2329549",
    "end": "2335549"
  },
  {
    "text": "explain here I'm going to predict one sample at a time okay one image and then",
    "start": "2335549",
    "end": "2341460"
  },
  {
    "text": "another one and another one okay so that's first one here says that it's the batch size actually so this says I'm",
    "start": "2341460",
    "end": "2348329"
  },
  {
    "text": "using batches of one I could predict 16 images at a time if I want it but here I just want to predict one okay so it's",
    "start": "2348329",
    "end": "2355410"
  },
  {
    "text": "one image with one channel because this is the black and white image so if it",
    "start": "2355410",
    "end": "2362400"
  },
  {
    "text": "was a color image you'll be red green blue so we'd have 3 here 3 that's 4 3 images okay so one one image with one",
    "start": "2362400",
    "end": "2370829"
  },
  {
    "text": "channel 28 by 28 pixels okay so you have",
    "start": "2370829",
    "end": "2376200"
  },
  {
    "text": "to get used to those shapes it's not just 28 by 28 the shape is 28 by 28 well no when you",
    "start": "2376200",
    "end": "2383490"
  },
  {
    "text": "work like this you have to give the batch size and the number of channels and then I'm done right so now I need to",
    "start": "2383490",
    "end": "2390809"
  },
  {
    "text": "load the model that I trained and I need",
    "start": "2390809",
    "end": "2397079"
  },
  {
    "text": "to run my predictions now so here we go",
    "start": "2397079",
    "end": "2405480"
  },
  {
    "text": "okay so these are my ugly digits so for",
    "start": "2405480",
    "end": "2414029"
  },
  {
    "text": "example for the zero I see the 10 probabilities and you can see probability 0 is actually the",
    "start": "2414029",
    "end": "2419549"
  },
  {
    "text": "highest so I'm good this is actually a 0 for 1 actually the that probability is the",
    "start": "2419549",
    "end": "2426869"
  },
  {
    "text": "highest so it is a 1 2 is very good so it should never be one our zeroes it's",
    "start": "2426869",
    "end": "2432480"
  },
  {
    "text": "because I'm just using for decimals so if you see one it means it's higher than 0.9999 okay 3",
    "start": "2432480",
    "end": "2442109"
  },
  {
    "text": "is great for okay 5 is very good 6 very",
    "start": "2442109",
    "end": "2449549"
  },
  {
    "text": "good 7 okay 8 okay now we have a problem",
    "start": "2449549",
    "end": "2455759"
  },
  {
    "text": "because this should really be the highest right but the highest is",
    "start": "2455759",
    "end": "2460769"
  },
  {
    "text": "actually that one which is for the 4 so my model here is confused it thinks this",
    "start": "2460769",
    "end": "2466170"
  },
  {
    "text": "is a 4 so it is a very ugly 9 I'll give you that but it's still a 9 it's not a 4",
    "start": "2466170",
    "end": "2472160"
  },
  {
    "text": "okay so that's a bit disappointing because we have a model that says 9",
    "start": "2472160",
    "end": "2477420"
  },
  {
    "text": "t 8.2 something accuracy and I tried 10 samples and one of them is wrong so okay",
    "start": "2477420",
    "end": "2482670"
  },
  {
    "text": "maybe I'm unlucky but okay that's that's too bad okay so what could be a problem here",
    "start": "2482670",
    "end": "2489960"
  },
  {
    "text": "because these are simple images right but what did I do to them",
    "start": "2489960",
    "end": "2495828"
  },
  {
    "text": "so I normalize them but that's that's okay but what did I do with the 2d thing",
    "start": "2499940",
    "end": "2505770"
  },
  {
    "text": "I flattened them okay so well that's not",
    "start": "2505770",
    "end": "2512099"
  },
  {
    "text": "helping right if I give you a picture of a cat and a picture of a dog and I",
    "start": "2512099",
    "end": "2517349"
  },
  {
    "text": "flatten them and I give you the two vectors is it easy to recognize now",
    "start": "2517349",
    "end": "2522619"
  },
  {
    "text": "unless it's a very flat dog but probably not right",
    "start": "2522619",
    "end": "2527960"
  },
  {
    "text": "so that's likely to be the issue here the fact that I'm using this this fully",
    "start": "2527960",
    "end": "2537630"
  },
  {
    "start": "2529000",
    "end": "2858000"
  },
  {
    "text": "connected Network where I have to flatten images because my input layer",
    "start": "2537630",
    "end": "2542640"
  },
  {
    "text": "has to be flat so how about we try that fancy Lynnette thing okay",
    "start": "2542640",
    "end": "2549000"
  },
  {
    "text": "simple CNN invented by Luca so let's do",
    "start": "2549000",
    "end": "2555270"
  },
  {
    "text": "this again I'm going to train for 24 epochs build the iterator that's the exact same code here I'm going to build",
    "start": "2555270",
    "end": "2561990"
  },
  {
    "text": "Lynette it's a small variation over the net but it's close enough so I can see a",
    "start": "2561990",
    "end": "2568290"
  },
  {
    "text": "first block right convolution and pulling right count one really one pull",
    "start": "2568290",
    "end": "2574170"
  },
  {
    "text": "one okay so first block of convolution to extract features and pooling to sample",
    "start": "2574170",
    "end": "2580530"
  },
  {
    "text": "the image then another one convolution pooling etc again extracting",
    "start": "2580530",
    "end": "2586319"
  },
  {
    "text": "features and and again some place sampling again and that gives that takes",
    "start": "2586319",
    "end": "2591690"
  },
  {
    "text": "me from the 28 by 28 image to I think it's four by four or five by five I need",
    "start": "2591690",
    "end": "2597540"
  },
  {
    "text": "to check okay but much smaller and this time I can flatten this and use a fully",
    "start": "2597540",
    "end": "2603630"
  },
  {
    "text": "connected Network just like the one we saw before to classify this okay so it's really that low net that we saw this",
    "start": "2603630",
    "end": "2609930"
  },
  {
    "text": "morning two blocks convolution pooling and then various just one layer for",
    "start": "2609930",
    "end": "2614970"
  },
  {
    "text": "classification okay so of course now you",
    "start": "2614970",
    "end": "2620829"
  },
  {
    "text": "could say well why is the care the kernel 5x5 and why do I have thirty-two",
    "start": "2620829",
    "end": "2625960"
  },
  {
    "text": "layer thirty-two filters and not different number and that's where you get into I say the more experimental",
    "start": "2625960",
    "end": "2633579"
  },
  {
    "text": "side of things okay and you could try you could try training with us sixty-four filters instead and see what happens okay but we",
    "start": "2633579",
    "end": "2642520"
  },
  {
    "text": "can't go too deep today and once again training on GPU binding and initializing",
    "start": "2642520",
    "end": "2652450"
  },
  {
    "text": "and I'm gonna use another up to magical atom which is a popular one these days",
    "start": "2652450",
    "end": "2657569"
  },
  {
    "text": "and I'm gonna start with the learning rate of 0.1 but atom will actually change the learning rate as we go okay",
    "start": "2657569",
    "end": "2663970"
  },
  {
    "text": "okay so now let's train and immediately",
    "start": "2663970",
    "end": "2670480"
  },
  {
    "text": "we could see well I'm still on the same machine still using the GPU and this is way slower okay",
    "start": "2670480",
    "end": "2677530"
  },
  {
    "text": "the fully connected network was something like 0.7 seconds per epoch and this is 2.4 so let's say 4 times slower",
    "start": "2677530",
    "end": "2686430"
  },
  {
    "text": "okay and if I run this on the GPU it would probably be 45 seconds per epoch",
    "start": "2686430",
    "end": "2693310"
  },
  {
    "text": "so that's why the minute you move into I would say convolution and in the minute",
    "start": "2693310",
    "end": "2699849"
  },
  {
    "text": "you start working with images if you have a big data set this is a very small one so we could totally train it on CPU",
    "start": "2699849",
    "end": "2706150"
  },
  {
    "text": "but if you start having you know hundreds of thousands millions of images",
    "start": "2706150",
    "end": "2711510"
  },
  {
    "text": "complex network this one has only two convolution operations but again",
    "start": "2711510",
    "end": "2716890"
  },
  {
    "text": "state-of-the-art networks can have hundreds of convolution layers so you can imagine that of course this is why",
    "start": "2716890",
    "end": "2723310"
  },
  {
    "text": "you need those those GPUs with thousands of course to run all this stuff in parallel so epic one tells me ninety",
    "start": "2723310",
    "end": "2732310"
  },
  {
    "text": "seven point eight accuracy epochs zero at the first epoch which is even higher than what we got so that's a good sign",
    "start": "2732310",
    "end": "2738819"
  },
  {
    "text": "right that's a good sign and let's go down and we can see okay so",
    "start": "2738819",
    "end": "2746870"
  },
  {
    "text": "of course we get to one and we get to validation accuracy of 99.1 so let's",
    "start": "2746870",
    "end": "2753980"
  },
  {
    "text": "save this one here okay and so 98.2",
    "start": "2753980",
    "end": "2759920"
  },
  {
    "text": "versus 99.1 doesn't feel like a huge difference right so of course we have to test once",
    "start": "2759920",
    "end": "2765560"
  },
  {
    "text": "again but keep in mind this is a very different architecture so I'm just gonna load this one instead and then I'm gonna",
    "start": "2765560",
    "end": "2774650"
  },
  {
    "text": "run my predictions again and hopefully",
    "start": "2774650",
    "end": "2780890"
  },
  {
    "text": "the yeah zero is good one two three four",
    "start": "2780890",
    "end": "2786770"
  },
  {
    "text": "and I tend to get higher numbers because I only see one here six seven eight all",
    "start": "2786770",
    "end": "2792470"
  },
  {
    "text": "right and this is where I look like an idiot half the time because sometimes it",
    "start": "2792470",
    "end": "2797900"
  },
  {
    "text": "doesn't work and it worked so I still looking like an idiot generally but not",
    "start": "2797900",
    "end": "2803990"
  },
  {
    "text": "today all right good so I get ninety three percent accuracy on this nine now and so",
    "start": "2803990",
    "end": "2810200"
  },
  {
    "text": "there's no doubt it's a nine okay so as you can see now you know we can be",
    "start": "2810200",
    "end": "2816770"
  },
  {
    "text": "confident that this works a little better right this is a little more resistant to two changes okay and this",
    "start": "2816770",
    "end": "2826670"
  },
  {
    "text": "is because again I'm not flattening I'm just sticking to 2d images and",
    "start": "2826670",
    "end": "2832910"
  },
  {
    "text": "extracting features than shrinking them as we go all right sure how much time",
    "start": "2832910",
    "end": "2843340"
  },
  {
    "text": "okay ten minutes so maybe we should try",
    "start": "2843340",
    "end": "2848830"
  },
  {
    "text": "maybe we should try okay this one here",
    "start": "2848830",
    "end": "2857560"
  },
  {
    "start": "2858000",
    "end": "3105000"
  },
  {
    "text": "so of course some of those models are insanely complex so here we define them",
    "start": "2858210",
    "end": "2864550"
  },
  {
    "text": "and train them ourselves but most of the time you don't want to do that most of",
    "start": "2864550",
    "end": "2870190"
  },
  {
    "text": "the time you want to take existing models that have been shown to work on the on the problem similar to yours and",
    "start": "2870190",
    "end": "2877030"
  },
  {
    "text": "you want to reuse them directly you don't want to train those 100 or 200",
    "start": "2877030",
    "end": "2882040"
  },
  {
    "text": "layer models it's gonna take time you need a lot of data to train them properly it's not easy and it's costly",
    "start": "2882040",
    "end": "2888820"
  },
  {
    "text": "because you you will need a bit of infrastructure to do it so here I'm going to grab for three models which are",
    "start": "2888820",
    "end": "2897630"
  },
  {
    "text": "which in their time one classification competitions because there are such things if you can believe that and I'm",
    "start": "2897630",
    "end": "2906400"
  },
  {
    "text": "gonna I'm gonna load those models and I'm gonna predict the same image and and",
    "start": "2906400",
    "end": "2911950"
  },
  {
    "text": "see what happens there okay so let me clear this so these models have been",
    "start": "2911950",
    "end": "2919210"
  },
  {
    "text": "trained on the data set called image net okay and the image net is a it's a huge image data set it's got more than a",
    "start": "2919210",
    "end": "2926619"
  },
  {
    "text": "million pictures with a thousand categories so people object no no people on no people objects animals and plants",
    "start": "2926619",
    "end": "2935910"
  },
  {
    "text": "and I've got a file with the categories in there so loading the model is exactly",
    "start": "2935910",
    "end": "2942400"
  },
  {
    "text": "the same thing as we saw before okay except this time I'm working with color images so I'm going to predict one image",
    "start": "2942400",
    "end": "2949000"
  },
  {
    "text": "with three channels and these images are 224 by 224 this is how those models were",
    "start": "2949000",
    "end": "2954819"
  },
  {
    "text": "trained so I need to use the same size okay I need to load the categories",
    "start": "2954819",
    "end": "2960220"
  },
  {
    "text": "because I want those strings in memory to display the categories later on the",
    "start": "2960220",
    "end": "2965290"
  },
  {
    "text": "predictions again I need to load the image with OpenCV into an anti array",
    "start": "2965290",
    "end": "2972329"
  },
  {
    "text": "prediction is the same except I have a thousand categories right so I don't",
    "start": "2972329",
    "end": "2978790"
  },
  {
    "text": "want to display a thousand categories I just want to take the five the top five ones let's say so I'm just gonna do that",
    "start": "2978790",
    "end": "2984640"
  },
  {
    "text": "I'm gonna squeeze that that vector sort it take the top five and return them",
    "start": "2984640",
    "end": "2991420"
  },
  {
    "text": "okay so now I can load my models okay",
    "start": "2991420",
    "end": "2996849"
  },
  {
    "text": "and I can run them on the here I can run",
    "start": "2996849",
    "end": "3005789"
  },
  {
    "text": "them on the CPU see what happens there okay so here's the image I'm using and I",
    "start": "3005789",
    "end": "3011099"
  },
  {
    "text": "can see well they all do a good job right the top probability for all three is a solid 80 90 plus percent for violin",
    "start": "3011099",
    "end": "3020549"
  },
  {
    "text": "I can still see a pretty big difference in prediction time okay so vgg 16 is the",
    "start": "3020549",
    "end": "3026670"
  },
  {
    "text": "oldest one ResNet is more recent and inception is even more recent so you can see you know again depending on your",
    "start": "3026670",
    "end": "3033450"
  },
  {
    "text": "business problem you could say well maybe this one has a slightly lower accuracy but it's good enough and it's",
    "start": "3033450",
    "end": "3038730"
  },
  {
    "text": "seven times faster than this one so you know why not why not take that last one just faster okay or you could say well I",
    "start": "3038730",
    "end": "3045809"
  },
  {
    "text": "don't care so much about saving half a microsecond I just want the top accuracy so I'll take the first one okay but of",
    "start": "3045809",
    "end": "3052619"
  },
  {
    "text": "course you would have to test on a lot of images let's run this again on the GPU and it will be interesting to",
    "start": "3052619",
    "end": "3061380"
  },
  {
    "text": "compare so point sixty four point thirty four okay so point sixty four is now",
    "start": "3061380",
    "end": "3067380"
  },
  {
    "text": "point O three right so you can see generally the GPU here for a single",
    "start": "3067380",
    "end": "3074400"
  },
  {
    "text": "image prediction is maybe twenty times faster okay fifteen to twenty times faster but does",
    "start": "3074400",
    "end": "3080039"
  },
  {
    "text": "it matter to your app that's that's the question right maybe you're just happier with a less expensive cpu-based instance",
    "start": "3080039",
    "end": "3087750"
  },
  {
    "text": "to run this right does it really matter to your app if you predict in point oh five seconds point two five microsecond",
    "start": "3087750",
    "end": "3094079"
  },
  {
    "text": "or 0.5 microsecond right for this kind of thing it probably doesn't matter a",
    "start": "3094079",
    "end": "3099269"
  },
  {
    "text": "lot so you should probably stick to the cpu instance which is going to be cheaper okay so as you can see this is",
    "start": "3099269",
    "end": "3106559"
  },
  {
    "text": "how you use pre trained models right I am we didn't write a single line of code",
    "start": "3106559",
    "end": "3111930"
  },
  {
    "text": "of a deep running code right just loaded images and and and forwarded them and we",
    "start": "3111930",
    "end": "3118529"
  },
  {
    "text": "get state of the art prediction with those okay but what if and that will be",
    "start": "3118529",
    "end": "3123900"
  },
  {
    "text": "the last thing for today what if I need to use my own images okay",
    "start": "3123900",
    "end": "3135080"
  },
  {
    "text": "so let's say you take one of those pre trained models but you want to classify",
    "start": "3135080",
    "end": "3142080"
  },
  {
    "text": "here I don't know let's take a an easy example for Munich you want to recognize",
    "start": "3142080",
    "end": "3148160"
  },
  {
    "text": "BMWs from Mercedes from Audi from Volkswagen right of course imagenet",
    "start": "3148160",
    "end": "3156120"
  },
  {
    "text": "doesn't know how to do that okay the image that data said I don't believe has",
    "start": "3156120",
    "end": "3162720"
  },
  {
    "text": "it probably has cars and objects probably sports cars etc but I don't",
    "start": "3162720",
    "end": "3168720"
  },
  {
    "text": "think it has brands right so you could say okay we're going to gather hundreds",
    "start": "3168720",
    "end": "3173790"
  },
  {
    "text": "of thousands of images from those brands and build our data set and we'll train on that and that's going to work for",
    "start": "3173790",
    "end": "3180270"
  },
  {
    "text": "sure okay that's going to work but gathering those image those images labeling them etc etc is a bit of work",
    "start": "3180270",
    "end": "3187380"
  },
  {
    "text": "okay especially the gathering pot right well you could sit in the street and take pictures of cars all day long okay",
    "start": "3187380",
    "end": "3193800"
  },
  {
    "text": "that's that's gonna get old especially if you need a hundred thousand of them you could buy that data etc that many",
    "start": "3193800",
    "end": "3200310"
  },
  {
    "text": "other ways but my point is it's time consuming and probably expensive to",
    "start": "3200310",
    "end": "3205560"
  },
  {
    "text": "build a very very large data set to Train from scratch so what you could do is you could say well these models they",
    "start": "3205560",
    "end": "3213360"
  },
  {
    "text": "don't know about BMWs versus Mercedes versus everything else but surely they know about cars and vehicles so some of",
    "start": "3213360",
    "end": "3220770"
  },
  {
    "text": "that training is probably interesting to me right so could I take this existing",
    "start": "3220770",
    "end": "3226050"
  },
  {
    "text": "network could I retrain it just a little bit on my specific images in which case",
    "start": "3226050",
    "end": "3232740"
  },
  {
    "text": "I probably do not need more than let's say a few thousands and would I get good",
    "start": "3232740",
    "end": "3237810"
  },
  {
    "text": "results and the answer is yes this is called fine tuning and it's the number",
    "start": "3237810",
    "end": "3243960"
  },
  {
    "text": "one technique that people use when they do deep running right they don't go and",
    "start": "3243960",
    "end": "3249390"
  },
  {
    "text": "train from scratch they take a large model train on a huge data set and they",
    "start": "3249390",
    "end": "3255030"
  },
  {
    "text": "find units on their own images right because it's again it's a huge time-saver",
    "start": "3255030",
    "end": "3260230"
  },
  {
    "text": "when it comes to building the data set and of course training so let me show you a quick example here I'm going to",
    "start": "3260230",
    "end": "3268750"
  },
  {
    "text": "use a dataset called size for a 10 and oh yeah let's should have click here so",
    "start": "3268750",
    "end": "3277540"
  },
  {
    "text": "another popular of image data set and it's called Seifer 10 because it's got",
    "start": "3277540",
    "end": "3284500"
  },
  {
    "text": "10 classes okay so it's got again 50k images in 10 classes and 5,000 images",
    "start": "3284500",
    "end": "3292900"
  },
  {
    "text": "per class okay so let's say I have a pre trained model okay and I have one here",
    "start": "3292900",
    "end": "3301450"
  },
  {
    "text": "so I train resonate 50 which is a 50 layers deep pretty big efficient model",
    "start": "3301450",
    "end": "3308860"
  },
  {
    "text": "took me a while to train it on a GPU instance even and I saved it okay and I",
    "start": "3308860",
    "end": "3315640"
  },
  {
    "text": "did this some time ago already time flies so I saved this model and if I if",
    "start": "3315640",
    "end": "3323890"
  },
  {
    "text": "I use my validation data set I get something like 82 percent accuracy okay",
    "start": "3323890",
    "end": "3330190"
  },
  {
    "text": "which is fantastic it's it's okay this is a pretty difficult data set to learn",
    "start": "3330190",
    "end": "3335370"
  },
  {
    "text": "because these are really small images 32 by 32 right and some of them are just",
    "start": "3335370",
    "end": "3340750"
  },
  {
    "text": "impossible so for example this this is a",
    "start": "3340750",
    "end": "3347020"
  },
  {
    "text": "cat is it yeah exactly could be could be",
    "start": "3347020",
    "end": "3354440"
  },
  {
    "text": "could be a fox it could be could be a okay so it's not a frog but it could be",
    "start": "3354440",
    "end": "3360140"
  },
  {
    "text": "a dog seriously and some of them are just impossible the deer and the horse",
    "start": "3360140",
    "end": "3365240"
  },
  {
    "text": "are pretty fun as well you know so you could you could zoom in and it's only 900 pixels so at the end",
    "start": "3365240",
    "end": "3372109"
  },
  {
    "text": "of the day you know some of them are impossible to figure out even even for a human I believe which makes this data",
    "start": "3372109",
    "end": "3377839"
  },
  {
    "text": "set interesting so I trained on this but let's say now my business problem is to",
    "start": "3377839",
    "end": "3382910"
  },
  {
    "text": "recognize cars and horses right that's all I care about that's my billion dollar startup ID",
    "start": "3382910",
    "end": "3389470"
  },
  {
    "text": "build a car and horse detector okay yeah that's gonna work that's gonna work for",
    "start": "3389470",
    "end": "3396680"
  },
  {
    "text": "sure I'm raising money right now so if you want to jump in so of course I could",
    "start": "3396680",
    "end": "3402410"
  },
  {
    "text": "take oh you could say okay let's take a million car pictures and let's take a million horse pictures and fine okay or",
    "start": "3402410",
    "end": "3408940"
  },
  {
    "text": "let's take a million BMW pictures and million Mercedes pictures going back to",
    "start": "3408940",
    "end": "3414410"
  },
  {
    "text": "my same example but here again I just care about automobiles and horses so what I'm going to do is basically this",
    "start": "3414410",
    "end": "3427160"
  },
  {
    "text": "and this is using Charis Charis is another open-source library for deep learning it's it's it's very interesting",
    "start": "3427160",
    "end": "3434750"
  },
  {
    "text": "I encourage you to read about it and use it it's quite similar to MX net when it",
    "start": "3434750",
    "end": "3440510"
  },
  {
    "text": "comes to abstraction level and caris can work with multiple backends okay so Carris is actually an API",
    "start": "3440510",
    "end": "3447380"
  },
  {
    "text": "sitting on top of tensorflow",
    "start": "3447380",
    "end": "3452440"
  },
  {
    "text": "piano and hopefully very soon for carers to run on MX net okay it was available",
    "start": "3452440",
    "end": "3459710"
  },
  {
    "text": "in Karis 1 and we're working on it for carers too right now so what I'm going to do as you can see and it's very",
    "start": "3459710",
    "end": "3465710"
  },
  {
    "text": "readable code and very well commented code of course so I'm loading the pre-trained model which is very similar",
    "start": "3465710",
    "end": "3471950"
  },
  {
    "text": "to what we saw before I'm going to freeze all the layers in this model okay",
    "start": "3471950",
    "end": "3477770"
  },
  {
    "text": "and I have to show you this part because this is how you do it and this is why python cannot be beat",
    "start": "3477770",
    "end": "3484710"
  },
  {
    "text": "really okay this is how you do it they have a trainable attribute in cars and",
    "start": "3484710",
    "end": "3489750"
  },
  {
    "text": "you just iterate over all the layers and you said the trainable attribute to",
    "start": "3489750",
    "end": "3494970"
  },
  {
    "text": "false except the last one so basically I'm going to retrain the model only on",
    "start": "3494970",
    "end": "3501390"
  },
  {
    "text": "the last layer I'm going to keep all the previous weights for all the layers only the last one will be retrained okay",
    "start": "3501390",
    "end": "3509010"
  },
  {
    "text": "because I want to retrain for two classes and not ten and of course as you can imagine it's easier to figure out",
    "start": "3509010",
    "end": "3515790"
  },
  {
    "text": "two classes than ten okay so this is what I'm doing freezing the layers and",
    "start": "3515790",
    "end": "3522530"
  },
  {
    "text": "then I'm going to retrain retrain and you can read this code and figure out",
    "start": "3522530",
    "end": "3528000"
  },
  {
    "text": "what it does and I should I should start it now because it takes a few minutes because",
    "start": "3528000",
    "end": "3535859"
  },
  {
    "text": "it's running on my machine okay no bad",
    "start": "3535859",
    "end": "3543000"
  },
  {
    "text": "ID okay and I'm just going to train again using",
    "start": "3543000",
    "end": "3548630"
  },
  {
    "text": "five thousand cars and five thousand horses okay and I'm actually retraining with the",
    "start": "3548630",
    "end": "3554670"
  },
  {
    "text": "same images that are already present in a training set okay so I'm not even adding new data I'm just saying now my",
    "start": "3554670",
    "end": "3562050"
  },
  {
    "text": "output layer has two classes and just retrain on cars and horses and I'm",
    "start": "3562050",
    "end": "3567510"
  },
  {
    "text": "keeping all the previous training as well okay so as you can see here so here",
    "start": "3567510",
    "end": "3574410"
  },
  {
    "text": "I'm just looking at what my baseline is and it will be ready in 15 seconds so",
    "start": "3574410",
    "end": "3580230"
  },
  {
    "text": "this should say so here I'm predicting with a thousand cars and a thousand horses just to see what the starting",
    "start": "3580230",
    "end": "3586770"
  },
  {
    "text": "point is for that pre trained model and it should say something like 88 percent",
    "start": "3586770",
    "end": "3592250"
  },
  {
    "text": "so that's my baseline okay 88 percent point eight okay and now I'm just",
    "start": "3592250",
    "end": "3599220"
  },
  {
    "text": "retraining again with 5,000 horses and 5,000 calls and this takes a few minutes",
    "start": "3599220",
    "end": "3604830"
  },
  {
    "text": "so I'll go through there the rest of the slides and and we can see this this result okay so you get the point right",
    "start": "3604830",
    "end": "3611160"
  },
  {
    "text": "I'm taking that three train Network retraining it with two classes only",
    "start": "3611160",
    "end": "3617420"
  },
  {
    "text": "using very very little data so 88% is",
    "start": "3617420",
    "end": "3622610"
  },
  {
    "text": "the baseline and in three minutes we'll see where we land all right okay",
    "start": "3622610",
    "end": "3628820"
  },
  {
    "text": "so sorry no so I'm just retraining for",
    "start": "3628820",
    "end": "3640460"
  },
  {
    "text": "the two classes Oh before yes it was trained on that ten classes okay right",
    "start": "3640460",
    "end": "3646000"
  },
  {
    "text": "it was turning on those ten classes and again the baseline accuracy for the ten classes was 82% I think and the baseline",
    "start": "3646000",
    "end": "3652670"
  },
  {
    "text": "for just for these two classes is 88 but let's see by just retraining for a few minutes how far I could get okay",
    "start": "3652670",
    "end": "3659300"
  },
  {
    "text": "so again all that stuff is on github so the links that I already share this morning if you want to start working",
    "start": "3659300",
    "end": "3666500"
  },
  {
    "text": "with MX net so of course everything is on github and you you can there's a",
    "start": "3666500",
    "end": "3674000"
  },
  {
    "text": "separate repo for gluon okay and remember the gluon documentation that I shared this morning is a really good",
    "start": "3674000",
    "end": "3680480"
  },
  {
    "text": "really good way to get started because it's it's a proper deep learning book so it takes you through deep learning in",
    "start": "3680480",
    "end": "3687080"
  },
  {
    "text": "general and then shows you how to get started with with the algos okay and the",
    "start": "3687080",
    "end": "3692300"
  },
  {
    "text": "last thing I want to point out and it's a probably good way to to compliment this session is like this says you know",
    "start": "3692300",
    "end": "3699920"
  },
  {
    "text": "the number one question I get after this talk is okay this is really great but now how do I really get started so I'm",
    "start": "3699920",
    "end": "3707270"
  },
  {
    "text": "happy to answer this question again today but I figured I could help a lot of people by explaining in the post how",
    "start": "3707270",
    "end": "3712400"
  },
  {
    "text": "to do it so I'm just basically sharing the resources in the right order",
    "start": "3712400",
    "end": "3718430"
  },
  {
    "text": "you know how I learned this stuff so everybody starting point will be a bit",
    "start": "3718430",
    "end": "3723830"
  },
  {
    "text": "different of course I did a lot of math back in the day so maybe that was easier",
    "start": "3723830",
    "end": "3729560"
  },
  {
    "text": "for me but anyway this is basically ten steps with resources on getting on your",
    "start": "3729560",
    "end": "3737150"
  },
  {
    "text": "way to deep running and people have run this I've read I've read this and follow those steps and I get super cool emails",
    "start": "3737150",
    "end": "3744410"
  },
  {
    "text": "telling me yeah this works and I'm now running this so hopefully it will help you to write",
    "start": "3744410",
    "end": "3749849"
  },
  {
    "text": "so this is uh this is how you can get started okay so now the only thing that",
    "start": "3749849",
    "end": "3757529"
  },
  {
    "text": "we're missing of course is the accuracy for this should have launched it okay 110 seconds questions you have 107",
    "start": "3757529",
    "end": "3765869"
  },
  {
    "text": "seconds for questions yeah that's a",
    "start": "3765869",
    "end": "3778949"
  },
  {
    "text": "really good question so the question is would it work if I train on something completely different if I trained on",
    "start": "3778949",
    "end": "3784009"
  },
  {
    "text": "spaceships and I don't know satellites let's say and the answer is yes and that's the magic of",
    "start": "3784009",
    "end": "3790709"
  },
  {
    "text": "convolutional neural networks because as we do feature extractions okay in the early layers we tend to",
    "start": "3790709",
    "end": "3797609"
  },
  {
    "text": "extract very basic features very basic shapes like maybe lines and angles and",
    "start": "3797609",
    "end": "3803309"
  },
  {
    "text": "diagonals so shapes that will be present in everything right and then as you go",
    "start": "3803309",
    "end": "3809219"
  },
  {
    "text": "deeper and actually you will find some examples on the web of people are showing visualization of what those",
    "start": "3809219",
    "end": "3816209"
  },
  {
    "text": "filters that can actually detect as you go deeper into the model you see the the",
    "start": "3816209",
    "end": "3821670"
  },
  {
    "text": "filters detecting more complex shapes and the deeper you go the more complex they become so that's why you tend to",
    "start": "3821670",
    "end": "3828299"
  },
  {
    "text": "only retrain the very last layers because you want to keep that early training if I was training on something",
    "start": "3828299",
    "end": "3833910"
  },
  {
    "text": "very very weird like apples and oranges maybe let's say which are very different",
    "start": "3833910",
    "end": "3839039"
  },
  {
    "text": "to the objects maybe I could say okay I'm not just going to retrain the last layer maybe I'm gonna retrain the last",
    "start": "3839039",
    "end": "3845009"
  },
  {
    "text": "five layers or the last three layers and and you know to specialize those layers for all those new shapes okay and that's",
    "start": "3845009",
    "end": "3852660"
  },
  {
    "text": "part of the experimentation that you need to do okay that's a really really good question thank you for bringing it up okay",
    "start": "3852660",
    "end": "3858479"
  },
  {
    "text": "five seconds well we can already see the result can't we okay so this is it's",
    "start": "3858479",
    "end": "3867599"
  },
  {
    "text": "thinking for a while but the answer is 98% so and this is running on my laptop",
    "start": "3867599",
    "end": "3874190"
  },
  {
    "text": "okay which is why it's actually slow but take this okay I took this complex model",
    "start": "3874190",
    "end": "3880319"
  },
  {
    "text": "that I trained for hours and hours and hours maybe days I take even existing data I'm not adding",
    "start": "3880319",
    "end": "3888530"
  },
  {
    "text": "any new data to it I'm just saying now please relearn for one epoch on those few samples and I can boost my accuracy",
    "start": "3888530",
    "end": "3895820"
  },
  {
    "text": "from it's up there for audience from eighty eight percent to ninety eight so",
    "start": "3895820",
    "end": "3902810"
  },
  {
    "text": "plus ten points with three four minutes of training okay so like I'm saying like",
    "start": "3902810",
    "end": "3909200"
  },
  {
    "text": "I said fine tuning is really really a weapon of mass destruction when it comes",
    "start": "3909200",
    "end": "3915170"
  },
  {
    "text": "to deep learning it's the most it's the fastest most economical way to get",
    "start": "3915170",
    "end": "3920630"
  },
  {
    "text": "really really good results when you don't have a lot of data yeah absolutely",
    "start": "3920630",
    "end": "3928520"
  },
  {
    "text": "absolutely yeah the question is can you retrain it like that so sure you don't",
    "start": "3928520",
    "end": "3933950"
  },
  {
    "text": "want to throw away your model okay so maybe you could you have to experiment once again it's very difficult to give",
    "start": "3933950",
    "end": "3940400"
  },
  {
    "text": "you the solid as you can see the all of these stuff is experimental okay so you could say maybe I'm retraining every day",
    "start": "3940400",
    "end": "3947000"
  },
  {
    "text": "with incremental data and maybe once a month I'm doing a full training and you could even a/b test those things right",
    "start": "3947000",
    "end": "3953450"
  },
  {
    "text": "you could say the incremental e train model does it perform better than the model that I'd trained from scratch all",
    "start": "3953450",
    "end": "3960350"
  },
  {
    "text": "the time who knows right who knows you can figure it out and that's a good",
    "start": "3960350",
    "end": "3965620"
  },
  {
    "text": "that's a good transition to the next talk because when you go into those discussions you quickly get to okay how",
    "start": "3965620",
    "end": "3972140"
  },
  {
    "text": "do I try that scale how can I train 50 models in parallel how can i deploy them blah blah blah blah blah okay oh it's in",
    "start": "3972140",
    "end": "3979010"
  },
  {
    "text": "the DevOps part of machine learning which is really important okay and that's the next talk and I think you",
    "start": "3979010",
    "end": "3985460"
  },
  {
    "text": "guys have a break right so thank you because I probably don't so thanks again",
    "start": "3985460",
    "end": "3991130"
  },
  {
    "text": "for listening so next session is sage maker so running more code running more",
    "start": "3991130",
    "end": "3997190"
  },
  {
    "text": "samples but this time the focus will be on I would say the DevOps part of machine learning and how do you scale",
    "start": "3997190",
    "end": "4003850"
  },
  {
    "text": "that to a team team of 50 people and without getting bogged down in infrastructure okay so thanks again",
    "start": "4003850",
    "end": "4011390"
  },
  {
    "text": "[Applause]",
    "start": "4011390",
    "end": "4014769"
  }
]