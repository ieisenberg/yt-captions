[
  {
    "text": "[Music]",
    "start": "0",
    "end": "4250"
  },
  {
    "text": "hello and thank you for watching this",
    "start": "4250",
    "end": "6600"
  },
  {
    "text": "video this is Thor getting's I'm a",
    "start": "6600",
    "end": "8580"
  },
  {
    "text": "senior Solutions Architect with AWS and",
    "start": "8580",
    "end": "10889"
  },
  {
    "text": "today I wanted to show you how to use",
    "start": "10889",
    "end": "13139"
  },
  {
    "text": "some of our deep learning based api's",
    "start": "13139",
    "end": "15750"
  },
  {
    "text": "that you can start using to help",
    "start": "15750",
    "end": "18000"
  },
  {
    "text": "increase the pace of innovation in your",
    "start": "18000",
    "end": "19890"
  },
  {
    "text": "company today we're going to be talking",
    "start": "19890",
    "end": "22410"
  },
  {
    "text": "about Amazon translate Amazon Pali and",
    "start": "22410",
    "end": "26090"
  },
  {
    "text": "Amazon recognition and how to use those",
    "start": "26090",
    "end": "29160"
  },
  {
    "text": "with dotnet let's get started in this",
    "start": "29160",
    "end": "33329"
  },
  {
    "text": "first example I'm going to use Amazon",
    "start": "33329",
    "end": "35489"
  },
  {
    "text": "Translate to translate a phrase from",
    "start": "35489",
    "end": "37739"
  },
  {
    "text": "English to a target language currently",
    "start": "37739",
    "end": "40379"
  },
  {
    "text": "Amazon Translate supports 25 different",
    "start": "40379",
    "end": "42840"
  },
  {
    "text": "languages and uses a deep learning based",
    "start": "42840",
    "end": "45930"
  },
  {
    "text": "approach to translation once it's",
    "start": "45930",
    "end": "48870"
  },
  {
    "text": "translated I'm going to use Amazon Pali",
    "start": "48870",
    "end": "51149"
  },
  {
    "text": "to create a sound file of synthesized",
    "start": "51149",
    "end": "53190"
  },
  {
    "text": "speech in that language you'll notice I",
    "start": "53190",
    "end": "57480"
  },
  {
    "text": "have the AWS toolkit for visual studio",
    "start": "57480",
    "end": "59809"
  },
  {
    "text": "installed in my environment and",
    "start": "59809",
    "end": "62180"
  },
  {
    "text": "additionally I've configured a profile",
    "start": "62180",
    "end": "65070"
  },
  {
    "text": "that links to my AWS account and the",
    "start": "65070",
    "end": "68580"
  },
  {
    "text": "permissions granted to that specific",
    "start": "68580",
    "end": "70680"
  },
  {
    "text": "user this will make it more easy for me",
    "start": "70680",
    "end": "73350"
  },
  {
    "text": "to use AWS resources from visual studio",
    "start": "73350",
    "end": "78049"
  },
  {
    "text": "next let's take a look at our new get",
    "start": "78049",
    "end": "80729"
  },
  {
    "text": "packages we're using for this solution",
    "start": "80729",
    "end": "83750"
  },
  {
    "text": "with AWS all the resources and services",
    "start": "83750",
    "end": "87150"
  },
  {
    "text": "consumed or configured are actually",
    "start": "87150",
    "end": "90210"
  },
  {
    "text": "executed against an API that's true",
    "start": "90210",
    "end": "93060"
  },
  {
    "text": "whether you're using the web console",
    "start": "93060",
    "end": "94920"
  },
  {
    "text": "command line interface PowerShell or an",
    "start": "94920",
    "end": "98340"
  },
  {
    "text": "SDK and the great news for dotnet",
    "start": "98340",
    "end": "100470"
  },
  {
    "text": "developers is that AWS creates new get",
    "start": "100470",
    "end": "103860"
  },
  {
    "text": "packages for all of these resources and",
    "start": "103860",
    "end": "106049"
  },
  {
    "text": "services so you can very simply add a",
    "start": "106049",
    "end": "108869"
  },
  {
    "text": "new get reference and start interacting",
    "start": "108869",
    "end": "110640"
  },
  {
    "text": "with these services so our new get",
    "start": "110640",
    "end": "113670"
  },
  {
    "text": "packages for this project are the AWS",
    "start": "113670",
    "end": "117450"
  },
  {
    "text": "SDK dot poly and the AWS SDK dot",
    "start": "117450",
    "end": "121049"
  },
  {
    "text": "translate packages",
    "start": "121049",
    "end": "124729"
  },
  {
    "text": "[Music]",
    "start": "124810",
    "end": "126899"
  },
  {
    "text": "what this program actually does is it",
    "start": "126899",
    "end": "129429"
  },
  {
    "text": "takes a Inlet phrase and then it",
    "start": "129429",
    "end": "132670"
  },
  {
    "text": "converts it using Amazon Translate to",
    "start": "132670",
    "end": "135550"
  },
  {
    "text": "polish Spanish German and French and",
    "start": "135550",
    "end": "139269"
  },
  {
    "text": "then it says the phrases out loud using",
    "start": "139269",
    "end": "142840"
  },
  {
    "text": "spent synthesized speech in a native",
    "start": "142840",
    "end": "146470"
  },
  {
    "text": "voice so if I take a look at the",
    "start": "146470",
    "end": "151060"
  },
  {
    "text": "conversion code that's using Amazon",
    "start": "151060",
    "end": "153489"
  },
  {
    "text": "Translate you'll see I create a",
    "start": "153489",
    "end": "156010"
  },
  {
    "text": "reference to the Amazon Translate client",
    "start": "156010",
    "end": "158640"
  },
  {
    "text": "giving it the region that I want to use",
    "start": "158640",
    "end": "161019"
  },
  {
    "text": "I create the translate text request",
    "start": "161019",
    "end": "163989"
  },
  {
    "text": "assign it the text source language and",
    "start": "163989",
    "end": "166930"
  },
  {
    "text": "target language that I want and then",
    "start": "166930",
    "end": "169420"
  },
  {
    "text": "call the translate text method once I",
    "start": "169420",
    "end": "173410"
  },
  {
    "text": "have the translated text I can then feed",
    "start": "173410",
    "end": "176319"
  },
  {
    "text": "it into a different method that is using",
    "start": "176319",
    "end": "179260"
  },
  {
    "text": "the Amazon poly client again associated",
    "start": "179260",
    "end": "182400"
  },
  {
    "text": "to a region create the request for these",
    "start": "182400",
    "end": "187859"
  },
  {
    "text": "synthesizing of the speech give it the",
    "start": "187859",
    "end": "191170"
  },
  {
    "text": "language code the translated text how I",
    "start": "191170",
    "end": "194380"
  },
  {
    "text": "want to receive that in this case in mp3",
    "start": "194380",
    "end": "197319"
  },
  {
    "text": "the voice that I want to use and then",
    "start": "197319",
    "end": "199989"
  },
  {
    "text": "call the synthesized speech method so",
    "start": "199989",
    "end": "205239"
  },
  {
    "text": "let's see how that all works by running",
    "start": "205239",
    "end": "207160"
  },
  {
    "text": "the program",
    "start": "207160",
    "end": "209850"
  },
  {
    "text": "become of Chicago jiu-jitsu shamash",
    "start": "213370",
    "end": "216080"
  },
  {
    "text": "obsessed fair pirarucu chess Amitabh",
    "start": "216080",
    "end": "218390"
  },
  {
    "text": "Osama DoDEA",
    "start": "218390",
    "end": "220120"
  },
  {
    "text": "bienvenido a Chicago Don Davis fruta",
    "start": "220120",
    "end": "223099"
  },
  {
    "text": "mozella s Quatro estaciones Ave",
    "start": "223099",
    "end": "225709"
  },
  {
    "text": "similarly nanda mismo D here the common",
    "start": "225709",
    "end": "229370"
  },
  {
    "text": "in Chicago",
    "start": "229370",
    "end": "230239"
  },
  {
    "text": "Vova allophilia has Titan Ganesha once",
    "start": "230239",
    "end": "232670"
  },
  {
    "text": "mallams even talk veneer Chicago News we",
    "start": "232670",
    "end": "236720"
  },
  {
    "text": "son de Tico says own pathway Dolan Eames",
    "start": "236720",
    "end": "239000"
  },
  {
    "text": "your name",
    "start": "239000",
    "end": "240090"
  },
  {
    "text": "[Music]",
    "start": "240090",
    "end": "243120"
  },
  {
    "text": "moving on to Amazon recognition Amazon",
    "start": "244060",
    "end": "247850"
  },
  {
    "text": "recognition uses deep learning to add",
    "start": "247850",
    "end": "250280"
  },
  {
    "text": "image or video analysis to your current",
    "start": "250280",
    "end": "252950"
  },
  {
    "text": "application it can identify objects",
    "start": "252950",
    "end": "255440"
  },
  {
    "text": "people text scenes and activities as",
    "start": "255440",
    "end": "258470"
  },
  {
    "text": "well as detect any inappropriate content",
    "start": "258470",
    "end": "261049"
  },
  {
    "text": "it can be used for highly accurate",
    "start": "261049",
    "end": "263150"
  },
  {
    "text": "facial analysis and facial recognition",
    "start": "263150",
    "end": "265220"
  },
  {
    "text": "on images that you provide so if we take",
    "start": "265220",
    "end": "269330"
  },
  {
    "text": "a look at the nougat packages for this",
    "start": "269330",
    "end": "271460"
  },
  {
    "text": "demonstration application you'll see",
    "start": "271460",
    "end": "275120"
  },
  {
    "text": "that we're using the AWS SDK that core",
    "start": "275120",
    "end": "277610"
  },
  {
    "text": "and AWS SDK dot recognition nougat",
    "start": "277610",
    "end": "281330"
  },
  {
    "text": "packages and what the sample application",
    "start": "281330",
    "end": "284330"
  },
  {
    "text": "does is it detects faces in a picture",
    "start": "284330",
    "end": "287360"
  },
  {
    "text": "and then draws a box around each face",
    "start": "287360",
    "end": "289580"
  },
  {
    "text": "that was detected now the original",
    "start": "289580",
    "end": "292550"
  },
  {
    "text": "picture which you can see here isn't",
    "start": "292550",
    "end": "295430"
  },
  {
    "text": "very high resolution and we wanted to",
    "start": "295430",
    "end": "297620"
  },
  {
    "text": "use a realistic representation of an",
    "start": "297620",
    "end": "299930"
  },
  {
    "text": "image that you might have so if we walk",
    "start": "299930",
    "end": "302870"
  },
  {
    "text": "through the code what you'll see is the",
    "start": "302870",
    "end": "306830"
  },
  {
    "text": "first thing I do is I create a Amazon",
    "start": "306830",
    "end": "310400"
  },
  {
    "text": "recognition client specifying the region",
    "start": "310400",
    "end": "313580"
  },
  {
    "text": "and then I create a detect faces request",
    "start": "313580",
    "end": "318010"
  },
  {
    "text": "with that request I'm reading in the",
    "start": "318010",
    "end": "320990"
  },
  {
    "text": "image data that I have and then I'm",
    "start": "320990",
    "end": "323630"
  },
  {
    "text": "simply calling the detect faces method",
    "start": "323630",
    "end": "328180"
  },
  {
    "text": "when I get that result it'll give me not",
    "start": "329910",
    "end": "333730"
  },
  {
    "text": "only the number of faces but also the",
    "start": "333730",
    "end": "337180"
  },
  {
    "text": "details around where each face is",
    "start": "337180",
    "end": "339460"
  },
  {
    "text": "positioned in the picture and with this",
    "start": "339460",
    "end": "342970"
  },
  {
    "text": "code I'm going to put a bounding box",
    "start": "342970",
    "end": "345520"
  },
  {
    "text": "around each face that it detected and",
    "start": "345520",
    "end": "347860"
  },
  {
    "text": "draw a white rectangle around each face",
    "start": "347860",
    "end": "351460"
  },
  {
    "text": "and then I'm going to display the image",
    "start": "351460",
    "end": "354360"
  },
  {
    "text": "so let's go ahead and see what that does",
    "start": "354360",
    "end": "358260"
  },
  {
    "text": "it's going to print out all the",
    "start": "358260",
    "end": "360340"
  },
  {
    "text": "different faces that it finds and then",
    "start": "360340",
    "end": "362520"
  },
  {
    "text": "select them in the image and you can see",
    "start": "362520",
    "end": "366360"
  },
  {
    "text": "every single face that it found it goes",
    "start": "366360",
    "end": "369100"
  },
  {
    "text": "ahead and draws a box around and it's",
    "start": "369100",
    "end": "373360"
  },
  {
    "text": "really just that easy",
    "start": "373360",
    "end": "374500"
  },
  {
    "text": "to start using AWS is deep learning",
    "start": "374500",
    "end": "377170"
  },
  {
    "text": "based api's with dotnet code I hope that",
    "start": "377170",
    "end": "380410"
  },
  {
    "text": "you found this video interesting and",
    "start": "380410",
    "end": "381940"
  },
  {
    "text": "that you've learned something thanks",
    "start": "381940",
    "end": "383710"
  },
  {
    "text": "again for watching",
    "start": "383710",
    "end": "384840"
  },
  {
    "text": "[Music]",
    "start": "384840",
    "end": "389429"
  },
  {
    "text": "you",
    "start": "389990",
    "end": "392050"
  }
]