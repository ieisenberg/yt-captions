[
  {
    "start": "0",
    "end": "50000"
  },
  {
    "text": "Welcome to Solving with AWS Solutions.",
    "start": "17847",
    "end": "20516"
  },
  {
    "text": "Your deep dive into architectures built by AWS",
    "start": "20516",
    "end": "23853"
  },
  {
    "text": "that are ready to deploy instantly",
    "start": "23853",
    "end": "25755"
  },
  {
    "text": "in the cloud.",
    "start": "25755",
    "end": "26889"
  },
  {
    "text": "I'm Tyler and with me today is a Aijun,",
    "start": "26889",
    "end": "29926"
  },
  {
    "text": "a solutions builder who will take us through",
    "start": "29926",
    "end": "32195"
  },
  {
    "text": "the AWS Dev Ops Monitoring",
    "start": "32195",
    "end": "34430"
  },
  {
    "text": "dashboard solution.",
    "start": "34430",
    "end": "35999"
  },
  {
    "text": "Our customers are telling us they now want a",
    "start": "35999",
    "end": "39035"
  },
  {
    "text": "simple and efficient way to capture and",
    "start": "39035",
    "end": "41771"
  },
  {
    "text": "monitor operational matrix in their",
    "start": "41771",
    "end": "44107"
  },
  {
    "text": "CICD pipeline.",
    "start": "44107",
    "end": "45875"
  },
  {
    "text": "That's why we built AWS Dev Ops",
    "start": "45875",
    "end": "48177"
  },
  {
    "text": "Monitoring dashboard, a solution that",
    "start": "48177",
    "end": "50679"
  },
  {
    "start": "50000",
    "end": "76000"
  },
  {
    "text": "automates this process and helps to identify",
    "start": "50680",
    "end": "53783"
  },
  {
    "text": "areas to improve.",
    "start": "53783",
    "end": "55918"
  },
  {
    "text": "So let's dive right into it.",
    "start": "55918",
    "end": "57286"
  },
  {
    "text": "So where do I start with this solution?",
    "start": "59322",
    "end": "61791"
  },
  {
    "text": "We can start from the solutions landing page.",
    "start": "61791",
    "end": "64794"
  },
  {
    "text": "So this landing page has an",
    "start": "64794",
    "end": "66529"
  },
  {
    "text": "architecture diagram, a link to source code,",
    "start": "66529",
    "end": "70233"
  },
  {
    "text": "CloudFormation template, an implementation",
    "start": "70233",
    "end": "73202"
  },
  {
    "text": "guide and a button that you can click to",
    "start": "73202",
    "end": "75605"
  },
  {
    "text": "launch the solution into your AWS account.",
    "start": "75605",
    "end": "78508"
  },
  {
    "text": "Very nice.",
    "start": "78508",
    "end": "79409"
  },
  {
    "text": "So can we get into the architecture for a",
    "start": "79409",
    "end": "81811"
  },
  {
    "text": "minute?",
    "start": "81811",
    "end": "82612"
  },
  {
    "text": "Of course.",
    "start": "82612",
    "end": "83246"
  },
  {
    "text": "Overall, the architecture splits into four",
    "start": "85581",
    "end": "88751"
  },
  {
    "text": "parts that data ingestion,",
    "start": "88751",
    "end": "91621"
  },
  {
    "text": "transformation, analysis and realization.",
    "start": "91621",
    "end": "95091"
  },
  {
    "text": "OK, so let's talk about the first",
    "start": "95091",
    "end": "97593"
  },
  {
    "text": "phase data ingestion.",
    "start": "97593",
    "end": "99395"
  },
  {
    "text": "Sure.",
    "start": "99395",
    "end": "100095"
  },
  {
    "text": "So it all starts from your AWS CodePipeline.",
    "start": "100096",
    "end": "103533"
  },
  {
    "text": "When you initiate any activity in",
    "start": "103533",
    "end": "105701"
  },
  {
    "text": "the pipeline, such as push a code change to",
    "start": "105702",
    "end": "108571"
  },
  {
    "text": "AWS CodeCommit or on a build using",
    "start": "108571",
    "end": "111541"
  },
  {
    "text": "AWS CodeBuild.",
    "start": "111541",
    "end": "113376"
  },
  {
    "text": "All of this activity is where create",
    "start": "113376",
    "end": "116045"
  },
  {
    "text": "an event.",
    "start": "116045",
    "end": "117245"
  },
  {
    "text": "So the event will be captured by an Amazon",
    "start": "117246",
    "end": "119882"
  },
  {
    "text": "EventBridge Events Rule.",
    "start": "119882",
    "end": "122351"
  },
  {
    "text": "That will send the data to Amazon Kinesis Data",
    "start": "122351",
    "end": "125588"
  },
  {
    "text": "Firehose stream for downstream processing.",
    "start": "125588",
    "end": "129625"
  },
  {
    "text": "So how is this data actually processed within",
    "start": "129625",
    "end": "132495"
  },
  {
    "text": "the solution?",
    "start": "132495",
    "end": "133663"
  },
  {
    "text": "Yeah.",
    "start": "133663",
    "end": "134263"
  },
  {
    "text": "So we have a Lambda.",
    "start": "134263",
    "end": "136265"
  },
  {
    "text": "We then added on Kinesis Data Firehose",
    "start": "136265",
    "end": "139569"
  },
  {
    "text": "for data transformation.",
    "start": "139569",
    "end": "141604"
  },
  {
    "text": "Then Lambda will extract relevant data from",
    "start": "141604",
    "end": "145308"
  },
  {
    "text": "not even state then send that data to an",
    "start": "145308",
    "end": "148344"
  },
  {
    "text": "Amazon S3 Bucket.",
    "start": "148344",
    "end": "150480"
  },
  {
    "text": "Then there is an Amazon Athena database runs",
    "start": "150480",
    "end": "154183"
  },
  {
    "text": "queries against accessory data, then return",
    "start": "154183",
    "end": "157319"
  },
  {
    "text": "the result to Amazon QuickSite where they show",
    "start": "157320",
    "end": "160656"
  },
  {
    "text": "what is created to realise that data.",
    "start": "160656",
    "end": "164093"
  },
  {
    "text": "So from what you said, it seems that AWS",
    "start": "164093",
    "end": "166863"
  },
  {
    "text": "Lambda is seen all through out the back end",
    "start": "166863",
    "end": "170066"
  },
  {
    "start": "170000",
    "end": "194000"
  },
  {
    "text": "of this solution.",
    "start": "170066",
    "end": "171467"
  },
  {
    "text": "So does this mean that it's truly serverless?",
    "start": "171467",
    "end": "174303"
  },
  {
    "text": "Yes, the solution is",
    "start": "174303",
    "end": "175638"
  },
  {
    "text": "built completely serverless.",
    "start": "175638",
    "end": "177640"
  },
  {
    "text": "Awesome.",
    "start": "177640",
    "end": "178941"
  },
  {
    "text": "Can you tell me a little bit about the types",
    "start": "178941",
    "end": "181877"
  },
  {
    "text": "of data that you visualize with this solution?",
    "start": "181878",
    "end": "184914"
  },
  {
    "text": "So far, the solution provides seven",
    "start": "184914",
    "end": "187116"
  },
  {
    "text": "different metrics, for example.",
    "start": "187116",
    "end": "190386"
  },
  {
    "text": "Meantime, to Recover Metric and Pipeline",
    "start": "190386",
    "end": "192989"
  },
  {
    "text": "Metric and more.",
    "start": "192989",
    "end": "194123"
  },
  {
    "start": "194000",
    "end": "252000"
  },
  {
    "text": "We plan to add more metrics in the future.",
    "start": "194123",
    "end": "196859"
  },
  {
    "text": "That sounds great.",
    "start": "196859",
    "end": "197993"
  },
  {
    "text": "So can you take me through some of the",
    "start": "197994",
    "end": "200363"
  },
  {
    "text": "dashboards?",
    "start": "200363",
    "end": "201430"
  },
  {
    "text": "I would love to.",
    "start": "201430",
    "end": "203064"
  },
  {
    "text": "This is Amazon QuickSight dashboard.",
    "start": "203065",
    "end": "205835"
  },
  {
    "text": "You can see here we have multiple types,",
    "start": "205835",
    "end": "208538"
  },
  {
    "text": "one tab for each metric.",
    "start": "208538",
    "end": "211773"
  },
  {
    "text": "So each metric provides a monthly, weekly and",
    "start": "211774",
    "end": "215912"
  },
  {
    "text": "the aggregate view of the metric at the top",
    "start": "215912",
    "end": "219515"
  },
  {
    "text": "of each tab.",
    "start": "219515",
    "end": "220616"
  },
  {
    "text": "There are custom filters that you can use to",
    "start": "220616",
    "end": "223386"
  },
  {
    "text": "filter data as needed.",
    "start": "223386",
    "end": "225655"
  },
  {
    "text": "So this Mean Time to Recover metrics tells you",
    "start": "225655",
    "end": "229692"
  },
  {
    "text": "how long and how often application went down",
    "start": "229692",
    "end": "233029"
  },
  {
    "text": "and the average time it takes to",
    "start": "233029",
    "end": "236566"
  },
  {
    "text": "restore the application.",
    "start": "236566",
    "end": "238267"
  },
  {
    "text": "That's awesome that this is going to show me",
    "start": "238267",
    "end": "240803"
  },
  {
    "text": "application downtime, because I definitely",
    "start": "240803",
    "end": "243172"
  },
  {
    "text": "need to know if and when that happens.",
    "start": "243172",
    "end": "246275"
  },
  {
    "text": "I'll need to be able to pick it back",
    "start": "246275",
    "end": "247844"
  },
  {
    "text": "up really quickly.",
    "start": "247844",
    "end": "249144"
  },
  {
    "text": "So that's great.",
    "start": "249145",
    "end": "250079"
  },
  {
    "text": "Yeah, absolutely.",
    "start": "250079",
    "end": "251446"
  },
  {
    "text": "So monitoring downtime is very important for",
    "start": "251447",
    "end": "254350"
  },
  {
    "start": "252000",
    "end": "362000"
  },
  {
    "text": "our customers to improve their application.",
    "start": "254350",
    "end": "257620"
  },
  {
    "text": "Can you show me another dashboard?",
    "start": "257620",
    "end": "260056"
  },
  {
    "text": "Of course.",
    "start": "260056",
    "end": "260690"
  },
  {
    "text": "This is the pipeline activity dashboard.",
    "start": "261858",
    "end": "265595"
  },
  {
    "text": "So this dashboard presents database Code",
    "start": "265595",
    "end": "270199"
  },
  {
    "text": "Pipeline Execution,",
    "start": "270199",
    "end": "271667"
  },
  {
    "text": "State, Frequency, Duration, along with other",
    "start": "271667",
    "end": "276672"
  },
  {
    "text": "metrics I stage and the action network.",
    "start": "276672",
    "end": "281210"
  },
  {
    "text": "So you can easily find out which pipelines",
    "start": "281210",
    "end": "284246"
  },
  {
    "text": "fail the most.",
    "start": "284247",
    "end": "285181"
  },
  {
    "text": "Which pipelines takes longest time to run and",
    "start": "285181",
    "end": "288017"
  },
  {
    "text": "which pipelines are the most active",
    "start": "288017",
    "end": "290319"
  },
  {
    "text": "over the time.",
    "start": "290319",
    "end": "291420"
  },
  {
    "text": "So what about data refresh?",
    "start": "291420",
    "end": "293089"
  },
  {
    "text": "How does that occur in the solution?",
    "start": "293089",
    "end": "295224"
  },
  {
    "text": "The solution is designed to process data",
    "start": "295224",
    "end": "298094"
  },
  {
    "text": "in near realtime.",
    "start": "298094",
    "end": "299762"
  },
  {
    "text": "So the data in the dashboard will be refreshed",
    "start": "299762",
    "end": "302598"
  },
  {
    "text": "when you refresh the page in your",
    "start": "302598",
    "end": "304332"
  },
  {
    "text": "web browser.",
    "start": "304333",
    "end": "305568"
  },
  {
    "text": "Awesome.",
    "start": "305568",
    "end": "306235"
  },
  {
    "text": "And I have one more question.",
    "start": "306235",
    "end": "308504"
  },
  {
    "text": "So AWS QuickSight is I know the machine",
    "start": "308504",
    "end": "312909"
  },
  {
    "text": "learning business intelligence tool that will",
    "start": "312909",
    "end": "315678"
  },
  {
    "text": "service that Amazon is using.",
    "start": "315678",
    "end": "317947"
  },
  {
    "text": "But if I were to use a different tool, like a",
    "start": "317947",
    "end": "321182"
  },
  {
    "text": "third party tool, is that available?",
    "start": "321183",
    "end": "324620"
  },
  {
    "text": "Yes.",
    "start": "324620",
    "end": "325454"
  },
  {
    "text": "So you can use your own VI tool to customize",
    "start": "325454",
    "end": "328858"
  },
  {
    "text": "the data from Amazon Athena database.",
    "start": "328858",
    "end": "333195"
  },
  {
    "text": "The solution provides an example for how",
    "start": "333195",
    "end": "336098"
  },
  {
    "text": "to do that.",
    "start": "336098",
    "end": "336899"
  },
  {
    "text": "OK, great.",
    "start": "336899",
    "end": "337565"
  },
  {
    "text": "So I will have that step by step if needed.",
    "start": "337566",
    "end": "340069"
  },
  {
    "text": "Well, this has been awesome.",
    "start": "340069",
    "end": "341837"
  },
  {
    "text": "I really appreciate you showing",
    "start": "341837",
    "end": "343072"
  },
  {
    "text": "me the solution.",
    "start": "343072",
    "end": "344340"
  },
  {
    "text": "My pleasure.",
    "start": "344340",
    "end": "345074"
  },
  {
    "text": "Thank you.",
    "start": "345074",
    "end": "346475"
  },
  {
    "text": "That's a great way to explore metrics in your",
    "start": "346475",
    "end": "348744"
  },
  {
    "text": "CICD pipeline.",
    "start": "348744",
    "end": "350546"
  },
  {
    "text": "You can use this solution to capture and",
    "start": "350546",
    "end": "352914"
  },
  {
    "text": "monitor Dev Ops metrics and identify",
    "start": "352915",
    "end": "355952"
  },
  {
    "text": "opportunities to improve your",
    "start": "355952",
    "end": "357720"
  },
  {
    "text": "software delivery process.",
    "start": "357720",
    "end": "360156"
  },
  {
    "text": "Check out this solution and many more on the",
    "start": "360156",
    "end": "362425"
  },
  {
    "text": "AWS Solutions website.",
    "start": "362425",
    "end": "364225"
  },
  {
    "text": "Thanks and see you soon.",
    "start": "364226",
    "end": "365528"
  }
]