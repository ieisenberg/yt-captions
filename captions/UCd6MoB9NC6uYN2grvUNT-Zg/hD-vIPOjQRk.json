[
  {
    "text": "[Music]",
    "start": "610",
    "end": "5930"
  },
  {
    "text": "hello my name is Boris Nissenbaum I'm a",
    "start": "5930",
    "end": "9870"
  },
  {
    "text": "solution architect on the global",
    "start": "9870",
    "end": "11759"
  },
  {
    "text": "solution architecture team specializing",
    "start": "11759",
    "end": "14099"
  },
  {
    "text": "in Microsoft technologies on Amazon Web",
    "start": "14099",
    "end": "16680"
  },
  {
    "text": "Services the topic of today's",
    "start": "16680",
    "end": "19109"
  },
  {
    "text": "presentation is monitoring and",
    "start": "19109",
    "end": "21060"
  },
  {
    "text": "diagnostic of dotnet applications with",
    "start": "21060",
    "end": "23910"
  },
  {
    "text": "AWS x-ray I would like to point out that",
    "start": "23910",
    "end": "27300"
  },
  {
    "text": "this presentation is not a deep dive",
    "start": "27300",
    "end": "29670"
  },
  {
    "text": "into all the features and capabilities",
    "start": "29670",
    "end": "31500"
  },
  {
    "text": "of the AWS x-ray for an extensive",
    "start": "31500",
    "end": "35040"
  },
  {
    "text": "investigation of AWS x-ray features and",
    "start": "35040",
    "end": "38010"
  },
  {
    "text": "capabilities I suggest watching the",
    "start": "38010",
    "end": "40170"
  },
  {
    "text": "correspondent sessions from rain van",
    "start": "40170",
    "end": "42379"
  },
  {
    "text": "2017 the links to which I will provide",
    "start": "42379",
    "end": "45239"
  },
  {
    "text": "at the end of the presentation today's",
    "start": "45239",
    "end": "47910"
  },
  {
    "text": "session will include a brief general",
    "start": "47910",
    "end": "50309"
  },
  {
    "text": "overview of AWS x-ray SDK we will go",
    "start": "50309",
    "end": "54300"
  },
  {
    "text": "over location and installation of SDK",
    "start": "54300",
    "end": "57270"
  },
  {
    "text": "NuGet packages key points for enabling",
    "start": "57270",
    "end": "59969"
  },
  {
    "text": "the application to take advantage of AWS",
    "start": "59969",
    "end": "62670"
  },
  {
    "text": "x-ray service and review the specific",
    "start": "62670",
    "end": "65010"
  },
  {
    "text": "steps needed to monitor dotnet",
    "start": "65010",
    "end": "66900"
  },
  {
    "text": "application requests and point to the",
    "start": "66900",
    "end": "69450"
  },
  {
    "text": "location of extensive information on the",
    "start": "69450",
    "end": "72150"
  },
  {
    "text": "x-ray service I will show you how easy",
    "start": "72150",
    "end": "74880"
  },
  {
    "text": "it is to enable your custom asp.net",
    "start": "74880",
    "end": "77070"
  },
  {
    "text": "application for x-rays monitoring we",
    "start": "77070",
    "end": "79650"
  },
  {
    "text": "will walk for a sample dotnet",
    "start": "79650",
    "end": "81450"
  },
  {
    "text": "application and identify the basic steps",
    "start": "81450",
    "end": "84119"
  },
  {
    "text": "that are required to enable it to",
    "start": "84119",
    "end": "86670"
  },
  {
    "text": "January traces in the AWS x-ray service",
    "start": "86670",
    "end": "90450"
  },
  {
    "text": "as you're probably aware x-ray allows",
    "start": "90450",
    "end": "93540"
  },
  {
    "text": "developers to analyze distributed",
    "start": "93540",
    "end": "95850"
  },
  {
    "text": "applications and helps troubleshoot",
    "start": "95850",
    "end": "97920"
  },
  {
    "text": "issues with application its underlying",
    "start": "97920",
    "end": "100200"
  },
  {
    "text": "services and performance AWS x-ray",
    "start": "100200",
    "end": "103200"
  },
  {
    "text": "supports a number of development",
    "start": "103200",
    "end": "105060"
  },
  {
    "text": "frameworks such as java.net dotnet core",
    "start": "105060",
    "end": "108570"
  },
  {
    "text": "2.0 Python and node.js it has an ability",
    "start": "108570",
    "end": "112259"
  },
  {
    "text": "to generate traces for AWS services as",
    "start": "112259",
    "end": "115200"
  },
  {
    "text": "well as for the request to non AWS",
    "start": "115200",
    "end": "117689"
  },
  {
    "text": "services over HTTP and HTTPS it can also",
    "start": "117689",
    "end": "120960"
  },
  {
    "text": "monitor requests to various AWS database",
    "start": "120960",
    "end": "123899"
  },
  {
    "text": "services such as dynamic DB and RDS AWS",
    "start": "123899",
    "end": "128700"
  },
  {
    "text": "x-ray SDK for dotnet has been around for",
    "start": "128700",
    "end": "131099"
  },
  {
    "text": "a while",
    "start": "131099",
    "end": "131510"
  },
  {
    "text": "however in new version 2",
    "start": "131510",
    "end": "133630"
  },
  {
    "text": "zero has been introduced in the recent",
    "start": "133630",
    "end": "135790"
  },
  {
    "text": "weeks this version is available as a",
    "start": "135790",
    "end": "138280"
  },
  {
    "text": "beta and has been released to the github",
    "start": "138280",
    "end": "140590"
  },
  {
    "text": "version 2.0 not only supports a legacy",
    "start": "140590",
    "end": "143860"
  },
  {
    "text": "dotnet frameworks but also enables",
    "start": "143860",
    "end": "145990"
  },
  {
    "text": "support for dotnet core 2.0 as well as a",
    "start": "145990",
    "end": "148990"
  },
  {
    "text": "SS Lambda support so let's take a look",
    "start": "148990",
    "end": "152140"
  },
  {
    "text": "at sample asp.net application okay so",
    "start": "152140",
    "end": "156580"
  },
  {
    "text": "here we have a sample asp.net",
    "start": "156580",
    "end": "159760"
  },
  {
    "text": "application which I opened in Visual",
    "start": "159760",
    "end": "162070"
  },
  {
    "text": "Studio 2017 let's examine what NuGet",
    "start": "162070",
    "end": "165130"
  },
  {
    "text": "packages are installed here so if I go",
    "start": "165130",
    "end": "167410"
  },
  {
    "text": "to manage NuGet packages you can see",
    "start": "167410",
    "end": "172390"
  },
  {
    "text": "that I have AWS SDK that core and AWS",
    "start": "172390",
    "end": "176470"
  },
  {
    "text": "SDK DynamoDB NuGet package is installed",
    "start": "176470",
    "end": "179410"
  },
  {
    "text": "it simply stores the data in dynamo DB",
    "start": "179410",
    "end": "182590"
  },
  {
    "text": "and queries AWS rjs service for data the",
    "start": "182590",
    "end": "186130"
  },
  {
    "text": "products controller module defines a few",
    "start": "186130",
    "end": "190000"
  },
  {
    "text": "functions which are used by this",
    "start": "190000",
    "end": "191410"
  },
  {
    "text": "application as you can see the query",
    "start": "191410",
    "end": "194350"
  },
  {
    "text": "product function make HTTP requests and",
    "start": "194350",
    "end": "197530"
  },
  {
    "text": "query cycle are the free functions",
    "start": "197530",
    "end": "199750"
  },
  {
    "text": "defined here if we publish this",
    "start": "199750",
    "end": "201520"
  },
  {
    "text": "application to AWS elastic Beanstalk it",
    "start": "201520",
    "end": "204700"
  },
  {
    "text": "will look like this if I retrieve the",
    "start": "204700",
    "end": "206800"
  },
  {
    "text": "product from the database you can see",
    "start": "206800",
    "end": "208720"
  },
  {
    "text": "that the application responds with the",
    "start": "208720",
    "end": "211330"
  },
  {
    "text": "product displayed on the screen we can",
    "start": "211330",
    "end": "213340"
  },
  {
    "text": "do a few more queries to make sure that",
    "start": "213340",
    "end": "215860"
  },
  {
    "text": "the data is there so now let's go to AWS",
    "start": "215860",
    "end": "220180"
  },
  {
    "text": "console and take a look at the x-ray",
    "start": "220180",
    "end": "222490"
  },
  {
    "text": "traces so as you can see we currently do",
    "start": "222490",
    "end": "228100"
  },
  {
    "text": "not have any service map or traces",
    "start": "228100",
    "end": "230530"
  },
  {
    "text": "generated by this application now let's",
    "start": "230530",
    "end": "233200"
  },
  {
    "text": "take a look at the same application",
    "start": "233200",
    "end": "235000"
  },
  {
    "text": "which has been instrumented for AWS",
    "start": "235000",
    "end": "238660"
  },
  {
    "text": "x-ray first of all we have additional",
    "start": "238660",
    "end": "243910"
  },
  {
    "text": "NuGet packages installed here which are",
    "start": "243910",
    "end": "246910"
  },
  {
    "text": "specifically related to AWS x-ray and",
    "start": "246910",
    "end": "250440"
  },
  {
    "text": "AWS x-ray SDK so those are AWS x-ray",
    "start": "250440",
    "end": "255130"
  },
  {
    "text": "recorded at core AWS extra core handlers",
    "start": "255130",
    "end": "258630"
  },
  {
    "text": "asp.net and SDK there are few AWS x-ray",
    "start": "258630",
    "end": "263979"
  },
  {
    "text": "related packages part of this SDK",
    "start": "263979",
    "end": "266470"
  },
  {
    "text": "you can find them if you browse it and",
    "start": "266470",
    "end": "269230"
  },
  {
    "text": "make a filter on x-ray as you can see",
    "start": "269230",
    "end": "273550"
  },
  {
    "text": "this is the list of they're all",
    "start": "273550",
    "end": "274780"
  },
  {
    "text": "available AWS x-ray SDK you'll get",
    "start": "274780",
    "end": "280150"
  },
  {
    "text": "packages it's important to remember that",
    "start": "280150",
    "end": "282580"
  },
  {
    "text": "since this SDK is currently in beta you",
    "start": "282580",
    "end": "286300"
  },
  {
    "text": "have to check the box include",
    "start": "286300",
    "end": "287770"
  },
  {
    "text": "pre-release to make sure that you can",
    "start": "287770",
    "end": "290170"
  },
  {
    "text": "see those packages the next step will be",
    "start": "290170",
    "end": "292480"
  },
  {
    "text": "to register x-ray for the object of",
    "start": "292480",
    "end": "295540"
  },
  {
    "text": "system that web that HTTP application",
    "start": "295540",
    "end": "298720"
  },
  {
    "text": "class in the init method of global sx",
    "start": "298720",
    "end": "301690"
  },
  {
    "text": "file in global sx file you can see that",
    "start": "301690",
    "end": "305950"
  },
  {
    "text": "I have a SS x-ray register with the",
    "start": "305950",
    "end": "309820"
  },
  {
    "text": "default application name is p.net test",
    "start": "309820",
    "end": "312940"
  },
  {
    "text": "keep in mind that this name is the name",
    "start": "312940",
    "end": "316450"
  },
  {
    "text": "which will show up in AWS x-ray console",
    "start": "316450",
    "end": "319870"
  },
  {
    "text": "you can use any name you want to",
    "start": "319870",
    "end": "322240"
  },
  {
    "text": "uniquely identify your application the",
    "start": "322240",
    "end": "324820"
  },
  {
    "text": "next thing we need to do is to configure",
    "start": "324820",
    "end": "328000"
  },
  {
    "text": "the web config file over here we're",
    "start": "328000",
    "end": "333130"
  },
  {
    "text": "registering the AWS x-ray plugging in",
    "start": "333130",
    "end": "338290"
  },
  {
    "text": "this case it's going to be easier to",
    "start": "338290",
    "end": "339669"
  },
  {
    "text": "plug in because the application will",
    "start": "339669",
    "end": "342040"
  },
  {
    "text": "work on elastic Beanstalk so it will",
    "start": "342040",
    "end": "345100"
  },
  {
    "text": "utilize this easy to plug in interesting",
    "start": "345100",
    "end": "347680"
  },
  {
    "text": "point here is that if disabled x-rays",
    "start": "347680",
    "end": "349750"
  },
  {
    "text": "training key is set to false the x-rays",
    "start": "349750",
    "end": "352720"
  },
  {
    "text": "pressing in enable if you want to",
    "start": "352720",
    "end": "354910"
  },
  {
    "text": "temporarily stop X ray tracing you can",
    "start": "354910",
    "end": "358030"
  },
  {
    "text": "set this value to true now let's take a",
    "start": "358030",
    "end": "360669"
  },
  {
    "text": "look at products controller you can see",
    "start": "360669",
    "end": "363010"
  },
  {
    "text": "that the functions which were shown",
    "start": "363010",
    "end": "365200"
  },
  {
    "text": "originally have been slightly modified",
    "start": "365200",
    "end": "367960"
  },
  {
    "text": "with the numeric methods from AWS SDK in",
    "start": "367960",
    "end": "371650"
  },
  {
    "text": "particular we now say have AWS x-ray",
    "start": "371650",
    "end": "375760"
  },
  {
    "text": "recorder instance traced method which",
    "start": "375760",
    "end": "378070"
  },
  {
    "text": "allows us to trace the request to the",
    "start": "378070",
    "end": "382240"
  },
  {
    "text": "DynamoDB database as well as outgoing",
    "start": "382240",
    "end": "385740"
  },
  {
    "text": "HTTP requests and sickle queries for",
    "start": "385740",
    "end": "389020"
  },
  {
    "text": "outgoing HTTP requests we are utilizing",
    "start": "389020",
    "end": "391930"
  },
  {
    "text": "the get response traced method to query",
    "start": "391930",
    "end": "395050"
  },
  {
    "text": "the sequel server we are using a wrapper",
    "start": "395050",
    "end": "397900"
  },
  {
    "text": "class which is called traceable see",
    "start": "397900",
    "end": "400550"
  },
  {
    "text": "command this traceable cycle command can",
    "start": "400550",
    "end": "402949"
  },
  {
    "text": "be utilized interchangeably with sickle",
    "start": "402949",
    "end": "406009"
  },
  {
    "text": "command and allows you to trace the",
    "start": "406009",
    "end": "408590"
  },
  {
    "text": "request to any sickle server database",
    "start": "408590",
    "end": "411110"
  },
  {
    "text": "after the application is published to",
    "start": "411110",
    "end": "413090"
  },
  {
    "text": "elastic beanstalk it looks exactly like",
    "start": "413090",
    "end": "415159"
  },
  {
    "text": "the non instrumented application which",
    "start": "415159",
    "end": "417530"
  },
  {
    "text": "has shown you before if we make a few",
    "start": "417530",
    "end": "419599"
  },
  {
    "text": "queries for the products inside the",
    "start": "419599",
    "end": "421909"
  },
  {
    "text": "database we will generate a few traces",
    "start": "421909",
    "end": "425030"
  },
  {
    "text": "which I'll show you in an xray console",
    "start": "425030",
    "end": "427370"
  },
  {
    "text": "in a second if we open up the AWS x-ray",
    "start": "427370",
    "end": "431330"
  },
  {
    "text": "console we can see that our application",
    "start": "431330",
    "end": "433220"
  },
  {
    "text": "currently has generated a few traces if",
    "start": "433220",
    "end": "436580"
  },
  {
    "text": "we take a look at the traces you can see",
    "start": "436580",
    "end": "438650"
  },
  {
    "text": "that we are monitoring the request to",
    "start": "438650",
    "end": "442159"
  },
  {
    "text": "the HTTP as well as sequel server for",
    "start": "442159",
    "end": "447199"
  },
  {
    "text": "good go to the trace details you can see",
    "start": "447199",
    "end": "450050"
  },
  {
    "text": "the request which were generated by my",
    "start": "450050",
    "end": "452090"
  },
  {
    "text": "application so there isn't",
    "start": "452090",
    "end": "454659"
  },
  {
    "text": "304 millisecond time which was required",
    "start": "454659",
    "end": "458810"
  },
  {
    "text": "to issue the asp.net test which includes",
    "start": "458810",
    "end": "464630"
  },
  {
    "text": "a query product DynamoDB and outgoing",
    "start": "464630",
    "end": "468289"
  },
  {
    "text": "HTTP request separately we have a sub",
    "start": "468289",
    "end": "471710"
  },
  {
    "text": "trace to query SQL which took one",
    "start": "471710",
    "end": "475009"
  },
  {
    "text": "millisecond we can take a look at the",
    "start": "475009",
    "end": "477080"
  },
  {
    "text": "raw data which is presented in the JSON",
    "start": "477080",
    "end": "479120"
  },
  {
    "text": "format as well as a timeline with all",
    "start": "479120",
    "end": "483800"
  },
  {
    "text": "the dependencies we can drill down to",
    "start": "483800",
    "end": "485810"
  },
  {
    "text": "individual requests for additional",
    "start": "485810",
    "end": "488150"
  },
  {
    "text": "information as you can see we",
    "start": "488150",
    "end": "490610"
  },
  {
    "text": "successfully instrumented the",
    "start": "490610",
    "end": "492169"
  },
  {
    "text": "application for AWS x-ray and we can see",
    "start": "492169",
    "end": "495949"
  },
  {
    "text": "the traces in AWS x-ray console and",
    "start": "495949",
    "end": "499039"
  },
  {
    "text": "finally as promised where we can find",
    "start": "499039",
    "end": "502130"
  },
  {
    "text": "more information I would suggest",
    "start": "502130",
    "end": "505900"
  },
  {
    "text": "referring to reinvent 2017 sessions",
    "start": "505900",
    "end": "508969"
  },
  {
    "text": "which I put on the screen the",
    "start": "508969",
    "end": "510979"
  },
  {
    "text": "documentation for AWS x-ray can be found",
    "start": "510979",
    "end": "514370"
  },
  {
    "text": "at this link it's also very important",
    "start": "514370",
    "end": "517820"
  },
  {
    "text": "that you know about the location of the",
    "start": "517820",
    "end": "520130"
  },
  {
    "text": "x-ray that net SDK on github as well as",
    "start": "520130",
    "end": "524600"
  },
  {
    "text": "the developer blog which covers all the",
    "start": "524600",
    "end": "528260"
  },
  {
    "text": "most important functionality of AWS",
    "start": "528260",
    "end": "530750"
  },
  {
    "text": "x-ray",
    "start": "530750",
    "end": "532580"
  },
  {
    "text": "that concludes our today's presentation",
    "start": "532580",
    "end": "534590"
  },
  {
    "text": "about AWS x-ray SDK thank you for",
    "start": "534590",
    "end": "537890"
  },
  {
    "text": "watching",
    "start": "537890",
    "end": "540100"
  },
  {
    "text": "[Music]",
    "start": "540100",
    "end": "549589"
  }
]