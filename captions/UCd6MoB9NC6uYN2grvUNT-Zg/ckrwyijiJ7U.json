[
  {
    "start": "0",
    "end": "85000"
  },
  {
    "text": "Welcome to another episode of 'Back to Basics'.",
    "start": "6967",
    "end": "9273"
  },
  {
    "text": "I'm Aaron Lima.",
    "start": "9273",
    "end": "10261"
  },
  {
    "text": "And today we're going to discuss\nsome recommended ways",
    "start": "10261",
    "end": "12282"
  },
  {
    "text": "to configure EC2 Instances after deployment.",
    "start": "12282",
    "end": "14766"
  },
  {
    "text": "In order to be useful,\na screwdriver needs a screw.",
    "start": "14766",
    "end": "17814"
  },
  {
    "text": "The same can be said of an EC2 Instance.",
    "start": "17814",
    "end": "20248"
  },
  {
    "text": "It needs an application to be installed,\nto be truly useful.",
    "start": "20248",
    "end": "23120"
  },
  {
    "text": "Maybe you need to install a COTS-based application,",
    "start": "23608",
    "end": "26105"
  },
  {
    "text": "which is a consumer off the shelf application\nto your EC2 Instance,",
    "start": "26105",
    "end": "29567"
  },
  {
    "text": "or you need to install and configure software\nsuch as NGINX or IIS.",
    "start": "29567",
    "end": "33513"
  },
  {
    "text": "Now you can do all these task manually.",
    "start": "33513",
    "end": "36446"
  },
  {
    "text": "But in the cloud,\nyou want to get away from manual tasks",
    "start": "36651",
    "end": "39414"
  },
  {
    "text": "as much as possible\nand have a fully automated deployment.",
    "start": "39414",
    "end": "42060"
  },
  {
    "text": "How do you perform a fully automated deployment in AWS?",
    "start": "42060",
    "end": "45143"
  },
  {
    "text": "While by using tools such as AWS CloudFormation, ",
    "start": "45143",
    "end": "48054"
  },
  {
    "text": "you can not only ensure repeatable deployments,",
    "start": "48054",
    "end": "51227"
  },
  {
    "text": "but you can also have a way to document\nand track changes over time.",
    "start": "51227",
    "end": "54939"
  },
  {
    "text": "While CloudFormation \nexcels at deploying AWS resources",
    "start": "55360",
    "end": "58705"
  },
  {
    "text": "and can perform configuration management,",
    "start": "58705",
    "end": "60991"
  },
  {
    "text": "it is recommended\nto use a tool purpose built for the job,",
    "start": "60991",
    "end": "64338"
  },
  {
    "text": "which is AWS Systems Manager. ",
    "start": "64339",
    "end": "66196"
  },
  {
    "text": "And in this episode, we're going to discuss\nhow to use AWS CloudFormation",
    "start": "66196",
    "end": "69916"
  },
  {
    "text": "to deploy an EC2 Instance,",
    "start": "69916",
    "end": "71500"
  },
  {
    "text": "and then use AWS Systems Manager\nto perform configuration management on that instance.",
    "start": "71500",
    "end": "77097"
  },
  {
    "text": "We'll also walk through some patterns\nof using auto-scaling groups",
    "start": "77097",
    "end": "80263"
  },
  {
    "text": "and AWS Systems Manager together ",
    "start": "80263",
    "end": "82250"
  },
  {
    "text": "to perform configuration management.",
    "start": "82250",
    "end": "84055"
  },
  {
    "text": "Let's go ahead and dive in.",
    "start": "84055",
    "end": "85234"
  },
  {
    "start": "85000",
    "end": "187000"
  },
  {
    "text": "To define infrastructure\nwith AWS CloudFormation,",
    "start": "86128",
    "end": "88390"
  },
  {
    "text": "you create a template,\neither written in JSON or YAML.",
    "start": "88390",
    "end": "91138"
  },
  {
    "text": "You could also use \nthe AWS Cloud Development Kit,",
    "start": "91138",
    "end": "93830"
  },
  {
    "text": "which will generate a template for you.",
    "start": "93830",
    "end": "95553"
  },
  {
    "text": "This allows you to use\nan imperative programming language,",
    "start": "95553",
    "end": "98145"
  },
  {
    "text": "you are comfortable with like TypeScript,\nPython, Go, and others.",
    "start": "98145",
    "end": "101928"
  },
  {
    "text": "However, when the template is submitted\nto the CloudFormation Service, ",
    "start": "101929",
    "end": "105780"
  },
  {
    "text": "it creates a stack.",
    "start": "105780",
    "end": "107115"
  },
  {
    "text": "A stack is a unit of related AWS resources.",
    "start": "107115",
    "end": "110293"
  },
  {
    "text": "If that stack includes an EC2 Instance,",
    "start": "110293",
    "end": "113030"
  },
  {
    "text": "you most likely need to install software\nor configure settings.",
    "start": "113030",
    "end": "116144"
  },
  {
    "text": "If this is the case within the stack,\nyou can also create an AWS Systems Manager",
    "start": "116518",
    "end": "120903"
  },
  {
    "text": "State Manager Association. ",
    "start": "120903",
    "end": "122431"
  },
  {
    "text": "When you create a State Manager Association,",
    "start": "122849",
    "end": "124849"
  },
  {
    "text": "you select a document,\nSSM has many documents that can apply",
    "start": "124849",
    "end": "129069"
  },
  {
    "text": "things such as Ansible playbooks, ",
    "start": "129070",
    "end": "130802"
  },
  {
    "text": "or run PowerShell scripts\nor bash scripts.",
    "start": "130802",
    "end": "133716"
  },
  {
    "text": "Once an EC2 Instance \nwith an SSM agent boots up",
    "start": "133716",
    "end": "136738"
  },
  {
    "text": "and checks in with the SSM service,",
    "start": "136738",
    "end": "138700"
  },
  {
    "text": "it first asks \nif there are any State Manager Associations to apply.",
    "start": "138700",
    "end": "142487"
  },
  {
    "text": "This makes for a good mechanism\nto perform bootstrap actions.",
    "start": "142977",
    "end": "146306"
  },
  {
    "text": "Anything you might perform with EC2 user data",
    "start": "146603",
    "end": "149167"
  },
  {
    "text": "you can use SSM for,\nprovided the instance includes the SSM agent.",
    "start": "149167",
    "end": "153465"
  },
  {
    "text": "When creating a State Manager Association,",
    "start": "153993",
    "end": "155872"
  },
  {
    "text": "you can set it to have CloudFormation to wait",
    "start": "155872",
    "end": "158125"
  },
  {
    "text": "until the configuration completes successfully.",
    "start": "158125",
    "end": "160427"
  },
  {
    "text": "In doing so,\nwhen the stack is created successfully,",
    "start": "160894",
    "end": "163441"
  },
  {
    "text": "you'll know that your instances\nhave been configured as well.",
    "start": "163441",
    "end": "165853"
  },
  {
    "text": "Now, a benefit of this pattern\nis being able to push logs centrally",
    "start": "166362",
    "end": "169757"
  },
  {
    "text": "for troubleshooting purposes.",
    "start": "169757",
    "end": "171226"
  },
  {
    "text": "The SSM agent can handle\npushing the standard output",
    "start": "171528",
    "end": "174212"
  },
  {
    "text": "of our config task to an Amazon S3 bucket.",
    "start": "174212",
    "end": "176999"
  },
  {
    "text": "So if your configuration fails,",
    "start": "177466",
    "end": "178931"
  },
  {
    "text": "you don't need to SSH\nor RDP to the instances to collect logs",
    "start": "178931",
    "end": "182378"
  },
  {
    "text": "or add additional lines of code\nto push logs somewhere.",
    "start": "182378",
    "end": "185084"
  },
  {
    "text": "The agent will handle that for you.",
    "start": "185084",
    "end": "187078"
  },
  {
    "start": "187000",
    "end": "215000"
  },
  {
    "text": "Now, just a word on your scripts.",
    "start": "187491",
    "end": "189715"
  },
  {
    "text": "To take advantage of State Manager,\nyou should have item potent scripts,",
    "start": "189715",
    "end": "193343"
  },
  {
    "text": "meaning that they can be re-run\nand check configuration",
    "start": "193343",
    "end": "196787"
  },
  {
    "text": "and only act when configuration has drifted.",
    "start": "196787",
    "end": "199864"
  },
  {
    "text": "This is where config tools\nlike PowerShell DCE, Ansible,",
    "start": "199864",
    "end": "203911"
  },
  {
    "text": "Chef, or Puppet would come.",
    "start": "203911",
    "end": "206034"
  },
  {
    "text": "And SSM has documents\nthat support all of these tools.",
    "start": "206034",
    "end": "209394"
  },
  {
    "text": "Now our first pattern we talk through using SSM\nto configure an EC2 Instance,",
    "start": "209394",
    "end": "213970"
  },
  {
    "text": "deploy by CloudFormation.",
    "start": "213970",
    "end": "215353"
  },
  {
    "start": "215000",
    "end": "249000"
  },
  {
    "text": "But let's say our stack creates\nan auto-scaling group.",
    "start": "216191",
    "end": "218773"
  },
  {
    "text": "Well, state manager allows us\nto target instances specifically",
    "start": "219236",
    "end": "222941"
  },
  {
    "text": "or by tags or resource groups.",
    "start": "222941",
    "end": "225252"
  },
  {
    "text": "Remember that when the SSM agent\nregisters itself to the service,",
    "start": "225446",
    "end": "228650"
  },
  {
    "text": "it asks if there are any State Manager Associations\nto apply.",
    "start": "228650",
    "end": "231888"
  },
  {
    "text": "So if we create our State Manager Association\nto target based on a tag,",
    "start": "232121",
    "end": "236734"
  },
  {
    "text": "we can also configure\nan EC2 Instance that is deployed",
    "start": "236734",
    "end": "239803"
  },
  {
    "text": "in an auto-scaling group,",
    "start": "239803",
    "end": "241204"
  },
  {
    "text": "and it will be configured as it boots up. ",
    "start": "241204",
    "end": "243500"
  },
  {
    "text": "Traffic will be sent to the EC2 Instance",
    "start": "243634",
    "end": "245816"
  },
  {
    "text": "once it reports as healthy\nto the auto-scaling group.",
    "start": "245816",
    "end": "248545"
  },
  {
    "start": "249000",
    "end": "280000"
  },
  {
    "text": "In this episode, we explored\nhow we can configure EC2 Instances",
    "start": "249549",
    "end": "252978"
  },
  {
    "text": "deployed by AWS CloudFormation",
    "start": "252978",
    "end": "254952"
  },
  {
    "text": "or auto-scaling groups\nwith State Manager Association. ",
    "start": "254952",
    "end": "258488"
  },
  {
    "text": "We also highlighted the importance\nof using Idempotent scripts and tools and methods",
    "start": "258489",
    "end": "263292"
  },
  {
    "text": "when using this pattern.",
    "start": "263292",
    "end": "264934"
  },
  {
    "text": "This pattern can be used when installing web servers\nor consumer off the shelf applications.",
    "start": "265250",
    "end": "270895"
  },
  {
    "text": "Please check out the links below\nfor more details.",
    "start": "270895",
    "end": "273827"
  },
  {
    "text": "See you next time.",
    "start": "273827",
    "end": "274954"
  }
]