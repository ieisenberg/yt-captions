[
  {
    "text": "[Music]",
    "start": "420",
    "end": "11740"
  },
  {
    "text": "hello i'm dola a cloud support engineer",
    "start": "12160",
    "end": "15040"
  },
  {
    "text": "here at the aws office in northern",
    "start": "15040",
    "end": "17520"
  },
  {
    "text": "virginia",
    "start": "17520",
    "end": "18720"
  },
  {
    "text": "today i am going to show you how users",
    "start": "18720",
    "end": "21039"
  },
  {
    "text": "can troubleshoot dns failures with",
    "start": "21039",
    "end": "23519"
  },
  {
    "text": "amazon eks let's get started",
    "start": "23519",
    "end": "27039"
  },
  {
    "text": "pods running inside the amazon eks",
    "start": "27039",
    "end": "29519"
  },
  {
    "text": "cluster",
    "start": "29519",
    "end": "30400"
  },
  {
    "text": "use the core dns service",
    "start": "30400",
    "end": "32480"
  },
  {
    "text": "cluster ip as the default name server",
    "start": "32480",
    "end": "36079"
  },
  {
    "text": "for querying internal and external dns",
    "start": "36079",
    "end": "38480"
  },
  {
    "text": "records",
    "start": "38480",
    "end": "39680"
  },
  {
    "text": "applications can fail dns resolutions if",
    "start": "39680",
    "end": "42640"
  },
  {
    "text": "there are any issues with the codiness",
    "start": "42640",
    "end": "44960"
  },
  {
    "text": "pods the service configuration or",
    "start": "44960",
    "end": "47760"
  },
  {
    "text": "connectivity",
    "start": "47760",
    "end": "49120"
  },
  {
    "text": "the coding spots are abstracted by a",
    "start": "49120",
    "end": "52079"
  },
  {
    "text": "service object called coupe dns to",
    "start": "52079",
    "end": "55120"
  },
  {
    "text": "troubleshoot issues with your core dns",
    "start": "55120",
    "end": "58000"
  },
  {
    "text": "spots you must verify that all the",
    "start": "58000",
    "end": "60879"
  },
  {
    "text": "components of the coupe dns service are",
    "start": "60879",
    "end": "63440"
  },
  {
    "text": "working these components include",
    "start": "63440",
    "end": "67200"
  },
  {
    "text": "but are not limited to service endpoint",
    "start": "67200",
    "end": "70240"
  },
  {
    "text": "options and iptable rules from your eks",
    "start": "70240",
    "end": "73840"
  },
  {
    "text": "workstation run the following commands",
    "start": "73840",
    "end": "76240"
  },
  {
    "text": "and retrieve cluster id",
    "start": "76240",
    "end": "79119"
  },
  {
    "text": "we will see cluster ip to be",
    "start": "79119",
    "end": "82000"
  },
  {
    "text": "10.100.0.10",
    "start": "82000",
    "end": "84560"
  },
  {
    "text": "or 172.20.0.10",
    "start": "84560",
    "end": "88118"
  },
  {
    "text": "to verify endpoints which are exposed by",
    "start": "88640",
    "end": "91600"
  },
  {
    "text": "our service group dns",
    "start": "91600",
    "end": "93680"
  },
  {
    "text": "we need to run the command",
    "start": "93680",
    "end": "96079"
  },
  {
    "text": "please note that if the endpoints list",
    "start": "96079",
    "end": "98400"
  },
  {
    "text": "is empty we need to check the port",
    "start": "98400",
    "end": "100560"
  },
  {
    "text": "status of the codeinspots",
    "start": "100560",
    "end": "103040"
  },
  {
    "text": "from the above command",
    "start": "103040",
    "end": "104720"
  },
  {
    "text": "we were able to identify the endpoints",
    "start": "104720",
    "end": "107680"
  },
  {
    "text": "which are being exposed via service",
    "start": "107680",
    "end": "110880"
  },
  {
    "text": "coupe dns",
    "start": "110880",
    "end": "112560"
  },
  {
    "text": "as we can see in the current output ip",
    "start": "112560",
    "end": "115360"
  },
  {
    "text": "addresses of the core dns ports match",
    "start": "115360",
    "end": "118079"
  },
  {
    "text": "the end points",
    "start": "118079",
    "end": "120240"
  },
  {
    "text": "this confirms that they are the ones",
    "start": "120240",
    "end": "122399"
  },
  {
    "text": "being exposed via service coupe dns",
    "start": "122399",
    "end": "126240"
  },
  {
    "text": "to verify",
    "start": "126240",
    "end": "127600"
  },
  {
    "text": "there is any network constraint we will",
    "start": "127600",
    "end": "129920"
  },
  {
    "text": "need to check security groups attached",
    "start": "129920",
    "end": "132640"
  },
  {
    "text": "to the worker nodes and knackers",
    "start": "132640",
    "end": "134879"
  },
  {
    "text": "attached to the subnets",
    "start": "134879",
    "end": "137920"
  },
  {
    "text": "verify cooper proxy is working as",
    "start": "138560",
    "end": "141920"
  },
  {
    "text": "expected and is able to access the api",
    "start": "141920",
    "end": "145440"
  },
  {
    "text": "server to check logs of goog proxy run",
    "start": "145440",
    "end": "149040"
  },
  {
    "text": "the command",
    "start": "149040",
    "end": "151120"
  },
  {
    "text": "note",
    "start": "151120",
    "end": "152160"
  },
  {
    "text": "the coup proxy gets the endpoint",
    "start": "152160",
    "end": "155599"
  },
  {
    "text": "from control plane and creates the",
    "start": "155599",
    "end": "158400"
  },
  {
    "text": "iptable rules on every worker node to",
    "start": "158400",
    "end": "161440"
  },
  {
    "text": "troubleshoot dns issue if application",
    "start": "161440",
    "end": "164640"
  },
  {
    "text": "port doesn't support shell binary you",
    "start": "164640",
    "end": "167440"
  },
  {
    "text": "will see the following message",
    "start": "167440",
    "end": "169680"
  },
  {
    "text": "for debugging we can either update the",
    "start": "169680",
    "end": "172879"
  },
  {
    "text": "image used in deployments",
    "start": "172879",
    "end": "175360"
  },
  {
    "text": "or pods",
    "start": "175360",
    "end": "176720"
  },
  {
    "text": "manifest",
    "start": "176720",
    "end": "177920"
  },
  {
    "text": "or create a new deployment using another",
    "start": "177920",
    "end": "181200"
  },
  {
    "text": "image",
    "start": "181200",
    "end": "182480"
  },
  {
    "text": "such as the busy box image",
    "start": "182480",
    "end": "185440"
  },
  {
    "text": "to verify that the cluster ip of the",
    "start": "185440",
    "end": "188319"
  },
  {
    "text": "group dns service is in your pods",
    "start": "188319",
    "end": "191760"
  },
  {
    "text": "slash etc",
    "start": "191760",
    "end": "193360"
  },
  {
    "text": "resolve dot conf",
    "start": "193360",
    "end": "195519"
  },
  {
    "text": "run the following command in the shell",
    "start": "195519",
    "end": "198159"
  },
  {
    "text": "inside of the port",
    "start": "198159",
    "end": "200480"
  },
  {
    "text": "the following example resolve dot com",
    "start": "200480",
    "end": "203200"
  },
  {
    "text": "shows a port that's configured to point",
    "start": "203200",
    "end": "205840"
  },
  {
    "text": "at 10.100.0.10",
    "start": "205840",
    "end": "209400"
  },
  {
    "text": "for dns requests the ip should match the",
    "start": "210159",
    "end": "214000"
  },
  {
    "text": "cluster ip of your coupe dns service",
    "start": "214000",
    "end": "218720"
  },
  {
    "text": "to verify that your port can resolve an",
    "start": "218720",
    "end": "221760"
  },
  {
    "text": "internal domain using the default",
    "start": "221760",
    "end": "224080"
  },
  {
    "text": "cluster ip run the following command in",
    "start": "224080",
    "end": "227040"
  },
  {
    "text": "the shell inside the port",
    "start": "227040",
    "end": "229519"
  },
  {
    "text": "to verify that your port can resolve an",
    "start": "229519",
    "end": "232239"
  },
  {
    "text": "external domain using the default",
    "start": "232239",
    "end": "234560"
  },
  {
    "text": "cluster ip",
    "start": "234560",
    "end": "236000"
  },
  {
    "text": "run the following command in the shell",
    "start": "236000",
    "end": "238799"
  },
  {
    "text": "inside the pot",
    "start": "238799",
    "end": "241599"
  },
  {
    "text": "to verify that your pot can resolve",
    "start": "243040",
    "end": "245519"
  },
  {
    "text": "using the ip address of code dns ports",
    "start": "245519",
    "end": "247680"
  },
  {
    "text": "directly",
    "start": "247680",
    "end": "248799"
  },
  {
    "text": "run the following commands in the shell",
    "start": "248799",
    "end": "251280"
  },
  {
    "text": "inside the pod",
    "start": "251280",
    "end": "252879"
  },
  {
    "text": "replace the co-dns pod ip with one of",
    "start": "252879",
    "end": "256720"
  },
  {
    "text": "the endpoints eyepiece that we got by",
    "start": "256720",
    "end": "260079"
  },
  {
    "text": "running coupe ctl get endpoints command",
    "start": "260079",
    "end": "263040"
  },
  {
    "text": "that we used earlier",
    "start": "263040",
    "end": "264639"
  },
  {
    "text": "get more detailed logs from codiness",
    "start": "264639",
    "end": "267600"
  },
  {
    "text": "pods for debugging",
    "start": "267600",
    "end": "269840"
  },
  {
    "text": "to enable the debug log of codiness pods",
    "start": "269840",
    "end": "273600"
  },
  {
    "text": "and add the log plugin",
    "start": "273600",
    "end": "276400"
  },
  {
    "text": "to the code dns config map run the",
    "start": "276400",
    "end": "278880"
  },
  {
    "text": "following command",
    "start": "278880",
    "end": "280479"
  },
  {
    "text": "in the editor screen that appears in the",
    "start": "280479",
    "end": "282960"
  },
  {
    "text": "output",
    "start": "282960",
    "end": "284000"
  },
  {
    "text": "add the log string",
    "start": "284000",
    "end": "286800"
  },
  {
    "text": "see the following example",
    "start": "286800",
    "end": "289600"
  },
  {
    "text": "you can restart the port one by one to",
    "start": "289600",
    "end": "292160"
  },
  {
    "text": "apply the changes immediately to check",
    "start": "292160",
    "end": "294960"
  },
  {
    "text": "if kodians logs are failing or getting",
    "start": "294960",
    "end": "298080"
  },
  {
    "text": "any hits",
    "start": "298080",
    "end": "299280"
  },
  {
    "text": "from the application port",
    "start": "299280",
    "end": "301440"
  },
  {
    "text": "run the following command",
    "start": "301440",
    "end": "303680"
  },
  {
    "text": "search",
    "start": "303680",
    "end": "304639"
  },
  {
    "text": "and end dot combinations please note",
    "start": "304639",
    "end": "307680"
  },
  {
    "text": "that the n dot value is the number of",
    "start": "307680",
    "end": "310960"
  },
  {
    "text": "dots that must appear",
    "start": "310960",
    "end": "313600"
  },
  {
    "text": "in the name",
    "start": "313600",
    "end": "314720"
  },
  {
    "text": "to resolve a query before an initial",
    "start": "314720",
    "end": "317840"
  },
  {
    "text": "absolute query is made",
    "start": "317840",
    "end": "319840"
  },
  {
    "text": "for example you can set the end dots",
    "start": "319840",
    "end": "322560"
  },
  {
    "text": "option to the default value 5",
    "start": "322560",
    "end": "326240"
  },
  {
    "text": "in a domain name",
    "start": "326240",
    "end": "327919"
  },
  {
    "text": "that is not fully qualified",
    "start": "327919",
    "end": "330720"
  },
  {
    "text": "then all external domains that don't",
    "start": "330720",
    "end": "333840"
  },
  {
    "text": "fall under the internal domain",
    "start": "333840",
    "end": "335680"
  },
  {
    "text": "cluster.local",
    "start": "335680",
    "end": "337360"
  },
  {
    "text": "are appended to search domains before",
    "start": "337360",
    "end": "340000"
  },
  {
    "text": "querying",
    "start": "340000",
    "end": "341600"
  },
  {
    "text": "see the following example with the slash",
    "start": "341600",
    "end": "344960"
  },
  {
    "text": "etc slash result.com setting",
    "start": "344960",
    "end": "348160"
  },
  {
    "text": "of the application pod",
    "start": "348160",
    "end": "351840"
  },
  {
    "text": "looks for five dots in the domain",
    "start": "351840",
    "end": "355039"
  },
  {
    "text": "being queried",
    "start": "355039",
    "end": "356800"
  },
  {
    "text": "if the pod makes a dns resolution call",
    "start": "356800",
    "end": "360080"
  },
  {
    "text": "for amazon.com",
    "start": "360080",
    "end": "361919"
  },
  {
    "text": "your log looks similar to the following",
    "start": "361919",
    "end": "365360"
  },
  {
    "text": "annex domain means that the domain",
    "start": "365360",
    "end": "367759"
  },
  {
    "text": "record wasn't found and no error means",
    "start": "367759",
    "end": "371280"
  },
  {
    "text": "that the domain record was found",
    "start": "371280",
    "end": "374080"
  },
  {
    "text": "every search domain is prepended with",
    "start": "374080",
    "end": "376240"
  },
  {
    "text": "amazon.com before making the final call",
    "start": "376240",
    "end": "379919"
  },
  {
    "text": "on the absolute domain at the end",
    "start": "379919",
    "end": "383280"
  },
  {
    "text": "the final domain name is appended with a",
    "start": "383280",
    "end": "386319"
  },
  {
    "text": "dot at the end which makes it fully",
    "start": "386319",
    "end": "389199"
  },
  {
    "text": "qualified domain name",
    "start": "389199",
    "end": "391039"
  },
  {
    "text": "this means that for every external",
    "start": "391039",
    "end": "393840"
  },
  {
    "text": "domain name query there could be four to",
    "start": "393840",
    "end": "397199"
  },
  {
    "text": "five additional calls which can",
    "start": "397199",
    "end": "399759"
  },
  {
    "text": "overwhelm the coding spot to resolve",
    "start": "399759",
    "end": "403440"
  },
  {
    "text": "this issue either change n dots to one",
    "start": "403440",
    "end": "407120"
  },
  {
    "text": "or append a dot at the end of the domain",
    "start": "407120",
    "end": "410479"
  },
  {
    "text": "that is queried or used",
    "start": "410479",
    "end": "414160"
  },
  {
    "text": "vpc dns resolver has a limit on how many",
    "start": "414400",
    "end": "418240"
  },
  {
    "text": "packets it can receive per network",
    "start": "418240",
    "end": "420319"
  },
  {
    "text": "interface",
    "start": "420319",
    "end": "421680"
  },
  {
    "text": "this is a hard limit which is",
    "start": "421680",
    "end": "424440"
  },
  {
    "text": "1024 packets per second",
    "start": "424440",
    "end": "427599"
  },
  {
    "text": "if more than one core dns port is on the",
    "start": "427599",
    "end": "430240"
  },
  {
    "text": "same worker node",
    "start": "430240",
    "end": "431680"
  },
  {
    "text": "then chances of hitting this limit are",
    "start": "431680",
    "end": "434880"
  },
  {
    "text": "higher for external domain queries to",
    "start": "434880",
    "end": "438080"
  },
  {
    "text": "solve this issue",
    "start": "438080",
    "end": "439520"
  },
  {
    "text": "use pod anti-affinity rules to schedule",
    "start": "439520",
    "end": "442720"
  },
  {
    "text": "coding spots on separate instances",
    "start": "442720",
    "end": "446319"
  },
  {
    "text": "add the following options to the code",
    "start": "446319",
    "end": "448800"
  },
  {
    "text": "dns deployment",
    "start": "448800",
    "end": "451199"
  },
  {
    "text": "thanks for watching and happy cloud",
    "start": "451199",
    "end": "452880"
  },
  {
    "text": "computing from all of us here at aws",
    "start": "452880",
    "end": "457350"
  },
  {
    "text": "[Music]",
    "start": "457350",
    "end": "460449"
  }
]