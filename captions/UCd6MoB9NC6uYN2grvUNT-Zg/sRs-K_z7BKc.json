[
  {
    "start": "0",
    "end": "47000"
  },
  {
    "text": "thank you all for coming out I realized that 9am on the Friday morning out for the big party is not the most attractive",
    "start": "0",
    "end": "7230"
  },
  {
    "text": "time to be up and awake and moving around hopefully you at least have some coffee or something and maybe catching up a little bit um those of you in the",
    "start": "7230",
    "end": "13920"
  },
  {
    "text": "back for me to move up I know it's a fairly small crowds feel free we can kind of get to know each other a little better my name is Evan I'm an engineer",
    "start": "13920",
    "end": "21210"
  },
  {
    "text": "at stripe I work on on infrastructure and security there I've been its stride for about three and a half years working",
    "start": "21210",
    "end": "26609"
  },
  {
    "text": "there since early 2012 and and today I'm",
    "start": "26609",
    "end": "31769"
  },
  {
    "text": "going to talk sort of about how how we think about a bit pci its stripe and about how we deal with some of the",
    "start": "31769",
    "end": "38129"
  },
  {
    "text": "challenges the come from pci without impacting our ability to kind of keep moving forward and keep rapidly",
    "start": "38129",
    "end": "43649"
  },
  {
    "text": "innovating on the product that we're building so for those of you who are not familiar with stripe or haven't run into",
    "start": "43649",
    "end": "50460"
  },
  {
    "start": "47000",
    "end": "125000"
  },
  {
    "text": "us before stripe or didn't hear Jorge zexal inch feel at andys keynote on",
    "start": "50460",
    "end": "55710"
  },
  {
    "text": "Wednesday stripe is an online payments provider if you're if you're building an online mobile application or a business",
    "start": "55710",
    "end": "62340"
  },
  {
    "text": "on the web and you want your users to be able to pay you stripe is the easiest way to make that happen we provide an API that that hundreds of thousands of",
    "start": "62340",
    "end": "69150"
  },
  {
    "text": "businesses around the world use in order to actually get paid for whatever it is",
    "start": "69150",
    "end": "74189"
  },
  {
    "text": "that they're building and stripe is primarily focused on credit card payments and debit card payments that",
    "start": "74189",
    "end": "79740"
  },
  {
    "text": "sort of been our our traditional bread and butter but we're also working with with bank transfers in Bitcoin and and",
    "start": "79740",
    "end": "85470"
  },
  {
    "text": "other new and exciting and innovative or you know questionably political payment",
    "start": "85470",
    "end": "90750"
  },
  {
    "text": "methods if you haven't you haven't run interest before we're working with everybody from the the smallest new",
    "start": "90750",
    "end": "97560"
  },
  {
    "text": "startups that you haven't heard of to some of the biggest names and type right now like Kickstarter or lift or",
    "start": "97560",
    "end": "103200"
  },
  {
    "text": "instacart to to some of some very very big and well-known established businesses like I liked the ted conference Shopify the guardian or the",
    "start": "103200",
    "end": "111659"
  },
  {
    "text": "NFL so we're kind of sort of playing the field so to speak in terms of the types of businesses that we're working with",
    "start": "111659",
    "end": "116939"
  },
  {
    "text": "but obviously with with credit card payments being sort of the core of the product that we offer PCI is a big part",
    "start": "116939",
    "end": "124740"
  },
  {
    "text": "of what we have to think about now stripe has been PCI compliance since 2011 that was like right around the time",
    "start": "124740",
    "end": "131039"
  },
  {
    "start": "125000",
    "end": "170000"
  },
  {
    "text": "that we launched um this is our very first certificate of compliance it's obviously very important",
    "start": "131039",
    "end": "138570"
  },
  {
    "text": "to us we think about it a lot we've been certified as a level one service provider and for those of you who have",
    "start": "138570",
    "end": "143880"
  },
  {
    "text": "not suffered through PCI compliance in the same way that i have that is the most stringent level of audit that that",
    "start": "143880",
    "end": "149130"
  },
  {
    "text": "is available that is available as part of the PCI process and in 2012 we moved",
    "start": "149130",
    "end": "156000"
  },
  {
    "text": "all of our infrastructure into a double us including our PCI infrastructure and we've been in AWS entirely ever since",
    "start": "156000",
    "end": "161970"
  },
  {
    "text": "then running both are pci and our non pci infrastructure in AWS so pci is not",
    "start": "161970",
    "end": "173670"
  },
  {
    "start": "170000",
    "end": "219000"
  },
  {
    "text": "a simple standard um I when looked it up it's 115 pages total and that's just the",
    "start": "173670",
    "end": "179520"
  },
  {
    "text": "course pack itself if you look throughout the documentation that's published by the PCI council there are",
    "start": "179520",
    "end": "184800"
  },
  {
    "text": "hundreds of additional implementation hundreds additional pages of implementation details and supplemental",
    "start": "184800",
    "end": "190110"
  },
  {
    "text": "information and Talmudic interpretation covering the various aspects and details",
    "start": "190110",
    "end": "196890"
  },
  {
    "text": "of how to implement PCI within your organization and we were told when we were getting started the pc i was going",
    "start": "196890",
    "end": "202560"
  },
  {
    "text": "to be this this big nightmare I was going to weigh us down was going to",
    "start": "202560",
    "end": "207570"
  },
  {
    "text": "prevent us from being able to move quickly it was going to going to get a make us stodgy and old and slow moving",
    "start": "207570",
    "end": "213060"
  },
  {
    "text": "before we were even old and so the way that we approach this problem is we kind of sat down was sort of a blank slate",
    "start": "213060",
    "end": "219480"
  },
  {
    "start": "219000",
    "end": "252000"
  },
  {
    "text": "and we thought well what what really matters here what really matters like",
    "start": "219480",
    "end": "225090"
  },
  {
    "text": "from a security perspective from a from from sort of building the most secure system that we can because that's really",
    "start": "225090",
    "end": "231390"
  },
  {
    "text": "PCI is all about is trying to make sure that your users sensitive information is",
    "start": "231390",
    "end": "236760"
  },
  {
    "text": "secure and what we found is that by taking this approach we can often come",
    "start": "236760",
    "end": "241800"
  },
  {
    "text": "up with systems that were more secure than the PCI experts recommended and yet",
    "start": "241800",
    "end": "246989"
  },
  {
    "text": "at the same time we're easier for us to maintain and less of a burden and so",
    "start": "246989",
    "end": "252840"
  },
  {
    "text": "today we'll talk about a few examples of that I'm going to go through three different cases where we were able to",
    "start": "252840",
    "end": "258060"
  },
  {
    "text": "start from sort of a clean slate and find ways to make things better in ways that might have contradicted what sort",
    "start": "258060",
    "end": "264030"
  },
  {
    "text": "of the the the standard best practices are and the strategy is very useful for PCI we",
    "start": "264030",
    "end": "269860"
  },
  {
    "text": "found it to be very very helpful for us to to sort of accomplished PCI's goals",
    "start": "269860",
    "end": "276190"
  },
  {
    "text": "and satisfy our compliance requirements and also continue to innovate rapidly but it's not just limited to PCI this is",
    "start": "276190",
    "end": "283360"
  },
  {
    "text": "something that's useful sort of anywhere in your organization it's useful from for establishing infrastructure picking",
    "start": "283360",
    "end": "288370"
  },
  {
    "text": "out product in some sense stripe itself is founded on the principle on this idea",
    "start": "288370",
    "end": "294520"
  },
  {
    "text": "that if that that that that we want to challenge the assumptions that payments has to be hard and so that's something",
    "start": "294520",
    "end": "299620"
  },
  {
    "text": "that's the idea is something that's very core to us as an organization so I'm going to go through three different",
    "start": "299620",
    "end": "304840"
  },
  {
    "text": "stories today all of which are actual real things that have happened it's stripe that've that we've implemented",
    "start": "304840",
    "end": "310630"
  },
  {
    "text": "that we're running in production today um and so I'm going to talk first about a sort of a very broad problem which is",
    "start": "310630",
    "end": "318730"
  },
  {
    "text": "just how we approach PCI in general and some early decisions that we made that",
    "start": "318730",
    "end": "325060"
  },
  {
    "text": "that ended up helping us out a lot in terms of managing the complexity pci and then second i'm going to look at a very",
    "start": "325060",
    "end": "330550"
  },
  {
    "text": "very specific PCI requirement that often can create a lot of maintenance burden",
    "start": "330550",
    "end": "335830"
  },
  {
    "text": "and operational burden and show how we were able to largely eliminate it from the day-to-day operations at stripe and",
    "start": "335830",
    "end": "342910"
  },
  {
    "text": "then finally just to show how this can be used outside of the scope of PCI I'm going to talk about an infrastructure",
    "start": "342910",
    "end": "348490"
  },
  {
    "text": "problem that we ran into that something sort of fairly near and dear to my heart an infrastructure problem that we ran",
    "start": "348490",
    "end": "353800"
  },
  {
    "text": "into we're using the same techniques we were able to solve a problem completely outside of the the PCI and security",
    "start": "353800",
    "end": "358900"
  },
  {
    "text": "space so the the first example that I want to walk through is is very fundamental to how we approach PCI its",
    "start": "358900",
    "end": "366370"
  },
  {
    "start": "360000",
    "end": "612000"
  },
  {
    "text": "stripe and it shows that when you when you re-examine your problems from the ground up when you look at it from first",
    "start": "366370",
    "end": "372610"
  },
  {
    "text": "principles you can often change the constraints of your problems in way that you might not have imagined now if you",
    "start": "372610",
    "end": "379480"
  },
  {
    "text": "had to imagine what the stripe API looked like without really knowing too much about about the details what we do",
    "start": "379480",
    "end": "386020"
  },
  {
    "text": "you'd probably imagine that it looks something like this credit card numbers come in credit card numbers go out but",
    "start": "386020",
    "end": "393490"
  },
  {
    "text": "in practice the striping avi is actually significantly more complicated not only are we doing much more than",
    "start": "393490",
    "end": "400420"
  },
  {
    "text": "simply taking credit card numbers and passing them out to the the the credit card networks but but we're also for",
    "start": "400420",
    "end": "406570"
  },
  {
    "text": "starters taking in other pieces of information things like API keys or occasionally customer personal",
    "start": "406570",
    "end": "412840"
  },
  {
    "text": "information not to mention a bunch of information that just isn't actually as",
    "start": "412840",
    "end": "418140"
  },
  {
    "text": "sensitive at all really like IP addresses which are you know somewhat sensitive but not certainly not to the",
    "start": "418140",
    "end": "423550"
  },
  {
    "text": "same degree that credit card numbers are and and internally once we get that information we do a lot more than simply",
    "start": "423550",
    "end": "429550"
  },
  {
    "text": "pass it on to the credit card networks we have to deal with problems like authenticating and coming API requests",
    "start": "429550",
    "end": "434620"
  },
  {
    "text": "making sure that they're that they're actually you know allowed to make those requests we have to do things like currency exchange for our users we allow",
    "start": "434620",
    "end": "440740"
  },
  {
    "text": "our users to to charge in one currency get paid on another currency we send out notifications to our users when when",
    "start": "440740",
    "end": "447220"
  },
  {
    "text": "events happen on their account so they can keep track of it we do fraud detection which is obviously so very critical for for an online payments",
    "start": "447220",
    "end": "454180"
  },
  {
    "text": "business and and all of this incoming information you know is used in various",
    "start": "454180",
    "end": "462280"
  },
  {
    "text": "parts of these different systems now in a traditional application you see some",
    "start": "462280",
    "end": "467530"
  },
  {
    "text": "companies that build their systems like that they just kind of throw everything together you know if you're if you're",
    "start": "467530",
    "end": "472690"
  },
  {
    "text": "just starting on an application if you're just getting started hacking on it you'd probably do this to just kind of like do the quickest thing do all of it in one place we'll sort it out later",
    "start": "472690",
    "end": "479140"
  },
  {
    "text": "and the big problem specifically when you're dealing with pci or other sort of compliance requirements is that that",
    "start": "479140",
    "end": "484540"
  },
  {
    "text": "kind of draws this big red line around the entirety of your application and puts it all in scope for PCI which means",
    "start": "484540",
    "end": "492640"
  },
  {
    "text": "that for everything that you're doing you have to satisfy pci use requirements now pci is in very good requirements pci",
    "start": "492640",
    "end": "498820"
  },
  {
    "text": "also has some somewhat more questionable requirements things like pci tends to",
    "start": "498820",
    "end": "506560"
  },
  {
    "text": "dictate the way in which you do development and as a start-up that's something that we don't really like we think that you know in general we can",
    "start": "506560",
    "end": "512589"
  },
  {
    "text": "get a lot of the benefits of the types of things that pci likes without necessarily using the exact strategies that they dictate and so we realized",
    "start": "512589",
    "end": "520240"
  },
  {
    "text": "that if we were subject to this sort of giant bubble of pci it would be a huge burden on us in terms of being able to",
    "start": "520240",
    "end": "526839"
  },
  {
    "text": "to innovate quickly but when we sat down and actually",
    "start": "526839",
    "end": "532459"
  },
  {
    "text": "considered our options and and and thought about sort of just what what what the problem space was what we",
    "start": "532459",
    "end": "539959"
  },
  {
    "text": "realized is that it actually turns out that this data can be really fairly effectively compartmentalised so for",
    "start": "539959",
    "end": "545089"
  },
  {
    "text": "example let's talk about fraud detection um I can't go I can't go too much into",
    "start": "545089",
    "end": "550250"
  },
  {
    "text": "the details of how our fraud detection works but I can say that one of the big inputs into our fraud detection",
    "start": "550250",
    "end": "555500"
  },
  {
    "text": "algorithms has to do with how a credit card has been used in the past as it turns out if you use your card in the US",
    "start": "555500",
    "end": "562250"
  },
  {
    "text": "almost consistently and then all of a sudden the charge shows up from somewhere in Southeast Asia something project funny is probably going on and",
    "start": "562250",
    "end": "569209"
  },
  {
    "text": "this idea of identifying sort of sequential uses of a card is really important to our fraud algorithms but in",
    "start": "569209",
    "end": "577339"
  },
  {
    "text": "order to apply those types of algorithms it turns out you don't actually need the credit card number all you need is you",
    "start": "577339",
    "end": "584209"
  },
  {
    "text": "need some sort of unique identifier that stays the same from transaction to transaction so you can always tell not",
    "start": "584209",
    "end": "591110"
  },
  {
    "text": "what the credit card number is but that the same credit card comes up and on top of that for a lot of these other",
    "start": "591110",
    "end": "596600"
  },
  {
    "text": "components we maybe just don't even need the credit card numbers at all currency exchange is just I mean there's there's",
    "start": "596600",
    "end": "601730"
  },
  {
    "text": "there's money moving around still but it's just a question of like what currents here we converting from what currency requi converting to and how",
    "start": "601730",
    "end": "608120"
  },
  {
    "text": "much of it do we need and these other things just don't even touch credit card numbers at all so we we sort of wipe the",
    "start": "608120",
    "end": "614120"
  },
  {
    "text": "slate clean we started over we started thinking about the problem space a little bit more and and we asked ourselves sort of who actually needs to",
    "start": "614120",
    "end": "622250"
  },
  {
    "text": "see that credit card number who needs to be to have to have access to the actual credit card number itself and the answer",
    "start": "622250",
    "end": "628940"
  },
  {
    "text": "is that there is only one thing that needs access to the actual credit card number and that is the actual credit",
    "start": "628940",
    "end": "634339"
  },
  {
    "text": "card networks and nobody else needs to see it nobody else needs to see the credit card number ever everybody else",
    "start": "634339",
    "end": "640579"
  },
  {
    "text": "just needs to see a unique identifier of some sort some sort of stand-in for the",
    "start": "640579",
    "end": "646490"
  },
  {
    "text": "credit card number that's always the same so it's always the same representation but not the actual card",
    "start": "646490",
    "end": "651649"
  },
  {
    "text": "number itself and from the perspective of PCI for the perspective of compliance this idea of a sort of stand-in for the",
    "start": "651649",
    "end": "657589"
  },
  {
    "text": "credit card number or a token in the parlance of PCI is",
    "start": "657589",
    "end": "663920"
  },
  {
    "text": "considered to be PCI sensitive and so applications which only handle tokens are not in pci scope so we built a",
    "start": "663920",
    "end": "673040"
  },
  {
    "text": "component that just created tokens this is all it does credit card numbers come in it has no awareness of what the",
    "start": "673040",
    "end": "679670"
  },
  {
    "text": "application is doing all it knows is that looks like a credit card it takes the credit card out it replaces it with",
    "start": "679670",
    "end": "685370"
  },
  {
    "text": "unique identifiers it generates one if it has to if there's not one there already and then it passes it on to the",
    "start": "685370",
    "end": "690920"
  },
  {
    "text": "rest of our infrastructure and once it's done that because it no longer contains a credit card number because it only contains the token it's no longer PCI",
    "start": "690920",
    "end": "697699"
  },
  {
    "text": "sensitive and that entire application that i showed you before all the different fraud detection and and",
    "start": "697699",
    "end": "703089"
  },
  {
    "text": "authorization components none of those are considered in scope for PCI and so",
    "start": "703089",
    "end": "708260"
  },
  {
    "text": "none of them are subject to the the burdens of compliance so okay so what",
    "start": "708260",
    "end": "716300"
  },
  {
    "text": "happens when we actually decide that we want to charge a credit card number it's pretty easy all you do is you take that token you hand it back to the tokenizer",
    "start": "716300",
    "end": "721760"
  },
  {
    "text": "tokenizer turns into a d tokenizer which is basically the same thing just running in reverse it takes substitutes in the",
    "start": "721760",
    "end": "728300"
  },
  {
    "text": "actual credit card number and sends it up to the card networks and one thing that we've done with this application which has been extraordinarily useful",
    "start": "728300",
    "end": "734149"
  },
  {
    "text": "for us from a development perspective is we tried to make the tokenizer as lightweight as possible so that it",
    "start": "734149",
    "end": "739850"
  },
  {
    "text": "actually has almost no awareness of what the underlying stripe application is doing all it knows is that there's a",
    "start": "739850",
    "end": "745940"
  },
  {
    "text": "credit card number there or I need to replace a credit card number right there and by doing that we're able to satisfy",
    "start": "745940",
    "end": "753560"
  },
  {
    "text": "our PCI compliance requirements in this sort of fairly narrow component now obviously the tokenizer is in scope the",
    "start": "753560",
    "end": "761570"
  },
  {
    "text": "tokenizer does have to be PCI compliant we do a bunch of stuff in order to make it secure it is in some sense sort of",
    "start": "761570",
    "end": "766819"
  },
  {
    "text": "the most sensitive component that we have because not only is it handling credit card numbers but in fact all",
    "start": "766819",
    "end": "772220"
  },
  {
    "text": "incoming API requests go first through this component which means that its handling in fact all sensitive",
    "start": "772220",
    "end": "778069"
  },
  {
    "text": "information that passes through our systems but it's a very simple component to maintain it's a very simple component",
    "start": "778069",
    "end": "784040"
  },
  {
    "text": "to develop and it's much much easier to manage and so the even though the the",
    "start": "784040",
    "end": "791000"
  },
  {
    "text": "requirements on that one component or may be higher than they might have been on the entire system it's a much it's",
    "start": "791000",
    "end": "796490"
  },
  {
    "text": "much easier to satisfy those requirements and as a result of that we actually I actually went to check to see exactly how much easier it",
    "start": "796490",
    "end": "802670"
  },
  {
    "start": "802000",
    "end": "883000"
  },
  {
    "text": "is so if you look at our infrastructure today only one out of every 30 instances",
    "start": "802670",
    "end": "809300"
  },
  {
    "text": "that we run its stripe is dedicated to PCI the other 29 are completely out of PCI scope auditors don't even care that",
    "start": "809300",
    "end": "816709"
  },
  {
    "text": "they exist all we have to do is just show them that thin little sliver of PCI sensitive infrastructure and and and",
    "start": "816709",
    "end": "823189"
  },
  {
    "text": "there they're satisfied with our compliance status now we've used this",
    "start": "823189",
    "end": "829459"
  },
  {
    "text": "approach in more than just our own internal pci infrastructure if any of you ever integrated with stripe before",
    "start": "829459",
    "end": "835399"
  },
  {
    "text": "you start you'll know that we have a client library titled stripe j/s it's a JavaScript library which effectively",
    "start": "835399",
    "end": "841129"
  },
  {
    "text": "accomplishes the same thing for our users they take credit card numbers and submit them to our servers instead of to",
    "start": "841129",
    "end": "848000"
  },
  {
    "text": "their servers and we give them back a token which they can use as a placeholder for the actual credit card",
    "start": "848000",
    "end": "853819"
  },
  {
    "text": "numbers and in that way they in fact don't have to go through any sort of audit process at all they have to fill",
    "start": "853819",
    "end": "859790"
  },
  {
    "text": "out an essay QA which is the self-assessment questionnaire which is the sort of the the easiest of the the",
    "start": "859790",
    "end": "866600"
  },
  {
    "text": "self assessment processes you can go through in pci but it's largely a formality because since their systems",
    "start": "866600",
    "end": "871670"
  },
  {
    "text": "aren't storing or transmitting credit card numbers they're never in scope for for for pci and and the strategy is is",
    "start": "871670",
    "end": "878660"
  },
  {
    "text": "is definitely growing in popularity and we were doing this a couple years ago but a lot of people are doing this now take for example how many of you guys",
    "start": "878660",
    "end": "885290"
  },
  {
    "start": "883000",
    "end": "945000"
  },
  {
    "text": "have iPhones does anybody here have an iphone yeah see a couple hands if any of you guys paid with Apple pay before yeah",
    "start": "885290",
    "end": "891459"
  },
  {
    "text": "so the way that Apple pay works actually uses a very similar strategy this this",
    "start": "891459",
    "end": "896839"
  },
  {
    "text": "idea of tokenization when you add a card to your Apple pay account the thing that",
    "start": "896839",
    "end": "902269"
  },
  {
    "text": "is stored on your phone the thing that you use to pay with Apple pay is not actually your credit card number it's a",
    "start": "902269",
    "end": "908689"
  },
  {
    "text": "unique identifier that's unique to your device that's provisioned just for your",
    "start": "908689",
    "end": "914000"
  },
  {
    "text": "device and represents a stand-in that you can revoke and managed independently but also it means that you're not",
    "start": "914000",
    "end": "919819"
  },
  {
    "text": "passing around the sense that is 16 digit actual underlying credit card number so Apple pay is doing this has",
    "start": "919819",
    "end": "925579"
  },
  {
    "text": "been doing this for four must be about a year at this point android pay recently launched they're planning to use",
    "start": "925579",
    "end": "931160"
  },
  {
    "text": "really similar strategy so this this idea of using tokenization as a stand-in for as a stand-in for for dealing with",
    "start": "931160",
    "end": "938810"
  },
  {
    "text": "sort of broadly scoped compliance and broadly scoped exposure is becoming more",
    "start": "938810",
    "end": "943850"
  },
  {
    "text": "and more popular over time so I think the important takeaway here is that that understanding your boundaries and",
    "start": "943850",
    "end": "949279"
  },
  {
    "start": "945000",
    "end": "992000"
  },
  {
    "text": "understanding your edge conditions is really important and really valuable when you when you understand your",
    "start": "949279",
    "end": "954500"
  },
  {
    "text": "boundaries you can shrink them because you can find things that are outside of those boundaries and when once you've",
    "start": "954500",
    "end": "961730"
  },
  {
    "text": "done that maybe you'll find that you can avoid security considerations entirely are for example those those of our users",
    "start": "961730",
    "end": "968720"
  },
  {
    "text": "who use stripe Jas are able to buy sort of defining their boundaries carefully avoid PCI obligations entirely and and",
    "start": "968720",
    "end": "975920"
  },
  {
    "text": "in cases where you can't do that you can often make them somebody else's problems so for example using services like like",
    "start": "975920",
    "end": "982910"
  },
  {
    "text": "VPC from AWS or security groups we're able to sort of not have to worry about things like firewalls at all because AWS",
    "start": "982910",
    "end": "989449"
  },
  {
    "text": "provides those services for us so the second story that I want to talk about",
    "start": "989449",
    "end": "994660"
  },
  {
    "start": "992000",
    "end": "1102000"
  },
  {
    "text": "we just talked about sort of a broad infrastructure problem that we were able to sort of design around at a very high",
    "start": "994660",
    "end": "1001600"
  },
  {
    "text": "level in a very early stage of our infrastructure development I now want to talk about a case where we very very",
    "start": "1001600",
    "end": "1009819"
  },
  {
    "text": "specific solution to a very specific problem that we ran into and this has to do with PCI use requirements 66 now for",
    "start": "1009819",
    "end": "1017980"
  },
  {
    "text": "those of you who are not familiar with pci or and not spend as much time poring over the specs as I have PCI",
    "start": "1017980",
    "end": "1024069"
  },
  {
    "text": "requirements six dots x pci has grouped into 12 high-level requirements dealing with the various top-level aspects of",
    "start": "1024069",
    "end": "1029678"
  },
  {
    "text": "what they feel are important security properties to have and they break those down into sub requirements and sub sub",
    "start": "1029679",
    "end": "1035140"
  },
  {
    "text": "requirements and sub sub sub sub sub requirements and it just kind of keeps on going six requirements six in general",
    "start": "1035140",
    "end": "1042038"
  },
  {
    "text": "deals with making sure that the applications that you were developing are secure and requirements 66 states",
    "start": "1042039",
    "end": "1048789"
  },
  {
    "text": "that you need to make sure that you were addressing known vulnerabilities known classes of vulnerabilities in your",
    "start": "1048789",
    "end": "1054760"
  },
  {
    "text": "application now I mentioned before that they're sort of several hundred pages of",
    "start": "1054760",
    "end": "1060549"
  },
  {
    "text": "documentation and supplemental information around PCI most of it is kinda of like more high level stuff or just",
    "start": "1060549",
    "end": "1069009"
  },
  {
    "text": "like dealing with things in aggregate talking about how you deal with mobile applications are talking about how you think about phone networks for example",
    "start": "1069009",
    "end": "1075460"
  },
  {
    "text": "but a couple of the requirements have their own dedicated document there are two of them and requirements six dots",
    "start": "1075460",
    "end": "1082059"
  },
  {
    "text": "six is one of those requirements that has this this sort of detailed supplement it's a complex requirement to",
    "start": "1082059",
    "end": "1087129"
  },
  {
    "text": "actually implement because this idea that you just want to deal with common vulnerabilities is is is much more",
    "start": "1087129",
    "end": "1092950"
  },
  {
    "text": "there's much more behind that than there is in just a simple statement so this comes with a sort of 12 page",
    "start": "1092950",
    "end": "1098259"
  },
  {
    "text": "supplemental document about what exactly they meant in that one line throwaway sentence but the typical approach for",
    "start": "1098259",
    "end": "1104649"
  },
  {
    "start": "1102000",
    "end": "1259000"
  },
  {
    "text": "handling this requirement is fairly straightforward you use something called a web application firewall or a wife",
    "start": "1104649",
    "end": "1110820"
  },
  {
    "text": "similar to the product that abuse just released earlier this week I don't know if anybody's using it for PCI yep and",
    "start": "1110820",
    "end": "1115899"
  },
  {
    "text": "I'm sure it's only a matter of time the web application firewalls are different from the firewalls that you may be used",
    "start": "1115899",
    "end": "1120999"
  },
  {
    "text": "to usually firewalls work at the IP layer at the layer layer three or layer for identifying suspicious packets a web",
    "start": "1120999",
    "end": "1130179"
  },
  {
    "text": "application firewall works at the application layer it's 11 layer 7 firewall it works by actually inspecting",
    "start": "1130179",
    "end": "1136269"
  },
  {
    "text": "the the incoming HTTP requests or whatever protocol it is that you're speaking looking at it semantically for",
    "start": "1136269",
    "end": "1142659"
  },
  {
    "text": "common classes of vulnerabilities so the purpose of a web application firewall is to detect malicious traffic and either",
    "start": "1142659",
    "end": "1149679"
  },
  {
    "text": "reject it or notify an administrator for further investigation in practice",
    "start": "1149679",
    "end": "1156509"
  },
  {
    "text": "running a laugh is kind of terrible I don't know if any of you have ever done it it's not a lot of fun because it",
    "start": "1156509",
    "end": "1163179"
  },
  {
    "text": "turns out that if you're using some pre-existing sort of sanctioned Web",
    "start": "1163179",
    "end": "1169149"
  },
  {
    "text": "Application Firewall package it comes with this pre-existing set of rules that try to detect common causes of",
    "start": "1169149",
    "end": "1174879"
  },
  {
    "text": "vulnerabilities like this looks like an an XSS attacker this looks like a sequel injection but it's really hard to write",
    "start": "1174879",
    "end": "1182080"
  },
  {
    "text": "a generic set of rules that understands common vulnerabilities without being incredibly broad as an example when",
    "start": "1182080",
    "end": "1189100"
  },
  {
    "text": "stripe was one running a laugh internally we used modsecurity for a period of time which is a fairly popular",
    "start": "1189100",
    "end": "1194529"
  },
  {
    "text": "open source laugh it it literally has a rule that will fire if your request contains",
    "start": "1194529",
    "end": "1200210"
  },
  {
    "text": "the string space or space because it's trying to find any sequel injection",
    "start": "1200210",
    "end": "1206000"
  },
  {
    "text": "there might be anywhere in your request and and and this kind of overly broad",
    "start": "1206000",
    "end": "1211520"
  },
  {
    "text": "rule set results in sort of one of two things if you're running your if you're running your wife in in enforcing mode",
    "start": "1211520",
    "end": "1219140"
  },
  {
    "text": "it means that it rejects legitimate traffic which you never want or if you're running it in in alert mode it",
    "start": "1219140",
    "end": "1226610"
  },
  {
    "text": "means that some administrator has to pour through a bunch of requests that fall into exactly one of two buckets",
    "start": "1226610",
    "end": "1232060"
  },
  {
    "text": "totally innocuous or potentially company ending serious and if anybody's ever",
    "start": "1232060",
    "end": "1238370"
  },
  {
    "text": "cited in cognitive biases before if anybody's ever looked into the cognitive biases about how humans process just like large volumes of information this",
    "start": "1238370",
    "end": "1244910"
  },
  {
    "text": "idea of like this is finance fine that's fine that's fine that's fine Oh Shh crap this is not good they're humans are not",
    "start": "1244910",
    "end": "1252710"
  },
  {
    "text": "good at that they miss things they they they just don't notice it it's not a",
    "start": "1252710",
    "end": "1257780"
  },
  {
    "text": "good approach so again we sort of started from a blank slate and started thinking about what's the actual goal",
    "start": "1257780",
    "end": "1263960"
  },
  {
    "start": "1259000",
    "end": "1358000"
  },
  {
    "text": "here what are we trying to do what we're trying to do is we're trying to to protect against common classes of",
    "start": "1263960",
    "end": "1270440"
  },
  {
    "text": "vulnerabilities sort of well-known well-documented like broad classes of bugs and it turns out that there's very",
    "start": "1270440",
    "end": "1277040"
  },
  {
    "text": "easy document that covers broad classes of common bugs it comes from the from Oh",
    "start": "1277040",
    "end": "1282560"
  },
  {
    "text": "wasps for the open web application security project every couple of years they publish a top ten list of the ten",
    "start": "1282560",
    "end": "1287660"
  },
  {
    "text": "most common classes of vulnerabilities so we went through we looked at all of them here's an example page where they",
    "start": "1287660",
    "end": "1293930"
  },
  {
    "text": "walk through how exploitable a particular bug is well how likely it is how easy it is to tell when something's",
    "start": "1293930",
    "end": "1300620"
  },
  {
    "text": "happened when it's being abused and we found that for each of these ten common vulnerabilities there are standard",
    "start": "1300620",
    "end": "1306680"
  },
  {
    "text": "programming tactics that just make them go away if you talk about something like an XSS attack cross-site scripting",
    "start": "1306680",
    "end": "1312860"
  },
  {
    "text": "there's a very standard tactic for dealing with that all you have to do is make sure you're escaping user provided",
    "start": "1312860",
    "end": "1318950"
  },
  {
    "text": "text I mean you know that can be easier said than done but the basic idea is pretty straightforward and and there are",
    "start": "1318950",
    "end": "1325490"
  },
  {
    "text": "there are tools that do this that they construct your program so that they do this automatically and transparently now",
    "start": "1325490",
    "end": "1331100"
  },
  {
    "text": "straight is primarily a JSON based HTTP API we don't return HTML so XSS isn't really a",
    "start": "1331100",
    "end": "1337670"
  },
  {
    "text": "problem for us injection on the other hand definitely a problem for us we definitely accept untrusted input which",
    "start": "1337670",
    "end": "1343460"
  },
  {
    "text": "is sort of the fundamental basis of injection and we have a tendency to store it in our database because that's kind of what we do so injection was a",
    "start": "1343460",
    "end": "1351680"
  },
  {
    "text": "problem that we needed to be able to address in order to say that we were dealing with common classes of vulnerabilities so look what what what",
    "start": "1351680",
    "end": "1359480"
  },
  {
    "text": "is a sequel injection anyway this hope maybe this will be sort of fairly familiar to you guys but I'll try to run",
    "start": "1359480",
    "end": "1364970"
  },
  {
    "text": "through this quickly and I'm going to work and go because that's actually what our PCI application is written in these days if all sequel injection",
    "start": "1364970",
    "end": "1372950"
  },
  {
    "text": "vulnerabilities fundamentally have the same class of problem you're taking untrusted user input and you're dropping",
    "start": "1372950",
    "end": "1379340"
  },
  {
    "text": "it directly into an interpreted query language such a sequel and it's possible",
    "start": "1379340",
    "end": "1385850"
  },
  {
    "text": "to do this safely there are you know functions and routines that can escape",
    "start": "1385850",
    "end": "1391310"
  },
  {
    "text": "that code to make sure that it's not using any special characters or anything like that but but that's kind of hard",
    "start": "1391310",
    "end": "1397130"
  },
  {
    "text": "and it's easy to get wrong for any of you've ever worked in PHP and had to go from my sequel escape string to my",
    "start": "1397130",
    "end": "1404060"
  },
  {
    "text": "sequel real escape string you might be familiar with this class of problem so",
    "start": "1404060",
    "end": "1409130"
  },
  {
    "text": "how can you solve this generally like how can you what can you do to be confident that you're not writing a",
    "start": "1409130",
    "end": "1414470"
  },
  {
    "text": "sequel injection well it probably looks something a little bit more like this you use placeholders in the query and",
    "start": "1414470",
    "end": "1419660"
  },
  {
    "text": "then you let the database itself incorporate those values into the query that actually gets run because it turns",
    "start": "1419660",
    "end": "1425810"
  },
  {
    "text": "out the databases know how sequel works because they kind of have to figure it out so they're able to substitute that",
    "start": "1425810",
    "end": "1430850"
  },
  {
    "text": "variable safely into the query so how",
    "start": "1430850",
    "end": "1435920"
  },
  {
    "text": "can we detect queries that are potentially unsafe how can we detect this in an automated way such that we",
    "start": "1435920",
    "end": "1440960"
  },
  {
    "text": "can be confident that our application isn't vulnerable to these classes of vulnerabilities well it's fairly straightforward as it turns out all you",
    "start": "1440960",
    "end": "1447290"
  },
  {
    "text": "need to do is find cases where any sort of string interpolation or string generation is happening and then being",
    "start": "1447290",
    "end": "1453950"
  },
  {
    "text": "passed to the database and as long as you're using compile time constant",
    "start": "1453950",
    "end": "1459080"
  },
  {
    "text": "strings like this you can be confident that those queries can't possibly be vulnerable to a sequel injection if it's",
    "start": "1459080",
    "end": "1464630"
  },
  {
    "text": "a compile time constant there's no user provided input that's part of the query and an injection simply can't happen so we wrote a tool",
    "start": "1464630",
    "end": "1471570"
  },
  {
    "text": "to look for that we we wrote a tool called safe sequel which uses some some really cool AST and parser functionality",
    "start": "1471570",
    "end": "1479070"
  },
  {
    "text": "in in the go language to parse our code base to look through the entire code base look for anywhere that we're",
    "start": "1479070",
    "end": "1484890"
  },
  {
    "text": "passing queries to a sequel database and see if they're compile time constants and if they are that's great and if they",
    "start": "1484890",
    "end": "1492210"
  },
  {
    "text": "aren't then you flag it because that could be a problem it's not necessarily unsafe but it's impossible for the",
    "start": "1492210",
    "end": "1498600"
  },
  {
    "text": "computer to know with confidence that it is safe and so we wrote this tool we",
    "start": "1498600",
    "end": "1503970"
  },
  {
    "text": "open sourced it there's the URLs at the top the slide you guys could go fetch it if you happen to be writing go code",
    "start": "1503970",
    "end": "1510360"
  },
  {
    "text": "that's interacting with sequel you should totally check it out it's a lot of fun very very easy to use um but i",
    "start": "1510360",
    "end": "1517980"
  },
  {
    "text": "think the points a little bit broader than that the idea here is that by using safe sequel and by using tools like safe",
    "start": "1517980",
    "end": "1523740"
  },
  {
    "text": "sequel we worked with our PCI auditors or RQ SAS and industry parlance um to",
    "start": "1523740",
    "end": "1529380"
  },
  {
    "text": "demonstrate that that not only where our applications not vulnerable to common",
    "start": "1529380",
    "end": "1535100"
  },
  {
    "text": "vulnerabilities now but that also it was impossible to add new vulnerabilities",
    "start": "1535100",
    "end": "1540540"
  },
  {
    "text": "because we had automated detection at the time that the code was written to find these vulnerabilities and flag them",
    "start": "1540540",
    "end": "1546210"
  },
  {
    "text": "we we built this tool into our continuous integration system it's impossible given our deployment",
    "start": "1546210",
    "end": "1552750"
  },
  {
    "text": "processes to roll out code that has a sequel injection because it would cause our CI to fail and and we wouldn't roll",
    "start": "1552750",
    "end": "1560820"
  },
  {
    "text": "out the code and so the result is that we're no longer with a laugh the strategy that you take is that you're",
    "start": "1560820",
    "end": "1566100"
  },
  {
    "text": "trying to detect exploitation as it happens in some sense you're solving you're addressing something after it's",
    "start": "1566100",
    "end": "1572430"
  },
  {
    "text": "already become a problem with with tools like safe sequel and bye-bye sort of addressing the the fundamental goal of",
    "start": "1572430",
    "end": "1579870"
  },
  {
    "text": "protecting its common vulnerabilities rather than detecting exploitation we",
    "start": "1579870",
    "end": "1585480"
  },
  {
    "text": "can prevent it from ever happening or ever being possible and the result is that we no longer have to run a web application firewall we no longer have",
    "start": "1585480",
    "end": "1591390"
  },
  {
    "text": "to deal with that complexity or or operational burden and yet our",
    "start": "1591390",
    "end": "1596640"
  },
  {
    "text": "application is is in some way more secure than it would have been had we not had we been using a laugh because we",
    "start": "1596640",
    "end": "1602789"
  },
  {
    "text": "know that these vulnerabilities simply aren't present so if you're like I said",
    "start": "1602789",
    "end": "1608669"
  },
  {
    "text": "if you're writing go definitely encourage you to check this out it's also probably if you're writing go and you want to evaluate for other types of",
    "start": "1608669",
    "end": "1614249"
  },
  {
    "text": "vulnerabilities like this it's a pretty good template the codes very straightforward i think it's about three hundred lines of code or so it's very",
    "start": "1614249",
    "end": "1619440"
  },
  {
    "text": "easy to do with goes internal parsers a lot of languages have a st parsers so if you're working in other languages you can probably construct similar things as",
    "start": "1619440",
    "end": "1625470"
  },
  {
    "text": "well it's a really cool strategy and a really fun way to to try and detect these kinds of problems the last story I",
    "start": "1625470",
    "end": "1633119"
  },
  {
    "start": "1631000",
    "end": "1756000"
  },
  {
    "text": "want to talk about is not actually related to PCI nor is it related to to even in security particularly but this",
    "start": "1633119",
    "end": "1640590"
  },
  {
    "text": "is this is a scenario where we use the same strategy of understanding the problem really well and working from",
    "start": "1640590",
    "end": "1646409"
  },
  {
    "text": "first principles and sort of sitting down starting from a blank slate and thinking about the problem and we were able to come up with a much better",
    "start": "1646409",
    "end": "1651869"
  },
  {
    "text": "solution than we had previously and this solved for us a persistent performance",
    "start": "1651869",
    "end": "1657389"
  },
  {
    "text": "problem I'm sure that I'm not the first person to stand in front of you and say",
    "start": "1657389",
    "end": "1662429"
  },
  {
    "text": "that we are moving towards a micro service architecture probably heard that before this weekend week once or twice",
    "start": "1662429",
    "end": "1668190"
  },
  {
    "text": "at least maybe but we are you know it's it's fairly common story especially for startups and about our stage of growth",
    "start": "1668190",
    "end": "1674399"
  },
  {
    "text": "where we're we're finding that our application is becoming a little bit more difficult to manage as it grows and we want to use micro services as a",
    "start": "1674399",
    "end": "1680190"
  },
  {
    "text": "strategy for for for defining clean boundaries speaking of defining clean boundaries and and just sort of carving",
    "start": "1680190",
    "end": "1686940"
  },
  {
    "text": "up our application a little bit one big problem with moving towards a micro service model is service discovery if",
    "start": "1686940",
    "end": "1692879"
  },
  {
    "text": "you have all of these different micro services and you want them to be able to talk to each other well they kind of need to be able to find each other first",
    "start": "1692879",
    "end": "1698220"
  },
  {
    "text": "and so when we sat down and started looking at service discovery as a problem we decided to use an open source",
    "start": "1698220",
    "end": "1704909"
  },
  {
    "text": "tool that was fairly recently released called console for those of you who are",
    "start": "1704909",
    "end": "1710850"
  },
  {
    "text": "familiar with vagrant or or terraform or vault or any of those groups of project",
    "start": "1710850",
    "end": "1716970"
  },
  {
    "text": "this is out of the same company that does it was out of hasha carp console is a tool for service discovery it's from",
    "start": "1716970",
    "end": "1724200"
  },
  {
    "text": "the same people service discovery is basically the core of what it does it's pretty straightforward you write a",
    "start": "1724200",
    "end": "1729210"
  },
  {
    "text": "simple JSON file you drop it into a directory you define the services you include things like port numbers and",
    "start": "1729210",
    "end": "1734680"
  },
  {
    "text": "names of the services you can even define checks if you want to so if you want to say that this service is not",
    "start": "1734680",
    "end": "1740020"
  },
  {
    "text": "considered healthy unless this command returned successfully and the console",
    "start": "1740020",
    "end": "1745030"
  },
  {
    "text": "API will automatically run that check and remove the host from the the registry if if that service fails its",
    "start": "1745030",
    "end": "1751300"
  },
  {
    "text": "health checks so it's it's fairly flexible it's sort of easy primitives to work with internally this is a",
    "start": "1751300",
    "end": "1757960"
  },
  {
    "start": "1756000",
    "end": "2272000"
  },
  {
    "text": "screenshot from there from their documentation console uses a consensus",
    "start": "1757960",
    "end": "1764470"
  },
  {
    "text": "protocol called raft in order to keep track of state for those of you who are not familiar with raft it's a fairly new",
    "start": "1764470",
    "end": "1770830"
  },
  {
    "text": "protocol in the consensus space it's the same class of protocol as is Paxos or",
    "start": "1770830",
    "end": "1776200"
  },
  {
    "text": "Zab from the zookeeper project the idea of having several different distributed servers agree on something is is one of",
    "start": "1776200",
    "end": "1783970"
  },
  {
    "text": "those fairly challenging problems in computer science we have a couple different protocols that are that are known to to deal with that problem in a",
    "start": "1783970",
    "end": "1789760"
  },
  {
    "text": "way that that that's that sort of correct and assures that ensures that it will they will always come to a consistent answer if they come to an",
    "start": "1789760",
    "end": "1796060"
  },
  {
    "text": "answer at all which I'll get back to that one but so wrapped is a similar protocol in those in those other classes",
    "start": "1796060",
    "end": "1801460"
  },
  {
    "text": "it's a fairly recent one it's kind of popular right now it's got a nice easy implementation and and console uses raft",
    "start": "1801460",
    "end": "1808150"
  },
  {
    "text": "in order to synchronize state across a pool of servers and then if you make a",
    "start": "1808150",
    "end": "1813880"
  },
  {
    "text": "query if you want to look up a service try to find find somebody to reach out to what ends up happening is that all",
    "start": "1813880",
    "end": "1819370"
  },
  {
    "text": "queries get forwarded to whoever is the current leader in the server cluster and the leader returns the answer so it has",
    "start": "1819370",
    "end": "1829060"
  },
  {
    "text": "to console it look pretty good it's very easy to integrate with it's very easy to use we use it in a couple of sort of",
    "start": "1829060",
    "end": "1837190"
  },
  {
    "text": "limited applications that we're not super critical we're not you know big deal if they broke and things were",
    "start": "1837190",
    "end": "1843880"
  },
  {
    "text": "mostly okay we didn't really see any major problems and so once we were confident that we weren't seeing any major problems we took every instance of",
    "start": "1843880",
    "end": "1850120"
  },
  {
    "text": "service discovery that was happening within stripe previously had been happening to do things like configuration files and stuff like that which is not fun and we replaced all of",
    "start": "1850120",
    "end": "1857140"
  },
  {
    "text": "our service discovery with console lookups and so it was great for about a",
    "start": "1857140",
    "end": "1863620"
  },
  {
    "text": "week and then was not great and then it's looking about like this that is the 90th",
    "start": "1863620",
    "end": "1871210"
  },
  {
    "text": "percentile latency the blinding percentile amount of time that we spent in a single API request doing console",
    "start": "1871210",
    "end": "1877809"
  },
  {
    "text": "lookups and as you can see it started under normal conditions in the tens of milliseconds which is fine and then all",
    "start": "1877809",
    "end": "1884620"
  },
  {
    "text": "of a sudden it went to tens of seconds which is not fine tens of seconds",
    "start": "1884620",
    "end": "1889990"
  },
  {
    "text": "spending 50 seconds just doing service discovery is not really a good scenario for us what when we started looking into",
    "start": "1889990",
    "end": "1897640"
  },
  {
    "text": "it what we found is that under certain circumstances the console server cluster",
    "start": "1897640",
    "end": "1904150"
  },
  {
    "text": "would decide to elect a new leader and then something would go wrong and it would decide to enacted elect another",
    "start": "1904150",
    "end": "1909370"
  },
  {
    "text": "new leader and we get stuck in this cycle of continuous reelection and when that happens if there's no consistent",
    "start": "1909370",
    "end": "1916210"
  },
  {
    "text": "leader there's no way to return queries from the leader and so you end up with",
    "start": "1916210",
    "end": "1921669"
  },
  {
    "text": "something like this now we worked with the up streams we fix some problems in our code the reason that that spiked to",
    "start": "1921669",
    "end": "1927250"
  },
  {
    "text": "as high as it did was because we didn't have timeouts on our console look up so as a reminder just like keep this in",
    "start": "1927250",
    "end": "1934750"
  },
  {
    "text": "mind when you're doing network calls that a timeout on them or you're just like then you're never gonna like what happens instead so we added timeouts and",
    "start": "1934750",
    "end": "1940390"
  },
  {
    "text": "made things better we work with upstream they fixed bugs it made things better but we were still having consistent",
    "start": "1940390",
    "end": "1945490"
  },
  {
    "text": "persistent problems intermittently where where console would get sort of stuck in this this this state and we wouldn't be",
    "start": "1945490",
    "end": "1951490"
  },
  {
    "text": "able to do any of our service discovery at all so just like the other few times we started from a blank slate we thought",
    "start": "1951490",
    "end": "1956860"
  },
  {
    "text": "through the problem again and we tried to figure out what it was that was really important about service discovery",
    "start": "1956860",
    "end": "1961870"
  },
  {
    "text": "and we we decided that the real question is that what are the actual requirements for accessing this data some of you may",
    "start": "1961870",
    "end": "1969190"
  },
  {
    "text": "be familiar with the cap theorem cap theorem states that of consistency",
    "start": "1969190",
    "end": "1975179"
  },
  {
    "text": "availability and partition tolerance you get to pick in most to some people only",
    "start": "1975179",
    "end": "1980260"
  },
  {
    "text": "managed to pick one it's okay I don't",
    "start": "1980260",
    "end": "1985539"
  },
  {
    "text": "love the cap theorem the the main problem that i have with the cap theorem is that it suggests that you have the",
    "start": "1985539",
    "end": "1990580"
  },
  {
    "text": "option of trading away partition tolerance which if you're building a distributed system that's kind of",
    "start": "1990580",
    "end": "1995650"
  },
  {
    "text": "meaningless so I time to actually use a slightly different algorithm I just wanted to set this up just so that you guys have some contacts there's another way of thinking about",
    "start": "1995650",
    "end": "2001289"
  },
  {
    "text": "this that's a little bit more useful to us and it's called the pass elk principle and it basically kind of",
    "start": "2001289",
    "end": "2006509"
  },
  {
    "text": "separates the idea of partition States and non partition states when you're in a partition state you get to choose",
    "start": "2006509",
    "end": "2011730"
  },
  {
    "text": "between either having availability or consistency because again you don't get to trade away partition tolerance in a distributed system and when you're not",
    "start": "2011730",
    "end": "2018149"
  },
  {
    "text": "in a partition state there's sort of two different options you can take you can either optimized for low latency or you",
    "start": "2018149",
    "end": "2024029"
  },
  {
    "text": "can optimize for consistency and and and latency in a non partition state and availability in a partition state are",
    "start": "2024029",
    "end": "2030470"
  },
  {
    "text": "often sort of fairly analogous but let's let's think about sort of if we're using app access or a zookeeper like a",
    "start": "2030470",
    "end": "2038999"
  },
  {
    "text": "consensus protocol what are we choosing well the answer is that were choosing consistency we are always choosing",
    "start": "2038999",
    "end": "2045029"
  },
  {
    "text": "consistency we are always choosing consistency over availability we are always choosing consistency over latency now let's talk instead what do you want",
    "start": "2045029",
    "end": "2052648"
  },
  {
    "text": "from service discovery is consistency something that you care about from service discovery do you care if it's maybe 30 seconds out of date on whether",
    "start": "2052649",
    "end": "2059398"
  },
  {
    "text": "or not a node is online and the answer is almost certainly know when you're doing service discovery is a problem",
    "start": "2059399",
    "end": "2064710"
  },
  {
    "text": "stale data is almost better than almost always better than no data and so you actually want a system that consistently",
    "start": "2064710",
    "end": "2071970"
  },
  {
    "text": "makes the opposite choices of a raft based consensus protocol so we sat down",
    "start": "2071970",
    "end": "2078329"
  },
  {
    "text": "we thought about it we said well okay like we have the system that gets as these properties and we want a system",
    "start": "2078329",
    "end": "2084030"
  },
  {
    "text": "that gives us these properties and how can we do that so well we decided to add a layer of caching for those of you",
    "start": "2084030",
    "end": "2090329"
  },
  {
    "text": "who've not seen this quit before there's a fairly famous quote from phil carlton there are only two problems too hard problems in computer science cache",
    "start": "2090329",
    "end": "2096569"
  },
  {
    "text": "invalidation and naming things and service discovery is pretty much just looking up names and so we decided to",
    "start": "2096569",
    "end": "2102630"
  },
  {
    "text": "take both of them on at the same time and so what we did is that we added a",
    "start": "2102630",
    "end": "2107970"
  },
  {
    "text": "caching layer to console every 15 seconds we take the entirety of the console database and we dump it out to a file and then we would use that file and",
    "start": "2107970",
    "end": "2116369"
  },
  {
    "text": "serve it in a non distributed non consensus-driven way if console was down",
    "start": "2116369",
    "end": "2122549"
  },
  {
    "text": "we wouldn't be able to dump that file we might serve stale data but we would at least be able to serve something which",
    "start": "2122549",
    "end": "2127980"
  },
  {
    "text": "is better than having our latency spiked to 15 seconds on a single 50 seconds on a single API request",
    "start": "2127980",
    "end": "2133540"
  },
  {
    "text": "and what do we decide to use for this well it it turns out that there's already it's sort of a fairly well-known",
    "start": "2133540",
    "end": "2140250"
  },
  {
    "text": "distributed algorithm there's sort of protocol for for for handling like nate",
    "start": "2140250",
    "end": "2147190"
  },
  {
    "text": "name lookups I guess it is some sort of some sort of a like a name server I guess so we actually decided to use DNS",
    "start": "2147190",
    "end": "2153730"
  },
  {
    "text": "for our service discovery which is a feature the console already has we kind of stole it but their version is backed",
    "start": "2153730",
    "end": "2159340"
  },
  {
    "text": "by the raft consensus cluster and ours was backed by his own file that we spat",
    "start": "2159340",
    "end": "2164770"
  },
  {
    "text": "out every 15 seconds so we'd spit out this zone file and we load it into our internal dns servers if you were already running which we already know how to run",
    "start": "2164770",
    "end": "2171790"
  },
  {
    "text": "which have no coordination overhead or consensus protocols and every piece of",
    "start": "2171790",
    "end": "2178180"
  },
  {
    "text": "software in existence knows how to do dns lookups and so it's it's something that's sort of easy for us to integrate",
    "start": "2178180",
    "end": "2184030"
  },
  {
    "text": "with so we rolled out this change we switched to using these dns based lookups out of this cash and since then",
    "start": "2184030",
    "end": "2189460"
  },
  {
    "text": "we've had exactly one console in sin in the last six months and it related to a kernel bug was not fun but other than",
    "start": "2189460",
    "end": "2196330"
  },
  {
    "text": "that it's been way better than the system that we had before where we were sort of constantly experiencing the ways",
    "start": "2196330",
    "end": "2201550"
  },
  {
    "text": "in which the this sort of system which didn't have the properties that we wanted I was impacting our availability",
    "start": "2201550",
    "end": "2207940"
  },
  {
    "text": "so whether you're thinking about ways to to sort of narrow the scope of",
    "start": "2207940",
    "end": "2213940"
  },
  {
    "text": "compliance or change the boundaries of your problem whether you're using static",
    "start": "2213940",
    "end": "2219370"
  },
  {
    "text": "analysis to satisfy individual requirements working on the reliability of your core systems or even just trying",
    "start": "2219370",
    "end": "2225490"
  },
  {
    "text": "to rethink how payments work starting from a blank slate and making sure that you understand the fundamental problem",
    "start": "2225490",
    "end": "2231640"
  },
  {
    "text": "that it is you're trying to solve in and making sure that you define that well often results in better solutions then",
    "start": "2231640",
    "end": "2236890"
  },
  {
    "text": "you might have thought possible the idea of questioning assumptions of starting from first principles of finding the",
    "start": "2236890",
    "end": "2242620"
  },
  {
    "text": "best solution is something that's very core two stripes values it's something that we value very very highly I think",
    "start": "2242620",
    "end": "2250210"
  },
  {
    "text": "it's a big part of the company that we are today I think it's a very empowering idea because it enables you to come up",
    "start": "2250210",
    "end": "2255490"
  },
  {
    "text": "with solutions to problems that that that other people might not have thought possible so I'm supposed to remind you",
    "start": "2255490",
    "end": "2263800"
  },
  {
    "text": "all to complete your evaluations apparently and thank you all for coming if you guys have any questions I'd be happy to answer those",
    "start": "2263800",
    "end": "2270970"
  }
]