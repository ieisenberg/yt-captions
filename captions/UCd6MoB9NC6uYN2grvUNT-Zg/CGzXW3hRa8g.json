[
  {
    "start": "0",
    "end": "33000"
  },
  {
    "text": "[Music]",
    "start": "380",
    "end": "12109"
  },
  {
    "text": "hello",
    "start": "12240",
    "end": "12719"
  },
  {
    "text": "i'm almas a cloud support engineer here",
    "start": "12719",
    "end": "14960"
  },
  {
    "text": "at the aws office",
    "start": "14960",
    "end": "16080"
  },
  {
    "text": "in bangalore today i'm going to show you",
    "start": "16080",
    "end": "18080"
  },
  {
    "text": "how to resolve the",
    "start": "18080",
    "end": "19119"
  },
  {
    "text": "unable to create input format exception",
    "start": "19119",
    "end": "21600"
  },
  {
    "text": "based on amazon athena while running",
    "start": "21600",
    "end": "23439"
  },
  {
    "text": "queries",
    "start": "23439",
    "end": "24160"
  },
  {
    "text": "let's get started the unable to create",
    "start": "24160",
    "end": "26640"
  },
  {
    "text": "input format error can occur for several",
    "start": "26640",
    "end": "28800"
  },
  {
    "text": "reasons",
    "start": "28800",
    "end": "29599"
  },
  {
    "text": "in this video we'll discuss two common",
    "start": "29599",
    "end": "31359"
  },
  {
    "text": "scenarios and how to troubleshoot them",
    "start": "31359",
    "end": "33840"
  },
  {
    "start": "33000",
    "end": "144000"
  },
  {
    "text": "scenario one one or more of the aws",
    "start": "33840",
    "end": "36160"
  },
  {
    "text": "screw table definition properties",
    "start": "36160",
    "end": "37920"
  },
  {
    "text": "are empty after logging into the aws",
    "start": "37920",
    "end": "41840"
  },
  {
    "text": "management console",
    "start": "41840",
    "end": "43040"
  },
  {
    "text": "navigate to the athena console",
    "start": "43040",
    "end": "46719"
  },
  {
    "text": "here's the example data that i have in",
    "start": "50160",
    "end": "52160"
  },
  {
    "text": "amazon simple storage service",
    "start": "52160",
    "end": "54399"
  },
  {
    "text": "i created a table by running the aws",
    "start": "54399",
    "end": "56640"
  },
  {
    "text": "glue cli command",
    "start": "56640",
    "end": "59840"
  },
  {
    "text": "i'll run a basic tml query against my",
    "start": "60960",
    "end": "62960"
  },
  {
    "text": "table that was created",
    "start": "62960",
    "end": "66080"
  },
  {
    "text": "my query fails with the mentioned",
    "start": "69840",
    "end": "71439"
  },
  {
    "text": "exception to understand further",
    "start": "71439",
    "end": "73280"
  },
  {
    "text": "let's check the table in aws glue",
    "start": "73280",
    "end": "75200"
  },
  {
    "text": "console",
    "start": "75200",
    "end": "77600"
  },
  {
    "text": "now go to the tables tab",
    "start": "79520",
    "end": "82640"
  },
  {
    "text": "search for the table",
    "start": "82640",
    "end": "87840"
  },
  {
    "text": "open the table",
    "start": "88000",
    "end": "90799"
  },
  {
    "text": "choose edit table",
    "start": "92159",
    "end": "95118"
  },
  {
    "text": "check if the value is for input format",
    "start": "96000",
    "end": "98000"
  },
  {
    "text": "output format and survey serialization",
    "start": "98000",
    "end": "100159"
  },
  {
    "text": "library are populated or not",
    "start": "100159",
    "end": "102079"
  },
  {
    "text": "be mindful that the survey that you",
    "start": "102079",
    "end": "103759"
  },
  {
    "text": "specify defines the table schema",
    "start": "103759",
    "end": "106240"
  },
  {
    "text": "the survey can overwrite the ddl",
    "start": "106240",
    "end": "107920"
  },
  {
    "text": "configuration that you specify in athena",
    "start": "107920",
    "end": "110000"
  },
  {
    "text": "when you create your table",
    "start": "110000",
    "end": "111280"
  },
  {
    "text": "in my table the input format is empty i",
    "start": "111280",
    "end": "113759"
  },
  {
    "text": "miss this field while creating table",
    "start": "113759",
    "end": "115520"
  },
  {
    "text": "from cli command",
    "start": "115520",
    "end": "116880"
  },
  {
    "text": "in input format add the relevant value",
    "start": "116880",
    "end": "119119"
  },
  {
    "text": "based on the file format of the table",
    "start": "119119",
    "end": "122799"
  },
  {
    "text": "save the settings by choosing apply",
    "start": "123600",
    "end": "127438"
  },
  {
    "text": "let's go back to the athena console and",
    "start": "127680",
    "end": "129840"
  },
  {
    "text": "run the dml query again",
    "start": "129840",
    "end": "133200"
  },
  {
    "text": "the query is running successfully this",
    "start": "140400",
    "end": "142239"
  },
  {
    "text": "means that we fix the issue",
    "start": "142239",
    "end": "144800"
  },
  {
    "start": "144000",
    "end": "351000"
  },
  {
    "text": "scenario two athena doesn't support the",
    "start": "144800",
    "end": "147360"
  },
  {
    "text": "data format for files in s3",
    "start": "147360",
    "end": "150080"
  },
  {
    "text": "after logging into the aws management",
    "start": "150080",
    "end": "152080"
  },
  {
    "text": "console navigate to the athena console",
    "start": "152080",
    "end": "157120"
  },
  {
    "text": "here's the example data that i have in",
    "start": "157120",
    "end": "158959"
  },
  {
    "text": "amazon s3",
    "start": "158959",
    "end": "160160"
  },
  {
    "text": "i created table by running aws glue",
    "start": "160160",
    "end": "162480"
  },
  {
    "text": "crawler against the path",
    "start": "162480",
    "end": "170000"
  },
  {
    "text": "i'll run a basic dml query against my",
    "start": "170000",
    "end": "172400"
  },
  {
    "text": "table that was created using aws glue",
    "start": "172400",
    "end": "174720"
  },
  {
    "text": "crawler",
    "start": "174720",
    "end": "177200"
  },
  {
    "text": "my query fails with an exception to",
    "start": "183599",
    "end": "186480"
  },
  {
    "text": "understand further",
    "start": "186480",
    "end": "187519"
  },
  {
    "text": "let's check the table in aws glue",
    "start": "187519",
    "end": "189440"
  },
  {
    "text": "console",
    "start": "189440",
    "end": "191920"
  },
  {
    "text": "then go to the tables tab search for the",
    "start": "194400",
    "end": "197040"
  },
  {
    "text": "table",
    "start": "197040",
    "end": "199840"
  },
  {
    "text": "open the table look for the",
    "start": "201440",
    "end": "204560"
  },
  {
    "text": "classification",
    "start": "204560",
    "end": "205519"
  },
  {
    "text": "field and its value here we see the",
    "start": "205519",
    "end": "208159"
  },
  {
    "text": "classification is xml",
    "start": "208159",
    "end": "211360"
  },
  {
    "text": "currently xml isn't in the list of",
    "start": "211360",
    "end": "213440"
  },
  {
    "text": "supported classifications of athena and",
    "start": "213440",
    "end": "215920"
  },
  {
    "text": "thus the exception",
    "start": "215920",
    "end": "217440"
  },
  {
    "text": "to resolve this you can run an aws glue",
    "start": "217440",
    "end": "220319"
  },
  {
    "text": "etl job on this table to transform the",
    "start": "220319",
    "end": "222480"
  },
  {
    "text": "data",
    "start": "222480",
    "end": "223040"
  },
  {
    "text": "into a classification that is currently",
    "start": "223040",
    "end": "224959"
  },
  {
    "text": "supported by athena",
    "start": "224959",
    "end": "226480"
  },
  {
    "text": "to check the supported formats in the",
    "start": "226480",
    "end": "228239"
  },
  {
    "text": "athena documentation",
    "start": "228239",
    "end": "229599"
  },
  {
    "text": "go to the survey reference section",
    "start": "229599",
    "end": "233200"
  },
  {
    "text": "then choose supported surveys and data",
    "start": "235200",
    "end": "238840"
  },
  {
    "text": "formats",
    "start": "238840",
    "end": "241519"
  },
  {
    "text": "we can see that xml isn't supported you",
    "start": "241519",
    "end": "244080"
  },
  {
    "text": "can choose to transform xml data in one",
    "start": "244080",
    "end": "246239"
  },
  {
    "text": "of the supported formats and then query",
    "start": "246239",
    "end": "248080"
  },
  {
    "text": "again with athena",
    "start": "248080",
    "end": "251040"
  },
  {
    "text": "i created a glue etl job with the script",
    "start": "252319",
    "end": "255120"
  },
  {
    "text": "proposed by aws glue itself",
    "start": "255120",
    "end": "257840"
  },
  {
    "text": "with the source as the xml table create",
    "start": "257840",
    "end": "260639"
  },
  {
    "text": "new table at the data target",
    "start": "260639",
    "end": "262479"
  },
  {
    "text": "option selected and provide an s3 path",
    "start": "262479",
    "end": "265520"
  },
  {
    "text": "for the data target",
    "start": "265520",
    "end": "269840"
  },
  {
    "text": "after successful run of the job it",
    "start": "276960",
    "end": "278880"
  },
  {
    "text": "created json files under the specified",
    "start": "278880",
    "end": "281040"
  },
  {
    "text": "s3 path",
    "start": "281040",
    "end": "283840"
  },
  {
    "text": "i then ran another aws glue crawler",
    "start": "304880",
    "end": "307440"
  },
  {
    "text": "against this path",
    "start": "307440",
    "end": "308479"
  },
  {
    "text": "containing the transform json files",
    "start": "308479",
    "end": "312320"
  },
  {
    "text": "post a successful run of aws glue",
    "start": "317840",
    "end": "319759"
  },
  {
    "text": "crawler it creates another table",
    "start": "319759",
    "end": "321759"
  },
  {
    "text": "pointing to the transform data in json",
    "start": "321759",
    "end": "323840"
  },
  {
    "text": "format",
    "start": "323840",
    "end": "326240"
  },
  {
    "text": "let's query this table in athena",
    "start": "329280",
    "end": "333199"
  },
  {
    "text": "we can now successfully query the data",
    "start": "337600",
    "end": "342000"
  },
  {
    "text": "thanks for watching and happy cloud",
    "start": "342000",
    "end": "343600"
  },
  {
    "text": "computing from all of us here at aws",
    "start": "343600",
    "end": "353680"
  }
]