[
  {
    "text": "[Music]",
    "start": "140",
    "end": "1160"
  },
  {
    "text": "[Applause]",
    "start": "1160",
    "end": "2910"
  },
  {
    "text": "[Music]",
    "start": "2910",
    "end": "6080"
  },
  {
    "text": "hello I am Paris a senior technical",
    "start": "7600",
    "end": "10080"
  },
  {
    "text": "account manager here at the AWS office",
    "start": "10080",
    "end": "12679"
  },
  {
    "text": "in Hunden Virginia today I'm going to",
    "start": "12679",
    "end": "14920"
  },
  {
    "text": "show how you can resolve unable to",
    "start": "14920",
    "end": "17240"
  },
  {
    "text": "import module error while using compiled",
    "start": "17240",
    "end": "20320"
  },
  {
    "text": "python packages on AWS Lambda let's get",
    "start": "20320",
    "end": "23680"
  },
  {
    "text": "started I'm using AWS command line",
    "start": "23680",
    "end": "26519"
  },
  {
    "text": "interface on Mac OS to update and test",
    "start": "26519",
    "end": "29359"
  },
  {
    "text": "the Lambda function if you are using the",
    "start": "29359",
    "end": "31599"
  },
  {
    "text": "AWS CLI you might have to adjust some",
    "start": "31599",
    "end": "34960"
  },
  {
    "text": "commands according to your operating",
    "start": "34960",
    "end": "37160"
  },
  {
    "text": "systems or you can use the AWS Lambda",
    "start": "37160",
    "end": "39920"
  },
  {
    "text": "console to update and test your function",
    "start": "39920",
    "end": "43320"
  },
  {
    "text": "first let's go through my project",
    "start": "43320",
    "end": "45800"
  },
  {
    "text": "directory I am in my project directory I",
    "start": "45800",
    "end": "48840"
  },
  {
    "text": "have a simple function app.py let's see",
    "start": "48840",
    "end": "51719"
  },
  {
    "text": "the contents of the",
    "start": "51719",
    "end": "53840"
  },
  {
    "text": "function the function creates a simple",
    "start": "53840",
    "end": "56440"
  },
  {
    "text": "data frame and then prints it let's",
    "start": "56440",
    "end": "60000"
  },
  {
    "text": "invoke the function to show that it is",
    "start": "60000",
    "end": "62199"
  },
  {
    "text": "currently throwing the import module",
    "start": "62199",
    "end": "64320"
  },
  {
    "text": "error to resolve the issue let's create",
    "start": "64320",
    "end": "67280"
  },
  {
    "text": "a package directory and then install a",
    "start": "67280",
    "end": "70159"
  },
  {
    "text": "pre-compiled and compatible python",
    "start": "70159",
    "end": "72680"
  },
  {
    "text": "packages",
    "start": "72680",
    "end": "73799"
  },
  {
    "text": "wheel first create the folder where you",
    "start": "73799",
    "end": "76920"
  },
  {
    "text": "want to install the required packages",
    "start": "76920",
    "end": "79240"
  },
  {
    "text": "for Target",
    "start": "79240",
    "end": "80920"
  },
  {
    "text": "architecture run the following command",
    "start": "80920",
    "end": "83400"
  },
  {
    "text": "to install the required packages because",
    "start": "83400",
    "end": "86560"
  },
  {
    "text": "my Lambda function is configured for arm",
    "start": "86560",
    "end": "88960"
  },
  {
    "text": "64 architecture piure I am using hyphen",
    "start": "88960",
    "end": "92240"
  },
  {
    "text": "hyphen platform mini Linux 2014 uncore",
    "start": "92240",
    "end": "97040"
  },
  {
    "text": "ACH 64 if your target Lambda is",
    "start": "97040",
    "end": "100399"
  },
  {
    "text": "configured for x86 64 then use hyphen",
    "start": "100399",
    "end": "105759"
  },
  {
    "text": "hyon platform Mani Linux",
    "start": "105759",
    "end": "108840"
  },
  {
    "text": "2014",
    "start": "108840",
    "end": "110520"
  },
  {
    "text": "x86 64 I am using python 32 if you are",
    "start": "110520",
    "end": "115360"
  },
  {
    "text": "using a different version then update",
    "start": "115360",
    "end": "118079"
  },
  {
    "text": "The Hyphen hyphen python hyphen version",
    "start": "118079",
    "end": "120799"
  },
  {
    "text": "argument to the python version that you",
    "start": "120799",
    "end": "123479"
  },
  {
    "text": "are",
    "start": "123479",
    "end": "125679"
  },
  {
    "text": "using next create a deployment zip of",
    "start": "128599",
    "end": "131720"
  },
  {
    "text": "the compiled package this creates a",
    "start": "131720",
    "end": "134440"
  },
  {
    "text": "deployment package ZIP in my project",
    "start": "134440",
    "end": "136400"
  },
  {
    "text": "folder with the compiled code for the",
    "start": "136400",
    "end": "138440"
  },
  {
    "text": "Target architecture next I will add my",
    "start": "138440",
    "end": "141640"
  },
  {
    "text": "Lambda code to the zip",
    "start": "141640",
    "end": "144959"
  },
  {
    "text": "file finally I will update my Lambda",
    "start": "145599",
    "end": "148879"
  },
  {
    "text": "function with the new deployment package",
    "start": "148879",
    "end": "151480"
  },
  {
    "text": "and then test",
    "start": "151480",
    "end": "153959"
  },
  {
    "text": "it and now you know how you can resolve",
    "start": "153959",
    "end": "157080"
  },
  {
    "text": "unable to import module error while",
    "start": "157080",
    "end": "159599"
  },
  {
    "text": "using compiled python packages on AWS",
    "start": "159599",
    "end": "162760"
  },
  {
    "text": "Lambda thanks for watching and happy",
    "start": "162760",
    "end": "165400"
  },
  {
    "text": "cloud computing from all of us here at",
    "start": "165400",
    "end": "168890"
  },
  {
    "text": "[Music]",
    "start": "168890",
    "end": "169910"
  },
  {
    "text": "[Applause]",
    "start": "169910",
    "end": "171660"
  },
  {
    "text": "[Music]",
    "start": "171660",
    "end": "174830"
  },
  {
    "text": "[Music]",
    "start": "176870",
    "end": "178159"
  },
  {
    "text": "AWS",
    "start": "178159",
    "end": "181159"
  }
]