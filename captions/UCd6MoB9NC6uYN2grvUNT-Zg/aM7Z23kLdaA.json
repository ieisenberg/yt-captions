[
  {
    "text": "What's up everyone?",
    "start": "0",
    "end": "1331"
  },
  {
    "text": "If you want to learn how you can build \na cyber security product, stick around.",
    "start": "1331",
    "end": "5322"
  },
  {
    "text": "This is the episode for you.",
    "start": "5322",
    "end": "7152"
  },
  {
    "text": "Today we have Charles,\nthe CEO of Cyberthentic,",
    "start": "15279",
    "end": "19529"
  },
  {
    "text": "a New Jersey start-up that is trying\nto crack the code on email phishing. ",
    "start": "19529",
    "end": "23494"
  },
  {
    "text": "Charles began tinkering with technology \nin the 7th grade while living in Africa. ",
    "start": "23494",
    "end": "28682"
  },
  {
    "text": "He has a PhD in Computer Science  from Texas A&M",
    "start": "28683",
    "end": "32849"
  },
  {
    "text": "and is hungry to bring his 20 plus years \nof security experience ",
    "start": "32849",
    "end": "37324"
  },
  {
    "text": "into his own venture. ",
    "start": "37325",
    "end": "39370"
  },
  {
    "text": "Let's hear from Charles. ",
    "start": "39370",
    "end": "42000"
  },
  {
    "text": "Charles wants to build an application \nthat detects and blocks email phishing. ",
    "start": "80081",
    "end": "84225"
  },
  {
    "text": "I'll give you tips on how to build \nyour own cyber security application ",
    "start": "84225",
    "end": "87990"
  },
  {
    "text": "using AWS. ",
    "start": "87990",
    "end": "90133"
  },
  {
    "text": "Let's check out an email that I just got. ",
    "start": "90134",
    "end": "92523"
  },
  {
    "text": "\"Hi Jillian, \nI hope you're having an awesome time on set.",
    "start": "92523",
    "end": "95266"
  },
  {
    "text": "I can't wait to see how your show turns out! \n-Sally\"",
    "start": "95266",
    "end": "98198"
  },
  {
    "text": "Aw, thanks Sally. ",
    "start": "98198",
    "end": "100099"
  },
  {
    "text": "Let's break down how that email\nwent through safely. ",
    "start": "100099",
    "end": "102659"
  },
  {
    "text": "As soon as Sally hit send \na plugin will call API endpoints, ",
    "start": "102660",
    "end": "106726"
  },
  {
    "text": "using Amazon API Gateway \nwith AWS Lambda functions as the back end. ",
    "start": "106726",
    "end": "111794"
  },
  {
    "text": "API Gateway is a fully managed service\nthat creates, publishes and secures APIs. ",
    "start": "112605",
    "end": "118972"
  },
  {
    "text": "The plugin will perform a series \nof security checks",
    "start": "118972",
    "end": "122594"
  },
  {
    "text": "to look for signals such as improper grammar,\nmisspelled words, ",
    "start": "122594",
    "end": "126854"
  },
  {
    "text": "does the sending domain have a bad reputation, \nand more importantly, is this really Sally. ",
    "start": "126854",
    "end": "132377"
  },
  {
    "text": "Checking for a combination of many signals \nacross a large volume of emails ",
    "start": "132377",
    "end": "137359"
  },
  {
    "text": "is a powerful way to indicate\nthat an email is a threat. ",
    "start": "137359",
    "end": "141181"
  },
  {
    "text": "So as you can see, \nthere's actually a lot going on ",
    "start": "141182",
    "end": "144941"
  },
  {
    "text": "to make sure that email is legit. ",
    "start": "144941",
    "end": "147721"
  },
  {
    "text": "But, what if there were an evil zombie phisher \nthat is pretending to be Sally?",
    "start": "147721",
    "end": "152558"
  },
  {
    "text": "It sends an email saying:\n\"Hay Jullian, it's me, Sally!",
    "start": "154890",
    "end": "159730"
  },
  {
    "text": "I heard ur looking 2 mke\nsum xtra$$$ on theee side ",
    "start": "159730",
    "end": "162642"
  },
  {
    "text": "hit me urp here for some\nDOLLA DOLLA BILLS",
    "start": "162642",
    "end": "165791"
  },
  {
    "text": "www.gimmethatmonayhonay.com ",
    "start": "165791",
    "end": "169875"
  },
  {
    "text": "this is sally by the way!!\"",
    "start": "169875",
    "end": "173197"
  },
  {
    "text": "That is tempting.",
    "start": "173197",
    "end": "174754"
  },
  {
    "text": "There are so many things that \nI could do with that extra cash. ",
    "start": "174754",
    "end": "179082"
  },
  {
    "text": "But I also don't want to risk\nmy bank account getting taken hostage ",
    "start": "179082",
    "end": "184247"
  },
  {
    "text": "and having to pay someone lots of\nbitcoin to get it back. ",
    "start": "184247",
    "end": "188724"
  },
  {
    "text": "This is where machine learning\nwould do the trick. ",
    "start": "188725",
    "end": "191960"
  },
  {
    "text": "Charles could use Amazon SageMaker \nto determine if these emails are likely spam. ",
    "start": "191960",
    "end": "196954"
  },
  {
    "text": "SageMaker is a machine learning service\nto train, build, and deploy models at scale. ",
    "start": "196954",
    "end": "202146"
  },
  {
    "text": "In fact, SageMaker comes with an optimized implementation\nof the Blazing Text Algorithm, ",
    "start": "202146",
    "end": "208580"
  },
  {
    "text": "which is one of many methods \nused for spam detection. ",
    "start": "208580",
    "end": "212280"
  },
  {
    "text": "You can use Amazon Aurora \nto store insights on the malicious emails it received.",
    "start": "212280",
    "end": "218031"
  },
  {
    "text": "Aurora is a MySQL and PostgreS compatible ",
    "start": "218031",
    "end": "221747"
  },
  {
    "text": "relational database built for the cloud. ",
    "start": "221747",
    "end": "224237"
  },
  {
    "text": "You can use Amazon DynamoDB,\na NoSQL database for storing email metadata ",
    "start": "224238",
    "end": "230239"
  },
  {
    "text": "about synthetic attributes. ",
    "start": "230239",
    "end": "232424"
  },
  {
    "text": "DynamoDB can manage structured\nor semi-structured data including JSON documents. ",
    "start": "232424",
    "end": "238125"
  },
  {
    "text": "If the email actually isn't spam,\nthen you just need to update the entry ",
    "start": "238126",
    "end": "243102"
  },
  {
    "text": "in DynamoDB as not spam \nand false positive. ",
    "start": "243102",
    "end": "247176"
  },
  {
    "text": "This data can be used to improve \nthe machine learning model over time. ",
    "start": "247176",
    "end": "251590"
  },
  {
    "text": "Sorry evil zombie, your tactics\nare no match for Charles. ",
    "start": "251590",
    "end": "256165"
  },
  {
    "text": "There are a number of other \nsecurity best practices",
    "start": "256166",
    "end": "259040"
  },
  {
    "text": "that you should implement\nto secure your APIs.",
    "start": "259041",
    "end": "262061"
  },
  {
    "text": "One, implement least privileged access. ",
    "start": "262062",
    "end": "264982"
  },
  {
    "text": "Two, implement logging with \nAWS CloudWatch Logs. ",
    "start": "264982",
    "end": "269053"
  },
  {
    "text": "And three, implement Amazon\nCloudWatch Alarms. ",
    "start": "269053",
    "end": "272518"
  },
  {
    "text": "Four, enable AWS CloudTrail. ",
    "start": "272518",
    "end": "275388"
  },
  {
    "text": "Five, deploy an application firewall\nfor added layer of security in front of API Gateway. ",
    "start": "275388",
    "end": "281417"
  },
  {
    "text": "To control access to the back end, \nuse a feature of API Gateway ",
    "start": "281417",
    "end": "285823"
  },
  {
    "text": "called a Lambda Authorizer. ",
    "start": "285823",
    "end": "288224"
  },
  {
    "text": "A Lambda Authorizer is a Lambda function\nthat controls access to your API. ",
    "start": "288224",
    "end": "293387"
  },
  {
    "text": "When a client makes a request, \nAPI Gateway calls a Lambda Authorizer Function",
    "start": "293387",
    "end": "298459"
  },
  {
    "text": "which takes the caller's identity \nand returns it AWS IAM Policy",
    "start": "298459",
    "end": "303297"
  },
  {
    "text": "that allows access. ",
    "start": "303297",
    "end": "305296"
  },
  {
    "text": "IAM stands for Identity and Access Management",
    "start": "305296",
    "end": "309061"
  },
  {
    "text": "and is the service that enables \nusers to create and assign policies ",
    "start": "309061",
    "end": "313319"
  },
  {
    "text": "that define who and what \nhas access and permissions ",
    "start": "313319",
    "end": "316494"
  },
  {
    "text": "to use specific AWS services. ",
    "start": "316494",
    "end": "319403"
  },
  {
    "text": "The second security best practice\nis to implement logging with AWS CloudWatch Logs. ",
    "start": "319403",
    "end": "325018"
  },
  {
    "text": "You'll want to log all requests to your APIs.",
    "start": "325018",
    "end": "328292"
  },
  {
    "text": "CloudWatch is a monitoring and observability service. ",
    "start": "328292",
    "end": "331785"
  },
  {
    "text": "You could even use CloudWatch to build \na dashboard of emails blocked. ",
    "start": "331785",
    "end": "336064"
  },
  {
    "text": "You'll want to be as proactive\n with security as possible",
    "start": "336064",
    "end": "339291"
  },
  {
    "text": "which means analyzing data from CloudWatch Logs\nand from Amazon GuardDuty. ",
    "start": "339291",
    "end": "344374"
  },
  {
    "text": "GuardDuty is a threat detection service\nthat continuously monitors for malicious activity",
    "start": "344374",
    "end": "349526"
  },
  {
    "text": "and unauthorized behavior to protect\nyour AWS accounts and workloads.",
    "start": "349527",
    "end": "354583"
  },
  {
    "text": "The third security best practice is to\nimplement Amazon CloudWatch Alarms.",
    "start": "354583",
    "end": "359773"
  },
  {
    "text": "Using CloudWatch Alarms, you watch\na single metric over a time period that you specify.  ",
    "start": "359773",
    "end": "365085"
  },
  {
    "text": "If the metric exceeds a given threshold, \na notification is sent to",
    "start": "365085",
    "end": "369065"
  },
  {
    "text": "an Amazon Simple Notification \nService topic. ",
    "start": "369065",
    "end": "372548"
  },
  {
    "text": "Amazon Simple Notification service \nis a secure and fully managed pub sub service. ",
    "start": "372548",
    "end": "377883"
  },
  {
    "text": "This notification could send an email to your customer\nto inform them of something suspicious. ",
    "start": "377883",
    "end": "384039"
  },
  {
    "text": "The fourth is to enable AWS CloudTrail. ",
    "start": "384039",
    "end": "387297"
  },
  {
    "text": "CloudTrail provides event history\nof your AWS account activity.",
    "start": "387297",
    "end": "391860"
  },
  {
    "text": "With CloudTrail you can log \nand determine things like who made the request, ",
    "start": "391860",
    "end": "396416"
  },
  {
    "text": "when it was made and their IP address.",
    "start": "396416",
    "end": "399410"
  },
  {
    "text": "Last, is to deploy an AWS \nWeb Application Firewall",
    "start": "399411",
    "end": "403434"
  },
  {
    "text": "for an added layer of security \nin front of API Gateway.",
    "start": "403434",
    "end": "407362"
  },
  {
    "text": "You can use AWS Web Application Firewall\nto protect your API from common web exploits ",
    "start": "407363",
    "end": "413279"
  },
  {
    "text": "such as SQL injection \nand cross site scripting attacks. ",
    "start": "413279",
    "end": "417030"
  },
  {
    "text": "These are general guidelines.",
    "start": "417030",
    "end": "419545"
  },
  {
    "text": "You'll want to review the security pillar \nat AWS's Well-Architected framework",
    "start": "419545",
    "end": "424027"
  },
  {
    "text": "for an extensive list and explanation\nof security best practices. ",
    "start": "424027",
    "end": "428780"
  },
  {
    "text": "Now, it's time for the recap. ",
    "start": "428780",
    "end": "431958"
  },
  {
    "text": "Amazon API Gateway will control\naccess to your APIs that are running on AWS Lambda. ",
    "start": "431958",
    "end": "438204"
  },
  {
    "text": "Use AWS WAF in front of API Gateway \nfor more fine-grained security.",
    "start": "438204",
    "end": "444756"
  },
  {
    "text": "You can monitor requests \nand access to your APIs and AWS environment",
    "start": "444756",
    "end": "450326"
  },
  {
    "text": "using Amazon CloudWatch Logs,\nAmazon CloudTrail, and Amazon GuardDuty.",
    "start": "450326",
    "end": "456211"
  },
  {
    "text": "Use CloudWatch Alarms \nwith Amazon's Simple Notification Service",
    "start": "456212",
    "end": "460823"
  },
  {
    "text": "to notify you of anything suspicious.",
    "start": "460823",
    "end": "463656"
  },
  {
    "text": "Amazon SageMaker will be \nyour go-to service for all of your machine learning needs. ",
    "start": "463656",
    "end": "469113"
  },
  {
    "text": "Amazon Aurora will store insights\non malicious data ",
    "start": "469113",
    "end": "472885"
  },
  {
    "text": "and Amazon DynamoDB \nwill store metadata and synthetic attributes.",
    "start": "472885",
    "end": "477605"
  },
  {
    "text": "That's how you build a cyber security app in AWS.",
    "start": "477605",
    "end": "482085"
  },
  {
    "text": "It doesn't matter when you start \nas long as you just get started. ",
    "start": "482085",
    "end": "486104"
  },
  {
    "text": "Thanks for hanging out with me.\nSee you next time. ",
    "start": "486105",
    "end": "488882"
  }
]