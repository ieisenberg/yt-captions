[
  {
    "start": "0",
    "end": "55000"
  },
  {
    "text": "hello there good morning good afternoon",
    "start": "30",
    "end": "2820"
  },
  {
    "text": "good evening depending on wherever that",
    "start": "2820",
    "end": "5279"
  },
  {
    "text": "you are watching from right now welcome",
    "start": "5279",
    "end": "7680"
  },
  {
    "text": "to another session of a pack innovate",
    "start": "7680",
    "end": "10380"
  },
  {
    "text": "over the next thirty minutes what do you",
    "start": "10380",
    "end": "12900"
  },
  {
    "text": "do is we will look at how to scale to",
    "start": "12900",
    "end": "15509"
  },
  {
    "text": "the first 10 million users of a web",
    "start": "15509",
    "end": "18210"
  },
  {
    "text": "application and by way of introduction",
    "start": "18210",
    "end": "20820"
  },
  {
    "text": "my name is Shantanu dot and I run the",
    "start": "20820",
    "end": "23850"
  },
  {
    "text": "solutions architecture team for the west",
    "start": "23850",
    "end": "25949"
  },
  {
    "text": "of India based out of Mumbai I have been",
    "start": "25949",
    "end": "29250"
  },
  {
    "text": "here on board AWS just over six years",
    "start": "29250",
    "end": "31380"
  },
  {
    "text": "and I've loved every bit of my stint",
    "start": "31380",
    "end": "33899"
  },
  {
    "text": "here and one of the reasons that I've",
    "start": "33899",
    "end": "36059"
  },
  {
    "text": "enjoyed my time here is customers like",
    "start": "36059",
    "end": "38700"
  },
  {
    "text": "you who bring along various innovative",
    "start": "38700",
    "end": "41010"
  },
  {
    "text": "use cases to run on AWS and those",
    "start": "41010",
    "end": "43680"
  },
  {
    "text": "interactions have been fun and",
    "start": "43680",
    "end": "45629"
  },
  {
    "text": "interesting my twitter handle is also",
    "start": "45629",
    "end": "48300"
  },
  {
    "text": "right up there for you so if you want to",
    "start": "48300",
    "end": "50250"
  },
  {
    "text": "connect with me or if you like something",
    "start": "50250",
    "end": "52050"
  },
  {
    "text": "from my session and I'm happy to connect",
    "start": "52050",
    "end": "53910"
  },
  {
    "text": "with you on Twitter",
    "start": "53910",
    "end": "54660"
  },
  {
    "text": "now talking about scaling your",
    "start": "54660",
    "end": "57329"
  },
  {
    "start": "55000",
    "end": "150000"
  },
  {
    "text": "application that indeed is a very big",
    "start": "57329",
    "end": "59730"
  },
  {
    "text": "topic with lots of opinions guides how",
    "start": "59730",
    "end": "62910"
  },
  {
    "text": "to's there will always be those debates",
    "start": "62910",
    "end": "65250"
  },
  {
    "text": "among people around how do i scale the",
    "start": "65250",
    "end": "68310"
  },
  {
    "text": "way really scale horizontally or do I go",
    "start": "68310",
    "end": "70619"
  },
  {
    "text": "the vertical route well one easy way to",
    "start": "70619",
    "end": "74189"
  },
  {
    "text": "scale is like this right just clone the",
    "start": "74189",
    "end": "78780"
  },
  {
    "text": "Hulk way of scaling and you can scale in",
    "start": "78780",
    "end": "81689"
  },
  {
    "text": "a couple of seconds but then what I",
    "start": "81689",
    "end": "84420"
  },
  {
    "text": "would say there is it's an iterative",
    "start": "84420",
    "end": "86250"
  },
  {
    "text": "process you don't design for ten mill",
    "start": "86250",
    "end": "88979"
  },
  {
    "text": "users right from day one",
    "start": "88979",
    "end": "90630"
  },
  {
    "text": "at least not always and if you're new to",
    "start": "90630",
    "end": "93150"
  },
  {
    "text": "scaling on AWS you might ask yourself",
    "start": "93150",
    "end": "95369"
  },
  {
    "text": "this question so how do I actually scale",
    "start": "95369",
    "end": "98630"
  },
  {
    "text": "and if you like me you will start where",
    "start": "98630",
    "end": "102570"
  },
  {
    "text": "I usually start when I want to learn",
    "start": "102570",
    "end": "104460"
  },
  {
    "text": "something new which is using a search",
    "start": "104460",
    "end": "106950"
  },
  {
    "text": "engine and so as you can see here in",
    "start": "106950",
    "end": "110369"
  },
  {
    "text": "this case I have actually gone and",
    "start": "110369",
    "end": "112590"
  },
  {
    "text": "searched for scaling on AWS as a keyword",
    "start": "112590",
    "end": "116159"
  },
  {
    "text": "in my favorite search engine and whoa",
    "start": "116159",
    "end": "118920"
  },
  {
    "text": "what do we see here clearly this will",
    "start": "118920",
    "end": "121590"
  },
  {
    "text": "take us months if we go this route going",
    "start": "121590",
    "end": "123990"
  },
  {
    "text": "through those million pages of",
    "start": "123990",
    "end": "125310"
  },
  {
    "text": "documentation and links so back to auto",
    "start": "125310",
    "end": "129239"
  },
  {
    "text": "scaling auto scaling really is a tool",
    "start": "129239",
    "end": "132030"
  },
  {
    "text": "and a destination for your",
    "start": "132030",
    "end": "133830"
  },
  {
    "text": "sure it isn't a single solution that",
    "start": "133830",
    "end": "136380"
  },
  {
    "text": "fixes everything it's not just a",
    "start": "136380",
    "end": "138630"
  },
  {
    "text": "checkbox that you can click when",
    "start": "138630",
    "end": "140070"
  },
  {
    "text": "launching something your infrastructure",
    "start": "140070",
    "end": "142350"
  },
  {
    "text": "really has to be built with the right",
    "start": "142350",
    "end": "144180"
  },
  {
    "text": "properties in mind for auto scaling to",
    "start": "144180",
    "end": "146190"
  },
  {
    "text": "work so I would again has the same",
    "start": "146190",
    "end": "148290"
  },
  {
    "text": "question where do we really start well",
    "start": "148290",
    "end": "151170"
  },
  {
    "start": "150000",
    "end": "248000"
  },
  {
    "text": "first let's ask this question what is it",
    "start": "151170",
    "end": "154710"
  },
  {
    "text": "that we really need first and so what I",
    "start": "154710",
    "end": "157890"
  },
  {
    "text": "would say there is we need some basics",
    "start": "157890",
    "end": "160020"
  },
  {
    "text": "to lay the foundations and we need to",
    "start": "160020",
    "end": "162600"
  },
  {
    "text": "build a knowledge of AWS on top of it so",
    "start": "162600",
    "end": "166020"
  },
  {
    "text": "let's get some basics right some of you",
    "start": "166020",
    "end": "169440"
  },
  {
    "text": "may already be aware of this we actually",
    "start": "169440",
    "end": "171900"
  },
  {
    "text": "have 16 regions across this planet with",
    "start": "171900",
    "end": "175140"
  },
  {
    "text": "three more coming up in France China",
    "start": "175140",
    "end": "177210"
  },
  {
    "text": "Sweden they were already announced and",
    "start": "177210",
    "end": "180000"
  },
  {
    "text": "they should be coming soon each of these",
    "start": "180000",
    "end": "182100"
  },
  {
    "text": "regions have multiple availability zones",
    "start": "182100",
    "end": "184500"
  },
  {
    "text": "or Easy's as we call them in short in",
    "start": "184500",
    "end": "187620"
  },
  {
    "text": "addition going on the infrastructure",
    "start": "187620",
    "end": "189390"
  },
  {
    "text": "side again we have 70 plus points of",
    "start": "189390",
    "end": "192480"
  },
  {
    "text": "presence or edge locations globally as",
    "start": "192480",
    "end": "194700"
  },
  {
    "text": "part of a CDN service called Amazon",
    "start": "194700",
    "end": "196710"
  },
  {
    "text": "CloudFront",
    "start": "196710",
    "end": "197700"
  },
  {
    "text": "these are pops acting as cache locations",
    "start": "197700",
    "end": "201060"
  },
  {
    "text": "for some of your static and dynamic",
    "start": "201060",
    "end": "202800"
  },
  {
    "text": "content and we of course have all these",
    "start": "202800",
    "end": "206310"
  },
  {
    "text": "service offerings that you see on this",
    "start": "206310",
    "end": "208560"
  },
  {
    "text": "slide and if you really look at it AWS",
    "start": "208560",
    "end": "211140"
  },
  {
    "text": "has over the years developed the",
    "start": "211140",
    "end": "212520"
  },
  {
    "text": "broadest collection of services",
    "start": "212520",
    "end": "214050"
  },
  {
    "text": "available from any cloud provider there",
    "start": "214050",
    "end": "216959"
  },
  {
    "text": "are these foundational services at the",
    "start": "216959",
    "end": "218550"
  },
  {
    "text": "bottom like compute storage security",
    "start": "218550",
    "end": "220400"
  },
  {
    "text": "networking which offers customers",
    "start": "220400",
    "end": "222780"
  },
  {
    "text": "flexibility in their architecture and",
    "start": "222780",
    "end": "224730"
  },
  {
    "text": "then we also have those higher-level",
    "start": "224730",
    "end": "226470"
  },
  {
    "text": "managed services around databases",
    "start": "226470",
    "end": "228890"
  },
  {
    "text": "mobility containers deployment",
    "start": "228890",
    "end": "231540"
  },
  {
    "text": "management data warehousing and really",
    "start": "231540",
    "end": "233670"
  },
  {
    "text": "many more we have these entire spectrum",
    "start": "233670",
    "end": "236550"
  },
  {
    "text": "of options to meet most price to",
    "start": "236550",
    "end": "238739"
  },
  {
    "text": "performance ratios so lots and lots of",
    "start": "238739",
    "end": "240840"
  },
  {
    "text": "options there but remember what I said",
    "start": "240840",
    "end": "242730"
  },
  {
    "text": "at the beginning that you don't need to",
    "start": "242730",
    "end": "244530"
  },
  {
    "text": "plan for 10 million users right from day",
    "start": "244530",
    "end": "246209"
  },
  {
    "text": "one",
    "start": "246209",
    "end": "246570"
  },
  {
    "text": "there's still time so let's get started",
    "start": "246570",
    "end": "250350"
  },
  {
    "start": "248000",
    "end": "353000"
  },
  {
    "text": "at day one then let's look at what day 1",
    "start": "250350",
    "end": "253950"
  },
  {
    "text": "looks like so day 1 probably looks like",
    "start": "253950",
    "end": "256950"
  },
  {
    "text": "this where you just have one user which",
    "start": "256950",
    "end": "259290"
  },
  {
    "text": "is most likely say yourself you're just",
    "start": "259290",
    "end": "262049"
  },
  {
    "text": "using your own website in beta this here",
    "start": "262049",
    "end": "265169"
  },
  {
    "text": "is the most basic setup you would need",
    "start": "265169",
    "end": "267630"
  },
  {
    "text": "to serve up a web application any user",
    "start": "267630",
    "end": "270450"
  },
  {
    "text": "would first hit amazon route 53 for dns",
    "start": "270450",
    "end": "273990"
  },
  {
    "text": "resolution and behind this dns service",
    "start": "273990",
    "end": "276780"
  },
  {
    "text": "is an Amazon ec2 instance running a web",
    "start": "276780",
    "end": "279510"
  },
  {
    "text": "app and database on a single server we",
    "start": "279510",
    "end": "282720"
  },
  {
    "text": "need to attach an elastic IP so that",
    "start": "282720",
    "end": "285090"
  },
  {
    "text": "route 53 can't direct traffic to our web",
    "start": "285090",
    "end": "287400"
  },
  {
    "text": "stack at that IP address with an error",
    "start": "287400",
    "end": "289410"
  },
  {
    "text": "code and the score scale this",
    "start": "289410",
    "end": "291660"
  },
  {
    "text": "infrastructure the only real option we",
    "start": "291660",
    "end": "293970"
  },
  {
    "text": "have is to get a bigger ec2 instance now",
    "start": "293970",
    "end": "298220"
  },
  {
    "text": "vertically scaling that one ec2 instance",
    "start": "298220",
    "end": "300660"
  },
  {
    "text": "is where we have to go to a larger one",
    "start": "300660",
    "end": "303540"
  },
  {
    "text": "you know giving the instance to a larger",
    "start": "303540",
    "end": "305970"
  },
  {
    "text": "one is the only approach but it's a very",
    "start": "305970",
    "end": "308250"
  },
  {
    "text": "simple approach at the beginning if we",
    "start": "308250",
    "end": "310050"
  },
  {
    "text": "look at it there are lots of different",
    "start": "310050",
    "end": "311760"
  },
  {
    "text": "AWS instance types to go with depending",
    "start": "311760",
    "end": "314430"
  },
  {
    "text": "on your workload we group common",
    "start": "314430",
    "end": "317010"
  },
  {
    "text": "instances into instance families as they",
    "start": "317010",
    "end": "319230"
  },
  {
    "text": "have some characteristics which are",
    "start": "319230",
    "end": "320880"
  },
  {
    "text": "similar some have high i/o some are cpu",
    "start": "320880",
    "end": "324150"
  },
  {
    "text": "optimized others are memory optimized",
    "start": "324150",
    "end": "326190"
  },
  {
    "text": "and we have then those that are storage",
    "start": "326190",
    "end": "328770"
  },
  {
    "text": "optimized there of course the t2",
    "start": "328770",
    "end": "330750"
  },
  {
    "text": "instance types which are capable of",
    "start": "330750",
    "end": "332310"
  },
  {
    "text": "posting based on your cpu credits and",
    "start": "332310",
    "end": "335010"
  },
  {
    "text": "you also have the latest generation of",
    "start": "335010",
    "end": "337080"
  },
  {
    "text": "general purpose instances inside each of",
    "start": "337080",
    "end": "339990"
  },
  {
    "text": "these instance families are different",
    "start": "339990",
    "end": "341610"
  },
  {
    "text": "sizes ranging from micro and the t2",
    "start": "341610",
    "end": "344130"
  },
  {
    "text": "family to 8xl in many other families",
    "start": "344130",
    "end": "347010"
  },
  {
    "text": "this allows you to really scale",
    "start": "347010",
    "end": "349080"
  },
  {
    "text": "vertically inside the family that best",
    "start": "349080",
    "end": "351180"
  },
  {
    "text": "supports your workload but you know this",
    "start": "351180",
    "end": "355050"
  },
  {
    "text": "is all great at the beginning but the",
    "start": "355050",
    "end": "357480"
  },
  {
    "text": "key concern here is that you will",
    "start": "357480",
    "end": "359610"
  },
  {
    "text": "eventually hit an end point where we",
    "start": "359610",
    "end": "361620"
  },
  {
    "text": "just don't have a bigger instance class",
    "start": "361620",
    "end": "363120"
  },
  {
    "text": "out yet and so scaling this way while it",
    "start": "363120",
    "end": "365820"
  },
  {
    "text": "can get you over an initial hump really",
    "start": "365820",
    "end": "368490"
  },
  {
    "text": "isn't going to get you that far on the",
    "start": "368490",
    "end": "370590"
  },
  {
    "text": "long run and the second challenge here",
    "start": "370590",
    "end": "373050"
  },
  {
    "text": "is a single point of failure because if",
    "start": "373050",
    "end": "375330"
  },
  {
    "text": "that single ec2 instance goes down for",
    "start": "375330",
    "end": "377340"
  },
  {
    "text": "some reason you have all your eggs in",
    "start": "377340",
    "end": "379800"
  },
  {
    "text": "one basket and nothing else to take over",
    "start": "379800",
    "end": "382380"
  },
  {
    "text": "the traffic that's coming in so if we",
    "start": "382380",
    "end": "387540"
  },
  {
    "text": "consider the next stage where the number",
    "start": "387540",
    "end": "389340"
  },
  {
    "text": "of users are increasing with more than",
    "start": "389340",
    "end": "391560"
  },
  {
    "text": "one some of your friends have got the",
    "start": "391560",
    "end": "393540"
  },
  {
    "text": "word about your web app and they're",
    "start": "393540",
    "end": "395370"
  },
  {
    "text": "starting to come on your website so you",
    "start": "395370",
    "end": "396750"
  },
  {
    "text": "have a few users now not just one",
    "start": "396750",
    "end": "400370"
  },
  {
    "text": "the first thing we can do to address the",
    "start": "400370",
    "end": "402830"
  },
  {
    "text": "issues of too many eggs in one basket is",
    "start": "402830",
    "end": "405199"
  },
  {
    "text": "to split our web app and database into",
    "start": "405199",
    "end": "407750"
  },
  {
    "text": "two different instances this gives us",
    "start": "407750",
    "end": "410210"
  },
  {
    "text": "much more flexibility in scaling these",
    "start": "410210",
    "end": "412160"
  },
  {
    "text": "two tiers independently and since we are",
    "start": "412160",
    "end": "414919"
  },
  {
    "text": "breaking out the database this is great",
    "start": "414919",
    "end": "416930"
  },
  {
    "text": "time to think about maybe making use of",
    "start": "416930",
    "end": "419090"
  },
  {
    "text": "a database service instead of managing a",
    "start": "419090",
    "end": "420830"
  },
  {
    "text": "DB yourself so what are the options that",
    "start": "420830",
    "end": "423380"
  },
  {
    "text": "we have for those at AWS there are lots",
    "start": "423380",
    "end": "426949"
  },
  {
    "text": "of different options to running",
    "start": "426949",
    "end": "428150"
  },
  {
    "text": "databases one of them is to just install",
    "start": "428150",
    "end": "431120"
  },
  {
    "text": "pretty much any database of your choice",
    "start": "431120",
    "end": "432800"
  },
  {
    "text": "on an ec2 instance and manage all of it",
    "start": "432800",
    "end": "435979"
  },
  {
    "text": "by yourself if you're really comfortable",
    "start": "435979",
    "end": "438470"
  },
  {
    "text": "doing DBA like activities like backups",
    "start": "438470",
    "end": "441080"
  },
  {
    "text": "patching security tuning this could be",
    "start": "441080",
    "end": "444110"
  },
  {
    "text": "very well an option for you also if you",
    "start": "444110",
    "end": "447020"
  },
  {
    "text": "need something specialized or custom and",
    "start": "447020",
    "end": "449360"
  },
  {
    "text": "need to manage that hardware to achieve",
    "start": "449360",
    "end": "451430"
  },
  {
    "text": "this again this could be an option for",
    "start": "451430",
    "end": "453560"
  },
  {
    "text": "you if not and really doing all of those",
    "start": "453560",
    "end": "456500"
  },
  {
    "text": "tasks that I mentioned is really",
    "start": "456500",
    "end": "458300"
  },
  {
    "text": "undifferentiated heavy lifting and",
    "start": "458300",
    "end": "460010"
  },
  {
    "text": "nothing else and if you really want to",
    "start": "460010",
    "end": "462080"
  },
  {
    "text": "go the other route then we do have a few",
    "start": "462080",
    "end": "463880"
  },
  {
    "text": "options like Amazon relational database",
    "start": "463880",
    "end": "466190"
  },
  {
    "text": "service or RDS as we call it which gives",
    "start": "466190",
    "end": "469070"
  },
  {
    "text": "you a manage relational database",
    "start": "469070",
    "end": "470810"
  },
  {
    "text": "offering around several database options",
    "start": "470810",
    "end": "473539"
  },
  {
    "text": "like my sequel sequel server Oracle",
    "start": "473539",
    "end": "476060"
  },
  {
    "text": "Amazon Aurora and many many more we also",
    "start": "476060",
    "end": "479210"
  },
  {
    "text": "then have a choice of our no sequel",
    "start": "479210",
    "end": "481039"
  },
  {
    "text": "database called as Amazon DynamoDB and",
    "start": "481039",
    "end": "483440"
  },
  {
    "text": "then we have Amazon redshift which is a",
    "start": "483440",
    "end": "485510"
  },
  {
    "text": "fast fully managed data warehouse given",
    "start": "485510",
    "end": "489650"
  },
  {
    "text": "that we have all these options that have",
    "start": "489650",
    "end": "491300"
  },
  {
    "text": "spoke in the previous slides from",
    "start": "491300",
    "end": "493039"
  },
  {
    "text": "running pretty much anything you want",
    "start": "493039",
    "end": "494419"
  },
  {
    "text": "yourself to making use of one of the",
    "start": "494419",
    "end": "496130"
  },
  {
    "text": "database services",
    "start": "496130",
    "end": "497180"
  },
  {
    "text": "aw whites how do you really choose",
    "start": "497180",
    "end": "499970"
  },
  {
    "text": "between sequel or no sequel so some",
    "start": "499970",
    "end": "505460"
  },
  {
    "start": "503000",
    "end": "591000"
  },
  {
    "text": "folks won't like this you know but I",
    "start": "505460",
    "end": "508010"
  },
  {
    "text": "would say start with sequel databases",
    "start": "508010",
    "end": "510260"
  },
  {
    "text": "and why do we do that well generally",
    "start": "510260",
    "end": "513919"
  },
  {
    "text": "speaking sequel databases are",
    "start": "513919",
    "end": "515659"
  },
  {
    "text": "established and well won't technology",
    "start": "515659",
    "end": "517909"
  },
  {
    "text": "there's a very good chance that sequel",
    "start": "517909",
    "end": "520190"
  },
  {
    "text": "is older than most people out there",
    "start": "520190",
    "end": "521779"
  },
  {
    "text": "watching this streaming right now it has",
    "start": "521779",
    "end": "524330"
  },
  {
    "text": "continued to power over the years the",
    "start": "524330",
    "end": "526220"
  },
  {
    "text": "most largest web applications we deal on",
    "start": "526220",
    "end": "528860"
  },
  {
    "text": "daily basis there's lots of existing",
    "start": "528860",
    "end": "531410"
  },
  {
    "text": "code books to",
    "start": "531410",
    "end": "532870"
  },
  {
    "text": "communities and people who know and",
    "start": "532870",
    "end": "534760"
  },
  {
    "text": "understand sequel some of these newer no",
    "start": "534760",
    "end": "537880"
  },
  {
    "text": "security databases might have a handful",
    "start": "537880",
    "end": "540130"
  },
  {
    "text": "of companies using them at scale and",
    "start": "540130",
    "end": "541540"
  },
  {
    "text": "that's about it because people are key",
    "start": "541540",
    "end": "543550"
  },
  {
    "text": "here in addition to all those other",
    "start": "543550",
    "end": "545589"
  },
  {
    "text": "points you're gonna need to hire people",
    "start": "545589",
    "end": "547330"
  },
  {
    "text": "to manage your database you also aren't",
    "start": "547330",
    "end": "550390"
  },
  {
    "text": "going to break secret data bases in your",
    "start": "550390",
    "end": "552010"
  },
  {
    "text": "first 10 million users and yes there's",
    "start": "552010",
    "end": "554410"
  },
  {
    "text": "that asterisk sort of condition on the",
    "start": "554410",
    "end": "555850"
  },
  {
    "text": "bottom so my point there is I again",
    "start": "555850",
    "end": "558430"
  },
  {
    "text": "strongly recommend sequel based",
    "start": "558430",
    "end": "559810"
  },
  {
    "text": "technology unless your application is",
    "start": "559810",
    "end": "562690"
  },
  {
    "text": "doing something spectacular and super",
    "start": "562690",
    "end": "564430"
  },
  {
    "text": "weird with the data or you have massive",
    "start": "564430",
    "end": "567400"
  },
  {
    "text": "amounts of data and even then sequel",
    "start": "567400",
    "end": "570250"
  },
  {
    "text": "will be there in your stack somewhere so",
    "start": "570250",
    "end": "573460"
  },
  {
    "text": "now you're probably thinking to yourself",
    "start": "573460",
    "end": "575410"
  },
  {
    "text": "aha you said massive amounts we're the",
    "start": "575410",
    "end": "577960"
  },
  {
    "text": "new startup and have the coolest app in",
    "start": "577960",
    "end": "580060"
  },
  {
    "text": "town and we'll probably have the massive",
    "start": "580060",
    "end": "582160"
  },
  {
    "text": "amounts of data that you're talking",
    "start": "582160",
    "end": "583089"
  },
  {
    "text": "about well there could be a few of you",
    "start": "583089",
    "end": "586120"
  },
  {
    "text": "that would need something like no sequel",
    "start": "586120",
    "end": "588010"
  },
  {
    "text": "at the start",
    "start": "588010",
    "end": "588730"
  },
  {
    "text": "well let's clarify that in a bit if your",
    "start": "588730",
    "end": "592540"
  },
  {
    "start": "591000",
    "end": "684000"
  },
  {
    "text": "usage is such that you'll be generating",
    "start": "592540",
    "end": "594700"
  },
  {
    "text": "lots and lots of data in your first year",
    "start": "594700",
    "end": "596940"
  },
  {
    "text": "terabytes of there and it's really",
    "start": "596940",
    "end": "599140"
  },
  {
    "text": "incredible an intensive workload then no",
    "start": "599140",
    "end": "603010"
  },
  {
    "text": "sequel might be there for you but that's",
    "start": "603010",
    "end": "605290"
  },
  {
    "text": "an incredible amount a large amount of",
    "start": "605290",
    "end": "606940"
  },
  {
    "text": "data and most likely it doesn't go that",
    "start": "606940",
    "end": "608920"
  },
  {
    "text": "way so let's kind of go ahead down let's",
    "start": "608920",
    "end": "612070"
  },
  {
    "text": "kind of look at the next iteration of a",
    "start": "612070",
    "end": "613930"
  },
  {
    "text": "user base reaching more than 100 users",
    "start": "613930",
    "end": "616360"
  },
  {
    "text": "now so we again starting to see some",
    "start": "616360",
    "end": "618220"
  },
  {
    "text": "workloads coming in in terms of the",
    "start": "618220",
    "end": "620440"
  },
  {
    "text": "traffic so for this scenario today and",
    "start": "620440",
    "end": "623020"
  },
  {
    "text": "based upon our discussion that we just",
    "start": "623020",
    "end": "624940"
  },
  {
    "text": "have just a few seconds ago we're going",
    "start": "624940",
    "end": "627550"
  },
  {
    "text": "to go with RDS and my sequel in that RDS",
    "start": "627550",
    "end": "630790"
  },
  {
    "text": "instance as a database engine this",
    "start": "630790",
    "end": "633180"
  },
  {
    "text": "should really take care of the",
    "start": "633180",
    "end": "635860"
  },
  {
    "text": "undifferentiated heavy lifting and that",
    "start": "635860",
    "end": "637870"
  },
  {
    "text": "we spoke about so let's kind of go to",
    "start": "637870",
    "end": "641260"
  },
  {
    "text": "the next iteration now which is a little",
    "start": "641260",
    "end": "644140"
  },
  {
    "text": "more than 100 uses your slide is your",
    "start": "644140",
    "end": "646510"
  },
  {
    "text": "site is slowly becoming popular and the",
    "start": "646510",
    "end": "648910"
  },
  {
    "text": "user base has reached more than thousand",
    "start": "648910",
    "end": "650650"
  },
  {
    "text": "very very quickly starting from one user",
    "start": "650650",
    "end": "652380"
  },
  {
    "text": "so next up what we need to do is address",
    "start": "652380",
    "end": "655570"
  },
  {
    "text": "the lack of failover and redundancy in",
    "start": "655570",
    "end": "658029"
  },
  {
    "text": "your infrastructure we're going to do",
    "start": "658029",
    "end": "659920"
  },
  {
    "text": "this by adding another web app instance",
    "start": "659920",
    "end": "662050"
  },
  {
    "text": "and enabling the multi easy feature of",
    "start": "662050",
    "end": "664839"
  },
  {
    "text": "RDS",
    "start": "664839",
    "end": "665680"
  },
  {
    "text": "which will give us a standby instance in",
    "start": "665680",
    "end": "667899"
  },
  {
    "text": "a different availability zone from the",
    "start": "667899",
    "end": "669819"
  },
  {
    "text": "primary we are also going to replace our",
    "start": "669819",
    "end": "672189"
  },
  {
    "text": "elastic IP with an elastic load balancer",
    "start": "672189",
    "end": "674800"
  },
  {
    "text": "to shade a load between the two web app",
    "start": "674800",
    "end": "676869"
  },
  {
    "text": "instances so now we have an app that is",
    "start": "676869",
    "end": "680139"
  },
  {
    "text": "a little more scalable and has some",
    "start": "680139",
    "end": "682179"
  },
  {
    "text": "fault tolerance built in for those who",
    "start": "682179",
    "end": "685629"
  },
  {
    "start": "684000",
    "end": "780000"
  },
  {
    "text": "aren't familiar with our elastic load",
    "start": "685629",
    "end": "687279"
  },
  {
    "text": "balancer or ELB in short it's a really",
    "start": "687279",
    "end": "690069"
  },
  {
    "text": "highly scalable load balancing service",
    "start": "690069",
    "end": "691929"
  },
  {
    "text": "that we have we put it in front of an",
    "start": "691929",
    "end": "693970"
  },
  {
    "text": "application clear way of multiple",
    "start": "693970",
    "end": "696009"
  },
  {
    "text": "instances that you want to share the",
    "start": "696009",
    "end": "697360"
  },
  {
    "text": "load across maybe really is a great",
    "start": "697360",
    "end": "699399"
  },
  {
    "text": "service in that it doesn't lot for you",
    "start": "699399",
    "end": "701350"
  },
  {
    "text": "without you having to do much of the",
    "start": "701350",
    "end": "702819"
  },
  {
    "text": "heavy lifting it will create a self",
    "start": "702819",
    "end": "704889"
  },
  {
    "text": "feeling and self scaling load balancer",
    "start": "704889",
    "end": "707110"
  },
  {
    "text": "that you can load balanced across the",
    "start": "707110",
    "end": "709240"
  },
  {
    "text": "easies in a region and do things like",
    "start": "709240",
    "end": "711670"
  },
  {
    "text": "SSL termination handle sticky sessions",
    "start": "711670",
    "end": "713980"
  },
  {
    "text": "and it's got multiple listeners to it",
    "start": "713980",
    "end": "716559"
  },
  {
    "text": "will do all of those health checks for",
    "start": "716559",
    "end": "718209"
  },
  {
    "text": "the backend instances behind the scenes",
    "start": "718209",
    "end": "720009"
  },
  {
    "text": "and remove the instances from service if",
    "start": "720009",
    "end": "722529"
  },
  {
    "text": "they are unhealthy this is a very key",
    "start": "722529",
    "end": "724990"
  },
  {
    "text": "service in building highly available",
    "start": "724990",
    "end": "726639"
  },
  {
    "text": "instruction on AWS right oh now",
    "start": "726639",
    "end": "730319"
  },
  {
    "text": "continuing to move on how do you how do",
    "start": "730319",
    "end": "733809"
  },
  {
    "text": "you a site now look like when it's",
    "start": "733809",
    "end": "736149"
  },
  {
    "text": "becoming even more popular with more",
    "start": "736149",
    "end": "737800"
  },
  {
    "text": "than a hundred thousand users now now we",
    "start": "737800",
    "end": "739899"
  },
  {
    "text": "are starting to get a serious load on",
    "start": "739899",
    "end": "741819"
  },
  {
    "text": "your website so now what we'll have is",
    "start": "741819",
    "end": "744819"
  },
  {
    "text": "have our Amazon route 53 service",
    "start": "744819",
    "end": "747370"
  },
  {
    "text": "pointing into ELB instead of the elastic",
    "start": "747370",
    "end": "749679"
  },
  {
    "text": "IP and ELB balancing requests across web",
    "start": "749679",
    "end": "753249"
  },
  {
    "text": "instances you can use the RDS master for",
    "start": "753249",
    "end": "755920"
  },
  {
    "text": "writes and use something called as RDS",
    "start": "755920",
    "end": "758170"
  },
  {
    "text": "read replicas for serving your read",
    "start": "758170",
    "end": "760509"
  },
  {
    "text": "traffic as you can see the stack is",
    "start": "760509",
    "end": "763089"
  },
  {
    "text": "fault tolerant and has scaled quite a",
    "start": "763089",
    "end": "765100"
  },
  {
    "text": "bit from where we started off most of",
    "start": "765100",
    "end": "767949"
  },
  {
    "text": "you will get to this point and be pretty",
    "start": "767949",
    "end": "769959"
  },
  {
    "text": "well off honestly you can take this",
    "start": "769959",
    "end": "771759"
  },
  {
    "text": "really far for most web applications we",
    "start": "771759",
    "end": "774399"
  },
  {
    "text": "could scale this hour another WB zone",
    "start": "774399",
    "end": "776350"
  },
  {
    "text": "maybe add in another T of read replicas",
    "start": "776350",
    "end": "778959"
  },
  {
    "text": "but it's still not that super efficient",
    "start": "778959",
    "end": "782980"
  },
  {
    "start": "780000",
    "end": "956000"
  },
  {
    "text": "in both performance or cost since these",
    "start": "782980",
    "end": "785949"
  },
  {
    "text": "are important too let's try and clean up",
    "start": "785949",
    "end": "788410"
  },
  {
    "text": "this infrastructure a bit now how do we",
    "start": "788410",
    "end": "791619"
  },
  {
    "text": "do that we of course do that by",
    "start": "791619",
    "end": "793689"
  },
  {
    "text": "offloading a few things from the main",
    "start": "793689",
    "end": "795790"
  },
  {
    "text": "web app tier",
    "start": "795790",
    "end": "797540"
  },
  {
    "text": "kind of make it more efficient for",
    "start": "797540",
    "end": "799910"
  },
  {
    "text": "example we can actually start by moving",
    "start": "799910",
    "end": "802579"
  },
  {
    "text": "any static assets from our web app",
    "start": "802579",
    "end": "804410"
  },
  {
    "text": "instance to Amazon simple storage",
    "start": "804410",
    "end": "806779"
  },
  {
    "text": "service also called as s3 that was by",
    "start": "806779",
    "end": "810529"
  },
  {
    "text": "the way our first AWS service that we",
    "start": "810529",
    "end": "812360"
  },
  {
    "text": "released publicly way back in March of",
    "start": "812360",
    "end": "814459"
  },
  {
    "text": "2006 and then you can serve those",
    "start": "814459",
    "end": "817100"
  },
  {
    "text": "objects by Amazon CloudFront this would",
    "start": "817100",
    "end": "819589"
  },
  {
    "text": "be all your images videos CSS JavaScript",
    "start": "819589",
    "end": "822949"
  },
  {
    "text": "or any other heavy static contained",
    "start": "822949",
    "end": "824480"
  },
  {
    "text": "files that you have these files can be",
    "start": "824480",
    "end": "826850"
  },
  {
    "text": "served by an s3 origin and distributed",
    "start": "826850",
    "end": "829940"
  },
  {
    "text": "by a cloud front now this will really",
    "start": "829940",
    "end": "832370"
  },
  {
    "text": "take off a lot of your load of your web",
    "start": "832370",
    "end": "834500"
  },
  {
    "text": "servers and allow you to reduce your",
    "start": "834500",
    "end": "836389"
  },
  {
    "text": "footprint in that web tier which is much",
    "start": "836389",
    "end": "838250"
  },
  {
    "text": "needed now additionally we could use",
    "start": "838250",
    "end": "840949"
  },
  {
    "text": "Amazon DynamoDB in this workflow to",
    "start": "840949",
    "end": "843709"
  },
  {
    "text": "store session information from a web",
    "start": "843709",
    "end": "845569"
  },
  {
    "text": "application and for those who are",
    "start": "845569",
    "end": "847430"
  },
  {
    "text": "wondering what exactly is DynamoDB well",
    "start": "847430",
    "end": "850639"
  },
  {
    "text": "DynamoDB is a managed provision",
    "start": "850639",
    "end": "852920"
  },
  {
    "text": "throughput no sequel database all you",
    "start": "852920",
    "end": "855440"
  },
  {
    "text": "really need to do is turn the crank on",
    "start": "855440",
    "end": "857449"
  },
  {
    "text": "and tell us how many reads and writes",
    "start": "857449",
    "end": "859459"
  },
  {
    "text": "per second your database needs it has",
    "start": "859459",
    "end": "861949"
  },
  {
    "text": "fast predictable performance with really",
    "start": "861949",
    "end": "864470"
  },
  {
    "text": "single-digit millisecond latency",
    "start": "864470",
    "end": "866600"
  },
  {
    "text": "it's fully distributed by the way and",
    "start": "866600",
    "end": "868579"
  },
  {
    "text": "its fault tolerant architecture ensures",
    "start": "868579",
    "end": "871010"
  },
  {
    "text": "that you when you try to dynamodb your",
    "start": "871010",
    "end": "872930"
  },
  {
    "text": "writing data to multiple availability",
    "start": "872930",
    "end": "874310"
  },
  {
    "text": "zones we support JSON as one of the",
    "start": "874310",
    "end": "877069"
  },
  {
    "text": "format's for items to be stored on",
    "start": "877069",
    "end": "878750"
  },
  {
    "text": "dynamo and much larger item sizes then",
    "start": "878750",
    "end": "881569"
  },
  {
    "text": "we used to under some time ago we could",
    "start": "881569",
    "end": "884540"
  },
  {
    "text": "additionally then use Amazon Elastic",
    "start": "884540",
    "end": "887029"
  },
  {
    "text": "cache as a place to store common",
    "start": "887029",
    "end": "889370"
  },
  {
    "text": "database query information for content",
    "start": "889370",
    "end": "891829"
  },
  {
    "text": "that doesn't change often like",
    "start": "891829",
    "end": "893420"
  },
  {
    "text": "information on our user base or what is",
    "start": "893420",
    "end": "896149"
  },
  {
    "text": "in their shopping cart and so on and so",
    "start": "896149",
    "end": "897829"
  },
  {
    "text": "forth we should try and do this as often",
    "start": "897829",
    "end": "900230"
  },
  {
    "text": "as possible so again what is the elastic",
    "start": "900230",
    "end": "902600"
  },
  {
    "text": "cache if you ask him elastic cache is a",
    "start": "902600",
    "end": "905149"
  },
  {
    "text": "hosted memcachedb or Redis instance it",
    "start": "905149",
    "end": "908870"
  },
  {
    "text": "does speak the same API as a traditional",
    "start": "908870",
    "end": "911060"
  },
  {
    "text": "open source products so think of this as",
    "start": "911060",
    "end": "913250"
  },
  {
    "text": "memcache or Redis as a service where we",
    "start": "913250",
    "end": "915889"
  },
  {
    "text": "manage the clusters for you you can",
    "start": "915889",
    "end": "918050"
  },
  {
    "text": "scale from one to many nodes and this",
    "start": "918050",
    "end": "921500"
  },
  {
    "text": "provides very fast",
    "start": "921500",
    "end": "922790"
  },
  {
    "text": "single-digit millisecond latency is",
    "start": "922790",
    "end": "924529"
  },
  {
    "text": "there so now this is what we have",
    "start": "924529",
    "end": "928040"
  },
  {
    "text": "reached here",
    "start": "928040",
    "end": "929120"
  },
  {
    "text": "so far after offloading all that stuff",
    "start": "929120",
    "end": "932149"
  },
  {
    "text": "from the main web app tier two other",
    "start": "932149",
    "end": "933740"
  },
  {
    "text": "components that we just added this is",
    "start": "933740",
    "end": "935930"
  },
  {
    "text": "static content to s3 and CloudFront all",
    "start": "935930",
    "end": "938990"
  },
  {
    "text": "those session state contained on Amazon",
    "start": "938990",
    "end": "941540"
  },
  {
    "text": "DynamoDB this database scaling or",
    "start": "941540",
    "end": "944389"
  },
  {
    "text": "caching option to Amazon Elastic cache",
    "start": "944389",
    "end": "946970"
  },
  {
    "text": "is stored in in the memory in the cache",
    "start": "946970",
    "end": "950089"
  },
  {
    "text": "of elastic cache and in fact you could",
    "start": "950089",
    "end": "952040"
  },
  {
    "text": "even offload some of the dynamic content",
    "start": "952040",
    "end": "953990"
  },
  {
    "text": "to be served by Amazon CloudFront now",
    "start": "953990",
    "end": "957079"
  },
  {
    "start": "956000",
    "end": "1059000"
  },
  {
    "text": "that we have a web tier which is much",
    "start": "957079",
    "end": "959300"
  },
  {
    "text": "more lightweight we can now go back and",
    "start": "959300",
    "end": "961759"
  },
  {
    "text": "revisit the beginning of a talk which",
    "start": "961759",
    "end": "963769"
  },
  {
    "text": "was if you remember auto scaling auto",
    "start": "963769",
    "end": "966829"
  },
  {
    "text": "scaling is the automatic resizing of",
    "start": "966829",
    "end": "969230"
  },
  {
    "text": "application tiers or scaling of compute",
    "start": "969230",
    "end": "972019"
  },
  {
    "text": "clusters of tiers so we can grow or",
    "start": "972019",
    "end": "973999"
  },
  {
    "text": "shrink our web and app tiers as needed",
    "start": "973999",
    "end": "976519"
  },
  {
    "text": "on demand what you can do is just create",
    "start": "976519",
    "end": "979160"
  },
  {
    "text": "a launch configuration which defines",
    "start": "979160",
    "end": "981290"
  },
  {
    "text": "what in each instance you will look",
    "start": "981290",
    "end": "983209"
  },
  {
    "text": "launched what does it look like this",
    "start": "983209",
    "end": "985699"
  },
  {
    "text": "includes items like what is the ami or",
    "start": "985699",
    "end": "988189"
  },
  {
    "text": "Amazon machine image what instance type",
    "start": "988189",
    "end": "990470"
  },
  {
    "text": "do you want to use any bootstrapping etc",
    "start": "990470",
    "end": "992980"
  },
  {
    "text": "next up you could create an auto scaling",
    "start": "992980",
    "end": "995720"
  },
  {
    "text": "group in this group you define the",
    "start": "995720",
    "end": "998209"
  },
  {
    "text": "minimum and maximum servers in the group",
    "start": "998209",
    "end": "999920"
  },
  {
    "text": "the easies you want the tier 2 operating",
    "start": "999920",
    "end": "1002290"
  },
  {
    "text": "and the launch config name and lastly",
    "start": "1002290",
    "end": "1005230"
  },
  {
    "text": "before you end you specify a scaling",
    "start": "1005230",
    "end": "1007209"
  },
  {
    "text": "policies with metrics or a schedule and",
    "start": "1007209",
    "end": "1009399"
  },
  {
    "text": "that's it you're up and running with an",
    "start": "1009399",
    "end": "1011379"
  },
  {
    "text": "auto scale infrastructure and you can do",
    "start": "1011379",
    "end": "1013509"
  },
  {
    "text": "this from the console or from a command",
    "start": "1013509",
    "end": "1016600"
  },
  {
    "text": "line or API so using all of what we have",
    "start": "1016600",
    "end": "1019749"
  },
  {
    "text": "done so far we've seen how we can scale",
    "start": "1019749",
    "end": "1021670"
  },
  {
    "text": "from one user to all the way to 100,000",
    "start": "1021670",
    "end": "1025390"
  },
  {
    "text": "users in fact you could easily reach a",
    "start": "1025390",
    "end": "1028390"
  },
  {
    "text": "million users this way and we'll see how",
    "start": "1028390",
    "end": "1031209"
  },
  {
    "text": "so if you go to more than 500,000 users",
    "start": "1031209",
    "end": "1034480"
  },
  {
    "text": "if you had an auto scaling or caching",
    "start": "1034480",
    "end": "1037120"
  },
  {
    "text": "layer the read replicas with my sequel",
    "start": "1037120",
    "end": "1039069"
  },
  {
    "text": "we can now handle pretty much a serious",
    "start": "1039069",
    "end": "1040959"
  },
  {
    "text": "load there this could potentially even",
    "start": "1040959",
    "end": "1043120"
  },
  {
    "text": "get us into the millions of users range",
    "start": "1043120",
    "end": "1044890"
  },
  {
    "text": "by itself if it's continued to be scaled",
    "start": "1044890",
    "end": "1047350"
  },
  {
    "text": "horizontally and vertically but remember",
    "start": "1047350",
    "end": "1050409"
  },
  {
    "text": "and if you notice this is still a",
    "start": "1050409",
    "end": "1051940"
  },
  {
    "text": "monolithic application all of the",
    "start": "1051940",
    "end": "1054039"
  },
  {
    "text": "application logic is running on each",
    "start": "1054039",
    "end": "1056140"
  },
  {
    "text": "server can we possibly make this even",
    "start": "1056140",
    "end": "1058510"
  },
  {
    "text": "better now you could think of",
    "start": "1058510",
    "end": "1061580"
  },
  {
    "start": "1059000",
    "end": "1210000"
  },
  {
    "text": "taking deployments easy and very",
    "start": "1061580",
    "end": "1063530"
  },
  {
    "text": "repeatable to do this you will need to",
    "start": "1063530",
    "end": "1066080"
  },
  {
    "text": "add automation to your deployments there",
    "start": "1066080",
    "end": "1068990"
  },
  {
    "text": "are tools to automate deployment of AWS",
    "start": "1068990",
    "end": "1071480"
  },
  {
    "text": "resources and there are other tools that",
    "start": "1071480",
    "end": "1074060"
  },
  {
    "text": "manage deployment of your software and",
    "start": "1074060",
    "end": "1075770"
  },
  {
    "text": "configuration of an instance lastly you",
    "start": "1075770",
    "end": "1078740"
  },
  {
    "text": "will want to monitor your application",
    "start": "1078740",
    "end": "1080390"
  },
  {
    "text": "and analyze what users are doing on your",
    "start": "1080390",
    "end": "1082130"
  },
  {
    "text": "application and this can really be done",
    "start": "1082130",
    "end": "1084140"
  },
  {
    "text": "easily with metrics logs and even",
    "start": "1084140",
    "end": "1086630"
  },
  {
    "text": "analytics note that it's very important",
    "start": "1086630",
    "end": "1089750"
  },
  {
    "text": "to notice that managing your",
    "start": "1089750",
    "end": "1091460"
  },
  {
    "text": "infrastructure will become an",
    "start": "1091460",
    "end": "1092930"
  },
  {
    "text": "ever-increasing part of your time I",
    "start": "1092930",
    "end": "1094850"
  },
  {
    "text": "cannot reiterate this enough automate as",
    "start": "1094850",
    "end": "1098120"
  },
  {
    "text": "much as you can and use tools to",
    "start": "1098120",
    "end": "1100430"
  },
  {
    "text": "automate repetitive tasks and we've made",
    "start": "1100430",
    "end": "1102950"
  },
  {
    "text": "those ready-made tools for you to be",
    "start": "1102950",
    "end": "1104660"
  },
  {
    "text": "available at your fingertips so it",
    "start": "1104660",
    "end": "1105830"
  },
  {
    "text": "should be quite easy now we spoke about",
    "start": "1105830",
    "end": "1108920"
  },
  {
    "text": "tools there are quite a few tools there",
    "start": "1108920",
    "end": "1111020"
  },
  {
    "text": "so let's discuss quite a few elastic",
    "start": "1111020",
    "end": "1113750"
  },
  {
    "text": "Beanstalk is easiest to start with",
    "start": "1113750",
    "end": "1116120"
  },
  {
    "text": "elastic being stock really allows you to",
    "start": "1116120",
    "end": "1118280"
  },
  {
    "text": "not worry about managing the",
    "start": "1118280",
    "end": "1119540"
  },
  {
    "text": "infrastructure of your application you",
    "start": "1119540",
    "end": "1121310"
  },
  {
    "text": "simply deploy your app such as a ruby",
    "start": "1121310",
    "end": "1123530"
  },
  {
    "text": "app in a ruby container and elastic beam",
    "start": "1123530",
    "end": "1125960"
  },
  {
    "text": "scott takes care of scaling and managing",
    "start": "1125960",
    "end": "1128240"
  },
  {
    "text": "it all you have to do is just push a",
    "start": "1128240",
    "end": "1129860"
  },
  {
    "text": "button and you're there moving on to",
    "start": "1129860",
    "end": "1132170"
  },
  {
    "text": "opsworks this allows you to manage the",
    "start": "1132170",
    "end": "1134150"
  },
  {
    "text": "lifecycle of a application in layers",
    "start": "1134150",
    "end": "1135890"
  },
  {
    "text": "with chef recipes we have out-of-the-box",
    "start": "1135890",
    "end": "1138860"
  },
  {
    "text": "recipes for managing many different",
    "start": "1138860",
    "end": "1140540"
  },
  {
    "text": "types of layers and you can write custom",
    "start": "1140540",
    "end": "1142610"
  },
  {
    "text": "chef recipes to manage any layers that",
    "start": "1142610",
    "end": "1144950"
  },
  {
    "text": "we don't support as well",
    "start": "1144950",
    "end": "1146440"
  },
  {
    "text": "cloud formation is one of those services",
    "start": "1146440",
    "end": "1149570"
  },
  {
    "text": "which can be underrated really it's one",
    "start": "1149570",
    "end": "1151520"
  },
  {
    "text": "of my favorite services it is basically",
    "start": "1151520",
    "end": "1153680"
  },
  {
    "text": "infrastructure as code it's basically a",
    "start": "1153680",
    "end": "1156380"
  },
  {
    "text": "template and it's a it's a template",
    "start": "1156380",
    "end": "1158720"
  },
  {
    "text": "based tool with its own language so a",
    "start": "1158720",
    "end": "1160550"
  },
  {
    "text": "bit of learning curve there but it's",
    "start": "1160550",
    "end": "1162320"
  },
  {
    "text": "very very powerful all you do is define",
    "start": "1162320",
    "end": "1164780"
  },
  {
    "text": "JSON templates that define what",
    "start": "1164780",
    "end": "1166610"
  },
  {
    "text": "infrastructure you want to build out and",
    "start": "1166610",
    "end": "1168620"
  },
  {
    "text": "any relationships that exist between",
    "start": "1168620",
    "end": "1170870"
  },
  {
    "text": "your infrastructure and if you're",
    "start": "1170870",
    "end": "1173330"
  },
  {
    "text": "wondering whether you could do all of",
    "start": "1173330",
    "end": "1174800"
  },
  {
    "text": "these that has spoke about why are tools",
    "start": "1174800",
    "end": "1176750"
  },
  {
    "text": "and if you're wondering if we could do",
    "start": "1176750",
    "end": "1178160"
  },
  {
    "text": "that manually yes you can of course you",
    "start": "1178160",
    "end": "1180260"
  },
  {
    "text": "can but at scale it's nearly impossible",
    "start": "1180260",
    "end": "1182960"
  },
  {
    "text": "to do so without having a huge team",
    "start": "1182960",
    "end": "1185960"
  },
  {
    "text": "under you to actually do these tasks and",
    "start": "1185960",
    "end": "1188690"
  },
  {
    "text": "even then it won't be very efficient you",
    "start": "1188690",
    "end": "1191630"
  },
  {
    "text": "know recently we also introduced a",
    "start": "1191630",
    "end": "1192950"
  },
  {
    "text": "number of services for storing your code",
    "start": "1192950",
    "end": "1194960"
  },
  {
    "text": "deploying a code and with managing",
    "start": "1194960",
    "end": "1197070"
  },
  {
    "text": "continuous delivery and releasing",
    "start": "1197070",
    "end": "1198330"
  },
  {
    "text": "automate and release automation these",
    "start": "1198330",
    "end": "1200220"
  },
  {
    "text": "services are called code commit code",
    "start": "1200220",
    "end": "1201930"
  },
  {
    "text": "deploy and code pipeline and these",
    "start": "1201930",
    "end": "1204000"
  },
  {
    "text": "really get into the DevOps mode of",
    "start": "1204000",
    "end": "1205620"
  },
  {
    "text": "operating and further help you with",
    "start": "1205620",
    "end": "1207990"
  },
  {
    "text": "automation so moving on we are still in",
    "start": "1207990",
    "end": "1211410"
  },
  {
    "start": "1210000",
    "end": "1568000"
  },
  {
    "text": "a position where we have a very",
    "start": "1211410",
    "end": "1212760"
  },
  {
    "text": "monolithic application where all logic",
    "start": "1212760",
    "end": "1215280"
  },
  {
    "text": "and functionality is running on the web",
    "start": "1215280",
    "end": "1216960"
  },
  {
    "text": "server we have a single web app tier",
    "start": "1216960",
    "end": "1219510"
  },
  {
    "text": "doing all of our application workload",
    "start": "1219510",
    "end": "1221430"
  },
  {
    "text": "while that works for some sites and",
    "start": "1221430",
    "end": "1223680"
  },
  {
    "text": "application for many it doesn't which",
    "start": "1223680",
    "end": "1226350"
  },
  {
    "text": "then brings us to our next topic which",
    "start": "1226350",
    "end": "1229110"
  },
  {
    "text": "is so on what does this actually mean",
    "start": "1229110",
    "end": "1231750"
  },
  {
    "text": "I'll tell you what",
    "start": "1231750",
    "end": "1233340"
  },
  {
    "text": "it doesn't mean first it doesn't mean",
    "start": "1233340",
    "end": "1235380"
  },
  {
    "text": "Sons of Anarchy",
    "start": "1235380",
    "end": "1236340"
  },
  {
    "text": "well at least not in this presentation",
    "start": "1236340",
    "end": "1237990"
  },
  {
    "text": "it does mean service-oriented",
    "start": "1237990",
    "end": "1240180"
  },
  {
    "text": "architecture of and hopefully that is",
    "start": "1240180",
    "end": "1241890"
  },
  {
    "text": "what you expect it and once again if you",
    "start": "1241890",
    "end": "1244470"
  },
  {
    "text": "like me you'll start where I usually",
    "start": "1244470",
    "end": "1246930"
  },
  {
    "text": "start when I want to learn something new",
    "start": "1246930",
    "end": "1248610"
  },
  {
    "text": "which is using a search engine and so in",
    "start": "1248610",
    "end": "1252360"
  },
  {
    "text": "this case again I've gone and searched",
    "start": "1252360",
    "end": "1254400"
  },
  {
    "text": "for solar on AWS in my favorite search",
    "start": "1254400",
    "end": "1256920"
  },
  {
    "text": "engine but war again just like the",
    "start": "1256920",
    "end": "1259890"
  },
  {
    "text": "previous one when we were searching",
    "start": "1259890",
    "end": "1261030"
  },
  {
    "text": "auto-scaling again this is not the place",
    "start": "1261030",
    "end": "1263160"
  },
  {
    "text": "you want to start that's a ton of",
    "start": "1263160",
    "end": "1264660"
  },
  {
    "text": "lengths and webpages now AWS has quite a",
    "start": "1264660",
    "end": "1268140"
  },
  {
    "text": "few services that can solve key",
    "start": "1268140",
    "end": "1270270"
  },
  {
    "text": "functionality areas in your application",
    "start": "1270270",
    "end": "1272330"
  },
  {
    "text": "combining loose coupling so on and even",
    "start": "1272330",
    "end": "1275250"
  },
  {
    "text": "pre-built services can really have some",
    "start": "1275250",
    "end": "1277650"
  },
  {
    "text": "huge advantages instead of you yourself",
    "start": "1277650",
    "end": "1280350"
  },
  {
    "text": "writing all of these mini services",
    "start": "1280350",
    "end": "1281970"
  },
  {
    "text": "yourself just try and leverage some",
    "start": "1281970",
    "end": "1284010"
  },
  {
    "text": "existing services and applications",
    "start": "1284010",
    "end": "1286190"
  },
  {
    "text": "especially when you're starting out do",
    "start": "1286190",
    "end": "1288480"
  },
  {
    "text": "not try and reinvent the wheel because",
    "start": "1288480",
    "end": "1290010"
  },
  {
    "text": "that's going to take a lot of time for",
    "start": "1290010",
    "end": "1291960"
  },
  {
    "text": "example we have build services for bulk",
    "start": "1291960",
    "end": "1294180"
  },
  {
    "text": "email for queuing for transcoding such",
    "start": "1294180",
    "end": "1297120"
  },
  {
    "text": "as a service databases even monitoring",
    "start": "1297120",
    "end": "1299730"
  },
  {
    "text": "and metrics Leon other third parties for",
    "start": "1299730",
    "end": "1302640"
  },
  {
    "text": "more remember loose coupling different",
    "start": "1302640",
    "end": "1304950"
  },
  {
    "text": "tiers of your architecture and using so",
    "start": "1304950",
    "end": "1307020"
  },
  {
    "text": "ax gives you the ability to really move",
    "start": "1307020",
    "end": "1309120"
  },
  {
    "text": "very quickly and when services are",
    "start": "1309120",
    "end": "1311340"
  },
  {
    "text": "loosely coupled they can really scale",
    "start": "1311340",
    "end": "1313320"
  },
  {
    "text": "and be made fault-tolerant independently",
    "start": "1313320",
    "end": "1315840"
  },
  {
    "text": "of each other the lose of the services",
    "start": "1315840",
    "end": "1317820"
  },
  {
    "text": "are and the more they are loosely",
    "start": "1317820",
    "end": "1320250"
  },
  {
    "text": "coupled the larger they can scale so",
    "start": "1320250",
    "end": "1322710"
  },
  {
    "text": "designed everything as a black box build",
    "start": "1322710",
    "end": "1325080"
  },
  {
    "text": "separate services instead of",
    "start": "1325080",
    "end": "1326710"
  },
  {
    "text": "something that's really tight and",
    "start": "1326710",
    "end": "1327970"
  },
  {
    "text": "interacting with something else use",
    "start": "1327970",
    "end": "1329890"
  },
  {
    "text": "common interfaces or common API is",
    "start": "1329890",
    "end": "1331899"
  },
  {
    "text": "between the components and always ensure",
    "start": "1331899",
    "end": "1334240"
  },
  {
    "text": "to favor services with built-in",
    "start": "1334240",
    "end": "1336490"
  },
  {
    "text": "redundancy and scalability rather than",
    "start": "1336490",
    "end": "1338620"
  },
  {
    "text": "building your own you'll always be",
    "start": "1338620",
    "end": "1340270"
  },
  {
    "text": "better served that way now we look at a",
    "start": "1340270",
    "end": "1344559"
  },
  {
    "text": "million users we finally reach the",
    "start": "1344559",
    "end": "1346270"
  },
  {
    "text": "million user range to reach a million",
    "start": "1346270",
    "end": "1349000"
  },
  {
    "text": "you will want to eye trait on many of",
    "start": "1349000",
    "end": "1351159"
  },
  {
    "text": "the previous things such as use of multi",
    "start": "1351159",
    "end": "1353289"
  },
  {
    "text": "AZ maybe use a third availability zone",
    "start": "1353289",
    "end": "1355840"
  },
  {
    "text": "if you have to use of elastic load",
    "start": "1355840",
    "end": "1358210"
  },
  {
    "text": "balancers between the different tiers to",
    "start": "1358210",
    "end": "1359980"
  },
  {
    "text": "loosely couple them and continuing the",
    "start": "1359980",
    "end": "1362320"
  },
  {
    "text": "same so our principles and services that",
    "start": "1362320",
    "end": "1364570"
  },
  {
    "text": "already exist that a bill to scale with",
    "start": "1364570",
    "end": "1366850"
  },
  {
    "text": "you",
    "start": "1366850",
    "end": "1367179"
  },
  {
    "text": "you could offload your web tier by",
    "start": "1367179",
    "end": "1369100"
  },
  {
    "text": "removing static content from the web",
    "start": "1369100",
    "end": "1370809"
  },
  {
    "text": "game and using caching in front of your",
    "start": "1370809",
    "end": "1373960"
  },
  {
    "text": "static and dynamic origins ensure to",
    "start": "1373960",
    "end": "1376510"
  },
  {
    "text": "cache in front of a database and use",
    "start": "1376510",
    "end": "1379000"
  },
  {
    "text": "three zip liquors whenever appropriate",
    "start": "1379000",
    "end": "1380470"
  },
  {
    "text": "for your app reads or any offline",
    "start": "1380470",
    "end": "1382809"
  },
  {
    "text": "reporting or analytics that you might",
    "start": "1382809",
    "end": "1384220"
  },
  {
    "text": "have in your organization also ensure to",
    "start": "1384220",
    "end": "1387370"
  },
  {
    "text": "move your session state of your tears",
    "start": "1387370",
    "end": "1388899"
  },
  {
    "text": "that are auto scalable basically making",
    "start": "1388899",
    "end": "1391539"
  },
  {
    "text": "them stateless now if you look at this",
    "start": "1391539",
    "end": "1394029"
  },
  {
    "text": "diagram it's got a lot of components",
    "start": "1394029",
    "end": "1396220"
  },
  {
    "text": "it's probably missing the second and",
    "start": "1396220",
    "end": "1398020"
  },
  {
    "text": "maybe the third availability zone but",
    "start": "1398020",
    "end": "1399970"
  },
  {
    "text": "you know what there's only so much space",
    "start": "1399970",
    "end": "1401260"
  },
  {
    "text": "we have on this slide but as you can see",
    "start": "1401260",
    "end": "1403960"
  },
  {
    "text": "we have added some internal pools for",
    "start": "1403960",
    "end": "1406029"
  },
  {
    "text": "different tasks perhaps maybe using a",
    "start": "1406029",
    "end": "1408399"
  },
  {
    "text": "simple queuing service for queuing maybe",
    "start": "1408399",
    "end": "1410470"
  },
  {
    "text": "using simple email service for sending",
    "start": "1410470",
    "end": "1412480"
  },
  {
    "text": "outbound bulk email we may have Amazon",
    "start": "1412480",
    "end": "1415929"
  },
  {
    "text": "AWS lambda caching events or items from",
    "start": "1415929",
    "end": "1418630"
  },
  {
    "text": "s3 and dynamo for processing them for",
    "start": "1418630",
    "end": "1421330"
  },
  {
    "text": "event triggers we're using caching for",
    "start": "1421330",
    "end": "1423429"
  },
  {
    "text": "the database and have build stateless",
    "start": "1423429",
    "end": "1425020"
  },
  {
    "text": "tiers for a web and app tiers again our",
    "start": "1425020",
    "end": "1427840"
  },
  {
    "text": "users will still continue to talk with",
    "start": "1427840",
    "end": "1429789"
  },
  {
    "text": "route 53 and then to cloud front to get",
    "start": "1429789",
    "end": "1432190"
  },
  {
    "text": "our site and a content host on the",
    "start": "1432190",
    "end": "1433899"
  },
  {
    "text": "backend by l.b in s3 service so what are",
    "start": "1433899",
    "end": "1438039"
  },
  {
    "text": "the next big steps that we need to think",
    "start": "1438039",
    "end": "1439570"
  },
  {
    "text": "about this is where we are we are at 10",
    "start": "1439570",
    "end": "1444340"
  },
  {
    "text": "million users finally that was our goal",
    "start": "1444340",
    "end": "1446350"
  },
  {
    "text": "for this session if you recollect",
    "start": "1446350",
    "end": "1447640"
  },
  {
    "text": "initially that was a topic of our",
    "start": "1447640",
    "end": "1449080"
  },
  {
    "text": "session and so when you start to get",
    "start": "1449080",
    "end": "1451929"
  },
  {
    "text": "into the ten million user range or even",
    "start": "1451929",
    "end": "1453760"
  },
  {
    "text": "five million user range we may start",
    "start": "1453760",
    "end": "1455860"
  },
  {
    "text": "seeing database contention issues on",
    "start": "1455860",
    "end": "1457870"
  },
  {
    "text": "rights",
    "start": "1457870",
    "end": "1458559"
  },
  {
    "text": "to the master database and the way to",
    "start": "1458559",
    "end": "1461049"
  },
  {
    "text": "solve these types of issues is by",
    "start": "1461049",
    "end": "1463029"
  },
  {
    "text": "federation and shouting because by doing",
    "start": "1463029",
    "end": "1465159"
  },
  {
    "text": "the split horizontally you're helping",
    "start": "1465159",
    "end": "1467679"
  },
  {
    "text": "scale the number of requests your",
    "start": "1467679",
    "end": "1469269"
  },
  {
    "text": "database multiple x times then what it",
    "start": "1469269",
    "end": "1472029"
  },
  {
    "text": "would be with a single RDMs of course as",
    "start": "1472029",
    "end": "1475029"
  },
  {
    "text": "and when you can you could move some of",
    "start": "1475029",
    "end": "1477129"
  },
  {
    "text": "the functionality to other databases",
    "start": "1477129",
    "end": "1478450"
  },
  {
    "text": "like no sequel or craft databases and so",
    "start": "1478450",
    "end": "1480700"
  },
  {
    "text": "on and when splitting this database it",
    "start": "1480700",
    "end": "1483370"
  },
  {
    "text": "also does require making some amount of",
    "start": "1483370",
    "end": "1485470"
  },
  {
    "text": "changes to a cap layer to align to the",
    "start": "1485470",
    "end": "1487870"
  },
  {
    "text": "horizontal split of the database layer",
    "start": "1487870",
    "end": "1489669"
  },
  {
    "text": "so be mindful of those if you haven't",
    "start": "1489669",
    "end": "1491740"
  },
  {
    "text": "done this before",
    "start": "1491740",
    "end": "1493019"
  },
  {
    "text": "all right that went pretty fast now",
    "start": "1493019",
    "end": "1496090"
  },
  {
    "text": "let's do a very quick review before we",
    "start": "1496090",
    "end": "1498519"
  },
  {
    "text": "end so what I mentioned where is always",
    "start": "1498519",
    "end": "1502210"
  },
  {
    "text": "ensure to use multiple availability",
    "start": "1502210",
    "end": "1503679"
  },
  {
    "text": "zones in your infrastructure to build in",
    "start": "1503679",
    "end": "1505749"
  },
  {
    "text": "redundancy used two maybe three ability",
    "start": "1505749",
    "end": "1508929"
  },
  {
    "text": "zones at the beginning if you like",
    "start": "1508929",
    "end": "1510309"
  },
  {
    "text": "always make use of self-healing and save",
    "start": "1510309",
    "end": "1513549"
  },
  {
    "text": "scaling infrastructure and new services",
    "start": "1513549",
    "end": "1515860"
  },
  {
    "text": "like ELB s3 simple notification service",
    "start": "1515860",
    "end": "1518950"
  },
  {
    "text": "simple queuing service lambda or simple",
    "start": "1518950",
    "end": "1521769"
  },
  {
    "text": "email service for bulk mailing build and",
    "start": "1521769",
    "end": "1524110"
  },
  {
    "text": "enunciate every layer of the application",
    "start": "1524110",
    "end": "1526029"
  },
  {
    "text": "and then start with sequel for your",
    "start": "1526029",
    "end": "1528279"
  },
  {
    "text": "database I mean seriously I have",
    "start": "1528279",
    "end": "1529570"
  },
  {
    "text": "reiterated this before as well do not",
    "start": "1529570",
    "end": "1531789"
  },
  {
    "text": "try and make it too complicated and",
    "start": "1531789",
    "end": "1533200"
  },
  {
    "text": "drain when the wheel from day one try",
    "start": "1533200",
    "end": "1535570"
  },
  {
    "text": "and cache data both inside and outside",
    "start": "1535570",
    "end": "1537249"
  },
  {
    "text": "of your infrastructure with the",
    "start": "1537249",
    "end": "1538539"
  },
  {
    "text": "techniques that we discussed and use",
    "start": "1538539",
    "end": "1540429"
  },
  {
    "text": "automation tools in your intra to deploy",
    "start": "1540429",
    "end": "1542950"
  },
  {
    "text": "applications and make it repeatable so",
    "start": "1542950",
    "end": "1545139"
  },
  {
    "text": "use automation as much as possible you",
    "start": "1545139",
    "end": "1547509"
  },
  {
    "text": "should also make sure that you have",
    "start": "1547509",
    "end": "1548559"
  },
  {
    "text": "instrumented application so you know",
    "start": "1548559",
    "end": "1550749"
  },
  {
    "text": "what's going on use the usual soar",
    "start": "1550749",
    "end": "1553059"
  },
  {
    "text": "principles to split things into separate",
    "start": "1553059",
    "end": "1554950"
  },
  {
    "text": "modules and reuse services that are",
    "start": "1554950",
    "end": "1557320"
  },
  {
    "text": "available when you can take advantage of",
    "start": "1557320",
    "end": "1560080"
  },
  {
    "text": "auto scaling of course when it's the",
    "start": "1560080",
    "end": "1561399"
  },
  {
    "text": "right time and when your workloads show",
    "start": "1561399",
    "end": "1564220"
  },
  {
    "text": "the variants for which you require auto",
    "start": "1564220",
    "end": "1566919"
  },
  {
    "text": "scaling now putting all this together",
    "start": "1566919",
    "end": "1570100"
  },
  {
    "text": "means that we should be now easily able",
    "start": "1570100",
    "end": "1572440"
  },
  {
    "text": "to scale and handle 10 plus million",
    "start": "1572440",
    "end": "1574809"
  },
  {
    "text": "users or in fact to 11 million users and",
    "start": "1574809",
    "end": "1578649"
  },
  {
    "text": "to infinity and beyond and so that's",
    "start": "1578649",
    "end": "1581980"
  },
  {
    "text": "what you would do to scale to 10 million",
    "start": "1581980",
    "end": "1583899"
  },
  {
    "text": "business and beyond now before we end",
    "start": "1583899",
    "end": "1586090"
  },
  {
    "text": "this presentation I wanted to also call",
    "start": "1586090",
    "end": "1587950"
  },
  {
    "text": "out that Intel has been a great partner",
    "start": "1587950",
    "end": "1589929"
  },
  {
    "text": "to run the underlying edibles in",
    "start": "1589929",
    "end": "1591590"
  },
  {
    "text": "for us especially the chipset for a",
    "start": "1591590",
    "end": "1593960"
  },
  {
    "text": "compute instances through its",
    "start": "1593960",
    "end": "1595850"
  },
  {
    "text": "relationship over the years antenna has",
    "start": "1595850",
    "end": "1598460"
  },
  {
    "text": "really provided the ADA bless customers",
    "start": "1598460",
    "end": "1600020"
  },
  {
    "text": "with the latest and greatest Intel Xeon",
    "start": "1600020",
    "end": "1601880"
  },
  {
    "text": "processors that help in delivering the",
    "start": "1601880",
    "end": "1603919"
  },
  {
    "text": "highest level of processor performance",
    "start": "1603919",
    "end": "1605059"
  },
  {
    "text": "in Amazon ec2 apart from the usual",
    "start": "1605059",
    "end": "1608210"
  },
  {
    "text": "benefits Intel Xeon processors have",
    "start": "1608210",
    "end": "1610460"
  },
  {
    "text": "several other technology features that",
    "start": "1610460",
    "end": "1612230"
  },
  {
    "text": "can be leveraged by ec2 instances Intel",
    "start": "1612230",
    "end": "1614720"
  },
  {
    "text": "AVX for example is perfect for highly",
    "start": "1614720",
    "end": "1617270"
  },
  {
    "text": "parallel HPC workloads such as life",
    "start": "1617270",
    "end": "1619010"
  },
  {
    "text": "sciences or financial analysis then you",
    "start": "1619010",
    "end": "1621650"
  },
  {
    "text": "have those Intel AES NIR act",
    "start": "1621650",
    "end": "1624140"
  },
  {
    "text": "you know chipset that accelerates",
    "start": "1624140",
    "end": "1626360"
  },
  {
    "text": "encryption and decryption of data",
    "start": "1626360",
    "end": "1627919"
  },
  {
    "text": "therefore it reduces the performance",
    "start": "1627919",
    "end": "1629840"
  },
  {
    "text": "penalty that usually comes to the",
    "start": "1629840",
    "end": "1631309"
  },
  {
    "text": "encryption and then you also have the",
    "start": "1631309",
    "end": "1633230"
  },
  {
    "text": "Intel turbo boost technology that",
    "start": "1633230",
    "end": "1635090"
  },
  {
    "text": "automatically gives more computing power",
    "start": "1635090",
    "end": "1636890"
  },
  {
    "text": "when your workloads are not fully",
    "start": "1636890",
    "end": "1638809"
  },
  {
    "text": "utilizing all CPU cores just think of it",
    "start": "1638809",
    "end": "1641600"
  },
  {
    "text": "as automatic overclocking when you have",
    "start": "1641600",
    "end": "1643460"
  },
  {
    "text": "the thermal Headroom now the matrix on",
    "start": "1643460",
    "end": "1647270"
  },
  {
    "text": "this slide highlights the individual",
    "start": "1647270",
    "end": "1649309"
  },
  {
    "text": "Intel technologies and the ec2 instance",
    "start": "1649309",
    "end": "1651529"
  },
  {
    "text": "families that can leverage each of these",
    "start": "1651529",
    "end": "1653929"
  },
  {
    "text": "technologies I'm going to go through the",
    "start": "1653929",
    "end": "1655820"
  },
  {
    "text": "entire table but if you need more",
    "start": "1655820",
    "end": "1657350"
  },
  {
    "text": "information from this just go to",
    "start": "1657350",
    "end": "1659720"
  },
  {
    "text": "aws.amazon.com slash ec2 - instance",
    "start": "1659720",
    "end": "1665240"
  },
  {
    "text": "types slash and you should get all the",
    "start": "1665240",
    "end": "1668120"
  },
  {
    "text": "information there there are also",
    "start": "1668120",
    "end": "1670340"
  },
  {
    "text": "multiple channels for learning and",
    "start": "1670340",
    "end": "1672260"
  },
  {
    "text": "ramping up why are online trainings",
    "start": "1672260",
    "end": "1674179"
  },
  {
    "text": "instructor-led classes preparing and",
    "start": "1674179",
    "end": "1676370"
  },
  {
    "text": "going through our a double",
    "start": "1676370",
    "end": "1677270"
  },
  {
    "text": "certifications and more so if you're new",
    "start": "1677270",
    "end": "1678950"
  },
  {
    "text": "to AWS I would encourage you to go",
    "start": "1678950",
    "end": "1681110"
  },
  {
    "text": "through these channels to accent your",
    "start": "1681110",
    "end": "1683090"
  },
  {
    "text": "learning paths it's helped most of our",
    "start": "1683090",
    "end": "1684980"
  },
  {
    "text": "customers before well that's it from me",
    "start": "1684980",
    "end": "1687950"
  },
  {
    "text": "for this session I hope it was useful",
    "start": "1687950",
    "end": "1689779"
  },
  {
    "text": "for you and you're ready to scale to the",
    "start": "1689779",
    "end": "1691940"
  },
  {
    "text": "10 million users running on AWS for your",
    "start": "1691940",
    "end": "1694309"
  },
  {
    "text": "web app many money you need to now",
    "start": "1694309",
    "end": "1697010"
  },
  {
    "text": "please do fill up your feedback survey",
    "start": "1697010",
    "end": "1698840"
  },
  {
    "text": "which would give us data point set on",
    "start": "1698840",
    "end": "1700580"
  },
  {
    "text": "what we did well and what we could do",
    "start": "1700580",
    "end": "1702110"
  },
  {
    "text": "better for each of our sessions today",
    "start": "1702110",
    "end": "1703850"
  },
  {
    "text": "and beyond and as you can see there are",
    "start": "1703850",
    "end": "1706909"
  },
  {
    "text": "various channels to connect with us on",
    "start": "1706909",
    "end": "1708799"
  },
  {
    "text": "email as well as on social media well I",
    "start": "1708799",
    "end": "1712070"
  },
  {
    "text": "hope you enjoyed the rest of the",
    "start": "1712070",
    "end": "1713390"
  },
  {
    "text": "sessions for the day that's it from me",
    "start": "1713390",
    "end": "1715279"
  },
  {
    "text": "that's my Twitter handle up there again",
    "start": "1715279",
    "end": "1717049"
  },
  {
    "text": "for now goodbye for me Cheers",
    "start": "1717049",
    "end": "1720620"
  },
  {
    "text": "[Music]",
    "start": "1720620",
    "end": "1723610"
  },
  {
    "text": "you",
    "start": "1723610",
    "end": "1725670"
  }
]