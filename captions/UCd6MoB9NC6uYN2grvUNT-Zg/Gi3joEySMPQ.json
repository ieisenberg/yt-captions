[
  {
    "text": "- [Ravikant] Hi, I'm Ravikant Sharma.",
    "start": "420",
    "end": "2700"
  },
  {
    "text": "I'm a Solutions Architect\nat AWS based out of London.",
    "start": "2700",
    "end": "6899"
  },
  {
    "text": "Welcome to the third video in\nthe Policy Development Series",
    "start": "6900",
    "end": "10170"
  },
  {
    "text": "for Amazon Verified Permissions.",
    "start": "10170",
    "end": "12510"
  },
  {
    "text": "If you haven't watched\nthe previous two videos,",
    "start": "12510",
    "end": "14820"
  },
  {
    "text": "please go and watch it.",
    "start": "14820",
    "end": "16529"
  },
  {
    "text": "You can find the link in\nthe description below.",
    "start": "16530",
    "end": "18880"
  },
  {
    "text": "In this video, we'll have a quick recap",
    "start": "21660",
    "end": "24119"
  },
  {
    "text": "of what we have learned so far\nin the previous two videos.",
    "start": "24120",
    "end": "27900"
  },
  {
    "text": "We'll understand about policies",
    "start": "27900",
    "end": "30420"
  },
  {
    "text": "and Amazon Verified Permissions,",
    "start": "30420",
    "end": "32610"
  },
  {
    "text": "and we'll discuss how policies\nare used in authorization.",
    "start": "32610",
    "end": "36300"
  },
  {
    "text": "We'll also learn about the Test Bench",
    "start": "36300",
    "end": "38190"
  },
  {
    "text": "in Amazon Verified Permissions,",
    "start": "38190",
    "end": "40350"
  },
  {
    "text": "and we'll then see policy\ncreation in action in a demo",
    "start": "40350",
    "end": "43469"
  },
  {
    "text": "for our veterinary portal application.",
    "start": "43470",
    "end": "45840"
  },
  {
    "text": "And at the end, we'll\ntalk about the next step.",
    "start": "45840",
    "end": "48190"
  },
  {
    "text": "In the previous video,",
    "start": "50640",
    "end": "51750"
  },
  {
    "text": "we learned about the Amazon\nVerified Permission Service",
    "start": "51750",
    "end": "54810"
  },
  {
    "text": "and its features.",
    "start": "54810",
    "end": "56220"
  },
  {
    "text": "We also had an introduction",
    "start": "56220",
    "end": "57870"
  },
  {
    "text": "to the Cedar language and\nlearned about the concepts",
    "start": "57870",
    "end": "61260"
  },
  {
    "text": "of Cedar namely, principal,\naction, resource, and condition.",
    "start": "61260",
    "end": "66180"
  },
  {
    "text": "To understand how these\nconcepts applies to application,",
    "start": "66180",
    "end": "70560"
  },
  {
    "text": "we have gone through the\nveterinary portal application.",
    "start": "70560",
    "end": "73323"
  },
  {
    "text": "We defined the policy schema",
    "start": "74340",
    "end": "75990"
  },
  {
    "text": "and learned why it is important",
    "start": "75990",
    "end": "77700"
  },
  {
    "text": "to use schema in Amazon\nVerified Permissions.",
    "start": "77700",
    "end": "80643"
  },
  {
    "text": "Now, what is a policy?",
    "start": "82380",
    "end": "84659"
  },
  {
    "text": "A policy in Amazon Verified Permissions",
    "start": "84660",
    "end": "86970"
  },
  {
    "text": "is a collection of permissions.",
    "start": "86970",
    "end": "89730"
  },
  {
    "text": "These permissions are expressed",
    "start": "89730",
    "end": "91470"
  },
  {
    "text": "using the Cedar policy language.",
    "start": "91470",
    "end": "93840"
  },
  {
    "text": "Using Cedar policies, you\ncan control what each user",
    "start": "93840",
    "end": "97439"
  },
  {
    "text": "of your application is permitted to do",
    "start": "97440",
    "end": "100260"
  },
  {
    "text": "and what resources they may access.",
    "start": "100260",
    "end": "103740"
  },
  {
    "text": "Cedar policies consist of\nthree parts, an effect,",
    "start": "103740",
    "end": "107520"
  },
  {
    "text": "a scope, and an optional\nset of conditions.",
    "start": "107520",
    "end": "111539"
  },
  {
    "text": "Based on the effect, there are\ntwo types of Cedar policies.",
    "start": "111540",
    "end": "114753"
  },
  {
    "text": "An allow policy defined\nby the permit keyword,",
    "start": "115740",
    "end": "118619"
  },
  {
    "text": "or a deny policy defined\nby the forbid keyboard.",
    "start": "118620",
    "end": "121983"
  },
  {
    "text": "Authorization decisions are made",
    "start": "123000",
    "end": "124770"
  },
  {
    "text": "against a body of data\ndefined in a policy.",
    "start": "124770",
    "end": "127799"
  },
  {
    "text": "For example, deciding whether\nan actor can view a resource",
    "start": "127800",
    "end": "131940"
  },
  {
    "text": "would require knowing the\nidentity of the actor,",
    "start": "131940",
    "end": "135360"
  },
  {
    "text": "the resource, and the action\nthey're attempting to perform",
    "start": "135360",
    "end": "139290"
  },
  {
    "text": "Beyond those basics,",
    "start": "139290",
    "end": "140730"
  },
  {
    "text": "if rules refer to specific\nproperties of the entities,",
    "start": "140730",
    "end": "144989"
  },
  {
    "text": "then that detailed\ninformation is needed as well.",
    "start": "144990",
    "end": "147903"
  },
  {
    "text": "Now, let's discuss these components,",
    "start": "149070",
    "end": "151050"
  },
  {
    "text": "the purpose of each and how to use them",
    "start": "151050",
    "end": "153420"
  },
  {
    "text": "to create access control rules.",
    "start": "153420",
    "end": "155493"
  },
  {
    "text": "To represent this data,\nCedar provides four variables",
    "start": "156960",
    "end": "160290"
  },
  {
    "text": "that are built into the language.",
    "start": "160290",
    "end": "162420"
  },
  {
    "text": "These variables are principal,",
    "start": "162420",
    "end": "164490"
  },
  {
    "text": "action, resource, and context.",
    "start": "164490",
    "end": "167370"
  },
  {
    "text": "Principal contains the\ninformation about entity",
    "start": "167370",
    "end": "170400"
  },
  {
    "text": "that is authenticated and\nis performing the action.",
    "start": "170400",
    "end": "174209"
  },
  {
    "text": "Action contains information about",
    "start": "174210",
    "end": "176490"
  },
  {
    "text": "what the principal is trying to do.",
    "start": "176490",
    "end": "178833"
  },
  {
    "text": "Resource contains information\nabout the entity being used.",
    "start": "179730",
    "end": "184319"
  },
  {
    "text": "Context represents\ninformation that is unique",
    "start": "184320",
    "end": "186900"
  },
  {
    "text": "to a particular access request.",
    "start": "186900",
    "end": "189239"
  },
  {
    "text": "At least one of these variables",
    "start": "189240",
    "end": "191310"
  },
  {
    "text": "can be seen in every line of the policy.",
    "start": "191310",
    "end": "194370"
  },
  {
    "text": "While the contents of these variables",
    "start": "194370",
    "end": "196409"
  },
  {
    "text": "will defer between applications,",
    "start": "196410",
    "end": "198630"
  },
  {
    "text": "the variable themselves\nexist in all Cedar policies.",
    "start": "198630",
    "end": "202470"
  },
  {
    "text": "They represent the bedrock so as",
    "start": "202470",
    "end": "204270"
  },
  {
    "text": "to speak upon which rules are expressed.",
    "start": "204270",
    "end": "206793"
  },
  {
    "text": "Now, let's look at some policies",
    "start": "208140",
    "end": "209700"
  },
  {
    "text": "for our veterinary clinic\nportal application.",
    "start": "209700",
    "end": "212430"
  },
  {
    "text": "As you might know,",
    "start": "212430",
    "end": "213599"
  },
  {
    "text": "the Amazon Verified Permission\nPolicy Engine denies",
    "start": "213600",
    "end": "216630"
  },
  {
    "text": "any action that is not explicitly allowed",
    "start": "216630",
    "end": "219270"
  },
  {
    "text": "with a permit policy.",
    "start": "219270",
    "end": "220950"
  },
  {
    "text": "So I would start with building guard rails",
    "start": "220950",
    "end": "223560"
  },
  {
    "text": "for our application.",
    "start": "223560",
    "end": "225060"
  },
  {
    "text": "To do that, I'll create a policy",
    "start": "225060",
    "end": "227610"
  },
  {
    "text": "that denies all actions across clinic.",
    "start": "227610",
    "end": "231120"
  },
  {
    "text": "If the requester, which\nis either a pet owner",
    "start": "231120",
    "end": "234150"
  },
  {
    "text": "or of it does not belong",
    "start": "234150",
    "end": "235950"
  },
  {
    "text": "to the clinic in which they're trying",
    "start": "235950",
    "end": "237660"
  },
  {
    "text": "to access the resource,\ncan you guess what type",
    "start": "237660",
    "end": "240930"
  },
  {
    "text": "of policy we should use?",
    "start": "240930",
    "end": "242372"
  },
  {
    "text": "Probably you have guessed it right.",
    "start": "244890",
    "end": "246569"
  },
  {
    "text": "We'll use a forbid policy,",
    "start": "246570",
    "end": "248760"
  },
  {
    "text": "and we'll add a condition\non ClinicID attribute.",
    "start": "248760",
    "end": "252959"
  },
  {
    "text": "If the ClinicID of the\nprincipal does not match",
    "start": "252960",
    "end": "256049"
  },
  {
    "text": "with the ClinicID of the resource,",
    "start": "256050",
    "end": "258239"
  },
  {
    "text": "then we should deny the access.",
    "start": "258240",
    "end": "260222"
  },
  {
    "text": "Now, let's start giving\npermissions as per our application.",
    "start": "261300",
    "end": "265349"
  },
  {
    "text": "So first, let's allow pet\nowners to register their pets.",
    "start": "265350",
    "end": "269643"
  },
  {
    "text": "Now, since we are talking about allowing,",
    "start": "271410",
    "end": "273540"
  },
  {
    "text": "we will use a permit policy.",
    "start": "273540",
    "end": "275670"
  },
  {
    "text": "In actions, we will define\nRegisterPet as an action",
    "start": "275670",
    "end": "279630"
  },
  {
    "text": "and since we are only allowing\npet owners to register,",
    "start": "279630",
    "end": "283830"
  },
  {
    "text": "therefore, we will add the\nprincipal-type condition",
    "start": "283830",
    "end": "287039"
  },
  {
    "text": "to match with the pet owner type.",
    "start": "287040",
    "end": "289530"
  },
  {
    "text": "Also, we only want the resource\nowner to register their pet,",
    "start": "289530",
    "end": "294000"
  },
  {
    "text": "so we will add another\ncondition on resource owner",
    "start": "294000",
    "end": "297840"
  },
  {
    "text": "should be equal to principal.",
    "start": "297840",
    "end": "299343"
  },
  {
    "text": "If you don't add the second condition,",
    "start": "300240",
    "end": "302250"
  },
  {
    "text": "then any pet owner will\nhave the permission",
    "start": "302250",
    "end": "305310"
  },
  {
    "text": "to add any pet whether or\nnot it belongs to them.",
    "start": "305310",
    "end": "308583"
  },
  {
    "text": "Now, let's take a look\nat a policy for vets.",
    "start": "311250",
    "end": "315300"
  },
  {
    "text": "What if there are users that\nrequire multiple permissions?",
    "start": "315300",
    "end": "319409"
  },
  {
    "text": "For example, vets need to have read",
    "start": "319410",
    "end": "322530"
  },
  {
    "text": "and update permissions on medical records.",
    "start": "322530",
    "end": "325650"
  },
  {
    "text": "For this, we will define a permit policy",
    "start": "325650",
    "end": "329100"
  },
  {
    "text": "with actions as ReadMedicalRecords",
    "start": "329100",
    "end": "330800"
  },
  {
    "text": "and UpdateMedicalRecords along",
    "start": "331740",
    "end": "334319"
  },
  {
    "text": "with a condition on the\nprincipal-type attribute.",
    "start": "334320",
    "end": "337503"
  },
  {
    "text": "So far, we have allowed pet\nowners to register the pet",
    "start": "338700",
    "end": "342750"
  },
  {
    "text": "and vet to read and update\nthe medical records.",
    "start": "342750",
    "end": "346083"
  },
  {
    "text": "Are we missing something?",
    "start": "347010",
    "end": "348260"
  },
  {
    "text": "Yeah, pet owners would also\nneed to have read access",
    "start": "350070",
    "end": "354780"
  },
  {
    "text": "to their pet's medical records.",
    "start": "354780",
    "end": "357360"
  },
  {
    "text": "So let's define a permit policy",
    "start": "357360",
    "end": "359849"
  },
  {
    "text": "that gives read medical records\npermission to pet owners",
    "start": "359850",
    "end": "363990"
  },
  {
    "text": "by using the principal tag attribute.",
    "start": "363990",
    "end": "366393"
  },
  {
    "text": "Now, you have created some policies,",
    "start": "370980",
    "end": "373080"
  },
  {
    "text": "so you would like to test them.",
    "start": "373080",
    "end": "375090"
  },
  {
    "text": "To test the permissions,",
    "start": "375090",
    "end": "376440"
  },
  {
    "text": "you would need to build\nthe application code first",
    "start": "376440",
    "end": "378930"
  },
  {
    "text": "or is it possible to test policies",
    "start": "378930",
    "end": "381360"
  },
  {
    "text": "without using them in application?",
    "start": "381360",
    "end": "383550"
  },
  {
    "text": "The answer is yes.",
    "start": "383550",
    "end": "384843"
  },
  {
    "text": "The Amazon Verified Permissions\nTest Bench allows you",
    "start": "385740",
    "end": "388440"
  },
  {
    "text": "to test and troubleshoot\nverified permissions policies",
    "start": "388440",
    "end": "391920"
  },
  {
    "text": "by running authorization\nrequest against them.",
    "start": "391920",
    "end": "394593"
  },
  {
    "text": "The test bench uses the\nparameter that you specify",
    "start": "395460",
    "end": "398370"
  },
  {
    "text": "to determine whether the Cedar policies",
    "start": "398370",
    "end": "400919"
  },
  {
    "text": "in your application store\nwould authorize a request.",
    "start": "400920",
    "end": "405270"
  },
  {
    "text": "You can also toggle between visual mode",
    "start": "405270",
    "end": "407310"
  },
  {
    "text": "and JSON mode while testing\nauthorization request.",
    "start": "407310",
    "end": "411090"
  },
  {
    "text": "This is useful in the\nsense that it enables you",
    "start": "411090",
    "end": "413730"
  },
  {
    "text": "to test policies even",
    "start": "413730",
    "end": "415500"
  },
  {
    "text": "before the developer has built their code,",
    "start": "415500",
    "end": "418140"
  },
  {
    "text": "thereby, decoupling\npolicy building process",
    "start": "418140",
    "end": "420660"
  },
  {
    "text": "from the code building process.",
    "start": "420660",
    "end": "422223"
  },
  {
    "text": "Let's see how to create policies\nand test them in a demo.",
    "start": "423360",
    "end": "426633"
  },
  {
    "text": "So I'm into the Amazon management console.",
    "start": "430200",
    "end": "433590"
  },
  {
    "text": "I'll start by searching",
    "start": "433590",
    "end": "434910"
  },
  {
    "text": "for the Amazon verified\npermission service,",
    "start": "434910",
    "end": "438993"
  },
  {
    "text": "and I'll click on this.",
    "start": "440010",
    "end": "442380"
  },
  {
    "text": "So we are into the service screen now,",
    "start": "442380",
    "end": "444750"
  },
  {
    "text": "and I can see a policy store ID here",
    "start": "444750",
    "end": "449040"
  },
  {
    "text": "I'll create on the policy store id.",
    "start": "449040",
    "end": "451680"
  },
  {
    "text": "This is the same policy store",
    "start": "451680",
    "end": "453539"
  },
  {
    "text": "that we created in the previous video",
    "start": "453540",
    "end": "456240"
  },
  {
    "text": "where we have defined the schema.",
    "start": "456240",
    "end": "458009"
  },
  {
    "text": "So let's quickly verify that.",
    "start": "458010",
    "end": "460740"
  },
  {
    "text": "So if I choose schema here,",
    "start": "460740",
    "end": "463560"
  },
  {
    "text": "I can see we have the schema defined.",
    "start": "463560",
    "end": "466830"
  },
  {
    "text": "We have two modes, visual\nmode and JSON mode.",
    "start": "466830",
    "end": "470492"
  },
  {
    "text": "And the namespace of the\nschema is VeterinaryPortal.",
    "start": "471840",
    "end": "476100"
  },
  {
    "text": "We have to find two\nprincipals, PetOwner and vet,",
    "start": "476100",
    "end": "480030"
  },
  {
    "text": "and we have to find three\nactions for these principals,",
    "start": "480030",
    "end": "483330"
  },
  {
    "text": "which are ReadMedicalRecords, RegisterPet,",
    "start": "483330",
    "end": "487176"
  },
  {
    "text": "and UpdateMedicalRecords on two resources,",
    "start": "487176",
    "end": "491220"
  },
  {
    "text": "which are MedicalRecords and Pet.",
    "start": "491220",
    "end": "494163"
  },
  {
    "text": "We also have the test bench here.",
    "start": "496320",
    "end": "499140"
  },
  {
    "text": "Test bench help us to test",
    "start": "499140",
    "end": "501420"
  },
  {
    "text": "and troubleshoot the\nverified permission policies.",
    "start": "501420",
    "end": "504600"
  },
  {
    "text": "It helps to evaluate all\npolicies in the policy store",
    "start": "504600",
    "end": "508710"
  },
  {
    "text": "to determine whether a particular request",
    "start": "508710",
    "end": "511169"
  },
  {
    "text": "will be authorized or not.",
    "start": "511170",
    "end": "513419"
  },
  {
    "text": "We have principal.",
    "start": "513420",
    "end": "515162"
  },
  {
    "text": "We can select from the dropdown",
    "start": "516240",
    "end": "518640"
  },
  {
    "text": "whatever principals we\nhave to find in the schema.",
    "start": "518640",
    "end": "521880"
  },
  {
    "text": "We can select the resources here,",
    "start": "521880",
    "end": "524310"
  },
  {
    "text": "and we can select the actions,",
    "start": "524310",
    "end": "526533"
  },
  {
    "text": "and we can choose to run the\nauthorization request once we",
    "start": "528090",
    "end": "530940"
  },
  {
    "text": "are happy with the configuration we have",
    "start": "530940",
    "end": "532950"
  },
  {
    "text": "to find in the test bench.",
    "start": "532950",
    "end": "534383"
  },
  {
    "text": "Now, let's start by\nchoosing policies here.",
    "start": "535800",
    "end": "539640"
  },
  {
    "text": "We will start creating policies",
    "start": "539640",
    "end": "543240"
  },
  {
    "text": "for our veterinary portal application.",
    "start": "543240",
    "end": "545700"
  },
  {
    "text": "I'll start by choosing create policy,",
    "start": "545700",
    "end": "548580"
  },
  {
    "text": "create static policy.",
    "start": "548580",
    "end": "550293"
  },
  {
    "text": "Now, since we are trying\nto create a policy",
    "start": "551640",
    "end": "554130"
  },
  {
    "text": "that will allow pet owners\nto register their pet,",
    "start": "554130",
    "end": "558030"
  },
  {
    "text": "so we'll be using the effect as permit.",
    "start": "558030",
    "end": "561303"
  },
  {
    "text": "Now, for policy scope and resource scope,",
    "start": "562260",
    "end": "565740"
  },
  {
    "text": "I'll use all principals\nand all resources for now",
    "start": "565740",
    "end": "570450"
  },
  {
    "text": "and in action scope, I'll\ngo with a specific action",
    "start": "570450",
    "end": "574290"
  },
  {
    "text": "that is RegisterPet.",
    "start": "574290",
    "end": "575863"
  },
  {
    "text": "Now, let's format the policy.",
    "start": "578134",
    "end": "580680"
  },
  {
    "text": "Here, since we are\ntrying to create a policy",
    "start": "580680",
    "end": "584370"
  },
  {
    "text": "that allows pet owner to register a pet",
    "start": "584370",
    "end": "588240"
  },
  {
    "text": "and not all the principal.",
    "start": "588240",
    "end": "590100"
  },
  {
    "text": "So we'll add a condition\non principal type.",
    "start": "590100",
    "end": "593699"
  },
  {
    "text": "It should be equal to PetOwner.",
    "start": "596610",
    "end": "599102"
  },
  {
    "text": "Our policy looks good.",
    "start": "604031",
    "end": "605280"
  },
  {
    "text": "We do not have any errors or\nwarnings, so we are good to go.",
    "start": "605280",
    "end": "609870"
  },
  {
    "text": "Let me give a description for our policy,",
    "start": "609870",
    "end": "612630"
  },
  {
    "text": "which is to allow pet\nowners to register a pet.",
    "start": "612630",
    "end": "617630"
  },
  {
    "text": "I'll go ahead and choose create policy.",
    "start": "621150",
    "end": "624453"
  },
  {
    "text": "Awesome.",
    "start": "626070",
    "end": "626903"
  },
  {
    "text": "So we have created our first\npolicy and this policy store.",
    "start": "626903",
    "end": "631590"
  },
  {
    "text": "Next, I want to create\na policy for vet owners,",
    "start": "631590",
    "end": "636210"
  },
  {
    "text": "and I want to allow them access to read",
    "start": "636210",
    "end": "639540"
  },
  {
    "text": "and update medical records.",
    "start": "639540",
    "end": "641940"
  },
  {
    "text": "So let's start with\ncreating a static policy.",
    "start": "641940",
    "end": "645630"
  },
  {
    "text": "I'll choose permit policy,",
    "start": "645630",
    "end": "648030"
  },
  {
    "text": "and we'll go ahead and select\nspecific set of actions",
    "start": "648030",
    "end": "652440"
  },
  {
    "text": "which are ReadMedicalRecords\nand UpdateMedicalRecords.",
    "start": "652440",
    "end": "655140"
  },
  {
    "text": "I'll choose next.",
    "start": "657150",
    "end": "658413"
  },
  {
    "text": "And in the condition, I\nwill define that principal,",
    "start": "659790",
    "end": "663483"
  },
  {
    "text": "should be principal.type,\nshould be equals to vet.",
    "start": "664500",
    "end": "669500"
  },
  {
    "text": "This policy will allow vets to have access",
    "start": "672990",
    "end": "676890"
  },
  {
    "text": "to read medical records",
    "start": "676890",
    "end": "679590"
  },
  {
    "text": "and update medical records actions.",
    "start": "679590",
    "end": "682053"
  },
  {
    "text": "Now, we do not have any errors or warnings",
    "start": "682980",
    "end": "686010"
  },
  {
    "text": "which means this is good to go.",
    "start": "686010",
    "end": "688380"
  },
  {
    "text": "Let's define the policy description.",
    "start": "688380",
    "end": "692193"
  },
  {
    "text": "Let's choose create policy. Great.",
    "start": "702150",
    "end": "705870"
  },
  {
    "text": "So our policy for vets is also created.",
    "start": "705870",
    "end": "708243"
  },
  {
    "text": "Now, I want to create\nguardrails for my application,",
    "start": "709380",
    "end": "713520"
  },
  {
    "text": "and I do not want to allow pet\nowners to register their pet",
    "start": "713520",
    "end": "718520"
  },
  {
    "text": "in any other clinic or vets\nto access medical records",
    "start": "718770",
    "end": "723600"
  },
  {
    "text": "of pets in some other clinic,",
    "start": "723600",
    "end": "726060"
  },
  {
    "text": "which means only the principals belonging",
    "start": "726060",
    "end": "730350"
  },
  {
    "text": "to a particular clinic should be able",
    "start": "730350",
    "end": "732509"
  },
  {
    "text": "to access resources of\nthat particular clinic.",
    "start": "732510",
    "end": "737250"
  },
  {
    "text": "So what we will do is to\ncreate another policy,",
    "start": "737250",
    "end": "741300"
  },
  {
    "text": "and this time, I'll\nchoose the forbid policy.",
    "start": "741300",
    "end": "744513"
  },
  {
    "text": "I'll keep principal\nresource and action as it is",
    "start": "746610",
    "end": "751610"
  },
  {
    "text": "and we'll choose next.",
    "start": "751620",
    "end": "753360"
  },
  {
    "text": "Here, I'll define a condition\non principal.ClinicID,",
    "start": "753360",
    "end": "758043"
  },
  {
    "text": "should not be equal to resource.ClinicID",
    "start": "762120",
    "end": "766420"
  },
  {
    "text": "because if this happens,",
    "start": "770370",
    "end": "771690"
  },
  {
    "text": "then we will not allow\nusers to have access.",
    "start": "771690",
    "end": "775893"
  },
  {
    "text": "We have couple of warnings here.",
    "start": "777750",
    "end": "779673"
  },
  {
    "text": "Oh, I have made a typo on\nthe ClinicID attribute.",
    "start": "781260",
    "end": "786240"
  },
  {
    "text": "Let me fix that.",
    "start": "786240",
    "end": "787863"
  },
  {
    "text": "Perfect.",
    "start": "791880",
    "end": "793530"
  },
  {
    "text": "This is important because\nwe could only catch",
    "start": "793530",
    "end": "797640"
  },
  {
    "text": "these kind of errors if\nwe have schema defined.",
    "start": "797640",
    "end": "800850"
  },
  {
    "text": "Otherwise, this would\nallow us to proceed forward",
    "start": "800850",
    "end": "804149"
  },
  {
    "text": "and then we will have we policy\nvalidation issues later on.",
    "start": "804150",
    "end": "808110"
  },
  {
    "text": "So it is important to define\nthe proper schema early on.",
    "start": "808110",
    "end": "812193"
  },
  {
    "text": "I'll provide the description,",
    "start": "814860",
    "end": "816423"
  },
  {
    "text": "deny all requests across clinic,",
    "start": "819180",
    "end": "822063"
  },
  {
    "text": "and we'll choose create policy.",
    "start": "827820",
    "end": "830010"
  },
  {
    "text": "Great, so we have created\nour deny policy as well.",
    "start": "830010",
    "end": "833190"
  },
  {
    "text": "Now, pet owners also require permission",
    "start": "833190",
    "end": "836700"
  },
  {
    "text": "to view the pet's medical record.",
    "start": "836700",
    "end": "839280"
  },
  {
    "text": "So we'll create another\npolicy for pet owners,",
    "start": "839280",
    "end": "843060"
  },
  {
    "text": "and this time, we will\ngive them permission",
    "start": "843060",
    "end": "846660"
  },
  {
    "text": "to read the medical records.",
    "start": "846660",
    "end": "849720"
  },
  {
    "text": "So I'll choose read medical\nrecords, and we'll choose next.",
    "start": "849720",
    "end": "854162"
  },
  {
    "text": "Here, I'll define a\ncondition, principal.type",
    "start": "856050",
    "end": "860797"
  },
  {
    "text": "that should be equal to pet owner,",
    "start": "863130",
    "end": "866133"
  },
  {
    "text": "and we will define another\ncondition on resource.owner,",
    "start": "868980",
    "end": "873980"
  },
  {
    "text": "should be called to principal.",
    "start": "878430",
    "end": "881403"
  },
  {
    "text": "Allow pet owners to read\nmedical records of their pets.",
    "start": "888330",
    "end": "893330"
  },
  {
    "text": "We'll choose create policy.",
    "start": "900330",
    "end": "902253"
  },
  {
    "text": "Great, so our policy has\nbeen created successfully.",
    "start": "903270",
    "end": "907170"
  },
  {
    "text": "Now, we have created four policies,",
    "start": "907170",
    "end": "910529"
  },
  {
    "text": "and we would want to test these policies,",
    "start": "910530",
    "end": "913650"
  },
  {
    "text": "so we will switch to test bench.",
    "start": "913650",
    "end": "916953"
  },
  {
    "text": "Now, in the test bench,",
    "start": "917970",
    "end": "920399"
  },
  {
    "text": "I'll start with selecting the principal.",
    "start": "920400",
    "end": "923550"
  },
  {
    "text": "So first, let me test for the pet owner.",
    "start": "923550",
    "end": "927690"
  },
  {
    "text": "Assume we have a pet owner named, Victor.",
    "start": "927690",
    "end": "932230"
  },
  {
    "text": "We will define ClinicID as Houston.",
    "start": "933570",
    "end": "936500"
  },
  {
    "text": "I'll copy it. I'll need it later.",
    "start": "941790",
    "end": "943953"
  },
  {
    "text": "Our type would be PetOwner.",
    "start": "944880",
    "end": "947880"
  },
  {
    "text": "Is email verified? Would be set to true.",
    "start": "947880",
    "end": "951780"
  },
  {
    "text": "This will be used in the application.",
    "start": "951780",
    "end": "954060"
  },
  {
    "text": "As of now, we haven't defined any policy",
    "start": "954060",
    "end": "956340"
  },
  {
    "text": "that uses is email verified.",
    "start": "956340",
    "end": "958470"
  },
  {
    "text": "So this has no effect",
    "start": "958470",
    "end": "959639"
  },
  {
    "text": "on the authorization request as of now.",
    "start": "959640",
    "end": "962823"
  },
  {
    "text": "For resource, I will\nuse the pet named, Luna.",
    "start": "964920",
    "end": "969920"
  },
  {
    "text": "The ClinicID should be Houston",
    "start": "974580",
    "end": "977520"
  },
  {
    "text": "and the pet owner should be Victor.",
    "start": "977520",
    "end": "980403"
  },
  {
    "text": "And action, I should have RegisterPet.",
    "start": "981390",
    "end": "984873"
  },
  {
    "text": "So we have defined a request,",
    "start": "986160",
    "end": "991139"
  },
  {
    "text": "and let's test the authorization request",
    "start": "991140",
    "end": "994680"
  },
  {
    "text": "by choosing run authorization request.",
    "start": "994680",
    "end": "997383"
  },
  {
    "text": "So the decision is allow\nbecause it satisfies",
    "start": "998760",
    "end": "1001820"
  },
  {
    "text": "a policy that allows pet\nowner to register their pet.",
    "start": "1001820",
    "end": "1005213"
  },
  {
    "text": "Here, if, let's say,",
    "start": "1006140",
    "end": "1008300"
  },
  {
    "text": "I change the resource ClinicID to London,",
    "start": "1008300",
    "end": "1013300"
  },
  {
    "text": "ideally, it should not\nallow me to register it",
    "start": "1015320",
    "end": "1017930"
  },
  {
    "text": "because the pet owner belongs\nto the ClinicID, Houston,",
    "start": "1017930",
    "end": "1022930"
  },
  {
    "text": "and the resource is\nnow in London ClinicID.",
    "start": "1024410",
    "end": "1029410"
  },
  {
    "text": "So let's see if this denies the request.",
    "start": "1029540",
    "end": "1032543"
  },
  {
    "text": "And yes, our policy framework\nis working as expected.",
    "start": "1034160",
    "end": "1038900"
  },
  {
    "text": "This request has been denied.",
    "start": "1038900",
    "end": "1041060"
  },
  {
    "text": "Now, let's just a condition for vet.",
    "start": "1041060",
    "end": "1046060"
  },
  {
    "text": "So I'll select vet here,",
    "start": "1046430",
    "end": "1049100"
  },
  {
    "text": "and I'll name the vet as Rashmi.",
    "start": "1049100",
    "end": "1051803"
  },
  {
    "text": "ClinicID would be Houston.\nType should be Vet.",
    "start": "1053840",
    "end": "1058583"
  },
  {
    "text": "So let's say, this vet wants\nto access the medical records",
    "start": "1060500",
    "end": "1065500"
  },
  {
    "text": "of a pet whose owner is Victor",
    "start": "1069440",
    "end": "1073379"
  },
  {
    "text": "and the ClinicID is Houston.",
    "start": "1075320",
    "end": "1078742"
  },
  {
    "text": "Now, the action is ReadMedicalRecords.",
    "start": "1080390",
    "end": "1082968"
  },
  {
    "text": "Here, we have two options\nbecause we have allowed vet",
    "start": "1082968",
    "end": "1086480"
  },
  {
    "text": "to either the read the medical records",
    "start": "1086480",
    "end": "1089179"
  },
  {
    "text": "or update the medical records.",
    "start": "1089180",
    "end": "1090773"
  },
  {
    "text": "Now, we have to choose an attribute",
    "start": "1091730",
    "end": "1095240"
  },
  {
    "text": "which is is MF authenticated.",
    "start": "1095240",
    "end": "1097520"
  },
  {
    "text": "We have defined this in the schema,",
    "start": "1097520",
    "end": "1099470"
  },
  {
    "text": "and this is to ensure\nthat the sensitive data",
    "start": "1099470",
    "end": "1103580"
  },
  {
    "text": "is protected with a\nmultifactor authentication.",
    "start": "1103580",
    "end": "1106433"
  },
  {
    "text": "Since the medical records\nare sensitive data,",
    "start": "1107420",
    "end": "1111740"
  },
  {
    "text": "so we have protected it with MFA.",
    "start": "1111740",
    "end": "1113723"
  },
  {
    "text": "However, we haven't defined\npolicy based on this,",
    "start": "1114650",
    "end": "1118940"
  },
  {
    "text": "so it does not have any effect as",
    "start": "1118940",
    "end": "1121220"
  },
  {
    "text": "of now on the authorization request.",
    "start": "1121220",
    "end": "1124309"
  },
  {
    "text": "So I will now check further,",
    "start": "1124310",
    "end": "1127010"
  },
  {
    "text": "and it is asking us to\nadd additional entity",
    "start": "1127010",
    "end": "1129260"
  },
  {
    "text": "because we have added Victor\nas the pet owner here.",
    "start": "1129260",
    "end": "1134120"
  },
  {
    "text": "So I'll quickly add it,",
    "start": "1134120",
    "end": "1136309"
  },
  {
    "text": "and we'll edit couple of fields.",
    "start": "1136310",
    "end": "1139733"
  },
  {
    "text": "The type should be pet owner for Victor",
    "start": "1142190",
    "end": "1144450"
  },
  {
    "text": "and his email verify should be true.",
    "start": "1146120",
    "end": "1148043"
  },
  {
    "text": "Let's run and it should allow.",
    "start": "1150770",
    "end": "1152543"
  },
  {
    "text": "Perfect, so we can see that\nour policy store policies",
    "start": "1153620",
    "end": "1158620"
  },
  {
    "text": "are working as expected,\nand they are following",
    "start": "1158870",
    "end": "1162740"
  },
  {
    "text": "the schema which we have defined.",
    "start": "1162740",
    "end": "1164990"
  },
  {
    "text": "That's it for the demo. Thank you.",
    "start": "1164990",
    "end": "1167510"
  },
  {
    "text": "As part of this demo,\nwe created few policies",
    "start": "1167510",
    "end": "1170390"
  },
  {
    "text": "for our veterinary portal application",
    "start": "1170390",
    "end": "1172520"
  },
  {
    "text": "where the pet owners\ncan register their pets",
    "start": "1172520",
    "end": "1174800"
  },
  {
    "text": "and view their medical records.",
    "start": "1174800",
    "end": "1176630"
  },
  {
    "text": "And vets can update and view\nthe medical records of the pet.",
    "start": "1176630",
    "end": "1180230"
  },
  {
    "text": "We also tested the policies\nusing the Test Bench",
    "start": "1180230",
    "end": "1182720"
  },
  {
    "text": "and learned how to\ntroubleshoot the policies.",
    "start": "1182720",
    "end": "1185813"
  },
  {
    "text": "In this video, we learned\nabout the policies",
    "start": "1188840",
    "end": "1191480"
  },
  {
    "text": "in Amazon Verified Permissions",
    "start": "1191480",
    "end": "1193669"
  },
  {
    "text": "and how we can use the\npolicies and authorization.",
    "start": "1193670",
    "end": "1197510"
  },
  {
    "text": "We also learned how",
    "start": "1197510",
    "end": "1198590"
  },
  {
    "text": "to test the policies using the Test Bench",
    "start": "1198590",
    "end": "1201080"
  },
  {
    "text": "and how to troubleshoot the policies.",
    "start": "1201080",
    "end": "1203480"
  },
  {
    "text": "At the end, we implemented the policies",
    "start": "1203480",
    "end": "1205640"
  },
  {
    "text": "for veterinary portal\napplication in the demo.",
    "start": "1205640",
    "end": "1208610"
  },
  {
    "text": "I hope you have learned something new",
    "start": "1208610",
    "end": "1210530"
  },
  {
    "text": "about the Amazon Verified\nPermissions today,",
    "start": "1210530",
    "end": "1213140"
  },
  {
    "text": "and you can now create your own policies",
    "start": "1213140",
    "end": "1215300"
  },
  {
    "text": "and test them using the test bench.",
    "start": "1215300",
    "end": "1217050"
  },
  {
    "text": "Happy building on AWS.",
    "start": "1218000",
    "end": "1219713"
  },
  {
    "text": "To learn more about Amazon\nVerified Permissions and schema,",
    "start": "1221900",
    "end": "1225290"
  },
  {
    "text": "please scan the QR codes on the screen.",
    "start": "1225290",
    "end": "1227363"
  },
  {
    "text": "Thanks.",
    "start": "1229400",
    "end": "1230233"
  }
]