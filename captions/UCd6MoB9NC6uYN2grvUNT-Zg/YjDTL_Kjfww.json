[
  {
    "start": "0",
    "end": "75000"
  },
  {
    "text": "all right okay all of you are back amazing all right",
    "start": "10099",
    "end": "16270"
  },
  {
    "text": "you had coffee yeah you go tea maybe okay so here's that deep lense thing",
    "start": "16270",
    "end": "21849"
  },
  {
    "text": "right hopefully it's more than a paperweight we'll see right we see that we'll see that later on today okay so",
    "start": "21849",
    "end": "29250"
  },
  {
    "text": "the first session was a pretty hectic",
    "start": "29250",
    "end": "34589"
  },
  {
    "text": "race through a whole lot of services okay just to give you the big picture",
    "start": "34589",
    "end": "39820"
  },
  {
    "text": "and now we're going to start diving deeper and we're going to focus in this session on deep learning the technology",
    "start": "39820",
    "end": "47559"
  },
  {
    "text": "what you can do with it from a developer point of view we're going to start looking at notebooks train some models",
    "start": "47559",
    "end": "54629"
  },
  {
    "text": "learn some stuff okay and in the next session you'll focus",
    "start": "54629",
    "end": "60090"
  },
  {
    "text": "with ian on chatbots okay which are another massive application of deep",
    "start": "60090",
    "end": "67750"
  },
  {
    "text": "running okay so what are we gonna cover here so we're gonna say a quick word about AI general I you know I want to",
    "start": "67750",
    "end": "74979"
  },
  {
    "text": "dispel a few myths and and just you know make sure we're on the same page I'm",
    "start": "74979",
    "end": "81009"
  },
  {
    "start": "75000",
    "end": "158000"
  },
  {
    "text": "going to talk quickly about infrastructure we saw in the previous talk that yes we do need infrastructure",
    "start": "81009",
    "end": "87580"
  },
  {
    "text": "to train and use machine learning models and well maybe there are a few things to be to be a study here ok then we're",
    "start": "87580",
    "end": "95829"
  },
  {
    "text": "going to spend most of our time looking at actual neural networks some common architectures and and use cases and I",
    "start": "95829",
    "end": "103060"
  },
  {
    "text": "will highlight those using a bunch of gear up projects that I think are pretty",
    "start": "103060",
    "end": "108310"
  },
  {
    "text": "amazing then we'll really quickly go",
    "start": "108310",
    "end": "114220"
  },
  {
    "text": "through an introduction to MX net I'll just introduce introduce you to the very basics the basic objects that you need",
    "start": "114220",
    "end": "121119"
  },
  {
    "text": "to understand to be able to read and write those 50 lines of pythons of Python that I promise really everyone in",
    "start": "121119",
    "end": "129130"
  },
  {
    "text": "this room can understand and then of course we're going to jump into demos notebooks train models and and use",
    "start": "129130",
    "end": "138130"
  },
  {
    "text": "Jupiter no DOS okay and although obviously I will host these notebooks in sage maker you could",
    "start": "138130",
    "end": "145120"
  },
  {
    "text": "literally run all this stuff on your own laptop all the code will be available on github ok so this is really",
    "start": "145120",
    "end": "151660"
  },
  {
    "text": "not a sage maker talk this will be a later talk okay and yeah I'll share some resources ok so",
    "start": "151660",
    "end": "159630"
  },
  {
    "start": "158000",
    "end": "232000"
  },
  {
    "text": "well at least has been my crusade for a while a lot of people would like to",
    "start": "159630",
    "end": "165970"
  },
  {
    "text": "believe would like you to believe that AI is dark magic right you wave your",
    "start": "165970",
    "end": "171640"
  },
  {
    "text": "hands that data you write some cryptic equations on a whiteboard probably throw",
    "start": "171640",
    "end": "180460"
  },
  {
    "text": "some chicken blood and some other additional stuff for good measure right and voila as we say right and you",
    "start": "180460",
    "end": "186850"
  },
  {
    "text": "have a model and oh it's very very complicated and what they really mean by",
    "start": "186850",
    "end": "192190"
  },
  {
    "text": "that is well I know about this and you don't because probably you're not smart enough so why don't you pay me a whole",
    "start": "192190",
    "end": "197920"
  },
  {
    "text": "lot of money to get the job done for you and I'll give you a model and trust me it works ok and well I have a strong dislike for",
    "start": "197920",
    "end": "205090"
  },
  {
    "text": "this kind of attitude in general even more so when it comes to AI and as you",
    "start": "205090",
    "end": "210580"
  },
  {
    "text": "know this is not what AWS stands for ok AWS wants to empower you to build stuff",
    "start": "210580",
    "end": "215890"
  },
  {
    "text": "ok we build legal blocks right you build",
    "start": "215890",
    "end": "222190"
  },
  {
    "text": "platforms with them right and in some cases you build your own blocks and you add them to the to the mix so none of",
    "start": "222190",
    "end": "230020"
  },
  {
    "text": "that elite ivory tower thing as far as I'm concerned we don't want that so when",
    "start": "230020",
    "end": "236770"
  },
  {
    "start": "232000",
    "end": "342000"
  },
  {
    "text": "you look at it right when you blow on the smoke and and you ignore the buzz",
    "start": "236770",
    "end": "243490"
  },
  {
    "text": "words and the magazine covers AI is about three things ok it is a bit of",
    "start": "243490",
    "end": "249160"
  },
  {
    "text": "math yes let's not hide that fact ok even though using high level libraries",
    "start": "249160",
    "end": "256810"
  },
  {
    "text": "like MX net tensorflow etc you can literally do away with the math ok but",
    "start": "256810",
    "end": "261820"
  },
  {
    "text": "if you want to understand how the technology works in detail if you want to build your own API etc sure a bit of",
    "start": "261820",
    "end": "268240"
  },
  {
    "text": "algebra and a bit of computer science is not gonna hurt ok but generally and for",
    "start": "268240",
    "end": "274720"
  },
  {
    "text": "what we're gonna do today we're gonna ignore that stuff so it's actually engineering right so",
    "start": "274720",
    "end": "281260"
  },
  {
    "text": "it's code you write code you writing a model means writing code you can see",
    "start": "281260",
    "end": "286600"
  },
  {
    "text": "some MX net Python code here and this is enough to define a convolutional neural",
    "start": "286600",
    "end": "292840"
  },
  {
    "text": "network right those 10 or 12 lines of code that's all it takes so it's code usually it's Python okay",
    "start": "292840",
    "end": "299800"
  },
  {
    "text": "that's our preferred language for a lot of a lot of that jobs a lot of those jobs so it's easy right",
    "start": "299800",
    "end": "306430"
  },
  {
    "text": "and you'll can do code right if you've done",
    "start": "306430",
    "end": "311700"
  },
  {
    "text": "legacy Java apps right trust me you can do this okay if you if you if you spend",
    "start": "311700",
    "end": "318580"
  },
  {
    "text": "your life fixing you know Java code from the early 2000s right this is this is a",
    "start": "318580",
    "end": "325780"
  },
  {
    "text": "walk in the park and we need some chips right to run and train our models okay",
    "start": "325780",
    "end": "333340"
  },
  {
    "text": "and we need GPUs and we need CPUs all right from our good friends at Intel and",
    "start": "333340",
    "end": "338860"
  },
  {
    "text": "NVIDIA all right so actually let's start with this because I want to make sure you know you understand when to use CPUs",
    "start": "338860",
    "end": "347530"
  },
  {
    "text": "and when to use GPUs this will have you know a nice impact on performance but it",
    "start": "347530",
    "end": "352690"
  },
  {
    "text": "will also have an important impact on cost and it's important too so like I said earlier we introduced this new",
    "start": "352690",
    "end": "358510"
  },
  {
    "text": "family of p3 instances in October and you can grab those peter instances in",
    "start": "358510",
    "end": "366340"
  },
  {
    "text": "three different sizes from one to eight GPUs they're insanely powerful and",
    "start": "366340",
    "end": "373690"
  },
  {
    "text": "sanely powerful they have crazy crazy numbers and they're the fastest chip you",
    "start": "373690",
    "end": "380980"
  },
  {
    "text": "can get for training okay when I want when you want to Train large cheap learning models on large data sets",
    "start": "380980",
    "end": "386920"
  },
  {
    "text": "millions of images and so on these are a good choice okay but there is another",
    "start": "386920",
    "end": "392770"
  },
  {
    "start": "391000",
    "end": "476000"
  },
  {
    "text": "option the other option is to use CPU instances and about a few months ago as",
    "start": "392770",
    "end": "399490"
  },
  {
    "text": "well we introduced a new CPU based family called c5 and if you're familiar",
    "start": "399490",
    "end": "405640"
  },
  {
    "text": "with AWS you know the C family is for the compute oriented jobs so these",
    "start": "405640",
    "end": "410919"
  },
  {
    "text": "instances tend to get the latest Intel chips the more powerful ones with you",
    "start": "410919",
    "end": "416469"
  },
  {
    "text": "know custom custom features from Intel to speed up compute and in this case",
    "start": "416469",
    "end": "423849"
  },
  {
    "text": "machine learning so the cool thing about c5 is that it introduces the skylake architecture which is the latest Intel",
    "start": "423849",
    "end": "431830"
  },
  {
    "text": "Architecture and species so it's generally faster you know more cores more of everything but it also brings a",
    "start": "431830",
    "end": "437949"
  },
  {
    "text": "new dedicated instruction set called AVX which which are vector instructions that",
    "start": "437949",
    "end": "444580"
  },
  {
    "text": "let you run the same code in parallel on multiple data",
    "start": "444580",
    "end": "450388"
  },
  {
    "text": "it calls SIMD single instruction multiple data architecture okay and so",
    "start": "450689",
    "end": "456789"
  },
  {
    "text": "these are super useful when you want to do math or scientific computing in general and they can be put to good use",
    "start": "456789",
    "end": "463419"
  },
  {
    "text": "when we're going to train and and predict with machine learning models okay so this is not just oh okay it's a",
    "start": "463419",
    "end": "470199"
  },
  {
    "text": "faster CPU it's also CPU that comes with specific instructions that are gonna help okay so let's talk about cost for a",
    "start": "470199",
    "end": "478449"
  },
  {
    "start": "476000",
    "end": "585000"
  },
  {
    "text": "second okay as you can see here are the prices for the C 5 and the P 2 and P 3",
    "start": "478449",
    "end": "486339"
  },
  {
    "text": "instances ok and ok P 3 is awesome right P 3 16 Excel it's it's like a",
    "start": "486339",
    "end": "493419"
  },
  {
    "text": "supercomputer in a server but on demand price sits at $26 per hour okay so now",
    "start": "493419",
    "end": "503439"
  },
  {
    "text": "you know now you see why you know before you click on that blue in button that says launch instance and yes give me ten",
    "start": "503439",
    "end": "509680"
  },
  {
    "text": "of those you know you might it might be worth your time you know just to say is",
    "start": "509680",
    "end": "516310"
  },
  {
    "text": "that really smart okay if you look at the largest C 5 which has 72 cores a",
    "start": "516310",
    "end": "522940"
  },
  {
    "text": "whole lot of memory etc it's 3.4 dollars per hour ok so obviously on you know the",
    "start": "522940",
    "end": "530589"
  },
  {
    "text": "GPU instance will still be much more powerful than that C 5 but as we can see at on-demand price we could have let's",
    "start": "530589",
    "end": "537430"
  },
  {
    "text": "say eight or nine of those C fives for the same price as the P 3 16 Excel",
    "start": "537430",
    "end": "543800"
  },
  {
    "text": "so now from an I would say high availability point of view from a load balancing point of view we have to",
    "start": "543800",
    "end": "550939"
  },
  {
    "text": "consider whether one is better than the other okay because it's especially when",
    "start": "550939",
    "end": "556249"
  },
  {
    "text": "you do prediction right prediction is usually come in the form of F of HTTP request so if you need to handle 10000",
    "start": "556249",
    "end": "563649"
  },
  {
    "text": "HTTP requests for prediction per second maybe it's a better idea to run them on",
    "start": "563649",
    "end": "568879"
  },
  {
    "text": "eight or nine c-5s than a single p3 right it's not just about the GPU it's",
    "start": "568879",
    "end": "575389"
  },
  {
    "text": "about scaling the rest as well the web server that's going to handle those 10 K requests per second etc etc okay so you",
    "start": "575389",
    "end": "582170"
  },
  {
    "text": "have to look at the big picture here now I'm I'm guessing you're all familiar",
    "start": "582170",
    "end": "588860"
  },
  {
    "start": "585000",
    "end": "854000"
  },
  {
    "text": "with spot instances right the ability to buy unused ec2 capacity at deeply",
    "start": "588860",
    "end": "594170"
  },
  {
    "text": "discounted prices now there is a massive difference here the P 3s are brand new",
    "start": "594170",
    "end": "601459"
  },
  {
    "text": "or relatively new and as of today it's it is pretty difficult to grab P three",
    "start": "601459",
    "end": "607100"
  },
  {
    "text": "instances on the spot market as you can see right so if you're lucky you might but it is pretty difficult P twos are",
    "start": "607100",
    "end": "614839"
  },
  {
    "text": "easier but P three there's so much demand for them that it's unlikely you'll get a good deal on the spot",
    "start": "614839",
    "end": "620750"
  },
  {
    "text": "market at the moment okay we'll add more capacity and make sure this problem is solved but that's a reality on the hood on the other end you",
    "start": "620750",
    "end": "627920"
  },
  {
    "text": "know there are plenty of C fives and C fours even more so okay so it's very easy to grab the CPU instances on the",
    "start": "627920",
    "end": "635990"
  },
  {
    "text": "spot market at super low prices okay here as you can see we can grab that C 5",
    "start": "635990",
    "end": "642350"
  },
  {
    "text": "at about 1.4 dollar instead of that 3.4 on demand price so it's more than way",
    "start": "642350",
    "end": "650240"
  },
  {
    "text": "more than 50 percent discount okay so when you look at this one you could say well now based on this situation and",
    "start": "650240",
    "end": "657079"
  },
  {
    "text": "again it might be a temporary situation but it it's pretty realistic for now for the same amount of money I can have",
    "start": "657079",
    "end": "663949"
  },
  {
    "text": "about 20 mm 20 more 20 times more see",
    "start": "663949",
    "end": "669439"
  },
  {
    "text": "five instances then I can have P 3 instances so now you have to balance things right now you have to test you",
    "start": "669439",
    "end": "676250"
  },
  {
    "text": "have to try and test your train your model on 1p three train it on",
    "start": "676250",
    "end": "681430"
  },
  {
    "text": "25 see what it does right and there are no built-in answers to this you have to",
    "start": "681430",
    "end": "687980"
  },
  {
    "text": "try it might be faster it might be much lower maybe you know you have to try it",
    "start": "687980",
    "end": "693260"
  },
  {
    "text": "you have to experiment okay so that's for training now for prediction to me",
    "start": "693260",
    "end": "700610"
  },
  {
    "text": "it's pretty obvious we should use c5 okay because we're going to be able to spread those instances across multiple",
    "start": "700610",
    "end": "707990"
  },
  {
    "text": "availability zones we're going to be able to load balanced a huge amount of",
    "start": "707990",
    "end": "713330"
  },
  {
    "text": "traffic on those instances and most of the time we're going to do single image",
    "start": "713330",
    "end": "718580"
  },
  {
    "text": "prediction anyway right when imagine you have a mobile app and people take pictures and and they want",
    "start": "718580",
    "end": "723800"
  },
  {
    "text": "to have prediction on this you predict one image at a time and when you do this",
    "start": "723800",
    "end": "728840"
  },
  {
    "text": "actually GPUs they don't have such a performance advantage right when you",
    "start": "728840",
    "end": "734180"
  },
  {
    "text": "need high throughput if you need to predict 30 60 images in one go yes they",
    "start": "734180",
    "end": "740210"
  },
  {
    "text": "are they have an edge definitely because they can put their thousands of course to good use but when you predict one",
    "start": "740210",
    "end": "745460"
  },
  {
    "text": "image at a time the the absolute performance that you get on a GPU is not that much greater than it would be on",
    "start": "745460",
    "end": "752960"
  },
  {
    "text": "the CPU instance so as a rule of thumb I would say if you have very large data",
    "start": "752960",
    "end": "759800"
  },
  {
    "text": "sets right millions of images hundreds of hours of video or text etc GPUs are",
    "start": "759800",
    "end": "765530"
  },
  {
    "text": "the way to go okay if you have smaller data sets then it's really worth trying",
    "start": "765530",
    "end": "772880"
  },
  {
    "text": "on CPU instances even for training ok it will be slower than on GPUs but the time",
    "start": "772880",
    "end": "780070"
  },
  {
    "text": "cost ratio might still be very attractive to you ok and unless you need",
    "start": "780070",
    "end": "786980"
  },
  {
    "text": "to predict a large bunch large bunches of images at the same time I believe CPU",
    "start": "786980",
    "end": "792560"
  },
  {
    "text": "instances win all the time ok but run your own tests and and come come up with",
    "start": "792560",
    "end": "799790"
  },
  {
    "text": "your own conclusions ok so I love those CPUs I love those GPUs I hate spending",
    "start": "799790",
    "end": "805610"
  },
  {
    "text": "money right even if I don't pay my edible s bills and some evil people say",
    "start": "805610",
    "end": "810890"
  },
  {
    "text": "this is the only reason why I joined them actually right maybe that's true who knows but you are paying your bills and",
    "start": "810890",
    "end": "817680"
  },
  {
    "text": "we don't want you to save we don't want you to spend your money unnecessarily we want you to save money",
    "start": "817680",
    "end": "823139"
  },
  {
    "text": "right I mean every year we give back hundreds of millions of dollars to",
    "start": "823139",
    "end": "828269"
  },
  {
    "text": "customers by going to them visiting them and saying you're spending too much will",
    "start": "828269",
    "end": "833850"
  },
  {
    "text": "you need to optimize your platform and I'm sure some people in the room have had this experience with a solution architects yeah there knock on your door",
    "start": "833850",
    "end": "840029"
  },
  {
    "text": "and say this is not optimum on you here's what you should do and when you cut your ec2 bill by 50% okay and if it",
    "start": "840029",
    "end": "847319"
  },
  {
    "text": "never happened to you call your essay and ask them to do that job for you right they will it's part of their",
    "start": "847319",
    "end": "853350"
  },
  {
    "text": "responsibility okay let's move on to networks so we're going to look at some",
    "start": "853350",
    "end": "859079"
  },
  {
    "start": "854000",
    "end": "1116000"
  },
  {
    "text": "of those networks what you can do with them and then we're going to run the demos okay so let's start with this",
    "start": "859079",
    "end": "865110"
  },
  {
    "text": "which is probably the king of neural networks at the moment it's called the",
    "start": "865110",
    "end": "870209"
  },
  {
    "text": "convolutional neural network CNN in short these go back quite a while now",
    "start": "870209",
    "end": "875790"
  },
  {
    "text": "and they were invented by a researcher called Ian Luca French guy so yeah see",
    "start": "875790",
    "end": "884639"
  },
  {
    "text": "we're not that useless after all and now he's heading the the Facebook AI lab in",
    "start": "884639",
    "end": "891810"
  },
  {
    "text": "in Paris and is one of the deep learning and AI experts were the experts so he",
    "start": "891810",
    "end": "901500"
  },
  {
    "text": "started to come up with this new architecture that would be efficient at recognizing images and this was actually",
    "start": "901500",
    "end": "907230"
  },
  {
    "text": "one of the first industrial applications of neural networks recognizing",
    "start": "907230",
    "end": "912980"
  },
  {
    "text": "performing automating automatic image recognition on cheques right so banks",
    "start": "912980",
    "end": "918000"
  },
  {
    "text": "were happy to give people a lot of money to build systems that could",
    "start": "918000",
    "end": "923339"
  },
  {
    "text": "automatically read cheques right so that's that that's actually how long it",
    "start": "923339",
    "end": "929430"
  },
  {
    "text": "took to build industrial applications with neural networks remember these go back to the 50s right and well this type",
    "start": "929430",
    "end": "937139"
  },
  {
    "text": "of architecture is it's it's pretty clever and this is a proper network",
    "start": "937139",
    "end": "943260"
  },
  {
    "text": "it's called low net that was invented by yoga and the way those networks operates is by taking obviously",
    "start": "943260",
    "end": "952140"
  },
  {
    "text": "an input picture and shrinking it over multiple steps through operations called",
    "start": "952140",
    "end": "958560"
  },
  {
    "text": "convolution and pooling and those are math operations right that shrink the",
    "start": "958560",
    "end": "964860"
  },
  {
    "text": "dimension of pictures but extracting",
    "start": "964860",
    "end": "969980"
  },
  {
    "text": "keeping important features and as you probably know this is the magic of",
    "start": "969980",
    "end": "977340"
  },
  {
    "text": "neural networks the ability to detect to learn automatically what's important in",
    "start": "977340",
    "end": "985320"
  },
  {
    "text": "your data set and what's not right compared to traditional machine learning when you need to do feature engineering",
    "start": "985320",
    "end": "991350"
  },
  {
    "text": "you need to tell the algo what the features are and then the algo learns had to predict from these features the",
    "start": "991350",
    "end": "997380"
  },
  {
    "text": "correct output right so there's a lot of manual work to do before you can even learn with deep learning you can just",
    "start": "997380",
    "end": "1003650"
  },
  {
    "text": "throw images in this case at the network and say hey here's the image here's what",
    "start": "1003650",
    "end": "1009590"
  },
  {
    "text": "it should be right so this is a 60 km/h sign okay so I'm giving you an image I'm",
    "start": "1009590",
    "end": "1016640"
  },
  {
    "text": "giving you a label and actually I will I will give you a whole bunch of images and labels so you learn from that stuff",
    "start": "1016640",
    "end": "1022280"
  },
  {
    "text": "and and you figure out what's important in there okay and this is again at the",
    "start": "1022280",
    "end": "1027949"
  },
  {
    "text": "core of this you have the this convolution operation that is going to extract the important features and as",
    "start": "1027949",
    "end": "1033589"
  },
  {
    "text": "you can see as we go deeper into the network we shrink the image from thirty to thirty two to twenty eight twenty",
    "start": "1033589",
    "end": "1039560"
  },
  {
    "text": "eight to fourteen fifteen all the way down to five by five right which is a much smaller right you start with 32 by",
    "start": "1039560",
    "end": "1047360"
  },
  {
    "text": "32 which is over 900 features right if you want to see each pixel as a feature you can and we take it down to literally",
    "start": "1047360",
    "end": "1054770"
  },
  {
    "text": "25 features right so we shrink it and shrink it and shrink it but the",
    "start": "1054770",
    "end": "1059930"
  },
  {
    "text": "convolution and pooling shrink in a way that those tiny pictures that you get at",
    "start": "1059930",
    "end": "1066230"
  },
  {
    "text": "the end and that looked nothing like the initial picture they still convey the important information about the picture",
    "start": "1066230",
    "end": "1072500"
  },
  {
    "text": "and then we can run a plane classifier on this",
    "start": "1072500",
    "end": "1077990"
  },
  {
    "text": "learn from this data set okay you don't have to understand convolution and",
    "start": "1077990",
    "end": "1084290"
  },
  {
    "text": "pulling in detail so use those networks right if you're curious how this really works and I'm guessing you are this is a",
    "start": "1084290",
    "end": "1092030"
  },
  {
    "text": "really really great blog post on the Nvidia blog that actually takes you through those steps and explain why this",
    "start": "1092030",
    "end": "1098000"
  },
  {
    "text": "really works right so it's not magic like I said there's no hand waving no",
    "start": "1098000",
    "end": "1104140"
  },
  {
    "text": "evil spells it's just this and a few more operations that let us shrink data",
    "start": "1104140",
    "end": "1111830"
  },
  {
    "text": "sets and then classify okay so what can you do with it here's a customer example",
    "start": "1111830",
    "end": "1118570"
  },
  {
    "start": "1116000",
    "end": "1248000"
  },
  {
    "text": "Expedia everybody knows Expedia I think travel company and the problem that they",
    "start": "1118570",
    "end": "1124100"
  },
  {
    "text": "have is they want to display the best pictures on hotel pages best mean your",
    "start": "1124100",
    "end": "1131960"
  },
  {
    "text": "hair meaning the ones that are likely to trigger a conversion right so some",
    "start": "1131960",
    "end": "1140000"
  },
  {
    "text": "images are really good right and you have to keep in mind some of these images are provided by hotels and",
    "start": "1140000",
    "end": "1145309"
  },
  {
    "text": "actually a lot I'm supposing most of the images come from customers right so all of us can take pictures and upload them",
    "start": "1145309",
    "end": "1151910"
  },
  {
    "text": "to the page so well obviously some of us take that kind of picture right so so I",
    "start": "1151910",
    "end": "1159679"
  },
  {
    "text": "think everybody will be happy to know you can actually enjoy your own private restrooms right I'm not sure that's what",
    "start": "1159679",
    "end": "1166880"
  },
  {
    "text": "I want to see on the page and when it comes to the nuclear reactor well unless you're a nuclear scientist this is",
    "start": "1166880",
    "end": "1172970"
  },
  {
    "text": "probably not too appealing right so one way could be oh let's take those 10",
    "start": "1172970",
    "end": "1178910"
  },
  {
    "text": "million images label them right to the quality score etc and and train a model",
    "start": "1178910",
    "end": "1184370"
  },
  {
    "text": "from scratch okay who wants to hand label ten million images how much time",
    "start": "1184370",
    "end": "1189679"
  },
  {
    "text": "you think that takes right think 20 seconds per image I mean right imagine",
    "start": "1189679",
    "end": "1196190"
  },
  {
    "text": "the amount of time right so they don't do that because they're clever they did that on",
    "start": "1196190",
    "end": "1201440"
  },
  {
    "text": "one percent of the data set right 100k images and actually they hired people to",
    "start": "1201440",
    "end": "1208160"
  },
  {
    "text": "do that cost them a few few thousand dollars so a small amount of money and then using",
    "start": "1208160",
    "end": "1213770"
  },
  {
    "text": "an open source library called Kara's and GPU instances they fine-tuned the model",
    "start": "1213770",
    "end": "1218800"
  },
  {
    "text": "they retrain the model a little bit just on the Android K images okay and now",
    "start": "1218800",
    "end": "1225050"
  },
  {
    "text": "automatically they can find high-quality images from their collection and display",
    "start": "1225050",
    "end": "1231200"
  },
  {
    "text": "them on the hotel pages if you're curious about the details this URL has a video from one of the developers",
    "start": "1231200",
    "end": "1237790"
  },
  {
    "text": "speaking at a Python conference and going through the project and it's surprisingly it's a simple and short",
    "start": "1237790",
    "end": "1245390"
  },
  {
    "text": "project okay but very impactful for the business you can go beyond that do what",
    "start": "1245390",
    "end": "1251930"
  },
  {
    "start": "1248000",
    "end": "1312000"
  },
  {
    "text": "we call object detection which is one step further it's like locating what's",
    "start": "1251930",
    "end": "1257030"
  },
  {
    "text": "in the image and where okay these are also called single-shot detectors and",
    "start": "1257030",
    "end": "1263590"
  },
  {
    "text": "there are different ways different architectures doing this and actually the to get a project mentioned here are",
    "start": "1263590",
    "end": "1270190"
  },
  {
    "text": "MX net implementations of state-of-the-art SSDs okay so one of",
    "start": "1270190",
    "end": "1276830"
  },
  {
    "text": "them is called our CNN and and the other",
    "start": "1276830",
    "end": "1281960"
  },
  {
    "text": "one is called yellow which stands for you only look once right which is a good",
    "start": "1281960",
    "end": "1287090"
  },
  {
    "text": "name for a single-shot detector so you can go to github grab the models they",
    "start": "1287090",
    "end": "1292790"
  },
  {
    "text": "have three trained versions available you can you can just load them up with a couple of lines of Python and start",
    "start": "1292790",
    "end": "1297860"
  },
  {
    "text": "using them okay and you can read the research article and you can retrain",
    "start": "1297860",
    "end": "1303410"
  },
  {
    "text": "those networks if you want on your own data etc but that would save you a massive amount of time compared to",
    "start": "1303410",
    "end": "1308870"
  },
  {
    "text": "trying to build everything from scratch you could be interested in segmentation",
    "start": "1308870",
    "end": "1314390"
  },
  {
    "text": "which is detection plus finding the exact outlines and again you can find",
    "start": "1314390",
    "end": "1321500"
  },
  {
    "text": "and get up a project an MX net project implementing masks or CNN which is",
    "start": "1321500",
    "end": "1327440"
  },
  {
    "text": "really state-of-the-art for this kind of problems and interestingly this was released by a",
    "start": "1327440",
    "end": "1332930"
  },
  {
    "text": "company called - simple - simple is an edible eyes customer and there are Chinese company building autonomous",
    "start": "1332930",
    "end": "1340190"
  },
  {
    "text": "driving systems so you can understand why it matters to them where the old lady exactly is and where the",
    "start": "1340190",
    "end": "1347179"
  },
  {
    "text": "pedestrian actually is right it's not just detection I mean a few inches make",
    "start": "1347179",
    "end": "1352670"
  },
  {
    "text": "the difference between being on time for your appointment and spending 10 years in jail so performance is important here",
    "start": "1352670",
    "end": "1361870"
  },
  {
    "text": "last summer using a model trained on MX net as well as additional tools they",
    "start": "1361870",
    "end": "1368780"
  },
  {
    "text": "drove the truck or the truck drove itself automatically for 200 miles",
    "start": "1368780",
    "end": "1374179"
  },
  {
    "text": "across the Southwest us okay so this is almost a year old down so imagine where",
    "start": "1374179",
    "end": "1380240"
  },
  {
    "text": "they are now right so lots of stuff happening there we talked about recognition in the earlier",
    "start": "1380240",
    "end": "1386120"
  },
  {
    "start": "1383000",
    "end": "1418000"
  },
  {
    "text": "talk imagine you want to build your own version you want additional attributes you want your own data etc you can do",
    "start": "1386120",
    "end": "1392450"
  },
  {
    "text": "that with the face detection and again get a project called MX net face that",
    "start": "1392450",
    "end": "1399679"
  },
  {
    "text": "does pretty much what recognition does right so provided that you have enough data to train you can do the same thing",
    "start": "1399679",
    "end": "1407210"
  },
  {
    "text": "you know phase detection plus all kinds of attributes it's fair to say you know there are more attributes here then then",
    "start": "1407210",
    "end": "1414080"
  },
  {
    "text": "are available on recognition so that might be interesting we talked about",
    "start": "1414080",
    "end": "1420440"
  },
  {
    "start": "1418000",
    "end": "1473000"
  },
  {
    "text": "marinus analytics in the previous talk and I think I mentioned throwing that non profit org so thorn has the same",
    "start": "1420440",
    "end": "1430040"
  },
  {
    "text": "goal try to identify missing kids on on the internet and just basically try to",
    "start": "1430040",
    "end": "1436700"
  },
  {
    "text": "find where they are and and have law enforcement rescue them and and this is",
    "start": "1436700",
    "end": "1444890"
  },
  {
    "text": "what the gentleman was asking for you know aging so using a partner called mem",
    "start": "1444890",
    "end": "1450169"
  },
  {
    "text": "sequel they can do aging so if the kid disappeared five years ago age ten okay",
    "start": "1450169",
    "end": "1455900"
  },
  {
    "text": "now he or she would be 15 so of course you need to have an up-to-date picture",
    "start": "1455900",
    "end": "1461960"
  },
  {
    "text": "and and that's what men sequel does okay they're gonna edge the pictures and them",
    "start": "1461960",
    "end": "1467120"
  },
  {
    "text": "over to thorne and then they can go and try to find those kids again right and",
    "start": "1467120",
    "end": "1474080"
  },
  {
    "start": "1473000",
    "end": "1559000"
  },
  {
    "text": "that's serious stuff and like I said there is some silly stuff as well this is an example but I have to say this is a pretty cool",
    "start": "1474080",
    "end": "1480290"
  },
  {
    "text": "project called real-time pose estimation so you take a video stream you run it",
    "start": "1480290",
    "end": "1485900"
  },
  {
    "text": "through a deep running model and you're able to find the position of the human",
    "start": "1485900",
    "end": "1493610"
  },
  {
    "text": "body right shoulders knees etc etc okay and this is all in real time there's no",
    "start": "1493610",
    "end": "1499250"
  },
  {
    "text": "there's no tracking it's really detection frame by frame again you can find this on github ISO just I think",
    "start": "1499250",
    "end": "1506930"
  },
  {
    "text": "yesterday there's a new one from it's from Facebook it's called dense pose",
    "start": "1506930",
    "end": "1513050"
  },
  {
    "text": "anybody has seen that one yeah yeah the video was was all over Twitter and",
    "start": "1513050",
    "end": "1518780"
  },
  {
    "text": "LinkedIn I look for that one dense pose it's pretty much the same thing right it's pose estimation except now they do",
    "start": "1518780",
    "end": "1526330"
  },
  {
    "text": "they have a wireframe over the body right so they know not just the shoulders and the knees etc they have a",
    "start": "1526330",
    "end": "1533180"
  },
  {
    "text": "wireframe over the whole body so they know exactly what where each part is and",
    "start": "1533180",
    "end": "1538790"
  },
  {
    "text": "of course they can do text they can apply textures in real time right so",
    "start": "1538790",
    "end": "1545390"
  },
  {
    "text": "this is crazy the video is fantastic I suggest you look at that one and I'm waiting for someone to implement",
    "start": "1545390",
    "end": "1551930"
  },
  {
    "text": "that they haven't released code yet it's literally 48 hours new right dance pose",
    "start": "1551930",
    "end": "1557780"
  },
  {
    "text": "very cool so of course image and video processing or a popular use case forum keep running",
    "start": "1557780",
    "end": "1565550"
  },
  {
    "start": "1559000",
    "end": "1703000"
  },
  {
    "text": "but that's not it that's not the only thing another network architecture is called LS TM and that's a crazy name cuz",
    "start": "1565550",
    "end": "1573920"
  },
  {
    "text": "it's long and short right so it took me a while to figure that out",
    "start": "1573920",
    "end": "1579050"
  },
  {
    "text": "we'll get to that so these neurons that's an LS TM new run right there",
    "start": "1579050",
    "end": "1585110"
  },
  {
    "text": "don't worry I'm not going to go through the details this this is different from",
    "start": "1585110",
    "end": "1591560"
  },
  {
    "text": "a traditional neuron in the sense that it keeps some information about the",
    "start": "1591560",
    "end": "1596750"
  },
  {
    "text": "previous state right so CNN neurons have no memory okay you show one image they",
    "start": "1596750",
    "end": "1603830"
  },
  {
    "text": "predict and then you show something else and they predict again it's completely stateless completely you know all",
    "start": "1603830",
    "end": "1610400"
  },
  {
    "text": "predictions are independent but in some use cases like machine translation for example it's important",
    "start": "1610400",
    "end": "1617530"
  },
  {
    "text": "to know about the previous state right because if you know what the previous world was when you started translating",
    "start": "1617530",
    "end": "1624490"
  },
  {
    "text": "in sentence then you might be able to pick a better word or the next",
    "start": "1624490",
    "end": "1630580"
  },
  {
    "text": "translation okay so the sequence of things the sequence of predictions is actually important so this is what LS TM",
    "start": "1630580",
    "end": "1637920"
  },
  {
    "text": "achieved they predict based on the current input right could be a word for",
    "start": "1637920",
    "end": "1645790"
  },
  {
    "text": "translation and from previous states okay and so now the name starts to make sense",
    "start": "1645790",
    "end": "1653350"
  },
  {
    "text": "because they have short term memory right so they're not going to they shouldn't remember the 50 or 100 words",
    "start": "1653350",
    "end": "1660910"
  },
  {
    "text": "that came before right because that could be completely different sentence and of course it's not helpful so they just need to remember a few more a few",
    "start": "1660910",
    "end": "1667870"
  },
  {
    "text": "prediction in the past right short-term memory and they're long because you tend",
    "start": "1667870",
    "end": "1673120"
  },
  {
    "text": "to chain those cells right to build to be able to predict long sequences okay",
    "start": "1673120",
    "end": "1679720"
  },
  {
    "text": "if you want to predict sentences if you want to let a translate sentences of 100",
    "start": "1679720",
    "end": "1684880"
  },
  {
    "text": "words that's a very room sentence let's say 20 words well you will need to",
    "start": "1684880",
    "end": "1690370"
  },
  {
    "text": "change those lsdm blocks to account for an input that is 20 or long okay so",
    "start": "1690370",
    "end": "1696220"
  },
  {
    "text": "that's why they're called LS TM because you chain them to predict sequences and they have short-term memory okay so the",
    "start": "1696220",
    "end": "1704320"
  },
  {
    "text": "sulci project that I mentioned earlier the open source project by AWS you can find it on github it is based on this LS",
    "start": "1704320",
    "end": "1710830"
  },
  {
    "text": "TM architecture okay there was a really nice tutorial with datasets to train a",
    "start": "1710830",
    "end": "1717580"
  },
  {
    "text": "machine learning model to translate German to English or you could do it the",
    "start": "1717580",
    "end": "1722920"
  },
  {
    "text": "other way of course and if you're curious about machine translation you know it takes a few hours to run that",
    "start": "1722920",
    "end": "1728350"
  },
  {
    "text": "and you can experiment okay and this is based on LS TM and then the weirder kids",
    "start": "1728350",
    "end": "1736930"
  },
  {
    "start": "1733000",
    "end": "1910000"
  },
  {
    "text": "in in the classroom I'll call Gans generative adversarial Network so the previous ones the deep",
    "start": "1736930",
    "end": "1745190"
  },
  {
    "text": "networks and the and the convolutional neural networks and the LS TM etc we",
    "start": "1745190",
    "end": "1751429"
  },
  {
    "text": "mostly use them to predict the existing world we want them to understand existing images we want them to",
    "start": "1751429",
    "end": "1757369"
  },
  {
    "text": "understand text etc etc but now what",
    "start": "1757369",
    "end": "1762799"
  },
  {
    "text": "about generating stuff right so believe it or not these faces do not exist",
    "start": "1762799",
    "end": "1769509"
  },
  {
    "text": "they have been generated by a neural network okay there's a data set called",
    "start": "1769509",
    "end": "1774859"
  },
  {
    "text": "the celebrity data set that is used by gans okay and this is a cool project by",
    "start": "1774859",
    "end": "1781700"
  },
  {
    "text": "Nvidia actually it isn't get up again and those networks learn how to build",
    "start": "1781700",
    "end": "1788419"
  },
  {
    "text": "new faces so it's not copying existing faces just learning how to build samples",
    "start": "1788419",
    "end": "1795399"
  },
  {
    "text": "that are inspired quote-unquote from the existing data sets so it's not about",
    "start": "1795399",
    "end": "1800690"
  },
  {
    "text": "replicating none of these faces exist in the data set it's about inventing generating samples based on similar data",
    "start": "1800690",
    "end": "1810129"
  },
  {
    "text": "in the data set okay so here's another example different project so this one",
    "start": "1810129",
    "end": "1816919"
  },
  {
    "text": "here starts from it doesn't even start from real-life pictures it starts from semantic maps which you see in the lower",
    "start": "1816919",
    "end": "1824149"
  },
  {
    "text": "left corner semantic map is what a five-year-old kid would draw right if you should told that kid hey just",
    "start": "1824149",
    "end": "1831499"
  },
  {
    "text": "outline you know the road and the trees and the car and put some colors and zero detail at all right I could do this with",
    "start": "1831499",
    "end": "1838999"
  },
  {
    "text": "paintbrush just you know and and using a data set with similar images I would be",
    "start": "1838999",
    "end": "1847279"
  },
  {
    "text": "able to generate something like this which is high-res super detailed you can go to the page and zoom in on that",
    "start": "1847279",
    "end": "1852559"
  },
  {
    "text": "picture and see it's really pixel perfect right so these guns they can",
    "start": "1852559",
    "end": "1859549"
  },
  {
    "text": "also be used for their industrial applications actually at reinvent the last reinvent we had a Autodesk onstage",
    "start": "1859549",
    "end": "1866769"
  },
  {
    "text": "explaining how they use similar techniques to generate mechanical parts right so instead of human drawing the",
    "start": "1866769",
    "end": "1874220"
  },
  {
    "text": "part they just give constraints right they say okay here are the dural dimension is the weight the mechanical strength",
    "start": "1874220",
    "end": "1882170"
  },
  {
    "text": "blah blah blah right they give some parameters and then deep or deep learning I'll go invents literally a",
    "start": "1882170",
    "end": "1889040"
  },
  {
    "text": "mechanical part that fulfills all those requirements right you can see that video on YouTube it's it's pretty",
    "start": "1889040",
    "end": "1896060"
  },
  {
    "text": "fascinating they show some examples with the you know motorbike parts the swing arm for a motorbike etc etc and the",
    "start": "1896060",
    "end": "1904010"
  },
  {
    "text": "network's come up with very very interesting shapes and actually they look very cool too so now how do you",
    "start": "1904010",
    "end": "1911450"
  },
  {
    "start": "1910000",
    "end": "2101000"
  },
  {
    "text": "build that stuff well you could pick a number of libraries AWS tends to like MX",
    "start": "1911450",
    "end": "1918620"
  },
  {
    "text": "net for a number of reasons first it has",
    "start": "1918620",
    "end": "1926080"
  },
  {
    "text": "probably the best language support out there which means that even though",
    "start": "1926080",
    "end": "1932030"
  },
  {
    "text": "Python is probably the language of choice you can use other languages on the next net you could use C++ you can",
    "start": "1932030",
    "end": "1939140"
  },
  {
    "text": "use Scala Giulia and a few more right so",
    "start": "1939140",
    "end": "1945380"
  },
  {
    "text": "better choice better language choice for developers it's portable so it's gonna",
    "start": "1945380",
    "end": "1951500"
  },
  {
    "text": "run fine on powerful systems you know CPU GPU instances etc but as it turns",
    "start": "1951500",
    "end": "1957200"
  },
  {
    "text": "out it runs very well in the embedded space as well I used it frequently on in raspberry",
    "start": "1957200",
    "end": "1963920"
  },
  {
    "text": "PI's and it works pretty well of course you don't have the same performance as a c5 right but you you're still able to do",
    "start": "1963920",
    "end": "1971660"
  },
  {
    "text": "local prediction local image classification on a raspberry pi raspberry PI's just one gig of memory",
    "start": "1971660",
    "end": "1977960"
  },
  {
    "text": "and it's a not very it doesn't have a very powerful CPU right so you can still get job done the job done at the edge",
    "start": "1977960",
    "end": "1985400"
  },
  {
    "text": "with MX 10 that's not the case for other libraries now when it comes to training if you have large data set right if you",
    "start": "1985400",
    "end": "1992750"
  },
  {
    "text": "had the other end of the spectrum and you have millions of images and hours of speech you know days weeks of speech to",
    "start": "1992750",
    "end": "1999620"
  },
  {
    "text": "train on if you train on one single instance you know it could take it could take days right so that's a problem",
    "start": "1999620",
    "end": "2007660"
  },
  {
    "text": "because you want to be able to iterate fast you want to be able to try different parameters so training time does matter",
    "start": "2007660",
    "end": "2012970"
  },
  {
    "text": "not just cost it's about agility - so the faster you can train the better the",
    "start": "2012970",
    "end": "2018220"
  },
  {
    "text": "model will be at the end okay the more combinations you can try so that means so the ability to scale linearly the",
    "start": "2018220",
    "end": "2025270"
  },
  {
    "text": "ability to add GPUs and cut training times linearly is great so if that early",
    "start": "2025270",
    "end": "2031450"
  },
  {
    "text": "if that initial job takes let's say 16 days right if you throw 16 GPUs at it it's gonna",
    "start": "2031450",
    "end": "2039730"
  },
  {
    "text": "take one day give or take right so and it scales up to 256 GPUs okay that's a",
    "start": "2039730",
    "end": "2047049"
  },
  {
    "text": "big training job right really big but we have we have pretty extreme customers sometimes right and well the last good",
    "start": "2047049",
    "end": "2054099"
  },
  {
    "text": "thing and I think this is great news for everybody is that this project has been accepted into the Apache Incubator so",
    "start": "2054099",
    "end": "2059618"
  },
  {
    "text": "it's not actually called Apache MX net which is the best guarantee that it's not owned by anyone right again probably",
    "start": "2059619",
    "end": "2068378"
  },
  {
    "text": "not the case for all the libraries and you know some companies have a mystery of opening stuff and closing stuff I",
    "start": "2068379",
    "end": "2076270"
  },
  {
    "text": "don't like it I don't think any developers will like it and I think one of the reasons why the Apache project is",
    "start": "2076270",
    "end": "2082419"
  },
  {
    "text": "so cool is that once a project is part of that no one owns it no one controls it no one can close it",
    "start": "2082419",
    "end": "2088750"
  },
  {
    "text": "and lock you in into their proprietary software okay so we like it we use it",
    "start": "2088750",
    "end": "2094868"
  },
  {
    "text": "internally to build our own services and I'm gonna show you how you can use it",
    "start": "2094869",
    "end": "2099940"
  },
  {
    "text": "yourself so what will you find in there so if you're not familiar at all with",
    "start": "2099940",
    "end": "2105160"
  },
  {
    "start": "2101000",
    "end": "2165000"
  },
  {
    "text": "any of those libraries you know MX net tensorflow Cara's Cafe etc what you'll find in",
    "start": "2105160",
    "end": "2112060"
  },
  {
    "text": "there are actually building blocks again right Lego blocks that lets you build",
    "start": "2112060",
    "end": "2118900"
  },
  {
    "text": "all those kinds of network architectures so you can build fully connected",
    "start": "2118900",
    "end": "2124839"
  },
  {
    "text": "networks so the typical deep neural network you can build convolutional networks you can",
    "start": "2124839",
    "end": "2129940"
  },
  {
    "text": "build LS TM etc etc so you'll find high-level objects that you can combine",
    "start": "2129940",
    "end": "2135780"
  },
  {
    "text": "to build all those network architectures so that's the good thing you don't have to go very deep and define each neuron",
    "start": "2135780",
    "end": "2144099"
  },
  {
    "text": "individually and connect it to the next neuron you can judge in a few lines create",
    "start": "2144099",
    "end": "2149940"
  },
  {
    "text": "layers and combine them okay and that's how you get to those 50 lines of Python I know I'm teasing you with a 50 lines",
    "start": "2149940",
    "end": "2156690"
  },
  {
    "text": "of Python but you will get to see the 50 lines of Python and it is really 50 lines of Python and the reason why it's",
    "start": "2156690",
    "end": "2162510"
  },
  {
    "text": "only 50 is because we have those high-level api's right you can do some additional cool stuff with MX net like",
    "start": "2162510",
    "end": "2169320"
  },
  {
    "start": "2165000",
    "end": "2213000"
  },
  {
    "text": "serving models okay it's good to Train right but at some point you know you want to predict and it's quite likely",
    "start": "2169320",
    "end": "2176340"
  },
  {
    "text": "you want to predict using HTTP requests right so sure you could build your own",
    "start": "2176340",
    "end": "2181440"
  },
  {
    "text": "web app and embed the model and okay fine or you could use the model server which",
    "start": "2181440",
    "end": "2188880"
  },
  {
    "text": "is a built in nginx web server and just point the model server to the model you",
    "start": "2188880",
    "end": "2195090"
  },
  {
    "text": "just trained launch that five seconds later you can run HTTP calls and run some predictions okay so I haven't tried",
    "start": "2195090",
    "end": "2204330"
  },
  {
    "text": "it in production you know I don't know how I can't make any recommendations right now but at least for development",
    "start": "2204330",
    "end": "2209880"
  },
  {
    "text": "and testing this is great right great time saver another productivity feature is support",
    "start": "2209880",
    "end": "2217140"
  },
  {
    "start": "2213000",
    "end": "2256000"
  },
  {
    "text": "for onn X which is basically interoperability between different frameworks so you could take an MX net",
    "start": "2217140",
    "end": "2223890"
  },
  {
    "text": "model a cafe model and and load them as is in other libraries right so that's",
    "start": "2223890",
    "end": "2231000"
  },
  {
    "text": "pretty cool because now you can grab cafe let's say cafe models on github and load them directly in MX net and use",
    "start": "2231000",
    "end": "2237240"
  },
  {
    "text": "them you don't have to rewrite them and retrain them okay and as of one day ago",
    "start": "2237240",
    "end": "2243180"
  },
  {
    "text": "two days ago this is also supported by the model server so you can now actually download the cafe model loaded in the",
    "start": "2243180",
    "end": "2249720"
  },
  {
    "text": "model server and surf predictions right so pretty nice and nice time saver for",
    "start": "2249720",
    "end": "2255330"
  },
  {
    "text": "everybody so what are the objects we need to know what are the basics we need to know to look at the sub code so deep",
    "start": "2255330",
    "end": "2264480"
  },
  {
    "start": "2256000",
    "end": "2300000"
  },
  {
    "text": "learning is always about data so the first step is having an object where you",
    "start": "2264480",
    "end": "2270630"
  },
  {
    "text": "can load the data set access it try and transform it okay and this object in",
    "start": "2270630",
    "end": "2276870"
  },
  {
    "text": "them extends called ng array which stands for n dimensional array right so it's like",
    "start": "2276870",
    "end": "2284690"
  },
  {
    "text": "it's a tensor but I think that name was already taken right yeah okay even",
    "start": "2284690",
    "end": "2291560"
  },
  {
    "text": "though it's not a copyright right okay so the ng array is just a multi-dimensional array where you can",
    "start": "2291560",
    "end": "2297410"
  },
  {
    "text": "load your data and feed it to models okay now we need to build the models so",
    "start": "2297410",
    "end": "2303079"
  },
  {
    "start": "2300000",
    "end": "2375000"
  },
  {
    "text": "using the building blocks that I showed you right different api's we can combine",
    "start": "2303079",
    "end": "2310640"
  },
  {
    "text": "them and build the layers in just a few lines of code now we need also an object",
    "start": "2310640",
    "end": "2317000"
  },
  {
    "text": "that's gonna serve the data to the model and if you're familiar with machine learning you know usually we don't take",
    "start": "2317000",
    "end": "2322070"
  },
  {
    "text": "the full data set and push it in one go right we slice it into batches and we",
    "start": "2322070",
    "end": "2328579"
  },
  {
    "text": "feed the data set to the model batch by batch and each time the model gets an",
    "start": "2328579",
    "end": "2334160"
  },
  {
    "text": "opportunity to learn adjust weights using back propagation okay so it would",
    "start": "2334160",
    "end": "2340160"
  },
  {
    "text": "be a shame effect to do that manually right slice and dice so here thanks to",
    "start": "2340160",
    "end": "2345560"
  },
  {
    "text": "iterators we just give the data set to the iterator and say okay you need to",
    "start": "2345560",
    "end": "2351440"
  },
  {
    "text": "serve this 32 samples at a time just do it right and again that takes a lot of",
    "start": "2351440",
    "end": "2357760"
  },
  {
    "text": "problems away from us and finally we need an API to train and save models",
    "start": "2357760",
    "end": "2363560"
  },
  {
    "text": "okay and this is going to be called the module API okay so if you start learning",
    "start": "2363560",
    "end": "2369020"
  },
  {
    "text": "about our next net make sure you understand those for those for API is there really enough to get started okay",
    "start": "2369020",
    "end": "2376730"
  },
  {
    "start": "2375000",
    "end": "2424000"
  },
  {
    "text": "so now let's look at some actual code so we're gonna do a hello world first grade because I suspect a lot of you have very",
    "start": "2376730",
    "end": "2384950"
  },
  {
    "text": "little deep learning experience so it's always good to start with deep learning and a simple example then we're going to",
    "start": "2384950",
    "end": "2391970"
  },
  {
    "text": "use pre trained models right and see what we can do with this what's the",
    "start": "2391970",
    "end": "2397190"
  },
  {
    "text": "benefit and then we're gonna train a model from scratch on a simple data set and try to learn some more stuff as well",
    "start": "2397190",
    "end": "2404089"
  },
  {
    "text": "so you'll find all this plus more in github on this at this URL okay",
    "start": "2404089",
    "end": "2411569"
  },
  {
    "text": "all right",
    "start": "2411569",
    "end": "2413900"
  },
  {
    "text": "what can you read it in the back or is it yeah is that okay okay if it gets too",
    "start": "2422559",
    "end": "2431329"
  },
  {
    "start": "2424000",
    "end": "2539000"
  },
  {
    "text": "small just okay wave right okay so here's the yellow world example so what",
    "start": "2431329",
    "end": "2438289"
  },
  {
    "text": "we're going to do here is we're going to create a data set from scratch okay synthetic data set completely random it",
    "start": "2438289",
    "end": "2446180"
  },
  {
    "text": "sounds like a weird ID but you'll see why I want to do this okay so I'm going",
    "start": "2446180",
    "end": "2451280"
  },
  {
    "text": "to create 10,000 samples okay I'm going to use 8,000 for training 2,000 for",
    "start": "2451280",
    "end": "2456440"
  },
  {
    "text": "validation and each sample is actually it's a vector of 100 random float values",
    "start": "2456440",
    "end": "2463819"
  },
  {
    "text": "between 0 & 1 okay so my data set is really matrix right 10,000 lines one",
    "start": "2463819",
    "end": "2472160"
  },
  {
    "text": "line per sample 100 columns right 100 features for sample okay so that's those",
    "start": "2472160",
    "end": "2479270"
  },
  {
    "text": "are my samples and my labels okay the labels that need to be learned by",
    "start": "2479270",
    "end": "2485299"
  },
  {
    "text": "the network are random integers between 0 & 9",
    "start": "2485299",
    "end": "2490430"
  },
  {
    "text": "okay so it's a classification problem I have 10,000 samples each with a label",
    "start": "2490430",
    "end": "2496460"
  },
  {
    "text": "between 0 & 9 and my network should learn how to properly classify them okay this is as simple as it gets",
    "start": "2496460",
    "end": "2503559"
  },
  {
    "text": "alright so let's run those cells okay",
    "start": "2503559",
    "end": "2509680"
  },
  {
    "text": "let's create the data set okay I'm using just again random data here right random",
    "start": "2509680",
    "end": "2517640"
  },
  {
    "text": "data off for examples random data for the categories then I'm splitting those",
    "start": "2517640",
    "end": "2523130"
  },
  {
    "text": "into training and validation right so as you can see I have an 8,000 by 100 matrix for training with 8,000 labels",
    "start": "2523130",
    "end": "2531770"
  },
  {
    "text": "and a 2,000 by 100 matrix for validation",
    "start": "2531770",
    "end": "2537049"
  },
  {
    "text": "with 2,000 labels all right okay done not too much data prep here now let's",
    "start": "2537049",
    "end": "2544099"
  },
  {
    "start": "2539000",
    "end": "2674000"
  },
  {
    "text": "define a network so here I'm using the symbolic API in MX net I'll show you in",
    "start": "2544099",
    "end": "2550520"
  },
  {
    "text": "the sage maker demo a higher level API that called glue on which you may have",
    "start": "2550520",
    "end": "2556510"
  },
  {
    "text": "heard about which has a different way of defining networks but here's the symbolic way so as you can see here I",
    "start": "2556510",
    "end": "2563320"
  },
  {
    "text": "just define an input layer it's called data I don't have to give it shape at",
    "start": "2563320",
    "end": "2568540"
  },
  {
    "text": "the moment and then I have one fully connected layer with 1024 neurons",
    "start": "2568540",
    "end": "2574560"
  },
  {
    "text": "okay fully connected means all neurons are connected to each neuron in that",
    "start": "2574560",
    "end": "2580150"
  },
  {
    "text": "layer is connected to all neurons in the previous layer and all neurons in the next layer okay so it's it's a mesh it's",
    "start": "2580150",
    "end": "2586000"
  },
  {
    "text": "a fully meshed network okay I'm using the relu activation function let's",
    "start": "2586000",
    "end": "2591820"
  },
  {
    "text": "ignore that for the moment then I have a second out a second fully connected layer with ten neurons right",
    "start": "2591820",
    "end": "2600910"
  },
  {
    "text": "and why ten because these are the categories I want to predict okay so in each and that's the output layer",
    "start": "2600910",
    "end": "2606820"
  },
  {
    "text": "so in each of those neurons actually I will have the probability that the given",
    "start": "2606820",
    "end": "2613270"
  },
  {
    "text": "sample belongs to this category right so ideally on the when I predict I would",
    "start": "2613270",
    "end": "2618970"
  },
  {
    "text": "have on those 10 output neurons I would have nine zeros and one one right which",
    "start": "2618970",
    "end": "2626950"
  },
  {
    "text": "would mean hundred percent credibility and practice you never get to round numbers like that but the highest",
    "start": "2626950",
    "end": "2632560"
  },
  {
    "text": "probability there will tell me what category this belongs to okay all right",
    "start": "2632560",
    "end": "2637690"
  },
  {
    "text": "so that's just a few lines just a few lines of code I build my iterator okay",
    "start": "2637690",
    "end": "2643510"
  },
  {
    "text": "so basically saying I want to serve this training set with this batch size here",
    "start": "2643510",
    "end": "2648730"
  },
  {
    "text": "right okay we're going to ignore this a",
    "start": "2648730",
    "end": "2654100"
  },
  {
    "text": "nice then I need to bind you should yawns ooh maybe we need to bind the data",
    "start": "2654100",
    "end": "2661090"
  },
  {
    "text": "to the model thing okay this is the data set I'm going to apply to this model I need to initialize some parameters but",
    "start": "2661090",
    "end": "2667480"
  },
  {
    "text": "you could do without that and use default values and then I'm training and I'm gonna train for 50 epochs let's run",
    "start": "2667480",
    "end": "2674050"
  },
  {
    "start": "2674000",
    "end": "2730000"
  },
  {
    "text": "it one epoch is pushing the data set through the network once batch by batch",
    "start": "2674050",
    "end": "2680530"
  },
  {
    "text": "okay so I'm doing this 50 times it's an iterative process because the network leads needs enough a box to learn",
    "start": "2680530",
    "end": "2688020"
  },
  {
    "text": "okay and as we go through the epochs we see the training accuracy which is how",
    "start": "2688020",
    "end": "2693900"
  },
  {
    "text": "well the network currently predicts the training set so it starts at nine",
    "start": "2693900",
    "end": "2699270"
  },
  {
    "text": "percent and goes up and up and up 95 96",
    "start": "2699270",
    "end": "2706110"
  },
  {
    "text": "98 99 and we get to actually a hundred percent right so first time you do this",
    "start": "2706110",
    "end": "2714450"
  },
  {
    "text": "you get all excited yeah I built a working neural network awesome wait for",
    "start": "2714450",
    "end": "2722340"
  },
  {
    "text": "it right it's okay to get excited but and it stays that one because you can't go any higher right so we're perfect",
    "start": "2722340",
    "end": "2729830"
  },
  {
    "text": "okay so that's what's super fast and I get hundred percent accuracy life is good okay but hey what about real live",
    "start": "2729830",
    "end": "2738960"
  },
  {
    "text": "samples okay I kept twenty percent of my samples on the side right the network",
    "start": "2738960",
    "end": "2744330"
  },
  {
    "text": "has not seen them before and maybe I should measure the accuracy with those what do you think and you",
    "start": "2744330",
    "end": "2750660"
  },
  {
    "text": "guess do we get a hundred percent we get",
    "start": "2750660",
    "end": "2757980"
  },
  {
    "text": "ten percent and that's not that's not a coincidence right we have ten categories",
    "start": "2757980",
    "end": "2764060"
  },
  {
    "text": "it's random data so we're predicting like this right so every once in a while",
    "start": "2764060",
    "end": "2771720"
  },
  {
    "text": "once every ten shots in average on average we get it right okay",
    "start": "2771720",
    "end": "2777720"
  },
  {
    "text": "so two lessons here garbage in garbage out if there are no patterns in your data",
    "start": "2777720",
    "end": "2784580"
  },
  {
    "text": "don't trust that a neural network is going to find them right there is nothing to be learned in that data it's",
    "start": "2784580",
    "end": "2791010"
  },
  {
    "text": "random okay second thing training accuracy will get to one eventually if",
    "start": "2791010",
    "end": "2797460"
  },
  {
    "text": "you train long enough always that's one of the only things you know death taxes",
    "start": "2797460",
    "end": "2802500"
  },
  {
    "text": "and training accuracy getting to one right right yeah don't do anything for",
    "start": "2802500",
    "end": "2808470"
  },
  {
    "text": "the first two but I can help you with a third so a validation accuracy is the",
    "start": "2808470",
    "end": "2814109"
  },
  {
    "text": "one you need to worry about okay so this is not working at all okay pretty cool",
    "start": "2814109",
    "end": "2819270"
  },
  {
    "text": "example right all right okay so training is complicated so let's move on let's say I",
    "start": "2819270",
    "end": "2825660"
  },
  {
    "start": "2822000",
    "end": "2853000"
  },
  {
    "text": "know I don't want to train let's do it like the maybe the Expedia guys did it let's take a preaching Network and",
    "start": "2825660",
    "end": "2831930"
  },
  {
    "text": "sounds like a safer bet okay so here we're gonna grab three models three",
    "start": "2831930",
    "end": "2837900"
  },
  {
    "text": "image classification models from the MX that models ooh right that's a cool name",
    "start": "2837900",
    "end": "2843269"
  },
  {
    "text": "those libraries they have model zoos collections of pre-training networks on large data sets okay so I downloaded",
    "start": "2843269",
    "end": "2850739"
  },
  {
    "text": "them for an interest of time already and when you download them you actually",
    "start": "2850739",
    "end": "2856410"
  },
  {
    "start": "2853000",
    "end": "3011000"
  },
  {
    "text": "download the network definition so you get a JSON file that defines all the layers but you don't need to read that",
    "start": "2856410",
    "end": "2862019"
  },
  {
    "text": "stuff just know that it's there and you get a parameter file that stores the",
    "start": "2862019",
    "end": "2867479"
  },
  {
    "text": "actual weights right that have been learned during training and I also need a file with the category names these",
    "start": "2867479",
    "end": "2873809"
  },
  {
    "text": "datasets have been trained on the data set called imagenet which is a very large image data set with a thousand",
    "start": "2873809",
    "end": "2879239"
  },
  {
    "text": "categories okay so in that since said txt file I've got the category in numbers and the descriptions I'm going",
    "start": "2879239",
    "end": "2885989"
  },
  {
    "text": "to need them later on to to display results okay all right so let's load",
    "start": "2885989",
    "end": "2891959"
  },
  {
    "text": "this let's import an X net how do you load a model well basically it's one",
    "start": "2891959",
    "end": "2900059"
  },
  {
    "text": "line of code the rest is just boilerplate you just load it called load",
    "start": "2900059",
    "end": "2905609"
  },
  {
    "text": "checkpoint and you pass the name of the file that you download it okay so that creates a symbol a symbolic network that",
    "start": "2905609",
    "end": "2913949"
  },
  {
    "text": "you can use okay so you don't need to define it like we did earlier you can just load it okay I need to decide",
    "start": "2913949",
    "end": "2919289"
  },
  {
    "text": "whether I want to use it on GPU and CPU and you can see how easy it is it's just",
    "start": "2919289",
    "end": "2924420"
  },
  {
    "text": "one parameter by default you run on CPU if you want to run on GPU just said that context parameter if I want to use",
    "start": "2924420",
    "end": "2930599"
  },
  {
    "text": "multiple GPUs I would just have a list of GPUs in here okay then I need to bind",
    "start": "2930599",
    "end": "2936479"
  },
  {
    "text": "it so binding it really means defining the shape of the input layer okay so this pre-trained network has been",
    "start": "2936479",
    "end": "2942779"
  },
  {
    "text": "trained for color images there are 22 24 by 2 24 pixels so the input shape would",
    "start": "2942779",
    "end": "2949529"
  },
  {
    "text": "be one image three channels red green and blue to twenty-four by 224 so my input shape is",
    "start": "2949529",
    "end": "2956390"
  },
  {
    "text": "really to four dimension tensor okay fine I define this I need to load my",
    "start": "2956390",
    "end": "2963800"
  },
  {
    "text": "categories in memory that's just Python let's ignore that I need to load an",
    "start": "2963800",
    "end": "2969500"
  },
  {
    "text": "image from disk into an ND array right so my JPEG file needs to become that",
    "start": "2969500",
    "end": "2975190"
  },
  {
    "text": "three by two 24 by 224 tensor right so I need to make sure red green and blue are",
    "start": "2975190",
    "end": "2981590"
  },
  {
    "text": "in the right order for whatever reason OpenCV which I'm using here loads images with blue green and red what's the",
    "start": "2981590",
    "end": "2990530"
  },
  {
    "text": "design of British maybe I don't know just a guess just a guess right loading in the wrong",
    "start": "2990530",
    "end": "2997880"
  },
  {
    "text": "order alright anyway more power to them it's a fantastic library I need to resize it to",
    "start": "2997880",
    "end": "3003670"
  },
  {
    "text": "to 24 - 24 and I'm returning this ND array ok so that's just data loading",
    "start": "3003670",
    "end": "3009040"
  },
  {
    "text": "here nothing nothing bad and predicting really means loading the image into an",
    "start": "3009040",
    "end": "3015580"
  },
  {
    "start": "3011000",
    "end": "3047000"
  },
  {
    "text": "array and calling that forward API which really pushes that sample into the",
    "start": "3015580",
    "end": "3021550"
  },
  {
    "text": "network getting the outputs so getting the thousand probabilities remember one",
    "start": "3021550",
    "end": "3027070"
  },
  {
    "text": "probability per output neuron sorting them and returning the top five okay and",
    "start": "3027070",
    "end": "3034450"
  },
  {
    "text": "if you're not familiar with Python witness don't worry about this this is really the only thing I'm doing here",
    "start": "3034450",
    "end": "3040060"
  },
  {
    "text": "sorting the array taking the top five right okay let's run this stuff okay so",
    "start": "3040060",
    "end": "3048040"
  },
  {
    "text": "now it's time to load my models okay so I'm loading all three models here okay",
    "start": "3048040",
    "end": "3053770"
  },
  {
    "text": "using the functions I just showed you and let's try to predict this image all",
    "start": "3053770",
    "end": "3061990"
  },
  {
    "text": "right okay here we go",
    "start": "3061990",
    "end": "3066660"
  },
  {
    "text": "all right so here I'm running on CPU right so my first model says 96 9% it's",
    "start": "3070220",
    "end": "3076530"
  },
  {
    "text": "a violin the second model and all three",
    "start": "3076530",
    "end": "3082080"
  },
  {
    "text": "are a convolutional neural networks gives almost the same result funny and the third one is just a lower",
    "start": "3082080",
    "end": "3088170"
  },
  {
    "text": "probability but as you can see it's quite fast or too right because it's",
    "start": "3088170",
    "end": "3093240"
  },
  {
    "text": "it's just more clever it is very deep but it's clever that's the only way I can put it simply so as you can see",
    "start": "3093240",
    "end": "3100700"
  },
  {
    "text": "there are pretty wild differences not necessarily in prediction but in",
    "start": "3100700",
    "end": "3106050"
  },
  {
    "text": "performance okay all right so that worked right now let's try again on the",
    "start": "3106050",
    "end": "3111960"
  },
  {
    "text": "GPU so I'm just loading the networks again but this time for the GPU oh",
    "start": "3111960",
    "end": "3118550"
  },
  {
    "text": "what's going on here out of memory oh",
    "start": "3118940",
    "end": "3124200"
  },
  {
    "text": "that's interesting okay fair enough okay",
    "start": "3124200",
    "end": "3131690"
  },
  {
    "text": "let me fix this too much stuff running in there probably",
    "start": "3135500",
    "end": "3143440"
  },
  {
    "text": "oh yeah let's lie",
    "start": "3147420",
    "end": "3151010"
  },
  {
    "text": "yeah all right yeah that's a lot of",
    "start": "3152439",
    "end": "3159469"
  },
  {
    "text": "stuff running so yeah it's just yeah okay all right yeah let's just close",
    "start": "3159469",
    "end": "3169430"
  },
  {
    "text": "everything here thank you and that should not work right hopefully",
    "start": "3169430",
    "end": "3180789"
  },
  {
    "text": "okay let's restart everything",
    "start": "3184509",
    "end": "3189009"
  },
  {
    "text": "come on",
    "start": "3199560",
    "end": "3202710"
  },
  {
    "text": "yes",
    "start": "3204890",
    "end": "3207890"
  },
  {
    "text": "all right so they just to do this quickly okay so CPU prediction and we",
    "start": "3210530",
    "end": "3221030"
  },
  {
    "text": "should see yes sorry about that and I see the same predictions right the",
    "start": "3221030",
    "end": "3227180"
  },
  {
    "start": "3224000",
    "end": "3259000"
  },
  {
    "text": "results are the same right but as you can see the performance is much better okay so yes you get better",
    "start": "3227180",
    "end": "3234350"
  },
  {
    "text": "performance for with GPUs but does it really matter that you predict in point",
    "start": "3234350",
    "end": "3240170"
  },
  {
    "text": "oh five microsecond versus point one microsecond right maybe that's good enough for your app on CPU and as you",
    "start": "3240170",
    "end": "3247190"
  },
  {
    "text": "can see the cost as we saw earlier the cost is much better okay so bottom line we don't get to kill the Python lines",
    "start": "3247190",
    "end": "3253760"
  },
  {
    "text": "here but trust me it's 60 lines with a lot of comments so it's not a lot of code so now let's learn from scratch",
    "start": "3253760",
    "end": "3260840"
  },
  {
    "start": "3259000",
    "end": "3385000"
  },
  {
    "text": "okay that's the last thing I want to do at five minutes left should be enough so remember that lunette convolutional",
    "start": "3260840",
    "end": "3267050"
  },
  {
    "text": "neural network that we saw while we're going to design that one and trade okay so and let me run everything now while I",
    "start": "3267050",
    "end": "3276590"
  },
  {
    "text": "explain it so first thing is I need to",
    "start": "3276590",
    "end": "3282110"
  },
  {
    "text": "download the data set hopefully and",
    "start": "3282110",
    "end": "3289000"
  },
  {
    "text": "please download the data set all right",
    "start": "3289330",
    "end": "3295750"
  },
  {
    "text": "sometimes Jupiter gets a little annoying here",
    "start": "3297970",
    "end": "3304240"
  },
  {
    "text": "here we go okay so underling I'm downloading the M nice data set this data set is built from 60,000",
    "start": "3307620",
    "end": "3318090"
  },
  {
    "text": "handwritten digits okay which are 0 to 9 okay so the name of the game will be to",
    "start": "3318090",
    "end": "3324630"
  },
  {
    "text": "classify those images in the right category obviously okay so let's run all",
    "start": "3324630",
    "end": "3334500"
  },
  {
    "text": "below yeah come on",
    "start": "3334500",
    "end": "3341720"
  },
  {
    "text": "interesting okay so it looks like Jupiter is playing tricks on me now",
    "start": "3345800",
    "end": "3352600"
  },
  {
    "text": "yeah okay sorry about that now it's time to run this thing okay so we downloaded",
    "start": "3357280",
    "end": "3366580"
  },
  {
    "text": "the data set it's already split between training and validation okay so here I'm",
    "start": "3366580",
    "end": "3372010"
  },
  {
    "text": "going to train for 25 epochs all right I use iterators for the training of the",
    "start": "3372010",
    "end": "3378100"
  },
  {
    "text": "validation data set the cool thing is we already have pre-built iterators for M this so we can even save under",
    "start": "3378100",
    "end": "3384220"
  },
  {
    "text": "parameters and this is the network definition again using the symbolic API right and it's pretty much the one you",
    "start": "3384220",
    "end": "3391690"
  },
  {
    "start": "3385000",
    "end": "3457000"
  },
  {
    "text": "saw in the picture with a 60 kilometer per hour sign right with just a few tweaks but that's all it takes and as",
    "start": "3391690",
    "end": "3398650"
  },
  {
    "text": "you can see we have high-level symbols for convolution activation pooling etc etc so you know we just need to give the",
    "start": "3398650",
    "end": "3405430"
  },
  {
    "text": "right sizes and we don't have to fully understand how those objects work we can dive deeper later but for the moment we",
    "start": "3405430",
    "end": "3412960"
  },
  {
    "text": "could literally look at at the network on paper and encode it with the symbolic API okay",
    "start": "3412960",
    "end": "3419680"
  },
  {
    "text": "I'm gonna run this on the GPU and I'm binding the model to the data set and",
    "start": "3419680",
    "end": "3426280"
  },
  {
    "text": "the iterators that I downloaded and then I'm training for 25 bucks okay alright",
    "start": "3426280",
    "end": "3433300"
  },
  {
    "text": "so I can see those air pockets going by fine and now we need to be careful right and look at both training accuracy and",
    "start": "3433300",
    "end": "3440860"
  },
  {
    "text": "validation accuracy so training accuracy goes up we do get to one right",
    "start": "3440860",
    "end": "3449070"
  },
  {
    "text": "eventually and validation accuracy which is the one that really really care about is ninety nine point two almost right so",
    "start": "3449070",
    "end": "3456670"
  },
  {
    "text": "looks more promising than the previous example yes I can save the model okay",
    "start": "3456670",
    "end": "3464260"
  },
  {
    "start": "3457000",
    "end": "3600000"
  },
  {
    "text": "using this simple API and now I want to predict with it okay so as you can see",
    "start": "3464260",
    "end": "3470140"
  },
  {
    "text": "training here is really these twenty lines of code right it's super easy",
    "start": "3470140",
    "end": "3476380"
  },
  {
    "text": "right those eye high level API is there super easy so the last thing I want to show you let me just reload this is how",
    "start": "3476380",
    "end": "3484960"
  },
  {
    "text": "you can predict now with this okay with my violin example I took a model",
    "start": "3484960",
    "end": "3490530"
  },
  {
    "text": "models ooh loading it etc here it's one of mine okay but it is pretty much the",
    "start": "3490530",
    "end": "3495660"
  },
  {
    "text": "same process so let's reset the notebook to make sure we don't have any more surprises okay I need to define the",
    "start": "3495660",
    "end": "3504840"
  },
  {
    "text": "image again okay the difference here is it's a these are black and white images right that I'm going to load so",
    "start": "3504840",
    "end": "3511760"
  },
  {
    "text": "grayscale will work just fine predicting is pretty much the exact same code as",
    "start": "3511760",
    "end": "3516960"
  },
  {
    "text": "you saw before right loading into an ND array predicting loading a model is the exact same code",
    "start": "3516960",
    "end": "3522540"
  },
  {
    "text": "you saw before and now I'm going to load my pre train model and I'm gonna predict",
    "start": "3522540",
    "end": "3529980"
  },
  {
    "text": "some digits right and these are real-life samples that I drew myself I",
    "start": "3529980",
    "end": "3536910"
  },
  {
    "text": "wanted to I wanted them to be ugly because real-life samples are never good looking right training sets they all",
    "start": "3536910",
    "end": "3543870"
  },
  {
    "text": "were they're always so nice validation set they're too easy usually so you need",
    "start": "3543870",
    "end": "3549270"
  },
  {
    "text": "ugly real-life samples to really understand how well your model does right so these are paintbrush you know",
    "start": "3549270",
    "end": "3556290"
  },
  {
    "text": "probably built with paintbrush and and a mouse right so predicting those digits I",
    "start": "3556290",
    "end": "3562740"
  },
  {
    "text": "get ten probabilities on the output layer right and I limited myself to four",
    "start": "3562740",
    "end": "3568200"
  },
  {
    "text": "decimals so it's rounded up to one but it's actually zero nine nine nine nine nine nine nine something okay so yeah",
    "start": "3568200",
    "end": "3576150"
  },
  {
    "text": "this is really a zero right we're confident this is really a one two is",
    "start": "3576150",
    "end": "3582420"
  },
  {
    "text": "good three is very good for is very good five six seven is good eight no problem",
    "start": "3582420",
    "end": "3593570"
  },
  {
    "text": "and nine is totally wrong yes right yeah okay because it's ugly",
    "start": "3593570",
    "end": "3600990"
  },
  {
    "text": "and do you have any Americans in the room oh that's just yeah okay you have",
    "start": "3600990",
    "end": "3608790"
  },
  {
    "text": "to explain to me how you draw those nines in America yeah it's a specific",
    "start": "3608790",
    "end": "3615480"
  },
  {
    "text": "process believe me because I could never I could never draw a nine successfully the Andes data set is an American data",
    "start": "3615480",
    "end": "3622230"
  },
  {
    "text": "set and I can never get the nine right so you know in France we do it with a very round end like this it never",
    "start": "3622230",
    "end": "3629660"
  },
  {
    "text": "works and so I try the straight and like this it doesn't work either so here's the test for you know for the homeland",
    "start": "3629660",
    "end": "3636590"
  },
  {
    "text": "security teams right if you want to prove that you're an American citizen draw nine right they would catch me",
    "start": "3636590",
    "end": "3644810"
  },
  {
    "text": "every time so that doesn't really work okay so again from one training to the",
    "start": "3644810",
    "end": "3650120"
  },
  {
    "text": "next it might work it depends it depends on you know the initial the initialization of the model sometimes I",
    "start": "3650120",
    "end": "3657500"
  },
  {
    "text": "it they do understand my ugly nines sometimes they don't it goes to show that you should never train only one",
    "start": "3657500",
    "end": "3663770"
  },
  {
    "text": "model you should train many models score them for validation and score them on real-life samples and pick the one that",
    "start": "3663770",
    "end": "3669890"
  },
  {
    "text": "works best okay so this shows that automating training is a really",
    "start": "3669890",
    "end": "3676610"
  },
  {
    "text": "important process and this is why stage maker is gonna help right to to tie in",
    "start": "3676610",
    "end": "3683750"
  },
  {
    "text": "into the further session alright just before I let yang tell you all about chatbots",
    "start": "3683750",
    "end": "3689600"
  },
  {
    "text": "fascinating subjects I want to share a few more resources you will get the slides right my my colleagues will see",
    "start": "3689600",
    "end": "3695900"
  },
  {
    "text": "to that so some resources on the SS website all",
    "start": "3695900",
    "end": "3701300"
  },
  {
    "text": "the MX net links including the github code and the gluon API which I'll talk",
    "start": "3701300",
    "end": "3708110"
  },
  {
    "text": "about in the sage maker session and I'm actively blogging as well on medium and",
    "start": "3708110",
    "end": "3714340"
  },
  {
    "text": "you'll find a good bunch of articles over there and I want to point out a",
    "start": "3714340",
    "end": "3719420"
  },
  {
    "text": "single article that is still fairly recent it's in two parts I call it ten",
    "start": "3719420",
    "end": "3724910"
  },
  {
    "text": "steps on the road to deep running and it's basically I'm I'm telling you how I did it not to show off that's not the",
    "start": "3724910",
    "end": "3732350"
  },
  {
    "text": "point I'm just showing you what resources I used and in what order to learn this stuff right I started from",
    "start": "3732350",
    "end": "3738230"
  },
  {
    "text": "scratch you know I know a tiny bit about this stuff now and if I did it you can",
    "start": "3738230",
    "end": "3743870"
  },
  {
    "text": "do it and these are all the resources and the links and the order in which I did it so hopefully this can help you as",
    "start": "3743870",
    "end": "3749930"
  },
  {
    "text": "well okay alright I'm done I can take a break but you don't take a break right",
    "start": "3749930",
    "end": "3755930"
  },
  {
    "text": "because Ian is we have a break alright oh okay we're friendlier than in in the Nordics right we had no brakes in the Nordics so you",
    "start": "3755930",
    "end": "3763059"
  },
  {
    "text": "have a break get more coffee chatbot session afterwards I'm gonna take a nap check my demos and I'll see you after",
    "start": "3763059",
    "end": "3769930"
  },
  {
    "text": "lunch for more sessions alright thank you very much [Applause]",
    "start": "3769930",
    "end": "3779909"
  }
]