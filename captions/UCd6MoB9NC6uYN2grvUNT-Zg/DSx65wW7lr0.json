[
  {
    "text": "in this video you'll see how to create",
    "start": "640",
    "end": "2240"
  },
  {
    "text": "canaries using amazon cloudwatch",
    "start": "2240",
    "end": "4080"
  },
  {
    "text": "synthetics",
    "start": "4080",
    "end": "5040"
  },
  {
    "text": "with this feature you can create",
    "start": "5040",
    "end": "6640"
  },
  {
    "text": "different kinds of canaries to",
    "start": "6640",
    "end": "7919"
  },
  {
    "text": "continually verify your customer",
    "start": "7919",
    "end": "9519"
  },
  {
    "text": "experience",
    "start": "9519",
    "end": "10400"
  },
  {
    "text": "customizing each canary with alarms",
    "start": "10400",
    "end": "12400"
  },
  {
    "text": "environment variables and other settings",
    "start": "12400",
    "end": "14320"
  },
  {
    "text": "depending on the needs of your",
    "start": "14320",
    "end": "15360"
  },
  {
    "text": "organization",
    "start": "15360",
    "end": "17199"
  },
  {
    "text": "let's start by navigating to cloudwatch",
    "start": "17199",
    "end": "18960"
  },
  {
    "text": "synthetics",
    "start": "18960",
    "end": "21599"
  },
  {
    "text": "amazon cloudwatch synthetics canaries",
    "start": "24240",
    "end": "26240"
  },
  {
    "text": "are configurable scripts that",
    "start": "26240",
    "end": "27519"
  },
  {
    "text": "continuously monitor your application",
    "start": "27519",
    "end": "29359"
  },
  {
    "text": "endpoints and apis",
    "start": "29359",
    "end": "31840"
  },
  {
    "text": "by using canaries you can discover",
    "start": "31840",
    "end": "33760"
  },
  {
    "text": "issues with your website before your",
    "start": "33760",
    "end": "35200"
  },
  {
    "text": "customers do",
    "start": "35200",
    "end": "37840"
  },
  {
    "text": "you can create several kinds of canaries",
    "start": "38399",
    "end": "40320"
  },
  {
    "text": "and you can create them in a few",
    "start": "40320",
    "end": "41520"
  },
  {
    "text": "different ways",
    "start": "41520",
    "end": "42719"
  },
  {
    "text": "let's begin with blueprints you can use",
    "start": "42719",
    "end": "45680"
  },
  {
    "text": "blueprints to monitor your apis",
    "start": "45680",
    "end": "47680"
  },
  {
    "text": "check broken links and more",
    "start": "47680",
    "end": "51120"
  },
  {
    "text": "the gui workflow builder blueprint for",
    "start": "51920",
    "end": "53840"
  },
  {
    "text": "instance lets you verify that actions",
    "start": "53840",
    "end": "55680"
  },
  {
    "text": "can be taken on your web",
    "start": "55680",
    "end": "57600"
  },
  {
    "text": "for example if you have a web page with",
    "start": "57600",
    "end": "59440"
  },
  {
    "text": "a login form the canary can populate the",
    "start": "59440",
    "end": "61520"
  },
  {
    "text": "user and password fields and submit the",
    "start": "61520",
    "end": "63440"
  },
  {
    "text": "form to make sure the page is working",
    "start": "63440",
    "end": "64878"
  },
  {
    "text": "correctly",
    "start": "64879",
    "end": "66640"
  },
  {
    "text": "in this case however we're going to",
    "start": "66640",
    "end": "68080"
  },
  {
    "text": "create a heartbeat monitoring canary for",
    "start": "68080",
    "end": "69840"
  },
  {
    "text": "our sample pet adoption site",
    "start": "69840",
    "end": "72320"
  },
  {
    "text": "heartbeat scripts load the specified url",
    "start": "72320",
    "end": "74640"
  },
  {
    "text": "and store a screenshot of the page",
    "start": "74640",
    "end": "76240"
  },
  {
    "text": "an http archive file and logs of",
    "start": "76240",
    "end": "78640"
  },
  {
    "text": "accessed urls",
    "start": "78640",
    "end": "80320"
  },
  {
    "text": "you can use this information to view",
    "start": "80320",
    "end": "81759"
  },
  {
    "text": "detailed performance data about your web",
    "start": "81759",
    "end": "84840"
  },
  {
    "text": "pages",
    "start": "84840",
    "end": "86080"
  },
  {
    "text": "we'll enter the url for our sample pet",
    "start": "86080",
    "end": "88000"
  },
  {
    "text": "adoption site",
    "start": "88000",
    "end": "90720"
  },
  {
    "text": "the script editor area of the page",
    "start": "92240",
    "end": "93840"
  },
  {
    "text": "displays the canary as a node.js script",
    "start": "93840",
    "end": "97040"
  },
  {
    "text": "cloudwatch synthetics currently supports",
    "start": "97040",
    "end": "98960"
  },
  {
    "text": "runtimes that use node.js for scripts",
    "start": "98960",
    "end": "101360"
  },
  {
    "text": "and the puppeteer framework",
    "start": "101360",
    "end": "102880"
  },
  {
    "text": "and runtimes that use python for",
    "start": "102880",
    "end": "104399"
  },
  {
    "text": "scripting and selenium webdriver for the",
    "start": "104399",
    "end": "106320"
  },
  {
    "text": "framework",
    "start": "106320",
    "end": "108798"
  },
  {
    "text": "in this case let's move on without",
    "start": "110560",
    "end": "112240"
  },
  {
    "text": "inputting any environment variables",
    "start": "112240",
    "end": "114960"
  },
  {
    "text": "you can run a canary once or on a",
    "start": "114960",
    "end": "116719"
  },
  {
    "text": "regular schedule we'll retain the",
    "start": "116719",
    "end": "118399"
  },
  {
    "text": "default settings",
    "start": "118399",
    "end": "121119"
  },
  {
    "text": "we'll also keep the default timeout",
    "start": "121439",
    "end": "123040"
  },
  {
    "text": "settings",
    "start": "123040",
    "end": "125439"
  },
  {
    "text": "if you have specific data retention",
    "start": "125920",
    "end": "127520"
  },
  {
    "text": "policies you can change the default",
    "start": "127520",
    "end": "129039"
  },
  {
    "text": "settings here to maintain compliance",
    "start": "129039",
    "end": "132720"
  },
  {
    "text": "under access permissions you can choose",
    "start": "134959",
    "end": "136879"
  },
  {
    "text": "whether to create a new identity and",
    "start": "136879",
    "end": "138560"
  },
  {
    "text": "access management or iam role",
    "start": "138560",
    "end": "140480"
  },
  {
    "text": "that's specific to this canary or use an",
    "start": "140480",
    "end": "142319"
  },
  {
    "text": "existing role we'll create a new role",
    "start": "142319",
    "end": "146319"
  },
  {
    "text": "you can allow synthetics to create cloud",
    "start": "147599",
    "end": "149280"
  },
  {
    "text": "watch alarms for your canary",
    "start": "149280",
    "end": "150560"
  },
  {
    "text": "automatically",
    "start": "150560",
    "end": "152160"
  },
  {
    "text": "let's add an alarm that will notify us",
    "start": "152160",
    "end": "153920"
  },
  {
    "text": "via an amazon simple notification",
    "start": "153920",
    "end": "155760"
  },
  {
    "text": "service",
    "start": "155760",
    "end": "156239"
  },
  {
    "text": "or amazon sns topic if our canary fails",
    "start": "156239",
    "end": "158959"
  },
  {
    "text": "two or more times in 15 minutes",
    "start": "158959",
    "end": "162720"
  },
  {
    "text": "if your endpoint is under a virtual",
    "start": "167840",
    "end": "169519"
  },
  {
    "text": "private cloud you can select it here",
    "start": "169519",
    "end": "172319"
  },
  {
    "text": "cloudwatch synthetics can be integrated",
    "start": "172319",
    "end": "174000"
  },
  {
    "text": "with aws x-ray and cloudwatch service",
    "start": "174000",
    "end": "176319"
  },
  {
    "text": "lens service maps",
    "start": "176319",
    "end": "178239"
  },
  {
    "text": "let's enable the integration and create",
    "start": "178239",
    "end": "179920"
  },
  {
    "text": "the canary",
    "start": "179920",
    "end": "182480"
  },
  {
    "text": "our heartbeat monitoring canary has been",
    "start": "183040",
    "end": "184720"
  },
  {
    "text": "successfully created",
    "start": "184720",
    "end": "187760"
  },
  {
    "text": "next let's create an api canary",
    "start": "188720",
    "end": "192640"
  },
  {
    "text": "rather than using the api blueprint",
    "start": "193440",
    "end": "195360"
  },
  {
    "text": "we'll use the inline editor and upload a",
    "start": "195360",
    "end": "197599"
  },
  {
    "text": "custom",
    "start": "197599",
    "end": "198000"
  },
  {
    "text": "node.js script",
    "start": "198000",
    "end": "201200"
  },
  {
    "text": "we'll specify our lambda handler which",
    "start": "207360",
    "end": "209360"
  },
  {
    "text": "is required when using the inline editor",
    "start": "209360",
    "end": "212560"
  },
  {
    "text": "as you can see the script references an",
    "start": "212560",
    "end": "214400"
  },
  {
    "text": "environment variable",
    "start": "214400",
    "end": "215680"
  },
  {
    "text": "which allows the same code to be reused",
    "start": "215680",
    "end": "217519"
  },
  {
    "text": "for multiple canaries",
    "start": "217519",
    "end": "219120"
  },
  {
    "text": "instead of modifying the code we can",
    "start": "219120",
    "end": "220799"
  },
  {
    "text": "define the hostname variable in the",
    "start": "220799",
    "end": "224400"
  },
  {
    "text": "template",
    "start": "224840",
    "end": "227840"
  },
  {
    "text": "we'll use the same alarm and tracing",
    "start": "230640",
    "end": "232239"
  },
  {
    "text": "settings we selected for the heartbeat",
    "start": "232239",
    "end": "235599"
  },
  {
    "text": "canary",
    "start": "238840",
    "end": "241840"
  },
  {
    "text": "let's verify the environment variable",
    "start": "252000",
    "end": "253840"
  },
  {
    "text": "value for the api canary we just created",
    "start": "253840",
    "end": "258160"
  },
  {
    "text": "we can see that the environment variable",
    "start": "259280",
    "end": "260880"
  },
  {
    "text": "for the hostname matches the value we",
    "start": "260880",
    "end": "262639"
  },
  {
    "text": "entered",
    "start": "262639",
    "end": "263600"
  },
  {
    "text": "let's create one more kind of canary",
    "start": "263600",
    "end": "265440"
  },
  {
    "text": "this time using the canary recorder",
    "start": "265440",
    "end": "267120"
  },
  {
    "text": "blueprint",
    "start": "267120",
    "end": "268720"
  },
  {
    "text": "note that the recorder is a google",
    "start": "268720",
    "end": "270080"
  },
  {
    "text": "chrome extension if you haven't already",
    "start": "270080",
    "end": "272240"
  },
  {
    "text": "downloaded the recorder",
    "start": "272240",
    "end": "273440"
  },
  {
    "text": "the cloudwatch synthetics console",
    "start": "273440",
    "end": "274960"
  },
  {
    "text": "provides a download link",
    "start": "274960",
    "end": "277280"
  },
  {
    "text": "we'll use our sample pet adoption site",
    "start": "277280",
    "end": "278960"
  },
  {
    "text": "as the endpoint where we want to begin",
    "start": "278960",
    "end": "280840"
  },
  {
    "text": "recording let's open the url in a new",
    "start": "280840",
    "end": "283199"
  },
  {
    "text": "tab",
    "start": "283199",
    "end": "285440"
  },
  {
    "text": "we'll record some simple site navigation",
    "start": "286240",
    "end": "290160"
  },
  {
    "text": "now that the plugin is recording let's",
    "start": "290639",
    "end": "292720"
  },
  {
    "text": "navigate to the adoption list",
    "start": "292720",
    "end": "294479"
  },
  {
    "text": "then to perform housekeeping and finally",
    "start": "294479",
    "end": "297120"
  },
  {
    "text": "back to the home page",
    "start": "297120",
    "end": "299520"
  },
  {
    "text": "next we'll stop the recorder and copy",
    "start": "299520",
    "end": "301199"
  },
  {
    "text": "the generated node.js script to our",
    "start": "301199",
    "end": "303199"
  },
  {
    "text": "clipboard",
    "start": "303199",
    "end": "305680"
  },
  {
    "text": "let's go back to cloudwatch to build the",
    "start": "307680",
    "end": "309280"
  },
  {
    "text": "canary",
    "start": "309280",
    "end": "311840"
  },
  {
    "text": "we'll paste the node.js script here",
    "start": "318960",
    "end": "322960"
  },
  {
    "text": "we'll leave the other settings as is and",
    "start": "323280",
    "end": "325039"
  },
  {
    "text": "create the canary",
    "start": "325039",
    "end": "327919"
  },
  {
    "text": "the canary was created successfully you",
    "start": "329680",
    "end": "332479"
  },
  {
    "text": "can view details about your canaries and",
    "start": "332479",
    "end": "334240"
  },
  {
    "text": "see statistics about their runs from",
    "start": "334240",
    "end": "335759"
  },
  {
    "text": "this page",
    "start": "335759",
    "end": "336639"
  },
  {
    "text": "or view metrics in service lines and",
    "start": "336639",
    "end": "338400"
  },
  {
    "text": "x-ray if that capability was enabled",
    "start": "338400",
    "end": "341440"
  },
  {
    "text": "you can edit or delete a canary if",
    "start": "341440",
    "end": "343039"
  },
  {
    "text": "necessary let's delete a canary",
    "start": "343039",
    "end": "347280"
  },
  {
    "text": "notice that the delete option is grayed",
    "start": "348960",
    "end": "350639"
  },
  {
    "text": "out in order to delete a running canary",
    "start": "350639",
    "end": "352880"
  },
  {
    "text": "we must first stop it",
    "start": "352880",
    "end": "356160"
  },
  {
    "text": "with a canary now in a stopped state we",
    "start": "359440",
    "end": "361520"
  },
  {
    "text": "can delete it",
    "start": "361520",
    "end": "364160"
  },
  {
    "text": "this prompt safeguards your canaries",
    "start": "364240",
    "end": "365759"
  },
  {
    "text": "from accidental deletion",
    "start": "365759",
    "end": "369039"
  },
  {
    "text": "you've just seen how to create and",
    "start": "372479",
    "end": "374080"
  },
  {
    "text": "delete canaries using amazon cloudwatch",
    "start": "374080",
    "end": "376400"
  },
  {
    "text": "synthetics",
    "start": "376400",
    "end": "377919"
  },
  {
    "text": "you can learn more about this topic in",
    "start": "377919",
    "end": "379360"
  },
  {
    "text": "the description and links for this video",
    "start": "379360",
    "end": "381759"
  },
  {
    "text": "thanks for watching now it's your turn",
    "start": "381759",
    "end": "383520"
  },
  {
    "text": "to try",
    "start": "383520",
    "end": "387840"
  }
]