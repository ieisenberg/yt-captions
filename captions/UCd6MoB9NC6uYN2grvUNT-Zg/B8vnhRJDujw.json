[
  {
    "start": "0",
    "end": "73000"
  },
  {
    "text": "KEVIN MILLER: Okay, good afternoon everyone and thank you for coming to the session here. We're going to talk about VPC, Virtual\nPrivate Cloud,",
    "start": "1000",
    "end": "8100"
  },
  {
    "text": "do a bit of a deep dive. I'm Kevin Miller, and I manage some\nof the networking team,",
    "start": "8100",
    "end": "13500"
  },
  {
    "text": "I'm on the team that manages networking\nfeatures within EC2. So, that includes Virtual Private Cloud, our virtual private network service,\nDirect Connect,",
    "start": "13500",
    "end": "21400"
  },
  {
    "text": "and other networking related capabilities\nwithin EC2. So, before I dive into some of the\nmaterial today,",
    "start": "21400",
    "end": "29000"
  },
  {
    "text": "I do want to mention that there's\nplenty of good content outside of this talk on VPC.",
    "start": "29000",
    "end": "34800"
  },
  {
    "text": "We're not going to be able to go through everything here today about VPC,\nbut there's a lot of content.",
    "start": "34800",
    "end": "40800"
  },
  {
    "text": "Most of these are talks from reInvent\nback in November. The content is still pretty fresh and I definitely recommend it if\nany of these topics sound interesting.",
    "start": "40800",
    "end": "48899"
  },
  {
    "text": "Check out the videos and the slides, they're all online, pretty easy to\nfind, so have at it.",
    "start": "48900",
    "end": "56000"
  },
  {
    "text": "And I just want to preface this by saying that we are going to be diving into\nexpert mode today. This is a deep dive, so expect us\nto go fairly deep.",
    "start": "56000",
    "end": "63300"
  },
  {
    "text": "I'm going to be showing, you know,\ncommand line parameters, how you configure VPC, and talk about",
    "start": "63300",
    "end": "68400"
  },
  {
    "text": "some of the deeper aspects of the service. So, get ready for that and I hope\nI don't let you down.",
    "start": "68400",
    "end": "73800"
  },
  {
    "start": "73000",
    "end": "326000"
  },
  {
    "text": "There's really four things we're\ngoing to be talking about today, and, you know, four different areas. The first is going to be some of\nthe routing",
    "start": "73800",
    "end": "80200"
  },
  {
    "text": "and private connectivity features\nwe have in Virtual Private Cloud, and this includes connectivity from\na data center or office",
    "start": "80200",
    "end": "87400"
  },
  {
    "text": "into Virtual Private Cloud. The second topic will be our VPC\npeering feature.",
    "start": "87400",
    "end": "93100"
  },
  {
    "text": "This is a feature that allows you\nto have multiple VPC that are interconnected in AWS, so\nyou don't have to",
    "start": "93100",
    "end": "100500"
  },
  {
    "text": "interconnect them outside of AWS\nor route to them independently. So, we'll talk about that.",
    "start": "100500",
    "end": "106300"
  },
  {
    "text": "The third is I want to talk about\nenhanced networking, which is a feature that we announce\nabout a year and a half ago",
    "start": "106300",
    "end": "112900"
  },
  {
    "text": "and really increases network performance\nfor instances that run in a VPC and use enhanced\nnetworking.",
    "start": "112900",
    "end": "118300"
  },
  {
    "text": "So, want to make sure that all of you are able to take advantage of the\nbest networking performance you can, and that's really by using our enhanced\nnetworking capabilities.",
    "start": "118300",
    "end": "127300"
  },
  {
    "text": "And finally, some of you may be customers\nof AWS for a long time, thank you, and may be running in\nour EC2-Classic environment",
    "start": "127300",
    "end": "134200"
  },
  {
    "text": "outside of VPC. We are trying to make it as easy\nas possible for you to take advantage of all the great\nfeatures we have in the VPC,",
    "start": "134200",
    "end": "141200"
  },
  {
    "text": "and so we've built a feature called\nClassicLink that helps you adopt VPC if you have\na large Classic infrastructure.",
    "start": "141200",
    "end": "149900"
  },
  {
    "text": "So, I'm going to talk about ClassicLink and how you can use it to facilitate\nan adoption of VPC.",
    "start": "149900",
    "end": "157200"
  },
  {
    "text": "Alright, so, just to level set so that we're all operating on the\nsame kind of understanding of the different networking capabilities,",
    "start": "157200",
    "end": "162700"
  },
  {
    "text": "in EC2 today we have two primary\nnetworking modes, it's what we call EC2-Classic and VPC.",
    "start": "162700",
    "end": "169299"
  },
  {
    "text": "So, EC2-Classic, as the name implies,\nwas the capability set that we launched with EC2 initially\nback in 2007.",
    "start": "169300",
    "end": "179099"
  },
  {
    "text": "You know, EC2-Classic provides a\nvery simple and straight forward networking capability. We assign the IP address and we provide\nyou the ability",
    "start": "179100",
    "end": "187500"
  },
  {
    "text": "to configure a security group - in\nbound security groups - to limit access in or out of your instances.",
    "start": "187500",
    "end": "195000"
  },
  {
    "text": "And then in 2009 we launched Virtual\nPrivate Cloud and since then we've been adding\na lot of capabilities.",
    "start": "195000",
    "end": "200900"
  },
  {
    "text": "Some of the more sophisticated networking features that our customers have told us are\nimportant to them, and we've been adding those features\nin, in VPC.",
    "start": "200900",
    "end": "207700"
  },
  {
    "text": "So, that includes things like the ability to have multiple virtual network\ninterfaces, what we call an ENI,",
    "start": "207700",
    "end": "213200"
  },
  {
    "text": "an Elastic Network Interface, multiple\nIP address on your interfaces, routing, the ability to put security\nrules both on ingress",
    "start": "213200",
    "end": "221600"
  },
  {
    "text": "and egress so you can limit traffic\nleaving your machine and block, you know, potentially\nmalicious traffic,",
    "start": "221600",
    "end": "228000"
  },
  {
    "text": "the ability to have network ACLs, which is sort of a second layer of ACL capability\non top of VPC.",
    "start": "228000",
    "end": "235500"
  },
  {
    "text": "And then as I mentioned, enhanced\nnetworking provides some pretty dramatic increases in\nnetwork performance in VPC.",
    "start": "235500",
    "end": "243000"
  },
  {
    "text": "So, we're pretty excited about that. Now, we recognize though that the\nEC2-Classic environment provides",
    "start": "243000",
    "end": "249099"
  },
  {
    "text": "a very simple capability to get started, and so in 2013 we put this all together\nin what we call",
    "start": "249100",
    "end": "257100"
  },
  {
    "text": "the Default VPC. So, if you've created an account\nsince 2013, or have not used EC2 in a region\nsince 2013,",
    "start": "257100",
    "end": "267300"
  },
  {
    "text": "you will have a Default VPC in that region. And with Default VPC, we give you\nthe ability to launch instances",
    "start": "267300",
    "end": "274100"
  },
  {
    "text": "without thinking about the private IP address or the public IP address, that's\nall handled by us,",
    "start": "274100",
    "end": "279800"
  },
  {
    "text": "but you're able to start taking advantage of the Virtual Private Cloud features\nat your own pace.",
    "start": "279800",
    "end": "284900"
  },
  {
    "text": "So, that's the Default VPC capability.",
    "start": "284900",
    "end": "290300"
  },
  {
    "text": "So, if you're wondering, you know,\nam I in a Default VPC or not, it's actually pretty simple to figure this out. There's an API and command line tool\nto query this.",
    "start": "290300",
    "end": "300500"
  },
  {
    "text": "I'm going to be showing lots of command\nlines throughout the day, this is the AWS CLI set, and you'll\nsee lots of examples of this",
    "start": "300500",
    "end": "311000"
  },
  {
    "text": "throughout the day. In this case, we use the describe-account-attributes API and we specify that we're looking\nspecifically for Default VPC,",
    "start": "311000",
    "end": "318300"
  },
  {
    "text": "and you can see if you have a Default VPC it will come back as an account attribute\nthat you can then, you know, key off of.",
    "start": "318300",
    "end": "326300"
  },
  {
    "start": "326000",
    "end": "695000"
  },
  {
    "text": "Okay, so we're going to then move straight into routing and private connectivity and talk a little bit about how that\nworks in VPC.",
    "start": "326300",
    "end": "334700"
  },
  {
    "text": "So, we hear from a lot of customers that they have an existing infrastructure, they have, you know, maybe an existing\ncolo site, or an office,",
    "start": "334700",
    "end": "342400"
  },
  {
    "text": "or a data center, and they're looking\nto figure out how do I start using AWS, and how\ndo I extend",
    "start": "342400",
    "end": "348599"
  },
  {
    "text": "the network that I have in my corporate\ndata center out and into AWS and EC2.",
    "start": "348600",
    "end": "354900"
  },
  {
    "text": "So, if you start with a corporate\ndata center, we recommend, you know, first thing\nyou do is you can create a VPC picking an IP address range",
    "start": "354900",
    "end": "362900"
  },
  {
    "text": "that doesn't overlap with your existing\ndata center so that you can have, you know, direct\nprivate connectivity",
    "start": "362900",
    "end": "368000"
  },
  {
    "text": "back and forth between your corporate\ndata center and the VPC.",
    "start": "368000",
    "end": "373300"
  },
  {
    "text": "So, again, I'm showing you the commands\nhere at the bottom, you'll see this for pretty much all\nof my slides, you'll see the exact set of commands\nthat I'm running",
    "start": "373300",
    "end": "380100"
  },
  {
    "text": "to do the operations that I'm showing\non the screen here. So, in this case what I've done is\nI've created my VPC",
    "start": "380100",
    "end": "386000"
  },
  {
    "text": "in this 10.10 IP space, and then\nI'm actually creating two subnets in the different availability zones.",
    "start": "386000",
    "end": "392300"
  },
  {
    "text": "So, each subnet and VPC lives in\na particular availability zone and this is so that we can provide, you know,",
    "start": "392300",
    "end": "400199"
  },
  {
    "text": "as much isolation as we can to ensure\nyou can continue to launch",
    "start": "400200",
    "end": "409000"
  },
  {
    "text": "in both availability zones, you know, even if one of the availability zones, you know, may not be able to launch at that moment.",
    "start": "409000",
    "end": "415800"
  },
  {
    "text": "So, we create two subnets, and then\nI'm going to go ahead and start by just showing you this is the creating\nof a VPN connection.",
    "start": "415800",
    "end": "423900"
  },
  {
    "text": "So, we support IPsec VPN, we support,\nI think at this point,",
    "start": "423900",
    "end": "430000"
  },
  {
    "text": "more than a dozen different hardware\nand software combinations of VPN devices that you might be\nrunning in your data center.",
    "start": "430000",
    "end": "437099"
  },
  {
    "text": "And again, it's pretty much standard\nIPsec with configuration templates",
    "start": "437100",
    "end": "442300"
  },
  {
    "text": "that we provide that help you get\nstarted with, like I said, more than a dozen different combinations\nof hardware and software.",
    "start": "442300",
    "end": "449700"
  },
  {
    "text": "So, again, I'm running just a few APIs. All of these APIs are also things\nyou can use",
    "start": "449700",
    "end": "454900"
  },
  {
    "text": "from our management console, you\ncan use the CLI tools or the SDKs directly if you prefer.",
    "start": "454900",
    "end": "461100"
  },
  {
    "text": "So, here I'm just creating what's\nknown as a VPN gateway and then I connect that gateway to my VPC.",
    "start": "461100",
    "end": "468400"
  },
  {
    "text": "I then create the customer gateway\nwhere I specify my IP address, so this would be whatever IP address\nyour VPN endpoint",
    "start": "468400",
    "end": "475800"
  },
  {
    "text": "at your data center is connected to, and then I create a connection between those two.",
    "start": "475800",
    "end": "482800"
  },
  {
    "text": "So, now I have, you know, connectivity up, I configured my VPN router with the\nconfiguration",
    "start": "482800",
    "end": "489699"
  },
  {
    "text": "to connect to AWS, and brought my\nIPsec connectivity up. I'm going to go ahead and start running\nsome instances",
    "start": "489700",
    "end": "495300"
  },
  {
    "text": "and here we'll just start three instances\nin both of my subnets. When you run an instance in VPC you\njust tell us",
    "start": "495300",
    "end": "502500"
  },
  {
    "text": "what subnet you want that instance\nto launch into and, you know, you can obviously specify that you want to run multiple instances\nin one shot",
    "start": "502500",
    "end": "509300"
  },
  {
    "text": "and we'll deliver all three of them. Now, I don't quite yet have connectivity, so I'm going to walk through a couple\nother configuration items",
    "start": "509300",
    "end": "517300"
  },
  {
    "text": "and then I'll show sort of all the\npieces to get connectivity finalized. So, earlier I showed the creation\nof a VPN connection,",
    "start": "517300",
    "end": "526800"
  },
  {
    "text": "another mode of private connectivity\nbetween VPC and your corporate data center is\nour AWS Direct Connect product.",
    "start": "526800",
    "end": "533800"
  },
  {
    "text": "And so for customers who are looking\nfor a dedicated pipe, you know, be it 100 megabit, or a\ngigabit, or even 10 gigabits,",
    "start": "533800",
    "end": "541500"
  },
  {
    "text": "or even multiple 10 gigabits, we\noffer the AWS Direct Connect service",
    "start": "541500",
    "end": "547000"
  },
  {
    "text": "to allow you to create those connections. And those connections are either\na direct fiber connection or they're provided through one of\nour AWS partners,",
    "start": "547000",
    "end": "556100"
  },
  {
    "text": "our APN partners, who provide circuit\nbackhaul basically from the Direct Connect locations\nto wherever you're located,",
    "start": "556100",
    "end": "564400"
  },
  {
    "text": "to wherever your data center's located. And again, this is all API driven\nfrom the AWS standpoint,",
    "start": "564400",
    "end": "569700"
  },
  {
    "text": "so you can use our APIs or command line tools to actually create the Direct Connect\nconnections,",
    "start": "569700",
    "end": "575200"
  },
  {
    "text": "tell us how much bandwidth you need, tell us where you're going to deliver that or where we should deliver that connection.",
    "start": "575200",
    "end": "582200"
  },
  {
    "text": "Direct Connect has, you know, more\nthan a dozen locations around the world, you know, including locations",
    "start": "582200",
    "end": "589100"
  },
  {
    "text": "accessing all of our regions. So, you can access any of our regions\nthrough Direct Connect. And then you can create a private\nvirtual interface,",
    "start": "589100",
    "end": "596100"
  },
  {
    "text": "this is where you tell us all the\nvarious parameters for the interface between us and you,",
    "start": "596100",
    "end": "602300"
  },
  {
    "text": "and then that's set up. Again, this is optional, if you just\nwant to get started with a VPN, or you don't even need private connectivity,",
    "start": "602300",
    "end": "610300"
  },
  {
    "text": "you don't need to go down this path,\nbut we do offer this and a lot of our customers take advantage of having this dedicated connection",
    "start": "610300",
    "end": "617500"
  },
  {
    "text": "particularly when you're looking\nat a hybrid application where you really want to make sure\nthere's good connectivity between, you know, parts of your application\nthat are running in your data center",
    "start": "617500",
    "end": "625199"
  },
  {
    "text": "and parts that are living in AWS\nand EC2.",
    "start": "625200",
    "end": "630700"
  },
  {
    "text": "Okay, so now I'm just going to configure\nmy routing table. And in VPC we have a virtual router.",
    "start": "630700",
    "end": "637300"
  },
  {
    "text": "The router in VPC is high capacity,\nhighly available, and some people ask me, well, where\nis the second one,",
    "start": "637300",
    "end": "644399"
  },
  {
    "text": "where is the redundant router, and\nthe answer is there isn't, it's highly available, redundant,\nall of that is abstracted,",
    "start": "644400",
    "end": "652000"
  },
  {
    "text": "you don't need to have two routers\nto have that availability. All I have to do is create a route\nthough in my routing table",
    "start": "652000",
    "end": "659500"
  },
  {
    "text": "and basically specify that I want\nthe traffic to go to this gateway that we created earlier,\nthis VPN gateway.",
    "start": "659500",
    "end": "666100"
  },
  {
    "text": "So, now I have a complete working topology where I have instances running in my VPC",
    "start": "666100",
    "end": "672900"
  },
  {
    "text": "and a default route that goes back\nto my data center, so any traffic that's not staying\nwithin the VPC,",
    "start": "672900",
    "end": "678900"
  },
  {
    "text": "going between instances within that VPC, is actually just going to be default\nrouted out back home to my corporate data center.",
    "start": "678900",
    "end": "685100"
  },
  {
    "text": "And then likewise, I can have a route\nin my corporate data center pointing the 10.10 traffic back to\nthe VPC and get that traffic in.",
    "start": "685100",
    "end": "696100"
  },
  {
    "start": "695000",
    "end": "824000"
  },
  {
    "text": "So, I want to talk briefly about\nremote connectivity. I've demonstrated a couple of different\ntypes of connectivity,",
    "start": "696100",
    "end": "702300"
  },
  {
    "text": "both VPN and Direct Connect. Some\ncustomers, again, particularly when you're building\na hybrid architecture, they say, you know, they ask me,\nwhat's the best practice,",
    "start": "702300",
    "end": "709600"
  },
  {
    "text": "how do I really build this for resiliency because I'm going to have maybe in\nmy database server running in my corporate data center",
    "start": "709600",
    "end": "715500"
  },
  {
    "text": "but all the web servers are living\nin EC2 and I really want to make sure that we have good connectivity back and forth.",
    "start": "715500",
    "end": "721500"
  },
  {
    "text": "So, by default, when you create a\nVPN connection, we actually give you two IPsec tunnels,",
    "start": "721500",
    "end": "726800"
  },
  {
    "text": "and that's just part of the standard\nconfiguration. When you access the configuration\nfrom our management console",
    "start": "726800",
    "end": "732500"
  },
  {
    "text": "or from the CLI tools, you will see both of those IPsec tunnels provided for you.",
    "start": "732500",
    "end": "739899"
  },
  {
    "text": "And what that maps to on our side\nis endpoints that live in multiple availability zones.",
    "start": "739900",
    "end": "745500"
  },
  {
    "text": "So, we recommend for every customer, you know, good availability, sort of a baseline\nof good availability,",
    "start": "745500",
    "end": "750800"
  },
  {
    "text": "is when you create a VPN connection, make sure that you provision both\nof those tunnels.",
    "start": "750800",
    "end": "756900"
  },
  {
    "text": "We support both BGP routed as well\nas statically routed tunnels, and we, again, for availability,\nrecommend using a BGP routed tunnel.",
    "start": "756900",
    "end": "765400"
  },
  {
    "text": "In this case, BGP is just the routing\nprotocol between you and us, it's not going out - there's no Internet\npiece of it.",
    "start": "765400",
    "end": "772300"
  },
  {
    "text": "Some people see BGP and they think,\noh this is, like, Internet somehow. It's not, it's\njust the routing protocol used",
    "start": "772300",
    "end": "778000"
  },
  {
    "text": "between our VPN router and your VPN router. And we give you configuration information\nto help get that set up",
    "start": "778000",
    "end": "784600"
  },
  {
    "text": "and sort of almost copy and paste\nto configure your router to speak BGP, you know, with us.",
    "start": "784600",
    "end": "791800"
  },
  {
    "text": "The reason we recommend BGP is that\nBGP provides a hard, you know, layer for connectivity\ncheck across that IPsec tunnel.",
    "start": "791800",
    "end": "801000"
  },
  {
    "text": "So, if anything happens to that IPsec\ntunnel, you know, BGP, within 30 seconds, will detect\nthat there's been,",
    "start": "801000",
    "end": "807800"
  },
  {
    "text": "you know, an impairment and it will\nautomatically shift traffic over to the other tunnel.",
    "start": "807800",
    "end": "813000"
  },
  {
    "text": "You can configure these with static routes and we provide configurations to\nmake that as available as possible,",
    "start": "813000",
    "end": "820199"
  },
  {
    "text": "but again, I always recommend to\ngoing to BGP for the best availability.",
    "start": "820200",
    "end": "825300"
  },
  {
    "start": "824000",
    "end": "874000"
  },
  {
    "text": "Now, a next step up that I would\nsay is a better set of, you know, sort of availability story\nis not just",
    "start": "825300",
    "end": "830700"
  },
  {
    "text": "to create one VPN connection, but\nactually to create two and have those terminate on different\nrouters on your side,",
    "start": "830700",
    "end": "837399"
  },
  {
    "text": "on your corporate, you know - whatever\nyour side is, whether it's an office or a corporate\ndata center. This allows for redundancy both against\nfailure of any",
    "start": "837400",
    "end": "847200"
  },
  {
    "text": "of the AWS devices, but also protects\nagainst failure of devices at your side. And certainly in this case I recommend use of BGP",
    "start": "847200",
    "end": "855100"
  },
  {
    "text": "across all of these paths since now\nyou have four active paths and BGP will help make sure that\nwe're picking, you know,",
    "start": "855100",
    "end": "862300"
  },
  {
    "text": "an available path. And you can use, you know, various\naspects of BGP to sort of pin traffic to particular paths",
    "start": "862300",
    "end": "869100"
  },
  {
    "text": "if you prefer to have, you know,\na single ingress path or sort of a pair of ingress paths.",
    "start": "869100",
    "end": "875000"
  },
  {
    "start": "874000",
    "end": "966000"
  },
  {
    "text": "So, this is better availability. And then for customers who really\nare running, you know, applications that they need,",
    "start": "875000",
    "end": "881100"
  },
  {
    "text": "they have to have a high degree of confidence that they'll have connectivity that\nwon't be subject to, you know, any vagarity of the Internet, you know,",
    "start": "881100",
    "end": "889000"
  },
  {
    "text": "the VPN connectivity is delivered\nover the Internet. If you want to be protected against that, that's when we go straight to Direct Connect.",
    "start": "889000",
    "end": "895800"
  },
  {
    "text": "So, we look at Direct Connect, those\nare, you know, hardwired or hard provisioned connections",
    "start": "895800",
    "end": "902600"
  },
  {
    "text": "from your network into VPC. And so this provides the best availability story.",
    "start": "902600",
    "end": "908600"
  },
  {
    "text": "And in this case, I'm showing both\nDirect Connect plus a VPN backup, that all works just fine.",
    "start": "908600",
    "end": "914400"
  },
  {
    "text": "And again, this is where we use BGP\nto make sure we pick the Direct Connect paths if they're available,",
    "start": "914400",
    "end": "919900"
  },
  {
    "text": "but if all else fails, we can fall\nback to a VPN connection. With Direct Connect, each Direct\nConnect connection you create",
    "start": "919900",
    "end": "926300"
  },
  {
    "text": "is actually a single connection to\na single hardware device running in our Direct Connect location,",
    "start": "926300",
    "end": "932699"
  },
  {
    "text": "but we support multiple - each of\nour Direct Connect locations has multiple hardware devices so\nthat you can always establish",
    "start": "932700",
    "end": "940000"
  },
  {
    "text": "at least two redundant connections\nto the same Direct Connect location. And then even further, Direct Connect\nin some regions,",
    "start": "940000",
    "end": "947899"
  },
  {
    "text": "we have multiple Direct Connect locations\nso that you can have both hardware redundancy as well\nas geographic redundancy",
    "start": "947900",
    "end": "955899"
  },
  {
    "text": "for connections coming into our network. So, in some regions, literally, it's\ntwo physically isolated locations.",
    "start": "955900",
    "end": "967199"
  },
  {
    "text": "Alright, so now, you know, we've\ntalked a lot about private connectivity, and again, for hybrid application use cases",
    "start": "967200",
    "end": "973400"
  },
  {
    "text": "this is what we see most commonly, you know, customers get started with something like this, but typically customers are also\nlooking for some form of",
    "start": "973400",
    "end": "980900"
  },
  {
    "text": "direct Internet connectivity out\nof the VPC, what we call public connectivity. So, maybe it's an application that\nis customer facing,",
    "start": "980900",
    "end": "988300"
  },
  {
    "text": "it's facing, you know, end consumers, and you want to have that, you know, direct Internet path into your VPC,",
    "start": "988300",
    "end": "994500"
  },
  {
    "text": "but you also want to have the private\npath to your home network. And so this is all facilitated by\nway of the Internet gateway.",
    "start": "994500",
    "end": "1001700"
  },
  {
    "text": "So, you know, just like we created\nthe VPN gateway, you can create an Internet gateway,\nattach it to you VPC.",
    "start": "1001700",
    "end": "1007600"
  },
  {
    "text": "And then what I'm showing here is that we're actually going to change our routing. We're just going to delete the default route.",
    "start": "1007600",
    "end": "1013800"
  },
  {
    "text": "We're going to point the default\nroute out to the Internet and then we'll just create a more\nspecific route to point to our home network.",
    "start": "1013800",
    "end": "1019600"
  },
  {
    "text": "So, instead of just sending any traffic that we don't have any other destination\nfor to our home network,",
    "start": "1019600",
    "end": "1024900"
  },
  {
    "text": "you know, we'll rout that traffic\nout to the Internet and really selectively route traffic\nto the home network.",
    "start": "1024900",
    "end": "1030100"
  },
  {
    "text": "And again, this is just a series\nof CLI commands that you can run to do that, or the\nmanagement console.",
    "start": "1030100",
    "end": "1036900"
  },
  {
    "start": "1036000",
    "end": "1096000"
  },
  {
    "text": "And another optimization we provide\nis actually to make it even simpler and avoid you having",
    "start": "1036900",
    "end": "1042000"
  },
  {
    "text": "to maintain your VPC routing table\nwith the prefixes that are showing up on your internal network,",
    "start": "1042000",
    "end": "1047299"
  },
  {
    "text": "we have a feature called Route Propagation. And again, showing you the commands\nto enable this. What this does is simply says, any\nkind of prefix",
    "start": "1047300",
    "end": "1055100"
  },
  {
    "text": "that I'm we at AWS receive from your\ncorporate data center that you advertise to us through\nthe routing protocol,",
    "start": "1055100",
    "end": "1062200"
  },
  {
    "text": "through BGP, any of those prefixes that I see we'll want to populate them into\nthe VPC routing table.",
    "start": "1062200",
    "end": "1067800"
  },
  {
    "text": "So, imagine that you have an existing, you know, subnet on your home network and you\ndecide tomorrow",
    "start": "1067800",
    "end": "1074000"
  },
  {
    "text": "that you need to add some IP space, you add that route on your corporate network, that route gets advertised to us,",
    "start": "1074000",
    "end": "1080299"
  },
  {
    "text": "we put it into your VPC routing table, and your instances then have full\nconnectivity without you having to make any additional API calls.",
    "start": "1080300",
    "end": "1088900"
  },
  {
    "text": "So, definitely recommended if your\ncorporate network is, you know, changing regularly.",
    "start": "1088900",
    "end": "1097400"
  },
  {
    "text": "Now, the other thing you can do with\nVPC routing tables is that you can create a routing table\nthat is used for specific subnets",
    "start": "1097400",
    "end": "1105300"
  },
  {
    "text": "and put different entries into that\nrouting table. So, you know, previously I've talk\nabout a single routing table,",
    "start": "1105300",
    "end": "1111700"
  },
  {
    "text": "every VPC has a default routing table\nthat subnets will use unless you specify otherwise, and\nso here I'm just demonstrating",
    "start": "1111700",
    "end": "1119200"
  },
  {
    "text": "that I'm going to create a subnet,\nthis 10.10.3 subnet on the left here,",
    "start": "1119200",
    "end": "1125899"
  },
  {
    "text": "and I'm going to create this subnet and I don't want it to have any connectivity\nto my home network. You know, maybe these are my web servers",
    "start": "1125900",
    "end": "1133100"
  },
  {
    "text": "and the web servers never call home, there's no need for them to even\nhave network connectivity to the home network.",
    "start": "1133100",
    "end": "1140500"
  },
  {
    "text": "So, what I'm going to do is, you\nknow, create the subnet as I'm showing. I create a new routing table and\nI associate that routing table",
    "start": "1140500",
    "end": "1146600"
  },
  {
    "text": "with the subnet. So, as soon as I associate the routing\ntable with the subnet, any traffic coming from instances\nin that subnet",
    "start": "1146600",
    "end": "1155000"
  },
  {
    "text": "will be routed according to that\nnew routing table and will not use the default routing table.",
    "start": "1155000",
    "end": "1161200"
  },
  {
    "text": "So, I've associated the routing table and then I'm just going to create\na default route that points out to the Internet gateway.",
    "start": "1161200",
    "end": "1166600"
  },
  {
    "text": "And again, I haven't turned on Route\nPropagation or put in any routes to my home network,",
    "start": "1166600",
    "end": "1172800"
  },
  {
    "text": "so there's literally no path for\nthis subnet to reach the home network at this point.",
    "start": "1172800",
    "end": "1180200"
  },
  {
    "start": "1179000",
    "end": "1232000"
  },
  {
    "text": "Now, some of the other things that you can do with multiple routing tables include\nthe ability to establish",
    "start": "1180200",
    "end": "1185900"
  },
  {
    "text": "something like a software VPN to\nestablish connectivity between VPCs. And so I'm going to show you actually how",
    "start": "1185900",
    "end": "1193400"
  },
  {
    "text": "VPC peering helps do this, later, but this is actually still somewhat\nuseful for particularly",
    "start": "1193400",
    "end": "1199400"
  },
  {
    "text": "when you're talking about connecting\nVPCs across regions. So, in this case, what I'm doing is",
    "start": "1199400",
    "end": "1204700"
  },
  {
    "text": "I'm creating software VPN instances\nin two of my subnets.",
    "start": "1204700",
    "end": "1210000"
  },
  {
    "text": "I have two VPCs, each of my VPCs\nhas a VPN instance running in a subnet, and then I'm\ncreating a customer routing table",
    "start": "1210000",
    "end": "1217800"
  },
  {
    "text": "and updating that routing table basically to specify that if VPC A wants to talk to VPC B",
    "start": "1217800",
    "end": "1225200"
  },
  {
    "text": "that traffic is going to be routed\nthrough the VPN instance in VPC A and vice versa.",
    "start": "1225200",
    "end": "1233700"
  },
  {
    "text": "And so by doing so, then I can establish\na software VPC connection",
    "start": "1233700",
    "end": "1239000"
  },
  {
    "text": "between those two instances, and\nnow my two VPCs can exchange private IP communication\nback and forth.",
    "start": "1239000",
    "end": "1245700"
  },
  {
    "text": "My private IP traffic will be exchanged\nback and forth between these two VPCs using that\nsoftware VPN instance.",
    "start": "1245700",
    "end": "1259000"
  },
  {
    "text": "And, sorry, I mentioned this already before, but the way that this is done is\nby updating - so, I've updated the default routing\ntable in both of these VPCs",
    "start": "1259000",
    "end": "1267800"
  },
  {
    "text": "to steer any of this traffic through\nthe VPN instances, and then the routing table for the\nVPN instance subnets",
    "start": "1267800",
    "end": "1274600"
  },
  {
    "text": "just specifies that traffic can go\nout to the Internet.",
    "start": "1274600",
    "end": "1280299"
  },
  {
    "start": "1279000",
    "end": "1346000"
  },
  {
    "text": "The other thing that can be done\nwith this capability with a second routing table or a\nthird routing table",
    "start": "1280300",
    "end": "1286100"
  },
  {
    "text": "is the ability to run either a NAT instance, some instance that provides NATing\nfunctionality",
    "start": "1286100",
    "end": "1292400"
  },
  {
    "text": "or firewalling functionality, and, you know, many of our customers who are looking to have some sort of additional network monitoring\nor network detection",
    "start": "1292400",
    "end": "1302300"
  },
  {
    "text": "on top of what we provide today, they'll use a NAT or firewall instance. And again, you can create a second\nrouting table",
    "start": "1302300",
    "end": "1309200"
  },
  {
    "text": "and that routing table, for the subnet\nthat has the NAT instance,",
    "start": "1309200",
    "end": "1316500"
  },
  {
    "text": "that table will specify the default route goes straight to the Internet gateway, and the default routing table for\nall my other instances",
    "start": "1316500",
    "end": "1324500"
  },
  {
    "text": "will send the default, will specify\nthat that's instance ID. If you look at the first commend,\nit's specifying",
    "start": "1324500",
    "end": "1331799"
  },
  {
    "text": "that the default route for any other\ntraffic in the VPC should send traffic to this one instance, which would be my NAT instance.",
    "start": "1331800",
    "end": "1338300"
  },
  {
    "text": "And that's how I can specify that traffic needs to be funneled through the\nNAT instance, the firewall, to get out to the Internet.",
    "start": "1338300",
    "end": "1347100"
  },
  {
    "text": "Okay, so that provides some context\nabout, you know, private connections and routing in VPC.",
    "start": "1347100",
    "end": "1354000"
  },
  {
    "text": "I'm now going to talk a little bit\nabout VPC peering, which I sort of alluded to earlier.",
    "start": "1354000",
    "end": "1359200"
  },
  {
    "start": "1358000",
    "end": "1420000"
  },
  {
    "text": "And we see a couple major use cases\nfor VPC peering. One of the big ones is what I call\nthe shared services VPC.",
    "start": "1359200",
    "end": "1366000"
  },
  {
    "text": "So, you know, customers will ask\nus, I'm creating multiple VPCs, I am thinking I have lots of applications,",
    "start": "1366000",
    "end": "1373800"
  },
  {
    "text": "and I want to create some isolation\nbetween the applications, but I also have a set of things that\nall my VPCs need to access.",
    "start": "1373800",
    "end": "1381700"
  },
  {
    "text": "So, that can things like authentication,\nlogging, monitoring, any kind of common services that\nI provide across all my VPCs.",
    "start": "1381700",
    "end": "1391100"
  },
  {
    "text": "And so one of these cases we see\ncustomers using VPC peering for is to create this kind of topology.",
    "start": "1391100",
    "end": "1397299"
  },
  {
    "text": "So, in this case, for example, my\nVPC A might be my shared services VPC and with VPC A all of the other application\ncentered VPCs",
    "start": "1397300",
    "end": "1407200"
  },
  {
    "text": "will appear with that, and then they'll be able to access\nmy core services. So, you know, I'll administer core\nservices in VPC A",
    "start": "1407200",
    "end": "1413800"
  },
  {
    "text": "and then individual application owners\nwill administer the systems that run in any other VPCs.",
    "start": "1413800",
    "end": "1420700"
  },
  {
    "start": "1420000",
    "end": "1471000"
  },
  {
    "text": "Another use case that we see from\ncustomers is just a simple sort of Dev, test,\nprod hierarchy of deployments.",
    "start": "1420700",
    "end": "1428200"
  },
  {
    "text": "So, if I'm, you know, working on\nmy software, I'll use a Dev VPC, then once that's, you know, been committed,",
    "start": "1428200",
    "end": "1435300"
  },
  {
    "text": "it will be deployed out to my test VPC, and once all my tests pass I'll deploy\nit out to my production VPC.",
    "start": "1435300",
    "end": "1442900"
  },
  {
    "text": "And one of the cool things about\ndoing this is that you can actually, you know,\ncreate identical VPCS.",
    "start": "1442900",
    "end": "1449200"
  },
  {
    "text": "Your Dev, test, and prod can literally\nuse the same IP space or the same configuration and know\nthat, you know,",
    "start": "1449200",
    "end": "1456600"
  },
  {
    "text": "promoting it from B, to C, to D,\nyou're going to get the same experience, you're going to see the same network\nthat you'll see in production.",
    "start": "1456600",
    "end": "1464800"
  },
  {
    "text": "So you can really create, you know,\na test environment that replicates what I expect to\nsee in production.",
    "start": "1464800",
    "end": "1472400"
  },
  {
    "start": "1471000",
    "end": "1549000"
  },
  {
    "text": "So, how do I create a VPN - sorry,\na VPC peering connection? It's pretty straight forward.",
    "start": "1472400",
    "end": "1478299"
  },
  {
    "text": "We do support VPC peering connections\nacross accounts, so I'll show that in a little more\ndetail in a moment,",
    "start": "1478300",
    "end": "1485100"
  },
  {
    "text": "but there's a couple APIs that you can use. The first is just create VPC peering\nconnection,",
    "start": "1485100",
    "end": "1491299"
  },
  {
    "text": "and you basically specify the two\nVPCs that you want to peer together. You have to then accept the connection\nfor the other VPCs.",
    "start": "1491300",
    "end": "1499600"
  },
  {
    "text": "So, you know, we make sure that there's\na handshake, basically, between the two VPCs that are getting\npeered together,",
    "start": "1499600",
    "end": "1505900"
  },
  {
    "text": "and that handshake is essentially\nthe create followed by the accept. So, I first create it, I then accept\nthat new connection",
    "start": "1505900",
    "end": "1511700"
  },
  {
    "text": "using the peering ID. So, VPC peers will all have an ID\nthat looks like pcx-whatever.",
    "start": "1511700",
    "end": "1518399"
  },
  {
    "text": "And so in my second command I'm accepting\nthat peering connection.",
    "start": "1518400",
    "end": "1524000"
  },
  {
    "text": "Once the peering connection is established, then I just have to update my routing table. We talked about, obviously, a bunch\nof routing updates earlier,",
    "start": "1524000",
    "end": "1529900"
  },
  {
    "text": "here I'm just updating my routing\ntables on both sides to say that any traffic going to\nthe other VPC",
    "start": "1529900",
    "end": "1535300"
  },
  {
    "text": "goes through my peering connection. So, peering is again another target I can use,",
    "start": "1535300",
    "end": "1541000"
  },
  {
    "text": "just like earlier we used an Internet\ngateway or a VPN gateway, now I can use a VPC peer as a route target.",
    "start": "1541000",
    "end": "1550200"
  },
  {
    "start": "1549000",
    "end": "1606000"
  },
  {
    "text": "And I mentioned you can do this across accounts. The difference when you do across\naccount is twofold.",
    "start": "1550200",
    "end": "1555500"
  },
  {
    "text": "One is that when you create the connection, you have to specify the peer owner account,",
    "start": "1555500",
    "end": "1560700"
  },
  {
    "text": "so that's the 12 digit AWS account ID. And that just makes sure that you know",
    "start": "1560700",
    "end": "1569100"
  },
  {
    "text": "who the peer account is owned by,\nor the peer VPC is owned by. And then, in this case, the owner\nof the other VPC,",
    "start": "1569100",
    "end": "1577299"
  },
  {
    "text": "that is the other owner account, needs to issue the accept to VPC\npeering connection so that they are the one authorizing\nthe connection into that VPC.",
    "start": "1577300",
    "end": "1585500"
  },
  {
    "text": "So, you would just have to - you\nknow, obviously, if you own both accounts, you would just have to make sure\nyou're using the credentials",
    "start": "1585500",
    "end": "1591700"
  },
  {
    "text": "for the appropriate account when\nyou make these API calls so that we see that handshake between\nyour account,",
    "start": "1591700",
    "end": "1597200"
  },
  {
    "text": "your VPC, and the other account on\nthe other VPC. Otherwise, it's the same, you can\ncreate routes",
    "start": "1597200",
    "end": "1603100"
  },
  {
    "text": "and you can exchange traffic across these. So, just a couple things to note\nabout VPC peering.",
    "start": "1603100",
    "end": "1609600"
  },
  {
    "start": "1606000",
    "end": "1749000"
  },
  {
    "text": "These are some things that customer - you know, we know and we've heard\nfrom customers and, you know, these are things that, you know,\nwe're looking at",
    "start": "1609600",
    "end": "1617400"
  },
  {
    "text": "potentially changing over time, but today, we don't support security groups\nacross peerings. So, the workaround for controlling\naccess across VPC peerings is",
    "start": "1617400",
    "end": "1627000"
  },
  {
    "text": "that you can specify security group\nrules using the IP prefix. I'm sorry - whoops, sorry.",
    "start": "1627000",
    "end": "1638200"
  },
  {
    "text": "Okay, alright, I'm just going to\nput it right here. There we go.",
    "start": "1638200",
    "end": "1643700"
  },
  {
    "text": "Alright, so you can specify rules\nby IP prefix to create security group rules that\nwill, like, restrict access",
    "start": "1643700",
    "end": "1650600"
  },
  {
    "text": "from one VPC peer to the other. Today, we don't support what we call\na \"transit\" capability.",
    "start": "1650600",
    "end": "1657899"
  },
  {
    "text": "So, you can imagine if you have three VPCs and you try to peer, you know, A\nand B, and B and C,",
    "start": "1657900",
    "end": "1664800"
  },
  {
    "text": "A can't get to C through the B VPC. So, the way that you do that is you\ncan just create a full mesh.",
    "start": "1664800",
    "end": "1672600"
  },
  {
    "text": "So, you know, if I have four VPCs and I create kind of full mesh between - and I wanted to peer all of them,",
    "start": "1672600",
    "end": "1678300"
  },
  {
    "text": "then I would just create a full mesh\nof VPC peers across all four of those. Now, finally, if you have two VPCs\nand IP ranges overlap,",
    "start": "1678300",
    "end": "1686900"
  },
  {
    "text": "you're not going to be allowed to peer those so that we just - you know, it's\nsort of a prevention,",
    "start": "1686900",
    "end": "1692000"
  },
  {
    "text": "protect against kind of an obvious situation where you won't be able to actually\nfully communicate between those VPCs.",
    "start": "1692000",
    "end": "1697900"
  },
  {
    "text": "However, there's a finer point on\nthis which is that if you have two VPCs that have\ndifferent -",
    "start": "1697900",
    "end": "1707400"
  },
  {
    "text": "sorry, two VPCs that have overlapping ranges, both of those can peer with a third VPC as long as there's no overlap in\nany of the -",
    "start": "1707400",
    "end": "1718399"
  },
  {
    "text": "okay, it definitely has a mind of its own - as long as there's no overlap between the two",
    "start": "1718400",
    "end": "1724700"
  },
  {
    "text": "that are directly making that peering\nrelationship you can actually have one VPC peered\nwith two others",
    "start": "1724700",
    "end": "1731500"
  },
  {
    "text": "that themselves overlap. And this is something we see done\nwhen we have that sort of dev, test, and prod kind of use case where\nyou might have dev",
    "start": "1731500",
    "end": "1738200"
  },
  {
    "text": "and test and prod that have the same IP range, and you can just use routing tables\nin the other VPC",
    "start": "1738200",
    "end": "1745600"
  },
  {
    "text": "to kind of steer traffic towards\nthe right VPC. And now, we're ready to advance.",
    "start": "1745600",
    "end": "1751300"
  },
  {
    "start": "1749000",
    "end": "1790000"
  },
  {
    "text": "So, you know, one other note here is that you can sort of combine two\nof the concepts we've talked about today.",
    "start": "1751300",
    "end": "1757300"
  },
  {
    "text": "So, if I have a VPC peer and I want\nto have some sort of NATing or firewall in between my VPCs, that\nis definitely possible as well,",
    "start": "1757300",
    "end": "1764299"
  },
  {
    "text": "really you're just taking the same\nconcept that I was showing earlier where I create a second routing table,",
    "start": "1764300",
    "end": "1769600"
  },
  {
    "text": "and that routing table directs traffic\nthrough the peer, and then I steer traffic from the\nrest of my VPC, you know,",
    "start": "1769600",
    "end": "1776400"
  },
  {
    "text": "that wants to go to the peer, I steer\nthat to that NAT instance and then that sends it out through\nthe peering connection from there.",
    "start": "1776400",
    "end": "1783000"
  },
  {
    "text": "So, that allows me to have a middle\nbox sort of between my VPC A and VPC B.",
    "start": "1783000",
    "end": "1790200"
  },
  {
    "start": "1790000",
    "end": "1870000"
  },
  {
    "text": "Okay, cool. So, that's an update\non VPC peering, that's some of the things that you\ncan do with our VPC peering feature.",
    "start": "1790200",
    "end": "1796600"
  },
  {
    "text": "I want to turn attention now to enhanced\nnetworking. So, when we talk to customers and\nlook at some of the workloads",
    "start": "1796600",
    "end": "1805000"
  },
  {
    "text": "that customers are running in EC2 and VPC, one of the things we noticed is that\na lot of applications",
    "start": "1805000",
    "end": "1811500"
  },
  {
    "text": "end up looking a lot like a request reply. So, that is, you know, maybe it's\nmy application server",
    "start": "1811500",
    "end": "1816900"
  },
  {
    "text": "is doing request reply to the database,\nissuing queries and getting results from the database. That could be that I have a piece\nof software",
    "start": "1816900",
    "end": "1824200"
  },
  {
    "text": "that's issuing a service call - a\nweb services call - to a load balancer and pulling data\nfrom my application server,",
    "start": "1824200",
    "end": "1831700"
  },
  {
    "text": "but a lot of the connections, you\nknow, look like request replies.",
    "start": "1831700",
    "end": "1837100"
  },
  {
    "text": "And when you look at the latency\nof those request replies, there's a pretty strong correlation\nbetween the latency",
    "start": "1837100",
    "end": "1844200"
  },
  {
    "text": "and the underlying packet rate that\nyou can obtain from the network. And so, when we looked at what was\nadding latency",
    "start": "1844200",
    "end": "1852600"
  },
  {
    "text": "to some of our customer - you know,\nsort of what part of network traffic really adds latency,",
    "start": "1852600",
    "end": "1858399"
  },
  {
    "text": "one of the things we saw is that\nthe packet per second capability of the instances really matters.",
    "start": "1858400",
    "end": "1864200"
  },
  {
    "text": "And so, this is really what motivated us to go down this path of enhanced networking and increase the packet rate that\nwe can support",
    "start": "1864200",
    "end": "1873100"
  },
  {
    "start": "1870000",
    "end": "1927000"
  },
  {
    "text": "in forwarding traffic through EC2,\nand in doing so, reduce latency.",
    "start": "1873100",
    "end": "1879299"
  },
  {
    "text": "So, to start, you know, this is a\npicture sort of what traditional network packet processing\nhas looked like in EC2.",
    "start": "1879300",
    "end": "1887399"
  },
  {
    "text": "And basically, I have my instance,\nand in this case I have a couple elastic network adapters,",
    "start": "1887400",
    "end": "1892700"
  },
  {
    "text": "or elastic network interfaces, eth0\nand eth1. And as traffic is coming from my\ninstance out to the network,",
    "start": "1892700",
    "end": "1901700"
  },
  {
    "text": "to somewhere else, that traffic is\ncoming from my virtual interface, my virtual NIC, from there it goes\ninto the virtualization layer,",
    "start": "1901700",
    "end": "1911100"
  },
  {
    "text": "the hypervisor underlying the instance, and then from there it's sent out\nto the physical NIC,",
    "start": "1911100",
    "end": "1916400"
  },
  {
    "text": "you know, the NIC that has a physical\ncopper cable or fiber cable connected to it, out\ninto the rest of the network.",
    "start": "1916400",
    "end": "1923600"
  },
  {
    "text": "Again, this is what it sort of looked\nlike traditionally. With enhanced networking, we're using\na capability",
    "start": "1923600",
    "end": "1930600"
  },
  {
    "text": "that’s known as SR-IOV, that stands\nfor single root I/O virtualization. You don't really need to know, like,\nthe details of what SR-IOV means,",
    "start": "1930600",
    "end": "1939799"
  },
  {
    "text": "but what it does is makes it possible for us to bypass some of that virtualization layer",
    "start": "1939800",
    "end": "1947500"
  },
  {
    "text": "and have your instance communicate\ndirectly with the physical NIC",
    "start": "1947500",
    "end": "1953100"
  },
  {
    "text": "when it's sending network traffic. And so, what happens is there's really two things that have to change about this picture,\nabout the previous picture,",
    "start": "1953100",
    "end": "1959900"
  },
  {
    "text": "for this to work. One of them is that your instance\nis running a driver which knows how to use this capability,",
    "start": "1959900",
    "end": "1967700"
  },
  {
    "text": "knows how to use SR-IOV. So, the instance has to have that\ndriver installed into it.",
    "start": "1967700",
    "end": "1972900"
  },
  {
    "text": "And then, in the underlying infrastructure, we have to provision what's known\nas a virtual function on the physical NIC.",
    "start": "1972900",
    "end": "1979200"
  },
  {
    "text": "So, that's what we do when you turn\non enhanced networking, is provision that virtual function\nso that you instance",
    "start": "1979200",
    "end": "1985400"
  },
  {
    "text": "can communicate directly with the\nphysical NIC and bypass that virtualization layer.",
    "start": "1985400",
    "end": "1990700"
  },
  {
    "text": "So, that is what enhanced networking\nis all about, and I'm just going to show you some\nof the results we've seen and then how you can make sure you're\nusing enhanced networking",
    "start": "1990700",
    "end": "1998100"
  },
  {
    "text": "or turn it on if you're not using\nit already. So, when we took a look at latency\nbetween instances",
    "start": "1998100",
    "end": "2006900"
  },
  {
    "start": "2001000",
    "end": "2084000"
  },
  {
    "text": "using both, you know, our regular, you know, the first picture I showed you and\nthen enhanced networking,",
    "start": "2006900",
    "end": "2012800"
  },
  {
    "text": "which is the second picture. And, you know, this is just doing\nsome typical ping traffic between instances, and, you know,\nthe scale at the bottom,",
    "start": "2012800",
    "end": "2020500"
  },
  {
    "text": "tp0, implies zero width percentile, that is, you know, the best we saw,",
    "start": "2020500",
    "end": "2025800"
  },
  {
    "text": "and tp100 is 100 percentile or sort\nof the worst case we saw. And again, keep in mind that this\nis a logarithmic scale latency graph,",
    "start": "2025800",
    "end": "2036400"
  },
  {
    "text": "and so what you see is that at the\ntp0 and sort of best possible case, the regular enhanced networking looked\npretty similar.",
    "start": "2036400",
    "end": "2044700"
  },
  {
    "text": "But as you get into the higher percentiles you see that the regular path - sorry - the\nregular path ends up",
    "start": "2044700",
    "end": "2054399"
  },
  {
    "text": "in the worst case having much higher latency,",
    "start": "2054400",
    "end": "2059500"
  },
  {
    "text": "two orders of magnitude higher latency\nthan our enhanced networking path. Really doesn't want me to show this\nslide, I don't know, so I guess we'll move on.",
    "start": "2059500",
    "end": "2066099"
  },
  {
    "text": "So, sort of the term for this is jitter and the concept here, the capability here is",
    "start": "2066100",
    "end": "2072300"
  },
  {
    "text": "that enhanced networking reduces\nthe jitter on your latency between instances as compared to\nour regular network path,",
    "start": "2072300",
    "end": "2079700"
  },
  {
    "text": "and therefore can reduce, you know,\nlatency to your applications. So, enhanced networking is something\nwe think is a great capability,",
    "start": "2079700",
    "end": "2087399"
  },
  {
    "start": "2084000",
    "end": "2116000"
  },
  {
    "text": "you know, recommend you turn it on\nfor any kind of, you know, latency set of applications, but particularly if you're looking\nat sort of caching",
    "start": "2087400",
    "end": "2094099"
  },
  {
    "text": "or any time of, you know, RTP or\nany other real time service, you know, this is a great capability\nto turn on.",
    "start": "2094100",
    "end": "2101200"
  },
  {
    "text": "We support this out of the box in\nAmazon Linux as well as our Windows Server 2012 AMIs.",
    "start": "2101200",
    "end": "2107900"
  },
  {
    "text": "So, when you launch one of these\non a supported instance type, you're going to have enhanced network\nturned on automatically.",
    "start": "2107900",
    "end": "2117000"
  },
  {
    "start": "2116000",
    "end": "2145000"
  },
  {
    "text": "And here's how you can double check that. You can - in Linux - I'm going to\nshow you Windows in a moment - but in Linux you can use the ethtool command",
    "start": "2117000",
    "end": "2123500"
  },
  {
    "text": "and very simply see what driver am\nI using for my eth0. And if you see the left picture, you're using the regular networking\ncapability,",
    "start": "2123500",
    "end": "2131300"
  },
  {
    "text": "and enhanced networking if you see\nthis jumble of characters, ixgbevf.",
    "start": "2131300",
    "end": "2136700"
  },
  {
    "text": "That is good, that implies that you\nare using enhanced networking. Similarly in Windows, you can use -",
    "start": "2136700",
    "end": "2143700"
  },
  {
    "text": "doesn't want me to show you Windows - okay, similarly in Windows you can\nsee use the device manager",
    "start": "2143700",
    "end": "2149000"
  },
  {
    "start": "2145000",
    "end": "2162000"
  },
  {
    "text": "and just pull up your network adapter to see what driver is being used for the\nnetwork adapter. On the left we see the regular networking,",
    "start": "2149000",
    "end": "2155099"
  },
  {
    "text": "on the right you'll see this Intel\nVirtual Function driver. And again, that's the enhanced networking driver.",
    "start": "2155100",
    "end": "2162600"
  },
  {
    "start": "2162000",
    "end": "2231000"
  },
  {
    "text": "We support enhanced networking on\na variety of instance families today, and you'll see that instance families",
    "start": "2162600",
    "end": "2168700"
  },
  {
    "text": "that we've launched recently are\non this list. So, you know, this is a capability\nthat we think is - you know, customers seem to be using\nand appreciate.",
    "start": "2168700",
    "end": "2176599"
  },
  {
    "text": "We're going to - you know, our plans are to continue to support this on, you\nknow, an increasing number of instance families.",
    "start": "2176600",
    "end": "2182700"
  },
  {
    "text": "But at this point we have 23 different\ninstance families that support it, including the latest,\nyou know, D2 disk family,",
    "start": "2182700",
    "end": "2188300"
  },
  {
    "text": "the R3 high memory family, as well\nas our base, you know, C3, C4 compute families.",
    "start": "2188300",
    "end": "2194700"
  },
  {
    "text": "You also have to make sure you're\nusing HVM virtualization. Most of our AMIs - AMIs, you know,\nare either HVM or PV,",
    "start": "2194700",
    "end": "2202400"
  },
  {
    "text": "you have to make sure you're using\nan HVM AMI for this. Again, any of the recent Amazon Linux\nAMIs or Windows AMIs",
    "start": "2202400",
    "end": "2209500"
  },
  {
    "text": "will have this baked in out of the box, but if you have an older AMI, maybe, you know,",
    "start": "2209500",
    "end": "2218800"
  },
  {
    "text": "you built and AMI a few years ago, you just have to make sure they're\nsort of the baseline 2.6.32 or Windows: Server 2008, and then\nget the VF driver.",
    "start": "2218800",
    "end": "2228099"
  },
  {
    "text": "And I will show you that in a moment. So, you know, here's an example of\nan older AMI from 2012",
    "start": "2228100",
    "end": "2234800"
  },
  {
    "start": "2231000",
    "end": "2238000"
  },
  {
    "text": "that, you know, does support HVM,\nso I'm - you know, this will work, however, I can query, I can use the\ndescribe instance attribute API",
    "start": "2234800",
    "end": "2243599"
  },
  {
    "start": "2238000",
    "end": "2250000"
  },
  {
    "text": "and I can confirm that I don't currently have SR-IOV support turned on for this instance.",
    "start": "2243600",
    "end": "2250599"
  },
  {
    "start": "2250000",
    "end": "2263000"
  },
  {
    "text": "So, what I can do is I can launch this AMI, I can apply - you can do a Yum update,\napply the patches,",
    "start": "2250600",
    "end": "2257500"
  },
  {
    "text": "OS updates - doesn't want me to reboot it - okay, then I reboot it. That's the\nLinux case,",
    "start": "2257500",
    "end": "2265400"
  },
  {
    "start": "2263000",
    "end": "2293000"
  },
  {
    "text": "in the Windows case I am going to\ndownload and install this driver -",
    "start": "2265400",
    "end": "2272500"
  },
  {
    "text": "okay - the PROWin driver, then pretty simple -",
    "start": "2272500",
    "end": "2281400"
  },
  {
    "text": "pretty simple to install - can I\njust - can you just turn this off and let me tell you next slide? Okay.",
    "start": "2281400",
    "end": "2292000"
  },
  {
    "text": "Alright, next slide. So, then you can use the PnP until\ncommand to install this",
    "start": "2292000",
    "end": "2297700"
  },
  {
    "text": "and add this to the Windows driver\nstore. Next slide.",
    "start": "2297700",
    "end": "2302900"
  },
  {
    "text": "Then, in either of the Linux or the\nWindows case, you will stop the instance so that\nwe can then actually enable",
    "start": "2302900",
    "end": "2309400"
  },
  {
    "start": "2303000",
    "end": "2339000"
  },
  {
    "text": "SR-IOV next support. Next slide. And that's done through the modify-instance-attribute command.",
    "start": "2309400",
    "end": "2316299"
  },
  {
    "text": "So, here's where I modify the instance attribute, I specify I want to turn on SR-IOV, now that I have the driver installed\nI'm ready to go,",
    "start": "2316300",
    "end": "2322400"
  },
  {
    "text": "turn it on. Just note that once you\nturn it on it can't be turned off, so, you know, this is something you\nmay want to test, you know,",
    "start": "2322400",
    "end": "2330000"
  },
  {
    "text": "on a test launch before you commit\nthis on an instance that, you know, you otherwise are\n- want to make sure you have.",
    "start": "2330000",
    "end": "2336700"
  },
  {
    "text": "Next slide. I'm going to start it\nup. Next. Start my instance.",
    "start": "2336700",
    "end": "2344599"
  },
  {
    "start": "2339000",
    "end": "2372000"
  },
  {
    "text": "Next slide. Next slide?",
    "start": "2344600",
    "end": "2353100"
  },
  {
    "text": "And then, once again, once that instance\nis running I can describe the instance attribute and\nconfirm that in fact that SR-IOV support is turned on\nand it's enabled in",
    "start": "2353100",
    "end": "2361100"
  },
  {
    "text": "what's called simple mode, which\nis the only mode that we support at this point. But that is confirming that the SR-IOV\nsupport is enabled,",
    "start": "2361100",
    "end": "2367599"
  },
  {
    "text": "and so I'm not able to use enhanced\nnetworking. Next slide.",
    "start": "2367600",
    "end": "2372700"
  },
  {
    "text": "Okay, so that's an update on enhanced\nnetworking. Now, I want to talk briefly about\nhow, you know,",
    "start": "2372700",
    "end": "2378100"
  },
  {
    "text": "if you're an EC2-Classic customer, talk about adoption of VPC and what\nwe're trying to do to make that a little bit simpler for you.",
    "start": "2378100",
    "end": "2383300"
  },
  {
    "text": "So, next. So, you know, we're hearing\nfrom lots of customers",
    "start": "2383300",
    "end": "2389000"
  },
  {
    "start": "2386000",
    "end": "2399000"
  },
  {
    "text": "that, you know, they'd like to adopt VPC, but they have, you know, a large\nfootprint of classic infrastructure",
    "start": "2389000",
    "end": "2395099"
  },
  {
    "text": "and don't really know where to get\nstarted. Next. So, what we recommend in this case\nis to start with -",
    "start": "2395100",
    "end": "2402000"
  },
  {
    "start": "2399000",
    "end": "2441000"
  },
  {
    "text": "you know, start simple. So, there's a lot of features of\nVPC, you can fairly easily create a VPC",
    "start": "2402000",
    "end": "2410400"
  },
  {
    "text": "that emulates the Classic infrastructure\nto a large degree. So, that includes specifying, you know,",
    "start": "2410400",
    "end": "2416700"
  },
  {
    "text": "a single subnetting in each availability zone, you can configure subnets to automatically\nassign public IP addresses",
    "start": "2416700",
    "end": "2422599"
  },
  {
    "text": "when you launch an instance to match\nthe behavior that we have in our EC2-Classic environment. So, configure that, plan to have\nevery instance have both a public",
    "start": "2422600",
    "end": "2431900"
  },
  {
    "text": "and a private IP address, and then\njust use our security groups, just like you use classic security groups, use those to control access to your\ninstances. Next.",
    "start": "2431900",
    "end": "2441700"
  },
  {
    "start": "2441000",
    "end": "2469000"
  },
  {
    "text": "And then, as you, you know, grow\nand as you start to identify needs for additional features,",
    "start": "2441700",
    "end": "2447099"
  },
  {
    "text": "then you can start to turn them on. You know, some customers say, you\nknow, there's too many features, which ones do I need to turn on.\nOur answer is,",
    "start": "2447100",
    "end": "2453800"
  },
  {
    "text": "you don't really need to turn any\nof them on until you need them. So, things like multiple interfaces,\nmultiple IPs,",
    "start": "2453800",
    "end": "2459000"
  },
  {
    "text": "all the enhanced networking that\nI just talked about, VPC peering or private connectivity,",
    "start": "2459000",
    "end": "2464200"
  },
  {
    "text": "these are all things you can add\nlater as you grow. Next.",
    "start": "2464200",
    "end": "2470099"
  },
  {
    "start": "2469000",
    "end": "2564000"
  },
  {
    "text": "So, one of the features we launched\nin January, we're pretty happy to announce in\nJanuary, was VPC ClassicLink.",
    "start": "2470100",
    "end": "2475299"
  },
  {
    "text": "And this is a feature that enables\nincremental adoption of VPC.",
    "start": "2475300",
    "end": "2480400"
  },
  {
    "text": "We're pretty happy, we've had some\ncustomers successfully adopt VPC over the last couple of months,",
    "start": "2480400",
    "end": "2487200"
  },
  {
    "text": "and actually I just heard from a\ncustomer who was able to adopt VPC using ClassicLink in just three days actually.",
    "start": "2487200",
    "end": "2492300"
  },
  {
    "text": "From the time they said, you know,\nwe're going to go, they turned it on, three days later\nthey had actually migrated,",
    "start": "2492300",
    "end": "2497599"
  },
  {
    "text": "you know, most of their infrastructure into VPC. So, it's pretty awesome to see the\nadoption here.",
    "start": "2497600",
    "end": "2503900"
  },
  {
    "text": "What we enable here is private IP\ncommunication. So, now I can have my instances in\nClassic and VPC",
    "start": "2503900",
    "end": "2510100"
  },
  {
    "text": "communicate back and forth using\nprivate IPs. I don't need to use EIPs or public, they can just communicate on their\nprivate IPs.",
    "start": "2510100",
    "end": "2516800"
  },
  {
    "text": "And I think one of the greatest features\nhere is the ability to create a security group in VPC",
    "start": "2516800",
    "end": "2522000"
  },
  {
    "text": "and have my Classic instances join\nthat security group. So, now I can just use security group rules",
    "start": "2522000",
    "end": "2527300"
  },
  {
    "text": "to allow Classic instances to access\nother instances in my VPC. And then finally, I'll just note\nthat - before I go into more details -",
    "start": "2527300",
    "end": "2536700"
  },
  {
    "text": "we designed ClassicLink to work with\nthe very largest customer environments. So, if you're worried about availability\nor performance",
    "start": "2536700",
    "end": "2543000"
  },
  {
    "text": "that's not a concern with ClassicLink. We designed this to have as, you\nknow, equivalent performance to the rest of our networking stack\nand then an equivalent availability.",
    "start": "2543000",
    "end": "2551200"
  },
  {
    "text": "So, ClassicLink really is designed\nto support, you know, incremental adoption, a period where\nyou're running in a hybrid mode",
    "start": "2551200",
    "end": "2557400"
  },
  {
    "text": "between Classic and VPC and fully\nsupport that mode. Next.",
    "start": "2557400",
    "end": "2564599"
  },
  {
    "start": "2564000",
    "end": "2703000"
  },
  {
    "text": "So, I'm just going to walk through an example of how you could use ClassicLink\nto adopt VPC and migrate,",
    "start": "2564600",
    "end": "2569900"
  },
  {
    "text": "you know, migrate applications from Classic. So, on the left hand side here I\njust have a Classic environment,",
    "start": "2569900",
    "end": "2575200"
  },
  {
    "text": "I've got a DNS name in Route53 pointed\nto a load balancer, I've got my database and my applications servers",
    "start": "2575200",
    "end": "2582400"
  },
  {
    "text": "or my web servers in their own security\ngroups. Next.",
    "start": "2582400",
    "end": "2587799"
  },
  {
    "text": "So, I'm going to go ahead and start\ncreating my VPC topology, create my VPC and my subnets. Next.",
    "start": "2587800",
    "end": "2594299"
  },
  {
    "text": "And then this is where ClassicLink\nstarts to come in. So, what I do with ClassicLink is\nenable this on my VPC",
    "start": "2594300",
    "end": "2599600"
  },
  {
    "text": "and then enable the - well, I enable\nthis on my VPC.",
    "start": "2599600",
    "end": "2604900"
  },
  {
    "text": "So, I'll turn it on and now I will\nhave the ability to create a security group in the VPC,",
    "start": "2604900",
    "end": "2612500"
  },
  {
    "text": "and then this security group will then - I'll be able to use the security\ngroup to associate Classic instances",
    "start": "2612500",
    "end": "2618800"
  },
  {
    "text": "into that security group. Next slide.",
    "start": "2618800",
    "end": "2624100"
  },
  {
    "text": "So, the first thing I'm going to\ndo is actually migrate the RDS database. And so we have white papers and documentation",
    "start": "2624100",
    "end": "2631000"
  },
  {
    "text": "about how you can do that and migrate\nfrom Classic to VPC, but the first thing I'm going to\ndo is just move that database into VPC.",
    "start": "2631000",
    "end": "2638300"
  },
  {
    "text": "And at this point now, my instances,\nmy Classic instances are members of this VPC security group,",
    "start": "2638300",
    "end": "2645100"
  },
  {
    "text": "and so they're actually still able\nto access this database. You know, I'm maintaining connectivity\nto the database",
    "start": "2645100",
    "end": "2650700"
  },
  {
    "text": "through that transition. Next. Then I can spin up new web servers in my VPC",
    "start": "2650700",
    "end": "2657700"
  },
  {
    "text": "and put them in that same security group. So, now I have web servers both in\nClassic and VPC",
    "start": "2657700",
    "end": "2662900"
  },
  {
    "text": "that are accessing the database,\nI can create an ELB in VPC and start to steer some traffic to it.",
    "start": "2662900",
    "end": "2669000"
  },
  {
    "text": "And this actually gives me the ability\nto sort of slowly turn up and turn down traffic between\nmy Classic web servers",
    "start": "2669000",
    "end": "2675700"
  },
  {
    "text": "and my VPC web servers. Next. And then once I've fully migrated\nall that traffic,",
    "start": "2675700",
    "end": "2682200"
  },
  {
    "text": "I've dialed down the traffic in Classic,\ndialed it up in VPC, now I can tear down the old web servers\nrunning in Classic",
    "start": "2682200",
    "end": "2688700"
  },
  {
    "text": "and tear down the old load balancer,\nthe Classic load balancer, and have my topology entirely running\nin VPC. Next.",
    "start": "2688700",
    "end": "2698300"
  },
  {
    "text": "And ultimately my Classic infrastructure\nis completely gone. Next.",
    "start": "2698300",
    "end": "2703800"
  },
  {
    "start": "2703000",
    "end": "2779000"
  },
  {
    "text": "Okay, so the overall view of ClassicLink, you know, what do I have to do to get ready\nto use ClassicLink,",
    "start": "2703800",
    "end": "2710200"
  },
  {
    "text": "you know, essentially this is about\ncreating the VPC, configuring it for ClassicLink, getting\nthe VPC security group set up.",
    "start": "2710200",
    "end": "2716700"
  },
  {
    "text": "You know, customers often tell us\nthat they view this as an interesting opportunity to sort\nof create new best practices",
    "start": "2716700",
    "end": "2723900"
  },
  {
    "text": "in their account, meaning a new best practice around the use of security groups. So, get that all set up in VPC just\nhow you want it",
    "start": "2723900",
    "end": "2730300"
  },
  {
    "text": "then start to link Classic instances into it. Move components of your architecture\none step at a time,",
    "start": "2730300",
    "end": "2737500"
  },
  {
    "text": "and then ultimately you clean up\nwhat you have left in Classic. We think, you know, customers who\nhave done this",
    "start": "2737500",
    "end": "2742700"
  },
  {
    "text": "have been able to do this with zero down time, they're able to do this while maintaining\nprivate connectivity",
    "start": "2742700",
    "end": "2748700"
  },
  {
    "text": "and secure communication between instances, and do it with pretty large footprints.",
    "start": "2748700",
    "end": "2756200"
  },
  {
    "text": "Now, just to, you know, on the con side, what is the downside of ClassicLink, you know, this is harder than other migrations\nwhere you, you know,",
    "start": "2756200",
    "end": "2766200"
  },
  {
    "text": "maybe just a pure lift and shift, where you just create an entirely\nnew infrastructure and just shut down the old.",
    "start": "2766200",
    "end": "2771900"
  },
  {
    "text": "ClassicLink really is designed to\nlet you operate in a hybrid mode where you're moving one component\nat a time. Next.",
    "start": "2771900",
    "end": "2780200"
  },
  {
    "start": "2779000",
    "end": "2837000"
  },
  {
    "text": "Now, one thing I just want to underscore, you know, in the previous example I showed\nhow we're moving",
    "start": "2780200",
    "end": "2785500"
  },
  {
    "text": "our RDS database first into VPC, and that's because I just want to\nhighlight what ClassicLink enables.",
    "start": "2785500",
    "end": "2792099"
  },
  {
    "text": "And what this shows is that, you\nknow, from EC2-Classic I can access my Classic RDS database,\nor my Classic load balancers,",
    "start": "2792100",
    "end": "2800100"
  },
  {
    "text": "and between Classic and VPC I can\ncommunicate with private IPs. The thing that I can't do is have\nmy VPC instances",
    "start": "2800100",
    "end": "2808700"
  },
  {
    "text": "access Classic RDS databases or Classic\nload balancers.",
    "start": "2808700",
    "end": "2813900"
  },
  {
    "text": "That communication path is not enabled\nby ClassicLink. And that's why we basically recommend\n- can we go back one slide?",
    "start": "2813900",
    "end": "2820599"
  },
  {
    "text": "That's why we recommend starting\nwith the managed infrastructure, start by moving that. That includes,\nyou know, RDS, ElastiCache,",
    "start": "2820600",
    "end": "2827500"
  },
  {
    "text": "Redshift, then move your load balancers and then - or create new load balancers, and\nthen move instances",
    "start": "2827500",
    "end": "2833099"
  },
  {
    "text": "as a final step. Next. Alright, a couple of other things\nto be aware of when using ClassicLink,",
    "start": "2833100",
    "end": "2840000"
  },
  {
    "start": "2837000",
    "end": "2917000"
  },
  {
    "text": "so, VPC, because we allow private\ncommunication between the Classic 10.x IP addresses\nand the VPC,",
    "start": "2840000",
    "end": "2848500"
  },
  {
    "text": "there's only a couple ranges in 10.x\nthat you can use for your VPC to ClassicLink in.",
    "start": "2848500",
    "end": "2854299"
  },
  {
    "text": "You specifically 10.0 through 10.1.255.255,",
    "start": "2854300",
    "end": "2861200"
  },
  {
    "text": "those can be used to ClassicLink\nto your Classic instances. Anything in 10.2, any VPC in 10.2\nto 10.255",
    "start": "2861200",
    "end": "2868300"
  },
  {
    "text": "cannot be ClassicLinked at this point. And, you know, ClassicLink instances,\nwhen they're running",
    "start": "2868300",
    "end": "2875900"
  },
  {
    "text": "in this mode, they're still really\nusing the Classis infrastructure for Internet connectivity, so there's\nno path from VPN",
    "start": "2875900",
    "end": "2882900"
  },
  {
    "text": "or Direct Connect directly into a\nClassic instance that's ClassicLinked.",
    "start": "2882900",
    "end": "2888599"
  },
  {
    "text": "Also, you need to make sure that\nClassicLink is turned on in the instance after you run it\nor you start an instance.",
    "start": "2888600",
    "end": "2893900"
  },
  {
    "text": "So, if you start and stop it, you'll\njust have to enable ClassicLink. And at this point we do not have\nprivate IP resolution of DNS names",
    "start": "2893900",
    "end": "2903400"
  },
  {
    "text": "between Classic and VPC across ClassicLink. So, just keep that in mind as you're\nusing ClassicLink",
    "start": "2903400",
    "end": "2910100"
  },
  {
    "text": "to make sure that you understand\nhow DNS will resolve. Okay, next.",
    "start": "2910100",
    "end": "2917400"
  },
  {
    "start": "2917000",
    "end": "2982000"
  },
  {
    "text": "Alright, so, really just to wrap\nthis up I'll just show the APIs that are used to use ClassicLink. The first thing you do is enable\nit on the VPC,",
    "start": "2917400",
    "end": "2925400"
  },
  {
    "text": "so that's just the enable-vpc-classic-link API. You then attach the instance,",
    "start": "2925400",
    "end": "2931200"
  },
  {
    "text": "so in this case the second command\nis i-2b, would be a Classic instance that\nI attached to my VPC",
    "start": "2931200",
    "end": "2938800"
  },
  {
    "text": "with specific security groups. And that's it, those are the two\ncommands that are used here.",
    "start": "2938800",
    "end": "2944200"
  },
  {
    "text": "I'm then able to detach or disable\nif I want to turn it off. Next. Next slide.",
    "start": "2944200",
    "end": "2953700"
  },
  {
    "text": "The other thing to note is that you\ncan use IAM policies to restrict access to all of these APIs,",
    "start": "2953700",
    "end": "2959100"
  },
  {
    "text": "so if you want to restrict, you can enable it, you can use IAM policies to do that.\nNext slide.",
    "start": "2959100",
    "end": "2966900"
  },
  {
    "text": "Okay, and I actually had mentioned\nthis earlier. Next slide. And just to underscore what I mentioned\na few slides ago,",
    "start": "2966900",
    "end": "2974600"
  },
  {
    "text": "after you run or start an instance, the attached ClassicLink API will\nhave to be called again.",
    "start": "2974600",
    "end": "2980540"
  },
  {
    "text": "Next. Okay, finally with ClassicLink, you can use our elastic load balancer,",
    "start": "2980540",
    "end": "2987700"
  },
  {
    "start": "2982000",
    "end": "3015000"
  },
  {
    "text": "you can create a VPC load balancer\nand have Classic instances",
    "start": "2987700",
    "end": "2993099"
  },
  {
    "text": "linked into a VPC load balancer. The opposite is not true, but this\ndirection does work.",
    "start": "2993100",
    "end": "3000100"
  },
  {
    "text": "You can use this with spot instances, and you can also use auto-scaling, can be configured to link Classic\ninstances automatically",
    "start": "3000100",
    "end": "3007600"
  },
  {
    "text": "after they scale up. So, you can use all of these services\nwith ClassicLink as described.",
    "start": "3007600",
    "end": "3013599"
  },
  {
    "text": "Next. Okay, that is my update on\nVPC, the VPC Deep Dive.",
    "start": "3013600",
    "end": "3019500"
  },
  {
    "start": "3015000",
    "end": "3035000"
  },
  {
    "text": "I appreciate you coming and listening. I will take just a few questions. I think there's a minute or two for questions if anyone has a question.",
    "start": "3019500",
    "end": "3025400"
  },
  {
    "text": "Please use the mobile app to complete\nyour evaluation afterwards, we definitely appreciate all the feedback and we'll use this to update future sessions.",
    "start": "3025400",
    "end": "3033099"
  },
  {
    "text": "Question?",
    "start": "3033100",
    "end": "3035700"
  }
]