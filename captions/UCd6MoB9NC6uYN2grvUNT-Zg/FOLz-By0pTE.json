[
  {
    "start": "0",
    "end": "19000"
  },
  {
    "text": "hi everybody my my name is Todd um and I'm up here with uh Matthew and",
    "start": "399",
    "end": "6240"
  },
  {
    "text": "we're we're going to talk about graph databases on AWS first off thank you very much for coming to the session I",
    "start": "6240",
    "end": "11719"
  },
  {
    "text": "hope everybody had a really awesome party last night and I really appreciate you sticking around to the end of the",
    "start": "11719",
    "end": "18119"
  },
  {
    "text": "conference cool yeah so first off who are we and and why should you even care",
    "start": "18119",
    "end": "23680"
  },
  {
    "start": "19000",
    "end": "19000"
  },
  {
    "text": "um so my my name's Todd like I said and I'm part of the solution architect team",
    "start": "23680",
    "end": "30199"
  },
  {
    "text": "for partners in Europe and our my my team is really focused on making sure",
    "start": "30199",
    "end": "35960"
  },
  {
    "text": "that partners are successful on the AWS platform I think Matthew will uh discuss",
    "start": "35960",
    "end": "42000"
  },
  {
    "text": "his background in when we get to um handing over to him but it's really cool",
    "start": "42000",
    "end": "47320"
  },
  {
    "text": "that you guys are here and thank you very much so we're going to talk about a a general overview of what graphs are in",
    "start": "47320",
    "end": "54320"
  },
  {
    "text": "in graph database technology as well as how to deploy it on AWS um m he's going",
    "start": "54320",
    "end": "60320"
  },
  {
    "text": "to talk about the the Amazon Fulfillment technology is as a customer reference",
    "start": "60320",
    "end": "65760"
  },
  {
    "text": "and how they did that and as well as getting into some details about the the Amazon Dynamo DB plugin for",
    "start": "65760",
    "end": "74560"
  },
  {
    "text": "Titan so first off what is a graph um first off a a a graph is just an",
    "start": "75759",
    "end": "83479"
  },
  {
    "start": "76000",
    "end": "76000"
  },
  {
    "text": "extension of like the tree data structure as I'm I'm sure everybody here is familiar with and so a",
    "start": "83479",
    "end": "90560"
  },
  {
    "text": "first off so a graph just has a nodes and relationships and these relationships and nodes can all have",
    "start": "90560",
    "end": "97040"
  },
  {
    "text": "prop properties so when you extend that that becomes something called the the the property graph model um and when",
    "start": "97040",
    "end": "104640"
  },
  {
    "text": "when you put a a database type technology on top of that then you you you extend it with a query language as",
    "start": "104640",
    "end": "111320"
  },
  {
    "text": "well so then you can start asking questions about um who's related to who and and what what is the the interesting",
    "start": "111320",
    "end": "118360"
  },
  {
    "text": "properties of the graph you can also start talking about more the the the basic computer science questions of so",
    "start": "118360",
    "end": "124920"
  },
  {
    "text": "what what is the necessary like bounding subset of things that are closer to another things that are uh like a subset",
    "start": "124920",
    "end": "132520"
  },
  {
    "text": "of the the the graph that that's only connected to each other and things like that um so this isn't the only data",
    "start": "132520",
    "end": "140000"
  },
  {
    "text": "model that exists for graph other other possible models that are out there are the the the hypergraph something called",
    "start": "140000",
    "end": "146920"
  },
  {
    "text": "the triple store or the rdf the research the resource description framework",
    "start": "146920",
    "end": "152200"
  },
  {
    "text": "popularized by w3c um it really depends on what type of Standards um you really",
    "start": "152200",
    "end": "158239"
  },
  {
    "text": "interested in but it really comes back to um what what type of data you you're",
    "start": "158239",
    "end": "164920"
  },
  {
    "start": "162000",
    "end": "162000"
  },
  {
    "text": "really interested in um so when we're talking about how to model data on a",
    "start": "164920",
    "end": "170360"
  },
  {
    "text": "graph it really helps to I think there's a lot of feedback but it's probably my fault um so when it comes to to graph",
    "start": "170360",
    "end": "178120"
  },
  {
    "text": "database modeling it really helps to first start off with what is the the use",
    "start": "178120",
    "end": "183480"
  },
  {
    "text": "case that you're trying to answer um I have a very trivial one up here that says like as a student I want to know",
    "start": "183480",
    "end": "190640"
  },
  {
    "text": "other students who know something about a subject so then you can extend that",
    "start": "190640",
    "end": "196360"
  },
  {
    "text": "model by first talking um by breaking it down into the the nouns and the verbs",
    "start": "196360",
    "end": "201640"
  },
  {
    "text": "and say a student knows a subject a student belongs to a class and then you",
    "start": "201640",
    "end": "207599"
  },
  {
    "text": "can start extending that in terms of the the the actual underlying graph of of the relationships between the students",
    "start": "207599",
    "end": "214360"
  },
  {
    "text": "the subjects and the the knowledge um graph fits well within the the other",
    "start": "214360",
    "end": "219799"
  },
  {
    "text": "nosql databased um concepts of document either key value or cumer um and it",
    "start": "219799",
    "end": "228799"
  },
  {
    "text": "really extends that model for for things that are that are interesting but it when you're talking about things that",
    "start": "228799",
    "end": "235079"
  },
  {
    "text": "you need to model yourself really comes down to the this tra off between the the cap and acid",
    "start": "235079",
    "end": "241599"
  },
  {
    "text": "type theorems of knowing what type of consistency is necessary for your your data model and in your use case and what",
    "start": "241599",
    "end": "249400"
  },
  {
    "text": "what type of availability is uh is necessary as well um so when when you're thinking",
    "start": "249400",
    "end": "257120"
  },
  {
    "start": "254000",
    "end": "254000"
  },
  {
    "text": "about the if you should use graph versus if you should use a more relational",
    "start": "257120",
    "end": "262320"
  },
  {
    "text": "database model um it really helps to to again go back to the use",
    "start": "262320",
    "end": "268120"
  },
  {
    "text": "cases um think think about what types of queries are are necessary for your underlying data do you need to start",
    "start": "268120",
    "end": "275280"
  },
  {
    "text": "with an idea that says like I need to match everything that begins with x or",
    "start": "275280",
    "end": "280520"
  },
  {
    "text": "match on X um that that's very well suited for graph type technology um if",
    "start": "280520",
    "end": "286919"
  },
  {
    "text": "you need to do numerous joins on uh I'm sorry do numerous uh like queries or",
    "start": "286919",
    "end": "293680"
  },
  {
    "text": "transversals of a graph without doing joins then maybe a graph databas is is",
    "start": "293680",
    "end": "299199"
  },
  {
    "text": "better because fundamentally graph databases store data as a dou link list",
    "start": "299199",
    "end": "304960"
  },
  {
    "text": "where you have the the data plus its its um adjacency stored locally um so it",
    "start": "304960",
    "end": "311840"
  },
  {
    "text": "comes down to do you need to have where where exactly the indices where the data",
    "start": "311840",
    "end": "317759"
  },
  {
    "text": "actually need to reside um when you're thinking about it also",
    "start": "317759",
    "end": "323400"
  },
  {
    "text": "relational databases are really great for if you have to do some type of aggregation for a cummer type analytics",
    "start": "323400",
    "end": "330759"
  },
  {
    "text": "if you have to um if it makes sense to to use cobs theorem and really denormalize your",
    "start": "330759",
    "end": "337280"
  },
  {
    "text": "tables and and separate it out into like third or fourth normal form and if those really make sense for your data models",
    "start": "337280",
    "end": "344240"
  },
  {
    "text": "then a relationship relational database is probably more well suited for your your use case um additionally for some",
    "start": "344240",
    "end": "352680"
  },
  {
    "text": "use cases if your relational database supports recursive query support um then",
    "start": "352680",
    "end": "359080"
  },
  {
    "text": "you might be able to utilize them as well it really depends on how often you're going to be doing these type of",
    "start": "359080",
    "end": "365240"
  },
  {
    "text": "graph queries and how optimized you need to um think about um for for your use",
    "start": "365240",
    "end": "373759"
  },
  {
    "text": "case so there there's two technologies that our customers um ask us about",
    "start": "373759",
    "end": "379240"
  },
  {
    "start": "374000",
    "end": "374000"
  },
  {
    "text": "frequently um one is Titan so Titan fundamentally is a distributed graph it",
    "start": "379240",
    "end": "385919"
  },
  {
    "text": "it it it's able to separate the storage layer from the the computational layer",
    "start": "385919",
    "end": "392360"
  },
  {
    "text": "um it leverages something called the the tinkerpop frame uh framework which I'll",
    "start": "392360",
    "end": "397560"
  },
  {
    "text": "get into in a couple slides um it when when you start talking about the the",
    "start": "397560",
    "end": "402720"
  },
  {
    "text": "properties on the graph itself then you can actually do full text queries of those using either Lucine or solar or",
    "start": "402720",
    "end": "409560"
  },
  {
    "text": "elastic search um additionally it it allows you to to plug in the um Dynamo",
    "start": "409560",
    "end": "416879"
  },
  {
    "text": "DB as the the storage framework which which we'll talk about in in a little bit with",
    "start": "416879",
    "end": "422400"
  },
  {
    "text": "Matthew Neo forj is another um uh commonly referenced graph for framework",
    "start": "422400",
    "end": "428360"
  },
  {
    "text": "that our customers uh ask us about um and so Neo has a background in in as a",
    "start": "428360",
    "end": "436039"
  },
  {
    "text": "jvm and it it's fundamentally like a shared nothing architecture uh there there's a single",
    "start": "436039",
    "end": "442280"
  },
  {
    "text": "master that controls all the the rights and there's multiple read replicas for",
    "start": "442280",
    "end": "447879"
  },
  {
    "text": "uh for availability um Additionally the it it easily supports like a highly",
    "start": "447879",
    "end": "454080"
  },
  {
    "text": "available framework and uses paxos as the the master election for for when a",
    "start": "454080",
    "end": "459400"
  },
  {
    "text": "node fails um Neil for J also like likes to use um RAM for for loading the",
    "start": "459400",
    "end": "467400"
  },
  {
    "text": "database so if you are going to be using that technology finding an instan size",
    "start": "467400",
    "end": "472639"
  },
  {
    "text": "on on AWS that that well suits your your your database size is pretty key but",
    "start": "472639",
    "end": "479120"
  },
  {
    "text": "addition it does have a very very efficient um spilling capability where it can utilize the local disc um Neo",
    "start": "479120",
    "end": "486560"
  },
  {
    "text": "forj is also characterized because um by the use of Cipher which is a DSL or a",
    "start": "486560",
    "end": "492319"
  },
  {
    "text": "domain specific language for graph trans um graph queries that um for them",
    "start": "492319",
    "end": "498840"
  },
  {
    "text": "however they they do also support um Gremlin which is the the Tinker pop",
    "start": "498840",
    "end": "505479"
  },
  {
    "start": "505000",
    "end": "505000"
  },
  {
    "text": "language so just as an example of a of an AWS trans uh deployment for Neo for J",
    "start": "505479",
    "end": "513479"
  },
  {
    "text": "um so as part of your your elb health checks if you wanted to um query using",
    "start": "513479",
    "end": "520479"
  },
  {
    "text": "HTTP get the these different URLs for for your your um your graph then then",
    "start": "520479",
    "end": "527240"
  },
  {
    "text": "you can select your master or you you can elect um your your read replicas",
    "start": "527240",
    "end": "532680"
  },
  {
    "text": "into the different um under the different elbs um just by doing a a query on on",
    "start": "532680",
    "end": "539600"
  },
  {
    "text": "these in and getting the the 200s or or the 500s so this actually presents a very",
    "start": "539600",
    "end": "547279"
  },
  {
    "text": "easily um scalable mechanism for for maintaining your graph",
    "start": "547279",
    "end": "553880"
  },
  {
    "text": "cluster one of the additional very in um interesting aspects of uh graph",
    "start": "554079",
    "end": "560839"
  },
  {
    "text": "databases is um like analytics over the entire graph so if you wanted to do an",
    "start": "560839",
    "end": "567920"
  },
  {
    "text": "analytics or or an aggregation type query over the entire graph then it's much much suitable to an olap instead of",
    "start": "567920",
    "end": "575360"
  },
  {
    "text": "an oltp type framework so there there's a couple different Technologies out there that really Leverage The Hadoop or",
    "start": "575360",
    "end": "581440"
  },
  {
    "text": "the map reduce framework um for instance graphx is a uh it's an analytics using",
    "start": "581440",
    "end": "588640"
  },
  {
    "text": "spark um so in memory database uh queries it's it's a functional it's more of a declarative type programming",
    "start": "588640",
    "end": "595880"
  },
  {
    "text": "language where Gyra um is a graph query",
    "start": "595880",
    "end": "601120"
  },
  {
    "text": "language or graph query um methodology that that uses uh hdfs and it's much",
    "start": "601120",
    "end": "608519"
  },
  {
    "text": "more like a Vertex um centered um programming",
    "start": "608519",
    "end": "614079"
  },
  {
    "start": "614000",
    "end": "614000"
  },
  {
    "text": "model so I I I discussed uh tinkerpop and so what tinkerpop is is a it's an",
    "start": "614120",
    "end": "621480"
  },
  {
    "text": "Apache gra graph framework that describes the different levels of uh and",
    "start": "621480",
    "end": "626560"
  },
  {
    "text": "the the different layers of of the the system itself um two of",
    "start": "626560",
    "end": "632360"
  },
  {
    "text": "the um key key aspects is either Gremlin which I talked about it's a graph",
    "start": "632360",
    "end": "637800"
  },
  {
    "text": "language for doing um transversals and it supports the the analysis and it sech",
    "start": "637800",
    "end": "644839"
  },
  {
    "text": "uh queries on the graph itself um and there's also graph well it's called",
    "start": "644839",
    "end": "649920"
  },
  {
    "text": "Gremlin structured API it used to be called uh blueprints for uh tinkerpop",
    "start": "649920",
    "end": "655040"
  },
  {
    "text": "2.0 and it's and that's a generic graph uh connector frame work which ties in",
    "start": "655040",
    "end": "661279"
  },
  {
    "text": "it's almost like a j JBC for for the graph itself and that's the the",
    "start": "661279",
    "end": "666440"
  },
  {
    "text": "interface into the the backend query and language or the query uh graph engine",
    "start": "666440",
    "end": "672959"
  },
  {
    "start": "672000",
    "end": "672000"
  },
  {
    "text": "sorry um when when trying to decide if you actually",
    "start": "672959",
    "end": "679480"
  },
  {
    "text": "need a graph database it really helps to to Center along the the use cases uh",
    "start": "679480",
    "end": "685360"
  },
  {
    "text": "almost the the canonical use case for graph is is social I know this person and this person knows this person so I",
    "start": "685360",
    "end": "692320"
  },
  {
    "text": "have to figure out the the number of influencers or the the the amount of relationships that I have to another",
    "start": "692320",
    "end": "698200"
  },
  {
    "text": "person um but some really interesting use cases come down to um the the this",
    "start": "698200",
    "end": "704959"
  },
  {
    "text": "fifth bullet of the the sensor analysis um yesterday the uh the gentleman from",
    "start": "704959",
    "end": "711040"
  },
  {
    "text": "BMW talked about the the connected car so if you wanted to maybe think about if",
    "start": "711040",
    "end": "717760"
  },
  {
    "text": "in a connected car I have an incident or I see a pothole or I see I have a blown",
    "start": "717760",
    "end": "723600"
  },
  {
    "text": "out tire and I need to broadcast that information to all the cars that are connected to me within X meters or X",
    "start": "723600",
    "end": "731639"
  },
  {
    "text": "feet um graph databases actually translate really well into a geospatial",
    "start": "731639",
    "end": "738480"
  },
  {
    "text": "type construct because archeries um lend themselves very really",
    "start": "738480",
    "end": "743720"
  },
  {
    "text": "well into a graph database uh uh construct so if you wanted to say like",
    "start": "743720",
    "end": "749959"
  },
  {
    "text": "use a a bounding box or describe a polygon around in a sensor um graph",
    "start": "749959",
    "end": "756839"
  },
  {
    "text": "transversals actually are really well suited for that um just as an example of one of the",
    "start": "756839",
    "end": "764920"
  },
  {
    "start": "762000",
    "end": "762000"
  },
  {
    "text": "the use cases um one of the the very common things for a say a shopping",
    "start": "764920",
    "end": "771839"
  },
  {
    "text": "website you you talk about like I'm looking at this so I want to be able to",
    "start": "771839",
    "end": "777120"
  },
  {
    "text": "present to the user people who look at this also bought that um that is really",
    "start": "777120",
    "end": "782839"
  },
  {
    "text": "well suited for um hitting the the like a graph database in in the um the to",
    "start": "782839",
    "end": "790199"
  },
  {
    "text": "find the relationships between people who viewed an item from this particular",
    "start": "790199",
    "end": "795639"
  },
  {
    "text": "Channel um however if you wanted to do maybe like a weekly or nightly",
    "start": "795639",
    "end": "800680"
  },
  {
    "text": "newsletter and and to send that out to your customers that says hey by the way something you looked at just changed or",
    "start": "800680",
    "end": "808399"
  },
  {
    "text": "or price dropped or we now have a new feature that'd be more suitable for more",
    "start": "808399",
    "end": "813680"
  },
  {
    "text": "of an olap type uh query um so in In This Very trivial example um you would",
    "start": "813680",
    "end": "820360"
  },
  {
    "text": "extract the the information from the Neo forj cluster using something called Maze Runner which would take out a subset of",
    "start": "820360",
    "end": "826760"
  },
  {
    "text": "the the the graph uh loaded into elastic map reduce which supports spark and then",
    "start": "826760",
    "end": "832000"
  },
  {
    "text": "maybe graph x to to do a nightly um uh",
    "start": "832000",
    "end": "837279"
  },
  {
    "text": "mation on on the enti or aggregation on on top of the entire graph to send out a",
    "start": "837279",
    "end": "842480"
  },
  {
    "text": "large uh newsletter to all your users so at this time um I I've kind of",
    "start": "842480",
    "end": "850160"
  },
  {
    "text": "covered the the generics and the the basics of graph Technologies and in graph dat databases on uh AWS like to",
    "start": "850160",
    "end": "858399"
  },
  {
    "text": "hand it over to to Matthew who's going to talk about a really interesting customer um example great thank you",
    "start": "858399",
    "end": "864480"
  },
  {
    "text": "thank you very much hello everybody my name is Matthew saers I'm a senior software engineer in Amazon operations",
    "start": "864480",
    "end": "872680"
  },
  {
    "text": "technology uh I've been with Amazon 3 years now uh when I started I started in",
    "start": "872680",
    "end": "878759"
  },
  {
    "text": "Amazon Fulfillment Technologies and that's the space that I'm about to talk about I started on the receive team um",
    "start": "878759",
    "end": "886399"
  },
  {
    "text": "and uh after that uh we after about a year we started looking at automating as",
    "start": "886399",
    "end": "892560"
  },
  {
    "text": "much of the inbound uh space as possible and with that uh let me explain a little",
    "start": "892560",
    "end": "900040"
  },
  {
    "text": "bit about inbound Logistics um so sellers want to sell",
    "start": "900040",
    "end": "906399"
  },
  {
    "text": "stuff on amazon.com uh and to do that they they they send us their product that goes",
    "start": "906399",
    "end": "913240"
  },
  {
    "text": "into our fulfillment centers where a receiver will scan the products they",
    "start": "913240",
    "end": "918279"
  },
  {
    "text": "sent count them uh then that gets sent down to sters stores scan the products",
    "start": "918279",
    "end": "924399"
  },
  {
    "text": "put it into bins uh those are the containers where it's uh kept on the",
    "start": "924399",
    "end": "929600"
  },
  {
    "text": "shelves until people people purchase it on amazon.com and it's sent out uh to",
    "start": "929600",
    "end": "936399"
  },
  {
    "text": "them so what are some of the the data problems that are involved in that so",
    "start": "937639",
    "end": "942759"
  },
  {
    "start": "938000",
    "end": "938000"
  },
  {
    "text": "anytime you have a touch Point that's an opportunity particularly if you have a human counting it uh for error right so",
    "start": "942759",
    "end": "950440"
  },
  {
    "text": "you have miscounts uh either at the seller at the receiver at the store",
    "start": "950440",
    "end": "957000"
  },
  {
    "text": "right um and when there's a miscount somebody is not going to be",
    "start": "957000",
    "end": "963519"
  },
  {
    "text": "paid or paid too much right those are bad things uh on both",
    "start": "963519",
    "end": "969879"
  },
  {
    "text": "sides so how have we handled this in the past so for a very long time what we had",
    "start": "970720",
    "end": "977279"
  },
  {
    "start": "972000",
    "end": "972000"
  },
  {
    "text": "is all of our tools emitted events and those events were recorded into a database somewhere and it basically said",
    "start": "977279",
    "end": "983959"
  },
  {
    "text": "this item was added here this item was moved from here to here uh this item was",
    "start": "983959",
    "end": "989399"
  },
  {
    "text": "deleted from from this place and so people would look into these logs uh this database uh and try try to manually",
    "start": "989399",
    "end": "997600"
  },
  {
    "text": "do this Trace uh and follow the searches but it's it's incredibly difficult it's also incredibly error prone um another",
    "start": "997600",
    "end": "1006399"
  },
  {
    "text": "approach that's taken um is to have unique identifiers so if you can have a unique uh barcode on every single",
    "start": "1006399",
    "end": "1013720"
  },
  {
    "text": "product then there's absolutely no need to try to find you know where it came",
    "start": "1013720",
    "end": "1019360"
  },
  {
    "text": "from because you can just look up you know directly into an an index and be able to find all all the history for",
    "start": "1019360",
    "end": "1025438"
  },
  {
    "text": "that for that given product however that's in insanely expensive at Amazon",
    "start": "1025439",
    "end": "1030959"
  },
  {
    "text": "scale because you know we we deal with millions and millions of items and each",
    "start": "1030959",
    "end": "1037640"
  },
  {
    "text": "sticker costs money right um it it's also impractical for Amazon purposes",
    "start": "1037640",
    "end": "1042959"
  },
  {
    "text": "because we sell everything from very little tiny things like I don't know earbuds or something like that to very",
    "start": "1042959",
    "end": "1048558"
  },
  {
    "text": "very large things like I don't know a canoe right and so like how do you put",
    "start": "1048559",
    "end": "1054600"
  },
  {
    "text": "like a standard sticker on all those varying size products right um so it's",
    "start": "1054600",
    "end": "1060679"
  },
  {
    "text": "it's impractical for some items so this is what we what we came up",
    "start": "1060679",
    "end": "1066440"
  },
  {
    "start": "1063000",
    "end": "1063000"
  },
  {
    "text": "with we we took that same event model that was created by all of our uh all of",
    "start": "1066440",
    "end": "1071880"
  },
  {
    "text": "our tools that said these items are added here these items are moved from here to here and we created this this",
    "start": "1071880",
    "end": "1077919"
  },
  {
    "text": "graph that's effectively able to trace our inventory throughout our fulfillment Network so these blue uh blue rectangles",
    "start": "1077919",
    "end": "1085480"
  },
  {
    "text": "represent the events themselves the the red circles represent the containers that they're moved into or moved out of",
    "start": "1085480",
    "end": "1093080"
  },
  {
    "text": "um and then you see some some other things that represent uh whenever we're moving product from one fulfillment",
    "start": "1093080",
    "end": "1099120"
  },
  {
    "text": "center to another fulfillment center uh we want to be able to trace it back all the way to the origin so we have two",
    "start": "1099120",
    "end": "1105159"
  },
  {
    "text": "main query patterns here we want to be able to identify for a given box that somebody sends us",
    "start": "1105159",
    "end": "1113400"
  },
  {
    "text": "what happened to that box after we received it and that's incredibly hard to answer",
    "start": "1113400",
    "end": "1118520"
  },
  {
    "text": "because each of the products that are in that box they they don't have unique identifiers they have a a skew or a",
    "start": "1118520",
    "end": "1124080"
  },
  {
    "text": "stock keeping unit right that that's generic across many Sellers and so we want to be able to know exactly who sent",
    "start": "1124080",
    "end": "1132159"
  },
  {
    "text": "for for for an exact box that somebody sent us exactly what we ended up doing with it uh if there were more items than",
    "start": "1132159",
    "end": "1138480"
  },
  {
    "text": "they said that would be in the Box less items than they said that would be in the",
    "start": "1138480",
    "end": "1144120"
  },
  {
    "text": "box and so the other querying pattern is whenever we get to a stove we want to",
    "start": "1145600",
    "end": "1152520"
  },
  {
    "text": "put it onto a bin and we had we identify that there is a miscount so we're expecting 10 items and we only find nine",
    "start": "1152520",
    "end": "1159400"
  },
  {
    "text": "or we find 11 and so we want to be able to trace back to the origin know what",
    "start": "1159400",
    "end": "1165520"
  },
  {
    "text": "purchase order we received it against and adjust it accordingly so we paid the correct",
    "start": "1165520",
    "end": "1172279"
  },
  {
    "start": "1173000",
    "end": "1173000"
  },
  {
    "text": "amount so there's a couple of options obviously in trying to develop the storage model for this um so some some",
    "start": "1174799",
    "end": "1182640"
  },
  {
    "text": "of the ones that we went through is okay so can we use a traditional relational data store should we use a no SQL store",
    "start": "1182640",
    "end": "1190440"
  },
  {
    "text": "like Dynamo DV for the relational store we knew that Not only was our volume",
    "start": "1190440",
    "end": "1198000"
  },
  {
    "text": "incredibly High uh to start with but they would just keep growing as as time goes on because",
    "start": "1198000",
    "end": "1203200"
  },
  {
    "text": "Amazon is growing incredibly fast uh and we didn't want to have to keep vertically scaling uh our storage",
    "start": "1203200",
    "end": "1210679"
  },
  {
    "text": "solution another common problem with relational databases for uh these uh",
    "start": "1210679",
    "end": "1217080"
  },
  {
    "text": "graph type models is uh they they generally perform joins in order to to",
    "start": "1217080",
    "end": "1222320"
  },
  {
    "text": "find the traversals you have to join after join after join depending on how how many hops you have to do and so we",
    "start": "1222320",
    "end": "1228840"
  },
  {
    "text": "knew that the the joining mechanism would be very expensive uh and finally we required uh the the top type of",
    "start": "1228840",
    "end": "1237600"
  },
  {
    "text": "availability uh because we're running around the world 247 uh and we don't want any",
    "start": "1237600",
    "end": "1244720"
  },
  {
    "text": "interruptions to our operations process so why not use Dynamo DB",
    "start": "1244720",
    "end": "1252320"
  },
  {
    "text": "directly so we didn't want to use Dynamo DB directly because uh we would what we",
    "start": "1252320",
    "end": "1257440"
  },
  {
    "text": "would effectively build build is a graph so there's already an existing if",
    "start": "1257440",
    "end": "1264400"
  },
  {
    "text": "there's already an existing graph API then we can just use that and not have",
    "start": "1264400",
    "end": "1269559"
  },
  {
    "text": "to try to model it ourselves and reinvent the wheel so why did we want to model it as",
    "start": "1269559",
    "end": "1275760"
  },
  {
    "start": "1274000",
    "end": "1274000"
  },
  {
    "text": "a graph in the first place so there's no way to index for a single lookup to to know",
    "start": "1275760",
    "end": "1283039"
  },
  {
    "text": "exactly all the events that we need right because these events they come in distributed over time",
    "start": "1283039",
    "end": "1290520"
  },
  {
    "text": "we generally have we're we're dealing with mostly the middle events right uh",
    "start": "1291840",
    "end": "1297600"
  },
  {
    "text": "so the the beginning and the end they only happen uh much rarer than the the",
    "start": "1297600",
    "end": "1303840"
  },
  {
    "text": "movements in the middle and so all of those ones in the middle how do we know which one we have to associate with we",
    "start": "1303840",
    "end": "1310120"
  },
  {
    "text": "we don't know how to associate those to uh all the given uh intermediate uh",
    "start": "1310120",
    "end": "1315880"
  },
  {
    "text": "boxes right the cartons um or stoves for that",
    "start": "1315880",
    "end": "1321919"
  },
  {
    "text": "matter and so we we need to also be able to",
    "start": "1322000",
    "end": "1327559"
  },
  {
    "text": "handle out of order messaging right so we we need to be able to insert into the middle or if we received a a message",
    "start": "1327559",
    "end": "1334559"
  },
  {
    "text": "that was uh for a Stow later we need to be able to in in insert a movement that",
    "start": "1334559",
    "end": "1339640"
  },
  {
    "text": "we found earlier uh into the correct place in the graph um and also graphs provide a simple mental model and what",
    "start": "1339640",
    "end": "1346559"
  },
  {
    "text": "what do I mean by that I mean um most computer science programs they go over",
    "start": "1346559",
    "end": "1351919"
  },
  {
    "text": "you know what a directed graph is so everybody's on the team is already familiar with it they I already familiar",
    "start": "1351919",
    "end": "1357720"
  },
  {
    "text": "with common traversal Concepts like breath research depth research those types of things and so it already like",
    "start": "1357720",
    "end": "1363919"
  },
  {
    "text": "uh everybody's already trained in how do you uh navigate a data structure like",
    "start": "1363919",
    "end": "1371840"
  },
  {
    "start": "1371000",
    "end": "1371000"
  },
  {
    "text": "this so our next uh topic is H how did",
    "start": "1371880",
    "end": "1377440"
  },
  {
    "text": "we come to Titan uh as as the implementation to go with so there's there's lots of graph database options",
    "start": "1377440",
    "end": "1385200"
  },
  {
    "text": "um and so the first thing that we we knew is because there's so many options and we were already kind of unfamiliar",
    "start": "1385200",
    "end": "1391600"
  },
  {
    "text": "with most of them we wanted to keep as many delay as many choices as we had to",
    "start": "1391600",
    "end": "1397840"
  },
  {
    "text": "right and so we started with Tinker pup and we said okay there's lots of these graph databases that implement the",
    "start": "1397840",
    "end": "1403880"
  },
  {
    "text": "Tinker pop framework and so let let's start with that let's just make thep that we're going to use one of these",
    "start": "1403880",
    "end": "1410640"
  },
  {
    "text": "graph database to implement tinkerpop what Titan does is it abstracts away the",
    "start": "1410640",
    "end": "1415799"
  },
  {
    "text": "storage layer so we get to delay even that decision that is it has this plug-in layer that allows you to use",
    "start": "1415799",
    "end": "1423559"
  },
  {
    "text": "multiple different storage backends to Bas based on your needs so for instance it has Berkeley DB hbas Cassandra and",
    "start": "1423559",
    "end": "1431679"
  },
  {
    "text": "now Dynamo DB so what that allows us to do is experiment right uh so so we quickly uh",
    "start": "1431679",
    "end": "1439799"
  },
  {
    "text": "ruled out Berkeley DB because Titan the recommended Max size for that is",
    "start": "1439799",
    "end": "1445120"
  },
  {
    "text": "something like 5 million and we would knew we would be way way Beyond 5 million vertices very very",
    "start": "1445120",
    "end": "1452679"
  },
  {
    "text": "quickly um hbas uh most of our team",
    "start": "1452679",
    "end": "1458000"
  },
  {
    "text": "wasn't familiar with it and uh they have certain uh additional restrictions like",
    "start": "1458000",
    "end": "1465960"
  },
  {
    "text": "keeping a Hadoop cluster uh keeping um um it also has a single point of fail",
    "start": "1465960",
    "end": "1474919"
  },
  {
    "text": "in the name nodes um and so we it it was also much slower than the Cassandra",
    "start": "1474919",
    "end": "1480000"
  },
  {
    "text": "implementation so we also quickly uh identified that as a uh one that we",
    "start": "1480000",
    "end": "1486000"
  },
  {
    "text": "weren't going to pursue further next we move to",
    "start": "1486000",
    "end": "1490919"
  },
  {
    "text": "Cassandra and so we we we invested heavily into an experiment uh",
    "start": "1491279",
    "end": "1497799"
  },
  {
    "text": "implementing this graph database on Cassandra and we went with it because Cassandra is highly available had the",
    "start": "1497799",
    "end": "1504000"
  },
  {
    "text": "existing Titan implementation which is already pretty fast um we're able to use",
    "start": "1504000",
    "end": "1510120"
  },
  {
    "text": "the ec2 snitch uh which basically defines your ec2 topology to Cassandra",
    "start": "1510120",
    "end": "1516200"
  },
  {
    "text": "so it knows how to appropriately uh replicate your nodes so",
    "start": "1516200",
    "end": "1521720"
  },
  {
    "text": "in the event of a a failure for instance you don't uh lose uh all all the",
    "start": "1521720",
    "end": "1527880"
  },
  {
    "text": "information for uh that are that are in in in that ring um and we also used a random",
    "start": "1527880",
    "end": "1536720"
  },
  {
    "text": "partitioner so the the load would be uh evenly",
    "start": "1536720",
    "end": "1542240"
  },
  {
    "start": "1542000",
    "end": "1542000"
  },
  {
    "text": "distributed so the Lessons Learned while working with uh Cassandra is one no one",
    "start": "1543840",
    "end": "1550880"
  },
  {
    "text": "on our team to start with had uh previous experience working on Cassandra",
    "start": "1550880",
    "end": "1556520"
  },
  {
    "text": "managing a Cassandra clust and this this it's",
    "start": "1556520",
    "end": "1563039"
  },
  {
    "text": "a it's a full-time job at the at at the level that we were operating at Cassandra has tons of tuning uh that's",
    "start": "1563039",
    "end": "1571679"
  },
  {
    "text": "required it took us several months to do the tuning for Cassandra for our particular operation uh and even then um",
    "start": "1571679",
    "end": "1579559"
  },
  {
    "text": "in our autoscaling groups if a host goes down or for whatever reason Amazon decides that we uh that one of our hosts",
    "start": "1579559",
    "end": "1587279"
  },
  {
    "text": "needs to be replaced uh we had to uh we had several issues in",
    "start": "1587279",
    "end": "1592880"
  },
  {
    "text": "that automatic replacement of nodes back into the Cassandra cluster and so for a long time we had to manually swap nodes",
    "start": "1592880",
    "end": "1600120"
  },
  {
    "text": "in and out it's a big operational overhead so what we eventually came up",
    "start": "1600120",
    "end": "1605799"
  },
  {
    "text": "with uh oh oh and finally it Cassandra doesn't handle deleting like all your",
    "start": "1605799",
    "end": "1613679"
  },
  {
    "text": "your your nodes that were created before a certain point right so it doesn't like",
    "start": "1613679",
    "end": "1619080"
  },
  {
    "text": "to be handled like a queue uh so what what happens is that Cassandra uh does",
    "start": "1619080",
    "end": "1626279"
  },
  {
    "text": "what's called tombstoning so it doesn't actually when you tell it to delete a node it doesn't actually delete it it tombstones it and",
    "start": "1626279",
    "end": "1632760"
  },
  {
    "text": "then it does a form of garbage collection um so we had this massive outage uh that was because it was trying",
    "start": "1632760",
    "end": "1640720"
  },
  {
    "text": "to delete too much which over uh flooded some of the host which put pressure onto other hosts which then killed them and",
    "start": "1640720",
    "end": "1648600"
  },
  {
    "text": "then boom everything's out uh so what we ended up doing was we ran uh two two separate key spaces",
    "start": "1648600",
    "end": "1655960"
  },
  {
    "text": "simultaneously and then just uh we we switched over who is uh who is the",
    "start": "1655960",
    "end": "1661960"
  },
  {
    "text": "master and who is the slave uh after a certain point we were confident that the the the new one was okay we would delete",
    "start": "1661960",
    "end": "1669080"
  },
  {
    "text": "the old one rebuild it over a period of time switch back over delete the old one",
    "start": "1669080",
    "end": "1674919"
  },
  {
    "text": "so that way we would only keep however much data we needed at a at a given",
    "start": "1674919",
    "end": "1681480"
  },
  {
    "text": "time so because we had all this operational overhead we didn't want to",
    "start": "1681480",
    "end": "1686519"
  },
  {
    "text": "continue that we thought hey we know another nosql database that doesn't",
    "start": "1686519",
    "end": "1693279"
  },
  {
    "text": "require us to do all this cluster management um Dynamo DB is massively",
    "start": "1693279",
    "end": "1698440"
  },
  {
    "text": "scalable we didn't want to have all these crazy tuning options we just wanted a few DB allows us we need more",
    "start": "1698440",
    "end": "1706679"
  },
  {
    "text": "write we need more read uh and so we're the the tuning on that is very simple and the team is already",
    "start": "1706679",
    "end": "1712960"
  },
  {
    "text": "familiar with Dynamo DB the programming model the the uh all all the benefits",
    "start": "1712960",
    "end": "1718880"
  },
  {
    "text": "that goes to it however we realized that it was risky because there was no existing pre-existing Titan",
    "start": "1718880",
    "end": "1724399"
  },
  {
    "text": "implementation that we were going to do this ourselves so this is what we ended up",
    "start": "1724399",
    "end": "1730200"
  },
  {
    "start": "1728000",
    "end": "1728000"
  },
  {
    "text": "coming up with as far as the architecture goes we have our inventory system that emits these inventory move",
    "start": "1730200",
    "end": "1736159"
  },
  {
    "text": "events uh those are that SNS uh that feeds sqsq that we have our inventory",
    "start": "1736159",
    "end": "1742480"
  },
  {
    "text": "notification graph populator uh it reads all these events uh it creates the",
    "start": "1742480",
    "end": "1749559"
  },
  {
    "text": "appropriate vertices and edges there's a failure it can always just throw back the event process process it later fix",
    "start": "1749559",
    "end": "1756679"
  },
  {
    "text": "all the nodes uh and that all feeds into Dynam DB on the other side we have some",
    "start": "1756679",
    "end": "1762799"
  },
  {
    "text": "clients which know how to query using our ing query service",
    "start": "1762799",
    "end": "1768880"
  },
  {
    "text": "that abstracts away the all the details of how Titan is implemented in the Dynamo",
    "start": "1768880",
    "end": "1776440"
  },
  {
    "start": "1777000",
    "end": "1777000"
  },
  {
    "text": "um so what we started with was uh was what we call the single item data model",
    "start": "1777039",
    "end": "1783840"
  },
  {
    "text": "uh in Dynamo DB so what what this does is it takes the the Titan abstraction uh",
    "start": "1783840",
    "end": "1789919"
  },
  {
    "text": "in in the plug-in layer and it takes a given vertex uh and",
    "start": "1789919",
    "end": "1796000"
  },
  {
    "text": "it uses that as the hatch key um and each of the attributes it corresponds to",
    "start": "1796000",
    "end": "1801880"
  },
  {
    "text": "a given uh Dynamo DP attribute so it's a dynamically named attribute in Dynamo DB",
    "start": "1801880",
    "end": "1808880"
  },
  {
    "text": "based off of what Titan tells us the attribute names are so it basically stores all those values in a given Row",
    "start": "1808880",
    "end": "1815360"
  },
  {
    "text": "the only problem with that uh for us was the Dynamo DBS uh item cap on size so",
    "start": "1815360",
    "end": "1823399"
  },
  {
    "text": "Dynamo DB has a 400 kiloby Max item size and so that would limit us in a couple",
    "start": "1823399",
    "end": "1829559"
  },
  {
    "text": "different aspects so one is the total number of properties a given item might have uh another would be the total",
    "start": "1829559",
    "end": "1835679"
  },
  {
    "text": "number of uh out edges or in edges for a given uh vertex and so we had to deal",
    "start": "1835679",
    "end": "1842960"
  },
  {
    "text": "with our own Super nodes super nodes is a common graph database problem that is you have some nodes which have many many",
    "start": "1842960",
    "end": "1850320"
  },
  {
    "text": "many edges in and out of so for instance our containers we're going to have lots of different inventory events for a",
    "start": "1850320",
    "end": "1856320"
  },
  {
    "text": "given container so this it this this didn't work with us as we started to",
    "start": "1856320",
    "end": "1861399"
  },
  {
    "text": "scale so we came up with a second model so and that's what we call the multi-",
    "start": "1861399",
    "end": "1866760"
  },
  {
    "start": "1865000",
    "end": "1865000"
  },
  {
    "text": "item data model so this works actually very similar to the way the Cassandra implementation works in that the vertex",
    "start": "1866760",
    "end": "1874159"
  },
  {
    "text": "has this given hash key uh each attribute is used as the range key and then we have a value column as",
    "start": "1874159",
    "end": "1881639"
  },
  {
    "text": "well and so what we're able to do is when we're given a range query from",
    "start": "1881639",
    "end": "1886679"
  },
  {
    "text": "Titan we're able to trans translate that into a Dynam DB range query so we're able to return just the items that we",
    "start": "1886679",
    "end": "1893679"
  },
  {
    "text": "need uh hand that back off to Titan uh and um and process further so this this",
    "start": "1893679",
    "end": "1902840"
  },
  {
    "text": "gets us away from uh many of the the stum leg blocks that we had uh from from",
    "start": "1902840",
    "end": "1907880"
  },
  {
    "text": "Titan as far as the the scaling goes for a given uh Vertex or Edge for that",
    "start": "1907880",
    "end": "1915799"
  },
  {
    "start": "1916000",
    "end": "1916000"
  },
  {
    "text": "matter okay so DB how how does it scale so our graph that we're running has",
    "start": "1916000",
    "end": "1923519"
  },
  {
    "text": "close to 100 billion 100 billion vertices so it's very big it's terabytes",
    "start": "1923519",
    "end": "1931200"
  },
  {
    "text": "of data um and all of that while while we've been building this and continually",
    "start": "1931200",
    "end": "1937440"
  },
  {
    "text": "building it has come without a corresponding increase uh in latency for",
    "start": "1937440",
    "end": "1943880"
  },
  {
    "text": "these queries that's the nice thing about grass is that they're that they're",
    "start": "1943880",
    "end": "1949200"
  },
  {
    "text": "they're bound based off of what your uh your your query parameters are that is",
    "start": "1949200",
    "end": "1954760"
  },
  {
    "text": "in our case it's the max depth that we're going to query that defines how many hops we're going to have uh whereas",
    "start": "1954760",
    "end": "1960880"
  },
  {
    "text": "a database uh if you were going to be doing these joints it's going to grow",
    "start": "1960880",
    "end": "1965919"
  },
  {
    "text": "much much more rapidly uh based off of the size the entire size of the",
    "start": "1965919",
    "end": "1973158"
  },
  {
    "text": "graph okay so some of the Lessons Learned in Dynamo DB",
    "start": "1973960",
    "end": "1979159"
  },
  {
    "start": "1974000",
    "end": "1974000"
  },
  {
    "text": "um one of the features that came out in Titan 0.5 was this uh ability to use",
    "start": "1979159",
    "end": "1985919"
  },
  {
    "text": "partition graphs uh that's a very good feature uh as you have a very large graph it's highly recommended to use",
    "start": "1985919",
    "end": "1992600"
  },
  {
    "text": "that uh particular feature to speed thing spe speed up your querying uh a",
    "start": "1992600",
    "end": "1999080"
  },
  {
    "text": "lot so in our case uh as I mentioned in the Cassandra is that we wanted to be",
    "start": "1999080",
    "end": "2005200"
  },
  {
    "text": "able to drop old data right um so what we did in this particular",
    "start": "2005200",
    "end": "2010519"
  },
  {
    "text": "case with Dynamo DB our implementation is we'll run a graph for whatever uh",
    "start": "2010519",
    "end": "2016760"
  },
  {
    "text": "acceptable time span we've decided then we'll run a separate graph",
    "start": "2016760",
    "end": "2024159"
  },
  {
    "text": "uh when the the the time Horizon is met and for the events that are created that",
    "start": "2024159",
    "end": "2030480"
  },
  {
    "text": "the edges that need to be created uh that span the two will create what we call proxy vertices that reference the",
    "start": "2030480",
    "end": "2037480"
  },
  {
    "text": "other graph right so for a very short period of time we'll have uh a two graph",
    "start": "2037480",
    "end": "2045559"
  },
  {
    "text": "queries that will gr across both um and then we'll continue on in a single graph",
    "start": "2045559",
    "end": "2052079"
  },
  {
    "text": "model for however long that does provide some nice features in that we can take a",
    "start": "2052079",
    "end": "2058118"
  },
  {
    "text": "certain time span of the graph and we can serialize it we can put it out to S3 and then later do whatever kind of",
    "start": "2058119",
    "end": "2064480"
  },
  {
    "text": "analysis which basically means we get to keep around the entire graph for forever um and finally that we've been",
    "start": "2064480",
    "end": "2073280"
  },
  {
    "text": "able to achieve uh performance at scale uh without all of the uh overhead",
    "start": "2073280",
    "end": "2080200"
  },
  {
    "text": "incurred by running our own cluster uh with Dynamo",
    "start": "2080200",
    "end": "2085560"
  },
  {
    "text": "DB so you might be asking yourself how do I get started with the Dynamo DB",
    "start": "2085560",
    "end": "2090599"
  },
  {
    "start": "2086000",
    "end": "2086000"
  },
  {
    "text": "plugin for Titan so we've released this through AWS labs in our GitHub",
    "start": "2090599",
    "end": "2095960"
  },
  {
    "text": "repository so you can go and and download that uh you can test around on your own local",
    "start": "2095960",
    "end": "2104880"
  },
  {
    "text": "box on your own local Dev Box by using the Dynamo DB local uh implementation",
    "start": "2104880",
    "end": "2111040"
  },
  {
    "text": "Dynamo DB local is basically implements the Dynamo DB API but you're able to run it on your your machine for for Dev",
    "start": "2111040",
    "end": "2118400"
  },
  {
    "text": "testing uh this is really nice to get up and and started very fast we also provided a cloud formation",
    "start": "2118400",
    "end": "2126200"
  },
  {
    "text": "template so if you you want to also very quickly put this into production you can",
    "start": "2126200",
    "end": "2132280"
  },
  {
    "text": "set up the environments that you need very quickly and get started with it in",
    "start": "2132280",
    "end": "2137599"
  },
  {
    "text": "against a production Dynamo DB so I'm not going to read through all",
    "start": "2137599",
    "end": "2144520"
  },
  {
    "text": "this I'm sure you're all thankful for that uh so this is just a bunch of references for you to learn more we'll",
    "start": "2144520",
    "end": "2151520"
  },
  {
    "text": "have these slides available uh for you to to access uh it's a several books",
    "start": "2151520",
    "end": "2157640"
  },
  {
    "text": "books on graphs graph databases uh as well as some of the blog posts that",
    "start": "2157640",
    "end": "2163240"
  },
  {
    "text": "we've done on the Dynamo DB plugin for",
    "start": "2163240",
    "end": "2168280"
  },
  {
    "text": "Titan so if any of this was interested to you in if you are interested in",
    "start": "2168280",
    "end": "2175560"
  },
  {
    "text": "this uh I just want to make a quick mention we are hiring",
    "start": "2175560",
    "end": "2181640"
  },
  {
    "text": "uh um and with that uh I'll hand it over to Todd cool",
    "start": "2181640",
    "end": "2188200"
  },
  {
    "text": "yep so I think this awesome thank thank you Matthew um so so like like we said thank you very much um for for your",
    "start": "2188200",
    "end": "2194880"
  },
  {
    "text": "attention to to this talk we're absolutely interested in um if you have",
    "start": "2194880",
    "end": "2200119"
  },
  {
    "text": "any questions or if you want to come up to us and maybe talk with maybe how like AWS can help you out with your graph",
    "start": "2200119",
    "end": "2206640"
  },
  {
    "text": "database problems and also any type of use cases that you might have running graph databases on a AWS so I think we",
    "start": "2206640",
    "end": "2214240"
  },
  {
    "text": "might have a couple qu U time for questions I don't not sure how the logistics works but um happy to",
    "start": "2214240",
    "end": "2220480"
  },
  {
    "text": "entertain any questions right now or you can just come up and talk with us thank you",
    "start": "2220480",
    "end": "2227240"
  }
]