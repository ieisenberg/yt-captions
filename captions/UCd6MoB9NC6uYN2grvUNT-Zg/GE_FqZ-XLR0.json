[
  {
    "start": "0",
    "end": "87000"
  },
  {
    "text": "good morning and welcome to net 202 I'm Alan halacha me I'm a senior manager of",
    "start": "30",
    "end": "6060"
  },
  {
    "text": "solutions architecture at Amazon Web Services and I help customers leverage the security and networking capabilities",
    "start": "6060",
    "end": "12840"
  },
  {
    "text": "provided by AWS to deliver secure and performance systems you're probably",
    "start": "12840",
    "end": "18930"
  },
  {
    "text": "aware that the number of unallocated ipv4 addresses is almost complete we're",
    "start": "18930",
    "end": "25980"
  },
  {
    "text": "almost out of ipv4 addresses but did you know that the exhaustion of the global",
    "start": "25980",
    "end": "31500"
  },
  {
    "text": "ipv4 pool is expected next year did you",
    "start": "31500",
    "end": "36540"
  },
  {
    "text": "know that ipv6 is growing at an exponential rate on the Internet in this",
    "start": "36540",
    "end": "42300"
  },
  {
    "text": "session I'm going to give you the basics about ipv6 I'm going to show you how easy it is to leverage ipv6 on AWS so an",
    "start": "42300",
    "end": "53670"
  },
  {
    "text": "agenda will review the pace of ipv6 adoption key aspects of the protocol and",
    "start": "53670",
    "end": "60149"
  },
  {
    "text": "how to enable ipv6 across various AWS services now this is an introductory",
    "start": "60149",
    "end": "65610"
  },
  {
    "text": "course so we're not going to learn ipv6 ninja moves on AWS but this should give you the confidence that you will want to",
    "start": "65610",
    "end": "72330"
  },
  {
    "text": "have as you start to go down a path of leveraging ipv6 in your applications",
    "start": "72330",
    "end": "79340"
  },
  {
    "text": "let's start with the state of the ipv6 Internet this will be very brief but just to give you a sense for the pace at",
    "start": "79549",
    "end": "86159"
  },
  {
    "text": "which it is growing so the data here we showed last year as well I took this",
    "start": "86159",
    "end": "92759"
  },
  {
    "start": "87000",
    "end": "87000"
  },
  {
    "text": "data at the end of October Global ipv6 usage as seen from major websites was",
    "start": "92759",
    "end": "98790"
  },
  {
    "text": "about 20 percent I checked this morning it's 22 we expect to end the year just shy of 25 percent at this time last year",
    "start": "98790",
    "end": "106229"
  },
  {
    "text": "the global usage was about 13% we're seeing a lot of the movement coming from Europe and from parts of Asia and it it",
    "start": "106229",
    "end": "116009"
  },
  {
    "text": "turns out that mobile and IOT are driving a lot of this demand so here are",
    "start": "116009",
    "end": "123210"
  },
  {
    "start": "118000",
    "end": "118000"
  },
  {
    "text": "the hotspots of usage the top five if you will by volume and there's some",
    "start": "123210",
    "end": "128459"
  },
  {
    "text": "dramatic movement in this list just from last year so at this time last year",
    "start": "128459",
    "end": "133890"
  },
  {
    "text": "t-mobile was showing 72% of their infrastructure using ipv6 now there are",
    "start": "133890",
    "end": "140910"
  },
  {
    "text": "up 17% to 89 another big mover was ATT last year we saw that at 58% 14%",
    "start": "140910",
    "end": "148940"
  },
  {
    "text": "increased to 72 so there's a lot of movement now year-over-year almost",
    "start": "148940",
    "end": "154470"
  },
  {
    "text": "doubling in terms of ipv6 adoption so now we'll talk about the protocol again",
    "start": "154470",
    "end": "161190"
  },
  {
    "text": "what I'd like you to come away from in this session is the basics and understanding of how it works and if",
    "start": "161190",
    "end": "166950"
  },
  {
    "text": "kind of very fundamental level we're not going to get into all the edge use cases and that type of thing but hopefully",
    "start": "166950",
    "end": "172200"
  },
  {
    "text": "this will give you the information that you need to feel comfortable using the protocol and having conversations about it so I think most people know that ipv4",
    "start": "172200",
    "end": "181470"
  },
  {
    "start": "178000",
    "end": "178000"
  },
  {
    "text": "is a 32-bit address space so again that gives you about 4.3 billion addresses I",
    "start": "181470",
    "end": "187620"
  },
  {
    "text": "did you the courtesy of putting some binary up there it's very exciting this",
    "start": "187620",
    "end": "192989"
  },
  {
    "text": "is the ipv6 address space 128 bits I think most people know that it's about",
    "start": "192989",
    "end": "198780"
  },
  {
    "text": "29 orders of magnitude larger so the bit space is four times as large but in",
    "start": "198780",
    "end": "204000"
  },
  {
    "text": "terms of the available address space for its exponential twenty nine orders of magnitude larger and everybody has to",
    "start": "204000",
    "end": "210780"
  },
  {
    "text": "put up there how big is ipv6 slide so I'm putting one up too so if you take a",
    "start": "210780",
    "end": "217170"
  },
  {
    "text": "typical ipv4 subnetting slash 24 you put a bunch of pixels on a 300 PPI screen",
    "start": "217170",
    "end": "222810"
  },
  {
    "text": "and say each pixel is an ipv4 address this is roughly how big your ipv4 screen",
    "start": "222810",
    "end": "228030"
  },
  {
    "text": "would look in ipv6 we go from inches to hundreds of miles right so this is a",
    "start": "228030",
    "end": "234450"
  },
  {
    "text": "much larger address space okay that requirement has now been checked we",
    "start": "234450",
    "end": "239640"
  },
  {
    "text": "talked about how big it is let's talk about address format ipv4 dotted decimal",
    "start": "239640",
    "end": "245370"
  },
  {
    "start": "241000",
    "end": "241000"
  },
  {
    "text": "notation right we have octets between each of them so 8 bits represented by each of the four we use these days Sider",
    "start": "245370",
    "end": "252660"
  },
  {
    "text": "notation slash 24 tells you the first 24 bits are fixed so on the left side I have let's say a routable address a",
    "start": "252660",
    "end": "259260"
  },
  {
    "text": "global unique address and on the right side I have a loopback address right everybody knows loopback 127 0 0 1",
    "start": "259260",
    "end": "267020"
  },
  {
    "text": "in ipv6 we use colon separated hextech format super easy to say colon separated",
    "start": "267020",
    "end": "274140"
  },
  {
    "text": "hex tat format duets or two quartets are four octet saw rate hex tats are 16 so",
    "start": "274140",
    "end": "281400"
  },
  {
    "text": "we have 16 bits represented in each between each of the colons if you take a",
    "start": "281400",
    "end": "286470"
  },
  {
    "text": "look at the loopback address you'll see that that's a super obnoxious address right that's a lot as yours to put in so",
    "start": "286470",
    "end": "293040"
  },
  {
    "text": "we have two methods to reduce the size of the address in a way that's useful for humans one is that we can take out",
    "start": "293040",
    "end": "300900"
  },
  {
    "text": "any leading zeros right so step one I've taken out leading zeros that's great now",
    "start": "300900",
    "end": "306780"
  },
  {
    "text": "it's important to remember that you can only take out leading zeros otherwise if you're trying to take out random zeros",
    "start": "306780",
    "end": "313050"
  },
  {
    "text": "in each of the hex tats then the address becomes ambiguous so only leading zeros can be removed the next thing that we",
    "start": "313050",
    "end": "318930"
  },
  {
    "text": "can do is a very specific notation of special syntax if you will double colon",
    "start": "318930",
    "end": "325050"
  },
  {
    "text": "so the double colon can represent any single contiguous string of hex debts",
    "start": "325050",
    "end": "331200"
  },
  {
    "text": "with a 0 value so we'll be using this",
    "start": "331200",
    "end": "337950"
  },
  {
    "text": "this compressed format throughout the presentation another thing that most",
    "start": "337950",
    "end": "344640"
  },
  {
    "text": "folks know about ipv6 is that we don't have broadcast addresses anymore so in the ipv4 world we think about the last",
    "start": "344640",
    "end": "350730"
  },
  {
    "text": "address of a subnet we think about the old ones address all 255 s at layer 3",
    "start": "350730",
    "end": "356040"
  },
  {
    "text": "and at layer 2 the all ones address right this is broadcast we use this for things",
    "start": "356040",
    "end": "361890"
  },
  {
    "text": "like ARP and for exchanging other types of data around the infrastructure when we need to get kind of broad view of the",
    "start": "361890",
    "end": "368880"
  },
  {
    "text": "hosts on the infrastructure to get a response in ipv6 we move to multicast FF",
    "start": "368880",
    "end": "374850"
  },
  {
    "text": "0 0 slash 8 is the designated block for multicast addresses and the kind of the",
    "start": "374850",
    "end": "382080"
  },
  {
    "text": "one that you really should know is FF 0 2 colon colon 1 this is the all nodes multicast address I put it up there but",
    "start": "382080",
    "end": "389370"
  },
  {
    "text": "I'm going to read it because I think it's actually interesting strictly speaking an ipv4 this exists 2 to 4 0 0",
    "start": "389370",
    "end": "397290"
  },
  {
    "text": "1 is the all nodes multicast address but in practicality and reality it's not",
    "start": "397290",
    "end": "402460"
  },
  {
    "text": "used in ipv4 instead we want to talk to all nodes we send it out on the broadcast in ipv6 this all notes",
    "start": "402460",
    "end": "410020"
  },
  {
    "text": "multicast address is functionally the same as an ipv4 broadcast address in layer two because we're moving to",
    "start": "410020",
    "end": "416830"
  },
  {
    "text": "multicast there is a reserved range for ipv6 multicast and it's the layer 3 ad",
    "start": "416830",
    "end": "422860"
  },
  {
    "text": "excuse me layer 2 addresses starting with 33 33 ipv6 has a variety of unicast",
    "start": "422860",
    "end": "431920"
  },
  {
    "start": "428000",
    "end": "428000"
  },
  {
    "text": "address types unicast addresses uniquely identify an interface of an ipv6 device",
    "start": "431920",
    "end": "437830"
  },
  {
    "text": "and they're used for one-to-one communication on the infrastructure the",
    "start": "437830",
    "end": "445990"
  },
  {
    "start": "443000",
    "end": "443000"
  },
  {
    "text": "first one that we'll cover is the unspecified address the all zeros address the unspecified address",
    "start": "445990",
    "end": "452800"
  },
  {
    "text": "indicates the absence of an address so why would that be useful well the",
    "start": "452800",
    "end": "457900"
  },
  {
    "text": "primary use case you'll probably see that for is something called duplicate address detection or da D so let me give",
    "start": "457900",
    "end": "464800"
  },
  {
    "text": "you the example I have an infrastructure say this is a subnet I have existing",
    "start": "464800",
    "end": "472510"
  },
  {
    "text": "systems on that subnet and I have a new instance or a new host or new system",
    "start": "472510",
    "end": "478480"
  },
  {
    "text": "that's coming up it has an address that it wants to use but it doesn't know whether it's in use yet so how does it",
    "start": "478480",
    "end": "485830"
  },
  {
    "text": "verify whether or not that address is usable well it's can send a packet out on the",
    "start": "485830",
    "end": "490870"
  },
  {
    "text": "wire from a source address of all zeros the unspecified address to the",
    "start": "490870",
    "end": "498580"
  },
  {
    "text": "destination of the address that it is tentatively planning to use if it gets",
    "start": "498580",
    "end": "503890"
  },
  {
    "text": "no response it knows the address is available and it can use it if it gets response then it knows that there's an",
    "start": "503890",
    "end": "509110"
  },
  {
    "text": "address conflict and some resolution is required on its end to make sure that it doesn't come on to the network and",
    "start": "509110",
    "end": "515110"
  },
  {
    "text": "overlap with another address so the unspecified address is one of the unique a statuses for ipv6 the other one",
    "start": "515110",
    "end": "523510"
  },
  {
    "text": "is loopback right this is the mechanism that's used to talk to oneself if you well it's how the system communicates to",
    "start": "523510",
    "end": "529930"
  },
  {
    "text": "itself we talked about this just a moment ago it's 120 0:01 in ipv4 in ipv6 all zeros and one",
    "start": "529930",
    "end": "540600"
  },
  {
    "text": "well show that uncompressed format as well alright so far so good right this",
    "start": "540600",
    "end": "546310"
  },
  {
    "text": "is fairly straightforward the next set of addresses that we're going to talk",
    "start": "546310",
    "end": "551410"
  },
  {
    "start": "549000",
    "end": "549000"
  },
  {
    "text": "about need to have some type of uniqueness associated with them in ipv6 we call this the interface identifier I",
    "start": "551410",
    "end": "558269"
  },
  {
    "text": "have some information up here I literally quoted rfcs so if you like reading RFC's you'll enjoy this the",
    "start": "558269",
    "end": "567370"
  },
  {
    "text": "interface identifier turns out to be a really important value in how you drive it also turns out to be very important",
    "start": "567370",
    "end": "573339"
  },
  {
    "text": "as well both in terms of your ability to just get on to the network and make requests across the network for things",
    "start": "573339",
    "end": "579430"
  },
  {
    "text": "like configuring yourself it's also important because it has some significant security and privacy",
    "start": "579430",
    "end": "584800"
  },
  {
    "text": "implications so interface identifier so I'll talk about throughout because they're very important ipv6 addresses in",
    "start": "584800",
    "end": "593319"
  },
  {
    "text": "general consists of a prefix and an interface identifier the interface identifier for unicast addresses is 64",
    "start": "593319",
    "end": "599500"
  },
  {
    "text": "bits so I've got 64 bits of prefix and I've got 64 bits of address identifiers together I have 128 bits that I uniquely",
    "start": "599500",
    "end": "607120"
  },
  {
    "text": "identify an interface or a system that's on the ipv6 infrastructure so let's talk",
    "start": "607120",
    "end": "614920"
  },
  {
    "start": "613000",
    "end": "613000"
  },
  {
    "text": "about the first of these link-local addresses link-local addresses have a scope of a link that's the only scope in",
    "start": "614920",
    "end": "622569"
  },
  {
    "text": "which they are usable so if a router gets a link-local address it's not going to Ford it anywhere it's gonna throw it",
    "start": "622569",
    "end": "628000"
  },
  {
    "text": "away link local addresses are only usable on the local link in the ipv4 world it's",
    "start": "628000",
    "end": "635980"
  },
  {
    "text": "the 169 to 50 4/16 block you may know this IP address if you do much with ec2",
    "start": "635980",
    "end": "643509"
  },
  {
    "text": "this is the metadata service address interestingly in ipv4 if you have this",
    "start": "643509",
    "end": "650740"
  },
  {
    "text": "address on an interface the RFC say that when you get a routable address RFC 19",
    "start": "650740",
    "end": "657879"
  },
  {
    "text": "right a 10 dot or 192 or if you get a globally routable address you should drop this forget about it and use the",
    "start": "657879",
    "end": "664750"
  },
  {
    "text": "other address right so typically the link-local address is an ephemeral address in ipv6 it's a",
    "start": "664750",
    "end": "673270"
  },
  {
    "text": "required address in fact every system will have this link local address it may",
    "start": "673270",
    "end": "679180"
  },
  {
    "text": "have other addresses as well and we'll talk about that the block for link local is Fe 80 / 10 and this is what a typical",
    "start": "679180",
    "end": "688060"
  },
  {
    "text": "link local address will look like in ipv6 I'll explain in a moment how I came",
    "start": "688060",
    "end": "694300"
  },
  {
    "text": "to that address so typical prefix is Fe",
    "start": "694300",
    "end": "700450"
  },
  {
    "start": "697000",
    "end": "697000"
  },
  {
    "text": "80/60 4 so although Fe 80 / 10 is the reserved block there are obviously bits there that you could play with the",
    "start": "700450",
    "end": "707260"
  },
  {
    "text": "majority of implementations just use Fe 80/60 4 has the prefix portion of an",
    "start": "707260",
    "end": "713230"
  },
  {
    "text": "address now we have the question how do we get to the address excuse me the interface identifier there are a couple",
    "start": "713230",
    "end": "721090"
  },
  {
    "text": "of approaches we could do this manually that turns out not to be a lot of fun you can do this systematically using",
    "start": "721090",
    "end": "728530"
  },
  {
    "text": "something called a modified eui-64 format and we'll talk about that in a moment",
    "start": "728530",
    "end": "733860"
  },
  {
    "text": "you can also have this derived randomly but because link local addresses are so",
    "start": "733860",
    "end": "740800"
  },
  {
    "text": "important to the operation of ipv6 duplicate address detection using that",
    "start": "740800",
    "end": "745870"
  },
  {
    "text": "unspecified address is almost always used so let's talk about modified eui-64",
    "start": "745870",
    "end": "754770"
  },
  {
    "start": "750000",
    "end": "750000"
  },
  {
    "text": "so I have my link local address prefix Fe 80/60 4 I have a MAC address on that",
    "start": "754770",
    "end": "763290"
  },
  {
    "text": "Nick write my layer 2 MAC address so then the question becomes how do I go",
    "start": "763290",
    "end": "768880"
  },
  {
    "text": "from a 48-bit MAC to a 64-bit interface identifier it's a two-step process",
    "start": "768880",
    "end": "775170"
  },
  {
    "text": "step 1 flip the 7th most significant bit there's a long story as to why this is",
    "start": "775170",
    "end": "781690"
  },
  {
    "text": "done the most current RFC say essentially don't worry about it just do it so here is our I'm kind of expanding",
    "start": "781690",
    "end": "790839"
  },
  {
    "text": "out the the first set of bits here there's our seventh most significant bit we flipped that to a zero and now",
    "start": "790839",
    "end": "796930"
  },
  {
    "text": "instead of 0 2 we have 0 0 so there's my MAC address still 48 bits",
    "start": "796930",
    "end": "802150"
  },
  {
    "text": "so somehow I need to add some additional bit magic in the middle so what I'll do",
    "start": "802150",
    "end": "807370"
  },
  {
    "text": "is I'll insert fffe into the MAC address between the first 24 bits which is the",
    "start": "807370",
    "end": "813610"
  },
  {
    "text": "organizational unique identifier and the last 24 bit which is the device identifier and now with a little bit of",
    "start": "813610",
    "end": "820810"
  },
  {
    "text": "bit stuffing I have 64 bits as an interface identifier so take my link",
    "start": "820810",
    "end": "828250"
  },
  {
    "text": "local address prefix take my interface identifier and now I have my link local address the next type of unicast address",
    "start": "828250",
    "end": "841180"
  },
  {
    "start": "837000",
    "end": "837000"
  },
  {
    "text": "is a unique local address I will hold my opinion on it but it will be very clear",
    "start": "841180",
    "end": "846970"
  },
  {
    "text": "just by the fact I'm saying I'm going to hold my opinion on it in the ipv4 world the way to think about",
    "start": "846970",
    "end": "852910"
  },
  {
    "text": "this is RFC 1918 right you're familiar with 10 dots familiar with 192 168 the",
    "start": "852910",
    "end": "861850"
  },
  {
    "text": "unique local address the ula is conceptually similar but it has a couple of differences that are material one is",
    "start": "861850",
    "end": "869740"
  },
  {
    "text": "that you LA's are designed to be globally unique right so today I'm sure",
    "start": "869740",
    "end": "876790"
  },
  {
    "text": "everybody's experienced the ten dot overlap problem double net and all kinds of horrible things the unique local",
    "start": "876790",
    "end": "884320"
  },
  {
    "text": "address which is also sometimes called the local ipv6 address is designed to be",
    "start": "884320",
    "end": "890530"
  },
  {
    "text": "globally unique at least with a high degree of probability it's in the fc0",
    "start": "890530",
    "end": "897030"
  },
  {
    "text": "0/7 block as a practical matter it's FD",
    "start": "897030",
    "end": "902050"
  },
  {
    "text": "zeros 0/8 the first bit currently is being reserved this is what those",
    "start": "902050",
    "end": "908230"
  },
  {
    "text": "addresses look like they're the RFC that defines ula describes a mechanism for",
    "start": "908230",
    "end": "916600"
  },
  {
    "text": "calculating a pseudo-random value for what they call a global ID that you put",
    "start": "916600",
    "end": "921820"
  },
  {
    "text": "into the part of the prefix so there are 40 bits for this global ID so the",
    "start": "921820",
    "end": "928240"
  },
  {
    "text": "likelihood that you're going to have to organizations that connect to each other that you use ula and an overlap is very slim keep in mind",
    "start": "928240",
    "end": "935510"
  },
  {
    "text": "that 40 bits is 8 bits longer than the current bit allocation for ipv4 right so",
    "start": "935510",
    "end": "940790"
  },
  {
    "text": "of high degree of likelihood that there will not be overlap so I'm not going to talk about how address IP addresses are",
    "start": "940790",
    "end": "947450"
  },
  {
    "text": "allocated for ula I'm not a family all right global unicast addresses this is",
    "start": "947450",
    "end": "955430"
  },
  {
    "start": "951000",
    "end": "951000"
  },
  {
    "text": "how people talk to one another over the ipv6 internet the way that this",
    "start": "955430",
    "end": "960770"
  },
  {
    "text": "typically works in the world today is you have your ipv4 addresses you go through a NAT and you go to something on",
    "start": "960770",
    "end": "966470"
  },
  {
    "text": "the internet and the ipv6 world in the majority of cases certainly the",
    "start": "966470",
    "end": "972110"
  },
  {
    "text": "desirable approach is that everybody has a globally unique address right",
    "start": "972110",
    "end": "977390"
  },
  {
    "text": "everybody uses these global unicast addresses and they communicate end-to-end known at the IP address is",
    "start": "977390",
    "end": "986210"
  },
  {
    "text": "obviously global and the prefix is allocated by the regional internet registries AWS has very large blocks so",
    "start": "986210",
    "end": "995960"
  },
  {
    "text": "we have 128-bit range AWS has slash 23 Zin slash 22 s that have been allocated",
    "start": "995960",
    "end": "1000970"
  },
  {
    "text": "so we have very large address space available to share with you so let's",
    "start": "1000970",
    "end": "1006520"
  },
  {
    "start": "1005000",
    "end": "1005000"
  },
  {
    "text": "talk about address assignment for global unicast addresses so we could do this",
    "start": "1006520",
    "end": "1013090"
  },
  {
    "text": "manually again comes a little bit of a hassle if you have any number of systems you can do this in a systematic way",
    "start": "1013090",
    "end": "1019120"
  },
  {
    "text": "using something called router advertisements router advertisements are type of icmpv6 packet and the router",
    "start": "1019120",
    "end": "1027189"
  },
  {
    "text": "advertisement is sent to the all nodes multicast address it has a flag called",
    "start": "1027190",
    "end": "1032740"
  },
  {
    "text": "the managed address flag and when that is set to 0 it tells the receiving instance or the receiving system that it",
    "start": "1032740",
    "end": "1040120"
  },
  {
    "text": "should use something called stateless address auto-configuration slack in that",
    "start": "1040120",
    "end": "1045490"
  },
  {
    "text": "router advertisement there's information about the prefix in the prefix length there's information about the default",
    "start": "1045490",
    "end": "1050860"
  },
  {
    "text": "gateway and then the instance can use a mechanism it might be modified eui-64 to",
    "start": "1050860",
    "end": "1060430"
  },
  {
    "text": "calculate its interface identifier add that to the prefix and it has established its IP address",
    "start": "1060430",
    "end": "1066350"
  },
  {
    "text": "it's global unicast address now modify eui-64 is possible and in fact it was a",
    "start": "1066350",
    "end": "1073309"
  },
  {
    "text": "popular way to address global unicast addresses but it's fallen out of favor for a number of reasons that having to",
    "start": "1073309",
    "end": "1079610"
  },
  {
    "text": "do with security and privacy so imagine for a moment that you had an address",
    "start": "1079610",
    "end": "1085160"
  },
  {
    "text": "that we're using on you were using on the internet that never changed moreover",
    "start": "1085160",
    "end": "1090830"
  },
  {
    "text": "because it was a modified eui-64 it told some semantic information about you like",
    "start": "1090830",
    "end": "1096860"
  },
  {
    "text": "what kind of interface you're using is this a Cisco device that you're using this on is added univer is it Dell",
    "start": "1096860",
    "end": "1103010"
  },
  {
    "text": "computer right that MAC address has some material in it that's actually quite useful so for reasons that have to do",
    "start": "1103010",
    "end": "1109700"
  },
  {
    "text": "with traffic correlation and location tracking and device specific vulnerability targeting it's fallen out",
    "start": "1109700",
    "end": "1116450"
  },
  {
    "text": "of favor as the mechanism for configuring global unicast addresses I've listed two RFC's if you're curious",
    "start": "1116450",
    "end": "1122120"
  },
  {
    "text": "about the current recommended mode of addressing or the security and privacy implications of using something like",
    "start": "1122120",
    "end": "1128409"
  },
  {
    "text": "modified eui-64 for global unicast addresses those two RFC's will give you a lot of data now if that router",
    "start": "1128409",
    "end": "1137840"
  },
  {
    "text": "advertisement has that managed flag set to one then you're going to use DHCP",
    "start": "1137840",
    "end": "1142960"
  },
  {
    "text": "dhcpv6 I will not get into detail on here but I will tell you that it is materially different from DHCP and v4",
    "start": "1142960",
    "end": "1149990"
  },
  {
    "text": "has the same generic outcome but the implementation is materially different",
    "start": "1149990",
    "end": "1155710"
  },
  {
    "text": "and of course you can also go for random address assignment and duplicate address",
    "start": "1155710",
    "end": "1161600"
  },
  {
    "text": "detection is typically used again to make sure you're not stepping on a neighbor all right so we've talked about",
    "start": "1161600",
    "end": "1168049"
  },
  {
    "start": "1165000",
    "end": "1165000"
  },
  {
    "text": "address assignments now how do two nodes talk to one another right and before we know this right it's an ipv4 ARP I check",
    "start": "1168049",
    "end": "1174980"
  },
  {
    "text": "my local ARP cache I send out an ARP request on the wire hey this is my source l2 address I send it out to the",
    "start": "1174980",
    "end": "1180799"
  },
  {
    "text": "broadcast I'm looking for 1000 two 1000",
    "start": "1180799",
    "end": "1186530"
  },
  {
    "text": "two replies here's my source address 1000 one you can now reach me right",
    "start": "1186530",
    "end": "1193370"
  },
  {
    "text": "here's where to find me at layer two in ipv6 we use something called neighbor discovery protocol",
    "start": "1193370",
    "end": "1200000"
  },
  {
    "text": "but before we talk about how that works we need to go back to the issue of not having broadcast ipv6 uses something",
    "start": "1200000",
    "end": "1207680"
  },
  {
    "start": "1205000",
    "end": "1205000"
  },
  {
    "text": "called solicited node multicast the point of solicited node multicast is to",
    "start": "1207680",
    "end": "1212870"
  },
  {
    "text": "say if I am for example trying to find out the L to address the layer to",
    "start": "1212870",
    "end": "1218150"
  },
  {
    "text": "address for an interface on the wire why should I have everybody on the wire have",
    "start": "1218150",
    "end": "1224240"
  },
  {
    "text": "to hear that announcement how about instead I target that announcement to",
    "start": "1224240",
    "end": "1229550"
  },
  {
    "text": "specific interfaces that are likely to have the ipv6 address at layer 3 that",
    "start": "1229550",
    "end": "1236540"
  },
  {
    "text": "I'm looking for so we used something called solicited node multicast address and you'll see in a moment how that works so solicited node multicast",
    "start": "1236540",
    "end": "1244670"
  },
  {
    "text": "address has a prefix FF 0 to colon colon 1 FF / 104 if I have an ipv6 node",
    "start": "1244670",
    "end": "1254330"
  },
  {
    "text": "address that I'm trying to find let's say using neighbor discovery I'm going",
    "start": "1254330",
    "end": "1259460"
  },
  {
    "text": "to send to that nodes solicited node multicast address how do I derive that",
    "start": "1259460",
    "end": "1264560"
  },
  {
    "text": "step 1 take the least significant 24 bits of the node address and add it to",
    "start": "1264560",
    "end": "1271820"
  },
  {
    "text": "the solicit node multicast prefix that is the solicited node multicast address",
    "start": "1271820",
    "end": "1277580"
  },
  {
    "text": "for that ipv6 node that also means that any other ipv6 know that ends in 0 0 ec2",
    "start": "1277580",
    "end": "1284420"
  },
  {
    "text": "2 has the same solicited no multicast address but that's still not the entire",
    "start": "1284420",
    "end": "1290060"
  },
  {
    "text": "infrastructure in fact even infrastructures that are pretty large this is likely only to have one or two",
    "start": "1290060",
    "end": "1295070"
  },
  {
    "text": "subscribers and layer 2 what happens well we said earlier that we have this 3",
    "start": "1295070",
    "end": "1301370"
  },
  {
    "text": "3 3 3 prefix for multicast in ipv6 and I",
    "start": "1301370",
    "end": "1307280"
  },
  {
    "text": "can use that for solicited node multicast at layer 2 so now I'm going to",
    "start": "1307280",
    "end": "1312650"
  },
  {
    "text": "take the least significant 32 bits of that layer 3 solicited a node multicast",
    "start": "1312650",
    "end": "1319130"
  },
  {
    "text": "address put it on the Ethernet prefix and that is my layer 2 address so this",
    "start": "1319130",
    "end": "1328070"
  },
  {
    "text": "node subscribes to this layer 3 solicited note multicam a dress and that layer too Ethernet",
    "start": "1328070",
    "end": "1336679"
  },
  {
    "text": "we'll send it out to this address all right so putting it together check your local neighbor cache send the",
    "start": "1336679",
    "end": "1345019"
  },
  {
    "start": "1340000",
    "end": "1340000"
  },
  {
    "text": "neighbor solicitation right where are you layer to source is ec2 one the",
    "start": "1345019",
    "end": "1350870"
  },
  {
    "text": "destination is the layer two solicited node multicast address layer three",
    "start": "1350870",
    "end": "1356299"
  },
  {
    "text": "source is the ec2 ones address layer three destination is the layer three",
    "start": "1356299",
    "end": "1361340"
  },
  {
    "text": "solicited node multicast address the payload contains the IP address I'm actually looking for since there are",
    "start": "1361340",
    "end": "1366860"
  },
  {
    "text": "multiple people that could be subscribed to that same solicited and multicast address similarly we have the neighbor",
    "start": "1366860",
    "end": "1373429"
  },
  {
    "text": "advertisement back providing the details about its layer 2 and layer 3 information all right so now there's a",
    "start": "1373429",
    "end": "1382190"
  },
  {
    "start": "1380000",
    "end": "1380000"
  },
  {
    "text": "question how do I get to ipv6 resources and the answer to that totally depends on what your configuration is and what",
    "start": "1382190",
    "end": "1388279"
  },
  {
    "text": "the configuration is of the entity on the other end of your request in an ipv4",
    "start": "1388279",
    "end": "1394129"
  },
  {
    "text": "only world we know this right send a request to DNS a record gets a response",
    "start": "1394129",
    "end": "1400070"
  },
  {
    "text": "with an IP address send my traffic that's straightforward if you want to",
    "start": "1400070",
    "end": "1406369"
  },
  {
    "text": "enable ipv6 you can just add an ipv6 address to your server this is a dual",
    "start": "1406369",
    "end": "1412639"
  },
  {
    "text": "stack configuration so here's my ipv4 address my global unicast address for",
    "start": "1412639",
    "end": "1417919"
  },
  {
    "text": "ipv6 and I'll just note here that we also have a link local address because",
    "start": "1417919",
    "end": "1423830"
  },
  {
    "text": "it's required if you take a look you'll see that this is a modified eui-64 format so that 0 8 becomes 0 a when I",
    "start": "1423830",
    "end": "1431690"
  },
  {
    "text": "flipped that 7th bit and you can see between the 27 and the EDI added fffe right so there's my link local address",
    "start": "1431690",
    "end": "1439119"
  },
  {
    "text": "so now I have a dual stack configuration the end user is still only v4 enabled so",
    "start": "1439119",
    "end": "1447409"
  },
  {
    "text": "they go through their typical approach but what happens when both sides are",
    "start": "1447409",
    "end": "1452990"
  },
  {
    "start": "1451000",
    "end": "1451000"
  },
  {
    "text": "ipv6 enabled they both have for example dual stack configuration well DNS",
    "start": "1452990",
    "end": "1459409"
  },
  {
    "text": "request is made I feel obligated to note if anybody knows DNS humor this is",
    "start": "1459409",
    "end": "1466220"
  },
  {
    "text": "against right so in a record represents a 32-bit address and a quad a record represents a four times 32 128-bit",
    "start": "1466220",
    "end": "1474530"
  },
  {
    "text": "address so the DNS folks really had a jolly day coming up with that I'm sure so you have your quad a record fried B",
    "start": "1474530",
    "end": "1480470"
  },
  {
    "text": "v6 addresses and now the question is which path is going to be taken ipv6 or",
    "start": "1480470",
    "end": "1487370"
  },
  {
    "text": "ipv4 the answer is totally depends on",
    "start": "1487370",
    "end": "1492770"
  },
  {
    "text": "the requester they get the say the reality is these days",
    "start": "1492770",
    "end": "1498620"
  },
  {
    "text": "the typical default choice will be ipv6 type ev6 when it's available if you want",
    "start": "1498620",
    "end": "1503960"
  },
  {
    "text": "more information you should read RFC 3484 which goes into gruesome detail",
    "start": "1503960",
    "end": "1510020"
  },
  {
    "text": "about recommended address selection processes it's fantastic reading some",
    "start": "1510020",
    "end": "1518480"
  },
  {
    "start": "1516000",
    "end": "1516000"
  },
  {
    "text": "other notable differences so end-to-end ipv6 is really about end-to-end connectivity using global unicast",
    "start": "1518480",
    "end": "1525110"
  },
  {
    "text": "addresses it's a big deal it's part of the reason I'm not such a fan of ula so why do we have net we have NAT because",
    "start": "1525110",
    "end": "1531409"
  },
  {
    "text": "we've ran out of ipv4 addresses we were trying to conserve them but it has a lot of cons right address overlap conflicts",
    "start": "1531409",
    "end": "1539059"
  },
  {
    "text": "split horizon DNS all kinds of trickery that we've done with applications think",
    "start": "1539059",
    "end": "1544280"
  },
  {
    "text": "about like natural versal for IPSec right we've done all kinds of like unnatural things with protocols to work",
    "start": "1544280",
    "end": "1550250"
  },
  {
    "text": "around NAT so some things that you should know just because you have a",
    "start": "1550250",
    "end": "1556309"
  },
  {
    "text": "global unicast address does not mean that you've lost security and it does not mean that you've lost your ability",
    "start": "1556309",
    "end": "1563270"
  },
  {
    "text": "to protect your instances public address does not mean it is reachable and in fact we have several customers that",
    "start": "1563270",
    "end": "1569179"
  },
  {
    "text": "cover public sector customers we have several public sector customers that have slash eighths in the ipv4 world and",
    "start": "1569179",
    "end": "1574760"
  },
  {
    "text": "they use them internally they're not available on the internet right so public address doesn't mean it's necessarily reachable another important",
    "start": "1574760",
    "end": "1582110"
  },
  {
    "text": "note path MTU discovery is essentially required so intermediary nodes are not allowed to fragment packets the maximum",
    "start": "1582110",
    "end": "1589970"
  },
  {
    "text": "payload of a single packet is way bigger so we moved to about 4 gig for a maximum",
    "start": "1589970",
    "end": "1597559"
  },
  {
    "text": "payload of an ipv6 packet much much bigger the way that we do that is using an extension",
    "start": "1597559",
    "end": "1603830"
  },
  {
    "text": "header for jumbo grams so there is a main ipv6 header and then you can chain",
    "start": "1603830",
    "end": "1609170"
  },
  {
    "text": "on these extension headers to communicate hop-by-hop information or things as I mentioned like jumbo grams",
    "start": "1609170",
    "end": "1615790"
  },
  {
    "text": "all right so we've talked so far about the protocol hopefully you now have a pretty",
    "start": "1615790",
    "end": "1621890"
  },
  {
    "text": "decent grasp of how it kind of operates you feel comfortable with it so I'm",
    "start": "1621890",
    "end": "1627440"
  },
  {
    "text": "going to spend the rest of the time talking about ipv6 at AWS so I'm gonna",
    "start": "1627440",
    "end": "1632600"
  },
  {
    "text": "cover what surfaces are supported and what you need to do to enable them the",
    "start": "1632600",
    "end": "1638540"
  },
  {
    "text": "first service that was ipv6 enabled and AWS was the IOT service again I mentioned earlier that the kind of",
    "start": "1638540",
    "end": "1644710"
  },
  {
    "text": "exponential growth of ipv6 has really been driven by mobile and IOT so",
    "start": "1644710",
    "end": "1649790"
  },
  {
    "text": "December 2015 we started our ipv6 march if you use the AWS IOT service your data",
    "start": "1649790",
    "end": "1657470"
  },
  {
    "text": "plane endpoint right this is where your IOT device communicates to that has a v4",
    "start": "1657470",
    "end": "1662510"
  },
  {
    "text": "and v6 address you don't have to do anything you have it the control plane how you communicate to our",
    "start": "1662510",
    "end": "1668240"
  },
  {
    "text": "infrastructure to make changes in the AWS IOT service that's ipv4 only today",
    "start": "1668240",
    "end": "1674860"
  },
  {
    "text": "Amazon s3 also supports ipv6 and there's",
    "start": "1675970",
    "end": "1682190"
  },
  {
    "text": "nothing that you have to do other then add the word dual stack to your fully",
    "start": "1682190",
    "end": "1687500"
  },
  {
    "text": "qualified domain name so you can see here in my case lock me dot s3 dual",
    "start": "1687500",
    "end": "1692690"
  },
  {
    "text": "stack that's all you have to do and you get an ipv6 address now I'm about to",
    "start": "1692690",
    "end": "1699170"
  },
  {
    "text": "make a plug for one of our services on the next slide so you'll see in purple I've kind of outlined this file transfer",
    "start": "1699170",
    "end": "1706550"
  },
  {
    "text": "is taking 32 seconds another service we have that supports ipv6 is s3 transfer",
    "start": "1706550",
    "end": "1712250"
  },
  {
    "start": "1711000",
    "end": "1711000"
  },
  {
    "text": "acceleration also nothing for you to do except add the word dual stack to your",
    "start": "1712250",
    "end": "1717440"
  },
  {
    "text": "fqdn so in this case it's Halak ps3 - accelerated dual stack and you'll note",
    "start": "1717440",
    "end": "1724460"
  },
  {
    "text": "by the way the transfer time on this one is about 8 seconds if I recall yep 8 seconds",
    "start": "1724460",
    "end": "1730270"
  },
  {
    "start": "1730000",
    "end": "1730000"
  },
  {
    "text": "cloud front supports ipv6 as well it's a checkbox in the distribution if",
    "start": "1730620",
    "end": "1736200"
  },
  {
    "text": "you've created a distribution after October of 2016 this is on by default",
    "start": "1736200",
    "end": "1742550"
  },
  {
    "text": "right so a couple of things to know about cloud front and ipv6 first if",
    "start": "1742550",
    "end": "1747990"
  },
  {
    "text": "you're using URLs or sign cookies to restrict access to your content and if",
    "start": "1747990",
    "end": "1753360"
  },
  {
    "text": "you're using custom policy that includes IP address as a parameter for restricting access read our",
    "start": "1753360",
    "end": "1759540"
  },
  {
    "text": "documentation before you enable ipv6 there are considerations that I'm not going to cover here that you should be aware of but it's otherwise it's a",
    "start": "1759540",
    "end": "1767010"
  },
  {
    "text": "checkbox there's a dns resolution no issues this is I'm actually using cloud",
    "start": "1767010",
    "end": "1775800"
  },
  {
    "text": "front here to connect to a web server that I've launched an ec2 ec2 is an origin for this CloudFront distribution",
    "start": "1775800",
    "end": "1781679"
  },
  {
    "text": "and all it's doing is providing back the client address and the exported for so",
    "start": "1781679",
    "end": "1786750"
  },
  {
    "text": "you can see I have an exported for address of that's an ipv6 address cloud",
    "start": "1786750",
    "end": "1792480"
  },
  {
    "text": "front uses ipv4 when it communicates to an origin so your users can access cloud",
    "start": "1792480",
    "end": "1799290"
  },
  {
    "text": "front over ipv6 cloud front will communicate to the origin over ipv4 which makes for a great transition story",
    "start": "1799290",
    "end": "1805830"
  },
  {
    "text": "we'll talk about how that's happened even at AWS in the recent weeks API gateway API",
    "start": "1805830",
    "end": "1815280"
  },
  {
    "start": "1812000",
    "end": "1812000"
  },
  {
    "text": "gateway is now ipv6 enabled a few weeks ago API gateway announced the ability to",
    "start": "1815280",
    "end": "1821670"
  },
  {
    "text": "create what they call a regional endpoint before API gateway was only available through cloud front and they",
    "start": "1821670",
    "end": "1827429"
  },
  {
    "text": "controlled the distribution now if you create a regional endpoint you can put your own custom cloud front distribution",
    "start": "1827429",
    "end": "1834630"
  },
  {
    "text": "in front of that origin and you can enable ipv6 so it's now possible for you",
    "start": "1834630",
    "end": "1839790"
  },
  {
    "text": "to to use API gateway with ipv6 creating a custom origin AWS swath supports ipv6",
    "start": "1839790",
    "end": "1848400"
  },
  {
    "text": "it has since launched I've created a blacklist here just to block an IP",
    "start": "1848400",
    "end": "1854130"
  },
  {
    "text": "address it's the one that I was using as I was putting the slides together and as you would expect it sees an ipv6 address",
    "start": "1854130",
    "end": "1859920"
  },
  {
    "text": "and the request is denied so while supports ipv6 as well route 53 has supported quad-a",
    "start": "1859920",
    "end": "1868140"
  },
  {
    "start": "1864000",
    "end": "1864000"
  },
  {
    "text": "records if you will the returning of an ipv4 address for quite some time but",
    "start": "1868140",
    "end": "1873240"
  },
  {
    "text": "until about a year ago route 53 did not support queries over ipv6 so for about a",
    "start": "1873240",
    "end": "1881730"
  },
  {
    "text": "year now we're up around 53 has supported the ability to respond to queries over ipv6 and you can see a",
    "start": "1881730",
    "end": "1887910"
  },
  {
    "text": "resolution there and then last year at reinvent we announced ipv6 for VP C so",
    "start": "1887910",
    "end": "1896610"
  },
  {
    "text": "I'm gonna take a little bit to talk about what this is how we've implemented in some of the decisions we made in Y so",
    "start": "1896610",
    "end": "1904380"
  },
  {
    "start": "1903000",
    "end": "1903000"
  },
  {
    "text": "we have a couple of tenants that we use when we started to work through how are we going to enable VP see it's a very core technology for most of our",
    "start": "1904380",
    "end": "1910320"
  },
  {
    "text": "customers hiragana ipv6 enable V PC so the tenants are essentially deliver",
    "start": "1910320",
    "end": "1916320"
  },
  {
    "text": "intend connectivity make it simple and secure and so I want to call your",
    "start": "1916320",
    "end": "1921930"
  },
  {
    "text": "attention to the last bullet here minimize assumptions about customer intent this turns out to be really",
    "start": "1921930",
    "end": "1928080"
  },
  {
    "text": "important from a security perspective I mentioned to you earlier that generally",
    "start": "1928080",
    "end": "1933540"
  },
  {
    "text": "if ipv6 is available on both ends of a connection it will be preferred because",
    "start": "1933540",
    "end": "1939750"
  },
  {
    "text": "V PC is a dual stack infrastructure you can imagine suddenly communications",
    "start": "1939750",
    "end": "1944880"
  },
  {
    "text": "occurring in your infrastructure that you didn't anticipate because now two nodes have ipv6 addresses so minimizing",
    "start": "1944880",
    "end": "1951770"
  },
  {
    "text": "assumptions about customer intent was really important to the design so a couple of decisions first was how are we",
    "start": "1951770",
    "end": "1958380"
  },
  {
    "start": "1956000",
    "end": "1956000"
  },
  {
    "text": "going to deal with addresses ula you know I'm a big fan no we don't support it so we don't support network prefix",
    "start": "1958380",
    "end": "1965250"
  },
  {
    "text": "translation we don't support network address translation it fails the antenna connectivity promise of ipv6 I mentioned",
    "start": "1965250",
    "end": "1974280"
  },
  {
    "text": "earlier that privacy and security are not the same thing but customers are really concerned about I have a public",
    "start": "1974280",
    "end": "1980760"
  },
  {
    "text": "ipv6 address who can get to my node while it's possible to protect your infrastructure with security groups we",
    "start": "1980760",
    "end": "1987600"
  },
  {
    "text": "introduced a concept called an egress only internet gateway and I'll talk about that in a bed",
    "start": "1987600",
    "end": "1994790"
  },
  {
    "text": "global unicast address whose address well it's our address when you associate",
    "start": "1996539",
    "end": "2002640"
  },
  {
    "text": "an ipv6 address to your VP C we give you a fixed slash 56 ipv6 block as you",
    "start": "2002640",
    "end": "2009779"
  },
  {
    "text": "create subnets the subnets are of a fixed / 64 size given the first part of",
    "start": "2009779",
    "end": "2015720"
  },
  {
    "text": "the presentation it should be clear why that's your prefix and the interface identifier for your instances fills in",
    "start": "2015720",
    "end": "2021120"
  },
  {
    "text": "the last 64 bits now there are privacy extensions that are used in ipv6 also",
    "start": "2021120",
    "end": "2029730"
  },
  {
    "text": "called temporary addresses so that folks that are using the ipv6 internet to",
    "start": "2029730",
    "end": "2034860"
  },
  {
    "text": "avoid some of these concerns that I described earlier about being tracked and so on they'll have a stable ipv6",
    "start": "2034860",
    "end": "2040200"
  },
  {
    "text": "address which can be used for incoming traffic but they have a temporary or a ephemeral ipv6 address that's used for",
    "start": "2040200",
    "end": "2046679"
  },
  {
    "text": "traffic originating out right so you can imagine going to a website and then every so often the address that you're",
    "start": "2046679",
    "end": "2052020"
  },
  {
    "text": "using to connect to these websites is changing but you have a stable address for things that are coming towards you",
    "start": "2052020",
    "end": "2057089"
  },
  {
    "text": "let's say you're a server because the primary use case in V PC is customers",
    "start": "2057089",
    "end": "2062908"
  },
  {
    "text": "that have instances where they want folks to come and consume we don't",
    "start": "2062909",
    "end": "2068490"
  },
  {
    "text": "support privacy addresses or temporary addresses because the use case really isn't quite material on AWS if you have",
    "start": "2068490",
    "end": "2074128"
  },
  {
    "text": "a use case that would benefit from it I would love to hear about that afterwards so addresses global unicast and",
    "start": "2074129",
    "end": "2082500"
  },
  {
    "text": "obviously link local now there's question about how we deal with assignment I mentioned to you some of",
    "start": "2082500",
    "end": "2088050"
  },
  {
    "start": "2085000",
    "end": "2085000"
  },
  {
    "text": "the considerations with the assignment well you can do manual address configuration in AWS for ipv6 it's not",
    "start": "2088050",
    "end": "2096330"
  },
  {
    "text": "recommended certainly if you're doing auto scaling it becomes a big problem we",
    "start": "2096330",
    "end": "2103050"
  },
  {
    "text": "also investigated whether we should use stateless address auto-configuration slack but it turns out that that",
    "start": "2103050",
    "end": "2109530"
  },
  {
    "text": "actually doesn't work well in R and V PC in the way that we think about delivering cloud services right we're at",
    "start": "2109530",
    "end": "2116280"
  },
  {
    "text": "a P I driven slack is host or instance driven so in order for us to maintain",
    "start": "2116280",
    "end": "2122670"
  },
  {
    "text": "control of what instances do so that we can deliver packets",
    "start": "2122670",
    "end": "2128380"
  },
  {
    "text": "we use dhcpv6 as an interesting sidenote because a wsv pcs are always keeping",
    "start": "2128380",
    "end": "2135579"
  },
  {
    "text": "track of the entire topology it's actually a stateless DHCP implementation on our end which is to say when a DHCP",
    "start": "2135579",
    "end": "2142660"
  },
  {
    "text": "request is made we don't actually have a DHCP server with a bunch of state on it we look at the topology databasing we",
    "start": "2142660",
    "end": "2147819"
  },
  {
    "text": "return the information based on the state of the topology and the API calls that you've made security this is a big",
    "start": "2147819",
    "end": "2157869"
  },
  {
    "start": "2153000",
    "end": "2153000"
  },
  {
    "text": "one ipv6 is it on by default no it's not on by default we want to minimize our",
    "start": "2157869",
    "end": "2164890"
  },
  {
    "text": "assumptions about customer intent but even though we don't turn it on by",
    "start": "2164890",
    "end": "2171039"
  },
  {
    "text": "default your operating systems on ec2 are likely to launch dual stack these days and they'll have a link local",
    "start": "2171039",
    "end": "2177759"
  },
  {
    "text": "address on them so to prevent again kind of accidental ipv6 traffic from passing",
    "start": "2177759",
    "end": "2184089"
  },
  {
    "text": "around in your V PC we will not allow the link local traffic to pass through",
    "start": "2184089",
    "end": "2189400"
  },
  {
    "text": "the V PC until you've assigned a global unicast address to the interface so if",
    "start": "2189400",
    "end": "2195789"
  },
  {
    "text": "you go into V PC and you launch two instances and even if you have enable ipv6 on the subnet if you haven't",
    "start": "2195789",
    "end": "2203259"
  },
  {
    "text": "assigned them an ipv6 global unicast address they won't be able to talk to each other over there link local addresses so you must have a GU up route",
    "start": "2203259",
    "end": "2212319"
  },
  {
    "text": "tables it would be a really bad thing if we updated your route table with a v6 route that pointed to the internet for example so we don't do that the thing we",
    "start": "2212319",
    "end": "2219910"
  },
  {
    "text": "do do is we create a local route much like you have with ipv4 in the route tables that points to the signer block",
    "start": "2219910",
    "end": "2225880"
  },
  {
    "text": "the slash 56 that's allocated to your V PC the sort of a security groups is it",
    "start": "2225880",
    "end": "2233349"
  },
  {
    "text": "depends so going back to the notion of intentionality if you've used default security groups",
    "start": "2233349",
    "end": "2239440"
  },
  {
    "text": "in a default network access control list we will add the equivalent default configuration for ipv6 so as an example",
    "start": "2239440",
    "end": "2246609"
  },
  {
    "text": "the default network access control list in V PC permits traffic there are no restrictions if you haven't modified",
    "start": "2246609",
    "end": "2253450"
  },
  {
    "text": "that and you enable ipv6 on your V PC we will add an ipv6 rule in your Knakal that permits ipv6 traffic however",
    "start": "2253450",
    "end": "2261730"
  },
  {
    "text": "if you've modified your network access control lists or your default security group we will make no change because we",
    "start": "2261730",
    "end": "2267430"
  },
  {
    "text": "will assume that you intended to restrict traffic if you already have an",
    "start": "2267430",
    "end": "2272890"
  },
  {
    "text": "ipv4 infrastructure on VPC today moving to ipv6 is really simple you associate a",
    "start": "2272890",
    "end": "2278860"
  },
  {
    "text": "slash 56 with your V PC you associated slash 64 with your subnet and you",
    "start": "2278860",
    "end": "2286180"
  },
  {
    "text": "associate an ipv6 address with the en I of the interface of your ec2 instance very simple now I want to go back and",
    "start": "2286180",
    "end": "2293680"
  },
  {
    "text": "talk about this notion of having a global unicast address in the sense that you know a little bit of nervousness",
    "start": "2293680",
    "end": "2299710"
  },
  {
    "text": "that I have a public address on my instance and can't everybody get to it well I mentioned that in the ipv4 world",
    "start": "2299710",
    "end": "2306580"
  },
  {
    "start": "2304000",
    "end": "2304000"
  },
  {
    "text": "NAT is one of the things that we use to kind of control that right it's a one-way door while it's possible to",
    "start": "2306580",
    "end": "2313470"
  },
  {
    "text": "prevent inbound traffic with security groups in ipv6 we did introduce the",
    "start": "2313470",
    "end": "2318700"
  },
  {
    "text": "egress only internet gateway to provide a semantically similar way to think about traffic with ipv6 the egress only",
    "start": "2318700",
    "end": "2326110"
  },
  {
    "text": "internet gateway allows traffic that originates within your V PC to egress but it doesn't allow traffic originating",
    "start": "2326110",
    "end": "2332170"
  },
  {
    "text": "on the other side of the ID GW to come in right so in that way it's semantically similar to not so let's",
    "start": "2332170",
    "end": "2340810"
  },
  {
    "start": "2340000",
    "end": "2340000"
  },
  {
    "text": "kind of put it all together we have a region we create a V PC we have a v6 address we create subnets we give them",
    "start": "2340810",
    "end": "2347020"
  },
  {
    "text": "addresses we have edge gateways yeah GW use v GW use v GW by the way is Virtual",
    "start": "2347020",
    "end": "2356320"
  },
  {
    "text": "Private Gateway we configure route tables so on the left side you see a",
    "start": "2356320",
    "end": "2361600"
  },
  {
    "text": "route table that says I have a local route for my v6 Nider block in my default gateway colon colon zero colon",
    "start": "2361600",
    "end": "2370930"
  },
  {
    "text": "colon slash zero my default gateway is the internet so that's what this subnet on the left does for the subnet on the",
    "start": "2370930",
    "end": "2377080"
  },
  {
    "text": "right it says well there's this address that is available down by direct connect so take my virtual private gateway v GW",
    "start": "2377080",
    "end": "2383940"
  },
  {
    "text": "ABC to get to that network and otherwise the default route is through the egress",
    "start": "2383940",
    "end": "2390640"
  },
  {
    "text": "only internet gateway you can launch resources in these subnets give them",
    "start": "2390640",
    "end": "2396400"
  },
  {
    "text": "ipv6 addresses you can define a network access control list but ipv6",
    "start": "2396400",
    "end": "2402850"
  },
  {
    "text": "restrictions on it same with security groups the other thing that I just want",
    "start": "2402850",
    "end": "2407860"
  },
  {
    "text": "to call your attention to we've kind of talked through it but maybe it it hasn't all kind of come together yet what I'm",
    "start": "2407860",
    "end": "2413170"
  },
  {
    "text": "not showing here is that while this instance has an ipv6 global unicast",
    "start": "2413170",
    "end": "2418180"
  },
  {
    "text": "address if it's running an ec2 it also has an ipv4 address in addition to this",
    "start": "2418180",
    "end": "2423370"
  },
  {
    "text": "ipv6 global unicast address it also has a link local address and for both of its",
    "start": "2423370",
    "end": "2428890"
  },
  {
    "text": "unique caste addresses right the link local and the global unicast for both of",
    "start": "2428890",
    "end": "2435340"
  },
  {
    "text": "those unicast addresses it also subscribes to solicited node multicast addresses and it's also subscribed to",
    "start": "2435340",
    "end": "2441010"
  },
  {
    "text": "the all hosts multicast address so when you go into this instance and you say hey show me what you're listening on and",
    "start": "2441010",
    "end": "2446050"
  },
  {
    "text": "what addresses you have it may be a decent-sized list we talked about connectivity with vgw",
    "start": "2446050",
    "end": "2453220"
  },
  {
    "text": "right with a virtual private gateway Direct Connect supports ipv6 for private",
    "start": "2453220",
    "end": "2458320"
  },
  {
    "start": "2456000",
    "end": "2456000"
  },
  {
    "text": "virtual interfaces right this is essentially land to land connectivity using AWS Direct Connect which is our",
    "start": "2458320",
    "end": "2463570"
  },
  {
    "text": "private line service can also use Direct Connect public virtual interfaces with",
    "start": "2463570",
    "end": "2469840"
  },
  {
    "text": "ipv6 which will give you access to our border network in the ipv6 resources that are available there like s3 and API",
    "start": "2469840",
    "end": "2477340"
  },
  {
    "text": "gateway we recently launched Direct Connect gateway which I won't get into a lot of detail here but I will tell you",
    "start": "2477340",
    "end": "2483400"
  },
  {
    "text": "that direct connect gateway also supports ipv6 if you're curious",
    "start": "2483400",
    "end": "2488980"
  },
  {
    "text": "what the customer end router would look like here I have the two neighbors from the actually the screenshots that just",
    "start": "2488980",
    "end": "2494650"
  },
  {
    "text": "showed you the first neighbor is a public virtual interface over ipv6 I can tell that because it has 556 prefixes",
    "start": "2494650",
    "end": "2501370"
  },
  {
    "text": "that's receiving from Amazon the second neighbor is getting one prefix and",
    "start": "2501370",
    "end": "2507070"
  },
  {
    "text": "that's the private interface it's receiving the prefix for that VPC of",
    "start": "2507070",
    "end": "2514120"
  },
  {
    "text": "course now that we have VPC things that we launched in VPC can talk ipv6 so if you're using workspaces you can talk",
    "start": "2514120",
    "end": "2521500"
  },
  {
    "text": "native ipv6 so i've gone gone on to a workspace here i've gone out to that web",
    "start": "2521500",
    "end": "2526570"
  },
  {
    "text": "server that i'm that's just returning back what addresses it sees coming in can see it's a native ipv6 response app stream 2.0",
    "start": "2526570",
    "end": "2536050"
  },
  {
    "text": "same story native v6 capable we also",
    "start": "2536050",
    "end": "2542080"
  },
  {
    "text": "support ipv6 on application load balancer so the application load",
    "start": "2542080",
    "end": "2547090"
  },
  {
    "text": "balancer at the time that you create it you have an option if you're creating an",
    "start": "2547090",
    "end": "2552460"
  },
  {
    "text": "Internet alb you have an option to create a v4 or dual stack alb let's create dual stack",
    "start": "2552460",
    "end": "2558760"
  },
  {
    "text": "you get an ipv6 address much like cloud front the application load balancer will",
    "start": "2558760",
    "end": "2564640"
  },
  {
    "text": "answer ipv6 addresses but it passes them back as ipv4 which makes it great for",
    "start": "2564640",
    "end": "2570040"
  },
  {
    "text": "transition so you can communicate",
    "start": "2570040",
    "end": "2576400"
  },
  {
    "start": "2573000",
    "end": "2573000"
  },
  {
    "text": "directly with with an al be here i've shown you just from a workstation going to that that a load balancer that's",
    "start": "2576400",
    "end": "2583450"
  },
  {
    "text": "sitting in front of the web server i mentioned earlier you see I can x-forwarded-for right it's not a native connection all the way back to the ec2",
    "start": "2583450",
    "end": "2589720"
  },
  {
    "text": "instance the client address which I've grayed out is the en I interface ID the you know the en I ipv4 address of the",
    "start": "2589720",
    "end": "2596830"
  },
  {
    "text": "alb in my V PC and you can also have cloud front in front of your al be right",
    "start": "2596830",
    "end": "2602950"
  },
  {
    "start": "2599000",
    "end": "2599000"
  },
  {
    "text": "your al B as an origin in cloud front in that case you get an interesting exported for because cloud front talks",
    "start": "2602950",
    "end": "2608620"
  },
  {
    "text": "ipv6 that's my client address but then al beasts gets an X 44 that shows the IP",
    "start": "2608620",
    "end": "2616120"
  },
  {
    "text": "address that cloud front used to connect to the alb and the client address again is the alb IP so there's much more to",
    "start": "2616120",
    "end": "2625660"
  },
  {
    "text": "come on the ipv6 fronts we are not done by a longshot but we rely on you our",
    "start": "2625660",
    "end": "2632320"
  },
  {
    "text": "customers to help guide us where we should be prioritizing our work and what should we what we should be delivering",
    "start": "2632320",
    "end": "2637750"
  },
  {
    "text": "next so fair enough I will note if you're using VPN if you are using an",
    "start": "2637750",
    "end": "2645160"
  },
  {
    "text": "appliance you can use ipv6 using a VPN appliance today but that notwithstanding",
    "start": "2645160",
    "end": "2650490"
  },
  {
    "text": "I'm going to come offstage and take questions if you have them but I welcome feedback on where should we where we",
    "start": "2650490",
    "end": "2656440"
  },
  {
    "text": "should be prioritizing next set of features and I wish you best of luck in implementing ipv6 thank you",
    "start": "2656440",
    "end": "2663000"
  },
  {
    "text": "[Applause]",
    "start": "2663000",
    "end": "2667659"
  }
]