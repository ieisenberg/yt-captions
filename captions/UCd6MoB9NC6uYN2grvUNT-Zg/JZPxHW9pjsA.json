[
  {
    "text": "In this video, you’ll see how to deploy and apply \nthe Customizations for AWS Control Tower solution.",
    "start": "960",
    "end": "6080"
  },
  {
    "text": "With this solution, you can easily add customizations to your AWS Control Tower landing zone, manage deployment of your custom templates",
    "start": "6720",
    "end": "13651"
  },
  {
    "text": "across your Control Tower environment, and automate resource deployment \nfor new accounts created by the AWS Control Tower account factory.",
    "start": "13651",
    "end": "20677"
  },
  {
    "text": "To get started, let’s navigate to the \nControl Tower Workshop for the solution. ",
    "start": "22133",
    "end": "25664"
  },
  {
    "text": "This public site is accessible \nthrough a link below this video.",
    "start": "26640",
    "end": "29555"
  },
  {
    "text": "It provides an overview of the Customizations for AWS \nControl Tower solution and a link to the solution itself.",
    "start": "29929",
    "end": "35366"
  },
  {
    "text": "This comprehensive implementation guide discusses the considerations \nand configuration steps for deploying the solution.",
    "start": "37805",
    "end": "43320"
  },
  {
    "text": "Let’s take a quick look at the architecture.",
    "start": "45721",
    "end": "47518"
  },
  {
    "text": "The Customizations for AWS Control Tower solution combines AWS \nControl Tower and other highly available, trusted AWS services",
    "start": "49856",
    "end": "57592"
  },
  {
    "text": "to help you quickly set up a secure, multi-account \nAWS environment using AWS best practices.",
    "start": "57592",
    "end": "62881"
  },
  {
    "text": "The solution includes an AWS CloudFormation \ntemplate you deploy in your AWS account",
    "start": "63846",
    "end": "68389"
  },
  {
    "text": "that launches all the components necessary to build the workflows \nthat enable you to customize your AWS Control Tower landing zone.",
    "start": "68389",
    "end": "74664"
  },
  {
    "text": "This solution is deployed and configured by processing \na configuration package through AWS CodePipeline.",
    "start": "75579",
    "end": "80839"
  },
  {
    "text": "You can access the developer guide from here.",
    "start": "81555",
    "end": "83552"
  },
  {
    "text": "Let’s go back to the workshop to launch the solution.",
    "start": "86000",
    "end": "88365"
  },
  {
    "text": "From here, we can launch a preconfigured \nstack with the click of a button.",
    "start": "93291",
    "end": "96526"
  },
  {
    "text": "This only needs to be done once before \ncustomizing our Control Tower environment.",
    "start": "97098",
    "end": "100928"
  },
  {
    "text": "Let’s retain these default settings and proceed. ",
    "start": "101838",
    "end": "103998"
  },
  {
    "text": "We’ll use AWS CodeCommit as \nthe CodePipeline source provider.",
    "start": "107228",
    "end": "110715"
  },
  {
    "text": "Let’s retain the rest of the defaults. ",
    "start": "115325",
    "end": "117058"
  },
  {
    "text": "Now we’ll acknowledge the message regarding Identity and \nAccess Management (IAM) resource creation and create the stack.",
    "start": "123680",
    "end": "129000"
  },
  {
    "text": "The stack has been created.",
    "start": "131093",
    "end": "132469"
  },
  {
    "text": "Let’s take a look at its resources.",
    "start": "132469",
    "end": "134073"
  },
  {
    "text": "Let’s return to the workshop to see how to deploy \nour customizations from the CodeCommit repository.",
    "start": "136357",
    "end": "140825"
  },
  {
    "text": "For this example, we’ll be deploying \nusing a Cloud9 environment.",
    "start": "143683",
    "end": "146856"
  },
  {
    "text": "Let’s check the instructions.",
    "start": "147039",
    "end": "148426"
  },
  {
    "text": "We’ll need the URL link for our CodeCommit repo, \nso let’s find it in the CodeCommit console.",
    "start": "149440",
    "end": "153951"
  },
  {
    "text": "We’ll copy the URL and then \nopen the Cloud9 environment.",
    "start": "155093",
    "end": "157813"
  },
  {
    "text": "First, we need to install git. ",
    "start": "163120",
    "end": "164700"
  },
  {
    "text": "Now let’s clone our CodeCommit repo using \nthe URL we copied and navigate into it.",
    "start": "169520",
    "end": "173758"
  },
  {
    "text": "Next, let’s return to the workshop \nand copy the manifest file. ",
    "start": "176720",
    "end": "179750"
  },
  {
    "text": "Now we’ll go back to the repo and replace the \nsample manifest.yaml file with what we just copied.",
    "start": "182880",
    "end": "187855"
  },
  {
    "text": "Let’s save and close the file.",
    "start": "193520",
    "end": "195104"
  },
  {
    "text": "Next, we’ll check our git status, and then add the changes, commit \nthe changes, and then push those changes onto our CodeCommit repo.",
    "start": "200014",
    "end": "207020"
  },
  {
    "text": "Next, let’s navigate to CodePipeline to confirm \nthat our deployment is reflected there. ",
    "start": "211397",
    "end": "215400"
  },
  {
    "text": "Here’s our Custom Control Tower CodePipeline.",
    "start": "219523",
    "end": "221862"
  },
  {
    "text": "Let’s take a look at it.",
    "start": "222000",
    "end": "223019"
  },
  {
    "text": "As you can see, the pipeline process has successfully completed.",
    "start": "225924",
    "end": "228961"
  },
  {
    "text": "Next, let’s return to our Cloud9 environment to customize our deployment.",
    "start": "229335",
    "end": "233014"
  },
  {
    "text": "Let’s add the us-east-1 region to the manifest, save the file, \nand then publish the changes onto our CodeCommit repo.",
    "start": "234137",
    "end": "240849"
  },
  {
    "text": "Now let’s go back to CodePipeline to \nmake sure this change is reflected. ",
    "start": "250000",
    "end": "253307"
  },
  {
    "text": "As you can see, CodeCommit recognized that a new \ncommit has been made and triggered our pipeline. ",
    "start": "255452",
    "end": "259944"
  },
  {
    "text": "Now that we know our pipeline has succeeded, \nlet's check out our newly deployed customizations.",
    "start": "262820",
    "end": "266940"
  },
  {
    "text": "First, let's look at the additional preventative guardrail.",
    "start": "267490",
    "end": "269906"
  },
  {
    "text": "To do so, we’ll navigate to our Organizations \nPolicies page in our management account. ",
    "start": "270223",
    "end": "274358"
  },
  {
    "text": "From here, we’ll navigate to AWS Accounts and select \nthe organizational unit we deployed the guardrail to. ",
    "start": "277123",
    "end": "282528"
  },
  {
    "text": "We can see the new guardrail on the Policies tab. ",
    "start": "286000",
    "end": "288160"
  },
  {
    "text": "Next, we’ll switch to our provisioned account, where we \ncan find the customized and newly deployed IAM role.",
    "start": "291440",
    "end": "296696"
  },
  {
    "text": "Lastly, let's go to the Config console \nto find the newly deployed config rule.",
    "start": "298720",
    "end": "302625"
  },
  {
    "text": "You’ve just seen how to deploy and apply the \nCustomizations for AWS Control Tower solution.",
    "start": "305907",
    "end": "310667"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video. ",
    "start": "311581",
    "end": "314988"
  },
  {
    "text": "Thanks for watching. \nNow it’s your turn to try.",
    "start": "315421",
    "end": "317569"
  }
]