[
  {
    "start": "0",
    "end": "55000"
  },
  {
    "text": "I guess we'll get started so afternoon",
    "start": "0",
    "end": "8880"
  },
  {
    "text": "thanks for coming no everybody's probably a little sleepy after lunch but we'll try to keep it moving along try to",
    "start": "8880",
    "end": "14400"
  },
  {
    "text": "keep you awake this is dat 301 not the flight to Vegas so we're going to talk",
    "start": "14400",
    "end": "20550"
  },
  {
    "text": "about running highly available in performance intensive production applications on Amazon RDS I did not",
    "start": "20550",
    "end": "25680"
  },
  {
    "text": "make up that title let's just let you know right right away because that's a little wordy for me my name is Graham",
    "start": "25680",
    "end": "30990"
  },
  {
    "text": "McAllister i'm a senior principal engineer with a database group and in AWS i'm an actual engineer I help help",
    "start": "30990",
    "end": "38760"
  },
  {
    "text": "build or I help my guys build stuff and I'm very happy today to have Brennan's",
    "start": "38760",
    "end": "44340"
  },
  {
    "text": "data from Coursera he's going to come and talk after me about his experience with already s let's jump right in so",
    "start": "44340",
    "end": "51989"
  },
  {
    "text": "why are we talking about high availability and scalability in the same talk well I actually think they're really closely related topics and I",
    "start": "51989",
    "end": "59070"
  },
  {
    "start": "55000",
    "end": "55000"
  },
  {
    "text": "actually you know they actually are almost the same thing when you start off a business and let's say I got a little hardware business that I'm doing I you",
    "start": "59070",
    "end": "65760"
  },
  {
    "text": "know I build a database right and off the bat database isn't really doing anything as I start doing some selling",
    "start": "65760",
    "end": "70860"
  },
  {
    "text": "some stuff my database keeps getting busier and busier and as my business grows at some point hey look my database",
    "start": "70860",
    "end": "77159"
  },
  {
    "text": "is red hot it's not even working correctly anymore right it's browning out it's having problems still available for some definition right but really",
    "start": "77159",
    "end": "83970"
  },
  {
    "text": "it's down for all intents purposes it's not working so therefore you know your",
    "start": "83970",
    "end": "89009"
  },
  {
    "text": "business is down so you can see right away that although scalability is an availability is really tightly coupled",
    "start": "89009",
    "end": "94860"
  },
  {
    "text": "right now you can fix this you can just go get a bigger box right and so we mourn ormally do on-premise or an AWS",
    "start": "94860",
    "end": "100860"
  },
  {
    "text": "and this works for a while but as your business continues to grow it's how they're gonna get super hot again are",
    "start": "100860",
    "end": "105899"
  },
  {
    "text": "you going to figure out like maybe I'll need to partition some stuff out move some things around chard you know add databases so now you got a lot of",
    "start": "105899",
    "end": "112590"
  },
  {
    "text": "databases running for that business now if any one of those goes down guess what your business might be down again right",
    "start": "112590",
    "end": "118799"
  },
  {
    "text": "so as you scale it's really important to concentrate on your availability as well and to improve your availability because",
    "start": "118799",
    "end": "123869"
  },
  {
    "text": "it actually becomes more challenging the bigger your business and the bigger your application gets so let's get right into",
    "start": "123869",
    "end": "130830"
  },
  {
    "text": "how RDS can help you with high availability and disaster recovery so the first thing that we do",
    "start": "130830",
    "end": "137090"
  },
  {
    "start": "136000",
    "end": "136000"
  },
  {
    "text": "is we have an option called multi AC and this is our you know sort of way to get",
    "start": "137090",
    "end": "142430"
  },
  {
    "text": "you high availability for reads and writes so we have nine regions across the world and in each of those regions",
    "start": "142430",
    "end": "147769"
  },
  {
    "text": "we have two or more availability zones and I just I've got to hear that I'm showing their called easy 182 but it was just fake names and you typically set up",
    "start": "147769",
    "end": "155090"
  },
  {
    "text": "your application and your database in just one of them to get started right it's okay works pretty well it's going",
    "start": "155090",
    "end": "160370"
  },
  {
    "text": "to be pretty available but if there's a problem you really want to have your data replicated to a second place right",
    "start": "160370",
    "end": "165650"
  },
  {
    "text": "to a second availability zone and to be make sure your application is highly available for best practice we always",
    "start": "165650",
    "end": "171319"
  },
  {
    "text": "tell people you want your application running there or at least be able to spin up really quickly right what we do",
    "start": "171319",
    "end": "176720"
  },
  {
    "text": "as part of multi AZ is we do physical synchronous replication between the primary and secondary the reason why",
    "start": "176720",
    "end": "181760"
  },
  {
    "text": "that's important physical because that means it'll keep up it can scale unlike logical that's usually single-threaded",
    "start": "181760",
    "end": "187359"
  },
  {
    "text": "physical thing you know you can scale that database up huge your replication is going to keep up synchronous is super",
    "start": "187359",
    "end": "193459"
  },
  {
    "text": "important that means when you enter a commit it's going to go to both places and it's not going to return to you",
    "start": "193459",
    "end": "199069"
  },
  {
    "text": "until it's there on both places you know that that's durable in two places right what it allows us to do is if the",
    "start": "199069",
    "end": "206449"
  },
  {
    "text": "primary fails we can easily promote the secondary to become the primary right",
    "start": "206449",
    "end": "211909"
  },
  {
    "text": "and you know your date is there because it's been committed on both places but you'll notice the application there it's",
    "start": "211909",
    "end": "217190"
  },
  {
    "text": "still pointing to the wrong place right how does it know how to connect well we do this your DNS so depending on whether",
    "start": "217190",
    "end": "224030"
  },
  {
    "text": "you're in regular VPC it's either a cname or an a record and your and it's basically how are you point at the",
    "start": "224030",
    "end": "230000"
  },
  {
    "text": "primary but of course we need to actually tell DNS about this change right so we do a primary update when we",
    "start": "230000",
    "end": "236269"
  },
  {
    "text": "do a failover one of the things the team's been working on really hard this year is to make this a lot faster this",
    "start": "236269",
    "end": "242030"
  },
  {
    "text": "was taking a couple of minutes in most of our region's we're in the middle of the rollout right now where we're",
    "start": "242030",
    "end": "248030"
  },
  {
    "text": "getting this down to less than a minute and it's makes failover much faster so once we do that primary update guess",
    "start": "248030",
    "end": "253430"
  },
  {
    "text": "what our applications now pointing at the primary we didn't have to do anything right there was no reconfiguration and the nice thing with",
    "start": "253430",
    "end": "260060"
  },
  {
    "text": "RDS is it doesn't matter whether it's just the second you know just a host failure or a big problem in a",
    "start": "260060",
    "end": "266600"
  },
  {
    "text": "either way you're covered you're still available it all works right and of course what we do is we repair this as",
    "start": "266600",
    "end": "273050"
  },
  {
    "text": "well so that you get back to that same good state right off the bat so that's",
    "start": "273050",
    "end": "278630"
  },
  {
    "text": "one method and we have that today for my sequel oracle and postgres the engine we",
    "start": "278630",
    "end": "285170"
  },
  {
    "text": "just announced this morning as you can see I'm wearing I'm wearing my postgres t-shirt if you if you got questions",
    "start": "285170",
    "end": "290390"
  },
  {
    "text": "about that we've got another talk going on at four-fifteen today and a colleague of mine Nick hurdle will be presenting",
    "start": "290390",
    "end": "296090"
  },
  {
    "text": "on that so if you're interested in that go check out that talk so one of the other ways that you can get better",
    "start": "296090",
    "end": "303290"
  },
  {
    "start": "303000",
    "end": "303000"
  },
  {
    "text": "availability is to run read replicas from my sequel this is only available on our my sequel engine today but it's definitely something customers have",
    "start": "303290",
    "end": "309260"
  },
  {
    "text": "asked about for the other ones as well so we're back to our application primary secondary good multi easy setup what we",
    "start": "309260",
    "end": "315920"
  },
  {
    "text": "can do is add read replicas which are amongst equals sync asynchronous replication now the important thing to",
    "start": "315920",
    "end": "321380"
  },
  {
    "text": "realize what a synchronous replication is it can actually leg behind right so you want to change your application a",
    "start": "321380",
    "end": "327590"
  },
  {
    "text": "little bit to handle the fact that your rights and your consistent reads the ones that need to read those rights",
    "start": "327590",
    "end": "332720"
  },
  {
    "text": "still need to go to the primary but you can put everything else over onto the read replica and you can even have",
    "start": "332720",
    "end": "337850"
  },
  {
    "text": "multiples of them right so you can use it to scale up and we'll talk a little more about that later in the talk so why",
    "start": "337850",
    "end": "343730"
  },
  {
    "text": "does this help well remember that failover we just did well for that brief period while that DNS is propagating",
    "start": "343730",
    "end": "349670"
  },
  {
    "text": "your rights are going to be you know unavailable to you right but if you've got a setup like this then your reads",
    "start": "349670",
    "end": "354920"
  },
  {
    "text": "they'll be available so if you have running a blogging site you might not be able to write new blogs during the short",
    "start": "354920",
    "end": "360380"
  },
  {
    "text": "period but hey all the people coming to read your blog maybe maybe you know happy right this also works you know we",
    "start": "360380",
    "end": "367880"
  },
  {
    "text": "get back to our standard setup and let's say we want to do an upgrade from 51 to 55 you can do this same technique to be",
    "start": "367880",
    "end": "375170"
  },
  {
    "text": "available during that short window when you've got to be down to do the upgrade and of course if you need to upgrade a",
    "start": "375170",
    "end": "380360"
  },
  {
    "text": "read replica because you can have many of them you don't have a problem with unavailability for reads as well so this",
    "start": "380360",
    "end": "386210"
  },
  {
    "text": "is a really good technique a lot of people use to you know to get more availability as well one of the things",
    "start": "386210",
    "end": "392180"
  },
  {
    "start": "392000",
    "end": "392000"
  },
  {
    "text": "that we just released in the last little while is replicas of replicas so why is",
    "start": "392180",
    "end": "398270"
  },
  {
    "text": "this useful well when you're going to go do a logical failover where you want to promote a replica we basically make this",
    "start": "398270",
    "end": "403790"
  },
  {
    "text": "easier so if you go to make your replica writable so you can go let's say alter a",
    "start": "403790",
    "end": "409190"
  },
  {
    "text": "table change in index do whatever you want to do you can do that but now you can actually go build replicas on top of",
    "start": "409190",
    "end": "414920"
  },
  {
    "text": "that replica and why do you want to do this because when you do the promotion of that replica guess what now you have",
    "start": "414920",
    "end": "421310"
  },
  {
    "text": "replicas right away you don't have to rebuild them or do anything so it makes the transition if you're going to do a logical failover much faster and of",
    "start": "421310",
    "end": "428060"
  },
  {
    "text": "course guess what you can make that multi easy you're back in your same state you never had to be without a replica in that in that case so this is",
    "start": "428060",
    "end": "435170"
  },
  {
    "text": "a really nice addition that we did just recently so back up more store a lot of",
    "start": "435170",
    "end": "443510"
  },
  {
    "text": "people say hey grant well I got multi AZ I got read replicas why do I need backup restore well there's still some faults",
    "start": "443510",
    "end": "449750"
  },
  {
    "text": "that are not covered by replication if one of your users forgets a where clause like that's never happened right on a",
    "start": "449750",
    "end": "455180"
  },
  {
    "text": "delete statement guess what those changes would be replicated to all your replicas right and all you have is an",
    "start": "455180",
    "end": "461600"
  },
  {
    "text": "empty table everywhere this is where backup and restore comes in really critical you want to build a restore to",
    "start": "461600",
    "end": "467270"
  },
  {
    "text": "that second right before that person did that work and be able to get back up and available right so how do we help an",
    "start": "467270",
    "end": "473690"
  },
  {
    "text": "already asked well what we do is when you generate logs we ship those des three so it's every five minutes or as",
    "start": "473690",
    "end": "479660"
  },
  {
    "text": "often as you generate them depends on each engine and so you're not going to",
    "start": "479660",
    "end": "484820"
  },
  {
    "start": "482000",
    "end": "482000"
  },
  {
    "text": "lose more than that amount of data you know you'll be able to you'll be able to restore basically any point any second",
    "start": "484820",
    "end": "490910"
  },
  {
    "text": "so we do that all day long every time you're generating logs and then at night during your backup window which you",
    "start": "490910",
    "end": "496640"
  },
  {
    "text": "specify we take it copy of your database and put in s3 right so that's really critical because now we have the logs in",
    "start": "496640",
    "end": "503150"
  },
  {
    "text": "the database and we can restore like I said to any point and you can pick a retention of the default which is one day all the way up to 35 days so you",
    "start": "503150",
    "end": "510470"
  },
  {
    "text": "know you've got a huge window of where you could restore to but let's say you're like I need I need to retain that",
    "start": "510470",
    "end": "515990"
  },
  {
    "text": "for seven years because I've got some compliance stuff well then you can take a snapshot and you can either take it from that database or from one of your",
    "start": "515990",
    "end": "523400"
  },
  {
    "text": "nightly backups and you can keep that for as long as you want and here you I show one that I you know I did an end of month one as an example so that's you",
    "start": "523400",
    "end": "530600"
  },
  {
    "text": "know that's a technique that a lot of people use as well to restore again very simple to do through our CLI you pick the time you",
    "start": "530600",
    "end": "536839"
  },
  {
    "text": "say what you want to do we basically restore a copy of the database we take some logs depending on you know what",
    "start": "536839",
    "end": "542120"
  },
  {
    "text": "point in time we apply it guess what bingo you've got a new instance right and it really is that simple it's very",
    "start": "542120",
    "end": "547250"
  },
  {
    "text": "fast a lot of the restorers depending on how much work you know they can be done very quickly so it's a super important",
    "start": "547250",
    "end": "553130"
  },
  {
    "text": "technique from a you know back up more store perspective well we've added really recently is we have a cross",
    "start": "553130",
    "end": "559459"
  },
  {
    "text": "region snapshot coffee so this is a great way to take what we've already gotten back up recovery and add to it so",
    "start": "559459",
    "end": "565490"
  },
  {
    "text": "instead of jizz having the one region I'm showing to now you can think of like maybe it's us East one on the east coast",
    "start": "565490",
    "end": "571339"
  },
  {
    "start": "567000",
    "end": "567000"
  },
  {
    "text": "and US west to on on the west coast there and we can take a back up that we put it in s3 and once you have that back",
    "start": "571339",
    "end": "578089"
  },
  {
    "text": "up you can go to the other region and say I would like to copy that back up to this region and now you've got that data",
    "start": "578089",
    "end": "583279"
  },
  {
    "text": "in two places you know you can save it as 4dr for other purposes and once it's there it acts like a regular instance in",
    "start": "583279",
    "end": "589940"
  },
  {
    "text": "that you know you can just do a restore from it right so it's no different than any kind of backup that you would have",
    "start": "589940",
    "end": "595399"
  },
  {
    "text": "inside of already else so this is really useful feature we just released a few weeks ago and the one you might have",
    "start": "595399",
    "end": "602120"
  },
  {
    "text": "heard about this morning in the keynote was we just announced that we're going to be releasing cross region read",
    "start": "602120",
    "end": "607370"
  },
  {
    "text": "replicas so again we have that one region in this case I'm showing a broad database with one replica you don't have",
    "start": "607370",
    "end": "613100"
  },
  {
    "start": "611000",
    "end": "611000"
  },
  {
    "text": "to have a replica for this i just showed that you could and then we have a second region showing them different AZ you",
    "start": "613100",
    "end": "619220"
  },
  {
    "text": "actually create a replica of it and the nice thing is this is through a secure pipe but it looks exactly like a replica",
    "start": "619220",
    "end": "625279"
  },
  {
    "text": "would in the local environment right in the local region and you can even create read replicas of that replica so in the",
    "start": "625279",
    "end": "633320"
  },
  {
    "text": "case that you want to do a promotion for dr or other purposes or just to move your data from one to the other you've",
    "start": "633320",
    "end": "638720"
  },
  {
    "text": "got the replica right away so you can see how even though you know it's a it's a it's a little different it's actually",
    "start": "638720",
    "end": "645410"
  },
  {
    "text": "again sort of the exact same model that we use on on our local environment so this is a great new feature that we're",
    "start": "645410",
    "end": "651529"
  },
  {
    "text": "going to have coming out really soon so that's kind of you know some stuff on",
    "start": "651529",
    "end": "657350"
  },
  {
    "text": "availability and disaster recovery let's talk about how already asked can help with performance and scale so last year",
    "start": "657350",
    "end": "665600"
  },
  {
    "start": "664000",
    "end": "664000"
  },
  {
    "text": "we released / vision die-offs for already asked and this is actually a really key feature for us to really get good scalability",
    "start": "665600",
    "end": "671510"
  },
  {
    "text": "our database because anyone that runs databases knows look you need a lot of i/o and a lot of cases to get good",
    "start": "671510",
    "end": "676910"
  },
  {
    "text": "performance and good scalability I actually want to show Lee a really concrete example of throw the differences between regular and",
    "start": "676910",
    "end": "682250"
  },
  {
    "text": "provision dial so i did a benchmarks pretty simple benchmark i ran a DVM to 4xl pretty big box I put 130 Giga data",
    "start": "682250",
    "end": "689420"
  },
  {
    "text": "in the database and i'm running a partially random read workload what does that mean that means it's like it's",
    "start": "689420",
    "end": "694430"
  },
  {
    "text": "going to hit some cash but it's also going to do some i oh so it's kind of a mix and on the left-hand axis you can see I have the transactions per second I",
    "start": "694430",
    "end": "701030"
  },
  {
    "text": "was able to achieve the blue line is a standard regular volume set up it's 333",
    "start": "701030",
    "end": "707840"
  },
  {
    "text": "gig I did the same thing with a thousand provisioned I outs in the orange and in the dark gray or black that's with",
    "start": "707840",
    "end": "713690"
  },
  {
    "text": "10,000 or 3000 story and you can see that the regular one and the thousand",
    "start": "713690",
    "end": "719690"
  },
  {
    "text": "provision ops they're actually pretty close in what they sort of achieved except there's a lot more variability in the regular one almost twenty five",
    "start": "719690",
    "end": "726200"
  },
  {
    "text": "percent in the amount of work that was being done at different point we actually see a pretty good scale up by",
    "start": "726200",
    "end": "731690"
  },
  {
    "text": "going with it with the bigger 3000 I ops we actually got about two XD improvement so this is interesting but what about",
    "start": "731690",
    "end": "738560"
  },
  {
    "text": "the latency what happens to the latency when we run this kind of test so what i did was i grouped into four buckets the",
    "start": "738560",
    "end": "745190"
  },
  {
    "text": "first bucket I'm not actually showing because that's 0 to 3 milliseconds if your transactions are happening in sub 3",
    "start": "745190",
    "end": "750920"
  },
  {
    "text": "milliseconds most cases people are pretty happy with that I know I am the three to twenty milliseconds I sort of",
    "start": "750920",
    "end": "756620"
  },
  {
    "text": "bump into the good not bad 22 500 milliseconds this is probably starting",
    "start": "756620",
    "end": "761990"
  },
  {
    "text": "to get pretty bad you really don't want to see too much of this and greater than 500 milliseconds this is a half-second",
    "start": "761990",
    "end": "767570"
  },
  {
    "start": "763000",
    "end": "763000"
  },
  {
    "text": "this is a very simple read this is like getting one line out of a table basically so that's a long time right we",
    "start": "767570",
    "end": "773600"
  },
  {
    "text": "see with the regular and the thousand provisional ops instances it is very close on latency right in that first",
    "start": "773600",
    "end": "779000"
  },
  {
    "text": "bucket of the three to 20 millisecond we see we get a nice jump up in reduction there on the 3000 provision aubs and we",
    "start": "779000",
    "end": "786410"
  },
  {
    "text": "actually see that the interesting one that I find most interesting here is that you get some iOS are taking or not",
    "start": "786410",
    "end": "794150"
  },
  {
    "text": "I owe some transactions are taking more than a half second on the regular instance right that's a very small number it's only point",
    "start": "794150",
    "end": "799850"
  },
  {
    "text": "one but if you're trying to run a website that has consistent performance for your customers this is actually a big deal right and you'll notice that",
    "start": "799850",
    "end": "807560"
  },
  {
    "text": "the 3,000 provisioned I didn't actually have any in this bucket or even in the 22 500 millisecond so it's very",
    "start": "807560",
    "end": "813019"
  },
  {
    "text": "consistent all sub 20 milliseconds but I know benchmarking right it's always an",
    "start": "813019",
    "end": "818209"
  },
  {
    "text": "interesting topic cuz people would say look I don't run my instance flat out I don't run it right the ragged edge at",
    "start": "818209",
    "end": "823220"
  },
  {
    "text": "least I try not to right so let's go and look at what happens if we go down to a scale where it's you know 5,000 that's a",
    "start": "823220",
    "end": "829850"
  },
  {
    "text": "target we can see from the graphs that you know should be quite achievable to do that for all three of these",
    "start": "829850",
    "end": "835399"
  },
  {
    "text": "environments so let's go look at the Layton sees that we got for that one we see now as a dramatic difference right",
    "start": "835399",
    "end": "841100"
  },
  {
    "text": "we see that the regular RDS is still getting about eight percent in that",
    "start": "841100",
    "end": "846290"
  },
  {
    "text": "first bucket what does that mean well that means it's not wasn't how hard we were pushing that database it was",
    "start": "846290",
    "end": "851720"
  },
  {
    "text": "actually just the built-in sort of variability of standard i/o right what we see when we look at provision off we",
    "start": "851720",
    "end": "857810"
  },
  {
    "text": "see now we've dropped down to less than one percent or even in the three to 20 millisecond pocket and there's none in",
    "start": "857810",
    "end": "863600"
  },
  {
    "text": "the 22 500 or greater right that means everything on the provisional ops was running very smoothly and again",
    "start": "863600",
    "end": "871279"
  },
  {
    "text": "interestingly enough we reduced how hard we were pushing but we actually had four times as many transactions in the half",
    "start": "871279",
    "end": "878240"
  },
  {
    "start": "872000",
    "end": "872000"
  },
  {
    "text": "second bucket right the greater than how second bucket why is that well because this is the variability run to run on",
    "start": "878240",
    "end": "883490"
  },
  {
    "text": "standard you're going to see that much variability and you don't on provisional so this is kind of key to what you might",
    "start": "883490",
    "end": "889880"
  },
  {
    "text": "want to think about provision ops as a way to scale and really help you run your your your application so I wanted",
    "start": "889880",
    "end": "897350"
  },
  {
    "text": "to say well let's let's try to scale this up let's go up to 10,000 I ops now same same exact thing and that's in the",
    "start": "897350",
    "end": "902750"
  },
  {
    "text": "paint and you see that we didn't get quite the doubling we got last time even though we went up by like almost three",
    "start": "902750",
    "end": "908149"
  },
  {
    "text": "and a half times and we're also a little more ragged right we're jumping around a little bit on that graph so let's go",
    "start": "908149",
    "end": "914240"
  },
  {
    "text": "figure out why that happened so as part of RDS you get cloud watching metrics",
    "start": "914240",
    "end": "919519"
  },
  {
    "start": "917000",
    "end": "917000"
  },
  {
    "text": "and we try to give you all the key indicators of to help you do this kind of analysis of where you are on running",
    "start": "919519",
    "end": "924980"
  },
  {
    "text": "your database and this graph hope you can see it it's in the orange we have the CPU on the left and on the blue we",
    "start": "924980",
    "end": "931519"
  },
  {
    "text": "have the reads per second that we were to the to the i/o subsystem so hey we're",
    "start": "931519",
    "end": "937129"
  },
  {
    "text": "only at eighty percent on CPU so we weren't at the limit their right and we're only at about 6,000 on on apps and",
    "start": "937129",
    "end": "942980"
  },
  {
    "text": "we said we wanted 10,000 so why aren't we going faster right well we keep looking through the metrics and guess",
    "start": "942980",
    "end": "948860"
  },
  {
    "text": "what we look at the throughput metric for reads and what does it show us it shows us that we're at about 100",
    "start": "948860",
    "end": "955220"
  },
  {
    "text": "megabytes per second or if you're a network I that's a gigabit right and guess what for a DB m24 XL that's the",
    "start": "955220",
    "end": "962059"
  },
  {
    "text": "basic the limit on what we can talk to EBS f so we're hitting that limit with this block so it's just important to",
    "start": "962059",
    "end": "967519"
  },
  {
    "text": "know what your different limits are so that you can figure out where you are on scale which kind of leads me into when",
    "start": "967519",
    "end": "973790"
  },
  {
    "text": "you think about what knobs you can turn to really get a round bottlenecks and how you can scale you really are these",
    "start": "973790",
    "end": "979069"
  },
  {
    "text": "three main items and RDS the instance class where you go anywhere from a micro which is you know great because it's",
    "start": "979069",
    "end": "984889"
  },
  {
    "text": "part of our free tier all the way up to a CR 18 extra-large which is a mammoth loss from less than one gigabyte of RAM",
    "start": "984889",
    "end": "992059"
  },
  {
    "text": "all the way up to a quarter terabyte I think like quarter terabyte it you know it's 244 gig but I always like to say",
    "start": "992059",
    "end": "997189"
  },
  {
    "text": "quarter terabyte because it sounds larger and for a guy that started with databases back in the day one very large",
    "start": "997189",
    "end": "1002290"
  },
  {
    "text": "database meant one gigabyte on disk running a machine that has almost a quarter terabyte of RAM is just a lot of",
    "start": "1002290",
    "end": "1008170"
  },
  {
    "text": "fun so you also can choose I up so again you can pick on you can pick the regular",
    "start": "1008170",
    "end": "1013689"
  },
  {
    "text": "standard stuff or you can go provision which you can go anywhere from a thousand to three thirty thousand today",
    "start": "1013689",
    "end": "1018879"
  },
  {
    "text": "and you can pick storage anywhere from five gigabytes and this depends a little bit on each engine for regular or a",
    "start": "1018879",
    "end": "1025779"
  },
  {
    "text": "hundred gig to all the way to three terabytes for provision aisles well what's kind of interesting is the",
    "start": "1025779",
    "end": "1031058"
  },
  {
    "text": "relationship of some of these things like the DB instance class actually has different amounts of memory / ECU that",
    "start": "1031059",
    "end": "1038409"
  },
  {
    "text": "you can have anywhere from 1.7 all the way to 2.8 so if you need more ram more CPU you can actually pick and choose the",
    "start": "1038409",
    "end": "1045038"
  },
  {
    "text": "instance types right for iOS will our range of anywhere from three to one to ten to one on the ratio of you know I",
    "start": "1045039",
    "end": "1051520"
  },
  {
    "text": "offs and gigabytes so we actually allow you to dial in and get the right amount there and not have to you know get too",
    "start": "1051520",
    "end": "1057250"
  },
  {
    "text": "much of either and the one that's actually usually not really that evident is throughput it's actually a",
    "start": "1057250",
    "end": "1062799"
  },
  {
    "text": "combination of the instance class as well as the ions so if you pick something that's an EBS off",
    "start": "1062799",
    "end": "1069279"
  },
  {
    "text": "my since this class and I list the four of them there today and you pick for vision I ops then you're going to get a",
    "start": "1069279",
    "end": "1075669"
  },
  {
    "text": "half a gigabit TBS dedicated on the small wall box there and on the other three you're going to get a full gigabit",
    "start": "1075669",
    "end": "1081909"
  },
  {
    "text": "so this really helps you get that consistency again to get around some of the limit if you go with the 01 a extra",
    "start": "1081909",
    "end": "1087879"
  },
  {
    "text": "large you're actually it's not EBS optimized but it has a 10 gigabit pipe so you get a lot more bandwidth than you",
    "start": "1087879",
    "end": "1094090"
  },
  {
    "text": "do on the other environments and of course if you're just running regular I 0 or one of the non-optimized type then",
    "start": "1094090",
    "end": "1099879"
  },
  {
    "text": "you're in a shared environment where it's going to be a little more variable and of course around all of this is how",
    "start": "1099879",
    "end": "1106389"
  },
  {
    "text": "does your database engine that you pick behave with these things if you have different block sizes for different",
    "start": "1106389",
    "end": "1112059"
  },
  {
    "text": "engine types so my sequel is 16 k the other three engines are all 8 k is their default block size so what that means is",
    "start": "1112059",
    "end": "1118659"
  },
  {
    "text": "if you have a gigabit how many iOS you can do is dependent upon what that block size is now the other thing you want to",
    "start": "1118659",
    "end": "1125080"
  },
  {
    "text": "think about is what kind of utilization of resources does your engine use some are better using more RAM less Ram more",
    "start": "1125080",
    "end": "1131019"
  },
  {
    "text": "cpus more threads and so you just want to think about that when you're looking at scalability so to make this a little",
    "start": "1131019",
    "end": "1136629"
  },
  {
    "text": "more concrete I actually wanted to run another benchmark so this time instead",
    "start": "1136629",
    "end": "1143139"
  },
  {
    "text": "of just doing read we made a read/write benchmark and the slides say it's a 9010 workload I apologize it's actually a 95",
    "start": "1143139",
    "end": "1150369"
  },
  {
    "text": "5 workload I noticed this really late when i was doing editing so we took the",
    "start": "1150369",
    "end": "1156549"
  },
  {
    "text": "exact same run of 130 gig data but instead of varying the eye off this time we we stick with 10,000 and we bury the",
    "start": "1156549",
    "end": "1163899"
  },
  {
    "text": "instance class so I started this run and I did it on the brown one there with the DBM one large and we get you know not",
    "start": "1163899",
    "end": "1170679"
  },
  {
    "text": "quite six thousand transactions per second pretty good for a small box and you'll notice that the CPU is still at",
    "start": "1170679",
    "end": "1176169"
  },
  {
    "text": "eighty-five percent so we haven't into max there the reads per second is not 10,000 and it neither is it with the",
    "start": "1176169",
    "end": "1182169"
  },
  {
    "text": "right so we know we're in auto limit there but we do see the remake of bytes per second is at 52 so again we've hit a",
    "start": "1182169",
    "end": "1188200"
  },
  {
    "text": "network limit here by pushing real hard and this sides a box only has two half",
    "start": "1188200",
    "end": "1193389"
  },
  {
    "text": "gig a bit to EBS so that's the limit we hit on this one so let's scale it up to an m1 extra large what we see is we got",
    "start": "1193389",
    "end": "1200230"
  },
  {
    "text": "more than and part of this is because we have a little more RAM and we can push a little",
    "start": "1200230",
    "end": "1205950"
  },
  {
    "text": "harder right nice is that we hit a hundred percent CPU on this one so we're actually getting very good value for our money at the moment but we're reads per",
    "start": "1205950",
    "end": "1213000"
  },
  {
    "text": "second are still only at 6,800 we haven't hit 10,000 and the reason is again that we're hitting a network limit",
    "start": "1213000",
    "end": "1218190"
  },
  {
    "text": "of 100 4 megabytes per second so you can see how depending on how you're pushing",
    "start": "1218190",
    "end": "1223200"
  },
  {
    "text": "you're going to hit different limits and i will say that like remember that the network is full duplex so you can both",
    "start": "1223200",
    "end": "1228300"
  },
  {
    "text": "do like even though i'm hitting reads if I if I was pushing rights harder I could also get one hundred forty megabytes per",
    "start": "1228300",
    "end": "1233370"
  },
  {
    "text": "second on right so you could actually do a full ten thousand here if you needed to so let's scale it up to a DVM mm2 for",
    "start": "1233370",
    "end": "1240810"
  },
  {
    "text": "extra-large this is quite a big box it's got over 60 gig of ram in it so it's going to do a lot better on cashing we",
    "start": "1240810",
    "end": "1246270"
  },
  {
    "text": "get a much bigger number forty-two thousand transactions per second right we'll see that CPU is getting a little hot that ninety-five percent you",
    "start": "1246270",
    "end": "1252510"
  },
  {
    "text": "probably wouldn't get much more out of this anyway we can see that the reads per second is at six to eight hundred and the rights is at 2,600 so we're",
    "start": "1252510",
    "end": "1259440"
  },
  {
    "text": "actually almost at the 10,000 I outs that we order so we're getting pretty close there and our reads our gang",
    "start": "1259440",
    "end": "1264900"
  },
  {
    "text": "capped out at 104 because this box again has one gigabit for network throughput so it shows you how you know you as you",
    "start": "1264900",
    "end": "1271080"
  },
  {
    "text": "go along you hit different limits so then I said well let's fire up the big guy let's fire up the Sierra 18 extra large and it was kind of surprising you",
    "start": "1271080",
    "end": "1279150"
  },
  {
    "text": "know you'd expect a big number here that's what the normal benchmarks would do it's not right I got 47,000 kind of a",
    "start": "1279150",
    "end": "1284490"
  },
  {
    "text": "disappointment right only got another five thousand transactions out of it well why did I do that see if you use it",
    "start": "1284490",
    "end": "1289980"
  },
  {
    "text": "forty percent obviously not that's not a problem and the interesting one is hey look reads per second is 0 right wait",
    "start": "1289980",
    "end": "1295590"
  },
  {
    "text": "what's going on there well it has 244 gig of ram I have a hundred thirty Giga data guess what totally fits in RAM",
    "start": "1295590",
    "end": "1301890"
  },
  {
    "text": "right so it's a great it's a great use case for how to save on Io right his luxury",
    "start": "1301890",
    "end": "1308400"
  },
  {
    "text": "will look good by a really big box with a lot of RAM you know which which for some use cases is great right we'll see",
    "start": "1308400",
    "end": "1313800"
  },
  {
    "text": "that the rights is still pretty low so why are we at this why are we you know only getting this well as it turns out",
    "start": "1313800",
    "end": "1319350"
  },
  {
    "text": "this is a very simple benchmark right and I didn't do any tuning at all and so",
    "start": "1319350",
    "end": "1324450"
  },
  {
    "text": "bait we're hitting some limits inside of my sequel and of course what you're probably going around that but I'm a busy guy I got present patients to do",
    "start": "1324450",
    "end": "1330150"
  },
  {
    "text": "like a conference is to go to I don't have time to do that so instead what I did was say how can i use some of the",
    "start": "1330150",
    "end": "1335460"
  },
  {
    "text": "other facilities and RDS to help me scale so go back to the read replica case right because we're on a",
    "start": "1335460",
    "end": "1341670"
  },
  {
    "text": "ninety-five percent read perspective why not let's use the read replicas to help",
    "start": "1341670",
    "end": "1346710"
  },
  {
    "start": "1343000",
    "end": "1343000"
  },
  {
    "text": "offload some of that so we were doing 46,000 transactions per second to one primary so let's split that up right",
    "start": "1346710",
    "end": "1352710"
  },
  {
    "text": "let's put three m24 extra larges put all the reads to it and let's scale this up",
    "start": "1352710",
    "end": "1357960"
  },
  {
    "text": "by 3x just to see where we get to right and so I did that because you know I had to actually like dial the benchmark to",
    "start": "1357960",
    "end": "1363240"
  },
  {
    "text": "actually make it fair and so this is what we got in the end so we got 126,000",
    "start": "1363240",
    "end": "1368460"
  },
  {
    "text": "transactions per second out of it right around 3x the m24 x or extra large numbers right so this shows you that you",
    "start": "1368460",
    "end": "1375510"
  },
  {
    "text": "know even though you might hit a limit in your engine or you know in your CPU you can change these knobs you can do",
    "start": "1375510",
    "end": "1381480"
  },
  {
    "text": "things that allow you to scale I mean obviously one of the best things you can do obviously is tune your application to your sequel but when that failed it's",
    "start": "1381480",
    "end": "1388230"
  },
  {
    "text": "nice to have these knobs and these things that you can do and all this with RDS is essentially going into a you know CLI or our GUI and a couple clicks and",
    "start": "1388230",
    "end": "1395850"
  },
  {
    "text": "you can make these modifications and of course you can see all these numbers in cloud watch very nice so with that I'd",
    "start": "1395850",
    "end": "1401670"
  },
  {
    "text": "actually like to turn it over to Brendan he's going to talk about their their journey",
    "start": "1401670",
    "end": "1408140"
  },
  {
    "text": "hello welcome so my name is Brennan I'd like to talk to you today about our",
    "start": "1413850",
    "end": "1419290"
  },
  {
    "text": "journey with Amazon RDS I'd like to talk about some things we've learned and",
    "start": "1419290",
    "end": "1424410"
  },
  {
    "text": "maybe some more stories if we have some time so first of all who is Coursera course Sarah what is Coursera Coursera",
    "start": "1424410",
    "end": "1431620"
  },
  {
    "text": "is a startup we're 19 months old we're based in menlo park sorry not in view",
    "start": "1431620",
    "end": "1438370"
  },
  {
    "text": "california what do we do we partner with schools and universities around the",
    "start": "1438370",
    "end": "1443920"
  },
  {
    "text": "world and we help we help these schools bring their best courses online in fact",
    "start": "1443920",
    "end": "1449830"
  },
  {
    "text": "we make them available for free we have over five million course Arians 5",
    "start": "1449830",
    "end": "1454900"
  },
  {
    "text": "million students I checked yesterday and we were almost 5.5 million we have over 500 different courses ranging from",
    "start": "1454900",
    "end": "1462520"
  },
  {
    "start": "1455000",
    "end": "1455000"
  },
  {
    "text": "equine nutrition to reactive programming in in Scala of course I'm currently",
    "start": "1462520",
    "end": "1468640"
  },
  {
    "text": "taking we have over a hundred and seven partners some examples include Stanford Yale Princeton the London School of",
    "start": "1468640",
    "end": "1476260"
  },
  {
    "text": "Economics we have a broad global footprint these courses are in a MOOC format a massive open online course we",
    "start": "1476260",
    "end": "1484570"
  },
  {
    "text": "have over a hundred thousands even over 200,000 students enrolled in a single course so we have moderate scale at",
    "start": "1484570",
    "end": "1492850"
  },
  {
    "text": "least so Who am I I'm on the infrastructure team so Coursera as a",
    "start": "1492850",
    "end": "1499450"
  },
  {
    "text": "company is about 60 people at this point about half of them are engineering the each of the engineering teams have a",
    "start": "1499450",
    "end": "1505300"
  },
  {
    "text": "mascot team dragon is the infrastructure team so we've got the burninator up here",
    "start": "1505300",
    "end": "1510600"
  },
  {
    "text": "the infrastructure team up until a few months ago was really only two engineers",
    "start": "1510600",
    "end": "1517320"
  },
  {
    "text": "and we were able to handle the the and manage the site that we had thanks to",
    "start": "1517320",
    "end": "1523210"
  },
  {
    "text": "RDS and I'd like to talk to you a little bit about how we did that my Twitter nonsense is up here as well as my",
    "start": "1523210",
    "end": "1529510"
  },
  {
    "text": "homepage where every once in a while blog about what we're up to so let's talk about to understand RDS and how we",
    "start": "1529510",
    "end": "1536140"
  },
  {
    "text": "use it we have to talk about our journey as we've grown up so to begin we start",
    "start": "1536140",
    "end": "1541570"
  },
  {
    "text": "with baby Coursera baby Coursera started out from modest humble beginnings as you",
    "start": "1541570",
    "end": "1546759"
  },
  {
    "text": "expect we were a PHP web application the typical startup dream coming out of grad",
    "start": "1546759",
    "end": "1554349"
  },
  {
    "text": "students we were we had a web servers we have a knee lb and we have a database and the typical architecture that you'd",
    "start": "1554349",
    "end": "1561190"
  },
  {
    "text": "expect now let's talk about where we are today so although it looks up well looks",
    "start": "1561190",
    "end": "1567549"
  },
  {
    "text": "a little bit different we have a lot of things that are the same so let's start",
    "start": "1567549",
    "end": "1572619"
  },
  {
    "text": "with the differences so we've gone a little bit more complex we've actually migrated to a service-oriented architecture so you can see all the",
    "start": "1572619",
    "end": "1580569"
  },
  {
    "text": "yellow boxes are sir our services in our service oriented architecture and we've moved to this for reasons of high",
    "start": "1580569",
    "end": "1586089"
  },
  {
    "text": "availability for performance for reuse we want to enable developers to push out",
    "start": "1586089",
    "end": "1591819"
  },
  {
    "text": "new services in new features without blocking on each other in a reliable",
    "start": "1591819",
    "end": "1596919"
  },
  {
    "text": "fashion and that's been really helpful further everything although you don't notice it here everything is an auto",
    "start": "1596919",
    "end": "1603099"
  },
  {
    "text": "scaling group everything is runs in three availability zones at minimum and can easily scale up and down as traffic",
    "start": "1603099",
    "end": "1609099"
  },
  {
    "text": "increases and decreases in fact during the day we run sometimes four times the",
    "start": "1609099",
    "end": "1614739"
  },
  {
    "text": "number of instances on certain tears than we do at night when we scale things down it's been a huge boon and",
    "start": "1614739",
    "end": "1620769"
  },
  {
    "text": "reliability and availability you'll hear this mantra repeated over and over at this conference this is the standard",
    "start": "1620769",
    "end": "1626769"
  },
  {
    "text": "architecture that you must adopt or you will go down and that's worked very well for us things that were the same the",
    "start": "1626769",
    "end": "1634389"
  },
  {
    "text": "important things that I want to call out we continue to use amazon elastic load balancers at the front end and most",
    "start": "1634389",
    "end": "1640419"
  },
  {
    "text": "importantly we continue to use amazon RDS to power all of our almost all of our data storage within AWS the quite",
    "start": "1640419",
    "end": "1648159"
  },
  {
    "text": "simply has worked very well for us we're not just one database anymore we've got a massive array and Amazon RDS has",
    "start": "1648159",
    "end": "1653349"
  },
  {
    "text": "really allowed us to manage this with so little resources I want to talk about I",
    "start": "1653349",
    "end": "1659979"
  },
  {
    "text": "want to abstract things out from that complex picture that entire picture can really be simplified to this and that is",
    "start": "1659979",
    "end": "1665529"
  },
  {
    "text": "you have your users that connect to your website through load balancing solution many are available elb is the typical",
    "start": "1665529",
    "end": "1673089"
  },
  {
    "text": "one in Amazon you have a stateless web tier and really the service-oriented architecture is composed of stateless",
    "start": "1673089",
    "end": "1678429"
  },
  {
    "text": "web servers stateless web services they really all compress down to a stateless web tier you finally you've got your database as",
    "start": "1678429",
    "end": "1686540"
  },
  {
    "text": "you scale as you come under load to be honest everything breaks everything from",
    "start": "1686540",
    "end": "1692280"
  },
  {
    "start": "1687000",
    "end": "1687000"
  },
  {
    "text": "your SSL Certificates dns will go down every everything is going to break but",
    "start": "1692280",
    "end": "1698610"
  },
  {
    "text": "the things that are the most painful the things that are hardest to resolve the things that are hardest to recover from is the database why is that al bees can",
    "start": "1698610",
    "end": "1707430"
  },
  {
    "text": "scale to roughly two huge amounts of traffic you're stateless web tier it's supposed to be stateless so you can just",
    "start": "1707430",
    "end": "1714150"
  },
  {
    "text": "add more instances and you can handle any problems with that if you have a problem with the code deployment you can",
    "start": "1714150",
    "end": "1719220"
  },
  {
    "text": "get the tooling and get stuff working reasonably quickly the database though is the hardest to recover from most",
    "start": "1719220",
    "end": "1726900"
  },
  {
    "text": "importantly the hardest thing to deal with the hardest thing to scale is the I ops there are a few tools that you can",
    "start": "1726900",
    "end": "1732540"
  },
  {
    "text": "use to help with this in Amazon RDS really makes it a lot easier to manage p I ops and and the like I'd really like",
    "start": "1732540",
    "end": "1740250"
  },
  {
    "text": "to talk about a little bit more about what we do so first of all even though",
    "start": "1740250",
    "end": "1745590"
  },
  {
    "text": "I've said that every website every service looks the same they actually are all different you have different read",
    "start": "1745590",
    "end": "1750750"
  },
  {
    "start": "1746000",
    "end": "1746000"
  },
  {
    "text": "right ratios you've got different load you've got different working set sizes the amount of hot data that's routinely",
    "start": "1750750",
    "end": "1756540"
  },
  {
    "text": "being accessed and so really every app is different you've got to use a bunch of different techniques and we've already talked about them and I'm sure",
    "start": "1756540",
    "end": "1762300"
  },
  {
    "text": "you're all familiar with them by a bigger database scaling up to valid solution for a while you can also use",
    "start": "1762300",
    "end": "1768900"
  },
  {
    "text": "read replicas as grant talked about earlier and finally you can shard or partition your data corsair uses all",
    "start": "1768900",
    "end": "1774270"
  },
  {
    "text": "three techniques and we've been able to survive so far so before we get to that",
    "start": "1774270",
    "end": "1781230"
  },
  {
    "text": "I want to talk about why we chose Amazon RDS in the beginning we chose Amazon RDS because it was based on my sequel my",
    "start": "1781230",
    "end": "1789150"
  },
  {
    "start": "1783000",
    "end": "1783000"
  },
  {
    "text": "sequels are familiar tools easy to work with we chose Amazon RDS because we thought we'd need amazon automatic",
    "start": "1789150",
    "end": "1796020"
  },
  {
    "text": "backups and point in time restores we thought we'd need the ability to just click to scale we had no idea when we",
    "start": "1796020",
    "end": "1802170"
  },
  {
    "text": "initially launched we had no idea what was going to happen we had no idea how quickly we're going to grow finally we",
    "start": "1802170",
    "end": "1808200"
  },
  {
    "text": "need we wanted the ability to create read replicas to also handle performance in and scale out and be very reliable we",
    "start": "1808200",
    "end": "1814180"
  },
  {
    "text": "wanted multi availability zone in order to manage outages in availability we",
    "start": "1814180",
    "end": "1819460"
  },
  {
    "text": "want to stay up our students care very much about the courses they're taking we want to be there for them so now now",
    "start": "1819460",
    "end": "1826000"
  },
  {
    "text": "that we've grown from a baby too well we haven't grown up or maybe like a teenager at this point how are we doing",
    "start": "1826000",
    "end": "1831540"
  },
  {
    "text": "so my sequel is a proven persistence engine for us it has a within a single node has been very very reliable amazon",
    "start": "1831540",
    "end": "1839440"
  },
  {
    "text": "RDS the automatic backups and the point in time restores have been clutch we",
    "start": "1839440",
    "end": "1846190"
  },
  {
    "text": "would not be able we would have in it in a start-up you have lots of things going",
    "start": "1846190",
    "end": "1852190"
  },
  {
    "text": "on as grant alluded to someone forgets a where clause in the delete statement or for it perhaps some instructor",
    "start": "1852190",
    "end": "1857740"
  },
  {
    "text": "accidentally clicks the delete course button this these things happen all the time and these have really saved us I",
    "start": "1857740",
    "end": "1863890"
  },
  {
    "text": "it's been it's been amazing the ability to click to scale and click to add or read replica there's a funny story there",
    "start": "1863890",
    "end": "1871240"
  },
  {
    "text": "that maybe we'll get time to in the war story section later absolutely as saved our bacon is absolutely performed for us",
    "start": "1871240",
    "end": "1876700"
  },
  {
    "text": "we wanted multi availability zone and that's a really really hard problem and although I give grant a hard time on",
    "start": "1876700",
    "end": "1884350"
  },
  {
    "text": "this they're doing a really good job there have been times where it hasn't worked but the recent AZ outage that we",
    "start": "1884350",
    "end": "1891070"
  },
  {
    "text": "had in u.s. East a few a few months ago we actually all our databases did fail",
    "start": "1891070",
    "end": "1896920"
  },
  {
    "text": "correct failover correctly and we continue to operate so it's something that's getting better I'm not it's",
    "start": "1896920",
    "end": "1902380"
  },
  {
    "text": "failed for us in the past but it's something that's absolutely getting better and something that we're putting a lot more faith in actually before I go",
    "start": "1902380",
    "end": "1909309"
  },
  {
    "text": "on I wanted to say one thing that really isn't present in this slide though that really underpins at all the infrastructure team up until a few",
    "start": "1909309",
    "end": "1915640"
  },
  {
    "text": "months ago was only two full-time engineers and were able to manage a massive complexity we have a lot of",
    "start": "1915640",
    "end": "1922510"
  },
  {
    "text": "things under our purview we handle the development environment we handle security we handle scaling we handle testing we handle we handle a broad",
    "start": "1922510",
    "end": "1929500"
  },
  {
    "text": "number of things to make coursera operate we've only been able to do this thanks to the automation and the tooling",
    "start": "1929500",
    "end": "1935770"
  },
  {
    "text": "that amazon RDS provides and that grant and his team are building for us quite simply wouldn't be possible they make it",
    "start": "1935770",
    "end": "1941530"
  },
  {
    "text": "so much easier to run and maintain a database especially with in ALB and that's just been really wonderful so",
    "start": "1941530",
    "end": "1949270"
  },
  {
    "text": "Charles Dickens he got it wrong he said it was the best of times it was the worst of times actually it should be the other way we started with the worst of",
    "start": "1949270",
    "end": "1955480"
  },
  {
    "text": "times we've now gotten actually to the best of times things have gotten a lot more stable we figured a lot of things out and I'd like to teach I'd like to",
    "start": "1955480",
    "end": "1961480"
  },
  {
    "text": "share some of those lessons that we've learned with you guys hopefully you can learn from our pain and don't have to go through the same sort of suffering so",
    "start": "1961480",
    "end": "1969520"
  },
  {
    "text": "grand alluded to this before and I'm sure you can hear this mantra over and over and over this conference I won't belabor it too much use provision die",
    "start": "1969520",
    "end": "1977710"
  },
  {
    "text": "ops although it's spelled provision pronounce it production if you're in production and you're achieving any reasonable scale you need to be using VI",
    "start": "1977710",
    "end": "1985059"
  },
  {
    "text": "ops you can see the people talking about the latency spikes that you'll see we we",
    "start": "1985059",
    "end": "1990160"
  },
  {
    "text": "saw latency go from single digit milliseconds to multiple seconds for our our EBS rights it's just not possible to",
    "start": "1990160",
    "end": "1998200"
  },
  {
    "text": "run a website at scale enough about that the second lesson that we learned if you",
    "start": "1998200",
    "end": "2005070"
  },
  {
    "text": "learn which metrics which metrics do we need to watch in order to make sure our database is up and running and healthy",
    "start": "2005070",
    "end": "2012230"
  },
  {
    "text": "so we learned that the most important metric for us is the EBS write latency",
    "start": "2012230",
    "end": "2019490"
  },
  {
    "text": "EBS write latency is the single best indicator as to whether we're up whether we're down the second and third most",
    "start": "2019490",
    "end": "2026550"
  },
  {
    "text": "important metrics or CPU utilization and finally the the right operations that we're putting on our database the sub",
    "start": "2026550",
    "end": "2034800"
  },
  {
    "text": "lesson that we learned from this however is that you need to make this information available to the people who",
    "start": "2034800",
    "end": "2040920"
  },
  {
    "text": "are running your your platform in your infrastructure you're not going to go into the AWS console and go to the RDS",
    "start": "2040920",
    "end": "2047160"
  },
  {
    "text": "pain and look at it you're certainly not going to go into the cloud watch one and go out of your way if you need to try and figure out what's going on make this",
    "start": "2047160",
    "end": "2052500"
  },
  {
    "text": "make this available here you can see on the left we use data dog and they make it really easy to create these screen",
    "start": "2052500",
    "end": "2058260"
  },
  {
    "text": "boards to see what's going on and finally on the right we see this is a screenshot from our custom in-house tool",
    "start": "2058260",
    "end": "2063868"
  },
  {
    "text": "that we wrote for deployment we bring this information right available make it available right next to the deployment",
    "start": "2063869",
    "end": "2069450"
  },
  {
    "text": "tools so that as you're deploying you see what's going on and you can deal with any issues that arise that's been",
    "start": "2069450",
    "end": "2075570"
  },
  {
    "text": "incredibly important has vastly increased our reliability now we moved from a PHP and",
    "start": "2075570",
    "end": "2083230"
  },
  {
    "text": "actually a Python web application to to a service-oriented architecture in the process we moved from two to actually",
    "start": "2083230",
    "end": "2090879"
  },
  {
    "start": "2085000",
    "end": "2085000"
  },
  {
    "text": "JVM based services Scala if you want to be specific but really JVM based services we use connection pools",
    "start": "2090880",
    "end": "2097210"
  },
  {
    "text": "connection pools will blow the pants blow the water out of a any setup where",
    "start": "2097210",
    "end": "2102970"
  },
  {
    "text": "you're creating a new connection to the database for every single request blow it out of the water that said initially",
    "start": "2102970",
    "end": "2108730"
  },
  {
    "text": "it was very unreliable we had lots of problems with our connection pools the fundamental reason is that the network",
    "start": "2108730",
    "end": "2114610"
  },
  {
    "text": "is hostile with in AWS if you're in it through no fault of Amazon alone when",
    "start": "2114610",
    "end": "2120550"
  },
  {
    "text": "you're in your own color colocation or you're on your own data center there's only a few switches or few racks in",
    "start": "2120550",
    "end": "2126670"
  },
  {
    "text": "between your application servers and your database servers there's just there's simply less going on when you're",
    "start": "2126670",
    "end": "2132460"
  },
  {
    "text": "within an AWS you're going across availability zones you've got network virtualization you've got security groups there's simply so much more going",
    "start": "2132460",
    "end": "2139450"
  },
  {
    "text": "on VPC if you're in VPC there's so much more going on that it's just not going to be the same as when you're operating",
    "start": "2139450",
    "end": "2145330"
  },
  {
    "text": "in your same on when you're talking to a server that's right next to you in the rack so what did we learn we learn that",
    "start": "2145330",
    "end": "2154030"
  },
  {
    "text": "we need to crank down and tweak the connection pool settings so you want to adjust things like the connection idle",
    "start": "2154030",
    "end": "2161740"
  },
  {
    "text": "time you want to adjust things like the connection max age and you want to have",
    "start": "2161740",
    "end": "2167590"
  },
  {
    "text": "frequent pings to go from your app servers to your database servers adjust",
    "start": "2167590",
    "end": "2173440"
  },
  {
    "text": "things for the connection max-age time something like maybe an hour have pin your database every minute or so to make",
    "start": "2173440",
    "end": "2178990"
  },
  {
    "text": "sure that the connection is still live and recycle the bad connections that have better simply dead at this point on",
    "start": "2178990",
    "end": "2185130"
  },
  {
    "text": "further we found that not all connection pools are equal how we've found we've tested a couple database connection",
    "start": "2185130",
    "end": "2191140"
  },
  {
    "text": "pools c-3po that's why he's up here is worked very well for us some other ones did not didn't handle connections",
    "start": "2191140",
    "end": "2198520"
  },
  {
    "text": "dropping in certain cases in certain environments c-3po was worked very well for us one thing I want to caution you",
    "start": "2198520",
    "end": "2205060"
  },
  {
    "text": "against this is where the sub sub lesson of this third lesson is you can't tune too aggressive",
    "start": "2205060",
    "end": "2210880"
  },
  {
    "text": "what do I mean by that the first connection from a brand new instance to",
    "start": "2210880",
    "end": "2216050"
  },
  {
    "text": "your database will incur about a three second penalty and that's simply because the security groups in the network has",
    "start": "2216050",
    "end": "2223070"
  },
  {
    "text": "to configure itself for your connection you'll see this if you're going between two instances in ec2 or from an ec2",
    "start": "2223070",
    "end": "2228110"
  },
  {
    "text": "instance to an RDS instance that first connection will incur this penalty further subsequent connections will be",
    "start": "2228110",
    "end": "2234440"
  },
  {
    "text": "fine just something to watch out for make sure you don't do tune too aggressively or you're never going to get your first connection open now",
    "start": "2234440",
    "end": "2242420"
  },
  {
    "text": "there's plenty of war stories that we can go into and and we can have questions in a moment want to briefly run over these four things to watch out",
    "start": "2242420",
    "end": "2249230"
  },
  {
    "text": "for watch out for opaque ORM so grant actually was talking about how you can",
    "start": "2249230",
    "end": "2255200"
  },
  {
    "text": "saturate the network bandwidth on RDS we have experienced that and we were part of the reason why you can now see",
    "start": "2255200",
    "end": "2261230"
  },
  {
    "text": "network bandwidth well claim full full responsibility for using network bandwidth in the a Tobias console or at",
    "start": "2261230",
    "end": "2267800"
  },
  {
    "text": "least partially responsible watch out for utf-8 if you're going an international website if you're",
    "start": "2267800",
    "end": "2273770"
  },
  {
    "text": "internationalizing or dealing with characters know the difference between my sequels default utf-8 in real utf-8",
    "start": "2273770",
    "end": "2280220"
  },
  {
    "text": "there's a difference in the number of bytes allocated we ran into plenty of fun with that know that snapshots and",
    "start": "2280220",
    "end": "2286760"
  },
  {
    "text": "performance do not mix on so actually have a graph again from our internal monitoring our and deployment tool where",
    "start": "2286760",
    "end": "2293660"
  },
  {
    "text": "you can see our nightly backups and what the effect it has on our right latency we go from single-digit milliseconds to",
    "start": "2293660",
    "end": "2300080"
  },
  {
    "text": "almost point2 of a second just something to watch out for especially as you adjust in deal with your website finally",
    "start": "2300080",
    "end": "2306650"
  },
  {
    "text": "practice failover make sure your connection pools will reconnect make sure you're not caching dns entries and",
    "start": "2306650",
    "end": "2313520"
  },
  {
    "text": "re resolving them appropriately otherwise you're obviously not going to succeed very well when you fail over the",
    "start": "2313520",
    "end": "2319100"
  },
  {
    "text": "only way you're going to guarantee you this is going to work practice and Amazon RDS makes it really easy you just",
    "start": "2319100",
    "end": "2324140"
  },
  {
    "text": "click failover my database and you can make it happen do this in a test environment or if you're feeling excited",
    "start": "2324140",
    "end": "2331850"
  },
  {
    "text": "do it in your production environment with that I'd like to open it up for",
    "start": "2331850",
    "end": "2336910"
  },
  {
    "text": "questions a few things before I do coursera we're growing we're hiring",
    "start": "2336910",
    "end": "2342010"
  },
  {
    "text": "please join us if you're interested feel free to contact me the obligatory plea for engineers further please also fill",
    "start": "2342010",
    "end": "2348700"
  },
  {
    "text": "out the questionnaire we'd like feedback on this topic so we can and this this talk so we can give you more information",
    "start": "2348700",
    "end": "2355440"
  },
  {
    "text": "grant will come back up here please ask your questions I see at least one microphone please leave your questions",
    "start": "2355440",
    "end": "2361150"
  },
  {
    "text": "in the microphone or remind us to repeat the question so that it can be preserved for the record thank you",
    "start": "2361150",
    "end": "2369329"
  },
  {
    "text": "you",
    "start": "2374220",
    "end": "2376280"
  }
]