[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "okay good afternoon everyone my name is Matt Johnson I'm a Solutions Architect with the ada BS public-sector team and",
    "start": "13450",
    "end": "20260"
  },
  {
    "text": "hopefully you're here today to learn a bit more about ec2 Systems Manager just as a quick show of hands how many people",
    "start": "20260",
    "end": "27020"
  },
  {
    "text": "here have heard of or used ec2 Systems Manager before okay pretty good so what",
    "start": "27020",
    "end": "33440"
  },
  {
    "text": "we're going to do today what you can expect from the session we're going to give a brief overview of some of the capabilities that the service offers",
    "start": "33440",
    "end": "39470"
  },
  {
    "start": "34000",
    "end": "34000"
  },
  {
    "text": "we're going to dive a little bit deeper into talking about how we set up ec2 Systems Manager and that's both for ec2",
    "start": "39470",
    "end": "46489"
  },
  {
    "text": "based instances and on-premises as well then we're going to do a few walkthroughs they will be sort of slide",
    "start": "46489",
    "end": "52220"
  },
  {
    "text": "where rather than live demos but then at the end after we've done some advanced use cases we might see if we can't risk",
    "start": "52220",
    "end": "58370"
  },
  {
    "text": "a live demo so as you would have heard in the keynote this morning your cloud",
    "start": "58370",
    "end": "63530"
  },
  {
    "start": "60000",
    "end": "60000"
  },
  {
    "text": "is the new normal we've been saying that for a while now and they're obviously you know a number of reasons why you want to move to the cloud things like",
    "start": "63530",
    "end": "70790"
  },
  {
    "text": "increase speed and agility at the ability to scale up and down on demand the ability to move from on-premises",
    "start": "70790",
    "end": "76460"
  },
  {
    "text": "into an OP X cloud based model and so on but what we find is there are a number of customer challenges faced you know",
    "start": "76460",
    "end": "83180"
  },
  {
    "start": "79000",
    "end": "79000"
  },
  {
    "text": "both in the public sets around the private sector when we move from running infrastructure on-premises into a cloud",
    "start": "83180",
    "end": "88970"
  },
  {
    "text": "like environment traditional IT tool sets typically aren't built either for",
    "start": "88970",
    "end": "94070"
  },
  {
    "text": "the cloud workflow in terms of standing things up and down on demand but also in terms of the scale you can deliver IT on",
    "start": "94070",
    "end": "101150"
  },
  {
    "text": "the cloud maintaining visibility of what's happening across the cloud is",
    "start": "101150",
    "end": "106280"
  },
  {
    "text": "quite challenging if you're using traditional enterprise type tools there's an overhead in terms of",
    "start": "106280",
    "end": "112610"
  },
  {
    "text": "deploying multiple products to help manage and maintain your infrastructure and then obviously there's licensing",
    "start": "112610",
    "end": "118550"
  },
  {
    "text": "costs and complexity as well so really the takeaway from that we found is that managing cloud and hybrid environments",
    "start": "118550",
    "end": "125030"
  },
  {
    "text": "because obviously it's a journey and many people are going to be looking to manage on Prem as well as cloud based stuff is both complex and costly",
    "start": "125030",
    "end": "132050"
  },
  {
    "text": "especially when you're using the traditional infrastructure so back at",
    "start": "132050",
    "end": "137749"
  },
  {
    "start": "135000",
    "end": "135000"
  },
  {
    "text": "reinvent last year we introduced them and expanded products in the terms of an ec2 Systems Manager and this is has a",
    "start": "137749",
    "end": "145299"
  },
  {
    "text": "set of Koch build capabilities that enable automated configuration it supports ongoing management of",
    "start": "145299",
    "end": "151390"
  },
  {
    "text": "systems at scale it's designed to work across all of your Windows and Linux instances and also and this is sort of",
    "start": "151390",
    "end": "158109"
  },
  {
    "text": "key from our point of view it runs both an ec2 and on-premises environments and no additional charge to use so you'll be",
    "start": "158109",
    "end": "165219"
  },
  {
    "text": "charged for any ec2 instances that you spin up as a result of this or words that you use but the actual service",
    "start": "165219",
    "end": "170799"
  },
  {
    "text": "itself is free of charge and it has a broad set of capabilities as well so run",
    "start": "170799",
    "end": "176859"
  },
  {
    "start": "173000",
    "end": "173000"
  },
  {
    "text": "command this is probably the first service that was launched in this as a couple of years ago we're dealing drill",
    "start": "176859",
    "end": "182409"
  },
  {
    "text": "into that state manager you can think of this as desired state configuration inventory the ability to capture process",
    "start": "182409",
    "end": "188769"
  },
  {
    "text": "analyze and store inventory information on OS instances on the OS maintenance",
    "start": "188769",
    "end": "195639"
  },
  {
    "text": "windows the ability to shed your tasks at particular time periods patch management how you manage your Windows",
    "start": "195639",
    "end": "201879"
  },
  {
    "text": "environment for patching quite relevant in these times automation how you can",
    "start": "201879",
    "end": "207790"
  },
  {
    "text": "help build new ami templates to be able to launch and parameter store and this is this is one of the key ones I think",
    "start": "207790",
    "end": "214389"
  },
  {
    "text": "how you manage and store parameters securely in the cloud and then make use without make use of them without having",
    "start": "214389",
    "end": "220269"
  },
  {
    "text": "to store them hard code them into applications so if we look briefly run",
    "start": "220269",
    "end": "226569"
  },
  {
    "start": "223000",
    "end": "223000"
  },
  {
    "text": "command this allows you to remotely and securely manage servers or virtual machines at scale running in your data",
    "start": "226569",
    "end": "232810"
  },
  {
    "text": "center or an AWS it allows you to automate common administrative tasks anything you can do in PowerShell anything you can do in bash or a sort of",
    "start": "232810",
    "end": "241120"
  },
  {
    "text": "scripting language as possible it allows you to deploy and run commands across fleets of instances at the same time it",
    "start": "241120",
    "end": "248979"
  },
  {
    "text": "supports both AWS and on-premises and we'll talk a bit more about how that works later really important it has granular",
    "start": "248979",
    "end": "256840"
  },
  {
    "text": "permissions available through AWS Identity and Access Management so this means you can give your i''m users",
    "start": "256840",
    "end": "262710"
  },
  {
    "text": "specific permissions to run certain type of commands and not others and any commands that they do run both the",
    "start": "262710",
    "end": "268780"
  },
  {
    "text": "execution and the outputs are tracked using logging in s3 and 8os Cloud trill",
    "start": "268780",
    "end": "273969"
  },
  {
    "text": "so you have a very clear audit of what's happened on your environment something that's actually a lot more",
    "start": "273969",
    "end": "279069"
  },
  {
    "text": "difficult to get if you're using things like SSH Bastion hosts state manager",
    "start": "279069",
    "end": "284259"
  },
  {
    "text": "allows you to define and maintain configuration for your infrastructure whether it's operating systems or",
    "start": "284259",
    "end": "289479"
  },
  {
    "text": "applications whether it's running in your data center or on any of us it allows you to do things that control",
    "start": "289479",
    "end": "295210"
  },
  {
    "text": "configuration details so you can ensure that antivirus is up-to-date you can configure IP tables or firewall",
    "start": "295210",
    "end": "300940"
  },
  {
    "text": "rules on on your instance you can define your own schedules for things like deployment reviews you can deploy",
    "start": "300940",
    "end": "307030"
  },
  {
    "text": "compare what is deployed with what should be deployed and spot any state drift and you can query to see the state",
    "start": "307030",
    "end": "312669"
  },
  {
    "text": "of deployments so think of this as your management for desired state configuration then we have inventory and",
    "start": "312669",
    "end": "319780"
  },
  {
    "text": "this I think is quite big for a number of customers this provides visibility into the software catalog and",
    "start": "319780",
    "end": "326860"
  },
  {
    "text": "configuration that is on your instances so we are able to gather in details on a wide variety of attributes so not just",
    "start": "326860",
    "end": "333699"
  },
  {
    "text": "the OS but we can also look at what applications are installed we can look at things like which AWS components are",
    "start": "333699",
    "end": "339940"
  },
  {
    "text": "installed we can also look at things like the network configuration so you can use it to pull out things like IP",
    "start": "339940",
    "end": "345099"
  },
  {
    "text": "addresses and so on really importantly this inventory information is then stored in AWS config so you can start",
    "start": "345099",
    "end": "352330"
  },
  {
    "text": "using a dovish config and things like config rules to start tracking what's happening on your infrastructure not",
    "start": "352330",
    "end": "357550"
  },
  {
    "text": "just that the AWS API level but also at the OS and application level so a one-stop shop for seeing exactly what's",
    "start": "357550",
    "end": "363880"
  },
  {
    "text": "happening on your infrastructure we can also assess compliance using config rules and if we have time the demo will",
    "start": "363880",
    "end": "369580"
  },
  {
    "text": "show a little bit of that later maintenance windows so as everyone knows",
    "start": "369580",
    "end": "375759"
  },
  {
    "text": "you know if particularly when you're looking at traditional type deployments trying to figure out when to deploy",
    "start": "375759",
    "end": "380889"
  },
  {
    "text": "certain sets the patches and so on can be problematic maintenance windows allow you to define recurring periods of time",
    "start": "380889",
    "end": "386860"
  },
  {
    "text": "during which you can will accept disruptive operations you can prioritize tasks that are delivered within that",
    "start": "386860",
    "end": "394690"
  },
  {
    "text": "time period and you can grate different maintenance windows for different groups of servers so you may have a maintenance window for your development fleet one",
    "start": "394690",
    "end": "401139"
  },
  {
    "text": "for your production fleet a separate one for your test instances and again as with all the stuff we're talking about now it's available and works across both",
    "start": "401139",
    "end": "408130"
  },
  {
    "text": "ec2 and on-premises patch manager so this is",
    "start": "408130",
    "end": "414039"
  },
  {
    "text": "an automated tool that helps you help simplify the Windows operating system patching process so you're able to",
    "start": "414039",
    "end": "420819"
  },
  {
    "text": "select the patches you want to deploy your allow you're able to define what we call patch baselines so these are",
    "start": "420819",
    "end": "426669"
  },
  {
    "text": "collections of patches that your infrastructure should conform to you can define Auto approval rules so that",
    "start": "426669",
    "end": "433210"
  },
  {
    "text": "critical patches are deployed on your development fleet within a day whereas updates may be deferred for seven days",
    "start": "433210",
    "end": "440199"
  },
  {
    "text": "you can choose to whitelist or blacklist particular patch types so there may be a particular patch that you need not to",
    "start": "440199",
    "end": "447819"
  },
  {
    "text": "deploy because it breaks your application so you can blacklist those and you can shed you the automatic ruler",
    "start": "447819",
    "end": "453069"
  },
  {
    "text": "at these so this integrates with maintenance Windows you can start doing your patching during one of your scheduled maintenance windows automation",
    "start": "453069",
    "end": "461050"
  },
  {
    "text": "this provides a way of taking an AMI and then applying a set of automated",
    "start": "461050",
    "end": "466990"
  },
  {
    "text": "controls to build a new ami with a revised patch level or with additional",
    "start": "466990",
    "end": "472469"
  },
  {
    "text": "infrastructure and manage your ami",
    "start": "472469",
    "end": "479500"
  },
  {
    "text": "baking process this is really important if you're looking at automating deployments of things like auto scaling",
    "start": "479500",
    "end": "484900"
  },
  {
    "text": "groups how you manage that at scale we have set predefined where it flows or",
    "start": "484900",
    "end": "489969"
  },
  {
    "text": "you can build your own and then lastly we have parameters store so this is a",
    "start": "489969",
    "end": "495969"
  },
  {
    "text": "key service I think for us it's a centralized store which allows you to manage your configuration data so not",
    "start": "495969",
    "end": "501969"
  },
  {
    "text": "just necessarily secrets but any configuration data you might want to access at scale includes plaintext and",
    "start": "501969",
    "end": "507789"
  },
  {
    "text": "secrets and it's encrypted using kms so this means you can store a critical information within parameters store and",
    "start": "507789",
    "end": "513760"
  },
  {
    "text": "not need to have it stored in the clear on your instances integrates with things",
    "start": "513760",
    "end": "519459"
  },
  {
    "text": "like a device I am kms and Cloud trail so you can control who has access to which parameters it enables you to",
    "start": "519459",
    "end": "526920"
  },
  {
    "text": "effectively reuse the same configuration but then pull in specific parameters from the parameter store for specific",
    "start": "526920",
    "end": "533680"
  },
  {
    "text": "deployment so you might have a development password and a production password for your databases if you deploy in development you access the",
    "start": "533680",
    "end": "540160"
  },
  {
    "text": "parameters store for the development key you've deployed in production you access the parameter store you production key",
    "start": "540160",
    "end": "546010"
  },
  {
    "text": "you can also reference that from other services such as ec2 run command and state manager and you can also pull it",
    "start": "546010",
    "end": "553400"
  },
  {
    "text": "using the CLI so it can integrate with other services like lambda as well and if you follow our management tools blog",
    "start": "553400",
    "end": "559100"
  },
  {
    "text": "person I'll talk a bit more about that in a minute you will be able to see already we've done some use cases around ECS as well so that's an overview of the",
    "start": "559100",
    "end": "566600"
  },
  {
    "text": "seven services that come as part of ECS so easy to run commerce Systems Manager",
    "start": "566600",
    "end": "572600"
  },
  {
    "text": "now we'll talk a little bit about the prerequisites you need in order to deploy this so firstly you need to",
    "start": "572600",
    "end": "580520"
  },
  {
    "start": "578000",
    "end": "578000"
  },
  {
    "text": "control I am access to ec2 Systems Manager so this allows you to use us to",
    "start": "580520",
    "end": "587030"
  },
  {
    "text": "do things like create documents to create automations to execute run commands and so on for the purposes of",
    "start": "587030",
    "end": "593270"
  },
  {
    "text": "the demo I'll be an admin user so I'll better do everything strongly suggest it in production environments you think",
    "start": "593270",
    "end": "599300"
  },
  {
    "text": "about managing your I am permissions so that users can't do an RM minus RF as",
    "start": "599300",
    "end": "604430"
  },
  {
    "text": "that's a bad day for managers ec2 instances you will need an ec2 instance are all associated that allows that",
    "start": "604430",
    "end": "610400"
  },
  {
    "text": "instance to talk to the ec2 Systems Manager endpoint for on-premises we create an ion service raw and we also",
    "start": "610400",
    "end": "617600"
  },
  {
    "text": "create what we call an activation code that allows that on-premises instance to manage to authenticate and register with",
    "start": "617600",
    "end": "625040"
  },
  {
    "text": "the Systems Manager service in the AWS and lastly we have to have an SSM agent",
    "start": "625040",
    "end": "630560"
  },
  {
    "text": "installed on the machine that needs outbound HTTP access into our ec2",
    "start": "630560",
    "end": "636170"
  },
  {
    "text": "Systems Manager endpoint so that's the only record there's no inbound access needed for for this at all so you don't",
    "start": "636170",
    "end": "643610"
  },
  {
    "text": "need to open up firewalls inbound on your infrastructure it also works through proxies as well see if you have",
    "start": "643610",
    "end": "648950"
  },
  {
    "text": "a controlled environment in which you want to restrict that banned access as long as you whitelist the appropriate",
    "start": "648950",
    "end": "654860"
  },
  {
    "text": "endpoints you can control access outbound as well so just a quick walk through in terms of how we create an ec2",
    "start": "654860",
    "end": "661340"
  },
  {
    "start": "658000",
    "end": "658000"
  },
  {
    "text": "rule for SSM we go to the i''m console we slept this service rule type you",
    "start": "661340",
    "end": "667160"
  },
  {
    "text": "noticed at the bottom we've got an ec2 rule for simple systems manager so there's already an AWS manager all type",
    "start": "667160",
    "end": "672830"
  },
  {
    "text": "for that we can attach a manage policy so again a nativist manage policy you don't need",
    "start": "672830",
    "end": "678030"
  },
  {
    "start": "673000",
    "end": "673000"
  },
  {
    "text": "to worry about defining the particular policy sets yourself we can attach that to the raw and then for on-premises",
    "start": "678030",
    "end": "686220"
  },
  {
    "start": "683000",
    "end": "683000"
  },
  {
    "text": "there is an additional step so we need to establish a trust relationship not just with ec2 that we would have for the",
    "start": "686220",
    "end": "696060"
  },
  {
    "text": "on-prem of the ec2 instances but we also need to allow SSM to assume the raw in",
    "start": "696060",
    "end": "701760"
  },
  {
    "text": "an on-prem environment so we do that by editing a trust relationship again this is on the documentation there's links",
    "start": "701760",
    "end": "708030"
  },
  {
    "text": "there if you need it but what we do is we add in SSM as a trusted service that",
    "start": "708030",
    "end": "713610"
  },
  {
    "text": "can access that raw then lastly for on-premises environments so you don't",
    "start": "713610",
    "end": "718680"
  },
  {
    "start": "716000",
    "end": "716000"
  },
  {
    "text": "need to do this for ec2 instances once you've created the role and attach it to an instance provided it can talk",
    "start": "718680",
    "end": "724890"
  },
  {
    "text": "outbound and you have the agent installed it will register automatically but for on-premises we need to create what we call an activation an activation",
    "start": "724890",
    "end": "731880"
  },
  {
    "text": "allows you to create up to a thousand instances at any one time",
    "start": "731880",
    "end": "737600"
  },
  {
    "start": "734000",
    "end": "734000"
  },
  {
    "text": "and that will basically give you an activation code and a unique ID you",
    "start": "737600",
    "end": "743160"
  },
  {
    "text": "supply those rules those credentials into your agent when you install it and then that will be able to register your",
    "start": "743160",
    "end": "749550"
  },
  {
    "text": "on-premises instance into your AWS account once you've done that you'll get",
    "start": "749550",
    "end": "755550"
  },
  {
    "start": "754000",
    "end": "754000"
  },
  {
    "text": "a screen like this an activation code an activation ID make a note of those because those will only be displayed",
    "start": "755550",
    "end": "761610"
  },
  {
    "text": "once they're your credentials to look after and then you can feed that into your on-premises environment whether you",
    "start": "761610",
    "end": "768420"
  },
  {
    "text": "use something like puppet or a chef to deploy your applications whether you do it manually you use those codes to",
    "start": "768420",
    "end": "773610"
  },
  {
    "text": "register the instance the final thing we need to do is install the SSM agent so",
    "start": "773610",
    "end": "780060"
  },
  {
    "start": "776000",
    "end": "776000"
  },
  {
    "text": "this is an agent process request configures instances it captures things like the inventory information and so on",
    "start": "780060",
    "end": "785430"
  },
  {
    "text": "it supports a wide range of Linux operating systems everything from Amazon Linux 2014 dot o 3 and onwards Ubuntu",
    "start": "785430",
    "end": "792900"
  },
  {
    "text": "12.04 and onwards RedHat 6.5 and onward sento 6.3 and onwards and only a couple",
    "start": "792900",
    "end": "798810"
  },
  {
    "text": "of weeks ago we launched their support for Suzy Linux as well from a Windows",
    "start": "798810",
    "end": "803880"
  },
  {
    "text": "perspective we support everything from Windows Server 2003 onwards including the our two versions",
    "start": "803880",
    "end": "809060"
  },
  {
    "text": "and it's worth noting that for Windows instances launched after the end of November last year the SSM agent will be",
    "start": "809060",
    "end": "816140"
  },
  {
    "text": "part of the ec2 tool package that is installed so SSM agent will always already be available on your windows",
    "start": "816140",
    "end": "822080"
  },
  {
    "text": "instances that have been launched from December however for Linux instances even if",
    "start": "822080",
    "end": "827150"
  },
  {
    "text": "they're Amazon Linux you will still need to install the the code I should have",
    "start": "827150",
    "end": "833300"
  },
  {
    "text": "mentioned as well the source code is available on github it's written and go we accept pool requests so if you're",
    "start": "833300",
    "end": "838850"
  },
  {
    "text": "interested in contributing to this or help and support to additional operating systems and so on you know please do",
    "start": "838850",
    "end": "844130"
  },
  {
    "text": "that feedback through github the normal channels and then we will have a look at that in terms of how we install the",
    "start": "844130",
    "end": "850880"
  },
  {
    "start": "849000",
    "end": "849000"
  },
  {
    "text": "agent itself so though it's a very simple we have a command-line I",
    "start": "850880",
    "end": "856100"
  },
  {
    "text": "appreciate for the people at the back this may be a little bit awkward but effectively we download an RPM package",
    "start": "856100",
    "end": "861350"
  },
  {
    "text": "from a cloud front distribution or an s3 bucket I should say we then simply do a",
    "start": "861350",
    "end": "866540"
  },
  {
    "text": "sudo yum install for a Linux or apt-get install for Ubuntu and so on for on",
    "start": "866540",
    "end": "872300"
  },
  {
    "text": "premises we pretty much do exactly the same the only difference is when we install it we need to feed in the activation code in the IDE that we",
    "start": "872300",
    "end": "878900"
  },
  {
    "text": "identified previously for ec2 is even simpler because we can put this as part",
    "start": "878900",
    "end": "884930"
  },
  {
    "start": "882000",
    "end": "882000"
  },
  {
    "text": "of the user data so we can actually just choose to sign piggy primer on the",
    "start": "884930",
    "end": "890660"
  },
  {
    "text": "windows section my apologist so for Windows again an ec2 on instance very",
    "start": "890660",
    "end": "895790"
  },
  {
    "text": "simple to download and install if you're running an order ec2 Windows instance if",
    "start": "895790",
    "end": "901070"
  },
  {
    "text": "you're running a newer instance that'll be there already for on premises pretty much the same thing you need to make the",
    "start": "901070",
    "end": "906320"
  },
  {
    "text": "make a connection to the endpoint download it install it with the activation code if you want to bootstrap",
    "start": "906320",
    "end": "912560"
  },
  {
    "start": "912000",
    "end": "912000"
  },
  {
    "text": "this installation with ec2 user data then you can it's again pretty straightforward you add it to the user",
    "start": "912560",
    "end": "918440"
  },
  {
    "text": "data of your ec2 startup and that will effectively do the same thing on on first boots in this example we're just",
    "start": "918440",
    "end": "925190"
  },
  {
    "text": "installing the the agent what you'll notice as well the we had to make sure",
    "start": "925190",
    "end": "930830"
  },
  {
    "text": "that the I am rule is associated until recently it wasn't possible to attach",
    "start": "930830",
    "end": "936560"
  },
  {
    "text": "anion rule to a running instance so that would have meant restarting now we support the ability to attach in instances you could now quite easily",
    "start": "936560",
    "end": "944000"
  },
  {
    "text": "add ISTA to systems manager in the SSM agent to your existing fully even without having to restart so that's how",
    "start": "944000",
    "end": "950930"
  },
  {
    "text": "you you boot it normally if you're interested in cloud formation there's also a very simple way to do it using cloud formation using information in it",
    "start": "950930",
    "end": "958280"
  },
  {
    "start": "953000",
    "end": "953000"
  },
  {
    "text": "so here we simply set some metadata within the definition that pulls down",
    "start": "958280",
    "end": "963320"
  },
  {
    "text": "the RPM from the source we then run a command to effectively stop and restart the agent and the agent is then up and",
    "start": "963320",
    "end": "969470"
  },
  {
    "text": "running and in the user data we simply call CF n in it to actually execute the",
    "start": "969470",
    "end": "974510"
  },
  {
    "text": "metadata so again there is documentation available on that or if you've got any questions around that speak to me after",
    "start": "974510",
    "end": "981080"
  },
  {
    "text": "the session once it's installed we can check to make sure it's running now one of the key things and one of the benefits of using a C 2 Systems Manager",
    "start": "981080",
    "end": "987710"
  },
  {
    "start": "983000",
    "end": "983000"
  },
  {
    "text": "and we'll talk about that in a minute is you can actually remove the need for having any inbound access to your",
    "start": "987710",
    "end": "992870"
  },
  {
    "text": "instances at all so you don't need an SSH bastion host anymore we can get away without that but in order to check it we",
    "start": "992870",
    "end": "999020"
  },
  {
    "text": "need to be able to just have a look to make sure it's running so we can do that through the console if you go into the",
    "start": "999020",
    "end": "1004840"
  },
  {
    "text": "instance settings and then look at get system log you will see a page like this this is effectively your first run boot",
    "start": "1004840",
    "end": "1011950"
  },
  {
    "text": "script that you will find just look for something that says Amazon SSM agent installed that version might be slightly",
    "start": "1011950",
    "end": "1017320"
  },
  {
    "text": "different and you're up and running the final check you can make is if you look in the ec2 Systems Manager console you",
    "start": "1017320",
    "end": "1024760"
  },
  {
    "text": "can look under the manage instances tab and you can check to see that we have a ping status so here you can see we've",
    "start": "1024760",
    "end": "1030400"
  },
  {
    "text": "got some instances that are reporting back that they're online we can see whether they're Windows or Linux and we can see the version of the agent has",
    "start": "1030400",
    "end": "1036430"
  },
  {
    "text": "been installed so that's that's the prerequisites and we now have SSM agents",
    "start": "1036430",
    "end": "1041589"
  },
  {
    "text": "set up and ready to go so let's start with a simple walkthrough for a run command so if run command what we do we go to",
    "start": "1041590",
    "end": "1048400"
  },
  {
    "text": "the console so all of this is available in the ec2 section of the AWS web",
    "start": "1048400",
    "end": "1054010"
  },
  {
    "text": "console it's near the bottom so you need to scroll down a little bit it's under Systems Manager shared resources and we",
    "start": "1054010",
    "end": "1061060"
  },
  {
    "text": "have a tab called manage instances and this will show all the instances whether they're managed instances or on-premise",
    "start": "1061060",
    "end": "1067150"
  },
  {
    "text": "instances that are managed and that would display and we can then choose to run a command from so there's a run command box and",
    "start": "1067150",
    "end": "1074179"
  },
  {
    "text": "obviously all of these things can also be done from the command line from the API I'm showing the console because it's",
    "start": "1074179",
    "end": "1079220"
  },
  {
    "text": "easier but in practice in production scale you will probably be doing this through the console through the CLI or",
    "start": "1079220",
    "end": "1085580"
  },
  {
    "text": "automation tools so what we then do is once we're in a run command we get the",
    "start": "1085580",
    "end": "1091850"
  },
  {
    "text": "choice to run a series of documents and I'll talk about those a bit more in a minute but you can think of those as the things",
    "start": "1091850",
    "end": "1098000"
  },
  {
    "text": "that run command will do so you can filter that by ones that are owned by you or being produced by Amazon we're",
    "start": "1098000",
    "end": "1104240"
  },
  {
    "text": "it's also possible to share command documents as well so you can write them as share them across accounts if you run a multi account infrastructure or indeed",
    "start": "1104240",
    "end": "1111200"
  },
  {
    "text": "you can use third-party ones and publish them if you've got a particular run command you think command documen you",
    "start": "1111200",
    "end": "1116750"
  },
  {
    "text": "think would be very useful so you select the command document you'll notice that some documents are specific to a",
    "start": "1116750",
    "end": "1122029"
  },
  {
    "text": "particular platform so in this case run shell script is only applicable to Linux if it was run PowerShell script that",
    "start": "1122029",
    "end": "1127700"
  },
  {
    "text": "would only be applicable to Windows in some cases they're applicable to both once we've chosen it we get to choose",
    "start": "1127700",
    "end": "1134690"
  },
  {
    "text": "whether we're going to run it or what instances we're going to run it against from our point of view we can have two",
    "start": "1134690",
    "end": "1139730"
  },
  {
    "text": "choices we can run it against their particular group of instances by selecting a tag in a value attack key",
    "start": "1139730",
    "end": "1145490"
  },
  {
    "text": "and a tag value or we can man you select the instances as well so in this case I've just selected four instances to run",
    "start": "1145490",
    "end": "1151039"
  },
  {
    "text": "it against but typically again tagging you at you so you'll tend to run it against your development at flee to this",
    "start": "1151039",
    "end": "1157940"
  },
  {
    "text": "tag this development or so on we have a few more things through the actual command itself so in this case very",
    "start": "1157940",
    "end": "1163789"
  },
  {
    "text": "simple df- kay to find out much disk space i've got the working directory so if your application needs to run in a",
    "start": "1163789",
    "end": "1169640"
  },
  {
    "text": "different directory from the default the execution time out so how long that particular command will have to execute",
    "start": "1169640",
    "end": "1176270"
  },
  {
    "text": "before it reports back as time that have failed so in most cases you can probably lower it from the default setting but",
    "start": "1176270",
    "end": "1183350"
  },
  {
    "text": "you know you may want to set it if it's going to do a lot of processing you might want to set it to five minutes ten minutes something like that and lastly",
    "start": "1183350",
    "end": "1189500"
  },
  {
    "text": "you can add a comment this is optional but it's useful because you can then identify that in the list of run commands in the interface later on it's",
    "start": "1189500",
    "end": "1197840"
  },
  {
    "text": "also possible to write the output of this not just into the console which is truncated at 2500 characters but also",
    "start": "1197840",
    "end": "1205159"
  },
  {
    "text": "to an s3 bucket so that will give you the ability to post process all that data afterwards and you can choose a",
    "start": "1205159",
    "end": "1210559"
  },
  {
    "text": "particular bucket and a prefix to pull it into and you can also get notifications so you can set it up to",
    "start": "1210559",
    "end": "1216799"
  },
  {
    "text": "send to a particular SSL SNS topic and you can choose whether you want to be notified for things like on failure or",
    "start": "1216799",
    "end": "1223340"
  },
  {
    "text": "on success or on all states and also whether you want to be notified for the overall status of the command execution",
    "start": "1223340",
    "end": "1229309"
  },
  {
    "text": "or for each individual invocation so bear in mind if you've set notification for all states for invitations and",
    "start": "1229309",
    "end": "1236179"
  },
  {
    "text": "you're doing it across a thousand fleets you'll get thousand notifications so please think carefully before what you",
    "start": "1236179",
    "end": "1241190"
  },
  {
    "text": "saw and what you set out for so once you execute that command it will come back it will say the command has been",
    "start": "1241190",
    "end": "1246710"
  },
  {
    "text": "successfully executed you'll get a command ID if you click on that you will then go into a filtered view of the run",
    "start": "1246710",
    "end": "1254359"
  },
  {
    "text": "command interface that will show the command ID the instance ID and whether",
    "start": "1254359",
    "end": "1259759"
  },
  {
    "text": "the status of the execution so in this case it's run on four different things it shows a document that was run the",
    "start": "1259759",
    "end": "1264889"
  },
  {
    "text": "time it was run and the status when this cases was success if I click on that success and drill into a bit more",
    "start": "1264889",
    "end": "1271309"
  },
  {
    "text": "there's a view output and there in the view output I can see effectively the state of the filesystem on that instance",
    "start": "1271309",
    "end": "1277340"
  },
  {
    "text": "but that's done over the four instances it could have done over four hundred instances they could have been on Prem in ec2 and so on in terms of a",
    "start": "1277340",
    "end": "1286369"
  },
  {
    "start": "1286000",
    "end": "1286000"
  },
  {
    "text": "concurrency model you can specify the velocity at which you want to execute those commands so you can choose to",
    "start": "1286369",
    "end": "1292849"
  },
  {
    "text": "execute simultaneously on 2 instances at once or 10 instances once up to anywhere up to about 50 instances at once or you",
    "start": "1292849",
    "end": "1300019"
  },
  {
    "text": "can say a percentage of instances in the fleet again up to a maximum and the way the queuing system works is it will",
    "start": "1300019",
    "end": "1306320"
  },
  {
    "text": "start by sending a command once then it would double they would double again it will keep doubling until it reaches the",
    "start": "1306320",
    "end": "1312470"
  },
  {
    "text": "maximum size of concurrent requests that you want to make so if you're dealing with this fleet of a thousand instances",
    "start": "1312470",
    "end": "1319009"
  },
  {
    "text": "you set a default to 20 or send one two four eight sixteen then twenty at once it'll keep doing it in batches of twenty",
    "start": "1319009",
    "end": "1325460"
  },
  {
    "text": "until it's done the entire fleet as part of that you can also choose how you're gonna handle errors so you can specify",
    "start": "1325460",
    "end": "1332239"
  },
  {
    "start": "1328000",
    "end": "1328000"
  },
  {
    "text": "how many error responses so counsel if I see five errors come back from the and or cancel if I see 5% of the fleet",
    "start": "1332239",
    "end": "1340220"
  },
  {
    "text": "is returned an error and again those are thresholds that you can set what will happen is once that threshold is",
    "start": "1340220",
    "end": "1345320"
  },
  {
    "text": "breached the command will stop executing new commands but existing ones will obviously still continue to execute and",
    "start": "1345320",
    "end": "1351140"
  },
  {
    "text": "either pass or fail and then you'll see those resorts in the console so that's a very quick walk through hundreds of use",
    "start": "1351140",
    "end": "1358850"
  },
  {
    "start": "1356000",
    "end": "1356000"
  },
  {
    "text": "cases for ec2 run command one that we've identified and is particularly relevant when you look in a security by design is",
    "start": "1358850",
    "end": "1366140"
  },
  {
    "text": "reducing the surface area to do that you can actually look at use an ec2 run command to replace your Bastion house",
    "start": "1366140",
    "end": "1372100"
  },
  {
    "text": "sebastien hosts are a traditional design where they act as an ssh jump box you log into the bastion host and from there",
    "start": "1372100",
    "end": "1378320"
  },
  {
    "text": "you access your private infrastructure actually we can remove that now because we can now do things like looking at",
    "start": "1378320",
    "end": "1385789"
  },
  {
    "text": "instances restarting services using ec2 run command it gives you a couple of benefits one it reduces your attack",
    "start": "1385789",
    "end": "1391820"
  },
  {
    "text": "surface and also it gives you greater visibility into what's been done on that instance because it's quite challenging",
    "start": "1391820",
    "end": "1397400"
  },
  {
    "text": "to start following what operators are doing on SSH instances how to capture",
    "start": "1397400",
    "end": "1403490"
  },
  {
    "text": "those logs how to feed them back into a centralized system because run command integrates with I am it means that we",
    "start": "1403490",
    "end": "1409250"
  },
  {
    "text": "can capture all of that using cloud trail and we can start seeing what's happened when who by and so on so it's",
    "start": "1409250",
    "end": "1414470"
  },
  {
    "text": "great from an audit perspective ok that was run command next we're going to look at state manager so state manager is",
    "start": "1414470",
    "end": "1421220"
  },
  {
    "text": "effectively a way of saying we want to do a run command or apply a particular set of changes at a particular period of",
    "start": "1421220",
    "end": "1428270"
  },
  {
    "text": "time on a recurring schedule and to do that we create what we call an association so an association",
    "start": "1428270",
    "end": "1434230"
  },
  {
    "start": "1430000",
    "end": "1430000"
  },
  {
    "text": "effectively determines the actions to be deployed to be applied and that's done using a commander a policy document so",
    "start": "1434230",
    "end": "1440510"
  },
  {
    "text": "in the same as we use the run command run batch scripts we can use a command document there we determine the manage",
    "start": "1440510",
    "end": "1447799"
  },
  {
    "text": "instances to be targeted again we get to say whether it's a tag key or a value or by selecting a group of instances",
    "start": "1447799",
    "end": "1454070"
  },
  {
    "text": "manually and we determine the schedule so it can be every 30 minutes every X number of hours or every week on a",
    "start": "1454070",
    "end": "1460159"
  },
  {
    "text": "particular day at a particular time you can also specify a cron expression as well so you can go for much more sort of",
    "start": "1460159",
    "end": "1466230"
  },
  {
    "text": "granular or complex time patterns if you wish to do it again if we go to the ec2",
    "start": "1466230",
    "end": "1473130"
  },
  {
    "text": "window under the systems manager services we have state manager within state manager we can then create what we",
    "start": "1473130",
    "end": "1479580"
  },
  {
    "text": "call an association for the association when we walk through it we choose a document it's possible to choose a",
    "start": "1479580",
    "end": "1485160"
  },
  {
    "text": "particular version of a document so if you create multiple versions of your document you can then choose for every Association which version you're going",
    "start": "1485160",
    "end": "1491309"
  },
  {
    "text": "to run so it's great for sort of a be testing of your run command and state manager infrastructure you can also then",
    "start": "1491309",
    "end": "1498090"
  },
  {
    "text": "specify which targets so this again is slept by tag so here I've chosen to target all instances we've got an AWS",
    "start": "1498090",
    "end": "1505410"
  },
  {
    "text": "system tag called cloud formation stat name SSM AWS and I'm going to run it every Monday at 2:00 a.m. in the morning",
    "start": "1505410",
    "end": "1512780"
  },
  {
    "text": "if the document you've chosen has supports parameters you can define your parameters in there you can also embed",
    "start": "1512780",
    "end": "1519390"
  },
  {
    "text": "things like parameters store values in there so if you need to better get passwords you can pull that from parameter store on demand you can choose",
    "start": "1519390",
    "end": "1527490"
  },
  {
    "text": "to write the output to s3 if you wish so again if you want to capture all that data for future processing then that's",
    "start": "1527490",
    "end": "1533820"
  },
  {
    "text": "fine and again once you've associated that you will see an association ID and when you click on that Association ID",
    "start": "1533820",
    "end": "1539940"
  },
  {
    "text": "you'll see a list of instances and you'll see the state and that would be sort of pending in progress success",
    "start": "1539940",
    "end": "1545460"
  },
  {
    "text": "failed and so on and that means that at that time that particular command document has been executed against that",
    "start": "1545460",
    "end": "1551640"
  },
  {
    "text": "particular instance and will be re executed every hour every day whatever the cron expression was so again lots of",
    "start": "1551640",
    "end": "1558090"
  },
  {
    "text": "different use cases for this one that's proved very popular and it's got a lot of interest is when we release recently",
    "start": "1558090",
    "end": "1564210"
  },
  {
    "start": "1559000",
    "end": "1559000"
  },
  {
    "text": "which is integration with ansible so a configuration management tool so this allows you to execute configuration",
    "start": "1564210",
    "end": "1570450"
  },
  {
    "text": "management directives use an answer ball and ec2 state manager it makes you serve a document we published called a double",
    "start": "1570450",
    "end": "1576870"
  },
  {
    "text": "yes run out school playbook and as it might suggest you choose the ansible playbook you wish you point it at its location and it will then go and apply",
    "start": "1576870",
    "end": "1583950"
  },
  {
    "text": "that playbook the IC is all the executions of that and all the outputs that that will be tracked in cloud trail",
    "start": "1583950",
    "end": "1589530"
  },
  {
    "text": "and on s3 so you can see what's been happening to infrastructure any particular time",
    "start": "1589530",
    "end": "1595110"
  },
  {
    "text": "next walkthrough we're going to go through is inventory so for inventory this is where you use state manager so",
    "start": "1595110",
    "end": "1602370"
  },
  {
    "start": "1599000",
    "end": "1599000"
  },
  {
    "text": "what we've just talked about to shed you'll a regular collection of inventory from your instance so you could do that",
    "start": "1602370",
    "end": "1607649"
  },
  {
    "text": "once a week once a day down to a minimum of every 30 minutes and there's a policy",
    "start": "1607649",
    "end": "1612929"
  },
  {
    "text": "document for that it's called gather software inventory it runs on both Linux and Windows instances and effectively it",
    "start": "1612929",
    "end": "1618029"
  },
  {
    "text": "uses the SSN agent to retrieve the items that are configured you can determine",
    "start": "1618029",
    "end": "1623039"
  },
  {
    "text": "the type of inventory that would be collected so you can look at installed applications you can look at things like",
    "start": "1623039",
    "end": "1628169"
  },
  {
    "text": "a software component so we've got the cloud watch logs agent or the inspector agent etc you can ask it to pull the",
    "start": "1628169",
    "end": "1634590"
  },
  {
    "text": "network configuration so any particular time you can see if his IP address has changed you can pull custom inventory",
    "start": "1634590",
    "end": "1640380"
  },
  {
    "text": "information so you can actually choose to start writing things like on an on-premises environment you might choose",
    "start": "1640380",
    "end": "1646139"
  },
  {
    "text": "to write this particular VMs out on this physical server which is in this particular rack in this particular building and so on so you can push that",
    "start": "1646139",
    "end": "1652769"
  },
  {
    "text": "information in and lastly for Windows instances you can look at the status of Windows Update as well we view that",
    "start": "1652769",
    "end": "1660419"
  },
  {
    "start": "1659000",
    "end": "1659000"
  },
  {
    "text": "through the console so again we look at the managed instances tab from there we",
    "start": "1660419",
    "end": "1666659"
  },
  {
    "text": "have a tab called inventory and then from there we're able to see in this case this instance has got the Amazon",
    "start": "1666659",
    "end": "1671730"
  },
  {
    "text": "SSM agent is stored on it it's got PV power virtualization drivers the CFM",
    "start": "1671730",
    "end": "1677279"
  },
  {
    "text": "bootstrap agent and so on it's also possible to do that using the command line so if you want to pull that out and",
    "start": "1677279",
    "end": "1683370"
  },
  {
    "text": "export that data you can do that using the CLI and and this is probably from me",
    "start": "1683370",
    "end": "1688710"
  },
  {
    "start": "1687000",
    "end": "1687000"
  },
  {
    "text": "really very important integrates with a diverse config as well so not only it will conflict now for that instance show",
    "start": "1688710",
    "end": "1694200"
  },
  {
    "text": "you what's changed from an ape aid Amazon API perspective in terms of things like I've added a block volume or",
    "start": "1694200",
    "end": "1700080"
  },
  {
    "text": "I've changed the security group setting or so on it will now say on the 23rd of February we made some changes and that",
    "start": "1700080",
    "end": "1706440"
  },
  {
    "text": "was we installed some software or we removed some software or we changed the patch level or we change the network",
    "start": "1706440",
    "end": "1711750"
  },
  {
    "text": "configuration we added cloud watch logs agent for example and again this is part of yes this is information is recorded",
    "start": "1711750",
    "end": "1719220"
  },
  {
    "text": "with an ADA biscone fix or whatever you can do with a dough is config such as conflict rules and so on will also work",
    "start": "1719220",
    "end": "1724470"
  },
  {
    "text": "with this data so you can start beginning start to begin to build really functional automated deep work flows",
    "start": "1724470",
    "end": "1731080"
  },
  {
    "text": "around things like am I in have I installed a particular version of the",
    "start": "1731080",
    "end": "1736390"
  },
  {
    "text": "application do I know if that version is vulnerable if so I want to report that as a config rule that config will report",
    "start": "1736390",
    "end": "1743440"
  },
  {
    "text": "those a non-compliant is then possible to automatically remediate that by sending a run command that there's a young update so as you can see you can",
    "start": "1743440",
    "end": "1749470"
  },
  {
    "text": "start begin to build really complex powerful workflows that will build out and manage your infrastructure",
    "start": "1749470",
    "end": "1755500"
  },
  {
    "text": "automatically also integrates with things that Amazon quick site to see if the start doing reporting against that",
    "start": "1755500",
    "end": "1761140"
  },
  {
    "start": "1757000",
    "end": "1757000"
  },
  {
    "text": "and because you can its access over the API you can start pulling data back into third-party tools as well",
    "start": "1761140",
    "end": "1768300"
  },
  {
    "text": "the last walkthrough we're going to cover now is four documents so documents are what happens within this",
    "start": "1768300",
    "end": "1775360"
  },
  {
    "text": "infrastructure so documents define the actions that are performed on the manage instances and there are three types of",
    "start": "1775360",
    "end": "1781690"
  },
  {
    "start": "1777000",
    "end": "1777000"
  },
  {
    "text": "documents that we currently support there are command documents which you use to define and execute either a",
    "start": "1781690",
    "end": "1786700"
  },
  {
    "text": "single command or a group of commands there are policy documents which allow you to enforce a policy on targets so",
    "start": "1786700",
    "end": "1793330"
  },
  {
    "text": "for example a policy that requires you to gather it instance inventory every half hour and lastly automation documents which",
    "start": "1793330",
    "end": "1800170"
  },
  {
    "text": "work with the automation service to do things like define the steps needed to build out a new AMI and those might",
    "start": "1800170",
    "end": "1806380"
  },
  {
    "text": "include executing other command documents such as run a shell script that runs updates or pools down in the",
    "start": "1806380",
    "end": "1811990"
  },
  {
    "text": "source software and so on so the administer of the automation documents can also reference other documents in",
    "start": "1811990",
    "end": "1817810"
  },
  {
    "text": "terms of the format of the documents they're formatted in JSON they support editing and versioning certainly since",
    "start": "1817810",
    "end": "1824680"
  },
  {
    "text": "the new version was released back here at reinvent there's a secret thing of steps within there and you can use the",
    "start": "1824680",
    "end": "1832420"
  },
  {
    "text": "AWS management you can use your own ones or you can also find ones that be shared",
    "start": "1832420",
    "end": "1837880"
  },
  {
    "text": "from other accounts in terms of a document itself its structure you will have a vergence to the schema version so",
    "start": "1837880",
    "end": "1843970"
  },
  {
    "start": "1839000",
    "end": "1839000"
  },
  {
    "text": "we're on schema version 2 the previous run command was skiing the version 1.2",
    "start": "1843970",
    "end": "1849040"
  },
  {
    "text": "so you may see some old legacy documents if you use DC or if you use run command",
    "start": "1849040",
    "end": "1854230"
  },
  {
    "text": "when it was launched back in 2015-2016 you may see some command documents that are structured with that but we highly",
    "start": "1854230",
    "end": "1859570"
  },
  {
    "text": "recommend move to the newest version this allows you to do a few more things like structure steps so you can have",
    "start": "1859570",
    "end": "1865460"
  },
  {
    "text": "multiple steps within the command they can be dependencies so step what to will",
    "start": "1865460",
    "end": "1870529"
  },
  {
    "text": "only execute if step one succeeds and so on and you can also parameters the inputs you can say I want it to work",
    "start": "1870529",
    "end": "1876740"
  },
  {
    "text": "basically on a production environment or a dev environment or IP address is",
    "start": "1876740",
    "end": "1882529"
  },
  {
    "text": "provided and so on and this is really what a command document looks like apologies at the back if you can't see",
    "start": "1882529",
    "end": "1889039"
  },
  {
    "text": "that very well but the key here is we're just we've created a very simple run that does the check update counts the",
    "start": "1889039",
    "end": "1895760"
  },
  {
    "text": "number of lines gets rid of the header line and then reports back saying there are X packages that need updating so",
    "start": "1895760",
    "end": "1901549"
  },
  {
    "text": "very very simply it's a tool that allows us to check Linux sentences to see how many packages are available for for",
    "start": "1901549",
    "end": "1907940"
  },
  {
    "text": "updating where it gets really interesting is how you start integrating that with other services so we integrate",
    "start": "1907940",
    "end": "1915169"
  },
  {
    "start": "1914000",
    "end": "1914000"
  },
  {
    "text": "with cloud watch events and we integrate both as a source and a target so for people who aren't familiar with cloud",
    "start": "1915169",
    "end": "1920450"
  },
  {
    "text": "watch events these look for a specific activity within an AWS account and then allow you to trigger responses based on",
    "start": "1920450",
    "end": "1927080"
  },
  {
    "text": "that activity so in this case we act for event type so you can trigger something",
    "start": "1927080",
    "end": "1932419"
  },
  {
    "text": "when a run command runs or when an association is applied you can look for specific statuses so I only interested",
    "start": "1932419",
    "end": "1939380"
  },
  {
    "text": "in triggering this cloud watch rule or Eclair event rule when a command invocation fails and I only interested",
    "start": "1939380",
    "end": "1946850"
  },
  {
    "text": "when it fails on production instances so you can start producing a really granular set of sources and then from a",
    "start": "1946850",
    "end": "1954080"
  },
  {
    "text": "target perspective you can also target run commands so you can say as a resort I might have a watch event that says",
    "start": "1954080",
    "end": "1961210"
  },
  {
    "text": "checks to see if s if sshd is installed on my instance if it isn't or so if it",
    "start": "1961210",
    "end": "1966860"
  },
  {
    "text": "is then at perhaps I might run a document that removes it because I don't want SSH the available on my infrastructure anymore those targets",
    "start": "1966860",
    "end": "1973100"
  },
  {
    "text": "turn in pass information such as parameters and I am rules and so on so it's able to build a very tightly",
    "start": "1973100",
    "end": "1979399"
  },
  {
    "text": "integrated tightly coupled service as an example so a very quick walkthrough here",
    "start": "1979399",
    "end": "1985549"
  },
  {
    "start": "1982000",
    "end": "1982000"
  },
  {
    "text": "is a very simple lambda function written in Python that takes the output of a run",
    "start": "1985549",
    "end": "1991480"
  },
  {
    "text": "and parses it and then effectively takes each invocation of that run command and",
    "start": "1991480",
    "end": "1996820"
  },
  {
    "text": "stores that as a separate login cloud watch events assign cloud watch logs so this means that I'm able to set up",
    "start": "1996820",
    "end": "2003270"
  },
  {
    "text": "something and as an example you know it's not particularly thrilling but what it does mean is instead of logging in",
    "start": "2003270",
    "end": "2009570"
  },
  {
    "text": "cloud watch logs I might actually choose to execute a run command that patches it or sends a report to security saying you",
    "start": "2009570",
    "end": "2015120"
  },
  {
    "text": "know this instance is has got something installed that it shouldn't or so on and so what happens is going back to the",
    "start": "2015120",
    "end": "2022020"
  },
  {
    "text": "cloud watch events we create a rule in this case we're looking for a run command any status change notification",
    "start": "2022020",
    "end": "2028530"
  },
  {
    "text": "we then target the lambda function that's just been written as the source",
    "start": "2028530",
    "end": "2033600"
  },
  {
    "text": "so this will mean that anytime a command is invoked it will execute that lambda function that lambda function would run",
    "start": "2033600",
    "end": "2039030"
  },
  {
    "text": "the code I just mentioned and you end up with the output in Cladwell cloud watch logs a bit like this so it's",
    "start": "2039030",
    "end": "2044640"
  },
  {
    "start": "2040000",
    "end": "2040000"
  },
  {
    "text": "just logging out in this case the update for every instances telling me how many packages need updating so again we've",
    "start": "2044640",
    "end": "2053909"
  },
  {
    "start": "2053000",
    "end": "2053000"
  },
  {
    "text": "got some examples of this on the management tools blog this one's quite an interesting one and it is only",
    "start": "2053910",
    "end": "2059280"
  },
  {
    "text": "scratching the surface of what's possible but this is things like remediate Amazon aspecto findings so I'm",
    "start": "2059280",
    "end": "2064320"
  },
  {
    "text": "as an inspector is an agent you can install on ec2 instances that will allow you to check for things like CV",
    "start": "2064320",
    "end": "2071340"
  },
  {
    "text": "vulnerabilities for suspicious Network activity and so on and so forth and what",
    "start": "2071340",
    "end": "2076620"
  },
  {
    "text": "we can do is that can trigger a lambda function which can then call ec2 Systems Manager to update the instance and",
    "start": "2076620",
    "end": "2082560"
  },
  {
    "text": "remediate the issue and that's got a broad application to in multiple use cases in terms of patching security",
    "start": "2082560",
    "end": "2090090"
  },
  {
    "text": "updates permissions versioning and so on as worth mentioning here that we've only",
    "start": "2090090",
    "end": "2095730"
  },
  {
    "text": "scratched the surface so that's a walkthrough of four services at the moment we've got three more that we've",
    "start": "2095730",
    "end": "2101070"
  },
  {
    "text": "talked about so for maintenance windows as I mentioned also actually perform tasks and defined Windows at time and we",
    "start": "2101070",
    "end": "2108990"
  },
  {
    "start": "2102000",
    "end": "2102000"
  },
  {
    "text": "can prioritize tasks within that maintenance window as well so it allows us to say we really want to make sure we patch this if we've got time afterwards",
    "start": "2108990",
    "end": "2116370"
  },
  {
    "text": "we might do some log farm maintenance or so on but it ensures that the key priorities are carried out and those",
    "start": "2116370",
    "end": "2122160"
  },
  {
    "text": "tasks are executed with specific control permissions granted by I am so you can say that a particular task runs with a",
    "start": "2122160",
    "end": "2129020"
  },
  {
    "text": "particular set of permissions so you can be very granular about what it can do within AWS from a patch management perspective this",
    "start": "2129020",
    "end": "2137840"
  },
  {
    "start": "2133000",
    "end": "2133000"
  },
  {
    "text": "is currently Windows only we're actively working on support for Linux but the at",
    "start": "2137840",
    "end": "2144320"
  },
  {
    "text": "the moment what we can do is we can manage patch baselines so this allows you to define the patch Bay slice both",
    "start": "2144320",
    "end": "2149570"
  },
  {
    "text": "by products you can have a patch baseline for Windows Server 2012 r2 and a separate one for 2016",
    "start": "2149570",
    "end": "2155000"
  },
  {
    "text": "or by category so you can have a baseline that says we want to address all critical updates or by severity so",
    "start": "2155000",
    "end": "2161330"
  },
  {
    "text": "anything that's important or an update or so on and then you can start to find an approval and distribution schedules for those specific baselines what you",
    "start": "2161330",
    "end": "2168440"
  },
  {
    "text": "then do is you associate that baseline through a tag in ec2 tour patch group so",
    "start": "2168440",
    "end": "2175280"
  },
  {
    "text": "you could then define which set of baselines apply to which particular group of instances and then patch",
    "start": "2175280",
    "end": "2181280"
  },
  {
    "text": "compliance allows you to scan the existing fleet see which patches need to be applied see which ones are available",
    "start": "2181280",
    "end": "2187430"
  },
  {
    "text": "and then if necessary apply them either immediately or during a maintenance window or as part of an association so",
    "start": "2187430",
    "end": "2193400"
  },
  {
    "text": "again multiple ways of doing that depending on whether it's a dev environment you want to patch immediately or production and you need to wait for a scheduled maintenance",
    "start": "2193400",
    "end": "2199370"
  },
  {
    "text": "window automation so this becomes more and more useful as you sort of increase",
    "start": "2199370",
    "end": "2206630"
  },
  {
    "start": "2200000",
    "end": "2200000"
  },
  {
    "text": "your journey into AWS and you start doing things like immutable deployments you start building a.m. is on a regular",
    "start": "2206630",
    "end": "2211760"
  },
  {
    "text": "basis this allows you to do things like maintain an update your a.m. eyes we",
    "start": "2211760",
    "end": "2217100"
  },
  {
    "text": "again we integrate with cloud watch so it might be that if you what you want to do is if you've created a new ami you",
    "start": "2217100",
    "end": "2222860"
  },
  {
    "text": "may then choose to update a launch configuration or an auto scaling group so that you can then relaunch all your",
    "start": "2222860",
    "end": "2228710"
  },
  {
    "text": "instances with the next set of updated a.m. eyes it also means that you can take an ami and bake new versions of",
    "start": "2228710",
    "end": "2234860"
  },
  {
    "text": "your application into that into the application at any particular time so it's a great way of automating your",
    "start": "2234860",
    "end": "2240440"
  },
  {
    "text": "change management process from an ami template perspective and then lastly",
    "start": "2240440",
    "end": "2246670"
  },
  {
    "start": "2244000",
    "end": "2244000"
  },
  {
    "text": "parameter store so from our point of view the parameters are security items",
    "start": "2246670",
    "end": "2252740"
  },
  {
    "text": "their customer data we want to keep them as secure as possible so promise store allows you to take",
    "start": "2252740",
    "end": "2258170"
  },
  {
    "text": "parameters and store them securely encrypted with kms worth pointing out in the console it",
    "start": "2258170",
    "end": "2263390"
  },
  {
    "text": "uses a default key if you create the parameters from the command line you can specify your own custom kms keys as well",
    "start": "2263390",
    "end": "2270140"
  },
  {
    "text": "and then what that means is you can grant iEARN permissions to be able to access those parameters whether they're",
    "start": "2270140",
    "end": "2276530"
  },
  {
    "text": "plaintext or secrets in your instance or in your run command documents and so on",
    "start": "2276530",
    "end": "2281830"
  },
  {
    "text": "so the use cases again multiple use cases one of the earliest use cases worthless things like doing automated",
    "start": "2281830",
    "end": "2288320"
  },
  {
    "text": "domain join if you need to have a username and password that allows you to domain join a Windows server then you",
    "start": "2288320",
    "end": "2295040"
  },
  {
    "text": "can do that by creating a secure string parameter with the domain join password and then control access to that so that",
    "start": "2295040",
    "end": "2301430"
  },
  {
    "text": "it's available in the run command document but it's never actually either stored or visible in any logs anywhere on the instances recently released as in",
    "start": "2301430",
    "end": "2309380"
  },
  {
    "text": "I believe last week we now support support parameter hierarchies so before",
    "start": "2309380",
    "end": "2315770"
  },
  {
    "text": "you just defined the parameter as a particular name and they had to be unique now we support a path based solution so we can now say production /",
    "start": "2315770",
    "end": "2323990"
  },
  {
    "text": "windows / database / username and now what we can do is within I am you can",
    "start": "2323990",
    "end": "2330800"
  },
  {
    "text": "grant permissions a resource level that say only this set of I am users can access anything under production so",
    "start": "2330800",
    "end": "2337730"
  },
  {
    "text": "people who are in the developers team can ask access production secrets so it's a great way of splitting parameter",
    "start": "2337730",
    "end": "2344000"
  },
  {
    "text": "security across customers so in summary",
    "start": "2344000",
    "end": "2349480"
  },
  {
    "start": "2347000",
    "end": "2347000"
  },
  {
    "text": "hybrid you know that's key to point out this works on premises and in AWS it's",
    "start": "2349480",
    "end": "2355490"
  },
  {
    "text": "cross platform supports multiple flavors of Linux multiple versions of Windows it's highly scalable it's designed to",
    "start": "2355490",
    "end": "2361400"
  },
  {
    "text": "run you know at cloud scale thousands and tens of thousands of servers it's highly secure it's effectively",
    "start": "2361400",
    "end": "2368990"
  },
  {
    "text": "there's no inbound access to the instances very granular controls around iEARN permissions very easy to write in",
    "start": "2368990",
    "end": "2375440"
  },
  {
    "text": "terms of automation and hopefully you know a reasonably well reduced total cost of ownership so that's me I've got",
    "start": "2375440",
    "end": "2384350"
  },
  {
    "text": "about 10 minutes left quick show of hands you've got a choice you can either leave ten minutes early or",
    "start": "2384350",
    "end": "2390670"
  },
  {
    "text": "I can give a very quick demo and see if I can break things on the internet demo or leave demo okay all right so this is",
    "start": "2390670",
    "end": "2409870"
  },
  {
    "text": "my ec2 console and if you look I've got sixty running instances at the moment if",
    "start": "2409870",
    "end": "2415360"
  },
  {
    "text": "I just look in this I've got various ones so I've put three tags on I've put",
    "start": "2415360",
    "end": "2420520"
  },
  {
    "text": "the tag environment whether that's development or whether it's wind production OS whether it's Linux of",
    "start": "2420520",
    "end": "2425950"
  },
  {
    "text": "Windows and patch group so patch group only applies to Windows but if I look at the windows that got things like dev",
    "start": "2425950",
    "end": "2432040"
  },
  {
    "text": "batch 1 dev batch 2 and so on so what we would do would just show a very simple run command demo to start with so I'm",
    "start": "2432040",
    "end": "2438370"
  },
  {
    "text": "going to go to run command I'm going to choose to run a command let's go for run",
    "start": "2438370",
    "end": "2444730"
  },
  {
    "text": "a shell script I want to do it against the tag that tag name is going to be OS",
    "start": "2444730",
    "end": "2451860"
  },
  {
    "text": "the value is going to be Linux I'm going",
    "start": "2451860",
    "end": "2457180"
  },
  {
    "text": "to choose to execute on five targets concurrently I want to stop after two errors and the command that will be the",
    "start": "2457180",
    "end": "2465520"
  },
  {
    "text": "F minus kegs I don't to break anything live demo and then we will run that so",
    "start": "2465520",
    "end": "2475600"
  },
  {
    "text": "that's now executed if I look at the command ID and filter that I can now see so it's targeting more than 30 summer in",
    "start": "2475600",
    "end": "2483850"
  },
  {
    "text": "progress some have succeeded if I hit refresh on there I can now see the",
    "start": "2483850",
    "end": "2489430"
  },
  {
    "text": "majority of them succeeded if I click on one of those and I go to the output and",
    "start": "2489430",
    "end": "2496030"
  },
  {
    "text": "I go into view output I can now see I've got the live D F minus K output so that",
    "start": "2496030",
    "end": "2501640"
  },
  {
    "text": "was a very simple example let's go for something a little bit more complex since that one worked so if I go back to",
    "start": "2501640",
    "end": "2507640"
  },
  {
    "text": "a do s config what I've got here is I've got a rule that says the rule that",
    "start": "2507640",
    "end": "2514360"
  },
  {
    "text": "checks the managed instance inventory that I've collected through the State Association that I've done for a",
    "start": "2514360",
    "end": "2519790"
  },
  {
    "text": "gathering inventory on those instances I've got an application I blacklist it called sssh the remote shell and I don't want",
    "start": "2519790",
    "end": "2527260"
  },
  {
    "text": "that so if I look here I can see that the rule will show me it's evaluated a number of instances and here are the",
    "start": "2527260",
    "end": "2535210"
  },
  {
    "text": "non-compliant ones there are some compliant ones so actually what I want to do is probably go away and try and",
    "start": "2535210",
    "end": "2540670"
  },
  {
    "text": "fix that so I will go into ec2 I will go",
    "start": "2540670",
    "end": "2547690"
  },
  {
    "text": "into run command I'm gonna run a command again it's going to be a run shell",
    "start": "2547690",
    "end": "2555490"
  },
  {
    "text": "script I'm gonna specify a tag OS Linux",
    "start": "2555490",
    "end": "2564060"
  },
  {
    "text": "execute on five and this time I'm going to do it yum - why remove our SSH",
    "start": "2564060",
    "end": "2572700"
  },
  {
    "text": "and live demo to run that one so because",
    "start": "2573700",
    "end": "2582190"
  },
  {
    "text": "this is doing something other than a very simple command it will take a little bit longer but again I can look to see which ones are in progress which",
    "start": "2582190",
    "end": "2587800"
  },
  {
    "text": "ones have succeeded just what it's doing that if I go back to config and this is where it gets sort of really interesting",
    "start": "2587800",
    "end": "2594750"
  },
  {
    "text": "if I look at these rules and I can see there some that are non-compliant if I click on the config timeline for this I",
    "start": "2594750",
    "end": "2600910"
  },
  {
    "text": "now go into the nice graphical view that shows me the state of the instances at",
    "start": "2600910",
    "end": "2605920"
  },
  {
    "text": "that particular time so I spun up the instance here I then made a change here and I made a change here if I look at this change you can",
    "start": "2605920",
    "end": "2612490"
  },
  {
    "text": "see here this trap the fact that I actually installed our SSH so my initial state was from nothing state to having",
    "start": "2612490",
    "end": "2620200"
  },
  {
    "text": "that application installed and I can also get a lot more detailed information in terms of from a programmatic",
    "start": "2620200",
    "end": "2627280"
  },
  {
    "text": "perspective what that those details look like so this is available in a sort of JSON format so you can then start",
    "start": "2627280",
    "end": "2633310"
  },
  {
    "text": "consuming this in things like you know ServiceNow or other type of CMDB tools",
    "start": "2633310",
    "end": "2639340"
  },
  {
    "text": "you can then start automatically tracking what's happening so what will",
    "start": "2639340",
    "end": "2644830"
  },
  {
    "text": "happen just in the background is if we",
    "start": "2644830",
    "end": "2651580"
  },
  {
    "text": "look at this run command so they've succeeded so what we want to do now is",
    "start": "2651580",
    "end": "2657420"
  },
  {
    "text": "that hopefully no longer has the our SSH instance on there now I've got an association a state manager association",
    "start": "2657420",
    "end": "2664330"
  },
  {
    "text": "that says I'm going to gather inventory on production and development environments every half hour what I'm",
    "start": "2664330",
    "end": "2670120"
  },
  {
    "text": "going to do is just to trigger that I'm going to apply that association now so it's going to go away and actually react so keep that now rather than every 30",
    "start": "2670120",
    "end": "2676510"
  },
  {
    "text": "minutes so I don't wanna keep you from the next session and what we'll do is if I tap into the instances tab here it",
    "start": "2676510",
    "end": "2682420"
  },
  {
    "text": "will then tell me what's happening here and the last execution time so it's pending at the moment in fact the last",
    "start": "2682420",
    "end": "2688540"
  },
  {
    "text": "execution time actually executes only three minutes ago anyway so it's just reapplying this we'll just wait for some",
    "start": "2688540",
    "end": "2696190"
  },
  {
    "text": "of that to come through and then after a couple of minutes what will happen is that information will",
    "start": "2696190",
    "end": "2702339"
  },
  {
    "text": "feed back into a do s config and if I look at some of those instances now I will see there's another item in a doe s",
    "start": "2702339",
    "end": "2707650"
  },
  {
    "text": "config that was showed that it changed from having that to not having that so I've now got tracking of what happened",
    "start": "2707650",
    "end": "2714130"
  },
  {
    "text": "and what hasn't and then again with a SS config if we look at the rules",
    "start": "2714130",
    "end": "2722670"
  },
  {
    "text": "so this reevaluate severy few minutes so at the moment it still says 20 but after a little while that would change and",
    "start": "2722670",
    "end": "2728079"
  },
  {
    "text": "hopefully that would go down to 10 because my 10 production instances are no longer running our ssh so that's just",
    "start": "2728079",
    "end": "2733480"
  },
  {
    "text": "a very sort of quick straightforward workflow on on how to use that last leak",
    "start": "2733480",
    "end": "2739180"
  },
  {
    "text": "so I've got four minutes left for people who are interested this is how the windows patch works so if I look at",
    "start": "2739180",
    "end": "2745450"
  },
  {
    "text": "patch compliance I can report by instances or patch groups so here I'm gonna report on dev patch one so this is",
    "start": "2745450",
    "end": "2751960"
  },
  {
    "text": "telling me that based on the most recent view of the data five instances are up to date none are no no missing updates",
    "start": "2751960",
    "end": "2760569"
  },
  {
    "text": "and none are in arrow states if I look at production batch one that's the same if I look at production batch two",
    "start": "2760569",
    "end": "2766529"
  },
  {
    "text": "actually you'll find the five instances of missing updates because I haven't patched those yet and if I drill into that instance I can then start looking",
    "start": "2766529",
    "end": "2773499"
  },
  {
    "text": "at the patches that been applied to it I can go even granular so I can start filtering I can say patch status to be",
    "start": "2773499",
    "end": "2780700"
  },
  {
    "text": "missing so we should actually telling me there's two patches missing there okay so that's great so this is batch 2 so",
    "start": "2780700",
    "end": "2787210"
  },
  {
    "text": "what I would do I will actually take that ID and again this is something you could do automatically but I could",
    "start": "2787210",
    "end": "2793539"
  },
  {
    "text": "choose to run a command I'm going to install a specific Windows Update I'm going to specify it against a tag and",
    "start": "2793539",
    "end": "2800739"
  },
  {
    "text": "it's against patch group as prod",
    "start": "2800739",
    "end": "2806560"
  },
  {
    "text": "batch two",
    "start": "2806560",
    "end": "2811990"
  },
  {
    "text": "I can execute it on all five and I'm going to provide the parameter which is that document three and run that so",
    "start": "2811990",
    "end": "2823030"
  },
  {
    "text": "hopefully what that will do now is that will go away and now that's applying that knowledge base patch to five instances simultaneously based on the",
    "start": "2823030",
    "end": "2829600"
  },
  {
    "text": "fact we've identified that patch was missing now if we'd set up maintenance windows and unfortunately there's not",
    "start": "2829600",
    "end": "2835150"
  },
  {
    "text": "time to demo that here that maintenance when they would have done that for us so at 2:00 a.m. on a Sunday would have",
    "start": "2835150",
    "end": "2840220"
  },
  {
    "text": "identified that those patches were missing not in compliance with the patch baseline and therefore would have gone",
    "start": "2840220",
    "end": "2845230"
  },
  {
    "text": "away and install that patch these patches take a while because they're going and pulling the data and then",
    "start": "2845230",
    "end": "2851320"
  },
  {
    "text": "installing it and in some cases they may need to reboot it so we will sort of leave that running and we'll just",
    "start": "2851320",
    "end": "2857350"
  },
  {
    "text": "quickly go back to the comm saw ya know so it's not quite updated yet in terms of the effort but again if I click into",
    "start": "2857350",
    "end": "2863710"
  },
  {
    "text": "one of these once configured dates with the data I will see that I in the config timeline I will have another item in",
    "start": "2863710",
    "end": "2869770"
  },
  {
    "text": "there saying that's now been remediated okay and that leaves me with two minutes",
    "start": "2869770",
    "end": "2874869"
  },
  {
    "text": "to go so I think at that I'll probably give you a couple of minutes to get to the next session and thank you very much for your time",
    "start": "2874869",
    "end": "2880580"
  },
  {
    "text": "[Applause]",
    "start": "2880580",
    "end": "2884590"
  }
]