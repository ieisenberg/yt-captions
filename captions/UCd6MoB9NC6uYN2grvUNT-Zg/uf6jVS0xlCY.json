[
  {
    "start": "0",
    "end": "44000"
  },
  {
    "text": "hi thank you for coming and welcome to our session the future of cloud built in",
    "start": "30",
    "end": "5970"
  },
  {
    "text": "with stateless infrastructure on Amazon ec2 my name is Mikkel brudno cough and I'm a Solutions Architect with Amazon",
    "start": "5970",
    "end": "13290"
  },
  {
    "text": "Web Services and here on stage and pleased to have Jean Stephens a",
    "start": "13290",
    "end": "18740"
  },
  {
    "text": "co-founder and the chief technology officer at protect wise and robert",
    "start": "18740",
    "end": "24449"
  },
  {
    "text": "terrell director of devops at protect wise protect wise is an advanced",
    "start": "24449",
    "end": "29460"
  },
  {
    "text": "technology partner with Amazon Web Services and this product the protect wise greed but provides network",
    "start": "29460",
    "end": "36210"
  },
  {
    "text": "visibility and the detection of complex threats that develop over time that's that's the key here so the premise that",
    "start": "36210",
    "end": "46230"
  },
  {
    "start": "44000",
    "end": "44000"
  },
  {
    "text": "sparked the idea of today's talk was that the cloud enables companies to innovate at an increasing pace and rate",
    "start": "46230",
    "end": "53820"
  },
  {
    "text": "and much faster bring products to the market the products that take on very",
    "start": "53820",
    "end": "59969"
  },
  {
    "text": "complex problems and deal with massive data sets that only keep larger and",
    "start": "59969",
    "end": "65128"
  },
  {
    "text": "larger this time however however draw sets of ideas and some kind of",
    "start": "65129",
    "end": "72600"
  },
  {
    "text": "operational practices that need to be followed to maintain and support that innovation innovation base as the",
    "start": "72600",
    "end": "80159"
  },
  {
    "text": "company grows and scales there its infrastructure so today we wanted to",
    "start": "80159",
    "end": "86759"
  },
  {
    "text": "talk about some of the ideas and some of the operational practices as well as demonstrate how protect wise implemented",
    "start": "86759",
    "end": "93479"
  },
  {
    "text": "them in real life so let's get started we're going to cover mutable versus",
    "start": "93479",
    "end": "100740"
  },
  {
    "text": "immutable infrastructure talk about implementation tips cover in an immutable infrastructure at scale and as",
    "start": "100740",
    "end": "108090"
  },
  {
    "text": "well address topics on delivery cost optimization and scaling so while there",
    "start": "108090",
    "end": "115590"
  },
  {
    "text": "is a strict definition of immutability which is once an object is created it cannot be modified if we apply the",
    "start": "115590",
    "end": "122579"
  },
  {
    "text": "concept to the cloud and to to the infrastructure then many people actually",
    "start": "122579",
    "end": "127799"
  },
  {
    "text": "they're very at level at which they apply it to some some stop with with",
    "start": "127799",
    "end": "133800"
  },
  {
    "text": "servers being immutable others go to hole applications tags being immutable",
    "start": "133800",
    "end": "138900"
  },
  {
    "text": "including the VP sees that those that application stack lives in however",
    "start": "138900",
    "end": "144780"
  },
  {
    "text": "however what's important is that the ideas the ideas and properties that",
    "start": "144780",
    "end": "151260"
  },
  {
    "text": "people are trying to achieve is that design actually there are three so one",
    "start": "151260",
    "end": "156390"
  },
  {
    "text": "the first property is repeatability once I know how to create my object I can do",
    "start": "156390",
    "end": "162870"
  },
  {
    "text": "it over and over again and that is extremely important as we scale our infrastructure the second principle is",
    "start": "162870",
    "end": "170780"
  },
  {
    "text": "statelessness once we have immutable object and there is some some kind of",
    "start": "170780",
    "end": "177690"
  },
  {
    "text": "state associated it means that that state is managed elsewhere it's managed outside of that immutable object and",
    "start": "177690",
    "end": "184050"
  },
  {
    "text": "once we assume that we have those two properties repeatability and statelessness it means that essentially",
    "start": "184050",
    "end": "192510"
  },
  {
    "text": "by extension our infrastructure also has this property of disposability it means",
    "start": "192510",
    "end": "198780"
  },
  {
    "text": "that we know how to build it and then we can actually tear it down and recreate it when we need it totally opposite over",
    "start": "198780",
    "end": "208350"
  },
  {
    "start": "206000",
    "end": "206000"
  },
  {
    "text": "it is everyone's darling bad server and you know how it starts it's very easy to",
    "start": "208350",
    "end": "214200"
  },
  {
    "text": "start to you you just spin up the server install software and configure it and then as the time goes on you start",
    "start": "214200",
    "end": "221010"
  },
  {
    "text": "modifying things tweaking conflicts here and there there you go you start getting configuration drift and the problem is",
    "start": "221010",
    "end": "227520"
  },
  {
    "text": "that not only you lose track of what's going on with your instance it's very hard to actually implement this approach",
    "start": "227520",
    "end": "234360"
  },
  {
    "text": "at scale not only this concept of bad servers it applies to two servers if you",
    "start": "234360",
    "end": "243720"
  },
  {
    "text": "look at let's say somebody creating a DPC manually or adds in a security group",
    "start": "243720",
    "end": "249000"
  },
  {
    "text": "here and security rule there like there you go you just created an equivalent of a per server but inside your larger",
    "start": "249000",
    "end": "256140"
  },
  {
    "text": "infrastructure another one is people like to give names to to their pets and",
    "start": "256140",
    "end": "262440"
  },
  {
    "text": "that's that's a little bit hard because once you hit the server counts like 200 you start running out of ideas and",
    "start": "262440",
    "end": "270120"
  },
  {
    "text": "one way to actually mitigate this approach it's a concept of Phoenix Phoenix servers and Phoenix",
    "start": "270120",
    "end": "276160"
  },
  {
    "start": "271000",
    "end": "271000"
  },
  {
    "text": "infrastructure and they really like this analogy determined was the term was popularized by martin fowler and it",
    "start": "276160",
    "end": "283510"
  },
  {
    "text": "means that once once we are satisfied with the state of our system or more like dissatisfied with the state of our",
    "start": "283510",
    "end": "289720"
  },
  {
    "text": "system we actually tear it down and recreate that with hopes that the new the new configuration that we have it",
    "start": "289720",
    "end": "295960"
  },
  {
    "text": "converges and we have all the latest changes applied however however if if we",
    "start": "295960",
    "end": "302440"
  },
  {
    "text": "continue with our practices of managing things manually accessing services via",
    "start": "302440",
    "end": "308590"
  },
  {
    "text": "ssh sooner or later will revert to the state that that we were in in input",
    "start": "308590",
    "end": "313930"
  },
  {
    "text": "servers if we take this concept of",
    "start": "313930",
    "end": "320919"
  },
  {
    "start": "318000",
    "end": "318000"
  },
  {
    "text": "immutable servers to the extreme so that's that's the upper upper part of",
    "start": "320919",
    "end": "326919"
  },
  {
    "text": "its evolution it's immutable service themselves meaning that we created an image of a server we know it's known",
    "start": "326919",
    "end": "332919"
  },
  {
    "text": "good state everything our fleet is in sync it was really fast it doesn't",
    "start": "332919",
    "end": "338320"
  },
  {
    "text": "depend on external repositories which is which is very important because if you try to manage your let's say auto scale",
    "start": "338320",
    "end": "344200"
  },
  {
    "text": "and group and suddenly some some repo is not available and the instance is trying to to come up bad things happen however",
    "start": "344200",
    "end": "353229"
  },
  {
    "text": "if we go back to our properties that we talked about repeatability statelessness and disposability immutable servers is",
    "start": "353229",
    "end": "360610"
  },
  {
    "text": "not the only way to achieve those desired properties such as nothing stops",
    "start": "360610",
    "end": "366520"
  },
  {
    "text": "you from bacon and EMI at let's say not not not complete not full stack EMI and",
    "start": "366520",
    "end": "373390"
  },
  {
    "text": "then still managed restrict the access to to humans and then manage your",
    "start": "373390",
    "end": "379720"
  },
  {
    "text": "configuration tools to configure those servers you achieve the very same properties but you do not go all the way",
    "start": "379720",
    "end": "385690"
  },
  {
    "text": "to immutable servers and if you look at it it's almost like a slider how much",
    "start": "385690",
    "end": "391030"
  },
  {
    "text": "you put into MI versus how much how much you configure is that where you want to keep your complexity such as you want to",
    "start": "391030",
    "end": "398200"
  },
  {
    "text": "keep your configuration tools complex then you go with with configuring at a good time if you want to push everything",
    "start": "398200",
    "end": "406450"
  },
  {
    "text": "to to bacon and then maintaining the infrastructure of of am is that that brings another layer of complexity so",
    "start": "406450",
    "end": "413230"
  },
  {
    "text": "that is another end of the spectrum Andhra drug benefits and drawbacks to",
    "start": "413230",
    "end": "418360"
  },
  {
    "text": "both approaches not only complexity but also with M eyes you have cost",
    "start": "418360",
    "end": "423490"
  },
  {
    "text": "associated with it they mi stay they they keep multiplying and if you are talking about the",
    "start": "423490",
    "end": "429040"
  },
  {
    "text": "immutable infrastructure such as if you do something like red black deployment then at some point in time will have",
    "start": "429040",
    "end": "435790"
  },
  {
    "text": "essentially two fleets of servers running simultaneously which effectively doubles our cost so we talked about this",
    "start": "435790",
    "end": "445930"
  },
  {
    "start": "443000",
    "end": "443000"
  },
  {
    "text": "concept of repeatability now what about statelessness we would",
    "start": "445930",
    "end": "451450"
  },
  {
    "text": "like to have this this property and how we how we achieve it we achieve it by",
    "start": "451450",
    "end": "456790"
  },
  {
    "text": "moving all the state of our servers such as if we have logs then use one of the",
    "start": "456790",
    "end": "462970"
  },
  {
    "text": "partner solutions or one of the managed solutions or essentially one of one of",
    "start": "462970",
    "end": "468030"
  },
  {
    "text": "self-managed solutions to just for example get all the logs of the instance if possible persist data on EBS volumes",
    "start": "468030",
    "end": "476169"
  },
  {
    "text": "because EBS volumes can outlive the instance and we'll see an example of it",
    "start": "476169",
    "end": "481290"
  },
  {
    "text": "if it makes sense from the operational perspective let's say if you have some kind of database why don't you move it",
    "start": "481290",
    "end": "488350"
  },
  {
    "text": "to to a managed service such as RDS or dynamodb and make it someone else's problem just one less thing to worry",
    "start": "488350",
    "end": "496000"
  },
  {
    "text": "about and then you can always maintain a large data lake inside Amazon s3 since",
    "start": "496000",
    "end": "505660"
  },
  {
    "start": "504000",
    "end": "504000"
  },
  {
    "text": "we talked about EMIs let's let's quickly touch on what kind of my models exist so that we set this",
    "start": "505660",
    "end": "511540"
  },
  {
    "text": "stage at the very bottom we have essentially base ami which doesn't have much it just Berenson system then we",
    "start": "511540",
    "end": "520780"
  },
  {
    "text": "have foundational AMI and rotational ami something where we reload packages something that we need something that is",
    "start": "520780",
    "end": "527980"
  },
  {
    "text": "used in in our and our infrastructure across across the board",
    "start": "527980",
    "end": "533680"
  },
  {
    "text": "and the the final is the full stack EMI where we have everything except for the",
    "start": "533680",
    "end": "538809"
  },
  {
    "text": "configuration that gets injected at the boot time so where do we start we see",
    "start": "538809",
    "end": "546189"
  },
  {
    "text": "that actually many companies there is a scale of how far you want to be in this",
    "start": "546189",
    "end": "551589"
  },
  {
    "text": "EMI chain and normally the process works like this you start with the base am i that doesn't change often base EMA is",
    "start": "551589",
    "end": "559389"
  },
  {
    "text": "something that gets updated fairly not regularly and then you produce actually",
    "start": "559389",
    "end": "565720"
  },
  {
    "text": "a foundational mi out of it and this foundational EMI it has the properties that it it has all the packages that",
    "start": "565720",
    "end": "572679"
  },
  {
    "text": "that we need for our system such as it meets our security baseline it meets our",
    "start": "572679",
    "end": "577689"
  },
  {
    "text": "best practices that it has all the provision airs all the loggers everything that that we need and then if",
    "start": "577689",
    "end": "584649"
  },
  {
    "text": "we want to stop here and then use our configuration tools to go up at the boot time great we can we can do it so",
    "start": "584649",
    "end": "592209"
  },
  {
    "text": "foundational Mis is a great place to be in and then it depth that one gets gets updated a little bit not a little bit",
    "start": "592209",
    "end": "599079"
  },
  {
    "text": "but more often than 10 basic MI and the last one if you want to go with full",
    "start": "599079",
    "end": "604179"
  },
  {
    "text": "stack heaven foundational EMI is actually much easier because you you",
    "start": "604179",
    "end": "609730"
  },
  {
    "text": "essentially produce changes that that are essentially Delta of your application and the foundational ami",
    "start": "609730",
    "end": "618360"
  },
  {
    "start": "618000",
    "end": "618000"
  },
  {
    "text": "since we are talking about team eyes you can you can do it by hand but probably",
    "start": "618360",
    "end": "623769"
  },
  {
    "text": "you don't want to do it at scale got tools out there that that can help you with that such as network simulator and",
    "start": "623769",
    "end": "629610"
  },
  {
    "text": "there is this whole bakery associated with it and as well as this tool has a",
    "start": "629610",
    "end": "635319"
  },
  {
    "text": "core Packer that has multiple bacon bacon algorithms for am is that that it",
    "start": "635319",
    "end": "642819"
  },
  {
    "text": "provides there's actually another one that that covers creation of EBS volumes so but it's a little bit out of scope",
    "start": "642819",
    "end": "649449"
  },
  {
    "text": "and if we talk about our EMI build",
    "start": "649449",
    "end": "654850"
  },
  {
    "start": "651000",
    "end": "651000"
  },
  {
    "text": "pipeline this picture it looks rather generic but it's actually very important",
    "start": "654850",
    "end": "659980"
  },
  {
    "text": "it's important in a way that first of all we see that developers they interact with the system through the code",
    "start": "659980",
    "end": "665920"
  },
  {
    "text": "repository and everything is abstracted by our CI CD pipeline and you can implement it using various tools",
    "start": "665920",
    "end": "673060"
  },
  {
    "text": "such as you can you can put Jenkins there you can you can put let's say",
    "start": "673060",
    "end": "678339"
  },
  {
    "text": "spinnaker there or you can put code pipeline and becquer actually plays",
    "start": "678339",
    "end": "683920"
  },
  {
    "text": "really nicely with Jenkins because it supports environment variables and makes",
    "start": "683920",
    "end": "690519"
  },
  {
    "text": "that integration very nice you don't have to hard code things you can actually reference them then we also",
    "start": "690519",
    "end": "695800"
  },
  {
    "text": "have something that is that is a my registry that is important and you need to maintain essentially the sanity",
    "start": "695800",
    "end": "704290"
  },
  {
    "text": "within within your ami so you need to you need to have some some kind of system to maintain those images and make",
    "start": "704290",
    "end": "710050"
  },
  {
    "text": "sense of them just because you produce them often such as if you go with full",
    "start": "710050",
    "end": "715180"
  },
  {
    "text": "spec ami it means that you will have multiple multiple images every time the application is built",
    "start": "715180",
    "end": "721060"
  },
  {
    "text": "if you go with foundational in Maidan the number of them will be fewer and one",
    "start": "721060",
    "end": "728230"
  },
  {
    "text": "thing is no matter where you stop it's always a good idea to test your ami once",
    "start": "728230",
    "end": "734890"
  },
  {
    "text": "it's been baked so that is that is that is that is very important because at",
    "start": "734890",
    "end": "740050"
  },
  {
    "text": "scale you don't want to be troubleshooting things that that were caused by bias by some let's say base",
    "start": "740050",
    "end": "746410"
  },
  {
    "text": "updates that that you had and then you just didn't ask for it right and the",
    "start": "746410",
    "end": "752980"
  },
  {
    "text": "last piece is that once we have instances it's a good idea to actually externalize the configuration and have",
    "start": "752980",
    "end": "759220"
  },
  {
    "text": "some kind of configuration service to wire this instance up and get the",
    "start": "759220",
    "end": "764649"
  },
  {
    "text": "parameters that it needs so once we talked about the pipeline and",
    "start": "764649",
    "end": "770199"
  },
  {
    "start": "768000",
    "end": "768000"
  },
  {
    "text": "testability you want to make sure that our our instances when they when they",
    "start": "770199",
    "end": "775870"
  },
  {
    "text": "boot up they actually happen and there are several several ways to keep them happy such as we can use tools that",
    "start": "775870",
    "end": "781930"
  },
  {
    "text": "cloud in it make use of it such as some some some use cases maybe we need to on",
    "start": "781930",
    "end": "788199"
  },
  {
    "text": "the start of format form a disk and then make raid out of it",
    "start": "788199",
    "end": "793750"
  },
  {
    "text": "configuration service as we know that there are many servers and you want to make sure that you have some kind of",
    "start": "793750",
    "end": "799899"
  },
  {
    "text": "like manage and system in place chef puppet service discovery that is very important at",
    "start": "799899",
    "end": "805839"
  },
  {
    "text": "scale in my registry you may look at Netflix tools or anything essentially",
    "start": "805839",
    "end": "812230"
  },
  {
    "text": "where you can clearly describe image API that that Amazon Web Services provides",
    "start": "812230",
    "end": "818769"
  },
  {
    "text": "and Amazon that described in my ship yeah it's actually very powerful once",
    "start": "818769",
    "end": "824230"
  },
  {
    "text": "you have this tagging policy in place how you tag your images by by purpose by",
    "start": "824230",
    "end": "830069"
  },
  {
    "text": "what was the operating system and such you can actually narrow down images",
    "start": "830069",
    "end": "835209"
  },
  {
    "text": "fairly fast and within the Packer within within the Packer tool you can actually use that filtering mechanism",
    "start": "835209",
    "end": "841600"
  },
  {
    "text": "you can use that filtering mechanism to discover which am I you should be using",
    "start": "841600",
    "end": "846699"
  },
  {
    "text": "instead of hard-coding am i ID and then instance metadata very",
    "start": "846699",
    "end": "852279"
  },
  {
    "text": "helpful at the boot time you can you can query it and see what what's availability zone you're coming up in",
    "start": "852279",
    "end": "858929"
  },
  {
    "text": "and many many other things and then we talked about tagging please do tag your",
    "start": "858929",
    "end": "865269"
  },
  {
    "text": "instances and your EMIs because the more of them are there like the more",
    "start": "865269",
    "end": "871179"
  },
  {
    "text": "complicated things the more complicated the management is and tagging good",
    "start": "871179",
    "end": "877299"
  },
  {
    "text": "tagging practices that that is the way to make sense of this system so we",
    "start": "877299",
    "end": "883569"
  },
  {
    "start": "883000",
    "end": "883000"
  },
  {
    "text": "talked about general concepts we talked about general concept that enable us to to achieve this the state of the system",
    "start": "883569",
    "end": "891610"
  },
  {
    "text": "that skills as as long as a we need to maintain it and our organization grows",
    "start": "891610",
    "end": "898059"
  },
  {
    "text": "and infrastructure grows but now I would like to invite Jean Stevens to actually take a deep dive and see how it looks in",
    "start": "898059",
    "end": "905259"
  },
  {
    "text": "real life and how it was implemented at protect wise please thank you macau",
    "start": "905259",
    "end": "912149"
  },
  {
    "text": "hello everybody thank you for coming we're gonna pivot now into a very specific use case we're gonna show some",
    "start": "912149",
    "end": "917859"
  },
  {
    "text": "really practical examples of how we execute on some of this so what mikhail really did is gave a like the",
    "start": "917859",
    "end": "923139"
  },
  {
    "text": "philosophical foundation this is how AWS reasons about infrastructure and stateless infrastructure in particular",
    "start": "923139",
    "end": "928179"
  },
  {
    "text": "what we're gonna do is show you how we lean into the ec2 infrastructural",
    "start": "928179",
    "end": "933249"
  },
  {
    "text": "approach take the stateless approach put those two together and simplify a lot of really big problems and high scale",
    "start": "933249",
    "end": "939640"
  },
  {
    "text": "problems so throw that in let me actually talk to you guys a little bit about well protect wise is working on",
    "start": "939640",
    "end": "945910"
  },
  {
    "text": "well set the landscape the kinds of problems were focused on and give you a sense for the kind of data and retention",
    "start": "945910",
    "end": "952120"
  },
  {
    "start": "948000",
    "end": "948000"
  },
  {
    "text": "the analytic windows the kind of particularity that is required to do",
    "start": "952120",
    "end": "958720"
  },
  {
    "text": "some really hard stuff and not have to work too hard at it at the end of the day protect wise we are a start-up we're",
    "start": "958720",
    "end": "963820"
  },
  {
    "text": "about three and a half years old and we're still cutting our teeth we're out there tackling a lot of stuff and the",
    "start": "963820",
    "end": "969280"
  },
  {
    "text": "short of it is is that we have a small team that is working on some really big stuff so you know more recently myself",
    "start": "969280",
    "end": "977830"
  },
  {
    "text": "and my co-founder we got protected I started we were at Intel security and so we spent our time there getting a sense",
    "start": "977830",
    "end": "983410"
  },
  {
    "text": "for some of the major challenges that a large enterprises deal with so in terms of creating an enterprise security",
    "start": "983410",
    "end": "988870"
  },
  {
    "text": "platform we are very much focused on these three challenges and they have really big ramifications with regards to",
    "start": "988870",
    "end": "995260"
  },
  {
    "text": "data retention and analytics and I'll step into those here in a moment the first thing that we are deeply passionate about is that given that",
    "start": "995260",
    "end": "1001770"
  },
  {
    "text": "advanced and targeted attacks in these organizations they execute over really long periods of time this is a really",
    "start": "1001770",
    "end": "1008550"
  },
  {
    "text": "interesting challenge for a lot of our infrastructure because we live in the moment right we say we take what we have",
    "start": "1008550",
    "end": "1014910"
  },
  {
    "text": "right now we look at emails we look at files we look at packets and we try to come to a conclusion are they good or",
    "start": "1014910",
    "end": "1020130"
  },
  {
    "text": "bad but in security the most interesting things have already happened I mean that's what's really top of mind and so",
    "start": "1020130",
    "end": "1027000"
  },
  {
    "text": "with that in mind our architecture is like really not well-suited for that so we thought to ourselves gosh if the",
    "start": "1027000",
    "end": "1033600"
  },
  {
    "text": "medium breach detection window isn't around eight to nine months that's for the point of actual infection to the",
    "start": "1033600",
    "end": "1038910"
  },
  {
    "text": "point of discovery then we need an analytic window that goes like eight or nine months at least right so that we",
    "start": "1038910",
    "end": "1045180"
  },
  {
    "text": "can actually have something that we can process and go back and find these things that's a big challenge the second",
    "start": "1045180",
    "end": "1052020"
  },
  {
    "text": "thing is that most of these organizations we work with would use like a bunch of different point products certainly the large enterprise was",
    "start": "1052020",
    "end": "1057390"
  },
  {
    "text": "normal for people to have like fifty to a hundred different security products and they're trying to pull them together and they have their Splunk they have",
    "start": "1057390",
    "end": "1062790"
  },
  {
    "text": "their sim they have other stuff collecting all this log files they're purchased separately they're managed differently",
    "start": "1062790",
    "end": "1067890"
  },
  {
    "text": "in a regular cycle we thought to ourselves gosh if we can only get to that raw system a record that underlies",
    "start": "1067890",
    "end": "1073799"
  },
  {
    "text": "all that detection we could handle that breech window and we can handle that kind of analytic window from a threat",
    "start": "1073799",
    "end": "1080730"
  },
  {
    "text": "detection perspective that's interesting so how can we help those teams then move away from simply operating their",
    "start": "1080730",
    "end": "1086670"
  },
  {
    "text": "infrastructure and move on to doing security well that's the nice service idea but the the kind of work you have",
    "start": "1086670",
    "end": "1093240"
  },
  {
    "text": "to do in processing and compute and storage in order to make that happen it gets really daunting really fast and",
    "start": "1093240",
    "end": "1098850"
  },
  {
    "text": "then at the end of the day the biggest thing that I think all of us are really passionate about is the people who are",
    "start": "1098850",
    "end": "1105059"
  },
  {
    "text": "involved in all of this the biggest challenge we have in security is a resource challenged on humans right it's",
    "start": "1105059",
    "end": "1110880"
  },
  {
    "text": "not enough professionals around so how can we automate large portions of this really compress that window but also",
    "start": "1110880",
    "end": "1117980"
  },
  {
    "text": "accelerate and expand the resource pool bringing the next generation of hackers and gamers and upskilling for an",
    "start": "1117980",
    "end": "1123419"
  },
  {
    "text": "environment that many of the pros don't even understand very well so the data ramifications for this got pretty",
    "start": "1123419",
    "end": "1129660"
  },
  {
    "start": "1129000",
    "end": "1129000"
  },
  {
    "text": "intense what we realized we needed to do is at the end of the day we needed to do",
    "start": "1129660",
    "end": "1135090"
  },
  {
    "text": "packet capture and this is really the data set we're about to talk to you about we do packet capture a great scale",
    "start": "1135090",
    "end": "1141630"
  },
  {
    "text": "we give our clients a little lightweight software center they deploy it anywhere employed inside their AWS traditional",
    "start": "1141630",
    "end": "1148350"
  },
  {
    "text": "data centers all that type of stuff and they stream raw bits and bytes to the",
    "start": "1148350",
    "end": "1153720"
  },
  {
    "text": "cloud in a real-time manner so we have deployments that are measured now and data rates a throughput of gigabits per",
    "start": "1153720",
    "end": "1160440"
  },
  {
    "text": "second of data that's being shipped into AWS in order to do this kind of automated threat detection that's pretty",
    "start": "1160440",
    "end": "1166890"
  },
  {
    "text": "intimidating in fact as you know as a guy who's getting this company's off the ground in those earliest days a lot of",
    "start": "1166890",
    "end": "1173309"
  },
  {
    "text": "the people we talked to thought it wasn't even physically possible so we thought to ourselves oh that may be but",
    "start": "1173309",
    "end": "1178380"
  },
  {
    "text": "if we figure it out it's really gonna be a big thing so that was that was a strong point of motivation and",
    "start": "1178380",
    "end": "1184770"
  },
  {
    "text": "engagement but it also meant that we couldn't run away from a problem of needing to analyze that much data and so",
    "start": "1184770",
    "end": "1191429"
  },
  {
    "text": "if the breach detection window is really big now how do I have packets and extracted metadata that I need to have",
    "start": "1191429",
    "end": "1197490"
  },
  {
    "text": "laying around for a year and this is not a cold storage put it in the glacier and in case I",
    "start": "1197490",
    "end": "1203450"
  },
  {
    "text": "might need it later we're actually gonna go back in time and reanalyze and reconvicted pass every time we learn",
    "start": "1203450",
    "end": "1210230"
  },
  {
    "text": "about some new attack so on what I'm doing now is describing that this isn't just a bunch of tuples these are tens of",
    "start": "1210230",
    "end": "1216230"
  },
  {
    "text": "billions of transactions a day being ingested in a real time manner being stored and then hot analyzed a year",
    "start": "1216230",
    "end": "1222800"
  },
  {
    "text": "later so the amount of compute and storage resources a traditional approach",
    "start": "1222800",
    "end": "1227960"
  },
  {
    "text": "would have taken like if we push this onto here doop and try to deal with it later whatever would have worked and so",
    "start": "1227960",
    "end": "1233630"
  },
  {
    "text": "our our approach really began solidifying around this idea that if we",
    "start": "1233630",
    "end": "1239690"
  },
  {
    "text": "could bring it together into a single haystack in the cloud and this is a",
    "start": "1239690",
    "end": "1245500"
  },
  {
    "text": "little view as to what we're what we're doing but you get a sense here that this is a live humming and thrumming system",
    "start": "1245500",
    "end": "1252140"
  },
  {
    "text": "it's an invented stream processing system there's no batch processing happening here and was running inside of",
    "start": "1252140",
    "end": "1258470"
  },
  {
    "text": "this really large ec2 cluster we're a big multi-tenant cloud security company and it runs at line rate so we",
    "start": "1258470",
    "end": "1267320"
  },
  {
    "text": "have line rate distributed processing on systems we're measuring time gets false fast because it changed by the time",
    "start": "1267320",
    "end": "1274040"
  },
  {
    "text": "you're done measuring it right these kinds of systems pulled together we realized that if we thought differently",
    "start": "1274040",
    "end": "1280010"
  },
  {
    "text": "about our infrastructure we would be able to create new technology that's really good at really hard problems and",
    "start": "1280010",
    "end": "1285290"
  },
  {
    "text": "I could take a very small team and about to introduce Robert here who was the first person that caused us to actually",
    "start": "1285290",
    "end": "1290960"
  },
  {
    "text": "operate correctly at scale and we're gonna show you a little bit about how we",
    "start": "1290960",
    "end": "1296060"
  },
  {
    "text": "were able to arrange it and tackle it and tamp it down to take some projects like growing a Cassandra cluster at this",
    "start": "1296060",
    "end": "1302390"
  },
  {
    "text": "kind of scale take weeks for the data even rebalance how do you get that done in like two to three hours instead",
    "start": "1302390",
    "end": "1308060"
  },
  {
    "text": "because wouldn't you rather do that and how do you remove side-effects from your infrastructure because when you rather do that once you want to know for really",
    "start": "1308060",
    "end": "1314840"
  },
  {
    "text": "large distributed systems that you have a test and load environment that behaves exactly like productions so that as a",
    "start": "1314840",
    "end": "1320300"
  },
  {
    "text": "start-up or as a company with limited resources you can actually have a small team very effectively to continuously",
    "start": "1320300",
    "end": "1327860"
  },
  {
    "text": "deploy continuously manage and scale this thing up as the company grows and",
    "start": "1327860",
    "end": "1333140"
  },
  {
    "text": "not actually really have to scale team at the same rate of which you scaled a business that's really good that's that's a great way to make that",
    "start": "1333140",
    "end": "1339230"
  },
  {
    "text": "work so that said what I'd like to do",
    "start": "1339230",
    "end": "1344500"
  },
  {
    "text": "now it's talk to you a little bit about how we think about our technology",
    "start": "1344500",
    "end": "1350210"
  },
  {
    "start": "1346000",
    "end": "1346000"
  },
  {
    "text": "challenge really is very much basic startup stuff at the end of the day what",
    "start": "1350210",
    "end": "1355220"
  },
  {
    "text": "you want to do particularly in your innovation circles and that type of stuff is you don't want to just build exactly what you think you need you've",
    "start": "1355220",
    "end": "1361130"
  },
  {
    "text": "got to be good at building something that responds to your circumstances as they evolve continuously evolve around",
    "start": "1361130",
    "end": "1366740"
  },
  {
    "text": "you we got to catch those curve balls right so we got to be really good at turning on a dime while moving petabytes",
    "start": "1366740",
    "end": "1373400"
  },
  {
    "text": "of data in that's the direction at the same rate at which we are responding to the market so rapid iteration massive scale like",
    "start": "1373400",
    "end": "1380570"
  },
  {
    "text": "Netflix was our first paying customer and that is a painful first customer to be honest with you data why we were you",
    "start": "1380570",
    "end": "1387260"
  },
  {
    "text": "know we need to be really provider at gnostic so we were able to do this in a AWS and those early days people some",
    "start": "1387260",
    "end": "1393770"
  },
  {
    "text": "people in the finance and healthcare industry like we're not going to the cloud now they're all like help us get to the cloud right and then we are able",
    "start": "1393770",
    "end": "1400460"
  },
  {
    "text": "to tackle because we're a security company how do you deploy patches to like a zillion servers and do without",
    "start": "1400460",
    "end": "1408260"
  },
  {
    "text": "creating side-effects right we're not gonna use docker we'll never be able to troubleshoot that thing the amount of state and generational state that we",
    "start": "1408260",
    "end": "1414500"
  },
  {
    "text": "would produce that scale our team would never be able to say on top of it so that said traditional micro service",
    "start": "1414500",
    "end": "1419930"
  },
  {
    "text": "architectures these types of things what I want to do in the interest of time is to hand this over actually to Robert's",
    "start": "1419930",
    "end": "1425780"
  },
  {
    "start": "1420000",
    "end": "1420000"
  },
  {
    "text": "who did so much of this code so much as infrastructure we're going to show you specific things that we did some",
    "start": "1425780",
    "end": "1431390"
  },
  {
    "text": "specific use cases and tackle those edges like the database means I have state in my infrastructure right well if",
    "start": "1431390",
    "end": "1437750"
  },
  {
    "text": "you think about it differently you can even make your databases stateless and you can grow them really really fast",
    "start": "1437750",
    "end": "1443690"
  },
  {
    "text": "without a lot of effort so Robert thank you it takes clicker oh it's over there",
    "start": "1443690",
    "end": "1448820"
  },
  {
    "text": "yeah cool so according to Gartner errors",
    "start": "1448820",
    "end": "1456050"
  },
  {
    "start": "1453000",
    "end": "1453000"
  },
  {
    "text": "in configuration and change management account for over 50% of outages so",
    "start": "1456050",
    "end": "1461060"
  },
  {
    "text": "that's actually a significant motivation improve these areas that's you know we spend a lot of time debugging our code",
    "start": "1461060",
    "end": "1467090"
  },
  {
    "text": "make sure our code is well tested but sometimes we don't think about the configuration and change management aspect of it additionally the more",
    "start": "1467090",
    "end": "1474830"
  },
  {
    "text": "complexity you have the longer your time to recovery the more sources of uncertainty you have in your environment",
    "start": "1474830",
    "end": "1481160"
  },
  {
    "text": "about your environment state again the longer time in recovery so like mikkel",
    "start": "1481160",
    "end": "1487280"
  },
  {
    "text": "alluded to the traditional infrastructure way of doing things is to boot up a server you know install the",
    "start": "1487280",
    "end": "1493580"
  },
  {
    "text": "base operating system on it install the packages that you need install your application install configuration I do",
    "start": "1493580",
    "end": "1502040"
  },
  {
    "text": "that every time you need a new server the result is that the new server has whatever packages were on it at that",
    "start": "1502040",
    "end": "1508970"
  },
  {
    "text": "particular minute or whatever packages were current at the particular minute you booted it up and then over the",
    "start": "1508970",
    "end": "1514970"
  },
  {
    "text": "lifecycle of the server you continue to apply patches and configuration changes to it and the end result is that the",
    "start": "1514970",
    "end": "1521540"
  },
  {
    "text": "server after a few weeks or months if you were to boot up in a new server and",
    "start": "1521540",
    "end": "1526940"
  },
  {
    "text": "apply the same configuration you don't get exactly the same server out of it because it doesn't have that change history so the immutable programmable",
    "start": "1526940",
    "end": "1536180"
  },
  {
    "start": "1533000",
    "end": "1533000"
  },
  {
    "text": "infrastructure way of doing things you spin up a collection of servers when you need to change you spin up a whole new",
    "start": "1536180",
    "end": "1541940"
  },
  {
    "text": "collection servers rather than patching the old set obviously that means you want as much automation as possible I",
    "start": "1541940",
    "end": "1549110"
  },
  {
    "text": "mean you know if you're standing up 100 web servers configure them by hand that's terrible if you're doing that on",
    "start": "1549110",
    "end": "1555020"
  },
  {
    "text": "every deploy that's that's really terrible so that's not going to happen programmability isn't specific to",
    "start": "1555020",
    "end": "1560920"
  },
  {
    "text": "immutable infrastructure but just as immutable objects make programs easier",
    "start": "1560920",
    "end": "1567830"
  },
  {
    "text": "to reason about because you're not worrying about some thread elsewhere modifying your object and and having to",
    "start": "1567830",
    "end": "1573830"
  },
  {
    "text": "plan for that and protect against that immutable immutable infrastructure makes",
    "start": "1573830",
    "end": "1579890"
  },
  {
    "text": "configuration management easier to reason about you're not thinking about protecting yourself against what did the",
    "start": "1579890",
    "end": "1585350"
  },
  {
    "text": "system men do to this server yesterday we need to make sure we can you know we can handle that or whatever it's your",
    "start": "1585350",
    "end": "1591050"
  },
  {
    "text": "you're always applying it from a clean baseline replacing the higher-level",
    "start": "1591050",
    "end": "1596960"
  },
  {
    "text": "resources like entire fleets and servers actually saves time over trying to debug an issue on a",
    "start": "1596960",
    "end": "1603830"
  },
  {
    "text": "specific server like try and figure out why the hard drive is slow or what happened why the configuration has",
    "start": "1603830",
    "end": "1609229"
  },
  {
    "text": "changed you just throw it away new server so what we're aiming for is",
    "start": "1609229",
    "end": "1615139"
  },
  {
    "start": "1612000",
    "end": "1612000"
  },
  {
    "text": "immutable infrastructure described with code this simplifies operation makes a",
    "start": "1615139",
    "end": "1620840"
  },
  {
    "text": "configuration more consistent McColl's talked about stateless services that's particularly friendly to this approach",
    "start": "1620840",
    "end": "1627080"
  },
  {
    "text": "if your service itself is stapled and you know there's some state associated with it and once you've spun up a new",
    "start": "1627080",
    "end": "1634039"
  },
  {
    "text": "server before you can throw away the old one you have to get the state migrated over or you have to drain the state let",
    "start": "1634039",
    "end": "1639830"
  },
  {
    "text": "the state accumulate elsewhere so that's stateless is definitely friendlier to",
    "start": "1639830",
    "end": "1645049"
  },
  {
    "text": "this approach when you can do it talking about specifically our use case so as",
    "start": "1645049",
    "end": "1650419"
  },
  {
    "start": "1647000",
    "end": "1647000"
  },
  {
    "text": "Jean mentioned we have prospective customers who are hesitant about cloud",
    "start": "1650419",
    "end": "1655789"
  },
  {
    "text": "adoption and particularly they're hesitant about shipping all their security data to the cloud and so we",
    "start": "1655789",
    "end": "1661399"
  },
  {
    "text": "want to make sure that we can support an on-prem model if we need to or a hybrid model but we really want to be in the",
    "start": "1661399",
    "end": "1668059"
  },
  {
    "text": "cloud we don't want to lose the benefits of being cloud native like being able to scale out minutes paying only for the",
    "start": "1668059",
    "end": "1674059"
  },
  {
    "text": "resources we need being able to gradually roll out a new service into production without impacting production",
    "start": "1674059",
    "end": "1681039"
  },
  {
    "start": "1681000",
    "end": "1681000"
  },
  {
    "text": "we also want agility i we're a start-up you know if an engineer or customer has",
    "start": "1681039",
    "end": "1686450"
  },
  {
    "text": "a good idea we want that proof of concept out into production in like minutes or hours not days or weeks we're",
    "start": "1686450",
    "end": "1693349"
  },
  {
    "text": "a security provider so we want to fix security vulnerabilities I mean everybody wants to but I mean particularly as a security provider the",
    "start": "1693349",
    "end": "1699109"
  },
  {
    "text": "last thing you want is to get owned by some well published vulnerability but we",
    "start": "1699109",
    "end": "1705590"
  },
  {
    "text": "have an additional sort of interesting context in that you know shellshock comes out or Hartley comes out we want",
    "start": "1705590",
    "end": "1712039"
  },
  {
    "text": "to patch heartbleed but then we also at the same time we want to be going back through our customers last year of",
    "start": "1712039",
    "end": "1718009"
  },
  {
    "text": "traffic to see if any of our customers were exploited by that vulnerability so we're not like hey stop the press you",
    "start": "1718009",
    "end": "1724580"
  },
  {
    "text": "know we got to fix this vulnerability it's fix this vulnerability and do a whole bunch of work at the same time I'm",
    "start": "1724580",
    "end": "1730539"
  },
  {
    "text": "going to talk about testability here on good tests are really crucial I mean this is something that agile",
    "start": "1730539",
    "end": "1737330"
  },
  {
    "text": "developers already know you know they give you the confidence that it's safe to deploy your changes anytime right",
    "start": "1737330",
    "end": "1742940"
  },
  {
    "text": "away if you don't have good tests then you're reluctant to change you're looking for a change window to push",
    "start": "1742940",
    "end": "1749390"
  },
  {
    "text": "those out and meanwhile the the changes accumulate and now you've got an even bigger set of changes that you're",
    "start": "1749390",
    "end": "1755240"
  },
  {
    "text": "deploying your change window and you're even more scared to deploy it it's kind of this downward spiral so this is this",
    "start": "1755240",
    "end": "1760940"
  },
  {
    "text": "applies to infrastructure changes as well not just code so I want to talk",
    "start": "1760940",
    "end": "1766280"
  },
  {
    "start": "1765000",
    "end": "1765000"
  },
  {
    "text": "about specific tool set that we use at protect wise so we use chef for / server",
    "start": "1766280",
    "end": "1773390"
  },
  {
    "text": "configuration management I puppet ansible assault are also typical options",
    "start": "1773390",
    "end": "1779000"
  },
  {
    "text": "people use here that pretty similar we have a base cookbook and chef that's",
    "start": "1779000",
    "end": "1784250"
  },
  {
    "text": "applied to every server and that's how we get our initial you know well audited",
    "start": "1784250",
    "end": "1790190"
  },
  {
    "text": "secure the packages that we use on every single server or applied on every single",
    "start": "1790190",
    "end": "1796370"
  },
  {
    "text": "instance that's how we get from a bun to minimal to localized and audit ready all",
    "start": "1796370",
    "end": "1801530"
  },
  {
    "text": "the authentication that sort of thing and then obviously we have you know purse for service cookbooks that",
    "start": "1801530",
    "end": "1807650"
  },
  {
    "text": "actually install the specific service that we want running on the server I",
    "start": "1807650",
    "end": "1812740"
  },
  {
    "text": "importantly each cookbook bundles its own tests we use mini tests for this",
    "start": "1812740",
    "end": "1818690"
  },
  {
    "text": "there's also server spec that's really crucial either they're functional and",
    "start": "1818690",
    "end": "1823970"
  },
  {
    "text": "acceptance tests that run at the end of the chef run to validate that you got",
    "start": "1823970",
    "end": "1829309"
  },
  {
    "text": "the expected result so you know as a sort of strongman example you know if you had one cookbook that says hey we",
    "start": "1829309",
    "end": "1835520"
  },
  {
    "text": "want to move ssh to port 10 22 to be a little bit more obscure whatever and then somebody else has a cookbook that",
    "start": "1835520",
    "end": "1841550"
  },
  {
    "text": "happens to set it to 20 to 22 you know whoever wins the other guy's tests at",
    "start": "1841550",
    "end": "1846800"
  },
  {
    "text": "the end of the test run are gonna fail and let us know that hey we've got something not working right these two",
    "start": "1846800",
    "end": "1852320"
  },
  {
    "text": "cookbooks conflicted with each other and you're gonna spot that before it gets to production all right now we run chef",
    "start": "1852320",
    "end": "1858290"
  },
  {
    "text": "every three minutes on every server now that's that's kind of a conscious trade-off that's not the immutable",
    "start": "1858290",
    "end": "1864410"
  },
  {
    "text": "infrastructure way the immutable infrastructure way it would be spin it up and touch it and you're not allowed to touch",
    "start": "1864410",
    "end": "1869690"
  },
  {
    "text": "it but this is a little trade off we're one of the agility to be able to roll out a security patch or a hotfix or",
    "start": "1869690",
    "end": "1876050"
  },
  {
    "text": "something you know under three minutes you know at most it would take three minutes to get that out there um but",
    "start": "1876050",
    "end": "1882620"
  },
  {
    "text": "that's not how we want to maintain our fleet that's just something we're doing so that we can get a hotfix out there quickly if we need it so stepping up a",
    "start": "1882620",
    "end": "1892550"
  },
  {
    "start": "1889000",
    "end": "1889000"
  },
  {
    "text": "layer we're using Hoshi Corp Packer to create our create our a.m. eyes you know",
    "start": "1892550",
    "end": "1900290"
  },
  {
    "text": "we don't want to start with a base image every time we blue the server's start with a base image install the packages on every server every time we want them",
    "start": "1900290",
    "end": "1907190"
  },
  {
    "text": "all to be identical so Packer is what we're using to achieve that if you guys",
    "start": "1907190",
    "end": "1912530"
  },
  {
    "text": "are familiar with docker there's kind of a layered approach where you know you apply a step and then you snapshot and",
    "start": "1912530",
    "end": "1919010"
  },
  {
    "text": "then you apply another step and then you snapshot and the bonus there is that those lower level steps you know install",
    "start": "1919010",
    "end": "1924290"
  },
  {
    "text": "the operating system configure this or you know whatever your install your base layer is those things don't changes often and so you don't have to repeat",
    "start": "1924290",
    "end": "1931040"
  },
  {
    "text": "that work every single time you create a container you're just that last little",
    "start": "1931040",
    "end": "1937070"
  },
  {
    "text": "bit of oh here this little piece of code change we're just changing that little bit well we're using a.m. a.m. eyes as",
    "start": "1937070",
    "end": "1943160"
  },
  {
    "text": "our container we're using Packer to get basically that same layered approach you know we can we can have a base",
    "start": "1943160",
    "end": "1949460"
  },
  {
    "text": "foundational ami that we like that we then just apply a code configuration change to very quickly in Amazon Amazon",
    "start": "1949460",
    "end": "1960230"
  },
  {
    "text": "EBS builder is the easiest one to use the way it works is it you it boots up a",
    "start": "1960230",
    "end": "1966560"
  },
  {
    "text": "node for you using whatever base ami you wanted it applies your configuration management shuts it down snapshots the",
    "start": "1966560",
    "end": "1974570"
  },
  {
    "text": "volume creates an ami out of it that takes about like 15 minutes to run so",
    "start": "1974570",
    "end": "1980990"
  },
  {
    "text": "it's not something that we want you know in our fast path to production we don't want to add a 15-minute step just to",
    "start": "1980990",
    "end": "1987890"
  },
  {
    "text": "bake a new ami on every single deploy so we do this nightly I there's also the",
    "start": "1987890",
    "end": "1995030"
  },
  {
    "text": "Amazon Schrute builder is faster all right it starts with a running node it",
    "start": "1995030",
    "end": "2001150"
  },
  {
    "text": "takes an AM I builds a EBS volume out of it mounts",
    "start": "2001150",
    "end": "2006430"
  },
  {
    "text": "that EBS volume on the running image in a subdirectory and then schrutes into that subdirectory and applies the",
    "start": "2006430",
    "end": "2012610"
  },
  {
    "text": "configuration management in the treated environment because you're not booting up the instance you're not shutting it",
    "start": "2012610",
    "end": "2017950"
  },
  {
    "text": "down it's much faster it's five minutes or less for us with a with a pre-built base image you can also run it in",
    "start": "2017950",
    "end": "2024760"
  },
  {
    "text": "parallel if you have a beefy machine you can do a bunch of those on the same machine the docs say that you should",
    "start": "2024760",
    "end": "2032140"
  },
  {
    "text": "start with the EBS builder and they're absolutely right the true builder has a lot of gotchas and if you've started",
    "start": "2032140",
    "end": "2039160"
  },
  {
    "text": "with the EBS builder then you know your configuration management is working well you know you're you're getting a working image out of it and then when you start",
    "start": "2039160",
    "end": "2046330"
  },
  {
    "text": "running into these gotchas with a Schrute Builder you know okay yeah it's it's something to do with I'm running in this routed environment what what do I",
    "start": "2046330",
    "end": "2052179"
  },
  {
    "text": "need to change here uh so between chef and Packer we have a system where we can",
    "start": "2052179",
    "end": "2060190"
  },
  {
    "text": "have a well-tested base image that we know passes their security requirements you know we can we can run our",
    "start": "2060190",
    "end": "2065440"
  },
  {
    "text": "vulnerability scanner on that base image and make sure that all the current CVEs are covered and we can also keep that up",
    "start": "2065440",
    "end": "2072850"
  },
  {
    "text": "to date we don't need to you know I again Michal mentioned the golden image concept of you've got this foundational",
    "start": "2072850",
    "end": "2079690"
  },
  {
    "text": "base am i I you don't want to you don't want to keep that around for six months",
    "start": "2079690",
    "end": "2085240"
  },
  {
    "text": "before changing it because then you've got a pet ami and all of a sudden there's a huge CDE out there and you've",
    "start": "2085240",
    "end": "2091120"
  },
  {
    "text": "got a you've got it remediated and you have this big change so that you're you're pushing out all at once you've",
    "start": "2091120",
    "end": "2097390"
  },
  {
    "text": "got six months of changes to a bun to or CentOS or whatever it is you're using that you're pushing out all at once",
    "start": "2097390",
    "end": "2104160"
  },
  {
    "text": "so anyway we can we can treat our a.m. is as immutable but we can also cheat",
    "start": "2104160",
    "end": "2111880"
  },
  {
    "text": "here and roll out emergency fixes quickly so this is an overview of the",
    "start": "2111880",
    "end": "2118660"
  },
  {
    "start": "2116000",
    "end": "2116000"
  },
  {
    "text": "first part of a packer file Packer configuration again we're using chef",
    "start": "2118660",
    "end": "2123910"
  },
  {
    "text": "here we using chef solo just to decouple it from the chef server and the",
    "start": "2123910",
    "end": "2129490"
  },
  {
    "text": "provisioners array is these are the steps required to bring this this container from the",
    "start": "2129490",
    "end": "2139960"
  },
  {
    "text": "base to the desired goal again we're",
    "start": "2139960",
    "end": "2144970"
  },
  {
    "text": "using chef solo but it also supports puppet or just shell scripts for that matter and then the other piece of the",
    "start": "2144970",
    "end": "2151630"
  },
  {
    "start": "2150000",
    "end": "2150000"
  },
  {
    "text": "packer file is the builders array I this is what tells Packer what kind of image",
    "start": "2151630",
    "end": "2159819"
  },
  {
    "text": "is creating and what process to use to create it you can swap in different builders into the same file to create",
    "start": "2159819",
    "end": "2166509"
  },
  {
    "text": "VMware images docker containers whatever you like so that's really cloud agnostic",
    "start": "2166509",
    "end": "2172029"
  },
  {
    "text": "and that's really important for us in knowing that we can create whatever kind of container you need and in fact it's",
    "start": "2172029",
    "end": "2180489"
  },
  {
    "text": "an array so that means that we could actually specify both a docker container",
    "start": "2180489",
    "end": "2186400"
  },
  {
    "text": "and an ami here and get both or a VMware image sorry it's the desert it is dry",
    "start": "2186400",
    "end": "2197069"
  },
  {
    "start": "2197000",
    "end": "2197000"
  },
  {
    "text": "alright so moving one more level up we're using hashey Corp terraform I",
    "start": "2197400",
    "end": "2202809"
  },
  {
    "text": "don't work for hedgy Corp I just use half their products this describes our",
    "start": "2202809",
    "end": "2208539"
  },
  {
    "text": "entire environment alright so chef gives us a server Packer gives us a fleet of",
    "start": "2208539",
    "end": "2214269"
  },
  {
    "text": "identical servers terraform is what glues that all together I specified",
    "start": "2214269",
    "end": "2219819"
  },
  {
    "text": "servers VP C's load balancers security groups are all describing code so this",
    "start": "2219819",
    "end": "2228339"
  },
  {
    "text": "means we can stand up a new copy of an environment with one command um just as",
    "start": "2228339",
    "end": "2233559"
  },
  {
    "text": "we want all our servers to be identical we went our staging environment we have environments for specific large",
    "start": "2233559",
    "end": "2239499"
  },
  {
    "text": "customers we're building out in Japan Europe and South America regions and we",
    "start": "2239499",
    "end": "2245019"
  },
  {
    "text": "want those to be identical to I you know I we just had two new devops guys come",
    "start": "2245019",
    "end": "2250930"
  },
  {
    "text": "on and for both of them one of the things I did was have them stand up for",
    "start": "2250930",
    "end": "2256359"
  },
  {
    "text": "one of them it was a demo environment for one of it it was replace our staging environment I you know usually if you've",
    "start": "2256359",
    "end": "2262390"
  },
  {
    "text": "got 50 microservices and three years of development that's not something you could just",
    "start": "2262390",
    "end": "2267940"
  },
  {
    "text": "throw the knew you know threw the throw the new DevOps guy and say hey you know for this week stand up a copy of",
    "start": "2267940",
    "end": "2273880"
  },
  {
    "text": "production for me so that's that's been really nice this is an example of a",
    "start": "2273880",
    "end": "2280690"
  },
  {
    "text": "terraform configuration file so it says you see resource AWS instance at the top",
    "start": "2280690",
    "end": "2286150"
  },
  {
    "text": "but this is actually plural you see couple lines down you see the count this is actually describing an entire",
    "start": "2286150",
    "end": "2292720"
  },
  {
    "text": "Cassandra cluster I important to note pretty much everything in there is",
    "start": "2292720",
    "end": "2298360"
  },
  {
    "text": "either a variable or a reference to another resource that makes this",
    "start": "2298360",
    "end": "2304060"
  },
  {
    "text": "portable across environments it means that we're not copy-pasting a security group ID into a bunch of different",
    "start": "2304060",
    "end": "2310870"
  },
  {
    "text": "places in the file that's very important this is the least provider agnostic",
    "start": "2310870",
    "end": "2317800"
  },
  {
    "text": "piece of our stack I you know but basically since we're describing VP C's",
    "start": "2317800",
    "end": "2324070"
  },
  {
    "text": "and security groups and things that don't exist in other environments that sort of required alright so one of the",
    "start": "2324070",
    "end": "2335350"
  },
  {
    "start": "2333000",
    "end": "2333000"
  },
  {
    "text": "cool benefits that you get that you know I we wanted to use terraform just because we wanted to automate this",
    "start": "2335350",
    "end": "2340360"
  },
  {
    "text": "environment creation but something that that we realized as we started looking",
    "start": "2340360",
    "end": "2345370"
  },
  {
    "text": "at our audit posture is that this gives us a revision log for our infrastructure you know if you have compliance",
    "start": "2345370",
    "end": "2351160"
  },
  {
    "text": "requirements you probably need to know who's making changes why they were made who approved them so you can use your",
    "start": "2351160",
    "end": "2358240"
  },
  {
    "text": "regular code workflow for this instead of having a completely separate process for environmental changes like firewall",
    "start": "2358240",
    "end": "2364810"
  },
  {
    "text": "rules so this is a big win from an audit perspective all right so to sum up",
    "start": "2364810",
    "end": "2371200"
  },
  {
    "start": "2369000",
    "end": "2369000"
  },
  {
    "text": "reason chef for individual instances we're using Packer for collections of instances we're treating a.m. is is",
    "start": "2371200",
    "end": "2377740"
  },
  {
    "text": "mostly immutable containers and as building blocks for more complex containers we're using terraform for",
    "start": "2377740",
    "end": "2384700"
  },
  {
    "text": "whole environments so I mentioned",
    "start": "2384700",
    "end": "2389710"
  },
  {
    "start": "2388000",
    "end": "2388000"
  },
  {
    "text": "testing earlier I want to get back to testing again kind of a fundamental tenet of testing is that what you test",
    "start": "2389710",
    "end": "2397060"
  },
  {
    "text": "is what you deploy or maybe vice versa you deploy what you tap you don't want to compile your code and",
    "start": "2397060",
    "end": "2403510"
  },
  {
    "text": "test that and then recompile it package that and then ship that and hope that it's identical to what compiled last",
    "start": "2403510",
    "end": "2410200"
  },
  {
    "text": "time you know you want to test it as a package so here we've moved from you",
    "start": "2410200",
    "end": "2416320"
  },
  {
    "text": "know testing that package to testing the package on the ami you know very docker",
    "start": "2416320",
    "end": "2421570"
  },
  {
    "text": "like and you no longer have that well it worked on my machine kind of thing you can see here is what it looks like in",
    "start": "2421570",
    "end": "2427840"
  },
  {
    "text": "the ami and yeah it works in the ami for the library that it needs is installed in the ami but we're even going to step",
    "start": "2427840",
    "end": "2434320"
  },
  {
    "text": "farther and we're testing it in the entire environment I you know you can test your ami all day long and like yeah",
    "start": "2434320",
    "end": "2440230"
  },
  {
    "text": "webservice looks like it's good but if you put that on an instance that the",
    "start": "2440230",
    "end": "2445870"
  },
  {
    "text": "security group won't let it reach the database it's probably not gonna work so this allows us to test the security",
    "start": "2445870",
    "end": "2452320"
  },
  {
    "text": "groups as well as the ami is everything else all together alright further on",
    "start": "2452320",
    "end": "2458800"
  },
  {
    "start": "2455000",
    "end": "2455000"
  },
  {
    "text": "testing here um talk about gradual delivery so I realize it's a meme kind",
    "start": "2458800",
    "end": "2463900"
  },
  {
    "text": "of thing you know I don't always test but when I test I do in production but you know if if you've ever operated",
    "start": "2463900",
    "end": "2470980"
  },
  {
    "text": "anything at scale you realize that there's no substitute for production traffic you know no matter how",
    "start": "2470980",
    "end": "2478270"
  },
  {
    "text": "thoroughly you test the customers are going to do something to you that you didn't expect additionally our service",
    "start": "2478270",
    "end": "2485020"
  },
  {
    "text": "looks like a pipeline you know we're getting data in one side and then it's processed through a bunch of steps and",
    "start": "2485020",
    "end": "2490510"
  },
  {
    "text": "then it's eventually persisted to the database so we don't want to insert a new untested step in that pipeline and",
    "start": "2490510",
    "end": "2496690"
  },
  {
    "text": "have everything downstream potentially break so what you want if you've got a",
    "start": "2496690",
    "end": "2503380"
  },
  {
    "text": "pipeline like this is you want a message bus you want a message bus that provides pub/sub architecture with fan-out and by",
    "start": "2503380",
    "end": "2509380"
  },
  {
    "text": "that I mean you want to be able to have multiple consumers of the same message",
    "start": "2509380",
    "end": "2514530"
  },
  {
    "text": "if you have that and that's for us it's Kafka but if your if your Amazon native",
    "start": "2514530",
    "end": "2520300"
  },
  {
    "text": "Amazon Kinesis is the way to go here what that allows you to do is you can",
    "start": "2520300",
    "end": "2525700"
  },
  {
    "text": "deploy a new service or new version of your service have a consuming production traffic alongside the rest",
    "start": "2525700",
    "end": "2532670"
  },
  {
    "text": "of your service but have it either not publish at all if you're just profiling",
    "start": "2532670",
    "end": "2537890"
  },
  {
    "text": "it or have it published to another topic in Kafka or another stream and Kinesis so you can consume that stream by itself",
    "start": "2537890",
    "end": "2545480"
  },
  {
    "text": "outside of production validate that the output looks like what you expect I let the service run for however long",
    "start": "2545480",
    "end": "2552680"
  },
  {
    "text": "whether it's 60 seconds or 30 days to confirm that it's stable and it's",
    "start": "2552680",
    "end": "2558530"
  },
  {
    "text": "producing the output you expect and you just do a configuration change so it's publishing to whatever topic or stream",
    "start": "2558530",
    "end": "2564470"
  },
  {
    "text": "does get persisted to your database or is now viewed by customers so this is",
    "start": "2564470",
    "end": "2572599"
  },
  {
    "start": "2570000",
    "end": "2570000"
  },
  {
    "text": "allowed us to save cost save money and I also make major architectural changes quickly so I want",
    "start": "2572599",
    "end": "2579770"
  },
  {
    "text": "to talk about both of those now if I can get the clicker to work yeah",
    "start": "2579770",
    "end": "2585440"
  },
  {
    "text": "so we persist over a billion business objects a day and we keep them for up to a year so the database is a big big deal",
    "start": "2585440",
    "end": "2592849"
  },
  {
    "text": "to us a lot of places go all-in on the kind of stateless immutable infrastructure",
    "start": "2592849",
    "end": "2599240"
  },
  {
    "text": "approach but they get get to the database and they say well but the database is stateful that's where the",
    "start": "2599240",
    "end": "2604849"
  },
  {
    "text": "state is so it can't be stateless right like I mean you see that all the time it's like here let's make our app whole",
    "start": "2604849",
    "end": "2610160"
  },
  {
    "text": "stateless and then database up and now you've got a pet database I that's I've",
    "start": "2610160",
    "end": "2616339"
  },
  {
    "text": "done that a lot myself I and it's an easy trap to fall into I was I was sort of fortunate that we were so successful",
    "start": "2616339",
    "end": "2622339"
  },
  {
    "text": "so rapidly I couldn't have pet databases they were they were like they were filling up really fast so the thing is",
    "start": "2622339",
    "end": "2630920"
  },
  {
    "text": "that with the right database technology and a little bit help from EBS you can",
    "start": "2630920",
    "end": "2636559"
  },
  {
    "text": "actually you can treat the database similarly so we're using data stacks enterprise which is Cassandra we're",
    "start": "2636559",
    "end": "2643790"
  },
  {
    "text": "actually using the Cassandra piece plus the Soler piece that are they're tightly integrated together it's uh it's highly",
    "start": "2643790",
    "end": "2648950"
  },
  {
    "text": "parallel highly scalable highly available we can lose an availability zone or we can shut and availability",
    "start": "2648950",
    "end": "2654380"
  },
  {
    "text": "zone down and keep on cooking I the",
    "start": "2654380",
    "end": "2659720"
  },
  {
    "text": "solar piece is what allows us to do arbitrary full-text searches",
    "start": "2659720",
    "end": "2665020"
  },
  {
    "text": "on the data and then to Sanders what gives us a high high speed key value store now it's not all unicorns and",
    "start": "2665020",
    "end": "2673600"
  },
  {
    "start": "2671000",
    "end": "2671000"
  },
  {
    "text": "rainbows there's actually limits to Cassandra as an early example we had a",
    "start": "2673600",
    "end": "2679900"
  },
  {
    "text": "big fire drill when we hit 256 nodes that since been fixed but that taught us",
    "start": "2679900",
    "end": "2686170"
  },
  {
    "text": "that we can't just assume that it's gonna scale infinitely so we should you",
    "start": "2686170",
    "end": "2691660"
  },
  {
    "text": "should shard your database whenever possible or at least be have a strategy to be prepared to shard your database",
    "start": "2691660",
    "end": "2697420"
  },
  {
    "text": "for us we have time series data so we char it on time that means we have one",
    "start": "2697420",
    "end": "2703390"
  },
  {
    "text": "hot char that's taking nearly all the current writes it requires you know tons",
    "start": "2703390",
    "end": "2709330"
  },
  {
    "text": "of CPU to do indexing tons of memory to do the searches and very high speed io",
    "start": "2709330",
    "end": "2714400"
  },
  {
    "text": "we're using I to to excels for that today um but then we have lots of warm",
    "start": "2714400",
    "end": "2721119"
  },
  {
    "text": "shards with previous months of data on them and those have a very different profile they're taking very low volume",
    "start": "2721119",
    "end": "2727840"
  },
  {
    "text": "writes where it's not completely changeless because we're going back through customer data and we're finding",
    "start": "2727840",
    "end": "2733180"
  },
  {
    "text": "old threats from last month and writing them to those databases but for the most part they're mostly just needing RAM",
    "start": "2733180",
    "end": "2738310"
  },
  {
    "text": "they don't need a lot of cores they definitely don't need like super high i/o so when we roll a new shard that",
    "start": "2738310",
    "end": "2744970"
  },
  {
    "text": "means that the the old data is now on an expensive database that are expensive hardware that it doesn't really need I",
    "start": "2744970",
    "end": "2751859"
  },
  {
    "text": "so with Cassandra like if you just read the docs like the way that you're supposed to do this you stand up a",
    "start": "2751859",
    "end": "2758920"
  },
  {
    "text": "second data center you enable multi-directional replication you let",
    "start": "2758920",
    "end": "2765100"
  },
  {
    "text": "the data stream over and re-index if it needs re-indexing you swing your rights over the new data center and then you",
    "start": "2765100",
    "end": "2771700"
  },
  {
    "text": "stop replication kill off the old data center that works great there's no downtime",
    "start": "2771700",
    "end": "2777430"
  },
  {
    "text": "the whole thing works great we do it a lot um and if your state's on disk on a",
    "start": "2777430",
    "end": "2782500"
  },
  {
    "text": "ephemeral that's what you're gonna have to do because your your ephemeral storage is tightly coupled to your",
    "start": "2782500",
    "end": "2787630"
  },
  {
    "text": "server but for our warm shards we're using m4 for excel with EBS and we're",
    "start": "2787630",
    "end": "2794200"
  },
  {
    "text": "gonna be probably doing this for hot shards now soon as well because that gives us so amazing advantages if he be s is your",
    "start": "2794200",
    "end": "2803710"
  },
  {
    "start": "2799000",
    "end": "2799000"
  },
  {
    "text": "back in store you've decoupled the state of the database from the server that's serving it EBS is handling the state now",
    "start": "2803710",
    "end": "2810550"
  },
  {
    "text": "if you have a fully replicated data store like Cassandra you don't care if",
    "start": "2810550",
    "end": "2816040"
  },
  {
    "text": "an individual server is up or not you've got two more replicas so it's an example",
    "start": "2816040",
    "end": "2821380"
  },
  {
    "text": "of what that gives you if we have a significant schema change we may have to",
    "start": "2821380",
    "end": "2827410"
  },
  {
    "text": "do a complete re index of our data I with m4 for X large that reindex would",
    "start": "2827410",
    "end": "2834700"
  },
  {
    "text": "take over a week that's okay but I mean again we want to be agile so we actually want it to be able to complete more",
    "start": "2834700",
    "end": "2840520"
  },
  {
    "text": "quickly so we just one availability zone at a time we stopped all the servers",
    "start": "2840520",
    "end": "2846640"
  },
  {
    "text": "convert them them for 10 Excel started back up when the whole thing is M for 10",
    "start": "2846640",
    "end": "2851950"
  },
  {
    "text": "Excel we kick off the reindex and then we reverse the process so we basically we've taken a running",
    "start": "2851950",
    "end": "2858730"
  },
  {
    "text": "database and we've just added we've almost tripled the CPU in the RAM while",
    "start": "2858730",
    "end": "2865870"
  },
  {
    "text": "it was running just for the time that we needed it so we're not paying for it constantly the CFO wouldn't give me",
    "start": "2865870",
    "end": "2871660"
  },
  {
    "text": "approval just run these things indefinitely on beefy servers so we can just we could do that in real time so",
    "start": "2871660",
    "end": "2880780"
  },
  {
    "start": "2879000",
    "end": "2879000"
  },
  {
    "text": "that's been a lot of like really specific you know Packer chef Cassandra really specific tools I kind of want to",
    "start": "2880780",
    "end": "2887860"
  },
  {
    "text": "generalize that and give you some some more general summary advice we want to",
    "start": "2887860",
    "end": "2893140"
  },
  {
    "text": "take the lessons that we learn from agile development and apply them from to infrastructure we want to build an",
    "start": "2893140",
    "end": "2899170"
  },
  {
    "text": "environment where you can deliver small well-tested changes very quickly we want",
    "start": "2899170",
    "end": "2904420"
  },
  {
    "text": "to maintain an environment that has this little variability excuse me as little",
    "start": "2904420",
    "end": "2909550"
  },
  {
    "text": "variability and as few external sources of confusion like people coming in and",
    "start": "2909550",
    "end": "2914650"
  },
  {
    "text": "reconfiguring your service as you can possibly get we want to use immutability and statelessness as much as possible I",
    "start": "2914650",
    "end": "2922890"
  },
  {
    "text": "question assumptions like the database can't be stateless sometimes it requires",
    "start": "2922890",
    "end": "2928240"
  },
  {
    "text": "a little extra work upfront to get that last little bit of state off of the server but we keep",
    "start": "2928240",
    "end": "2935580"
  },
  {
    "text": "running into cases like that that EBS you know rien dexing thing where it's",
    "start": "2935580",
    "end": "2940650"
  },
  {
    "text": "provided as benefits that we weren't even really planning on like that wasn't why I put him on m4 is but then I put him on m4 as it was like oh I don't",
    "start": "2940650",
    "end": "2947400"
  },
  {
    "text": "actually need to like take this long to do the reindex and then your tools like",
    "start": "2947400",
    "end": "2953970"
  },
  {
    "text": "we're using chef and terraform that you want tools that provide idempotency so",
    "start": "2953970",
    "end": "2959820"
  },
  {
    "text": "what what idempotency means is it's an operation that if you apply it more than once you get the same result every time",
    "start": "2959820",
    "end": "2965900"
  },
  {
    "text": "so that terraform file that described 25 to sandra servers or however you know",
    "start": "2965900",
    "end": "2971010"
  },
  {
    "text": "however many count was that's not saying add 25 more servers that's saying this",
    "start": "2971010",
    "end": "2977310"
  },
  {
    "text": "cluster is supposed to have 25 servers and if you run it and it doesn't get us",
    "start": "2977310",
    "end": "2982590"
  },
  {
    "text": "to that known state chef is kind of the same way it's it's saying if you run and",
    "start": "2982590",
    "end": "2987630"
  },
  {
    "text": "you see this packages in here get the package in there i you also want abstraction i got question",
    "start": "2987630",
    "end": "2996630"
  },
  {
    "text": "at a previous company like why are we using chef and not just shell scripts i can't we just you know this is an awful",
    "start": "2996630",
    "end": "3002480"
  },
  {
    "text": "lot of complexity well the nice thing is that chef provides and and other tools puppet do this as well um provides you",
    "start": "3002480",
    "end": "3009500"
  },
  {
    "text": "in abstraction so you're just saying i want to install this package i'm not running the apt command i'm not running",
    "start": "3009500",
    "end": "3015200"
  },
  {
    "text": "the yum command i'm just installing a package i and it seems like a lot of",
    "start": "3015200",
    "end": "3020300"
  },
  {
    "text": "work up front but at the previous company we had a we had an emergency we needed to be on CentOS because the data",
    "start": "3020300",
    "end": "3026150"
  },
  {
    "text": "center we were going to only had sent us in it and it took us I don't know I had budgeted a sprint for this and I thought",
    "start": "3026150",
    "end": "3032600"
  },
  {
    "text": "it was gonna be a huge fire drill and literally like the next day we were all sitting around going it's I think it's",
    "start": "3032600",
    "end": "3039230"
  },
  {
    "text": "done you know so having that abstraction of being able to go from santosh ubuntu or a bunch in a sense us or you know in",
    "start": "3039230",
    "end": "3046970"
  },
  {
    "text": "in the packer sense being able to go from an ami to a vmware image is really",
    "start": "3046970",
    "end": "3052880"
  },
  {
    "text": "powerful and it can help you iterate more quickly and respond to changes or customer requests much more quickly",
    "start": "3052880",
    "end": "3058900"
  },
  {
    "text": "without i'm going to pass the mic back to the virtual mic yeah oh yeah so we're",
    "start": "3058900",
    "end": "3065289"
  },
  {
    "text": "kind of at the end of the session here I want to leave some closing thoughts I know some of you guys probably ought to get to your next thing so really that",
    "start": "3065289",
    "end": "3072819"
  },
  {
    "text": "the goal here is to say if we just think a little bit differently about really large problem landscapes like this we",
    "start": "3072819",
    "end": "3078969"
  },
  {
    "text": "can really take a lot of really hard stuff and make it really manageable really approachable so that real teams can be successful in a way that doesn't",
    "start": "3078969",
    "end": "3085569"
  },
  {
    "text": "even confused as to what went wrong in the process right and so protect wise is very much oriented around trying to",
    "start": "3085569",
    "end": "3091929"
  },
  {
    "text": "deliver that same experience for our customers but it really means that we have to be really good at operating and on the back end because also when you",
    "start": "3091929",
    "end": "3098559"
  },
  {
    "text": "deal with like petabytes of data that can get expensive but if you change things differently the cost of actually managing and computing processing moving",
    "start": "3098559",
    "end": "3105880"
  },
  {
    "text": "stuff around gets really cheap it gets really affordable but it also the most important bit it keeps the team happy",
    "start": "3105880",
    "end": "3111609"
  },
  {
    "text": "and keeps us sane and we're not you know pissing off customers because we've lost control of our infrastructure in the",
    "start": "3111609",
    "end": "3116650"
  },
  {
    "text": "middle of that right so with that in mind really want to invite you guys if you're really interested in what we're",
    "start": "3116650",
    "end": "3122650"
  },
  {
    "text": "working on specifically we have a booth it's a booth number 1845 in the expo hall stop by we'll show you a little bit",
    "start": "3122650",
    "end": "3129369"
  },
  {
    "text": "more about it but if you some of you want to hang out and ask some questions we'll be happy to do that right now so I",
    "start": "3129369",
    "end": "3136439"
  },
  {
    "text": "think there's actually a mic here if somebody wants to block up and ask ask a question",
    "start": "3136439",
    "end": "3142679"
  },
  {
    "text": "it's gonna quietly go to the next session that's good thank you thank you",
    "start": "3148650",
    "end": "3155480"
  }
]