[
  {
    "text": "- Hello, my name is Rob.",
    "start": "1200",
    "end": "3480"
  },
  {
    "text": "I am a principal database engineer at AWS.",
    "start": "3480",
    "end": "7380"
  },
  {
    "text": "In this video, I want to talk",
    "start": "7380",
    "end": "9060"
  },
  {
    "text": "about Babelfish for Aurora Postgres.",
    "start": "9060",
    "end": "11790"
  },
  {
    "text": "In fact, this is the\nfirst video in a series",
    "start": "11790",
    "end": "14670"
  },
  {
    "text": "we will be publishing about Babelfish.",
    "start": "14670",
    "end": "16653"
  },
  {
    "text": "(no audio)",
    "start": "18486",
    "end": "20736"
  },
  {
    "text": "If you are running applications",
    "start": "26190",
    "end": "27720"
  },
  {
    "text": "on Microsoft SQL Server today,",
    "start": "27720",
    "end": "29730"
  },
  {
    "text": "you should learn about Babelfish.",
    "start": "29730",
    "end": "31710"
  },
  {
    "text": "Why?",
    "start": "31710",
    "end": "32640"
  },
  {
    "text": "Well, Babelfish allows you\nto migrate your applications",
    "start": "32640",
    "end": "35880"
  },
  {
    "text": "from Microsoft SQL Server\nto Aurora Postgres,",
    "start": "35880",
    "end": "38970"
  },
  {
    "text": "but without having to\nchange all your SQL code,",
    "start": "38970",
    "end": "41550"
  },
  {
    "text": "and without having to change",
    "start": "41550",
    "end": "42870"
  },
  {
    "text": "any client-server connectivity drivers.",
    "start": "42870",
    "end": "45840"
  },
  {
    "text": "With Babelfish, such a\nmigration is much easier",
    "start": "45840",
    "end": "48750"
  },
  {
    "text": "than a traditional approach",
    "start": "48750",
    "end": "50100"
  },
  {
    "text": "for migrating a SQL-based application.",
    "start": "50100",
    "end": "52593"
  },
  {
    "text": "Now, moving from a proprietary\non-premises database",
    "start": "53460",
    "end": "57570"
  },
  {
    "text": "to an open source database in the cloud is",
    "start": "57570",
    "end": "59970"
  },
  {
    "text": "part of your application\nlandscape modernization",
    "start": "59970",
    "end": "62580"
  },
  {
    "text": "that everybody needs to do at some point.",
    "start": "62580",
    "end": "65190"
  },
  {
    "text": "But Babelfish also\nallows you to break free",
    "start": "65190",
    "end": "67860"
  },
  {
    "text": "from the database licenses\nyou are currently paying,",
    "start": "67860",
    "end": "70830"
  },
  {
    "text": "because Aurora Postgres has",
    "start": "70830",
    "end": "72360"
  },
  {
    "text": "a much more attractive cost model",
    "start": "72360",
    "end": "74310"
  },
  {
    "text": "that does not involve\ntraditional licensing.",
    "start": "74310",
    "end": "77430"
  },
  {
    "text": "Babelfish is available as an\noption with Aurora Postgres",
    "start": "77430",
    "end": "80700"
  },
  {
    "text": "at no additional cost.",
    "start": "80700",
    "end": "82590"
  },
  {
    "text": "If you don't want to use Aurora,",
    "start": "82590",
    "end": "84210"
  },
  {
    "text": "you can also use the open\nsource version of Babelfish,",
    "start": "84210",
    "end": "86970"
  },
  {
    "text": "which is published separately at GitHub.",
    "start": "86970",
    "end": "89820"
  },
  {
    "text": "So Babelfish offers a faster way",
    "start": "89820",
    "end": "92159"
  },
  {
    "text": "to migrate your applications\nfrom SQL Server to Postgres.",
    "start": "92160",
    "end": "96150"
  },
  {
    "text": "It does so by providing two key features.",
    "start": "96150",
    "end": "99750"
  },
  {
    "text": "First, Babelfish supports",
    "start": "99750",
    "end": "101820"
  },
  {
    "text": "the SQL Server-specific TDS protocol",
    "start": "101820",
    "end": "104820"
  },
  {
    "text": "for client-server communication.",
    "start": "104820",
    "end": "106920"
  },
  {
    "text": "And second, Babelfish provides you",
    "start": "106920",
    "end": "109320"
  },
  {
    "text": "with the Transact-SQL\ndialect that SQL Server uses.",
    "start": "109320",
    "end": "112653"
  },
  {
    "text": "Babelfish implements\nthese natively in Postgres",
    "start": "113490",
    "end": "116310"
  },
  {
    "text": "as three Postgres extensions",
    "start": "116310",
    "end": "118350"
  },
  {
    "text": "using building blocks\nthat Postgres provides.",
    "start": "118350",
    "end": "121229"
  },
  {
    "text": "Babelfish will give you the same syntax",
    "start": "121230",
    "end": "123240"
  },
  {
    "text": "and semantics as SQL Server,",
    "start": "123240",
    "end": "125280"
  },
  {
    "text": "even though Postgres itself uses",
    "start": "125280",
    "end": "127470"
  },
  {
    "text": "different syntax and semantics.",
    "start": "127470",
    "end": "130140"
  },
  {
    "text": "So when you connect to the TDS\nport that Babelfish provides,",
    "start": "130140",
    "end": "134160"
  },
  {
    "text": "Postgres will behave\nas if it is SQL Server,",
    "start": "134160",
    "end": "137490"
  },
  {
    "text": "with the Transact-SQL dialect,",
    "start": "137490",
    "end": "139350"
  },
  {
    "text": "with databases like master and tempdb,",
    "start": "139350",
    "end": "142080"
  },
  {
    "text": "and with many of the SQL Server catalogs.",
    "start": "142080",
    "end": "145110"
  },
  {
    "text": "At the same time, you can still connect",
    "start": "145110",
    "end": "147300"
  },
  {
    "text": "through the default Postgres port 5432",
    "start": "147300",
    "end": "150270"
  },
  {
    "text": "using Postgres syntax and semantics.",
    "start": "150270",
    "end": "152703"
  },
  {
    "text": "To migrate your applications\nfrom SQL Server to Babelfish,",
    "start": "153600",
    "end": "157380"
  },
  {
    "text": "on a high level, you\nneed to take these steps.",
    "start": "157380",
    "end": "160410"
  },
  {
    "text": "First, you need to get\na copy of the schema",
    "start": "160410",
    "end": "162870"
  },
  {
    "text": "of the databases you want to migrate.",
    "start": "162870",
    "end": "165060"
  },
  {
    "text": "The best way to do this\nis to reverse engineer",
    "start": "165060",
    "end": "167610"
  },
  {
    "text": "those databases with SQL\nServer Management Studio.",
    "start": "167610",
    "end": "171390"
  },
  {
    "text": "That will produce a script file containing",
    "start": "171390",
    "end": "173370"
  },
  {
    "text": "the DDL statements for these databases.",
    "start": "173370",
    "end": "175833"
  },
  {
    "text": "You can also capture the SQL statements",
    "start": "176760",
    "end": "178680"
  },
  {
    "text": "generated the client application,",
    "start": "178680",
    "end": "180297"
  },
  {
    "text": "and that gets sent to the database server,",
    "start": "180297",
    "end": "182610"
  },
  {
    "text": "but these are usually less important.",
    "start": "182610",
    "end": "184893"
  },
  {
    "text": "What you need to do next is\nrun the Compass assessment tool",
    "start": "185790",
    "end": "188819"
  },
  {
    "text": "on the DDL code for schema.",
    "start": "188820",
    "end": "191190"
  },
  {
    "text": "Compass is a standalone\ntool that is available",
    "start": "191190",
    "end": "193950"
  },
  {
    "text": "as part of Babelfish, and\nwhich you can download.",
    "start": "193950",
    "end": "196920"
  },
  {
    "text": "Compass will analyze DDL and SQL code,",
    "start": "196920",
    "end": "199530"
  },
  {
    "text": "and report in great detail\nevery SQL feature found,",
    "start": "199530",
    "end": "203190"
  },
  {
    "text": "and it will classify them",
    "start": "203190",
    "end": "204450"
  },
  {
    "text": "either as supported by Babelfish, or not.",
    "start": "204450",
    "end": "207810"
  },
  {
    "text": "Now, if the Compass report indicates",
    "start": "207810",
    "end": "210150"
  },
  {
    "text": "that your application\ncontains SQL features",
    "start": "210150",
    "end": "212519"
  },
  {
    "text": "not currently supported by Babelfish,",
    "start": "212520",
    "end": "215070"
  },
  {
    "text": "you need to figure out\nwhat to do about it.",
    "start": "215070",
    "end": "218220"
  },
  {
    "text": "One option is to rewrite\nthose pieces of SQL",
    "start": "218220",
    "end": "221310"
  },
  {
    "text": "using SQL statements that\nare supported by Babelfish.",
    "start": "221310",
    "end": "225180"
  },
  {
    "text": "Another is to descope the migration,",
    "start": "225180",
    "end": "227730"
  },
  {
    "text": "in other words, remove those pieces of SQL",
    "start": "227730",
    "end": "230519"
  },
  {
    "text": "from the application altogether.",
    "start": "230520",
    "end": "232323"
  },
  {
    "text": "There are separate videos\non the Compass tool,",
    "start": "233220",
    "end": "235257"
  },
  {
    "text": "and you should check 'em out.",
    "start": "235257",
    "end": "236707"
  },
  {
    "text": "Now, next, you need to create\nyourself a Babelfish instance,",
    "start": "237570",
    "end": "241230"
  },
  {
    "text": "and that's pretty simple.",
    "start": "241230",
    "end": "242760"
  },
  {
    "text": "Just go to the RDS service at AWS,",
    "start": "242760",
    "end": "245640"
  },
  {
    "text": "create a new Aurora Postgres database,",
    "start": "245640",
    "end": "248250"
  },
  {
    "text": "and tick the box to turn on Babelfish.",
    "start": "248250",
    "end": "251460"
  },
  {
    "text": "Once you have your instance,",
    "start": "251460",
    "end": "252780"
  },
  {
    "text": "you need to recreate\nthe schema in Babelfish.",
    "start": "252780",
    "end": "255510"
  },
  {
    "text": "You do that by taking your DDL script,",
    "start": "255510",
    "end": "258030"
  },
  {
    "text": "and execute it against\nthe TDS port of Babelfish.",
    "start": "258030",
    "end": "261420"
  },
  {
    "text": "This is best done using the\ncommand line utility sqlcmd.",
    "start": "261420",
    "end": "265683"
  },
  {
    "text": "When the schema has been created,",
    "start": "266580",
    "end": "268349"
  },
  {
    "text": "you need to migrate the data\nfrom SQL Server to Babelfish,",
    "start": "268350",
    "end": "271680"
  },
  {
    "text": "and perhaps the best way to do that is",
    "start": "271680",
    "end": "273690"
  },
  {
    "text": "to use the DMS tool which AWS provides.",
    "start": "273690",
    "end": "277233"
  },
  {
    "text": "So once you've done all that,\nyou've migrated your schema,",
    "start": "278460",
    "end": "281729"
  },
  {
    "text": "you've migrated the data in the tables,",
    "start": "281730",
    "end": "284070"
  },
  {
    "text": "then the last thing to do is to change",
    "start": "284070",
    "end": "286470"
  },
  {
    "text": "how the applications\nconnect to the database.",
    "start": "286470",
    "end": "289620"
  },
  {
    "text": "Currently, the client applications\nconnect to SQL Server,",
    "start": "289620",
    "end": "292949"
  },
  {
    "text": "and you have to change\ntheir configuration,",
    "start": "292950",
    "end": "294930"
  },
  {
    "text": "so that they connect to Babelfish instead.",
    "start": "294930",
    "end": "297990"
  },
  {
    "text": "And once you've done that,\nyou can test your application,",
    "start": "297990",
    "end": "300479"
  },
  {
    "text": "and basically your migration is completed.",
    "start": "300480",
    "end": "303003"
  },
  {
    "text": "When you compare a migration to Babelfish",
    "start": "303990",
    "end": "306120"
  },
  {
    "text": "with a traditional migration,",
    "start": "306120",
    "end": "307620"
  },
  {
    "text": "where you have to\nconvert all your SQL code",
    "start": "307620",
    "end": "309960"
  },
  {
    "text": "to the dialect of the target database,",
    "start": "309960",
    "end": "312000"
  },
  {
    "text": "there are some big differences.",
    "start": "312000",
    "end": "314190"
  },
  {
    "text": "With a traditional migration,",
    "start": "314190",
    "end": "315660"
  },
  {
    "text": "you have to migrate all your SQL code.",
    "start": "315660",
    "end": "318150"
  },
  {
    "text": "There is no alternative.",
    "start": "318150",
    "end": "319320"
  },
  {
    "text": "You cannot do only a part.",
    "start": "319320",
    "end": "321960"
  },
  {
    "text": "But with Babelfish, this is different,",
    "start": "321960",
    "end": "323759"
  },
  {
    "text": "because most of the Transact-SQL\ncode is already supported,",
    "start": "323760",
    "end": "326820"
  },
  {
    "text": "so it does not require changes.",
    "start": "326820",
    "end": "328803"
  },
  {
    "text": "Likewise, for migrating\na .NET application,",
    "start": "329700",
    "end": "332370"
  },
  {
    "text": "that's going to require\na pretty big rewrite",
    "start": "332370",
    "end": "334830"
  },
  {
    "text": "if you want to move it\nto a different database,",
    "start": "334830",
    "end": "337020"
  },
  {
    "text": "like Postgres.",
    "start": "337020",
    "end": "338370"
  },
  {
    "text": "But again, because Babelfish supports",
    "start": "338370",
    "end": "340380"
  },
  {
    "text": "most of the SQL Server dialect,",
    "start": "340380",
    "end": "342330"
  },
  {
    "text": "your .NET applications\nwill just keep working.",
    "start": "342330",
    "end": "345003"
  },
  {
    "text": "Also, with the traditional SQL\ndialect conversion approach,",
    "start": "346290",
    "end": "349920"
  },
  {
    "text": "the really hard part is migration",
    "start": "349920",
    "end": "351900"
  },
  {
    "text": "of procedural SQL code,\nsuch as stored procedures,",
    "start": "351900",
    "end": "355080"
  },
  {
    "text": "SQL functions, triggers,\nor SQL batch scripts.",
    "start": "355080",
    "end": "358830"
  },
  {
    "text": "All that procedural logic\nwill have to be rewritten,",
    "start": "358830",
    "end": "361680"
  },
  {
    "text": "and that can be really challenging,",
    "start": "361680",
    "end": "363630"
  },
  {
    "text": "especially when there\nis a lot of such code.",
    "start": "363630",
    "end": "366510"
  },
  {
    "text": "With Babelfish, most of\nthe stored procedures",
    "start": "366510",
    "end": "368850"
  },
  {
    "text": "will keep working unchanged.",
    "start": "368850",
    "end": "371130"
  },
  {
    "text": "It may be needed to do some\nrefactoring to address pieces",
    "start": "371130",
    "end": "374220"
  },
  {
    "text": "that are not fully supported by Babelfish,",
    "start": "374220",
    "end": "376440"
  },
  {
    "text": "but that will most likely be\nonly a minor part of the code.",
    "start": "376440",
    "end": "379653"
  },
  {
    "text": "In addition, in a traditional migration,",
    "start": "380940",
    "end": "383310"
  },
  {
    "text": "you'll have to change\nthe connectivity drivers",
    "start": "383310",
    "end": "385590"
  },
  {
    "text": "between the client application\nand the database server.",
    "start": "385590",
    "end": "389130"
  },
  {
    "text": "With Babelfish, you don't\nneed to change that,",
    "start": "389130",
    "end": "391200"
  },
  {
    "text": "because the SQL Server\nconnectivity is supported.",
    "start": "391200",
    "end": "394413"
  },
  {
    "text": "All taken together, this\nmeans that a migration",
    "start": "395340",
    "end": "397919"
  },
  {
    "text": "to Babelfish is much less complex",
    "start": "397920",
    "end": "400080"
  },
  {
    "text": "than a traditional migration.",
    "start": "400080",
    "end": "401610"
  },
  {
    "text": "It's lower risk, lower cost,\nand just much more feasible.",
    "start": "401610",
    "end": "405482"
  },
  {
    "text": "Now, where are we with Babelfish today?",
    "start": "406320",
    "end": "409680"
  },
  {
    "text": "The first release was in October, 2021,",
    "start": "409680",
    "end": "412380"
  },
  {
    "text": "and that was version 1.0.0",
    "start": "412380",
    "end": "415080"
  },
  {
    "text": "based on Postgres version 13.4.",
    "start": "415080",
    "end": "418919"
  },
  {
    "text": "That had all the basics,\nthe Transact-SQL dialect,",
    "start": "418920",
    "end": "421770"
  },
  {
    "text": "the tables, views, stored\nprocedures, data types,",
    "start": "421770",
    "end": "424680"
  },
  {
    "text": "and really all the basics of SQL Server.",
    "start": "424680",
    "end": "427949"
  },
  {
    "text": "However, there were also a few features",
    "start": "427950",
    "end": "429930"
  },
  {
    "text": "that were not yet supported\nin that first release.",
    "start": "429930",
    "end": "433169"
  },
  {
    "text": "Now, today in 2022, we are\nlooking at release 2.2.0",
    "start": "433170",
    "end": "437310"
  },
  {
    "text": "based on Postgres 14.5,",
    "start": "437310",
    "end": "439440"
  },
  {
    "text": "and some pretty big\nfeatures have been added",
    "start": "439440",
    "end": "441510"
  },
  {
    "text": "since that original release.",
    "start": "441510",
    "end": "442980"
  },
  {
    "text": "Just to quickly mention a few,",
    "start": "442980",
    "end": "444573"
  },
  {
    "text": "one of the challenges\nin the first release was",
    "start": "445740",
    "end": "448169"
  },
  {
    "text": "that there was no good way\nto migrate data to Babelfish.",
    "start": "448170",
    "end": "452460"
  },
  {
    "text": "Today, in release 2.2.0,",
    "start": "452460",
    "end": "455009"
  },
  {
    "text": "DMS works, the bcp utility works,",
    "start": "455010",
    "end": "458100"
  },
  {
    "text": "and the Import/Export Wizard",
    "start": "458100",
    "end": "459660"
  },
  {
    "text": "in SQL Server Management\nStudio works as well.",
    "start": "459660",
    "end": "462933"
  },
  {
    "text": "For SQL Server Management\nStudio, in the first release,",
    "start": "464100",
    "end": "466830"
  },
  {
    "text": "you could only connect with\na Query Explorer window.",
    "start": "466830",
    "end": "469560"
  },
  {
    "text": "And today, you can also connect\nwith your Object Explorer,",
    "start": "469560",
    "end": "472560"
  },
  {
    "text": "even though not all aspects\nof the Object Explorer work,",
    "start": "472560",
    "end": "475800"
  },
  {
    "text": "but it is a much better experience",
    "start": "475800",
    "end": "477720"
  },
  {
    "text": "than in that first release.",
    "start": "477720",
    "end": "479073"
  },
  {
    "text": "For the big Transact-SQL\nfeatures that have been added,",
    "start": "480720",
    "end": "483930"
  },
  {
    "text": "an important one is the TIMESTAMP column,",
    "start": "483930",
    "end": "486750"
  },
  {
    "text": "also known as ROWVERSION column.",
    "start": "486750",
    "end": "489510"
  },
  {
    "text": "Also, GRANT and REVOKE are now supported",
    "start": "489510",
    "end": "492390"
  },
  {
    "text": "for granting object permissions.",
    "start": "492390",
    "end": "495150"
  },
  {
    "text": "You can now create database\nusers, or database principals,",
    "start": "495150",
    "end": "498810"
  },
  {
    "text": "and you can group them together\nwith user-defined roles.",
    "start": "498810",
    "end": "502023"
  },
  {
    "text": "Cross-database queries work now,",
    "start": "502890",
    "end": "505170"
  },
  {
    "text": "including cross-database\nprocedure executions,",
    "start": "505170",
    "end": "508650"
  },
  {
    "text": "and we have support for lateral joins.",
    "start": "508650",
    "end": "511050"
  },
  {
    "text": "That is CROSS APPLY and OUTER APPLY.",
    "start": "511050",
    "end": "513362"
  },
  {
    "text": "There are many more smaller enhancements",
    "start": "514410",
    "end": "516509"
  },
  {
    "text": "to Transact-SQL features and functions,",
    "start": "516510",
    "end": "518580"
  },
  {
    "text": "but these are really the big ones.",
    "start": "518580",
    "end": "521010"
  },
  {
    "text": "For more information about Babelfish,",
    "start": "521010",
    "end": "523020"
  },
  {
    "text": "go to the documentation link shown here,",
    "start": "523020",
    "end": "525630"
  },
  {
    "text": "but it may be easier\nto just do a web search",
    "start": "525630",
    "end": "528120"
  },
  {
    "text": "for Aurora Babelfish documentation.",
    "start": "528120",
    "end": "530703"
  },
  {
    "text": "For the Compass tool,",
    "start": "531600",
    "end": "532860"
  },
  {
    "text": "which will be discussed\nin a separate video,",
    "start": "532860",
    "end": "535170"
  },
  {
    "text": "just search for Babelfish Compass,",
    "start": "535170",
    "end": "537570"
  },
  {
    "text": "and that will take you\nto the GitHub repository,",
    "start": "537570",
    "end": "539850"
  },
  {
    "text": "where you can download it.",
    "start": "539850",
    "end": "541149"
  },
  {
    "text": "Now, after all this,",
    "start": "542760",
    "end": "544320"
  },
  {
    "text": "you should really try Babelfish yourself.",
    "start": "544320",
    "end": "546840"
  },
  {
    "text": "It's pretty simple.",
    "start": "546840",
    "end": "548250"
  },
  {
    "text": "Go to the RDS service at AWS,",
    "start": "548250",
    "end": "550740"
  },
  {
    "text": "hit the Create database button,",
    "start": "550740",
    "end": "552600"
  },
  {
    "text": "and choose the Aurora\nPostgres Compatible Edition.",
    "start": "552600",
    "end": "555899"
  },
  {
    "text": "The important thing is to tick the box",
    "start": "555900",
    "end": "557760"
  },
  {
    "text": "that says Turn on Babelfish.",
    "start": "557760",
    "end": "560550"
  },
  {
    "text": "That will get you a Babelfish\nversion of Aurora Postgres.",
    "start": "560550",
    "end": "563760"
  },
  {
    "text": "And once you have that, you\ncan use it, and try it out.",
    "start": "563760",
    "end": "566970"
  },
  {
    "text": "I hope you will enjoy Babelfish.",
    "start": "566970",
    "end": "568772"
  },
  {
    "text": "Please check out our\nother videos on Babelfish.",
    "start": "569970",
    "end": "573240"
  },
  {
    "text": "And for now, thank you for watching.",
    "start": "573240",
    "end": "575553"
  },
  {
    "text": "(no audio)",
    "start": "577490",
    "end": "579740"
  }
]