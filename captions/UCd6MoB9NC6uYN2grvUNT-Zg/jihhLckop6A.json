[
  {
    "text": "all right good afternoon everybody so looking at the title here on Monday I",
    "start": "0",
    "end": "6649"
  },
  {
    "text": "sat in on a data analytics talk and the presenter was very self-conscious that",
    "start": "6649",
    "end": "12690"
  },
  {
    "text": "he had the longest Ana little August title and he said that he ran a Python",
    "start": "12690",
    "end": "19680"
  },
  {
    "text": "script to find out who actually had the longest title in the whole conference and I was very worried he was gonna put",
    "start": "19680",
    "end": "26220"
  },
  {
    "text": "us up as the winner yeah he didn't do that which is very nice and I don't know if we were the winner or not but anyway",
    "start": "26220",
    "end": "32880"
  },
  {
    "text": "that's the subject of our talk we're going to talk about using the ec2",
    "start": "32880",
    "end": "39360"
  },
  {
    "text": "systems manager service to implement resilience tests in your CI CD pipeline",
    "start": "39360",
    "end": "45899"
  },
  {
    "text": "that's continuous integration continuous delivery pipeline and I'm Willie wheeler this is Dave Bock Shawny and we're both",
    "start": "45899",
    "end": "53219"
  },
  {
    "text": "from Expedia ok so before we get into",
    "start": "53219",
    "end": "59070"
  },
  {
    "text": "the core of the presentation I want to just start off with a back-of-the-envelope calculation to kick",
    "start": "59070",
    "end": "65700"
  },
  {
    "text": "us off so in 2016 Expedia was it turns",
    "start": "65700",
    "end": "70890"
  },
  {
    "text": "out the 11th largest Internet company by revenue on that was actually news to me",
    "start": "70890",
    "end": "76979"
  },
  {
    "text": "I didn't realize that that was the case but we did eight point seven seven billion dollars of revenue in in 2016",
    "start": "76979",
    "end": "85220"
  },
  {
    "text": "and so if you take a look at that figure and then apply the kind of standard to",
    "start": "85220",
    "end": "92009"
  },
  {
    "text": "nine three nines four nines to see what's the potential revenue loss there this is what we come up with so for two",
    "start": "92009",
    "end": "100710"
  },
  {
    "text": "nines uptime that translates to about three and a half four days of downtime and that's again this is just back of",
    "start": "100710",
    "end": "108479"
  },
  {
    "text": "the envelope but that's a pretty massive figure there almost 90 million dollars of potential revenue loss the three",
    "start": "108479",
    "end": "116189"
  },
  {
    "text": "nines is that's where we have we brought it down to about nine hours of downtime",
    "start": "116189",
    "end": "121770"
  },
  {
    "text": "per year and you can see that that 1% not even 1% difference that that's",
    "start": "121770",
    "end": "128489"
  },
  {
    "text": "pretty huge that brings it to nine million dollars and then 4:9 that's where you're you know really",
    "start": "128489",
    "end": "134500"
  },
  {
    "text": "getting good now you know under a million dollars there and so again between two 9s and three nines we're",
    "start": "134500",
    "end": "142720"
  },
  {
    "text": "talking a many tens of millions of dollars and so what that tells us is",
    "start": "142720",
    "end": "149680"
  },
  {
    "text": "that keeping our site up is really a big deal it's something we care about it's not a it's not a trivial amount of money",
    "start": "149680",
    "end": "158730"
  },
  {
    "text": "so for the talk today we're going to cover the topics you see here I'm going",
    "start": "158730",
    "end": "165280"
  },
  {
    "text": "to start us off with a couple of overviews the first overview is just a",
    "start": "165280",
    "end": "170320"
  },
  {
    "text": "general overview on resilience engineering sometimes it's called chaos engineering but just a general overview",
    "start": "170320",
    "end": "176650"
  },
  {
    "text": "of resilience engineering just because a lot of people may not be familiar with that practice the second overview will",
    "start": "176650",
    "end": "184150"
  },
  {
    "text": "be Amazon ec2 Systems Manager which is the tool we're going to use to pursue",
    "start": "184150",
    "end": "190180"
  },
  {
    "text": "our resilience engineering demos here after the overviews I'll turn it over to Dave who will show us two demos the",
    "start": "190180",
    "end": "199570"
  },
  {
    "text": "first one will be using ec2 Systems Manager to attack services",
    "start": "199570",
    "end": "205299"
  },
  {
    "text": "right so the service that we want to test for resilience he'll use it to show how to implement an attack and then",
    "start": "205299",
    "end": "211720"
  },
  {
    "text": "after that Dave will show how to take the attacks that we demonstrate there",
    "start": "211720",
    "end": "218049"
  },
  {
    "text": "and embed those in the context of a CI CD pipeline so that you can get those on",
    "start": "218049",
    "end": "223209"
  },
  {
    "text": "an ongoing basis and prevent regressions that sort of thing and then after that I",
    "start": "223209",
    "end": "228730"
  },
  {
    "text": "will get back into it and I will show how to implement other attacks Dave's going to show one attack I'll show how",
    "start": "228730",
    "end": "235209"
  },
  {
    "text": "to implement other attacks using SSM and then we'll open it up to Q&A",
    "start": "235209",
    "end": "241500"
  },
  {
    "text": "okay so first we'll do the resilience engineering over you okay so the goals",
    "start": "242370",
    "end": "252160"
  },
  {
    "text": "of this actually there's there's one goal and it's pretty straightforward and that goal is to keep the site up right",
    "start": "252160",
    "end": "257979"
  },
  {
    "text": "so Expedia has actually multiple sites and you know there can be a lot of kind",
    "start": "257979",
    "end": "264849"
  },
  {
    "text": "of back-and-forth about the detail like hey we need to keep it up in this situation not that situation a lot of",
    "start": "264849",
    "end": "270740"
  },
  {
    "text": "that's noise right the idea is that we know things are gonna break in the background you know we may lose",
    "start": "270740",
    "end": "276470"
  },
  {
    "text": "instances we may have Layton sees whatever it is those things happen and when you're operating at sufficient",
    "start": "276470",
    "end": "282319"
  },
  {
    "text": "scale they're going to happen on a regular basis and we can't let somebody's broken instance take down the",
    "start": "282319",
    "end": "288710"
  },
  {
    "text": "site right so the idea here is we want to keep the site up even when things are going wrong and you know that that's how",
    "start": "288710",
    "end": "296840"
  },
  {
    "text": "we protect our revenue right while the sites up we're doing business while the site's down we're not selling anything",
    "start": "296840",
    "end": "302860"
  },
  {
    "text": "and the there are a number of different challenges that arise when you're trying",
    "start": "302860",
    "end": "310580"
  },
  {
    "text": "to keep the site up so this is very much a partial list but I think that anybody",
    "start": "310580",
    "end": "316370"
  },
  {
    "text": "who's in development or operations are actually just in tech generally will be familiar with a lot of these so for",
    "start": "316370",
    "end": "323060"
  },
  {
    "text": "example traffic right if you get more traffic than you were expecting to get or that you have capacity to handle that",
    "start": "323060",
    "end": "330229"
  },
  {
    "text": "can certainly cause problems for you there are various resource related",
    "start": "330229",
    "end": "335650"
  },
  {
    "text": "challenges you can run into so CPU Network storage memory these are all",
    "start": "335650",
    "end": "342770"
  },
  {
    "text": "resources that are finite resources and so when you run out of those things you can reliably expect that problems will",
    "start": "342770",
    "end": "350539"
  },
  {
    "text": "occur unless you account for those you can lose power right that happens a",
    "start": "350539",
    "end": "356000"
  },
  {
    "text": "couple that are not listed here but that also happened security related incidents",
    "start": "356000",
    "end": "361789"
  },
  {
    "text": "can happen right so if you have a DDoS attack that can certainly take down your site a sequel injection that comes in",
    "start": "361789",
    "end": "368599"
  },
  {
    "text": "and wipes out some of your data that can effectively end up being a site outage if your site relies upon that data which",
    "start": "368599",
    "end": "375710"
  },
  {
    "text": "it probably does another kind of challenge that comes up especially in",
    "start": "375710",
    "end": "381349"
  },
  {
    "text": "organizations that are doing the kind of continuous delivery sort of model for releases sometimes people push out bad",
    "start": "381349",
    "end": "388669"
  },
  {
    "text": "code that breaks right I mean the idea is to try not to do that but it happens so for example right maybe some new",
    "start": "388669",
    "end": "396050"
  },
  {
    "text": "JavaScript goes out and it turns out that a certain common in a browser and operating system is not",
    "start": "396050",
    "end": "402860"
  },
  {
    "text": "compatible with that JavaScript and so for some number of people the site doesn't work right those are all things",
    "start": "402860",
    "end": "408110"
  },
  {
    "text": "that can end up resulting in lost tails lost bookings and want to protect ourselves against those kind of things",
    "start": "408110",
    "end": "414190"
  },
  {
    "text": "and so the this idea of protecting ourselves there are multiple strategies",
    "start": "414190",
    "end": "421760"
  },
  {
    "text": "available for that I'm not going to cover all of those but I will cover some",
    "start": "421760",
    "end": "427100"
  },
  {
    "text": "of them the first general category is in the area of capacity right so the idea",
    "start": "427100",
    "end": "433550"
  },
  {
    "text": "with capacity related strategies is that we have a certain amount of demand you know requests coming in from users from",
    "start": "433550",
    "end": "440390"
  },
  {
    "text": "customers and we have a certain amount of capacity available to service those requests and as long as we have enough",
    "start": "440390",
    "end": "446810"
  },
  {
    "text": "capacity no problem but if the demand exceeds that capacity then yes there",
    "start": "446810",
    "end": "453710"
  },
  {
    "text": "will be problems and so the traditional approach to this to solving this issue is really over provisioning right so you",
    "start": "453710",
    "end": "461180"
  },
  {
    "text": "may have heard before people talk about hey do we have enough Headroom to deal with you know this amount of traffic the",
    "start": "461180",
    "end": "468740"
  },
  {
    "text": "idea is that the traffic comes in like this right you have you have patterns daily cycles weekly cycles monthly you",
    "start": "468740",
    "end": "475820"
  },
  {
    "text": "know yearly even certain times a year maybe you know busy season and so if you",
    "start": "475820",
    "end": "482000"
  },
  {
    "text": "what one approach to solving the capacity issue is to just make sure you always have enough for the high-water",
    "start": "482000",
    "end": "487550"
  },
  {
    "text": "mark right so if it's Christmas and you sell Christmas stuff then have enough capacity for that the challenge with",
    "start": "487550",
    "end": "495830"
  },
  {
    "text": "that obviously is that during the times where you're at low demand you have a",
    "start": "495830",
    "end": "502040"
  },
  {
    "text": "lot of unused capacity and that's expensive and so a more recent approach",
    "start": "502040",
    "end": "507890"
  },
  {
    "text": "and I imagine this is familiar to everybody you know at AWS reinvent is",
    "start": "507890",
    "end": "513080"
  },
  {
    "text": "auto-scaling right so the idea being more just-in-time model for provisioning",
    "start": "513080",
    "end": "518810"
  },
  {
    "text": "capacity right so while you have low demand then you provision smaller amounts of capacity and as the demand",
    "start": "518810",
    "end": "526160"
  },
  {
    "text": "starts to increase you pay attention to that and then you just deploy more capacity so that you don't run into",
    "start": "526160",
    "end": "532310"
  },
  {
    "text": "problems benefit there's you have the capacity on hand the and also you do that in a more",
    "start": "532310",
    "end": "538920"
  },
  {
    "text": "cost-effective way than over-provisioning the third approach is this idea called load shedding and the",
    "start": "538920",
    "end": "546449"
  },
  {
    "text": "idea here is that sometimes for whatever reason creating more capacity may not be",
    "start": "546449",
    "end": "553110"
  },
  {
    "text": "an option I you may not have the capacity on hand the other kind of case is you may have a certain user or a",
    "start": "553110",
    "end": "559110"
  },
  {
    "text": "certain type of user for example like bot traffic where you want to let some of that in but you don't want to let you",
    "start": "559110",
    "end": "564839"
  },
  {
    "text": "know too much of it in so you can do something called load shedding which is you know - if you get too much of the",
    "start": "564839",
    "end": "571470"
  },
  {
    "text": "traffic then drop some of it on the floor and at least you don't lose the site overwrite some users or some",
    "start": "571470",
    "end": "576990"
  },
  {
    "text": "clients won't get their request service but the site stays up so that that was a",
    "start": "576990",
    "end": "584629"
  },
  {
    "text": "capacity related strategies another general category is the idea of fault",
    "start": "584629",
    "end": "590910"
  },
  {
    "text": "tolerance and here this is in recognition of something they mentioned earlier which is that things are going",
    "start": "590910",
    "end": "596550"
  },
  {
    "text": "to break on the site on the back end all that the things are going to break and so do we have the ability to withstand",
    "start": "596550",
    "end": "601860"
  },
  {
    "text": "those issues when they occur and before I talk about these these specific items",
    "start": "601860",
    "end": "607769"
  },
  {
    "text": "that you see here I'm going to talk a little bit about this concept of a circuit breaker so this this is like a",
    "start": "607769",
    "end": "614459"
  },
  {
    "text": "circuit breaker that's in your house the idea is that you have a service we call",
    "start": "614459",
    "end": "620160"
  },
  {
    "text": "a that's going to call service B and normally service a just directly invoke",
    "start": "620160",
    "end": "625350"
  },
  {
    "text": "service B makes requests but if service B breaks in some way then that can end",
    "start": "625350",
    "end": "631319"
  },
  {
    "text": "up with service a breaking right and especially if service B gets low then",
    "start": "631319",
    "end": "636569"
  },
  {
    "text": "that can really cause problems for a service a latency tends to be a more problematic issue than just B being",
    "start": "636569",
    "end": "643319"
  },
  {
    "text": "unavailable and so the idea is to solve that to take a circuit breaker or",
    "start": "643319",
    "end": "649860"
  },
  {
    "text": "something called a circuit breaker and just stick that in between service a and service B and the circuit breaker it has",
    "start": "649860",
    "end": "656279"
  },
  {
    "text": "three states it has a closed state which is the normal operating state where traffic flows across the breaker from",
    "start": "656279",
    "end": "662610"
  },
  {
    "text": "service a service B you have an open state which when the breaker detects that there's",
    "start": "662610",
    "end": "668730"
  },
  {
    "text": "something wrong with service B whether its slowed or broken whatever it is but something's wrong",
    "start": "668730",
    "end": "674280"
  },
  {
    "text": "so the breaker trips into the open state which means the traffic can no longer",
    "start": "674280",
    "end": "679380"
  },
  {
    "text": "flow across that path and then you have a third state which is called half open",
    "start": "679380",
    "end": "684390"
  },
  {
    "text": "the idea is that when service B recovers the breaker you know we want to know",
    "start": "684390",
    "end": "690810"
  },
  {
    "text": "about that so that we can restore service essentially back to a and so serve what the breaker will do is it",
    "start": "690810",
    "end": "696540"
  },
  {
    "text": "will watch the traffic and it will occasionally let a little bit of traffic across the breaker and if that succeeds",
    "start": "696540",
    "end": "703080"
  },
  {
    "text": "then great we go back into the closed state and if it fails then we stay open",
    "start": "703080",
    "end": "708240"
  },
  {
    "text": "until it closes so the idea with circuit breakers is that we can protect the",
    "start": "708240",
    "end": "715380"
  },
  {
    "text": "communication there and protect a in particular from B there are three basic approaches to using circuit breakers the",
    "start": "715380",
    "end": "723090"
  },
  {
    "text": "first one is this idea of a fallback and that what that is is if the downstream",
    "start": "723090",
    "end": "729720"
  },
  {
    "text": "service is unavailable have something else you can do instead and that could be a failover instance of service B",
    "start": "729720",
    "end": "736500"
  },
  {
    "text": "right so maybe you have you know your your core instances in US West too but",
    "start": "736500",
    "end": "741600"
  },
  {
    "text": "if you know if things go bad then you can at least temporarily failover to",
    "start": "741600",
    "end": "746670"
  },
  {
    "text": "u.s. East one let's say you have a separate instance there doesn't have to be failover it could be falling back to",
    "start": "746670",
    "end": "752370"
  },
  {
    "text": "a cache like let's say you were getting live data but that's unavailable okay fall back to a cache or you can go the",
    "start": "752370",
    "end": "760020"
  },
  {
    "text": "other way to another you can do hard-coded values static values anything",
    "start": "760020",
    "end": "766260"
  },
  {
    "text": "like that the second one is failing silently which is where you may have you",
    "start": "766260",
    "end": "773760"
  },
  {
    "text": "know you have a problem it's okay if the circuit breaker just says you know what I can't reach the back end I'm just going to return an empty response and",
    "start": "773760",
    "end": "780510"
  },
  {
    "text": "then it's up to the client to deal with that I'm so an example of Expedia Expedia we have an itinerary service and",
    "start": "780510",
    "end": "786720"
  },
  {
    "text": "as part of that itinerary we display geographic information on the screen",
    "start": "786720",
    "end": "792080"
  },
  {
    "text": "that's that's nice to have but we don't want a problem with the geography",
    "start": "792080",
    "end": "798060"
  },
  {
    "text": "service to cause the itinerary sir to go down so if geographies having an issue it's fine if itinerary just shows",
    "start": "798060",
    "end": "804910"
  },
  {
    "text": "nothing at the time not that geography would ever be down and then the third",
    "start": "804910",
    "end": "810850"
  },
  {
    "text": "one is failing fast which is if you can't do a fallback and if you can't fail silent at least just fail very",
    "start": "810850",
    "end": "817810"
  },
  {
    "text": "quickly so that you're not consuming a bunch of resources and that can at least prevent problems from cascading up the",
    "start": "817810",
    "end": "824710"
  },
  {
    "text": "stack so uh let me talk a little bit about the anatomy of an experiment and",
    "start": "824710",
    "end": "832150"
  },
  {
    "text": "what you would want to do an experiment on so the idea is that we have these problems we have some kind of intervention that we want to put in",
    "start": "832150",
    "end": "838330"
  },
  {
    "text": "place like you know circuit breakers rate limiters whatever it is and so what",
    "start": "838330",
    "end": "844900"
  },
  {
    "text": "we want to do though is when we put those in place we want to verify that they actually work right because in distributed systems it's very easy to",
    "start": "844900",
    "end": "851020"
  },
  {
    "text": "think that something works and it turns out it doesn't work the way you thought that happens all the time and so what we",
    "start": "851020",
    "end": "856300"
  },
  {
    "text": "do is we set up experiments and they really have these three steps the first one is understand what it is that you",
    "start": "856300",
    "end": "862930"
  },
  {
    "text": "expect to happen when a problem arises right so for example if I slam my service with traffic I expect the",
    "start": "862930",
    "end": "870640"
  },
  {
    "text": "service to do what right maybe I expect it to drop a certain amount that traffic on the floor then the second stage is to",
    "start": "870640",
    "end": "877780"
  },
  {
    "text": "actually attack the system to see you know what happens and then finally watch",
    "start": "877780",
    "end": "883120"
  },
  {
    "text": "what happens and you know if it behaves as expected great the experiment passed",
    "start": "883120",
    "end": "888640"
  },
  {
    "text": "if it doesn't behave as expected great because now you discovered that in an",
    "start": "888640",
    "end": "894760"
  },
  {
    "text": "environment where you can do something about it before it actually happens in production and so there are multiple",
    "start": "894760",
    "end": "904470"
  },
  {
    "text": "environments in which you can run these experiments so I only have two up here is one that I didn't list here is just",
    "start": "904470",
    "end": "912250"
  },
  {
    "text": "even in development right so when you're doing development on your laptop you can do interactive sorts of experiment",
    "start": "912250",
    "end": "917680"
  },
  {
    "text": "there's a tool the gremlin the bender there they have a tool here that you can",
    "start": "917680",
    "end": "923080"
  },
  {
    "text": "use for that has a very nice UI the other sort of thing you can do is in the",
    "start": "923080",
    "end": "929410"
  },
  {
    "text": "test environment which will be the core of the demo that you see in a bit see I CD pipe fine you can run these controlled tests",
    "start": "929410",
    "end": "936850"
  },
  {
    "text": "and then finally in production probably by now a lot of people have heard of",
    "start": "936850",
    "end": "942610"
  },
  {
    "text": "Netflix chaos monkey the idea behind this is that it's essentially a bot and",
    "start": "942610",
    "end": "947980"
  },
  {
    "text": "it's not just chaos monkey it's simian army it's a whole set of BOTS their BOTS that wake up and then they randomly",
    "start": "947980",
    "end": "953379"
  },
  {
    "text": "attack different victims and then they go away and then hopefully the site",
    "start": "953379",
    "end": "959470"
  },
  {
    "text": "doesn't fall over right so that's the sort of production experiment we're not",
    "start": "959470",
    "end": "964779"
  },
  {
    "text": "gonna go too much into the production based experiments in this talk but understand that that is really the Holy",
    "start": "964779",
    "end": "969999"
  },
  {
    "text": "Grail where we're trying to get to and that's why we would want to do the tests in the test pipeline first so that when",
    "start": "969999",
    "end": "978309"
  },
  {
    "text": "we turn it on in production we have some confidence that the site will withstand that and and not just fall over so just",
    "start": "978309",
    "end": "987100"
  },
  {
    "text": "recap on that resilience engineering overview the goal is to keep the site up",
    "start": "987100",
    "end": "992189"
  },
  {
    "text": "there are a number of strategies available you're the ones that I mentioned and others besides and then we",
    "start": "992189",
    "end": "998949"
  },
  {
    "text": "want to run experiments both in test and production ok and so quick water break",
    "start": "998949",
    "end": "1009170"
  },
  {
    "text": "ok so now we're going to do an overview of Amazon ec2 Systems Manager so a",
    "start": "1012470",
    "end": "1021329"
  },
  {
    "text": "Systems Manager this is essentially a systems administration service that Amazon provides and it allows you to",
    "start": "1021329",
    "end": "1028949"
  },
  {
    "text": "manage ec2 instances and also on pram instances as well you can see a list of",
    "start": "1028949",
    "end": "1034890"
  },
  {
    "text": "various capabilities that systems manager provides so you know uh automation inventory maintenance window",
    "start": "1034890",
    "end": "1042298"
  },
  {
    "text": "patch management but a bunch of different things that the systems administrators among you will be very",
    "start": "1042299",
    "end": "1048120"
  },
  {
    "text": "familiar with the run command one at the very end this one we'll talk about a little more detail this allows us to run",
    "start": "1048120",
    "end": "1054659"
  },
  {
    "text": "scripts on the different servers so we'll look at that in a bit so the",
    "start": "1054659",
    "end": "1062669"
  },
  {
    "text": "architectural overview of systems managers which you see up on the screen so there is a service that runs in",
    "start": "1062669",
    "end": "1069870"
  },
  {
    "text": "Amazon itself and then the various instances that you want to manage",
    "start": "1069870",
    "end": "1075090"
  },
  {
    "text": "they're all running agents they're running systems manager agents and again",
    "start": "1075090",
    "end": "1080820"
  },
  {
    "text": "those can be ec2 those can be on-premise instances and the the ec2 instances the",
    "start": "1080820",
    "end": "1090450"
  },
  {
    "text": "lot of those come pre-baked with the the agent already but if not then you",
    "start": "1090450",
    "end": "1096690"
  },
  {
    "text": "install them Oh actually I'm gonna go back one other thing so the the",
    "start": "1096690",
    "end": "1103019"
  },
  {
    "text": "idea is that the agent is in constant communication with the Systems Manager service and so that when you execute",
    "start": "1103019",
    "end": "1109590"
  },
  {
    "text": "commands on the Systems Manager service the agent picks that up and then it runs the command on the instance so that was",
    "start": "1109590",
    "end": "1117149"
  },
  {
    "text": "an important detail so said doing the set up there are three steps the first",
    "start": "1117149",
    "end": "1122700"
  },
  {
    "text": "one is to create and I am role that has the Amazon ec2 role for SSM policy",
    "start": "1122700",
    "end": "1129240"
  },
  {
    "text": "attached to it that's what allows the instance to actually talk back and forth",
    "start": "1129240",
    "end": "1134700"
  },
  {
    "text": "to as it says SSM here that's the original name for ec2 Systems Manager step two is",
    "start": "1134700",
    "end": "1142389"
  },
  {
    "text": "to actually attach that role to your instance and then step three is to do",
    "start": "1142389",
    "end": "1148990"
  },
  {
    "text": "that agent installation that I talked about so it's either already there if you're on a recent Amazon ami Linux ami",
    "start": "1148990",
    "end": "1156070"
  },
  {
    "text": "at least and for other ones you may have to install it yourself so the two",
    "start": "1156070",
    "end": "1163529"
  },
  {
    "text": "capabilities that we care about for the purpose of this presentation are System",
    "start": "1163529",
    "end": "1168850"
  },
  {
    "text": "Manager documents and then run command and I'll talk about both of those",
    "start": "1168850",
    "end": "1174090"
  },
  {
    "text": "Systems Manager documents look like this okay it looks like you can see that at",
    "start": "1174090",
    "end": "1179110"
  },
  {
    "text": "least if you're not too far back the idea is it's essentially a script write with parameters and so in this case what",
    "start": "1179110",
    "end": "1185559"
  },
  {
    "text": "we're looking at is an example that allows you to either uninstall or install package and so you can see",
    "start": "1185559",
    "end": "1194620"
  },
  {
    "text": "there's a few parameters here one is you can see at the bottom there's an action parameter there's a name parameter",
    "start": "1194620",
    "end": "1201129"
  },
  {
    "text": "there's a version parameter so for example if I want to install Emacs",
    "start": "1201129",
    "end": "1206379"
  },
  {
    "text": "version whatever the latest and greatest of Emacs is then I can run this document",
    "start": "1206379",
    "end": "1211960"
  },
  {
    "text": "with those parameters and it would install Emacs greatest and so that was a",
    "start": "1211960",
    "end": "1219309"
  },
  {
    "text": "document this is the run command this is how we actually execute the document and the the flow has four steps the first",
    "start": "1219309",
    "end": "1225460"
  },
  {
    "text": "one is that we choose the document that we want to run the second one is we choose the instances against we against",
    "start": "1225460",
    "end": "1233019"
  },
  {
    "text": "which we want to run the document the third step is we parameterize that right",
    "start": "1233019",
    "end": "1239139"
  },
  {
    "text": "we specify parameters so you know install Emacs uninstall something else",
    "start": "1239139",
    "end": "1244929"
  },
  {
    "text": "and then execute the run command okay so",
    "start": "1244929",
    "end": "1251080"
  },
  {
    "text": "obviously there's quite a bit more to ec2 systems manager but for for us you",
    "start": "1251080",
    "end": "1257710"
  },
  {
    "text": "know the the run command and the document are what we care about so we have done that now so I am going to turn",
    "start": "1257710",
    "end": "1265840"
  },
  {
    "text": "it over to mr. Bach Shani for good stuff all right thank you really",
    "start": "1265840",
    "end": "1270989"
  },
  {
    "text": "good afternoon everyone all right so now",
    "start": "1270989",
    "end": "1276359"
  },
  {
    "text": "we will talk about how we can attack your app with the Amazon ec2 assistance manager so one question that you may ask",
    "start": "1276359",
    "end": "1282840"
  },
  {
    "text": "is why the ec2 Systems Manager well for the types of attacks that we're doing",
    "start": "1282840",
    "end": "1288179"
  },
  {
    "text": "we're essentially running remote commands on ec2 instances and as it turns out that something that systems",
    "start": "1288179",
    "end": "1294509"
  },
  {
    "text": "manager does really well so it ended up being a great fit for our needs now in",
    "start": "1294509",
    "end": "1302159"
  },
  {
    "text": "order to run an attack on a system this is what we need we need to create a",
    "start": "1302159",
    "end": "1307320"
  },
  {
    "text": "command document are basically the instructions for the attack how do you want to do the attack and then we",
    "start": "1307320",
    "end": "1313289"
  },
  {
    "text": "execute run command and then finally the Systems Manager agent or we'll run those",
    "start": "1313289",
    "end": "1319080"
  },
  {
    "text": "commands on the ec2 instance this is an",
    "start": "1319080",
    "end": "1324869"
  },
  {
    "text": "example of a Systems Manager attack document actually it is it is the",
    "start": "1324869",
    "end": "1330389"
  },
  {
    "text": "document that we will be using for the demo coming up shortly so this document",
    "start": "1330389",
    "end": "1336029"
  },
  {
    "text": "has instructions for doing a black hole attack and it requires one parameter",
    "start": "1336029",
    "end": "1342179"
  },
  {
    "text": "which is a port so the way the document works is when the attack occurs it will",
    "start": "1342179",
    "end": "1348809"
  },
  {
    "text": "block outgoing traffic on a particular port basically the part that's specified and if you look at the bottom you'll see",
    "start": "1348809",
    "end": "1355889"
  },
  {
    "text": "that it's it's accomplishing that by using the IP tables command and what",
    "start": "1355889",
    "end": "1361619"
  },
  {
    "text": "it'll do is it'll drop traffic it will add a rule to drop traffic to a particular port for me you can see that",
    "start": "1361619",
    "end": "1367710"
  },
  {
    "text": "the attacks can be actually quite simple it doesn't have to be anything complicated now for for I'm sorry so for",
    "start": "1367710",
    "end": "1379769"
  },
  {
    "text": "our demonstration what we're going to do is attack an application that we created call weather report it's a this is the",
    "start": "1379769",
    "end": "1388049"
  },
  {
    "text": "architectural view of the application it's quite simple we have an API layer and that is the part that we will",
    "start": "1388049",
    "end": "1394739"
  },
  {
    "text": "actually be testing the API connects to a database from which it retrieves a",
    "start": "1394739",
    "end": "1400559"
  },
  {
    "text": "list of cities for each city that it retrieves it will access the open weather map API to get",
    "start": "1400559",
    "end": "1406979"
  },
  {
    "text": "weather information about it and then it finally displays all of that in the UI",
    "start": "1406979",
    "end": "1412850"
  },
  {
    "text": "now we have two versions of the application one is a non resilient version and one is a resilient version",
    "start": "1412850",
    "end": "1419720"
  },
  {
    "text": "the non resilient version doesn't have any particular measures to protect itself against adverse conditions whilst",
    "start": "1419720",
    "end": "1427379"
  },
  {
    "text": "the resilient version has some features it basically uses circuit breakers that we didn't mention earlier for our attack",
    "start": "1427379",
    "end": "1434879"
  },
  {
    "text": "what we will be doing is black hole attack a black hole attack against the",
    "start": "1434879",
    "end": "1440220"
  },
  {
    "text": "database so we will stop our application or our API from connecting to the",
    "start": "1440220",
    "end": "1445619"
  },
  {
    "text": "database and then we will observe what happens when we do that all right",
    "start": "1445619",
    "end": "1450749"
  },
  {
    "text": "let's dive into the demo here all right",
    "start": "1450749",
    "end": "1456960"
  },
  {
    "text": "Thank You Lee okay so this is the UI for",
    "start": "1456960",
    "end": "1462029"
  },
  {
    "text": "application let me go ahead and refresh the screen so we can see that it's running now we have the non-resident",
    "start": "1462029",
    "end": "1467879"
  },
  {
    "text": "version it says so in the title and we have a resilient version next to it which I'll also refresh to show that at",
    "start": "1467879",
    "end": "1475649"
  },
  {
    "text": "this point the two versions were quite similar they're both actually they should be almost identical they both",
    "start": "1475649",
    "end": "1482039"
  },
  {
    "text": "bring up eight cities and the weather information for each of those cities so what we will do next is look at the",
    "start": "1482039",
    "end": "1489119"
  },
  {
    "text": "Amazon ec2 systems manager console and",
    "start": "1489119",
    "end": "1494249"
  },
  {
    "text": "and we'll go ahead and launch an attack so the systems manager is located in the",
    "start": "1494249",
    "end": "1499379"
  },
  {
    "text": "ec2 services section of the AWS console so let's go there now down on the lower",
    "start": "1499379",
    "end": "1505169"
  },
  {
    "text": "left is where we find the systems Manager links let's go ahead and look at",
    "start": "1505169",
    "end": "1511529"
  },
  {
    "text": "documents now by default your AWS",
    "start": "1511529",
    "end": "1517649"
  },
  {
    "text": "account will come with several documents or documents to install and uninstall applications for inventory management",
    "start": "1517649",
    "end": "1523049"
  },
  {
    "text": "etc we will use documents that we created so let's go let me go ahead and filter this list all right now we will",
    "start": "1523049",
    "end": "1531539"
  },
  {
    "text": "be using two documents we will be using a black hole outbound start document and a stop document the",
    "start": "1531539",
    "end": "1539200"
  },
  {
    "text": "difference being the start document will start the attack or add the iptables rule and the stop document will remove",
    "start": "1539200",
    "end": "1546490"
  },
  {
    "text": "the attack or room with the iptables rule it'll stop the attack and remove the iptables rule so looking at the",
    "start": "1546490",
    "end": "1553690"
  },
  {
    "text": "start document we see as I mentioned earlier that one parameter is required",
    "start": "1553690",
    "end": "1558940"
  },
  {
    "text": "which is the port right and if we look at the content of the document you'll",
    "start": "1558940",
    "end": "1564460"
  },
  {
    "text": "see that it looks just like the document we looked at a few slides ago now let's",
    "start": "1564460",
    "end": "1572590"
  },
  {
    "text": "go ahead and use this document to do that we use the Systems Manager run command now as really mentioned when you",
    "start": "1572590",
    "end": "1580990"
  },
  {
    "text": "use run command you have several steps the first step is - the first step is to select the document so we'll go ahead",
    "start": "1580990",
    "end": "1588070"
  },
  {
    "text": "and filter the list and select our document now the next thing you do is",
    "start": "1588070",
    "end": "1594280"
  },
  {
    "text": "you specify which ec2 instance or instances you want to run the command",
    "start": "1594280",
    "end": "1599980"
  },
  {
    "text": "against so you have the ability to specify instances by tags you can select",
    "start": "1599980",
    "end": "1607840"
  },
  {
    "text": "them from a list you can do filtering by attributes etc now one thing to note is",
    "start": "1607840",
    "end": "1613659"
  },
  {
    "text": "that the ec2 instances that appear on this list are only instances that I",
    "start": "1613659",
    "end": "1619270"
  },
  {
    "text": "considered manage instances and for an instance to be considered managed it has to fulfill the criteria that really",
    "start": "1619270",
    "end": "1625600"
  },
  {
    "text": "mentioned earlier which is it needs to have the appropriate I am role attached and it needs to have the Systems Manager",
    "start": "1625600",
    "end": "1632020"
  },
  {
    "text": "agent installed on it all right so if you try this and your instance doesn't show up check those two things to see if",
    "start": "1632020",
    "end": "1638530"
  },
  {
    "text": "one of them isn't present alright so now we have our instance selected let's go",
    "start": "1638530",
    "end": "1644409"
  },
  {
    "text": "ahead and populate the parameter that's required now our application connects to",
    "start": "1644409",
    "end": "1649630"
  },
  {
    "text": "seek my sequel on my sequel database and that connection happens on port 3306 so",
    "start": "1649630",
    "end": "1655900"
  },
  {
    "text": "we'll go ahead and block that part now",
    "start": "1655900",
    "end": "1660909"
  },
  {
    "text": "finally we hit the run command which will go ahead execute the document all right so at this point our",
    "start": "1660909",
    "end": "1667299"
  },
  {
    "text": "I should be unable to connect to the database let's go back to our UI and observe the effect of that attack first",
    "start": "1667299",
    "end": "1676720"
  },
  {
    "text": "let's refresh the non resilient version so you'll notice that it's spinning it's",
    "start": "1676720",
    "end": "1682480"
  },
  {
    "text": "waiting for the page to return and it'll do this for a little while actually if",
    "start": "1682480",
    "end": "1687519"
  },
  {
    "text": "you were to look at the logs for the API you'll see that at this point it's trying to connect to the database now",
    "start": "1687519",
    "end": "1694210"
  },
  {
    "text": "let's go ahead and refresh our resilient version of the application and observe what happens okay so this version came",
    "start": "1694210",
    "end": "1703269"
  },
  {
    "text": "back in a timely manner but there's only one city this was done intentionally",
    "start": "1703269",
    "end": "1708789"
  },
  {
    "text": "what happened here is as really talked about earlier the circuit breaker",
    "start": "1708789",
    "end": "1713830"
  },
  {
    "text": "tripped so we have a circuit breaker in our application in the resilient version of our application that detects when",
    "start": "1713830",
    "end": "1720039"
  },
  {
    "text": "it's unable to connect to the database and if it's unable to do so it'll switch to a static list of cities in our case",
    "start": "1720039",
    "end": "1728169"
  },
  {
    "text": "we you know hard-coded one city so you can see the difference clearly but basically the application responded in a",
    "start": "1728169",
    "end": "1734769"
  },
  {
    "text": "way it's expected to now going back to our non resilient version you see that",
    "start": "1734769",
    "end": "1740799"
  },
  {
    "text": "it threw an error so comparing the two versions you can clearly see that the non resilient version provides a you",
    "start": "1740799",
    "end": "1747489"
  },
  {
    "text": "know not a good user experience right the user would be sitting there waiting for the page to load and it'll find the error without any you know meaningful",
    "start": "1747489",
    "end": "1754749"
  },
  {
    "text": "message now in the case of our resilient person we got one city however this nothing",
    "start": "1754749",
    "end": "1760869"
  },
  {
    "text": "that that prevents our backup lists or backup data source from having the full set of data just in this case we chose",
    "start": "1760869",
    "end": "1767470"
  },
  {
    "text": "to have only one city in our backup list so we could clearly observe the difference between when the circuit",
    "start": "1767470",
    "end": "1772809"
  },
  {
    "text": "breaker is open and closed now one thing I should note here is something you",
    "start": "1772809",
    "end": "1778720"
  },
  {
    "text": "should do in general when you do it when you're testing and resilience features which is to minimize your blast radius",
    "start": "1778720",
    "end": "1785070"
  },
  {
    "text": "so what I mean by that is one other way we could have achieved this is this",
    "start": "1785070",
    "end": "1790869"
  },
  {
    "text": "empower this attack would have been to shut down the database the API wouldn't",
    "start": "1790869",
    "end": "1796570"
  },
  {
    "text": "have been able to connect to the database then however if there are the applications that are using a database they would have been",
    "start": "1796570",
    "end": "1801970"
  },
  {
    "text": "impacted as well so what we did instead is we blocked traffic going from our API to the database that by achieving the",
    "start": "1801970",
    "end": "1809500"
  },
  {
    "text": "same result but minimizing the impact of our tests so that's something you should keep in mind okay let's go ahead next",
    "start": "1809500",
    "end": "1819280"
  },
  {
    "text": "and stop the attack and observe what happens then so we'll go back to run",
    "start": "1819280",
    "end": "1825730"
  },
  {
    "text": "command and this time we'll select the other document the one to stop the attack we have our instance already",
    "start": "1825730",
    "end": "1834100"
  },
  {
    "text": "selected I will go ahead once again and specify port 3306 and run the command",
    "start": "1834100",
    "end": "1842080"
  },
  {
    "text": "all right so at this point the IP tables rule that we had running on our ec2",
    "start": "1842080",
    "end": "1848650"
  },
  {
    "text": "instance should we should have been removed let's go back to our UI and observe if that's true or not all right",
    "start": "1848650",
    "end": "1857290"
  },
  {
    "text": "so the non-brazilian version is back now to being able to connect to the database and retrieve results let's look at what",
    "start": "1857290",
    "end": "1864790"
  },
  {
    "text": "happens with our resilient so that also",
    "start": "1864790",
    "end": "1869830"
  },
  {
    "text": "comes back with the full list of cities so at this point the circuit breaker has it realizes that that it is able to",
    "start": "1869830",
    "end": "1877450"
  },
  {
    "text": "connect to the database so traffic is going back through the primary data route now what we're looking at this let",
    "start": "1877450",
    "end": "1884650"
  },
  {
    "text": "me go ahead and show you briefly the code where the circuit breaker is implemented that makes our resilient",
    "start": "1884650",
    "end": "1890560"
  },
  {
    "text": "version resilient we have a city store class in which we've defined a city",
    "start": "1890560",
    "end": "1899320"
  },
  {
    "text": "store database where we retrieved the results to the database and city store hard coded where we retrieve the results",
    "start": "1899320",
    "end": "1906310"
  },
  {
    "text": "from a static list now the primary function for retrieving the cities is",
    "start": "1906310",
    "end": "1912370"
  },
  {
    "text": "get all and when get all is called we the execute function or the acute method",
    "start": "1912370",
    "end": "1918910"
  },
  {
    "text": "of the get city's command is is triggered yet cities command is defined",
    "start": "1918910",
    "end": "1925360"
  },
  {
    "text": "right here and it extends the history command so we have a little bit of",
    "start": "1925360",
    "end": "1930550"
  },
  {
    "text": "configuration over here that we'll skip and then we have meet of the history circuit breaker so",
    "start": "1930550",
    "end": "1937580"
  },
  {
    "text": "when execute is called the run callback gets called initially and in this case",
    "start": "1937580",
    "end": "1944900"
  },
  {
    "text": "the run callback returns the list from the database store however in the event",
    "start": "1944900",
    "end": "1950840"
  },
  {
    "text": "that that fails his tricks will call the get fallback callback and when that",
    "start": "1950840",
    "end": "1957230"
  },
  {
    "text": "happens we will log a message that indicates we were unable to retrieve the data from our primary source and we'll",
    "start": "1957230",
    "end": "1963230"
  },
  {
    "text": "go ahead and get and return the data from our hard-coded source so this is",
    "start": "1963230",
    "end": "1968270"
  },
  {
    "text": "this is an example of what it takes to implement a circuit breaker or hystrix specifically in your application thank",
    "start": "1968270",
    "end": "1985190"
  },
  {
    "text": "you really I don't know how to push buttons all right so to recap we've",
    "start": "1985190",
    "end": "1991790"
  },
  {
    "text": "learned how to use the Amazon ec2 Systems Manager to execute an attack we",
    "start": "1991790",
    "end": "1997220"
  },
  {
    "text": "also saw the impact of the attack on our resilient in our resilient applications",
    "start": "1997220",
    "end": "2003520"
  },
  {
    "text": "and we looked a little bit at the history code for implementing the",
    "start": "2003520",
    "end": "2008850"
  },
  {
    "text": "resilient feature now being able to test",
    "start": "2008850",
    "end": "2014590"
  },
  {
    "text": "your resilience capabilities is really important is really really mentioned earlier you don't want to find out that",
    "start": "2014590",
    "end": "2019660"
  },
  {
    "text": "your visit resilience measures don't work like you expect them to in a production scenario",
    "start": "2019660",
    "end": "2025420"
  },
  {
    "text": "and you know that the stakes are high so what you want to be able to do is test these features in a pipeline now we're",
    "start": "2025420",
    "end": "2035530"
  },
  {
    "text": "going to talk now and I'll show you how you can basically have your resilience",
    "start": "2035530",
    "end": "2040840"
  },
  {
    "text": "test running in a C ICD pipeline so you can perform ongoing verification this is of course scalable compared to doing it",
    "start": "2040840",
    "end": "2047410"
  },
  {
    "text": "by hand like I just did because you can you have this run automatically with every new version with multiple",
    "start": "2047410",
    "end": "2054010"
  },
  {
    "text": "resilience tests etc now we have a pipeline here that's similar to the",
    "start": "2054010",
    "end": "2060429"
  },
  {
    "text": "pipeline that we have for some applications at Expedia the pipeline is",
    "start": "2060430",
    "end": "2065440"
  },
  {
    "text": "triggered by a build which occurs when Court is committed to a repo when the",
    "start": "2065440",
    "end": "2070749"
  },
  {
    "text": "bill completes successfully it is deployed to the test environment and then released and then we're able to run",
    "start": "2070749",
    "end": "2076419"
  },
  {
    "text": "tests on it performance tests resilience tests and on the site we can also run",
    "start": "2076419",
    "end": "2081759"
  },
  {
    "text": "code scans and if all of these come back successfully we deploy the code to prod",
    "start": "2081759",
    "end": "2087608"
  },
  {
    "text": "and we release it to receive traffic all right now let's look at resilience",
    "start": "2087609",
    "end": "2095319"
  },
  {
    "text": "testing in a CI CD pipeline what we will be covering is three resilience tests we",
    "start": "2095319",
    "end": "2103150"
  },
  {
    "text": "will have one test that runs prior to the attack so this allows us to verify that our application is working as it should",
    "start": "2103150",
    "end": "2109630"
  },
  {
    "text": "before we attack it then we we launched a black hole attack which is the same",
    "start": "2109630",
    "end": "2114730"
  },
  {
    "text": "attack that I just did manually a few minutes ago and we will run the fallback test to verify that we get the fallback",
    "start": "2114730",
    "end": "2123819"
  },
  {
    "text": "data and finally we will do a post recovery test which is once the attacks",
    "start": "2123819",
    "end": "2129849"
  },
  {
    "text": "been stopped has the application recovered and returned to normal behavior let's go ahead and do that",
    "start": "2129849",
    "end": "2139529"
  },
  {
    "text": "thank goodness Willie's here man I don't know which button to press all right so for this we have a Jenkins pipeline that",
    "start": "2143400",
    "end": "2150990"
  },
  {
    "text": "we have created let me go ahead and trigger this pipeline then I'll talk about the steps in the pipeline now the",
    "start": "2150990",
    "end": "2158309"
  },
  {
    "text": "pipeline requires a few parameters which we've pre-configured we have the load balancer a DNS name so we are able to",
    "start": "2158309",
    "end": "2165690"
  },
  {
    "text": "reach our application to test it we have the instance ID so we know which easy to",
    "start": "2165690",
    "end": "2171569"
  },
  {
    "text": "instance to attack and we have the port that we will be attacking in this case port 3306 which is our my sequel port",
    "start": "2171569",
    "end": "2179390"
  },
  {
    "text": "alright let's go ahead and kick this off now whilst this thing is running let me",
    "start": "2179390",
    "end": "2184710"
  },
  {
    "text": "explain that the first two steps are actually simulated we're not actually building and deploying a code right now",
    "start": "2184710",
    "end": "2190740"
  },
  {
    "text": "we're going to be running our tests against the version of the application that's already deployed alright now the",
    "start": "2190740",
    "end": "2199859"
  },
  {
    "text": "next step in the pipeline is to verify connectivity prior to attacking so when",
    "start": "2199859",
    "end": "2206160"
  },
  {
    "text": "we look at this we see that we use grep oh sorry we use curl to connect to the EPI of the application get the results",
    "start": "2206160",
    "end": "2213539"
  },
  {
    "text": "and then ensure that we get eight cities in our results because that's what we expect prior to attacking the",
    "start": "2213539",
    "end": "2220039"
  },
  {
    "text": "application now after we've done that we go ahead and launch the blackhole attack",
    "start": "2220039",
    "end": "2226609"
  },
  {
    "text": "now we are using Systems Manager for this however rather than doing it by",
    "start": "2226609",
    "end": "2231930"
  },
  {
    "text": "hand like I did earlier we use the AWC Li to trigger the attack and we're using",
    "start": "2231930",
    "end": "2238619"
  },
  {
    "text": "the same document as earlier we're using the same port and the same instance so",
    "start": "2238619",
    "end": "2244710"
  },
  {
    "text": "it's the same attack except it's done in a script friendly way this time now",
    "start": "2244710",
    "end": "2250049"
  },
  {
    "text": "after that attack is triggered we go ahead and we verify connectivity once again and in in this case we are",
    "start": "2250049",
    "end": "2258299"
  },
  {
    "text": "verifying that we receive one city only and that's because when our circuit breaker trips we expect to only receive",
    "start": "2258299",
    "end": "2264569"
  },
  {
    "text": "one city and if that succeeds and we'll go ahead stop the blackhole attack which",
    "start": "2264569",
    "end": "2270660"
  },
  {
    "text": "again is using the AWS CLI and then verify connectivity to ensure that we",
    "start": "2270660",
    "end": "2276119"
  },
  {
    "text": "get eight tee's once again now finally we record the results now recording the results is",
    "start": "2276119",
    "end": "2282240"
  },
  {
    "text": "important because what it lets you do is keep track of the attacks that you're running and the results of these attacks",
    "start": "2282240",
    "end": "2288240"
  },
  {
    "text": "the successes and failures it lets you identify applications that may be more",
    "start": "2288240",
    "end": "2294720"
  },
  {
    "text": "in need of resilience help than others may be of applications that fail in common scenarios and maybe you want to",
    "start": "2294720",
    "end": "2302040"
  },
  {
    "text": "prioritize adding resilience measures to those before others so having a scorecard basically having information",
    "start": "2302040",
    "end": "2307650"
  },
  {
    "text": "is good so you can make decisions based on that so to recap we looked at how we",
    "start": "2307650",
    "end": "2323010"
  },
  {
    "text": "can embed or include our resilience tests in the CI CD pipeline so that we",
    "start": "2323010",
    "end": "2329790"
  },
  {
    "text": "have ongoing verifications of our resilience features at this point I'm going to hand it back to Willie to talk",
    "start": "2329790",
    "end": "2336000"
  },
  {
    "text": "about some other attacks that can be implemented thank you Dave",
    "start": "2336000",
    "end": "2341540"
  },
  {
    "text": "ok so Dave showed you how to execute a specific type of attack called the black",
    "start": "2341540",
    "end": "2347580"
  },
  {
    "text": "hole and you saw that that was implemented using iptables there's a lot of different attacks that",
    "start": "2347580",
    "end": "2354450"
  },
  {
    "text": "you can implement and so the Netflix simian army that I mentioned earlier it",
    "start": "2354450",
    "end": "2360390"
  },
  {
    "text": "comes with a whole bunch of different scripts that allow you to execute a variety of attacks and so you can see",
    "start": "2360390",
    "end": "2366750"
  },
  {
    "text": "those here everything from CPU attacks IO DNS Network and then even some Amazon",
    "start": "2366750",
    "end": "2373590"
  },
  {
    "text": "specific attacks like a dynamo dB and so the the idea here is you know there's a",
    "start": "2373590",
    "end": "2380670"
  },
  {
    "text": "link at the bottom go take a look at the simian army project in github you'll see all those scripts there so you can use",
    "start": "2380670",
    "end": "2387210"
  },
  {
    "text": "this at least as a starting point and I'm going to show you an example of three of those and the thing I want you",
    "start": "2387210",
    "end": "2393960"
  },
  {
    "text": "to take away is not the details of the attack like the specific commands that that's not what we care about here what",
    "start": "2393960",
    "end": "2399360"
  },
  {
    "text": "we care about is just how simple it actually is there's not too much to it and so let me show you so the first one",
    "start": "2399360",
    "end": "2406650"
  },
  {
    "text": "is a burning CPU right so if you want to attack your service and have it just max out this is",
    "start": "2406650",
    "end": "2413970"
  },
  {
    "text": "the sort of script you could run this uses the open SSL speed command if I",
    "start": "2413970",
    "end": "2420420"
  },
  {
    "text": "recall correctly this does a bunch of hashes and it just runs these on all the",
    "start": "2420420",
    "end": "2425970"
  },
  {
    "text": "cores and it just maxes out your CPU it's pretty short",
    "start": "2425970",
    "end": "2431570"
  },
  {
    "text": "here's one that's even shorter this one is burn IO and it also runs in a tight",
    "start": "2431570",
    "end": "2437310"
  },
  {
    "text": "loop it uses DD to copy random junk into a file and just burn up your i/o this is",
    "start": "2437310",
    "end": "2446010"
  },
  {
    "text": "the shortest one yet this is really just a special case of the black hole attack that Dave showed a little while ago",
    "start": "2446010",
    "end": "2453060"
  },
  {
    "text": "this one is failing DNS DNS runs on port 53 so if your black hole port 53 you now",
    "start": "2453060",
    "end": "2461310"
  },
  {
    "text": "have a DNS issue to deal with okay so",
    "start": "2461310",
    "end": "2466940"
  },
  {
    "text": "those you know those are the different types of attack here at this point I",
    "start": "2466940",
    "end": "2474120"
  },
  {
    "text": "want to just kind of bring it home we learned how to use Systems Manager to attack your system and ultimately to",
    "start": "2474120",
    "end": "2480060"
  },
  {
    "text": "keep your site up and I would encourage everybody to use Systems Manager in that",
    "start": "2480060",
    "end": "2485100"
  },
  {
    "text": "way to start testing and enhance your site resilience today I want to give a",
    "start": "2485100",
    "end": "2490140"
  },
  {
    "text": "couple of acknowledgments one is called deep Xiao Han he's one of our colleagues at Expedia this concept was really his",
    "start": "2490140",
    "end": "2498330"
  },
  {
    "text": "brainchild he put together a blog post on it and he said hey could we use it and it turns out we can and so thank you",
    "start": "2498330",
    "end": "2505470"
  },
  {
    "text": "call deep then another one is a former colleague Jace pang who wrote the",
    "start": "2505470",
    "end": "2510510"
  },
  {
    "text": "proposal that brought Dave and I here today so thank you Jay and hopefully we",
    "start": "2510510",
    "end": "2516360"
  },
  {
    "text": "did your talk justice and at this point we're very glad to take questions I",
    "start": "2516360",
    "end": "2522090"
  },
  {
    "text": "would ask that if you do have questions please step up to the mics that you see here so that everybody can hear and",
    "start": "2522090",
    "end": "2528510"
  },
  {
    "text": "thank you [Applause]",
    "start": "2528510",
    "end": "2538580"
  },
  {
    "text": "okay go ahead yes you've demonstrated on AWS but if you have to do the same thing",
    "start": "2541680",
    "end": "2549130"
  },
  {
    "text": "on premise do you have any ideas on what needs to be done",
    "start": "2549130",
    "end": "2555070"
  },
  {
    "text": "there's no idea bleh CLI so how do you handle an on-premise system",
    "start": "2555070",
    "end": "2561750"
  },
  {
    "text": "I could I could take a shot at that although let me caveat that that we have naturally uses for on-prem my",
    "start": "2561940",
    "end": "2568480"
  },
  {
    "text": "understanding is that the agent can still talk to SSM running in cloud so",
    "start": "2568480",
    "end": "2575410"
  },
  {
    "text": "you still execute the commands against ec2 Systems Manager in the cloud and the",
    "start": "2575410",
    "end": "2580570"
  },
  {
    "text": "agent will pick that up but I haven't used it personally okay all right thanks thank you yep",
    "start": "2580570",
    "end": "2587550"
  },
  {
    "text": "hi please good you talked about eliminating I think it was blast damage",
    "start": "2593450",
    "end": "2599340"
  },
  {
    "text": "or something to that effect yes so I I was under an impression that these were all created for the testing so I I guess",
    "start": "2599340",
    "end": "2607500"
  },
  {
    "text": "I don't understand what could be collateral damage okay so in the case of",
    "start": "2607500",
    "end": "2612570"
  },
  {
    "text": "the presentation that we just did we created the instances and the tests are specifically for this presentation",
    "start": "2612570",
    "end": "2619140"
  },
  {
    "text": "however if you if you run your attacks in your test environment you may be using shared databases for your",
    "start": "2619140",
    "end": "2625680"
  },
  {
    "text": "applications for instance and so in that case if you're trying to prevent your application from connecting to the",
    "start": "2625680",
    "end": "2631380"
  },
  {
    "text": "database you want to do it in the least impactful impactful way man impactful",
    "start": "2631380",
    "end": "2636630"
  },
  {
    "text": "manner possible so rather than shutting down the database you should you break the connectivity from the application to the",
    "start": "2636630",
    "end": "2642720"
  },
  {
    "text": "database okay same same concept applies to prod to go ahead yeah there was a",
    "start": "2642720",
    "end": "2651240"
  },
  {
    "text": "number of early in your talk you talked about different ways like load shedding",
    "start": "2651240",
    "end": "2657570"
  },
  {
    "text": "and different circuit breakers that would give degraded experience to some",
    "start": "2657570",
    "end": "2663210"
  },
  {
    "text": "subset of users right versus everyone but at what point do you consider your",
    "start": "2663210",
    "end": "2669540"
  },
  {
    "text": "site down when a subset of users maybe it's a JavaScript browser specific bug",
    "start": "2669540",
    "end": "2675450"
  },
  {
    "text": "is a site down when that one combination of 1% of users is down or is it that B",
    "start": "2675450",
    "end": "2681300"
  },
  {
    "text": "5% if your circuit breaker is tripped is the site down or is it not down yeah what where is that line so with the with",
    "start": "2681300",
    "end": "2689220"
  },
  {
    "text": "the circuit breaker question if the circuit breaker trips and is able to provide the information required for",
    "start": "2689220",
    "end": "2694890"
  },
  {
    "text": "your application to continue to serve the customers I would say that that is not considered down because then your",
    "start": "2694890",
    "end": "2701369"
  },
  {
    "text": "resilience measure is working and you're actually still being able to serve customers now on the question about when",
    "start": "2701369",
    "end": "2707310"
  },
  {
    "text": "you consider the site down really do you have a answer for that yeah that's a great question by the way",
    "start": "2707310",
    "end": "2713190"
  },
  {
    "text": "so I mention it the very beginning this idea of there's one goal keep the site",
    "start": "2713190",
    "end": "2718440"
  },
  {
    "text": "up so the reason I mention that is because I think what happens is as people start",
    "start": "2718440",
    "end": "2724859"
  },
  {
    "text": "to die okay what's it mean when the site's up or you know when's it down wins it up those questions actually matter but a",
    "start": "2724859",
    "end": "2731420"
  },
  {
    "text": "lot of the real goal can get kind of lost in that discussion and so what we",
    "start": "2731420",
    "end": "2736430"
  },
  {
    "text": "end up doing is we say look the North Stars just keep the site up what that means in the context of your specific",
    "start": "2736430",
    "end": "2743150"
  },
  {
    "text": "service that's up to the individual service teams at least at Expedia different companies may do it differently the different services get",
    "start": "2743150",
    "end": "2750380"
  },
  {
    "text": "to define what counts as up or down or acceptable for them we just want them to",
    "start": "2750380",
    "end": "2755600"
  },
  {
    "text": "make conscious choices about what that is and you know to have a path to",
    "start": "2755600",
    "end": "2761000"
  },
  {
    "text": "improve that over time thank you for that question it is that answer it yeah",
    "start": "2761000",
    "end": "2767450"
  },
  {
    "text": "I think the summary of that was just that you just think think it through yeah yeah it's very context-specific",
    "start": "2767450",
    "end": "2773480"
  },
  {
    "text": "right so for example like you know in the itinerary case that I mentioned earlier not showing the map maybe that's",
    "start": "2773480",
    "end": "2780860"
  },
  {
    "text": "okay but in other cases you know that you know not showing something like for example if someone was doing an actual",
    "start": "2780860",
    "end": "2787190"
  },
  {
    "text": "hotel search the map is much more important in that kind of context they need to know where it is before they",
    "start": "2787190",
    "end": "2792650"
  },
  {
    "text": "book it please so a couple of things I'm",
    "start": "2792650",
    "end": "2798110"
  },
  {
    "text": "assuming you have alerting that's set up right so someone in your operations team",
    "start": "2798110",
    "end": "2803120"
  },
  {
    "text": "realizes that the circuit breaker has been tripped right yeah so in our test",
    "start": "2803120",
    "end": "2809870"
  },
  {
    "text": "environment the the circuit breaker piece is it's part of dashboards that we",
    "start": "2809870",
    "end": "2817550"
  },
  {
    "text": "have so like gravano dashboards and such so we can see what's happening there in production environment we have the same",
    "start": "2817550",
    "end": "2822980"
  },
  {
    "text": "sort of dashboard so that you can see the volume of traffic that's going over the circuit breaker path as opposed to",
    "start": "2822980",
    "end": "2829460"
  },
  {
    "text": "the non breaker path so the other follow-up to that was isn't it kind of dangerous to put code inside of your",
    "start": "2829460",
    "end": "2837020"
  },
  {
    "text": "code for circuit breakers I'm sure you've thought of this yes go for it",
    "start": "2837020",
    "end": "2844490"
  },
  {
    "text": "yeah this is a favorite topic of mine so potentially I mean it just spits oh",
    "start": "2844490",
    "end": "2850370"
  },
  {
    "text": "there's danger on either side of that right so I'm not having protections in place is dangerous to this kind of gets",
    "start": "2850370",
    "end": "2857000"
  },
  {
    "text": "off into a separate topic just embedding this code inside the team code mate yeah yeah you can get that",
    "start": "2857000",
    "end": "2863110"
  },
  {
    "text": "wrong for sure but the challenge we're running into is more along the lines of teams are actually too busy to mess",
    "start": "2863110",
    "end": "2869050"
  },
  {
    "text": "around with that stuff when they've got product work to do and a lot of times it's very defensible",
    "start": "2869050",
    "end": "2875350"
  },
  {
    "text": "that they're going to prioritize a product work and so for us we do want to move that out of the code but it's less",
    "start": "2875350",
    "end": "2882490"
  },
  {
    "text": "because we're worried that they're gonna break things it's more because we're trying to figure out how to get this to them for free without being impactful",
    "start": "2882490",
    "end": "2890460"
  },
  {
    "text": "thank you for that please yeah thank you for the demonstration of resilience",
    "start": "2890460",
    "end": "2896680"
  },
  {
    "text": "testing using SSM my question is more on do you guys use this also for patch management and - in general - our total",
    "start": "2896680",
    "end": "2904000"
  },
  {
    "text": "SSH access to AC to box if so what is the experience so far can you repeat the",
    "start": "2904000",
    "end": "2909280"
  },
  {
    "text": "last part of the question the word I'll experience if you're using this for patch management and - oh I'd SSH axis",
    "start": "2909280",
    "end": "2915150"
  },
  {
    "text": "for patch management uh-huh no we haven't used this for patch management",
    "start": "2915150",
    "end": "2920350"
  },
  {
    "text": "I'm not familiar myself with how exactly we do patch management really do you know yeah I don't actually know I I",
    "start": "2920350",
    "end": "2927940"
  },
  {
    "text": "don't know if we're using this for anything other than attacking actually should yeah it Expedia the different",
    "start": "2927940",
    "end": "2934210"
  },
  {
    "text": "teams get to choose what they use for different practices so it could be being used but yeah I can't speak to that one",
    "start": "2934210",
    "end": "2940060"
  },
  {
    "text": "of the things that does that does occur is that our applications we have a system called primer where we're able to",
    "start": "2940060",
    "end": "2946270"
  },
  {
    "text": "deploy applications using a framework that we created now the primary",
    "start": "2946270",
    "end": "2952120"
  },
  {
    "text": "applications are built off of certain EMIs that we update from time to time so as far as patches those enemies get",
    "start": "2952120",
    "end": "2960220"
  },
  {
    "text": "updated they're on a regular basis I don't know exactly how frequently so when you deploy a new version of the",
    "start": "2960220",
    "end": "2966040"
  },
  {
    "text": "service it will use the latest ami so you will typically have your patches in there already as as for long-running",
    "start": "2966040",
    "end": "2972790"
  },
  {
    "text": "services I'm not sure how we deal with that okay thank you you're welcome",
    "start": "2972790",
    "end": "2978960"
  },
  {
    "text": "with your using Systems Manager well you didn't really get into any details and why you chose that for running commands",
    "start": "2982200",
    "end": "2990390"
  },
  {
    "text": "against instances it seems like there is a number of other choices you could use",
    "start": "2990390",
    "end": "2995970"
  },
  {
    "text": "and I didn't show anything that was really showing any of the benefits of",
    "start": "2995970",
    "end": "3000980"
  },
  {
    "text": "that that would be unique is there is there some reasons you chose that and there were some benefits specifically",
    "start": "3000980",
    "end": "3006710"
  },
  {
    "text": "you're getting from it sure so you know the point here was more",
    "start": "3006710",
    "end": "3013730"
  },
  {
    "text": "about showing how you can use it now we are in fact using it and there is a reason that we like it I'll tell you",
    "start": "3013730",
    "end": "3019310"
  },
  {
    "text": "about that but just but I agree with what you're saying is that there are other tools I mentioned one earlier the",
    "start": "3019310",
    "end": "3025100"
  },
  {
    "text": "gremlin tool that's one that can be used and then the scripts that are in the",
    "start": "3025100",
    "end": "3030620"
  },
  {
    "text": "simian army can also be used something that we like about Systems Manager I think there's a couple things that we",
    "start": "3030620",
    "end": "3036590"
  },
  {
    "text": "really like the first one is that the the agents already part of our AMI and",
    "start": "3036590",
    "end": "3042170"
  },
  {
    "text": "so we don't have to do separate agent installs which is nice right we can we can already run these commands without",
    "start": "3042170",
    "end": "3048140"
  },
  {
    "text": "any extra setup the other thing that's nice about this is if you look at the",
    "start": "3048140",
    "end": "3054290"
  },
  {
    "text": "Netflix the the say chaos monkey and some of the other ones those are embedded in a context where you're",
    "start": "3054290",
    "end": "3061220"
  },
  {
    "text": "running those in products like you wake up you attack you go back to sleep and what we want to be able to do is take",
    "start": "3061220",
    "end": "3068360"
  },
  {
    "text": "those set of attacks and we essentially put them behind an API so they they can be invoked from different context",
    "start": "3068360",
    "end": "3074690"
  },
  {
    "text": "whether it's pipeline context or production context and so this is a lower-level capability that just gives",
    "start": "3074690",
    "end": "3081170"
  },
  {
    "text": "us the ability to attack machines essentially and so that for us it's been",
    "start": "3081170",
    "end": "3086330"
  },
  {
    "text": "useful in that respect does that does that answer your question I don't don't",
    "start": "3086330",
    "end": "3093320"
  },
  {
    "text": "think so I mean I could see why you would use that over the things that you mentioned but I mean the simplest level",
    "start": "3093320",
    "end": "3099350"
  },
  {
    "text": "all you're doing is an SSH into a machine and saying run this command and you don't need any any agent so you",
    "start": "3099350",
    "end": "3105740"
  },
  {
    "text": "don't need any the simian army or anything for any of those and",
    "start": "3105740",
    "end": "3111330"
  },
  {
    "text": "but it seems like that's all you're using it for yeah so some you know one",
    "start": "3111330",
    "end": "3117960"
  },
  {
    "text": "of the thing is that we're we're generally you know we do have some cases where we do that sort of ssh sort of",
    "start": "3117960",
    "end": "3124940"
  },
  {
    "text": "activity you know obviously not with people doing that but having automation doing that there are sometimes firewall",
    "start": "3124940",
    "end": "3132480"
  },
  {
    "text": "issues that come up so this is a case where you know instead of saying hey we need to get through a firewall if we",
    "start": "3132480",
    "end": "3138750"
  },
  {
    "text": "just have the instance have permission to talk to AWS which it does have then we side set that whole set of concerns",
    "start": "3138750",
    "end": "3145200"
  },
  {
    "text": "so that that's potentially one area where this could be useful that there's",
    "start": "3145200",
    "end": "3150780"
  },
  {
    "text": "a capability that we haven't used yet I believe it's called account impersonation which might allow us to",
    "start": "3150780",
    "end": "3158160"
  },
  {
    "text": "run attacks in a different VPC or a different account than where we trigger",
    "start": "3158160",
    "end": "3164160"
  },
  {
    "text": "the attack or where we ask for the attack to happen that's something that we have to investigate still but that's",
    "start": "3164160",
    "end": "3170100"
  },
  {
    "text": "something that's possible with Systems Manager from what I understand and you're right I mean you can easily you",
    "start": "3170100",
    "end": "3176190"
  },
  {
    "text": "can easily launch the attack with the SSH but with Systems Manager you don't have to worry about credentials and that's",
    "start": "3176190",
    "end": "3182250"
  },
  {
    "text": "really mentioned firewall issues etc okay yes I think we have time for all",
    "start": "3182250",
    "end": "3190590"
  },
  {
    "text": "right we have time for what so within the demonstration you guys showed Jenkins pipeline as running that is that",
    "start": "3190590",
    "end": "3198480"
  },
  {
    "text": "what you primarily use for doing these type of attacks in your environment or since your AWS based are you utilizing",
    "start": "3198480",
    "end": "3205760"
  },
  {
    "text": "the AWS tool the AWS pipeline for",
    "start": "3205760",
    "end": "3211860"
  },
  {
    "text": "handling the scenario we have a we have a pipeline shattuck case where we have a",
    "start": "3211860",
    "end": "3217740"
  },
  {
    "text": "pipeline tool that we built in-house called Banzai and we have our primary",
    "start": "3217740",
    "end": "3224090"
  },
  {
    "text": "infrastructure set up such that the applications when someone wants to create an application they can use a",
    "start": "3224090",
    "end": "3231090"
  },
  {
    "text": "dashboard that allows them to create the type of application it selects a template for them and then it will",
    "start": "3231090",
    "end": "3236100"
  },
  {
    "text": "create the repository create this pipeline in bonzai for them include the steps to build deploy etc so that's the",
    "start": "3236100",
    "end": "3243780"
  },
  {
    "text": "pipeline we primarily and that's my plan and we plan to continue using for for the original",
    "start": "3243780",
    "end": "3250230"
  },
  {
    "text": "tests we use Jenkins for the demonstration because it was easy to set it up my laptop well we we also use",
    "start": "3250230",
    "end": "3256230"
  },
  {
    "text": "Jenkins on the back end for the Banzai peace 2 though that's that's true right to actually run the job and then one of",
    "start": "3256230",
    "end": "3262050"
  },
  {
    "text": "our esteemed guests here his team he has the geography team that I mentioned",
    "start": "3262050",
    "end": "3267840"
  },
  {
    "text": "earlier his team uses team city so the approach isn't tied to any particular build automation ok thanks it's one",
    "start": "3267840",
    "end": "3276540"
  },
  {
    "text": "quick one when you're testing the circuit breakers do you do any side load do you bring up a blaze meter instance",
    "start": "3276540",
    "end": "3283500"
  },
  {
    "text": "and give more load as part of your testing yeah",
    "start": "3283500",
    "end": "3289050"
  },
  {
    "text": "so the the same colleague that I just mentioned is doing exactly that what they do is for the geography service",
    "start": "3289050",
    "end": "3296490"
  },
  {
    "text": "it's exactly what you just said they generate a bunch of load using Gatling",
    "start": "3296490",
    "end": "3301770"
  },
  {
    "text": "tool which they already had that infrastructure set up as part of their performance sensing piece and so now",
    "start": "3301770",
    "end": "3307290"
  },
  {
    "text": "they can test the breaker under realistic loads right so you're not tripping off of one error for example right and then a second one um is it",
    "start": "3307290",
    "end": "3314880"
  },
  {
    "text": "kind of exposure to give your developers the permissions you do in the service manager and how would I go to my cloud",
    "start": "3314880",
    "end": "3321900"
  },
  {
    "text": "team and say hey I want access to service manager how would I break that conversation yeah the answer is yes so",
    "start": "3321900",
    "end": "3330920"
  },
  {
    "text": "there that's very much a work in progress right now both within our team",
    "start": "3330920",
    "end": "3336120"
  },
  {
    "text": "and also in partnership with some vendors so the direction we're going is we do want the developers to be able to",
    "start": "3336120",
    "end": "3342720"
  },
  {
    "text": "run these attacks against their own services the developers have a lot of autonomy to Expedia we don't necessarily",
    "start": "3342720",
    "end": "3347910"
  },
  {
    "text": "want developers to be able to attack other people's services so yeah",
    "start": "3347910",
    "end": "3353580"
  },
  {
    "text": "the mechanics of it that that's still work in progress though and we did create an API that we use to front some",
    "start": "3353580",
    "end": "3360390"
  },
  {
    "text": "of these attacks so we can we haven't done it yet but we plan on implementing",
    "start": "3360390",
    "end": "3366380"
  },
  {
    "text": "authorization authentication so we can impose on the limits that really just mentioned thank you for your time great",
    "start": "3366380",
    "end": "3374190"
  },
  {
    "text": "present thank you very much it looks like we've run out of questions so they you again",
    "start": "3374190",
    "end": "3380690"
  }
]