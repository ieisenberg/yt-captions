[
  {
    "text": "hi everybody my name is Andy Troutman I'm a senior manager here in AWS I",
    "start": "0",
    "end": "5790"
  },
  {
    "text": "mostly focus on our software developer tools both for our internal systems and",
    "start": "5790",
    "end": "11730"
  },
  {
    "text": "in processes so the tools that Amazon and AWS engineers use as well as a",
    "start": "11730",
    "end": "18720"
  },
  {
    "text": "couple public services in our code suite family so code deploy could pipelines",
    "start": "18720",
    "end": "23960"
  },
  {
    "text": "that whole collection hope everyone's having a good reinvent so far every",
    "start": "23960",
    "end": "30240"
  },
  {
    "text": "every year I get to talk to a lot of customers it's always fun I always get asked the exact same question when they",
    "start": "30240",
    "end": "35280"
  },
  {
    "text": "find out that I work in our developer tooling space and they always ask how how does Amazon develop software how do",
    "start": "35280",
    "end": "41700"
  },
  {
    "text": "you guys ship so many features how do you innovate so quickly that and I",
    "start": "41700",
    "end": "49620"
  },
  {
    "text": "always ask the exact same question when they ask me that which is why do you care right so why do you actually want to know how Amazon does things I think",
    "start": "49620",
    "end": "56969"
  },
  {
    "text": "that the reason that most people want to know is because they think that Amazon's process looks a little something like",
    "start": "56969",
    "end": "62100"
  },
  {
    "text": "this right so that that we have locked away a bunch of unicorns in a vault and we tell",
    "start": "62100",
    "end": "68729"
  },
  {
    "text": "those unicorns that we want them to innovate and then software appears on a production server and magics happening",
    "start": "68729",
    "end": "75180"
  },
  {
    "text": "and essentially they're asking me because they want to steal my unicorn and they want to take it back to their company and they want to use it for",
    "start": "75180",
    "end": "81600"
  },
  {
    "text": "their own nefarious purposes and on the surface Amazon's process is pretty",
    "start": "81600",
    "end": "86759"
  },
  {
    "text": "interesting we do way north of 50 million deployments in a year we have",
    "start": "86759",
    "end": "91979"
  },
  {
    "text": "tens of thousands of builders across the company working on things on interesting projects all the time that comes out to",
    "start": "91979",
    "end": "98850"
  },
  {
    "text": "more than a deployment every second so we're we are constantly shipping code to somewhere in the world all the time but",
    "start": "98850",
    "end": "106500"
  },
  {
    "text": "I can tell you that the actual process of writing software at Amazon and being in that ecosystem is much more akin to",
    "start": "106500",
    "end": "113070"
  },
  {
    "text": "sausage-making than it is magical unicorn so if anything we have unicorn sausage and not actual unicorns this is",
    "start": "113070",
    "end": "121079"
  },
  {
    "text": "a good news because that doesn't mean you have to try and steal a unicorn if you want to emulate or imitate Amazon's",
    "start": "121079",
    "end": "127530"
  },
  {
    "text": "software process instead you can just steal our tools so when people ask me",
    "start": "127530",
    "end": "133950"
  },
  {
    "text": "about this and they asked me how we do things I tell them that a lot of our processes the way we develop software is",
    "start": "133950",
    "end": "139769"
  },
  {
    "text": "really codified in this in the tools and services that we've built internal to our company and more and more that we're",
    "start": "139769",
    "end": "146010"
  },
  {
    "text": "externalizing to a diverse customers so a lot of the tools we built before AWS",
    "start": "146010",
    "end": "151860"
  },
  {
    "text": "even existed back when we were just amazon.com many of those still perpetuate and Amazon's ecosystem today",
    "start": "151860",
    "end": "157709"
  },
  {
    "text": "which is extremely rare most things are overcome by events and scale kind of early in their lifecycle",
    "start": "157709",
    "end": "163739"
  },
  {
    "text": "and we tend to rebuild things again and again but our tooling stuff is stuck around so we think we did something",
    "start": "163739",
    "end": "169019"
  },
  {
    "text": "right mostly by accident but the good news is of course that as we were moving AWS",
    "start": "169019",
    "end": "174569"
  },
  {
    "text": "we're looking for opportunities to make these tools available to our customers right so many of the things we've built",
    "start": "174569",
    "end": "180090"
  },
  {
    "text": "internally we've also externalize which literally means you can steal our Unicorn you can just steal the tools and",
    "start": "180090",
    "end": "185130"
  },
  {
    "text": "I'll talk about how we use our tools and some of the internal aspects of the",
    "start": "185130",
    "end": "190410"
  },
  {
    "text": "Amazon culture and hopefully you can end up with a process that works for you I would say if you try an outright copy",
    "start": "190410",
    "end": "197010"
  },
  {
    "text": "Amazon's process it's not really going to work every company and as you'll see even within Amazon every team operates a",
    "start": "197010",
    "end": "203819"
  },
  {
    "text": "little differently right so we shoot for a baseline of expectations and then we let people experiment and deviate a lot",
    "start": "203819",
    "end": "209910"
  },
  {
    "text": "through that so a quick overview of what we're gonna talk about I'll start with just a quick whirlwind tour of Amazon's",
    "start": "209910",
    "end": "217680"
  },
  {
    "text": "technical and cultural landscape I think this is kind of the foundational stuff that it's the way Amazon thinks and it's",
    "start": "217680",
    "end": "225180"
  },
  {
    "text": "the way we approach problems this is important if you want to be able to copy",
    "start": "225180",
    "end": "230250"
  },
  {
    "text": "Amazon then we'll talk about our tooling philosophy some of the ways we invest in internal software development tooling",
    "start": "230250",
    "end": "237319"
  },
  {
    "text": "how how that works within the Amazon ecosystem and what we think is good and",
    "start": "237319",
    "end": "243810"
  },
  {
    "text": "bad about it well then we'll actually dive into like a code change so I'm not going to show",
    "start": "243810",
    "end": "250169"
  },
  {
    "text": "it could be any arbitrary change I'll I'll use a little dot to represent our code change but we'll talk about all the",
    "start": "250169",
    "end": "256200"
  },
  {
    "text": "processes that it flows through on its way to production so we'll start with the code review process the build process we'll talk about a thing that we",
    "start": "256200",
    "end": "263669"
  },
  {
    "text": "do with Tier one services called a pre-mortem which is basically the about all the horrible things that can",
    "start": "263669",
    "end": "269040"
  },
  {
    "text": "go wrong before they happen then we'll talk about pipelining so how changes flow through in succession the",
    "start": "269040",
    "end": "277110"
  },
  {
    "text": "actual deployment process where we actually get to put new software on a new virtual machine or an old virtual",
    "start": "277110",
    "end": "283290"
  },
  {
    "text": "machine or Hardware a drone all over the place we'll also talk a little bit about",
    "start": "283290",
    "end": "289830"
  },
  {
    "text": "managing infrastructure so the real secret sauce to Amazon is that is not",
    "start": "289830",
    "end": "295650"
  },
  {
    "text": "just that we think about this from shipping new versions of the Wetworks the software that's going to go onto the",
    "start": "295650",
    "end": "301410"
  },
  {
    "text": "virtual machine but the whole ecosystem of other web services that we depend on the infrastructure and how its",
    "start": "301410",
    "end": "307410"
  },
  {
    "text": "configured and tuned all of that is incredibly important to be able to being able to run a critical tier one service",
    "start": "307410",
    "end": "315150"
  },
  {
    "text": "and so we'll go into a bunch of details on how we actually manage that side of",
    "start": "315150",
    "end": "321479"
  },
  {
    "text": "it and then we'll talk about the auditing or the continuous process so the process definitely doesn't end once",
    "start": "321479",
    "end": "327660"
  },
  {
    "text": "a code change hits production that's really kind of the starting gun and Amazon invests a lot and kind of looking",
    "start": "327660",
    "end": "333710"
  },
  {
    "text": "at refining our best practices capturing risk and continuously testing things in",
    "start": "333710",
    "end": "339240"
  },
  {
    "text": "production to make sure things aren't deviating from expectations so some of the worst outages occur not at the",
    "start": "339240",
    "end": "345570"
  },
  {
    "text": "moment you make a software change and realize something went wrong but two or three days later when you realize you've released something really nefarious and",
    "start": "345570",
    "end": "351990"
  },
  {
    "text": "you've had time for it it kind of just stayed in the ecosystem I should have",
    "start": "351990",
    "end": "357150"
  },
  {
    "text": "time at the end for some thoughts and Q&A I'll probably do Q&A down off the",
    "start": "357150",
    "end": "362669"
  },
  {
    "text": "stage so stick around I'm happy to stay and chat as long as people want ok",
    "start": "362669",
    "end": "369360"
  },
  {
    "text": "so let's meet our hero if we're going to talk about the life of a code change to",
    "start": "369360",
    "end": "375090"
  },
  {
    "text": "a tier one service we need a code change so and this this is our humble code change he's the hero of our story his",
    "start": "375090",
    "end": "380699"
  },
  {
    "text": "goal is to get to production add customer value and make everybody happy",
    "start": "380699",
    "end": "386120"
  },
  {
    "text": "in order to do that let's talk about the ecosystem that he's going to live in so cultural reaching",
    "start": "386120",
    "end": "394080"
  },
  {
    "text": "you've probably heard this the story what did someone asked Jeff Bezos many",
    "start": "394080",
    "end": "399479"
  },
  {
    "text": "years ago what's the sweet spot of an engine during team right how big should it be how many people should have on it we",
    "start": "399479",
    "end": "404940"
  },
  {
    "text": "typically say at Amazon that we want two pizza teams which is the amount of engineers that we can hire that we can",
    "start": "404940",
    "end": "410970"
  },
  {
    "text": "feed with two pizzas right so the goal is a team should be relatively small in size if you go and look at the average",
    "start": "410970",
    "end": "417660"
  },
  {
    "text": "team size across all of Amazon it is still eight engineers or straight eight people it doesn't necessarily mean that",
    "start": "417660",
    "end": "423570"
  },
  {
    "text": "engineers that's as we'll talk about that's whoever you want to hire for the team so teams are relatively small in",
    "start": "423570",
    "end": "429300"
  },
  {
    "text": "size those team we want small teams because it lowers the communication costs write larger teams mean that",
    "start": "429300",
    "end": "437130"
  },
  {
    "text": "driving consensus across the entire group becomes much more harder it's harder to get everyone into a room it's",
    "start": "437130",
    "end": "442500"
  },
  {
    "text": "harder to convince everyone it really slows down the process eight is big enough that you can build something",
    "start": "442500",
    "end": "448199"
  },
  {
    "text": "significant you can of course build something with smaller teams but it feels like you can really get quite a bit done and you can also set up a",
    "start": "448199",
    "end": "455520"
  },
  {
    "text": "DevOps model which I'll talk about a little bit as well Amazon is big believers and the people that writing the software kind of owning",
    "start": "455520",
    "end": "461220"
  },
  {
    "text": "it end to end and an eight-person teams a pretty healthy sized team so that's what we shoot for of course you'll find",
    "start": "461220",
    "end": "467910"
  },
  {
    "text": "deviations teams as small as two and as big as dozens but but for the most part Everage team size is still eight",
    "start": "467910",
    "end": "473639"
  },
  {
    "text": "engineers whoops",
    "start": "473639",
    "end": "480020"
  },
  {
    "text": "the other aspect of Amazon's culture that we should probably talk about is our culture of ownership back before",
    "start": "480419",
    "end": "486330"
  },
  {
    "text": "DevOps became a word that was used in the larger culture Amazon really",
    "start": "486330",
    "end": "492520"
  },
  {
    "text": "emphasized this concept of what we called ownership at the time which was really kind of two things one every team",
    "start": "492520",
    "end": "498460"
  },
  {
    "text": "is structured at Amazon like a little miniature startup when people say what does Amazon look like organizationally I",
    "start": "498460",
    "end": "503800"
  },
  {
    "text": "always tell them it structured like a Federation of startups more than its structured like a single corporate entity and what I usually mean by that",
    "start": "503800",
    "end": "510550"
  },
  {
    "text": "is that a lot of the decision-making that a team has is his bottoms up",
    "start": "510550",
    "end": "515620"
  },
  {
    "text": "there is very little in the way of top-down mandate at Amazon we give teams a business problem we say this is your",
    "start": "515620",
    "end": "521320"
  },
  {
    "text": "area to go deliver on for the customer and then we let teams make a lot of decisions we let people decide the team",
    "start": "521320",
    "end": "527050"
  },
  {
    "text": "composition so the ratio of product managers to engineers to dev managers to",
    "start": "527050",
    "end": "533649"
  },
  {
    "text": "TPMS that the team goes and self-organizes from that perspective the",
    "start": "533649",
    "end": "539199"
  },
  {
    "text": "team decides on how they're going to measure their success both from the customer perspective so what are their",
    "start": "539199",
    "end": "544449"
  },
  {
    "text": "key metrics that they're going to look at could be adoption or it could be something more specific they also define",
    "start": "544449",
    "end": "550600"
  },
  {
    "text": "their operational metrics right so what are the key metrics that you should be looking at to be confident that your",
    "start": "550600",
    "end": "557050"
  },
  {
    "text": "service is healthy and functional and per excuse me performing as expected for the customer the team really does own",
    "start": "557050",
    "end": "564010"
  },
  {
    "text": "the whole thing end-to-end right there they define technology as well the last",
    "start": "564010",
    "end": "569050"
  },
  {
    "text": "time I checked Amazon's code repositories we had over 30 different languages in Amazon it's pretty easy to",
    "start": "569050",
    "end": "575980"
  },
  {
    "text": "start naming common language and then you really start to get into a long tail of weird stuff right so and and that's",
    "start": "575980",
    "end": "581800"
  },
  {
    "text": "just to illustrate like teams really are empowered go pick the technology and the tool to do your job and we want you to",
    "start": "581800",
    "end": "587680"
  },
  {
    "text": "optimize for the customer and not optimize for kind of a high level process once the one of these teams as",
    "start": "587680",
    "end": "594399"
  },
  {
    "text": "forms once this little miniature startup this form everyone on the team is expected to own the product end to end",
    "start": "594399",
    "end": "599709"
  },
  {
    "text": "and when we say own we really mean kind of the whole aspect of what it means to deliver a service that operate it right",
    "start": "599709",
    "end": "605949"
  },
  {
    "text": "so as an engineer at Amazon on a tier one service or any other you're absolutely going to be expected to write",
    "start": "605949",
    "end": "612430"
  },
  {
    "text": "the software right your own testing plan the releases release your software manage it in",
    "start": "612430",
    "end": "618910"
  },
  {
    "text": "production be on call for it work on business metrics work on product",
    "start": "618910",
    "end": "625089"
  },
  {
    "text": "development so our engineers are very much especially on the AWS side of the house very much involved in part in the",
    "start": "625089",
    "end": "632050"
  },
  {
    "text": "feedback loop with customers listening to what customers want thinking about how we should change the product to",
    "start": "632050",
    "end": "637360"
  },
  {
    "text": "accommodate it we really do expect everyone to kind of be all-in kind of own the whole process and this is very",
    "start": "637360",
    "end": "644050"
  },
  {
    "text": "similar in spirit to a DevOps model DevOps really is focused on getting the operational people and the engineers",
    "start": "644050",
    "end": "650170"
  },
  {
    "text": "kind of embedded together I think Amazon looks at it a little bit more broadly and says you know everyone should be involved in kind of everything that's",
    "start": "650170",
    "end": "656500"
  },
  {
    "text": "involved on their their particular service or product and this is again tenable because we like small teams",
    "start": "656500",
    "end": "662019"
  },
  {
    "text": "right if we were operating teams that were you know five and six dozen people or an organization of hundreds you",
    "start": "662019",
    "end": "668860"
  },
  {
    "text": "really can't have that sense of ownership the product is way too large complex and unwieldy you need to have",
    "start": "668860",
    "end": "674860"
  },
  {
    "text": "small teams with a small business focus so they can really truly kind of dive in and own it so that's a little bit of",
    "start": "674860",
    "end": "682870"
  },
  {
    "text": "Amazon culture will cut well we'll keep referencing it through the talk I think it really does as I said forms the",
    "start": "682870",
    "end": "688660"
  },
  {
    "text": "foundation or at least the mentality of how we develop things at Amazon the other aspect that's important understand",
    "start": "688660",
    "end": "694569"
  },
  {
    "text": "is Amazon service-oriented architecture so nearly everything asterisk most",
    "start": "694569",
    "end": "700779"
  },
  {
    "text": "everything at Amazon lives in the form of a web service so our little code",
    "start": "700779",
    "end": "706449"
  },
  {
    "text": "change is going to live in this little green bubble which represents some micro service somewhere web services are great",
    "start": "706449",
    "end": "712959"
  },
  {
    "text": "for a lot of reasons but from the perspective of a software change there's a couple inherit values one is every web",
    "start": "712959",
    "end": "719230"
  },
  {
    "text": "service has a public interface that interfaces the contract to anyone who wants to call and get data in or out of",
    "start": "719230",
    "end": "724600"
  },
  {
    "text": "that service or manipulate the state of that service so it's a contract right the contract is good because now we only",
    "start": "724600",
    "end": "730839"
  },
  {
    "text": "have one entry and exit point that we have to worry about this isolates concerns which is good",
    "start": "730839",
    "end": "736600"
  },
  {
    "text": "as well as that a large service so a service like ec2 or s3 is really",
    "start": "736600",
    "end": "743170"
  },
  {
    "text": "composed of many services right so you could think of ec2 as is a collection of web services that",
    "start": "743170",
    "end": "748320"
  },
  {
    "text": "cobble together to make the experience of a VC - so again this isolates",
    "start": "748320",
    "end": "755850"
  },
  {
    "text": "concerns we can have a very complicated thing but making a single change doesn't mean we have to think about the entire",
    "start": "755850",
    "end": "762120"
  },
  {
    "text": "system as a whole typically there are many parts of it that won't be impacted by the change won't be changed at all won't depend on",
    "start": "762120",
    "end": "769709"
  },
  {
    "text": "our particular change and because again we have these harden contracts and interfaces that we're all programming -",
    "start": "769709",
    "end": "775800"
  },
  {
    "text": "there's a little chance of surprise right as long as we're maintaining the the essence of the contract we can be",
    "start": "775800",
    "end": "783000"
  },
  {
    "text": "relatively confident that the ecosystem of other micro services that we use and depend on are not going to be impacted",
    "start": "783000",
    "end": "789600"
  },
  {
    "text": "by our change again everything we're trying to shrink down things into manageable sizes right we shrink our teams down to manageable sizes and we",
    "start": "789600",
    "end": "796139"
  },
  {
    "text": "try to shrink down our software to a place where we can wrap our heads around it and we don't have to and hold the",
    "start": "796139",
    "end": "801149"
  },
  {
    "text": "entire state of ec2 in our minds another big advantages of services is that you can leverage them right so it's a very",
    "start": "801149",
    "end": "809730"
  },
  {
    "text": "simple example I am our identity and access management service is another web service at Amazon that controls",
    "start": "809730",
    "end": "815880"
  },
  {
    "text": "permissions and groups and and how teams are able to access other web services",
    "start": "815880",
    "end": "821639"
  },
  {
    "text": "if ec2 had to invent all of that by hands they would basically just spend all their time working on I am and they",
    "start": "821639",
    "end": "827399"
  },
  {
    "text": "would never had features - ec2 that's absolutely not what we want instead they can use the public contract that I am",
    "start": "827399",
    "end": "834319"
  },
  {
    "text": "provides and they get a ton of functionality and features of access",
    "start": "834319",
    "end": "839490"
  },
  {
    "text": "control for free right this is incredibly value valuable again it lets us compartmentalize different",
    "start": "839490",
    "end": "845220"
  },
  {
    "text": "aspects of customer experience not worry about them forming them off to someone else and then program to a contract",
    "start": "845220",
    "end": "851569"
  },
  {
    "text": "again it's extremely helpful when we want to ship code rapidly ok my one",
    "start": "851569",
    "end": "857610"
  },
  {
    "text": "slide on the local development process the local development process at Amazon is pretty blahblah West intentionally",
    "start": "857610",
    "end": "864389"
  },
  {
    "text": "are our focus when and when I say the local development process I mean an individual engineer on their laptop",
    "start": "864389",
    "end": "870449"
  },
  {
    "text": "writing code right so or on their virtual machine and the cloud this is",
    "start": "870449",
    "end": "875790"
  },
  {
    "text": "well before we're actually going to put a change in front of customer this is an experimentation phase we",
    "start": "875790",
    "end": "881670"
  },
  {
    "text": "really want people to be able to move as quickly as they want here right and so people always ask what is Amazon do for",
    "start": "881670",
    "end": "888420"
  },
  {
    "text": "a software delivery process and I always say a j'l yes question mark I can tell you that if",
    "start": "888420",
    "end": "895740"
  },
  {
    "text": "there's any problem Amazon that is completely across the board different it's how we approach project planning",
    "start": "895740",
    "end": "901529"
  },
  {
    "text": "right so I would say you'll see everything from scrum with a capital S",
    "start": "901529",
    "end": "906690"
  },
  {
    "text": "to Kanban to everyone just grab a thing and start typing as quickly as you can",
    "start": "906690",
    "end": "911760"
  },
  {
    "text": "like it's it's completely all over the board though the few tenants that we do seem to congregate around is this",
    "start": "911760",
    "end": "919649"
  },
  {
    "text": "concept of iterating quickly so at Amazon we want to ship everything to production so any code change that we're",
    "start": "919649",
    "end": "926399"
  },
  {
    "text": "working on the intent is that it's going to go to a customer a customer is going to interact with it going to provide us feedback and we're going to use that as",
    "start": "926399",
    "end": "932940"
  },
  {
    "text": "a feedback loop to make the next decision right so Amazon if we do anything from a project planning",
    "start": "932940",
    "end": "940019"
  },
  {
    "text": "perspective it really is shift things early ship small pieces here about what the customer says and then decide what",
    "start": "940019",
    "end": "946290"
  },
  {
    "text": "to do with it next as I said it's very well Wild West in the development",
    "start": "946290",
    "end": "951510"
  },
  {
    "text": "environments there's no permissions or gating or checking at this point it",
    "start": "951510",
    "end": "957389"
  },
  {
    "text": "really is the focus of letting the engineer play around with code experiment get something to work figure",
    "start": "957389",
    "end": "964410"
  },
  {
    "text": "out how it participates another concept another consequence of our web service",
    "start": "964410",
    "end": "970139"
  },
  {
    "text": "architecture is that we can turn anyone's laptop or dev desktop into a micro service right so we can actually",
    "start": "970139",
    "end": "976230"
  },
  {
    "text": "have even a developer box participate in a test environment as it was it as if it",
    "start": "976230",
    "end": "983699"
  },
  {
    "text": "were a copy of a micro service right this is again very advantageous because we can actually expiry we can experiment against our production",
    "start": "983699",
    "end": "990360"
  },
  {
    "text": "dependencies in the web service ecosystem we can call other things under test and make sure that they're going to",
    "start": "990360",
    "end": "995399"
  },
  {
    "text": "compose appropriately this drives down the it worked on my desktop phenomenon right so everyone everything works",
    "start": "995399",
    "end": "1002510"
  },
  {
    "text": "brilliantly on your desktop and then when you actually have to call your dependencies things go bad we encourage people to front-load that as much as",
    "start": "1002510",
    "end": "1008149"
  },
  {
    "text": "possible so even on your desktop you're really mocking it you're you're really running a local micro service and",
    "start": "1008149",
    "end": "1014660"
  },
  {
    "text": "calling against all of your dependencies this could sound very scary from the",
    "start": "1014660",
    "end": "1020690"
  },
  {
    "text": "perspective of not releasing dangerous code into production and the way we hedge that is that we have a process",
    "start": "1020690",
    "end": "1028339"
  },
  {
    "text": "that begins sort of at code review time right and so once you get to the point where you think you have something",
    "start": "1028339",
    "end": "1033709"
  },
  {
    "text": "working and you want to start releasing it into production that's really when the formal software release process kind",
    "start": "1033709",
    "end": "1039620"
  },
  {
    "text": "of kicks off right and at that point as we'll talk about we're really focusing on kicking changes out of the process as",
    "start": "1039620",
    "end": "1046459"
  },
  {
    "text": "quickly as possible so that kind of segues in nicely to our tooling",
    "start": "1046459",
    "end": "1052850"
  },
  {
    "text": "philosophy if you take away anything from this talk this is probably the slide that's worth worth looking at and",
    "start": "1052850",
    "end": "1060040"
  },
  {
    "text": "I see the e is on its own line down there in our in our ecosystem at Amazon",
    "start": "1060040",
    "end": "1068740"
  },
  {
    "text": "excuse me there's really the way we fund things is is through common tooling",
    "start": "1068740",
    "end": "1074000"
  },
  {
    "text": "right so what we do first is we build very simple foundational building block services right so we will build the",
    "start": "1074000",
    "end": "1081080"
  },
  {
    "text": "simplest possible build service that you could think of right we were going to call this script every time and we're",
    "start": "1081080",
    "end": "1087530"
  },
  {
    "text": "gonna look for a failure code and that's really all of our build service does and then we'll make it scale as much as we need to build we will build a deployment",
    "start": "1087530",
    "end": "1095210"
  },
  {
    "text": "system that will just put bits on a box and call your scripts software release process we'll build a very simple",
    "start": "1095210",
    "end": "1100520"
  },
  {
    "text": "pipelining tool etc etc so we invest in very simple foundational services and we",
    "start": "1100520",
    "end": "1107900"
  },
  {
    "text": "make them highly extensible and extendable the next thing we do is we encourage an open marketplace within Amazon so teams individual service teams",
    "start": "1107900",
    "end": "1115520"
  },
  {
    "text": "these these these services these startups that are out in our ecosystem they're encouraged to go micro optimize",
    "start": "1115520",
    "end": "1121850"
  },
  {
    "text": "their software change process for their customer right as long as they're using the foundational tools right so use the",
    "start": "1121850",
    "end": "1128090"
  },
  {
    "text": "basic stuff but then extend it or change it or modify it or invest in it as much as you want and then those of us who own",
    "start": "1128090",
    "end": "1135980"
  },
  {
    "text": "tools we just sit back and we watch so we go in our bunker and we look through the little slits and we see what's going on out in the ecosystem of all these",
    "start": "1135980",
    "end": "1143360"
  },
  {
    "text": "little individual startups building things and what we typically find is as winners emerge right so people figure",
    "start": "1143360",
    "end": "1149630"
  },
  {
    "text": "out how to test things in a better way people figure out a faster or safer way to do software updates to their services",
    "start": "1149630",
    "end": "1155630"
  },
  {
    "text": "etc etc all the way through and then we fund winners right so as soon as we see something kind of getting a foothold",
    "start": "1155630",
    "end": "1161830"
  },
  {
    "text": "succeeding on more than an individual team looking like it's going to scale out we'll will offer to kind of take",
    "start": "1161830",
    "end": "1168260"
  },
  {
    "text": "ownership of that that component or that plug-in and then we'll make it broadly available to the company right so we use",
    "start": "1168260",
    "end": "1174580"
  },
  {
    "text": "every single one of our individual kind of startups as a test lab to experiment",
    "start": "1174580",
    "end": "1180080"
  },
  {
    "text": "on better ways to do things and then when we find something that seems to be working we look for ways to kind of fund",
    "start": "1180080",
    "end": "1185150"
  },
  {
    "text": "it broadly right so again this is kind of another one of these flywheels that we use at Amazon we want to make sure",
    "start": "1185150",
    "end": "1191710"
  },
  {
    "text": "that we're building basic things that everyone can highly-leveraged letting teams kind of micro optimize when they",
    "start": "1191710",
    "end": "1198710"
  },
  {
    "text": "need to and then kind of stealing the best ideas and making them again globally available I think a lot of",
    "start": "1198710",
    "end": "1204530"
  },
  {
    "text": "people when they build a development process at a company they start with a very rigid set of guidelines and this",
    "start": "1204530",
    "end": "1209900"
  },
  {
    "text": "absolutely kills innovation this is something I discourage you need to come up with a set of foundational things that must happen you know for your own",
    "start": "1209900",
    "end": "1216830"
  },
  {
    "text": "sanity for your compliance or auditing purposes but then I really do think you need to open up the door and let people",
    "start": "1216830",
    "end": "1222100"
  },
  {
    "text": "optimize their development process watch what they do and steal what seems good",
    "start": "1222100",
    "end": "1228220"
  },
  {
    "text": "so as I was talking about before we need an we need an antagonist right so if our software change is our hero",
    "start": "1228220",
    "end": "1234950"
  },
  {
    "text": "our villain is the process right so like we were talking about before the the the",
    "start": "1234950",
    "end": "1241070"
  },
  {
    "text": "software processes really starts when you have a candidate change and you want to actually start putting on the servers",
    "start": "1241070",
    "end": "1246410"
  },
  {
    "text": "so for our tier one service for a mission-critical service it's very well Wild West and then once we get to this",
    "start": "1246410",
    "end": "1252620"
  },
  {
    "text": "place where hey I want to put this on a server that a customer's going to see then the process kicks in the process is",
    "start": "1252620",
    "end": "1259520"
  },
  {
    "text": "looking at every single change its auditing how the changes going out the door and from the perspective of our",
    "start": "1259520",
    "end": "1264920"
  },
  {
    "text": "software release process every single change is absolutely evil right so we kind of adopt a mentality that's a",
    "start": "1264920",
    "end": "1271190"
  },
  {
    "text": "software release process is just going to assume from the get-go that the change that you were trying to release isn't a Farias by nature right so this",
    "start": "1271190",
    "end": "1278360"
  },
  {
    "text": "changes our mentality a lot it gets us to think about really this is going to be broken how quickly can we detect that something is",
    "start": "1278360",
    "end": "1284690"
  },
  {
    "text": "broken and mitigated right so that the whole software release process into production is heavily automated but it's",
    "start": "1284690",
    "end": "1291649"
  },
  {
    "text": "also extremely pessimistic and cautious about any single change we find that when we get optimistic and say ah",
    "start": "1291649",
    "end": "1297080"
  },
  {
    "text": "nothing's ever going to happen or the worst will never happen that's exactly when it does right so instead of doing that we kind of adopt this philosophy of",
    "start": "1297080",
    "end": "1303320"
  },
  {
    "text": "changes are bad let's let's see if we can catch it before it gets out of the lab okay let's let's actually start",
    "start": "1303320",
    "end": "1310970"
  },
  {
    "text": "talking about software release so changes are born and get for the most part in Amazon git is is by far the",
    "start": "1310970",
    "end": "1317840"
  },
  {
    "text": "winner as far as version control goes in the Amazon ecosystem but as I said",
    "start": "1317840",
    "end": "1323059"
  },
  {
    "text": "before so you could view git as our sort of foundational tool or service and then we've of course extended it and added a",
    "start": "1323059",
    "end": "1330230"
  },
  {
    "text": "bunch of niceties on top of it that we think are advantageous so we don't run git we run git farm get farm is our",
    "start": "1330230",
    "end": "1337159"
  },
  {
    "text": "internal internal code change repository when you're using it forum you get a few",
    "start": "1337159",
    "end": "1342289"
  },
  {
    "text": "extra things right so anytime you push a piece of code to get farm it's automatically replicated just in the",
    "start": "1342289",
    "end": "1347659"
  },
  {
    "text": "same way if you did an s3 put you're getting multiple copies of your objects distributed globally so that if anything",
    "start": "1347659",
    "end": "1355070"
  },
  {
    "text": "should happen to one copy you're not actually going to lose your data we do the exact same thing for intellectual property and in terms of code we make",
    "start": "1355070",
    "end": "1362149"
  },
  {
    "text": "sure that things are replicated in multiple data centers across the world gets vanilla access control leave",
    "start": "1362149",
    "end": "1368809"
  },
  {
    "text": "something to be desired especially in our environments so we added a lot of fine-grained access control that is",
    "start": "1368809",
    "end": "1375070"
  },
  {
    "text": "organizationally aware on top of git this allows us to do things like access access control individual files or",
    "start": "1375070",
    "end": "1382010"
  },
  {
    "text": "branches we can access control those things to groups or individuals or members again for the most part every",
    "start": "1382010",
    "end": "1389059"
  },
  {
    "text": "piece of code in Amazon is publicly available inside of Amazon I guess public is not the right word but",
    "start": "1389059",
    "end": "1395480"
  },
  {
    "text": "uh but there are some things that are of course prototype proprietary new projects we that we don't want to leak",
    "start": "1395480",
    "end": "1401480"
  },
  {
    "text": "out globally those things need to be have tighter access control at the beginning special secret sauce things",
    "start": "1401480",
    "end": "1407720"
  },
  {
    "text": "that may also be restricted in some way so those things we want finer grained access control because we want to",
    "start": "1407720",
    "end": "1413880"
  },
  {
    "text": "if we just used vanilla --get we would basically have to lock down that entire repository and and that's a kind of a",
    "start": "1413880",
    "end": "1420270"
  },
  {
    "text": "cultural really revolts of things to Amazonians many of our developers and our managers don't want a code base to",
    "start": "1420270",
    "end": "1427020"
  },
  {
    "text": "be hidden or locked away we want it to be available we want to be able to learn from it and so we seek to lock down the smallest individual piece of a change",
    "start": "1427020",
    "end": "1433919"
  },
  {
    "text": "that we have to I'd be remiss to not say that Oh code search code searches and other",
    "start": "1433919",
    "end": "1440039"
  },
  {
    "text": "things there anytime you check in a piece of code to get farm it's automatically indexed and searchable globally many teams or many companies",
    "start": "1440039",
    "end": "1447750"
  },
  {
    "text": "typically will index things locally for an individual team so you can go and search all the code that your team owns",
    "start": "1447750",
    "end": "1454380"
  },
  {
    "text": "Amazon lets you search the entire code base right so I can go to our code",
    "start": "1454380",
    "end": "1459780"
  },
  {
    "text": "search tools and I can search at draw at code in on Amazon Prime error I can go",
    "start": "1459780",
    "end": "1465570"
  },
  {
    "text": "look at any of the AWS services and the reason we do this is again we want this ecosystem of learning from each other",
    "start": "1465570",
    "end": "1472250"
  },
  {
    "text": "because we are all leveraging each other's web services we have these hardened contracts it's incredibly high",
    "start": "1472250",
    "end": "1478080"
  },
  {
    "text": "leverage to be able to go and see how someone else used a web service quickly you know rip a piece of their code steal",
    "start": "1478080",
    "end": "1485010"
  },
  {
    "text": "it and make use of it for your own purposes if any of you have developed in a large corporate environment where you",
    "start": "1485010",
    "end": "1491039"
  },
  {
    "text": "don't have easy access to all of the source code it's incredibly frustrating you basically have to go find the guy or",
    "start": "1491039",
    "end": "1497549"
  },
  {
    "text": "the woman who knows how to make a change and beg them to teach you how to get it",
    "start": "1497549",
    "end": "1502740"
  },
  {
    "text": "to work it's it's incredibly frustrating so we want we want to we want to knock",
    "start": "1502740",
    "end": "1508020"
  },
  {
    "text": "down those barriers as much as we can and we discourage that many of the things I'm talking about from the perspective of git farm are also",
    "start": "1508020",
    "end": "1514590"
  },
  {
    "text": "available in code commit so just to tie this back to what you can do if you want to steal our unicorns I would say many",
    "start": "1514590",
    "end": "1520770"
  },
  {
    "text": "of the things we've invested that we found high leverage for our own software change processes we've baked into into",
    "start": "1520770",
    "end": "1526380"
  },
  {
    "text": "code commit so a lot of this stuff is available for a native Bears customer as well all right so we've written a piece",
    "start": "1526380",
    "end": "1534690"
  },
  {
    "text": "of software locally we've gotten it to work we may be tested it in our test environment now it's time to actually",
    "start": "1534690",
    "end": "1542250"
  },
  {
    "text": "start the change release process so the change release process typically begins",
    "start": "1542250",
    "end": "1547560"
  },
  {
    "text": "with a code review or a pull request either way if you went and looked at",
    "start": "1547560",
    "end": "1553470"
  },
  {
    "text": "Amazon's code review tools they're very vanilla write it it shows you add if it's show it lets you comment on a",
    "start": "1553470",
    "end": "1559080"
  },
  {
    "text": "particular line eventually people can click a button that says shipit that endorses your change is ready to go nothing is particularly exciting about",
    "start": "1559080",
    "end": "1565740"
  },
  {
    "text": "it so you could do that as kind of the foundational tool that we you know looks like every other code review tool out",
    "start": "1565740",
    "end": "1571470"
  },
  {
    "text": "there the place that we found value especially for our Tier one services was",
    "start": "1571470",
    "end": "1576480"
  },
  {
    "text": "putting a rules engine on top of it to be more specific about the type of people we want reviewing code we found",
    "start": "1576480",
    "end": "1582960"
  },
  {
    "text": "that especially for a tier one service we don't want just any member of the team to sign off on a piece of code we",
    "start": "1582960",
    "end": "1588840"
  },
  {
    "text": "typically want a more senior member of the team right if we're going to go change the way s three stores objects",
    "start": "1588840",
    "end": "1595080"
  },
  {
    "text": "that's an incredibly sensitive piece of software we really do want our most trusted engineers to have taken a look",
    "start": "1595080",
    "end": "1601200"
  },
  {
    "text": "at it and endorsed it if you are in an environment where you have compliance or regulatory mechanisms oftentimes you are",
    "start": "1601200",
    "end": "1607140"
  },
  {
    "text": "asked to have a third party or a person outside of the team review a piece of code and sign off on it",
    "start": "1607140",
    "end": "1612480"
  },
  {
    "text": "Amazon is no different we have some of these regulatory requirements that we need to meet for our customers and so we",
    "start": "1612480",
    "end": "1618750"
  },
  {
    "text": "use code review is a great gating mechanism right we can say this piece of code has to be signed off by two senior",
    "start": "1618750",
    "end": "1624780"
  },
  {
    "text": "engineers and a member of this auditing group or before it can proceed right so again we try and front-load these things",
    "start": "1624780",
    "end": "1630870"
  },
  {
    "text": "as early as possible we don't want change the day before production to be getting reviewed by an auditor and and",
    "start": "1630870",
    "end": "1636990"
  },
  {
    "text": "come up with some small reason why we can't release it we want to catch that extremely early in the development",
    "start": "1636990",
    "end": "1642360"
  },
  {
    "text": "process so we invest a lot in a rules engine that sits on top of code review",
    "start": "1642360",
    "end": "1647450"
  },
  {
    "text": "the build process so you know eventually you will get people to ship your code",
    "start": "1647450",
    "end": "1652610"
  },
  {
    "text": "either by crying at their desk or begging them offering them to get them lunch or just writing really great code",
    "start": "1652610",
    "end": "1659220"
  },
  {
    "text": "which is not usually how I get code shipped now it's time to build it so you of course you can build locally the",
    "start": "1659220",
    "end": "1665670"
  },
  {
    "text": "local build looks a lot like the production build but if something is going to go into production is going to",
    "start": "1665670",
    "end": "1670740"
  },
  {
    "text": "be released to customers it's going to get built on special-purpose build servers so we can fingerprint it and check some it and make sure that we have",
    "start": "1670740",
    "end": "1678480"
  },
  {
    "text": "a consistent release process one of the interesting choices within Amazon's ecosystem is that we have a",
    "start": "1678480",
    "end": "1684640"
  },
  {
    "text": "global dependency closure so most teams are most companies of Amazon size begin",
    "start": "1684640",
    "end": "1691210"
  },
  {
    "text": "to do dependency resolution at the team level or at the local rebel right so everyone has their own local maven",
    "start": "1691210",
    "end": "1696640"
  },
  {
    "text": "repository with the things that they depend on Amazon has chosen to go a different way we typically we have a",
    "start": "1696640",
    "end": "1702670"
  },
  {
    "text": "single global dependency closure for most things this comes with advantages and disadvantages if you are a library",
    "start": "1702670",
    "end": "1710170"
  },
  {
    "text": "service this means that when you build your code and it successfully build built it gets built against all of your",
    "start": "1710170",
    "end": "1717250"
  },
  {
    "text": "downstream dependencies this is incredibly valuable if we want to make sure that like core essential library",
    "start": "1717250",
    "end": "1723220"
  },
  {
    "text": "code the way we do marshaling an done marshalling of data objects and our web service infrastructure as an example is",
    "start": "1723220",
    "end": "1730390"
  },
  {
    "text": "consistent right we're not going to break a downstream service that's kind of depending on us it also makes builds",
    "start": "1730390",
    "end": "1735430"
  },
  {
    "text": "for core libraries incredibly expensive right it takes a long time to build against all of your dependencies but",
    "start": "1735430",
    "end": "1741310"
  },
  {
    "text": "there are but we find like over all it's more advantages and disadvantages the other place this really helps us is we",
    "start": "1741310",
    "end": "1747730"
  },
  {
    "text": "can pick any particular software package in the Amazon ecosystem and quickly answer where is it in use in the field",
    "start": "1747730",
    "end": "1755980"
  },
  {
    "text": "right so example would be heartbleed which was a security vulnerability to open SSL it was very easy in Amazon to",
    "start": "1755980",
    "end": "1763300"
  },
  {
    "text": "answer the question well who's actually compromised who's using this bad version of software we can go look and see every",
    "start": "1763300",
    "end": "1769330"
  },
  {
    "text": "single person that declared dependency on it and kind of quickly go sweep it out of our ecosystem",
    "start": "1769330",
    "end": "1775660"
  },
  {
    "text": "when builds happen of course unit testing happens static analysis happens we also block for boat and software so",
    "start": "1775660",
    "end": "1781690"
  },
  {
    "text": "we could go back to the open SSL version once we have a piece of software that we do not want to see in production we can",
    "start": "1781690",
    "end": "1786910"
  },
  {
    "text": "actually blacklist it right and at Build time we'll will actively block the usage",
    "start": "1786910",
    "end": "1792040"
  },
  {
    "text": "of these nefarious packages right again because we have a global dependency closure it lets us do these things with",
    "start": "1792040",
    "end": "1797560"
  },
  {
    "text": "more accuracy we don't have to go to every single team and figure out who's using what so it built",
    "start": "1797560",
    "end": "1805240"
  },
  {
    "text": "I'm always incredibly excited when something builds because it usually doesn't for me now it's time to actually",
    "start": "1805240",
    "end": "1810550"
  },
  {
    "text": "start releasing it right so putting it on our integration and one boxing and testing and",
    "start": "1810550",
    "end": "1816339"
  },
  {
    "text": "production environments we usually start with a pre-mortem which involves getting",
    "start": "1816339",
    "end": "1822190"
  },
  {
    "text": "the author of the code in a room with some other trusted people it could be members of the team it could be senior",
    "start": "1822190",
    "end": "1828129"
  },
  {
    "text": "engineers it could be dependencies and we talked about all the things that are going to go wrong when we released this",
    "start": "1828129",
    "end": "1834580"
  },
  {
    "text": "nefarious piece of code right so remember we're assuming that all code is designed to give us the worst day",
    "start": "1834580",
    "end": "1840099"
  },
  {
    "text": "possible right so we start from that assumption and then we start to think about well what's the worst day possible right how bad of a change could it be",
    "start": "1840099",
    "end": "1846849"
  },
  {
    "text": "what are all the things that we depend on how is it going to impact them does it mutate state what state does it",
    "start": "1846849",
    "end": "1853479"
  },
  {
    "text": "mutate what if we had a data corruption issue what would that look like how would we undo it how would we detect it",
    "start": "1853479",
    "end": "1859209"
  },
  {
    "text": "we ask all you know we basically go through the mental exercise of when this thing goes bad what are we going to do",
    "start": "1859209",
    "end": "1865479"
  },
  {
    "text": "about it right how will we mitigate it this is incredibly valuable process especially for a tier 1 critical surface",
    "start": "1865479",
    "end": "1872320"
  },
  {
    "text": "we want to think through all of these things upfront as much as possible so that when the unthinkable actually",
    "start": "1872320",
    "end": "1878200"
  },
  {
    "text": "happens we're prepared and we can take steps to mitigate it everyone is very focused on continuous delivery or",
    "start": "1878200",
    "end": "1884649"
  },
  {
    "text": "continuous deployment Amazon loves continuous delivery when you check in a",
    "start": "1884649",
    "end": "1889659"
  },
  {
    "text": "piece of code our goal is to make sure it's automated all the way through that being said the worst thing to do is to",
    "start": "1889659",
    "end": "1896019"
  },
  {
    "text": "claim that you are continuously delivering software without actually having a process that honors the tenants",
    "start": "1896019",
    "end": "1902769"
  },
  {
    "text": "of continuous delivery so we would much rather prefer a process that still has human judgment in it than a dangerous",
    "start": "1902769",
    "end": "1909909"
  },
  {
    "text": "process that isn't really ready to be fully automated right so we will take we'll take the hit on fully automated if",
    "start": "1909909",
    "end": "1916690"
  },
  {
    "text": "we have to until we can get things to that point when we're talking about a large critical service we're typically",
    "start": "1916690",
    "end": "1923169"
  },
  {
    "text": "still going to audit not every single software change you know many many small bug fixes are not worth this time but if",
    "start": "1923169",
    "end": "1929499"
  },
  {
    "text": "we're making a critical change to a critical service we're gonna pause and think about it before we release it and",
    "start": "1929499",
    "end": "1934509"
  },
  {
    "text": "not just solely rely on automation all right it built we talked about all the",
    "start": "1934509",
    "end": "1941619"
  },
  {
    "text": "bad things that could happen we wrote them down we've got a plan of execution let's start actually deploying",
    "start": "1941619",
    "end": "1947460"
  },
  {
    "text": "so off we go right we're gonna deploy our code through test environments",
    "start": "1947460",
    "end": "1952900"
  },
  {
    "text": "through integration environments and then ultimately to production a software change in AWS or in Amazon is not a",
    "start": "1952900",
    "end": "1961180"
  },
  {
    "text": "single thing I'm not just going to update the production servers we have servers all over the world right and so",
    "start": "1961180",
    "end": "1968020"
  },
  {
    "text": "a software change is really a long march across the globe for us just to kind of motivate this a little bit Amazon",
    "start": "1968020",
    "end": "1974980"
  },
  {
    "text": "currently has 15 regions with several more announced and I suspect that we're not going to stop building regions anytime soon within those regions which",
    "start": "1974980",
    "end": "1982510"
  },
  {
    "text": "are globally distributed we have 44 availability zones each of those availability zones we want to isolate",
    "start": "1982510",
    "end": "1988260"
  },
  {
    "text": "failures in so we don't want to update all of the availability zones at the exact same time if you were staging code",
    "start": "1988260",
    "end": "1995650"
  },
  {
    "text": "into cloud front there's a hundred pops also globally distributed throughout the world and did I mention that this is",
    "start": "1995650",
    "end": "2001260"
  },
  {
    "text": "just for AWS many of our processes also work for amazon.com so which is an even",
    "start": "2001260",
    "end": "2007770"
  },
  {
    "text": "more mixed ecosystem right so we in in amazon.com we have to think about how to",
    "start": "2007770",
    "end": "2013080"
  },
  {
    "text": "put code on a robot you know on a factory floor we have to think about how to put it on a drone many many other",
    "start": "2013080",
    "end": "2020640"
  },
  {
    "text": "different permutations so here's the software pipeline so this is our",
    "start": "2020640",
    "end": "2026700"
  },
  {
    "text": "internal pipelining tool this is actually just a screenshot of it left to right is release stages right so on the",
    "start": "2026700",
    "end": "2033210"
  },
  {
    "text": "on the leftmost side here is a package import a build and then each of those",
    "start": "2033210",
    "end": "2038670"
  },
  {
    "text": "vertical columns there is is a stage that's going to be released to you will",
    "start": "2038670",
    "end": "2043740"
  },
  {
    "text": "probably notice that on the far right hand side it's actually cut off this isn't all of it it probably extends",
    "start": "2043740",
    "end": "2048840"
  },
  {
    "text": "another half page right so so if I if we tried to do this with humans right if we said okay let's write down all the",
    "start": "2048840",
    "end": "2054929"
  },
  {
    "text": "places we need to go and you know we'll write a a cm that lists everything and then do we have any interns or junior",
    "start": "2054930",
    "end": "2061950"
  },
  {
    "text": "engineers that we can put on this problem for a months and they'll click through you know absolutely untenable right the goal of a continuous delivery",
    "start": "2061950",
    "end": "2069419"
  },
  {
    "text": "process and the goal of all of our release processes at Amazon is consistency right we want the exact same",
    "start": "2069420",
    "end": "2076050"
  },
  {
    "text": "process every single time we release change we don't want it to deviate deviation is often",
    "start": "2076050",
    "end": "2081148"
  },
  {
    "text": "when we find surprises and so we want consistency we want it to go through the same way every time so we have to invest",
    "start": "2081149",
    "end": "2087329"
  },
  {
    "text": "in pipelining or release automation right many of you have probably built a form of this with Jenkins or you know",
    "start": "2087329",
    "end": "2093539"
  },
  {
    "text": "pick your favorite CI or continuous integration or continuous delivery tool each other one of those vertical columns",
    "start": "2093539",
    "end": "2099390"
  },
  {
    "text": "is validation that's happening in that stage so that's testing sign-off",
    "start": "2099390",
    "end": "2104630"
  },
  {
    "text": "blockers we'll talk about all of this so as you can see like kind of an untenable",
    "start": "2104630",
    "end": "2110970"
  },
  {
    "text": "thing if you wanted to do it with a person so let's talk about release",
    "start": "2110970",
    "end": "2116130"
  },
  {
    "text": "primitives so as I said we Amazon has built pipelines or code pipelines this",
    "start": "2116130",
    "end": "2122039"
  },
  {
    "text": "is basically as it sounds a pipelining tool for releasing software so every single package build gets pushed into",
    "start": "2122039",
    "end": "2129630"
  },
  {
    "text": "the front of that change and then it marches through each one of those stages that I showed on the previous slide",
    "start": "2129630",
    "end": "2135319"
  },
  {
    "text": "changes can catch up to each other and get bundled together that's fine we don't mind if software catches up and",
    "start": "2135319",
    "end": "2141059"
  },
  {
    "text": "passes each other it's going to end up running in the same environments in production anyways and again we want to",
    "start": "2141059",
    "end": "2147690"
  },
  {
    "text": "catch changes as early as possible so the quicker we can run and execute code together on the same virtual machine the",
    "start": "2147690",
    "end": "2153539"
  },
  {
    "text": "better right so we're perfectly happy to to funnel changes all into the same release",
    "start": "2153539",
    "end": "2159410"
  },
  {
    "text": "we're also perfectly happy to kick out a change when we find out that it's bad and push another went into into the",
    "start": "2159410",
    "end": "2165359"
  },
  {
    "text": "front of it so that's the basic pipeline you know left to right it flows some of the things that we've invested over the",
    "start": "2165359",
    "end": "2171119"
  },
  {
    "text": "years that we found high leverage for our environment manual approvals so as I said we want a continuous delivery",
    "start": "2171119",
    "end": "2176549"
  },
  {
    "text": "hands-off process but the worst thing to do is to claim something is continuous delivery when it's not that's just being",
    "start": "2176549",
    "end": "2184079"
  },
  {
    "text": "a cowboy that's just kind of rolling the dice with every software change instead we we want gating mechanisms we want to",
    "start": "2184079",
    "end": "2189599"
  },
  {
    "text": "be able to pause a software release process and let a human make a judgment call either subjectively or objectively",
    "start": "2189599",
    "end": "2196490"
  },
  {
    "text": "and sign off on a change for it to go through we also use this as a form of compliance we prefer to do compliance",
    "start": "2196490",
    "end": "2203369"
  },
  {
    "text": "checks at code review time but some of them actually need to happen with the actual production servers as they're",
    "start": "2203369",
    "end": "2209160"
  },
  {
    "text": "being rolled out time windows everyone has the story of that",
    "start": "2209160",
    "end": "2214799"
  },
  {
    "text": "that we released that code change Friday afternoon before the long holiday weekend and it blew up and then we all",
    "start": "2214799",
    "end": "2220769"
  },
  {
    "text": "spent the rest of the weekend everyone so percent right so Amazon we absolutely",
    "start": "2220769",
    "end": "2225959"
  },
  {
    "text": "hate that story it's it's not a happy story so we Institute time windows for a tier",
    "start": "2225959",
    "end": "2231359"
  },
  {
    "text": "one service we are we used to back in the day we used to deploy things in off hours right so we would we would wait",
    "start": "2231359",
    "end": "2238469"
  },
  {
    "text": "till 3:00 a.m. on a Sunday when no one was using the website and a couple guys",
    "start": "2238469",
    "end": "2245219"
  },
  {
    "text": "would come in and we'd buy them coffee and they would make the change that what we came to discover that was a really",
    "start": "2245219",
    "end": "2250799"
  },
  {
    "text": "bad time to make change one the team is not engaged it's just the people who had to come in on a Sunday there they're",
    "start": "2250799",
    "end": "2257670"
  },
  {
    "text": "usually tired they're not very focused they just want to get it done with and",
    "start": "2257670",
    "end": "2263009"
  },
  {
    "text": "move on with their life it's the wrong kind of environment to make a critical change in so instead we've changed our",
    "start": "2263009",
    "end": "2268499"
  },
  {
    "text": "philosophy and we typically make code changes during core working hours right wherever you happen to be right so 9:00",
    "start": "2268499",
    "end": "2274410"
  },
  {
    "text": "to 5:00 not on Fridays if you're going to deploy on Friday you have to have been out the",
    "start": "2274410",
    "end": "2279749"
  },
  {
    "text": "door by lunchtime of course there are exceptions to this but for the most part we found that it works a lot better",
    "start": "2279749",
    "end": "2285469"
  },
  {
    "text": "testing there are a million different ways software is tested in the Amazon ecosystem there's basic smoke testing",
    "start": "2285469",
    "end": "2294989"
  },
  {
    "text": "does the API return the value I expected we also do a thing that we call ready fork which is essentially we will a be",
    "start": "2294989",
    "end": "2302670"
  },
  {
    "text": "test a particular code change both from a known good set of production data so",
    "start": "2302670",
    "end": "2309029"
  },
  {
    "text": "we'll look at latency and error rates and we'll compare them to the candidate change and we'll see if they are",
    "start": "2309029",
    "end": "2314630"
  },
  {
    "text": "matching essentially or correlated we can also set a certain number of",
    "start": "2314630",
    "end": "2320549"
  },
  {
    "text": "requests right so typically what people do is they'll just put a change out and kind of wait and hope that it gets called enough to be confident we can",
    "start": "2320549",
    "end": "2328410"
  },
  {
    "text": "actually just say like we're not going to this change will not go forward until we've seen a thousand requests against it and the error rate across those",
    "start": "2328410",
    "end": "2334890"
  },
  {
    "text": "thousand requests has to meet a certain threshold right or a certain latency or both right so there's many different",
    "start": "2334890",
    "end": "2341039"
  },
  {
    "text": "types of testing there's also of course scale and performance testing where we're looking at the response times for",
    "start": "2341039",
    "end": "2347109"
  },
  {
    "text": "or mission-critical calls right I know DB as you would imagine is",
    "start": "2347109",
    "end": "2352779"
  },
  {
    "text": "extremely latency sensitive so we're paying very close attention to response times for any new code change on the",
    "start": "2352779",
    "end": "2358779"
  },
  {
    "text": "critical request path global and on cords for those of you who are not Lean",
    "start": "2358779",
    "end": "2364989"
  },
  {
    "text": "Six Sigma junkies and anton cord is essentially a physical object as well as",
    "start": "2364989",
    "end": "2371980"
  },
  {
    "text": "a concept in Toyotas assembly lines they were the first to kind of introduce these the concept of an and on cord so",
    "start": "2371980",
    "end": "2378309"
  },
  {
    "text": "anyone on a production factory for a Toyota car the person who's screwing in",
    "start": "2378309",
    "end": "2385299"
  },
  {
    "text": "the bolts of the wheels the person who's shining the windshield before it leaves",
    "start": "2385299",
    "end": "2391029"
  },
  {
    "text": "the factory floor every single one of the people on that assembly line has a cord next to their station and at any",
    "start": "2391029",
    "end": "2396730"
  },
  {
    "text": "point in time they can pull that cord it will stop the entire assembly line process in a Toyota factory they are",
    "start": "2396730",
    "end": "2402519"
  },
  {
    "text": "encouraged to pull that cord anytime they find an issue of quality or of safety right when Toyota released this",
    "start": "2402519",
    "end": "2409059"
  },
  {
    "text": "it blew people's minds right because stopping a assembly line factory was incredibly expensive and incredibly",
    "start": "2409059",
    "end": "2415119"
  },
  {
    "text": "taboo Toyota wanted to make sure that quality was was job number one and they",
    "start": "2415119",
    "end": "2420369"
  },
  {
    "text": "empowered everyone to do this we loved this idea at Amazon and so we built it into many of our pipelines and our",
    "start": "2420369",
    "end": "2425470"
  },
  {
    "text": "release processes so across our company any individual engineer can detect a",
    "start": "2425470",
    "end": "2430569"
  },
  {
    "text": "software problem and can immediately pull in a global and on cord and stop",
    "start": "2430569",
    "end": "2436329"
  },
  {
    "text": "all change across the company right so again if you're operating a Tier one service and you know you have many many",
    "start": "2436329",
    "end": "2441609"
  },
  {
    "text": "dependencies upstream from you know s3 is a great example it's a highly leveraged service and you",
    "start": "2441609",
    "end": "2447640"
  },
  {
    "text": "see a problem you can pull in an accord and say you know something looks strange here I don't want anyone deploying",
    "start": "2447640",
    "end": "2453069"
  },
  {
    "text": "software until we figure out what it is all right and that will actually stop software globally across the company we",
    "start": "2453069",
    "end": "2458859"
  },
  {
    "text": "also use in on cords for particularly sensitive times of the year we don't change a lot of software right before",
    "start": "2458859",
    "end": "2465220"
  },
  {
    "text": "reinvent as you would imagine and so we can use these and on cording mechanisms to kind of block software from going out",
    "start": "2465220",
    "end": "2470950"
  },
  {
    "text": "and people can get exceptions when they need them finally attribution and roles is very important to the pipelining",
    "start": "2470950",
    "end": "2477130"
  },
  {
    "text": "process that we want to be able to for any single software change - no matter is on that long pipeline tie it all the",
    "start": "2477130",
    "end": "2483110"
  },
  {
    "text": "way back to a code review and a code change in a person right being able to do that is incredibly valuable if we",
    "start": "2483110",
    "end": "2489920"
  },
  {
    "text": "need to do escalation for a bad software change and figure out like what happened where did this come from being able to",
    "start": "2489920",
    "end": "2496130"
  },
  {
    "text": "kind of quickly trace back to origin State is a really important thing and of course along with that we have different",
    "start": "2496130",
    "end": "2501770"
  },
  {
    "text": "roles so we can access control different parts of this release process for the most part once the code is checked in",
    "start": "2501770",
    "end": "2506960"
  },
  {
    "text": "it's never touched by a person again but even still there are there are particular cases where we want different",
    "start": "2506960",
    "end": "2512210"
  },
  {
    "text": "roles okay I'm gonna switch to talk a little bit about the actual we've finally",
    "start": "2512210",
    "end": "2517730"
  },
  {
    "text": "gotten to the point where we want to put new bits on a box right and so what are",
    "start": "2517730",
    "end": "2524030"
  },
  {
    "text": "the things that we've instituted at deploy time so when we're actually going to update a collection of servers the",
    "start": "2524030",
    "end": "2529790"
  },
  {
    "text": "first thing that we that we expect everyone to use kind of company-wide is automatic roll backs so when we release",
    "start": "2529790",
    "end": "2535730"
  },
  {
    "text": "a piece of software if at any point in time during the software change and I",
    "start": "2535730",
    "end": "2540860"
  },
  {
    "text": "registered alarm goes off so this could be like a cloud watch alarm if you're using code deploy or for internal",
    "start": "2540860",
    "end": "2546920"
  },
  {
    "text": "services we have other alarming mechanisms as soon as an alarm goes off the deployment system will detect this",
    "start": "2546920",
    "end": "2552980"
  },
  {
    "text": "will stop the change and will automatically issue a rollback right so a human is not involved in the decision",
    "start": "2552980",
    "end": "2558620"
  },
  {
    "text": "to to mitigate or undo a software change over the years this has saves us minutes",
    "start": "2558620",
    "end": "2563690"
  },
  {
    "text": "upon minutes and then hours upon hours and days and days of outage 'men time what we know is that the meantime the",
    "start": "2563690",
    "end": "2569390"
  },
  {
    "text": "resolution the time at which a an event was detectable on a graph to the time an",
    "start": "2569390",
    "end": "2575300"
  },
  {
    "text": "engineer logs in troubleshoots and fixes it versus having an automated system do",
    "start": "2575300",
    "end": "2581330"
  },
  {
    "text": "that same process it cuts it a it cuts it down by about a fifth right so it's it's extremely faster to have automated",
    "start": "2581330",
    "end": "2587870"
  },
  {
    "text": "systems perform automatic rollbacks incremental release the best way to have",
    "start": "2587870",
    "end": "2594320"
  },
  {
    "text": "a bad day is to release software to every server all at the same time a much better process is of course to release",
    "start": "2594320",
    "end": "2600950"
  },
  {
    "text": "in batches right so update a single server compare it against the rest of",
    "start": "2600950",
    "end": "2606230"
  },
  {
    "text": "the fleet update a couple more servers a couple more a couple more as you go you can accelerate this process and so many",
    "start": "2606230",
    "end": "2612500"
  },
  {
    "text": "of our tools will accelerate the software these processes we build more and more confidence in it but when we introduce a",
    "start": "2612500",
    "end": "2618170"
  },
  {
    "text": "change to a new region or to the first region things move incredibly slowly at the start now those things are all",
    "start": "2618170",
    "end": "2624109"
  },
  {
    "text": "automated systems so it's not like a human is sitting there kind of like looking at their clock but but we want",
    "start": "2624109",
    "end": "2629420"
  },
  {
    "text": "to make sure that things start off slow and then kind of ramp up as we get as we build confidence again our internal",
    "start": "2629420",
    "end": "2635329"
  },
  {
    "text": "software deployment tools use this as well as their external so code deploy has this concept of incremental release as well health tracking this is another",
    "start": "2635329",
    "end": "2643520"
  },
  {
    "text": "form of incremental release so imagine that we update a set of servers and then halfway through a problem happens right",
    "start": "2643520",
    "end": "2651109"
  },
  {
    "text": "so and let's make it an even worse scenario so this is one of those post-mortem scenarios we didn't actually",
    "start": "2651109",
    "end": "2656720"
  },
  {
    "text": "test the rollback right so many times in a tier one service as part of that",
    "start": "2656720",
    "end": "2662720"
  },
  {
    "text": "post-mortem we will actually Institute that we roll out something halfway and then try and roll it back and figure out",
    "start": "2662720",
    "end": "2668569"
  },
  {
    "text": "if we can do it that is a bit untenable for every single change we're if we're if we're shipping code more than once a",
    "start": "2668569",
    "end": "2675230"
  },
  {
    "text": "second we can't do that for every change and so eventually we will have a bad day where this happens where we get halfway out the door we realize that we can't",
    "start": "2675230",
    "end": "2682069"
  },
  {
    "text": "automatically remediate it and now we need to roll forward with a patch of some sort the worst thing to do would be",
    "start": "2682069",
    "end": "2687260"
  },
  {
    "text": "to deploy and then have that deployment update the the blue servers which are",
    "start": "2687260",
    "end": "2692750"
  },
  {
    "text": "actually working just fine there on a known good version of software we want to update the broken red ones first as quickly as possible if you're not",
    "start": "2692750",
    "end": "2699530"
  },
  {
    "text": "keeping track of where all the way down to the virtual machine where you've put software what version it's on and what",
    "start": "2699530",
    "end": "2706130"
  },
  {
    "text": "is the known state of that software this can be incredibly troublesome when you actually have a problem so instead all",
    "start": "2706130",
    "end": "2712490"
  },
  {
    "text": "of our deployment systems keep track of this health tracking for you they ensure that we know exactly which servers are",
    "start": "2712490",
    "end": "2719540"
  },
  {
    "text": "in which state and which ones we are in a bad state and we'll prioritize those first when we do a software update or",
    "start": "2719540",
    "end": "2725359"
  },
  {
    "text": "software change well also when we do a rollback of course prioritize that most recently changed ones as well this again",
    "start": "2725359",
    "end": "2732020"
  },
  {
    "text": "shrinks the time to resolution for an event it also reduces the blast radius of a problem which is good",
    "start": "2732020",
    "end": "2740710"
  },
  {
    "text": "change Providence so just like we talked about in pipelining where we want to know an individual that made a change we",
    "start": "2744250",
    "end": "2751280"
  },
  {
    "text": "also want to do that for the actual built binaries that we're going to put on to compute instances that could be",
    "start": "2751280",
    "end": "2758180"
  },
  {
    "text": "virtual machines or lambda or wherever we're going to put it we also want to do",
    "start": "2758180",
    "end": "2764210"
  },
  {
    "text": "check something and fingerprinting right so we want to be able to say from again from an auditing and compliance standpoint that the Biltz that were that",
    "start": "2764210",
    "end": "2770930"
  },
  {
    "text": "the bits that were built and signed on a build server are the exact same ones that ended up on the end house so that",
    "start": "2770930",
    "end": "2777800"
  },
  {
    "text": "there's no man-in-the-middle tampering we can we can form a chain of trust all the way back to the code commit and of",
    "start": "2777800",
    "end": "2784070"
  },
  {
    "text": "course again we want to make sure that things are access controlled so we can say that no one can actually physically login or mutate that box we also have",
    "start": "2784070",
    "end": "2791660"
  },
  {
    "text": "continuous auditing mechanisms so that especially for our tier 1 services if someone were to get around the first",
    "start": "2791660",
    "end": "2797510"
  },
  {
    "text": "line of defense and figure out how to get on a box and manipulate State on it we actually have sweepers that go and",
    "start": "2797510",
    "end": "2803480"
  },
  {
    "text": "look at all the fingerprinting in production of all of our servers and figure out if something's changed and we",
    "start": "2803480",
    "end": "2808970"
  },
  {
    "text": "kick those hosts out of the fleet if we ever detect something so these are",
    "start": "2808970",
    "end": "2816230"
  },
  {
    "text": "hopefully you're getting the idea we build these building blocks services and we we build and build and build on top",
    "start": "2816230",
    "end": "2822380"
  },
  {
    "text": "of them for each of our tier 1 services and across the company we ask teams to continue to adopt new best practices as",
    "start": "2822380",
    "end": "2829280"
  },
  {
    "text": "we kind of identify them and so everyone is on a different version of that journey but for the most part our team",
    "start": "2829280",
    "end": "2834530"
  },
  {
    "text": "these these mechanisms that we've come up with are heavily used by everyone's software release processes when we talk",
    "start": "2834530",
    "end": "2841400"
  },
  {
    "text": "about our most mission-critical services they're going to use all of these mechanisms as well as some highly",
    "start": "2841400",
    "end": "2846470"
  },
  {
    "text": "optimized ones for their their own release processes let's talk about",
    "start": "2846470",
    "end": "2851690"
  },
  {
    "text": "managing infrastructure so as I said a",
    "start": "2851690",
    "end": "2857119"
  },
  {
    "text": "big aspect of any code change is not just the software change but the ecosystem of other pieces of",
    "start": "2857119",
    "end": "2862490"
  },
  {
    "text": "configuration other dependencies other web services the virtual machines we run on the amount of memory we've given them",
    "start": "2862490",
    "end": "2869550"
  },
  {
    "text": "the configuration that they're in the which version of the operating system we're using what patch data it's in etc",
    "start": "2869550",
    "end": "2877110"
  },
  {
    "text": "etc right Amazon has a goal to build new ad bears for engines in a single day",
    "start": "2877110",
    "end": "2883290"
  },
  {
    "text": "every single service team is asked to be able to build out an entire region once the you know infrastructure the physical",
    "start": "2883290",
    "end": "2889110"
  },
  {
    "text": "hardware is there in a single day many of my teams have done this and it's pretty impressive to see we've we've",
    "start": "2889110",
    "end": "2894900"
  },
  {
    "text": "invested a lot again in that pipelining mechanism so just like for a software change we have a pipeline that flows",
    "start": "2894900",
    "end": "2900120"
  },
  {
    "text": "across states we also make all of our infrastructure and configuration changes in the same way we make heavy use of",
    "start": "2900120",
    "end": "2906750"
  },
  {
    "text": "cloud formations the cloud formation is a template driven configuration system for many AWS services and on top of that",
    "start": "2906750",
    "end": "2914220"
  },
  {
    "text": "we've built our own templating system that we call live pipeline templates or LPT this is basically to extend cloud",
    "start": "2914220",
    "end": "2921450"
  },
  {
    "text": "formation and allow it to mutate state for pieces of infrastructure that are not a dream s services so for any",
    "start": "2921450",
    "end": "2927960"
  },
  {
    "text": "service there literally is a file or a collection of files which represents the entire web service and that can be",
    "start": "2927960",
    "end": "2935730"
  },
  {
    "text": "pushed into a region and and built out within a day it might not sound",
    "start": "2935730",
    "end": "2941070"
  },
  {
    "text": "impressive but when you start talking about deploying to tens or hundreds of thousands of different services and",
    "start": "2941070",
    "end": "2946260"
  },
  {
    "text": "different different configuration States this is way more than you could possibly",
    "start": "2946260",
    "end": "2951950"
  },
  {
    "text": "keep track of with a wiki page or some notes that a system engineer wrote down",
    "start": "2951950",
    "end": "2957960"
  },
  {
    "text": "right it's it's completely again untenable this one is so intent about that I don't have a picture to show you how complicated would be it's kind of",
    "start": "2957960",
    "end": "2964140"
  },
  {
    "text": "hard to even visualize once we've done that we made it right so our change has",
    "start": "2964140",
    "end": "2972630"
  },
  {
    "text": "finally flown through it's going on this long journey across the world it's gone through the gauntlet the process has",
    "start": "2972630",
    "end": "2979200"
  },
  {
    "text": "deemed it worthy and it's now in production and life is good right holy code change unfortunately not right the",
    "start": "2979200",
    "end": "2986700"
  },
  {
    "text": "job is never done for the process what we know is that many changes once they make an in production can look good for",
    "start": "2986700",
    "end": "2992820"
  },
  {
    "text": "a very long time and then turn bad quickly right there can be edge cases or",
    "start": "2992820",
    "end": "2997830"
  },
  {
    "text": "call patterns that we couldn't possibly have tested for that that manifest themselves in ugly ways there",
    "start": "2997830",
    "end": "3005220"
  },
  {
    "text": "can be new best practices or discovered bad configurations that we want to drive out of our software change process and",
    "start": "3005220",
    "end": "3011700"
  },
  {
    "text": "so even for production services they are continuously monitored and audited this",
    "start": "3011700",
    "end": "3017760"
  },
  {
    "text": "is a tool that we use called policy engine it's literally just a list of known bad configurations and risks that",
    "start": "3017760",
    "end": "3024480"
  },
  {
    "text": "we find in our production environments and top to bottom you know critical",
    "start": "3024480",
    "end": "3029700"
  },
  {
    "text": "risks that you need to go fix absolutely right now all the way down to sort of informational risks and we track changes",
    "start": "3029700",
    "end": "3035820"
  },
  {
    "text": "over time this is an incredibly valuable tool for a team because you can see is a problem getting better or worse how is",
    "start": "3035820",
    "end": "3041280"
  },
  {
    "text": "it changing over time are we actually investing and paying down debt are we just kind of living with the risk forever and ever it also lets us focus",
    "start": "3041280",
    "end": "3048660"
  },
  {
    "text": "on what's important for a company of Amazon size we really can't have every single team trying to decide what",
    "start": "3048660",
    "end": "3054510"
  },
  {
    "text": "matters most instead we ask people to to use policy engine to kind of help them",
    "start": "3054510",
    "end": "3059550"
  },
  {
    "text": "make those decisions we also continuously test against production so a massive amount of code calls to our",
    "start": "3059550",
    "end": "3068130"
  },
  {
    "text": "production endpoints are from our own canari tests right so we are constantly multiple times every second or every",
    "start": "3068130",
    "end": "3074940"
  },
  {
    "text": "minute calling our production web services with known scenarios and seeing that we get back to the correct results",
    "start": "3074940",
    "end": "3080940"
  },
  {
    "text": "we absolutely want to catch problems before customers do and the only way we can really do that is continuously test",
    "start": "3080940",
    "end": "3086520"
  },
  {
    "text": "against production all the time okay I think we're just about done to kind of",
    "start": "3086520",
    "end": "3093150"
  },
  {
    "text": "wrap it up and hopefully bring it back to your own processes Amazon standardizes a ton of the software",
    "start": "3093150",
    "end": "3099900"
  },
  {
    "text": "development process by a common platform so as I said before we invest in common tooling and we make that available to",
    "start": "3099900",
    "end": "3106619"
  },
  {
    "text": "you we use that tooling to drive to enforce our culture and we automate",
    "start": "3106619",
    "end": "3113040"
  },
  {
    "text": "everything through that tooling we encourage an open marketplace so we we tell people to start with the baseline",
    "start": "3113040",
    "end": "3118109"
  },
  {
    "text": "tooling and then to innovate on top of it and then we look for opportunities to fund winners in the marketplace we",
    "start": "3118109",
    "end": "3124290"
  },
  {
    "text": "immediately pay those winners back by making their tools and options broadly available Amazon shipped so much because",
    "start": "3124290",
    "end": "3132839"
  },
  {
    "text": "we continuously ship we're big fans of pipelining software through the front and pushing out change",
    "start": "3132839",
    "end": "3138329"
  },
  {
    "text": "as quickly as we possibly can we don't go crazy fast we actually move pretty cautiously but we're constantly making",
    "start": "3138329",
    "end": "3143940"
  },
  {
    "text": "changes we believe in a rapid tight iteration cycle and as I said before",
    "start": "3143940",
    "end": "3149009"
  },
  {
    "text": "Amazon's doubling down on our public tooling many of the tools and services available to customers are the same",
    "start": "3149009",
    "end": "3155460"
  },
  {
    "text": "things we use to release our own critical Tier one services and so if you're if you want to steal the Unicorn",
    "start": "3155460",
    "end": "3161910"
  },
  {
    "text": "so to speak steel our processes ok I think I just finished on an hour so",
    "start": "3161910",
    "end": "3168299"
  },
  {
    "text": "that's pretty good thank you for your time everyone appreciate you coming out thank you",
    "start": "3168299",
    "end": "3176000"
  }
]