[
  {
    "text": "[Music]",
    "start": "200",
    "end": "2080"
  },
  {
    "text": "batch processing can be time consuming",
    "start": "2080",
    "end": "4240"
  },
  {
    "text": "and challenging when you're trying to",
    "start": "4240",
    "end": "5920"
  },
  {
    "text": "manage",
    "start": "5920",
    "end": "6399"
  },
  {
    "text": "job scheduling and provision the optimal",
    "start": "6399",
    "end": "8559"
  },
  {
    "text": "compute capacity to process your jobs",
    "start": "8559",
    "end": "11440"
  },
  {
    "text": "not to mention costly if you over",
    "start": "11440",
    "end": "13599"
  },
  {
    "text": "provision your compute environment",
    "start": "13599",
    "end": "15679"
  },
  {
    "text": "aws batch takes away these difficulties",
    "start": "15679",
    "end": "18640"
  },
  {
    "text": "by handling your job's life cycles in",
    "start": "18640",
    "end": "20880"
  },
  {
    "text": "compute resource provisioning",
    "start": "20880",
    "end": "23039"
  },
  {
    "text": "all you need to do is specify the basic",
    "start": "23039",
    "end": "25199"
  },
  {
    "text": "resource parameters",
    "start": "25199",
    "end": "26400"
  },
  {
    "text": "such as gpu cpu and memory requirements",
    "start": "26400",
    "end": "29760"
  },
  {
    "text": "and",
    "start": "29760",
    "end": "30080"
  },
  {
    "text": "aws batch does the rest",
    "start": "30080",
    "end": "33120"
  },
  {
    "text": "aws batch with fargate resources allows",
    "start": "33120",
    "end": "36399"
  },
  {
    "text": "you to have a completely",
    "start": "36399",
    "end": "37680"
  },
  {
    "text": "serverless architecture for your batch",
    "start": "37680",
    "end": "39680"
  },
  {
    "text": "jobs",
    "start": "39680",
    "end": "40719"
  },
  {
    "text": "with fargate every job receives the",
    "start": "40719",
    "end": "42800"
  },
  {
    "text": "exact amount of cpu",
    "start": "42800",
    "end": "44320"
  },
  {
    "text": "and memory that it requests for",
    "start": "44320",
    "end": "46640"
  },
  {
    "text": "additional control and scale",
    "start": "46640",
    "end": "48320"
  },
  {
    "text": "you can also use ec2 or ec2 spot",
    "start": "48320",
    "end": "51520"
  },
  {
    "text": "instances",
    "start": "51520",
    "end": "52559"
  },
  {
    "text": "which batch provisions and manages for",
    "start": "52559",
    "end": "54800"
  },
  {
    "text": "you",
    "start": "54800",
    "end": "55920"
  },
  {
    "text": "whether using ec2 or fargate you can",
    "start": "55920",
    "end": "58559"
  },
  {
    "text": "significantly lower the cost of your",
    "start": "58559",
    "end": "60320"
  },
  {
    "text": "batch processing workflow",
    "start": "60320",
    "end": "62239"
  },
  {
    "text": "allowing for high priority compute",
    "start": "62239",
    "end": "64000"
  },
  {
    "text": "cycles while also economizing on lower",
    "start": "64000",
    "end": "66799"
  },
  {
    "text": "priority operations",
    "start": "66799",
    "end": "69200"
  },
  {
    "text": "whether your workload is a deep learning",
    "start": "69200",
    "end": "71280"
  },
  {
    "text": "network a massively parallel etl job",
    "start": "71280",
    "end": "74400"
  },
  {
    "text": "or a tightly coupled hpc application aws",
    "start": "74400",
    "end": "78240"
  },
  {
    "text": "batch helps you plan schedule and",
    "start": "78240",
    "end": "80640"
  },
  {
    "text": "execute across the full range of aws",
    "start": "80640",
    "end": "83360"
  },
  {
    "text": "compute services and features",
    "start": "83360",
    "end": "86479"
  },
  {
    "text": "save time and money by having aws batch",
    "start": "86479",
    "end": "89360"
  },
  {
    "text": "manage your job life cycles and compute",
    "start": "89360",
    "end": "91520"
  },
  {
    "text": "environments",
    "start": "91520",
    "end": "94159"
  },
  {
    "text": "today",
    "start": "96280",
    "end": "99280"
  }
]