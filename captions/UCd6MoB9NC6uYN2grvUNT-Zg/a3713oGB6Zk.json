[
  {
    "start": "0",
    "end": "56000"
  },
  {
    "text": "all right good morning and welcome my name is Siva raghupathy I lead the Big",
    "start": "0",
    "end": "5220"
  },
  {
    "text": "Data solutions architecture team for America's that comprises of database analytics and AI services welcome to my",
    "start": "5220",
    "end": "11969"
  },
  {
    "text": "session there's also a repeat session a little bit later today if some of your friends are not able to get in it's in a",
    "start": "11969",
    "end": "17220"
  },
  {
    "text": "bigger room below so just a little bit of background about myself I've been with Amazon Web Services for the last",
    "start": "17220",
    "end": "23640"
  },
  {
    "text": "eight and a half years for the first two and a half years I helped build a couple of services Amazon DynamoDB which is a",
    "start": "23640",
    "end": "28800"
  },
  {
    "text": "no sequel database service and later on Amazon RDS which is a relational database service for the last six years",
    "start": "28800",
    "end": "34710"
  },
  {
    "text": "I've been working with customers around the world including amazon.com and helping them architect big data",
    "start": "34710",
    "end": "39899"
  },
  {
    "text": "solutions on AWS so this presentation is a culmination of my experiences so to",
    "start": "39899",
    "end": "45480"
  },
  {
    "text": "say some some interesting mind map pictures along the way you may love it or hate it but it's very colorful so",
    "start": "45480",
    "end": "52489"
  },
  {
    "text": "welcome to this session let's get started now in terms of what to expect",
    "start": "52489",
    "end": "57510"
  },
  {
    "start": "56000",
    "end": "56000"
  },
  {
    "text": "I'm going to go through some of the big data challenges customers are facing some of the architectural principles",
    "start": "57510",
    "end": "63500"
  },
  {
    "text": "that I came up with six architectural principles that always have governed my you know decisions and help guide",
    "start": "63500",
    "end": "70439"
  },
  {
    "text": "customers I think this probably the most crucial part of the presentation I think if you take away those six points chances are you're building a great",
    "start": "70439",
    "end": "77159"
  },
  {
    "text": "application big data application so I'm going to actually simplify the big data",
    "start": "77159",
    "end": "82320"
  },
  {
    "text": "processing by breaking that into multiple stages collect store process and consume and in each stage we're",
    "start": "82320",
    "end": "89310"
  },
  {
    "text": "going to go through and pick up what options I'm gonna outline some of the services that are there and then give",
    "start": "89310",
    "end": "94500"
  },
  {
    "text": "you some parameters such as to how to pick up the right right service or the tool in each stage and and then I'll and",
    "start": "94500",
    "end": "102600"
  },
  {
    "text": "one of the things is as a person building services I have a unique exposure to how we build services at AWS",
    "start": "102600",
    "end": "109740"
  },
  {
    "text": "so I'm gonna address some of the why questions in the presentations I feel like as a decision maker whether you're",
    "start": "109740",
    "end": "115229"
  },
  {
    "text": "an architect or a business person making a decision to understand why you know",
    "start": "115229",
    "end": "120899"
  },
  {
    "text": "kind of gives you the power the rest of it flows through you know how naturally follows from why etc so I'm going to",
    "start": "120899",
    "end": "126000"
  },
  {
    "text": "address some of those and towards the end I'm going to give you three architectural patterns and design",
    "start": "126000",
    "end": "133110"
  },
  {
    "text": "patterns if you and a reference architecture a pretty colorful reference architecture as you would see so one thing I'm not going to",
    "start": "133110",
    "end": "140880"
  },
  {
    "text": "have in this presentation is a lot of demos I'm going to use the entire hour most likely and I'm going to hang out here and I can have lunch with you if",
    "start": "140880",
    "end": "147750"
  },
  {
    "text": "you have time after and I can you know feel free to you know raise any questions chances are I have a lot of",
    "start": "147750",
    "end": "154320"
  },
  {
    "text": "content I'm gonna run right into the end of the hour so I'm happy to take on any number of questions that you have this",
    "start": "154320",
    "end": "160290"
  },
  {
    "text": "afternoon I'm also not going to have any code I feel like you should get your architecture right before you write code",
    "start": "160290",
    "end": "166220"
  },
  {
    "text": "so this is an architecture session which means I'm not going to have any demos Ben is doing a talk right after this",
    "start": "166220",
    "end": "173160"
  },
  {
    "text": "he's going to show you a cool demo it is serverless big data you know presentations so I think I'm",
    "start": "173160",
    "end": "181200"
  },
  {
    "text": "gonna focus on the architecture here and now let's get started with that my hope",
    "start": "181200",
    "end": "186630"
  },
  {
    "text": "is to give you a compass I was thinking about you know what are the two things that I can give you as takeaways I felt",
    "start": "186630",
    "end": "193230"
  },
  {
    "text": "like okay I'm going to give you a compass as to how to navigate the space and I'm giving you going to give you a",
    "start": "193230",
    "end": "198390"
  },
  {
    "text": "few maps you know those are design patterns and a reference architecture I'm gonna call the maps so those are the",
    "start": "198390",
    "end": "204570"
  },
  {
    "text": "two takeaways you know that I hope to you know come out you know through this person that that'll come out through",
    "start": "204570",
    "end": "209610"
  },
  {
    "text": "this presentation so so the volume velocity and variety of big data is",
    "start": "209610",
    "end": "214890"
  },
  {
    "start": "212000",
    "end": "212000"
  },
  {
    "text": "ever-increasing you know about ten years ago somebody building an application that does you know iron 50 terabytes of",
    "start": "214890",
    "end": "221070"
  },
  {
    "text": "data in just per day or about 150,000 or 200,000 requests per second is pretty",
    "start": "221070",
    "end": "226230"
  },
  {
    "text": "rare but nowadays customers are routinely building these applications oftentimes you know with one or two",
    "start": "226230",
    "end": "232079"
  },
  {
    "text": "developers or a span of a few days or weeks if you use the right manage services you can easily accomplish that",
    "start": "232079",
    "end": "238799"
  },
  {
    "text": "in addition to you know file data or text if you will the video and audio are",
    "start": "238799",
    "end": "246600"
  },
  {
    "text": "becoming first-class interfaces you know we all start we are we are all started to talk to our phones and you know echo",
    "start": "246600",
    "end": "252269"
  },
  {
    "text": "devices etc so your big data applications will not only be data or text driven would also potentially be",
    "start": "252269",
    "end": "259109"
  },
  {
    "text": "wise driven and conversation driven you know how do you leverage the right services to be able to actually build",
    "start": "259109",
    "end": "264300"
  },
  {
    "text": "those things into into your in get a pipeline is something that will address and then in terms of the",
    "start": "264300",
    "end": "272160"
  },
  {
    "start": "270000",
    "end": "270000"
  },
  {
    "text": "evolution big data systems are rolling from batch processing systems so you",
    "start": "272160",
    "end": "279300"
  },
  {
    "text": "know typically you ran your hive batch application or your data warehouse batch application you ran a report every week",
    "start": "279300",
    "end": "285810"
  },
  {
    "text": "or every month you know from then on you know that was there used to be the case many years ago ten or fifteen years ago",
    "start": "285810",
    "end": "291480"
  },
  {
    "text": "and then this mode onto stream processing rather than if you are doing click streams you know rather than",
    "start": "291480",
    "end": "296790"
  },
  {
    "text": "writing the entire click stream in a file and then copying it to HDFS or s3 and doing processing you may want to",
    "start": "296790",
    "end": "302250"
  },
  {
    "text": "actually put that data in Kinesis or Kafka and do real-time stream processing on top of that so that's you know so",
    "start": "302250",
    "end": "310230"
  },
  {
    "text": "therefore you can have answers really fast in addition to these two you know we're adding actually",
    "start": "310230",
    "end": "315390"
  },
  {
    "text": "intelligence into these applications it feels like putting a brain you know on top of the little Lego my son created",
    "start": "315390",
    "end": "320520"
  },
  {
    "text": "for me that I took a picture of a few years ago I passionately used that during this talk so it almost seems like",
    "start": "320520",
    "end": "326880"
  },
  {
    "text": "we need to take our big data pipelines and then prediction enable them in other words you need to be able to do batch",
    "start": "326880",
    "end": "333240"
  },
  {
    "text": "predictions and real-time predictions on top of your fast-moving data or slow-moving data and you know for the",
    "start": "333240",
    "end": "340500"
  },
  {
    "start": "339000",
    "end": "339000"
  },
  {
    "text": "last 8 and 1/2 years I've seen AWS database services your wall from virtual machines to managed services to server",
    "start": "340500",
    "end": "348510"
  },
  {
    "text": "less you know what that means to me is you know in the case of the virtual world you pretty much created an ec2",
    "start": "348510",
    "end": "353670"
  },
  {
    "text": "instance and you install your database software or a Big Data software and then",
    "start": "353670",
    "end": "358740"
  },
  {
    "text": "you stitched on EBS volumes onto that I'll use the local disks and you kind of installed your you know your software",
    "start": "358740",
    "end": "365400"
  },
  {
    "text": "and did that instead of that we created managed services such as RDS where you simply say I want a database by the way",
    "start": "365400",
    "end": "371910"
  },
  {
    "text": "I need so much a memory and so much of disk and then go ahead and create the database for me we have a control plane",
    "start": "371910",
    "end": "377160"
  },
  {
    "text": "under the covers that basically stitches the EBS you know volumes and instances and deser aids raid across you know",
    "start": "377160",
    "end": "383610"
  },
  {
    "text": "writes the data across multiple EBS volumes if need be and then assembles this for you and then then we're off to",
    "start": "383610",
    "end": "389460"
  },
  {
    "text": "server loss in my mind you know DynamoDB could be server less in the sense that even though there's servers behind that",
    "start": "389460",
    "end": "395520"
  },
  {
    "text": "are finally optimized for no sequel scenarios you simply specify what you want in the case of a DynamoDB",
    "start": "395520",
    "end": "401060"
  },
  {
    "text": "you say here is a table here is the primary key for the table by the way I'm going to do a million reads per second",
    "start": "401060",
    "end": "407150"
  },
  {
    "text": "and two million writes per second into this table once you specify that in terms of a simple API in a create table",
    "start": "407150",
    "end": "413330"
  },
  {
    "text": "API we under the covers basically provision partition the table across thousands of nodes and make that",
    "start": "413330",
    "end": "419840"
  },
  {
    "text": "available for you right and then know that gives you a lot of leverage right now that in another in in in instead of",
    "start": "419840",
    "end": "426590"
  },
  {
    "text": "worrying about servers and software you simply worry about your programming abstractions you need a table you have",
    "start": "426590",
    "end": "433160"
  },
  {
    "text": "these keys and you know you need to be able to stitch all of this into your big data pipeline so we'll basically I'll",
    "start": "433160",
    "end": "439460"
  },
  {
    "text": "whenever in each stage I highlight a service I'm going to call it server less or managed service etc so so it's pretty",
    "start": "439460",
    "end": "447260"
  },
  {
    "text": "important to be able to use all of them and we'll see how I mean this is I used",
    "start": "447260",
    "end": "453950"
  },
  {
    "text": "to call the zoo of technologies so this is one of the this is an opportunity and a challenge you know on the left side",
    "start": "453950",
    "end": "460270"
  },
  {
    "text": "there's a plethora of tools basically to do these functions one of the challenge is really picking which one to use on",
    "start": "460270",
    "end": "467780"
  },
  {
    "text": "the left side is the open source of the Hadoop ecosystems that churns out an amazing array of technologies and the",
    "start": "467780",
    "end": "473180"
  },
  {
    "text": "right side is AWS services any time I come to reinvent them you know will likely announce a whole bunch of new services and I'm not gonna be able to",
    "start": "473180",
    "end": "480289"
  },
  {
    "text": "put that in the slide next year probably so you know I splattered this slide with",
    "start": "480289",
    "end": "485539"
  },
  {
    "text": "a whole bunch of AI technologies such as you know MX net tensor flow you know Kiera's Theano etc the question to me",
    "start": "485539",
    "end": "492650"
  },
  {
    "text": "was I was writing this slide was how do I fit all of that into my big data architecture I'm gonna try to do that towards the you know course of the",
    "start": "492650",
    "end": "498620"
  },
  {
    "text": "presentation so no with that the big data challenges are like this you know",
    "start": "498620",
    "end": "506660"
  },
  {
    "start": "501000",
    "end": "501000"
  },
  {
    "text": "is there a reference architecture what tool should I use how and why is and",
    "start": "506660",
    "end": "512419"
  },
  {
    "text": "more importantly these days ai how do i I enable my big data application you",
    "start": "512419",
    "end": "518209"
  },
  {
    "text": "know he went to a big Gator conference maybe three years ago it was in a spark was the answer no matter what the question is",
    "start": "518209",
    "end": "523610"
  },
  {
    "text": "these days it's AI is the answer no matter what the question is so we're all struggling to figure out like how do you",
    "start": "523610",
    "end": "528800"
  },
  {
    "text": "enable AI to your applications right that's what I see across our customer base and if you're getting started",
    "start": "528800",
    "end": "534290"
  },
  {
    "text": "you're not you know join the party I think we can get going really fast so these are the",
    "start": "534290",
    "end": "540980"
  },
  {
    "start": "539000",
    "end": "539000"
  },
  {
    "text": "architectural principles I'm going to dive a little bit deeper into this the more and more I build big data",
    "start": "540980",
    "end": "546490"
  },
  {
    "text": "applications the modern mode it looks like a sort of a pipeline right and a couple of things repeats itself right",
    "start": "546490",
    "end": "552380"
  },
  {
    "text": "there so there's a flow where the data gets stored and processed and oftentimes people try to put that together the best",
    "start": "552380",
    "end": "559100"
  },
  {
    "text": "practice there is to actually decouples storage from compute what that allows you to do is if you're processing if you",
    "start": "559100",
    "end": "565850"
  },
  {
    "text": "get a new processing technology we didn't have spark ten years ago when spark spark came on took over processing",
    "start": "565850",
    "end": "572449"
  },
  {
    "text": "technology we basically replaced hive with spark if you nicely decouple your processing stage from storage you can",
    "start": "572449",
    "end": "579170"
  },
  {
    "text": "simply you know go ahead and replace a newer technology instead of the old and get going so it's pretty dark pretty",
    "start": "579170",
    "end": "584899"
  },
  {
    "text": "important to to basically decouple your pipeline so your pipeline should ideally",
    "start": "584899",
    "end": "590120"
  },
  {
    "text": "look like still processed or process sort of repeating itself and then using",
    "start": "590120",
    "end": "595220"
  },
  {
    "text": "the right tool for the job is paramount at AWS so whenever we build as a builder",
    "start": "595220",
    "end": "600380"
  },
  {
    "text": "when I was building dynamodb or RDS we typically tend to build these tools to do perform a few functions extremely",
    "start": "600380",
    "end": "607399"
  },
  {
    "text": "well anytime you don't use that you don't match your application",
    "start": "607399",
    "end": "612440"
  },
  {
    "text": "characteristics to that of the application what happens is say that the application doesn't work fairly well all your cost goes out of whack I'm gonna",
    "start": "612440",
    "end": "619160"
  },
  {
    "text": "actually illustrate the cost piece you know to an example a little bit later in the presentation so what are the",
    "start": "619160",
    "end": "625220"
  },
  {
    "text": "defining characteristics of various applications you know if you're doing stream storage subsystem what are the",
    "start": "625220",
    "end": "630319"
  },
  {
    "text": "defining characteristics that you should look for if you're looking for analytics applications what are the defining characteristics that you should look for",
    "start": "630319",
    "end": "636620"
  },
  {
    "text": "is something that I have characterized this so the key point there is you should be using the right tool for the",
    "start": "636620",
    "end": "641690"
  },
  {
    "text": "job one size does not fit all at least at AWS from what I have seen and leveraging managed services our",
    "start": "641690",
    "end": "649040"
  },
  {
    "text": "server list services is key you know instead of you getting an easy-to instance installing software managing it",
    "start": "649040",
    "end": "654649"
  },
  {
    "text": "and so on this feels pretty cool for the first six months or so after that it gets pretty darn boring if you when once",
    "start": "654649",
    "end": "660440"
  },
  {
    "text": "you have your application and ship versions simply using a managed service you know takes the muck off of your you",
    "start": "660440",
    "end": "666560"
  },
  {
    "text": "know engineers and lets us deal with that and then so you can actually quickly build your applications ship those",
    "start": "666560",
    "end": "671990"
  },
  {
    "text": "application and give value to your customers you also you know spend a lot you know along with it comes",
    "start": "671990",
    "end": "677780"
  },
  {
    "text": "availability scalability etc using log centric design patterns is key I think",
    "start": "677780",
    "end": "683720"
  },
  {
    "text": "this is one of the very important and interesting points here because if you're familiar with databases",
    "start": "683720",
    "end": "689050"
  },
  {
    "text": "transaction logs have been around for a long time in other words even if your database gets corrupted you can always",
    "start": "689050",
    "end": "695360"
  },
  {
    "text": "build the state of a database through a transactional log you basically take you know an empty database start applying",
    "start": "695360",
    "end": "701120"
  },
  {
    "text": "your transactional log and build the database the key point there is that if you are able to keep all the data that",
    "start": "701120",
    "end": "707120"
  },
  {
    "text": "comes into your company you know think of that as a transaction log and persist that as is without chopping off any of",
    "start": "707120",
    "end": "713180"
  },
  {
    "text": "those you know legs and hands then you may be able to construct the state of your data at any given point in time",
    "start": "713180",
    "end": "719120"
  },
  {
    "text": "this kick up this becomes even more important with AI and machine learning because in many cases we don't know what",
    "start": "719120",
    "end": "725780"
  },
  {
    "text": "questions the business folks would ask going forward and in order to predict",
    "start": "725780",
    "end": "731000"
  },
  {
    "text": "some future behavior you need to have enough data to be able to build the model and materialize the model if you",
    "start": "731000",
    "end": "736220"
  },
  {
    "text": "don't have the data then you have to start building the data set you know after you have the problem so you know",
    "start": "736220",
    "end": "742310"
  },
  {
    "text": "as AI architect or a data architect it's probably pretty important to actually keep the data now since things like",
    "start": "742310",
    "end": "748790"
  },
  {
    "text": "storage with s3 is so cheap you know three or two cents per gigabyte per month you can pretty nicely compress the",
    "start": "748790",
    "end": "754910"
  },
  {
    "text": "data and keep all the data without much cost then when you go to build that you know build a model you can pretty much",
    "start": "754910",
    "end": "760880"
  },
  {
    "text": "use that so I'm gonna reinforce eyes that and are building immutable keeping all the logs you know don't delete",
    "start": "760880",
    "end": "766370"
  },
  {
    "text": "anything would be another simple way of saying that you know if at all possible right and then milk utilizing the view",
    "start": "766370",
    "end": "772040"
  },
  {
    "text": "so you should think of your various services you know elasticsearch or data warehouse as simply a view on top of the",
    "start": "772040",
    "end": "779300"
  },
  {
    "text": "immutable data that you will put in your data lake if you will so that's the essential idea there you know things",
    "start": "779300",
    "end": "785060"
  },
  {
    "text": "like bitcoins etc work off of a general ledger and it's it's a fancy word for a",
    "start": "785060",
    "end": "790220"
  },
  {
    "text": "log a big log that has all the changes that goes forward right you know general Ledger's have been around in accounting",
    "start": "790220",
    "end": "796220"
  },
  {
    "text": "for a long time transaction logs I've been in databases for a long time this is the same idea that repeats itself",
    "start": "796220",
    "end": "802699"
  },
  {
    "text": "being cost conscious often you're gonna make the right decision at AWS contrary to you know expensive things should be",
    "start": "802699",
    "end": "809089"
  },
  {
    "text": "more cooler more better here the cheapest thing is likely the best service to use if you have two options",
    "start": "809089",
    "end": "814790"
  },
  {
    "text": "you know pick a RB service chances are the cheaper service is going to be the right fit because we have",
    "start": "814790",
    "end": "820429"
  },
  {
    "text": "priced that to do that function extremely cheap and extremely well that is contrary to the you know general",
    "start": "820429",
    "end": "825739"
  },
  {
    "text": "thinking that expensive things are better and last but not the least I added the bullet for this year",
    "start": "825739",
    "end": "831799"
  },
  {
    "text": "always thinking from the know n first you will at some point a enable your",
    "start": "831799",
    "end": "837649"
  },
  {
    "text": "system you might as well start thinking now you know if I were to a I enable this big data pipeline how what should I",
    "start": "837649",
    "end": "843860"
  },
  {
    "text": "collect or how should it look like how would it look like right so that is something that is very important I think",
    "start": "843860",
    "end": "849920"
  },
  {
    "text": "this is probably the most important slide and you know if you practice these concepts chances are you're gonna get",
    "start": "849920",
    "end": "855679"
  },
  {
    "text": "your design right so I just want to re-emphasize that so now with that in place let's go ahead and simplify big",
    "start": "855679",
    "end": "861799"
  },
  {
    "start": "858000",
    "end": "858000"
  },
  {
    "text": "data processing so the more and more I",
    "start": "861799",
    "end": "866869"
  },
  {
    "text": "think a big data processing I was a mechanical engineer before in life so big pipes you know it's pretty cool for",
    "start": "866869",
    "end": "872449"
  },
  {
    "text": "me data goes in on one side answers come in another side that's the essence of any big data processing not many any",
    "start": "872449",
    "end": "879319"
  },
  {
    "text": "more complicated than that and in in between there's potentially multiple stages they look like something like",
    "start": "879319",
    "end": "884540"
  },
  {
    "text": "this collect store process are analyzed and consume and typically what also happens is the store process store",
    "start": "884540",
    "end": "890629"
  },
  {
    "text": "process repeats itself you know to shape the data in a form that the downstream application can consume pretty rapidly",
    "start": "890629",
    "end": "897230"
  },
  {
    "text": "so and what governs that is what I call as the pipeline latency which is how",
    "start": "897230",
    "end": "903049"
  },
  {
    "text": "long you have to answer you know you may have to answer you know in milliseconds then what goes in between is gonna be",
    "start": "903049",
    "end": "908629"
  },
  {
    "text": "dictated by what your time to answer you may have week to answer then you could basically use a few other components or",
    "start": "908629",
    "end": "915009"
  },
  {
    "text": "throughput right which is the amount of data you know gigabytes or megabytes or terabytes or petabytes point per second",
    "start": "915009",
    "end": "920959"
  },
  {
    "text": "right are processed per second and then the cost those are very simple principles right and in a way if you",
    "start": "920959",
    "end": "927709"
  },
  {
    "text": "take away all the other stuff fancy stuff and the essence that's what you're trying to do you're trying to ask the question mr. customer you know how fast",
    "start": "927709",
    "end": "935629"
  },
  {
    "text": "do you want the data to be materialized what is the view you know are you gonna look at this in the form of you know what is the",
    "start": "935629",
    "end": "942000"
  },
  {
    "text": "pretty picture or on a report that you want so let me shape the data in the form that you'll get the report rather",
    "start": "942000",
    "end": "947970"
  },
  {
    "text": "rapidly and then by the way what is going to be the bill for this application you know how much are you willing to pay usually tracking your",
    "start": "947970",
    "end": "954389"
  },
  {
    "text": "design across those parameters you know have always helped me you know guide customers to use the right solution",
    "start": "954389",
    "end": "961339"
  },
  {
    "text": "along the way this is like the concept map I'm gonna introduce this idea of the temperature of your data anytime I'm",
    "start": "961339",
    "end": "967079"
  },
  {
    "start": "966000",
    "end": "966000"
  },
  {
    "text": "building a system I often think about am I dealing with hot data warm data or cold data right typically hot data is",
    "start": "967079",
    "end": "974790"
  },
  {
    "text": "smaller pieces of data you can think of that data in like cash or your RAM",
    "start": "974790",
    "end": "979860"
  },
  {
    "text": "random access memory it to be hot data typically tends to be fairly small item",
    "start": "979860",
    "end": "984899"
  },
  {
    "text": "sizes tend to be small you know you're basically doing a very frequent access of the data pretty much you know the the",
    "start": "984899",
    "end": "991470"
  },
  {
    "text": "number of AI ops per gigabyte if you want to technically think about that it's pretty intense heat right I ops per",
    "start": "991470",
    "end": "997199"
  },
  {
    "text": "gigabyte towards the colder side what happens is the data tends to be pretty large you know big files in some cases",
    "start": "997199",
    "end": "1004100"
  },
  {
    "text": "you don't care whether you want to access this in seconds a millisecond if the data shows up in a few hours it's fine you know for example if you put",
    "start": "1004100",
    "end": "1009980"
  },
  {
    "text": "data set in place here you know the lowest tiered a glacier you know data comes back and three and a half or four",
    "start": "1009980",
    "end": "1015680"
  },
  {
    "text": "hours it's fine you know because you're just simply pulling out some data said that was archived and then you can wait for that",
    "start": "1015680",
    "end": "1022160"
  },
  {
    "text": "long so having a sense of whether you're dealing with hard data warm data and cold data often allows you to pick the",
    "start": "1022160",
    "end": "1027740"
  },
  {
    "text": "right tools I just want to introduce the concept here now let's go into the collection stage",
    "start": "1027740",
    "end": "1034010"
  },
  {
    "start": "1034000",
    "end": "1034000"
  },
  {
    "text": "with that in the collection stages you know you're going to have applications that are using odbc jdbc interfaces",
    "start": "1034010",
    "end": "1039918"
  },
  {
    "text": "writing to databases or you may have a data center that's connected using",
    "start": "1039919",
    "end": "1045199"
  },
  {
    "text": "Direct Connect I'm going to use a lot of small icons the slides would be available for you both in terms of",
    "start": "1045199",
    "end": "1050720"
  },
  {
    "text": "SlideShare as well as YouTube so you can look at it don't you know don't squint your eyes I walked around the room yesterday it was pretty pretty small for",
    "start": "1050720",
    "end": "1057620"
  },
  {
    "text": "folks in the last row to look at this but don't worry about this they'll get the slides the key concepts are in bold",
    "start": "1057620",
    "end": "1063350"
  },
  {
    "text": "letters so you should be able to follow that you know data structures and database records typically you know I'd",
    "start": "1063350",
    "end": "1069650"
  },
  {
    "text": "call this sectional data and file data right you're basically you have a let's say if you have a click stream analytics to",
    "start": "1069650",
    "end": "1076490"
  },
  {
    "text": "choose the system you in the application tier you're writing files and then you're actually moving use Apache flume",
    "start": "1076490",
    "end": "1082700"
  },
  {
    "text": "or something else to actually move the files onto HDFS or s3 you are moving data the file data in some cases this",
    "start": "1082700",
    "end": "1088700"
  },
  {
    "text": "could be video clips or audio recordings as well our streaming data streaming data is typically generated by devices",
    "start": "1088700",
    "end": "1095270"
  },
  {
    "text": "and sensors it is essentially time series data in a strum instrument is measuring rapidly you know temperature",
    "start": "1095270",
    "end": "1101390"
  },
  {
    "text": "or pressure or something else and then it's actually sending that stream on to the IOT platform which is actually",
    "start": "1101390",
    "end": "1107030"
  },
  {
    "text": "eventually sending it to AWS or actually you know sending it if they're connected devices they're sending it as is you",
    "start": "1107030",
    "end": "1113510"
  },
  {
    "text": "know basically these are the three types of data you'll be dealing with now what is the storage type that you should use",
    "start": "1113510",
    "end": "1119120"
  },
  {
    "text": "for these tea types of data typically transactional data goes into in memory databases sequel or no sequel file data",
    "start": "1119120",
    "end": "1126500"
  },
  {
    "text": "goes into file or object stores such as HDFS or s3 and events go into some kind",
    "start": "1126500",
    "end": "1131750"
  },
  {
    "text": "of a stream storage and I'm gonna focus on zoom in on stream storage right now",
    "start": "1131750",
    "end": "1138309"
  },
  {
    "text": "so typical stream storage subsystem that are prevalently used by our customers are apache Kafka it's a high throughput",
    "start": "1138460",
    "end": "1145850"
  },
  {
    "text": "distributed streaming platform for for managing streaming data it has all kinds",
    "start": "1145850",
    "end": "1151100"
  },
  {
    "text": "of control will actually you know cut various attributes of kafka compared to others amazon Kinesis streams is a fully",
    "start": "1151100",
    "end": "1157010"
  },
  {
    "text": "managed service for storing streaming data on AWS we also have introduced amazon Kinesis firehose which is built",
    "start": "1157010",
    "end": "1164539"
  },
  {
    "text": "on top of amazon Kinesis which not only collects the data but it actually transports the data to an end data store",
    "start": "1164539",
    "end": "1170179"
  },
  {
    "text": "you know for example if you write data to streaming data to amazon kinases Fargo's it will actually transport the",
    "start": "1170179",
    "end": "1175789"
  },
  {
    "text": "data to s3 or to redshift or to elasticsearch which is pre built you",
    "start": "1175789",
    "end": "1182059"
  },
  {
    "text": "specify the destination you specify how frequently or how big a buffer that needs to get before you push the data",
    "start": "1182059",
    "end": "1187520"
  },
  {
    "text": "there it automatically does that for you and then let's look at why stream",
    "start": "1187520",
    "end": "1192980"
  },
  {
    "start": "1192000",
    "end": "1192000"
  },
  {
    "text": "storage you know basically decouples producers from the consumers it provides a persistent buffer it color allows you",
    "start": "1192980",
    "end": "1199580"
  },
  {
    "text": "to collect multiple streams of the data in other words multiple producers are given you know that red green and violet",
    "start": "1199580",
    "end": "1205670"
  },
  {
    "text": "producers etc on the left side and then they're writing to a stream it could be",
    "start": "1205670",
    "end": "1211370"
  },
  {
    "text": "either a Kinesis stream or a Kafka stream I've also highlighted dynamodb streams here which you could potentially",
    "start": "1211370",
    "end": "1217130"
  },
  {
    "text": "use in for some cases but it's a minority case you know we'll have a discussion about that if you want",
    "start": "1217130",
    "end": "1223130"
  },
  {
    "text": "offline essentially what happens is when you write when the producers write to it the stream nicely decouples this from a",
    "start": "1223130",
    "end": "1230390"
  },
  {
    "text": "consuming application therefore the consuming application and the producers can go at their own speed it also allows",
    "start": "1230390",
    "end": "1237200"
  },
  {
    "text": "you to preserve client ordering which is a defining characteristic of a stream so in other words if the red producer is",
    "start": "1237200",
    "end": "1243920"
  },
  {
    "text": "going to say I am red in other words key equals red and it's going to write packets 1 2 & 3 what the what the",
    "start": "1243920",
    "end": "1250790"
  },
  {
    "text": "Kinesis are the Kafka you know partition of the stream will ensure that all of those red packets will always go to the",
    "start": "1250790",
    "end": "1256730"
  },
  {
    "text": "you know shard one or the partition 1 therefore a downstream application you",
    "start": "1256730",
    "end": "1261830"
  },
  {
    "text": "know like a consumer 1 and consumer 2 that are parallely consuming that you can actually assume that the red packets",
    "start": "1261830",
    "end": "1269510"
  },
  {
    "text": "are always going to be in us in a partition 1 on the stream 1 therefore it can do complications - just give me the",
    "start": "1269510",
    "end": "1275120"
  },
  {
    "text": "maximun average etc there's one downside of that if you say key equals 1 if your",
    "start": "1275120",
    "end": "1280430"
  },
  {
    "text": "put rate in producer 1 is going to be more than what a what what a single short can handle you will get into some",
    "start": "1280430",
    "end": "1286220"
  },
  {
    "text": "scenarios if you if you get that then the only option there is to not actually do that and then run a downstream",
    "start": "1286220",
    "end": "1291860"
  },
  {
    "text": "application to do the to do the sorting if you will right so that's the essential character we go so you know",
    "start": "1291860",
    "end": "1297890"
  },
  {
    "text": "this is also called this the fancy name for this is streaming Map Reduce right which in other words you write it the",
    "start": "1297890",
    "end": "1303380"
  },
  {
    "text": "MapReduce is already being done by the underlying framework the moment you specify key equals red or key equals",
    "start": "1303380",
    "end": "1309050"
  },
  {
    "text": "blue etc now oftentimes I get asked by customers like what about this Amazon",
    "start": "1309050",
    "end": "1314330"
  },
  {
    "start": "1310000",
    "end": "1310000"
  },
  {
    "text": "sqs should i what should i use this for well it also does decoupling persistent proffers and it also allows you to do",
    "start": "1314330",
    "end": "1320870"
  },
  {
    "text": "you know collect multiple streams but it doesn't have there's no client ordering at least in the standard queue there's",
    "start": "1320870",
    "end": "1327140"
  },
  {
    "text": "no streaming MapReduce in other words there's no notion of you know separating those packets out into various",
    "start": "1327140",
    "end": "1332210"
  },
  {
    "text": "partitions pertaining to a single producer and there's no parallel consumption in other words if one client consumes that payload there's a",
    "start": "1332210",
    "end": "1339190"
  },
  {
    "text": "thing called visibility timeout then that payload is not available for the rest of the folks to consume so as long as you know you you don't care for those",
    "start": "1339190",
    "end": "1346510"
  },
  {
    "text": "using that is okay but if you care for those functionality of multiple producers consuming that then this is",
    "start": "1346510",
    "end": "1352000"
  },
  {
    "text": "not the right use case we also introduced you know FIFO queues recently the FIFO queues I'll compare and",
    "start": "1352000",
    "end": "1360070"
  },
  {
    "text": "contrast that in a moment if you folk use allow you know preserving client ordering and there's also a workaround",
    "start": "1360070",
    "end": "1366190"
  },
  {
    "text": "some customers of use in other words you know you can write to a SNS topic and then you can have either a lambda",
    "start": "1366190",
    "end": "1372970"
  },
  {
    "text": "function or the queue subscribe to that those are the edge cases right so you know just in case you're actually doing",
    "start": "1372970",
    "end": "1378670"
  },
  {
    "text": "a design of your system and you want to actually consider that I just wanted to actually put that in the slide chances are using Kinesis or Kafka is",
    "start": "1378670",
    "end": "1385600"
  },
  {
    "text": "going to be ideal for the reasons I will point out in a moment early I wanted to include that there just as a reference",
    "start": "1385600",
    "end": "1392010"
  },
  {
    "text": "here is the various attributes now this is a very busy slide it's impossible to",
    "start": "1392010",
    "end": "1397510"
  },
  {
    "text": "read this probably from here but I'm gonna step through this on the Left column you know I have given various",
    "start": "1397510",
    "end": "1404650"
  },
  {
    "text": "attributes such as is this a managed service you know is there guaranteed ordering is there delivery you know what",
    "start": "1404650",
    "end": "1410890"
  },
  {
    "text": "about deduping what kind of a delivery mechanism does it allow it is it at",
    "start": "1410890",
    "end": "1416050"
  },
  {
    "text": "least once processing if I write a packet will the packet be available to consumer at least once at most once or",
    "start": "1416050",
    "end": "1422350"
  },
  {
    "text": "exactly once what is the semantics there what is the retention period if you write it - you know SQS or kinases how long do these",
    "start": "1422350",
    "end": "1430420"
  },
  {
    "text": "systems maintain those packets if you will what is the availability characteristic of this you know scale",
    "start": "1430420",
    "end": "1435850"
  },
  {
    "text": "and throughput for example if I take Amazon Kinesis it's a fully managed service it guarantees ordering there's",
    "start": "1435850",
    "end": "1441430"
  },
  {
    "text": "only at least one semantics you know in the edge cases Canisius will have two rackets for the same put that you did in",
    "start": "1441430",
    "end": "1447700"
  },
  {
    "text": "other words if you're building a billing system if you don't want to double your customer you should be d duping those records using something like dynamo DB",
    "start": "1447700",
    "end": "1454450"
  },
  {
    "text": "if you want you know at most ones processing that is not automatically built into this",
    "start": "1454450",
    "end": "1459580"
  },
  {
    "text": "apparently in Kafka that is automatically built in if you use the right client if you use transactions etc",
    "start": "1459580",
    "end": "1465160"
  },
  {
    "text": "so if you compare and contrast anytime you go to customers they usually tell me",
    "start": "1465160",
    "end": "1470770"
  },
  {
    "text": "like don't give me a menu can you pick one for me because I'm having a headache so if you want me to pick one for you I",
    "start": "1470770",
    "end": "1476920"
  },
  {
    "text": "would pick actually Amazon Kinesis is the best place to start because it's a fully managed service and it's probably",
    "start": "1476920",
    "end": "1482830"
  },
  {
    "text": "the cheapest if you price that if you include admin in that but Kafka gives",
    "start": "1482830",
    "end": "1487900"
  },
  {
    "text": "you sort of infinite control as you can just see there it gives you at least ones processing exactly ones processing",
    "start": "1487900",
    "end": "1493180"
  },
  {
    "text": "or at most ones processing you know the retention period is configurable whereas in the case of Kinesis at 7 days if you",
    "start": "1493180",
    "end": "1499330"
  },
  {
    "text": "don't take the data out in 7 days it goes away and so on right so I think I",
    "start": "1499330",
    "end": "1504430"
  },
  {
    "text": "just this is the often customers go through this paradigm so I just wanted to document this in a slide that you can",
    "start": "1504430",
    "end": "1509440"
  },
  {
    "text": "basically you know look at this as a reference and if you compare this with the sqs you know if you if you take s",
    "start": "1509440",
    "end": "1516850"
  },
  {
    "text": "key was fee for cues you can only do 300 PPS into fee for queues that's the last time I look at it I'm not sure the team",
    "start": "1516850",
    "end": "1522670"
  },
  {
    "text": "updated those numbers we tend to increase these numbers or a period of time the last time I look at it it's about 3 RTP s if you're doing more than",
    "start": "1522670",
    "end": "1528760"
  },
  {
    "text": "300 TPS v4 queues may not be the solution for you so I just wanted to highlight that piece as well and instead",
    "start": "1528760",
    "end": "1535600"
  },
  {
    "text": "you should be thinking of using Kinesis or if you don't have guaranteed ordering you need you should use standard SQ us",
    "start": "1535600",
    "end": "1541620"
  },
  {
    "text": "at the bottom I have called this Hart horses that the bar so if you're dealing",
    "start": "1541620",
    "end": "1548020"
  },
  {
    "text": "with colder datasets typically you know putting it in sqs makes a lot of sense in general if you're dealing with streaming data you're dealing with hot",
    "start": "1548020",
    "end": "1553690"
  },
  {
    "text": "datasets in all of these services or it would nicely handle hot datasets file in",
    "start": "1553690",
    "end": "1559480"
  },
  {
    "text": "the object store what type of file store or the object store should use you know",
    "start": "1559480",
    "end": "1564880"
  },
  {
    "text": "s3 is for those of you who don't know is a managed object service for building you know basically we call this a",
    "start": "1564880",
    "end": "1570610"
  },
  {
    "text": "storage for the internet you can put any amount of data any number of files into",
    "start": "1570610",
    "end": "1575620"
  },
  {
    "text": "s3 and it is perhaps the best place to put your file data so I think the",
    "start": "1575620",
    "end": "1581770"
  },
  {
    "text": "biggest recommendation here is if you have file data you should absolutely put that in s3 before you consider something",
    "start": "1581770",
    "end": "1587050"
  },
  {
    "text": "else he needs to be a good reason why not to do that right that's the essence of this why it's natively supported by",
    "start": "1587050",
    "end": "1593230"
  },
  {
    "text": "pretty much every single you know big data framework you know I go to some of these big data conferences that you know",
    "start": "1593230",
    "end": "1599350"
  },
  {
    "text": "the person presenting we get a framework simply starts off saying assuming that the data is an f3",
    "start": "1599350",
    "end": "1604970"
  },
  {
    "text": "don't even tell you what s3 is so that's how popular and prevalent this is right so it natively supported by many",
    "start": "1604970",
    "end": "1611059"
  },
  {
    "text": "frameworks the other piece is it nicely allows you to decouple storage from computer what that means is that if you",
    "start": "1611059",
    "end": "1617659"
  },
  {
    "text": "put your data in HDFS you need to have these machines humming and running for your file system to be available whereas",
    "start": "1617659",
    "end": "1623450"
  },
  {
    "text": "in this case you don't have to do that you simply can shut down the you know do your processing write the results read",
    "start": "1623450",
    "end": "1629570"
  },
  {
    "text": "the data from s3 process the results process the data write the results back to s3 and simply shut down the cluster",
    "start": "1629570",
    "end": "1636110"
  },
  {
    "text": "so you can use things like spot instances you can also fine tune if you have a memory intensive workloads you",
    "start": "1636110",
    "end": "1642230"
  },
  {
    "text": "can use memory you know based instances you know for example ec2 has you know compute intense know you know data tot",
    "start": "1642230",
    "end": "1649970"
  },
  {
    "text": "easy to instances memory memory based ec2 instances you know and CPU optimize",
    "start": "1649970",
    "end": "1656210"
  },
  {
    "text": "DP ec2 instances so you can pretty much match your workload towards the characteristics you know after of the",
    "start": "1656210",
    "end": "1663409"
  },
  {
    "text": "instance and pick the right tool rather than worrying about actually this instance providing storage as well in",
    "start": "1663409",
    "end": "1669169"
  },
  {
    "text": "which case you have to pick instances with with the bigger disks local disks if you will and then so you know s3 is",
    "start": "1669169",
    "end": "1677270"
  },
  {
    "text": "also designed for 11 9s durability and and you need you don't need to pay for",
    "start": "1677270",
    "end": "1682490"
  },
  {
    "text": "data replication yes three keeps multiple copies or the data within the same region in fact you don't even know",
    "start": "1682490",
    "end": "1687710"
  },
  {
    "text": "about that and then it automatically whereas in the case of HDFS you know you pay for data replication if you want to",
    "start": "1687710",
    "end": "1693320"
  },
  {
    "text": "do a3 verification you want to have a big disks for that in the case that has three the price includes actually we",
    "start": "1693320",
    "end": "1699200"
  },
  {
    "text": "keeping multiple copies of the data and multiple data centers within the same region you do pay a price for replicating the data across regions but",
    "start": "1699200",
    "end": "1706880"
  },
  {
    "text": "not within the same region also it you can do server-side encryption you can",
    "start": "1706880",
    "end": "1712070"
  },
  {
    "text": "also see with KMS keys with keys managed by AWS or you know for example you can",
    "start": "1712070",
    "end": "1718730"
  },
  {
    "text": "also do in our ssl etc it's fairly low cost and often times the question asked",
    "start": "1718730",
    "end": "1725360"
  },
  {
    "text": "is what about HDFS when do I use this for more and more HDFS is used as",
    "start": "1725360",
    "end": "1730610"
  },
  {
    "text": "somewhat of an intermediate like a cache if you will for your hardest data sets you know you store the persistent data",
    "start": "1730610",
    "end": "1736250"
  },
  {
    "text": "and s3 you read a copy of that you do the processing you write an intermediate copy in HDFS and you go",
    "start": "1736250",
    "end": "1742789"
  },
  {
    "text": "ahead and in some cases that data is read multiple times so use that as essentially a cache but not necessarily",
    "start": "1742789",
    "end": "1748340"
  },
  {
    "text": "a persistent store you know yesterday also has various tiers s 3 SS 3 standard",
    "start": "1748340",
    "end": "1753650"
  },
  {
    "text": "s 3 standard in frequent access and Amazon plays here and then there's s3",
    "start": "1753650",
    "end": "1759650"
  },
  {
    "text": "analytics which is a service which allows you to basically runs analysis on your s3 bucket and tells you what",
    "start": "1759650",
    "end": "1765860"
  },
  {
    "text": "storage class to use forward what data sets so that is how you should think of",
    "start": "1765860",
    "end": "1771230"
  },
  {
    "text": "your tier data as you need ages you should actually be moving those you know data to glacier a few well from s3 if",
    "start": "1771230",
    "end": "1778309"
  },
  {
    "text": "you're not using the Sun if you are in very infrequently use this go ahead and put that in history infrequent access",
    "start": "1778309",
    "end": "1784179"
  },
  {
    "text": "now what about caches in databases right",
    "start": "1784179",
    "end": "1790360"
  },
  {
    "start": "1785000",
    "end": "1785000"
  },
  {
    "text": "amazing elastic cache is the managed service that uses mem that can support",
    "start": "1790360",
    "end": "1795529"
  },
  {
    "text": "mem cache other Eddie's and in engine under the covers we also introduced dynamo DB accelerator which is an",
    "start": "1795529",
    "end": "1801500"
  },
  {
    "text": "in-memory cache for data and DynamoDB so if you actually write a dynamodb application and point to to a Dax end",
    "start": "1801500",
    "end": "1807860"
  },
  {
    "text": "point then would it be accelerator in point you know when you do a write to it it does write through cache to Dynamo",
    "start": "1807860",
    "end": "1813649"
  },
  {
    "text": "when you do reads from it you don't need to need to even change the application you simply switch the endpoint to this",
    "start": "1813649",
    "end": "1818830"
  },
  {
    "text": "you know why am I talking about databases in a big data application chances are if you have velocity of the data you know high velocity millions of",
    "start": "1818830",
    "end": "1825500"
  },
  {
    "text": "writes per second you need to literally put that in dynamo DB probably the best tour for you to put that in terms of the",
    "start": "1825500",
    "end": "1832070"
  },
  {
    "text": "managed service available on AWS right in some cases let's say I was working with a customer in the advertising realm",
    "start": "1832070",
    "end": "1839029"
  },
  {
    "text": "they do serve ads in them for them Dax was very important because you know for",
    "start": "1839029",
    "end": "1844039"
  },
  {
    "text": "example for ad lookups and so on you know they put their persistent data you know user profiles is a big table if",
    "start": "1844039",
    "end": "1850309"
  },
  {
    "text": "you're in another pricing business they use a profile you know gets you access to millions of times per second it's a",
    "start": "1850309",
    "end": "1855620"
  },
  {
    "text": "fairly read intensive workloads having a cache in front of that actually you know saves you a lot of money so using",
    "start": "1855620",
    "end": "1861320"
  },
  {
    "text": "something like dynamo DB accelerator is pretty important in that scenario RDS which is a relational database",
    "start": "1861320",
    "end": "1866630"
  },
  {
    "text": "service it has multiple engines starting with Amazon Aurora you know my sequel post",
    "start": "1866630",
    "end": "1872330"
  },
  {
    "text": "etc including you know Oracle and sequel server so this is an anti-pattern if",
    "start": "1872330",
    "end": "1880789"
  },
  {
    "text": "you're building a big data application if you're using a database you should probably not do this you know it's",
    "start": "1880789",
    "end": "1886580"
  },
  {
    "text": "reason because if you're doing millions of writes per second you pretty much have to shard your data across multiple instances and sharding can be a pain and",
    "start": "1886580",
    "end": "1894500"
  },
  {
    "text": "also in the case of dynamo you can write a million writes per second and do ten reads per second and you can simply",
    "start": "1894500",
    "end": "1900860"
  },
  {
    "text": "specify that and we'll charge you for that in the case of the database you get both you know if you use supersize it for rights",
    "start": "1900860",
    "end": "1906500"
  },
  {
    "text": "you also get supersize automatically for reads you know you don't save any money by doing that right so but financially",
    "start": "1906500",
    "end": "1912559"
  },
  {
    "text": "as well as technically typically it's a bad choice instead what should you do right well your database tier should",
    "start": "1912559",
    "end": "1919010"
  },
  {
    "text": "look something like this in memory you know sequel no sequel search and graph for example when I put",
    "start": "1919010",
    "end": "1925820"
  },
  {
    "text": "a slide like this the immediate next question from customers is well how do you keep all these in these things in sync you know here's an idea you know",
    "start": "1925820",
    "end": "1932480"
  },
  {
    "text": "for example in this case it's an application doing no sequel to DynamoDB DynamoDB has update streams",
    "start": "1932480",
    "end": "1937970"
  },
  {
    "text": "I simply hooked up a lambda function that will actually look for all those changes and take those changes and apply",
    "start": "1937970",
    "end": "1943700"
  },
  {
    "text": "that in elasticsearch as well as elastic cash right so if you have a leaderboard for example if you're if you if there is",
    "start": "1943700",
    "end": "1949820"
  },
  {
    "text": "a gameplay involved in your application you're writing all the gameplay into a no sequel store and you are updating you",
    "start": "1949820",
    "end": "1956720"
  },
  {
    "text": "know you have an update stream in the case of dynamo to begin a pick that up and you populate it into your leaderboard and the leaderboard data",
    "start": "1956720",
    "end": "1961760"
  },
  {
    "text": "structure is automatically populated right so even though it's slightly eventually consistent this is a very scalable way of doing it in many",
    "start": "1961760",
    "end": "1968210"
  },
  {
    "text": "applications it's totally fine doing that there's very few use cases that you know may not fit in the scenario that's",
    "start": "1968210",
    "end": "1974090"
  },
  {
    "text": "a great idea you know that is the gate that is also a great example of a materialized view on top of an immutable",
    "start": "1974090",
    "end": "1980419"
  },
  {
    "text": "log here I'm also you know writing all the data at the lambda function there's",
    "start": "1980419",
    "end": "1986000"
  },
  {
    "text": "another lambda function that's simply taking all the data and persisting that and s3 that's the lower you know at the",
    "start": "1986000",
    "end": "1991460"
  },
  {
    "text": "very bottom that that's your immutable log so in other words you want to go back and find out you know what happened",
    "start": "1991460",
    "end": "1996919"
  },
  {
    "text": "in this gaming scenario I didn't persist all this data in the database all the data that came into your application is",
    "start": "1996919",
    "end": "2002200"
  },
  {
    "text": "persisted durably on s3 that allows you to do you know various things like buildings clubbing what happened in your",
    "start": "2002200",
    "end": "2008090"
  },
  {
    "text": "in your infrastructure etc a little bit later you know that's what I've indicated as cached views and search",
    "start": "2008090",
    "end": "2013700"
  },
  {
    "text": "view and an immutable Lord right those are the three things we went through so",
    "start": "2013700",
    "end": "2022029"
  },
  {
    "text": "which data store should I do it should I use you know typically there are four pieces there what governs the decision",
    "start": "2022029",
    "end": "2029509"
  },
  {
    "text": "is your data structure you know are you dealing with fixed at schema JSON key value you know what is your access",
    "start": "2029509",
    "end": "2034909"
  },
  {
    "text": "pattern you know storing one of the things that I've learned over years you know either building databases and big",
    "start": "2034909",
    "end": "2040340"
  },
  {
    "text": "data applications is that you eventually store data in the in the form you eventually access it you know that is",
    "start": "2040340",
    "end": "2046669"
  },
  {
    "text": "the essence of all kinds of query processing index building and so on right that is a very simple - it sounds",
    "start": "2046669",
    "end": "2052608"
  },
  {
    "text": "pretty simple but actually if you if you use that paradigm it's really really helpful especially at very high scale if",
    "start": "2052609",
    "end": "2058158"
  },
  {
    "text": "you don't store the data in the form you access it you don't have time to build your data structures often time",
    "start": "2058159",
    "end": "2063679"
  },
  {
    "text": "customers get into all kinds of trouble because they're materializing of you when the when the question comes whereas",
    "start": "2063679",
    "end": "2069020"
  },
  {
    "text": "you should have already built the queue built the built the answer in the form or store the data in the form that it",
    "start": "2069020",
    "end": "2075230"
  },
  {
    "text": "was prevalently access place out everywhere whether you pick you know hash keys and range keys and dynamodb or",
    "start": "2075230",
    "end": "2081020"
  },
  {
    "text": "a SART Keys and distribution keys in your data warehouse eventually the essence of all of this big data",
    "start": "2081020",
    "end": "2086480"
  },
  {
    "text": "processing is to store the data in the form that you will access it right and then having an idea of whether you're",
    "start": "2086480",
    "end": "2093050"
  },
  {
    "text": "dealing with hard data wom data cold data is right and the cost always helps you pick the right choice at least at AWS here is a simple example of data",
    "start": "2093050",
    "end": "2100490"
  },
  {
    "text": "structure you know if it's a fixed data scheme sequel or no sequel plays out fairly well if it's JSON no sequel or",
    "start": "2100490",
    "end": "2107300"
  },
  {
    "text": "search place well if its key value typically putting your data in memory or no sequel makes a lot of sense",
    "start": "2107300",
    "end": "2114170"
  },
  {
    "text": "you know graph databases are getting very popular because you know the speed of accessing deep networks is going",
    "start": "2114170",
    "end": "2119750"
  },
  {
    "text": "lower and lower so you need to have MIT you need to start to think about materializing a draft view which is something that I've learnt this year",
    "start": "2119750",
    "end": "2125930"
  },
  {
    "text": "it's getting more and more interesting more and more customers won't want to deal with graphs so we're at that thing",
    "start": "2125930",
    "end": "2131569"
  },
  {
    "text": "so basically materializing a graph view of your data is becoming more important these days",
    "start": "2131569",
    "end": "2137030"
  },
  {
    "text": "similarly when you look at it access patterns if you have a get access pattern you know having a data and no sequel or in-memory based on how",
    "start": "2137030",
    "end": "2143210"
  },
  {
    "text": "fast you want the data to flow is key if it's a simple one-to-many or many to many relationships you can know sequels",
    "start": "2143210",
    "end": "2150320"
  },
  {
    "text": "will nicely handle that if you're a large-scale you know you can use no sequel instead of a classic sequel you",
    "start": "2150320",
    "end": "2156410"
  },
  {
    "text": "know where you get into some trouble you know still multi table joins and transactions you know sequel databases do that fairly",
    "start": "2156410",
    "end": "2163640"
  },
  {
    "text": "well that is one case where you still have to use our good old sequel and it's",
    "start": "2163640",
    "end": "2168920"
  },
  {
    "text": "a pretty problem to use case in many cases if you need that functionality you have to shard your data across multiple multiple instances there's no other way",
    "start": "2168920",
    "end": "2176720"
  },
  {
    "text": "of doing that you know if you need those kind of joins and transactions and if you're dealing with faceting and search",
    "start": "2176720",
    "end": "2182660"
  },
  {
    "text": "if you're going to Amazon website on the left side we have a pain saying you know all you know show me all the prime applica you know products that are",
    "start": "2182660",
    "end": "2188900"
  },
  {
    "text": "shipping Amazon Prime that's called faceting right you know what is the fast that what you want to sort so if you if",
    "start": "2188900",
    "end": "2194150"
  },
  {
    "text": "you need faceting basically putting that in a in a search store such as cloud search that elastic search is always the",
    "start": "2194150",
    "end": "2199700"
  },
  {
    "text": "good you know right answer and I'll be obviously for graph you know multi-level graphs graph databases work fairly well",
    "start": "2199700",
    "end": "2205099"
  },
  {
    "text": "again this is another concept map you know somebody when they designed reviewed my slide told me this is the",
    "start": "2205099",
    "end": "2210170"
  },
  {
    "text": "ugliest slide that this person has ever seen right so last time when I said that in the talk somebody in the audience",
    "start": "2210170",
    "end": "2215480"
  },
  {
    "text": "said why do you put that slide if that's the case it's not the reason I put that slide is that's how I think in my brain",
    "start": "2215480",
    "end": "2221750"
  },
  {
    "text": "right and multiple customers many many customers have found that extremely helpful whenever you're picking you know",
    "start": "2221750",
    "end": "2227540"
  },
  {
    "text": "always you're dealing with a spectrum of services in your head right when you're actually making a choice in some cases",
    "start": "2227540",
    "end": "2234109"
  },
  {
    "text": "there's a nice overlap between multiple services you know depending upon on the on the x-axis that I have request rates",
    "start": "2234109",
    "end": "2239420"
  },
  {
    "text": "cost per gigabyte latency data volumes on the on the y axis I have structure of the data being low or high so it's sort",
    "start": "2239420",
    "end": "2245900"
  },
  {
    "text": "of a mental map it's by no means it's accurate but generally kind of gives you a continuum of services right why did we",
    "start": "2245900",
    "end": "2251270"
  },
  {
    "text": "invent so many pieces it turns out that we need all that functionality across the spectrum and in many cases as a",
    "start": "2251270",
    "end": "2257000"
  },
  {
    "text": "designer you're trying to figure out what is the right thing for your for your use case in some cases there's more",
    "start": "2257000",
    "end": "2262220"
  },
  {
    "text": "than one scenarios in which case you have to break the tie and how do you break the tie I'm going to give you an",
    "start": "2262220",
    "end": "2267260"
  },
  {
    "text": "example for that it's hold on for another slide which data store should I",
    "start": "2267260",
    "end": "2272390"
  },
  {
    "text": "use again this is a very see slide what I've done is taken all my experiences all my hundreds of design",
    "start": "2272390",
    "end": "2277400"
  },
  {
    "text": "reviews and then characterized these various data stores across various dimensions you know what's the average",
    "start": "2277400",
    "end": "2283160"
  },
  {
    "text": "latency what's the typical data volume people use for this data store what's the typical item size you know for",
    "start": "2283160",
    "end": "2288200"
  },
  {
    "text": "example if you take DynamoDB you know typically it get inputs returns back in",
    "start": "2288200",
    "end": "2293420"
  },
  {
    "text": "about an average about three to four milliseconds or two milliseconds you know somewhere along a single-digit millisecond if you will whereas on the",
    "start": "2293420",
    "end": "2300470"
  },
  {
    "text": "left side if you go to elastic cache if you need microseconds typically you need you should use Dax or elastic cache you",
    "start": "2300470",
    "end": "2306380"
  },
  {
    "text": "know typically sequel databases return answers in a few milliseconds you know one or two milliseconds and depends upon",
    "start": "2306380",
    "end": "2312620"
  },
  {
    "text": "the complexity of the query in some patients it can take seconds if you will and then at the very bottom",
    "start": "2312620",
    "end": "2318230"
  },
  {
    "text": "I've given availability characteristics right you know dynamodb keeps three copies of the data at three different data centers when you do a write to",
    "start": "2318230",
    "end": "2325160"
  },
  {
    "text": "dynamite it's it synchronously writes to at least two copies in two data centers before it comes back in about three or",
    "start": "2325160",
    "end": "2330950"
  },
  {
    "text": "three milliseconds so that kind of durability is important then pretty much you should pick dynamodb for your store",
    "start": "2330950",
    "end": "2336530"
  },
  {
    "text": "and you know RDS Aurora is also highly durable it writes data to three data",
    "start": "2336530",
    "end": "2342050"
  },
  {
    "text": "centers three AZ's so so this kind of is a map again for you to consult when",
    "start": "2342050",
    "end": "2347570"
  },
  {
    "text": "you're trying to pick your data store I'm not going to go through every aspect of this and here's an example it's",
    "start": "2347570",
    "end": "2354230"
  },
  {
    "text": "actually an email that somebody sent me right this is a developer on amazon.com that basically set me you know I should",
    "start": "2354230",
    "end": "2359630"
  },
  {
    "text": "I use s3 or Amazon DynamoDB the person says I'm currently scoping out a project the design calls for many small files",
    "start": "2359630",
    "end": "2365780"
  },
  {
    "text": "perhaps up to a billion during peak write the total size would be in the order of 1.5 terabytes of this data set",
    "start": "2365780",
    "end": "2371570"
  },
  {
    "text": "right when I actually poked around it turns out something like this request rate is 300 writes per second object",
    "start": "2371570",
    "end": "2377600"
  },
  {
    "text": "size is 2k you know one point five terabytes roughly is how much of the data this person is storing for a month and then",
    "start": "2377600",
    "end": "2384590"
  },
  {
    "text": "777 million objects per month now this is a quiz for you right I'm gonna stop talking so how many people think we",
    "start": "2384590",
    "end": "2390050"
  },
  {
    "text": "should use s3 raise your hands please okay about ten hands raised here or",
    "start": "2390050",
    "end": "2398540"
  },
  {
    "text": "somebody's not sure it's okay or just that's a fun exercise how many think it should be DynamoDB a few more",
    "start": "2398540",
    "end": "2407120"
  },
  {
    "text": "hands right okay well let's try this are you sure you can change your mind okay so often times is the tool called",
    "start": "2407120",
    "end": "2415550"
  },
  {
    "text": "simple monthly calculator how many of you have seen this tool it's nicely but eat somewhere okay nice a lot of hands",
    "start": "2415550",
    "end": "2422580"
  },
  {
    "text": "awesome if you plug all this if you fire that tool up and plug all the parameters this is the there's a tab for DynamoDB",
    "start": "2422580",
    "end": "2429600"
  },
  {
    "text": "where you plug in the dural data set size item size and the rights per second right and then there's a get another tab",
    "start": "2429600",
    "end": "2435690"
  },
  {
    "text": "for s3 you plug in those numbers these points are very small but assume you're plugging it this one right I'll show you a bigger font next slide so and then",
    "start": "2435690",
    "end": "2443220"
  },
  {
    "text": "what happens is it gives a result like this as you can just see for the folks who set as three wins they were right in",
    "start": "2443220",
    "end": "2449730"
  },
  {
    "text": "some dimension the storage cost is only $34 but turns out that the put cost is",
    "start": "2449730",
    "end": "2455369"
  },
  {
    "text": "three thousand eight hundred and eighty-eight dollars right was not a surprise yeah it turns out when we",
    "start": "2455369",
    "end": "2462840"
  },
  {
    "text": "designed s3 we designed this to do bigger files you know and we priced this to do bigger files you can you know s3",
    "start": "2462840",
    "end": "2469170"
  },
  {
    "text": "will happily take small you know a small small payload you know object sizes could be one byte to any number of bytes",
    "start": "2469170",
    "end": "2474660"
  },
  {
    "text": "that you want to put in but it turns out that you know put cost may overwhelm you if you're putting very tiny objects so",
    "start": "2474660",
    "end": "2480810"
  },
  {
    "text": "the best practice is s3 so I agree gate the data to write this there's three and we priced this product like this you know what I was building this slide in",
    "start": "2480810",
    "end": "2486869"
  },
  {
    "text": "fact I made a mistake I used to have three infrequent access it turns out infrequent access is a lot more",
    "start": "2486869",
    "end": "2492540"
  },
  {
    "text": "expensive than $3,800 it's not on 7000 if I if I saw that correctly so actually",
    "start": "2492540",
    "end": "2497970"
  },
  {
    "text": "do a pricing exercise usually oftentimes during my design review after 20 minutes I park my call and tell my customers hey",
    "start": "2497970",
    "end": "2505380"
  },
  {
    "text": "let's just compute the cost of this solution that we're putting through right any time you write down two things come out of this the customer typically",
    "start": "2505380",
    "end": "2511260"
  },
  {
    "text": "gives the two thumbs up let's go on or in some cases we pick the wrong service may say you know what something is not",
    "start": "2511260",
    "end": "2516300"
  },
  {
    "text": "adding up here or my requirements are totally off right I'm gonna change this or change the service right now any time",
    "start": "2516300",
    "end": "2522030"
  },
  {
    "text": "I do a presentation in front of you know hundreds of people I showed this to the s3 product manager the person was really",
    "start": "2522030",
    "end": "2527220"
  },
  {
    "text": "upset so so I decided to put a compensating scenario there I increase the payload to 32k and see what happens",
    "start": "2527220",
    "end": "2534900"
  },
  {
    "text": "there right it turns out in that case obviously as three wins right it turns",
    "start": "2534900",
    "end": "2540540"
  },
  {
    "text": "our DynamoDB probably and throughput and storage costs DynamoDB uses SSD under the covers you know 25 cents per gigabyte per month is",
    "start": "2540540",
    "end": "2546809"
  },
  {
    "text": "the storage cost well as the storage cost of dynamodb and then the when you provision I ops you also each I up is 1k",
    "start": "2546809",
    "end": "2553589"
  },
  {
    "text": "I up you you there's a unit price for that if it's a 32k pill or you're riding is 32 K into 32 right so the price",
    "start": "2553589",
    "end": "2560099"
  },
  {
    "text": "becomes much higher so in this case clearly you know pricing that thing gives you the right solution of you well",
    "start": "2560099",
    "end": "2565829"
  },
  {
    "text": "right now let's quickly that's a great example of you know you should always be cost conscious when you design systems",
    "start": "2565829",
    "end": "2571289"
  },
  {
    "start": "2571000",
    "end": "2571000"
  },
  {
    "text": "the data yes now let's go into you know the analytic stage right we've looked at collection we looked at storage now",
    "start": "2571289",
    "end": "2577170"
  },
  {
    "text": "we're going to an analytic stage you know in terms of predictive analytics Amazon has been you know doing a lot of",
    "start": "2577170",
    "end": "2585960"
  },
  {
    "text": "a deep investments in AI over the last 20 years you know when you go to a website when you do you know people who",
    "start": "2585960",
    "end": "2591599"
  },
  {
    "text": "bought this bought this too when we actually tell you you know you may want to look at these things you know we're",
    "start": "2591599",
    "end": "2596849"
  },
  {
    "text": "basically using a I machine learning there right yeah when when we move",
    "start": "2596849",
    "end": "2602339"
  },
  {
    "text": "things in our in our fulfillment centers when we move actually when we move all these boxes that aren't the routing for",
    "start": "2602339",
    "end": "2608160"
  },
  {
    "text": "that is actually done by you know machine learning you know there's a concept in a Amazon go is an experience",
    "start": "2608160",
    "end": "2615329"
  },
  {
    "text": "store buying experience but you simply walk into the store pick whatever you want and walk away we automatically bill you right so basically we're doing image",
    "start": "2615329",
    "end": "2622170"
  },
  {
    "text": "processing we're actually mapping that to your aw you know Amazon account and then billing you as well right so all of",
    "start": "2622170",
    "end": "2628319"
  },
  {
    "text": "that you know we've been at it for about twenty years or so so we're exposing this services for AWS customers in three",
    "start": "2628319",
    "end": "2634380"
  },
  {
    "text": "forms you know API driven services you know these are targeted towards developers so if you are if you want the",
    "start": "2634380",
    "end": "2639690"
  },
  {
    "text": "speech enable if you want to enable speech recognition you see you can use Amazon lacks Amazon poly or for for",
    "start": "2639690",
    "end": "2647069"
  },
  {
    "text": "doing text-to-speech and you can also use Amazon recognition right if you have you know images or clips of videos that",
    "start": "2647069",
    "end": "2653039"
  },
  {
    "text": "you won't actually recognize faces etc you can actually build that into your big data application we also have",
    "start": "2653039",
    "end": "2658710"
  },
  {
    "text": "machine learning platforms such as Amazon machine learning you know which is a managed fully managed service for",
    "start": "2658710",
    "end": "2664289"
  },
  {
    "text": "doing regressions logistic regressions you know sort of classification if you will linear regression and as well as",
    "start": "2664289",
    "end": "2670289"
  },
  {
    "text": "logistic regressions spork ml is very popular you can run spork ml on top of EMR and a lot of customers do",
    "start": "2670289",
    "end": "2677850"
  },
  {
    "text": "you know a lot of you know what logistic regression as well as linear regression multinomial regression etc using using",
    "start": "2677850",
    "end": "2685560"
  },
  {
    "text": "spark ml and then we also have shipped a deep learning emi Amazon am i stands for",
    "start": "2685560",
    "end": "2691410"
  },
  {
    "text": "Amazon machine image and you can basically run using deep learning ami",
    "start": "2691410",
    "end": "2697560"
  },
  {
    "text": "you can run you know it comes bundled with a lot of frameworks such as you know MX net cancer flow cafe",
    "start": "2697560",
    "end": "2706710"
  },
  {
    "text": "Kiera's which is a Python framework you know for doing high level programming on top of on top of tensorflow etc it kind",
    "start": "2706710",
    "end": "2714150"
  },
  {
    "text": "of comes in bundled with that so if you have data scientists you can simply launch the deep learning army run your",
    "start": "2714150",
    "end": "2719370"
  },
  {
    "text": "notebooks there or you can actually run an auto scaling group and then run multiple armies with with GPU instances",
    "start": "2719370",
    "end": "2725730"
  },
  {
    "text": "to be able to actually serve predictions at scale and you know like obviously API",
    "start": "2725730",
    "end": "2732840"
  },
  {
    "text": "driven services are targeted to our developers and then the other you know ml platforms as well as the machine",
    "start": "2732840",
    "end": "2737970"
  },
  {
    "text": "learning ami are directed at data scientist as well as deep learning experts in terms of interactive and",
    "start": "2737970",
    "end": "2744180"
  },
  {
    "start": "2742000",
    "end": "2742000"
  },
  {
    "text": "batch analytics elasticsearch is a fully managed service for running I mean for",
    "start": "2744180",
    "end": "2749190"
  },
  {
    "text": "running elasticsearch redshift as well as the recently introduced redshift spectrum redshift is a managed data data",
    "start": "2749190",
    "end": "2755970"
  },
  {
    "text": "warehouse spectrum enables you to access your data in s3 in other words you don't have to load the data into redshift",
    "start": "2755970",
    "end": "2762540"
  },
  {
    "text": "redshift uses local disks where a spectrum allows the queries to be",
    "start": "2762540",
    "end": "2767790"
  },
  {
    "text": "actually run on a cluster that is dedicated towards running these queries",
    "start": "2767790",
    "end": "2773220"
  },
  {
    "text": "so you simply put your data in s3 join a table that's an s3 you create a schema",
    "start": "2773220",
    "end": "2778230"
  },
  {
    "text": "in the glue catalog and then Amazon redshift cluster can simply join a table",
    "start": "2778230",
    "end": "2783240"
  },
  {
    "text": "that's an s3 data for the Qin s3 would actually data that's in Amazon redshift and materialize a query so these are",
    "start": "2783240",
    "end": "2790110"
  },
  {
    "text": "interactive analytics applications Athena is also a server service for running running queries you don't have",
    "start": "2790110",
    "end": "2795960"
  },
  {
    "text": "to worry about servers you simply put your data in s3 you know create your glue catalog schema and then you can",
    "start": "2795960",
    "end": "2802080"
  },
  {
    "text": "point your query at a latina you can send your queries to Athena Athena will materialise a result for you",
    "start": "2802080",
    "end": "2808620"
  },
  {
    "text": "Amazon EMR you can use mini managed frameworks such as pork flank presto test etc about 14 frameworks ours are",
    "start": "2808620",
    "end": "2816270"
  },
  {
    "text": "actually support out of the box you can pretty much like bootstrap actions to bootstrap any you know a large number of",
    "start": "2816270",
    "end": "2821790"
  },
  {
    "text": "big data frameworks on top of EMR your mod manages like things like you know node replacements IAM or also comes with",
    "start": "2821790",
    "end": "2828660"
  },
  {
    "text": "EMR file system which is a consistent file system on top of s3 etc so you give you get a lot of you know advantages for",
    "start": "2828660",
    "end": "2835320"
  },
  {
    "text": "running EMR now what about streaming and real-time analytics you know for streaming using spark streaming on top",
    "start": "2835320",
    "end": "2843330"
  },
  {
    "start": "2836000",
    "end": "2836000"
  },
  {
    "text": "of EMR makes a lot of sense you know Canisius analytics for Canisius analytics is a fully managed service for",
    "start": "2843330",
    "end": "2849930"
  },
  {
    "text": "running sequel on top of streaming data so you can do things like you've been doing functions on top of fast-moving",
    "start": "2849930",
    "end": "2856470"
  },
  {
    "text": "data and computer you know minute one minute metric or a 10 minute metric and actually take that and put it in another",
    "start": "2856470",
    "end": "2862140"
  },
  {
    "text": "Canisius stream for downstream processing KCl is a library for for",
    "start": "2862140",
    "end": "2867300"
  },
  {
    "text": "stream processing it manages checkpoints it allows you to build applications that actually you know you can use an auto",
    "start": "2867300",
    "end": "2873720"
  },
  {
    "text": "scaling group and run it across you know multiple multiple AZ's therefore you can run Kinesis client library applications",
    "start": "2873720",
    "end": "2881340"
  },
  {
    "text": "using KCl lamda is a fully managed service for running you know think of",
    "start": "2881340",
    "end": "2886410"
  },
  {
    "text": "that as running you know server lists or running functions in the cloud you know lamda can hook up to either you know",
    "start": "2886410",
    "end": "2893130"
  },
  {
    "text": "events that that gets created when you write data to s3 or you can hook up lambda to you know Kinesis streams or",
    "start": "2893130",
    "end": "2900570"
  },
  {
    "text": "dynamodb streams so if something if you write to the stream automatically the lambda function gets called and then it",
    "start": "2900570",
    "end": "2907140"
  },
  {
    "text": "gets handed out a bunch of rackets and you can actually do stream you know stream processing using lambda you don't have to run any servers obviously around",
    "start": "2907140",
    "end": "2914310"
  },
  {
    "text": "around it's a lot of servers some of the covers but you simply write your function and hook the function up to stream and then process the data there",
    "start": "2914310",
    "end": "2921080"
  },
  {
    "text": "and which analytics should you use if you have batch or interactive analytics you know in the case of batch using EMR",
    "start": "2921080",
    "end": "2927420"
  },
  {
    "text": "makes a lot of sense elastic MapReduce you can use either high or pig or SPARC if you're doing interactive analytics",
    "start": "2927420",
    "end": "2933930"
  },
  {
    "text": "which takes typically seconds to process Amazon redshift or athina or EMR with",
    "start": "2933930",
    "end": "2938940"
  },
  {
    "text": "trust o or a spark would make sense stream processing obviously we have",
    "start": "2938940",
    "end": "2944130"
  },
  {
    "text": "spark streaming Kinesis analytics KCl and lambda for predictive analytics",
    "start": "2944130",
    "end": "2949140"
  },
  {
    "text": "basically doing either real-time predictions or batch predictions using either Amazon machine learning or you",
    "start": "2949140",
    "end": "2955349"
  },
  {
    "text": "can use if your API driven services if you are dealing with you know images etc you can use actually recognition to to",
    "start": "2955349",
    "end": "2962700"
  },
  {
    "text": "actually recognize various objects and images in your pipeline actually I'll show you a demonstrate how to use that a",
    "start": "2962700",
    "end": "2967980"
  },
  {
    "text": "little bit later here is again a comparison of various stream processing technologies and you know one thing to",
    "start": "2967980",
    "end": "2975539"
  },
  {
    "text": "note here is that if you're doing spark streaming it is how many of you know that it's a single easy service right",
    "start": "2975539",
    "end": "2981329"
  },
  {
    "text": "when you're running an EMR cluster or on a Hadoop cluster typically it runs in a",
    "start": "2981329",
    "end": "2986549"
  },
  {
    "text": "single AZ so if you want you're running a highly available application then you need to have a mechanism to launch",
    "start": "2986549",
    "end": "2991770"
  },
  {
    "text": "another cluster if an AZ availabilities team the zone goes down whenever we build services at AWS or our solutions",
    "start": "2991770",
    "end": "2998819"
  },
  {
    "text": "that it'll be as we always tell customers to build highly available solutions which means you should plan on multi AZ if in case data at node fails",
    "start": "2998819",
    "end": "3006770"
  },
  {
    "text": "or AZ fails right so in the case of Kinesis KCl if you're using auto scaling",
    "start": "3006770",
    "end": "3012440"
  },
  {
    "text": "and putting in and running the application across multiple EC is it is inherently multi AZ whereas if you use",
    "start": "3012440",
    "end": "3017869"
  },
  {
    "text": "Canisius analytics and lambda it is inherently multi AC right even if an availability zone goes down you know we",
    "start": "3017869",
    "end": "3025099"
  },
  {
    "text": "automatically compensate for that the application is running as if nothing happened right so those are some of the points again",
    "start": "3025099",
    "end": "3031069"
  },
  {
    "text": "I'm gonna leave this as a slide for you for future reference again this is what",
    "start": "3031069",
    "end": "3038089"
  },
  {
    "text": "analytics tools should you use right you know if you're using a data warehouse if you have a classic data warehouse kind of workload I think the best tool to use",
    "start": "3038089",
    "end": "3044539"
  },
  {
    "text": "would be Amazon redshift if you want to combine direct data warehousing with",
    "start": "3044539",
    "end": "3050390"
  },
  {
    "text": "with the data leaks in our year but you're putting files in s3 and you're doing joins across using Amazon Spectrum",
    "start": "3050390",
    "end": "3055520"
  },
  {
    "text": "makes a lot of sense and if you're doing basically if you're putting all the files and simply s3 and you want to",
    "start": "3055520",
    "end": "3062240"
  },
  {
    "text": "create a catalogue on top of that igloo catalog on top of that and you don't want to provision servers etc using",
    "start": "3062240",
    "end": "3068779"
  },
  {
    "text": "Amazon Athena makes a lot of sense because simply you create a catalog on top of that and access the data and",
    "start": "3068779",
    "end": "3075240"
  },
  {
    "text": "with iam are you have presto spark and high or some of the options as well",
    "start": "3075240",
    "end": "3080330"
  },
  {
    "text": "again there's a lot of you know Athena is serverless what as others you have to think about servers provisioning the",
    "start": "3080330",
    "end": "3086580"
  },
  {
    "text": "right instance types etc and moving on to ETL AWS glue is a fully managed",
    "start": "3086580",
    "end": "3094710"
  },
  {
    "text": "service for for ETL it allows you to not only do ETL but also you know you can",
    "start": "3094710",
    "end": "3100800"
  },
  {
    "text": "provide videos data sources it'll automatically look at the various data sources and actually infer what the data",
    "start": "3100800",
    "end": "3106350"
  },
  {
    "text": "is and create a catalog for your data in the glue catalog and the catalog is accessed by spectrum Athena and other",
    "start": "3106350",
    "end": "3113460"
  },
  {
    "text": "services you know and you can even eat more and therefore you can actually join with that data automatically being",
    "start": "3113460",
    "end": "3120300"
  },
  {
    "text": "materialized by glue it also creates you boilerplate code which you can optimize",
    "start": "3120300",
    "end": "3125640"
  },
  {
    "text": "and when you finish the ETL process it automatically runs that ETL jobs on top",
    "start": "3125640",
    "end": "3130800"
  },
  {
    "text": "of clusters for clusters that it creates so it's a it's a fantastic developer oriented platform for running these",
    "start": "3130800",
    "end": "3136830"
  },
  {
    "text": "workloads you know if you you also can use this a plethora of other you know tools such as you know informatica or at",
    "start": "3136830",
    "end": "3144450"
  },
  {
    "text": "annuity and others they do fairly amazing things as well so you can use those platforms as well and now putting",
    "start": "3144450",
    "end": "3153240"
  },
  {
    "text": "this somewhat all together we're very close in terms of the consume I'm focusing a little bit on the AI if",
    "start": "3153240",
    "end": "3159990"
  },
  {
    "text": "you're building AI applications obviously you can use the Amazon AI to build your models and you can deploy",
    "start": "3159990",
    "end": "3166260"
  },
  {
    "text": "those models on top of ECS cluster and then actually you can train those models",
    "start": "3166260",
    "end": "3172859"
  },
  {
    "text": "as well and using the deep learning AMI and and and your Jupiter notebooks etc",
    "start": "3172859",
    "end": "3178890"
  },
  {
    "text": "and if you're doing classic you know visualization classic analytics if you",
    "start": "3178890",
    "end": "3184410"
  },
  {
    "text": "will visualization you can use quick site tableau etc looker MicroStrategy and others I didn't have the space in the",
    "start": "3184410",
    "end": "3191550"
  },
  {
    "text": "slide to include a lot of and there's a lot of amazing partner services I'm not focusing on those specific aspects that",
    "start": "3191550",
    "end": "3196710"
  },
  {
    "text": "you know I think probably this one gives you an idea what else you can use as well now the BI applications you know",
    "start": "3196710",
    "end": "3203900"
  },
  {
    "text": "applications are and the data science notebooks etc are more data science and DevOps Pacific and the and there is the",
    "start": "3203900",
    "end": "3210910"
  },
  {
    "text": "business users typically use things like tableau and others to point and quick site to point and slice and dice their",
    "start": "3210910",
    "end": "3217510"
  },
  {
    "text": "data now that is the grand slide that actually combines all of that obviously",
    "start": "3217510",
    "end": "3222970"
  },
  {
    "text": "it's going to be in your it's going to be it's going to show up in SlideShare as well now let's go through quickly",
    "start": "3222970",
    "end": "3229090"
  },
  {
    "text": "three design patterns this is another concept map of of putting all those",
    "start": "3229090",
    "end": "3235300"
  },
  {
    "text": "stuff together you know going back here what I've done here is that you know",
    "start": "3235300",
    "end": "3240340"
  },
  {
    "text": "your data goes into three different data stores potentially in this case you know hearts data source such as Kinesis and a",
    "start": "3240340",
    "end": "3246160"
  },
  {
    "text": "heart and a warm data sources DynamoDB and and and and and a warm and a colder scenarios such as s3 right and then you",
    "start": "3246160",
    "end": "3253750"
  },
  {
    "text": "can use various processing technologies based on what processing technology that you use right if you're actually doing",
    "start": "3253750",
    "end": "3259780"
  },
  {
    "text": "spark streaming on top of Kinesis it's really a real-time application if you're putting data and s3 and then you are",
    "start": "3259780",
    "end": "3265240"
  },
  {
    "text": "actually copying is to redshift and are running queries through it you know which answer is going to come back in",
    "start": "3265240",
    "end": "3270280"
  },
  {
    "text": "seconds it's actually interactive analytics right and then you can do classic batch processing using either",
    "start": "3270280",
    "end": "3275470"
  },
  {
    "text": "high or test right so generally you know sort of this gives me sort of a mental map of common combining hard data stores",
    "start": "3275470",
    "end": "3281620"
  },
  {
    "text": "with processing technologies that can either run fast or slow combination of that gives you you know three different",
    "start": "3281620",
    "end": "3287770"
  },
  {
    "text": "types of analytics if you will now now this is where it all comes together in the next three slides thanks for holding",
    "start": "3287770",
    "end": "3294520"
  },
  {
    "text": "on and you know if you're if you're building a real-time application the general architecture is like this you",
    "start": "3294520",
    "end": "3300670"
  },
  {
    "text": "know you take your streaming data and you put that in Amazon Kinesis right and you can run Amazon Canisius analytics to",
    "start": "3300670",
    "end": "3306400"
  },
  {
    "text": "do stream ETL in other words your runs you write sequel and you do your group buys and and so on and you put the",
    "start": "3306400",
    "end": "3313000"
  },
  {
    "text": "results of that into another Kinesis stream Martini's is far hosts for further downstream processing and in order to",
    "start": "3313000",
    "end": "3320950"
  },
  {
    "text": "analyze the data in Canisius you're going to either use a Kinesis client library app or you're going to use AWS",
    "start": "3320950",
    "end": "3326500"
  },
  {
    "text": "lambda or spark we've compared and contrasted these things you know based on your needs you pick one of those",
    "start": "3326500",
    "end": "3332620"
  },
  {
    "text": "right and then if you do real time predictions let's say if you have fast-moving data your you know",
    "start": "3332620",
    "end": "3338470"
  },
  {
    "text": "temperature gauge is sending measurements and you want to consult your machine learning on the fly to figure out whether you",
    "start": "3338470",
    "end": "3344620"
  },
  {
    "text": "know this instrument is going to have a problem or this turbine is going to have a problem and dispatch people so you do",
    "start": "3344620",
    "end": "3350380"
  },
  {
    "text": "real-time you know analytics by looking up your model and saying do you see any patterns here I'm getting these readings",
    "start": "3350380",
    "end": "3355570"
  },
  {
    "text": "and then if that is the case you send an alert to SNS and then it notifies the",
    "start": "3355570",
    "end": "3360820"
  },
  {
    "text": "appropriate person or people and then you can also use a persistent you can write a simple lambda function that all",
    "start": "3360820",
    "end": "3367090"
  },
  {
    "text": "it takes this takes the data and writes it to s3 so we have a persistent copy of your data for for further processing and",
    "start": "3367090",
    "end": "3373690"
  },
  {
    "text": "this is another important layer right when anytime you're dealing with this is the board be coupling right if you have",
    "start": "3373690",
    "end": "3379270"
  },
  {
    "text": "downstream applications painting pretty pictures usually they like to look at a database or elasticsearch or something",
    "start": "3379270",
    "end": "3385150"
  },
  {
    "text": "like that to draw pictures you know Cubana nicely works with elasticsearch so you need to nicely introduce a decoupling layer which is that blue that",
    "start": "3385150",
    "end": "3392410"
  },
  {
    "text": "has elastic you know elastic cache Amazon DynamoDB and RDS that nicely decouples this processing layer that",
    "start": "3392410",
    "end": "3398530"
  },
  {
    "text": "stream processing and making it ready for the downstream application to use right and then again in some cases what",
    "start": "3398530",
    "end": "3405730"
  },
  {
    "text": "happens is you want to fan out right you have you know 20 customers and typically if you write the Canisius stream there's",
    "start": "3405730",
    "end": "3411910"
  },
  {
    "text": "one producer and two consumers that's what each shard so you need to scale the shots in some cases you want to take the",
    "start": "3411910",
    "end": "3416920"
  },
  {
    "text": "data and put it in three or four Kinesis streams for other downstream downstream customers to you that's the way you",
    "start": "3416920",
    "end": "3422380"
  },
  {
    "text": "scale out Kinesis if you will in addition to scaling out the various shots in some cases you want to give",
    "start": "3422380",
    "end": "3428950"
  },
  {
    "text": "special-purpose data to a specific team right there team doing a/b testing on a clickstream data only wants a subset of",
    "start": "3428950",
    "end": "3434440"
  },
  {
    "text": "the data it so you want to maybe pipe off that you know to a downstream it pretty much every single you know",
    "start": "3434440",
    "end": "3440500"
  },
  {
    "text": "real-time analytics application is based on a framework like this right so if you know what this is pretty much you can",
    "start": "3440500",
    "end": "3446470"
  },
  {
    "text": "solve any real-time analytics problem similarly interactive analytics so you can use you know you can put your data",
    "start": "3446470",
    "end": "3453430"
  },
  {
    "text": "in you know Kinesis firehose and then transport the data to elasticsearch at",
    "start": "3453430",
    "end": "3459010"
  },
  {
    "text": "redshift you can put your data into files and then have you know Amazon EMR or athina",
    "start": "3459010",
    "end": "3464950"
  },
  {
    "text": "process that and consume it or you can run your classic you know high war Pig on top of the s3 data now that is",
    "start": "3464950",
    "end": "3470440"
  },
  {
    "text": "interacting on batch analytics now putting this together you can also introduce you know either real-time or",
    "start": "3470440",
    "end": "3476380"
  },
  {
    "text": "predict by doing batch prediction using Amazon machine learning or real-time predictions as well into your pipeline",
    "start": "3476380",
    "end": "3482589"
  },
  {
    "text": "and and and that can be incorporated into the answers that you give to the customers right now putting what is the",
    "start": "3482589",
    "end": "3489670"
  },
  {
    "text": "data lake you know data lake to me is a combination of interactive and batch analytics and real-time and with the",
    "start": "3489670",
    "end": "3495369"
  },
  {
    "text": "materialized view if you will right so if you if you take all of that that we did before and put that in place that is",
    "start": "3495369",
    "end": "3502089"
  },
  {
    "text": "in essence your daily so to me a data Lake is a design pattern that allows you to kind of bring",
    "start": "3502089",
    "end": "3507670"
  },
  {
    "text": "together both your interactive real-time or stream analytics and the materialized",
    "start": "3507670",
    "end": "3512950"
  },
  {
    "text": "view to materialize the data in in a form your downstream applications would need it and we walk through the",
    "start": "3512950",
    "end": "3518950"
  },
  {
    "text": "end-to-end stages to how to do that now a couple of things are important you know giving metadata keeping an idea of",
    "start": "3518950",
    "end": "3525490"
  },
  {
    "text": "the metadata in your applications is also important you know storing that metadata in a glue catalog or a classic hide catalog makes a lot of sense",
    "start": "3525490",
    "end": "3532660"
  },
  {
    "text": "and then last but not the least security and governance is important you know encrypting your data using appropriate",
    "start": "3532660",
    "end": "3538510"
  },
  {
    "text": "keys using the appropriate services for authentication and access control such as directory services and Apache Ranger",
    "start": "3538510",
    "end": "3545440"
  },
  {
    "text": "is pretty helpful and using cloud watch you know logs and you know it's pretty",
    "start": "3545440",
    "end": "3551950"
  },
  {
    "text": "important end to end so you're going to use some of the you know compliance tools putting it all together this is the the grand picture of your data like",
    "start": "3551950",
    "end": "3559390"
  },
  {
    "start": "3556000",
    "end": "3556000"
  },
  {
    "text": "reference architecture and with that I am going to summarize you know built",
    "start": "3559390",
    "end": "3567069"
  },
  {
    "text": "when you build big data systems you know build decoupled data pipelines use the right tool for the job we we went",
    "start": "3567069",
    "end": "3573250"
  },
  {
    "text": "through how and use log centric design patterns and materialized to be used for scaling you know your your applications",
    "start": "3573250",
    "end": "3579430"
  },
  {
    "text": "be always cost conscious that enables you to the right decision and use you",
    "start": "3579430",
    "end": "3584890"
  },
  {
    "text": "know AI and m/l enable your applications thank you so much for hanging out early and I hope that was helpful [Applause]",
    "start": "3584890",
    "end": "3597019"
  }
]