[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "[Applause]",
    "start": "1100",
    "end": "4110"
  },
  {
    "text": "[Music]",
    "start": "4110",
    "end": "8080"
  },
  {
    "text": "hello I'm Dennis a senior Cloud support",
    "start": "8080",
    "end": "10559"
  },
  {
    "text": "engineer here at the aols office in",
    "start": "10559",
    "end": "12599"
  },
  {
    "text": "Sydney Australia today I'm going to show",
    "start": "12599",
    "end": "14759"
  },
  {
    "text": "you how to resolve the error the",
    "start": "14759",
    "end": "16358"
  },
  {
    "text": "security token included in the request",
    "start": "16359",
    "end": "18279"
  },
  {
    "text": "is expired when running Java",
    "start": "18279",
    "end": "19920"
  },
  {
    "text": "applications on Amazon elastic compute",
    "start": "19920",
    "end": "21880"
  },
  {
    "text": "Cloud let's get",
    "start": "21880",
    "end": "23840"
  },
  {
    "text": "started all application API requests to",
    "start": "23840",
    "end": "26840"
  },
  {
    "start": "24000",
    "end": "107000"
  },
  {
    "text": "AWS must be cryptographically signed",
    "start": "26840",
    "end": "29160"
  },
  {
    "text": "with credentials issued by ads these",
    "start": "29160",
    "end": "31800"
  },
  {
    "text": "credentials can be permanent or",
    "start": "31800",
    "end": "33520"
  },
  {
    "text": "temporary and knowing how to manage them",
    "start": "33520",
    "end": "35719"
  },
  {
    "text": "effectively is key to smooth application",
    "start": "35719",
    "end": "38000"
  },
  {
    "text": "operations there are several reasons why",
    "start": "38000",
    "end": "40600"
  },
  {
    "text": "you might encounter expired token",
    "start": "40600",
    "end": "43680"
  },
  {
    "text": "errors if your application uses",
    "start": "43680",
    "end": "45840"
  },
  {
    "text": "temporary credentials those credentials",
    "start": "45840",
    "end": "48039"
  },
  {
    "text": "have an expiration time you must refresh",
    "start": "48039",
    "end": "50440"
  },
  {
    "text": "them before they expire to maintain",
    "start": "50440",
    "end": "52480"
  },
  {
    "text": "access or your system might not have the",
    "start": "52480",
    "end": "55800"
  },
  {
    "text": "right system time AWS uses the system",
    "start": "55800",
    "end": "58920"
  },
  {
    "text": "time to validate credentials so if your",
    "start": "58920",
    "end": "61399"
  },
  {
    "text": "system clock is off you'll have",
    "start": "61399",
    "end": "63399"
  },
  {
    "text": "credential issues because they will be",
    "start": "63399",
    "end": "65320"
  },
  {
    "text": "rejected to understand how to fix this",
    "start": "65320",
    "end": "67680"
  },
  {
    "text": "common issues let's look at how the",
    "start": "67680",
    "end": "69600"
  },
  {
    "text": "default credential provider chain works",
    "start": "69600",
    "end": "72040"
  },
  {
    "text": "the chain first checks the system",
    "start": "72040",
    "end": "73960"
  },
  {
    "text": "environment variables then Java system",
    "start": "73960",
    "end": "76200"
  },
  {
    "text": "properties followed by the default",
    "start": "76200",
    "end": "77840"
  },
  {
    "text": "credentials file and finally the",
    "start": "77840",
    "end": "80400"
  },
  {
    "text": "instance profile",
    "start": "80400",
    "end": "83000"
  },
  {
    "text": "credentials when running applications on",
    "start": "83000",
    "end": "85280"
  },
  {
    "text": "ec2 it's a best practice to use an AWS",
    "start": "85280",
    "end": "88360"
  },
  {
    "text": "identity and access management role for",
    "start": "88360",
    "end": "90280"
  },
  {
    "text": "your instance IM roles provide temporary",
    "start": "90280",
    "end": "93159"
  },
  {
    "text": "security credentials that rotate",
    "start": "93159",
    "end": "95159"
  },
  {
    "text": "automatically reducing the risk of",
    "start": "95159",
    "end": "97159"
  },
  {
    "text": "expiration and increase in security",
    "start": "97159",
    "end": "99680"
  },
  {
    "text": "let's look at how we can create an IM",
    "start": "99680",
    "end": "101759"
  },
  {
    "text": "rooll with our application's required",
    "start": "101759",
    "end": "103759"
  },
  {
    "text": "permissions and attach it to an ec2",
    "start": "103759",
    "end": "107159"
  },
  {
    "start": "107000",
    "end": "229000"
  },
  {
    "text": "instance as you can see I'm already",
    "start": "107159",
    "end": "109640"
  },
  {
    "text": "logged in into the AWS Management",
    "start": "109640",
    "end": "111840"
  },
  {
    "text": "console let's go ahead and open the IM",
    "start": "111840",
    "end": "114600"
  },
  {
    "text": "console",
    "start": "114600",
    "end": "116000"
  },
  {
    "text": "now in the navigation page choose roles",
    "start": "116000",
    "end": "120640"
  },
  {
    "text": "then create a",
    "start": "120640",
    "end": "122560"
  },
  {
    "text": "role on the selected trusted entity page",
    "start": "122560",
    "end": "125960"
  },
  {
    "text": "select AWS service if you're not already",
    "start": "125960",
    "end": "128319"
  },
  {
    "text": "selected and in use case",
    "start": "128319",
    "end": "132560"
  },
  {
    "text": "ec2 on the permission policy page choose",
    "start": "134519",
    "end": "137599"
  },
  {
    "text": "the policy that matches the permissions",
    "start": "137599",
    "end": "139519"
  },
  {
    "text": "needed for your application in this case",
    "start": "139519",
    "end": "141640"
  },
  {
    "text": "as an example I'll go ahead and select",
    "start": "141640",
    "end": "144640"
  },
  {
    "text": "Amazon S3 readon",
    "start": "144640",
    "end": "146959"
  },
  {
    "text": "access enter the role name then choose",
    "start": "146959",
    "end": "150879"
  },
  {
    "text": "create role now let's assign this role",
    "start": "150879",
    "end": "154160"
  },
  {
    "text": "to the E2 instance hosting our",
    "start": "154160",
    "end": "157360"
  },
  {
    "text": "application open the ec2",
    "start": "157360",
    "end": "160360"
  },
  {
    "text": "console choose the selected",
    "start": "160360",
    "end": "163080"
  },
  {
    "text": "instance choose the action menu security",
    "start": "163080",
    "end": "166680"
  },
  {
    "text": "modify the IM",
    "start": "166680",
    "end": "168280"
  },
  {
    "text": "roll now select the IM roll that we",
    "start": "168280",
    "end": "170959"
  },
  {
    "text": "created earlier after it's selected",
    "start": "170959",
    "end": "173400"
  },
  {
    "text": "choose apply the IM roll is now attached",
    "start": "173400",
    "end": "176519"
  },
  {
    "text": "to your instance to check if the",
    "start": "176519",
    "end": "178280"
  },
  {
    "text": "instance can access the credentials Pro",
    "start": "178280",
    "end": "179879"
  },
  {
    "text": "provided by the instance profile you can",
    "start": "179879",
    "end": "181800"
  },
  {
    "text": "query the instance metadata server to do",
    "start": "181800",
    "end": "184519"
  },
  {
    "text": "this I have used SSH to connect into my",
    "start": "184519",
    "end": "187480"
  },
  {
    "text": "instance let's run a quick curl command",
    "start": "187480",
    "end": "191120"
  },
  {
    "text": "we can see here that we are able to",
    "start": "191120",
    "end": "193000"
  },
  {
    "text": "successfully retrieve the credentials",
    "start": "193000",
    "end": "195080"
  },
  {
    "text": "and verify their expiration if your",
    "start": "195080",
    "end": "197920"
  },
  {
    "text": "command returns a 404 set the no proxy",
    "start": "197920",
    "end": "201040"
  },
  {
    "text": "environment variable to make sure access",
    "start": "201040",
    "end": "203159"
  },
  {
    "text": "to the instance metadata server is not",
    "start": "203159",
    "end": "205280"
  },
  {
    "text": "routed through an HTTP",
    "start": "205280",
    "end": "207640"
  },
  {
    "text": "proxy great we have success F configured",
    "start": "207640",
    "end": "210480"
  },
  {
    "text": "our E2 instance for our Java",
    "start": "210480",
    "end": "212280"
  },
  {
    "text": "applications to access AWS",
    "start": "212280",
    "end": "215040"
  },
  {
    "text": "credentials but we also must consider",
    "start": "215040",
    "end": "217799"
  },
  {
    "text": "another reason for expired credentials",
    "start": "217799",
    "end": "219959"
  },
  {
    "text": "and that is having the incorrect system",
    "start": "219959",
    "end": "222560"
  },
  {
    "text": "time now that we are inside our instance",
    "start": "222560",
    "end": "225640"
  },
  {
    "text": "let's go ahead and make sure that our",
    "start": "225640",
    "end": "227560"
  },
  {
    "text": "ntp settings are correct to do this I'm",
    "start": "227560",
    "end": "231000"
  },
  {
    "start": "229000",
    "end": "267000"
  },
  {
    "text": "going to run two commands the first one",
    "start": "231000",
    "end": "233360"
  },
  {
    "text": "is chrony sources here we'll check which",
    "start": "233360",
    "end": "236680"
  },
  {
    "text": "is our preferred ntp server this will be",
    "start": "236680",
    "end": "239120"
  },
  {
    "text": "marked with a star in the commands",
    "start": "239120",
    "end": "241239"
  },
  {
    "text": "output if you're using ec2 it is a best",
    "start": "241239",
    "end": "244239"
  },
  {
    "text": "practice to use the internal Amazon time",
    "start": "244239",
    "end": "246319"
  },
  {
    "text": "sync service at 169 254 1691 123 the",
    "start": "246319",
    "end": "252079"
  },
  {
    "text": "second command that will run is chronyc",
    "start": "252079",
    "end": "254799"
  },
  {
    "text": "tracking this command tells us if there",
    "start": "254799",
    "end": "257639"
  },
  {
    "text": "are any drifts between the ntp server",
    "start": "257639",
    "end": "260120"
  },
  {
    "text": "and our internal system clock with these",
    "start": "260120",
    "end": "262440"
  },
  {
    "text": "two settings our Java expired tokens",
    "start": "262440",
    "end": "264400"
  },
  {
    "text": "issue is now",
    "start": "264400",
    "end": "266360"
  },
  {
    "text": "resolved thanks for watching and happy",
    "start": "266360",
    "end": "268800"
  },
  {
    "start": "267000",
    "end": "282000"
  },
  {
    "text": "cloud computing from all of us here at",
    "start": "268800",
    "end": "270919"
  },
  {
    "text": "AWS",
    "start": "270919",
    "end": "272560"
  },
  {
    "text": "[Applause]",
    "start": "272560",
    "end": "274610"
  },
  {
    "text": "[Music]",
    "start": "274610",
    "end": "281550"
  }
]