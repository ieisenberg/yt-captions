[
  {
    "start": "0",
    "end": "45000"
  },
  {
    "text": "hello my name is kasinini i'm a database",
    "start": "1040",
    "end": "3919"
  },
  {
    "text": "specialist solution architect at aws",
    "start": "3919",
    "end": "7919"
  },
  {
    "text": "aws clouds provide the most flexible",
    "start": "7919",
    "end": "10719"
  },
  {
    "text": "solutions",
    "start": "10719",
    "end": "12000"
  },
  {
    "text": "to enable or enhance your daily",
    "start": "12000",
    "end": "14639"
  },
  {
    "text": "strategies",
    "start": "14639",
    "end": "15839"
  },
  {
    "text": "in this video i'll show you how to use",
    "start": "15839",
    "end": "18640"
  },
  {
    "text": "aws database migration service",
    "start": "18640",
    "end": "21600"
  },
  {
    "text": "to move your historical data from your",
    "start": "21600",
    "end": "24560"
  },
  {
    "text": "amazon rds for oracle database to amazon",
    "start": "24560",
    "end": "28160"
  },
  {
    "text": "s3 data lake i will also show you how to",
    "start": "28160",
    "end": "32078"
  },
  {
    "text": "use azena federation query to join",
    "start": "32079",
    "end": "36239"
  },
  {
    "text": "oltp data in rds oracle database and",
    "start": "36239",
    "end": "40160"
  },
  {
    "text": "historical data stored in s3 bucket",
    "start": "40160",
    "end": "43760"
  },
  {
    "text": "let's start it",
    "start": "43760",
    "end": "46399"
  },
  {
    "start": "45000",
    "end": "139000"
  },
  {
    "text": "now let me give you an architecture and",
    "start": "46399",
    "end": "48640"
  },
  {
    "text": "a solution overview",
    "start": "48640",
    "end": "50559"
  },
  {
    "text": "for oltp database we want to just store",
    "start": "50559",
    "end": "53760"
  },
  {
    "text": "most recent data",
    "start": "53760",
    "end": "55600"
  },
  {
    "text": "for instance by your data for data older",
    "start": "55600",
    "end": "58879"
  },
  {
    "text": "than the year we want to move to s3 data",
    "start": "58879",
    "end": "61760"
  },
  {
    "text": "lake to see the cost",
    "start": "61760",
    "end": "64239"
  },
  {
    "text": "we can use amazon database migration",
    "start": "64239",
    "end": "66400"
  },
  {
    "text": "service to migrate historical data to s3",
    "start": "66400",
    "end": "70159"
  },
  {
    "text": "data lake",
    "start": "70159",
    "end": "71600"
  },
  {
    "text": "then we can run ad-hoc query by using",
    "start": "71600",
    "end": "74240"
  },
  {
    "text": "amazon azina",
    "start": "74240",
    "end": "75920"
  },
  {
    "text": "a serverless interactive query engine",
    "start": "75920",
    "end": "79680"
  },
  {
    "text": "on the data stored in s3",
    "start": "79680",
    "end": "82720"
  },
  {
    "text": "we also can use amazon as in a",
    "start": "82720",
    "end": "84880"
  },
  {
    "text": "federative query",
    "start": "84880",
    "end": "86400"
  },
  {
    "text": "to join data stored in database and the",
    "start": "86400",
    "end": "89280"
  },
  {
    "text": "dating s3",
    "start": "89280",
    "end": "90880"
  },
  {
    "text": "to provide a single view of data",
    "start": "90880",
    "end": "93759"
  },
  {
    "text": "for advanced data analysis and machine",
    "start": "93759",
    "end": "96880"
  },
  {
    "text": "learning",
    "start": "96880",
    "end": "98320"
  },
  {
    "text": "before the demo let me give you the demo",
    "start": "98320",
    "end": "100720"
  },
  {
    "text": "steps highlights",
    "start": "100720",
    "end": "102240"
  },
  {
    "text": "the first we will set up a aws managed",
    "start": "102240",
    "end": "104960"
  },
  {
    "text": "oracle database as a source for aws dms",
    "start": "104960",
    "end": "109360"
  },
  {
    "text": "set up amazon s3 as a target for aws dms",
    "start": "109360",
    "end": "113920"
  },
  {
    "text": "create aws dms endpoints and launch aws",
    "start": "113920",
    "end": "117920"
  },
  {
    "text": "dms replication instance",
    "start": "117920",
    "end": "120560"
  },
  {
    "text": "then create aws dms migration task",
    "start": "120560",
    "end": "124479"
  },
  {
    "text": "use amazon azina for data validation we",
    "start": "124479",
    "end": "128239"
  },
  {
    "text": "will also use amazon azina federated",
    "start": "128239",
    "end": "130640"
  },
  {
    "text": "query to join the table in amazon rds",
    "start": "130640",
    "end": "133360"
  },
  {
    "text": "oracle and historical data in s3",
    "start": "133360",
    "end": "136800"
  },
  {
    "text": "daylight",
    "start": "136800",
    "end": "137920"
  },
  {
    "text": "let's start the demo",
    "start": "137920",
    "end": "140000"
  },
  {
    "start": "139000",
    "end": "210000"
  },
  {
    "text": "the first step is to set up aws managed",
    "start": "140000",
    "end": "142879"
  },
  {
    "text": "oracle database at the south for aws",
    "start": "142879",
    "end": "145520"
  },
  {
    "text": "database migration service",
    "start": "145520",
    "end": "147680"
  },
  {
    "text": "i will also use sql developer to connect",
    "start": "147680",
    "end": "149920"
  },
  {
    "text": "to the rds oracle database i already",
    "start": "149920",
    "end": "152640"
  },
  {
    "text": "launched",
    "start": "152640",
    "end": "154400"
  },
  {
    "text": "aws database migration service document",
    "start": "154400",
    "end": "157360"
  },
  {
    "text": "provides all the details about how to",
    "start": "157360",
    "end": "160000"
  },
  {
    "text": "set up a prerequisite when using aws and",
    "start": "160000",
    "end": "163200"
  },
  {
    "text": "manage the oracle database at a cells",
    "start": "163200",
    "end": "166080"
  },
  {
    "text": "such as user account privileges required",
    "start": "166080",
    "end": "169280"
  },
  {
    "text": "on aws manage the oracle cells",
    "start": "169280",
    "end": "172800"
  },
  {
    "text": "also",
    "start": "172800",
    "end": "174000"
  },
  {
    "text": "we'll want to create a database",
    "start": "174000",
    "end": "176720"
  },
  {
    "text": "migration task",
    "start": "176720",
    "end": "178239"
  },
  {
    "text": "this task is a full load plus cdc or a",
    "start": "178239",
    "end": "181840"
  },
  {
    "text": "cdc only task you need to make sure your",
    "start": "181840",
    "end": "184720"
  },
  {
    "text": "database is running in our catalog mode",
    "start": "184720",
    "end": "187440"
  },
  {
    "text": "and our catalog retention period minimum",
    "start": "187440",
    "end": "190640"
  },
  {
    "text": "set to 24 hours",
    "start": "190640",
    "end": "193680"
  },
  {
    "text": "you also need to set up a supplemental",
    "start": "193680",
    "end": "195920"
  },
  {
    "text": "login appropriately",
    "start": "195920",
    "end": "198159"
  },
  {
    "text": "configure",
    "start": "198159",
    "end": "199280"
  },
  {
    "text": "a cdc task either use a binary reader or",
    "start": "199280",
    "end": "202879"
  },
  {
    "text": "user log manner",
    "start": "202879",
    "end": "204560"
  },
  {
    "text": "all the details please refer aws",
    "start": "204560",
    "end": "207360"
  },
  {
    "text": "database migration service document",
    "start": "207360",
    "end": "210799"
  },
  {
    "start": "210000",
    "end": "376000"
  },
  {
    "text": "now let's move to setup amazon i3 as a",
    "start": "210799",
    "end": "213599"
  },
  {
    "text": "target for aws dms",
    "start": "213599",
    "end": "216480"
  },
  {
    "text": "database migration service uses s3",
    "start": "216480",
    "end": "219120"
  },
  {
    "text": "package access point as a target",
    "start": "219120",
    "end": "221840"
  },
  {
    "text": "unlike other endpoints s3 doesn't",
    "start": "221840",
    "end": "224480"
  },
  {
    "text": "require user names and password",
    "start": "224480",
    "end": "227040"
  },
  {
    "text": "access is handled via an imrow which can",
    "start": "227040",
    "end": "230080"
  },
  {
    "text": "be assumed by dms and allows get or put",
    "start": "230080",
    "end": "233680"
  },
  {
    "text": "actions on s3 bucket",
    "start": "233680",
    "end": "235920"
  },
  {
    "text": "amazon s3 bracket must be in the same",
    "start": "235920",
    "end": "238239"
  },
  {
    "text": "region as the replication instance used",
    "start": "238239",
    "end": "240640"
  },
  {
    "text": "to migrate data",
    "start": "240640",
    "end": "242640"
  },
  {
    "text": "let's use amazon i3 console to create",
    "start": "242640",
    "end": "244959"
  },
  {
    "text": "the i3 bucket",
    "start": "244959",
    "end": "246560"
  },
  {
    "text": "click a quick bucket",
    "start": "246560",
    "end": "248239"
  },
  {
    "text": "give it a name",
    "start": "248239",
    "end": "251640"
  },
  {
    "text": "notice the aws region and use the us",
    "start": "254400",
    "end": "257359"
  },
  {
    "text": "vest to make sure your aws region for",
    "start": "257359",
    "end": "260639"
  },
  {
    "text": "your sv bucket is the same as your dms",
    "start": "260639",
    "end": "263360"
  },
  {
    "text": "replication instance i'll leave all",
    "start": "263360",
    "end": "265919"
  },
  {
    "text": "other fields at the default click create",
    "start": "265919",
    "end": "268720"
  },
  {
    "text": "bucket",
    "start": "268720",
    "end": "271199"
  },
  {
    "text": "ok successfully create bucket the ora",
    "start": "275280",
    "end": "278000"
  },
  {
    "text": "2x3 demo",
    "start": "278000",
    "end": "280320"
  },
  {
    "text": "now let's create an imro by using amm",
    "start": "280320",
    "end": "283040"
  },
  {
    "text": "console before that let's create a",
    "start": "283040",
    "end": "285280"
  },
  {
    "text": "policy",
    "start": "285280",
    "end": "286400"
  },
  {
    "text": "criticism format",
    "start": "286400",
    "end": "288320"
  },
  {
    "text": "our copy pass into my policy definition",
    "start": "288320",
    "end": "292240"
  },
  {
    "text": "notice the index policy",
    "start": "292240",
    "end": "294720"
  },
  {
    "text": "we defined the actions a lot on ice",
    "start": "294720",
    "end": "297360"
  },
  {
    "text": "repacket and specified as we pack the",
    "start": "297360",
    "end": "300080"
  },
  {
    "text": "name",
    "start": "300080",
    "end": "300960"
  },
  {
    "text": "we created in previous tab",
    "start": "300960",
    "end": "304479"
  },
  {
    "text": "everything looks okay then click next",
    "start": "304479",
    "end": "308560"
  },
  {
    "text": "click on next view",
    "start": "308560",
    "end": "310320"
  },
  {
    "text": "give the name",
    "start": "310320",
    "end": "311600"
  },
  {
    "text": "4a 2i3",
    "start": "311600",
    "end": "314479"
  },
  {
    "text": "then leave others at the default click",
    "start": "314479",
    "end": "317120"
  },
  {
    "text": "create policy",
    "start": "317120",
    "end": "319919"
  },
  {
    "text": "now let's create a row since this row",
    "start": "321280",
    "end": "323600"
  },
  {
    "text": "will be used by dms",
    "start": "323600",
    "end": "326240"
  },
  {
    "text": "let's click dms",
    "start": "326240",
    "end": "329039"
  },
  {
    "text": "and then click on next permissions",
    "start": "329039",
    "end": "332000"
  },
  {
    "text": "since we already create a policy that's",
    "start": "332000",
    "end": "333840"
  },
  {
    "text": "looking for our policy",
    "start": "333840",
    "end": "337560"
  },
  {
    "text": "all right",
    "start": "338240",
    "end": "339520"
  },
  {
    "text": "we select this policy click on next",
    "start": "339520",
    "end": "342000"
  },
  {
    "text": "attacks",
    "start": "342000",
    "end": "343919"
  },
  {
    "text": "next view",
    "start": "343919",
    "end": "345520"
  },
  {
    "text": "give our node name",
    "start": "345520",
    "end": "347440"
  },
  {
    "text": "we can continue call r82 i3",
    "start": "347440",
    "end": "350639"
  },
  {
    "text": "and we create a role",
    "start": "350639",
    "end": "353520"
  },
  {
    "text": "please take the note for the amazon",
    "start": "353520",
    "end": "355520"
  },
  {
    "text": "resource name for the row you created we",
    "start": "355520",
    "end": "358240"
  },
  {
    "text": "need this amazon resource name at a",
    "start": "358240",
    "end": "360720"
  },
  {
    "text": "later point at the time tasker creation",
    "start": "360720",
    "end": "365880"
  },
  {
    "text": "so now we are all set for all the",
    "start": "366960",
    "end": "369520"
  },
  {
    "text": "prerequisites",
    "start": "369520",
    "end": "371199"
  },
  {
    "text": "needed to use s3 as a target for dms",
    "start": "371199",
    "end": "376960"
  },
  {
    "start": "376000",
    "end": "632000"
  },
  {
    "text": "now move to the step create database dms",
    "start": "377360",
    "end": "380080"
  },
  {
    "text": "endpoints and launch aws replication",
    "start": "380080",
    "end": "382479"
  },
  {
    "text": "instance",
    "start": "382479",
    "end": "384479"
  },
  {
    "text": "we will create a sales endpoint by using",
    "start": "384479",
    "end": "386880"
  },
  {
    "text": "an rds oracle pre-launched a target",
    "start": "386880",
    "end": "389840"
  },
  {
    "text": "endpoint by using s3 buckets created in",
    "start": "389840",
    "end": "392639"
  },
  {
    "text": "the previous steps we'll also launch one",
    "start": "392639",
    "end": "395759"
  },
  {
    "text": "dms revocation instance let's start with",
    "start": "395759",
    "end": "398560"
  },
  {
    "text": "this step",
    "start": "398560",
    "end": "401039"
  },
  {
    "text": "we'll use aws dma console to create the",
    "start": "401840",
    "end": "404400"
  },
  {
    "text": "two endpoints",
    "start": "404400",
    "end": "406240"
  },
  {
    "text": "on the create endpoint page we'll first",
    "start": "406240",
    "end": "408960"
  },
  {
    "text": "create the sales endpoint",
    "start": "408960",
    "end": "411120"
  },
  {
    "text": "since my source",
    "start": "411120",
    "end": "412880"
  },
  {
    "text": "is a rdsdb instance i'll check select",
    "start": "412880",
    "end": "415759"
  },
  {
    "text": "rdsdb instance",
    "start": "415759",
    "end": "417520"
  },
  {
    "text": "from rds instance list i'll choose the",
    "start": "417520",
    "end": "419840"
  },
  {
    "text": "one i created for this demo purpose",
    "start": "419840",
    "end": "423199"
  },
  {
    "text": "and for endpoint identifier i'll give",
    "start": "423199",
    "end": "426479"
  },
  {
    "text": "name call",
    "start": "426479",
    "end": "428160"
  },
  {
    "text": "or a 2 f3 demo make sure and point the",
    "start": "428160",
    "end": "432160"
  },
  {
    "text": "identifier is unique",
    "start": "432160",
    "end": "436039"
  },
  {
    "text": "for access to end point database i'll",
    "start": "436240",
    "end": "439039"
  },
  {
    "text": "choose provide access information",
    "start": "439039",
    "end": "441199"
  },
  {
    "text": "manually",
    "start": "441199",
    "end": "442560"
  },
  {
    "text": "for the user name",
    "start": "442560",
    "end": "444240"
  },
  {
    "text": "i choose when i created",
    "start": "444240",
    "end": "446319"
  },
  {
    "text": "in a previous step",
    "start": "446319",
    "end": "448160"
  },
  {
    "text": "i'll use this user to for the migration",
    "start": "448160",
    "end": "451280"
  },
  {
    "text": "task",
    "start": "451280",
    "end": "452319"
  },
  {
    "text": "provide password",
    "start": "452319",
    "end": "455360"
  },
  {
    "text": "for the demo i do not use secure circuit",
    "start": "457199",
    "end": "459919"
  },
  {
    "text": "layer mode but for your production",
    "start": "459919",
    "end": "462160"
  },
  {
    "text": "migration you should always use a secure",
    "start": "462160",
    "end": "464400"
  },
  {
    "text": "socket layer mode",
    "start": "464400",
    "end": "467360"
  },
  {
    "text": "there are additional connection",
    "start": "467360",
    "end": "469120"
  },
  {
    "text": "attributes which can be configured under",
    "start": "469120",
    "end": "471599"
  },
  {
    "text": "endpoint settings",
    "start": "471599",
    "end": "473440"
  },
  {
    "text": "but for this demo purpose i will use the",
    "start": "473440",
    "end": "475759"
  },
  {
    "text": "default setting",
    "start": "475759",
    "end": "477440"
  },
  {
    "text": "and use the kms master key as a default",
    "start": "477440",
    "end": "480479"
  },
  {
    "text": "key",
    "start": "480479",
    "end": "481599"
  },
  {
    "text": "dms aws",
    "start": "481599",
    "end": "483440"
  },
  {
    "text": "uses aws key manage the service",
    "start": "483440",
    "end": "486080"
  },
  {
    "text": "encryption keys to encrypt the storage",
    "start": "486080",
    "end": "488479"
  },
  {
    "text": "used by your application instance and",
    "start": "488479",
    "end": "491280"
  },
  {
    "text": "its endpoint connections",
    "start": "491280",
    "end": "493440"
  },
  {
    "text": "aws dms also use aws qms encryption keys",
    "start": "493440",
    "end": "497120"
  },
  {
    "text": "to secure your targeted data at rest for",
    "start": "497120",
    "end": "500160"
  },
  {
    "text": "amazon s3",
    "start": "500160",
    "end": "502400"
  },
  {
    "text": "that's a click create endpoint",
    "start": "502400",
    "end": "506960"
  },
  {
    "text": "let's create a target on the point",
    "start": "506960",
    "end": "509280"
  },
  {
    "text": "on the create endpoint page i choose",
    "start": "509280",
    "end": "511440"
  },
  {
    "text": "target and plant",
    "start": "511440",
    "end": "513440"
  },
  {
    "text": "and provide unique endpoints identifier",
    "start": "513440",
    "end": "516080"
  },
  {
    "text": "that's called r82 s3 target",
    "start": "516080",
    "end": "520560"
  },
  {
    "text": "for the turkey engine i'll choose amazon",
    "start": "520560",
    "end": "523919"
  },
  {
    "text": "s3",
    "start": "523919",
    "end": "525519"
  },
  {
    "text": "will provide amazon resource name for im",
    "start": "525519",
    "end": "528880"
  },
  {
    "text": "role assumed by dms",
    "start": "528880",
    "end": "532160"
  },
  {
    "text": "provide the bracket name we created in",
    "start": "532160",
    "end": "534320"
  },
  {
    "text": "the previous steps",
    "start": "534320",
    "end": "537279"
  },
  {
    "text": "for this demo i also want to add one",
    "start": "541920",
    "end": "544320"
  },
  {
    "text": "endpoint setting for i3 endpoint i'll",
    "start": "544320",
    "end": "547519"
  },
  {
    "text": "use a v-chart click add new setting",
    "start": "547519",
    "end": "551120"
  },
  {
    "text": "what i'm looking for is date format",
    "start": "551120",
    "end": "553839"
  },
  {
    "text": "for this format a provide value is",
    "start": "553839",
    "end": "556160"
  },
  {
    "text": "perfect",
    "start": "556160",
    "end": "557519"
  },
  {
    "text": "by default file writing to the s3 as a",
    "start": "557519",
    "end": "560080"
  },
  {
    "text": "csv format the reason why i changed the",
    "start": "560080",
    "end": "563200"
  },
  {
    "text": "parkway because my downstream consumer",
    "start": "563200",
    "end": "565519"
  },
  {
    "text": "is amazon adena",
    "start": "565519",
    "end": "568800"
  },
  {
    "text": "apache procreate is a columnar storage",
    "start": "568800",
    "end": "571120"
  },
  {
    "text": "format",
    "start": "571120",
    "end": "572160"
  },
  {
    "text": "instead of using a row level approach",
    "start": "572160",
    "end": "574800"
  },
  {
    "text": "columnar format is storing data by",
    "start": "574800",
    "end": "577200"
  },
  {
    "text": "columns it allows zena to only query and",
    "start": "577200",
    "end": "580399"
  },
  {
    "text": "process the required columns and ignore",
    "start": "580399",
    "end": "582640"
  },
  {
    "text": "the rest which is",
    "start": "582640",
    "end": "584800"
  },
  {
    "text": "optimize the cost when using amazon",
    "start": "584800",
    "end": "587279"
  },
  {
    "text": "azina",
    "start": "587279",
    "end": "588480"
  },
  {
    "text": "now let's click create and points",
    "start": "588480",
    "end": "591440"
  },
  {
    "text": "we'll use aws dms console to create a",
    "start": "591440",
    "end": "595200"
  },
  {
    "text": "replication instance first provide name",
    "start": "595200",
    "end": "597920"
  },
  {
    "text": "for a2 s3",
    "start": "597920",
    "end": "600560"
  },
  {
    "text": "demo",
    "start": "600560",
    "end": "602480"
  },
  {
    "text": "then i leave the rest as a default for",
    "start": "602480",
    "end": "605279"
  },
  {
    "text": "the demo purpose",
    "start": "605279",
    "end": "607040"
  },
  {
    "text": "for the vpc i'll use my default vpc",
    "start": "607040",
    "end": "610560"
  },
  {
    "text": "and then multi-ac i'll choose the devil",
    "start": "610560",
    "end": "613200"
  },
  {
    "text": "tester workload a single ac",
    "start": "613200",
    "end": "616640"
  },
  {
    "text": "then i create",
    "start": "616640",
    "end": "619760"
  },
  {
    "text": "application instance",
    "start": "619760",
    "end": "621360"
  },
  {
    "text": "it will take a few minutes",
    "start": "621360",
    "end": "624959"
  },
  {
    "text": "okay",
    "start": "624959",
    "end": "626000"
  },
  {
    "text": "my",
    "start": "626000",
    "end": "626800"
  },
  {
    "text": "dms replication instance created now",
    "start": "626800",
    "end": "630320"
  },
  {
    "text": "status is available",
    "start": "630320",
    "end": "632959"
  },
  {
    "start": "632000",
    "end": "849000"
  },
  {
    "text": "next let's create aws dms migration task",
    "start": "632959",
    "end": "638560"
  },
  {
    "text": "before",
    "start": "638800",
    "end": "639920"
  },
  {
    "text": "creating replication task",
    "start": "639920",
    "end": "642320"
  },
  {
    "text": "i want to make sure my replication",
    "start": "642320",
    "end": "644640"
  },
  {
    "text": "instance be able to connect my source",
    "start": "644640",
    "end": "647040"
  },
  {
    "text": "and points on my target and the point",
    "start": "647040",
    "end": "649760"
  },
  {
    "text": "so let's do the test the first i'll test",
    "start": "649760",
    "end": "653120"
  },
  {
    "text": "my source endpoint",
    "start": "653120",
    "end": "655120"
  },
  {
    "text": "i choose my source endpoints and from",
    "start": "655120",
    "end": "657680"
  },
  {
    "text": "action choose test connection",
    "start": "657680",
    "end": "661600"
  },
  {
    "text": "then from replication instance checklist",
    "start": "661600",
    "end": "664480"
  },
  {
    "text": "i'll choose my replication instance",
    "start": "664480",
    "end": "667600"
  },
  {
    "text": "click run the test",
    "start": "667600",
    "end": "669760"
  },
  {
    "text": "now we can see the status is successful",
    "start": "669760",
    "end": "675120"
  },
  {
    "text": "next attach a connection with s3 target",
    "start": "675120",
    "end": "679920"
  },
  {
    "text": "go for application instance and choose",
    "start": "683440",
    "end": "686320"
  },
  {
    "text": "replication instance again click run",
    "start": "686320",
    "end": "688480"
  },
  {
    "text": "test",
    "start": "688480",
    "end": "690079"
  },
  {
    "text": "we'll use aws database migration service",
    "start": "690079",
    "end": "692480"
  },
  {
    "text": "console to create a database migration",
    "start": "692480",
    "end": "694480"
  },
  {
    "text": "task",
    "start": "694480",
    "end": "695440"
  },
  {
    "text": "first we'll provide",
    "start": "695440",
    "end": "697360"
  },
  {
    "text": "unique task identifier let's continue",
    "start": "697360",
    "end": "700079"
  },
  {
    "text": "call or a",
    "start": "700079",
    "end": "702120"
  },
  {
    "text": "2s3 demo",
    "start": "702120",
    "end": "704959"
  },
  {
    "text": "from a replication instance list let's",
    "start": "704959",
    "end": "707440"
  },
  {
    "text": "choose ora 2x3 demo we just now created",
    "start": "707440",
    "end": "711200"
  },
  {
    "text": "source database endpoint we choose our",
    "start": "711200",
    "end": "714000"
  },
  {
    "text": "a2s3 demo",
    "start": "714000",
    "end": "716480"
  },
  {
    "text": "and the target database endpoint is ora",
    "start": "716480",
    "end": "719440"
  },
  {
    "text": "2x3 target",
    "start": "719440",
    "end": "722160"
  },
  {
    "text": "for migration type",
    "start": "722160",
    "end": "724399"
  },
  {
    "text": "we'll use migrate existing data",
    "start": "724399",
    "end": "727760"
  },
  {
    "text": "on the task settings section will leave",
    "start": "727760",
    "end": "730320"
  },
  {
    "text": "all default",
    "start": "730320",
    "end": "732000"
  },
  {
    "text": "but i will enable cloud watch logs",
    "start": "732000",
    "end": "735760"
  },
  {
    "text": "let's move the table mapping sections",
    "start": "735760",
    "end": "738079"
  },
  {
    "text": "we'll continue using these are the atk",
    "start": "738079",
    "end": "740000"
  },
  {
    "text": "model for this but once you get it",
    "start": "740000",
    "end": "742560"
  },
  {
    "text": "familiar and then you can use json",
    "start": "742560",
    "end": "745120"
  },
  {
    "text": "editor",
    "start": "745120",
    "end": "746560"
  },
  {
    "text": "for database migration service task",
    "start": "746560",
    "end": "749200"
  },
  {
    "text": "minimum we should have one selection",
    "start": "749200",
    "end": "751040"
  },
  {
    "text": "rules",
    "start": "751040",
    "end": "752000"
  },
  {
    "text": "click add new selection rule",
    "start": "752000",
    "end": "755040"
  },
  {
    "text": "for schema i will use tpch for this demo",
    "start": "755040",
    "end": "760399"
  },
  {
    "text": "if i want to migrate to every tables",
    "start": "761839",
    "end": "763680"
  },
  {
    "text": "under this schema i will leave percent",
    "start": "763680",
    "end": "766320"
  },
  {
    "text": "capture as a available card but for the",
    "start": "766320",
    "end": "768720"
  },
  {
    "text": "demo i only have one",
    "start": "768720",
    "end": "771839"
  },
  {
    "text": "which is orders table",
    "start": "771839",
    "end": "774079"
  },
  {
    "text": "for action",
    "start": "774079",
    "end": "775440"
  },
  {
    "text": "i use include",
    "start": "775440",
    "end": "777600"
  },
  {
    "text": "but i do want add a column filter",
    "start": "777600",
    "end": "780560"
  },
  {
    "text": "because i want to migrate my historical",
    "start": "780560",
    "end": "784000"
  },
  {
    "text": "data which is",
    "start": "784000",
    "end": "785560"
  },
  {
    "text": "1993 year of data",
    "start": "785560",
    "end": "788959"
  },
  {
    "text": "for column name i will use the other",
    "start": "788959",
    "end": "791360"
  },
  {
    "text": "date column",
    "start": "791360",
    "end": "794160"
  },
  {
    "text": "for condition i i'll choose equal or",
    "start": "797760",
    "end": "800560"
  },
  {
    "text": "between two values",
    "start": "800560",
    "end": "803600"
  },
  {
    "text": "19",
    "start": "803680",
    "end": "805360"
  },
  {
    "text": "92",
    "start": "805360",
    "end": "807519"
  },
  {
    "text": "january 1st",
    "start": "807519",
    "end": "809680"
  },
  {
    "text": "and",
    "start": "809680",
    "end": "810880"
  },
  {
    "text": "1993",
    "start": "810880",
    "end": "813440"
  },
  {
    "text": "generate first",
    "start": "813440",
    "end": "816160"
  },
  {
    "text": "then click save",
    "start": "816160",
    "end": "819199"
  },
  {
    "text": "i can see my task or a2 s3 demo status",
    "start": "819199",
    "end": "824000"
  },
  {
    "text": "is running",
    "start": "824000",
    "end": "825279"
  },
  {
    "text": "so far progress migrated the data",
    "start": "825279",
    "end": "828480"
  },
  {
    "text": "14",
    "start": "828480",
    "end": "830959"
  },
  {
    "text": "now status is showing load complete",
    "start": "830959",
    "end": "833519"
  },
  {
    "text": "let's click tasker identifier",
    "start": "833519",
    "end": "837279"
  },
  {
    "text": "going to a summary page click table",
    "start": "837279",
    "end": "839519"
  },
  {
    "text": "statistics",
    "start": "839519",
    "end": "841199"
  },
  {
    "text": "as we can see",
    "start": "841199",
    "end": "843040"
  },
  {
    "text": "weight total load 2.287",
    "start": "843040",
    "end": "847000"
  },
  {
    "text": "466 milliliters",
    "start": "847000",
    "end": "850880"
  },
  {
    "start": "849000",
    "end": "960000"
  },
  {
    "text": "let's use amazon asina to validate the",
    "start": "850880",
    "end": "853519"
  },
  {
    "text": "full load",
    "start": "853519",
    "end": "856560"
  },
  {
    "text": "on amazon as in the console",
    "start": "856560",
    "end": "859040"
  },
  {
    "text": "click query editor",
    "start": "859040",
    "end": "861440"
  },
  {
    "text": "i'll create amazon as in the external",
    "start": "861440",
    "end": "864079"
  },
  {
    "text": "table",
    "start": "864079",
    "end": "865040"
  },
  {
    "text": "under database ora 2x3 demo",
    "start": "865040",
    "end": "870000"
  },
  {
    "text": "this is my asean exclude table",
    "start": "870000",
    "end": "872880"
  },
  {
    "text": "or a2s3 demo definition",
    "start": "872880",
    "end": "876320"
  },
  {
    "text": "notice the four row for my designer",
    "start": "876320",
    "end": "879120"
  },
  {
    "text": "i use percrite hypothetical",
    "start": "879120",
    "end": "881680"
  },
  {
    "text": "that because one migrate the data from",
    "start": "881680",
    "end": "884240"
  },
  {
    "text": "rds oracle to s3 bucket ora to s3 demo i",
    "start": "884240",
    "end": "888959"
  },
  {
    "text": "use the date format it's perfect",
    "start": "888959",
    "end": "891839"
  },
  {
    "text": "click run query",
    "start": "891839",
    "end": "895040"
  },
  {
    "text": "query successful",
    "start": "896240",
    "end": "898880"
  },
  {
    "text": "my asina",
    "start": "898880",
    "end": "901360"
  },
  {
    "text": "table is created",
    "start": "901360",
    "end": "904320"
  },
  {
    "text": "now let's do a data validation i use sql",
    "start": "904320",
    "end": "907519"
  },
  {
    "text": "developer connect to my source database",
    "start": "907519",
    "end": "911199"
  },
  {
    "text": "remember we migrate",
    "start": "911199",
    "end": "913680"
  },
  {
    "text": "the data from the tpch order table",
    "start": "913680",
    "end": "916959"
  },
  {
    "text": "the order date between",
    "start": "916959",
    "end": "919279"
  },
  {
    "text": "to date",
    "start": "919279",
    "end": "920959"
  },
  {
    "text": "year 1992 january 1st",
    "start": "920959",
    "end": "924160"
  },
  {
    "text": "and",
    "start": "924160",
    "end": "924959"
  },
  {
    "text": "year 1983 january 1st",
    "start": "924959",
    "end": "927920"
  },
  {
    "text": "let's count how much total data we",
    "start": "927920",
    "end": "930000"
  },
  {
    "text": "should have migrated",
    "start": "930000",
    "end": "933040"
  },
  {
    "text": "so we should migrate the",
    "start": "935759",
    "end": "939040"
  },
  {
    "text": "four two 1.13423 five money rows",
    "start": "939040",
    "end": "942480"
  },
  {
    "text": "let's back to asian console from asina",
    "start": "942480",
    "end": "945279"
  },
  {
    "text": "console",
    "start": "945279",
    "end": "946639"
  },
  {
    "text": "let's query the asana table i just now",
    "start": "946639",
    "end": "948880"
  },
  {
    "text": "created",
    "start": "948880",
    "end": "950000"
  },
  {
    "text": "run query",
    "start": "950000",
    "end": "952720"
  },
  {
    "text": "as you can see we exactly get the same",
    "start": "952800",
    "end": "955199"
  },
  {
    "text": "records 1.34235",
    "start": "955199",
    "end": "958720"
  },
  {
    "text": "mini records",
    "start": "958720",
    "end": "961279"
  },
  {
    "text": "last demo i'll show you",
    "start": "961279",
    "end": "963199"
  },
  {
    "text": "how to use azina federated query to join",
    "start": "963199",
    "end": "966399"
  },
  {
    "text": "the table in amazon rds oracle and",
    "start": "966399",
    "end": "969120"
  },
  {
    "text": "archive the data in s3 daily",
    "start": "969120",
    "end": "973120"
  },
  {
    "text": "to be able to use the amazon azina",
    "start": "973360",
    "end": "975920"
  },
  {
    "text": "feather the query to query rds oracle",
    "start": "975920",
    "end": "978800"
  },
  {
    "text": "we need to create a custom azina data",
    "start": "978800",
    "end": "982000"
  },
  {
    "text": "source connector",
    "start": "982000",
    "end": "984240"
  },
  {
    "text": "we can leverage to use the serverless",
    "start": "984240",
    "end": "986480"
  },
  {
    "text": "application repository existing trans",
    "start": "986480",
    "end": "990480"
  },
  {
    "text": "oracle azena gdbc 12c",
    "start": "990480",
    "end": "994079"
  },
  {
    "text": "once your clicker choice oracle as in",
    "start": "994079",
    "end": "996160"
  },
  {
    "text": "gdbc 12c you'll come to the aws lambda",
    "start": "996160",
    "end": "999360"
  },
  {
    "text": "console on this lambda console you just",
    "start": "999360",
    "end": "1002000"
  },
  {
    "text": "need to follow application setting",
    "start": "1002000",
    "end": "1003920"
  },
  {
    "text": "wizard to provide all the necessary",
    "start": "1003920",
    "end": "1006399"
  },
  {
    "text": "information and click deploy",
    "start": "1006399",
    "end": "1008959"
  },
  {
    "text": "you will go to cloud formation",
    "start": "1008959",
    "end": "1011519"
  },
  {
    "text": "console to create",
    "start": "1011519",
    "end": "1014160"
  },
  {
    "text": "data source connector automatically for",
    "start": "1014160",
    "end": "1016399"
  },
  {
    "text": "you",
    "start": "1016399",
    "end": "1018160"
  },
  {
    "text": "on cloud formation console",
    "start": "1018160",
    "end": "1020240"
  },
  {
    "text": "you can see serverless repository choice",
    "start": "1020240",
    "end": "1023680"
  },
  {
    "text": "oracle",
    "start": "1023680",
    "end": "1024880"
  },
  {
    "text": "as in the gdp 12c stack",
    "start": "1024880",
    "end": "1028079"
  },
  {
    "text": "creates complete",
    "start": "1028079",
    "end": "1030959"
  },
  {
    "text": "from adapts the lambda console you can",
    "start": "1033679",
    "end": "1035918"
  },
  {
    "text": "see i have my function name called r8",
    "start": "1035919",
    "end": "1038079"
  },
  {
    "text": "connector",
    "start": "1038079",
    "end": "1039360"
  },
  {
    "text": "enable amazon athena to communicate with",
    "start": "1039360",
    "end": "1041839"
  },
  {
    "text": "database used dbc already ready",
    "start": "1041839",
    "end": "1046558"
  },
  {
    "text": "only as in the console",
    "start": "1048319",
    "end": "1050080"
  },
  {
    "text": "now i want to counter total audio",
    "start": "1050080",
    "end": "1052320"
  },
  {
    "text": "records currently older table in my",
    "start": "1052320",
    "end": "1055360"
  },
  {
    "text": "source rds oracle database i hold all",
    "start": "1055360",
    "end": "1058160"
  },
  {
    "text": "records by the year 1983. remember we",
    "start": "1058160",
    "end": "1061360"
  },
  {
    "text": "use the database migration service",
    "start": "1061360",
    "end": "1063440"
  },
  {
    "text": "migrates a 1993 record to the s3",
    "start": "1063440",
    "end": "1066480"
  },
  {
    "text": "daylight",
    "start": "1066480",
    "end": "1067679"
  },
  {
    "text": "after i verified the migration",
    "start": "1067679",
    "end": "1069679"
  },
  {
    "text": "successful",
    "start": "1069679",
    "end": "1071120"
  },
  {
    "text": "i deleted",
    "start": "1071120",
    "end": "1072480"
  },
  {
    "text": "the records from my sales database",
    "start": "1072480",
    "end": "1075919"
  },
  {
    "text": "and meanwhile",
    "start": "1075919",
    "end": "1077360"
  },
  {
    "text": "i have the azina table and pointed to",
    "start": "1077360",
    "end": "1079760"
  },
  {
    "text": "the x3 packet",
    "start": "1079760",
    "end": "1081679"
  },
  {
    "text": "where 1993 other records are stored",
    "start": "1081679",
    "end": "1087120"
  },
  {
    "text": "i will use the food join join these two",
    "start": "1087120",
    "end": "1090160"
  },
  {
    "text": "tables in that way i will get all my",
    "start": "1090160",
    "end": "1093440"
  },
  {
    "text": "other records now let's run this query",
    "start": "1093440",
    "end": "1097759"
  },
  {
    "text": "all right",
    "start": "1104320",
    "end": "1105360"
  },
  {
    "text": "we got the total records",
    "start": "1105360",
    "end": "1108520"
  },
  {
    "text": "2.46127 million records",
    "start": "1108520",
    "end": "1112559"
  },
  {
    "text": "for detail and security setup please",
    "start": "1112559",
    "end": "1115360"
  },
  {
    "text": "refer amazon as in the federated query",
    "start": "1115360",
    "end": "1118559"
  },
  {
    "text": "documentation for the details",
    "start": "1118559",
    "end": "1123000"
  },
  {
    "text": "this is a reference link used for this",
    "start": "1123039",
    "end": "1126000"
  },
  {
    "text": "video",
    "start": "1126000",
    "end": "1128400"
  },
  {
    "text": "let me give a summary for this demo",
    "start": "1129360",
    "end": "1131840"
  },
  {
    "text": "first we show you how to setup aws and",
    "start": "1131840",
    "end": "1134320"
  },
  {
    "text": "manage the oracle database at the south",
    "start": "1134320",
    "end": "1137039"
  },
  {
    "text": "set hub amazon s3 as a target for aws",
    "start": "1137039",
    "end": "1140080"
  },
  {
    "text": "dms we also created the aws dms to end",
    "start": "1140080",
    "end": "1144400"
  },
  {
    "text": "points and launch aws dms replication",
    "start": "1144400",
    "end": "1147600"
  },
  {
    "text": "instance",
    "start": "1147600",
    "end": "1148880"
  },
  {
    "text": "we created the aws dms migration task",
    "start": "1148880",
    "end": "1152240"
  },
  {
    "text": "and we use amazon azina for the data",
    "start": "1152240",
    "end": "1155120"
  },
  {
    "text": "validation we also use the amazon azina",
    "start": "1155120",
    "end": "1158240"
  },
  {
    "text": "federated query to join the table in",
    "start": "1158240",
    "end": "1160880"
  },
  {
    "text": "emerging rds oracle and the historical",
    "start": "1160880",
    "end": "1163679"
  },
  {
    "text": "data in s3 daily",
    "start": "1163679",
    "end": "1166000"
  },
  {
    "text": "thanks for watching",
    "start": "1166000",
    "end": "1167919"
  },
  {
    "text": "happy cloud computing from all of us",
    "start": "1167919",
    "end": "1170400"
  },
  {
    "text": "here at aws",
    "start": "1170400",
    "end": "1174200"
  }
]