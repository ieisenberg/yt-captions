[
  {
    "text": "good afternoon everybody my name is Gaurav perfect time to start a webinar hopefully all of you had lunch and",
    "start": "4130",
    "end": "10969"
  },
  {
    "text": "feeling sleepy let me do a quick introduction of myself I'm a Solutions",
    "start": "10969",
    "end": "16880"
  },
  {
    "text": "Architect here at Amazon and I specialize in service technology so I",
    "start": "16880",
    "end": "22220"
  },
  {
    "text": "write light writing code and solace creating web apps so with that in mind",
    "start": "22220",
    "end": "28460"
  },
  {
    "text": "let let us discuss what serverless is what it means to you what it means to",
    "start": "28460",
    "end": "33770"
  },
  {
    "text": "the business that we are in vice herbalists and where do we go from that",
    "start": "33770",
    "end": "39620"
  },
  {
    "text": "so what we are going to start is assuming that you've been a programmer you've been in technology for long",
    "start": "39620",
    "end": "45800"
  },
  {
    "text": "enough how the servlets come into play or is it one of those fashionable things",
    "start": "45800",
    "end": "51170"
  },
  {
    "text": "that one talks about when they're talking about technology right so let's",
    "start": "51170",
    "end": "57230"
  },
  {
    "text": "get started very quickly the points that I'd like to discuss and up what I'd also like to do is leave some time at the end",
    "start": "57230",
    "end": "63320"
  },
  {
    "text": "so that we can have an immersive question-and-answer session and possibly",
    "start": "63320",
    "end": "68810"
  },
  {
    "text": "walk you through code and do a few demos if possible if that sounds like a path let's get started this is what we are",
    "start": "68810",
    "end": "74509"
  },
  {
    "text": "going to discuss why server lists what does it mean to be service and if we go",
    "start": "74509",
    "end": "80420"
  },
  {
    "text": "through the contract what is an API what does the API gateway to what does it",
    "start": "80420",
    "end": "85460"
  },
  {
    "text": "have to offer why should we use API gateway so I I rather love speaking about why on every",
    "start": "85460",
    "end": "92810"
  },
  {
    "text": "topic more than the house because the how especially when it comes with AWS is very well documented then we will talk",
    "start": "92810",
    "end": "100070"
  },
  {
    "text": "about impedance mismatch of the number of requests coming in and the speed at",
    "start": "100070",
    "end": "105140"
  },
  {
    "text": "which we can crunch the responses so how do you decoupled the applications what are the queueing mechanisms what are the",
    "start": "105140",
    "end": "111079"
  },
  {
    "text": "broadcast mechanisms that we have using SNS sqs and then we are going to talk",
    "start": "111079",
    "end": "116810"
  },
  {
    "text": "about flows between application where we need to retake in-state and stateless applications and that's going to be done",
    "start": "116810",
    "end": "123950"
  },
  {
    "text": "using step functions we discuss x-ray the one which actually tells you or",
    "start": "123950",
    "end": "129229"
  },
  {
    "text": "guides you in finding or where you spend most of your time how's your application performing in real time then we are",
    "start": "129229",
    "end": "136610"
  },
  {
    "text": "talking about how to do those developments because we are going to do micro services we are going to go so bullets what is very important",
    "start": "136610",
    "end": "143450"
  },
  {
    "text": "is the outside of the things right and so we are going to discuss about Sam Sam",
    "start": "143450",
    "end": "148700"
  },
  {
    "text": "local we'll have a small description and design patterns we do very frankly it",
    "start": "148700",
    "end": "153800"
  },
  {
    "text": "merits an entire discussion or itself and and if the sufficient interest I'm",
    "start": "153800",
    "end": "160790"
  },
  {
    "text": "more than happy to discuss about how the applications are created how easy it is to create and what are the best",
    "start": "160790",
    "end": "167120"
  },
  {
    "text": "practices so that would be an advanced level session maybe for some other day depending on the interest so there will",
    "start": "167120",
    "end": "173180"
  },
  {
    "text": "be a pool at the end of it feel free to give your valuable inputs and then we can tune the entire webinar subsequently",
    "start": "173180",
    "end": "181100"
  },
  {
    "text": "for a gear for your areas of interest of course we'll have a question and answer session feel free to throw any sublets",
    "start": "181100",
    "end": "189740"
  },
  {
    "text": "questions at me and I'll try my best to give the most appropriate response or the places where you could find detailed",
    "start": "189740",
    "end": "196520"
  },
  {
    "text": "explanation on any of the topics all right let's discuss what it means to be serviced right so of us and for all",
    "start": "196520",
    "end": "206510"
  },
  {
    "text": "the 18 or years that I have been in development most of the time you know for every new project you've spent on is",
    "start": "206510",
    "end": "213830"
  },
  {
    "text": "on whether it should be an AMD server or Linux or sorry or an Intel server which",
    "start": "213830",
    "end": "220640"
  },
  {
    "text": "operating system should be nor not and then after that if you are a Java",
    "start": "220640",
    "end": "225769"
  },
  {
    "text": "developer you are again having a plethora of choices you know should I use Tomcat should I use JBoss WebLogic",
    "start": "225769",
    "end": "235269"
  },
  {
    "text": "also what doesn't really go out of your purview even if you're a developer is",
    "start": "235269",
    "end": "240799"
  },
  {
    "text": "what should be the sizing of the service how many do i procure so that there we are rightly sized even when the server's",
    "start": "240799",
    "end": "247670"
  },
  {
    "text": "retire and you are also responsible for securing your servers patching your",
    "start": "247670",
    "end": "253459"
  },
  {
    "text": "operating system making sure the sellers are met in terms of resilience and update this is typically not the",
    "start": "253459",
    "end": "261019"
  },
  {
    "text": "business that your company is it what you need to deliver typically at the end of the day is a business value to your",
    "start": "261019",
    "end": "268849"
  },
  {
    "text": "end customers which means you write new code you write better code you write code to service",
    "start": "268849",
    "end": "274020"
  },
  {
    "text": "your business users passing operating system makes your server secure but does",
    "start": "274020",
    "end": "279900"
  },
  {
    "text": "not add anything to your business what you do is you actually spend a lot of time to keep the lights on",
    "start": "279900",
    "end": "286770"
  },
  {
    "text": "which means you're looking backward and not forward you're not innovating on behalf of your customer and for your",
    "start": "286770",
    "end": "293160"
  },
  {
    "text": "customer only what you are also looking at is the operations part of things how do you maintain service this feeling",
    "start": "293160",
    "end": "299880"
  },
  {
    "text": "does not add any money or revenue to the bottom line of your car from free right",
    "start": "299880",
    "end": "305670"
  },
  {
    "text": "so how can I focus on the things that my customers need without having to focus",
    "start": "305670",
    "end": "311550"
  },
  {
    "text": "too much on the infrastructure so which is why we are discussing service now",
    "start": "311550",
    "end": "317700"
  },
  {
    "text": "here comes a big surprise you know surveillance does not mean that there are no servers the whole point of having",
    "start": "317700",
    "end": "323640"
  },
  {
    "text": "server list that you don't have to manage the service you focus on what matters to your business your company in",
    "start": "323640",
    "end": "330240"
  },
  {
    "text": "your customers so basically what you do is you write a piece of code and say hey",
    "start": "330240",
    "end": "336360"
  },
  {
    "text": "Amazon run it for me if there is no user and none of it will be running for you",
    "start": "336360",
    "end": "341640"
  },
  {
    "text": "there are millions of concurrent users there will be million concurrent executions of your pieces of code or",
    "start": "341640",
    "end": "348150"
  },
  {
    "text": "function which is running at a service right it is going to be highly available",
    "start": "348150",
    "end": "353580"
  },
  {
    "text": "because you don't really have to create a highly available architecture we've already created it for you and you don't",
    "start": "353580",
    "end": "359340"
  },
  {
    "text": "pay before any time your servers or your functions are not being executed so this",
    "start": "359340",
    "end": "364710"
  },
  {
    "text": "is how it runs right whenever somebody clicks a button wherever a file is kept in a an s3 bucket this is event driven",
    "start": "364710",
    "end": "371490"
  },
  {
    "text": "whenever an event occurs a function is invoked it executes for whatever number of milliseconds it has to execute and",
    "start": "371490",
    "end": "378660"
  },
  {
    "text": "then it ends when there's none of it running you don't pay your time when there are millions running you don't",
    "start": "378660",
    "end": "384870"
  },
  {
    "text": "have to create multiple servers at all and that's the real benefit you are focusing on a single threaded model of",
    "start": "384870",
    "end": "391320"
  },
  {
    "text": "the execution of your business school so let's take an example right you have a",
    "start": "391320",
    "end": "397290"
  },
  {
    "text": "three-tier web application the UI is rendered on a mobile app either through a browser or",
    "start": "397290",
    "end": "403640"
  },
  {
    "text": "through through a custom UI that you've created in the native operating system like an apk file in an Android operating",
    "start": "403640",
    "end": "410600"
  },
  {
    "text": "system you generally keep your business Diaries the consolidation layer on an",
    "start": "410600",
    "end": "415760"
  },
  {
    "text": "app server which is within your data center or on the innocuous clock right so you've written a piece of code which",
    "start": "415760",
    "end": "422390"
  },
  {
    "text": "is fronted through an API a gateway and the app server host that and the persistence tier is your database this",
    "start": "422390",
    "end": "429620"
  },
  {
    "text": "looks fine it looks like a three-tier architecture it looks like a simplistic architecture and it's mean practice",
    "start": "429620",
    "end": "434990"
  },
  {
    "text": "although when you are talking about it in terms of implementation this is how it will the content is cached closer to",
    "start": "434990",
    "end": "444590"
  },
  {
    "text": "your customer so that the rendering is faster using a CDN then for multiple",
    "start": "444590",
    "end": "449630"
  },
  {
    "text": "servers that you have across availability zones you've got an auto scaling cluster connected to a load",
    "start": "449630",
    "end": "456650"
  },
  {
    "text": "balancer which can add or remove burst the web servers depending on the demand",
    "start": "456650",
    "end": "462880"
  },
  {
    "text": "then the business logic is written into the application servers and so that you're not dependent on a single one",
    "start": "462880",
    "end": "468950"
  },
  {
    "text": "there's again a private load balancer distributing the load between the application servers incidentally in your",
    "start": "468950",
    "end": "476090"
  },
  {
    "text": "persistence tab if you have a relational database and for its acid properties you can write to a master and there's always",
    "start": "476090",
    "end": "482750"
  },
  {
    "text": "a slave sitting in the background getting real-time replicated all your",
    "start": "482750",
    "end": "487910"
  },
  {
    "text": "static content which is your dot HTML file in CSS JavaScript etc are stored",
    "start": "487910",
    "end": "494030"
  },
  {
    "text": "into s3 bucket and are rendered without servers altogether this is what a typical three-tier application has been",
    "start": "494030",
    "end": "501980"
  },
  {
    "text": "looking like or at least looks like on the AWS club there will be slightly different implementation if you are",
    "start": "501980",
    "end": "507710"
  },
  {
    "text": "hosting your own servers in data centers you'll also have to take care of the DR part or the concept of auto scaling",
    "start": "507710",
    "end": "515270"
  },
  {
    "text": "doesn't exist so you'll have to keep all the service running at all the time but or overall this is what it looks like",
    "start": "515270",
    "end": "522590"
  },
  {
    "text": "so how does it look like when you are making an application completely service alright this is all there is to it",
    "start": "522590",
    "end": "529400"
  },
  {
    "text": "mobile apps talk to an api gateway an api gateway host the contract offer a restful you",
    "start": "529400",
    "end": "536030"
  },
  {
    "text": "are so it you asked for this and if you are a ballad person asking for a piece of",
    "start": "536030",
    "end": "541069"
  },
  {
    "text": "information using restful that request is then passed on to the business dear the business tier is a piece of code for",
    "start": "541069",
    "end": "547220"
  },
  {
    "text": "retrieval processing storage etcetera is written in AWS lambda which is writing a",
    "start": "547220",
    "end": "554509"
  },
  {
    "text": "piece of code in a programming language of your choice but not really spinning it off as a service on a Windows",
    "start": "554509",
    "end": "561860"
  },
  {
    "text": "platform or a daemon service that is hosted on a Linux platform right you",
    "start": "561860",
    "end": "567290"
  },
  {
    "text": "just say take this code and run it from and depending on the number of service the number of sorry number of uses the",
    "start": "567290",
    "end": "574459"
  },
  {
    "text": "number of lambda functions would be executed and then you can go to your other services including the relational",
    "start": "574459",
    "end": "580550"
  },
  {
    "text": "database you could also now look at newer choices that you have at your fingertips like no sequel database like",
    "start": "580550",
    "end": "586579"
  },
  {
    "text": "DynamoDB right and now if you look at it when you run the entire mobile",
    "start": "586579",
    "end": "592189"
  },
  {
    "text": "application there is not a single server that you've spun off and so you're not really responsible for the operating",
    "start": "592189",
    "end": "598429"
  },
  {
    "text": "system patching the updates maintaining these servers uptime etcetera etcetera",
    "start": "598429",
    "end": "604819"
  },
  {
    "text": "if the server fails it's Amazon's responsibility it goes into the Amazon's responsibility in the shared security",
    "start": "604819",
    "end": "610910"
  },
  {
    "text": "model as well as the patching level this when it is implemented looks like this",
    "start": "610910",
    "end": "618199"
  },
  {
    "text": "deployment diagram you start again with",
    "start": "618199",
    "end": "623480"
  },
  {
    "text": "a DNS hosted on route 53 CloudFront now caches the low static contents which is",
    "start": "623480",
    "end": "630110"
  },
  {
    "text": "still hosted on s/3 s/3 is infinite storage at two and a half cents per GB",
    "start": "630110",
    "end": "636679"
  },
  {
    "text": "per month so that's practically free your website could be running even if it's say hypothetically runs into 300 MB",
    "start": "636679",
    "end": "643399"
  },
  {
    "text": "or 1gb doesn't cost you much the content is cached locally yet using cloud front",
    "start": "643399",
    "end": "650230"
  },
  {
    "text": "that hosts your website every button click on the website which requires some",
    "start": "650230",
    "end": "656299"
  },
  {
    "text": "business action is now forwarded to API gateway API gateway takes all the API",
    "start": "656299",
    "end": "662720"
  },
  {
    "text": "requests and then for the business translation business logic that you have written it's written in lambda",
    "start": "662720",
    "end": "669220"
  },
  {
    "text": "and the persistence is now done in dynamo D in dynamo DB you can talk at a table level granularity so you don't",
    "start": "669220",
    "end": "676750"
  },
  {
    "text": "really have to worry about schemas or database engines you can talk at a table",
    "start": "676750",
    "end": "682300"
  },
  {
    "text": "length so you can I do your current operation step authentication and authorization is then taken care over by",
    "start": "682300",
    "end": "688540"
  },
  {
    "text": "kognito and the token management is taken care by STS that's how simple it",
    "start": "688540",
    "end": "694180"
  },
  {
    "text": "is in the real life it becomes easy so when I go onto the demo part we will",
    "start": "694180",
    "end": "699250"
  },
  {
    "text": "also see how we have written code what are the other frameworks that are available to us to make this journey",
    "start": "699250",
    "end": "704949"
  },
  {
    "text": "easier for us all right so let's proceed how does a serverless application really",
    "start": "704949",
    "end": "710920"
  },
  {
    "text": "function first is the even now we are talking about event-driven architectures",
    "start": "710920",
    "end": "716230"
  },
  {
    "text": "what's in even a click from the user on the screen so it's either on the mobile",
    "start": "716230",
    "end": "722410"
  },
  {
    "text": "app or on a browser he splits the submit button that's an even change in the",
    "start": "722410",
    "end": "727449"
  },
  {
    "text": "state of data or change in the state of a resource which means a put in an s3",
    "start": "727449",
    "end": "733990"
  },
  {
    "text": "bucket could typically call invoke a lambda function but a trigger through a",
    "start": "733990",
    "end": "739120"
  },
  {
    "text": "cloud watch allow so if you want to react to your infrastructure related events you could do that and you could",
    "start": "739120",
    "end": "745300"
  },
  {
    "text": "do that using bespoke code since now your entire infrastructure is code on",
    "start": "745300",
    "end": "750370"
  },
  {
    "text": "AWS you can actually monitor and react to all those changes in the real time",
    "start": "750370",
    "end": "755889"
  },
  {
    "text": "using serverless applications and then you're not restricted to a single programming language we can use node.js",
    "start": "755889",
    "end": "762540"
  },
  {
    "text": "Python 2.7 to 3.6 Java 1.8 c-sharp or go",
    "start": "762540",
    "end": "768670"
  },
  {
    "text": "line as your programming languages and we are working continuously to add newer languages to each support so very",
    "start": "768670",
    "end": "775569"
  },
  {
    "text": "shortly if this your language is not clearly listed in it you already have a lot of documentation on how to induct",
    "start": "775569",
    "end": "781569"
  },
  {
    "text": "that language into a lambda function but we're going to natively support that as well in the coming time and then of",
    "start": "781569",
    "end": "788559"
  },
  {
    "text": "course you can go to a plethora of services more than 100 130 services that a Douglas provides to you so it could",
    "start": "788559",
    "end": "795610"
  },
  {
    "text": "not all from here go to Alec's based child pod or deep learning or kanessa streams or whichever",
    "start": "795610",
    "end": "802570"
  },
  {
    "text": "or your storage mechanism to progress onto the application and so this is our",
    "start": "802570",
    "end": "809020"
  },
  {
    "text": "typical serverless application functions however it is not all only about AWS aid",
    "start": "809020",
    "end": "816040"
  },
  {
    "text": "of Louis's lambda and API gateway there are many players in this execution thing",
    "start": "816040",
    "end": "822490"
  },
  {
    "text": "the compute side will discuss the business logic which is written in lambda then there is the messaging side",
    "start": "822490",
    "end": "829720"
  },
  {
    "text": "to it which is what we are going to discuss at a later point in the discussion then there's the API proxy or",
    "start": "829720",
    "end": "836260"
  },
  {
    "text": "the API contract between the caller and callee which is done through API gateway",
    "start": "836260",
    "end": "842760"
  },
  {
    "text": "orchestration how does the chain of events happen and who's responsible for what and how do you not write thread not",
    "start": "842760",
    "end": "850150"
  },
  {
    "text": "sleep in your application to make the same function sleep for a period of time is what we'll discuss in terms of",
    "start": "850150",
    "end": "855880"
  },
  {
    "text": "orchestration what calls what well and depending at what stage we are we can",
    "start": "855880",
    "end": "862900"
  },
  {
    "text": "also talk about the storage analytics and data base part of it but I have in the interest of time mark created an",
    "start": "862900",
    "end": "869980"
  },
  {
    "text": "extensive deck on back today but depending on the interest I will be glad to discuss those topics as well of",
    "start": "869980",
    "end": "876730"
  },
  {
    "text": "course what is important is once you start doing these service operations you will notice that you scale pretty fast",
    "start": "876730",
    "end": "883000"
  },
  {
    "text": "you write and deploy you go into your CI CD mode continuous integration and",
    "start": "883000",
    "end": "888430"
  },
  {
    "text": "continuous deployment so that your changes are fast what becomes more important is that everything then needs",
    "start": "888430",
    "end": "894670"
  },
  {
    "text": "to be automated you have to invest your time in writing unit tests you have to",
    "start": "894670",
    "end": "900400"
  },
  {
    "text": "write a spend time in creating your DevOps model so your changes are seamless and don't cause prix fixe so",
    "start": "900400",
    "end": "907300"
  },
  {
    "text": "we'll discuss that at some amount of detail students I hope this is what you",
    "start": "907300",
    "end": "912520"
  },
  {
    "text": "were expecting from the session today right so first thing first let's discuss",
    "start": "912520",
    "end": "917620"
  },
  {
    "text": "the API gate what does the API gateway I'll just read it up it's a fully",
    "start": "917620",
    "end": "923080"
  },
  {
    "text": "managed service that makes it easy for developers to create a contract to",
    "start": "923080",
    "end": "928540"
  },
  {
    "text": "publish the contract to consume the contract so maintain monitor and secure the",
    "start": "928540",
    "end": "935640"
  },
  {
    "text": "contract and this happens at scale so and you're charged by scale as well so",
    "start": "935640",
    "end": "941370"
  },
  {
    "text": "if you have no users typically hitting your platform you're paying on the entire server with less ecosystem would",
    "start": "941370",
    "end": "947190"
  },
  {
    "text": "be miniscule if at all and even at scale it scales infinitely theoretically",
    "start": "947190",
    "end": "952590"
  },
  {
    "text": "speaking right it can absorb the amount of load that you throw at it for your typical spikes what does a PA gateway",
    "start": "952590",
    "end": "961590"
  },
  {
    "text": "offer to you it's the one place where you offer the entire front end API",
    "start": "961590",
    "end": "967980"
  },
  {
    "text": "fronting for multiple micro services so now if you're dealing with say let's take a hypothetical example of an",
    "start": "967980",
    "end": "975440"
  },
  {
    "text": "offices internal portal so your HRMS as a micro service or your employee details",
    "start": "975440",
    "end": "981960"
  },
  {
    "text": "as a micro service and all the micro services that you are offering as a part of your organization I was single place",
    "start": "981960",
    "end": "988860"
  },
  {
    "text": "where you can see the API contract what do I need to pass to a particular",
    "start": "988860",
    "end": "994170"
  },
  {
    "text": "function to get a typical response how what are the number of micro services",
    "start": "994170",
    "end": "999510"
  },
  {
    "text": "available within the organization that I can consume you need because the developers will be disparate and in",
    "start": "999510",
    "end": "1006530"
  },
  {
    "text": "separate teams the single unified contracts the single unified a parent it",
    "start": "1006530",
    "end": "1011540"
  },
  {
    "text": "is essential to know what can be consumed any amis tone API gateways exactly is that then the best view that",
    "start": "1011540",
    "end": "1021470"
  },
  {
    "text": "we can actually mitigate a DDoS attack is by actually absorbing the entire",
    "start": "1021470",
    "end": "1026930"
  },
  {
    "text": "exhausting the attacker and absorbing the load so you could multiple ways of",
    "start": "1026930",
    "end": "1032390"
  },
  {
    "text": "doing this right first thing is that an api gateway will have cloud front sitting in front of it",
    "start": "1032390",
    "end": "1038300"
  },
  {
    "text": "so there's a content delivery network sitting in front of all the static requests are then taken care at the edge",
    "start": "1038300",
    "end": "1044688"
  },
  {
    "text": "itself so not even hitting the api gateway to exhaust it the second thing",
    "start": "1044689",
    "end": "1050600"
  },
  {
    "text": "that you have under your control is a mechanism for throttling you can say that the number of concurrent requests",
    "start": "1050600",
    "end": "1056690"
  },
  {
    "text": "that I want a particular set of unsigned users to have is this and then after",
    "start": "1056690",
    "end": "1062660"
  },
  {
    "text": "that every additional that you get gets throttled out of the",
    "start": "1062660",
    "end": "1067910"
  },
  {
    "text": "system so this is important because sometimes what happens is your server the Seco system is able to scale and",
    "start": "1067910",
    "end": "1074660"
  },
  {
    "text": "finitely but if you are using something that is constrained by the hardware infrastructure say that you have got a",
    "start": "1074660",
    "end": "1080570"
  },
  {
    "text": "relational database which has got a few CPUs or if your code runs very CPU intensive queries or memory intensive",
    "start": "1080570",
    "end": "1086870"
  },
  {
    "text": "queries you might actually break tied down at the end of it for that not to happen",
    "start": "1086870",
    "end": "1092240"
  },
  {
    "text": "you have got rattling ID at the beginning of the application itself so",
    "start": "1092240",
    "end": "1097940"
  },
  {
    "text": "your entire ecosystem doesn't get shaken off if there's a DDoS attack also what better place to have the entire and",
    "start": "1097940",
    "end": "1105380"
  },
  {
    "text": "authentication and authorization control being implemented rather than that API",
    "start": "1105380",
    "end": "1110570"
  },
  {
    "text": "gateway so every invocation of a contract and a PA gets a challenge",
    "start": "1110570",
    "end": "1115910"
  },
  {
    "text": "through cognate or if you use that and lambda functions if you choose to write",
    "start": "1115910",
    "end": "1120919"
  },
  {
    "text": "bespoke code for authentication and authorization you've got both the options available to you at Amazon's API",
    "start": "1120919",
    "end": "1127669"
  },
  {
    "text": "gateway so you can now create the contract and authentication and authorization at an API gateway and then",
    "start": "1127669",
    "end": "1135290"
  },
  {
    "text": "of course provide privileges of who can do what through Cognito of course when",
    "start": "1135290",
    "end": "1141049"
  },
  {
    "text": "you go live you also want to do a monitoring at real time of how my application or my API is getting",
    "start": "1141049",
    "end": "1147679"
  },
  {
    "text": "consumed so you can throttle meter and monetize your apex what I mean by",
    "start": "1147679",
    "end": "1153290"
  },
  {
    "text": "monetize these things you can have multiple tiers of your users right so if",
    "start": "1153290",
    "end": "1158510"
  },
  {
    "text": "you've got a free tier service you might not want the best level or the highest",
    "start": "1158510",
    "end": "1163640"
  },
  {
    "text": "priority to be available to them you want to throttle them at five thousand concurrent users in the free tier but",
    "start": "1163640",
    "end": "1171110"
  },
  {
    "text": "the paying customers need to get a better priority and a better experience so that is what you can do by creating",
    "start": "1171110",
    "end": "1178820"
  },
  {
    "text": "various stages within your API gateway",
    "start": "1178820",
    "end": "1186880"
  },
  {
    "text": "so API gate were actually broken down into multiple sub components looks like",
    "start": "1187150",
    "end": "1193340"
  },
  {
    "text": "this whenever an API call happens typically it comes to an Amazon CloudFront",
    "start": "1193340",
    "end": "1199220"
  },
  {
    "text": "the Syrian Network the APA gateway also caches results if you want to depending",
    "start": "1199220",
    "end": "1206420"
  },
  {
    "text": "on the TTL and the cache result can be given out much faster rather than executing code every time you ask for",
    "start": "1206420",
    "end": "1213670"
  },
  {
    "text": "everything is being monitored using cloud watch so you can see the graph in almost real-time though not real-time",
    "start": "1213670",
    "end": "1220430"
  },
  {
    "text": "with sufficient amount of details saying how many of these users were throttled",
    "start": "1220430",
    "end": "1226880"
  },
  {
    "text": "how many of them received errors what was the success rate and concurrency the",
    "start": "1226880",
    "end": "1233120"
  },
  {
    "text": "execution of course can be dependent on various modes of execution so we've got",
    "start": "1233120",
    "end": "1239390"
  },
  {
    "text": "about 50 odd services which directly can talk to any Pik to it like for an example you could if you want to do a",
    "start": "1239390",
    "end": "1246860"
  },
  {
    "text": "create or update delete operation only in dynamodb you need no write code for",
    "start": "1246860",
    "end": "1253460"
  },
  {
    "text": "that right from the api gateway directly into dynamo DB you could write code and",
    "start": "1253460",
    "end": "1258530"
  },
  {
    "text": "these examples are available to you but a lot of time what you have to do is write some business logic between a",
    "start": "1258530",
    "end": "1264890"
  },
  {
    "text": "storage layer and your API gateway and that's where typically an AWS lambda",
    "start": "1264890",
    "end": "1271460"
  },
  {
    "text": "function comes into play but you're not just restricted to lambda you could now choose ec2 service if you choose so or",
    "start": "1271460",
    "end": "1278180"
  },
  {
    "text": "if you want you could go to doc arised containers right and what happens is",
    "start": "1278180",
    "end": "1285980"
  },
  {
    "text": "your journey is a continuous one at some point in time version 1.0 is out in the",
    "start": "1285980",
    "end": "1291200"
  },
  {
    "text": "production but you are continuously creating newer versions so you can create a state at any point in time so",
    "start": "1291200",
    "end": "1297110"
  },
  {
    "text": "your version 2.0 is not proud it is in development and you can create these",
    "start": "1297110",
    "end": "1302840"
  },
  {
    "text": "stages and then expose them to various and through various endpoint so you can have any stages as per your normal",
    "start": "1302840",
    "end": "1309830"
  },
  {
    "text": "fletcher for example it could create a dam stage it's where you're trying out your latest code and prod which is",
    "start": "1309830",
    "end": "1317480"
  },
  {
    "text": "exposed to your end customers you also have something called a scanner a deployment so he can actually test out",
    "start": "1317480",
    "end": "1323960"
  },
  {
    "text": "your new code to a small set of users and then gradually make that as the de",
    "start": "1323960",
    "end": "1329420"
  },
  {
    "text": "facto code so that first should get some amount of confidence that the latest piece of code is working through",
    "start": "1329420",
    "end": "1336620"
  },
  {
    "text": "an API contract when they pay equipment and then make it production and make available to everyone what this means is",
    "start": "1336620",
    "end": "1344210"
  },
  {
    "text": "that the impact of failure is reduced only a small set of people will get affected if it doesn't work as per it",
    "start": "1344210",
    "end": "1350900"
  },
  {
    "text": "was expected right and then once it runs a spurred your expectation just call",
    "start": "1350900",
    "end": "1357140"
  },
  {
    "text": "that as God and everything works authorization can be done in multiple",
    "start": "1357140",
    "end": "1362960"
  },
  {
    "text": "ways one is when there is a business-to-business API call you could",
    "start": "1362960",
    "end": "1368240"
  },
  {
    "text": "exchange API keys and those keys itself act as the authorization between",
    "start": "1368240",
    "end": "1374270"
  },
  {
    "text": "services that's a service to service level con the second part you could also do is identity and access management",
    "start": "1374270",
    "end": "1380630"
  },
  {
    "text": "based authorization and that's for users off which are created within the AWS",
    "start": "1380630",
    "end": "1387159"
  },
  {
    "text": "account that you have created through I am but the more popular way of",
    "start": "1387159",
    "end": "1392350"
  },
  {
    "text": "terrorization is either using kognito which is used for authentication and",
    "start": "1392350",
    "end": "1397610"
  },
  {
    "text": "authorization or writing your own bespoke code through lambda so all these",
    "start": "1397610",
    "end": "1402860"
  },
  {
    "text": "options are available when it comes to Cognito you can not only create your own create and maintain your own use of food",
    "start": "1402860",
    "end": "1409730"
  },
  {
    "text": "because it is a managed to use a directory by itself it can provide a hosted UI so you need not so what I",
    "start": "1409730",
    "end": "1416570"
  },
  {
    "text": "specialize in UI because I'm not too great in creating screens is creating a login screen basically all that it has",
    "start": "1416570",
    "end": "1423320"
  },
  {
    "text": "is a used box for username a box for password and two hyperlinks one is",
    "start": "1423320",
    "end": "1428419"
  },
  {
    "text": "submit and the other is for what password but you don't want to create there's no the brownie points for",
    "start": "1428419",
    "end": "1435740"
  },
  {
    "text": "creating a login screen or a login screens are basically the same right all that they have differently is a CSS and",
    "start": "1435740",
    "end": "1442700"
  },
  {
    "text": "a logo of your own company so kognito inbuilt provides a hosted UI where you",
    "start": "1442700",
    "end": "1448340"
  },
  {
    "text": "can do your color is your own white labeling but it provides the same details out of the box itself and we",
    "start": "1448340",
    "end": "1454760"
  },
  {
    "text": "actually have a demo on that today then cognate also offers Federation of",
    "start": "1454760",
    "end": "1461830"
  },
  {
    "text": "credentials to all the popular providers like goo Facebook Amazon's thing and if you are",
    "start": "1461830",
    "end": "1468279"
  },
  {
    "text": "into Active Directory you can use Active Directory Federation services and salmon for that and the entire exchange of",
    "start": "1468279",
    "end": "1477220"
  },
  {
    "text": "security tokens happens through the standard token exchange between the",
    "start": "1477220",
    "end": "1482929"
  },
  {
    "text": "service provider and service consumer so it gives us four to four I so manage",
    "start": "1482929",
    "end": "1491000"
  },
  {
    "text": "user directory incognito provides as we discussed login and controls for",
    "start": "1491000",
    "end": "1497059"
  },
  {
    "text": "creating or creating new user sending them SMS is so on so forth then the",
    "start": "1497059",
    "end": "1504409"
  },
  {
    "text": "hosted UI automatically provides the entire user flow course from sign up to confirm for what password to two-factor",
    "start": "1504409",
    "end": "1512419"
  },
  {
    "text": "authentication so on so forth and Federation is available to use that",
    "start": "1512419",
    "end": "1518440"
  },
  {
    "text": "right the community of course also integrates not directly and not just",
    "start": "1518440",
    "end": "1523580"
  },
  {
    "text": "directly through your application but you could also print it with your credential services in AWS or through a",
    "start": "1523580",
    "end": "1531740"
  },
  {
    "text": "load balance and if you choose to so features that Cognito provides is usage",
    "start": "1531740",
    "end": "1539059"
  },
  {
    "text": "plans to throttle or monetize your aps caching responses if you need to do a",
    "start": "1539059",
    "end": "1544580"
  },
  {
    "text": "small level of data transformations so like the case we discussed right the API call comes in in a complete restful way",
    "start": "1544580",
    "end": "1551990"
  },
  {
    "text": "but for putting data in DynamoDB you might want to do a few alterations to the entire question might want to add",
    "start": "1551990",
    "end": "1558409"
  },
  {
    "text": "the table name etcetera all of that can be done using velocity template libraries with an API gateway itself it",
    "start": "1558409",
    "end": "1565190"
  },
  {
    "text": "provides a lot of security features including DDoS protection authentication",
    "start": "1565190",
    "end": "1570320"
  },
  {
    "text": "logging request validation and much more let's move on to aid of this lambda what",
    "start": "1570320",
    "end": "1576860"
  },
  {
    "text": "is AWS lambda you can run code without having to manage servers and the entire",
    "start": "1576860",
    "end": "1582350"
  },
  {
    "text": "infrastructure you can scale you can monitor and can automate an entire suite",
    "start": "1582350",
    "end": "1587480"
  },
  {
    "text": "of reactions and actions on behalf of you the great thing about is is that",
    "start": "1587480",
    "end": "1594049"
  },
  {
    "text": "there's no infrastructure to manage so you write your code and say run it me second thing is you pay for what you",
    "start": "1594049",
    "end": "1600419"
  },
  {
    "text": "use or what your end-users use so if there's nobody invoking your lambda function there's no cost that is being",
    "start": "1600419",
    "end": "1607890"
  },
  {
    "text": "incurred this is a great way to experiment as well you write a new piece of code you run it as a lambda function if there's an unexpected amount of",
    "start": "1607890",
    "end": "1615269"
  },
  {
    "text": "success that you've had no problems you don't really have to scale for it",
    "start": "1615269",
    "end": "1620519"
  },
  {
    "text": "because it scales infinitely automatically and then if there are no users unfortunately it did cost your",
    "start": "1620519",
    "end": "1627330"
  },
  {
    "text": "business anything of faith field experiment can still remain life and wait for the right time for for it to",
    "start": "1627330",
    "end": "1634200"
  },
  {
    "text": "catch up so it is very cost effective and efficient on that part and then you can bring your own code languages we do",
    "start": "1634200",
    "end": "1640559"
  },
  {
    "text": "not mandate anything on that so what are the languages that we support we go from no Jase's 4 point 0 to 8 Java 8 Python",
    "start": "1640559",
    "end": "1649740"
  },
  {
    "text": "2.7 3.6 C sharp which is cold dotnet code 1 and 2 and gulang is something",
    "start": "1649740",
    "end": "1657029"
  },
  {
    "text": "that we introduce so it doesn't become too complex when you want to actually we're near talking about server because",
    "start": "1657029",
    "end": "1663210"
  },
  {
    "text": "you talk about the amount of CPU the amount of RAM the amount of network bandwidth the amount of available disk",
    "start": "1663210",
    "end": "1669090"
  },
  {
    "text": "space and so on so for your what you do is you've got a single dial single knob",
    "start": "1669090",
    "end": "1674519"
  },
  {
    "text": "to control and that is rap and everything is directly proportional to the amount of RAM and you can change the",
    "start": "1674519",
    "end": "1680220"
  },
  {
    "text": "RAM from 128 MB all the way to 3 GB and there are people who are doing high",
    "start": "1680220",
    "end": "1685470"
  },
  {
    "text": "performance compute using lamp by itself and there are frameworks created to that",
    "start": "1685470",
    "end": "1690570"
  },
  {
    "text": "if you are interested in that have a look at something called a spy ring on github it is fellows pyw are he right",
    "start": "1690570",
    "end": "1698510"
  },
  {
    "text": "the best way of executing any application is possibly all synchronous",
    "start": "1698510",
    "end": "1703980"
  },
  {
    "text": "and I am making a very debatable statement but both of the models are",
    "start": "1703980",
    "end": "1709230"
  },
  {
    "text": "available to you when you're doing lambda invocations synchronous by a direct API call through an API gateway",
    "start": "1709230",
    "end": "1715409"
  },
  {
    "text": "or lambda invocation through its SDK or asynchronous where you get the callback",
    "start": "1715409",
    "end": "1720450"
  },
  {
    "text": "object in which you can write your piece of code of course not only can you",
    "start": "1720450",
    "end": "1726510"
  },
  {
    "text": "throttle at the API gateway level but if you're using lambda directly you can throttle at the lambda level",
    "start": "1726510",
    "end": "1731860"
  },
  {
    "text": "function level as well and lambda as its nature is is completely stateless right",
    "start": "1731860",
    "end": "1737830"
  },
  {
    "text": "you invoke a function you pass two and three to a summation function it adds those numbers returns and it forgets",
    "start": "1737830",
    "end": "1744340"
  },
  {
    "text": "everything so create your entire application in a stateless manner so you get request response and if there is any",
    "start": "1744340",
    "end": "1749440"
  },
  {
    "text": "for assistance leave it to the persistence tab so this how you would get started write your code zip it up",
    "start": "1749440",
    "end": "1755799"
  },
  {
    "text": "upload it to lambda and then you choose the amount of memory requirements and",
    "start": "1755799",
    "end": "1761590"
  },
  {
    "text": "throttling requirements and all of that you can get started within minutes a lambda function looks like this in any",
    "start": "1761590",
    "end": "1768820"
  },
  {
    "text": "language that you write you pass two objects this one is the event object whatever the caller has done so if you",
    "start": "1768820",
    "end": "1775390"
  },
  {
    "text": "passing it through an API gateway the entire API rest even is passed on to the",
    "start": "1775390",
    "end": "1781000"
  },
  {
    "text": "event object and context in which the lambda function is remaining running is passed to you that is the metadata for",
    "start": "1781000",
    "end": "1787570"
  },
  {
    "text": "the function it's faster in the context object and then all you have to do is return an object that's that's all there",
    "start": "1787570",
    "end": "1793660"
  },
  {
    "text": "is to it so this is how a function looks in node.js and this is the asynchronous",
    "start": "1793660",
    "end": "1801070"
  },
  {
    "text": "code where you get the callback object itself and that's it that's that's a completely is running in lambda function",
    "start": "1801070",
    "end": "1807400"
  },
  {
    "text": "starting from exports not handless so all the way to the curly braces in three lines you're up and running so what all",
    "start": "1807400",
    "end": "1815590"
  },
  {
    "text": "can generate events which can be handled by lambda so on the endpoints if you're",
    "start": "1815590",
    "end": "1820870"
  },
  {
    "text": "talking about chat pods even the Amazon Alex our ecosystem works on lambda which",
    "start": "1820870",
    "end": "1826059"
  },
  {
    "text": "is where your business logic is directed so everything from an object put in s3",
    "start": "1826059",
    "end": "1832419"
  },
  {
    "text": "dynamodb changes if you're using into Rio if you're into real-time events Genesis",
    "start": "1832419",
    "end": "1838690"
  },
  {
    "text": "can trigger event processing through lambda authentication authorization",
    "start": "1838690",
    "end": "1844410"
  },
  {
    "text": "bespoke core can be written within lambda if you if you are into stored procedures in relational databases and",
    "start": "1844410",
    "end": "1851679"
  },
  {
    "text": "you're using Aurora those toxins are written in lambdas where endpoints",
    "start": "1851679",
    "end": "1856780"
  },
  {
    "text": "through Alex I pay a gateway or even the IOT system are can be done in that",
    "start": "1856780",
    "end": "1863679"
  },
  {
    "text": "on the infrastructure side itself if you want to talk about reacting to changes",
    "start": "1863679",
    "end": "1868960"
  },
  {
    "text": "on the AWS ecosystem that can be invoked through lambda where you can code for",
    "start": "1868960",
    "end": "1874929"
  },
  {
    "text": "the infrastructure changes in lana and then of course sqs SNS on all the even",
    "start": "1874929",
    "end": "1881380"
  },
  {
    "text": "driven system including crannie events which is can you do in jasper time can",
    "start": "1881380",
    "end": "1886750"
  },
  {
    "text": "be done using that and then that's all that you do you don't have to think",
    "start": "1886750",
    "end": "1892630"
  },
  {
    "text": "about how many concurrent execution you write for a single threaded model you don't think about how many users there",
    "start": "1892630",
    "end": "1898179"
  },
  {
    "text": "are and there are not for you to do initial sizing it scales automatically",
    "start": "1898179",
    "end": "1904210"
  },
  {
    "text": "and you're not don't even worry about the memory the Rams which we're how of",
    "start": "1904210",
    "end": "1909909"
  },
  {
    "text": "that more even the operating system don't think don't write something that",
    "start": "1909909",
    "end": "1914950"
  },
  {
    "text": "is dependent on the operating system write your code natively and you are not even bothered about things like voice",
    "start": "1914950",
    "end": "1921220"
  },
  {
    "text": "patching it's a classic right there's a concern there's a debatable statement",
    "start": "1921220",
    "end": "1927970"
  },
  {
    "text": "that I actually made is for you to write good infinitely scalable applications",
    "start": "1927970",
    "end": "1934870"
  },
  {
    "text": "you need to decouple them so that the number of requests and response the",
    "start": "1934870",
    "end": "1940480"
  },
  {
    "text": "amount of the speed at which you respond are not dependent on each other how do",
    "start": "1940480",
    "end": "1945820"
  },
  {
    "text": "you decouple this application by using a queuing mechanism so sqs was one of the",
    "start": "1945820",
    "end": "1951909"
  },
  {
    "text": "first services that aw is launched and it does QE it is a really simple",
    "start": "1951909",
    "end": "1956950"
  },
  {
    "text": "queueing service as the name goes so there is a producer producing data at a",
    "start": "1956950",
    "end": "1963880"
  },
  {
    "text": "certain speed and a consumer that is able to consume data at a different speed so to prevent one speed affecting",
    "start": "1963880",
    "end": "1971440"
  },
  {
    "text": "the other you use a queue in between so that failure on one side doesn't really affect the failure on the other side so",
    "start": "1971440",
    "end": "1979150"
  },
  {
    "text": "that it's exactly what the queuing mechanisms to SNS is a publishing it's a",
    "start": "1979150",
    "end": "1986049"
  },
  {
    "text": "notification service so publisher publishes to a topic all the listeners",
    "start": "1986049",
    "end": "1991540"
  },
  {
    "text": "to the topic get affected as soon as an event is published to the topic so you can respond to that top thick or",
    "start": "1991540",
    "end": "1999030"
  },
  {
    "text": "the subscription to the topic either by putting the data in a queue in SQS or sending out an email and SMS or writing",
    "start": "1999030",
    "end": "2006230"
  },
  {
    "text": "a bespoke amount of code which is written of course in lambda in queue",
    "start": "2006230",
    "end": "2012070"
  },
  {
    "text": "mechanism what happens is that there is a FIFO or non people queue and you put",
    "start": "2012070",
    "end": "2017390"
  },
  {
    "text": "data in that and so processor processes it at its own speed and the Creator the",
    "start": "2017390",
    "end": "2022760"
  },
  {
    "text": "publisher publishes the data in its own speed here all that you have to be",
    "start": "2022760",
    "end": "2028540"
  },
  {
    "text": "cognizant of is that it till you are not working on a real-time system there are",
    "start": "2028540",
    "end": "2034190"
  },
  {
    "text": "other ways of getting to make this work in a real-time system that's typically",
    "start": "2034190",
    "end": "2039350"
  },
  {
    "text": "using kinases as it you write again what you have to note in both is Q's and S&S",
    "start": "2039350",
    "end": "2047120"
  },
  {
    "text": "is that now you're working but using the Q for Q or a publish/subscribe mechanism",
    "start": "2047120",
    "end": "2052399"
  },
  {
    "text": "for itself and not really bothering about how to set it up how many servers how is it highly available or resilient",
    "start": "2052400",
    "end": "2059510"
  },
  {
    "text": "so on so forth that's how it easy it is you create a queue you start using it using the API or an GSD can your",
    "start": "2059510",
    "end": "2066500"
  },
  {
    "text": "favorite programming language so which leaves you more time for doing your own business specific code your business",
    "start": "2066500",
    "end": "2073520"
  },
  {
    "text": "innovation let's talk about writing multi-step applications what all",
    "start": "2073520",
    "end": "2079520"
  },
  {
    "text": "applications are created by in a request response module there are a lot of",
    "start": "2079520",
    "end": "2085010"
  },
  {
    "text": "decisions that have to be taken and those make require of workflow there are",
    "start": "2085010",
    "end": "2090350"
  },
  {
    "text": "at times various actors that are required how do you do that that is step functions basically what we have done is",
    "start": "2090350",
    "end": "2097420"
  },
  {
    "text": "create a stateful lifecycle in a stateless execution piece of code so",
    "start": "2097420",
    "end": "2104960"
  },
  {
    "text": "your stateless execution could be typically a lamp type function pass me this data and I'll give you a response",
    "start": "2104960",
    "end": "2110720"
  },
  {
    "text": "but what makes an entire flow to that you typically require say for an",
    "start": "2110720",
    "end": "2115820"
  },
  {
    "text": "internal application like leave management there is a maker checker check where there are various entities in one there's certain amount of",
    "start": "2115820",
    "end": "2122770"
  },
  {
    "text": "decision-making involved in that depending on the type of employee there is right and all those decisions are not",
    "start": "2122770",
    "end": "2129170"
  },
  {
    "text": "we coded within a lambda function or there are weight states which are required or",
    "start": "2129170",
    "end": "2135200"
  },
  {
    "text": "there is parallelization that is required you would not do that inside a lambda function you would rather create",
    "start": "2135200",
    "end": "2140630"
  },
  {
    "text": "a life cycle and that long time cycle for the execution system instead functions right all that you do is",
    "start": "2140630",
    "end": "2147740"
  },
  {
    "text": "create a JSON file saying that these are my this is my start state these are my",
    "start": "2147740",
    "end": "2153920"
  },
  {
    "text": "intermediate stage this is the dependency model and you create that using a JSON language that we've created",
    "start": "2153920",
    "end": "2159740"
  },
  {
    "text": "it's called as Amazon States language the one to your left side is a sample definition of how it looks like once",
    "start": "2159740",
    "end": "2166760"
  },
  {
    "text": "you've created the valid JSON you get a visualization of the entire step",
    "start": "2166760",
    "end": "2172609"
  },
  {
    "text": "function as it as as it is and then I run time for every flew you can see the",
    "start": "2172609",
    "end": "2179300"
  },
  {
    "text": "path that was actually taken and the details on that path either it is successful it is in",
    "start": "2179300",
    "end": "2185540"
  },
  {
    "text": "progress or it is a failure you will get a color-coded graph for that so this is",
    "start": "2185540",
    "end": "2191900"
  },
  {
    "text": "no easy it is very frankly to get started with step functions the vertices",
    "start": "2191900",
    "end": "2197450"
  },
  {
    "text": "the arrows are the step functions the business logic can be written either in AWS lambda or if you prefer writing and",
    "start": "2197450",
    "end": "2205220"
  },
  {
    "text": "on the server on Prem or an ec2 so that choice is still yours right so what are",
    "start": "2205220",
    "end": "2212569"
  },
  {
    "text": "the types of activities that you can do one is of course go from start to finish in a linear way in a set of sequential",
    "start": "2212569",
    "end": "2218810"
  },
  {
    "text": "steps so that each of these sequential steps are modules which can be reused across various applications right then",
    "start": "2218810",
    "end": "2227990"
  },
  {
    "text": "there's of course branching there's a decision-making lambda function right after the start which is the Select",
    "start": "2227990",
    "end": "2234170"
  },
  {
    "text": "image converter and then you Brayton specific pieces which convert either raw",
    "start": "2234170",
    "end": "2239720"
  },
  {
    "text": "to JPEG or rot of PNG depending on the choice so there is branching available and if you've written flowcharts",
    "start": "2239720",
    "end": "2246140"
  },
  {
    "text": "previously this is the diamond part of the flowchart that it and of course you've got parallelization",
    "start": "2246140",
    "end": "2252230"
  },
  {
    "text": "so if you've got three actions to be done independent of each other you would rather paralyze for faster",
    "start": "2252230",
    "end": "2258470"
  },
  {
    "text": "execution so all of that is available to you through Jason this is are you typically this is",
    "start": "2258470",
    "end": "2267680"
  },
  {
    "text": "a complete JSON for a hello world example if you are unsure of how to get",
    "start": "2267680",
    "end": "2273800"
  },
  {
    "text": "started go on to aws.amazon.com or log on to your account and there are a lot",
    "start": "2273800",
    "end": "2278930"
  },
  {
    "text": "of blueprints available one of them is the hello world blueprint that you are seeing on the console and yeah of course",
    "start": "2278930",
    "end": "2287180"
  },
  {
    "text": "you can run one in parallel so you have a leave management application if you want if one person applies for a leave",
    "start": "2287180",
    "end": "2293720"
  },
  {
    "text": "and there's an entire workflow to that one person's step function is executed",
    "start": "2293720",
    "end": "2298820"
  },
  {
    "text": "or you could have million such life cycles happening in parallel for a million of your employees at any given",
    "start": "2298820",
    "end": "2305660"
  },
  {
    "text": "point in time there are seven steps I don't want to go into much detail on",
    "start": "2305660",
    "end": "2311240"
  },
  {
    "text": "this one task a choice a parallel wait failed succeed or pass so instead of",
    "start": "2311240",
    "end": "2317750"
  },
  {
    "text": "writing wait States inside your lambda function you're paying by the 100 milliseconds count in lambda you would",
    "start": "2317750",
    "end": "2324470"
  },
  {
    "text": "write the H say it's in step functions instead of doing a thread dot that's not a good design pattern and this is how",
    "start": "2324470",
    "end": "2330859"
  },
  {
    "text": "your execution gets monitored from the console of course all of these logs are",
    "start": "2330859",
    "end": "2335900"
  },
  {
    "text": "available to you as well if you want to use another tool for monitoring so the choice is yours",
    "start": "2335900",
    "end": "2342490"
  },
  {
    "text": "so let's go into x-ray now that you've written application you want to see how",
    "start": "2342490",
    "end": "2348710"
  },
  {
    "text": "it behaves at runtime and that's what x-ray comes x-ray basically traces",
    "start": "2348710",
    "end": "2354109"
  },
  {
    "text": "requests from the inception stage if you use an HTTP header you can put the x-ray",
    "start": "2354109",
    "end": "2360349"
  },
  {
    "text": "header into that rise from that - aw lambda where you find out where the time",
    "start": "2360349",
    "end": "2368210"
  },
  {
    "text": "was spent within the function or and all the way to your persistence tier so you want to know what happened to a",
    "start": "2368210",
    "end": "2374720"
  },
  {
    "text": "particular query it actually takes the entire record traces and for a specific",
    "start": "2374720",
    "end": "2381890"
  },
  {
    "text": "one a few of them you can choose a few as well if you introduce that into the HTTP header you can then see how the",
    "start": "2381890",
    "end": "2388880"
  },
  {
    "text": "execution was where your code actually spent a lot of time and then you can analyze the issues",
    "start": "2388880",
    "end": "2395500"
  },
  {
    "text": "in your application I try and time for random sampling so this is an example right this is a graph so a web app made",
    "start": "2395500",
    "end": "2404680"
  },
  {
    "text": "a request to an API gateway which is where it spent an average of 294",
    "start": "2404680",
    "end": "2409750"
  },
  {
    "text": "milliseconds and then what the amount of time that was taken in dynamodb tables",
    "start": "2409750",
    "end": "2417810"
  },
  {
    "text": "scorekeeper score keep - user or each of these things SNS invocations etc so you",
    "start": "2417810",
    "end": "2426580"
  },
  {
    "text": "did a split of where your application is actually executing your time which is very important especially if you are in",
    "start": "2426580",
    "end": "2433930"
  },
  {
    "text": "the customer facing environment where your business users experience depends on how the application performs so now",
    "start": "2433930",
    "end": "2441040"
  },
  {
    "text": "you have a granular level view of it and you know where to spend your bulk of your time in optimization without money",
    "start": "2441040",
    "end": "2447180"
  },
  {
    "text": "right and there you go you get an s3 trace and you also get to know where",
    "start": "2447180",
    "end": "2453310"
  },
  {
    "text": "your failures occurred so now you know that there was a 404 for an s3 put and",
    "start": "2453310",
    "end": "2458470"
  },
  {
    "text": "that's that's where you need to focus that's the thing that failed for your application and that makes it easier for",
    "start": "2458470",
    "end": "2465490"
  },
  {
    "text": "writing and debugging application so if you have not hired or look at x-ray especially with if you're using AWS",
    "start": "2465490",
    "end": "2470710"
  },
  {
    "text": "lambda it's just a check in the box but the results that you get will deep insight it's about the application",
    "start": "2470710",
    "end": "2477550"
  },
  {
    "text": "behavior so here's the explanation of how the graph behaves right the lambda",
    "start": "2477550",
    "end": "2483880"
  },
  {
    "text": "code that executed spent a total of 1.9 second first it spent a certain amount",
    "start": "2483880",
    "end": "2490000"
  },
  {
    "text": "of time which is mentioned as school will start in starting the lambda function which happens when a new container is initialized and after that",
    "start": "2490000",
    "end": "2497350"
  },
  {
    "text": "the execution time is then shown to you about 585 milliseconds for the",
    "start": "2497350",
    "end": "2503950"
  },
  {
    "text": "initialization of your function then X 3 put took 1.8 of your self now then",
    "start": "2503950",
    "end": "2509770"
  },
  {
    "text": "you'll have to make sure that you optimize for your customer expectations when you when you see all these details",
    "start": "2509770",
    "end": "2516310"
  },
  {
    "text": "but having these details actually helps you write better code at the end of the day this is how it looks when an async",
    "start": "2516310",
    "end": "2524110"
  },
  {
    "text": "and vocation happens let me skip this part in the interest of time let me actually",
    "start": "2524110",
    "end": "2529359"
  },
  {
    "text": "you to a squid in this will it's going to SAP sir Willis application model because when you write code you",
    "start": "2529359",
    "end": "2535210"
  },
  {
    "text": "typically when you're talking service you're talking about a doubles not always do you actually have to go to",
    "start": "2535210",
    "end": "2541660"
  },
  {
    "text": "the cloud when you're developing the application you can use Sam which is an",
    "start": "2541660",
    "end": "2547359"
  },
  {
    "text": "abstraction layer on cloud formation what it basically does for you is that you can write it really simple JSON file",
    "start": "2547359",
    "end": "2555369"
  },
  {
    "text": "or a ml file to define what your service infrastructure is all about right and",
    "start": "2555369",
    "end": "2560829"
  },
  {
    "text": "then you can execute that locally by invoking the Sam command line interface",
    "start": "2560829",
    "end": "2566739"
  },
  {
    "text": "Sam CLI and then you can test your entire code on your laptop itself using",
    "start": "2566739",
    "end": "2572319"
  },
  {
    "text": "docker ice container so you'll have to install a docker on your laptop and then get started with Sam CLI so that you can",
    "start": "2572319",
    "end": "2578230"
  },
  {
    "text": "actually write code test code locally before you put it on the clock and once",
    "start": "2578230",
    "end": "2583930"
  },
  {
    "text": "you do that what you have at your disposal is three basic resources",
    "start": "2583930",
    "end": "2589089"
  },
  {
    "text": "creation of a function where you can now tell the amount of memory that you want to allocate it the time out the runtime",
    "start": "2589089",
    "end": "2596220"
  },
  {
    "text": "then you have the API API can be embedded within the lambda itself and of",
    "start": "2596220",
    "end": "2601359"
  },
  {
    "text": "course if you want to create tables that is available to you as well",
    "start": "2601359",
    "end": "2607589"
  },
  {
    "text": "so a simple API just looks like this you have one in front of you all that you",
    "start": "2607589",
    "end": "2612640"
  },
  {
    "text": "say is that this is my service function I have written it in the method that",
    "start": "2612640",
    "end": "2618069"
  },
  {
    "text": "gets invoked is the index tort Handler the code is written in node.js 4.3 and",
    "start": "2618069",
    "end": "2623799"
  },
  {
    "text": "this is where I've kept the full of the code which is local underscore folder when does it get invoked on any path",
    "start": "2623799",
    "end": "2632289"
  },
  {
    "text": "called a slash it gets invoked so and",
    "start": "2632289",
    "end": "2639099"
  },
  {
    "text": "then within the API you can now tell me with this stage whether it is the dev stage juoh T stage etc you'll also",
    "start": "2639099",
    "end": "2645730"
  },
  {
    "text": "provide the roles and privileges for the lambda function to execute and water can",
    "start": "2645730",
    "end": "2651309"
  },
  {
    "text": "do so that's that's pretty much a salmon shot it's a very very interesting topic",
    "start": "2651309",
    "end": "2657069"
  },
  {
    "text": "if you're going in micro-services I strongly urge you to get Sam now there are a few design",
    "start": "2657069",
    "end": "2664890"
  },
  {
    "text": "patterns that you can talk about this is the service proxy pattern I hurried through these a bit because",
    "start": "2664890",
    "end": "2671760"
  },
  {
    "text": "these are advanced level topics I would rather spend a lot of time with you and Q&A and I'll also show you a quick demo",
    "start": "2671760",
    "end": "2677880"
  },
  {
    "text": "on how these can be done so I'll I'll quickly scan through these this is the service proxy where API gateway fronts a",
    "start": "2677880",
    "end": "2685260"
  },
  {
    "text": "lot of back-end services provides a unified contract for all the services that you provide to your customers in it",
    "start": "2685260",
    "end": "2693359"
  },
  {
    "text": "then this is the real-time data processing where data at real time from multiple sources like IOT devices a lot",
    "start": "2693359",
    "end": "2701069"
  },
  {
    "text": "of servers is ingested at scale through kinases firehose the data is then given",
    "start": "2701069",
    "end": "2706710"
  },
  {
    "text": "into amazon skin necessary lytx or a negative lewis lambda function where you make sense of the real-time streaming",
    "start": "2706710",
    "end": "2713520"
  },
  {
    "text": "data in real time to provide responses the data is then either persisted in a",
    "start": "2713520",
    "end": "2719160"
  },
  {
    "text": "in a petabyte scale warehouse like redshift or no sequel database like",
    "start": "2719160",
    "end": "2724369"
  },
  {
    "text": "dynamodb or if you want to persist it over along the period of time to make longer-term decisions of the data usage",
    "start": "2724369",
    "end": "2730740"
  },
  {
    "text": "patterns you'd shove it into a series by creating a data link then your data scientists come and analyze the data",
    "start": "2730740",
    "end": "2737250"
  },
  {
    "text": "without really creating an entire a root ecosystem but I think queries on the fly and getting them executed using tools",
    "start": "2737250",
    "end": "2744000"
  },
  {
    "text": "like Athena and a lot of real-time data processing requests are happening today",
    "start": "2744000",
    "end": "2749069"
  },
  {
    "text": "errors are going like because the whole barriers of cost and the difficulty of",
    "start": "2749069",
    "end": "2754200"
  },
  {
    "text": "executing the entire infrastructure is going away trend this is the IOT",
    "start": "2754200",
    "end": "2760740"
  },
  {
    "text": "ecosystem if you've used IA WSI OT earlier in that business a lot of things",
    "start": "2760740",
    "end": "2766319"
  },
  {
    "text": "in IOT send data over a low latency platform like NQ TT and then you",
    "start": "2766319",
    "end": "2772859"
  },
  {
    "text": "subscribe to the topic and you react to everything that happens depend on the server side using AWS IOT you write",
    "start": "2772859",
    "end": "2780210"
  },
  {
    "text": "rules for actually invoking which process to get in both depending on the condition and you can write your bespoke",
    "start": "2780210",
    "end": "2786839"
  },
  {
    "text": "code either in lambda or you can react to events using excuse and SNS",
    "start": "2786839",
    "end": "2793849"
  },
  {
    "text": "for irobot they're using they're actually adding millions of users and",
    "start": "2796590",
    "end": "2802090"
  },
  {
    "text": "they're doing an automated Roombas which is a vacuum-cleaner robotic vacuum",
    "start": "2802090",
    "end": "2808000"
  },
  {
    "text": "cleaner and this is their architecture diagram about how does a new robot get registered into their ecosystem how does",
    "start": "2808000",
    "end": "2814690"
  },
  {
    "text": "it send data in real time how does it learn over a period of time we have not",
    "start": "2814690",
    "end": "2819850"
  },
  {
    "text": "really watched the videos I strongly recommend for you to go and watch those videos then make excellent case studies",
    "start": "2819850",
    "end": "2826720"
  },
  {
    "text": "so let me very quickly now go onto a demo to explain how this all works in",
    "start": "2826720",
    "end": "2833620"
  },
  {
    "text": "the real time just give me a second",
    "start": "2833620",
    "end": "2845880"
  },
  {
    "text": "scream there you are",
    "start": "2849550",
    "end": "2855850"
  },
  {
    "text": "I hope you can see my screen here",
    "start": "2863010",
    "end": "2869720"
  },
  {
    "text": "okay this is my browser so what I created is a very simple web application",
    "start": "2892110",
    "end": "2898400"
  },
  {
    "text": "now all that it does it creates employees it gets employed as you can",
    "start": "2898400",
    "end": "2903930"
  },
  {
    "text": "update and edit and employ the interesting thing about this is that the entire application is completely surveillance this website that you are",
    "start": "2903930",
    "end": "2911160"
  },
  {
    "text": "seeing is hosted on s3 it contains of I have created it using a view DOJ's now",
    "start": "2911160",
    "end": "2918000"
  },
  {
    "text": "if you need to do any of these operations you need to log in so as soon as I press the login button this is the",
    "start": "2918000",
    "end": "2924630"
  },
  {
    "text": "UI that I have created automatically without writing a single piece of code using kognito I put in my credentials",
    "start": "2924630",
    "end": "2932280"
  },
  {
    "text": "this entire user management is done using kognito I press in it and I'm into",
    "start": "2932280",
    "end": "2937530"
  },
  {
    "text": "the application as guru so here now I instead of saying the login button I see logger once I press this button it",
    "start": "2937530",
    "end": "2944910"
  },
  {
    "text": "gives a call to an API gateway which calls a lambda function fetches all the details from a DynamoDB table then of",
    "start": "2944910",
    "end": "2952800"
  },
  {
    "text": "course you can go and create sorry I have not created validations on this one",
    "start": "2952800",
    "end": "2961430"
  },
  {
    "text": "random user and there you go create there you go random user got created you",
    "start": "2961820",
    "end": "2969300"
  },
  {
    "text": "can now go and delete this that's how simple it is the application can be really created using code which is as",
    "start": "2969300",
    "end": "2976020"
  },
  {
    "text": "small as this this is all there is to it a single line app dot PI file and now",
    "start": "2976020",
    "end": "2983580"
  },
  {
    "text": "I'm saying that if the employee so if you want to get all the employees all",
    "start": "2983580",
    "end": "2990570"
  },
  {
    "text": "the URI employees on the API gateway this is created using a framework called",
    "start": "2990570",
    "end": "2995730"
  },
  {
    "text": "as chalice it gets you started on the entire a service ecosystem and gives you",
    "start": "2995730",
    "end": "3001220"
  },
  {
    "text": "a flask like a behavior if you are into Python and you get started within 20",
    "start": "3001220",
    "end": "3006260"
  },
  {
    "text": "minutes on the entire ecosystem of serverless it creates API is for you it",
    "start": "3006260",
    "end": "3011960"
  },
  {
    "text": "creates the lambda functions for you and deploys them as well you can test this locally as well using",
    "start": "3011960",
    "end": "3017600"
  },
  {
    "text": "San Cielo so that's all there is to it you know if there is a delete method that is called on a particular phone",
    "start": "3017600",
    "end": "3023750"
  },
  {
    "text": "number the user is deleted if there is a put request you then first find the right",
    "start": "3023750",
    "end": "3031570"
  },
  {
    "text": "user and then you update the user a post creates a new user and this is a listing",
    "start": "3031570",
    "end": "3040840"
  },
  {
    "text": "of all the users once you've created this entire server side of code which is",
    "start": "3040840",
    "end": "3045880"
  },
  {
    "text": "78 ESS seventy nine lines long you're up and running without writing servers",
    "start": "3045880",
    "end": "3051430"
  },
  {
    "text": "without writing operating system specific things and you just deploy from the command line that shalosh provides",
    "start": "3051430",
    "end": "3057190"
  },
  {
    "text": "chalice is an encapsulation in Python similarly there is server list for no J's there is so beuliss for Java and all",
    "start": "3057190",
    "end": "3065950"
  },
  {
    "text": "that and then on top of it if you are into any specific UI angular react",
    "start": "3065950",
    "end": "3071590"
  },
  {
    "text": "etcetera use the package called as amplify to create your client side code",
    "start": "3071590",
    "end": "3077080"
  },
  {
    "text": "and all that you need is created so this is all there is in the UI franking which",
    "start": "3077080",
    "end": "3082300"
  },
  {
    "text": "I have created using Bude objects and",
    "start": "3082300",
    "end": "3087550"
  },
  {
    "text": "your applications get up and running within no time whatsoever alright so from here where I'd like to",
    "start": "3087550",
    "end": "3095080"
  },
  {
    "text": "go is to the question answer session if you are interested in specifics of this",
    "start": "3095080",
    "end": "3100270"
  },
  {
    "text": "I'm more than happy to take that and the question and answers as well so let's proceed to the last part which is Q&A",
    "start": "3100270",
    "end": "3109440"
  },
  {
    "text": "any questions feel free to actually put it in the question tab of your webinar",
    "start": "3109680",
    "end": "3118810"
  },
  {
    "text": "meeting right in the meanwhile thanks a",
    "start": "3118810",
    "end": "3124000"
  },
  {
    "text": "lot for joining I hope you enjoyed the show your your feedback is very valuable to us keep me in the know so yeah for",
    "start": "3124000",
    "end": "3132820"
  },
  {
    "text": "the next eight ten",
    "start": "3132820",
    "end": "3135990"
  }
]