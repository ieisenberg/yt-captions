[
  {
    "text": "In this video, you’ll see how to modernize your \naudit log management using AWS CloudTrail Lake.  ",
    "start": "480",
    "end": "5338"
  },
  {
    "text": "With this platform, you can create a managed \nimmutable data lake of CloudTrail audit logs,  ",
    "start": "5840",
    "end": "10400"
  },
  {
    "text": "simplify CloudTrail analysis workflows, and \noptimize your logs for analysis and query.",
    "start": "10400",
    "end": "14914"
  },
  {
    "text": "To get started, let’s navigate to CloudTrail Lake.",
    "start": "17118",
    "end": "19608"
  },
  {
    "text": "CloudTrail Lake integrates collection, \nstorage, preparation, and optimization",
    "start": "21188",
    "end": "25039"
  },
  {
    "text": "for analysis and query in the same product.",
    "start": "25040",
    "end": "27284"
  },
  {
    "text": "This removes the need to maintain separate data \nprocessing pipelines that span across teams",
    "start": "27837",
    "end": "31866"
  },
  {
    "text": "and products to analyze CloudTrail events.",
    "start": "31866",
    "end": "34176"
  },
  {
    "text": "The first thing we’ll need to do \nis create an event data store.",
    "start": "35787",
    "end": "38427"
  },
  {
    "text": "Let’s specify a name for our new event data store.",
    "start": "40827",
    "end": "43200"
  },
  {
    "text": "By default, event data is retained for the \nmaximum period of seven years, or 2,555 days.  ",
    "start": "44800",
    "end": "50624"
  },
  {
    "text": "We'll retain the default.",
    "start": "51038",
    "end": "52000"
  },
  {
    "text": "Let’s collect information for \nall accounts in our organization.",
    "start": "53337",
    "end": "56017"
  },
  {
    "text": "We also have the option to add tags.",
    "start": "58168",
    "end": "59939"
  },
  {
    "text": "In this case, let’s just move on.",
    "start": "59939",
    "end": "61528"
  },
  {
    "text": "Here we can specify which events we want to collect.",
    "start": "63157",
    "end": "65486"
  },
  {
    "text": "Let’s choose to collect both \nmanagement events and data events.",
    "start": "65752",
    "end": "68537"
  },
  {
    "text": "Next, we’ll need to specify the \ntype of data event we want to log.",
    "start": "71040",
    "end": "74278"
  },
  {
    "text": "For this example, we’ll select Amazon \nSimple Storage Service (Amazon S3).",
    "start": "74278",
    "end": "78249"
  },
  {
    "text": "Next, we’ll specify a log selector template.",
    "start": "81248",
    "end": "83488"
  },
  {
    "text": "We can customize the types of events we want to collect.",
    "start": "85077",
    "end": "87456"
  },
  {
    "text": "In this case, we’ll log events for the DeleteObject operation.",
    "start": "89909",
    "end": "92945"
  },
  {
    "text": "We could then go further and specify that we only want to",
    "start": "102338",
    "end": "104626"
  },
  {
    "text": "collect these DeleteObject events for a specific S3 bucket.",
    "start": "104626",
    "end": "107918"
  },
  {
    "text": "However, for the purposes of this example,",
    "start": "110558",
    "end": "112400"
  },
  {
    "text": "let’s go back and specify that we’re \nonly logging management events.",
    "start": "112400",
    "end": "115360"
  },
  {
    "text": "Let’s review the configuration \nand create the event data store.",
    "start": "117877",
    "end": "120517"
  },
  {
    "text": "Once the event data store has been created, \nCloudTrail Lake will begin recording all events  ",
    "start": "124338",
    "end": "128319"
  },
  {
    "text": "defined or specified during the creation \nprocess, and we’ll be able to query them.",
    "start": "128320",
    "end": "132057"
  },
  {
    "text": "For now, we’ll query an existing event data store.",
    "start": "132867",
    "end": "135272"
  },
  {
    "text": "Let’s take a look at some sample queries we can use.",
    "start": "135638",
    "end": "137746"
  },
  {
    "text": "Let’s select this first query, ",
    "start": "139157",
    "end": "140640"
  },
  {
    "text": "which finds all principal IDs who called \na particular API in a given date range.",
    "start": "140640",
    "end": "144887"
  },
  {
    "text": "On the left, we can see which \nevent data store will be queried.",
    "start": "146597",
    "end": "149345"
  },
  {
    "text": "In the editor, we can modify the SQL query as \nneeded to get the information we’re looking for.",
    "start": "149848",
    "end": "153954"
  },
  {
    "text": "Let’s modify the date range.",
    "start": "154536",
    "end": "155879"
  },
  {
    "text": "We’ll also change the API operation \nto StartAutomationExecution.",
    "start": "160167",
    "end": "163808"
  },
  {
    "text": "Let’s run the query.",
    "start": "166557",
    "end": "167374"
  },
  {
    "text": "As you can see, 200 records matched our query.",
    "start": "171378",
    "end": "173798"
  },
  {
    "text": "Let’s expand the “Response” section to see more.",
    "start": "174252",
    "end": "176548"
  },
  {
    "text": "Notice that nearly 780,000 records were scanned,",
    "start": "179059",
    "end": "181927"
  },
  {
    "text": "or about 550 megabytes within 6.7 seconds,",
    "start": "181927",
    "end": "185192"
  },
  {
    "text": "which is approximately 81.8 megabytes per second.",
    "start": "185192",
    "end": "188103"
  },
  {
    "text": "Let’s take look at the query results.",
    "start": "188488",
    "end": "190057"
  },
  {
    "text": "Here are the principal IDs that invoked \nthe StartAutomationExecution API ",
    "start": "191807",
    "end": "195440"
  },
  {
    "text": "within the date range that we specified.",
    "start": "195440",
    "end": "197376"
  },
  {
    "text": "Let’s try another sample query.",
    "start": "199136",
    "end": "200576"
  },
  {
    "text": "We’ll select this query, which finds \nthe number of API calls that were  ",
    "start": "201938",
    "end": "204960"
  },
  {
    "text": "grouped by event name and event \nsource within a given date range.",
    "start": "204960",
    "end": "208077"
  },
  {
    "text": "Let’s make sure we’re querying the preexisting \nevent data store, not the one we just created.",
    "start": "209956",
    "end": "214226"
  },
  {
    "text": "Next, we’ll modify the date range and run the query.",
    "start": "216641",
    "end": "219000"
  },
  {
    "text": "Let’s check the command output.",
    "start": "226317",
    "end": "227677"
  },
  {
    "text": "We’ll expand the “Response” section again to see how",
    "start": "228787",
    "end": "230937"
  },
  {
    "text": "quickly CloudTrail Lake was able to query the information.",
    "start": "230937",
    "end": "233707"
  },
  {
    "text": "In this case, it scanned over \n800,000 records in 3.3 seconds.",
    "start": "234498",
    "end": "238280"
  },
  {
    "text": "Let’s view the query results.",
    "start": "238803",
    "end": "240204"
  },
  {
    "text": "Right away, we can see that the S3 API call \nPutObject was called more than 150,000  ",
    "start": "242058",
    "end": "246899"
  },
  {
    "text": "times within the date range we specified.",
    "start": "246899",
    "end": "248888"
  },
  {
    "text": "Now let’s create our own query.",
    "start": "250087",
    "end": "251472"
  },
  {
    "text": "We’ll look for all S3 presigned URLs that \nhave been created within a given time range.",
    "start": "254746",
    "end": "259066"
  },
  {
    "text": "Forty-three records matched.",
    "start": "262000",
    "end": "263438"
  },
  {
    "text": "Let’s look at the results.",
    "start": "263438",
    "end": "264487"
  },
  {
    "text": "Here we can review who created these S3 presigned URLs.",
    "start": "265517",
    "end": "268717"
  },
  {
    "text": "Let’s save this query so we can reuse it in the future.",
    "start": "269487",
    "end": "271807"
  },
  {
    "text": "We’ll simply enter a name and \ndescription, and then save the query.",
    "start": "273567",
    "end": "276456"
  },
  {
    "text": "Now we can find our query in the Saved queries tab.",
    "start": "282207",
    "end": "284836"
  },
  {
    "text": "We can select our query and run it again, as necessary.",
    "start": "286746",
    "end": "289499"
  },
  {
    "text": "But if we just want to get the results from a recently \nperformed query, we can go to the Results history tab.",
    "start": "289923",
    "end": "294582"
  },
  {
    "text": "Here we can see all of the queries that \nwere performed within the last seven days.",
    "start": "296397",
    "end": "299620"
  },
  {
    "text": "Let’s reopen the most recent one.",
    "start": "299837",
    "end": "301208"
  },
  {
    "text": "Here are the query results we were reviewing previously.",
    "start": "303106",
    "end": "305577"
  },
  {
    "text": "You’ve just seen how to modernize your audit \nlog management using AWS CloudTrail Lake.",
    "start": "309716",
    "end": "313876"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "315006",
    "end": "318207"
  },
  {
    "text": "Thanks for watching. Now it's your turn to try.",
    "start": "318207",
    "end": "320093"
  }
]