[
  {
    "text": "to breed life to the components we need",
    "start": "240",
    "end": "2720"
  },
  {
    "text": "to bind data and events to them",
    "start": "2720",
    "end": "5759"
  },
  {
    "text": "let's start with enough component",
    "start": "5759",
    "end": "8480"
  },
  {
    "text": "click the component and click configure",
    "start": "8480",
    "end": "12320"
  },
  {
    "text": "click the root of the component",
    "start": "12320",
    "end": "14480"
  },
  {
    "text": "and click add prop beside the component",
    "start": "14480",
    "end": "16640"
  },
  {
    "text": "properties",
    "start": "16640",
    "end": "17920"
  },
  {
    "text": "the navbar needs a username to display",
    "start": "17920",
    "end": "20800"
  },
  {
    "text": "an auth text to show whether we need to",
    "start": "20800",
    "end": "23359"
  },
  {
    "text": "sign out to sign in",
    "start": "23359",
    "end": "25680"
  },
  {
    "text": "an avatar for the user",
    "start": "25680",
    "end": "27920"
  },
  {
    "text": "and the handle auth event handler which",
    "start": "27920",
    "end": "30560"
  },
  {
    "text": "is going to be of type event handler",
    "start": "30560",
    "end": "33680"
  },
  {
    "text": "these props are top level props and we",
    "start": "33680",
    "end": "36239"
  },
  {
    "text": "need to drill them into individual",
    "start": "36239",
    "end": "38399"
  },
  {
    "text": "elements for rendering",
    "start": "38399",
    "end": "40239"
  },
  {
    "text": "for example we need to hide the user",
    "start": "40239",
    "end": "42559"
  },
  {
    "text": "component if the user is not logged in",
    "start": "42559",
    "end": "46239"
  },
  {
    "text": "that said we need to set a display child",
    "start": "46239",
    "end": "49200"
  },
  {
    "text": "probe",
    "start": "49200",
    "end": "50239"
  },
  {
    "text": "click add prop beside the child probe",
    "start": "50239",
    "end": "52640"
  },
  {
    "text": "and select display from the prop list",
    "start": "52640",
    "end": "55520"
  },
  {
    "text": "we want it to be a conditional so click",
    "start": "55520",
    "end": "58239"
  },
  {
    "text": "on the drop down menu and select add",
    "start": "58239",
    "end": "60480"
  },
  {
    "text": "conditional we want to check if the",
    "start": "60480",
    "end": "62719"
  },
  {
    "text": "username equals none",
    "start": "62719",
    "end": "64559"
  },
  {
    "text": "if so we would set the display to none",
    "start": "64559",
    "end": "67760"
  },
  {
    "text": "if not we would leave it to its default",
    "start": "67760",
    "end": "70479"
  },
  {
    "text": "which is flex for the avatar text we",
    "start": "70479",
    "end": "73439"
  },
  {
    "text": "need to set the label to whatever text",
    "start": "73439",
    "end": "75680"
  },
  {
    "text": "we passed down using the avatar prop we",
    "start": "75680",
    "end": "78720"
  },
  {
    "text": "set on the parent",
    "start": "78720",
    "end": "81040"
  },
  {
    "text": "same thing goes for the username which",
    "start": "81040",
    "end": "83439"
  },
  {
    "text": "we will set to the username that was",
    "start": "83439",
    "end": "85840"
  },
  {
    "text": "passed down from the nav component",
    "start": "85840",
    "end": "88560"
  },
  {
    "text": "for the button we need to set the label",
    "start": "88560",
    "end": "91119"
  },
  {
    "text": "to author text",
    "start": "91119",
    "end": "92720"
  },
  {
    "text": "and also the unclick event to the handle",
    "start": "92720",
    "end": "95360"
  },
  {
    "text": "auth will pass down from the nav",
    "start": "95360",
    "end": "97040"
  },
  {
    "text": "component",
    "start": "97040",
    "end": "98240"
  },
  {
    "text": "the hero component should only expect",
    "start": "98240",
    "end": "100640"
  },
  {
    "text": "one prop",
    "start": "100640",
    "end": "101759"
  },
  {
    "text": "which is the event handler that it will",
    "start": "101759",
    "end": "104240"
  },
  {
    "text": "call when we click the button",
    "start": "104240",
    "end": "106560"
  },
  {
    "text": "select the button and set one click to",
    "start": "106560",
    "end": "109360"
  },
  {
    "text": "the handle click event will pass down",
    "start": "109360",
    "end": "112320"
  },
  {
    "text": "the suite component is like the hero",
    "start": "112320",
    "end": "114240"
  },
  {
    "text": "component since it takes a handle click",
    "start": "114240",
    "end": "117040"
  },
  {
    "text": "event for the button but you can also",
    "start": "117040",
    "end": "119280"
  },
  {
    "text": "pass a url for the banner image",
    "start": "119280",
    "end": "122000"
  },
  {
    "text": "select the image and set the source to",
    "start": "122000",
    "end": "124320"
  },
  {
    "text": "the banner prop with past",
    "start": "124320",
    "end": "126320"
  },
  {
    "text": "and also set the unclick handler to the",
    "start": "126320",
    "end": "128399"
  },
  {
    "text": "handle click event handler now let's",
    "start": "128399",
    "end": "130800"
  },
  {
    "text": "look at something more interesting",
    "start": "130800",
    "end": "133280"
  },
  {
    "text": "we can bind data directly from our",
    "start": "133280",
    "end": "135360"
  },
  {
    "text": "database so we don't have to rely on",
    "start": "135360",
    "end": "137680"
  },
  {
    "text": "only static data",
    "start": "137680",
    "end": "139520"
  },
  {
    "text": "click the testimony component and add a",
    "start": "139520",
    "end": "142000"
  },
  {
    "text": "component prop called testimonial model",
    "start": "142000",
    "end": "145599"
  },
  {
    "text": "this prop will be of model type",
    "start": "145599",
    "end": "147599"
  },
  {
    "text": "testimonial",
    "start": "147599",
    "end": "149440"
  },
  {
    "text": "and once you've done this all the child",
    "start": "149440",
    "end": "152000"
  },
  {
    "text": "elements will have access to all the",
    "start": "152000",
    "end": "154080"
  },
  {
    "text": "rows in testimonial table",
    "start": "154080",
    "end": "156400"
  },
  {
    "text": "for example we can set the source of the",
    "start": "156400",
    "end": "159200"
  },
  {
    "text": "avatar to testimony model.avatar",
    "start": "159200",
    "end": "162400"
  },
  {
    "text": "the author to testimonymodel.author",
    "start": "162400",
    "end": "165440"
  },
  {
    "text": "and lastly the testimony to testimony",
    "start": "165440",
    "end": "168239"
  },
  {
    "text": "model.testimony",
    "start": "168239",
    "end": "170000"
  },
  {
    "text": "we need a list of testimonies so click",
    "start": "170000",
    "end": "172800"
  },
  {
    "text": "the create collection button and name",
    "start": "172800",
    "end": "174560"
  },
  {
    "text": "the collection testimonies",
    "start": "174560",
    "end": "177360"
  },
  {
    "text": "it should be a grid and the grid should",
    "start": "177360",
    "end": "179519"
  },
  {
    "text": "have three columns",
    "start": "179519",
    "end": "182159"
  },
  {
    "text": "head back to the list of components",
    "start": "182159",
    "end": "184480"
  },
  {
    "text": "and you should see that we have one more",
    "start": "184480",
    "end": "186319"
  },
  {
    "text": "component that does not exist in figma",
    "start": "186319",
    "end": "189760"
  },
  {
    "text": "we need to do the same thing for the",
    "start": "189760",
    "end": "191440"
  },
  {
    "text": "story component",
    "start": "191440",
    "end": "193360"
  },
  {
    "text": "add a post model to the component props",
    "start": "193360",
    "end": "196400"
  },
  {
    "text": "and the type should be post model",
    "start": "196400",
    "end": "199440"
  },
  {
    "text": "set the article banner source to any",
    "start": "199440",
    "end": "201519"
  },
  {
    "text": "static image",
    "start": "201519",
    "end": "203440"
  },
  {
    "text": "this would usually come from the",
    "start": "203440",
    "end": "204720"
  },
  {
    "text": "database like we did with the",
    "start": "204720",
    "end": "206159"
  },
  {
    "text": "testimonies",
    "start": "206159",
    "end": "207840"
  },
  {
    "text": "set the label of the title to",
    "start": "207840",
    "end": "210159"
  },
  {
    "text": "postmoder.title",
    "start": "210159",
    "end": "213120"
  },
  {
    "text": "set the description to post modeldos",
    "start": "213120",
    "end": "215760"
  },
  {
    "text": "description",
    "start": "215760",
    "end": "217040"
  },
  {
    "text": "and finally set the read time to",
    "start": "217040",
    "end": "219920"
  },
  {
    "text": "postmodel.readtime",
    "start": "219920",
    "end": "222159"
  },
  {
    "text": "we can concatenate a string at the end",
    "start": "222159",
    "end": "224159"
  },
  {
    "text": "of the read time so it makes more sense",
    "start": "224159",
    "end": "226480"
  },
  {
    "text": "to the customer",
    "start": "226480",
    "end": "228159"
  },
  {
    "text": "we can now create a collection for this",
    "start": "228159",
    "end": "230159"
  },
  {
    "text": "story and call it stories",
    "start": "230159",
    "end": "232799"
  },
  {
    "text": "it should be a trick column grid",
    "start": "232799",
    "end": "235280"
  },
  {
    "text": "and we can add 10 pixels space around",
    "start": "235280",
    "end": "237760"
  },
  {
    "text": "each one head back to the list of",
    "start": "237760",
    "end": "239680"
  },
  {
    "text": "components to preview the stories",
    "start": "239680",
    "end": "241439"
  },
  {
    "text": "component",
    "start": "241439",
    "end": "244439"
  }
]