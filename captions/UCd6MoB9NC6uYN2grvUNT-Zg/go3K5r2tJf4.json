[
  {
    "start": "0",
    "end": "52000"
  },
  {
    "text": "so I'm gonna go ahead and get started all right so good morning thank you for",
    "start": "30",
    "end": "7109"
  },
  {
    "text": "joining me if you weren't able to attend my session yesterday my name is Jeff weir I'm a principal product manager on",
    "start": "7109",
    "end": "13110"
  },
  {
    "text": "the Identity and Access Management team and today I have the pleasure of talking to you about delegating access to your",
    "start": "13110",
    "end": "20010"
  },
  {
    "text": "AWS account now as you use your AWS account you're inevitably going to have",
    "start": "20010",
    "end": "25560"
  },
  {
    "text": "to share resources with others whether those are members of your team business partners third parties what I want to do",
    "start": "25560",
    "end": "32668"
  },
  {
    "text": "with you today is take you through a number of common use cases that I encounter as I talk with customers and",
    "start": "32669",
    "end": "37829"
  },
  {
    "text": "give you some strategies and some samples of how you can actually go and",
    "start": "37829",
    "end": "43050"
  },
  {
    "text": "achieve those so it's gonna be a very use case driven and technology presentation so here's some of the goals",
    "start": "43050",
    "end": "49469"
  },
  {
    "text": "for the talk there's a number of scenarios I'm going to go through how you can do cross a county API access",
    "start": "49469",
    "end": "55550"
  },
  {
    "start": "52000",
    "end": "52000"
  },
  {
    "text": "sharing access across multiple AWS accounts and to cover Federation literation in terms of single sign-in to",
    "start": "55550",
    "end": "62820"
  },
  {
    "text": "the management console as well as API Federation I'm gonna end the presentation with something that we call web identity Federation something we we",
    "start": "62820",
    "end": "69510"
  },
  {
    "text": "released just earlier this year there's number of different terminology and technologies and I'm gonna discuss so",
    "start": "69510",
    "end": "75720"
  },
  {
    "text": "I'll probably use the words session and temporary security credentials interchangeably I'm sorry about that you",
    "start": "75720",
    "end": "83009"
  },
  {
    "text": "request these by calling the security token service for the rest of the presentation I'm just gonna call that STS and then we're gonna talk a little",
    "start": "83009",
    "end": "90060"
  },
  {
    "text": "bit about roles how you assume roles federated sessions and get Federation token what some of the differences are",
    "start": "90060",
    "end": "96390"
  },
  {
    "text": "and some of the ways that you get temporary security credentials so I think the best way to probably introduce",
    "start": "96390",
    "end": "103470"
  },
  {
    "text": "this topic is to start off with a short demo so let me let me just set this one up and this is actually if you want to",
    "start": "103470",
    "end": "111090"
  },
  {
    "start": "106000",
    "end": "106000"
  },
  {
    "text": "follow along you can actually download this code sample it's one of them that I published last year so if you want to play with the code afterwards there's",
    "start": "111090",
    "end": "117329"
  },
  {
    "text": "also an MSI that you can just use to deploy it if you if you want to see it but the way this demonstration works is",
    "start": "117329",
    "end": "122729"
  },
  {
    "text": "I'm going to log into a Windows desktop this is actually just going to be an ec2 instance that instance also has a domain",
    "start": "122729",
    "end": "129360"
  },
  {
    "text": "controller it's running Windows Active Directory I'm going to be authenticated by Active Directory I'm going to then go into this",
    "start": "129360",
    "end": "137250"
  },
  {
    "text": "proxy server that I'm running it's just running within my instance I'm gonna log in it's going to choose a role and then",
    "start": "137250",
    "end": "145080"
  },
  {
    "text": "I'm gonna single sign into the management console I'm gonna do that without using a username or password okay",
    "start": "145080",
    "end": "150540"
  },
  {
    "text": "so let me show you what this looks like so as I mentioned you can download the",
    "start": "150540",
    "end": "158760"
  },
  {
    "text": "sample this is actually the download page when you get the sample there's",
    "start": "158760",
    "end": "163950"
  },
  {
    "text": "documentation there's the source code it's just a visual studio project written in c-sharp and then I also have",
    "start": "163950",
    "end": "172350"
  },
  {
    "text": "this MSI so if you're not a developer and you just want to play with it this MSI will just deploy a package site that",
    "start": "172350",
    "end": "178560"
  },
  {
    "text": "you can go and you can do the same demo that I'm going to run through what this does is installs a website this is",
    "start": "178560",
    "end": "185850"
  },
  {
    "text": "running Microsoft Internet Information server so I have my console proxy sample here if I just click here to browse to",
    "start": "185850",
    "end": "192030"
  },
  {
    "text": "it I'm gonna get to this page and then from this page it knows who I am so I'm",
    "start": "192030",
    "end": "197670"
  },
  {
    "text": "using Windows integrated authentication so I don't have to provide a username or password it knows that it's me this is",
    "start": "197670",
    "end": "204330"
  },
  {
    "text": "my alias and then there's this drop-down menu with these two options it says AWS admins and AWS s3 users so the question",
    "start": "204330",
    "end": "211980"
  },
  {
    "text": "is where do those come from alright so as I mentioned I'm logged in to my instance and I'm running Active",
    "start": "211980",
    "end": "218310"
  },
  {
    "text": "Directory so this is my account and if I look at my account I'm a member of a",
    "start": "218310",
    "end": "223920"
  },
  {
    "text": "number of groups now two of these I want to point out one of them is the AWS s3 users group and the other one is the AWS",
    "start": "223920",
    "end": "230970"
  },
  {
    "text": "admins group ok the second part of the configuration that I have is actually in",
    "start": "230970",
    "end": "236070"
  },
  {
    "text": "my AWS account so for this demonstration I'm leveraging IM roles and in my",
    "start": "236070",
    "end": "242670"
  },
  {
    "text": "account I've created two roles AWS admins and AWS s3 users and the sample",
    "start": "242670",
    "end": "248330"
  },
  {
    "text": "simply goes in the proxy server goes and looks who I am says this is Jeff what groups is Jeff a",
    "start": "248330",
    "end": "254550"
  },
  {
    "text": "member of and then what roles exist in my account and the way that I've built this it just does a simple name mapping",
    "start": "254550",
    "end": "261329"
  },
  {
    "text": "so it looks at the intersection of those and it says if there's a group that matches a role name populated in this list and then as a",
    "start": "261330",
    "end": "267849"
  },
  {
    "text": "user I just select the role that I want I click sign in and I'm in my account I never have to plot provide a username",
    "start": "267849",
    "end": "274599"
  },
  {
    "text": "and password all I have to remember is how to log into my Windows machine so",
    "start": "274599",
    "end": "281770"
  },
  {
    "text": "hopefully if that's the type of solution you want to learn to build you should stick around for the remaining 55",
    "start": "281770",
    "end": "287830"
  },
  {
    "text": "minutes so I went to that kind of fast",
    "start": "287830",
    "end": "293499"
  },
  {
    "start": "293000",
    "end": "293000"
  },
  {
    "text": "so what just happened when I logged in my Windows desktop I hit an internet",
    "start": "293499",
    "end": "299199"
  },
  {
    "text": "website I chose that where all I wanted to play and I ought to magically sign into the console and that's it",
    "start": "299199",
    "end": "305770"
  },
  {
    "text": "no username no password so let's figure out how do we build those the way we build those is based on sessions",
    "start": "305770",
    "end": "312789"
  },
  {
    "text": "temporary security credentials and you get those from the security token service STS so sessions 101 this is the",
    "start": "312789",
    "end": "320050"
  },
  {
    "text": "basics of how you delegate temporary access everything I'm going to show you today is going to be based on sessions and temporary security credentials you",
    "start": "320050",
    "end": "327099"
  },
  {
    "start": "322000",
    "end": "322000"
  },
  {
    "text": "get these by calling STS STS is you can think of it as a ticketing system it generates tokens it generates",
    "start": "327099",
    "end": "333460"
  },
  {
    "text": "credentials that you can use you then take those credentials and you use them to make subsequent calls to other eight",
    "start": "333460",
    "end": "339819"
  },
  {
    "text": "AWS api's this is how it works you start by requesting a session from STS when",
    "start": "339819",
    "end": "346300"
  },
  {
    "start": "342000",
    "end": "342000"
  },
  {
    "text": "you get back the session and has a certain number of elements in it the three elements you want to be aware of",
    "start": "346300",
    "end": "351639"
  },
  {
    "start": "349000",
    "end": "349000"
  },
  {
    "text": "are the access key ID the secret access key the session token I'll refer to these as temporary security credentials",
    "start": "351639",
    "end": "357460"
  },
  {
    "text": "through the presentation you use these keys to sign AWS API requests you're",
    "start": "357460",
    "end": "363069"
  },
  {
    "text": "probably already familiar with your root credentials or the long-term credentials you get from an IM user that's an access",
    "start": "363069",
    "end": "368349"
  },
  {
    "text": "key and a secret access key the only difference here is when you're making requests say you're using the SDK you",
    "start": "368349",
    "end": "374560"
  },
  {
    "text": "also need to attach the token there's a security token parameter that's the only difference you need to do when using",
    "start": "374560",
    "end": "380589"
  },
  {
    "text": "temporary security credentials and the token is what lets us know AWS that those temporary security credentials are",
    "start": "380589",
    "end": "386949"
  },
  {
    "text": "still valid because they're not tied to a user they're not tied to a specific account you get sessions in multiple",
    "start": "386949",
    "end": "393610"
  },
  {
    "text": "ways so there's a number of API is that we provide that you can use the first one is get session token and this is really if you want to use",
    "start": "393610",
    "end": "400500"
  },
  {
    "start": "394000",
    "end": "394000"
  },
  {
    "text": "you want to you're an IM user and you want to create a session for yourself let's say you want to use multi-factor authentication you want to do MFA",
    "start": "400500",
    "end": "407520"
  },
  {
    "text": "protected API access this is the API what you would use we also have get federation token this is one of those",
    "start": "407520",
    "end": "413940"
  },
  {
    "text": "this is the API you would use if you want to build up a federal federal aid scenario we also have a number of",
    "start": "413940",
    "end": "419460"
  },
  {
    "text": "assumed role sessions these are where you create an IM role and then you call one of the assumed role api's we have",
    "start": "419460",
    "end": "425370"
  },
  {
    "text": "three of them today to assume that role to generate the credentials now since this session is about delegating access",
    "start": "425370",
    "end": "431250"
  },
  {
    "text": "I'm gonna focus on the api's there in the white box now sessions are ephemeral",
    "start": "431250",
    "end": "437849"
  },
  {
    "text": "they expire okay and depending on the API that you chose the account type of",
    "start": "437849",
    "end": "443909"
  },
  {
    "start": "439000",
    "end": "439000"
  },
  {
    "text": "credentials or the IM user credentials you use to create the session the timeframe that for those are gonna be different so you want to refer to the",
    "start": "443909",
    "end": "450630"
  },
  {
    "text": "documentation and make sure you're choosing an API with an expiration that fits your scenario for example if you're",
    "start": "450630",
    "end": "456389"
  },
  {
    "text": "using get Federation token the default expiration is 12 hours you can actually extend that to 36 hours when you make",
    "start": "456389",
    "end": "463380"
  },
  {
    "text": "the request on the other hand if you're using roles the default to 60 minutes actually the maximum is also 60 minutes",
    "start": "463380",
    "end": "470039"
  },
  {
    "text": "in all cases the minimum that you can request credentials are for 15 minutes now because it's possible to create",
    "start": "470039",
    "end": "476969"
  },
  {
    "text": "credentials that last for up to 36 hours I highly encourage you actually I asked",
    "start": "476969",
    "end": "482580"
  },
  {
    "text": "you to use cash in a lot of mistakes that people make when they first start working with these is for every API",
    "start": "482580",
    "end": "488759"
  },
  {
    "text": "request they go and they fetch another set of credentials and you can imagine that if you do that you're gonna be",
    "start": "488759",
    "end": "494250"
  },
  {
    "text": "introducing round-tripping delay into that so it a recommend is get the credentials use an expiration that works",
    "start": "494250",
    "end": "500639"
  },
  {
    "text": "for your application put them on a keychain cache them somewhere and can you continue to reuse them and check",
    "start": "500639",
    "end": "505949"
  },
  {
    "text": "your expiration when they expire and request another set of them so it's",
    "start": "505949",
    "end": "511650"
  },
  {
    "text": "going to roll based delegation using assumed role sessions first thing I want to talk about is roles how many of you",
    "start": "511650",
    "end": "517860"
  },
  {
    "text": "are already using roles great ask that question last year I think I had two",
    "start": "517860",
    "end": "523260"
  },
  {
    "text": "hands okay for those of you who aren't using roles roles are an entity that defines a set of permissions for making",
    "start": "523260",
    "end": "529020"
  },
  {
    "text": "AWS service requests the Oh understand kind of the concept of a user and groups and sometimes people",
    "start": "529020",
    "end": "535680"
  },
  {
    "text": "come up to me and say well as a role just like a group a role is not tied to a person okay a role is a container for",
    "start": "535680",
    "end": "542910"
  },
  {
    "text": "policy and then you take other entities like I am users or you could take",
    "start": "542910",
    "end": "548190"
  },
  {
    "text": "another role and you trust them and that trusted entity assumes the role and",
    "start": "548190",
    "end": "553860"
  },
  {
    "text": "derives their permissions from that role there's a number of ways that you can",
    "start": "553860",
    "end": "559290"
  },
  {
    "text": "use roles the first way that we introduced this was like a service role actually the first one was just rolls",
    "start": "559290",
    "end": "565529"
  },
  {
    "text": "for ec2 what you can do when you delegate access you trust a service they",
    "start": "565529",
    "end": "571589"
  },
  {
    "text": "can operate on your behalf and the way you do this is you create a role you",
    "start": "571589",
    "end": "576960"
  },
  {
    "text": "select the service that you want to trust and then you apply a policy and then that service can act within the",
    "start": "576960",
    "end": "584250"
  },
  {
    "text": "bounds of that policy the permissions of that policy on your behalf one great way to use this is with ec2 so",
    "start": "584250",
    "end": "591720"
  },
  {
    "text": "when you create a role you can go and launch an instance with ec2 and what that does is we will periodically put",
    "start": "591720",
    "end": "599760"
  },
  {
    "text": "temporary security credentials and something we call the metadata cache and the metadata cache is just a URL I gave",
    "start": "599760",
    "end": "605700"
  },
  {
    "text": "it at the bottom of the slide you can go into an instance you can curl it and what that does it it returns back a JSON",
    "start": "605700",
    "end": "611130"
  },
  {
    "text": "document that has those temporary security credentials now if you're using the SDK you don't even have to worry",
    "start": "611130",
    "end": "616800"
  },
  {
    "text": "about it because if you're building an application with the SDK and it's running on an ec2 instance that's using",
    "start": "616800",
    "end": "622620"
  },
  {
    "start": "618000",
    "end": "618000"
  },
  {
    "text": "roles it will just transparently pick up those credentials for you so there's a lot of people today who are still",
    "start": "622620",
    "end": "628200"
  },
  {
    "text": "creating iam users embedding those credentials in an ec2 instance for the application and I'm sure you're all",
    "start": "628200",
    "end": "634260"
  },
  {
    "text": "rotating those credentials multiple times a day yeah right know if you're",
    "start": "634260",
    "end": "639450"
  },
  {
    "text": "using roles you don't have to worry about that we take care of it all for you so I highly recommend if you're you're currently using long term",
    "start": "639450",
    "end": "645630"
  },
  {
    "text": "credentials on an ec2 instance if you can you should move over to roles so let",
    "start": "645630",
    "end": "651450"
  },
  {
    "text": "me show you how you set this up so I'm",
    "start": "651450",
    "end": "657360"
  },
  {
    "text": "logged into my account here and I'm I'm in the I am tab I'm gonna go ahead and",
    "start": "657360",
    "end": "663480"
  },
  {
    "text": "create a new role I'll just call this my reinvent if I can",
    "start": "663480",
    "end": "669520"
  },
  {
    "text": "spell role and then there's a number of services you can choose from last year",
    "start": "669520",
    "end": "675340"
  },
  {
    "text": "it just said ec2 now we have a bunch of them I'm going to go ahead and select ec2 and so I'm delegating access to the",
    "start": "675340",
    "end": "682480"
  },
  {
    "text": "ec2 service and then I'll just choose to read-only access policy and so now the",
    "start": "682480",
    "end": "689200"
  },
  {
    "text": "temporary credentials that I get from my instance will have all these permissions click continue you can see the yarn for",
    "start": "689200",
    "end": "696400"
  },
  {
    "text": "the role I'm going to create that role and I'm going to switch over to ec2 I go",
    "start": "696400",
    "end": "701500"
  },
  {
    "text": "ahead and I launch a role I'll select the Amazon Linux AMI",
    "start": "701500",
    "end": "707010"
  },
  {
    "text": "go to the configuration details and then the only thing you need to do is select",
    "start": "707010",
    "end": "713740"
  },
  {
    "text": "the role from the drop-down so you can see there's my reinvent role and then I can go ahead and I launch it and that's",
    "start": "713740",
    "end": "720190"
  },
  {
    "text": "it now when that that instance is booted up there'll be temporary security credentials from the metadata cache if",
    "start": "720190",
    "end": "726820"
  },
  {
    "text": "you're using the SDK there's nothing more you need to do it simple enough okay we're all gonna use roles from now",
    "start": "726820",
    "end": "734050"
  },
  {
    "text": "on so there's questions and due to time",
    "start": "734050",
    "end": "740260"
  },
  {
    "text": "I am gonna run to the very last minute I know that so I will stick around and if",
    "start": "740260",
    "end": "745720"
  },
  {
    "text": "you want to ask questions I'll stick around for as long as you want and we even ask me questions afterwards so I will take questions at the end so some",
    "start": "745720",
    "end": "754270"
  },
  {
    "start": "754000",
    "end": "754000"
  },
  {
    "text": "of the benefits of the roles you know I kind of mentioned this but it's worth repeating it totally eliminates the use",
    "start": "754270",
    "end": "759370"
  },
  {
    "text": "of long term credentials right you get automatic credential rotation if you're using this with like a service like ec2",
    "start": "759370",
    "end": "765790"
  },
  {
    "text": "and then of course because the SDK picks up those credentials there's less coding that you need to do okay and this is a",
    "start": "765790",
    "end": "771190"
  },
  {
    "text": "very simple secure way to delegate access to AWS services to perform work",
    "start": "771190",
    "end": "776200"
  },
  {
    "text": "on your behalf now there's other uses of roles as well next kit use case that I want to go out",
    "start": "776200",
    "end": "781660"
  },
  {
    "text": "go through is cross account API access and what this allows you to do is grant",
    "start": "781660",
    "end": "786730"
  },
  {
    "text": "access to resources across AWS accounts so a lot of people don't realize this",
    "start": "786730",
    "end": "792250"
  },
  {
    "start": "791000",
    "end": "791000"
  },
  {
    "text": "but many of our customers have multiple AWS accounts and they have this from many different reasons for exam",
    "start": "792250",
    "end": "797620"
  },
  {
    "text": "in the most basic case people will create accounts for here's my test environment here's my development environment here's my production",
    "start": "797620",
    "end": "804100"
  },
  {
    "text": "environment and then inevitably you have somebody who has to have visibility across all of them what a lot of people",
    "start": "804100",
    "end": "809920"
  },
  {
    "text": "do today is they go in and they create I am super user in each of those accounts and then they get those keys in the",
    "start": "809920",
    "end": "815589"
  },
  {
    "text": "passwords and they sync them up and they just do the management of it another case is the developer developer who",
    "start": "815589",
    "end": "821589"
  },
  {
    "text": "needs full access to the sandbox but it may be only read access to certain other",
    "start": "821589",
    "end": "826690"
  },
  {
    "text": "accounts so now you don't not only have to manage multiple credentials you have to keep in mind which one has read",
    "start": "826690",
    "end": "831790"
  },
  {
    "text": "access and which doesn't the last two scenario that it's pretty common is if you're using third-party management",
    "start": "831790",
    "end": "837550"
  },
  {
    "text": "software so a lot of our customers use solutions from our partners to manage their environments and you don't want to",
    "start": "837550",
    "end": "842589"
  },
  {
    "text": "be handing over your root credentials or long-term credentials for that you can use IM roles for all of these scenarios",
    "start": "842589",
    "end": "848830"
  },
  {
    "text": "okay so you can really think of using I am roles for cross account access is",
    "start": "848830",
    "end": "855310"
  },
  {
    "text": "sort of an extension of of what we did for service roles so when I created that role what I was doing when I chose ec2",
    "start": "855310",
    "end": "862510"
  },
  {
    "text": "is I was establishing trust and that's trust with a service I can also establish trust with other accounts I",
    "start": "862510",
    "end": "869440"
  },
  {
    "text": "can establish trust within my account basically what you're saying is this I",
    "start": "869440",
    "end": "875350"
  },
  {
    "text": "am user or this role in this AWS account can assume this role and when I ask when",
    "start": "875350",
    "end": "881770"
  },
  {
    "text": "that entity assumes that role it will get a pack a set of temporary security credentials with permissions that are",
    "start": "881770",
    "end": "888370"
  },
  {
    "text": "associated with that role so sometimes it's a little bit easier to think about this with a picture so this is a real",
    "start": "888370",
    "end": "894550"
  },
  {
    "text": "scenario I have my AWS account and in there i have an IM user his name is Jeff",
    "start": "894550",
    "end": "900130"
  },
  {
    "text": "I'm very creative in that way and then my team has a team account and in there",
    "start": "900130",
    "end": "905770"
  },
  {
    "text": "I've created a role now on both of these accounts I have buckets and I keep I keep data in s3 for my personal account",
    "start": "905770",
    "end": "913000"
  },
  {
    "text": "and I keep data in my team account and I want to be able to view all the data across all my buckets and I don't care",
    "start": "913000",
    "end": "919570"
  },
  {
    "text": "which account it's in and I don't want to have to use multiple credentials to do it so the way that I set this up is",
    "start": "919570",
    "end": "926320"
  },
  {
    "text": "over in my team account I've created a role it's called my s3 role and it's got two policies associated",
    "start": "926320",
    "end": "931390"
  },
  {
    "text": "with it the policy on the bottom is what I call the trust policy it tells this",
    "start": "931390",
    "end": "937300"
  },
  {
    "text": "principle my account that I can call assume role I know all of you went to my",
    "start": "937300",
    "end": "944230"
  },
  {
    "text": "policy presentation yesterday so all of this makes perfect sense right if you didn't you can go see the webcast and",
    "start": "944230",
    "end": "950650"
  },
  {
    "text": "you can learn more about access policies if not you'll have to trust me that this sets up the trust with my account now",
    "start": "950650",
    "end": "956440"
  },
  {
    "text": "when this account assumes the role these are the privileges that I'm gonna get which basically say I can call any of",
    "start": "956440",
    "end": "962590"
  },
  {
    "text": "the s3 api's on any of the resources in this account this is only part of the setup the other half of it is Jeff in my",
    "start": "962590",
    "end": "969910"
  },
  {
    "text": "personal account also has to have a policy that allows him to call a sim role for the role specified so it's a",
    "start": "969910",
    "end": "976870"
  },
  {
    "text": "two-part setup two accounts have to have an IM user who can call assume role and then I have to have a role in the other",
    "start": "976870",
    "end": "983380"
  },
  {
    "text": "account that allows me to assume it so we have the trusting party and the trusted party so what ends up happening",
    "start": "983380",
    "end": "990700"
  },
  {
    "text": "is Jeff uses his I am keys to call STS and I request to set a temporary",
    "start": "990700",
    "end": "995980"
  },
  {
    "text": "security credentials for this s3 role I get back a set of those temporary",
    "start": "995980",
    "end": "1001290"
  },
  {
    "text": "security credentials all right those are part of the session and then I use those the keys and the token and make a",
    "start": "1001290",
    "end": "1008190"
  },
  {
    "text": "request probably using the SDK to request objects that are in the bucket in the other account so let me give you",
    "start": "1008190",
    "end": "1015330"
  },
  {
    "text": "an example of an application that I wrote that allows me to do this so this",
    "start": "1015330",
    "end": "1023160"
  },
  {
    "text": "is a product manager where so be beware and over in my settings here I have a",
    "start": "1023160",
    "end": "1028949"
  },
  {
    "text": "set these are these are this is a set of keys for my IM user okay and I'm going",
    "start": "1028949",
    "end": "1035459"
  },
  {
    "text": "to use this one set of keys to assume multiple roles now I warned you if",
    "start": "1035459",
    "end": "1040829"
  },
  {
    "text": "you're in the back you're probably not able to see this so you're gonna have to trust me these are just the Arne's the amazon resource names for three roles",
    "start": "1040829",
    "end": "1047400"
  },
  {
    "text": "that have in three accounts that i have access to and when i launch the",
    "start": "1047400",
    "end": "1052650"
  },
  {
    "text": "application it calls assume role using these credentials and you can see down here I have a little timer that tells me",
    "start": "1052650",
    "end": "1057930"
  },
  {
    "text": "how long those credentials will last when the timer expires it'll go out in a row and get those credentials but now I can",
    "start": "1057930",
    "end": "1064660"
  },
  {
    "text": "do things like expand here and view all the buckets for this account I can view all the buckets for this account I have",
    "start": "1064660",
    "end": "1070870"
  },
  {
    "text": "my personal bucket here in my team folder where I keep a bunch of my demos and presentations I also have my",
    "start": "1070870",
    "end": "1077860"
  },
  {
    "text": "personal account if anyone came to my session yesterday you saw that I had a demo where I could drive into my test",
    "start": "1077860",
    "end": "1083980"
  },
  {
    "text": "bucket and hear Bob's got his home folder this is where Bob likes to store",
    "start": "1083980",
    "end": "1089230"
  },
  {
    "text": "pictures of my daughter and so I have the ability to go through and view all",
    "start": "1089230",
    "end": "1096070"
  },
  {
    "text": "them and I don't have to have multiple credentials right so this simplifies the way that I access information across my",
    "start": "1096070",
    "end": "1103240"
  },
  {
    "text": "accounts now this is just a quick demonstration to show you how to do this with s3 which you can imagine you can use any of the api's to show all the ec2",
    "start": "1103240",
    "end": "1109990"
  },
  {
    "text": "instances that I have across my accounts all the databases that I have in dynamo dynamo dB",
    "start": "1109990",
    "end": "1115600"
  },
  {
    "text": "this is a very simple way if you're using multiple accounts to get visibility across all of them okay now",
    "start": "1115600",
    "end": "1127450"
  },
  {
    "text": "for that one I don't have the project code I wrote it up pretty quickly so I pulled out the",
    "start": "1127450",
    "end": "1133900"
  },
  {
    "start": "1130000",
    "end": "1130000"
  },
  {
    "text": "relevant pieces for you because I wanted to show you how to assume a role so when",
    "start": "1133900",
    "end": "1138940"
  },
  {
    "text": "you call a assume role the assumed role API that's an authenticated call so you need to pass in long-term credentials or",
    "start": "1138940",
    "end": "1146760"
  },
  {
    "text": "you have to pass in some type of credentials it could either be from an IM user or temporary credentials from",
    "start": "1146760",
    "end": "1152470"
  },
  {
    "text": "from a role but you I'm passing in my access key in my secret access key and then I'm making an assumed role request",
    "start": "1152470",
    "end": "1159070"
  },
  {
    "text": "and I'm asking for a duration which is 3600 seconds or one hour I'm passing in",
    "start": "1159070",
    "end": "1164920"
  },
  {
    "text": "the Arn of the role so that's the role in the other account and then I can give it an arbitrary name so I can identify",
    "start": "1164920",
    "end": "1170530"
  },
  {
    "text": "it in this case I'm just calling it my s3 bucket browser this is a 2 to 32 byte string that you set and then you make",
    "start": "1170530",
    "end": "1177940"
  },
  {
    "text": "the request and then from the result you pull the credentials and the credentials will have those pieces the keys the",
    "start": "1177940",
    "end": "1183460"
  },
  {
    "text": "token and the expiration once I have those keys I just use them the same way I'm already making API requests this is",
    "start": "1183460",
    "end": "1190210"
  },
  {
    "text": "the only difference is the only thing you would need to do in order to use temporary security credentials for this scenario",
    "start": "1190210",
    "end": "1195960"
  },
  {
    "text": "so some of the benefits as I mentioned you only have to use one set of credentials if you're working with third",
    "start": "1195960",
    "end": "1202120"
  },
  {
    "text": "parties or you know sharing your account with others you don't need to share long-term credentials and then the nice",
    "start": "1202120",
    "end": "1207550"
  },
  {
    "text": "thing about the role is those temporary security credentials are associated with the role if I go in and I change the",
    "start": "1207550",
    "end": "1213670"
  },
  {
    "start": "1209000",
    "end": "1209000"
  },
  {
    "text": "permissions on the role those permissions are changed on those temporary security credentials if I delete the role if I put a deny in there",
    "start": "1213670",
    "end": "1220059"
  },
  {
    "text": "I'm instantly or effectively you're instantly revoking access to that user",
    "start": "1220059",
    "end": "1228240"
  },
  {
    "text": "so next I want to talk and get back to Federation this is where we start it so I want to show you a little bit how I",
    "start": "1228390",
    "end": "1234880"
  },
  {
    "text": "built that first demo through a couple of scenarios if you're new to Federation",
    "start": "1234880",
    "end": "1240790"
  },
  {
    "start": "1239000",
    "end": "1239000"
  },
  {
    "text": "one of the benefits of that is you get to access AWS using your existing identity typically this is you know your",
    "start": "1240790",
    "end": "1247120"
  },
  {
    "text": "corporate identity if you're using Windows it's probably Active Directory why would you want to use Federation",
    "start": "1247120",
    "end": "1253030"
  },
  {
    "text": "well it's a simple way to get into the management console if you saw I didn't have to remember any username or",
    "start": "1253030",
    "end": "1258940"
  },
  {
    "text": "password to get in there you can build applications that transparently access AWS resource in a api's without having",
    "start": "1258940",
    "end": "1265600"
  },
  {
    "text": "to embed long-term credentials into them and then for your users it eliminates yet another password to manage and",
    "start": "1265600",
    "end": "1272500"
  },
  {
    "text": "remember put on a sticky note underneath their their monitor right so the first",
    "start": "1272500",
    "end": "1278410"
  },
  {
    "text": "use case I'm going to go through is actually going to be API Federation and just like the previous demonstration I",
    "start": "1278410",
    "end": "1284590"
  },
  {
    "text": "showed this court source code is available for you so if you want to go ahead and download this and play with it",
    "start": "1284590",
    "end": "1290309"
  },
  {
    "text": "you know later during your own time you can do that and this scenario we have an identity provider and a relying party",
    "start": "1290309",
    "end": "1296050"
  },
  {
    "text": "the identity provider is Windows Active Directory the permissions are actually going to be based off of Active",
    "start": "1296050",
    "end": "1302170"
  },
  {
    "text": "Directory group membership I'm going to show you how I did that and then on each of those groups there's gonna be little",
    "start": "1302170",
    "end": "1307390"
  },
  {
    "text": "policy snippets so I'll explain this in a minute the relying party of course is going to be AWS and we're going to be",
    "start": "1307390",
    "end": "1312910"
  },
  {
    "text": "doing this to call the s3 api's the way that I'm going to get those temporary security Kran chills was this with this",
    "start": "1312910",
    "end": "1318940"
  },
  {
    "text": "with this demo is using get federation token so this is the walkthrough and",
    "start": "1318940",
    "end": "1325690"
  },
  {
    "text": "they have this little command-line application running on my desktop and that is going",
    "start": "1325690",
    "end": "1331659"
  },
  {
    "start": "1329000",
    "end": "1329000"
  },
  {
    "text": "to request a session from a federation proxy which is going to be a web service it's a windows communication foundation",
    "start": "1331659",
    "end": "1337419"
  },
  {
    "text": "web service running on a Windows Server that proxy is going to have a set of credentials on it it's an IM user i'm",
    "start": "1337419",
    "end": "1344860"
  },
  {
    "text": "going to pause here and kind of describe what happens when you make a get federation token request you use a set",
    "start": "1344860",
    "end": "1352360"
  },
  {
    "text": "of IM credentials and by default when you get those credentials back the",
    "start": "1352360",
    "end": "1357700"
  },
  {
    "text": "permissions associated with those credentials are going to be those of the IAM user now you can also pass in a",
    "start": "1357700",
    "end": "1364870"
  },
  {
    "text": "policy with the request and the policy cannot increase privileges but it can it",
    "start": "1364870",
    "end": "1371200"
  },
  {
    "text": "can scope them down so a lot of times I'll talk about this being a scope down policy so you want the proxy server to",
    "start": "1371200",
    "end": "1377440"
  },
  {
    "text": "have credentials with the maximum amount of permissions that any of your users would have if you're going to have admin",
    "start": "1377440",
    "end": "1383289"
  },
  {
    "text": "users the IM account that's used by the proxy server should have IM privileges but then for users who don't need that",
    "start": "1383289",
    "end": "1389500"
  },
  {
    "text": "you'll scope it down and i'll show you what that looks like in a minute the proxy server is going to authenticate",
    "start": "1389500",
    "end": "1394750"
  },
  {
    "text": "the user against Active Directory it's going to determine its entitlements based on its ad group membership and",
    "start": "1394750",
    "end": "1400389"
  },
  {
    "text": "this is going to make a request to STS using get federation token you're gonna get back a response that's going to have",
    "start": "1400389",
    "end": "1407799"
  },
  {
    "text": "the temporary security credentials you're going to I'm going to pass that back to the command line off application",
    "start": "1407799",
    "end": "1413590"
  },
  {
    "text": "and then it's going to make calls to s3 to retrieve objects from a bucket so I'm",
    "start": "1413590",
    "end": "1419620"
  },
  {
    "text": "going to show you couple demos that I have for this one one of them that that we wrote in another one which is actually available from a partner of",
    "start": "1419620",
    "end": "1425769"
  },
  {
    "text": "ours cloudberry okay so I can close this",
    "start": "1425769",
    "end": "1432039"
  },
  {
    "text": "and switch over to visual studio and here I have I have the server this is",
    "start": "1432039",
    "end": "1439240"
  },
  {
    "text": "like I mentioned this is a web service running on Windows and here's a client application and let me just walk you",
    "start": "1439240",
    "end": "1444580"
  },
  {
    "text": "through what the web service does so the first thing that happens is the client request contacts it and the web service",
    "start": "1444580",
    "end": "1451990"
  },
  {
    "text": "figures out who I am by using Windows integrated authentication so it knows that it's Jeff right then the next thing",
    "start": "1451990",
    "end": "1457990"
  },
  {
    "text": "I'm going to do is I'm going to go and contact STS to create the temporary security credentials so I have another class in here and the",
    "start": "1457990",
    "end": "1465310"
  },
  {
    "text": "first thing it does is it builds up a policy and I'll show you where that policy comes from in a second and then I",
    "start": "1465310",
    "end": "1470890"
  },
  {
    "text": "use that policy than the get Federation token request and here I'm setting a duration I think by default I made it",
    "start": "1470890",
    "end": "1477790"
  },
  {
    "text": "eight hours if I recall I pass in the username which is just my windows username and I pass in this policy I",
    "start": "1477790",
    "end": "1484360"
  },
  {
    "text": "have a little helper function here that goes through finds the groups that I'm a member of and the retrieves policy",
    "start": "1484360",
    "end": "1491560"
  },
  {
    "text": "snippets that I've stored on there so I'm going to switch over to Active Directory administration Center and I'm",
    "start": "1491560",
    "end": "1498460"
  },
  {
    "text": "just going to show you this s3 users group a lot of people don't know this",
    "start": "1498460",
    "end": "1504190"
  },
  {
    "text": "but you can go to the attribute editor and there's an alt Security's identities attribute that's not used so what I've",
    "start": "1504190",
    "end": "1510700"
  },
  {
    "text": "done is I've put a policy on there and I know you all can read that is that",
    "start": "1510700",
    "end": "1516940"
  },
  {
    "text": "better so this is what the policy looks like this is what I have stored on that attribute and I've put in place holders",
    "start": "1516940",
    "end": "1523000"
  },
  {
    "text": "here from my bucket name and my user name and the proxy server is going to take this policy snippet and it's going",
    "start": "1523000",
    "end": "1528970"
  },
  {
    "text": "to do just-in-time replacement and it's gonna pass this policy on with a request so this is how it's going to scope down",
    "start": "1528970",
    "end": "1534190"
  },
  {
    "text": "permissions just that the for for just that are tailored for me and so now if I",
    "start": "1534190",
    "end": "1541720"
  },
  {
    "text": "go in here and I run this application",
    "start": "1541720",
    "end": "1548010"
  },
  {
    "text": "it's gonna request those temporary security credentials it's gonna get back",
    "start": "1550460",
    "end": "1555920"
  },
  {
    "text": "those credentials okay you'll just have to trust me this includes keys and a token and then if I continue to run it",
    "start": "1555920",
    "end": "1563890"
  },
  {
    "text": "you'll see that it lists all the objects that were in my personal folder so this",
    "start": "1563890",
    "end": "1569330"
  },
  {
    "text": "was the same bucket we were looking at in the previous demonstration and if I want to here I can tell it to read the",
    "start": "1569330",
    "end": "1574340"
  },
  {
    "text": "contact contents of a file those of you in the front can read that thank you",
    "start": "1574340",
    "end": "1583960"
  },
  {
    "text": "it's sad when people don't clap okay so that's API Federation and that's a quick",
    "start": "1584320",
    "end": "1590930"
  },
  {
    "text": "sample that we put together and you can download and play with that more recently actually something that was",
    "start": "1590930",
    "end": "1596120"
  },
  {
    "text": "pretty cool I found this just an announcement in our forums is cloudberry who's a partner of ours deployed",
    "start": "1596120",
    "end": "1601670"
  },
  {
    "text": "something recently released something that they called the cloudberry active",
    "start": "1601670",
    "end": "1606890"
  },
  {
    "text": "directory bridge and this is just a web service I have it running here they gave me a copy and this is just a web service",
    "start": "1606890",
    "end": "1613970"
  },
  {
    "text": "that runs and behind the scenes this actually uses get Federation token now if any of you use cloudberry they've",
    "start": "1613970",
    "end": "1619490"
  },
  {
    "text": "been around for a while they've included this the ability to map folder map",
    "start": "1619490",
    "end": "1627050"
  },
  {
    "text": "drives to buckets but previously it always required that each user have",
    "start": "1627050",
    "end": "1632510"
  },
  {
    "text": "long-term credentials so what if you have like 50,000 users and you want each of them to have a map folder right",
    "start": "1632510",
    "end": "1639100"
  },
  {
    "text": "instead of mapping these using long-term credentials you just talk to the active",
    "start": "1639100",
    "end": "1644150"
  },
  {
    "text": "directory bridge so you run this client the client talks to that service it gets",
    "start": "1644150",
    "end": "1649340"
  },
  {
    "text": "back temporary security credentials and then I can go over here and I can browse",
    "start": "1649340",
    "end": "1655100"
  },
  {
    "text": "I have a drive which is my personal folders and I have a drive which is a",
    "start": "1655100",
    "end": "1661430"
  },
  {
    "text": "shared folder and this is just a bucket in s3 and you can do this for all of you users and you can give them virtually",
    "start": "1661430",
    "end": "1667430"
  },
  {
    "text": "unlimited storage and to them it just looks like a drive so it's a pretty pretty impressive little piece of",
    "start": "1667430",
    "end": "1674060"
  },
  {
    "text": "technology that they released it uses the same concepts that I showed in my sample but you know if you want to use",
    "start": "1674060",
    "end": "1680270"
  },
  {
    "text": "something that's real supported you can go ahead and you can contact them and and use that as well okay so",
    "start": "1680270",
    "end": "1692790"
  },
  {
    "text": "that was using get federation token for federation you can also use IM roles for",
    "start": "1692790",
    "end": "1699760"
  },
  {
    "text": "federation and that was actually the the first demonstration that we looked at was using IM roles and so it's a very",
    "start": "1699760",
    "end": "1706990"
  },
  {
    "text": "similar concept because at the end of the day you're getting temporary security credentials it's just to be a different API but one of the differences",
    "start": "1706990",
    "end": "1714070"
  },
  {
    "text": "here is it provides a different option for storing those AWS permissions so",
    "start": "1714070",
    "end": "1720549"
  },
  {
    "text": "remember I'll just review this when you call get Federation token using an IM user the base permissions are derived",
    "start": "1720549",
    "end": "1727660"
  },
  {
    "text": "from the IM user making the request and then scoped down with a policy if you",
    "start": "1727660",
    "end": "1733330"
  },
  {
    "text": "use an IM user to call assumed role the permissions are associated with the role",
    "start": "1733330",
    "end": "1739860"
  },
  {
    "text": "so the IM user only needs the ability to call a sim role because the permissions for those temporary security credentials",
    "start": "1739860",
    "end": "1745750"
  },
  {
    "text": "will be associated you can think of it as being derived from the role so when you're using this in federation it",
    "start": "1745750",
    "end": "1751809"
  },
  {
    "text": "provides sort of a different way to set up those permissions something like you can think of it as almost a separation",
    "start": "1751809",
    "end": "1757690"
  },
  {
    "text": "of duties because you might have an AWS administrator you can go in and create the role and determine what the",
    "start": "1757690",
    "end": "1764080"
  },
  {
    "text": "permissions and entitlements are for that role and then you'd have someone who manages your on-premises and your",
    "start": "1764080",
    "end": "1771429"
  },
  {
    "text": "on-premises infrastructure you know like a corporate administrator and they create the group's users and intranet permissions and the guy who who manages",
    "start": "1771429",
    "end": "1778360"
  },
  {
    "text": "a corporate infrastructure all he can do is reduce permissions you can't you know create those permissions or what you do",
    "start": "1778360",
    "end": "1785020"
  },
  {
    "text": "so if you have an environment where you want to separate between those roles is a good opportunity to do that so the the",
    "start": "1785020",
    "end": "1792549"
  },
  {
    "text": "use case that we looked at the beginning was console federation once again i'll put the URL up there in case you guys want to download the code and play with",
    "start": "1792549",
    "end": "1799030"
  },
  {
    "text": "it similar scenario the identity provider is Windows Active Directory the",
    "start": "1799030",
    "end": "1804730"
  },
  {
    "text": "privileges are based on ad group membership and then in this case the ad group must match the name of the I am",
    "start": "1804730",
    "end": "1811210"
  },
  {
    "text": "role the relying party of course is AWS but in this case it's the management console",
    "start": "1811210",
    "end": "1816440"
  },
  {
    "text": "and the difference in this use case is that we're using assumed role session via assumed role so once again I think",
    "start": "1816440",
    "end": "1827540"
  },
  {
    "text": "this is a little bit easier to understand with a picture this looks",
    "start": "1827540",
    "end": "1832940"
  },
  {
    "text": "very similar to the cross account scenario that we looked at before but in this case we're doing everything within",
    "start": "1832940",
    "end": "1838850"
  },
  {
    "text": "one account okay so I have a single account and I've created a role and that",
    "start": "1838850",
    "end": "1844510"
  },
  {
    "text": "role once again is an s3 role so I've granted you no permissions to do",
    "start": "1844510",
    "end": "1850160"
  },
  {
    "text": "anything in s3 in any of my buckets and then I've created a trust now in this",
    "start": "1850160",
    "end": "1855230"
  },
  {
    "text": "case the trust is trusting my own account so this role is in this account and then and I'm trusting that same",
    "start": "1855230",
    "end": "1862310"
  },
  {
    "text": "account now one difference is in here is that I'm using the external ID so when",
    "start": "1862310",
    "end": "1867980"
  },
  {
    "text": "you create a policy you have the ability to add conditions and conditions are additional criteria which must evaluate",
    "start": "1867980",
    "end": "1873680"
  },
  {
    "text": "to true in order for the policy to evaluate to true and so in this case I'm requiring that you put in an external ID",
    "start": "1873680",
    "end": "1880340"
  },
  {
    "text": "and what I'm putting in that external ID is the security identifier the SID for",
    "start": "1880340",
    "end": "1886880"
  },
  {
    "text": "the ad group and the reason I do this is if someone if you know an ad administrator goes and deletes a group",
    "start": "1886880",
    "end": "1892670"
  },
  {
    "text": "and they recreate the group and they put a bunch of users in there right that's going to change the sit and so this",
    "start": "1892670",
    "end": "1897980"
  },
  {
    "text": "ensures that both sides of the handshake stay consistent and so that's why I'm",
    "start": "1897980",
    "end": "1904130"
  },
  {
    "text": "using the external the external ID in this scenario and then of course I'm going to have a proxy server that needs",
    "start": "1904130",
    "end": "1910040"
  },
  {
    "text": "to call a sim role and so this proxy server is going to have a different set of permissions than the previous proxy",
    "start": "1910040",
    "end": "1916250"
  },
  {
    "text": "server it's only going to need to be able to call assume role for any role within my account and it's also going to",
    "start": "1916250",
    "end": "1922430"
  },
  {
    "text": "need the ability called list roles because if you remember the proxy server is going to take the intersection of the",
    "start": "1922430",
    "end": "1928010"
  },
  {
    "text": "ad groups and the IM roles in my account so these are the only two permissions that I need to grant for the proxy",
    "start": "1928010",
    "end": "1933800"
  },
  {
    "text": "server and the way this is going to work as the proxy server is going to request a session by making an assumed role",
    "start": "1933800",
    "end": "1939710"
  },
  {
    "text": "request it's going to get back a set of temporary security credentials and then we're going to use those credentials as",
    "start": "1939710",
    "end": "1945710"
  },
  {
    "text": "a way of logging into the my console so here's the full flow this",
    "start": "1945710",
    "end": "1951679"
  },
  {
    "text": "is what we looked at when we started the presentation user hits the proxy server as I mentioned the proxy server has",
    "start": "1951679",
    "end": "1957590"
  },
  {
    "text": "acetic has a set of credentials associated with an IM user can call list",
    "start": "1957590",
    "end": "1962750"
  },
  {
    "text": "roles and assume role the proxy server is also going to authenticate the user it's going to get back the list of",
    "start": "1962750",
    "end": "1969260"
  },
  {
    "text": "groups that the user is a member of so I'm gonna make a series of calls to AWS the first call is going to be list roles",
    "start": "1969260",
    "end": "1976340"
  },
  {
    "text": "okay and then the proxy server is going to get back a set of those roles and it's going to create that combo box by",
    "start": "1976340",
    "end": "1982789"
  },
  {
    "text": "looking at the intersection of the groups and the roles in my account I'm",
    "start": "1982789",
    "end": "1987980"
  },
  {
    "text": "going to then choose a role and the proxy server is going to assume that role it's going to get back a response",
    "start": "1987980",
    "end": "1994269"
  },
  {
    "text": "there's only two more steps I'm going to take those credentials and I'm going to",
    "start": "1994269",
    "end": "2000700"
  },
  {
    "text": "request a sign-in token and using that sign-in token I'm gonna create a well-formed URL that will allow me to",
    "start": "2000700",
    "end": "2006580"
  },
  {
    "text": "redirect the user into the management console so that don't they don't have to provide a username and password now we",
    "start": "2006580",
    "end": "2014230"
  },
  {
    "text": "took a look at this sample and due to time I'm not going to walk through the code for this one because what I",
    "start": "2014230",
    "end": "2020289"
  },
  {
    "text": "actually want to do is introduce that same type of scenario but using the",
    "start": "2020289",
    "end": "2025510"
  },
  {
    "start": "2022000",
    "end": "2022000"
  },
  {
    "text": "security assertion markup language so this is a feature that we released on Monday",
    "start": "2025510",
    "end": "2030940"
  },
  {
    "text": "and believe me Monday was busy writing demos and slides for that release and",
    "start": "2030940",
    "end": "2036130"
  },
  {
    "text": "what this does is it adds open industry support for Federation for the security",
    "start": "2036130",
    "end": "2042070"
  },
  {
    "text": "token service so for any of you who are using existing identity management",
    "start": "2042070",
    "end": "2047380"
  },
  {
    "text": "software that supports sam'l 2.0 you can now use us as a service provider",
    "start": "2047380",
    "end": "2054179"
  },
  {
    "text": "sometimes people refer to that as a relying party and you can use that to either single sign-in to the management",
    "start": "2054179",
    "end": "2060490"
  },
  {
    "text": "console or do API Federation now the the actual profile that we support it's a",
    "start": "2060490",
    "end": "2068888"
  },
  {
    "text": "mouthful it's the IDP initiated web single sign-on via sam'l 2.0 using the",
    "start": "2068889",
    "end": "2074079"
  },
  {
    "text": "HTTP POST binding I will never say that again I'm going to refer to that as the web SSO profile the other thing we",
    "start": "2074079",
    "end": "2080500"
  },
  {
    "text": "introduced is part this release is a new sign in URL so in the previous slide I kind of talked about how you had to request credentials",
    "start": "2080500",
    "end": "2087389"
  },
  {
    "text": "get a sign-in token generate a sign-in URL it's well-documented but I've seen a",
    "start": "2087390",
    "end": "2093909"
  },
  {
    "text": "lot of customers have trouble understanding the process of doing that so we've greatly simplified this in that",
    "start": "2093910",
    "end": "2099850"
  },
  {
    "text": "you just take a standard sam'l off authentication response sometimes I'll",
    "start": "2099850",
    "end": "2105250"
  },
  {
    "text": "refer to this as an assertion and you pass that assertion to our new sam'l sign in URL and there's nothing you need",
    "start": "2105250",
    "end": "2111400"
  },
  {
    "text": "to do the user then will if there's if you provide a single role they'll just be transparently logged into the console",
    "start": "2111400",
    "end": "2116860"
  },
  {
    "text": "if you provide multiple roles they'll be presented with a list that they can",
    "start": "2116860",
    "end": "2122260"
  },
  {
    "text": "choose from and then they just sso in so I'm going to show you a couple scenarios using sam'l we'll walk through the",
    "start": "2122260",
    "end": "2129610"
  },
  {
    "start": "2129000",
    "end": "2129000"
  },
  {
    "text": "entire flow but you can tell from the number of lines it's greatly simplified compared to the previous state some of",
    "start": "2129610",
    "end": "2137410"
  },
  {
    "text": "the some of the steps are the same you know you're going to take a browser in this case you're using some standard identity provider in my example I'm",
    "start": "2137410",
    "end": "2144970"
  },
  {
    "text": "going to show you using Windows Active Directory Federation services ad FS it's a basic role that comes with Windows",
    "start": "2144970",
    "end": "2151810"
  },
  {
    "text": "Server that's going to authenticate the user against the directory in this case",
    "start": "2151810",
    "end": "2156820"
  },
  {
    "text": "it's going to be Windows Active Directory it's going to pass back the auth response the assertion to the",
    "start": "2156820",
    "end": "2162700"
  },
  {
    "text": "browser that browser is going to post it to sign in that Sam will sign in URL that I showed and it's just gonna be",
    "start": "2162700",
    "end": "2169120"
  },
  {
    "text": "redirect to it into the console so it's a little bit simpler flow so let me take you through that now the first step",
    "start": "2169120",
    "end": "2180690"
  },
  {
    "text": "is just configuring this so let me go over to IM if you haven't logged into",
    "start": "2183430",
    "end": "2191500"
  },
  {
    "text": "the IM console lately you probably didn't notice that we added this identity providers tab and so this is",
    "start": "2191500",
    "end": "2197980"
  },
  {
    "text": "where you go and you create your sam'l provider now the way that you create a sam'l provider is by uploading a",
    "start": "2197980",
    "end": "2204970"
  },
  {
    "text": "standard sam'l metadata document this is just an XML file that describes the",
    "start": "2204970",
    "end": "2210940"
  },
  {
    "text": "capabilities of your IDP your identity provider and you name it so I'll call it",
    "start": "2210940",
    "end": "2216670"
  },
  {
    "text": "my sam'l provider and then you upload the document now you get this document",
    "start": "2216670",
    "end": "2223990"
  },
  {
    "text": "you get this document from your I from",
    "start": "2223990",
    "end": "2231040"
  },
  {
    "text": "your IDP in my case I'm using Active Directory Federation services so there's just a URL you go to to download it I've",
    "start": "2231040",
    "end": "2238180"
  },
  {
    "text": "already done that for for time and I select that document and then I create",
    "start": "2238180",
    "end": "2244420"
  },
  {
    "text": "it close it and now I have a provider so",
    "start": "2244420",
    "end": "2249609"
  },
  {
    "text": "my sam'l provider and if you look at it all it is is a container for for that",
    "start": "2249609",
    "end": "2254799"
  },
  {
    "text": "configuration it allows us to know who we are going to trust in this case your",
    "start": "2254799",
    "end": "2260950"
  },
  {
    "text": "your IDP and by uploading that you get this Amazon resource name I point this",
    "start": "2260950",
    "end": "2266559"
  },
  {
    "text": "out because I'm going to use this in one of the steps in in the in the demo now the way that you complete the trust on",
    "start": "2266559",
    "end": "2273280"
  },
  {
    "text": "the 8 of us side as you go and you create a role ok so we have a new role",
    "start": "2273280",
    "end": "2278740"
  },
  {
    "text": "type type so I'm going to create a role and I'll just call this my salmon roll",
    "start": "2278740",
    "end": "2284309"
  },
  {
    "text": "and then I'm gonna choose a role for identity provider access and here I'm",
    "start": "2284309",
    "end": "2291309"
  },
  {
    "text": "gonna grant web single sign-on web SSO access to a sam'l provider so I'm going",
    "start": "2291309",
    "end": "2296710"
  },
  {
    "text": "to select that one and now the provider that I just created is available in the",
    "start": "2296710",
    "end": "2301750"
  },
  {
    "text": "list ok so I can select that one and then there's certain sam'l attributes",
    "start": "2301750",
    "end": "2307420"
  },
  {
    "text": "that you can use as conditions now since I'm using web SSO what I want to ensure",
    "start": "2307420",
    "end": "2312819"
  },
  {
    "text": "is that the sam'l audience where this should be directed to is our sign-in URL and so",
    "start": "2312819",
    "end": "2319329"
  },
  {
    "text": "since you chose the web SSO profile for that role we're gonna actually going to",
    "start": "2319329",
    "end": "2324790"
  },
  {
    "text": "add that in for you automatically so I click continue this creates the trust",
    "start": "2324790",
    "end": "2331510"
  },
  {
    "text": "policy so once again we're just trusting the sam'l provider which I just created",
    "start": "2331510",
    "end": "2337030"
  },
  {
    "text": "and we have one condition is that the audience where it's targeted should be sign in click continue I can choose the",
    "start": "2337030",
    "end": "2345970"
  },
  {
    "text": "template you know the policy that I want to grant them maybe I want to give them admin access and so this creates the",
    "start": "2345970",
    "end": "2351040"
  },
  {
    "text": "access policy continue and then this is the role that's going to be created so I",
    "start": "2351040",
    "end": "2356470"
  },
  {
    "text": "can go ahead and I could create the role so this is what you do to establish the trust inside of AWS now you also have to",
    "start": "2356470",
    "end": "2364450"
  },
  {
    "text": "set up trust within your identity provider ok so I'll show you what this looks like",
    "start": "2364450",
    "end": "2370210"
  },
  {
    "text": "with a DFS but obviously this is going to depend on what you're using you know let's say you're using a ping an octa",
    "start": "2370210",
    "end": "2375430"
  },
  {
    "text": "simplified one login or something like that they're going to have their own set of steps that you need to go through to configure that side of the trust but",
    "start": "2375430",
    "end": "2382119"
  },
  {
    "text": "here I'm just using a DFS because it's convenient and what you do is you go in",
    "start": "2382119",
    "end": "2388140"
  },
  {
    "text": "good old windows",
    "start": "2388140",
    "end": "2391769"
  },
  {
    "text": "thank you okay so you go in here and you create you add a relying party remember",
    "start": "2398230",
    "end": "2405790"
  },
  {
    "text": "I talked about using the IDPs metadata document to create the sam'l provider in",
    "start": "2405790",
    "end": "2411010"
  },
  {
    "text": "IM there's a similar process where in your identity management software you",
    "start": "2411010",
    "end": "2416260"
  },
  {
    "text": "need to import the AWS metadata document so you can get that and if you ever",
    "start": "2416260",
    "end": "2422109"
  },
  {
    "text": "forget this URL is is in our documentation you just go to this URL this pulls down and this is basically",
    "start": "2422109",
    "end": "2429040"
  },
  {
    "text": "our certificate and it's our configuration that you need to import and so it's right off of sign-in static",
    "start": "2429040",
    "end": "2436690"
  },
  {
    "text": "sam'l - metadata document like I said it's in the Doc's if if you forget it you download that and you import it into",
    "start": "2436690",
    "end": "2444490"
  },
  {
    "text": "here okay and then here you can see where the URL is that that a DFS will",
    "start": "2444490",
    "end": "2451450"
  },
  {
    "text": "pull it from so now I'm a relying party in the eyes of a DFS now I don't you",
    "start": "2451450",
    "end": "2457599"
  },
  {
    "text": "have to be able to generate a sam'l authentication response and the way that you do that is by creating claims this",
    "start": "2457599",
    "end": "2463540"
  },
  {
    "text": "is the a DFS nomenclature so I'm gonna go ahead and create some claims there's",
    "start": "2463540",
    "end": "2470230"
  },
  {
    "text": "three attributes that you need to send to us one of them is the name ID and this one you can simply use through the",
    "start": "2470230",
    "end": "2476650"
  },
  {
    "text": "through the UI on mapping the name ID to the primary CID the security identifiers for the youth for the federated user",
    "start": "2476650",
    "end": "2483220"
  },
  {
    "text": "okay the next one that I'm going to do is the role session name remember when you call a soom role you",
    "start": "2483220",
    "end": "2489520"
  },
  {
    "text": "can apply in an identifier to that and so that's the role session name and in this case it's this attribute and I'm",
    "start": "2489520",
    "end": "2495910"
  },
  {
    "text": "just going to use the user's email address and I'll show you in a minute where that gets used the last claim that",
    "start": "2495910",
    "end": "2502270"
  },
  {
    "text": "you have to send over is a little bit tricky because you have to send over the the principal the sam'l provider that",
    "start": "2502270",
    "end": "2508839"
  },
  {
    "text": "you want to use and you have to pass over the arns of each of the roles that you want to assume and to do this I",
    "start": "2508839",
    "end": "2516730"
  },
  {
    "text": "created two custom roles custom rules and it's probably a little bit beyond",
    "start": "2516730",
    "end": "2522069"
  },
  {
    "text": "the scope of this presentation to walk through the code so I'll just kind of describe it the first one goes through",
    "start": "2522069",
    "end": "2527500"
  },
  {
    "text": "and it queries 84 the groups that I'm a member and I do a very similar matching between",
    "start": "2527500",
    "end": "2533650"
  },
  {
    "text": "the ad groups that I'm a part of and the I M roles that are in my account and then I take those groups and I transform",
    "start": "2533650",
    "end": "2543400"
  },
  {
    "text": "them so that I'm sending over the sam'l provider the one I created and the roles",
    "start": "2543400",
    "end": "2549670"
  },
  {
    "text": "that I want to assume and so what this looks like again in ad you know I'm a",
    "start": "2549670",
    "end": "2555460"
  },
  {
    "text": "member of a group called AWS full access and I'm a member of AWS no access and",
    "start": "2555460",
    "end": "2562090"
  },
  {
    "text": "then back over in my AWS account I have a role a DFS full access and a DFS no",
    "start": "2562090",
    "end": "2570640"
  },
  {
    "text": "access and so what it'll do is it'll look for groups that are prepend it prepended with AWS - and it'll try to",
    "start": "2570640",
    "end": "2578230"
  },
  {
    "text": "assume roles that have a DFS - in my account and so now I'm gonna go over",
    "start": "2578230",
    "end": "2584650"
  },
  {
    "text": "here let me just sign out and I'm gonna",
    "start": "2584650",
    "end": "2591430"
  },
  {
    "text": "go to the a DFS sign-in page now I didn't do anything this is the default page that comes with a DFS since I've",
    "start": "2591430",
    "end": "2598180"
  },
  {
    "text": "configured myself as a relying party it's in the list using integrated windows authentication so it knows who I",
    "start": "2598180",
    "end": "2605350"
  },
  {
    "text": "am and I can just click go and there are the two roles that were passed over with",
    "start": "2605350",
    "end": "2612220"
  },
  {
    "text": "the assertion I can choose the full axis one click sign in and then kind of like",
    "start": "2612220",
    "end": "2618400"
  },
  {
    "text": "the the previous proxy example I do single sign-in without having to provide a username and password now I talked a",
    "start": "2618400",
    "end": "2624640"
  },
  {
    "text": "little bit it gets truncated over here you can see this is the name of the role that I assumed and here's the the",
    "start": "2624640",
    "end": "2631420"
  },
  {
    "text": "password that I passed over as part of the the role session name so that's where those those attributes get used",
    "start": "2631420",
    "end": "2637360"
  },
  {
    "text": "but now I'm in the management console and I can do whatever I want so that's one way of doing single sign-in to the",
    "start": "2637360",
    "end": "2645670"
  },
  {
    "text": "console using sam'l I also want to show you how you can do this programmatically so let me just clean up a few things",
    "start": "2645670",
    "end": "2652360"
  },
  {
    "text": "here so folks use the AWS CLI yeah okay",
    "start": "2652360",
    "end": "2659980"
  },
  {
    "text": "few CLI users okay so one of the things about the CLI is you have to pass credentials right so what if you know I",
    "start": "2659980",
    "end": "2667480"
  },
  {
    "text": "simply wanted to list all my s3 buckets unfortunately I don't have any credentials on this machine and I'm not",
    "start": "2667480",
    "end": "2674140"
  },
  {
    "text": "using a roll so what if I wanted to use sam'l as a way of getting temporary security credentials pipe those into the",
    "start": "2674140",
    "end": "2682200"
  },
  {
    "text": "command line interface and then I never have to use long-term credentials with the management console again so what",
    "start": "2682200",
    "end": "2688540"
  },
  {
    "text": "I've done is I've written a small little wrapper it's actually this sam'l CLI exe",
    "start": "2688540",
    "end": "2693880"
  },
  {
    "text": "and to simplify it I created a batch file and I'll just show you what that looks like and what the batch file is",
    "start": "2693880",
    "end": "2703780"
  },
  {
    "text": "going to do is it's going to tell them my executable a few things first it's going to give it the identity of my ad",
    "start": "2703780",
    "end": "2709960"
  },
  {
    "text": "FS server so this is just URL to that server then I'm going to tell it the sam'l provider the one that I configured",
    "start": "2709960",
    "end": "2717520"
  },
  {
    "text": "in I am that I want to use and then I'm going to specify the role that I want to",
    "start": "2717520",
    "end": "2722680"
  },
  {
    "text": "assume okay and then these here are just you know whatever you were passing on to",
    "start": "2722680",
    "end": "2727900"
  },
  {
    "text": "the command line interface so I'm going to take that batch file and I'm going to",
    "start": "2727900",
    "end": "2734710"
  },
  {
    "text": "say the same command list - three buckets and it's going to go out it's",
    "start": "2734710",
    "end": "2739810"
  },
  {
    "text": "going to request a temporary security credential it's going to take those credentials it's going to pipe them into the to the AWS CLI and I'm gonna be able",
    "start": "2739810",
    "end": "2747640"
  },
  {
    "text": "to issue that command and I can go in now and all day I can just run whatever commands I want and I never have to give",
    "start": "2747640",
    "end": "2756130"
  },
  {
    "text": "my users long-term credentials to be able to do this it's simply every time it's going out as a requesting credentials from from my IDP so how do",
    "start": "2756130",
    "end": "2765040"
  },
  {
    "text": "they do this so let me just set this as",
    "start": "2765040",
    "end": "2770800"
  },
  {
    "text": "the startup project I'll go ahead and run it so the first thing I need to do",
    "start": "2770800",
    "end": "2775900"
  },
  {
    "text": "is get a sam'l token for my identity provider now it's a little bit outside of the scope of this presentation for me",
    "start": "2775900",
    "end": "2781690"
  },
  {
    "text": "to teach you how to do this with a DFS but trust me that I just created a helper class that goes out and requests",
    "start": "2781690",
    "end": "2787900"
  },
  {
    "text": "that from a DFS and what that does is it",
    "start": "2787900",
    "end": "2793869"
  },
  {
    "text": "sends me back a base64 encoded token so is just a sam'l assertion which is an",
    "start": "2793869",
    "end": "2799100"
  },
  {
    "text": "XML document which is then base64 encoded and then I take that and I'm",
    "start": "2799100",
    "end": "2805100"
  },
  {
    "text": "going to request temporary security credentials then we give you give you guys a little bit more visibility I'm",
    "start": "2805100",
    "end": "2814190"
  },
  {
    "text": "going to request temporary security credentials from STS and when I get those credentials one of the things",
    "start": "2814190",
    "end": "2819950"
  },
  {
    "text": "about the command-line tools are you can set environment variables for the access",
    "start": "2819950",
    "end": "2825140"
  },
  {
    "text": "key ID the secret access key and the security token and a nice thing about doing it this way is when I set those",
    "start": "2825140",
    "end": "2831590"
  },
  {
    "text": "environment variables they have a lifetime of the executable so once the executable is disposed those environment",
    "start": "2831590",
    "end": "2837950"
  },
  {
    "text": "variables disappear so they're not lingering around anywhere and so I can go ahead and I can set those environment",
    "start": "2837950",
    "end": "2843170"
  },
  {
    "text": "variables and then here I have just a little helper class which I'll show you",
    "start": "2843170",
    "end": "2850810"
  },
  {
    "text": "it just calls the AWC li in a separate",
    "start": "2850810",
    "end": "2856340"
  },
  {
    "text": "process collects all the standard output and then writes it out writes it out to",
    "start": "2856340",
    "end": "2861920"
  },
  {
    "text": "here and so that's how I'm capturing it so I'm essentially just wrapping that and so if you're using if you already",
    "start": "2861920",
    "end": "2869180"
  },
  {
    "text": "have a solution that supports sam'l you can build this type of solution you never have to use long term credentials to drive the the CLI again",
    "start": "2869180",
    "end": "2878380"
  },
  {
    "text": "okay so that was a couple Federation scenarios showed you API access also",
    "start": "2885150",
    "end": "2891329"
  },
  {
    "text": "using sam'l now those are sample code you can go ahead and you can write those I'm also happy to say that we have a",
    "start": "2891329",
    "end": "2897569"
  },
  {
    "text": "number of partners who provide commercial option commercial software in this space many of them who are in the",
    "start": "2897569",
    "end": "2904680"
  },
  {
    "text": "partner form so if you're interested in and seeing something that has you know 24 by 7 support I encourage you to go",
    "start": "2904680",
    "end": "2912420"
  },
  {
    "text": "ahead and visit their their booths the last use case I want to go through is web identity Federation anybody here",
    "start": "2912420",
    "end": "2919650"
  },
  {
    "text": "creating mobile applications or thinking about creating mobile applications okay couple hands all right so let's say that",
    "start": "2919650",
    "end": "2926309"
  },
  {
    "text": "you want to create a mobile app and you want to create that app and it's backed by AWS you know maybe you want to build",
    "start": "2926309",
    "end": "2932490"
  },
  {
    "start": "2927000",
    "end": "2927000"
  },
  {
    "text": "an app a game that has a leaderboard or maybe you want to do some type of file sharing application or maybe you know",
    "start": "2932490",
    "end": "2938430"
  },
  {
    "text": "you have some like a book reader and you want to share state between your iPad and your iPhone there's a number of",
    "start": "2938430",
    "end": "2944400"
  },
  {
    "text": "challenges in creating mobile applications and using AWS as back-end so first you know those users may or not",
    "start": "2944400",
    "end": "2951569"
  },
  {
    "text": "be authenticated probably guaranteed that your end-users don't have an AWS",
    "start": "2951569",
    "end": "2956819"
  },
  {
    "text": "account so what you're end up going to do is you're going to delegate access to those users like say you're creating a",
    "start": "2956819",
    "end": "2963150"
  },
  {
    "text": "leaderboard I am going to create a mobile app I am going to create a database in DynamoDB in my account and",
    "start": "2963150",
    "end": "2969239"
  },
  {
    "text": "I'm gonna allow those users to store information in it right I'm financially liable for what those users put into",
    "start": "2969239",
    "end": "2976619"
  },
  {
    "text": "that database so there's some good ways to do this and there's some bad ways to do this right",
    "start": "2976619",
    "end": "2982109"
  },
  {
    "text": "typically unfortunately a lot of people will embed credentials in the app you should not embed credentials in the app",
    "start": "2982109",
    "end": "2987720"
  },
  {
    "text": "because those are easily extractable and then someone can take those credentials and do whatever they want with them right so you don't you don't want to do",
    "start": "2987720",
    "end": "2993779"
  },
  {
    "text": "that so a lot of people did then is they would create proxy servers which is a good safe way you put any intermediary",
    "start": "2993779",
    "end": "3000230"
  },
  {
    "text": "into the solution and your application calls that proxy server and it interacts",
    "start": "3000230",
    "end": "3005329"
  },
  {
    "text": "with AWS on your behalf a better way of doing this is using web identity",
    "start": "3005329",
    "end": "3010910"
  },
  {
    "text": "Federation and what web identity Federation allows you to do is authenticate a user with an well known",
    "start": "3010910",
    "end": "3017760"
  },
  {
    "text": "public identity provider like logging in with Amazon log in with Facebook or Google and when you do that we provoke",
    "start": "3017760",
    "end": "3025320"
  },
  {
    "text": "we allow you to request temporary security credentials without having to use long term credentials okay let me",
    "start": "3025320",
    "end": "3031890"
  },
  {
    "text": "show you a diagram that explains this a little bit better so let's say you have a mobile application right and that",
    "start": "3031890",
    "end": "3038310"
  },
  {
    "start": "3035000",
    "end": "3035000"
  },
  {
    "text": "mobile application is gonna authenticate with login with Amazon ok so users are going to log into your app using their",
    "start": "3038310",
    "end": "3044670"
  },
  {
    "text": "their Amazon username and password the same one they use to log into the Amazon retail site and what's going to end up",
    "start": "3044670",
    "end": "3051390"
  },
  {
    "text": "happening is when they authenticate they get back an ID an ID token right so it",
    "start": "3051390",
    "end": "3057120"
  },
  {
    "text": "is a pretty standard way this works with Amazon Facebook and Google they'll pass you back this token and what we allow",
    "start": "3057120",
    "end": "3062730"
  },
  {
    "text": "you to do is make an assumed role with web identity request and this is similar",
    "start": "3062730",
    "end": "3067980"
  },
  {
    "text": "to the assumed roll with sam'l and that it's an unauthenticated request and it's anonymous request because you're passing",
    "start": "3067980",
    "end": "3074400"
  },
  {
    "text": "the token that's what identifies you ok so here you don't have to have any",
    "start": "3074400",
    "end": "3079800"
  },
  {
    "text": "long-term credentials in your application to make this request you just have to have a valid token from the",
    "start": "3079800",
    "end": "3085320"
  },
  {
    "text": "identity provider and then on the back end we take that token and we send it over to those identity providers when we",
    "start": "3085320",
    "end": "3091740"
  },
  {
    "text": "say is this valid you know is this really who they're supposed to be and if they are they provide us additional",
    "start": "3091740",
    "end": "3097080"
  },
  {
    "text": "context like who is the user what is the application they're trying to use and that context then becomes variables that",
    "start": "3097080",
    "end": "3105330"
  },
  {
    "text": "you can use in your policies and if you don't know what policy variables are I encourage you to go back and see my",
    "start": "3105330",
    "end": "3110670"
  },
  {
    "text": "webcast from yesterday so we get that back and then we check it against the policy and we make sure that it's it's",
    "start": "3110670",
    "end": "3117840"
  },
  {
    "text": "valid with the trust that they're trying to assume and then we send back your application temporary security credentials and just as we've seen once",
    "start": "3117840",
    "end": "3125220"
  },
  {
    "text": "you have those credentials you can rock on and you can call any of the api's that you've associated with the role so",
    "start": "3125220",
    "end": "3133640"
  },
  {
    "start": "3133000",
    "end": "3133000"
  },
  {
    "text": "some of the benefits of web identity Federation obviously you get to create mobile this also works I'll take a pause",
    "start": "3133640",
    "end": "3141060"
  },
  {
    "text": "here that I we built this for mobile applications but is anybody using the new JavaScript SDK that came out yeah",
    "start": "3141060",
    "end": "3147630"
  },
  {
    "text": "this is another great use of assume roll with web identity Federation",
    "start": "3147630",
    "end": "3152760"
  },
  {
    "text": "because if you're building client-side web applications you have the same constraints you don't want to expose",
    "start": "3152760",
    "end": "3158850"
  },
  {
    "text": "your credentials in that so if you are creating client-side driven applications",
    "start": "3158850",
    "end": "3164000"
  },
  {
    "text": "you can do the same thing where you login with Amazon Facebook or Google those are the three providers that we",
    "start": "3164000",
    "end": "3170160"
  },
  {
    "text": "support today and then you get temporary credentials and so then you're not exposing long term credentials to your",
    "start": "3170160",
    "end": "3175710"
  },
  {
    "text": "web-based apps but if you're creating mobile or web based apps this is a great way to do this it eliminates the need to",
    "start": "3175710",
    "end": "3181350"
  },
  {
    "text": "directly embed credentials in your app or your website and it also eliminates the need to to deploy and maintain those",
    "start": "3181350",
    "end": "3187800"
  },
  {
    "text": "proxy service I'm not going to show you a code sample of this one today but we do it does have the assumed role with",
    "start": "3187800",
    "end": "3194670"
  },
  {
    "text": "web identity API what you do is you create a role for each of your",
    "start": "3194670",
    "end": "3199710"
  },
  {
    "text": "applications so when you create an app and you register it with say a Facebook they'll give you back a unique",
    "start": "3199710",
    "end": "3205860"
  },
  {
    "text": "application ID for each of those applications you create a role that trust that identity provider and then",
    "start": "3205860",
    "end": "3212910"
  },
  {
    "text": "you place them an access policy on that role which determines what your users can do you know read from a bucket write",
    "start": "3212910",
    "end": "3220620"
  },
  {
    "text": "to a table if you're interested in this I highly recommend you go to it's the",
    "start": "3220620",
    "end": "3226860"
  },
  {
    "text": "afternoon session 1:30 back in this room it's Security 401 Bob Kinney is gonna do",
    "start": "3226860",
    "end": "3234600"
  },
  {
    "text": "an entire session on building mobile applications he does it much better than I do",
    "start": "3234600",
    "end": "3239880"
  },
  {
    "text": "so I highly recommend if you're interested in that topic you come back here after lunch and you can learn more",
    "start": "3239880",
    "end": "3245250"
  },
  {
    "text": "about that now we're getting back you're getting down to the bottom and I want to make say a few final words on using",
    "start": "3245250",
    "end": "3252660"
  },
  {
    "text": "temporary security credentials first of all I want to be completely transparent are there any limitations to using",
    "start": "3252660",
    "end": "3258690"
  },
  {
    "text": "sessions today there are a couple services that don't support temporary security credentials by and large all",
    "start": "3258690",
    "end": "3266130"
  },
  {
    "text": "other services do but if you're using elastic beanstalk and elastic MapReduce i just want to you know warn you in",
    "start": "3266130",
    "end": "3272940"
  },
  {
    "start": "3269000",
    "end": "3269000"
  },
  {
    "text": "advance today you do need to use credentials from say an IM user you'll find that even if you log into the",
    "start": "3272940",
    "end": "3279660"
  },
  {
    "text": "management console we block those services if you single sign-on so that's one limitation",
    "start": "3279660",
    "end": "3286200"
  },
  {
    "text": "we have today we hope in the near future this will be a hundred percent coverage the other thing is the difference",
    "start": "3286200",
    "end": "3292650"
  },
  {
    "text": "between a federated session and an assumed role session so if you're using get Federation token you can get",
    "start": "3292650",
    "end": "3300210"
  },
  {
    "text": "sessions that last for up to 36 hours okay and you know for your protection",
    "start": "3300210",
    "end": "3306119"
  },
  {
    "text": "we don't allow you to call the security token service or Identity and Access Management because those are pretty",
    "start": "3306119",
    "end": "3311430"
  },
  {
    "text": "privileged API it's like if someone were to take those temporary security credentials you know by mistake you",
    "start": "3311430",
    "end": "3316830"
  },
  {
    "text": "expose them they could then co-create users in your account so by default we",
    "start": "3316830",
    "end": "3322020"
  },
  {
    "text": "don't allow you to call STS or I am using federated sessions now assume role are scoped you can only create a session",
    "start": "3322020",
    "end": "3330030"
  },
  {
    "text": "that has a lifetime of 60 minutes and so there it is possible to create temporary security credentials that are privileged",
    "start": "3330030",
    "end": "3336180"
  },
  {
    "text": "you can create you can call I am and if you assume a role you can use those",
    "start": "3336180",
    "end": "3342030"
  },
  {
    "text": "temporary security credentials to then make subsequent calls to assume role one common scenario for this is let's say",
    "start": "3342030",
    "end": "3349290"
  },
  {
    "text": "you take a role and you launch an ec2 instance you can then you what's happening in the back end is ec2 is",
    "start": "3349290",
    "end": "3355200"
  },
  {
    "text": "making an assumed role call to put those credentials on your instance you can then take those credentials and call",
    "start": "3355200",
    "end": "3361680"
  },
  {
    "text": "multiple roles a common question I get is can I launch an instance with multiple roles you can launch an",
    "start": "3361680",
    "end": "3367830"
  },
  {
    "text": "instance with one role but then that one role can make subsequent calls to assume role if you need to get different sets",
    "start": "3367830",
    "end": "3374970"
  },
  {
    "text": "of permissions for your applications so that's one way of working around and that's one of the things you can do with",
    "start": "3374970",
    "end": "3381060"
  },
  {
    "text": "it okay in summary we looked at a number of scenarios one of them was the cross",
    "start": "3381060",
    "end": "3388560"
  },
  {
    "start": "3385000",
    "end": "3385000"
  },
  {
    "text": "account API access just to remind you this is a great scenario so that you can",
    "start": "3388560",
    "end": "3393869"
  },
  {
    "text": "use one set of credentials and you can use them to access any of your resources you don't have to share long-term",
    "start": "3393869",
    "end": "3399869"
  },
  {
    "text": "credentials with your co-workers with your business partners we looked at a number of Federation scenarios whether",
    "start": "3399869",
    "end": "3406020"
  },
  {
    "text": "you're using single sign into the management console or API Federation this allows you to use your existing",
    "start": "3406020",
    "end": "3412890"
  },
  {
    "text": "corporate identities to access AWS resources we also looked at how you can use sam'l an open",
    "start": "3412890",
    "end": "3419740"
  },
  {
    "text": "standard to perform to to do that and the last scenario we took a look at was web identity Federation when you",
    "start": "3419740",
    "end": "3425260"
  },
  {
    "text": "remember this is the ability to log in with a public identity provider like Amazon Facebook or Google and do",
    "start": "3425260",
    "end": "3430810"
  },
  {
    "text": "Federation if you want some additional resources of course you can always go to our detail page our documentation is",
    "start": "3430810",
    "end": "3437290"
  },
  {
    "text": "fantastic if you're using this and you have questions I hang out in the IM forum quite a bit so if you're having",
    "start": "3437290",
    "end": "3444520"
  },
  {
    "text": "problems it's probably a pretty good chance that I would reply to you personally and then of course we put a",
    "start": "3444520",
    "end": "3450010"
  },
  {
    "text": "lot of additional information into the AWS security blog if you're not already following our blog or following us on",
    "start": "3450010",
    "end": "3455530"
  },
  {
    "text": "Twitter that is where we're going to put all of our announcements so with that we",
    "start": "3455530",
    "end": "3462040"
  },
  {
    "text": "did have a bunch of sessions this is kind of the last in the series though I do encourage you to come back in the",
    "start": "3462040",
    "end": "3467230"
  },
  {
    "text": "afternoon if you're interested in the mobile one I'm running low on time so I will stick around afterwards to take",
    "start": "3467230",
    "end": "3473650"
  },
  {
    "text": "questions but if you find you know that you don't have time we're also going to have the I am and security team in",
    "start": "3473650",
    "end": "3480280"
  },
  {
    "text": "Toscana 3605 just upstairs at four o'clock today so if you want to meet",
    "start": "3480280",
    "end": "3485410"
  },
  {
    "text": "with me or the members of my team will be there to talk security with you and",
    "start": "3485410",
    "end": "3490450"
  },
  {
    "text": "with that I just want to say thank you for sticking with me for the last hour",
    "start": "3490450",
    "end": "3496950"
  }
]