[
  {
    "start": "0",
    "end": "105000"
  },
  {
    "text": "[Music]",
    "start": "240",
    "end": "3560"
  },
  {
    "text": "hello folks my name is Muhammad Ali and",
    "start": "6960",
    "end": "9780"
  },
  {
    "text": "I'm a principal specialist essay at AWS",
    "start": "9780",
    "end": "12620"
  },
  {
    "text": "today I'm going to introduce an AWS",
    "start": "12620",
    "end": "16440"
  },
  {
    "text": "solution called centralized logging with",
    "start": "16440",
    "end": "18900"
  },
  {
    "text": "open search",
    "start": "18900",
    "end": "20039"
  },
  {
    "text": "the solution helps organizations collect",
    "start": "20039",
    "end": "23060"
  },
  {
    "text": "ingest and visualize log data from many",
    "start": "23060",
    "end": "27119"
  },
  {
    "text": "AWS services or your custom applications",
    "start": "27119",
    "end": "29820"
  },
  {
    "text": "or log sources",
    "start": "29820",
    "end": "31740"
  },
  {
    "text": "the solution offers a web-based console",
    "start": "31740",
    "end": "34500"
  },
  {
    "text": "which you can use to create log",
    "start": "34500",
    "end": "36600"
  },
  {
    "text": "ingestion pipelines with just a few",
    "start": "36600",
    "end": "38940"
  },
  {
    "text": "clicks this brings down the time to",
    "start": "38940",
    "end": "42360"
  },
  {
    "text": "build a log analytic solution from few",
    "start": "42360",
    "end": "45420"
  },
  {
    "text": "days to just 20 minutes so let's say I'm",
    "start": "45420",
    "end": "48780"
  },
  {
    "text": "a retailer and I'm hosting a book and",
    "start": "48780",
    "end": "51360"
  },
  {
    "text": "toy store website in eks cluster and I'm",
    "start": "51360",
    "end": "54960"
  },
  {
    "text": "using AWS application load balancer to",
    "start": "54960",
    "end": "57960"
  },
  {
    "text": "Route the traffic to my eks cluster and",
    "start": "57960",
    "end": "61140"
  },
  {
    "text": "I have a web application firewall in",
    "start": "61140",
    "end": "63120"
  },
  {
    "text": "place to wet the traffic my static",
    "start": "63120",
    "end": "66119"
  },
  {
    "text": "content will be served to my user",
    "start": "66119",
    "end": "68460"
  },
  {
    "text": "through my content distribution Network",
    "start": "68460",
    "end": "70760"
  },
  {
    "text": "Amazon cloudfront",
    "start": "70760",
    "end": "73560"
  },
  {
    "text": "and I have an RDS database that contains",
    "start": "73560",
    "end": "76500"
  },
  {
    "text": "my orders and product catalog we have",
    "start": "76500",
    "end": "79439"
  },
  {
    "text": "two microservices in eks one is an nginx",
    "start": "79439",
    "end": "83939"
  },
  {
    "text": "server and the other one uses spring",
    "start": "83939",
    "end": "86880"
  },
  {
    "text": "boot",
    "start": "86880",
    "end": "88140"
  },
  {
    "text": "I'll use Amazon open search service for",
    "start": "88140",
    "end": "91320"
  },
  {
    "text": "my log analysis and all and all of this",
    "start": "91320",
    "end": "94380"
  },
  {
    "text": "is already in place and deployed in my",
    "start": "94380",
    "end": "96840"
  },
  {
    "text": "AWS account now all I want is my logs to",
    "start": "96840",
    "end": "100920"
  },
  {
    "text": "be in open search in the next 20 minutes",
    "start": "100920",
    "end": "103380"
  },
  {
    "text": "so let's get started",
    "start": "103380",
    "end": "105960"
  },
  {
    "start": "105000",
    "end": "152000"
  },
  {
    "text": "so I'll start by logging into",
    "start": "105960",
    "end": "108140"
  },
  {
    "text": "centralized logging Solutions web",
    "start": "108140",
    "end": "110939"
  },
  {
    "text": "console which I've already deployed in",
    "start": "110939",
    "end": "112860"
  },
  {
    "text": "AWS account we'll start by importing",
    "start": "112860",
    "end": "114960"
  },
  {
    "text": "open search domain that we want to send",
    "start": "114960",
    "end": "116520"
  },
  {
    "text": "the logs to we will choose open search",
    "start": "116520",
    "end": "118860"
  },
  {
    "text": "OS domain as our Target",
    "start": "118860",
    "end": "120840"
  },
  {
    "text": "and select all the other automatic",
    "start": "120840",
    "end": "122640"
  },
  {
    "text": "options",
    "start": "122640",
    "end": "123720"
  },
  {
    "text": "and click import to import the domain",
    "start": "123720",
    "end": "127079"
  },
  {
    "text": "now I have created a proxy for open",
    "start": "127079",
    "end": "129300"
  },
  {
    "text": "search dashboard using the same solution",
    "start": "129300",
    "end": "131220"
  },
  {
    "text": "which I'll use to log into open search",
    "start": "131220",
    "end": "133739"
  },
  {
    "text": "dashboard",
    "start": "133739",
    "end": "136340"
  },
  {
    "text": "this looks good and now we're ready to",
    "start": "141060",
    "end": "143819"
  },
  {
    "text": "start importing the logs from our retail",
    "start": "143819",
    "end": "146459"
  },
  {
    "text": "website the website that we have",
    "start": "146459",
    "end": "148980"
  },
  {
    "text": "contains for your books and a toy in the",
    "start": "148980",
    "end": "151560"
  },
  {
    "text": "product catalog the interactions that we",
    "start": "151560",
    "end": "153959"
  },
  {
    "start": "152000",
    "end": "261000"
  },
  {
    "text": "do create traffic and logs that we will",
    "start": "153959",
    "end": "156540"
  },
  {
    "text": "monitor using open search so the first",
    "start": "156540",
    "end": "158640"
  },
  {
    "text": "component we will pull the logs from is",
    "start": "158640",
    "end": "160560"
  },
  {
    "text": "cloudfront distribution",
    "start": "160560",
    "end": "162300"
  },
  {
    "text": "now let's go back to centralized login",
    "start": "162300",
    "end": "164099"
  },
  {
    "text": "console and navigate to AWS service log",
    "start": "164099",
    "end": "167700"
  },
  {
    "text": "and create a log ingestion",
    "start": "167700",
    "end": "171480"
  },
  {
    "text": "we will select cloudfront as the source",
    "start": "171480",
    "end": "174060"
  },
  {
    "text": "and choose automatic method",
    "start": "174060",
    "end": "176400"
  },
  {
    "text": "for configuration",
    "start": "176400",
    "end": "179900"
  },
  {
    "text": "we will select the current account and",
    "start": "183060",
    "end": "185700"
  },
  {
    "text": "it will bring us the list of the",
    "start": "185700",
    "end": "186840"
  },
  {
    "text": "cloudfront distributions that are",
    "start": "186840",
    "end": "188640"
  },
  {
    "text": "available we'll select the one for our",
    "start": "188640",
    "end": "190319"
  },
  {
    "text": "web store",
    "start": "190319",
    "end": "192000"
  },
  {
    "text": "select the standard logs",
    "start": "192000",
    "end": "194280"
  },
  {
    "text": "now the solution offers out of the box",
    "start": "194280",
    "end": "196620"
  },
  {
    "text": "log processing and enrichment features",
    "start": "196620",
    "end": "198720"
  },
  {
    "text": "such as adding location fields for IP",
    "start": "198720",
    "end": "200879"
  },
  {
    "text": "addresses and browser agent information",
    "start": "200879",
    "end": "203280"
  },
  {
    "text": "all automatically",
    "start": "203280",
    "end": "205680"
  },
  {
    "text": "we will then select the open search",
    "start": "205680",
    "end": "207239"
  },
  {
    "text": "domain that we want to send the logs to",
    "start": "207239",
    "end": "208980"
  },
  {
    "text": "and ask the solution to install a",
    "start": "208980",
    "end": "211560"
  },
  {
    "text": "pre-built dashboard for cloudfront the",
    "start": "211560",
    "end": "214500"
  },
  {
    "text": "solution configures underlying open",
    "start": "214500",
    "end": "216300"
  },
  {
    "text": "search index template sets the shards",
    "start": "216300",
    "end": "218760"
  },
  {
    "text": "and rollover configuration by itself",
    "start": "218760",
    "end": "220799"
  },
  {
    "text": "I'll use the default options provided",
    "start": "220799",
    "end": "224280"
  },
  {
    "text": "the solution can also configure index",
    "start": "224280",
    "end": "226620"
  },
  {
    "text": "lifecycle to move data to lower cost",
    "start": "226620",
    "end": "229200"
  },
  {
    "text": "tiers such as ultramomb if you need to",
    "start": "229200",
    "end": "231720"
  },
  {
    "text": "retain the data for a longer period of",
    "start": "231720",
    "end": "233459"
  },
  {
    "text": "time",
    "start": "233459",
    "end": "235700"
  },
  {
    "text": "and once done our cloudfront index",
    "start": "241819",
    "end": "244980"
  },
  {
    "text": "should be available in our open search",
    "start": "244980",
    "end": "247860"
  },
  {
    "text": "domain",
    "start": "247860",
    "end": "250280"
  },
  {
    "text": "there you go",
    "start": "252840",
    "end": "254459"
  },
  {
    "text": "now we will simulate some traffic by",
    "start": "254459",
    "end": "256500"
  },
  {
    "text": "generating cloudfront logs using an",
    "start": "256500",
    "end": "259139"
  },
  {
    "text": "option in our application",
    "start": "259139",
    "end": "262079"
  },
  {
    "start": "261000",
    "end": "331000"
  },
  {
    "text": "once the logs are generated we can",
    "start": "262079",
    "end": "263940"
  },
  {
    "text": "navigate to open search dashboard to see",
    "start": "263940",
    "end": "265800"
  },
  {
    "text": "our new shiny cloudfront dashboard",
    "start": "265800",
    "end": "269220"
  },
  {
    "text": "now this whole process from importing",
    "start": "269220",
    "end": "271440"
  },
  {
    "text": "the domain to getting the cloudfront",
    "start": "271440",
    "end": "273540"
  },
  {
    "text": "logs shouldn't take more than 10 minutes",
    "start": "273540",
    "end": "277940"
  },
  {
    "text": "we will continue ingesting log from our",
    "start": "280080",
    "end": "282479"
  },
  {
    "text": "other services so we can correlate the",
    "start": "282479",
    "end": "284460"
  },
  {
    "text": "events between the parts of the",
    "start": "284460",
    "end": "285840"
  },
  {
    "text": "application now the second component is",
    "start": "285840",
    "end": "288060"
  },
  {
    "text": "web application firewall which is",
    "start": "288060",
    "end": "290220"
  },
  {
    "text": "configured to block suspicious traffic",
    "start": "290220",
    "end": "291900"
  },
  {
    "text": "from reaching our application we'll",
    "start": "291900",
    "end": "293940"
  },
  {
    "text": "follow a similar visitor to create the",
    "start": "293940",
    "end": "295680"
  },
  {
    "text": "ingestion the solution will pull us the",
    "start": "295680",
    "end": "297960"
  },
  {
    "text": "list of Wrath ACLS that we want to",
    "start": "297960",
    "end": "300120"
  },
  {
    "text": "monitor in our account once we select",
    "start": "300120",
    "end": "302940"
  },
  {
    "text": "that",
    "start": "302940",
    "end": "304440"
  },
  {
    "text": "and we will select the open search",
    "start": "304440",
    "end": "306060"
  },
  {
    "text": "domain and ask the solution to install a",
    "start": "306060",
    "end": "309120"
  },
  {
    "text": "pre-built dashboard for web application",
    "start": "309120",
    "end": "311100"
  },
  {
    "text": "firewall as well once the log ingestion",
    "start": "311100",
    "end": "313919"
  },
  {
    "text": "is active we can go back to open search",
    "start": "313919",
    "end": "315840"
  },
  {
    "text": "dashboard to see a new dashboard for vaf",
    "start": "315840",
    "end": "319020"
  },
  {
    "text": "is installed",
    "start": "319020",
    "end": "320520"
  },
  {
    "text": "the vaf dashboard offers various metrics",
    "start": "320520",
    "end": "323580"
  },
  {
    "text": "such as number of requests traffic",
    "start": "323580",
    "end": "325979"
  },
  {
    "text": "levels number of requests blocked by the",
    "start": "325979",
    "end": "328680"
  },
  {
    "text": "web",
    "start": "328680",
    "end": "330800"
  },
  {
    "text": "you can also see the details of each",
    "start": "331919",
    "end": "333840"
  },
  {
    "text": "request as well",
    "start": "333840",
    "end": "336060"
  },
  {
    "text": "we do have filters at the Top If you",
    "start": "336060",
    "end": "338639"
  },
  {
    "text": "wanted to filter based on certain",
    "start": "338639",
    "end": "341580"
  },
  {
    "text": "attribute or field let's say we want to",
    "start": "341580",
    "end": "344699"
  },
  {
    "text": "see the block request so we'll select",
    "start": "344699",
    "end": "346800"
  },
  {
    "text": "the action block and it will filter the",
    "start": "346800",
    "end": "349080"
  },
  {
    "text": "request that were blocked by Raff now",
    "start": "349080",
    "end": "352919"
  },
  {
    "text": "our final AWS service that we will want",
    "start": "352919",
    "end": "355500"
  },
  {
    "text": "to pull the logs from is RDS",
    "start": "355500",
    "end": "358380"
  },
  {
    "text": "again the steps remain the same pick the",
    "start": "358380",
    "end": "361259"
  },
  {
    "text": "database instance from your account that",
    "start": "361259",
    "end": "363060"
  },
  {
    "text": "you want to pull the logs from and",
    "start": "363060",
    "end": "365220"
  },
  {
    "text": "select the types of log you want and the",
    "start": "365220",
    "end": "367440"
  },
  {
    "text": "solution will automatically install a",
    "start": "367440",
    "end": "369240"
  },
  {
    "text": "dashboard which contains useful RDS",
    "start": "369240",
    "end": "372060"
  },
  {
    "text": "metrics and ability to view slow queries",
    "start": "372060",
    "end": "376620"
  },
  {
    "text": "that are received by RDS",
    "start": "376620",
    "end": "380120"
  },
  {
    "text": "that will still simulate a couple of",
    "start": "394860",
    "end": "397620"
  },
  {
    "text": "slow queries",
    "start": "397620",
    "end": "400400"
  },
  {
    "text": "and there you go it's got picked up by",
    "start": "406740",
    "end": "409380"
  },
  {
    "text": "our dashboard and you can actually go",
    "start": "409380",
    "end": "411720"
  },
  {
    "text": "and see the actual query that is uh that",
    "start": "411720",
    "end": "415380"
  },
  {
    "text": "is slow",
    "start": "415380",
    "end": "417740"
  },
  {
    "start": "421000",
    "end": "537000"
  },
  {
    "text": "now we will move our attention to our",
    "start": "421919",
    "end": "423720"
  },
  {
    "text": "custom application logs in our case we",
    "start": "423720",
    "end": "425819"
  },
  {
    "text": "have two microservices running an eks",
    "start": "425819",
    "end": "428220"
  },
  {
    "text": "cluster nginx and spring boot service",
    "start": "428220",
    "end": "430740"
  },
  {
    "text": "first we will create what is called",
    "start": "430740",
    "end": "432960"
  },
  {
    "text": "ingestion pipeline",
    "start": "432960",
    "end": "434880"
  },
  {
    "text": "which will create a buffering layer",
    "start": "434880",
    "end": "439259"
  },
  {
    "text": "for nginx log we will select the",
    "start": "439259",
    "end": "441660"
  },
  {
    "text": "pipeline that uses Kinesis data stream",
    "start": "441660",
    "end": "443819"
  },
  {
    "text": "as our buffing buffering layer",
    "start": "443819",
    "end": "447560"
  },
  {
    "text": "and it will create another ingestion",
    "start": "457020",
    "end": "458940"
  },
  {
    "text": "pipeline for spring Boot and this time",
    "start": "458940",
    "end": "460860"
  },
  {
    "text": "we'll use S3 as our buffering layer",
    "start": "460860",
    "end": "463919"
  },
  {
    "text": "this is where we will collect the logs",
    "start": "463919",
    "end": "466139"
  },
  {
    "text": "from our application before pushing into",
    "start": "466139",
    "end": "468660"
  },
  {
    "text": "open search we will select the bucket",
    "start": "468660",
    "end": "471060"
  },
  {
    "text": "that we want to pull the logs into",
    "start": "471060",
    "end": "474180"
  },
  {
    "text": "now that is our ingestion pipeline the",
    "start": "474180",
    "end": "477180"
  },
  {
    "text": "second step is to create log processing",
    "start": "477180",
    "end": "479759"
  },
  {
    "text": "configuration",
    "start": "479759",
    "end": "481440"
  },
  {
    "text": "now or or simply called log configs here",
    "start": "481440",
    "end": "484800"
  },
  {
    "text": "this is to Define how the logs need to",
    "start": "484800",
    "end": "488220"
  },
  {
    "text": "be processed we will Define one for",
    "start": "488220",
    "end": "489960"
  },
  {
    "text": "nginx now there are a few log types that",
    "start": "489960",
    "end": "493080"
  },
  {
    "text": "are supported out of the box nginx is",
    "start": "493080",
    "end": "495060"
  },
  {
    "text": "one of them we will provide a a regular",
    "start": "495060",
    "end": "498539"
  },
  {
    "text": "expression to to allow it to parse the",
    "start": "498539",
    "end": "501960"
  },
  {
    "text": "logs we'll test out with a sample log",
    "start": "501960",
    "end": "505199"
  },
  {
    "text": "line to see our field values are getting",
    "start": "505199",
    "end": "507440"
  },
  {
    "text": "parsed properly",
    "start": "507440",
    "end": "510240"
  },
  {
    "text": "that looks good to me I'll go next and",
    "start": "510240",
    "end": "512940"
  },
  {
    "text": "then we'll create another one for spring",
    "start": "512940",
    "end": "514440"
  },
  {
    "text": "Boot and spring boot is also a log type",
    "start": "514440",
    "end": "517560"
  },
  {
    "text": "that is supported out of the box",
    "start": "517560",
    "end": "521360"
  },
  {
    "text": "we'll test out another",
    "start": "525000",
    "end": "527480"
  },
  {
    "text": "log line to see if the spring boot blogs",
    "start": "527480",
    "end": "530940"
  },
  {
    "text": "are processed properly",
    "start": "530940",
    "end": "534140"
  },
  {
    "start": "537000",
    "end": "649000"
  },
  {
    "text": "now we've got our configuration an",
    "start": "537720",
    "end": "539519"
  },
  {
    "text": "ingestion pipeline in place now we will",
    "start": "539519",
    "end": "542100"
  },
  {
    "text": "move towards eks cluster we'll first",
    "start": "542100",
    "end": "544260"
  },
  {
    "text": "import the eks cluster that is hosting",
    "start": "544260",
    "end": "546779"
  },
  {
    "text": "our application",
    "start": "546779",
    "end": "549440"
  },
  {
    "text": "once our eks cluster is imported",
    "start": "562860",
    "end": "566899"
  },
  {
    "text": "we will",
    "start": "567480",
    "end": "568860"
  },
  {
    "text": "we will create",
    "start": "568860",
    "end": "571560"
  },
  {
    "text": "what is called log ingestion",
    "start": "571560",
    "end": "573720"
  },
  {
    "text": "we'll create a log injection which is",
    "start": "573720",
    "end": "576000"
  },
  {
    "text": "basically a configuration for a",
    "start": "576000",
    "end": "577680"
  },
  {
    "text": "collector we'll create one for nginx",
    "start": "577680",
    "end": "580140"
  },
  {
    "text": "we'll provide the path that the agent",
    "start": "580140",
    "end": "582600"
  },
  {
    "text": "will put logs from and the configuration",
    "start": "582600",
    "end": "585360"
  },
  {
    "text": "that it will use for processing the logs",
    "start": "585360",
    "end": "589380"
  },
  {
    "text": "this will complete our pipeline all the",
    "start": "589380",
    "end": "591779"
  },
  {
    "text": "way from collection to buffering and",
    "start": "591779",
    "end": "594420"
  },
  {
    "text": "writing to open search dashboard",
    "start": "594420",
    "end": "596820"
  },
  {
    "text": "I'll create another one for spring boot",
    "start": "596820",
    "end": "601260"
  },
  {
    "text": "we'll pick the pipeline for first for",
    "start": "601260",
    "end": "605160"
  },
  {
    "text": "spring boot will provide the path",
    "start": "605160",
    "end": "609480"
  },
  {
    "text": "I'll select the configuration for",
    "start": "609480",
    "end": "610980"
  },
  {
    "text": "processing",
    "start": "610980",
    "end": "613519"
  },
  {
    "text": "now once done",
    "start": "614760",
    "end": "616800"
  },
  {
    "text": "we can ask the solution to create a",
    "start": "616800",
    "end": "619680"
  },
  {
    "text": "kubernetes manifest",
    "start": "619680",
    "end": "622080"
  },
  {
    "text": "for these agents automatically now the",
    "start": "622080",
    "end": "626220"
  },
  {
    "text": "Manifest contains configuration of two",
    "start": "626220",
    "end": "629880"
  },
  {
    "text": "fluid bit containers here that will pull",
    "start": "629880",
    "end": "632399"
  },
  {
    "text": "the logs from our configured path and",
    "start": "632399",
    "end": "634620"
  },
  {
    "text": "put it put it into the the pipeline that",
    "start": "634620",
    "end": "638880"
  },
  {
    "text": "we created one for KDs and one for S3",
    "start": "638880",
    "end": "643500"
  },
  {
    "text": "now one container will pull the logs for",
    "start": "643500",
    "end": "646140"
  },
  {
    "text": "nginx and the other one will do it for",
    "start": "646140",
    "end": "648660"
  },
  {
    "text": "spring boot",
    "start": "648660",
    "end": "649980"
  },
  {
    "start": "649000",
    "end": "739000"
  },
  {
    "text": "what we could do is we can just take",
    "start": "649980",
    "end": "652320"
  },
  {
    "text": "that generated yaml file",
    "start": "652320",
    "end": "654600"
  },
  {
    "text": "copy it into a file and apply to our",
    "start": "654600",
    "end": "659160"
  },
  {
    "text": "kubernetes cluster",
    "start": "659160",
    "end": "661800"
  },
  {
    "text": "and that should start our containers",
    "start": "661800",
    "end": "664200"
  },
  {
    "text": "that will pull that will collect the",
    "start": "664200",
    "end": "666180"
  },
  {
    "text": "logs and start pushing it through the",
    "start": "666180",
    "end": "667920"
  },
  {
    "text": "pipeline that we've created",
    "start": "667920",
    "end": "670560"
  },
  {
    "text": "I'll simulate some traffic again to see",
    "start": "670560",
    "end": "673440"
  },
  {
    "text": "fresh logs",
    "start": "673440",
    "end": "676160"
  },
  {
    "text": "now you can see the logs from each of",
    "start": "676500",
    "end": "679200"
  },
  {
    "text": "our sources when we navigate to our",
    "start": "679200",
    "end": "681480"
  },
  {
    "text": "dashboard this is wav",
    "start": "681480",
    "end": "685399"
  },
  {
    "text": "this is cloudfront",
    "start": "688860",
    "end": "692240"
  },
  {
    "text": "nginx and spring boot",
    "start": "696839",
    "end": "699720"
  },
  {
    "text": "now for all of these logs the resolution",
    "start": "699720",
    "end": "702360"
  },
  {
    "text": "has created dashboard so what you can do",
    "start": "702360",
    "end": "704579"
  },
  {
    "text": "from there is you can cherry pick the",
    "start": "704579",
    "end": "706980"
  },
  {
    "text": "visuals that you like to put together in",
    "start": "706980",
    "end": "711120"
  },
  {
    "text": "and and create a dashboard of your own",
    "start": "711120",
    "end": "713160"
  },
  {
    "text": "just like the way I have done here this",
    "start": "713160",
    "end": "715560"
  },
  {
    "text": "is the dashboard that displays the",
    "start": "715560",
    "end": "717360"
  },
  {
    "text": "metrics from my application from CDN to",
    "start": "717360",
    "end": "720240"
  },
  {
    "text": "wav to all the way to RDS database",
    "start": "720240",
    "end": "723120"
  },
  {
    "text": "now if there was a problem in my",
    "start": "723120",
    "end": "724800"
  },
  {
    "text": "application I can quickly jump into this",
    "start": "724800",
    "end": "726899"
  },
  {
    "text": "dashboard and drill down into the into",
    "start": "726899",
    "end": "729600"
  },
  {
    "text": "the component I want to dive deeper and",
    "start": "729600",
    "end": "732360"
  },
  {
    "text": "that concludes my demo and thank you for",
    "start": "732360",
    "end": "734399"
  },
  {
    "text": "watching",
    "start": "734399",
    "end": "736760"
  },
  {
    "text": "[Music]",
    "start": "737410",
    "end": "740660"
  }
]