[
  {
    "text": "Welcome to This Is My Architecture.",
    "start": "10209",
    "end": "12000"
  },
  {
    "text": "I am Paola and I am here \nwith Tommaso from Miriade.",
    "start": "12000",
    "end": "14878"
  },
  {
    "text": "-Thank you for being here, Tommaso.\n-Thank you, Paola.",
    "start": "14878",
    "end": "17405"
  },
  {
    "text": "What does Miriade do?",
    "start": "17405",
    "end": "19000"
  },
  {
    "text": "Miriade is a consulting firm\nthat deals with middleware.",
    "start": "19139",
    "end": "22426"
  },
  {
    "text": "It is specialized in several fields",
    "start": "22426",
    "end": "24732"
  },
  {
    "text": "above all, big data, machine learning \nand advanced analytics.",
    "start": "24732",
    "end": "28242"
  },
  {
    "text": "-Can you tell us about your proposal?\n-Yes.",
    "start": "28596",
    "end": "30997"
  },
  {
    "text": "We created this solution \nfor AIM Mobilit√†,",
    "start": "31136",
    "end": "33943"
  },
  {
    "text": "one of our clients that deals \nwith parking management",
    "start": "33943",
    "end": "36725"
  },
  {
    "text": "and rest areas.",
    "start": "36725",
    "end": "38795"
  },
  {
    "text": "The need of the client was \nto put together all the data",
    "start": "39924",
    "end": "43159"
  },
  {
    "text": "from the parking areas to make \nprevisions of machine learning",
    "start": "43159",
    "end": "47362"
  },
  {
    "text": "about the future state of occupancy\n and then make available to the public",
    "start": "47362",
    "end": "50525"
  },
  {
    "text": "real-time data about \nthe current situation.",
    "start": "50525",
    "end": "53139"
  },
  {
    "text": "Everything starts from the parking lots \nwhich send to Kinesis Firehouse",
    "start": "53882",
    "end": "60679"
  },
  {
    "text": "data about the current \nstate of occupancy.",
    "start": "60679",
    "end": "63372"
  },
  {
    "text": "Kinesis Firehouse, once a minute,\nexecutes a Lambda",
    "start": "64102",
    "end": "68126"
  },
  {
    "text": "which prepares the information,\ncleans up,",
    "start": "70576",
    "end": "73540"
  },
  {
    "text": "exports the data \nin Parquet on S3",
    "start": "73541",
    "end": "77898"
  },
  {
    "text": "and then writes a version \nin live on DynamoDB.",
    "start": "77898",
    "end": "82404"
  },
  {
    "text": "This version also has a TTL marker,",
    "start": "82542",
    "end": "85628"
  },
  {
    "text": "time to leave of the data,",
    "start": "85628",
    "end": "87686"
  },
  {
    "text": "so that the data older then a week \nare automatically deleted  from Dynamo.",
    "start": "87686",
    "end": "92212"
  },
  {
    "text": "How do you analyze the data?",
    "start": "92385",
    "end": "94222"
  },
  {
    "text": "The data on S3 are used \nby Amazon SageMaker",
    "start": "94222",
    "end": "97277"
  },
  {
    "text": "to create a machine learning model",
    "start": "97277",
    "end": "99374"
  },
  {
    "text": "able to predict the use of \nparking lots in the long term.",
    "start": "99374",
    "end": "103230"
  },
  {
    "text": "I see that you also \nused Step Function. How?",
    "start": "105283",
    "end": "108600"
  },
  {
    "text": "Yes.",
    "start": "108681",
    "end": "109729"
  },
  {
    "text": "Step Function orchestrates \nall the necessary steps",
    "start": "109729",
    "end": "115467"
  },
  {
    "text": "to create and update new models.",
    "start": "115468",
    "end": "117916"
  },
  {
    "text": "Specifically, and regularly, \na Step Function is scheduled",
    "start": "118347",
    "end": "122972"
  },
  {
    "text": "to, first, execute a Lambda\nthat cleans up the data,",
    "start": "122972",
    "end": "128306"
  },
  {
    "text": "and then requests the training \nof a new model on SageMaker",
    "start": "129000",
    "end": "134135"
  },
  {
    "text": "and its deploy on an endpoint.",
    "start": "134135",
    "end": "136762"
  },
  {
    "text": "Alright. How do you use CodeCommit?",
    "start": "137072",
    "end": "140917"
  },
  {
    "text": "On CodeCommit \nthere are several repositories.",
    "start": "141269",
    "end": "143494"
  },
  {
    "text": "One of them holds \nthe templates of CloudFormation",
    "start": "143494",
    "end": "146731"
  },
  {
    "text": "to define the whole infrastructure.",
    "start": "147155",
    "end": "149446"
  },
  {
    "text": "So, when we need to modify \nthe infrastructure",
    "start": "149729",
    "end": "153177"
  },
  {
    "text": "we do not use the console, but instead \nwe update the templates of CloudFormation",
    "start": "153802",
    "end": "157600"
  },
  {
    "text": "and then from CodeCommit, automatically,",
    "start": "158139",
    "end": "160148"
  },
  {
    "text": "a pipeline and a code deploy \nmake use of the new resources.",
    "start": "160148",
    "end": "165444"
  },
  {
    "text": "Also, there are the repositories necessary",
    "start": "165445",
    "end": "167499"
  },
  {
    "text": "to the Lambdas and \nthe algorithms of SageMaker.",
    "start": "167499",
    "end": "171375"
  },
  {
    "text": "When a developer or a data scientist",
    "start": "171375",
    "end": "173999"
  },
  {
    "text": "edits a new code version",
    "start": "173999",
    "end": "176180"
  },
  {
    "text": "a pipeline releases it \nwith a development alias",
    "start": "177136",
    "end": "181421"
  },
  {
    "text": "or a test one in the related Lambda.",
    "start": "182942",
    "end": "186251"
  },
  {
    "text": "Here a new version can be tested",
    "start": "186563",
    "end": "191212"
  },
  {
    "text": "and then, eventually, made in production.",
    "start": "191212",
    "end": "193265"
  },
  {
    "text": "How are the data used by the end user?",
    "start": "193681",
    "end": "196471"
  },
  {
    "text": "The end user can have access \nto the data through a API Gateway.",
    "start": "197029",
    "end": "200228"
  },
  {
    "text": "When there is a request in API Gateway",
    "start": "200228",
    "end": "203622"
  },
  {
    "text": "the API executes a Lambda \nto get the data",
    "start": "203950",
    "end": "207595"
  },
  {
    "text": "forecast data, from example,",
    "start": "207595",
    "end": "209649"
  },
  {
    "text": "by sending a request \nto the endpoint of SageMaker.",
    "start": "212543",
    "end": "214862"
  },
  {
    "text": "If the data are about \nreal-time information",
    "start": "215031",
    "end": "219308"
  },
  {
    "text": "they are taken by DynamoDB.",
    "start": "219796",
    "end": "222241"
  },
  {
    "text": "Do you have any developments \nin mind for you architecture?",
    "start": "223897",
    "end": "226897"
  },
  {
    "text": "We would like to use QuickSight",
    "start": "227719",
    "end": "230702"
  },
  {
    "text": "to allow the client to visualize",
    "start": "230702",
    "end": "232999"
  },
  {
    "text": "the parking lots state",
    "start": "232999",
    "end": "236900"
  },
  {
    "text": "and other metrics.",
    "start": "237713",
    "end": "239795"
  },
  {
    "text": "What are the strengths \nof your architecture?",
    "start": "240176",
    "end": "243073"
  },
  {
    "text": "Well, of course, the fact that \nour architecture is serverless",
    "start": "243073",
    "end": "246421"
  },
  {
    "text": "so, it has more scalability, it is\nmore efficient and keeps the costs low",
    "start": "246421",
    "end": "250567"
  },
  {
    "text": "or proportional to the use anyway.",
    "start": "251108",
    "end": "252953"
  },
  {
    "text": "-Okay. Thank you, Tommaso.\n-You are welcome.",
    "start": "253213",
    "end": "254800"
  },
  {
    "text": "Thank you for following us \non This Is My Architecture.",
    "start": "254800",
    "end": "257694"
  },
  {
    "text": "See you soon.",
    "start": "257694",
    "end": "259030"
  }
]