[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "right so we saw the use cases and then",
    "start": "30",
    "end": "2550"
  },
  {
    "text": "before that we saw why real-time",
    "start": "2550",
    "end": "5850"
  },
  {
    "text": "streaming is compelling for businesses",
    "start": "5850",
    "end": "8370"
  },
  {
    "text": "these days now let's spend a little bit",
    "start": "8370",
    "end": "10830"
  },
  {
    "text": "of time looking at why you would want to",
    "start": "10830",
    "end": "14070"
  },
  {
    "text": "use Kinesis data streams and to answer",
    "start": "14070",
    "end": "18359"
  },
  {
    "start": "17000",
    "end": "280000"
  },
  {
    "text": "that question I want to spend a little",
    "start": "18359",
    "end": "19770"
  },
  {
    "text": "bit of time discussing the challenges of",
    "start": "19770",
    "end": "22670"
  },
  {
    "text": "data streaming we saw why data streaming",
    "start": "22670",
    "end": "25590"
  },
  {
    "text": "is compelling now let's look at what",
    "start": "25590",
    "end": "28199"
  },
  {
    "text": "challenges are presented by setting up a",
    "start": "28199",
    "end": "31740"
  },
  {
    "text": "data streaming application data",
    "start": "31740",
    "end": "37200"
  },
  {
    "text": "streaming applications can be difficult",
    "start": "37200",
    "end": "39450"
  },
  {
    "text": "to set up this is because there are a",
    "start": "39450",
    "end": "41670"
  },
  {
    "text": "number of moving parts as we saw you",
    "start": "41670",
    "end": "44070"
  },
  {
    "text": "have to make sure the source is able to",
    "start": "44070",
    "end": "45750"
  },
  {
    "text": "talk reliably to the ingest layer and",
    "start": "45750",
    "end": "48510"
  },
  {
    "text": "the ingest layer can reliably deposit",
    "start": "48510",
    "end": "51270"
  },
  {
    "text": "data into the stream storage layer and",
    "start": "51270",
    "end": "53460"
  },
  {
    "text": "then all the way down and another aspect",
    "start": "53460",
    "end": "58170"
  },
  {
    "text": "of this is achieving high availability",
    "start": "58170",
    "end": "61789"
  },
  {
    "text": "you have to make sure especially when",
    "start": "61789",
    "end": "64290"
  },
  {
    "text": "you're building stream processing",
    "start": "64290",
    "end": "66450"
  },
  {
    "text": "applications let's say for your supply",
    "start": "66450",
    "end": "68159"
  },
  {
    "text": "chain workload we have to make sure that",
    "start": "68159",
    "end": "70580"
  },
  {
    "text": "the stream storage layer especially is",
    "start": "70580",
    "end": "73290"
  },
  {
    "text": "highly available that is not a trivial",
    "start": "73290",
    "end": "75930"
  },
  {
    "text": "thing to implement and along the same",
    "start": "75930",
    "end": "80070"
  },
  {
    "text": "lines",
    "start": "80070",
    "end": "80700"
  },
  {
    "text": "it can also be once you do set it up it",
    "start": "80700",
    "end": "83580"
  },
  {
    "text": "can be fairly involved to manage it in a",
    "start": "83580",
    "end": "87990"
  },
  {
    "text": "highly available fashion and how do you",
    "start": "87990",
    "end": "91979"
  },
  {
    "text": "deal with p key demand for your",
    "start": "91979",
    "end": "97500"
  },
  {
    "text": "streaming resources for example let's",
    "start": "97500",
    "end": "99689"
  },
  {
    "text": "say that you're collecting sensor data",
    "start": "99689",
    "end": "101130"
  },
  {
    "text": "and the sensor data could be seasonal",
    "start": "101130",
    "end": "104790"
  },
  {
    "text": "for example if you're collecting sensor",
    "start": "104790",
    "end": "106259"
  },
  {
    "text": "data from for an agricultural workload",
    "start": "106259",
    "end": "110700"
  },
  {
    "text": "where the workload is seasonal you have",
    "start": "110700",
    "end": "113340"
  },
  {
    "text": "to be able to increase and decrease the",
    "start": "113340",
    "end": "116280"
  },
  {
    "text": "amount of resources that are required to",
    "start": "116280",
    "end": "118950"
  },
  {
    "text": "store and consume the data all of this",
    "start": "118950",
    "end": "123899"
  },
  {
    "text": "can be fairly challenging and also",
    "start": "123899",
    "end": "127799"
  },
  {
    "text": "expensive to maintain so let's look at",
    "start": "127799",
    "end": "129810"
  },
  {
    "text": "how a Kinesis data streams helps in each",
    "start": "129810",
    "end": "132720"
  },
  {
    "text": "of these areas",
    "start": "132720",
    "end": "135260"
  },
  {
    "text": "can you sustain streams is easy to use",
    "start": "135680",
    "end": "138090"
  },
  {
    "text": "because we provide you with a simple API",
    "start": "138090",
    "end": "141030"
  },
  {
    "text": "and I will do a demonstration of this",
    "start": "141030",
    "end": "143510"
  },
  {
    "text": "after this slide to show you how easy it",
    "start": "143510",
    "end": "148830"
  },
  {
    "text": "is to create a stream and start reading",
    "start": "148830",
    "end": "152400"
  },
  {
    "text": "from it once you start publishing to it",
    "start": "152400",
    "end": "156530"
  },
  {
    "text": "and out of the box it provides high",
    "start": "156530",
    "end": "159090"
  },
  {
    "text": "availability and durability and what",
    "start": "159090",
    "end": "162030"
  },
  {
    "text": "this means is you can count on there",
    "start": "162030",
    "end": "165120"
  },
  {
    "text": "being an API that you can publish to and",
    "start": "165120",
    "end": "167430"
  },
  {
    "text": "read from and the data that is stored in",
    "start": "167430",
    "end": "169620"
  },
  {
    "text": "Kinesis is stored in a highly durable",
    "start": "169620",
    "end": "171840"
  },
  {
    "text": "fashion to minimize the chances of data",
    "start": "171840",
    "end": "175200"
  },
  {
    "text": "loss and with Kinesis data streams",
    "start": "175200",
    "end": "178830"
  },
  {
    "text": "you're not managing compute resources or",
    "start": "178830",
    "end": "182490"
  },
  {
    "text": "storage or memory you essentially use an",
    "start": "182490",
    "end": "187020"
  },
  {
    "text": "API to publish into and to consume from",
    "start": "187020",
    "end": "193070"
  },
  {
    "text": "and Kinesis data streams is built with",
    "start": "193730",
    "end": "196770"
  },
  {
    "text": "elasticity of mind what this means is",
    "start": "196770",
    "end": "199190"
  },
  {
    "text": "depending on your producers needs and",
    "start": "199190",
    "end": "203520"
  },
  {
    "text": "your consumers needs you can add and",
    "start": "203520",
    "end": "205650"
  },
  {
    "text": "remove resources from into Kinesis data",
    "start": "205650",
    "end": "209130"
  },
  {
    "text": "streams on demand without having to",
    "start": "209130",
    "end": "211470"
  },
  {
    "text": "worry about the underlying compute",
    "start": "211470",
    "end": "213390"
  },
  {
    "text": "storage memory etc we've put in a lot of",
    "start": "213390",
    "end": "220530"
  },
  {
    "text": "effort to ensure that Kinesis data",
    "start": "220530",
    "end": "222810"
  },
  {
    "text": "streams integrates with a variety of AWS",
    "start": "222810",
    "end": "226230"
  },
  {
    "text": "services whether it's dynamo DB s3",
    "start": "226230",
    "end": "230150"
  },
  {
    "text": "Kinesis data analytics Kinesis data",
    "start": "230150",
    "end": "232650"
  },
  {
    "text": "Faro's just to name a few",
    "start": "232650",
    "end": "234380"
  },
  {
    "text": "this means that often you can implement",
    "start": "234380",
    "end": "237510"
  },
  {
    "text": "no code workflows to do stream",
    "start": "237510",
    "end": "241740"
  },
  {
    "text": "processing at scale lastly from a",
    "start": "241740",
    "end": "248280"
  },
  {
    "text": "pricing standpoint we've ensured that",
    "start": "248280",
    "end": "251000"
  },
  {
    "text": "you only pay for what you use so you",
    "start": "251000",
    "end": "255840"
  },
  {
    "text": "could potentially start from zero",
    "start": "255840",
    "end": "260190"
  },
  {
    "text": "resources for your streaming application",
    "start": "260190",
    "end": "262290"
  },
  {
    "text": "in just terabytes of data let's say",
    "start": "262290",
    "end": "267490"
  },
  {
    "text": "during a high-demand period and",
    "start": "267490",
    "end": "270910"
  },
  {
    "text": "completely shut down all the resources",
    "start": "270910",
    "end": "273160"
  },
  {
    "text": "behind your stream and pay nothing from",
    "start": "273160",
    "end": "277569"
  },
  {
    "text": "that point on to ingest data as promised",
    "start": "277569",
    "end": "282900"
  },
  {
    "start": "280000",
    "end": "399000"
  },
  {
    "text": "I'd like to take a little bit of time to",
    "start": "282900",
    "end": "285729"
  },
  {
    "text": "show you how easy it is to create a",
    "start": "285729",
    "end": "287680"
  },
  {
    "text": "Kinesis data stream so here we're at the",
    "start": "287680",
    "end": "292229"
  },
  {
    "text": "Kinesis dashboard you can see that there",
    "start": "292229",
    "end": "296860"
  },
  {
    "text": "are three services under Amazon Kinesis",
    "start": "296860",
    "end": "299530"
  },
  {
    "text": "Kinesis data streams Kinesis data",
    "start": "299530",
    "end": "301180"
  },
  {
    "text": "firehose and Kinesis data analytics for",
    "start": "301180",
    "end": "304900"
  },
  {
    "text": "this demonstration I will be creating a",
    "start": "304900",
    "end": "307569"
  },
  {
    "text": "data stream and I'll show you how easy",
    "start": "307569",
    "end": "310060"
  },
  {
    "text": "it is to add and remove shards and I'll",
    "start": "310060",
    "end": "315280"
  },
  {
    "text": "talk about what shards are in more",
    "start": "315280",
    "end": "316810"
  },
  {
    "text": "detail in an upcoming video so I just",
    "start": "316810",
    "end": "320889"
  },
  {
    "text": "clicked on create a data stream and I'm",
    "start": "320889",
    "end": "325569"
  },
  {
    "text": "going to give it a name Kinesis demo one",
    "start": "325569",
    "end": "328900"
  },
  {
    "text": "and one of the benefits that I get from",
    "start": "328900",
    "end": "333520"
  },
  {
    "text": "using the console is I can actually see",
    "start": "333520",
    "end": "338130"
  },
  {
    "text": "how much throughput that I can I can get",
    "start": "338130",
    "end": "341500"
  },
  {
    "text": "from a stream by simply entering the",
    "start": "341500",
    "end": "344530"
  },
  {
    "text": "number of shards that the stream will",
    "start": "344530",
    "end": "348820"
  },
  {
    "text": "have so in this case I've entered one",
    "start": "348820",
    "end": "350740"
  },
  {
    "text": "shard and it tells me that I get this",
    "start": "350740",
    "end": "352930"
  },
  {
    "text": "much write capacity in this much weight",
    "start": "352930",
    "end": "355090"
  },
  {
    "text": "capacity and once again this is",
    "start": "355090",
    "end": "356440"
  },
  {
    "text": "something I'll go over in more detail in",
    "start": "356440",
    "end": "358150"
  },
  {
    "text": "another video so for the demo let's",
    "start": "358150",
    "end": "360069"
  },
  {
    "text": "actually change this to six and I click",
    "start": "360069",
    "end": "363280"
  },
  {
    "text": "on create and within a matter of a few",
    "start": "363280",
    "end": "370000"
  },
  {
    "text": "seconds I will have a stream that I can",
    "start": "370000",
    "end": "373990"
  },
  {
    "text": "write to you can see that this stream",
    "start": "373990",
    "end": "376900"
  },
  {
    "text": "has been created and it's active and at",
    "start": "376900",
    "end": "379569"
  },
  {
    "text": "this point I can use a number of avenues",
    "start": "379569",
    "end": "383349"
  },
  {
    "text": "for producing into this stream and for",
    "start": "383349",
    "end": "385780"
  },
  {
    "text": "consuming from this dream as listed here",
    "start": "385780",
    "end": "388000"
  },
  {
    "text": "we went over these in some detail in a",
    "start": "388000",
    "end": "391900"
  },
  {
    "text": "previous video so I would recommend that",
    "start": "391900",
    "end": "394240"
  },
  {
    "text": "you refer to that thank you for watching",
    "start": "394240",
    "end": "397240"
  },
  {
    "text": "this demonstration",
    "start": "397240",
    "end": "399839"
  }
]