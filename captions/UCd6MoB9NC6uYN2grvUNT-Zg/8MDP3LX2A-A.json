[
  {
    "start": "0",
    "end": "98000"
  },
  {
    "text": "welcome everyone in this video I'm going",
    "start": "420",
    "end": "3060"
  },
  {
    "text": "to go over setting up a custom log",
    "start": "3060",
    "end": "4920"
  },
  {
    "text": "Source in amazon security Lake",
    "start": "4920",
    "end": "8460"
  },
  {
    "text": "amazon security Lake if you are not",
    "start": "8460",
    "end": "10500"
  },
  {
    "text": "aware delivers a purpose-built data Lake",
    "start": "10500",
    "end": "12660"
  },
  {
    "text": "for security use cases so you can focus",
    "start": "12660",
    "end": "15240"
  },
  {
    "text": "on analyzing security data rather than",
    "start": "15240",
    "end": "17699"
  },
  {
    "text": "data wrangling security Lake helps you",
    "start": "17699",
    "end": "20220"
  },
  {
    "text": "streamline the process of setting up a",
    "start": "20220",
    "end": "22320"
  },
  {
    "text": "data Lake in your environment with",
    "start": "22320",
    "end": "24000"
  },
  {
    "text": "security logging using services such as",
    "start": "24000",
    "end": "26400"
  },
  {
    "text": "Amazon S3",
    "start": "26400",
    "end": "28140"
  },
  {
    "text": "AWS leg formation in AWS glue and",
    "start": "28140",
    "end": "31439"
  },
  {
    "text": "importantly runs in your account so",
    "start": "31439",
    "end": "33780"
  },
  {
    "text": "security like manages for you the",
    "start": "33780",
    "end": "36000"
  },
  {
    "text": "initial setup of the data Lake",
    "start": "36000",
    "end": "37860"
  },
  {
    "text": "infrastructure across your AWS",
    "start": "37860",
    "end": "39800"
  },
  {
    "text": "organization and regions on the ingest",
    "start": "39800",
    "end": "43020"
  },
  {
    "text": "side security Lake makes it extremely",
    "start": "43020",
    "end": "45480"
  },
  {
    "text": "easy to get started and in literally a",
    "start": "45480",
    "end": "47579"
  },
  {
    "text": "few steps you can start collecting",
    "start": "47579",
    "end": "49320"
  },
  {
    "text": "critical security logs from AWS services",
    "start": "49320",
    "end": "52200"
  },
  {
    "text": "such as cloudtrail BBC flow logs Route",
    "start": "52200",
    "end": "55500"
  },
  {
    "text": "53 DNS resolver logs once again across",
    "start": "55500",
    "end": "58680"
  },
  {
    "text": "all your accounts and all your regions",
    "start": "58680",
    "end": "60539"
  },
  {
    "text": "in your AWS organization",
    "start": "60539",
    "end": "63120"
  },
  {
    "text": "you can also automatically get all your",
    "start": "63120",
    "end": "65640"
  },
  {
    "text": "security findings from AWS services and",
    "start": "65640",
    "end": "68460"
  },
  {
    "text": "over 50 partner Security Solutions",
    "start": "68460",
    "end": "70320"
  },
  {
    "text": "integrated via security hub",
    "start": "70320",
    "end": "73080"
  },
  {
    "text": "you can bring your own data from",
    "start": "73080",
    "end": "74939"
  },
  {
    "text": "third-party partners from on-premise",
    "start": "74939",
    "end": "78420"
  },
  {
    "text": "from SAS applications",
    "start": "78420",
    "end": "80460"
  },
  {
    "text": "host based logs other Cloud providers",
    "start": "80460",
    "end": "82979"
  },
  {
    "text": "custom applications are from anywhere",
    "start": "82979",
    "end": "85020"
  },
  {
    "text": "else you would like in this video we're",
    "start": "85020",
    "end": "87240"
  },
  {
    "text": "going to show you a solution we created",
    "start": "87240",
    "end": "88560"
  },
  {
    "text": "to collect Windows Event data from a",
    "start": "88560",
    "end": "90960"
  },
  {
    "text": "Windows server on an Amazon ec2 instance",
    "start": "90960",
    "end": "93240"
  },
  {
    "text": "using the Microsoft systems monitor as",
    "start": "93240",
    "end": "95820"
  },
  {
    "text": "the custom source",
    "start": "95820",
    "end": "98659"
  },
  {
    "start": "98000",
    "end": "150000"
  },
  {
    "text": "in this pre-built solution we will walk",
    "start": "99119",
    "end": "101220"
  },
  {
    "text": "through we're using a cloudwatch agent",
    "start": "101220",
    "end": "103619"
  },
  {
    "text": "to collect logs from the Windows Server",
    "start": "103619",
    "end": "105659"
  },
  {
    "text": "sending them to cloudwatch logs and",
    "start": "105659",
    "end": "108479"
  },
  {
    "text": "using a subscription filter to send logs",
    "start": "108479",
    "end": "110640"
  },
  {
    "text": "to Amazon Kinesis data Firehouse from",
    "start": "110640",
    "end": "113640"
  },
  {
    "text": "there we're using AWS Lambda to extract",
    "start": "113640",
    "end": "117540"
  },
  {
    "text": "transform and log the logs from XML to",
    "start": "117540",
    "end": "121979"
  },
  {
    "text": "ocsf or the open cyber security schema",
    "start": "121979",
    "end": "125180"
  },
  {
    "text": "format and use Kinesis data fire hose to",
    "start": "125180",
    "end": "128819"
  },
  {
    "text": "convert the logs from gcip parquet with",
    "start": "128819",
    "end": "132000"
  },
  {
    "text": "Dynamic partioning partitioning enabled",
    "start": "132000",
    "end": "134400"
  },
  {
    "text": "and then putting these files into that",
    "start": "134400",
    "end": "136020"
  },
  {
    "text": "amazon security Lake S3 bucket",
    "start": "136020",
    "end": "138959"
  },
  {
    "text": "so next from here let's jump into the",
    "start": "138959",
    "end": "140760"
  },
  {
    "text": "console to show you how we create the",
    "start": "140760",
    "end": "142560"
  },
  {
    "text": "custom source in amazon security link",
    "start": "142560",
    "end": "144599"
  },
  {
    "text": "walk through the S3 partitioning and",
    "start": "144599",
    "end": "147000"
  },
  {
    "text": "finally query our custom data using",
    "start": "147000",
    "end": "148980"
  },
  {
    "text": "Athena",
    "start": "148980",
    "end": "151020"
  },
  {
    "start": "150000",
    "end": "164000"
  },
  {
    "text": "as you can see we're in the security",
    "start": "151020",
    "end": "152819"
  },
  {
    "text": "light console on the summary page",
    "start": "152819",
    "end": "155280"
  },
  {
    "text": "this is my delegated administrator",
    "start": "155280",
    "end": "156840"
  },
  {
    "text": "account for security League that we're",
    "start": "156840",
    "end": "158340"
  },
  {
    "text": "going to work at it for this",
    "start": "158340",
    "end": "159239"
  },
  {
    "text": "demonstration so let's start out by",
    "start": "159239",
    "end": "161040"
  },
  {
    "text": "clicking on custom sources on the left",
    "start": "161040",
    "end": "162959"
  },
  {
    "text": "navigation panel",
    "start": "162959",
    "end": "165060"
  },
  {
    "start": "164000",
    "end": "265000"
  },
  {
    "text": "in this environment we currently have a",
    "start": "165060",
    "end": "166800"
  },
  {
    "text": "custom source that I pre-built for this",
    "start": "166800",
    "end": "168540"
  },
  {
    "text": "demo to save time using the workflow",
    "start": "168540",
    "end": "170760"
  },
  {
    "text": "that I described earlier we will look at",
    "start": "170760",
    "end": "172800"
  },
  {
    "text": "that in a minute but for this",
    "start": "172800",
    "end": "174120"
  },
  {
    "text": "demonstration part imagine we're",
    "start": "174120",
    "end": "176160"
  },
  {
    "text": "creating a custom source from scratch",
    "start": "176160",
    "end": "177660"
  },
  {
    "text": "and we'll see what it's like to set that",
    "start": "177660",
    "end": "179099"
  },
  {
    "text": "up so let's click on create custom",
    "start": "179099",
    "end": "181080"
  },
  {
    "text": "source",
    "start": "181080",
    "end": "182640"
  },
  {
    "text": "first we need to give our custom source",
    "start": "182640",
    "end": "184500"
  },
  {
    "text": "a name so we'll call it demo",
    "start": "184500",
    "end": "187200"
  },
  {
    "text": "we need to select our ocsf event class",
    "start": "187200",
    "end": "190620"
  },
  {
    "text": "we'll scroll down click Windows resource",
    "start": "190620",
    "end": "193260"
  },
  {
    "text": "activity",
    "start": "193260",
    "end": "195620"
  },
  {
    "text": "we'll scroll down and next we need to",
    "start": "195780",
    "end": "197640"
  },
  {
    "text": "give it an account ID that has",
    "start": "197640",
    "end": "199680"
  },
  {
    "text": "permissions to write data to this custom",
    "start": "199680",
    "end": "201420"
  },
  {
    "text": "source",
    "start": "201420",
    "end": "202800"
  },
  {
    "text": "and then lastly we need to either let",
    "start": "202800",
    "end": "205739"
  },
  {
    "text": "security like create a new service role",
    "start": "205739",
    "end": "208080"
  },
  {
    "text": "on our behalf or use an existing service",
    "start": "208080",
    "end": "210360"
  },
  {
    "text": "role and this is permissions to invoke",
    "start": "210360",
    "end": "212580"
  },
  {
    "text": "AWS glue on your behalf",
    "start": "212580",
    "end": "215220"
  },
  {
    "text": "keep in mind when we create this custom",
    "start": "215220",
    "end": "217440"
  },
  {
    "text": "source in security Lake security Lake",
    "start": "217440",
    "end": "219300"
  },
  {
    "text": "does a few things for us creates an AWS",
    "start": "219300",
    "end": "222239"
  },
  {
    "text": "leg formation table to organize objects",
    "start": "222239",
    "end": "224580"
  },
  {
    "text": "that the source writes to security Lake",
    "start": "224580",
    "end": "226500"
  },
  {
    "text": "sets up an AWS glue crawler to partition",
    "start": "226500",
    "end": "229860"
  },
  {
    "text": "your security data",
    "start": "229860",
    "end": "231900"
  },
  {
    "text": "the crawler populates the AWS glue data",
    "start": "231900",
    "end": "235019"
  },
  {
    "text": "catalog with the table it also",
    "start": "235019",
    "end": "237599"
  },
  {
    "text": "automatically discovers new source data",
    "start": "237599",
    "end": "239819"
  },
  {
    "text": "and extracts",
    "start": "239819",
    "end": "241560"
  },
  {
    "text": "schema definitions provides a unique",
    "start": "241560",
    "end": "245220"
  },
  {
    "text": "prefix for the source in your Amazon S3",
    "start": "245220",
    "end": "248099"
  },
  {
    "text": "bucket and creates this rule so let's go",
    "start": "248099",
    "end": "251099"
  },
  {
    "text": "ahead and click create",
    "start": "251099",
    "end": "254239"
  },
  {
    "text": "and we'll wait a second while our custom",
    "start": "256680",
    "end": "258900"
  },
  {
    "text": "source creation is in progress",
    "start": "258900",
    "end": "263000"
  },
  {
    "start": "265000",
    "end": "355000"
  },
  {
    "text": "all right so now that we saw how to",
    "start": "266580",
    "end": "268500"
  },
  {
    "text": "create a new custom source and we can",
    "start": "268500",
    "end": "270060"
  },
  {
    "text": "see we have our new custom source in the",
    "start": "270060",
    "end": "272940"
  },
  {
    "text": "securely console",
    "start": "272940",
    "end": "274740"
  },
  {
    "text": "we can see the data that was delivered",
    "start": "274740",
    "end": "276960"
  },
  {
    "text": "using the architecture that we showed",
    "start": "276960",
    "end": "279000"
  },
  {
    "text": "earlier to put ocsf",
    "start": "279000",
    "end": "281520"
  },
  {
    "text": "formatted parquet files into this new S3",
    "start": "281520",
    "end": "285180"
  },
  {
    "text": "location",
    "start": "285180",
    "end": "287479"
  },
  {
    "text": "okay so now we're in the S3 console and",
    "start": "288840",
    "end": "291540"
  },
  {
    "text": "we can see we have a couple different",
    "start": "291540",
    "end": "292680"
  },
  {
    "text": "folders in our security Lake S3 bucket",
    "start": "292680",
    "end": "296759"
  },
  {
    "text": "we can see one labeled AWS which starts",
    "start": "296759",
    "end": "299820"
  },
  {
    "text": "the folder structure for our AWS logs",
    "start": "299820",
    "end": "302100"
  },
  {
    "text": "and one labeled EXT that starts the",
    "start": "302100",
    "end": "305280"
  },
  {
    "text": "folder structure for our partner and",
    "start": "305280",
    "end": "307259"
  },
  {
    "text": "custom sources",
    "start": "307259",
    "end": "308699"
  },
  {
    "text": "we can click down through the structure",
    "start": "308699",
    "end": "311699"
  },
  {
    "text": "and see how security lake has created",
    "start": "311699",
    "end": "314280"
  },
  {
    "text": "the partitioning for each log source so",
    "start": "314280",
    "end": "317100"
  },
  {
    "text": "let's click down through the external",
    "start": "317100",
    "end": "320580"
  },
  {
    "text": "and we'll click on our sysmon custom",
    "start": "320580",
    "end": "323280"
  },
  {
    "text": "source",
    "start": "323280",
    "end": "325199"
  },
  {
    "text": "and we can see it's partitioned by",
    "start": "325199",
    "end": "327960"
  },
  {
    "text": "region and count ID",
    "start": "327960",
    "end": "331080"
  },
  {
    "text": "and time",
    "start": "331080",
    "end": "333539"
  },
  {
    "text": "and we can see the files associated with",
    "start": "333539",
    "end": "336660"
  },
  {
    "text": "this",
    "start": "336660",
    "end": "338900"
  },
  {
    "text": "we can see that it's partitioned based",
    "start": "339840",
    "end": "341940"
  },
  {
    "text": "on a few different fields account ID",
    "start": "341940",
    "end": "344120"
  },
  {
    "text": "region time and from here let's jump",
    "start": "344120",
    "end": "348840"
  },
  {
    "text": "into the Athena console and look at what",
    "start": "348840",
    "end": "352139"
  },
  {
    "text": "it's like to actually query this data",
    "start": "352139",
    "end": "354060"
  },
  {
    "text": "using Amazon opinion",
    "start": "354060",
    "end": "356340"
  },
  {
    "text": "okay now we're in the Athena console and",
    "start": "356340",
    "end": "359039"
  },
  {
    "text": "we're going to query our amazon security",
    "start": "359039",
    "end": "361320"
  },
  {
    "text": "data data",
    "start": "361320",
    "end": "363240"
  },
  {
    "text": "keep in mind in your environment you",
    "start": "363240",
    "end": "365220"
  },
  {
    "text": "have the freedom to choose what",
    "start": "365220",
    "end": "366600"
  },
  {
    "text": "analytics platform you use to run",
    "start": "366600",
    "end": "368460"
  },
  {
    "text": "analytics on your data stored in",
    "start": "368460",
    "end": "370320"
  },
  {
    "text": "security league but just show a quick",
    "start": "370320",
    "end": "371759"
  },
  {
    "text": "demo validating the ability to query our",
    "start": "371759",
    "end": "374039"
  },
  {
    "text": "custom data we're going to use Athena to",
    "start": "374039",
    "end": "376259"
  },
  {
    "text": "make things simple",
    "start": "376259",
    "end": "377580"
  },
  {
    "text": "to look at this data we're really gonna",
    "start": "377580",
    "end": "379440"
  },
  {
    "text": "run two simple queries the first we're",
    "start": "379440",
    "end": "381840"
  },
  {
    "text": "just gonna preview this table and look",
    "start": "381840",
    "end": "384419"
  },
  {
    "text": "at the data as you can see we're just",
    "start": "384419",
    "end": "387060"
  },
  {
    "text": "looking at the last 10 entries in this",
    "start": "387060",
    "end": "391259"
  },
  {
    "text": "table",
    "start": "391259",
    "end": "393440"
  },
  {
    "text": "after our query runs we can see the",
    "start": "396539",
    "end": "399660"
  },
  {
    "text": "results and we can see the different",
    "start": "399660",
    "end": "402060"
  },
  {
    "text": "fields that are associated with this and",
    "start": "402060",
    "end": "404580"
  },
  {
    "text": "we can scroll over and see all the",
    "start": "404580",
    "end": "406919"
  },
  {
    "text": "different fields associated with this",
    "start": "406919",
    "end": "408660"
  },
  {
    "text": "data",
    "start": "408660",
    "end": "410039"
  },
  {
    "text": "and even the raw data associated with",
    "start": "410039",
    "end": "412800"
  },
  {
    "text": "the event",
    "start": "412800",
    "end": "415099"
  },
  {
    "text": "if we jump into our second query we can",
    "start": "415380",
    "end": "418199"
  },
  {
    "text": "get a little bit more specific",
    "start": "418199",
    "end": "420960"
  },
  {
    "text": "so this query looks for event ID Windows",
    "start": "420960",
    "end": "424620"
  },
  {
    "text": "event ID 22 which is associated with a",
    "start": "424620",
    "end": "427620"
  },
  {
    "text": "DNS query but for this we don't want to",
    "start": "427620",
    "end": "430800"
  },
  {
    "text": "match the process ID of 4860.",
    "start": "430800",
    "end": "435000"
  },
  {
    "text": "so if we run this one",
    "start": "435000",
    "end": "438080"
  },
  {
    "text": "and we wait a few seconds for Athena to",
    "start": "438240",
    "end": "440580"
  },
  {
    "text": "query this data we can see that we have",
    "start": "440580",
    "end": "443220"
  },
  {
    "text": "4 349 results associated with this type",
    "start": "443220",
    "end": "446819"
  },
  {
    "text": "of activity",
    "start": "446819",
    "end": "448380"
  },
  {
    "text": "and once again we can see when these",
    "start": "448380",
    "end": "451740"
  },
  {
    "text": "events were created we can see that the",
    "start": "451740",
    "end": "454139"
  },
  {
    "text": "activity name aligns with that event ID",
    "start": "454139",
    "end": "456180"
  },
  {
    "text": "22 and we can see all the data",
    "start": "456180",
    "end": "458759"
  },
  {
    "text": "associated with",
    "start": "458759",
    "end": "461340"
  },
  {
    "text": "querying these logs that are being",
    "start": "461340",
    "end": "464460"
  },
  {
    "text": "stored in amazon security like using",
    "start": "464460",
    "end": "467160"
  },
  {
    "text": "that ocsf format",
    "start": "467160",
    "end": "469979"
  },
  {
    "start": "469000",
    "end": "495000"
  },
  {
    "text": "thanks everyone for watching this video",
    "start": "469979",
    "end": "471360"
  },
  {
    "text": "on creating a custom source and amazon",
    "start": "471360",
    "end": "473639"
  },
  {
    "text": "security Lake and querying that custom",
    "start": "473639",
    "end": "475500"
  },
  {
    "text": "source with Amazon Athena if you want to",
    "start": "475500",
    "end": "477960"
  },
  {
    "text": "learn more about amazon security League",
    "start": "477960",
    "end": "479460"
  },
  {
    "text": "please visit",
    "start": "479460",
    "end": "481520"
  },
  {
    "text": "aws.amazon.com forward slash security",
    "start": "481520",
    "end": "484139"
  },
  {
    "text": "Dash Lake",
    "start": "484139",
    "end": "486900"
  },
  {
    "text": "thank you",
    "start": "486900",
    "end": "489620"
  }
]