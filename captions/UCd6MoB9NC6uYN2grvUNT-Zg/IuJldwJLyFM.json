[
  {
    "start": "0",
    "end": "97000"
  },
  {
    "text": "hello ladies and gentlemen and welcome to the Amazon web services partner Mark webinar series our topic today is best",
    "start": "359",
    "end": "7399"
  },
  {
    "text": "practices for running Apache Cassandra on AWS I'm your host Maya kabassi with the",
    "start": "7399",
    "end": "14040"
  },
  {
    "text": "partner marketing team here in Seattle I'd like to start with a couple of housekeeping items we are recording",
    "start": "14040",
    "end": "20160"
  },
  {
    "text": "today's webinar and while lines are muted you can submit questions anytime during the presentation use the Q&A",
    "start": "20160",
    "end": "26760"
  },
  {
    "text": "widget in your browser to do so we'll take time for question questions at the end in addition this presentation will",
    "start": "26760",
    "end": "32880"
  },
  {
    "text": "be available for on demand you may find our webinar recording and materials available on AWS YouTube",
    "start": "32880",
    "end": "41160"
  },
  {
    "text": "channels let's welcome our presenters Joey basana automation",
    "start": "41160",
    "end": "48680"
  },
  {
    "text": "engineer at stack driver and M W Senior Solutions architect with Amazon web",
    "start": "48680",
    "end": "54359"
  },
  {
    "text": "services one of our presenters met stump from data Stacks could not join us today due to unforeseen circumstances we",
    "start": "54359",
    "end": "61440"
  },
  {
    "text": "apologize for the last minute change",
    "start": "61440",
    "end": "64839"
  },
  {
    "text": "in plans but we'll have plenty of interesting",
    "start": "70159",
    "end": "74960"
  },
  {
    "text": "content on the agenda we'll begin with Miles Ward who will provide an overview",
    "start": "75400",
    "end": "80920"
  },
  {
    "text": "of Amazon web services and no SQL and pass the M with Joey who will talk about",
    "start": "80920",
    "end": "85960"
  },
  {
    "text": "running Cassandra on AWS we wrap up with a Q&A so without further delay let me turn it",
    "start": "85960",
    "end": "92479"
  },
  {
    "text": "over to Miles Senior Solutions architect with Amazon web services take it away miles Maya thanks a bunch everyone I",
    "start": "92479",
    "end": "100159"
  },
  {
    "start": "97000",
    "end": "121000"
  },
  {
    "text": "really appreciate you taking the time this morning to join us in diving into",
    "start": "100159",
    "end": "106680"
  },
  {
    "text": "how nosql Works what are the options for nosql systems on AWS and I think a",
    "start": "106680",
    "end": "112200"
  },
  {
    "text": "really powerful uh set of Hands-On technical uh uh content from our friends",
    "start": "112200",
    "end": "118840"
  },
  {
    "text": "at stack driver and Stacks around one of the most popular no SQL options on AWS",
    "start": "118840",
    "end": "125119"
  },
  {
    "text": "Cassandra but we've heard from lots of customers uh as we've been growing over",
    "start": "125119",
    "end": "130920"
  },
  {
    "text": "the last eight years uh that that cloud as an infrastructure Choice as a system",
    "start": "130920",
    "end": "137200"
  },
  {
    "text": "for deploying all kinds of different workloads from web applications to",
    "start": "137200",
    "end": "142400"
  },
  {
    "text": "Enterprise applications to Data Systems to databases to no SQL databases all of",
    "start": "142400",
    "end": "148480"
  },
  {
    "text": "those different tools they capture a really clear specific set of business benefits that differentiates cloud from",
    "start": "148480",
    "end": "157080"
  },
  {
    "text": "other approaches to building these kinds of tools we hear from customers all the time that they want to build systems",
    "start": "157080",
    "end": "163440"
  },
  {
    "text": "without an upfront capital investment they want to move dollars from their CX",
    "start": "163440",
    "end": "168640"
  },
  {
    "text": "budgets into operational budgets and and those dollars they want them to be as small as possible they' like to run",
    "start": "168640",
    "end": "174000"
  },
  {
    "text": "systems as as inexpensively as they can they also want to only pay for what they actually use of different tools are out",
    "start": "174000",
    "end": "181040"
  },
  {
    "text": "there for you know your second copy and your third copy and your fourth copy of data or the backup to the backup to the",
    "start": "181040",
    "end": "187159"
  },
  {
    "text": "backup of infrastructure if you don't use that stuff you shouldn't pay for it we've also seen that that no provider",
    "start": "187159",
    "end": "194480"
  },
  {
    "text": "doesn't matter who they are is fast enough to keep up with the genius of its customers and so we want to make sure",
    "start": "194480",
    "end": "200519"
  },
  {
    "text": "that each of these systems is self-service we've had a lot of customers that have found huge value",
    "start": "200519",
    "end": "205560"
  },
  {
    "text": "from frankly us getting out of the way and letting them build whatever they want whenever they want on top of our",
    "start": "205560",
    "end": "210959"
  },
  {
    "text": "infrastructure and because of that control we've made it so that you can scale up and down to meet your actual",
    "start": "210959",
    "end": "218200"
  },
  {
    "text": "customer or project demand in in a way that's so much more Nimble than buying",
    "start": "218200",
    "end": "223360"
  },
  {
    "text": "and ordering physical devices so that that set of benefits stands uh stands to",
    "start": "223360",
    "end": "230560"
  },
  {
    "start": "229000",
    "end": "329000"
  },
  {
    "text": "provide a whole series of actual resources so AWS has built uh this giant",
    "start": "230560",
    "end": "237599"
  },
  {
    "text": "Global infrastructure um will show how that's distributed here in a second um",
    "start": "237599",
    "end": "242640"
  },
  {
    "text": "that Global infrastructure supports many many many Data Centers inside of those data centers we have Enterprise grade",
    "start": "242640",
    "end": "249040"
  },
  {
    "text": "high tier networking that allows people to implement high performance web",
    "start": "249040",
    "end": "254200"
  },
  {
    "text": "applications Enterprise applications business intelligence sweets data processing Fabrics all manner of",
    "start": "254200",
    "end": "260479"
  },
  {
    "text": "interesting stuff and and that that infostructure this hypervisor and",
    "start": "260479",
    "end": "265880"
  },
  {
    "text": "virtualization tools that we've provided to allow people to create resource is on demand generate three basic building",
    "start": "265880",
    "end": "273360"
  },
  {
    "text": "blocks the access to compute as a service that's called elastic compute cloud or ec2 uh several different",
    "start": "273360",
    "end": "280080"
  },
  {
    "text": "storage services from ec2 instances that are optimized for storage to F3 one of",
    "start": "280080",
    "end": "286280"
  },
  {
    "text": "the largest data storage systems in the world were over two trillion objects stored there up to date uh into uh our",
    "start": "286280",
    "end": "293560"
  },
  {
    "text": "own nosql data storage services like simple DB and Dynamo DB we also have",
    "start": "293560",
    "end": "300120"
  },
  {
    "text": "database services that manage uh kind of old school database types and then above those resources we built even more",
    "start": "300120",
    "end": "306880"
  },
  {
    "text": "application services and tools for deployment in administrations that make it easier to consume resources that that",
    "start": "306880",
    "end": "314479"
  },
  {
    "text": "set of tools we think and we continue to improve and iterate on that set of tools",
    "start": "314479",
    "end": "319759"
  },
  {
    "text": "but we think it makes it easier to build high performance productive infrastructures than anywhere else in",
    "start": "319759",
    "end": "325960"
  },
  {
    "text": "the world uh and speaking of around the world you can do that in nine different regions today across the planet four",
    "start": "325960",
    "end": "333319"
  },
  {
    "start": "329000",
    "end": "377000"
  },
  {
    "text": "different continents um each of those regions is subdivided into distinct",
    "start": "333319",
    "end": "339160"
  },
  {
    "text": "availability zones which you think can think of as one or many Data Center buildings what that allows you to view",
    "start": "339160",
    "end": "345720"
  },
  {
    "text": "is to develop for high availability where you have more than one instance or virtual machine or service running a",
    "start": "345720",
    "end": "353479"
  },
  {
    "text": "given workload so that if one side of a region were to have a problem the other side could take over or if a single",
    "start": "353479",
    "end": "360479"
  },
  {
    "text": "virtual machine were to fail you'd be able to take over that's a part of an Amazonian General principle of Designing",
    "start": "360479",
    "end": "366960"
  },
  {
    "text": "for failure that AWS has built into powering some of the biggest and most",
    "start": "366960",
    "end": "373800"
  },
  {
    "text": "successful online businesses in the world and and not just web-based content",
    "start": "373800",
    "end": "379280"
  },
  {
    "text": "but we've also done work for you know in in Mirad sectors across oil and gas",
    "start": "379280",
    "end": "386560"
  },
  {
    "text": "space exploration uh you know video processing anything that you can do with a computer",
    "start": "386560",
    "end": "392240"
  },
  {
    "text": "that you don't have to lay your hands on AWS has some customer somewhere doing",
    "start": "392240",
    "end": "397400"
  },
  {
    "text": "that great stuff and each of these businesses we're not talking typically about little experimentation although",
    "start": "397400",
    "end": "404840"
  },
  {
    "text": "AWS is a great place for those kinds of work you know you only have to run infrastructure as long as you need it so",
    "start": "404840",
    "end": "410759"
  },
  {
    "text": "if you want to do a test for two hours you need pay us for two hours it doesn't matter to us but these businesses on the",
    "start": "410759",
    "end": "416160"
  },
  {
    "text": "side and frankly thousands and thousands of others are running real production",
    "start": "416160",
    "end": "421759"
  },
  {
    "text": "top tier in front of customers betting the farm on AWS and they're not alone we",
    "start": "421759",
    "end": "428080"
  },
  {
    "text": "worked with uh lots of different businesses Gartner just made this analysis that that shows a pretty clear",
    "start": "428080",
    "end": "435240"
  },
  {
    "start": "429000",
    "end": "475000"
  },
  {
    "text": "gap between running infrastructure and running at scale on AWS and really any",
    "start": "435240",
    "end": "441160"
  },
  {
    "text": "other uh way of doing this stuff their quote not ours is that AWS in production",
    "start": "441160",
    "end": "447520"
  },
  {
    "text": "has five times as much run running infrastructure as all the other 14",
    "start": "447520",
    "end": "452560"
  },
  {
    "text": "participants on this chart combined so we're significant player in this market",
    "start": "452560",
    "end": "458960"
  },
  {
    "text": "space we're excited to see the brand new exciting application that I that our",
    "start": "458960",
    "end": "465759"
  },
  {
    "text": "customers are able to deploy on top of this infrastructure every day and there is a huge variety of those",
    "start": "465759",
    "end": "472840"
  },
  {
    "text": "applications what we're talking about today and the place we're going to focus on is really looking in at database",
    "start": "472840",
    "end": "479560"
  },
  {
    "start": "475000",
    "end": "906000"
  },
  {
    "text": "services on AWS how do how do nosql databases work and there's there's",
    "start": "479560",
    "end": "485360"
  },
  {
    "text": "probably a little a little value we can put in to help you understand the",
    "start": "485360",
    "end": "490479"
  },
  {
    "text": "differences between these different options because there really are a huge number of them so you know starting",
    "start": "490479",
    "end": "497440"
  },
  {
    "text": "maybe with the most traditional application relational database Management systems or rbns system AWS",
    "start": "497440",
    "end": "505599"
  },
  {
    "text": "runs those on ec2 which is our elastic compute Cloud on demand available to you",
    "start": "505599",
    "end": "512560"
  },
  {
    "text": "so if you want to run an oracle relational database you can boot those on demand you want to run SQL server for",
    "start": "512560",
    "end": "519279"
  },
  {
    "text": "Microsoft you can boot those on demand you want to run MySQL databases or or frankly any one of a miror that is",
    "start": "519279",
    "end": "526279"
  },
  {
    "text": "postest BB2 and formic there are dozens in this category those applications and",
    "start": "526279",
    "end": "532360"
  },
  {
    "text": "that application style is something that's been very consistent for a long time it embodies a a a concept called",
    "start": "532360",
    "end": "539600"
  },
  {
    "text": "acid transactionality which means that those databases",
    "start": "539600",
    "end": "545240"
  },
  {
    "text": "record and confirm recording of each individual transactional event before",
    "start": "545240",
    "end": "552440"
  },
  {
    "text": "returning any reads against that event it confirms what's called consistency",
    "start": "552440",
    "end": "558120"
  },
  {
    "text": "and that consistency is a part of three different uh sides of a theory of data",
    "start": "558120",
    "end": "564079"
  },
  {
    "text": "management called the cap serum uh the cap serum demands that for any data",
    "start": "564079",
    "end": "569480"
  },
  {
    "text": "system consistency and availability and network partition tolerance or P",
    "start": "569480",
    "end": "575880"
  },
  {
    "text": "partition tolerance uh are are three values that you might want in a given database system but that any basic",
    "start": "575880",
    "end": "582880"
  },
  {
    "text": "system available will only be able to deliver two of those so for most",
    "start": "582880",
    "end": "588040"
  },
  {
    "text": "relational databases they've chosen consistency CLE only need the C part of",
    "start": "588040",
    "end": "593640"
  },
  {
    "text": "that and they've chosen availability of data at the expense of partition tolerance what that means is that it's",
    "start": "593640",
    "end": "600320"
  },
  {
    "text": "typically really complicated to do what's called scaling out or using more than one computer to power a database",
    "start": "600320",
    "end": "607760"
  },
  {
    "text": "for most database applications you use bigger and bigger and more and more powerful computers in order to be able",
    "start": "607760",
    "end": "614800"
  },
  {
    "text": "to deliver consistent high performance transactions and as you and I know it",
    "start": "614800",
    "end": "620160"
  },
  {
    "text": "can be complicated eventually these big database systems are clearly going to be",
    "start": "620160",
    "end": "625880"
  },
  {
    "text": "asked to do things that a single computer cannot do no matter how big they are today AWS supports what's",
    "start": "625880",
    "end": "631720"
  },
  {
    "text": "called a cr1 adx large that's 10 gigabit networking 32 VP ecpu and 244 gigs of",
    "start": "631720",
    "end": "640360"
  },
  {
    "text": "RAM with solid state storage that's very high performance allows very big databases but there are workloads",
    "start": "640360",
    "end": "646680"
  },
  {
    "text": "running on AWS that would take dozens and dozens of those computers to accommodate so how do you build a system",
    "start": "646680",
    "end": "654200"
  },
  {
    "text": "that can manage even bigger than these relational databases well in in many",
    "start": "654200",
    "end": "659600"
  },
  {
    "text": "tools you also are looking at a way to get more efficiency out of a given set",
    "start": "659600",
    "end": "665000"
  },
  {
    "text": "of Compu resources because you can imagine there are also workloads where that hard transactional rule isn't a",
    "start": "665000",
    "end": "672160"
  },
  {
    "text": "firm requirement uh maybe you know I think an easy example lots of people can",
    "start": "672160",
    "end": "677560"
  },
  {
    "text": "identify with it be American Idol they're in the middle of counting the number of votes for someone who uh to",
    "start": "677560",
    "end": "685600"
  },
  {
    "text": "figure out which of the three contestants is going to be the one who wins and everyone wants to vote all at",
    "start": "685600",
    "end": "691480"
  },
  {
    "text": "the same time you this system maybe is only used for 60 seconds so that kind of",
    "start": "691480",
    "end": "696959"
  },
  {
    "text": "a workload you can imagine you want to be able to show an update really quickly of the current number of votes and you",
    "start": "696959",
    "end": "704320"
  },
  {
    "text": "have potentially millions of simultaneous voters interacting with a tool like that so that kind of workload",
    "start": "704320",
    "end": "711680"
  },
  {
    "text": "it's not crucial that you're exactly right in the middle of the voting right",
    "start": "711680",
    "end": "717320"
  },
  {
    "text": "if you're off by one or two that's probably okay it's more important to show the general upward Trend to be able",
    "start": "717320",
    "end": "723680"
  },
  {
    "text": "to uh capture that data another example would be you know like leaderboards or scoreboards and there's there's lots of",
    "start": "723680",
    "end": "730079"
  },
  {
    "text": "other Data Systems where this kind of non-c consistency or eventual consistency as it's called can be really",
    "start": "730079",
    "end": "736800"
  },
  {
    "text": "valuable it turns out that in software tools if you're able to support eventual consistency and relax the requirements",
    "start": "736800",
    "end": "743800"
  },
  {
    "text": "of asset transactionality you can actually get to incredibly higher performance",
    "start": "743800",
    "end": "750240"
  },
  {
    "text": "particularly higher performance per unit of compute and it also allows you to change which of those two out of three",
    "start": "750240",
    "end": "756839"
  },
  {
    "text": "of the cap theem that you choose so if relational databases choose consistency and",
    "start": "756839",
    "end": "762399"
  },
  {
    "text": "availability you can choose availability and partition tolerance a& p and now you",
    "start": "762399",
    "end": "768000"
  },
  {
    "text": "have the ability to run distributed horizontally scaled fleets of infrastructure that uh that can deliver",
    "start": "768000",
    "end": "775519"
  },
  {
    "text": "very very high performance systems for data management at much lower cost at",
    "start": "775519",
    "end": "780959"
  },
  {
    "text": "much higher availability so nosql databases also support a variety of",
    "start": "780959",
    "end": "786560"
  },
  {
    "text": "different apis or or services that that they expose the maybe the most",
    "start": "786560",
    "end": "791880"
  },
  {
    "text": "complicated of those or the the richest of the apis you know sit in the document store category where you have the",
    "start": "791880",
    "end": "798519"
  },
  {
    "text": "ability to do some kinds of indexing and uh and the ability to do secondary indexes and Global indexes to to query",
    "start": "798519",
    "end": "805680"
  },
  {
    "text": "on values maybe a little bit more like a relational database with ow go lookups and other tools you also have a",
    "start": "805680",
    "end": "813959"
  },
  {
    "text": "relationship between the nosql data store development movement and new",
    "start": "813959",
    "end": "820160"
  },
  {
    "text": "classes of software development where if you look at objectoriented programming it can be really useful to have a",
    "start": "820160",
    "end": "825600"
  },
  {
    "text": "database that is itself objectoriented so that key value binding pair where you",
    "start": "825600",
    "end": "832120"
  },
  {
    "text": "say for this key I want to store this value as the simplest kind of data model",
    "start": "832120",
    "end": "838040"
  },
  {
    "text": "is embodied by lock of different software applications that are trying to capitalize on the higher efficiency",
    "start": "838040",
    "end": "843920"
  },
  {
    "text": "associated with being able to choose availability and partition tolerance out of the capture so today there are Myriad",
    "start": "843920",
    "end": "852800"
  },
  {
    "text": "no SQL databases running on ec2 that you can install manage on your own we also",
    "start": "852800",
    "end": "858120"
  },
  {
    "text": "have our own managed nosql database services in simple DB and Dynamo DB and",
    "start": "858120",
    "end": "863360"
  },
  {
    "text": "you can think of our storage service S3 as a key value storage service optimized",
    "start": "863360",
    "end": "870320"
  },
  {
    "text": "for very large values uh it's also very very large and and was built in in the",
    "start": "870320",
    "end": "876399"
  },
  {
    "text": "context of the general work around the Dynamo technology which is uh a white",
    "start": "876399",
    "end": "882040"
  },
  {
    "text": "paper that Amazon produced which allows and and provided for a lot of this kind of research there are also other kinds",
    "start": "882040",
    "end": "888360"
  },
  {
    "text": "of data storage systems it's not only the differences between relational and no SQL there are also tools for data",
    "start": "888360",
    "end": "894800"
  },
  {
    "text": "warehousing tools for map reduce analysis and lots of other systems but today what we're going to focus in on is",
    "start": "894800",
    "end": "902240"
  },
  {
    "text": "one of the options and I think that there's a lot of really successful customers that have focused on running",
    "start": "902240",
    "end": "909040"
  },
  {
    "start": "906000",
    "end": "947000"
  },
  {
    "text": "Cassandra on AWS Cassandra is very very popular um one of the most popular most",
    "start": "909040",
    "end": "915440"
  },
  {
    "text": "equal databases that's running on AWS today and one of our partners stack driver has a lot of really useful",
    "start": "915440",
    "end": "922639"
  },
  {
    "text": "handong experience with Cassandra that they'd love to share I think what that'll do it helped you come away with",
    "start": "922639",
    "end": "929560"
  },
  {
    "text": "better tools for deploying and designing your own nosql data system on AWS that",
    "start": "929560",
    "end": "936759"
  },
  {
    "text": "I'd love to hand it over to Joey because I'm excited to hear what he's got to say about",
    "start": "936759",
    "end": "942680"
  },
  {
    "text": "cassander all right hi everyone I'm Joey massiano I'm A Cloud platform engineer",
    "start": "944959",
    "end": "951199"
  },
  {
    "start": "947000",
    "end": "1031000"
  },
  {
    "text": "here at stock driver and I just wanted to thank you for uh joining us on this webinar this",
    "start": "951199",
    "end": "956560"
  },
  {
    "text": "morning uh so I just want to give you a little bit of background about uh me",
    "start": "956560",
    "end": "962120"
  },
  {
    "text": "I've been working with AWS as a platform uh for about three years now doing hosting and uh S Services and uh my",
    "start": "962120",
    "end": "971120"
  },
  {
    "text": "focus is really in uh operations and automation uh on top of",
    "start": "971120",
    "end": "977199"
  },
  {
    "text": "AWS uh so today uh with Cassandra I'm going to be talking about uh the problem",
    "start": "977199",
    "end": "983519"
  },
  {
    "text": "that we're trying to solve at stack driver with Cassandra um and by doing",
    "start": "983519",
    "end": "989360"
  },
  {
    "text": "that I'm going to give you a brief intro into the architecture here um tell you",
    "start": "989360",
    "end": "995440"
  },
  {
    "text": "why we chose Cassandra and some of the Alternatives that we considered uh going into a little bit of",
    "start": "995440",
    "end": "1003480"
  },
  {
    "text": "a deep dive on our Cassandra configuration uh including uh AWS",
    "start": "1003480",
    "end": "1008639"
  },
  {
    "text": "specific configuration uh go over briefly some Automation and tooling that we've done",
    "start": "1008639",
    "end": "1015360"
  },
  {
    "text": "and then tell you uh a little bit about how we've uh changed how we do uh",
    "start": "1015360",
    "end": "1020519"
  },
  {
    "text": "disaster recovery and backups uh by utilizing uh S3 and",
    "start": "1020519",
    "end": "1027160"
  },
  {
    "text": "Cassandra so to start out uh the problem that we're trying to solve is that uh",
    "start": "1030079",
    "end": "1036199"
  },
  {
    "start": "1031000",
    "end": "1220000"
  },
  {
    "text": "stack driver provides um customer Cloud hosted applications uh with monitoring",
    "start": "1036199",
    "end": "1042720"
  },
  {
    "text": "and uh um inventory data and um so what",
    "start": "1042720",
    "end": "1048438"
  },
  {
    "text": "we're doing is we're collecting from uh Cloud providers uh an inventory of uh",
    "start": "1048439",
    "end": "1055039"
  },
  {
    "text": "each of our customer systems so that includes things like ECT no ec2 nodes uh",
    "start": "1055039",
    "end": "1060600"
  },
  {
    "text": "elbs sqs uh elasticache we're also collecting information about services",
    "start": "1060600",
    "end": "1066440"
  },
  {
    "text": "that are running on top of ec2 so these include services like Cassandra",
    "start": "1066440",
    "end": "1072280"
  },
  {
    "text": "engine X redus and elastic search and what we're doing uh is we're collecting",
    "start": "1072280",
    "end": "1078320"
  },
  {
    "text": "metrics for each each of these uh uh services so as you can see here in this",
    "start": "1078320",
    "end": "1085240"
  },
  {
    "text": "uh screenshot uh this is a an El dashboard that uh on the left you can",
    "start": "1085240",
    "end": "1091480"
  },
  {
    "text": "see the inventory and on the right you can see uh performance data for latency",
    "start": "1091480",
    "end": "1096840"
  },
  {
    "text": "and the number of requests per second that these elbs are getting so our data",
    "start": "1096840",
    "end": "1102200"
  },
  {
    "text": "uh we have we're collecting all this data about each of these uh inventory items and services and our data is",
    "start": "1102200",
    "end": "1108960"
  },
  {
    "text": "primarily uh a Time series data so it for uh each one of these points there is",
    "start": "1108960",
    "end": "1116360"
  },
  {
    "text": "a a timestamp and a value and uh each one of these lines is uh keyed by the",
    "start": "1116360",
    "end": "1122760"
  },
  {
    "text": "metric that we're collecting so this data model fits uh uh as you'll see",
    "start": "1122760",
    "end": "1130080"
  },
  {
    "text": "really well into how Cassandra works so uh some of the things that uh",
    "start": "1130080",
    "end": "1135919"
  },
  {
    "text": "we're trying to do with this data is uh we allow you to uh group your resources",
    "start": "1135919",
    "end": "1141520"
  },
  {
    "text": "into uh how you think about your infrastructure so in being able to dynamically group these uh resources we",
    "start": "1141520",
    "end": "1148880"
  },
  {
    "text": "have to have a a lot of data online in order to perform things like",
    "start": "1148880",
    "end": "1154000"
  },
  {
    "text": "aggregations and um allow you to create graphs kind of on the Fly of uh of uh",
    "start": "1154000",
    "end": "1162280"
  },
  {
    "text": "performance metrics that are aggregated across clusters of resources um so",
    "start": "1162280",
    "end": "1167440"
  },
  {
    "text": "obviously we can't predict uh what kind of dashboard that you want to build ahead of time uh so we we need all this",
    "start": "1167440",
    "end": "1174840"
  },
  {
    "text": "data uh online and and ready to go so we can present you uh with the best",
    "start": "1174840",
    "end": "1179880"
  },
  {
    "text": "possible dashboard to solve a problem uh and then one other thing that",
    "start": "1179880",
    "end": "1185240"
  },
  {
    "text": "uh we're doing for customers is we're uh doing analysis on the data so uh we're",
    "start": "1185240",
    "end": "1191400"
  },
  {
    "text": "generating things like weekly reports to tell you um give you recommendations",
    "start": "1191400",
    "end": "1196440"
  },
  {
    "text": "about capacity uh and any potential issues that you'll have in uh in your",
    "start": "1196440",
    "end": "1202720"
  },
  {
    "text": "infrastructure so again this uh we need all this data",
    "start": "1202720",
    "end": "1207919"
  },
  {
    "text": "online in order to do these reports and uh uh this is where cassander comes into",
    "start": "1207919",
    "end": "1215760"
  },
  {
    "text": "play so just to give you a brief overview of the architecture and how uh",
    "start": "1219039",
    "end": "1224760"
  },
  {
    "start": "1220000",
    "end": "1341000"
  },
  {
    "text": "Cassandra fits in so as you can see uh the diag on the right the data is",
    "start": "1224760",
    "end": "1229799"
  },
  {
    "text": "Flowing from bottom to top so we have uh two different layers of uh",
    "start": "1229799",
    "end": "1237960"
  },
  {
    "text": "two different pipelines that are feeding into Cassandra uh the first pipeline is",
    "start": "1237960",
    "end": "1243679"
  },
  {
    "text": "um an analysis Pipeline and this is uh this is data that's coming in in bash so",
    "start": "1243679",
    "end": "1250440"
  },
  {
    "text": "um we'll do things like compute aggregations create recommendations and",
    "start": "1250440",
    "end": "1256280"
  },
  {
    "text": "uh save this data into Cassandra and another pipeline that's coming in is uh",
    "start": "1256280",
    "end": "1261400"
  },
  {
    "text": "an indexing pipeline so this is all the sensor data is coming into our service and we're immediately saving it into",
    "start": "1261400",
    "end": "1268720"
  },
  {
    "text": "Cassandra and uh what this allows us to do is allows us to uh show you uh uh as",
    "start": "1268720",
    "end": "1275320"
  },
  {
    "text": "soon as the data comes in the uh data on each one of your dashboards so you don't",
    "start": "1275320",
    "end": "1280679"
  },
  {
    "text": "have to wait for any of the slow analysis or batch jobs to uh insert uh",
    "start": "1280679",
    "end": "1285880"
  },
  {
    "text": "other data so then there's also a gray layer that is uh sits on top of Cassandra and",
    "start": "1285880",
    "end": "1293880"
  },
  {
    "text": "this is uh basically an API that we've designed that allows us to ask questions",
    "start": "1293880",
    "end": "1299559"
  },
  {
    "text": "and give answers so you know the simplest question is give me uh give me",
    "start": "1299559",
    "end": "1304799"
  },
  {
    "text": "the performance data for this uh elb between uh midnight and 12: p.m. um and",
    "start": "1304799",
    "end": "1313640"
  },
  {
    "text": "then we can ask other questions like give me the uh",
    "start": "1313640",
    "end": "1319039"
  },
  {
    "text": "aggregated data for a group of resources uh between such and such a",
    "start": "1319039",
    "end": "1324880"
  },
  {
    "text": "time uh and then another path that we actually won't get into on this webinar is uh an alerting pipeline um so but",
    "start": "1324880",
    "end": "1334120"
  },
  {
    "text": "that's not discussed",
    "start": "1334120",
    "end": "1336960"
  },
  {
    "text": "here so why why did we choose Cassandra I think this is uh you know something",
    "start": "1339200",
    "end": "1345200"
  },
  {
    "start": "1341000",
    "end": "1532000"
  },
  {
    "text": "that's really important um and and that you know always always kind of comes up in in conversations um so Cassandra has",
    "start": "1345200",
    "end": "1353679"
  },
  {
    "text": "a a true peer-to-peer architecture so there are no uh special nodes there are",
    "start": "1353679",
    "end": "1359440"
  },
  {
    "text": "no Masters there are no slaves um and what this allows us to do is it allows",
    "start": "1359440",
    "end": "1365200"
  },
  {
    "text": "us to add and remove capacity and we don't care which node um we're removing",
    "start": "1365200",
    "end": "1371240"
  },
  {
    "text": "we don't care what kind of node we're adding it you know it really simplifies the operational aspect of running the",
    "start": "1371240",
    "end": "1377559"
  },
  {
    "text": "database um Cassandra has great support for right",
    "start": "1377559",
    "end": "1383000"
  },
  {
    "text": "heavy workloads uh the majority of our data um coming in is is right so uh you",
    "start": "1383000",
    "end": "1390679"
  },
  {
    "text": "know there's an order of magnitude more data that we're writing to Cassandra",
    "start": "1390679",
    "end": "1396159"
  },
  {
    "text": "than we're reading out um so the the data model uh Cass",
    "start": "1396159",
    "end": "1403159"
  },
  {
    "text": "basically is is an append only storage so uh the time series data that's coming",
    "start": "1403159",
    "end": "1408720"
  },
  {
    "text": "in for each one of these uh Services is is really compatible with Cassandra uh",
    "start": "1408720",
    "end": "1416600"
  },
  {
    "text": "your your uh row key is the metric that's coming in and then each value is",
    "start": "1416600",
    "end": "1423799"
  },
  {
    "text": "a time stamp and the value of the measurement that we've taken and uh",
    "start": "1423799",
    "end": "1430120"
  },
  {
    "text": "Cassandra uh allows you to just keep appending to this row and uh it works",
    "start": "1430120",
    "end": "1435279"
  },
  {
    "text": "really well and then uh cassander is built you know from the",
    "start": "1435279",
    "end": "1440600"
  },
  {
    "text": "ground up for as a distributed database so it allows us to achieve High availability really easily in AWS by",
    "start": "1440600",
    "end": "1448679"
  },
  {
    "text": "Distributing across the availability zones so you'll see in in a couple slides um you know how we do",
    "start": "1448679",
    "end": "1455799"
  },
  {
    "text": "this so just to go over a couple other uh options that we considered when uh",
    "start": "1455799",
    "end": "1462480"
  },
  {
    "text": "approaching this problem uh my SQL uh a lot of us on the stock driver team had",
    "start": "1462480",
    "end": "1469159"
  },
  {
    "text": "experience with operating large shed deployment in my SQL and uh you know",
    "start": "1469159",
    "end": "1474200"
  },
  {
    "text": "operationally it was really complex um very arrone very manual and it it was",
    "start": "1474200",
    "end": "1479840"
  },
  {
    "text": "just it was a challenge that um you know we didn't feel like we could win uh and",
    "start": "1479840",
    "end": "1486279"
  },
  {
    "text": "the relational data model you know we we're adding all uh new kinds of metrics",
    "start": "1486279",
    "end": "1492200"
  },
  {
    "text": "uh every day and uh to have to Define that schema ahead of time um and and do",
    "start": "1492200",
    "end": "1497720"
  },
  {
    "text": "the kind of team uh updates that uh we would have to just it it just wouldn't",
    "start": "1497720",
    "end": "1503039"
  },
  {
    "text": "work um H Bas you know was another Contender uh again operational",
    "start": "1503039",
    "end": "1509039"
  },
  {
    "text": "complexity that we really just we didn't we didn't want to deal with uh requires slee keeper uh htfs it has a special",
    "start": "1509039",
    "end": "1517600"
  },
  {
    "text": "Master role and uh again like when when you're working in AWS uh special nodes",
    "start": "1517600",
    "end": "1523640"
  },
  {
    "text": "they it just it doesn't work out well",
    "start": "1523640",
    "end": "1528480"
  },
  {
    "text": "just to give you a little bit more insight on the architecture uh before we dive into the Cassandra specifics um",
    "start": "1531039",
    "end": "1539640"
  },
  {
    "start": "1532000",
    "end": "1666000"
  },
  {
    "text": "so on the left in this diagram is the index indexing path that I was talking",
    "start": "1539640",
    "end": "1545480"
  },
  {
    "text": "about earlier and data coming into our service goes directly into Cassandra through this indexing",
    "start": "1545480",
    "end": "1552640"
  },
  {
    "text": "path the archival path uh which is really important when we're talking about disaster recovery and um recovery",
    "start": "1552640",
    "end": "1560000"
  },
  {
    "text": "in general is really important to us so data coming into uh our service also",
    "start": "1560000",
    "end": "1565559"
  },
  {
    "text": "goes down in arival path so immediately we'll put the the data uh not only into",
    "start": "1565559",
    "end": "1571200"
  },
  {
    "text": "Cassandra but also into S3 and then uh we'll also replicate this uh data to",
    "start": "1571200",
    "end": "1576960"
  },
  {
    "text": "multiple regions uh with S3 uh and what",
    "start": "1576960",
    "end": "1582000"
  },
  {
    "text": "this allows us to do is have a uh as you'll see later on is have a path to disaster recovery if uh a a region was",
    "start": "1582000",
    "end": "1591440"
  },
  {
    "text": "ever out in AWS and one of the important um",
    "start": "1591440",
    "end": "1600080"
  },
  {
    "text": "important things in the stock driver architecture is that uh the majority of the pieces are stateless and in order to",
    "start": "1600080",
    "end": "1607240"
  },
  {
    "text": "scale our service as customers grow and as we acquire new customers is that we",
    "start": "1607240",
    "end": "1612320"
  },
  {
    "text": "horizontally scale each one of the stateless services so uh we needed a database that",
    "start": "1612320",
    "end": "1618840"
  },
  {
    "text": "could also scale horizontally uh just just like our other services that we've",
    "start": "1618840",
    "end": "1624320"
  },
  {
    "text": "built so Cassandra is uh does this",
    "start": "1624320",
    "end": "1629399"
  },
  {
    "text": "really easily it it um and uh we we'll get into",
    "start": "1629399",
    "end": "1634919"
  },
  {
    "text": "this and just one other key area that um",
    "start": "1634919",
    "end": "1639960"
  },
  {
    "text": "uh comes into play in the stack dver architecture is cassandre we treat that as a soft state so you'll see that we",
    "start": "1639960",
    "end": "1646799"
  },
  {
    "text": "don't uh the way we do backup and Recovery uh is not dependent on",
    "start": "1646799",
    "end": "1652039"
  },
  {
    "text": "Cassandra and uh I think that that makes us uh our our use of C native are really",
    "start": "1652039",
    "end": "1661200"
  },
  {
    "start": "1666000",
    "end": "2000000"
  },
  {
    "text": "unique so here we get into uh details about our KAS configuration here at",
    "start": "1666480",
    "end": "1673039"
  },
  {
    "text": "stock driver so we're using uh the data Stacks community Edition uh you can see the",
    "start": "1673039",
    "end": "1680880"
  },
  {
    "text": "version here uh and uh what data stats gives us is a a packaged uh version of",
    "start": "1680880",
    "end": "1688799"
  },
  {
    "text": "the open-source uh Apache Cassandra and uh",
    "start": "1688799",
    "end": "1694159"
  },
  {
    "text": "comes with really helpful uh uh run scripts um it comes with uh additional",
    "start": "1694159",
    "end": "1701480"
  },
  {
    "text": "tunings that they've um they've recommended and uh and it it it's all",
    "start": "1701480",
    "end": "1708240"
  },
  {
    "text": "bundled in an RPM so uh we run our Cassandra with a",
    "start": "1708240",
    "end": "1714960"
  },
  {
    "text": "replication factor of three and what this means is that for every right that",
    "start": "1714960",
    "end": "1720360"
  },
  {
    "text": "we do to Cassandra the right is uh replicated uh to a total of three nodes so in the",
    "start": "1720360",
    "end": "1729480"
  },
  {
    "text": "case of an outage uh of an availability Zone we'll still have the data in uh two",
    "start": "1729480",
    "end": "1736200"
  },
  {
    "text": "other availability zones and what this allows us to do is still achieve uh a",
    "start": "1736200",
    "end": "1742200"
  },
  {
    "text": "quorum when we do reads or writes even in the case of uh an an",
    "start": "1742200",
    "end": "1749000"
  },
  {
    "text": "outage one thing that uh Cassandra uh introduced in version one two is the uh",
    "start": "1749360",
    "end": "1757000"
  },
  {
    "text": "vodes and uh murmur 3 partitioner so in version one two vodes um they take care",
    "start": "1757000",
    "end": "1764640"
  },
  {
    "text": "of uh of how uh data uh how node how the data is distributed",
    "start": "1764640",
    "end": "1771279"
  },
  {
    "text": "over the nodes uh when you add and remove nodes in previous versions of Cassandra you have to manage um these",
    "start": "1771279",
    "end": "1778880"
  },
  {
    "text": "token ring positions uh and this the tokens uh described where data went and",
    "start": "1778880",
    "end": "1786919"
  },
  {
    "text": "uh when you're constantly adding and removing nodes um you had to be uh you",
    "start": "1786919",
    "end": "1792320"
  },
  {
    "text": "had to pre-calculate basically where the position was that you wanted uh your",
    "start": "1792320",
    "end": "1797799"
  },
  {
    "text": "data to go and uh you know it I found it to be pretty errone if you didn't really",
    "start": "1797799",
    "end": "1804279"
  },
  {
    "text": "plan ahead um but uh Cassandra you know took this to uh took this as a serious",
    "start": "1804279",
    "end": "1810720"
  },
  {
    "text": "problem and and and uh and really made it a lot simpler in in version one two",
    "start": "1810720",
    "end": "1816559"
  },
  {
    "text": "so what vnodes do is when you add and remove uh",
    "start": "1816559",
    "end": "1821960"
  },
  {
    "text": "um servers from your Cassandra ring it uh redistributes the data automatically",
    "start": "1821960",
    "end": "1828000"
  },
  {
    "text": "so it takes care of all of the the ring partitioning that you had to do in the",
    "start": "1828000",
    "end": "1833799"
  },
  {
    "text": "past and uh what the murmur 3 partitioner does is it it uh it's uh it",
    "start": "1833799",
    "end": "1842240"
  },
  {
    "text": "it tells you uh tells the data where to go so it it uh is like a random",
    "start": "1842240",
    "end": "1847960"
  },
  {
    "text": "partitioner that uh ensures that your data is evenly distributed uh throughout",
    "start": "1847960",
    "end": "1853159"
  },
  {
    "text": "your ring so specific to AWS",
    "start": "1853159",
    "end": "1858600"
  },
  {
    "text": "um one of the uh plugins that you can use uh with Apache Cassandra is uh an",
    "start": "1858600",
    "end": "1866480"
  },
  {
    "text": "ec2 snitch and what the ec2 snitch uh allows you to do is um first of all is",
    "start": "1866480",
    "end": "1873760"
  },
  {
    "text": "in request efficiency so when you make a a request uh to Cassandra uh requests",
    "start": "1873760",
    "end": "1879080"
  },
  {
    "text": "are routed uh in an availability zone so you you actually get a lower",
    "start": "1879080",
    "end": "1885200"
  },
  {
    "text": "latency uh and when uh so what what the ec2 snitch is really doing is it's",
    "start": "1885200",
    "end": "1891679"
  },
  {
    "text": "allowing Cassandra to be uh Amazon aware so it knows uh uh about where the node",
    "start": "1891679",
    "end": "1899880"
  },
  {
    "text": "is in relation to other nodes so if you have a nodes in Us East 1A B and C uh",
    "start": "1899880",
    "end": "1905720"
  },
  {
    "text": "each of the cassander nodes actually knows where the other ones",
    "start": "1905720",
    "end": "1911159"
  },
  {
    "text": "are and uh the other thing that the ec2 snitch gives you is the enables",
    "start": "1911159",
    "end": "1916360"
  },
  {
    "text": "Cassandra to ensure replica in different availability sounds and this is you know",
    "start": "1916360",
    "end": "1921720"
  },
  {
    "text": "probably the most important thing so since since each each of the cassander nodes knows where it is and where other",
    "start": "1921720",
    "end": "1928080"
  },
  {
    "text": "nodes are uh when it goes to replicate data it can ensure that the when you",
    "start": "1928080",
    "end": "1933240"
  },
  {
    "text": "have a replication factor of three that that data is actually living in three different availability zones and you",
    "start": "1933240",
    "end": "1939679"
  },
  {
    "text": "know obviously this is important because if an availab availability Zone were to",
    "start": "1939679",
    "end": "1945440"
  },
  {
    "text": "go out you wouldn't want all three uh replic replicas to be in the same",
    "start": "1945440",
    "end": "1951320"
  },
  {
    "text": "Data Center and then one other setting that",
    "start": "1951320",
    "end": "1956880"
  },
  {
    "text": "uh I feel is a little bit hidden um but I think is worth mentioning is uh this",
    "start": "1956880",
    "end": "1961919"
  },
  {
    "text": "fi convict threshold and this is used to determine when nodes are down and uh",
    "start": "1961919",
    "end": "1967760"
  },
  {
    "text": "this is actually a data Stacks recommendation um so the AWS Network can be a little noisy and um by increasing",
    "start": "1967760",
    "end": "1975799"
  },
  {
    "text": "the threshold from 8 to 12 you you'll find that uh that nodes um will give",
    "start": "1975799",
    "end": "1982039"
  },
  {
    "text": "give each other uh a little bit more time to respond um before being marked",
    "start": "1982039",
    "end": "1987159"
  },
  {
    "text": "this down and and this just helps uh I found in in operations on top of uh",
    "start": "1987159",
    "end": "1994880"
  },
  {
    "text": "AWS so here's a visual of arasand topology in Ed us and uh on the left is",
    "start": "1997919",
    "end": "2005039"
  },
  {
    "start": "2000000",
    "end": "2082000"
  },
  {
    "text": "where we started we started uh you know uh last July as a company and so we had",
    "start": "2005039",
    "end": "2010639"
  },
  {
    "text": "a little three node cluster uh running in a b and c in Us East and uh as we've",
    "start": "2010639",
    "end": "2018720"
  },
  {
    "text": "grown and our customers have grown we've had to scale this out we've we've scaled our entire infrastructure out but",
    "start": "2018720",
    "end": "2024279"
  },
  {
    "text": "Cassandra's been a key piece obviously so uh as as we uh so we actually started",
    "start": "2024279",
    "end": "2030679"
  },
  {
    "text": "with one two and three and uh we're up to 36 node cluster in AWS distributed",
    "start": "2030679",
    "end": "2036720"
  },
  {
    "text": "evenly across each of the availability SS so as you you can see on the right uh",
    "start": "2036720",
    "end": "2042799"
  },
  {
    "text": "you know it's grown quite a bit and uh from an operational perspective uh you",
    "start": "2042799",
    "end": "2048118"
  },
  {
    "text": "know it's been you know really fun to work with so you know we'll we'll uh double our traffic in a day and we'll",
    "start": "2048119",
    "end": "2054800"
  },
  {
    "text": "double the size of the Cassandra cluster uh we'll go up 50% the next week we'll go up 50% on the Cassandra cluster it's",
    "start": "2054800",
    "end": "2061398"
  },
  {
    "text": "really painless and uh and uh really fun to work with so um uh this is gives you",
    "start": "2061399",
    "end": "2068280"
  },
  {
    "text": "a visual of of uh you know kind of growing this out and uh across each of the availability",
    "start": "2068280",
    "end": "2076079"
  },
  {
    "start": "2082000",
    "end": "2248000"
  },
  {
    "text": "Zounds so here's some specific uh Cassandra uh ec2 node",
    "start": "2082159",
    "end": "2088919"
  },
  {
    "text": "configuration so here at sa driver we use an M1",
    "start": "2088919",
    "end": "2094358"
  },
  {
    "text": "XL and uh an M1 XL has uh four cores at T two ecus each they have 15 GB of RAM",
    "start": "2094359",
    "end": "2104000"
  },
  {
    "text": "and four femoral discs available and actually the most important thing to us is the foral discs and I'll explain why",
    "start": "2104000",
    "end": "2111079"
  },
  {
    "text": "in a bit but I've also found that it's uh for our specific right workload um",
    "start": "2111079",
    "end": "2117240"
  },
  {
    "text": "this uh uh combination of four cores and 15",
    "start": "2117240",
    "end": "2123200"
  },
  {
    "text": "gigabytes of RAM is uh has really served us well",
    "start": "2123200",
    "end": "2129280"
  },
  {
    "text": "uh the reason the four aeral discs are really important is that um the so when",
    "start": "2129480",
    "end": "2136640"
  },
  {
    "text": "Cassandra writes data it writes it first to the commit log the commit log is a sequential write on the test and then",
    "start": "2136640",
    "end": "2143440"
  },
  {
    "text": "when there's enough data to compact it compacts them into these data um tables",
    "start": "2143440",
    "end": "2150240"
  },
  {
    "text": "and uh uh the compaction uh is really expensive on the disk so uh",
    "start": "2150240",
    "end": "2158160"
  },
  {
    "text": "again this is actually a data Stacks recommendation but I think it's uh pretty pretty important to point out so",
    "start": "2158160",
    "end": "2165280"
  },
  {
    "text": "you not only have the sequential rights going to this uh uh for disk raid zero",
    "start": "2165280",
    "end": "2170440"
  },
  {
    "text": "but you also have this compaction that's going on which is reading and writing data non-sequentially on these diss so",
    "start": "2170440",
    "end": "2176880"
  },
  {
    "text": "the raid zero these four discs gives you uh the most IO uh that you can get uh uh",
    "start": "2176880",
    "end": "2183599"
  },
  {
    "text": "on these on ephemeral discs um just a couple other set things that that we",
    "start": "2183599",
    "end": "2188640"
  },
  {
    "text": "found uh and benchmarked um EX4 with uh",
    "start": "2188640",
    "end": "2193800"
  },
  {
    "text": "like default and no a time has given us uh great results as far as a file system",
    "start": "2193800",
    "end": "2200160"
  },
  {
    "text": "uh we use mdadm for raid zero and uh again there's just uh these",
    "start": "2200160",
    "end": "2207440"
  },
  {
    "text": "discs just have really heavy read write IO to them so you know again this is why",
    "start": "2207440",
    "end": "2212800"
  },
  {
    "text": "we use raate zero um if one of the diss",
    "start": "2212800",
    "end": "2218520"
  },
  {
    "text": "fails uh we actually fail the entire node and we'll replace it in",
    "start": "2218520",
    "end": "2227040"
  },
  {
    "text": "um we'll replace it in in the cassander cluster so we're not worried about high",
    "start": "2227040",
    "end": "2233599"
  },
  {
    "text": "availability on the on the diss because Cassandra's again cassander is taking care of this for us at at the",
    "start": "2233599",
    "end": "2239640"
  },
  {
    "text": "application layer",
    "start": "2239640",
    "end": "2243119"
  },
  {
    "start": "2248000",
    "end": "2369000"
  },
  {
    "text": "so I'm just going to touch on uh some of the Automation and operational things",
    "start": "2250520",
    "end": "2256160"
  },
  {
    "text": "that we do um uh uh in our platform and uh this isn't uh Cassandra specific but",
    "start": "2256160",
    "end": "2264760"
  },
  {
    "text": "um uh Cassandra does fall under our tool set here for",
    "start": "2264760",
    "end": "2271079"
  },
  {
    "text": "automations so we use a combination of Botto Fabric and puppet and for those of",
    "start": "2271240",
    "end": "2277200"
  },
  {
    "text": "you aren't familiar Bodo is uh the python library for interacting with the",
    "start": "2277200",
    "end": "2282920"
  },
  {
    "text": "AWS API uh so this allows us to create instances destroy instances um and anything that you need",
    "start": "2282920",
    "end": "2290359"
  },
  {
    "text": "to do against the the the Amazon API uh fabric is an orchestration",
    "start": "2290359",
    "end": "2296839"
  },
  {
    "text": "library for python uh it allows you to ssh in to one or multiple nodes execute",
    "start": "2296839",
    "end": "2301960"
  },
  {
    "text": "commands get results things like that um puppet is a a uh configuration",
    "start": "2301960",
    "end": "2309040"
  },
  {
    "text": "management tool and what that allows you to do is in a declarative uh language",
    "start": "2309040",
    "end": "2314560"
  },
  {
    "text": "Define what uh the state of a node should look like so using a combination of these",
    "start": "2314560",
    "end": "2322800"
  },
  {
    "text": "tools uh we can uh provision a new node",
    "start": "2322800",
    "end": "2328960"
  },
  {
    "text": "uh um uh put puppet code onto it and",
    "start": "2328960",
    "end": "2334319"
  },
  {
    "text": "then execute puppet to uh turn a node into a Cassandra uh Cassandra server and",
    "start": "2334319",
    "end": "2341960"
  },
  {
    "text": "by bootstrapping it into the Cassandra ring uh you know we have one command to",
    "start": "2341960",
    "end": "2347920"
  },
  {
    "text": "launch a new cluster a new node we can replace dead nodes replace existing",
    "start": "2347920",
    "end": "2353920"
  },
  {
    "text": "nodes um and do the growing and shrinking uh at basically in in one",
    "start": "2353920",
    "end": "2360599"
  },
  {
    "text": "command",
    "start": "2360599",
    "end": "2363599"
  },
  {
    "text": "so we have a uh an internal slogan and and a great poster here at stack driver",
    "start": "2367520",
    "end": "2373280"
  },
  {
    "text": "and uh what could possibly go wrong um you know so you always have to be",
    "start": "2373280",
    "end": "2379599"
  },
  {
    "text": "thinking about uh uh failure and uh so",
    "start": "2379599",
    "end": "2385480"
  },
  {
    "text": "we've taken I think a unique approach into uh thinking about failure when it",
    "start": "2385480",
    "end": "2391079"
  },
  {
    "text": "comes to uh Cassandra",
    "start": "2391079",
    "end": "2395599"
  },
  {
    "text": "so we don't use um Cassandra powered backups um one of the luxuries of",
    "start": "2399920",
    "end": "2407560"
  },
  {
    "text": "working on Amazon is you have uh S3 and",
    "start": "2407560",
    "end": "2412880"
  },
  {
    "text": "uh we've had a great experience with S3 so what what we do is um all the data",
    "start": "2412880",
    "end": "2419040"
  },
  {
    "text": "that comes into our SAS Service uh I mentioned this earlier but I'll mention it again is written uh immediately to S3",
    "start": "2419040",
    "end": "2426240"
  },
  {
    "text": "and with this allows us to do is we've written uh tools that will read this",
    "start": "2426240",
    "end": "2431960"
  },
  {
    "text": "data out of S3 and replay it back into our um Cassandra cluster so in the event",
    "start": "2431960",
    "end": "2439400"
  },
  {
    "text": "um of a catastrophic failure of our Cassandra cluster or a uh severe outage",
    "start": "2439400",
    "end": "2447319"
  },
  {
    "text": "or uh maybe there's a bug that affected data uh we have the ability to load data",
    "start": "2447319",
    "end": "2454079"
  },
  {
    "text": "from S3 uh into our tool called the bulk loader uh we use tools like elastic map",
    "start": "2454079",
    "end": "2460920"
  },
  {
    "text": "reduce to run all the data and aggregations and computations that we've run before on the data and all of this",
    "start": "2460920",
    "end": "2468000"
  },
  {
    "text": "gets pumped back into Cassandra and uh we can do this uh on on demand and uh",
    "start": "2468000",
    "end": "2475440"
  },
  {
    "text": "it's allowed us to do things like take a major version upgrade of Cassandra without being worried so what we'll do",
    "start": "2475440",
    "end": "2482920"
  },
  {
    "text": "is we'll uh have our existing Cassandra cluster running we'll bring up a new",
    "start": "2482920",
    "end": "2488400"
  },
  {
    "text": "major version alongside of it will'll replay all of the data that was played into the original cluster into the one",
    "start": "2488400",
    "end": "2495560"
  },
  {
    "text": "alongside of it and then we have tools for cutting uh over uh part part of our",
    "start": "2495560",
    "end": "2501960"
  },
  {
    "text": "traffic to the new CER cluster to make sure that everything's great when everything's stamped and ready to go",
    "start": "2501960",
    "end": "2508160"
  },
  {
    "text": "we'll cut over the rest of our infrastructure and then uh we'll be running on the new Cassandra cluster and",
    "start": "2508160",
    "end": "2514760"
  },
  {
    "text": "when uh when every when everything is you know all set and",
    "start": "2514760",
    "end": "2521079"
  },
  {
    "text": "ready to go we'll spin down the old Cassandra cluster and we'll throw it away and this has allowed us to be",
    "start": "2521079",
    "end": "2527800"
  },
  {
    "text": "really confident in uh you know taking on new database uh upgrades uh making",
    "start": "2527800",
    "end": "2534400"
  },
  {
    "text": "changes and and really staying agile as an engineering",
    "start": "2534400",
    "end": "2540040"
  },
  {
    "text": "organization so just uh just to show you uh uh uh this is a bulk load in action",
    "start": "2541400",
    "end": "2548559"
  },
  {
    "start": "2546000",
    "end": "2583000"
  },
  {
    "text": "so as you can see uh this happened uh back in April but uh on Tuesday we",
    "start": "2548559",
    "end": "2555000"
  },
  {
    "text": "started a bulkload the load on our Kasa cluster was uh got pretty high and then",
    "start": "2555000",
    "end": "2561440"
  },
  {
    "text": "uh once everything caught up uh by Saturday is back to normal and uh that",
    "start": "2561440",
    "end": "2567440"
  },
  {
    "text": "was a successful bulkload of a of a new Cass cluster so uh I'm gonna that that's the",
    "start": "2567440",
    "end": "2576200"
  },
  {
    "text": "end of my talk I'm going to hand the mic over to uh Maya who's going to lead uh",
    "start": "2576200",
    "end": "2581760"
  },
  {
    "text": "the Q&A um thank you all for demonstrating the best practices for running aache",
    "start": "2581760",
    "end": "2588000"
  },
  {
    "start": "2583000",
    "end": "2717000"
  },
  {
    "text": "Cassandra on AWS and yeah let's open it for a Q&A I already see a few questions from the",
    "start": "2588000",
    "end": "2593240"
  },
  {
    "text": "audience um I'm going to start with a question that I will direct it to you",
    "start": "2593240",
    "end": "2600119"
  },
  {
    "text": "Joey geographically dispersed nodes don't they cause any anomalies",
    "start": "2600119",
    "end": "2607359"
  },
  {
    "text": "so um I just I want to make sure I understand the questions um so I think",
    "start": "2609720",
    "end": "2615559"
  },
  {
    "text": "you're talking about uh if the nodes are geographically dispersed um won't the",
    "start": "2615559",
    "end": "2621240"
  },
  {
    "text": "data be inconsistent um so uh you know",
    "start": "2621240",
    "end": "2626640"
  },
  {
    "text": "consistency is I think always a concern when we start to talk about these uh",
    "start": "2626640",
    "end": "2631839"
  },
  {
    "text": "nosql uh databases uh but uh What uh s allows you",
    "start": "2631839",
    "end": "2637839"
  },
  {
    "text": "to do is it allows you to tune your consistency so um remember I was talking",
    "start": "2637839",
    "end": "2643920"
  },
  {
    "text": "about our configuration where we have a replication factor of three so that means up to three nodes can receive the",
    "start": "2643920",
    "end": "2650119"
  },
  {
    "text": "uh uh a total of three nodes receive the the a copy of the data so um what you",
    "start": "2650119",
    "end": "2656960"
  },
  {
    "text": "can do is if your application requires uh High consistency you can write a um",
    "start": "2656960",
    "end": "2663880"
  },
  {
    "text": "local Quorum or or uh all and uh what this means is that if you write a local",
    "start": "2663880",
    "end": "2670119"
  },
  {
    "text": "Quorum then uh two nodes have to confirm that they've received two out of three",
    "start": "2670119",
    "end": "2675680"
  },
  {
    "text": "nodes have to confirm that they've received the right if you re write at a consistency level of all that means all",
    "start": "2675680",
    "end": "2681760"
  },
  {
    "text": "the nodes have to confirm that they received the right and uh that prevents",
    "start": "2681760",
    "end": "2687240"
  },
  {
    "text": "any inconsistencies that you might find uh KAS comes with uh uh tools for also",
    "start": "2687240",
    "end": "2694680"
  },
  {
    "text": "finding and repairing any inconsistency IES that might have occurred and uh the",
    "start": "2694680",
    "end": "2700079"
  },
  {
    "text": "these are called repairs um so if you're if you're interested in something in going in deeper on this um uh you can",
    "start": "2700079",
    "end": "2707160"
  },
  {
    "text": "look at the uh Cassandra uh documentation around uh repairing and um",
    "start": "2707160",
    "end": "2714559"
  },
  {
    "text": "uh inconsistencies thank you um let's move on to the next",
    "start": "2714559",
    "end": "2720880"
  },
  {
    "start": "2717000",
    "end": "2766000"
  },
  {
    "text": "question what type of compaction strategy do you use on your tables do you stay with a with the default or do",
    "start": "2720880",
    "end": "2728040"
  },
  {
    "text": "you tweak it per table good question um",
    "start": "2728040",
    "end": "2735720"
  },
  {
    "text": "so we use size tiered compaction um and",
    "start": "2735720",
    "end": "2744040"
  },
  {
    "text": "uh we've done very light tweaking um only around the throughput for",
    "start": "2744040",
    "end": "2750640"
  },
  {
    "text": "compaction and uh right now we haven't had to tune any of uh additional",
    "start": "2750640",
    "end": "2758000"
  },
  {
    "text": "compaction options there are a ton of knobs that you can tune around compaction uh we just haven't had the",
    "start": "2758000",
    "end": "2764680"
  },
  {
    "text": "need yet well as a follow-up question how many nodes do you add at a time when",
    "start": "2764680",
    "end": "2770800"
  },
  {
    "start": "2766000",
    "end": "2823000"
  },
  {
    "text": "scaling out your cluster do you stagger the node additions or do it all at once",
    "start": "2770800",
    "end": "2775960"
  },
  {
    "text": "how long does it take yeah so uh it this is it kind of",
    "start": "2775960",
    "end": "2783880"
  },
  {
    "text": "depends uh so it depends how much capacity I'm adding uh if if I need to",
    "start": "2783880",
    "end": "2789920"
  },
  {
    "text": "add a lot of capacity uh we will um",
    "start": "2789920",
    "end": "2795000"
  },
  {
    "text": "serially bootstrap nodes into the cluster um but once a node starts to",
    "start": "2795000",
    "end": "2801520"
  },
  {
    "text": "join after two minutes we'll bootstrap the next one so the way it works is that",
    "start": "2801520",
    "end": "2807040"
  },
  {
    "text": "we'll bootstrap a a node it'll go into joining once it's in joining for two",
    "start": "2807040",
    "end": "2813079"
  },
  {
    "text": "minutes we'll start the next one so uh we I I think the the most that I've done",
    "start": "2813079",
    "end": "2818680"
  },
  {
    "text": "at a time is uh uh either five or six thank you Joey one more question for",
    "start": "2818680",
    "end": "2825800"
  },
  {
    "start": "2823000",
    "end": "2873000"
  },
  {
    "text": "you and then I would like to switch gears and ask a few questions to miles from AWS is your cluster size driven by",
    "start": "2825800",
    "end": "2832880"
  },
  {
    "text": "read write load or by storage requirements yeah another great question",
    "start": "2832880",
    "end": "2839559"
  },
  {
    "text": "so uh primarily it's driven by right load um but we actually have a little",
    "start": "2839559",
    "end": "2846160"
  },
  {
    "text": "bit of a mixed workload since we are doing some read heavy uh operations and",
    "start": "2846160",
    "end": "2852280"
  },
  {
    "text": "uh so primarily by right load and then secondarily by the the read load um",
    "start": "2852280",
    "end": "2860520"
  },
  {
    "text": "storage requirements uh not so much uh because uh By the time we've added",
    "start": "2860520",
    "end": "2866400"
  },
  {
    "text": "enough capacity to handle our right load uh the the storage is distributed",
    "start": "2866400",
    "end": "2872480"
  },
  {
    "text": "enough thank you Joey uh miles does Cassandra work on aws's hi",
    "start": "2872800",
    "end": "2880200"
  },
  {
    "start": "2873000",
    "end": "3050000"
  },
  {
    "text": "1.4x large instances with local SSD what about cr18 x",
    "start": "2880200",
    "end": "2887200"
  },
  {
    "text": "large sure Maya so the the implementation that the folks",
    "start": "2887200",
    "end": "2893000"
  },
  {
    "text": "from stack driver have designed is is outstanding and it it's built on uh the",
    "start": "2893000",
    "end": "2898359"
  },
  {
    "text": "concept of using several different nodes to be able to distribute the cassendra workload and M1 extr large instances are",
    "start": "2898359",
    "end": "2906000"
  },
  {
    "text": "available in every AWS region so you could even duplicate this system nine",
    "start": "2906000",
    "end": "2912119"
  },
  {
    "text": "different times on four different continents in in the United States and EU a couple of our facilities we have",
    "start": "2912119",
    "end": "2919119"
  },
  {
    "text": "systems that are even higher performance so we heard from customers as they went from 3 to 6 to 9 to 90 to 180 to",
    "start": "2919119",
    "end": "2931079"
  },
  {
    "text": "360 M1 extra large instances running their Cassandra Fleet that they needed",
    "start": "2931079",
    "end": "2936280"
  },
  {
    "text": "higher performance density and uh in particular for some workloads where",
    "start": "2936280",
    "end": "2942359"
  },
  {
    "text": "storage density was more important than getting more compute power or more",
    "start": "2942359",
    "end": "2948160"
  },
  {
    "text": "memory so we've built instances that use solid state discs rather than standard",
    "start": "2948160",
    "end": "2954200"
  },
  {
    "text": "rotational media like are in the M1 extra- large instances those solid state",
    "start": "2954200",
    "end": "2959520"
  },
  {
    "text": "drives uh give you two terabytes of local storage um add up to 85,000",
    "start": "2959520",
    "end": "2966880"
  },
  {
    "text": "to read operations per second on that storage so um for Cassandra workload um",
    "start": "2966880",
    "end": "2973799"
  },
  {
    "text": "you know particularly ones that are storage performance sensitive those instances are much bigger much higher",
    "start": "2973799",
    "end": "2979920"
  },
  {
    "text": "density uh and can be more efficient at delivering the same workload um if",
    "start": "2979920",
    "end": "2986200"
  },
  {
    "text": "you're if you're at a scale where that pig makes sense we also have some customers that have say a slightly",
    "start": "2986200",
    "end": "2993520"
  },
  {
    "text": "somewhat smaller amount of data which is to say bigger than makees sense for a really huge Fleet of M1 extra larges but",
    "start": "2993520",
    "end": "3000280"
  },
  {
    "text": "they have really dense query workloads so they're always wanting to keep that",
    "start": "3000280",
    "end": "3006839"
  },
  {
    "text": "active data not just available in stfe solid state storage but even wanting to",
    "start": "3006839",
    "end": "3012280"
  },
  {
    "text": "keep it in memory so those the 15 gigabytes of RAM available in the M1",
    "start": "3012280",
    "end": "3017319"
  },
  {
    "text": "extra large instances is awful nice but those cr1 8xl instances have",
    "start": "3017319",
    "end": "3025119"
  },
  {
    "text": "244 gigs of r so a much much bigger footprint to store",
    "start": "3025119",
    "end": "3032240"
  },
  {
    "text": "terabyte class data sets in Cassandra in memory which allows radically faster",
    "start": "3032240",
    "end": "3038599"
  },
  {
    "text": "access to query performance higher numbers of concurrent queries and",
    "start": "3038599",
    "end": "3043720"
  },
  {
    "text": "generally uh it's a higher density solution so lots of lots of different PS",
    "start": "3043720",
    "end": "3050000"
  },
  {
    "start": "3050000",
    "end": "3576000"
  },
  {
    "text": "there thank you miles we have very engaged audience today we might not be able to cover all questions but we will",
    "start": "3050000",
    "end": "3056480"
  },
  {
    "text": "do our best and uh for those questions that we cannot provide answers today you",
    "start": "3056480",
    "end": "3061960"
  },
  {
    "text": "will receive answers uh during the week directly from stack driver uh Joey my",
    "start": "3061960",
    "end": "3068200"
  },
  {
    "text": "next question is to you how do I make sure my distributed cassander cluster is running",
    "start": "3068200",
    "end": "3075280"
  },
  {
    "text": "properly okay uh great question uh so uh that's actually one thing that I",
    "start": "3075720",
    "end": "3082119"
  },
  {
    "text": "didn't get into is uh basically this is how do you monitor your custom monitor cluster um",
    "start": "3082119",
    "end": "3089079"
  },
  {
    "text": "so uh one of the one of the problems with uh monitoring the K cluster is that you",
    "start": "3089079",
    "end": "3097559"
  },
  {
    "text": "have a constant uh you you may have a constant uh uh stream of changing nodes",
    "start": "3097559",
    "end": "3104760"
  },
  {
    "text": "right so uh nodes are added and removed as uh as you need to so um you need a",
    "start": "3104760",
    "end": "3112160"
  },
  {
    "text": "way to make sure that um when nodes are out they're kind of automatically added",
    "start": "3112160",
    "end": "3118680"
  },
  {
    "text": "to your monitoring um that's that's one thing that that you need to solve um uh",
    "start": "3118680",
    "end": "3125240"
  },
  {
    "text": "specifically on um metrics that we look at um we use a a tool here at stock",
    "start": "3125240",
    "end": "3132720"
  },
  {
    "text": "driver called uh jmx trans uh that's an open- Source tool and it um it pre uh it",
    "start": "3132720",
    "end": "3140599"
  },
  {
    "text": "collects jmx uh metrics and writes them to optionally uh graph site uh We've",
    "start": "3140599",
    "end": "3147520"
  },
  {
    "text": "written the back end here for stack driver so you can write them to stack driver um and I believe it supports um",
    "start": "3147520",
    "end": "3155040"
  },
  {
    "text": "ganglia and RD tools well a couple of their open source tools um so jmx trans",
    "start": "3155040",
    "end": "3162880"
  },
  {
    "text": "um will ship us uh data about internal",
    "start": "3162880",
    "end": "3168040"
  },
  {
    "text": "uh um uh metrics uh about how Cassandra is",
    "start": "3168040",
    "end": "3173359"
  },
  {
    "text": "performing so um some key metrics I'll just kind of list off um one is storage",
    "start": "3173359",
    "end": "3179839"
  },
  {
    "text": "load uh this is how much data is on each one of your nodes uh this tells you uh",
    "start": "3179839",
    "end": "3185960"
  },
  {
    "text": "you know how dense each one of your nodes is uh so if you have let's say 600",
    "start": "3185960",
    "end": "3191400"
  },
  {
    "text": "gigs of node uh data on each node you know that starts to be a lot of data",
    "start": "3191400",
    "end": "3197960"
  },
  {
    "text": "um uh another metric that we monitor is pending compactions uh uh the higher",
    "start": "3197960",
    "end": "3205680"
  },
  {
    "text": "this number is the further behind your Cassandra cluster is in um compacting",
    "start": "3205680",
    "end": "3211760"
  },
  {
    "text": "new data so I briefly touched on this earlier but uh when data is written to",
    "start": "3211760",
    "end": "3217280"
  },
  {
    "text": "the commit log first and then when enough data come in it's compacted uh",
    "start": "3217280",
    "end": "3223040"
  },
  {
    "text": "and put into OS staes and uh uh so this is the number of jobs that are waiting",
    "start": "3223040",
    "end": "3229680"
  },
  {
    "text": "for compaction um and then we actually uh",
    "start": "3229680",
    "end": "3235440"
  },
  {
    "text": "using jmx trans still uh we'll look at um we'll keep an eye on thread count uh",
    "start": "3235440",
    "end": "3242640"
  },
  {
    "text": "and open file descriptors and uh what you want to look for there is any of",
    "start": "3242640",
    "end": "3247720"
  },
  {
    "text": "these metrics that kind of are on a runaway so um obviously there's a ceiling for how many threads or open",
    "start": "3247720",
    "end": "3253720"
  },
  {
    "text": "file descriptors that you can have and uh you want to monitor based on what your boundaries",
    "start": "3253720",
    "end": "3260880"
  },
  {
    "text": "are and then just yep I thought you were done I'm sorry no that's all right just",
    "start": "3260920",
    "end": "3267760"
  },
  {
    "text": "one other uh metric that we're also uh keeping an eye on uh and this is",
    "start": "3267760",
    "end": "3273200"
  },
  {
    "text": "specific to the jvm is just how much uh garbage collection's going on and uh what we found is uh some nodes will uh",
    "start": "3273200",
    "end": "3280720"
  },
  {
    "text": "get into a weird State and have higher garbage collection uh than others and we",
    "start": "3280720",
    "end": "3285920"
  },
  {
    "text": "know that uh you know those are operating outside the the normal bounds",
    "start": "3285920",
    "end": "3291640"
  },
  {
    "text": "uh and and we'll go ahead and replace those",
    "start": "3291640",
    "end": "3296240"
  },
  {
    "text": "thank you a few more questions to you Joey and how do you handle the deployment of any DB changes in",
    "start": "3297000",
    "end": "3305839"
  },
  {
    "text": "production yeah so um I I think you're specifically talking about schema",
    "start": "3306640",
    "end": "3312839"
  },
  {
    "text": "changes uh so uh so Cassandra supports",
    "start": "3312839",
    "end": "3318559"
  },
  {
    "text": "online schema changes um so we we uh our",
    "start": "3318559",
    "end": "3324160"
  },
  {
    "text": "process is that uh we we'll test the schema changes in a staging environment",
    "start": "3324160",
    "end": "3329559"
  },
  {
    "text": "uh make sure that all the readers and writers are compatible and then uh we'll push this out to production so usually a",
    "start": "3329559",
    "end": "3336599"
  },
  {
    "text": "schema change is pretty rare for us and uh it it it tends to be a a manual",
    "start": "3336599",
    "end": "3344000"
  },
  {
    "text": "operation thanks and uh do you use cashing for read",
    "start": "3345920",
    "end": "3351680"
  },
  {
    "text": "operations uh today we don't",
    "start": "3351680",
    "end": "3356440"
  },
  {
    "text": "uh yeah today we don't let's take one more question and",
    "start": "3358000",
    "end": "3363480"
  },
  {
    "text": "I'm going to point this to Miles why are you using ephemeral disc",
    "start": "3363480",
    "end": "3370720"
  },
  {
    "text": "but not EBS sure so we have huge numbers of",
    "start": "3370720",
    "end": "3377880"
  },
  {
    "text": "customers frankly uh that are using Cassandra with EDS it's a popular",
    "start": "3377880",
    "end": "3383720"
  },
  {
    "text": "implementation as well um they are different sizes of ecq instances that",
    "start": "3383720",
    "end": "3389680"
  },
  {
    "text": "offer different amounts uh different ratios of compute to memory to network",
    "start": "3389680",
    "end": "3394720"
  },
  {
    "text": "performance to storage the advantage for Cassandra for access to local disc is",
    "start": "3394720",
    "end": "3402039"
  },
  {
    "text": "that it is very much a storage bound workload in most cases on AWS when you",
    "start": "3402039",
    "end": "3407960"
  },
  {
    "text": "communicate with EBS you do that over the network connection and so uh we have",
    "start": "3407960",
    "end": "3414119"
  },
  {
    "text": "E2 instances you know say like in M1 small or an M1 medium or uh even you",
    "start": "3414119",
    "end": "3420559"
  },
  {
    "text": "know C1 mediums these smaller size instances those share a network connection between the network that gets",
    "start": "3420559",
    "end": "3426640"
  },
  {
    "text": "used for internet or machino machine Communications with the network that communicates to ebf so there's there's a",
    "start": "3426640",
    "end": "3434000"
  },
  {
    "text": "limited amount of bandwidth between storage and the instance that contends",
    "start": "3434000",
    "end": "3439680"
  },
  {
    "text": "with the band width that you're using to replicate data between nodes between E2",
    "start": "3439680",
    "end": "3444839"
  },
  {
    "text": "instances in the contens complet so by using local disc you reduce the amount",
    "start": "3444839",
    "end": "3450280"
  },
  {
    "text": "of network traffic used um because you're only Now using network traffic to",
    "start": "3450280",
    "end": "3455359"
  },
  {
    "text": "manage replication between the cluster nodes rather than also using it to communicate with EDS now EDS has added a",
    "start": "3455359",
    "end": "3462480"
  },
  {
    "text": "feature together with E2 called EVS optimize that adds uh for some instances",
    "start": "3462480",
    "end": "3468079"
  },
  {
    "text": "500 megabits per second for the larger instances like the M1 extra large a gigabit per second of network through",
    "start": "3468079",
    "end": "3474799"
  },
  {
    "text": "put to EBS that's dedic isolated from the standard network connectivity so we",
    "start": "3474799",
    "end": "3480359"
  },
  {
    "text": "would strongly recommend if you're going to Lear Cassandra and use EVS storage which might make a lot of sense if you",
    "start": "3480359",
    "end": "3485799"
  },
  {
    "text": "have really really big data sets that you operate a relatively small number of",
    "start": "3485799",
    "end": "3491240"
  },
  {
    "text": "queries for so you could have instances with 20 30 terabytes of eps storage",
    "start": "3491240",
    "end": "3496839"
  },
  {
    "text": "attached connected over networks on these smaller instance sizes those kinds",
    "start": "3496839",
    "end": "3502440"
  },
  {
    "text": "of designs uh and those kinds of workload patterns would take big advantage of the lower instance cost in",
    "start": "3502440",
    "end": "3508720"
  },
  {
    "text": "compar to a slightly elevated storage cost associated with attaching EDS so it",
    "start": "3508720",
    "end": "3514760"
  },
  {
    "text": "really has to do with lining up with your specific use case and ensuring that",
    "start": "3514760",
    "end": "3520160"
  },
  {
    "text": "that you have the right uh ratio of storage and compute performance uh to the network resource that you",
    "start": "3520160",
    "end": "3527599"
  },
  {
    "text": "have thank you miles we'll have to end our Q&A right now but uh all the",
    "start": "3527599",
    "end": "3532880"
  },
  {
    "text": "questions will be answered via email or other form of communication through stack driver um and I'd like to thank",
    "start": "3532880",
    "end": "3541039"
  },
  {
    "text": "everybody for attending this webinar and our speakers thank you for demonstrating the best practices for running Apache",
    "start": "3541039",
    "end": "3548359"
  },
  {
    "text": "Cassandra on AWS and our attendees uh before you log off we appreciate uh your",
    "start": "3548359",
    "end": "3555160"
  },
  {
    "text": "answers to a short survey it's very short but it will help us improve our webinar Series so just click the link",
    "start": "3555160",
    "end": "3562599"
  },
  {
    "text": "that will appear on your browser and it will take you right to the survey",
    "start": "3562599",
    "end": "3568599"
  },
  {
    "text": "site once again thank you very much for attending and this concludes today's Amazon web services partner webcast have",
    "start": "3568599",
    "end": "3574760"
  },
  {
    "text": "a great day",
    "start": "3574760",
    "end": "3578039"
  }
]