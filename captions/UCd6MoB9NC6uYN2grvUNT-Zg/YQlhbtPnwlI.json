[
  {
    "start": "0",
    "end": "15000"
  },
  {
    "text": "hello everyone my name is Nixon I am a",
    "start": "0",
    "end": "2909"
  },
  {
    "text": "Solutions Architect a database I'm based",
    "start": "2909",
    "end": "5250"
  },
  {
    "text": "in the beautiful city in Melbourne",
    "start": "5250",
    "end": "6420"
  },
  {
    "text": "Australia firstly thank you for joining",
    "start": "6420",
    "end": "8910"
  },
  {
    "text": "me today and we will have a chat through",
    "start": "8910",
    "end": "10889"
  },
  {
    "text": "getting started with surveillance",
    "start": "10889",
    "end": "12240"
  },
  {
    "text": "computing using analyst lambda so in",
    "start": "12240",
    "end": "14910"
  },
  {
    "text": "today's session we will start with",
    "start": "14910",
    "end": "16379"
  },
  {
    "start": "15000",
    "end": "29000"
  },
  {
    "text": "talking about some civiles concepts then",
    "start": "16379",
    "end": "18750"
  },
  {
    "text": "we focus on the Adrienne slam the",
    "start": "18750",
    "end": "20010"
  },
  {
    "text": "service itself I hope you will gain some",
    "start": "20010",
    "end": "22439"
  },
  {
    "text": "knowledge around different database",
    "start": "22439",
    "end": "23880"
  },
  {
    "text": "services involved and the tooling you",
    "start": "23880",
    "end": "26460"
  },
  {
    "text": "will require to draft your service",
    "start": "26460",
    "end": "28080"
  },
  {
    "text": "application",
    "start": "28080",
    "end": "28800"
  },
  {
    "text": "so there's firstly let's have a look at",
    "start": "28800",
    "end": "31800"
  },
  {
    "start": "29000",
    "end": "73000"
  },
  {
    "text": "the simplest concept so firstly there is",
    "start": "31800",
    "end": "33960"
  },
  {
    "text": "no server to provision or manage as it",
    "start": "33960",
    "end": "36090"
  },
  {
    "text": "sounds like so your hands are off from",
    "start": "36090",
    "end": "38219"
  },
  {
    "text": "the OS patching package upgrading etc",
    "start": "38219",
    "end": "40680"
  },
  {
    "text": "the simplest application scale with",
    "start": "40680",
    "end": "42960"
  },
  {
    "text": "usage as user requests coming in and",
    "start": "42960",
    "end": "45420"
  },
  {
    "text": "amount of traffic grows with more data",
    "start": "45420",
    "end": "47579"
  },
  {
    "text": "entering your applications the core you",
    "start": "47579",
    "end": "50100"
  },
  {
    "text": "need to scale shifts from servers to",
    "start": "50100",
    "end": "52379"
  },
  {
    "text": "functions and one of the highlights of",
    "start": "52379",
    "end": "54809"
  },
  {
    "text": "service approach is that you do not pay",
    "start": "54809",
    "end": "56969"
  },
  {
    "text": "for the idle time applications running",
    "start": "56969",
    "end": "59370"
  },
  {
    "text": "on top of these services we have",
    "start": "59370",
    "end": "61170"
  },
  {
    "text": "building high availability and disaster",
    "start": "61170",
    "end": "63210"
  },
  {
    "text": "recovery all the server list services we",
    "start": "63210",
    "end": "65880"
  },
  {
    "text": "speak today are sitting in a regional",
    "start": "65880",
    "end": "67500"
  },
  {
    "text": "level and they automatically expand",
    "start": "67500",
    "end": "69659"
  },
  {
    "text": "across multiple availability zones the",
    "start": "69659",
    "end": "73229"
  },
  {
    "text": "core component for most service",
    "start": "73229",
    "end": "75020"
  },
  {
    "text": "workloads",
    "start": "75020",
    "end": "76170"
  },
  {
    "text": "is a functional service and it's a SS",
    "start": "76170",
    "end": "78600"
  },
  {
    "text": "lambda so to invoke a lambda function to",
    "start": "78600",
    "end": "81240"
  },
  {
    "text": "run there are different sources of",
    "start": "81240",
    "end": "82950"
  },
  {
    "text": "events such as the state change to a",
    "start": "82950",
    "end": "85229"
  },
  {
    "text": "data storage a request to send through",
    "start": "85229",
    "end": "87509"
  },
  {
    "text": "to the end point of a service or change",
    "start": "87509",
    "end": "90090"
  },
  {
    "text": "to a resource within your address",
    "start": "90090",
    "end": "91530"
  },
  {
    "text": "environment and once the function is as",
    "start": "91530",
    "end": "93930"
  },
  {
    "text": "running it can do a lot of things such",
    "start": "93930",
    "end": "96000"
  },
  {
    "text": "as consuming other services processing",
    "start": "96000",
    "end": "99240"
  },
  {
    "text": "business logic just like you run",
    "start": "99240",
    "end": "100890"
  },
  {
    "text": "applications on top of a server or from",
    "start": "100890",
    "end": "103020"
  },
  {
    "text": "inside of a container the entry point",
    "start": "103020",
    "end": "106470"
  },
  {
    "start": "105000",
    "end": "133000"
  },
  {
    "text": "for a lambda function is called handler",
    "start": "106470",
    "end": "108450"
  },
  {
    "text": "so this is similar to the concept as",
    "start": "108450",
    "end": "110579"
  },
  {
    "text": "main function from C program so the",
    "start": "110579",
    "end": "113130"
  },
  {
    "text": "major parameters passed to the handler",
    "start": "113130",
    "end": "116670"
  },
  {
    "text": "function include event object which",
    "start": "116670",
    "end": "119009"
  },
  {
    "text": "contains information such as the source",
    "start": "119009",
    "end": "121049"
  },
  {
    "text": "of the event plus the payload itself and",
    "start": "121049",
    "end": "123360"
  },
  {
    "text": "a context object which contains the",
    "start": "123360",
    "end": "125430"
  },
  {
    "text": "information of runtime of the function",
    "start": "125430",
    "end": "127560"
  },
  {
    "text": "search has the identifier of the request",
    "start": "127560",
    "end": "129479"
  },
  {
    "text": "all the CloudWatch lock groups used by",
    "start": "129479",
    "end": "131970"
  },
  {
    "text": "this lambda",
    "start": "131970",
    "end": "133470"
  },
  {
    "start": "133000",
    "end": "162000"
  },
  {
    "text": "the pricing model for lambda is purely",
    "start": "133470",
    "end": "136020"
  },
  {
    "text": "pay-as-you-go the cost is based on top",
    "start": "136020",
    "end": "138420"
  },
  {
    "text": "of per 100 milliseconds increments of",
    "start": "138420",
    "end": "141180"
  },
  {
    "text": "duration of a running function with the",
    "start": "141180",
    "end": "143370"
  },
  {
    "text": "amount of memory allocated to the",
    "start": "143370",
    "end": "145200"
  },
  {
    "text": "function the interest free tier covers",
    "start": "145200",
    "end": "147660"
  },
  {
    "text": "one mini request and up to 3.2 3.2",
    "start": "147660",
    "end": "151350"
  },
  {
    "text": "million seconds of compute for all the",
    "start": "151350",
    "end": "154080"
  },
  {
    "text": "customers and you can you can have this",
    "start": "154080",
    "end": "156720"
  },
  {
    "text": "free tier even after 12 months and again",
    "start": "156720",
    "end": "159300"
  },
  {
    "text": "we never need to pay for the idle time",
    "start": "159300",
    "end": "162140"
  },
  {
    "start": "162000",
    "end": "221000"
  },
  {
    "text": "the code for a lambda function could be",
    "start": "162140",
    "end": "164730"
  },
  {
    "text": "written in note Python Java C shop or go",
    "start": "164730",
    "end": "168900"
  },
  {
    "text": "with all dependencies be included in the",
    "start": "168900",
    "end": "171840"
  },
  {
    "text": "artifact the resource model is very",
    "start": "171840",
    "end": "174120"
  },
  {
    "text": "straightforward",
    "start": "174120",
    "end": "174750"
  },
  {
    "text": "you only need to allocate appropriate",
    "start": "174750",
    "end": "177120"
  },
  {
    "text": "amount of memory to your function with",
    "start": "177120",
    "end": "179070"
  },
  {
    "text": "values from 128 megabytes to 3 Giga",
    "start": "179070",
    "end": "182489"
  },
  {
    "text": "megabytes so it starts 3 gigabytes keep",
    "start": "182489",
    "end": "185489"
  },
  {
    "text": "in mind when tuning lambda memory",
    "start": "185489",
    "end": "187260"
  },
  {
    "text": "allocation more memory means more CPU",
    "start": "187260",
    "end": "189750"
  },
  {
    "text": "power and usually comes with less",
    "start": "189750",
    "end": "191850"
  },
  {
    "text": "execution time so more memory sometimes",
    "start": "191850",
    "end": "194070"
  },
  {
    "text": "it doesn't mean that higher cost besides",
    "start": "194070",
    "end": "196230"
  },
  {
    "text": "the execution time being shortened",
    "start": "196230",
    "end": "197900"
  },
  {
    "text": "lambda could be either synchronously or",
    "start": "197900",
    "end": "200519"
  },
  {
    "text": "asynchronously invoked depending on the",
    "start": "200519",
    "end": "203250"
  },
  {
    "text": "source of the event we will describe",
    "start": "203250",
    "end": "205140"
  },
  {
    "text": "this part later in this session and",
    "start": "205140",
    "end": "206959"
  },
  {
    "text": "security is always the highest priority",
    "start": "206959",
    "end": "209250"
  },
  {
    "text": "in AWS you can securely grant your",
    "start": "209250",
    "end": "212070"
  },
  {
    "text": "function accessibility to resources from",
    "start": "212070",
    "end": "214470"
  },
  {
    "text": "AWS services or within your V PC let's",
    "start": "214470",
    "end": "217440"
  },
  {
    "text": "have a look at how this access control",
    "start": "217440",
    "end": "219269"
  },
  {
    "text": "is operated so with lambda permissions",
    "start": "219269",
    "end": "222540"
  },
  {
    "text": "model we're talking about two types of",
    "start": "222540",
    "end": "224400"
  },
  {
    "text": "policies here so execution policies so",
    "start": "224400",
    "end": "227010"
  },
  {
    "text": "this part it allows you to allows your",
    "start": "227010",
    "end": "229380"
  },
  {
    "text": "function to assume I am role with the",
    "start": "229380",
    "end": "232200"
  },
  {
    "text": "specific policy so the policy defines",
    "start": "232200",
    "end": "234780"
  },
  {
    "text": "which downstream service your function",
    "start": "234780",
    "end": "237180"
  },
  {
    "text": "could consume or any resource your",
    "start": "237180",
    "end": "239280"
  },
  {
    "text": "function could access from anywhere also",
    "start": "239280",
    "end": "242130"
  },
  {
    "text": "there is a function policy so this part",
    "start": "242130",
    "end": "244830"
  },
  {
    "text": "it defines which source of the event",
    "start": "244830",
    "end": "246780"
  },
  {
    "text": "could invoke this lambda function for",
    "start": "246780",
    "end": "249090"
  },
  {
    "text": "example you could define that only the",
    "start": "249090",
    "end": "251250"
  },
  {
    "text": "request from API gateway could invoke",
    "start": "251250",
    "end": "253530"
  },
  {
    "text": "your lambda function and nothing else",
    "start": "253530",
    "end": "255329"
  },
  {
    "text": "and then we would draft to the code for",
    "start": "255329",
    "end": "258450"
  },
  {
    "text": "the function you could leverage text",
    "start": "258450",
    "end": "261120"
  },
  {
    "text": "editor or your preferred IDE such as",
    "start": "261120",
    "end": "263099"
  },
  {
    "text": "like a clip eclipse or Visual Studio",
    "start": "263099",
    "end": "264930"
  },
  {
    "text": "with the plugins",
    "start": "264930",
    "end": "266400"
  },
  {
    "text": "can help you to deploy your functions or",
    "start": "266400",
    "end": "268380"
  },
  {
    "text": "you can use cloud 9 which is a web-based",
    "start": "268380",
    "end": "270570"
  },
  {
    "text": "ide from AWS i will show you some toast",
    "start": "270570",
    "end": "273630"
  },
  {
    "text": "later in this session to help you",
    "start": "273630",
    "end": "275550"
  },
  {
    "text": "quickly start a skeleton for your",
    "start": "275550",
    "end": "278160"
  },
  {
    "text": "service application there are also tools",
    "start": "278160",
    "end": "280860"
  },
  {
    "text": "from a SS platform for monitoring and",
    "start": "280860",
    "end": "283199"
  },
  {
    "text": "logging how your function works such as",
    "start": "283199",
    "end": "286979"
  },
  {
    "text": "Cutwater lock lock groups SS x-ray etc",
    "start": "286979",
    "end": "290729"
  },
  {
    "text": "with lambda we include some libraries",
    "start": "290729",
    "end": "293850"
  },
  {
    "text": "within the lab within the lambda service",
    "start": "293850",
    "end": "296280"
  },
  {
    "text": "itself such as the aid of an assessed e",
    "start": "296280",
    "end": "298020"
  },
  {
    "text": "case but sometimes you might see maybe",
    "start": "298020",
    "end": "300900"
  },
  {
    "text": "there's a version mismatch so for that",
    "start": "300900",
    "end": "302970"
  },
  {
    "text": "reason we recommend self containing the",
    "start": "302970",
    "end": "305070"
  },
  {
    "text": "dependencies in your package as much as",
    "start": "305070",
    "end": "307320"
  },
  {
    "text": "possible 11 the function and runtime",
    "start": "307320",
    "end": "310080"
  },
  {
    "text": "should be stateless even if you have",
    "start": "310080",
    "end": "312510"
  },
  {
    "text": "some temporary space you should use",
    "start": "312510",
    "end": "314660"
  },
  {
    "text": "external storage facility to store",
    "start": "314660",
    "end": "316889"
  },
  {
    "text": "states such as data for user sessions",
    "start": "316889",
    "end": "319410"
  },
  {
    "text": "etc a lambda function could be invoked",
    "start": "319410",
    "end": "323430"
  },
  {
    "start": "321000",
    "end": "364000"
  },
  {
    "text": "by a few different ways so if a lambda",
    "start": "323430",
    "end": "325680"
  },
  {
    "text": "function is backing up or api's from api",
    "start": "325680",
    "end": "328199"
  },
  {
    "text": "gateway the invocation will be",
    "start": "328199",
    "end": "329880"
  },
  {
    "text": "synchronous so the function must return",
    "start": "329880",
    "end": "332699"
  },
  {
    "text": "result as response send back to the",
    "start": "332699",
    "end": "335099"
  },
  {
    "text": "caller and for those functions triggered",
    "start": "335099",
    "end": "337260"
  },
  {
    "text": "by events such as s3 bucket operations",
    "start": "337260",
    "end": "339690"
  },
  {
    "text": "or SNS the invocation will be",
    "start": "339690",
    "end": "342389"
  },
  {
    "text": "asynchronous so the in this situation",
    "start": "342389",
    "end": "345479"
  },
  {
    "text": "the function does not have to return the",
    "start": "345479",
    "end": "347190"
  },
  {
    "text": "result back to the source of the event",
    "start": "347190",
    "end": "349020"
  },
  {
    "text": "so for the data stream services such as",
    "start": "349020",
    "end": "351599"
  },
  {
    "text": "dynamodb streams or Kinesis lambdas",
    "start": "351599",
    "end": "354300"
  },
  {
    "text": "service will schedule an invocation to",
    "start": "354300",
    "end": "356699"
  },
  {
    "text": "regularly pull the source of the data",
    "start": "356699",
    "end": "358560"
  },
  {
    "text": "such as a a partition of a dynamodb",
    "start": "358560",
    "end": "360960"
  },
  {
    "text": "table or shard of a Canisius data stream",
    "start": "360960",
    "end": "363590"
  },
  {
    "text": "around mid this year will launch the",
    "start": "363590",
    "end": "366180"
  },
  {
    "start": "364000",
    "end": "384000"
  },
  {
    "text": "feature for lambda to be triggered by",
    "start": "366180",
    "end": "368159"
  },
  {
    "text": "SQS so when the message arrives at SQS",
    "start": "368159",
    "end": "371490"
  },
  {
    "text": "queue a lambda function will be invoked",
    "start": "371490",
    "end": "373560"
  },
  {
    "text": "and then polar queue processes the",
    "start": "373560",
    "end": "375990"
  },
  {
    "text": "message then deletes the message from",
    "start": "375990",
    "end": "377880"
  },
  {
    "text": "the queue so this feature allows lambda",
    "start": "377880",
    "end": "380220"
  },
  {
    "text": "to be working with the queuing service",
    "start": "380220",
    "end": "382289"
  },
  {
    "text": "provided by analyst platform and there",
    "start": "382289",
    "end": "385590"
  },
  {
    "start": "384000",
    "end": "443000"
  },
  {
    "text": "are all different use cases our",
    "start": "385590",
    "end": "387120"
  },
  {
    "text": "customers are making use of lambda",
    "start": "387120",
    "end": "388860"
  },
  {
    "text": "functions at the moment from web",
    "start": "388860",
    "end": "391110"
  },
  {
    "text": "applications to processing IOT workloads",
    "start": "391110",
    "end": "394260"
  },
  {
    "text": "from MapReduce functions to like a",
    "start": "394260",
    "end": "396840"
  },
  {
    "text": "back-end of a chat board so for example",
    "start": "396840",
    "end": "399240"
  },
  {
    "text": "if you have a",
    "start": "399240",
    "end": "400139"
  },
  {
    "text": "eko device at home you must be familiar",
    "start": "400139",
    "end": "402090"
  },
  {
    "text": "with the Alexa skills you can actually",
    "start": "402090",
    "end": "404490"
  },
  {
    "text": "create a lambda function as the backend",
    "start": "404490",
    "end": "406439"
  },
  {
    "text": "for your Alexa skill and then you and",
    "start": "406439",
    "end": "409319"
  },
  {
    "text": "then you can use that function to",
    "start": "409319",
    "end": "410669"
  },
  {
    "text": "interact your data besides your verbal",
    "start": "410669",
    "end": "413009"
  },
  {
    "text": "interaction with your echo device and",
    "start": "413009",
    "end": "415080"
  },
  {
    "text": "one important area is the ideal",
    "start": "415080",
    "end": "417900"
  },
  {
    "text": "automation so customers can make use of",
    "start": "417900",
    "end": "420180"
  },
  {
    "text": "lambda functions to perform tasks such",
    "start": "420180",
    "end": "422639"
  },
  {
    "text": "as auto response to an incident",
    "start": "422639",
    "end": "424729"
  },
  {
    "text": "infrastructure management etc a great",
    "start": "424729",
    "end": "427800"
  },
  {
    "text": "example here is to use lambda functions",
    "start": "427800",
    "end": "430169"
  },
  {
    "text": "scheduled by cloud water scheduled event",
    "start": "430169",
    "end": "432870"
  },
  {
    "text": "to start or stop non production",
    "start": "432870",
    "end": "435539"
  },
  {
    "text": "environment in or outside of business",
    "start": "435539",
    "end": "437819"
  },
  {
    "text": "hours which can bring great cost savings",
    "start": "437819",
    "end": "440189"
  },
  {
    "text": "to the organization so since we have",
    "start": "440189",
    "end": "443849"
  },
  {
    "start": "443000",
    "end": "472000"
  },
  {
    "text": "mentioned web location which is one of",
    "start": "443849",
    "end": "445349"
  },
  {
    "text": "the commonly used cases here I would",
    "start": "445349",
    "end": "447599"
  },
  {
    "text": "like to give Amazon API gateway a quick",
    "start": "447599",
    "end": "449879"
  },
  {
    "text": "introduction API gateway is a managed",
    "start": "449879",
    "end": "452370"
  },
  {
    "text": "service as a restful api proxy in front",
    "start": "452370",
    "end": "455430"
  },
  {
    "text": "of your back-end services api gateway",
    "start": "455430",
    "end": "458039"
  },
  {
    "text": "supports web and has DDoS protection and",
    "start": "458039",
    "end": "461009"
  },
  {
    "text": "can throttle traffic to protect the",
    "start": "461009",
    "end": "463469"
  },
  {
    "text": "resource at your back hand it also",
    "start": "463469",
    "end": "465539"
  },
  {
    "text": "provides different options to authorize",
    "start": "465539",
    "end": "467879"
  },
  {
    "text": "different types of users from access",
    "start": "467879",
    "end": "470310"
  },
  {
    "text": "control perspective in a real-world",
    "start": "470310",
    "end": "472919"
  },
  {
    "start": "472000",
    "end": "509000"
  },
  {
    "text": "scenario api gateway behaves as the",
    "start": "472919",
    "end": "475439"
  },
  {
    "text": "proxy for a lot of traffic coming",
    "start": "475439",
    "end": "477689"
  },
  {
    "text": "through to your back-end your back-end",
    "start": "477689",
    "end": "479969"
  },
  {
    "text": "could be lambda functions it could be",
    "start": "479969",
    "end": "482069"
  },
  {
    "text": "applications running on top of the ec2",
    "start": "482069",
    "end": "483870"
  },
  {
    "text": "instance it could be some resources from",
    "start": "483870",
    "end": "486899"
  },
  {
    "text": "your vp c or other edible services such",
    "start": "486899",
    "end": "489659"
  },
  {
    "text": "as s3 or Kinesis so to implement the",
    "start": "489659",
    "end": "492960"
  },
  {
    "text": "silliest approach as a completed",
    "start": "492960",
    "end": "494520"
  },
  {
    "text": "workload in the cloud we recommend you",
    "start": "494520",
    "end": "496800"
  },
  {
    "text": "to use cloud formation to achieve what",
    "start": "496800",
    "end": "499620"
  },
  {
    "text": "we call the infrastructures code so for",
    "start": "499620",
    "end": "502110"
  },
  {
    "text": "civilized applications we have a special",
    "start": "502110",
    "end": "504270"
  },
  {
    "text": "tool for developers to mock up",
    "start": "504270",
    "end": "506250"
  },
  {
    "text": "environments easily and quickly so as",
    "start": "506250",
    "end": "509009"
  },
  {
    "text": "simplest applications become more",
    "start": "509009",
    "end": "510810"
  },
  {
    "text": "complicated with hundreds or even",
    "start": "510810",
    "end": "513120"
  },
  {
    "text": "potentially thousands of lambda",
    "start": "513120",
    "end": "515099"
  },
  {
    "text": "functions there is the need to provide a",
    "start": "515099",
    "end": "517469"
  },
  {
    "text": "more effective way to modern our to",
    "start": "517469",
    "end": "520140"
  },
  {
    "text": "model our applications and that's why we",
    "start": "520140",
    "end": "522630"
  },
  {
    "text": "came out with civilized application",
    "start": "522630",
    "end": "524399"
  },
  {
    "text": "model or Sam so Sam is built on top of",
    "start": "524399",
    "end": "528300"
  },
  {
    "start": "527000",
    "end": "556000"
  },
  {
    "text": "Confirmation so any third-party tool",
    "start": "528300",
    "end": "530760"
  },
  {
    "text": "that's support confirmation will",
    "start": "530760",
    "end": "533120"
  },
  {
    "text": "apparently work with Sam it supports a",
    "start": "533120",
    "end": "535970"
  },
  {
    "text": "lot of great classification features",
    "start": "535970",
    "end": "538040"
  },
  {
    "text": "like parameters and those building",
    "start": "538040",
    "end": "540470"
  },
  {
    "text": "functions as you then you can combine",
    "start": "540470",
    "end": "542810"
  },
  {
    "text": "those uncivilized resources and",
    "start": "542810",
    "end": "544700"
  },
  {
    "text": "notations with the traditional cloud",
    "start": "544700",
    "end": "546860"
  },
  {
    "text": "formation resource and notations so you",
    "start": "546860",
    "end": "548660"
  },
  {
    "text": "have the flexibility over there let's",
    "start": "548660",
    "end": "551540"
  },
  {
    "text": "have a brief look at how a same template",
    "start": "551540",
    "end": "553640"
  },
  {
    "text": "is drafted as example here we see that",
    "start": "553640",
    "end": "556520"
  },
  {
    "start": "556000",
    "end": "595000"
  },
  {
    "text": "in this in this template it needs to be",
    "start": "556520",
    "end": "559550"
  },
  {
    "text": "transformed to a confirmation template",
    "start": "559550",
    "end": "561650"
  },
  {
    "text": "we will demonstrate this part later then",
    "start": "561650",
    "end": "564290"
  },
  {
    "text": "we can see the function definition plus",
    "start": "564290",
    "end": "566150"
  },
  {
    "text": "the definition for its source of event",
    "start": "566150",
    "end": "568160"
  },
  {
    "text": "in this case API is needed from API",
    "start": "568160",
    "end": "571339"
  },
  {
    "text": "gateway also we could leverage simple",
    "start": "571339",
    "end": "573890"
  },
  {
    "text": "table to have a dynamodb table created",
    "start": "573890",
    "end": "576440"
  },
  {
    "text": "with five read capacity units and five",
    "start": "576440",
    "end": "579080"
  },
  {
    "text": "write capacity units at deployment this",
    "start": "579080",
    "end": "582680"
  },
  {
    "text": "same template will be deployed as a",
    "start": "582680",
    "end": "584600"
  },
  {
    "text": "class formation stack just like other",
    "start": "584600",
    "end": "587000"
  },
  {
    "text": "confirmation templates and you can",
    "start": "587000",
    "end": "589220"
  },
  {
    "text": "replicate this deck from different",
    "start": "589220",
    "end": "591290"
  },
  {
    "text": "regions different accounts for different",
    "start": "591290",
    "end": "593540"
  },
  {
    "text": "purposes so with some template there's",
    "start": "593540",
    "end": "596240"
  },
  {
    "start": "595000",
    "end": "619000"
  },
  {
    "text": "also a tool called Sam CLI and",
    "start": "596240",
    "end": "598339"
  },
  {
    "text": "previously known as Sam local so this",
    "start": "598339",
    "end": "601130"
  },
  {
    "text": "tool can help you to develop and test",
    "start": "601130",
    "end": "603560"
  },
  {
    "text": "the market events test your lambda",
    "start": "603560",
    "end": "605630"
  },
  {
    "text": "functions with a local copy of API API",
    "start": "605630",
    "end": "608690"
  },
  {
    "text": "Gatorade running as a container on your",
    "start": "608690",
    "end": "611089"
  },
  {
    "text": "laptop so it supports hop reloading help",
    "start": "611089",
    "end": "613910"
  },
  {
    "text": "reloading so you can change your code on",
    "start": "613910",
    "end": "616190"
  },
  {
    "text": "the fly and test them locally same cell",
    "start": "616190",
    "end": "619550"
  },
  {
    "start": "619000",
    "end": "634000"
  },
  {
    "text": "ID can be used with different commands",
    "start": "619550",
    "end": "621380"
  },
  {
    "text": "for example we can use in it to",
    "start": "621380",
    "end": "624050"
  },
  {
    "text": "initialize a surveillance application as",
    "start": "624050",
    "end": "625730"
  },
  {
    "text": "a code skeleton and we can use package",
    "start": "625730",
    "end": "628160"
  },
  {
    "text": "or deploy to transform Sam template then",
    "start": "628160",
    "end": "631670"
  },
  {
    "text": "deploy with confirmation now let's have",
    "start": "631670",
    "end": "635029"
  },
  {
    "start": "634000",
    "end": "727000"
  },
  {
    "text": "a look at how Sam cell I works in a demo",
    "start": "635029",
    "end": "637190"
  },
  {
    "text": "so here I would like to demonstrate how",
    "start": "637190",
    "end": "640060"
  },
  {
    "text": "how Sam and Sam CLI working in reaction",
    "start": "640060",
    "end": "643580"
  },
  {
    "text": "so in this demo I'm gonna run my",
    "start": "643580",
    "end": "646630"
  },
  {
    "text": "environment inside a breast cloud 9 but",
    "start": "646630",
    "end": "649550"
  },
  {
    "text": "you can also do this from your local",
    "start": "649550",
    "end": "651200"
  },
  {
    "text": "environments such as your laptop firstly",
    "start": "651200",
    "end": "654470"
  },
  {
    "text": "I've already got some install in this",
    "start": "654470",
    "end": "656330"
  },
  {
    "text": "environment if you don't have please",
    "start": "656330",
    "end": "658190"
  },
  {
    "text": "install Python environment and use",
    "start": "658190",
    "end": "661940"
  },
  {
    "text": "people to install the same CLI so here I",
    "start": "661940",
    "end": "664850"
  },
  {
    "text": "want to check firstly the",
    "start": "664850",
    "end": "666710"
  },
  {
    "text": "version of my SEM CLI and it's Deraa",
    "start": "666710",
    "end": "670610"
  },
  {
    "text": "point six point one which is the latest",
    "start": "670610",
    "end": "672320"
  },
  {
    "text": "version great so if I type Sam - - help",
    "start": "672320",
    "end": "676010"
  },
  {
    "text": "I can see a whole bunch of different",
    "start": "676010",
    "end": "680210"
  },
  {
    "text": "options such as you know the logs deploy",
    "start": "680210",
    "end": "684410"
  },
  {
    "text": "package in need so maybe we can use this",
    "start": "684410",
    "end": "687770"
  },
  {
    "text": "one to initialize a soleus application",
    "start": "687770",
    "end": "690080"
  },
  {
    "text": "with something so I'll type Sam in it",
    "start": "690080",
    "end": "692660"
  },
  {
    "text": "but I don't know what to type next so I",
    "start": "692660",
    "end": "694760"
  },
  {
    "text": "can so I can type - - help in so we have",
    "start": "694760",
    "end": "701060"
  },
  {
    "text": "quite a few options here we can use just",
    "start": "701060",
    "end": "704230"
  },
  {
    "text": "initialize a Python script for six run",
    "start": "704230",
    "end": "706640"
  },
  {
    "text": "time we can also use different templates",
    "start": "706640",
    "end": "709970"
  },
  {
    "text": "from different github repositories we",
    "start": "709970",
    "end": "713480"
  },
  {
    "text": "can also use zip file with template",
    "start": "713480",
    "end": "716210"
  },
  {
    "text": "within I I would like to show you",
    "start": "716210",
    "end": "719000"
  },
  {
    "text": "actually this part which is we can make",
    "start": "719000",
    "end": "722540"
  },
  {
    "text": "use of what we call a cookie cutter",
    "start": "722540",
    "end": "725390"
  },
  {
    "text": "which which is a framework okay which",
    "start": "725390",
    "end": "727730"
  },
  {
    "text": "can help us to quickly spun up a",
    "start": "727730",
    "end": "729880"
  },
  {
    "text": "environment with all the required",
    "start": "729880",
    "end": "732440"
  },
  {
    "text": "components on a box so I just let me",
    "start": "732440",
    "end": "736190"
  },
  {
    "text": "just copy that and paste this command so",
    "start": "736190",
    "end": "740300"
  },
  {
    "text": "let's say I'm any location from this",
    "start": "740300",
    "end": "742400"
  },
  {
    "text": "place the nap time enter because I've",
    "start": "742400",
    "end": "746690"
  },
  {
    "text": "already done this before so it just",
    "start": "746690",
    "end": "748040"
  },
  {
    "text": "asked me if it's if it needs to",
    "start": "748040",
    "end": "750830"
  },
  {
    "text": "redownload the the template again so I",
    "start": "750830",
    "end": "753020"
  },
  {
    "text": "just have yes okay so now I need to give",
    "start": "753020",
    "end": "758360"
  },
  {
    "text": "my project a name so I just give it like",
    "start": "758360",
    "end": "760340"
  },
  {
    "text": "a Sam - cookie maybe a short description",
    "start": "760340",
    "end": "766550"
  },
  {
    "text": "like just say Sam cookie project",
    "start": "766550",
    "end": "774339"
  },
  {
    "text": "include avi gateway yep",
    "start": "777230",
    "end": "779399"
  },
  {
    "text": "why not x-ray yeah let's see how it",
    "start": "779399",
    "end": "782730"
  },
  {
    "text": "works",
    "start": "782730",
    "end": "784910"
  },
  {
    "text": "safety performant",
    "start": "784980",
    "end": "786209"
  },
  {
    "text": "I'll keep this option and know the",
    "start": "786209",
    "end": "789000"
  },
  {
    "text": "safety Pearlman means it will leverage",
    "start": "789000",
    "end": "790769"
  },
  {
    "text": "Kotov way to to achieve a canary",
    "start": "790769",
    "end": "794189"
  },
  {
    "text": "deployment that is more reliable but it",
    "start": "794189",
    "end": "797670"
  },
  {
    "text": "takes a longer time to deploy experiment",
    "start": "797670",
    "end": "801240"
  },
  {
    "text": "make not so as default now what we have",
    "start": "801240",
    "end": "805110"
  },
  {
    "text": "is a folder called Sam - cookie so let's",
    "start": "805110",
    "end": "808740"
  },
  {
    "text": "get inside and have a look what's inside",
    "start": "808740",
    "end": "811259"
  },
  {
    "text": "there let me clear my screen so firstly",
    "start": "811259",
    "end": "818819"
  },
  {
    "start": "817000",
    "end": "922000"
  },
  {
    "text": "oh there is a pitfall so I can use maybe",
    "start": "818819",
    "end": "822300"
  },
  {
    "text": "the PIP environment PP + V to setup my",
    "start": "822300",
    "end": "826829"
  },
  {
    "text": "environment to be aligned with what's",
    "start": "826829",
    "end": "828870"
  },
  {
    "text": "defined in the pit file so here we can",
    "start": "828870",
    "end": "831240"
  },
  {
    "text": "see that it requires passing 3.6 and",
    "start": "831240",
    "end": "835879"
  },
  {
    "text": "together we have a file called readme MD",
    "start": "835879",
    "end": "839160"
  },
  {
    "text": "so this file is actually a this file is",
    "start": "839160",
    "end": "845790"
  },
  {
    "text": "actually instruction of how we can make",
    "start": "845790",
    "end": "847769"
  },
  {
    "text": "use of this code base and let me see a",
    "start": "847769",
    "end": "851459"
  },
  {
    "text": "user-friendly version of that so we have",
    "start": "851459",
    "end": "854490"
  },
  {
    "text": "the same cookie project with the",
    "start": "854490",
    "end": "855720"
  },
  {
    "text": "description we have requirements",
    "start": "855720",
    "end": "857490"
  },
  {
    "text": "different commands to help us do the",
    "start": "857490",
    "end": "860279"
  },
  {
    "text": "testing to do the packaging",
    "start": "860279",
    "end": "863389"
  },
  {
    "text": "local development I'll show you later",
    "start": "863389",
    "end": "865500"
  },
  {
    "text": "and then we can deploy that so let's run",
    "start": "865500",
    "end": "870149"
  },
  {
    "text": "things one after the other so firstly",
    "start": "870149",
    "end": "872750"
  },
  {
    "text": "let me make sure my environment is",
    "start": "872750",
    "end": "879449"
  },
  {
    "text": "aligned so now now I have Python 0.6 and",
    "start": "879449",
    "end": "885959"
  },
  {
    "text": "3.6 if I type Python",
    "start": "885959",
    "end": "890058"
  },
  {
    "text": "I have three point six point five great",
    "start": "891620",
    "end": "898240"
  },
  {
    "text": "so the next and as instructed here I",
    "start": "898240",
    "end": "904150"
  },
  {
    "text": "will need to maybe install the",
    "start": "904150",
    "end": "907280"
  },
  {
    "text": "dependencies but actually if we look at",
    "start": "907280",
    "end": "909470"
  },
  {
    "text": "the dependencies they are only there are",
    "start": "909470",
    "end": "911510"
  },
  {
    "text": "only two things in there only the bottle",
    "start": "911510",
    "end": "913280"
  },
  {
    "text": "string which is the SDK for Python and",
    "start": "913280",
    "end": "915740"
  },
  {
    "text": "the X ray SDK we've already told the",
    "start": "915740",
    "end": "918860"
  },
  {
    "text": "project that we want we want to have X",
    "start": "918860",
    "end": "920930"
  },
  {
    "text": "ray embedded and together with these",
    "start": "920930",
    "end": "923330"
  },
  {
    "text": "files we do have a file called template",
    "start": "923330",
    "end": "926450"
  },
  {
    "text": "uyama so this is actually our out just",
    "start": "926450",
    "end": "931040"
  },
  {
    "text": "close this readme for now so this file",
    "start": "931040",
    "end": "934490"
  },
  {
    "text": "is the same template itself so as we can",
    "start": "934490",
    "end": "937970"
  },
  {
    "text": "see it needs to be transformed and the",
    "start": "937970",
    "end": "942470"
  },
  {
    "text": "next part is we are defining a function",
    "start": "942470",
    "end": "945350"
  },
  {
    "text": "here the function is called the handler",
    "start": "945350",
    "end": "951200"
  },
  {
    "text": "is a PP dot lambda handler and the file",
    "start": "951200",
    "end": "953720"
  },
  {
    "text": "should be located from this you are from",
    "start": "953720",
    "end": "957050"
  },
  {
    "text": "this URI so if we go back to the",
    "start": "957050",
    "end": "959390"
  },
  {
    "text": "instruction there there is instruction",
    "start": "959390",
    "end": "961460"
  },
  {
    "text": "telling us that we should have the the",
    "start": "961460",
    "end": "968300"
  },
  {
    "text": "application file to be copied to the",
    "start": "968300",
    "end": "970250"
  },
  {
    "text": "boot so actually the Butte folder under",
    "start": "970250",
    "end": "973670"
  },
  {
    "text": "the first function is where we're going",
    "start": "973670",
    "end": "976130"
  },
  {
    "text": "to package our package our application",
    "start": "976130",
    "end": "979370"
  },
  {
    "text": "and deploy to address lambda so what we",
    "start": "979370",
    "end": "981710"
  },
  {
    "text": "so what what we're gonna do here is",
    "start": "981710",
    "end": "983150"
  },
  {
    "text": "firstly let's install all the",
    "start": "983150",
    "end": "985310"
  },
  {
    "text": "dependencies so let me copy this command",
    "start": "985310",
    "end": "989890"
  },
  {
    "text": "so in this case I'm gonna install the",
    "start": "993010",
    "end": "995680"
  },
  {
    "text": "bottle 3 and the x-ray SDK into the",
    "start": "995680",
    "end": "1001860"
  },
  {
    "text": "folder here so I have the build folder I",
    "start": "1001860",
    "end": "1004350"
  },
  {
    "text": "have all the dependencies and everything",
    "start": "1004350",
    "end": "1008100"
  },
  {
    "text": "to be installed so the next thing I'm",
    "start": "1008100",
    "end": "1009630"
  },
  {
    "text": "gonna copy my function file into that",
    "start": "1009630",
    "end": "1013380"
  },
  {
    "text": "location so my function file is like",
    "start": "1013380",
    "end": "1015630"
  },
  {
    "text": "this so let me show you the code inside",
    "start": "1015630",
    "end": "1017779"
  },
  {
    "text": "so from the template the handler is",
    "start": "1017779",
    "end": "1020790"
  },
  {
    "text": "called a ppm the handler so the ABP in",
    "start": "1020790",
    "end": "1024360"
  },
  {
    "text": "this file and we get in there we should",
    "start": "1024360",
    "end": "1026400"
  },
  {
    "text": "see LEM the handler so that's the entry",
    "start": "1026400",
    "end": "1031230"
  },
  {
    "text": "point of this function so this function",
    "start": "1031230",
    "end": "1033630"
  },
  {
    "text": "does actually does nothing but just to",
    "start": "1033630",
    "end": "1036660"
  },
  {
    "text": "return a message the message was saying",
    "start": "1036660",
    "end": "1039798"
  },
  {
    "text": "hello world so these conditions are",
    "start": "1039799",
    "end": "1043230"
  },
  {
    "text": "actually to detect whether this function",
    "start": "1043230",
    "end": "1045839"
  },
  {
    "text": "is running in the local or in a you know",
    "start": "1045839",
    "end": "1048960"
  },
  {
    "text": "a terrorist cloud environment so before",
    "start": "1048960",
    "end": "1052140"
  },
  {
    "text": "we doing something else let's run let's",
    "start": "1052140",
    "end": "1055590"
  },
  {
    "text": "try some local tested stuff so let me",
    "start": "1055590",
    "end": "1057480"
  },
  {
    "text": "clear my term you know so if I do let's",
    "start": "1057480",
    "end": "1060570"
  },
  {
    "text": "say Sam local start API let's see what",
    "start": "1060570",
    "end": "1067230"
  },
  {
    "text": "we what we can run from here so",
    "start": "1067230",
    "end": "1070400"
  },
  {
    "text": "basically I have a docker container",
    "start": "1070400",
    "end": "1073380"
  },
  {
    "text": "actually running at port 3000 in my",
    "start": "1073380",
    "end": "1077040"
  },
  {
    "text": "local environment so let's check what it",
    "start": "1077040",
    "end": "1080429"
  },
  {
    "text": "does I mean open a new terminal see if I",
    "start": "1080429",
    "end": "1084780"
  },
  {
    "text": "curl this location port 3000",
    "start": "1084780",
    "end": "1093320"
  },
  {
    "text": "so it says it doesn't working it doesn't",
    "start": "1095390",
    "end": "1098690"
  },
  {
    "text": "it doesn't work as expected so what are",
    "start": "1098690",
    "end": "1100730"
  },
  {
    "text": "we missing here let's go back to the",
    "start": "1100730",
    "end": "1102110"
  },
  {
    "text": "template we found that oh the API path",
    "start": "1102110",
    "end": "1105440"
  },
  {
    "text": "should follow this pattern so let's do",
    "start": "1105440",
    "end": "1108620"
  },
  {
    "text": "this one let's do first so it could be",
    "start": "1108620",
    "end": "1112160"
  },
  {
    "text": "any arguments let's just put hello here",
    "start": "1112160",
    "end": "1122120"
  },
  {
    "text": "we go",
    "start": "1122120",
    "end": "1122480"
  },
  {
    "text": "we see the hallow'd returned from the",
    "start": "1122480",
    "end": "1125030"
  },
  {
    "text": "from the local running function as you",
    "start": "1125030",
    "end": "1126950"
  },
  {
    "text": "can see that I'm running all of this in",
    "start": "1126950",
    "end": "1129470"
  },
  {
    "text": "my local environment we could do this",
    "start": "1129470",
    "end": "1132050"
  },
  {
    "text": "even without internet connection and one",
    "start": "1132050",
    "end": "1135620"
  },
  {
    "start": "1134000",
    "end": "1256000"
  },
  {
    "text": "thing I would like to try here is I",
    "start": "1135620",
    "end": "1137210"
  },
  {
    "text": "would like to modify my code maybe I can",
    "start": "1137210",
    "end": "1140000"
  },
  {
    "text": "change it from hallo - hallo lambda",
    "start": "1140000",
    "end": "1143860"
  },
  {
    "text": "let's save it and I'm not gonna rerun my",
    "start": "1143860",
    "end": "1149030"
  },
  {
    "text": "MC lie so I'll just keep it running but",
    "start": "1149030",
    "end": "1151670"
  },
  {
    "text": "I just try to read reload what we can",
    "start": "1151670",
    "end": "1155300"
  },
  {
    "text": "get from this URL so as you can see the",
    "start": "1155300",
    "end": "1162620"
  },
  {
    "text": "change has been reflected and you can do",
    "start": "1162620",
    "end": "1165560"
  },
  {
    "text": "all of this in your local environment",
    "start": "1165560",
    "end": "1166430"
  },
  {
    "text": "which is great so the next part is that",
    "start": "1166430",
    "end": "1169280"
  },
  {
    "text": "we need to we want to deploy this it's -",
    "start": "1169280",
    "end": "1173270"
  },
  {
    "text": "to the address cloud then let me reopen",
    "start": "1173270",
    "end": "1175760"
  },
  {
    "text": "my readme file see how we can deploy",
    "start": "1175760",
    "end": "1177950"
  },
  {
    "text": "this so so to deploy firstly we need a",
    "start": "1177950",
    "end": "1185420"
  },
  {
    "text": "three bucket actually I've already got",
    "start": "1185420",
    "end": "1187160"
  },
  {
    "text": "my pocket created so we need to run this",
    "start": "1187160",
    "end": "1189560"
  },
  {
    "text": "command",
    "start": "1189560",
    "end": "1191740"
  },
  {
    "text": "I'm gonna run this command and ASRA",
    "start": "1196080",
    "end": "1198480"
  },
  {
    "text": "pocket name is my own bucket oh sorry I",
    "start": "1198480",
    "end": "1207780"
  },
  {
    "text": "must be in that sand cookie folder then",
    "start": "1207780",
    "end": "1216300"
  },
  {
    "text": "I run this in now my template has been",
    "start": "1216300",
    "end": "1225920"
  },
  {
    "text": "packaged so I can now deploy that so",
    "start": "1225920",
    "end": "1229320"
  },
  {
    "text": "what what I'm gonna do next is I can run",
    "start": "1229320",
    "end": "1233130"
  },
  {
    "text": "this command to deploy my package enter",
    "start": "1233130",
    "end": "1241130"
  },
  {
    "text": "so let's go back to address console and",
    "start": "1241130",
    "end": "1244770"
  },
  {
    "text": "what we can see from cloud formation is",
    "start": "1244770",
    "end": "1247500"
  },
  {
    "text": "that we've got a stack under creation so",
    "start": "1247500",
    "end": "1252390"
  },
  {
    "text": "let's give this one a few moments so",
    "start": "1252390",
    "end": "1256380"
  },
  {
    "start": "1256000",
    "end": "1404000"
  },
  {
    "text": "what so what we've seen so far is we can",
    "start": "1256380",
    "end": "1258690"
  },
  {
    "text": "make use of same template to define all",
    "start": "1258690",
    "end": "1262679"
  },
  {
    "text": "the resources we need such as the",
    "start": "1262679",
    "end": "1268500"
  },
  {
    "text": "function itself the source of the from",
    "start": "1268500",
    "end": "1270570"
  },
  {
    "text": "the source of the event in this case",
    "start": "1270570",
    "end": "1272040"
  },
  {
    "text": "it's an API gateway API and then we can",
    "start": "1272040",
    "end": "1278400"
  },
  {
    "text": "use this different confirmation command",
    "start": "1278400",
    "end": "1281640"
  },
  {
    "text": "to generate the template for",
    "start": "1281640",
    "end": "1283679"
  },
  {
    "text": "confirmation to launch this stack in a",
    "start": "1283679",
    "end": "1286110"
  },
  {
    "text": "cloud so this is this can help us to",
    "start": "1286110",
    "end": "1288800"
  },
  {
    "text": "seamlessly deploy our package from our",
    "start": "1288800",
    "end": "1292260"
  },
  {
    "text": "local to a specific environment okay now",
    "start": "1292260",
    "end": "1297270"
  },
  {
    "text": "the stack is done so what I was so what",
    "start": "1297270",
    "end": "1300750"
  },
  {
    "text": "I'm gonna do here is",
    "start": "1300750",
    "end": "1303650"
  },
  {
    "text": "so it's completed how about how about if",
    "start": "1308780",
    "end": "1314880"
  },
  {
    "text": "we can access this application from",
    "start": "1314880",
    "end": "1320220"
  },
  {
    "text": "somewhere let me check this readme file",
    "start": "1320220",
    "end": "1324300"
  },
  {
    "text": "again I can use this command to describe",
    "start": "1324300",
    "end": "1334140"
  },
  {
    "text": "the you know the details of the stack",
    "start": "1334140",
    "end": "1336390"
  },
  {
    "text": "we've created as you can see we have a",
    "start": "1336390",
    "end": "1340160"
  },
  {
    "text": "URL being generated for us so let's copy",
    "start": "1340160",
    "end": "1343590"
  },
  {
    "text": "that and let me um paste it here",
    "start": "1343590",
    "end": "1348420"
  },
  {
    "text": "oh it says let me let me zoom in it says",
    "start": "1348420",
    "end": "1358470"
  },
  {
    "text": "something was wrong because we've",
    "start": "1358470",
    "end": "1360510"
  },
  {
    "text": "already got x-ray enabled let's maybe",
    "start": "1360510",
    "end": "1362190"
  },
  {
    "text": "check x-ray to see if there's anything",
    "start": "1362190",
    "end": "1364200"
  },
  {
    "text": "we can capture from there",
    "start": "1364200",
    "end": "1367250"
  },
  {
    "text": "so let me check the trace okay I can see",
    "start": "1377010",
    "end": "1381690"
  },
  {
    "text": "there's a trace list let me zoom it out",
    "start": "1381690",
    "end": "1385530"
  },
  {
    "text": "a little bit so let me open this one and",
    "start": "1385530",
    "end": "1390650"
  },
  {
    "text": "I can see something goes wrong and it",
    "start": "1390650",
    "end": "1395010"
  },
  {
    "text": "can tell me actually x-ray can tell me",
    "start": "1395010",
    "end": "1397460"
  },
  {
    "text": "which line of the code brings us the",
    "start": "1397460",
    "end": "1401250"
  },
  {
    "text": "error so I can see that this is in line",
    "start": "1401250",
    "end": "1403170"
  },
  {
    "text": "1:06 so maybe let's get back to our code",
    "start": "1403170",
    "end": "1408980"
  },
  {
    "text": "our code is here so 1:06 so this line is",
    "start": "1409040",
    "end": "1414000"
  },
  {
    "text": "telling us an error and because I've",
    "start": "1414000",
    "end": "1418380"
  },
  {
    "text": "already know this code by so I know that",
    "start": "1418380",
    "end": "1420630"
  },
  {
    "text": "if we want to use x-ray recorder we need",
    "start": "1420630",
    "end": "1423480"
  },
  {
    "text": "to capture something first though so",
    "start": "1423480",
    "end": "1425070"
  },
  {
    "text": "this line actually has been commented to",
    "start": "1425070",
    "end": "1426780"
  },
  {
    "text": "so let me let me uncomment this line and",
    "start": "1426780",
    "end": "1429350"
  },
  {
    "text": "save it so let's firstly let's test if",
    "start": "1429350",
    "end": "1434730"
  },
  {
    "text": "my local functions still working here is",
    "start": "1434730",
    "end": "1442770"
  },
  {
    "text": "still working",
    "start": "1442770",
    "end": "1443400"
  },
  {
    "text": "hello lamda still there so what do we do",
    "start": "1443400",
    "end": "1445830"
  },
  {
    "text": "next is I'm gonna redeploy my function",
    "start": "1445830",
    "end": "1450420"
  },
  {
    "text": "so I'm gonna package it again",
    "start": "1450420",
    "end": "1453650"
  },
  {
    "text": "then we're gonna deploy that so in this",
    "start": "1455240",
    "end": "1459810"
  },
  {
    "text": "case because the confirmation stack is",
    "start": "1459810",
    "end": "1462950"
  },
  {
    "text": "already existed so what we're doing now",
    "start": "1462950",
    "end": "1466410"
  },
  {
    "text": "is actually it will create a change that",
    "start": "1466410",
    "end": "1469620"
  },
  {
    "text": "and then the stack will get updated",
    "start": "1469620",
    "end": "1475100"
  },
  {
    "text": "let's get a few moment",
    "start": "1475970",
    "end": "1479750"
  },
  {
    "text": "now it's done so if we refresh here yep",
    "start": "1485740",
    "end": "1490210"
  },
  {
    "text": "it's update complete so let's refresh",
    "start": "1490210",
    "end": "1492429"
  },
  {
    "text": "this page to see if we can get things",
    "start": "1492429",
    "end": "1494440"
  },
  {
    "text": "fixed awesome we have the holo lambda",
    "start": "1494440",
    "end": "1497620"
  },
  {
    "text": "there so let's go back to x-ray let's",
    "start": "1497620",
    "end": "1501520"
  },
  {
    "text": "get back to the trace let's refresh it",
    "start": "1501520",
    "end": "1504940"
  },
  {
    "text": "again this is our latest invocation we",
    "start": "1504940",
    "end": "1510130"
  },
  {
    "text": "can see that everything is green and you",
    "start": "1510130",
    "end": "1512559"
  },
  {
    "text": "can see the details and I will describe",
    "start": "1512559",
    "end": "1515789"
  },
  {
    "text": "x-ray and Cosworth logging from the",
    "start": "1515789",
    "end": "1518740"
  },
  {
    "text": "monitoring and logging in the next few",
    "start": "1518740",
    "end": "1520720"
  },
  {
    "text": "slides so far we have seen that how we",
    "start": "1520720",
    "end": "1524110"
  },
  {
    "start": "1521000",
    "end": "1721000"
  },
  {
    "text": "can initiate a function draft our code",
    "start": "1524110",
    "end": "1526899"
  },
  {
    "text": "and deploy it however we must know",
    "start": "1526899",
    "end": "1529720"
  },
  {
    "text": "what's coming on besides our functions",
    "start": "1529720",
    "end": "1531730"
  },
  {
    "text": "at running especially when something",
    "start": "1531730",
    "end": "1533559"
  },
  {
    "text": "goes wrong we need to know where and why",
    "start": "1533559",
    "end": "1536309"
  },
  {
    "text": "from monitoring perspective you can",
    "start": "1536309",
    "end": "1539140"
  },
  {
    "text": "leverage different matrix from card",
    "start": "1539140",
    "end": "1541120"
  },
  {
    "text": "watch for lambda and API gateway if it's",
    "start": "1541120",
    "end": "1544450"
  },
  {
    "text": "used so you can create alarms from this",
    "start": "1544450",
    "end": "1547419"
  },
  {
    "text": "matrix if something unexpected happens",
    "start": "1547419",
    "end": "1549190"
  },
  {
    "text": "and you would like to know about it or",
    "start": "1549190",
    "end": "1551890"
  },
  {
    "text": "even better you can create some auto",
    "start": "1551890",
    "end": "1554380"
  },
  {
    "text": "response triggered by these alarms to",
    "start": "1554380",
    "end": "1556809"
  },
  {
    "text": "deal with the issue in an automated way",
    "start": "1556809",
    "end": "1559140"
  },
  {
    "text": "while we debug or troubleshooting our",
    "start": "1559140",
    "end": "1561669"
  },
  {
    "text": "lambda functions elements lambda",
    "start": "1561669",
    "end": "1563620"
  },
  {
    "text": "leverages Amazon CloudWatch lock group",
    "start": "1563620",
    "end": "1566080"
  },
  {
    "text": "to automatically emit matrix and logs",
    "start": "1566080",
    "end": "1569169"
  },
  {
    "text": "for all invocations of your function one",
    "start": "1569169",
    "end": "1573100"
  },
  {
    "text": "thing you can do here is to create your",
    "start": "1573100",
    "end": "1575140"
  },
  {
    "text": "custom matrix from a lock group by",
    "start": "1575140",
    "end": "1577809"
  },
  {
    "text": "applying different filters and you can",
    "start": "1577809",
    "end": "1579880"
  },
  {
    "text": "target specific messages from the log",
    "start": "1579880",
    "end": "1582669"
  },
  {
    "text": "you can also stream the log to other",
    "start": "1582669",
    "end": "1585490"
  },
  {
    "text": "services like maybe elastic search or",
    "start": "1585490",
    "end": "1587649"
  },
  {
    "text": "even a school or s3 then you could use",
    "start": "1587649",
    "end": "1589779"
  },
  {
    "text": "Cabana for elastic search or athina with",
    "start": "1589779",
    "end": "1592510"
  },
  {
    "text": "quick cipher s3 to visualize this login",
    "start": "1592510",
    "end": "1595149"
  },
  {
    "text": "data with all the different matrix you",
    "start": "1595149",
    "end": "1598179"
  },
  {
    "text": "can also mock up a dashboard from cloud",
    "start": "1598179",
    "end": "1600760"
  },
  {
    "text": "watch for you and the team to have an",
    "start": "1600760",
    "end": "1602890"
  },
  {
    "text": "overview of the status of your service",
    "start": "1602890",
    "end": "1605140"
  },
  {
    "text": "application actually for tracing the",
    "start": "1605140",
    "end": "1608169"
  },
  {
    "text": "event source that invoke your lambda",
    "start": "1608169",
    "end": "1609669"
  },
  {
    "text": "function or for treating the downstream",
    "start": "1609669",
    "end": "1611860"
  },
  {
    "text": "costs that a function made in Abbas",
    "start": "1611860",
    "end": "1614139"
  },
  {
    "text": "x-ray could provide a deeper vision into",
    "start": "1614139",
    "end": "1617110"
  },
  {
    "text": "a lambda functions",
    "start": "1617110",
    "end": "1618539"
  },
  {
    "text": "you can enumerate by ticking a checkbox",
    "start": "1618539",
    "end": "1620279"
  },
  {
    "text": "in the inner function configuration",
    "start": "1620279",
    "end": "1622129"
  },
  {
    "text": "x-ray also provides airport delay map",
    "start": "1622129",
    "end": "1625019"
  },
  {
    "text": "with live with information such as the",
    "start": "1625019",
    "end": "1627419"
  },
  {
    "text": "amount of delay failure and and it also",
    "start": "1627419",
    "end": "1630659"
  },
  {
    "text": "it also provides us the visibility to",
    "start": "1630659",
    "end": "1633239"
  },
  {
    "text": "see the data such as the average",
    "start": "1633239",
    "end": "1634889"
  },
  {
    "text": "execution time here is a quick example",
    "start": "1634889",
    "end": "1637949"
  },
  {
    "text": "of what produced by x-ray for a lambda",
    "start": "1637949",
    "end": "1640859"
  },
  {
    "text": "function you can see that the entire",
    "start": "1640859",
    "end": "1643469"
  },
  {
    "text": "duration of your lambda function",
    "start": "1643469",
    "end": "1644849"
  },
  {
    "text": "executing from the start to the finish",
    "start": "1644849",
    "end": "1647399"
  },
  {
    "text": "and the lower part in this diagram is",
    "start": "1647399",
    "end": "1650509"
  },
  {
    "text": "specific to your lambda function so here",
    "start": "1650509",
    "end": "1653639"
  },
  {
    "text": "you start with initialization phase then",
    "start": "1653639",
    "end": "1656669"
  },
  {
    "text": "the handler function and then arrest the",
    "start": "1656669",
    "end": "1659339"
  },
  {
    "text": "rest of any downstream cost in this",
    "start": "1659339",
    "end": "1661079"
  },
  {
    "text": "example it was s3 so to help you to get",
    "start": "1661079",
    "end": "1665609"
  },
  {
    "text": "started learning about the code we have",
    "start": "1665609",
    "end": "1668009"
  },
  {
    "text": "a bunch of blueprints where you could",
    "start": "1668009",
    "end": "1670259"
  },
  {
    "text": "see how a typical scenario has been",
    "start": "1670259",
    "end": "1673109"
  },
  {
    "text": "implemented as lambda function for",
    "start": "1673109",
    "end": "1675269"
  },
  {
    "text": "example you can learn how to process",
    "start": "1675269",
    "end": "1677429"
  },
  {
    "text": "event triggered by object being creating",
    "start": "1677429",
    "end": "1679829"
  },
  {
    "text": "an s3 and there's also another place",
    "start": "1679829",
    "end": "1682229"
  },
  {
    "text": "called a surveillance application",
    "start": "1682229",
    "end": "1684029"
  },
  {
    "text": "repository where you can find",
    "start": "1684029",
    "end": "1685949"
  },
  {
    "text": "applications but you know for different",
    "start": "1685949",
    "end": "1688499"
  },
  {
    "text": "use cases might by other developers from",
    "start": "1688499",
    "end": "1691139"
  },
  {
    "text": "the community so to conclude everything",
    "start": "1691139",
    "end": "1694109"
  },
  {
    "text": "we talk today you can find a relevant",
    "start": "1694109",
    "end": "1696839"
  },
  {
    "text": "information from aws.amazon.com slash",
    "start": "1696839",
    "end": "1699869"
  },
  {
    "text": "service so you can find things like",
    "start": "1699869",
    "end": "1702299"
  },
  {
    "text": "documentation links to different tools",
    "start": "1702299",
    "end": "1705199"
  },
  {
    "text": "tutorials other information almost every",
    "start": "1705199",
    "end": "1708509"
  },
  {
    "text": "aspect you need to know when you create",
    "start": "1708509",
    "end": "1710519"
  },
  {
    "text": "your surveillance application and the",
    "start": "1710519",
    "end": "1713129"
  },
  {
    "text": "last thank you for joining me today I",
    "start": "1713129",
    "end": "1715109"
  },
  {
    "text": "hope this session is informative please",
    "start": "1715109",
    "end": "1717359"
  },
  {
    "text": "feel free to reach me on LinkedIn thank",
    "start": "1717359",
    "end": "1719729"
  },
  {
    "text": "you and enjoy the rest of the day",
    "start": "1719729",
    "end": "1722899"
  }
]