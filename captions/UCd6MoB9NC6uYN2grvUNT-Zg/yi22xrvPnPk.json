[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "hello everyone this is shrian Kim again",
    "start": "2399",
    "end": "5100"
  },
  {
    "text": "I am a container specialist Solutions",
    "start": "5100",
    "end": "7680"
  },
  {
    "text": "architect at Amazon web services and",
    "start": "7680",
    "end": "10860"
  },
  {
    "text": "this is a series of mining talk on ECS",
    "start": "10860",
    "end": "13500"
  },
  {
    "text": "and fargate",
    "start": "13500",
    "end": "15299"
  },
  {
    "text": "previously we explored the essential of",
    "start": "15299",
    "end": "18300"
  },
  {
    "text": "ECS focusing on cluster service and task",
    "start": "18300",
    "end": "23939"
  },
  {
    "text": "today we will pivot our Focus to AWS",
    "start": "23939",
    "end": "27060"
  },
  {
    "text": "fargate",
    "start": "27060",
    "end": "28220"
  },
  {
    "text": "examining what it is and its key",
    "start": "28220",
    "end": "31320"
  },
  {
    "text": "characteristics",
    "start": "31320",
    "end": "34040"
  },
  {
    "start": "34000",
    "end": "72000"
  },
  {
    "text": "awful less fargate is a serverless",
    "start": "36180",
    "end": "38760"
  },
  {
    "text": "environment for containers which is",
    "start": "38760",
    "end": "41760"
  },
  {
    "text": "fully managed by AWS",
    "start": "41760",
    "end": "44700"
  },
  {
    "text": "and once your ECS cluster prepared",
    "start": "44700",
    "end": "47899"
  },
  {
    "text": "targets offers option when deciding on",
    "start": "47899",
    "end": "51480"
  },
  {
    "text": "the Computing resources for hosting your",
    "start": "51480",
    "end": "53640"
  },
  {
    "text": "ECS task",
    "start": "53640",
    "end": "56219"
  },
  {
    "text": "you can choose either container instance",
    "start": "56219",
    "end": "58440"
  },
  {
    "text": "which means easy to instance or AWS far",
    "start": "58440",
    "end": "62460"
  },
  {
    "text": "gate",
    "start": "62460",
    "end": "63480"
  },
  {
    "text": "also you can get the flexibility to",
    "start": "63480",
    "end": "66420"
  },
  {
    "text": "utilize a mix of both within a single",
    "start": "66420",
    "end": "69299"
  },
  {
    "text": "ECS cluster",
    "start": "69299",
    "end": "72439"
  },
  {
    "start": "72000",
    "end": "141000"
  },
  {
    "text": "with fargate AWS takes on the management",
    "start": "74939",
    "end": "78540"
  },
  {
    "text": "for any underlying infrastructure",
    "start": "78540",
    "end": "81840"
  },
  {
    "text": "therefore managing ec2 Ami is not",
    "start": "81840",
    "end": "85740"
  },
  {
    "text": "required",
    "start": "85740",
    "end": "88220"
  },
  {
    "text": "second is dedicated resources per ECS",
    "start": "88259",
    "end": "92159"
  },
  {
    "text": "task enhances security by default",
    "start": "92159",
    "end": "96180"
  },
  {
    "text": "to be precise each fargate task has its",
    "start": "96180",
    "end": "100140"
  },
  {
    "text": "own isolation boundary and does not",
    "start": "100140",
    "end": "102840"
  },
  {
    "text": "share the underlying resources such as",
    "start": "102840",
    "end": "105299"
  },
  {
    "text": "Conor CPU memory resources or network",
    "start": "105299",
    "end": "109020"
  },
  {
    "text": "interface with other ECS tasks",
    "start": "109020",
    "end": "113719"
  },
  {
    "text": "and with fargate customers only get",
    "start": "113880",
    "end": "117060"
  },
  {
    "text": "charged for tasks that they run",
    "start": "117060",
    "end": "120659"
  },
  {
    "text": "it's varied close to options like um",
    "start": "120659",
    "end": "124560"
  },
  {
    "text": "savings plans and spot",
    "start": "124560",
    "end": "126600"
  },
  {
    "text": "also the availability to assign",
    "start": "126600",
    "end": "129179"
  },
  {
    "text": "resources per ECS tasks can increase",
    "start": "129179",
    "end": "132060"
  },
  {
    "text": "resource utilization compared to ec2 and",
    "start": "132060",
    "end": "136140"
  },
  {
    "text": "that leads to cost savings",
    "start": "136140",
    "end": "140420"
  },
  {
    "start": "141000",
    "end": "187000"
  },
  {
    "text": "since a single fargate corresponds to a",
    "start": "143520",
    "end": "146760"
  },
  {
    "text": "single ECS task it is mandatory to",
    "start": "146760",
    "end": "149640"
  },
  {
    "text": "define the tasks CPU and memory as",
    "start": "149640",
    "end": "153480"
  },
  {
    "text": "demonstrated in the bottom of the sample",
    "start": "153480",
    "end": "155879"
  },
  {
    "text": "ECS test definition right on the screen",
    "start": "155879",
    "end": "160500"
  },
  {
    "text": "however when deploying easier tasks on",
    "start": "160500",
    "end": "164040"
  },
  {
    "text": "easy to instance specifying the resource",
    "start": "164040",
    "end": "167340"
  },
  {
    "text": "for ECS task becomes optional",
    "start": "167340",
    "end": "171739"
  },
  {
    "text": "last year we increased the compute and",
    "start": "171780",
    "end": "174720"
  },
  {
    "text": "memory resources configuration by four",
    "start": "174720",
    "end": "177120"
  },
  {
    "text": "times",
    "start": "177120",
    "end": "178500"
  },
  {
    "text": "therefore you can configure ECS task up",
    "start": "178500",
    "end": "182580"
  },
  {
    "text": "to 16 virtual CPU",
    "start": "182580",
    "end": "186500"
  },
  {
    "start": "187000",
    "end": "231000"
  },
  {
    "text": "the network mode for ECS far gate is",
    "start": "189840",
    "end": "193140"
  },
  {
    "text": "restricted to the AWS VPC mode",
    "start": "193140",
    "end": "197580"
  },
  {
    "text": "as I mentioned in previous ECS task",
    "start": "197580",
    "end": "200640"
  },
  {
    "text": "video",
    "start": "200640",
    "end": "201659"
  },
  {
    "text": "AWS VPC mode assigns a network interface",
    "start": "201659",
    "end": "205920"
  },
  {
    "text": "to each ECS tasks which enable each task",
    "start": "205920",
    "end": "210480"
  },
  {
    "text": "Security Group mapping or enable",
    "start": "210480",
    "end": "213360"
  },
  {
    "text": "Gathering traffic information using VPC",
    "start": "213360",
    "end": "216300"
  },
  {
    "text": "flow logs",
    "start": "216300",
    "end": "218459"
  },
  {
    "text": "but as every forget utilized IP it is",
    "start": "218459",
    "end": "222780"
  },
  {
    "text": "crucial to allocate enough room during",
    "start": "222780",
    "end": "226080"
  },
  {
    "text": "designing your VPC and so on that",
    "start": "226080",
    "end": "230780"
  },
  {
    "start": "231000",
    "end": "280000"
  },
  {
    "text": "the auto scaling for ECS far gate is",
    "start": "233940",
    "end": "237420"
  },
  {
    "text": "relatively simpler than ECS with ec2",
    "start": "237420",
    "end": "241500"
  },
  {
    "text": "for easy to instance you need to",
    "start": "241500",
    "end": "244200"
  },
  {
    "text": "consider not only the ECS service auto",
    "start": "244200",
    "end": "246599"
  },
  {
    "text": "scaling but also the auto scaling of the",
    "start": "246599",
    "end": "249959"
  },
  {
    "text": "container instance when it comes to not",
    "start": "249959",
    "end": "252780"
  },
  {
    "text": "enough compute resources to provision",
    "start": "252780",
    "end": "254760"
  },
  {
    "text": "ECS tasks",
    "start": "254760",
    "end": "257220"
  },
  {
    "text": "however with fargate only easy as a",
    "start": "257220",
    "end": "260699"
  },
  {
    "text": "service auto scaling needs to be",
    "start": "260699",
    "end": "262620"
  },
  {
    "text": "considered and that means you can",
    "start": "262620",
    "end": "265560"
  },
  {
    "text": "decrease the burden of operating",
    "start": "265560",
    "end": "267600"
  },
  {
    "text": "infrastructure",
    "start": "267600",
    "end": "270600"
  },
  {
    "text": "like always let's move to the ECS",
    "start": "271320",
    "end": "274500"
  },
  {
    "text": "console and create simple ECS 4 gauge",
    "start": "274500",
    "end": "277979"
  },
  {
    "text": "service",
    "start": "277979",
    "end": "280160"
  },
  {
    "start": "280000",
    "end": "572000"
  },
  {
    "text": "I am currently on the test definition",
    "start": "282720",
    "end": "285300"
  },
  {
    "text": "page",
    "start": "285300",
    "end": "287160"
  },
  {
    "text": "click the create new test definition",
    "start": "287160",
    "end": "289500"
  },
  {
    "text": "button",
    "start": "289500",
    "end": "292160"
  },
  {
    "text": "and name for the test definition like",
    "start": "292500",
    "end": "296960"
  },
  {
    "text": "nginx task",
    "start": "296960",
    "end": "300960"
  },
  {
    "text": "in ECS the basic unit of a deployment is",
    "start": "301800",
    "end": "305880"
  },
  {
    "text": "a task that has one or more containers",
    "start": "305880",
    "end": "310320"
  },
  {
    "text": "since we will focus on creating simple",
    "start": "310320",
    "end": "313020"
  },
  {
    "text": "four gauge service I am going to use",
    "start": "313020",
    "end": "315960"
  },
  {
    "text": "official nginx image for this demo",
    "start": "315960",
    "end": "320660"
  },
  {
    "text": "um and then",
    "start": "327780",
    "end": "329340"
  },
  {
    "text": "um use the container Port 80 because the",
    "start": "329340",
    "end": "333479"
  },
  {
    "text": "nginx web server listens to all incoming",
    "start": "333479",
    "end": "336300"
  },
  {
    "text": "connection on that port",
    "start": "336300",
    "end": "339440"
  },
  {
    "text": "we will use AWS far gate and x86",
    "start": "343919",
    "end": "348000"
  },
  {
    "text": "architecture",
    "start": "348000",
    "end": "350100"
  },
  {
    "text": "for the task size or locate one virtual",
    "start": "350100",
    "end": "353699"
  },
  {
    "text": "CPU and 2 gigabyte memory",
    "start": "353699",
    "end": "358320"
  },
  {
    "text": "and leave other configuration by default",
    "start": "358320",
    "end": "363380"
  },
  {
    "text": "click the next button",
    "start": "364259",
    "end": "366479"
  },
  {
    "text": "and check all configuration that we made",
    "start": "366479",
    "end": "369860"
  },
  {
    "text": "and click the create button",
    "start": "369860",
    "end": "374180"
  },
  {
    "text": "let's move to the easiest cluster for",
    "start": "378720",
    "end": "381720"
  },
  {
    "text": "creating ECS service",
    "start": "381720",
    "end": "385400"
  },
  {
    "text": "click the create button",
    "start": "386880",
    "end": "389340"
  },
  {
    "text": "and check launch type is AWS fargate",
    "start": "389340",
    "end": "395360"
  },
  {
    "text": "and in terms of application type please",
    "start": "396539",
    "end": "400020"
  },
  {
    "text": "check uh we choose a service",
    "start": "400020",
    "end": "404900"
  },
  {
    "text": "find the nginx task in family section",
    "start": "407340",
    "end": "411419"
  },
  {
    "text": "and select revision number which is",
    "start": "411419",
    "end": "414960"
  },
  {
    "text": "latest one",
    "start": "414960",
    "end": "417860"
  },
  {
    "text": "after that specify service name like",
    "start": "418139",
    "end": "421020"
  },
  {
    "text": "nginx service",
    "start": "421020",
    "end": "424800"
  },
  {
    "text": "also write down our desired number of",
    "start": "424800",
    "end": "428220"
  },
  {
    "text": "tasks to 3 for the availability",
    "start": "428220",
    "end": "432800"
  },
  {
    "text": "open the networking section",
    "start": "436620",
    "end": "439380"
  },
  {
    "text": "assign the VPC and subnet for the ECS",
    "start": "439380",
    "end": "443220"
  },
  {
    "text": "tasks placement",
    "start": "443220",
    "end": "446180"
  },
  {
    "text": "um in this demo we will choose ECS",
    "start": "447539",
    "end": "450360"
  },
  {
    "text": "blueprint infra VPC",
    "start": "450360",
    "end": "453240"
  },
  {
    "text": "also we will choose only public subnet",
    "start": "453240",
    "end": "457919"
  },
  {
    "text": "so it can communicate directly with the",
    "start": "457919",
    "end": "461220"
  },
  {
    "text": "internet",
    "start": "461220",
    "end": "463400"
  },
  {
    "text": "and then",
    "start": "466500",
    "end": "468300"
  },
  {
    "text": "um select existing Security Group",
    "start": "468300",
    "end": "471720"
  },
  {
    "text": "which name is web server Security Group",
    "start": "471720",
    "end": "476160"
  },
  {
    "text": "to allow traffic to flow draw a report",
    "start": "476160",
    "end": "481340"
  },
  {
    "text": "we use a pre-made Security Group for the",
    "start": "481740",
    "end": "484919"
  },
  {
    "text": "sake of time",
    "start": "484919",
    "end": "486479"
  },
  {
    "text": "and then create ECS service",
    "start": "486479",
    "end": "491000"
  },
  {
    "text": "wait for the provisioning time",
    "start": "493620",
    "end": "496380"
  },
  {
    "text": "you can also check its progress in cloud",
    "start": "496380",
    "end": "500639"
  },
  {
    "text": "formation webpage",
    "start": "500639",
    "end": "503960"
  },
  {
    "text": "click the nginx service",
    "start": "511039",
    "end": "515120"
  },
  {
    "text": "and then click the task tab",
    "start": "516899",
    "end": "521240"
  },
  {
    "text": "choose one of the easiest tasks",
    "start": "523800",
    "end": "527899"
  },
  {
    "text": "and click the public IP",
    "start": "529380",
    "end": "533720"
  },
  {
    "text": "you can see the foot nginx page draw",
    "start": "535500",
    "end": "538440"
  },
  {
    "text": "this public IP",
    "start": "538440",
    "end": "541459"
  },
  {
    "text": "this is all I have to share today",
    "start": "545820",
    "end": "548459"
  },
  {
    "text": "please keep in mind the fargate's key",
    "start": "548459",
    "end": "551160"
  },
  {
    "text": "characteristics and how to create ECS",
    "start": "551160",
    "end": "553980"
  },
  {
    "text": "service with fargate",
    "start": "553980",
    "end": "557100"
  },
  {
    "text": "if you have any questions or feedback",
    "start": "557100",
    "end": "559440"
  },
  {
    "text": "drop me a line",
    "start": "559440",
    "end": "561060"
  },
  {
    "text": "next Watch Lightning talk on ECS and",
    "start": "561060",
    "end": "563940"
  },
  {
    "text": "fargate see you next time",
    "start": "563940",
    "end": "567500"
  }
]