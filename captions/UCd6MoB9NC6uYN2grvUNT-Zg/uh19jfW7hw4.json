[
  {
    "start": "0",
    "end": "66000"
  },
  {
    "text": "okay hi everyone welcome to design with ops in mind my name's Alex Livingstone",
    "start": "179",
    "end": "6180"
  },
  {
    "text": "I'm a Technical Account Manager with AWS",
    "start": "6180",
    "end": "11000"
  },
  {
    "text": "there's a sandstorm forgetting target",
    "start": "12830",
    "end": "23699"
  },
  {
    "text": "does it work yeah hello my name is Liga I am with Technical Account Manager is a",
    "start": "23699",
    "end": "29880"
  },
  {
    "text": "double yes okay so in this session we're",
    "start": "29880",
    "end": "34950"
  },
  {
    "text": "basically we're going to take you through the the deployment of a workload",
    "start": "34950",
    "end": "40070"
  },
  {
    "text": "but we're going to go through a few of the things you should do when before you",
    "start": "40070",
    "end": "47370"
  },
  {
    "text": "deploy a workload into production and how to do these how to do these as code",
    "start": "47370",
    "end": "52949"
  },
  {
    "text": "and basically apply the same kind of engineering principles you would do with your workload into how you deploy it and",
    "start": "52949",
    "end": "62039"
  },
  {
    "text": "making it making it easy for operations so before we start I wanted to set the",
    "start": "62039",
    "end": "71700"
  },
  {
    "start": "66000",
    "end": "66000"
  },
  {
    "text": "premise here the the purpose of software basically any kind of software that you can think of ultimately is to help",
    "start": "71700",
    "end": "79170"
  },
  {
    "text": "people and I try to think for ages and ages is there any example I could think of that doesn't fit this but I think",
    "start": "79170",
    "end": "85710"
  },
  {
    "text": "it's safe to say that every example of software is to help people so Airbnb for",
    "start": "85710",
    "end": "91350"
  },
  {
    "text": "example they match people up with landlords to to rent out properties",
    "start": "91350",
    "end": "97850"
  },
  {
    "text": "Accardo they obviously deliver online online groceries and sage help people",
    "start": "97850",
    "end": "105299"
  },
  {
    "text": "and customers companies sorry automate their accounting so I really believe",
    "start": "105299",
    "end": "112350"
  },
  {
    "text": "this is a this is a powerful statement everybody in this room in some way or",
    "start": "112350",
    "end": "117960"
  },
  {
    "text": "another is involved with software and is therefore involved with trying to help people to do something or achieve",
    "start": "117960",
    "end": "124890"
  },
  {
    "text": "something so ultimately you should try and work",
    "start": "124890",
    "end": "131360"
  },
  {
    "start": "127000",
    "end": "127000"
  },
  {
    "text": "backwards from the people you're helping and this is where non-functional requirements are crucial so there's no",
    "start": "131360",
    "end": "138590"
  },
  {
    "text": "point in designing the best phone in the world if it spontaneously catches on fire you can't take it on an airplane",
    "start": "138590",
    "end": "145280"
  },
  {
    "text": "and ultimately ultimately they recall every single one of them oh great foam it's a bit of a shame and",
    "start": "145280",
    "end": "154240"
  },
  {
    "text": "whilst we're on the subject of phones there are going to be some demos in this",
    "start": "154240",
    "end": "160040"
  },
  {
    "text": "presentation we've pre-recorded them because it would be impossible to do them in real time and so sequences may",
    "start": "160040",
    "end": "166580"
  },
  {
    "text": "be shortened and some of them are short shortened by quite a lot but it still",
    "start": "166580",
    "end": "172490"
  },
  {
    "text": "just to give you an overview of how these things work and also what we kind of want you to take away from from this",
    "start": "172490",
    "end": "178640"
  },
  {
    "text": "presentation is not all the individual details about how every single component works it's about the principles of",
    "start": "178640",
    "end": "185600"
  },
  {
    "text": "designing with operations in mind and to get an idea of some of the kind of things you can do so it's more about is",
    "start": "185600",
    "end": "192760"
  },
  {
    "text": "more about the end goal of designing with ops in mind and some of the possibilities so don't try and remember",
    "start": "192760",
    "end": "198860"
  },
  {
    "text": "everything so when you're working backwards for the people you're trying",
    "start": "198860",
    "end": "204590"
  },
  {
    "text": "to help reliability is critical people want reliable products at the end of the day",
    "start": "204590",
    "end": "211000"
  },
  {
    "text": "maintainability to provide a good product you have to be able to maintain it you have to be able to meet the",
    "start": "211000",
    "end": "217580"
  },
  {
    "text": "demands of changing requirements can be changing business requirements legal requirements compliance requirements the",
    "start": "217580",
    "end": "225830"
  },
  {
    "text": "product has to be supportable if you can't support the products you can't maintain it and you'll end up with a useless product",
    "start": "225830",
    "end": "233350"
  },
  {
    "text": "obviously the product has to be usable so the end user has to be able to use the product it has to be extensible so",
    "start": "233350",
    "end": "242320"
  },
  {
    "text": "when when you have a product out in the market people want people normally want",
    "start": "242320",
    "end": "247459"
  },
  {
    "text": "product features to be added and it has to be it has to be cost effective",
    "start": "247459",
    "end": "253850"
  },
  {
    "text": "doesn't mean cheap has to be cost effective",
    "start": "253850",
    "end": "258280"
  },
  {
    "text": "the design of your workload should include how it will be deployed tested",
    "start": "259859",
    "end": "265120"
  },
  {
    "text": "updated and operated designing with ops in mind and having a well-defined",
    "start": "265120",
    "end": "270669"
  },
  {
    "text": "process on launching your workloads makes operations easier and more",
    "start": "270669",
    "end": "275740"
  },
  {
    "text": "effective deployment ties back the few operational outcomes that Alex just",
    "start": "275740",
    "end": "283180"
  },
  {
    "text": "mentioned like reliability maintainability support ability and",
    "start": "283180",
    "end": "288300"
  },
  {
    "text": "extensibility the deployment should use a constant process across and across",
    "start": "288300",
    "end": "295419"
  },
  {
    "text": "your environments in order to ensure that you are ready to go live testing",
    "start": "295419",
    "end": "303550"
  },
  {
    "text": "ties back to operational outcomes like reliability and usability ultimate",
    "start": "303550",
    "end": "308680"
  },
  {
    "text": "testing workloads ensure that there's an easy visibility if things are not",
    "start": "308680",
    "end": "313690"
  },
  {
    "text": "functioning as they should change ties back to operational outcomes like",
    "start": "313690",
    "end": "319840"
  },
  {
    "text": "reliability maintainability support ability and extensibility if you get",
    "start": "319840",
    "end": "326350"
  },
  {
    "text": "deployment right making a change becomes easier it's basically redeploy or deploying",
    "start": "326350",
    "end": "331510"
  },
  {
    "text": "updated workloads with already existing deployment methods monitoring ties back",
    "start": "331510",
    "end": "340630"
  },
  {
    "text": "to operational outcomes like reliability and support ability ensure your workloads have built in health checks",
    "start": "340630",
    "end": "347550"
  },
  {
    "text": "that report on service availability throughout the stack logging ties back",
    "start": "347550",
    "end": "354250"
  },
  {
    "text": "to operational outcomes like support ability and affordability ensure",
    "start": "354250",
    "end": "359650"
  },
  {
    "text": "workload has sufficient logs and design with automated logging in mind and",
    "start": "359650",
    "end": "366810"
  },
  {
    "text": "tracing ties back to operational outcomes like reliability and support ability provide means to trace your",
    "start": "366810",
    "end": "373990"
  },
  {
    "text": "workload see interconnection and performance between all the different components",
    "start": "373990",
    "end": "380940"
  },
  {
    "start": "382000",
    "end": "382000"
  },
  {
    "text": "okay so don't leave don't leave operations guessing this is not what you",
    "start": "386060",
    "end": "392460"
  },
  {
    "text": "want to have happened so I'm sure we've all been in this situation well at least all of you cut at my age you're older",
    "start": "392460",
    "end": "399960"
  },
  {
    "text": "anyway you know in traditional IT you had the separation of development and",
    "start": "399960",
    "end": "405660"
  },
  {
    "text": "operations and for some of you that might still exist some of you might be you might be in a DevOps environment if",
    "start": "405660",
    "end": "412860"
  },
  {
    "text": "we're a DevOps environment even worse because you don't want to be throwing yourself a curve ball right that's a that's a really bad situation to be in",
    "start": "412860",
    "end": "420350"
  },
  {
    "text": "so designing with ops in mind is about avoiding this scenario so for deployment",
    "start": "420350",
    "end": "428280"
  },
  {
    "text": "you want to automate your workloads to avoid to avoid operational issues but by",
    "start": "428280",
    "end": "433350"
  },
  {
    "text": "automating the process you you try and eliminate human error in fact you do eliminate human error to a certain",
    "start": "433350",
    "end": "439380"
  },
  {
    "text": "extent unless you've got an error in your automation for testing",
    "start": "439380",
    "end": "446670"
  },
  {
    "text": "you should automate your workload testing as much as you possibly can it's probably the most difficult part to",
    "start": "446670",
    "end": "452520"
  },
  {
    "text": "automate for change you should build change into your design so you should",
    "start": "452520",
    "end": "459600"
  },
  {
    "text": "design with the fact that you're going to have to change your workload in the future and this is this is really",
    "start": "459600",
    "end": "465540"
  },
  {
    "text": "important and a lot of the time you have a an end goal of the feature set so you",
    "start": "465540",
    "end": "470940"
  },
  {
    "text": "have to deliver when people don't think about the fact that they have to they have to change that workload at some",
    "start": "470940",
    "end": "476430"
  },
  {
    "text": "point in the future monitoring so design",
    "start": "476430",
    "end": "482040"
  },
  {
    "text": "your workloads so that you can give operations a good a good idea of what's",
    "start": "482040",
    "end": "488970"
  },
  {
    "text": "happening or if something's gone wrong what has happened and we'll talk about more of all these things and and the",
    "start": "488970",
    "end": "496020"
  },
  {
    "text": "same goes for logging and for tracing as well",
    "start": "496020",
    "end": "500990"
  },
  {
    "text": "if I look back at my operations experience I can remember few occasions",
    "start": "505870",
    "end": "511640"
  },
  {
    "text": "when I would get involved in the deployment of a new product quite late",
    "start": "511640",
    "end": "517370"
  },
  {
    "text": "in the stage so it has already been developed and the apprec-- the operations would basically get a",
    "start": "517370",
    "end": "523099"
  },
  {
    "text": "link to the deployment artifact from from developers and then it would be our",
    "start": "523099",
    "end": "529250"
  },
  {
    "text": "job to kind of deployed throughout different environments and make sure that things work as they should and",
    "start": "529250",
    "end": "535580"
  },
  {
    "text": "sometimes they would get some like documentation and requirements but often there will be not so much details",
    "start": "535580",
    "end": "543500"
  },
  {
    "text": "provided so we will be going back and forth trying to get more information from developers to make sure that",
    "start": "543500",
    "end": "549110"
  },
  {
    "text": "everything works as expected and to avoid this situation you should think",
    "start": "549110",
    "end": "555050"
  },
  {
    "text": "about design for the deployment already when you are designing your application",
    "start": "555050",
    "end": "561340"
  },
  {
    "text": "first treat your infrastructure as a code build and rebuild your resources in",
    "start": "561340",
    "end": "570020"
  },
  {
    "text": "a safe manner without manual interaction and AWS CloudFormation provides a common",
    "start": "570020",
    "end": "576260"
  },
  {
    "text": "language that you can use to provision all the infrastructure for your cloud environment use shared design standards",
    "start": "576260",
    "end": "586660"
  },
  {
    "text": "approved and hardened applications throughout different environments AWS",
    "start": "586660",
    "end": "592550"
  },
  {
    "text": "Service Catalog allows you to centrally manage commonly used IT services and",
    "start": "592550",
    "end": "599150"
  },
  {
    "text": "enabling users to find and deploy only the approved IT services they require",
    "start": "599150",
    "end": "606280"
  },
  {
    "text": "version control it enables you to track the changes between environments it",
    "start": "606280",
    "end": "613520"
  },
  {
    "text": "allows you to have a faster development and deployment lifecycle AWS code commit",
    "start": "613520",
    "end": "621440"
  },
  {
    "text": "is a fully managed source control service that makes it easy for companies",
    "start": "621440",
    "end": "627530"
  },
  {
    "text": "to host secure and highly available git repositories automated deployments",
    "start": "627530",
    "end": "636650"
  },
  {
    "text": "design your workloads to support automated deployments - and for so you",
    "start": "636650",
    "end": "645170"
  },
  {
    "text": "can develop deploy reliably and rapidly across different environments AWS code",
    "start": "645170",
    "end": "654709"
  },
  {
    "text": "deploy is a service that automates software deployment to different compute services including Amazon ec2 AWS lambda",
    "start": "654709",
    "end": "663470"
  },
  {
    "text": "and services running on premise design",
    "start": "663470",
    "end": "670130"
  },
  {
    "text": "your workloads to support continuous delivery and continuous integration and here we have a service called AWS code",
    "start": "670130",
    "end": "677300"
  },
  {
    "text": "pipeline that allows you to the support continuous integration and continuous delivery so it basically builds tests",
    "start": "677300",
    "end": "685910"
  },
  {
    "text": "and deploys your code as per the release process that you define and next I would",
    "start": "685910",
    "end": "694430"
  },
  {
    "text": "like to show you a demo of cloud formation and code commit and that's Alex already mentioned it will be a very",
    "start": "694430",
    "end": "700610"
  },
  {
    "text": "recorded so first we'll go to cloud",
    "start": "700610",
    "end": "708320"
  },
  {
    "text": "formation console and here are several",
    "start": "708320",
    "end": "713330"
  },
  {
    "text": "options but I want to quickly show you the designer this basically allows you",
    "start": "713330",
    "end": "718730"
  },
  {
    "text": "to visualize your cold formation resources and see how they are connected",
    "start": "718730",
    "end": "725150"
  },
  {
    "text": "so we are uploading an existing CloudFormation template that we have prepared for this demo and now you can",
    "start": "725150",
    "end": "731420"
  },
  {
    "text": "see all the different components that this that we are going to deploy and you",
    "start": "731420",
    "end": "738890"
  },
  {
    "text": "can also inspect individual components and even go and see how they are defined within the cloud formation and do",
    "start": "738890",
    "end": "745520"
  },
  {
    "text": "changes if you so decide what we are going to do next is actually",
    "start": "745520",
    "end": "751959"
  },
  {
    "text": "go back and create a cloud formation stack so we go back to pulse formation",
    "start": "751959",
    "end": "758009"
  },
  {
    "text": "control and chose to create a stack and again we are uploading a template that I",
    "start": "758009",
    "end": "763839"
  },
  {
    "text": "just showed you with the designer and in",
    "start": "763839",
    "end": "770529"
  },
  {
    "text": "the next step we can set parameters and you can use parameters to ensure that",
    "start": "770529",
    "end": "777519"
  },
  {
    "text": "you do not need to hard-code any wearables in your template so you can set them up in the creation time and",
    "start": "777519",
    "end": "785949"
  },
  {
    "text": "we are just adding all the necessary details and that the template requires and afterwards we just review on what",
    "start": "785949",
    "end": "795759"
  },
  {
    "text": "resources are going to be created and we also have to acknowledge that there might be some I am resources that to get",
    "start": "795759",
    "end": "801910"
  },
  {
    "text": "created and now you can see that the called formation resource creation is in",
    "start": "801910",
    "end": "807189"
  },
  {
    "text": "process and you can inspect the events and see what how they get updated and",
    "start": "807189",
    "end": "813339"
  },
  {
    "text": "what resources get created and now the creation is complete we go to a double",
    "start": "813339",
    "end": "822009"
  },
  {
    "text": "a telescope commit console here and we just the confirmation stack that we just",
    "start": "822009",
    "end": "829509"
  },
  {
    "text": "we just deployed created an repository but this repository is empty so what we",
    "start": "829509",
    "end": "835749"
  },
  {
    "text": "are going to do actually now is there going to our local machine and we'll clone the repository and then we copy",
    "start": "835749",
    "end": "843220"
  },
  {
    "text": "your code there and we can use the standard git tools to add them commit",
    "start": "843220",
    "end": "849730"
  },
  {
    "text": "code to the repository",
    "start": "849730",
    "end": "853470"
  },
  {
    "text": "and then if we go back to the code commit console you will see that you",
    "start": "858880",
    "end": "866210"
  },
  {
    "text": "will see that the code has been committed there and you can also see the history of commits at the moment we have",
    "start": "866210",
    "end": "873020"
  },
  {
    "text": "just one so you can see what time the commit was done and by whom and there is also an option to visualize the commits",
    "start": "873020",
    "end": "880070"
  },
  {
    "text": "at the moment it's just the initial commit so there is only one",
    "start": "880070",
    "end": "884829"
  },
  {
    "start": "887000",
    "end": "887000"
  },
  {
    "text": "so actually before I gone to design for testing one thing that we've well I've",
    "start": "891030",
    "end": "896550"
  },
  {
    "text": "forgotten to put in that slide is once you've got once you've got infrastructure was code then you've got",
    "start": "896550",
    "end": "903720"
  },
  {
    "text": "all the benefits of all the all the tools you can use for coding such as version control for your infrastructure",
    "start": "903720",
    "end": "909750"
  },
  {
    "text": "so just bear that in mind as well that can make infrastructure a lot easier so",
    "start": "909750",
    "end": "915450"
  },
  {
    "text": "I I'm I'm thinking back now to a time a while ago where I was involved in this",
    "start": "915450",
    "end": "923550"
  },
  {
    "text": "this really big software projects and it",
    "start": "923550",
    "end": "929100"
  },
  {
    "text": "wasn't designed for testing and it made testing really really difficult it wasn't designed for testing it certainly",
    "start": "929100",
    "end": "934800"
  },
  {
    "text": "wasn't designed for automated testing and that meant whenever we did a release we had to devs had to test it Operations",
    "start": "934800",
    "end": "943410"
  },
  {
    "text": "has to test it and then the business had to test it and it took days if not weeks to go from the stage where we were ready",
    "start": "943410",
    "end": "950700"
  },
  {
    "text": "to deploy and to go through to go through testing and actually deploy it",
    "start": "950700",
    "end": "956089"
  },
  {
    "text": "it was a really painful experience and actually it became so unsustainable that",
    "start": "956089",
    "end": "961230"
  },
  {
    "text": "the project got cancelled largely because of that so you should use",
    "start": "961230",
    "end": "967920"
  },
  {
    "text": "continuous delivery to quickly enable you to deploy your workloads but also",
    "start": "967920",
    "end": "973320"
  },
  {
    "text": "automate your testing as well and you can use code pipeline to do this so if",
    "start": "973320",
    "end": "983220"
  },
  {
    "text": "you automate your testing along with some of these other tools allows you to automate fully your complete pipeline",
    "start": "983220",
    "end": "990800"
  },
  {
    "text": "and this includes things such as unit testing so to isolate each part of your workload so that it functions correctly",
    "start": "990800",
    "end": "998660"
  },
  {
    "text": "integration testing functional testing stress testing performance testing and",
    "start": "998660",
    "end": "1004910"
  },
  {
    "text": "usability testing unit testing might be the easiest ones",
    "start": "1004910",
    "end": "1010149"
  },
  {
    "text": "of those to automate but ideally you want to be able to automate all of those tests also try and use the light",
    "start": "1010149",
    "end": "1020560"
  },
  {
    "text": "synthetic transactions so synthetic transactions allow you to test for for",
    "start": "1020560",
    "end": "1026290"
  },
  {
    "text": "operational outcomes so say I've got an e-commerce site I could I could create a",
    "start": "1026290",
    "end": "1033040"
  },
  {
    "text": "synthetic transaction to to do a test purchase and I expect the purchase to",
    "start": "1033040",
    "end": "1038410"
  },
  {
    "text": "take no longer than 1 seconds because that's what the business has said is acceptable if it takes longer than a",
    "start": "1038410",
    "end": "1044860"
  },
  {
    "text": "second we know we've got a problem we could choose not to deploy or we could inform the business do you want to",
    "start": "1044860",
    "end": "1050590"
  },
  {
    "text": "continue based on based on the results of this test and then it's great deep",
    "start": "1050590",
    "end": "1058720"
  },
  {
    "text": "pings and health checks into your workloads so we have elastic load",
    "start": "1058720",
    "end": "1064150"
  },
  {
    "text": "balances which I'm sure a lot of you are probably aware of you can health check your ec2 instances behind those low",
    "start": "1064150",
    "end": "1071049"
  },
  {
    "text": "balances now you can do something simple like have a page that just that just",
    "start": "1071049",
    "end": "1076330"
  },
  {
    "text": "responds and if it responds with a 200 response then great everything's running",
    "start": "1076330",
    "end": "1082179"
  },
  {
    "text": "the trouble is with that if your web server is respond is reliant upon say a",
    "start": "1082179",
    "end": "1089080"
  },
  {
    "text": "database server then if your connectivity to that database server is not available or the database server",
    "start": "1089080",
    "end": "1096370"
  },
  {
    "text": "itself is not available your web server is still saying it's working so try and make those those health",
    "start": "1096370",
    "end": "1103360"
  },
  {
    "text": "checks at least too deep so you're going and checking your dependencies as well that way if the database server is down",
    "start": "1103360",
    "end": "1111400"
  },
  {
    "text": "or you lose connectivity from your web server to the database server that ec2",
    "start": "1111400",
    "end": "1117340"
  },
  {
    "text": "instance would be taken out of the load balancer and it would be will be replaced if it was in a appropriate auto",
    "start": "1117340",
    "end": "1123460"
  },
  {
    "text": "scaling group so again another pre-recorded demo that",
    "start": "1123460",
    "end": "1130279"
  },
  {
    "text": "these would take way too long if we didn't pre-record them so this is co pipeline so we're gonna look at the",
    "start": "1130279",
    "end": "1137120"
  },
  {
    "text": "CloudFormation template that we created earlier and i'm gonna look at the",
    "start": "1137120",
    "end": "1143929"
  },
  {
    "text": "outputs from the cloud formation template you can see here that a co pipeline URL is one of the outputs so",
    "start": "1143929",
    "end": "1151340"
  },
  {
    "text": "this is co pipeline and you can see we've already committed the source code but we've got a failure here on a task",
    "start": "1151340",
    "end": "1157640"
  },
  {
    "text": "or validate run book so this is checking has my run but being updated in the last four hours before I've done the",
    "start": "1157640",
    "end": "1164059"
  },
  {
    "text": "deployment and it hasn't so we're gonna go and edit the run book so I'm just",
    "start": "1164059",
    "end": "1173779"
  },
  {
    "text": "adding another step here and this is done this check is done using a lambda",
    "start": "1173779",
    "end": "1179389"
  },
  {
    "text": "so I save the changes and then I can go back to code pipeline and then I can",
    "start": "1179389",
    "end": "1185630"
  },
  {
    "text": "retry that stage in code pipeline and it will it will continue through the code pipeline so it's going to reinvent that",
    "start": "1185630",
    "end": "1193159"
  },
  {
    "text": "lambda function check that the run box being updated then it's going to use AWS",
    "start": "1193159",
    "end": "1198620"
  },
  {
    "text": "code build to build my in this case it's a go application and then it goes",
    "start": "1198620",
    "end": "1204919"
  },
  {
    "text": "through to staging where it's going to deploy infrastructure using cloud formation again then it's gonna use AWS",
    "start": "1204919",
    "end": "1211309"
  },
  {
    "text": "code deploy to deploy the code that I've built into the infrastructure that I've built and then we're gonna use lambda",
    "start": "1211309",
    "end": "1218330"
  },
  {
    "text": "again to run a synthetic transaction and it's failed planned failure this one",
    "start": "1218330",
    "end": "1226760"
  },
  {
    "text": "so I don't know if we can make it out but it's because there's a latency breach and this is because we've",
    "start": "1226760",
    "end": "1233570"
  },
  {
    "text": "purposefully written a loop to simulate CPU works so we've purposefully",
    "start": "1233570",
    "end": "1239120"
  },
  {
    "text": "introduced latency so I've just reduced that loop and then we're going to recommit this code and push it back to",
    "start": "1239120",
    "end": "1246820"
  },
  {
    "text": "cope commit you see that kokum it automatically picks it up and then it runs through the pipeline again",
    "start": "1246820",
    "end": "1253840"
  },
  {
    "text": "obviously this is sped up",
    "start": "1253840",
    "end": "1257559"
  },
  {
    "text": "there's going through the build goes back to the staging again redeploys the",
    "start": "1258860",
    "end": "1264740"
  },
  {
    "text": "code and then does a synthetic transaction test again and this time",
    "start": "1264740",
    "end": "1270910"
  },
  {
    "text": "passes and we've put a manual approval gate in here you don't have to do this",
    "start": "1270910",
    "end": "1276730"
  },
  {
    "text": "we've we've done it here and you just put a reason to approve or reject we",
    "start": "1276730",
    "end": "1281990"
  },
  {
    "text": "prove it and then we go through to production and it does the same thing",
    "start": "1281990",
    "end": "1288070"
  },
  {
    "text": "and here I've gone through this very quickly get the load balancer get the URL and here you can just see that it's",
    "start": "1288070",
    "end": "1296900"
  },
  {
    "text": "working",
    "start": "1296900",
    "end": "1299320"
  },
  {
    "start": "1300000",
    "end": "1300000"
  },
  {
    "text": "so again if I look back at my operations experience I had the pleasure to be on",
    "start": "1304590",
    "end": "1310630"
  },
  {
    "text": "coal quite for quite a long time and I still remember this late night when I",
    "start": "1310630",
    "end": "1316840"
  },
  {
    "text": "would be sleeping and I would be waking up by a page and then I would try to",
    "start": "1316840",
    "end": "1321940"
  },
  {
    "text": "kind of go through the alert and vlogs and different services just to",
    "start": "1321940",
    "end": "1327460"
  },
  {
    "text": "understand what is what is not working and it is no fun to do that in the",
    "start": "1327460",
    "end": "1332830"
  },
  {
    "text": "middle of the night and when you do not have colleagues that you can ask and get help from so think about monitoring",
    "start": "1332830",
    "end": "1340750"
  },
  {
    "text": "already at the design stage is the application doing what it is supposed to do and in a timely fashion Amazon Cloud",
    "start": "1340750",
    "end": "1349480"
  },
  {
    "text": "watch is a monitoring service for AWS cloud resources and the applications you",
    "start": "1349480",
    "end": "1355180"
  },
  {
    "text": "run on AWS also look into operational",
    "start": "1355180",
    "end": "1362950"
  },
  {
    "text": "and security trends changes made to your workloads and applications on regular",
    "start": "1362950",
    "end": "1368110"
  },
  {
    "text": "basis with AWS cloud trail you can discover and troubleshoot security and",
    "start": "1368110",
    "end": "1374920"
  },
  {
    "text": "operational issues by capturing a comprehensive history of changes that",
    "start": "1374920",
    "end": "1380530"
  },
  {
    "text": "occurred within your environment designed for centralized monitoring it",
    "start": "1380530",
    "end": "1387250"
  },
  {
    "text": "is a waste of time to log on to different servers to see the trends when",
    "start": "1387250",
    "end": "1393130"
  },
  {
    "text": "it comes to custom cloud watch metrics work back up backwards from what you want the outcome to be so let's say if",
    "start": "1393130",
    "end": "1399730"
  },
  {
    "text": "you want the page load time to be below one second provide the tools to actually see this within your workload and also",
    "start": "1399730",
    "end": "1410260"
  },
  {
    "text": "developers know the application the best they so they should ensure that they",
    "start": "1410260",
    "end": "1415840"
  },
  {
    "text": "help operations operation teams by providing health checks and visibility",
    "start": "1415840",
    "end": "1422290"
  },
  {
    "text": "on how the application is performing",
    "start": "1422290",
    "end": "1426000"
  },
  {
    "text": "also think about what would be a good metric to scale your application on",
    "start": "1429100",
    "end": "1436720"
  },
  {
    "text": "often infrastructure metrics like CPU and memory is not the answer here so you",
    "start": "1436720",
    "end": "1442909"
  },
  {
    "text": "can use the custom cloud watch metrics to design a scaling scaling metric that",
    "start": "1442909",
    "end": "1448940"
  },
  {
    "text": "works for your application and monitoring is essential to operations to",
    "start": "1448940",
    "end": "1456169"
  },
  {
    "text": "discover that something has gone wrong and to the more details you provide that",
    "start": "1456169",
    "end": "1462110"
  },
  {
    "text": "easier it will be for the operations to resolve the issues so again another",
    "start": "1462110",
    "end": "1475669"
  },
  {
    "start": "1469000",
    "end": "1469000"
  },
  {
    "text": "short story but this is this is going back a few years but I remember writing",
    "start": "1475669",
    "end": "1482269"
  },
  {
    "text": "a root cause analysis document I'm sure a lot of people have done that for an",
    "start": "1482269",
    "end": "1488779"
  },
  {
    "text": "outage on a massive ecommerce platform and unfortunately we had I mean we had",
    "start": "1488779",
    "end": "1496490"
  },
  {
    "text": "Hardware lobs we had application logs we had networking logs but they were all in",
    "start": "1496490",
    "end": "1501559"
  },
  {
    "text": "different places application logs weren't centralized so we had to log onto every single application server to",
    "start": "1501559",
    "end": "1508100"
  },
  {
    "text": "get those and actually finding the root cause analysis of this problem was a",
    "start": "1508100",
    "end": "1514279"
  },
  {
    "text": "nightmare had to get all the logs getting them all all together put them into a spreadsheet and then to make it",
    "start": "1514279",
    "end": "1520220"
  },
  {
    "text": "even worse we had to NTP services and they were out they were out of sync with",
    "start": "1520220",
    "end": "1527659"
  },
  {
    "text": "each other because one was pointing to a time service that didn't exist anymore so it was a complete nightmare",
    "start": "1527659",
    "end": "1533120"
  },
  {
    "text": "so in the end it turned out it was a it was a it was an application issue but it",
    "start": "1533120",
    "end": "1539179"
  },
  {
    "text": "took looking at the infrastructure logs to find out that it was an application issue and the key here is to centralize",
    "start": "1539179",
    "end": "1546799"
  },
  {
    "text": "your logging and to do that you can use Amazon CloudWatch",
    "start": "1546799",
    "end": "1553060"
  },
  {
    "text": "and again for all the thing you can use AWS cloud trail and centralizing your",
    "start": "1553060",
    "end": "1559150"
  },
  {
    "text": "logs it makes it much easier to identify the root cause of an issue if you can look at all of your application logs all",
    "start": "1559150",
    "end": "1566260"
  },
  {
    "text": "of your infrastructure logs networking logs DNS logs all in one place all with",
    "start": "1566260",
    "end": "1571570"
  },
  {
    "text": "one search it makes it a lot easier so that's the key first thing centralize your logging platform and store the",
    "start": "1571570",
    "end": "1578620"
  },
  {
    "text": "workloads and infrastructure logs together it's so much easier when you can see what the application is doing and what the infrastructure is doing in",
    "start": "1578620",
    "end": "1585250"
  },
  {
    "text": "the same place so in in AWS you can use",
    "start": "1585250",
    "end": "1591280"
  },
  {
    "text": "vended logs we call them for VPC flow logs these are essentially your networking logs and route 53 for your",
    "start": "1591280",
    "end": "1598630"
  },
  {
    "text": "DNS logs so you can have your work load logs infrastructure logs networking logs",
    "start": "1598630",
    "end": "1604030"
  },
  {
    "text": "and DNS logs all in one place in traddles logs and again farm reinforces",
    "start": "1604030",
    "end": "1612550"
  },
  {
    "text": "amongst the development teams especially for workload logs if you can find a way",
    "start": "1612550",
    "end": "1620650"
  },
  {
    "text": "to get key logging information from your application straight into something like Amazon Cloud watch so you've got all",
    "start": "1620650",
    "end": "1627190"
  },
  {
    "text": "your logs in one place it makes it much easier and this provides vital information for operations and for the",
    "start": "1627190",
    "end": "1634120"
  },
  {
    "text": "development teams to look at the root cause for issues so I'm going to again",
    "start": "1634120",
    "end": "1641470"
  },
  {
    "text": "another pre-recorded demo of cloud watch so I've got a production instance here",
    "start": "1641470",
    "end": "1647470"
  },
  {
    "text": "from what we created earlier and I'm just going to kill it now I'm gonna go back to cloud watch I've got an alarm",
    "start": "1647470",
    "end": "1654220"
  },
  {
    "text": "here that tells me if I've got less than two production instances running and",
    "start": "1654220",
    "end": "1660880"
  },
  {
    "text": "looking at the details at the bottom there you should be able to see that it sends an SNS alert too and this SNS",
    "start": "1660880",
    "end": "1670030"
  },
  {
    "text": "alert is using a lambda function called log demo and all of that all that does",
    "start": "1670030",
    "end": "1677470"
  },
  {
    "text": "is create a log in a log in a cloud works log stream now in the real world",
    "start": "1677470",
    "end": "1682630"
  },
  {
    "text": "that's not going to be much use but this is just giving you an idea of what's possible since here here's my log and this is the",
    "start": "1682630",
    "end": "1691610"
  },
  {
    "text": "latest event in that log so this is just saying I hadn't alerts and I'm logging",
    "start": "1691610",
    "end": "1696620"
  },
  {
    "text": "me alert not very useful but you can do a lot more useful things than this so",
    "start": "1696620",
    "end": "1702950"
  },
  {
    "text": "again I'm going to go back into the cloud watch console and this time I'm",
    "start": "1702950",
    "end": "1708650"
  },
  {
    "text": "going to show you how you can create metrics from logs so in this particular",
    "start": "1708650",
    "end": "1713929"
  },
  {
    "text": "application in the synthetic synthetic transaction we were measuring latency to",
    "start": "1713929",
    "end": "1721580"
  },
  {
    "text": "see whether it was acceptable to put into production so here I'm going to",
    "start": "1721580",
    "end": "1727309"
  },
  {
    "text": "filter the log events because I know there's one for time and it's not a",
    "start": "1727309",
    "end": "1733490"
  },
  {
    "text": "great way of displaying it there's no way you could use this as a metric at the moment but what you can do is create a metric filter so I've already set one",
    "start": "1733490",
    "end": "1741140"
  },
  {
    "text": "up here and this is how it's greater do you create a filter pattern and you can",
    "start": "1741140",
    "end": "1748340"
  },
  {
    "text": "show the results based on some test logs and then you assign you can assign these",
    "start": "1748340",
    "end": "1755990"
  },
  {
    "text": "as variables so I just I'm just interested in latency so I'm creating",
    "start": "1755990",
    "end": "1761510"
  },
  {
    "text": "latency as a variable and that place you can see the example latencies and then",
    "start": "1761510",
    "end": "1769610"
  },
  {
    "text": "I'm going to show you dashboards so we've pre created a dashboard for this",
    "start": "1769610",
    "end": "1775160"
  },
  {
    "text": "and in that dashboard you can see latency there so that latency after",
    "start": "1775160",
    "end": "1782240"
  },
  {
    "text": "staging is where we're running that synthetic transaction test and this is",
    "start": "1782240",
    "end": "1789340"
  },
  {
    "text": "production and this is where we don't have the latency issue I refreshed a few",
    "start": "1789340",
    "end": "1794390"
  },
  {
    "text": "times to avoid DNS dad sorry to make it cache DNS and here you can see in the",
    "start": "1794390",
    "end": "1799610"
  },
  {
    "text": "bottom right there's timing in milliseconds there for staging before",
    "start": "1799610",
    "end": "1805130"
  },
  {
    "text": "and after we corrected the error so it was about 600 milliseconds and went down",
    "start": "1805130",
    "end": "1810350"
  },
  {
    "text": "to a couple of hundred and you can see that reflected in the graph and also you can see when you move along the graph in",
    "start": "1810350",
    "end": "1818440"
  },
  {
    "text": "cloudlets dashboards it you can see the it also reflects on the other graphs as",
    "start": "1818440",
    "end": "1825669"
  },
  {
    "text": "well so you can easily compare in this example a spike in CPU on staging with",
    "start": "1825669",
    "end": "1832210"
  },
  {
    "text": "the latency after staging graph and you can add fresh holds there so you can see",
    "start": "1832210",
    "end": "1838720"
  },
  {
    "text": "anything above red is bad and that's where we're saying we don't want to go into production if we've got that issue",
    "start": "1838720",
    "end": "1846870"
  },
  {
    "start": "1847000",
    "end": "1847000"
  },
  {
    "text": "an example again of a thing that maybe is a lot of my listings to the bug is",
    "start": "1852140",
    "end": "1857420"
  },
  {
    "text": "when you actually get some kind of requests and complaint from a user that a request is failing sometimes so what",
    "start": "1857420",
    "end": "1864830"
  },
  {
    "text": "you do is going and logging on to different services checking log files",
    "start": "1864830",
    "end": "1870500"
  },
  {
    "text": "testing the connection between different components manually and it takes a lot",
    "start": "1870500",
    "end": "1876290"
  },
  {
    "text": "of time and effort so instead you should design your application with tracing in",
    "start": "1876290",
    "end": "1882140"
  },
  {
    "text": "mind so it enables an end-to-end view of",
    "start": "1882140",
    "end": "1887270"
  },
  {
    "text": "how your application is performing and we have an AWS x-ray service that helps",
    "start": "1887270",
    "end": "1893090"
  },
  {
    "text": "to analyze and debug production distributed applications especially those built with micro services",
    "start": "1893090",
    "end": "1900320"
  },
  {
    "text": "architecture so we sector you can build and trace your workloads and you can",
    "start": "1900320",
    "end": "1907400"
  },
  {
    "text": "understand how applications are performing and as x-ray is providing",
    "start": "1907400",
    "end": "1915020"
  },
  {
    "text": "this end-to-end view of your request it also shows a map of your application and",
    "start": "1915020",
    "end": "1920510"
  },
  {
    "text": "all the components and how they are connected and you can discover applicational issues like find out what",
    "start": "1920510",
    "end": "1928580"
  },
  {
    "text": "the latency is and you can follow the request pass to pinpoint to which",
    "start": "1928580",
    "end": "1933950"
  },
  {
    "text": "particular service is causing a problem it provides a good overview for the",
    "start": "1933950",
    "end": "1939350"
  },
  {
    "text": "operations to be more proactive and discover issues faster and it's time for",
    "start": "1939350",
    "end": "1946460"
  },
  {
    "text": "another demo and I want to show you how x-ray works so first we go to on x-ray",
    "start": "1946460",
    "end": "1952400"
  },
  {
    "text": "console and we will see a very simple service map here of the service that Alex was deploying with code pipeline",
    "start": "1952400",
    "end": "1959870"
  },
  {
    "text": "before but still you can see there inspect the request and like I don't go to an individual trace and see how the",
    "start": "1959870",
    "end": "1967430"
  },
  {
    "text": "request is performing but this is not much inside so what we will do is we",
    "start": "1967430",
    "end": "1972530"
  },
  {
    "text": "will actually create a sample application here that you can also do if you want to test how x-ray works and it",
    "start": "1972530",
    "end": "1980780"
  },
  {
    "text": "is using cloud formations I'm going so I will not go more into details here but again we are specifying some",
    "start": "1980780",
    "end": "1986680"
  },
  {
    "text": "parameters that are required to create this application",
    "start": "1986680",
    "end": "1992340"
  },
  {
    "text": "so now the CloudFormation stack has been completed and you can also see all the",
    "start": "1997390",
    "end": "2003700"
  },
  {
    "text": "resources that it created next we will go to an ec2 console as part of this",
    "start": "2003700",
    "end": "2010120"
  },
  {
    "text": "code formation stack there was an ec2 instance created and this instance is",
    "start": "2010120",
    "end": "2015190"
  },
  {
    "text": "basically helping us to generate some sample requests so we just go and find",
    "start": "2015190",
    "end": "2022030"
  },
  {
    "text": "the public endpoint of the instance so we can we can go and create generate",
    "start": "2022030",
    "end": "2028690"
  },
  {
    "text": "some sample requests that we can later inspect with the x-ray x-ray console so",
    "start": "2028690",
    "end": "2036910"
  },
  {
    "text": "all we need to do here is basically just start the application and it will generate some logs and requests so now",
    "start": "2036910",
    "end": "2045190"
  },
  {
    "text": "if I go back to the service map you will see that there are more details here you can see that we have an instance created",
    "start": "2045190",
    "end": "2050740"
  },
  {
    "text": "we have a dynamo DB and we have an SNS topic and you can see this green circle",
    "start": "2050740",
    "end": "2057370"
  },
  {
    "text": "with a little bit of yellow there in some cases it basically shows the successful requests against failed",
    "start": "2057370",
    "end": "2063250"
  },
  {
    "text": "requests and errors and you can also see",
    "start": "2063250",
    "end": "2068530"
  },
  {
    "text": "the average later latency or request time and then you can go and inspect an",
    "start": "2068530",
    "end": "2075040"
  },
  {
    "text": "individual request and trace it through different services and components so we",
    "start": "2075040",
    "end": "2083290"
  },
  {
    "text": "can look at dynamo DB there and an SMS topic and it also provides you raw data",
    "start": "2083290",
    "end": "2090700"
  },
  {
    "text": "of your request",
    "start": "2090700",
    "end": "2093869"
  },
  {
    "start": "2106000",
    "end": "2106000"
  },
  {
    "text": "so when we say you can try that for yourself by the way if you go to the x-ray console and click getting started",
    "start": "2109620",
    "end": "2115770"
  },
  {
    "text": "it basically produces what we've just shown you so I'm gonna talk excuse me",
    "start": "2115770",
    "end": "2123090"
  },
  {
    "text": "I'm going to talk about checklist but I want to mention lambda we've used it a",
    "start": "2123090",
    "end": "2128640"
  },
  {
    "text": "few times already in a couple of the demos so lambda automatically runs your",
    "start": "2128640",
    "end": "2135600"
  },
  {
    "text": "code as serverless functions so you don't have to manage any infrastructure",
    "start": "2135600",
    "end": "2140760"
  },
  {
    "text": "and it's useful useful for a whole bunch of things it can be useful for your",
    "start": "2140760",
    "end": "2146090"
  },
  {
    "text": "applications or to code your applications in but it's really really extremely useful in operations so we've",
    "start": "2146090",
    "end": "2154350"
  },
  {
    "text": "used it for example to to check if the if the run book had been updated we also",
    "start": "2154350",
    "end": "2160230"
  },
  {
    "text": "used it to to do the synthetic transaction and it can also be used so",
    "start": "2160230",
    "end": "2170820"
  },
  {
    "text": "cloud watch events or cloud watch alarms can be used to trigger to trigger lambdas to produce automated responses",
    "start": "2170820",
    "end": "2179100"
  },
  {
    "text": "such as run box or play books so key",
    "start": "2179100",
    "end": "2184890"
  },
  {
    "text": "thing is first used operational checklists so you can you can automate some of this with AWS code pipeline as",
    "start": "2184890",
    "end": "2191640"
  },
  {
    "text": "we showed you you can automate security",
    "start": "2191640",
    "end": "2197220"
  },
  {
    "text": "evaluations with Amazon inspector and you can automate compliance checks with",
    "start": "2197220",
    "end": "2203460"
  },
  {
    "text": "AWS config we haven't got time to go into how all of these things work and exactly what they do but these things",
    "start": "2203460",
    "end": "2210240"
  },
  {
    "text": "can also help you automate this and remove some of the the barriers that you may have to getting things into",
    "start": "2210240",
    "end": "2216540"
  },
  {
    "text": "production some of the gates basically if you automate as much as possible and you have pre free pre approved changes",
    "start": "2216540",
    "end": "2223170"
  },
  {
    "text": "and these are involved in your pre approved changes you can get rid of those gates and it should ease your path",
    "start": "2223170",
    "end": "2229650"
  },
  {
    "text": "to production this one I'm particularly passionate about checks outside the",
    "start": "2229650",
    "end": "2235830"
  },
  {
    "text": "system so staffing so do you have the capacity do you have",
    "start": "2235830",
    "end": "2242520"
  },
  {
    "text": "enough people for when you've deployed your application support it do you have",
    "start": "2242520",
    "end": "2248100"
  },
  {
    "text": "the capability do you have the availability I've been in situations",
    "start": "2248100",
    "end": "2253170"
  },
  {
    "text": "where the business have said here deploy this into production it's got to be up 24 by 7 yeah but we don't have we don't",
    "start": "2253170",
    "end": "2261119"
  },
  {
    "text": "have any people that are employed to respond out of hours I'm sure some of",
    "start": "2261119",
    "end": "2267060"
  },
  {
    "text": "you might have been there before and then are these people in the right location so run books do you have",
    "start": "2267060",
    "end": "2276450"
  },
  {
    "text": "well-defined procedures for four well-known scenarios and these could be",
    "start": "2276450",
    "end": "2282660"
  },
  {
    "text": "manual or automated ideally you want them automated there's nothing wrong with having the manual at first and then",
    "start": "2282660",
    "end": "2289710"
  },
  {
    "text": "try to automate them and play books do you have well present well-designed procedures for unknown events equally",
    "start": "2289710",
    "end": "2297720"
  },
  {
    "text": "important and these could start off for something like something's gone wrong we",
    "start": "2297720",
    "end": "2302820"
  },
  {
    "text": "don't know what it is we'll call Dave that could be your playbook to start with and documentation",
    "start": "2302820",
    "end": "2309410"
  },
  {
    "text": "obviously so this should includes requirements so the business requirements you need to know what the",
    "start": "2309410",
    "end": "2316170"
  },
  {
    "text": "application is supposed to do design architecture testing maintenance",
    "start": "2316170",
    "end": "2322230"
  },
  {
    "text": "operations and end-user documentation",
    "start": "2322230",
    "end": "2327290"
  },
  {
    "text": "so in traditional idea change can take a long time so you would create a change",
    "start": "2329970",
    "end": "2335700"
  },
  {
    "text": "request you would get it approved then you would find somebody to actually implement the change and then you would",
    "start": "2335700",
    "end": "2342690"
  },
  {
    "text": "test it and if things didn't work as expected you will kind of be back to the square one and software is not static it is",
    "start": "2342690",
    "end": "2350430"
  },
  {
    "text": "improved as per per feedback from users and monitoring systems and when",
    "start": "2350430",
    "end": "2357000"
  },
  {
    "text": "designing your workloads you should think about how change will affect your",
    "start": "2357000",
    "end": "2362310"
  },
  {
    "text": "your application AWS CloudFormation change that enables you to see how",
    "start": "2362310",
    "end": "2369569"
  },
  {
    "text": "changes will affect running resources before you actually implement the change so you can update workloads with",
    "start": "2369569",
    "end": "2376589"
  },
  {
    "text": "confidence when you get get a greatest change that it enables you to see what",
    "start": "2376589",
    "end": "2384839"
  },
  {
    "text": "updates will be made to the system and you can also use this information for",
    "start": "2384839",
    "end": "2390690"
  },
  {
    "text": "documentation for example to automate documentation and because you have all the documentation around what resources",
    "start": "2390690",
    "end": "2398490"
  },
  {
    "text": "will be affected you can also build in an approval process if if it is required",
    "start": "2398490",
    "end": "2404339"
  },
  {
    "text": "for example for production database updates and also you can do an automatic",
    "start": "2404339",
    "end": "2410339"
  },
  {
    "text": "rollback for non-destructive changes and we'll look at example of replacing",
    "start": "2410339",
    "end": "2417000"
  },
  {
    "text": "standalone web server with an auto scaling group and the load balancer so",
    "start": "2417000",
    "end": "2422220"
  },
  {
    "text": "it's called formation change that you would have the original stack that created the web server and then you",
    "start": "2422220",
    "end": "2428970"
  },
  {
    "text": "would create a change set where you would create auto scaling group and auto scaling load launch configuration and",
    "start": "2428970",
    "end": "2435630"
  },
  {
    "text": "you would create a load balancer and then you would remove the instance so you can view the change set and as an",
    "start": "2435630",
    "end": "2443369"
  },
  {
    "text": "example for the change that I just mentioned here you would see that there",
    "start": "2443369",
    "end": "2448530"
  },
  {
    "text": "will be an auto scaling group and large configuration added and then also a load balancer and",
    "start": "2448530",
    "end": "2453990"
  },
  {
    "text": "would get remove so you can preview this before you actually execute any changes",
    "start": "2453990",
    "end": "2459810"
  },
  {
    "text": "and you can also use this for documentation or if you require an approval process around this and",
    "start": "2459810",
    "end": "2467720"
  },
  {
    "text": "afterwards what you can do is you can either create additional change sets so",
    "start": "2467720",
    "end": "2473910"
  },
  {
    "start": "2471000",
    "end": "2471000"
  },
  {
    "text": "for example if something there didn't look right you can create an additional change stage just to see how changing",
    "start": "2473910",
    "end": "2480990"
  },
  {
    "text": "the infrastructure another way would affect underlying resources or if you're happy with it you can execute the change",
    "start": "2480990",
    "end": "2487650"
  },
  {
    "text": "set and the confirmation will update your stack and resources",
    "start": "2487650",
    "end": "2493490"
  },
  {
    "start": "2494000",
    "end": "2494000"
  },
  {
    "text": "so patching I'm sure it's everyone's favorite topic so passing is obviously",
    "start": "2499450",
    "end": "2506750"
  },
  {
    "text": "essential for operations and in most cases it's going to either be enforced",
    "start": "2506750",
    "end": "2512180"
  },
  {
    "text": "by by the business as as a policy or because of the technology choices made",
    "start": "2512180",
    "end": "2520540"
  },
  {
    "text": "but patching sole patent solve problems so it's important I obviously solves security",
    "start": "2520540",
    "end": "2526760"
  },
  {
    "text": "vulnerabilities but also operating system or application stability or it",
    "start": "2526760",
    "end": "2533570"
  },
  {
    "text": "fixes a bug and this this comes back to working backwards from the people you're",
    "start": "2533570",
    "end": "2539660"
  },
  {
    "text": "trying to help in the first place it comes back to reliability that software",
    "start": "2539660",
    "end": "2544670"
  },
  {
    "text": "is more reliable or patched operating systems it's more maintainable more",
    "start": "2544670",
    "end": "2550370"
  },
  {
    "text": "supportable and more usable and patching",
    "start": "2550370",
    "end": "2556220"
  },
  {
    "text": "is not easy you need to think about things like automation maintenance",
    "start": "2556220",
    "end": "2563360"
  },
  {
    "text": "windows dependencies frequency are you gonna and your patching strategy you",
    "start": "2563360",
    "end": "2569210"
  },
  {
    "text": "you're gonna patch running servers or are you going to replace them with a whole bunch of new servers with a",
    "start": "2569210",
    "end": "2574460"
  },
  {
    "text": "Bluegreen deployment or something so design your workloads say that",
    "start": "2574460",
    "end": "2579620"
  },
  {
    "text": "infrastructure can be patched and designed for maintenance windows and automating as as as much as possible and",
    "start": "2579620",
    "end": "2587030"
  },
  {
    "text": "you can use AWS Systems Manager to to do some of this automation and you can use",
    "start": "2587030",
    "end": "2593560"
  },
  {
    "text": "Amazon inspector for security compliance and this is an example of where's the",
    "start": "2593560",
    "end": "2599690"
  },
  {
    "text": "diagram of how you can automatically patch in this instance in AMI so what",
    "start": "2599690",
    "end": "2606560"
  },
  {
    "text": "Systems Manager does is it executes an automation and this is called a an",
    "start": "2606560",
    "end": "2612200"
  },
  {
    "text": "automation document in a document automation document is just a set of instructions the systems manager follows",
    "start": "2612200",
    "end": "2619190"
  },
  {
    "text": "and we have a load of predefined automation documents and for this",
    "start": "2619190",
    "end": "2624350"
  },
  {
    "text": "example it would be one of two it would be update Windows ami or update Linux",
    "start": "2624350",
    "end": "2629840"
  },
  {
    "text": "ami and what it would do is it would launched a temporary instance based on your existing ami it would optionally",
    "start": "2629840",
    "end": "2637220"
  },
  {
    "text": "run a startup script that you provided it will then update AWS tools update any",
    "start": "2637220",
    "end": "2642860"
  },
  {
    "text": "distribution packages and then optionally run a shutdown scripts as well and after that you get your package",
    "start": "2642860",
    "end": "2648860"
  },
  {
    "text": "ami I just quickly want to touch other",
    "start": "2648860",
    "end": "2656120"
  },
  {
    "start": "2651000",
    "end": "2651000"
  },
  {
    "text": "operational design considerations apart the things we already discussed like deployment change testing main",
    "start": "2656120",
    "end": "2663370"
  },
  {
    "text": "monitoring and so on so first being security what are your compliance",
    "start": "2663370",
    "end": "2668890"
  },
  {
    "text": "requirements design with least privileged access in mind reliability",
    "start": "2668890",
    "end": "2675260"
  },
  {
    "text": "and high availability what is your recovery time and point objective think",
    "start": "2675260",
    "end": "2680480"
  },
  {
    "text": "about multi easier require deployment or regional failover designed for",
    "start": "2680480",
    "end": "2687290"
  },
  {
    "text": "performance keep up with change in demand and technology when designing your workloads how easy it is to scale",
    "start": "2687290",
    "end": "2693740"
  },
  {
    "text": "and how it easy it is to replace a particular component and design for cost",
    "start": "2693740",
    "end": "2699290"
  },
  {
    "text": "optimization right sides are instances consider reserved instances also monitor",
    "start": "2699290",
    "end": "2704870"
  },
  {
    "text": "around spend and just briefly to touch on data management when you're designing",
    "start": "2704870",
    "end": "2711290"
  },
  {
    "text": "your application you should think about what is your data lifecycle so when can",
    "start": "2711290",
    "end": "2717500"
  },
  {
    "text": "you actually move your data to archiving or glacier with in case of Amazon s3",
    "start": "2717500",
    "end": "2723500"
  },
  {
    "text": "storage or when can the data be deleted it's much easier to get this right",
    "start": "2723500",
    "end": "2729200"
  },
  {
    "text": "during the design stage than do it later on",
    "start": "2729200",
    "end": "2734109"
  },
  {
    "text": "okay so hopefully if you do all of these things you shouldn't be woken up in the",
    "start": "2736650",
    "end": "2741990"
  },
  {
    "text": "middle of the night okay might happen occasionally but it should happen less they should be less you know there's",
    "start": "2741990",
    "end": "2748710"
  },
  {
    "text": "moments where you will sunburn somebody else in your team then magically pull around rabbit out of the Hat and you",
    "start": "2748710",
    "end": "2754500"
  },
  {
    "text": "think how the hell did we manage to fix that and overall you should just have less pain so if you take anything away",
    "start": "2754500",
    "end": "2762270"
  },
  {
    "text": "from this it's designed with operations in mind when you're designing your workloads make sure you're thinking",
    "start": "2762270",
    "end": "2769470"
  },
  {
    "text": "about how operations are going to manage that workload once it's put into production and then you should be able",
    "start": "2769470",
    "end": "2775980"
  },
  {
    "text": "to do more sleeping so please everyone",
    "start": "2775980",
    "end": "2781520"
  },
  {
    "text": "fill in the survey we really appreciate any feedback and come see legal myself",
    "start": "2781520",
    "end": "2788370"
  },
  {
    "text": "will be in the operating and optimizing area outside and ready for anything",
    "start": "2788370",
    "end": "2794910"
  },
  {
    "text": "booth and yeah thank you very much thank you [Applause]",
    "start": "2794910",
    "end": "2802510"
  }
]