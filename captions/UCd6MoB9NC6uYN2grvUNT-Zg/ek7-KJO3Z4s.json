[
  {
    "text": "Welcome to 'Back to Basics'. I am Anita Singh. \nIn today's episode, I'll be talking about  ",
    "start": "5433",
    "end": "11880"
  },
  {
    "text": "database migrations. We'll be focusing primarily on \ndatabase migrations using Babelfish.   ",
    "start": "11880",
    "end": "20400"
  },
  {
    "text": "Babelfish is a tool that helps you migrate your applications \nrunning on Microsoft SQL Server databases to  ",
    "start": "20400",
    "end": "27599"
  },
  {
    "text": "Aurora PostgreSQL in AWS. In recent years, we have \nobserved that many companies have a strong desire  ",
    "start": "27600",
    "end": "36240"
  },
  {
    "text": "to break free from commercial databases such \nas Microsoft SQL Server. One of the main driving  ",
    "start": "36240",
    "end": "43560"
  },
  {
    "text": "factors is licensing. Companies want to avoid high \nlicensing costs and the complexities of adhering ",
    "start": "43560",
    "end": "51240"
  },
  {
    "text": "to vendor licensing terms. Applications \ntoday have very high availability and  ",
    "start": "51240",
    "end": "57240"
  },
  {
    "text": "scalability requirements they require dynamic \nand flexible scaling options with optimal cost  ",
    "start": "57240",
    "end": "64199"
  },
  {
    "text": "and performance. Which is easily available \nwith a cloud native database such as Aurora.  ",
    "start": "64200",
    "end": "70439"
  },
  {
    "text": "Over the years, I have performed multiple \nheterogeneous database migrations and one common  ",
    "start": "70440",
    "end": "76680"
  },
  {
    "text": "observation is that the most challenging and time \nconsuming task is converting, rewriting, and testing  ",
    "start": "76680",
    "end": "84540"
  },
  {
    "text": "the application code changes. It involves multiple \nrounds of code rewrites and performance testing.  ",
    "start": "84540",
    "end": "91320"
  },
  {
    "text": "so let's talk about Babelfish. Babelfish is an \nopen source tool that helps migrating applications  ",
    "start": "91860",
    "end": "98820"
  },
  {
    "text": "with minimal or no code changes, and hence it can \nsave us up to 50 percent of the total database  ",
    "start": "99600",
    "end": "106680"
  },
  {
    "text": "migration effort. Babelfish also relieves \nus from the commercial database licensing  ",
    "start": "106680",
    "end": "112620"
  },
  {
    "text": "terms and conditions - as Aurora PostgreSQL \ndoes not have any licensing restrictions.  ",
    "start": "112620",
    "end": "118980"
  },
  {
    "text": "So, here's what a typical migration pattern \nlooks like for an application when migrating  ",
    "start": "119700",
    "end": "124860"
  },
  {
    "text": "from Microsoft SQL Server to Aurora PostgreSQL without Babelfish. In this example we have an  ",
    "start": "124860",
    "end": "131880"
  },
  {
    "text": "application that uses a SQL Server connectivity \ndriver to connect to the SQL Server database  ",
    "start": "131880",
    "end": "138420"
  },
  {
    "text": "endpoint using the tabular data stream protocol \nTDS and makes the database calls using T-SQL - ",
    "start": "138420",
    "end": "146040"
  },
  {
    "text": "the proprietary language for SQL Server. We want to migrate the SQL Server database to  ",
    "start": "146040",
    "end": "151739"
  },
  {
    "text": "Aurora PostgreSQL and of course the application \nshould be able to communicate with PostgreSQL.  ",
    "start": "151740",
    "end": "158160"
  },
  {
    "text": "So we have three major tasks to work on: Migrate \nthe schema which can be done using AWS Schema  ",
    "start": "158160",
    "end": "166020"
  },
  {
    "text": "Conversion Tool (SCT). It might involve some manual \nfixes or conversions for mismatched data types.  ",
    "start": "166020",
    "end": "172860"
  },
  {
    "text": "Second, migrate the data using AWS Data \nMigration Service (DMS). And the third task  ",
    "start": "173640",
    "end": "180960"
  },
  {
    "text": "is to rewrite the entire code such that the \napplication is compatible with PostgreSQL.",
    "start": "180960",
    "end": "187620"
  },
  {
    "text": "The code change involves countless development \nefforts and also we need to switch drivers to make the  ",
    "start": "188160",
    "end": "196560"
  },
  {
    "text": "application compatible with PostgreSQL. The most \nchallenging task still remains - rewriting the code.  ",
    "start": "196560",
    "end": "204239"
  },
  {
    "text": "Now let's learn how a migration pattern looks with Babelfish. Babelfish expedites the  ",
    "start": "205080",
    "end": "211680"
  },
  {
    "text": "heterogeneous database migration \nbecause of its two key features.  ",
    "start": "211680",
    "end": "217140"
  },
  {
    "text": "First it supports the SQL Server specific \nTDS protocol for client server interactions  ",
    "start": "217140",
    "end": "223680"
  },
  {
    "text": "and secondly Babelfish makes Aurora PostgreSQL \nunderstand T-SQL. These two features let you  ",
    "start": "224340",
    "end": "231959"
  },
  {
    "text": "migrate your applications without having to change \nall your SQL code and without having to change any  ",
    "start": "231960",
    "end": "238500"
  },
  {
    "text": "client server connectivity drivers. When you create \nyour Aurora PostgreSQL database cluster with the",
    "start": "238500",
    "end": "245400"
  },
  {
    "text": "Babelfish feature turned on. Aurora provisions \nthe cluster with a PostgreSQL database named  ",
    "start": "245400",
    "end": "253079"
  },
  {
    "text": "Babelfish_DB. This database is where all \nmigrated SQL Server objects reside. When connecting  ",
    "start": "253080",
    "end": "261959"
  },
  {
    "text": "through the TDS port you can continue to use the T-SQL code as you were doing prior to the migration.  ",
    "start": "261960",
    "end": "269280"
  },
  {
    "text": "Babelfish is my go-to pattern for migrating \napplications running on Microsoft SQL Server  ",
    "start": "270000",
    "end": "276240"
  },
  {
    "text": "databases to Aurora PostgreSQL databases. \nIt helped us expedite our migration journey  ",
    "start": "276240",
    "end": "282960"
  },
  {
    "text": "because we got to keep most of our code in T-SQL. \nThanks for watching 'Back to Basics', please check  ",
    "start": "282960",
    "end": "291060"
  },
  {
    "text": "out the links below for more information. \nSee you next time!",
    "start": "291060",
    "end": "300653"
  }
]