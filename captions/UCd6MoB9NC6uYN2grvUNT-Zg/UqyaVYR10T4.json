[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "hi everyone William Garcia partner",
    "start": "280",
    "end": "1920"
  },
  {
    "text": "Solutions architect at Amazon web",
    "start": "1920",
    "end": "3719"
  },
  {
    "text": "services today we are back to talk about",
    "start": "3719",
    "end": "5879"
  },
  {
    "text": "service mesh in red at open Chief",
    "start": "5879",
    "end": "8040"
  },
  {
    "text": "service on AWS or Roosa I'm also with",
    "start": "8040",
    "end": "10679"
  },
  {
    "text": "Michael from Red Hat hey Michael hey",
    "start": "10679",
    "end": "12759"
  },
  {
    "text": "well I'm a manag open Chef black belt",
    "start": "12759",
    "end": "14799"
  },
  {
    "text": "that works on Red Hats manag cloud",
    "start": "14799",
    "end": "16480"
  },
  {
    "text": "services team and it's a pleasure to be",
    "start": "16480",
    "end": "18279"
  },
  {
    "text": "here good to have you so today we wanted",
    "start": "18279",
    "end": "21119"
  },
  {
    "text": "to uh talk about some of the key",
    "start": "21119",
    "end": "22920"
  },
  {
    "text": "benefits of Rosa adoption typically",
    "start": "22920",
    "end": "25960"
  },
  {
    "text": "comes from its flexibility in compute",
    "start": "25960",
    "end": "28519"
  },
  {
    "text": "choices uh resist icy and security at",
    "start": "28519",
    "end": "31439"
  },
  {
    "text": "the platform level and I'd like also to",
    "start": "31439",
    "end": "33719"
  },
  {
    "text": "start understanding what we can do to",
    "start": "33719",
    "end": "35559"
  },
  {
    "text": "improve the management of our",
    "start": "35559",
    "end": "37040"
  },
  {
    "text": "applications yeah so Rosa is being chose",
    "start": "37040",
    "end": "39760"
  },
  {
    "text": "by organizations because it's a fully",
    "start": "39760",
    "end": "41680"
  },
  {
    "text": "managed Enterprise ready application",
    "start": "41680",
    "end": "44039"
  },
  {
    "text": "platform so deploying microservices onto",
    "start": "44039",
    "end": "46680"
  },
  {
    "text": "Rosa is a great first step and the",
    "start": "46680",
    "end": "48760"
  },
  {
    "text": "Second Step could be to employ a isio",
    "start": "48760",
    "end": "51039"
  },
  {
    "text": "service mesh and that service mesh gives",
    "start": "51039",
    "end": "53000"
  },
  {
    "text": "you great visibility over how Network",
    "start": "53000",
    "end": "55760"
  },
  {
    "text": "and service to service communication is",
    "start": "55760",
    "end": "57719"
  },
  {
    "text": "happening okay so perhaps",
    "start": "57719",
    "end": "60840"
  },
  {
    "start": "60000",
    "end": "300000"
  },
  {
    "text": "before we talk about use cases I think",
    "start": "60840",
    "end": "62559"
  },
  {
    "text": "it would be good to cover the Core",
    "start": "62559",
    "end": "64239"
  },
  {
    "text": "Concepts of a service mesh yeah so open",
    "start": "64239",
    "end": "66360"
  },
  {
    "text": "shift service mesh is deployed into your",
    "start": "66360",
    "end": "68360"
  },
  {
    "text": "cluster via the operator Hub so it's",
    "start": "68360",
    "end": "70360"
  },
  {
    "text": "very easy to get started it's based on",
    "start": "70360",
    "end": "72400"
  },
  {
    "text": "ISO the Upstream project and it's broken",
    "start": "72400",
    "end": "74920"
  },
  {
    "text": "up into two major components the first",
    "start": "74920",
    "end": "77040"
  },
  {
    "text": "being the control plane so let's talk a",
    "start": "77040",
    "end": "79200"
  },
  {
    "text": "little bit about what that control plane",
    "start": "79200",
    "end": "80720"
  },
  {
    "text": "is made out of right so the control",
    "start": "80720",
    "end": "82759"
  },
  {
    "text": "plane is made out of stod which has four",
    "start": "82759",
    "end": "85920"
  },
  {
    "text": "subcomponents those four subcomponents",
    "start": "85920",
    "end": "88320"
  },
  {
    "text": "are gal C pilot and mixer those four",
    "start": "88320",
    "end": "92159"
  },
  {
    "text": "subcomponents give us some very key",
    "start": "92159",
    "end": "94640"
  },
  {
    "text": "components that we would need inside of",
    "start": "94640",
    "end": "96119"
  },
  {
    "text": "a service mesh the first one being the",
    "start": "96119",
    "end": "98479"
  },
  {
    "text": "ability to manage certificates right so",
    "start": "98479",
    "end": "100880"
  },
  {
    "text": "we have a we can have a secure control",
    "start": "100880",
    "end": "102920"
  },
  {
    "text": "plane because the certificate management",
    "start": "102920",
    "end": "105240"
  },
  {
    "text": "is being uh provided to us from Isel we",
    "start": "105240",
    "end": "109159"
  },
  {
    "text": "also have the ability to Define Network",
    "start": "109159",
    "end": "111240"
  },
  {
    "text": "policies so those policies allow us to",
    "start": "111240",
    "end": "113640"
  },
  {
    "text": "secure traffic between certain services",
    "start": "113640",
    "end": "116079"
  },
  {
    "text": "or delimit traffic between others and",
    "start": "116079",
    "end": "118719"
  },
  {
    "text": "another key component of that control",
    "start": "118719",
    "end": "120399"
  },
  {
    "text": "plane is that fine grain observability",
    "start": "120399",
    "end": "122799"
  },
  {
    "text": "and Telemetry data we can take a look at",
    "start": "122799",
    "end": "125200"
  },
  {
    "text": "how the flow of traffic is operating",
    "start": "125200",
    "end": "127479"
  },
  {
    "text": "between services and we can see when",
    "start": "127479",
    "end": "129720"
  },
  {
    "text": "there are failures or when there are",
    "start": "129720",
    "end": "132319"
  },
  {
    "text": "outages makes sense so now this is the",
    "start": "132319",
    "end": "136160"
  },
  {
    "text": "control plane the brain of the service",
    "start": "136160",
    "end": "138000"
  },
  {
    "text": "mesh how do we meshify an application",
    "start": "138000",
    "end": "140680"
  },
  {
    "text": "sure so the second major component of",
    "start": "140680",
    "end": "142560"
  },
  {
    "text": "that service mesh is going to be the",
    "start": "142560",
    "end": "144000"
  },
  {
    "text": "data plane so the data plane is made up",
    "start": "144000",
    "end": "146680"
  },
  {
    "text": "of envoy proxies so I'm going to draw",
    "start": "146680",
    "end": "148680"
  },
  {
    "text": "some Envoy proxies on the screen",
    "start": "148680",
    "end": "151200"
  },
  {
    "text": "here and you can see that these Envoy",
    "start": "151200",
    "end": "154879"
  },
  {
    "text": "proxies are going to be deployed",
    "start": "154879",
    "end": "157080"
  },
  {
    "text": "automatically by the service mesh",
    "start": "157080",
    "end": "159159"
  },
  {
    "text": "they're going to be sitting next to",
    "start": "159159",
    "end": "160440"
  },
  {
    "text": "application containers which we'll get",
    "start": "160440",
    "end": "161840"
  },
  {
    "text": "to in a second there's also one other",
    "start": "161840",
    "end": "163599"
  },
  {
    "text": "part of the data plane the data plane",
    "start": "163599",
    "end": "165599"
  },
  {
    "text": "all also include your Ingress and egress",
    "start": "165599",
    "end": "167879"
  },
  {
    "text": "gateways the Ingress and egress gateways",
    "start": "167879",
    "end": "170480"
  },
  {
    "text": "are the entry point and exit points of",
    "start": "170480",
    "end": "172840"
  },
  {
    "text": "that service mesh so any traffic flowing",
    "start": "172840",
    "end": "174879"
  },
  {
    "text": "in and out of your service mesh whether",
    "start": "174879",
    "end": "177519"
  },
  {
    "text": "that's the public internet or to another",
    "start": "177519",
    "end": "179760"
  },
  {
    "text": "service in public Cloud would flow",
    "start": "179760",
    "end": "181480"
  },
  {
    "text": "through that Ingress service mesh okay",
    "start": "181480",
    "end": "184280"
  },
  {
    "text": "so the interest of having this enoy",
    "start": "184280",
    "end": "186560"
  },
  {
    "text": "technology proxy technology on top of",
    "start": "186560",
    "end": "189840"
  },
  {
    "text": "your applications is that it's going to",
    "start": "189840",
    "end": "191599"
  },
  {
    "text": "help you decouple routing type of logic",
    "start": "191599",
    "end": "194680"
  },
  {
    "text": "so you don't have to bring that into",
    "start": "194680",
    "end": "196159"
  },
  {
    "text": "libraries within your code and so that",
    "start": "196159",
    "end": "198400"
  },
  {
    "text": "you know helps you to scale that across",
    "start": "198400",
    "end": "200280"
  },
  {
    "text": "different type of applications using",
    "start": "200280",
    "end": "202760"
  },
  {
    "text": "different languages for example exactly",
    "start": "202760",
    "end": "205040"
  },
  {
    "text": "so let's take a look at how that might",
    "start": "205040",
    "end": "206400"
  },
  {
    "text": "look like if we have two deployments",
    "start": "206400",
    "end": "208519"
  },
  {
    "text": "inside of a Rosa cluster so you can see",
    "start": "208519",
    "end": "210560"
  },
  {
    "text": "here if you were to name this deployment",
    "start": "210560",
    "end": "212720"
  },
  {
    "text": "Fu an application engineer would deploy",
    "start": "212720",
    "end": "215560"
  },
  {
    "text": "their container in this configuration",
    "start": "215560",
    "end": "218040"
  },
  {
    "text": "and you might have a second application",
    "start": "218040",
    "end": "219879"
  },
  {
    "text": "running alongside it here let's call",
    "start": "219879",
    "end": "221959"
  },
  {
    "text": "this one",
    "start": "221959",
    "end": "223120"
  },
  {
    "text": "bar with this application",
    "start": "223120",
    "end": "226400"
  },
  {
    "text": "container and you can see here that the",
    "start": "226400",
    "end": "228840"
  },
  {
    "text": "application engineer is focused on",
    "start": "228840",
    "end": "230599"
  },
  {
    "text": "deploying those containers into this",
    "start": "230599",
    "end": "233360"
  },
  {
    "text": "configuration and what we're going to",
    "start": "233360",
    "end": "235159"
  },
  {
    "text": "actually see is that in a service mesh",
    "start": "235159",
    "end": "237120"
  },
  {
    "text": "these two will be connected to the envoy",
    "start": "237120",
    "end": "239319"
  },
  {
    "text": "proxy and service to service",
    "start": "239319",
    "end": "240879"
  },
  {
    "text": "communication will occur through the",
    "start": "240879",
    "end": "242799"
  },
  {
    "text": "envoy proxy",
    "start": "242799",
    "end": "244360"
  },
  {
    "text": "itself okay another fantastic part or",
    "start": "244360",
    "end": "247239"
  },
  {
    "text": "configuration in a service message is",
    "start": "247239",
    "end": "248840"
  },
  {
    "text": "that these Envoy proxies are",
    "start": "248840",
    "end": "250040"
  },
  {
    "text": "automatically deployed for you and",
    "start": "250040",
    "end": "251959"
  },
  {
    "text": "they're going to be controlled by that",
    "start": "251959",
    "end": "253519"
  },
  {
    "text": "control plane so the control plane is",
    "start": "253519",
    "end": "255360"
  },
  {
    "text": "delivering the certificates to the envoy",
    "start": "255360",
    "end": "257239"
  },
  {
    "text": "proxies they're delivering the policies",
    "start": "257239",
    "end": "259440"
  },
  {
    "text": "to the envoy proxies to determine if a",
    "start": "259440",
    "end": "261880"
  },
  {
    "text": "service can speak to another and it's",
    "start": "261880",
    "end": "263919"
  },
  {
    "text": "also capturing all the Telemetry data",
    "start": "263919",
    "end": "266440"
  },
  {
    "text": "right we also have the the Ingress and",
    "start": "266440",
    "end": "268720"
  },
  {
    "text": "the egress Gateway so if we've got users",
    "start": "268720",
    "end": "270680"
  },
  {
    "text": "that sit outside of the cluster maybe in",
    "start": "270680",
    "end": "273160"
  },
  {
    "text": "the public internet they're going to be",
    "start": "273160",
    "end": "275120"
  },
  {
    "text": "hitting the Ingress and egress gateways",
    "start": "275120",
    "end": "277440"
  },
  {
    "text": "which are going to allow you to flow",
    "start": "277440",
    "end": "278759"
  },
  {
    "text": "traffic into let's say the fu",
    "start": "278759",
    "end": "280800"
  },
  {
    "text": "application container via that Envoy",
    "start": "280800",
    "end": "282800"
  },
  {
    "text": "proxy I see so perhaps let's start",
    "start": "282800",
    "end": "285800"
  },
  {
    "text": "covering some of the common use cases uh",
    "start": "285800",
    "end": "289080"
  },
  {
    "text": "for service to service communication",
    "start": "289080",
    "end": "291400"
  },
  {
    "text": "typically you would want to bring for",
    "start": "291400",
    "end": "293320"
  },
  {
    "text": "example encryption or allow disallow",
    "start": "293320",
    "end": "296160"
  },
  {
    "text": "communication between Services yeah so",
    "start": "296160",
    "end": "297960"
  },
  {
    "text": "number one option for wise people choose",
    "start": "297960",
    "end": "301479"
  },
  {
    "start": "300000",
    "end": "340000"
  },
  {
    "text": "to use a service mesh is the",
    "start": "301479",
    "end": "304680"
  },
  {
    "text": "security so in this case our control",
    "start": "304680",
    "end": "308160"
  },
  {
    "text": "plane can actually deliver certificates",
    "start": "308160",
    "end": "309960"
  },
  {
    "text": "to the envoy proxies and encrypt traffic",
    "start": "309960",
    "end": "312560"
  },
  {
    "text": "between those two Envoy proxies",
    "start": "312560",
    "end": "314280"
  },
  {
    "text": "themselves this is going to be",
    "start": "314280",
    "end": "315800"
  },
  {
    "text": "provisioned via Mutual TLS and you've",
    "start": "315800",
    "end": "318440"
  },
  {
    "text": "got the ability now to decouple that",
    "start": "318440",
    "end": "320919"
  },
  {
    "text": "logic of having en Cryptor traffic",
    "start": "320919",
    "end": "322800"
  },
  {
    "text": "between two application containers so an",
    "start": "322800",
    "end": "325680"
  },
  {
    "text": "application engineer isn't worried about",
    "start": "325680",
    "end": "327600"
  },
  {
    "text": "ensuring that their service is communic",
    "start": "327600",
    "end": "329919"
  },
  {
    "text": "over an encrypted pathway they'll just",
    "start": "329919",
    "end": "332759"
  },
  {
    "text": "rely on the envoy proxy doing that for",
    "start": "332759",
    "end": "334880"
  },
  {
    "text": "them fantastic encryption in two ways as",
    "start": "334880",
    "end": "337639"
  },
  {
    "text": "well yeah another component is going to",
    "start": "337639",
    "end": "339960"
  },
  {
    "text": "be traffic shaping so traffic shaping",
    "start": "339960",
    "end": "342360"
  },
  {
    "start": "340000",
    "end": "450000"
  },
  {
    "text": "gives you the ability to separate",
    "start": "342360",
    "end": "345120"
  },
  {
    "text": "traffic between Services based on some",
    "start": "345120",
    "end": "347479"
  },
  {
    "text": "sort certain rules so for example maybe",
    "start": "347479",
    "end": "350160"
  },
  {
    "text": "I want to deploy a second version of the",
    "start": "350160",
    "end": "352360"
  },
  {
    "text": "fu uh the fu project or the fu",
    "start": "352360",
    "end": "355199"
  },
  {
    "text": "application if I wanted to split off my",
    "start": "355199",
    "end": "357520"
  },
  {
    "text": "traffic maybe I only want to send a",
    "start": "357520",
    "end": "359600"
  },
  {
    "text": "small amount of it to the second version",
    "start": "359600",
    "end": "362280"
  },
  {
    "text": "right so this is now talking about",
    "start": "362280",
    "end": "364800"
  },
  {
    "text": "patterns like Canary releases or AB",
    "start": "364800",
    "end": "367840"
  },
  {
    "text": "testing for example exactly so here",
    "start": "367840",
    "end": "370720"
  },
  {
    "text": "maybe we would want to send only 10% of",
    "start": "370720",
    "end": "372919"
  },
  {
    "text": "traffic to V2 on our on our first",
    "start": "372919",
    "end": "376120"
  },
  {
    "text": "deployment of it because we want to",
    "start": "376120",
    "end": "377800"
  },
  {
    "text": "verify that that traffic flowing from",
    "start": "377800",
    "end": "379520"
  },
  {
    "text": "the public internet is hitting V2 and",
    "start": "379520",
    "end": "382000"
  },
  {
    "text": "it's and it's doing as we as we expected",
    "start": "382000",
    "end": "384280"
  },
  {
    "text": "to perform in production excellent and",
    "start": "384280",
    "end": "387199"
  },
  {
    "text": "another example might be how we control",
    "start": "387199",
    "end": "389199"
  },
  {
    "text": "the routing Behavior within our cluster",
    "start": "389199",
    "end": "391720"
  },
  {
    "text": "there are really two major ones that",
    "start": "391720",
    "end": "393440"
  },
  {
    "text": "we'll talk about today which is",
    "start": "393440",
    "end": "394880"
  },
  {
    "text": "path-based routing and header based",
    "start": "394880",
    "end": "396960"
  },
  {
    "text": "routing so path-based routing for",
    "start": "396960",
    "end": "400199"
  },
  {
    "text": "example would",
    "start": "400199",
    "end": "401599"
  },
  {
    "text": "be you defining a route for your",
    "start": "401599",
    "end": "404319"
  },
  {
    "text": "applications for or bar and then",
    "start": "404319",
    "end": "407599"
  },
  {
    "text": "enabling you essentially to expose end",
    "start": "407599",
    "end": "409840"
  },
  {
    "text": "points or sub end points behind the",
    "start": "409840",
    "end": "411400"
  },
  {
    "text": "domain name for example giving you a",
    "start": "411400",
    "end": "413479"
  },
  {
    "text": "choice to you know also control",
    "start": "413479",
    "end": "415400"
  },
  {
    "text": "visioning through URLs uh if you want to",
    "start": "415400",
    "end": "418479"
  },
  {
    "text": "U similarly you can do that with headers",
    "start": "418479",
    "end": "421199"
  },
  {
    "text": "uh you can you know control where the",
    "start": "421199",
    "end": "423199"
  },
  {
    "text": "traffic goes based on the presence of a",
    "start": "423199",
    "end": "425319"
  },
  {
    "text": "particular header key value for example",
    "start": "425319",
    "end": "428039"
  },
  {
    "text": "so that could be User Group uh one goes",
    "start": "428039",
    "end": "432080"
  },
  {
    "text": "to uh version one of your application as",
    "start": "432080",
    "end": "434520"
  },
  {
    "text": "an example yeah so this is great so this",
    "start": "434520",
    "end": "437120"
  },
  {
    "text": "is these are three major use cases for",
    "start": "437120",
    "end": "439879"
  },
  {
    "text": "why a customer might choose to use a",
    "start": "439879",
    "end": "442599"
  },
  {
    "text": "service mesh in their microservices",
    "start": "442599",
    "end": "444319"
  },
  {
    "text": "architecture Rosa also comes bundled",
    "start": "444319",
    "end": "446840"
  },
  {
    "text": "with a set of services that complement",
    "start": "446840",
    "end": "449039"
  },
  {
    "text": "this right so Rosa provides uh a full on",
    "start": "449039",
    "end": "452280"
  },
  {
    "start": "450000",
    "end": "594000"
  },
  {
    "text": "stack of monitoring logging and",
    "start": "452280",
    "end": "454479"
  },
  {
    "text": "observability tools that are built into",
    "start": "454479",
    "end": "456639"
  },
  {
    "text": "the built into the Rosa cluster yeah so",
    "start": "456639",
    "end": "459520"
  },
  {
    "text": "typically this native monitoring stack",
    "start": "459520",
    "end": "462120"
  },
  {
    "text": "comes in with a promethus for metrics",
    "start": "462120",
    "end": "465199"
  },
  {
    "text": "that you can capture out of core",
    "start": "465199",
    "end": "467080"
  },
  {
    "text": "services but also your end user",
    "start": "467080",
    "end": "469080"
  },
  {
    "text": "applications as well as uh logging",
    "start": "469080",
    "end": "471400"
  },
  {
    "text": "services and dashboarding services like",
    "start": "471400",
    "end": "474120"
  },
  {
    "text": "graph and elastic search to keep your",
    "start": "474120",
    "end": "477479"
  },
  {
    "text": "logs inside or send them outside studio",
    "start": "477479",
    "end": "479599"
  },
  {
    "text": "for cluster as well with collectors for",
    "start": "479599",
    "end": "481840"
  },
  {
    "text": "example now uh what's particular to uh",
    "start": "481840",
    "end": "485000"
  },
  {
    "text": "service mesh here is that you have",
    "start": "485000",
    "end": "487520"
  },
  {
    "text": "visualization tools that are specialized",
    "start": "487520",
    "end": "489639"
  },
  {
    "text": "for understanding some of these rules we",
    "start": "489639",
    "end": "491759"
  },
  {
    "text": "just described before exactly so red hat",
    "start": "491759",
    "end": "494440"
  },
  {
    "text": "open shift service mesh bundles in two",
    "start": "494440",
    "end": "497280"
  },
  {
    "text": "other components as part of that",
    "start": "497280",
    "end": "499000"
  },
  {
    "text": "deployment via the operator Hub so those",
    "start": "499000",
    "end": "501680"
  },
  {
    "text": "two components one of them is Kali keali",
    "start": "501680",
    "end": "504639"
  },
  {
    "text": "is a visualization layer for your",
    "start": "504639",
    "end": "506400"
  },
  {
    "text": "service mesh it gives you the",
    "start": "506400",
    "end": "508000"
  },
  {
    "text": "opportunity to log into a UI and see how",
    "start": "508000",
    "end": "510639"
  },
  {
    "text": "service to service communication is",
    "start": "510639",
    "end": "512640"
  },
  {
    "text": "occurring you can also break down and",
    "start": "512640",
    "end": "515320"
  },
  {
    "text": "understand the paths of service to",
    "start": "515320",
    "end": "516800"
  },
  {
    "text": "service communication determine if",
    "start": "516800",
    "end": "518599"
  },
  {
    "text": "they're encrypted if there are any",
    "start": "518599",
    "end": "520599"
  },
  {
    "text": "errors or what sort of rate of traffic",
    "start": "520599",
    "end": "523320"
  },
  {
    "text": "is flowing through those paths yeah very",
    "start": "523320",
    "end": "525519"
  },
  {
    "text": "useful and another component that open",
    "start": "525519",
    "end": "527880"
  },
  {
    "text": "shift service mesh bundles is Jagger",
    "start": "527880",
    "end": "530040"
  },
  {
    "text": "which is a distributed tracing project",
    "start": "530040",
    "end": "532279"
  },
  {
    "text": "Jagger gives you the capabilities to",
    "start": "532279",
    "end": "534320"
  },
  {
    "text": "track a network packet from a user",
    "start": "534320",
    "end": "537080"
  },
  {
    "text": "flowing into your service mesh and",
    "start": "537080",
    "end": "538760"
  },
  {
    "text": "across all of your containers in your",
    "start": "538760",
    "end": "540640"
  },
  {
    "text": "microservices architecture so this is",
    "start": "540640",
    "end": "542880"
  },
  {
    "text": "great if you wanted to do application",
    "start": "542880",
    "end": "544360"
  },
  {
    "text": "performance monitoring and determine",
    "start": "544360",
    "end": "546480"
  },
  {
    "text": "where there might be some uh very slow",
    "start": "546480",
    "end": "549279"
  },
  {
    "text": "service to service communication",
    "start": "549279",
    "end": "550720"
  },
  {
    "text": "occurring yeah like for example latency",
    "start": "550720",
    "end": "553160"
  },
  {
    "text": "issues are easy to see for this app",
    "start": "553160",
    "end": "556320"
  },
  {
    "text": "instrumentation based on open Telemetry",
    "start": "556320",
    "end": "558720"
  },
  {
    "text": "as well as a standard so that's really",
    "start": "558720",
    "end": "561040"
  },
  {
    "text": "going to take you a bit further in",
    "start": "561040",
    "end": "562920"
  },
  {
    "text": "understanding that exactly",
    "start": "562920",
    "end": "565200"
  },
  {
    "text": "fantastic I think to conclude you know",
    "start": "565200",
    "end": "568600"
  },
  {
    "text": "open service mesh is available as an",
    "start": "568600",
    "end": "571560"
  },
  {
    "text": "operator based installation in Rosa so",
    "start": "571560",
    "end": "574560"
  },
  {
    "text": "we will share a few links with you to",
    "start": "574560",
    "end": "576160"
  },
  {
    "text": "get started with it really quickly I",
    "start": "576160",
    "end": "578320"
  },
  {
    "text": "want to thank you Michael for this uh",
    "start": "578320",
    "end": "580880"
  },
  {
    "text": "session be sure to stay tuned for other",
    "start": "580880",
    "end": "583600"
  },
  {
    "text": "videos like this in the future thanks",
    "start": "583600",
    "end": "585920"
  },
  {
    "text": "again yeah thank",
    "start": "585920",
    "end": "588839"
  },
  {
    "text": "you",
    "start": "592480",
    "end": "595480"
  }
]