[
  {
    "start": "0",
    "end": "122000"
  },
  {
    "text": "thank you everyone for joining us today my name is Tasha pimple Cody I'm a",
    "start": "469",
    "end": "6000"
  },
  {
    "text": "Senior Product Manager with Amazon Lakes in today's discussion we want to walk",
    "start": "6000",
    "end": "12809"
  },
  {
    "text": "you through how you can add a conversational interface to enterprise software and specifically we want to",
    "start": "12809",
    "end": "20640"
  },
  {
    "text": "cover how in for world's third-largest erp software provider has added a",
    "start": "20640",
    "end": "27869"
  },
  {
    "text": "conversation interface to their cloud suite ERP software using Amazon legs and",
    "start": "27869",
    "end": "34399"
  },
  {
    "text": "with me on stage I have Rick Ryder Director of Product Management and Manju",
    "start": "34399",
    "end": "40530"
  },
  {
    "text": "Manju Gauri masti a VP of Product Development from infor thank you guys",
    "start": "40530",
    "end": "45930"
  },
  {
    "text": "for joining us today so I want to walk",
    "start": "45930",
    "end": "51629"
  },
  {
    "text": "walk through a quick overview of Amazon legs Before we jump into the details of",
    "start": "51629",
    "end": "57390"
  },
  {
    "text": "how we integrated legs with the infor software we launched legs",
    "start": "57390",
    "end": "64559"
  },
  {
    "text": "almost a year ago at a tree in rent it's a service for building conversation",
    "start": "64559",
    "end": "69960"
  },
  {
    "text": "interfaces also known as chat BOTS using voice and text it's based on the same",
    "start": "69960",
    "end": "77880"
  },
  {
    "text": "technology as Alexa so it's the same speech recognition in the same natural",
    "start": "77880",
    "end": "83670"
  },
  {
    "text": "language understanding stack as Alexa as you might be familiar speech recognition",
    "start": "83670",
    "end": "89220"
  },
  {
    "text": "and language are some of the most complex problems in computer science today and solving them requires a",
    "start": "89220",
    "end": "99170"
  },
  {
    "text": "knowledge of sophisticated algorithms it requires access to massive amounts of",
    "start": "99170",
    "end": "105570"
  },
  {
    "text": "data access to a lot of infrastructure so with legs we have put the power of",
    "start": "105570",
    "end": "111600"
  },
  {
    "text": "Alexa in the hands of every developer as a cloud service and by doing so we have",
    "start": "111600",
    "end": "117509"
  },
  {
    "text": "essentially democratized these deep learning technologies so Lex is a",
    "start": "117509",
    "end": "123899"
  },
  {
    "start": "122000",
    "end": "252000"
  },
  {
    "text": "complete solution it's an end-to-end solution that provides you with speech recognition so",
    "start": "123899",
    "end": "129509"
  },
  {
    "text": "you can convert a speech and recognize the intent of the speaker you can conduct dialogue",
    "start": "129509",
    "end": "137159"
  },
  {
    "text": "management so we support multi turn conversations you can you can create",
    "start": "137159",
    "end": "142620"
  },
  {
    "text": "multi turn conversations using Amazon Lex our philosophy is you should be able to",
    "start": "142620",
    "end": "149340"
  },
  {
    "text": "build chat bot once and deploy it multiple times and this could be on",
    "start": "149340",
    "end": "155220"
  },
  {
    "text": "multiple modalities so whether it's text or speech and on multiple platforms so",
    "start": "155220",
    "end": "160950"
  },
  {
    "text": "you could have mobile platform you could have the web browser you could have the",
    "start": "160950",
    "end": "166079"
  },
  {
    "text": "messaging platforms like Facebook slack Twilio and most recently kick Lex is a",
    "start": "166079",
    "end": "173159"
  },
  {
    "text": "is a is a AWS service so it scales as as your demand goes up so you don't have to",
    "start": "173159",
    "end": "179519"
  },
  {
    "text": "worry about that we natively integrate with the AWS lambda so you can implement",
    "start": "179519",
    "end": "186299"
  },
  {
    "text": "your validation logic all of your business logic in in the lambda",
    "start": "186299",
    "end": "192120"
  },
  {
    "text": "functions we we encrypt user utterances in transit and at rest also we have",
    "start": "192120",
    "end": "199470"
  },
  {
    "text": "fairly comprehensive analytics so you can actually track the speech utterances",
    "start": "199470",
    "end": "205019"
  },
  {
    "text": "versus the text utterances you can look at the latency of the conversation as as",
    "start": "205019",
    "end": "211409"
  },
  {
    "text": "it goes through the system also you can track you know what we call mister",
    "start": "211409",
    "end": "216419"
  },
  {
    "text": "trances so utterances that are not recognized by Lex for whatever reason maybe there's this background noise and",
    "start": "216419",
    "end": "222019"
  },
  {
    "text": "Lex is not able to Lex is not able to understand what the user said so we track track those as miss tolerances and",
    "start": "222019",
    "end": "229079"
  },
  {
    "text": "you can add these back to the to the chat bot over a period of time and thus",
    "start": "229079",
    "end": "236879"
  },
  {
    "text": "you can improve the chat pod finally we have text-to-speech so we integrate with",
    "start": "236879",
    "end": "243569"
  },
  {
    "text": "another AWS service which is Amazon quale and we have a text to speech that",
    "start": "243569",
    "end": "249599"
  },
  {
    "text": "is inbuilt into into likes so that's that was there was what Lex was about",
    "start": "249599",
    "end": "256440"
  },
  {
    "start": "252000",
    "end": "460000"
  },
  {
    "text": "what does an interaction look like with Lex here's a sample interaction that you",
    "start": "256440",
    "end": "261810"
  },
  {
    "text": "can see so a user comes along and says I want to book a hotel and this could be part of a broader",
    "start": "261810",
    "end": "270440"
  },
  {
    "text": "broader goal of booking a trip the user says I'd like to book a hotel the first",
    "start": "270440",
    "end": "277280"
  },
  {
    "text": "thing we do is convert it into text so speech or text is is inbuilt like I",
    "start": "277280",
    "end": "282530"
  },
  {
    "text": "mentioned so that is you have the text to the five words that the user just spoke yeah",
    "start": "282530",
    "end": "288320"
  },
  {
    "text": "booked a hotel in New York City the next piece that we do is we apply the",
    "start": "288320",
    "end": "293510"
  },
  {
    "text": "language model to parse out the intent over here which is booked a hotel and",
    "start": "293510",
    "end": "298910"
  },
  {
    "text": "any other information that comes along with it so in this case the relevant",
    "start": "298910",
    "end": "304850"
  },
  {
    "text": "information here is New York City that's that's where they want to book a hotel once that is done Lex in Lex engages in",
    "start": "304850",
    "end": "312410"
  },
  {
    "text": "a conversation with the end user based on based on the configuration that the",
    "start": "312410",
    "end": "317930"
  },
  {
    "text": "developer has provided and elicits other information necessary to actually",
    "start": "317930",
    "end": "323630"
  },
  {
    "text": "fulfill this intent so in this case we already know about the location what Lex",
    "start": "323630",
    "end": "329990"
  },
  {
    "text": "does next is find out the check-in date the checkout date and any other piece of information before going on to the next",
    "start": "329990",
    "end": "336710"
  },
  {
    "text": "part of the conversation which is confirmation so it confirms the intent asking if it can go ahead and complete",
    "start": "336710",
    "end": "344750"
  },
  {
    "text": "the booking and once once the user says yes it will go ahead and execute the",
    "start": "344750",
    "end": "350900"
  },
  {
    "text": "business logic so that's that's what it looks like in in terms of a sample",
    "start": "350900",
    "end": "357919"
  },
  {
    "text": "interaction how do you build such a such a bot so some some terminology that I",
    "start": "357919",
    "end": "364070"
  },
  {
    "text": "wanted to share with you we'll be using this throughout the presentation today so working off of the same example let's",
    "start": "364070",
    "end": "373040"
  },
  {
    "text": "say you want to book a trip as part of booking the trip you might have multiple goals so you might want to book a hotel",
    "start": "373040",
    "end": "379160"
  },
  {
    "text": "you might want to book a car get your flight tickets so all of all of these",
    "start": "379160",
    "end": "384530"
  },
  {
    "text": "are goals or what we call intents inside of a conversation and and book hotel is",
    "start": "384530",
    "end": "391130"
  },
  {
    "text": "just one such intent a bot can have multiple intents the way you invoke this",
    "start": "391130",
    "end": "396560"
  },
  {
    "text": "intent is by speaking or typing certain phrase so for example in case of booked a hotel",
    "start": "396560",
    "end": "402699"
  },
  {
    "text": "I like to book a hotel or I want to make Hotel Reservations are some of the sample utterances that",
    "start": "402699",
    "end": "408919"
  },
  {
    "text": "the developer provides as part of defining this chatbot as a conversation",
    "start": "408919",
    "end": "417289"
  },
  {
    "text": "moves forward you need information to actually fulfill this intent and those",
    "start": "417289",
    "end": "422659"
  },
  {
    "text": "are what we call slots so the location in this in this example is is a example",
    "start": "422659",
    "end": "429889"
  },
  {
    "text": "of a slot and the check-in date is another slot checkout datas is a third slot so those are those are the pieces",
    "start": "429889",
    "end": "436819"
  },
  {
    "text": "of information that you need to carry the conversation forward and and finally to fulfill the intent we have a couple",
    "start": "436819",
    "end": "444559"
  },
  {
    "text": "of choices so you can you can do a server-side implementation using AWS lambda or you could do it completely on",
    "start": "444559",
    "end": "451849"
  },
  {
    "text": "the client side so we we support both so so that's the terminology intents",
    "start": "451849",
    "end": "456889"
  },
  {
    "text": "utterances slots and fulfillment now let's let's use this information to",
    "start": "456889",
    "end": "462559"
  },
  {
    "text": "actually build out a bot to create this bot first you define the sample",
    "start": "462559",
    "end": "469249"
  },
  {
    "text": "utterances we typically recommend that you provide like 15 to 20 of the of",
    "start": "469249",
    "end": "475249"
  },
  {
    "text": "these sample utterances and that should be sufficient to build a language model once the language model is built the",
    "start": "475249",
    "end": "482779"
  },
  {
    "text": "model will actually extrapolate to match to an utterance which might be a",
    "start": "482779",
    "end": "488209"
  },
  {
    "text": "variation of of what's listed in the utterance so it doesn't have to be an",
    "start": "488209",
    "end": "493639"
  },
  {
    "text": "exact match going forward you define the slots so in this case",
    "start": "493639",
    "end": "500719"
  },
  {
    "start": "497000",
    "end": "557000"
  },
  {
    "text": "there are four slots the location the check-in date the number of nights and in the room type and and these are slots",
    "start": "500719",
    "end": "508189"
  },
  {
    "text": "that that will vary depending upon your use case one one click call out that I",
    "start": "508189",
    "end": "514008"
  },
  {
    "text": "want to make with legs we support predefined resources so we defined if I we support built-in slot",
    "start": "514009",
    "end": "522709"
  },
  {
    "text": "types so for location you could use Amazon at US City which is a pre pre-built or a curated list of US cities",
    "start": "522709",
    "end": "530329"
  },
  {
    "text": "ready for you to use so you don't have to define these all over again you have the",
    "start": "530329",
    "end": "535500"
  },
  {
    "text": "check-in date which is Amazon or date again curated and ready for you to use and nights which is number of which is",
    "start": "535500",
    "end": "543480"
  },
  {
    "text": "Amazon number also you can define your own custom slot type so in this example",
    "start": "543480",
    "end": "550380"
  },
  {
    "text": "room type is a custom slot type and you can you can have your own values in there so once you've built a bot to to",
    "start": "550380",
    "end": "560699"
  },
  {
    "start": "557000",
    "end": "618000"
  },
  {
    "text": "have it set up for interaction you define a few prompts and these the the",
    "start": "560699",
    "end": "566010"
  },
  {
    "text": "Prancer of two kinds one is to elicit information so prompts that ask",
    "start": "566010",
    "end": "571290"
  },
  {
    "text": "questions for example which city will you be staying in or what's your",
    "start": "571290",
    "end": "576660"
  },
  {
    "text": "check-in date how many nights will you be staying those are examples of prompts to elicit information and then there is a",
    "start": "576660",
    "end": "583170"
  },
  {
    "text": "confirmation prompt so at the end of the conversation just before you execute the",
    "start": "583170",
    "end": "589889"
  },
  {
    "text": "transaction there is there's a confirmation prompt asking can I go",
    "start": "589889",
    "end": "595320"
  },
  {
    "text": "ahead with the transaction so that's that's another another piece that you define and and finally the fulfillment",
    "start": "595320",
    "end": "600690"
  },
  {
    "text": "yeah where you have a choice between aw",
    "start": "600690",
    "end": "605850"
  },
  {
    "text": "slander function which would make up for a suicide suicide fulfillment or a or a",
    "start": "605850",
    "end": "612720"
  },
  {
    "text": "client-side fulfillment wherein you return the parameters to the client so",
    "start": "612720",
    "end": "617870"
  },
  {
    "text": "that's that's how you build a bot and there was overview around I wanted to",
    "start": "617870",
    "end": "623010"
  },
  {
    "start": "618000",
    "end": "670000"
  },
  {
    "text": "provide switching gears over here talking about conversational interfaces",
    "start": "623010",
    "end": "628110"
  },
  {
    "text": "as a whole our conversational axis has quite a few benefits to talk about the",
    "start": "628110",
    "end": "635130"
  },
  {
    "text": "top three or four here it's natural so that's that's how you first learn to",
    "start": "635130",
    "end": "640319"
  },
  {
    "text": "interact with your environment it's on demand so you have it right away it's",
    "start": "640319",
    "end": "647130"
  },
  {
    "text": "really accessible you can actually be hands-free you can use voice navigation",
    "start": "647130",
    "end": "652490"
  },
  {
    "text": "in a conversational interface and finally it's efficient so you ask a",
    "start": "652490",
    "end": "658410"
  },
  {
    "text": "question and you get an answer right away so those those are the those are",
    "start": "658410",
    "end": "664589"
  },
  {
    "text": "the benefits of interface and and that is what makes it a good fit for enterprise",
    "start": "664589",
    "end": "671730"
  },
  {
    "start": "670000",
    "end": "732000"
  },
  {
    "text": "software so if you look at enterprise software today and I have experts on the",
    "start": "671730",
    "end": "678180"
  },
  {
    "text": "stage you're going to talk talk more about this in a bit but if you look at enterprise software today it is complex",
    "start": "678180",
    "end": "684830"
  },
  {
    "text": "there are reasons for it it is continuously evolving based on user",
    "start": "684830",
    "end": "691290"
  },
  {
    "text": "requirements yeah it is very customized based on these user requirements some of these are also",
    "start": "691290",
    "end": "697740"
  },
  {
    "text": "compliant compliance needs it was very domain specific so every domain has has",
    "start": "697740",
    "end": "703529"
  },
  {
    "text": "its own set of needs and and the enterprise software has to fit has to",
    "start": "703529",
    "end": "710730"
  },
  {
    "text": "has to be modified continuously to fit these different domains as a result what",
    "start": "710730",
    "end": "716250"
  },
  {
    "text": "happens is your information is spread across multiple different screens it is",
    "start": "716250",
    "end": "721740"
  },
  {
    "text": "across multiple workflows and this makes it very difficult to find information in",
    "start": "721740",
    "end": "728850"
  },
  {
    "text": "such a system so a conversational interface would would be beneficial in",
    "start": "728850",
    "end": "736140"
  },
  {
    "start": "732000",
    "end": "805000"
  },
  {
    "text": "this scenario and so for some of the same reasons I mentioned earlier it is",
    "start": "736140",
    "end": "741270"
  },
  {
    "text": "easy to find information using such an interface whether it's its voice or text input you just ask a question and you",
    "start": "741270",
    "end": "748740"
  },
  {
    "text": "and you get an answer you don't have to navigate like 30 different screens to",
    "start": "748740",
    "end": "753870"
  },
  {
    "text": "get the information that you're looking for also as as your as your software",
    "start": "753870",
    "end": "760320"
  },
  {
    "text": "evolves to the changing needs of your users the compliance requirements the domain you can actually keep the",
    "start": "760320",
    "end": "768149"
  },
  {
    "text": "interface itself consistent the interface does not change you can have different workflows supporting that",
    "start": "768149",
    "end": "774510"
  },
  {
    "text": "interface you can have different systems supporting that interface but the interface is is a constant and that's",
    "start": "774510",
    "end": "779700"
  },
  {
    "text": "that's what your users need so with with that I'll hand it over to Rick infor has",
    "start": "779700",
    "end": "790200"
  },
  {
    "text": "actually used Amazon Lakes to integrate with the Coleman e-i-e-i-o platform",
    "start": "790200",
    "end": "795900"
  },
  {
    "text": "and Rick and Manju are going to walk us through how they accomplished this Rick thanks",
    "start": "795900",
    "end": "806110"
  },
  {
    "start": "805000",
    "end": "861000"
  },
  {
    "text": "Hershel so I'm going to burn through these slides pretty quickly because we've got a couple of different demos",
    "start": "806110",
    "end": "811750"
  },
  {
    "text": "that we want to focus on for the most part but the first thing we want to do is start with a quick infor overview",
    "start": "811750",
    "end": "817750"
  },
  {
    "text": "Harshal kind of alluded to it a little bit but we're headquartered in Manhattan we are the largest privately owned",
    "start": "817750",
    "end": "823600"
  },
  {
    "text": "enterprise software provider and third largest generally speaking globally we",
    "start": "823600",
    "end": "829360"
  },
  {
    "text": "have over ninety thousand customers and over 71 million cloud users so what this",
    "start": "829360",
    "end": "834850"
  },
  {
    "text": "presentation will highlight is really our multi-tenant strategy applied to AI services and how we adapted an intricate",
    "start": "834850",
    "end": "842440"
  },
  {
    "text": "and sophisticated design to execute in this case what we call lek skills",
    "start": "842440",
    "end": "847570"
  },
  {
    "text": "otherwise known as chatbots but based on our strategy we call skill sets due to the unlimited ability to",
    "start": "847570",
    "end": "855310"
  },
  {
    "text": "customize and create from scratch some of the things that Harsha alluded to in the enterprise world so in force",
    "start": "855310",
    "end": "862839"
  },
  {
    "text": "differentiation comes in the form of 22 industry specific micro vertical Cloud",
    "start": "862839",
    "end": "867970"
  },
  {
    "text": "suite solutions and our intent is to provide skills in conjunction with Amazon Lex to every one of these",
    "start": "867970",
    "end": "874029"
  },
  {
    "text": "solutions out-of-the-box so skills related to general enquiries task automation analytics etc for each and",
    "start": "874029",
    "end": "881019"
  },
  {
    "text": "every one of these tailored solutions but with the ability for customers to also customize and create from scratch",
    "start": "881019",
    "end": "887970"
  },
  {
    "text": "to date we've identified and we're actively developing over 250 specific",
    "start": "887970",
    "end": "893079"
  },
  {
    "text": "skills across all of these different industries but ultimately what this",
    "start": "893079",
    "end": "898630"
  },
  {
    "text": "means is that we are bringing intelligence to the core of every single one of our cloud Suites so across all of",
    "start": "898630",
    "end": "904810"
  },
  {
    "start": "900000",
    "end": "952000"
  },
  {
    "text": "our cloud Suites we have one horizontal technology solution called in for OS which is the group that Manju and I are",
    "start": "904810",
    "end": "911740"
  },
  {
    "text": "part of in for OS is responsible for the core technology and user experience",
    "start": "911740",
    "end": "917790"
  },
  {
    "text": "innovation across infor and comprises all the different products and themes that you see here which includes social",
    "start": "917790",
    "end": "924640"
  },
  {
    "text": "collaboration workflow management common security IOT etc the N for Coleman",
    "start": "924640",
    "end": "929740"
  },
  {
    "text": "digital assistant with Amazon Lex is a part of this overall analogy platform and actually a quick",
    "start": "929740",
    "end": "935709"
  },
  {
    "text": "note on the infor coleman named coleman gets her name from Miss Catherine Johnson the famous NASA mathematician",
    "start": "935709",
    "end": "942339"
  },
  {
    "text": "featured in the film hidden figures and we've got a great you know movie on that that we released it are in forum events",
    "start": "942339",
    "end": "948910"
  },
  {
    "text": "if you want to go check that out on our website so let's quickly discuss what we",
    "start": "948910",
    "end": "955540"
  },
  {
    "start": "952000",
    "end": "1025000"
  },
  {
    "text": "mean behind the strategy of in for Coleman which represents our entire AI solution and platform across all of our",
    "start": "955540",
    "end": "961959"
  },
  {
    "text": "infor products the first key pillar we have in our a AI strategy is the digital assistant in this case it represents our",
    "start": "961959",
    "end": "969040"
  },
  {
    "text": "solution in conjunction with Amazon Lex and Lex helps us power the ability to execute skills to perform again the",
    "start": "969040",
    "end": "975459"
  },
  {
    "text": "quick QA with a system expert perform self-service analytics and quickly automate tasks via what we call our ion",
    "start": "975459",
    "end": "982029"
  },
  {
    "text": "API gateway we are also able to repurpose a lot of the Lex api's to",
    "start": "982029",
    "end": "988959"
  },
  {
    "text": "allow for some of the customization you will see today with the product and custom skill builder which manju will",
    "start": "988959",
    "end": "995050"
  },
  {
    "text": "demonstrate however we also have initiatives underway as you see here related to image recognition and",
    "start": "995050",
    "end": "1001769"
  },
  {
    "text": "analysis as well as a platform for building science-based machine learning and cognitive intelligence based",
    "start": "1001769",
    "end": "1007889"
  },
  {
    "text": "solution solutions but all of these solutions will ultimately have",
    "start": "1007889",
    "end": "1013560"
  },
  {
    "text": "connections back to the digital assistant with Amazon Lex via our ion API gateway again with a connection into",
    "start": "1013560",
    "end": "1020519"
  },
  {
    "text": "lambda and we have more to come on this as we show you sort of the architecture behind this so Coleman as a digital",
    "start": "1020519",
    "end": "1027659"
  },
  {
    "start": "1025000",
    "end": "1063000"
  },
  {
    "text": "assistant has the ability to respond and execute requests and skills that again are highly specialized to the task at",
    "start": "1027659",
    "end": "1033329"
  },
  {
    "text": "hand and as you can imagine conversational ux is at the heart of this strategy where Coleman interaction",
    "start": "1033329",
    "end": "1039030"
  },
  {
    "text": "just like Lex is available in either text with our real-time infor chat solutions solution which you'll see or",
    "start": "1039030",
    "end": "1045750"
  },
  {
    "text": "voice and with strategic direction in all reactive proactive and predictive",
    "start": "1045750",
    "end": "1051659"
  },
  {
    "text": "use cases Coleman plays these three roles for us to provide instantaneous",
    "start": "1051659",
    "end": "1056970"
  },
  {
    "text": "advice and help augment and/or automate work across the entire enterprise so",
    "start": "1056970",
    "end": "1065280"
  },
  {
    "start": "1063000",
    "end": "1119000"
  },
  {
    "text": "here's a screenshot of what I just mentioned the imports at which you will see in the demo here in just a few but I",
    "start": "1065280",
    "end": "1070290"
  },
  {
    "text": "wanted to quickly describe what we mean by the two interaction mechanisms which by the way we plan to increase here in",
    "start": "1070290",
    "end": "1076590"
  },
  {
    "text": "the very short term in near future but within chat Coleman is always available as a persistent user but I can also",
    "start": "1076590",
    "end": "1083130"
  },
  {
    "text": "bring Coleman into a group conversation as well and ask those same questions so here I can tap I can type and interact",
    "start": "1083130",
    "end": "1089490"
  },
  {
    "text": "perform against a Coleman skill set but let's say the user is not in the context of chat or they don't have a chat window",
    "start": "1089490",
    "end": "1096180"
  },
  {
    "text": "open or they just want to execute something quickly with voice now within our portal header we use the tap to talk",
    "start": "1096180",
    "end": "1103380"
  },
  {
    "text": "profile as it's called with an Amazon Lex to enable contextual interaction within every single screen connected in",
    "start": "1103380",
    "end": "1109980"
  },
  {
    "text": "our in four OS solution and execute against that same exact Coleman skill",
    "start": "1109980",
    "end": "1115770"
  },
  {
    "text": "set throughout the entire enterprise so before I turn it over to Manju I want to",
    "start": "1115770",
    "end": "1122760"
  },
  {
    "start": "1119000",
    "end": "1470000"
  },
  {
    "text": "give a quick look at a demo into our user experience for our enterprise users",
    "start": "1122760",
    "end": "1128660"
  },
  {
    "text": "today we are announcing Coleman AI has already entered the mainstream and it's",
    "start": "1137210",
    "end": "1143730"
  },
  {
    "text": "making our lives infinitely easier ai is the new steam engine the new electricity",
    "start": "1143730",
    "end": "1149550"
  },
  {
    "text": "and will transform everything our job at infor is to bring it to the enterprise",
    "start": "1149550",
    "end": "1155130"
  },
  {
    "text": "in industries that we serve let's quickly take a look at some of the capabilities have been for Coleman with",
    "start": "1155130",
    "end": "1162210"
  },
  {
    "text": "a focus connection into our API gateway we call the ion API we've repurposed and added our own spin to the Amazon Lex",
    "start": "1162210",
    "end": "1169080"
  },
  {
    "text": "toolset to enable tenant specific deployment and management of AI skills therefore using Coleman we can automate",
    "start": "1169080",
    "end": "1175800"
  },
  {
    "text": "any requests or tasks both within our infor ecosystem or even external systems",
    "start": "1175800",
    "end": "1180840"
  },
  {
    "text": "through our secure and certified ion API gateway once we authenticate a user into",
    "start": "1180840",
    "end": "1187890"
  },
  {
    "text": "in four OS our horizontal technology cloud sweded in four we can access Coleman through a couple of different",
    "start": "1187890",
    "end": "1193800"
  },
  {
    "text": "ways first through in for chat our latest evolution of our collaboration strategy where I can",
    "start": "1193800",
    "end": "1199320"
  },
  {
    "text": "real-time conversations with my colleagues around groups and topics or one-on-one interactions where Coleman is",
    "start": "1199320",
    "end": "1205980"
  },
  {
    "text": "always available as a persistent user always readily available to answer any questions or assist with any task so for",
    "start": "1205980",
    "end": "1213990"
  },
  {
    "text": "instance I can request contact information from user profiles like what",
    "start": "1213990",
    "end": "1219120"
  },
  {
    "text": "is the email address of Massimo or what",
    "start": "1219120",
    "end": "1224670"
  },
  {
    "text": "is the phone number for Emily Williams or let's say I want to automate a",
    "start": "1224670",
    "end": "1230430"
  },
  {
    "text": "process that is maybe time-consuming or a bit difficult for me to find in my environment for instance setting up an",
    "start": "1230430",
    "end": "1236130"
  },
  {
    "text": "out-of-office request I'll navigate to my user profile quickly to show that this has been disabled but now if I go",
    "start": "1236130",
    "end": "1243420"
  },
  {
    "text": "back and establish my intent I'm going on vacation Coleman asks for a start date and an end",
    "start": "1243420",
    "end": "1252390"
  },
  {
    "text": "date and finally an option to delegate my tasks and alerts associated to any of",
    "start": "1252390",
    "end": "1258390"
  },
  {
    "text": "my workflow related activities and in this case I'll pass those off to my colleague Manju once I have the",
    "start": "1258390",
    "end": "1267060"
  },
  {
    "text": "confirmation let's go back to my user settings and now you can see how that",
    "start": "1267060",
    "end": "1272340"
  },
  {
    "text": "API has been executed in accordance with my parameters to cover both the date range and the delegated activities but",
    "start": "1272340",
    "end": "1280440"
  },
  {
    "text": "perhaps something a bit deeper and more complex what if I need to query my connected ghr system maybe for a skill",
    "start": "1280440",
    "end": "1286800"
  },
  {
    "text": "evaluation for an employee here I can also ask Coleman what skills does",
    "start": "1286800",
    "end": "1292710"
  },
  {
    "text": "Michael Lee have and I'm shown the list",
    "start": "1292710",
    "end": "1300420"
  },
  {
    "text": "directly out of our infor ghr product where perhaps is several screens away or I'm a manager unfamiliar with the",
    "start": "1300420",
    "end": "1306450"
  },
  {
    "text": "associated screens and I just need the information quickly but to take that a",
    "start": "1306450",
    "end": "1312090"
  },
  {
    "text": "bit further maybe I need to know what proficiency does Michael Lee have for",
    "start": "1312090",
    "end": "1317460"
  },
  {
    "text": "his clinical monitoring skill but just",
    "start": "1317460",
    "end": "1322740"
  },
  {
    "text": "to be sure let's check our source here another standard skill we offer is natural language voice navigation so",
    "start": "1322740",
    "end": "1329520"
  },
  {
    "text": "let's just request navigate to the skill management screen for Michael Lee taking you there",
    "start": "1329520",
    "end": "1336900"
  },
  {
    "text": "now so as you can see we can just request what I'm looking for or where I",
    "start": "1336900",
    "end": "1343350"
  },
  {
    "text": "want to go and Coleman can automatically help guide me and the onboarding implications for this type of use case",
    "start": "1343350",
    "end": "1349290"
  },
  {
    "text": "is massive with our users but here I can check that indeed the Coleman response matches the skills listed for this",
    "start": "1349290",
    "end": "1355680"
  },
  {
    "text": "employee as well as the exceeds expectation rating on the clinical monitoring skill now a second way I can",
    "start": "1355680",
    "end": "1363360"
  },
  {
    "text": "interact with Coleman is by voice which you just saw with the voice navigation feature we have Coleman available in our",
    "start": "1363360",
    "end": "1369240"
  },
  {
    "text": "infor OS header which persists throughout all of our applications and using the Lex tap to talk profile I can",
    "start": "1369240",
    "end": "1375180"
  },
  {
    "text": "execute against the exact same skill set so let's say I now know enough about",
    "start": "1375180",
    "end": "1380250"
  },
  {
    "text": "Michael and I've received nominations to promote him but for the sake of argument let's say it's too tedious of a process",
    "start": "1380250",
    "end": "1386280"
  },
  {
    "text": "to execute or I just want to do it quickly let's go ahead and promote",
    "start": "1386280",
    "end": "1391350"
  },
  {
    "text": "employee Michael Lee great what position would you like to promote to vice",
    "start": "1391350",
    "end": "1399300"
  },
  {
    "text": "president what management reason would you like to site",
    "start": "1399300",
    "end": "1404990"
  },
  {
    "text": "executive off cycle and what's the effective date December 1st great the",
    "start": "1404990",
    "end": "1415770"
  },
  {
    "text": "promotion has been submitted for processing one less thing on my list completed in seconds but let's now alter",
    "start": "1415770",
    "end": "1423450"
  },
  {
    "text": "my use cases over to another one of our micro verticals food and beverage manufacturing I need to check the lead",
    "start": "1423450",
    "end": "1430470"
  },
  {
    "text": "time on an item what is the item orange",
    "start": "1430470",
    "end": "1435690"
  },
  {
    "text": "juice and what is the warehouse number one three two lead time is five days or",
    "start": "1435690",
    "end": "1446760"
  },
  {
    "text": "then if I try to execute an operation I'm not authorized for create a purchase order for orange juice you do not have",
    "start": "1446760",
    "end": "1455670"
  },
  {
    "text": "permission to order while inventory levels are within tolerance please contact Michelle Rose for any requests",
    "start": "1455670",
    "end": "1462510"
  },
  {
    "text": "to override and lastly we have the mobile api's to in this to mobile scenarios as well this",
    "start": "1462510",
    "end": "1471270"
  },
  {
    "start": "1470000",
    "end": "1501000"
  },
  {
    "text": "was just a snapshot into our Coleman digital assistant capabilities and we are just scratching the surface of what",
    "start": "1471270",
    "end": "1477000"
  },
  {
    "text": "we can offer within for a high with that",
    "start": "1477000",
    "end": "1489300"
  },
  {
    "text": "I will turn it back over to Roger thanks Rick",
    "start": "1489300",
    "end": "1496040"
  },
  {
    "start": "1501000",
    "end": "1722000"
  },
  {
    "text": "now you saw the demonstration of Lex and Coleman now I would like to go over like",
    "start": "1502620",
    "end": "1508350"
  },
  {
    "text": "how we have built this behind the scenes what is the architecture and let me start with the reason of why we are",
    "start": "1508350",
    "end": "1515010"
  },
  {
    "text": "using Lex Alexa is one of the leaders in the personal assistant market and it's",
    "start": "1515010",
    "end": "1521370"
  },
  {
    "text": "been in there for a year or two already and and it you and so it it's it's the",
    "start": "1521370",
    "end": "1527760"
  },
  {
    "text": "market leader currently in this area and Lex and n and Lex uses the same",
    "start": "1527760",
    "end": "1534120"
  },
  {
    "text": "technologies that Alexa has built on natural language processing deep learning and automated speech",
    "start": "1534120",
    "end": "1541050"
  },
  {
    "text": "recognition and we wanted to build our Coleman platform on the same kind of",
    "start": "1541050",
    "end": "1546300"
  },
  {
    "text": "technologies and on a technology that is already widely used and Lex was a",
    "start": "1546300",
    "end": "1552480"
  },
  {
    "text": "natural fit next one was in terms of the",
    "start": "1552480",
    "end": "1558660"
  },
  {
    "text": "the consumer space Alexa is the leader and you know so you can you know you can",
    "start": "1558660",
    "end": "1564960"
  },
  {
    "text": "see the the skills being built from different companies that are in the consumer space like for ordering pizza",
    "start": "1564960",
    "end": "1571350"
  },
  {
    "text": "or booking tickets or checking the weather etcetera so it's a relatively easier to build",
    "start": "1571350",
    "end": "1579300"
  },
  {
    "text": "skills and it's in a specific area for us on the enterprise side we wanted to",
    "start": "1579300",
    "end": "1585120"
  },
  {
    "text": "use a technology that was more helpful for the enterprise and you will see why",
    "start": "1585120",
    "end": "1590130"
  },
  {
    "text": "it is slightly different compared to Alexa and Lex had a solution and it was",
    "start": "1590130",
    "end": "1595200"
  },
  {
    "text": "a natural fit for us actually and in the enterprise side so it is not like",
    "start": "1595200",
    "end": "1601230"
  },
  {
    "text": "we ordering pizza or you know getting weather information it's more complicated than that there are a lot of",
    "start": "1601230",
    "end": "1608220"
  },
  {
    "text": "business applications that are you know given to an enterprise so if most of your may be coming from enterprises and",
    "start": "1608220",
    "end": "1614370"
  },
  {
    "text": "there are a lot of applications that you use in your companies and to provide these kind of skills to a company that",
    "start": "1614370",
    "end": "1620760"
  },
  {
    "text": "is always changes the company know they have their own requirements modifications customizations and there",
    "start": "1620760",
    "end": "1627180"
  },
  {
    "text": "is always requirements from the customers that they want to build their own skills and you know Lex had the",
    "start": "1627180",
    "end": "1633150"
  },
  {
    "text": "right solutions for us to build our Coleman solution on and that was one of",
    "start": "1633150",
    "end": "1639090"
  },
  {
    "text": "the reasons from the api's wise legs right from the get-go it had API is for",
    "start": "1639090",
    "end": "1645300"
  },
  {
    "text": "both configuration of the skills as well as the runtime so they had bought the config as well as runtime api's and that",
    "start": "1645300",
    "end": "1652500"
  },
  {
    "text": "made it very easy for us to pick legs for this and you also saw the examples",
    "start": "1652500",
    "end": "1658740"
  },
  {
    "text": "of Coleman so we had like voice input and voice output and you saw the text input and text output as well legs also",
    "start": "1658740",
    "end": "1666420"
  },
  {
    "text": "has the capabilities for voice input and text output as well as they text input and voice output so all the four",
    "start": "1666420",
    "end": "1672810"
  },
  {
    "text": "combinations are supported and you saw two use cases in the demonstration but",
    "start": "1672810",
    "end": "1678210"
  },
  {
    "text": "we do have other use cases other combinations of use cases as well and Lex already had it",
    "start": "1678210",
    "end": "1683900"
  },
  {
    "text": "finally in for cloud suite has you know has used a lot of almost all of the",
    "start": "1683900",
    "end": "1690360"
  },
  {
    "text": "Amazon technologies underneath the hood and you know Lex was a natural fit we",
    "start": "1690360",
    "end": "1697230"
  },
  {
    "text": "have been able to build enough scale solutions with zero downtime upgrades with Amazon technologies for you know",
    "start": "1697230",
    "end": "1704160"
  },
  {
    "text": "four to five years now with millions of users end-users and you know Lex was a",
    "start": "1704160",
    "end": "1710790"
  },
  {
    "text": "natural fit among that in among that set of services that we use and you know",
    "start": "1710790",
    "end": "1717150"
  },
  {
    "text": "that's reason why we picked Lex",
    "start": "1717150",
    "end": "1720980"
  },
  {
    "start": "1722000",
    "end": "1843000"
  },
  {
    "text": "before I go into the internal architecture of how we are using Lex in Coleman I would like to talk a little",
    "start": "1722720",
    "end": "1729019"
  },
  {
    "text": "bit about the deployment architecture of info info has about 90,000 customers and",
    "start": "1729019",
    "end": "1737389"
  },
  {
    "text": "we have our multi tenant solution deployed in fire regions and in each of",
    "start": "1737389",
    "end": "1743059"
  },
  {
    "text": "these regions these regions that we don't share the data so the data in each region is specific to that that is that",
    "start": "1743059",
    "end": "1748999"
  },
  {
    "text": "specific to the customers belonging to those regions and in each region we support multiple cloud suites right so",
    "start": "1748999",
    "end": "1755029"
  },
  {
    "text": "you know some of them may be human capital management HCM or healthcare or manufacturing so the financials etc so",
    "start": "1755029",
    "end": "1763970"
  },
  {
    "text": "there are different cloud suites in each region so and our customers use",
    "start": "1763970",
    "end": "1771679"
  },
  {
    "text": "different combinations of applications they may be picking one prepackaged cloud suite or they may be picking a",
    "start": "1771679",
    "end": "1777139"
  },
  {
    "text": "combination of business applications in any of the five regions so this is a",
    "start": "1777139",
    "end": "1783379"
  },
  {
    "text": "completely different deployment compared to any of the the the customers that",
    "start": "1783379",
    "end": "1789049"
  },
  {
    "text": "have delivering Alexia base skills right so if you have a weather so it's probably single deployment somewhere and",
    "start": "1789049",
    "end": "1795080"
  },
  {
    "text": "it's one skill or two skills maximum and it's you know they have their own",
    "start": "1795080",
    "end": "1800179"
  },
  {
    "text": "complexity but they from the skills perspective it is lot more simpler compared to the deployment architecture",
    "start": "1800179",
    "end": "1806419"
  },
  {
    "text": "we have actually so overall so it's a multi-tenant solution and with multiple",
    "start": "1806419",
    "end": "1812179"
  },
  {
    "text": "regions and the data spread across multiple regions as well and each",
    "start": "1812179",
    "end": "1817669"
  },
  {
    "text": "customer has a specific combination of applications and each application comes",
    "start": "1817669",
    "end": "1822950"
  },
  {
    "text": "with its own set of skills so the set of skills that one customer gets may be",
    "start": "1822950",
    "end": "1828169"
  },
  {
    "text": "completely different from a set of skills that another customer gets or there may be overlaps or there may be",
    "start": "1828169",
    "end": "1834889"
  },
  {
    "text": "customizations that each each customer may have their own set of skills that they may have built so with that so I'll",
    "start": "1834889",
    "end": "1845330"
  },
  {
    "start": "1843000",
    "end": "2324000"
  },
  {
    "text": "just take you walk you through the architecture so internal architecture is how we have built the system so there",
    "start": "1845330",
    "end": "1850999"
  },
  {
    "text": "are two pieces one is the skill builder so using which our customers can",
    "start": "1850999",
    "end": "1856580"
  },
  {
    "text": "build their own skills so it is not the standard skill that we deliver but the customers can build their own skills or",
    "start": "1856580",
    "end": "1862039"
  },
  {
    "text": "they can change or modify the prepackaged skills that we provide to them so we do provide for every product",
    "start": "1862039",
    "end": "1869210"
  },
  {
    "text": "like for example HCM comes with its own set of skills and healthcare comes it with its own set of skills so we",
    "start": "1869210",
    "end": "1875450"
  },
  {
    "text": "prepackaged the skills but in addition to that the customers can build or modify the skills so we'll start with",
    "start": "1875450",
    "end": "1882230"
  },
  {
    "text": "that so it's a skill builder that we have developed which I'll demonstrate in a few minutes is based on is it's a",
    "start": "1882230",
    "end": "1888110"
  },
  {
    "text": "web-based application built on angular runs on the browser most of the UI elements are in the browser runs on the",
    "start": "1888110",
    "end": "1893419"
  },
  {
    "text": "browser and it interacts with our homegrown API gateway solution called",
    "start": "1893419",
    "end": "1900260"
  },
  {
    "text": "ion API so all the interactions happen through OAuth 2.0 and before that the",
    "start": "1900260",
    "end": "1906889"
  },
  {
    "text": "the skill builder would have authenticated using sam'l and we not use",
    "start": "1906889",
    "end": "1911929"
  },
  {
    "text": "convert the sam'l token to an OAuth token before the angular based web application can interact with the API",
    "start": "1911929",
    "end": "1917899"
  },
  {
    "text": "gateway to create skills so we have we",
    "start": "1917899",
    "end": "1923480"
  },
  {
    "text": "have built our own API so for Coleman skills so for both configuration as well as runtime so the Coleman skill builder",
    "start": "1923480",
    "end": "1930740"
  },
  {
    "text": "you will will interact through the ion API gateway and interact with the",
    "start": "1930740",
    "end": "1935899"
  },
  {
    "text": "Coleman API is the Coleman configuration API is to create skills from the Coleman",
    "start": "1935899",
    "end": "1941870"
  },
  {
    "text": "API standpoint we store the skill definition in our database and in",
    "start": "1941870",
    "end": "1947299"
  },
  {
    "text": "addition to that we submit that information to Lex as well using the Lex configure configuration api's so that",
    "start": "1947299",
    "end": "1954740"
  },
  {
    "text": "means that there the definition of a skill is there in our database so that we can manage it and in addition to that",
    "start": "1954740",
    "end": "1960440"
  },
  {
    "text": "it is there in the the Lex system as well the reason why it is there in our",
    "start": "1960440",
    "end": "1966080"
  },
  {
    "text": "system is that it will be needed for us to fulfill the request ultimately so I will walk you through that so that's the",
    "start": "1966080",
    "end": "1973789"
  },
  {
    "text": "flow on the the configuration side and from the runtime we can execute the",
    "start": "1973789",
    "end": "1979220"
  },
  {
    "text": "skills in multiple systems so you saw one example that the skill was executed",
    "start": "1979220",
    "end": "1984559"
  },
  {
    "text": "in the in our chat platform we expose these as API so as well to our customer",
    "start": "1984559",
    "end": "1990409"
  },
  {
    "text": "so that they can build variety of applications that can run the skills execute the skills as well and and you",
    "start": "1990409",
    "end": "1996679"
  },
  {
    "text": "also heard Rick mentioning about the mobile application that we have built for chat and if you you know we have",
    "start": "1996679",
    "end": "2003789"
  },
  {
    "text": "different mobile applications for different areas as well cloud switches as well like HCM comes",
    "start": "2003789",
    "end": "2008889"
  },
  {
    "text": "with its own mobile application so the our mobile development teams can use",
    "start": "2008889",
    "end": "2013929"
  },
  {
    "text": "this API to execute certain skills as well so starting from the runtime so",
    "start": "2013929",
    "end": "2019389"
  },
  {
    "text": "mingle chat also interacts with the ion API gateway and again the mingle chat",
    "start": "2019389",
    "end": "2025720"
  },
  {
    "text": "application is also authenticated or the end user using mingle chat also gets",
    "start": "2025720",
    "end": "2031419"
  },
  {
    "text": "authenticated using sam'l with the customers identity provider so it's not like we are authenticating against",
    "start": "2031419",
    "end": "2038320"
  },
  {
    "text": "Amazon for all the users Amazon's identity for all the users each customers or each end user would be",
    "start": "2038320",
    "end": "2044470"
  },
  {
    "text": "using their cuz their enterprise identity provider to authenticate and",
    "start": "2044470",
    "end": "2049929"
  },
  {
    "text": "then using OAuth via we convert the the sam'l token to OAuth and use that to",
    "start": "2049929",
    "end": "2055929"
  },
  {
    "text": "interact with the Gateway from the Gateway so again it uses the Coleman ApS but in this case a runtime endpoint of",
    "start": "2055929",
    "end": "2063608"
  },
  {
    "text": "the Coleman API is the the Coleman API system intra intern submits the",
    "start": "2063609",
    "end": "2070960"
  },
  {
    "text": "utterances from the users to the Lex runtime system so this may be a",
    "start": "2070960",
    "end": "2076030"
  },
  {
    "text": "recording if it's a voice request or it could be a just a text string that is",
    "start": "2076030",
    "end": "2081849"
  },
  {
    "text": "passed to the the legs here we need to ultimately pass the security",
    "start": "2081849",
    "end": "2088720"
  },
  {
    "text": "details as well - there are Lex runtime because ultimately we need to fulfill the our ERP systems need to fulfill the",
    "start": "2088720",
    "end": "2095200"
  },
  {
    "text": "request so we need to send some kind of information about the the user who is",
    "start": "2095200",
    "end": "2101530"
  },
  {
    "text": "making the request so we do not pass the OAuth tokens directly to the leg system so we have built our own sis our own big",
    "start": "2101530",
    "end": "2110560"
  },
  {
    "text": "convert the OAuth token into a one-time token that we pass to Lex so we don't",
    "start": "2110560",
    "end": "2117040"
  },
  {
    "text": "pass the OAuth token as it is the Lexx analyzes the request so if",
    "start": "2117040",
    "end": "2123480"
  },
  {
    "text": "there is a valid intent that it can map to so it is going to map it is going to",
    "start": "2123480",
    "end": "2130170"
  },
  {
    "text": "call an able AWS lambda function to fulfill that request but in this",
    "start": "2130170",
    "end": "2135330"
  },
  {
    "text": "particular case what we have done is that we have used one lambda function to",
    "start": "2135330",
    "end": "2140490"
  },
  {
    "text": "fulfill all skills from all customers in a specific region so that our customers",
    "start": "2140490",
    "end": "2146940"
  },
  {
    "text": "don't have to go through the complexity of writing the lambda functions to fulfill their incoming requests so we",
    "start": "2146940",
    "end": "2154290"
  },
  {
    "text": "have one lambda functions irrespective of the intent or the utterances of the",
    "start": "2154290",
    "end": "2159360"
  },
  {
    "text": "customers like how many other intents they want to use so there is one lambda function using which we process all the",
    "start": "2159360",
    "end": "2165000"
  },
  {
    "text": "requests and the lambda function that single lambda function passes the",
    "start": "2165000",
    "end": "2170070"
  },
  {
    "text": "information through our back-end service and our back-end service interacts with the skill definitions and it will look",
    "start": "2170070",
    "end": "2176340"
  },
  {
    "text": "into the fulfillment details as to what API needs to be executed for the incoming request once it figures out it",
    "start": "2176340",
    "end": "2184680"
  },
  {
    "text": "also needs to make the call to our API system API gate where here what we do is",
    "start": "2184680",
    "end": "2190290"
  },
  {
    "text": "we convert the one-time token into an auth token that was used so basically we",
    "start": "2190290",
    "end": "2195330"
  },
  {
    "text": "use we use we store the mapping of the one-time token to the OAuth token and",
    "start": "2195330",
    "end": "2200840"
  },
  {
    "text": "before the coleman back-end system makes a call to the API gateway again to really fulfill the request because",
    "start": "2200840",
    "end": "2207060"
  },
  {
    "text": "ultimately we need to go to a back-end system like a head see'em system to submit the pto request right so to make",
    "start": "2207060",
    "end": "2214050"
  },
  {
    "text": "that call all request to the API gateway are authenticated and needs to be through a worth token so before we",
    "start": "2214050",
    "end": "2221160"
  },
  {
    "text": "before the coleman back-end system makes a call to the API gateway once again it",
    "start": "2221160",
    "end": "2226860"
  },
  {
    "text": "converts the one-time token in back into the OAuth token that was used by the user at the beginning so ultimately the",
    "start": "2226860",
    "end": "2234180"
  },
  {
    "text": "same wall token that was coming from the Riku user is ultimately back pass to the",
    "start": "2234180",
    "end": "2239280"
  },
  {
    "text": "API gateway once again it is just that in between this path there is a one-time password that is one-time token that is",
    "start": "2239280",
    "end": "2245370"
  },
  {
    "text": "passed so that we don't share the auth token with a with with the like service",
    "start": "2245370",
    "end": "2252440"
  },
  {
    "text": "finally the API gateway the requests or API gateway requests so it is passed to the appropriate back-end",
    "start": "2252440",
    "end": "2259140"
  },
  {
    "text": "system so it can be the request can be going to any of our in for applications or it could be going to a third party",
    "start": "2259140",
    "end": "2265829"
  },
  {
    "text": "system as well and if there is a need for orchestration because most of the times one one API is not sufficient to",
    "start": "2265829",
    "end": "2274140"
  },
  {
    "text": "fulfill a request so there may be two three API calls that need to be made so that is handled in our API gateway so we",
    "start": "2274140",
    "end": "2281430"
  },
  {
    "text": "we have built those capabilities in our API gateway to do orchestration if the",
    "start": "2281430",
    "end": "2286859"
  },
  {
    "text": "same request or if an one uh pterence and needs to be mapped to multiple API",
    "start": "2286859",
    "end": "2293190"
  },
  {
    "text": "calls on the the back-end so in the same way similar architecture works for any",
    "start": "2293190",
    "end": "2300119"
  },
  {
    "text": "other client so it may be our own client our chat mobile application or we or any",
    "start": "2300119",
    "end": "2306720"
  },
  {
    "text": "of the mobile any of the clients it may be a thick client or it's a web-based client or it's a mobile application that",
    "start": "2306720",
    "end": "2313619"
  },
  {
    "text": "our customer builds they could use the same infrastructure because everything that we build we exposes api's through",
    "start": "2313619",
    "end": "2320400"
  },
  {
    "text": "our gateway and so let me just walk you",
    "start": "2320400",
    "end": "2326190"
  },
  {
    "start": "2324000",
    "end": "2449000"
  },
  {
    "text": "through some of the things complexities other customizations so we deliver be",
    "start": "2326190",
    "end": "2332069"
  },
  {
    "text": "delivered prepackaged skills to our customers so if I if I talk about a PTO",
    "start": "2332069",
    "end": "2337170"
  },
  {
    "text": "request so that that the demonstration of which you saw a few minutes back so we have beast be developed this skill",
    "start": "2337170",
    "end": "2343130"
  },
  {
    "text": "and on our side we create this skill we have this content available and which",
    "start": "2343130",
    "end": "2348780"
  },
  {
    "text": "our customer purchases the HCM cloud suite so this skill is automatically available to them off the shelf so let",
    "start": "2348780",
    "end": "2356670"
  },
  {
    "text": "me take one example so let's say if it's customer alpha and they and they are in US East and they have purchased our HCM",
    "start": "2356670",
    "end": "2364349"
  },
  {
    "text": "cloud suite and they have we have provisioned them that to them and",
    "start": "2364349",
    "end": "2369440"
  },
  {
    "text": "automatically the the PTO skill request is available to them and they could use it and the way in which the solution is",
    "start": "2369440",
    "end": "2376109"
  },
  {
    "text": "architected that skill will only access data pertaining to that customer if you have another customer so beta in the",
    "start": "2376109",
    "end": "2383190"
  },
  {
    "text": "u.s. East itself but they prefer to customize our PTO requests they want to modify the skill they may be modifying an",
    "start": "2383190",
    "end": "2390039"
  },
  {
    "text": "utterance they may be adding a new utterance or they may be tweaking some things relating to the API request back",
    "start": "2390039",
    "end": "2395980"
  },
  {
    "text": "to our system so they may be using a different API on our heads iam system so we all know that and finally it may be",
    "start": "2395980",
    "end": "2403390"
  },
  {
    "text": "in a different region so we may be in there may be a customer called gamma in in Frankfurt or Ireland and you know",
    "start": "2403390",
    "end": "2411039"
  },
  {
    "text": "they may have again customized the same standard skill that we provide and they may be using you know a customized",
    "start": "2411039",
    "end": "2417579"
  },
  {
    "text": "version of our skill so what it means is that across the regions there may be different customers using a variant of",
    "start": "2417579",
    "end": "2425079"
  },
  {
    "text": "the skill that we deliver so which you don't see in a solution like Alexa so where you know for example a ticket",
    "start": "2425079",
    "end": "2432460"
  },
  {
    "text": "booking movie ticket booking skills age standard everybody uses the same skill maybe there may be variations based on",
    "start": "2432460",
    "end": "2440109"
  },
  {
    "text": "the region but overall most of their consumers in in us would use the same skill so in our case it's slightly",
    "start": "2440109",
    "end": "2446619"
  },
  {
    "text": "different so with that so let me switch to let me",
    "start": "2446619",
    "end": "2452829"
  },
  {
    "start": "2449000",
    "end": "2912000"
  },
  {
    "text": "demonstrate now how I demonstrate how to build the skill so with our Coleman",
    "start": "2452829",
    "end": "2461460"
  },
  {
    "text": "so this is a our coordinate skill building user interface it's a web-based user interface but ultimately behind the",
    "start": "2475779",
    "end": "2482449"
  },
  {
    "text": "scenes it isn't going through the API gateway these are some of the skills that we have already built like for",
    "start": "2482449",
    "end": "2488569"
  },
  {
    "text": "example disable out of office so this skill is already there and and I will go walk you through the details of",
    "start": "2488569",
    "end": "2495140"
  },
  {
    "text": "this in a few minutes so let us start with building a skill and this is the power that we want to give to our",
    "start": "2495140",
    "end": "2501019"
  },
  {
    "text": "customers so that they can build these skills on their own so instead of like you know you just using our skills the",
    "start": "2501019",
    "end": "2507739"
  },
  {
    "text": "prepackaged skills that we deliver so we have a visit to walk through the skill",
    "start": "2507739",
    "end": "2513859"
  },
  {
    "text": "so first is the basic information about a skill so I'll build a skill called enable out of office you saw the runtime",
    "start": "2513859",
    "end": "2520670"
  },
  {
    "text": "demonstration of that I'll just go ahead and build the skill so enable office so",
    "start": "2520670",
    "end": "2528380"
  },
  {
    "text": "this is the ID so this is the ID that we use on the leg side as well so this is the same ID that we use the you know NID",
    "start": "2528380",
    "end": "2534499"
  },
  {
    "text": "is needed in legs so and it does not take spaces so give you the name",
    "start": "2534499",
    "end": "2542979"
  },
  {
    "text": "it's him and so in in Lex you have to create skill in each language currently",
    "start": "2548530",
    "end": "2555190"
  },
  {
    "text": "English is supported and Herschel is going to talk about the languages in a few minutes but you need to specify",
    "start": "2555190",
    "end": "2561460"
  },
  {
    "text": "which language the skill is being built the next one is you heard about slots",
    "start": "2561460",
    "end": "2566920"
  },
  {
    "text": "and utterances so you need to we have called them as requirements so for a PTO request there are three requirements one",
    "start": "2566920",
    "end": "2573430"
  },
  {
    "text": "is what is the start tire what is the start date of your vacation what's the end date and whom do you want to delegate your work so I'll start with",
    "start": "2573430",
    "end": "2580150"
  },
  {
    "text": "the start date and the data type is date and end date",
    "start": "2580150",
    "end": "2594119"
  },
  {
    "text": "and",
    "start": "2602589",
    "end": "2605279"
  },
  {
    "text": "whom do you want to delegate so these are the questions that are asked to the user so those are our requirements now",
    "start": "2614820",
    "end": "2620400"
  },
  {
    "text": "we need to submit some utterances so I'll say",
    "start": "2620400",
    "end": "2625520"
  },
  {
    "text": "you know I'll just enter two of them as Herschel mentioned so you know it's optimal to enter about 15 of them and",
    "start": "2635880",
    "end": "2642059"
  },
  {
    "text": "after that the system starts learning and adapts so those are the requirements so the first half is the requirements",
    "start": "2642059",
    "end": "2648450"
  },
  {
    "text": "and the second one is utterances that you want to use and you can use these placeholders as well in this so there is",
    "start": "2648450",
    "end": "2655440"
  },
  {
    "text": "a confirmation prompt so once the requests are taken so from the user the legs can provide a confirmation in this",
    "start": "2655440",
    "end": "2663569"
  },
  {
    "text": "particular case I'm going to skip the confirmation so the next one is the fulfillment so how do we take these",
    "start": "2663569",
    "end": "2670440"
  },
  {
    "text": "inputs from the end user and make a dress a call to a back-end system so in",
    "start": "2670440",
    "end": "2676920"
  },
  {
    "text": "our case we are not alone we are not allowing the customers to write lambda",
    "start": "2676920",
    "end": "2681990"
  },
  {
    "text": "function here because we know our API is we have built there are search",
    "start": "2681990",
    "end": "2687559"
  },
  {
    "text": "capabilities on our API so in this case you know we'll start with a simple one so there is an API I need to know which",
    "start": "2687559",
    "end": "2694680"
  },
  {
    "text": "API to use and I need to know the path of the API so in this case since we are",
    "start": "2694680",
    "end": "2699960"
  },
  {
    "text": "using the Gateway so we already know the what is the hostname port number order and all and all but it's just what we",
    "start": "2699960",
    "end": "2706079"
  },
  {
    "text": "are looking for is the relative path of the API and in this particular API so there is a placeholder called user good",
    "start": "2706079",
    "end": "2711660"
  },
  {
    "text": "so that we need to figure out how we are going to provide and it's a post request and as part of the request ultimately we",
    "start": "2711660",
    "end": "2719220"
  },
  {
    "text": "need to give the data to the backend system so the one of the the variables in the in the path is user good so in",
    "start": "2719220",
    "end": "2727859"
  },
  {
    "text": "our case so we can and pick the user goods from certain implicit variables because since it is authenticated users",
    "start": "2727859",
    "end": "2734910"
  },
  {
    "text": "in the context we always know which user is making the request so it is kind of",
    "start": "2734910",
    "end": "2739920"
  },
  {
    "text": "an implicit variable or also you can pick the inputs from the the requirements or the slots so in case of",
    "start": "2739920",
    "end": "2747240"
  },
  {
    "text": "the user good or the user identity I'm picking the user good from the implicit variables and then of course it's a post",
    "start": "2747240",
    "end": "2755640"
  },
  {
    "text": "request so there's a adjacent body or an example body that needs to be submitted",
    "start": "2755640",
    "end": "2761490"
  },
  {
    "text": "and so I'm going to take the sample one here so this is sample JSON so here",
    "start": "2761490",
    "end": "2768359"
  },
  {
    "text": "there is a JSON require with the attributes and these are all the placeholders that are coming from",
    "start": "2768359",
    "end": "2774619"
  },
  {
    "text": "the requirements that means that when we execute the skill we ask for all these details and these placeholders are",
    "start": "2774619",
    "end": "2781010"
  },
  {
    "text": "replaced with the actual value that is provided that is prodded by the end user so I'm going to continue here that's on",
    "start": "2781010",
    "end": "2789080"
  },
  {
    "text": "the input side on the response side once the API is may API call is made you get a response back and that is in rest that",
    "start": "2789080",
    "end": "2797089"
  },
  {
    "text": "may generally be JSON and in this particular case it's a JSON structure with multiple levels so we are",
    "start": "2797089",
    "end": "2803330"
  },
  {
    "text": "flattening that out using JSON path so you can define multiple variables like",
    "start": "2803330",
    "end": "2808820"
  },
  {
    "text": "for example status ID here I'm going to copy adjacent path for that one from the",
    "start": "2808820",
    "end": "2815300"
  },
  {
    "text": "response that we are going to get so we could flatten out all the responses using JSON path and you know have to",
    "start": "2815300",
    "end": "2822109"
  },
  {
    "text": "three because generally in this kind of an interaction so you would have you know two three four or maximum five",
    "start": "2822109",
    "end": "2828260"
  },
  {
    "text": "pieces of information that you need to give back to the end-user so in this case I have used status ID",
    "start": "2828260",
    "end": "2833480"
  },
  {
    "text": "and based on the HTTP rest request response so I can define the message so",
    "start": "2833480",
    "end": "2839630"
  },
  {
    "text": "in this case I can say your PTO request has been successfully submitted and you",
    "start": "2839630",
    "end": "2852200"
  },
  {
    "text": "can add more responses and in the viewer in the future versions we are also looking at how we can build it in such a",
    "start": "2852200",
    "end": "2858650"
  },
  {
    "text": "way that I can also look at different pieces of information in the REST API response and based on that I can make a",
    "start": "2858650",
    "end": "2864830"
  },
  {
    "text": "decision whether the request was successful or it failed and also I could use these variables as the response as",
    "start": "2864830",
    "end": "2871250"
  },
  {
    "text": "well as I can place these response variables in the the response message that we are going to provide to the user",
    "start": "2871250",
    "end": "2879310"
  },
  {
    "text": "so that's the that's a whole process of skill building so we have we gave the",
    "start": "2879310",
    "end": "2884450"
  },
  {
    "text": "name description and we gave the the requirements so are there the slots we",
    "start": "2884450",
    "end": "2890119"
  },
  {
    "text": "gave the intents and sorry utterances and we told which API call to make and",
    "start": "2890119",
    "end": "2896240"
  },
  {
    "text": "what would be the template of that request and what are the placeholders that you need to need to replace from",
    "start": "2896240",
    "end": "2902210"
  },
  {
    "text": "the request for the request and also the response and you know what are the response variables and what is there a message",
    "start": "2902210",
    "end": "2908880"
  },
  {
    "text": "that we need to deliver so I'm going to click create so once I create so this",
    "start": "2908880",
    "end": "2914700"
  },
  {
    "start": "2912000",
    "end": "3089000"
  },
  {
    "text": "this one is going to save it in our database and in addition to that it is also going to make a call to Lex so I'll",
    "start": "2914700",
    "end": "2921960"
  },
  {
    "text": "switch to the AWS console and so this is",
    "start": "2921960",
    "end": "2926969"
  },
  {
    "text": "the the bot so AWS in for AWS demo bot so that you can see it's building so",
    "start": "2926969",
    "end": "2932489"
  },
  {
    "text": "basically our system has submitted through the collects configuration api's we have submitted the request to Lex and",
    "start": "2932489",
    "end": "2939599"
  },
  {
    "text": "we have submitted the request to Lex to build that bot as well so we have created an intent and we have added that",
    "start": "2939599",
    "end": "2946200"
  },
  {
    "text": "intent to abort and we have may have made a request to build that body they",
    "start": "2946200",
    "end": "2951719"
  },
  {
    "text": "will just wait for that bot building to be completed so you can see that is complete now sits in ready status so in",
    "start": "2951719",
    "end": "2958140"
  },
  {
    "text": "for a SS demo part and the intent would have been added as well so the new intent called AWS demo enable auto out",
    "start": "2958140",
    "end": "2965069"
  },
  {
    "text": "of office bot is submitted so now if I go back and as an end user I",
    "start": "2965069",
    "end": "2971309"
  },
  {
    "text": "will check my PTO status so it is enabled and this is this information we",
    "start": "2971309",
    "end": "2977099"
  },
  {
    "text": "are getting it from the our head CM and I will go back to our chart system as",
    "start": "2977099",
    "end": "2982880"
  },
  {
    "text": "Rick mentioned so there is a user called Coleman which is always going to be there and integrated with Lex and I'll",
    "start": "2982880",
    "end": "2989940"
  },
  {
    "text": "go ahead and so says what is the start",
    "start": "2989940",
    "end": "2997410"
  },
  {
    "text": "date so that is day after tomorrow say",
    "start": "2997410",
    "end": "3002960"
  },
  {
    "text": "what is the end date how's their next wetness day",
    "start": "3002960",
    "end": "3008920"
  },
  {
    "text": "whom do you want to delegate Rick so your PTO request has been submitted so",
    "start": "3011440",
    "end": "3018670"
  },
  {
    "text": "I'll go back to my user settings look at",
    "start": "3018670",
    "end": "3023710"
  },
  {
    "text": "my pretty or request my out of office is enabled and it is from day after",
    "start": "3023710",
    "end": "3028900"
  },
  {
    "text": "tomorrow - next - they had think that next Wednesday is 6th year and and it's",
    "start": "3028900",
    "end": "3037050"
  },
  {
    "text": "delegated to Rick so what I did was that as an end user or as an or as an",
    "start": "3037050",
    "end": "3043180"
  },
  {
    "text": "administrator of the customer I was able to create a board without writing a",
    "start": "3043180",
    "end": "3048490"
  },
  {
    "text": "single line of code actually and you know we prepackaged these things but now we also let the customers build these",
    "start": "3048490",
    "end": "3054970"
  },
  {
    "text": "boards as well think yeah so that's",
    "start": "3054970",
    "end": "3065380"
  },
  {
    "text": "pretty much what I had and I'll hand it over to her show",
    "start": "3065380",
    "end": "3069809"
  },
  {
    "text": "okay you guys hear me okay great all right so moving forward we have a few",
    "start": "3084570",
    "end": "3091870"
  },
  {
    "start": "3089000",
    "end": "3105000"
  },
  {
    "text": "minutes to go like eight minutes ago I want to quickly wrap this up and I want to take questions so in the next few",
    "start": "3091870",
    "end": "3099100"
  },
  {
    "text": "slides I want to quickly recap the building blocks that Amazon Lex provided",
    "start": "3099100",
    "end": "3104320"
  },
  {
    "text": "to make this integration possible and so first a first requirement that in for",
    "start": "3104320",
    "end": "3110920"
  },
  {
    "start": "3105000",
    "end": "3179000"
  },
  {
    "text": "had for us was a baseline conversational interface and and this included the modality so speech in speech our speech",
    "start": "3110920",
    "end": "3117550"
  },
  {
    "text": "in text out all the different combinations also the requirement was it should be hands-free or",
    "start": "3117550",
    "end": "3123700"
  },
  {
    "text": "wise navigation was a need so we will talk about how legs accomplish that",
    "start": "3123700",
    "end": "3129870"
  },
  {
    "text": "second like Monju described the application deployment and application deployment at scale so you",
    "start": "3129870",
    "end": "3138070"
  },
  {
    "text": "have thousands of customers we're going to use this to build and to connect to",
    "start": "3138070",
    "end": "3143470"
  },
  {
    "text": "bots so how do you do that from a platform perspective you need lifecycle management so that's that the second",
    "start": "3143470",
    "end": "3149800"
  },
  {
    "text": "piece that I want to highlight and the third piece is a multi-tenancy because",
    "start": "3149800",
    "end": "3154960"
  },
  {
    "text": "there are different customers and each one has their own custom and pre-built skills how do you ensure granular access",
    "start": "3154960",
    "end": "3164070"
  },
  {
    "text": "based based on their their application based on the permissions that they have",
    "start": "3164070",
    "end": "3169870"
  },
  {
    "text": "and and finally it's it is the integration with the other AWS services",
    "start": "3169870",
    "end": "3175390"
  },
  {
    "text": "that will be free that will briefly touch upon so the conversation interface",
    "start": "3175390",
    "end": "3181570"
  },
  {
    "text": "itself the first pieces modalities and once you covered this all different",
    "start": "3181570",
    "end": "3188440"
  },
  {
    "text": "combinations with legs are possible with speech and text the same board can support speech and text so you don't",
    "start": "3188440",
    "end": "3195070"
  },
  {
    "text": "have to write a different water a different skill to make this functionality possible second and",
    "start": "3195070",
    "end": "3202360"
  },
  {
    "text": "there's an important piece with legs we use the sample utterances that the developers provide to build not only the",
    "start": "3202360",
    "end": "3209590"
  },
  {
    "text": "the language model but also the speech model and and what this does is your",
    "start": "3209590",
    "end": "3214780"
  },
  {
    "text": "speech model is better tuned to the utterances or to your specific water skill so that was that",
    "start": "3214780",
    "end": "3222820"
  },
  {
    "text": "was the second piece that we provided as part of the voice navigation also we",
    "start": "3222820",
    "end": "3229840"
  },
  {
    "text": "support SS ml tags or simple speech markup language what this does is lets",
    "start": "3229840",
    "end": "3235690"
  },
  {
    "text": "you have a phone number like 800 zero zero eight seven nine four two instead",
    "start": "3235690",
    "end": "3241180"
  },
  {
    "text": "of saying eight billion something crazy like eighty nine thousand seven forty two the SS ml tags will allow you to",
    "start": "3241180",
    "end": "3249580"
  },
  {
    "text": "read out the number as eight zero zero zero zero eight seven nine four two so that's that's another piece that we",
    "start": "3249580",
    "end": "3256120"
  },
  {
    "text": "provide in built into likes the third and I covered this earlier comprehensive",
    "start": "3256120",
    "end": "3261520"
  },
  {
    "text": "analytics you can keep track of your miss differences and finally that it's",
    "start": "3261520",
    "end": "3266800"
  },
  {
    "text": "multi-platform so you you can do it you can you can build a bot integrated with a web browser like one to describe but",
    "start": "3266800",
    "end": "3274390"
  },
  {
    "text": "also apply the same bar to a mobile platform or to any of the messaging platforms the second piece is the",
    "start": "3274390",
    "end": "3281860"
  },
  {
    "start": "3279000",
    "end": "3383000"
  },
  {
    "text": "application deployment and with Lex we provide a fairly powerful lifecycle",
    "start": "3281860",
    "end": "3288070"
  },
  {
    "text": "management tools one is the versioning capability so every time you build a bot it creates a",
    "start": "3288070",
    "end": "3295210"
  },
  {
    "text": "new version and the same applies to the other resources like intents and slots so you you have a fairly structured",
    "start": "3295210",
    "end": "3304440"
  },
  {
    "text": "hierarchical resource set available to you also you can apply a alias to each",
    "start": "3304440",
    "end": "3312520"
  },
  {
    "text": "of these versions so let's say you were you're pushing your application through a dev stage and fraud lifecycle you can",
    "start": "3312520",
    "end": "3320260"
  },
  {
    "text": "could have an alias for depth pointing to version 1 alias for stage point",
    "start": "3320260",
    "end": "3325390"
  },
  {
    "text": "pointing to version 2 and alias for a prod which is pointing to version 3 so as you continue development on your",
    "start": "3325390",
    "end": "3332320"
  },
  {
    "text": "version 1 your your prod continues to point to version 3 so it's it's not it's",
    "start": "3332320",
    "end": "3339760"
  },
  {
    "text": "not impacted by your development work so so that's that's the lifecycle management that Lex provides native",
    "start": "3339760",
    "end": "3346930"
  },
  {
    "text": "dialogue management requirement from infor was they wanted to build custom boats for for each of",
    "start": "3346930",
    "end": "3353260"
  },
  {
    "text": "their customers they should have the ability to do that and with dialogue management you can define your own set",
    "start": "3353260",
    "end": "3358540"
  },
  {
    "text": "of utterances your own slots and and have your own model so it was possible",
    "start": "3358540",
    "end": "3366010"
  },
  {
    "text": "to do that at at scale and and finally the lambda integration so likes natively",
    "start": "3366010",
    "end": "3371500"
  },
  {
    "text": "supports it obvious lambda integration and one one you described how this can be used for fulfillment you can also use",
    "start": "3371500",
    "end": "3379630"
  },
  {
    "text": "it for validation at every turn of the conversation and the third piece is how",
    "start": "3379630",
    "end": "3387340"
  },
  {
    "start": "3383000",
    "end": "3439000"
  },
  {
    "text": "do you do this for multi-tenant you know in a multi-tenant environment the requirement here was multi-tenancy but",
    "start": "3387340",
    "end": "3394900"
  },
  {
    "text": "also a resource access and that too at scale so with with all our API is we",
    "start": "3394900",
    "end": "3401650"
  },
  {
    "text": "have we have granular access meaning you can you can define I am roles and ensure",
    "start": "3401650",
    "end": "3409120"
  },
  {
    "text": "there are certain set of users have access and and what kind of access opposed to the other set of users so",
    "start": "3409120",
    "end": "3415420"
  },
  {
    "text": "that's one second authorization so these resources are shared again use use we",
    "start": "3415420",
    "end": "3422680"
  },
  {
    "text": "could use the rules to define which users have access and which don't and and finally like like I described",
    "start": "3422680",
    "end": "3429310"
  },
  {
    "text": "earlier the built-ins the built-in slot types and that we could use to expedite development of custom skills so with",
    "start": "3429310",
    "end": "3438460"
  },
  {
    "text": "that I we come to the end of the session",
    "start": "3438460",
    "end": "3443530"
  },
  {
    "start": "3439000",
    "end": "3597000"
  },
  {
    "text": "I'll open it up for Q&A but really quickly we have these resources online",
    "start": "3443530",
    "end": "3449860"
  },
  {
    "text": "if you'd like to review them and if you have any questions please feel free to",
    "start": "3449860",
    "end": "3455020"
  },
  {
    "text": "reach out to us Rick any questions",
    "start": "3455020",
    "end": "3460680"
  },
  {
    "text": "[Applause]",
    "start": "3460680",
    "end": "3466420"
  },
  {
    "text": "yes yes for the lacs team yes do you",
    "start": "3466420",
    "end": "3473210"
  },
  {
    "text": "have some plans to support the Facebook Messenger account linking in your out-of-the-box",
    "start": "3473210",
    "end": "3478760"
  },
  {
    "text": "Lex integration so why can't linking you want to link your Facebook Messenger",
    "start": "3478760",
    "end": "3485690"
  },
  {
    "text": "account to a different account yeah yes so that is something that we are",
    "start": "3485690",
    "end": "3490850"
  },
  {
    "text": "evaluating as a high priority but at this point I don't have a specific",
    "start": "3490850",
    "end": "3497090"
  },
  {
    "text": "timeline to share but well it's something that we are considering for sure okay and from the info I'm just",
    "start": "3497090",
    "end": "3502730"
  },
  {
    "text": "curious why you are not passing you our love token to lakhs",
    "start": "3502730",
    "end": "3509320"
  },
  {
    "text": "do you have some security concerns is it a long lifts or short-lived token why",
    "start": "3509320",
    "end": "3516830"
  },
  {
    "text": "you are creating temporal solution or interaction yeah the main thing the main reason is there is no reason to send it",
    "start": "3516830",
    "end": "3523790"
  },
  {
    "text": "actually so there is that you know we shouldn't be there is there isn't absolutely no reason for us to send the",
    "start": "3523790",
    "end": "3530060"
  },
  {
    "text": "auth token to Lex because there is no need for Lex to have it actually and also if you say the OAuth tokens are",
    "start": "3530060",
    "end": "3536720"
  },
  {
    "text": "valid like maybe for a day maybe for a month maybe for three months and we don't know what they're going to do with",
    "start": "3536720",
    "end": "3542630"
  },
  {
    "text": "that where they are going to store that information so it's like if they don't need it there's no need to give it to",
    "start": "3542630",
    "end": "3548060"
  },
  {
    "text": "them actually okay and if I could if I could add to what month you just mentioned we have two kinds of",
    "start": "3548060",
    "end": "3553220"
  },
  {
    "text": "attributes one is the attribute and the second is request attributes so we recently launched request attributes",
    "start": "3553220",
    "end": "3559340"
  },
  {
    "text": "think of these attributes as request attributes as a one time attribute meaning they are not persisted or stored",
    "start": "3559340",
    "end": "3566060"
  },
  {
    "text": "on the leg side also you can you can encrypt data going into the request attribute so let's say that was exactly",
    "start": "3566060",
    "end": "3573350"
  },
  {
    "text": "my point is if you apply the token it's a request attribute you should not be afraid that you to be persisted that's",
    "start": "3573350",
    "end": "3579590"
  },
  {
    "text": "right so that's that's a feature we launched very recently and that's that's something exactly for the use case that",
    "start": "3579590",
    "end": "3584690"
  },
  {
    "text": "you surfaced okay things are using it thank you",
    "start": "3584690",
    "end": "3591040"
  },
  {
    "text": "other questions okay thank you very much",
    "start": "3591390",
    "end": "3598099"
  }
]