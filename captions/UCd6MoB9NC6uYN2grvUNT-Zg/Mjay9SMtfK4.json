[
  {
    "text": "all right welcome everybody my name is Steve Mesa I'm the software development",
    "start": "0",
    "end": "5609"
  },
  {
    "text": "manager for it abisco deploy my name is ko Chow I'm the product manager of Koh deployers and we're going to talk about",
    "start": "5609",
    "end": "11969"
  },
  {
    "text": "application deployment techniques today so how awesome is it that were talking about this at the beginning of the week",
    "start": "11969",
    "end": "17010"
  },
  {
    "text": "right how many of you out there maybe had a time where you ran a project and it wasn't until you're finished with",
    "start": "17010",
    "end": "23340"
  },
  {
    "text": "your project where you actually started about deploying and thought about how you might actually get that software in production right I know it's happened to",
    "start": "23340",
    "end": "30210"
  },
  {
    "text": "me plenty of times and you know I've learned a lot of lessons from that over the years and that's much about what",
    "start": "30210",
    "end": "35219"
  },
  {
    "text": "today's talk is gonna be about sharing these lessons how we do it the Amazon way how we get our code out there",
    "start": "35219",
    "end": "40230"
  },
  {
    "text": "production safely and securely over and over again we've broken this talk up",
    "start": "40230",
    "end": "46829"
  },
  {
    "text": "into two main parts today the first part I'm gonna cover it's going to be how to mitigate risk through best practices and",
    "start": "46829",
    "end": "52379"
  },
  {
    "text": "what I'm gonna talk about is like building out your safe release pipeline so you can deploy quickly and",
    "start": "52379",
    "end": "57660"
  },
  {
    "text": "efficiently with a really low risk the second part of the talk of read kaffir back up on stage here and easy to talk",
    "start": "57660",
    "end": "64260"
  },
  {
    "text": "about various features within code deploy and easy to give you some recommendations about how to choose the",
    "start": "64260",
    "end": "69840"
  },
  {
    "text": "one that's right for you before we get started I just want to introduce some",
    "start": "69840",
    "end": "76710"
  },
  {
    "text": "terminology now you're probably familiar with all the stuff up here and screen already but you know I just want to make",
    "start": "76710",
    "end": "83130"
  },
  {
    "text": "sure that your definition is the same as my definition find it off and I'll be talking about something and find out",
    "start": "83130",
    "end": "88170"
  },
  {
    "text": "later that somebody thought you know I meant something else so I just want to clear this up so we all are on the same page here",
    "start": "88170",
    "end": "93450"
  },
  {
    "text": "start with a nativist region a diverse region are you know it's a geographical area we have 16 regions at this point",
    "start": "93450",
    "end": "102020"
  },
  {
    "text": "they contain each clusters of data centers in them those clusters are called availability zones each",
    "start": "102020",
    "end": "108890"
  },
  {
    "text": "availability zone is architected to withstand physical infrastructure loss so in the event that anything were to",
    "start": "108890",
    "end": "114360"
  },
  {
    "text": "occur we have high high bandwidth low latency connections between the different availability zones within a",
    "start": "114360",
    "end": "120990"
  },
  {
    "text": "region this has allowed some of our regional services such as dynamodb and Amazon s3 to have very high availability",
    "start": "120990",
    "end": "127860"
  },
  {
    "text": "over the years next is a stack now this is probably that term that may",
    "start": "127860",
    "end": "133830"
  },
  {
    "text": "the most overloaded you may call it an environment inner stage what I'm going to refer to as a stack throughout the",
    "start": "133830",
    "end": "139710"
  },
  {
    "text": "slide is the running context of your application so really what I mean like everything that makes up your app all",
    "start": "139710",
    "end": "145680"
  },
  {
    "text": "the resources that you need to deploy it and here you know maybe the easiest way to kind of like wrap our heads around it",
    "start": "145680",
    "end": "151290"
  },
  {
    "text": "and get all you know they shared you know vocabulary here is just but with the dev test prod layout right so I'm gonna",
    "start": "151290",
    "end": "158160"
  },
  {
    "text": "refer to as dev as a stack and you'll see why in a little bit",
    "start": "158160",
    "end": "163250"
  },
  {
    "text": "the next term synthetic traffic so you know the word synthetic it means something that doesn't occur naturally",
    "start": "163250",
    "end": "169290"
  },
  {
    "text": "right so I'm gonna use it the same way here but what I'm going to refer to synthetic is going to be the traffic",
    "start": "169290",
    "end": "175290"
  },
  {
    "text": "that's going to my servers you know it's going to be by all means real traffic it's just not going to come from a real source you know I'm going to produce",
    "start": "175290",
    "end": "181140"
  },
  {
    "text": "this traffic so I'll get into why we're talking about this in a little bit ok so",
    "start": "181140",
    "end": "186510"
  },
  {
    "text": "I want this talk to be very meaningful to all of you and the way to do that I think is to make it your problem so",
    "start": "186510",
    "end": "193200"
  },
  {
    "text": "we're gonna create a little corporation here and you guys are all going to be you know members of my corporation and",
    "start": "193200",
    "end": "199580"
  },
  {
    "text": "you're all hired because you're smart people and you're here at meeting Ben you're here at this talk so based on",
    "start": "199580",
    "end": "204959"
  },
  {
    "text": "that you're hired so your own up members of the export ok it's a global IT company and you know",
    "start": "204959",
    "end": "212370"
  },
  {
    "text": "inside of the X Corp we have really kind of like - thought leaders in the group you know and we'll just name them mulder",
    "start": "212370",
    "end": "219930"
  },
  {
    "text": "and scully you know no relation to the TV show so really inside the X bar we",
    "start": "219930",
    "end": "227220"
  },
  {
    "text": "are a very customer obsessed company right like everything we do starts and ends with our customers and we want to serve them the most and so both Mulder",
    "start": "227220",
    "end": "234630"
  },
  {
    "text": "and Scully here they agree that they want to do everything within their power to serve their customers but they don't",
    "start": "234630",
    "end": "240000"
  },
  {
    "text": "always agree in exactly what that is so first we'll start with skully so skully",
    "start": "240000",
    "end": "246870"
  },
  {
    "text": "she cares first and foremost about availability right she's cautious and she wants to ensure that the sites are",
    "start": "246870",
    "end": "252840"
  },
  {
    "text": "available because at the end of the day it doesn't matter how many features you have if the sites aren't working right so we're gonna spend a lot of times here",
    "start": "252840",
    "end": "259260"
  },
  {
    "text": "thinking about our operational posture about what you know he's like an environment that we can create reliable",
    "start": "259260",
    "end": "265680"
  },
  {
    "text": "releases into frequently and quick and then her hand here we have Mulder he",
    "start": "265680",
    "end": "271620"
  },
  {
    "text": "cares more about feature delivery right he knows that in today's competitive landscape that in order for companies to",
    "start": "271620",
    "end": "276990"
  },
  {
    "text": "survive they have to differentiate themselves from their competitors so we have to constantly innovate on behalf of",
    "start": "276990",
    "end": "282330"
  },
  {
    "text": "all your customers so easy to do this by the means of releasing features quickly and fast",
    "start": "282330",
    "end": "287720"
  },
  {
    "text": "no both strategies have you know some challenges in their way right so first",
    "start": "287720",
    "end": "292860"
  },
  {
    "text": "releasing globally I mentioned with a global IT company so in the past maybe we had one definition of prod now that's",
    "start": "292860",
    "end": "300180"
  },
  {
    "text": "not necessarily true anymore especially if you're operating all the a diverse regions so now we would have upwards of 16 definitions of prod that prevents",
    "start": "300180",
    "end": "307200"
  },
  {
    "text": "Manute or presents some new challenges so I'm gonna cover how to how to tackle that the next is in our dependencies",
    "start": "307200",
    "end": "313860"
  },
  {
    "text": "right today I'm sure many of you have adopted micro services or at least familiar what that is so the cool thing",
    "start": "313860",
    "end": "319620"
  },
  {
    "text": "about that is that you know we don't have to have these both you know Hema the builds anymore that take four hours and if they ever succeed and we can",
    "start": "319620",
    "end": "326160"
  },
  {
    "text": "never actually get them out in production you know they're pretty static right they don't change too much but with micro services you know we've",
    "start": "326160",
    "end": "332280"
  },
  {
    "text": "constant change in our environment and we have to have new strategies to handle that so I'm going to cover that a little",
    "start": "332280",
    "end": "337410"
  },
  {
    "text": "bit the next is live traffic so you know in the past maybe it was okay to put up",
    "start": "337410",
    "end": "342930"
  },
  {
    "text": "a site down for maintenance banner right but um any of your customers tolerate that you know my don't and really I",
    "start": "342930",
    "end": "349950"
  },
  {
    "text": "don't even tolerate latency personally so you know we need to be able to update our services while serving traffic",
    "start": "349950",
    "end": "355140"
  },
  {
    "text": "without ever taking any downtime right so we're here specifically them to talk about that and last but not least quick",
    "start": "355140",
    "end": "361890"
  },
  {
    "text": "recovery now quick recovery isn't really a challenge as much as it is like a strategy and it's kind of a cultural",
    "start": "361890",
    "end": "367080"
  },
  {
    "text": "thing so as I'm talking about this I'm really going to talk about like cultural changes you can stew in your corporation",
    "start": "367080",
    "end": "372450"
  },
  {
    "text": "here so that you know you pray you practice our mentality of rollback first you know kind of debug later and things",
    "start": "372450",
    "end": "379080"
  },
  {
    "text": "like that to get to a known good state so we're going to talk about that a little bit too and we're gonna see if we can't bring the best of ops and feature",
    "start": "379080",
    "end": "386010"
  },
  {
    "text": "delivery into like one nice little package okay so I'm gonna start off with",
    "start": "386010",
    "end": "392130"
  },
  {
    "text": "talking about treating infrastructures code alright and this is really going to bring us to our first villain which is subtle changes so you know I kind of",
    "start": "392130",
    "end": "399419"
  },
  {
    "text": "started this talk off you know mention that we don't always think about deployments at the beginning of our projects right and will code and will",
    "start": "399419",
    "end": "406020"
  },
  {
    "text": "develop with all kinds of like you know assumptions that don't necessarily hold true you'll remember that context them",
    "start": "406020",
    "end": "411870"
  },
  {
    "text": "and we actually go to deploy that out to where we want it to run and then what happens is that you know your test environment to your prod even worse",
    "start": "411870",
    "end": "418410"
  },
  {
    "text": "right looks different than where it ran in the past and so you know we don't discover that until we get there right",
    "start": "418410",
    "end": "424169"
  },
  {
    "text": "and so like if that happens in prod that's trouble that's an outage and then",
    "start": "424169",
    "end": "429780"
  },
  {
    "text": "as we expand regions and we had more stacks you know throughout the world the problem just gets bigger and bigger",
    "start": "429780",
    "end": "435090"
  },
  {
    "text": "right well the good news is there's a really straightforward solution for this is called AWS CloudFormation India's",
    "start": "435090",
    "end": "442050"
  },
  {
    "text": "cloud formation allows you to write all of your resources into a template file so you could treat it as code so the",
    "start": "442050",
    "end": "448680"
  },
  {
    "text": "cool thing here is now that now that we've you know defined what a stack looks like and then we can replay that",
    "start": "448680",
    "end": "453930"
  },
  {
    "text": "stack over over and over again to ensure that no subtle differences occur anywhere because it's all defined and",
    "start": "453930",
    "end": "459210"
  },
  {
    "text": "deployed in the same way so the key there though is to don't build",
    "start": "459210",
    "end": "465510"
  },
  {
    "text": "infrastructure right or don't build out your pipeline you know deploy it this is a pretty big difference right like we're",
    "start": "465510",
    "end": "471120"
  },
  {
    "text": "you know if you have a mentality of like I will go and manually apply these changes throughout here to building out you know a pipeline where you would",
    "start": "471120",
    "end": "478590"
  },
  {
    "text": "treat infrastructure in the same way as code just like you would deploy code so",
    "start": "478590",
    "end": "484590"
  },
  {
    "text": "I'm gonna deep dive a little bit into treating for structures code and i'ma start off with like looking at stacks a little deeper so what I have here is you",
    "start": "484590",
    "end": "491940"
  },
  {
    "text": "know maybe hard to read a little bit of things here and describing you know I used a device cloud formations",
    "start": "491940",
    "end": "498139"
  },
  {
    "text": "temperature you know templates on the on our console to create a Ruby on Rails multi a-z stack here so what you're",
    "start": "498139",
    "end": "505349"
  },
  {
    "text": "looking at is all the resources that would make that run it's the website databases the load balancers etc on the",
    "start": "505349",
    "end": "511380"
  },
  {
    "text": "left side there you can see a little sample of cloud formation right so this looks like now that the change I would Institute in my corporation then or my",
    "start": "511380",
    "end": "517740"
  },
  {
    "text": "company or my team is now that I don't allow anyone to you know define a resource and apply that change just to",
    "start": "517740",
    "end": "525089"
  },
  {
    "text": "dev test and prod right it has to go here in this stack so this ensures that well you know there's no like context",
    "start": "525089",
    "end": "531780"
  },
  {
    "text": "mixed anywhere and we're defining it all in code as we go then after we do that then what we can",
    "start": "531780",
    "end": "536850"
  },
  {
    "text": "do is deploy that through code pipeline just the same way as we with a code change so a coke pipeline here I have a",
    "start": "536850",
    "end": "542550"
  },
  {
    "text": "little you know kind of stack here it's it renders vertically so I had to kind of like you know make it scale",
    "start": "542550",
    "end": "548610"
  },
  {
    "text": "horizontally across the screen but we can see is i define it as cloud formation what my stack looks like I can",
    "start": "548610",
    "end": "554400"
  },
  {
    "text": "put that file then in s3 or you know code commit or one of these product and use that as the input source to my pipeline and whenever that thing changes",
    "start": "554400",
    "end": "561300"
  },
  {
    "text": "now it'll kick off this release process so then I'll take that code here you know the the template I'll deploy it to",
    "start": "561300",
    "end": "566880"
  },
  {
    "text": "a test environment I could run some tests or I can have you know make sure that the a changes apply and ensure that",
    "start": "566880",
    "end": "572340"
  },
  {
    "text": "everything looks right before I promote it to the next region right so you can see your ID test prod that would promote",
    "start": "572340",
    "end": "577560"
  },
  {
    "text": "it that way but I also introduced the talk long time to go to say you know how many prods do we have right we don't",
    "start": "577560",
    "end": "583860"
  },
  {
    "text": "have just one prodded anymore so what do I do now with you know from one of many infrastructure say if I you know run in",
    "start": "583860",
    "end": "589530"
  },
  {
    "text": "you know more than one region I'm gonna introduce a relatively new feature of a",
    "start": "589530",
    "end": "596010"
  },
  {
    "text": "Davis cloud formation called stack sets if you haven't heard about it you know",
    "start": "596010",
    "end": "601260"
  },
  {
    "text": "take this talk here is this like a surface little you know introduction to it but go I think we have a couple talks this week that are gonna go deeper into",
    "start": "601260",
    "end": "607350"
  },
  {
    "text": "it go check one of those out that sounds interesting but what CloudFormation does a stack sets allows you to do is you can",
    "start": "607350",
    "end": "613620"
  },
  {
    "text": "take a stack that you defined and then you can use those template files as an input then say I want to deploy this",
    "start": "613620",
    "end": "619170"
  },
  {
    "text": "cross region across accounts it's pretty cool skip the card this is what you do",
    "start": "619170",
    "end": "625110"
  },
  {
    "text": "when you submit a confirmation stack set so first we're just upload that template right after that we'll specify the",
    "start": "625110",
    "end": "631050"
  },
  {
    "text": "accounts we want to go to and then we'll specify the regions you can also change the regional or two to say that can",
    "start": "631050",
    "end": "636660"
  },
  {
    "text": "promote from you know one region and then first you know whatever reason you may want to you'd go to the next region",
    "start": "636660",
    "end": "641730"
  },
  {
    "text": "and then the next you also could specify deployment options to you know kind of",
    "start": "641730",
    "end": "646800"
  },
  {
    "text": "indicate some type of like different thresholds for you know like you can",
    "start": "646800",
    "end": "651810"
  },
  {
    "text": "have thresholds for failures so you know if you hit below or above a certain one you might want to stop rollback for",
    "start": "651810",
    "end": "658560"
  },
  {
    "text": "example other things you can do is you can in each region you can have a little overrides a say this thing this resource",
    "start": "658560",
    "end": "665370"
  },
  {
    "text": "is applied slightly different than another region allows you to do regional differences and then when you're done you deploy",
    "start": "665370",
    "end": "670589"
  },
  {
    "text": "your stack so that's cool so once we did that now we've defined all of our infrastructure we have a pipeline that",
    "start": "670589",
    "end": "676799"
  },
  {
    "text": "promotes it through and then when we're finished we can replicate that across region so we've created now all of our infrastructure for our code changes in",
    "start": "676799",
    "end": "683669"
  },
  {
    "text": "all the regions so now that we have that really good you know really spike lines set up with all of our infrastructure",
    "start": "683669",
    "end": "689189"
  },
  {
    "text": "now we can start thinking about how will we then target our software to hit those end hosts so much in the same way I",
    "start": "689189",
    "end": "696779"
  },
  {
    "text": "introduced the stack promotion for your infrastructure we're gonna do the same thing with our code right so we'll",
    "start": "696779",
    "end": "702929"
  },
  {
    "text": "you've probably all seen this kind of slide before where we have our code promote through dev test prod but again I'm gonna go back to that",
    "start": "702929",
    "end": "709049"
  },
  {
    "text": "first problem I present it how many prods right there isn't one prodded anymore so even with many prods and if",
    "start": "709049",
    "end": "715350"
  },
  {
    "text": "if we go all out to all those prods at one time what happens if there's a code change I didn't intend right it's a",
    "start": "715350",
    "end": "721649"
  },
  {
    "text": "global impact and you know ideally we would never ever have that so what I recommend is we regionally segment our",
    "start": "721649",
    "end": "727559"
  },
  {
    "text": "release process right we treat each region like that low-level stack promotion so rather than going dev test",
    "start": "727559",
    "end": "733259"
  },
  {
    "text": "to all the prod we'll go dev test to maybe you know one region and then the next know how you pick those regions",
    "start": "733259",
    "end": "740159"
  },
  {
    "text": "ultimately is going to be up to you if I have a code their service excuse me that",
    "start": "740159",
    "end": "746220"
  },
  {
    "text": "is you know relatively few use cases where I know that my customers will exercise all of them I might go to one",
    "start": "746220",
    "end": "752009"
  },
  {
    "text": "of my smaller regions because I know pretty much that those use cases will be hit by my customers right now if I have",
    "start": "752009",
    "end": "757949"
  },
  {
    "text": "a very complex service you know like or that maybe operates in the user space like a CLI or something like that in",
    "start": "757949",
    "end": "763199"
  },
  {
    "text": "your SDK what I really can't predict all these cases maybe in that case I've actually want to go to one of the large regions because I really need you know a",
    "start": "763199",
    "end": "769949"
  },
  {
    "text": "lot of use case is driven by customers in order to get me build that confidence up and what might change Oh ultimately",
    "start": "769949",
    "end": "775589"
  },
  {
    "text": "the answer is gonna be up to you and your services use cases but once we've picked that region now we're gonna go a",
    "start": "775589",
    "end": "781289"
  },
  {
    "text": "little deeper into it we're gonna do something we call zonal segmentation so zonal segmentation is now we're gonna",
    "start": "781289",
    "end": "786929"
  },
  {
    "text": "reduce that risk so if you kind of go back you know we're not going to deployed all 16 regions at one time now we're just gonna deploy to one right so",
    "start": "786929",
    "end": "793169"
  },
  {
    "text": "you can say that I've really reduced my blast radius if anything occurs sorry blast radius if I'd introduced it is",
    "start": "793169",
    "end": "799139"
  },
  {
    "text": "like the amount of impact and an unintended change so once I've now picked a region I can",
    "start": "799139",
    "end": "804720"
  },
  {
    "text": "even break that down further to say I can go to a Z by a Z and I can separate to segregate my code changes to go to",
    "start": "804720",
    "end": "810690"
  },
  {
    "text": "just one AZ before going to the next we call this a zonal segmentation so now again now if not I'm no longer gonna",
    "start": "810690",
    "end": "817020"
  },
  {
    "text": "have a multi region impact now by breaking down my one region I can also eliminate any chance of a full single",
    "start": "817020",
    "end": "824460"
  },
  {
    "text": "region impact right and if that's not enough we can go even a little bit deeper and we can do server segmentation",
    "start": "824460",
    "end": "830460"
  },
  {
    "text": "so server segmentation is a strategy that we use all the time it's within the AWS so server segmentation is where we",
    "start": "830460",
    "end": "836640"
  },
  {
    "text": "pick out literally one server out of our fleet and we send the code change out to that server in production let it take",
    "start": "836640",
    "end": "842400"
  },
  {
    "text": "real live customer traffic and once we've decided that that is a good change it's a change that we intend to go out",
    "start": "842400",
    "end": "848340"
  },
  {
    "text": "then we'll then promote that to the multi AZ's all right so now if I have you know let's say ten servers and in",
    "start": "848340",
    "end": "854670"
  },
  {
    "text": "you know one of my regions and I have at the most 10% impact so we'll have that uh you know that code change sit there",
    "start": "854670",
    "end": "861030"
  },
  {
    "text": "taking real live customer traffic for a period of time the amount of time that that takes traffic is what we refer to",
    "start": "861030",
    "end": "866130"
  },
  {
    "text": "as bake time and then we'll promote that changes we build competence excellent",
    "start": "866130",
    "end": "872690"
  },
  {
    "text": "although there's a problem now so if I repeat this process and every one of my regions this is going to take a very",
    "start": "872690",
    "end": "878790"
  },
  {
    "text": "very long time for any of my coach hey just take it out and I may have just traded one complexity for the other because you know slow it's not always",
    "start": "878790",
    "end": "885660"
  },
  {
    "text": "safe there's a lot of things changing so I kind of want to get my code changes out there as quickly as possible and get that deployment finished right so we're",
    "start": "885660",
    "end": "892560"
  },
  {
    "text": "not to start thinking about now is how to paralyze our release process so we",
    "start": "892560",
    "end": "899250"
  },
  {
    "text": "call this technique fanning out so where I'll start maybe with that one box and maybe let's do that in a single region",
    "start": "899250",
    "end": "904410"
  },
  {
    "text": "and then maybe in that region also go multi a-z but then after I've done that I've gotten a pretty high level of",
    "start": "904410",
    "end": "909570"
  },
  {
    "text": "confidence that what I've done is you know pretty good change right so rather than just going in the next region and repeating that process what I'm gonna do",
    "start": "909570",
    "end": "916230"
  },
  {
    "text": "that is I'm gonna fan out and maybe go to three more regions and once those three regions of you know go well each",
    "start": "916230",
    "end": "921270"
  },
  {
    "text": "one of those regions will kick off on other three regions themself so now I've really compressed my overall deployment",
    "start": "921270",
    "end": "926610"
  },
  {
    "text": "time of any in particular code change to run in parallel okay the last thing I'm",
    "start": "926610",
    "end": "933360"
  },
  {
    "text": "going to really touch on here is something we're gonna call synthetic traffic this also goes by a",
    "start": "933360",
    "end": "939060"
  },
  {
    "text": "couple different names but we'll leave it at this for today so the thing about failures is they don't often start with",
    "start": "939060",
    "end": "945120"
  },
  {
    "text": "you right like you know you deploy your code change everything that's good but but things change over time right and",
    "start": "945120",
    "end": "952170"
  },
  {
    "text": "what was good at one point in time might not be good tomorrow and this is the problem with upfront",
    "start": "952170",
    "end": "957360"
  },
  {
    "text": "testing as we validate our services at the time we're gonna release them and we don't go back often to check to see that",
    "start": "957360",
    "end": "962880"
  },
  {
    "text": "they're still running right and the last thing in the world that I want to do is have one of my customers tell me that your service isn't operating properly",
    "start": "962880",
    "end": "968700"
  },
  {
    "text": "right so what I really need is some way to know when things change you know to know when one of my you know services I",
    "start": "968700",
    "end": "976170"
  },
  {
    "text": "depend on release a change that they didn't exercise my use case or you know when the nighttime security guard trips over a power line or something I I want",
    "start": "976170",
    "end": "983130"
  },
  {
    "text": "to know about that right I don't want my customers to ever tell me about that so we're gonna build up some different kind",
    "start": "983130",
    "end": "990180"
  },
  {
    "text": "of monitoring systems to tell us about how our Erin tell us how healthy our services is and you can use Amazon",
    "start": "990180",
    "end": "995700"
  },
  {
    "text": "CloudWatch to do this so an Amazon Cloud watch what you really do is you write cloud cloud watch logs you make cloud",
    "start": "995700",
    "end": "1002240"
  },
  {
    "text": "watch metrics with your service and then you establish monitors to tell you then when things you know look the way that",
    "start": "1002240",
    "end": "1007730"
  },
  {
    "text": "you've told it you don't want it to look where you start off by just looking at",
    "start": "1007730",
    "end": "1012830"
  },
  {
    "text": "system level metrics you know this is a really common thing that kind of applies to everyone across the board you know you know monitor your services to make",
    "start": "1012830",
    "end": "1019160"
  },
  {
    "text": "sure that you know your disk space isn't filling up to make sure the CPU is healthy that the rams not over you know",
    "start": "1019160",
    "end": "1024530"
  },
  {
    "text": "overworked and all those kind of things now the next things that may be even a little bit more meaningful right is the",
    "start": "1024530",
    "end": "1030410"
  },
  {
    "text": "service level metrics and I can't tell you with what you should do here other than you know look at your service and",
    "start": "1030410",
    "end": "1036380"
  },
  {
    "text": "find out what your main use cases are and always looking at the negative use cases isn't always you know necessarily over you know the right way to go I",
    "start": "1036380",
    "end": "1042860"
  },
  {
    "text": "could look at it for my failing requests right well that's a pretty obvious failure mode that I want to know about and maybe if that happens and if I get",
    "start": "1042860",
    "end": "1048920"
  },
  {
    "text": "more than you know a certain amount you know failed request in a couple minutes maybe I want to be you know alerted to",
    "start": "1048920",
    "end": "1054920"
  },
  {
    "text": "that but I also really want to know that I'm serving good request too I want to make sure that positive traffic is",
    "start": "1054920",
    "end": "1060380"
  },
  {
    "text": "coming in I'm gonna make sure that I'm not swallowing exceptions and not you know not omitting general exception",
    "start": "1060380",
    "end": "1065420"
  },
  {
    "text": "faults right so I need to also make sure that I'm serving good requests",
    "start": "1065420",
    "end": "1070460"
  },
  {
    "text": "now the problem with that though if I set up my metrics to then look and monitor the positive case right I can't",
    "start": "1070460",
    "end": "1077390"
  },
  {
    "text": "necessarily rely on my customers to produce that for me because if say I run a website in US East one excuse me in",
    "start": "1077390",
    "end": "1084320"
  },
  {
    "text": "Virginia you know like maybe if that's a that's a very time you know sensitive a shopping website or something where I",
    "start": "1084320",
    "end": "1090020"
  },
  {
    "text": "can't expect many users to be on at 3 a.m. all right so I can't create predictable call patterns then to",
    "start": "1090020",
    "end": "1095630"
  },
  {
    "text": "observe you know at all hours of the day so what am I going to do about that well",
    "start": "1095630",
    "end": "1101660"
  },
  {
    "text": "the solution is to create your own traffic right so synthetic traffic is",
    "start": "1101660",
    "end": "1106790"
  },
  {
    "text": "basically it's your integration test right we've probably all run those at the end of our release pipeline before",
    "start": "1106790",
    "end": "1111890"
  },
  {
    "text": "we get to production now what I'm recommending here is that you continually run those you don't just stop at the point when you release your",
    "start": "1111890",
    "end": "1118100"
  },
  {
    "text": "code right you can create a constant traffic your website and this is going to drive metrics throughout your service",
    "start": "1118100",
    "end": "1124070"
  },
  {
    "text": "to ensure that you can always have observable call patterns after you've",
    "start": "1124070",
    "end": "1130910"
  },
  {
    "text": "done that it allows you to then set up thresholds that are interesting to you and your team you can then build out",
    "start": "1130910",
    "end": "1136550"
  },
  {
    "text": "serve you know different systems throughout your team to alert the people that need to know so that in the event of any unintended you know change that",
    "start": "1136550",
    "end": "1144740"
  },
  {
    "text": "you can loop in the right people first and before your customers ever know about it so this concludes the section 1",
    "start": "1144740",
    "end": "1152300"
  },
  {
    "text": "talking about risk risk prevention just cover really quickly what we've done here we've talked about deploying our",
    "start": "1152300",
    "end": "1158720"
  },
  {
    "text": "infrastructure rather than building it talked about promoting our software through region the same way before once",
    "start": "1158720",
    "end": "1164630"
  },
  {
    "text": "through stacks we accelerated our deployment by do using fan-out technologies who are you know processes",
    "start": "1164630",
    "end": "1171410"
  },
  {
    "text": "and last we created observable call patterns so that we can alert our team in the event of any change that we",
    "start": "1171410",
    "end": "1177950"
  },
  {
    "text": "didn't you know start some urban kefir up on stage now and easy to talk about different features within code deploy",
    "start": "1177950",
    "end": "1184370"
  },
  {
    "text": "and how to choose the right one for you",
    "start": "1184370",
    "end": "1188140"
  },
  {
    "text": "thank you still and hello again everyone thank you so much for being with us here",
    "start": "1192520",
    "end": "1197780"
  },
  {
    "text": "today one of the things that we know about our co-workers Kali is that she is fearless",
    "start": "1197780",
    "end": "1205790"
  },
  {
    "text": "she doesn't scare easy there's only two things that have been known in the past",
    "start": "1205790",
    "end": "1210950"
  },
  {
    "text": "to make her lose some sleep the first one is of course aliens and the second",
    "start": "1210950",
    "end": "1218330"
  },
  {
    "text": "is a production deployment and this is what we're going to focus focus on in",
    "start": "1218330",
    "end": "1223970"
  },
  {
    "text": "this in this section we'll see how to automate deployments while still maintaining zero downtime for the",
    "start": "1223970",
    "end": "1230540"
  },
  {
    "text": "application in the previous in the previous section we talked about building a safe release pipeline and now",
    "start": "1230540",
    "end": "1237620"
  },
  {
    "text": "we'll see how we can use Co deploy and deployment techniques in order to make production deployments that the last",
    "start": "1237620",
    "end": "1244190"
  },
  {
    "text": "piece of the pipeline that deployment itself a little less scary and much much",
    "start": "1244190",
    "end": "1250550"
  },
  {
    "text": "safer we also go through will spend",
    "start": "1250550",
    "end": "1255650"
  },
  {
    "text": "significant amount of our time in this section to demo code deploy will execute a real real-life deployment and we'll",
    "start": "1255650",
    "end": "1263060"
  },
  {
    "text": "see how we can choose and pick the right configuration for our needs but first",
    "start": "1263060",
    "end": "1270710"
  },
  {
    "text": "let's go back to scallion mother here and try to think what how they see",
    "start": "1270710",
    "end": "1275960"
  },
  {
    "text": "production deployments molder on the one",
    "start": "1275960",
    "end": "1280970"
  },
  {
    "text": "hand he cares about deploying frequently he wants as soon as a code change is",
    "start": "1280970",
    "end": "1286310"
  },
  {
    "text": "ready to go out to his customers he wants them to get on it try it and see",
    "start": "1286310",
    "end": "1291800"
  },
  {
    "text": "it in production scouting on the other hand she's a little more cautious she's",
    "start": "1291800",
    "end": "1296960"
  },
  {
    "text": "worried about introducing new bugs and especially about causing any type of downtime or an outage to the application",
    "start": "1296960",
    "end": "1304190"
  },
  {
    "text": "the one thing that they both agree on is that they want the point they want deployments to be effortless and as",
    "start": "1304190",
    "end": "1311060"
  },
  {
    "text": "automated as possible and we'll see how Co deploy can help them achieve those three maybe different goals",
    "start": "1311060",
    "end": "1320140"
  },
  {
    "text": "the first question that we ask yourself and we hear that from a lot of our",
    "start": "1320350",
    "end": "1325810"
  },
  {
    "text": "customers this is a very common question is how to choose the right deployment technique for our needs so we'll go",
    "start": "1325810",
    "end": "1332170"
  },
  {
    "text": "through a couple of deployment strategies the first is in place deployments and the other is Bluegreen",
    "start": "1332170",
    "end": "1338950"
  },
  {
    "text": "deployments and we'll see what's the pose and cons and of each one of them and again we'll demo one of them in Co",
    "start": "1338950",
    "end": "1345220"
  },
  {
    "text": "deploy diving into in-place deployments this is",
    "start": "1345220",
    "end": "1351220"
  },
  {
    "text": "the motor additional methodology it's a little more straightforward but still",
    "start": "1351220",
    "end": "1357460"
  },
  {
    "text": "take some careful orchestration in order to get right let's go through the workflow assuming we have an application",
    "start": "1357460",
    "end": "1365350"
  },
  {
    "text": "or a service running on a fleet of instances assuming those are ec2",
    "start": "1365350",
    "end": "1370960"
  },
  {
    "text": "instances or other service serving traffic behind the load balancer now",
    "start": "1370960",
    "end": "1376210"
  },
  {
    "text": "currently version 1 of the application is is running on the fleet and this is",
    "start": "1376210",
    "end": "1381460"
  },
  {
    "text": "what customers have seen we have v2 ready to go and before we update it on",
    "start": "1381460",
    "end": "1387880"
  },
  {
    "text": "the instance the first thing that we need to do is to take the instance offline from the load balancer and make",
    "start": "1387880",
    "end": "1394060"
  },
  {
    "text": "sure that no production traffic is flowing to that instance at the time of",
    "start": "1394060",
    "end": "1399280"
  },
  {
    "text": "transition now it is safe to update from v1 to v2 and that update requires us",
    "start": "1399280",
    "end": "1405730"
  },
  {
    "text": "maybe to do a number of steps in between so we need to stop the application",
    "start": "1405730",
    "end": "1411420"
  },
  {
    "text": "install start the application validate the service on the instance and we'll see how we can codify this deployment",
    "start": "1411420",
    "end": "1418270"
  },
  {
    "text": "script or deployment instructions in code deploy but once we did that and we have v2 running on the on the instance",
    "start": "1418270",
    "end": "1425350"
  },
  {
    "text": "we know that it's now safe it is now safe to bring traffic back and",
    "start": "1425350",
    "end": "1430540"
  },
  {
    "text": "start having the register again the instance to the load balancer and having",
    "start": "1430540",
    "end": "1436450"
  },
  {
    "text": "customers using that that instance that process will continue iteratively across",
    "start": "1436450",
    "end": "1443350"
  },
  {
    "text": "the fleet of instances until all of them are updated to meet you now it's",
    "start": "1443350",
    "end": "1448870"
  },
  {
    "text": "important to understand that at no point the application is experienced any downtime and we have the choice how",
    "start": "1448870",
    "end": "1456570"
  },
  {
    "text": "to balance between fast rollout which means that we take many instances",
    "start": "1456570",
    "end": "1462149"
  },
  {
    "text": "offline and update update them in parallel or we can do it as slow as one",
    "start": "1462149",
    "end": "1467669"
  },
  {
    "text": "at the time in order to achieve higher availability and lower risk this is something that we we can choose",
    "start": "1467669",
    "end": "1474350"
  },
  {
    "text": "according to our use case now this is",
    "start": "1474350",
    "end": "1480840"
  },
  {
    "text": "good it works but often molder here we know that he is a believer right and",
    "start": "1480840",
    "end": "1486450"
  },
  {
    "text": "he's looking up to the cloud pun intended and he knows that there's must",
    "start": "1486450",
    "end": "1491610"
  },
  {
    "text": "be a better way or better say another way and is in his right the the rise of",
    "start": "1491610",
    "end": "1500190"
  },
  {
    "text": "cloud services such as ec2 and others made it so much easier available and",
    "start": "1500190",
    "end": "1506519"
  },
  {
    "text": "flexible to introduce new capacity to our fleet and use it for our deployment",
    "start": "1506519",
    "end": "1513240"
  },
  {
    "text": "and for our application this allows allows us to implement Bluegreen",
    "start": "1513240",
    "end": "1519929"
  },
  {
    "text": "deployments or the other name immutable deployment and we see that becoming",
    "start": "1519929",
    "end": "1525419"
  },
  {
    "text": "reality in many organizations today so let's go through the workflow of Bluegreen deployments and see how it",
    "start": "1525419",
    "end": "1531000"
  },
  {
    "text": "works in Bluegreen deployments as opposed to implies deployment the first",
    "start": "1531000",
    "end": "1536340"
  },
  {
    "text": "step of the deployment is to introduce the new capacity to provision it in our",
    "start": "1536340",
    "end": "1542240"
  },
  {
    "text": "account or in a different account but introduce a whole new capacity and as you can see there is no traffic flowing",
    "start": "1542240",
    "end": "1549870"
  },
  {
    "text": "to that capacity at this point to that infrastructure v2 is installed but right",
    "start": "1549870",
    "end": "1556470"
  },
  {
    "text": "now no customer can see once we have enough confidence that this new fleet or",
    "start": "1556470",
    "end": "1562740"
  },
  {
    "text": "let's call it the green fluid from now on is up in honey we can start routing production traffic of customer traffic",
    "start": "1562740",
    "end": "1569639"
  },
  {
    "text": "to that fleet this process again sorry",
    "start": "1569639",
    "end": "1574769"
  },
  {
    "text": "the next step which I forgot is obviously to take offline the old fleet",
    "start": "1574769",
    "end": "1580559"
  },
  {
    "text": "or the blue instances this process will again repeat iteratively we can control the speed we can choose",
    "start": "1580559",
    "end": "1587860"
  },
  {
    "text": "the balance between faster or safer more available and once this is done all the",
    "start": "1587860",
    "end": "1594610"
  },
  {
    "text": "traffic will flow to the green fleet and customers will be served by V 2 of the",
    "start": "1594610",
    "end": "1601570"
  },
  {
    "text": "application now it looks like",
    "start": "1601570",
    "end": "1608550"
  },
  {
    "text": "orchestrating Bluegreen deployments is a little more complex than in-place",
    "start": "1608550",
    "end": "1614530"
  },
  {
    "text": "deployments we need to get a lot of moving parts right we need to make sure that the old process is flowing and we",
    "start": "1614530",
    "end": "1621760"
  },
  {
    "text": "don't want to do anything manually right we want to automate it so before we dive into ways to automate it let's talk",
    "start": "1621760",
    "end": "1629230"
  },
  {
    "text": "about why even bother why even considering Bluegreen deployments for all our needs and we can",
    "start": "1629230",
    "end": "1635080"
  },
  {
    "text": "talk about main three main benefits for blue or immutable deployments the first",
    "start": "1635080",
    "end": "1640810"
  },
  {
    "text": "one is that the risk of a configuration drift on the instances is significantly",
    "start": "1640810",
    "end": "1646900"
  },
  {
    "text": "reduced now all the instances are fresh and they didn't have time to be to drift the",
    "start": "1646900",
    "end": "1653740"
  },
  {
    "text": "configuration which may cause issues in the new version of the application",
    "start": "1653740",
    "end": "1659220"
  },
  {
    "text": "the next big benefit and this one's really interesting is that now we can test the application or the new version",
    "start": "1659220",
    "end": "1667020"
  },
  {
    "text": "closer to production or better say in production because unlike in-place",
    "start": "1667020",
    "end": "1672670"
  },
  {
    "text": "deployments immutable deployments allows us to test the actual production fleet",
    "start": "1672670",
    "end": "1677860"
  },
  {
    "text": "first as a staging fleet or tested before outing customer or production",
    "start": "1677860",
    "end": "1684160"
  },
  {
    "text": "traffic to it so we can do it using either a test ELB or other means but we",
    "start": "1684160",
    "end": "1689980"
  },
  {
    "text": "can test the actual fleet before having self customer traffic and the last but",
    "start": "1689980",
    "end": "1697600"
  },
  {
    "text": "not least benefit is that all bags are now much safer and much faster let's",
    "start": "1697600",
    "end": "1703060"
  },
  {
    "text": "dive a little bit into all bags and see how they work assuming we want to haul back for any",
    "start": "1703060",
    "end": "1709990"
  },
  {
    "text": "reason the first thing that we'll do is that we reintroduce the blue instances",
    "start": "1709990",
    "end": "1716380"
  },
  {
    "text": "or the old fleet back to the lower have it start take us to more traffic",
    "start": "1716380",
    "end": "1721419"
  },
  {
    "text": "and then remove the green the green instances or veto of the application",
    "start": "1721419",
    "end": "1728289"
  },
  {
    "text": "this is essentially all back as ng as you can see there is no software",
    "start": "1728289",
    "end": "1733899"
  },
  {
    "text": "installation involved there's no infrastructure provisioning involved it's it is basically rerouting traffic",
    "start": "1733899",
    "end": "1740769"
  },
  {
    "text": "from one set of instances to another this makes it much safer and much faster",
    "start": "1740769",
    "end": "1747429"
  },
  {
    "text": "than rolling back in in place in the fleet so Scott is impressed and if she's",
    "start": "1747429",
    "end": "1757299"
  },
  {
    "text": "impressed I think it's time to show how Bluegreen deployments might walk in Co",
    "start": "1757299",
    "end": "1763570"
  },
  {
    "text": "deployed so we set up a little demo",
    "start": "1763570",
    "end": "1769659"
  },
  {
    "text": "let's see if I can alright what we're",
    "start": "1769659",
    "end": "1783399"
  },
  {
    "text": "looking at right now is the main skin in core deployed and we see a list of",
    "start": "1783399",
    "end": "1791109"
  },
  {
    "text": "application this is the application that we care about this is our application",
    "start": "1791109",
    "end": "1796119"
  },
  {
    "text": "for today let's go and quickly see what we are deploying we are deploying a very",
    "start": "1796119",
    "end": "1801639"
  },
  {
    "text": "sophisticated website that say says hi there Xcode and as you can see the",
    "start": "1801639",
    "end": "1808629"
  },
  {
    "text": "background is cleverly colored blue our designers decided that it's not the",
    "start": "1808629",
    "end": "1814210"
  },
  {
    "text": "right color and maybe they want to change it so we'll go through the change right now and see how we deploy it to",
    "start": "1814210",
    "end": "1820840"
  },
  {
    "text": "production the first thing that I'll do is I'll execute the deployment because",
    "start": "1820840",
    "end": "1828369"
  },
  {
    "text": "it may take a few minutes to to complete and while the deployment is running I'll",
    "start": "1828369",
    "end": "1835690"
  },
  {
    "text": "go through some of the concepts and the configurations in Co deploy I just see",
    "start": "1835690",
    "end": "1844090"
  },
  {
    "text": "that the deployment started wonderful okay so",
    "start": "1844090",
    "end": "1853649"
  },
  {
    "text": "back to the back to the application screen maybe I can make it a little the",
    "start": "1853649",
    "end": "1864629"
  },
  {
    "text": "people in the back see okay all right",
    "start": "1864629",
    "end": "1869629"
  },
  {
    "text": "the first concept that that I'm going to introduce in Co deploy is the concept of",
    "start": "1870409",
    "end": "1876840"
  },
  {
    "text": "a deployment group so under an application I can I can have multiple",
    "start": "1876840",
    "end": "1881969"
  },
  {
    "text": "deployment groups in this case I have a staging deployment group and a production deployment group this allows",
    "start": "1881969",
    "end": "1887940"
  },
  {
    "text": "us to model the stacks of environments in a way that allows repeatable and",
    "start": "1887940",
    "end": "1894119"
  },
  {
    "text": "reliable deployments using the exact same instructions and maybe using",
    "start": "1894119",
    "end": "1900169"
  },
  {
    "text": "different configurations that will change the how fast deployments go or",
    "start": "1900169",
    "end": "1906259"
  },
  {
    "text": "maybe we want to be safer and production and faster and staging so that that",
    "start": "1906259",
    "end": "1914070"
  },
  {
    "text": "concept of deployment group allows us to do just that now another interesting",
    "start": "1914070",
    "end": "1921539"
  },
  {
    "text": "concept that helps us implement and",
    "start": "1921539",
    "end": "1926940"
  },
  {
    "text": "automate deployment in Co deployed is the concept of a lifecycle hook and as",
    "start": "1926940",
    "end": "1932099"
  },
  {
    "text": "you can see there's a list of events that are going to happen on each",
    "start": "1932099",
    "end": "1937499"
  },
  {
    "text": "instance in the group as the deployment is going so Co deploy will run through",
    "start": "1937499",
    "end": "1942539"
  },
  {
    "text": "all those events and all the events that are colored blue ones that we can have a",
    "start": "1942539",
    "end": "1949559"
  },
  {
    "text": "user provided script - one on the instance during that event and how do we",
    "start": "1949559",
    "end": "1956909"
  },
  {
    "text": "now the question is how do we codify that so I'm jumping into a code deploy",
    "start": "1956909",
    "end": "1965539"
  },
  {
    "text": "apps pack file this is a Yama file it's a deployment template that allows us to",
    "start": "1965539",
    "end": "1970859"
  },
  {
    "text": "codify instructions for Co deploy - one through during the deployment it's a very simple",
    "start": "1970859",
    "end": "1978440"
  },
  {
    "text": "configuration file that basically tells Co deploy at this point in time or this",
    "start": "1978440",
    "end": "1984610"
  },
  {
    "text": "lifecycle hook execute this script so it",
    "start": "1984610",
    "end": "1989840"
  },
  {
    "text": "allows us to stop the application to validate them to do health checks and do basically anything that we think is is",
    "start": "1989840",
    "end": "1996770"
  },
  {
    "text": "the right thing to do as part of the deployment to the instance let's go back",
    "start": "1996770",
    "end": "2003370"
  },
  {
    "text": "to our deployment and see how it progresses we still have a probably a minute to talk so we talked about",
    "start": "2003370",
    "end": "2013620"
  },
  {
    "text": "lifecycle hooks and how we can define them using an app spec now I want to show you a little bit about what is the",
    "start": "2013620",
    "end": "2020980"
  },
  {
    "text": "deployment group and we'll go through the configuration because I think it's important to understand what we can do",
    "start": "2020980",
    "end": "2026679"
  },
  {
    "text": "as part of the working what we can define as part of the deployment group in order to make sure that we codify and",
    "start": "2026679",
    "end": "2034120"
  },
  {
    "text": "maintain the right the right configurations and the right settings across the environment so this is a",
    "start": "2034120",
    "end": "2041380"
  },
  {
    "text": "Bluegreen deployment good.what Co deploy will do here this is pretty cool it will",
    "start": "2041380",
    "end": "2047049"
  },
  {
    "text": "take the auto scaling group that is running the application it will create a complete copy including all the",
    "start": "2047049",
    "end": "2054368"
  },
  {
    "text": "instances and all the launch configurations for the group and everything that is defined in the good",
    "start": "2054369",
    "end": "2060190"
  },
  {
    "text": "it will create this copy once this copy is created it will install the new version and once this is done it will",
    "start": "2060190",
    "end": "2067570"
  },
  {
    "text": "start routing traffic to the new application to the new to the new group",
    "start": "2067570",
    "end": "2074669"
  },
  {
    "text": "we have a way to define the load balancer that we're doing this behind and we have a way to define other",
    "start": "2074669",
    "end": "2082440"
  },
  {
    "text": "configurations like if we want the traffic to flow immediately to that new group or you want to wait and see and",
    "start": "2082440",
    "end": "2089440"
  },
  {
    "text": "test it before so maybe in staging we want to immediately reroute the traffic",
    "start": "2089440",
    "end": "2094570"
  },
  {
    "text": "maybe in production I want to wait and test it before",
    "start": "2094570",
    "end": "2100380"
  },
  {
    "text": "all right the other thing that we can define is we can tell Co deploy if we",
    "start": "2103259",
    "end": "2111549"
  },
  {
    "text": "want to terminate the blue fleet or the old fleet after the deployment is done",
    "start": "2111549",
    "end": "2116710"
  },
  {
    "text": "all we want to wait and keep it for the chance that we need to roll back or",
    "start": "2116710",
    "end": "2122650"
  },
  {
    "text": "debug anything or for other reason so we want to we sometimes want to make sure",
    "start": "2122650",
    "end": "2128920"
  },
  {
    "text": "that the fleet is still there for at least a few hours over a day or some amount of time and we want to make sure",
    "start": "2128920",
    "end": "2134769"
  },
  {
    "text": "that Co deploy allows that okay cool",
    "start": "2134769",
    "end": "2140589"
  },
  {
    "text": "we reach to the point where step one is done I'm going to hit reroute traffic",
    "start": "2140589",
    "end": "2146589"
  },
  {
    "text": "now because I configured my deployment group to not start the traffic rerouting",
    "start": "2146589",
    "end": "2152650"
  },
  {
    "text": "immediately I want to give the ACK that hey I'm ready to start get out in",
    "start": "2152650",
    "end": "2157960"
  },
  {
    "text": "traffic so I'm going to do it now and of course it doesn't have to be in the console I can use an API with CLI to do",
    "start": "2157960",
    "end": "2164249"
  },
  {
    "text": "or any type of automation excuse me so if we look at the deployment",
    "start": "2164249",
    "end": "2171519"
  },
  {
    "text": "dashboard we see that step one is complete which means that we now have a",
    "start": "2171519",
    "end": "2176650"
  },
  {
    "text": "new other scanning go if I went to the other scaling group or the ec2 console I would see three new instances behind the",
    "start": "2176650",
    "end": "2183009"
  },
  {
    "text": "auto scaling group I have the v2 of the application already installed on those",
    "start": "2183009",
    "end": "2190089"
  },
  {
    "text": "instances using the instructions that I codified in the core deploy apps back",
    "start": "2190089",
    "end": "2196420"
  },
  {
    "text": "before and now what is happening is that Co deploy is rerouting traffic from the",
    "start": "2196420",
    "end": "2203259"
  },
  {
    "text": "old instances to the new ones and if you look at the right hand side you'll see",
    "start": "2203259",
    "end": "2208420"
  },
  {
    "text": "that the original fleet or the owner instances all of them are still serving",
    "start": "2208420",
    "end": "2214119"
  },
  {
    "text": "customers traffic so if I go to the application right now I see that it is still running everything is still",
    "start": "2214119",
    "end": "2220059"
  },
  {
    "text": "working but most of it most of the requests are being served by v1 right",
    "start": "2220059",
    "end": "2225160"
  },
  {
    "text": "now now gradually I'm seeing that",
    "start": "2225160",
    "end": "2231960"
  },
  {
    "text": "Green the instances are being introduced to the to the fleet behind the load balancer and they will start taking",
    "start": "2231960",
    "end": "2238050"
  },
  {
    "text": "traffic they will start take customers traffic so we see that it's going from",
    "start": "2238050",
    "end": "2243930"
  },
  {
    "text": "one to two and Kali boy can handle a much larger scale than that I just wanted the deployment to you to go",
    "start": "2243930",
    "end": "2250740"
  },
  {
    "text": "faster all right so now all the new instances all the green instances are",
    "start": "2250740",
    "end": "2256290"
  },
  {
    "text": "serving traffic behind the load balancer and at that point once this is done Co",
    "start": "2256290",
    "end": "2261630"
  },
  {
    "text": "deployer will take wil deregister all the other instances and will see the",
    "start": "2261630",
    "end": "2267680"
  },
  {
    "text": "original box drain brains out and not serving any more traffic will say that",
    "start": "2267680",
    "end": "2274470"
  },
  {
    "text": "and probably just just a minute if you look at the at the rest of the dashboard",
    "start": "2274470",
    "end": "2279570"
  },
  {
    "text": "you'll see now that instead of three instances in the list down below we have",
    "start": "2279570",
    "end": "2284910"
  },
  {
    "text": "six instances some of them are part of the replacement environment and something a part of the original environment because Co deploy at this",
    "start": "2284910",
    "end": "2292530"
  },
  {
    "text": "point span up three new instances and have not terminated the other ones yet",
    "start": "2292530",
    "end": "2298760"
  },
  {
    "text": "now again I set up my my deployment group to not terminate before I tell it",
    "start": "2298760",
    "end": "2304410"
  },
  {
    "text": "to terminate so now I'm gonna hit terminate and Cody blow will go in the",
    "start": "2304410",
    "end": "2310320"
  },
  {
    "text": "background and terminate the old instances the deployment is done seems",
    "start": "2310320",
    "end": "2316380"
  },
  {
    "text": "like it was successful that's see that we know we actually deployed the right",
    "start": "2316380",
    "end": "2321410"
  },
  {
    "text": "side version it's working fine surprisingly the the background is now",
    "start": "2321410",
    "end": "2327930"
  },
  {
    "text": "green who would have thought",
    "start": "2327930",
    "end": "2331460"
  },
  {
    "text": "alright so that was Bluegreen deployment in Cody ploy there's a lot more to say",
    "start": "2343310",
    "end": "2350900"
  },
  {
    "text": "about Cody ploy in that sense and I encourage you all to take a look at Co",
    "start": "2350900",
    "end": "2356180"
  },
  {
    "text": "deploy and how to use it to automate deployments as part of a pipeline as part of cloud formation standing up",
    "start": "2356180",
    "end": "2362060"
  },
  {
    "text": "stacks and other other news cases now I",
    "start": "2362060",
    "end": "2367910"
  },
  {
    "text": "think we're we're pretty sure that Bluegreen deployments are quite cool and",
    "start": "2367910",
    "end": "2373970"
  },
  {
    "text": "maybe you want to use them but what are the what are some of the pros of in-place deployment what are some of the",
    "start": "2373970",
    "end": "2381080"
  },
  {
    "text": "reasons that maybe we want to choose interesting points anyway and the first reason is if the time to deploy a change",
    "start": "2381080",
    "end": "2387980"
  },
  {
    "text": "is really critical for us we want to get a hotfix out there as fast as possible",
    "start": "2387980",
    "end": "2393670"
  },
  {
    "text": "you probably noticed in the demo that step one of standing up the the capacity",
    "start": "2393670",
    "end": "2400190"
  },
  {
    "text": "the infrastructure takes a little time this is just by the nature of standing up new you see two instances and auto",
    "start": "2400190",
    "end": "2406640"
  },
  {
    "text": "scaling group and this this part may introduce overhead in terms of the time",
    "start": "2406640",
    "end": "2413720"
  },
  {
    "text": "to deploy that we want to avoid in some cases so have that in mind and the other",
    "start": "2413720",
    "end": "2418910"
  },
  {
    "text": "reason is if the instances carry a lot of state that will be really hard or",
    "start": "2418910",
    "end": "2425870"
  },
  {
    "text": "complicated to copy to the new green instances that may be another reason to",
    "start": "2425870",
    "end": "2433010"
  },
  {
    "text": "to be cautious about Bluegreen deployments and use in place deployments",
    "start": "2433010",
    "end": "2438110"
  },
  {
    "text": "anyway but overall molder is right we'll",
    "start": "2438110",
    "end": "2444560"
  },
  {
    "text": "be crazy not to at least consider Bluegreen deployment for application if the use case allows it and if it works",
    "start": "2444560",
    "end": "2450980"
  },
  {
    "text": "for our needs shifting gears a little",
    "start": "2450980",
    "end": "2456080"
  },
  {
    "text": "bit we talked about how to choose the AI deployment technique and we demoed one",
    "start": "2456080",
    "end": "2462890"
  },
  {
    "text": "technique but what if something happened what if what if something happened",
    "start": "2462890",
    "end": "2469850"
  },
  {
    "text": "during the deployment and it didn't go well what if we pushed bad code into production",
    "start": "2469850",
    "end": "2475500"
  },
  {
    "text": "and we want to want to recover somehow so we want to believe that not all is",
    "start": "2475500",
    "end": "2480960"
  },
  {
    "text": "lost right and luckily we have Scully she had our back and she implemented a",
    "start": "2480960",
    "end": "2486680"
  },
  {
    "text": "concept that is called alarm based Otto Olmecs now this complicated name is is",
    "start": "2486680",
    "end": "2496170"
  },
  {
    "text": "basically meaning a very simple concept and the concept is that we follow some",
    "start": "2496170",
    "end": "2502980"
  },
  {
    "text": "metrics of the application it could be any type of metric that Steve was talking about before it could be the CPU",
    "start": "2502980",
    "end": "2509430"
  },
  {
    "text": "usage the memory usage 400-500 number of healthy hosts behind the load balancer",
    "start": "2509430",
    "end": "2516599"
  },
  {
    "text": "could be basically any metric that tells us that the application is healthy now",
    "start": "2516599",
    "end": "2522410"
  },
  {
    "text": "we don't only monitor those metrics we also set a threshold that we know that",
    "start": "2522410",
    "end": "2529680"
  },
  {
    "text": "if this threshold is crossed we want to make sure we know that hey something's",
    "start": "2529680",
    "end": "2534840"
  },
  {
    "text": "wrong I want to go back to safety I want to go back to the previous version so as",
    "start": "2534840",
    "end": "2541140"
  },
  {
    "text": "soon as the threshold is crossed one we want some tooling in our deployment",
    "start": "2541140",
    "end": "2547680"
  },
  {
    "text": "tooling to monitor those alarms and automatically all that we want we don't want anyone or to manually interfere in",
    "start": "2547680",
    "end": "2554820"
  },
  {
    "text": "this process because we want to roll back first and ask questions later in",
    "start": "2554820",
    "end": "2560880"
  },
  {
    "text": "order to minimize the impact on our customers as much as we can and recover",
    "start": "2560880",
    "end": "2566130"
  },
  {
    "text": "as fast as we can so let's go back to Co",
    "start": "2566130",
    "end": "2574109"
  },
  {
    "text": "deploy for just a second I'm not going to run another deployment I'm just going",
    "start": "2574109",
    "end": "2580650"
  },
  {
    "text": "to show how we can use a couple of AWS services in order to achieve this",
    "start": "2580650",
    "end": "2587750"
  },
  {
    "text": "automatic holdbacks based on alarms so I created a very simple alarm here that",
    "start": "2587750",
    "end": "2595320"
  },
  {
    "text": "tells me that the number of instant tell me tells me the number of healthy",
    "start": "2595320",
    "end": "2601200"
  },
  {
    "text": "instances behind the load balancer and I set a threshold to 3 right if at any",
    "start": "2601200",
    "end": "2607140"
  },
  {
    "text": "point is number of healthy instances will go below three this alarm will go off and as this alarm will go",
    "start": "2607140",
    "end": "2615660"
  },
  {
    "text": "off my deployment group in code deploy",
    "start": "2615660",
    "end": "2622310"
  },
  {
    "text": "will catch this alarm and automatically all back the deployment so now there's",
    "start": "2622310",
    "end": "2630119"
  },
  {
    "text": "no one there's no person in the process we have an alarm setup in cloud watch",
    "start": "2630119",
    "end": "2635970"
  },
  {
    "text": "alarms we have a threshold that we decided on and as soon as this alarm is",
    "start": "2635970",
    "end": "2641400"
  },
  {
    "text": "going off during the deployment Cody ploy will catch it and wall back to the",
    "start": "2641400",
    "end": "2647130"
  },
  {
    "text": "previous version and Cody blow is authoritative do you know which which is the last successful revision to all back",
    "start": "2647130",
    "end": "2654930"
  },
  {
    "text": "to so this is pretty cool we now have a way to implement the concept of alarm",
    "start": "2654930",
    "end": "2663390"
  },
  {
    "text": "based all backs and we can move on to another to another challenge that we see",
    "start": "2663390",
    "end": "2671100"
  },
  {
    "text": "often times in our applications and this is how to deal with a dynamic fleet and",
    "start": "2671100",
    "end": "2677670"
  },
  {
    "text": "what do I mean by dynamic 3 sometimes it's ok to have a certain amount of infrastructure and capacity for",
    "start": "2677670",
    "end": "2684210"
  },
  {
    "text": "application but at some point in time we need to introduce new capacity and that",
    "start": "2684210",
    "end": "2690480"
  },
  {
    "text": "new capacity can be introduced in many ways either automatically using an auto scaling group or we can do it by",
    "start": "2690480",
    "end": "2697530"
  },
  {
    "text": "deploying cloud formation with updated number of instances etc but once this",
    "start": "2697530",
    "end": "2704850"
  },
  {
    "text": "capacity is introduced the challenge is how to get the application the right",
    "start": "2704850",
    "end": "2710550"
  },
  {
    "text": "version of the application using the right deployment instructions that we always use in a very reliable and safe",
    "start": "2710550",
    "end": "2717359"
  },
  {
    "text": "way to the to the new capacity to the new instances and on top of all that we",
    "start": "2717359",
    "end": "2725010"
  },
  {
    "text": "want to make sure that it's completely automated because I don't want to get a",
    "start": "2725010",
    "end": "2731070"
  },
  {
    "text": "page every time that a new instance is being introduced to the fleet so I need",
    "start": "2731070",
    "end": "2736380"
  },
  {
    "text": "to kick off a deployment and and make sure it's working right so",
    "start": "2736380",
    "end": "2742799"
  },
  {
    "text": "let's talk about the positive those many reasons we might need to add capacity to",
    "start": "2742799",
    "end": "2750459"
  },
  {
    "text": "the application or add infrastructure the most awesome reason is that customers simply love the service",
    "start": "2750459",
    "end": "2756999"
  },
  {
    "text": "they'll have the application and they come it's becoming popular the traffic is surging right in that case we can",
    "start": "2756999",
    "end": "2765609"
  },
  {
    "text": "have a service like auto scaling group to catch this traffic surge and",
    "start": "2765609",
    "end": "2771239"
  },
  {
    "text": "immediately automatically without us needed need to interfere introduced new",
    "start": "2771239",
    "end": "2776259"
  },
  {
    "text": "capacity this new capacity as we said before is not running any application it's a fresh new ec2 instance the",
    "start": "2776259",
    "end": "2786369"
  },
  {
    "text": "missing link here or the challenge that we talked about before can be filled by a service like ha deploy core deploy",
    "start": "2786369",
    "end": "2793869"
  },
  {
    "text": "will track the group of instances and as soon as a new instance is being added to",
    "start": "2793869",
    "end": "2801309"
  },
  {
    "text": "that group core employer will get a signal from autoscanning group hey there's a new there's a new capacity",
    "start": "2801309",
    "end": "2808380"
  },
  {
    "text": "tell us what you do or do whatever you need and then tell us that you're done right and Cody ploy will take the signal",
    "start": "2808380",
    "end": "2817139"
  },
  {
    "text": "go back to the last successful revision or the last successful deployment",
    "start": "2817139",
    "end": "2822509"
  },
  {
    "text": "execute that deployment using the exact same instructions as before that we",
    "start": "2822509",
    "end": "2827979"
  },
  {
    "text": "codified in the up spec llamó file if you remember so and once this deployment",
    "start": "2827979",
    "end": "2833169"
  },
  {
    "text": "is done to that new capacity it will tell other scaling group that hey good",
    "start": "2833169",
    "end": "2839139"
  },
  {
    "text": "to go we can start serving traffic we can add this new capacity to the load",
    "start": "2839139",
    "end": "2846189"
  },
  {
    "text": "balancer and have it serve our customers",
    "start": "2846189",
    "end": "2851249"
  },
  {
    "text": "many of the of our customers think that this process is quite magical and the",
    "start": "2851369",
    "end": "2857079"
  },
  {
    "text": "reason it is is because now we can completely automate and forget about",
    "start": "2857079",
    "end": "2863609"
  },
  {
    "text": "during deployment as part of scaling up new capacity and new infrastructure this",
    "start": "2863609",
    "end": "2870009"
  },
  {
    "text": "really takes the effort away from dealing with dynamic dynamic fleets so this concludes our",
    "start": "2870009",
    "end": "2881670"
  },
  {
    "text": "session for today let's go quickly about over what we learned so we started by",
    "start": "2881670",
    "end": "2887940"
  },
  {
    "text": "talking about reducing the blast radius or the impact of a change to our",
    "start": "2887940",
    "end": "2893280"
  },
  {
    "text": "customers by introducing changes slowly and slowly can mean different things regional segmentation zonal segmentation",
    "start": "2893280",
    "end": "2900809"
  },
  {
    "text": "one-box etc then we talked about driving the application and the control plane with",
    "start": "2900809",
    "end": "2907440"
  },
  {
    "text": "synthetic traffic because we want to make sure that as many use cases as",
    "start": "2907440",
    "end": "2912780"
  },
  {
    "text": "possible are being covered quickly after the deployment is done and continuously",
    "start": "2912780",
    "end": "2918089"
  },
  {
    "text": "over time and we don't we can always rely on our customers to execute all the use cases quick enough then we talked",
    "start": "2918089",
    "end": "2927359"
  },
  {
    "text": "about using synthetic traffic you know that you automatically roll back",
    "start": "2927359",
    "end": "2934950"
  },
  {
    "text": "actually synthetic traffic and the real-world traffic so in that case we can have our metrics monitor both",
    "start": "2934950",
    "end": "2941390"
  },
  {
    "text": "synthetic and real-world traffic and once the threshold is being crossed we want to automatically roll back and we",
    "start": "2941390",
    "end": "2948359"
  },
  {
    "text": "showed how to use a couple of AWS services in order to achieve this",
    "start": "2948359",
    "end": "2953369"
  },
  {
    "text": "automation in real life we talked about the advantages of a blue Glen deployment",
    "start": "2953369",
    "end": "2958680"
  },
  {
    "text": "as well as some of the advantages of in-place deployment and I think we saw",
    "start": "2958680",
    "end": "2964200"
  },
  {
    "text": "that if we can and if it fits our needs we might want to consider Bluegreen deployments and as as complicated as it",
    "start": "2964200",
    "end": "2972000"
  },
  {
    "text": "seems to automate there's tooling in AWS that may help us do it in in an",
    "start": "2972000",
    "end": "2978720"
  },
  {
    "text": "effortless way and lastly we talked about how to automate how to react in an",
    "start": "2978720",
    "end": "2986309"
  },
  {
    "text": "automated way to scale up events in order to make sure that running and",
    "start": "2986309",
    "end": "2991349"
  },
  {
    "text": "dynamic fleet is not becoming a huge headache for us thank you so much for",
    "start": "2991349",
    "end": "2998069"
  },
  {
    "text": "being with us today we have a few more minutes to take questions so Steve and I will take",
    "start": "2998069",
    "end": "3003500"
  },
  {
    "text": "questions together if we don't have time for this later I want to thank you all for being with us",
    "start": "3003500",
    "end": "3008839"
  },
  {
    "text": "today we are eager to hear your feedback both on the talk and on Co deployed now",
    "start": "3008839",
    "end": "3016119"
  },
  {
    "text": "or any time in the future we use the feedback to improve use the feedback to",
    "start": "3016119",
    "end": "3021589"
  },
  {
    "text": "deliver new features and new capabilities that are helpful for you so",
    "start": "3021589",
    "end": "3026929"
  },
  {
    "text": "feel free to reach out to us either now in the hallway or anytime in the future and now we can take questions can you",
    "start": "3026929",
    "end": "3039919"
  },
  {
    "text": "use code deploy deploy mixed types of services for example an Aurora database with a web stack in front of it",
    "start": "3039919",
    "end": "3046630"
  },
  {
    "text": "Soko deploy is completely agnostic to the application that is being deployed the only requirement from Co deploy is",
    "start": "3046630",
    "end": "3053890"
  },
  {
    "text": "to package or bundle your application in one zip or towel and add the up specter",
    "start": "3053890",
    "end": "3062089"
  },
  {
    "text": "channel file to the top level of the zip and then that's it gotta go just execute whatever the",
    "start": "3062089",
    "end": "3069229"
  },
  {
    "text": "instruction the app spec file tells it on the instance so in the in terms of the application type core deploy is",
    "start": "3069229",
    "end": "3076039"
  },
  {
    "text": "completely agnostic you could do multiple applications in one deployment you could separate them you can model",
    "start": "3076039",
    "end": "3082849"
  },
  {
    "text": "them using the core deploy modeling to separate application separate deployment",
    "start": "3082849",
    "end": "3088549"
  },
  {
    "text": "groups etc but I think the direct answer to your question is that corduroy is agnostic to the application was that",
    "start": "3088549",
    "end": "3095989"
  },
  {
    "text": "what you yeah was your question can you like group",
    "start": "3095989",
    "end": "3102109"
  },
  {
    "text": "multiple deployments and send them out in batches no yeah no so answer is no",
    "start": "3102109",
    "end": "3109759"
  },
  {
    "text": "you cannot coordinate multiple deployments to go out at the same time unless like a fair mention they're bundled in a single deployment bundle",
    "start": "3109759",
    "end": "3116919"
  },
  {
    "text": "exactly if they if they are bundled together and defined in the same Yama file then the answer is yes if you want",
    "start": "3116919",
    "end": "3124759"
  },
  {
    "text": "to Yama files or two bundles to go together in a coordinated way then those",
    "start": "3124759",
    "end": "3130130"
  },
  {
    "text": "are two deployments that go in parallel then the answer is no it's not possible",
    "start": "3130130",
    "end": "3137589"
  },
  {
    "text": "you could sew in the India mill itself and I'm happy to show you afterwards you",
    "start": "3137850",
    "end": "3143410"
  },
  {
    "text": "can specify anything from the bundle to install on the on the instance so as",
    "start": "3143410",
    "end": "3149320"
  },
  {
    "text": "long as everything from them everything that you want to install from the bundle is going to the same ec2",
    "start": "3149320",
    "end": "3155740"
  },
  {
    "text": "instance the answer is yes but again if you want to do it in two separate deployments and monitor them separately",
    "start": "3155740",
    "end": "3161920"
  },
  {
    "text": "but do it in parallel then it's not supported I am happy to show you later",
    "start": "3161920",
    "end": "3167260"
  },
  {
    "text": "how to implement it thanks you mentioned the introduction of",
    "start": "3167260",
    "end": "3173350"
  },
  {
    "text": "synthetic data in general or synthetic traffic how do you filter this traffic",
    "start": "3173350",
    "end": "3178390"
  },
  {
    "text": "from appearing in the monitoring and then getting alerted upon we don't filter we want to get alerted on it",
    "start": "3178390",
    "end": "3184210"
  },
  {
    "text": "that's that's the idea the synthetic traffic is to drive like our metrics to",
    "start": "3184210",
    "end": "3189940"
  },
  {
    "text": "let that let us know that the service is performing the way we want it to perform and you know things things that occur",
    "start": "3189940",
    "end": "3195760"
  },
  {
    "text": "like say I depend on someone else's service and they they deploy and their use case didn't consider what I was",
    "start": "3195760",
    "end": "3201580"
  },
  {
    "text": "using it for and they regress me somehow like I immediately want to know that that regressed I don't I don't want you",
    "start": "3201580",
    "end": "3206620"
  },
  {
    "text": "know customers to know if you're trying to get like business metrics and things like that you may need a different approach if you want to filter out like",
    "start": "3206620",
    "end": "3212620"
  },
  {
    "text": "your accounts and we do do that actually it's a separate process that we do that but for the monitors though I there's no",
    "start": "3212620",
    "end": "3220960"
  },
  {
    "text": "good reason for me to differentiate between real in synthetic traffic no but for the alerts how do you filter that",
    "start": "3220960",
    "end": "3226270"
  },
  {
    "text": "out from alerts because suddenly it gets noisy if you get an email every time someone deploys because the synthetic",
    "start": "3226270",
    "end": "3233080"
  },
  {
    "text": "data is just throwing out failures because that's one of those traffic it",
    "start": "3233080",
    "end": "3239560"
  },
  {
    "text": "would happen to my customer so I don't want to throw those emails out I was",
    "start": "3239560",
    "end": "3251470"
  },
  {
    "text": "interested in hearing about the automatic deployment as part of the scale up using the code Floy would that",
    "start": "3251470",
    "end": "3261340"
  },
  {
    "text": "work with docker and containers we have a server that basically has about four",
    "start": "3261340",
    "end": "3267040"
  },
  {
    "text": "containers we four containers one of them our application the others are different ones but they all work together so would",
    "start": "3267040",
    "end": "3274529"
  },
  {
    "text": "that work with deploying containers or running containers in why are you",
    "start": "3274529",
    "end": "3279630"
  },
  {
    "text": "running containers and easy to host yes yeah I mean you can bundle that as your",
    "start": "3279630",
    "end": "3285809"
  },
  {
    "text": "deployment bundle so independent if you if you if you can learn it if you can",
    "start": "3285809",
    "end": "3291180"
  },
  {
    "text": "bundle your containers as part of the deployment bundle as and as part of the",
    "start": "3291180",
    "end": "3297559"
  },
  {
    "text": "up spec you'll file then yes it will happen in the same the same way but just",
    "start": "3297559",
    "end": "3304049"
  },
  {
    "text": "a disclaimer if you use any container orchestration system like ECS or other",
    "start": "3304049",
    "end": "3310049"
  },
  {
    "text": "than code employed is not integrated with those at this point you had",
    "start": "3310049",
    "end": "3317940"
  },
  {
    "text": "mentioned in caveated the blue-green deployment with stateful type of",
    "start": "3317940",
    "end": "3323339"
  },
  {
    "text": "applications if you're dealing with an application that is intimately tied into a database or some some aspect of a",
    "start": "3323339",
    "end": "3331710"
  },
  {
    "text": "datastore and your code is being changed such that the schema is being modified",
    "start": "3331710",
    "end": "3337049"
  },
  {
    "text": "in a braking way and then you pick up operational traffic and you go back",
    "start": "3337049",
    "end": "3342450"
  },
  {
    "text": "through your rollback for whatever reason what are some of the strategies how do you how do view dealt with that I",
    "start": "3342450",
    "end": "3347849"
  },
  {
    "text": "mean you know yeah sure I mean the short",
    "start": "3347849",
    "end": "3353220"
  },
  {
    "text": "answer is you if you're modifying the schema where you know there's a period",
    "start": "3353220",
    "end": "3358559"
  },
  {
    "text": "of time where traffic needs that basically you'd you're change the speed backwards-compatible uses kind of a short answer there your service change",
    "start": "3358559",
    "end": "3365460"
  },
  {
    "text": "could include both v1 and v2 essentially to support that schema you let that",
    "start": "3365460",
    "end": "3370950"
  },
  {
    "text": "traffic die off and then you put up another change basically that kills off the old the old version is kind of short",
    "start": "3370950",
    "end": "3377430"
  },
  {
    "text": "answer of that are you moving the whole database into the the v2 deployments",
    "start": "3377430",
    "end": "3382950"
  },
  {
    "text": "when you're standing up the stack of new so you had like a stored procedure for example something like that that could",
    "start": "3382950",
    "end": "3388950"
  },
  {
    "text": "an additional parameter okay you know your v1 and your old stored procedure would have to live on for a period of",
    "start": "3388950",
    "end": "3395400"
  },
  {
    "text": "time you move your upstream services to support that new version but you are",
    "start": "3395400",
    "end": "3400619"
  },
  {
    "text": "physically standing up another database in a new environment I think I think",
    "start": "3400619",
    "end": "3406499"
  },
  {
    "text": "there's two layers to the 2d answer here one is do you actually do Bluegreen for",
    "start": "3406499",
    "end": "3412949"
  },
  {
    "text": "the data no it's possible and this is the way you update your",
    "start": "3412949",
    "end": "3419880"
  },
  {
    "text": "schema right this is one topic that was actually almost made it to the talk but",
    "start": "3419880",
    "end": "3427130"
  },
  {
    "text": "we trimmed it the last minute but there's methodologies and strategies how",
    "start": "3427130",
    "end": "3432719"
  },
  {
    "text": "to update the data now another layer to your question I feel is if you just want",
    "start": "3432719",
    "end": "3438420"
  },
  {
    "text": "as part of the deployment to update the schema in an existing database that's",
    "start": "3438420",
    "end": "3444359"
  },
  {
    "text": "exactly the use case of the user provided script in the up spec file and",
    "start": "3444359",
    "end": "3451109"
  },
  {
    "text": "we see a lot of customers just as part of the deployment one of the scripts that they run is a script that goes to",
    "start": "3451109",
    "end": "3458219"
  },
  {
    "text": "the data to the database does all the updates make sure the schema is right",
    "start": "3458219",
    "end": "3463979"
  },
  {
    "text": "and then goes back to code deploy and say okay this is done move on to the next life cycle event okay and",
    "start": "3463979",
    "end": "3470989"
  },
  {
    "text": "continually so this is a very useful way to use the app spec so we'll take one",
    "start": "3470989",
    "end": "3479549"
  },
  {
    "text": "more question here and then we'll move up to the side of the room over here if anybody and also I'll mention that I'll be at the dev tools booth from 4:00 to",
    "start": "3479549",
    "end": "3486179"
  },
  {
    "text": "7:00 tonight if anyone wants to stop by with other questions there but let's take one more actually mine is a longer",
    "start": "3486179",
    "end": "3491339"
  },
  {
    "text": "question so I'll hand it over to him and okay he stepped away so we're big fans",
    "start": "3491339",
    "end": "3501119"
  },
  {
    "text": "of Bluegreen deployments but I'm kind of having a hard time understanding how you",
    "start": "3501119",
    "end": "3506670"
  },
  {
    "text": "would implement cloud formation doing a Bluegreen deployment",
    "start": "3506670",
    "end": "3512880"
  },
  {
    "text": "presently cloud formation and blue pop permissions and support Blue Beam presently we hear that as a customer",
    "start": "3512880",
    "end": "3518549"
  },
  {
    "text": "request and you know it's something we're tracking it was a feature request um is there a way would you recommend",
    "start": "3518549",
    "end": "3523890"
  },
  {
    "text": "not including the auto scaling group as part of a stack so if you're not including",
    "start": "3523890",
    "end": "3529339"
  },
  {
    "text": "the other skinning group you can implement it but otherwise I think you notice that if Co deployer is creating",
    "start": "3529339",
    "end": "3534919"
  },
  {
    "text": "any other scaling group out of band from this back that's going to interfere with the tracking that cloud formation is",
    "start": "3534919",
    "end": "3541549"
  },
  {
    "text": "doing to the stack so we do have customers using blue green and they stand up all the pipeline including Co",
    "start": "3541549",
    "end": "3549169"
  },
  {
    "text": "Depot including everything using cloud formation but they're not including the",
    "start": "3549169",
    "end": "3556189"
  },
  {
    "text": "auto scaling group we don't think that this is necessarily the recommended way",
    "start": "3556189",
    "end": "3562009"
  },
  {
    "text": "but it is possible to do and we can talk about it more okay okay so well move",
    "start": "3562009",
    "end": "3574999"
  },
  {
    "text": "meet anybody else over here at the side just you know a few minutes thank you thank you all for coming thank you all",
    "start": "3574999",
    "end": "3580900"
  }
]