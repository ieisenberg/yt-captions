[
  {
    "text": "In this video, you’ll see how to set AWS Elastic \nDisaster Recovery launch templates at scale.  ",
    "start": "225",
    "end": "5185"
  },
  {
    "text": "With this solution, you can set launch \ntemplates automatically rather than manually,  ",
    "start": "5760",
    "end": "9680"
  },
  {
    "text": "perform AWS Elastic Disaster Recovery \nService (DRS) API calls through code,  ",
    "start": "9680",
    "end": "14880"
  },
  {
    "text": "and observe a best practice \nof asset management.",
    "start": "14880",
    "end": "17120"
  },
  {
    "text": "We’ll begin in the AWS Elastic \nDisaster Recovery console,",
    "start": "19280",
    "end": "22640"
  },
  {
    "text": "where we currently have six source servers, \neach with a corresponding launch template.",
    "start": "22640",
    "end": "26240"
  },
  {
    "text": "Let’s drill down into one of the \nservers and review its launch settings.",
    "start": "26880",
    "end": "29840"
  },
  {
    "text": "Launch templates cannot be edited in \na batch using the native DRS tooling,",
    "start": "33200",
    "end": "36640"
  },
  {
    "text": "so by default each launch \ntemplate needs to be set manually.",
    "start": "36640",
    "end": "39582"
  },
  {
    "text": "Let’s return to our server list.",
    "start": "40091",
    "end": "41450"
  },
  {
    "text": "To automate the process of setting \nlaunch templates for source machines,",
    "start": "42840",
    "end": "45680"
  },
  {
    "text": "we can use Lambda functions to edit all \nlaunch templates that have been tagged",
    "start": "45680",
    "end": "48480"
  },
  {
    "text": "with a matching key in the Amazon \nElastic Disaster Recovery console.",
    "start": "48480",
    "end": "51828"
  },
  {
    "text": "Let’s take a look at one of these servers’ tags.",
    "start": "52388",
    "end": "54308"
  },
  {
    "text": "This is a database server and it’s tagged \nas “DB.” So, using the Lambda functions,",
    "start": "56640",
    "end": "60960"
  },
  {
    "text": "we can create one launch template \nfor all servers tagged as “DB.”",
    "start": "60960",
    "end": "64000"
  },
  {
    "text": "The Lambda functions are fully deployed as \ncode in the AWS sample repository on GitHub.",
    "start": "64560",
    "end": "68880"
  },
  {
    "text": "This package contains full \ninstructions for cloning the",
    "start": "70720",
    "end": "72960"
  },
  {
    "text": "repository and setting up all of its components.",
    "start": "72960",
    "end": "75280"
  },
  {
    "text": "Let’s view the solution architecture.",
    "start": "75475",
    "end": "76893"
  },
  {
    "text": "The solution consists of the AWS \nElastic Disaster Recovery console,",
    "start": "78831",
    "end": "82671"
  },
  {
    "text": "an Amazon Simple Storage Service \n(Amazon S3) bucket for template storage,",
    "start": "82671",
    "end": "86479"
  },
  {
    "text": "and two Lambda functions.",
    "start": "86480",
    "end": "87855"
  },
  {
    "text": "We’ll look at these functions again later on.",
    "start": "88373",
    "end": "90166"
  },
  {
    "text": "Let’s return to the Amazon \nElastic Disaster Recovery console.",
    "start": "90825",
    "end": "93765"
  },
  {
    "text": "Let’s view the tag for another source server.",
    "start": "94247",
    "end": "96188"
  },
  {
    "text": "This server is tagged as “App.”",
    "start": "100487",
    "end": "101926"
  },
  {
    "text": "For the purposes of this example, we \nhave already created launch templates",
    "start": "102417",
    "end": "105200"
  },
  {
    "text": "for the App tag and the DB tags.",
    "start": "105200",
    "end": "107181"
  },
  {
    "text": "Let’s view the App launch template.",
    "start": "107552",
    "end": "109019"
  },
  {
    "text": "These are all the fields that can \nbe included in a launch template.",
    "start": "110000",
    "end": "112470"
  },
  {
    "text": "Most of these fields are currently set to \n“null,” but we can modify them as needed.",
    "start": "112813",
    "end": "116239"
  },
  {
    "text": "Notice that the instance type is set to “t3.small.”",
    "start": "116637",
    "end": "119287"
  },
  {
    "text": "Next, let’s view the DB launch template.",
    "start": "119942",
    "end": "121927"
  },
  {
    "text": "The instance type in this \ntemplate is set to “t3.large.”",
    "start": "122816",
    "end": "125796"
  },
  {
    "text": "Let’s upload both templates to the Amazon S3 \nbucket we’ve already set up for our solution.",
    "start": "126166",
    "end": "130186"
  },
  {
    "text": "Now that we’ve uploaded the \ntemplates, let’s return to the",
    "start": "143440",
    "end": "145840"
  },
  {
    "text": "architecture overview in GitHub and review \nhow our solution responds to the upload.",
    "start": "145840",
    "end": "149640"
  },
  {
    "text": "When we add JSON launch templates \nto the bucket, the first Lambda function,",
    "start": "152000",
    "end": "155200"
  },
  {
    "text": "“set-drs-templates,” automatically \nupdates the DRS servers that are",
    "start": "155200",
    "end": "158720"
  },
  {
    "text": "tagged with the prefix of the \nuploaded JSON template files.",
    "start": "158720",
    "end": "161608"
  },
  {
    "text": "Let’s go back to the Amazon Elastic \nDisaster Recovery console to confirm",
    "start": "162053",
    "end": "165200"
  },
  {
    "text": "that this occurred when we \nuploaded our templates.",
    "start": "165200",
    "end": "167040"
  },
  {
    "text": "This is our server tagged as “App.” \nLet’s review its launch settings.",
    "start": "168416",
    "end": "171699"
  },
  {
    "text": "Notice that the instance type is set to “t3.small” \nin accordance with the App template we uploaded.",
    "start": "175447",
    "end": "180141"
  },
  {
    "text": "Let’s check the DB server.",
    "start": "180539",
    "end": "181746"
  },
  {
    "text": "This server has inherited the “t3.large” \ninstance type from the DB launch template.",
    "start": "189160",
    "end": "193240"
  },
  {
    "text": "Let’s go back to the server list and try \nadding a new server to one of these tag groups.",
    "start": "193936",
    "end": "197479"
  },
  {
    "text": "We’ll remove this server’s existing \ntags, and then tag it as an “App” server.",
    "start": "199813",
    "end": "203133"
  },
  {
    "text": "Now that we’ve added the tag, let’s take a look",
    "start": "226459",
    "end": "228240"
  },
  {
    "text": "at the Lambda function that will \nset the server’s launch template.",
    "start": "228240",
    "end": "230788"
  },
  {
    "text": "This Lambda function, “schedule-drs-templates,”",
    "start": "232324",
    "end": "234785"
  },
  {
    "text": "periodically looks for \nany new DRS servers that",
    "start": "234785",
    "end": "237040"
  },
  {
    "text": "are tagged and then pulls the \ncorresponding launch template.",
    "start": "237040",
    "end": "239497"
  },
  {
    "text": "For our purposes, we’ll trigger the \nfunction manually by running a test.",
    "start": "240718",
    "end": "243795"
  },
  {
    "text": "Next, let’s verify that the server we tagged \nas “App” inherited our App launch template.",
    "start": "250262",
    "end": "254452"
  },
  {
    "text": "As expected, the server’s instance type is now \n“t3.small,” in accordance with our App template.",
    "start": "257607",
    "end": "262567"
  },
  {
    "text": "If we had large numbers of \nservers with a matching tag,",
    "start": "263182",
    "end": "265662"
  },
  {
    "text": "we could automatically set launch templates \nfor all of them at once using this solution.",
    "start": "265662",
    "end": "269257"
  },
  {
    "text": "You’ve just seen how to set AWS Elastic \nDisaster Recovery launch templates at scale.",
    "start": "271955",
    "end": "276115"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "277389",
    "end": "280363"
  },
  {
    "text": "Thanks for watching. Now it’s your turn to try.",
    "start": "280576",
    "end": "282556"
  }
]