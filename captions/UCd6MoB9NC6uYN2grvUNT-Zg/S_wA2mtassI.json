[
  {
    "text": "and I'm a partner database essay here at",
    "start": "7040",
    "end": "9840"
  },
  {
    "text": "AWS where my fake focus is nosql",
    "start": "9840",
    "end": "13080"
  },
  {
    "text": "databases this is the first nugget under",
    "start": "13080",
    "end": "15660"
  },
  {
    "text": "cost optimization as there are multiple",
    "start": "15660",
    "end": "18119"
  },
  {
    "text": "ways you can cost optimize your dynamodb",
    "start": "18119",
    "end": "20460"
  },
  {
    "text": "table",
    "start": "20460",
    "end": "21600"
  },
  {
    "text": "in this short video I'll discuss the",
    "start": "21600",
    "end": "23939"
  },
  {
    "text": "standard IE table class which was",
    "start": "23939",
    "end": "26039"
  },
  {
    "text": "launched in December 2021. it will be an",
    "start": "26039",
    "end": "29939"
  },
  {
    "text": "introduction to standard IE table class",
    "start": "29939",
    "end": "32279"
  },
  {
    "text": "how to enable standard I table class and",
    "start": "32279",
    "end": "35520"
  },
  {
    "text": "there will be sample two calculations",
    "start": "35520",
    "end": "37500"
  },
  {
    "text": "that will help you to understand how",
    "start": "37500",
    "end": "39840"
  },
  {
    "text": "this can help you to save dollars when",
    "start": "39840",
    "end": "41520"
  },
  {
    "text": "it comes to optimizing your cost per tan",
    "start": "41520",
    "end": "43620"
  },
  {
    "text": "modib",
    "start": "43620",
    "end": "44760"
  },
  {
    "text": "now in this entire video I'll be using",
    "start": "44760",
    "end": "47219"
  },
  {
    "text": "standard IE as a shorthand for standard",
    "start": "47219",
    "end": "49739"
  },
  {
    "text": "for infrequent access table class",
    "start": "49739",
    "end": "52800"
  },
  {
    "text": "Amazon dynamodb standard IET book class",
    "start": "52800",
    "end": "55320"
  },
  {
    "text": "helps you to reduce your Dan would be",
    "start": "55320",
    "end": "57360"
  },
  {
    "text": "storage cost by 60 for tables that store",
    "start": "57360",
    "end": "61280"
  },
  {
    "text": "infrequently access data the dynamodb",
    "start": "61280",
    "end": "64799"
  },
  {
    "text": "standard I table class is idle for the",
    "start": "64799",
    "end": "67140"
  },
  {
    "text": "use cases that require long term storage",
    "start": "67140",
    "end": "70080"
  },
  {
    "text": "of data that is infrequently accessed",
    "start": "70080",
    "end": "72780"
  },
  {
    "text": "for examples application log old social",
    "start": "72780",
    "end": "76080"
  },
  {
    "text": "media post e-commerce order history are",
    "start": "76080",
    "end": "79140"
  },
  {
    "text": "past gaming achievements you can read",
    "start": "79140",
    "end": "81840"
  },
  {
    "text": "more on this with the help of a Blog you",
    "start": "81840",
    "end": "84240"
  },
  {
    "text": "can see the QR code and the link below",
    "start": "84240",
    "end": "86460"
  },
  {
    "text": "and under the options",
    "start": "86460",
    "end": "88920"
  },
  {
    "text": "now considering the usd's one region the",
    "start": "88920",
    "end": "92220"
  },
  {
    "text": "standard table storage cost is 0.25",
    "start": "92220",
    "end": "94920"
  },
  {
    "text": "dollars per GB per month",
    "start": "94920",
    "end": "97259"
  },
  {
    "text": "whereas for standard IE the storage cost",
    "start": "97259",
    "end": "100020"
  },
  {
    "text": "is dollar point one zero per GB per",
    "start": "100020",
    "end": "102840"
  },
  {
    "text": "month so this is 60 percent less cost",
    "start": "102840",
    "end": "105360"
  },
  {
    "text": "for the standard I class",
    "start": "105360",
    "end": "107579"
  },
  {
    "text": "this is the same for provision capacity",
    "start": "107579",
    "end": "109799"
  },
  {
    "text": "mode or on on demand mode",
    "start": "109799",
    "end": "112439"
  },
  {
    "text": "now when it comes to switching between",
    "start": "112439",
    "end": "114240"
  },
  {
    "text": "the dynamodb standard and dynamodb",
    "start": "114240",
    "end": "117240"
  },
  {
    "text": "standard I table class",
    "start": "117240",
    "end": "118979"
  },
  {
    "text": "this switch will be very simple and it",
    "start": "118979",
    "end": "121740"
  },
  {
    "text": "will have no impact on table performance",
    "start": "121740",
    "end": "123899"
  },
  {
    "text": "durability availability even without",
    "start": "123899",
    "end": "126840"
  },
  {
    "text": "changing a single line of application",
    "start": "126840",
    "end": "128880"
  },
  {
    "text": "code",
    "start": "128880",
    "end": "129840"
  },
  {
    "text": "it is just one click to do it from the",
    "start": "129840",
    "end": "131700"
  },
  {
    "text": "console and you can also do it with the",
    "start": "131700",
    "end": "133560"
  },
  {
    "text": "help of CLI or API con",
    "start": "133560",
    "end": "136020"
  },
  {
    "text": "now let's quickly see how you can change",
    "start": "136020",
    "end": "138239"
  },
  {
    "text": "the table class under the management",
    "start": "138239",
    "end": "139860"
  },
  {
    "text": "console",
    "start": "139860",
    "end": "141959"
  },
  {
    "text": "so this is the dynamodb dashboard right",
    "start": "141959",
    "end": "144780"
  },
  {
    "text": "you can click on tables I have created a",
    "start": "144780",
    "end": "149099"
  },
  {
    "text": "table name cost of table once I click on",
    "start": "149099",
    "end": "151860"
  },
  {
    "text": "that under overview you can definitely",
    "start": "151860",
    "end": "155459"
  },
  {
    "text": "see a additional info you can click on",
    "start": "155459",
    "end": "158099"
  },
  {
    "text": "that and you can see the table class 10",
    "start": "158099",
    "end": "159959"
  },
  {
    "text": "modb standard so this is the table class",
    "start": "159959",
    "end": "162120"
  },
  {
    "text": "of the standardb table now in order to",
    "start": "162120",
    "end": "164819"
  },
  {
    "text": "change this you can just click on",
    "start": "164819",
    "end": "167400"
  },
  {
    "text": "actions",
    "start": "167400",
    "end": "169080"
  },
  {
    "text": "click on update table class",
    "start": "169080",
    "end": "171840"
  },
  {
    "text": "it will give you an option of standard",
    "start": "171840",
    "end": "174420"
  },
  {
    "text": "ID just click on that and save changes",
    "start": "174420",
    "end": "179720"
  },
  {
    "text": "once you do that go ahead and refresh",
    "start": "179879",
    "end": "182700"
  },
  {
    "text": "your table",
    "start": "182700",
    "end": "184379"
  },
  {
    "text": "and then if you again go and check the",
    "start": "184379",
    "end": "187379"
  },
  {
    "text": "additional info the table class will be",
    "start": "187379",
    "end": "189660"
  },
  {
    "text": "changed to dynamodb standard I",
    "start": "189660",
    "end": "193379"
  },
  {
    "text": "it's best simple to change the dynamodb",
    "start": "193379",
    "end": "196500"
  },
  {
    "text": "class",
    "start": "196500",
    "end": "199019"
  },
  {
    "text": "one thing to note is that the throughput",
    "start": "199019",
    "end": "201420"
  },
  {
    "text": "costs are hired by 20 percent for",
    "start": "201420",
    "end": "204120"
  },
  {
    "text": "standard IE in comparison to standard",
    "start": "204120",
    "end": "206700"
  },
  {
    "text": "table class",
    "start": "206700",
    "end": "207780"
  },
  {
    "text": "hence the journal guideline is to switch",
    "start": "207780",
    "end": "210060"
  },
  {
    "text": "from standard to standard IE table class",
    "start": "210060",
    "end": "212519"
  },
  {
    "text": "when the storage cost of using standard",
    "start": "212519",
    "end": "216120"
  },
  {
    "text": "table is approximately 50 percent or",
    "start": "216120",
    "end": "218940"
  },
  {
    "text": "more of the overly monthly cost of the",
    "start": "218940",
    "end": "221580"
  },
  {
    "text": "table",
    "start": "221580",
    "end": "222299"
  },
  {
    "text": "so look for the tables where the cost is",
    "start": "222299",
    "end": "225000"
  },
  {
    "text": "highly storage driven which means the",
    "start": "225000",
    "end": "226860"
  },
  {
    "text": "table is actually expensive from a",
    "start": "226860",
    "end": "229080"
  },
  {
    "text": "storage perspective",
    "start": "229080",
    "end": "231599"
  },
  {
    "text": "now let's look at some examples to get",
    "start": "231599",
    "end": "234000"
  },
  {
    "text": "some better Clarity on how this can help",
    "start": "234000",
    "end": "235980"
  },
  {
    "text": "you to save some money so in this first",
    "start": "235980",
    "end": "238140"
  },
  {
    "text": "example we have considered the use case",
    "start": "238140",
    "end": "240480"
  },
  {
    "text": "of media related customers involving",
    "start": "240480",
    "end": "243060"
  },
  {
    "text": "time series data that gets frequently",
    "start": "243060",
    "end": "245640"
  },
  {
    "text": "accessed during the first months of its",
    "start": "245640",
    "end": "247440"
  },
  {
    "text": "creation and is less frequently accessed",
    "start": "247440",
    "end": "250019"
  },
  {
    "text": "over time so if you see we are starting",
    "start": "250019",
    "end": "253080"
  },
  {
    "text": "with one table with thousand wsus and",
    "start": "253080",
    "end": "255480"
  },
  {
    "text": "thousand rcos and then every month a new",
    "start": "255480",
    "end": "258239"
  },
  {
    "text": "table is added and the previous table",
    "start": "258239",
    "end": "260359"
  },
  {
    "text": "will have lesser wcos than rcos so the",
    "start": "260359",
    "end": "263940"
  },
  {
    "text": "previous table will have one wcu and 100",
    "start": "263940",
    "end": "266699"
  },
  {
    "text": "RCU because there will not be any rights",
    "start": "266699",
    "end": "268979"
  },
  {
    "text": "but there will be some read activity",
    "start": "268979",
    "end": "270720"
  },
  {
    "text": "which might happen then going further",
    "start": "270720",
    "end": "273060"
  },
  {
    "text": "into the year for any tables older than",
    "start": "273060",
    "end": "275639"
  },
  {
    "text": "two months the wcu is 1 and the RSU is",
    "start": "275639",
    "end": "278940"
  },
  {
    "text": "also one as there will be no activity or",
    "start": "278940",
    "end": "282000"
  },
  {
    "text": "a very less activity for the older data",
    "start": "282000",
    "end": "284520"
  },
  {
    "text": "so let's look into the storage cost the",
    "start": "284520",
    "end": "287460"
  },
  {
    "text": "first one if you see there are two",
    "start": "287460",
    "end": "289320"
  },
  {
    "text": "columns there is first cost which is",
    "start": "289320",
    "end": "292080"
  },
  {
    "text": "with respect to considering standard IE",
    "start": "292080",
    "end": "294540"
  },
  {
    "text": "for all the for the previous months and",
    "start": "294540",
    "end": "297240"
  },
  {
    "text": "this is the storage cost considering",
    "start": "297240",
    "end": "299040"
  },
  {
    "text": "standard class for all the months right",
    "start": "299040",
    "end": "301440"
  },
  {
    "text": "so the if you see the first table on the",
    "start": "301440",
    "end": "304139"
  },
  {
    "text": "January side the current month uh the",
    "start": "304139",
    "end": "307320"
  },
  {
    "text": "storage cost is 2020 because the current",
    "start": "307320",
    "end": "310080"
  },
  {
    "text": "month table is always going to be",
    "start": "310080",
    "end": "311580"
  },
  {
    "text": "standard class whereas the previous",
    "start": "311580",
    "end": "313560"
  },
  {
    "text": "month is zero because what we are doing",
    "start": "313560",
    "end": "315600"
  },
  {
    "text": "is we are starting with January month",
    "start": "315600",
    "end": "317220"
  },
  {
    "text": "this is a new workload we have started",
    "start": "317220",
    "end": "319199"
  },
  {
    "text": "seeing the data starting January to",
    "start": "319199",
    "end": "321660"
  },
  {
    "text": "basically make it easy for the",
    "start": "321660",
    "end": "324000"
  },
  {
    "text": "calculation",
    "start": "324000",
    "end": "325080"
  },
  {
    "text": "and that is how we are going further",
    "start": "325080",
    "end": "326940"
  },
  {
    "text": "into February the current month is still",
    "start": "326940",
    "end": "329699"
  },
  {
    "text": "under standard a standard class and the",
    "start": "329699",
    "end": "332340"
  },
  {
    "text": "previous month has changed to standard I",
    "start": "332340",
    "end": "334440"
  },
  {
    "text": "for the first calculation and then we",
    "start": "334440",
    "end": "336060"
  },
  {
    "text": "are keeping the standard class for the E",
    "start": "336060",
    "end": "338520"
  },
  {
    "text": "for the uh previous month to see the",
    "start": "338520",
    "end": "341460"
  },
  {
    "text": "cost difference and that's how we are",
    "start": "341460",
    "end": "343380"
  },
  {
    "text": "calculating the cost and if you want to",
    "start": "343380",
    "end": "346080"
  },
  {
    "text": "see the total cost when it comes to",
    "start": "346080",
    "end": "348060"
  },
  {
    "text": "considering standard I from previous",
    "start": "348060",
    "end": "350100"
  },
  {
    "text": "months it's 768 whereas if you would",
    "start": "350100",
    "end": "352979"
  },
  {
    "text": "have kept the standard class for all the",
    "start": "352979",
    "end": "355199"
  },
  {
    "text": "months the cost would have been 1548 so",
    "start": "355199",
    "end": "357419"
  },
  {
    "text": "this is a huge difference",
    "start": "357419",
    "end": "359160"
  },
  {
    "text": "now we all know that the cost is not",
    "start": "359160",
    "end": "361380"
  },
  {
    "text": "just on the storage side we have done",
    "start": "361380",
    "end": "363720"
  },
  {
    "text": "some throughput calculation as well",
    "start": "363720",
    "end": "365940"
  },
  {
    "text": "so considering uh the throughput for the",
    "start": "365940",
    "end": "369600"
  },
  {
    "text": "uh tables where your table is changed",
    "start": "369600",
    "end": "373259"
  },
  {
    "text": "into standard IA so this is the cost for",
    "start": "373259",
    "end": "376440"
  },
  {
    "text": "every other month and this is a",
    "start": "376440",
    "end": "377940"
  },
  {
    "text": "cumulative cost where we are just adding",
    "start": "377940",
    "end": "380280"
  },
  {
    "text": "up all the cost for the previous months",
    "start": "380280",
    "end": "382199"
  },
  {
    "text": "going forward in the year",
    "start": "382199",
    "end": "384120"
  },
  {
    "text": "and hence this throughput cost with",
    "start": "384120",
    "end": "386580"
  },
  {
    "text": "standard IE is this much",
    "start": "386580",
    "end": "389400"
  },
  {
    "text": "in order to get a better comparison we",
    "start": "389400",
    "end": "391740"
  },
  {
    "text": "have also created a throughput",
    "start": "391740",
    "end": "393300"
  },
  {
    "text": "calculation for all the months whether",
    "start": "393300",
    "end": "395759"
  },
  {
    "text": "all the tables are on standard class",
    "start": "395759",
    "end": "398039"
  },
  {
    "text": "so the throughput calculation if you see",
    "start": "398039",
    "end": "400979"
  },
  {
    "text": "it's this much right in order to see the",
    "start": "400979",
    "end": "404400"
  },
  {
    "text": "total cost",
    "start": "404400",
    "end": "406380"
  },
  {
    "text": "this is the cost for the table when we",
    "start": "406380",
    "end": "409919"
  },
  {
    "text": "are considering standard IE which is",
    "start": "409919",
    "end": "412100"
  },
  {
    "text": "9023 whereas the yearly cost considering",
    "start": "412100",
    "end": "416039"
  },
  {
    "text": "standard",
    "start": "416039",
    "end": "417360"
  },
  {
    "text": "for all the months this 97.82 so the",
    "start": "417360",
    "end": "420479"
  },
  {
    "text": "total save when we you have switched",
    "start": "420479",
    "end": "422400"
  },
  {
    "text": "from standard class to standard I it's",
    "start": "422400",
    "end": "424680"
  },
  {
    "text": "800 approximately 800.",
    "start": "424680",
    "end": "427740"
  },
  {
    "text": "so this is how you can see that the",
    "start": "427740",
    "end": "430800"
  },
  {
    "text": "standard I is helping you with the cost",
    "start": "430800",
    "end": "432660"
  },
  {
    "text": "now let's look at the second example",
    "start": "432660",
    "end": "435360"
  },
  {
    "text": "this is one of our strategic customers",
    "start": "435360",
    "end": "437759"
  },
  {
    "text": "approximated throughput and storage data",
    "start": "437759",
    "end": "440099"
  },
  {
    "text": "which will show you how they use",
    "start": "440099",
    "end": "442380"
  },
  {
    "text": "standard I to reduce the cost",
    "start": "442380",
    "end": "445020"
  },
  {
    "text": "which has Global replication cost cost",
    "start": "445020",
    "end": "447780"
  },
  {
    "text": "also included their Global footprint was",
    "start": "447780",
    "end": "450780"
  },
  {
    "text": "across four regions with one region",
    "start": "450780",
    "end": "453479"
  },
  {
    "text": "having most reads and writes Global",
    "start": "453479",
    "end": "455759"
  },
  {
    "text": "table cost are with respect to",
    "start": "455759",
    "end": "457620"
  },
  {
    "text": "replicated wcus and storage in other",
    "start": "457620",
    "end": "459720"
  },
  {
    "text": "regions hence this is a straight up cost",
    "start": "459720",
    "end": "462240"
  },
  {
    "text": "where no optimization can be made",
    "start": "462240",
    "end": "464580"
  },
  {
    "text": "they wanted to see if you could help",
    "start": "464580",
    "end": "466440"
  },
  {
    "text": "them to save some money in any way we",
    "start": "466440",
    "end": "469380"
  },
  {
    "text": "started looking into standard I",
    "start": "469380",
    "end": "471419"
  },
  {
    "text": "now in global tables changing the class",
    "start": "471419",
    "end": "473699"
  },
  {
    "text": "against one table will change the class",
    "start": "473699",
    "end": "475800"
  },
  {
    "text": "against all the replicas hence when they",
    "start": "475800",
    "end": "478319"
  },
  {
    "text": "change the class of the table they were",
    "start": "478319",
    "end": "480419"
  },
  {
    "text": "able to save thousands of dollars per",
    "start": "480419",
    "end": "482400"
  },
  {
    "text": "month under the scenarios if the region",
    "start": "482400",
    "end": "485160"
  },
  {
    "text": "are just created for Disaster Recovery",
    "start": "485160",
    "end": "487020"
  },
  {
    "text": "sitting in a standby mode where all",
    "start": "487020",
    "end": "489539"
  },
  {
    "text": "those replica tables are just incurring",
    "start": "489539",
    "end": "491400"
  },
  {
    "text": "storage in wsus looking at the base",
    "start": "491400",
    "end": "493919"
  },
  {
    "text": "table throughput requirements you can",
    "start": "493919",
    "end": "495599"
  },
  {
    "text": "try to change the replica regions to",
    "start": "495599",
    "end": "497400"
  },
  {
    "text": "standard I at last to see if this can",
    "start": "497400",
    "end": "499620"
  },
  {
    "text": "cause to optimize your damn body with",
    "start": "499620",
    "end": "501240"
  },
  {
    "text": "spin",
    "start": "501240",
    "end": "502319"
  },
  {
    "text": "now let's look into an example with the",
    "start": "502319",
    "end": "504780"
  },
  {
    "text": "help of AWS calculator and then with",
    "start": "504780",
    "end": "507300"
  },
  {
    "text": "respect to excel to see how much savings",
    "start": "507300",
    "end": "509639"
  },
  {
    "text": "we can do with just standard IE class",
    "start": "509639",
    "end": "511440"
  },
  {
    "text": "table",
    "start": "511440",
    "end": "512940"
  },
  {
    "text": "so with this example",
    "start": "512940",
    "end": "515880"
  },
  {
    "text": "you can see this is a AWS calculator I",
    "start": "515880",
    "end": "518339"
  },
  {
    "text": "am considering a U.S east one region and",
    "start": "518339",
    "end": "521520"
  },
  {
    "text": "in this case the table class is standard",
    "start": "521520",
    "end": "524700"
  },
  {
    "text": "the store data storage is 24 DB but this",
    "start": "524700",
    "end": "527700"
  },
  {
    "text": "average item size is 212 bytes",
    "start": "527700",
    "end": "530880"
  },
  {
    "text": "for the rights what we have done is we",
    "start": "530880",
    "end": "533279"
  },
  {
    "text": "have taken the Baseline of 2600 per",
    "start": "533279",
    "end": "535500"
  },
  {
    "text": "seconds with 4300 per seconds as Peak",
    "start": "535500",
    "end": "538440"
  },
  {
    "text": "for 24 hours",
    "start": "538440",
    "end": "540180"
  },
  {
    "text": "and we are not considering any reserve",
    "start": "540180",
    "end": "542160"
  },
  {
    "text": "capacity",
    "start": "542160",
    "end": "543120"
  },
  {
    "text": "and this has been done because in case",
    "start": "543120",
    "end": "545220"
  },
  {
    "text": "of standard IE Reserve capacity is not",
    "start": "545220",
    "end": "547380"
  },
  {
    "text": "supported so we wanted to do a proper",
    "start": "547380",
    "end": "549899"
  },
  {
    "text": "comparison and hence that is of capacity",
    "start": "549899",
    "end": "551700"
  },
  {
    "text": "is kept at zero",
    "start": "551700",
    "end": "553519"
  },
  {
    "text": "now the read settings what we have done",
    "start": "553519",
    "end": "556200"
  },
  {
    "text": "is we are using eventually consistent",
    "start": "556200",
    "end": "557940"
  },
  {
    "text": "reads",
    "start": "557940",
    "end": "559140"
  },
  {
    "text": "and the Baseline is at 18 000 with a",
    "start": "559140",
    "end": "561839"
  },
  {
    "text": "peak of twenty four thousand for",
    "start": "561839",
    "end": "563959"
  },
  {
    "text": "approximately 15 days per month which is",
    "start": "563959",
    "end": "566940"
  },
  {
    "text": "coming out to be 336.",
    "start": "566940",
    "end": "569880"
  },
  {
    "text": "and again there is of capacity for the",
    "start": "569880",
    "end": "571740"
  },
  {
    "text": "reads are zero looking at the",
    "start": "571740",
    "end": "573959"
  },
  {
    "text": "calculation you can see the storage card",
    "start": "573959",
    "end": "576600"
  },
  {
    "text": "is 6144 with the right cost is 1200 and",
    "start": "576600",
    "end": "580260"
  },
  {
    "text": "the read cost is 998 coming out to be",
    "start": "580260",
    "end": "582779"
  },
  {
    "text": "84. 100 dollars per month",
    "start": "582779",
    "end": "586800"
  },
  {
    "text": "when we change this to uh standard IA",
    "start": "586800",
    "end": "590459"
  },
  {
    "text": "class",
    "start": "590459",
    "end": "591420"
  },
  {
    "text": "you can see the cost has reduced from",
    "start": "591420",
    "end": "593640"
  },
  {
    "text": "8000 to 5000 approximately so this is a",
    "start": "593640",
    "end": "597120"
  },
  {
    "text": "huge saving",
    "start": "597120",
    "end": "598320"
  },
  {
    "text": "now but with respect to Global tables we",
    "start": "598320",
    "end": "601080"
  },
  {
    "text": "need to consider the replicas cost as",
    "start": "601080",
    "end": "603180"
  },
  {
    "text": "well hence let's look into an Excel",
    "start": "603180",
    "end": "605880"
  },
  {
    "text": "sheet to basically look into the cost",
    "start": "605880",
    "end": "608100"
  },
  {
    "text": "calculations considering the global",
    "start": "608100",
    "end": "609839"
  },
  {
    "text": "table replicas as well",
    "start": "609839",
    "end": "612839"
  },
  {
    "text": "so this is a very simple example and",
    "start": "612839",
    "end": "616140"
  },
  {
    "text": "calculation which I have considered",
    "start": "616140",
    "end": "618300"
  },
  {
    "text": "the base region is 8400 with the",
    "start": "618300",
    "end": "622200"
  },
  {
    "text": "standard IE under 5200 which is saw that",
    "start": "622200",
    "end": "625080"
  },
  {
    "text": "under ews calculator but here we have",
    "start": "625080",
    "end": "628920"
  },
  {
    "text": "replicas cost as well so there are three",
    "start": "628920",
    "end": "631500"
  },
  {
    "text": "more replicas",
    "start": "631500",
    "end": "633060"
  },
  {
    "text": "and we are considering the cost of right",
    "start": "633060",
    "end": "635640"
  },
  {
    "text": "with respect to the same rights",
    "start": "635640",
    "end": "637320"
  },
  {
    "text": "happening for the base region whereas",
    "start": "637320",
    "end": "639839"
  },
  {
    "text": "the breeds are different so you can see",
    "start": "639839",
    "end": "641940"
  },
  {
    "text": "it's 18 000 and 24 000 but the rates for",
    "start": "641940",
    "end": "644820"
  },
  {
    "text": "each and every replica is different and",
    "start": "644820",
    "end": "647100"
  },
  {
    "text": "we have considered the same for standard",
    "start": "647100",
    "end": "648839"
  },
  {
    "text": "I",
    "start": "648839",
    "end": "649560"
  },
  {
    "text": "now can keeping every other table under",
    "start": "649560",
    "end": "652860"
  },
  {
    "text": "standard class the cost was 84 and it",
    "start": "652860",
    "end": "655980"
  },
  {
    "text": "was very much similar on the replica",
    "start": "655980",
    "end": "657720"
  },
  {
    "text": "side as well coming out to the cost of",
    "start": "657720",
    "end": "660180"
  },
  {
    "text": "32 000.",
    "start": "660180",
    "end": "661860"
  },
  {
    "text": "when we change it to standard IE the",
    "start": "661860",
    "end": "664500"
  },
  {
    "text": "storage cost reduced from 61 to 2400 for",
    "start": "664500",
    "end": "667800"
  },
  {
    "text": "24 DB of data",
    "start": "667800",
    "end": "670019"
  },
  {
    "text": "even though the read and write cost did",
    "start": "670019",
    "end": "672420"
  },
  {
    "text": "increase with respect to standard class",
    "start": "672420",
    "end": "674339"
  },
  {
    "text": "the overall cost savings were really",
    "start": "674339",
    "end": "677220"
  },
  {
    "text": "high with respect to standard ie so we",
    "start": "677220",
    "end": "680040"
  },
  {
    "text": "can see it's almost three thousand to",
    "start": "680040",
    "end": "681660"
  },
  {
    "text": "four thousand savings per replica region",
    "start": "681660",
    "end": "684180"
  },
  {
    "text": "costing a total of 19 000 and hence the",
    "start": "684180",
    "end": "687660"
  },
  {
    "text": "total savings per month is 12 000.",
    "start": "687660",
    "end": "690839"
  },
  {
    "text": "coming up a total savings per year being",
    "start": "690839",
    "end": "693480"
  },
  {
    "text": "153 000 this is a huge savings right",
    "start": "693480",
    "end": "697140"
  },
  {
    "text": "so at this moment we can see for this",
    "start": "697140",
    "end": "699720"
  },
  {
    "text": "example standard is saving so much",
    "start": "699720",
    "end": "702120"
  },
  {
    "text": "dollars",
    "start": "702120",
    "end": "703200"
  },
  {
    "text": "in the future if the throughput",
    "start": "703200",
    "end": "704880"
  },
  {
    "text": "requirement increases which is costing",
    "start": "704880",
    "end": "707220"
  },
  {
    "text": "you a lot you can try to check back and",
    "start": "707220",
    "end": "709320"
  },
  {
    "text": "revert it back to standard class with",
    "start": "709320",
    "end": "711060"
  },
  {
    "text": "just one click",
    "start": "711060",
    "end": "713779"
  },
  {
    "text": "specialist I thank you for watching see",
    "start": "715339",
    "end": "718320"
  },
  {
    "text": "you next time thank you",
    "start": "718320",
    "end": "721820"
  }
]