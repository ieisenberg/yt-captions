[
  {
    "start": "0",
    "end": "75000"
  },
  {
    "text": "good afternoon everybody thank you very much for coming I'm thrilled to be here",
    "start": "2000",
    "end": "7040"
  },
  {
    "text": "to talk to you about Lambda at the edge and while I know I'm the last thing standing between you and the party",
    "start": "7040",
    "end": "13200"
  },
  {
    "text": "outside really looking forward to spending the next hour talking about what we've been spending a lot of time",
    "start": "13200",
    "end": "19279"
  },
  {
    "text": "building with the Lambda and cloudfront team so today in order to contextualize",
    "start": "19279",
    "end": "27720"
  },
  {
    "text": "Lambda at the edge we're going to talk a bit about the AWS Lambda and Amazon",
    "start": "27720",
    "end": "33399"
  },
  {
    "text": "cloudfront Services individually because each is its own is its own service",
    "start": "33399",
    "end": "38640"
  },
  {
    "text": "outright but the combination of them is what makes Lambda at the edge truly",
    "start": "38640",
    "end": "44239"
  },
  {
    "text": "extraordinary we'll walk through a bit about what Lambda at the edge is how it",
    "start": "44239",
    "end": "49280"
  },
  {
    "text": "works when to use it and when it may not be the right tool for the job we'll do a",
    "start": "49280",
    "end": "54680"
  },
  {
    "text": "quick demo of a use case talk with one of our customers cloudinary about how",
    "start": "54680",
    "end": "60519"
  },
  {
    "text": "they are going to be using Lambda at the edge to make their application better",
    "start": "60519",
    "end": "65680"
  },
  {
    "text": "and perhaps most importantly tell you our customers how to get started with",
    "start": "65680",
    "end": "71280"
  },
  {
    "text": "Lambda at the edge AWS Lambda is the evolution of",
    "start": "71280",
    "end": "79840"
  },
  {
    "start": "75000",
    "end": "405000"
  },
  {
    "text": "cloud compute towards serverless but serverless is defining",
    "start": "79840",
    "end": "86600"
  },
  {
    "text": "something as a negative by what it's not so let's talk a little bit about the root of that term to understand truly",
    "start": "86600",
    "end": "93720"
  },
  {
    "text": "what it means around 10 years ago AWS released Amazon ec2 which was",
    "start": "93720",
    "end": "103079"
  },
  {
    "text": "revolutionary in terms of giving customers the ability to deploy servers",
    "start": "103079",
    "end": "108320"
  },
  {
    "text": "virtually on demand in the cloud and paying only for what you use so with the infrastructure being",
    "start": "108320",
    "end": "115799"
  },
  {
    "text": "within the AWS Cloud you could spin up one or a dozen or a thousand instances",
    "start": "115799",
    "end": "123399"
  },
  {
    "text": "on demand when you need them and perhaps most importantly when you don't need",
    "start": "123399",
    "end": "128640"
  },
  {
    "text": "them anymore just send them on their way with these instances you could",
    "start": "128640",
    "end": "135480"
  },
  {
    "text": "deploy one or many applications on them and providing you with the ability to",
    "start": "135480",
    "end": "141800"
  },
  {
    "text": "build out entire applications in the cloud without actually having to build any of your own physical",
    "start": "141800",
    "end": "148200"
  },
  {
    "text": "infrastructure but these applic ations would generally perhaps be have multiple inter interrelated dependencies and",
    "start": "148200",
    "end": "155680"
  },
  {
    "text": "create you know man management headaches and challenges when you have to worry about about all sorts of cross uh cross",
    "start": "155680",
    "end": "161959"
  },
  {
    "text": "application dependencies so then we evolve to Containers which gives you the ability",
    "start": "161959",
    "end": "168280"
  },
  {
    "text": "to within instances Define different levels of isolation within which you can",
    "start": "168280",
    "end": "173440"
  },
  {
    "text": "run your applications you could Define multiple cont multiple containers within an instance group them however you want",
    "start": "173440",
    "end": "180400"
  },
  {
    "text": "and be able to simplify that management but under the covers you're",
    "start": "180400",
    "end": "185680"
  },
  {
    "text": "still managing fleets of instances and you still have potentially uh a small or",
    "start": "185680",
    "end": "190879"
  },
  {
    "text": "potentially a large number of idle resources that is certainly less than when you're running your own",
    "start": "190879",
    "end": "196599"
  },
  {
    "text": "infrastructure but more than zero and when we feel we can do better somewhere",
    "start": "196599",
    "end": "202440"
  },
  {
    "text": "even though we've already made a a serious leap we really strive to do better this is where serverless comes in",
    "start": "202440",
    "end": "211239"
  },
  {
    "text": "Werner uh during when he announced uh was talking about AWS Lambda at the keynote uh used a really good uh uh",
    "start": "211239",
    "end": "218000"
  },
  {
    "text": "metaphor that I hadn't heard regarding um first of all how the cloud allows you",
    "start": "218000",
    "end": "223480"
  },
  {
    "text": "to think of your your herd of cattle so then if you have one that's not doing too well you put it out to pasture and",
    "start": "223480",
    "end": "228920"
  },
  {
    "text": "get another one but with serverless there are no cattle it's just",
    "start": "228920",
    "end": "234799"
  },
  {
    "text": "the herd and all that management of the infrastructure and and instances and",
    "start": "234799",
    "end": "241239"
  },
  {
    "text": "dependencies is taken care of by AWS you run multiple applications in",
    "start": "241239",
    "end": "247760"
  },
  {
    "text": "response to events and you are fully isolated from all other customers so that you are",
    "start": "247760",
    "end": "254760"
  },
  {
    "text": "fully protected and your data is secure and add more animations",
    "start": "254760",
    "end": "262320"
  },
  {
    "text": "there so it is serverless Computing but I really like to think of it as event-driven Computing because the model",
    "start": "262320",
    "end": "268800"
  },
  {
    "text": "of serverless is very different right when you set up servers to run your",
    "start": "268800",
    "end": "274000"
  },
  {
    "text": "application you're thinking about about in the vast majority of cases handling inbound web HTTP requests there",
    "start": "274000",
    "end": "281240"
  },
  {
    "text": "certainly others but the vast majority will be HTTP requests and your application is then",
    "start": "281240",
    "end": "286919"
  },
  {
    "text": "serving in response to those inbound events but in the cloud especially with",
    "start": "286919",
    "end": "292800"
  },
  {
    "text": "a cloud as rich as AWS there are so many more things that can generate events than just inbound",
    "start": "292800",
    "end": "299240"
  },
  {
    "text": "web request now one of the most common uses of AWS Lambda is as a producer for API Gateway",
    "start": "299240",
    "end": "306160"
  },
  {
    "text": "so where you instead of having your Fleet of ec2 instances behind an elb handling web requests and then having it",
    "start": "306160",
    "end": "313880"
  },
  {
    "text": "be idle when it's not handling web requests you instead have API have",
    "start": "313880",
    "end": "319600"
  },
  {
    "text": "Amazon API Gateway that would call AWS uh Lambda to perform a function but",
    "start": "319600",
    "end": "326319"
  },
  {
    "text": "those aren't the only events you can perform an a uh a log analysis when a",
    "start": "326319",
    "end": "331600"
  },
  {
    "text": "file is put into an S3 bucket whenever a row is updated or inserted into Dynamo",
    "start": "331600",
    "end": "337000"
  },
  {
    "text": "DB you can do something analogous to an SQL trigger that will allow you to perform additional action on the",
    "start": "337000",
    "end": "343360"
  },
  {
    "text": "database or perhaps do some sort of external operation as I mentioned API Gateway",
    "start": "343360",
    "end": "350319"
  },
  {
    "text": "mobile uh backend calls you can also call uh call AWS Lambda directly so",
    "start": "350319",
    "end": "356800"
  },
  {
    "text": "there's actually an a an AWS API where if you have um you have a a server that wants or an application that wants to",
    "start": "356800",
    "end": "363120"
  },
  {
    "text": "call an event you can call them explicitly and as of as of today in",
    "start": "363120",
    "end": "369039"
  },
  {
    "text": "response to cloudfront requests which is fundamentally what Lambda at the edge is we'll talk more about that",
    "start": "369039",
    "end": "376840"
  },
  {
    "text": "later so the benefits giving you no servers to manage continuous scaling and",
    "start": "377160",
    "end": "382479"
  },
  {
    "text": "never paying for idle time the cost models for AWS Lambda which are the same",
    "start": "382479",
    "end": "387520"
  },
  {
    "text": "as Lambda at the edge in involve only paying for the actual time and requests",
    "start": "387520",
    "end": "393680"
  },
  {
    "text": "that you use so it's taking those instances that we started with 10 years ago and taking it down to being able to",
    "start": "393680",
    "end": "400680"
  },
  {
    "text": "pay literally by the millisecond but with all of this it is",
    "start": "400680",
    "end": "406759"
  },
  {
    "start": "405000",
    "end": "575000"
  },
  {
    "text": "triggered from within a single AWS",
    "start": "406759",
    "end": "412759"
  },
  {
    "text": "region so this is where the edge comes in when we're talking about the edge in this context it is the AWS Global",
    "start": "413039",
    "end": "420599"
  },
  {
    "text": "Network of points of presence or Pops that we connect to the uh to the to the backbone of the internet which is Amazon",
    "start": "420599",
    "end": "428319"
  },
  {
    "text": "cloudfront Amazon cloudfront is a global content delivery Network which accelerates your applications and apis",
    "start": "428319",
    "end": "435000"
  },
  {
    "text": "it's massively scalable and very secure completely self-service like all AWS Services we charge the same for HTTP and",
    "start": "435000",
    "end": "442400"
  },
  {
    "text": "https requests and is priced to minimize and minimize cost and simplify billing",
    "start": "442400",
    "end": "448199"
  },
  {
    "text": "so instead of having to worry about what the peak of your traffic may look like you pay only for the data",
    "start": "448199",
    "end": "454280"
  },
  {
    "text": "transferred it's also able to deliver all types of content so it delivers",
    "start": "454280",
    "end": "460319"
  },
  {
    "text": "static content which is what you would tend to think of when uh with a Content delivery network but it also delivers video and",
    "start": "460319",
    "end": "469000"
  },
  {
    "text": "dynamic content the notion of delivering and accelerating Dynamic content and user input is one that is not generally",
    "start": "469000",
    "end": "476319"
  },
  {
    "text": "thought of as an advantage of cdns but the way that cloud front is built is that we are able to significantly",
    "start": "476319",
    "end": "482720"
  },
  {
    "text": "accelerate API and uh and dynamic content requests because from all of our",
    "start": "482720",
    "end": "488120"
  },
  {
    "text": "networks of Pops we maintain connections to the origin so when a customer is uh",
    "start": "488120",
    "end": "495000"
  },
  {
    "text": "connecting from say India who would want to connect to an or would be connected to An Origin in say Virginia rather than",
    "start": "495000",
    "end": "502840"
  },
  {
    "text": "having that 2 to 300 milliseconds of round trip time to negotiate the connection to bring up TLS they would",
    "start": "502840",
    "end": "508479"
  },
  {
    "text": "only have to go to one of our several points of presence in India from there",
    "start": "508479",
    "end": "513560"
  },
  {
    "text": "we would have an already cached connection to the origin so the connection negotiation will take a small fraction of what it would take going to",
    "start": "513560",
    "end": "520440"
  },
  {
    "text": "the regions and as I mentioned",
    "start": "520440",
    "end": "526760"
  },
  {
    "text": "SSL so all of this is possible without changing your back end and this is again some of one of the areas where lamb at",
    "start": "526760",
    "end": "532640"
  },
  {
    "text": "The Edge gets to be very powerful because you're able to put cloudfront in front of your application without making",
    "start": "532640",
    "end": "538120"
  },
  {
    "text": "any changes to it it handles the dynamic content it handles static content and",
    "start": "538120",
    "end": "543240"
  },
  {
    "text": "all of that can be done by just configuring cloudfront to be the front page of",
    "start": "543240",
    "end": "549399"
  },
  {
    "text": "your of your property but imagine if taking all of",
    "start": "549399",
    "end": "556360"
  },
  {
    "text": "these points of presence and being able to deliver accelerate connections and deliver Dynamic deliver Dynamic and static content imagine being able to run",
    "start": "556360",
    "end": "563279"
  },
  {
    "text": "it at from 68 from 68 pops or nine Regional Edge caches across 21 countries",
    "start": "563279",
    "end": "569839"
  },
  {
    "text": "in five continents so putting this all together",
    "start": "569839",
    "end": "575720"
  },
  {
    "start": "575000",
    "end": "826000"
  },
  {
    "text": "is where we get to Lambda at the edge it's an",
    "start": "575720",
    "end": "582279"
  },
  {
    "text": "extension of AWS Lambda that allows you to run no. JS code at AWS Global Edge",
    "start": "582279",
    "end": "589320"
  },
  {
    "text": "locations it is a turn complete environment allowing you to execute arbitrary code and import third party",
    "start": "589320",
    "end": "595120"
  },
  {
    "text": "libraries and write code in say your home region in Northern Virginia and then deploy it",
    "start": "595120",
    "end": "601880"
  },
  {
    "text": "seamlessly across all of our Edge locations with the click of a",
    "start": "601880",
    "end": "608720"
  },
  {
    "text": "button writing your code once we will push your push your custom code to Edge",
    "start": "609040",
    "end": "614880"
  },
  {
    "text": "locations very very quickly generally generally within about one minute and then when customers connect from",
    "start": "614880",
    "end": "620240"
  },
  {
    "text": "Australia or South America or India or Central Europe they're running their a",
    "start": "620240",
    "end": "626279"
  },
  {
    "text": "their AWS uh Lambda at the edge code at the at these facilities that are very",
    "start": "626279",
    "end": "632279"
  },
  {
    "text": "close to them all with without any additional operational burden of managing any sort of",
    "start": "632279",
    "end": "638240"
  },
  {
    "text": "replication or content or content distribution so looking at this from a",
    "start": "638240",
    "end": "644399"
  },
  {
    "text": "more detailed perspective this oh there we go um is happening",
    "start": "644399",
    "end": "651120"
  },
  {
    "text": "within the within cloudfront so this allows you to extend the functionality of your application to the edge",
    "start": "651120",
    "end": "660839"
  },
  {
    "text": "the events that cloudfront generates currently are four events viewer request and viewer",
    "start": "662240",
    "end": "669000"
  },
  {
    "text": "response are in respon are are are are generated whenever a viewer asks",
    "start": "669000",
    "end": "674240"
  },
  {
    "text": "something of cloudfront now in terms of Lambda at the",
    "start": "674240",
    "end": "680399"
  },
  {
    "text": "edge the the assumption is that you would not generally be executing Lambda at the edge for every request you",
    "start": "680399",
    "end": "686519"
  },
  {
    "text": "certainly can but they are defined on a perk cash Behavior basis so data that",
    "start": "686519",
    "end": "692800"
  },
  {
    "text": "you would want to that you would want to uh change in response to a viewer request could for example be some sort",
    "start": "692800",
    "end": "699000"
  },
  {
    "text": "of end user authentication cach key modification or perhaps uh something that you want to pass on in as as a as a",
    "start": "699000",
    "end": "706480"
  },
  {
    "text": "parameter to querying the uh the cache itself viewer response would be more of",
    "start": "706480",
    "end": "713440"
  },
  {
    "text": "end user personalization so after the content comes out of the cache and has and is getting being ready to be",
    "start": "713440",
    "end": "719600"
  },
  {
    "text": "delivered back to the viewer you could personalize that content on the origin side the origin",
    "start": "719600",
    "end": "727120"
  },
  {
    "text": "request and origin response events are triggered when a request gets through",
    "start": "727120",
    "end": "732519"
  },
  {
    "text": "the viewer stage due to a cash Miss so in the case of a cach hit the only two",
    "start": "732519",
    "end": "738399"
  },
  {
    "text": "events that would trigger would be a viewer request and viewer response doesn't really get that far um but in",
    "start": "738399",
    "end": "745079"
  },
  {
    "text": "the case of a miss it would go through the cloudfront cache and say okay now we need to get content from the",
    "start": "745079",
    "end": "751639"
  },
  {
    "text": "origin so those sorts of use cases would be things such as content based routing to the right origin perhaps some sort of",
    "start": "751639",
    "end": "759079"
  },
  {
    "text": "custom origin authentication manipulating uh URLs so",
    "start": "759079",
    "end": "764680"
  },
  {
    "text": "in the case of a uh of a of a pretty URL that comes in and needs to needs to be more more complicated to get or",
    "start": "764680",
    "end": "771360"
  },
  {
    "text": "different to get data from the origin it could be changed in that way and integration with Legacy",
    "start": "771360",
    "end": "778120"
  },
  {
    "text": "systems in terms of the response after the request has come back from the cache the customer is able",
    "start": "778120",
    "end": "786800"
  },
  {
    "text": "to you are a you are then able to to manipulate that response to potentially change the headers modify the response",
    "start": "786800",
    "end": "792800"
  },
  {
    "text": "before caching it and um and and then before it's then",
    "start": "792800",
    "end": "798800"
  },
  {
    "text": "handed back to the viewer to then hand back the response the important thing to note is that for each cash behavior that",
    "start": "798800",
    "end": "806519"
  },
  {
    "text": "you have in your cloudfront distribution you may may Define zero one or some or",
    "start": "806519",
    "end": "812079"
  },
  {
    "text": "all of these events to be handled so it is possible that for a uh a request you",
    "start": "812079",
    "end": "818519"
  },
  {
    "text": "could fire four events and have four separate land Des scripts if your use case calls for",
    "start": "818519",
    "end": "825160"
  },
  {
    "text": "that but let's get to some of the things that you could actually do with Lambda at the",
    "start": "825399",
    "end": "831560"
  },
  {
    "start": "826000",
    "end": "1009000"
  },
  {
    "text": "edge so one of the use cases that we've heard a lot from our customers is content customization so being able to identify",
    "start": "831560",
    "end": "839720"
  },
  {
    "text": "a user's location or what sort of device they're on and potentially either customize the customize the uh the the",
    "start": "839720",
    "end": "847279"
  },
  {
    "text": "object being requested from the cache or changing image sizes and things",
    "start": "847279",
    "end": "852680"
  },
  {
    "text": "of that nature likewise changing the the uh the the the request or the or the",
    "start": "852680",
    "end": "858680"
  },
  {
    "text": "objects being returned based on the device properties in terms of screen size uh perhaps the location of the",
    "start": "858680",
    "end": "865160"
  },
  {
    "text": "device could indicate that you would want to send back different content",
    "start": "865160",
    "end": "870560"
  },
  {
    "text": "furthermore you can perform visitor visitor validation um Bots can be both good and",
    "start": "870720",
    "end": "876800"
  },
  {
    "text": "bad search engine Bots for example are things you might want to make sure you hand back exactly the right content to",
    "start": "876800",
    "end": "882519"
  },
  {
    "text": "make sure your content is being indexed as you want it to be in uh in the search engines likewise there are Bots good",
    "start": "882519",
    "end": "890880"
  },
  {
    "text": "there are Bots that you might not want to be getting into your system and then you could display a",
    "start": "890880",
    "end": "896600"
  },
  {
    "text": "capture like why session validation if you want to have content content that uh",
    "start": "896600",
    "end": "901720"
  },
  {
    "text": "that that is that is secure you want to make sure that only customers with a certain session identifier or key can",
    "start": "901720",
    "end": "907639"
  },
  {
    "text": "access you can perform uh token or other forms of of authentication based on those",
    "start": "907639",
    "end": "915959"
  },
  {
    "text": "data another use case we had from customers is uh for customers who uh who have content uh you know static image",
    "start": "916040",
    "end": "922680"
  },
  {
    "text": "image content that they uh that they serve and then derive ad revenue from so custo a user might find an image",
    "start": "922680",
    "end": "931959"
  },
  {
    "text": "and just copy the actual the actual image URL and try to share that image",
    "start": "931959",
    "end": "937319"
  },
  {
    "text": "but then that image wouldn't actually be Revenue generating for our customer so being able to detect when an image is",
    "start": "937319",
    "end": "944360"
  },
  {
    "text": "being requested that is not actually supposed to be served in isolation and then rewriting and redirecting to an",
    "start": "944360",
    "end": "950880"
  },
  {
    "text": "actual HTML page to create the proper Framing and and structure of the",
    "start": "950880",
    "end": "957319"
  },
  {
    "text": "page also pretty pretty URL uh rewriting is something that can be done through Lambda at the edge to avoid revealing",
    "start": "957319",
    "end": "964040"
  },
  {
    "text": "origin data structure and or just to shorten URLs and make them easier to share with uh end",
    "start": "964040",
    "end": "971480"
  },
  {
    "text": "users the final use case I'd like to talk about before we get to our our demo is uh AB testing this is one we hear a",
    "start": "971480",
    "end": "977800"
  },
  {
    "text": "lot from customers know they want the ability at the edge to make a really quick decision about what version of",
    "start": "977800",
    "end": "983040"
  },
  {
    "text": "content or what content in particular to send to a viewer and being able to make",
    "start": "983040",
    "end": "988720"
  },
  {
    "text": "that decision at the edge and realize that code's not particularly readable but uh we're definitely going to uh",
    "start": "988720",
    "end": "994839"
  },
  {
    "text": "going to be sharing some uh some examples with you is uh is is it gives you the ability to set a set cookies and",
    "start": "994839",
    "end": "1001720"
  },
  {
    "text": "Ure users see the right version of content and I believe that a demo of this use case is coming up right now",
    "start": "1001720",
    "end": "1008519"
  },
  {
    "text": "from shabam shabam over to you",
    "start": "1008519",
    "end": "1013920"
  },
  {
    "text": "welcome everybody I'm so glad that you could take time and attention today to come and",
    "start": "1019920",
    "end": "1026558"
  },
  {
    "text": "attend our session all right so let me try and plug",
    "start": "1026559",
    "end": "1031720"
  },
  {
    "text": "this in that seems all",
    "start": "1031720",
    "end": "1036639"
  },
  {
    "text": "set so over the last 15 years we have seen content distribution Network make",
    "start": "1037880",
    "end": "1043798"
  },
  {
    "text": "internet Faster by starting to cash internet assets images video videos",
    "start": "1043799",
    "end": "1049400"
  },
  {
    "text": "closer to the end users but not so much has happened in",
    "start": "1049400",
    "end": "1054679"
  },
  {
    "text": "the dynamic content delivery when it comes to personalized content and delivery of dynamic content that is",
    "start": "1054679",
    "end": "1059840"
  },
  {
    "text": "still dictated by the speed of light well Lambda at the edge brings compute closer to the end users so your users",
    "start": "1059840",
    "end": "1066440"
  },
  {
    "text": "who are sitting in Seattle are being served out of data center or Regional Edge locations as we talked about for",
    "start": "1066440",
    "end": "1072120"
  },
  {
    "text": "AWS right in the heart of Seattle for users who are who are in IID are being served of the The Edge location which is",
    "start": "1072120",
    "end": "1078360"
  },
  {
    "text": "in Virginia so I'm we are going to take a simple example today of building uh an",
    "start": "1078360",
    "end": "1084880"
  },
  {
    "text": "AB experiment uh application uh have people heard about AB experiment anybody",
    "start": "1084880",
    "end": "1090400"
  },
  {
    "text": "new to the idea fairly educated audience but I'll repeat for the benefit for of",
    "start": "1090400",
    "end": "1096440"
  },
  {
    "text": "who do not the idea is very simple it's a mechan Ab experiment is a mechanism for us to evaluate the effectiveness of",
    "start": "1096440",
    "end": "1103960"
  },
  {
    "text": "few variants of a website and so the intention is that um we serve different",
    "start": "1103960",
    "end": "1109120"
  },
  {
    "text": "variations of websites to similar audience and then we study their behavior and responses to understand",
    "start": "1109120",
    "end": "1115520"
  },
  {
    "text": "what is serving their needs better and what is serving our customers needs better we'll pick a very simple example",
    "start": "1115520",
    "end": "1121159"
  },
  {
    "text": "today uh we'll try to build an application which will be powered by S3 which is uh a simple file storage uh web",
    "start": "1121159",
    "end": "1128480"
  },
  {
    "text": "service we'll put cloudfront in front of it we'll pick very simple configuration it'll be a see- through like essentially",
    "start": "1128480",
    "end": "1135240"
  },
  {
    "text": "Cloud received requests and it's it's going to be a plain vanilla conf configuration and we'll try to build",
    "start": "1135240",
    "end": "1141919"
  },
  {
    "text": "this Dynamic logic of AB testing through compute at the ede so let me point out",
    "start": "1141919",
    "end": "1147480"
  },
  {
    "text": "there two important aspects to Applications when we doing AB testing uh and the first one is that for the first",
    "start": "1147480",
    "end": "1154280"
  },
  {
    "text": "time if a request uh visits our page we have to toss a coin and assign him to",
    "start": "1154280",
    "end": "1160559"
  },
  {
    "text": "one of the treatments this that's one of the experience we want to offer him and subsequently if a user revisits then we",
    "start": "1160559",
    "end": "1167760"
  },
  {
    "text": "have to serve him the same content I think that's that practically summarizes uh the scope of the problem we are",
    "start": "1167760",
    "end": "1173320"
  },
  {
    "text": "trying to solve so let me show you the simple setup between cloudfront and S3 and then we'll jump onto Lambda at the",
    "start": "1173320",
    "end": "1178840"
  },
  {
    "text": "edge and we'll walk through the script and see how that script solves these two problems which you discussed all right",
    "start": "1178840",
    "end": "1185880"
  },
  {
    "text": "so this is our S3 bucket and I don't think it's very readable so I'm going to zoom",
    "start": "1185880",
    "end": "1191840"
  },
  {
    "text": "in is that is that is that good yeah awesome so uh this is our sample S3",
    "start": "1191840",
    "end": "1198360"
  },
  {
    "text": "bucket there are some assets there's a store which has some fonts in there and",
    "start": "1198360",
    "end": "1203960"
  },
  {
    "text": "uh I've created a folder called experiment treatment images and if I go inside this Our intention is that um to",
    "start": "1203960",
    "end": "1210400"
  },
  {
    "text": "any for Unique visitors we want to offer one of these cat images cat angry cat Batman cat fat cat gravity so we'll see",
    "start": "1210400",
    "end": "1218400"
  },
  {
    "text": "what comes up today and just for some variety we've thrown a giraffe and a seal at the bottom we'll see if you get",
    "start": "1218400",
    "end": "1225280"
  },
  {
    "text": "lucky uh we have also created a cloud distribution and U so if you remember our bucket was",
    "start": "1225280",
    "end": "1231880"
  },
  {
    "text": "uh store. my name. name and uh this is a",
    "start": "1231880",
    "end": "1237240"
  },
  {
    "text": "very simple cloudfront uh distribution for those of us who are not familiar with cloudfront is as we said content",
    "start": "1237240",
    "end": "1242480"
  },
  {
    "text": "distribution Network and you can pick An Origin you want to uh relay and U cach the content which is coming on at the",
    "start": "1242480",
    "end": "1248480"
  },
  {
    "text": "edge so in this instance we have selected um the origin which is our bucket which we found in the S3 folder",
    "start": "1248480",
    "end": "1254480"
  },
  {
    "text": "so just to demo this simple setup the way it looks like is if we go to our cloud distribution uh which is by this",
    "start": "1254480",
    "end": "1261120"
  },
  {
    "text": "name and if you see in our home folder we had uh say for example jelly fish so",
    "start": "1261120",
    "end": "1268039"
  },
  {
    "text": "if you go and type apologize the address bar is not very readable but uh if I",
    "start": "1268039",
    "end": "1274080"
  },
  {
    "text": "type jelly fish you get jellyfish so it's essentially uh sends your request all the way through what platform",
    "start": "1274080",
    "end": "1279919"
  },
  {
    "start": "1276000",
    "end": "1756000"
  },
  {
    "text": "receives relays it all the way through S3 so this is where the interesting part comes in so I've have done two things",
    "start": "1279919",
    "end": "1285679"
  },
  {
    "text": "here uh I have created two Lambda functions",
    "start": "1285679",
    "end": "1291080"
  },
  {
    "text": "I've cre created the first Lambda function to respond to the viewer request uh and that is these are the",
    "start": "1291080",
    "end": "1297679"
  },
  {
    "text": "four events which Alec was just mentioning um in his part of U conversation uh so VI request event is",
    "start": "1297679",
    "end": "1306039"
  },
  {
    "text": "uh when an End customer sends a request to cloudfront when right before it arrives at uh and it is processed by the",
    "start": "1306039",
    "end": "1313000"
  },
  {
    "text": "cache it is going to invoke an event for Lambda and that uh Lambda event is going",
    "start": "1313000",
    "end": "1319000"
  },
  {
    "text": "to look something like okay let me pick this up this is",
    "start": "1319000",
    "end": "1326559"
  },
  {
    "text": "something like this I'll see if you guys can read it I'll try to increase the",
    "start": "1326559",
    "end": "1333799"
  },
  {
    "text": "font so this is what the the uh viewer request event looks like so essentially",
    "start": "1334120",
    "end": "1339840"
  },
  {
    "text": "uh if viewer sends a request to cloudfront it's going to generate uh invoke a function which is going to have",
    "start": "1339840",
    "end": "1345880"
  },
  {
    "text": "the property of the distribution which is it's being called for it's going to have the URI for which the customer is",
    "start": "1345880",
    "end": "1351200"
  },
  {
    "text": "calling it's going to have all the different header properties including user agent host header and all the",
    "start": "1351200",
    "end": "1356720"
  },
  {
    "text": "cookies which are part of the request event right uh okay so let's see how we can solve our problem um of first",
    "start": "1356720",
    "end": "1365320"
  },
  {
    "text": "uniquely uh first randomly picking a cookie uh we're going to use cookie I'm sorry that's another aspect we're going",
    "start": "1365320",
    "end": "1371200"
  },
  {
    "text": "to use cookie for the session stickiness um so cookies is another browser concept",
    "start": "1371200",
    "end": "1376360"
  },
  {
    "text": "and essentially each of the websites can uh use this as a mechanism to uh track",
    "start": "1376360",
    "end": "1382440"
  },
  {
    "text": "users across uh users across a single session uh and as we get inside the",
    "start": "1382440",
    "end": "1387559"
  },
  {
    "text": "details of it for those who are new we'll try to explain that all right so let's get to the juicy",
    "start": "1387559",
    "end": "1394240"
  },
  {
    "text": "part all right so this is I've created a function uh I've called it reinvent",
    "start": "1394240",
    "end": "1399400"
  },
  {
    "text": "viewer request cookie Trail just like that uh and so this is what the function",
    "start": "1399400",
    "end": "1407080"
  },
  {
    "text": "looks like I'm going to try to expand it all the way so everybody gets a nice",
    "start": "1407080",
    "end": "1412720"
  },
  {
    "text": "view all right is that is that readable everybody yeah one in the back cool so",
    "start": "1412720",
    "end": "1418279"
  },
  {
    "text": "we just saw the structure of uh the event which looks something like this",
    "start": "1418279",
    "end": "1423720"
  },
  {
    "text": "right so uh to solve a problem what we're going to do is we're going to see",
    "start": "1423720",
    "end": "1428880"
  },
  {
    "text": "if this is a returning user first so we're going to try to find the cookie and if the cookie is already assigned to",
    "start": "1428880",
    "end": "1434039"
  },
  {
    "text": "that user that means he's a returning user and we have to return the same uh treatment or the image which he was",
    "start": "1434039",
    "end": "1439600"
  },
  {
    "text": "served the last time and uh so that is what the first part of the problem solves so I'm going to briefly walk",
    "start": "1439600",
    "end": "1445559"
  },
  {
    "text": "through this code and um explain you so the these are all the treatment groups which we saw um and then we have this is",
    "start": "1445559",
    "end": "1451400"
  },
  {
    "text": "the cookie name which we have decided to set within the browser to track the session uh this is the S3 folder uh",
    "start": "1451400",
    "end": "1459000"
  },
  {
    "text": "which we saw in the S3 console and if you if you realize uh this S3 folder",
    "start": "1459000",
    "end": "1465200"
  },
  {
    "text": "actually I'll save that for a little later uh then we try to read the request",
    "start": "1465200",
    "end": "1470279"
  },
  {
    "text": "variable uh from the event object we try to read the cookie out of the event object this is regular JavaScript and",
    "start": "1470279",
    "end": "1477399"
  },
  {
    "text": "this is where the interesting stuff happens now we're going to Loop through all the cookies which are part of the request which you received from the",
    "start": "1477399",
    "end": "1483440"
  },
  {
    "text": "customer to find the cookie which is relevant to us so that's the cookie which we are using to track the user",
    "start": "1483440",
    "end": "1489559"
  },
  {
    "text": "session um and we decided to use x reinvent bucket to bucke ize different",
    "start": "1489559",
    "end": "1495399"
  },
  {
    "text": "customers across uh different treatment groups uh so we Loop through each of the cookie which is part of the VR request",
    "start": "1495399",
    "end": "1502480"
  },
  {
    "text": "we trim the cookie for any external spaces and we see the cookie which matches the name of our experiment if we",
    "start": "1502480",
    "end": "1509840"
  },
  {
    "text": "see a cookie which matches the name of our experiment means that is the cookie we are trying to track uh we'll get the",
    "start": "1509840",
    "end": "1516320"
  },
  {
    "text": "cookie value then we'll see if that cookie value is valid or not so we'll see if that cookie value exists in all",
    "start": "1516320",
    "end": "1522000"
  },
  {
    "text": "of the groups which we defined on top uh which is all of the cat angry cat bat cat fat groups which we defined and uh",
    "start": "1522000",
    "end": "1529840"
  },
  {
    "text": "if that is true so it's a valid cookie the cookie exists the header is right and it's one of the buckets we're going to change the request",
    "start": "1529840",
    "end": "1537760"
  },
  {
    "text": "URI and the request URI is going to be the S3 bucket folder which was uh our experiment",
    "start": "1537919",
    "end": "1544840"
  },
  {
    "text": "treatment images so in some ways this hides the entire bucket and our folder and our origin directory structure from",
    "start": "1544840",
    "end": "1551000"
  },
  {
    "text": "the end viewers uh and we are going to append the path name. jpex so",
    "start": "1551000",
    "end": "1556159"
  },
  {
    "text": "essentially if somebody's coming back from a cookie cat Batman then we serve him a Batman cat we'll see what we get",
    "start": "1556159",
    "end": "1561679"
  },
  {
    "text": "today so that's still a surprise uh if we do not see any cookie which was set",
    "start": "1561679",
    "end": "1566760"
  },
  {
    "text": "or uh then we come here we try to throw a dice and we try to randomly select one",
    "start": "1566760",
    "end": "1573159"
  },
  {
    "text": "of the groups which we want to assign to this customer and change the URI to point to that new experience which you",
    "start": "1573159",
    "end": "1579640"
  },
  {
    "text": "want to offer to a unique visitor does that make sense so far yeah people are",
    "start": "1579640",
    "end": "1584799"
  },
  {
    "text": "with me cool awesome so what did we do next what we did next is we Associated",
    "start": "1584799",
    "end": "1591200"
  },
  {
    "text": "this function with Cloud distribution so I'm going to try to create a new Association",
    "start": "1591200",
    "end": "1597840"
  },
  {
    "text": "uh just to demonstrate how it works so if you have written this function and say for example you have a cloud",
    "start": "1597840",
    "end": "1602880"
  },
  {
    "text": "distribution which you want uh which you which you want this function to handle all the incoming VR requests you would",
    "start": "1602880",
    "end": "1609159"
  },
  {
    "text": "come to the uh driven uh trigger function here you click cloudfront as a Event Source it's going to refresh this",
    "start": "1609159",
    "end": "1615640"
  },
  {
    "text": "page and I'm going to pick say for example uh reinvent I'm going to pick some",
    "start": "1615640",
    "end": "1622720"
  },
  {
    "text": "distribution I'm going to pick some cache behavior and I'm going to say uh on all the viewer request invoke this",
    "start": "1622720",
    "end": "1628760"
  },
  {
    "text": "function before you do Cloud processing and if you submit this it should start syncing so I've just Associated this",
    "start": "1628760",
    "end": "1635559"
  },
  {
    "text": "function with another distribution while that sycs we're going to use the original one which I created before the session to continue the demonstration",
    "start": "1635559",
    "end": "1642039"
  },
  {
    "text": "all right so there is one function I've also created another function and that is so if you notice if a customer has",
    "start": "1642039",
    "end": "1648200"
  },
  {
    "text": "set his cookie we can retrieve the cookie to send him over to the right uh to serve him the right image and if the",
    "start": "1648200",
    "end": "1655320"
  },
  {
    "text": "customer has not does not have a valid cookie we are going to throw Dice and select a c uh an image to serve him but",
    "start": "1655320",
    "end": "1661399"
  },
  {
    "text": "we did not do not set the cookie yet because setting a cookie is an operation or it's a valid header only on the",
    "start": "1661399",
    "end": "1666880"
  },
  {
    "text": "response so we we we have created another U function here which is Vier",
    "start": "1666880",
    "end": "1672559"
  },
  {
    "text": "response and what that does it's a very simple function uh it has the same cookie name which we want to set so when",
    "start": "1672559",
    "end": "1678320"
  },
  {
    "text": "it comes back our viewer request function understands it and it uses uh a metadata header uh which is content of",
    "start": "1678320",
    "end": "1685760"
  },
  {
    "text": "our object and um if that metadata header is present is as simple as that it sets the cookie value to that",
    "start": "1685760",
    "end": "1692039"
  },
  {
    "text": "metadata header all right so the three pieces of the puzzle are complete so we",
    "start": "1692039",
    "end": "1697760"
  },
  {
    "text": "have a static S3 website which has a folder which uh which contains all the treatment we want to offer our",
    "start": "1697760",
    "end": "1704279"
  },
  {
    "text": "customer we have a cloudfront distribution which relays all the request it gets",
    "start": "1704279",
    "end": "1710519"
  },
  {
    "text": "back to the origin and we have two Lambda functions the first Lambda function is going to be triggered on the",
    "start": "1710519",
    "end": "1715919"
  },
  {
    "text": "V request arrival the other one is going to be trickered on the VR response let's see if this works this was working a",
    "start": "1715919",
    "end": "1722080"
  },
  {
    "text": "little while back it's going to be embarrassing if it does not so we're going to try it out",
    "start": "1722080",
    "end": "1728760"
  },
  {
    "text": "all right so I'm going to form the URL and uh so this was the Vier request I'm",
    "start": "1728760",
    "end": "1736000"
  },
  {
    "text": "going to copy the URL which we decided this is the",
    "start": "1736000",
    "end": "1742559"
  },
  {
    "text": "uh all right okay so let's see what",
    "start": "1742559",
    "end": "1747600"
  },
  {
    "text": "happens so we're going to open some browsers and see with different",
    "start": "1747600",
    "end": "1752880"
  },
  {
    "text": "browsers what comes up okay so when for visitors from chrome this is okay so",
    "start": "1752880",
    "end": "1759320"
  },
  {
    "text": "this is what they get and if you refresh it it should remain the same uh so we got a cat which is stuck I think this is",
    "start": "1759320",
    "end": "1765640"
  },
  {
    "text": "a cat drunk or something uh we'll figure that out and if I",
    "start": "1765640",
    "end": "1772760"
  },
  {
    "text": "another visitor unique visitor who's from a different it could be from a different device uh in this instance we're using browser for a proxy comes up",
    "start": "1772760",
    "end": "1779919"
  },
  {
    "text": "and sees they're going to see say cheese so they get a seal so we got some variety uh and if you refresh it the",
    "start": "1779919",
    "end": "1787039"
  },
  {
    "text": "content essentially should not change uh so behind the scenes what is happening",
    "start": "1787039",
    "end": "1792640"
  },
  {
    "text": "let's see is if I inspect this and this is where Chrome breaks because it even if I zoom in it would not zoom in these",
    "start": "1792640",
    "end": "1799840"
  },
  {
    "text": "uh subheaders but uh I'm going to read it out for you so if we refresh this image uh what is happening is I'm so",
    "start": "1799840",
    "end": "1808200"
  },
  {
    "text": "sorry okay let me copy this out onto our image and then we can read it from",
    "start": "1808200",
    "end": "1815679"
  },
  {
    "text": "here so this is the response we received from the viewer so this was cat stuck",
    "start": "1822279",
    "end": "1829679"
  },
  {
    "text": "uh and what happened essentially is uh after the image was fetched from the",
    "start": "1829679",
    "end": "1835240"
  },
  {
    "text": "cache we inserted this cookie and say anybody who's getting this cookie send them back to the same page um and",
    "start": "1835240",
    "end": "1841159"
  },
  {
    "text": "similarly uh if we see the request header we'll see in the request header the cookie cat Stu was was sent out U",
    "start": "1841159",
    "end": "1849480"
  },
  {
    "text": "when the browser sent the request over I think this is a very simple but powerful example which demonstrate how something",
    "start": "1849480",
    "end": "1856039"
  },
  {
    "text": "um as Vena flavored as just the uh HTTP file system which is S3 and very simple",
    "start": "1856039",
    "end": "1861760"
  },
  {
    "text": "configuration of cloudfront can result in Dynamic user experiences through our",
    "start": "1861760",
    "end": "1867039"
  },
  {
    "text": "computation which you're doing at the ede uh well I guess that is all I had",
    "start": "1867039",
    "end": "1872080"
  },
  {
    "text": "for you guys thanks thanks a lot for your time and",
    "start": "1872080",
    "end": "1876760"
  },
  {
    "text": "attention Okay Swit back nice job sh thank you thank you well thank you very",
    "start": "1881000",
    "end": "1886120"
  },
  {
    "text": "much so now you can see uh just a very simple but but a good but I feel is a good illustration of what",
    "start": "1886120",
    "end": "1892440"
  },
  {
    "text": "you can do with lamb at the edge now to talk a bit about a about a less contrived and and actual customer",
    "start": "1892440",
    "end": "1899120"
  },
  {
    "text": "example we have Daniel from cloudinary who's going to tell us about what there what he's hoping to do with lamb at the edge",
    "start": "1899120",
    "end": "1905919"
  },
  {
    "start": "1906000",
    "end": "1933000"
  },
  {
    "text": "Daniel thank you Al great work Shaban demo Works uh this",
    "start": "1910240",
    "end": "1916039"
  },
  {
    "text": "is great uh um cool so I'm very excited",
    "start": "1916039",
    "end": "1921120"
  },
  {
    "text": "to be here today and share clowner Journey integrating with Lambda at the",
    "start": "1921120",
    "end": "1926480"
  },
  {
    "text": "edge well it wasn't as much of a journey as it was uh a walk in the park as you",
    "start": "1926480",
    "end": "1932919"
  },
  {
    "text": "soon see um now to tell you a bit before we",
    "start": "1932919",
    "end": "1938440"
  },
  {
    "start": "1933000",
    "end": "2022000"
  },
  {
    "text": "jump right in let's H start by by telling you a bit about what cloud nner actually does and we started the company",
    "start": "1938440",
    "end": "1946360"
  },
  {
    "text": "five years ago with name to Pro provide uh an ENT solution to image and video",
    "start": "1946360",
    "end": "1951600"
  },
  {
    "text": "management it's a a cloud-based SASS and we cater web and mobile developers uh",
    "start": "1951600",
    "end": "1957559"
  },
  {
    "text": "who use cloud Nary as core backbone and infrastructure it's a fully API based",
    "start": "1957559",
    "end": "1962840"
  },
  {
    "text": "system and completely modular and by that we try to cover the entire uh uh",
    "start": "1962840",
    "end": "1968639"
  },
  {
    "text": "image management pipeline starting from upload storage digital asset management",
    "start": "1968639",
    "end": "1973799"
  },
  {
    "text": "or media management and things which are a bit more relevant to this session are",
    "start": "1973799",
    "end": "1979120"
  },
  {
    "text": "the cool stuff which are manipulation done on images and videos meaning you can resize crop at watermarks add images",
    "start": "1979120",
    "end": "1987000"
  },
  {
    "text": "within videos and so on and we have CDN which is we want to deliver those those",
    "start": "1987000",
    "end": "1992919"
  },
  {
    "text": "media assets through CDN which is an integral part of the system uh now as",
    "start": "1992919",
    "end": "1998720"
  },
  {
    "text": "mentioned uh the system is completely modular so we have many customers picking choosing whichever components",
    "start": "1998720",
    "end": "2004360"
  },
  {
    "text": "they want to integrate uh we have 160,000 developers who use cloud Nary uh",
    "start": "2004360",
    "end": "2009679"
  },
  {
    "text": "from small startups to large Enterprises uh we manage for them more than 11",
    "start": "2009679",
    "end": "2014720"
  },
  {
    "text": "billion media assets and we're doing that at the rate of 2,000 transformation manipulation of those manyi assets per",
    "start": "2014720",
    "end": "2022360"
  },
  {
    "start": "2022000",
    "end": "2091000"
  },
  {
    "text": "second um now all of those customers ours we have many customers are like um",
    "start": "2022360",
    "end": "2030320"
  },
  {
    "text": "uh large media siiz publishers Commerce sit all of those uh have something in common which is images uh um and I want",
    "start": "2030320",
    "end": "2039000"
  },
  {
    "text": "you to take a minute and and think about your images on your applications and your platforms um think about all of",
    "start": "2039000",
    "end": "2047840"
  },
  {
    "text": "those those images and Medias that you have uh uh uh all the things that you left behind coming here to reinvent uh",
    "start": "2047840",
    "end": "2054440"
  },
  {
    "text": "all of those applications you need to get back to tomorrow that that work thing that everyone is talking about um",
    "start": "2054440",
    "end": "2061520"
  },
  {
    "text": "so when you think about them um are they loading fast enough and how would better",
    "start": "2061520",
    "end": "2066760"
  },
  {
    "text": "performance affect your results now as developers you suddenly",
    "start": "2066760",
    "end": "2072240"
  },
  {
    "text": "have to deal with all sort of new devices coming to the market different resolution different browsers user",
    "start": "2072240",
    "end": "2078560"
  },
  {
    "text": "locations Network capabilities and responsive layout you want to provide the best experience to your users but",
    "start": "2078560",
    "end": "2084679"
  },
  {
    "text": "you want to enjoy uh the benefits of of making Dynamic decision and the CD",
    "start": "2084679",
    "end": "2089960"
  },
  {
    "text": "engineer uh and this is where uh Lambda D Edge presents a very good solution uh",
    "start": "2089960",
    "end": "2096760"
  },
  {
    "text": "where you can easily add actions at the CDN Edge uh using very simple JavaScript",
    "start": "2096760",
    "end": "2102800"
  },
  {
    "text": "now the architecture seen here is is very similar to the one that Alex showed before but um to put it into context of",
    "start": "2102800",
    "end": "2111480"
  },
  {
    "text": "of media and let's let's focus on images for instance so you have users downloading images from different",
    "start": "2111480",
    "end": "2118599"
  },
  {
    "text": "browsers uh and then the URL of of those images along with some addition",
    "start": "2118599",
    "end": "2123880"
  },
  {
    "text": "information about each specific user like user agent uh uh image type and and",
    "start": "2123880",
    "end": "2129359"
  },
  {
    "text": "client hits and DPR is being sent to our code which is deployed at Lambda dedge",
    "start": "2129359",
    "end": "2135440"
  },
  {
    "text": "uh where the code Lambda D smartly and dynamically helps us to adapt those",
    "start": "2135440",
    "end": "2141240"
  },
  {
    "text": "requests and and less cloudinary generate images on the Fly manipulate them optimize them and then we send the",
    "start": "2141240",
    "end": "2148480"
  },
  {
    "text": "best fitting image back to the to be cached uh now just to share a couple of",
    "start": "2148480",
    "end": "2155680"
  },
  {
    "start": "2153000",
    "end": "2276000"
  },
  {
    "text": "examples of what we currently have with uh uh Lambda The Edge so what you see in",
    "start": "2155680",
    "end": "2160880"
  },
  {
    "text": "here um is actually couple of examples so the first example is dealing with",
    "start": "2160880",
    "end": "2166400"
  },
  {
    "text": "image formats um so as you know there are many types of users out there who have many",
    "start": "2166400",
    "end": "2173079"
  },
  {
    "text": "choices regarding browsers uh you want to serve them the optimal image but what",
    "start": "2173079",
    "end": "2178520"
  },
  {
    "text": "is an optimal image uh I mean JPS are great but now we have many different",
    "start": "2178520",
    "end": "2183640"
  },
  {
    "text": "other image formats you have a webp which is Google impressed a a format of",
    "start": "2183640",
    "end": "2190160"
  },
  {
    "text": "an image file uh you have JP XR uh and the problem is that not all browsers",
    "start": "2190160",
    "end": "2195640"
  },
  {
    "text": "support all of those formats so Chrome won't be able to run a JPEG XR and uh if",
    "start": "2195640",
    "end": "2201400"
  },
  {
    "text": "you're running using Firefox they won't be able to currently handle all of those IM formats so uh what you have here if",
    "start": "2201400",
    "end": "2210079"
  },
  {
    "text": "you look at the URL and it's actually if if you're quick enough to copy it you can actually start playing uh with and",
    "start": "2210079",
    "end": "2215960"
  },
  {
    "text": "manipulating you just so we have the the the blue uh writing the URL resizing an",
    "start": "2215960",
    "end": "2221960"
  },
  {
    "text": "image but the F Auto marker see in the URL actually uh uh sends a message to",
    "start": "2221960",
    "end": "2228359"
  },
  {
    "text": "our code implemented in Lamb The Edge so to select the best format of an image",
    "start": "2228359",
    "end": "2233560"
  },
  {
    "text": "and uh that format is being sent back to our uh uh to to the browser and that you",
    "start": "2233560",
    "end": "2239720"
  },
  {
    "text": "have a new the the result is that you serve the optimal format to best fit to best fit the the right browser uh uh and",
    "start": "2239720",
    "end": "2248440"
  },
  {
    "text": "and what you experience is is all of those images are looking great and since WEP and jpar are a bit more compressed",
    "start": "2248440",
    "end": "2255920"
  },
  {
    "text": "uh uh the experience is is that you see uh some saving in in file size which",
    "start": "2255920",
    "end": "2261560"
  },
  {
    "text": "resulting in 30% B save uh and the beauty of it is that cloud Nary we",
    "start": "2261560",
    "end": "2267520"
  },
  {
    "text": "didn't have to change our origin code uh we just let a cloudinary code at Lambda",
    "start": "2267520",
    "end": "2274079"
  },
  {
    "text": "The Edge help us make those decisions second example is is dealing",
    "start": "2274079",
    "end": "2279119"
  },
  {
    "start": "2276000",
    "end": "2403000"
  },
  {
    "text": "with uh responsive images uh and with responsive images uh",
    "start": "2279119",
    "end": "2285520"
  },
  {
    "text": "you need to address all of the different devices and browser out there and you",
    "start": "2285520",
    "end": "2290960"
  },
  {
    "text": "want to serve the uh I guess optimal image to fit the design uh but the",
    "start": "2290960",
    "end": "2296280"
  },
  {
    "text": "question is is do you want one image to be served to all different screen",
    "start": "2296280",
    "end": "2301400"
  },
  {
    "text": "resolution or do you want to generate an image for each screen which is out there",
    "start": "2301400",
    "end": "2307040"
  },
  {
    "text": "uh which which might be a bit too much so what's the right balance and here again uh we Sol this using modern client",
    "start": "2307040",
    "end": "2314319"
  },
  {
    "text": "hints and as you can see in the URL over there uh there's the wo and DPR Auto",
    "start": "2314319",
    "end": "2319839"
  },
  {
    "text": "marker uh which again sends uh uh request to our code at Lambda The Edge",
    "start": "2319839",
    "end": "2327359"
  },
  {
    "text": "uh to generate uh the best image that fit the the the the actual screen uh not",
    "start": "2327359",
    "end": "2334599"
  },
  {
    "text": "only not only that but uh we have have um smart algorithms that help us sort of",
    "start": "2334599",
    "end": "2341839"
  },
  {
    "text": "detect and and and uh provide a fixed set of of pixels so that we won't be",
    "start": "2341839",
    "end": "2348599"
  },
  {
    "text": "needing to generate all of those images and something which is quite interesting that is that uh uh tal who's our CD",
    "start": "2348599",
    "end": "2356160"
  },
  {
    "text": "who's in charge of the integration uh with lamb at the edge uh found out",
    "start": "2356160",
    "end": "2362680"
  },
  {
    "text": "something quite funny which is you know developers usually you address developers as as either being lazy or",
    "start": "2362680",
    "end": "2370000"
  },
  {
    "text": "efficient uh but uh so God forbid I'll be calling our CD uh lazy but what we",
    "start": "2370000",
    "end": "2376400"
  },
  {
    "text": "found out is that if you when we had to to implement this solution with other CDN you had to write hundreds light of",
    "start": "2376400",
    "end": "2383760"
  },
  {
    "text": "codes of and of condition and instruction to the cgn and here we have Lambda D Ed which presented a very",
    "start": "2383760",
    "end": "2390200"
  },
  {
    "text": "elegant solution that by using uh one or three simple line of of Javas Street",
    "start": "2390200",
    "end": "2396440"
  },
  {
    "text": "code we were able to achieve this uh uh thing which is and was quite fun to see",
    "start": "2396440",
    "end": "2403599"
  },
  {
    "start": "2403000",
    "end": "2505000"
  },
  {
    "text": "uh our last example for today is touching uh quality uh image quality and",
    "start": "2403599",
    "end": "2409839"
  },
  {
    "text": "and the cool stuff here it's not only that we touching quality we're actually touching uh uh mobile saving data um now",
    "start": "2409839",
    "end": "2420480"
  },
  {
    "text": "it's a matter of how do we want to handle poor network connectivity the Q auto market seen here in the uh uh",
    "start": "2420480",
    "end": "2427480"
  },
  {
    "text": "already runs uh different encoders on each specific image and then uh creates",
    "start": "2427480",
    "end": "2433200"
  },
  {
    "text": "a degreg of the image you you get a bit of a less of quality but one that is",
    "start": "2433200",
    "end": "2438640"
  },
  {
    "text": "unnoticeable by the human eye but the cool feature that we were able to implement using L The Edge uh is",
    "start": "2438640",
    "end": "2446359"
  },
  {
    "text": "actually uh dealing with with mobile save data and with Mod browsers and especially uh browsers of of different",
    "start": "2446359",
    "end": "2455040"
  },
  {
    "text": "mobile devices they can they have an element which is data save mode which",
    "start": "2455040",
    "end": "2460480"
  },
  {
    "text": "can be switched on in case of poor network connectivity um and again it's a it's a",
    "start": "2460480",
    "end": "2466599"
  },
  {
    "text": "it's I guess it's a compromise between serving a high quality image or serving",
    "start": "2466599",
    "end": "2471880"
  },
  {
    "text": "or sending a a delivering a bit degreg one uh just so that the page upload",
    "start": "2471880",
    "end": "2476960"
  },
  {
    "text": "speed will be higher and again in here you have one URL uh which says all users",
    "start": "2476960",
    "end": "2483200"
  },
  {
    "text": "uh qo just sends us a a notion of of the the quality of the network of the user",
    "start": "2483200",
    "end": "2489520"
  },
  {
    "text": "and then uh you have one yourl serving different devices and and the result is",
    "start": "2489520",
    "end": "2497200"
  },
  {
    "text": "again uh decreasing the file size and results in 30% band we",
    "start": "2497200",
    "end": "2504400"
  },
  {
    "text": "save uh so these are just some of example already live right now with",
    "start": "2504400",
    "end": "2510119"
  },
  {
    "text": "Lambda D Edge and was very exciting to integrate because it open up a world of",
    "start": "2510119",
    "end": "2515520"
  },
  {
    "text": "possibilities and opportunities so for instance and I think Alec mentioned some of those in his talk uh when you want to",
    "start": "2515520",
    "end": "2522640"
  },
  {
    "text": "add a security layer you want to block user you want to uh be via GE location",
    "start": "2522640",
    "end": "2528359"
  },
  {
    "text": "IP or referral uh you might want to use third party data that is collected on",
    "start": "2528359",
    "end": "2533960"
  },
  {
    "text": "the edge uh to better determine a better way of of controlling the quality of",
    "start": "2533960",
    "end": "2539280"
  },
  {
    "text": "images uh um and the cool part is touching personalization now with",
    "start": "2539280",
    "end": "2544480"
  },
  {
    "text": "personalization there are some cool s that you can do with Cloud n right now I mean change uh color images and then add",
    "start": "2544480",
    "end": "2552359"
  },
  {
    "text": "text personal text and provide a better uh experience for the user so we're very",
    "start": "2552359",
    "end": "2557480"
  },
  {
    "text": "excited with with this new technology and with the integration as I mentioned uh URLs are live right now so when you",
    "start": "2557480",
    "end": "2564720"
  },
  {
    "text": "get back to those web applications those platform make sure to try them up and and go experiment thank",
    "start": "2564720",
    "end": "2572800"
  },
  {
    "text": "you great thank you Daniel sure okay now let's get to the now let's",
    "start": "2575920",
    "end": "2582359"
  },
  {
    "text": "get to the uh final Final Phase getting started with the Lambda at the edge",
    "start": "2582359",
    "end": "2587760"
  },
  {
    "start": "2584000",
    "end": "2784000"
  },
  {
    "text": "preview so I think we've covered this all pretty well but using Lambda at the edge you bring your own code either",
    "start": "2587760",
    "end": "2593800"
  },
  {
    "text": "using existing Lambda functions or writing your own the programming model will be nodejs and you can write once",
    "start": "2593800",
    "end": "2601000"
  },
  {
    "text": "and run anywhere in all of our 68 Edge locations so getting started there's a",
    "start": "2601000",
    "end": "2607760"
  },
  {
    "text": "bit.ly link we have up here so if you uh I know it's not clickable in there but it's bit.ly Lambda at the edge I think",
    "start": "2607760",
    "end": "2614800"
  },
  {
    "text": "we tried to put the ad in there but it probably didn't work right right Mina that's okay and then uh you will uh get",
    "start": "2614800",
    "end": "2620720"
  },
  {
    "text": "an email when we uh when we have white listed your account those that Whit listing process is going to take uh take a couple days for the time being so uh",
    "start": "2620720",
    "end": "2628079"
  },
  {
    "text": "get those requests in the uh service limits that are associated with the lamb at the edge preview because remember this is being",
    "start": "2628079",
    "end": "2634319"
  },
  {
    "text": "released as a uh as a preview the runtime is is uh is nodejs triggered by cloudfront events um there are no",
    "start": "2634319",
    "end": "2641119"
  },
  {
    "text": "network connections or disk access or AWS region access or VPC access for the",
    "start": "2641119",
    "end": "2646359"
  },
  {
    "text": "time being um the timeouts are something that uh that that I wanted to spend a",
    "start": "2646359",
    "end": "2652000"
  },
  {
    "text": "couple couple seconds talking about more than a couple milliseconds um you know",
    "start": "2652000",
    "end": "2657119"
  },
  {
    "text": "the the functions in Lambda you know those tend to take you know seconds to minutes things like uh log processing and they can be fast but there's a lot",
    "start": "2657119",
    "end": "2663079"
  },
  {
    "text": "of use cases for for longer ones but the whole point of running something at the Edge is for it to execute quickly if",
    "start": "2663079",
    "end": "2669480"
  },
  {
    "text": "something's going to take longer than 50 milliseconds probably might as well do it in the region anyway um the uh the one power level or",
    "start": "2669480",
    "end": "2677440"
  },
  {
    "text": "memory that memory footprint we're going to support for the time being per VM is 128 megabytes fortunately the nodejs",
    "start": "2677440",
    "end": "2683640"
  },
  {
    "text": "runtime tends to be pretty small so that should give you a good amount of space to work with with your application code",
    "start": "2683640",
    "end": "2689319"
  },
  {
    "text": "and your uh package size can be uh 1 Megabyte whoops away the uh pricing",
    "start": "2689319",
    "end": "2697200"
  },
  {
    "text": "schemes that we're using for uh Lambda at the edge are the same model as Lambda the prices are slightly different UH 60",
    "start": "2697200",
    "end": "2704559"
  },
  {
    "text": "cents per million uh function executions and uh just take my word for it what the",
    "start": "2704559",
    "end": "2709920"
  },
  {
    "text": "what the number is for the per per second of execution uh uh uh time um so",
    "start": "2709920",
    "end": "2717160"
  },
  {
    "text": "for an example of 10 million executions with each one being roughly 50 milliseconds that's going to translate to about uh",
    "start": "2717160",
    "end": "2723680"
  },
  {
    "text": "$913 uh per month",
    "start": "2723680",
    "end": "2728240"
  },
  {
    "text": "but the final thing that I want to leave you with is we've talked about use cases that we've thought of and Danny was was",
    "start": "2728839",
    "end": "2734079"
  },
  {
    "text": "was gracious enough to come and spend time telling us how how he and Cloud n are using it but we have a ton of",
    "start": "2734079",
    "end": "2740880"
  },
  {
    "text": "additional functionality that we want to build for Lambda at the edge but we haven't quite figured out what order we",
    "start": "2740880",
    "end": "2747040"
  },
  {
    "text": "want to build things in and we really want to hear feedback from all of you about what you what you what what you",
    "start": "2747040",
    "end": "2752359"
  },
  {
    "text": "like about land at the edge which is great but what the most important things that are missing from it that you think we should be we should be focusing on in",
    "start": "2752359",
    "end": "2758599"
  },
  {
    "text": "terms of development this is uh you know I think as was said multiple times during the Keynotes and it's it's it's",
    "start": "2758599",
    "end": "2764559"
  },
  {
    "text": "true is that over 90% of our road map items are driven by customer feedback so really want to hear from you how your",
    "start": "2764559",
    "end": "2770640"
  },
  {
    "text": "experience is with it and the sorts of a use cases that you that you can solve and the sort that you want to solve but",
    "start": "2770640",
    "end": "2777559"
  },
  {
    "text": "you know we need a couple of a couple of extra features in it so thank you very much and please don't forget to complete",
    "start": "2777559",
    "end": "2783240"
  },
  {
    "text": "your evaluations",
    "start": "2783240",
    "end": "2786440"
  }
]