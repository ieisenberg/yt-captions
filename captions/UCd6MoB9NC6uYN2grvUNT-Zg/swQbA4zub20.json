[
  {
    "text": "good afternoon thanks for coming to this session who's here at reinvent for the",
    "start": "1190",
    "end": "7799"
  },
  {
    "text": "first time awesome welcome should be an exciting week lots of sessions lots of",
    "start": "7799",
    "end": "15240"
  },
  {
    "text": "parties lots of fun so I am Peter Voss all I am a distinguished engineer at AWS",
    "start": "15240",
    "end": "22439"
  },
  {
    "text": "and today I'm going to talk about how AWS minimizes the blast radius of",
    "start": "22439",
    "end": "27599"
  },
  {
    "text": "failures so I spent my career focused on building highly available large-scale",
    "start": "27599",
    "end": "33780"
  },
  {
    "text": "distributed systems and one of the things I've learned and something you learn quickly in this field is that",
    "start": "33780",
    "end": "40500"
  },
  {
    "text": "there are some fundamental properties of the universe that you basically have to contend with the first is the speed of",
    "start": "40500",
    "end": "46710"
  },
  {
    "text": "light so 186 miles per millisecond is pretty darn fast but as the folks at JPL",
    "start": "46710",
    "end": "54719"
  },
  {
    "text": "this morning trying to land their their Mars rover learned it really gets in the way when you travel any long distance",
    "start": "54719",
    "end": "61399"
  },
  {
    "text": "communications by the way they did land the rover successfully so congratulations to our our friends at",
    "start": "61399",
    "end": "67799"
  },
  {
    "text": "JPL a happy Amazon customer a tip us customer the next thing is sort of this",
    "start": "67799",
    "end": "74850"
  },
  {
    "text": "pesky property universe known as the cap theorem so this is a an observation you",
    "start": "74850",
    "end": "81150"
  },
  {
    "text": "can't Simas simultaneously have consistency and availability in a distributed system that is built to be",
    "start": "81150",
    "end": "86460"
  },
  {
    "text": "partitioned tolerant so this was first postulated by Eric Brewer in 98 and then",
    "start": "86460",
    "end": "91590"
  },
  {
    "text": "proven by Seth Gilbert and Nancy Lynch at MIT",
    "start": "91590",
    "end": "96720"
  },
  {
    "text": "perhaps most annoying though is this observation by some guy named Murphy which is basically stuff breaks",
    "start": "96720",
    "end": "103850"
  },
  {
    "text": "inevitably things will fail in a variety of interesting ways I don't know if this has been proven but in my experience",
    "start": "103850",
    "end": "109770"
  },
  {
    "text": "that seems to have been borne out to be the truth now security availability",
    "start": "109770",
    "end": "116030"
  },
  {
    "text": "durability these are all super important to AWS in fact they're our top priority",
    "start": "116030",
    "end": "121399"
  },
  {
    "text": "and yet we have to contend with with Murphy's Law so today I'm going to talk",
    "start": "121399",
    "end": "128550"
  },
  {
    "text": "about the techniques that Amazon uses AWS uses to contain the blast radius or the the",
    "start": "128550",
    "end": "136930"
  },
  {
    "text": "degree of impact when Murphy's Law does in fact strike and I hope you'll walk away from this talk getting a better",
    "start": "136930",
    "end": "143260"
  },
  {
    "text": "understanding of how a DPS builds resilience into our systems and also",
    "start": "143260",
    "end": "148599"
  },
  {
    "text": "some techniques that you can use to reduce the blast radius in your own systems so this term blast radius is a",
    "start": "148599",
    "end": "156330"
  },
  {
    "text": "it's a really useful one because failure is in binary it's not a it's failing or",
    "start": "156330",
    "end": "163840"
  },
  {
    "text": "it's not there is a degree of impact it's a really useful term it's part of our common language at AWS and basically",
    "start": "163840",
    "end": "172480"
  },
  {
    "text": "it's a way to describe the degree of impact so a table us if we have a",
    "start": "172480",
    "end": "177700"
  },
  {
    "text": "failure one way to talk about blast radius as well how many customers did it impact or how many workloads or what",
    "start": "177700",
    "end": "184269"
  },
  {
    "text": "functionality maybe it was just a portion of the functionality that was impacted and then finally in what locations was it a racket a data center",
    "start": "184269",
    "end": "191830"
  },
  {
    "text": "was it a whole data center was it an entire region obviously we would always prefer a smaller blast we as a single",
    "start": "191830",
    "end": "198670"
  },
  {
    "text": "rack failing to a larger scope failure",
    "start": "198670",
    "end": "202859"
  },
  {
    "text": "so while we do relentlessly focus on preventing failures and and I would say that we've gotten very good at keeping",
    "start": "203790",
    "end": "210700"
  },
  {
    "text": "our systems extremely highly available we also relentlessly focus on reducing blast radius for those very rare cases",
    "start": "210700",
    "end": "218380"
  },
  {
    "text": "where we do have a failure and try to contain it and make it as small as possible one way",
    "start": "218380",
    "end": "226570"
  },
  {
    "text": "to do that we do this is in our correction of errors process so that's our post mortem process that we use",
    "start": "226570",
    "end": "233290"
  },
  {
    "text": "whenever there's an event the service team will go through analyze what were",
    "start": "233290",
    "end": "238329"
  },
  {
    "text": "the root causes of the failure and then identify a set of actions to take to",
    "start": "238329",
    "end": "243730"
  },
  {
    "text": "prevent recurrence one of the questions in the template for doing this",
    "start": "243730",
    "end": "249010"
  },
  {
    "text": "correction of errors is about customer impact and we asked as a thought exercise how could you cut the blast radius for a",
    "start": "249010",
    "end": "254889"
  },
  {
    "text": "similar event in half so we're always thinking about even when we do have an event how can we make it even smaller",
    "start": "254889",
    "end": "260500"
  },
  {
    "text": "blast radius the next time so before talking about how to do that let's talk about how things can fail so",
    "start": "260500",
    "end": "266949"
  },
  {
    "text": "one way things can fail as well servers crash maybe not like this but servers do crash disks fail in a variety of",
    "start": "266949",
    "end": "273460"
  },
  {
    "text": "interesting ways they might go completely offline they might have random i/o errors network devices can",
    "start": "273460",
    "end": "279280"
  },
  {
    "text": "fail and if they don't fail they could introduce random bit flips we've definitely seen this happen a few times",
    "start": "279280",
    "end": "286770"
  },
  {
    "text": "meanwhile outside the data center utility workers can accidentally cause",
    "start": "286770",
    "end": "292180"
  },
  {
    "text": "fiber cuts you can have electrical storms that can cause utility power",
    "start": "292180",
    "end": "298029"
  },
  {
    "text": "failures in a more extreme scenario you",
    "start": "298029",
    "end": "303219"
  },
  {
    "text": "could have data centers actually get physically damaged by storms or fires so",
    "start": "303219",
    "end": "310419"
  },
  {
    "text": "far I've talked about physical failures right but there's also non-physical affairs we have to worry about one is",
    "start": "310419",
    "end": "316569"
  },
  {
    "text": "just a surge of traffic whether it's a DDoS attack or a extreme surge in demand",
    "start": "316569",
    "end": "323529"
  },
  {
    "text": "on one of our services which can cause overload conditions we have to worry",
    "start": "323529",
    "end": "329409"
  },
  {
    "text": "about black swan' requests we actually call them these poison pills internally I've done a little research and that",
    "start": "329409",
    "end": "335800"
  },
  {
    "text": "seems to be just an AWS term but you can think of these as these particularly problematic requests that are either",
    "start": "335800",
    "end": "341379"
  },
  {
    "text": "really expensive or there's something about them that trigger a bug in in the system and they can be particularly",
    "start": "341379",
    "end": "348969"
  },
  {
    "text": "pernicious because a client will retry after a failure and so a single failure",
    "start": "348969",
    "end": "354310"
  },
  {
    "text": "can cascade and cause an entire system to get infected so we worried a lot about these poison",
    "start": "354310",
    "end": "360460"
  },
  {
    "text": "pills or black swans we also have to be mindful the fact that sometimes a software deployment or configuration",
    "start": "360460",
    "end": "366669"
  },
  {
    "text": "change could introduce the problem and then of course most generally there are",
    "start": "366669",
    "end": "372969"
  },
  {
    "text": "bugs and obviously none of us want to have bugs get into production and we",
    "start": "372969",
    "end": "378189"
  },
  {
    "text": "have a very good success rate and not letting bugs get into production but there is still that that possible",
    "start": "378189",
    "end": "383770"
  },
  {
    "text": "eventualities and so now that I've talked about failures and what we mean",
    "start": "383770",
    "end": "390189"
  },
  {
    "text": "by blast radius I'll better talk about the various techniques we use to contain it",
    "start": "390189",
    "end": "395720"
  },
  {
    "text": "so region isolation availability zone independence cell based architecture shuffle sharding and then finally in",
    "start": "395720",
    "end": "403550"
  },
  {
    "text": "tandem with all these techniques the operational practices that we use to get the desired outcome so let's start with",
    "start": "403550",
    "end": "410750"
  },
  {
    "text": "region isolation so as you probably know AWS is deployed globally in 19 separate",
    "start": "410750",
    "end": "417920"
  },
  {
    "text": "locations that we call regions and we actually have five additional regions",
    "start": "417920",
    "end": "423650"
  },
  {
    "text": "that we've announced that will be coming on online soon and as a customer you choose the region that you want to run",
    "start": "423650",
    "end": "430880"
  },
  {
    "text": "your workloads in based on factors like like latency or maybe data residency",
    "start": "430880",
    "end": "437020"
  },
  {
    "text": "each one of these regions is a separate distinct stack of AWS services and each",
    "start": "437020",
    "end": "446240"
  },
  {
    "text": "region has a separate set of end points for the api's you use to interact with the services so for example in ec2 if",
    "start": "446240",
    "end": "452780"
  },
  {
    "text": "you want to interact with ec2 in uswest one you would use the ec2 that uswest",
    "start": "452780",
    "end": "458450"
  },
  {
    "text": "one that either Sam it's not that common endpoint meanwhile if you wanted to use",
    "start": "458450",
    "end": "463700"
  },
  {
    "text": "easy to than us used you wussies - then you would use separate endpoint and the",
    "start": "463700",
    "end": "469610"
  },
  {
    "text": "reason is there's no single global ec2 there's a separate stack in every region",
    "start": "469610",
    "end": "476020"
  },
  {
    "text": "and these are isolated in San Shi ations and they don't know about each other",
    "start": "476020",
    "end": "481120"
  },
  {
    "text": "so this is a shared nothing architecture which gives us the ultimate in blast radius protection so there's our ec2 you",
    "start": "481120",
    "end": "490520"
  },
  {
    "text": "know Amazon Elastic Compute cloud service in u.s. west wall and US east - they don't talk to each other they don't",
    "start": "490520",
    "end": "496670"
  },
  {
    "text": "know about each other same is true for a service like Amazon FQs Amazon sage maker and and so on now you might be",
    "start": "496670",
    "end": "504470"
  },
  {
    "text": "wondering well but there are multi region or global features you know what",
    "start": "504470",
    "end": "510320"
  },
  {
    "text": "about those features things like s3 cross region replication or dynamos",
    "start": "510320",
    "end": "516560"
  },
  {
    "text": "global tables or ec2 virtual private cloud peering so let me talk about how",
    "start": "516560",
    "end": "523430"
  },
  {
    "text": "we address those by going through an example so there is an example of inter-regional private",
    "start": "523430",
    "end": "529430"
  },
  {
    "text": "cloud peering so virtual private cloud or VPC basically lets you provision the",
    "start": "529430",
    "end": "534800"
  },
  {
    "text": "logically isolated section of the AWS cloud where you can launch resources in",
    "start": "534800",
    "end": "540020"
  },
  {
    "text": "a virtual network that you define you define the IP addresses in your virtual network configure route tables gateways",
    "start": "540020",
    "end": "546710"
  },
  {
    "text": "and so forth and with inter region DPC peering you can actually take two v pcs",
    "start": "546710",
    "end": "552260"
  },
  {
    "text": "in two different regions and virtually connect them so they can communicate",
    "start": "552260",
    "end": "557440"
  },
  {
    "text": "without having to go over the the public internet so here's our V PC peering",
    "start": "557440",
    "end": "564470"
  },
  {
    "text": "connection now setting one of these things up involves a workflow and a setup approvals particularly because",
    "start": "564470",
    "end": "570920"
  },
  {
    "text": "they can be v pcs owned by different customers so you want both customers to agree to establishing this connection",
    "start": "570920",
    "end": "577370"
  },
  {
    "text": "and that involves configuration changes in the V PC configuration on each of",
    "start": "577370",
    "end": "584840"
  },
  {
    "text": "these in each of these regions but these easy to control planes don't talk to each other so how do we accomplish this",
    "start": "584840",
    "end": "591700"
  },
  {
    "text": "the answer we have a dedicated service called the cross region Orchestrator that sits on top of these systems and",
    "start": "591700",
    "end": "601660"
  },
  {
    "text": "implements the workflow manages through the approval process and comes through the sort of the front door of BC - just",
    "start": "601660",
    "end": "608660"
  },
  {
    "text": "like any other API would and it also has a certain number of safety features it",
    "start": "608660",
    "end": "613820"
  },
  {
    "text": "ring fences some of the interactions to ensure that there is no possibility for multiple regions to be impacted by you",
    "start": "613820",
    "end": "620330"
  },
  {
    "text": "know whatever issue there could be at the same time so we can preserve that single region blast radius so kind of a",
    "start": "620330",
    "end": "629750"
  },
  {
    "text": "recap here we've got all these regions and we're deeply committed to this principle of region isolation so in the",
    "start": "629750",
    "end": "637700"
  },
  {
    "text": "event of say an earthquake in Japan which we did experience a few years ago there could be impacted in that region",
    "start": "637700",
    "end": "644270"
  },
  {
    "text": "but it's going to be limited to that region so in the worst case we have a single region blast radius in case of a",
    "start": "644270",
    "end": "650270"
  },
  {
    "text": "failure that's still pretty big right that's that's a lot of impact especially",
    "start": "650270",
    "end": "656450"
  },
  {
    "text": "if you're a customer that sits only in that region so obviously we want to do better so how",
    "start": "656450",
    "end": "664079"
  },
  {
    "text": "do we do better now I'm gonna talk about availability zone independence so let's",
    "start": "664079",
    "end": "669720"
  },
  {
    "text": "drill into the design of a region kind of double click on it and see how we limit blast radius within a region so",
    "start": "669720",
    "end": "677189"
  },
  {
    "text": "there's our region a region is actually composed of well before I talk about its proposed over a region sits in a in a",
    "start": "677189",
    "end": "683819"
  },
  {
    "text": "location right so at the macro scale its Northern Virginia or Dublin or Frankfurt and but it's not a single data center",
    "start": "683819",
    "end": "691829"
  },
  {
    "text": "it's it's actually a it's composed of multiple data centers that are spread",
    "start": "691829",
    "end": "698569"
  },
  {
    "text": "across the metropolitan area of the region and we call these different locations availability zones and their",
    "start": "698569",
    "end": "704970"
  },
  {
    "text": "and their cross connected with high-speed private fiber links now these",
    "start": "704970",
    "end": "713160"
  },
  {
    "text": "are far enough apart from each other that there's a very very low possibility",
    "start": "713160",
    "end": "718800"
  },
  {
    "text": "for correlated failure except maybe in the in the earthquake case so you can think of them as miles apart and that",
    "start": "718800",
    "end": "726420"
  },
  {
    "text": "means if a tornado comes through it's unlikely that it would hit multiple facilities if there's a utility issue we",
    "start": "726420",
    "end": "733559"
  },
  {
    "text": "actually run off of different utility suppliers in a region so that won't affect multiple availability zones at",
    "start": "733559",
    "end": "738750"
  },
  {
    "text": "the same time and at the same time they're close enough to each other so again think about it as miles away they",
    "start": "738750",
    "end": "746040"
  },
  {
    "text": "don't have that pesky speed of light issues you can think of them logically being in the same place run things like",
    "start": "746040",
    "end": "751350"
  },
  {
    "text": "synchronous replication protocols and so forth without any latency penalty so",
    "start": "751350",
    "end": "757199"
  },
  {
    "text": "each availability zone is basically n data centers it's not just one data center in some so in some cases because",
    "start": "757199",
    "end": "764610"
  },
  {
    "text": "we keep the size of the data center set to a fixed maximum size in larger AZ's",
    "start": "764610",
    "end": "771269"
  },
  {
    "text": "we might have multiple buildings for na Z and then we have n of those availability zones per region usually",
    "start": "771269",
    "end": "778920"
  },
  {
    "text": "three or more in fact in all future region builds will have at least three and that's useful first for a certain",
    "start": "778920",
    "end": "786860"
  },
  {
    "text": "should be the system's consensus protocols that best suited when you have had these three locations so you can get to",
    "start": "786860",
    "end": "794250"
  },
  {
    "text": "consensus agreement across them globally we have 19 regions with 57 total",
    "start": "794250",
    "end": "801029"
  },
  {
    "text": "availability zones and five more regions coming online with 15 more AZ's so with",
    "start": "801029",
    "end": "808170"
  },
  {
    "text": "this architecture of AZ's within a region we now have the possibility to reduce the blast radius because we",
    "start": "808170",
    "end": "815670"
  },
  {
    "text": "reduce the possibility of a correlated failure across the entire region and you can take advantage of this multi a-z",
    "start": "815670",
    "end": "822600"
  },
  {
    "text": "architecture in old applications just like we do in a DBMS by using a multi a-z architecture for your application so",
    "start": "822600",
    "end": "829500"
  },
  {
    "text": "let me go through a quick example here super simple so you have your application it runs on a set of",
    "start": "829500",
    "end": "835829"
  },
  {
    "text": "instances that you've deployed across multiple AZ's and then run an elastic load balancer to low balance the traffic",
    "start": "835829",
    "end": "842250"
  },
  {
    "text": "across them and then behind the scenes are using you know a relational database maybe for your persistence and that set",
    "start": "842250",
    "end": "849540"
  },
  {
    "text": "up in a multi a Z primary standby pair so if you have a failure in one of the",
    "start": "849540",
    "end": "854639"
  },
  {
    "text": "availability zones the elastic load balancer will detect that and stop sending traffic to the field a Z or the",
    "start": "854639",
    "end": "860850"
  },
  {
    "text": "instances in the failed a Z meanwhile the application is connected",
    "start": "860850",
    "end": "866069"
  },
  {
    "text": "to the master database that has gone away me because there's a power failure or a network failure but you could fail",
    "start": "866069",
    "end": "873029"
  },
  {
    "text": "that database over to the to the healthy",
    "start": "873029",
    "end": "878519"
  },
  {
    "text": "AZ which happens automatically with Amazon RDS and then your application is up and running again",
    "start": "878519",
    "end": "883819"
  },
  {
    "text": "and these failure detection events could happen fairly quickly so there might be",
    "start": "883819",
    "end": "889800"
  },
  {
    "text": "a slight hiccup the operation your application but otherwise it's almost like a non-event that you lost you know",
    "start": "889800",
    "end": "895319"
  },
  {
    "text": "one of the data centers in your application so this is how all of our services that run regionally in AWS are",
    "start": "895319",
    "end": "903180"
  },
  {
    "text": "designed and operated it's a really powerful model cuz it gives you this",
    "start": "903180",
    "end": "908670"
  },
  {
    "text": "fault tolerance and it basically means that you can withstand an AZ failure and",
    "start": "908670",
    "end": "914009"
  },
  {
    "text": "not have any impact on your customers it's also a powerful design for durability so s3 uses the multi AZ model",
    "start": "914009",
    "end": "921360"
  },
  {
    "text": "to get its 11 of durability and so with this architecture you can basically get to",
    "start": "921360",
    "end": "926879"
  },
  {
    "text": "zero blast radius when you have a data center and get hit by tornado or a utility worker hitting a cutting out",
    "start": "926879",
    "end": "933209"
  },
  {
    "text": "fiber connection so what about the services in a WMS that are zonal so some",
    "start": "933209",
    "end": "939689"
  },
  {
    "text": "of our applications are some of our services give you the opportunities and application to have zonal resources like",
    "start": "939689",
    "end": "946319"
  },
  {
    "text": "an ec2 instance or an EBS volume you decide which AZ these live in and that's",
    "start": "946319",
    "end": "952319"
  },
  {
    "text": "part of the ear story for creating a resilient application these are zone specific resources and",
    "start": "952319",
    "end": "960349"
  },
  {
    "text": "for minimum blast radius considerations we actually have a zone local control",
    "start": "960349",
    "end": "966509"
  },
  {
    "text": "plane for the resources in each of our Easy's with a principle of availability",
    "start": "966509",
    "end": "972269"
  },
  {
    "text": "zone independence so we talk about control planes real quickly if you're not familiar with the term so control",
    "start": "972269",
    "end": "978419"
  },
  {
    "text": "plane is the thing that you interact with to administer these resources whether they're zonal or regional and",
    "start": "978419",
    "end": "985349"
  },
  {
    "text": "then the data plane is the thing you interact with to actually do the work you want to get accomplished so some examples are here for Amazon ec2 the",
    "start": "985349",
    "end": "992759"
  },
  {
    "text": "control plane is what handles run instances so it takes your API request and then does all the work necessary to",
    "start": "992759",
    "end": "999149"
  },
  {
    "text": "launch the VM as per your instructions in your API and then the data plane for",
    "start": "999149",
    "end": "1004699"
  },
  {
    "text": "you to do is basically the instance right the thing you SSH into or the run your application on it's also the network",
    "start": "1004699",
    "end": "1011899"
  },
  {
    "text": "that attaches your you should do it since to other instances in your V PC so",
    "start": "1011899",
    "end": "1019279"
  },
  {
    "text": "let's talk about azi her availability zone independence for these things so the data plane runs in each of these",
    "start": "1019279",
    "end": "1024678"
  },
  {
    "text": "AZ's and these are isolated from each other they can obviously communicate over a network but otherwise the data planes don't really know about each",
    "start": "1024679",
    "end": "1031519"
  },
  {
    "text": "other and the same is true of the control planes for these for these resources now I mentioned earlier",
    "start": "1031519",
    "end": "1040759"
  },
  {
    "text": "there's a regional endpoint to access ec2 so there must be some layer that you connect to that sits on top of these and",
    "start": "1040759",
    "end": "1047329"
  },
  {
    "text": "there is there's a regional control plane that acts as the entry point and also handles things that are",
    "start": "1047329",
    "end": "1053720"
  },
  {
    "text": "zone specific so for easy to things like security groups or not zone specific it",
    "start": "1053720",
    "end": "1060350"
  },
  {
    "text": "also aggregates API is like describe instances so if you want to find out about all your instances in a region it",
    "start": "1060350",
    "end": "1066470"
  },
  {
    "text": "will need to interrogate the control planes across all the easies so in this",
    "start": "1066470",
    "end": "1072620"
  },
  {
    "text": "model again if you lose an AZ you're gonna lose your zonal resources but you've expected that anyway but the data",
    "start": "1072620",
    "end": "1079279"
  },
  {
    "text": "planes and the other ATS are fine the control planes for those zones are fine and the regional control control plane",
    "start": "1079279",
    "end": "1086000"
  },
  {
    "text": "is built to be multi AZ fault tolerant so it will also continue to operate fine",
    "start": "1086000",
    "end": "1092379"
  },
  {
    "text": "except for the fact that it won't be able to service requests that target the zone that's down so if you have API",
    "start": "1092379",
    "end": "1098570"
  },
  {
    "text": "calls in to one of the healthy as ease to launch an instance there it should be",
    "start": "1098570",
    "end": "1103759"
  },
  {
    "text": "able to route around this particular type of AZ failure",
    "start": "1103759",
    "end": "1108100"
  },
  {
    "text": "okay so let's review the black phase improvements that we get from availability zones so here's a regional",
    "start": "1110289",
    "end": "1116659"
  },
  {
    "text": "service spread across three AZ's if zone a fails regional service is fine because",
    "start": "1116659",
    "end": "1123679"
  },
  {
    "text": "it's able to fail away from from the failed AZ meanwhile our zonal service",
    "start": "1123679",
    "end": "1129340"
  },
  {
    "text": "has an impact adjust in that zone but not the other zones the other zones are isolated and they won't have any impact",
    "start": "1129340",
    "end": "1135399"
  },
  {
    "text": "these are all these are all good things the theoretical blast radius is a",
    "start": "1135399",
    "end": "1141830"
  },
  {
    "text": "different story so by a theoretical blast rates I mean in the worst case scenario the thing that you know the",
    "start": "1141830",
    "end": "1147080"
  },
  {
    "text": "Black Swan event like what's the worst case that could happen here for the regional service it is the entire",
    "start": "1147080",
    "end": "1153350"
  },
  {
    "text": "service and that's the thing that we lose sleep at night every night thinking about for the zonal service it's it's",
    "start": "1153350",
    "end": "1160009"
  },
  {
    "text": "still the zone so there's something nice about this property of these availability zones we still don't like",
    "start": "1160009",
    "end": "1165080"
  },
  {
    "text": "that there's a non infrastructure event that could take out a service in his own but it is still nice that it's contained",
    "start": "1165080",
    "end": "1171049"
  },
  {
    "text": "to the zone can we get the same kind of resilience in our regional service",
    "start": "1171049",
    "end": "1176299"
  },
  {
    "text": "without having to sort of target it at a in a zone local kind of way so let's take a step back and look at",
    "start": "1176299",
    "end": "1182700"
  },
  {
    "text": "this abstracted architecture so there's an entry point a regional entry point",
    "start": "1182700",
    "end": "1189000"
  },
  {
    "text": "into the service it has an aggregation layer that might do a few things but",
    "start": "1189000",
    "end": "1194190"
  },
  {
    "text": "mostly it's a routing layer into a set of compartmentalize resources and then there's failure isolation between them",
    "start": "1194190",
    "end": "1201140"
  },
  {
    "text": "so in the availability zone case these are AZ's down here and then a regional",
    "start": "1201140",
    "end": "1206820"
  },
  {
    "text": "control plane that accesses them but more generally there's this compartmentalization that is giving us",
    "start": "1206820",
    "end": "1213150"
  },
  {
    "text": "this nice fault isolation can we use that in a in a different way in a",
    "start": "1213150",
    "end": "1218820"
  },
  {
    "text": "different dimension than AZ's and get some smaller blast radius there's",
    "start": "1218820",
    "end": "1224850"
  },
  {
    "text": "another way to think about this abstracted architecture which is how they build chips so for centuries now",
    "start": "1224850",
    "end": "1231180"
  },
  {
    "text": "ships have been built with these watertight compartments that are separated by bulkheads and the reason",
    "start": "1231180",
    "end": "1238470"
  },
  {
    "text": "that this is that if there's a there's damage to the hull and it causes flooding the flooding is contained into one of those compartments and the rest",
    "start": "1238470",
    "end": "1246900"
  },
  {
    "text": "of the ship is still intact and the ship stays afloat those bulkheads also provide structural integrity these are",
    "start": "1246900",
    "end": "1253800"
  },
  {
    "text": "both nice properties right you have this fault Tower it's minimized impact of",
    "start": "1253800",
    "end": "1259830"
  },
  {
    "text": "failure and higher structural integrity and so we've taken these ideas and",
    "start": "1259830",
    "end": "1266160"
  },
  {
    "text": "applied them to our regional services and what we call cellular architecture or cell based architecture so let me go",
    "start": "1266160",
    "end": "1275820"
  },
  {
    "text": "through our simple example again of a application with a load balancer compute and some storage and it's not shown here",
    "start": "1275820",
    "end": "1284040"
  },
  {
    "text": "but this is an application that is running in multiple lazy's and has the the failover as it described before so",
    "start": "1284040",
    "end": "1291120"
  },
  {
    "text": "in cell based architecture we take this service stack configuration and we",
    "start": "1291120",
    "end": "1297660"
  },
  {
    "text": "create multiple instantiations of it and",
    "start": "1297660",
    "end": "1303270"
  },
  {
    "text": "these are fully iced I didn't know about each other and each one of these stacks",
    "start": "1303270",
    "end": "1308700"
  },
  {
    "text": "is what we call a cell and then what we'll take our workload",
    "start": "1308700",
    "end": "1313720"
  },
  {
    "text": "and basically low balance it partition it over these these cells one way to do",
    "start": "1313720",
    "end": "1319660"
  },
  {
    "text": "that might be by customer so we'll put this section into cell zero the section into cell one this section into cell n",
    "start": "1319660",
    "end": "1327120"
  },
  {
    "text": "now you guys all look nice but maybe there's someone naughty in here it's gonna cause us a problem they're gonna",
    "start": "1327120",
    "end": "1332950"
  },
  {
    "text": "only gonna cause up the problem in that one cell the other cells are gonna be fine now we need some way to contain",
    "start": "1332950",
    "end": "1339520"
  },
  {
    "text": "this thing or make this thing look like a single service still so we put a cell router on top of it that makes those",
    "start": "1339520",
    "end": "1344980"
  },
  {
    "text": "routing decisions and that whole thing is what we call a cell based service so",
    "start": "1344980",
    "end": "1352150"
  },
  {
    "text": "the cells are an internal structure that's invisible to you as a customer but provide resilience and fault",
    "start": "1352150",
    "end": "1358720"
  },
  {
    "text": "tolerance and this looks just like the picture for azi or availability zone",
    "start": "1358720",
    "end": "1364360"
  },
  {
    "text": "independence but on a different dimension so let's talk about what that looks like",
    "start": "1364360",
    "end": "1369580"
  },
  {
    "text": "so here's the regional service getting resilience from availability zones here's that same service divided into",
    "start": "1369580",
    "end": "1376840"
  },
  {
    "text": "cells and you can see now that with an availability zone failure both services",
    "start": "1376840",
    "end": "1382870"
  },
  {
    "text": "are resilient to that because their fault tolerant across AZ's and the other",
    "start": "1382870",
    "end": "1388540"
  },
  {
    "text": "examples of failure the ones that we lose sleep at at night over the failure in their in the cell based service it's",
    "start": "1388540",
    "end": "1395410"
  },
  {
    "text": "contained to the cell so the impact is 1 over N or n is the number of cells rather than the whole service and I've",
    "start": "1395410",
    "end": "1402850"
  },
  {
    "text": "shown three here for the purposes of presentation but the number of cells can actually be much higher so one over n",
    "start": "1402850",
    "end": "1409330"
  },
  {
    "text": "could be a fairly small percentage of the overall set of workloads that you're supporting now that this approach can",
    "start": "1409330",
    "end": "1418450"
  },
  {
    "text": "also be applied to zonal services and we do this in our ec2 control plane where",
    "start": "1418450",
    "end": "1424240"
  },
  {
    "text": "you divide each of the zonal services into cells as well so you still have a failure as you'd expect if an",
    "start": "1424240",
    "end": "1430030"
  },
  {
    "text": "availability zone goes down what's interesting though is as I mentioned some availability zones or multiple data",
    "start": "1430030",
    "end": "1435430"
  },
  {
    "text": "centers and so you can actually have a smaller blast radius in certain cases if your zonal cells are",
    "start": "1435430",
    "end": "1441610"
  },
  {
    "text": "aligned with the physical infrastructure which is the case with our zonal easy to control plane services that's",
    "start": "1441610",
    "end": "1448179"
  },
  {
    "text": "actually a nice improvement and then again for the other failure cases that",
    "start": "1448179",
    "end": "1453429"
  },
  {
    "text": "we worry about there is also a smaller ablation Shrek blast radius even for the zonal services so let's look at the",
    "start": "1453429",
    "end": "1461469"
  },
  {
    "text": "system properties of a cell based architecture we've I talked about some of them the first one is workload",
    "start": "1461469",
    "end": "1468070"
  },
  {
    "text": "isolation and this is useful not just for failures but also just noisy neighbor problems and then of course",
    "start": "1468070",
    "end": "1475419"
  },
  {
    "text": "there's the the failure containment so if we lose a cell the other cells are fine there's also this nice property",
    "start": "1475419",
    "end": "1483099"
  },
  {
    "text": "that is really powerful really important to us at AWS which is how we scale these things",
    "start": "1483099",
    "end": "1488440"
  },
  {
    "text": "so rather than scaling up a service which is sort of the traditional way just add you know more and more capacity",
    "start": "1488440",
    "end": "1495070"
  },
  {
    "text": "to it in a cell based architecture you could also add more capacity to cells",
    "start": "1495070",
    "end": "1500589"
  },
  {
    "text": "but one of the things that we include in our goals for a sublet are characters",
    "start": "1500589",
    "end": "1506769"
  },
  {
    "text": "that cells like our data centers have a maximum size we won't let them grow past a certain point and so if we need to",
    "start": "1506769",
    "end": "1513279"
  },
  {
    "text": "continue to grow a system rather than growing the cells past that point we'll",
    "start": "1513279",
    "end": "1518469"
  },
  {
    "text": "add another cell so you grow the system by scaling it out with more and more cells the fact that the cells have a",
    "start": "1518469",
    "end": "1525999"
  },
  {
    "text": "maximum size means you can test them at that maximum size with a reasonable test configuration so you can test them to",
    "start": "1525999",
    "end": "1533019"
  },
  {
    "text": "failure you can do all sorts of stress testing and get confidence that you understand how that piece of the system",
    "start": "1533019",
    "end": "1538960"
  },
  {
    "text": "is going to operate as you you know as you get more and more demand on your system these cells are also more",
    "start": "1538960",
    "end": "1546070"
  },
  {
    "text": "manageable because they're smaller so if there's some issue you need to look through logs or otherwise inspect the",
    "start": "1546070",
    "end": "1552279"
  },
  {
    "text": "nodes in the cell it's gonna be smaller it's just a piece of your system rather than the whole system so it's gonna be",
    "start": "1552279",
    "end": "1558669"
  },
  {
    "text": "easier to work through so let's now talk",
    "start": "1558669",
    "end": "1563799"
  },
  {
    "text": "about some of the core considerations in a cell based architecture so the first",
    "start": "1563799",
    "end": "1569559"
  },
  {
    "text": "is cell size",
    "start": "1569559",
    "end": "1572549"
  },
  {
    "text": "sort of the trade-off here is you can have a large number of smaller cells or a smaller number of large cells in the",
    "start": "1574800",
    "end": "1583660"
  },
  {
    "text": "the case where you have smaller cells that's nice because now your blast radius is you know that much smaller and",
    "start": "1583660",
    "end": "1589330"
  },
  {
    "text": "those smaller things are easy to test easier to break to understand what their breaking points are and 30 to operate in",
    "start": "1589330",
    "end": "1596230"
  },
  {
    "text": "terms of figuring out if there's an issue you know smaller number of notes to go in and take a peek at on the other",
    "start": "1596230",
    "end": "1603220"
  },
  {
    "text": "end of the spectrum though larger cells have some good properties which is first if there's a fixed cost to each of these",
    "start": "1603220",
    "end": "1609910"
  },
  {
    "text": "which often there is you know maybe there's a separate low bounce or each one of them then you get cost efficiency",
    "start": "1609910",
    "end": "1615280"
  },
  {
    "text": "by having fewer of them you also get reduced splits so that this",
    "start": "1615280",
    "end": "1620920"
  },
  {
    "text": "is an important consideration if if we're dividing our workload by a",
    "start": "1620920",
    "end": "1626230"
  },
  {
    "text": "customer some of our customers might be large they have a large number of workloads and that may be too large to",
    "start": "1626230",
    "end": "1632770"
  },
  {
    "text": "fit in a smaller cell if we're using larger cells we may be able to fit that",
    "start": "1632770",
    "end": "1638200"
  },
  {
    "text": "larger customer into a single cell right and not have to worry about deal with the complexity of splitting across multiple cells and finally as a whole",
    "start": "1638200",
    "end": "1646630"
  },
  {
    "text": "this system that has fewer cells is easier to operate because you it's easier to think about easier to look at",
    "start": "1646630",
    "end": "1651850"
  },
  {
    "text": "dashboards and so forth there's no right answer here except that all things being",
    "start": "1651850",
    "end": "1656860"
  },
  {
    "text": "equal we will always prefer the lower about blast radius do these other considerations another which I'm sure",
    "start": "1656860",
    "end": "1666730"
  },
  {
    "text": "you've been thinking about looking at this diagram is well what about the router the cell router is this remaining",
    "start": "1666730",
    "end": "1673570"
  },
  {
    "text": "shared component across the entire system and so it's really important that",
    "start": "1673570",
    "end": "1678910"
  },
  {
    "text": "that thing not fail because now you're back to the regional blast radius and so",
    "start": "1678910",
    "end": "1684700"
  },
  {
    "text": "we spent a lot of effort making sure that that component is stress tested and",
    "start": "1684700",
    "end": "1691410"
  },
  {
    "text": "battle-hardened so that we know when it we have high confidence that even in the Black Swan scenarios that it's going to",
    "start": "1691410",
    "end": "1697960"
  },
  {
    "text": "stay resilient and stay up and and one of the ways to accomplish that is to keep it as simple as possible",
    "start": "1697960",
    "end": "1705290"
  },
  {
    "text": "so when we talk to teams about adopting a sublation architecture we call this component the thinnest possible layer to",
    "start": "1705290",
    "end": "1710870"
  },
  {
    "text": "kind of reinforce should be really simple and yeah that's all I'll say",
    "start": "1710870",
    "end": "1718670"
  },
  {
    "text": "about that another consideration is partitioning dimension so I've talked",
    "start": "1718670",
    "end": "1724610"
  },
  {
    "text": "about how we might divide cells along lines of customers but then in the ec2",
    "start": "1724610",
    "end": "1731330"
  },
  {
    "text": "control plane case there's an aspect of the control plane that actually is cell",
    "start": "1731330",
    "end": "1736790"
  },
  {
    "text": "based based on physical infrastructure in our data centers which makes sense for that application another scenario we",
    "start": "1736790",
    "end": "1746330"
  },
  {
    "text": "may divide not by customer by VPC especially because sometimes V pcs may",
    "start": "1746330",
    "end": "1751730"
  },
  {
    "text": "have crossed customer scenarios and so it takes some analysis to decide what's the right way to carve this thing up and",
    "start": "1751730",
    "end": "1759980"
  },
  {
    "text": "the recommendation I always use is cut with the grain and if you don't know what that means then think about it this",
    "start": "1759980",
    "end": "1765140"
  },
  {
    "text": "way that you know wood has a certain grain and it's easy to split along one dimension and really hard to split cross",
    "start": "1765140",
    "end": "1771530"
  },
  {
    "text": "across the grain and every system has has a natural grain to it another",
    "start": "1771530",
    "end": "1780590"
  },
  {
    "text": "consideration is what I call cross cell use cases these may be unavoidable the",
    "start": "1780590",
    "end": "1787370"
  },
  {
    "text": "goal is to keep them to a minimum because that adds complexity to the thinnest possible layer and also",
    "start": "1787370",
    "end": "1793940"
  },
  {
    "text": "increases the blast radius for those those operations one example to scatter",
    "start": "1793940",
    "end": "1799190"
  },
  {
    "text": "gatherer queries so what this means is there may be an API that comes in that needs to interrogate multiple cells so",
    "start": "1799190",
    "end": "1807830"
  },
  {
    "text": "if scatter requests out and then gather responses are sent out a single reply so an example in ec2 is the describe",
    "start": "1807830",
    "end": "1813410"
  },
  {
    "text": "instance this case I mentioned earlier now there is batch operations so if you need to execute work on multiple cells",
    "start": "1813410",
    "end": "1820880"
  },
  {
    "text": "in a single operation so again an AC - maybe the terminate instances API where you can spend send multiple instance IDs",
    "start": "1820880",
    "end": "1827980"
  },
  {
    "text": "that can be a cross sale use case the",
    "start": "1827980",
    "end": "1833300"
  },
  {
    "text": "last in the probably hardest is coordinated writes where you're actually doing trying sending atomically but a",
    "start": "1833300",
    "end": "1838850"
  },
  {
    "text": "car multiple cells those require careful consideration and one example of that is",
    "start": "1838850",
    "end": "1844430"
  },
  {
    "text": "cell migration so cell migration is when you relocate a workload from one cell to",
    "start": "1844430",
    "end": "1850520"
  },
  {
    "text": "another it's maybe we decided this customer we're gonna move that customer into cell two from cell 1 and you may",
    "start": "1850520",
    "end": "1858800"
  },
  {
    "text": "choose do this because you want to manage the amount of load or heat that's on each cell or maybe just want to load",
    "start": "1858800",
    "end": "1865100"
  },
  {
    "text": "bounce the sizes of them or maybe you've added a salad you and you need to and your approach for adding cells involves",
    "start": "1865100",
    "end": "1872180"
  },
  {
    "text": "you know moving existing workloads over into the new cell and the process that",
    "start": "1872180",
    "end": "1877730"
  },
  {
    "text": "you used to do the migration is not unlike a VM migration so if you're familiar with how VM migration works",
    "start": "1877730",
    "end": "1884290"
  },
  {
    "text": "they say there's a invisible clone that gets created in the target location and",
    "start": "1884290",
    "end": "1889610"
  },
  {
    "text": "it gets brought up to date and synchronized with the source of course",
    "start": "1889610",
    "end": "1895970"
  },
  {
    "text": "the source is still changing so this could take a while for it to get close to begin sync and at the last possible",
    "start": "1895970",
    "end": "1902210"
  },
  {
    "text": "moment both are frozen for the final completion of the syncing and then an atomic flip",
    "start": "1902210",
    "end": "1908210"
  },
  {
    "text": "over to the to the target location that works for VMs and that's the same",
    "start": "1908210",
    "end": "1913700"
  },
  {
    "text": "approach that we use for migrating workloads across cells it requires a",
    "start": "1913700",
    "end": "1918740"
  },
  {
    "text": "careful coordination best-managed at the router level we have a few approaches",
    "start": "1918740",
    "end": "1925190"
  },
  {
    "text": "that we've been using to accomplish this so again with the cell Bay structure",
    "start": "1925190",
    "end": "1933080"
  },
  {
    "text": "we're able to reduce the blast radius from 100 percent down to one over n where n is the number of cells",
    "start": "1933080",
    "end": "1938600"
  },
  {
    "text": "I should reinforce that the events that cause these types of additives are",
    "start": "1938600",
    "end": "1945200"
  },
  {
    "text": "exceedingly rare we could spend a long",
    "start": "1945200",
    "end": "1952130"
  },
  {
    "text": "time not even having to worry about the kind of failure happening because of all the other things that abus does but",
    "start": "1952130",
    "end": "1958190"
  },
  {
    "text": "we're so focused on resilience that we're investing additional engineering work to get to that picture on the right",
    "start": "1958190",
    "end": "1964130"
  },
  {
    "text": "which is a smaller blast radius even when those Black Swan events occur",
    "start": "1964130",
    "end": "1969460"
  },
  {
    "text": "so cells are great but there's another",
    "start": "1970530",
    "end": "1976390"
  },
  {
    "text": "technique that we've been using that is even more impressive and more exciting I think which is called shuffle charting",
    "start": "1976390",
    "end": "1984400"
  },
  {
    "text": "and shuffle charting is a technique that is like cell based architectures and",
    "start": "1984400",
    "end": "1989679"
  },
  {
    "text": "it's particularly useful in stateless or soft state services so we'll be walk",
    "start": "1989679",
    "end": "1996700"
  },
  {
    "text": "through what shuffle charting looks like so here's another simple service we've got eight nodes and these ain't nodes or",
    "start": "1996700",
    "end": "2003450"
  },
  {
    "text": "handling requests that are sent by a load balancer and then we have eight",
    "start": "2003450",
    "end": "2009480"
  },
  {
    "text": "different customers that are sending requests so we're in Vegas I use some some gambling relevant to high cons here",
    "start": "2009480",
    "end": "2016380"
  },
  {
    "text": "there were ten are different customers and let's imagine one of them Dimond",
    "start": "2016380",
    "end": "2022050"
  },
  {
    "text": "here is is introducing a bad workload for whatever reason maybe it's expensive request maybe it's one of these requests",
    "start": "2022050",
    "end": "2030240"
  },
  {
    "text": "that triggers a bug in the system so Dimon sends a request in and that",
    "start": "2030240",
    "end": "2036030"
  },
  {
    "text": "request causes one of our servers to crash okay that's all right we've got seven others maybe Dimon will go away or",
    "start": "2036030",
    "end": "2043679"
  },
  {
    "text": "change what it's doing probably not it'll probably keep retrying and",
    "start": "2043679",
    "end": "2049128"
  },
  {
    "text": "eventually take out the whole system so here our blast radius is basically all",
    "start": "2049129",
    "end": "2054300"
  },
  {
    "text": "the customers this is like the worst case scenario we really want to avoid this this is where we go to sell based",
    "start": "2054300",
    "end": "2061470"
  },
  {
    "text": "architecture so we divide our our customers assign a subset of customers to each sell",
    "start": "2061470",
    "end": "2068790"
  },
  {
    "text": "now when diamond comes along and causes problems that problems contained adjust",
    "start": "2068790",
    "end": "2074608"
  },
  {
    "text": "to the sell this is a 4x improvement right we've gone from 100% down to 25%",
    "start": "2074609",
    "end": "2080118"
  },
  {
    "text": "the blast radius is the number of customers divided by the number of cells and again we could approve that further",
    "start": "2080119",
    "end": "2086220"
  },
  {
    "text": "by adding more cells or in a system where we don't need to really worry",
    "start": "2086220",
    "end": "2092580"
  },
  {
    "text": "about which customers land on which nodes we could shuffle shard them which",
    "start": "2092580",
    "end": "2098160"
  },
  {
    "text": "is a little bit different and it's nuanced but you'll see shortly how powerful this is",
    "start": "2098160",
    "end": "2103190"
  },
  {
    "text": "so we'll take each customer and assign them to two nodes effectively at random",
    "start": "2103190",
    "end": "2108990"
  },
  {
    "text": "not really a random own will use hash functions to be predictable that where",
    "start": "2108990",
    "end": "2115110"
  },
  {
    "text": "are these customers land on these nodes but basically we've assigned them at random so diamond gets assigned to the",
    "start": "2115110",
    "end": "2120930"
  },
  {
    "text": "first and fourth nodes will put spades on those two our role of two on the dice",
    "start": "2120930",
    "end": "2127110"
  },
  {
    "text": "goes to those two nodes and so on Ceaser's basically shuffled randomly",
    "start": "2127110",
    "end": "2133350"
  },
  {
    "text": "across our set of capacity so now again diamond comes along takes out the two",
    "start": "2133350",
    "end": "2139650"
  },
  {
    "text": "nodes that are assigned to it but here's where it gets interesting look at who's sharing those nodes with diamond one of",
    "start": "2139650",
    "end": "2147810"
  },
  {
    "text": "them is hearts hearts however has a second know that it's assigned to that's",
    "start": "2147810",
    "end": "2155100"
  },
  {
    "text": "not impacted to buy the average so as long as that customer retries it's fault-tolerant even though one of its",
    "start": "2155100",
    "end": "2162270"
  },
  {
    "text": "nodes is down one of its noses up it's able to continue operation the same is true on the other node where clubs has",
    "start": "2162270",
    "end": "2169050"
  },
  {
    "text": "that same property so in this case our",
    "start": "2169050",
    "end": "2174360"
  },
  {
    "text": "blast radius is actually the number of customers divided by the number of combinations of of two pairs out of",
    "start": "2174360",
    "end": "2181260"
  },
  {
    "text": "eight which turns out there are 28 of them which is 3.6 percent so if we had a",
    "start": "2181260",
    "end": "2189360"
  },
  {
    "text": "much larger number of customers we'd expect these are well distributed randomly you would have three poor 63.6%",
    "start": "2189360",
    "end": "2195900"
  },
  {
    "text": "of customers impacted by the failure at that I showed meanwhile less than half",
    "start": "2195900",
    "end": "2202290"
  },
  {
    "text": "of the customers would be in that scenario where they're sharing at least one of the nodes so they may see a",
    "start": "2202290",
    "end": "2207390"
  },
  {
    "text": "little bit of impact a little bit of hiccup but they're fine so we went from 25 percent down to 3.6 percent going",
    "start": "2207390",
    "end": "2215040"
  },
  {
    "text": "from the cell-based down to shuffle shark now this is a small system oh I should show you the math so the math",
    "start": "2215040",
    "end": "2220590"
  },
  {
    "text": "here is probably as you remember from high school the binomial coefficient as",
    "start": "2220590",
    "end": "2226260"
  },
  {
    "text": "you look at this math to realize as n grows our number of combinations grows",
    "start": "2226260",
    "end": "2232200"
  },
  {
    "text": "really quickly so let's say we go from 8 nodes up to 100 larged like a huge number of notes it's",
    "start": "2232200",
    "end": "2238200"
  },
  {
    "text": "a reasonable number to run in a large-scale system so say we have a hundred nodes and then we give each",
    "start": "2238200",
    "end": "2243660"
  },
  {
    "text": "customer five combinations we're sorry if five nodes to represent their combination the math tells us that's",
    "start": "2243660",
    "end": "2251130"
  },
  {
    "text": "going to be 75 million different combinations I think of it basically as you know a deck couple hundred cards",
    "start": "2251130",
    "end": "2256890"
  },
  {
    "text": "there's fire you know 75 million different combinations of cards you can get from by picking randomly from that",
    "start": "2256890",
    "end": "2262680"
  },
  {
    "text": "deck which is amazing because now you can see all right 77 percent of customers are not going to see any",
    "start": "2262680",
    "end": "2268530"
  },
  {
    "text": "impact when diamond comes along and takes out it's five nodes but more interestingly ninety-nine point eight",
    "start": "2268530",
    "end": "2275340"
  },
  {
    "text": "percent so those first three rows are still gonna have a majority of their nodes available so they're gonna have a",
    "start": "2275340",
    "end": "2281490"
  },
  {
    "text": "better chance than not to completely you know route around that problem without",
    "start": "2281490",
    "end": "2286770"
  },
  {
    "text": "even having to try and meanwhile that very very very low percentage of",
    "start": "2286770",
    "end": "2292619"
  },
  {
    "text": "customers is basically the percentage of customers that are going to be sharing completely those same five notes what's",
    "start": "2292619",
    "end": "2301740"
  },
  {
    "text": "magical about this and it's all in the math is we've created a multi-tenant",
    "start": "2301740",
    "end": "2307440"
  },
  {
    "text": "system and then used the shuffle charting to create a single basically a single tenant experience which is",
    "start": "2307440",
    "end": "2314310"
  },
  {
    "text": "obviously what a POS aspires to do now this needs a fault our client as I",
    "start": "2314310",
    "end": "2320190"
  },
  {
    "text": "mentioned so one that when it gets a failure will retry but that's that's not hard that's that's pretty common what's",
    "start": "2320190",
    "end": "2327030"
  },
  {
    "text": "interesting also is this not only works for servers it can work for queues they can work for other resources it's also",
    "start": "2327030",
    "end": "2334920"
  },
  {
    "text": "critically dependent on fixed assignments so you're you're stuck with",
    "start": "2334920",
    "end": "2340230"
  },
  {
    "text": "the hand that we deal you if there's any sort of failover like oh well your five",
    "start": "2340230",
    "end": "2345660"
  },
  {
    "text": "nodes are down I'll give you these five then you get back into that old world where now a problem can infect and",
    "start": "2345660",
    "end": "2353520"
  },
  {
    "text": "cascade across an entire system so it really depends on those fixed assignments and if I need some sort of",
    "start": "2353520",
    "end": "2358680"
  },
  {
    "text": "routing mechanism so either a shuffle sharding aware router or dns can be",
    "start": "2358680",
    "end": "2365040"
  },
  {
    "text": "another so in some of our servers both will hand a customer's if ik DNS name and that will resolve to",
    "start": "2365040",
    "end": "2372099"
  },
  {
    "text": "the customer specific shuffle sharted set for that customer which basically gives them the routing for free cool so",
    "start": "2372099",
    "end": "2382209"
  },
  {
    "text": "let's talk about the operational practices that we now layer on top of these architectural techniques to",
    "start": "2382209",
    "end": "2388749"
  },
  {
    "text": "achieve the lowest possible blast radius the first is not even the practice but",
    "start": "2388749",
    "end": "2396969"
  },
  {
    "text": "really ever a mindset and maybe even a religion at a table us which is probably",
    "start": "2396969",
    "end": "2402609"
  },
  {
    "text": "best captured by Vernors blog from earlier this year about compartmentalization now that's this back shall just read it",
    "start": "2402609",
    "end": "2409959"
  },
  {
    "text": "so I won't do as accident I have nothing to see in burger talk but I'd wager that",
    "start": "2409959",
    "end": "2415059"
  },
  {
    "text": "every new a TBS engineer knows within their first week it's not their first day that we never want to touch more",
    "start": "2415059",
    "end": "2420579"
  },
  {
    "text": "than one zone at a time this is so important because if we have",
    "start": "2420579",
    "end": "2426599"
  },
  {
    "text": "availability zone fault isolation or we have region isolation as a core tenet of",
    "start": "2426599",
    "end": "2431950"
  },
  {
    "text": "our blast radius reduction that's gonna go out the window if we have you know some correlated failure introduced by",
    "start": "2431950",
    "end": "2438190"
  },
  {
    "text": "some manual action or automated action on multiple of these at the same time",
    "start": "2438190",
    "end": "2443699"
  },
  {
    "text": "the most common and most I guess obvious example of this is with software",
    "start": "2443699",
    "end": "2448719"
  },
  {
    "text": "deployments so our software deployments are done in a staggered way across zones",
    "start": "2448719",
    "end": "2455309"
  },
  {
    "text": "across regions over time you know quickly enough that we can get features",
    "start": "2455309",
    "end": "2461259"
  },
  {
    "text": "app to customers that you know because we like to launch features but slowly enough that we have confidence that as",
    "start": "2461259",
    "end": "2468099"
  },
  {
    "text": "we're pushing this change broader and wider that it's not gonna cause an issue",
    "start": "2468099",
    "end": "2473140"
  },
  {
    "text": "so we'll start slow observe test and then maybe speed it up as as it goes out",
    "start": "2473140",
    "end": "2480930"
  },
  {
    "text": "broader and broader and that will that's the case with cells it's the case with",
    "start": "2480930",
    "end": "2486809"
  },
  {
    "text": "availability zones casement regions and then within which each of those deployment units will do a fractional",
    "start": "2486809",
    "end": "2493359"
  },
  {
    "text": "deployment to their to so a one box test has a very first step for a service for",
    "start": "2493359",
    "end": "2499630"
  },
  {
    "text": "our ec2 Harbor deployments we'll start with maybe five or ten",
    "start": "2499630",
    "end": "2505049"
  },
  {
    "text": "machines at first verify that things are working and then gradually speed it up",
    "start": "2505049",
    "end": "2512200"
  },
  {
    "text": "as it expands across the infrastructure in tandem with that we have a bunch of",
    "start": "2512200",
    "end": "2517269"
  },
  {
    "text": "automated tests that run that's part of the deployment as well as Canaries or these test applications that are",
    "start": "2517269",
    "end": "2523869"
  },
  {
    "text": "mimicking you know a real-world customer in booking api's and will monitor the",
    "start": "2523869",
    "end": "2529210"
  },
  {
    "text": "results of those if there's any problem the role the deployment get automatically rolled back we'll look at",
    "start": "2529210",
    "end": "2534670"
  },
  {
    "text": "what happened and either decide it was not an issue that we need to worry about or fix the problem before we start the",
    "start": "2534670",
    "end": "2540910"
  },
  {
    "text": "deployment again so this is really important this is this is what we need to do to make sure that we've not",
    "start": "2540910",
    "end": "2547599"
  },
  {
    "text": "compromised the boundaries that we've put between cells and AZ's and regions",
    "start": "2547599",
    "end": "2554549"
  },
  {
    "text": "all that automation sorry all that deployment machinery is automated",
    "start": "2555329",
    "end": "2561509"
  },
  {
    "text": "including the rules about the tests that have to succeed including the timing and",
    "start": "2561509",
    "end": "2567640"
  },
  {
    "text": "the windows when we progress to the next stage but automation is in key in general right it's not just employments",
    "start": "2567640",
    "end": "2573519"
  },
  {
    "text": "there are other things that we do with our infrastructure to manage it whether it's configuring network devices or you",
    "start": "2573519",
    "end": "2580089"
  },
  {
    "text": "know propagating new credentials to the stacks that could be done by hand",
    "start": "2580089",
    "end": "2585670"
  },
  {
    "text": "but humans are prone to error it's much better to automate it but it could be",
    "start": "2585670",
    "end": "2590979"
  },
  {
    "text": "because you can review whatever it is that you're building in your automation you can test it it's predictable and how",
    "start": "2590979",
    "end": "2598269"
  },
  {
    "text": "it's gonna operate and you can repeat it over and over again and know that it's gonna work the same way every time and",
    "start": "2598269",
    "end": "2605369"
  },
  {
    "text": "then finally as you may have heard AWS and Amazon in general is has a very",
    "start": "2605369",
    "end": "2611140"
  },
  {
    "text": "strong philosophy around end-to-end ownership so our service teams are composed of engineers who are builder",
    "start": "2611140",
    "end": "2618219"
  },
  {
    "text": "operators so as engineers we build this up we design the software we test it we",
    "start": "2618219",
    "end": "2623619"
  },
  {
    "text": "also are the ones that deploy it and we're the ones that operate it and respond to issues in production what",
    "start": "2623619",
    "end": "2629440"
  },
  {
    "text": "this does is it gives us this wonderful opportunity to have a feedback loop in terms of design choices what",
    "start": "2629440",
    "end": "2636380"
  },
  {
    "text": "impact is operationally and understanding what changes we need to make to avoid future problems when there",
    "start": "2636380",
    "end": "2643339"
  },
  {
    "text": "is a failure that we need to worry about and so I mentioned earlier the correction of errors template that we",
    "start": "2643339",
    "end": "2648829"
  },
  {
    "text": "use that's usually filled out by engineers or in partnership with engineers where they think about the",
    "start": "2648829",
    "end": "2655250"
  },
  {
    "text": "blast radius and so they're in a great position to then go and implement the changes to make sure the next time if",
    "start": "2655250",
    "end": "2661519"
  },
  {
    "text": "that event occurs the blast radius is cut in half or more so to wrap up we've got a",
    "start": "2661519",
    "end": "2671660"
  },
  {
    "text": "variety of containment compartmentalization mechanisms that we use to reduce blast radius",
    "start": "2671660",
    "end": "2677269"
  },
  {
    "text": "it starts with regions and the strong isolation between regions then it goes into availability zones and then this",
    "start": "2677269",
    "end": "2684470"
  },
  {
    "text": "alternate dimension of availability zones compartmentalization which ourselves and then the magic of shuffle",
    "start": "2684470",
    "end": "2691579"
  },
  {
    "text": "charting to get sort of virtual cells and taking advantage of the combinatorics of the shuffle charting",
    "start": "2691579",
    "end": "2699079"
  },
  {
    "text": "and then with those we protect that compartmentalization with operation",
    "start": "2699079",
    "end": "2704420"
  },
  {
    "text": "operation operational practices so step by step phase deployments that are",
    "start": "2704420",
    "end": "2710960"
  },
  {
    "text": "automated and then service teams that are builder operators so they are close",
    "start": "2710960",
    "end": "2716480"
  },
  {
    "text": "to the the frontlines understand how their decisions are impacting the availability of their systems and all",
    "start": "2716480",
    "end": "2724940"
  },
  {
    "text": "with the goal of reducing blast radius so that's my talk I hope you learned a",
    "start": "2724940",
    "end": "2732680"
  },
  {
    "text": "few things and I'm happy to take questions now if anyone has them and I think there are yeah there are live",
    "start": "2732680",
    "end": "2738680"
  },
  {
    "text": "microphones down the center aisles here",
    "start": "2738680",
    "end": "2743078"
  },
  {
    "text": "yeah so the question was is there an example of Murphy's Law where we thought",
    "start": "2761210",
    "end": "2766400"
  },
  {
    "text": "we had everything nailed down everything sorted out that we answered although the",
    "start": "2766400",
    "end": "2772040"
  },
  {
    "text": "possible failure modes its it goes back to my slide of the the bit flips on the",
    "start": "2772040",
    "end": "2781370"
  },
  {
    "text": "networking side so this is a example for many many years ago so in s/3 s/3 cares deeply about data",
    "start": "2781370",
    "end": "2789560"
  },
  {
    "text": "care deeply about the integrity of data and there are many layers in s3 of",
    "start": "2789560",
    "end": "2795940"
  },
  {
    "text": "checksumming so if there is an arrant but bit flip",
    "start": "2795940",
    "end": "2801530"
  },
  {
    "text": "introduced we make sure it doesn't you know we detected it's not an issue in",
    "start": "2801530",
    "end": "2807220"
  },
  {
    "text": "2008 we had an event in s3 where there",
    "start": "2807220",
    "end": "2812270"
  },
  {
    "text": "was one network card on one server that every now and then was flipping one bit",
    "start": "2812270",
    "end": "2820900"
  },
  {
    "text": "and there was a layer of the system that handles basically the group",
    "start": "2821170",
    "end": "2826880"
  },
  {
    "text": "communication across the system uses gossip protocols so can detect whether I",
    "start": "2826880",
    "end": "2833180"
  },
  {
    "text": "can understand what the state is of all the servers in the system whether they're healthy or not well the gossip protocol noticed there's",
    "start": "2833180",
    "end": "2840620"
  },
  {
    "text": "a funny server name in this packet because one of the bits was flipped in the server name I never heard of that",
    "start": "2840620",
    "end": "2847370"
  },
  {
    "text": "hos before and it triggered a much more expensive sort of reconciliation protocol long story short you could read",
    "start": "2847370",
    "end": "2855350"
  },
  {
    "text": "the long story there's a post mortem that Stoll published on the somewhere in",
    "start": "2855350",
    "end": "2860750"
  },
  {
    "text": "the dashboard status dashboard pages talks about the outage but it took down s3 completely so one server one NIC one",
    "start": "2860750",
    "end": "2869240"
  },
  {
    "text": "bit took down our regional service and that was the only layer we had checks",
    "start": "2869240",
    "end": "2875240"
  },
  {
    "text": "coming all the way up and down the stack that was the only layer that didn't have the check something someone we'd forgotten to add it there",
    "start": "2875240",
    "end": "2883480"
  },
  {
    "text": "yeah so the follow question here is wasn't there a more recent event where there was a human error involved in an",
    "start": "2889510",
    "end": "2896630"
  },
  {
    "text": "s3 patent yes there was and this comes back to my operation back to slides I",
    "start": "2896630",
    "end": "2901730"
  },
  {
    "text": "was talking about which is all your best plans can can fall apart if whatever",
    "start": "2901730",
    "end": "2910250"
  },
  {
    "text": "you're doing doesn't respect those fault isolation boundaries in this case the",
    "start": "2910250",
    "end": "2916010"
  },
  {
    "text": "engineer very certainly knew our philosophy and it was more of a just a",
    "start": "2916010",
    "end": "2922430"
  },
  {
    "text": "human error mistake on the command line which goes back to the importance of automation and importance of testing of",
    "start": "2922430",
    "end": "2928400"
  },
  {
    "text": "those those things Peter yes with the everything that you",
    "start": "2928400",
    "end": "2934790"
  },
  {
    "text": "talked about in the different layers from regions availability zones to cells to the shuffle shorty to your customers",
    "start": "2934790",
    "end": "2941300"
  },
  {
    "text": "are are they given to them or are they for purchase as services good question",
    "start": "2941300",
    "end": "2949190"
  },
  {
    "text": "so regions are given to you these are given to you cells and shuffle charting",
    "start": "2949190",
    "end": "2956450"
  },
  {
    "text": "are sort of different things in that they are they're like the watertight",
    "start": "2956450",
    "end": "2962210"
  },
  {
    "text": "compartments inside the ship so you could ask the the purser on the boat to give you a tour of the lower decks and",
    "start": "2962210",
    "end": "2968690"
  },
  {
    "text": "maybe they'd show you the compartments but otherwise you know you don't really care about that and you get them for free it's just part of the safety of the",
    "start": "2968690",
    "end": "2975050"
  },
  {
    "text": "ship so they're visible and they're they're free I wanted to have a cell for",
    "start": "2975050",
    "end": "2991880"
  },
  {
    "text": "my own service that I'm making and I actually care about aligning that cell with a particular data center so you can",
    "start": "2991880",
    "end": "3005020"
  },
  {
    "text": "get that kind of affinity with your zonal resources right so you can you can get affinity with your ec2 instances and",
    "start": "3005020",
    "end": "3011920"
  },
  {
    "text": "your Cloud HSM instance and your EBS volumes because we give you full control over the place well and availability",
    "start": "3011920",
    "end": "3020859"
  },
  {
    "text": "zone you can think of as a lot whole data center there they're one in the same so a data center will always be",
    "start": "3020859",
    "end": "3028760"
  },
  {
    "text": "in one easy right an AZ will always be one or more data centers you're saying",
    "start": "3028760",
    "end": "3036770"
  },
  {
    "text": "for the multiple data center or a Z's exactly got it yeah no that that is if",
    "start": "3036770",
    "end": "3042410"
  },
  {
    "text": "that is not visible to you as a customer you don't have control over that Thanks yep so as you move from regions to cells",
    "start": "3042410",
    "end": "3050990"
  },
  {
    "text": "how does the version management of stuff that you're deploying is there any operational insight into that of being",
    "start": "3050990",
    "end": "3058880"
  },
  {
    "text": "deployed there I mean how do we how do we keep does it have any impact on you",
    "start": "3058880",
    "end": "3065090"
  },
  {
    "text": "know managing operations deploying in a region versus deploying at a shard level",
    "start": "3065090",
    "end": "3070100"
  },
  {
    "text": "I said that any complexities there yeah so I think what you're saying is there's this window of time when we're going",
    "start": "3070100",
    "end": "3077690"
  },
  {
    "text": "through the progression of the deployment and the versions may not be in sync across multiple locations is",
    "start": "3077690",
    "end": "3083120"
  },
  {
    "text": "that the core of your question yes yeah that's definitely consideration and a deployment may take depending on the",
    "start": "3083120",
    "end": "3089870"
  },
  {
    "text": "system it may take several days to several weeks in some operating",
    "start": "3089870",
    "end": "3095450"
  },
  {
    "text": "structure were particularly careful about the pace of deployment in fact in",
    "start": "3095450",
    "end": "3102230"
  },
  {
    "text": "some of the networking components for VPC it's a particularly delicate affair",
    "start": "3102230",
    "end": "3107810"
  },
  {
    "text": "to roll out changes now it might take a while so yeah that is a complication that we have to be mindful of of well",
    "start": "3107810",
    "end": "3114110"
  },
  {
    "text": "which version is running here yeah some",
    "start": "3114110",
    "end": "3120920"
  },
  {
    "text": "questions regarding the global services we talked a lot about regions zones how",
    "start": "3120920",
    "end": "3125990"
  },
  {
    "text": "hard the global services regarding control playing day to play in resiliency in respect to the regions or",
    "start": "3125990",
    "end": "3132980"
  },
  {
    "text": "edge notes and organize so is your question about regional services that",
    "start": "3132980",
    "end": "3138440"
  },
  {
    "text": "are have global features or truly global services for example I am I am okay yeah",
    "start": "3138440",
    "end": "3143480"
  },
  {
    "text": "that's a great question so I am as a special case because your account information and your",
    "start": "3143480",
    "end": "3152220"
  },
  {
    "text": "credentials and so forth are available globally so it is in a sense of global service however each region has a",
    "start": "3152220",
    "end": "3159460"
  },
  {
    "text": "separate control plane sorry a separate data plate that can operate completely",
    "start": "3159460",
    "end": "3166480"
  },
  {
    "text": "disconnected from the source of truth for I am the control plane however is",
    "start": "3166480",
    "end": "3174190"
  },
  {
    "text": "global and so there are particular considerations that we take with a service like that to make sure that it",
    "start": "3174190",
    "end": "3180490"
  },
  {
    "text": "continues to be available even in the face of some of the failures that I talked about but I should I had it on",
    "start": "3180490",
    "end": "3187600"
  },
  {
    "text": "the site and I forgot to mention that there is another philosophy that we have which is the separation between control",
    "start": "3187600",
    "end": "3193840"
  },
  {
    "text": "plane and data plane and ensuring that the data plane can continue to function even if there is a control plane issue",
    "start": "3193840",
    "end": "3200110"
  },
  {
    "text": "and that's exactly the scenario and I am that's critically important because a regent can be disconnected from the",
    "start": "3200110",
    "end": "3206560"
  },
  {
    "text": "source of truth or it can there could be other issues but the control plane we wanna make sure that you can still you",
    "start": "3206560",
    "end": "3213100"
  },
  {
    "text": "know validate your credentials and so forth you know in each region and not have global impact can you go to the mic",
    "start": "3213100",
    "end": "3226230"
  },
  {
    "text": "so when you're talking about the cell structure and the shuffle shouting I",
    "start": "3228900",
    "end": "3236930"
  },
  {
    "text": "mean when you're talking about the cell stuff you were talking about in the control layer setting out the routing to",
    "start": "3236930",
    "end": "3242549"
  },
  {
    "text": "cut with the grain of the service ways to break it up when you move to shuffle",
    "start": "3242549",
    "end": "3247589"
  },
  {
    "text": "shouting is that done at the same level because obviously you lose that sort of control based on the characteristics of",
    "start": "3247589",
    "end": "3254249"
  },
  {
    "text": "the service yeah it's a good question and for for cell based services usually",
    "start": "3254249",
    "end": "3264869"
  },
  {
    "text": "that prevents you from shuffle charting is that you have you have to have some control over state so you can't a sort",
    "start": "3264869",
    "end": "3272700"
  },
  {
    "text": "of willy-nilly a scatter of state across the entire fleet some servers don't have",
    "start": "3272700",
    "end": "3277740"
  },
  {
    "text": "state or the earthís off state that they can they can cache locally and then operate fine the shop charting works",
    "start": "3277740",
    "end": "3285240"
  },
  {
    "text": "well for for the latter scenario whether it doesn't need to be any particular node affinity the there's another sort",
    "start": "3285240",
    "end": "3295559"
  },
  {
    "text": "of advanced topic here which is kind of interesting which is you can actually layer both of these things together you",
    "start": "3295559",
    "end": "3301319"
  },
  {
    "text": "could take a cell based architecture and then shuffle shard requests across them in a stateless system to get a different",
    "start": "3301319",
    "end": "3308279"
  },
  {
    "text": "kind of resilience property that's something that we're working on now with with with dynamodb so I don't know if I",
    "start": "3308279",
    "end": "3315059"
  },
  {
    "text": "answered your question okay so I guess maybe never another way to",
    "start": "3315059",
    "end": "3320339"
  },
  {
    "text": "answer to that as shuffle charting and is not an improvement on cell based in all cases it's really a system specific",
    "start": "3320339",
    "end": "3328319"
  },
  {
    "text": "on when you might be able to apply it cool okay look that there's no more",
    "start": "3328319",
    "end": "3336809"
  },
  {
    "text": "questions thanks again for coming hope you learn something and enjoy your week at reinvent [Applause]",
    "start": "3336809",
    "end": "3345019"
  }
]