[
  {
    "start": "0",
    "end": "128000"
  },
  {
    "text": "welcome everyone getting close to getting started we do have a few seats",
    "start": "439",
    "end": "6720"
  },
  {
    "text": "kind of spread throughout the audience here if anyone's still standing and would like to sit so my name is Alex",
    "start": "6720",
    "end": "15030"
  },
  {
    "text": "Corley I'm a senior solutions architect here at Amazon Web Services I work in the state and local government area so",
    "start": "15030",
    "end": "21449"
  },
  {
    "text": "most of my customers are state agencies municipalities counties different",
    "start": "21449",
    "end": "26760"
  },
  {
    "text": "government entities at a state level so I have a large background in automation",
    "start": "26760",
    "end": "31890"
  },
  {
    "text": "I joke I come from a long line of startups then an AWS customer for for eight years been been doing this this",
    "start": "31890",
    "end": "39149"
  },
  {
    "text": "DevOps thing for just about as long right and so we're gonna spend some time here talking today about the DevOps",
    "start": "39149",
    "end": "46170"
  },
  {
    "text": "process philosophy how to apply that using AWS tools and kind of comparing",
    "start": "46170",
    "end": "52350"
  },
  {
    "text": "that against traditional on-premises architecture and how things will be a little bit different if you do choose to",
    "start": "52350",
    "end": "57899"
  },
  {
    "text": "go Greenfield kind of new development in the cloud so you hear a lot of people",
    "start": "57899",
    "end": "64170"
  },
  {
    "text": "talk about DevOps and we talked about tooling we talked about culture I'd like to spend a little time talking about",
    "start": "64170",
    "end": "69960"
  },
  {
    "text": "philosophy so Kaizen the the philosophy of improvement so you hear a lot of people",
    "start": "69960",
    "end": "76619"
  },
  {
    "text": "use the word continuous improvement feel that's a little bit redundant you're never done improving right and also",
    "start": "76619",
    "end": "85140"
  },
  {
    "text": "wanted to make a point that this is not just about technology it's about business and people and so I've got two",
    "start": "85140",
    "end": "92340"
  },
  {
    "text": "quotes here just wanted to read them real quick you know to me this is the the essence of what DevOps is we're all",
    "start": "92340",
    "end": "99060"
  },
  {
    "text": "participating in activities that continuously improve all functions of business and involving all employees",
    "start": "99060",
    "end": "106560"
  },
  {
    "text": "right so you hear about breaking down of silos the integration of business kind",
    "start": "106560",
    "end": "112079"
  },
  {
    "text": "of along that philosophy and then also the the reason we're doing this is because by improving standardized",
    "start": "112079",
    "end": "117899"
  },
  {
    "text": "activities and processes we can become more efficient and reduced waste right so going for greater levels of",
    "start": "117899",
    "end": "125280"
  },
  {
    "text": "utilization better efficiency so comparing this with traditional",
    "start": "125280",
    "end": "130590"
  },
  {
    "start": "128000",
    "end": "128000"
  },
  {
    "text": "on-premise infrastructure right potentially these Virtual Machines have been running for",
    "start": "130590",
    "end": "135970"
  },
  {
    "text": "months years using configuration management to do things like like patch",
    "start": "135970",
    "end": "142180"
  },
  {
    "text": "management application upgrades OS migrations different things like that",
    "start": "142180",
    "end": "147760"
  },
  {
    "text": "right static DNS maybe even static IP addresses I'm definitely heavy on the",
    "start": "147760",
    "end": "154480"
  },
  {
    "text": "configuration management right kind of one configuration management to do your",
    "start": "154480",
    "end": "159700"
  },
  {
    "text": "infrastructure your application your OS kind of everything all-in-one traditionally there's been challenges",
    "start": "159700",
    "end": "166389"
  },
  {
    "text": "distributing secrets between all of these these virtual resources right how do you do this efficiently and securely",
    "start": "166389",
    "end": "173579"
  },
  {
    "text": "the configuration management libraries tend to grow very quickly over time if",
    "start": "173579",
    "end": "179109"
  },
  {
    "text": "anyone here has been involved in writing cookbooks for more than one application",
    "start": "179109",
    "end": "184299"
  },
  {
    "text": "for for an infrastructure at large right they they begin to sprawl you start having lots of logic in there you end up",
    "start": "184299",
    "end": "191769"
  },
  {
    "text": "having to write unit tests functional tests things like server spec just to make sure that that all of your",
    "start": "191769",
    "end": "197769"
  },
  {
    "text": "configuration management is is coherent in production and then this this adds",
    "start": "197769",
    "end": "202900"
  },
  {
    "text": "thousands of lines of code for for maintenance for code review peer review",
    "start": "202900",
    "end": "208269"
  },
  {
    "text": "right there's there's a lot of work and an infrastructure here so here at AWS",
    "start": "208269",
    "end": "214090"
  },
  {
    "start": "212000",
    "end": "212000"
  },
  {
    "text": "you hear the term undifferentiated heavy lifting a lot so this kind of goes back",
    "start": "214090",
    "end": "219370"
  },
  {
    "text": "to those standardized processes that we are trying to automate for efficiency",
    "start": "219370",
    "end": "224650"
  },
  {
    "text": "right it's necessary work and repetitive but it can be automated originally with",
    "start": "224650",
    "end": "232569"
  },
  {
    "text": "with AWS this was the the pure infrastructure as a service right we we took care of the concrete to the",
    "start": "232569",
    "end": "239590"
  },
  {
    "text": "hypervisor as we've grown as a company as our customers have become more mature",
    "start": "239590",
    "end": "245620"
  },
  {
    "text": "and the ecosystem has grown we've we've now grown that on undifferentiated heavy",
    "start": "245620",
    "end": "250690"
  },
  {
    "text": "lifting up the stack if you will so it's no longer just data centers and compute",
    "start": "250690",
    "end": "255819"
  },
  {
    "text": "but we can actually talk about configuration management application deployment logging monitoring and",
    "start": "255819",
    "end": "261909"
  },
  {
    "text": "metrics right these these are all services that we offer that you as a customer with a can",
    "start": "261909",
    "end": "267550"
  },
  {
    "text": "figuration item or a small amount of automation can choose to leverage instead of carrying all of this",
    "start": "267550",
    "end": "273460"
  },
  {
    "text": "traditional configuration management into the cloud that you may have in your on-premises data centers today so one of",
    "start": "273460",
    "end": "281409"
  },
  {
    "start": "280000",
    "end": "280000"
  },
  {
    "text": "the big reasons cloud is a difference right with AWS and ec2 we have a feature called Auto scaling this allows you to",
    "start": "281409",
    "end": "288580"
  },
  {
    "text": "dynamically grow and contract a horizontal scaled cluster based on utilization metrics so the most popular",
    "start": "288580",
    "end": "296319"
  },
  {
    "text": "example for this is a three-tier web application that the web tier grows in",
    "start": "296319",
    "end": "301659"
  },
  {
    "text": "response to incoming web load rights this could be a peak advertising event",
    "start": "301659",
    "end": "307060"
  },
  {
    "text": "or a time period during the day and then at the end of that your fleet contracts",
    "start": "307060",
    "end": "313000"
  },
  {
    "text": "down to be more efficient to save you money so you're not over provisions for the the lower utilization that you're",
    "start": "313000",
    "end": "319750"
  },
  {
    "text": "experiencing at a different time and so the the reason this is really important and kind of a key concept as we go",
    "start": "319750",
    "end": "326440"
  },
  {
    "text": "through this talk the the bottom point they're patching and long-term maintenance is replaced by base images",
    "start": "326440",
    "end": "333789"
  },
  {
    "text": "so we have something called the Amazon machine image which is essentially a disk image if you're familiar with VM",
    "start": "333789",
    "end": "339909"
  },
  {
    "text": "DK's or other kind of virtualized disk images instead of your convergence of",
    "start": "339909",
    "end": "347080"
  },
  {
    "text": "your configuration management laying down dependencies so if you have a Python project or a ruby project you're",
    "start": "347080",
    "end": "354669"
  },
  {
    "text": "potentially installing Ruby Ruby gems pip packages those types of things kind",
    "start": "354669",
    "end": "360669"
  },
  {
    "text": "of the key point here is you should roll those up into a base image so that through the rest of this talk we're kind",
    "start": "360669",
    "end": "368289"
  },
  {
    "text": "of starting with that base artifact it's a golden image you can apply your",
    "start": "368289",
    "end": "373960"
  },
  {
    "text": "company and corporate governance policies to this your corporate InfoSec",
    "start": "373960",
    "end": "379419"
  },
  {
    "text": "IT security policies to this in addition to your development policies right so",
    "start": "379419",
    "end": "385449"
  },
  {
    "text": "ensuring that only certain dependency chains are installed and used and available for the developers as we move",
    "start": "385449",
    "end": "392110"
  },
  {
    "text": "forward in the workflow so taking this",
    "start": "392110",
    "end": "397750"
  },
  {
    "start": "396000",
    "end": "396000"
  },
  {
    "text": "base image and moving forward we have an operating system and we have a basic kind of language",
    "start": "397750",
    "end": "405260"
  },
  {
    "text": "environment if you will you know Python Ruby Java we can apply that through a number of other configuration management",
    "start": "405260",
    "end": "412580"
  },
  {
    "text": "and application deployment products inside of AWS so we've got CloudFormation code deploy ops works and",
    "start": "412580",
    "end": "419750"
  },
  {
    "text": "Beanstalk we're going to deep dive into each of these as we go through so looking at cloud formation it's one of",
    "start": "419750",
    "end": "426350"
  },
  {
    "text": "the base infrastructure layers right all of the other services kind of build on",
    "start": "426350",
    "end": "431450"
  },
  {
    "text": "top of it you can use other services in combination with it or you can use them",
    "start": "431450",
    "end": "437900"
  },
  {
    "text": "all separately depending on the actual problem set that you're attempting to solve and so confirmation is is base",
    "start": "437900",
    "end": "445760"
  },
  {
    "text": "infrastructure ops works is service orchestration code deploy is straight",
    "start": "445760",
    "end": "451970"
  },
  {
    "text": "application deployments and then Beanstalk is a relatively full managed application ecosystem if you don't need",
    "start": "451970",
    "end": "459170"
  },
  {
    "text": "the full control of the other products we can take a lot of that management overhead for you so just going into",
    "start": "459170",
    "end": "465860"
  },
  {
    "text": "cloud formation you can declare all of your components and a JSON templates you treat this as your your concrete right",
    "start": "465860",
    "end": "472760"
  },
  {
    "text": "once it sets you don't want it to to change really and so you can lay down your network topology your subnets your",
    "start": "472760",
    "end": "479990"
  },
  {
    "text": "security groups Auto scale groups Identity and Access Management users load balancers right all of the core",
    "start": "479990",
    "end": "487220"
  },
  {
    "text": "architectural components you keep this in a single file under version control",
    "start": "487220",
    "end": "492670"
  },
  {
    "text": "you edit the file and then feed it to cloud formation right there are no",
    "start": "492670",
    "end": "497720"
  },
  {
    "text": "changes outside of the ecosystem what this does it allows confirmation when",
    "start": "497720",
    "end": "502940"
  },
  {
    "text": "you go and submit changes it will actually tell you the intended Delta that's about to be deployed all right so",
    "start": "502940",
    "end": "509210"
  },
  {
    "text": "if you change a security group or change a subnet when you go and relaunch that template you'll actually get an idea of",
    "start": "509210",
    "end": "516200"
  },
  {
    "text": "what's going to change but before it actually occurs and so this again allows you to keep all of your infrastructure",
    "start": "516200",
    "end": "522169"
  },
  {
    "text": "in version control this is just an example of a cloud formation templates you can package your entire",
    "start": "522170",
    "end": "528860"
  },
  {
    "text": "infrastructure in a single file so the idea for this is to reduce Dell",
    "start": "528860",
    "end": "534220"
  },
  {
    "text": "right the traditional works on my machine problem right this this kind of",
    "start": "534220",
    "end": "540670"
  },
  {
    "text": "takes that away and in the this works in my account problem if you will and so what it does",
    "start": "540670",
    "end": "546700"
  },
  {
    "text": "it allows a repeatable resource to be deployed across organizations across different companies different divisions",
    "start": "546700",
    "end": "553180"
  },
  {
    "text": "and allow everyone to have a common infrastructure set that they can build upon you can replicate this across",
    "start": "553180",
    "end": "560230"
  },
  {
    "text": "multiple regions multiple accounts and multiple environments and we'll have some details on kind of how you can do",
    "start": "560230",
    "end": "567160"
  },
  {
    "text": "different dimensions with these so some of the the helper applications for",
    "start": "567160",
    "end": "572170"
  },
  {
    "start": "568000",
    "end": "568000"
  },
  {
    "text": "CloudFormation CFN hub essentially detects changes to the the",
    "start": "572170",
    "end": "577840"
  },
  {
    "text": "CloudFormation template level and will then re trigger processes on the individual ec2 instance one of those",
    "start": "577840",
    "end": "585400"
  },
  {
    "text": "processes is CFN and Nitz it's one of the the configuration management tools",
    "start": "585400",
    "end": "591340"
  },
  {
    "text": "that's part of Confirmation allows you to pre install packages pre install or",
    "start": "591340",
    "end": "597750"
  },
  {
    "text": "start and stop services really gives you kind of that middle line of I have",
    "start": "597750",
    "end": "605530"
  },
  {
    "text": "things pre installed at a language and dependency level maybe your CF in and it",
    "start": "605530",
    "end": "611260"
  },
  {
    "text": "comes in and and pulls down kind of the role of the Machine right what application am I supposed to be running",
    "start": "611260",
    "end": "618130"
  },
  {
    "text": "so that I can then start to deploy that application this is just a sample of a",
    "start": "618130",
    "end": "623620"
  },
  {
    "start": "621000",
    "end": "621000"
  },
  {
    "text": "confirmation an it section again kind of building on this base image philosophy",
    "start": "623620",
    "end": "629080"
  },
  {
    "text": "and kind of combining that with the item potency philosophy of configuration",
    "start": "629080",
    "end": "634090"
  },
  {
    "text": "management right if we run something once and it doesn't need to be run again we won't perform that action a second",
    "start": "634090",
    "end": "639880"
  },
  {
    "text": "time and so what this is is essentially doing a chef run of only the application",
    "start": "639880",
    "end": "646570"
  },
  {
    "text": "cookbook right because in theory this base image already has all of the dependencies required for the",
    "start": "646570",
    "end": "653110"
  },
  {
    "text": "application we're not going and installing Apache we're not installing the database you know all of those would",
    "start": "653110",
    "end": "659050"
  },
  {
    "text": "have been kind of there and and ready for you and again one of the big reasons for this going back to the auto scaling",
    "start": "659050",
    "end": "665950"
  },
  {
    "text": "is if you have a to your web architecture and you're experiencing some volatility in your",
    "start": "665950",
    "end": "672160"
  },
  {
    "text": "utilization you don't want a machine to spin up take 20 minutes to converge your",
    "start": "672160",
    "end": "677590"
  },
  {
    "text": "application install and not actually be able to respond to user traffic so the",
    "start": "677590",
    "end": "682600"
  },
  {
    "text": "theory here is we're cutting that time to market if you will for the application so that we can Auto scale",
    "start": "682600",
    "end": "689950"
  },
  {
    "text": "you know rather dynamically and have some agility within you know a 5 5 minute period or less than that to be",
    "start": "689950",
    "end": "696400"
  },
  {
    "text": "able to respond to increased load so we talked a little bit about cloud formation which is really infrastructure",
    "start": "696400",
    "end": "703330"
  },
  {
    "start": "699000",
    "end": "699000"
  },
  {
    "text": "focused it can run commands on on the machines to do application deployments",
    "start": "703330",
    "end": "709180"
  },
  {
    "text": "but it's not going to support a lot of the advanced features that that code deploy does so code deploy is gonna be",
    "start": "709180",
    "end": "715780"
  },
  {
    "text": "an agent based service it'll work on Windows or Linux you can use it to deploy your application to any machine",
    "start": "715780",
    "end": "722230"
  },
  {
    "text": "that the agent is running on this could even be on on premises and it takes",
    "start": "722230",
    "end": "728920"
  },
  {
    "text": "similar philosophies from other application deployment frameworks right there lifecycle events so before the",
    "start": "728920",
    "end": "736390"
  },
  {
    "text": "application starts you can perform some pre configuration or some sanity",
    "start": "736390",
    "end": "742000"
  },
  {
    "text": "checking before the application install you can do things like verify that the",
    "start": "742000",
    "end": "747310"
  },
  {
    "text": "dependencies you think are part of that base ami are actually there right kind",
    "start": "747310",
    "end": "753130"
  },
  {
    "text": "of that that trust but verify philosophy and then the the validate service I",
    "start": "753130",
    "end": "758770"
  },
  {
    "text": "think is very important right this is the way to build in sanity checking to",
    "start": "758770",
    "end": "764650"
  },
  {
    "text": "your application health right did the application boot up fully is it behaving",
    "start": "764650",
    "end": "771010"
  },
  {
    "text": "as as we intend it to is it responding and ready for customer traffic gives gives you a lot of flexibility to",
    "start": "771010",
    "end": "777580"
  },
  {
    "text": "influence the the application deployment workflow there so just kind of deep",
    "start": "777580",
    "end": "786100"
  },
  {
    "text": "diving a little bit into a few of these deployment philosophies all right we can do rolling deployments so you can say I",
    "start": "786100",
    "end": "793000"
  },
  {
    "text": "would like to verify that this code works on 10% of my fleet before I roll",
    "start": "793000",
    "end": "798670"
  },
  {
    "text": "it across the other 90% you can do semantic versioning",
    "start": "798670",
    "end": "803730"
  },
  {
    "text": "deployments and rollbacks right so if you're going from one to zero to one",
    "start": "803730",
    "end": "809190"
  },
  {
    "text": "three zero you have full support let's say if it fails that validates service",
    "start": "809190",
    "end": "814560"
  },
  {
    "text": "check to rollback to one point 2.0 so it gives you a lot of flexibility on",
    "start": "814560",
    "end": "819990"
  },
  {
    "text": "actually managing the application lifecycle of deployments and rollbacks",
    "start": "819990",
    "end": "825029"
  },
  {
    "text": "and then also what this allows you to do is d couple your application from your",
    "start": "825029",
    "end": "831630"
  },
  {
    "text": "infrastructure so that your application development teams work only with the application layer or the application",
    "start": "831630",
    "end": "838500"
  },
  {
    "text": "code and they're not concerned about security groups subnetting layouts",
    "start": "838500",
    "end": "843630"
  },
  {
    "text": "Network ACLs routing rules you know all of the base infrastructure that's they",
    "start": "843630",
    "end": "849570"
  },
  {
    "text": "care about because their application needs to function but we can start start extrapolating these so that we can start",
    "start": "849570",
    "end": "856500"
  },
  {
    "text": "building least privileged and separation of duty type scenarios here so going",
    "start": "856500",
    "end": "863250"
  },
  {
    "start": "862000",
    "end": "862000"
  },
  {
    "text": "into Beanstalk beanstalks a little bit more aimed directly at developers it's a",
    "start": "863250",
    "end": "870209"
  },
  {
    "text": "fully managed ecosystem you can choose a language and feed it a zip file and it",
    "start": "870209",
    "end": "877110"
  },
  {
    "text": "will execute for you with a smaller amount of configuration you can deploy a",
    "start": "877110",
    "end": "882810"
  },
  {
    "text": "load balancer an auto scale group a multi AZ RDS instance and we handle all",
    "start": "882810",
    "end": "890520"
  },
  {
    "text": "of the management of those resources for you you define some some cloud watch metrics on how it's going to behave when",
    "start": "890520",
    "end": "898200"
  },
  {
    "text": "it scales up and down but we manage the deployments of the application to that",
    "start": "898200",
    "end": "904380"
  },
  {
    "text": "infrastructure ensure that the load balancer health checks are functioning",
    "start": "904380",
    "end": "909420"
  },
  {
    "text": "against the application right a lot of pre configuration but but really developer focused fast and simple you",
    "start": "909420",
    "end": "918029"
  },
  {
    "text": "know again aimed at productivity pretty much impossible to outgrow it's based on",
    "start": "918029",
    "end": "923550"
  },
  {
    "text": "auto scaling and load balancing and complete resource control so you can",
    "start": "923550",
    "end": "929250"
  },
  {
    "text": "choose to use one of our pre-baked a.m. eyes that has a language environment",
    "start": "929250",
    "end": "934860"
  },
  {
    "text": "already on it or you can bring your own am i that you've already put an application language environment on plus",
    "start": "934860",
    "end": "942510"
  },
  {
    "text": "all your governance and an IT policy right so just kind of looking at",
    "start": "942510",
    "end": "949410"
  },
  {
    "text": "Bienstock here in a general architecture view so as I said earlier we take care",
    "start": "949410",
    "end": "954930"
  },
  {
    "text": "of the capacity provisioning the load balancing the auto scaling health the",
    "start": "954930",
    "end": "960450"
  },
  {
    "text": "health checks cod watch metrics with a small amount of configuration you can",
    "start": "960450",
    "end": "965550"
  },
  {
    "text": "add log shipping to this all of these ec2 instances could log either the the",
    "start": "965550",
    "end": "971730"
  },
  {
    "text": "web logs the application logs all Alta cloud watch logs so it gives you the",
    "start": "971730",
    "end": "977130"
  },
  {
    "text": "ability to really tie in the entire ecosystem around your application",
    "start": "977130",
    "end": "983310"
  },
  {
    "text": "artifact instead of trying to develop a lot of this on your own it's essentially",
    "start": "983310",
    "end": "988860"
  },
  {
    "text": "best practices codified and into an architecture support a lot of the the major languages and frameworks so PHP",
    "start": "988860",
    "end": "996480"
  },
  {
    "text": "Python Java Ruby nodes go and then it",
    "start": "996480",
    "end": "1001820"
  },
  {
    "text": "also will run docker containers so if you've gotten kind of the container level of removing Delta's in between",
    "start": "1001820",
    "end": "1008540"
  },
  {
    "text": "development local environments and production environments it will support the docker workflow to get those",
    "start": "1008540",
    "end": "1015230"
  },
  {
    "text": "containers from the developers to production talk a little bit about Ops",
    "start": "1015230",
    "end": "1022160"
  },
  {
    "start": "1019000",
    "end": "1019000"
  },
  {
    "text": "works here so ops works is a configuration management service",
    "start": "1022160",
    "end": "1027980"
  },
  {
    "text": "orchestration tool it's currently based on chef allows you to do a lot of things",
    "start": "1027980",
    "end": "1033709"
  },
  {
    "text": "maybe you're currently doing on-premise asur with a third party but all within",
    "start": "1033710",
    "end": "1039110"
  },
  {
    "text": "the AWS ecosystem right you never have to reach out to the Internet in order to",
    "start": "1039110",
    "end": "1044300"
  },
  {
    "text": "leverage these orchestration services all of the Identity and Access Management certificate management you",
    "start": "1044300",
    "end": "1052400"
  },
  {
    "text": "know all of the internal security and secret sharing can be managed through ops works things like identity and",
    "start": "1052400",
    "end": "1059300"
  },
  {
    "text": "access management roles instance profiles really allows you to tie everything together in a cohesive unit",
    "start": "1059300",
    "end": "1068270"
  },
  {
    "text": "allows you to do things like building self-healing architectures so again with",
    "start": "1068270",
    "end": "1073430"
  },
  {
    "text": "Auto scale groups and health checks if one of these machines fails a health check either due to a failed application",
    "start": "1073430",
    "end": "1081800"
  },
  {
    "text": "deployment potentially an OS defect or an underlying hardware failure we can",
    "start": "1081800",
    "end": "1088880"
  },
  {
    "text": "replace that automatically and as long as your your application supports some of these deployment workflows when that",
    "start": "1088880",
    "end": "1095240"
  },
  {
    "text": "machine comes up in a small amount of time it's healthy again right so when",
    "start": "1095240",
    "end": "1101000"
  },
  {
    "text": "you treat these as groups of resources one of them can become unhealthy and you",
    "start": "1101000",
    "end": "1107180"
  },
  {
    "text": "think kind of herd immunity and some of these other things right we can remove that that one unhealthy host and",
    "start": "1107180",
    "end": "1112340"
  },
  {
    "text": "replaced it with a healthy one and overall the cluster still remained",
    "start": "1112340",
    "end": "1117350"
  },
  {
    "text": "healthy the entire time you can use this to kind of lovingly craft each",
    "start": "1117350",
    "end": "1124310"
  },
  {
    "text": "individual instance if you want or you can treat them all the same right so",
    "start": "1124310",
    "end": "1129830"
  },
  {
    "text": "different levels of scale is as far as how you could implement this and then it also supports lifecycle events just like",
    "start": "1129830",
    "end": "1136790"
  },
  {
    "text": "code deploy so you can respond to changes in your infrastructure or to",
    "start": "1136790",
    "end": "1142040"
  },
  {
    "text": "events that occur within your application and actually trigger changes",
    "start": "1142040",
    "end": "1147530"
  },
  {
    "text": "inside of your infrastructure so just kind of looking at this diagram very",
    "start": "1147530",
    "end": "1153290"
  },
  {
    "text": "quickly you can kind of see we've we've got three tiers here we've got two different application servers and a",
    "start": "1153290",
    "end": "1160100"
  },
  {
    "text": "database server each each one is a is a layer in in the opsworks stack and so",
    "start": "1160100",
    "end": "1166730"
  },
  {
    "text": "we've got a little bit of color coding down at the bottom to kind of denote the the legend of actions but you can see we",
    "start": "1166730",
    "end": "1173870"
  },
  {
    "text": "start with a single app server with a setup lifecycle events that then",
    "start": "1173870",
    "end": "1180380"
  },
  {
    "text": "triggers a configure of that first a player the the next life cycle event is",
    "start": "1180380",
    "end": "1188360"
  },
  {
    "text": "a deploy right so that's a deploy of the the first a player the the third one is",
    "start": "1188360",
    "end": "1194690"
  },
  {
    "text": "a another set up but this is going to be at the database layer that allows you to trigger events across multiple",
    "start": "1194690",
    "end": "1201840"
  },
  {
    "text": "other layers right so the one setup of a database not only triggered the",
    "start": "1201840",
    "end": "1208140"
  },
  {
    "text": "configuration of the database but it also triggered the configuration of the application server so that once the",
    "start": "1208140",
    "end": "1214980"
  },
  {
    "text": "database comes up and you know the DNS endpoint or the private IP address maybe",
    "start": "1214980",
    "end": "1221010"
  },
  {
    "text": "the user credentials associated with that you can then use service orchestration to trigger the application",
    "start": "1221010",
    "end": "1228150"
  },
  {
    "text": "configuration so that it can configure itself to talk to that database right",
    "start": "1228150",
    "end": "1233659"
  },
  {
    "text": "the fourth one here is is deploy application again and this is to",
    "start": "1233659",
    "end": "1240510"
  },
  {
    "text": "potentially reconfigure anything that that needs to change if the application",
    "start": "1240510",
    "end": "1246120"
  },
  {
    "text": "needs to start talking to the database to maybe instantiate a base schema or",
    "start": "1246120",
    "end": "1251460"
  },
  {
    "text": "something like that but but again across multiple layers to the sixth one here",
    "start": "1251460",
    "end": "1258120"
  },
  {
    "text": "we've we've got start the second app server which again triggers multiple",
    "start": "1258120",
    "end": "1263640"
  },
  {
    "text": "configurations at this point I don't know if there would be much that would that would change on the the database",
    "start": "1263640",
    "end": "1268950"
  },
  {
    "text": "machine but it would trigger both application configurations to ensure that they could both talk to the",
    "start": "1268950",
    "end": "1274919"
  },
  {
    "text": "database at that time at that point we can do things like maybe change user",
    "start": "1274919",
    "end": "1280740"
  },
  {
    "text": "permissions maybe do a rollback of the application you know some sort of life",
    "start": "1280740",
    "end": "1287730"
  },
  {
    "text": "cycle events and at that points again we can trigger additional actions and so",
    "start": "1287730",
    "end": "1294690"
  },
  {
    "text": "after the the change user permissions we go and stop the application server and at that point it triggers ok well let's",
    "start": "1294690",
    "end": "1303539"
  },
  {
    "text": "let's stop the database and let's stop the secondary application there were two been a dependency between the two all",
    "start": "1303539",
    "end": "1310799"
  },
  {
    "text": "right but it allows you to build logic around larger building components than",
    "start": "1310799",
    "end": "1316080"
  },
  {
    "text": "you previously did when when working with service orchestration so I've",
    "start": "1316080",
    "end": "1323370"
  },
  {
    "start": "1321000",
    "end": "1321000"
  },
  {
    "text": "talked a lot about kind of POSIX open source Linux projects really want to",
    "start": "1323370",
    "end": "1330299"
  },
  {
    "text": "talk a little bit about Windows so we do have the simple systems management service that we offer and it's it's a",
    "start": "1330299",
    "end": "1338570"
  },
  {
    "text": "middle ground it's kind of between CFN and nets and you know SCCM or something",
    "start": "1338570",
    "end": "1346080"
  },
  {
    "text": "like that on the enterprise level and so if you are a window shop and have a lot",
    "start": "1346080",
    "end": "1351120"
  },
  {
    "text": "of windows competency this this can be a good part of your workflow so what this does is allows you to do msi allows you",
    "start": "1351120",
    "end": "1360210"
  },
  {
    "text": "to do powershell modules not just execute a powershell command right you",
    "start": "1360210",
    "end": "1365850"
  },
  {
    "text": "can actually deploy part of your governance and management workflow into",
    "start": "1365850",
    "end": "1370860"
  },
  {
    "text": "this if you are based on power show it allows you to automatically configure Cod watch metrics and logs because it is",
    "start": "1370860",
    "end": "1379050"
  },
  {
    "text": "a a Windows service that runs it can tie in to Event Viewer a lot of the other",
    "start": "1379050",
    "end": "1385590"
  },
  {
    "text": "kind of you know windows native services so that you get inherent log shipping",
    "start": "1385590",
    "end": "1391560"
  },
  {
    "text": "right you can you can send these to to cloud watch logs you can define custom",
    "start": "1391560",
    "end": "1396840"
  },
  {
    "text": "cloud watch metrics that are specific to your application so by default the auto",
    "start": "1396840",
    "end": "1402180"
  },
  {
    "text": "scale metrics are CPU utilization disk IO and and network throughputs",
    "start": "1402180",
    "end": "1407750"
  },
  {
    "text": "what if you really would like to scale on the number of concurrent users or",
    "start": "1407750",
    "end": "1413160"
  },
  {
    "text": "maybe the API latency of a particular endpoint right as the latency increases",
    "start": "1413160",
    "end": "1418440"
  },
  {
    "text": "we would like to add more servers to reduce that latency these are all custom",
    "start": "1418440",
    "end": "1424440"
  },
  {
    "text": "cloud watch metrics that you could do a configuration file and the simple systems management service actually tie",
    "start": "1424440",
    "end": "1431640"
  },
  {
    "text": "all of those services together just really want to point out that this is meant to be complementary right this is",
    "start": "1431640",
    "end": "1438870"
  },
  {
    "text": "just a kind of bootstrapping utility here to do really basic configuration",
    "start": "1438870",
    "end": "1445470"
  },
  {
    "text": "and then kick off a greater application workflow maybe the the code deploy agent",
    "start": "1445470",
    "end": "1451530"
  },
  {
    "text": "or something like that right but some customers may not be able to 100%",
    "start": "1451530",
    "end": "1457110"
  },
  {
    "text": "pre-baked all of their things into the AMI and so this is kind of a nice middle",
    "start": "1457110",
    "end": "1462810"
  },
  {
    "text": "ground where you can continue to use the the management workflow that you currently have but you know",
    "start": "1462810",
    "end": "1469380"
  },
  {
    "text": "actually cloud native want to spend a little bit of time talking about",
    "start": "1469380",
    "end": "1475020"
  },
  {
    "start": "1471000",
    "end": "1471000"
  },
  {
    "text": "infrastructure is code it's definitely been woven throughout this right when I",
    "start": "1475020",
    "end": "1480150"
  },
  {
    "text": "talk about version control artifacts that that are related to your infrastructure such as the the cloud",
    "start": "1480150",
    "end": "1486450"
  },
  {
    "text": "formation templates these are things that you can semantically version internally to your organization you can",
    "start": "1486450",
    "end": "1494370"
  },
  {
    "text": "keep it in your version control repository you can do things like add pre-commit hooks to this so like the the",
    "start": "1494370",
    "end": "1501960"
  },
  {
    "text": "CloudFormation templates you you don't want to miss a comma or a bracket and",
    "start": "1501960",
    "end": "1507090"
  },
  {
    "text": "have some malformed JSON and attempt to deploy that to production only to",
    "start": "1507090",
    "end": "1512490"
  },
  {
    "text": "receive a confirmation error or something right so you can put different pieces of workflow in here maybe your",
    "start": "1512490",
    "end": "1519630"
  },
  {
    "text": "your peer review process right all of these can be applied to your infrastructure not just your",
    "start": "1519630",
    "end": "1526740"
  },
  {
    "text": "applications we're a hundred percent API based right so pretty much anything you do in the",
    "start": "1526740",
    "end": "1532980"
  },
  {
    "text": "console or through anything is is code and it's talking to us with code this",
    "start": "1532980",
    "end": "1540150"
  },
  {
    "text": "allows your operational resources to to start scaling right and instead of",
    "start": "1540150",
    "end": "1546180"
  },
  {
    "text": "through the console setting up of EPC go ahead and define it in a cloud formation",
    "start": "1546180",
    "end": "1552510"
  },
  {
    "text": "templates go ahead and type it out using the AWS CLI right automate it somehow",
    "start": "1552510",
    "end": "1559890"
  },
  {
    "text": "put it into a script so that it's reusable and it's it's reviewable and",
    "start": "1559890",
    "end": "1566910"
  },
  {
    "text": "it's version controllable want to talk a",
    "start": "1566910",
    "end": "1572070"
  },
  {
    "start": "1570000",
    "end": "1570000"
  },
  {
    "text": "little bit about DevOps and security so traditional security methods are kind of",
    "start": "1572070",
    "end": "1579090"
  },
  {
    "text": "hard to scale right there's a change management process to get a firewall",
    "start": "1579090",
    "end": "1584460"
  },
  {
    "text": "rule opened for an IP whitelist or an application actually grows in scope and",
    "start": "1584460",
    "end": "1592760"
  },
  {
    "text": "you need an extra layer in your network topology right instead of dmz load",
    "start": "1592760",
    "end": "1600090"
  },
  {
    "text": "balancer web app database you know maybe you need an additional",
    "start": "1600090",
    "end": "1605659"
  },
  {
    "text": "AWS managed services subnet grouping or something like that and traditionally",
    "start": "1605659",
    "end": "1611820"
  },
  {
    "text": "you know getting a new VLAN added or other on-premises kind of physical concepts you know they take a lot of",
    "start": "1611820",
    "end": "1618860"
  },
  {
    "text": "review and change management and time to go through that process so what we're",
    "start": "1618860",
    "end": "1624929"
  },
  {
    "text": "kind of purporting here is that you should leverage these version controlled artifacts so that once they're reviewed",
    "start": "1624929",
    "end": "1632549"
  },
  {
    "text": "once you only need to review them if there's ever a change that occurs right",
    "start": "1632549",
    "end": "1639770"
  },
  {
    "text": "these are not only reusable kind of from a human scale but also a governance",
    "start": "1639770",
    "end": "1646890"
  },
  {
    "text": "scale if you have a networking team or a security team that is currently in charge of approving firewall changes or",
    "start": "1646890",
    "end": "1654799"
  },
  {
    "text": "approving Network topologies these are things that they could do in a confirmation templates and share that",
    "start": "1654799",
    "end": "1662850"
  },
  {
    "text": "with other organizations inside of your company right so that you're using the the golden network topology that has",
    "start": "1662850",
    "end": "1671190"
  },
  {
    "text": "been approved by InfoSec and is known good for your application state it",
    "start": "1671190",
    "end": "1677429"
  },
  {
    "text": "allows you to start codifying and enforcing requirements so if anyone's",
    "start": "1677429",
    "end": "1682500"
  },
  {
    "text": "familiar with AWS config rules and lambda gives you near real-time",
    "start": "1682500",
    "end": "1687919"
  },
  {
    "text": "governance continuous monitoring continuous remediation options for your",
    "start": "1687919",
    "end": "1693900"
  },
  {
    "text": "infrastructure and so if you know your security groups are under version control and you detect a Delta inside of",
    "start": "1693900",
    "end": "1702390"
  },
  {
    "text": "your ecosystem write a security group rule was changed let's fire a lambda function let's go and look at what my",
    "start": "1702390",
    "end": "1708450"
  },
  {
    "text": "definition of the security group should be if there's there's any Delta there you know sinned alarms to the system",
    "start": "1708450",
    "end": "1714780"
  },
  {
    "text": "administrators may be actually remediate the security group rule by undoing the",
    "start": "1714780",
    "end": "1719850"
  },
  {
    "text": "previous change a lot of power here I also wanted to mention inspector so it's",
    "start": "1719850",
    "end": "1726090"
  },
  {
    "text": "an agent-based service that does a lot of best practice checking at the operating system level so we currently",
    "start": "1726090",
    "end": "1733140"
  },
  {
    "text": "offer PCI and a set of common goal durability scans and so it'll do things",
    "start": "1733140",
    "end": "1739590"
  },
  {
    "text": "like look at operating system config windows registry some basic things to",
    "start": "1739590",
    "end": "1745320"
  },
  {
    "text": "really start helping you down the compliance in auditing Road want to want",
    "start": "1745320",
    "end": "1752039"
  },
  {
    "start": "1750000",
    "end": "1750000"
  },
  {
    "text": "to look towards a a toolbox approach right all of these tools here are very",
    "start": "1752039",
    "end": "1757499"
  },
  {
    "text": "useful for four different circumstances I joke cloud formations the hammer right",
    "start": "1757499",
    "end": "1763710"
  },
  {
    "text": "it's the first thing I I pull out and if I can't fix it with the hammer then I'll go for the screwdriver we want to point",
    "start": "1763710",
    "end": "1770940"
  },
  {
    "text": "out that that we're working on code everything I I pointed out here involves",
    "start": "1770940",
    "end": "1775999"
  },
  {
    "text": "committing to a version controlled repository and then deploying that",
    "start": "1775999",
    "end": "1781409"
  },
  {
    "text": "artifacts we never went to the console and clicked or typed or you know",
    "start": "1781409",
    "end": "1787320"
  },
  {
    "text": "performed manual actions the these are really codified into an artifact and",
    "start": "1787320",
    "end": "1792419"
  },
  {
    "text": "then that artifact was applied right you never logged into a server all of these",
    "start": "1792419",
    "end": "1798480"
  },
  {
    "text": "were external actions and then again continuing to just leverage lighter",
    "start": "1798480",
    "end": "1803940"
  },
  {
    "text": "weight better managed services as you move up the stack instead of spending",
    "start": "1803940",
    "end": "1809369"
  },
  {
    "text": "all your time focusing on application deployment methodologies right just kind of build on top of ours so just really",
    "start": "1809369",
    "end": "1817139"
  },
  {
    "text": "quickly wanted to go over some some ways to scale this so front-ends backend",
    "start": "1817139",
    "end": "1822960"
  },
  {
    "text": "Identity and Access Management we can go dev staging production all with the same",
    "start": "1822960",
    "end": "1828690"
  },
  {
    "text": "template we can do service-oriented architecture so if you don't want to do",
    "start": "1828690",
    "end": "1833789"
  },
  {
    "start": "1829000",
    "end": "1829000"
  },
  {
    "text": "Network layers and topologies we can break these up into individual units and connect them all together and then I've",
    "start": "1833789",
    "end": "1841830"
  },
  {
    "start": "1840000",
    "end": "1840000"
  },
  {
    "text": "talked a lot about single templates you can also nest templates so in this example over on the right we have a",
    "start": "1841830",
    "end": "1848789"
  },
  {
    "text": "networking stack in a dynamo DB database stack and then on the Left we have load balancing in auto scaling you can",
    "start": "1848789",
    "end": "1856320"
  },
  {
    "text": "combine these together so that the networking team is responsible for the networking security the the",
    "start": "1856320",
    "end": "1862139"
  },
  {
    "text": "infrastructure team is responsible for the infrastructure integrity and then when you combine them together the",
    "start": "1862139",
    "end": "1867990"
  },
  {
    "text": "application team now has a full environment an artifact that they can move forward with so again just some",
    "start": "1867990",
    "end": "1874780"
  },
  {
    "text": "next steps lambda please go go look at lambda event-driven computing is is the",
    "start": "1874780",
    "end": "1881410"
  },
  {
    "text": "future uh-huh and laugh so we have the Web Application Firewall that allows you",
    "start": "1881410",
    "end": "1886450"
  },
  {
    "text": "to place custom layer seven rules in front of your application so that you can start automating and scaling out",
    "start": "1886450",
    "end": "1893020"
  },
  {
    "text": "your border perimeter security before things ever even get into your ecosystem",
    "start": "1893020",
    "end": "1898110"
  },
  {
    "text": "so I'm gonna turn things turn things over to Josh with with viewed here and he's gonna take it one step further and",
    "start": "1898110",
    "end": "1905350"
  },
  {
    "text": "go from kind of base image plus some some application deployments to what",
    "start": "1905350",
    "end": "1911740"
  },
  {
    "text": "we'd like to call a mutable infrastructure thank you very much hi",
    "start": "1911740",
    "end": "1923170"
  },
  {
    "text": "everyone can you hear me good I'm Josh Stella I'm the CEO and co-founder of",
    "start": "1923170",
    "end": "1928420"
  },
  {
    "text": "fugue and I'm an ex AWS ER as are many of us at fugue so it's nice to be",
    "start": "1928420",
    "end": "1934060"
  },
  {
    "text": "invited to this event and thanks much to AWS for doing so I'm gonna talk a lot",
    "start": "1934060",
    "end": "1940900"
  },
  {
    "text": "about immutable infrastructure today and before I get into that there's a lot of ways I can describe this so be helpful",
    "start": "1940900",
    "end": "1947230"
  },
  {
    "text": "to me if you have been or our developer now could you raise your hand oh good",
    "start": "1947230",
    "end": "1954810"
  },
  {
    "text": "excellent so immutable infrastructure is about automating for predictability",
    "start": "1954810",
    "end": "1960270"
  },
  {
    "text": "reliability and scalability I'll tell you a little bit about us as a company mostly I'm going to talk about the",
    "start": "1960270",
    "end": "1966400"
  },
  {
    "text": "subject writ large so if you guys found it a couple few years ago where a venture-backed startup based here in the",
    "start": "1966400",
    "end": "1971830"
  },
  {
    "text": "DC area we're all sat in Silicon Valley we have developers all over the world there are about 50 of us if you met us",
    "start": "1971830",
    "end": "1979150"
  },
  {
    "text": "on the the booth on the show floor at this session you probably know more but you'll you'll see more about us as as we",
    "start": "1979150",
    "end": "1986350"
  },
  {
    "text": "go forward I founded the company because I saw there was a need to take a systems",
    "start": "1986350",
    "end": "1991930"
  },
  {
    "text": "approach to a lot of this complexity and so as we were working on this",
    "start": "1991930",
    "end": "1997270"
  },
  {
    "text": "Oh Riley reached out to us and we authored a short book on an immutable infrastructure a Riley report",
    "start": "1997270",
    "end": "2003930"
  },
  {
    "text": "which is available to you for free here today so next slide please",
    "start": "2003930",
    "end": "2010220"
  },
  {
    "text": "actually I think we decided the clicker actually works all right this is a quote from Chad Fowler Chad Fowler is the guy",
    "start": "2010220",
    "end": "2016530"
  },
  {
    "text": "who coined the term immutable infrastructure in 2014 so I'll go ahead and read it the longer a system lives",
    "start": "2016530",
    "end": "2022950"
  },
  {
    "text": "the more afraid of it I'd become an old system inevitably grows warts they start",
    "start": "2022950",
    "end": "2028980"
  },
  {
    "text": "as one-time hacks during outages right we have all done this we'll put it back",
    "start": "2028980",
    "end": "2034110"
  },
  {
    "text": "into chef's later the system becomes a house of cards you fear any change and you fear replacing it since you don't",
    "start": "2034110",
    "end": "2040920"
  },
  {
    "text": "know everything you don't know everything about how it works that last sentence is really important so think",
    "start": "2040920",
    "end": "2048240"
  },
  {
    "text": "about the systems you have now do you know everything about how any of them work and the answer is almost certainly",
    "start": "2048240",
    "end": "2054419"
  },
  {
    "text": "no if you're honest so what is the immutable infrastructure many of you",
    "start": "2054419",
    "end": "2060450"
  },
  {
    "start": "2057000",
    "end": "2057000"
  },
  {
    "text": "have been programmers right so immutable I think is a little bit of an unfortunate term for this because it's",
    "start": "2060450",
    "end": "2066360"
  },
  {
    "text": "not perfectly accurate but it gets the right message across so immutable data in programming is when",
    "start": "2066360",
    "end": "2073470"
  },
  {
    "text": "you cannot mutate the value of data right you cannot change it you must replace it so where did this come from",
    "start": "2073470",
    "end": "2080100"
  },
  {
    "text": "that sounds like a pain it is a little bit of a pain where did it come from it came from building highly stable",
    "start": "2080100",
    "end": "2085919"
  },
  {
    "text": "reliable systems that are fully automated so perhaps the most famous language that is fully immutable is",
    "start": "2085919",
    "end": "2092070"
  },
  {
    "text": "Erlang which runs telco networks because those can't go down so as you're",
    "start": "2092070",
    "end": "2097320"
  },
  {
    "text": "building your cloud infrastructure these immutable patterns have the same goal full automation high levels of",
    "start": "2097320",
    "end": "2104580"
  },
  {
    "text": "reliability so what does it mean in practice so theoretically it's related to this idea in in programming but in",
    "start": "2104580",
    "end": "2113460"
  },
  {
    "text": "practice what it means is once you instantiate something like an ec2 instance you never touch it again right",
    "start": "2113460",
    "end": "2119910"
  },
  {
    "text": "you destroy it and replace it with another one there's other stuff though",
    "start": "2119910",
    "end": "2126420"
  },
  {
    "text": "that you're not going to do that with kind of mental model in AWS like a virtual private cloud you probably don't",
    "start": "2126420",
    "end": "2132420"
  },
  {
    "text": "want to tear down your whole network build a new one move all your stuff so in that case in",
    "start": "2132420",
    "end": "2137760"
  },
  {
    "text": "you know kind of means it never gets changed except what's been checked into",
    "start": "2137760",
    "end": "2142830"
  },
  {
    "text": "your source code repository it is 100% code driven so we like to think of building stuff and operating",
    "start": "2142830",
    "end": "2150060"
  },
  {
    "text": "stuff on cloud not as a remote data center or infrastructure but as a program as a process just like you would",
    "start": "2150060",
    "end": "2157380"
  },
  {
    "text": "in memory on your local machine alright so why do this what are some of the",
    "start": "2157380",
    "end": "2164100"
  },
  {
    "start": "2161000",
    "end": "2161000"
  },
  {
    "text": "disadvantages for mutable how did we get there and what is immutable do for you so first of all I want to point out that",
    "start": "2164100",
    "end": "2170940"
  },
  {
    "text": "we're all used to mutable infrastructure we all do this because that's all you can do in a data center you must do this",
    "start": "2170940",
    "end": "2177750"
  },
  {
    "text": "in a data center because in a data center you have a finite resource that you recap every few years you want to",
    "start": "2177750",
    "end": "2183390"
  },
  {
    "text": "make sure everything's operating well you're going to get the most out of that server you can over its life cycle",
    "start": "2183390",
    "end": "2188550"
  },
  {
    "text": "that's why we've gone down this road rather than the demonstrably superior",
    "start": "2188550",
    "end": "2194250"
  },
  {
    "text": "road in the long run with cloud of immutable so complexity increases with",
    "start": "2194250",
    "end": "2199440"
  },
  {
    "text": "scale if you're successful on cloud you will have complexity at a level that you have never seen in a data center so I'll",
    "start": "2199440",
    "end": "2206880"
  },
  {
    "text": "describe success as the kind of high bar of success if you talk to the Netflix guys and I know some of them were here",
    "start": "2206880",
    "end": "2213300"
  },
  {
    "text": "you're talking about tens of thousands of compute instances at any one time that have average lifespans measured in",
    "start": "2213300",
    "end": "2219870"
  },
  {
    "text": "hours so think about if you can run chef against that or run your traditional",
    "start": "2219870",
    "end": "2225540"
  },
  {
    "text": "data center models against that it doesn't work well you have slower deployments or more failures you have",
    "start": "2225540",
    "end": "2231510"
  },
  {
    "text": "opportunity for failure when trying to touch servers and make sure they're okay you have to identify whether something",
    "start": "2231510",
    "end": "2238410"
  },
  {
    "text": "has been corrupted or threatened you have to notice if you've been hacked",
    "start": "2238410",
    "end": "2243480"
  },
  {
    "text": "right in immutable if you're destroying things and replacing them at a high frequency it's much less of an issue and",
    "start": "2243480",
    "end": "2249050"
  },
  {
    "text": "you're gonna have fire drills when things happen like AWS has to say for a region we're going to do a scheduled",
    "start": "2249050",
    "end": "2255570"
  },
  {
    "text": "reboot because we actually have to do some maintenance on the underlying hypervisor which is rare is but it does",
    "start": "2255570",
    "end": "2261030"
  },
  {
    "text": "happen and that can cause a real headache so in immutable you you'd kind of turned",
    "start": "2261030",
    "end": "2266880"
  },
  {
    "text": "this whole thing on its head it massively reduces complexity at scale because every is automated you speed deployments with",
    "start": "2266880",
    "end": "2275589"
  },
  {
    "text": "fewer failures because as we just saw things are image-based they're not process based they're not procedure",
    "start": "2275589",
    "end": "2282490"
  },
  {
    "text": "based you're not going out and touching servers and modifying and you mitigate errors in deploy right over top of",
    "start": "2282490",
    "end": "2289450"
  },
  {
    "text": "threats right so if you have a server that is acting poorly and you don't know that whether by malfeasance or error it",
    "start": "2289450",
    "end": "2299380"
  },
  {
    "text": "will automatically get corrected as part of the normal immutable infrastructure lifecycle and if you need to reboot an",
    "start": "2299380",
    "end": "2305980"
  },
  {
    "text": "application you're running in cloud that's not a big deal because you're doing it all the time anyway so is",
    "start": "2305980",
    "end": "2312490"
  },
  {
    "start": "2311000",
    "end": "2311000"
  },
  {
    "text": "immutable infrastructure the right fit I had mixed feelings about this title I would say if you're planning on really",
    "start": "2312490",
    "end": "2318550"
  },
  {
    "text": "doing cloud well the answer is always going to be yes eventually this is what",
    "start": "2318550",
    "end": "2324130"
  },
  {
    "text": "you should be going towards so this is really oriented toward do I have a system that I can do using immutable",
    "start": "2324130",
    "end": "2330430"
  },
  {
    "text": "patterns now so the first one is if you're designing something greenfield then by definition you can because",
    "start": "2330430",
    "end": "2337030"
  },
  {
    "text": "everyone who's operating at really large scale successfully on clouds is doing it using immutable patterns so you should",
    "start": "2337030",
    "end": "2343359"
  },
  {
    "text": "do that you'll you'll save yourself a ton of pain later the rest of these are",
    "start": "2343359",
    "end": "2348670"
  },
  {
    "text": "for existing apps and but make a pretty good checklist of what to make sure you do for the greenfield app right so if",
    "start": "2348670",
    "end": "2355210"
  },
  {
    "text": "you if it's a capable of light set headless booting using aSG's this third",
    "start": "2355210",
    "end": "2362710"
  },
  {
    "text": "bullet the fourth bullet excuse me is one of the tough ones critically important you've decided where to put",
    "start": "2362710",
    "end": "2369069"
  },
  {
    "text": "your persistence state you've decided where to keep all of your actual changing data your data bases it's not",
    "start": "2369069",
    "end": "2375310"
  },
  {
    "text": "smeared throughout your application every different tier you need a mechanism for automated updates that's",
    "start": "2375310",
    "end": "2383109"
  },
  {
    "text": "obvious and AWS talked about this a fair amount you need to move from",
    "start": "2383109",
    "end": "2388510"
  },
  {
    "text": "configuration management in the traditional style to the kinds of patterns that you just heard about so I say here research suggests this",
    "start": "2388510",
    "end": "2395770"
  },
  {
    "text": "came from a an AWS deck so I'm not I didn't have a citation but I'll try to",
    "start": "2395770",
    "end": "2400990"
  },
  {
    "text": "find one about every 10 days is a pretty good life cycle for compute instances",
    "start": "2400990",
    "end": "2406560"
  },
  {
    "text": "so this is both an animation in it and it didn't work on PowerPoint so I've got",
    "start": "2406560",
    "end": "2414370"
  },
  {
    "text": "some cups so imagine this is your server",
    "start": "2414370",
    "end": "2420160"
  },
  {
    "text": "and and when the cup is open to the top it's running in mutable patterns you're",
    "start": "2420160",
    "end": "2426580"
  },
  {
    "text": "gonna run this server until it needs maintenance then you're gonna flip the server over hopefully you've got enough",
    "start": "2426580",
    "end": "2432460"
  },
  {
    "text": "other servers in your cluster that your application is still running but you might get one of those services in you",
    "start": "2432460",
    "end": "2439480"
  },
  {
    "text": "know in maintenance right now we appreciate your your your patience and then later you'll turn it back over so",
    "start": "2439480",
    "end": "2447520"
  },
  {
    "text": "an immutable you do this completely differently you have a server that's up and running and then you build a server",
    "start": "2447520",
    "end": "2455290"
  },
  {
    "text": "next to it that is not in the distribution yet for the actual",
    "start": "2455290",
    "end": "2460660"
  },
  {
    "text": "application then that one comes up and you might do a blue green you might decide to keep both up for a while and",
    "start": "2460660",
    "end": "2467110"
  },
  {
    "text": "see what happens but ultimately if this new one was successful you're gonna turn this one off and you're gonna crumpled",
    "start": "2467110",
    "end": "2473890"
  },
  {
    "text": "it up and you're gonna throw it away so that's how immutable works and IO Verner",
    "start": "2473890",
    "end": "2478990"
  },
  {
    "text": "Vogel's for that analogy he calls it paper cup computing and he's exactly right I had",
    "start": "2478990",
    "end": "2484090"
  },
  {
    "text": "plastic cups but works about the same so how do you do it",
    "start": "2484090",
    "end": "2490600"
  },
  {
    "start": "2488000",
    "end": "2488000"
  },
  {
    "text": "AWS just give you a really good tour through a bunch of the awesome tools in their tool kit they have for doing this",
    "start": "2490600",
    "end": "2496920"
  },
  {
    "text": "but you saw there are quite a few of them and they are all api's so as you're",
    "start": "2496920",
    "end": "2503350"
  },
  {
    "text": "looking at this and you're seeing there there are a fair amount number of moving parts here you can script those things",
    "start": "2503350",
    "end": "2509400"
  },
  {
    "text": "if you're if you're advanced and you really understand cloud you can integrate them yourself you'll see again",
    "start": "2509400",
    "end": "2516700"
  },
  {
    "text": "like netflix kind of wrote their own operating system if you will for living",
    "start": "2516700",
    "end": "2521950"
  },
  {
    "text": "on top of AWS at scale so I'm gonna talk",
    "start": "2521950",
    "end": "2527920"
  },
  {
    "start": "2526000",
    "end": "2526000"
  },
  {
    "text": "a little bit about food because fugue is a general purpose operating system for",
    "start": "2527920",
    "end": "2533140"
  },
  {
    "text": "automating all these things at scale on clouds so rather than Netflix having to kind of do their own",
    "start": "2533140",
    "end": "2538300"
  },
  {
    "text": "integration every customer on AWS you had a certain point you realize you've got this big code base of glue code to",
    "start": "2538300",
    "end": "2544330"
  },
  {
    "text": "make everything work so we kind of went to first principles and tried to solve this more generally so that this stuff",
    "start": "2544330",
    "end": "2550510"
  },
  {
    "text": "is really easy for you to do so fugue is made of two parts the first is Ludvig",
    "start": "2550510",
    "end": "2558130"
  },
  {
    "text": "which is a language by which you can design cloud infrastructure and the",
    "start": "2558130",
    "end": "2563680"
  },
  {
    "text": "second is what we call a conductor which is roughly analogous to an operating system kernel it is a program that",
    "start": "2563680",
    "end": "2570670"
  },
  {
    "text": "builds operates maintains destroys everything on cloud those are the two parts so I'm going to go into a little",
    "start": "2570670",
    "end": "2576310"
  },
  {
    "text": "bit of detail on both of them living programs are not templates they're real",
    "start": "2576310",
    "end": "2582430"
  },
  {
    "text": "programs there's a compiler there are error messages there is a help",
    "start": "2582430",
    "end": "2588310"
  },
  {
    "text": "system there is a full module system so this if you're used to",
    "start": "2588310",
    "end": "2595030"
  },
  {
    "text": "programming in programming languages it can be hard to go to managing templates",
    "start": "2595030",
    "end": "2600340"
  },
  {
    "text": "so we put a ton of work into making Ludvig really powerful really easy to",
    "start": "2600340",
    "end": "2605770"
  },
  {
    "text": "use and you will not be surprised that Ludvig only has the immutable data it is",
    "start": "2605770",
    "end": "2611920"
  },
  {
    "text": "based on the same functional programming patterns that Erlang and Haskell and others have so there's really rich power",
    "start": "2611920",
    "end": "2618040"
  },
  {
    "text": "in wood that you can define everything the compiler will tell you whether or not you're going to be successful and",
    "start": "2618040",
    "end": "2623680"
  },
  {
    "text": "then the conductor builds everything you'll notice deploy is one of two steps",
    "start": "2623680",
    "end": "2629260"
  },
  {
    "text": "and deploy is the easy part is what we've learned over the last couple years building this getting things built on",
    "start": "2629260",
    "end": "2635470"
  },
  {
    "text": "AWS is easy and tearing them down is pretty easy too it's the life cycle in",
    "start": "2635470",
    "end": "2640840"
  },
  {
    "text": "between that gets really complex so the conductor again it's like an operating",
    "start": "2640840",
    "end": "2645940"
  },
  {
    "text": "system kernel it's going to build out the infrastructure you declare but then it's going to maintain and operate it so",
    "start": "2645940",
    "end": "2652180"
  },
  {
    "text": "it's going to constantly monitor it and you don't have to configure anything to do that if you put something in the lid",
    "start": "2652180",
    "end": "2657640"
  },
  {
    "text": "Vic declaration it will be enforced period full stop 24/7 so that is really",
    "start": "2657640",
    "end": "2664930"
  },
  {
    "text": "powerful as just a simple way to deal with all of this complexity and we love",
    "start": "2664930",
    "end": "2670329"
  },
  {
    "text": "all these AWS services so we support most of them now we we are going to support every AWS service in the very",
    "start": "2670329",
    "end": "2677019"
  },
  {
    "text": "near future so we will be in sync with AWS as they roll out services and features this is just a code fragment I",
    "start": "2677019",
    "end": "2685949"
  },
  {
    "text": "think I might be running yeah I have 27 seconds so I once spent a lot of time on this code fragment other than to say",
    "start": "2685949",
    "end": "2693839"
  },
  {
    "text": "that's an entire V PC and nine lines of code on the left and there are a lot of",
    "start": "2693839",
    "end": "2700119"
  },
  {
    "text": "if you look at some other ways to do this you'll find that that that's kind",
    "start": "2700119",
    "end": "2705339"
  },
  {
    "text": "of unusual so you can get early access now we are in beta and we are going to",
    "start": "2705339",
    "end": "2714759"
  },
  {
    "text": "go live the summer with 1.0 the product we'd love you to come to fuoco and take",
    "start": "2714759",
    "end": "2721390"
  },
  {
    "text": "a look sign up and this is on the right is the immutable infrastructure a Riley",
    "start": "2721390",
    "end": "2727299"
  },
  {
    "text": "report that we authored with O'Reilly we've got a stack of them here I've got some folks over here in Feud t-shirts",
    "start": "2727299",
    "end": "2732910"
  },
  {
    "text": "you're welcome to grab one on the way out and thank you very much for your time and thanks again to AWS for",
    "start": "2732910",
    "end": "2738249"
  },
  {
    "text": "inviting",
    "start": "2738249",
    "end": "2740699"
  }
]