[
  {
    "start": "0",
    "end": "23000"
  },
  {
    "text": "hello I'm Matt denier and I'm a",
    "start": "0",
    "end": "2280"
  },
  {
    "text": "specialist Amazon connect Solutions",
    "start": "2280",
    "end": "3780"
  },
  {
    "text": "architect at AWS",
    "start": "3780",
    "end": "5520"
  },
  {
    "text": "today I'll be walking through some of",
    "start": "5520",
    "end": "7200"
  },
  {
    "text": "the new features we're releasing for",
    "start": "7200",
    "end": "8639"
  },
  {
    "text": "Amazon connect chat the new long-lasting",
    "start": "8639",
    "end": "10800"
  },
  {
    "text": "persistent chats and the idle",
    "start": "10800",
    "end": "12840"
  },
  {
    "text": "participant chat handling functions",
    "start": "12840",
    "end": "14400"
  },
  {
    "text": "introduce additional ways you can give",
    "start": "14400",
    "end": "16800"
  },
  {
    "text": "your customers a great experience when",
    "start": "16800",
    "end": "18900"
  },
  {
    "text": "chatting with your contact center",
    "start": "18900",
    "end": "20760"
  },
  {
    "text": "let's learn more",
    "start": "20760",
    "end": "23539"
  },
  {
    "start": "23000",
    "end": "33000"
  },
  {
    "text": "so the new functionality can be divided",
    "start": "23760",
    "end": "25560"
  },
  {
    "text": "into these two feature sets and they are",
    "start": "25560",
    "end": "27539"
  },
  {
    "text": "long lasting persistent chat and idle",
    "start": "27539",
    "end": "30720"
  },
  {
    "text": "participants",
    "start": "30720",
    "end": "32880"
  },
  {
    "text": "this part of the video is about the idle",
    "start": "32880",
    "end": "35579"
  },
  {
    "start": "33000",
    "end": "43000"
  },
  {
    "text": "participants feature",
    "start": "35579",
    "end": "37380"
  },
  {
    "text": "make sure to catch the other video if",
    "start": "37380",
    "end": "39360"
  },
  {
    "text": "you want to know more about the other",
    "start": "39360",
    "end": "40559"
  },
  {
    "text": "features launched with Amazon connect",
    "start": "40559",
    "end": "42180"
  },
  {
    "text": "chat",
    "start": "42180",
    "end": "44600"
  },
  {
    "start": "43000",
    "end": "112000"
  },
  {
    "text": "previously Amazon connect had no way of",
    "start": "46860",
    "end": "49500"
  },
  {
    "text": "knowing if either participant in the",
    "start": "49500",
    "end": "51239"
  },
  {
    "text": "chat had gone idle and by Audio we mean",
    "start": "51239",
    "end": "53640"
  },
  {
    "text": "a situation where a customer chat stops",
    "start": "53640",
    "end": "56039"
  },
  {
    "text": "replying because they've left their",
    "start": "56039",
    "end": "57420"
  },
  {
    "text": "device or forgotten the chat",
    "start": "57420",
    "end": "59340"
  },
  {
    "text": "agents would have to keep track of these",
    "start": "59340",
    "end": "61020"
  },
  {
    "text": "chats manually and ask customers are you",
    "start": "61020",
    "end": "62820"
  },
  {
    "text": "still there before disconnecting after a",
    "start": "62820",
    "end": "65100"
  },
  {
    "text": "specific period of time and that's not a",
    "start": "65100",
    "end": "67320"
  },
  {
    "text": "very good use of an agent's time",
    "start": "67320",
    "end": "69840"
  },
  {
    "text": "with the auto participant handling",
    "start": "69840",
    "end": "71580"
  },
  {
    "text": "features when you start the chat you can",
    "start": "71580",
    "end": "74220"
  },
  {
    "text": "Define custom idle and auto",
    "start": "74220",
    "end": "75900"
  },
  {
    "text": "disconnection timers",
    "start": "75900",
    "end": "77760"
  },
  {
    "text": "when either participant goes idle the",
    "start": "77760",
    "end": "80340"
  },
  {
    "text": "Amazon connect participant service sends",
    "start": "80340",
    "end": "82799"
  },
  {
    "text": "out new events on the existing chat",
    "start": "82799",
    "end": "85020"
  },
  {
    "text": "websockets",
    "start": "85020",
    "end": "86100"
  },
  {
    "text": "and eventually at an auto disconnect",
    "start": "86100",
    "end": "88020"
  },
  {
    "text": "event after the timer runs out the agent",
    "start": "88020",
    "end": "90600"
  },
  {
    "text": "is auto disconnected if the customer",
    "start": "90600",
    "end": "92340"
  },
  {
    "text": "hasn't replied",
    "start": "92340",
    "end": "94140"
  },
  {
    "text": "this allows agents to be more efficient",
    "start": "94140",
    "end": "95880"
  },
  {
    "text": "with their time and still gives",
    "start": "95880",
    "end": "97979"
  },
  {
    "text": "customers the opportunities available in",
    "start": "97979",
    "end": "100560"
  },
  {
    "text": "a disconnect flow after the disconnect",
    "start": "100560",
    "end": "103500"
  },
  {
    "text": "I've added links in the description if",
    "start": "103500",
    "end": "105600"
  },
  {
    "text": "you'd like to learn more about creating",
    "start": "105600",
    "end": "106979"
  },
  {
    "text": "and configuring disconnect flows in",
    "start": "106979",
    "end": "109079"
  },
  {
    "text": "Amazon connect chat",
    "start": "109079",
    "end": "111960"
  },
  {
    "text": "now let's take a look at how idle",
    "start": "111960",
    "end": "113880"
  },
  {
    "start": "112000",
    "end": "367000"
  },
  {
    "text": "participants is implemented and in",
    "start": "113880",
    "end": "116040"
  },
  {
    "text": "action in the console",
    "start": "116040",
    "end": "117840"
  },
  {
    "text": "unlike the persistent chat feature the",
    "start": "117840",
    "end": "120180"
  },
  {
    "text": "autoparticipant configuration is called",
    "start": "120180",
    "end": "122040"
  },
  {
    "text": "once a contact has been created you'd",
    "start": "122040",
    "end": "124799"
  },
  {
    "text": "call Star Chat contact and then you'd",
    "start": "124799",
    "end": "127200"
  },
  {
    "text": "call this new update contact role",
    "start": "127200",
    "end": "129060"
  },
  {
    "text": "configuration API this API requires your",
    "start": "129060",
    "end": "132300"
  },
  {
    "text": "instance ID which you can grab here and",
    "start": "132300",
    "end": "135360"
  },
  {
    "text": "the active chat contact ID",
    "start": "135360",
    "end": "137940"
  },
  {
    "text": "the best way to call this API for your",
    "start": "137940",
    "end": "139920"
  },
  {
    "text": "chat is by passing the contact ID",
    "start": "139920",
    "end": "141900"
  },
  {
    "text": "parameter to a Lambda function in your",
    "start": "141900",
    "end": "143640"
  },
  {
    "text": "contact flow something like this",
    "start": "143640",
    "end": "146400"
  },
  {
    "text": "alternately you can grab the contact ID",
    "start": "146400",
    "end": "148500"
  },
  {
    "text": "directly and call the API another way",
    "start": "148500",
    "end": "151860"
  },
  {
    "text": "in this example I'll use Postman to call",
    "start": "151860",
    "end": "154920"
  },
  {
    "text": "the API directly you can see the",
    "start": "154920",
    "end": "157920"
  },
  {
    "text": "participant role config path here",
    "start": "157920",
    "end": "160980"
  },
  {
    "text": "importantly though the body of the",
    "start": "160980",
    "end": "163980"
  },
  {
    "text": "request is the same whether you're",
    "start": "163980",
    "end": "165780"
  },
  {
    "text": "calling it directly or via the SDK",
    "start": "165780",
    "end": "168300"
  },
  {
    "text": "and this is the configuration for the",
    "start": "168300",
    "end": "170220"
  },
  {
    "text": "budget spin timers which you can see",
    "start": "170220",
    "end": "171780"
  },
  {
    "text": "here we're setting all possible timers",
    "start": "171780",
    "end": "174900"
  },
  {
    "text": "first you can see the idle time of the",
    "start": "174900",
    "end": "177660"
  },
  {
    "text": "customer",
    "start": "177660",
    "end": "178440"
  },
  {
    "text": "which defines how long to wait before",
    "start": "178440",
    "end": "180540"
  },
  {
    "text": "the customer is considered idle on a",
    "start": "180540",
    "end": "182340"
  },
  {
    "text": "chat in this case two minutes",
    "start": "182340",
    "end": "184980"
  },
  {
    "text": "and here's the agent idle timer",
    "start": "184980",
    "end": "187379"
  },
  {
    "text": "three minutes",
    "start": "187379",
    "end": "189180"
  },
  {
    "text": "finally we're going to set the customer",
    "start": "189180",
    "end": "191400"
  },
  {
    "text": "and agent disconnect timers which is how",
    "start": "191400",
    "end": "194099"
  },
  {
    "text": "long to wait after the handle timer is",
    "start": "194099",
    "end": "196319"
  },
  {
    "text": "triggered to disconnect the agent from",
    "start": "196319",
    "end": "198420"
  },
  {
    "text": "the chat",
    "start": "198420",
    "end": "199440"
  },
  {
    "text": "in this case two minutes for customer",
    "start": "199440",
    "end": "201659"
  },
  {
    "text": "and three minutes for agents",
    "start": "201659",
    "end": "204180"
  },
  {
    "text": "this means that after the sum of the",
    "start": "204180",
    "end": "207180"
  },
  {
    "text": "idle and disconnect timers the chat will",
    "start": "207180",
    "end": "210180"
  },
  {
    "text": "disconnect appropriately",
    "start": "210180",
    "end": "212700"
  },
  {
    "text": "so let's see this in action then",
    "start": "212700",
    "end": "215099"
  },
  {
    "text": "let's begin a test chat we'll use the",
    "start": "215099",
    "end": "217560"
  },
  {
    "text": "test chat interface and on the left",
    "start": "217560",
    "end": "219599"
  },
  {
    "text": "you'll see the customer chat experience",
    "start": "219599",
    "end": "221099"
  },
  {
    "text": "and on the right the agent chat",
    "start": "221099",
    "end": "225180"
  },
  {
    "text": "I'm going to go ahead and get the",
    "start": "225180",
    "end": "226920"
  },
  {
    "text": "contact ID in the background",
    "start": "226920",
    "end": "230180"
  },
  {
    "text": "and we'll call the API before the agent",
    "start": "231120",
    "end": "234239"
  },
  {
    "text": "is connected to the chat",
    "start": "234239",
    "end": "236819"
  },
  {
    "text": "let's take the API here",
    "start": "236819",
    "end": "239459"
  },
  {
    "text": "insert the contact ID as a parameter and",
    "start": "239459",
    "end": "242220"
  },
  {
    "text": "call the API",
    "start": "242220",
    "end": "245000"
  },
  {
    "text": "you'll see down here that we've got now",
    "start": "245459",
    "end": "247200"
  },
  {
    "text": "200 okay so the timers are set",
    "start": "247200",
    "end": "249299"
  },
  {
    "text": "successfully let's handle this chat",
    "start": "249299",
    "end": "251099"
  },
  {
    "text": "normally",
    "start": "251099",
    "end": "253400"
  },
  {
    "text": "we're running through a standard chat",
    "start": "261120",
    "end": "262620"
  },
  {
    "text": "interaction",
    "start": "262620",
    "end": "263639"
  },
  {
    "text": "but let's say the customer has forgotten",
    "start": "263639",
    "end": "265919"
  },
  {
    "text": "a chat window and they go idle",
    "start": "265919",
    "end": "269840"
  },
  {
    "text": "you can see that the customer idle timer",
    "start": "271199",
    "end": "273360"
  },
  {
    "text": "has now triggered after two minutes the",
    "start": "273360",
    "end": "275759"
  },
  {
    "text": "websocket event is also published if",
    "start": "275759",
    "end": "277860"
  },
  {
    "text": "you're using a custom CCB and you want",
    "start": "277860",
    "end": "279960"
  },
  {
    "text": "to integrate this idle in your interface",
    "start": "279960",
    "end": "282000"
  },
  {
    "text": "with a modal or something similar",
    "start": "282000",
    "end": "284400"
  },
  {
    "text": "now let's assume that the agent is",
    "start": "284400",
    "end": "287220"
  },
  {
    "text": "working on another chat whilst the",
    "start": "287220",
    "end": "289139"
  },
  {
    "text": "customer is idle and the agent is also",
    "start": "289139",
    "end": "291180"
  },
  {
    "text": "idle you'll see that the agent idle",
    "start": "291180",
    "end": "293340"
  },
  {
    "text": "timer has run down now and is idle after",
    "start": "293340",
    "end": "295620"
  },
  {
    "text": "three minutes",
    "start": "295620",
    "end": "296940"
  },
  {
    "text": "the idle event again is also fanned out",
    "start": "296940",
    "end": "299340"
  },
  {
    "text": "on the websocket if you want to handle",
    "start": "299340",
    "end": "301020"
  },
  {
    "text": "it differently now if the customer",
    "start": "301020",
    "end": "303300"
  },
  {
    "text": "replies at this point",
    "start": "303300",
    "end": "305460"
  },
  {
    "text": "this will reset the customer idle timer",
    "start": "305460",
    "end": "307620"
  },
  {
    "text": "back to two minutes and the disconnect",
    "start": "307620",
    "end": "309300"
  },
  {
    "text": "timer is also reset",
    "start": "309300",
    "end": "312180"
  },
  {
    "text": "you can see that here",
    "start": "312180",
    "end": "314100"
  },
  {
    "text": "the agent also replies and this will",
    "start": "314100",
    "end": "316979"
  },
  {
    "text": "reset their idle and disconnect timers",
    "start": "316979",
    "end": "319080"
  },
  {
    "text": "now let's assume that the customer goes",
    "start": "319080",
    "end": "322080"
  },
  {
    "text": "idle again you'll see that the idle",
    "start": "322080",
    "end": "324360"
  },
  {
    "text": "timer has triggered again after two",
    "start": "324360",
    "end": "326160"
  },
  {
    "text": "minutes since the last customer response",
    "start": "326160",
    "end": "328800"
  },
  {
    "text": "assuming that they remain idle let's",
    "start": "328800",
    "end": "330840"
  },
  {
    "text": "wait two more minutes now to see what",
    "start": "330840",
    "end": "332940"
  },
  {
    "text": "happens next",
    "start": "332940",
    "end": "335479"
  },
  {
    "text": "so two minutes after the last custom",
    "start": "335699",
    "end": "338460"
  },
  {
    "text": "idle event based on timers we've set",
    "start": "338460",
    "end": "340440"
  },
  {
    "text": "there is the auto disconnect and the",
    "start": "340440",
    "end": "342539"
  },
  {
    "text": "agent now drops off the chat note that",
    "start": "342539",
    "end": "344940"
  },
  {
    "text": "the agent is always disconnected so that",
    "start": "344940",
    "end": "347220"
  },
  {
    "text": "if the customer ever returns they have",
    "start": "347220",
    "end": "349380"
  },
  {
    "text": "the option to return back into the",
    "start": "349380",
    "end": "351960"
  },
  {
    "text": "contact flow and potentially be",
    "start": "351960",
    "end": "353940"
  },
  {
    "text": "redirected to another agent",
    "start": "353940",
    "end": "356580"
  },
  {
    "text": "there's a lot more configuration that's",
    "start": "356580",
    "end": "358259"
  },
  {
    "text": "possible such as choosing which timers",
    "start": "358259",
    "end": "360419"
  },
  {
    "text": "you'd like to implement or leave out so",
    "start": "360419",
    "end": "362639"
  },
  {
    "text": "this is just the basics of implementing",
    "start": "362639",
    "end": "364139"
  },
  {
    "text": "this new functionality the documentation",
    "start": "364139",
    "end": "366180"
  },
  {
    "text": "has more details on this so in summary",
    "start": "366180",
    "end": "368580"
  },
  {
    "start": "367000",
    "end": "419000"
  },
  {
    "text": "then let's talk about what we've learned",
    "start": "368580",
    "end": "370320"
  },
  {
    "text": "today with the idle participant chat",
    "start": "370320",
    "end": "372180"
  },
  {
    "text": "features",
    "start": "372180",
    "end": "373740"
  },
  {
    "text": "we looked at setting the timer config in",
    "start": "373740",
    "end": "376560"
  },
  {
    "text": "the update participant raw config API we",
    "start": "376560",
    "end": "379860"
  },
  {
    "text": "looked at some of those websocket events",
    "start": "379860",
    "end": "381780"
  },
  {
    "text": "and we saw the agent and customer chat",
    "start": "381780",
    "end": "384300"
  },
  {
    "text": "experience with other participants in",
    "start": "384300",
    "end": "385860"
  },
  {
    "text": "action",
    "start": "385860",
    "end": "387360"
  },
  {
    "text": "finally then for benefits using the auto",
    "start": "387360",
    "end": "389460"
  },
  {
    "text": "participant features allows agents to",
    "start": "389460",
    "end": "391500"
  },
  {
    "text": "make better use of their time by",
    "start": "391500",
    "end": "393240"
  },
  {
    "text": "handling chats and letting Amazon",
    "start": "393240",
    "end": "394560"
  },
  {
    "text": "connect manage the idle chat life cycles",
    "start": "394560",
    "end": "397039"
  },
  {
    "text": "importantly there's an efficiency gain",
    "start": "397039",
    "end": "399120"
  },
  {
    "text": "for agents by reducing aht or average",
    "start": "399120",
    "end": "401759"
  },
  {
    "text": "handle time overall in wait times as",
    "start": "401759",
    "end": "403919"
  },
  {
    "text": "well as agent satisfaction scores",
    "start": "403919",
    "end": "407419"
  },
  {
    "text": "thanks so much for watching today",
    "start": "408060",
    "end": "409500"
  },
  {
    "text": "further resources for Amazon connect",
    "start": "409500",
    "end": "411960"
  },
  {
    "text": "chat can be found in the video",
    "start": "411960",
    "end": "413520"
  },
  {
    "text": "description",
    "start": "413520",
    "end": "415940"
  }
]