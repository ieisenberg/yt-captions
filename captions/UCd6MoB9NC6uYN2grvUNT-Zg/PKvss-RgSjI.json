[
  {
    "start": "0",
    "end": "33000"
  },
  {
    "text": "yeah News Corp is using spot instances in their own environment and she has",
    "start": "450",
    "end": "5609"
  },
  {
    "text": "some fantastic slides explaining in detail about how they're being used okay",
    "start": "5609",
    "end": "11370"
  },
  {
    "text": "so how will this go so first we're going to spend some time learning about ec2 spot instances understanding what they",
    "start": "11370",
    "end": "17760"
  },
  {
    "text": "are we'll talk a bit about ec2 spot instances best practices we will cover",
    "start": "17760",
    "end": "23760"
  },
  {
    "text": "some tools for managing spot instances and then finally we'll we'll jump into",
    "start": "23760",
    "end": "28859"
  },
  {
    "text": "this great case study with News Corp and and JD okay so let's cover first of all",
    "start": "28859",
    "end": "38010"
  },
  {
    "start": "33000",
    "end": "33000"
  },
  {
    "text": "how we can consume easy to resources on AWS right so the first two models on",
    "start": "38010",
    "end": "43770"
  },
  {
    "text": "this slide are probably something that you're familiar with on-demand consumption right this is where you pay",
    "start": "43770",
    "end": "50039"
  },
  {
    "text": "for your compute capacity by the hour no long term commitment it's really like",
    "start": "50039",
    "end": "55890"
  },
  {
    "text": "electricity you turn your instances on you pay for the number of seconds that those instances run when you shut them",
    "start": "55890",
    "end": "62460"
  },
  {
    "text": "off you stop paying for them and it's great for spiky workloads and wandering",
    "start": "62460",
    "end": "67650"
  },
  {
    "text": "in the mode of really starting to define the type of workloads that you're that you'll be running on AWS you know what's",
    "start": "67650",
    "end": "75630"
  },
  {
    "text": "you've sort of locked in and have a good understanding of the types of workloads that you'll be running on AWS it really",
    "start": "75630",
    "end": "82500"
  },
  {
    "text": "makes sense to think about utilizing reserved instances right so this is the ability to reserve physical capacity in",
    "start": "82500",
    "end": "89790"
  },
  {
    "text": "our data centers for a one-year or a three-year period of time and this is",
    "start": "89790",
    "end": "94890"
  },
  {
    "text": "you know allows you to receive a significant discount off of the on-demand price so the third consumption",
    "start": "94890",
    "end": "102240"
  },
  {
    "text": "model is what we'll focus on today is what we call the spot market and this is where we allow you to bid for the unused",
    "start": "102240",
    "end": "109470"
  },
  {
    "text": "on-demand capacity in our data centers spot instances are fantastic for time",
    "start": "109470",
    "end": "114810"
  },
  {
    "text": "and sensitive workloads for transient or stateless workloads but they're also really great for running your production",
    "start": "114810",
    "end": "120750"
  },
  {
    "text": "style workloads as well and JD will talk a bit more about how you know some of",
    "start": "120750",
    "end": "126149"
  },
  {
    "text": "the best practices and some of them the systems and services that they've they've come up with to allow them to",
    "start": "126149",
    "end": "131550"
  },
  {
    "text": "deploy spot instances in production environment so let's",
    "start": "131550",
    "end": "136650"
  },
  {
    "start": "135000",
    "end": "135000"
  },
  {
    "text": "understand a bit about capacity right so AWS has millions of active customers",
    "start": "136650",
    "end": "141900"
  },
  {
    "text": "that ranges from large enterprises startups public sector organizations",
    "start": "141900",
    "end": "147299"
  },
  {
    "text": "every imaginable customer and use case you can think of so what does that mean that means we need to have a lot of",
    "start": "147299",
    "end": "153540"
  },
  {
    "text": "spare capacity in our data centers to allow our customers to scale when they need to scale right but we don't want",
    "start": "153540",
    "end": "160290"
  },
  {
    "text": "that extra capacity just sitting there so what does this mean this means that",
    "start": "160290",
    "end": "165840"
  },
  {
    "start": "162000",
    "end": "162000"
  },
  {
    "text": "we've enabled that spare capacity to be available to you through something called spot instances and the spot",
    "start": "165840",
    "end": "171659"
  },
  {
    "text": "market and at the end of the day easy to spot instances are really simply spare",
    "start": "171659",
    "end": "177659"
  },
  {
    "text": "easy to on-demand capacity with a couple of very simple rules so if you only come",
    "start": "177659",
    "end": "183780"
  },
  {
    "text": "away with two things today from this webinar I hope that you know it's it's a good understanding of what these very",
    "start": "183780",
    "end": "190500"
  },
  {
    "text": "simple rules of spot are all right so the first rule is that spot instances",
    "start": "190500",
    "end": "195599"
  },
  {
    "start": "192000",
    "end": "192000"
  },
  {
    "text": "run in a market where the price of the compute based on real-time supply and",
    "start": "195599",
    "end": "201540"
  },
  {
    "text": "demand so as instances are spun up on on-demand",
    "start": "201540",
    "end": "206609"
  },
  {
    "text": "and the spot market and as they're terminated you know that has an impact",
    "start": "206609",
    "end": "212220"
  },
  {
    "text": "on the real-time supply and demand and therefore the market price of these spot instances the second is that you'll",
    "start": "212220",
    "end": "220560"
  },
  {
    "text": "never pay more than what you bid for a spot instance or a cluster of spot instances you have complete control over",
    "start": "220560",
    "end": "228090"
  },
  {
    "text": "how much you're willing to pay and at any point if the market price exceeds",
    "start": "228090",
    "end": "233159"
  },
  {
    "text": "what you're willing to pay for that compute capacity would give you a two-minute warning and you have a choice",
    "start": "233159",
    "end": "240030"
  },
  {
    "text": "when you launch the instances of either of those instances being stopped or terminated and we'll handle that for you",
    "start": "240030",
    "end": "246959"
  },
  {
    "text": "automatically either way we'll give you a two-minute warning so that you can wrap up your work you can save your",
    "start": "246959",
    "end": "253139"
  },
  {
    "text": "state you can checkpoint your job you can do whatever you need to do to handle that maybe it's detaching from a load",
    "start": "253139",
    "end": "259709"
  },
  {
    "text": "balancer maybe it's copying some data to s3 whatever it is that you need to happen and and",
    "start": "259709",
    "end": "266110"
  },
  {
    "text": "we give you that two-minute warning in the case where you've stopped your instance spot will actually turn your",
    "start": "266110",
    "end": "273340"
  },
  {
    "text": "instance back on when the market price has decreased below your bid price",
    "start": "273340",
    "end": "279000"
  },
  {
    "start": "278000",
    "end": "278000"
  },
  {
    "text": "so since spot instances typically cost fifty to ninety percent less than",
    "start": "279000",
    "end": "284680"
  },
  {
    "text": "on-demand instances it's really the best way to get the best value for your ec2",
    "start": "284680",
    "end": "290319"
  },
  {
    "text": "capacity right so some customers you know have said I really wish I could",
    "start": "290319",
    "end": "296289"
  },
  {
    "text": "increase my compute capacity but I just don't have the budget for it well when you think about it if you can save fifty",
    "start": "296289",
    "end": "303610"
  },
  {
    "text": "to ninety percent off of that same easy to compute capacity that you were running with on-demand instances you",
    "start": "303610",
    "end": "310090"
  },
  {
    "text": "know you can immediately increase your your compute capacity by two to ten times without changing your budget right",
    "start": "310090",
    "end": "316689"
  },
  {
    "text": "it's a really powerful thing once you start to think about it and how you can apply and utilize spot instances in your",
    "start": "316689",
    "end": "322900"
  },
  {
    "text": "environment some customers say well I really don't need extra compute capacity I'm happy with what I have but it sure",
    "start": "322900",
    "end": "330909"
  },
  {
    "text": "would be nice if I could reduce my bill so you know flipping to spot instances",
    "start": "330909",
    "end": "336460"
  },
  {
    "text": "in these cases is is another great way to save fifty to ninety percent off of your existing workload many customers",
    "start": "336460",
    "end": "344800"
  },
  {
    "text": "will do a combination of both they'll add compute capacity for maybe another dev test environment or that that QA",
    "start": "344800",
    "end": "351370"
  },
  {
    "text": "environment or that staging environment that they've always kind of needed but didn't have the budget for and at the",
    "start": "351370",
    "end": "358479"
  },
  {
    "text": "same time they will also save money off of their existing environment right so you know either way I think spot",
    "start": "358479",
    "end": "365469"
  },
  {
    "text": "instances are a fantastic way to utilize you know cost-effective compute capacity",
    "start": "365469",
    "end": "370569"
  },
  {
    "text": "and I really hope that that you're able to give it a try to use five instances",
    "start": "370569",
    "end": "375729"
  },
  {
    "text": "in your own environment after spending some time with us on this webinar so",
    "start": "375729",
    "end": "381699"
  },
  {
    "start": "381000",
    "end": "381000"
  },
  {
    "text": "again to to better understand capacity on the AWS and I have this slide that",
    "start": "381699",
    "end": "388960"
  },
  {
    "text": "I'll explain here right so I've chosen a region in Northern California the the US",
    "start": "388960",
    "end": "395310"
  },
  {
    "text": "west one region this region in and every region has at least two",
    "start": "395310",
    "end": "401320"
  },
  {
    "text": "different availability zones right every region has two or more availability zones so obviously these are separate",
    "start": "401320",
    "end": "408310"
  },
  {
    "text": "pools of physical capacity right but if we start to slice it up along those",
    "start": "408310",
    "end": "414160"
  },
  {
    "text": "vertical lines right we see each of those instance types right so P 2 s C 4",
    "start": "414160",
    "end": "420639"
  },
  {
    "text": "s m4 s for example these are all separate pools of physical capacity in",
    "start": "420639",
    "end": "426100"
  },
  {
    "text": "our data centers and then if we slice just slice it up a little further right we'll see the different sizes within",
    "start": "426100",
    "end": "432789"
  },
  {
    "text": "those instance types are also separate pools of a capacity all right so the C for for extra large is a different set",
    "start": "432789",
    "end": "439870"
  },
  {
    "text": "of capacity than the C for two extra large so what this means is that every",
    "start": "439870",
    "end": "445389"
  },
  {
    "text": "single one of these little rectangles you see on this slide is a separate spot market right with with different pricing",
    "start": "445389",
    "end": "453280"
  },
  {
    "text": "and different levels of compute capacity right so this capacity this compute",
    "start": "453280",
    "end": "459160"
  },
  {
    "text": "capacity is then unlocked and given to you to bid on with the spot market all",
    "start": "459160",
    "end": "465910"
  },
  {
    "start": "464000",
    "end": "464000"
  },
  {
    "text": "right so let's take a look at this compute capacity and the spot markets from a different angle right so I'm",
    "start": "465910",
    "end": "471940"
  },
  {
    "text": "looking at a graph here of the see for instance type along the top you can see",
    "start": "471940",
    "end": "477610"
  },
  {
    "text": "three different availability zones 2a 2b and 2c on the right there you have the",
    "start": "477610",
    "end": "484090"
  },
  {
    "text": "on demand price and then going down you have the different instance sizes and",
    "start": "484090",
    "end": "489460"
  },
  {
    "text": "you can see that each availability zone has a separate and fluctuating price for",
    "start": "489460",
    "end": "494500"
  },
  {
    "text": "that spot market for that instance type and just because the price for a given instance type in 1az may have increased",
    "start": "494500",
    "end": "502180"
  },
  {
    "text": "that doesn't mean that the price will increase in the other availability zones so if you happen to be running as c4 for",
    "start": "502180",
    "end": "509229"
  },
  {
    "text": "extra large in US East to B and you said you know 30 cents is more than I'm",
    "start": "509229",
    "end": "514719"
  },
  {
    "text": "willing to pay well by all means start looking in the la-azy so you can see that it's cheaper in 2a and it's even",
    "start": "514719",
    "end": "521469"
  },
  {
    "text": "even more cheap in 2c and so right these are all available to you you can simply",
    "start": "521469",
    "end": "527829"
  },
  {
    "text": "hunt around and find the best price for the capacity that you're after",
    "start": "527829",
    "end": "533370"
  },
  {
    "text": "so just to sort of recap that right each instance family each instance size each",
    "start": "533370",
    "end": "538770"
  },
  {
    "text": "availability zone in every region is a separate spot market okay I mentioned",
    "start": "538770",
    "end": "547380"
  },
  {
    "start": "545000",
    "end": "545000"
  },
  {
    "text": "earlier the concept of bidding so I want to make sure that everyone also comes away with a good understanding of what",
    "start": "547380",
    "end": "554360"
  },
  {
    "text": "bidding means in relation to spot instances so we have the concept of",
    "start": "554360",
    "end": "559680"
  },
  {
    "text": "bidding this is where you essentially say this is the maximum amount that I'm",
    "start": "559680",
    "end": "564780"
  },
  {
    "text": "willing to pay for a given unit of capacity but what's really critical to",
    "start": "564780",
    "end": "571410"
  },
  {
    "text": "understand is that you never pay more than the market price so your bid price",
    "start": "571410",
    "end": "576960"
  },
  {
    "text": "could be for example equal to the on demand price but you ever only pay what",
    "start": "576960",
    "end": "583080"
  },
  {
    "text": "the market price is by the hour so in this case I'm showing a week's history",
    "start": "583080",
    "end": "590400"
  },
  {
    "text": "of the spot pricing for the r34 extra-large over a yeah I said a week in",
    "start": "590400",
    "end": "598320"
  },
  {
    "text": "the US East one D region and availability zone right so it was hovering just under 20 cents per hour",
    "start": "598320",
    "end": "605340"
  },
  {
    "text": "you can see there were a couple of spikes there right so if we think about bidding strategies you know had you bid",
    "start": "605340",
    "end": "611850"
  },
  {
    "text": "25 percent of the on-demand price you know you only again would have ever paid",
    "start": "611850",
    "end": "617100"
  },
  {
    "text": "what that green line required you to pay because you only pay the bid price sorry",
    "start": "617100",
    "end": "622110"
  },
  {
    "text": "at the market price but the bid price is essentially what you're willing to spend for that compute capacity and so every",
    "start": "622110",
    "end": "628650"
  },
  {
    "text": "time the green line exceeds that 25 percent bid line those instances would",
    "start": "628650",
    "end": "634140"
  },
  {
    "text": "have either been stopped or terminated depending on what you chose now had you bid 50 percent of the on-demand price",
    "start": "634140",
    "end": "640260"
  },
  {
    "text": "you would have only experienced one interruption in your spot instance over that weeks period of time and really not",
    "start": "640260",
    "end": "646680"
  },
  {
    "text": "paying much more than if you had bid 25 percent because again that green line is what you pay had you bid 75 percent or",
    "start": "646680",
    "end": "654480"
  },
  {
    "text": "or equal to the on demand price you would have received zero interruptions over that weeks period of time your",
    "start": "654480",
    "end": "661080"
  },
  {
    "text": "instance would have continued again without interruption and you really would have not paid",
    "start": "661080",
    "end": "667060"
  },
  {
    "text": "anymore than if you had bid 50% so what I like to say is you know don't think too much about bidding think about what",
    "start": "667060",
    "end": "674500"
  },
  {
    "text": "your maximum price is that you're willing to pay you know I say just keep it simple bid a",
    "start": "674500",
    "end": "680560"
  },
  {
    "text": "hundred percent of the on-demand price the worst case is that you would pay the on-demand price best case is that you",
    "start": "680560",
    "end": "687250"
  },
  {
    "text": "would be saving eighty to ninety percent off of that of that on-demand price so that bid price especially in relation to",
    "start": "687250",
    "end": "694390"
  },
  {
    "text": "bidding equal to the on-demand price that's how much wiggle room you have for the spot market price to fluctuate if at",
    "start": "694390",
    "end": "702760"
  },
  {
    "text": "any point that green line were to exceed your bid price again your instance would either be stopped or terminated",
    "start": "702760",
    "end": "709210"
  },
  {
    "text": "depending on what you've chosen so when we talk about best practices while",
    "start": "709210",
    "end": "715780"
  },
  {
    "start": "711000",
    "end": "711000"
  },
  {
    "text": "utilizing spot instances there's a lot of overlap with just general EC two best",
    "start": "715780",
    "end": "722050"
  },
  {
    "text": "practices right you regardless if you're running on on-demand spot or reserved",
    "start": "722050",
    "end": "727660"
  },
  {
    "text": "instances you still want to follow these four best practices right you want to be stateless your applications should not",
    "start": "727660",
    "end": "734560"
  },
  {
    "text": "maintain state on the local instances as much as possible you want to keep States somewhere else whether it's a dynamo TV",
    "start": "734560",
    "end": "740980"
  },
  {
    "text": "table an RDS database or or something like that an elastic cash layer you",
    "start": "740980",
    "end": "747340"
  },
  {
    "text": "don't want that state to live on your individual instances right you want to design for fault tolerance you don't",
    "start": "747340",
    "end": "752950"
  },
  {
    "text": "want to have a single point of failure in any component of your application you",
    "start": "752950",
    "end": "758320"
  },
  {
    "text": "want to utilize multiple availability zones as much as possible you want to spread load across availability zones",
    "start": "758320",
    "end": "764740"
  },
  {
    "text": "and you also want to spread capacity across availability zones you want your applications and your architecture to be",
    "start": "764740",
    "end": "771430"
  },
  {
    "text": "loosely coupled so the goal here is that if you need to increase either capacity",
    "start": "771430",
    "end": "776650"
  },
  {
    "text": "or some sort of component of your of your stack you you know you don't want",
    "start": "776650",
    "end": "781720"
  },
  {
    "text": "to have to increase components forever all pieces of your stack just because",
    "start": "781720",
    "end": "787150"
  },
  {
    "text": "one small component within the greater stack needs additional resources so if",
    "start": "787150",
    "end": "792280"
  },
  {
    "text": "your database tier needs more memory you know you don't want to have to increase memory for the web tier as well you want",
    "start": "792280",
    "end": "798370"
  },
  {
    "text": "everything to be very loosely coupled um so the last best practice when it comes to spot instances is is something",
    "start": "798370",
    "end": "804730"
  },
  {
    "text": "called instance flexibility so what this means is you know take a look and and",
    "start": "804730",
    "end": "809800"
  },
  {
    "text": "have a good understanding of which instance types and sizes your application stack can use right so many",
    "start": "809800",
    "end": "816879"
  },
  {
    "text": "customers don't think about the fact that if you're currently using c4 you",
    "start": "816879",
    "end": "823779"
  },
  {
    "text": "know extra larges for your application well it's more than likely that going up a size to a c4 to extra-large probably",
    "start": "823779",
    "end": "831579"
  },
  {
    "text": "won't hurt your your application right it may not be that you can take advantage of the extra resources but",
    "start": "831579",
    "end": "837639"
  },
  {
    "text": "there's a very good possibility that the price of a larger instance size on the spot market will be cheaper than the",
    "start": "837639",
    "end": "844389"
  },
  {
    "text": "same smaller instance size on the on-demand purchasing model so it's",
    "start": "844389",
    "end": "850209"
  },
  {
    "text": "important to think about that flexibility right saying can I use you know maybe another instance type or two",
    "start": "850209",
    "end": "856720"
  },
  {
    "text": "in my in my environment whether it's a different size or even a different type",
    "start": "856720",
    "end": "862050"
  },
  {
    "text": "you know make sure that you're using multiple availability zones because again each of those is a separate spot",
    "start": "862050",
    "end": "869560"
  },
  {
    "text": "market when you think about it so cross referencing availability zones along with instance types and sizes you can",
    "start": "869560",
    "end": "876250"
  },
  {
    "text": "come out with a lot of different instance capacity pools that you can pull from to utilize on the spot market",
    "start": "876250",
    "end": "883199"
  },
  {
    "start": "882000",
    "end": "882000"
  },
  {
    "text": "so let's talk a little bit about another best practice which is diversification",
    "start": "883199",
    "end": "888310"
  },
  {
    "text": "right so I said instance flexibility in the last slide in this case let's talk about diversification across instance",
    "start": "888310",
    "end": "895149"
  },
  {
    "text": "types right so as best you can consider selecting multiple instance types",
    "start": "895149",
    "end": "901029"
  },
  {
    "text": "utilizing in multiple availability zones and if your application stack for",
    "start": "901029",
    "end": "906069"
  },
  {
    "text": "example is something that needs to have similar performance characteristics across the stack you know consider",
    "start": "906069",
    "end": "912459"
  },
  {
    "text": "looking for horizontally across multiple instance types but with instances that",
    "start": "912459",
    "end": "918639"
  },
  {
    "text": "perform with similar characteristics right so something like targeting three different instance types but all of",
    "start": "918639",
    "end": "925509"
  },
  {
    "text": "large sizes so that c4 large Arfa large m4 large these all perform somewhat",
    "start": "925509",
    "end": "931990"
  },
  {
    "text": "similar and more than likely can can adequately handle the performance that your application needs",
    "start": "931990",
    "end": "939720"
  },
  {
    "start": "938000",
    "end": "938000"
  },
  {
    "text": "for those of you that have said you know I have instances and I have applications",
    "start": "939720",
    "end": "945909"
  },
  {
    "text": "that need to run continuously without potential interruption for a period of",
    "start": "945909",
    "end": "951279"
  },
  {
    "text": "time we do offer something called spot blocks or defined duration spot requests",
    "start": "951279",
    "end": "958059"
  },
  {
    "text": "and and these spot blocks can run continuously for anywhere from 1 to 6",
    "start": "958059",
    "end": "963220"
  },
  {
    "text": "hours the discount off of the on-demand pricing is not as steep as spot",
    "start": "963220",
    "end": "969970"
  },
  {
    "text": "instances themselves however you still receive roughly 50% off of the on-demand",
    "start": "969970",
    "end": "975069"
  },
  {
    "text": "price using spot blocks and requesting a defined duration is simply another",
    "start": "975069",
    "end": "981849"
  },
  {
    "text": "parameter when you're requesting a spot instance and it's really just passing how long would I like this instance to",
    "start": "981849",
    "end": "988749"
  },
  {
    "text": "to run for what duration and so in this case if you had said you know I would like my my spot instance to run for a",
    "start": "988749",
    "end": "996339"
  },
  {
    "text": "360 minutes you know we take a look at our capacity if we have it if we think that your instance can run uninterrupted",
    "start": "996339",
    "end": "1003659"
  },
  {
    "text": "or instances can run uninterrupted for that period of time we will go ahead and fulfill those spot requests those spot",
    "start": "1003659",
    "end": "1010199"
  },
  {
    "text": "block requests for you those instances will appear in your account and you have access to them if at any point you you",
    "start": "1010199",
    "end": "1017729"
  },
  {
    "text": "terminate a spot block before the duration that you requested has has been",
    "start": "1017729",
    "end": "1023069"
  },
  {
    "text": "reached you know we we stopped charging you and you pay for the amount of hours",
    "start": "1023069",
    "end": "1028199"
  },
  {
    "text": "minutes and seconds that the instances actually ran if the instance runs continuously for the for the defined",
    "start": "1028199",
    "end": "1034889"
  },
  {
    "text": "duration when it's finished we will terminate that instance for you automatically so you don't have to worry",
    "start": "1034889",
    "end": "1040019"
  },
  {
    "text": "about instances running out of your longer than in what you've requested them to run ok so I just told you about",
    "start": "1040019",
    "end": "1048509"
  },
  {
    "text": "all of these you know the great functionality that spot instances allow you to to have but I've also said you",
    "start": "1048509",
    "end": "1056549"
  },
  {
    "text": "know you need to hunt around and you need to find that capacity in you and you need to find the best practiced",
    "start": "1056549",
    "end": "1062610"
  },
  {
    "text": "prices to get the best sort of bang for your buck with spot so I don't want you to worry",
    "start": "1062610",
    "end": "1067830"
  },
  {
    "text": "about that too much I don't want you to focus on that too much what I wanted to explain to you is a tool called easy to",
    "start": "1067830",
    "end": "1074610"
  },
  {
    "text": "spot fleet and easy to spot fleet is a tool that helps you launch you know",
    "start": "1074610",
    "end": "1081240"
  },
  {
    "start": "1075000",
    "end": "1075000"
  },
  {
    "text": "thousands of Spawn instances with a single API call and I say thousands it could also be one right so it's a tool",
    "start": "1081240",
    "end": "1087929"
  },
  {
    "text": "that allows you to spin up your spot resources from from a single API call it",
    "start": "1087929",
    "end": "1094019"
  },
  {
    "text": "has a lot of different functionality built into it one of the one of that",
    "start": "1094019",
    "end": "1099139"
  },
  {
    "text": "that great tools that it has built into it is is a couple of different allocations allocation methods right one",
    "start": "1099139",
    "end": "1106320"
  },
  {
    "text": "allocation method is get the best price right find the lowest price so in this",
    "start": "1106320",
    "end": "1111480"
  },
  {
    "text": "mode maybe you want to think about running something like a batch compute job or some net amount of horsepower",
    "start": "1111480",
    "end": "1118620"
  },
  {
    "text": "that you need to get done you want to use a spot market for it and you just want to find the rock-bottom lowest",
    "start": "1118620",
    "end": "1125039"
  },
  {
    "text": "price on the spot market so in this allocation mode you can say just go out and find me you know net number of instances find me",
    "start": "1125039",
    "end": "1132419"
  },
  {
    "text": "the cheapest price and spin those up and maintain that capacity for me on the other side of the house if you're",
    "start": "1132419",
    "end": "1138179"
  },
  {
    "text": "running a workload that that needs to be you know maintained and maybe is backing",
    "start": "1138179",
    "end": "1144360"
  },
  {
    "text": "a type of resource or or application",
    "start": "1144360",
    "end": "1149580"
  },
  {
    "text": "that needs to have you know a given amount of availability backed behind it",
    "start": "1149580",
    "end": "1155909"
  },
  {
    "text": "you can tell spot-free to go into what's called diversified mode and this is",
    "start": "1155909",
    "end": "1161070"
  },
  {
    "text": "where spawn fleet will diversify as best it can across availability zones that you will",
    "start": "1161070",
    "end": "1166860"
  },
  {
    "text": "audit to use across instance types and across instance sizes all while still",
    "start": "1166860",
    "end": "1172230"
  },
  {
    "text": "keeping you know best possible cost in mind and so you know either of these",
    "start": "1172230",
    "end": "1178049"
  },
  {
    "text": "methods really unlocks the potential of the spot market to you and lets you",
    "start": "1178049",
    "end": "1183690"
  },
  {
    "text": "choose and pick which resource allocation method works best for you if you are able to diversify across",
    "start": "1183690",
    "end": "1191070"
  },
  {
    "text": "instance sizes you know vertically as well so if you have allowed spot flee to",
    "start": "1191070",
    "end": "1196380"
  },
  {
    "text": "say please consider launching on extra larges 2x",
    "start": "1196380",
    "end": "1201810"
  },
  {
    "text": "largest four extra larges and eight extra larges clearly these will be spinning up different amounts of raw",
    "start": "1201810",
    "end": "1209100"
  },
  {
    "text": "capacity for you you know different amounts of CPU different amounts of memory in that case what you can do is",
    "start": "1209100",
    "end": "1215970"
  },
  {
    "text": "you can apply custom weighting to your response Li to tell it hey I've allowed you to spin up different sizes and",
    "start": "1215970",
    "end": "1222420"
  },
  {
    "text": "different pools of capacity you know but 1/8 extra-large is is equal to 2x - 4",
    "start": "1222420",
    "end": "1229200"
  },
  {
    "text": "extra larges so that it doesn't you know imbalance your net amount of capacity",
    "start": "1229200",
    "end": "1234450"
  },
  {
    "text": "right so you can tell it rather than spinning up number of instances you can say you know I'm telling you that an 8x",
    "start": "1234450",
    "end": "1241170"
  },
  {
    "text": "is worth 2 4 X's and therefore you know go out and find me this amount of virtual CPU capacity or this amount of",
    "start": "1241170",
    "end": "1248760"
  },
  {
    "text": "memory capacity and spot-free will go out and do that for you automatically we",
    "start": "1248760",
    "end": "1256320"
  },
  {
    "start": "1254000",
    "end": "1254000"
  },
  {
    "text": "also have something in the published on our website right it's not even in the",
    "start": "1256320",
    "end": "1261810"
  },
  {
    "text": "console it's just embedded in our documentation it's a it's a nifty tool called tool called the ec2 spot bid",
    "start": "1261810",
    "end": "1268170"
  },
  {
    "text": "advisor the spot bid advisor the job of the spot bid advisor is to allow you to",
    "start": "1268170",
    "end": "1275160"
  },
  {
    "text": "get you know insight into what if I had bid this amount of money for this instance type in this region you know",
    "start": "1275160",
    "end": "1282270"
  },
  {
    "text": "what would have happened based on historical pricing data so this this",
    "start": "1282270",
    "end": "1287610"
  },
  {
    "text": "spot bid advisor again lets you say my operating system is Linux or it's Windows you know I would have been",
    "start": "1287610",
    "end": "1294270"
  },
  {
    "text": "willing to bid 50% of the on event price in this case or 75 or a hundred percent",
    "start": "1294270",
    "end": "1299340"
  },
  {
    "text": "this is the region that I'm looking at you know what would have happened here and so the spot that advisor pulls from",
    "start": "1299340",
    "end": "1306330"
  },
  {
    "text": "the spot history API it comes back with with some suggestions about you know",
    "start": "1306330",
    "end": "1312540"
  },
  {
    "text": "what would have happened over a month's period of time or a weeks period of time so in this particular case it's",
    "start": "1312540",
    "end": "1318090"
  },
  {
    "text": "returning to us that the M for extra large would have run continuously",
    "start": "1318090",
    "end": "1323880"
  },
  {
    "text": "without interruption over a month's period of time and the week's period of time all while saving you ninety percent",
    "start": "1323880",
    "end": "1330540"
  },
  {
    "text": "off of the on demand price so it's a very very handy tool that lets you have some insight",
    "start": "1330540",
    "end": "1335640"
  },
  {
    "text": "we also do publish spot pricing history through a spot pricing history API that",
    "start": "1335640",
    "end": "1342120"
  },
  {
    "text": "you can query it gives you pricing history for for 90 days you can write",
    "start": "1342120",
    "end": "1347580"
  },
  {
    "text": "your own tools against it if you would like to get some additional insight into pricing history for your own",
    "start": "1347580",
    "end": "1353520"
  },
  {
    "text": "applications and your own environment but again you know you can start by looking at the spot bit advisor just to",
    "start": "1353520",
    "end": "1360210"
  },
  {
    "text": "get a ballpark idea about how those instances are performing in that particular region and you know sort of",
    "start": "1360210",
    "end": "1367320"
  },
  {
    "text": "the X the the expected cost savings based on historical pricing obviously",
    "start": "1367320",
    "end": "1372840"
  },
  {
    "text": "this cannot predict the future but it does give you some good insight for how things have have been providing",
    "start": "1372840",
    "end": "1379799"
  },
  {
    "text": "deep steep discounts over again over the last month or a week so we also have a",
    "start": "1379799",
    "end": "1387330"
  },
  {
    "start": "1384000",
    "end": "1384000"
  },
  {
    "text": "github repo where we publish open source tools that allow you to take advantage",
    "start": "1387330",
    "end": "1392370"
  },
  {
    "text": "of the spot market here's an example tool a tool called get spot duration",
    "start": "1392370",
    "end": "1398460"
  },
  {
    "text": "it's a Python script it's really doing roughly the equivalent of the spot bid advisor that I just showed you but it's",
    "start": "1398460",
    "end": "1405390"
  },
  {
    "text": "a command-line thing it's in Python and it uses the you know the AWS Python SDK",
    "start": "1405390",
    "end": "1410460"
  },
  {
    "text": "to pull out information from the pricing history and so in this case I'm just showing you a screenshot of the output",
    "start": "1410460",
    "end": "1416880"
  },
  {
    "text": "where it's showing you you know what would have been the expected duration of this these particular instance types in",
    "start": "1416880",
    "end": "1423419"
  },
  {
    "text": "these availability zones so you can see that's number of hours that the instances would have run in those",
    "start": "1423419",
    "end": "1430650"
  },
  {
    "text": "availability zones based on the price that you provided it so we also have an",
    "start": "1430650",
    "end": "1437309"
  },
  {
    "start": "1434000",
    "end": "1434000"
  },
  {
    "text": "even newer tool that's actually embedded directly into the AWS console right so",
    "start": "1437309",
    "end": "1443820"
  },
  {
    "text": "you'll find this spot advisor directly when you're in the ec2 console and",
    "start": "1443820",
    "end": "1449549"
  },
  {
    "text": "you've chosen to launch a spot instance request or to put it in a spot instance",
    "start": "1449549",
    "end": "1454710"
  },
  {
    "text": "request and the spot advisor is a pretty cool tool right so it lets you you say",
    "start": "1454710",
    "end": "1460530"
  },
  {
    "text": "you know I'm thinking about running a batch job or a MapReduce job right who",
    "start": "1460530",
    "end": "1465780"
  },
  {
    "text": "do per spark or maybe a web service you know this is the amount of CPU that I need",
    "start": "1465780",
    "end": "1471390"
  },
  {
    "text": "from a virtual CPU perspective this is the amount of memory I need this is my",
    "start": "1471390",
    "end": "1476610"
  },
  {
    "text": "platform and this is how much capacity I'm after and spawn advisor will go back",
    "start": "1476610",
    "end": "1482490"
  },
  {
    "text": "and it will return to you what it thinks you should use right so it returns a",
    "start": "1482490",
    "end": "1488130"
  },
  {
    "text": "list of recommendations number of each of those instance types which availability zones it thinks you should",
    "start": "1488130",
    "end": "1494310"
  },
  {
    "text": "use and then it tells you what your estimated hourly prices for that spot",
    "start": "1494310",
    "end": "1500040"
  },
  {
    "text": "fleet and then it shows you know in this case that's translating to 883 percent",
    "start": "1500040",
    "end": "1505920"
  },
  {
    "text": "savings off of the on-demand price and so if you you know proceed through this configuration that's really all there is",
    "start": "1505920",
    "end": "1512880"
  },
  {
    "text": "to it it can then start spinning up your resources you can save this configuration file into a JSON formatted",
    "start": "1512880",
    "end": "1520170"
  },
  {
    "text": "file that you can download and you can simply use that JSON file for the next",
    "start": "1520170",
    "end": "1525420"
  },
  {
    "text": "time that you're going to spin up some spot spot fleet resources but again this tool lets you think less about bidding",
    "start": "1525420",
    "end": "1532680"
  },
  {
    "text": "less about you know designing your spot feed and more about architecting your",
    "start": "1532680",
    "end": "1538800"
  },
  {
    "text": "spot fleet to meet the exact requirements of your particular workload",
    "start": "1538800",
    "end": "1544370"
  },
  {
    "start": "1543000",
    "end": "1543000"
  },
  {
    "text": "alright so let's take a moment to think about what types of workloads customers",
    "start": "1544370",
    "end": "1549960"
  },
  {
    "text": "are using spot instances for and so I put together a list based on you know",
    "start": "1549960",
    "end": "1554970"
  },
  {
    "text": "the many conversations I've had with customers that are currently using spot instances so I'll just go down this list",
    "start": "1554970",
    "end": "1561080"
  },
  {
    "text": "for a few minutes right so queue and batch based processing this to me is",
    "start": "1561080",
    "end": "1567390"
  },
  {
    "text": "sort of the the the no-brainer of using spot right you have these transient workloads you have a requirement to get",
    "start": "1567390",
    "end": "1575370"
  },
  {
    "text": "some amount of computing done and so you know spinning up and spinning down spot",
    "start": "1575370",
    "end": "1581340"
  },
  {
    "text": "resources based on the amount of work in the queue or a batch based system is",
    "start": "1581340",
    "end": "1586380"
  },
  {
    "text": "really one of the easiest ways to get started with spot instances I have a",
    "start": "1586380",
    "end": "1591530"
  },
  {
    "text": "CloudFormation template that I've published to that github repo that I'll link to in the end it is it shows you a",
    "start": "1591530",
    "end": "1599160"
  },
  {
    "text": "demonstration of spinning up and spinning down spawn fleet based on the amount of messages in",
    "start": "1599160",
    "end": "1605970"
  },
  {
    "text": "an sqs queue and and spawn fleet you know has native abilities in it that are",
    "start": "1605970",
    "end": "1612720"
  },
  {
    "text": "allow you to scale up and scale down that spot fleet with an auto scaling",
    "start": "1612720",
    "end": "1618360"
  },
  {
    "text": "functionality right so your typical cloud watch cloud metrics and cloud watch alarms that all feed into powering",
    "start": "1618360",
    "end": "1626130"
  },
  {
    "text": "this cluster and allowing it to scale up and scale down you know elastic",
    "start": "1626130",
    "end": "1632400"
  },
  {
    "text": "MapReduce so big data workloads Hadoop spark etc you know EMR has fantastic it",
    "start": "1632400",
    "end": "1640560"
  },
  {
    "text": "has fantastic ability to to natively spin up your yours Hadoop cluster on",
    "start": "1640560",
    "end": "1648240"
  },
  {
    "text": "spot instances directly through EMR they just released they being the elastic",
    "start": "1648240",
    "end": "1654060"
  },
  {
    "text": "MapReduce team the EMR team reduced a new functionality called ec2 instance",
    "start": "1654060",
    "end": "1659970"
  },
  {
    "text": "fleets or EMR instance fleets and and Emaar instance fleets does a fantastic job of taking inputs that you provided",
    "start": "1659970",
    "end": "1668550"
  },
  {
    "text": "such as these are the amount of spot instances I would like to use these are the amount of reserved instances I would",
    "start": "1668550",
    "end": "1674790"
  },
  {
    "text": "like to use please use them to power my my my EMR cluster and so we do have a",
    "start": "1674790",
    "end": "1681410"
  },
  {
    "text": "tremendous amount of people that are using spot instances to power their big data workloads on EMR and even outside",
    "start": "1681410",
    "end": "1687930"
  },
  {
    "text": "of EMR so we have a good subset of customers that are running their hadoop workloads with fought instances as well",
    "start": "1687930",
    "end": "1695210"
  },
  {
    "text": "so stateless applications right web tiers especially web tiers that follow",
    "start": "1695210",
    "end": "1701250"
  },
  {
    "text": "the traditional you know two or three tier pattern you've got a load balancer in the mix you've got an auto scaling",
    "start": "1701250",
    "end": "1706890"
  },
  {
    "text": "group of web servers or application servers right they're all stateless they can scale up and scale down based on",
    "start": "1706890",
    "end": "1713640"
  },
  {
    "text": "real time demand these are fantastic use cases for spot instances as well so when you start to combine things like spot",
    "start": "1713640",
    "end": "1719790"
  },
  {
    "text": "fleet with with load balancers whether you're using you know our load balancers",
    "start": "1719790",
    "end": "1725130"
  },
  {
    "text": "al B's or LPS or your own load balancers again these are all quite easy use cases",
    "start": "1725130",
    "end": "1731190"
  },
  {
    "text": "and and powerful use cases when you think about getting access to cheap compute capacity at scale you know",
    "start": "1731190",
    "end": "1739200"
  },
  {
    "text": "see ICD pipelines continuous integration and development right we have a lot of customers that are using the ec2 spot",
    "start": "1739200",
    "end": "1746549"
  },
  {
    "text": "fleet Jenkins plugin it's a plugin that you can find online you can you can",
    "start": "1746549",
    "end": "1752009"
  },
  {
    "text": "enable it in your existing Jenkins deployment what it does is it allows",
    "start": "1752009",
    "end": "1757489"
  },
  {
    "text": "Jenkins to send jobs into a into a fleet of spot instances that are powered by",
    "start": "1757489",
    "end": "1764729"
  },
  {
    "text": "spot fleets and that that's fleet will essentially scale up and scale down based on the number of jobs in the job",
    "start": "1764729",
    "end": "1772019"
  },
  {
    "text": "queue in your Jenkins cluster so you know if that sounds interesting to you",
    "start": "1772019",
    "end": "1777450"
  },
  {
    "text": "take a look for that spot fleet Jenkins plugin it's quite easy to enable and and",
    "start": "1777450",
    "end": "1783659"
  },
  {
    "text": "quite powerful again you know allowing you to utilize your your build pipeline on top of spot instances containerized",
    "start": "1783659",
    "end": "1791159"
  },
  {
    "text": "workloads right we've seen a great adoption and increase of adoption of running containers on spot instances",
    "start": "1791159",
    "end": "1798960"
  },
  {
    "text": "right so the the containerized managed service ECS the ec2 container service",
    "start": "1798960",
    "end": "1805320"
  },
  {
    "text": "that it AWS provides is a great tool to",
    "start": "1805320",
    "end": "1810389"
  },
  {
    "text": "be combined with spot fleet right spinning up and spinning down your containerized workloads on top of spot",
    "start": "1810389",
    "end": "1817979"
  },
  {
    "text": "instances makes a lot of sense because your containers by nature are also stateless and so combining you know a",
    "start": "1817979",
    "end": "1824700"
  },
  {
    "text": "stateless containerized application on top of stateless instances responds Lee",
    "start": "1824700",
    "end": "1829710"
  },
  {
    "text": "makes a tremendous amount of sense and we also even have customers that are doing you know live and an on-demand",
    "start": "1829710",
    "end": "1836549"
  },
  {
    "text": "streaming of content being backed by spot instances right when you think about it you know transcoding video",
    "start": "1836549",
    "end": "1843059"
  },
  {
    "text": "takes a lot of CPU and GPU capacity and so customers have really locked on to",
    "start": "1843059",
    "end": "1848909"
  },
  {
    "text": "the to the benefit of of doing their their video encoding and transcoding you",
    "start": "1848909",
    "end": "1855059"
  },
  {
    "text": "know there are very large render farms running on spot instances so as I as I head to my last slide I",
    "start": "1855059",
    "end": "1862800"
  },
  {
    "start": "1858000",
    "end": "1858000"
  },
  {
    "text": "just wanted to demonstrate a reference architecture here that is showing you",
    "start": "1862800",
    "end": "1868440"
  },
  {
    "text": "know an example of running an Amazon ECS cluster a containerized cluster on top",
    "start": "1868440",
    "end": "1874110"
  },
  {
    "text": "of ec2 spot instances and so combining the power of of ECS right the ista 2",
    "start": "1874110",
    "end": "1879930"
  },
  {
    "text": "container or service on top of spot instances and then you start to combine cloud formation and cloud watch which",
    "start": "1879930",
    "end": "1887310"
  },
  {
    "text": "allows you to scale up and scale down your computer pasady based on the amount of of applications or containers or",
    "start": "1887310",
    "end": "1895440"
  },
  {
    "text": "whatever it is that you're running within your container as environment you know these these are very powerful",
    "start": "1895440",
    "end": "1901460"
  },
  {
    "text": "design patterns that we're starting to see more and more in our in our customer",
    "start": "1901460",
    "end": "1906600"
  },
  {
    "text": "environments ok so I'm now going to turn this presentation over to JD Liu I'll",
    "start": "1906600",
    "end": "1913740"
  },
  {
    "text": "let her introduce herself again she's a a DevOps engineer with News Corp I think she has some fantastic insight into how",
    "start": "1913740",
    "end": "1920790"
  },
  {
    "text": "News Corp is currently using spot instances in in their environment JD",
    "start": "1920790",
    "end": "1926070"
  },
  {
    "text": "I'll turn it over to you Thank You Chet and the hello everyone so",
    "start": "1926070",
    "end": "1931680"
  },
  {
    "text": "I'm going to talk about our support solutions in use cope and we coded SPO",
    "start": "1931680",
    "end": "1937380"
  },
  {
    "text": "down so news coab is one of the australia largest media companies and our products suspended newspapers",
    "start": "1937380",
    "end": "1944640"
  },
  {
    "start": "1938000",
    "end": "1938000"
  },
  {
    "text": "magazines publishing internet films and so on so I'm going to share our",
    "start": "1944640",
    "end": "1951350"
  },
  {
    "text": "experience and license so at the idea is to give are you more confident to start",
    "start": "1951350",
    "end": "1957870"
  },
  {
    "text": "using the sport fleet on your productions so when we developed our solutions there were few challenges the",
    "start": "1957870",
    "end": "1966180"
  },
  {
    "text": "first one was and how do we attach this one instance to a load balancer so",
    "start": "1966180",
    "end": "1971390"
  },
  {
    "text": "currently spot fleet does not support registering spot instance so with a load",
    "start": "1971390",
    "end": "1978600"
  },
  {
    "text": "balancer we have to run a script in the easy-to-use a data to get it work and",
    "start": "1978600",
    "end": "1984260"
  },
  {
    "text": "the second one was how we can associate elastic IP address to a small instance",
    "start": "1984260",
    "end": "1991110"
  },
  {
    "text": "where has some services which required to have direct connections to the internet such as the",
    "start": "1991110",
    "end": "1999000"
  },
  {
    "text": "net host all the proxy services there are two solutions at the moment to",
    "start": "1999000",
    "end": "2004640"
  },
  {
    "text": "implement that one is to use this but user data was allocating public IP",
    "start": "2004640",
    "end": "2010130"
  },
  {
    "text": "script but this is a little bit more complicated an alternative way is to",
    "start": "2010130",
    "end": "2015890"
  },
  {
    "text": "enable the automatic public IP addressing but this is way PC while",
    "start": "2015890",
    "end": "2021470"
  },
  {
    "text": "settings which is not suitable for our case so we have to run another script in",
    "start": "2021470",
    "end": "2028370"
  },
  {
    "text": "the easy to use a data together sort the third challenge was how the way the",
    "start": "2028370",
    "end": "2035120"
  },
  {
    "text": "register are terminated spawn instance from the load balancer Isis for instance",
    "start": "2035120",
    "end": "2041300"
  },
  {
    "text": "have a roughly two minutes warning window when they're about to be terminated so we need a mechanism to",
    "start": "2041300",
    "end": "2048350"
  },
  {
    "text": "ensure that the elastic load balancer our traffic is not routed through an",
    "start": "2048350",
    "end": "2055250"
  },
  {
    "text": "instance that is about to be terminated luckily there is a well-documented precise from eight of s the idea is to",
    "start": "2055250",
    "end": "2063110"
  },
  {
    "text": "run a script that pulls the uses made theta as a cron job for this termination",
    "start": "2063110",
    "end": "2068929"
  },
  {
    "text": "warning so the first one was what happened if the spot market price goes",
    "start": "2068929",
    "end": "2076220"
  },
  {
    "text": "up beyond our bid price this has to be considered if we are to have any",
    "start": "2076220",
    "end": "2082690"
  },
  {
    "text": "guaranteed of services especially for our production environments so handles",
    "start": "2082690",
    "end": "2088790"
  },
  {
    "text": "outage or running on demon instance in her bio are the quick answer but",
    "start": "2088790",
    "end": "2094100"
  },
  {
    "text": "deploying a diversified spot fleet helps a lot here but there's still a chance",
    "start": "2094100",
    "end": "2099920"
  },
  {
    "text": "that oma our case in the small fleet could be upbeat so surely there is a",
    "start": "2099920",
    "end": "2106760"
  },
  {
    "text": "better way to do this we find each spot fleet requester has associated car watch",
    "start": "2106760",
    "end": "2113930"
  },
  {
    "text": "matrix called eligible instance pool count this matrix indicates how many",
    "start": "2113930",
    "end": "2120190"
  },
  {
    "text": "individual spot markets that esporte fleet requester could fulfill",
    "start": "2120190",
    "end": "2126440"
  },
  {
    "text": "so we can fig clog watch alarm that triggers when the number of the eligible",
    "start": "2126440",
    "end": "2133009"
  },
  {
    "text": "pool jobs lower certain 300 for example and to pools so then these alarm",
    "start": "2133009",
    "end": "2139309"
  },
  {
    "text": "triggers a lambda function is invoked to manipulate the auto scaling group",
    "start": "2139309",
    "end": "2144319"
  },
  {
    "text": "configured and pervading the undermount instance so when the alarm status turns",
    "start": "2144319",
    "end": "2151700"
  },
  {
    "text": "to be in okay status the same lambda function will remove the only one",
    "start": "2151700",
    "end": "2156710"
  },
  {
    "text": "instance and leave this one instance to handle all the traffic so the fifth one was if my workload when you on that he",
    "start": "2156710",
    "end": "2165079"
  },
  {
    "text": "doing sensible what should we do so currently there is no spot markets for the t2 instance that meaning the walk",
    "start": "2165079",
    "end": "2172999"
  },
  {
    "text": "lows may have to run down I'm sorry Needham instance of the larger instance type in order to take advantages of the",
    "start": "2172999",
    "end": "2180710"
  },
  {
    "text": "spot from the spot price history you can find that there are lots of cosas",
    "start": "2180710",
    "end": "2186799"
  },
  {
    "text": "savings even using the larger instance type compared with some among the t2",
    "start": "2186799",
    "end": "2192410"
  },
  {
    "text": "instance deploying the spot fleet across a diversified range of pools means that",
    "start": "2192410",
    "end": "2199729"
  },
  {
    "text": "we don't need to be constrained by a particular instance type also it's quite",
    "start": "2199729",
    "end": "2205099"
  },
  {
    "text": "wire that workload has bad performance with running on the more resources",
    "start": "2205099",
    "end": "2210920"
  },
  {
    "text": "instance and the last challenger was on how we can automate all of this so this",
    "start": "2210920",
    "end": "2219229"
  },
  {
    "text": "has to be considered that if running the workload for the production environment in our automation team we ran a few",
    "start": "2219229",
    "end": "2227779"
  },
  {
    "text": "lambda functions who handles a fell over to only mount instance and the ISA",
    "start": "2227779",
    "end": "2233269"
  },
  {
    "text": "capacities of the building spot fleet request into the confirmation stacks",
    "start": "2233269",
    "end": "2238759"
  },
  {
    "text": "from operation and development teams so and in the next two strides I will show",
    "start": "2238759",
    "end": "2246529"
  },
  {
    "start": "2246000",
    "end": "2246000"
  },
  {
    "text": "you how it deploys a spot fleet stack and the houses lambda functions work so",
    "start": "2246529",
    "end": "2253910"
  },
  {
    "text": "we use bamboo for our word deployment when the planes in issue eight",
    "start": "2253910",
    "end": "2260380"
  },
  {
    "text": "so the first lambda function is triggered and it converts the only among the existing CloudFormation template",
    "start": "2260380",
    "end": "2267520"
  },
  {
    "text": "into the one with additional spa fleet resources required after that the second",
    "start": "2267520",
    "end": "2274090"
  },
  {
    "text": "lambda functions is code with the user input for example the desired instance",
    "start": "2274090",
    "end": "2279250"
  },
  {
    "text": "type of all the bid price based on this information it automatically calculates",
    "start": "2279250",
    "end": "2284410"
  },
  {
    "text": "a list of pairs with a bid price and the instance type then then the provided",
    "start": "2284410",
    "end": "2291250"
  },
  {
    "text": "list is passed to the third lambda function which generates the final",
    "start": "2291250",
    "end": "2296680"
  },
  {
    "text": "templates and the upload to s3 then the cloud formation will grab this template",
    "start": "2296680",
    "end": "2302140"
  },
  {
    "text": "from the s3 bucket and created the stack based on this template so in the next",
    "start": "2302140",
    "end": "2310900"
  },
  {
    "start": "2310000",
    "end": "2310000"
  },
  {
    "text": "slide I will present how we handle the spot termination so firstly after bead",
    "start": "2310900",
    "end": "2318280"
  },
  {
    "text": "is fulfilled spot isn't registered itself with the load balancer by the",
    "start": "2318280",
    "end": "2324520"
  },
  {
    "text": "user data secondly if the SWAT instance fails due to the out beat the signal is",
    "start": "2324520",
    "end": "2332050"
  },
  {
    "text": "assigned where the instance made data a script we're talking about before post",
    "start": "2332050",
    "end": "2337390"
  },
  {
    "text": "this information and points in the house check for the load balancer after two",
    "start": "2337390",
    "end": "2342610"
  },
  {
    "text": "minutes the instance is terminated so the crowd watch it when triggered and it",
    "start": "2342610",
    "end": "2348910"
  },
  {
    "text": "invokes the lambda function to direction that is terminated instance from the ELB",
    "start": "2348910",
    "end": "2355000"
  },
  {
    "text": "so the spot fleet launches a replacement of the spot instance to meet your",
    "start": "2355000",
    "end": "2362160"
  },
  {
    "text": "capacity so certainly as we talked before the the matrix of the edge will",
    "start": "2362160",
    "end": "2370330"
  },
  {
    "text": "instance fukken stops car watch alarm will trigger a lambda function that",
    "start": "2370330",
    "end": "2376150"
  },
  {
    "text": "modified and among the auto scaling group to maintain the capacity for our workload lastly another situation is",
    "start": "2376150",
    "end": "2384400"
  },
  {
    "text": "that if this one isn't is in the pending fulfillment status for more than five",
    "start": "2384400",
    "end": "2390610"
  },
  {
    "text": "minutes the same lambda function is triggered again to launch the only model instance and to",
    "start": "2390610",
    "end": "2396460"
  },
  {
    "text": "make sure our production time raining smoothly finally and as in the new scope way",
    "start": "2396460",
    "end": "2403960"
  },
  {
    "start": "2403000",
    "end": "2403000"
  },
  {
    "text": "heavily focused on the cost savings and the productivity for each team our",
    "start": "2403960",
    "end": "2409270"
  },
  {
    "text": "automation teams and a lot of time to build automatic way to implement this",
    "start": "2409270",
    "end": "2414580"
  },
  {
    "text": "solution regarding of the spot-on adaption we firstly rule out cross",
    "start": "2414580",
    "end": "2420880"
  },
  {
    "text": "numbered productions numbered applications also are giving enough",
    "start": "2420880",
    "end": "2426550"
  },
  {
    "text": "transparencies to each team to help them understand the mechanism behind the",
    "start": "2426550",
    "end": "2431770"
  },
  {
    "text": "things this build the confidence for our team to implement on the production so",
    "start": "2431770",
    "end": "2437740"
  },
  {
    "text": "far we have a macro ated more than 25 percent of our production workload on",
    "start": "2437740",
    "end": "2442930"
  },
  {
    "text": "the spot fleet and we did not meet any critical outage by running the",
    "start": "2442930",
    "end": "2448510"
  },
  {
    "text": "production on the small instance at the same time the cost savings is huge to",
    "start": "2448510",
    "end": "2454150"
  },
  {
    "text": "the business as well so overall it has been very pleasant journey was raining",
    "start": "2454150",
    "end": "2460630"
  },
  {
    "text": "always and lares for instance so this is the end of my talk and thank you very",
    "start": "2460630",
    "end": "2466990"
  },
  {
    "text": "much thank you so much JD that was",
    "start": "2466990",
    "end": "2472560"
  }
]