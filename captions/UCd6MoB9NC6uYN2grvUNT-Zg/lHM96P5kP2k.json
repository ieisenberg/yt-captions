[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "- Welcome to 'This is My Architecture'.",
    "start": "5500",
    "end": "7452"
  },
  {
    "text": "My name is Ran and joining me today \nis Yehuda from Fyber.",
    "start": "7452",
    "end": "10495"
  },
  {
    "text": "Hi Yehuda\n- Hi.",
    "start": "10495",
    "end": "11764"
  },
  {
    "text": "- Before we get into the architecture, \ntell us a bit about Fyber.",
    "start": "11764",
    "end": "15316"
  },
  {
    "text": "- So Fyber helps mobile developers \nmonitize from ads.",
    "start": "15316",
    "end": "19020"
  },
  {
    "text": "- Okay, how do they do that?",
    "start": "19020",
    "end": "20863"
  },
  {
    "start": "20000",
    "end": "121000"
  },
  {
    "text": "- So we do that by connecting advertisers \nand mobile developers.",
    "start": "20863",
    "end": "25118"
  },
  {
    "text": "- Okay.",
    "start": "25118",
    "end": "25916"
  },
  {
    "text": "- We're getting half a million \nad requests each second",
    "start": "25916",
    "end": "29537"
  },
  {
    "text": "and we go out to advertisers \nand try to get ads for those ad requests.",
    "start": "29537",
    "end": "34433"
  },
  {
    "text": "We go out to advertisers \nabout 15 million times each second.",
    "start": "34433",
    "end": "39628"
  },
  {
    "text": "which generates a lot of events.",
    "start": "39628",
    "end": "42016"
  },
  {
    "text": "- Okay, tell us how those events \nlook like",
    "start": "42016",
    "end": "43562"
  },
  {
    "text": "and what you do with them. \n- All right.",
    "start": "43562",
    "end": "45345"
  },
  {
    "text": "So those 50 million events each second \ngoes to our Kafka.",
    "start": "45345",
    "end": "48911"
  },
  {
    "text": "We have a Sparks range application \nwhich reads the data from Kafka",
    "start": "48911",
    "end": "53308"
  },
  {
    "text": "and puts it in S3 in bucket format.",
    "start": "53308",
    "end": "57045"
  },
  {
    "text": "We have Spark running on EKS \ntriggered by Airflow",
    "start": "57045",
    "end": "63713"
  },
  {
    "text": "and aggregating the data, again, to S3 \nto a more aggregated data",
    "start": "64134",
    "end": "70972"
  },
  {
    "text": "and also into Cassandra \nand also triggers EMR",
    "start": "70972",
    "end": "78308"
  },
  {
    "text": "to read the data from S3 \nand put it into Druid.",
    "start": "78308",
    "end": "84157"
  },
  {
    "text": "- Okay, so that's an interesting \ndata flow.",
    "start": "85000",
    "end": "87507"
  },
  {
    "text": "You're running your Spark applications \non Kubernetes",
    "start": "87507",
    "end": "90404"
  },
  {
    "text": "that's a rather new approach.",
    "start": "90404",
    "end": "91928"
  },
  {
    "text": "Tell us a bit about it and what \nit solves for you.",
    "start": "91928",
    "end": "94342"
  },
  {
    "text": "- Our old approach was to run \nwith the YARN",
    "start": "94342",
    "end": "97412"
  },
  {
    "text": "to run 2 machines on demand \nand it was not as cost effective.",
    "start": "97412",
    "end": "101993"
  },
  {
    "text": "And we wanted to look for a more \nefficient way of doing things.",
    "start": "101993",
    "end": "106421"
  },
  {
    "text": "So we checked how to run Spark jobs \non Kubernetes,",
    "start": "106421",
    "end": "112627"
  },
  {
    "text": "we used EKS to make it faster, \nnot build our own.",
    "start": "112627",
    "end": "116678"
  },
  {
    "text": "And it seemed to be very cost effective, \nvery stable.",
    "start": "116678",
    "end": "120870"
  },
  {
    "text": "- Okay, it seems like you're using \nSpotinst here,",
    "start": "120870",
    "end": "123566"
  },
  {
    "start": "121000",
    "end": "188000"
  },
  {
    "text": "that's an AWS technology partner, \nwhat does it do for you?",
    "start": "123566",
    "end": "127174"
  },
  {
    "text": "- So the reason this technology \nis so efficient",
    "start": "127174",
    "end": "131416"
  },
  {
    "text": "is because its auto scaling and using \nspot instances.",
    "start": "131416",
    "end": "135189"
  },
  {
    "text": "So we use Spotinst, \nwe have a pod of Spotinst",
    "start": "135189",
    "end": "139118"
  },
  {
    "text": "inside our Kubernetes cluster who listen \nto our metric server",
    "start": "139118",
    "end": "142178"
  },
  {
    "text": "and see if we need to spin more machines up \nor actually to reduce machines.",
    "start": "142178",
    "end": "147780"
  },
  {
    "text": "- Okay, so when Airflow schedules a job \non EKS, a Spark job on EKS,",
    "start": "147780",
    "end": "153342"
  },
  {
    "text": "Spotinst actually looks \nat the utilization",
    "start": "153342",
    "end": "155866"
  },
  {
    "text": "if it needs to scale, \nit increases the size of the cluster",
    "start": "155867",
    "end": "159093"
  },
  {
    "text": "with spot instances.",
    "start": "159093",
    "end": "160045"
  },
  {
    "text": "- Yeah, yeah he is listening \nall the time.",
    "start": "160045",
    "end": "161700"
  },
  {
    "text": "- So auto scaling and spot instances \nare running with Spark on Kubernetes;",
    "start": "161700",
    "end": "166748"
  },
  {
    "text": "that's got to be a major cost savings, \nright?",
    "start": "166748",
    "end": "169798"
  },
  {
    "text": "- Yeah, the number is about \n90% cost saving from all the setup.",
    "start": "169798",
    "end": "174172"
  },
  {
    "text": "- Great, sounds really good.",
    "start": "174172",
    "end": "175685"
  },
  {
    "text": "So, as far as I understand you have \nseveral different data sources",
    "start": "175685",
    "end": "180487"
  },
  {
    "text": "feeding into your dashboard -",
    "start": "180488",
    "end": "181936"
  },
  {
    "text": "I'm assuming due to different \ndata structure, access patterns.",
    "start": "181936",
    "end": "185068"
  },
  {
    "text": "Tell us a bit about those architectural \ndecisions that you made with those?",
    "start": "185068",
    "end": "188396"
  },
  {
    "start": "188000",
    "end": "259000"
  },
  {
    "text": "- So those have evolved\nthrough requirements",
    "start": "188396",
    "end": "191172"
  },
  {
    "text": "from our customers.",
    "start": "191173",
    "end": "192500"
  },
  {
    "text": "So in the beginning they were \nvery humble,",
    "start": "192500",
    "end": "194676"
  },
  {
    "text": "they just wanted to see how much revenue \nthey made the previous day,",
    "start": "194676",
    "end": "198112"
  },
  {
    "text": "seven days ago, 30 days ago,",
    "start": "198112",
    "end": "200430"
  },
  {
    "text": "and then they wanted to know \nsome more data.",
    "start": "200430",
    "end": "203441"
  },
  {
    "text": "They wanted to know how much \nthey make per country,",
    "start": "203442",
    "end": "206366"
  },
  {
    "text": "how much they make per application \nthat they own,",
    "start": "206366",
    "end": "208595"
  },
  {
    "text": "and still Cassandra is a very \ngood setup.",
    "start": "208595",
    "end": "211416"
  },
  {
    "text": "You can see a whole year of revenue \nin milliseconds -",
    "start": "211416",
    "end": "214419"
  },
  {
    "text": "Fast, cheap and very efficient.",
    "start": "214419",
    "end": "218014"
  },
  {
    "text": "And then they wanted more, \nthey wanted to see,",
    "start": "218014",
    "end": "221043"
  },
  {
    "text": "'Okay, so how am I doing per gender, \nhow am I doing per age,",
    "start": "221043",
    "end": "225733"
  },
  {
    "text": "how am I doing per creative ID, \ncampaign ID'",
    "start": "225733",
    "end": "228367"
  },
  {
    "text": "and 50 other more dimensions.",
    "start": "228367",
    "end": "231061"
  },
  {
    "text": "So that's the challenging thing, \n50 more dimensions",
    "start": "231061",
    "end": "235276"
  },
  {
    "text": "even if the cardinality is 10, \nit's 10 in the power of 50.",
    "start": "235276",
    "end": "240573"
  },
  {
    "text": "So, we really scratch our head \nand came out with Druid.",
    "start": "240573",
    "end": "245000"
  },
  {
    "text": "So, we have Druid with opensource \ncalled 'Pivot' in the UI;",
    "start": "245000",
    "end": "251750"
  },
  {
    "text": "you can drag and drop different \ndimensions,",
    "start": "251750",
    "end": "254937"
  },
  {
    "text": "and you can see your revenue per every \ncombination of dimensions that you like.",
    "start": "254937",
    "end": "259277"
  },
  {
    "start": "259000",
    "end": "344000"
  },
  {
    "text": "- So those are feeding the dashboard \nand what about Presto?",
    "start": "259277",
    "end": "262533"
  },
  {
    "text": "- So we have at Fyber a billion users \nusing our systems, so",
    "start": "262533",
    "end": "267520"
  },
  {
    "text": "we have a lot of data \nabout the users.",
    "start": "267520",
    "end": "269798"
  },
  {
    "text": "So you wamt to see a snapshot of \na billion different users",
    "start": "269799",
    "end": "274057"
  },
  {
    "text": "in one second, very fast, \nthis Druid cannot handle.",
    "start": "274057",
    "end": "278572"
  },
  {
    "text": "Druid is very good for data series, \nnot very good for snapshots.",
    "start": "278572",
    "end": "283136"
  },
  {
    "text": "So Presto is actually fit for the job \nand actually the people who developed it,",
    "start": "283136",
    "end": "289632"
  },
  {
    "text": "Facebook created Presto for exactly \nthe same purpose -",
    "start": "289632",
    "end": "293689"
  },
  {
    "text": "to power their audience setup \nin Facebook,",
    "start": "293689",
    "end": "297485"
  },
  {
    "text": "So the right tool for the job. \nIt's reading data directly from S3",
    "start": "297485",
    "end": "303134"
  },
  {
    "text": "because it's a database engine",
    "start": "303135",
    "end": "304751"
  },
  {
    "text": "and not a database per se like \nCassandra or Druid",
    "start": "304751",
    "end": "308403"
  },
  {
    "text": "and that's that.",
    "start": "308403",
    "end": "311219"
  },
  {
    "text": "- Great, so I really like the fact that \nthis architecture contains data...",
    "start": "311219",
    "end": "315817"
  },
  {
    "text": "a database engine like you mentioned \nin different databases",
    "start": "315817",
    "end": "318840"
  },
  {
    "text": "which are purposely built \nfor the job",
    "start": "318841",
    "end": "320871"
  },
  {
    "text": "instead of kind of a one size fits all \nand of course",
    "start": "320871",
    "end": "323608"
  },
  {
    "text": "Spark and Kubernetes is the next big thing.\nA lot of customers like that.",
    "start": "323608",
    "end": "327965"
  },
  {
    "text": "It sounds great that you're doing that \nwith auto scaling and spot instances.",
    "start": "327965",
    "end": "331436"
  },
  {
    "text": "Thanks very much for sharing. \n- Thank you for having me.",
    "start": "331437",
    "end": "334060"
  },
  {
    "text": "And thank you for watching, \n'This is My Architecture.'",
    "start": "334060",
    "end": "337061"
  }
]