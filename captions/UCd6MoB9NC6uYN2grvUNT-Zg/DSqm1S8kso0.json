[
  {
    "text": "hello everyone Welcome to our third",
    "start": "840",
    "end": "2960"
  },
  {
    "text": "video showing how to use verified",
    "start": "2960",
    "end": "5120"
  },
  {
    "text": "permissions with Amazon Cognito custom",
    "start": "5120",
    "end": "7279"
  },
  {
    "text": "access tokens to authenticate and",
    "start": "7279",
    "end": "9920"
  },
  {
    "text": "authorize user access to apis hosted on",
    "start": "9920",
    "end": "12639"
  },
  {
    "text": "API",
    "start": "12639",
    "end": "14120"
  },
  {
    "text": "Gateway my name is Kiran dongra working",
    "start": "14120",
    "end": "17240"
  },
  {
    "text": "as a Solutions architect in the",
    "start": "17240",
    "end": "18680"
  },
  {
    "text": "worldwide public sector at",
    "start": "18680",
    "end": "21760"
  },
  {
    "text": "AWS before diving into the details I",
    "start": "21760",
    "end": "24840"
  },
  {
    "text": "would like to highlight that we are",
    "start": "24840",
    "end": "27039"
  },
  {
    "text": "going to build on the Amazon verified",
    "start": "27039",
    "end": "29000"
  },
  {
    "text": "permissions construct",
    "start": "29000",
    "end": "30759"
  },
  {
    "text": "discussed in the quick start videos",
    "start": "30759",
    "end": "32800"
  },
  {
    "text": "shown",
    "start": "32800",
    "end": "34160"
  },
  {
    "text": "here if you haven't already watched",
    "start": "34160",
    "end": "36640"
  },
  {
    "text": "these two videos I recommend watching",
    "start": "36640",
    "end": "39320"
  },
  {
    "text": "them as we'll be using the concepts we",
    "start": "39320",
    "end": "41440"
  },
  {
    "text": "introduced",
    "start": "41440",
    "end": "43840"
  },
  {
    "text": "there in this video we are going to show",
    "start": "43840",
    "end": "46520"
  },
  {
    "text": "how to use Cognito access token",
    "start": "46520",
    "end": "48600"
  },
  {
    "text": "customization feature with ap to",
    "start": "48600",
    "end": "50960"
  },
  {
    "text": "implement attribute based Access",
    "start": "50960",
    "end": "53079"
  },
  {
    "text": "Control access tokens are the",
    "start": "53079",
    "end": "55039"
  },
  {
    "text": "recommended approach for API",
    "start": "55039",
    "end": "56600"
  },
  {
    "text": "authorization and with recent updates to",
    "start": "56600",
    "end": "59000"
  },
  {
    "text": "cognito you can now customize access",
    "start": "59000",
    "end": "61359"
  },
  {
    "text": "tokens to include custom user",
    "start": "61359",
    "end": "63879"
  },
  {
    "text": "claims here is the B overview of what we",
    "start": "63879",
    "end": "66560"
  },
  {
    "text": "are going to talk about in this",
    "start": "66560",
    "end": "68360"
  },
  {
    "text": "video we are going to configure Cognito",
    "start": "68360",
    "end": "71320"
  },
  {
    "text": "pre- toen generation Lambda trigger to",
    "start": "71320",
    "end": "74400"
  },
  {
    "text": "include custom claims in the access",
    "start": "74400",
    "end": "77880"
  },
  {
    "text": "tokens we will then update AP schema for",
    "start": "77880",
    "end": "81079"
  },
  {
    "text": "a specific API action to process token",
    "start": "81079",
    "end": "84560"
  },
  {
    "text": "context",
    "start": "84560",
    "end": "85840"
  },
  {
    "text": "attributes we will then create a policy",
    "start": "85840",
    "end": "88400"
  },
  {
    "text": "that leverage custom access token claims",
    "start": "88400",
    "end": "90520"
  },
  {
    "text": "for decision",
    "start": "90520",
    "end": "92119"
  },
  {
    "text": "making finally we validate authorization",
    "start": "92119",
    "end": "95600"
  },
  {
    "text": "flows using the enhanced access",
    "start": "95600",
    "end": "99240"
  },
  {
    "text": "tokens let's discuss about the pre- toen",
    "start": "99240",
    "end": "101840"
  },
  {
    "text": "generation Lambda trigger extension that",
    "start": "101840",
    "end": "104079"
  },
  {
    "text": "we'll be using for Access token",
    "start": "104079",
    "end": "106159"
  },
  {
    "text": "customization to enable fine grind",
    "start": "106159",
    "end": "108479"
  },
  {
    "text": "authorization capabilities with",
    "start": "108479",
    "end": "110719"
  },
  {
    "text": "ap the pre-t toen generation Lambda",
    "start": "110719",
    "end": "113200"
  },
  {
    "text": "trigger in cognito is a customization",
    "start": "113200",
    "end": "115360"
  },
  {
    "text": "feature that allows you to modify and",
    "start": "115360",
    "end": "117960"
  },
  {
    "text": "enhance token claims before they are",
    "start": "117960",
    "end": "122799"
  },
  {
    "text": "issued currently Cognito supports",
    "start": "122799",
    "end": "125399"
  },
  {
    "text": "trigger event versions 1 2 and",
    "start": "125399",
    "end": "129399"
  },
  {
    "text": "three with version one trigger event you",
    "start": "129399",
    "end": "132920"
  },
  {
    "text": "can customize ID",
    "start": "132920",
    "end": "134920"
  },
  {
    "text": "tokens and with version two and three",
    "start": "134920",
    "end": "137480"
  },
  {
    "text": "trigger",
    "start": "137480",
    "end": "138640"
  },
  {
    "text": "events that are only available with",
    "start": "138640",
    "end": "140879"
  },
  {
    "text": "Cognito Essentials and plus",
    "start": "140879",
    "end": "143280"
  },
  {
    "text": "TI you can customize access tokens for",
    "start": "143280",
    "end": "146360"
  },
  {
    "text": "both user and machine identities",
    "start": "146360",
    "end": "150560"
  },
  {
    "text": "the availability of trigger event",
    "start": "150560",
    "end": "153360"
  },
  {
    "text": "versions enables various use cases like",
    "start": "153360",
    "end": "156840"
  },
  {
    "text": "adding user attributes to tokens from",
    "start": "156840",
    "end": "159080"
  },
  {
    "text": "external",
    "start": "159080",
    "end": "160159"
  },
  {
    "text": "sources managing group",
    "start": "160159",
    "end": "162599"
  },
  {
    "text": "memberships and controlling",
    "start": "162599",
    "end": "165599"
  },
  {
    "text": "Scopes this functionality is",
    "start": "165599",
    "end": "167519"
  },
  {
    "text": "particularly valuable when you need to",
    "start": "167519",
    "end": "169360"
  },
  {
    "text": "integrate additional business logic or",
    "start": "169360",
    "end": "172280"
  },
  {
    "text": "security controls into your token",
    "start": "172280",
    "end": "174560"
  },
  {
    "text": "generation",
    "start": "174560",
    "end": "177120"
  },
  {
    "text": "process you would need to add a pre",
    "start": "177440",
    "end": "179879"
  },
  {
    "text": "token generation Lambda",
    "start": "179879",
    "end": "181959"
  },
  {
    "text": "trigger in the extension section of the",
    "start": "181959",
    "end": "184879"
  },
  {
    "text": "Cognito user pool",
    "start": "184879",
    "end": "188120"
  },
  {
    "text": "console and then you need to create a",
    "start": "188120",
    "end": "190360"
  },
  {
    "text": "Lambda function to customize access",
    "start": "190360",
    "end": "193840"
  },
  {
    "text": "tokens that enables you to add new",
    "start": "193840",
    "end": "197480"
  },
  {
    "text": "claims modify existing ones and suppress",
    "start": "197480",
    "end": "200560"
  },
  {
    "text": "specific claims and Scopes and also",
    "start": "200560",
    "end": "203640"
  },
  {
    "text": "override group memberships based on your",
    "start": "203640",
    "end": "206360"
  },
  {
    "text": "application",
    "start": "206360",
    "end": "208280"
  },
  {
    "text": "requirements I already created a Lambda",
    "start": "208280",
    "end": "210760"
  },
  {
    "text": "trigger with version two trigger",
    "start": "210760",
    "end": "214120"
  },
  {
    "text": "event and attached Lambda function to",
    "start": "214120",
    "end": "217760"
  },
  {
    "text": "the",
    "start": "217760",
    "end": "218959"
  },
  {
    "text": "trigger so I'm not going to create this",
    "start": "218959",
    "end": "221480"
  },
  {
    "text": "freshly",
    "start": "221480",
    "end": "223640"
  },
  {
    "text": "now we are going to walk through the",
    "start": "223640",
    "end": "225840"
  },
  {
    "text": "Lambda function in further sections of",
    "start": "225840",
    "end": "228239"
  },
  {
    "text": "this",
    "start": "228239",
    "end": "230480"
  },
  {
    "text": "video now let's have a look at the end",
    "start": "231439",
    "end": "233840"
  },
  {
    "text": "to end architecture flow to understand",
    "start": "233840",
    "end": "235680"
  },
  {
    "text": "how verified permissions uses custom",
    "start": "235680",
    "end": "237640"
  },
  {
    "text": "claim from access token to authorize",
    "start": "237640",
    "end": "240360"
  },
  {
    "text": "access to the protected",
    "start": "240360",
    "end": "242840"
  },
  {
    "text": "resources we have an application using",
    "start": "242840",
    "end": "245200"
  },
  {
    "text": "Amazon Cognito as the identity provider",
    "start": "245200",
    "end": "248280"
  },
  {
    "text": "when a user logs into the application",
    "start": "248280",
    "end": "250599"
  },
  {
    "text": "Cognito authenticates the user and",
    "start": "250599",
    "end": "252400"
  },
  {
    "text": "generates a custom access token using",
    "start": "252400",
    "end": "255239"
  },
  {
    "text": "the pre- token generation Lambda",
    "start": "255239",
    "end": "258440"
  },
  {
    "text": "trigger as part of the access token",
    "start": "258440",
    "end": "261160"
  },
  {
    "text": "customization custom claim store",
    "start": "261160",
    "end": "263320"
  },
  {
    "text": "location is added to the access",
    "start": "263320",
    "end": "266440"
  },
  {
    "text": "token with this access token user can",
    "start": "266440",
    "end": "269560"
  },
  {
    "text": "then then request backend pet store API",
    "start": "269560",
    "end": "273680"
  },
  {
    "text": "resources here the client makes a API",
    "start": "273720",
    "end": "276600"
  },
  {
    "text": "request using the access token receive",
    "start": "276600",
    "end": "278520"
  },
  {
    "text": "from",
    "start": "278520",
    "end": "280759"
  },
  {
    "text": "Cognito the API Gateway serves as the",
    "start": "281080",
    "end": "283680"
  },
  {
    "text": "policy enforcement",
    "start": "283680",
    "end": "285320"
  },
  {
    "text": "point where it stops the request and",
    "start": "285320",
    "end": "288120"
  },
  {
    "text": "executes a custom Lambda",
    "start": "288120",
    "end": "291080"
  },
  {
    "text": "authorizer the authorizer performs is",
    "start": "291080",
    "end": "294080"
  },
  {
    "text": "authorized with token called to verified",
    "start": "294080",
    "end": "296039"
  },
  {
    "text": "permissions for a policy decision",
    "start": "296039",
    "end": "299840"
  },
  {
    "text": "AP acts as a policy decision point and",
    "start": "299840",
    "end": "303560"
  },
  {
    "text": "responds with an allow or deny decision",
    "start": "303560",
    "end": "305840"
  },
  {
    "text": "to the Lambda",
    "start": "305840",
    "end": "308080"
  },
  {
    "text": "authorizer the decision is then enforced",
    "start": "308080",
    "end": "310680"
  },
  {
    "text": "by the API Gateway to control access to",
    "start": "310680",
    "end": "313800"
  },
  {
    "text": "the backend API resources shown",
    "start": "313800",
    "end": "317840"
  },
  {
    "text": "here before walking through further",
    "start": "318720",
    "end": "320880"
  },
  {
    "text": "sections of the demo please note that",
    "start": "320880",
    "end": "322919"
  },
  {
    "text": "you need to have Cognito Essentials or",
    "start": "322919",
    "end": "324840"
  },
  {
    "text": "plus plan for the Cognito user pool you",
    "start": "324840",
    "end": "326680"
  },
  {
    "text": "are going to use in order to be able to",
    "start": "326680",
    "end": "329120"
  },
  {
    "text": "customize access token Scopes and claims",
    "start": "329120",
    "end": "331560"
  },
  {
    "text": "at",
    "start": "331560",
    "end": "333759"
  },
  {
    "text": "runtime we are going to work on top of",
    "start": "336319",
    "end": "338800"
  },
  {
    "text": "resources created already using the",
    "start": "338800",
    "end": "340800"
  },
  {
    "text": "guidance provided in quick start videos",
    "start": "340800",
    "end": "343240"
  },
  {
    "text": "that I recapped",
    "start": "343240",
    "end": "344680"
  },
  {
    "text": "earlier let's start by reviewing our",
    "start": "344680",
    "end": "346840"
  },
  {
    "text": "current pet store",
    "start": "346840",
    "end": "349160"
  },
  {
    "text": "API the API has two main resource paths",
    "start": "349160",
    "end": "352400"
  },
  {
    "text": "/ pets with get and post",
    "start": "352400",
    "end": "356199"
  },
  {
    "text": "methods and the second resource path",
    "start": "356479",
    "end": "360360"
  },
  {
    "text": "slid has get and delete",
    "start": "360360",
    "end": "364520"
  },
  {
    "text": "methods as you notice the resources are",
    "start": "365440",
    "end": "368319"
  },
  {
    "text": "protected by custom Lambda authorizers",
    "start": "368319",
    "end": "371520"
  },
  {
    "text": "that interacts with ap for policy",
    "start": "371520",
    "end": "374160"
  },
  {
    "text": "decision let's now switch to the AP",
    "start": "374160",
    "end": "376800"
  },
  {
    "text": "policy store and review it the AVP",
    "start": "376800",
    "end": "379960"
  },
  {
    "text": "policy store has already been configured",
    "start": "379960",
    "end": "382039"
  },
  {
    "text": "to use access token for API",
    "start": "382039",
    "end": "385919"
  },
  {
    "text": "authorization the AP policies here use",
    "start": "385919",
    "end": "388599"
  },
  {
    "text": "role based access control are",
    "start": "388599",
    "end": "391280"
  },
  {
    "text": "back and the access is determined by",
    "start": "391280",
    "end": "393960"
  },
  {
    "text": "evaluating the group membership claim in",
    "start": "393960",
    "end": "395800"
  },
  {
    "text": "the Cognito access",
    "start": "395800",
    "end": "398840"
  },
  {
    "text": "token in the first policy customer group",
    "start": "399880",
    "end": "403400"
  },
  {
    "text": "members can only perform get",
    "start": "403400",
    "end": "407280"
  },
  {
    "text": "actions while in the second",
    "start": "408319",
    "end": "411039"
  },
  {
    "text": "policy employee group can perform get",
    "start": "411039",
    "end": "414520"
  },
  {
    "text": "and post actions",
    "start": "414520",
    "end": "418080"
  },
  {
    "text": "now let's see how to add custom claim",
    "start": "421000",
    "end": "423319"
  },
  {
    "text": "store location to the access",
    "start": "423319",
    "end": "426080"
  },
  {
    "text": "token we will use Cognito pre- token",
    "start": "426080",
    "end": "429199"
  },
  {
    "text": "generation Lambda trigger for this",
    "start": "429199",
    "end": "432520"
  },
  {
    "text": "one I've already created a Lambda",
    "start": "432520",
    "end": "435039"
  },
  {
    "text": "trigger and attached Lambda function to",
    "start": "435039",
    "end": "437199"
  },
  {
    "text": "the",
    "start": "437199",
    "end": "439319"
  },
  {
    "text": "trigger let's review the Lambda function",
    "start": "440319",
    "end": "442879"
  },
  {
    "text": "code",
    "start": "442879",
    "end": "445879"
  },
  {
    "text": "in the following code I use the claims",
    "start": "450039",
    "end": "452479"
  },
  {
    "text": "to add or override field within the",
    "start": "452479",
    "end": "454479"
  },
  {
    "text": "access token Generation section to",
    "start": "454479",
    "end": "457080"
  },
  {
    "text": "create a new custom claim called store",
    "start": "457080",
    "end": "460039"
  },
  {
    "text": "location with a value of user attribute",
    "start": "460039",
    "end": "462919"
  },
  {
    "text": "custom location passed from the event",
    "start": "462919",
    "end": "467120"
  },
  {
    "text": "request let's see the custom attributes",
    "start": "468560",
    "end": "471479"
  },
  {
    "text": "in the cognitive user",
    "start": "471479",
    "end": "474840"
  },
  {
    "text": "pool note that the custom attrib",
    "start": "476039",
    "end": "479759"
  },
  {
    "text": "location has a value of",
    "start": "479759",
    "end": "482720"
  },
  {
    "text": "Denver for the user Kiran who is going",
    "start": "482720",
    "end": "486479"
  },
  {
    "text": "to attempt access to the API",
    "start": "486479",
    "end": "489479"
  },
  {
    "text": "resource when the user Kiran attempts to",
    "start": "489479",
    "end": "492560"
  },
  {
    "text": "log in the value present in the custom",
    "start": "492560",
    "end": "495080"
  },
  {
    "text": "user attribute",
    "start": "495080",
    "end": "498280"
  },
  {
    "text": "location which has been set with value",
    "start": "498280",
    "end": "500879"
  },
  {
    "text": "Denver is assigned to custom access",
    "start": "500879",
    "end": "503879"
  },
  {
    "text": "token claim store",
    "start": "503879",
    "end": "506280"
  },
  {
    "text": "location that we are creating here in",
    "start": "506280",
    "end": "508560"
  },
  {
    "text": "the access token customization",
    "start": "508560",
    "end": "510919"
  },
  {
    "text": "section now we are going to consume the",
    "start": "510919",
    "end": "513320"
  },
  {
    "text": "store location claim in an AVP policy to",
    "start": "513320",
    "end": "516880"
  },
  {
    "text": "make authorization decision based on the",
    "start": "516880",
    "end": "519000"
  },
  {
    "text": "users assigned store",
    "start": "519000",
    "end": "521039"
  },
  {
    "text": "location let's see this in",
    "start": "521039",
    "end": "524240"
  },
  {
    "text": "action first of all we need to make",
    "start": "524240",
    "end": "526760"
  },
  {
    "text": "changes to the AP schema to accept",
    "start": "526760",
    "end": "529560"
  },
  {
    "text": "custom claim presented in the access",
    "start": "529560",
    "end": "531880"
  },
  {
    "text": "token we're going to focus on delete Pet",
    "start": "531880",
    "end": "535240"
  },
  {
    "text": "action and configure it to use the",
    "start": "535240",
    "end": "537880"
  },
  {
    "text": "access token claims",
    "start": "537880",
    "end": "540440"
  },
  {
    "text": "let's switch to the Json mode and see",
    "start": "540440",
    "end": "542680"
  },
  {
    "text": "the changes I made to the",
    "start": "542680",
    "end": "545880"
  },
  {
    "text": "schema Cedar policies provides a way for",
    "start": "548560",
    "end": "551560"
  },
  {
    "text": "you to write a policy that takes into",
    "start": "551560",
    "end": "553800"
  },
  {
    "text": "account variables that are unrelated to",
    "start": "553800",
    "end": "556000"
  },
  {
    "text": "either the principle or resource using",
    "start": "556000",
    "end": "559279"
  },
  {
    "text": "context",
    "start": "559279",
    "end": "561800"
  },
  {
    "text": "record context enables you to pass",
    "start": "563560",
    "end": "567079"
  },
  {
    "text": "additional data in the authorization",
    "start": "567079",
    "end": "568839"
  },
  {
    "text": "request",
    "start": "568839",
    "end": "569959"
  },
  {
    "text": "which can be referenced in policy",
    "start": "569959",
    "end": "572800"
  },
  {
    "text": "conditions examples of context data you",
    "start": "572800",
    "end": "575480"
  },
  {
    "text": "might use are open ID claims in a JWT",
    "start": "575480",
    "end": "578640"
  },
  {
    "text": "token or anything else that is only",
    "start": "578640",
    "end": "581120"
  },
  {
    "text": "known at the time of incoming request",
    "start": "581120",
    "end": "584240"
  },
  {
    "text": "and not necessarily stored in your",
    "start": "584240",
    "end": "587279"
  },
  {
    "text": "database we need to make sure that",
    "start": "587279",
    "end": "590040"
  },
  {
    "text": "schema includes the custom claim",
    "start": "590040",
    "end": "591760"
  },
  {
    "text": "definition in the context",
    "start": "591760",
    "end": "594720"
  },
  {
    "text": "record it is important to note that",
    "start": "594720",
    "end": "597399"
  },
  {
    "text": "access token claims are mapped to Conta",
    "start": "597399",
    "end": "599360"
  },
  {
    "text": "text record objects while ID token",
    "start": "599360",
    "end": "601560"
  },
  {
    "text": "claims are mapped to",
    "start": "601560",
    "end": "603519"
  },
  {
    "text": "principal here we are defining that",
    "start": "603519",
    "end": "606240"
  },
  {
    "text": "delete action against a pet",
    "start": "606240",
    "end": "609680"
  },
  {
    "text": "ID expects",
    "start": "609680",
    "end": "612839"
  },
  {
    "text": "context object to have store location",
    "start": "612839",
    "end": "616360"
  },
  {
    "text": "custom",
    "start": "616360",
    "end": "618839"
  },
  {
    "text": "claim now let's create a new policy to",
    "start": "619560",
    "end": "622360"
  },
  {
    "text": "use this custom claim for policy",
    "start": "622360",
    "end": "626160"
  },
  {
    "text": "decision I'm going to create a policy",
    "start": "626399",
    "end": "629440"
  },
  {
    "text": "using Create policy create static",
    "start": "629440",
    "end": "633519"
  },
  {
    "text": "policy",
    "start": "633519",
    "end": "635760"
  },
  {
    "text": "next and then I'm going to put a",
    "start": "635760",
    "end": "638680"
  },
  {
    "text": "description for the policy say that",
    "start": "638680",
    "end": "641519"
  },
  {
    "text": "employees at Houston store location can",
    "start": "641519",
    "end": "644120"
  },
  {
    "text": "delete their",
    "start": "644120",
    "end": "645210"
  },
  {
    "text": "[Music]",
    "start": "645210",
    "end": "648320"
  },
  {
    "text": "pets creating the",
    "start": "648639",
    "end": "652320"
  },
  {
    "text": "policy this policy allows employ",
    "start": "656200",
    "end": "660880"
  },
  {
    "text": "is to delete Pets only from their",
    "start": "660880",
    "end": "664519"
  },
  {
    "text": "assigned store",
    "start": "664519",
    "end": "666720"
  },
  {
    "text": "location that is",
    "start": "666720",
    "end": "669079"
  },
  {
    "text": "Houston which is passed through the",
    "start": "669079",
    "end": "672320"
  },
  {
    "text": "context",
    "start": "672320",
    "end": "675320"
  },
  {
    "text": "record for demo purposes I have used a",
    "start": "676760",
    "end": "679760"
  },
  {
    "text": "static value ideally the location",
    "start": "679760",
    "end": "682800"
  },
  {
    "text": "variable should be fetched at runtime to",
    "start": "682800",
    "end": "685560"
  },
  {
    "text": "minimize the number of policies and to",
    "start": "685560",
    "end": "687760"
  },
  {
    "text": "scale the policies efficiently",
    "start": "687760",
    "end": "691240"
  },
  {
    "text": "now we have the schema updated and a new",
    "start": "692760",
    "end": "694920"
  },
  {
    "text": "policy created for employees at Houston",
    "start": "694920",
    "end": "696839"
  },
  {
    "text": "location to be able to delete their bets",
    "start": "696839",
    "end": "699880"
  },
  {
    "text": "now let's walk through the",
    "start": "699880",
    "end": "700839"
  },
  {
    "text": "authentication and authorization flows",
    "start": "700839",
    "end": "702680"
  },
  {
    "text": "using",
    "start": "702680",
    "end": "705040"
  },
  {
    "text": "Postman in the earlier sections of this",
    "start": "707200",
    "end": "709680"
  },
  {
    "text": "video we have seen a Cognito user pool",
    "start": "709680",
    "end": "711880"
  },
  {
    "text": "user Kiran who is a pet store employee",
    "start": "711880",
    "end": "714760"
  },
  {
    "text": "and assigned to Denver store using",
    "start": "714760",
    "end": "716560"
  },
  {
    "text": "custom location",
    "start": "716560",
    "end": "718240"
  },
  {
    "text": "attribute now let's perform",
    "start": "718240",
    "end": "720160"
  },
  {
    "text": "authentication against my Cognito user",
    "start": "720160",
    "end": "724399"
  },
  {
    "text": "pool for",
    "start": "727360",
    "end": "730639"
  },
  {
    "text": "Kieran after successful login I'm going",
    "start": "733639",
    "end": "736760"
  },
  {
    "text": "to get the ID and access",
    "start": "736760",
    "end": "739560"
  },
  {
    "text": "tokens now let's see the claims present",
    "start": "739560",
    "end": "742040"
  },
  {
    "text": "in the access",
    "start": "742040",
    "end": "744720"
  },
  {
    "text": "token in a JWT viewer",
    "start": "746040",
    "end": "751040"
  },
  {
    "text": "as you see the custom claim store",
    "start": "756279",
    "end": "758399"
  },
  {
    "text": "location has value",
    "start": "758399",
    "end": "761680"
  },
  {
    "text": "Denver which has been set using the",
    "start": "762920",
    "end": "765240"
  },
  {
    "text": "pre-t toen generation Lambda trigger for",
    "start": "765240",
    "end": "768160"
  },
  {
    "text": "user",
    "start": "768160",
    "end": "770160"
  },
  {
    "text": "Kiran who is part of Group",
    "start": "770160",
    "end": "774759"
  },
  {
    "text": "Employee let's refresh the tokens in my",
    "start": "776320",
    "end": "779240"
  },
  {
    "text": "API resource access",
    "start": "779240",
    "end": "781959"
  },
  {
    "text": "tab refresh my",
    "start": "781959",
    "end": "785040"
  },
  {
    "text": "token update my",
    "start": "785040",
    "end": "788399"
  },
  {
    "text": "token now I'm going to perform a couple",
    "start": "788399",
    "end": "790920"
  },
  {
    "text": "of API actions first start with get all",
    "start": "790920",
    "end": "796600"
  },
  {
    "text": "pets we got all the pets now let's get a",
    "start": "798120",
    "end": "802440"
  },
  {
    "text": "pet by pet ID",
    "start": "802440",
    "end": "806480"
  },
  {
    "text": "say 33",
    "start": "806480",
    "end": "810480"
  },
  {
    "text": "we got the pet as expected they are",
    "start": "813000",
    "end": "815199"
  },
  {
    "text": "allowed because of the matching policy",
    "start": "815199",
    "end": "817560"
  },
  {
    "text": "defined for",
    "start": "817560",
    "end": "819079"
  },
  {
    "text": "employees now let's try delete",
    "start": "819079",
    "end": "823360"
  },
  {
    "text": "action it should result in deny",
    "start": "824639",
    "end": "827800"
  },
  {
    "text": "decision let's",
    "start": "827800",
    "end": "831040"
  },
  {
    "text": "see as expected this is denied because",
    "start": "831360",
    "end": "834480"
  },
  {
    "text": "there is no matching policy that allows",
    "start": "834480",
    "end": "836519"
  },
  {
    "text": "this delete action",
    "start": "836519",
    "end": "839920"
  },
  {
    "text": "by default AVP returns deny when there",
    "start": "839920",
    "end": "844199"
  },
  {
    "text": "is no matching",
    "start": "844199",
    "end": "846519"
  },
  {
    "text": "policy let's see the policy",
    "start": "846519",
    "end": "850560"
  },
  {
    "text": "window the deny policy we created",
    "start": "851440",
    "end": "854320"
  },
  {
    "text": "earlier expect store location to be",
    "start": "854320",
    "end": "858839"
  },
  {
    "text": "Houston as store location is Denver for",
    "start": "859160",
    "end": "862519"
  },
  {
    "text": "Kiran the policy didn't match and so the",
    "start": "862519",
    "end": "865480"
  },
  {
    "text": "resulting decision is denied",
    "start": "865480",
    "end": "869600"
  },
  {
    "text": "now let's assume Kiran has been",
    "start": "870279",
    "end": "871959"
  },
  {
    "text": "transferred to Houston location to",
    "start": "871959",
    "end": "874720"
  },
  {
    "text": "simulate this let's update kiran's",
    "start": "874720",
    "end": "877079"
  },
  {
    "text": "location to Houston in cognito user pool",
    "start": "877079",
    "end": "880120"
  },
  {
    "text": "and reauthenticate using",
    "start": "880120",
    "end": "883560"
  },
  {
    "text": "Postman update",
    "start": "884800",
    "end": "888000"
  },
  {
    "text": "attribute change it",
    "start": "888000",
    "end": "890240"
  },
  {
    "text": "to",
    "start": "890240",
    "end": "893240"
  },
  {
    "text": "Houston save",
    "start": "893600",
    "end": "897000"
  },
  {
    "text": "changes now let's reauthenticate using",
    "start": "898040",
    "end": "903600"
  },
  {
    "text": "Postman successful authentication grab",
    "start": "908440",
    "end": "912440"
  },
  {
    "text": "my access",
    "start": "912440",
    "end": "914440"
  },
  {
    "text": "token now let's",
    "start": "914440",
    "end": "917600"
  },
  {
    "text": "see the contents of this new",
    "start": "917600",
    "end": "922240"
  },
  {
    "text": "token as you see here for",
    "start": "922320",
    "end": "925720"
  },
  {
    "text": "Kiran the store location has been",
    "start": "925720",
    "end": "928519"
  },
  {
    "text": "updated to Houston using",
    "start": "928519",
    "end": "931199"
  },
  {
    "text": "the",
    "start": "931199",
    "end": "934199"
  },
  {
    "text": "trigger now I think we have required",
    "start": "937639",
    "end": "940040"
  },
  {
    "text": "context record data to perform delete",
    "start": "940040",
    "end": "942160"
  },
  {
    "text": "action against a pet now let's refresh",
    "start": "942160",
    "end": "944839"
  },
  {
    "text": "the token to get a new value for store",
    "start": "944839",
    "end": "947040"
  },
  {
    "text": "location custom claim switching to",
    "start": "947040",
    "end": "951360"
  },
  {
    "text": "postman refresh",
    "start": "951360",
    "end": "954959"
  },
  {
    "text": "token date my token",
    "start": "955040",
    "end": "959199"
  },
  {
    "text": "now let's perform delete action against",
    "start": "959199",
    "end": "963680"
  },
  {
    "text": "pet",
    "start": "963680",
    "end": "965480"
  },
  {
    "text": "77 it should result in allow decision",
    "start": "965480",
    "end": "968519"
  },
  {
    "text": "because of the matching policy we",
    "start": "968519",
    "end": "970079"
  },
  {
    "text": "created earlier for",
    "start": "970079",
    "end": "972839"
  },
  {
    "text": "Houston let's",
    "start": "972839",
    "end": "976120"
  },
  {
    "text": "check deleted the item",
    "start": "977440",
    "end": "980360"
  },
  {
    "text": "77 as expected it is allowed",
    "start": "980360",
    "end": "984440"
  },
  {
    "text": "because there is a policy which expects",
    "start": "984440",
    "end": "987839"
  },
  {
    "text": "store location to be Houston and access",
    "start": "987839",
    "end": "990560"
  },
  {
    "text": "token claim also has Value",
    "start": "990560",
    "end": "994720"
  },
  {
    "text": "Houston let's see the policy",
    "start": "994720",
    "end": "998680"
  },
  {
    "text": "window this this is a policy we created",
    "start": "999240",
    "end": "1002240"
  },
  {
    "text": "earlier for Houston",
    "start": "1002240",
    "end": "1005199"
  },
  {
    "text": "location with constraint",
    "start": "1005199",
    "end": "1007759"
  },
  {
    "text": "for store",
    "start": "1007759",
    "end": "1011120"
  },
  {
    "text": "location in the real world scenarios you",
    "start": "1011120",
    "end": "1014000"
  },
  {
    "text": "should consider fetching the values",
    "start": "1014000",
    "end": "1015759"
  },
  {
    "text": "dynamically by referencing resource",
    "start": "1015759",
    "end": "1017880"
  },
  {
    "text": "attributes such as resource. store",
    "start": "1017880",
    "end": "1022079"
  },
  {
    "text": "location as shown in the commented",
    "start": "1022279",
    "end": "1024400"
  },
  {
    "text": "section",
    "start": "1024400",
    "end": "1026880"
  },
  {
    "text": "here this brings us to the end of the",
    "start": "1028919",
    "end": "1031319"
  },
  {
    "text": "session let's quickly summarize what we",
    "start": "1031319",
    "end": "1033798"
  },
  {
    "text": "discussed here in this video we have",
    "start": "1033799",
    "end": "1036199"
  },
  {
    "text": "seen how to customize Cognito access",
    "start": "1036199",
    "end": "1038720"
  },
  {
    "text": "tokens with a pre- toen generation",
    "start": "1038720",
    "end": "1040360"
  },
  {
    "text": "Lambda",
    "start": "1040360",
    "end": "1042079"
  },
  {
    "text": "trigger we updated AVP schema to include",
    "start": "1042079",
    "end": "1045400"
  },
  {
    "text": "customized access token claims in the",
    "start": "1045400",
    "end": "1047918"
  },
  {
    "text": "requested API",
    "start": "1047919",
    "end": "1050840"
  },
  {
    "text": "context we created a new AP policy to",
    "start": "1051440",
    "end": "1054840"
  },
  {
    "text": "make authorization decision based on",
    "start": "1054840",
    "end": "1057360"
  },
  {
    "text": "custom claim store location that is",
    "start": "1057360",
    "end": "1059799"
  },
  {
    "text": "presented in the access",
    "start": "1059799",
    "end": "1062080"
  },
  {
    "text": "token as you noticed Cognito access",
    "start": "1062080",
    "end": "1065160"
  },
  {
    "text": "token customization enables more secure",
    "start": "1065160",
    "end": "1068320"
  },
  {
    "text": "and Powerful attribute based Access",
    "start": "1068320",
    "end": "1070440"
  },
  {
    "text": "Control",
    "start": "1070440",
    "end": "1072320"
  },
  {
    "text": "scenarios AVP can use customized access",
    "start": "1072320",
    "end": "1075240"
  },
  {
    "text": "token claims to make fine gr",
    "start": "1075240",
    "end": "1077000"
  },
  {
    "text": "authorization decisions",
    "start": "1077000",
    "end": "1080000"
  },
  {
    "text": "by combining role based access control",
    "start": "1080000",
    "end": "1082039"
  },
  {
    "text": "with attribute based Access Control AVP",
    "start": "1082039",
    "end": "1085280"
  },
  {
    "text": "creates a robust fine Grand",
    "start": "1085280",
    "end": "1087360"
  },
  {
    "text": "authorization",
    "start": "1087360",
    "end": "1090039"
  },
  {
    "text": "model please take a note of following",
    "start": "1090200",
    "end": "1093039"
  },
  {
    "text": "resources thank you for watching",
    "start": "1093039",
    "end": "1097559"
  }
]