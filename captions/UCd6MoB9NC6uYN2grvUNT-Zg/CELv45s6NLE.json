[
  {
    "start": "0",
    "end": "54000"
  },
  {
    "text": "right so when I first just thank you all for coming out here thanks for attending reinvent pretty meaty session as I",
    "start": "0",
    "end": "6060"
  },
  {
    "text": "mentioned before we we got started now if you're like me and a lot of customers are first time you went out and you",
    "start": "6060",
    "end": "12120"
  },
  {
    "text": "created your AWS account you're kind of like the loan developer working on a single project probably didn't care too",
    "start": "12120",
    "end": "18660"
  },
  {
    "text": "much about how you manage that account because you were a team of one over time team grows you start adding people and",
    "start": "18660",
    "end": "25289"
  },
  {
    "text": "you start to think okay should I really be sharing that same username and password with root credentials everyone here your team so if you're in Europe in",
    "start": "25289",
    "end": "32550"
  },
  {
    "text": "that boat or you've gotten to that stage in your use of AWS then you're in the right place because for the next 50",
    "start": "32550",
    "end": "37559"
  },
  {
    "text": "minutes we're going to talk about how you delegate access to your AWS environment my name is Jeff we're and",
    "start": "37559",
    "end": "43050"
  },
  {
    "text": "I'm a product manager on the identity and access management team I'll probably refer to that is I am through the",
    "start": "43050",
    "end": "48420"
  },
  {
    "text": "through the session so I want to go",
    "start": "48420",
    "end": "53430"
  },
  {
    "text": "through some of the goals for this talk really the two things I want to get through this so first is an",
    "start": "53430",
    "end": "59129"
  },
  {
    "start": "54000",
    "end": "54000"
  },
  {
    "text": "understanding of the technology used to delegate access specifically we're going to be talking about the security token",
    "start": "59129",
    "end": "64978"
  },
  {
    "text": "service i'm going to call them at sts for the next forty nine minutes and how you use roles to delegate access there's",
    "start": "64979",
    "end": "72270"
  },
  {
    "text": "two types of sessions that we're going to hone in on during this presentation those are sessions that are role-based sessions and then there's also federated",
    "start": "72270",
    "end": "79290"
  },
  {
    "text": "sessions there's some differences between them pros and cons and towards the end I'm going to show you a couple",
    "start": "79290",
    "end": "84780"
  },
  {
    "text": "different scenarios and how you use them and towards again I'll give you some strategies on one to choose which type",
    "start": "84780",
    "end": "90030"
  },
  {
    "text": "of session for your application throughout the presentation I'm going to be using some use cases some demo",
    "start": "90030",
    "end": "95729"
  },
  {
    "text": "scenarios to showcase this we're going to be looking at cross account API access this is something that we just",
    "start": "95729",
    "end": "101520"
  },
  {
    "text": "announced last week and we're also going to go look at a couple Federation examples doing API Federation as well as",
    "start": "101520",
    "end": "108420"
  },
  {
    "text": "single sign on to the management console since this is a pretty detailed talk I",
    "start": "108420",
    "end": "114360"
  },
  {
    "text": "thought I'd just start off with a demonstration actually this is still in",
    "start": "114360",
    "end": "120299"
  },
  {
    "text": "the slides here so the first one that I want to go through is how you do single sign on to the AWS management console",
    "start": "120299",
    "end": "126840"
  },
  {
    "start": "121000",
    "end": "121000"
  },
  {
    "text": "and before the demo I'll walk through a very brief diagram just kind of showing the process once again I'll try to put",
    "start": "126840",
    "end": "133440"
  },
  {
    "text": "urls in the presentation so for those of you who are interested in the code you can go to that URL and you can download",
    "start": "133440",
    "end": "138570"
  },
  {
    "text": "it in this scenario here we're going to be looking at a customer who's using desktops that are joined to an Active",
    "start": "138570",
    "end": "145380"
  },
  {
    "text": "Directory domain so users going to sign into their their workstation they're going to be authenticated by active",
    "start": "145380",
    "end": "150870"
  },
  {
    "text": "directory and then they're going to hit an internal proxy server or broker all right when you hit that broker you're",
    "start": "150870",
    "end": "157020"
  },
  {
    "text": "going to go in you're going to be able to select the role that you want to play inside of AWS and by selecting that role",
    "start": "157020",
    "end": "162510"
  },
  {
    "text": "and clicking sign in I'm going to be automatically logged into the AWS console without having to use your AWS",
    "start": "162510",
    "end": "168930"
  },
  {
    "text": "username and password without having to create an IM user or anything like that so let me show you how that works so one",
    "start": "168930",
    "end": "178650"
  },
  {
    "text": "of the things we just if any of you subscribe to the AWS blog we just actually announced this morning so once",
    "start": "178650",
    "end": "185010"
  },
  {
    "text": "again this is kind of the sample code that I'm going to be going through for this part of the demo and you can go",
    "start": "185010",
    "end": "190590"
  },
  {
    "text": "here and you can download it is a little crazy in there one of the things that we",
    "start": "190590",
    "end": "197040"
  },
  {
    "text": "actually provide is of course the documentation the source but for those of you who just want to play with it we",
    "start": "197040",
    "end": "202200"
  },
  {
    "text": "also created an msi so you can double-click that it walks you through a wizard except the EULA and then you put",
    "start": "202200",
    "end": "210450"
  },
  {
    "text": "in some configuration and what this is going to do is it going to deploy an IAS site and Internet information server",
    "start": "210450",
    "end": "215850"
  },
  {
    "text": "site on a Windows Server I should probably describe the environment a little bit I as any good chef would do",
    "start": "215850",
    "end": "221850"
  },
  {
    "text": "I've already had this cooking in the oven so I've already got this deployed my environment here is actually a",
    "start": "221850",
    "end": "227430"
  },
  {
    "text": "Windows Server I've created my own domain and I've logged into that domain as a user so what i can do is open up",
    "start": "227430",
    "end": "239880"
  },
  {
    "text": "another tab here and i'm just going to hit that proxy server so i get signed in",
    "start": "239880",
    "end": "245489"
  },
  {
    "text": "to the AWS management console and from this drop-down i have two options i can log in as an admin or i can log in as an",
    "start": "245489",
    "end": "251850"
  },
  {
    "text": "s3 user so the question is how did those get there how did I how did I magically create those so I'm going to bring up",
    "start": "251850",
    "end": "258239"
  },
  {
    "text": "the Active Directory administration Center this is just one of those standard tools you get with windows server and then there I've created a",
    "start": "258239",
    "end": "264390"
  },
  {
    "text": "user for myself so there I am Jeff and if you look at that user i'm a",
    "start": "264390",
    "end": "271949"
  },
  {
    "text": "member of a number of groups couple built in groups like domain admins and domain users and then there's a couple groups that i created AWS admins and AWS",
    "start": "271949",
    "end": "279659"
  },
  {
    "text": "s3 users now what that proxy server is actually doing is it's looking at my user group membership it's creating a",
    "start": "279659",
    "end": "286919"
  },
  {
    "text": "list of all the groups i'm a member of and then it's also going over to my account sorry and it's looking at the",
    "start": "286919",
    "end": "298199"
  },
  {
    "text": "roles so here in my AWS account i have an AWS s3 users and i have an AWS admins",
    "start": "298199",
    "end": "304520"
  },
  {
    "text": "role and it's doing the intersection of the group members that i have an active directory along with the roles that i",
    "start": "304520",
    "end": "310590"
  },
  {
    "text": "have in my AWS account and that's what's populating that list and so now when I go here I can just select the role that",
    "start": "310590",
    "end": "317849"
  },
  {
    "text": "I want click Sign In and i'm in i'm in my account the only difference you'll",
    "start": "317849",
    "end": "323370"
  },
  {
    "text": "see up here is instead of logging in is my route or as an IM user it's actually showing that i'm assuming a role that's",
    "start": "323370",
    "end": "329340"
  },
  {
    "text": "all you need to do to be able to log into the management console",
    "start": "329340",
    "end": "334279"
  },
  {
    "text": "so the question is and I should probably I should probably mention I'll probably hold questions to the end just because",
    "start": "339090",
    "end": "344680"
  },
  {
    "text": "I'm going to need every minute but it's this is an easy one to answer the question is do I need to create any users inside of I am and the answer is",
    "start": "344680",
    "end": "352090"
  },
  {
    "text": "no so this is all managed inside of active directory for this sample so I",
    "start": "352090",
    "end": "357280"
  },
  {
    "text": "know I went through that pretty quickly and so some of you may say okay wait a minute what did Jeff just do I'll review",
    "start": "357280",
    "end": "362740"
  },
  {
    "text": "that I logged in to my Windows desktop okay I hit an internet website it shows",
    "start": "362740",
    "end": "369520"
  },
  {
    "text": "the role I wanted to play in AWS and then I was automatically signed into the console so how did I do that that's",
    "start": "369520",
    "end": "377110"
  },
  {
    "text": "going to be the focus of the remaining part of my presentation before i get into the bits and bytes of how that",
    "start": "377110",
    "end": "382600"
  },
  {
    "text": "works i want to start at some of the basics so in order to do this you need to understand how delegation works this",
    "start": "382600",
    "end": "388750"
  },
  {
    "text": "concept of a session that we have in AWS and the security token service so",
    "start": "388750",
    "end": "395020"
  },
  {
    "start": "394000",
    "end": "394000"
  },
  {
    "text": "sessions one on one this is basically how you delegate temporary access to your AWS account all right these are",
    "start": "395020",
    "end": "400900"
  },
  {
    "text": "generated by calling and requesting a session against STS when you call STS",
    "start": "400900",
    "end": "405940"
  },
  {
    "text": "you're going to get a set of temporary credentials and you're going to use those temporary credentials to make subsequent calls to all the AWS ap is so",
    "start": "405940",
    "end": "414190"
  },
  {
    "start": "413000",
    "end": "413000"
  },
  {
    "text": "you could think of sts is kind of a ticketing or a vending service all right you make a call to it and it goes ahead",
    "start": "414190",
    "end": "419710"
  },
  {
    "text": "and it creates a session the sessions got a couple of different parts so first are the temporary security credentials",
    "start": "419710",
    "end": "425620"
  },
  {
    "start": "423000",
    "end": "423000"
  },
  {
    "text": "this is your access key ID your secret access key and your session token' so",
    "start": "425620",
    "end": "431500"
  },
  {
    "text": "the keys are very similar to the long term credentials that you're using if you're using root or using IM credentials you're already familiar with",
    "start": "431500",
    "end": "437500"
  },
  {
    "text": "the concept of keys and how you sign those API requests the only thing we're really introducing that's different when",
    "start": "437500",
    "end": "442840"
  },
  {
    "text": "you're using temporary credentials is the token and the token is what allows us to verify that those keys that we've",
    "start": "442840",
    "end": "449260"
  },
  {
    "text": "granted you are still valid you can use it in a couple ways so if you're using it against s3 you're using the HTTP",
    "start": "449260",
    "end": "455740"
  },
  {
    "text": "header let's say you're making other API calls and using the SDKs you're just",
    "start": "455740",
    "end": "460810"
  },
  {
    "text": "going to set the token parameter on that there's three different ways that you",
    "start": "460810",
    "end": "466270"
  },
  {
    "start": "464000",
    "end": "464000"
  },
  {
    "text": "can get sessions today okay three different API is in three different session types there's get session token",
    "start": "466270",
    "end": "472120"
  },
  {
    "text": "grant you a self what we call a self session you can use get federated token that will give you a federated session",
    "start": "472120",
    "end": "477750"
  },
  {
    "text": "then we completely change the API on you and we created assume role and that will create an assumed role session for the",
    "start": "477750",
    "end": "484990"
  },
  {
    "text": "sake of this presentation we're going to focus on the last two self sessions are just that they're for yourself so you're",
    "start": "484990",
    "end": "490900"
  },
  {
    "text": "really not going to be using them to delegate access but the last two we can go to build applications that allow delegated access to your account now",
    "start": "490900",
    "end": "499060"
  },
  {
    "text": "there are expiration on these these are temporary credentials and the expiration does vary on the type so if you look at",
    "start": "499060",
    "end": "504729"
  },
  {
    "text": "the self session if you're using your route or your account credentials you're going to you're going to have different",
    "start": "504729",
    "end": "510850"
  },
  {
    "text": "times in terms of the minimum that you can have the maximum and and the default so I won't spend too much time on self I",
    "start": "510850",
    "end": "516909"
  },
  {
    "text": "just put it on this slide just for clarity so that if you're going through your wandering around expiration how do they bury now for federated and assume",
    "start": "516909",
    "end": "524260"
  },
  {
    "text": "role both of them have a minimum of 15 minutes by default federated sessions last 12 hours when you go when you",
    "start": "524260",
    "end": "530170"
  },
  {
    "text": "request it you can request up to 36 hours roles on the other hand by default are 60 minutes and if have a maximum of",
    "start": "530170",
    "end": "536680"
  },
  {
    "text": "60 minutes so if you try to go and specify a time measured in seconds greater than 3600 you're actually going",
    "start": "536680",
    "end": "543130"
  },
  {
    "text": "to get an error telling you that you can't have a session that is that long one more thing I want to want to cover",
    "start": "543130",
    "end": "549970"
  },
  {
    "text": "on that you know the last bowl is pretty important please use caching with these credentials so it's good for you and",
    "start": "549970",
    "end": "555790"
  },
  {
    "text": "it's good for us as well you want your applications to perform so if you create a federated session you have a 36-hour",
    "start": "555790",
    "end": "561970"
  },
  {
    "text": "expiration on it there's no need to go and call for another session every time you make an API call if you do that",
    "start": "561970",
    "end": "568690"
  },
  {
    "text": "you're like you get an email from me if you keep doing it you're like you get a phone call from me so please cash or",
    "start": "568690",
    "end": "574330"
  },
  {
    "text": "cash or credentials it'll make your applications run faster so how do we do role-based a delegation using using the",
    "start": "574330",
    "end": "581709"
  },
  {
    "text": "assume role session so hopefully some of you saw the announcements around I am last week we also announced roles for",
    "start": "581709",
    "end": "588400"
  },
  {
    "start": "582000",
    "end": "582000"
  },
  {
    "text": "ec2 over the summer and some of you are able to make Jim sharp session which was right before the hour before this one",
    "start": "588400",
    "end": "595600"
  },
  {
    "text": "for those of you haven't though let me give you a brief 101 on what a role is you can think of a role is an entity or",
    "start": "595600",
    "end": "601870"
  },
  {
    "text": "a container for policy the name don't confuse it with like role-based access control okay it's not",
    "start": "601870",
    "end": "608959"
  },
  {
    "text": "associated with a specific user you don't it's not like a group you don't add users to it you assume the roles so",
    "start": "608959",
    "end": "615889"
  },
  {
    "text": "for example let's pretend during the day I'm a mild-mannered mile mild-mannered product manager at AWS and at night I",
    "start": "615889",
    "end": "623360"
  },
  {
    "text": "assume the role of a superhero and so when I assume that role I get additional attributes and different privileges",
    "start": "623360",
    "end": "628730"
  },
  {
    "text": "maybe I have super strength maybe I have x-ray vision whatever you want imagine",
    "start": "628730",
    "end": "634100"
  },
  {
    "text": "me in a cape doesn't matter that's what I get when I assume the role there's one caveat when you're working with roles",
    "start": "634100",
    "end": "639500"
  },
  {
    "text": "you can't assume them with root credentials so you want to go and either create an IM user or another way to use",
    "start": "639500",
    "end": "646970"
  },
  {
    "text": "roles are if you already have a temporary session from a role you can use the credentials from that role to",
    "start": "646970",
    "end": "652430"
  },
  {
    "text": "then assume another role but you don't want to use route you'll actually get an access denied or sometime of air I",
    "start": "652430",
    "end": "658220"
  },
  {
    "start": "657000",
    "end": "657000"
  },
  {
    "text": "forget what the exact wording is on it so using roles with easy to this is where we first introduced rolls over the",
    "start": "658220",
    "end": "664639"
  },
  {
    "text": "summer and what roles were you see to allow you to do is take those applications and if you're using AWS you",
    "start": "664639",
    "end": "671449"
  },
  {
    "text": "have built an application in any situ and inevitably when you built that application that application had to",
    "start": "671449",
    "end": "677389"
  },
  {
    "text": "access other AWS api's so you go and you launch an instance and that instance",
    "start": "677389",
    "end": "682610"
  },
  {
    "text": "needs to read data from a dynamo DB table or it needs to pull a file from s3 you're going to need credentials on that",
    "start": "682610",
    "end": "689149"
  },
  {
    "text": "instance so prior to roles what a lot of our customers did they would go create",
    "start": "689149",
    "end": "694550"
  },
  {
    "text": "an IM user take those long term credentials embed them on the instance our best security practices say you",
    "start": "694550",
    "end": "701420"
  },
  {
    "text": "should be rotating those credentials right everybody rotates those credentials yes but we found out that a",
    "start": "701420",
    "end": "707779"
  },
  {
    "text": "lot of people weren't rotating those credentials so we added rules for ec2 and so this really simplifies the entire",
    "start": "707779",
    "end": "713329"
  },
  {
    "text": "process you go in you create a role you attach policy to that role you launch an",
    "start": "713329",
    "end": "718639"
  },
  {
    "text": "instance with that role behind the scenes we take care of all the complexity and all the muck we get the",
    "start": "718639",
    "end": "724399"
  },
  {
    "text": "credentials out to those instance we actually rotate those credentials multiple times a day and if you're using",
    "start": "724399",
    "end": "730459"
  },
  {
    "text": "the AWS sdk you simply need to build your application and the sdk will actually pull the credentials from the",
    "start": "730459",
    "end": "736519"
  },
  {
    "text": "metadata cash and there's nothing you need to do nothing you need to do so let me",
    "start": "736519",
    "end": "743900"
  },
  {
    "text": "show you how you actually create a role in launch an instance so in my account",
    "start": "743900",
    "end": "754940"
  },
  {
    "text": "and go in and this is just I moved to the IM tab I may do things a little bit quickly so I apologized and then you",
    "start": "754940",
    "end": "761360"
  },
  {
    "text": "switch over to the roles and I can go and create a new role and so in here try",
    "start": "761360",
    "end": "770840"
  },
  {
    "text": "that again create a role in here I'll put in my reinvent demo click continue",
    "start": "770840",
    "end": "779000"
  },
  {
    "text": "and this is what you're doing is I'm creating a trust and I'll show you what",
    "start": "779000",
    "end": "784580"
  },
  {
    "text": "the other options are but for now I'm going to show you how you can create a role with a service and it's real easy because right now the only service that",
    "start": "784580",
    "end": "790520"
  },
  {
    "text": "supports it is ec2 and then I'll play a little bit of policy template roulette",
    "start": "790520",
    "end": "798040"
  },
  {
    "text": "take elastic MapReduce that produces a pretty good policy and by doing this",
    "start": "798820",
    "end": "805040"
  },
  {
    "text": "this role the only thing you're going to be able to do is have MapReduce read-only access so I'm going to go",
    "start": "805040",
    "end": "810590"
  },
  {
    "text": "ahead and create that and i'm going to switch over to the ec2 tab",
    "start": "810590",
    "end": "817450"
  },
  {
    "text": "I'm going to launch an instance select",
    "start": "823520",
    "end": "829190"
  },
  {
    "text": "the good old amazon linux amy maximize",
    "start": "829190",
    "end": "840580"
  },
  {
    "text": "and then this is what i want to show you down here you can go and you can just select and apply the role that's all you",
    "start": "840610",
    "end": "847250"
  },
  {
    "text": "need to do to launch an instance with the role okay i won't go through the whole process of deploying it but now that I've done that every application",
    "start": "847250",
    "end": "854390"
  },
  {
    "text": "that you run inside of that instance won't Herot credentials that will allow you to do MapReduce read-only access",
    "start": "854390",
    "end": "861850"
  },
  {
    "text": "that's it no more cute no no more key rotation nothing that you need to do on your side so let's review some of the",
    "start": "861850",
    "end": "873560"
  },
  {
    "start": "872000",
    "end": "872000"
  },
  {
    "text": "benefits of roles obviously this eliminates the use of long-term credentials and I should probably should",
    "start": "873560",
    "end": "878960"
  },
  {
    "text": "put a star on there because there's a couple instances where I'll get to the end where you may still have to actually use a long term credentials but in the",
    "start": "878960",
    "end": "885680"
  },
  {
    "text": "future this will completely eliminate the use of long-term credentials also if you're using this you don't have to do",
    "start": "885680",
    "end": "891230"
  },
  {
    "text": "the manual key rotation I know a lot of our customers who went out there and they built the code and they actually have their own homegrown ways of this",
    "start": "891230",
    "end": "897680"
  },
  {
    "text": "this removes all of that and less coding if you're using the AWS SDKs the api's",
    "start": "897680",
    "end": "904580"
  },
  {
    "text": "will pick up those keys automatically and there's nothing that you need to do so more recently and then more recently",
    "start": "904580",
    "end": "911000"
  },
  {
    "start": "910000",
    "end": "910000"
  },
  {
    "text": "being just this past week we introduced cross account API access and this allows",
    "start": "911000",
    "end": "916310"
  },
  {
    "text": "access across AWS accounts so myself",
    "start": "916310",
    "end": "921590"
  },
  {
    "text": "included in a lot of our customers have more than one account we know customers have have like tens and twenties of",
    "start": "921590",
    "end": "927290"
  },
  {
    "text": "account and so you may want to build out manageability scripts that allow you to see all the resources across those",
    "start": "927290",
    "end": "933830"
  },
  {
    "text": "accounts all your buckets all your ec2 instances all your databases and cross the county API access allows you to do",
    "start": "933830",
    "end": "940370"
  },
  {
    "text": "that also it may be that hey you've put a bunch of you know you put terabytes of data in an s3 bucket you don't want to",
    "start": "940370",
    "end": "946400"
  },
  {
    "text": "move it but you have an application running in an ec2 instance that's in a different account and so how can you get",
    "start": "946400",
    "end": "952460"
  },
  {
    "text": "that instance to be able to read data from bucket that's not an account maybe that you won't cross county API",
    "start": "952460",
    "end": "959050"
  },
  {
    "text": "access will allow you to do that last but not least this is an alternative way for you use 30 third-party management",
    "start": "959050",
    "end": "965770"
  },
  {
    "text": "tools so know a lot of you use some of the partner offerings that are partners have out there to manage your accounts",
    "start": "965770",
    "end": "972130"
  },
  {
    "text": "today you're probably generating long-term credentials using IM and handing them over to them in the future",
    "start": "972130",
    "end": "977649"
  },
  {
    "text": "you'll be able to create a role point a role to it they simply assume that role at some point in time you no longer want",
    "start": "977649",
    "end": "983860"
  },
  {
    "text": "to use their service you delete that role you've effectively revoked the relationship with them the way that this",
    "start": "983860",
    "end": "991029"
  },
  {
    "start": "989000",
    "end": "989000"
  },
  {
    "text": "works it's really kind of an extension for what we had for roles for easy to what i showed you in the previous in the",
    "start": "991029",
    "end": "997240"
  },
  {
    "text": "previous slide same same kind of low works you go and you create a role you apply a policy to it and then you",
    "start": "997240",
    "end": "1003870"
  },
  {
    "text": "specify that trust now in the previous example the trust was specific to ec2 if",
    "start": "1003870",
    "end": "1009029"
  },
  {
    "text": "you look over to the screenshot on i guess it's my right I don't know it's always your left or whatever you can see",
    "start": "1009029",
    "end": "1016770"
  },
  {
    "text": "that you can actually specify a service which we looked at or you can specify for cross account access now that needs",
    "start": "1016770",
    "end": "1022170"
  },
  {
    "text": "to go to what we call a trusted entity entity that entity can be an IM user within an account that you own it can",
    "start": "1022170",
    "end": "1028558"
  },
  {
    "text": "also be an IM user an account that you do not own and then once you've",
    "start": "1028559",
    "end": "1033870"
  },
  {
    "text": "established the policy and you've established the trust on that role the last thing you need to do is you need to",
    "start": "1033870",
    "end": "1038970"
  },
  {
    "text": "give a policy for that trusted entity and i'll show you a diagram that makes a little more sense but the the policy",
    "start": "1038970",
    "end": "1045390"
  },
  {
    "text": "that you want basically there's an example one in the lower corner that shows that you're granting that IM user the ability to assume that role so this",
    "start": "1045390",
    "end": "1054000"
  },
  {
    "start": "1053000",
    "end": "1053000"
  },
  {
    "text": "is how it works and this is a real life example so i have my AWS account and i also work on the IM team where we have a",
    "start": "1054000",
    "end": "1060420"
  },
  {
    "text": "team account and in my account I have a user his name is Jeff and I want to get",
    "start": "1060420",
    "end": "1065550"
  },
  {
    "text": "two objects that are in an s3 bucket in the team account this is what I have to do over in the team account I create a",
    "start": "1065550",
    "end": "1072270"
  },
  {
    "text": "role I'll call it my s3 role in there i'm just going to grant full access to all the s3 resources and api's and the",
    "start": "1072270",
    "end": "1078809"
  },
  {
    "text": "next thing i need to do is establish that trust and in that trust what I'm doing is I'm telling I'm setting it up",
    "start": "1078809",
    "end": "1086010"
  },
  {
    "text": "so that I'm pointing to the Amazon resource name or the iron for my account so you can",
    "start": "1086010",
    "end": "1092250"
  },
  {
    "text": "see it's it's maybe a little bit little on the screen there the account ID in their matches the account ID in my rule",
    "start": "1092250",
    "end": "1098760"
  },
  {
    "text": "so this is only half of the relationship the other part you need to do is in my in my account for the IM user i also",
    "start": "1098760",
    "end": "1106350"
  },
  {
    "text": "need to create a policy that allows them to assume it so there's three pieces here in the trusting account i need to",
    "start": "1106350",
    "end": "1114540"
  },
  {
    "text": "have a role that role needs to have a policy and that's what you're going to get those are your privileges when you assume the role and it also has a trust",
    "start": "1114540",
    "end": "1120840"
  },
  {
    "text": "saying this is who can assume it and then in the foreign account in the trusted the trusted account you have to",
    "start": "1120840",
    "end": "1126600"
  },
  {
    "text": "create an entity in that entity has to have a policy that also allows it so this is the kind of two part",
    "start": "1126600",
    "end": "1132270"
  },
  {
    "text": "configuration you need to do to establish this trust what ends up happening is I Jeff uses his long-term",
    "start": "1132270",
    "end": "1138720"
  },
  {
    "text": "keys yeah his IM keys he makes a request to sts he assumes that role as TS",
    "start": "1138720",
    "end": "1144690"
  },
  {
    "text": "returns to him an assumed role session that has a temporary set of credentials along with keys and then i use those",
    "start": "1144690",
    "end": "1151020"
  },
  {
    "text": "keys to make a subsequent sign request so that i can access that bucket so let",
    "start": "1151020",
    "end": "1157740"
  },
  {
    "text": "me show you how that works",
    "start": "1157740",
    "end": "1160400"
  },
  {
    "text": "this is another sample application that i created this one I don't have a pond",
    "start": "1166770",
    "end": "1172120"
  },
  {
    "text": "on the internet but i'll probably clean up at some point and put it there for you to play with and there's a quick",
    "start": "1172120",
    "end": "1177400"
  },
  {
    "text": "setting so in my account i have an access key in a secret key these are",
    "start": "1177400",
    "end": "1182560"
  },
  {
    "text": "Jeff's these are Jeff's credentials and then this is a role in the other account",
    "start": "1182560",
    "end": "1187840"
  },
  {
    "text": "and so if I out we're actually to go into S 3 i'll show you this for just from from the management console that's",
    "start": "1187840",
    "end": "1202840"
  },
  {
    "text": "the wrong one let's just go down here so",
    "start": "1202840",
    "end": "1208090"
  },
  {
    "text": "this is the team account and in here we have a set of buckets for example there's a bucket for me and this is all",
    "start": "1208090",
    "end": "1213700"
  },
  {
    "text": "in our shared account now what I want to be able to do is be able to see my shared account along with my private",
    "start": "1213700",
    "end": "1218740"
  },
  {
    "text": "account and so I'm only going to use one set of credentials and a role in that account I'm going to go over here and",
    "start": "1218740",
    "end": "1224500"
  },
  {
    "text": "now I'm browsing a whole set of different buckets which are my private buckets in my private account so for",
    "start": "1224500",
    "end": "1231340"
  },
  {
    "text": "example here I can go in and pull up a picture on my kid hi daddy loves you and",
    "start": "1231340",
    "end": "1240460"
  },
  {
    "text": "then at the same time it can go over into my team account now you could do",
    "start": "1240460",
    "end": "1246160"
  },
  {
    "text": "this today but if you did you'd have to have a set of long-term credentials for every account that you want to access",
    "start": "1246160",
    "end": "1251500"
  },
  {
    "text": "and so I'm doing this with one account and I can specify and number of roles and access all the resources across all",
    "start": "1251500",
    "end": "1257860"
  },
  {
    "text": "those accounts that I've been granted access to so for example I can go down and I can browse to the same bucket",
    "start": "1257860",
    "end": "1265110"
  },
  {
    "text": "there's a readme file hello everybody a tree event clap if you read this thank",
    "start": "1265110",
    "end": "1273910"
  },
  {
    "text": "you for humoring me and that's cross account access ok so we've simplified that process so let me review a couple",
    "start": "1273910",
    "end": "1280630"
  },
  {
    "text": "things oh actually I wanted to go through this I did promise him code so",
    "start": "1280630",
    "end": "1287200"
  },
  {
    "text": "it was a little bit hard to see in the debugger so I created some slides around this the sample itself is pretty big but",
    "start": "1287200",
    "end": "1292930"
  },
  {
    "text": "this is a self-contained function which you can use to call and Sue Merle so what's actually happening in there is",
    "start": "1292930",
    "end": "1298840"
  },
  {
    "text": "the jeff IM user using his access key and his secret key and then the stuff highlighted in yellow",
    "start": "1298840",
    "end": "1304420"
  },
  {
    "text": "is where we're making that assume role request it's a pretty simple request just specifying the duration maximum of",
    "start": "1304420",
    "end": "1310270"
  },
  {
    "text": "an hour i'm specifying the yarn for that role and then i'm giving it a name in",
    "start": "1310270",
    "end": "1315610"
  },
  {
    "text": "this case the name really doesn't matter and then when i make that request and i get the response back it'll have a",
    "start": "1315610",
    "end": "1321970"
  },
  {
    "text": "credentials object part of that and i return back those credentials and in there will be an access key secret key",
    "start": "1321970",
    "end": "1327610"
  },
  {
    "text": "the token and the expiration everything you need then to make calls to that foreign account to be able to access",
    "start": "1327610",
    "end": "1333880"
  },
  {
    "text": "things like an s3 bucket so what did we learn so use one set of credentials okay",
    "start": "1333880",
    "end": "1339940"
  },
  {
    "start": "1337000",
    "end": "1337000"
  },
  {
    "text": "no more sharing of long-term credentials with your friends so you creating it you",
    "start": "1339940",
    "end": "1345490"
  },
  {
    "text": "have an account someone needs access to it create a role maybe you can create a very specific role you can only get to",
    "start": "1345490",
    "end": "1350650"
  },
  {
    "text": "this prefix to this to this prefex in an s3 bucket and at any point in time you",
    "start": "1350650",
    "end": "1355990"
  },
  {
    "text": "can revoke that access by deleting that role or modifying that role so let's get",
    "start": "1355990",
    "end": "1362650"
  },
  {
    "text": "back to Federation this is kind of where I started and what I really want to do is kind of give you first to kind of an introduction so what we're doing with",
    "start": "1362650",
    "end": "1370000"
  },
  {
    "start": "1365000",
    "end": "1365000"
  },
  {
    "text": "Federation is we're allowing you to access your AWS account using your existing identity for example your",
    "start": "1370000",
    "end": "1375250"
  },
  {
    "text": "corporate identity right why would you want to do this well I think the obvious one is you can build applications that transparently access AWS resources so",
    "start": "1375250",
    "end": "1382929"
  },
  {
    "text": "let's say that every employee in your company when they log into their their pc you want them to automatically back",
    "start": "1382929",
    "end": "1389620"
  },
  {
    "text": "up their documents folder to some prefex some some folder in in s3 you can write",
    "start": "1389620",
    "end": "1395440"
  },
  {
    "text": "a little application runs in the background there authenticated by Windows Active Directory and in the",
    "start": "1395440",
    "end": "1400570"
  },
  {
    "text": "background you just go and you start that copy and they don't have to do anything so that's one benefit the other",
    "start": "1400570",
    "end": "1405640"
  },
  {
    "text": "thing we're going to take a look at me we looked at earlier in the in the in the presentation is if you have system",
    "start": "1405640",
    "end": "1410770"
  },
  {
    "text": "administrators and you want them to be able to single sign-on into the management console nice thing about this",
    "start": "1410770",
    "end": "1415900"
  },
  {
    "text": "is it eliminates yet another password now there yet another password that your users have to remember and yet another",
    "start": "1415900",
    "end": "1421390"
  },
  {
    "text": "password that you have to manage so it eliminates that and it keeps it all within your corporate directory all",
    "start": "1421390",
    "end": "1427390"
  },
  {
    "text": "within your corporate governance so let's go through the first sample once again the URL is up there for this one I",
    "start": "1427390",
    "end": "1433950"
  },
  {
    "start": "1430000",
    "end": "1430000"
  },
  {
    "text": "modified it slightly but most of the code is is pretty much the same in this case we're going to have the identity",
    "start": "1433950",
    "end": "1439919"
  },
  {
    "text": "provider is actually going to be Windows Active Directory because I'm running everything from an EC a Windows ec2 instance the privileges are going to be",
    "start": "1439919",
    "end": "1447059"
  },
  {
    "text": "based on ad group membership but one level higher I'm actually going to start storing policies on unused ad attributes",
    "start": "1447059",
    "end": "1454860"
  },
  {
    "text": "so this is how I'm actually going to give the privileges to those users the relying party in this case is going to be s3 because it's easy to demonstrate",
    "start": "1454860",
    "end": "1462240"
  },
  {
    "text": "and we're going to be using a federated session using the get session token API the way this works is a user logs into",
    "start": "1462240",
    "end": "1468899"
  },
  {
    "start": "1465000",
    "end": "1465000"
  },
  {
    "text": "their application in this case it's just going to be a simple command-line application and it hits the proxy server now the proxy server needs a set of",
    "start": "1468899",
    "end": "1475860"
  },
  {
    "text": "long-term credentials to request the session now the way that federated",
    "start": "1475860",
    "end": "1481260"
  },
  {
    "text": "sessions work is when you request the session it inherits or it derives the permissions from the IM user so let's",
    "start": "1481260",
    "end": "1490529"
  },
  {
    "text": "say that you have users you need to access ec2 you have users you need to access dynamo you have accuser's you",
    "start": "1490529",
    "end": "1495659"
  },
  {
    "text": "need to access s3 that IM user is going to have to be have the union the unified",
    "start": "1495659",
    "end": "1501960"
  },
  {
    "text": "privileges of all those and if say you have users who need admin access then",
    "start": "1501960",
    "end": "1507240"
  },
  {
    "text": "that proxy account is going to need admin access so this we can become a pretty privileged accountant so you",
    "start": "1507240",
    "end": "1512850"
  },
  {
    "text": "definitely want to secure those credentials on that proxy server anyway they hit the proxy server it gets",
    "start": "1512850",
    "end": "1519029"
  },
  {
    "text": "authenticated by active directory we're going to determine their entitlements based on their group membership and policies that are applied to those",
    "start": "1519029",
    "end": "1525570"
  },
  {
    "text": "groups and then we're going to make a call over to sts requesting the session it's going to give us back the the",
    "start": "1525570",
    "end": "1531720"
  },
  {
    "text": "session response that includes the temporary credentials the application is then going to take those credentials and",
    "start": "1531720",
    "end": "1537000"
  },
  {
    "text": "make subsequent calls to Amazon api's",
    "start": "1537000",
    "end": "1542330"
  },
  {
    "text": "so there's a proxy server involved in this demonstration and that proxy server",
    "start": "1550810",
    "end": "1556460"
  },
  {
    "text": "is actually a windows communication in this case is a windows communication foundation or a WCF application we just",
    "start": "1556460",
    "end": "1564800"
  },
  {
    "text": "remember where I put it so that is here and I'll just step you through nice i'll",
    "start": "1564800",
    "end": "1572120"
  },
  {
    "text": "step you through some of the code that's relevant to this so the first thing is i'm using NT authentication that's why",
    "start": "1572120",
    "end": "1577880"
  },
  {
    "text": "your neck going to get prompted for a username and password because you're already authenticated by the way this is written in C sharp for all the job of",
    "start": "1577880",
    "end": "1584660"
  },
  {
    "text": "folks hopefully you're able to follow along in here I'm going to use a helper",
    "start": "1584660",
    "end": "1590660"
  },
  {
    "text": "object to help her class which takes the username and creates the token that's over actually in this class where I'm",
    "start": "1590660",
    "end": "1598040"
  },
  {
    "text": "going to make a get federated token request it's similar to the assume role one in that I need to specify a duration",
    "start": "1598040",
    "end": "1604190"
  },
  {
    "text": "and a name for it but in this case I'm also going to specify a policy and once again I use a helper function over here",
    "start": "1604190",
    "end": "1610220"
  },
  {
    "text": "to generate that policy and what that policy does it's a it's a it's actually",
    "start": "1610220",
    "end": "1615500"
  },
  {
    "text": "a bunch of Windows Active Directory code that goes and looks up the group and then checks the policy on that so rather",
    "start": "1615500",
    "end": "1622010"
  },
  {
    "text": "than walk you through that I'll show you the how I set that up so once again this",
    "start": "1622010",
    "end": "1630320"
  },
  {
    "text": "is me in Active Directory i'm a member of this s3 users group if i open up the",
    "start": "1630320",
    "end": "1636470"
  },
  {
    "text": "group on there i can go down and view the attributes for it and conveniently",
    "start": "1636470",
    "end": "1642440"
  },
  {
    "text": "there's an unused alt security identities attribute where i've specified a snippet of IM policy i call",
    "start": "1642440",
    "end": "1649910"
  },
  {
    "text": "it a snippet because it's not a complete policy it's hard to see there so i put it into notepad so that you can see it",
    "start": "1649910",
    "end": "1655460"
  },
  {
    "text": "in full screen basically what this is going to do is it's going to generate a policy on the fly it's going to swap out",
    "start": "1655460",
    "end": "1661040"
  },
  {
    "text": "some variables such as user name and bucket name and when I make that Federation request I'm going to attach",
    "start": "1661040",
    "end": "1666500"
  },
  {
    "text": "that policy to the request and so these will be the effect it'll be the effective permissions of whatever the IM",
    "start": "1666500",
    "end": "1672410"
  },
  {
    "text": "user has further restricted by the policy that I'm submitting so if i switch back over to visual",
    "start": "1672410",
    "end": "1678650"
  },
  {
    "text": "studio I have this sample console app",
    "start": "1678650",
    "end": "1684130"
  },
  {
    "text": "I'm going to go ahead and start it this is where it's making a request to the service it's going to get those",
    "start": "1685480",
    "end": "1691970"
  },
  {
    "text": "credentials and then I'm going to be",
    "start": "1691970",
    "end": "1698000"
  },
  {
    "text": "able to see all the items that are in that same bucket that we looked at when I was using the ps3 explore that I",
    "start": "1698000",
    "end": "1703700"
  },
  {
    "text": "created once again I can put in just to kind of show that this works I'll put it in the same text file and so everybody",
    "start": "1703700",
    "end": "1710780"
  },
  {
    "text": "should be able to see that go ahead clap you read it thanks for playing along and",
    "start": "1710780",
    "end": "1718730"
  },
  {
    "text": "I hit enter so that's all you need to do to actually create do the the API Federation so just kind of review what",
    "start": "1718730",
    "end": "1724460"
  },
  {
    "text": "you saw oh and i think i have code for this one yeah as well so it's very",
    "start": "1724460",
    "end": "1729560"
  },
  {
    "start": "1728000",
    "end": "1728000"
  },
  {
    "text": "similar to the assume role one the main difference there are courses that i'm attaching the the policy now you can do",
    "start": "1729560",
    "end": "1735350"
  },
  {
    "text": "that in when you make an assume role request you can also attach a policy but here it's kind of mandatory because you",
    "start": "1735350",
    "end": "1740810"
  },
  {
    "text": "want to be scoping down those permissions once you make that request and you get the response back the same",
    "start": "1740810",
    "end": "1746120"
  },
  {
    "text": "thing there's a credentials set of credentials and you can take that object and you can act use your access key",
    "start": "1746120",
    "end": "1752030"
  },
  {
    "text": "secret key and sign subsequent requests so that was using a federated session",
    "start": "1752030",
    "end": "1760010"
  },
  {
    "start": "1757000",
    "end": "1757000"
  },
  {
    "text": "using get federated the get federated token API you can also use roles for",
    "start": "1760010",
    "end": "1766160"
  },
  {
    "text": "Federation alright this provides a different option for storing the AWS permissions this is a subtle different",
    "start": "1766160",
    "end": "1772220"
  },
  {
    "text": "set for the first time that you play with this so I'll kind of try to stress this over a few times in the previous",
    "start": "1772220",
    "end": "1778360"
  },
  {
    "text": "demonstration all of the provisions were managed in ad it was based on ad groups",
    "start": "1778360",
    "end": "1783920"
  },
  {
    "text": "and on that group there were attributes that had policies well what if you have a set of AD administrators who managed",
    "start": "1783920",
    "end": "1791120"
  },
  {
    "text": "those internet resources but you have a set of different individuals who manage AWS roles provides that opportunity to",
    "start": "1791120",
    "end": "1797870"
  },
  {
    "text": "separate powers or separate duties and so the ad administrator they go in and they create the users and the groups and",
    "start": "1797870",
    "end": "1804320"
  },
  {
    "text": "they manage their internet intranet permissions and then the AWS administrator goes in and creates a role",
    "start": "1804320",
    "end": "1809690"
  },
  {
    "text": "and they safai the policy on the role and so they're in control of the permissions",
    "start": "1809690",
    "end": "1814740"
  },
  {
    "text": "that are going to be used when you assume that role so we're going to go through another case once again URL",
    "start": "1814740",
    "end": "1821669"
  },
  {
    "start": "1818000",
    "end": "1818000"
  },
  {
    "text": "someone wants to take a photo that's at the bottom there the identity provider is going to be active directory again",
    "start": "1821669",
    "end": "1827010"
  },
  {
    "text": "I'm also going to use group membership but instead of the policies being based on attributes on the group I'm going to",
    "start": "1827010",
    "end": "1834120"
  },
  {
    "text": "assume roles of the same name in my IM account and that's how we're going to get the policy and in this case instead",
    "start": "1834120",
    "end": "1842220"
  },
  {
    "text": "of using API Federation we're going to we're going to single sign in to the management console so this is actually how we built the first demonstration",
    "start": "1842220",
    "end": "1847980"
  },
  {
    "text": "that we looked at the beginning of the session and once again this is using assume role and we're calling the assume",
    "start": "1847980",
    "end": "1854370"
  },
  {
    "text": "role API so when we looked at cross account access that was how you had to",
    "start": "1854370",
    "end": "1861090"
  },
  {
    "start": "1856000",
    "end": "1856000"
  },
  {
    "text": "configure it when you are working across 22 accounts two distinct accounts we were doing Federation it's actually",
    "start": "1861090",
    "end": "1867650"
  },
  {
    "text": "using roles within your account so it's a little bit different so in this case I",
    "start": "1867650",
    "end": "1873150"
  },
  {
    "text": "have a proxy server and that has it's an IM user and it has a set of long-term credentials and that user is going to",
    "start": "1873150",
    "end": "1879510"
  },
  {
    "text": "assume roles within the same account so in this case you know I show we have an admin role and we also have an s3 role",
    "start": "1879510",
    "end": "1885960"
  },
  {
    "text": "so we'll take a look at the s3 role there once again the policy looks very similar I'm going to grant every you can",
    "start": "1885960",
    "end": "1892290"
  },
  {
    "text": "call any s3 API on any resource when you assume this role the trust is a little",
    "start": "1892290",
    "end": "1897299"
  },
  {
    "text": "bit different so in this case the trust is pointing to the art of an account that account is actually the same",
    "start": "1897299",
    "end": "1903410"
  },
  {
    "text": "account where it's created so just because I'm creating a role in my own account I still have to specify that I'm",
    "start": "1903410",
    "end": "1910020"
  },
  {
    "text": "trusting my account to assume that role it's still a necessary step the other thing that I'm using in here is a",
    "start": "1910020",
    "end": "1915059"
  },
  {
    "text": "condition and for that condition i'm setting an external ID and in this case i'm setting the external ID to the sid",
    "start": "1915059",
    "end": "1921270"
  },
  {
    "text": "of the group the security identifier for the group so when you create a group and Active Directory you get a unique goo it",
    "start": "1921270",
    "end": "1926820"
  },
  {
    "text": "a unique ID and if you delete that group it will generate a new ID so if anyone",
    "start": "1926820",
    "end": "1932100"
  },
  {
    "text": "over an active directory is deleting groups or making modifications that good will change if someone tries to then",
    "start": "1932100",
    "end": "1937799"
  },
  {
    "text": "assume this role that will break the trust this is another way an additional layer of security that you can use",
    "start": "1937799",
    "end": "1943779"
  },
  {
    "text": "when you're building those rolls likewise that IM user also needs permissions to call the roll so even",
    "start": "1943779",
    "end": "1949989"
  },
  {
    "text": "though we're doing this all within the same account you have to go through the same process now the one thing i point out here is in the previous example we",
    "start": "1949989",
    "end": "1955599"
  },
  {
    "text": "were just granting them access to call assume role here i'm actually granting them also the ability to call list role",
    "start": "1955599",
    "end": "1960969"
  },
  {
    "text": "and these are the only two privileges that IM user has so you don't have to worry about the union or having you know",
    "start": "1960969",
    "end": "1967659"
  },
  {
    "text": "the the union of all the privileges of all the users these the only two privileges you need to assign for this",
    "start": "1967659",
    "end": "1973179"
  },
  {
    "text": "IM user in this scenario so this is just what's happening in the proxy we do the",
    "start": "1973179",
    "end": "1978279"
  },
  {
    "text": "key dance and then of course i'm going to use those keys to login to the management console now this just one",
    "start": "1978279",
    "end": "1983349"
  },
  {
    "start": "1983000",
    "end": "1983000"
  },
  {
    "text": "part of it the whole kind of loop looks like this user opens up his web browser they hit that proxy server as i",
    "start": "1983349",
    "end": "1989799"
  },
  {
    "text": "mentioned before the proxy server is going to use a set of IM credentials to eventually assume call assume role what",
    "start": "1989799",
    "end": "1995320"
  },
  {
    "text": "happens is we authenticate you against active directory and then I'm just going to enumerate the group's not going to pull policies off the groups in this",
    "start": "1995320",
    "end": "2001589"
  },
  {
    "text": "example here okay then we're going to list the role I'm going to call it make my first call to sts which lists the",
    "start": "2001589",
    "end": "2007379"
  },
  {
    "text": "roles that's going to return back a list of all those roles and i'm going to use do a union based on name matching to",
    "start": "2007379",
    "end": "2013859"
  },
  {
    "text": "populate that drop-down box in the proxy server user selects the role they want to play we call assume role we get back",
    "start": "2013859",
    "end": "2021239"
  },
  {
    "text": "the temporary credentials there's actually a step in here where we generate the URL by calling a sign in",
    "start": "2021239",
    "end": "2026909"
  },
  {
    "text": "token but i ran out of space on the slide and then we redirect the users into the console so let me show you how",
    "start": "2026909",
    "end": "2032940"
  },
  {
    "text": "that worked you guys already saw the final product so what I'll do is I'll",
    "start": "2032940",
    "end": "2038339"
  },
  {
    "text": "show you what's actually happening behind the scenes",
    "start": "2038339",
    "end": "2043820"
  },
  {
    "text": "so I'm going to go ahead and run this and it's already authenticated the user and it's already done the list rolls now",
    "start": "2049440",
    "end": "2054540"
  },
  {
    "text": "what happens when i try to assume the role is the first thing that goes",
    "start": "2054540",
    "end": "2059608"
  },
  {
    "text": "through and it's it's going to try to get those temporary credentials okay so i'll step into that and this is where we",
    "start": "2059609",
    "end": "2066179"
  },
  {
    "text": "assume the role so like the previous examples i need to set a duration this happens to be 3600 i need to specify the",
    "start": "2066179",
    "end": "2073020"
  },
  {
    "text": "Arn in this case I chose the admin role and then the sets the username I'm going",
    "start": "2073020",
    "end": "2079770"
  },
  {
    "text": "to specify myself at the domain that I'm logged into so I generated that string and then this is where i specify the",
    "start": "2079770",
    "end": "2085408"
  },
  {
    "text": "good once again if the goods don't match like this the the domain administrator",
    "start": "2085409",
    "end": "2090839"
  },
  {
    "text": "has to give the goo it to the AWS manager is the AWS admin and if those goods don't match for any reason this is",
    "start": "2090839",
    "end": "2097380"
  },
  {
    "text": "how you can break the trust this is how you can Oh it'll be invalidated what",
    "start": "2097380",
    "end": "2102630"
  },
  {
    "text": "actually happens at this point is we take the the keys i'm not going to show you my secret key but i'll show you my",
    "start": "2102630",
    "end": "2109319"
  },
  {
    "text": "access key and then there's the token and I take those three pieces of information and I start to what I need",
    "start": "2109319",
    "end": "2116460"
  },
  {
    "text": "to do is generate a sign in token so this is where the sample could becomes pretty handy because I think if you go on in our documentation we have like one",
    "start": "2116460",
    "end": "2123450"
  },
  {
    "text": "sample for java one sample for Ruby and now we have sample for C sharp so you",
    "start": "2123450",
    "end": "2128579"
  },
  {
    "text": "want to follow along because this is probably one of the more mystical parts of how you create the sign-in URL but",
    "start": "2128579",
    "end": "2134849"
  },
  {
    "text": "that does a dance where it gets a sign in token and at the very end we get a well-formed URL very nice and lovely URL",
    "start": "2134849",
    "end": "2141030"
  },
  {
    "text": "and so I can spit that out she's got",
    "start": "2141030",
    "end": "2150810"
  },
  {
    "text": "scroll I'm just going to copy that for a second",
    "start": "2150810",
    "end": "2156789"
  },
  {
    "text": "and i'm going to show you that this is not specific to anything if I want to I can launch a new browser I can drop that",
    "start": "2156789",
    "end": "2162250"
  },
  {
    "text": "URL in I could email it to you if I really wanted to and that will log me into the console and since i'm the admin",
    "start": "2162250",
    "end": "2168010"
  },
  {
    "text": "I have full privileges to everything that's happening in there and of course if I let the application run that's",
    "start": "2168010",
    "end": "2174099"
  },
  {
    "text": "going to open up in chrome and you get the same result so once again we've",
    "start": "2174099",
    "end": "2180010"
  },
  {
    "text": "provided that sample for you you guys can go and download it you can play with it you can also modify it for your your",
    "start": "2180010",
    "end": "2185920"
  },
  {
    "text": "own your own needs because creating that signing URL is a little bit tough I",
    "start": "2185920",
    "end": "2192520"
  },
  {
    "start": "2189000",
    "end": "2189000"
  },
  {
    "text": "won't go through the code sample here but for for completeness the slides are available after the session so you can",
    "start": "2192520",
    "end": "2197740"
  },
  {
    "text": "copy that that is a completely working function in the codes the code sample that you download we've actually broken",
    "start": "2197740",
    "end": "2203619"
  },
  {
    "text": "up a little bit a little bit better looking code but if you want to test it this definitely works want to go back",
    "start": "2203619",
    "end": "2210579"
  },
  {
    "start": "2209000",
    "end": "2209000"
  },
  {
    "text": "and just kind of go back and talk about some of the benefits and some of the",
    "start": "2210579",
    "end": "2215710"
  },
  {
    "text": "things that we saw and then I want to in the final ten minutes or so I want to talk about some of the differences between the Federated sessions using",
    "start": "2215710",
    "end": "2223660"
  },
  {
    "text": "roles and and some of the pros and cons but to wrap up here with with Federation obviously the benefit is you get to",
    "start": "2223660",
    "end": "2229839"
  },
  {
    "text": "leverage your existing corporate identity right you get to use the username and password that you already know and love a nice thing about it too",
    "start": "2229839",
    "end": "2236980"
  },
  {
    "text": "is you get to enforce that governance so maybe inside your company you say that",
    "start": "2236980",
    "end": "2241990"
  },
  {
    "text": "hey you know you got to have three special characters three digits uppercase and you've got to rotate your password every 30 days right if you're",
    "start": "2241990",
    "end": "2248440"
  },
  {
    "text": "doing that internally that's what you're going to do to protect your AWS account because those the only set of credentials using to access it and the",
    "start": "2248440",
    "end": "2254859"
  },
  {
    "text": "nice thing about it is if your employees leave you delete them for your directory you've effectively deleted their permissions from AWS it's not like we're",
    "start": "2254859",
    "end": "2261490"
  },
  {
    "text": "oh you know Joe left oh he had a he had an account in AWS to we need to go and",
    "start": "2261490",
    "end": "2266559"
  },
  {
    "text": "delete that so you don't have any of that you're managing it all within your own system so we looked at a couple",
    "start": "2266559",
    "end": "2272680"
  },
  {
    "text": "different options and I've already discussed some of the differences let me be very specific about some of the",
    "start": "2272680",
    "end": "2279160"
  },
  {
    "start": "2278000",
    "end": "2278000"
  },
  {
    "text": "considerations you should have when choosing the different session types so these are things i would have you think about first what services do you want to",
    "start": "2279160",
    "end": "2285849"
  },
  {
    "text": "use the other consideration is how do you want to manage those permissions some people want to manage",
    "start": "2285849",
    "end": "2291430"
  },
  {
    "text": "them within their enterprise other people want to have that separation where the permissions are managed inside of AWS and then how are the permissions",
    "start": "2291430",
    "end": "2297880"
  },
  {
    "text": "derived do I want to have you know a proxy server that has star access and I scope that down or I want to have a",
    "start": "2297880",
    "end": "2304870"
  },
  {
    "text": "limited proxy server and I want to assume those so those are the some of the different things you want to be thinking about now not all sessions",
    "start": "2304870",
    "end": "2311440"
  },
  {
    "start": "2309000",
    "end": "2309000"
  },
  {
    "text": "unfortunately we're created equal and at some point this this chart will probably",
    "start": "2311440",
    "end": "2317320"
  },
  {
    "text": "look all green but right now it's important to know as of today some of the sessions you can use for example you",
    "start": "2317320",
    "end": "2323770"
  },
  {
    "text": "can use a federated session with simple DB but currently assume simple DB",
    "start": "2323770",
    "end": "2329500"
  },
  {
    "text": "doesn't support assume role so if you need that service you don't want to be using roles for that as i mentioned",
    "start": "2329500",
    "end": "2335440"
  },
  {
    "text": "we're continuously working with the service teams to make sure they support sessions so that's one important consideration your the thing as i said",
    "start": "2335440",
    "end": "2341980"
  },
  {
    "start": "2340000",
    "end": "2340000"
  },
  {
    "text": "is where do you want to maintain it so if you want to do it within your enterprise you probably want to use a federated session the consideration",
    "start": "2341980",
    "end": "2348610"
  },
  {
    "text": "there is that proxy account is going to be fairly privileged and you're going to want to be able to lock you want to lock that down in that case you're going to",
    "start": "2348610",
    "end": "2354730"
  },
  {
    "text": "be generating policies inside of your enterprise and so you're going to you're going to take the burden of creating",
    "start": "2354730",
    "end": "2359740"
  },
  {
    "text": "those and attaching that that policy when you make the request conversely if",
    "start": "2359740",
    "end": "2364990"
  },
  {
    "text": "you want to do it within AWS and then you can use assume role sessions the proxy server in this case really only",
    "start": "2364990",
    "end": "2370570"
  },
  {
    "text": "needs the ability to assume role in the sample I used we also had to grant them list role and then optionally you can",
    "start": "2370570",
    "end": "2376780"
  },
  {
    "text": "also specify a policy so you could simplify the model where you assume one role that role has kind of a god-like",
    "start": "2376780",
    "end": "2383890"
  },
  {
    "text": "star access and you can attach a policy so it can actually do some of the same stuff with roles that you can do with",
    "start": "2383890",
    "end": "2389590"
  },
  {
    "text": "federated sessions as well so in summary we looked at a couple of different types",
    "start": "2389590",
    "end": "2397630"
  },
  {
    "start": "2393000",
    "end": "2393000"
  },
  {
    "text": "of scenarios we looked across account API access this is where you can use one",
    "start": "2397630",
    "end": "2403180"
  },
  {
    "text": "set of credentials you don't have to go around sharing your long term credentials with anybody and you can go",
    "start": "2403180",
    "end": "2408640"
  },
  {
    "text": "and you can revoke access to that role at any time the other scenarios we looked at where API Federation and",
    "start": "2408640",
    "end": "2414580"
  },
  {
    "text": "single sign-on Federation right in that case you get to leverage the existing identity continue to use the existing",
    "start": "2414580",
    "end": "2421540"
  },
  {
    "text": "say it's your windows username and password that you use to log into your machine every day you get the benefit of",
    "start": "2421540",
    "end": "2426730"
  },
  {
    "text": "enforcing those corporate policies along with the fact that if anyone leaves you simply delete them from one place and",
    "start": "2426730",
    "end": "2432880"
  },
  {
    "text": "you've effectively revoked their access to your corporation as well as the cloud some of the technology that we looked at",
    "start": "2432880",
    "end": "2439840"
  },
  {
    "start": "2438000",
    "end": "2438000"
  },
  {
    "text": "sessions are the heart of delegation hopefully I said session and session over and over so you remember just a",
    "start": "2439840",
    "end": "2447160"
  },
  {
    "text": "couple things and you're like man what was Jeff talking about search for the security token service in session that's",
    "start": "2447160",
    "end": "2452800"
  },
  {
    "text": "going to get you to the to the right documentation that you're going to need to be able to build your applications when you get a session it's going to",
    "start": "2452800",
    "end": "2459340"
  },
  {
    "text": "have a set of temporary credentials there's going to be the form of keys and a token i'm going to use those elements",
    "start": "2459340",
    "end": "2464950"
  },
  {
    "text": "to sign your API requests and you're going to eat and you're going to be able to make API calls and access resources",
    "start": "2464950",
    "end": "2470260"
  },
  {
    "text": "using those and then last but not least understand the differences between them all right there are subtle differences",
    "start": "2470260",
    "end": "2475780"
  },
  {
    "text": "in terms of the services that are supported across the session types there's differences in terms of how",
    "start": "2475780",
    "end": "2481660"
  },
  {
    "text": "those permissions are are derived you want to make sure that you're using a scenario or using a session that",
    "start": "2481660",
    "end": "2487360"
  },
  {
    "text": "supports the scenario in the use case that you're trying to do so with that I'll point you to some related content",
    "start": "2487360",
    "end": "2494160"
  },
  {
    "start": "2491000",
    "end": "2491000"
  },
  {
    "text": "first two sessions have already taken place but or i should say the first two",
    "start": "2494160",
    "end": "2499540"
  },
  {
    "text": "sessions are gyms that was the hour before if you missed that you can go back to the recordings i believe",
    "start": "2499540",
    "end": "2505720"
  },
  {
    "text": "everything is going to be posted on YouTube there's also an interesting scenario around mobile Federation due to",
    "start": "2505720",
    "end": "2512140"
  },
  {
    "text": "time I couldn't really do justice to it but the session MBL 302 actually",
    "start": "2512140",
    "end": "2517300"
  },
  {
    "text": "unfortunately happening at the same time does cover mobile Federation's so that maybe another session if you're interested in Federation to go back and",
    "start": "2517300",
    "end": "2523420"
  },
  {
    "text": "take a look at and then tomorrow on ders who's on the same team as I am he's going to be going through the top ten I",
    "start": "2523420",
    "end": "2529630"
  },
  {
    "text": "am best practices and so I really do encourage you all to attend that session tomorrow if you have detailed questions",
    "start": "2529630",
    "end": "2536350"
  },
  {
    "text": "I'll stick around afterwards but if we run out of time we actually have a meet the IM team it's today at four thirty",
    "start": "2536350",
    "end": "2542770"
  },
  {
    "text": "slide didn't get the room on there the room is 2502 2502 so if you want to come",
    "start": "2542770",
    "end": "2549070"
  },
  {
    "text": "you want to talk to myself some of the other members of the IM and security teams will be there to answer your",
    "start": "2549070",
    "end": "2554770"
  },
  {
    "text": "course you can follow us on twitter or at AWS identity with that i want to",
    "start": "2554770",
    "end": "2562000"
  },
  {
    "text": "thank you all for coming out here your feedback is important so please go out and fill the evaluation for this session",
    "start": "2562000",
    "end": "2569140"
  },
  {
    "text": "and all the other sessions and then oops the last thing I'll do is I'll leave",
    "start": "2569140",
    "end": "2575700"
  },
  {
    "text": "slide up with some additional information and URLs where you can go find more information about I am all",
    "start": "2575700",
    "end": "2581500"
  },
  {
    "text": "right thank you very much for your time",
    "start": "2581500",
    "end": "2584790"
  }
]