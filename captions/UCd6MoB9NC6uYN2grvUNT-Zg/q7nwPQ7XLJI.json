[
  {
    "text": "- Hi, I'm Adi from AWS.",
    "start": "390",
    "end": "2013"
  },
  {
    "text": "- Hi, I'm Neeraj from AiDA Technologies,",
    "start": "3090",
    "end": "5640"
  },
  {
    "text": "and this is my architecture.",
    "start": "5640",
    "end": "7399"
  },
  {
    "text": "(bright music)",
    "start": "7400",
    "end": "9983"
  },
  {
    "text": "- Neeraj, today we'll be talking\nabout AiDA's Technologies'",
    "start": "17040",
    "end": "20370"
  },
  {
    "text": "Fraud Waste Abuse, or FWA\nin short, as a service.",
    "start": "20370",
    "end": "23820"
  },
  {
    "text": "Can you tell us a bit\nabout AiDA Technology",
    "start": "23820",
    "end": "25830"
  },
  {
    "text": "and what are the challenges that you face",
    "start": "25830",
    "end": "27540"
  },
  {
    "text": "that led you to this architecture?",
    "start": "27540",
    "end": "29460"
  },
  {
    "text": "- Thank you, Adi, yes.",
    "start": "29460",
    "end": "30660"
  },
  {
    "text": "In AiDA Technologies,",
    "start": "30660",
    "end": "31920"
  },
  {
    "text": "we develop solutions for\nhealth insurance companies.",
    "start": "31920",
    "end": "34800"
  },
  {
    "text": "We help them to solve fraud\nwaste abuse identification",
    "start": "34800",
    "end": "38520"
  },
  {
    "text": "present in their claims as\nwell as claims adjudications.",
    "start": "38520",
    "end": "42240"
  },
  {
    "text": "The challenges which we used\nto face with health insurance",
    "start": "42240",
    "end": "44430"
  },
  {
    "text": "is the overall turnaround time.",
    "start": "44430",
    "end": "46140"
  },
  {
    "text": "When we want to demonstrate the system",
    "start": "46140",
    "end": "47730"
  },
  {
    "text": "and deploy the system to\nclients, it takes almost months,",
    "start": "47730",
    "end": "50970"
  },
  {
    "text": "and the challenge is how\nwe can reduce this time,",
    "start": "50970",
    "end": "53310"
  },
  {
    "text": "and that's where we decided\nto develop a FWA SaaS service,",
    "start": "53310",
    "end": "56940"
  },
  {
    "text": "which we will be looking at here,",
    "start": "56940",
    "end": "58590"
  },
  {
    "text": "- A SaaS service, I can't wait\nto get into the architecture.",
    "start": "58590",
    "end": "61620"
  },
  {
    "text": "Can you talk us through it, please?",
    "start": "61620",
    "end": "62670"
  },
  {
    "text": "- Yes, so this AWS SaaS service\nexposes a web UI service",
    "start": "62670",
    "end": "67670"
  },
  {
    "text": "which users can log in.",
    "start": "68010",
    "end": "69630"
  },
  {
    "text": "So once users are logged into the system,",
    "start": "69630",
    "end": "71759"
  },
  {
    "text": "what they can do, they can upload a file,",
    "start": "71760",
    "end": "74280"
  },
  {
    "text": "which usually comprises\nof a number of claims,",
    "start": "74280",
    "end": "75960"
  },
  {
    "text": "which they want to identify\nthe presence of FWA.",
    "start": "75960",
    "end": "79229"
  },
  {
    "text": "And once this file is uploaded,",
    "start": "79230",
    "end": "80730"
  },
  {
    "text": "it is notified to AWS Step Functions",
    "start": "80730",
    "end": "85050"
  },
  {
    "text": "where it orchestrates the\nprocessing of that file",
    "start": "85050",
    "end": "88320"
  },
  {
    "text": "and that orchestration, what it does,",
    "start": "88320",
    "end": "90450"
  },
  {
    "text": "it triggers the AWS Fargate",
    "start": "90450",
    "end": "92042"
  },
  {
    "text": "where our machine\nlearning model is running,",
    "start": "92042",
    "end": "94590"
  },
  {
    "text": "which identifies the\npresence of fraud waste abuse",
    "start": "94590",
    "end": "97881"
  },
  {
    "text": "present in the claims, and\nit processes all those claims",
    "start": "97881",
    "end": "101211"
  },
  {
    "text": "and stores it into the database.",
    "start": "101211",
    "end": "104191"
  },
  {
    "text": "As well as once this\nprocessing is complete,",
    "start": "104191",
    "end": "107190"
  },
  {
    "text": "the user is also notified for\nthe completion of this file",
    "start": "107190",
    "end": "111360"
  },
  {
    "text": "and so that they can\nback into the UI and look",
    "start": "111360",
    "end": "113490"
  },
  {
    "text": "at the dashboard where\nall the beautiful results",
    "start": "113490",
    "end": "115170"
  },
  {
    "text": "are present for their analysis.",
    "start": "115170",
    "end": "116640"
  },
  {
    "text": "- I see, so you effectively\nhave put a serverless web UI",
    "start": "116640",
    "end": "120507"
  },
  {
    "text": "in front of your AI ML\nmodel here on Fargate,",
    "start": "120507",
    "end": "124200"
  },
  {
    "text": "but you did mention it took you months",
    "start": "124200",
    "end": "126450"
  },
  {
    "text": "to implement this solution\non your customer site,",
    "start": "126450",
    "end": "128819"
  },
  {
    "text": "which I can only assume\nis a on-prem deployment.",
    "start": "128820",
    "end": "131101"
  },
  {
    "text": "So that makes me curious,",
    "start": "131101",
    "end": "132630"
  },
  {
    "text": "why Fargate instead of something like EC2",
    "start": "132630",
    "end": "135000"
  },
  {
    "text": "which closely resembles\nyour on-prem deployment?",
    "start": "135000",
    "end": "137580"
  },
  {
    "text": "- So there are two reasons,",
    "start": "137580",
    "end": "138450"
  },
  {
    "text": "which I say is like, one is with Fargate,",
    "start": "138450",
    "end": "140879"
  },
  {
    "text": "because it's a managed container service,",
    "start": "140880",
    "end": "142680"
  },
  {
    "text": "the developer productivity will be high.",
    "start": "142680",
    "end": "144299"
  },
  {
    "text": "We can directly go and deploy containers.",
    "start": "144300",
    "end": "146451"
  },
  {
    "text": "And the other is based as\nlike the cost effectiveness.",
    "start": "146451",
    "end": "149010"
  },
  {
    "text": "We spin up the AWS Fargate\ntask when a file is uploaded,",
    "start": "149010",
    "end": "152790"
  },
  {
    "text": "so it's on need basis,\ncompute is required,",
    "start": "152790",
    "end": "155519"
  },
  {
    "text": "and then once it is done, it is released.",
    "start": "155520",
    "end": "157230"
  },
  {
    "text": "- That makes a lot of sense, yeah,",
    "start": "157230",
    "end": "158610"
  },
  {
    "text": "especially on the cost efficiency.",
    "start": "158610",
    "end": "161040"
  },
  {
    "text": "Now, what about those times\nwhen the insurance providers,",
    "start": "161040",
    "end": "164489"
  },
  {
    "text": "they would've got their existing\nclaims management system?",
    "start": "164490",
    "end": "168810"
  },
  {
    "text": "So I would've thought it's highly unlikely",
    "start": "168810",
    "end": "171300"
  },
  {
    "text": "for insurance company to have\nsomeone, like this user here,",
    "start": "171300",
    "end": "175020"
  },
  {
    "text": "who download the claim\nfrom their existing system",
    "start": "175020",
    "end": "177750"
  },
  {
    "text": "and then upload it to a web UI.",
    "start": "177750",
    "end": "180150"
  },
  {
    "text": "How would you handle this scenario?",
    "start": "180150",
    "end": "181799"
  },
  {
    "text": "- Yeah, you're absolutely\nright on that use case.",
    "start": "181800",
    "end": "183870"
  },
  {
    "text": "So what we have done, if\nyou look into this system,",
    "start": "183870",
    "end": "185790"
  },
  {
    "text": "we can high level, we can\nsay this was a bad service",
    "start": "185790",
    "end": "189030"
  },
  {
    "text": "where users are uploading a file.",
    "start": "189030",
    "end": "191925"
  },
  {
    "text": "The other case which you mentioned",
    "start": "191925",
    "end": "193320"
  },
  {
    "text": "through integration\nsystem is the API cases.",
    "start": "193320",
    "end": "195900"
  },
  {
    "text": "What we have done is\nwe have exposed an API",
    "start": "195900",
    "end": "199200"
  },
  {
    "text": "through almost an API Gateway.",
    "start": "199200",
    "end": "200560"
  },
  {
    "text": "It's the rest API where client\nsystems can make an API call",
    "start": "200560",
    "end": "204540"
  },
  {
    "text": "through the API keys allotted to them",
    "start": "204540",
    "end": "207420"
  },
  {
    "text": "as it is hosted in API Gateway.",
    "start": "207420",
    "end": "208709"
  },
  {
    "text": "They provide its own usage plans also.",
    "start": "208710",
    "end": "211140"
  },
  {
    "text": "So once they have passed the\ndata in the form of JSON,",
    "start": "211140",
    "end": "214260"
  },
  {
    "text": "this is further forwarded to AWS Lambda,",
    "start": "214260",
    "end": "216420"
  },
  {
    "text": "where the same machine\nlearning model is running,",
    "start": "216420",
    "end": "218069"
  },
  {
    "text": "which we hosted in AWS Fargate.",
    "start": "218070",
    "end": "220110"
  },
  {
    "text": "So what it does, it quickly go through",
    "start": "220110",
    "end": "221490"
  },
  {
    "text": "that particular claim,",
    "start": "221490",
    "end": "223050"
  },
  {
    "text": "identify the presence of the\nFWA into it, stores the result",
    "start": "223050",
    "end": "226793"
  },
  {
    "text": "as well as it returns it back",
    "start": "226793",
    "end": "228930"
  },
  {
    "text": "to the client system which it triggers,",
    "start": "228930",
    "end": "230879"
  },
  {
    "text": "so that the client system\nconsumes the result",
    "start": "230880",
    "end": "233220"
  },
  {
    "text": "and further process it into\ntheir downstreams if required.",
    "start": "233220",
    "end": "235980"
  },
  {
    "text": "- I see, so you've got a batch interface,",
    "start": "235980",
    "end": "238349"
  },
  {
    "text": "real time interface.",
    "start": "238350",
    "end": "239490"
  },
  {
    "text": "Now, you did mention one thing\nthat sparks my curiosity,",
    "start": "239490",
    "end": "243390"
  },
  {
    "text": "the same code were deployed\nin Lambda and Fargate.",
    "start": "243390",
    "end": "246720"
  },
  {
    "text": "Doesn't that mean code duplication?",
    "start": "246720",
    "end": "249090"
  },
  {
    "text": "- No, it's not code duplication here.",
    "start": "249090",
    "end": "250560"
  },
  {
    "text": "We are deploying the same code",
    "start": "250560",
    "end": "252239"
  },
  {
    "text": "across these two, AWS Fargate and Lambda.",
    "start": "252240",
    "end": "255090"
  },
  {
    "text": "What we do is it's the same\ncontainer which it is deployed.",
    "start": "255090",
    "end": "257940"
  },
  {
    "text": "It's just a matter of configuration",
    "start": "257940",
    "end": "259851"
  },
  {
    "text": "which makes it compatible\nfor both the services.",
    "start": "259851",
    "end": "262740"
  },
  {
    "text": "- Ah, so same container\nimage deployed on Lambda?",
    "start": "262740",
    "end": "264900"
  },
  {
    "text": "- Yes.\n- Okay.",
    "start": "264900",
    "end": "266160"
  },
  {
    "text": "- We are using the same code.",
    "start": "266160",
    "end": "267180"
  },
  {
    "text": "- But still those are two\ndifferent compute services.",
    "start": "267180",
    "end": "269759"
  },
  {
    "text": "Why not just Fargate or Lambda?",
    "start": "269760",
    "end": "271830"
  },
  {
    "text": "- So there is a reason behind it.",
    "start": "271830",
    "end": "272970"
  },
  {
    "text": "As I mentioned, the above\ncase, we classify it as a batch",
    "start": "272970",
    "end": "275700"
  },
  {
    "text": "and here it is real time.",
    "start": "275700",
    "end": "277590"
  },
  {
    "text": "So in real time, they\nneed instance response.",
    "start": "277590",
    "end": "279660"
  },
  {
    "text": "In batch, there will be a lot of data",
    "start": "279660",
    "end": "282240"
  },
  {
    "text": "which will be coming in.",
    "start": "282240",
    "end": "283319"
  },
  {
    "text": "So the reason behind using\nAWS Fargate and Lambda,",
    "start": "283320",
    "end": "286800"
  },
  {
    "text": "in Lambda, we have a time\nout of 15 minutes max,",
    "start": "286800",
    "end": "289470"
  },
  {
    "text": "so we don't want to cross that threshold,",
    "start": "289470",
    "end": "291300"
  },
  {
    "text": "so that's where AWS Lambda\nhelps us in realtime case,",
    "start": "291300",
    "end": "293940"
  },
  {
    "text": "whereas AWS Fargate here,\nthe easiest task will run",
    "start": "293940",
    "end": "297360"
  },
  {
    "text": "till all the claims are processed.",
    "start": "297360",
    "end": "299400"
  },
  {
    "text": "- Makes sense, makes sense.\nWhat about data here?",
    "start": "299400",
    "end": "302759"
  },
  {
    "text": "How do you isolate data\namongst your customers?",
    "start": "302760",
    "end": "305100"
  },
  {
    "text": "- Data is isolated here\nin the form of schemas.",
    "start": "305100",
    "end": "308310"
  },
  {
    "text": "So what we do here is whenever\na client is on onboarded,",
    "start": "308310",
    "end": "311639"
  },
  {
    "text": "a dedicated schema is created for them,",
    "start": "311640",
    "end": "313920"
  },
  {
    "text": "and any cross tenant schema\naccesses are not allowed.",
    "start": "313920",
    "end": "317340"
  },
  {
    "text": "So when a request arrives,\nit have permission",
    "start": "317340",
    "end": "319590"
  },
  {
    "text": "to access data within its own schema.",
    "start": "319590",
    "end": "321750"
  },
  {
    "text": "- Ah, that's very reassuring.",
    "start": "321750",
    "end": "323760"
  },
  {
    "text": "Now, what are some of the benefits",
    "start": "323760",
    "end": "324900"
  },
  {
    "text": "that you've realized after this?",
    "start": "324900",
    "end": "326610"
  },
  {
    "text": "- So as I mentioned earlier,",
    "start": "326610",
    "end": "327569"
  },
  {
    "text": "the main challenge for us\nwas overall turnaround time.",
    "start": "327570",
    "end": "330570"
  },
  {
    "text": "Now it is reduced from months to days.",
    "start": "330570",
    "end": "332460"
  },
  {
    "text": "It's a matter of time client onboards,",
    "start": "332460",
    "end": "334259"
  },
  {
    "text": "and they start to use the system.",
    "start": "334260",
    "end": "335910"
  },
  {
    "text": "And of course, as serverless\ntechnologies are here,",
    "start": "335910",
    "end": "337740"
  },
  {
    "text": "so definitely, it's\ncost effective solution.",
    "start": "337740",
    "end": "340746"
  },
  {
    "text": "(bright music)\n- Amazing.",
    "start": "340747",
    "end": "341580"
  },
  {
    "text": "Thank you for sharing\nyour architecture with us.",
    "start": "341580",
    "end": "343740"
  },
  {
    "text": "And thank you for watching\n\"This Is My Architecture.\"",
    "start": "343740",
    "end": "346389"
  }
]