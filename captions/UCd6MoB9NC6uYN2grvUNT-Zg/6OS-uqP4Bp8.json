[
  {
    "start": "0",
    "end": "62000"
  },
  {
    "text": "get started um thanks for coming everyone the title of this presentation is high performance",
    "start": "640",
    "end": "6000"
  },
  {
    "text": "content delivery my name is alex dunlap i'm a senior manager here on the aws team i've been with aws for a little",
    "start": "6000",
    "end": "12320"
  },
  {
    "text": "over five years and have focused mostly on amazon cloudfront while i've been with aws so we'll be talking a lot about",
    "start": "12320",
    "end": "18400"
  },
  {
    "text": "cloudfront today as we go um what i wanted to do today was three things uh the first thing was to take",
    "start": "18400",
    "end": "24960"
  },
  {
    "text": "you through a presentation that explains how you can use cloudflare's features to deliver your whole website traditionally",
    "start": "24960",
    "end": "30800"
  },
  {
    "text": "content delivery networks like cloudfront have focused mainly on static content we'll talk a little bit about that but we'll also talk about how you",
    "start": "30800",
    "end": "37120"
  },
  {
    "text": "can use cloudfront to accelerate the dynamic portions of your site and really focus on the features that we've built",
    "start": "37120",
    "end": "42160"
  },
  {
    "text": "for dynamic content second thing i will do is show you a demo pretty simple demo but it will show all",
    "start": "42160",
    "end": "48079"
  },
  {
    "text": "the pieces in action and then i'm going to turn things over to andy from earth networks to hear about how they're using",
    "start": "48079",
    "end": "53840"
  },
  {
    "text": "cloudfront in our dynamic content features so with that let's first start with some definitions",
    "start": "53840",
    "end": "60559"
  },
  {
    "text": "uh so static and dynamic content most sites have a mixture of both um so this is a page from the amazon retail site",
    "start": "60559",
    "end": "67920"
  },
  {
    "start": "62000",
    "end": "62000"
  },
  {
    "text": "you'll see up at the top that we do some personalization so this one says jared's amazon.com",
    "start": "67920",
    "end": "73520"
  },
  {
    "text": "so we've learned as a retailer that personalizing content uh improves the end user experience so that",
    "start": "73520",
    "end": "80320"
  },
  {
    "text": "jared's amazon.com will differ for every every visitor to the amazon.com website",
    "start": "80320",
    "end": "86560"
  },
  {
    "text": "on the other hand the static images on the site you know we've circled the modern family image here but you could",
    "start": "86560",
    "end": "92560"
  },
  {
    "text": "have also circled the kindle fire picture or the amazon prime logo",
    "start": "92560",
    "end": "98159"
  },
  {
    "text": "this is stuff that does not change from user to user everyone will see the same amazon.com logo or modern family image",
    "start": "98159",
    "end": "105680"
  },
  {
    "text": "so that's static content so as we go through the presentation let's think about dynamic content as the things that",
    "start": "105680",
    "end": "111439"
  },
  {
    "text": "change from user to user in static content is the things that remain the same",
    "start": "111439",
    "end": "117118"
  },
  {
    "start": "117000",
    "end": "117000"
  },
  {
    "text": "what is static content as i said it's the objects that don't change from user to user on your website so images are a",
    "start": "118000",
    "end": "123360"
  },
  {
    "text": "great example videos audio files css files or javascript can also be",
    "start": "123360",
    "end": "128800"
  },
  {
    "text": "considered static content in many cases on the other hand dynamic content is the personalized or interactive portion of",
    "start": "128800",
    "end": "135120"
  },
  {
    "text": "the website that's created on the fly for each user so this could be the name of the customer like we saw in the amazon example could also be news",
    "start": "135120",
    "end": "142160"
  },
  {
    "text": "information weather information sports stock stock quotes travel information",
    "start": "142160",
    "end": "149200"
  },
  {
    "text": "things that need to be personalized to the particular user on your website",
    "start": "149200",
    "end": "154480"
  },
  {
    "start": "154000",
    "end": "154000"
  },
  {
    "text": "so in the old world customers aws customers had kind of two choices in",
    "start": "154480",
    "end": "159920"
  },
  {
    "text": "order to deliver the dynamic portions of their site they could use cdns only for their",
    "start": "159920",
    "end": "165680"
  },
  {
    "text": "static content and deliver the dynamic portion of their site only from their own origin servers now this was slow",
    "start": "165680",
    "end": "172800"
  },
  {
    "text": "it was hard to scale it introduced single points of failure at your origin and it meant that you had to scale your",
    "start": "172800",
    "end": "178720"
  },
  {
    "text": "origin up to the load that you expected on the other hand you could use solutions from traditional content",
    "start": "178720",
    "end": "184959"
  },
  {
    "text": "delivery networks these were expensive these were complicated and a lot of times they meant using proprietary code",
    "start": "184959",
    "end": "191120"
  },
  {
    "text": "you had to change the way your site was built in order to interact with the traditional",
    "start": "191120",
    "end": "196560"
  },
  {
    "text": "content delivery network so earlier this year we came out with dynamic content support for",
    "start": "196560",
    "end": "203200"
  },
  {
    "start": "199000",
    "end": "199000"
  },
  {
    "text": "amazon cloudfront and we were really focused on accomplishing three things the first thing was to make dynamic",
    "start": "203200",
    "end": "210000"
  },
  {
    "text": "content simple to use we wanted something that a developer could develop on their own",
    "start": "210000",
    "end": "215519"
  },
  {
    "text": "configure it with just the web console not hire a consultant not learn any proprietary",
    "start": "215519",
    "end": "221440"
  },
  {
    "text": "languages we wanted something that works really well with other aws services a lot of",
    "start": "221440",
    "end": "226720"
  },
  {
    "text": "our customers use amazon s3 for their static content we wanted to make dynamic content work",
    "start": "226720",
    "end": "232400"
  },
  {
    "text": "really well for origins running an amazon ec2 we keep a close eye on the connections",
    "start": "232400",
    "end": "237680"
  },
  {
    "text": "between amazon cloudfront edge locations and our amazon ec2 data centers",
    "start": "237680",
    "end": "244159"
  },
  {
    "text": "we wanted also things that would work with standard aws resources like aws cloudformation",
    "start": "244159",
    "end": "250000"
  },
  {
    "text": "templates finally we wanted product a solution that was low cost",
    "start": "250000",
    "end": "256000"
  },
  {
    "text": "low cost meant not paying upfront charges setup fees paying only for the data transfer and",
    "start": "256000",
    "end": "262880"
  },
  {
    "text": "requests that you actually use with the service and one of the things that we decided to do is to price dynamic",
    "start": "262880",
    "end": "268080"
  },
  {
    "text": "content at the same rates that we already charge for static delivery so there's no surcharge for delivering",
    "start": "268080",
    "end": "274720"
  },
  {
    "text": "dynamic content with amazon cloudfront so here's how it works",
    "start": "274720",
    "end": "279840"
  },
  {
    "start": "278000",
    "end": "278000"
  },
  {
    "text": "the first thing that cloudfront does whether it's static or dynamic content is route end users to the nearest edge",
    "start": "279840",
    "end": "285840"
  },
  {
    "text": "location when i say nearest what i specifically mean is the lowest latency edge location",
    "start": "285840",
    "end": "291360"
  },
  {
    "text": "so we have done a variety of techniques to figure out for each end user on the internet which one of our 38 edge",
    "start": "291360",
    "end": "297520"
  },
  {
    "text": "locations is best positioned to serve that request with lower lowest latency",
    "start": "297520",
    "end": "304160"
  },
  {
    "text": "cloudfront will then separate the static and dynamic requests",
    "start": "304160",
    "end": "309759"
  },
  {
    "text": "and send those back to different origins if you've configured it that way so in this example we're sending static",
    "start": "309759",
    "end": "315919"
  },
  {
    "text": "content to an amazon s3 bucket and we're sending dynamic content to an elastic load balancer in front of a series of",
    "start": "315919",
    "end": "322320"
  },
  {
    "text": "amazon ec2 instances all of that can happen with a single cloudfront domain name",
    "start": "322320",
    "end": "329360"
  },
  {
    "text": "the connections between the amazon cloudfront edge location and the",
    "start": "329360",
    "end": "334960"
  },
  {
    "text": "amazon data centers where ec2 and amazon s3 are are monitored",
    "start": "334960",
    "end": "340320"
  },
  {
    "text": "we maintain persistent tcp connections between those sites and those origins in order to",
    "start": "340320",
    "end": "345520"
  },
  {
    "text": "improve performance talk a little bit about where we are",
    "start": "345520",
    "end": "350960"
  },
  {
    "start": "350000",
    "end": "350000"
  },
  {
    "text": "i used to be able to tell you every location off the top of my head pretty quickly now it takes a long time",
    "start": "350960",
    "end": "356000"
  },
  {
    "text": "what i'll say is we're on five continents with 38 edge locations some of the notable ones that we've",
    "start": "356000",
    "end": "361360"
  },
  {
    "text": "added in the last year or so have included sydney australia sao paulo",
    "start": "361360",
    "end": "366400"
  },
  {
    "text": "brazil milan madrid as well as improving our density within",
    "start": "366400",
    "end": "372960"
  },
  {
    "text": "the united states the point here is that there is a edge location near to",
    "start": "372960",
    "end": "378400"
  },
  {
    "text": "most of the end users on the internet and that's really our goal is to get edge locations close to as many end users as we possibly can",
    "start": "378400",
    "end": "386479"
  },
  {
    "start": "386000",
    "end": "386000"
  },
  {
    "text": "performance is very important to us this is what we what we're really selling whether it's for dynamic and static content",
    "start": "386880",
    "end": "392800"
  },
  {
    "text": "put this graph up it's probably a little hard to read on the screen there's actually white papers here that you can pick up afterwards this is a study that",
    "start": "392800",
    "end": "399840"
  },
  {
    "text": "amazon.com did there's no expectation at amazon that uh a",
    "start": "399840",
    "end": "405520"
  },
  {
    "text": "amazon retail site would use cloudfront just because it was another aws property we had to prove to them that we had the",
    "start": "405520",
    "end": "410960"
  },
  {
    "text": "performance that they expect from their cdns so this was a study that they did that",
    "start": "410960",
    "end": "416319"
  },
  {
    "text": "showed that cloudfront was seven percent faster than the next fastest cdn it wasn't until they've done this that",
    "start": "416319",
    "end": "422319"
  },
  {
    "text": "they really got comfortable using cloudfront so with that let's deep dive into some",
    "start": "422319",
    "end": "428000"
  },
  {
    "text": "of the features that we've built briefly for static content this is features that have been around for",
    "start": "428000",
    "end": "434000"
  },
  {
    "start": "430000",
    "end": "430000"
  },
  {
    "text": "four years we take a very incremental approach here at aws where we start with something basic and then we add features",
    "start": "434000",
    "end": "439440"
  },
  {
    "text": "uh along the way so we initially started with just simple http delivery we then added the ability to i won't get",
    "start": "439440",
    "end": "445759"
  },
  {
    "text": "this right in order but um we added the ability to deliver content over https",
    "start": "445759",
    "end": "451120"
  },
  {
    "text": "we added options for rtmp and http streaming we had a feature called private content",
    "start": "451120",
    "end": "456479"
  },
  {
    "text": "which allows you to sign urls so that they're only available to the viewers that you say should have access to the",
    "start": "456479",
    "end": "462080"
  },
  {
    "text": "content we gave you the ability to invalidate your content basically get something out of cache before it's of expiration",
    "start": "462080",
    "end": "468319"
  },
  {
    "text": "period we gave you access logs that allow you to do reporting and analytics on your content and everything we've done is",
    "start": "468319",
    "end": "475199"
  },
  {
    "text": "available via the management console and via our apis",
    "start": "475199",
    "end": "481120"
  },
  {
    "start": "481000",
    "end": "481000"
  },
  {
    "text": "but what i want to spend the most time on here today is actually the features we've built for dynamic content i'm going to talk about four of these",
    "start": "481120",
    "end": "487520"
  },
  {
    "text": "the first is connection optimization the second is multiple cache behaviors the third is multiple origin servers and the",
    "start": "487520",
    "end": "494400"
  },
  {
    "text": "fourth is query strings and cookie support so optimized connections",
    "start": "494400",
    "end": "501599"
  },
  {
    "start": "498000",
    "end": "498000"
  },
  {
    "text": "exist both between your origin and the amazon cloudfront edge locations and between the cloud front end location in",
    "start": "501599",
    "end": "507280"
  },
  {
    "text": "your user we take a lot of use between the origin and cloudfront of persistent connections we will collapse multiple requests on",
    "start": "507280",
    "end": "514159"
  },
  {
    "text": "top of each other so if you have multiple end users making requests for the same object at the same time we will",
    "start": "514159",
    "end": "520159"
  },
  {
    "text": "collapse those into a single request on your origin that reduces load it also improves performance and as i mentioned",
    "start": "520159",
    "end": "526320"
  },
  {
    "text": "before the traffic is coming over a series of internet paths that we are we are monitoring",
    "start": "526320",
    "end": "532160"
  },
  {
    "text": "between the cloud cloudfront and the end user we've done work to open up the tcp",
    "start": "532160",
    "end": "538000"
  },
  {
    "text": "uh initial congestion window we maintain persistent connections with your viewers",
    "start": "538000",
    "end": "544560"
  },
  {
    "start": "546000",
    "end": "546000"
  },
  {
    "text": "multiple origins a lot of folks like to work with a single domain name use relative paths in",
    "start": "546480",
    "end": "552560"
  },
  {
    "text": "their html files but also like to have multiple origins",
    "start": "552560",
    "end": "558000"
  },
  {
    "text": "backing those up and traditionally that was a hard problem so what we did is we allowed customers",
    "start": "558000",
    "end": "564160"
  },
  {
    "text": "to separate to use a single cloudfront domain name with multiple origins behind it",
    "start": "564160",
    "end": "569680"
  },
  {
    "text": "so a lot of customers will use this to separate their static and dynamic content",
    "start": "569680",
    "end": "575120"
  },
  {
    "text": "i have the picture of the mars rover here uh you heard kwaja talk yesterday about how",
    "start": "575120",
    "end": "581760"
  },
  {
    "text": "nasa used cloudfront to bring images back from mars and into",
    "start": "581760",
    "end": "587360"
  },
  {
    "text": "homes of everyone through cloudfront they were actually using one cloudfront domain name in front of three separate",
    "start": "587360",
    "end": "592959"
  },
  {
    "text": "origins they had an s3 bucket for their static images they had a two el different elbs",
    "start": "592959",
    "end": "600399"
  },
  {
    "text": "for their dynamic content and they used a single cloudfront url in order to distribute the contents of their end",
    "start": "600399",
    "end": "606160"
  },
  {
    "text": "user this was exactly why we built the multiple origins feature",
    "start": "606160",
    "end": "611920"
  },
  {
    "text": "cache behaviors cache behaviors tell you which origin to use they also apply settings like ssl private content",
    "start": "611920",
    "end": "619360"
  },
  {
    "text": "minimum ttls and the use of query queries and cat or cookies or query strings what is a cache behavior",
    "start": "619360",
    "end": "626000"
  },
  {
    "text": "basically it's a pattern matching anything that adds in jpeg i want to send to this origin and",
    "start": "626000",
    "end": "632720"
  },
  {
    "text": "treat a static content anything that adds in dot html i want to send this way to my dynamic origin that runs an elb",
    "start": "632720",
    "end": "640720"
  },
  {
    "text": "and use zero ttls so based on pattern matching of your url",
    "start": "640720",
    "end": "646720"
  },
  {
    "text": "could be pass you know static or slash dynamic is another thing that we've seen",
    "start": "646720",
    "end": "652800"
  },
  {
    "text": "you can determine which origin to use and what default cache settings to use",
    "start": "652800",
    "end": "657839"
  },
  {
    "text": "and we'll see an example of this in the demo finally cookies and query strings these",
    "start": "657839",
    "end": "663920"
  },
  {
    "start": "662000",
    "end": "662000"
  },
  {
    "text": "are ways that you can customize the dynamic content on your site specifically for individual end users",
    "start": "663920",
    "end": "669920"
  },
  {
    "text": "so you can set a cookie for each end user and then tell con cloudfront to",
    "start": "669920",
    "end": "675200"
  },
  {
    "text": "vary what version of the content it delivers based on the on that cookie",
    "start": "675200",
    "end": "680640"
  },
  {
    "text": "you can create a white list of cookies that we send back to your origin and so",
    "start": "680640",
    "end": "685760"
  },
  {
    "text": "you basically get full control with how you use cookies in order to individualize the content on your site",
    "start": "685760",
    "end": "693279"
  },
  {
    "text": "so with that let's take a take a look at a demo",
    "start": "693279",
    "end": "697680"
  },
  {
    "text": "and what i'm going to take you through is a very simple app it's not really doesn't really do anything too",
    "start": "699680",
    "end": "704800"
  },
  {
    "text": "useful but it's designed to illustrate",
    "start": "704800",
    "end": "710160"
  },
  {
    "text": "the key concepts that we've talked about here today so the first thing i've done i've been",
    "start": "710160",
    "end": "715519"
  },
  {
    "text": "working with parveez from our solutions architecture team and he built a very simple application",
    "start": "715519",
    "end": "721680"
  },
  {
    "text": "that will return the top three hashtags that are currently in twitter",
    "start": "721680",
    "end": "727040"
  },
  {
    "text": "and i think he built this using elastic beanstalk and i'll just refresh it here and you",
    "start": "727040",
    "end": "732160"
  },
  {
    "text": "can see that mention 10 people you really love i won't read these all out you can read",
    "start": "732160",
    "end": "737440"
  },
  {
    "text": "it and this is some of the fun of a live demo so it's a web service call that would",
    "start": "737440",
    "end": "746320"
  },
  {
    "text": "it's a web service call that goes to the twitter api and gets",
    "start": "748560",
    "end": "753760"
  },
  {
    "text": "the currently trending hashtags uh the second thing that um",
    "start": "754480",
    "end": "760399"
  },
  {
    "text": "we did is we have a static image so this is a very simple static image it's the aws logo",
    "start": "760399",
    "end": "765680"
  },
  {
    "text": "and the third thing we have is a index page that is designed ultimately to stitch",
    "start": "765680",
    "end": "772079"
  },
  {
    "text": "all of these together so this will ultimately be our graph area where we graph each of the hashtags over",
    "start": "772079",
    "end": "779360"
  },
  {
    "text": "time we put the logo down at the bottom but it's an index page each of these three",
    "start": "779360",
    "end": "785040"
  },
  {
    "text": "sites have different origins so you see this is origin two i think that's just an apache server uh",
    "start": "785040",
    "end": "791839"
  },
  {
    "text": "this is amazon s3 for our static content this is origin which as i mentioned is an elastic",
    "start": "791839",
    "end": "798000"
  },
  {
    "text": "beanstalk application uh so let's stitch all these together using cloudfront and",
    "start": "798000",
    "end": "803440"
  },
  {
    "text": "so what i'm going to do is just i've actually done this all before the before the demo",
    "start": "803440",
    "end": "809680"
  },
  {
    "text": "take a look at my my distribution so here i've got a distribution that i've created it's a download distribution we",
    "start": "809680",
    "end": "815120"
  },
  {
    "text": "also have streaming distributions which speak rtmp between the edge and the end user this",
    "start": "815120",
    "end": "820480"
  },
  {
    "text": "will speak http between the edge and the end user i've added it has its own domain name",
    "start": "820480",
    "end": "827519"
  },
  {
    "text": "i've added actually a couple of c names usually when you're handing out names to your customers the d you know",
    "start": "827519",
    "end": "834160"
  },
  {
    "text": "what is it here d286mj5 that's not a really friendly name that you want to hand out to your",
    "start": "834160",
    "end": "840079"
  },
  {
    "text": "customers so in most cases you'll create a cname for your distribution i've done",
    "start": "840079",
    "end": "846320"
  },
  {
    "text": "reinvent.cloudfrontdemo.com i've set that up actually as a route 53",
    "start": "846320",
    "end": "851360"
  },
  {
    "text": "hosted zone with this i've set up three different origins and these correspond to the",
    "start": "851360",
    "end": "856639"
  },
  {
    "text": "three origins that we just just saw the web service that collects the hashtag",
    "start": "856639",
    "end": "861839"
  },
  {
    "text": "information the page that assembles the index document",
    "start": "861839",
    "end": "868000"
  },
  {
    "text": "and the static content in amazon s3 i then set up different cache behaviors",
    "start": "868000",
    "end": "873279"
  },
  {
    "text": "for these and what the cache behavior does is it says if i see this pattern",
    "start": "873279",
    "end": "879040"
  },
  {
    "text": "use this origin apply these settings and how do you want to handle query",
    "start": "879040",
    "end": "884720"
  },
  {
    "text": "strings or cookies or trusted signers we can go through one of these but basically this says that anything that",
    "start": "884720",
    "end": "890639"
  },
  {
    "text": "ends in html i want to send to my apache server anything that ends in",
    "start": "890639",
    "end": "896160"
  },
  {
    "text": "javascript i want to do the same thing if it's an image i want to send it back to",
    "start": "896160",
    "end": "902000"
  },
  {
    "text": "amazon s3 and anything else i'm going to go to the",
    "start": "902000",
    "end": "907760"
  },
  {
    "text": "web service where my hash information information is so if you want to take a",
    "start": "907760",
    "end": "912800"
  },
  {
    "text": "look at these we can just see what you can do you select the origin you select a pattern so this is",
    "start": "912800",
    "end": "918079"
  },
  {
    "text": "the default you always end up with a you know last else for your for your pattern",
    "start": "918079",
    "end": "925199"
  },
  {
    "text": "you can say do you want to require https how do you want to handle um",
    "start": "925199",
    "end": "932160"
  },
  {
    "text": "uh cache control headers you want to use a different ttl so here i've set a one second minimum ttl",
    "start": "933519",
    "end": "940800"
  },
  {
    "text": "how do you want to handle cookies i could have set that to white list cookies do i want to send query strings",
    "start": "940800",
    "end": "946240"
  },
  {
    "text": "back to my origin and you can set all of those and save it oh do you want these trusted",
    "start": "946240",
    "end": "951920"
  },
  {
    "text": "signers is another one so if you want to put this all together",
    "start": "951920",
    "end": "957120"
  },
  {
    "text": "what we can do is we can say reinvent",
    "start": "957120",
    "end": "962959"
  },
  {
    "text": "dot cloudfront demo dot com and",
    "start": "965199",
    "end": "970560"
  },
  {
    "text": "the service will pull these all together so now we've got a different set of uh three hashtags that you get",
    "start": "970560",
    "end": "978000"
  },
  {
    "text": "and where the application is plotting how those perform and refreshing every",
    "start": "978000",
    "end": "984000"
  },
  {
    "text": "second so you see i've mixed the static content like the logo with a",
    "start": "984000",
    "end": "989680"
  },
  {
    "text": "dynamic stream of data that's coming in from our elastic beanstalk app",
    "start": "989680",
    "end": "997399"
  },
  {
    "text": "so that's the demo with that i am going to turn things over to andy",
    "start": "997519",
    "end": "1005199"
  },
  {
    "text": "from earth networks who's going to talk a little bit about his experience with cloudfront at his company",
    "start": "1005199",
    "end": "1012480"
  },
  {
    "text": "thank you alex can you all hear me okay good uh",
    "start": "1016399",
    "end": "1023480"
  },
  {
    "text": "so my name is andy rosenbaum i'm the director of development for web and desktop products at earth networks",
    "start": "1025360",
    "end": "1031839"
  },
  {
    "start": "1029000",
    "end": "1029000"
  },
  {
    "text": "my focus is really to continually evolve the earth network's online presence and because the cdn plays such a critical",
    "start": "1031839",
    "end": "1037918"
  },
  {
    "text": "role in our architecture we work very closely with our cdn provider to ensure that our",
    "start": "1037919",
    "end": "1043438"
  },
  {
    "text": "cache is always optimized for performance and to help manage our costs i've been working in software",
    "start": "1043439",
    "end": "1048480"
  },
  {
    "text": "engineering for over 15 years with the last nine of them being at earth networks and primarily working within the",
    "start": "1048480",
    "end": "1054320"
  },
  {
    "text": "microsoft stack today what i'd like to do is give you some insight into how we arrived at the",
    "start": "1054320",
    "end": "1060400"
  },
  {
    "text": "decision to switch cdn providers over to amazon cloudfront and a surprisingly complicated process",
    "start": "1060400",
    "end": "1066400"
  },
  {
    "text": "that took place uh afterwards a process that didn't have anything to do with amazon cloudfront itself but was",
    "start": "1066400",
    "end": "1072320"
  },
  {
    "text": "actually due to a hard dependency we had on our previous cdn",
    "start": "1072320",
    "end": "1077840"
  },
  {
    "text": "provider a little background on earth networks earth networks owns and operates sensor networks and we're",
    "start": "1078840",
    "end": "1085679"
  },
  {
    "text": "probably better known for our weatherbug branded properties we utilize a vast sensor network",
    "start": "1085679",
    "end": "1091520"
  },
  {
    "text": "to provide a view on the state of the health of the planet using weather observations greenhouse gas and",
    "start": "1091520",
    "end": "1097120"
  },
  {
    "text": "lightning data all monitored in real time because we do this through a sensor network we're able to actually provide",
    "start": "1097120",
    "end": "1103600"
  },
  {
    "text": "real-time hyper-local information to our users and really when it comes to weather safety and planning this is a",
    "start": "1103600",
    "end": "1109520"
  },
  {
    "text": "really critical value proposition our user base includes",
    "start": "1109520",
    "end": "1114799"
  },
  {
    "text": "users of our weatherbug properties it's over 40 million users and hundreds of million pages monthly",
    "start": "1114799",
    "end": "1120799"
  },
  {
    "text": "as well as enterprise clients and a growing international client base as well and one of the things that makes us a",
    "start": "1120799",
    "end": "1126640"
  },
  {
    "text": "little bit different than other weather companies out there is one of our enterprise clients is actually the national weather service itself",
    "start": "1126640",
    "end": "1133039"
  },
  {
    "text": "so when you see a lot of these apps and websites out there getting the weather data for free from the national weather service",
    "start": "1133039",
    "end": "1138559"
  },
  {
    "text": "that data is actually partially generated off the data that's coming from our network",
    "start": "1138559",
    "end": "1143759"
  },
  {
    "text": "so weather data is unique in the sense that it is localized personalized and very dynamic whether you're using it for",
    "start": "1147600",
    "end": "1153840"
  },
  {
    "text": "planning or for safety people want weather information that's relevant to them with millions of users accessing our",
    "start": "1153840",
    "end": "1160240"
  },
  {
    "text": "data we need to be able to maintain the integrity of our core systems while ensuring the best possible user",
    "start": "1160240",
    "end": "1165840"
  },
  {
    "text": "experience the cdn is a critical part of our architecture that really starts with that vast sensor network and ends with",
    "start": "1165840",
    "end": "1172880"
  },
  {
    "text": "the decisions that are ultimately made by our users as much as they rely on us on a routine",
    "start": "1172880",
    "end": "1178240"
  },
  {
    "text": "basis just for planning out their day you know their expectations are that we will be just as reliable during severe",
    "start": "1178240",
    "end": "1184320"
  },
  {
    "text": "weather which is when they really need us amazon cloudfront helps us ensure that we're always going to be there for them",
    "start": "1184320",
    "end": "1190080"
  },
  {
    "text": "regardless of the load or the weather now as you can see in this graph on website analytics from the week of",
    "start": "1190080",
    "end": "1196240"
  },
  {
    "text": "hurricane sandy we actually saw an 800 percent increase in the number of page views and a 400 increase in the number",
    "start": "1196240",
    "end": "1202799"
  },
  {
    "text": "of unique visitors now if you need to scale to this worst case scenario would basically mean you'd",
    "start": "1202799",
    "end": "1208559"
  },
  {
    "text": "be having a silent infrastructure that can support eight times the load but only really needed 10 to 20 times",
    "start": "1208559",
    "end": "1214400"
  },
  {
    "text": "throughout the year and that's not really efficient and it's definitely not very cost effective so",
    "start": "1214400",
    "end": "1220080"
  },
  {
    "text": "what you want to do is scale yourself horizontally and utilize a cdn like amazon cloudfront",
    "start": "1220080",
    "end": "1225520"
  },
  {
    "text": "and optimize your cache to limit the impact on your infrastructure while still serving up the important",
    "start": "1225520",
    "end": "1230559"
  },
  {
    "text": "information to your users especially during these kinds of load spikes you know another example during",
    "start": "1230559",
    "end": "1236400"
  },
  {
    "text": "hurricane sandy was we saw our database servers running very hot due to this increase in load and we would be able to",
    "start": "1236400",
    "end": "1242400"
  },
  {
    "text": "very quickly make some changes to some of our cash rules and adjust some increase some of the time to live on",
    "start": "1242400",
    "end": "1247840"
  },
  {
    "text": "those cash rules to free up some capacity in the database amazon cloudfront allows you to react to",
    "start": "1247840",
    "end": "1254080"
  },
  {
    "text": "changing weather and load patterns and adjust your cache times quickly to ensure the user experience and the",
    "start": "1254080",
    "end": "1259600"
  },
  {
    "text": "stability of your core systems",
    "start": "1259600",
    "end": "1263640"
  },
  {
    "text": "so one of the biggest hurdles we knew we were going to face when we were looking at switching cdn providers was the scope",
    "start": "1266480",
    "end": "1272000"
  },
  {
    "text": "of how dependent we were on our previous provider we have basically spent the last six years",
    "start": "1272000",
    "end": "1278000"
  },
  {
    "start": "1274000",
    "end": "1274000"
  },
  {
    "text": "optimizing our code our architecture and our cache structure to get the best possible cachet ratio as well as edge",
    "start": "1278000",
    "end": "1284880"
  },
  {
    "text": "offloading and this meant only not only custom code but a very specific architecture that",
    "start": "1284880",
    "end": "1289919"
  },
  {
    "text": "allows us to get optimal edge performance so the real benefit for us was to get away from having this custom",
    "start": "1289919",
    "end": "1295520"
  },
  {
    "text": "implementation allowing us to move faster with changes the amount of time it was taking for us",
    "start": "1295520",
    "end": "1301360"
  },
  {
    "text": "to iterate through releases was extremely high due to the customized nature of the code and what should have",
    "start": "1301360",
    "end": "1306720"
  },
  {
    "text": "been hours was taking us days to develop and test not only that it was the technical knowledge that was required on the",
    "start": "1306720",
    "end": "1313120"
  },
  {
    "text": "system architecture it was very restricted to the point that only a very select few people within the company",
    "start": "1313120",
    "end": "1318559"
  },
  {
    "text": "could actually develop test and support it and really by select few i mean one",
    "start": "1318559",
    "end": "1324320"
  },
  {
    "text": "and that person was no longer had the capacity to continue to be the sole response for it",
    "start": "1324320",
    "end": "1329360"
  },
  {
    "text": "as he was being asked to do presentations at conferences",
    "start": "1329360",
    "end": "1334320"
  },
  {
    "start": "1337000",
    "end": "1337000"
  },
  {
    "text": "so why amazon cloudfront this project really started as they typically do with me getting a skype",
    "start": "1338080",
    "end": "1344720"
  },
  {
    "text": "message one day from my cio asking me to please stop by his office",
    "start": "1344720",
    "end": "1349919"
  },
  {
    "text": "now when your cio says please it really means one of two things one something's broken in production and he's really",
    "start": "1349919",
    "end": "1355200"
  },
  {
    "text": "ticked off and he wants your attention or two is about to drop a project in your lap they knows it's going to give",
    "start": "1355200",
    "end": "1360400"
  },
  {
    "text": "you a lot of heartburn in this case it was option number two we had basically been evaluating",
    "start": "1360400",
    "end": "1366240"
  },
  {
    "text": "cloudfront for the past several months for and saw them evolve from being a static content provider to doing dynamic",
    "start": "1366240",
    "end": "1372159"
  },
  {
    "text": "content and what he wanted to know was whether or not we thought i thought they were ready for us to have them be our",
    "start": "1372159",
    "end": "1378320"
  },
  {
    "text": "primary cdn provider and my answer to them was yes i mean they had all the features in place",
    "start": "1378320",
    "end": "1385039"
  },
  {
    "text": "for us to be able to migrate our properties order and all the benefits are there you're looking at cost savings",
    "start": "1385039",
    "end": "1390799"
  },
  {
    "text": "being able to optimize and consolidate your partner management under one platform the performance was outstanding",
    "start": "1390799",
    "end": "1397120"
  },
  {
    "text": "and it was a very simple interface to use",
    "start": "1397120",
    "end": "1402159"
  },
  {
    "text": "so then he then looked at me and said that's exactly what i wanted to hear you know our contract ends with our current cdn provider in four weeks i'm",
    "start": "1402159",
    "end": "1408880"
  },
  {
    "text": "not going to renew it you've got four weeks to move everything",
    "start": "1408880",
    "end": "1414039"
  },
  {
    "text": "so after essentially fleeing his office before he could drop any more of these fun projects in my lap i spent some time",
    "start": "1416880",
    "end": "1423360"
  },
  {
    "start": "1419000",
    "end": "1419000"
  },
  {
    "text": "digging a little bit deeper into the amazon cloudfront offering to see how it's going to",
    "start": "1423360",
    "end": "1428799"
  },
  {
    "text": "fit our product portfolio and sort of as you would expect with any new platform offering there are some",
    "start": "1428799",
    "end": "1435440"
  },
  {
    "text": "gotchas that we did run into and some features that are not yet available we provided this feedback to",
    "start": "1435440",
    "end": "1440880"
  },
  {
    "text": "the amazon cloudfront team and we're very happy with the response and the plan that they have in place to further",
    "start": "1440880",
    "end": "1446240"
  },
  {
    "text": "evolve the platform but is it important to note that when you're looking to move to amazon cloudfront it might not necessarily be",
    "start": "1446240",
    "end": "1452799"
  },
  {
    "text": "all unicorns and rainbows for you there are some key items to note case sensitivity and order sensitivity",
    "start": "1452799",
    "end": "1459840"
  },
  {
    "text": "people don't really type in manual urls anymore this might not be a big deal for you",
    "start": "1459840",
    "end": "1464880"
  },
  {
    "text": "but it does impact your ability to really get full coverage on your rules it makes it a little bit more challenging and also potentially could",
    "start": "1464880",
    "end": "1471120"
  },
  {
    "text": "impact your cash hit ratio and performance host names aren't passed through to the",
    "start": "1471120",
    "end": "1476400"
  },
  {
    "text": "origin so if you're only doing any domain based license keys or domain name based configuration this will have an",
    "start": "1476400",
    "end": "1482559"
  },
  {
    "text": "impact there they don't support form post so if if you're doing http post uh that content",
    "start": "1482559",
    "end": "1489919"
  },
  {
    "text": "is actually not passed through to the origin and and finally the last thing is reporting and this is actually a really",
    "start": "1489919",
    "end": "1496400"
  },
  {
    "text": "important item for us because it gives us visibility into the performance of our cdn they have all the data but it's all in",
    "start": "1496400",
    "end": "1502640"
  },
  {
    "text": "log files so they don't have a way for you to very quickly view the overall performance of your cache and be able to",
    "start": "1502640",
    "end": "1508720"
  },
  {
    "text": "see things quickly like cache hit ratios you know edge offloading and edge errors",
    "start": "1508720",
    "end": "1514720"
  },
  {
    "text": "now you can work around most of these items through code changes if you want to and for us none of them really show",
    "start": "1514720",
    "end": "1520080"
  },
  {
    "text": "stoppers for us deciding to move forward with them",
    "start": "1520080",
    "end": "1523840"
  },
  {
    "text": "so once we made the call we basically had to take inventory and identify the properties that we were going to move",
    "start": "1525440",
    "end": "1530720"
  },
  {
    "text": "and it broke down into three categories one the ones that we knew we couldn't move due to a feature not yet available",
    "start": "1530720",
    "end": "1535919"
  },
  {
    "text": "in amazon cloudfront two the ones were fairly easy and three the hard ones and the hard ones were the",
    "start": "1535919",
    "end": "1541760"
  },
  {
    "text": "ones that were going to require moving away from that old architecture and doing some very heavy testing to ensure",
    "start": "1541760",
    "end": "1547360"
  },
  {
    "text": "that was going to work on the amazon cloud front so in all we identified around 10 properties eight of which fell into the",
    "start": "1547360",
    "end": "1553440"
  },
  {
    "text": "easy category and two of which fell on the hard and those were our flagship desktop product",
    "start": "1553440",
    "end": "1559120"
  },
  {
    "text": "and our mobile web product now the reason they were hard was that under our previous cdn",
    "start": "1559120",
    "end": "1564720"
  },
  {
    "text": "we were able to optimize our cache through a series of customized fragmented html calls so each page was",
    "start": "1564720",
    "end": "1571760"
  },
  {
    "text": "actually cached and constructed at the edge in central fragments a user would make an http request for a",
    "start": "1571760",
    "end": "1578240"
  },
  {
    "text": "page and then the edge would call the origin for the page architecture and then determine what fragments of the",
    "start": "1578240",
    "end": "1583440"
  },
  {
    "text": "page were either already in cache and what workframes actually need to be then fetched again from the origin",
    "start": "1583440",
    "end": "1590480"
  },
  {
    "text": "those items will be fetched asynchronously and then reconstructed at the edge so they would deliver the final page back to the user",
    "start": "1590480",
    "end": "1598000"
  },
  {
    "text": "so user information as well was maintained through a combination of query strings and cookie values",
    "start": "1598000",
    "end": "1603279"
  },
  {
    "text": "so we obviously needed to take advantage of those amazon cloudfront features in order to ensure that the migration was even going to work",
    "start": "1603279",
    "end": "1609760"
  },
  {
    "text": "being able to pass that information through to the origin and actually have actually have it be",
    "start": "1609760",
    "end": "1615039"
  },
  {
    "text": "part of the cache key is what allows us to deliver that localized personalized and real-time",
    "start": "1615039",
    "end": "1620480"
  },
  {
    "text": "information to our users",
    "start": "1620480",
    "end": "1624600"
  },
  {
    "text": "so in the end what we really wanted to evaluate was the ultimate performance difference between our two cdns so we",
    "start": "1627039",
    "end": "1633120"
  },
  {
    "text": "already knew our cost savings and the real only major show stopper for us switching was going to be a performance",
    "start": "1633120",
    "end": "1638840"
  },
  {
    "text": "difference now i'm going to save you the tedious details of how we actually remove that customized architecture",
    "start": "1638840",
    "end": "1644880"
  },
  {
    "text": "to allow it to work on amazon cloudfront suffice it to say that the cdn should be part of your architecture but it should",
    "start": "1644880",
    "end": "1650720"
  },
  {
    "text": "be an interchangeable part and we ultimately were able to get to that",
    "start": "1650720",
    "end": "1655919"
  },
  {
    "text": "so the key to really comparing the cdn performance was to remove any other variables and had the only difference be",
    "start": "1655919",
    "end": "1661360"
  },
  {
    "text": "the cdn we ran two separate instances with the same infrastructure set up and then used",
    "start": "1661360",
    "end": "1666480"
  },
  {
    "text": "is logs to playback load against the the siloed pipelines now what we wanted to see was there any",
    "start": "1666480",
    "end": "1671840"
  },
  {
    "text": "noticeable difference in performance between the two pipelines and we wanted to measure this all the way from the",
    "start": "1671840",
    "end": "1677200"
  },
  {
    "text": "user to our backend services did the user experience any downgraded performance did our origin web services",
    "start": "1677200",
    "end": "1684240"
  },
  {
    "text": "experience any increase in load and did our back-end systems experience and experience any increase in load",
    "start": "1684240",
    "end": "1690559"
  },
  {
    "text": "and the answer across the board for us was no users perceive no change in performance or stability and in fact we saw slightly",
    "start": "1690559",
    "end": "1697279"
  },
  {
    "text": "higher performance out of amazon cloudfront's edge to the user than we saw out of our previous cdn and this was",
    "start": "1697279",
    "end": "1703279"
  },
  {
    "text": "actually verified in the white paper that they published that alex mentioned earlier that actually showed very similar",
    "start": "1703279",
    "end": "1708640"
  },
  {
    "text": "performance gains to what we saw in our testing so if you have a chance to read that white paper very highly recommended",
    "start": "1708640",
    "end": "1715200"
  },
  {
    "start": "1711000",
    "end": "1711000"
  },
  {
    "text": "now one of the reasons that we saw this good performance was that we actually took the time to really optimize our cache rules and",
    "start": "1715200",
    "end": "1722080"
  },
  {
    "text": "continue to monitor and adjust it you know as our experience with edge caching in the past that really was most",
    "start": "1722080",
    "end": "1728480"
  },
  {
    "text": "helpful here as was just having a solid understanding of how your users use your products and",
    "start": "1728480",
    "end": "1734480"
  },
  {
    "text": "how the data actually flows through your system so to summarize real quick the testing",
    "start": "1734480",
    "end": "1740480"
  },
  {
    "text": "you want to create your duplicate environments where load can be run against both cdns in parallel",
    "start": "1740480",
    "end": "1747360"
  },
  {
    "text": "try to eliminate other variables from your testing identify your baseline performance metrics you know give yourself a minimum",
    "start": "1747360",
    "end": "1753279"
  },
  {
    "text": "threshold to hit monitor your web server performance and look for any changes and things like requests per second",
    "start": "1753279",
    "end": "1759919"
  },
  {
    "text": "go back re-optimize your cache keys and your time to live values verify your functional consistency",
    "start": "1759919",
    "end": "1765039"
  },
  {
    "text": "between your two environments and verify your edge hits are actually being made using things like an http",
    "start": "1765039",
    "end": "1770159"
  },
  {
    "text": "sniffer and one of the parts of the response that comes back from cloudfront is a value that tells you whether or not",
    "start": "1770159",
    "end": "1776080"
  },
  {
    "text": "it's a cache hit or a cache miss this will help you verify whether or not the rules that you set are actually what you're going to see in production",
    "start": "1776080",
    "end": "1783520"
  },
  {
    "text": "and finally you know verify your user experience both the actual and the perceived just because your reports are telling",
    "start": "1783520",
    "end": "1789440"
  },
  {
    "text": "you everything is fast doesn't necessarily mean your users are experiencing that speed",
    "start": "1789440",
    "end": "1795039"
  },
  {
    "text": "so to give you some closure to the overall story once we got everything set up and configured we picked a monday to",
    "start": "1795039",
    "end": "1800640"
  },
  {
    "text": "go live and of course that was a weekend that i was actually sent out to california to meet with one of our other dev teams",
    "start": "1800640",
    "end": "1806320"
  },
  {
    "text": "that was probably not well thought out uh so we flipped the dns over on monday morning and you know despite all the",
    "start": "1806320",
    "end": "1812640"
  },
  {
    "text": "testing and verification we did everything immediately broke uh alarms were going off on our monitors",
    "start": "1812640",
    "end": "1818480"
  },
  {
    "text": "emails were flying around from the executive team it was kind of a mess and it really didn't have anything to do with amazon cloudfront",
    "start": "1818480",
    "end": "1824720"
  },
  {
    "text": "basically there was a server configuration and some code that was used to optimize under our previous",
    "start": "1824720",
    "end": "1830000"
  },
  {
    "text": "architecture that we missed and when we got it into production under the new load and the new architecture we were",
    "start": "1830000",
    "end": "1835600"
  },
  {
    "text": "starving our thread pool and our instances were getting knocked out of our elb so after ninjing out a new quick release",
    "start": "1835600",
    "end": "1843360"
  },
  {
    "text": "making a quick tweak to our configuration we were able to get everything calmed down and sent out all",
    "start": "1843360",
    "end": "1848960"
  },
  {
    "text": "clear message and ever since then everything's been running great we just blamed the entire incident on our dns",
    "start": "1848960",
    "end": "1856320"
  },
  {
    "start": "1857000",
    "end": "1857000"
  },
  {
    "text": "so as of today we've moved 10 properties under amazon cloudfront including the flagship desktop product as well as our",
    "start": "1858399",
    "end": "1863919"
  },
  {
    "text": "website several static file domains and actually some dynamic data feeds",
    "start": "1863919",
    "end": "1868960"
  },
  {
    "text": "now with millions of active users we're still able to retain the overall user experience when it comes to both",
    "start": "1868960",
    "end": "1874240"
  },
  {
    "text": "perceived and measured performance our cost savings are over 50 and this also takes into account the",
    "start": "1874240",
    "end": "1880320"
  },
  {
    "text": "anticipated load of the remaining properties we haven't yet migrated total time for the migration took four",
    "start": "1880320",
    "end": "1887120"
  },
  {
    "text": "weeks and in terms of what's needed for amazon cloudfront you know setting up is very simple you add your property you define",
    "start": "1887120",
    "end": "1894080"
  },
  {
    "text": "your cache rules and your configuration and then you point your dns to amazon's cloudfront's domain and you're pretty much all done",
    "start": "1894080",
    "end": "1900480"
  },
  {
    "text": "but even for those basic ones we still took an extra step to take a day to do some very basic testing making sure the",
    "start": "1900480",
    "end": "1906320"
  },
  {
    "text": "rules are doing what we were expecting so of those eight easy ones were able to get through those in about a week doing",
    "start": "1906320",
    "end": "1912080"
  },
  {
    "text": "about one a day while the hard ones that i mentioned earlier took us about three weeks between development and testing before",
    "start": "1912080",
    "end": "1918640"
  },
  {
    "text": "we were able to actually switch the dns over watch everything blow up in our face go back and fix it and then have everything",
    "start": "1918640",
    "end": "1924799"
  },
  {
    "text": "work great so i'm hoping for your case things fall into the easy category",
    "start": "1924799",
    "end": "1931720"
  },
  {
    "text": "the end goal for us is to have all of our web properties whether their websites feeds or static content",
    "start": "1935440",
    "end": "1941600"
  },
  {
    "text": "fall under amazon cloudfront and you know though this is the end goal it's really not the end of the overall",
    "start": "1941600",
    "end": "1946720"
  },
  {
    "text": "journey you know we constantly monitor and adjust our cache keys and our rules to really best optimize performance for",
    "start": "1946720",
    "end": "1953760"
  },
  {
    "text": "our users and our systems both as the amazon cloud cloud front platform",
    "start": "1953760",
    "end": "1959360"
  },
  {
    "text": "and our products and users evolve over time i'm really encouraged with the rate the",
    "start": "1959360",
    "end": "1964399"
  },
  {
    "text": "amazon cloudfront team has grown the service and the features that they offer and i'm really looking forward to",
    "start": "1964399",
    "end": "1969840"
  },
  {
    "text": "continuing to work with them as we partner together on our individual journeys so thank you turn back out",
    "start": "1969840",
    "end": "1978880"
  },
  {
    "text": "thank you very much andy really appreciate that story for more information about some of the",
    "start": "1983760",
    "end": "1989519"
  },
  {
    "text": "things you've heard here today the first place to go is our",
    "start": "1989519",
    "end": "1995039"
  },
  {
    "text": "website aws.amazon.com i don't think that dub dub dub should be there",
    "start": "1995039",
    "end": "2000720"
  },
  {
    "text": "in the cloudfront page you'll see a section that's specifically about dynamic content some other things you can try you can",
    "start": "2000720",
    "end": "2006320"
  },
  {
    "start": "2001000",
    "end": "2001000"
  },
  {
    "text": "sign up for cloudfront on our cloudfront page put your objects in your origin server set up a cloudfront distribution and",
    "start": "2006320",
    "end": "2012640"
  },
  {
    "text": "you're off to the races we're also doing a webinar on the 4th of december it will basically be a repeat",
    "start": "2012640",
    "end": "2019600"
  },
  {
    "text": "of this content here today so andy will be speaking with me if anyone you have colleagues you want to",
    "start": "2019600",
    "end": "2025440"
  },
  {
    "text": "have them see this material send them along on the 18th of december we're going to",
    "start": "2025440",
    "end": "2030559"
  },
  {
    "text": "be doing online office hours so if you have specific questions please go ahead and and join us for those office hours",
    "start": "2030559",
    "end": "2037679"
  },
  {
    "text": "you can pick up a copy of our performance paper here at the front of the room they're also available online",
    "start": "2037679",
    "end": "2043120"
  },
  {
    "text": "on our website and there's that dynamic content page again uh finally we tweet",
    "start": "2043120",
    "end": "2048398"
  },
  {
    "text": "from time to time at cloudfront on twitter so follow us there",
    "start": "2048399",
    "end": "2053679"
  },
  {
    "text": "um fill out an evaluation form your feedback is very valuable this is the first time we've done this",
    "start": "2053679",
    "end": "2059599"
  },
  {
    "text": "reinvent conference as a whole and we want to understand what sessions resonate with customers i'm going to stick around and answer any",
    "start": "2059599",
    "end": "2065839"
  },
  {
    "text": "questions that folks might have so please feel free to come up to the front of the room but thank you very much for joining us",
    "start": "2065839",
    "end": "2070960"
  },
  {
    "text": "here today",
    "start": "2070960",
    "end": "2074118"
  }
]