[
  {
    "text": "[Music]",
    "start": "720",
    "end": "7640"
  },
  {
    "text": "good morning I'm excited to be",
    "start": "7640",
    "end": "9960"
  },
  {
    "text": "here last quarter Netflix delivered",
    "start": "9960",
    "end": "13400"
  },
  {
    "text": "about 7 billion hours of video uh to",
    "start": "13400",
    "end": "16880"
  },
  {
    "text": "about 50 million customers in 60",
    "start": "16880",
    "end": "18880"
  },
  {
    "text": "countries and to do that we used a lot",
    "start": "18880",
    "end": "21320"
  },
  {
    "text": "of complex and dynamic AWS",
    "start": "21320",
    "end": "25039"
  },
  {
    "text": "infrastructure about 30 to 50,000",
    "start": "25039",
    "end": "27599"
  },
  {
    "text": "instances in about 12 zones 50% of those",
    "start": "27599",
    "end": "31080"
  },
  {
    "text": "instances turning over every day almost",
    "start": "31080",
    "end": "33040"
  },
  {
    "text": "all of them every year every month",
    "start": "33040",
    "end": "35120"
  },
  {
    "text": "petabytes of data hundreds of thousands",
    "start": "35120",
    "end": "37680"
  },
  {
    "text": "of files created and changed",
    "start": "37680",
    "end": "41160"
  },
  {
    "text": "daily now Computing technology is built",
    "start": "41160",
    "end": "44640"
  },
  {
    "text": "with layers of abstraction many years",
    "start": "44640",
    "end": "47360"
  },
  {
    "text": "ago we stopped using Assembly Language",
    "start": "47360",
    "end": "50440"
  },
  {
    "text": "and wi protocols in favor of higher",
    "start": "50440",
    "end": "52520"
  },
  {
    "text": "level",
    "start": "52520",
    "end": "53559"
  },
  {
    "text": "languages operating systems abstracted",
    "start": "53559",
    "end": "56239"
  },
  {
    "text": "away the management of the hardware and",
    "start": "56239",
    "end": "58760"
  },
  {
    "text": "with AWS API Eyes For the First Time",
    "start": "58760",
    "end": "61840"
  },
  {
    "text": "were able to programmatically control",
    "start": "61840",
    "end": "64239"
  },
  {
    "text": "whole systems of infrastructure offering",
    "start": "64239",
    "end": "66600"
  },
  {
    "text": "a new layer of",
    "start": "66600",
    "end": "68159"
  },
  {
    "text": "abstraction and now with Lambda we build",
    "start": "68159",
    "end": "70880"
  },
  {
    "text": "another new layer on top of",
    "start": "70880",
    "end": "72759"
  },
  {
    "text": "that with Lambda we can replace",
    "start": "72759",
    "end": "76040"
  },
  {
    "text": "inefficient procedural systems that",
    "start": "76040",
    "end": "78119"
  },
  {
    "text": "would pull the infrastructure for",
    "start": "78119",
    "end": "79680"
  },
  {
    "text": "updates in order to manage and control",
    "start": "79680",
    "end": "82040"
  },
  {
    "text": "we can replace it with declarative",
    "start": "82040",
    "end": "83880"
  },
  {
    "text": "rules-based systems triggered when",
    "start": "83880",
    "end": "86640"
  },
  {
    "text": "events happen that manage and adapt the",
    "start": "86640",
    "end": "88880"
  },
  {
    "text": "data processing fabric fabric to respond",
    "start": "88880",
    "end": "90840"
  },
  {
    "text": "to the needs and interests of what we",
    "start": "90840",
    "end": "92600"
  },
  {
    "text": "try to",
    "start": "92600",
    "end": "94040"
  },
  {
    "text": "accomplish I've got four examples let's",
    "start": "94040",
    "end": "97000"
  },
  {
    "text": "start with encoding media files Studios",
    "start": "97000",
    "end": "100479"
  },
  {
    "text": "push to us media files frequently for",
    "start": "100479",
    "end": "103040"
  },
  {
    "text": "their LIC their assets we've licensed",
    "start": "103040",
    "end": "105360"
  },
  {
    "text": "each time a file arrives we chop it into",
    "start": "105360",
    "end": "108040"
  },
  {
    "text": "5 minute chunks for parallel processing",
    "start": "108040",
    "end": "110799"
  },
  {
    "text": "uh we distribute it across the set of",
    "start": "110799",
    "end": "112320"
  },
  {
    "text": "systems and code when the last piece is",
    "start": "112320",
    "end": "114560"
  },
  {
    "text": "encoded uh we repackage it and then",
    "start": "114560",
    "end": "117280"
  },
  {
    "text": "deploy it for uh for uh CD use with",
    "start": "117280",
    "end": "121159"
  },
  {
    "text": "Lambda we can use rules triggered by the",
    "start": "121159",
    "end": "124280"
  },
  {
    "text": "movement of those assets to launch and",
    "start": "124280",
    "end": "126240"
  },
  {
    "text": "configure the necessary processing uh to",
    "start": "126240",
    "end": "128720"
  },
  {
    "text": "encode in the 60 different parallel",
    "start": "128720",
    "end": "130520"
  },
  {
    "text": "streams that we need and then we can use",
    "start": "130520",
    "end": "132879"
  },
  {
    "text": "the rules and the events to Aggregate",
    "start": "132879",
    "end": "134879"
  },
  {
    "text": "and deploy after all the parts have been",
    "start": "134879",
    "end": "139400"
  },
  {
    "text": "processed another example in the space",
    "start": "139400",
    "end": "142080"
  },
  {
    "text": "of backup in our environment hundreds of",
    "start": "142080",
    "end": "145160"
  },
  {
    "text": "different processes save or update data",
    "start": "145160",
    "end": "147120"
  },
  {
    "text": "in S3 continuously and with Lambda we",
    "start": "147120",
    "end": "150319"
  },
  {
    "text": "can use the rules that trigger on the",
    "start": "150319",
    "end": "152599"
  },
  {
    "text": "data updates to decide what needs to be",
    "start": "152599",
    "end": "155040"
  },
  {
    "text": "backed up what needs to be copied to",
    "start": "155040",
    "end": "157959"
  },
  {
    "text": "off-site storage and to check and",
    "start": "157959",
    "end": "160000"
  },
  {
    "text": "validate that it arrived safely and to",
    "start": "160000",
    "end": "162440"
  },
  {
    "text": "restart the copies and recheck and",
    "start": "162440",
    "end": "164800"
  },
  {
    "text": "revalidate if it didn't or raise alarms",
    "start": "164800",
    "end": "167080"
  },
  {
    "text": "in case of",
    "start": "167080",
    "end": "168680"
  },
  {
    "text": "failure a third example in the space of",
    "start": "168680",
    "end": "172680"
  },
  {
    "text": "security um we have hundreds of",
    "start": "172680",
    "end": "174760"
  },
  {
    "text": "different processes that start and stop",
    "start": "174760",
    "end": "176560"
  },
  {
    "text": "instances all the time now Lambda allows",
    "start": "176560",
    "end": "179519"
  },
  {
    "text": "us to validate that each new instance is",
    "start": "179519",
    "end": "182560"
  },
  {
    "text": "is constructed and configured in",
    "start": "182560",
    "end": "184519"
  },
  {
    "text": "accordance with the rules and and and",
    "start": "184519",
    "end": "186879"
  },
  {
    "text": "situations and to trigger shut down of",
    "start": "186879",
    "end": "189680"
  },
  {
    "text": "violations or notification of",
    "start": "189680",
    "end": "191400"
  },
  {
    "text": "unauthorized instances that appear in",
    "start": "191400",
    "end": "193159"
  },
  {
    "text": "our",
    "start": "193159",
    "end": "195239"
  },
  {
    "text": "infrastructure and then for a final",
    "start": "195239",
    "end": "197120"
  },
  {
    "text": "example in the space of operational",
    "start": "197120",
    "end": "199480"
  },
  {
    "text": "monitoring if we use an event-based",
    "start": "199480",
    "end": "201680"
  },
  {
    "text": "model to track the operational metric to",
    "start": "201680",
    "end": "204280"
  },
  {
    "text": "build the dashboards we can build nice",
    "start": "204280",
    "end": "206879"
  },
  {
    "text": "models and since the infrastructure",
    "start": "206879",
    "end": "209120"
  },
  {
    "text": "generates the events themselves we can",
    "start": "209120",
    "end": "211200"
  },
  {
    "text": "be confident nothing is missed and we're",
    "start": "211200",
    "end": "213080"
  },
  {
    "text": "seeing the whole picture and metrics",
    "start": "213080",
    "end": "215519"
  },
  {
    "text": "exceptions can trigger more rules that",
    "start": "215519",
    "end": "218280"
  },
  {
    "text": "make further changes to the environment",
    "start": "218280",
    "end": "219959"
  },
  {
    "text": "to compensate for changing",
    "start": "219959",
    "end": "223519"
  },
  {
    "text": "situations so we're excited to explore",
    "start": "223519",
    "end": "226200"
  },
  {
    "text": "these and many other opportunities to",
    "start": "226200",
    "end": "228400"
  },
  {
    "text": "use Lambda uh for rules based systems to",
    "start": "228400",
    "end": "231319"
  },
  {
    "text": "make our Computing more efficient and",
    "start": "231319",
    "end": "233360"
  },
  {
    "text": "more effective it's a new abstraction",
    "start": "233360",
    "end": "235879"
  },
  {
    "text": "layer that gets above the levels we've",
    "start": "235879",
    "end": "237959"
  },
  {
    "text": "used in the past promises more",
    "start": "237959",
    "end": "240439"
  },
  {
    "text": "efficiency cleaner Logic for better",
    "start": "240439",
    "end": "242879"
  },
  {
    "text": "control of our systems so thanks ver",
    "start": "242879",
    "end": "245879"
  },
  {
    "text": "it's uh I've been pleased to be here",
    "start": "245879",
    "end": "247879"
  },
  {
    "text": "today and I'm excited to see where this",
    "start": "247879",
    "end": "249959"
  },
  {
    "text": "product goes thank you",
    "start": "249959",
    "end": "253760"
  }
]