[
  {
    "start": "0",
    "end": "44000"
  },
  {
    "text": "hi my name is - Moomba and i am a",
    "start": "3730",
    "end": "6460"
  },
  {
    "text": "principal solutions architect with AWS",
    "start": "6460",
    "end": "8680"
  },
  {
    "text": "and I'm joined by common future who is",
    "start": "8680",
    "end": "11200"
  },
  {
    "text": "also in AWS principal architect",
    "start": "11200",
    "end": "13780"
  },
  {
    "text": "throughout this video series that we",
    "start": "13780",
    "end": "15820"
  },
  {
    "text": "have done we have spoken about",
    "start": "15820",
    "end": "17250"
  },
  {
    "text": "containerization and digital",
    "start": "17250",
    "end": "18789"
  },
  {
    "text": "modernization and specifically in this",
    "start": "18789",
    "end": "21010"
  },
  {
    "text": "video we are going to talk about how to",
    "start": "21010",
    "end": "23110"
  },
  {
    "text": "take a container image that we pre-built",
    "start": "23110",
    "end": "25720"
  },
  {
    "text": "using the darker tools and deploy that",
    "start": "25720",
    "end": "27880"
  },
  {
    "text": "to the EC s for gate service in AWS and",
    "start": "27880",
    "end": "32410"
  },
  {
    "text": "now we can scale that into multiple",
    "start": "32410",
    "end": "34870"
  },
  {
    "text": "environments and more effectively for",
    "start": "34870",
    "end": "36970"
  },
  {
    "text": "our customers so common can you take us",
    "start": "36970",
    "end": "38920"
  },
  {
    "text": "through what for gate is and how it",
    "start": "38920",
    "end": "41350"
  },
  {
    "text": "works and how you can use it in your",
    "start": "41350",
    "end": "43090"
  },
  {
    "text": "environment absolutely so you've built",
    "start": "43090",
    "end": "45340"
  },
  {
    "start": "44000",
    "end": "100000"
  },
  {
    "text": "your application and in our case it's",
    "start": "45340",
    "end": "46870"
  },
  {
    "text": "the pet store and you've pushed it up to",
    "start": "46870",
    "end": "48370"
  },
  {
    "text": "an image repository but now you need to",
    "start": "48370",
    "end": "49989"
  },
  {
    "text": "get it out in the wild for your users to",
    "start": "49989",
    "end": "51640"
  },
  {
    "text": "consume Amazon has a service called CCS",
    "start": "51640",
    "end": "54700"
  },
  {
    "text": "or elastics container service and that",
    "start": "54700",
    "end": "57340"
  },
  {
    "text": "is the version where you manage the the",
    "start": "57340",
    "end": "59200"
  },
  {
    "text": "cluster yourself so there's a control",
    "start": "59200",
    "end": "61480"
  },
  {
    "text": "plane which handles things like",
    "start": "61480",
    "end": "62620"
  },
  {
    "text": "scheduling of their tasks and then",
    "start": "62620",
    "end": "64299"
  },
  {
    "text": "there's the the portion that you control",
    "start": "64299",
    "end": "66310"
  },
  {
    "text": "which is the actual nodes and that's",
    "start": "66310",
    "end": "67810"
  },
  {
    "text": "where the tasks live or the containers",
    "start": "67810",
    "end": "69520"
  },
  {
    "text": "live it was last year reinvent we've",
    "start": "69520",
    "end": "71499"
  },
  {
    "text": "released a surface called AWS Fargate",
    "start": "71499",
    "end": "73270"
  },
  {
    "text": "which is essentially the same thing as",
    "start": "73270",
    "end": "75039"
  },
  {
    "text": "ECS but it's a managed version so now",
    "start": "75039",
    "end": "77139"
  },
  {
    "text": "you as a developer only have to care",
    "start": "77139",
    "end": "78880"
  },
  {
    "text": "about the application components and",
    "start": "78880",
    "end": "80619"
  },
  {
    "text": "you're not necessarily concerned about",
    "start": "80619",
    "end": "82389"
  },
  {
    "text": "the heavy lifting of managing",
    "start": "82389",
    "end": "83859"
  },
  {
    "text": "infrastructure so for AWS Fargate the",
    "start": "83859",
    "end": "86679"
  },
  {
    "text": "model the deployer application is",
    "start": "86679",
    "end": "88450"
  },
  {
    "text": "exactly the same you're using something",
    "start": "88450",
    "end": "90399"
  },
  {
    "text": "that's called a test definition so we're",
    "start": "90399",
    "end": "91840"
  },
  {
    "text": "gonna walk you through a task definition",
    "start": "91840",
    "end": "93130"
  },
  {
    "text": "and how you take your pet store",
    "start": "93130",
    "end": "94689"
  },
  {
    "text": "application define it inside of a task",
    "start": "94689",
    "end": "96999"
  },
  {
    "text": "definition and then deploy it into UCS",
    "start": "96999",
    "end": "99159"
  },
  {
    "text": "for gate so the first thing I want to",
    "start": "99159",
    "end": "101350"
  },
  {
    "text": "call out is the concept of a cluster so",
    "start": "101350",
    "end": "103389"
  },
  {
    "text": "inside a VCS there's a concept of a",
    "start": "103389",
    "end": "105219"
  },
  {
    "text": "cluster and that is essentially a",
    "start": "105219",
    "end": "106479"
  },
  {
    "text": "grouping of your application or tasks",
    "start": "106479",
    "end": "109209"
  },
  {
    "text": "and services and you can mix them",
    "start": "109209",
    "end": "110709"
  },
  {
    "text": "together so for your Windows",
    "start": "110709",
    "end": "112149"
  },
  {
    "text": "applications you need to run Windows",
    "start": "112149",
    "end": "113740"
  },
  {
    "text": "specific tasks but in the context of",
    "start": "113740",
    "end": "115749"
  },
  {
    "text": "Fargate which only works with linux",
    "start": "115749",
    "end": "117399"
  },
  {
    "text": "today you you can run for gate tasks and",
    "start": "117399",
    "end": "120279"
  },
  {
    "text": "classic ECX tasks side by side and it's",
    "start": "120279",
    "end": "123549"
  },
  {
    "text": "essentially a grouping the next thing",
    "start": "123549",
    "end": "125439"
  },
  {
    "text": "you're gonna do is get your task",
    "start": "125439",
    "end": "126909"
  },
  {
    "text": "definition and we'll walk you through",
    "start": "126909",
    "end": "128289"
  },
  {
    "text": "that and inside of that is your",
    "start": "128289",
    "end": "129970"
  },
  {
    "text": "container definition and all the things",
    "start": "129970",
    "end": "131260"
  },
  {
    "text": "that are unique about your container the",
    "start": "131260",
    "end": "133420"
  },
  {
    "text": "configuration your environment variables",
    "start": "133420",
    "end": "135489"
  },
  {
    "text": "and",
    "start": "135489",
    "end": "136190"
  },
  {
    "text": "last thing you're going to do is you're",
    "start": "136190",
    "end": "137210"
  },
  {
    "text": "going to define your service and your",
    "start": "137210",
    "end": "138560"
  },
  {
    "text": "service is essentially how much do you",
    "start": "138560",
    "end": "141320"
  },
  {
    "text": "need of the application you define",
    "start": "141320",
    "end": "142940"
  },
  {
    "text": "things around auto-scaling you define",
    "start": "142940",
    "end": "145010"
  },
  {
    "text": "how many versions or copies of the tests",
    "start": "145010",
    "end": "147320"
  },
  {
    "text": "that you want running and you deploy",
    "start": "147320",
    "end": "149120"
  },
  {
    "text": "that as part of your overall",
    "start": "149120",
    "end": "151060"
  },
  {
    "text": "application deployment into ECS Fargate",
    "start": "151060",
    "end": "154810"
  },
  {
    "text": "so the first thing we're going to do is",
    "start": "154810",
    "end": "157070"
  },
  {
    "text": "we're going to open up our task",
    "start": "157070",
    "end": "157910"
  },
  {
    "text": "definition and I just want to call out",
    "start": "157910",
    "end": "159740"
  },
  {
    "text": "the experience is supposed to be the",
    "start": "159740",
    "end": "161390"
  },
  {
    "text": "same so if you're a developer and you",
    "start": "161390",
    "end": "162800"
  },
  {
    "text": "were using ECS classic moving your tasks",
    "start": "162800",
    "end": "165620"
  },
  {
    "text": "over to Fargate is actually a very easy",
    "start": "165620",
    "end": "168080"
  },
  {
    "text": "process because all of the parameters",
    "start": "168080",
    "end": "169850"
  },
  {
    "text": "around defining your application are",
    "start": "169850",
    "end": "171770"
  },
  {
    "text": "exactly the same at very high level and",
    "start": "171770",
    "end": "174380"
  },
  {
    "text": "we document this thoroughly there's some",
    "start": "174380",
    "end": "175940"
  },
  {
    "text": "small changes and the most obvious one",
    "start": "175940",
    "end": "178910"
  },
  {
    "text": "is the one you're seeing here which is",
    "start": "178910",
    "end": "180290"
  },
  {
    "text": "the require compatibility if you declare",
    "start": "180290",
    "end": "182030"
  },
  {
    "text": "it as a far gate task it runs it for",
    "start": "182030",
    "end": "183770"
  },
  {
    "text": "gate and if you declare it as ec2 it",
    "start": "183770",
    "end": "185450"
  },
  {
    "text": "runs in classic uc2 but as you can see",
    "start": "185450",
    "end": "187700"
  },
  {
    "text": "here very similar to our doctor compose",
    "start": "187700",
    "end": "189740"
  },
  {
    "text": "file we have the application defined as",
    "start": "189740",
    "end": "192140"
  },
  {
    "text": "separate layers we have our pet store or",
    "start": "192140",
    "end": "193610"
  },
  {
    "text": "layer and all the aspects about the",
    "start": "193610",
    "end": "196160"
  },
  {
    "text": "application that are unique to pet store",
    "start": "196160",
    "end": "198080"
  },
  {
    "text": "things like where the registry is how",
    "start": "198080",
    "end": "200840"
  },
  {
    "text": "much memory and CPU environment",
    "start": "200840",
    "end": "202820"
  },
  {
    "text": "variables and then the exact same thing",
    "start": "202820",
    "end": "204709"
  },
  {
    "text": "from the Postgres perspective so to get",
    "start": "204709",
    "end": "206810"
  },
  {
    "text": "the application up and running now that",
    "start": "206810",
    "end": "208340"
  },
  {
    "text": "we have our task definition to find it's",
    "start": "208340",
    "end": "210230"
  },
  {
    "text": "a simple process where you need to",
    "start": "210230",
    "end": "211400"
  },
  {
    "text": "register your task definition",
    "start": "211400",
    "end": "214750"
  },
  {
    "text": "all right so we've deployed our task",
    "start": "215620",
    "end": "218330"
  },
  {
    "text": "definition up into AWS and just to think",
    "start": "218330",
    "end": "221870"
  },
  {
    "text": "about it it's essentially your blueprint",
    "start": "221870",
    "end": "223459"
  },
  {
    "text": "it's everything that you need to get",
    "start": "223459",
    "end": "224870"
  },
  {
    "text": "your application running up in a",
    "start": "224870",
    "end": "226220"
  },
  {
    "text": "container but it's not actually deployed",
    "start": "226220",
    "end": "228320"
  },
  {
    "text": "there's no service running so we now",
    "start": "228320",
    "end": "230269"
  },
  {
    "text": "need to go in and we need to actually",
    "start": "230269",
    "end": "231769"
  },
  {
    "text": "build the service house so if you follow",
    "start": "231769",
    "end": "233540"
  },
  {
    "start": "233000",
    "end": "395000"
  },
  {
    "text": "through the lab you should have the pet",
    "start": "233540",
    "end": "234800"
  },
  {
    "text": "store application up and running inside",
    "start": "234800",
    "end": "236300"
  },
  {
    "text": "a VCS Fargate and we're going to take a",
    "start": "236300",
    "end": "238220"
  },
  {
    "text": "look into all the components of how you",
    "start": "238220",
    "end": "239870"
  },
  {
    "text": "can actually visualize the application",
    "start": "239870",
    "end": "241760"
  },
  {
    "text": "and ensure that it's running correctly",
    "start": "241760",
    "end": "243110"
  },
  {
    "text": "at its top level of what you'll see here",
    "start": "243110",
    "end": "245690"
  },
  {
    "text": "is you'll see the application if you'll",
    "start": "245690",
    "end": "248090"
  },
  {
    "text": "see that it's sitting behind a load",
    "start": "248090",
    "end": "249260"
  },
  {
    "text": "balancer you'll see that it's sitting in",
    "start": "249260",
    "end": "250760"
  },
  {
    "text": "the security groups that you defined and",
    "start": "250760",
    "end": "252530"
  },
  {
    "text": "what you'll see is the tasks so the",
    "start": "252530",
    "end": "254450"
  },
  {
    "text": "service creates the task and here we",
    "start": "254450",
    "end": "256609"
  },
  {
    "text": "only have one task running and if you",
    "start": "256609",
    "end": "258410"
  },
  {
    "text": "click into it what you're seeing is",
    "start": "258410",
    "end": "260120"
  },
  {
    "text": "you're seeing that it's using the task",
    "start": "260120",
    "end": "261739"
  },
  {
    "text": "definition that we declared earlier and",
    "start": "261739",
    "end": "263660"
  },
  {
    "text": "you can see here that you can actually",
    "start": "263660",
    "end": "265130"
  },
  {
    "text": "see both containers you can see the",
    "start": "265130",
    "end": "267020"
  },
  {
    "text": "Postgres container and you can see the",
    "start": "267020",
    "end": "268370"
  },
  {
    "text": "pet store container the interesting",
    "start": "268370",
    "end": "270030"
  },
  {
    "text": "thing about this is and if you think",
    "start": "270030",
    "end": "271229"
  },
  {
    "text": "about this at scale and you think about",
    "start": "271229",
    "end": "273300"
  },
  {
    "text": "this application running hundreds and",
    "start": "273300",
    "end": "275370"
  },
  {
    "text": "thousands of times you want those logs",
    "start": "275370",
    "end": "277830"
  },
  {
    "text": "to go in a centralized place so as part",
    "start": "277830",
    "end": "280050"
  },
  {
    "text": "of a task definition and as part of ECS",
    "start": "280050",
    "end": "282960"
  },
  {
    "text": "Fargate you have the ability to push",
    "start": "282960",
    "end": "284789"
  },
  {
    "text": "your logs into cloud watch and it's very",
    "start": "284789",
    "end": "286949"
  },
  {
    "text": "simple to do if you take a look at the",
    "start": "286949",
    "end": "288750"
  },
  {
    "text": "cloud watch configuration inside the",
    "start": "288750",
    "end": "291120"
  },
  {
    "text": "task definition it's as simple as",
    "start": "291120",
    "end": "292560"
  },
  {
    "text": "defining the log driver of AWS logs and",
    "start": "292560",
    "end": "295050"
  },
  {
    "text": "it's as simple as defining the the",
    "start": "295050",
    "end": "297180"
  },
  {
    "text": "region and the prefix and then from",
    "start": "297180",
    "end": "299039"
  },
  {
    "text": "there assuming that you have the",
    "start": "299039",
    "end": "300360"
  },
  {
    "text": "permissions you can push those logs out",
    "start": "300360",
    "end": "302400"
  },
  {
    "text": "to a centralized repo for applications",
    "start": "302400",
    "end": "304590"
  },
  {
    "text": "the partner solutions or even maybe our",
    "start": "304590",
    "end": "307349"
  },
  {
    "text": "own elasticsearch Qabbani solution to",
    "start": "307349",
    "end": "309330"
  },
  {
    "text": "consume them and visualize them to",
    "start": "309330",
    "end": "311009"
  },
  {
    "text": "understand what's going on with your",
    "start": "311009",
    "end": "312150"
  },
  {
    "text": "application so if you take a look here",
    "start": "312150",
    "end": "314039"
  },
  {
    "text": "here's a very simplistic view here's our",
    "start": "314039",
    "end": "315840"
  },
  {
    "text": "pet store application and what you're",
    "start": "315840",
    "end": "317610"
  },
  {
    "text": "seeing is the task actually emulating or",
    "start": "317610",
    "end": "319949"
  },
  {
    "text": "pushing those logs out so you can",
    "start": "319949",
    "end": "321509"
  },
  {
    "text": "visualize them right here in the console",
    "start": "321509",
    "end": "322949"
  },
  {
    "text": "you can see the ELB health check hitting",
    "start": "322949",
    "end": "325259"
  },
  {
    "text": "it and what's happening here is wildfly",
    "start": "325259",
    "end": "327360"
  },
  {
    "text": "when we configured wildfly earlier in",
    "start": "327360",
    "end": "329099"
  },
  {
    "text": "the standalone xml we're using standard",
    "start": "329099",
    "end": "331530"
  },
  {
    "text": "out to push these HTTP logs to over",
    "start": "331530",
    "end": "334800"
  },
  {
    "text": "standard out which pushes them into",
    "start": "334800",
    "end": "336240"
  },
  {
    "text": "cloud watch and if you take a look over",
    "start": "336240",
    "end": "338550"
  },
  {
    "text": "here at the load balancer you could see",
    "start": "338550",
    "end": "340349"
  },
  {
    "text": "the load balancer is up and running and",
    "start": "340349",
    "end": "341820"
  },
  {
    "text": "here is our pet store right so ECS will",
    "start": "341820",
    "end": "344430"
  },
  {
    "text": "make sure that every time one of our",
    "start": "344430",
    "end": "345990"
  },
  {
    "text": "tasks get launched to Fargate it",
    "start": "345990",
    "end": "347849"
  },
  {
    "text": "connects that back-end to our load",
    "start": "347849",
    "end": "349949"
  },
  {
    "text": "balancer automatically we don't manually",
    "start": "349949",
    "end": "351870"
  },
  {
    "text": "need to go do that correct yeah the load",
    "start": "351870",
    "end": "354270"
  },
  {
    "text": "balancer manages the health of the task",
    "start": "354270",
    "end": "356639"
  },
  {
    "text": "it's ensuring that it's up and running",
    "start": "356639",
    "end": "357990"
  },
  {
    "text": "at all times and that's why we set that",
    "start": "357990",
    "end": "359759"
  },
  {
    "text": "health check grace period earlier to",
    "start": "359759",
    "end": "361800"
  },
  {
    "text": "make sure that the container was up and",
    "start": "361800",
    "end": "363180"
  },
  {
    "text": "running before the load balancer starts",
    "start": "363180",
    "end": "364770"
  },
  {
    "text": "to inspect it and also the logging",
    "start": "364770",
    "end": "366509"
  },
  {
    "text": "seemed interesting to me because we",
    "start": "366509",
    "end": "367860"
  },
  {
    "text": "actually have two containers running",
    "start": "367860",
    "end": "369539"
  },
  {
    "text": "inside of this task definition do we",
    "start": "369539",
    "end": "371400"
  },
  {
    "text": "have portability or the configurability",
    "start": "371400",
    "end": "373020"
  },
  {
    "text": "to make sure that both containers don't",
    "start": "373020",
    "end": "375360"
  },
  {
    "text": "log to the same output we rather two",
    "start": "375360",
    "end": "378030"
  },
  {
    "text": "different different streams yeah",
    "start": "378030",
    "end": "379500"
  },
  {
    "text": "absolutely so you can define that inside",
    "start": "379500",
    "end": "381330"
  },
  {
    "text": "of your task definition you can easily",
    "start": "381330",
    "end": "382770"
  },
  {
    "text": "send them the separate locations if you",
    "start": "382770",
    "end": "384479"
  },
  {
    "text": "choose to in our example we just chose",
    "start": "384479",
    "end": "386669"
  },
  {
    "text": "that you throw everything into a",
    "start": "386669",
    "end": "388229"
  },
  {
    "text": "singular log group called pet store so",
    "start": "388229",
    "end": "391349"
  },
  {
    "text": "why would it be important for me to have",
    "start": "391349",
    "end": "392940"
  },
  {
    "text": "a centralized logging location so if you",
    "start": "392940",
    "end": "395580"
  },
  {
    "start": "395000",
    "end": "493000"
  },
  {
    "text": "think about it it's not going to be just",
    "start": "395580",
    "end": "397409"
  },
  {
    "text": "this application it's going to be this",
    "start": "397409",
    "end": "399630"
  },
  {
    "text": "application at scale it could be",
    "start": "399630",
    "end": "401279"
  },
  {
    "text": "deployed a hundred times it could be",
    "start": "401279",
    "end": "402699"
  },
  {
    "text": "deployed a thousand times but you're",
    "start": "402699",
    "end": "403990"
  },
  {
    "text": "going to have other applications as your",
    "start": "403990",
    "end": "405610"
  },
  {
    "text": "monolith gets decoupled and broken apart",
    "start": "405610",
    "end": "407830"
  },
  {
    "text": "so as you get more and more layers into",
    "start": "407830",
    "end": "410050"
  },
  {
    "text": "your micro service you want to",
    "start": "410050",
    "end": "411430"
  },
  {
    "text": "understand what's going on holistically",
    "start": "411430",
    "end": "412960"
  },
  {
    "text": "inside your application and you want to",
    "start": "412960",
    "end": "414460"
  },
  {
    "text": "put that in a centralized repository so",
    "start": "414460",
    "end": "416259"
  },
  {
    "text": "you can inspect your application and see",
    "start": "416259",
    "end": "418600"
  },
  {
    "text": "any area of the application at any given",
    "start": "418600",
    "end": "420789"
  },
  {
    "text": "point thank you very much : welcome so",
    "start": "420789",
    "end": "423430"
  },
  {
    "text": "in this workshop we took the container",
    "start": "423430",
    "end": "425380"
  },
  {
    "text": "that we built earlier and we placed it",
    "start": "425380",
    "end": "427750"
  },
  {
    "text": "in ECR and then we took it from ECR and",
    "start": "427750",
    "end": "430060"
  },
  {
    "text": "deployed it at scale using the ECS",
    "start": "430060",
    "end": "432699"
  },
  {
    "text": "container orchestration system this",
    "start": "432699",
    "end": "434770"
  },
  {
    "text": "allows us to deploy our application at",
    "start": "434770",
    "end": "436960"
  },
  {
    "text": "scale and monitor that application",
    "start": "436960",
    "end": "439180"
  },
  {
    "text": "successfully at scale as well to make",
    "start": "439180",
    "end": "441370"
  },
  {
    "text": "sure that our application is always",
    "start": "441370",
    "end": "443110"
  },
  {
    "text": "available to our customers but we did it",
    "start": "443110",
    "end": "445539"
  },
  {
    "text": "in a specific way where the developer",
    "start": "445539",
    "end": "447669"
  },
  {
    "text": "always has ownership and responsibility",
    "start": "447669",
    "end": "449970"
  },
  {
    "text": "for the environment that it'll end up",
    "start": "449970",
    "end": "452590"
  },
  {
    "text": "running in and they do that through the",
    "start": "452590",
    "end": "454570"
  },
  {
    "text": "task definition and the task definition",
    "start": "454570",
    "end": "456190"
  },
  {
    "text": "now certainly becomes a part of the",
    "start": "456190",
    "end": "458889"
  },
  {
    "text": "original source code of that application",
    "start": "458889",
    "end": "461080"
  },
  {
    "text": "so when common passes that application",
    "start": "461080",
    "end": "463990"
  },
  {
    "text": "over to me or to any other one of the",
    "start": "463990",
    "end": "466120"
  },
  {
    "text": "developers in our team we're able to",
    "start": "466120",
    "end": "467919"
  },
  {
    "text": "just bring up the exact same environment",
    "start": "467919",
    "end": "469630"
  },
  {
    "text": "and develop against that environment so",
    "start": "469630",
    "end": "472990"
  },
  {
    "text": "in our next video we're going to talk",
    "start": "472990",
    "end": "474789"
  },
  {
    "text": "about how you can do something similar",
    "start": "474789",
    "end": "476020"
  },
  {
    "text": "and orchestrate your application but not",
    "start": "476020",
    "end": "478510"
  },
  {
    "text": "using ECS but rather using our",
    "start": "478510",
    "end": "481000"
  },
  {
    "text": "kubernetes service on AWS so follow the",
    "start": "481000",
    "end": "483880"
  },
  {
    "text": "links below to watch how to deploy a",
    "start": "483880",
    "end": "486159"
  },
  {
    "text": "container at scale using kubernetes",
    "start": "486159",
    "end": "490260"
  }
]