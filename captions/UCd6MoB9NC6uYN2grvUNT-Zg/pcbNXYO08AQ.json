[
  {
    "text": "[Music]",
    "start": "160",
    "end": "1180"
  },
  {
    "text": "[Applause]",
    "start": "1180",
    "end": "2930"
  },
  {
    "text": "[Music]",
    "start": "2930",
    "end": "6099"
  },
  {
    "text": "hello I'm AOS a class board engineer",
    "start": "8440",
    "end": "10320"
  },
  {
    "text": "here at the AWS office in Sydney today",
    "start": "10320",
    "end": "12599"
  },
  {
    "text": "I'm going to show you how to use a Linux",
    "start": "12599",
    "end": "14280"
  },
  {
    "text": "Bastion host and an application load",
    "start": "14280",
    "end": "16358"
  },
  {
    "text": "balancer to gain access to an Amazon",
    "start": "16359",
    "end": "18320"
  },
  {
    "text": "managed workflows for Apache airflows",
    "start": "18320",
    "end": "20199"
  },
  {
    "text": "private airflow UI let's get",
    "start": "20199",
    "end": "23439"
  },
  {
    "text": "started I will start this tutorial by",
    "start": "23439",
    "end": "25800"
  },
  {
    "text": "showing how to connect to the mwaa",
    "start": "25800",
    "end": "28080"
  },
  {
    "text": "private airflow UI using a Linux Bastian",
    "start": "28080",
    "end": "30519"
  },
  {
    "text": "host paired with foxy proxy for Misa",
    "start": "30519",
    "end": "33040"
  },
  {
    "text": "Firefox to start we will launch an",
    "start": "33040",
    "end": "35239"
  },
  {
    "text": "Amazon elastic compute Cloud instance in",
    "start": "35239",
    "end": "37480"
  },
  {
    "text": "one of the public subnets of the mwaa",
    "start": "37480",
    "end": "39600"
  },
  {
    "text": "environment note also that you can use",
    "start": "39600",
    "end": "41879"
  },
  {
    "text": "any methodology to set up the Bastion",
    "start": "41879",
    "end": "43840"
  },
  {
    "text": "host for the Amazon mwa environment",
    "start": "43840",
    "end": "46360"
  },
  {
    "text": "we'll set up a new security group with a",
    "start": "46360",
    "end": "48120"
  },
  {
    "text": "key pair and then note this information",
    "start": "48120",
    "end": "49840"
  },
  {
    "text": "for later use and if you have a direct",
    "start": "49840",
    "end": "51960"
  },
  {
    "text": "connect connection or a VPN to your",
    "start": "51960",
    "end": "54719"
  },
  {
    "text": "Amazon virtual private Cloud then you",
    "start": "54719",
    "end": "56680"
  },
  {
    "text": "can place the instance in the private",
    "start": "56680",
    "end": "58559"
  },
  {
    "text": "subnet and allow access to the instance",
    "start": "58559",
    "end": "60960"
  },
  {
    "text": "on the private IP of the host that",
    "start": "60960",
    "end": "62719"
  },
  {
    "text": "you're connecting",
    "start": "62719",
    "end": "64960"
  },
  {
    "text": "from start by provisioning a new",
    "start": "64960",
    "end": "67840"
  },
  {
    "text": "instance moving through the ec2 console",
    "start": "67840",
    "end": "70400"
  },
  {
    "text": "to launch an",
    "start": "70400",
    "end": "72960"
  },
  {
    "text": "instance select your instance type and",
    "start": "74560",
    "end": "78560"
  },
  {
    "text": "Ami we will set up a keypad to be used",
    "start": "78560",
    "end": "81280"
  },
  {
    "text": "by the instance and a new security",
    "start": "81280",
    "end": "84560"
  },
  {
    "text": "group we will be putting this instance",
    "start": "84560",
    "end": "86880"
  },
  {
    "text": "inside of the same bpc as the mwaa",
    "start": "86880",
    "end": "89280"
  },
  {
    "text": "environment in a public",
    "start": "89280",
    "end": "92159"
  },
  {
    "text": "subnet by default inbound traffic is",
    "start": "102320",
    "end": "104840"
  },
  {
    "text": "enabled to the Bastion instances",
    "start": "104840",
    "end": "106479"
  },
  {
    "text": "Security Group using an Ingress rule on",
    "start": "106479",
    "end": "108079"
  },
  {
    "text": "Port 22 this will allow us to set up an",
    "start": "108079",
    "end": "110560"
  },
  {
    "text": "SSH tunnel using local port forwarding",
    "start": "110560",
    "end": "112960"
  },
  {
    "text": "we can move to the inbound rules of the",
    "start": "112960",
    "end": "114840"
  },
  {
    "text": "security groups to add the source as our",
    "start": "114840",
    "end": "116799"
  },
  {
    "text": "IP being used to connect the ec2",
    "start": "116799",
    "end": "118960"
  },
  {
    "text": "instance for added security do note you",
    "start": "118960",
    "end": "121119"
  },
  {
    "text": "should follow the security guidelines as",
    "start": "121119",
    "end": "122680"
  },
  {
    "text": "per your use case we are creating this",
    "start": "122680",
    "end": "124520"
  },
  {
    "text": "Ingress rule for the sake of",
    "start": "124520",
    "end": "127798"
  },
  {
    "text": "demonstration we will now launch our",
    "start": "129720",
    "end": "133920"
  },
  {
    "text": "instance let's move to our environment",
    "start": "138400",
    "end": "140519"
  },
  {
    "text": "Security Group within Amazon mwaa to",
    "start": "140519",
    "end": "142519"
  },
  {
    "text": "allow inbound traffic from the basion",
    "start": "142519",
    "end": "144239"
  },
  {
    "text": "instances Security Group head to mwa",
    "start": "144239",
    "end": "148000"
  },
  {
    "text": "console click on security group and add",
    "start": "148000",
    "end": "151239"
  },
  {
    "text": "the security group we copied from within",
    "start": "151239",
    "end": "153239"
  },
  {
    "text": "this previous step to an inbound rule",
    "start": "153239",
    "end": "154959"
  },
  {
    "text": "within that security",
    "start": "154959",
    "end": "157840"
  },
  {
    "text": "group we will next create an ec2",
    "start": "169440",
    "end": "172080"
  },
  {
    "text": "instance connect endpoint moving to the",
    "start": "172080",
    "end": "174200"
  },
  {
    "text": "VPC dashboard we will go to the endpoint",
    "start": "174200",
    "end": "176560"
  },
  {
    "text": "section we will press on create endpoint",
    "start": "176560",
    "end": "180200"
  },
  {
    "text": "within the service category section we",
    "start": "180200",
    "end": "181760"
  },
  {
    "text": "will select ec2 instance connect",
    "start": "181760",
    "end": "184040"
  },
  {
    "text": "endpoint within the VPC we will click on",
    "start": "184040",
    "end": "186840"
  },
  {
    "text": "the mwa environment",
    "start": "186840",
    "end": "188879"
  },
  {
    "text": "VPC within security groups we will",
    "start": "188879",
    "end": "191080"
  },
  {
    "text": "select the security group for our mwa",
    "start": "191080",
    "end": "193959"
  },
  {
    "text": "environment and within subnet we will",
    "start": "193959",
    "end": "196159"
  },
  {
    "text": "select the private subnet of our mwa",
    "start": "196159",
    "end": "199200"
  },
  {
    "text": "environment as we already have a ec2",
    "start": "199200",
    "end": "201480"
  },
  {
    "text": "instance connect endpoint within our",
    "start": "201480",
    "end": "202840"
  },
  {
    "text": "environment I w't click",
    "start": "202840",
    "end": "205920"
  },
  {
    "text": "create once the ec2 instance connect",
    "start": "208760",
    "end": "211159"
  },
  {
    "text": "endpoint has finished provisioning we",
    "start": "211159",
    "end": "212599"
  },
  {
    "text": "can move to our CLI the command AWS ec2",
    "start": "212599",
    "end": "215480"
  },
  {
    "text": "instance connect open Tunnel is the AWS",
    "start": "215480",
    "end": "217799"
  },
  {
    "text": "command line interface command that",
    "start": "217799",
    "end": "219680"
  },
  {
    "text": "establishes an SSH tunnel to an Amazon",
    "start": "219680",
    "end": "221920"
  },
  {
    "text": "ec2 instance over a secure data stream",
    "start": "221920",
    "end": "224280"
  },
  {
    "text": "we'll use this to set up the SSH tunnel",
    "start": "224280",
    "end": "226560"
  },
  {
    "text": "as mentioned when you execute this",
    "start": "226560",
    "end": "228000"
  },
  {
    "text": "command the aw CLI will initiate a",
    "start": "228000",
    "end": "230239"
  },
  {
    "text": "secure tunnels connection from your",
    "start": "230239",
    "end": "231640"
  },
  {
    "text": "local machine to the specified ec2",
    "start": "231640",
    "end": "233760"
  },
  {
    "text": "instance in the specific",
    "start": "233760",
    "end": "236760"
  },
  {
    "text": "region we will require the ipv4 DNS URL",
    "start": "237280",
    "end": "240640"
  },
  {
    "text": "of our ec2 instance to view this click",
    "start": "240640",
    "end": "243000"
  },
  {
    "text": "on the instance from within the ec2",
    "start": "243000",
    "end": "246920"
  },
  {
    "text": "console now in a new terminal session",
    "start": "252040",
    "end": "254640"
  },
  {
    "text": "let's use the AWS CLI to create an SSH",
    "start": "254640",
    "end": "257120"
  },
  {
    "text": "socks proxy tunnel through to an ec2",
    "start": "257120",
    "end": "259120"
  },
  {
    "text": "instance from our local",
    "start": "259120",
    "end": "262079"
  },
  {
    "text": "CLI return to the Amazon mwaa console to",
    "start": "262479",
    "end": "265880"
  },
  {
    "text": "save the airflow UI",
    "start": "265880",
    "end": "268720"
  },
  {
    "text": "URL let's complete the setup of Foxy",
    "start": "268720",
    "end": "271280"
  },
  {
    "text": "proxy to open the airflow UI within",
    "start": "271280",
    "end": "273039"
  },
  {
    "text": "Mozilla Firefox the following example",
    "start": "273039",
    "end": "275479"
  },
  {
    "text": "demonstrates a foxy proxy Standard",
    "start": "275479",
    "end": "277199"
  },
  {
    "text": "Version 8.9 configuration for Mozilla",
    "start": "277199",
    "end": "279320"
  },
  {
    "text": "Firefox foxy proxy provides a set of",
    "start": "279320",
    "end": "281720"
  },
  {
    "text": "proxy management tools and lets you use",
    "start": "281720",
    "end": "283199"
  },
  {
    "text": "a proxy server for URLs that match",
    "start": "283199",
    "end": "285320"
  },
  {
    "text": "patterns corresponding to domains used",
    "start": "285320",
    "end": "287240"
  },
  {
    "text": "by the Apache FPL UI choose the foxy",
    "start": "287240",
    "end": "289880"
  },
  {
    "text": "proxy icon in your browser's toolbar and",
    "start": "289880",
    "end": "291759"
  },
  {
    "text": "then choose",
    "start": "291759",
    "end": "294440"
  },
  {
    "text": "options head to",
    "start": "294479",
    "end": "297320"
  },
  {
    "text": "import and choose import from Auto",
    "start": "297320",
    "end": "299759"
  },
  {
    "text": "versions We will first move to copy the",
    "start": "299759",
    "end": "302240"
  },
  {
    "text": "following code and save it locally as n",
    "start": "302240",
    "end": "304720"
  },
  {
    "text": "proxy Json substitute the sample value",
    "start": "304720",
    "end": "307600"
  },
  {
    "text": "in your host name with your Apache",
    "start": "307600",
    "end": "309280"
  },
  {
    "text": "airflow",
    "start": "309280",
    "end": "311479"
  },
  {
    "text": "URL copy the following code and save it",
    "start": "311479",
    "end": "313800"
  },
  {
    "text": "locally as mwaa proxy Json substitute",
    "start": "313800",
    "end": "316560"
  },
  {
    "text": "the sample value in your host name with",
    "start": "316560",
    "end": "318440"
  },
  {
    "text": "your Apache a URL make sure to save this",
    "start": "318440",
    "end": "321240"
  },
  {
    "text": "file now within foxy proxy press input",
    "start": "321240",
    "end": "324600"
  },
  {
    "text": "from older versions input",
    "start": "324600",
    "end": "329440"
  },
  {
    "text": "click",
    "start": "332120",
    "end": "334479"
  },
  {
    "text": "save once saved you can move to back to",
    "start": "334520",
    "end": "337160"
  },
  {
    "text": "your",
    "start": "337160",
    "end": "338840"
  },
  {
    "text": "extensions click on foxy proxy and click",
    "start": "338840",
    "end": "344160"
  },
  {
    "text": "airflow Now using the airflow URL you",
    "start": "345919",
    "end": "348680"
  },
  {
    "text": "may access the airflow UI by setting up",
    "start": "348680",
    "end": "350639"
  },
  {
    "text": "a socks proxy you can route your web",
    "start": "350639",
    "end": "352280"
  },
  {
    "text": "browser traffic through a remote server",
    "start": "352280",
    "end": "353960"
  },
  {
    "text": "enabling you to access resources that",
    "start": "353960",
    "end": "355880"
  },
  {
    "text": "are not directly accessible from your",
    "start": "355880",
    "end": "357319"
  },
  {
    "text": "local machine hence how we are accessing",
    "start": "357319",
    "end": "359199"
  },
  {
    "text": "the air flow UI using this method",
    "start": "359199",
    "end": "361360"
  },
  {
    "text": "heading to the extensions go head to the",
    "start": "361360",
    "end": "363199"
  },
  {
    "text": "foxy proxy extension and make sure that",
    "start": "363199",
    "end": "365560"
  },
  {
    "text": "airflow is",
    "start": "365560",
    "end": "367120"
  },
  {
    "text": "selected and we can go to the mwaa",
    "start": "367120",
    "end": "370080"
  },
  {
    "text": "environment and click on open airflow UI",
    "start": "370080",
    "end": "373160"
  },
  {
    "text": "and we have now accessed the airflow",
    "start": "373160",
    "end": "374919"
  },
  {
    "text": "private",
    "start": "374919",
    "end": "377240"
  },
  {
    "text": "UI continuing this video I will now talk",
    "start": "377319",
    "end": "380000"
  },
  {
    "text": "about the process of gaining access to",
    "start": "380000",
    "end": "381440"
  },
  {
    "text": "the private airflow UI using an",
    "start": "381440",
    "end": "383080"
  },
  {
    "text": "application load balancer please note",
    "start": "383080",
    "end": "385240"
  },
  {
    "text": "you will need all the private VPC",
    "start": "385240",
    "end": "387039"
  },
  {
    "text": "endpoints created as well as a SSL",
    "start": "387039",
    "end": "389080"
  },
  {
    "text": "certificate to carry this methodology",
    "start": "389080",
    "end": "390720"
  },
  {
    "text": "out to begin we will firstly go to the",
    "start": "390720",
    "end": "392639"
  },
  {
    "text": "mwa Security Group and add an inbound",
    "start": "392639",
    "end": "395199"
  },
  {
    "text": "rule allowing our IP address to access",
    "start": "395199",
    "end": "397319"
  },
  {
    "text": "the mwa environment on https Port 443 we",
    "start": "397319",
    "end": "400720"
  },
  {
    "text": "will start by going to the manage Apache",
    "start": "400720",
    "end": "402319"
  },
  {
    "text": "airflow",
    "start": "402319",
    "end": "404759"
  },
  {
    "text": "console heading to the security group of",
    "start": "406560",
    "end": "409319"
  },
  {
    "text": "our",
    "start": "409319",
    "end": "410199"
  },
  {
    "text": "environment within the security group we",
    "start": "410199",
    "end": "412440"
  },
  {
    "text": "will head through to the inbound rules",
    "start": "412440",
    "end": "414599"
  },
  {
    "text": "edit inbound rules add a",
    "start": "414599",
    "end": "417840"
  },
  {
    "text": "rule go through to",
    "start": "417840",
    "end": "421080"
  },
  {
    "text": "https and only allow my IP save",
    "start": "421080",
    "end": "426120"
  },
  {
    "text": "rules next to access the private airflow",
    "start": "427840",
    "end": "430720"
  },
  {
    "text": "UI with an application load balancer",
    "start": "430720",
    "end": "432560"
  },
  {
    "text": "let's identify the private IP addresses",
    "start": "432560",
    "end": "434599"
  },
  {
    "text": "of the Amazon MW web server that's being",
    "start": "434599",
    "end": "437440"
  },
  {
    "text": "used use the following CLI command to",
    "start": "437440",
    "end": "439400"
  },
  {
    "text": "retrieve the host name for your Apache",
    "start": "439400",
    "end": "440840"
  },
  {
    "text": "airflow web server run a dig command on",
    "start": "440840",
    "end": "443639"
  },
  {
    "text": "the host name returned in the response",
    "start": "443639",
    "end": "445280"
  },
  {
    "text": "of the previous",
    "start": "445280",
    "end": "446360"
  },
  {
    "text": "command use the following AWS CLI",
    "start": "446360",
    "end": "449160"
  },
  {
    "text": "command to retrieve the VPC endpoint DNS",
    "start": "449160",
    "end": "451440"
  },
  {
    "text": "name returned in the response of the",
    "start": "451440",
    "end": "452800"
  },
  {
    "text": "previous",
    "start": "452800",
    "end": "453759"
  },
  {
    "text": "command run a dig command on your Apache",
    "start": "453759",
    "end": "456280"
  },
  {
    "text": "airflow host name and its VPC endpoint",
    "start": "456280",
    "end": "458280"
  },
  {
    "text": "DNS name to retrieve the IP addresses as",
    "start": "458280",
    "end": "461120"
  },
  {
    "text": "such the IP addresses are as",
    "start": "461120",
    "end": "464560"
  },
  {
    "text": "follows now that we have recorded the IP",
    "start": "464560",
    "end": "467000"
  },
  {
    "text": "addresses let's create a Target group",
    "start": "467000",
    "end": "468759"
  },
  {
    "text": "from the ec2 console moving through the",
    "start": "468759",
    "end": "471800"
  },
  {
    "text": "target group section under load",
    "start": "471800",
    "end": "473639"
  },
  {
    "text": "balancing we will create Target group we",
    "start": "473639",
    "end": "476560"
  },
  {
    "text": "select IP addresses for the Target group",
    "start": "476560",
    "end": "478960"
  },
  {
    "text": "type",
    "start": "478960",
    "end": "480960"
  },
  {
    "text": "we put in a Target group",
    "start": "480960",
    "end": "484159"
  },
  {
    "text": "name for the protocol we set the port to",
    "start": "484720",
    "end": "487520"
  },
  {
    "text": "443",
    "start": "487520",
    "end": "488879"
  },
  {
    "text": "https for the VPC we will select the",
    "start": "488879",
    "end": "491639"
  },
  {
    "text": "mwaa environment",
    "start": "491639",
    "end": "494199"
  },
  {
    "text": "VPC make sure to click on Advanced",
    "start": "494199",
    "end": "496599"
  },
  {
    "text": "Health check settings and override it by",
    "start": "496599",
    "end": "499919"
  },
  {
    "text": "adding 302 to success",
    "start": "499919",
    "end": "503400"
  },
  {
    "text": "codes make sure to type in the two IP",
    "start": "503400",
    "end": "505840"
  },
  {
    "text": "addresses that you treeve from the last",
    "start": "505840",
    "end": "507319"
  },
  {
    "text": "step we will register the targets after",
    "start": "507319",
    "end": "509080"
  },
  {
    "text": "setting the application load",
    "start": "509080",
    "end": "512240"
  },
  {
    "text": "balancer click on include as pending",
    "start": "512880",
    "end": "516039"
  },
  {
    "text": "below and then you may create the target",
    "start": "516039",
    "end": "520360"
  },
  {
    "text": "group let's set up the application load",
    "start": "520560",
    "end": "522839"
  },
  {
    "text": "balancer now we will move to the load",
    "start": "522839",
    "end": "524640"
  },
  {
    "text": "balancer section under load",
    "start": "524640",
    "end": "527200"
  },
  {
    "text": "balancing click on create load",
    "start": "527200",
    "end": "531120"
  },
  {
    "text": "balancer create application load",
    "start": "531399",
    "end": "535640"
  },
  {
    "text": "balancer add a load balancer name",
    "start": "535640",
    "end": "540600"
  },
  {
    "text": "make sure the scheme is internet",
    "start": "541000",
    "end": "544360"
  },
  {
    "text": "facing for the network mapping make sure",
    "start": "544360",
    "end": "546959"
  },
  {
    "text": "the VPC is NWA",
    "start": "546959",
    "end": "550600"
  },
  {
    "text": "environment and for the mappings use the",
    "start": "554440",
    "end": "557200"
  },
  {
    "text": "two private subnets within the",
    "start": "557200",
    "end": "560560"
  },
  {
    "text": "VPC for the security group make sure to",
    "start": "564079",
    "end": "566720"
  },
  {
    "text": "select the airflow environment's",
    "start": "566720",
    "end": "568519"
  },
  {
    "text": "Security Group",
    "start": "568519",
    "end": "571360"
  },
  {
    "text": "for the listeners and routing we will",
    "start": "572760",
    "end": "574160"
  },
  {
    "text": "set the protocol to https pointing to",
    "start": "574160",
    "end": "576360"
  },
  {
    "text": "Port",
    "start": "576360",
    "end": "578560"
  },
  {
    "text": "443 select the target group that we",
    "start": "580279",
    "end": "582720"
  },
  {
    "text": "created",
    "start": "582720",
    "end": "583800"
  },
  {
    "text": "earlier we will now use an SSL",
    "start": "583800",
    "end": "586160"
  },
  {
    "text": "certificate to set up the application",
    "start": "586160",
    "end": "587440"
  },
  {
    "text": "load balancer you can use any of the",
    "start": "587440",
    "end": "589399"
  },
  {
    "text": "certificate sources but for the sake of",
    "start": "589399",
    "end": "591079"
  },
  {
    "text": "demonstration I'm using a certificate I",
    "start": "591079",
    "end": "592880"
  },
  {
    "text": "have within AWS identity and access",
    "start": "592880",
    "end": "595120"
  },
  {
    "text": "management",
    "start": "595120",
    "end": "598120"
  },
  {
    "text": "once you're finished press create load",
    "start": "601760",
    "end": "605880"
  },
  {
    "text": "balancer now that the load balance is",
    "start": "606079",
    "end": "608160"
  },
  {
    "text": "set up we can check the resource map to",
    "start": "608160",
    "end": "609920"
  },
  {
    "text": "check that the target groups are healthy",
    "start": "609920",
    "end": "611240"
  },
  {
    "text": "and",
    "start": "611240",
    "end": "613480"
  },
  {
    "text": "active we can save the URL from the DNS",
    "start": "618200",
    "end": "620920"
  },
  {
    "text": "name of the load balancer so we can use",
    "start": "620920",
    "end": "622440"
  },
  {
    "text": "it within the CLI to get the web token",
    "start": "622440",
    "end": "624160"
  },
  {
    "text": "string do note you may use any",
    "start": "624160",
    "end": "626360"
  },
  {
    "text": "methodology to create a web server",
    "start": "626360",
    "end": "628040"
  },
  {
    "text": "access token",
    "start": "628040",
    "end": "631320"
  },
  {
    "text": "moving to the ca we'll be using a shell",
    "start": "632880",
    "end": "634880"
  },
  {
    "text": "script to get the web token string you",
    "start": "634880",
    "end": "636600"
  },
  {
    "text": "may proceed to copy the following",
    "start": "636600",
    "end": "637920"
  },
  {
    "text": "contents into a shell",
    "start": "637920",
    "end": "640600"
  },
  {
    "text": "file substitute the host name as the ALB",
    "start": "640600",
    "end": "643399"
  },
  {
    "text": "URL copied earlier and the environment",
    "start": "643399",
    "end": "645279"
  },
  {
    "text": "name will be the same as your mwaa",
    "start": "645279",
    "end": "649200"
  },
  {
    "text": "environment you may run the following",
    "start": "652279",
    "end": "654160"
  },
  {
    "text": "command to ensure the script is",
    "start": "654160",
    "end": "655720"
  },
  {
    "text": "executable we will run the following",
    "start": "655720",
    "end": "657639"
  },
  {
    "text": "script to get the web token string",
    "start": "657639",
    "end": "661040"
  },
  {
    "text": "you can now move to copy this web token",
    "start": "661040",
    "end": "662639"
  },
  {
    "text": "string into your",
    "start": "662639",
    "end": "665320"
  },
  {
    "text": "browser and now you know how to use an",
    "start": "671839",
    "end": "674000"
  },
  {
    "text": "application load balancer to gain access",
    "start": "674000",
    "end": "675760"
  },
  {
    "text": "to the Amazon mwaa private F",
    "start": "675760",
    "end": "679720"
  },
  {
    "text": "UI thanks for watching and happy cloud",
    "start": "679720",
    "end": "682000"
  },
  {
    "text": "computing from all of us here at AWS",
    "start": "682000",
    "end": "684570"
  },
  {
    "text": "[Music]",
    "start": "684570",
    "end": "685590"
  },
  {
    "text": "[Applause]",
    "start": "685590",
    "end": "687350"
  },
  {
    "text": "[Music]",
    "start": "687350",
    "end": "690519"
  },
  {
    "text": "[Music]",
    "start": "692560",
    "end": "695760"
  }
]