[
  {
    "text": "[Music]",
    "start": "0",
    "end": "2720"
  },
  {
    "text": "welcome to this video on how to use aws",
    "start": "2720",
    "end": "4880"
  },
  {
    "text": "cloud development kit to deploy",
    "start": "4880",
    "end": "6399"
  },
  {
    "text": "serverless rest apis using aws",
    "start": "6399",
    "end": "8720"
  },
  {
    "text": "lambda and api gateway my name is",
    "start": "8720",
    "end": "11120"
  },
  {
    "text": "phillip pittle and i'm a senior software",
    "start": "11120",
    "end": "12639"
  },
  {
    "text": "engineer at aws on the.net sdk team",
    "start": "12639",
    "end": "15360"
  },
  {
    "text": "the cloud development kit or cdk allows",
    "start": "15360",
    "end": "17440"
  },
  {
    "text": "you to define your infrastructure as",
    "start": "17440",
    "end": "19199"
  },
  {
    "text": "code in one of several programming",
    "start": "19199",
    "end": "20720"
  },
  {
    "text": "languages",
    "start": "20720",
    "end": "21439"
  },
  {
    "text": "including c-sharp this means we can use",
    "start": "21439",
    "end": "23439"
  },
  {
    "text": "all of the tools software developers are",
    "start": "23439",
    "end": "25039"
  },
  {
    "text": "already familiar with when defining our",
    "start": "25039",
    "end": "26720"
  },
  {
    "text": "cloud infrastructure",
    "start": "26720",
    "end": "27840"
  },
  {
    "text": "today we'll quickly go over what you",
    "start": "27840",
    "end": "29359"
  },
  {
    "text": "need to get started using the cdk",
    "start": "29359",
    "end": "31760"
  },
  {
    "text": "then we'll create a solution with two",
    "start": "31760",
    "end": "33120"
  },
  {
    "text": "serverless lambda functions and then",
    "start": "33120",
    "end": "34960"
  },
  {
    "text": "we'll write the cdk code to deploy them",
    "start": "34960",
    "end": "36880"
  },
  {
    "text": "and create an api gateway to allow them",
    "start": "36880",
    "end": "38559"
  },
  {
    "text": "to be called from anywhere on the web",
    "start": "38559",
    "end": "40320"
  },
  {
    "text": "and as.net 5 support in lambda launched",
    "start": "40320",
    "end": "42399"
  },
  {
    "text": "recently via container images will",
    "start": "42399",
    "end": "44160"
  },
  {
    "text": "create a third lambda and matching",
    "start": "44160",
    "end": "45440"
  },
  {
    "text": "infrastructure code",
    "start": "45440",
    "end": "46640"
  },
  {
    "text": "finally we'll use the cdk tooling to",
    "start": "46640",
    "end": "48239"
  },
  {
    "text": "deploy our entire solution globally",
    "start": "48239",
    "end": "50000"
  },
  {
    "text": "by using aws regions in both the u.s and",
    "start": "50000",
    "end": "52320"
  },
  {
    "text": "europe we'll be starting today in",
    "start": "52320",
    "end": "54000"
  },
  {
    "text": "powershell",
    "start": "54000",
    "end": "54800"
  },
  {
    "text": "the first thing we need to do is make",
    "start": "54800",
    "end": "56000"
  },
  {
    "text": "sure that you have no js installed this",
    "start": "56000",
    "end": "57600"
  },
  {
    "text": "is a prereq for the cdk",
    "start": "57600",
    "end": "59520"
  },
  {
    "text": "if you don't have node you can download",
    "start": "59520",
    "end": "60960"
  },
  {
    "text": "it from nodejs.org",
    "start": "60960",
    "end": "62719"
  },
  {
    "text": "next i'll use node's package manager npm",
    "start": "62719",
    "end": "64799"
  },
  {
    "text": "to install the cdk command line tooling",
    "start": "64799",
    "end": "66720"
  },
  {
    "text": "making sure to use the",
    "start": "66720",
    "end": "67840"
  },
  {
    "text": "g switch that i can run the cdk commands",
    "start": "67840",
    "end": "69600"
  },
  {
    "text": "from any show",
    "start": "69600",
    "end": "71119"
  },
  {
    "text": "next we'll be using the aws cli if you",
    "start": "71119",
    "end": "73360"
  },
  {
    "text": "don't have it installed you can download",
    "start": "73360",
    "end": "74640"
  },
  {
    "text": "it from aws.amazon.com",
    "start": "74640",
    "end": "76640"
  },
  {
    "text": "cli we'll use the aws configure command",
    "start": "76640",
    "end": "79520"
  },
  {
    "text": "to set the credentials and default",
    "start": "79520",
    "end": "80880"
  },
  {
    "text": "region that the cdk will use",
    "start": "80880",
    "end": "82799"
  },
  {
    "text": "this requires you to have a user",
    "start": "82799",
    "end": "84159"
  },
  {
    "text": "available in your aws im console that",
    "start": "84159",
    "end": "86159"
  },
  {
    "text": "has programmatic access",
    "start": "86159",
    "end": "87759"
  },
  {
    "text": "if you need any help getting that set up",
    "start": "87759",
    "end": "89200"
  },
  {
    "text": "the aws cdk workshop has an excellent",
    "start": "89200",
    "end": "91360"
  },
  {
    "text": "guide",
    "start": "91360",
    "end": "92159"
  },
  {
    "text": "lastly we'll need docker installed and",
    "start": "92159",
    "end": "93680"
  },
  {
    "text": "running to support the.net 5 lambda",
    "start": "93680",
    "end": "95520"
  },
  {
    "text": "function we'll create",
    "start": "95520",
    "end": "96880"
  },
  {
    "text": "if you need docker you can download it",
    "start": "96880",
    "end": "98400"
  },
  {
    "text": "from docker.com we also need to make",
    "start": "98400",
    "end": "100240"
  },
  {
    "text": "sure we have docker configured to use",
    "start": "100240",
    "end": "101680"
  },
  {
    "text": "linux containers",
    "start": "101680",
    "end": "104560"
  },
  {
    "text": "with all the prereqs out of the way we",
    "start": "105920",
    "end": "107439"
  },
  {
    "text": "can start building our application",
    "start": "107439",
    "end": "109200"
  },
  {
    "text": "i'll start by creating a new directory",
    "start": "109200",
    "end": "110640"
  },
  {
    "text": "for our solution",
    "start": "110640",
    "end": "115360"
  },
  {
    "text": "then we'll use the cdk command to",
    "start": "115360",
    "end": "116719"
  },
  {
    "text": "scaffold up a solution for us it's",
    "start": "116719",
    "end": "118560"
  },
  {
    "text": "possible to do this step by hand but",
    "start": "118560",
    "end": "120079"
  },
  {
    "text": "it's much easier to let the tooling",
    "start": "120079",
    "end": "121360"
  },
  {
    "text": "create it for you",
    "start": "121360",
    "end": "124079"
  },
  {
    "text": "here we can see the files that the cdk",
    "start": "125840",
    "end": "127439"
  },
  {
    "text": "initialize tool created for us",
    "start": "127439",
    "end": "129039"
  },
  {
    "text": "inside the source directory we'll find",
    "start": "129039",
    "end": "130560"
  },
  {
    "text": "the solution file let's go ahead and",
    "start": "130560",
    "end": "132000"
  },
  {
    "text": "open it",
    "start": "132000",
    "end": "134319"
  },
  {
    "text": "there's a single project inside the",
    "start": "137280",
    "end": "138720"
  },
  {
    "text": "solution this project contains the",
    "start": "138720",
    "end": "140400"
  },
  {
    "text": "initial cdk infrastructure code",
    "start": "140400",
    "end": "142319"
  },
  {
    "text": "let's quickly make sure the solution",
    "start": "142319",
    "end": "143680"
  },
  {
    "text": "builds",
    "start": "143680",
    "end": "146000"
  },
  {
    "text": "cdk tool creates an important file",
    "start": "147280",
    "end": "149040"
  },
  {
    "text": "called the cdk.json file",
    "start": "149040",
    "end": "150959"
  },
  {
    "text": "by default it's not added to the",
    "start": "150959",
    "end": "152400"
  },
  {
    "text": "solution while not necessary i like to",
    "start": "152400",
    "end": "154319"
  },
  {
    "text": "add it to the solution to make it easier",
    "start": "154319",
    "end": "155760"
  },
  {
    "text": "to work with inside of studio so let's",
    "start": "155760",
    "end": "157280"
  },
  {
    "text": "do that now",
    "start": "157280",
    "end": "158800"
  },
  {
    "text": "we'll find it at the root directory",
    "start": "158800",
    "end": "160160"
  },
  {
    "text": "where we ran cdk init one directory",
    "start": "160160",
    "end": "162239"
  },
  {
    "text": "above the source folder",
    "start": "162239",
    "end": "164400"
  },
  {
    "text": "this is the cdk.json file it provides",
    "start": "164400",
    "end": "166959"
  },
  {
    "text": "configuration to the cdk tooling",
    "start": "166959",
    "end": "169040"
  },
  {
    "text": "we're going to ignore the feature flags",
    "start": "169040",
    "end": "170480"
  },
  {
    "text": "listed under the context element",
    "start": "170480",
    "end": "172160"
  },
  {
    "text": "but we'll work with app on line 2 a bit",
    "start": "172160",
    "end": "174000"
  },
  {
    "text": "later this is the setting that tells the",
    "start": "174000",
    "end": "175920"
  },
  {
    "text": "cdk runtime",
    "start": "175920",
    "end": "177040"
  },
  {
    "text": "which command to run in order to invoke",
    "start": "177040",
    "end": "178800"
  },
  {
    "text": "our cdk code",
    "start": "178800",
    "end": "180400"
  },
  {
    "text": "now let's create some lambda services",
    "start": "180400",
    "end": "182319"
  },
  {
    "text": "i've already installed the aws toolkit",
    "start": "182319",
    "end": "184239"
  },
  {
    "text": "for visual studio so when i go to add a",
    "start": "184239",
    "end": "186080"
  },
  {
    "text": "new project there will be several aws",
    "start": "186080",
    "end": "187760"
  },
  {
    "text": "project templates installed",
    "start": "187760",
    "end": "190400"
  },
  {
    "text": "because we're going to want to use api",
    "start": "190400",
    "end": "191760"
  },
  {
    "text": "gateway later i'm going to pick the aws",
    "start": "191760",
    "end": "193760"
  },
  {
    "text": "server list template",
    "start": "193760",
    "end": "196319"
  },
  {
    "text": "i'm going to call this foo lambda",
    "start": "196319",
    "end": "200239"
  },
  {
    "text": "and the empty application will be just",
    "start": "200239",
    "end": "201840"
  },
  {
    "text": "fine for our simple service",
    "start": "201840",
    "end": "204560"
  },
  {
    "text": "let's open up the function and make a",
    "start": "204560",
    "end": "205920"
  },
  {
    "text": "minor tweak",
    "start": "205920",
    "end": "208560"
  },
  {
    "text": "i'm going to change it to return foo and",
    "start": "208640",
    "end": "210720"
  },
  {
    "text": "the current time so we can tell it apart",
    "start": "210720",
    "end": "212400"
  },
  {
    "text": "from the next service that we're going",
    "start": "212400",
    "end": "213519"
  },
  {
    "text": "to create in a second",
    "start": "213519",
    "end": "216400"
  },
  {
    "text": "now that we have foo let's create bar",
    "start": "218400",
    "end": "222239"
  },
  {
    "text": "i'll use the aws serverless project",
    "start": "224000",
    "end": "225920"
  },
  {
    "text": "template again",
    "start": "225920",
    "end": "228640"
  },
  {
    "text": "and we'll call this bar lambda",
    "start": "228959",
    "end": "232480"
  },
  {
    "text": "we'll make the same change to the bar",
    "start": "237920",
    "end": "239519"
  },
  {
    "text": "function we'll have it return bar",
    "start": "239519",
    "end": "242080"
  },
  {
    "text": "and the current time in utc",
    "start": "242080",
    "end": "245599"
  },
  {
    "text": "now before we move on let's make sure",
    "start": "247599",
    "end": "249439"
  },
  {
    "text": "everything still builds",
    "start": "249439",
    "end": "255840"
  },
  {
    "text": "as we get ready to write our cdk",
    "start": "257759",
    "end": "259359"
  },
  {
    "text": "infrastructure code i actually want to",
    "start": "259359",
    "end": "261040"
  },
  {
    "text": "clean up this project a bit",
    "start": "261040",
    "end": "263040"
  },
  {
    "text": "by default the cdk scaffolding will name",
    "start": "263040",
    "end": "265040"
  },
  {
    "text": "everything after the containing folder",
    "start": "265040",
    "end": "268560"
  },
  {
    "text": "i'll simplify this here rename",
    "start": "268560",
    "end": "269919"
  },
  {
    "text": "everything to just cdk",
    "start": "269919",
    "end": "271759"
  },
  {
    "text": "starting with the assembly and default",
    "start": "271759",
    "end": "273280"
  },
  {
    "text": "namespace",
    "start": "273280",
    "end": "275840"
  },
  {
    "text": "then i'll rename the project itself",
    "start": "276639",
    "end": "283840"
  },
  {
    "text": "since that changes the file name of the",
    "start": "283840",
    "end": "285440"
  },
  {
    "text": "cs proj we'll need to update the",
    "start": "285440",
    "end": "287199"
  },
  {
    "text": "cdk.json file so the cdk tooling will",
    "start": "287199",
    "end": "289520"
  },
  {
    "text": "know how to find our project",
    "start": "289520",
    "end": "296160"
  },
  {
    "text": "now i'm ready to rename the stack class",
    "start": "296160",
    "end": "298479"
  },
  {
    "text": "this is where we'll define the",
    "start": "298479",
    "end": "299680"
  },
  {
    "text": "infrastructure to host our lambda",
    "start": "299680",
    "end": "301039"
  },
  {
    "text": "functions",
    "start": "301039",
    "end": "301600"
  },
  {
    "text": "so i want to give it a better name let's",
    "start": "301600",
    "end": "303919"
  },
  {
    "text": "rename it to",
    "start": "303919",
    "end": "304880"
  },
  {
    "text": "fubar lambda stack",
    "start": "304880",
    "end": "311840"
  },
  {
    "text": "oh and we'll also fix the namespace",
    "start": "315360",
    "end": "316880"
  },
  {
    "text": "since we changed it",
    "start": "316880",
    "end": "318800"
  },
  {
    "text": "now we are ready to start writing our",
    "start": "318800",
    "end": "320240"
  },
  {
    "text": "infrastructure code we are going to",
    "start": "320240",
    "end": "322080"
  },
  {
    "text": "update the foobar lambda stack",
    "start": "322080",
    "end": "323440"
  },
  {
    "text": "constructor to declare that we have two",
    "start": "323440",
    "end": "324720"
  },
  {
    "text": "lambda functions",
    "start": "324720",
    "end": "326240"
  },
  {
    "text": "to do that i'll first need to go to the",
    "start": "326240",
    "end": "327680"
  },
  {
    "text": "nuget package manager and add a",
    "start": "327680",
    "end": "329199"
  },
  {
    "text": "reference to the amazon.cdk.aws.lambda",
    "start": "329199",
    "end": "332080"
  },
  {
    "text": "nuget package",
    "start": "332080",
    "end": "334800"
  },
  {
    "text": "now that that's installed we can start",
    "start": "337360",
    "end": "340560"
  },
  {
    "text": "i'm going to declare a new object and",
    "start": "340560",
    "end": "341919"
  },
  {
    "text": "that's going to be of type",
    "start": "341919",
    "end": "344720"
  },
  {
    "text": "amazon.cdk.aws.lam.function",
    "start": "345080",
    "end": "346639"
  },
  {
    "text": "this is going to be part of the stack so",
    "start": "346639",
    "end": "348080"
  },
  {
    "text": "i need to pass this as a constructor",
    "start": "348080",
    "end": "349600"
  },
  {
    "text": "parameter i'll give it an id",
    "start": "349600",
    "end": "351520"
  },
  {
    "text": "foo lambda this is how it will appear in",
    "start": "351520",
    "end": "353759"
  },
  {
    "text": "cloud formation",
    "start": "353759",
    "end": "354800"
  },
  {
    "text": "though we won't need to worry about that",
    "start": "354800",
    "end": "356240"
  },
  {
    "text": "today",
    "start": "356240",
    "end": "358319"
  },
  {
    "text": "and then we need to customize the",
    "start": "358319",
    "end": "359600"
  },
  {
    "text": "deployment with function props",
    "start": "359600",
    "end": "361759"
  },
  {
    "text": "we need to set a runtime in this case",
    "start": "361759",
    "end": "363440"
  },
  {
    "text": "it's going to be net core 3.1",
    "start": "363440",
    "end": "367840"
  },
  {
    "text": "then we need to tell the cdk how we can",
    "start": "368160",
    "end": "370000"
  },
  {
    "text": "find our published code by providing a",
    "start": "370000",
    "end": "371600"
  },
  {
    "text": "path",
    "start": "371600",
    "end": "373919"
  },
  {
    "text": "this path is relative to the cdk.json",
    "start": "378880",
    "end": "381120"
  },
  {
    "text": "file",
    "start": "381120",
    "end": "382240"
  },
  {
    "text": "so we'll be in source slash foo lambda",
    "start": "382240",
    "end": "384880"
  },
  {
    "text": "bin",
    "start": "384880",
    "end": "385280"
  },
  {
    "text": "slash debug slash dot net core app 3.1",
    "start": "385280",
    "end": "389280"
  },
  {
    "text": "publish",
    "start": "389280",
    "end": "391680"
  },
  {
    "text": "finally we need to specify our handler",
    "start": "393199",
    "end": "394800"
  },
  {
    "text": "method it's in the foo lambda assembly",
    "start": "394800",
    "end": "397199"
  },
  {
    "text": "and the type is foolam.functions and the",
    "start": "397199",
    "end": "399440"
  },
  {
    "text": "method is get",
    "start": "399440",
    "end": "400800"
  },
  {
    "text": "so i'm going to add that as a comment",
    "start": "400800",
    "end": "401919"
  },
  {
    "text": "real quick so you can see it",
    "start": "401919",
    "end": "409840"
  },
  {
    "text": "all right add a semicolon and that's it",
    "start": "415120",
    "end": "416720"
  },
  {
    "text": "for foo lambda",
    "start": "416720",
    "end": "418720"
  },
  {
    "text": "now i'm going to duplicate this whole",
    "start": "418720",
    "end": "420000"
  },
  {
    "text": "statement for bar lambda",
    "start": "420000",
    "end": "423840"
  },
  {
    "text": "all we need to do is change the foos to",
    "start": "423840",
    "end": "425759"
  },
  {
    "text": "bar and we're all set",
    "start": "425759",
    "end": "429280"
  },
  {
    "text": "actually there's a small problem with",
    "start": "433759",
    "end": "435199"
  },
  {
    "text": "the paths and from asset",
    "start": "435199",
    "end": "436960"
  },
  {
    "text": "they shouldn't start with a forward",
    "start": "436960",
    "end": "438240"
  },
  {
    "text": "slash let's go ahead and remove those",
    "start": "438240",
    "end": "439759"
  },
  {
    "text": "now",
    "start": "439759",
    "end": "441199"
  },
  {
    "text": "now let's head back to the terminal the",
    "start": "441199",
    "end": "443199"
  },
  {
    "text": "first thing we need to do is run.net",
    "start": "443199",
    "end": "444639"
  },
  {
    "text": "publish on our solution",
    "start": "444639",
    "end": "446160"
  },
  {
    "text": "this isn't necessary for every construct",
    "start": "446160",
    "end": "448000"
  },
  {
    "text": "in the cdk but we do need to do it here",
    "start": "448000",
    "end": "449919"
  },
  {
    "text": "because our lambda function constructs",
    "start": "449919",
    "end": "451520"
  },
  {
    "text": "are explicitly looking for our code in",
    "start": "451520",
    "end": "453039"
  },
  {
    "text": "that publish directory",
    "start": "453039",
    "end": "454800"
  },
  {
    "text": "next i'm going to run cdk bootstrap this",
    "start": "454800",
    "end": "457280"
  },
  {
    "text": "only needs to be run once per region",
    "start": "457280",
    "end": "459199"
  },
  {
    "text": "the cdk needs some aws resources in",
    "start": "459199",
    "end": "461280"
  },
  {
    "text": "order to function correctly",
    "start": "461280",
    "end": "462560"
  },
  {
    "text": "and this command sets that up for us",
    "start": "462560",
    "end": "465440"
  },
  {
    "text": "with that out of the way we now have all",
    "start": "465440",
    "end": "467039"
  },
  {
    "text": "the pieces in place to deploy to aws",
    "start": "467039",
    "end": "469599"
  },
  {
    "text": "we'll do that by running cdk deploy this",
    "start": "469599",
    "end": "472160"
  },
  {
    "text": "will display a list of security changes",
    "start": "472160",
    "end": "473759"
  },
  {
    "text": "we're about to make",
    "start": "473759",
    "end": "475280"
  },
  {
    "text": "the function constructs we're using need",
    "start": "475280",
    "end": "476960"
  },
  {
    "text": "to create a new im role for bar lambda",
    "start": "476960",
    "end": "479039"
  },
  {
    "text": "and foo lambda",
    "start": "479039",
    "end": "479919"
  },
  {
    "text": "and that's what's shown here we'll press",
    "start": "479919",
    "end": "482240"
  },
  {
    "text": "y to agree",
    "start": "482240",
    "end": "483680"
  },
  {
    "text": "and that kicks off our deployment i've",
    "start": "483680",
    "end": "486319"
  },
  {
    "text": "sped this up a bit but in about a minute",
    "start": "486319",
    "end": "488080"
  },
  {
    "text": "our full and bar lambda functions are",
    "start": "488080",
    "end": "489680"
  },
  {
    "text": "provisioned out in aws",
    "start": "489680",
    "end": "493840"
  },
  {
    "text": "switching over now to the aws console",
    "start": "493840",
    "end": "496240"
  },
  {
    "text": "and i've already got my browser on the",
    "start": "496240",
    "end": "497680"
  },
  {
    "text": "lambda page in the oregon region",
    "start": "497680",
    "end": "499680"
  },
  {
    "text": "and if i refresh we'll see the newly",
    "start": "499680",
    "end": "502720"
  },
  {
    "text": "deployed lambda functions",
    "start": "502720",
    "end": "504479"
  },
  {
    "text": "so now that these are up we'll create",
    "start": "504479",
    "end": "506080"
  },
  {
    "text": "api gateway endpoints so that we can",
    "start": "506080",
    "end": "507840"
  },
  {
    "text": "invoke the lambda functions over the web",
    "start": "507840",
    "end": "510240"
  },
  {
    "text": "first thing we'll head back to the nuget",
    "start": "510240",
    "end": "511759"
  },
  {
    "text": "package manager to get the package for",
    "start": "511759",
    "end": "513518"
  },
  {
    "text": "api gateway",
    "start": "513519",
    "end": "515039"
  },
  {
    "text": "which is amazon.cdk.aws.api gateway",
    "start": "515039",
    "end": "521839"
  },
  {
    "text": "once that finishes installing we're",
    "start": "523919",
    "end": "525600"
  },
  {
    "text": "going to add more code to our fubar",
    "start": "525600",
    "end": "527279"
  },
  {
    "text": "lambda stack",
    "start": "527279",
    "end": "528560"
  },
  {
    "text": "i'll start by adding a using statement",
    "start": "528560",
    "end": "530160"
  },
  {
    "text": "for amazon.cdk.aws.api gateway",
    "start": "530160",
    "end": "535839"
  },
  {
    "text": "then we're going to use the lambda rest",
    "start": "537279",
    "end": "538720"
  },
  {
    "text": "api construct so i'll new that up",
    "start": "538720",
    "end": "541040"
  },
  {
    "text": "pass it a reference to our stack give it",
    "start": "541040",
    "end": "543120"
  },
  {
    "text": "an id",
    "start": "543120",
    "end": "549839"
  },
  {
    "text": "and again we'll configure it using a",
    "start": "550560",
    "end": "552000"
  },
  {
    "text": "props object",
    "start": "552000",
    "end": "554240"
  },
  {
    "text": "in this case we need to set a property",
    "start": "554240",
    "end": "555920"
  },
  {
    "text": "handler what's really great here is",
    "start": "555920",
    "end": "557920"
  },
  {
    "text": "we can pass in a reference to our foo",
    "start": "557920",
    "end": "559519"
  },
  {
    "text": "lambda function and that's it for food",
    "start": "559519",
    "end": "561440"
  },
  {
    "text": "lambda",
    "start": "561440",
    "end": "562880"
  },
  {
    "text": "we'll duplicate that statement for bar",
    "start": "562880",
    "end": "564560"
  },
  {
    "text": "lambda change the id and point to bar",
    "start": "564560",
    "end": "567440"
  },
  {
    "text": "lambda and we're done",
    "start": "567440",
    "end": "569680"
  },
  {
    "text": "save the file and let's head to the",
    "start": "569680",
    "end": "571120"
  },
  {
    "text": "terminal once again we'll run the dot",
    "start": "571120",
    "end": "573600"
  },
  {
    "text": "net publish command because our lambda",
    "start": "573600",
    "end": "575360"
  },
  {
    "text": "construct is looking for the bits to be",
    "start": "575360",
    "end": "577120"
  },
  {
    "text": "in that publish directory",
    "start": "577120",
    "end": "578800"
  },
  {
    "text": "then we run the cdk deploy command the",
    "start": "578800",
    "end": "581040"
  },
  {
    "text": "tooling helpfully points out it needs to",
    "start": "581040",
    "end": "582720"
  },
  {
    "text": "make impolicy changes and we'll confirm",
    "start": "582720",
    "end": "584800"
  },
  {
    "text": "that that's okay",
    "start": "584800",
    "end": "585839"
  },
  {
    "text": "and with that there goes our deployment",
    "start": "585839",
    "end": "587760"
  },
  {
    "text": "now i've sped this up but it's still",
    "start": "587760",
    "end": "589279"
  },
  {
    "text": "relatively quick",
    "start": "589279",
    "end": "590640"
  },
  {
    "text": "there's two things i want to highlight",
    "start": "590640",
    "end": "592080"
  },
  {
    "text": "here first this time around we can see",
    "start": "592080",
    "end": "594399"
  },
  {
    "text": "that we deployed a significant amount of",
    "start": "594399",
    "end": "596000"
  },
  {
    "text": "infrastructure with just a little bit of",
    "start": "596000",
    "end": "597440"
  },
  {
    "text": "code change",
    "start": "597440",
    "end": "598640"
  },
  {
    "text": "the cdk translated the lambda rest api",
    "start": "598640",
    "end": "600959"
  },
  {
    "text": "construct we just added",
    "start": "600959",
    "end": "602320"
  },
  {
    "text": "into about 20 more cloud formation steps",
    "start": "602320",
    "end": "604800"
  },
  {
    "text": "the second thing is our output has",
    "start": "604800",
    "end": "606160"
  },
  {
    "text": "changed",
    "start": "606160",
    "end": "607120"
  },
  {
    "text": "now we have the rest api http endpoints",
    "start": "607120",
    "end": "609680"
  },
  {
    "text": "for our two lambda functions",
    "start": "609680",
    "end": "611440"
  },
  {
    "text": "in fact i'm going to select the bar",
    "start": "611440",
    "end": "612959"
  },
  {
    "text": "endpoint",
    "start": "612959",
    "end": "614880"
  },
  {
    "text": "then i'll use the invoke web request",
    "start": "614880",
    "end": "616399"
  },
  {
    "text": "commandlet or iwr",
    "start": "616399",
    "end": "618560"
  },
  {
    "text": "and i'm going to ping that endpoint and",
    "start": "618560",
    "end": "620240"
  },
  {
    "text": "there we go a 200",
    "start": "620240",
    "end": "621760"
  },
  {
    "text": "and we can see in the content block",
    "start": "621760",
    "end": "623200"
  },
  {
    "text": "there's our bar output",
    "start": "623200",
    "end": "624959"
  },
  {
    "text": "and for completeness let's grab the foo",
    "start": "624959",
    "end": "626640"
  },
  {
    "text": "endpoint we'll make the request there",
    "start": "626640",
    "end": "628000"
  },
  {
    "text": "too",
    "start": "628000",
    "end": "628800"
  },
  {
    "text": "and again there's our 200 and looking at",
    "start": "628800",
    "end": "631360"
  },
  {
    "text": "the content block",
    "start": "631360",
    "end": "632480"
  },
  {
    "text": "there's our foo output very very cool so",
    "start": "632480",
    "end": "635279"
  },
  {
    "text": "we just deployed our serverless",
    "start": "635279",
    "end": "636560"
  },
  {
    "text": "functions to aws",
    "start": "636560",
    "end": "637760"
  },
  {
    "text": "using nothing but c sharp and the cdk",
    "start": "637760",
    "end": "639680"
  },
  {
    "text": "deploy command",
    "start": "639680",
    "end": "640880"
  },
  {
    "text": "let's head back to visual studio because",
    "start": "640880",
    "end": "642640"
  },
  {
    "text": "i want to create one more lambda",
    "start": "642640",
    "end": "643920"
  },
  {
    "text": "function",
    "start": "643920",
    "end": "644800"
  },
  {
    "text": "the functions we've created so far today",
    "start": "644800",
    "end": "646560"
  },
  {
    "text": "have all been using.net core 3.1",
    "start": "646560",
    "end": "649360"
  },
  {
    "text": "but.net 5 was recently released so let's",
    "start": "649360",
    "end": "651360"
  },
  {
    "text": "create a new lambda function that",
    "start": "651360",
    "end": "652640"
  },
  {
    "text": "targets that",
    "start": "652640",
    "end": "653440"
  },
  {
    "text": "we'll use the aws serverless application",
    "start": "653440",
    "end": "655519"
  },
  {
    "text": "project template",
    "start": "655519",
    "end": "656720"
  },
  {
    "text": "give our new project a name and this",
    "start": "656720",
    "end": "658800"
  },
  {
    "text": "time i'm going to select",
    "start": "658800",
    "end": "659839"
  },
  {
    "text": "the dot net 5 container image blueprint",
    "start": "659839",
    "end": "664000"
  },
  {
    "text": "like our other lambda functions i'll",
    "start": "665200",
    "end": "667040"
  },
  {
    "text": "modify the response body so we can tell",
    "start": "667040",
    "end": "668880"
  },
  {
    "text": "them apart",
    "start": "668880",
    "end": "671440"
  },
  {
    "text": "with that let's go write our cdk code",
    "start": "672320",
    "end": "676000"
  },
  {
    "text": "like before i'm going to create a",
    "start": "676000",
    "end": "677440"
  },
  {
    "text": "variable for the.net 5 lambda",
    "start": "677440",
    "end": "679440"
  },
  {
    "text": "of type function and we'll build it the",
    "start": "679440",
    "end": "681360"
  },
  {
    "text": "same way pass in this",
    "start": "681360",
    "end": "683440"
  },
  {
    "text": "given an id and new up a function props",
    "start": "683440",
    "end": "686880"
  },
  {
    "text": "object but this is where we'll have to",
    "start": "686880",
    "end": "689040"
  },
  {
    "text": "make a few changes",
    "start": "689040",
    "end": "690640"
  },
  {
    "text": "dot net 5 is only supported via a",
    "start": "690640",
    "end": "692320"
  },
  {
    "text": "container image so for runtime",
    "start": "692320",
    "end": "694399"
  },
  {
    "text": "we'll select from image for the code",
    "start": "694399",
    "end": "697440"
  },
  {
    "text": "property",
    "start": "697440",
    "end": "698160"
  },
  {
    "text": "we'll use from asset image and we'll",
    "start": "698160",
    "end": "700320"
  },
  {
    "text": "point to the directory containing the",
    "start": "700320",
    "end": "701839"
  },
  {
    "text": "docker file",
    "start": "701839",
    "end": "703200"
  },
  {
    "text": "again this is relative to the cdk.json",
    "start": "703200",
    "end": "705839"
  },
  {
    "text": "file",
    "start": "705839",
    "end": "706480"
  },
  {
    "text": "and we'll need to pass in an asset image",
    "start": "706480",
    "end": "708480"
  },
  {
    "text": "code props this is a key difference",
    "start": "708480",
    "end": "710480"
  },
  {
    "text": "because we'll use the command property",
    "start": "710480",
    "end": "712160"
  },
  {
    "text": "to specify our handler function",
    "start": "712160",
    "end": "714399"
  },
  {
    "text": "and this also follows the assembly type",
    "start": "714399",
    "end": "716800"
  },
  {
    "text": "method format from before",
    "start": "716800",
    "end": "720399"
  },
  {
    "text": "finally we will set the handler property",
    "start": "721600",
    "end": "723839"
  },
  {
    "text": "but we'll just set it to from image",
    "start": "723839",
    "end": "726320"
  },
  {
    "text": "now the api gateway code is identical",
    "start": "726320",
    "end": "728639"
  },
  {
    "text": "i'll just copy it from above",
    "start": "728639",
    "end": "730240"
  },
  {
    "text": "change out the id and set the handler",
    "start": "730240",
    "end": "732000"
  },
  {
    "text": "to.net 5 lambda and we're good to go",
    "start": "732000",
    "end": "735360"
  },
  {
    "text": "but before we can deploy we'll need to",
    "start": "735360",
    "end": "736880"
  },
  {
    "text": "make a small tweak to the dockerfile to",
    "start": "736880",
    "end": "738639"
  },
  {
    "text": "point to the correct publish directory",
    "start": "738639",
    "end": "740480"
  },
  {
    "text": "i'm building in debug mode so i'll",
    "start": "740480",
    "end": "742160"
  },
  {
    "text": "switch that",
    "start": "742160",
    "end": "743600"
  },
  {
    "text": "and we're on a windows machine so the",
    "start": "743600",
    "end": "745040"
  },
  {
    "text": "default directory is just publish",
    "start": "745040",
    "end": "748079"
  },
  {
    "text": "with that back to the terminal we'll run",
    "start": "748079",
    "end": "749920"
  },
  {
    "text": "cdk deploy again",
    "start": "749920",
    "end": "751600"
  },
  {
    "text": "and agree to the im roles now what's",
    "start": "751600",
    "end": "754000"
  },
  {
    "text": "interesting this time around is you'll",
    "start": "754000",
    "end": "755200"
  },
  {
    "text": "see that the cdk is actually building",
    "start": "755200",
    "end": "756800"
  },
  {
    "text": "the.net 5",
    "start": "756800",
    "end": "757680"
  },
  {
    "text": "docker image for us as part of the",
    "start": "757680",
    "end": "759200"
  },
  {
    "text": "deploy command",
    "start": "759200",
    "end": "761600"
  },
  {
    "text": "and once that finishes we'll see the url",
    "start": "761600",
    "end": "763519"
  },
  {
    "text": "for our new function",
    "start": "763519",
    "end": "765040"
  },
  {
    "text": "i'll grab that url use an invoke web",
    "start": "765040",
    "end": "767360"
  },
  {
    "text": "request again",
    "start": "767360",
    "end": "769920"
  },
  {
    "text": "and there's our 200 and hellofrom.net 5",
    "start": "769920",
    "end": "772480"
  },
  {
    "text": "response",
    "start": "772480",
    "end": "774240"
  },
  {
    "text": "before we wrap up for today i want to do",
    "start": "774240",
    "end": "776320"
  },
  {
    "text": "one more thing to help highlight the",
    "start": "776320",
    "end": "777600"
  },
  {
    "text": "benefits of this technology",
    "start": "777600",
    "end": "779040"
  },
  {
    "text": "so far we have three functions in us",
    "start": "779040",
    "end": "781120"
  },
  {
    "text": "west too but let's say we also want to",
    "start": "781120",
    "end": "782880"
  },
  {
    "text": "deploy our infrastructure in europe so",
    "start": "782880",
    "end": "784720"
  },
  {
    "text": "let's do just that",
    "start": "784720",
    "end": "785760"
  },
  {
    "text": "let's deploy foo bar and the.net 5",
    "start": "785760",
    "end": "788240"
  },
  {
    "text": "lambda to london",
    "start": "788240",
    "end": "789360"
  },
  {
    "text": "to start i'm going to run aws configure",
    "start": "789360",
    "end": "792000"
  },
  {
    "text": "set region eu s2",
    "start": "792000",
    "end": "794000"
  },
  {
    "text": "and that will have my session default to",
    "start": "794000",
    "end": "795519"
  },
  {
    "text": "deploy into london now i've never used",
    "start": "795519",
    "end": "797279"
  },
  {
    "text": "the cdk in this region before so i do",
    "start": "797279",
    "end": "799040"
  },
  {
    "text": "need to run cdk bootstrap before i do",
    "start": "799040",
    "end": "800880"
  },
  {
    "text": "anything else",
    "start": "800880",
    "end": "802240"
  },
  {
    "text": "now a quick cdk deploy command but this",
    "start": "802240",
    "end": "804720"
  },
  {
    "text": "time i'm going to show you a little",
    "start": "804720",
    "end": "805760"
  },
  {
    "text": "trick",
    "start": "805760",
    "end": "806320"
  },
  {
    "text": "i'm going to use the require dash",
    "start": "806320",
    "end": "807600"
  },
  {
    "text": "approval flag with the value never",
    "start": "807600",
    "end": "809519"
  },
  {
    "text": "and this way i won't get prompted to",
    "start": "809519",
    "end": "810959"
  },
  {
    "text": "approve im changes",
    "start": "810959",
    "end": "815839"
  },
  {
    "text": "and with that now we're in eu west too",
    "start": "817600",
    "end": "822079"
  },
  {
    "text": "and just to confirm i'll send a request",
    "start": "822240",
    "end": "823760"
  },
  {
    "text": "to our fu endpoint",
    "start": "823760",
    "end": "826639"
  },
  {
    "text": "and there's our 200.",
    "start": "826720",
    "end": "829839"
  },
  {
    "text": "that concludes this video on how to",
    "start": "831519",
    "end": "832880"
  },
  {
    "text": "define your serverless infrastructure's",
    "start": "832880",
    "end": "834639"
  },
  {
    "text": "code using c-sharp",
    "start": "834639",
    "end": "836000"
  },
  {
    "text": "and then deploy to amazon web services",
    "start": "836000",
    "end": "837680"
  },
  {
    "text": "using the cdk",
    "start": "837680",
    "end": "839839"
  },
  {
    "text": "if you'd like more information i highly",
    "start": "839839",
    "end": "841680"
  },
  {
    "text": "recommend the cdk workshop for",
    "start": "841680",
    "end": "843199"
  },
  {
    "text": "additional tutorials",
    "start": "843199",
    "end": "845120"
  },
  {
    "text": "general documentation is available on",
    "start": "845120",
    "end": "846959"
  },
  {
    "text": "the aws docs site",
    "start": "846959",
    "end": "848720"
  },
  {
    "text": "and if you find any bugs or want to",
    "start": "848720",
    "end": "850160"
  },
  {
    "text": "explore the source code come find us on",
    "start": "850160",
    "end": "852000"
  },
  {
    "text": "github",
    "start": "852000",
    "end": "852880"
  },
  {
    "text": "thanks for watching",
    "start": "852880",
    "end": "857839"
  },
  {
    "text": "you",
    "start": "862720",
    "end": "864800"
  }
]