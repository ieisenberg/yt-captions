[
  {
    "text": "[Music] hello welcome back we are here with our second demo of",
    "start": "230",
    "end": "7839"
  },
  {
    "text": "the day this one a very very exciting one we're talking about amazon time stream uh lots of stuff to",
    "start": "7839",
    "end": "15599"
  },
  {
    "text": "discuss i know we'll get into it uh very quickly but first uh joining us to talk about time stream is tony gibbs",
    "start": "15599",
    "end": "21840"
  },
  {
    "text": "principal solutions architect on the time stream team so tony thank you so much for joining us",
    "start": "21840",
    "end": "27760"
  },
  {
    "text": "yeah thank you nick uh glad to be here um yeah so we've got a lot to talk about i",
    "start": "27760",
    "end": "34480"
  },
  {
    "text": "know the audience definitely has a lot of questions that they are going to want to have answered so we'll be on the lookout for those but",
    "start": "34480",
    "end": "40879"
  },
  {
    "text": "let's start nice and easy here what is amazon timestream",
    "start": "40879",
    "end": "46640"
  },
  {
    "text": "yeah so amazon timestream is our purpose-built database for time",
    "start": "46640",
    "end": "52800"
  },
  {
    "text": "series use cases time series use cases you know they're",
    "start": "52800",
    "end": "59120"
  },
  {
    "text": "kind of fall under the analytics uh but it's and database it's kind of an interesting blend of a system because",
    "start": "59120",
    "end": "66479"
  },
  {
    "text": "you have um this use case where you want to kind of power like dashboards with this really recent",
    "start": "66479",
    "end": "72479"
  },
  {
    "text": "near real-time data and at the same time you kind of like to be able to look backwards through time over that data",
    "start": "72479",
    "end": "79119"
  },
  {
    "text": "and that those queries could span like months back or even years back in the past if you're looking for trends and",
    "start": "79119",
    "end": "85600"
  },
  {
    "text": "you know what used to happen compared to now and those sorts of things so it's a really interesting problem to",
    "start": "85600",
    "end": "93439"
  },
  {
    "text": "solve it's a unique database in a way you know traditionally we used relational",
    "start": "93439",
    "end": "99360"
  },
  {
    "text": "databases for these things just like we kind of use relational databases for everything once upon a time",
    "start": "99360",
    "end": "105280"
  },
  {
    "text": "so that was really kind of the need for it yeah purpose-built database for time series",
    "start": "105280",
    "end": "110640"
  },
  {
    "text": "you talk about using relational databases for everything can you kind of highlight some of the",
    "start": "110640",
    "end": "115759"
  },
  {
    "text": "problems with using relational databases specific for specifically for time series data yeah",
    "start": "115759",
    "end": "121680"
  },
  {
    "text": "there's a there's a good handful of them well the first one is obviously scaling most relational databases",
    "start": "121680",
    "end": "128080"
  },
  {
    "text": "don't have a a really good concept of horizontally scaling like you know you usually you",
    "start": "128080",
    "end": "133840"
  },
  {
    "text": "can vertically scale them and then they eventually hit that you know even in rds as uh you know we allow it to always at 64 terabytes",
    "start": "133840",
    "end": "140879"
  },
  {
    "text": "um and so eventually you kind of hit those uh caps and it's not just the storage side though it's also the",
    "start": "140879",
    "end": "146239"
  },
  {
    "text": "uh performance as well so that's one aspect to it another is that a lot of",
    "start": "146239",
    "end": "151840"
  },
  {
    "text": "these time series use cases especially when we're doing say like iot for example but it could be",
    "start": "151840",
    "end": "159680"
  },
  {
    "text": "something like even devops where you you know you have applications you're sending data that you're wanting",
    "start": "159680",
    "end": "164800"
  },
  {
    "text": "to analyze and trying to keep track of uh you know versions and what columns are in the database and",
    "start": "164800",
    "end": "171519"
  },
  {
    "text": "you're you know quickly like okay we gotta add a new column and you're like what if this iot sensor starts sending data",
    "start": "171519",
    "end": "176879"
  },
  {
    "text": "uh maybe it changes from an integer to a floating point number for example or some sort of decimal point",
    "start": "176879",
    "end": "183120"
  },
  {
    "text": "and you're like trying to alter data types and figuring some stuff out so that's always kind of awkward um and then obviously tooling",
    "start": "183120",
    "end": "191680"
  },
  {
    "text": "there actually are some uh time series databases and you know like grafana and things like that",
    "start": "191680",
    "end": "196959"
  },
  {
    "text": "and sometimes like you know all of these different tools may not work with some of the relational databases and",
    "start": "196959",
    "end": "202720"
  },
  {
    "text": "such because they're kind of stuck in like you know just pure sql jdbc or whatever it is that you're using so",
    "start": "202720",
    "end": "208560"
  },
  {
    "text": "those are some of the issues that we've uh we know exists with relational yeah",
    "start": "208560",
    "end": "213680"
  },
  {
    "text": "and so i i'm curious though if we take that that line forward um is it just relational databases that",
    "start": "213680",
    "end": "219920"
  },
  {
    "text": "are bad at storing time series data because you mentioned that this is a purpose-built time series database and so can i safely",
    "start": "219920",
    "end": "225920"
  },
  {
    "text": "infer that you know that also means that there are problems with using other general purpose databases like either",
    "start": "225920",
    "end": "231040"
  },
  {
    "text": "nosql databases or graph databases for storing time series data is that a safe assumption and can talk a little bit about that",
    "start": "231040",
    "end": "236879"
  },
  {
    "text": "yeah we actually there actually are some cases where we do have definitely seen customers using no",
    "start": "236879",
    "end": "242319"
  },
  {
    "text": "sql databases because they kind of meet fix some of those other problems so we were talking about the flexible schema they can scale",
    "start": "242319",
    "end": "250720"
  },
  {
    "text": "obviously we know like you know how amazing dynamodb is for example for scaling um but then",
    "start": "250720",
    "end": "257199"
  },
  {
    "text": "the issue there is well what if i'm asking dynamo to aggregate a whole bunch of data you know dynamo is not designed",
    "start": "257199",
    "end": "264240"
  },
  {
    "text": "for that it can pull out data points really fast and kind of has that one use case down that we were talking about",
    "start": "264240",
    "end": "270080"
  },
  {
    "text": "where it's like you want to really kind of power something and last like you know a few minutes and you're just yanking data points out",
    "start": "270080",
    "end": "275440"
  },
  {
    "text": "dynamo does that can do that really well but then if you're like hey dynamo can you please tell me",
    "start": "275440",
    "end": "282080"
  },
  {
    "text": "the summer count of this over the last like you know year or something like that dynamo isn't",
    "start": "282080",
    "end": "287840"
  },
  {
    "text": "designed for that and uh yeah that's not something you'd be able to do and then that's where you start bolting a second solution on and",
    "start": "287840",
    "end": "294560"
  },
  {
    "text": "you're streaming data out you have these do-it-yourself uh solutions to try to meet your time",
    "start": "294560",
    "end": "300160"
  },
  {
    "text": "series uh use cases yeah a question that you know like i've",
    "start": "300160",
    "end": "305840"
  },
  {
    "text": "spoken to a lot of customers about databases and the one that always comes up and we've talked about a little bit here but is like",
    "start": "305840",
    "end": "311680"
  },
  {
    "text": "which database should i use for a certain job and i see you smiling over there a little",
    "start": "311680",
    "end": "316720"
  },
  {
    "text": "bit tony but it's just like there are just so many questions that follow from the shape of your data to",
    "start": "316720",
    "end": "322000"
  },
  {
    "text": "the access pattern and i think when we think about what makes a purpose-built time series database special",
    "start": "322000",
    "end": "328560"
  },
  {
    "text": "a lot of it comes down to the uniqueness of the access patterns and sort of like the the put model",
    "start": "328560",
    "end": "333680"
  },
  {
    "text": "of time series data like you mentioned iot sensors before right like oftentimes this sort of this usage",
    "start": "333680",
    "end": "340400"
  },
  {
    "text": "pattern takes the shape of like you have a sensor that maybe has either a completely indeterminate insert time or maybe a completely",
    "start": "340400",
    "end": "346639"
  },
  {
    "text": "consistent insert time and it just keeps logging data and like a lot of these assumptions start to become very specific to time",
    "start": "346639",
    "end": "352880"
  },
  {
    "text": "theory or a lot of these patterns start to become very specific to time series and people that i found largely were",
    "start": "352880",
    "end": "358400"
  },
  {
    "text": "trying to shoehorn these patterns into existing databases because that's all that people had to work with before",
    "start": "358400",
    "end": "364400"
  },
  {
    "text": "and you know i'm excited because it seems like time stream probably solves a lot of these problems in uh you know in access and storage of",
    "start": "364400",
    "end": "371280"
  },
  {
    "text": "this data yeah it definitely does and one of the things that one of the",
    "start": "371280",
    "end": "377440"
  },
  {
    "text": "really nice differentiating features that we have in time stream was the tiering of",
    "start": "377440",
    "end": "383280"
  },
  {
    "text": "our data for these different access patterns so if you were to look at our",
    "start": "383280",
    "end": "388639"
  },
  {
    "text": "the documentation for example we have two tiers we have an in-memory tier and a magnetic disk here and the data",
    "start": "388639",
    "end": "395680"
  },
  {
    "text": "automatically moves it's like life cycle management right and the data will move from one tier into the next",
    "start": "395680",
    "end": "402160"
  },
  {
    "text": "automatically and each of those two tiers is um designed for different use cases",
    "start": "402160",
    "end": "410400"
  },
  {
    "text": "so as an example you might say like uh automate i can say or just say i want one day of",
    "start": "410400",
    "end": "416479"
  },
  {
    "text": "data for example in the in-memory tier and then i want like 12 months of data in the magnetic tier",
    "start": "416479",
    "end": "422720"
  },
  {
    "text": "and the data will move at the end of that time retention in the next one and then when the magnetic time period expires",
    "start": "422720",
    "end": "428240"
  },
  {
    "text": "it'll go out of the system okay that is each of those really cool",
    "start": "428240",
    "end": "433599"
  },
  {
    "text": "this is this is uh i've seen this all i mean you know this with s3 with life cycle management",
    "start": "434400",
    "end": "439440"
  },
  {
    "text": "and retention of data is one thing but like this is like giving me flashbacks about",
    "start": "439440",
    "end": "444479"
  },
  {
    "text": "how people treat time series data in like elastic search clusters right it's like you want to retain forever but",
    "start": "444479",
    "end": "450560"
  },
  {
    "text": "if it's it's all available permanently like and it's all like it costs a lot we released something like ultra warm or not something like it we",
    "start": "450560",
    "end": "457280"
  },
  {
    "text": "released ultra warmth elasticsearch but now this is like with time stream it really feels like if you have a database need for time",
    "start": "457280",
    "end": "464000"
  },
  {
    "text": "series data this is the best of both worlds for the the long term retention but also the high performance access",
    "start": "464000",
    "end": "470000"
  },
  {
    "text": "in the short term exactly and then our query engine is it's clever",
    "start": "470000",
    "end": "475919"
  },
  {
    "text": "it's smart you don't have to specify anything and say hey i go to this tier it just it figures out where it is if",
    "start": "475919",
    "end": "481520"
  },
  {
    "text": "there's data in both tiers it figures out how to uh you know get that data together and get you the right answer",
    "start": "481520",
    "end": "488000"
  },
  {
    "text": "uh and yeah that that was that's like the one of the tough things with these types of solutions is",
    "start": "488000",
    "end": "493120"
  },
  {
    "text": "uh yeah our query engine is quite clever and smart we call it an adaptive query",
    "start": "493120",
    "end": "499039"
  },
  {
    "text": "engine is is uh what we've coined it so you talked about kind of intelligently",
    "start": "499039",
    "end": "505840"
  },
  {
    "text": "moving data as it slips out of the the you know the one day time window or the one week time window and then choosing a persistence tier",
    "start": "505840",
    "end": "513919"
  },
  {
    "text": "with respect to the query patterns um beyond magnetic disks and memory uh are is there another so nick",
    "start": "513919",
    "end": "521279"
  },
  {
    "text": "mentioned s3 for example and i think there's a very common use case where uh customers take kind of uh uh data that they query",
    "start": "521279",
    "end": "529519"
  },
  {
    "text": "or no longer query um on a regular basis and archive it somehow",
    "start": "529519",
    "end": "534880"
  },
  {
    "text": "and then but but then there's this process of like what did they do and how difficult did they make it to retrieve something from the archive",
    "start": "534880",
    "end": "540800"
  },
  {
    "text": "is there kind of are you detecting any patterns around how people use time series does everything sit in time stream or is",
    "start": "540800",
    "end": "547200"
  },
  {
    "text": "there some sort of like archival story there yeah as of right now it does all sit in time",
    "start": "547200",
    "end": "553920"
  },
  {
    "text": "stream which is one of the reasons why we uh tried to get that magnetic disk cost as close to s3",
    "start": "553920",
    "end": "560240"
  },
  {
    "text": "pricing as we could so it's low cost like s3 is very low cost obviously um and that that",
    "start": "560240",
    "end": "567040"
  },
  {
    "text": "was one of the reasons uh to try to get that we've definitely had customers asking for some sort of archival",
    "start": "567040",
    "end": "573279"
  },
  {
    "text": "usually for other reasons than archiving but like to you know feed it into say sage maker or like elastic search",
    "start": "573279",
    "end": "579920"
  },
  {
    "text": "because the query patterns may be still you know there's things that elastic search or can do that you know maybe red shift or",
    "start": "579920",
    "end": "585600"
  },
  {
    "text": "not red shift time stream sorry i was thinking red shift as well might be another place you'd move it to but these databases",
    "start": "585600",
    "end": "591440"
  },
  {
    "text": "um you know they might have to be able to do different types of query patterns that maybe do an analysis that isn't time series related like you're",
    "start": "591440",
    "end": "597600"
  },
  {
    "text": "searching through text or something like that just as an example and just to be clear when you do that",
    "start": "597600",
    "end": "603200"
  },
  {
    "text": "though uh that data like time stream doesn't have the ability when you talk about the flexible query engine",
    "start": "603200",
    "end": "608320"
  },
  {
    "text": "that's with respect to the data that is actually in time stream right when you move the data out of time stream you by definition make it no longer queryable",
    "start": "608320",
    "end": "614560"
  },
  {
    "text": "under those patterns is that is that that's correct yeah yeah i know you nailed it yeah",
    "start": "614560",
    "end": "620560"
  },
  {
    "text": "yeah so lots of unique challenges it sounds like to getting time series data right uh and to build a service that can",
    "start": "620560",
    "end": "627200"
  },
  {
    "text": "service it uh or deal with that data in the way those ways that you've described uh you know i've been at aws for a little",
    "start": "627200",
    "end": "634959"
  },
  {
    "text": "bit now not terribly long and i remember before i joined aws i think it was about two years ago i",
    "start": "634959",
    "end": "640079"
  },
  {
    "text": "first heard about time stream uh at i think was re-event 2018 so it sounds like it's spent about two",
    "start": "640079",
    "end": "645680"
  },
  {
    "text": "years in the oven before general availability release uh what sort of went into the product between now and then and sort of what",
    "start": "645680",
    "end": "652240"
  },
  {
    "text": "did that process look like yeah um so shortly after that we went you know right into preview",
    "start": "652240",
    "end": "657920"
  },
  {
    "text": "um it's how standard we do that uh and we had you know we've been",
    "start": "657920",
    "end": "662959"
  },
  {
    "text": "working with like a lot of great customers um you know it's like uh guardian life for example uh",
    "start": "662959",
    "end": "668320"
  },
  {
    "text": "cake was one that you know i was on site with them working with them as well um and yeah we had like this great set",
    "start": "668320",
    "end": "674480"
  },
  {
    "text": "of customers that really gave us good feedback um and the feedback",
    "start": "674480",
    "end": "679680"
  },
  {
    "text": "really kind of powered what we were building and i know i was listening to rahul uh who was your previous speaker",
    "start": "679680",
    "end": "685279"
  },
  {
    "text": "on here saying how like you know at aws you know like 90 some percent of our you know features and what we're",
    "start": "685279",
    "end": "691360"
  },
  {
    "text": "building is driven purely by customers and it's probably like very close to 100 percent and",
    "start": "691360",
    "end": "697680"
  },
  {
    "text": "that was really time stream followed that same model um that's a very common model at aws",
    "start": "697680",
    "end": "702959"
  },
  {
    "text": "um and so yeah we took that feedback and it was really until we had their customers saying you know yeah you're",
    "start": "702959",
    "end": "709360"
  },
  {
    "text": "meeting what we need here for a time series purpose built time series database yeah so really",
    "start": "709360",
    "end": "717440"
  },
  {
    "text": "driving home the philosophy of you know waiting till it's ready and making sure that uh it serves on the mission statement uh that people",
    "start": "717440",
    "end": "724160"
  },
  {
    "text": "resonate so much with when we first announce it right so um definitely a good approach i'd agree",
    "start": "724160",
    "end": "730880"
  },
  {
    "text": "yeah well it also just sounds like even some of our very brief discussions around storage tiers",
    "start": "730880",
    "end": "736240"
  },
  {
    "text": "around query patterns around access patterns around integrations there's a lot of complexity here this is",
    "start": "736240",
    "end": "741519"
  },
  {
    "text": "this does not sound like a trivial product from a from a technical perspective so i imagine a lot of engineering cycles went in there to",
    "start": "741519",
    "end": "747120"
  },
  {
    "text": "make sure that everything is you know at the right level of performance and scalability and cost and all that so",
    "start": "747120",
    "end": "752800"
  },
  {
    "text": "that sounds like a tremendous undertaking and i'm not surprised at all i'm really glad the team um you know made the right choice and",
    "start": "752800",
    "end": "758560"
  },
  {
    "text": "took the time to build the best possible product yeah a very talented group of engineers uh it's",
    "start": "758560",
    "end": "764480"
  },
  {
    "text": "been a pure pleasure working with so many of them um yeah definitely also well you know shifting",
    "start": "764480",
    "end": "771920"
  },
  {
    "text": "gears a little bit uh we talked a lot about sort of complexity of time series data the complexity of building systems",
    "start": "771920",
    "end": "778560"
  },
  {
    "text": "around uh time series data um a lot of people are probably wondering",
    "start": "778560",
    "end": "783920"
  },
  {
    "text": "does this apply to me should i be interested in time series so to broaden the question a little bit you",
    "start": "783920",
    "end": "789920"
  },
  {
    "text": "know what are scenarios or industries we mentioned iot before that could be",
    "start": "789920",
    "end": "796000"
  },
  {
    "text": "most suited to benefit from a time series database that may not be using once a day",
    "start": "796000",
    "end": "801600"
  },
  {
    "text": "yeah so it really is wherever you're measuring something uh over some period",
    "start": "801600",
    "end": "807279"
  },
  {
    "text": "like at some time interval usually a lot of these use cases are it's on a regular interval of time but",
    "start": "807279",
    "end": "812720"
  },
  {
    "text": "it doesn't actually have to be um so that does fall under the iot one that we talked about usually you know",
    "start": "812720",
    "end": "818079"
  },
  {
    "text": "some sort of sensor sometimes they have missing data and we have late arrival and those are all other wrinkles we don't need to get into right now",
    "start": "818079",
    "end": "824480"
  },
  {
    "text": "other ones are um we actually had a lot of customers doing this which was measuring uh the health and stuff of",
    "start": "824480",
    "end": "832000"
  },
  {
    "text": "like a fleet of ec2 instances for an application or maybe even a kubernetes or whatever",
    "start": "832000",
    "end": "837440"
  },
  {
    "text": "it is like some sort of containers you're sending like cpu and memory and you know you're making sure that you know",
    "start": "837440",
    "end": "842560"
  },
  {
    "text": "something's not you know going off uh funny and obviously you can do similar things with cloudwatch but maybe you want to power",
    "start": "842560",
    "end": "848639"
  },
  {
    "text": "like you know like the you walk into some of these offices and you see a great big tv screen with like all these health metrics and dashboards",
    "start": "848639",
    "end": "855760"
  },
  {
    "text": "perfect use case for a time stream for example um and then another one that we had then",
    "start": "855760",
    "end": "861680"
  },
  {
    "text": "this really this one it's kind of there's actually quite a few of this it's kind of we just call it app analytics",
    "start": "861680",
    "end": "867279"
  },
  {
    "text": "um and what these ones are is it kind of almost like this everything else that's like time series",
    "start": "867279",
    "end": "873519"
  },
  {
    "text": "event like things so click stream data we had actually quite a few customers doing stuff like that where they're like",
    "start": "873519",
    "end": "878959"
  },
  {
    "text": "you know okay i have this user session and this page loaded here and it took this long and you're kind of",
    "start": "878959",
    "end": "884639"
  },
  {
    "text": "measuring things like that as you're tracking the life cycle of someone visiting your and using your web",
    "start": "884639",
    "end": "890800"
  },
  {
    "text": "application and and that sort of thing um we've also had like some like you know like video",
    "start": "890800",
    "end": "896639"
  },
  {
    "text": "analytics was actually one uh we've seen uh you know checking things like you know pauses and you know",
    "start": "896639",
    "end": "903199"
  },
  {
    "text": "a video and when it occurs and you know the again the life cycle of watching a video um so all of these sorts of things are",
    "start": "903199",
    "end": "911120"
  },
  {
    "text": "um that they fit under our times time series or time stream i guess you could say",
    "start": "911120",
    "end": "916639"
  },
  {
    "text": "uh a series of data points at some time period where you're measuring something",
    "start": "916639",
    "end": "922560"
  },
  {
    "text": "yeah when you mention the use cases of the the tv with all the dashboard and",
    "start": "922560",
    "end": "928160"
  },
  {
    "text": "analytics and metrics about service health um that's it seems like we're kind of delving into observability which sounds",
    "start": "928160",
    "end": "934399"
  },
  {
    "text": "like it's it's it's very well within the wheelhouse of time stream but i wonder what to what extent do we",
    "start": "934399",
    "end": "940560"
  },
  {
    "text": "support popular uh standard tools um i'm thinking things like grafana for example",
    "start": "940560",
    "end": "946399"
  },
  {
    "text": "yeah we have uh support for grafana uh that was i'd say almost it feels like half more",
    "start": "946399",
    "end": "952639"
  },
  {
    "text": "than half i don't know what it is a very large percentage of the customers i work with uh are those the first thing we say we need",
    "start": "952639",
    "end": "958320"
  },
  {
    "text": "grafana support so yeah we worked uh in getting that uh plugin uh out uh you know i know that",
    "start": "958320",
    "end": "964480"
  },
  {
    "text": "it's on i think grafana put something up on their blog post when we launch time stream and so yeah",
    "start": "964480",
    "end": "970720"
  },
  {
    "text": "we support grafana and it's actually in the open source version you can use with grafana you don't have to get the enterprise version or",
    "start": "970720",
    "end": "976639"
  },
  {
    "text": "anything like that you can use grafana cloud or you can do self-hosted grafana",
    "start": "976639",
    "end": "981680"
  },
  {
    "text": "for example but put it on ec2 instance or whatever and just launch load up the time stream plugin",
    "start": "981680",
    "end": "986959"
  },
  {
    "text": "and and go from there um a few other visualizations we",
    "start": "986959",
    "end": "992160"
  },
  {
    "text": "obviously support quicksite uh which is uh you know the aws uh",
    "start": "992160",
    "end": "997279"
  },
  {
    "text": "our amazon quick site um so yeah that's another one and then we also have a jdbc driver so you have jdbc you can kind of",
    "start": "997279",
    "end": "1003759"
  },
  {
    "text": "do a lot of different things with that like i personally use like",
    "start": "1003759",
    "end": "1009120"
  },
  {
    "text": "data grip for example is the one that i happen to use uh so yeah you can use like sql querying tools and that sort of thing uh with",
    "start": "1009199",
    "end": "1015839"
  },
  {
    "text": "over jdb pc as well",
    "start": "1015839",
    "end": "1019279"
  },
  {
    "text": "yeah i mean just echoing the sentiment before of uh how much really goes into launching a tool into the space uh for",
    "start": "1020880",
    "end": "1027199"
  },
  {
    "text": "for for time series data and having it be able to provide value to customers a lot of these sort of integration",
    "start": "1027199",
    "end": "1033199"
  },
  {
    "text": "components really feel necessary and it really feels like they uh",
    "start": "1033199",
    "end": "1038720"
  },
  {
    "text": "they they were not seen as optional here they it really feels like they were seen as like no these were after talking to",
    "start": "1038720",
    "end": "1044160"
  },
  {
    "text": "all those customers it was like well time series takes a lot of different forms for a lot of different customers if we want to deliver on this",
    "start": "1044160",
    "end": "1049200"
  },
  {
    "text": "mission of a purpose-built time series service as a database service it's going to need all of these things so",
    "start": "1049200",
    "end": "1055039"
  },
  {
    "text": "the more we talk about it the more it becomes clear to me sort of how much complexity there is and and i guess just",
    "start": "1055039",
    "end": "1060480"
  },
  {
    "text": "variability within time series data right it it is defined by the temporality that you talked about before but within that",
    "start": "1060480",
    "end": "1066720"
  },
  {
    "text": "man there's a lot of different shapes this takes yeah definitely it really is um yeah and there's like i said then the",
    "start": "1066720",
    "end": "1074320"
  },
  {
    "text": "variants and the use cases and stuff like that as well also and making sure you you know you have like different plugins and things",
    "start": "1074320",
    "end": "1080720"
  },
  {
    "text": "like um examples would be dealing with like streaming data that's coming in perfectly",
    "start": "1080720",
    "end": "1085840"
  },
  {
    "text": "completely in real time or where you're manipulating the data like using like a tool like uh",
    "start": "1085840",
    "end": "1091200"
  },
  {
    "text": "kinesis data analytics for example with for apache flink and changing data or if you're taking in",
    "start": "1091200",
    "end": "1096720"
  },
  {
    "text": "devops data with like an open source tool like uh telegraph so we made sure we had like plugins for like both of",
    "start": "1096720",
    "end": "1102559"
  },
  {
    "text": "those for example uh just because they were common and then obviously those customers that just want to uh you know maybe in the iot use case we",
    "start": "1102559",
    "end": "1109520"
  },
  {
    "text": "actually you know still have iot uh we've integrated with the iot team with iot core",
    "start": "1109520",
    "end": "1114960"
  },
  {
    "text": "so the rules engines and send data in from that and of course you can just use the sdks to send data into time stream in",
    "start": "1114960",
    "end": "1121039"
  },
  {
    "text": "real time as well so yeah there's definitely a lot of different use cases and make sure you cover all the other tools and stuff like",
    "start": "1121039",
    "end": "1127360"
  },
  {
    "text": "that on the ingestion side not just the visualization side cool i know folks in chat have been",
    "start": "1127360",
    "end": "1134960"
  },
  {
    "text": "awaiting this since it was probably announced but are you gonna be able to show us using timestream in action today maybe the",
    "start": "1134960",
    "end": "1140559"
  },
  {
    "text": "first steps to make provision one of the databases yeah absolutely yeah we got a really",
    "start": "1140559",
    "end": "1146559"
  },
  {
    "text": "kind of a simple cool little sample database and go into and show the sql syntax that we support uh",
    "start": "1146559",
    "end": "1152160"
  },
  {
    "text": "which is very close to uh anti-sequel with bit of gap filling and things like that in there as well so uh yeah i can jump",
    "start": "1152160",
    "end": "1159200"
  },
  {
    "text": "in um i'll do that here go click this share",
    "start": "1159200",
    "end": "1165840"
  },
  {
    "text": "okay classic teleconferencing uh yeah can you can you see my screen yet",
    "start": "1170480",
    "end": "1177679"
  },
  {
    "text": "yeah exactly there we go uh is that and you see the time stream console here uh i see a uh powerpoint",
    "start": "1177679",
    "end": "1184000"
  },
  {
    "text": "um oh that's not the right one here let's change that where um i want this one here",
    "start": "1184000",
    "end": "1190960"
  },
  {
    "text": "it's all good oh there we go there's the time stream yeah the product page right there",
    "start": "1190960",
    "end": "1197600"
  },
  {
    "text": "excellent all right so we are in the time stream console so this is the landing page here for uh if you search you know for a time",
    "start": "1197600",
    "end": "1205039"
  },
  {
    "text": "stream up here you know end up uh just it'll come up here time stream anyways so this is the",
    "start": "1205039",
    "end": "1211840"
  },
  {
    "text": "landing page here for time stream uh we have there's a bunch of links and stuff on this page like over to pricing",
    "start": "1211840",
    "end": "1216880"
  },
  {
    "text": "and github and uh you know the integrations and the docs and stuff uh some people may not notice that",
    "start": "1216880",
    "end": "1222400"
  },
  {
    "text": "there's like this little pop-up panel out here which is the different navigation but we'll just go over to create database because this is the exciting",
    "start": "1222400",
    "end": "1228640"
  },
  {
    "text": "part here um and if we go to create a database there's time streams it's serverless",
    "start": "1228640",
    "end": "1235280"
  },
  {
    "text": "first i don't know if we mentioned that earlier maybe everyone's like you provision clusters or what do you do in time stream",
    "start": "1235280",
    "end": "1240640"
  },
  {
    "text": "you don't uh there's actually it's so simple uh creating a database this is just the only options you get so it's",
    "start": "1240640",
    "end": "1246559"
  },
  {
    "text": "very casual drop right there i i know i know that's uh we should probably just address it now and",
    "start": "1246559",
    "end": "1252000"
  },
  {
    "text": "not have to interrupt down the line but um having this database be surprised means a whole bunch of different things um but",
    "start": "1252000",
    "end": "1259280"
  },
  {
    "text": "largely like you no longer need to think about right sizing your underlying data or compute store to",
    "start": "1259280",
    "end": "1266480"
  },
  {
    "text": "the traffic that you're throwing at or the data that you're throwing at it right yeah it's entirely scalable behind",
    "start": "1266480",
    "end": "1272320"
  },
  {
    "text": "scenes like well when we go through here you don't even actually it's like you know a dynamodb you have to do like read",
    "start": "1272320",
    "end": "1277919"
  },
  {
    "text": "and write capacity you know they have like you know the um they can do it like an auto version in time stream you don't even have any",
    "start": "1277919",
    "end": "1284240"
  },
  {
    "text": "of that at all it's just there's no options they should we just figure it out for you but you don't create indexes you don't",
    "start": "1284240",
    "end": "1290480"
  },
  {
    "text": "you know it's meant to be completely automated the only thing you've actually configured were those retention time",
    "start": "1290480",
    "end": "1296159"
  },
  {
    "text": "periods how long do you want to keep data and then obviously encryption you know",
    "start": "1296159",
    "end": "1301360"
  },
  {
    "text": "that's obviously important so that's really your only option what kms key do you want to use do you want to add some tags give it a name that's it and then we did",
    "start": "1301360",
    "end": "1309280"
  },
  {
    "text": "create even to make it even more easy to get started with it there's a sample database here which is going to has an",
    "start": "1309280",
    "end": "1315600"
  },
  {
    "text": "option to load and i'll create two tables i'll do both of them you can just do one",
    "start": "1315600",
    "end": "1320799"
  },
  {
    "text": "if you wanted but i'll do both and just make a little note here that there will be a little bit of data loaded so tiny little bit a few charges there",
    "start": "1320799",
    "end": "1328320"
  },
  {
    "text": "probably on the order of uh pennies though and then yeah just click create database in this case",
    "start": "1328320",
    "end": "1334559"
  },
  {
    "text": "and we now have a database with a couple tables",
    "start": "1334559",
    "end": "1340480"
  },
  {
    "text": "and just to again highlight like what the what happened was is it created this dev ops",
    "start": "1340480",
    "end": "1345600"
  },
  {
    "text": "table in this particular case we have a day of memory storage and in this case we have five years of magnetic",
    "start": "1345600",
    "end": "1351200"
  },
  {
    "text": "storage uh is what we have i'm going to just make my screen just a tad bigger just in case it's like i don't know if that text",
    "start": "1351200",
    "end": "1356960"
  },
  {
    "text": "was yeah it's too small better now that's a bit better okay i just thought about that i was like yeah it might be a bit",
    "start": "1356960",
    "end": "1362240"
  },
  {
    "text": "small um so yeah that's that's really what it is and you can actually change these",
    "start": "1362240",
    "end": "1367280"
  },
  {
    "text": "things even after the fact like you can go in and be like you know what i want to actually make it like 12 hours",
    "start": "1367280",
    "end": "1372320"
  },
  {
    "text": "and you know what five years is just too much let's do like one year here um and that makes a lot of",
    "start": "1372320",
    "end": "1378000"
  },
  {
    "text": "sense right like a lot of the one of the only configurable things here is the the retention policy and the reality i'd",
    "start": "1378000",
    "end": "1384000"
  },
  {
    "text": "imagine is that a lot of customers may not know exactly what that threshold is for when they want to hand it off to cold storage so",
    "start": "1384000",
    "end": "1389280"
  },
  {
    "text": "the fact that they don't have to then spin up a new database and then move all their data over to this other one with a different retention policy or",
    "start": "1389280",
    "end": "1395919"
  },
  {
    "text": "lifecycle policy is is super handy yeah absolutely um",
    "start": "1395919",
    "end": "1401840"
  },
  {
    "text": "let's change this i'm going to get this warning is just because i'm shortening the retention periods you could actually be dropping",
    "start": "1401840",
    "end": "1407120"
  },
  {
    "text": "forcing data out of the system but that's fine so we uh we click save there and that's",
    "start": "1407120",
    "end": "1412480"
  },
  {
    "text": "really all it is yeah creating a table uh again that's the only options",
    "start": "1412480",
    "end": "1417600"
  },
  {
    "text": "a name and your attention policies really simple um once the database like i said we have",
    "start": "1417600",
    "end": "1424960"
  },
  {
    "text": "these two tables here they have data in them i can go over the query editor here and we have a built-in",
    "start": "1424960",
    "end": "1430000"
  },
  {
    "text": "query editor in the console which helps make things easy again you can use jdbc and i've like i said i have an intellij or",
    "start": "1430000",
    "end": "1436799"
  },
  {
    "text": "whatever data grip setup and you can use tools like that you use pretty much anything that works with jdbc tested a few different tools",
    "start": "1436799",
    "end": "1443600"
  },
  {
    "text": "and they work um but like in this case here in the our console is actually quite good for querying",
    "start": "1443600",
    "end": "1449039"
  },
  {
    "text": "and you can see like you know you're just expanding these are the columns that we have under these tables",
    "start": "1449039",
    "end": "1454559"
  },
  {
    "text": "and one important thing to call out is these are actually added at ingestion so if we went back and i created a table",
    "start": "1454559",
    "end": "1460960"
  },
  {
    "text": "what would happen is you actually wouldn't see all of these columns uh what would have all you'd actually have is the timestamp",
    "start": "1460960",
    "end": "1467279"
  },
  {
    "text": "because every table has to have that and a measure name because every table happens to have one of those too for whatever measures",
    "start": "1467279",
    "end": "1473039"
  },
  {
    "text": "you're adding in and then the rest would be dynamically added as you write data into the table so that's like that kind",
    "start": "1473039",
    "end": "1479440"
  },
  {
    "text": "of no sql-ish piece to time stream yeah you add a new",
    "start": "1479440",
    "end": "1484640"
  },
  {
    "text": "sensor that new sensor starts sending new fields those new fields are added at ingestion time so it's like",
    "start": "1484640",
    "end": "1490480"
  },
  {
    "text": "uh schema inferred schema on right is kind of what it is",
    "start": "1490480",
    "end": "1495840"
  },
  {
    "text": "but tony just a second here what what if you add a field that is not in the schema um",
    "start": "1495840",
    "end": "1503360"
  },
  {
    "text": "so if you sent data you it wouldn't be added until some data came in so say i had like",
    "start": "1503360",
    "end": "1508720"
  },
  {
    "text": "maybe i had like this iot sensor we'll just say this iot data it looks like we have this feel information uh we have model",
    "start": "1508720",
    "end": "1515200"
  },
  {
    "text": "maybe we add like make in here oh we have make uh what else could we add in we'll just say we the color of the of",
    "start": "1515200",
    "end": "1521120"
  },
  {
    "text": "the truck i don't add color the sensor is like hey we're gonna send the color as well and say the color comes in",
    "start": "1521120",
    "end": "1526559"
  },
  {
    "text": "as soon as we see data that comes in says red we'd be like that field color would be added to this",
    "start": "1526559",
    "end": "1531840"
  },
  {
    "text": "table dynamically at right time so you don't have to go in you're not mucking with ddl and adding it it's like the sensor when it says hey",
    "start": "1531840",
    "end": "1538640"
  },
  {
    "text": "here's the color and it's red then that new color gets added to the table and that new red is written into",
    "start": "1538640",
    "end": "1544240"
  },
  {
    "text": "the table that's awesome um is there uh so these are these seem to be scalar",
    "start": "1544240",
    "end": "1551039"
  },
  {
    "text": "properties on this one entry uh alongside time and measure name and you said time",
    "start": "1551039",
    "end": "1556720"
  },
  {
    "text": "and measure name are the the two kind of required required fields here right yeah um and",
    "start": "1556720",
    "end": "1561919"
  },
  {
    "text": "what i'll do is i'll just query all of the data in this table or a hundred records of the data sorry",
    "start": "1561919",
    "end": "1567279"
  },
  {
    "text": "and so you can kind of see here what how it kind of looks um and so here's our time stamp this is",
    "start": "1567279",
    "end": "1573120"
  },
  {
    "text": "like a this we support nanosecond down in nanosecond precision um you know milliseconds or seconds you",
    "start": "1573120",
    "end": "1579440"
  },
  {
    "text": "can kind of pick when you're sending data in and um and yeah and then so this would be the measure measure name in this case",
    "start": "1579440",
    "end": "1585760"
  },
  {
    "text": "we're doing the fuel reading here and then this would be the quantity of fuel for example center in from that",
    "start": "1585760",
    "end": "1591200"
  },
  {
    "text": "sensor um and yeah you kind of see everything kind of coming in here and so",
    "start": "1591200",
    "end": "1596400"
  },
  {
    "text": "if say something else like a new record came in that just happened to have that extra",
    "start": "1596400",
    "end": "1601919"
  },
  {
    "text": "field then every field going forward that sends that would have that",
    "start": "1601919",
    "end": "1607279"
  },
  {
    "text": "that's awesome yeah what is uh do we have the ability to store so you mentioned if we send color color will",
    "start": "1607279",
    "end": "1614080"
  },
  {
    "text": "appear here but it will be empty for most of these these records right yeah",
    "start": "1614080",
    "end": "1619679"
  },
  {
    "text": "exactly and the reason like this here is like a blank on this bar chart is that there's something that's sending",
    "start": "1619679",
    "end": "1625039"
  },
  {
    "text": "in a measure value by varchar i don't know what it is it must be something further down on one of these 10 pages",
    "start": "1625039",
    "end": "1630480"
  },
  {
    "text": "um but like in this case these ones are all uh measure values so for a double here",
    "start": "1630480",
    "end": "1636720"
  },
  {
    "text": "and so that's why it's this you pretty much have this dynamic schema that is the superset of all the",
    "start": "1636720",
    "end": "1642159"
  },
  {
    "text": "the different columns that you're sending in from the center though yeah so we support four different data types uh we support the double",
    "start": "1642159",
    "end": "1648320"
  },
  {
    "text": "uh we support uh big engine and i'd say those are the two most common that most customers will use and then we",
    "start": "1648320",
    "end": "1654240"
  },
  {
    "text": "also support boolean and there's a few use cases for that and then varchar there's actually good use cases for that",
    "start": "1654240",
    "end": "1659279"
  },
  {
    "text": "like i bet like in here like for example you could have like a lat long or something like that that would be stuck in maybe as a bar",
    "start": "1659279",
    "end": "1665039"
  },
  {
    "text": "char or something like that and i'd be like hey where is this truck at this given point in time",
    "start": "1665039",
    "end": "1670480"
  },
  {
    "text": "and that would probably be something like that and those are the four data types so is that i i noticed that that does not um would",
    "start": "1670480",
    "end": "1676880"
  },
  {
    "text": "it be a bad idea to stick a bunch of json in the bar chart yeah it's not it it's not exactly what",
    "start": "1676880",
    "end": "1683679"
  },
  {
    "text": "it's designed entirely for right because usually we're doing things like averaging or sums we're doing operations",
    "start": "1683679",
    "end": "1689520"
  },
  {
    "text": "on this data um it would depend on that would be like where we'd start analyzing the query patterns and what you're going to do",
    "start": "1689520",
    "end": "1694960"
  },
  {
    "text": "with that json and how you're going to pull that out if you were like so for example maybe in a case where you were",
    "start": "1694960",
    "end": "1702080"
  },
  {
    "text": "you did store json in there and you were just pulling out like a handful of small handful of data points",
    "start": "1702080",
    "end": "1708240"
  },
  {
    "text": "that use case might actually fit better under say dynamodb for example and that would be like understanding the",
    "start": "1708240",
    "end": "1713520"
  },
  {
    "text": "query patterns what you're trying to accomplish and making sure we put that the you know the right purpose-built database is being",
    "start": "1713520",
    "end": "1720080"
  },
  {
    "text": "used yeah yeah speaking of query patterns what kinds of can you talk a little bit about what kinds of queries or what",
    "start": "1720080",
    "end": "1725600"
  },
  {
    "text": "kinds of considerations should we i mean i think i guess we had an example there which is don't store json and varchar and pull",
    "start": "1725600",
    "end": "1730880"
  },
  {
    "text": "deals out of that but i'm sure there's a lot of other best practices here where um you know like for example we talked",
    "start": "1730880",
    "end": "1736159"
  },
  {
    "text": "about dynamo a little bit um but in dynamo for example like we have to have careful consideration around",
    "start": "1736159",
    "end": "1742240"
  },
  {
    "text": "um composite keys and partition keys right because the thing that'll slow dynamo down at scale is scans and yeah uh that's that's kind",
    "start": "1742240",
    "end": "1750240"
  },
  {
    "text": "of i think that's where you were going with like hey some operations where you're doing aggregation are not ideal to be done at really large",
    "start": "1750240",
    "end": "1756640"
  },
  {
    "text": "scale in in dynamo um but yeah but is that so i guess there's two two parts to that question the first is",
    "start": "1756640",
    "end": "1762720"
  },
  {
    "text": "um querying by any of these fields here in either the devops example table or",
    "start": "1762720",
    "end": "1767840"
  },
  {
    "text": "the iot table i assume is an extremely fast operation aggregations querying by filtering are",
    "start": "1767840",
    "end": "1773360"
  },
  {
    "text": "all extremely fast if you're used to sql you can run all these operations and and they have the performance that you'd expect is that i guess questions",
    "start": "1773360",
    "end": "1780559"
  },
  {
    "text": "up there is that a safe assumption it is yes and this is like i actually went i i found out actually surprised i",
    "start": "1780559",
    "end": "1786960"
  },
  {
    "text": "found it so quickly we have a set of sample queries against this data that are also pre-loaded this one that i have up",
    "start": "1786960",
    "end": "1792720"
  },
  {
    "text": "here is like kind of like your classic uh query for for something that you'd be running against like a time series",
    "start": "1792720",
    "end": "1798880"
  },
  {
    "text": "database um you know you're querying something uh this is the devops example so it wasn't",
    "start": "1798880",
    "end": "1803919"
  },
  {
    "text": "the one data we were just looking at or we are looking at down here i haven't run this query but like in this case like this is like",
    "start": "1803919",
    "end": "1809440"
  },
  {
    "text": "you know we're doing cpu utilization we're doing like these percentiles for example and we're really just",
    "start": "1809440",
    "end": "1814720"
  },
  {
    "text": "interested in like a narrow like in this case like two hours so it's kind of perfect for like our in memory",
    "start": "1814720",
    "end": "1819919"
  },
  {
    "text": "uh data tier for example um and but this query is kind of like you know your classic",
    "start": "1819919",
    "end": "1825279"
  },
  {
    "text": "thing that you'd have like you know maybe like some sort of like uh you know a gauge or something like that and uh or some sort of thing that's kind of",
    "start": "1825279",
    "end": "1831760"
  },
  {
    "text": "showing you you know how are we at the red line yet for cpu utilization or where are we um and that's so that it's queries like",
    "start": "1831760",
    "end": "1837919"
  },
  {
    "text": "this that really kind of fall uh under that uh type of use case um and then",
    "start": "1837919",
    "end": "1842960"
  },
  {
    "text": "and so like running queries like this um you know these are usually pretty",
    "start": "1842960",
    "end": "1848000"
  },
  {
    "text": "quick like these types of queries you know we're getting just like we just pulled the last two hours of data in here and you know we have the",
    "start": "1848000",
    "end": "1853679"
  },
  {
    "text": "cpu utilization coming back on the percentiles and stuff um and again this is generated data so",
    "start": "1853679",
    "end": "1858880"
  },
  {
    "text": "it's it's a small data set um but and then what's the other thing in here",
    "start": "1858880",
    "end": "1864000"
  },
  {
    "text": "just to show the breadth of the sql query language there's actually a couple pages um which one is it",
    "start": "1864000",
    "end": "1871279"
  },
  {
    "text": "i think this one here um so like we have just to show you kind of like you know it is very close to full lancy sequel",
    "start": "1871279",
    "end": "1878640"
  },
  {
    "text": "support um and and so you can see like you know that again that's like that classic",
    "start": "1878640",
    "end": "1884240"
  },
  {
    "text": "query or you're just kind of talking about a variation of it again like you know hey do something over hours um and then in this case you",
    "start": "1884240",
    "end": "1890720"
  },
  {
    "text": "know we've done like this binning by 30 seconds and and then we're going to create this is this is some of the unique stuff in time",
    "start": "1890720",
    "end": "1897120"
  },
  {
    "text": "stream are these functions these create time series and interpolation and stuff like that and we're going to start doing uh",
    "start": "1897120",
    "end": "1903039"
  },
  {
    "text": "filling a gap filling as well so you see like oh this is 15 seconds and you know we're gonna you",
    "start": "1903039",
    "end": "1908159"
  },
  {
    "text": "know this this we're going to fill in like an interpreted or interpolated value in there in this case we're not doing anything",
    "start": "1908159",
    "end": "1914000"
  },
  {
    "text": "interesting just saying hey 10 we have other functions and stuff like last carry forward so if you observe some",
    "start": "1914000",
    "end": "1919039"
  },
  {
    "text": "data at a point here there's a gap take that one and plop it into that uh missing data point and a lot of these",
    "start": "1919039",
    "end": "1925600"
  },
  {
    "text": "things usually come up not as much in devops data but in iot data especially if you're like you know cellular connectivity on a smart meter",
    "start": "1925600",
    "end": "1932320"
  },
  {
    "text": "or something just happens to not come up and you miss a data point or something um you're showing us are specific to",
    "start": "1932320",
    "end": "1939440"
  },
  {
    "text": "time stream the sorry which the these queries yeah like the the um the interplay field to carry forward",
    "start": "1939440",
    "end": "1946720"
  },
  {
    "text": "yeah and you know and they're they're ones that customers ask for for like these sorts of use cases you",
    "start": "1946720",
    "end": "1953200"
  },
  {
    "text": "know and so something like grafana or something you'd want that because if you've uh you know you can some visualization tools",
    "start": "1953200",
    "end": "1959039"
  },
  {
    "text": "will handle it but imagine you have like a line graph and then you miss a data point you either just go to the next spot or you'll see like",
    "start": "1959039",
    "end": "1966320"
  },
  {
    "text": "in some visualization tool it goes through it to zero and then it goes right back up and you're like what happened there um and so there and then so that's where",
    "start": "1966320",
    "end": "1972399"
  },
  {
    "text": "the gap filling kind of comes in is really nice to fill in a value that makes sense",
    "start": "1972399",
    "end": "1978320"
  },
  {
    "text": "i was also going to say in machine learning scenarios this missing data problem",
    "start": "1978320",
    "end": "1983360"
  },
  {
    "text": "is difficult to solve and has a lot of opinion it takes but basically depending what algorithms",
    "start": "1983360",
    "end": "1988399"
  },
  {
    "text": "you're trying to use they may behave or break in wildly different ways based on uh you know whether you have",
    "start": "1988399",
    "end": "1994399"
  },
  {
    "text": "missing data or you know what have you so this is uh this is really cool to be able to fix this at the data source for a lot of the",
    "start": "1994399",
    "end": "1999519"
  },
  {
    "text": "downstream use cases whether it's just visualization or um you know machine learning to try to",
    "start": "1999519",
    "end": "2005519"
  },
  {
    "text": "do time series forecasting yeah absolutely so we've got a few questions in chat while we're",
    "start": "2005519",
    "end": "2011760"
  },
  {
    "text": "while we're here in the console um first of which is uh are there any data patterns that cause",
    "start": "2011760",
    "end": "2017760"
  },
  {
    "text": "hot spots or does time stream manage that automatically under the hood like i'd imagine like hot",
    "start": "2017760",
    "end": "2023279"
  },
  {
    "text": "partitions let's say in you know other types of databases yeah i mean we we",
    "start": "2023279",
    "end": "2031039"
  },
  {
    "text": "do our best to prevent that again there's not like we're still exploring and learning those things but for the most part time stream",
    "start": "2031039",
    "end": "2037760"
  },
  {
    "text": "it does behind the scenes its own uh i guess you could say sharding or splitting of data however you want to do",
    "start": "2037760",
    "end": "2044559"
  },
  {
    "text": "it and we manage all of that and that's part of like the the part of being a fully managed",
    "start": "2044559",
    "end": "2049679"
  },
  {
    "text": "service especially when there's no indexes or anything like that um trying to imagine",
    "start": "2049679",
    "end": "2056320"
  },
  {
    "text": "what you could do to do that it's not entirely",
    "start": "2056320",
    "end": "2061679"
  },
  {
    "text": "easy to do uh yeah we we def we have a lot of splitting we split you know by the time as long as",
    "start": "2061679",
    "end": "2066878"
  },
  {
    "text": "data is moving forward through time um if that's likely you know a very natural way for us to",
    "start": "2066879",
    "end": "2072878"
  },
  {
    "text": "split things right um i i think i i've seen like someone i think they've",
    "start": "2072879",
    "end": "2078000"
  },
  {
    "text": "misused the system and they added the exact same timestamp for everything or something like that i think we might have created something a little off",
    "start": "2078000",
    "end": "2084079"
  },
  {
    "text": "there but that was kind of a bit of a mistake i think where the api was sending the same value uh for everything so yeah and i'd",
    "start": "2084079",
    "end": "2092000"
  },
  {
    "text": "buy yeah i'd imagine there's a world in which like i know uh rick houlihan over on dynamodb",
    "start": "2092000",
    "end": "2097839"
  },
  {
    "text": "uh side has this uh infamous talk about single table design and in dynamo if",
    "start": "2097839",
    "end": "2103359"
  },
  {
    "text": "you're using it there is an optimal single table design schema with with secondary indexes and everything to get it right",
    "start": "2103359",
    "end": "2109119"
  },
  {
    "text": "in one table all of the time i'd imagine that there could be scenarios in which maybe the recommendation is",
    "start": "2109119",
    "end": "2114960"
  },
  {
    "text": "maybe your access patterns or your your your uh yeah i mean access patterns in the data",
    "start": "2114960",
    "end": "2120320"
  },
  {
    "text": "model may necessitate having a second table to get the most optimal performance i mean i i don't know am i am i off there",
    "start": "2120320",
    "end": "2127200"
  },
  {
    "text": "no you're not and we we support a large number of tables for that reason um i think uh 50 000 is what we went with",
    "start": "2127200",
    "end": "2134320"
  },
  {
    "text": "for the maximum number of tables so you can create a very large number ideally the data that's related where",
    "start": "2134320",
    "end": "2140720"
  },
  {
    "text": "you might query the same data in the same query somehow whether you're doing like a maybe you're doing like a self join to",
    "start": "2140720",
    "end": "2147280"
  },
  {
    "text": "it through a common table expression for example if that data is related our best",
    "start": "2147280",
    "end": "2152320"
  },
  {
    "text": "practices are that the data should be in the same table in other words if you were ever going to want to have the same query access all",
    "start": "2152320",
    "end": "2158320"
  },
  {
    "text": "of this in the same thing if it's completely unrelated data you need that logical separation",
    "start": "2158320",
    "end": "2163760"
  },
  {
    "text": "that's where creating additional tables comes in so in this case if we actually did have for some reason in the same",
    "start": "2163760",
    "end": "2168800"
  },
  {
    "text": "database a devops data and iot clearly you're not mixing those things together because they're totally",
    "start": "2168800",
    "end": "2174880"
  },
  {
    "text": "separate things um another one that comes in is if it's like multi-tenant",
    "start": "2174880",
    "end": "2180560"
  },
  {
    "text": "data and you don't need to like you know you want to have that like good separation of data between your tenants",
    "start": "2180560",
    "end": "2186079"
  },
  {
    "text": "that would be another reason uh for example like if you were doing hosting data on behalf of your clients for",
    "start": "2186079",
    "end": "2191680"
  },
  {
    "text": "you know example um that'd be good there could be some good reasons to create separate tables for a tenant yeah",
    "start": "2191680",
    "end": "2198560"
  },
  {
    "text": "that makes a lot of sense uh watching twitch chat here we've got some questions uh this one is from this is live bytes they were uh they're",
    "start": "2198560",
    "end": "2205839"
  },
  {
    "text": "quite adventurous they've actually gotten up and started running some tests on time stream already uh with grafana",
    "start": "2205839",
    "end": "2211280"
  },
  {
    "text": "they're they're really happy but they're wondering what was the motivation behind the i think it's 10 24 measures per table",
    "start": "2211280",
    "end": "2217599"
  },
  {
    "text": "and i'm not familiar with what the measure uh construct is in time stream so maybe start with that",
    "start": "2217599",
    "end": "2223440"
  },
  {
    "text": "yeah so we currently right now we support thousand twenty four uh unique measures",
    "start": "2223440",
    "end": "2229359"
  },
  {
    "text": "uh measurement names in a table so you can you could you have for a single measurement um you could have more than",
    "start": "2229359",
    "end": "2234720"
  },
  {
    "text": "that um that was something that we figured was is like a good starting point uh for a limit i",
    "start": "2234720",
    "end": "2242000"
  },
  {
    "text": "mean there it it changes certain things and certain assumptions are made under the hood uh based on some",
    "start": "2242000",
    "end": "2247359"
  },
  {
    "text": "of these assumptions um if they need more than i definitely had a couple of customers say that you",
    "start": "2247359",
    "end": "2252480"
  },
  {
    "text": "know again it's something we would love to you know understand the use case and you know it's something that you",
    "start": "2252480",
    "end": "2257680"
  },
  {
    "text": "know we're again that's why we're always taking the feedback in from customers and adjusting and uh making changes and stuff so if there",
    "start": "2257680",
    "end": "2263440"
  },
  {
    "text": "is a use case that really warrants that you know we want to hear and understand that and so my advice would be if they have a",
    "start": "2263440",
    "end": "2270160"
  },
  {
    "text": "solution architect or account team reach out to them get in touch with us and",
    "start": "2270160",
    "end": "2275599"
  },
  {
    "text": "you know we'll happy to dive into their use case and if they don't have a solution",
    "start": "2275599",
    "end": "2281520"
  },
  {
    "text": "architect or account team then i'd probably say aws forms is probably the next best place to go after that and then",
    "start": "2281520",
    "end": "2286720"
  },
  {
    "text": "you know we can engage on on awf's forums and figure something out awesome",
    "start": "2286720",
    "end": "2293520"
  },
  {
    "text": "so we've talked about uh hotspots with respect to partitions uh",
    "start": "2293520",
    "end": "2299520"
  },
  {
    "text": "we've talked about schema a little bit um i wonder if we could just quickly revisit that that uh uh what are we doing on the",
    "start": "2299520",
    "end": "2306640"
  },
  {
    "text": "query side um that i can so we know that uh that's the data structured data uh or or",
    "start": "2306640",
    "end": "2313359"
  },
  {
    "text": "fields like xml or json uh are not gonna be good access patterns",
    "start": "2313359",
    "end": "2319040"
  },
  {
    "text": "um what other things should we watch out for um when we're",
    "start": "2319040",
    "end": "2325280"
  },
  {
    "text": "executing queries are there kinds of queries that are unintuitively slow that you would say hey maybe this means that we need to",
    "start": "2325280",
    "end": "2331280"
  },
  {
    "text": "take a look at the schema again yeah um i mean one that kind of pops into my head",
    "start": "2331280",
    "end": "2336800"
  },
  {
    "text": "is is um data that a use case that kind of fall more into the elastic search bucket as",
    "start": "2336800",
    "end": "2342320"
  },
  {
    "text": "well like where you know yes you can do in searching through strings and things",
    "start": "2342320",
    "end": "2348160"
  },
  {
    "text": "like that um in time stream but if that was like primarily you have like a",
    "start": "2348160",
    "end": "2353359"
  },
  {
    "text": "really heavy you know regexes or whatever it is that you're doing and you really need to search through",
    "start": "2353359",
    "end": "2359040"
  },
  {
    "text": "strings it'd probably be you know what elastic searches you know you know it can do different things like that so it started like kind of looking",
    "start": "2359040",
    "end": "2364960"
  },
  {
    "text": "at use cases like that other date purpose-built databases are really kind of geared for",
    "start": "2364960",
    "end": "2370079"
  },
  {
    "text": "um that would be one i can think of um but yeah that's that's the big one",
    "start": "2370079",
    "end": "2375359"
  },
  {
    "text": "another one would be we covered the data points where you're not actually aggregating data and you're just pulling out small bits and that's",
    "start": "2375359",
    "end": "2381280"
  },
  {
    "text": "all you like or maybe you're just pulling out single key values um i mean those are the two that i've",
    "start": "2381280",
    "end": "2387119"
  },
  {
    "text": "kind of seen in there that that come to mind anyways or you're pulling something out and it's",
    "start": "2387119",
    "end": "2392480"
  },
  {
    "text": "just a json blob i'm trying to think if there's anything else where i've seen incorrect",
    "start": "2392480",
    "end": "2399359"
  },
  {
    "text": "those are the major ones yeah i think um you know i i think it's",
    "start": "2399359",
    "end": "2405680"
  },
  {
    "text": "rare that folks will probably end up in time stream and question whether their data is time series and i feel like",
    "start": "2405680",
    "end": "2411680"
  },
  {
    "text": "my impression is they typically will start in another database that may be more general purpose like a relational database like aurora",
    "start": "2411680",
    "end": "2417599"
  },
  {
    "text": "or uh you know maybe they're in dynamo and they start to realize like hey wait i might have time series date on my end or maybe they",
    "start": "2417599",
    "end": "2423280"
  },
  {
    "text": "they've fully accepted they understand it and they've been waiting anxiously for time stream um but i i definitely sense that folks",
    "start": "2423280",
    "end": "2429760"
  },
  {
    "text": "will be uh coming over to this now a question i just thought of uh with this revelation i just had",
    "start": "2429760",
    "end": "2437280"
  },
  {
    "text": "is uh the migration strategy right so uh amazon has a service called dms setting this database migration service",
    "start": "2437280",
    "end": "2443680"
  },
  {
    "text": "um i don't know what compatibility looks right now at day one with time streams launch but um is are there plans for uh you know",
    "start": "2443680",
    "end": "2451040"
  },
  {
    "text": "the time stream folks to work with the dms folks to help ease that migration process i mean we've had some",
    "start": "2451040",
    "end": "2458240"
  },
  {
    "text": "conversations um but this is something that you know would be you know we're definitely looking for",
    "start": "2458240",
    "end": "2464160"
  },
  {
    "text": "the feedback on what we would be migrating from uh to a time stream um i can think of",
    "start": "2464160",
    "end": "2470960"
  },
  {
    "text": "like the thing with some of the relational databases is sometimes it's not just like a clean",
    "start": "2470960",
    "end": "2476400"
  },
  {
    "text": "uh it may not be like a lift and shift of those it might be like a bit of changing especially the way that we",
    "start": "2476400",
    "end": "2481440"
  },
  {
    "text": "store data as being like one measurement per record and that sort of thing or that's the way it's logically represented",
    "start": "2481440",
    "end": "2487359"
  },
  {
    "text": "um so these sorts of things would be usually it's a little bit more of a",
    "start": "2487359",
    "end": "2492640"
  },
  {
    "text": "it's not entirely like just a i don't know push a button and have it i guess is what i'm thinking yeah but there are some cases where it",
    "start": "2492640",
    "end": "2499040"
  },
  {
    "text": "really is close to that especially some of the some other solutions and stuff like that there's some",
    "start": "2499040",
    "end": "2504160"
  },
  {
    "text": "really easy just seamless like it is almost a lift and shift in a time stream so maybe on some of those cases that'd",
    "start": "2504160",
    "end": "2510240"
  },
  {
    "text": "be something where we'd be looking for feedback on or maybe it's even just writing a utility and we'll put it up on github or",
    "start": "2510240",
    "end": "2517040"
  },
  {
    "text": "something like that for some of these as well it's fairly as straightforward as i think it is but",
    "start": "2517040",
    "end": "2522079"
  },
  {
    "text": "yeah awesome uh one final request before i",
    "start": "2522079",
    "end": "2527839"
  },
  {
    "text": "let you go tony i know you've been on the line for quite a while now uh someone in chat uh in twitch dy gd is",
    "start": "2527839",
    "end": "2534400"
  },
  {
    "text": "wondering uh you know some of the most frequent time series data that folks in aws land use is uh their cloud watch metrics",
    "start": "2534400",
    "end": "2541520"
  },
  {
    "text": "and and they they view that in cloud watch dashboards right folks are wondering is there a plan or or interest in being able to",
    "start": "2541520",
    "end": "2549359"
  },
  {
    "text": "natively visualize uh your your time stream data maybe in a cloud watch dashboard cloud watch dashboard oh interesting um",
    "start": "2549359",
    "end": "2559359"
  },
  {
    "text": "that would probably be a conversation i feel like with the cloudwatch team too um that would be interesting though i",
    "start": "2559440",
    "end": "2564720"
  },
  {
    "text": "could see some use cases especially in our devops side of things to be able to do something like that",
    "start": "2564720",
    "end": "2570160"
  },
  {
    "text": "um definitely something that you know i'm sure we could circle and i want the cloudwatch team to see what's possible",
    "start": "2570160",
    "end": "2576160"
  },
  {
    "text": "there um yeah that'd be kind of cool actually but um yeah it's not something we've",
    "start": "2576160",
    "end": "2581359"
  },
  {
    "text": "really looked at or anything like that well yeah we'll uh we'll save that clip and then we'll uh bring it back up if",
    "start": "2581359",
    "end": "2586400"
  },
  {
    "text": "that feature some gets launched at some point so exciting stuff well uh cool that's all the questions that i",
    "start": "2586400",
    "end": "2593440"
  },
  {
    "text": "can see in twitch chat tony this was uh you know super exciting i'm glad to",
    "start": "2593440",
    "end": "2599359"
  },
  {
    "text": "get to see this like my gut reaction here with time stream is just like it solves a very pointed problem for",
    "start": "2599359",
    "end": "2605520"
  },
  {
    "text": "time series data with a ton of flexibility on the schema side that um you know like people feel with",
    "start": "2605520",
    "end": "2612480"
  },
  {
    "text": "dynamodb um and then now you you get these like",
    "start": "2612480",
    "end": "2617839"
  },
  {
    "text": "native sql querying like it really just feels like there's just the picking and choosing of the best parts of a lot of other database uh",
    "start": "2617839",
    "end": "2624160"
  },
  {
    "text": "technologies and they just sort of like came together for the time series use case and have manifested in time stream yeah",
    "start": "2624160",
    "end": "2631760"
  },
  {
    "text": "absolutely um yeah it's been a really fun ride working with this team",
    "start": "2631760",
    "end": "2637200"
  },
  {
    "text": "and getting this out so um we got there and it's uh you know",
    "start": "2637200",
    "end": "2642240"
  },
  {
    "text": "like i said the team worked super hard on it and uh great talented group of uh individuals that you know",
    "start": "2642240",
    "end": "2648319"
  },
  {
    "text": "came together yeah i i can't wait to go hands-on with this this is um",
    "start": "2648319",
    "end": "2654240"
  },
  {
    "text": "one of the the few services in the demo that make me go i really need to sit down with this and spend some time",
    "start": "2654240",
    "end": "2662000"
  },
  {
    "text": "for having me on the show yeah anytime well again this was the uh demo of the recently g8 amazon timestream and uh again the",
    "start": "2662000",
    "end": "2670000"
  },
  {
    "text": "the guest of honor here for the session being tony gibbs principal solutions architect over on the time stream team tony thank you again uh we will be",
    "start": "2670000",
    "end": "2678319"
  },
  {
    "text": "right back we're gonna go to a holding screen and then rob and i will close out today's episode so hang tight we'll be right back",
    "start": "2678319",
    "end": "2690000"
  }
]