[
  {
    "start": "0",
    "end": "56000"
  },
  {
    "text": "[Music]",
    "start": "400",
    "end": "6480"
  },
  {
    "text": "[Music]",
    "start": "8620",
    "end": "11969"
  },
  {
    "text": "hello i'm mary a cloud support engineer",
    "start": "12160",
    "end": "15280"
  },
  {
    "text": "here at the aws office in sydney today",
    "start": "15280",
    "end": "18960"
  },
  {
    "text": "i'm going to show you how to",
    "start": "18960",
    "end": "20480"
  },
  {
    "text": "troubleshoot http 403 forbidden errors",
    "start": "20480",
    "end": "24640"
  },
  {
    "text": "when using an aws lambda authorizer with",
    "start": "24640",
    "end": "28160"
  },
  {
    "text": "an amazon api gateway rest api let's get",
    "start": "28160",
    "end": "31840"
  },
  {
    "text": "started an api gateway rest api with a",
    "start": "31840",
    "end": "35680"
  },
  {
    "text": "lambda authorizer returns a 403 error",
    "start": "35680",
    "end": "39360"
  },
  {
    "text": "usually for one of the following reasons",
    "start": "39360",
    "end": "42960"
  },
  {
    "text": "the lambda authorizer function returns",
    "start": "42960",
    "end": "45440"
  },
  {
    "text": "our policy document that explicitly",
    "start": "45440",
    "end": "47840"
  },
  {
    "text": "denies access to the caller the api has",
    "start": "47840",
    "end": "51039"
  },
  {
    "text": "an attached resource policy that",
    "start": "51039",
    "end": "52960"
  },
  {
    "text": "explicitly denies access to the caller",
    "start": "52960",
    "end": "56559"
  },
  {
    "text": "after logging into the aws management",
    "start": "56559",
    "end": "59520"
  },
  {
    "text": "console navigate to the lambda console",
    "start": "59520",
    "end": "63039"
  },
  {
    "text": "then choose create a function to create",
    "start": "63039",
    "end": "65680"
  },
  {
    "text": "a sample lambda function to use as the",
    "start": "65680",
    "end": "68400"
  },
  {
    "text": "backend to our api later",
    "start": "68400",
    "end": "71520"
  },
  {
    "text": "choose a name for your lambda function",
    "start": "71520",
    "end": "74240"
  },
  {
    "text": "leave all other default as is and then",
    "start": "74240",
    "end": "77439"
  },
  {
    "text": "choose create function",
    "start": "77439",
    "end": "79920"
  },
  {
    "text": "choose test and create a new test event",
    "start": "79920",
    "end": "83680"
  },
  {
    "text": "in the event name enter a name and then",
    "start": "83680",
    "end": "86479"
  },
  {
    "text": "choose create",
    "start": "86479",
    "end": "88479"
  },
  {
    "text": "choose the test button to test your",
    "start": "88479",
    "end": "90640"
  },
  {
    "text": "function",
    "start": "90640",
    "end": "92079"
  },
  {
    "text": "now let's create another lambda function",
    "start": "92079",
    "end": "94799"
  },
  {
    "text": "to use as our api authorizer later",
    "start": "94799",
    "end": "98560"
  },
  {
    "text": "choose functions and then choose create",
    "start": "98560",
    "end": "101280"
  },
  {
    "text": "function choose a name for your lambda",
    "start": "101280",
    "end": "104079"
  },
  {
    "text": "function",
    "start": "104079",
    "end": "106320"
  },
  {
    "text": "select the python 3.8 runtime and then",
    "start": "106320",
    "end": "110000"
  },
  {
    "text": "choose create function",
    "start": "110000",
    "end": "112399"
  },
  {
    "text": "i'll update the function code to return",
    "start": "112399",
    "end": "115119"
  },
  {
    "text": "a simple policy document",
    "start": "115119",
    "end": "117840"
  },
  {
    "text": "choose the deploy button to deploy the",
    "start": "117840",
    "end": "120240"
  },
  {
    "text": "changes",
    "start": "120240",
    "end": "121840"
  },
  {
    "text": "note that for this demonstration the",
    "start": "121840",
    "end": "124320"
  },
  {
    "text": "code is very simple and not doing",
    "start": "124320",
    "end": "126640"
  },
  {
    "text": "additional checks",
    "start": "126640",
    "end": "128399"
  },
  {
    "text": "but a more practical code will have",
    "start": "128399",
    "end": "130879"
  },
  {
    "text": "robust checks for credentials",
    "start": "130879",
    "end": "134080"
  },
  {
    "text": "also when troubleshooting lambda",
    "start": "134080",
    "end": "136160"
  },
  {
    "text": "authorizer",
    "start": "136160",
    "end": "137440"
  },
  {
    "text": "pay attention to the resource field this",
    "start": "137440",
    "end": "140560"
  },
  {
    "text": "field should match the resource that the",
    "start": "140560",
    "end": "142959"
  },
  {
    "text": "api expects",
    "start": "142959",
    "end": "145280"
  },
  {
    "start": "145000",
    "end": "254000"
  },
  {
    "text": "now let's create our api",
    "start": "145280",
    "end": "148000"
  },
  {
    "text": "navigate to the api gateway console",
    "start": "148000",
    "end": "152000"
  },
  {
    "text": "choose create api",
    "start": "152000",
    "end": "154319"
  },
  {
    "text": "scroll down find rest api and then",
    "start": "154319",
    "end": "157760"
  },
  {
    "text": "choose build",
    "start": "157760",
    "end": "160560"
  },
  {
    "text": "enter a name for your api and then",
    "start": "161519",
    "end": "164160"
  },
  {
    "text": "choose create api",
    "start": "164160",
    "end": "167680"
  },
  {
    "text": "choose authorizers and then choose",
    "start": "169280",
    "end": "171760"
  },
  {
    "text": "create new authorizer",
    "start": "171760",
    "end": "174319"
  },
  {
    "text": "enter a name for the authorizer",
    "start": "174319",
    "end": "177760"
  },
  {
    "text": "go back to your lambda functions",
    "start": "177760",
    "end": "181760"
  },
  {
    "text": "and find the lambda irn of the lambda",
    "start": "181760",
    "end": "184560"
  },
  {
    "text": "authorizer",
    "start": "184560",
    "end": "187280"
  },
  {
    "text": "go back to api gateway console and paste",
    "start": "188319",
    "end": "191280"
  },
  {
    "text": "the lambda urn in the lambda function",
    "start": "191280",
    "end": "193920"
  },
  {
    "text": "field",
    "start": "193920",
    "end": "196400"
  },
  {
    "text": "leave the lambda invoke role as blank",
    "start": "196640",
    "end": "200080"
  },
  {
    "text": "choose token as the lambda event payload",
    "start": "200080",
    "end": "204000"
  },
  {
    "text": "enter a token source",
    "start": "204000",
    "end": "206640"
  },
  {
    "text": "enter the token validation",
    "start": "206640",
    "end": "210080"
  },
  {
    "text": "untick authorization caching and then",
    "start": "210080",
    "end": "212799"
  },
  {
    "text": "choose create",
    "start": "212799",
    "end": "215680"
  },
  {
    "text": "choose grant and create to add",
    "start": "215920",
    "end": "218000"
  },
  {
    "text": "permission to lambda function to be",
    "start": "218000",
    "end": "220319"
  },
  {
    "text": "invoked by api gateway",
    "start": "220319",
    "end": "222799"
  },
  {
    "text": "note that for this demonstration we are",
    "start": "222799",
    "end": "225360"
  },
  {
    "text": "using a hard-coded token source and",
    "start": "225360",
    "end": "227760"
  },
  {
    "text": "token validation for simplicity",
    "start": "227760",
    "end": "231200"
  },
  {
    "text": "in real word scenarios you may use",
    "start": "231200",
    "end": "234080"
  },
  {
    "text": "regular expression instead also if cache",
    "start": "234080",
    "end": "237760"
  },
  {
    "text": "is enabled on the api gateway authorizer",
    "start": "237760",
    "end": "241280"
  },
  {
    "text": "configuration",
    "start": "241280",
    "end": "242879"
  },
  {
    "text": "then the policy returned by the lambda",
    "start": "242879",
    "end": "245280"
  },
  {
    "text": "authorizer code will cover all api",
    "start": "245280",
    "end": "248319"
  },
  {
    "text": "resources",
    "start": "248319",
    "end": "249840"
  },
  {
    "text": "if the authorizer is to be used for",
    "start": "249840",
    "end": "252319"
  },
  {
    "text": "multiple resources choose resources and",
    "start": "252319",
    "end": "256160"
  },
  {
    "start": "254000",
    "end": "335000"
  },
  {
    "text": "then choose actions",
    "start": "256160",
    "end": "258479"
  },
  {
    "text": "choose create method",
    "start": "258479",
    "end": "261359"
  },
  {
    "text": "select get http method from the",
    "start": "261359",
    "end": "264160"
  },
  {
    "text": "drop-down list and then choose the tick",
    "start": "264160",
    "end": "266560"
  },
  {
    "text": "beside it to save your choice",
    "start": "266560",
    "end": "269919"
  },
  {
    "text": "go to the lambda tab and copy the lambda",
    "start": "269919",
    "end": "272479"
  },
  {
    "text": "iron of lambda for api",
    "start": "272479",
    "end": "276639"
  },
  {
    "text": "go back to the api gateway console and",
    "start": "276639",
    "end": "279440"
  },
  {
    "text": "paste the lambda irn in the lambda",
    "start": "279440",
    "end": "281840"
  },
  {
    "text": "function field",
    "start": "281840",
    "end": "284720"
  },
  {
    "text": "choose save and then choose ok to give",
    "start": "285040",
    "end": "288080"
  },
  {
    "text": "api gateway permission to invoke the",
    "start": "288080",
    "end": "290639"
  },
  {
    "text": "lambda function",
    "start": "290639",
    "end": "292720"
  },
  {
    "text": "choose method request",
    "start": "292720",
    "end": "294800"
  },
  {
    "text": "refresh the page",
    "start": "294800",
    "end": "297840"
  },
  {
    "text": "choose the little pen besides",
    "start": "297919",
    "end": "299680"
  },
  {
    "text": "authorization and then select token",
    "start": "299680",
    "end": "302160"
  },
  {
    "text": "authorizer from the drop-down list",
    "start": "302160",
    "end": "305840"
  },
  {
    "text": "save by selecting",
    "start": "305840",
    "end": "307759"
  },
  {
    "text": "the tick",
    "start": "307759",
    "end": "308840"
  },
  {
    "text": "button choose resource policy to add a",
    "start": "308840",
    "end": "312160"
  },
  {
    "text": "resource policy to the api",
    "start": "312160",
    "end": "315120"
  },
  {
    "text": "add the following resource policy to the",
    "start": "315120",
    "end": "317520"
  },
  {
    "text": "api and then choose save",
    "start": "317520",
    "end": "320720"
  },
  {
    "text": "this resource policy allows the invoke",
    "start": "320720",
    "end": "323600"
  },
  {
    "text": "action by anyone on every api i'm using",
    "start": "323600",
    "end": "327120"
  },
  {
    "text": "the policy for the sake of this demo it",
    "start": "327120",
    "end": "330000"
  },
  {
    "text": "is a broad policy and it is not intended",
    "start": "330000",
    "end": "332880"
  },
  {
    "text": "to be used on production environments",
    "start": "332880",
    "end": "335680"
  },
  {
    "start": "335000",
    "end": "417000"
  },
  {
    "text": "deploy the api by choosing actions and",
    "start": "335680",
    "end": "338720"
  },
  {
    "text": "then choosing deploy api",
    "start": "338720",
    "end": "341360"
  },
  {
    "text": "for this demonstration i'll create a new",
    "start": "341360",
    "end": "344000"
  },
  {
    "text": "stage",
    "start": "344000",
    "end": "346479"
  },
  {
    "text": "choose a stages and choose test to see",
    "start": "346479",
    "end": "349199"
  },
  {
    "text": "the invoke url for the api",
    "start": "349199",
    "end": "352400"
  },
  {
    "text": "now let's test the api open postman and",
    "start": "352400",
    "end": "356080"
  },
  {
    "text": "paste the invoke url in a new tab",
    "start": "356080",
    "end": "359440"
  },
  {
    "text": "make sure get is selected from the",
    "start": "359440",
    "end": "362000"
  },
  {
    "text": "drop-down list",
    "start": "362000",
    "end": "364720"
  },
  {
    "text": "add the correct token to the headers tab",
    "start": "364720",
    "end": "367360"
  },
  {
    "text": "in postman and test",
    "start": "367360",
    "end": "370160"
  },
  {
    "text": "you should see 200 ok",
    "start": "370160",
    "end": "372880"
  },
  {
    "text": "note if you leave the headers tab blank",
    "start": "372880",
    "end": "375759"
  },
  {
    "text": "you will get a 401 unauthorized error",
    "start": "375759",
    "end": "380479"
  },
  {
    "text": "now let's test another scenario navigate",
    "start": "380479",
    "end": "383759"
  },
  {
    "text": "to the api gateway console and choose",
    "start": "383759",
    "end": "386479"
  },
  {
    "text": "resource policy",
    "start": "386479",
    "end": "389039"
  },
  {
    "text": "change the effect from allow to deny and",
    "start": "389039",
    "end": "392000"
  },
  {
    "text": "then choose save",
    "start": "392000",
    "end": "394639"
  },
  {
    "text": "after any changes to authorizer or",
    "start": "394639",
    "end": "397360"
  },
  {
    "text": "resource policy the api must be",
    "start": "397360",
    "end": "399840"
  },
  {
    "text": "redeployed",
    "start": "399840",
    "end": "401840"
  },
  {
    "text": "now test the api again in postman and",
    "start": "401840",
    "end": "405120"
  },
  {
    "text": "let's see what happens",
    "start": "405120",
    "end": "406960"
  },
  {
    "text": "you'll get an error like this",
    "start": "406960",
    "end": "409759"
  },
  {
    "text": "user anonymous is not authorized to",
    "start": "409759",
    "end": "412400"
  },
  {
    "text": "perform execute api invoked on resource",
    "start": "412400",
    "end": "417280"
  },
  {
    "text": "go back to the api gateway resource",
    "start": "417280",
    "end": "419919"
  },
  {
    "text": "policy and revert the effect from deny",
    "start": "419919",
    "end": "422800"
  },
  {
    "text": "to allow and test again on postman the",
    "start": "422800",
    "end": "425520"
  },
  {
    "text": "error should be fixed",
    "start": "425520",
    "end": "428879"
  },
  {
    "text": "test again on postman the error should",
    "start": "429599",
    "end": "432160"
  },
  {
    "text": "be fixed",
    "start": "432160",
    "end": "434479"
  },
  {
    "text": "the last scenario to explore is to",
    "start": "434479",
    "end": "437039"
  },
  {
    "text": "change the lambda authorizer aws",
    "start": "437039",
    "end": "439840"
  },
  {
    "text": "identity and access management policy",
    "start": "439840",
    "end": "443280"
  },
  {
    "text": "go to the lambda console and find your",
    "start": "443280",
    "end": "445840"
  },
  {
    "text": "lambda authorizer in this case our",
    "start": "445840",
    "end": "449039"
  },
  {
    "text": "lambda authorizer is named authorizer",
    "start": "449039",
    "end": "451840"
  },
  {
    "text": "for api",
    "start": "451840",
    "end": "453440"
  },
  {
    "text": "change the permission from allow to deny",
    "start": "453440",
    "end": "456160"
  },
  {
    "text": "and deploy the code",
    "start": "456160",
    "end": "459199"
  },
  {
    "text": "test the api in postman again this time",
    "start": "459199",
    "end": "462479"
  },
  {
    "text": "you'll get an error similar to",
    "start": "462479",
    "end": "464960"
  },
  {
    "text": "user is not authorized to access this",
    "start": "464960",
    "end": "467520"
  },
  {
    "text": "resource with an explicit deny",
    "start": "467520",
    "end": "471680"
  },
  {
    "text": "to fix the error go back to the lambda",
    "start": "471680",
    "end": "474160"
  },
  {
    "text": "console and change the permission back",
    "start": "474160",
    "end": "476639"
  },
  {
    "text": "to allow and then deploy the lambda",
    "start": "476639",
    "end": "478960"
  },
  {
    "text": "function",
    "start": "478960",
    "end": "481039"
  },
  {
    "text": "in postman hit send again to test the",
    "start": "481039",
    "end": "484400"
  },
  {
    "text": "api the error should go away",
    "start": "484400",
    "end": "487759"
  },
  {
    "start": "487000",
    "end": "529000"
  },
  {
    "text": "to summarize if you get 403 forbidden",
    "start": "487759",
    "end": "491120"
  },
  {
    "text": "errors when using a lambda authorizer",
    "start": "491120",
    "end": "493599"
  },
  {
    "text": "with api gateway",
    "start": "493599",
    "end": "495599"
  },
  {
    "text": "then depending on the error message",
    "start": "495599",
    "end": "498080"
  },
  {
    "text": "there are two possibilities for the",
    "start": "498080",
    "end": "500080"
  },
  {
    "text": "cause of the error",
    "start": "500080",
    "end": "501680"
  },
  {
    "text": "the lambda authorizer function returns",
    "start": "501680",
    "end": "504160"
  },
  {
    "text": "an iam policy document that explicitly",
    "start": "504160",
    "end": "507199"
  },
  {
    "text": "denies access",
    "start": "507199",
    "end": "509039"
  },
  {
    "text": "or the api resource policy explicitly",
    "start": "509039",
    "end": "512640"
  },
  {
    "text": "denies access to the caller",
    "start": "512640",
    "end": "515839"
  },
  {
    "text": "thanks for watching and happy cloud",
    "start": "515839",
    "end": "518080"
  },
  {
    "text": "computing from all of us here at aws",
    "start": "518080",
    "end": "523159"
  },
  {
    "text": "[Music]",
    "start": "523350",
    "end": "529558"
  }
]