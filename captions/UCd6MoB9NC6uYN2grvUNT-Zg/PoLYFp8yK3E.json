[
  {
    "start": "0",
    "end": "27000"
  },
  {
    "text": "all right i think we're going to go ahead and get started um thanks for coming for to reinvent and",
    "start": "1199",
    "end": "7279"
  },
  {
    "text": "thanks for coming to the talk today uh name of the talk is integrate social login into mobile apps my name is bob",
    "start": "7279",
    "end": "12880"
  },
  {
    "text": "kinney i'm a software development engineer with the aws mobile team our goal for the with the aws mobile",
    "start": "12880",
    "end": "19359"
  },
  {
    "text": "team is to build tools and services to help developers build great mobile apps",
    "start": "19359",
    "end": "26000"
  },
  {
    "start": "27000",
    "end": "49000"
  },
  {
    "text": "so our agenda for today as we'll talk a little bit about the aws mobile team and sort of what we uh the tools and",
    "start": "27840",
    "end": "33680"
  },
  {
    "text": "solutions that we provide then we'll jump to right jump right into why we're here today",
    "start": "33680",
    "end": "39280"
  },
  {
    "text": "which is a solution called web identity federation we'll talk about some other options on top of that for integrating",
    "start": "39280",
    "end": "45600"
  },
  {
    "text": "login into your apps so",
    "start": "45600",
    "end": "51200"
  },
  {
    "text": "for aws mobile what you're seeing on the screen right now is just a small selection of the the tools and service",
    "start": "51200",
    "end": "56399"
  },
  {
    "text": "that we have available for mobile developers so these are some of the things that are going to be in an app that i'll show a",
    "start": "56399",
    "end": "62239"
  },
  {
    "text": "little bit later we're obviously focusing today on social login but we also offer file storage",
    "start": "62239",
    "end": "67520"
  },
  {
    "text": "with amazon simple storage service or s3 we have online data access with amazon",
    "start": "67520",
    "end": "72640"
  },
  {
    "text": "dynamodb and we also have mobile push integrated with amazon simple notification service",
    "start": "72640",
    "end": "79600"
  },
  {
    "start": "80000",
    "end": "108000"
  },
  {
    "text": "so the best place to get started with uh the aws mobile platform is our mobile development center or",
    "start": "80560",
    "end": "86400"
  },
  {
    "text": "which is aws.amazon.com mobile you know from there you'll find links to our aws mobile sdks",
    "start": "86400",
    "end": "93360"
  },
  {
    "text": "the amazon sns mobile push documentation our geo library for amazon dynamodb",
    "start": "93360",
    "end": "100159"
  },
  {
    "text": "our s3 transfer manager and we're constantly adding new features and solutions all the time",
    "start": "100159",
    "end": "107118"
  },
  {
    "start": "108000",
    "end": "192000"
  },
  {
    "text": "so why are we here today if you're already developing apps for mobile apps that integrate with aws",
    "start": "108960",
    "end": "114880"
  },
  {
    "text": "you're familiar that when you want to send requests to aws we have to sign those requests",
    "start": "114880",
    "end": "120320"
  },
  {
    "text": "and you in order to sign those requests we need an access and secret key now you might think that the first thing",
    "start": "120320",
    "end": "126479"
  },
  {
    "text": "you would do is embed those credentials inside of your application so that you can then make requests to aws",
    "start": "126479",
    "end": "132879"
  },
  {
    "text": "that will certainly work but the problem is that there are plenty of tools out there",
    "start": "132879",
    "end": "138560"
  },
  {
    "text": "for a for a user to crack your app take a look at what's inside and",
    "start": "138560",
    "end": "144879"
  },
  {
    "text": "actually extract those credentials out and once those credentials have been exposed a nefarious user can use those",
    "start": "144879",
    "end": "150560"
  },
  {
    "text": "credentials to do anything that those those uh the policy for those credentials allows so you might think",
    "start": "150560",
    "end": "157200"
  },
  {
    "text": "i'll use an imuser and i'll set a policy on it and then i'll restrict that policy to only those resources that are",
    "start": "157200",
    "end": "163040"
  },
  {
    "text": "available for the app and that's certainly a great solution that will solve the problem of",
    "start": "163040",
    "end": "169680"
  },
  {
    "text": "you know exposing too much with the root credentials but then you have a problem where you're no longer able to rotate",
    "start": "169680",
    "end": "174879"
  },
  {
    "text": "those credentials rotating the credentials would require you to actually push out a new version of your app which can lead",
    "start": "174879",
    "end": "181280"
  },
  {
    "text": "to uh some lag time can't guarantee that the users will actually install that new version and there's also a lag time with",
    "start": "181280",
    "end": "187680"
  },
  {
    "text": "certain of the app stores so what do we really want we want to get",
    "start": "187680",
    "end": "194080"
  },
  {
    "start": "192000",
    "end": "481000"
  },
  {
    "text": "credentials on the device we can make those calls to aws services we want to limit the lifetime so that we",
    "start": "194080",
    "end": "199920"
  },
  {
    "text": "can enforce rotation of those credentials we want to limit access of those",
    "start": "199920",
    "end": "205599"
  },
  {
    "text": "credentials to only those resources that the user the end user of the application should have",
    "start": "205599",
    "end": "212080"
  },
  {
    "text": "and we think the solution to this problem is a is a product called web identity federation",
    "start": "212080",
    "end": "218560"
  },
  {
    "text": "so what is web identity federation at its most basic level what web identity federation allows us to do",
    "start": "218560",
    "end": "225040"
  },
  {
    "text": "is take a credentials from a identity provider such as google facebook or",
    "start": "225040",
    "end": "230560"
  },
  {
    "text": "login with amazon and trade those credentials directly for aws temporary credentials",
    "start": "230560",
    "end": "237840"
  },
  {
    "text": "now the best thing about web identity federation is we can do all of this without any back-end infrastructure",
    "start": "237840",
    "end": "245519"
  },
  {
    "text": "so now what i would like to do is show an application",
    "start": "245840",
    "end": "250560"
  },
  {
    "text": "that uses web identity federation",
    "start": "252239",
    "end": "255840"
  },
  {
    "text": "now this application you'll notice is obviously built in ios um but nothing uh all of this same technology is all",
    "start": "267360",
    "end": "274000"
  },
  {
    "text": "available on android um nothing that is in this application cannot be uh also implemented on that",
    "start": "274000",
    "end": "280479"
  },
  {
    "text": "on that platform so when i first bring up the application you can see i'm prompted with a login",
    "start": "280479",
    "end": "286800"
  },
  {
    "text": "button so i'm going to go ahead and click that and that's actually going to bring up a number of providers",
    "start": "286800",
    "end": "292800"
  },
  {
    "text": "i'm going to go ahead and click on facebook and that's going to redirect me to the mobile browser",
    "start": "292800",
    "end": "298400"
  },
  {
    "text": "i've already authenticated in the mobile browser with facebook so now i'm just confirming that i've already authorized",
    "start": "298400",
    "end": "304160"
  },
  {
    "text": "this application to access my facebook information i'll click ok i'm redirected back into",
    "start": "304160",
    "end": "311360"
  },
  {
    "text": "the application and now i have a session not only with facebook but with aws as well",
    "start": "311360",
    "end": "316880"
  },
  {
    "text": "i can click on the show picture show pictures button",
    "start": "316880",
    "end": "321280"
  },
  {
    "text": "let's make this a little smaller so we can get it on the screen",
    "start": "322240",
    "end": "326800"
  },
  {
    "text": "okay so if i'm on the personal tab you see i don't have any pictures",
    "start": "331600",
    "end": "336639"
  },
  {
    "text": "personal pictures there but if i click on the public tab i can see some pictures that have been uploaded by",
    "start": "336639",
    "end": "341919"
  },
  {
    "text": "other users inside of the application i can click on them and view them",
    "start": "341919",
    "end": "348918"
  },
  {
    "text": "i can add a favorite and then if i go over to the favorites tab that will show up there",
    "start": "352160",
    "end": "359440"
  },
  {
    "text": "and then i can also add a picture so i'm going to go ahead and select a picture from my photo roll i'm going to",
    "start": "359759",
    "end": "364960"
  },
  {
    "text": "choose of this one with me with former bruins goalie tim thomas",
    "start": "364960",
    "end": "370840"
  },
  {
    "text": "and i'm going to make this photo private to me i'm going to go ahead and submit it which will upload",
    "start": "382960",
    "end": "389919"
  },
  {
    "text": "and i get notification that the photo has been uploaded now if i go back to the show pictures",
    "start": "390720",
    "end": "396319"
  },
  {
    "text": "screen i now see that this photo is available in my personal pictures and it will download",
    "start": "396319",
    "end": "402960"
  },
  {
    "text": "now if i log out and we click the login button and instead of choosing facebook i try",
    "start": "404800",
    "end": "410400"
  },
  {
    "text": "to choose one of these other ones in an error that the the provider has not been implemented in this application",
    "start": "410400",
    "end": "416080"
  },
  {
    "text": "and the same thing with amazon what we'll do today was it will actually add amazon support to this application",
    "start": "416080",
    "end": "423120"
  },
  {
    "text": "in the session",
    "start": "423120",
    "end": "425759"
  },
  {
    "text": "so what you see here is an architecture diagram of the mobile photoshare application overall so we have",
    "start": "433680",
    "end": "439520"
  },
  {
    "text": "integration with the s3 transfer manager for downloading and uploading photos we're using the geo library for maps which i failed",
    "start": "439520",
    "end": "447360"
  },
  {
    "text": "to show and then also we're using the aws mobile sdks for actually storing those",
    "start": "447360",
    "end": "453039"
  },
  {
    "text": "favorites in a table in dynamodb now obviously today we're going to be",
    "start": "453039",
    "end": "458479"
  },
  {
    "text": "focusing on the login aspect of this if you're interested in learning more about the rest of the",
    "start": "458479",
    "end": "463680"
  },
  {
    "text": "application i would highly recommend that you seek out the slides in the video when they're posted for the mbl 402 talk which was",
    "start": "463680",
    "end": "471120"
  },
  {
    "text": "given by my colleague glenn durkas so he'll go in he goes into depth with all of those other parts of the",
    "start": "471120",
    "end": "477840"
  },
  {
    "text": "application so now i just want to walk through the",
    "start": "477840",
    "end": "483199"
  },
  {
    "start": "481000",
    "end": "565000"
  },
  {
    "text": "actual auth flow for web identity federation session the first thing that happens is our mobile client will",
    "start": "483199",
    "end": "489520"
  },
  {
    "text": "authenticate with our identity provider in our in our original s excuse me our original demo we obviously were using",
    "start": "489520",
    "end": "496240"
  },
  {
    "text": "facebook after we've actually authenticated with facebook we get back what's called an",
    "start": "496240",
    "end": "501440"
  },
  {
    "text": "access token and that is what uniquely identifies our session with the identity provider",
    "start": "501440",
    "end": "508960"
  },
  {
    "text": "we authenticate with the aws secure token service which is a feature of i am",
    "start": "508960",
    "end": "514640"
  },
  {
    "text": "identity and access management and then on the back end sts validates",
    "start": "514640",
    "end": "520880"
  },
  {
    "text": "that that token is uh is valid for the application and if it's valid sts will then return",
    "start": "520880",
    "end": "527760"
  },
  {
    "text": "us temporary aws credentials which we then can use to access our resources such as our s3 bucket",
    "start": "527760",
    "end": "535839"
  },
  {
    "text": "so what do i need to what do we need to get started with web identity federation well on top of the aws mobile sdks which",
    "start": "538000",
    "end": "543839"
  },
  {
    "text": "actually handles the communication with with sts we need an application with our",
    "start": "543839",
    "end": "548959"
  },
  {
    "text": "identity provider we're going to do uh logging with amazon we need an aws im role for without any",
    "start": "548959",
    "end": "555600"
  },
  {
    "text": "federation and then we need an authenticate an sdk with the identity provider in order to glue everything",
    "start": "555600",
    "end": "561279"
  },
  {
    "text": "together so as i mentioned we're going to do log",
    "start": "561279",
    "end": "566560"
  },
  {
    "start": "565000",
    "end": "605000"
  },
  {
    "text": "in with amazon today so if you go to login.amazon.com you'll be able to log",
    "start": "566560",
    "end": "571920"
  },
  {
    "text": "in get started and create an application for allowing your users to log in with their aw uh excuse me their amazon credentials",
    "start": "571920",
    "end": "579519"
  },
  {
    "text": "the benefits here is that obviously amazon has millions of customers and there's lots of information that you can",
    "start": "579519",
    "end": "584959"
  },
  {
    "text": "use to customize them their your application's experience for the information that's in",
    "start": "584959",
    "end": "590880"
  },
  {
    "text": "the account uh login with amazon uses all is based on oauth2 which is an industry standard",
    "start": "590880",
    "end": "596640"
  },
  {
    "text": "for login and there are sdks available for ios android and the web via javascript",
    "start": "596640",
    "end": "605279"
  },
  {
    "start": "605000",
    "end": "739000"
  },
  {
    "text": "so now what i'll do is actually go out and create a application",
    "start": "605279",
    "end": "610320"
  },
  {
    "text": "with login with amazon so i'll switch to my web browser which is already on login.amazon.com",
    "start": "610320",
    "end": "618600"
  },
  {
    "text": "and then i'm going to go to the app console",
    "start": "622880",
    "end": "626480"
  },
  {
    "text": "now i already have an application here but i'm going to go ahead and click on register new application to create a new",
    "start": "629600",
    "end": "634800"
  },
  {
    "text": "one i'm going to call it mobile photo share",
    "start": "634800",
    "end": "642160"
  },
  {
    "text": "and just give it a quick description for the privacy notice i'm going to",
    "start": "644640",
    "end": "649760"
  },
  {
    "text": "leave in a filler which is just the aws homepage now this will actually be displayed to the user when they log in",
    "start": "649760",
    "end": "655680"
  },
  {
    "text": "so you want to make sure that you actually fill it out or um put in your actual privacy policy url because the",
    "start": "655680",
    "end": "663360"
  },
  {
    "text": "users will see that i'll go ahead and click save and skip adding a logo",
    "start": "663360",
    "end": "669680"
  },
  {
    "text": "and now i have an application with login with amazon and one of the important things to note",
    "start": "669680",
    "end": "674720"
  },
  {
    "text": "here is our app id this is what is you going to uniquely",
    "start": "674720",
    "end": "679920"
  },
  {
    "text": "identify this application with login with amazon we'll need this later when we integrate with our with our um excuse",
    "start": "679920",
    "end": "686000"
  },
  {
    "text": "me with the role while i'm here i'm going to go ahead and",
    "start": "686000",
    "end": "692000"
  },
  {
    "text": "create my ios settings for login with amazon",
    "start": "692000",
    "end": "696399"
  },
  {
    "text": "and i'm just going to give that a label and then i need to provide the bundle id which is going to be the bundle of our",
    "start": "698880",
    "end": "704160"
  },
  {
    "text": "application in our case that's com.amazon.aws.mobile",
    "start": "704160",
    "end": "709480"
  },
  {
    "text": "photoshare",
    "start": "711360",
    "end": "714360"
  },
  {
    "text": "now that i've saved my login settings i have an ap i have this get api key value",
    "start": "717040",
    "end": "722399"
  },
  {
    "text": "and when i click that i get the key that i need to use to identify myself with login with amazon so we'll need that",
    "start": "722399",
    "end": "728480"
  },
  {
    "text": "information as well later so that's it i've already cr i've now created my",
    "start": "728480",
    "end": "734079"
  },
  {
    "text": "application with login with amazon",
    "start": "734079",
    "end": "737839"
  },
  {
    "start": "739000",
    "end": "806000"
  },
  {
    "text": "so now that we have our application with login with amazon our next step is to get our aws i am role for web identity",
    "start": "740240",
    "end": "747519"
  },
  {
    "text": "federation if you're not familiar with aws i am roles it's a mechanism for delivering",
    "start": "747519",
    "end": "753680"
  },
  {
    "text": "temporary credentials to any number of different kinds of services",
    "start": "753680",
    "end": "759839"
  },
  {
    "text": "there are two policies that are associated with a role we have our trust policy which is who",
    "start": "760959",
    "end": "766880"
  },
  {
    "text": "can assume that role and then we have our access policy which is exactly what you might expect it would be it defines",
    "start": "766880",
    "end": "773600"
  },
  {
    "text": "what resources the role can access once the role has been assumed",
    "start": "773600",
    "end": "780160"
  },
  {
    "text": "there are three basic types of roles there's aws service roles for such as",
    "start": "780160",
    "end": "785680"
  },
  {
    "text": "for ec2 we have cross account access roles for either",
    "start": "785680",
    "end": "790800"
  },
  {
    "text": "across account across aws account access or for uh enterprise federated logins",
    "start": "790800",
    "end": "798079"
  },
  {
    "text": "finally we have the ones that we are going to use today which is web identity federation rules",
    "start": "798079",
    "end": "804560"
  },
  {
    "start": "806000",
    "end": "838000"
  },
  {
    "text": "now for a role with web identity federation our trust policy is going to basically be two based on two things",
    "start": "806720",
    "end": "813120"
  },
  {
    "text": "what identity provider we want to trust and what application inside of that identity provider we want to trust",
    "start": "813120",
    "end": "820800"
  },
  {
    "text": "so all users of that app for that provider will be able to log in",
    "start": "820800",
    "end": "827519"
  },
  {
    "text": "and in our access policy again exactly what we expect we want to make sure that we only give the resources access to the",
    "start": "827600",
    "end": "833839"
  },
  {
    "text": "resources we need for our application",
    "start": "833839",
    "end": "837920"
  },
  {
    "start": "838000",
    "end": "969000"
  },
  {
    "text": "so now i'll break out and go to the aws console",
    "start": "838959",
    "end": "847040"
  },
  {
    "text": "and go to the i am i am tap go to roles",
    "start": "847040",
    "end": "853360"
  },
  {
    "text": "and there's a number of roles already in here but i'm going to go ahead and create a new role i'm going to call it mobile photo",
    "start": "853360",
    "end": "861600"
  },
  {
    "text": "share rule",
    "start": "861600",
    "end": "866000"
  },
  {
    "text": "i'm going to select role for identity provider access",
    "start": "866800",
    "end": "872079"
  },
  {
    "text": "and then we're going to select web identity providers",
    "start": "872079",
    "end": "876639"
  },
  {
    "text": "i'm going to select my identity provider which is going to be login with amazon and then i'm going to switch back",
    "start": "877680",
    "end": "884560"
  },
  {
    "text": "to grab my app id",
    "start": "884560",
    "end": "888000"
  },
  {
    "text": "i'll paste that in and i can review the trust policy here",
    "start": "890560",
    "end": "896079"
  },
  {
    "text": "to see exactly what the the json policy is that we're generating for our wizard we can see that we're allowing this uh",
    "start": "896079",
    "end": "903279"
  },
  {
    "text": "assume rule with web identity uh action and we're allowing our uh application to",
    "start": "903279",
    "end": "909440"
  },
  {
    "text": "log in i'll go ahead and click continue and i'm just going to go ahead and click",
    "start": "909440",
    "end": "916320"
  },
  {
    "text": "select a custom policy",
    "start": "916320",
    "end": "919680"
  },
  {
    "text": "i have a pre-built policy here which is actually a little bit wider than it needs to be",
    "start": "924000",
    "end": "929680"
  },
  {
    "text": "but we'll fix that later",
    "start": "929680",
    "end": "933600"
  },
  {
    "text": "and then i'm going to go ahead and click create role",
    "start": "936000",
    "end": "940600"
  },
  {
    "text": "now if i bring that role up in the summary tab",
    "start": "941920",
    "end": "947600"
  },
  {
    "text": "the important thing to note here is our arn and this is what uniquely identifies our",
    "start": "947600",
    "end": "954480"
  },
  {
    "text": "role inside of aws we'll need this information as well to integrate with",
    "start": "954480",
    "end": "959759"
  },
  {
    "text": "our app so that's it we've now created our role for web identity federation",
    "start": "959759",
    "end": "968360"
  },
  {
    "start": "969000",
    "end": "1010000"
  },
  {
    "text": "so we've created our app we've created our role so the final piece of the puzzle is to get that sdk and then glue everything",
    "start": "969920",
    "end": "976399"
  },
  {
    "text": "together as i mentioned before logging with amazon has sdks for ios",
    "start": "976399",
    "end": "982800"
  },
  {
    "text": "android and javascript obviously we're going to be using the ios version today so we just need to download",
    "start": "982800",
    "end": "989279"
  },
  {
    "text": "the uh the sdk add the file necessary files to our project and then we integrate it into",
    "start": "989279",
    "end": "995279"
  },
  {
    "text": "our app and the two pieces of information that we really need here are api key",
    "start": "995279",
    "end": "1000480"
  },
  {
    "text": "from the login with amazon portal and our aws im rollarn that we got from",
    "start": "1000480",
    "end": "1006880"
  },
  {
    "text": "the aws console so now",
    "start": "1006880",
    "end": "1011920"
  },
  {
    "text": "i'm going to jump out and go to xcode and actually add login with amazon to our application",
    "start": "1011920",
    "end": "1021319"
  },
  {
    "text": "so i already have the login with amazon",
    "start": "1024079",
    "end": "1031520"
  },
  {
    "text": "sdk downloaded on my device or on my laptop i'm going to take the universal build because i'm building for a",
    "start": "1031520",
    "end": "1038079"
  },
  {
    "text": "simulator i'm just going to drag those files directly into my",
    "start": "1038079",
    "end": "1043760"
  },
  {
    "text": "application",
    "start": "1044079",
    "end": "1046640"
  },
  {
    "text": "i'm going to go to my p list",
    "start": "1049360",
    "end": "1055120"
  },
  {
    "text": "and i'm going to",
    "start": "1058160",
    "end": "1061720"
  },
  {
    "text": "add a key called api key",
    "start": "1067440",
    "end": "1072320"
  },
  {
    "text": "and then i need to get my api key from the console here for uh log in with amazon",
    "start": "1073200",
    "end": "1080160"
  },
  {
    "text": "so i'm going to go ahead and copy that out paste it in",
    "start": "1080160",
    "end": "1087039"
  },
  {
    "text": "and then we took a little bit of a shortcut here let me make that a little bigger",
    "start": "1089200",
    "end": "1095480"
  },
  {
    "text": "now we took a little bit of a shortcut and we added some some code already to integrate with login with amazon in our",
    "start": "1101520",
    "end": "1106720"
  },
  {
    "text": "application so all i really need to do here is add change a couple of constants that will",
    "start": "1106720",
    "end": "1112480"
  },
  {
    "text": "drive some pre-processor definitions so i'm going to enable login with amazon",
    "start": "1112480",
    "end": "1118160"
  },
  {
    "text": "which add which allows us to import the necessary headers and then i just need to add our role arn",
    "start": "1118160",
    "end": "1125360"
  },
  {
    "text": "which we can get from the aws console just copy that",
    "start": "1125360",
    "end": "1130880"
  },
  {
    "text": "paste it in and that's really all that's all that's necessary for this application now we",
    "start": "1130880",
    "end": "1136559"
  },
  {
    "text": "would obviously need to add some some code and callbacks but for our purposes",
    "start": "1136559",
    "end": "1142720"
  },
  {
    "text": "we just run our application now",
    "start": "1142720",
    "end": "1147400"
  },
  {
    "text": "start a new instance of the simulator which hopefully will not take very long to show up",
    "start": "1151919",
    "end": "1158679"
  },
  {
    "text": "and here we go so now when i click on login and i click on amazon",
    "start": "1167840",
    "end": "1174080"
  },
  {
    "text": "this time instead of the facebook page i'm going to read i'm going to redirect it to a mobile version of the amazon",
    "start": "1174080",
    "end": "1179520"
  },
  {
    "text": "login page i'm going to go ahead and",
    "start": "1179520",
    "end": "1184720"
  },
  {
    "text": "log in and i'm going to get my password",
    "start": "1184799",
    "end": "1193160"
  },
  {
    "text": "as i mentioned you can see here the privacy notice link comes up so if the user clicked on that they would get redirected in this case to the aws",
    "start": "1201760",
    "end": "1209840"
  },
  {
    "text": "homepage so i'm going to click on agree to allow the app to have access",
    "start": "1209840",
    "end": "1214880"
  },
  {
    "text": "it'll redirect me back to the application and now instead of a facebook session i now have a login with",
    "start": "1214880",
    "end": "1221120"
  },
  {
    "text": "amazon session but i am also i also have a session with our app with aws",
    "start": "1221120",
    "end": "1227840"
  },
  {
    "text": "now if i click on show pictures i'm not going to see any pictures it's important to note that there's a",
    "start": "1227840",
    "end": "1232880"
  },
  {
    "text": "distinction here where my facebook account is seeing from web identity federation as a",
    "start": "1232880",
    "end": "1238480"
  },
  {
    "text": "completely separate user from my login with the amazon user so the photos",
    "start": "1238480",
    "end": "1243840"
  },
  {
    "text": "and all the other settings are going to be distinct between the two providers",
    "start": "1243840",
    "end": "1251280"
  },
  {
    "text": "so i can see the public photos i can add a favorite",
    "start": "1253120",
    "end": "1260159"
  },
  {
    "text": "and then see that favorite show up there",
    "start": "1260159",
    "end": "1263840"
  },
  {
    "text": "i can then also upload a new picture this time i'll choose",
    "start": "1266080",
    "end": "1272799"
  },
  {
    "text": "my photo with jared salton amaki of the red sox",
    "start": "1272799",
    "end": "1277840"
  },
  {
    "text": "and i'll upload that photo as a public photo",
    "start": "1279840",
    "end": "1284080"
  },
  {
    "text": "now when i click on show pictures oh i left it as private",
    "start": "1288320",
    "end": "1294080"
  },
  {
    "text": "all right so you can see that i alright i let i have that picture available again so now i have that uh it shows up",
    "start": "1294080",
    "end": "1300159"
  },
  {
    "text": "in my personal photos so it's great we've now integrated logging with amazon inside of our",
    "start": "1300159",
    "end": "1305919"
  },
  {
    "text": "application",
    "start": "1305919",
    "end": "1308480"
  },
  {
    "start": "1315000",
    "end": "1430000"
  },
  {
    "text": "so just to summarize we you know we started out with our aws mobile sdks for integrating and accessing all of our",
    "start": "1317039",
    "end": "1322640"
  },
  {
    "text": "services we created an application with login with amazon to authenticate our users",
    "start": "1322640",
    "end": "1328320"
  },
  {
    "text": "we created an im rule that allows us to federate that access with that application to our resources",
    "start": "1328320",
    "end": "1335200"
  },
  {
    "text": "that we need and then we downloaded an sdk to kind of glue everything together for authentication",
    "start": "1335200",
    "end": "1342159"
  },
  {
    "text": "so now i just like to revisit the off flow this time specifically looking at the",
    "start": "1343200",
    "end": "1348720"
  },
  {
    "text": "the resources and identifiers that we use with login with amazon",
    "start": "1348720",
    "end": "1353919"
  },
  {
    "text": "so when we authenticate with login with amazon we're going to use that api key that's how we uniquely identify ourselves with",
    "start": "1354159",
    "end": "1360960"
  },
  {
    "text": "login with amazon and ties to our our app when the user logs in",
    "start": "1360960",
    "end": "1366320"
  },
  {
    "text": "we get an access token back once we have that access token we pass that to aws sts along with the",
    "start": "1366320",
    "end": "1374400"
  },
  {
    "text": "arn for our role sts validates that token",
    "start": "1374400",
    "end": "1380799"
  },
  {
    "text": "with the identity provider and then verifies that it matches the app id that we put in our trust policy",
    "start": "1380799",
    "end": "1386799"
  },
  {
    "text": "assuming all of that is all valid we get our aws credentials back to the device",
    "start": "1386799",
    "end": "1392720"
  },
  {
    "text": "and then we pass then we can access resources inside of our bucket",
    "start": "1392720",
    "end": "1397760"
  },
  {
    "text": "and we pass our user id as a prefix so that we restrict access to only our photos",
    "start": "1397760",
    "end": "1403520"
  },
  {
    "text": "so our personal photos are in a a sub uh a sub folder so to speak",
    "start": "1403520",
    "end": "1408880"
  },
  {
    "text": "inside of our bucket however",
    "start": "1408880",
    "end": "1414000"
  },
  {
    "text": "i noted earlier that our our access policy that we put on our role was a little bit too wide so",
    "start": "1414000",
    "end": "1420159"
  },
  {
    "text": "while we actually are uh restricting access to the photos inside of the application if somebody actually got",
    "start": "1420159",
    "end": "1425600"
  },
  {
    "text": "those credentials out of the device they would actually have more access than what we want",
    "start": "1425600",
    "end": "1431280"
  },
  {
    "start": "1430000",
    "end": "1517000"
  },
  {
    "text": "so all i'm going to do is actually demonstrate what that actually means",
    "start": "1431280",
    "end": "1437919"
  },
  {
    "text": "so inside of my app i'm going to go to my picture list view controller",
    "start": "1438720",
    "end": "1445840"
  },
  {
    "text": "and here in the code we have a block that creates a prefix based on whether or not we're looking at public or",
    "start": "1450159",
    "end": "1456240"
  },
  {
    "text": "private photos for our private photos we're looking at just the the user id",
    "start": "1456240",
    "end": "1461360"
  },
  {
    "text": "prefix for public photos we're looking for slash public slash user id",
    "start": "1461360",
    "end": "1466880"
  },
  {
    "text": "so if i actually comment this line out now when i click on the personal tab",
    "start": "1466880",
    "end": "1472400"
  },
  {
    "text": "i'm actually going to list the entire contents of the bucket not just the prefix for my user",
    "start": "1472400",
    "end": "1478880"
  },
  {
    "text": "i'm going to go ahead and recompile the app and launch it",
    "start": "1478880",
    "end": "1483278"
  },
  {
    "text": "so now you'll notice again when i click on when i launch and i get to the personal",
    "start": "1484880",
    "end": "1490080"
  },
  {
    "text": "tab i see that tim thomas photo that i added with my facebook user that was private",
    "start": "1490080",
    "end": "1495120"
  },
  {
    "text": "that was not something that i would that i as my facebook user wanted to share with other users but these credentials",
    "start": "1495120",
    "end": "1500960"
  },
  {
    "text": "actually have access to actually download that file",
    "start": "1500960",
    "end": "1504960"
  },
  {
    "text": "so obviously we want to try to correct that",
    "start": "1506000",
    "end": "1510600"
  },
  {
    "start": "1517000",
    "end": "1716000"
  },
  {
    "text": "so what you see on the screen now are are basically the three statements that were in the policy that i used to originally create my role there's a lot",
    "start": "1517679",
    "end": "1524480"
  },
  {
    "text": "of stars in there we're giving access to all the resources and all the actions for the services",
    "start": "1524480",
    "end": "1530880"
  },
  {
    "text": "so you think your first thought might be first thing we'll do is obviously restrict access to only those actions",
    "start": "1530880",
    "end": "1536640"
  },
  {
    "text": "and those resources that we would need for our application so we can definitely do that we can",
    "start": "1536640",
    "end": "1542960"
  },
  {
    "text": "restrict access to those actions necessary for the s3 transfer manager to operate",
    "start": "1542960",
    "end": "1548240"
  },
  {
    "text": "on our bucket and only those actions that necessary to actually store inside of our table with",
    "start": "1548240",
    "end": "1553679"
  },
  {
    "text": "dynamodb and also to register for push notifications",
    "start": "1553679",
    "end": "1559039"
  },
  {
    "text": "this is great this is a great first step obviously i don't have access to other s3 resources but i still have global",
    "start": "1559760",
    "end": "1565440"
  },
  {
    "text": "access to the bucket so it doesn't really solve the problem that we saw in the application",
    "start": "1565440",
    "end": "1571320"
  },
  {
    "text": "so for s3 our next step might be to add a specific prefix condition to our policy so we can",
    "start": "1571520",
    "end": "1579440"
  },
  {
    "text": "add a slash my name so now when i log in i'll only have access to my photos",
    "start": "1579440",
    "end": "1586880"
  },
  {
    "text": "the problem here is is that the policy on the role is applied to every user who assumes it so now anybody who assumes",
    "start": "1586880",
    "end": "1593440"
  },
  {
    "text": "this role with this policy would have access to my photos and not their own so that doesn't really solve our problem so",
    "start": "1593440",
    "end": "1600080"
  },
  {
    "text": "how do we get this prefix condition but also a very a a a policy that will",
    "start": "1600080",
    "end": "1607039"
  },
  {
    "text": "be applicable to all users who log into our application",
    "start": "1607039",
    "end": "1612200"
  },
  {
    "text": "and the answer to that is policy variables for web identity federation there are basically two classes of policy variable",
    "start": "1612240",
    "end": "1619600"
  },
  {
    "text": "one which will identify the application ident id and one that will identify the user",
    "start": "1619600",
    "end": "1625200"
  },
  {
    "text": "inside of the application so for login with amazon we have this www.amazon.com",
    "start": "1625200",
    "end": "1631919"
  },
  {
    "text": "colon user id and that will be the user identifier for our application for our user who logs in with login with amazon",
    "start": "1631919",
    "end": "1641440"
  },
  {
    "text": "so now that we have these policy variables we can substitute my name with that variable and now any",
    "start": "1641440",
    "end": "1648080"
  },
  {
    "text": "user who logs in will only have access to the resources in their prefix so for personal photos",
    "start": "1648080",
    "end": "1654480"
  },
  {
    "text": "we have the prefix that is their username and then we also want to be able to list",
    "start": "1654480",
    "end": "1659919"
  },
  {
    "text": "the items in the bucket and then we also need to be able to have some basic operations with",
    "start": "1659919",
    "end": "1665919"
  },
  {
    "text": "multi-part uploads for the s3 transfer manager for our public photos as i mentioned",
    "start": "1665919",
    "end": "1672640"
  },
  {
    "text": "everything is under a public prefix so we need to give read access to everything under that prefix and then we",
    "start": "1672640",
    "end": "1678240"
  },
  {
    "text": "need to allow for write and delete operations in the subfolder under that prefix",
    "start": "1678240",
    "end": "1684240"
  },
  {
    "text": "finally we need to be able to list those photos so that's what that last statement is for",
    "start": "1684240",
    "end": "1691200"
  },
  {
    "text": "for our dynamodb policy we recently launched fine grain access control for dynamodb so now we can",
    "start": "1691360",
    "end": "1698080"
  },
  {
    "text": "actually restrict access to a specific hash key or a subset of columns inside of a table",
    "start": "1698080",
    "end": "1705679"
  },
  {
    "text": "and using policy variables with logging with amazon we can basically ensure that the user only has access to their entry in",
    "start": "1705679",
    "end": "1712640"
  },
  {
    "text": "the favorites table so now what i'll do is actually go back",
    "start": "1712640",
    "end": "1718960"
  },
  {
    "start": "1716000",
    "end": "1828000"
  },
  {
    "text": "and correct the permissions on our role so that we are only we properly restrict what resources the user has access to",
    "start": "1718960",
    "end": "1727279"
  },
  {
    "text": "so i have here the policy which has all the statements that i showed on the screen just in a slightly different order",
    "start": "1727279",
    "end": "1735520"
  },
  {
    "text": "i'm going to go ahead and copy that i'm going to go back to the aws console",
    "start": "1736000",
    "end": "1743120"
  },
  {
    "text": "go to the permissions tab manage policy and paste this new policy in",
    "start": "1743120",
    "end": "1751960"
  },
  {
    "text": "i'm going to stop the application and restart it which will initiate a new session with sts to get new credentials",
    "start": "1754480",
    "end": "1761039"
  },
  {
    "text": "which will pick up that new policy and now when i click on show pictures",
    "start": "1761039",
    "end": "1767600"
  },
  {
    "text": "i get an exception great well what we should have seen there is a",
    "start": "1767600",
    "end": "1773919"
  },
  {
    "text": "um an error that should have popped up so i mean obviously we we're getting the",
    "start": "1773919",
    "end": "1779440"
  },
  {
    "text": "somewhat of the correct experience in the sense that the use the application is no longer able to access the",
    "start": "1779440",
    "end": "1784880"
  },
  {
    "text": "resources it doesn't have uh it shouldn't so if i go ahead and reset this prefix",
    "start": "1784880",
    "end": "1792840"
  },
  {
    "text": "now click on show pictures i now only see my pictures and i and i only have permission to do that",
    "start": "1794399",
    "end": "1800640"
  },
  {
    "text": "i can still see the the private pictures i can still see my favorites and these are the only",
    "start": "1800640",
    "end": "1807679"
  },
  {
    "text": "resources that i actually have access to so now that we have a correct policy in place the user gets what they need but",
    "start": "1807679",
    "end": "1814960"
  },
  {
    "text": "they don't get anything that they shouldn't have if they manage to extract the credentials from the application",
    "start": "1814960",
    "end": "1821799"
  },
  {
    "start": "1828000",
    "end": "1859000"
  },
  {
    "text": "so that's web identity federation just to summarize we have we have three supported providers",
    "start": "1829200",
    "end": "1835440"
  },
  {
    "text": "facebook google and log in with amazon we use im roles to provide the access uh",
    "start": "1835440",
    "end": "1842559"
  },
  {
    "text": "access restrictions to define which which applications with the identity provider we allow login",
    "start": "1842559",
    "end": "1848480"
  },
  {
    "text": "access for and then we use policy variables to give that per user level access",
    "start": "1848480",
    "end": "1853840"
  },
  {
    "text": "policy restrictions like we saw on the mobile photo share",
    "start": "1853840",
    "end": "1859039"
  },
  {
    "start": "1859000",
    "end": "2029000"
  },
  {
    "text": "so that's great we have a solution for those three identity providers but what if our user base doesn't use one of",
    "start": "1860640",
    "end": "1866559"
  },
  {
    "text": "those identity providers so they don't want to or we want to support a private pool of users",
    "start": "1866559",
    "end": "1873360"
  },
  {
    "text": "we actually have a solution to this problem it's a slightly older solution it's called the identity token vending",
    "start": "1873360",
    "end": "1878880"
  },
  {
    "text": "machine and unlike web identity federation the",
    "start": "1878880",
    "end": "1885279"
  },
  {
    "text": "token vending machine has a server and client component the server code is is designed to the",
    "start": "1885279",
    "end": "1891360"
  },
  {
    "text": "sample server code is designed to be deployed in something like elastic bean stock then we have client code that runs",
    "start": "1891360",
    "end": "1896960"
  },
  {
    "text": "on the device both ios and android so what happens is that",
    "start": "1896960",
    "end": "1902000"
  },
  {
    "text": "the iphone register or the device sorry the mobile device registers",
    "start": "1902000",
    "end": "1907760"
  },
  {
    "text": "through a mobile web browser and that will store a record inside of dynamodb",
    "start": "1907760",
    "end": "1912799"
  },
  {
    "text": "once we have a record for a user inside of the tvm",
    "start": "1912799",
    "end": "1918158"
  },
  {
    "text": "the tvm client can log in that will return an encrypted private",
    "start": "1918240",
    "end": "1924000"
  },
  {
    "text": "key that will then be used to sign the request to get token on the back end the tvm calls aws sts to",
    "start": "1924000",
    "end": "1932080"
  },
  {
    "text": "generate a time locked and restricted token",
    "start": "1932080",
    "end": "1938240"
  },
  {
    "text": "once it gets that token back from the service it returns it to the mobile device and at that point",
    "start": "1938240",
    "end": "1944320"
  },
  {
    "text": "we can then access any services that are defined in our policy inside of the tvm",
    "start": "1944320",
    "end": "1950720"
  },
  {
    "text": "so just a little bit about policies with tbm at your most basic level",
    "start": "1951120",
    "end": "1957600"
  },
  {
    "text": "the most privileged credentials have access to everything",
    "start": "1957600",
    "end": "1963398"
  },
  {
    "text": "inside of your aws account",
    "start": "1963440",
    "end": "1966799"
  },
  {
    "text": "our recommendation for deploying the tvm is to actually use an im user with a restricted",
    "start": "1969120",
    "end": "1974840"
  },
  {
    "text": "policy and that policy should be the restriction to only those resources necessary for your application plus",
    "start": "1974840",
    "end": "1981360"
  },
  {
    "text": "those necessary to actually run the tvm so that would be our app bucket our bucket for our pictures our dynamodb",
    "start": "1981360",
    "end": "1988480"
  },
  {
    "text": "table for our favorites the dynamodb table for the tvm itself push notifications and sts",
    "start": "1988480",
    "end": "1997200"
  },
  {
    "text": "once we have that policy there's actually another policy that is applied on the generated credentials",
    "start": "1997200",
    "end": "2002880"
  },
  {
    "text": "with sts and those credentials should slice out those resources not",
    "start": "2002880",
    "end": "2008559"
  },
  {
    "text": "necessary for the application so those would be the things that would be necessary for the tvm to run so we don't",
    "start": "2008559",
    "end": "2013760"
  },
  {
    "text": "want the app to have access to our tvm table and we don't want it to have access to call sts on its own so we just remove",
    "start": "2013760",
    "end": "2020960"
  },
  {
    "text": "those from the policy that is applied on the credentials by the tvm",
    "start": "2020960",
    "end": "2027360"
  },
  {
    "start": "2029000",
    "end": "2150000"
  },
  {
    "text": "the identity tvm code the server code is available in our aws labs repositories",
    "start": "2030559",
    "end": "2036000"
  },
  {
    "text": "and then our client code we have in multiple samples for both ios and android and those are also on github",
    "start": "2036000",
    "end": "2042880"
  },
  {
    "text": "these are provided as sample implementations they handle most of the the logic that you need but they should",
    "start": "2042880",
    "end": "2049040"
  },
  {
    "text": "be customized uh to meet your needs that includes the policies associated with that to make sure that you actually have",
    "start": "2049040",
    "end": "2055599"
  },
  {
    "text": "the policies that are that are that match your use case",
    "start": "2055599",
    "end": "2061320"
  },
  {
    "text": "so what about anonymous access it's getting far more and more common for a mobile application to present such",
    "start": "2063359",
    "end": "2069919"
  },
  {
    "text": "screens such as this when you first open the app you're prompted to log in or register",
    "start": "2069919",
    "end": "2076480"
  },
  {
    "text": "but what am i getting when i log in what if we could offer a preview",
    "start": "2076480",
    "end": "2083679"
  },
  {
    "text": "to uh to entice our users into looking into the application so that they know what they get what they're going to get",
    "start": "2084079",
    "end": "2089919"
  },
  {
    "text": "before they log in and they will actually create an account",
    "start": "2089919",
    "end": "2095280"
  },
  {
    "text": "how do we provide at that level of access in our application we don't have and a login with an",
    "start": "2095520",
    "end": "2102160"
  },
  {
    "text": "identity provider to use web identity federation we don't have a login a user session",
    "start": "2102160",
    "end": "2107920"
  },
  {
    "text": "associated with the user so to use the tv identity tvm",
    "start": "2107920",
    "end": "2113119"
  },
  {
    "text": "so how do we do it well we have another solution here and it's an anonymous token vending machine",
    "start": "2113119",
    "end": "2121119"
  },
  {
    "text": "and much like the identity token vending machine there's a server and a client-side component",
    "start": "2121760",
    "end": "2127599"
  },
  {
    "text": "and it's but instead of registering a user we register a device with the token vending machine which stores a record in",
    "start": "2127599",
    "end": "2134560"
  },
  {
    "text": "dynamodb and then after that we can call git token which makes a call to sts to",
    "start": "2134560",
    "end": "2140480"
  },
  {
    "text": "generate our our temporary credentials which is returned to the device",
    "start": "2140480",
    "end": "2146000"
  },
  {
    "text": "which we then can access resources with now policies for the tvm",
    "start": "2146000",
    "end": "2153359"
  },
  {
    "start": "2150000",
    "end": "2281000"
  },
  {
    "text": "recommendation that we make is is that you use read-only policies for uh for these",
    "start": "2153359",
    "end": "2158960"
  },
  {
    "text": "for these resources because we have no way of identifying uh an abusive",
    "start": "2158960",
    "end": "2165440"
  },
  {
    "text": "user we don't want to necessarily allow them to upload photos but we would like them to be able to see public photos that have been shared by",
    "start": "2165440",
    "end": "2172480"
  },
  {
    "text": "other users so now i'm actually going to demonstrate",
    "start": "2172480",
    "end": "2178400"
  },
  {
    "text": "the anonymous access that's built into the mobile photoshare app",
    "start": "2178400",
    "end": "2184000"
  },
  {
    "text": "so if i go back to the mobile photoshare app and i click log out i'll now i'm now in an anonymous",
    "start": "2184720",
    "end": "2190320"
  },
  {
    "text": "session so my add picture button has gone away but i still have show pictures and",
    "start": "2190320",
    "end": "2195359"
  },
  {
    "text": "picture map so i can click on show pictures and i can still see",
    "start": "2195359",
    "end": "2200400"
  },
  {
    "text": "the photos that have been marked as public i no longer have the ability to add a favorite because i don't have a",
    "start": "2200400",
    "end": "2205520"
  },
  {
    "text": "user session associated with it additionally i can see all public photos",
    "start": "2205520",
    "end": "2213280"
  },
  {
    "text": "on a map so let's see how that's actually implemented",
    "start": "2213280",
    "end": "2219599"
  },
  {
    "text": "so in our mobile photo share application we actually have an additional project which is our tvm client code",
    "start": "2219599",
    "end": "2225680"
  },
  {
    "text": "and we actually implemented a credentials provider that that adheres",
    "start": "2225680",
    "end": "2230720"
  },
  {
    "text": "to our aw or amazon credential provider protocol for the ios",
    "start": "2230720",
    "end": "2236240"
  },
  {
    "text": "sdk this protocol all basically has two",
    "start": "2236240",
    "end": "2241839"
  },
  {
    "text": "methods that need to be implemented one which is credentials which actually delivers the temporary credentials to",
    "start": "2241839",
    "end": "2247599"
  },
  {
    "text": "the uh to the service clients and uh refresh which ensures that the uh",
    "start": "2247599",
    "end": "2254720"
  },
  {
    "text": "the the temporary credentials are recycled on a regular schedule",
    "start": "2254720",
    "end": "2259839"
  },
  {
    "text": "so in our refresh we actually go out and make the calls to the tvm to get the token",
    "start": "2259839",
    "end": "2265119"
  },
  {
    "text": "and store that response locally and then refresh on and as needed basis",
    "start": "2265119",
    "end": "2272160"
  },
  {
    "text": "and all this code will be available after the talk as well",
    "start": "2272480",
    "end": "2277040"
  },
  {
    "start": "2281000",
    "end": "2328000"
  },
  {
    "text": "as with the identity tvm the anonymous tvm server code is available in a github repository in our aws labs org",
    "start": "2282160",
    "end": "2290000"
  },
  {
    "text": "the client code is integrated in a number of samples in both our ios and android samples",
    "start": "2290000",
    "end": "2295599"
  },
  {
    "text": "repositories and again it's provided as a sample implementation and can be mod canon should be modified to meet your use",
    "start": "2295599",
    "end": "2302400"
  },
  {
    "text": "cases so to sum it up",
    "start": "2302400",
    "end": "2309200"
  },
  {
    "text": "if the user has a facebook google or amazon account we can use web identity federation",
    "start": "2309200",
    "end": "2315760"
  },
  {
    "text": "the user has some other form of account or a private pool of users we can use an identity tvm",
    "start": "2315760",
    "end": "2322000"
  },
  {
    "text": "and if the user has no account we can use the anonymous tvm",
    "start": "2322000",
    "end": "2327838"
  },
  {
    "text": "as i mentioned the the code for the mobile photoshare application is available on github",
    "start": "2329520",
    "end": "2335440"
  },
  {
    "text": "in the repository is the ios application that i demonstrated and then also a back-end",
    "start": "2335440",
    "end": "2341359"
  },
  {
    "text": "infrastructure which can be deployed in beanstalk which is actually a bundle of the g the geo",
    "start": "2341359",
    "end": "2347280"
  },
  {
    "text": "server the identity tvm and the anonymous tvm also in the in the repo are instructions",
    "start": "2347280",
    "end": "2354079"
  },
  {
    "text": "for actually deploying it yourself so you can test it out in your own account",
    "start": "2354079",
    "end": "2359040"
  },
  {
    "text": "if you're interested in learning more about web identity federation the im team actually put together the web",
    "start": "2360560",
    "end": "2365680"
  },
  {
    "text": "identity federation playground this is a in browser",
    "start": "2365680",
    "end": "2371200"
  },
  {
    "text": "web identity federation application so you can actually see the responses and the call the actual",
    "start": "2371200",
    "end": "2377280"
  },
  {
    "text": "raw requests and responses to both the identity providers and sts itself and",
    "start": "2377280",
    "end": "2382480"
  },
  {
    "text": "see what those uh what those calls look like and the returning results so you can see the information uh for yourself",
    "start": "2382480",
    "end": "2389119"
  },
  {
    "text": "firsthand this is actually implemented in javascript um and if you were paying attention uh recently at the keynote",
    "start": "2389119",
    "end": "2397119"
  },
  {
    "text": "verner was actually mentioning our javascript sdk or javascript browser sdk what about any federation also works",
    "start": "2397119",
    "end": "2402800"
  },
  {
    "text": "with that as well for the aws mobile sdks the best place",
    "start": "2402800",
    "end": "2409280"
  },
  {
    "text": "to get started is that mobile development center i mentioned at the very beginning aws.amazon.com mobile",
    "start": "2409280",
    "end": "2415920"
  },
  {
    "start": "2411000",
    "end": "2467000"
  },
  {
    "text": "and then the sample repositories that i've mentioned uh before as well those samples have",
    "start": "2415920",
    "end": "2422960"
  },
  {
    "text": "examples of how to use various services from a mobile device and then also",
    "start": "2422960",
    "end": "2428240"
  },
  {
    "text": "specific use cases like sending feedback from a form or doing a message board with sns and sqs",
    "start": "2428240",
    "end": "2437040"
  },
  {
    "text": "finally if you need assistance with either using the mobile sdks web identity federation or any of the things",
    "start": "2437040",
    "end": "2442160"
  },
  {
    "text": "that i talked about today we have our mobile development form at forms.amazon.com aws.amazon.com",
    "start": "2442160",
    "end": "2448880"
  },
  {
    "text": "and then we also monitor stack overflow so any questions tagged with amazon web services will be monitored by",
    "start": "2448880",
    "end": "2456640"
  },
  {
    "text": "aws employees and if it doesn't receive an answer from the community first we will follow up on those questions",
    "start": "2456640",
    "end": "2465240"
  },
  {
    "text": "if you're interested in talking more after the session if you don't get your questions answered we're actually going to have mobile office hours",
    "start": "2466240",
    "end": "2473520"
  },
  {
    "start": "2467000",
    "end": "2541000"
  },
  {
    "text": "today from 4 30 to 5 and tomorrow from 9 to 10. we'll also just be around in the booth",
    "start": "2473520",
    "end": "2479680"
  },
  {
    "text": "if you can't make one of those specific office hours we also have a mobile blog",
    "start": "2479680",
    "end": "2486240"
  },
  {
    "text": "where we actually post best practices and tips and tricks for using the aws mobile sdks and that's at",
    "start": "2486240",
    "end": "2492440"
  },
  {
    "text": "mobile.aws blog and then finally we actually recently started",
    "start": "2492440",
    "end": "2499359"
  },
  {
    "text": "a twitter account for the mobile sdks at aws for mobile",
    "start": "2499359",
    "end": "2505280"
  },
  {
    "text": "so that's my talk for today i appreciate everybody coming out um amazon",
    "start": "2505920",
    "end": "2511520"
  },
  {
    "text": "takes customer feedback very seriously so we would ask that you actually fill out a an evaluation form for this talk",
    "start": "2511520",
    "end": "2518319"
  },
  {
    "text": "that will help not only maybe be a better presenter but help us",
    "start": "2518319",
    "end": "2523359"
  },
  {
    "text": "provide content for you in the future as a you know as a thank you we're actually going to be giving away prizes",
    "start": "2523359",
    "end": "2529040"
  },
  {
    "text": "for filled out evaluations so make sure you fill that out as soon as possible just as a reminder",
    "start": "2529040",
    "end": "2534720"
  },
  {
    "text": "the section is sec 401 so this time i'll open the floor to questions or just ask",
    "start": "2534720",
    "end": "2542880"
  }
]