[
  {
    "text": "- [Instructor] Hello all.",
    "start": "600",
    "end": "1560"
  },
  {
    "text": "In this video, we will take\na look at the new feature",
    "start": "1560",
    "end": "3929"
  },
  {
    "text": "of log transformation and enrichment",
    "start": "3930",
    "end": "6180"
  },
  {
    "text": "with the ability to improve\nlog analytics at scale.",
    "start": "6180",
    "end": "9630"
  },
  {
    "text": "With log transformation, you\ncan normalize all your logs",
    "start": "9630",
    "end": "12570"
  },
  {
    "text": "in a consistent and contexted format",
    "start": "12570",
    "end": "14790"
  },
  {
    "text": "at the time of ingestion\ninto CloudWatch logs.",
    "start": "14790",
    "end": "17970"
  },
  {
    "text": "You can now add structure to your logs",
    "start": "17970",
    "end": "19859"
  },
  {
    "text": "by using pre-configured\ntemplates for common AWS services",
    "start": "19860",
    "end": "23100"
  },
  {
    "text": "such as AWS Web Application Firewall,",
    "start": "23100",
    "end": "25440"
  },
  {
    "text": "Route 53, AWS VPC, et cetera,",
    "start": "25440",
    "end": "28500"
  },
  {
    "text": "or build custom transformers",
    "start": "28500",
    "end": "30210"
  },
  {
    "text": "with native passers such as Grok.",
    "start": "30210",
    "end": "32610"
  },
  {
    "text": "For the purpose of this demonstration,",
    "start": "32610",
    "end": "34380"
  },
  {
    "text": "I have deployed a sample\nwebsite application,",
    "start": "34380",
    "end": "36750"
  },
  {
    "text": "which will generate various logs.",
    "start": "36750",
    "end": "38940"
  },
  {
    "text": "Now let's switch to\nthe CloudWatch console.",
    "start": "38940",
    "end": "41430"
  },
  {
    "text": "In the CloudWatch console,",
    "start": "41430",
    "end": "42780"
  },
  {
    "text": "select log groups from the left pane",
    "start": "42780",
    "end": "44834"
  },
  {
    "text": "and in the filter log groups,",
    "start": "44834",
    "end": "47070"
  },
  {
    "text": "type in ECS PET and select\nit /ecs/petlistadoptions.",
    "start": "47070",
    "end": "52070"
  },
  {
    "text": "Before we create a transformer",
    "start": "54720",
    "end": "56295"
  },
  {
    "text": "for this particular log group,",
    "start": "56295",
    "end": "58739"
  },
  {
    "text": "let's have a look at what\nis the current structure",
    "start": "58740",
    "end": "61560"
  },
  {
    "text": "in which the logs are being generated.",
    "start": "61560",
    "end": "63720"
  },
  {
    "text": "For that, select the latest log stream,",
    "start": "63720",
    "end": "66063"
  },
  {
    "text": "and expand any one line item.",
    "start": "67050",
    "end": "69917"
  },
  {
    "text": "Here, as you can see,",
    "start": "69917",
    "end": "71070"
  },
  {
    "text": "this is the log which is being generated,",
    "start": "71070",
    "end": "73590"
  },
  {
    "text": "and this does not follow\nany structure or any format.",
    "start": "73590",
    "end": "77880"
  },
  {
    "text": "Hence, it is very difficult to use this",
    "start": "77880",
    "end": "79710"
  },
  {
    "text": "for further analytics or insights.",
    "start": "79710",
    "end": "81963"
  },
  {
    "text": "Now let's transform this log\nand add a structure to it.",
    "start": "82800",
    "end": "87030"
  },
  {
    "text": "Now click on /ecs/petlistadoptions",
    "start": "87030",
    "end": "89580"
  },
  {
    "text": "and which will take you\nback to the previous screen",
    "start": "89580",
    "end": "92610"
  },
  {
    "text": "and click on transformers.",
    "start": "92610",
    "end": "94710"
  },
  {
    "text": "Here we will create a new transformer.",
    "start": "94710",
    "end": "97590"
  },
  {
    "text": "In the managed transformer\npage, under Choose Parsers,",
    "start": "97590",
    "end": "101399"
  },
  {
    "text": "we will select Grok for now,",
    "start": "101400",
    "end": "103793"
  },
  {
    "text": "but there are various other\noptions which are available.",
    "start": "103793",
    "end": "108300"
  },
  {
    "text": "So like I had mentioned, there\nare pre-configured parcels",
    "start": "108300",
    "end": "111240"
  },
  {
    "text": "for Postgres, WAF,\nCloudFront, route 53, and VPC,",
    "start": "111240",
    "end": "116240"
  },
  {
    "text": "but we will select Grok and under source,",
    "start": "116280",
    "end": "119159"
  },
  {
    "text": "we will keep @message.",
    "start": "119160",
    "end": "120993"
  },
  {
    "text": "Under match, we have to\nprovide a Grok pattern,",
    "start": "122100",
    "end": "124950"
  },
  {
    "text": "which will match against the log event,",
    "start": "124950",
    "end": "127113"
  },
  {
    "text": "which we had seen in the previous window.",
    "start": "128100",
    "end": "130619"
  },
  {
    "text": "So what I will be doing is\nI'll enter a Grok pattern",
    "start": "130620",
    "end": "133540"
  },
  {
    "text": "in this format.",
    "start": "136380",
    "end": "137433"
  },
  {
    "text": "So this is the Grok pattern,",
    "start": "138360",
    "end": "140310"
  },
  {
    "text": "which will match the previous\nlog, which we had seen.",
    "start": "140310",
    "end": "144239"
  },
  {
    "text": "Now that we have the basics selected,",
    "start": "144240",
    "end": "147060"
  },
  {
    "text": "we can review the transformed logs.",
    "start": "147060",
    "end": "150150"
  },
  {
    "text": "To preview, you can\neither load a sample log",
    "start": "150150",
    "end": "152920"
  },
  {
    "text": "or you can put in your\nown log in this text box.",
    "start": "154740",
    "end": "158310"
  },
  {
    "text": "So I will copy the log\nfrom the previous page",
    "start": "158310",
    "end": "162220"
  },
  {
    "text": "and paste it over here.",
    "start": "166050",
    "end": "167463"
  },
  {
    "text": "And then click on test transformer.",
    "start": "169920",
    "end": "171903"
  },
  {
    "text": "As you can see, this is the\ntransformed log based on the",
    "start": "172950",
    "end": "175860"
  },
  {
    "text": "Grok pattern, which we have provided here.",
    "start": "175860",
    "end": "178890"
  },
  {
    "text": "Now this is in a good structure.",
    "start": "178890",
    "end": "180960"
  },
  {
    "text": "It follows a structure,\nit follows a format,",
    "start": "180960",
    "end": "183300"
  },
  {
    "text": "and as you can see,",
    "start": "183300",
    "end": "184770"
  },
  {
    "text": "there's a JSON key value\npair, which is generated.",
    "start": "184770",
    "end": "187830"
  },
  {
    "text": "Now this JSON key can\nbe further used in log",
    "start": "187830",
    "end": "191610"
  },
  {
    "text": "analytics and insights.",
    "start": "191610",
    "end": "193260"
  },
  {
    "text": "And now you can filter\nbased on these JSON keys.",
    "start": "193260",
    "end": "196142"
  },
  {
    "text": "Before proceeding further,",
    "start": "197700",
    "end": "198959"
  },
  {
    "text": "as you can see over here, you\ncan add multiple processors",
    "start": "198960",
    "end": "202320"
  },
  {
    "text": "as well into your transformer.",
    "start": "202320",
    "end": "204483"
  },
  {
    "text": "In the add processor,\nthere are various options,",
    "start": "205470",
    "end": "207690"
  },
  {
    "text": "like you can convert uppercase\nto lowercase, lowercase",
    "start": "207690",
    "end": "211290"
  },
  {
    "text": "to uppercase, and there are\nmultiple case on options like",
    "start": "211290",
    "end": "214860"
  },
  {
    "text": "add key, delete key, rename key.",
    "start": "214860",
    "end": "217170"
  },
  {
    "text": "So this is highly customizable,",
    "start": "217170",
    "end": "219150"
  },
  {
    "text": "but for the purpose of this demo,",
    "start": "219150",
    "end": "220590"
  },
  {
    "text": "I'm not adding any\nprocessor at the moment.",
    "start": "220590",
    "end": "222746"
  },
  {
    "text": "And I'll click on save.",
    "start": "222746",
    "end": "224343"
  },
  {
    "text": "Now this transformer is created",
    "start": "226740",
    "end": "229350"
  },
  {
    "text": "and the processor we are using is Grok.",
    "start": "229350",
    "end": "231723"
  },
  {
    "text": "Once the transformer is created,",
    "start": "232920",
    "end": "234569"
  },
  {
    "text": "it'll not transform the\nalready available log in",
    "start": "234570",
    "end": "237660"
  },
  {
    "text": "CloudWatch log groups.",
    "start": "237660",
    "end": "239120"
  },
  {
    "text": "It'll transform only\nthe newly ingested logs",
    "start": "239120",
    "end": "242640"
  },
  {
    "text": "and which can be used in log insights.",
    "start": "242640",
    "end": "245160"
  },
  {
    "text": "So we'll click on view log insights",
    "start": "245160",
    "end": "247950"
  },
  {
    "text": "and we have selected",
    "start": "247950",
    "end": "249510"
  },
  {
    "text": "as we have clicked on view log\ninsights from the log group.",
    "start": "249510",
    "end": "252599"
  },
  {
    "text": "That log group is selected over here.",
    "start": "252600",
    "end": "254790"
  },
  {
    "text": "Oh, now what we will do is we\nwill just add a filter over",
    "start": "254790",
    "end": "257970"
  },
  {
    "text": "here and use the JSON\nkey, which we have added.",
    "start": "257970",
    "end": "262740"
  },
  {
    "text": "So HTTP Method",
    "start": "262740",
    "end": "266669"
  },
  {
    "text": "is equal to get,",
    "start": "266670",
    "end": "267817"
  },
  {
    "text": "and now click on run query.",
    "start": "275580",
    "end": "276932"
  },
  {
    "text": "So as you can see now,",
    "start": "280080",
    "end": "281733"
  },
  {
    "text": "we are now using the HTTP method,",
    "start": "282990",
    "end": "286082"
  },
  {
    "text": "which we had added by\ntransforming the logs,",
    "start": "287262",
    "end": "291210"
  },
  {
    "text": "and we are able to\ngenerate some log insights.",
    "start": "291210",
    "end": "294150"
  },
  {
    "text": "Similarly, other logs\ncan also be transformed",
    "start": "294150",
    "end": "298380"
  },
  {
    "text": "and you can enable log\nanalytics for your application.",
    "start": "298380",
    "end": "302878"
  },
  {
    "text": "Thank you.",
    "start": "302878",
    "end": "303962"
  }
]