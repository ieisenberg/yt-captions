[
  {
    "text": "In this demo, we'll show you an example of how to\nuse Amazon Honeycode to build and customize",
    "start": "0",
    "end": "8000"
  },
  {
    "text": "an app without programming.",
    "start": "8000",
    "end": "10920"
  },
  {
    "text": "Amazon Honeycode is a fully managed service",
    "start": "11080",
    "end": "14220"
  },
  {
    "text": "that allows you to quickly build powerful mobile",
    "start": "14220",
    "end": "18040"
  },
  {
    "text": "and web apps, with no programming required!",
    "start": "18040",
    "end": "20700"
  },
  {
    "text": "With Honeycode, you can use a spreadsheet interface\nalong with a visual application builder to create apps.",
    "start": "20700",
    "end": "28900"
  },
  {
    "text": "You can build apps for scenarios like\ncustomer tracking, resource tracking, operations",
    "start": "28900",
    "end": "36900"
  },
  {
    "text": "monitoring, approval processes, project\nmanagement, and many more.",
    "start": "36900",
    "end": "44200"
  },
  {
    "text": "When getting started, you can create a new workbook,",
    "start": "44200",
    "end": "48200"
  },
  {
    "text": "import existing data, or use a template.",
    "start": "48200",
    "end": "52496"
  },
  {
    "text": "For this demo,",
    "start": "52496",
    "end": "54000"
  },
  {
    "text": "we’ll use the Purchase Order, or PO, Approval\napp template. This template comes with an app",
    "start": "54000",
    "end": "62000"
  },
  {
    "text": "that allows users to create new budget requests.",
    "start": "62000",
    "end": "67820"
  },
  {
    "text": "It also allows Managers to view\nand approve PO requests.",
    "start": "67820",
    "end": "69800"
  },
  {
    "text": "We’ll show you how to make some\nimprovements to this app.",
    "start": "71980",
    "end": "75240"
  },
  {
    "text": "We’ll update the app so",
    "start": "75240",
    "end": "76799"
  },
  {
    "text": "that users can create categories",
    "start": "76800",
    "end": "79840"
  },
  {
    "text": "and enter them when \nrequesting a new PO.",
    "start": "79840",
    "end": "82719"
  },
  {
    "text": "Then we’ll add an automated notification",
    "start": "83840",
    "end": "86200"
  },
  {
    "text": "so that users get a confirmation whenever they\nsubmit a request.",
    "start": "86200",
    "end": "91139"
  },
  {
    "text": "We’ll start by launching the",
    "start": "91139",
    "end": "93300"
  },
  {
    "text": "PO Approvals Template from the Create\nWorkbook menu.",
    "start": "93300",
    "end": "97582"
  },
  {
    "text": "This provides us with a pre-built",
    "start": "97582",
    "end": "100300"
  },
  {
    "text": "app and tables containing the app’s data.",
    "start": "100300",
    "end": "104300"
  },
  {
    "text": "Next, let’s create a new table that lists the options",
    "start": "105680",
    "end": "111100"
  },
  {
    "text": "for PO category. I could enter this data manually,\nbut instead I’ll upload a CSV file containing the",
    "start": "111100",
    "end": "119799"
  },
  {
    "text": "categories and then name it “Category”.",
    "start": "119800",
    "end": "125060"
  },
  {
    "text": "Now that we have our Category list, let’s link it to the",
    "start": "125060",
    "end": "129800"
  },
  {
    "text": "table where our PO requests will be stored. We\nadd a new column, and name it Category.",
    "start": "129800",
    "end": "138160"
  },
  {
    "text": "Next we create a picklist by formatting it as a rowlink,\nand set the source as the newly added Category table.",
    "start": "138600",
    "end": "149620"
  },
  {
    "text": "Now we should be able to go back to our column \nand pick options for it!",
    "start": "151080",
    "end": "155860"
  },
  {
    "text": "Now, let’s go ahead and update the PO Request",
    "start": "155860",
    "end": "160300"
  },
  {
    "text": "app so that users can select a PO category when\nsubmitting requests.",
    "start": "160300",
    "end": "166440"
  },
  {
    "text": "We will add a new Content Box\nto serve as a label for our new field,",
    "start": "166440",
    "end": "171760"
  },
  {
    "text": "We can also change the font \nto match the rest of our App.",
    "start": "172980",
    "end": "177400"
  },
  {
    "text": "Next we add a picklist,",
    "start": "177400",
    "end": "180599"
  },
  {
    "text": "using the Category table as our source.",
    "start": "180600",
    "end": "184500"
  },
  {
    "text": "We make sure to name the picklist Category.",
    "start": "185780",
    "end": "191151"
  },
  {
    "text": "Next, we would normally add an action \nto record the category data",
    "start": "191160",
    "end": "196120"
  },
  {
    "text": "when the submit button is pressed,\nbut for the purposes of this demo,",
    "start": "196120",
    "end": "201900"
  },
  {
    "text": "we’ll assume that this step is complete.",
    "start": "201900",
    "end": "204879"
  },
  {
    "text": "Now, what if we want to \nnotify users whenever they submit requests?",
    "start": "205880",
    "end": "210780"
  },
  {
    "text": "To do this, we'll create an automation",
    "start": "210780",
    "end": "216200"
  },
  {
    "text": "that sends a notification to the user \nwhenever a new request is made.",
    "start": "216200",
    "end": "220319"
  },
  {
    "text": "We set the condition that triggers the\nautomation for whenever a new row is added to",
    "start": "220320",
    "end": "226700"
  },
  {
    "text": "the PO table.",
    "start": "226760",
    "end": "228580"
  },
  {
    "text": "Next, we choose the notify action.",
    "start": "229300",
    "end": "232400"
  },
  {
    "text": "We can now set the recipient as the submitter.",
    "start": "232400",
    "end": "237379"
  },
  {
    "text": "We'll enter a subject line\n and the notification message as well.",
    "start": "238640",
    "end": "243760"
  },
  {
    "text": "We can even dynamically reference data \nfrom the PO table,",
    "start": "244640",
    "end": "249860"
  },
  {
    "text": "such as the description of the request.",
    "start": "249860",
    "end": "253520"
  },
  {
    "text": "Finally, we publish the automation live.",
    "start": "254280",
    "end": "258900"
  },
  {
    "text": "Now let’s test the updated app since the changes\nwe’ve made are instantly live for all users of our app.",
    "start": "258900",
    "end": "266520"
  },
  {
    "text": "We’ll submit a new PO request, and then switch back\nto the Table view and here we can see that",
    "start": "267120",
    "end": "274900"
  },
  {
    "text": "our new PO has been added to the A_PO table.\nWe can also see in the notifications that our",
    "start": "274900",
    "end": "284400"
  },
  {
    "text": "automation has run.",
    "start": "284400",
    "end": "286120"
  },
  {
    "text": "My Honeycode mobile app\nalso sent a notification.",
    "start": "287320",
    "end": "292040"
  },
  {
    "text": "Finally, we’ll share the app \nwith other members of our team.",
    "start": "292360",
    "end": "296300"
  },
  {
    "text": "Only users that are members of your team are",
    "start": "297180",
    "end": "299699"
  },
  {
    "text": "able to receive the invitation to the app.",
    "start": "299700",
    "end": "303700"
  },
  {
    "text": "This is just one example of how you can quickly get started with Amazon Honeycode.",
    "start": "303800",
    "end": "309199"
  },
  {
    "text": "Customers can get started \ncreating applications in minutes,",
    "start": "309200",
    "end": "313080"
  },
  {
    "text": "build applications with up to 20 users for free,",
    "start": "313080",
    "end": "317159"
  },
  {
    "text": "and only pay for the number of users \nand amount of data used",
    "start": "317160",
    "end": "321980"
  },
  {
    "text": "for larger applications.",
    "start": "321980",
    "end": "324340"
  },
  {
    "text": "Visit honeycode.aws to\nget started and check out",
    "start": "324340",
    "end": "327900"
  },
  {
    "text": "the Honeycode Community at\nhoneycodecommunity.aws",
    "start": "327900",
    "end": "333660"
  }
]