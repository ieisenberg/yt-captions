[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "um thanks a lot everyone for coming uh this is Introduction to Amazon Dynamo DB",
    "start": "680",
    "end": "5799"
  },
  {
    "text": "uh you will be hearing from three of us today so uh I'm Dave Lang I'm the",
    "start": "5799",
    "end": "13280"
  },
  {
    "text": "product manager for Dynamo DB um you'll also be hearing from Eric nalon who's the co-founder and CTO of nexmo and",
    "start": "13280",
    "end": "19119"
  },
  {
    "start": "17000",
    "end": "17000"
  },
  {
    "text": "Eddie dingles who's the technical lead at Earth networks so I'll give you just a quick overview of what Dynamo is uh",
    "start": "19119",
    "end": "24359"
  },
  {
    "text": "why you might care U what we were thinking when we built the thing uh and then these guys will talk to you a bit about how they're actually using it",
    "start": "24359",
    "end": "31960"
  },
  {
    "text": "production so Dynamo DB was really born out of a lot of what we learned um from",
    "start": "32480",
    "end": "37559"
  },
  {
    "text": "coming from two different directions one was running really highs scale high performance databases uh to serve amazon.com and we had very stringent",
    "start": "37559",
    "end": "44600"
  },
  {
    "text": "performance and scale requirements there and we learned a lot about it um but we also learned a lot about how to run a",
    "start": "44600",
    "end": "49640"
  },
  {
    "text": "service just by virtue of AWS you know we learned a lot of know you can have a great technology but if it's a bad",
    "start": "49640",
    "end": "54920"
  },
  {
    "text": "service you know it may not go anywhere and uh we we've been really",
    "start": "54920",
    "end": "60559"
  },
  {
    "text": "happy with the response we've gotten we've been really grateful Dynamo is actually the fastest growing service that AWS has ever launched um so we're",
    "start": "60559",
    "end": "66560"
  },
  {
    "text": "really appreciative of the response we've gotten from the developer community so what is the thing so Dynamo",
    "start": "66560",
    "end": "72720"
  },
  {
    "start": "71000",
    "end": "71000"
  },
  {
    "text": "DB is a fully managed non-relational database service and when I say service I mean you access Dynamo DB via API",
    "start": "72720",
    "end": "79080"
  },
  {
    "text": "you're not worrying about Hardware software any of that stuff you're just um using the database really as a",
    "start": "79080",
    "end": "84119"
  },
  {
    "text": "service uh it's built exclusively on top of solid state drives uh we actually have a custom Hardware stack uh tun",
    "start": "84119",
    "end": "90200"
  },
  {
    "text": "specifically for the performance and scale needs of Dynamo uh it's designed to operate at any throughput rate um",
    "start": "90200",
    "end": "95640"
  },
  {
    "text": "with consistent low latency performance uh and there's no limit to the amount of storage that you can put into your Dynamo DB",
    "start": "95640",
    "end": "102119"
  },
  {
    "text": "table and when we were building it we had a few uh design philosophies or tenants in mind and one uh and this is",
    "start": "102119",
    "end": "108479"
  },
  {
    "start": "103000",
    "end": "103000"
  },
  {
    "text": "really something we learned through AWS is we really wanted this to be a really really easy to use service like we've had really Advanced and awesome",
    "start": "108479",
    "end": "114880"
  },
  {
    "text": "Technologies before that were hard to use uh you know sort of internally and we noticed that as that technology",
    "start": "114880",
    "end": "120920"
  },
  {
    "text": "propagated um we would get a lot of push back if the learning curve was high it's not efficient if you build something awesome that everyone has to learn how",
    "start": "120920",
    "end": "127240"
  },
  {
    "text": "to use uh and spend a ton of time on that step uh so we wanted it to just be ridiculously easy to use um we wanted",
    "start": "127240",
    "end": "134319"
  },
  {
    "text": "consistent high performance you know it's not that hard to build something that is really highly performant sometimes but it's really hard to deal",
    "start": "134319",
    "end": "140720"
  },
  {
    "text": "with a database that is only performant sometimes you know Monday it's great Tuesday it's not great that's really",
    "start": "140720",
    "end": "145879"
  },
  {
    "text": "hard to deal with and we wanted it to just be extremely consistent a very very tight band around the the range of",
    "start": "145879",
    "end": "151599"
  },
  {
    "text": "latencies um we also wanted it to be an extremely high high durable uh excuse me",
    "start": "151599",
    "end": "156760"
  },
  {
    "text": "highly durable and highly available service you know again you can get high performance if you're willing to you know pretty easily if you're willing to",
    "start": "156760",
    "end": "162599"
  },
  {
    "text": "compromise on durability and availability but we really really didn't want to do that we wanted this to be a rock solid highly available very durable",
    "start": "162599",
    "end": "168879"
  },
  {
    "text": "service and then on top of that get the performance uh and the last design tenant was that we really wanted this to",
    "start": "168879",
    "end": "174159"
  },
  {
    "text": "be a a service where scalability was our problem scaling is hard uh we've had to do it a ton am on uh we've learned a lot",
    "start": "174159",
    "end": "181959"
  },
  {
    "text": "and it just seemed really inefficient to ask everyone else to learn how to do it themselves to use our services so we wanted to build something where",
    "start": "181959",
    "end": "188280"
  },
  {
    "text": "scalability was something where you tell us what you want and we just sort of figure it out for",
    "start": "188280",
    "end": "193319"
  },
  {
    "text": "you so Dynamo has a flexible data model it's a non-relational database there's no fixed schema um and data within the",
    "start": "193319",
    "end": "200840"
  },
  {
    "start": "194000",
    "end": "194000"
  },
  {
    "text": "database is stored as a a series of key value or key attribute",
    "start": "200840",
    "end": "207000"
  },
  {
    "text": "pairs um and the way you access it is uh so every Dynamo DB table has a primary",
    "start": "207040",
    "end": "213040"
  },
  {
    "text": "key that primary key can either be a single attribute hash key or a composite hash range key so a single attribute",
    "start": "213040",
    "end": "219720"
  },
  {
    "text": "hash key basically turns Dynamo into a massively scalable low latency hash table um the composite hash range key uh",
    "start": "219720",
    "end": "226879"
  },
  {
    "text": "that'll give you something along that lets you run uh range queries within a hash bucket so uh for example you could",
    "start": "226879",
    "end": "232879"
  },
  {
    "text": "say make my hash key the user ID and make my range key the timestamp and now",
    "start": "232879",
    "end": "239040"
  },
  {
    "text": "you can run queries like hey give me all the records for this user between these two time periods um we support multiple data",
    "start": "239040",
    "end": "245879"
  },
  {
    "text": "types we have string number and binary um we also so I mentioned that we store attribute value pairs the value can be a",
    "start": "245879",
    "end": "252439"
  },
  {
    "text": "single value like a single string or it can also be a set of strings numbers or binary data types um we also support strong and",
    "start": "252439",
    "end": "259799"
  },
  {
    "text": "eventual consistency so some of you know about this some some of you don't um eventual",
    "start": "259799",
    "end": "265120"
  },
  {
    "text": "consistency is basically it if you uh if you do an eventually consist consist read for example you're accepting the",
    "start": "265120",
    "end": "272680"
  },
  {
    "text": "risk that your data is just slightly stale that it may not it's not guaranteed to be the most recent thing",
    "start": "272680",
    "end": "278280"
  },
  {
    "text": "that was written into the database and if you're okay with that risk there are a lot of uh performance and cost benefits that you can get in exchange",
    "start": "278280",
    "end": "284000"
  },
  {
    "text": "you can really really reduce costs pretty dras drastically if you use a mental consistency um and you can have an even more highly available service um",
    "start": "284000",
    "end": "291360"
  },
  {
    "text": "but knowing that the data might be slightly scale or slightly stale um that can be a hard thing to program around so",
    "start": "291360",
    "end": "298160"
  },
  {
    "text": "a lot of people prefer strong consisten where you're absolutely guaranteed uh to get the latest data that was written",
    "start": "298160",
    "end": "303600"
  },
  {
    "text": "into the database so you know we we learned that running some eventually consistent data bases both externally",
    "start": "303600",
    "end": "308720"
  },
  {
    "text": "and internally at Amazon um and so we decided with Dynamo we would just offer both so you have the option at the API",
    "start": "308720",
    "end": "314440"
  },
  {
    "text": "level so when you when you do a read from Dynamo you can actually specify if you want the guarantee of strong consistency or if you're willing to",
    "start": "314440",
    "end": "321199"
  },
  {
    "text": "accept the risk of eventual consistency and get the cost benefit so we offer",
    "start": "321199",
    "end": "326400"
  },
  {
    "start": "327000",
    "end": "327000"
  },
  {
    "text": "both so I mentioned that we wanted this to be a very highly available and highly durable solution and part of how we",
    "start": "328639",
    "end": "334800"
  },
  {
    "text": "managed to do that with Dynamo is that we made it a A multi-a or a regional service so essentially when you create a",
    "start": "334800",
    "end": "340800"
  },
  {
    "text": "a table in Dynamo we automatically spread the data in that table across multiple availability zones uh you know",
    "start": "340800",
    "end": "346199"
  },
  {
    "text": "an availability Zone you can think of it like a data center uh within an Amazon region uh and we actually won't",
    "start": "346199",
    "end": "351560"
  },
  {
    "text": "acknowledge a right as successful to Dynamo until it's at least on disk in at least two different geographically",
    "start": "351560",
    "end": "356680"
  },
  {
    "text": "distinct availability zones you so we spent a lot of time doing the math on this this and and we believe we've come come up with a pretty nice blend of you",
    "start": "356680",
    "end": "362560"
  },
  {
    "text": "know very very high durability and high availability while still maintaining the",
    "start": "362560",
    "end": "368120"
  },
  {
    "text": "latency so let's talk a little bit about uh how this used to work for Austin and for others before Dynamo um so suppose",
    "start": "370680",
    "end": "378639"
  },
  {
    "text": "that you needed to create a database to support your app and that that database needed to be able to handle say a th000",
    "start": "378639",
    "end": "384160"
  },
  {
    "text": "writes a second or you know 10,000 reads a second or you know whatever scale is appropriate for your app um once you had",
    "start": "384160",
    "end": "390199"
  },
  {
    "text": "figured out what you needed in most cases you would have to go and launch on a fairly extensive and potentially",
    "start": "390199",
    "end": "395639"
  },
  {
    "text": "painful exercise of figuring out how you would achieve that performance you know you you have to think about now what",
    "start": "395639",
    "end": "401039"
  },
  {
    "text": "Hardware am I going to buy you know or if I'm buying an instance from Amazon or another provider you know what instance type what combination of uh you know",
    "start": "401039",
    "end": "407960"
  },
  {
    "text": "memory and CPU and you know hard disk specs are going to give me the actual performance we want and so you know this",
    "start": "407960",
    "end": "414000"
  },
  {
    "text": "is great and a lot of you know a lot of the things that you can buy are really great General tools but if you're looking specifically for database performance",
    "start": "414000",
    "end": "420840"
  },
  {
    "text": "the the problem that we saw when we were designing Dynamo was that it felt like kind of an inefficient way to communicate with our customers was to",
    "start": "420840",
    "end": "426800"
  },
  {
    "text": "ask them to tell us all this stuff on the left when what they actually wanted was the stuff on the right and so we",
    "start": "426800",
    "end": "432280"
  },
  {
    "text": "knew what our customers were basically going to be coming to us and telling us hey here's what we think we need to achieve some goal that we're not going",
    "start": "432280",
    "end": "438280"
  },
  {
    "text": "to tell you about and that just kind of made it hard to serve our customers well and we didn't want to do",
    "start": "438280",
    "end": "443919"
  },
  {
    "text": "that we basically wanted to say forget the stuff on the left just talk to us about the stuff on the right we have a",
    "start": "444360",
    "end": "450240"
  },
  {
    "text": "ton of experience with implementing massively scalable databases why would we make you learn how to do that so tell",
    "start": "450240",
    "end": "455360"
  },
  {
    "text": "us what you're trying to achieve and let us figure out the underlying implementation and out of that came",
    "start": "455360",
    "end": "461199"
  },
  {
    "start": "461000",
    "end": "461000"
  },
  {
    "text": "something that we call the provision throughput model where we basically want you to tell us the performance you're",
    "start": "461199",
    "end": "466240"
  },
  {
    "text": "trying to achieve which is the goal and then just forget about the rest that's",
    "start": "466240",
    "end": "471440"
  },
  {
    "text": "Amazon's problem that's what I meant when I said scalability is our problem you you do not think about instance types you do not think about hard dis",
    "start": "471440",
    "end": "477759"
  },
  {
    "text": "space just tell us the performance you're trying to achieve so when you create a table in Dynamo DV the way it",
    "start": "477759",
    "end": "483759"
  },
  {
    "text": "works is you create a table and either through the Management console or by API and you basically tell us I want the",
    "start": "483759",
    "end": "489240"
  },
  {
    "text": "table to be able to handle this much write throughput capacity and this much read throughput so for example I might",
    "start": "489240",
    "end": "494520"
  },
  {
    "text": "say I want a table that can handle 10,000 writes a second and 20,000 reads A second we don't even need to know",
    "start": "494520",
    "end": "499639"
  },
  {
    "text": "about storage Dynamo is uh has no limit to storage um and at this point your job",
    "start": "499639",
    "end": "504720"
  },
  {
    "text": "is done it is now Amazon's job to figure out very very quickly within seconds or minutes how do we provision machine",
    "start": "504720",
    "end": "511000"
  },
  {
    "text": "resources behind the scenes so that you achieve the res the throughput that you just asked us",
    "start": "511000",
    "end": "516159"
  },
  {
    "text": "for and you are absolutely not locked into that I want to be very clear about that Dynamo is scalable but it also you",
    "start": "516159",
    "end": "522680"
  },
  {
    "text": "can change the scale on the fly so use provision your table I want 10,000 rights a second great we give it to you",
    "start": "522680",
    "end": "528560"
  },
  {
    "text": "the next day you realize you need 20,000 um see if you can just hold it to the end we we'll try and um actually I did",
    "start": "528560",
    "end": "535399"
  },
  {
    "text": "forget to say that uh we will leave time at the end for questions um but if by any chance we run out of time uh we will",
    "start": "535399",
    "end": "541279"
  },
  {
    "text": "be hanging out in the hallway so we'd be happy to take all questions um sorry I just don't want to run into their time",
    "start": "541279",
    "end": "547320"
  },
  {
    "text": "so um so for with Dynamo you can change your scale on the Fly um so you just go",
    "start": "547320",
    "end": "554000"
  },
  {
    "text": "back into the Management console or send an API call and say okay I had 10,000 rights per second before now I would like 20 and behind the scenes Dynamo",
    "start": "554000",
    "end": "561079"
  },
  {
    "text": "will figure out how to make that happen without downtime they'll just spread your your results your data over more",
    "start": "561079",
    "end": "566279"
  },
  {
    "text": "machine resources you know provision more capacity for you scale it up and it just kind of works and uh you pay by the",
    "start": "566279",
    "end": "572600"
  },
  {
    "text": "hour for the provision throughput capacity that you've asked us to provision it's a very similar model to an instance and that you pay by the hour",
    "start": "572600",
    "end": "578399"
  },
  {
    "text": "for the capacity of an instance except we're asking you to specify the throughput capacity instead of specifying the instance type and again",
    "start": "578399",
    "end": "584800"
  },
  {
    "text": "you don't have to tell us anything about storage you put storage in we charge you for it you take it out we don't charge you for",
    "start": "584800",
    "end": "590920"
  },
  {
    "text": "it so uh here's an example uh of how you would do it so this is our Management",
    "start": "590920",
    "end": "596079"
  },
  {
    "text": "console so if you were to go in and create a table in Mo this is the first thing that you would see we're basically",
    "start": "596079",
    "end": "601920"
  },
  {
    "text": "asking you what's the name of the table uh in this case customers and what's the uh the primary key that you want in this",
    "start": "601920",
    "end": "607160"
  },
  {
    "text": "case I picked a hash table uh with the hash key being customer",
    "start": "607160",
    "end": "612920"
  },
  {
    "text": "ID the Second Step would be how much throughput capacity you want in this case I'm picking enough capacity to do",
    "start": "615600",
    "end": "621120"
  },
  {
    "text": "to do 10 wres and 10 reads per second um and at this point we now have all the",
    "start": "621120",
    "end": "626160"
  },
  {
    "text": "information we need to create the table that you've asked for um there is the third step I don't have a slide for where you can optionally set up uh",
    "start": "626160",
    "end": "632160"
  },
  {
    "text": "throughput alarms uh so that you know if my throughput gets close enough to my provision capacity we can send you an",
    "start": "632160",
    "end": "637399"
  },
  {
    "text": "alarm and let you know that you might want to consider raising it I didn't include a slide about that but it's really a two-step process it's the only",
    "start": "637399",
    "end": "642600"
  },
  {
    "text": "required steps and at this point you have a table we actually have a a video floating around the dev team of someone six-year-old creating a massive table",
    "start": "642600",
    "end": "649079"
  },
  {
    "text": "just because this is all it takes I wasn't allowed to release it so",
    "start": "649079",
    "end": "654240"
  },
  {
    "start": "652000",
    "end": "652000"
  },
  {
    "text": "sorry um so yeah and you know and again I mentioned it before you can change the scale with a click of a button there's a",
    "start": "654240",
    "end": "659320"
  },
  {
    "text": "similar wizard to the one I just show you where you just go back in and say oh I just want to change those two numbers I set for throughput capacity uh and",
    "start": "659320",
    "end": "665200"
  },
  {
    "text": "then you get it so one of the problems I mentioned",
    "start": "665200",
    "end": "671240"
  },
  {
    "start": "668000",
    "end": "668000"
  },
  {
    "text": "that uh Dynamo is designed to solve is just scaling the database up and down and um making that just work and not",
    "start": "671240",
    "end": "676839"
  },
  {
    "text": "spending all your time on it so that's one of the things we're trying to solve another thing or another benefit of Dynamo uh is that we try to make",
    "start": "676839",
    "end": "683920"
  },
  {
    "text": "capacity forecasting less of a scary painful exercise um and you know I imagine that most people in the room",
    "start": "683920",
    "end": "689920"
  },
  {
    "text": "have been through capacity forecasting we all got it wrong you know it was only a question of like how wrong did we get",
    "start": "689920",
    "end": "695160"
  },
  {
    "text": "it and in which direction um it's a it's a difficult process um there's a lot at",
    "start": "695160",
    "end": "700600"
  },
  {
    "text": "stake um and it takes a lot of time like if you want to prepare your database to run it 10,000 rights a second and you're doing it yourself um and and you're",
    "start": "700600",
    "end": "707639"
  },
  {
    "text": "running your own software you really have to go and do it to make sure that it works and run extensive tests on the various scenarios",
    "start": "707639",
    "end": "713839"
  },
  {
    "text": "at that scale it's a it's a difficult process so there there are a couple of philosophies that you can take um when",
    "start": "713839",
    "end": "719000"
  },
  {
    "text": "you're thinking about capacity forecasting so one is to take sort of a timid conservative approach um just",
    "start": "719000",
    "end": "725320"
  },
  {
    "start": "722000",
    "end": "722000"
  },
  {
    "text": "basically a provision what way more than you think that you'll need or at least test at that scale it's a nice approach",
    "start": "725320",
    "end": "732320"
  },
  {
    "text": "in terms of customer experience because you can really be sure that it will work in the scenario that you're worried",
    "start": "732320",
    "end": "737800"
  },
  {
    "text": "about um or even you know far beyond the capacity that you think you'll need so that's great uh it's an expensive way to",
    "start": "737800",
    "end": "743399"
  },
  {
    "text": "go you often end up buying too much capacity you certainly have to spend a lot of time testing at higher scale if you really want to be sure that it's",
    "start": "743399",
    "end": "748680"
  },
  {
    "text": "going to work so the conservative approach is great for serving customers and ensuring a good experience um but it",
    "start": "748680",
    "end": "753839"
  },
  {
    "text": "does come with a cost alternatively you can take a more aggressive approach uh and really try",
    "start": "753839",
    "end": "760040"
  },
  {
    "start": "759000",
    "end": "759000"
  },
  {
    "text": "and cut it close to the line try and uh provision only what you need which is a really cost minimizing way to go if",
    "start": "760040",
    "end": "766880"
  },
  {
    "text": "you're right um and if you get it right great you saved a ton of money if you're wrong um it's very very risky you may",
    "start": "766880",
    "end": "773199"
  },
  {
    "text": "you know especially if you're wrong in the direction of not having enough capacity you may find yourself in an emergency situation where you need to",
    "start": "773199",
    "end": "778480"
  },
  {
    "text": "scale up very very rapidly uh and you've never done it before and you don't know if it's going to work it's a scary place to be and it puts your business at",
    "start": "778480",
    "end": "785519"
  },
  {
    "text": "risk so we're very familiar with this problem at Amazon um this is sort of a typical holiday traffic pattern we might",
    "start": "785519",
    "end": "792279"
  },
  {
    "start": "787000",
    "end": "787000"
  },
  {
    "text": "see on Amazon um you know it Peaks towards the end of the month you probably guess what months I might be talking about and uh you know so we",
    "start": "792279",
    "end": "800240"
  },
  {
    "text": "would weeks or months in advance spend a ton of time thinking about what this curve might look like and then coming up",
    "start": "800240",
    "end": "807399"
  },
  {
    "text": "with a capacity model that'll work for us excuse me um and typically what we would",
    "start": "807399",
    "end": "813199"
  },
  {
    "text": "have to do is provision a capacity that is a little bit above the peak that we think we're going to get um we want to",
    "start": "813199",
    "end": "819279"
  },
  {
    "text": "make you know we tend we take the approach on Amazon we really want our customers to have a great experience so we don't want to cut it too close to the",
    "start": "819279",
    "end": "824880"
  },
  {
    "text": "line uh and so you know this is years ago what this would have looked like for us um and there's waste like everything",
    "start": "824880",
    "end": "832279"
  },
  {
    "text": "below between the capacity line and the actual traffic line is capacity that technically we didn't need you know you",
    "start": "832279",
    "end": "838519"
  },
  {
    "text": "could argue about whether or not it's wasteful but um there's definitely an opportunity to optimize",
    "start": "838519",
    "end": "843680"
  },
  {
    "text": "there with Dynamo we can cut it a lot closer to the line the ability to go",
    "start": "843680",
    "end": "849120"
  },
  {
    "text": "into I mean if you were trying to scale a database from say 100 rights a second to a million like on your own running",
    "start": "849120",
    "end": "856240"
  },
  {
    "text": "your own software on your own instance that is hard strange things happen at high scale like unexpected things you",
    "start": "856240",
    "end": "862000"
  },
  {
    "text": "have to spend a lot of time preparing for that with Dynamo you basically go into the Management console and click a",
    "start": "862000",
    "end": "867959"
  },
  {
    "text": "couple of buttons and just wait for to finish our work which won't take very long um which allows you to really ride",
    "start": "867959",
    "end": "873360"
  },
  {
    "text": "the wave a little bit more closely to minimize costs and it's also a really important",
    "start": "873360",
    "end": "879920"
  },
  {
    "start": "878000",
    "end": "878000"
  },
  {
    "text": "point that in addition to minimizing cost you're also minimizing risk um you know you're again your forecast will be",
    "start": "879920",
    "end": "885800"
  },
  {
    "text": "wrong it's just a question of how much and in what direction and the scary thing about a forecasting process where if you really need to significantly",
    "start": "885800",
    "end": "891600"
  },
  {
    "text": "change your forecast uh or change your capacity to a level that you haven't been before uh that I mean that can be a",
    "start": "891600",
    "end": "897959"
  },
  {
    "text": "multi-week or a month a month-long project if you're trying to figure out how to build a distributed system that",
    "start": "897959",
    "end": "903199"
  },
  {
    "text": "will operate at that scale um so Dynamo DB helps in two ways one is that it brings your forecast window in a lot um",
    "start": "903199",
    "end": "910880"
  },
  {
    "text": "the fact that you can change your capacity in minutes um on demand as opposed to having to sit out plan the",
    "start": "910880",
    "end": "917320"
  },
  {
    "text": "process and maybe take a week to do it that means that if you're wrong you can change within minutes that means that",
    "start": "917320",
    "end": "922800"
  },
  {
    "text": "you can cut it closer uh and be even more aggressive about optimizing for cost the other advantage is that if you",
    "start": "922800",
    "end": "930079"
  },
  {
    "text": "have a growing app you're by definition continuing to hit um scales that you've never seen before you're doing it for",
    "start": "930079",
    "end": "935959"
  },
  {
    "text": "the first time over and over and over and over again um Dynamo is a service that is explicitly designed to reach",
    "start": "935959",
    "end": "942240"
  },
  {
    "text": "massive scale and we do it all the time so the first time that you're doing it is the 100,000th time that one of our",
    "start": "942240",
    "end": "948279"
  },
  {
    "text": "customers has done it um and so you don't have to spend as much time worrying about whether or not you have a",
    "start": "948279",
    "end": "953560"
  },
  {
    "text": "system that can even achieve that scale you get to Leverage The Experience and the code and the fact that Dynamo has a",
    "start": "953560",
    "end": "959800"
  },
  {
    "text": "team that does nothing but eat sleep and dream about scaling and performance problems and leverage that experience",
    "start": "959800",
    "end": "965279"
  },
  {
    "text": "for your app and we do this because a lot of the",
    "start": "965279",
    "end": "972319"
  },
  {
    "start": "972000",
    "end": "972000"
  },
  {
    "text": "value of Dynamo is that we're just taking a lot of stuff out of your hands that you shouldn't have to worry about",
    "start": "972319",
    "end": "977720"
  },
  {
    "text": "and scaling without downtime um sharding you know security inspections software",
    "start": "977720",
    "end": "983519"
  },
  {
    "text": "um just a lot of the stuff that I mean this is stuff that doesn't in almost all of your cases",
    "start": "983519",
    "end": "989680"
  },
  {
    "text": "this is not going to set your datab or your company apart you know the ability to scale a database behind the scenes is",
    "start": "989680",
    "end": "995560"
  },
  {
    "text": "more of a minimum requirement than something that's going to make your business successful part of the goal of Dynamo is that we really wanted to take",
    "start": "995560",
    "end": "1001880"
  },
  {
    "text": "a lot of this out of your hands and just say look we've got it you know we do this all the time it's more efficient like one of the most important economies",
    "start": "1001880",
    "end": "1007920"
  },
  {
    "text": "of scale that we have is expertise um and we can sell you that and let you just sort of focus on your",
    "start": "1007920",
    "end": "1015600"
  },
  {
    "text": "application and that's really a very important design philos for us like we really wanted to build something that",
    "start": "1016240",
    "end": "1023319"
  },
  {
    "text": "would um we wanted to build something that would just let you focus on your application and not focus on building",
    "start": "1023319",
    "end": "1029000"
  },
  {
    "text": "the database I mean actually I just want to go back and slide everything on the you know I I was at a startup before coming to Amazon and everything on this",
    "start": "1029000",
    "end": "1035558"
  },
  {
    "text": "list this is a list of engineering hours that you did not spend building your application and that's really painful",
    "start": "1035559",
    "end": "1041720"
  },
  {
    "text": "and we really wanted to give that back to you that's why we built Dynamo I also wanted to make a quick",
    "start": "1041720",
    "end": "1048199"
  },
  {
    "text": "announcement um for those of you who didn't see the keynote this morning uh Amazon red shift launched today uh it's",
    "start": "1048199",
    "end": "1054240"
  },
  {
    "text": "a really really cool service they've been working out on it for a long time congratulations if any of the red shift guys are here that I know they've been",
    "start": "1054240",
    "end": "1059400"
  },
  {
    "text": "working really hard on it uh it's it's basically a a massively scalable high performance and very lowcost Data",
    "start": "1059400",
    "end": "1065760"
  },
  {
    "text": "Warehouse in the cloud uh it's a colum colum based database it's it's really cool uh and it's cool for Dynamo",
    "start": "1065760",
    "end": "1072480"
  },
  {
    "text": "customers for a couple of reasons um one is that we've had a very frequent request from Dynamo customers you know",
    "start": "1072480",
    "end": "1078880"
  },
  {
    "text": "it's great that we can ingest and read and write data really really fast and at massively High scale but we also want analytics and how do we do that um so",
    "start": "1078880",
    "end": "1086840"
  },
  {
    "text": "the fact that red shift even exists is a big win for us um but we're also very happy to announce that we all we already have an integration with redshift so",
    "start": "1086840",
    "end": "1093760"
  },
  {
    "text": "Dynamo customers can create a red shift uh instance run this a simple command like this one and basically say take all",
    "start": "1093760",
    "end": "1100000"
  },
  {
    "text": "the data that's in my Dynamo table and just pass it over to uh red shift and then start running your analytics there",
    "start": "1100000",
    "end": "1106640"
  },
  {
    "text": "so the this is the extent of what you need to know to operate the uh the integration so we're really happy about",
    "start": "1106640",
    "end": "1113840"
  },
  {
    "text": "that so that's all for me for the moment I'm going to pass it over to uh Eric",
    "start": "1114320",
    "end": "1119559"
  },
  {
    "text": "who's going to talk about nexmo and how they use Dynamo you know again we'll be uh hanging around afterwards for questions so you know if any chance we",
    "start": "1119559",
    "end": "1125799"
  },
  {
    "text": "run out of time you know we will be hanging around so we'd love to talk to you [Applause]",
    "start": "1125799",
    "end": "1134320"
  },
  {
    "text": "thanks so next that next in the right one the middle one doesn't work",
    "start": "1134320",
    "end": "1140720"
  },
  {
    "text": "hello everybody so I'm Eric I'm a co-founder so I'm here today to uh to",
    "start": "1140960",
    "end": "1148720"
  },
  {
    "text": "talk about our experience with uh simple DB first and dyn DB so first uh a quick",
    "start": "1148720",
    "end": "1157320"
  },
  {
    "text": "overview of nexo so we we are a global SMS API we uh we can deliver messages to",
    "start": "1157320",
    "end": "1165799"
  },
  {
    "start": "1161000",
    "end": "1161000"
  },
  {
    "text": "200 countries uh using direct to Cario model U so basically we are the last op",
    "start": "1165799",
    "end": "1171760"
  },
  {
    "text": "before the mobile network um we also offer long virtual number in 16 country",
    "start": "1171760",
    "end": "1178480"
  },
  {
    "text": "so you can uh you can do two-way messaging uh we have three type of customer application developer or OT",
    "start": "1178480",
    "end": "1187200"
  },
  {
    "text": "player so they use nexo for two Factor authentication and P2P communication so",
    "start": "1187200",
    "end": "1194640"
  },
  {
    "text": "we have Enterprise people like Airbnb to send ification",
    "start": "1194640",
    "end": "1199880"
  },
  {
    "text": "globally we also have a reseller so if you are using today one of those guys so",
    "start": "1199880",
    "end": "1206159"
  },
  {
    "text": "there is I chance that your traffic is already going for nexo so you might test your our service it could help us to",
    "start": "1206159",
    "end": "1213440"
  },
  {
    "text": "reduce your latency and increase the quality of",
    "start": "1213440",
    "end": "1218400"
  },
  {
    "text": "delivery so here uh our challenges uh as you know SMS is short and the the volume",
    "start": "1219480",
    "end": "1227799"
  },
  {
    "start": "1220000",
    "end": "1220000"
  },
  {
    "text": "is could be quite high so in the last six months we we store more than a",
    "start": "1227799",
    "end": "1234240"
  },
  {
    "text": "billion record and we are adding more than 5 million a day and uh we wanted to",
    "start": "1234240",
    "end": "1241200"
  },
  {
    "text": "actually offer more online services to to our customer and uh one of the most",
    "start": "1241200",
    "end": "1247559"
  },
  {
    "text": "common question to our Al desk is uh what is the status of my messages so in",
    "start": "1247559",
    "end": "1253200"
  },
  {
    "text": "order to fulfill their uh requirement we wanted to make sure that all Miss",
    "start": "1253200",
    "end": "1258559"
  },
  {
    "text": "message uh are searchable in near real time after submission and um and also",
    "start": "1258559",
    "end": "1265919"
  },
  {
    "text": "that the search response type is agnostic of the volume so we have two type of query we",
    "start": "1265919",
    "end": "1272640"
  },
  {
    "text": "we can search for a given message ID or we can search for an account a number on",
    "start": "1272640",
    "end": "1278400"
  },
  {
    "text": "a given date uh so one more thing to mention uh in our case uh we have a ratio of one",
    "start": "1278400",
    "end": "1286440"
  },
  {
    "text": "read for 10,000 right so we are M mainly writing and pretty much never read and",
    "start": "1286440",
    "end": "1293000"
  },
  {
    "text": "which is probably very unusual so now uh a quick overview of",
    "start": "1293000",
    "end": "1300240"
  },
  {
    "start": "1298000",
    "end": "1298000"
  },
  {
    "text": "our messaging platform uh we have incoming traffic going to one of the Hub where we can",
    "start": "1300240",
    "end": "1308960"
  },
  {
    "text": "authenticate and authorize the request then uh depending on the destination we",
    "start": "1308960",
    "end": "1315120"
  },
  {
    "text": "route the message to one of the Gateway so so a Gateway is pretty much uh a",
    "start": "1315120",
    "end": "1321320"
  },
  {
    "text": "protocol adapter dealing with the final carrier and then it's deliver to the uh",
    "start": "1321320",
    "end": "1327320"
  },
  {
    "text": "to the handset so every component on the on the platform generate logs uh to",
    "start": "1327320",
    "end": "1333320"
  },
  {
    "text": "capture uh information like the sender the destination the price the cost and",
    "start": "1333320",
    "end": "1339799"
  },
  {
    "text": "uh the status and every component also have a",
    "start": "1339799",
    "end": "1345360"
  },
  {
    "text": "log reader putting uh messages into to local CU on the other end uh the lock",
    "start": "1345360",
    "end": "1351440"
  },
  {
    "text": "tailor is consuming the message and and actually doing two thing so one a kind",
    "start": "1351440",
    "end": "1358200"
  },
  {
    "text": "of uh generate real time aggregated report so you can go online and see you",
    "start": "1358200",
    "end": "1364760"
  },
  {
    "text": "send today 10 messages to AT&T for instance and the other task is actually",
    "start": "1364760",
    "end": "1371159"
  },
  {
    "text": "to make message searchable so we started using simple DV and uh then we actually",
    "start": "1371159",
    "end": "1381279"
  },
  {
    "text": "moved to Dynamo we run the two parallel uh the two system in parallel for 6",
    "start": "1381279",
    "end": "1386320"
  },
  {
    "text": "months and we stop uh we stop using uh simple DB uh this summer so which is",
    "start": "1386320",
    "end": "1394720"
  },
  {
    "text": "what is interesting with Dynamo is actually you can like Dave mentioned you can set the the right throughput very",
    "start": "1394720",
    "end": "1401440"
  },
  {
    "text": "high so what we did we we we put it a few uh uh thousand message per second",
    "start": "1401440",
    "end": "1409120"
  },
  {
    "text": "during a couple of days so we were able to reimport the data we had in simple DB",
    "start": "1409120",
    "end": "1414320"
  },
  {
    "text": "so then we had the two system with the exact uh same data and then we were able",
    "start": "1414320",
    "end": "1419600"
  },
  {
    "text": "to compare and to measure performance uh during a six month",
    "start": "1419600",
    "end": "1425559"
  },
  {
    "text": "period so let me uh give you more detail about",
    "start": "1425559",
    "end": "1431559"
  },
  {
    "text": "the the simple DB use case so we started 18 months ago with simple DB with the",
    "start": "1431559",
    "end": "1437799"
  },
  {
    "text": "with this kind of of setup so when you send an outband message uh it includes",
    "start": "1437799",
    "end": "1444400"
  },
  {
    "text": "several records so one it's the submitted message called empty for message terminated you have one record",
    "start": "1444400",
    "end": "1451240"
  },
  {
    "text": "for the intermediate delivery receipt and one record for the for the final",
    "start": "1451240",
    "end": "1457039"
  },
  {
    "text": "delivery re um in order to improve the right throughput uh we had to manually",
    "start": "1457039",
    "end": "1462919"
  },
  {
    "text": "partition every table using 50 noain so why 50 because there is a 250 domain",
    "start": "1462919",
    "end": "1470279"
  },
  {
    "text": "limit per account um so when you search for a given message ID is very simple",
    "start": "1470279",
    "end": "1477559"
  },
  {
    "text": "because the message ID gives you uh uh which partition to look for then it's",
    "start": "1477559",
    "end": "1483559"
  },
  {
    "text": "just a direct R and now if we want to do",
    "start": "1483559",
    "end": "1490440"
  },
  {
    "text": "oops if you want to do a more complex query uh for instance we want to search",
    "start": "1490440",
    "end": "1496240"
  },
  {
    "text": "uh messages sent for given account on a given date so because of the",
    "start": "1496240",
    "end": "1501279"
  },
  {
    "text": "partitioning we need to run uh multi uh multiple search query in parallel uh so",
    "start": "1501279",
    "end": "1508600"
  },
  {
    "text": "like uh in that case 50 thread running concurrently so once we find the the",
    "start": "1508600",
    "end": "1514080"
  },
  {
    "text": "matching ID then we go to the other table and retrieve the information and then rebuild the final uh",
    "start": "1514080",
    "end": "1522720"
  },
  {
    "text": "result um a year ago uh we have been approached by the",
    "start": "1523760",
    "end": "1529559"
  },
  {
    "start": "1526000",
    "end": "1526000"
  },
  {
    "text": "Amazon product team uh to actually test uh Dynamo so it was uh actually an",
    "start": "1529559",
    "end": "1535840"
  },
  {
    "text": "interesting move for us because we were reaching actually the insert limit with",
    "start": "1535840",
    "end": "1541960"
  },
  {
    "text": "simple DB and since our uh since our volume was going up uh the",
    "start": "1541960",
    "end": "1550080"
  },
  {
    "text": "the delay uh to make a new message searchable was getting bigger and",
    "start": "1550080",
    "end": "1555520"
  },
  {
    "text": "bigger and uh so Dynamo make the the partitioning uh transparent and solve",
    "start": "1555520",
    "end": "1561960"
  },
  {
    "text": "the the right throughput as well so however you need uh some time to Define",
    "start": "1561960",
    "end": "1568720"
  },
  {
    "text": "an external index for specific search query so let me uh look at the previous",
    "start": "1568720",
    "end": "1574720"
  },
  {
    "text": "use case now in the Dynamo DB context uh we still have the five main table but we",
    "start": "1574720",
    "end": "1581039"
  },
  {
    "text": "don't need to worri about the partitioning because it's done behind the scene but we need to create uh uh",
    "start": "1581039",
    "end": "1588360"
  },
  {
    "text": "another table for for our index so our index include a composite Ash so",
    "start": "1588360",
    "end": "1595080"
  },
  {
    "text": "including the account ID and the phone number and then we use the date as a range so in kind of regular SQL uh the",
    "start": "1595080",
    "end": "1605640"
  },
  {
    "text": "the the query will look like that so select ID from Mt where account equal",
    "start": "1605640",
    "end": "1611200"
  },
  {
    "text": "and phone number equal and dat equal so this this thing will be translated into",
    "start": "1611200",
    "end": "1617159"
  },
  {
    "text": "a uh Dynamo uh using the Java API with the following code so basically we",
    "start": "1617159",
    "end": "1624360"
  },
  {
    "text": "create a a condition object so it's a so using the date range between two date",
    "start": "1624360",
    "end": "1631760"
  },
  {
    "text": "and then in the query you put the the as key and the condition so if now we run uh this uh",
    "start": "1631760",
    "end": "1641000"
  },
  {
    "text": "this code it's it's more simple because we first just qu the index so there is no",
    "start": "1641000",
    "end": "1648200"
  },
  {
    "text": "no parallel search anymore so we retrieve matching IDs and then we go to",
    "start": "1648200",
    "end": "1653279"
  },
  {
    "text": "all the other table to rebuild uh our our result",
    "start": "1653279",
    "end": "1659600"
  },
  {
    "text": "set and uh that's it for me and uh feel free to test uh our system and if you",
    "start": "1659600",
    "end": "1667039"
  },
  {
    "text": "want to get extra credit uh feel free to text your email at this number",
    "start": "1667039",
    "end": "1674200"
  },
  {
    "text": "1265 uh no sorry 1 26754 65 a",
    "start": "1674200",
    "end": "1680919"
  },
  {
    "text": "WS Ed thank [Applause]",
    "start": "1681840",
    "end": "1692399"
  },
  {
    "text": "you all right so hi I'm uh the technical lead at Earth networks so my name is",
    "start": "1692399",
    "end": "1698039"
  },
  {
    "text": "Eddie uh let's get to the next slide um and what I like to talk to you today about is how uh we at Earth networks are",
    "start": "1698039",
    "end": "1704159"
  },
  {
    "text": "using Dynamo DB specifically what I want to talk about is how we used it to do uh consumer level lightning alerts uh on",
    "start": "1704159",
    "end": "1710600"
  },
  {
    "text": "our mobile platforms so first a little background uh Earth networks gathers and analyzes Global uh atmospheric weather",
    "start": "1710600",
    "end": "1717679"
  },
  {
    "text": "uh information uh we also have our own proprietary lightning Network which we can use to uh locate Global lightning",
    "start": "1717679",
    "end": "1725279"
  },
  {
    "text": "anywhere in the world with a fairly High degree of accuracy and one thing to note here is that lightning uh is a very good",
    "start": "1725279",
    "end": "1731480"
  },
  {
    "text": "indicator of severe weather so for example uh lightning will pre uh pre uh occur before uh tor nates and stuff like",
    "start": "1731480",
    "end": "1739039"
  },
  {
    "text": "that so Earth networks is also the owner and operator of the WeatherBug brand so we have a presence on mobile desktop and",
    "start": "1739039",
    "end": "1744880"
  },
  {
    "text": "web and uh so into what we were going to do with Dynamo DB we actually got a problem from our CEO starting at the",
    "start": "1744880",
    "end": "1751480"
  },
  {
    "start": "1747000",
    "end": "1747000"
  },
  {
    "text": "beginning of last year to actually take what we've done in the Enterprise space which is deliver uh lightning alerts uh",
    "start": "1751480",
    "end": "1757559"
  },
  {
    "text": "and actually bring it out to a consumer scale and what he wanted to do was deliver lightning alerts based on users",
    "start": "1757559",
    "end": "1762760"
  },
  {
    "text": "GPS locations on their mobile platform and this is actually a very fun problem",
    "start": "1762760",
    "end": "1767880"
  },
  {
    "text": "uh if you really think about it we have around 6 million mobile users who are all moving about providing their GPS",
    "start": "1767880",
    "end": "1773559"
  },
  {
    "text": "location to us so they can gather uh weather information and then we have a global lightning network uh which is you",
    "start": "1773559",
    "end": "1779240"
  },
  {
    "text": "know producing millions of lightning strikes a day across the planet and what we want to do in almost near real time",
    "start": "1779240",
    "end": "1784600"
  },
  {
    "text": "is put all that data together and for every single user provide lightning alerts to them now when we came to this",
    "start": "1784600",
    "end": "1790279"
  },
  {
    "text": "we actually had a number of constraints on on the problem one is we had a decently sized user base of about 6",
    "start": "1790279",
    "end": "1795480"
  },
  {
    "text": "million users and we have about 100% year a year mobile growth the other thing to noce is that we needed a very",
    "start": "1795480",
    "end": "1801600"
  },
  {
    "text": "flexible solution which could scale with changing conditions so for example uh",
    "start": "1801600",
    "end": "1806679"
  },
  {
    "text": "lightning is very different dayto day and I'm sure you see it across the US when there's large storms you may see 10",
    "start": "1806679",
    "end": "1812279"
  },
  {
    "text": "to 15 times the amount of lightning data in the us alone uh the other piece is depending on where the storms are our",
    "start": "1812279",
    "end": "1817519"
  },
  {
    "text": "user base and access to the system is very different you know if you have a storm in Montana where we don't have a large user base then we're not going to",
    "start": "1817519",
    "end": "1823559"
  },
  {
    "text": "get a lot of uh reads into our system however if it's in New York the uh read throughput is going to be very high now",
    "start": "1823559",
    "end": "1831519"
  },
  {
    "text": "uh when you talk about alerting speed is Paramount right so the quicker we can get the information out the better",
    "start": "1831519",
    "end": "1837480"
  },
  {
    "text": "however we can't sacrifice accuracy either so we need to both have speed and accuracy and in terms of alerting that",
    "start": "1837480",
    "end": "1843200"
  },
  {
    "text": "really equals safety uh additionally we got a couple other constraints that came in from the business side which I'm sure",
    "start": "1843200",
    "end": "1848799"
  },
  {
    "text": "we've all had before which is basically they wanted a quick time to Market so we got this in at the beginning of last",
    "start": "1848799",
    "end": "1854080"
  },
  {
    "text": "year and we wanted to deploy before uh basically the lightning season started in the US in about March and the other",
    "start": "1854080",
    "end": "1860480"
  },
  {
    "text": "thing is we had done this on an Enterprise scale but now we're going out to 6 million users so we were rebuilding",
    "start": "1860480",
    "end": "1865519"
  },
  {
    "text": "a platform where really we needed to drive the cost of ownership down to account for sort of the less money you",
    "start": "1865519",
    "end": "1870760"
  },
  {
    "text": "receive per user so when we got the problem we actually broke the problem",
    "start": "1870760",
    "end": "1875960"
  },
  {
    "start": "1873000",
    "end": "1873000"
  },
  {
    "text": "down and created sort of a three- tiered architecture that we wanted to use and what we looked at is we were going to have a backend management tier for",
    "start": "1875960",
    "end": "1882440"
  },
  {
    "text": "actually moving the lightning data into the system we're going to have a front-end web tier which was going to take in the user's request and what we",
    "start": "1882440",
    "end": "1888679"
  },
  {
    "text": "really wanted to build was a fairly scalable middle tier that did our spatial intersections and spatial",
    "start": "1888679",
    "end": "1894519"
  },
  {
    "text": "queries and business logic around this and one of the things we did is we prototyped against a number of systems",
    "start": "1894519",
    "end": "1899799"
  },
  {
    "text": "this middle tier so what we first looked at was SQL Server 2008 R2 which supports spatial data types and what we're able",
    "start": "1899799",
    "end": "1906399"
  },
  {
    "text": "to do is get a fairly moderate throughput uh per instance out of it and for us the engineering cost of working",
    "start": "1906399",
    "end": "1911880"
  },
  {
    "text": "with mssql is very low so I should preface it by saying that uh we're a Windows shop so we do asp.net applic",
    "start": "1911880",
    "end": "1918000"
  },
  {
    "text": "ations our DB's support mssql so this was sort of in our wheelhouse we've worked with SQL spatial before so the",
    "start": "1918000",
    "end": "1924360"
  },
  {
    "text": "engineering cost was low however the number of instances we would actually need to deploy to support the consumer",
    "start": "1924360",
    "end": "1929919"
  },
  {
    "text": "scale that we wanted to do was going to be very high it would actually drive the cost of ownership up so then what we",
    "start": "1929919",
    "end": "1935039"
  },
  {
    "text": "looked at is could we drive that cost of ownership down by switching to something like MySQL so MySQL has to reduced licensing costs however like I said uh",
    "start": "1935039",
    "end": "1942360"
  },
  {
    "text": "we were able to do this we were able to get a moderate throughput but this wasn't really in our wheelhouse in order to really produ ize this we would sort",
    "start": "1942360",
    "end": "1948880"
  },
  {
    "text": "of have to do a lot of engineering work in order to get sort of the high availability uh DB mirroring and also",
    "start": "1948880",
    "end": "1954519"
  },
  {
    "text": "from an IT perspective since they're not set up to support it we'd have to deploy or or basically deal with the human",
    "start": "1954519",
    "end": "1959880"
  },
  {
    "text": "resourcing issue uh another thing we've done before at Earth networks specifically for Enterprise has done",
    "start": "1959880",
    "end": "1965159"
  },
  {
    "text": "custom quad trees for anyone who's dealt with spatial stuff this is really just a spatial data structure that you can work",
    "start": "1965159",
    "end": "1970600"
  },
  {
    "text": "with um it can do a very high throughput in terms of spatial queries however uh",
    "start": "1970600",
    "end": "1976840"
  },
  {
    "text": "you have to handle all of your ha all of your consistency and so you know anybody who's worked in Amazon for a while knows",
    "start": "1976840",
    "end": "1982880"
  },
  {
    "text": "you got to move this across at least multiple azs you're going to have to handle consistency between each of the instances you're going to be running so",
    "start": "1982880",
    "end": "1989559"
  },
  {
    "text": "when you look at the cost of ownership of that it's going to be less because all you're going to be doing is managing the instances and uh without managing",
    "start": "1989559",
    "end": "1995799"
  },
  {
    "text": "the licensing so we still didn't really like that solution at all we continue looking at mcache uh M cash actually has",
    "start": "1995799",
    "end": "2002320"
  },
  {
    "text": "a very high throughput I mean it's it's basically an inmemory uh uh um cash map",
    "start": "2002320",
    "end": "2008279"
  },
  {
    "text": "so you're able to query it very effectively uh and the cost of ownership isn't too bad uh however it didn't",
    "start": "2008279",
    "end": "2013720"
  },
  {
    "text": "really work for what we wanted to do we had a large set of streaming lightning data coming in and mcash is really more of a reactive system for us in that",
    "start": "2013720",
    "end": "2020960"
  },
  {
    "text": "sense so we didn't really want to look at that and around this time Dynamo DB came out so we started looking at that",
    "start": "2020960",
    "end": "2027000"
  },
  {
    "text": "uh as a middle tier solution and what we found here is uh in terms of scalability we can just turn a knob and crank up any",
    "start": "2027000",
    "end": "2033639"
  },
  {
    "text": "throughput we want and the other thing in terms of engineering cost it really is that simple to start working with it we pulled it down and we're able to",
    "start": "2033639",
    "end": "2039679"
  },
  {
    "text": "prototype the system within a day uh in terms of making the system production and supportable uh your IT staff doesn't",
    "start": "2039679",
    "end": "2045919"
  },
  {
    "text": "need to actually learn a whole bunch of new stuff it's very easy for them to interact and work with the system so",
    "start": "2045919",
    "end": "2051720"
  },
  {
    "text": "this is sort of what we actually did kind of give you a little background on the solution we have the streaming lightning data coming in what we're",
    "start": "2051720",
    "end": "2057240"
  },
  {
    "text": "doing is we're taking it and we're geohashing it this is a way of taking a latitude and longitude and reducing it",
    "start": "2057240",
    "end": "2062440"
  },
  {
    "text": "down to a single key all right we then take like Keys together and we group them into buckets those buckets become",
    "start": "2062440",
    "end": "2068720"
  },
  {
    "text": "items inside of the Dynamo DB table and basically it's the responsibility of the backend system for maintaining this sort",
    "start": "2068720",
    "end": "2074720"
  },
  {
    "start": "2074000",
    "end": "2074000"
  },
  {
    "text": "of work inside of dynb on the front end we have a front end web tier which is actually bringing in the client request",
    "start": "2074720",
    "end": "2081280"
  },
  {
    "text": "and decoding it so in comes the client request with a latitude and longitude we take it and create a set of uh geohashes",
    "start": "2081280",
    "end": "2087760"
  },
  {
    "text": "that we need to query against Dynamo DB and make that query now what's important to realize here is that Dynamo DB isn't",
    "start": "2087760",
    "end": "2093200"
  },
  {
    "text": "answering the full question what we're using Dynamo DB to do is actually do an exclusion query",
    "start": "2093200",
    "end": "2098359"
  },
  {
    "text": "so we have all the lightning data around the world loaded into Dynamo DB that we would need to query against when the",
    "start": "2098359",
    "end": "2103680"
  },
  {
    "text": "query goes in the client's only going to bring back the lightning data which is relative to them this will prune out a",
    "start": "2103680",
    "end": "2108920"
  },
  {
    "text": "large percentage of the lightning data in the world could be you know 90 95% up to 99% of the other lightning data now",
    "start": "2108920",
    "end": "2115599"
  },
  {
    "text": "the frontend web service we still wanted to do additional pruning before sending this back to the client and I'll actually show a video at the end that",
    "start": "2115599",
    "end": "2120720"
  },
  {
    "text": "shows really how much lightning data can be localized in a single in a single area um but the frontend web tier",
    "start": "2120720",
    "end": "2126760"
  },
  {
    "text": "actually does a uh um doesn't use triometrics so anybody who's worked with spatial data uh has worked probably with",
    "start": "2126760",
    "end": "2133520"
  },
  {
    "text": "greater Circle calculations and those are fairly expensive to do they involve trimetric operations so what once again",
    "start": "2133520",
    "end": "2139560"
  },
  {
    "text": "the frontend client just does an exclusion by using geometric calculations to actually prune out once again the data that isn't relevant",
    "start": "2139560",
    "end": "2145720"
  },
  {
    "text": "before sending it back to the client at which point we send a subset of the data back to the client the client itself",
    "start": "2145720",
    "end": "2150839"
  },
  {
    "text": "will do the actual spatial data actually create a or sorry compute the actual spatial distance and uh produced the",
    "start": "2150839",
    "end": "2159079"
  },
  {
    "text": "alert so uh once we deployed this out we deployed it out to our iPhone and Android clients and it was actually",
    "start": "2159079",
    "end": "2165640"
  },
  {
    "start": "2160000",
    "end": "2160000"
  },
  {
    "text": "fairly successful but what we found is we were provisioned far above what we would actually consume and a lot of this",
    "start": "2165640",
    "end": "2172240"
  },
  {
    "text": "occurred because of what I talked about earlier on with we would have spikes in both weather events so spikes in the",
    "start": "2172240",
    "end": "2177760"
  },
  {
    "text": "amount of lightning data we receive as well as spikes in depending on where the weather was the number of reads we would",
    "start": "2177760",
    "end": "2182920"
  },
  {
    "text": "get and these spikes could be 15 to 20 times above what we needed but because",
    "start": "2182920",
    "end": "2188160"
  },
  {
    "text": "it's uh difficult to predict when they're going to occur and where they're going to occur we didn't want someone sitting around scaling up and down",
    "start": "2188160",
    "end": "2193480"
  },
  {
    "text": "Dynamo DB uh on a daily basis so we decided that we were going to Auto scale Dynamo DB and this is fairly similar to",
    "start": "2193480",
    "end": "2200160"
  },
  {
    "text": "ec2 Auto scaling uh in terms terms of a concept uh so what we did is we actually",
    "start": "2200160",
    "end": "2205240"
  },
  {
    "text": "deployed a set of uh instances to manage our Dynamo DB tables and this can be done through the AWS SDK uh with uh",
    "start": "2205240",
    "end": "2212920"
  },
  {
    "text": "simple rest calls basically um we monitor every single table and what we're doing is we're actually uh calling",
    "start": "2212920",
    "end": "2219400"
  },
  {
    "text": "in to get the actual uh provision throughput uh we're then calling in to Cloud watch to get the consume throughput if the uh consume throughput",
    "start": "2219400",
    "end": "2226800"
  },
  {
    "text": "reaches a certain percentage of our provision throughput we will programmatically scale up Dynamo DB and",
    "start": "2226800",
    "end": "2233000"
  },
  {
    "text": "what this allows us to do is handle uh fairly large storms so for example like Hurricane Sandy we were able to scale up",
    "start": "2233000",
    "end": "2239119"
  },
  {
    "text": "through that event um and then scale down the following day however there is another case that occurs uh where you",
    "start": "2239119",
    "end": "2245319"
  },
  {
    "text": "can actually get throttled and this normally occurs when the event is more local so for example with uh tornado",
    "start": "2245319",
    "end": "2250760"
  },
  {
    "text": "events where you have a tornado event which occurs around a major city or something like that you'll get an immediate Spike uh based on people who",
    "start": "2250760",
    "end": "2257400"
  },
  {
    "text": "are hearing things on the news and want more weather information so they'll jump in and what we found is that cloud watch",
    "start": "2257400",
    "end": "2262680"
  },
  {
    "text": "is a little slow with Dynamo DB so Dynamo doesn't support detailed monitoring at this point uh it supports",
    "start": "2262680",
    "end": "2268119"
  },
  {
    "text": "five minute monitoring which basically means you're going to react about 10 minutes late uh so what we wanted to do is make sure since it's an alerting",
    "start": "2268119",
    "end": "2273960"
  },
  {
    "text": "system we scale very effectively if we ever see any throttling events so we cre cre an additional Dynamo DB table which",
    "start": "2273960",
    "end": "2279440"
  },
  {
    "text": "is a metric table that metric table is actually monitoring all of our other tables and one of the fields that it's",
    "start": "2279440",
    "end": "2285280"
  },
  {
    "text": "monitoring is if there's any throttling on reads or writes if any of those occur we'll react and scale the table as well",
    "start": "2285280",
    "end": "2292119"
  },
  {
    "text": "uh I have up here that we independently scale read and writs and this is true but there is a caveat to this so when",
    "start": "2292119",
    "end": "2297400"
  },
  {
    "text": "you're scaling up you can independently scale with no issue however there is a limitation on how many times you can",
    "start": "2297400",
    "end": "2302760"
  },
  {
    "text": "scale down your table during the day what you want to do is scale which is one so the limitation is basically",
    "start": "2302760",
    "end": "2309400"
  },
  {
    "text": "one uh and it's really one or the other or both so you can't do a scale down of",
    "start": "2309400",
    "end": "2314839"
  },
  {
    "text": "reads uh and then five minutes later do a scale down of RS so those two need to occur at the same time the way we",
    "start": "2314839",
    "end": "2321280"
  },
  {
    "text": "actually handle it is we have a fairly consistent uh user load on most of our tables due to basically the standard way",
    "start": "2321280",
    "end": "2327280"
  },
  {
    "text": "people use load just like the Amazon slide of it daily going up and down we have the same thing so we actually have an interval which the services will look",
    "start": "2327280",
    "end": "2334000"
  },
  {
    "text": "to scale down the tables and at that point it will make a judgment on how far down it should go uh based on the",
    "start": "2334000",
    "end": "2339640"
  },
  {
    "text": "current consumed capacity so I just want kind of want to talk about what our experiences are",
    "start": "2339640",
    "end": "2344960"
  },
  {
    "text": "because after we uh did this consumer lightning approach we've actually rolled out Dynamo DB to another another of our",
    "start": "2344960",
    "end": "2350520"
  },
  {
    "start": "2345000",
    "end": "2345000"
  },
  {
    "text": "other properties we use it to back our forecast data at this point we use it to back some of our observation data at this point so we really are starting to",
    "start": "2350520",
    "end": "2357480"
  },
  {
    "text": "use it across uh our whole data center uh one thing is it is uh extremely easy to provision um and you know it's",
    "start": "2357480",
    "end": "2363640"
  },
  {
    "text": "extremely easy to get into uh you can change provisioning uh whenever you want and very effectively so if you want to",
    "start": "2363640",
    "end": "2369119"
  },
  {
    "text": "get in and try it out it's definitely easy to do um one of the things we love is the built-in consistency and it's",
    "start": "2369119",
    "end": "2374520"
  },
  {
    "text": "region level consistency right so with like mcash or elasticache you're dealing with a consistency here you got region",
    "start": "2374520",
    "end": "2380720"
  },
  {
    "text": "level consistency which is nice uh especially when you're talking about having your applications be highly available um the other thing is it's",
    "start": "2380720",
    "end": "2387480"
  },
  {
    "text": "scalable you just turn the knob and you're going to get more throughput right so if you have a weather event or",
    "start": "2387480",
    "end": "2392760"
  },
  {
    "text": "if you have anything like that you just keep asking Amazon for more and they'll keep giving you more uh lastly it's",
    "start": "2392760",
    "end": "2398119"
  },
  {
    "text": "highly available which I sort of already touched on with the consistency but basically since it's a region based service and non a based uh you're going",
    "start": "2398119",
    "end": "2404760"
  },
  {
    "text": "to have much better High availability within a region now that being said there are some things we want uh and uh",
    "start": "2404760",
    "end": "2410839"
  },
  {
    "text": "one of the things is uh well sort of these first two are connected so we want Dynamo DB to actually span across",
    "start": "2410839",
    "end": "2417359"
  },
  {
    "text": "regions uh and the reason for that is and it can be done really two ways one is we could have an automated fail over",
    "start": "2417359",
    "end": "2423480"
  },
  {
    "text": "between regions so for example we run in the East but we want we need to fail over to the West for some region you can",
    "start": "2423480",
    "end": "2429119"
  },
  {
    "text": "think of this as a failover partner in terms of like your standard DBS uh ideally though what we'd prefer is that",
    "start": "2429119",
    "end": "2435000"
  },
  {
    "text": "dynamodb itself actually scales across regions so just like it scales across A's and I don't have to worry about it I",
    "start": "2435000",
    "end": "2440720"
  },
  {
    "text": "would like it if it would just scale across regions and I wouldn't have to worry about it so I can have a consistent view in both my east region",
    "start": "2440720",
    "end": "2446599"
  },
  {
    "text": "and my west region Route traffic to either of the regions and they're always going to get the same result uh as",
    "start": "2446599",
    "end": "2452760"
  },
  {
    "text": "talking about with auto scaling down like I said the one a day is uh fairly significant limit so uh if we can get",
    "start": "2452760",
    "end": "2459480"
  },
  {
    "text": "that extended that would help uh lastly there's an item size limit of 64k uh",
    "start": "2459480",
    "end": "2465079"
  },
  {
    "text": "there are a number of workarounds to get around this limit actually the best workaround which actually is thanks to Amazon when Dynamo DB came out it didn't",
    "start": "2465079",
    "end": "2472200"
  },
  {
    "text": "have the binary data type so you're were pretty much stuck with strings and you can get those strings fairly small but",
    "start": "2472200",
    "end": "2477800"
  },
  {
    "text": "really with binary data you can pretty much crush your data down as far as you can get it now that being said getting",
    "start": "2477800",
    "end": "2482920"
  },
  {
    "text": "any more limit would be uh of use so uh what i' like to do now is just show a quick video um and this is sort of the",
    "start": "2482920",
    "end": "2491160"
  },
  {
    "text": "application in action um what you're going to see is this is around Indianapolis in a particular uh",
    "start": "2491160",
    "end": "2497599"
  },
  {
    "text": "lightning event so all of those colored spots on top of the radar are actually individual lightning strikes and as the",
    "start": "2497599",
    "end": "2504119"
  },
  {
    "text": "storm moves in on the right side is our iPhone client uh which is querying in uh",
    "start": "2504119",
    "end": "2509280"
  },
  {
    "text": "to determine where lightning is relative the person's location so as you can see",
    "start": "2509280",
    "end": "2514440"
  },
  {
    "text": "there's a significant amount of lightning data as it comes in closer we're able to react to it so that's it",
    "start": "2514440",
    "end": "2521280"
  },
  {
    "text": "uh thanks for listening um I guess we're going to take questions and Eric will come up and",
    "start": "2521280",
    "end": "2528079"
  },
  {
    "text": "join",
    "start": "2528079",
    "end": "2531079"
  }
]