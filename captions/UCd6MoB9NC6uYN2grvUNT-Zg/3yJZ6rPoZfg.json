[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "Welcome to 'This is My Architecture'.",
    "start": "7643",
    "end": "9546"
  },
  {
    "text": "Today, we are in Zurich, Switzerland, ",
    "start": "9546",
    "end": "11330"
  },
  {
    "text": "and I'm joined by Alkis from Hexagon.",
    "start": "11331",
    "end": "13622"
  },
  {
    "text": "Welcome Alki. \nThank you very much Christian and nice to be here. ",
    "start": "13622",
    "end": "16511"
  },
  {
    "text": "Alkis tell us a little bit about Hexagon,\nand the project you've been working on.",
    "start": "16511",
    "end": "20392"
  },
  {
    "start": "20000",
    "end": "50000"
  },
  {
    "text": "Absolutely, Hexagon is a global leader in providing",
    "start": "20392",
    "end": "22592"
  },
  {
    "text": "geospatial data solutions and services\nin a range of industries.",
    "start": "22592",
    "end": "26183"
  },
  {
    "text": "Part of the company is focusing on building lighter hardware solutions",
    "start": "26344",
    "end": "30716"
  },
  {
    "text": "that can be either handheld devices or devices that can be mounted on a car",
    "start": "30716",
    "end": "34217"
  },
  {
    "text": "or on a plane.",
    "start": "34217",
    "end": "35398"
  },
  {
    "text": "These devices are primarily used \nby professional sales, architects, city servers,",
    "start": "35767",
    "end": "39343"
  },
  {
    "text": "or government agencies.",
    "start": "39344",
    "end": "40957"
  },
  {
    "text": "Our project, which is called Hexagon Digital Reality ",
    "start": "41509",
    "end": "44376"
  },
  {
    "text": "is Hexagon's cloud space data store that stores the data",
    "start": "44376",
    "end": "47502"
  },
  {
    "text": "licensed by Hexagon or its partners. ",
    "start": "47502",
    "end": "49521"
  },
  {
    "text": "It also provides a platform on which you can integrate with,",
    "start": "49762",
    "end": "53387"
  },
  {
    "start": "50000",
    "end": "108000"
  },
  {
    "text": "or push data from our hardware devices.",
    "start": "53387",
    "end": "55377"
  },
  {
    "text": "Great, so that sounds very interesting. ",
    "start": "55928",
    "end": "58366"
  },
  {
    "text": "Let's dive into the architecture\nand explain what we are seeing here. ",
    "start": "58366",
    "end": "61755"
  },
  {
    "text": "Absolutely.",
    "start": "61755",
    "end": "62760"
  },
  {
    "text": "On our left-hand side, we have our AWS data and streaming",
    "start": "62760",
    "end": "66489"
  },
  {
    "text": "and on our right-hand side, we have our AWS user experience and processing.",
    "start": "66489",
    "end": "71557"
  },
  {
    "text": "Both use the logic of streaming data back to the user",
    "start": "75479",
    "end": "77871"
  },
  {
    "text": "but also the user experience and the process assets",
    "start": "78153",
    "end": "81129"
  },
  {
    "text": "are hosted on EKS as you can see.",
    "start": "81359",
    "end": "83943"
  },
  {
    "text": "We went with the approach after migrating from Kops to EKS",
    "start": "84411",
    "end": "87589"
  },
  {
    "text": "because we want to focus on the manage services\nand take into consideration",
    "start": "87589",
    "end": "91028"
  },
  {
    "text": "and the benefits of scalability, autoscaling,",
    "start": "91028",
    "end": "94028"
  },
  {
    "text": "and the self mechanisms of EKS. ",
    "start": "94028",
    "end": "96596"
  },
  {
    "text": "Perfect.",
    "start": "97117",
    "end": "97936"
  },
  {
    "text": "So you mentioned that you're generating a lot of data,",
    "start": "97936",
    "end": "101014"
  },
  {
    "text": "high precision data from the devices itself.",
    "start": "101014",
    "end": "104748"
  },
  {
    "text": "So I guess that's a lot of data you're dealing with.",
    "start": "104748",
    "end": "107022"
  },
  {
    "text": "How do you handle that?",
    "start": "107022",
    "end": "108329"
  },
  {
    "start": "108000",
    "end": "158000"
  },
  {
    "text": "So we created only one data account\nwhere we store all of our data on S3",
    "start": "108451",
    "end": "113046"
  },
  {
    "text": "and this becomes available through our EKS",
    "start": "113046",
    "end": "116442"
  },
  {
    "text": "and through VPC peering\nwith our multiple EKS and AWS account",
    "start": "116442",
    "end": "123234"
  },
  {
    "text": "which is dev UAQAT. ",
    "start": "123956",
    "end": "126218"
  },
  {
    "text": "And in that case, we actually make\nthe data available both to our development",
    "start": "126503",
    "end": "130425"
  },
  {
    "text": "and the users using the AWS's backbone network securely and privately.",
    "start": "130426",
    "end": "135054"
  },
  {
    "text": "And I guess that's where you profit from low latency",
    "start": "135320",
    "end": "138633"
  },
  {
    "text": "and high bandwidth\nsince you're using the AWS backbone ",
    "start": "138633",
    "end": "141504"
  },
  {
    "text": "and also provide the application of these big data sets",
    "start": "141504",
    "end": "144492"
  },
  {
    "text": "multiple times to the different environments you're running.",
    "start": "144492",
    "end": "147696"
  },
  {
    "text": "You mentioned previously that customers have also the possibility to upload data",
    "start": "148217",
    "end": "152463"
  },
  {
    "text": "from their devices and from other sources.",
    "start": "152463",
    "end": "155173"
  },
  {
    "text": "Please walk me through how this works.",
    "start": "155173",
    "end": "157421"
  },
  {
    "start": "158000",
    "end": "214000"
  },
  {
    "text": "That's correct.",
    "start": "158324",
    "end": "158917"
  },
  {
    "text": "Both of these use cases\ntrigger the same processing pipeline.",
    "start": "158917",
    "end": "162725"
  },
  {
    "text": "Either a user drags and drops or direct from the device,",
    "start": "162925",
    "end": "166401"
  },
  {
    "text": "what happens is our system provides\na pre-sign Euro back to the user.",
    "start": "166638",
    "end": "170351"
  },
  {
    "text": "When that happens, the user actually uploads the item directly to S3.",
    "start": "170351",
    "end": "174301"
  },
  {
    "text": "When that becomes available on S3,\nwhen the uploads is finished,",
    "start": "174871",
    "end": "178157"
  },
  {
    "text": "an S3 event is triggered\nand sends a message into a queue on our SQS.",
    "start": "178157",
    "end": "183090"
  },
  {
    "text": "Okay, so you're having a mechanism to upload the files to S3",
    "start": "183625",
    "end": "187601"
  },
  {
    "text": "and have that event sitting in SQS.",
    "start": "187601",
    "end": "189639"
  },
  {
    "text": "So I guess there's some sort of microservice or service picking that up",
    "start": "189639",
    "end": "193255"
  },
  {
    "text": "in order to be processed.",
    "start": "193255",
    "end": "194648"
  },
  {
    "text": "Yes, we have a component running a container on EKS,",
    "start": "194908",
    "end": "198261"
  },
  {
    "text": "and that is listening to that queue.",
    "start": "198261",
    "end": "200402"
  },
  {
    "text": "So when the message becomes available there,\nthen the logic of that begins.",
    "start": "200402",
    "end": "204665"
  },
  {
    "text": "Okay, so what happens next? ",
    "start": "205933",
    "end": "208511"
  },
  {
    "text": "I guess that's not the processing itself,",
    "start": "208511",
    "end": "210530"
  },
  {
    "text": "so I guess you need them to process the data\nand store it somewhere again. ",
    "start": "210530",
    "end": "214568"
  },
  {
    "start": "214000",
    "end": "309000"
  },
  {
    "text": "The next step is where that you're mentioning\nthe processing pipeline.",
    "start": "215612",
    "end": "218359"
  },
  {
    "text": "So we have different output based on the uploaded file.",
    "start": "218359",
    "end": "221459"
  },
  {
    "text": "And in that case, we need different CPU\nor different memory.",
    "start": "221889",
    "end": "225974"
  },
  {
    "text": "So we created a group of other scaling groups based on that logic",
    "start": "225974",
    "end": "229672"
  },
  {
    "text": "and within that we are using EC2 instances.",
    "start": "229672",
    "end": "233487"
  },
  {
    "text": "Those EC2 instances are having templates",
    "start": "233488",
    "end": "236275"
  },
  {
    "text": "that are spinning up specific containers within those instances ",
    "start": "236275",
    "end": "240312"
  },
  {
    "text": "that are pulling the images from ECR.",
    "start": "240312",
    "end": "242304"
  },
  {
    "text": "So when the message becomes available ",
    "start": "242304",
    "end": "244981"
  },
  {
    "text": "and a component picks it up, it sends\nthe information back to those EC2 instance",
    "start": "244981",
    "end": "249347"
  },
  {
    "text": "again using a messaging system.",
    "start": "249347",
    "end": "251688"
  },
  {
    "text": "When that happens its specific EC2 instance\ncreates its own pipeline step",
    "start": "252194",
    "end": "257475"
  },
  {
    "text": "to that processing pipeline.",
    "start": "257475",
    "end": "259008"
  },
  {
    "text": "So I guess here you're profiting\nfrom the variety of different instance families",
    "start": "259488",
    "end": "263601"
  },
  {
    "text": "and instance types, because like you mentioned, you have, depending",
    "start": "263601",
    "end": "266496"
  },
  {
    "text": "on the output type different recommendations or requirements",
    "start": "266496",
    "end": "270206"
  },
  {
    "text": "regarding the CPU\nand the memory. ",
    "start": "270206",
    "end": "272410"
  },
  {
    "text": "So what happens next,\nand where do you install the data,",
    "start": "272410",
    "end": "274811"
  },
  {
    "text": "and how do you make it available\nto the customer again?",
    "start": "274811",
    "end": "276728"
  },
  {
    "text": "So when the process is finished the EC2 instances are sending back ",
    "start": "276728",
    "end": "281309"
  },
  {
    "text": "to the S3 and that through the same becomes available back to the user",
    "start": "281309",
    "end": "285436"
  },
  {
    "text": "and that processed item can either be placed on the map,",
    "start": "285436",
    "end": "288428"
  },
  {
    "text": "in our platform or be available for download.\nOkay. ",
    "start": "288428",
    "end": "292094"
  },
  {
    "text": "That's very interesting.",
    "start": "292094",
    "end": "293149"
  },
  {
    "text": "So thanks for sharing this architecture with us today Alkis.",
    "start": "293149",
    "end": "296563"
  },
  {
    "text": "Thank you very much.",
    "start": "296563",
    "end": "297322"
  },
  {
    "text": "It was really nice to be here.",
    "start": "297322",
    "end": "298563"
  },
  {
    "text": "And thank you for watching\n'This is My Architecture'.",
    "start": "299152",
    "end": "301360"
  }
]