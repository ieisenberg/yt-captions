[
  {
    "text": "[Music]",
    "start": "380",
    "end": "12109"
  },
  {
    "text": "hello i'm harsh",
    "start": "12240",
    "end": "13679"
  },
  {
    "text": "a cloud support engineer here at the aws",
    "start": "13679",
    "end": "15839"
  },
  {
    "text": "office in bangalore",
    "start": "15839",
    "end": "17119"
  },
  {
    "text": "today i'm going to show you how to check",
    "start": "17119",
    "end": "19680"
  },
  {
    "text": "the functions that are available in",
    "start": "19680",
    "end": "21520"
  },
  {
    "text": "amazon athena",
    "start": "21520",
    "end": "22720"
  },
  {
    "text": "and how to use them in athena let's get",
    "start": "22720",
    "end": "25680"
  },
  {
    "text": "started",
    "start": "25680",
    "end": "26800"
  },
  {
    "text": "there are many functions that can be",
    "start": "26800",
    "end": "28720"
  },
  {
    "text": "used with select operation in our theme",
    "start": "28720",
    "end": "31760"
  },
  {
    "text": "as a good practice before using better",
    "start": "31760",
    "end": "34079"
  },
  {
    "text": "we check if the function is supported",
    "start": "34079",
    "end": "36000"
  },
  {
    "text": "and present with",
    "start": "36000",
    "end": "36880"
  },
  {
    "text": "restore version that athena is currently",
    "start": "36880",
    "end": "38800"
  },
  {
    "text": "using",
    "start": "38800",
    "end": "40239"
  },
  {
    "text": "after logging into the aws management",
    "start": "40239",
    "end": "42399"
  },
  {
    "text": "console",
    "start": "42399",
    "end": "43280"
  },
  {
    "text": "navigate to the athena consumer",
    "start": "43280",
    "end": "47280"
  },
  {
    "text": "be sure that the query editor tab is",
    "start": "53840",
    "end": "56840"
  },
  {
    "text": "selected",
    "start": "56840",
    "end": "59280"
  },
  {
    "text": "here you can enter the query that you",
    "start": "59280",
    "end": "61039"
  },
  {
    "text": "want to run",
    "start": "61039",
    "end": "62879"
  },
  {
    "text": "i want to check the length of an array",
    "start": "62879",
    "end": "65040"
  },
  {
    "text": "that is i want to find the number of",
    "start": "65040",
    "end": "66799"
  },
  {
    "text": "elements in an array",
    "start": "66799",
    "end": "68479"
  },
  {
    "text": "let's run this query type this query and",
    "start": "68479",
    "end": "71119"
  },
  {
    "text": "choose run query",
    "start": "71119",
    "end": "73840"
  },
  {
    "text": "we'll get the list of functions that are",
    "start": "81040",
    "end": "83200"
  },
  {
    "text": "supported",
    "start": "83200",
    "end": "84320"
  },
  {
    "text": "now we can search for the respective",
    "start": "84320",
    "end": "86720"
  },
  {
    "text": "functions that we want",
    "start": "86720",
    "end": "89840"
  },
  {
    "text": "the description column helps to identify",
    "start": "97920",
    "end": "100400"
  },
  {
    "text": "the appropriate",
    "start": "100400",
    "end": "101280"
  },
  {
    "text": "function that can be used or if you know",
    "start": "101280",
    "end": "103920"
  },
  {
    "text": "the function name but need clarification",
    "start": "103920",
    "end": "106240"
  },
  {
    "text": "on the arguments to be used",
    "start": "106240",
    "end": "108079"
  },
  {
    "text": "you can directly search the output by",
    "start": "108079",
    "end": "110000"
  },
  {
    "text": "searching for the keyword in the browser",
    "start": "110000",
    "end": "112159"
  },
  {
    "text": "and then finding the function details",
    "start": "112159",
    "end": "114799"
  },
  {
    "text": "here we can see that the arrayline",
    "start": "114799",
    "end": "116640"
  },
  {
    "text": "function and the name of the function we",
    "start": "116640",
    "end": "118399"
  },
  {
    "text": "want is cardinality",
    "start": "118399",
    "end": "120479"
  },
  {
    "text": "we search and see the arguments to be",
    "start": "120479",
    "end": "122399"
  },
  {
    "text": "used and its return type",
    "start": "122399",
    "end": "124079"
  },
  {
    "text": "so that we can use this information",
    "start": "124079",
    "end": "125759"
  },
  {
    "text": "correctly in our query",
    "start": "125759",
    "end": "128000"
  },
  {
    "text": "run a sample query to check the length",
    "start": "128000",
    "end": "129920"
  },
  {
    "text": "of an array using the cardinality",
    "start": "129920",
    "end": "131760"
  },
  {
    "text": "function",
    "start": "131760",
    "end": "132720"
  },
  {
    "text": "run this value",
    "start": "132720",
    "end": "143840"
  },
  {
    "text": "we can see the output as 3 this is the",
    "start": "156560",
    "end": "159120"
  },
  {
    "text": "length of the array",
    "start": "159120",
    "end": "162000"
  },
  {
    "text": "if we use a function that's not",
    "start": "165519",
    "end": "167200"
  },
  {
    "text": "supported by athena",
    "start": "167200",
    "end": "168720"
  },
  {
    "text": "we get an error such as function",
    "start": "168720",
    "end": "171920"
  },
  {
    "text": "function name not registered",
    "start": "171920",
    "end": "174959"
  },
  {
    "text": "we can test this by running this example",
    "start": "174959",
    "end": "179280"
  },
  {
    "text": "query",
    "start": "182840",
    "end": "184080"
  },
  {
    "text": "the output is an error as you can see",
    "start": "184080",
    "end": "187840"
  },
  {
    "text": "if the function that we are looking for",
    "start": "187920",
    "end": "189760"
  },
  {
    "text": "isn't present in the list of for the use",
    "start": "189760",
    "end": "192080"
  },
  {
    "text": "case",
    "start": "192080",
    "end": "192560"
  },
  {
    "text": "then we can write a user-defined",
    "start": "192560",
    "end": "194640"
  },
  {
    "text": "function",
    "start": "194640",
    "end": "195680"
  },
  {
    "text": "or udf in our theme a udf in athena",
    "start": "195680",
    "end": "198800"
  },
  {
    "text": "allows you to create",
    "start": "198800",
    "end": "200159"
  },
  {
    "text": "custom functions to process records or",
    "start": "200159",
    "end": "202720"
  },
  {
    "text": "clues of records",
    "start": "202720",
    "end": "204560"
  },
  {
    "text": "a udf accepts parameters performs work",
    "start": "204560",
    "end": "207840"
  },
  {
    "text": "and then returns a result for examples",
    "start": "207840",
    "end": "210959"
  },
  {
    "text": "of",
    "start": "210959",
    "end": "211200"
  },
  {
    "text": "writing and using udf in athena you can",
    "start": "211200",
    "end": "213680"
  },
  {
    "text": "check the link in the description",
    "start": "213680",
    "end": "217040"
  },
  {
    "text": "thanks for watching and happy cloud",
    "start": "217280",
    "end": "218959"
  },
  {
    "text": "computing from all of us here at aws",
    "start": "218959",
    "end": "226879"
  },
  {
    "text": "you",
    "start": "226879",
    "end": "228959"
  }
]