[
  {
    "start": "0",
    "end": "28000"
  },
  {
    "text": "[Music]",
    "start": "50",
    "end": "1010"
  },
  {
    "text": "[Applause]",
    "start": "1010",
    "end": "4088"
  },
  {
    "text": "[Music]",
    "start": "4960",
    "end": "11660"
  },
  {
    "text": "hello I'm satin a cloud support engineer",
    "start": "11660",
    "end": "14940"
  },
  {
    "text": "here at the AWS office in Dublin today",
    "start": "14940",
    "end": "18240"
  },
  {
    "text": "I'm going to show you how users can",
    "start": "18240",
    "end": "20039"
  },
  {
    "text": "change the status of their Amazon ecas",
    "start": "20039",
    "end": "22619"
  },
  {
    "text": "worker note for not ready or unknown",
    "start": "22619",
    "end": "25080"
  },
  {
    "text": "status to ready status let's get started",
    "start": "25080",
    "end": "29400"
  },
  {
    "start": "28000",
    "end": "117000"
  },
  {
    "text": "let's first talk about nodes and parts",
    "start": "29400",
    "end": "32220"
  },
  {
    "text": "you can schedule Parts on nodes that are",
    "start": "32220",
    "end": "35100"
  },
  {
    "text": "in the not ready or unknown status",
    "start": "35100",
    "end": "37440"
  },
  {
    "text": "you can only schedule Parts on the note",
    "start": "37440",
    "end": "39660"
  },
  {
    "text": "that is in the ready status",
    "start": "39660",
    "end": "41940"
  },
  {
    "text": "now let's talk through some common",
    "start": "41940",
    "end": "44460"
  },
  {
    "text": "issues and see how to check a node",
    "start": "44460",
    "end": "46800"
  },
  {
    "text": "that's in the not ready or unknown",
    "start": "46800",
    "end": "48899"
  },
  {
    "text": "status",
    "start": "48899",
    "end": "51180"
  },
  {
    "text": "to enable the Amazon elastic kubernetes",
    "start": "51180",
    "end": "54120"
  },
  {
    "text": "service worker node to work in the",
    "start": "54120",
    "end": "56520"
  },
  {
    "text": "Amazon VPC networking environment Amazon",
    "start": "56520",
    "end": "58800"
  },
  {
    "text": "ecas supports Amazon virtual private",
    "start": "58800",
    "end": "61440"
  },
  {
    "text": "Cloud networking",
    "start": "61440",
    "end": "63120"
  },
  {
    "text": "with the Amazon VPC container network",
    "start": "63120",
    "end": "65640"
  },
  {
    "text": "interface plugin for kubernetes",
    "start": "65640",
    "end": "69180"
  },
  {
    "text": "the plugin is responsible for locating",
    "start": "69180",
    "end": "71760"
  },
  {
    "text": "VPC IP addresses took kubernetes North",
    "start": "71760",
    "end": "74700"
  },
  {
    "text": "and configuring the necessary networking",
    "start": "74700",
    "end": "77580"
  },
  {
    "text": "for parts on each node",
    "start": "77580",
    "end": "80159"
  },
  {
    "text": "we can call it the Amazon VPC cni plugin",
    "start": "80159",
    "end": "83580"
  },
  {
    "text": "that is deployed with each of your",
    "start": "83580",
    "end": "85799"
  },
  {
    "text": "Amazon eks worker node in a Daemon set",
    "start": "85799",
    "end": "88320"
  },
  {
    "text": "with the name AWS node",
    "start": "88320",
    "end": "91640"
  },
  {
    "text": "qpxi",
    "start": "91640",
    "end": "93180"
  },
  {
    "text": "deployed as Damon said on each Amazon",
    "start": "93180",
    "end": "95700"
  },
  {
    "text": "ecas worker node and has never rules on",
    "start": "95700",
    "end": "98520"
  },
  {
    "text": "each Amazon ec2 note as well",
    "start": "98520",
    "end": "102000"
  },
  {
    "text": "and Amazon VPC Shanghai Plug-In or",
    "start": "102000",
    "end": "104640"
  },
  {
    "text": "qproxy that is not working well can",
    "start": "104640",
    "end": "107340"
  },
  {
    "text": "cause nodes to change to non-release",
    "start": "107340",
    "end": "109259"
  },
  {
    "text": "status",
    "start": "109259",
    "end": "110040"
  },
  {
    "text": "so let's check to see if the data was",
    "start": "110040",
    "end": "112140"
  },
  {
    "text": "not passed and Q Plus C pass are running",
    "start": "112140",
    "end": "114720"
  },
  {
    "text": "normally",
    "start": "114720",
    "end": "116759"
  },
  {
    "text": "open your terminal",
    "start": "116759",
    "end": "118680"
  },
  {
    "start": "117000",
    "end": "148000"
  },
  {
    "text": "we can check these parts with Q control",
    "start": "118680",
    "end": "120600"
  },
  {
    "text": "get part come in",
    "start": "120600",
    "end": "123000"
  },
  {
    "text": "here we can see the sound of the cni",
    "start": "123000",
    "end": "124979"
  },
  {
    "text": "plug-in parts are in running status",
    "start": "124979",
    "end": "128220"
  },
  {
    "text": "the one of the parts is in Crash loop",
    "start": "128220",
    "end": "130560"
  },
  {
    "text": "back off",
    "start": "130560",
    "end": "132540"
  },
  {
    "text": "we can use Cube control describe part",
    "start": "132540",
    "end": "135120"
  },
  {
    "text": "and the Q control logs command to get",
    "start": "135120",
    "end": "137760"
  },
  {
    "text": "additional information when we see that",
    "start": "137760",
    "end": "140280"
  },
  {
    "text": "a part is not in a running status",
    "start": "140280",
    "end": "143760"
  },
  {
    "text": "however if Nopal is listed with Cube",
    "start": "143760",
    "end": "146220"
  },
  {
    "text": "control get power command first let's",
    "start": "146220",
    "end": "148860"
  },
  {
    "start": "148000",
    "end": "208000"
  },
  {
    "text": "check the diamond set with Cube control",
    "start": "148860",
    "end": "150780"
  },
  {
    "text": "describe demonstrate command",
    "start": "150780",
    "end": "153780"
  },
  {
    "text": "now to make sure that the versions of",
    "start": "153780",
    "end": "155459"
  },
  {
    "text": "AWS not and qpark C are compatible with",
    "start": "155459",
    "end": "158760"
  },
  {
    "text": "the cluster version let's get a version",
    "start": "158760",
    "end": "160860"
  },
  {
    "text": "with Cube control get demon set commands",
    "start": "160860",
    "end": "165480"
  },
  {
    "text": "if your eks worker note is in unknown",
    "start": "165480",
    "end": "168060"
  },
  {
    "text": "status",
    "start": "168060",
    "end": "169140"
  },
  {
    "text": "then check these attributes",
    "start": "169140",
    "end": "171360"
  },
  {
    "text": "the network configuration between nodes",
    "start": "171360",
    "end": "173400"
  },
  {
    "text": "and the control plane",
    "start": "173400",
    "end": "175379"
  },
  {
    "text": "the status of the triplet",
    "start": "175379",
    "end": "177900"
  },
  {
    "text": "readily Amazon ec2 API endpoint is",
    "start": "177900",
    "end": "180599"
  },
  {
    "text": "reachable",
    "start": "180599",
    "end": "181680"
  },
  {
    "text": "the worker node instance profile and a",
    "start": "181680",
    "end": "184019"
  },
  {
    "text": "config map",
    "start": "184019",
    "end": "186060"
  },
  {
    "text": "to allow the network traffic from the",
    "start": "186060",
    "end": "187980"
  },
  {
    "text": "eks node group access to the eks control",
    "start": "187980",
    "end": "190560"
  },
  {
    "text": "plan make sure that no network access",
    "start": "190560",
    "end": "192599"
  },
  {
    "text": "control is rules block traffic between",
    "start": "192599",
    "end": "195360"
  },
  {
    "text": "the Amazon eks control plan and your",
    "start": "195360",
    "end": "197459"
  },
  {
    "text": "working nodes",
    "start": "197459",
    "end": "199080"
  },
  {
    "text": "measure island security groups for your",
    "start": "199080",
    "end": "201239"
  },
  {
    "text": "control plan and not allow the traffic",
    "start": "201239",
    "end": "203159"
  },
  {
    "text": "from each other",
    "start": "203159",
    "end": "205080"
  },
  {
    "text": "and then check the routing table",
    "start": "205080",
    "end": "208560"
  },
  {
    "start": "208000",
    "end": "268000"
  },
  {
    "text": "let's see how to check the traffic from",
    "start": "208560",
    "end": "210360"
  },
  {
    "text": "the worker node to the eks apis server",
    "start": "210360",
    "end": "214560"
  },
  {
    "text": "first let's get the ecas API server",
    "start": "214560",
    "end": "217080"
  },
  {
    "text": "endpoint with this awcoci command",
    "start": "217080",
    "end": "220080"
  },
  {
    "text": "and then copy the eks API server",
    "start": "220080",
    "end": "222180"
  },
  {
    "text": "endpoint",
    "start": "222180",
    "end": "224099"
  },
  {
    "text": "next let's log into an eks worker node",
    "start": "224099",
    "end": "228540"
  },
  {
    "text": "install the NC command with yam come in",
    "start": "228540",
    "end": "232860"
  },
  {
    "text": "now check the connection from the eks",
    "start": "232860",
    "end": "235920"
  },
  {
    "text": "working node to the eks API server with",
    "start": "235920",
    "end": "238319"
  },
  {
    "text": "NC command",
    "start": "238319",
    "end": "240540"
  },
  {
    "text": "if the NC command can connect to the eks",
    "start": "240540",
    "end": "243180"
  },
  {
    "text": "API server check the route table to see",
    "start": "243180",
    "end": "245519"
  },
  {
    "text": "whether it's associated with an internet",
    "start": "245519",
    "end": "247560"
  },
  {
    "text": "gateway or net Gateway",
    "start": "247560",
    "end": "250200"
  },
  {
    "text": "if your cluster is in your private",
    "start": "250200",
    "end": "251939"
  },
  {
    "text": "Network check if the VPC endpoint is",
    "start": "251939",
    "end": "254640"
  },
  {
    "text": "configured correctly",
    "start": "254640",
    "end": "257659"
  },
  {
    "text": "Triplet a community's note engine",
    "start": "260699",
    "end": "263580"
  },
  {
    "text": "is responsible for registering the",
    "start": "263580",
    "end": "265979"
  },
  {
    "text": "worker node to eks Cluster",
    "start": "265979",
    "end": "268139"
  },
  {
    "start": "268000",
    "end": "340000"
  },
  {
    "text": "let's see how to check if equivalent is",
    "start": "268139",
    "end": "270120"
  },
  {
    "text": "working as expected on any case worker",
    "start": "270120",
    "end": "272460"
  },
  {
    "text": "node",
    "start": "272460",
    "end": "273240"
  },
  {
    "text": "first we will log into the eks worker",
    "start": "273240",
    "end": "276240"
  },
  {
    "text": "node",
    "start": "276240",
    "end": "277199"
  },
  {
    "text": "next to check if cable is running we",
    "start": "277199",
    "end": "280620"
  },
  {
    "text": "will use system control command to check",
    "start": "280620",
    "end": "282720"
  },
  {
    "text": "triplet",
    "start": "282720",
    "end": "284759"
  },
  {
    "text": "if the equivalent isn't in the running",
    "start": "284759",
    "end": "286440"
  },
  {
    "text": "status we can use system control command",
    "start": "286440",
    "end": "288720"
  },
  {
    "text": "to restart triplet",
    "start": "288720",
    "end": "291540"
  },
  {
    "text": "to check the Triple A logs run a journal",
    "start": "291540",
    "end": "294419"
  },
  {
    "text": "control command",
    "start": "294419",
    "end": "296699"
  },
  {
    "text": "for example if the worker node is",
    "start": "296699",
    "end": "299100"
  },
  {
    "text": "missing the Amazon elastic compute cloud",
    "start": "299100",
    "end": "301320"
  },
  {
    "text": "in central we might see a Google analog",
    "start": "301320",
    "end": "303840"
  },
  {
    "text": "that looks like this",
    "start": "303840",
    "end": "306240"
  },
  {
    "text": "the CLI plugin needs to call Amazon ec2",
    "start": "306240",
    "end": "309180"
  },
  {
    "text": "API to allocate IP addresses and to use",
    "start": "309180",
    "end": "313020"
  },
  {
    "text": "the create network interface API",
    "start": "313020",
    "end": "316560"
  },
  {
    "text": "let's see how to check if the eks",
    "start": "316560",
    "end": "318540"
  },
  {
    "text": "working node can communicate with the",
    "start": "318540",
    "end": "320520"
  },
  {
    "text": "Amazon ec2 API endpoint for this region",
    "start": "320520",
    "end": "325139"
  },
  {
    "text": "first we'll log into the ecas worker",
    "start": "325139",
    "end": "327720"
  },
  {
    "text": "node",
    "start": "327720",
    "end": "329160"
  },
  {
    "text": "then let's run the NC command to check",
    "start": "329160",
    "end": "331919"
  },
  {
    "text": "the Amazon ec2 API endpoint",
    "start": "331919",
    "end": "334500"
  },
  {
    "text": "remember to replace the region in in",
    "start": "334500",
    "end": "336780"
  },
  {
    "text": "this command with the region where the",
    "start": "336780",
    "end": "338699"
  },
  {
    "text": "worker node is located",
    "start": "338699",
    "end": "341160"
  },
  {
    "start": "340000",
    "end": "392000"
  },
  {
    "text": "let's make sure that the working node",
    "start": "341160",
    "end": "342780"
  },
  {
    "text": "has the right AWS identity and access",
    "start": "342780",
    "end": "345240"
  },
  {
    "text": "management policy",
    "start": "345240",
    "end": "347940"
  },
  {
    "text": "first we'll check the ec2 instance rule",
    "start": "347940",
    "end": "350400"
  },
  {
    "text": "on the ec2 console",
    "start": "350400",
    "end": "353400"
  },
  {
    "text": "choose ec2",
    "start": "353400",
    "end": "356039"
  },
  {
    "text": "now choose instances on the left hand",
    "start": "356039",
    "end": "358740"
  },
  {
    "text": "side",
    "start": "358740",
    "end": "360300"
  },
  {
    "text": "next choose the organelle instance ID",
    "start": "360300",
    "end": "364740"
  },
  {
    "text": "choose your security tab",
    "start": "364740",
    "end": "366600"
  },
  {
    "text": "then find the instance rule",
    "start": "366600",
    "end": "370380"
  },
  {
    "text": "here let's make sure that the instance",
    "start": "370380",
    "end": "372419"
  },
  {
    "text": "at least has Amazon eks working null",
    "start": "372419",
    "end": "374759"
  },
  {
    "text": "policy and Amazon ec2 container registry",
    "start": "374759",
    "end": "377520"
  },
  {
    "text": "read only",
    "start": "377520",
    "end": "379680"
  },
  {
    "text": "to confirm that the local node instance",
    "start": "379680",
    "end": "382020"
  },
  {
    "text": "rule is in the AWS auth config map",
    "start": "382020",
    "end": "385199"
  },
  {
    "text": "run is Q control command",
    "start": "385199",
    "end": "388620"
  },
  {
    "text": "you should see the IM raw AR and in AWS",
    "start": "388620",
    "end": "391680"
  },
  {
    "text": "off config map",
    "start": "391680",
    "end": "393600"
  },
  {
    "start": "392000",
    "end": "426000"
  },
  {
    "text": "so now you know how to check the",
    "start": "393600",
    "end": "395400"
  },
  {
    "text": "potential courses for working nodes that",
    "start": "395400",
    "end": "397979"
  },
  {
    "text": "are in an already or unknown status by",
    "start": "397979",
    "end": "401039"
  },
  {
    "text": "checking the cni plugin to proxy the",
    "start": "401039",
    "end": "404100"
  },
  {
    "text": "network configuration the state has",
    "start": "404100",
    "end": "406319"
  },
  {
    "text": "accumulate the ec2 API endpoint and what",
    "start": "406319",
    "end": "409500"
  },
  {
    "text": "can no instance profile",
    "start": "409500",
    "end": "411600"
  },
  {
    "text": "thanks for watching and happy cloud",
    "start": "411600",
    "end": "413280"
  },
  {
    "text": "computing from all of us here at AWS",
    "start": "413280",
    "end": "417300"
  },
  {
    "text": "foreign",
    "start": "417300",
    "end": "418910"
  },
  {
    "text": "[Music]",
    "start": "418910",
    "end": "422079"
  },
  {
    "text": "[Music]",
    "start": "424120",
    "end": "427300"
  }
]