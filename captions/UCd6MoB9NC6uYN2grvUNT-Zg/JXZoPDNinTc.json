[
  {
    "start": "0",
    "end": "69000"
  },
  {
    "text": "my name's Matt Johnson",
    "start": "9340",
    "end": "12180"
  },
  {
    "text": "in the AWS public sector team just to",
    "start": "12180",
    "end": "15780"
  },
  {
    "text": "just go back once a couple of slides to",
    "start": "15780",
    "end": "18240"
  },
  {
    "text": "talk about the the breakout areas so",
    "start": "18240",
    "end": "21300"
  },
  {
    "text": "we've got we're very lucky to have",
    "start": "21300",
    "end": "23520"
  },
  {
    "text": "Rodrigo Rocca over from the states",
    "start": "23520",
    "end": "26100"
  },
  {
    "text": "he's principal BD for our biz dev for",
    "start": "26100",
    "end": "29400"
  },
  {
    "text": "the Cerberus team so he's around until",
    "start": "29400",
    "end": "32279"
  },
  {
    "text": "around about half one today the two",
    "start": "32279",
    "end": "34500"
  },
  {
    "text": "sessions were running and the second",
    "start": "34500",
    "end": "36150"
  },
  {
    "text": "session is an invite-only where a few",
    "start": "36150",
    "end": "38370"
  },
  {
    "text": "customers be talking about explicit or",
    "start": "38370",
    "end": "40320"
  },
  {
    "text": "specific projects the first session is",
    "start": "40320",
    "end": "43110"
  },
  {
    "text": "available to anyone who signed an NDA",
    "start": "43110",
    "end": "44610"
  },
  {
    "text": "today and wants to talk sort of in",
    "start": "44610",
    "end": "46620"
  },
  {
    "text": "general or if you want a conversation",
    "start": "46620",
    "end": "48239"
  },
  {
    "text": "that's not under NDA but just want",
    "start": "48239",
    "end": "50100"
  },
  {
    "text": "someone's one time with that that first",
    "start": "50100",
    "end": "51780"
  },
  {
    "text": "session is one to use but we're also",
    "start": "51780",
    "end": "54630"
  },
  {
    "text": "lucky to have you know not only Matt",
    "start": "54630",
    "end": "56820"
  },
  {
    "text": "Lewis from DVLA but some great sessions",
    "start": "56820",
    "end": "59160"
  },
  {
    "text": "as well from Ryan and Karl and so I",
    "start": "59160",
    "end": "62370"
  },
  {
    "text": "really encourage you to go to those as",
    "start": "62370",
    "end": "63809"
  },
  {
    "text": "well if you can okay",
    "start": "63809",
    "end": "66210"
  },
  {
    "text": "swivels transformation so really what",
    "start": "66210",
    "end": "70259"
  },
  {
    "text": "we're going to cover three things today",
    "start": "70259",
    "end": "71460"
  },
  {
    "text": "from my point of view what is serverless",
    "start": "71460",
    "end": "72899"
  },
  {
    "text": "where we are and how AWS can help you",
    "start": "72899",
    "end": "75960"
  },
  {
    "text": "with the service transformation so what",
    "start": "75960",
    "end": "79229"
  },
  {
    "start": "78000",
    "end": "87000"
  },
  {
    "text": "is service really it's all about",
    "start": "79229",
    "end": "80909"
  },
  {
    "text": "building and running applications",
    "start": "80909",
    "end": "82500"
  },
  {
    "text": "without having to worry about",
    "start": "82500",
    "end": "83610"
  },
  {
    "text": "infrastructure and in particular without",
    "start": "83610",
    "end": "85290"
  },
  {
    "text": "having to worry about service so if we",
    "start": "85290",
    "end": "88710"
  },
  {
    "start": "87000",
    "end": "101000"
  },
  {
    "text": "look at how the evolution of computing",
    "start": "88710",
    "end": "91110"
  },
  {
    "text": "has happened over the last 30 odd years",
    "start": "91110",
    "end": "93030"
  },
  {
    "text": "we started with physical servers and",
    "start": "93030",
    "end": "94950"
  },
  {
    "text": "data centers I think everyone's sort of",
    "start": "94950",
    "end": "96750"
  },
  {
    "text": "probably come from that background and",
    "start": "96750",
    "end": "99299"
  },
  {
    "text": "that's great that's where it started",
    "start": "99299",
    "end": "100850"
  },
  {
    "text": "what we've then moved is we looked at",
    "start": "100850",
    "end": "103320"
  },
  {
    "start": "101000",
    "end": "152000"
  },
  {
    "text": "virtualization within the data center",
    "start": "103320",
    "end": "105000"
  },
  {
    "text": "and that enabled us to get some",
    "start": "105000",
    "end": "107070"
  },
  {
    "text": "economies of scale it enabled us to",
    "start": "107070",
    "end": "108479"
  },
  {
    "text": "compress some of the infrastructure on",
    "start": "108479",
    "end": "110540"
  },
  {
    "text": "virtual machines onto a fewer number of",
    "start": "110540",
    "end": "112710"
  },
  {
    "text": "physical servers but it was still",
    "start": "112710",
    "end": "114470"
  },
  {
    "text": "management of both the hypervisor and",
    "start": "114470",
    "end": "116670"
  },
  {
    "text": "the physical and the virtual of machines",
    "start": "116670",
    "end": "118829"
  },
  {
    "text": "on top and then we moved to virtual",
    "start": "118829",
    "end": "121650"
  },
  {
    "text": "servers in the cloud and so this is a",
    "start": "121650",
    "end": "123329"
  },
  {
    "text": "service that with an AWS we call ec2 or",
    "start": "123329",
    "end": "125850"
  },
  {
    "text": "Elastic Compute cloud and that gives you",
    "start": "125850",
    "end": "128519"
  },
  {
    "text": "all the flexibility of virtual",
    "start": "128519",
    "end": "130979"
  },
  {
    "text": "infrastructure without having to worry",
    "start": "130979",
    "end": "132420"
  },
  {
    "text": "about your data center without having to",
    "start": "132420",
    "end": "134220"
  },
  {
    "text": "worry about the physical kit and each",
    "start": "134220",
    "end": "138150"
  },
  {
    "text": "progressive step was better so as we",
    "start": "138150",
    "end": "140519"
  },
  {
    "text": "looked at it you know physical you had",
    "start": "140519",
    "end": "142500"
  },
  {
    "text": "to manage everything furniture you try",
    "start": "142500",
    "end": "144359"
  },
  {
    "text": "to abstract it a little bit",
    "start": "144359",
    "end": "145569"
  },
  {
    "text": "virtual servers in the cloud now you're",
    "start": "145569",
    "end": "147549"
  },
  {
    "text": "in a position where actually you don't",
    "start": "147549",
    "end": "149079"
  },
  {
    "text": "need to worry about anything other than",
    "start": "149079",
    "end": "150219"
  },
  {
    "text": "the virtual machine",
    "start": "150219",
    "end": "152579"
  },
  {
    "text": "it provided higher utilization faster",
    "start": "152579",
    "end": "155859"
  },
  {
    "text": "provisioning within obviously VM using",
    "start": "155859",
    "end": "160239"
  },
  {
    "text": "vSphere things like that disaster",
    "start": "160239",
    "end": "162280"
  },
  {
    "text": "recovery things like high availability",
    "start": "162280",
    "end": "164549"
  },
  {
    "text": "independent some hardware you could take",
    "start": "164549",
    "end": "166510"
  },
  {
    "text": "a VM and abstract it and similarly",
    "start": "166510",
    "end": "169689"
  },
  {
    "start": "168000",
    "end": "198000"
  },
  {
    "text": "within the cloud that took another level",
    "start": "169689",
    "end": "171670"
  },
  {
    "text": "of abstraction away so you no longer had",
    "start": "171670",
    "end": "173139"
  },
  {
    "text": "to worry about infrastructure you could",
    "start": "173139",
    "end": "174700"
  },
  {
    "text": "exchange capex for op X you could scale",
    "start": "174700",
    "end": "177819"
  },
  {
    "text": "on demand your scale wasn't limited by",
    "start": "177819",
    "end": "179680"
  },
  {
    "text": "the physical kit in your data center you",
    "start": "179680",
    "end": "181659"
  },
  {
    "text": "could buy resources and a lot of our",
    "start": "181659",
    "end": "183700"
  },
  {
    "text": "conversation yesterday was talking about",
    "start": "183700",
    "end": "185260"
  },
  {
    "text": "some of the the benefits of that ability",
    "start": "185260",
    "end": "187720"
  },
  {
    "text": "to scale elastically obviously you don't",
    "start": "187720",
    "end": "190569"
  },
  {
    "text": "have any issues around physical",
    "start": "190569",
    "end": "191889"
  },
  {
    "text": "maintenance or datacenter maintenance",
    "start": "191889",
    "end": "193480"
  },
  {
    "text": "and well architected designs can give",
    "start": "193480",
    "end": "195939"
  },
  {
    "text": "you far better availability and fault",
    "start": "195939",
    "end": "197290"
  },
  {
    "text": "tolerance but there are still",
    "start": "197290",
    "end": "200439"
  },
  {
    "start": "198000",
    "end": "233000"
  },
  {
    "text": "limitations you still need to manage",
    "start": "200439",
    "end": "202209"
  },
  {
    "text": "that virtual estate you still need to",
    "start": "202209",
    "end": "204310"
  },
  {
    "text": "plan and manage your capacity and",
    "start": "204310",
    "end": "205720"
  },
  {
    "text": "utilization you still need to size your",
    "start": "205720",
    "end": "208299"
  },
  {
    "text": "workloads appropriately whether that's",
    "start": "208299",
    "end": "209769"
  },
  {
    "text": "your disk i/o or whether that's your CPU",
    "start": "209769",
    "end": "212650"
  },
  {
    "text": "and RAM capabilities for a particular",
    "start": "212650",
    "end": "214479"
  },
  {
    "text": "instance or application you still need",
    "start": "214479",
    "end": "216579"
  },
  {
    "text": "to design an architect how you're gonna",
    "start": "216579",
    "end": "218079"
  },
  {
    "text": "get your high availability whether",
    "start": "218079",
    "end": "219370"
  },
  {
    "text": "that's load bass load balancing or",
    "start": "219370",
    "end": "221319"
  },
  {
    "text": "clustering whatever it might be and it's",
    "start": "221319",
    "end": "224139"
  },
  {
    "text": "still expensive to run intermittent jobs",
    "start": "224139",
    "end": "225609"
  },
  {
    "text": "you still need if you just want to run",
    "start": "225609",
    "end": "227019"
  },
  {
    "text": "something very quickly and then shut it",
    "start": "227019",
    "end": "228579"
  },
  {
    "text": "down there's still a cost to pay for",
    "start": "228579",
    "end": "230049"
  },
  {
    "text": "that whether it's in time or money so",
    "start": "230049",
    "end": "233698"
  },
  {
    "start": "233000",
    "end": "254000"
  },
  {
    "text": "we're now thinking about the evolution",
    "start": "234389",
    "end": "236889"
  },
  {
    "text": "to service and this is effectively how",
    "start": "236889",
    "end": "240519"
  },
  {
    "text": "we can reduce some of the friction of IT",
    "start": "240519",
    "end": "242109"
  },
  {
    "text": "management and allow us to scale quickly",
    "start": "242109",
    "end": "245079"
  },
  {
    "text": "and rapidly based on code so it affects",
    "start": "245079",
    "end": "248079"
  },
  {
    "text": "me provision and all the compute",
    "start": "248079",
    "end": "249280"
  },
  {
    "text": "capacity you need without having to",
    "start": "249280",
    "end": "250780"
  },
  {
    "text": "worry about the underlying compute and",
    "start": "250780",
    "end": "255599"
  },
  {
    "start": "254000",
    "end": "285000"
  },
  {
    "text": "really the tagline for that is no server",
    "start": "255599",
    "end": "258579"
  },
  {
    "text": "is easier to manage than no server so",
    "start": "258579",
    "end": "261010"
  },
  {
    "text": "once you have to worry about just the",
    "start": "261010",
    "end": "263530"
  },
  {
    "text": "code just the compute application side",
    "start": "263530",
    "end": "266860"
  },
  {
    "text": "all this goes away you'd have to worry",
    "start": "266860",
    "end": "268330"
  },
  {
    "text": "about the provision and utilization",
    "start": "268330",
    "end": "269520"
  },
  {
    "text": "you'd have to worry about the fault",
    "start": "269520",
    "end": "271360"
  },
  {
    "text": "tolerance as a managed service we worry",
    "start": "271360",
    "end": "273220"
  },
  {
    "text": "about how the server's compute engine",
    "start": "273220",
    "end": "275800"
  },
  {
    "text": "scales in the background we worry about",
    "start": "275800",
    "end": "278620"
  },
  {
    "text": "how we can",
    "start": "278620",
    "end": "279249"
  },
  {
    "text": "and manage it you concentrate and focus",
    "start": "279249",
    "end": "281079"
  },
  {
    "text": "on your code and the key thing to take",
    "start": "281079",
    "end": "287139"
  },
  {
    "start": "285000",
    "end": "310000"
  },
  {
    "text": "away from this is that it's delivered on",
    "start": "287139",
    "end": "289839"
  },
  {
    "text": "demand so when you're not using it you",
    "start": "289839",
    "end": "291789"
  },
  {
    "text": "pay nothing you you have nothing running",
    "start": "291789",
    "end": "294519"
  },
  {
    "text": "and it's just there as code when you",
    "start": "294519",
    "end": "297369"
  },
  {
    "text": "need it to run events will then trigger",
    "start": "297369",
    "end": "300399"
  },
  {
    "text": "particular compute the process will run",
    "start": "300399",
    "end": "303339"
  },
  {
    "text": "shut down and you've only paid for what",
    "start": "303339",
    "end": "305619"
  },
  {
    "text": "you use so let's just build this out and",
    "start": "305619",
    "end": "308139"
  },
  {
    "text": "show how this works so events this could",
    "start": "308139",
    "end": "313239"
  },
  {
    "start": "310000",
    "end": "342000"
  },
  {
    "text": "be in response to a particular API call",
    "start": "313239",
    "end": "315849"
  },
  {
    "text": "it could be in response to somebody",
    "start": "315849",
    "end": "317469"
  },
  {
    "text": "putting a file onto an s3 bucket",
    "start": "317469",
    "end": "319869"
  },
  {
    "text": "whatever it might be",
    "start": "319869",
    "end": "321579"
  },
  {
    "text": "whether that's one event or a thousand",
    "start": "321579",
    "end": "323379"
  },
  {
    "text": "events we worry within the lambda",
    "start": "323379",
    "end": "325419"
  },
  {
    "text": "capability how we scale that so if it's",
    "start": "325419",
    "end": "327999"
  },
  {
    "text": "running one we won't run one lambda",
    "start": "327999",
    "end": "330189"
  },
  {
    "text": "function if it's a thousand we scale up",
    "start": "330189",
    "end": "332169"
  },
  {
    "text": "we run those in parallel you only pay",
    "start": "332169",
    "end": "334779"
  },
  {
    "text": "for the lambda functions that have been",
    "start": "334779",
    "end": "336069"
  },
  {
    "text": "used really key important point we don't",
    "start": "336069",
    "end": "339099"
  },
  {
    "text": "you don't have to worry about any of",
    "start": "339099",
    "end": "340239"
  },
  {
    "text": "that scalability yourself and there's",
    "start": "340239",
    "end": "343029"
  },
  {
    "start": "342000",
    "end": "460000"
  },
  {
    "text": "some key building blocks for server",
    "start": "343029",
    "end": "344289"
  },
  {
    "text": "lists so I've talked about lambda so",
    "start": "344289",
    "end": "346629"
  },
  {
    "text": "lambda is our compute on-demand service",
    "start": "346629",
    "end": "349329"
  },
  {
    "text": "I suppose is the best way to call it",
    "start": "349329",
    "end": "351129"
  },
  {
    "text": "what it means is you can write code that",
    "start": "351129",
    "end": "353259"
  },
  {
    "text": "code can be in Python it can be in Java",
    "start": "353259",
    "end": "355599"
  },
  {
    "text": "it can be no js' or recently it's now a",
    "start": "355599",
    "end": "358629"
  },
  {
    "text": "support c-sharp you write your code you",
    "start": "358629",
    "end": "360939"
  },
  {
    "text": "package it up as a function you upload",
    "start": "360939",
    "end": "362979"
  },
  {
    "text": "it to the lambda service and then it's",
    "start": "362979",
    "end": "364389"
  },
  {
    "text": "available to respond to events and that",
    "start": "364389",
    "end": "367059"
  },
  {
    "text": "lambda function can make calls into any",
    "start": "367059",
    "end": "369399"
  },
  {
    "text": "other part of our AWS infrastructure so",
    "start": "369399",
    "end": "371889"
  },
  {
    "text": "we have more than 70 services that we",
    "start": "371889",
    "end": "373629"
  },
  {
    "text": "can talk to but some of the key ones",
    "start": "373629",
    "end": "375579"
  },
  {
    "text": "we've called out here are ones that are",
    "start": "375579",
    "end": "377349"
  },
  {
    "text": "also server less so s3 is our object",
    "start": "377349",
    "end": "380139"
  },
  {
    "text": "storage service",
    "start": "380139",
    "end": "381279"
  },
  {
    "text": "again that's the managed service you",
    "start": "381279",
    "end": "383019"
  },
  {
    "text": "don't have to worry about that you just",
    "start": "383019",
    "end": "384159"
  },
  {
    "text": "put objects in there we worry about the",
    "start": "384159",
    "end": "385779"
  },
  {
    "text": "scalability the durability of that",
    "start": "385779",
    "end": "387339"
  },
  {
    "text": "service dynamodb is our no sequel",
    "start": "387339",
    "end": "389949"
  },
  {
    "text": "database service we handle the the scale",
    "start": "389949",
    "end": "392349"
  },
  {
    "text": "out the scaling of that we handle how",
    "start": "392349",
    "end": "394419"
  },
  {
    "text": "the data is replicated how it's stored",
    "start": "394419",
    "end": "396639"
  },
  {
    "text": "resilient ly I'm as an API gateway as I",
    "start": "396639",
    "end": "399669"
  },
  {
    "text": "manage gate API gateway service this",
    "start": "399669",
    "end": "401499"
  },
  {
    "text": "allows you to present api's out",
    "start": "401499",
    "end": "404110"
  },
  {
    "text": "externally we worry about the scale of",
    "start": "404110",
    "end": "406509"
  },
  {
    "text": "that you just decide on the API",
    "start": "406509",
    "end": "408759"
  },
  {
    "text": "definitions and how you're going to",
    "start": "408759",
    "end": "410079"
  },
  {
    "text": "present them",
    "start": "410079",
    "end": "411310"
  },
  {
    "text": "to allow loose coupling of services we",
    "start": "411310",
    "end": "413960"
  },
  {
    "text": "have things like our queue service and",
    "start": "413960",
    "end": "415670"
  },
  {
    "text": "our notification service these allow you",
    "start": "415670",
    "end": "417770"
  },
  {
    "text": "to tie together small blocks of services",
    "start": "417770",
    "end": "420380"
  },
  {
    "text": "or micro services to better talk to each",
    "start": "420380",
    "end": "422720"
  },
  {
    "text": "other",
    "start": "422720",
    "end": "423170"
  },
  {
    "text": "Kinesis allows us to handle streams of",
    "start": "423170",
    "end": "425750"
  },
  {
    "text": "data whether that structure streams of",
    "start": "425750",
    "end": "427550"
  },
  {
    "text": "data or unstructured streams step",
    "start": "427550",
    "end": "430040"
  },
  {
    "text": "functions is a new service that allows",
    "start": "430040",
    "end": "431690"
  },
  {
    "text": "you to coordinate a lot of the lambda",
    "start": "431690",
    "end": "433190"
  },
  {
    "text": "functions run things in parallel or",
    "start": "433190",
    "end": "435260"
  },
  {
    "text": "sequential and more recently x-ray",
    "start": "435260",
    "end": "438350"
  },
  {
    "text": "allows you to debug and monitor",
    "start": "438350",
    "end": "439910"
  },
  {
    "text": "applications and understand their",
    "start": "439910",
    "end": "441290"
  },
  {
    "text": "performance all of these are effectively",
    "start": "441290",
    "end": "443300"
  },
  {
    "text": "managed services doesn't mean lambda",
    "start": "443300",
    "end": "445850"
  },
  {
    "text": "can't talk to things like ec2 and IDs",
    "start": "445850",
    "end": "448070"
  },
  {
    "text": "but those obviously I then have a server",
    "start": "448070",
    "end": "450950"
  },
  {
    "text": "component again so if you're looking to",
    "start": "450950",
    "end": "452960"
  },
  {
    "text": "architect a completely service",
    "start": "452960",
    "end": "454340"
  },
  {
    "text": "application these are the tools that you",
    "start": "454340",
    "end": "456530"
  },
  {
    "text": "can use and these are being added to all",
    "start": "456530",
    "end": "457880"
  },
  {
    "text": "the time and really server this changes",
    "start": "457880",
    "end": "461930"
  },
  {
    "text": "how you deliver so it should eliminate",
    "start": "461930",
    "end": "464060"
  },
  {
    "text": "operational complexity",
    "start": "464060",
    "end": "465830"
  },
  {
    "text": "this means that developers can focus",
    "start": "465830",
    "end": "467450"
  },
  {
    "text": "just on the code and the application",
    "start": "467450",
    "end": "469580"
  },
  {
    "text": "logic that in turn means they can",
    "start": "469580",
    "end": "471890"
  },
  {
    "text": "rapidly iterate and produce new services",
    "start": "471890",
    "end": "473930"
  },
  {
    "text": "bring those to market quickly which",
    "start": "473930",
    "end": "476210"
  },
  {
    "text": "means they've got more time to innovate",
    "start": "476210",
    "end": "477320"
  },
  {
    "text": "and then that feeds back as they",
    "start": "477320",
    "end": "479660"
  },
  {
    "text": "innovate more they can still get rid of",
    "start": "479660",
    "end": "481340"
  },
  {
    "text": "more operational complexity increase",
    "start": "481340",
    "end": "483190"
  },
  {
    "text": "productivity and so on so you end up",
    "start": "483190",
    "end": "485300"
  },
  {
    "text": "with a very virtuous circle so some of",
    "start": "485300",
    "end": "489710"
  },
  {
    "start": "488000",
    "end": "550000"
  },
  {
    "text": "the capabilities of a service platform",
    "start": "489710",
    "end": "491330"
  },
  {
    "text": "so these are the things that we look",
    "start": "491330",
    "end": "492860"
  },
  {
    "text": "when we're deploying lambda and all",
    "start": "492860",
    "end": "494930"
  },
  {
    "text": "other other capabilities we have a cloud",
    "start": "494930",
    "end": "497000"
  },
  {
    "text": "logic layer we have orchestration estate",
    "start": "497000",
    "end": "499520"
  },
  {
    "text": "management responsive data sources",
    "start": "499520",
    "end": "502600"
  },
  {
    "text": "application modeling framework I would",
    "start": "502600",
    "end": "504830"
  },
  {
    "text": "talk a bit more about these later a very",
    "start": "504830",
    "end": "506630"
  },
  {
    "text": "strong and developing ecosystem you're",
    "start": "506630",
    "end": "508910"
  },
  {
    "text": "gonna be hearing from some people who",
    "start": "508910",
    "end": "510770"
  },
  {
    "text": "have built services on top of that",
    "start": "510770",
    "end": "512180"
  },
  {
    "text": "ecosystem today integrations libraries",
    "start": "512180",
    "end": "515390"
  },
  {
    "text": "so how we integrate with existing",
    "start": "515390",
    "end": "516909"
  },
  {
    "text": "third-party services security and access",
    "start": "516910",
    "end": "520099"
  },
  {
    "text": "control a key part of everything we do",
    "start": "520100",
    "end": "522349"
  },
  {
    "text": "AWS we have very granular access control",
    "start": "522350",
    "end": "525680"
  },
  {
    "text": "on what lambda functions can and can't",
    "start": "525680",
    "end": "527210"
  },
  {
    "text": "do in terms of both calling other",
    "start": "527210",
    "end": "529400"
  },
  {
    "text": "services and what they interact with",
    "start": "529400",
    "end": "531790"
  },
  {
    "text": "reliability and performance so it's",
    "start": "531790",
    "end": "533780"
  },
  {
    "text": "designed to run at massive scale in a",
    "start": "533780",
    "end": "536600"
  },
  {
    "text": "fully managed way and it runs a global",
    "start": "536600",
    "end": "539150"
  },
  {
    "text": "one of the things we've introduced",
    "start": "539150",
    "end": "540470"
  },
  {
    "text": "recently is something called lambda edge",
    "start": "540470",
    "end": "542540"
  },
  {
    "text": "which allows us to run",
    "start": "542540",
    "end": "544470"
  },
  {
    "text": "the functionality in our cloud",
    "start": "544470",
    "end": "545790"
  },
  {
    "text": "distribution that were a content",
    "start": "545790",
    "end": "547200"
  },
  {
    "text": "distribution network I will touch on",
    "start": "547200",
    "end": "548850"
  },
  {
    "text": "that later so that's really a sort of",
    "start": "548850",
    "end": "552030"
  },
  {
    "start": "550000",
    "end": "575000"
  },
  {
    "text": "very brief overview of what server this",
    "start": "552030",
    "end": "554670"
  },
  {
    "text": "is if you can take one thing away from",
    "start": "554670",
    "end": "556230"
  },
  {
    "text": "it it's event-based compute so an event",
    "start": "556230",
    "end": "559710"
  },
  {
    "text": "happens a lambda function runs to do",
    "start": "559710",
    "end": "562020"
  },
  {
    "text": "something that's it",
    "start": "562020",
    "end": "563700"
  },
  {
    "text": "so you've got a very sort of focused",
    "start": "563700",
    "end": "566220"
  },
  {
    "text": "micro service that does something that",
    "start": "566220",
    "end": "568200"
  },
  {
    "text": "you want it to do any questions on that",
    "start": "568200",
    "end": "570570"
  },
  {
    "text": "before we move on to the next section",
    "start": "570570",
    "end": "574070"
  },
  {
    "start": "575000",
    "end": "648000"
  },
  {
    "text": "okay so let's look at some of the common",
    "start": "575480",
    "end": "577980"
  },
  {
    "text": "use cases for service so web",
    "start": "577980",
    "end": "581430"
  },
  {
    "text": "applications will go into those in a bit",
    "start": "581430",
    "end": "583530"
  },
  {
    "text": "more detail but back-end services as",
    "start": "583530",
    "end": "586170"
  },
  {
    "text": "well whether that's for applications or",
    "start": "586170",
    "end": "588210"
  },
  {
    "text": "mobile or internet things how we can use",
    "start": "588210",
    "end": "591090"
  },
  {
    "text": "lambda to do data processing both in",
    "start": "591090",
    "end": "593640"
  },
  {
    "text": "real-time batch and also some more sort",
    "start": "593640",
    "end": "595860"
  },
  {
    "text": "of traditional server types capabilities",
    "start": "595860",
    "end": "598440"
  },
  {
    "text": "like MapReduce chatbots are becoming",
    "start": "598440",
    "end": "601710"
  },
  {
    "text": "more and more interesting both from a",
    "start": "601710",
    "end": "604020"
  },
  {
    "text": "DevOps upsetted but also engagement with",
    "start": "604020",
    "end": "605820"
  },
  {
    "text": "citizens so people may be familiar with",
    "start": "605820",
    "end": "608820"
  },
  {
    "text": "things like slack we've got ways of",
    "start": "608820",
    "end": "611160"
  },
  {
    "text": "integration with that to allow querying",
    "start": "611160",
    "end": "613080"
  },
  {
    "text": "of state and so on within chat",
    "start": "613080",
    "end": "616080"
  },
  {
    "text": "Alexa's our technology that powers the",
    "start": "616080",
    "end": "619410"
  },
  {
    "text": "echo and dot devices it's possible for",
    "start": "619410",
    "end": "622470"
  },
  {
    "text": "anyone to write their own skill that",
    "start": "622470",
    "end": "625170"
  },
  {
    "text": "will interact allow you to interact with",
    "start": "625170",
    "end": "626790"
  },
  {
    "text": "Alexa all of that is powered at the back",
    "start": "626790",
    "end": "628950"
  },
  {
    "text": "end or a lot of that is powered at the",
    "start": "628950",
    "end": "630690"
  },
  {
    "text": "back end by things like lambda and then",
    "start": "630690",
    "end": "633630"
  },
  {
    "text": "probably where a lot of people start",
    "start": "633630",
    "end": "635190"
  },
  {
    "text": "with service technology if you're coming",
    "start": "635190",
    "end": "636780"
  },
  {
    "text": "from a traditional environment is",
    "start": "636780",
    "end": "638430"
  },
  {
    "text": "autonomous IT so this effectively is how",
    "start": "638430",
    "end": "640950"
  },
  {
    "text": "you take some of your sis admin scripts",
    "start": "640950",
    "end": "643410"
  },
  {
    "text": "and so on and you move them into an Emma",
    "start": "643410",
    "end": "645510"
  },
  {
    "text": "service environment so if we look at web",
    "start": "645510",
    "end": "649650"
  },
  {
    "start": "648000",
    "end": "751000"
  },
  {
    "text": "applications and backends so this is",
    "start": "649650",
    "end": "652320"
  },
  {
    "text": "what we would consider I'm a service",
    "start": "652320",
    "end": "654570"
  },
  {
    "text": "application and if I talk you through it",
    "start": "654570",
    "end": "657330"
  },
  {
    "text": "effectively we've got mobile apps web",
    "start": "657330",
    "end": "660300"
  },
  {
    "text": "site services all coming across the",
    "start": "660300",
    "end": "662670"
  },
  {
    "text": "Internet hitting cloud front so this is",
    "start": "662670",
    "end": "664380"
  },
  {
    "text": "our content distribution network this is",
    "start": "664380",
    "end": "666300"
  },
  {
    "text": "the one that allows you to deliver",
    "start": "666300",
    "end": "669050"
  },
  {
    "text": "cached content from any one of 68 global",
    "start": "669050",
    "end": "672720"
  },
  {
    "text": "locations and then it that passes",
    "start": "672720",
    "end": "675240"
  },
  {
    "text": "requests back into API gateway",
    "start": "675240",
    "end": "677900"
  },
  {
    "text": "and then API gateway will in fact let's",
    "start": "677900",
    "end": "682250"
  },
  {
    "text": "take the step back what we have is some",
    "start": "682250",
    "end": "684710"
  },
  {
    "text": "of the static content may be stored on",
    "start": "684710",
    "end": "686330"
  },
  {
    "text": "s3 so you might present a webpage that",
    "start": "686330",
    "end": "688029"
  },
  {
    "text": "delivered from s3 that may have some",
    "start": "688029",
    "end": "691160"
  },
  {
    "text": "interactive code that wants to make an",
    "start": "691160",
    "end": "692839"
  },
  {
    "text": "API call that would come through API",
    "start": "692839",
    "end": "694910"
  },
  {
    "text": "gateway API gateway would pass it to",
    "start": "694910",
    "end": "697010"
  },
  {
    "text": "lambda lambda would do the processing it",
    "start": "697010",
    "end": "699380"
  },
  {
    "text": "would talk to any back-end databases",
    "start": "699380",
    "end": "701420"
  },
  {
    "text": "that might be there and it would then",
    "start": "701420",
    "end": "703190"
  },
  {
    "text": "pass a resort back API gate would return",
    "start": "703190",
    "end": "705710"
  },
  {
    "text": "it to the original function and the web",
    "start": "705710",
    "end": "708080"
  },
  {
    "text": "page will be updated all of these can",
    "start": "708080",
    "end": "710540"
  },
  {
    "text": "interact with other services like our",
    "start": "710540",
    "end": "712040"
  },
  {
    "text": "dynamo DB datastore all of it is",
    "start": "712040",
    "end": "714500"
  },
  {
    "text": "monitored by cloud watch our monitoring",
    "start": "714500",
    "end": "716270"
  },
  {
    "text": "service and we also have integration",
    "start": "716270",
    "end": "718880"
  },
  {
    "text": "with other endpoints as well so those",
    "start": "718880",
    "end": "720290"
  },
  {
    "text": "services can interact with third-party",
    "start": "720290",
    "end": "721640"
  },
  {
    "text": "endpoints on the Internet",
    "start": "721640",
    "end": "723080"
  },
  {
    "text": "so a sort of very sort of common use",
    "start": "723080",
    "end": "724790"
  },
  {
    "text": "case that pulls together a range of",
    "start": "724790",
    "end": "726980"
  },
  {
    "text": "services none of which require any",
    "start": "726980",
    "end": "728750"
  },
  {
    "text": "service so all of this is effectively a",
    "start": "728750",
    "end": "731870"
  },
  {
    "text": "managed services that will scale pretty",
    "start": "731870",
    "end": "735020"
  },
  {
    "text": "much automatically DynamoDB not quite",
    "start": "735020",
    "end": "737420"
  },
  {
    "text": "but that's that's near enough all of",
    "start": "737420",
    "end": "740870"
  },
  {
    "text": "those can scale based on your",
    "start": "740870",
    "end": "742520"
  },
  {
    "text": "requirements so one request a hundred",
    "start": "742520",
    "end": "744170"
  },
  {
    "text": "thousand requests the infrastructure",
    "start": "744170",
    "end": "746270"
  },
  {
    "text": "scale seamlessly in the background for",
    "start": "746270",
    "end": "747830"
  },
  {
    "text": "you if we look at data processing so",
    "start": "747830",
    "end": "754550"
  },
  {
    "start": "751000",
    "end": "822000"
  },
  {
    "text": "this is probably one of the most common",
    "start": "754550",
    "end": "756650"
  },
  {
    "text": "use cases we see and where people tend",
    "start": "756650",
    "end": "758600"
  },
  {
    "text": "to start with lambda this is where you",
    "start": "758600",
    "end": "761630"
  },
  {
    "text": "take an object so let's say a photograph",
    "start": "761630",
    "end": "763430"
  },
  {
    "text": "and you upload it into our object",
    "start": "763430",
    "end": "764900"
  },
  {
    "text": "storage service s3 what happens there is",
    "start": "764900",
    "end": "768260"
  },
  {
    "text": "that triggers an event that event",
    "start": "768260",
    "end": "770630"
  },
  {
    "text": "triggers a lambda function and the",
    "start": "770630",
    "end": "772279"
  },
  {
    "text": "lambda function does something in",
    "start": "772279",
    "end": "773750"
  },
  {
    "text": "response to that event so as an example",
    "start": "773750",
    "end": "775370"
  },
  {
    "text": "a photograph is taken it's put into a",
    "start": "775370",
    "end": "777560"
  },
  {
    "text": "bucket a lambda function will then run",
    "start": "777560",
    "end": "779779"
  },
  {
    "text": "generating things like metadata or exif",
    "start": "779779",
    "end": "782390"
  },
  {
    "text": "data and pushing that into a data store",
    "start": "782390",
    "end": "784940"
  },
  {
    "text": "as an example that's great and that's",
    "start": "784940",
    "end": "787160"
  },
  {
    "text": "straightforward but one's if you put 10",
    "start": "787160",
    "end": "788810"
  },
  {
    "text": "photos in at once what happens is the s3",
    "start": "788810",
    "end": "791540"
  },
  {
    "text": "triggers 10 events 10 lambda functions",
    "start": "791540",
    "end": "793910"
  },
  {
    "text": "of spun up in parallel to process that",
    "start": "793910",
    "end": "796940"
  },
  {
    "text": "data and push the data in someone pushes",
    "start": "796940",
    "end": "799310"
  },
  {
    "text": "a hundred photos in it scales up to a",
    "start": "799310",
    "end": "801890"
  },
  {
    "text": "hundred lambda functions in parallel",
    "start": "801890",
    "end": "803450"
  },
  {
    "text": "pushes the data in and so on all the",
    "start": "803450",
    "end": "805850"
  },
  {
    "text": "time all you've had to worry about is",
    "start": "805850",
    "end": "807320"
  },
  {
    "text": "that one piece of code that analyzes the",
    "start": "807320",
    "end": "809900"
  },
  {
    "text": "data everything else has taken from you",
    "start": "809900",
    "end": "811640"
  },
  {
    "text": "it's in a scale and fashion so really a",
    "start": "811640",
    "end": "814399"
  },
  {
    "text": "really powerful way of dealing with",
    "start": "814399",
    "end": "816079"
  },
  {
    "text": "services on demand when no one's putting",
    "start": "816079",
    "end": "818510"
  },
  {
    "text": "any photos in there's no cost another",
    "start": "818510",
    "end": "823339"
  },
  {
    "start": "822000",
    "end": "868000"
  },
  {
    "text": "form of data processing and we have a",
    "start": "823339",
    "end": "825050"
  },
  {
    "text": "service called Kinesis this is a way of",
    "start": "825050",
    "end": "826880"
  },
  {
    "text": "taking streams of data so this might be",
    "start": "826880",
    "end": "828769"
  },
  {
    "text": "a stream from social media and then",
    "start": "828769",
    "end": "831860"
  },
  {
    "text": "pushing that in and very rapidly into",
    "start": "831860",
    "end": "834620"
  },
  {
    "text": "other services so something we released",
    "start": "834620",
    "end": "837709"
  },
  {
    "text": "just reinvented fad is the ability to",
    "start": "837709",
    "end": "840560"
  },
  {
    "text": "have Kinesis trigger events in lambda so",
    "start": "840560",
    "end": "843620"
  },
  {
    "text": "that means we can push things like",
    "start": "843620",
    "end": "844850"
  },
  {
    "text": "social media streams into Kinesis that",
    "start": "844850",
    "end": "848120"
  },
  {
    "text": "can push into lamb the lamb didn't do",
    "start": "848120",
    "end": "849620"
  },
  {
    "text": "some processing so it might do sentiment",
    "start": "849620",
    "end": "851390"
  },
  {
    "text": "analysis it might do some metadata",
    "start": "851390",
    "end": "853339"
  },
  {
    "text": "around locations and then store process",
    "start": "853339",
    "end": "855620"
  },
  {
    "text": "that data and other services like",
    "start": "855620",
    "end": "857029"
  },
  {
    "text": "dynamodb and I think one of our partners",
    "start": "857029",
    "end": "861860"
  },
  {
    "text": "today will probably be talking about how",
    "start": "861860",
    "end": "863510"
  },
  {
    "text": "some of this is going to be working in",
    "start": "863510",
    "end": "864800"
  },
  {
    "text": "their application another example and",
    "start": "864800",
    "end": "870500"
  },
  {
    "start": "868000",
    "end": "945000"
  },
  {
    "text": "this is more sort of dynamic data",
    "start": "870500",
    "end": "871760"
  },
  {
    "text": "processing so traditionally if you had",
    "start": "871760",
    "end": "875240"
  },
  {
    "text": "an order processor system as orders were",
    "start": "875240",
    "end": "877310"
  },
  {
    "text": "added into that database you might have",
    "start": "877310",
    "end": "879860"
  },
  {
    "text": "a job that once or twice a day extracted",
    "start": "879860",
    "end": "882560"
  },
  {
    "text": "that data did an ETL loaded it into a",
    "start": "882560",
    "end": "884779"
  },
  {
    "text": "data warehouse and you could do some",
    "start": "884779",
    "end": "886279"
  },
  {
    "text": "analysis on sales figures for that day",
    "start": "886279",
    "end": "888579"
  },
  {
    "text": "lambda allows you to trigger events in",
    "start": "888579",
    "end": "891829"
  },
  {
    "text": "response to individual entries being",
    "start": "891829",
    "end": "894050"
  },
  {
    "text": "pushed into a dynamodb table and then",
    "start": "894050",
    "end": "896420"
  },
  {
    "text": "that lambda function run on demand for",
    "start": "896420",
    "end": "898220"
  },
  {
    "text": "that event so every time a sales order",
    "start": "898220",
    "end": "899990"
  },
  {
    "text": "goes in a lambda function is triggered",
    "start": "899990",
    "end": "901820"
  },
  {
    "text": "that does the post-processing pushes it",
    "start": "901820",
    "end": "903920"
  },
  {
    "text": "into our data warehouse product redshift",
    "start": "903920",
    "end": "906019"
  },
  {
    "text": "in real time and the data is there for",
    "start": "906019",
    "end": "908060"
  },
  {
    "text": "immediate analysis so this changes it",
    "start": "908060",
    "end": "910339"
  },
  {
    "text": "from a once or twice day with a 12-hour",
    "start": "910339",
    "end": "912500"
  },
  {
    "text": "sort of a backlog or delay of processing",
    "start": "912500",
    "end": "915529"
  },
  {
    "text": "through to a service that can handle the",
    "start": "915529",
    "end": "917209"
  },
  {
    "text": "data in their real time not only",
    "start": "917209",
    "end": "920899"
  },
  {
    "text": "dynamodb we also announced recently that",
    "start": "920899",
    "end": "923060"
  },
  {
    "text": "our one of our managed RDS services",
    "start": "923060",
    "end": "925910"
  },
  {
    "text": "called aurora also now supports lambda",
    "start": "925910",
    "end": "928310"
  },
  {
    "text": "as a stored procedure service so you can",
    "start": "928310",
    "end": "930079"
  },
  {
    "text": "code stored procedures in lambda and",
    "start": "930079",
    "end": "932600"
  },
  {
    "text": "then in response for those stored",
    "start": "932600",
    "end": "933829"
  },
  {
    "text": "procedures when events happen within",
    "start": "933829",
    "end": "936050"
  },
  {
    "text": "Aurora database you can then trigger",
    "start": "936050",
    "end": "938660"
  },
  {
    "text": "lambda functions so this gives you a way",
    "start": "938660",
    "end": "940490"
  },
  {
    "text": "of being really interactive with your",
    "start": "940490",
    "end": "942079"
  },
  {
    "text": "database code",
    "start": "942079",
    "end": "944800"
  },
  {
    "start": "945000",
    "end": "1023000"
  },
  {
    "text": "chatbots Analects ER we've sort of",
    "start": "945150",
    "end": "947440"
  },
  {
    "text": "grouped those together so this is an",
    "start": "947440",
    "end": "949840"
  },
  {
    "text": "example of how we allow users to",
    "start": "949840",
    "end": "952210"
  },
  {
    "text": "interact with either a messaging bot",
    "start": "952210",
    "end": "956020"
  },
  {
    "text": "like slack or with one of our echo",
    "start": "956020",
    "end": "958540"
  },
  {
    "text": "services or our lexer services like echo",
    "start": "958540",
    "end": "960640"
  },
  {
    "text": "so in this case Alexa tell us not to",
    "start": "960640",
    "end": "963040"
  },
  {
    "text": "send like given the demo now what",
    "start": "963040",
    "end": "964960"
  },
  {
    "text": "happens there is our echo device will",
    "start": "964960",
    "end": "967750"
  },
  {
    "text": "take that it will convert it into text",
    "start": "967750",
    "end": "969400"
  },
  {
    "text": "it will trigger a skill of our lambda",
    "start": "969400",
    "end": "971590"
  },
  {
    "text": "that lambda function will integrate and",
    "start": "971590",
    "end": "973780"
  },
  {
    "text": "make an API call to slack slack will",
    "start": "973780",
    "end": "976690"
  },
  {
    "text": "then post that message and then in",
    "start": "976690",
    "end": "979480"
  },
  {
    "text": "response the slack user might say okay",
    "start": "979480",
    "end": "981730"
  },
  {
    "text": "that's fine that message will come back",
    "start": "981730",
    "end": "983500"
  },
  {
    "text": "and out the back says Kevin says break a",
    "start": "983500",
    "end": "985660"
  },
  {
    "text": "leg so it's a way of interacting and",
    "start": "985660",
    "end": "987160"
  },
  {
    "text": "building dynamic services within within",
    "start": "987160",
    "end": "989890"
  },
  {
    "text": "that chat process and that is can be",
    "start": "989890",
    "end": "992230"
  },
  {
    "text": "very interactive so we've shown another",
    "start": "992230",
    "end": "993940"
  },
  {
    "text": "demo where effectively booking a flight",
    "start": "993940",
    "end": "999310"
  },
  {
    "text": "or something online Alexa I want to fly",
    "start": "999310",
    "end": "1002040"
  },
  {
    "text": "to Las Vegas next week okay what day do",
    "start": "1002040",
    "end": "1005370"
  },
  {
    "text": "you want to go the questions come back",
    "start": "1005370",
    "end": "1006930"
  },
  {
    "text": "and forth each of those add more context",
    "start": "1006930",
    "end": "1009060"
  },
  {
    "text": "each of those in the backend lambda is",
    "start": "1009060",
    "end": "1011100"
  },
  {
    "text": "taking that data processing and then",
    "start": "1011100",
    "end": "1012930"
  },
  {
    "text": "determining the next response so it",
    "start": "1012930",
    "end": "1014520"
  },
  {
    "text": "becomes very much of a tool that allows",
    "start": "1014520",
    "end": "1017280"
  },
  {
    "text": "you to build and model complex services",
    "start": "1017280",
    "end": "1020160"
  },
  {
    "text": "just using very simple building blocks",
    "start": "1020160",
    "end": "1022400"
  },
  {
    "text": "and lastly in this section an autonomous",
    "start": "1022400",
    "end": "1026040"
  },
  {
    "start": "1023000",
    "end": "1079000"
  },
  {
    "text": "I team so this is where we have services",
    "start": "1026040",
    "end": "1030030"
  },
  {
    "text": "in the past you might have a script that",
    "start": "1030030",
    "end": "1031620"
  },
  {
    "text": "run backups every hour or every day or",
    "start": "1031620",
    "end": "1034709"
  },
  {
    "text": "so on an integration with some of our",
    "start": "1034709",
    "end": "1036449"
  },
  {
    "text": "other services like cloud watch events",
    "start": "1036449",
    "end": "1038430"
  },
  {
    "text": "you can now write lambda functions that",
    "start": "1038430",
    "end": "1040319"
  },
  {
    "text": "will do that for you and lambda",
    "start": "1040319",
    "end": "1041910"
  },
  {
    "text": "functions since they can assume I am",
    "start": "1041910",
    "end": "1044069"
  },
  {
    "text": "rows or security rules within AWS that",
    "start": "1044069",
    "end": "1046470"
  },
  {
    "text": "means that lambda functions can have as",
    "start": "1046470",
    "end": "1048540"
  },
  {
    "text": "much or as little permission as you like",
    "start": "1048540",
    "end": "1050100"
  },
  {
    "text": "so you might give a lambda function the",
    "start": "1050100",
    "end": "1051900"
  },
  {
    "text": "ability to take a snapshot of a",
    "start": "1051900",
    "end": "1053970"
  },
  {
    "text": "particular EBS volume for backup",
    "start": "1053970",
    "end": "1055680"
  },
  {
    "text": "purposes but not to restore that",
    "start": "1055680",
    "end": "1057420"
  },
  {
    "text": "snapshot or you might set it to reboot a",
    "start": "1057420",
    "end": "1059670"
  },
  {
    "text": "particular server every day whatever it",
    "start": "1059670",
    "end": "1062250"
  },
  {
    "text": "might be so if you can do it in code you",
    "start": "1062250",
    "end": "1064080"
  },
  {
    "text": "can do it in lambda and while it's not",
    "start": "1064080",
    "end": "1066180"
  },
  {
    "text": "being run you're not paying for it if no",
    "start": "1066180",
    "end": "1068550"
  },
  {
    "text": "one's ever seen the lambda pricing model",
    "start": "1068550",
    "end": "1069990"
  },
  {
    "text": "it's probably worth checking out it's",
    "start": "1069990",
    "end": "1072060"
  },
  {
    "text": "normally a zero with lots of zeros and",
    "start": "1072060",
    "end": "1073800"
  },
  {
    "text": "then a - after it per event",
    "start": "1073800",
    "end": "1078260"
  },
  {
    "text": "so some of the customers that are",
    "start": "1078950",
    "end": "1080880"
  },
  {
    "start": "1079000",
    "end": "1086000"
  },
  {
    "text": "innovating with serverless",
    "start": "1080880",
    "end": "1082140"
  },
  {
    "text": "it's a big list I'll let you read",
    "start": "1082140",
    "end": "1084930"
  },
  {
    "text": "through some of those yourself we will",
    "start": "1084930",
    "end": "1086790"
  },
  {
    "text": "call out just a few of them so thomson",
    "start": "1086790",
    "end": "1089040"
  },
  {
    "text": "reuters they using lambda to process",
    "start": "1089040",
    "end": "1090690"
  },
  {
    "text": "around 4,000 requests per second finra",
    "start": "1090690",
    "end": "1093990"
  },
  {
    "text": "which is one of the agencies and the",
    "start": "1093990",
    "end": "1096810"
  },
  {
    "text": "u.s. responsible financial trading",
    "start": "1096810",
    "end": "1098570"
  },
  {
    "text": "processes have the trillion validations",
    "start": "1098570",
    "end": "1101220"
  },
  {
    "text": "of stock trades daily and we'll talk a",
    "start": "1101220",
    "end": "1103230"
  },
  {
    "text": "little bit more about that in a minute",
    "start": "1103230",
    "end": "1104700"
  },
  {
    "text": "Hearst have managed to reduce the time",
    "start": "1104700",
    "end": "1107100"
  },
  {
    "text": "to ingest and process data by up to 97%",
    "start": "1107100",
    "end": "1110010"
  },
  {
    "text": "and VEVO which is people who don't know",
    "start": "1110010",
    "end": "1114390"
  },
  {
    "text": "is factually a music video service for",
    "start": "1114390",
    "end": "1117290"
  },
  {
    "text": "artists can handle spikes using lambda",
    "start": "1117290",
    "end": "1120210"
  },
  {
    "text": "of more than 80 times their normal their",
    "start": "1120210",
    "end": "1122850"
  },
  {
    "text": "normal capabilities Expedia trigger",
    "start": "1122850",
    "end": "1125520"
  },
  {
    "text": "around 1.2 billion lambda requests every",
    "start": "1125520",
    "end": "1127470"
  },
  {
    "text": "month worth mention at this point for",
    "start": "1127470",
    "end": "1132180"
  },
  {
    "start": "1129000",
    "end": "1170000"
  },
  {
    "text": "customers were interested and as an API",
    "start": "1132180",
    "end": "1134700"
  },
  {
    "text": "gateway so if you develop a service that",
    "start": "1134700",
    "end": "1136650"
  },
  {
    "text": "presents your data as an API gateway",
    "start": "1136650",
    "end": "1138570"
  },
  {
    "text": "this can now be made available in our OS",
    "start": "1138570",
    "end": "1141300"
  },
  {
    "text": "marketplace so whereas before you could",
    "start": "1141300",
    "end": "1143580"
  },
  {
    "text": "present an ami or I'm a confirmation",
    "start": "1143580",
    "end": "1145860"
  },
  {
    "text": "template and then make those services",
    "start": "1145860",
    "end": "1147300"
  },
  {
    "text": "available to other AWS customers now you",
    "start": "1147300",
    "end": "1149910"
  },
  {
    "text": "can make your data available to",
    "start": "1149910",
    "end": "1151260"
  },
  {
    "text": "customers using your api's so just",
    "start": "1151260",
    "end": "1154170"
  },
  {
    "text": "present an API link it to a plan and",
    "start": "1154170",
    "end": "1156120"
  },
  {
    "text": "then you can make your data available at",
    "start": "1156120",
    "end": "1157680"
  },
  {
    "text": "whatever cost model you prefer and",
    "start": "1157680",
    "end": "1160560"
  },
  {
    "text": "that's certainly come something that's",
    "start": "1160560",
    "end": "1163170"
  },
  {
    "text": "currently being done by NTT DoCoMo and",
    "start": "1163170",
    "end": "1165080"
  },
  {
    "text": "f-secure as well the URL validation",
    "start": "1165080",
    "end": "1168750"
  },
  {
    "text": "service just chimed very briefly about",
    "start": "1168750",
    "end": "1171900"
  },
  {
    "start": "1170000",
    "end": "1195000"
  },
  {
    "text": "VEVO so they're using it in two",
    "start": "1171900",
    "end": "1174090"
  },
  {
    "text": "locations so they're using it for their",
    "start": "1174090",
    "end": "1175470"
  },
  {
    "text": "content services they've developed a",
    "start": "1175470",
    "end": "1177960"
  },
  {
    "text": "micro services architecture that can",
    "start": "1177960",
    "end": "1179520"
  },
  {
    "text": "handle spikes of up to 80 times the",
    "start": "1179520",
    "end": "1181230"
  },
  {
    "text": "normal traffic and they've also started",
    "start": "1181230",
    "end": "1183930"
  },
  {
    "text": "building a new data platform starting",
    "start": "1183930",
    "end": "1185970"
  },
  {
    "text": "from 0 that is completely serverless so",
    "start": "1185970",
    "end": "1189120"
  },
  {
    "text": "this builds on the model that we looked",
    "start": "1189120",
    "end": "1190530"
  },
  {
    "text": "at earlier and that platform went into",
    "start": "1190530",
    "end": "1193020"
  },
  {
    "text": "production in less than twelve months",
    "start": "1193020",
    "end": "1195620"
  },
  {
    "start": "1195000",
    "end": "1267000"
  },
  {
    "text": "very briefly about finra because is this",
    "start": "1195620",
    "end": "1198810"
  },
  {
    "text": "is one of the highlights of reinvent",
    "start": "1198810",
    "end": "1200310"
  },
  {
    "text": "half a trillion validations daily",
    "start": "1200310",
    "end": "1202910"
  },
  {
    "text": "effectively they're driven by world",
    "start": "1202910",
    "end": "1205290"
  },
  {
    "text": "events they typically process up to a",
    "start": "1205290",
    "end": "1208290"
  },
  {
    "text": "maximum of 75 billion",
    "start": "1208290",
    "end": "1210110"
  },
  {
    "text": "elements per hour for that volume can",
    "start": "1210110",
    "end": "1212179"
  },
  {
    "text": "vary you know by two to three times",
    "start": "1212179",
    "end": "1213920"
  },
  {
    "text": "based on time of day or what else is",
    "start": "1213920",
    "end": "1215929"
  },
  {
    "text": "happening but when the data comes in",
    "start": "1215929",
    "end": "1218780"
  },
  {
    "text": "they need to validate it meets a certain",
    "start": "1218780",
    "end": "1220370"
  },
  {
    "text": "specification those rules are changed",
    "start": "1220370",
    "end": "1223100"
  },
  {
    "text": "and reviewed regularly currently they're",
    "start": "1223100",
    "end": "1224929"
  },
  {
    "text": "more than 200 rules with a hundred",
    "start": "1224929",
    "end": "1226460"
  },
  {
    "text": "different derivations and what we or",
    "start": "1226460",
    "end": "1229640"
  },
  {
    "text": "what FINRA were able to do was build a",
    "start": "1229640",
    "end": "1231230"
  },
  {
    "text": "lambda function that takes each trade",
    "start": "1231230",
    "end": "1232940"
  },
  {
    "text": "and uses that lambda function to analyze",
    "start": "1232940",
    "end": "1235010"
  },
  {
    "text": "it and then provide that feedback back",
    "start": "1235010",
    "end": "1236720"
  },
  {
    "text": "to the original source so it means that",
    "start": "1236720",
    "end": "1239000"
  },
  {
    "text": "they can give that feedback very quickly",
    "start": "1239000",
    "end": "1240620"
  },
  {
    "text": "the original provider can correct that",
    "start": "1240620",
    "end": "1243380"
  },
  {
    "text": "in time so they avoid any of their finds",
    "start": "1243380",
    "end": "1245770"
  },
  {
    "text": "this was their traditional model using a",
    "start": "1245770",
    "end": "1248480"
  },
  {
    "text": "static aduke cluster and then by scaling",
    "start": "1248480",
    "end": "1252799"
  },
  {
    "text": "to a service cloud solution such as this",
    "start": "1252799",
    "end": "1255470"
  },
  {
    "text": "they were able to move to a model that",
    "start": "1255470",
    "end": "1257540"
  },
  {
    "text": "massively reduced their their cost and",
    "start": "1257540",
    "end": "1260510"
  },
  {
    "text": "the complexity yeah I think I've covered",
    "start": "1260510",
    "end": "1265340"
  },
  {
    "text": "this just one final thing as well so",
    "start": "1265340",
    "end": "1269720"
  },
  {
    "start": "1267000",
    "end": "1313000"
  },
  {
    "text": "this is a shout out to one of our core",
    "start": "1269720",
    "end": "1272360"
  },
  {
    "text": "sponsors Intel who are helping us",
    "start": "1272360",
    "end": "1274070"
  },
  {
    "text": "sponsor the collaborative cities and so",
    "start": "1274070",
    "end": "1277000"
  },
  {
    "text": "this is an example of how we're using an",
    "start": "1277000",
    "end": "1280549"
  },
  {
    "text": "IOT platform to push data from sensors",
    "start": "1280549",
    "end": "1283040"
  },
  {
    "text": "that are out in the wild in processing",
    "start": "1283040",
    "end": "1285799"
  },
  {
    "text": "using lambda s-- data's being stored in",
    "start": "1285799",
    "end": "1287780"
  },
  {
    "text": "dynamo DB and then push back through a",
    "start": "1287780",
    "end": "1290990"
  },
  {
    "text": "proxy layer and so people can actually",
    "start": "1290990",
    "end": "1293390"
  },
  {
    "text": "access the information using the client",
    "start": "1293390",
    "end": "1294830"
  },
  {
    "text": "so this is a partially service",
    "start": "1294830",
    "end": "1296480"
  },
  {
    "text": "environment that the top half is service",
    "start": "1296480",
    "end": "1298549"
  },
  {
    "text": "this is more of a traditional type type",
    "start": "1298549",
    "end": "1301520"
  },
  {
    "text": "service but there's nothing to say that",
    "start": "1301520",
    "end": "1302870"
  },
  {
    "text": "that can be recoded for service in the",
    "start": "1302870",
    "end": "1304429"
  },
  {
    "text": "future so final part of the slides how",
    "start": "1304429",
    "end": "1310640"
  },
  {
    "text": "to get started so this is Sam Sam is our",
    "start": "1310640",
    "end": "1313880"
  },
  {
    "start": "1313000",
    "end": "1360000"
  },
  {
    "text": "service application model I'm not sure",
    "start": "1313880",
    "end": "1316669"
  },
  {
    "text": "how many people are familiar with AWS",
    "start": "1316669",
    "end": "1318500"
  },
  {
    "text": "and what we have we have something",
    "start": "1318500",
    "end": "1320150"
  },
  {
    "text": "called cloud formation which their",
    "start": "1320150",
    "end": "1321770"
  },
  {
    "text": "ability to define infrastructure is code",
    "start": "1321770",
    "end": "1323770"
  },
  {
    "text": "so what we've done is we taken cloud",
    "start": "1323770",
    "end": "1326120"
  },
  {
    "text": "formation and we've added something",
    "start": "1326120",
    "end": "1327320"
  },
  {
    "text": "called the service application model",
    "start": "1327320",
    "end": "1328880"
  },
  {
    "text": "which allows us to define that in a much",
    "start": "1328880",
    "end": "1331460"
  },
  {
    "text": "simpler way within a cloud formation",
    "start": "1331460",
    "end": "1333140"
  },
  {
    "text": "template and that enables us to take",
    "start": "1333140",
    "end": "1335179"
  },
  {
    "text": "functions API as event sources and data",
    "start": "1335179",
    "end": "1337340"
  },
  {
    "text": "stores and structure them in a very",
    "start": "1337340",
    "end": "1338840"
  },
  {
    "text": "simple format in json uyama or that then",
    "start": "1338840",
    "end": "1341990"
  },
  {
    "text": "allows us to publish",
    "start": "1341990",
    "end": "1343030"
  },
  {
    "text": "those services quickly what this means",
    "start": "1343030",
    "end": "1346180"
  },
  {
    "text": "is you can download and deploy the",
    "start": "1346180",
    "end": "1347470"
  },
  {
    "text": "blueprint using the CLI you can package",
    "start": "1347470",
    "end": "1350050"
  },
  {
    "text": "up your code and upload it and run it",
    "start": "1350050",
    "end": "1352330"
  },
  {
    "text": "using CloudFormation",
    "start": "1352330",
    "end": "1353410"
  },
  {
    "text": "it's an open spec under Apache 2 and we",
    "start": "1353410",
    "end": "1356260"
  },
  {
    "text": "welcome pool requests if you want to",
    "start": "1356260",
    "end": "1357610"
  },
  {
    "text": "extend it this means you can write you",
    "start": "1357610",
    "end": "1361720"
  },
  {
    "text": "can build you can deploy and receive",
    "start": "1361720",
    "end": "1363460"
  },
  {
    "text": "feedback much more rapidly than you",
    "start": "1363460",
    "end": "1365260"
  },
  {
    "text": "might do in a traditional environment we",
    "start": "1365260",
    "end": "1369640"
  },
  {
    "start": "1368000",
    "end": "1392000"
  },
  {
    "text": "integrate with a range of commercial",
    "start": "1369640",
    "end": "1371230"
  },
  {
    "text": "services so everything from different",
    "start": "1371230",
    "end": "1373090"
  },
  {
    "text": "code libraries and third-party services",
    "start": "1373090",
    "end": "1375370"
  },
  {
    "text": "through to deployment and monitoring",
    "start": "1375370",
    "end": "1377100"
  },
  {
    "text": "there are a range of customers who work",
    "start": "1377100",
    "end": "1379900"
  },
  {
    "text": "through our partner network to provide",
    "start": "1379900",
    "end": "1381250"
  },
  {
    "text": "some technology services and there's",
    "start": "1381250",
    "end": "1383290"
  },
  {
    "text": "also a lot of open-source products there",
    "start": "1383290",
    "end": "1385000"
  },
  {
    "text": "as well chalice service Claudia day at",
    "start": "1385000",
    "end": "1387820"
  },
  {
    "text": "Jas apex and Sam now which is the one",
    "start": "1387820",
    "end": "1390640"
  },
  {
    "text": "that we've we've open-sourced lastly we",
    "start": "1390640",
    "end": "1394660"
  },
  {
    "start": "1392000",
    "end": "1601000"
  },
  {
    "text": "have a service called code pipeline this",
    "start": "1394660",
    "end": "1396280"
  },
  {
    "text": "allows you to effectively build your own",
    "start": "1396280",
    "end": "1397690"
  },
  {
    "text": "CI CD pipeline to push code through a",
    "start": "1397690",
    "end": "1400120"
  },
  {
    "text": "sort of change process very quickly and",
    "start": "1400120",
    "end": "1403390"
  },
  {
    "text": "that makes use of things like github or",
    "start": "1403390",
    "end": "1406150"
  },
  {
    "text": "s3 or coke commit for storing your code",
    "start": "1406150",
    "end": "1407920"
  },
  {
    "text": "code build with them build and validate",
    "start": "1407920",
    "end": "1410170"
  },
  {
    "text": "that on its own or in conjunction with",
    "start": "1410170",
    "end": "1412060"
  },
  {
    "text": "third-party tools and then deploys using",
    "start": "1412060",
    "end": "1414550"
  },
  {
    "text": "cloud formation as Sam into production",
    "start": "1414550",
    "end": "1416260"
  },
  {
    "text": "and that's it for me",
    "start": "1416260",
    "end": "1421020"
  },
  {
    "text": "so lambda will spin up all the surface",
    "start": "1424770",
    "end": "1428650"
  },
  {
    "text": "on by a horse but some some of the",
    "start": "1428650",
    "end": "1430929"
  },
  {
    "text": "features require some initialization",
    "start": "1430929",
    "end": "1432160"
  },
  {
    "text": "like good step is it possible like it",
    "start": "1432160",
    "end": "1435790"
  },
  {
    "text": "might take some time for if we ask M",
    "start": "1435790",
    "end": "1438580"
  },
  {
    "text": "lambda it will get all the service and",
    "start": "1438580",
    "end": "1441160"
  },
  {
    "text": "then we instruct them okay",
    "start": "1441160",
    "end": "1442750"
  },
  {
    "text": "instances of T or maybe in this in K in",
    "start": "1442750",
    "end": "1445300"
  },
  {
    "text": "the case in your Photoshop example it",
    "start": "1445300",
    "end": "1447910"
  },
  {
    "text": "requires some software to paste or to do",
    "start": "1447910",
    "end": "1449470"
  },
  {
    "text": "some thumbnail so rather than doing",
    "start": "1449470",
    "end": "1451570"
  },
  {
    "text": "every time yeah so so lambda is a",
    "start": "1451570",
    "end": "1457270"
  },
  {
    "text": "service model in it's a stateless model",
    "start": "1457270",
    "end": "1459520"
  },
  {
    "text": "so you can't assume that state can be",
    "start": "1459520",
    "end": "1461620"
  },
  {
    "text": "maintained between lambda functions if",
    "start": "1461620",
    "end": "1463870"
  },
  {
    "text": "you're gonna be running lots of lambda",
    "start": "1463870",
    "end": "1465700"
  },
  {
    "text": "functions you can define certain code",
    "start": "1465700",
    "end": "1468370"
  },
  {
    "text": "and certain calls outside of what we",
    "start": "1468370",
    "end": "1470830"
  },
  {
    "text": "call the event handler function which",
    "start": "1470830",
    "end": "1472809"
  },
  {
    "text": "means that it won't be reinitiated every",
    "start": "1472809",
    "end": "1474760"
  },
  {
    "text": "single time although as it scales in the",
    "start": "1474760",
    "end": "1477760"
  },
  {
    "text": "background it that may require new",
    "start": "1477760",
    "end": "1480010"
  },
  {
    "text": "containers to be built out in the",
    "start": "1480010",
    "end": "1481270"
  },
  {
    "text": "background which or which will require",
    "start": "1481270",
    "end": "1482860"
  },
  {
    "text": "that but in order to maintain state so",
    "start": "1482860",
    "end": "1485410"
  },
  {
    "text": "if you need to do any sort of",
    "start": "1485410",
    "end": "1486370"
  },
  {
    "text": "initialization that has to be done in",
    "start": "1486370",
    "end": "1488050"
  },
  {
    "text": "code if you want to maintain state we",
    "start": "1488050",
    "end": "1490030"
  },
  {
    "text": "recommend the service like dynamodb or",
    "start": "1490030",
    "end": "1491920"
  },
  {
    "text": "s3 but in response to that photo",
    "start": "1491920",
    "end": "1494280"
  },
  {
    "text": "application for example say you wanted",
    "start": "1494280",
    "end": "1497350"
  },
  {
    "text": "to do a transformation from jpg to PNG",
    "start": "1497350",
    "end": "1500170"
  },
  {
    "text": "so what you could do when you package up",
    "start": "1500170",
    "end": "1502360"
  },
  {
    "text": "your application you can also package up",
    "start": "1502360",
    "end": "1504220"
  },
  {
    "text": "your third-party libraries or any sort",
    "start": "1504220",
    "end": "1506170"
  },
  {
    "text": "of custom code that you need to do this",
    "start": "1506170",
    "end": "1507730"
  },
  {
    "text": "part of the application model then",
    "start": "1507730",
    "end": "1509559"
  },
  {
    "text": "uploads that code as a package into s3",
    "start": "1509559",
    "end": "1511660"
  },
  {
    "text": "and then that is placed into the lambda",
    "start": "1511660",
    "end": "1514660"
  },
  {
    "text": "function when it executes so you can",
    "start": "1514660",
    "end": "1516490"
  },
  {
    "text": "package up third-party code as well not",
    "start": "1516490",
    "end": "1518530"
  },
  {
    "text": "just the stuff that's available within",
    "start": "1518530",
    "end": "1519970"
  },
  {
    "text": "lambda natively there's an answer your",
    "start": "1519970",
    "end": "1522790"
  },
  {
    "text": "question so you can move something so",
    "start": "1522790",
    "end": "1526000"
  },
  {
    "text": "yes so if you're doing something really",
    "start": "1526000",
    "end": "1527770"
  },
  {
    "text": "complicated then it may be that it takes",
    "start": "1527770",
    "end": "1530770"
  },
  {
    "text": "a little while to initiate and so that's",
    "start": "1530770",
    "end": "1532600"
  },
  {
    "text": "part of your trade-off to understand you",
    "start": "1532600",
    "end": "1534340"
  },
  {
    "text": "know what what needs to be initiated",
    "start": "1534340",
    "end": "1536110"
  },
  {
    "text": "what needs to be bootstrapped and what",
    "start": "1536110",
    "end": "1537640"
  },
  {
    "text": "can be done on the fly and part of you",
    "start": "1537640",
    "end": "1539890"
  },
  {
    "text": "know architecting on server list is to",
    "start": "1539890",
    "end": "1541690"
  },
  {
    "text": "understand could that bootstrap and be",
    "start": "1541690",
    "end": "1543610"
  },
  {
    "text": "broken out into perhaps two or three",
    "start": "1543610",
    "end": "1545170"
  },
  {
    "text": "events that could be chained each of",
    "start": "1545170",
    "end": "1546580"
  },
  {
    "text": "which will have a lower execution time",
    "start": "1546580",
    "end": "1549760"
  },
  {
    "text": "lambda functions couldn't run up to five",
    "start": "1549760",
    "end": "1551440"
  },
  {
    "text": "minutes in length and we basically",
    "start": "1551440",
    "end": "1554620"
  },
  {
    "text": "there's there's two charging",
    "start": "1554620",
    "end": "1557650"
  },
  {
    "text": "axis I suppose the first is the amount",
    "start": "1557650",
    "end": "1560770"
  },
  {
    "text": "of memory you allocate to that lambda",
    "start": "1560770",
    "end": "1562450"
  },
  {
    "text": "function the second is how long it runs",
    "start": "1562450",
    "end": "1564040"
  },
  {
    "text": "for and we charge a lambda function or",
    "start": "1564040",
    "end": "1566200"
  },
  {
    "text": "100 millisecond increments so if your",
    "start": "1566200",
    "end": "1568030"
  },
  {
    "text": "application runs for 280 milliseconds we",
    "start": "1568030",
    "end": "1570820"
  },
  {
    "text": "round up to the nearest hundreds 300",
    "start": "1570820",
    "end": "1572380"
  },
  {
    "text": "milliseconds and if you've used it",
    "start": "1572380",
    "end": "1574150"
  },
  {
    "text": "within 128 mega RAM then you're a bit",
    "start": "1574150",
    "end": "1576100"
  },
  {
    "text": "get charged to 300 milliseconds worth of",
    "start": "1576100",
    "end": "1577810"
  },
  {
    "text": "time and that that figure is actually",
    "start": "1577810",
    "end": "1580330"
  },
  {
    "text": "very low so we include I think it's for",
    "start": "1580330",
    "end": "1582940"
  },
  {
    "text": "128 Meg there's a free tier of 3.2",
    "start": "1582940",
    "end": "1585790"
  },
  {
    "text": "million seconds per month that you can",
    "start": "1585790",
    "end": "1588130"
  },
  {
    "text": "use lambda for so it gives you the",
    "start": "1588130",
    "end": "1589660"
  },
  {
    "text": "capability to do a lot of things we can",
    "start": "1589660",
    "end": "1592360"
  },
  {
    "text": "talk about this a bit more and rodrigo's",
    "start": "1592360",
    "end": "1594370"
  },
  {
    "text": "around to see a better answer some",
    "start": "1594370",
    "end": "1595480"
  },
  {
    "text": "questions as well on that one",
    "start": "1595480",
    "end": "1598470"
  }
]