[
  {
    "start": "0",
    "end": "39000"
  },
  {
    "text": "hello and welcome to aws",
    "start": "320",
    "end": "3439"
  },
  {
    "text": "glue studio learning series part two",
    "start": "3439",
    "end": "6560"
  },
  {
    "text": "my name is harsha taripathi and i am a",
    "start": "6560",
    "end": "9360"
  },
  {
    "text": "specialist senior solutions architect",
    "start": "9360",
    "end": "11200"
  },
  {
    "text": "covering analytics at amazon web",
    "start": "11200",
    "end": "13440"
  },
  {
    "text": "services",
    "start": "13440",
    "end": "14799"
  },
  {
    "text": "during part one of this series you have",
    "start": "14799",
    "end": "16960"
  },
  {
    "text": "learned the fundamentals of aws blue",
    "start": "16960",
    "end": "19439"
  },
  {
    "text": "studio",
    "start": "19439",
    "end": "20160"
  },
  {
    "text": "and how to visually author etl jobs",
    "start": "20160",
    "end": "22880"
  },
  {
    "text": "without writing any code",
    "start": "22880",
    "end": "25039"
  },
  {
    "text": "today you're going to learn how to",
    "start": "25039",
    "end": "27359"
  },
  {
    "text": "author complex etl jobs",
    "start": "27359",
    "end": "29519"
  },
  {
    "text": "using glue studio let me remind you that",
    "start": "29519",
    "end": "32480"
  },
  {
    "text": "this is a three-part series where part",
    "start": "32480",
    "end": "34719"
  },
  {
    "text": "three helps you develop streaming",
    "start": "34719",
    "end": "36480"
  },
  {
    "text": "ethereal jobs using blue studio",
    "start": "36480",
    "end": "40239"
  },
  {
    "text": "70 take a moment to think about",
    "start": "40640",
    "end": "43760"
  },
  {
    "text": "what it represents and how big it is",
    "start": "43760",
    "end": "47920"
  },
  {
    "text": "it is the percentage of ethereal jobs",
    "start": "49680",
    "end": "51840"
  },
  {
    "text": "that are hand coded without using",
    "start": "51840",
    "end": "53680"
  },
  {
    "text": "etl tools well we see that",
    "start": "53680",
    "end": "57039"
  },
  {
    "text": "actually it's over 90 percent in the",
    "start": "57039",
    "end": "59760"
  },
  {
    "text": "cloud",
    "start": "59760",
    "end": "61120"
  },
  {
    "text": "why do you think that 70 of etl jobs are",
    "start": "61120",
    "end": "64320"
  },
  {
    "text": "hand coded",
    "start": "64320",
    "end": "66960"
  },
  {
    "text": "it is because it empowers the developers",
    "start": "67119",
    "end": "70799"
  },
  {
    "text": "to perform",
    "start": "70799",
    "end": "71520"
  },
  {
    "text": "complex data operations",
    "start": "71520",
    "end": "74960"
  },
  {
    "text": "new studio is built to continue",
    "start": "74960",
    "end": "77119"
  },
  {
    "text": "empowering the developers by providing a",
    "start": "77119",
    "end": "79439"
  },
  {
    "text": "hybrid development experience",
    "start": "79439",
    "end": "81600"
  },
  {
    "text": "where the developers can use the best of",
    "start": "81600",
    "end": "84000"
  },
  {
    "text": "both",
    "start": "84000",
    "end": "84799"
  },
  {
    "text": "from visually authoring part of their",
    "start": "84799",
    "end": "87119"
  },
  {
    "text": "job without writing any code",
    "start": "87119",
    "end": "89439"
  },
  {
    "text": "to writing handwritten code for complex",
    "start": "89439",
    "end": "92880"
  },
  {
    "text": "transformations where necessary",
    "start": "92880",
    "end": "95520"
  },
  {
    "start": "95000",
    "end": "136000"
  },
  {
    "text": "i just wanted to highlight some of the",
    "start": "95520",
    "end": "97119"
  },
  {
    "text": "complexities etl developers see",
    "start": "97119",
    "end": "100000"
  },
  {
    "text": "in their day-to-day development like",
    "start": "100000",
    "end": "102640"
  },
  {
    "text": "extracting data from various sources",
    "start": "102640",
    "end": "105680"
  },
  {
    "text": "building udfs to perform certain",
    "start": "105680",
    "end": "108560"
  },
  {
    "text": "functions",
    "start": "108560",
    "end": "109920"
  },
  {
    "text": "that can be repetitive or passing",
    "start": "109920",
    "end": "112000"
  },
  {
    "text": "certain dynamic values etc",
    "start": "112000",
    "end": "114399"
  },
  {
    "text": "uh string operations for fine replays or",
    "start": "114399",
    "end": "117680"
  },
  {
    "text": "regex type operations",
    "start": "117680",
    "end": "119920"
  },
  {
    "text": "lots of multi-way joints and hash",
    "start": "119920",
    "end": "122719"
  },
  {
    "text": "operations for example",
    "start": "122719",
    "end": "124799"
  },
  {
    "text": "encrypting a particular column values or",
    "start": "124799",
    "end": "127759"
  },
  {
    "text": "uniquely identifying a",
    "start": "127759",
    "end": "129520"
  },
  {
    "text": "specific row when there's no natural key",
    "start": "129520",
    "end": "132480"
  },
  {
    "text": "etc right",
    "start": "132480",
    "end": "133680"
  },
  {
    "text": "you know many many more",
    "start": "133680",
    "end": "136959"
  },
  {
    "start": "136000",
    "end": "193000"
  },
  {
    "text": "let's take a demo scenario to learn how",
    "start": "138720",
    "end": "141280"
  },
  {
    "text": "a developer can use",
    "start": "141280",
    "end": "142640"
  },
  {
    "text": "glue studio's hybrid development",
    "start": "142640",
    "end": "144400"
  },
  {
    "text": "framework to mask",
    "start": "144400",
    "end": "146239"
  },
  {
    "text": "a couple sensitive columns in a customer",
    "start": "146239",
    "end": "148319"
  },
  {
    "text": "table as seen in the screen chart on the",
    "start": "148319",
    "end": "150160"
  },
  {
    "text": "left",
    "start": "150160",
    "end": "151120"
  },
  {
    "text": "the last name and the first name column",
    "start": "151120",
    "end": "153200"
  },
  {
    "text": "in the customer table",
    "start": "153200",
    "end": "154400"
  },
  {
    "text": "are the ones that the developer chooses",
    "start": "154400",
    "end": "155920"
  },
  {
    "text": "to mask there are several data masking",
    "start": "155920",
    "end": "158800"
  },
  {
    "text": "techniques available",
    "start": "158800",
    "end": "160160"
  },
  {
    "text": "but the developer chooses to use a",
    "start": "160160",
    "end": "162720"
  },
  {
    "text": "couple",
    "start": "162720",
    "end": "163200"
  },
  {
    "text": "of those for the for this demo the last",
    "start": "163200",
    "end": "165840"
  },
  {
    "text": "name column",
    "start": "165840",
    "end": "166720"
  },
  {
    "text": "is masked using a algorithm",
    "start": "166720",
    "end": "171040"
  },
  {
    "text": "and the first name column is masks",
    "start": "171040",
    "end": "174560"
  },
  {
    "text": "with a static value star star star fn",
    "start": "174560",
    "end": "177840"
  },
  {
    "text": "starts our stuff during the second part",
    "start": "177840",
    "end": "180159"
  },
  {
    "text": "of the demo",
    "start": "180159",
    "end": "180959"
  },
  {
    "text": "the developer builds a flattened",
    "start": "180959",
    "end": "182640"
  },
  {
    "text": "customer genome table",
    "start": "182640",
    "end": "184400"
  },
  {
    "text": "using the masked customer table customer",
    "start": "184400",
    "end": "187120"
  },
  {
    "text": "address",
    "start": "187120",
    "end": "187680"
  },
  {
    "text": "and demographic tables",
    "start": "187680",
    "end": "191120"
  },
  {
    "start": "193000",
    "end": "212000"
  },
  {
    "text": "during this demo you will see how the",
    "start": "193920",
    "end": "196159"
  },
  {
    "text": "developer switches between",
    "start": "196159",
    "end": "198000"
  },
  {
    "text": "visual studio and handwritten code",
    "start": "198000",
    "end": "201200"
  },
  {
    "text": "to use the best of both while performing",
    "start": "201200",
    "end": "203680"
  },
  {
    "text": "the five complex operations that are",
    "start": "203680",
    "end": "205680"
  },
  {
    "text": "highlighted",
    "start": "205680",
    "end": "206400"
  },
  {
    "text": "in yellow so with no further delay",
    "start": "206400",
    "end": "210239"
  },
  {
    "text": "let's jump right into the demo right so",
    "start": "210239",
    "end": "211920"
  },
  {
    "text": "before going into the glue studio",
    "start": "211920",
    "end": "214400"
  },
  {
    "start": "212000",
    "end": "248000"
  },
  {
    "text": "let's take a look at the source tables",
    "start": "214400",
    "end": "216799"
  },
  {
    "text": "used for this demo",
    "start": "216799",
    "end": "218560"
  },
  {
    "text": "we're going to use the customer table",
    "start": "218560",
    "end": "220560"
  },
  {
    "text": "customer address and the",
    "start": "220560",
    "end": "221840"
  },
  {
    "text": "demographic table which are all the",
    "start": "221840",
    "end": "224799"
  },
  {
    "text": "standard",
    "start": "224799",
    "end": "225760"
  },
  {
    "text": "three terabyte tpcds datasets and these",
    "start": "225760",
    "end": "228319"
  },
  {
    "text": "are pre-crawled",
    "start": "228319",
    "end": "229519"
  },
  {
    "text": "for this demo and located in the glue",
    "start": "229519",
    "end": "232560"
  },
  {
    "text": "catalog",
    "start": "232560",
    "end": "233280"
  },
  {
    "text": "under the name demodb",
    "start": "233280",
    "end": "236560"
  },
  {
    "text": "so um and another thing i'd like to also",
    "start": "236560",
    "end": "239040"
  },
  {
    "text": "point out is",
    "start": "239040",
    "end": "240560"
  },
  {
    "text": "and you can see this first name and last",
    "start": "240560",
    "end": "243200"
  },
  {
    "text": "name sensitive columns with all the",
    "start": "243200",
    "end": "244720"
  },
  {
    "text": "values populated",
    "start": "244720",
    "end": "246640"
  },
  {
    "text": "in the customer table so now let's",
    "start": "246640",
    "end": "249519"
  },
  {
    "start": "248000",
    "end": "365000"
  },
  {
    "text": "switch to the",
    "start": "249519",
    "end": "250400"
  },
  {
    "text": "view studio",
    "start": "250400",
    "end": "253200"
  },
  {
    "text": "so here is the glue landing page and i'm",
    "start": "253439",
    "end": "255439"
  },
  {
    "text": "already logged in as my id",
    "start": "255439",
    "end": "258239"
  },
  {
    "text": "and let's go ahead and author the job",
    "start": "258239",
    "end": "261280"
  },
  {
    "text": "by clicking on blank graph to create an",
    "start": "261280",
    "end": "263919"
  },
  {
    "text": "empty canvas",
    "start": "263919",
    "end": "265120"
  },
  {
    "text": "let's give it a name i'll say demo dash",
    "start": "265120",
    "end": "268080"
  },
  {
    "text": "228",
    "start": "268080",
    "end": "270240"
  },
  {
    "text": "as we need to mask sensitive columns for",
    "start": "270240",
    "end": "273040"
  },
  {
    "text": "the customer table",
    "start": "273040",
    "end": "274240"
  },
  {
    "text": "we need to first add the customer table",
    "start": "274240",
    "end": "276479"
  },
  {
    "text": "as a source",
    "start": "276479",
    "end": "277440"
  },
  {
    "text": "so we will do that by clicking the plus",
    "start": "277440",
    "end": "279759"
  },
  {
    "text": "button",
    "start": "279759",
    "end": "280560"
  },
  {
    "text": "and we'll name it as",
    "start": "280560",
    "end": "283840"
  },
  {
    "text": "source customer",
    "start": "283840",
    "end": "287120"
  },
  {
    "text": "and this will be my customer table",
    "start": "287120",
    "end": "290400"
  },
  {
    "text": "and we've already seen it under the data",
    "start": "290400",
    "end": "293120"
  },
  {
    "text": "catalog",
    "start": "293120",
    "end": "294560"
  },
  {
    "text": "in demodb database and select the",
    "start": "294560",
    "end": "297120"
  },
  {
    "text": "customer table",
    "start": "297120",
    "end": "298400"
  },
  {
    "text": "so now we have the source the customer",
    "start": "298400",
    "end": "300080"
  },
  {
    "text": "table and then the next thing to do",
    "start": "300080",
    "end": "302080"
  },
  {
    "text": "is to actually perform the",
    "start": "302080",
    "end": "305120"
  },
  {
    "text": "transformation to do the data masking",
    "start": "305120",
    "end": "307520"
  },
  {
    "text": "given the fact there is no predefined",
    "start": "307520",
    "end": "310560"
  },
  {
    "text": "function in glue that helps you master",
    "start": "310560",
    "end": "312960"
  },
  {
    "text": "data",
    "start": "312960",
    "end": "313680"
  },
  {
    "text": "so we're going to basically create a",
    "start": "313680",
    "end": "316320"
  },
  {
    "text": "handwritten code that actually performs",
    "start": "316320",
    "end": "318160"
  },
  {
    "text": "a transformation",
    "start": "318160",
    "end": "319680"
  },
  {
    "text": "so for that i'm going to click this",
    "start": "319680",
    "end": "321120"
  },
  {
    "text": "button to add a custom transform",
    "start": "321120",
    "end": "324320"
  },
  {
    "text": "so i'm going to say this is a custom",
    "start": "324320",
    "end": "328160"
  },
  {
    "text": "transformation",
    "start": "328160",
    "end": "331039"
  },
  {
    "text": "transform for masking",
    "start": "332400",
    "end": "336479"
  },
  {
    "text": "and the node type will be a custom",
    "start": "336560",
    "end": "338800"
  },
  {
    "text": "transform that's actually",
    "start": "338800",
    "end": "340479"
  },
  {
    "text": "going to help you write a code so we'll",
    "start": "340479",
    "end": "343440"
  },
  {
    "text": "select the source",
    "start": "343440",
    "end": "344880"
  },
  {
    "text": "which is the customer source which feeds",
    "start": "344880",
    "end": "347680"
  },
  {
    "text": "the data into the custom transform",
    "start": "347680",
    "end": "350240"
  },
  {
    "text": "and now we click the transform tab",
    "start": "350240",
    "end": "353280"
  },
  {
    "text": "to actually begin writing the custom",
    "start": "353280",
    "end": "355520"
  },
  {
    "text": "code so here",
    "start": "355520",
    "end": "357360"
  },
  {
    "text": "i've already pre-created the code",
    "start": "357360",
    "end": "360400"
  },
  {
    "text": "which i'm going to copy from another",
    "start": "360400",
    "end": "362000"
  },
  {
    "text": "window and paste it here",
    "start": "362000",
    "end": "366000"
  },
  {
    "text": "one important thing to understand",
    "start": "366000",
    "end": "369120"
  },
  {
    "text": "is a custom transform",
    "start": "369120",
    "end": "372319"
  },
  {
    "text": "takes input as a dynamic frame",
    "start": "372319",
    "end": "374880"
  },
  {
    "text": "collection",
    "start": "374880",
    "end": "376639"
  },
  {
    "text": "and also outputs a dynamic frame",
    "start": "376639",
    "end": "378960"
  },
  {
    "text": "collection",
    "start": "378960",
    "end": "381120"
  },
  {
    "text": "what is a dynamic frame collection right",
    "start": "381120",
    "end": "384400"
  },
  {
    "text": "it is a dictionary of dynamic frame",
    "start": "384400",
    "end": "386960"
  },
  {
    "text": "class",
    "start": "386960",
    "end": "387440"
  },
  {
    "text": "objects in which the keys are names of",
    "start": "387440",
    "end": "390400"
  },
  {
    "text": "the dynamic frames",
    "start": "390400",
    "end": "392000"
  },
  {
    "text": "and values of the dynamic frame objects",
    "start": "392000",
    "end": "394720"
  },
  {
    "text": "in other words",
    "start": "394720",
    "end": "396240"
  },
  {
    "text": "the keys",
    "start": "396240",
    "end": "399280"
  },
  {
    "text": "as you call key 0 p1 key2 it's basically",
    "start": "399280",
    "end": "402319"
  },
  {
    "text": "as simple as an",
    "start": "402319",
    "end": "403120"
  },
  {
    "text": "array of dynamic frames that's as simple",
    "start": "403120",
    "end": "405520"
  },
  {
    "text": "as it",
    "start": "405520",
    "end": "406240"
  },
  {
    "text": "and and we only have one source so you",
    "start": "406240",
    "end": "409199"
  },
  {
    "text": "see",
    "start": "409199",
    "end": "409599"
  },
  {
    "text": "key zero but in reality there can be",
    "start": "409599",
    "end": "413039"
  },
  {
    "text": "three or four different sources that you",
    "start": "413039",
    "end": "414960"
  },
  {
    "text": "may have which all could be feeding",
    "start": "414960",
    "end": "417759"
  },
  {
    "text": "the data into the custom transform let",
    "start": "417759",
    "end": "420560"
  },
  {
    "text": "me quickly walk you through",
    "start": "420560",
    "end": "422319"
  },
  {
    "text": "high level what this transform code is",
    "start": "422319",
    "end": "424319"
  },
  {
    "text": "doing i highly encourage you to use the",
    "start": "424319",
    "end": "426560"
  },
  {
    "text": "github link at the bottom of this video",
    "start": "426560",
    "end": "428479"
  },
  {
    "text": "and read the comments to follow along",
    "start": "428479",
    "end": "430800"
  },
  {
    "text": "what each step is doing",
    "start": "430800",
    "end": "433280"
  },
  {
    "text": "so here is the python function that's",
    "start": "433280",
    "end": "435759"
  },
  {
    "text": "basically",
    "start": "435759",
    "end": "437199"
  },
  {
    "text": "performing a hash 256 encoding for last",
    "start": "437199",
    "end": "440240"
  },
  {
    "text": "name column",
    "start": "440240",
    "end": "441520"
  },
  {
    "text": "we then converted the function into a",
    "start": "441520",
    "end": "444080"
  },
  {
    "text": "spark udf",
    "start": "444080",
    "end": "445759"
  },
  {
    "text": "then created a derived column for",
    "start": "445759",
    "end": "448720"
  },
  {
    "text": "encrypted last",
    "start": "448720",
    "end": "449759"
  },
  {
    "text": "names now that the encrypted last names",
    "start": "449759",
    "end": "453599"
  },
  {
    "text": "column is created we then go ahead and",
    "start": "453599",
    "end": "456240"
  },
  {
    "text": "drop the",
    "start": "456240",
    "end": "457520"
  },
  {
    "text": "actual sensitive last name column",
    "start": "457520",
    "end": "462319"
  },
  {
    "text": "we then use the resulting data frame and",
    "start": "462880",
    "end": "466479"
  },
  {
    "text": "create a temp table uh to leverage the",
    "start": "466479",
    "end": "469919"
  },
  {
    "text": "power of spark sql",
    "start": "469919",
    "end": "472080"
  },
  {
    "text": "and using spark sql removed all the rows",
    "start": "472080",
    "end": "476000"
  },
  {
    "text": "uh in preparation to mask the first name",
    "start": "476000",
    "end": "479120"
  },
  {
    "text": "column",
    "start": "479120",
    "end": "479759"
  },
  {
    "text": "just remove all the nodes that has null",
    "start": "479759",
    "end": "482319"
  },
  {
    "text": "or all the rows that has null values",
    "start": "482319",
    "end": "485120"
  },
  {
    "text": "and then finally replaced all the first",
    "start": "485120",
    "end": "488160"
  },
  {
    "text": "name columns",
    "start": "488160",
    "end": "489599"
  },
  {
    "text": "with static static value will start",
    "start": "489599",
    "end": "492960"
  },
  {
    "text": "ff starts off started from start source",
    "start": "492960",
    "end": "495360"
  },
  {
    "text": "star",
    "start": "495360",
    "end": "496160"
  },
  {
    "text": "and and then the last thing which is the",
    "start": "496160",
    "end": "499440"
  },
  {
    "text": "most important thing",
    "start": "499440",
    "end": "500560"
  },
  {
    "text": "is to convert the dynamic data frames",
    "start": "500560",
    "end": "503919"
  },
  {
    "text": "part data frame into a dynamic frame",
    "start": "503919",
    "end": "506080"
  },
  {
    "text": "and also converting it back",
    "start": "506080",
    "end": "509280"
  },
  {
    "text": "into an array of dynamic frame",
    "start": "509280",
    "end": "512000"
  },
  {
    "text": "collection",
    "start": "512000",
    "end": "514479"
  },
  {
    "start": "514000",
    "end": "838000"
  },
  {
    "text": "at this point we have completed the",
    "start": "515919",
    "end": "517919"
  },
  {
    "text": "transformation required",
    "start": "517919",
    "end": "519518"
  },
  {
    "text": "to mask last name and first name columns",
    "start": "519519",
    "end": "522159"
  },
  {
    "text": "from the customer table",
    "start": "522159",
    "end": "523518"
  },
  {
    "text": "and the resulting output is a",
    "start": "523519",
    "end": "526640"
  },
  {
    "text": "dynamic frames or array",
    "start": "526640",
    "end": "529920"
  },
  {
    "text": "let's name the output node mask",
    "start": "529920",
    "end": "533200"
  },
  {
    "text": "customer",
    "start": "533200",
    "end": "535839"
  },
  {
    "text": "because we only had one dynamic frame",
    "start": "538959",
    "end": "542080"
  },
  {
    "text": "in the last step of the transform we",
    "start": "542080",
    "end": "544880"
  },
  {
    "text": "only see",
    "start": "544880",
    "end": "546399"
  },
  {
    "text": "one array element which is of value zero",
    "start": "546399",
    "end": "549600"
  },
  {
    "text": "so we'll select that key zero now that",
    "start": "549600",
    "end": "552800"
  },
  {
    "text": "we have",
    "start": "552800",
    "end": "553680"
  },
  {
    "text": "our encrypted customer table the next",
    "start": "553680",
    "end": "556640"
  },
  {
    "text": "part of the job is to",
    "start": "556640",
    "end": "558000"
  },
  {
    "text": "join it with the customer address and",
    "start": "558000",
    "end": "560720"
  },
  {
    "text": "demographic tables",
    "start": "560720",
    "end": "563360"
  },
  {
    "text": "which are also in the glue catalog to",
    "start": "563360",
    "end": "565440"
  },
  {
    "text": "flatten them out",
    "start": "565440",
    "end": "567440"
  },
  {
    "text": "we're going to hit the plus button to",
    "start": "567440",
    "end": "569040"
  },
  {
    "text": "add a new source for the customer",
    "start": "569040",
    "end": "570720"
  },
  {
    "text": "address table",
    "start": "570720",
    "end": "572160"
  },
  {
    "text": "we're going to name it source dash c",
    "start": "572160",
    "end": "576240"
  },
  {
    "text": "address",
    "start": "576240",
    "end": "578560"
  },
  {
    "text": "itself type s3 and",
    "start": "578560",
    "end": "581760"
  },
  {
    "text": "the catalog is already in the demodb",
    "start": "581760",
    "end": "585360"
  },
  {
    "text": "database",
    "start": "585360",
    "end": "587440"
  },
  {
    "text": "and select the table customer address",
    "start": "587440",
    "end": "591519"
  },
  {
    "text": "so at this point we have the",
    "start": "591519",
    "end": "594880"
  },
  {
    "text": "mask customer table and the customer",
    "start": "594880",
    "end": "597279"
  },
  {
    "text": "address table",
    "start": "597279",
    "end": "598240"
  },
  {
    "text": "so let's go ahead and go ahead and add a",
    "start": "598240",
    "end": "601279"
  },
  {
    "text": "join",
    "start": "601279",
    "end": "601680"
  },
  {
    "text": "transform to flatten these two tables",
    "start": "601680",
    "end": "603839"
  },
  {
    "text": "out so i'm going to say",
    "start": "603839",
    "end": "606320"
  },
  {
    "text": "the name as join customer dash customer",
    "start": "606320",
    "end": "609519"
  },
  {
    "text": "address and the note type is",
    "start": "609519",
    "end": "612560"
  },
  {
    "text": "the join transform and join requires two",
    "start": "612560",
    "end": "615519"
  },
  {
    "text": "tables so",
    "start": "615519",
    "end": "616480"
  },
  {
    "text": "customer ad mask customer table is one",
    "start": "616480",
    "end": "620079"
  },
  {
    "text": "and then we'll add the second one which",
    "start": "620079",
    "end": "622160"
  },
  {
    "text": "is the customer address source",
    "start": "622160",
    "end": "624720"
  },
  {
    "text": "so now that we have two tables let's add",
    "start": "624720",
    "end": "627279"
  },
  {
    "text": "a left join between the two",
    "start": "627279",
    "end": "629839"
  },
  {
    "text": "and the inside the keys",
    "start": "629839",
    "end": "633600"
  },
  {
    "text": "so we have the customer address key here",
    "start": "633600",
    "end": "637839"
  },
  {
    "text": "and we'll select the same key so at this",
    "start": "638320",
    "end": "641200"
  },
  {
    "text": "point",
    "start": "641200",
    "end": "641920"
  },
  {
    "text": "we have the customer customer address",
    "start": "641920",
    "end": "644079"
  },
  {
    "text": "key so now let's go ahead and add the",
    "start": "644079",
    "end": "646240"
  },
  {
    "text": "third source",
    "start": "646240",
    "end": "647120"
  },
  {
    "text": "which is our demographic source i'm",
    "start": "647120",
    "end": "649120"
  },
  {
    "text": "going to call it as source",
    "start": "649120",
    "end": "650880"
  },
  {
    "text": "demographic and this is of",
    "start": "650880",
    "end": "654399"
  },
  {
    "text": "type s3 and catalog is again the same",
    "start": "654399",
    "end": "658079"
  },
  {
    "text": "demodb",
    "start": "658079",
    "end": "659040"
  },
  {
    "text": "database customer demographic that's",
    "start": "659040",
    "end": "661360"
  },
  {
    "text": "what it is",
    "start": "661360",
    "end": "662480"
  },
  {
    "text": "so now we have the",
    "start": "662480",
    "end": "666079"
  },
  {
    "text": "flattened customer address table",
    "start": "666079",
    "end": "668160"
  },
  {
    "text": "customer table and now we need to",
    "start": "668160",
    "end": "670720"
  },
  {
    "text": "add the demographic table in another",
    "start": "670720",
    "end": "673600"
  },
  {
    "text": "join",
    "start": "673600",
    "end": "674000"
  },
  {
    "text": "so we're going to select another",
    "start": "674000",
    "end": "675120"
  },
  {
    "text": "transform and this will be",
    "start": "675120",
    "end": "677440"
  },
  {
    "text": "a join between c c a",
    "start": "677440",
    "end": "680880"
  },
  {
    "text": "and um customer demographic",
    "start": "680880",
    "end": "684079"
  },
  {
    "text": "the note type will be a join transform",
    "start": "684079",
    "end": "686720"
  },
  {
    "text": "and i'm going to select another left",
    "start": "686720",
    "end": "688720"
  },
  {
    "text": "join obviously",
    "start": "688720",
    "end": "690079"
  },
  {
    "text": "but requires two tables so let's select",
    "start": "690079",
    "end": "692720"
  },
  {
    "text": "the second source which is the customer",
    "start": "692720",
    "end": "694560"
  },
  {
    "text": "demographic",
    "start": "694560",
    "end": "696240"
  },
  {
    "text": "and here it will be the left join and",
    "start": "696240",
    "end": "699760"
  },
  {
    "text": "we'll add the join keys demographic",
    "start": "699760",
    "end": "702320"
  },
  {
    "text": "customer demographic and then the same",
    "start": "702320",
    "end": "704959"
  },
  {
    "text": "key",
    "start": "704959",
    "end": "705440"
  },
  {
    "text": "demographic so at this point we have",
    "start": "705440",
    "end": "709200"
  },
  {
    "text": "the flattened table and let's process",
    "start": "709200",
    "end": "713200"
  },
  {
    "text": "this to s3 and create a catalog table on",
    "start": "713200",
    "end": "716399"
  },
  {
    "text": "top of that so we can query so i'm going",
    "start": "716399",
    "end": "718240"
  },
  {
    "text": "to create a",
    "start": "718240",
    "end": "718959"
  },
  {
    "text": "plus sign now add a plus sign to add a",
    "start": "718959",
    "end": "721360"
  },
  {
    "text": "node and we'll call it a target",
    "start": "721360",
    "end": "723600"
  },
  {
    "text": "flatten node and this time i'm going to",
    "start": "723600",
    "end": "727279"
  },
  {
    "text": "select the target",
    "start": "727279",
    "end": "728880"
  },
  {
    "text": "which will be of s3 and here the node",
    "start": "728880",
    "end": "732720"
  },
  {
    "text": "parent",
    "start": "732720",
    "end": "733279"
  },
  {
    "text": "is just the transformed",
    "start": "733279",
    "end": "736959"
  },
  {
    "text": "transform parent and the format i'm",
    "start": "736959",
    "end": "739920"
  },
  {
    "text": "going to select blue parquet",
    "start": "739920",
    "end": "742160"
  },
  {
    "text": "and with snappy compression",
    "start": "742160",
    "end": "745200"
  },
  {
    "text": "and here i want to create a new table in",
    "start": "745200",
    "end": "748000"
  },
  {
    "text": "my",
    "start": "748000",
    "end": "748480"
  },
  {
    "text": "glue catalog and we'll give the name of",
    "start": "748480",
    "end": "751440"
  },
  {
    "text": "the table",
    "start": "751440",
    "end": "753920"
  },
  {
    "text": "so i need it in the demodb database and",
    "start": "754959",
    "end": "758000"
  },
  {
    "text": "then i'm going to say",
    "start": "758000",
    "end": "759040"
  },
  {
    "text": "demo dash encrypted.28",
    "start": "759040",
    "end": "764320"
  },
  {
    "text": "all right so at this point my table is",
    "start": "764320",
    "end": "767440"
  },
  {
    "text": "fully",
    "start": "767440",
    "end": "768160"
  },
  {
    "text": "created and i can actually go ahead and",
    "start": "768160",
    "end": "770560"
  },
  {
    "text": "look at the script here",
    "start": "770560",
    "end": "773120"
  },
  {
    "text": "this job runs for about six minutes we",
    "start": "773120",
    "end": "775680"
  },
  {
    "text": "can look at the monitoring tab",
    "start": "775680",
    "end": "777440"
  },
  {
    "text": "just look at the job that has",
    "start": "777440",
    "end": "780320"
  },
  {
    "text": "pre-previously run",
    "start": "780320",
    "end": "782000"
  },
  {
    "text": "and and this is a job that was",
    "start": "782000",
    "end": "784320"
  },
  {
    "text": "previously run successfully which ran",
    "start": "784320",
    "end": "786320"
  },
  {
    "text": "for six minutes",
    "start": "786320",
    "end": "787680"
  },
  {
    "text": "so at this point we let's take a quick",
    "start": "787680",
    "end": "790320"
  },
  {
    "text": "look",
    "start": "790320",
    "end": "790720"
  },
  {
    "text": "at the table this table that it created",
    "start": "790720",
    "end": "793920"
  },
  {
    "text": "encrypted customer did on so i'm going",
    "start": "793920",
    "end": "795920"
  },
  {
    "text": "to do a preview table",
    "start": "795920",
    "end": "797600"
  },
  {
    "text": "and this will be a flattened table with",
    "start": "797600",
    "end": "799920"
  },
  {
    "text": "the encrypted",
    "start": "799920",
    "end": "801600"
  },
  {
    "text": "first name or mask that first name and",
    "start": "801600",
    "end": "804320"
  },
  {
    "text": "last name column",
    "start": "804320",
    "end": "805920"
  },
  {
    "text": "so here is the last name column which is",
    "start": "805920",
    "end": "808160"
  },
  {
    "text": "a derived",
    "start": "808160",
    "end": "809120"
  },
  {
    "text": "enc last name and the actual last name",
    "start": "809120",
    "end": "812079"
  },
  {
    "text": "has been dropped",
    "start": "812079",
    "end": "813519"
  },
  {
    "text": "so these are the encrypted hash",
    "start": "813519",
    "end": "815200"
  },
  {
    "text": "encrypted values",
    "start": "815200",
    "end": "816959"
  },
  {
    "text": "and here is the first name column which",
    "start": "816959",
    "end": "819199"
  },
  {
    "text": "has um",
    "start": "819199",
    "end": "820240"
  },
  {
    "text": "all of the values as starstruck and",
    "start": "820240",
    "end": "823440"
  },
  {
    "text": "start start star",
    "start": "823440",
    "end": "824880"
  },
  {
    "text": "and then customer address table that's",
    "start": "824880",
    "end": "828000"
  },
  {
    "text": "also flattened out as well as",
    "start": "828000",
    "end": "830480"
  },
  {
    "text": "the customer demographic but there you",
    "start": "830480",
    "end": "833120"
  },
  {
    "text": "go",
    "start": "833120",
    "end": "833760"
  },
  {
    "text": "so the customer demographic table is",
    "start": "833760",
    "end": "835600"
  },
  {
    "text": "also here the miracle status gender etc",
    "start": "835600",
    "end": "838880"
  },
  {
    "start": "838000",
    "end": "898000"
  },
  {
    "text": "so in this demo you've seen how a",
    "start": "838880",
    "end": "841760"
  },
  {
    "text": "developer can",
    "start": "841760",
    "end": "842959"
  },
  {
    "text": "use complex etl operations or functions",
    "start": "842959",
    "end": "846639"
  },
  {
    "text": "and",
    "start": "846639",
    "end": "847040"
  },
  {
    "text": "and use the best of both writing",
    "start": "847040",
    "end": "849120"
  },
  {
    "text": "handwritten code where necessary and",
    "start": "849120",
    "end": "851120"
  },
  {
    "text": "then using the",
    "start": "851120",
    "end": "852240"
  },
  {
    "text": "configuration approach um to",
    "start": "852240",
    "end": "855519"
  },
  {
    "text": "to again bring the best of both worlds",
    "start": "855519",
    "end": "858000"
  },
  {
    "text": "so let's do a quick recap",
    "start": "858000",
    "end": "860480"
  },
  {
    "text": "you've learned glue studio is designed",
    "start": "860480",
    "end": "862320"
  },
  {
    "text": "to empower the developers with a hybrid",
    "start": "862320",
    "end": "864320"
  },
  {
    "text": "development framework",
    "start": "864320",
    "end": "866079"
  },
  {
    "text": "you also learned how blue studio enables",
    "start": "866079",
    "end": "868560"
  },
  {
    "text": "developers to develop any complex etl",
    "start": "868560",
    "end": "871199"
  },
  {
    "text": "job",
    "start": "871199",
    "end": "872000"
  },
  {
    "text": "and finally the demo helped you learn",
    "start": "872000",
    "end": "874560"
  },
  {
    "text": "how blue studio's custom transform",
    "start": "874560",
    "end": "876800"
  },
  {
    "text": "feature helps",
    "start": "876800",
    "end": "877760"
  },
  {
    "text": "write code transformations using scala",
    "start": "877760",
    "end": "880720"
  },
  {
    "text": "or",
    "start": "880720",
    "end": "881040"
  },
  {
    "text": "pi spark code",
    "start": "881040",
    "end": "884240"
  },
  {
    "text": "thank you for watching this video and",
    "start": "884240",
    "end": "886720"
  },
  {
    "text": "see you in the next video",
    "start": "886720",
    "end": "888160"
  },
  {
    "text": "where you will learn how to build a",
    "start": "888160",
    "end": "890079"
  },
  {
    "text": "streaming job",
    "start": "890079",
    "end": "891279"
  },
  {
    "text": "using glue studio",
    "start": "891279",
    "end": "898240"
  },
  {
    "text": "you",
    "start": "898240",
    "end": "900320"
  }
]