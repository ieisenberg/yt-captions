[
  {
    "start": "0",
    "end": "78000"
  },
  {
    "text": "my name is James Bezeq I'm a senior",
    "start": "0",
    "end": "2250"
  },
  {
    "text": "developer advocate here AWS service this",
    "start": "2250",
    "end": "5339"
  },
  {
    "text": "series is about the s3 2 lambda",
    "start": "5339",
    "end": "7080"
  },
  {
    "text": "serverless design pattern and how it can",
    "start": "7080",
    "end": "9480"
  },
  {
    "text": "become a flexible core for your service",
    "start": "9480",
    "end": "11759"
  },
  {
    "text": "applications in this video I'll show you",
    "start": "11759",
    "end": "14429"
  },
  {
    "text": "how you can trigger workflows from s3",
    "start": "14429",
    "end": "16350"
  },
  {
    "text": "put events the workflows are managed by",
    "start": "16350",
    "end": "18990"
  },
  {
    "text": "AWS step functions which can help you",
    "start": "18990",
    "end": "21480"
  },
  {
    "text": "build feature-rich applications using",
    "start": "21480",
    "end": "23670"
  },
  {
    "text": "state machines this s3 the step",
    "start": "23670",
    "end": "26820"
  },
  {
    "text": "functions design can be used for all",
    "start": "26820",
    "end": "28529"
  },
  {
    "text": "sorts of practical business use cases",
    "start": "28529",
    "end": "30480"
  },
  {
    "text": "for example saving a signed customer",
    "start": "30480",
    "end": "33149"
  },
  {
    "text": "contract from an email into an s3 bucket",
    "start": "33149",
    "end": "35700"
  },
  {
    "text": "could start a work order process or for",
    "start": "35700",
    "end": "38700"
  },
  {
    "text": "invoices save to s3 you could extract",
    "start": "38700",
    "end": "41160"
  },
  {
    "text": "key information using Amazon Tech's",
    "start": "41160",
    "end": "43079"
  },
  {
    "text": "tracked and automatically pay invoices",
    "start": "43079",
    "end": "45149"
  },
  {
    "text": "under a certain amount or route certain",
    "start": "45149",
    "end": "47610"
  },
  {
    "text": "vendors through different payment",
    "start": "47610",
    "end": "49020"
  },
  {
    "text": "processes in the example I'll show you",
    "start": "49020",
    "end": "51510"
  },
  {
    "text": "we're going to create a workflow that's",
    "start": "51510",
    "end": "53520"
  },
  {
    "text": "triggered by photos stored in an s3",
    "start": "53520",
    "end": "55350"
  },
  {
    "text": "bucket if the photo is a picture of a",
    "start": "55350",
    "end": "57840"
  },
  {
    "text": "cat it will cause one lambda function to",
    "start": "57840",
    "end": "60180"
  },
  {
    "text": "run if it's a dog it will trigger a",
    "start": "60180",
    "end": "62789"
  },
  {
    "text": "different lambda function and if it's",
    "start": "62789",
    "end": "64860"
  },
  {
    "text": "neither then it errors out in this",
    "start": "64860",
    "end": "67350"
  },
  {
    "text": "simple example that shows how we can use",
    "start": "67350",
    "end": "69390"
  },
  {
    "text": "image recognition to determine the",
    "start": "69390",
    "end": "71310"
  },
  {
    "text": "course of action it's all triggered by",
    "start": "71310",
    "end": "73350"
  },
  {
    "text": "s3 pud events invoking lambda let's take",
    "start": "73350",
    "end": "76650"
  },
  {
    "text": "a look at the code so the first thing",
    "start": "76650",
    "end": "79439"
  },
  {
    "start": "78000",
    "end": "232000"
  },
  {
    "text": "we're going to do is just get clone the",
    "start": "79439",
    "end": "81240"
  },
  {
    "text": "repo s3 to lambda you can see the",
    "start": "81240",
    "end": "84270"
  },
  {
    "text": "directories appeared there I look in the",
    "start": "84270",
    "end": "86369"
  },
  {
    "text": "fourth example workflow and just CD into",
    "start": "86369",
    "end": "90090"
  },
  {
    "text": "that directory there you can see there's",
    "start": "90090",
    "end": "92670"
  },
  {
    "text": "a Sam template template yeah more I'm",
    "start": "92670",
    "end": "94470"
  },
  {
    "text": "going to use Sam deploy and then you get",
    "start": "94470",
    "end": "96600"
  },
  {
    "text": "the new guided deploy to deployed",
    "start": "96600",
    "end": "98700"
  },
  {
    "text": "application so the stack name for",
    "start": "98700",
    "end": "101430"
  },
  {
    "text": "workflow my region is US West too and I",
    "start": "101430",
    "end": "104670"
  },
  {
    "text": "set a bucket name as jay-bez WA workflow",
    "start": "104670",
    "end": "107340"
  },
  {
    "text": "I'll accept all of the existing defaults",
    "start": "107340",
    "end": "110600"
  },
  {
    "text": "that's now deploying so while this",
    "start": "110600",
    "end": "113880"
  },
  {
    "text": "deploying let's take a quick look at the",
    "start": "113880",
    "end": "115500"
  },
  {
    "text": "template itself here's the input bucket",
    "start": "115500",
    "end": "117509"
  },
  {
    "text": "name as a parameter and in the resources",
    "start": "117509",
    "end": "120030"
  },
  {
    "text": "section there's an s3 bucket that we'll",
    "start": "120030",
    "end": "122280"
  },
  {
    "text": "be using that bucket name for the",
    "start": "122280",
    "end": "123689"
  },
  {
    "text": "deployment further down there's a lambda",
    "start": "123689",
    "end": "126990"
  },
  {
    "text": "function called process function using",
    "start": "126990",
    "end": "129899"
  },
  {
    "text": "node J s12 and it's going to use a state",
    "start": "129899",
    "end": "132420"
  },
  {
    "text": "machine with",
    "start": "132420",
    "end": "133230"
  },
  {
    "text": "AWS step functions the IM policy",
    "start": "133230",
    "end": "136800"
  },
  {
    "text": "specifies it has access to the s3 bucket",
    "start": "136800",
    "end": "139290"
  },
  {
    "text": "along with the ability to invoke a state",
    "start": "139290",
    "end": "141090"
  },
  {
    "text": "machine it also responds to events from",
    "start": "141090",
    "end": "145230"
  },
  {
    "text": "anything with a suffix of jpg in that",
    "start": "145230",
    "end": "147810"
  },
  {
    "text": "bucket so any JPEG file now the step",
    "start": "147810",
    "end": "152129"
  },
  {
    "text": "functions function calls a couple of",
    "start": "152129",
    "end": "154049"
  },
  {
    "text": "other functions it has a dog found",
    "start": "154049",
    "end": "155400"
  },
  {
    "text": "function and a cat found function for",
    "start": "155400",
    "end": "157470"
  },
  {
    "text": "when each one of those animals is found",
    "start": "157470",
    "end": "158970"
  },
  {
    "text": "and then we define the step function",
    "start": "158970",
    "end": "161760"
  },
  {
    "text": "state machine in the Sam template itself",
    "start": "161760",
    "end": "165140"
  },
  {
    "text": "this is a little bit difficult to read",
    "start": "165140",
    "end": "167400"
  },
  {
    "text": "here but I'll show you inside these step",
    "start": "167400",
    "end": "169319"
  },
  {
    "text": "functions UI where it can show you",
    "start": "169319",
    "end": "171450"
  },
  {
    "text": "visually what it's doing further down we",
    "start": "171450",
    "end": "174239"
  },
  {
    "text": "also give a permission to invoke the",
    "start": "174239",
    "end": "176970"
  },
  {
    "text": "lambda function so let's have a quick",
    "start": "176970",
    "end": "182010"
  },
  {
    "text": "look at the code in the process function",
    "start": "182010",
    "end": "184549"
  },
  {
    "text": "folder there you'll find the handler in",
    "start": "184549",
    "end": "187079"
  },
  {
    "text": "a pas now this is a standard lambda",
    "start": "187079",
    "end": "192180"
  },
  {
    "text": "handler where it receives an event of",
    "start": "192180",
    "end": "194940"
  },
  {
    "text": "the objects that been received all it's",
    "start": "194940",
    "end": "198299"
  },
  {
    "text": "doing here is it's going to look at the",
    "start": "198299",
    "end": "200130"
  },
  {
    "text": "object and invoke a step machine a step",
    "start": "200130",
    "end": "203459"
  },
  {
    "text": "function state machine using this step",
    "start": "203459",
    "end": "206519"
  },
  {
    "text": "functions dot start execution function",
    "start": "206519",
    "end": "208889"
  },
  {
    "text": "handing in those params and when it's",
    "start": "208889",
    "end": "211709"
  },
  {
    "text": "finished it will then exist that's a",
    "start": "211709",
    "end": "213090"
  },
  {
    "text": "very very short function just twenty or",
    "start": "213090",
    "end": "214769"
  },
  {
    "text": "thirty different lines of code now the",
    "start": "214769",
    "end": "218340"
  },
  {
    "text": "found functions the cat and dog dog",
    "start": "218340",
    "end": "220530"
  },
  {
    "text": "example the cat example will say meow",
    "start": "220530",
    "end": "222510"
  },
  {
    "text": "and the dog example will say woof okay",
    "start": "222510",
    "end": "226859"
  },
  {
    "text": "so the application has now been deployed",
    "start": "226859",
    "end": "230540"
  },
  {
    "text": "so we'll go to step functions and have a",
    "start": "231709",
    "end": "234810"
  },
  {
    "start": "232000",
    "end": "442000"
  },
  {
    "text": "look I'll just refresh and now you'll",
    "start": "234810",
    "end": "236700"
  },
  {
    "text": "see there's a dog or cat state machine",
    "start": "236700",
    "end": "238739"
  },
  {
    "text": "that's been deployed now the definition",
    "start": "238739",
    "end": "242639"
  },
  {
    "text": "that long amount of Yama we saw earlier",
    "start": "242639",
    "end": "244590"
  },
  {
    "text": "on the right hand side you'll see a",
    "start": "244590",
    "end": "246569"
  },
  {
    "text": "visualization the first thing is look",
    "start": "246569",
    "end": "248519"
  },
  {
    "text": "and call is this a dog or a cat on the",
    "start": "248519",
    "end": "250709"
  },
  {
    "text": "image and the choice state decides if",
    "start": "250709",
    "end": "253049"
  },
  {
    "text": "it's a dog that's found it will run dog",
    "start": "253049",
    "end": "254579"
  },
  {
    "text": "found and same with cat if it's unknown",
    "start": "254579",
    "end": "257099"
  },
  {
    "text": "it'll air out so let's have a look at",
    "start": "257099",
    "end": "260970"
  },
  {
    "text": "the dog cat function",
    "start": "260970",
    "end": "264950"
  },
  {
    "text": "let's take a look at lambda I'm going to",
    "start": "270640",
    "end": "273470"
  },
  {
    "text": "open the dog cap function just here and",
    "start": "273470",
    "end": "280970"
  },
  {
    "text": "inside here you'll see it's going to use",
    "start": "280970",
    "end": "284240"
  },
  {
    "text": "AWS recognition to do the work it will",
    "start": "284240",
    "end": "287330"
  },
  {
    "text": "build a params object based upon the s3",
    "start": "287330",
    "end": "289490"
  },
  {
    "text": "object using a confidence level of seven",
    "start": "289490",
    "end": "291890"
  },
  {
    "text": "he says fairly low confidence to detect",
    "start": "291890",
    "end": "294230"
  },
  {
    "text": "the labels within that image and it's",
    "start": "294230",
    "end": "296660"
  },
  {
    "text": "really looking for only a dog or a cat",
    "start": "296660",
    "end": "298280"
  },
  {
    "text": "it gives you a whole list of labels that",
    "start": "298280",
    "end": "300080"
  },
  {
    "text": "come back in this code if it finds dog",
    "start": "300080",
    "end": "302660"
  },
  {
    "text": "or a cat it'll return just that item and",
    "start": "302660",
    "end": "305660"
  },
  {
    "text": "then it returns dog or cat or unknown",
    "start": "305660",
    "end": "308900"
  },
  {
    "text": "back to the step function",
    "start": "308900",
    "end": "312729"
  },
  {
    "text": "so back to the bucket that we created",
    "start": "319889",
    "end": "321870"
  },
  {
    "text": "I'm going to just go into that bucket",
    "start": "321870",
    "end": "327569"
  },
  {
    "text": "then upload some images for us to see",
    "start": "327569",
    "end": "329759"
  },
  {
    "text": "this working so I have a lot of",
    "start": "329759",
    "end": "333210"
  },
  {
    "text": "different images of dogs and cats but",
    "start": "333210",
    "end": "335279"
  },
  {
    "text": "also a chipmunk and a chicken so I'm",
    "start": "335279",
    "end": "338189"
  },
  {
    "text": "gonna upload just one of these for now",
    "start": "338189",
    "end": "342259"
  },
  {
    "text": "I'll upload the kitten and that's now",
    "start": "344060",
    "end": "350550"
  },
  {
    "text": "been uploaded now back in the step",
    "start": "350550",
    "end": "353879"
  },
  {
    "text": "functions window will just refresh we",
    "start": "353879",
    "end": "356909"
  },
  {
    "text": "can see that that workflow is now",
    "start": "356909",
    "end": "358080"
  },
  {
    "text": "completed and successfully looked at",
    "start": "358080",
    "end": "360060"
  },
  {
    "text": "that image around the dog or cat",
    "start": "360060",
    "end": "361439"
  },
  {
    "text": "function return' the cat fired the cat",
    "start": "361439",
    "end": "364860"
  },
  {
    "text": "found function and then exited out you",
    "start": "364860",
    "end": "370379"
  },
  {
    "text": "see that cat was responded returned by",
    "start": "370379",
    "end": "372689"
  },
  {
    "text": "the recognition service for this image",
    "start": "372689",
    "end": "375800"
  },
  {
    "text": "if I look at the cloud watch logs for",
    "start": "375800",
    "end": "378569"
  },
  {
    "text": "this particular function you'll see that",
    "start": "378569",
    "end": "383550"
  },
  {
    "text": "now the cat function is running it says",
    "start": "383550",
    "end": "385560"
  },
  {
    "text": "meow so that's just for one image",
    "start": "385560",
    "end": "391860"
  },
  {
    "text": "running but what happens now if we",
    "start": "391860",
    "end": "393599"
  },
  {
    "text": "provide many images all at the same time",
    "start": "393599",
    "end": "395870"
  },
  {
    "text": "so I'm going to pull in all 24 of those",
    "start": "395870",
    "end": "398580"
  },
  {
    "text": "images that I had in that folder we've",
    "start": "398580",
    "end": "400919"
  },
  {
    "text": "got this chicken and the chipmunk which",
    "start": "400919",
    "end": "402569"
  },
  {
    "text": "will both cause the step function state",
    "start": "402569",
    "end": "404699"
  },
  {
    "text": "machine to error out because they're not",
    "start": "404699",
    "end": "406229"
  },
  {
    "text": "the cats or dogs",
    "start": "406229",
    "end": "407810"
  },
  {
    "text": "so we'll just upload all of these",
    "start": "407810",
    "end": "409919"
  },
  {
    "text": "different files ok that's now all",
    "start": "409919",
    "end": "415169"
  },
  {
    "text": "uploaded then back in step functions",
    "start": "415169",
    "end": "417300"
  },
  {
    "text": "I'll just refresh this display and",
    "start": "417300",
    "end": "418979"
  },
  {
    "text": "you'll see all of these different",
    "start": "418979",
    "end": "420479"
  },
  {
    "text": "workflows now completed with the two",
    "start": "420479",
    "end": "422669"
  },
  {
    "text": "failed ones for the chipmunk and the",
    "start": "422669",
    "end": "424409"
  },
  {
    "text": "chicken this one that was a dog it found",
    "start": "424409",
    "end": "427069"
  },
  {
    "text": "and then the failed example shows you",
    "start": "427069",
    "end": "431279"
  },
  {
    "text": "that dog or cat didn't return the either",
    "start": "431279",
    "end": "433050"
  },
  {
    "text": "of those outputs so as a result he just",
    "start": "433050",
    "end": "435389"
  },
  {
    "text": "failed in an era doubt otherwise",
    "start": "435389",
    "end": "439830"
  },
  {
    "text": "completed all of the other workflows so",
    "start": "439830",
    "end": "441810"
  },
  {
    "text": "in this example I deployed a simple",
    "start": "441810",
    "end": "444389"
  },
  {
    "start": "442000",
    "end": "522000"
  },
  {
    "text": "service application that was triggered",
    "start": "444389",
    "end": "446250"
  },
  {
    "text": "when I uploaded photos to an s3 bucket",
    "start": "446250",
    "end": "448830"
  },
  {
    "text": "the first lambda function triggered the",
    "start": "448830",
    "end": "451019"
  },
  {
    "text": "step functions workflow that then used",
    "start": "451019",
    "end": "453209"
  },
  {
    "text": "Amazon",
    "start": "453209",
    "end": "453760"
  },
  {
    "text": "recognition to determine if the photo",
    "start": "453760",
    "end": "455800"
  },
  {
    "text": "was a cat or a dog if one of these were",
    "start": "455800",
    "end": "458470"
  },
  {
    "text": "true the workflow would trigger",
    "start": "458470",
    "end": "460060"
  },
  {
    "text": "different functions and if the photo was",
    "start": "460060",
    "end": "462250"
  },
  {
    "text": "not a cat or a dog it would air out step",
    "start": "462250",
    "end": "465790"
  },
  {
    "text": "functions is a very flexible tool for",
    "start": "465790",
    "end": "467740"
  },
  {
    "text": "modeling workflows that could otherwise",
    "start": "467740",
    "end": "469150"
  },
  {
    "text": "result in complex code they'll be",
    "start": "469150",
    "end": "471640"
  },
  {
    "text": "difficult to maintain it's an important",
    "start": "471640",
    "end": "474160"
  },
  {
    "text": "service in the service developers",
    "start": "474160",
    "end": "475870"
  },
  {
    "text": "toolbox the services used in this",
    "start": "475870",
    "end": "478450"
  },
  {
    "text": "application scale up automatically so I",
    "start": "478450",
    "end": "480460"
  },
  {
    "text": "showed how it works one about 20 photos",
    "start": "480460",
    "end": "482530"
  },
  {
    "text": "was saved simultaneously into the bucket",
    "start": "482530",
    "end": "484840"
  },
  {
    "text": "triggering many parallel step functions",
    "start": "484840",
    "end": "487420"
  },
  {
    "text": "workflows even this basic application",
    "start": "487420",
    "end": "490240"
  },
  {
    "text": "could easily handle thousands of images",
    "start": "490240",
    "end": "492130"
  },
  {
    "text": "stored in the bucket this approach makes",
    "start": "492130",
    "end": "494650"
  },
  {
    "text": "it very easy to build enterprise-grade",
    "start": "494650",
    "end": "496630"
  },
  {
    "text": "workflow solutions triggered by s3",
    "start": "496630",
    "end": "498970"
  },
  {
    "text": "events invoking lambda to download the",
    "start": "498970",
    "end": "502150"
  },
  {
    "text": "examples from this video and deploy the",
    "start": "502150",
    "end": "503860"
  },
  {
    "text": "application in your own account visit",
    "start": "503860",
    "end": "505840"
  },
  {
    "text": "this URL thanks for joining me for this",
    "start": "505840",
    "end": "509020"
  },
  {
    "text": "walkthrough don't forget to visit the",
    "start": "509020",
    "end": "511240"
  },
  {
    "text": "other videos in this series that show",
    "start": "511240",
    "end": "512860"
  },
  {
    "text": "other ways of using s3 2 lambda for your",
    "start": "512860",
    "end": "515409"
  },
  {
    "text": "service applications happy coding",
    "start": "515410",
    "end": "519389"
  }
]