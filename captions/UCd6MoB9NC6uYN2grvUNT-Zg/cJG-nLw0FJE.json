[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": "[Music]",
    "start": "610",
    "end": "6140"
  },
  {
    "text": "hi this is Shahab with Amazon Web",
    "start": "6140",
    "end": "8760"
  },
  {
    "text": "Services in this section we are going to",
    "start": "8760",
    "end": "10980"
  },
  {
    "text": "take a look at how to use Amazon simple",
    "start": "10980",
    "end": "12870"
  },
  {
    "text": "cloud storage service or s3 your dotnet",
    "start": "12870",
    "end": "16170"
  },
  {
    "text": "application let's take a look at some",
    "start": "16170",
    "end": "18990"
  },
  {
    "text": "characteristics of Amazon s3 Amazon s3",
    "start": "18990",
    "end": "22590"
  },
  {
    "start": "21000",
    "end": "63000"
  },
  {
    "text": "is a highly secure durable and scalable",
    "start": "22590",
    "end": "25380"
  },
  {
    "text": "object storage an object can be of any",
    "start": "25380",
    "end": "28949"
  },
  {
    "text": "kind such as text video photo or another",
    "start": "28949",
    "end": "31679"
  },
  {
    "text": "binary format Amazon s3 uses buckets to",
    "start": "31679",
    "end": "35790"
  },
  {
    "text": "keep the data the bucket name must be",
    "start": "35790",
    "end": "38219"
  },
  {
    "text": "unique across Amazon s3 also a bucket is",
    "start": "38219",
    "end": "42450"
  },
  {
    "text": "associated with a region when you want",
    "start": "42450",
    "end": "45510"
  },
  {
    "text": "to choose a region you should consider",
    "start": "45510",
    "end": "47250"
  },
  {
    "text": "factors such as latency cost and",
    "start": "47250",
    "end": "50190"
  },
  {
    "text": "regulatory of requirements also there is",
    "start": "50190",
    "end": "53699"
  },
  {
    "text": "a caveat buckets that have a period in",
    "start": "53699",
    "end": "56640"
  },
  {
    "text": "the bucket name can cause certificate",
    "start": "56640",
    "end": "59399"
  },
  {
    "text": "exceptions when accessed with HTTP base",
    "start": "59399",
    "end": "61890"
  },
  {
    "text": "URLs now let's take a look at s3 objects",
    "start": "61890",
    "end": "65580"
  },
  {
    "start": "63000",
    "end": "102000"
  },
  {
    "text": "an object is identified by unique key",
    "start": "65580",
    "end": "68070"
  },
  {
    "text": "you must specify an object key to upload",
    "start": "68070",
    "end": "71070"
  },
  {
    "text": "and retrieve it an object keys encoded",
    "start": "71070",
    "end": "74100"
  },
  {
    "text": "using utf-8 encoding and the key has a",
    "start": "74100",
    "end": "78119"
  },
  {
    "text": "maximum length of 1,024 bytes also you",
    "start": "78119",
    "end": "82020"
  },
  {
    "text": "can use alphanumeric characters and some",
    "start": "82020",
    "end": "84150"
  },
  {
    "text": "special characters such as forward slash",
    "start": "84150",
    "end": "86580"
  },
  {
    "text": "in the naming an object is associated",
    "start": "86580",
    "end": "89790"
  },
  {
    "text": "with system defined metadata and",
    "start": "89790",
    "end": "92490"
  },
  {
    "text": "user-defined metadata system defined",
    "start": "92490",
    "end": "95640"
  },
  {
    "text": "metadata includes information such as",
    "start": "95640",
    "end": "98340"
  },
  {
    "text": "object creation date size and md5 digest",
    "start": "98340",
    "end": "102170"
  },
  {
    "start": "102000",
    "end": "144000"
  },
  {
    "text": "now let's take a look at some key points",
    "start": "102170",
    "end": "104869"
  },
  {
    "text": "all objects and buckets are private by",
    "start": "104869",
    "end": "108060"
  },
  {
    "text": "default pre-signed urls are useful if",
    "start": "108060",
    "end": "111899"
  },
  {
    "text": "you want your user to be able to upload",
    "start": "111899",
    "end": "114479"
  },
  {
    "text": "a specific object to your bucket without",
    "start": "114479",
    "end": "116700"
  },
  {
    "text": "being required to have a SS security",
    "start": "116700",
    "end": "119100"
  },
  {
    "text": "credentials or permissions also SSL",
    "start": "119100",
    "end": "123630"
  },
  {
    "text": "encrypted endpoints are supported so you",
    "start": "123630",
    "end": "126149"
  },
  {
    "text": "can encrypt the data at transition for",
    "start": "126149",
    "end": "129989"
  },
  {
    "text": "the data at rest you can use client-side",
    "start": "129989",
    "end": "132330"
  },
  {
    "text": "and servers",
    "start": "132330",
    "end": "133069"
  },
  {
    "text": "encryption Amazon s3 encrypts your data",
    "start": "133069",
    "end": "136700"
  },
  {
    "text": "at the object level as it writes it to",
    "start": "136700",
    "end": "138859"
  },
  {
    "text": "disk in its data centers and decrypts it",
    "start": "138859",
    "end": "142310"
  },
  {
    "text": "for you when you access it before",
    "start": "142310",
    "end": "144769"
  },
  {
    "start": "144000",
    "end": "190000"
  },
  {
    "text": "switching to the demo let's take a look",
    "start": "144769",
    "end": "146420"
  },
  {
    "text": "at some operations on objects that s3",
    "start": "146420",
    "end": "148459"
  },
  {
    "text": "supports there is a full list of api's",
    "start": "148459",
    "end": "150829"
  },
  {
    "text": "that you can find at a URL at the bottom",
    "start": "150829",
    "end": "153230"
  },
  {
    "text": "of the screen as an example s3 supports",
    "start": "153230",
    "end": "157670"
  },
  {
    "text": "put get delete and restore operations",
    "start": "157670",
    "end": "160419"
  },
  {
    "text": "you can upload or copy objects up to",
    "start": "160419",
    "end": "163400"
  },
  {
    "text": "five gigabyte in a single put operation",
    "start": "163400",
    "end": "166150"
  },
  {
    "text": "for larger objects up to five terabytes",
    "start": "166150",
    "end": "168919"
  },
  {
    "text": "you must use the multi-part upload API",
    "start": "168919",
    "end": "171949"
  },
  {
    "text": "and you should consider using multi-part",
    "start": "171949",
    "end": "174980"
  },
  {
    "text": "upload for objects bigger than hundred",
    "start": "174980",
    "end": "177439"
  },
  {
    "text": "megabyte also you can retrieve the whole",
    "start": "177439",
    "end": "180799"
  },
  {
    "text": "objects or part of it using a get",
    "start": "180799",
    "end": "183829"
  },
  {
    "text": "operation and using delete you can",
    "start": "183829",
    "end": "187549"
  },
  {
    "text": "delete one or more objects now let's",
    "start": "187549",
    "end": "191090"
  },
  {
    "start": "190000",
    "end": "648000"
  },
  {
    "text": "take a look at how to use the s3 api's",
    "start": "191090",
    "end": "193430"
  },
  {
    "text": "in a dotnet application using visual",
    "start": "193430",
    "end": "195709"
  },
  {
    "text": "studio in your Microsoft Visual Studio",
    "start": "195709",
    "end": "198229"
  },
  {
    "text": "you should be able to see the Amazon s3",
    "start": "198229",
    "end": "200540"
  },
  {
    "text": "tab in the AWS Explorer window you can",
    "start": "200540",
    "end": "204259"
  },
  {
    "text": "expand it and you can see the list of",
    "start": "204259",
    "end": "206269"
  },
  {
    "text": "pockets you already have created in your",
    "start": "206269",
    "end": "208790"
  },
  {
    "text": "account you can also right-click and",
    "start": "208790",
    "end": "210799"
  },
  {
    "text": "create a new bucket let me show you how",
    "start": "210799",
    "end": "213560"
  },
  {
    "text": "to use Amazon s3 api's in a dotnet",
    "start": "213560",
    "end": "215780"
  },
  {
    "text": "application for this purpose go to file",
    "start": "215780",
    "end": "218750"
  },
  {
    "text": "new project under visual c-sharp",
    "start": "218750",
    "end": "222889"
  },
  {
    "text": "aw samples storage you should be able to",
    "start": "222889",
    "end": "226280"
  },
  {
    "text": "couple of it be able to see a couple of",
    "start": "226280",
    "end": "228079"
  },
  {
    "text": "examples for Amazon s3 let's click on",
    "start": "228079",
    "end": "231439"
  },
  {
    "text": "AWS s3 sample together started with",
    "start": "231439",
    "end": "235310"
  },
  {
    "text": "let's create okay",
    "start": "235310",
    "end": "237049"
  },
  {
    "text": "and in this screen you can choose the",
    "start": "237049",
    "end": "240919"
  },
  {
    "text": "DVD profile and the region that your",
    "start": "240919",
    "end": "243799"
  },
  {
    "text": "application is going to use click OK",
    "start": "243799",
    "end": "248889"
  },
  {
    "text": "under the dependencies under nougat",
    "start": "249489",
    "end": "253099"
  },
  {
    "text": "packages you should be able to see AWS",
    "start": "253099",
    "end": "255439"
  },
  {
    "text": "SDK dot s3 if you have a new project and",
    "start": "255439",
    "end": "259699"
  },
  {
    "text": "you are working on a new code you can",
    "start": "259699",
    "end": "261979"
  },
  {
    "text": "always right-click on dependencies",
    "start": "261979",
    "end": "264090"
  },
  {
    "text": "manage nugget packages and find AWS SDK",
    "start": "264090",
    "end": "267660"
  },
  {
    "text": "at s3 and click on it and install it in",
    "start": "267660",
    "end": "274139"
  },
  {
    "text": "this window since it's already installed",
    "start": "274139",
    "end": "276510"
  },
  {
    "text": "I can either uninstall or update it",
    "start": "276510",
    "end": "278720"
  },
  {
    "text": "let's close this one and go to program",
    "start": "278720",
    "end": "282000"
  },
  {
    "text": "that CS which is the start point of our",
    "start": "282000",
    "end": "284190"
  },
  {
    "text": "console application into program dot C s",
    "start": "284190",
    "end": "288030"
  },
  {
    "text": "as you can see it's using Amazon dot s3",
    "start": "288030",
    "end": "291930"
  },
  {
    "text": "and Amazon that s3 that model libraries",
    "start": "291930",
    "end": "295320"
  },
  {
    "text": "these are the two main libraries that",
    "start": "295320",
    "end": "298290"
  },
  {
    "text": "you need to use when you are dealing",
    "start": "298290",
    "end": "300060"
  },
  {
    "text": "with s3 in order to use the s3 api's the",
    "start": "300060",
    "end": "304979"
  },
  {
    "text": "first thing you need to do is to use a",
    "start": "304979",
    "end": "307500"
  },
  {
    "text": "client this client should be of type",
    "start": "307500",
    "end": "310250"
  },
  {
    "text": "Amazon s3 client in this demo what we",
    "start": "310250",
    "end": "315090"
  },
  {
    "text": "are going to do we are going to list by",
    "start": "315090",
    "end": "318479"
  },
  {
    "text": "a current buckets that I have create a",
    "start": "318479",
    "end": "320400"
  },
  {
    "text": "new bucket write an object to a bucket",
    "start": "320400",
    "end": "323520"
  },
  {
    "text": "reading an object deleting an object and",
    "start": "323520",
    "end": "327350"
  },
  {
    "text": "list the objects at the end let's take a",
    "start": "327350",
    "end": "330990"
  },
  {
    "text": "look at how listing buckets works click",
    "start": "330990",
    "end": "334590"
  },
  {
    "text": "on it and go to implementation to list",
    "start": "334590",
    "end": "338669"
  },
  {
    "text": "the buckets you need to call the least",
    "start": "338669",
    "end": "342960"
  },
  {
    "text": "buckets operation on the client and the",
    "start": "342960",
    "end": "346590"
  },
  {
    "text": "response will have a list of pockets and",
    "start": "346590",
    "end": "350240"
  },
  {
    "text": "you can actually go through them and in",
    "start": "350240",
    "end": "353130"
  },
  {
    "text": "this scenario we can write the name of",
    "start": "353130",
    "end": "354930"
  },
  {
    "text": "the bucket names also in the response of",
    "start": "354930",
    "end": "357840"
  },
  {
    "text": "every API call to s3 you can catch the",
    "start": "357840",
    "end": "361620"
  },
  {
    "text": "Amazon s3 exception that can tell you",
    "start": "361620",
    "end": "364680"
  },
  {
    "text": "hey if there is invalid access key or",
    "start": "364680",
    "end": "366870"
  },
  {
    "text": "security or if there is another kind of",
    "start": "366870",
    "end": "369030"
  },
  {
    "text": "error let's see how to actually create a",
    "start": "369030",
    "end": "372780"
  },
  {
    "text": "bucket now in order to create a bucket",
    "start": "372780",
    "end": "377510"
  },
  {
    "text": "what you need to do you need a crate",
    "start": "377510",
    "end": "381510"
  },
  {
    "text": "bucket request or put bucket request in",
    "start": "381510",
    "end": "384990"
  },
  {
    "text": "the foot pocket request the only thing",
    "start": "384990",
    "end": "387060"
  },
  {
    "text": "you need to provide is a bucket name",
    "start": "387060",
    "end": "388830"
  },
  {
    "text": "this bucket name should be a unique but",
    "start": "388830",
    "end": "391710"
  },
  {
    "text": "a unique buttock bucket name for the",
    "start": "391710",
    "end": "394530"
  },
  {
    "text": "purpose of this application we need to",
    "start": "394530",
    "end": "397169"
  },
  {
    "text": "send this back",
    "start": "397169",
    "end": "397950"
  },
  {
    "text": "name let me actually create a new bucket",
    "start": "397950",
    "end": "404190"
  },
  {
    "text": "name and call it a ws dotnet learning",
    "start": "404190",
    "end": "411900"
  },
  {
    "text": "pass buckets one and I need to also",
    "start": "411900",
    "end": "417660"
  },
  {
    "text": "create a key name as well and for that",
    "start": "417660",
    "end": "420930"
  },
  {
    "text": "key name I will just call it key one so",
    "start": "420930",
    "end": "428910"
  },
  {
    "text": "we saw how to create a bucket let's go",
    "start": "428910",
    "end": "432570"
  },
  {
    "text": "to the next step and let's try to write",
    "start": "432570",
    "end": "434820"
  },
  {
    "text": "an object to the bucket let's go to",
    "start": "434820",
    "end": "437370"
  },
  {
    "text": "implementation to write an object into a",
    "start": "437370",
    "end": "441720"
  },
  {
    "text": "bucket you need to have a put object",
    "start": "441720",
    "end": "444660"
  },
  {
    "text": "request in the put object request you",
    "start": "444660",
    "end": "447420"
  },
  {
    "text": "need to provide a Content body the",
    "start": "447420",
    "end": "449880"
  },
  {
    "text": "bucket name and a key name the bucket",
    "start": "449880",
    "end": "452910"
  },
  {
    "text": "name and key name are what I described",
    "start": "452910",
    "end": "455160"
  },
  {
    "text": "above",
    "start": "455160",
    "end": "456350"
  },
  {
    "text": "after that you can call the put object",
    "start": "456350",
    "end": "459720"
  },
  {
    "text": "and the client and pass the request and",
    "start": "459720",
    "end": "462450"
  },
  {
    "text": "you can upload this object to the bucket",
    "start": "462450",
    "end": "465990"
  },
  {
    "text": "in your s3 account now let's take a",
    "start": "465990",
    "end": "471270"
  },
  {
    "text": "quick look at the next step which is",
    "start": "471270",
    "end": "476130"
  },
  {
    "text": "reading an object to read an object from",
    "start": "476130",
    "end": "479790"
  },
  {
    "text": "s3 you need to provide a gate object",
    "start": "479790",
    "end": "482100"
  },
  {
    "text": "request the request should have a bucket",
    "start": "482100",
    "end": "484620"
  },
  {
    "text": "name and key name after you have created",
    "start": "484620",
    "end": "488430"
  },
  {
    "text": "the request you can call the get object",
    "start": "488430",
    "end": "490920"
  },
  {
    "text": "and the request or the client and get",
    "start": "490920",
    "end": "493290"
  },
  {
    "text": "the response as mentioned before you can",
    "start": "493290",
    "end": "497070"
  },
  {
    "text": "always like catch the exception that can",
    "start": "497070",
    "end": "500040"
  },
  {
    "text": "be very descriptive to you and tell you",
    "start": "500040",
    "end": "502170"
  },
  {
    "text": "if there is any issue at the end we will",
    "start": "502170",
    "end": "507990"
  },
  {
    "text": "delete the object and then list the",
    "start": "507990",
    "end": "510420"
  },
  {
    "text": "existing objects so let's take a look at",
    "start": "510420",
    "end": "513300"
  },
  {
    "text": "how to delete an object let's go to",
    "start": "513300",
    "end": "515190"
  },
  {
    "text": "implementation to delete an object from",
    "start": "515190",
    "end": "518520"
  },
  {
    "text": "history you actually need to create a",
    "start": "518520",
    "end": "520680"
  },
  {
    "text": "delayed object request which has",
    "start": "520680",
    "end": "523750"
  },
  {
    "text": "the bucket name and key name and the",
    "start": "523750",
    "end": "526870"
  },
  {
    "text": "only thing you need to do is call the",
    "start": "526870",
    "end": "528790"
  },
  {
    "text": "delete object operation under request",
    "start": "528790",
    "end": "534449"
  },
  {
    "text": "and let's list the current objects right",
    "start": "535290",
    "end": "540009"
  },
  {
    "text": "click go to implementation to list all",
    "start": "540009",
    "end": "545319"
  },
  {
    "text": "the objects you just need to provide the",
    "start": "545319",
    "end": "548319"
  },
  {
    "text": "bucket name for the list object requests",
    "start": "548319",
    "end": "551079"
  },
  {
    "text": "and then you can call this request you",
    "start": "551079",
    "end": "555250"
  },
  {
    "text": "can pass it to list objects call and",
    "start": "555250",
    "end": "558670"
  },
  {
    "text": "this request as an argument to that and",
    "start": "558670",
    "end": "562060"
  },
  {
    "text": "call it for the client the response will",
    "start": "562060",
    "end": "566589"
  },
  {
    "text": "have the list of objects that in this",
    "start": "566589",
    "end": "568540"
  },
  {
    "text": "scenario we are just printing to the",
    "start": "568540",
    "end": "570430"
  },
  {
    "text": "console so this is how you can use the",
    "start": "570430",
    "end": "574709"
  },
  {
    "text": "history API in your dotnet application",
    "start": "574709",
    "end": "579459"
  },
  {
    "text": "let's run it and see what happens",
    "start": "579459",
    "end": "583050"
  },
  {
    "text": "it leads all the buckets these are the",
    "start": "588390",
    "end": "591450"
  },
  {
    "text": "buckets that I had previously now it",
    "start": "591450",
    "end": "594090"
  },
  {
    "text": "created a bucket right an object read at",
    "start": "594090",
    "end": "596970"
  },
  {
    "text": "the object the objects title is the",
    "start": "596970",
    "end": "599970"
  },
  {
    "text": "title this is what we said in the code",
    "start": "599970",
    "end": "602310"
  },
  {
    "text": "then it deletes the object and lists all",
    "start": "602310",
    "end": "605430"
  },
  {
    "text": "the objects which means nothing is left",
    "start": "605430",
    "end": "610700"
  },
  {
    "text": "so I just did show you how to use the s3",
    "start": "611360",
    "end": "614430"
  },
  {
    "text": "api's using a dotnet application in your",
    "start": "614430",
    "end": "616800"
  },
  {
    "text": "visual studio if you need more examples",
    "start": "616800",
    "end": "619680"
  },
  {
    "text": "for example on the transfer utility you",
    "start": "619680",
    "end": "621690"
  },
  {
    "text": "can always go to file new project and",
    "start": "621690",
    "end": "624900"
  },
  {
    "text": "under visual c-sharp",
    "start": "624900",
    "end": "626850"
  },
  {
    "text": "aw sample and storage you can follow",
    "start": "626850",
    "end": "628890"
  },
  {
    "text": "more examples including the transfer",
    "start": "628890",
    "end": "631440"
  },
  {
    "text": "utility in this video we went over how",
    "start": "631440",
    "end": "634950"
  },
  {
    "text": "to use Amazon s3 in your dotnet",
    "start": "634950",
    "end": "637170"
  },
  {
    "text": "application thanks for watching",
    "start": "637170",
    "end": "640790"
  },
  {
    "text": "[Music]",
    "start": "640790",
    "end": "650259"
  }
]