[
  {
    "text": "- [Instructor] Hi, everyone.",
    "start": "330",
    "end": "1163"
  },
  {
    "text": "Now we are going to know",
    "start": "1163",
    "end": "2040"
  },
  {
    "text": "about improving the\nperformance of logs analysis",
    "start": "2040",
    "end": "4410"
  },
  {
    "text": "using Amazon CloudWatch\nlogs field indexes.",
    "start": "4410",
    "end": "7023"
  },
  {
    "text": "For this demo,",
    "start": "8670",
    "end": "9540"
  },
  {
    "text": "I have deployed a sample\npet sale application",
    "start": "9540",
    "end": "11430"
  },
  {
    "text": "in my AWS account using CloudFormation.",
    "start": "11430",
    "end": "14223"
  },
  {
    "text": "As you can see in my account,",
    "start": "15120",
    "end": "16740"
  },
  {
    "text": "there are several stacks",
    "start": "16740",
    "end": "17699"
  },
  {
    "text": "that are deployed for\nmaking the application up,",
    "start": "17700",
    "end": "20583"
  },
  {
    "text": "and this is the application architecture.",
    "start": "21600",
    "end": "24900"
  },
  {
    "text": "As you can see, there\nare several components",
    "start": "24900",
    "end": "27029"
  },
  {
    "text": "in the application containers,",
    "start": "27030",
    "end": "28800"
  },
  {
    "text": "EC2, databases, storage services,",
    "start": "28800",
    "end": "32820"
  },
  {
    "text": "and load balancers.",
    "start": "32820",
    "end": "34023"
  },
  {
    "text": "So if I wanted to debug a particular issue",
    "start": "35310",
    "end": "37680"
  },
  {
    "text": "that is happening in the production,",
    "start": "37680",
    "end": "39360"
  },
  {
    "text": "the way I would do is, like,",
    "start": "39360",
    "end": "40830"
  },
  {
    "text": "I will be logging into Amazon\nCloudWatch log console,",
    "start": "40830",
    "end": "44550"
  },
  {
    "text": "and I'll be searching\nfor the appropriate logs.",
    "start": "44550",
    "end": "48480"
  },
  {
    "text": "So in my CloudWatch,",
    "start": "48480",
    "end": "50310"
  },
  {
    "text": "I'll be checking for the log groups,",
    "start": "50310",
    "end": "52530"
  },
  {
    "text": "and maybe, like, if there\nis an issue with my Lambda,",
    "start": "52530",
    "end": "56399"
  },
  {
    "text": "then I'll be picking the log group,",
    "start": "56400",
    "end": "58020"
  },
  {
    "text": "and I'll be searching for the logs.",
    "start": "58020",
    "end": "60360"
  },
  {
    "text": "Or the better way is to run\nthe queries on my log group.",
    "start": "60360",
    "end": "64589"
  },
  {
    "text": "So here in the Logs Insights,",
    "start": "64590",
    "end": "66659"
  },
  {
    "text": "I can choose the appropriate log group,",
    "start": "66660",
    "end": "69336"
  },
  {
    "text": "and I can run the query on my logs.",
    "start": "69336",
    "end": "72570"
  },
  {
    "text": "So in this particular demo,",
    "start": "72570",
    "end": "74070"
  },
  {
    "text": "what I will do is I have a query,",
    "start": "74070",
    "end": "77070"
  },
  {
    "text": "like, where I want it to run\nagainst a particular filter.",
    "start": "77070",
    "end": "82070"
  },
  {
    "text": "So in this particular instance,",
    "start": "82170",
    "end": "83640"
  },
  {
    "text": "I have kubernetes.service_name\nas the filter,",
    "start": "83640",
    "end": "87600"
  },
  {
    "text": "and I have the value as\naws-load-balancer-webhook-service.",
    "start": "87600",
    "end": "91530"
  },
  {
    "text": "So we can, like, pick the\nappropriate log group,",
    "start": "91530",
    "end": "96090"
  },
  {
    "text": "or I can even search\nfor all the log groups.",
    "start": "96090",
    "end": "99270"
  },
  {
    "text": "In this particular instance,",
    "start": "99270",
    "end": "100649"
  },
  {
    "text": "let's say, like, I'm\njust having this query",
    "start": "100650",
    "end": "102870"
  },
  {
    "text": "and running against all the log groups.",
    "start": "102870",
    "end": "105420"
  },
  {
    "text": "So what I will do is, like,\nI will be entering the query,",
    "start": "105420",
    "end": "107490"
  },
  {
    "text": "I'll be picking All log groups,",
    "start": "107490",
    "end": "108930"
  },
  {
    "text": "and I'll be running the query.",
    "start": "108930",
    "end": "110823"
  },
  {
    "text": "And as you can see,",
    "start": "112200",
    "end": "113490"
  },
  {
    "text": "this particular query has\nrun across several records,",
    "start": "113490",
    "end": "117240"
  },
  {
    "text": "and it has scanned over, like, 166,000,",
    "start": "117240",
    "end": "120509"
  },
  {
    "text": "and total megabytes scanned is, like, 153.",
    "start": "120510",
    "end": "125163"
  },
  {
    "text": "So whenever we are running\nthis particular filter,",
    "start": "126060",
    "end": "128670"
  },
  {
    "text": "it is searching for all the\nlogs in all the log groups,",
    "start": "128670",
    "end": "133290"
  },
  {
    "text": "and I would have to pay",
    "start": "133290",
    "end": "135150"
  },
  {
    "text": "for the same amount of logs\nthat are getting scanned.",
    "start": "135150",
    "end": "138239"
  },
  {
    "text": "So in order to improve\nthe performance of logs,",
    "start": "138240",
    "end": "141210"
  },
  {
    "text": "as well as, like, saving\nthe cost for the customers,",
    "start": "141210",
    "end": "143831"
  },
  {
    "text": "we have launched the\nfeature of field indexes.",
    "start": "143831",
    "end": "147390"
  },
  {
    "text": "So the way to do it is you can navigate",
    "start": "147390",
    "end": "149970"
  },
  {
    "text": "into the Discovered fields on the right,",
    "start": "149970",
    "end": "153270"
  },
  {
    "text": "and you can choose Create field indexes.",
    "start": "153270",
    "end": "156210"
  },
  {
    "text": "Here, we'll be creating\na field index policy,",
    "start": "156210",
    "end": "159453"
  },
  {
    "text": "and since we are searching",
    "start": "160350",
    "end": "162300"
  },
  {
    "text": "against the particular field\ncalled kubernetes.service_name,",
    "start": "162300",
    "end": "167040"
  },
  {
    "text": "I can give the sample\nname as service_name_k8s,",
    "start": "167040",
    "end": "171333"
  },
  {
    "text": "and I'll pick this particular\nfield to be applied",
    "start": "174930",
    "end": "177870"
  },
  {
    "text": "across all the log groups,",
    "start": "177870",
    "end": "179129"
  },
  {
    "text": "and I'll be applying the field path.",
    "start": "179130",
    "end": "182100"
  },
  {
    "text": "So since I'm applying the filter",
    "start": "182100",
    "end": "184020"
  },
  {
    "text": "on the kubernetes.service_name,",
    "start": "184020",
    "end": "186360"
  },
  {
    "text": "I'm entering the same thing as field path,",
    "start": "186360",
    "end": "189000"
  },
  {
    "text": "and I'll choose Create.",
    "start": "189000",
    "end": "190860"
  },
  {
    "text": "So now what happens is all\nthe logs are now indexed",
    "start": "190860",
    "end": "195270"
  },
  {
    "text": "for this particular field.",
    "start": "195270",
    "end": "196560"
  },
  {
    "text": "So whenever there is an occurrence",
    "start": "196560",
    "end": "198840"
  },
  {
    "text": "of kubernetes.service_name,",
    "start": "198840",
    "end": "200760"
  },
  {
    "text": "I have the index applied",
    "start": "200760",
    "end": "202019"
  },
  {
    "text": "to that particular log line.",
    "start": "202020",
    "end": "203420"
  },
  {
    "text": "Now with the field index in place,",
    "start": "204870",
    "end": "206340"
  },
  {
    "text": "let's run the same query,",
    "start": "206340",
    "end": "208329"
  },
  {
    "text": "where we are using the same filter,",
    "start": "208329",
    "end": "210840"
  },
  {
    "text": "which was our logs field index field path.",
    "start": "210840",
    "end": "213870"
  },
  {
    "text": "And I'll pick the All log groups,",
    "start": "213870",
    "end": "216209"
  },
  {
    "text": "and behind the scenes, like, actually,",
    "start": "216210",
    "end": "217650"
  },
  {
    "text": "like, in my application,",
    "start": "217650",
    "end": "218849"
  },
  {
    "text": "there is a loadrunner that is running,",
    "start": "218850",
    "end": "220890"
  },
  {
    "text": "which is generating the traffic.",
    "start": "220890",
    "end": "222480"
  },
  {
    "text": "So I'll choose the All log\ngroups with the same filter,",
    "start": "222480",
    "end": "226290"
  },
  {
    "text": "and I will run the query.",
    "start": "226290",
    "end": "227909"
  },
  {
    "text": "Now you can see, like, in the results,",
    "start": "227910",
    "end": "229710"
  },
  {
    "text": "like, there is a new item\nthat is getting presented,",
    "start": "229710",
    "end": "233280"
  },
  {
    "text": "which is, like, powered by field indexes.",
    "start": "233280",
    "end": "235050"
  },
  {
    "text": "So when I click the Information icon,",
    "start": "235050",
    "end": "237510"
  },
  {
    "text": "you can see, like, it has\nskipped over 2,554 records,",
    "start": "237510",
    "end": "241500"
  },
  {
    "text": "and it has skipped, like, 1.9 megabytes.",
    "start": "241500",
    "end": "244530"
  },
  {
    "text": "Since the application has just started,",
    "start": "244530",
    "end": "246483"
  },
  {
    "text": "as the time proceeds,",
    "start": "247380",
    "end": "248670"
  },
  {
    "text": "like, you can see, like,\nthere are a lot of record",
    "start": "248670",
    "end": "250440"
  },
  {
    "text": "that will be getting skipped,",
    "start": "250440",
    "end": "252270"
  },
  {
    "text": "as well as the data",
    "start": "252270",
    "end": "253260"
  },
  {
    "text": "that will be getting skipped .",
    "start": "253260",
    "end": "255540"
  },
  {
    "text": "Overall, like, actually,",
    "start": "255540",
    "end": "256440"
  },
  {
    "text": "like, with the field indexes\nfor our Logs Insights query,",
    "start": "256440",
    "end": "260070"
  },
  {
    "text": "we are saving significant\namount of data scanning,",
    "start": "260070",
    "end": "262770"
  },
  {
    "text": "thereby reducing our\nCloudWatch logs costs.",
    "start": "262770",
    "end": "265860"
  },
  {
    "text": "So for your application,",
    "start": "265860",
    "end": "268770"
  },
  {
    "text": "what I would recommend is, like,",
    "start": "268770",
    "end": "270479"
  },
  {
    "text": "try to identify the common\npatterns in your Logs Insights,",
    "start": "270480",
    "end": "273810"
  },
  {
    "text": "and maybe, like, index them.",
    "start": "273810",
    "end": "276120"
  },
  {
    "text": "Thereby, like, you can save\nsignificant amount of cost",
    "start": "276120",
    "end": "279810"
  },
  {
    "text": "for your Logs Insights run.",
    "start": "279810",
    "end": "281432"
  },
  {
    "text": "Thanks for watching.",
    "start": "282690",
    "end": "283690"
  }
]