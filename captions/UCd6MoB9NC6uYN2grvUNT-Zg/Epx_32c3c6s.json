[
  {
    "start": "0",
    "end": "128000"
  },
  {
    "text": "all right so um David and I um are going to talk about um how U infor manages its",
    "start": "1800",
    "end": "11080"
  },
  {
    "text": "uh 50 plus Enterprise applications in the info Cloud uh we'll try to stay uh",
    "start": "11080",
    "end": "17600"
  },
  {
    "text": "true to the subject of the and the the description of the session so we'll try to avoid any material that is marketing",
    "start": "17600",
    "end": "23840"
  },
  {
    "text": "oriented we're both from info Global Solutions um so we'll try to keep the",
    "start": "23840",
    "end": "29039"
  },
  {
    "text": "session towards oriented towards the technical information some of the information that is business oriented or",
    "start": "29039",
    "end": "35120"
  },
  {
    "text": "strategy oriented uh will be necessary to present because that's pertinent to",
    "start": "35120",
    "end": "40440"
  },
  {
    "text": "understanding how the um what the requirements were for devops tools for in because of some of the unique uh",
    "start": "40440",
    "end": "47600"
  },
  {
    "text": "requirements that are there for INF for cloud so we'll uh we'll we'll try to we'll go a little bit into how what do",
    "start": "47600",
    "end": "54719"
  },
  {
    "text": "the info cloud look like what is the strategy for applic for managing applications in the info Cloud what are",
    "start": "54719",
    "end": "59800"
  },
  {
    "text": "the applications that run what the architectures and other considerations that are pertinent to understanding what",
    "start": "59800",
    "end": "65720"
  },
  {
    "text": "devops tools we built why we built it and why could we couldn't use something uh straight out of the uh something",
    "start": "65720",
    "end": "71840"
  },
  {
    "text": "readymade solution so there's um some amount of uh information is necessary to",
    "start": "71840",
    "end": "76920"
  },
  {
    "text": "understand about the company and the product sets that we run in the in the cloud so in is a third largest",
    "start": "76920",
    "end": "82320"
  },
  {
    "text": "Enterprise uh company in the world uh 3 plus billion dollars uh Revenue about",
    "start": "82320",
    "end": "88479"
  },
  {
    "text": "7,000 customers in the the cloud uh we run as I mentioned 50 plus uh Enterprise",
    "start": "88479",
    "end": "94200"
  },
  {
    "text": "applications in the cloud we run all all products uh that vary from Edge",
    "start": "94200",
    "end": "99240"
  },
  {
    "text": "applications like the uh expense management uh uh Hospitality management",
    "start": "99240",
    "end": "105119"
  },
  {
    "text": "Asset Management including and business critical applications like Erp systems",
    "start": "105119",
    "end": "110360"
  },
  {
    "text": "uh we run um some of the healthcare customers so we have a pretty large uh presence in the healthcare market so we",
    "start": "110360",
    "end": "116320"
  },
  {
    "text": "run hippoc compliant workloads so we have a wide variety of applications and uh and and therefore a wide variety",
    "start": "116320",
    "end": "122680"
  },
  {
    "text": "of requirements for applications that run in info Cloud",
    "start": "122680",
    "end": "128399"
  },
  {
    "start": "128000",
    "end": "223000"
  },
  {
    "text": "um we run all our workload uh in the infocloud on Amazon so uh quite uh many",
    "start": "128399",
    "end": "136360"
  },
  {
    "text": "moons ago we used to run our applications on our own Hardware in in",
    "start": "136360",
    "end": "142319"
  },
  {
    "text": "Colo facility uh but as we were expanding globally we decided to uh um",
    "start": "142319",
    "end": "148920"
  },
  {
    "text": "not build more data centers but uh to go with aw uh to go with a public cloud provider we we evaluated um Microsoft",
    "start": "148920",
    "end": "157239"
  },
  {
    "text": "Azure IBM smart Cloud VMware we Cloud uh and a few others at the time this was",
    "start": "157239",
    "end": "162879"
  },
  {
    "text": "back in 2012 13 uh time frame and we uh we spent quite a bit of time evaluating",
    "start": "162879",
    "end": "169120"
  },
  {
    "text": "those software uh uh for those public Cloud providers we did not find that they had the uh the breadth or the depth",
    "start": "169120",
    "end": "175840"
  },
  {
    "text": "of offering to support the Enterprise applications that we needed to run the cloud so so we in 2014 our CEO um uh",
    "start": "175840",
    "end": "184319"
  },
  {
    "text": "signed a strategic agreement with AWS and uh was presenting at one of the AWS",
    "start": "184319",
    "end": "189360"
  },
  {
    "text": "events and made this uh statement which eventually became quite famous his friends don't L uh friends build data",
    "start": "189360",
    "end": "196159"
  },
  {
    "text": "centers so we run the important thing to understand here is we run all of our workloads on AWS all the devop tool set",
    "start": "196159",
    "end": "202879"
  },
  {
    "text": "that we would explain today are all built on uh to run only on AWS we we could if we needed to um um uh do some",
    "start": "202879",
    "end": "211439"
  },
  {
    "text": "significant surgery to make them work on other clouds we have no plans to we're quite happy so I think that's the",
    "start": "211439",
    "end": "217439"
  },
  {
    "text": "takeaway that all of our uh tools today are very uh ingrained with AWS",
    "start": "217439",
    "end": "223319"
  },
  {
    "text": "Technologies so it's important to understand a little bit about the info Cloud what runs on in the info Cloud",
    "start": "223319",
    "end": "229680"
  },
  {
    "text": "what kind of products so I'll walk a little bit into this uh get a little bit into the info strategy um as I explained",
    "start": "229680",
    "end": "235920"
  },
  {
    "text": "we run a um a wide variety of different workloads in in uh Cloud we have",
    "start": "235920",
    "end": "241840"
  },
  {
    "text": "products that are uh built for the cloud on microservices architecture run in",
    "start": "241840",
    "end": "247000"
  },
  {
    "text": "Docker in ECS we have products that are U all the way range from designed",
    "start": "247000",
    "end": "253319"
  },
  {
    "text": "originally for on Prem that have been rearchitecturing",
    "start": "253319",
    "end": "257238"
  },
  {
    "text": "different different stages of their Cloud Journey um we also have made some",
    "start": "268720",
    "end": "273759"
  },
  {
    "text": "significant Acquisitions of the products over a period of time so with the Acquisitions the product come with different Technologies and and the tool",
    "start": "273759",
    "end": "280840"
  },
  {
    "text": "sets that we built needed to support these various technologies that these products uh were built in so the info",
    "start": "280840",
    "end": "287320"
  },
  {
    "text": "strategy has been to uh create what we call as Cloud Sues and Cloud Suites are",
    "start": "287320",
    "end": "292600"
  },
  {
    "text": "a collection of um um deep industry-rich functionality applications that provide",
    "start": "292600",
    "end": "299240"
  },
  {
    "text": "uh um end to endend solutions to a particular vertical and so we have a number of these Cloud Suites in each of",
    "start": "299240",
    "end": "306240"
  },
  {
    "text": "these Cloud Suites for example uh a cloud Suite Aerospace and defense would be built would have a core RP at its uh",
    "start": "306240",
    "end": "313479"
  },
  {
    "start": "307000",
    "end": "353000"
  },
  {
    "text": "at its Center and a number of products surrounding those would be part of that cloud Suites and those uh products that",
    "start": "313479",
    "end": "320680"
  },
  {
    "text": "are surrounding the the Erp and the Erp itself could be anywhere in that cloud Journey so we have for Aerospace and",
    "start": "320680",
    "end": "327080"
  },
  {
    "text": "defense we have products that are true pure cloud uh microservices based application as",
    "start": "327080",
    "end": "332600"
  },
  {
    "text": "well as products that have been architected re architected for the cloud so the important takeaway is that a",
    "start": "332600",
    "end": "338120"
  },
  {
    "text": "cloud Suite can be made of number of applications that can have um wide variation technology and the devop tool",
    "start": "338120",
    "end": "345160"
  },
  {
    "text": "set that supports the deployment of these applications needed to uh to be able to support all applications",
    "start": "345160",
    "end": "351039"
  },
  {
    "text": "wherever they were in uh Journey for the cloud um infor also built a a set of",
    "start": "351039",
    "end": "358080"
  },
  {
    "start": "353000",
    "end": "426000"
  },
  {
    "text": "products that we internally call as uh techstack products that these Tech stack products have been built from ground up",
    "start": "358080",
    "end": "364199"
  },
  {
    "text": "for the cloud uh and they provide a layer on top of these products to provide a layer of homogeneity to the to",
    "start": "364199",
    "end": "371400"
  },
  {
    "text": "the end users so the end users are unaffected or unaware of the products",
    "start": "371400",
    "end": "377240"
  },
  {
    "text": "that are under the cloud Suites which may be in a different stages of their Cloud Journey so the tchack products",
    "start": "377240",
    "end": "382840"
  },
  {
    "text": "provide a common UI common authentication mechanism common reporting bi uh an integration layer for",
    "start": "382840",
    "end": "390280"
  },
  {
    "text": "the consumers so consumers just see a single pane of glass and um all the application appear homogeneous to them",
    "start": "390280",
    "end": "396639"
  },
  {
    "text": "whereas under the hood they could be running different Technologies and different engines as these best of breed",
    "start": "396639",
    "end": "403080"
  },
  {
    "text": "applications were either acquired or built so it's um so the devops tool set",
    "start": "403080",
    "end": "409160"
  },
  {
    "text": "needed to support um deployment of these various products built with different Technologies and integration of those",
    "start": "409160",
    "end": "415440"
  },
  {
    "text": "products so there's at at an amount of integration that happens at infrastructure layer between these",
    "start": "415440",
    "end": "420680"
  },
  {
    "text": "functional products and the textt products that needed to be supported by this uh uh by this devop tool",
    "start": "420680",
    "end": "426759"
  },
  {
    "start": "426000",
    "end": "483000"
  },
  {
    "text": "set Additionally the devops tool set needed to account for the fact that from",
    "start": "426759",
    "end": "431840"
  },
  {
    "text": "the get-go we decided that we wanted a completely software defined data center so what we wanted was the infrastructure",
    "start": "431840",
    "end": "438720"
  },
  {
    "text": "deployment to be software the application deployment to be software as well and the management of the life",
    "start": "438720",
    "end": "444639"
  },
  {
    "text": "cycle of those applications whether it's the patching the tenant creation or any update dates to the application or the",
    "start": "444639",
    "end": "451199"
  },
  {
    "text": "infrastructure to be completely software driven the benefits of that are of course um um repeatability you can uh",
    "start": "451199",
    "end": "458400"
  },
  {
    "text": "review the code that is De being used for deploying the application for the infrastructure you can uh easily track",
    "start": "458400",
    "end": "464599"
  },
  {
    "text": "changes that are happening in the infrastructure or in the deployment automation code uh and the repeatability",
    "start": "464599",
    "end": "470159"
  },
  {
    "text": "of the of the deployment so if you go in any region in the world where we have deployed in for cloud the products that",
    "start": "470159",
    "end": "475520"
  },
  {
    "text": "are deployed look identical to any other region so that's that was another criteria that the devops tool set needed",
    "start": "475520",
    "end": "481400"
  },
  {
    "text": "to account for um as in as I explained the in has",
    "start": "481400",
    "end": "487520"
  },
  {
    "start": "483000",
    "end": "575000"
  },
  {
    "text": "multiple products uh built on different Technologies or going through different set of stages of cloud uh through its",
    "start": "487520",
    "end": "494560"
  },
  {
    "text": "Cloud Journey we needed to ensure that the products that were coming to INF Cloud had meet certain basic criteria to",
    "start": "494560",
    "end": "502440"
  },
  {
    "text": "be in the INF Cloud so we established what we internally call as the cloud certification process of cloud 20 and 30",
    "start": "502440",
    "end": "510120"
  },
  {
    "text": "which basically just evaluate the Readiness of the product from basic multi-tenant Cloud criteria to ensure",
    "start": "510120",
    "end": "517200"
  },
  {
    "text": "that the products that are coming to the cloud even though they vary in the technology or in the in the journey to the cloud they at least meet some basic",
    "start": "517200",
    "end": "523919"
  },
  {
    "text": "criteria so for example we would evaluate the application different tiers of the application for uh their",
    "start": "523919",
    "end": "530360"
  },
  {
    "text": "horizontal scalability whether they can be in the a scaling group fault tolerance monitoring hooks are there",
    "start": "530360",
    "end": "536120"
  },
  {
    "text": "monitoring hooks in the application um the automation cap capabilities whether the application has hooks for automation",
    "start": "536120",
    "end": "543200"
  },
  {
    "text": "uh to deploy the application as well as manage update patch the application so these are some Cloud 20 and three",
    "start": "543200",
    "end": "549320"
  },
  {
    "text": "criteria what we internally call uh as a certification criteria to ensure that even though products came from different",
    "start": "549320",
    "end": "555399"
  },
  {
    "text": "sources or were built differently they they come up with a a common they meet at least a common criteria before they",
    "start": "555399",
    "end": "562040"
  },
  {
    "text": "come to the cloud that is also meant that when a product comes to in for cloud they can they can integrate with",
    "start": "562040",
    "end": "568160"
  },
  {
    "text": "the devops tool set that in has built to for managing its uh Cloud",
    "start": "568160",
    "end": "574480"
  },
  {
    "start": "575000",
    "end": "806000"
  },
  {
    "text": "products so info Cloud uh infrastructure as well as application is built in",
    "start": "575120",
    "end": "580160"
  },
  {
    "text": "layers as you know at the very bottom is the uh the typical Amazon uh layers of regions availability Zone and pop",
    "start": "580160",
    "end": "586800"
  },
  {
    "text": "locations and then there's a layer of info uh AWS Services um that that are",
    "start": "586800",
    "end": "592160"
  },
  {
    "text": "provided just by AWS on top of that infor has created its own layer of services um which are required to",
    "start": "592160",
    "end": "599399"
  },
  {
    "text": "support its Enterprise applications so an example would be let's say an FTP Service which is required by our",
    "start": "599399",
    "end": "606320"
  },
  {
    "text": "Enterprise application and these Services typically are made by are created by collecting a number of AWS",
    "start": "606320",
    "end": "612560"
  },
  {
    "text": "services and some open source components and provide a service to our applications so the FTP Service would",
    "start": "612560",
    "end": "618720"
  },
  {
    "text": "behind the use scenes use S3 as a storage and then some open source component like Crush FTP or something to",
    "start": "618720",
    "end": "625240"
  },
  {
    "text": "provide the uh the FTP Service to the applications so on top of the info Based Services then the applications are",
    "start": "625240",
    "end": "631600"
  },
  {
    "text": "deployed the individual applications and and then the cloud Suites are nothing but uh something that are brought",
    "start": "631600",
    "end": "638480"
  },
  {
    "text": "together by the tenant creation Pro process where the applications are are brought uh integrated together and",
    "start": "638480",
    "end": "645600"
  },
  {
    "text": "provide a common login for the customer so when the customer logs into a cloud Suite they see just a common plane and",
    "start": "645600",
    "end": "651360"
  },
  {
    "text": "where all the applications whereas the under of the hood the engines could be different the technology could be different but all that is managed",
    "start": "651360",
    "end": "657160"
  },
  {
    "text": "through the devops tool set so as when we when infor deploys its",
    "start": "657160",
    "end": "663040"
  },
  {
    "text": "products in a new um in a new region in Amazon the first thing we deploy is the",
    "start": "663040",
    "end": "668480"
  },
  {
    "text": "networking layer the uh the VPC we create the VPC and some active directory interfaces and some of our common um",
    "start": "668480",
    "end": "675279"
  },
  {
    "text": "tool sets for devops tool sets as well as configuration management and and the other basic tools the next what we",
    "start": "675279",
    "end": "682120"
  },
  {
    "text": "deploy is this layer of info Based Services um that are deployed on top of this base uh infrastructure layer",
    "start": "682120",
    "end": "689880"
  },
  {
    "text": "applications when the applications are deployed there is a infrastructure layer pertinent for uh for the applications",
    "start": "689880",
    "end": "695920"
  },
  {
    "text": "like the subnets the database clusters and then the application itself is deployed in tiers and using the same uh",
    "start": "695920",
    "end": "702800"
  },
  {
    "text": "tool set so the applica the infrastructure the base services and the applications are all deployed using the",
    "start": "702800",
    "end": "708120"
  },
  {
    "text": "same uh tool sets um so in order in",
    "start": "708120",
    "end": "713279"
  },
  {
    "text": "order when we deploy the network VPC layer and come to the next layer which is let's say we want to deploy subnets",
    "start": "713279",
    "end": "719680"
  },
  {
    "text": "for the application there is a dependency there's an output from the VPC deployment like the VPC ID or The",
    "start": "719680",
    "end": "725839"
  },
  {
    "text": "Cider range that needs to be passed to the application layer like subnets when you're creating subnets so these are",
    "start": "725839",
    "end": "731720"
  },
  {
    "text": "there's a lot of parameter exchange when we deploy different layers of the application so when an application has",
    "start": "731720",
    "end": "737000"
  },
  {
    "text": "been deployed the database cluster uh endpoint as well as the database cluster connection information needs to be",
    "start": "737000",
    "end": "743399"
  },
  {
    "text": "passed to the application deployment code so um as a result of the comp the",
    "start": "743399",
    "end": "748839"
  },
  {
    "text": "number of applications different Technologies and and and the way the the",
    "start": "748839",
    "end": "754040"
  },
  {
    "text": "applications are deployed in layers there's a need to exchange a lot of parameter values between these various",
    "start": "754040",
    "end": "760199"
  },
  {
    "text": "deployments and so the tool sets are needed to accommodate these uh or to",
    "start": "760199",
    "end": "765519"
  },
  {
    "text": "automate to provide automation for the exchange of these parameters initially what we used to do is to manually enter",
    "start": "765519",
    "end": "772079"
  },
  {
    "text": "these parameters for every deployment and that resulted in errors of course",
    "start": "772079",
    "end": "777480"
  },
  {
    "text": "and the automation uh being not repeatable when the application was being deployed in different regions so",
    "start": "777480",
    "end": "784279"
  },
  {
    "text": "we have built a tool set and I'll invite uh uh David Lowry to talk about the uh",
    "start": "784279",
    "end": "790160"
  },
  {
    "text": "the tool sets that help us solve some of these problems and some of these unique requirements in",
    "start": "790160",
    "end": "796519"
  },
  {
    "text": "infocloud I",
    "start": "800040",
    "end": "803160"
  },
  {
    "start": "806000",
    "end": "923000"
  },
  {
    "text": "switched all right so one of the of the things I'd like to do before we get into the actual tools is talk a little bit",
    "start": "806240",
    "end": "813199"
  },
  {
    "text": "about one some of the things that we've as we build these devops tools some of the principles we like to uh adhere to",
    "start": "813199",
    "end": "821480"
  },
  {
    "text": "we already talked about the automation from end to end in uh previous slide but",
    "start": "821480",
    "end": "826720"
  },
  {
    "text": "there's another thing that we've also done that Jim PL our Cloud operations VP",
    "start": "826720",
    "end": "832079"
  },
  {
    "text": "really pushed early on and that was use AWS Services wherever possible so we",
    "start": "832079",
    "end": "839600"
  },
  {
    "text": "know that when AWS builds something it's going to be one highly available meaning",
    "start": "839600",
    "end": "845279"
  },
  {
    "text": "we don't have to worry that there's a single point of failure and two it's very scalable so we might start out",
    "start": "845279",
    "end": "851759"
  },
  {
    "text": "small um but we can usually expect to go very wide at some point as we deploy",
    "start": "851759",
    "end": "857360"
  },
  {
    "text": "more apps and use that service so we need we don't have to worry about",
    "start": "857360",
    "end": "862639"
  },
  {
    "text": "building that into our service if we use an AWS service now the one thing that we have",
    "start": "862639",
    "end": "868480"
  },
  {
    "text": "to work around a little bit is the fact that sometimes when a service first comes out it's a minimally viable",
    "start": "868480",
    "end": "875880"
  },
  {
    "text": "product it's a smaller feature set and then more stuff will be added later on",
    "start": "875880",
    "end": "881639"
  },
  {
    "text": "and we may not have the one piece of functionality we need and we're able to usually work around that by using",
    "start": "881639",
    "end": "888440"
  },
  {
    "text": "something like Lambda we can use a little piece of Lambda code to provide that essential functionality we need",
    "start": "888440",
    "end": "893720"
  },
  {
    "text": "until it's provided by the service itself we've taken that same approach",
    "start": "893720",
    "end": "898839"
  },
  {
    "text": "and and started using it for our services and instead of trying to do all the requirements at the outset and build",
    "start": "898839",
    "end": "905320"
  },
  {
    "text": "this huge service and deliver it maybe six months a year later and then realize",
    "start": "905320",
    "end": "911079"
  },
  {
    "text": "that everything's moved on past that what those initial requirements were we try to get things out very quickly um",
    "start": "911079",
    "end": "917360"
  },
  {
    "text": "and then the developers will let us know what they want to see in the",
    "start": "917360",
    "end": "922759"
  },
  {
    "text": "product we going to talk about a couple different Services um pharoh will be",
    "start": "922759",
    "end": "928160"
  },
  {
    "start": "923000",
    "end": "1070000"
  },
  {
    "text": "talking about for the rest the presentation so I'm not going to talk about it here another one that we use is",
    "start": "928160",
    "end": "933680"
  },
  {
    "text": "called Windsor and we built this tool with the thought behind it that if our",
    "start": "933680",
    "end": "940560"
  },
  {
    "text": "infrastructure is really code then we would want to test it just like any other piece of code we would want to do",
    "start": "940560",
    "end": "945959"
  },
  {
    "text": "unit tests and integration tests on that de deployment so wiser lets us take a",
    "start": "945959",
    "end": "955319"
  },
  {
    "text": "deployment a fulls sizee Enterprise app um maybe our bi s or any of the apps",
    "start": "955319",
    "end": "960519"
  },
  {
    "text": "that we had on the previous slides and lets us set it up do run some tests on",
    "start": "960519",
    "end": "966600"
  },
  {
    "text": "it make sure that the deployment is working correctly and tear it down and then report on how that went we can",
    "start": "966600",
    "end": "972040"
  },
  {
    "text": "trigger it either nightly which is what we do now um we're also moving into",
    "start": "972040",
    "end": "978000"
  },
  {
    "text": "things like triggering it when the user wants to so they can go in and say hey I just made a change I want to run this",
    "start": "978000",
    "end": "984160"
  },
  {
    "text": "now and then the eventual goal is to as soon as the automation code hits the repository we want to go out test it",
    "start": "984160",
    "end": "991720"
  },
  {
    "text": "make sure that somebody didn't introduce uh changes that would break the deployment another app we built is",
    "start": "991720",
    "end": "997880"
  },
  {
    "text": "called Handover and that's uh to solve the problem of that a lot of people have",
    "start": "997880",
    "end": "1004480"
  },
  {
    "text": "at night I don't want to be running infrastructure or instances or anything like that if nobody's using it so",
    "start": "1004480",
    "end": "1012040"
  },
  {
    "text": "because we have so many teams we couldn't just do a Draconian okay shut off at um certain time at night come",
    "start": "1012040",
    "end": "1019560"
  },
  {
    "text": "back in the morning we have to have different schedules for different teams that are spread around the globe and",
    "start": "1019560",
    "end": "1025600"
  },
  {
    "text": "this gives us a lot of flexibility to do to do that and then because we again",
    "start": "1025600",
    "end": "1030640"
  },
  {
    "text": "have a lot of accounts that we need access to or several that the developers and the operations folk need to get into",
    "start": "1030640",
    "end": "1037280"
  },
  {
    "text": "what we we have this other product we call the AWS toolbox and you'll notice it doesn't match the naming scheme it was one of the first",
    "start": "1037280",
    "end": "1043160"
  },
  {
    "text": "ones um we this allows people to do self-service group administ ation so our",
    "start": "1043160",
    "end": "1050720"
  },
  {
    "text": "a development team manager could go in and say hey I just brought in this new developer um I want to add them to our",
    "start": "1050720",
    "end": "1056080"
  },
  {
    "text": "group and suddenly that person now has Federated access into the all the same things that the rest of the team has",
    "start": "1056080",
    "end": "1061919"
  },
  {
    "text": "access to we don't have to open a ticket or anything so now we're going to delve into this first product that I mentioned",
    "start": "1061919",
    "end": "1069640"
  },
  {
    "text": "pharaoh and the question obviously is what is it um it's our deployment",
    "start": "1069640",
    "end": "1076080"
  },
  {
    "text": "framework and tool set that we use to deploy all our apps uh or in that we're",
    "start": "1076080",
    "end": "1081320"
  },
  {
    "text": "moving to we still have a couple that don't support it and it is most easily understood if",
    "start": "1081320",
    "end": "1089880"
  },
  {
    "text": "you think about it from a couple different paradigms that everybody has been exposed to or is probably familiar",
    "start": "1089880",
    "end": "1095720"
  },
  {
    "text": "with um the first one is rpm or dpkg you can pick your flavor and the idea that",
    "start": "1095720",
    "end": "1103840"
  },
  {
    "text": "when you build a package that you want to deploy somewhere in in RPM it's",
    "start": "1103840",
    "end": "1109480"
  },
  {
    "text": "obviously on a machine you can say I have different dependencies on these libraries and things like that that I",
    "start": "1109480",
    "end": "1115159"
  },
  {
    "text": "need before I can actually go install myself um so we need something that's",
    "start": "1115159",
    "end": "1121720"
  },
  {
    "text": "very similar to that because you saw all the applications we have we've got to be able to say okay before I deploy this",
    "start": "1121720",
    "end": "1127799"
  },
  {
    "text": "piece say this application RBI Suite um I need a VPC I need a lot of other stuff",
    "start": "1127799",
    "end": "1135400"
  },
  {
    "text": "to make that happen and so we Ed that dependency idea we also use uh Concepts from cloud",
    "start": "1135400",
    "end": "1142240"
  },
  {
    "text": "formation the idea of inputs outputs and resources and we'll talk about that more",
    "start": "1142240",
    "end": "1148280"
  },
  {
    "text": "as we get into it and we use the idea ideas from Docker so at the instance",
    "start": "1148280",
    "end": "1155080"
  },
  {
    "text": "level or I guess you could even say the container level there's that there's the idea that you take everything you need",
    "start": "1155080",
    "end": "1161320"
  },
  {
    "text": "to run this particular piece of software um like a web service a microservice something like that and you package it",
    "start": "1161320",
    "end": "1169240"
  },
  {
    "text": "up in a immutable meaning it won't change if somebody does U wants to make",
    "start": "1169240",
    "end": "1176520"
  },
  {
    "text": "a change they can't they have to create a new one off of that initial one so you have this immutable package that you can",
    "start": "1176520",
    "end": "1182000"
  },
  {
    "text": "then hand off to somebody else they can deploy it and run the exact same thing you're running so what we if we had to",
    "start": "1182000",
    "end": "1188559"
  },
  {
    "text": "take pharaoh and just pull it together into one sentence the way I like to",
    "start": "1188559",
    "end": "1193720"
  },
  {
    "text": "describe it is Docker for cloud Enterprise apps",
    "start": "1193720",
    "end": "1199320"
  },
  {
    "text": "going a little bit more into the technology that we built uh phoh is a CLI first and then has a web service",
    "start": "1200080",
    "end": "1206440"
  },
  {
    "text": "component or multiple web service components as that do different tasks",
    "start": "1206440",
    "end": "1212039"
  },
  {
    "text": "and so the the build building these packages is all done via the CLI and",
    "start": "1212039",
    "end": "1217559"
  },
  {
    "text": "then as you get into the deployment side of things and the repository then you're going to be looking at more web services",
    "start": "1217559",
    "end": "1225320"
  },
  {
    "text": "uh just a little tidbit that we learned if you're going to have a CLI utility",
    "start": "1225320",
    "end": "1230520"
  },
  {
    "text": "like um well Docker is a perfect example is really good to write it in go and",
    "start": "1230520",
    "end": "1237080"
  },
  {
    "text": "Docker is written in go Pharaoh is as well and the reason behind that is that if you if you write something in Ruby or",
    "start": "1237080",
    "end": "1244679"
  },
  {
    "text": "python which are both very good languages then you have the problem of how do you deliver it and obviously you",
    "start": "1244679",
    "end": "1251400"
  },
  {
    "text": "could deliver it as a Docker container but we weren't at that point so if you have Pharaoh you all you need is one",
    "start": "1251400",
    "end": "1257559"
  },
  {
    "text": "executable it's stat ically compiled has all the libraries everything it needs in it and we don't have to worry about supporting somebody on a different",
    "start": "1257559",
    "end": "1264080"
  },
  {
    "text": "version of a Mac or we didn't think we needed to support auntu and now we have trouble supporting it so we just provide",
    "start": "1264080",
    "end": "1269960"
  },
  {
    "text": "one binary for each platform and we don't have to um worry about all the",
    "start": "1269960",
    "end": "1276919"
  },
  {
    "text": "deployment difficulties so just a little tidbit if you ever have to write a CLI for managing",
    "start": "1276919",
    "end": "1284559"
  },
  {
    "start": "1285000",
    "end": "1553000"
  },
  {
    "text": "something so the first question we always get and we've been asked this by people internally we've been asked this",
    "start": "1285000",
    "end": "1291480"
  },
  {
    "text": "by our uh Solutions architect from AWS why do you need this tool there are a lot of tools out there that do very",
    "start": "1291480",
    "end": "1298520"
  },
  {
    "text": "similar things you have opsw works you have cloud formation you have code deploy you have containers and ECS and",
    "start": "1298520",
    "end": "1305520"
  },
  {
    "text": "all this stuff why do we need something else in this whole mix and the answer is",
    "start": "1305520",
    "end": "1311240"
  },
  {
    "text": "we need one we need to be able to package it up in a way that accommodates",
    "start": "1311240",
    "end": "1316760"
  },
  {
    "text": "all of those and again if you go back to the the what AMU was saying about having",
    "start": "1316760",
    "end": "1321919"
  },
  {
    "text": "all these different Technologies and all these different applications that we have to make",
    "start": "1321919",
    "end": "1328200"
  },
  {
    "text": "work we we have to be able to handle everything from a microservice ECS",
    "start": "1328200",
    "end": "1333919"
  },
  {
    "text": "Docker container type app you know bleeding edge um to apps that haven't",
    "start": "1333919",
    "end": "1339880"
  },
  {
    "text": "quite been able to get all of the cloud 2.0 requirements finished yet they're moving that direction they're moving",
    "start": "1339880",
    "end": "1345279"
  },
  {
    "text": "towards microservices architectures but we got to deploy them today we can't wait until they're at that stage so we",
    "start": "1345279",
    "end": "1352120"
  },
  {
    "text": "had to have something that we could package any of those and hand it off in a uniform fashion to whoever's doing the",
    "start": "1352120",
    "end": "1358000"
  },
  {
    "text": "deployment whether that be an Dev team an Ops Team whoever they and they all it",
    "start": "1358000",
    "end": "1363760"
  },
  {
    "text": "all works the same way um the other thing that I like to mention and a already mentioned this is",
    "start": "1363760",
    "end": "1370320"
  },
  {
    "text": "parameters when you have all of these interdependencies that we talked about earlier you have to have some way of",
    "start": "1370320",
    "end": "1377880"
  },
  {
    "text": "getting information from one deployment to another for example your VPC to your uh if you have",
    "start": "1377880",
    "end": "1384840"
  },
  {
    "text": "the VC VPC excuse me the VPC deployed separately by a your networking team you",
    "start": "1384840",
    "end": "1390960"
  },
  {
    "text": "have to get those that information to the application so it knows the subnet IDs and the security group IDs and all",
    "start": "1390960",
    "end": "1396559"
  },
  {
    "text": "those kind of things uh same thing applies to our Integrations like database information um inp points S3",
    "start": "1396559",
    "end": "1403799"
  },
  {
    "text": "buckets all of that kind of thing so let's go into that a little bit what do you need to deploy a Cloud app",
    "start": "1403799",
    "end": "1411840"
  },
  {
    "text": "and we're talking here fairly complex apps not just one product multiple",
    "start": "1411840",
    "end": "1417159"
  },
  {
    "text": "products so you might have cloud formation you might have uh code deploy",
    "start": "1417159",
    "end": "1422559"
  },
  {
    "text": "app specs you're going to have from a lot of our apps we deliver things as exe or um Linux executables for the",
    "start": "1422559",
    "end": "1430000"
  },
  {
    "text": "installer or you might have containers for the some of the newer apps you have your automation code we use salt stack",
    "start": "1430000",
    "end": "1437039"
  },
  {
    "text": "primarily but you might have Chef you might have puppet you might have Powershell and we have a lot of apps",
    "start": "1437039",
    "end": "1442520"
  },
  {
    "text": "that use Powershell so you need something where you can grab all of the stuff that belongs to a deployment and",
    "start": "1442520",
    "end": "1449159"
  },
  {
    "text": "keep it together in sync immutably ready to deploy when the time comes the way we",
    "start": "1449159",
    "end": "1455760"
  },
  {
    "text": "used to do it was a little bit less than ideal",
    "start": "1455760",
    "end": "1462080"
  },
  {
    "text": "which is partly why we built Pharaoh so I I got this idea originally from a",
    "start": "1462080",
    "end": "1467679"
  },
  {
    "text": "GitHub session and one thing I neglected to realize is",
    "start": "1467679",
    "end": "1472960"
  },
  {
    "text": "that GitHub works really well in that they can keep all their code they push it when it hits Master it can be",
    "start": "1472960",
    "end": "1478000"
  },
  {
    "text": "deployed at any time but it's really one product not 50 if you think about it so",
    "start": "1478000",
    "end": "1485320"
  },
  {
    "text": "it didn't work real well for us we would what would happen is we'd have our automation code which was delivered",
    "start": "1485320",
    "end": "1490679"
  },
  {
    "text": "separately from the application binaries and that would be put U moved out to the Salt stack Masters and then we would",
    "start": "1490679",
    "end": "1497440"
  },
  {
    "text": "have somebody maybe the same people maybe somebody else upload the binaries into",
    "start": "1497440",
    "end": "1502880"
  },
  {
    "text": "S3 and then once all that was there and in theory it could be deployed we' then go to cloud formation a different",
    "start": "1502880",
    "end": "1509440"
  },
  {
    "text": "console deploy the infrastructure whether it be the elbs the ec2 instances and primarily the issue was around ec2",
    "start": "1509440",
    "end": "1515880"
  },
  {
    "text": "instances and their automation code they would pull the stuff down from the salt master and then if you wanted to do an",
    "start": "1515880",
    "end": "1521600"
  },
  {
    "text": "update you'd use a totally separate tool which would be code deploy so it got very cumbersome and it",
    "start": "1521600",
    "end": "1528000"
  },
  {
    "text": "was not not repeatable because somebody would forget to upload a binary in that account or somebody would forget and",
    "start": "1528000",
    "end": "1535760"
  },
  {
    "text": "make a change in the automation code but not make the change in S3 that corresponded to it and so you very",
    "start": "1535760",
    "end": "1542640"
  },
  {
    "text": "quickly got yourself into situations where it was failing and you had no idea why because somebody changed something",
    "start": "1542640",
    "end": "1547720"
  },
  {
    "text": "or somebody forgot to change something and we couldn't do a",
    "start": "1547720",
    "end": "1552880"
  },
  {
    "text": "deployment going on to parameters as I mentioned just for a simple applic",
    "start": "1552880",
    "end": "1558520"
  },
  {
    "start": "1553000",
    "end": "1585000"
  },
  {
    "text": "there's a lot of things you have to know you have to know subnet IDs you have to know your security groups you have to",
    "start": "1558520",
    "end": "1564039"
  },
  {
    "text": "know if you have using active directory you have to know your ad settings like your domain username password for",
    "start": "1564039",
    "end": "1569880"
  },
  {
    "text": "joining the domain um you have to know your database all this kind of stuff just to deploy one reasonably complex",
    "start": "1569880",
    "end": "1576240"
  },
  {
    "text": "app even simple apps require a lot of information so we needed some way to get",
    "start": "1576240",
    "end": "1581320"
  },
  {
    "text": "all that and not have to go through what we were going through before and that was we would have an admin literally",
    "start": "1581320",
    "end": "1587799"
  },
  {
    "text": "have to go check each console to find that information and go to VPC and look",
    "start": "1587799",
    "end": "1593080"
  },
  {
    "text": "at the subnet IDs and look at the security groups and then they'd have to go talk to the active directory admin and get the domain name usually that was",
    "start": "1593080",
    "end": "1599799"
  },
  {
    "text": "well defined but they'd also have to uh get this the secure parameters for",
    "start": "1599799",
    "end": "1605480"
  },
  {
    "text": "joining the domain the username and password and securely store them in S3 which is a separate place and it just",
    "start": "1605480",
    "end": "1610960"
  },
  {
    "text": "got very complex to get that whole set of parameters and it was very very painful you could easily mess something",
    "start": "1610960",
    "end": "1618120"
  },
  {
    "text": "up up just get a wrong ID look look at the wrong line put in a wrong thing a wrong um parameter and all of a sudden",
    "start": "1618120",
    "end": "1624320"
  },
  {
    "text": "your deployment doesn't work so because of that pain point we",
    "start": "1624320",
    "end": "1630360"
  },
  {
    "text": "said okay we need something where we can get the parameters from one place to another and we need an easy way to do",
    "start": "1630360",
    "end": "1636919"
  },
  {
    "text": "that so that's where Pharaoh started we started working on pharaoh and now I'm",
    "start": "1636919",
    "end": "1642080"
  },
  {
    "text": "going to move a little bit into how it works from the process point of view and",
    "start": "1642080",
    "end": "1648320"
  },
  {
    "text": "then we can move into the different components so it's it's a workflow that you should recognize you build your",
    "start": "1648320",
    "end": "1655480"
  },
  {
    "text": "package we call it a deck and that will become apparent why in a couple minutes um you publish that deck to a",
    "start": "1655480",
    "end": "1664600"
  },
  {
    "text": "repository and then you go deploy it to deploy you tell it what deck you want to deploy and what um Target you want to",
    "start": "1664600",
    "end": "1671440"
  },
  {
    "text": "deploy to and you deploy the deck okay I think it's what everybody is very familiar with Docker does a very similar workflow cloud formation isn't much",
    "start": "1671440",
    "end": "1677799"
  },
  {
    "text": "different so I I except for the packaging part so it's not something that's new so let's go into each of",
    "start": "1677799",
    "end": "1684200"
  },
  {
    "text": "those and take a look at them all right so when we build something we grab all",
    "start": "1684200",
    "end": "1690320"
  },
  {
    "start": "1686000",
    "end": "1784000"
  },
  {
    "text": "of the code pieces the automation that's in the repository and Pull It in a deck",
    "start": "1690320",
    "end": "1696919"
  },
  {
    "text": "and the way you specify what those pieces are is a simple file we call a deck speec very similar to an RPM spec",
    "start": "1696919",
    "end": "1703760"
  },
  {
    "text": "file or a cloud formation file it just tells pharaoh what I need to go grab to",
    "start": "1703760",
    "end": "1710039"
  },
  {
    "text": "put into this deck deck speec is very similar um",
    "start": "1710039",
    "end": "1716360"
  },
  {
    "text": "formatting to what you would expect format version in case we ever have to make breaking changes um we have things",
    "start": "1716360",
    "end": "1722440"
  },
  {
    "text": "like parameters outputs and in inline scripts scripts that are in the same directory and you can also specify your",
    "start": "1722440",
    "end": "1730039"
  },
  {
    "text": "AWS resources that you're trying to provision so there's",
    "start": "1730039",
    "end": "1735799"
  },
  {
    "text": "it's it's not exactly a glorified cloud formation file but it's in some ways",
    "start": "1735799",
    "end": "1741799"
  },
  {
    "text": "very similar to that so it's a very similar concept now one thing we quickly",
    "start": "1741799",
    "end": "1747919"
  },
  {
    "text": "realized was one problem we had to solve was that we had a lot of code that was",
    "start": "1747919",
    "end": "1754279"
  },
  {
    "text": "being used a lot of different places an example of this is an agent let's say you use Trend Micro or you use Sumo",
    "start": "1754279",
    "end": "1761640"
  },
  {
    "text": "logic or you use code deploy and you don't you're using amias that don't have it installed so how do you get that",
    "start": "1761640",
    "end": "1768960"
  },
  {
    "text": "uh agent code have one copy of it and then move it into each of your other",
    "start": "1768960",
    "end": "1775440"
  },
  {
    "text": "pieces of automation so that every time an instance comes up it has Sumo logic installed well that's where we actually",
    "start": "1775440",
    "end": "1781640"
  },
  {
    "text": "can do what we call a nested deck and you or included deck and the idea is",
    "start": "1781640",
    "end": "1787960"
  },
  {
    "start": "1784000",
    "end": "1843000"
  },
  {
    "text": "that you can take a deck you've already built and use it as one of the components of another deck so um I was",
    "start": "1787960",
    "end": "1795120"
  },
  {
    "text": "going to get a deck of cards but apparently that's hard to find around here for some reason",
    "start": "1795120",
    "end": "1801080"
  },
  {
    "text": "um the if you take a card and think of it as the Sumo logic agent and then you",
    "start": "1801080",
    "end": "1809679"
  },
  {
    "text": "have another card and you think of it as the Trend Micro agent it has all the automation needed to install TR micro",
    "start": "1809679",
    "end": "1815399"
  },
  {
    "text": "and you put those together and then you have your app automation code as another card and you start building this deck",
    "start": "1815399",
    "end": "1821240"
  },
  {
    "text": "when you're done your deck has all the components you need to install everything you need for that set of",
    "start": "1821240",
    "end": "1826399"
  },
  {
    "text": "instances or that tier so it's it's really nice because now we",
    "start": "1826399",
    "end": "1832120"
  },
  {
    "text": "we make the change once to our agent codes and then we can push it out to um",
    "start": "1832120",
    "end": "1837919"
  },
  {
    "text": "all the other automation without everybody having to go in and write that",
    "start": "1837919",
    "end": "1843919"
  },
  {
    "start": "1843000",
    "end": "1912000"
  },
  {
    "text": "themselves once you've built something you need to publish it so that other people can use it so you we use a web",
    "start": "1843919",
    "end": "1851399"
  },
  {
    "text": "service for this we're moving from the client side CLI side to the web service",
    "start": "1851399",
    "end": "1857360"
  },
  {
    "text": "and you take take that deck that you've built and inside of the deck spec you",
    "start": "1857360",
    "end": "1863440"
  },
  {
    "text": "can actually point to other locations like S3 HTTP",
    "start": "1863440",
    "end": "1869760"
  },
  {
    "text": "https and at this point the publish process looks at those links and says",
    "start": "1869760",
    "end": "1877279"
  },
  {
    "text": "okay I'm going to go get those and we're going to put this as one big package and deploy uh put it up into our repository",
    "start": "1877279",
    "end": "1884960"
  },
  {
    "text": "so this way we are now locking in any of the binaries that are needed so you cannot CH once you've published",
    "start": "1884960",
    "end": "1891440"
  },
  {
    "text": "something the only way to change a binary that could potentially break your",
    "start": "1891440",
    "end": "1896600"
  },
  {
    "text": "application is to create a new version of the deck and we keep all the old versions of the deck um at this point is",
    "start": "1896600",
    "end": "1903880"
  },
  {
    "text": "still indefinite but we'll start cleaning them up at some point so if you could go back three weeks ago and get",
    "start": "1903880",
    "end": "1909200"
  },
  {
    "text": "that exact piece that you deployed back then we'll go into the internals a",
    "start": "1909200",
    "end": "1914639"
  },
  {
    "start": "1912000",
    "end": "2040000"
  },
  {
    "text": "little bit and talk about the AWS Services we use we use API Gateway and for the front end",
    "start": "1914639",
    "end": "1921840"
  },
  {
    "text": "and then we have Lambda functions that do the publish um actions we store our metadata",
    "start": "1921840",
    "end": "1929279"
  },
  {
    "text": "in Dynamo DB and we store the zip files the deck files in S3 as well as any of",
    "start": "1929279",
    "end": "1936639"
  },
  {
    "text": "the binaries and now you might be thinking okay what if I do a deck deployment multi or a deck build and",
    "start": "1936639",
    "end": "1944159"
  },
  {
    "text": "publish multiple times a day so every time I'm doing that let's say it's 100 megabyte binary and every time I build",
    "start": "1944159",
    "end": "1951679"
  },
  {
    "text": "this deck and publish it I'm pushing up 100 megabyte binary well the binary is not changing it's just the automation",
    "start": "1951679",
    "end": "1959000"
  },
  {
    "text": "code that I'm testing and trying to get right well what we need to do what we",
    "start": "1959000",
    "end": "1964200"
  },
  {
    "text": "did there to avoid having to upload it every time is a trick we learned from get and if you're at all familiar with",
    "start": "1964200",
    "end": "1970399"
  },
  {
    "text": "how get stores its its files internally what it does is it runs a hash on on the",
    "start": "1970399",
    "end": "1978159"
  },
  {
    "text": "actual contents of the file and then stores that hash and pointers to it so",
    "start": "1978159",
    "end": "1984360"
  },
  {
    "text": "that it never has to um keep the same file with the same",
    "start": "1984360",
    "end": "1990600"
  },
  {
    "text": "contents twice so what happens is we look at that binary we say okay we're going to publish it we're going to run a",
    "start": "1990600",
    "end": "1998559"
  },
  {
    "text": "um hash on it sha two that will become the key of the actual binary we upload",
    "start": "1998559",
    "end": "2005080"
  },
  {
    "text": "and then we go to the publish uh web service and say hey I've got this shot two that I need to upload as part of my",
    "start": "2005080",
    "end": "2011440"
  },
  {
    "text": "deck and it will look and say oh I already know about that you don't need to send it up so we only ever keep one copy of each binary it's a very similar",
    "start": "2011440",
    "end": "2019240"
  },
  {
    "text": "concept to what Docker does too and that also keeps us from filling up S3 with the same file over and over",
    "start": "2019240",
    "end": "2027159"
  },
  {
    "text": "all right so we've built a package we've published it and we have everything locked into place ready to deploy ready",
    "start": "2027159",
    "end": "2034159"
  },
  {
    "text": "to hand off to somebody else so let's talk about how we go about deploying",
    "start": "2034159",
    "end": "2040360"
  },
  {
    "start": "2040000",
    "end": "2074000"
  },
  {
    "text": "it very similar workflow to what you would see in a lot of other things um",
    "start": "2040360",
    "end": "2045399"
  },
  {
    "text": "Docker or cloud formation and what we do is we go to the deploy web service and",
    "start": "2045399",
    "end": "2051520"
  },
  {
    "text": "say I want to deploy this deck with this version we can also use tags we are using a lot of tagging uh to keep the",
    "start": "2051520",
    "end": "2058919"
  },
  {
    "text": "versions correct and these are the parameters I want to provide for it and",
    "start": "2058919",
    "end": "2065158"
  },
  {
    "text": "then the deploy web service goes and takes that downloads it from the repository and spits it out into",
    "start": "2065159",
    "end": "2070679"
  },
  {
    "text": "AWS well it's obviously a little more complex than that but it's a very",
    "start": "2070679",
    "end": "2075720"
  },
  {
    "start": "2074000",
    "end": "2212000"
  },
  {
    "text": "similar um setup you can as you can see it's API Gateway and we to be quite",
    "start": "2075720",
    "end": "2081118"
  },
  {
    "text": "honest we do have some compute behind this and where we haven't converted everything to Lambda yet but that's",
    "start": "2081119",
    "end": "2086158"
  },
  {
    "text": "where we're headed and we have um it contacts the",
    "start": "2086159",
    "end": "2091839"
  },
  {
    "text": "deck repository gets that deck it stores the metadata in Dynamo DB and then we",
    "start": "2091839",
    "end": "2098440"
  },
  {
    "text": "talk to The Individual Services that we interface with and these are the five Services we interface with right now we",
    "start": "2098440",
    "end": "2103960"
  },
  {
    "text": "use KMS for encrypting secure parameters and I'll talk about that a little bit we",
    "start": "2103960",
    "end": "2109400"
  },
  {
    "text": "use S3 and you can store things you in your deck spec you can say okay go store this file out in S3 or put this",
    "start": "2109400",
    "end": "2117119"
  },
  {
    "text": "templated text in an S3 file if you need that we support cloud formation so we",
    "start": "2117119",
    "end": "2122599"
  },
  {
    "text": "can do cloud formation Stacks we support Lambda invocation",
    "start": "2122599",
    "end": "2128359"
  },
  {
    "text": "and it's very important to note we don't support Lambda deployments because if you really need to deploy something into Lambda you can use cloud formation to do",
    "start": "2128359",
    "end": "2135000"
  },
  {
    "text": "that but we do support running a Lambda function and then we support support code deploy to actually go out and run",
    "start": "2135000",
    "end": "2142440"
  },
  {
    "text": "the Cod pharoh on the individual instances to deploy whatever is in the",
    "start": "2142440",
    "end": "2147480"
  },
  {
    "text": "deck now we have also implemented another way",
    "start": "2147480",
    "end": "2152640"
  },
  {
    "text": "because there the when you have an autoscaling group and you go through and",
    "start": "2152640",
    "end": "2157960"
  },
  {
    "text": "you just want to terminate your instances one by one you really don't need code deploy in that case everything can be done in user data when you want",
    "start": "2157960",
    "end": "2164280"
  },
  {
    "text": "to do an update so we also have the ability there to just put it in the user",
    "start": "2164280",
    "end": "2170079"
  },
  {
    "text": "data a very simple um uh command line and then it will when the instance comes",
    "start": "2170079",
    "end": "2175680"
  },
  {
    "text": "up in an Autos scaling group it'll pull down the deck and deploy it on that",
    "start": "2175680",
    "end": "2180760"
  },
  {
    "text": "instance so we have solved the problem of how do we deploy these",
    "start": "2180760",
    "end": "2188119"
  },
  {
    "text": "entire um applications into AWS and keep them all the pieces you need together",
    "start": "2188119",
    "end": "2195800"
  },
  {
    "text": "but what we haven't talked about yet is how do I get all that information between these interconnected systems to",
    "start": "2195800",
    "end": "2203040"
  },
  {
    "text": "like parameters database information what endpoints all of that stuff how do I pass it from one deployment to another",
    "start": "2203040",
    "end": "2210599"
  },
  {
    "text": "so we have this concept that we I've already mentioned of dependencies so this is basically how it works somebody",
    "start": "2210599",
    "end": "2217960"
  },
  {
    "start": "2212000",
    "end": "2331000"
  },
  {
    "text": "uh like our Network team would go deploy a deck a VPC deck and now we have a VPC",
    "start": "2217960",
    "end": "2223720"
  },
  {
    "text": "deployment which is an instance if you're if you're thinking in terms of class and object it's an instance of",
    "start": "2223720",
    "end": "2230680"
  },
  {
    "text": "that deck so it's we call it a deployment so we have this VPC deployment and it has a bun it may have",
    "start": "2230680",
    "end": "2236760"
  },
  {
    "text": "a couple inputs that are manually put in like the cider block or things like that",
    "start": "2236760",
    "end": "2241880"
  },
  {
    "text": "but what's really important is all the things that it creates say a subnet ID or a or multiple subnet IDs your",
    "start": "2241880",
    "end": "2248680"
  },
  {
    "text": "Security Group IDs those are then stored in outputs now any deck can come in and say",
    "start": "2248680",
    "end": "2255520"
  },
  {
    "text": "you know what for me to deploy I need a VPC you just tell me what the VPC name",
    "start": "2255520",
    "end": "2261480"
  },
  {
    "text": "is and I will go get those parameters and use or the outputs from that deck and use them as my parameters so it's",
    "start": "2261480",
    "end": "2268200"
  },
  {
    "text": "very similar to what cloud formation just delivered with the output to or the",
    "start": "2268200",
    "end": "2273560"
  },
  {
    "text": "U output to parameter chaining but in our case we can actually change them in",
    "start": "2273560",
    "end": "2280079"
  },
  {
    "text": "the depend the deck that's being depended on and then they get pushed down um at the next deployment in the in",
    "start": "2280079",
    "end": "2288280"
  },
  {
    "text": "this case the app deck that's depending on the VPC deployment so it's really",
    "start": "2288280",
    "end": "2293960"
  },
  {
    "text": "nice in that if you set everything up right what you will end up with is never",
    "start": "2293960",
    "end": "2299400"
  },
  {
    "text": "having to enter a parameter twice because it's already in the system somewhere and you can just depend on",
    "start": "2299400",
    "end": "2305079"
  },
  {
    "text": "that um that deck or that deployment and get that parameter for",
    "start": "2305079",
    "end": "2310359"
  },
  {
    "text": "you now there's one thing we haven't talked about and that's how we deal with secure parameters so the problem is that",
    "start": "2310359",
    "end": "2318319"
  },
  {
    "text": "if you're using this tool to do all your deployments you don't want to have clear text passwords API keys that sort of",
    "start": "2318319",
    "end": "2325560"
  },
  {
    "text": "stuff sitting in your deployment metadata database so what we do is we",
    "start": "2325560",
    "end": "2332240"
  },
  {
    "start": "2331000",
    "end": "2407000"
  },
  {
    "text": "use KMS so when there's a secure parameter it's very similar to the way you would uh do do a secure parameter in",
    "start": "2332240",
    "end": "2338359"
  },
  {
    "text": "cloud formation uh you just flag it as this is a secure parameter you do the",
    "start": "2338359",
    "end": "2343440"
  },
  {
    "text": "deployment and then when that comes into the phro deploy service the first thing",
    "start": "2343440",
    "end": "2348760"
  },
  {
    "text": "it does is go out and encrypt it using KMS and the deployment web service only",
    "start": "2348760",
    "end": "2354520"
  },
  {
    "text": "has rights on the key to do the encryption it cannot decrypt it so from that point on the deploy web service has",
    "start": "2354520",
    "end": "2360960"
  },
  {
    "text": "no access to the clear text it only has the cipher text which it puts it in its metadata",
    "start": "2360960",
    "end": "2366359"
  },
  {
    "text": "database so what then happens is when we do a deployment you can use one of those",
    "start": "2366359",
    "end": "2371880"
  },
  {
    "text": "Cipher text as a input as a parameter for your you know those dependencies you",
    "start": "2371880",
    "end": "2379560"
  },
  {
    "text": "can use that as an input value so now you get this Cipher text on your",
    "start": "2379560",
    "end": "2385359"
  },
  {
    "text": "instance and what do you do with it well you go out to KMS and because your instance role has access to decrypt that",
    "start": "2385359",
    "end": "2393240"
  },
  {
    "text": "particular Cipher text the instance can decrypt it but nobody else gets access to that text but we can pass it around",
    "start": "2393240",
    "end": "2399319"
  },
  {
    "text": "fairly comfortably without having to worry about somebody in the process or something in the process seeing",
    "start": "2399319",
    "end": "2405200"
  },
  {
    "text": "something they shouldn't so now that we've built and",
    "start": "2405200",
    "end": "2411920"
  },
  {
    "start": "2407000",
    "end": "2792000"
  },
  {
    "text": "published and deployed our applications using this process using pharoh what is",
    "start": "2411920",
    "end": "2419119"
  },
  {
    "text": "the future well the first thing we need to do is really go back and clean up a lot of the Legacy automation that we",
    "start": "2419119",
    "end": "2427040"
  },
  {
    "text": "have out out there a lot of that salt stack Master stuff there's still quite a bit out there that we need to look at um",
    "start": "2427040",
    "end": "2433240"
  },
  {
    "text": "though it's really rapidly shrinking or converting fairly quickly to phoh we need to eliminate manual steps",
    "start": "2433240",
    "end": "2440640"
  },
  {
    "text": "in the process we still can't we can provide the framework but",
    "start": "2440640",
    "end": "2447160"
  },
  {
    "text": "we can't stop somebody from saying hey this file's out in S3 and it's a parameter and somebody has to go",
    "start": "2447160",
    "end": "2452680"
  },
  {
    "text": "manually put that file out into S3 the way we deal with that is Windsor the the",
    "start": "2452680",
    "end": "2457839"
  },
  {
    "text": "testing framework and what usually happens is the Windsor team gets together with the app team and they say",
    "start": "2457839",
    "end": "2462880"
  },
  {
    "text": "okay we want to do an automatic deployment of your app so what do you have to have to make that happen and",
    "start": "2462880",
    "end": "2468079"
  },
  {
    "text": "they'll say oh well we need to go talk to the DBA to get our database provisioned and then they'll hand us off the stuff we need and we'll go to play",
    "start": "2468079",
    "end": "2474160"
  },
  {
    "text": "our app okay so the Windsor team says you go to the dbas and figure out how to",
    "start": "2474160",
    "end": "2479520"
  },
  {
    "text": "do that automatically we already have a way to do it to prision provision databases automatically come back and talk to us",
    "start": "2479520",
    "end": "2486680"
  },
  {
    "text": "so it it at some point we never actually touch any of the the technology if you will we just send the dev team back to",
    "start": "2486680",
    "end": "2493240"
  },
  {
    "text": "get all that stuff figured out and it becomes almost like a checklist once we have all those manual steps eliminated",
    "start": "2493240",
    "end": "2499560"
  },
  {
    "text": "we can do those test deployments set up test tear down do them in the middle of the night and really don't cost that",
    "start": "2499560",
    "end": "2507359"
  },
  {
    "text": "much about $34 doll for a complete deployment and when that's",
    "start": "2507359",
    "end": "2513760"
  },
  {
    "text": "complete then we know that we don't have any manual steps in the process we also want to get to the place",
    "start": "2513760",
    "end": "2520359"
  },
  {
    "text": "where when the business says okay we just signed a customer that wants our",
    "start": "2520359",
    "end": "2525800"
  },
  {
    "text": "presence in say Brazil or wherever we aren't currently hosting our software we",
    "start": "2525800",
    "end": "2530839"
  },
  {
    "text": "want to get to the place where we can say okay give us a day we'll have 30",
    "start": "2530839",
    "end": "2536440"
  },
  {
    "text": "Enterprise apps up and running for you and you can provision customers about a day is what we're looking at so there's",
    "start": "2536440",
    "end": "2543839"
  },
  {
    "text": "there's a lot of stuff that has to happen to make that possible but once we have that then we'll have",
    "start": "2543839",
    "end": "2549800"
  },
  {
    "text": "the ability to deploy large uh um environments very quickly",
    "start": "2549800",
    "end": "2555960"
  },
  {
    "text": "but we have to start working back to get each piece of that's each piece of this deployed automatically so we'll start",
    "start": "2555960",
    "end": "2562839"
  },
  {
    "text": "working back up the stack uh and not just at the app layer and we need to reduce deployment",
    "start": "2562839",
    "end": "2569200"
  },
  {
    "text": "time frames right now we're looking at some that run in about 5 6 hours and if",
    "start": "2569200",
    "end": "2574760"
  },
  {
    "text": "you're trying to go for 50 apps within a day you're going to have to do a little",
    "start": "2574760",
    "end": "2580520"
  },
  {
    "text": "bit of work to get that time frame down so we'll be working on that and we have some neat profiling that can actually",
    "start": "2580520",
    "end": "2585559"
  },
  {
    "text": "say okay these are all the things you deployed this is how long it took in a graph and you can start looking at the",
    "start": "2585559",
    "end": "2590680"
  },
  {
    "text": "hot spots and clean them up all right so we talked about pharaoh",
    "start": "2590680",
    "end": "2597559"
  },
  {
    "text": "and um I trust it's apparent now why we needed it because of all the",
    "start": "2597559",
    "end": "2602760"
  },
  {
    "text": "different applications we have the different teams that have different special specialities like VPC and",
    "start": "2602760",
    "end": "2609760"
  },
  {
    "text": "deploying the vpcs the networking team does that the different app teams that have the specialities in the individual",
    "start": "2609760",
    "end": "2616079"
  },
  {
    "text": "apps so we need something to tie all that together and get those parameters from one deployment to another and we",
    "start": "2616079",
    "end": "2623440"
  },
  {
    "text": "needed a way to package it up and pass it on so it's not POS so we can do repeatable",
    "start": "2623440",
    "end": "2629359"
  },
  {
    "text": "automation so I'm going to let U wrap up and then I think we'll have time for questions yep",
    "start": "2629359",
    "end": "2637920"
  },
  {
    "text": "so I'm not sure if that was uh detailed enough or not um we can bring some more developers on on the stage and do some",
    "start": "2638440",
    "end": "2644640"
  },
  {
    "text": "code reviews with you if you want us to go more detailed um but uh we we basically covered from uh infor being a",
    "start": "2644640",
    "end": "2652319"
  },
  {
    "text": "large Enterprise companies lot of different Enterprise applications running in the cloud lot of different Technologies um a lot of products in",
    "start": "2652319",
    "end": "2659800"
  },
  {
    "text": "different stages of uh its Cloud journey and we needed to solve certain problems",
    "start": "2659800",
    "end": "2665160"
  },
  {
    "text": "uh for automation complete end to end Automation in our data center and one of the problems that we needed to solve was",
    "start": "2665160",
    "end": "2672079"
  },
  {
    "text": "to um to uh to have these parameter dependencies the dependencies between",
    "start": "2672079",
    "end": "2677680"
  },
  {
    "text": "different applications different layers of deployment whether it's infrastructure application or or a",
    "start": "2677680",
    "end": "2683280"
  },
  {
    "text": "combination of those how do we make sure that we're not manually inputting these hundreds of parameters repeatedly for",
    "start": "2683280",
    "end": "2690119"
  },
  {
    "text": "every deployment and causing non-repeatable deployments and so Farah was our solution to that uh we built it",
    "start": "2690119",
    "end": "2696760"
  },
  {
    "text": "uh it's not it's it's it's something we continuously evaluate whether this has been superseded by something that's been",
    "start": "2696760",
    "end": "2702839"
  },
  {
    "text": "released by Amazon and I think we by AWS and we still feel that the problems that",
    "start": "2702839",
    "end": "2708200"
  },
  {
    "text": "we needed to solve are not yet solved by the technologies that have been provided by AWS so um the uh we needed to",
    "start": "2708200",
    "end": "2716359"
  },
  {
    "text": "encapsulate all this comp complexity into something that can be repeatedly deployed without worrying about has",
    "start": "2716359",
    "end": "2722280"
  },
  {
    "text": "somebody completed certain manual steps for this deployment to complete um and as as David mentioned briefly we are",
    "start": "2722280",
    "end": "2728680"
  },
  {
    "text": "working on uh a wior project and several of these products are already part of the Windor project which is we we the",
    "start": "2728680",
    "end": "2736160"
  },
  {
    "text": "goal the vision is that we should be able to start with a blank account every night deploy the VPC deploy every",
    "start": "2736160",
    "end": "2742520"
  },
  {
    "text": "infrastructure deploy every application into the into the account and then tear it down and make sure that that that",
    "start": "2742520",
    "end": "2748880"
  },
  {
    "text": "will give us the assurance that the automation is working and as part of the witer we also have automated testing for",
    "start": "2748880",
    "end": "2754319"
  },
  {
    "text": "the applications to make sure the applications that get deployed actually work so the applications today about um",
    "start": "2754319",
    "end": "2760559"
  },
  {
    "text": "out of 50 about six or seven applications already part of the Wier and we deploy them every night I think",
    "start": "2760559",
    "end": "2765960"
  },
  {
    "text": "the cost for uh the end to end deployment for wisor for these applications turns out to be about $2",
    "start": "2765960",
    "end": "2772000"
  },
  {
    "text": "or3 every night so it's very economical uh to do these deployments and tear down",
    "start": "2772000",
    "end": "2778240"
  },
  {
    "text": "um and gives us the assurance that what we built is actually capable of being repeatable that's all we had to present",
    "start": "2778240",
    "end": "2783839"
  },
  {
    "text": "today so if we if there are any questions um we'll we'll open it up for",
    "start": "2783839",
    "end": "2790160"
  },
  {
    "text": "questions thank you",
    "start": "2790160",
    "end": "2794318"
  }
]