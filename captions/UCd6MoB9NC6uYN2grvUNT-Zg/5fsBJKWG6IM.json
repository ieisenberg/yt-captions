[
  {
    "text": "in this video you'll see how you can set",
    "start": "80",
    "end": "1760"
  },
  {
    "text": "up aws iot sitewise data source plugins",
    "start": "1760",
    "end": "4640"
  },
  {
    "text": "for amazon managed grafana",
    "start": "4640",
    "end": "6879"
  },
  {
    "text": "with this integration you can collect",
    "start": "6879",
    "end": "8720"
  },
  {
    "text": "query and analyze data from your",
    "start": "8720",
    "end": "10240"
  },
  {
    "text": "industrial equipment and then visualize",
    "start": "10240",
    "end": "12240"
  },
  {
    "text": "your asset performance metrics using",
    "start": "12240",
    "end": "13920"
  },
  {
    "text": "interactive grafana dashboards",
    "start": "13920",
    "end": "16560"
  },
  {
    "text": "to get started let's go to the aws iot",
    "start": "16560",
    "end": "19119"
  },
  {
    "text": "sitewise console to prepare some data",
    "start": "19119",
    "end": "21199"
  },
  {
    "text": "that we can explore",
    "start": "21199",
    "end": "22880"
  },
  {
    "text": "aws iot sitewise provides a quick start",
    "start": "22880",
    "end": "25599"
  },
  {
    "text": "demo we can deploy to create temporary",
    "start": "25599",
    "end": "27519"
  },
  {
    "text": "assets and generate sample data",
    "start": "27519",
    "end": "31599"
  },
  {
    "text": "the demo created two models",
    "start": "31599",
    "end": "33680"
  },
  {
    "text": "let's look at the wind farm asset model",
    "start": "33680",
    "end": "36160"
  },
  {
    "text": "each model includes defined attributes",
    "start": "36160",
    "end": "38079"
  },
  {
    "text": "measurements transformations and metrics",
    "start": "38079",
    "end": "40239"
  },
  {
    "text": "that will allow us to compute common",
    "start": "40239",
    "end": "41680"
  },
  {
    "text": "industrial performance values and",
    "start": "41680",
    "end": "43200"
  },
  {
    "text": "metrics the wind farm can contain one or",
    "start": "43200",
    "end": "45760"
  },
  {
    "text": "more wind turbines which is defined in",
    "start": "45760",
    "end": "47840"
  },
  {
    "text": "the hierarchy of the model",
    "start": "47840",
    "end": "50640"
  },
  {
    "text": "let's take a quick look at the turbine",
    "start": "50640",
    "end": "52160"
  },
  {
    "text": "asset model",
    "start": "52160",
    "end": "53440"
  },
  {
    "text": "here you can see the turbine's attribute",
    "start": "53440",
    "end": "55120"
  },
  {
    "text": "definitions such as alarm threshold",
    "start": "55120",
    "end": "57199"
  },
  {
    "text": "location make and model",
    "start": "57199",
    "end": "60559"
  },
  {
    "text": "let's view the demo assets",
    "start": "61039",
    "end": "64399"
  },
  {
    "text": "the demo windfarm asset model includes",
    "start": "67200",
    "end": "69200"
  },
  {
    "text": "four turbines let's look at one of them",
    "start": "69200",
    "end": "71600"
  },
  {
    "text": "we can see the turbine's attributes",
    "start": "71600",
    "end": "75200"
  },
  {
    "text": "on the measurements tab we can see wind",
    "start": "76159",
    "end": "78000"
  },
  {
    "text": "speed measurement values",
    "start": "78000",
    "end": "81119"
  },
  {
    "text": "on the metrics tab we have computed",
    "start": "81439",
    "end": "83280"
  },
  {
    "text": "averages for both wind speed and",
    "start": "83280",
    "end": "84720"
  },
  {
    "text": "generator power",
    "start": "84720",
    "end": "87840"
  },
  {
    "text": "now that we've seen the kinds of data",
    "start": "88159",
    "end": "89520"
  },
  {
    "text": "being generated by the assets let's go",
    "start": "89520",
    "end": "91600"
  },
  {
    "text": "to amazon managed grafana to add aws iot",
    "start": "91600",
    "end": "94560"
  },
  {
    "text": "sitewise as a data source",
    "start": "94560",
    "end": "96560"
  },
  {
    "text": "we'll begin by creating a new workspace",
    "start": "96560",
    "end": "98720"
  },
  {
    "text": "which is a logically isolated grafana",
    "start": "98720",
    "end": "100720"
  },
  {
    "text": "server",
    "start": "100720",
    "end": "103040"
  },
  {
    "text": "for the authentication method we can",
    "start": "104079",
    "end": "105759"
  },
  {
    "text": "choose aws single sign-on or aws sso or",
    "start": "105759",
    "end": "109520"
  },
  {
    "text": "security assertion markup language or",
    "start": "109520",
    "end": "111759"
  },
  {
    "text": "saml",
    "start": "111759",
    "end": "112720"
  },
  {
    "text": "in this case we've already enabled aws",
    "start": "112720",
    "end": "114880"
  },
  {
    "text": "sso which amazon managed grafana uses to",
    "start": "114880",
    "end": "117680"
  },
  {
    "text": "authenticate and manage user access",
    "start": "117680",
    "end": "120159"
  },
  {
    "text": "let's retain the service managed",
    "start": "120159",
    "end": "121520"
  },
  {
    "text": "permissions type which ensures that the",
    "start": "121520",
    "end": "123200"
  },
  {
    "text": "proper iam roles and policies are",
    "start": "123200",
    "end": "124880"
  },
  {
    "text": "enabled",
    "start": "124880",
    "end": "126960"
  },
  {
    "text": "we'll select aws iot sitewise as the",
    "start": "126960",
    "end": "129440"
  },
  {
    "text": "data source and leave all the other",
    "start": "129440",
    "end": "130959"
  },
  {
    "text": "default options",
    "start": "130959",
    "end": "133760"
  },
  {
    "text": "now that the workspace is active we need",
    "start": "137680",
    "end": "139599"
  },
  {
    "text": "to assign users to it let's assign a",
    "start": "139599",
    "end": "141680"
  },
  {
    "text": "user group",
    "start": "141680",
    "end": "144239"
  },
  {
    "text": "we'll grant admin permissions to the",
    "start": "150480",
    "end": "152000"
  },
  {
    "text": "user group so its members can access the",
    "start": "152000",
    "end": "153760"
  },
  {
    "text": "data source",
    "start": "153760",
    "end": "156480"
  },
  {
    "text": "on the data sources tab we can see that",
    "start": "156480",
    "end": "158560"
  },
  {
    "text": "aws iot sitewise is the only attached",
    "start": "158560",
    "end": "161360"
  },
  {
    "text": "source",
    "start": "161360",
    "end": "162640"
  },
  {
    "text": "now let's configure the aws iot sitewise",
    "start": "162640",
    "end": "165120"
  },
  {
    "text": "data source in grafana let's sign in to",
    "start": "165120",
    "end": "167440"
  },
  {
    "text": "the grafana workspace we just created",
    "start": "167440",
    "end": "170160"
  },
  {
    "text": "we'll use the admin user group's aws sso",
    "start": "170160",
    "end": "172720"
  },
  {
    "text": "credentials",
    "start": "172720",
    "end": "175360"
  },
  {
    "text": "amazon managed grafana auto-discovers",
    "start": "176560",
    "end": "178560"
  },
  {
    "text": "the accounts and resources we have",
    "start": "178560",
    "end": "179920"
  },
  {
    "text": "available for aws data sources",
    "start": "179920",
    "end": "182400"
  },
  {
    "text": "we'll select aws iot sitewise as the",
    "start": "182400",
    "end": "184879"
  },
  {
    "text": "service and specify our region",
    "start": "184879",
    "end": "188560"
  },
  {
    "text": "now that aws iot sitewise is a",
    "start": "192400",
    "end": "194640"
  },
  {
    "text": "provisioned data source let's go to the",
    "start": "194640",
    "end": "196640"
  },
  {
    "text": "settings and make sure the plugin is",
    "start": "196640",
    "end": "198080"
  },
  {
    "text": "working",
    "start": "198080",
    "end": "199280"
  },
  {
    "text": "as you can see our data source is",
    "start": "199280",
    "end": "200720"
  },
  {
    "text": "working let's configure some dashboard",
    "start": "200720",
    "end": "202879"
  },
  {
    "text": "panels so we can explore and visualize",
    "start": "202879",
    "end": "204799"
  },
  {
    "text": "our data",
    "start": "204799",
    "end": "207280"
  },
  {
    "text": "we'll select aws iot sitewise as the",
    "start": "207599",
    "end": "210000"
  },
  {
    "text": "data source",
    "start": "210000",
    "end": "213239"
  },
  {
    "text": "let's run a sample query for property",
    "start": "213680",
    "end": "215440"
  },
  {
    "text": "value aggregates using the same demo",
    "start": "215440",
    "end": "217280"
  },
  {
    "text": "termite asset we viewed earlier",
    "start": "217280",
    "end": "220799"
  },
  {
    "text": "let's choose a property to query and",
    "start": "222959",
    "end": "224560"
  },
  {
    "text": "specify a time range",
    "start": "224560",
    "end": "227840"
  },
  {
    "text": "the dashboard now graphs the average",
    "start": "232799",
    "end": "234480"
  },
  {
    "text": "turbine power for the last hour",
    "start": "234480",
    "end": "236720"
  },
  {
    "text": "let's give the panel a title and save",
    "start": "236720",
    "end": "238400"
  },
  {
    "text": "the dashboard",
    "start": "238400",
    "end": "241480"
  },
  {
    "text": "we'll rename the dashboard as well",
    "start": "242480",
    "end": "246000"
  },
  {
    "text": "we can create alerts for panel data to",
    "start": "248159",
    "end": "250000"
  },
  {
    "text": "show state changes moments after they",
    "start": "250000",
    "end": "251599"
  },
  {
    "text": "occur so we can quickly identify any",
    "start": "251599",
    "end": "253680"
  },
  {
    "text": "performance issues with our industrial",
    "start": "253680",
    "end": "255280"
  },
  {
    "text": "equipment",
    "start": "255280",
    "end": "257760"
  },
  {
    "text": "let's set an alert to evaluate the",
    "start": "259280",
    "end": "260880"
  },
  {
    "text": "average power every minute for every 10",
    "start": "260880",
    "end": "262720"
  },
  {
    "text": "minutes",
    "start": "262720",
    "end": "265040"
  },
  {
    "text": "we'll have the alert trigger when",
    "start": "266080",
    "end": "267280"
  },
  {
    "text": "average turbine conditions fall below",
    "start": "267280",
    "end": "269040"
  },
  {
    "text": "6250 watts per minute for longer than",
    "start": "269040",
    "end": "271360"
  },
  {
    "text": "five minutes",
    "start": "271360",
    "end": "272720"
  },
  {
    "text": "you can now see the alert threshold on",
    "start": "272720",
    "end": "274320"
  },
  {
    "text": "the graph we can also configure settings",
    "start": "274320",
    "end": "276560"
  },
  {
    "text": "for occurrences when the alert collects",
    "start": "276560",
    "end": "278160"
  },
  {
    "text": "no data or times out",
    "start": "278160",
    "end": "281040"
  },
  {
    "text": "when we save the dashboard we can add",
    "start": "281040",
    "end": "282800"
  },
  {
    "text": "notes to describe our changes",
    "start": "282800",
    "end": "286159"
  },
  {
    "text": "let's create another panel that",
    "start": "288000",
    "end": "289360"
  },
  {
    "text": "visualizes wind speed",
    "start": "289360",
    "end": "292560"
  },
  {
    "text": "for this metric we'll create a gauge",
    "start": "292880",
    "end": "294479"
  },
  {
    "text": "visualization",
    "start": "294479",
    "end": "296960"
  },
  {
    "text": "we'll specify aws iot sitewise as the",
    "start": "296960",
    "end": "299680"
  },
  {
    "text": "data source and query the actual",
    "start": "299680",
    "end": "301520"
  },
  {
    "text": "property value from the demo turbine",
    "start": "301520",
    "end": "305198"
  },
  {
    "text": "asset the property we'll query is wind",
    "start": "308840",
    "end": "311440"
  },
  {
    "text": "speed in meters per second",
    "start": "311440",
    "end": "314639"
  },
  {
    "text": "let's name this panel",
    "start": "316560",
    "end": "320199"
  },
  {
    "text": "in the display options we can choose to",
    "start": "324560",
    "end": "326320"
  },
  {
    "text": "show threshold labels around the gauge",
    "start": "326320",
    "end": "328080"
  },
  {
    "text": "band",
    "start": "328080",
    "end": "329840"
  },
  {
    "text": "on the field tab we have additional",
    "start": "329840",
    "end": "331440"
  },
  {
    "text": "options for example we can set minimum",
    "start": "331440",
    "end": "333759"
  },
  {
    "text": "and maximum values for our gauge",
    "start": "333759",
    "end": "336960"
  },
  {
    "text": "we can also add thresholds that show",
    "start": "336960",
    "end": "338639"
  },
  {
    "text": "color-coded bands outside the gauge that",
    "start": "338639",
    "end": "340639"
  },
  {
    "text": "correspond with the conditions we define",
    "start": "340639",
    "end": "344400"
  },
  {
    "text": "let's specify the unit of measurement",
    "start": "344639",
    "end": "346240"
  },
  {
    "text": "for these fields and then apply our",
    "start": "346240",
    "end": "347680"
  },
  {
    "text": "changes",
    "start": "347680",
    "end": "350080"
  },
  {
    "text": "let's add one more panel for our",
    "start": "351120",
    "end": "352479"
  },
  {
    "text": "dashboard alerts",
    "start": "352479",
    "end": "355360"
  },
  {
    "text": "we'll use the alert list visualization",
    "start": "361280",
    "end": "365400"
  },
  {
    "text": "we'll choose to display only alerts from",
    "start": "366160",
    "end": "367840"
  },
  {
    "text": "this dashboard",
    "start": "367840",
    "end": "370560"
  },
  {
    "text": "we can also choose which alert states to",
    "start": "370560",
    "end": "372400"
  },
  {
    "text": "include",
    "start": "372400",
    "end": "374720"
  },
  {
    "text": "now let's apply these changes and update",
    "start": "377520",
    "end": "379440"
  },
  {
    "text": "the dashboard",
    "start": "379440",
    "end": "381840"
  },
  {
    "text": "you've just seen how you can set up aws",
    "start": "385120",
    "end": "387039"
  },
  {
    "text": "iot sitewise data source plugins for",
    "start": "387039",
    "end": "389280"
  },
  {
    "text": "amazon managed grafana",
    "start": "389280",
    "end": "391520"
  },
  {
    "text": "you can learn more about this topic in",
    "start": "391520",
    "end": "392960"
  },
  {
    "text": "the description and links for this video",
    "start": "392960",
    "end": "395039"
  },
  {
    "text": "thanks for watching now it's your turn",
    "start": "395039",
    "end": "396479"
  },
  {
    "text": "to try",
    "start": "396479",
    "end": "399639"
  }
]