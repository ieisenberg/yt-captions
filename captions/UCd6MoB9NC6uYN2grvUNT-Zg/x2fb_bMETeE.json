[
  {
    "start": "0",
    "end": "32000"
  },
  {
    "text": "all right welcome everyone appreciate everyone coming out today",
    "start": "50",
    "end": "5190"
  },
  {
    "text": "essentially the first day at reinvent my name is Eric Dame I am a Solutions Architect for Amazon",
    "start": "5190",
    "end": "11040"
  },
  {
    "text": "Web Services said I have ROM with me from beeswax he'll introduce himself in a little bit and we'll get a little bit",
    "start": "11040",
    "end": "17279"
  },
  {
    "text": "of story around beeswax and how they're using a TBS platform so one of the cool things about working at AWS is I get to",
    "start": "17279",
    "end": "23850"
  },
  {
    "text": "listen to customer stories folks like ROM and beeswax as well as it understands what the cool interesting",
    "start": "23850",
    "end": "29490"
  },
  {
    "text": "things are doing so in this talk we're gonna sort of talk about real time",
    "start": "29490",
    "end": "35340"
  },
  {
    "start": "32000",
    "end": "89000"
  },
  {
    "text": "bidding or RTB on AWS and since it's a 300 that most folks know well real time",
    "start": "35340",
    "end": "42450"
  },
  {
    "text": "bidding is and have a decent understanding of the ADA based platform we're gonna cover a pretty wide variety",
    "start": "42450",
    "end": "48690"
  },
  {
    "text": "of different areas throughout the talk here but main that we're gonna focus on",
    "start": "48690",
    "end": "53809"
  },
  {
    "text": "things like performance some of the considerations there scale you know what's our global footprint look like as",
    "start": "53809",
    "end": "60660"
  },
  {
    "text": "well as cost optimizations how can you really keep an eye on your costs and make sure they're not scaling out of",
    "start": "60660",
    "end": "66720"
  },
  {
    "text": "control as well as data you know retaining your data doing some analytics on your data or do you store that data",
    "start": "66720",
    "end": "72780"
  },
  {
    "text": "for long periods of time so as a quick heads up we're gonna be passing the baton back and forth here we're gonna",
    "start": "72780",
    "end": "80070"
  },
  {
    "text": "try not to drop it but we're doing best and so Raman are gonna be talking sort of more dynamically just to give",
    "start": "80070",
    "end": "86700"
  },
  {
    "text": "everyone's ahead a heads up there so this is essentially what RTB sort of",
    "start": "86700",
    "end": "93090"
  },
  {
    "start": "89000",
    "end": "152000"
  },
  {
    "text": "dataflow might look like from a holistic perspective we're really going to focus on that area there and the the red",
    "start": "93090",
    "end": "99329"
  },
  {
    "text": "circle and essentially just as a quick recap RTB a real-time bidding is really",
    "start": "99329",
    "end": "104700"
  },
  {
    "text": "the process of the user goes to websites like click on the page and then behind",
    "start": "104700",
    "end": "109740"
  },
  {
    "text": "the scenes there is a series of transactions and essentially bids from different providers happen and",
    "start": "109740",
    "end": "114930"
  },
  {
    "text": "effectively the lowest or the excuse me the highest cost bidder our price bidder actually gets to place that ad all",
    "start": "114930",
    "end": "121979"
  },
  {
    "text": "behind-the-scenes all happens under a hundred milliseconds unbeknownst the user and so essentially what we see is",
    "start": "121979",
    "end": "129869"
  },
  {
    "text": "customers following a process of ingesting their data into AWS they need to store or make",
    "start": "129869",
    "end": "135879"
  },
  {
    "text": "decisions on the data pretty quickly so they used something like a no sequel datastore for that generally as well as",
    "start": "135879",
    "end": "142269"
  },
  {
    "text": "you know how do they run analytics or campaign management how they store that data and even run ml or machine learning",
    "start": "142269",
    "end": "148209"
  },
  {
    "text": "time models in the data later on so",
    "start": "148209",
    "end": "153359"
  },
  {
    "start": "152000",
    "end": "290000"
  },
  {
    "text": "before we dig in or dive in here just to kind of go over why why are to be on AWS",
    "start": "153359",
    "end": "159189"
  },
  {
    "text": "right so why would you build your real-time bidding service or platform on AWS and really there's essentially five",
    "start": "159189",
    "end": "165159"
  },
  {
    "text": "main reasons that we've sort of come up with after talking with a bunch of customers the first is really their pace",
    "start": "165159",
    "end": "170889"
  },
  {
    "text": "of innovation so if you think about today we have 90 plus services on AWS",
    "start": "170889",
    "end": "175980"
  },
  {
    "text": "you know the one I was talking around earlier the one the one bet I would probably make and Vegas is that by the",
    "start": "175980",
    "end": "182769"
  },
  {
    "text": "end of the week we're gonna have several several several more services so 90 plus and Counting and things like Network",
    "start": "182769",
    "end": "189310"
  },
  {
    "text": "load balancer which is relatively new we're gonna dive into a little bit more and how we are keep releasing new",
    "start": "189310",
    "end": "194709"
  },
  {
    "text": "compute instances and memory optimizes instances you can get really performant little performance capacity from your",
    "start": "194709",
    "end": "202090"
  },
  {
    "text": "database infrastructure the other thing is our spot market right so pretty unique to AWS is there's something",
    "start": "202090",
    "end": "208479"
  },
  {
    "text": "called the ec2 spot market we'll dig into that a little bit deeper later on but you can bid on or you can request",
    "start": "208479",
    "end": "214139"
  },
  {
    "text": "really the deep discounted instances using the spot market another reason is just our global",
    "start": "214139",
    "end": "220209"
  },
  {
    "text": "footprint and so if you look at regions around the world today we have 16 global",
    "start": "220209",
    "end": "225400"
  },
  {
    "text": "regions that are around the world and this allows you to deploy your image structure the same way across whether",
    "start": "225400",
    "end": "230889"
  },
  {
    "text": "you're in India or the US or wherever maybe then we have several more that we",
    "start": "230889",
    "end": "235989"
  },
  {
    "text": "pre announced coming online in the next couple years the other reason is just our broad choice right so we want to",
    "start": "235989",
    "end": "242290"
  },
  {
    "text": "give customers choice so whether you're using a variety of our managed services like Kinesis or load balancers or even",
    "start": "242290",
    "end": "249310"
  },
  {
    "text": "DynamoDB or you can run your own technology or a series of technologies on ec2 all right so you can spin up a",
    "start": "249310",
    "end": "255879"
  },
  {
    "text": "virtual machine and you can deploy your application of choice on ec2 and then last but not least is our sort of",
    "start": "255879",
    "end": "262389"
  },
  {
    "text": "growing ecosystem in AWS so you know publishers like Hearst and",
    "start": "262389",
    "end": "268360"
  },
  {
    "text": "yellow media companies like Turner and Discovery Channel all have presents in AWS this gives the opportunity for",
    "start": "268360",
    "end": "275350"
  },
  {
    "text": "customers to interact with one another and low latency as well as for cost reasons within the ATS ecosystem so with",
    "start": "275350",
    "end": "283150"
  },
  {
    "text": "that I'll let Rama introduce himself and tell a little bit about his story first",
    "start": "283150",
    "end": "288729"
  },
  {
    "text": "one thanks Erik always excited to be here at Green wind",
    "start": "288729",
    "end": "293830"
  },
  {
    "start": "290000",
    "end": "328000"
  },
  {
    "text": "amazed at the scale of this event and how much it grows your own ear so good",
    "start": "293830",
    "end": "299470"
  },
  {
    "text": "afternoon everyone I'm ROM co-founder and CTO of peas Beck's is a company that",
    "start": "299470",
    "end": "304630"
  },
  {
    "text": "I started about three years ago with two of my former colleagues from Google we're based out of New York we're a",
    "start": "304630",
    "end": "312130"
  },
  {
    "text": "global organization we have an office in London to oversee our European business we are venture funded we're a CDS say",
    "start": "312130",
    "end": "318789"
  },
  {
    "text": "last year and we have a growing number of customers are really happy with our product and our business the team and",
    "start": "318789",
    "end": "325330"
  },
  {
    "text": "the system continues to grow pretty rapidly so what we do at beeswax is that",
    "start": "325330",
    "end": "331750"
  },
  {
    "start": "328000",
    "end": "396000"
  },
  {
    "text": "we design build and operate the beeswax programmatic cloud the programmatic",
    "start": "331750",
    "end": "337000"
  },
  {
    "text": "cloud is a fully managed RTP platform built on top of AWS it provides our",
    "start": "337000",
    "end": "343870"
  },
  {
    "text": "customers who are marketers or ad networks with a flexible bidding platform that gives them complete",
    "start": "343870",
    "end": "350740"
  },
  {
    "text": "control and full transparency so in this talk I'm going to address some of the",
    "start": "350740",
    "end": "356500"
  },
  {
    "text": "features of the programmatic cloud and in particular I'm going to talk about three features of it first the",
    "start": "356500",
    "end": "363190"
  },
  {
    "text": "programmatic cloud is a fully functional DSP out of the box on day one and it's on this aspect the stocks really going",
    "start": "363190",
    "end": "370090"
  },
  {
    "text": "to be focused on second the programmatic cloud provides our customers with extensible api's that they could build",
    "start": "370090",
    "end": "376930"
  },
  {
    "text": "on top of and finally the a v8 beeswax have partnered with several innovative",
    "start": "376930",
    "end": "382690"
  },
  {
    "text": "companies that offer products on top of the programmatic cloud and so this really lets our customers leverage these",
    "start": "382690",
    "end": "389289"
  },
  {
    "text": "deep integrations and really design a custom billing solution so the following",
    "start": "389289",
    "end": "397090"
  },
  {
    "start": "396000",
    "end": "475000"
  },
  {
    "text": "is the system architecture of the programmatic cloud broadly the",
    "start": "397090",
    "end": "402530"
  },
  {
    "text": "system can be broken down into four main areas the campaign management is a",
    "start": "402530",
    "end": "407690"
  },
  {
    "text": "RESTful API that lets our customers control their campaign their budgets",
    "start": "407690",
    "end": "412970"
  },
  {
    "text": "targeting creatives etc the serving component refers to the high performance",
    "start": "412970",
    "end": "419140"
  },
  {
    "text": "high scale distributed system that is responsible for receiving and processing",
    "start": "419140",
    "end": "424670"
  },
  {
    "text": "millions of requests per second the user data component is another large-scale",
    "start": "424670",
    "end": "431030"
  },
  {
    "text": "distributed system that is responsible for collecting and storing user profile",
    "start": "431030",
    "end": "436040"
  },
  {
    "text": "information and finally the reporting and the analytics component forms the",
    "start": "436040",
    "end": "442100"
  },
  {
    "text": "the big data component of the stack this comprises of systems that process",
    "start": "442100",
    "end": "447670"
  },
  {
    "text": "millions of streaming events per second and then convert them into actionable insights for our customers as is pretty",
    "start": "447670",
    "end": "455720"
  },
  {
    "text": "evident from this diagram we lean pretty heavily on Amazon managed services in",
    "start": "455720",
    "end": "461390"
  },
  {
    "text": "fact our operating principle is that we would delegate to an AWS managed service wherever possible so that they can do",
    "start": "461390",
    "end": "469490"
  },
  {
    "text": "the heavy lifting and we can focus on building the product for our customers with that back to Eric to talk about",
    "start": "469490",
    "end": "476960"
  },
  {
    "start": "475000",
    "end": "502000"
  },
  {
    "text": "performance so in this section we'll",
    "start": "476960",
    "end": "484340"
  },
  {
    "text": "talk about performance sort of I mentioned the beginning ingesting that data right making determinations on that",
    "start": "484340",
    "end": "491390"
  },
  {
    "text": "data as quickly as possible so we'll think about or talking about load balancing network optimizations and and",
    "start": "491390",
    "end": "497090"
  },
  {
    "text": "low latency data data stores like no sequel database there's data stores so",
    "start": "497090",
    "end": "503240"
  },
  {
    "text": "when you get traffic coming in at millions of requests per second it can kind of look like this right you have a bunch of different requests coming in",
    "start": "503240",
    "end": "510050"
  },
  {
    "text": "and so you know how do you ingest that traffic as quickly as possible how do you make sure that you're getting that",
    "start": "510050",
    "end": "516080"
  },
  {
    "text": "that traffic into your system so you can make decisions on that data so the good thing is we have a variety of different",
    "start": "516080",
    "end": "524320"
  },
  {
    "text": "managed services like elastic load balancers for folks to use to ingest",
    "start": "524320",
    "end": "529640"
  },
  {
    "text": "that traffic so whether you're using some like the classic ELB if you want to manage HTTP or HTTPS or even TCP traffic",
    "start": "529640",
    "end": "537720"
  },
  {
    "text": "with the classic load bound so you can do so or you can choose the application load balancer so if you have WebSockets",
    "start": "537720",
    "end": "544350"
  },
  {
    "text": "you need to support or you have dynamic port assignments you need to do for containers and your back-end you can do",
    "start": "544350",
    "end": "550589"
  },
  {
    "text": "so using application load balancer or even SSL termination with the application load balancer as well but",
    "start": "550589",
    "end": "556950"
  },
  {
    "text": "the newest sort of offering to the family and we're really excited about is the network load balancer so this is",
    "start": "556950",
    "end": "563010"
  },
  {
    "text": "perfect for really low latency high throughput millions upon millions of",
    "start": "563010",
    "end": "568980"
  },
  {
    "text": "requests per second and this allows customers to spin up a and it will be",
    "start": "568980",
    "end": "574890"
  },
  {
    "text": "and not have to think about scaling or even sort of optimizing for the the load",
    "start": "574890",
    "end": "580649"
  },
  {
    "text": "coming through their systems so to take a little bit deeper in OB it really",
    "start": "580649",
    "end": "585750"
  },
  {
    "text": "operates the later for Allah level sort of the connectional level and what this allows you to do is to pass through",
    "start": "585750",
    "end": "592320"
  },
  {
    "text": "traffic very effectively and quickly as well as you can do in the end",
    "start": "592320",
    "end": "597329"
  },
  {
    "text": "SSL terminate or in the end SSL termination so actually pushing your SSL",
    "start": "597329",
    "end": "602670"
  },
  {
    "text": "traffic through the load balancer in terminating it at your ec2 instance a lot of folks or customers are requesting",
    "start": "602670",
    "end": "608160"
  },
  {
    "text": "to have that sort of end-to-end SSL or TLS connection you can do so using the",
    "start": "608160",
    "end": "613769"
  },
  {
    "text": "then I'll be actually back to you",
    "start": "613769",
    "end": "621770"
  },
  {
    "text": "like so let's first talk about the need for load balancing and an RTP",
    "start": "621770",
    "end": "628130"
  },
  {
    "text": "application so any typical RTP deployment needs to scale up to a",
    "start": "628130",
    "end": "633500"
  },
  {
    "text": "million queries per second or so to be able to find the audiences that you need to target so therefore you definitely",
    "start": "633500",
    "end": "643280"
  },
  {
    "text": "need a pool of machines that are gonna handle your incoming requests volume and",
    "start": "643280",
    "end": "648700"
  },
  {
    "text": "having a really good load balancer is a pretty indispensable component of your",
    "start": "648700",
    "end": "654350"
  },
  {
    "text": "overall stack because that's going to ensure that the load is uniformly distributed to your pool of machines in",
    "start": "654350",
    "end": "660950"
  },
  {
    "text": "the case of RTB the bid requests themselves are transmitted as an HTTP",
    "start": "660950",
    "end": "667250"
  },
  {
    "text": "request and the bid request is actually the payload of a of an HTTP POST request so what this means is that load",
    "start": "667250",
    "end": "674660"
  },
  {
    "text": "balancing solutions both at l4 which is the network layer or the l7 the application layer are both feasible to",
    "start": "674660",
    "end": "681650"
  },
  {
    "text": "be used in an RVT application so all the amazon managed load balancing services",
    "start": "681650",
    "end": "688190"
  },
  {
    "text": "such as the classic ELB ELB and all the all three of them could be used in an RTP application we at beeswax though",
    "start": "688190",
    "end": "695720"
  },
  {
    "text": "have chosen to use the network load balancer and I'll go into the reasons for doing so the first reason is that",
    "start": "695720",
    "end": "702680"
  },
  {
    "text": "it's really fast it's extremely fast it's low latency which means that all the savings that you get at the load",
    "start": "702680",
    "end": "708860"
  },
  {
    "text": "balancing layer can be transferred to your application the packets on the way",
    "start": "708860",
    "end": "714380"
  },
  {
    "text": "in are routed by the the load balancer to the right instance because the",
    "start": "714380",
    "end": "719750"
  },
  {
    "text": "connections are actually terminated at the instances and on the way out the packets leave the ec2 instance and make",
    "start": "719750",
    "end": "726800"
  },
  {
    "text": "their way out through the load balancer and this requires absolutely no changes to their RT configs in the V PC",
    "start": "726800",
    "end": "732500"
  },
  {
    "text": "whatsoever so if you're curious as to how this thing works under the hood I would encourage you to check out the and",
    "start": "732500",
    "end": "738020"
  },
  {
    "text": "I'll be talk later in this week the next aspect of NLB that's pretty useful for",
    "start": "738020",
    "end": "744920"
  },
  {
    "text": "RT B is that it's pretty resilient to spikes in traffic it's pretty common in",
    "start": "744920",
    "end": "750350"
  },
  {
    "text": "RT b for traffic surges to happen exchanges go down and then they come",
    "start": "750350",
    "end": "755390"
  },
  {
    "text": "back right up sometimes you could have very large campaigns that come online almost simultaneously and when this",
    "start": "755390",
    "end": "762380"
  },
  {
    "text": "happens there's a pretty big spike in the number of impressions clicks and activities coming into your system so",
    "start": "762380",
    "end": "769400"
  },
  {
    "text": "having a load balancing layer that can deal with these kind of spikes is pretty",
    "start": "769400",
    "end": "774890"
  },
  {
    "text": "valuable to have the third aspect of NLP which makes a pretty attractive is that",
    "start": "774890",
    "end": "779930"
  },
  {
    "text": "it has a fixed IP address you can assign an elastic IP to it this means that there is a stable route",
    "start": "779930",
    "end": "785390"
  },
  {
    "text": "from the exchanges to your bidder that's independent of the DNS and this is a",
    "start": "785390",
    "end": "790820"
  },
  {
    "text": "pretty big deal because what we have noticed is that exchanges and the DNS",
    "start": "790820",
    "end": "796400"
  },
  {
    "text": "resolvers don't really respect the NST TLS and you could have a lot of traffic being lost in case there's a change to",
    "start": "796400",
    "end": "803840"
  },
  {
    "text": "your DNS and with the classic load balancer for example when the traffic used to go scale up and scale down the",
    "start": "803840",
    "end": "809330"
  },
  {
    "text": "IP to DNS mappings would change and the DNS that Amazon set up had a TTL of a",
    "start": "809330",
    "end": "815420"
  },
  {
    "text": "minute and we had all sorts of issues making sure that traffic was routed",
    "start": "815420",
    "end": "820550"
  },
  {
    "text": "properly back to our back-end and also NLB integrates well with the rest of the",
    "start": "820550",
    "end": "825920"
  },
  {
    "text": "AWS ecosystem which means that it's plugged into our scale and code apply etc so we can even leverage those",
    "start": "825920",
    "end": "832430"
  },
  {
    "text": "integrations so the millions of queries per second that hit the load balancer",
    "start": "832430",
    "end": "839450"
  },
  {
    "start": "835000",
    "end": "922000"
  },
  {
    "text": "translates into gigabytes of data that need to be transferred in and out of a single ec2 instance so it's no surprise",
    "start": "839450",
    "end": "846170"
  },
  {
    "text": "that you know our DB is a pretty demanding application on the network and",
    "start": "846170",
    "end": "851480"
  },
  {
    "text": "in our experience at beeswax we've found that running your RTB workloads on instances that support elastic network",
    "start": "851480",
    "end": "858350"
  },
  {
    "text": "adapter or ena tend to perform really well and there are a few reasons for that that I'll get into first ena",
    "start": "858350",
    "end": "865610"
  },
  {
    "text": "offloads checksums to hardware so what this means is that your CPU is now free",
    "start": "865610",
    "end": "871000"
  },
  {
    "text": "to do more interesting work in the operating system or in your application ena sets up multiple receive and",
    "start": "871000",
    "end": "878360"
  },
  {
    "text": "transmit queues so a network device which means that all your networking operations can now have true parallelism",
    "start": "878360",
    "end": "884720"
  },
  {
    "text": "because multiple cores could be involved in even and transmit there's a feature",
    "start": "884720",
    "end": "889990"
  },
  {
    "text": "called receive side steering that ENS supports in hardware what receive side steering does is that it routes the",
    "start": "889990",
    "end": "896290"
  },
  {
    "text": "incoming packets to the right CPU so that you get benefits like cache coherency etc which also increased",
    "start": "896290",
    "end": "903070"
  },
  {
    "text": "performance a fair bit and the net effect of all of this is that the interrupts load for receiving and",
    "start": "903070",
    "end": "909160"
  },
  {
    "text": "transmitting packets is distributed evenly across your different course in the machine and so that means that",
    "start": "909160",
    "end": "915550"
  },
  {
    "text": "you're seeing if you have a multi-core machines a single core is no longer performance bottleneck the following",
    "start": "915550",
    "end": "923530"
  },
  {
    "start": "922000",
    "end": "940000"
  },
  {
    "text": "command can be run to see if ena is enabled on your operating system at",
    "start": "923530",
    "end": "929050"
  },
  {
    "text": "beeswax we used Amazon Linux and Ubuntu and both these flavors of Linux support",
    "start": "929050",
    "end": "935980"
  },
  {
    "text": "the ena device drivers the goal of the slide was to share some numbers that we",
    "start": "935980",
    "end": "942910"
  },
  {
    "start": "940000",
    "end": "981000"
  },
  {
    "text": "see in deployment at a single region so we see about 2 million active",
    "start": "942910",
    "end": "948640"
  },
  {
    "text": "connections at any given time and about 2 million new connections being established every minute in terms of",
    "start": "948640",
    "end": "954550"
  },
  {
    "text": "bandwidth our system consumes about 120 gigabytes per minute so yes it's a",
    "start": "954550",
    "end": "960220"
  },
  {
    "text": "fairly fairly demanding application on the network but the combination of NLB and an ena gives us this ultra",
    "start": "960220",
    "end": "967270"
  },
  {
    "text": "performant network that we have come to rely upon which once again is an example",
    "start": "967270",
    "end": "972610"
  },
  {
    "text": "of how you can leverage Amazon to do some of the heavy lifting so that you",
    "start": "972610",
    "end": "977860"
  },
  {
    "text": "could focus on on building your application back to Eric right so one of",
    "start": "977860",
    "end": "986500"
  },
  {
    "start": "981000",
    "end": "1044000"
  },
  {
    "text": "the things we want to do just to make sure you know don't just take our word for it right so you can actually use this tool this is actually called B's",
    "start": "986500",
    "end": "993310"
  },
  {
    "text": "with machine guns it's not from beeswax but the name sort of fits this",
    "start": "993310",
    "end": "998680"
  },
  {
    "text": "presentation it's actually on github and it's available but it the Chicago",
    "start": "998680",
    "end": "1004680"
  },
  {
    "text": "Tribune actually developed this app but what it allows you to do is application or load test your applications using",
    "start": "1004680",
    "end": "1010950"
  },
  {
    "text": "this B's with machine guns so you can go that github site and and actually you can spin up a bunch of ec2 instances in",
    "start": "1010950",
    "end": "1018240"
  },
  {
    "text": "this example I'm actually spitting up 100 and I'm doing a 1 million requests over",
    "start": "1018240",
    "end": "1023480"
  },
  {
    "text": "essentially per second over 10 million requests total and so I'm actually pointing to the end I'll be in this in",
    "start": "1023480",
    "end": "1029339"
  },
  {
    "text": "this sort of example but you know don't take our word for it go test it up yourself again we're not talking about thousands or even hundreds of thousands",
    "start": "1029339",
    "end": "1036089"
  },
  {
    "text": "we're talking about millions multi you know millions of requests per second without any sort of ramp up it's just",
    "start": "1036089",
    "end": "1041850"
  },
  {
    "text": "instant to the user so the other thing we touched on in the beginning here",
    "start": "1041850",
    "end": "1047579"
  },
  {
    "start": "1044000",
    "end": "1082000"
  },
  {
    "text": "around speed or processing is a low latency no sequel datastore so if you're",
    "start": "1047579",
    "end": "1054179"
  },
  {
    "text": "building a bitter or you're in a tech industry you need to have some sort of generally you need to have some sort of no latent or no sequel low latency",
    "start": "1054179",
    "end": "1061620"
  },
  {
    "text": "datastore so something like DynamoDB or ElastiCache running memcache or Redis on top or even aerospike to get that to",
    "start": "1061620",
    "end": "1069720"
  },
  {
    "text": "make certain decisions on your data as quickly as possible so you might have match tables or segments sort of data or",
    "start": "1069720",
    "end": "1075870"
  },
  {
    "text": "even cookie type information that you want to make sure you match or make a decision on as quickly as possible so",
    "start": "1075870",
    "end": "1082679"
  },
  {
    "start": "1082000",
    "end": "1129000"
  },
  {
    "text": "DynamoDB has been around a long time it's a no sequel datastore fully managed I think it's been about five years now",
    "start": "1082679",
    "end": "1088799"
  },
  {
    "text": "it's been around more recent is DynamoDB Dax so Dax is a fully managed cache you can",
    "start": "1088799",
    "end": "1095730"
  },
  {
    "text": "put in front of your DynamoDB store and this allows you to get from milliseconds",
    "start": "1095730",
    "end": "1101370"
  },
  {
    "text": "to microseconds in terms of latency so for our to be year or even at tech industry this is really a game changer",
    "start": "1101370",
    "end": "1107429"
  },
  {
    "text": "in terms of getting that really low latency and what's really cool is you don't have to rewrite your code it's",
    "start": "1107429",
    "end": "1112860"
  },
  {
    "text": "just a new endpoint when you create that dynamodb Dax endpoint you just switch that and point your code to that instead",
    "start": "1112860",
    "end": "1118950"
  },
  {
    "text": "of having to rewrite your application so with that I will pass it back to the",
    "start": "1118950",
    "end": "1124950"
  },
  {
    "text": "roundest acrobats were there no sequel experience thanks Eric so Dana really",
    "start": "1124950",
    "end": "1130620"
  },
  {
    "start": "1129000",
    "end": "1311000"
  },
  {
    "text": "forms the bread and butter of RTB and it's pretty important that you have a really good no sequel data store in your",
    "start": "1130620",
    "end": "1137730"
  },
  {
    "text": "RTP stack because you're gonna use it a fair bit at beeswax we rely on air spike",
    "start": "1137730",
    "end": "1143010"
  },
  {
    "text": "for giving us this high performance low latency no sequel datastore our",
    "start": "1143010",
    "end": "1148380"
  },
  {
    "text": "application is written in C++ and it predates the announcement of DynamoDB Docs and once the animal",
    "start": "1148380",
    "end": "1155010"
  },
  {
    "text": "Dax has C++ client then it's definitely going to be an attractive alternative",
    "start": "1155010",
    "end": "1160380"
  },
  {
    "text": "for us to check out but in the meantime we are managing our own error spy",
    "start": "1160380",
    "end": "1165419"
  },
  {
    "text": "clusters and so this is probably the only instance of a service where we don't rely on an Amazon managed service",
    "start": "1165419",
    "end": "1170850"
  },
  {
    "text": "but decided to do it ourselves so based on our experience of running error spike",
    "start": "1170850",
    "end": "1177330"
  },
  {
    "text": "on ec2 I'd like to share some of the best practices that we've learned over time first error spikes a pretty",
    "start": "1177330",
    "end": "1183240"
  },
  {
    "text": "demanding networking application and should come as a no surprise and you see about hundreds of thousands of packets",
    "start": "1183240",
    "end": "1189179"
  },
  {
    "text": "going in and out of a single instance and so once again having the ena enable",
    "start": "1189179",
    "end": "1194700"
  },
  {
    "text": "the instance types is going to help you a lot to improve the performance the other thing about air spike is that it",
    "start": "1194700",
    "end": "1201179"
  },
  {
    "text": "can leverage multiple network interfaces if they exist on your instance so for example you could have one instance",
    "start": "1201179",
    "end": "1206640"
  },
  {
    "text": "that's just responding to client requests and another instance that's being used for communication between the",
    "start": "1206640",
    "end": "1213720"
  },
  {
    "text": "nodes in the cluster and setting up multiple you know network interfaces on ec2 is pretty straightforward so it's",
    "start": "1213720",
    "end": "1220380"
  },
  {
    "text": "one of those things that I would definitely encourage people running air spike in production to to check out the",
    "start": "1220380",
    "end": "1227970"
  },
  {
    "text": "next thing that we do is that we run air spike in a placement group the placement group is an ec2 feature that enables",
    "start": "1227970",
    "end": "1234799"
  },
  {
    "text": "high bandwidth and low latency between the VMs that are in a placement group",
    "start": "1234799",
    "end": "1240500"
  },
  {
    "text": "again running air spike in a placement group improves performance but you should proceed the caution with this one",
    "start": "1240500",
    "end": "1247140"
  },
  {
    "text": "because Amazon makes no guarantees about the availability of a capacity you know if your instance type or what not in a",
    "start": "1247140",
    "end": "1253410"
  },
  {
    "text": "placement group so you could end up in a situation if you have to scale out I just don't have capacity in the",
    "start": "1253410",
    "end": "1258720"
  },
  {
    "text": "placement group so use this carefully and finally you know user data profiles",
    "start": "1258720",
    "end": "1264090"
  },
  {
    "text": "tend to be pretty large data sets that storing them and serving them out of memory can become very very expensive",
    "start": "1264090",
    "end": "1272160"
  },
  {
    "text": "fortunately Amazon has a solution for that as well they recently announced I",
    "start": "1272160",
    "end": "1277260"
  },
  {
    "text": "mean last year actually announced this instance type I three instance type which come equipped with the nvme SSD",
    "start": "1277260",
    "end": "1284429"
  },
  {
    "text": "drive the nice thing about these drives is that they offer very high performance a fraction of a cost so all of a sudden",
    "start": "1284429",
    "end": "1291630"
  },
  {
    "text": "it's okay to be able to do weeds at serving time from s s is because these",
    "start": "1291630",
    "end": "1297390"
  },
  {
    "text": "SSE's are able to handle the the high throughput as well as the low latency requirements so definitely if you're",
    "start": "1297390",
    "end": "1303960"
  },
  {
    "text": "running a spike in production and you have large datasets do check out the i3 instance types running back to Eric talk",
    "start": "1303960",
    "end": "1312360"
  },
  {
    "start": "1311000",
    "end": "1324000"
  },
  {
    "text": "what skill alright so in this section we'll talk about our global",
    "start": "1312360",
    "end": "1318450"
  },
  {
    "text": "infrastructure as well as this notion is concept of building in pods or within regions so as mentioned before we have",
    "start": "1318450",
    "end": "1325950"
  },
  {
    "start": "1324000",
    "end": "1382000"
  },
  {
    "text": "16 regions today and this is sort of that what the map of our regions look like we have a variety of different regions coming online in the future",
    "start": "1325950",
    "end": "1332580"
  },
  {
    "text": "things like Sweden Hong Kong as well as other areas that we pre announced and so",
    "start": "1332580",
    "end": "1339540"
  },
  {
    "text": "just to be clear about sort of our region's versus availability zones and how we design them it's a region is",
    "start": "1339540",
    "end": "1346320"
  },
  {
    "text": "essentially a geographic distinct location within those regions or availability zones which could be one or",
    "start": "1346320",
    "end": "1352770"
  },
  {
    "text": "even many data centers that are linked together over low latency fibre to get to that really low latency single dig",
    "start": "1352770",
    "end": "1359490"
  },
  {
    "text": "sea low latency connection between those those AZ's so the the other thing that",
    "start": "1359490",
    "end": "1366110"
  },
  {
    "text": "we sort of encourage customers to do is is to deploy your applications across Jose's DS to get the fault tolerance as",
    "start": "1366110",
    "end": "1372390"
  },
  {
    "text": "well as the high availability and really to be able to scale your application much wider and much greater than you",
    "start": "1372390",
    "end": "1377460"
  },
  {
    "text": "wouldn't a single data center sort of scenario so there're sort of notion of",
    "start": "1377460",
    "end": "1384890"
  },
  {
    "start": "1382000",
    "end": "1436000"
  },
  {
    "text": "as I sort of mentioned as a building with pods so even though we have distinct geographic locations around the",
    "start": "1384890",
    "end": "1391470"
  },
  {
    "text": "world you can actually build your application within this this idea of a pod so each pod can be a region in with",
    "start": "1391470",
    "end": "1398400"
  },
  {
    "text": "that region you have your own infrastructure your own auto scaling groups your on the application groups as well as isolates from failure into one",
    "start": "1398400",
    "end": "1405420"
  },
  {
    "text": "region and no need to spend a lot of costs or sort of engineering time developing data transfer or other sort",
    "start": "1405420",
    "end": "1412410"
  },
  {
    "text": "of engineering overhead to to figure out sort of how do I cross traffic across these different globally distributed",
    "start": "1412410",
    "end": "1417690"
  },
  {
    "text": "regions and then one way you can do that is using global DNS there's route 53 to sort of point your your",
    "start": "1417690",
    "end": "1425430"
  },
  {
    "text": "traffic to different regions depending on latency or even regional sort of constraints so pass it back to ROM so",
    "start": "1425430",
    "end": "1432420"
  },
  {
    "text": "you can talk about sort of their deployment strategy and model Thanks so",
    "start": "1432420",
    "end": "1437820"
  },
  {
    "start": "1436000",
    "end": "1512000"
  },
  {
    "text": "at beeswax we deploy across parts by using this tool that we've developed in-house called hive",
    "start": "1437820",
    "end": "1445500"
  },
  {
    "text": "it's a Bismarck system management tool one of the cool things about hive is that it abstracts away the details of",
    "start": "1445500",
    "end": "1452070"
  },
  {
    "text": "how a service a beeswax service is actually implemented so it could be running as an auto scale group or as a",
    "start": "1452070",
    "end": "1458130"
  },
  {
    "text": "container on ECS but all that is abstracted away from the operator of hive and it supports common tasks such",
    "start": "1458130",
    "end": "1465660"
  },
  {
    "text": "as creating resources supporting deployments etc it's been written in",
    "start": "1465660",
    "end": "1471060"
  },
  {
    "text": "Python and it leverages this is amazing 403 API which means that all of a sudden",
    "start": "1471060",
    "end": "1477690"
  },
  {
    "text": "we have access to all the cool features that I am offers natively for access",
    "start": "1477690",
    "end": "1483060"
  },
  {
    "text": "control etc and so we're able to get this ability to be able to deploy",
    "start": "1483060",
    "end": "1488420"
  },
  {
    "text": "globally without having to set up any infrastructure because hives just relized totally on AWS api's under the",
    "start": "1488420",
    "end": "1495570"
  },
  {
    "text": "hood hive relies on cloud formation templates extensively we will usually",
    "start": "1495570",
    "end": "1501540"
  },
  {
    "text": "our practices to set up a template test it locally on a single pod and then",
    "start": "1501540",
    "end": "1506850"
  },
  {
    "text": "easily replicated globally across the different pods so whenever you're",
    "start": "1506850",
    "end": "1514230"
  },
  {
    "text": "running a global application such as RTP there are certain things that you have",
    "start": "1514230",
    "end": "1519570"
  },
  {
    "text": "to keep in mind that naturally occur by running a global service so for example",
    "start": "1519570",
    "end": "1525420"
  },
  {
    "text": "a concrete example of that is that if you're running an application in Europe you have to comply with EU regulations",
    "start": "1525420",
    "end": "1532550"
  },
  {
    "text": "so an example of an EU regulation that you have to comply with is that if",
    "start": "1532550",
    "end": "1537680"
  },
  {
    "text": "requests originate from browsers or devices in Europe they should be routed back to servers in",
    "start": "1537680",
    "end": "1545040"
  },
  {
    "text": "Europe and for this we've come to rely on an Amazon provided global service",
    "start": "1545040",
    "end": "1550710"
  },
  {
    "text": "called out 53 that has a feature called Geographic route routing that just takes care of this for us so it's pretty",
    "start": "1550710",
    "end": "1557789"
  },
  {
    "text": "easy to set up geographic routing and once that set up then it's guaranteed that you're compliant and that requests that",
    "start": "1557789",
    "end": "1564239"
  },
  {
    "text": "originated from you always go back to servers in you the other feature of route 53 that we leverage a fair bit is",
    "start": "1564239",
    "end": "1571799"
  },
  {
    "text": "latency based routing so what this feature lets us do is it ensures that we",
    "start": "1571799",
    "end": "1578309"
  },
  {
    "text": "can always out our users to servers that have the lowest latency path to them and",
    "start": "1578309",
    "end": "1584279"
  },
  {
    "text": "note that this is not the same as the shortest path the shortest path could have all kinds of you know issues in the",
    "start": "1584279",
    "end": "1590639"
  },
  {
    "text": "network at that time so the route 53 global infrastructure is constantly you know working behind the scenes and",
    "start": "1590639",
    "end": "1596580"
  },
  {
    "text": "making sure that it always has the most optimal route from the user to the servers and leveraging this means that",
    "start": "1596580",
    "end": "1603600"
  },
  {
    "text": "we are able to reduce discrepancy between the impressions clicks and activities that be the port and the",
    "start": "1603600",
    "end": "1608999"
  },
  {
    "text": "exchanges report which is if those of you who are not tech you know it's it's a pretty big problem and finally complex learning scenarios",
    "start": "1608999",
    "end": "1617129"
  },
  {
    "text": "which are a combination of the two that I just described can be easily done in route 53 using traffic flows it's pretty",
    "start": "1617129",
    "end": "1624509"
  },
  {
    "text": "easy to set up so RTP is a global application and so if",
    "start": "1624509",
    "end": "1630960"
  },
  {
    "text": "you're working with big advertisers it's pretty common for them to be running campaigns that's on multiple regions or",
    "start": "1630960",
    "end": "1636779"
  },
  {
    "text": "continents and so it's really important for your bidder to be able to synchronize state across regions",
    "start": "1636779",
    "end": "1643129"
  },
  {
    "text": "examples of the state could be campaign management data budget you know user to",
    "start": "1643129",
    "end": "1648239"
  },
  {
    "text": "user profiles you know cookie matching a frequency capping tons of state and so",
    "start": "1648239",
    "end": "1653940"
  },
  {
    "text": "one of the things that you'd need is a reliable and a secure global network",
    "start": "1653940",
    "end": "1660330"
  },
  {
    "text": "that connects your regions fortunately there is an AWS provided solution for",
    "start": "1660330",
    "end": "1665369"
  },
  {
    "text": "this that's called the transit PPC the transit PPC is basically a hub-and-spoke model where the transit PPC becomes the",
    "start": "1665369",
    "end": "1673980"
  },
  {
    "text": "the hub and the VP sees where your services are operating become the spoke and all the packets are routed from the",
    "start": "1673980",
    "end": "1681299"
  },
  {
    "text": "spoke via the hub you know you could have a couple of Cisco routers running",
    "start": "1681299",
    "end": "1686970"
  },
  {
    "text": "in your hub and the connectivity between the hub-and-spoke itself is secured via an",
    "start": "1686970",
    "end": "1693290"
  },
  {
    "text": "IP IPSec tunnel using Amazon's VPN and again this is a fairly simple thing to",
    "start": "1693290",
    "end": "1701900"
  },
  {
    "text": "setup in practice because Amazon provides a cloud formation template that you could use and customize to set it up",
    "start": "1701900",
    "end": "1708950"
  },
  {
    "text": "for your needs with that I'll have it back to talk about cost all right thanks",
    "start": "1708950",
    "end": "1715970"
  },
  {
    "start": "1712000",
    "end": "1734000"
  },
  {
    "text": "so we talked about ingesting data as well as our global footprint but how do",
    "start": "1715970",
    "end": "1722150"
  },
  {
    "text": "you make sure your casts don't sort of overrun how do you make sure that you're composting proportional to your business",
    "start": "1722150",
    "end": "1727790"
  },
  {
    "text": "needs so we'll talk a little bit about some cost considerations when you're building a real-time bidder so this",
    "start": "1727790",
    "end": "1735170"
  },
  {
    "start": "1734000",
    "end": "1750000"
  },
  {
    "text": "could be sort of a typical traffic pattern could be users around the world coming online at different times so your",
    "start": "1735170",
    "end": "1741620"
  },
  {
    "text": "traffic's gonna go up and down or you might have seasonality with your application and so you can have",
    "start": "1741620",
    "end": "1747140"
  },
  {
    "text": "fluctuation and your demand so the one thing we encourage is to for customers",
    "start": "1747140",
    "end": "1753320"
  },
  {
    "start": "1750000",
    "end": "1770000"
  },
  {
    "text": "to scale out but also scale back in right so when your demand goes up you scale out your instances when your",
    "start": "1753320",
    "end": "1759140"
  },
  {
    "text": "demand goes back down you scale back in that's where you get that nice sort of savings there and you're really matching",
    "start": "1759140",
    "end": "1765320"
  },
  {
    "text": "your compute capacity to your demand so you know how do I do that right so some",
    "start": "1765320",
    "end": "1771200"
  },
  {
    "start": "1770000",
    "end": "1814000"
  },
  {
    "text": "what someone's simple sort of way to do this is use something called out of scaling groups or aSG's in this example",
    "start": "1771200",
    "end": "1777590"
  },
  {
    "text": "you know all I'm really doing is we're gonna create a load balancer whether it's an animal balb whatever it may be",
    "start": "1777590",
    "end": "1783520"
  },
  {
    "text": "well attach say an auto scaling group to that and then we're gonna trigger based on a certain metrics so whether it's CPU",
    "start": "1783520",
    "end": "1790610"
  },
  {
    "text": "or memory or even a custom sort of defined metrics that you create you can do so and trigger your scaling out and",
    "start": "1790610",
    "end": "1797030"
  },
  {
    "text": "so once that alarm fires that that metric is triggered then you're gonna add one or even many instances to your",
    "start": "1797030",
    "end": "1803420"
  },
  {
    "text": "auto scaling group to effectively grow out your demand as your your demand increases so right back to around there",
    "start": "1803420",
    "end": "1812510"
  },
  {
    "text": "to kind of go over how they're using out is going",
    "start": "1812510",
    "end": "1816580"
  },
  {
    "start": "1814000",
    "end": "1939000"
  },
  {
    "text": "okay so one of the things I wanted to show via the graph on the screen is that",
    "start": "1819380",
    "end": "1826020"
  },
  {
    "text": "and this is a real graph in production of how predictable RTB traffic is as you",
    "start": "1826020",
    "end": "1831750"
  },
  {
    "text": "can see there's a very clear pattern in a given region where traffic surges up during the day there's a peak around 8",
    "start": "1831750",
    "end": "1839040"
  },
  {
    "text": "p.m. and feed folks go home and then there's a lull and folks hopefully go back to bed and the that that's",
    "start": "1839040",
    "end": "1844650"
  },
  {
    "text": "represented by the the green lines and then the the blue curve shows how at beeswax were able to leverage our",
    "start": "1844650",
    "end": "1850710"
  },
  {
    "text": "scaling to make sure that the number of instances that we have in service closely tracks the incoming load and so",
    "start": "1850710",
    "end": "1859440"
  },
  {
    "text": "we're able to both scale up as well as scale down effectively and so I wanted",
    "start": "1859440",
    "end": "1864840"
  },
  {
    "text": "to share some of the best practices that we followed beeswax based on our experience so one of the things that",
    "start": "1864840",
    "end": "1871470"
  },
  {
    "text": "we've come to realize is that CPU is a pretty good metric of the load coming into the system and so if you set up an",
    "start": "1871470",
    "end": "1878550"
  },
  {
    "text": "order scale group with loud watch alarms that trigger scale up and scale down actions based on CPU threshold that",
    "start": "1878550",
    "end": "1886650"
  },
  {
    "text": "tends to work pretty well also we leverage this feature of auto scale called scheduled actions and what this",
    "start": "1886650",
    "end": "1894210"
  },
  {
    "text": "lets us do is is pre-warm and keep our instances ready because as you can see",
    "start": "1894210",
    "end": "1899340"
  },
  {
    "text": "the traffic pattern is pretty predictable and so we could have instances ready waiting for the load to",
    "start": "1899340",
    "end": "1905220"
  },
  {
    "text": "come in just before the early sunrise traffic hits our systems it's a very",
    "start": "1905220",
    "end": "1910980"
  },
  {
    "text": "useful feature and also the the last bit of best practice that we've learned over time is to really optimize the boot",
    "start": "1910980",
    "end": "1917640"
  },
  {
    "text": "times of your bidders so make sure that the aim is that you're using for your bidders have all the libraries and",
    "start": "1917640",
    "end": "1924210"
  },
  {
    "text": "software pre-configured so that in case there is a spike in traffic you can",
    "start": "1924210",
    "end": "1929430"
  },
  {
    "text": "quickly ramp up capacity and have your bidders up and running to very quickly",
    "start": "1929430",
    "end": "1934890"
  },
  {
    "text": "to be able to handle the the spike Doctore so one of the key takeaways from",
    "start": "1934890",
    "end": "1944350"
  },
  {
    "start": "1939000",
    "end": "2098000"
  },
  {
    "text": "this presentation we wanted everyone to ensure they sort of guess if you if you remember one thing it's the ec2 spot",
    "start": "1944350",
    "end": "1951340"
  },
  {
    "text": "market so you know the ec2 spot market lets you get deep discounts for your",
    "start": "1951340",
    "end": "1957070"
  },
  {
    "text": "instances effectively what it is is you're bidding on excess capacity in the ec2 fleet so the there can be",
    "start": "1957070",
    "end": "1964630"
  },
  {
    "text": "fluctuations in the price but normally you can get up to you know upwards of 90% off on demand prices so our sort of",
    "start": "1964630",
    "end": "1972730"
  },
  {
    "text": "data or our interaction with the customers especially around the AdTech customers has shown that a lot of them rely heavily on the spot market to",
    "start": "1972730",
    "end": "1979000"
  },
  {
    "text": "really reduce their costs as they scale so there's a couple ways you can use a",
    "start": "1979000",
    "end": "1984520"
  },
  {
    "text": "spot right so you can you can say I want to pay a certain price you specify the amount of instances you want and then",
    "start": "1984520",
    "end": "1990429"
  },
  {
    "text": "you specify the type of instance you want and then you you can say I want n number of instances and you're good to",
    "start": "1990429",
    "end": "1996490"
  },
  {
    "text": "go or you can use something called spot Fleet spot fleet allows you to mix and match instance types so you can have sea",
    "start": "1996490",
    "end": "2004050"
  },
  {
    "text": "instance types DS eyes whatever you want and then you really you let's say you specify a hundred instances and you can",
    "start": "2004050",
    "end": "2012270"
  },
  {
    "text": "you could say hey I want to make sure I have a hundred spot is this is running at all the time so you create a spot",
    "start": "2012270",
    "end": "2017520"
  },
  {
    "text": "fleet for that and then it'll if there's an instance to terminate so it goes down it'll read reintroduce to relaunch an",
    "start": "2017520",
    "end": "2024510"
  },
  {
    "text": "instance and put that in your spot fleet so you you're constantly getting essentially around a hundred or whatever configuration is and out of instances",
    "start": "2024510",
    "end": "2032300"
  },
  {
    "text": "the other way to do it is use something called the spot blocks so if you need to instance that is it it's sort of a live",
    "start": "2032300",
    "end": "2039330"
  },
  {
    "text": "or or there for at least one to six hours you can specify that in your configuration so maybe you need to run a",
    "start": "2039330",
    "end": "2045030"
  },
  {
    "text": "job and you want to get that deep discount but you want it there for four hours you can specify that using spot",
    "start": "2045030",
    "end": "2050608"
  },
  {
    "text": "blocks one of the keys sort of pieces here right is that since you're bidding on excess capacity and the price for",
    "start": "2050609",
    "end": "2057358"
  },
  {
    "text": "those that excess capacity could change you could run into a situation where you",
    "start": "2057359",
    "end": "2063450"
  },
  {
    "text": "pay a certain price for an instance and then that price actually increases and therefore will actually come in and",
    "start": "2063450",
    "end": "2069350"
  },
  {
    "text": "terminate that instance well we'll give you a two-minute warning and so customers can use that time to",
    "start": "2069350",
    "end": "2075060"
  },
  {
    "text": "evacuate the instance move whatever state information they may or may not have in there or even spin up another",
    "start": "2075060",
    "end": "2080099"
  },
  {
    "text": "instance like an on-demand instance or another spot instance so this kind of lends itself to workloads that are",
    "start": "2080099",
    "end": "2086300"
  },
  {
    "text": "stateless right so I for instance fail there goes away and it's not a big deal",
    "start": "2086300",
    "end": "2091770"
  },
  {
    "text": "you just spin up another one or workloads that aren't time bound or even batch process type workloads or you can",
    "start": "2091770",
    "end": "2099720"
  },
  {
    "start": "2098000",
    "end": "2135000"
  },
  {
    "text": "kind of try or use something a pattern like this one of the cool things about this is that we're sort of calling it",
    "start": "2099720",
    "end": "2105869"
  },
  {
    "text": "the waterfall tile scaling group and so what this does is you're creating a load",
    "start": "2105869",
    "end": "2111690"
  },
  {
    "text": "balancer and then you're actually using an on-demand on a scaling group and a spot auto scaling group so you get that",
    "start": "2111690",
    "end": "2117560"
  },
  {
    "text": "that reassurance of having on-demand instances and then you're actually getting that cost reduction in",
    "start": "2117560",
    "end": "2123599"
  },
  {
    "text": "performance from using spot instances so essentially what we're doing is we're",
    "start": "2123599",
    "end": "2128849"
  },
  {
    "text": "going to create two out of skinning groups one spot and one on demand and make it in fluctuate depending on",
    "start": "2128849",
    "end": "2134310"
  },
  {
    "text": "traffic so from a configuration perspective might look something like this this is an auto scaling group we",
    "start": "2134310",
    "end": "2141690"
  },
  {
    "start": "2135000",
    "end": "2196000"
  },
  {
    "text": "have two cloud watch alarms or metrics we're gonna alarm on this is the on-demand group and we're gonna alarm on",
    "start": "2141690",
    "end": "2147900"
  },
  {
    "text": "80% threshold and we're gonna scale based on 80% and then we're gonna reduce",
    "start": "2147900",
    "end": "2153270"
  },
  {
    "text": "our scale back in on 40% so we flip over to the spot Otto's auto scaling group",
    "start": "2153270",
    "end": "2160380"
  },
  {
    "text": "we're going to sort of stagger it so we're actually gonna scale on 50% and then we're going to scale back down on",
    "start": "2160380",
    "end": "2166349"
  },
  {
    "text": "20% so essentially we're sort of staggering the spot and on-demand usage",
    "start": "2166349",
    "end": "2172859"
  },
  {
    "text": "and effectively what we're trying to do is spin up as much spot as we can but to get that assurance of having on-demand",
    "start": "2172859",
    "end": "2178349"
  },
  {
    "text": "so if our application needs to scale it's going to trigger spot first and",
    "start": "2178349",
    "end": "2184079"
  },
  {
    "text": "then as it scales back down it's gonna kill on demand first and then it's gonna kill spot but actually preserve that",
    "start": "2184079",
    "end": "2190619"
  },
  {
    "text": "that's sort of on demand so you always have that reassurance and then with that",
    "start": "2190619",
    "end": "2196680"
  },
  {
    "text": "I'll pass it back to rob talking about how they use spot thanks Eric all right",
    "start": "2196680",
    "end": "2202710"
  },
  {
    "text": "so if there's one thing that you can take away from this talk it is that please go and check out spot",
    "start": "2202710",
    "end": "2208670"
  },
  {
    "text": "market because if you're running an RTV application and you're fielding millions of queries per second it's going to be a",
    "start": "2208670",
    "end": "2213770"
  },
  {
    "text": "very very expensive service run and if you care about operating costs which I'm sure all if you do",
    "start": "2213770",
    "end": "2219650"
  },
  {
    "text": "spots gonna save you a ton of money so definitely go check out spot at B's max",
    "start": "2219650",
    "end": "2225680"
  },
  {
    "text": "we've been using spot for a pretty long time and here are some of the best practices that we've learned the first",
    "start": "2225680",
    "end": "2232309"
  },
  {
    "text": "thing is to make sure that your bidders are completely stateless so if there's",
    "start": "2232309",
    "end": "2237349"
  },
  {
    "text": "any in-memory state that your bidder is building then make sure that the state is persisted on hopefully an Amazon",
    "start": "2237349",
    "end": "2244940"
  },
  {
    "text": "managed storage service like s3 or or EFS this will ensure that even when a",
    "start": "2244940",
    "end": "2252049"
  },
  {
    "text": "spot instance is terminated there's no data loss because everything's present in in the in a cloud-based storage next",
    "start": "2252049",
    "end": "2260390"
  },
  {
    "text": "if your bidder is performing any kind of operation that needs to be logged like for example you know you typically want",
    "start": "2260390",
    "end": "2267109"
  },
  {
    "text": "to be logging all the bids that your betters making then make sure that that is also persisted into an Amazon managed",
    "start": "2267109",
    "end": "2273410"
  },
  {
    "text": "service such as Kinesis There is obviously challenges at you know trying",
    "start": "2273410",
    "end": "2279980"
  },
  {
    "text": "to log bids at millions of queries per second so a treatment last year we gave a presentation on how you could leverage",
    "start": "2279980",
    "end": "2287329"
  },
  {
    "text": "some of the features of Kinesis to be able to do that effectively in a cost-effective manner and also Kinesis",
    "start": "2287329",
    "end": "2293180"
  },
  {
    "text": "provides this library called kpl that I'd encourage everyone to check out that you can really use to be able to log",
    "start": "2293180",
    "end": "2299839"
  },
  {
    "text": "everything into cases effectively and so the one thing the Golden Rule you should",
    "start": "2299839",
    "end": "2304940"
  },
  {
    "text": "follow is that absolutely no useful information should be persisted onto the",
    "start": "2304940",
    "end": "2310220"
  },
  {
    "text": "disk in the machine itself because you know what spot instances just go away",
    "start": "2310220",
    "end": "2315250"
  },
  {
    "text": "the next best practice is to minimize the boot time of the bidder this again",
    "start": "2315250",
    "end": "2321589"
  },
  {
    "text": "you know as I mentioned during the autoscale section of the talk as well is it's just a in general of best practice",
    "start": "2321589",
    "end": "2327529"
  },
  {
    "text": "to have one of the risks that we run with deploying on our service on spot is",
    "start": "2327529",
    "end": "2333770"
  },
  {
    "text": "that capacity could disappear with the two-minute warning but this this can be",
    "start": "2333770",
    "end": "2339120"
  },
  {
    "text": "mitigated you know easily by following patterns such as the waters fall or the",
    "start": "2339120",
    "end": "2345150"
  },
  {
    "text": "skill that Eric described but in order for that to work really well you need to make sure that your bidders can come",
    "start": "2345150",
    "end": "2351330"
  },
  {
    "text": "back online on the on-demand or a scale group pretty quickly and one of the ways",
    "start": "2351330",
    "end": "2357120"
  },
  {
    "text": "to do that is to make sure that your aim eyes have a pretty small boot time I'm",
    "start": "2357120",
    "end": "2364650"
  },
  {
    "start": "2363000",
    "end": "2388000"
  },
  {
    "text": "gonna talk about data we talked about processing ingesting data making",
    "start": "2364650",
    "end": "2371160"
  },
  {
    "text": "decisions on the data as well as costs considerations but you probably wanna",
    "start": "2371160",
    "end": "2376230"
  },
  {
    "text": "keep a lot of that data for a longer periods of time historical reasons but maybe you want to do trend analysis or",
    "start": "2376230",
    "end": "2382440"
  },
  {
    "text": "other sort of analytics and insights into your data so we'll talk a little bit about some of those options so",
    "start": "2382440",
    "end": "2388590"
  },
  {
    "start": "2388000",
    "end": "2416000"
  },
  {
    "text": "that's a day like so you know if you have lots of data coming in maybe you",
    "start": "2388590",
    "end": "2394140"
  },
  {
    "text": "have data from your at your bidders your advertisers as well as third-party data that you want to ingest and put together",
    "start": "2394140",
    "end": "2401810"
  },
  {
    "text": "you can do so using something called data link right and that way you can give access to different users as well",
    "start": "2401810",
    "end": "2409350"
  },
  {
    "text": "as data scientists or other sort of internal employees and I have to worry",
    "start": "2409350",
    "end": "2414390"
  },
  {
    "text": "about scale and so one of the key sort of pieces where most customers use is",
    "start": "2414390",
    "end": "2419520"
  },
  {
    "text": "the use s3 is sort of their data layer or data storage for building data like",
    "start": "2419520",
    "end": "2425030"
  },
  {
    "text": "what's great about this is you don't have to copy your data a bunch of times you can natively use other eighty-fifth",
    "start": "2425030",
    "end": "2430590"
  },
  {
    "text": "services so if you're ingesting data sort of from Kinesis you can actually",
    "start": "2430590",
    "end": "2436410"
  },
  {
    "text": "point that using fire hose directly to s3 and now that the ETL or do any sort of other programming to modify that and",
    "start": "2436410",
    "end": "2443820"
  },
  {
    "text": "then you can actually query your data using something like Amazon Athena so Amazon Athena will let you essentially run the sequel compliant or",
    "start": "2443820",
    "end": "2451800"
  },
  {
    "text": "ANSI sequel compliant queries against your data in place without having to move it or copy it or do any sort of",
    "start": "2451800",
    "end": "2458250"
  },
  {
    "text": "eats yelling on it so you know why use s3 you know as threes pretty popular",
    "start": "2458250",
    "end": "2464970"
  },
  {
    "start": "2460000",
    "end": "2509000"
  },
  {
    "text": "service it's it's been around a long time and it's super scalable right so if you have 100 terabytes today you have 100",
    "start": "2464970",
    "end": "2472500"
  },
  {
    "text": "petabytes tomorrow you don't need to worry about scaling that up people need to worry about deploying new instances",
    "start": "2472500",
    "end": "2477690"
  },
  {
    "text": "or storage machines or whatever maybe it just it just scaled as you grow you also",
    "start": "2477690",
    "end": "2483060"
  },
  {
    "text": "don't need to worry about running compute instances to keep up that storage you're like HDFS or or having",
    "start": "2483060",
    "end": "2490650"
  },
  {
    "text": "any sort of storage or any sort of compute instances to manage that storage as well as you can run things like big",
    "start": "2490650",
    "end": "2498420"
  },
  {
    "text": "data frameworks spark I've presto or even proper Hadoop jobs against that",
    "start": "2498420",
    "end": "2504960"
  },
  {
    "text": "data without having to move it and just do it directly on an s3 so there's a",
    "start": "2504960",
    "end": "2511050"
  },
  {
    "start": "2509000",
    "end": "2546000"
  },
  {
    "text": "good thing about s3 is there's a variety of different classes storage classes or tears and so s3 standard is with the",
    "start": "2511050",
    "end": "2517410"
  },
  {
    "text": "commonly used one but we also have infrequent access or sa-ay as well as even glacier so if you think about",
    "start": "2517410",
    "end": "2522869"
  },
  {
    "text": "ingesting your data and actually keeping that data for longer periods of time than sort of the data gets from being",
    "start": "2522869",
    "end": "2529440"
  },
  {
    "text": "less hot or less accessed gets a little bit colder so you can or you can actually write something called a or",
    "start": "2529440",
    "end": "2535080"
  },
  {
    "text": "configure something called a lifecycle policy and actually move that data across the different tiers so you're",
    "start": "2535080",
    "end": "2540420"
  },
  {
    "text": "getting a nice sort of cost-benefit for your data as you keep data for longer periods of time so a typical scenario we",
    "start": "2540420",
    "end": "2549150"
  },
  {
    "start": "2546000",
    "end": "2574000"
  },
  {
    "text": "see a lot of head tech customers or even you know customer general do what their data is like they have a bunch of data",
    "start": "2549150",
    "end": "2554990"
  },
  {
    "text": "they want to enrich that data so again maybe they have a third party data set or maybe they have you know a variety of",
    "start": "2554990",
    "end": "2562170"
  },
  {
    "text": "other sources that are getting data in they want to enrich it and combine it and then they want to give that data set",
    "start": "2562170",
    "end": "2568200"
  },
  {
    "text": "to another user or they want to actually run some sort of machine learning type models in that data and so using a",
    "start": "2568200",
    "end": "2575010"
  },
  {
    "start": "2574000",
    "end": "2613000"
  },
  {
    "text": "variety of different tools or sort of analytics options on native s a lot of customers will run all ingest that data",
    "start": "2575010",
    "end": "2581040"
  },
  {
    "text": "and to ask three they'll run it through Amazon EMR which is our managed to do pop Frank so again you can run a proper",
    "start": "2581040",
    "end": "2587130"
  },
  {
    "text": "sort of MapReduce or Hadoop job or you can run a spark job against that data and enrich it enrich the data with other",
    "start": "2587130",
    "end": "2593760"
  },
  {
    "text": "different sources and once you've done that you might want to run some sort of business intelligence tool like quick",
    "start": "2593760",
    "end": "2600150"
  },
  {
    "text": "site so I want to visualize that data only that data or make a dashboard for other users to consume so they can get inside",
    "start": "2600150",
    "end": "2606740"
  },
  {
    "text": "out of that data as well and so you can do so using using some of the native services with us or with ATS so with",
    "start": "2606740",
    "end": "2614420"
  },
  {
    "start": "2613000",
    "end": "2845000"
  },
  {
    "text": "that I'll hand it back to Ron to sort of talk about their data flow thanks Eric so the following diagram is the data",
    "start": "2614420",
    "end": "2621590"
  },
  {
    "text": "centric view of the beeswax platform so I'm going to talk about this architecture left left right so on the",
    "start": "2621590",
    "end": "2629810"
  },
  {
    "text": "extreme left we have the data collectors so the examples of that are the high",
    "start": "2629810",
    "end": "2635660"
  },
  {
    "text": "performance high steel collectors that collect bid requests said you know",
    "start": "2635660",
    "end": "2640700"
  },
  {
    "text": "hundreds of thousands of queries per second and the challenge really there is how do you you know scale up that the",
    "start": "2640700",
    "end": "2647330"
  },
  {
    "text": "collection process and then in addition to that we have collectors that collect",
    "start": "2647330",
    "end": "2652490"
  },
  {
    "text": "events such as you know clicks impressions etc and the challenge there is to be able to do the collection in a",
    "start": "2652490",
    "end": "2659570"
  },
  {
    "text": "lossless manner because this is the data that's eventually used for billing all the data that is collected by our",
    "start": "2659570",
    "end": "2665660"
  },
  {
    "text": "front-end systems are persisted into Kinesis we use protocol buffers to",
    "start": "2665660",
    "end": "2671750"
  },
  {
    "text": "encode the actual payload of the data that goes into the into the stream",
    "start": "2671750",
    "end": "2676840"
  },
  {
    "text": "so moving on to the next section the streaming message hub is sort of the",
    "start": "2676840",
    "end": "2682490"
  },
  {
    "text": "core component of the overall architecture this is an outer scale",
    "start": "2682490",
    "end": "2687710"
  },
  {
    "text": "group again deployed on on spot instances that is responsible for consuming the data from the Kinesis",
    "start": "2687710",
    "end": "2693890"
  },
  {
    "text": "stream and we expose a restful api to our customers that allows them to",
    "start": "2693890",
    "end": "2699140"
  },
  {
    "text": "configure both the destination of where this data should be routed to as well as any kind of transformations that they",
    "start": "2699140",
    "end": "2705440"
  },
  {
    "text": "would want to perform on the data so an example could be that people might want to customers might want to transform the",
    "start": "2705440",
    "end": "2711560"
  },
  {
    "text": "data to JSON or CSV or our custom CSV with their own headers all of that is supported through our s4 API and in",
    "start": "2711560",
    "end": "2718670"
  },
  {
    "text": "terms of delivery destinations we support routing to a customer's the Kinesis stream there has three buckets",
    "start": "2718670",
    "end": "2724580"
  },
  {
    "text": "or they can even write it to an HTTP endpoint that they have configured to just receive this in a in a streaming",
    "start": "2724580",
    "end": "2730280"
  },
  {
    "text": "manner so all the data that's you know interesting to us is collected by the",
    "start": "2730280",
    "end": "2735920"
  },
  {
    "text": "message hub and then transferred into a bucket in s3 as Eric mentioned our Dilek is built on",
    "start": "2735920",
    "end": "2743590"
  },
  {
    "text": "top of s3 we leverage s3 as the storage layer and we leverage the glue meta",
    "start": "2743590",
    "end": "2748630"
  },
  {
    "text": "store to store all our table definitions partitions and all of that ends up over",
    "start": "2748630",
    "end": "2755890"
  },
  {
    "text": "there and we have jobs that periodically transform the format of the data from",
    "start": "2755890",
    "end": "2761920"
  },
  {
    "text": "CSV to parquet which is a column i/o format and all of a sudden it's possible",
    "start": "2761920",
    "end": "2767830"
  },
  {
    "text": "for all this data to be easily queried through systems such as Athena for all",
    "start": "2767830",
    "end": "2772990"
  },
  {
    "text": "kinds of ad-hoc analysis the data leak also feeds our ETL system our ETL is",
    "start": "2772990",
    "end": "2780640"
  },
  {
    "text": "built on top of redshift the ETL layer is responsible for doing joints as well",
    "start": "2780640",
    "end": "2786730"
  },
  {
    "text": "as performing aggregations to compute the total number of clicks impressions for different campaigns the",
    "start": "2786730",
    "end": "2792790"
  },
  {
    "text": "orchestration of the different SQL queries that need to run on redshift is done via AWS data pipeline and we expose",
    "start": "2792790",
    "end": "2802180"
  },
  {
    "text": "the redshift cluster where the ETL happens for serving as well but this is fronted by our API that aggressively",
    "start": "2802180",
    "end": "2809440"
  },
  {
    "text": "caches the most common queries and we have seen an experience that ship does",
    "start": "2809440",
    "end": "2814510"
  },
  {
    "text": "pretty well when it comes to even serving some of this data for",
    "start": "2814510",
    "end": "2819670"
  },
  {
    "text": "optimization and acid analysis we once again rely on Amazon managed EMR",
    "start": "2819670",
    "end": "2825130"
  },
  {
    "text": "services that ingest the data from the lake and you know all the model training",
    "start": "2825130",
    "end": "2830890"
  },
  {
    "text": "and model building happens our EMR and then the models are pushed into s3 from",
    "start": "2830890",
    "end": "2836830"
  },
  {
    "text": "where the bidders then pick it up to do interesting things like click-through prediction etc so all the data that's",
    "start": "2836830",
    "end": "2846760"
  },
  {
    "start": "2845000",
    "end": "2977000"
  },
  {
    "text": "you know consumed and process is finally exposed to our customers in the form of",
    "start": "2846760",
    "end": "2852280"
  },
  {
    "text": "restful api where they can view how their campaigns and such are performing we've also built a UI on top of this API",
    "start": "2852280",
    "end": "2861700"
  },
  {
    "text": "that really helps them visualize you know how how things are going",
    "start": "2861700",
    "end": "2867580"
  },
  {
    "text": "and this campaign management framework and the the performance reporting framework but the API and the UI for",
    "start": "2867580",
    "end": "2874390"
  },
  {
    "text": "that are implemented as Dockers that are deployed on top of ECS and the other use",
    "start": "2874390",
    "end": "2884410"
  },
  {
    "text": "case in addition to performance reports is that it's easy to get actionable insights on your data once it's been",
    "start": "2884410",
    "end": "2892750"
  },
  {
    "text": "ingested back Kinesis and once it's in the data link so one of the things that our platform does is that it in real",
    "start": "2892750",
    "end": "2900220"
  },
  {
    "text": "time sends this data to a Metamarkets endpoint that we have set up and once",
    "start": "2900220",
    "end": "2906280"
  },
  {
    "text": "the data is is in there then you have access to the mirror mark it's a UI",
    "start": "2906280",
    "end": "2911320"
  },
  {
    "text": "through our to the beeswax portal and all of a sudden this allows our customers to have very useful actionable",
    "start": "2911320",
    "end": "2918820"
  },
  {
    "text": "business insights on the kind of inventory that's coming into the beeswax bidder so they can figure out you know",
    "start": "2918820",
    "end": "2925540"
  },
  {
    "text": "if they're bidding on the right ad sizes if they're looking at your mobile requests etc so all this is you know",
    "start": "2925540",
    "end": "2933640"
  },
  {
    "text": "easily possible and easy to scale mostly because we leverage Amazon managed",
    "start": "2933640",
    "end": "2939670"
  },
  {
    "text": "services to do all the heavy lifting so that we can focus on all the good stuff of building our product and to doctrine",
    "start": "2939670",
    "end": "2948520"
  },
  {
    "text": "pool yeah I think yeah dr. evil said it best using AWS otário real-time bidding",
    "start": "2948520",
    "end": "2954760"
  },
  {
    "text": "service will give you over 1 million requests per second so with that we",
    "start": "2954760",
    "end": "2960580"
  },
  {
    "text": "actually we put blaze to this one but if there's anyone has any questions I think",
    "start": "2960580",
    "end": "2966670"
  },
  {
    "text": "there's mics on either side if for the easiest way to folks come up to the mics",
    "start": "2966670",
    "end": "2972060"
  },
  {
    "text": "and thanks everyone for coming thank you",
    "start": "2972060",
    "end": "2976740"
  }
]