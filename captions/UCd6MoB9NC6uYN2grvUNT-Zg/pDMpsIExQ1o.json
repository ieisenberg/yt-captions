[
  {
    "start": "0",
    "end": "41000"
  },
  {
    "text": "my name is blair leighton and i look after our database services across asia-pacific from a business development",
    "start": "3260",
    "end": "9590"
  },
  {
    "text": "perspective so what does that mean that means that i listen to customer requirements i visit customers obviously",
    "start": "9590",
    "end": "16490"
  },
  {
    "text": "trying to sell our solutions for the good use cases that you have but I also",
    "start": "16490",
    "end": "21710"
  },
  {
    "text": "listen to the feedback and pass that back to our teams and headquarters so",
    "start": "21710",
    "end": "26750"
  },
  {
    "text": "after I've gone through my session if you do have some feedback on our services or something like that please come and find me I'll wait outside and",
    "start": "26750",
    "end": "32960"
  },
  {
    "text": "I'd be very happy to hear anything that you have to say so with that let's get",
    "start": "32960",
    "end": "38089"
  },
  {
    "text": "on with what we're going to talk about today which is good old databases so if we look at the Amazon platform there on",
    "start": "38089",
    "end": "45710"
  },
  {
    "start": "41000",
    "end": "41000"
  },
  {
    "text": "the bottom down here where we've got global infrastructure all of our regions across the globe then networking",
    "start": "45710",
    "end": "51949"
  },
  {
    "text": "connecting all of that and inside the region's compute storage and then inside database we have four main services so",
    "start": "51949",
    "end": "60319"
  },
  {
    "text": "Amazon RDS is for relational databases Amazon Elastic ashes for in-memory",
    "start": "60319",
    "end": "65360"
  },
  {
    "text": "caches dynamodb is our no sequel offering hugely scalable and Amazon",
    "start": "65360",
    "end": "72260"
  },
  {
    "text": "redshift is our data warehouse so we're going to go through and talk about these in more detail but why would you want to",
    "start": "72260",
    "end": "79790"
  },
  {
    "start": "78000",
    "end": "78000"
  },
  {
    "text": "use these managed database services well think about it today how many people",
    "start": "79790",
    "end": "85070"
  },
  {
    "text": "here are actually dbas all right quite a few people how much time you actually spend either doing this yourselves or",
    "start": "85070",
    "end": "92300"
  },
  {
    "text": "working with your colleagues to provision hardware and storage for your databases to do the installation the",
    "start": "92300",
    "end": "98930"
  },
  {
    "text": "upgrading and the patching of software doing documentation and managing the",
    "start": "98930",
    "end": "104030"
  },
  {
    "text": "licensing so if you're working with the commercial vendors Oracle or sequel server you've got to manage all the licensing making sure you're compliant",
    "start": "104030",
    "end": "110120"
  },
  {
    "text": "and getting not getting audited then the backup and recovery the data load and",
    "start": "110120",
    "end": "115400"
  },
  {
    "text": "the unload as well as the security so all of those things there are they",
    "start": "115400",
    "end": "122150"
  },
  {
    "text": "really adding value to your business and to your customers these are just things you have to do doesn't matter what",
    "start": "122150",
    "end": "128659"
  },
  {
    "text": "business whether you're a bank and insurance company or manufacturing company or an airline everyone has to do",
    "start": "128659",
    "end": "134329"
  },
  {
    "text": "this stuff so what we want to do is to say well let's take away some of that pain of you",
    "start": "134329",
    "end": "140540"
  },
  {
    "text": "having to manage this whole stack from the power and air conditioning down the bottom here racking and stacking server",
    "start": "140540",
    "end": "146720"
  },
  {
    "text": "maintenance installing the operating system doing the patches the database software patching that and going all the",
    "start": "146720",
    "end": "152660"
  },
  {
    "text": "way up to the application optimization now you say okay well if I move that to AWS what do I get well if we just do it",
    "start": "152660",
    "end": "159770"
  },
  {
    "text": "on ec2 then we take away obviously the power the air conditioning network and",
    "start": "159770",
    "end": "165770"
  },
  {
    "text": "and racking and stacking and all of that kind of stuff up to the operating system we give you an operating system image to start with but you're still responsible",
    "start": "165770",
    "end": "171880"
  },
  {
    "text": "for patching and managing that operating system so we go with manage database",
    "start": "171880",
    "end": "177770"
  },
  {
    "text": "services then what we're trying to do is actually move as much as possible completely over to what Amazon can do",
    "start": "177770",
    "end": "185959"
  },
  {
    "text": "with a service such as RDS now this allows you then to focus on your",
    "start": "185959",
    "end": "192320"
  },
  {
    "text": "application optimization and that's really the value where you start being",
    "start": "192320",
    "end": "198230"
  },
  {
    "text": "able to go back to your business and optimize the applications improve the applications work with the developers so",
    "start": "198230",
    "end": "205160"
  },
  {
    "text": "they don't create horrible sequel statements in the first place and get everything moving much more smoothly so",
    "start": "205160",
    "end": "211730"
  },
  {
    "text": "what that means is assuming you and your competitor had the same budget the same",
    "start": "211730",
    "end": "217130"
  },
  {
    "text": "amount of resources but one person was using Amazon and the other entity was",
    "start": "217130",
    "end": "223280"
  },
  {
    "text": "using standard on Prem with those same resources when you're able to focus",
    "start": "223280",
    "end": "228709"
  },
  {
    "text": "purely on the application not have to worry about racking and stacking and doing the patching installation of software and backup recovery you're",
    "start": "228709",
    "end": "236000"
  },
  {
    "text": "going to stand out that you're going to have a unique offering because you have more resources focused on the customer",
    "start": "236000",
    "end": "242000"
  },
  {
    "text": "than managing the core infrastructure so let's go and have a look at RDS itself",
    "start": "242000",
    "end": "249459"
  },
  {
    "text": "RDS is for relational databases and the ones we support my sequel sequel server",
    "start": "249459",
    "end": "256579"
  },
  {
    "text": "oracle postgres maria DB and our new offering Aurora now it is managed for",
    "start": "256580",
    "end": "265820"
  },
  {
    "text": "you it's easy to get going it's very scalable and it's quite low cost in terms of what",
    "start": "265820",
    "end": "270950"
  },
  {
    "text": "you pay for you consume that and you just use it and when you've finished you",
    "start": "270950",
    "end": "275990"
  },
  {
    "text": "can actually stop it and you don't pay for it anymore so traditional cloud environment so we look at the the key",
    "start": "275990",
    "end": "282260"
  },
  {
    "start": "282000",
    "end": "282000"
  },
  {
    "text": "features I can actually start a database get it up and running and give it to",
    "start": "282260",
    "end": "287840"
  },
  {
    "text": "developers in about six minutes and why is there not five minutes or something cuz I actually timed it and I did a test",
    "start": "287840",
    "end": "293510"
  },
  {
    "text": "and looked at the logs and it was six minutes when i launched that we can do a multi AZ database so that's where we",
    "start": "293510",
    "end": "301130"
  },
  {
    "text": "have a master in one easy and a slave in another one you can think of the availability zones as data centers if",
    "start": "301130",
    "end": "308030"
  },
  {
    "text": "you like and then we keep that synchronously up to date so if data in the master is committed it's guaranteed",
    "start": "308030",
    "end": "313910"
  },
  {
    "text": "to be in the standby before you get the result coming back now that gives you",
    "start": "313910",
    "end": "319220"
  },
  {
    "text": "huge availability improvements than what you typically might have on Prem as well we can scale a database up or down with",
    "start": "319220",
    "end": "328280"
  },
  {
    "text": "about 60 to 90 seconds of downtime so think about that how long would it take",
    "start": "328280",
    "end": "333770"
  },
  {
    "text": "you to actually resize your database infrastructure on Prem today you would",
    "start": "333770",
    "end": "339380"
  },
  {
    "text": "have to go and order the hardware get the purchase order done get it in rack",
    "start": "339380",
    "end": "344870"
  },
  {
    "text": "and stack it then decide how you're going to migrate from your existing infrastructure to the new infrastructure",
    "start": "344870",
    "end": "350060"
  },
  {
    "text": "and that's going to take significant amount of time weeks right typically for many companies it takes at least four",
    "start": "350060",
    "end": "356150"
  },
  {
    "text": "weeks just to get the servers in so I can do that with very minimal downtime",
    "start": "356150",
    "end": "361930"
  },
  {
    "text": "we can also apply patches with that same amount of downtime so when we actually",
    "start": "361930",
    "end": "368000"
  },
  {
    "text": "issue a patch and we say we're going to patch your instances you have a window when you say i want this maintenance to",
    "start": "368000",
    "end": "374180"
  },
  {
    "text": "occur and what we'll do is decide is if it looks like it's going to take longer than the failover time to perform that",
    "start": "374180",
    "end": "380930"
  },
  {
    "text": "patch we will actually failover as part of the patching operation so we're taking care of all of that for you you",
    "start": "380930",
    "end": "388310"
  },
  {
    "text": "can also add read replicas for the open source engines so Maria DB my sequel",
    "start": "388310",
    "end": "394280"
  },
  {
    "text": "post-crescent our own Aurora we support rear up liquors which allows you to scale applications much more than what",
    "start": "394280",
    "end": "400070"
  },
  {
    "text": "you could have you just had a master database you can prac your backups and your database logs with",
    "start": "400070",
    "end": "406530"
  },
  {
    "text": "11 nines of durability that's moving into s3 so that if something really did go wrong you can be pretty sure that",
    "start": "406530",
    "end": "413040"
  },
  {
    "text": "you're going to be able to recover your database in the worst possible scenario with five minutes worth of data points",
    "start": "413040",
    "end": "418680"
  },
  {
    "text": "so we're going to take a backup that's already not done nightly in from s3 and",
    "start": "418680",
    "end": "424290"
  },
  {
    "text": "then apply the database logs up until the last five minutes so that's an absolute worst case and that is very",
    "start": "424290",
    "end": "431610"
  },
  {
    "text": "very rare for there's something like that to happen so the recovery process is you can actually recover any point in",
    "start": "431610",
    "end": "437550"
  },
  {
    "text": "time up until the log process so let's say a user came in 20 minutes ago and",
    "start": "437550",
    "end": "443160"
  },
  {
    "text": "they dropped 10 tables accidentally in my sequel to recover from that you can",
    "start": "443160",
    "end": "448620"
  },
  {
    "text": "simply say okay I want IDs to recover this database on a new instance at this point in time before that happened so",
    "start": "448620",
    "end": "455640"
  },
  {
    "text": "all of that is taken care of by the RDS service also we now have detailed",
    "start": "455640",
    "end": "462630"
  },
  {
    "text": "metrics down to one second and these are way more detail than what we were",
    "start": "462630",
    "end": "467790"
  },
  {
    "text": "providing before so now we can see process lists we can see network activity we can see a disk consumption",
    "start": "467790",
    "end": "474480"
  },
  {
    "text": "memory consumption and so on and that can be all down to one second level of granularity now if you'll think of",
    "start": "474480",
    "end": "481800"
  },
  {
    "text": "normal metrics inside AWS traditionally it's five minutes or one minute so this",
    "start": "481800",
    "end": "487680"
  },
  {
    "text": "is a huge change for RDS and really hoping to help you debug your database problems not only that we do so security",
    "start": "487680",
    "end": "494790"
  },
  {
    "text": "is very important and we can actually encrypt with a click and say I want to encrypt this particular database and all",
    "start": "494790",
    "end": "502650"
  },
  {
    "text": "the storage will be encrypted so there's a lot of things that we think about an offer from this particular service and",
    "start": "502650",
    "end": "509520"
  },
  {
    "text": "you're saying are just sounds really good i don't think it's real right let's do a demo so what i'm going to do is",
    "start": "509520",
    "end": "517490"
  },
  {
    "text": "show you when i login all right here",
    "start": "517490",
    "end": "525150"
  },
  {
    "text": "we've got the console this is for RDS and I've just started before you can see",
    "start": "525150",
    "end": "530340"
  },
  {
    "text": "that's today the log when we created an instance an Oracle Enterprise Edition",
    "start": "530340",
    "end": "536690"
  },
  {
    "text": "RDS instance and it's running in what we call multi AZ mode you can see here multi AZ yes so",
    "start": "536690",
    "end": "544470"
  },
  {
    "text": "this is a master and a slave now imagine your boss has come in and said okay what",
    "start": "544470",
    "end": "549959"
  },
  {
    "text": "I really want to do is I want to expand this business we're going to need this application to go and support many more",
    "start": "549959",
    "end": "555149"
  },
  {
    "text": "users I need more powerful service well simply what you can do here is come in",
    "start": "555149",
    "end": "561540"
  },
  {
    "text": "and look at the instance actions modify this and then from here you can see I've",
    "start": "561540",
    "end": "567930"
  },
  {
    "text": "got an Oracle 12c database and I'm running on a meat am three extra-large which is for virtual CPUs and about 16",
    "start": "567930",
    "end": "575970"
  },
  {
    "text": "gigs of RAM so I'm going to go through here and I'm going to change that to an r34 extra-large which is 16 virtual CPUs",
    "start": "575970",
    "end": "584850"
  },
  {
    "text": "and 122 gigs of RAM so I put that everything else is the same right I",
    "start": "584850",
    "end": "590070"
  },
  {
    "text": "don't want to change anything else so we come down here there's all the other things here we've got like backup",
    "start": "590070",
    "end": "595230"
  },
  {
    "text": "retention periods and and minor version upgrades and maintenance windows but we don't want to change any of that here I",
    "start": "595230",
    "end": "601860"
  },
  {
    "text": "can choose apply immediate if I don't do that it will happen in my maintenance window but I wanted to happen right now",
    "start": "601860",
    "end": "608600"
  },
  {
    "text": "so I click continue and here's what's going to change it shows the list of things and it just shows you we're",
    "start": "608600",
    "end": "614279"
  },
  {
    "text": "changing the instance class to a new instance modify that okay now that's",
    "start": "614279",
    "end": "620579"
  },
  {
    "text": "going to start modifying and doing all that around in this service you can now",
    "start": "620579",
    "end": "626339"
  },
  {
    "text": "go somewhere and do something else so what about if there's another project where we need to launch a database",
    "start": "626339",
    "end": "631860"
  },
  {
    "text": "instance so how quickly can we get something up and running well here we're going to launch a my sequel database and",
    "start": "631860",
    "end": "637500"
  },
  {
    "text": "this is just going to be a development environment so we don't care about having the availability we're not going to do multi AZ so then we click next now",
    "start": "637500",
    "end": "645720"
  },
  {
    "text": "on here we've got the different versions that we can use we do actually support 5.7 now so if you're keen on 5.7 you can",
    "start": "645720",
    "end": "652649"
  },
  {
    "text": "try the new version the instance class oh let's go 4a m 42 extra large multi AZ",
    "start": "652649",
    "end": "661199"
  },
  {
    "text": "no we're not going to do that so we're just going to have a single instance general-purpose storage there's actually options here for magnetic as well as",
    "start": "661199",
    "end": "668699"
  },
  {
    "text": "provision I ops which is the high performance storage now I'm going to give this 500",
    "start": "668699",
    "end": "674180"
  },
  {
    "text": "gigs for general purpose storage and then come down here I need a database",
    "start": "674180",
    "end": "679340"
  },
  {
    "text": "identifiers so let's call this my sequel SG and then need a name my name and",
    "start": "679340",
    "end": "687980"
  },
  {
    "text": "password make sure I get that right and",
    "start": "687980",
    "end": "693530"
  },
  {
    "text": "then on to next so now we've got security I want this to be in a virtual",
    "start": "693530",
    "end": "699560"
  },
  {
    "text": "private cloud because I don't want this to be publicly available and then publicly accessible absolutely not even",
    "start": "699560",
    "end": "705920"
  },
  {
    "text": "that's inside the VPC the security I was going to go with the default and here",
    "start": "705920",
    "end": "711110"
  },
  {
    "text": "you can change your port you can change parameter groups so the settings on my sequel that you want to set you can",
    "start": "711110",
    "end": "716450"
  },
  {
    "text": "change that here's the encryption if you want to turn that on its simply changing that and then here's the maintenance",
    "start": "716450",
    "end": "722270"
  },
  {
    "text": "windows and backup retention so we can actually do backup retention for the nightly backups for 35 days and we also",
    "start": "722270",
    "end": "729440"
  },
  {
    "text": "support the ability to do snapshots by the user which will be retained until you delete them so once we've done that",
    "start": "729440",
    "end": "735980"
  },
  {
    "text": "launched the database instance and off it goes so we go back to the instances",
    "start": "735980",
    "end": "743060"
  },
  {
    "text": "you can see that my sequel one is saying creating and the Oracle one is modifying so do remind me to come back and show",
    "start": "743060",
    "end": "750080"
  },
  {
    "text": "you this actually work because we did this in KL and I forgot to come back alright so right let's go back to these",
    "start": "750080",
    "end": "756170"
  },
  {
    "text": "slides but you can see from doing that I've just gone and changed the whole",
    "start": "756170",
    "end": "763490"
  },
  {
    "text": "size of my oracle production environment and i'm creating a new database and i justed that in a couple of minutes",
    "start": "763490",
    "end": "769420"
  },
  {
    "text": "everything else is happening in the background and I can keep talking to you I can do something else so new database",
    "start": "769420",
    "end": "776990"
  },
  {
    "text": "amazon aurora so this is something that we've been looking at in the market and",
    "start": "776990",
    "end": "782480"
  },
  {
    "text": "saying or what a customer's looking for what's the feedback we're getting from our customers and the thing is that they",
    "start": "782480",
    "end": "789140"
  },
  {
    "text": "would like to have the performance and availability of the commercial engines",
    "start": "789140",
    "end": "794200"
  },
  {
    "text": "with the simplicity and the cost effectiveness of the open-source engines so we want that delivered as a managed",
    "start": "794200",
    "end": "801590"
  },
  {
    "text": "service as in RDS and make it Maya you are compatible so what are the types",
    "start": "801590",
    "end": "808399"
  },
  {
    "start": "808000",
    "end": "808000"
  },
  {
    "text": "of things that we've done to the database to make this different because obviously we're creating yet another database what's the value in what we've",
    "start": "808399",
    "end": "815149"
  },
  {
    "text": "done so the first thing is we've moved the logging and storage layer to its own",
    "start": "815149",
    "end": "820209"
  },
  {
    "text": "service so you can see here on the logging and storage in green that is",
    "start": "820209",
    "end": "825889"
  },
  {
    "text": "completely separate to the core database engine and the storage is not on the",
    "start": "825889",
    "end": "831259"
  },
  {
    "text": "instances that the database is running on the way that the storage works is",
    "start": "831259",
    "end": "836509"
  },
  {
    "text": "that when a change is made to the database only that change is sent down to the storage tier and the storage tear",
    "start": "836509",
    "end": "843319"
  },
  {
    "text": "rebuilds the blocks so it's very very efficient to actually store and manage",
    "start": "843319",
    "end": "850339"
  },
  {
    "text": "the whole environment not only that that storage is now across three availability",
    "start": "850339",
    "end": "856040"
  },
  {
    "text": "zones with two copies in each availability zone so it's highly highly durable and available now the other",
    "start": "856040",
    "end": "864259"
  },
  {
    "text": "thing is that we've made the whole operating environment use other amazon",
    "start": "864259",
    "end": "869540"
  },
  {
    "text": "services so you can see the control plane on the right hand side uses DynamoDB users see a simple workflow as",
    "start": "869540",
    "end": "876800"
  },
  {
    "text": "well as route 53 so we're using other amazon services to help control this",
    "start": "876800",
    "end": "882199"
  },
  {
    "text": "particular service and then we're also integrating the storage backup into s3",
    "start": "882199",
    "end": "889010"
  },
  {
    "text": "so you're getting that 11 nines of durability again by leveraging s3 for the backups the other one which you can",
    "start": "889010",
    "end": "895970"
  },
  {
    "text": "see which is slightly different up there the caching tear so the database cash is",
    "start": "895970",
    "end": "901130"
  },
  {
    "text": "a separate process this is very important so if you have a crash in the",
    "start": "901130",
    "end": "907220"
  },
  {
    "text": "database engine or you need to restart a database for whatever reason typically you shut down everything and all the",
    "start": "907220",
    "end": "913819"
  },
  {
    "text": "memory data is lost everything is obviously on disk it's all committed and saved but if you then start that",
    "start": "913819",
    "end": "919850"
  },
  {
    "text": "database again you get effectively a brownout because all of the data has to come from the disk and come back into",
    "start": "919850",
    "end": "926209"
  },
  {
    "text": "memory as the application starts working so what we've actually done is made the cache a separate process so that when",
    "start": "926209",
    "end": "932899"
  },
  {
    "text": "you restart a database the data is already there so it becomes very very effective to",
    "start": "932899",
    "end": "938750"
  },
  {
    "text": "and to get up and running again when there are issues here's a comparison of",
    "start": "938750",
    "end": "944900"
  },
  {
    "text": "how Aurora works with my sequel in a multi AZ environment on RDS so you can",
    "start": "944900",
    "end": "951860"
  },
  {
    "text": "see the amount of Io is dramatically reduced here so you've got a primary instance sanding all of the logs across",
    "start": "951860",
    "end": "959090"
  },
  {
    "text": "to the secondary engines which which is then applying all of the operations or the right operations on that and we'll",
    "start": "959090",
    "end": "965660"
  },
  {
    "text": "look sending that down to disk just as the primary did and EBS will have multiple copies of data so that has to",
    "start": "965660",
    "end": "971240"
  },
  {
    "text": "happen there as well there's a lot of i/o and attack an activity happening in a traditional environment if we come",
    "start": "971240",
    "end": "977060"
  },
  {
    "text": "over here to Aurora you're seeing the three is availability zones with the storage service across each of those the",
    "start": "977060",
    "end": "984350"
  },
  {
    "text": "data is written from the primary instance down to the storage and then it's automatically propagated across the",
    "start": "984350",
    "end": "990050"
  },
  {
    "text": "other availability zones what this means is if you have a read replica that now",
    "start": "990050",
    "end": "995120"
  },
  {
    "text": "becomes your standby but it's something you can use right it's not just being there redundantly being used waiting for",
    "start": "995120",
    "end": "1001450"
  },
  {
    "text": "a failure event the read replica also is operating off the same storage as the",
    "start": "1001450",
    "end": "1007120"
  },
  {
    "text": "master there's no need to send all of the logs and information across to the standby instance or in this place a read",
    "start": "1007120",
    "end": "1013780"
  },
  {
    "text": "replica what actually happens there is that you are now getting very low",
    "start": "1013780",
    "end": "1019030"
  },
  {
    "text": "latency read replicas that are operating off the same storage so the key features",
    "start": "1019030",
    "end": "1024760"
  },
  {
    "text": "for Aurora highly available as I mentioned with the six copies of storage across three azs no more my sequel",
    "start": "1024760",
    "end": "1032860"
  },
  {
    "text": "replica lag at a scale that what you would have seen typically so previously 2000i ops we start to see traditionally",
    "start": "1032860",
    "end": "1040300"
  },
  {
    "text": "my sequel with the lag going up and some customers end up at peak times with you know lag operating in the minutes here",
    "start": "1040300",
    "end": "1047709"
  },
  {
    "text": "we're talking in the milliseconds so auto scaling of storage for I ops and capacity it basically will give you what",
    "start": "1047709",
    "end": "1054760"
  },
  {
    "text": "you need when you need it and the storage and 10 gig increments and the I ops will be delivered in terms of the",
    "start": "1054760",
    "end": "1060100"
  },
  {
    "text": "performance that you need you don't have to specify that it's parallel and distributed and a synchronous recovery",
    "start": "1060100",
    "end": "1066420"
  },
  {
    "text": "so we've improved the way that we recover a database typically with my sequel it's a single",
    "start": "1066420",
    "end": "1072580"
  },
  {
    "text": "threaded recovery and that means the delay can be quite long as it's applying all the logs that have happened from a",
    "start": "1072580",
    "end": "1078340"
  },
  {
    "text": "multi-core machine then also as I mentioned the survival caches so no",
    "start": "1078340",
    "end": "1083470"
  },
  {
    "text": "brown outs and a faster more predictable failover as a result and it's actually cheaper at scale so if you have a server",
    "start": "1083470",
    "end": "1090580"
  },
  {
    "text": "today with a master a slave and read replicas and you bring that to Aurora",
    "start": "1090580",
    "end": "1095830"
  },
  {
    "text": "you're going to find that the performance is better you'll need smaller servers and you don't need that slave you could just use rear applicants",
    "start": "1095830",
    "end": "1103360"
  },
  {
    "text": "and those read replicas are going to perform better as well because they're just doing reads not having to apply the rights so looking at the features of",
    "start": "1103360",
    "end": "1110350"
  },
  {
    "start": "1110000",
    "end": "1110000"
  },
  {
    "text": "what we have for RDS across all the different engines you can see the big ones that stand out in the storage we",
    "start": "1110350",
    "end": "1116409"
  },
  {
    "text": "can support up to 64 terabytes for Aurora and at the other end on sequel server where it 4 terabytes or the Linux",
    "start": "1116409",
    "end": "1122980"
  },
  {
    "text": "based ones all of the other engines are all on 6 terabytes looking at read",
    "start": "1122980",
    "end": "1128440"
  },
  {
    "text": "replicas we do support read what occurs with oracle goldengate but we do not",
    "start": "1128440",
    "end": "1133899"
  },
  {
    "text": "support that natively in the RDS environment which we do with the other engines so there's a couple of",
    "start": "1133899",
    "end": "1139929"
  },
  {
    "text": "differences and things across the engines but we're completely trying to get there and provide a consistent",
    "start": "1139929",
    "end": "1145659"
  },
  {
    "text": "platform for all of the database engines so watch this space we're continually improving things so moving on to a",
    "start": "1145659",
    "end": "1153519"
  },
  {
    "text": "lesser cash remember this is our cashing service again managed and it supports",
    "start": "1153519",
    "end": "1158649"
  },
  {
    "text": "memcache and Redis so why would you want to look at in memory well if you're",
    "start": "1158649",
    "end": "1165029"
  },
  {
    "start": "1161000",
    "end": "1161000"
  },
  {
    "text": "doing IOT or you're looking at the environment of what's happening out there today phones tablets car's air",
    "start": "1165029",
    "end": "1172510"
  },
  {
    "text": "conditioners and even posters their reckon are all becoming connected there's and they've got to be able to",
    "start": "1172510",
    "end": "1178029"
  },
  {
    "text": "respond very quickly so there's a demand for real-time performance and things",
    "start": "1178029",
    "end": "1183700"
  },
  {
    "text": "like online games as well as e-commerce and social apps are demanding faster and",
    "start": "1183700",
    "end": "1189639"
  },
  {
    "text": "faster performance so also we're going to have applications where we get huge loads of users coming in at certain",
    "start": "1189639",
    "end": "1196179"
  },
  {
    "text": "peaks and they can't necessarily be retrieving data from disk it has to be in memory to make it faster and scalable",
    "start": "1196179",
    "end": "1202750"
  },
  {
    "text": "because the database is often the bottle so what's it good for really small",
    "start": "1202750",
    "end": "1208630"
  },
  {
    "text": "frequently used items are great to put into a cache that avoids the data having",
    "start": "1208630",
    "end": "1215650"
  },
  {
    "text": "to be either written or read from the database tier and reduces the hot spots",
    "start": "1215650",
    "end": "1221470"
  },
  {
    "text": "that you actually have on traditional environments so this is a very common use case where we see things like my",
    "start": "1221470",
    "end": "1228640"
  },
  {
    "text": "sequel with memcache in front of it for a web-based application and memcache acts as a session store or a store for",
    "start": "1228640",
    "end": "1235780"
  },
  {
    "text": "very common objects which are constantly being accessed and that can really help scale your applications quite a long way",
    "start": "1235780",
    "end": "1242490"
  },
  {
    "start": "1242000",
    "end": "1242000"
  },
  {
    "text": "so if we look here at what the different options are memcache is in memory it is",
    "start": "1242490",
    "end": "1249880"
  },
  {
    "text": "multi-threaded and multi-core so you can really get quite a lot of scale even on large servers with a large amount of",
    "start": "1249880",
    "end": "1255910"
  },
  {
    "text": "memory and throughput on the CPUs often you'll get to a point where the network",
    "start": "1255910",
    "end": "1261070"
  },
  {
    "text": "will be the bottleneck of how much you can push through there is no persistence so you have to make sure that you design",
    "start": "1261070",
    "end": "1267460"
  },
  {
    "text": "your applications that if it's not in the cache that you go back to the database and get it if you're doing a traditional database related call",
    "start": "1267460",
    "end": "1273420"
  },
  {
    "text": "because if the server goes down your application still has to run it supports",
    "start": "1273420",
    "end": "1278920"
  },
  {
    "text": "string values so basically put your string data in get your string data out",
    "start": "1278920",
    "end": "1284020"
  },
  {
    "text": "very simple very fast and it now supports horizontal clustering and we do",
    "start": "1284020",
    "end": "1289870"
  },
  {
    "text": "support across availability zones as well on the reddest side it's also in",
    "start": "1289870",
    "end": "1295510"
  },
  {
    "text": "memory but it is single threaded so there's not really much value and going",
    "start": "1295510",
    "end": "1301120"
  },
  {
    "text": "out and getting a 32 virtual CPU monster from us and putting Redis on that because you're not going to get the",
    "start": "1301120",
    "end": "1307840"
  },
  {
    "text": "scale of what you can get with memcache because it's single threaded does",
    "start": "1307840",
    "end": "1313510"
  },
  {
    "text": "support read replicas low so that allows you to then offer master take some of the read operations and allow the",
    "start": "1313510",
    "end": "1319270"
  },
  {
    "text": "reddest master to deal with the rights also it does support a limited form of",
    "start": "1319270",
    "end": "1324490"
  },
  {
    "text": "persistence so you can save data and allow that then to be used to launch",
    "start": "1324490",
    "end": "1329710"
  },
  {
    "text": "other instances or to recover from data loss and it has some interesting data",
    "start": "1329710",
    "end": "1335950"
  },
  {
    "text": "types as well as the capability to do pub/sub messaging so there's a lot",
    "start": "1335950",
    "end": "1341230"
  },
  {
    "text": "more advanced features on Redis than what there is on memcache but if you really just need a simple cash memcache",
    "start": "1341230",
    "end": "1347230"
  },
  {
    "text": "is probably more ideal if you need things like pub/sub ordered sets and other more advanced data types and",
    "start": "1347230",
    "end": "1353290"
  },
  {
    "text": "features Redis is the way to go if we",
    "start": "1353290",
    "end": "1359140"
  },
  {
    "text": "look at the next service which is dynamodb this is our no sequel database",
    "start": "1359140",
    "end": "1364270"
  },
  {
    "text": "offering it is designed for tier 1 applications it's highly highly",
    "start": "1364270",
    "end": "1369460"
  },
  {
    "text": "available and highly durable a lot of amazon services are built upon dynamodb",
    "start": "1369460",
    "end": "1376030"
  },
  {
    "text": "it's hugely durable and very very low latency and we'll go into that in a bit",
    "start": "1376030",
    "end": "1382150"
  },
  {
    "text": "more detail so from a scalability perspective here you can actually have a",
    "start": "1382150",
    "end": "1389500"
  },
  {
    "text": "table defined in the database and you specify how many read and write operations you want on that table at",
    "start": "1389500",
    "end": "1396270"
  },
  {
    "text": "some point you could simply have five units per second of read operations on",
    "start": "1396270",
    "end": "1401770"
  },
  {
    "text": "that if you want to then change that to 1 million reads you can and you can simply update that table and say right",
    "start": "1401770",
    "end": "1408400"
  },
  {
    "text": "and instead of having 5 read operations per second I now want to bring this up to 1 million and we'll manage all of",
    "start": "1408400",
    "end": "1415480"
  },
  {
    "text": "that complexity behind the scenes so those of you who uses like Cassandra or",
    "start": "1415480",
    "end": "1420520"
  },
  {
    "text": "MongoDB on physical infrastructure or even on AWS think about the processes that you would have to go through to",
    "start": "1420520",
    "end": "1426580"
  },
  {
    "text": "move from that low level of throughput to a huge amount there's a lot of work involved and we're DynamoDB we take care",
    "start": "1426580",
    "end": "1432820"
  },
  {
    "text": "of that for you it's also very consistent so at any scale even when",
    "start": "1432820",
    "end": "1437950"
  },
  {
    "text": "you're doing that operation to change from 5 to 1 million or if you've got a huge amount of traffic coming in the",
    "start": "1437950",
    "end": "1443799"
  },
  {
    "text": "latency is flat I've got a slide coming up on that to show that it's highly",
    "start": "1443799",
    "end": "1449140"
  },
  {
    "text": "highly durable three physical separate locations stored on SSDs so when you",
    "start": "1449140",
    "end": "1457480"
  },
  {
    "text": "commit something it's guaranteed to be on two SSDs eventually consistent on three therefore you've got a highly",
    "start": "1457480",
    "end": "1464110"
  },
  {
    "text": "durable database operating at massive scale with low latency the API is quite",
    "start": "1464110",
    "end": "1469870"
  },
  {
    "text": "simple I mean it's a no sequel type database so you are going to create a table modify a table as well as do puts and gets and",
    "start": "1469870",
    "end": "1476860"
  },
  {
    "text": "that's no fundamentally there's some new things we better recently like streams but it's a very simple environment it",
    "start": "1476860",
    "end": "1484030"
  },
  {
    "text": "also supports both document as well as key value so you can store JSON documents and put them inside a dynamic",
    "start": "1484030",
    "end": "1491620"
  },
  {
    "text": "dynamodb today as well there are no table size and no through port limits",
    "start": "1491620",
    "end": "1498030"
  },
  {
    "text": "okay just think about that anyone play fruit ninja slicing the fruit yeah all",
    "start": "1498030",
    "end": "1506230"
  },
  {
    "text": "of that runs it's backed up by DynamoDB anyone ordered stuff on amazon com you",
    "start": "1506230",
    "end": "1513160"
  },
  {
    "text": "put things in your shopping cart come back three months later still there it's",
    "start": "1513160",
    "end": "1519100"
  },
  {
    "text": "in dynamo ok so there's those types of applications out there that need a highly durable data very reliable",
    "start": "1519100",
    "end": "1525460"
  },
  {
    "text": "massively scalable here is a graph showing you this is the latency here you",
    "start": "1525460",
    "end": "1530890"
  },
  {
    "text": "can see how flat that is over a period of time and the different volume of traffic coming in to dynamo dB at that",
    "start": "1530890",
    "end": "1536950"
  },
  {
    "text": "time so looking at popular use cases adtec we see this where there's a huge",
    "start": "1536950",
    "end": "1545020"
  },
  {
    "start": "1540000",
    "end": "1540000"
  },
  {
    "text": "demand for largely scalable databases with very low latency and consistent latency if you're looking at IOT being",
    "start": "1545020",
    "end": "1553300"
  },
  {
    "text": "able to stream data into a highly performant database and be able to scale that amount up and down as needed for",
    "start": "1553300",
    "end": "1559590"
  },
  {
    "text": "gaming and we've worked with goomy here in Singapore to be able to scale their",
    "start": "1559590",
    "end": "1564940"
  },
  {
    "text": "games especially user management and session information and making sure that in a scalable database to deal with",
    "start": "1564940",
    "end": "1570280"
  },
  {
    "text": "promotions and huge amounts of traffic coming in and then also on the website storing user session information",
    "start": "1570280",
    "end": "1576460"
  },
  {
    "text": "profiles etc and making that really really scalable so moving from dynamo",
    "start": "1576460",
    "end": "1582310"
  },
  {
    "text": "onto redshift this is our relational data warehouse for data warehousing at",
    "start": "1582310",
    "end": "1588100"
  },
  {
    "text": "huge scale yeah so massively parallel patter bite scale database again managed",
    "start": "1588100",
    "end": "1594550"
  },
  {
    "text": "service we have two options one is a hard drive magnetic option the other one is based on SSD so you can start if you",
    "start": "1594550",
    "end": "1603070"
  },
  {
    "text": "optimize fully at about a thousand dollars per 10 byte per year so if you compare that for",
    "start": "1603070",
    "end": "1609940"
  },
  {
    "text": "people who are using you know a teaser Oracle Exadata teradata etc and other appliances with what pricing you can",
    "start": "1609940",
    "end": "1616840"
  },
  {
    "text": "actually get there with what we can offer here you should find that that's extremely favorable also you can't just",
    "start": "1616840",
    "end": "1623530"
  },
  {
    "text": "start at 25 cents an hour and that's a really compelling way to get started and",
    "start": "1623530",
    "end": "1629290"
  },
  {
    "text": "see if it works for you so key features here petter by scale data warehouse from",
    "start": "1629290",
    "end": "1636640"
  },
  {
    "text": "160 gigs up to two petabytes we actually have a customer in Japan NTT DoCoMo who",
    "start": "1636640",
    "end": "1643750"
  },
  {
    "text": "is storing to petabytes of data in red shift today and doing analytics on that",
    "start": "1643750",
    "end": "1648820"
  },
  {
    "text": "you can actually read about what they're doing on our website they have here the",
    "start": "1648820",
    "end": "1653830"
  },
  {
    "text": "ability to do very fast parallel execution across the nodes of the cluster and it's on compressed sorted",
    "start": "1653830",
    "end": "1661780"
  },
  {
    "text": "data and optimized hardware to deal with that so we're creating a variant where",
    "start": "1661780",
    "end": "1668140"
  },
  {
    "text": "it's a managed service with specific harder to prepare to really deliver well on this as I mentioned you can start",
    "start": "1668140",
    "end": "1674620"
  },
  {
    "text": "from very low price and you can scale up as you need it so you could start with",
    "start": "1674620",
    "end": "1679660"
  },
  {
    "text": "say a single node and the next thing you know you could be at 16 nodes 32 nodes and you can keep scaling that up as you",
    "start": "1679660",
    "end": "1687010"
  },
  {
    "text": "need more capacity it is managed so it's easy to provision just as like a waste",
    "start": "1687010",
    "end": "1692050"
  },
  {
    "text": "showed you for RDS the same type of approach come in declare what you want and off you go so if you needed a 100",
    "start": "1692050",
    "end": "1699070"
  },
  {
    "text": "terabyte data warehouse as simple as going in the console declaring what you need and a few minutes later you're going to get that available for you",
    "start": "1699070",
    "end": "1706110"
  },
  {
    "text": "there is a huge focus on security inside redshift so whether you're loading data",
    "start": "1706110",
    "end": "1712480"
  },
  {
    "text": "it can be securely loaded in encrypted it the access to redshift it can be done",
    "start": "1712480",
    "end": "1719290"
  },
  {
    "text": "through SSL so you're only coming into the leader node and getting access to that the storage nodes below that you",
    "start": "1719290",
    "end": "1726070"
  },
  {
    "text": "don't even have access to those it's all managed by the service so the backups",
    "start": "1726070",
    "end": "1731110"
  },
  {
    "text": "are also encrypted and there's logging and all team there as well really moving",
    "start": "1731110",
    "end": "1736930"
  },
  {
    "text": "very fast on the features with redshift as well since launched over a hundred new features and",
    "start": "1736930",
    "end": "1741940"
  },
  {
    "text": "improvements being made to the service and you can see if you go and look at the history some of these are major",
    "start": "1741940",
    "end": "1747010"
  },
  {
    "text": "improvements in terms of features and functions and a large seekers ecosystem as well so data integration providers as",
    "start": "1747010",
    "end": "1754030"
  },
  {
    "text": "well as visualization providers so tableau click informatica talent etc and",
    "start": "1754030",
    "end": "1759370"
  },
  {
    "text": "there's many more do support to this now I want to talk about one customer which happens to be amazon.com they do a lot",
    "start": "1759370",
    "end": "1768070"
  },
  {
    "text": "of weblog annal analytics because as you know we're pretty famous for doing a good recommendation engine now if you",
    "start": "1768070",
    "end": "1775990"
  },
  {
    "text": "look at going through the data here we've got one terabyte plus workloads oh sorry petabyte two terabytes a day",
    "start": "1775990",
    "end": "1782770"
  },
  {
    "text": "coming in and growing at sixty-seven percent year-on-year the largest table",
    "start": "1782770",
    "end": "1788470"
  },
  {
    "text": "alone is 400 terabytes so this is pretty big scale so we want to understand customer behavior and how customers are",
    "start": "1788470",
    "end": "1795490"
  },
  {
    "text": "using our website we had a legacy data warehouse that could process one weeks",
    "start": "1795490",
    "end": "1801040"
  },
  {
    "text": "of data in one hour moving that to Hadoop to see what we could achieve",
    "start": "1801040",
    "end": "1806830"
  },
  {
    "text": "there we were able to query one month's worth of data in that same hour which is",
    "start": "1806830",
    "end": "1812440"
  },
  {
    "text": "quite a good improvement for redshift we were able to query 15 months of data one",
    "start": "1812440",
    "end": "1818260"
  },
  {
    "text": "petabyte in 14 minutes that's huge improvement we have to load five billion",
    "start": "1818260",
    "end": "1825309"
  },
  {
    "text": "rows in 10 minutes we're also able to cut the pipeline down which was on",
    "start": "1825309",
    "end": "1831850"
  },
  {
    "text": "Oracle 90 hours to eight hours and totally we're using 64 clusters 800",
    "start": "1831850",
    "end": "1838450"
  },
  {
    "text": "nodes across those clusters 13 petabytes provisioned with two DBAs again that",
    "start": "1838450",
    "end": "1846550"
  },
  {
    "text": "shows you the power of managed services on from an operational perspective people are now able to add value and do",
    "start": "1846550",
    "end": "1853990"
  },
  {
    "text": "analytics and present things back to the business rather than having to manage the infrastructure so that's it for the",
    "start": "1853990",
    "end": "1860950"
  },
  {
    "text": "managed services but what if you have something that doesn't fit into the requirements for RDS celesta cash",
    "start": "1860950",
    "end": "1866020"
  },
  {
    "text": "DynamoDB or redshift well the good thing is you can also run databases on ec2 if",
    "start": "1866020",
    "end": "1872470"
  },
  {
    "start": "1869000",
    "end": "1869000"
  },
  {
    "text": "it runs on Windows or linux pretty much you're going to be able to run that on the ec2 platform and",
    "start": "1872470",
    "end": "1878109"
  },
  {
    "text": "we have a mis Amazon machine images for Oracle sequel server MongoDB and other",
    "start": "1878109",
    "end": "1883599"
  },
  {
    "text": "providers as well they're also white papers so if you want to know how to run these very efficiently with best",
    "start": "1883599",
    "end": "1889479"
  },
  {
    "text": "practices there are white papers available for you to do that so why would you do this well there's no managed service for something MongoDB",
    "start": "1889479",
    "end": "1896049"
  },
  {
    "text": "for example we don't offer a managed service at this time maybe you want full control some things you can't do an RDS",
    "start": "1896049",
    "end": "1902349"
  },
  {
    "text": "like access the file system and those types of things you may want to be able to do that or you simply exceeded the",
    "start": "1902349",
    "end": "1907749"
  },
  {
    "text": "limits maybe you need on sequel server more than 4 terabytes where you can still do that on ec2 so how do you get",
    "start": "1907749",
    "end": "1913929"
  },
  {
    "text": "there luckily we just announced the news service recently been going back into the middle of March called the database",
    "start": "1913929",
    "end": "1920379"
  },
  {
    "text": "migration service and this starts your first migration in 10 minutes it keeps your apps running during the migration",
    "start": "1920379",
    "end": "1926979"
  },
  {
    "text": "and you can replicate from on-prem to amazon from amazon back to 1pm or within",
    "start": "1926979",
    "end": "1934119"
  },
  {
    "text": "a day WS infrastructure as well you can move data from the same databases or",
    "start": "1934119",
    "end": "1941799"
  },
  {
    "text": "heterogeneous lee between the databases that we have listed up there so that",
    "start": "1941799",
    "end": "1947919"
  },
  {
    "text": "allows you to do things like take data from Oracle on Prem and move that say",
    "start": "1947919",
    "end": "1952989"
  },
  {
    "text": "into postgres for reporting in the cloud or maybe you want to take data from any database or a series of databases",
    "start": "1952989",
    "end": "1958989"
  },
  {
    "text": "consolidate that and put it into redshift for analytics maybe you just want to move systems sequel server to",
    "start": "1958989",
    "end": "1964450"
  },
  {
    "text": "sequel server oracle to oracle and move them one-off migrations so we can support one of migrations as well as",
    "start": "1964450",
    "end": "1970869"
  },
  {
    "text": "constant migrations so how does it work we have your application there starting",
    "start": "1970869",
    "end": "1976479"
  },
  {
    "start": "1972000",
    "end": "1972000"
  },
  {
    "text": "and replication instance inside AWS on the right then you come along and you",
    "start": "1976479",
    "end": "1982719"
  },
  {
    "text": "connect the databases and say this is the source and this is the target then you choose the tables the schemas or the",
    "start": "1982719",
    "end": "1989469"
  },
  {
    "text": "whole database to move and after that we're going to bring the data across in bulk mode doing selects on the tables",
    "start": "1989469",
    "end": "1996549"
  },
  {
    "text": "you've selected and then we move to CDC change data capture so any other",
    "start": "1996549",
    "end": "2001799"
  },
  {
    "text": "transactions that are happening will be propagated across onto the target database as well so this allows you to",
    "start": "2001799",
    "end": "2007500"
  },
  {
    "text": "have very limited down time and when you're moving to AWS so you simply then once you've caught up move the",
    "start": "2007500",
    "end": "2014130"
  },
  {
    "text": "application to point to the new system in AWS and you're done now this is very cost-effective looking at pricing here",
    "start": "2014130",
    "end": "2021570"
  },
  {
    "text": "of about one point eight cents on a t2 going up to 115 point four cents on a c4",
    "start": "2021570",
    "end": "2030510"
  },
  {
    "text": "live so depending on how much data you're going to be processing you can do this now it comes with some storage we",
    "start": "2030510",
    "end": "2036150"
  },
  {
    "text": "do need some storage capacity on the instance we don't believe you'll need more than this and that's just for bringing the data in processing it and",
    "start": "2036150",
    "end": "2042030"
  },
  {
    "text": "then sending it out to the target database data transfer inbound to AWS is",
    "start": "2042030",
    "end": "2047490"
  },
  {
    "text": "free and data across availability zones if you're moving data from one to the other is roughly around point or sorry",
    "start": "2047490",
    "end": "2055080"
  },
  {
    "text": "one cent per gigabyte so that's great that addresses data movement but then what about if we want to do schema",
    "start": "2055080",
    "end": "2063000"
  },
  {
    "start": "2063000",
    "end": "2063000"
  },
  {
    "text": "conversion we also have a tool for that so this helps you move the core schema",
    "start": "2063000",
    "end": "2069090"
  },
  {
    "text": "the database objects the store procedures and so forth and bring them from Oracle postgres sequel server my",
    "start": "2069090",
    "end": "2076138"
  },
  {
    "text": "sequel to the open-source engines on the other side because we're trying to save you money we're not going to allow you",
    "start": "2076139",
    "end": "2082169"
  },
  {
    "text": "to go to from post costa most my sequel to oracle or sequel server okay so there",
    "start": "2082169",
    "end": "2087628"
  },
  {
    "text": "are already tools to help you do that out there anyway so we've got sequences all the way down there to views at the",
    "start": "2087629",
    "end": "2093388"
  },
  {
    "text": "bottom you can read that as well as I can and this allows you to do those conversions and it gives you information",
    "start": "2093389",
    "end": "2098580"
  },
  {
    "text": "on what's missing and what's wrong so what I want to say here is that this is",
    "start": "2098580",
    "end": "2104760"
  },
  {
    "text": "not a push button off you go everything's done yeah so there will be",
    "start": "2104760",
    "end": "2109800"
  },
  {
    "text": "differences on here and there will be some things that do not migrate from this side over to that site but it's",
    "start": "2109800",
    "end": "2114810"
  },
  {
    "text": "going to help you do that process also it does have a report and in this report",
    "start": "2114810",
    "end": "2121500"
  },
  {
    "text": "it does the analysis so you can define the project and determine what is the amount of scope of work for the",
    "start": "2121500",
    "end": "2127350"
  },
  {
    "text": "migration project so do keep that in mind now I'm just going to go quickly back to the demo and hopefully",
    "start": "2127350",
    "end": "2134160"
  },
  {
    "text": "everything has happened smoothly before",
    "start": "2134160",
    "end": "2139170"
  },
  {
    "text": "we finish look at that available okay so that change remember i created this instance",
    "start": "2139170",
    "end": "2145769"
  },
  {
    "text": "you can see we created this we've backed up the database we finished it backing it up so that was from 10 to see I said",
    "start": "2145769",
    "end": "2152579"
  },
  {
    "text": "six minutes look at that six minutes exactly and here with the Oracle database you can see that we've made the",
    "start": "2152579",
    "end": "2161099"
  },
  {
    "text": "failover start here it's gone through all the different processes and finished that now look here at this point so",
    "start": "2161099",
    "end": "2167670"
  },
  {
    "text": "here's the modification two minutes sorry 2004 p.m. and then we finish that",
    "start": "2167670",
    "end": "2172739"
  },
  {
    "text": "whole process at 222 but remember the downtime is only the failover time so 60",
    "start": "2172739",
    "end": "2178470"
  },
  {
    "text": "to 90 seconds to do that whole change thank you very much",
    "start": "2178470",
    "end": "2183859"
  }
]