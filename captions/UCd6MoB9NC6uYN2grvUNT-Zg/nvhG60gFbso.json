[
  {
    "text": "Welcome to 'This is My Architecture'.",
    "start": "7677",
    "end": "9283"
  },
  {
    "text": "Today, I have with me Ronny from JFrog.\n Hi, Ronny.",
    "start": "9382",
    "end": "12254"
  },
  {
    "text": "Hi, Boaz.\nTell us a bit about JFrog.",
    "start": "12254",
    "end": "14611"
  },
  {
    "text": "JFrog is an AWS ISV Accelerate partner.",
    "start": "14945",
    "end": "17791"
  },
  {
    "text": "We develop DevOps platform services \nthat enable an end-to-end flow of binaries,",
    "start": "18178",
    "end": "22727"
  },
  {
    "text": "from build, and development stages \nall the way to production.",
    "start": "22727",
    "end": "26275"
  },
  {
    "text": "This includes our main service, \n a service most people are familiar with, JFrog Artifactory,",
    "start": "26752",
    "end": "31985"
  },
  {
    "text": "but also vulnerability scanning tools, \nCI/CD tools,",
    "start": "32258",
    "end": "35602"
  },
  {
    "text": "and solutions for software distribution.",
    "start": "35816",
    "end": "38417"
  },
  {
    "text": "Cool, so I know JFrog for a long time,",
    "start": "38603",
    "end": "40265"
  },
  {
    "text": "and I know that a lot of your customers\nare using JFrog on-premises,",
    "start": "40265",
    "end": "43677"
  },
  {
    "text": "but today we'd like to focus \non your software as a service offering.",
    "start": "43976",
    "end": "46689"
  },
  {
    "text": "Can you walk us \nthrough the architecture of your SaaS solution?",
    "start": "46861",
    "end": "49427"
  },
  {
    "text": "Sure.",
    "start": "49510",
    "end": "50231"
  },
  {
    "text": "Our customers who wish \nto use our SaaS offering,",
    "start": "50342",
    "end": "52780"
  },
  {
    "text": "can go to our website \nand using a self-service process,",
    "start": "52780",
    "end": "56378"
  },
  {
    "text": "receive a unique environment \nunder a unique domain,",
    "start": "56378",
    "end": "60028"
  },
  {
    "text": "in JFrog.io.",
    "start": "60998",
    "end": "63082"
  },
  {
    "text": "The environment is publicly accessible,",
    "start": "63082",
    "end": "65558"
  },
  {
    "text": "its request goes to our public NLB,",
    "start": "65739",
    "end": "70130"
  },
  {
    "text": "and into our EKS cluster,",
    "start": "70357",
    "end": "72878"
  },
  {
    "text": "and their unique, isolated customer namespace,",
    "start": "72878",
    "end": "77904"
  },
  {
    "text": "again, based on the domain.",
    "start": "78207",
    "end": "79846"
  },
  {
    "text": "This is how I can get to my Artifactory. \nSure.",
    "start": "80195",
    "end": "82775"
  },
  {
    "text": "What can I do with that?",
    "start": "82775",
    "end": "83886"
  },
  {
    "text": "So Artifactory is a universal \nbinary repository manager,",
    "start": "84072",
    "end": "87625"
  },
  {
    "text": "our customer use it in order to manage \nand distribute your artifacts.",
    "start": "87861",
    "end": "92514"
  },
  {
    "text": "That could be any type of artifacts,",
    "start": "92514",
    "end": "94449"
  },
  {
    "text": "from any type of environment \nor in between environments.",
    "start": "94474",
    "end": "97874"
  },
  {
    "text": "And we can take a Docker pull example, \njust to emphasize the process.",
    "start": "98724",
    "end": "103185"
  },
  {
    "text": "So we have a customer running \na Docker pull command against its own environment,",
    "start": "103501",
    "end": "108441"
  },
  {
    "text": "adding Docker repo name, \nand the image name.",
    "start": "108736",
    "end": "112800"
  },
  {
    "text": "The request goes, again, the same flow,\npublic NLB, EKS and Artifactory.",
    "start": "113060",
    "end": "117832"
  },
  {
    "text": "And once it reaches Artifactory,",
    "start": "117832",
    "end": "119472"
  },
  {
    "text": "it's utilizing RDS in order to gain \nmetadata information on the relevant artifacts.",
    "start": "120029",
    "end": "126963"
  },
  {
    "text": "Reaching to S3,",
    "start": "127458",
    "end": "129177"
  },
  {
    "text": "S3 would hold \nseveral Docker layers in our example.",
    "start": "129761",
    "end": "133942"
  },
  {
    "text": "There could be additional types, \nsuch as generic files, jars, et cetera.",
    "start": "133942",
    "end": "139157"
  },
  {
    "text": "And then they're served back to Artifactory \nand to the customer.",
    "start": "140156",
    "end": "145020"
  },
  {
    "text": "Okay, so now I can use my files, \nI can deploy them anywhere.",
    "start": "145274",
    "end": "149920"
  },
  {
    "text": "But this is a general example for any user,\nwhat if I'm an AWS customer?",
    "start": "149920",
    "end": "153431"
  },
  {
    "text": "Or, for example, I want to access my Artifactory \nwithout going through the public Internet?",
    "start": "153551",
    "end": "158155"
  },
  {
    "text": "How can you help me with that?",
    "start": "158155",
    "end": "159395"
  },
  {
    "text": "Our AWS customers have a unique advantage \nby using AWS PrivateLink.",
    "start": "159878",
    "end": "164346"
  },
  {
    "text": "It provides us a non-public and hence more fast, \nsecure and cost-effective environment.",
    "start": "164529",
    "end": "170685"
  },
  {
    "text": "Okay, that sounds cool, how can I set it up?",
    "start": "171012",
    "end": "172929"
  },
  {
    "text": "So our customers who wish to use it, \nwould set up a VPC endpoint on their end,",
    "start": "173108",
    "end": "177887"
  },
  {
    "text": "and connect their production environment,",
    "start": "178126",
    "end": "180498"
  },
  {
    "text": "then redirect traffic using a specialized \nprivate endpoint subdomain.",
    "start": "180950",
    "end": "185258"
  },
  {
    "text": "So we will have the environment name,",
    "start": "185258",
    "end": "187993"
  },
  {
    "text": ".pe.JFrog.io.",
    "start": "188741",
    "end": "191931"
  },
  {
    "text": "Connecting to our VPC PrivateLink on our end",
    "start": "192933",
    "end": "196408"
  },
  {
    "text": "into our private NLB,",
    "start": "197229",
    "end": "198899"
  },
  {
    "text": "and then it behaves the same.",
    "start": "199213",
    "end": "200838"
  },
  {
    "text": "So now the entire process \nis fully secured end to end.",
    "start": "200932",
    "end": "204431"
  },
  {
    "text": "This is a top priority for our customers, ",
    "start": "204730",
    "end": "206857"
  },
  {
    "text": "such as financial industries, \nwhich are highly regulated.",
    "start": "206857",
    "end": "210140"
  },
  {
    "text": "Okay, what other advantages \ndo I get from this setup?",
    "start": "210714",
    "end": "213881"
  },
  {
    "text": "There are less public components involved, \nso there's much less latency.",
    "start": "213893",
    "end": "217898"
  },
  {
    "text": "What about cost?",
    "start": "217898",
    "end": "219017"
  },
  {
    "text": "Cost is also a great side effect \nof this architecture.",
    "start": "219316",
    "end": "221907"
  },
  {
    "text": "Since we're running on the same AWS region, \ncost for traffic is much less expensive.",
    "start": "222056",
    "end": "227260"
  },
  {
    "text": "Okay, let's make it a bit more complicated.",
    "start": "227260",
    "end": "229789"
  },
  {
    "text": "Let's say that I have \nan additional environment running on-premises,",
    "start": "230067",
    "end": "233064"
  },
  {
    "text": "so an additional production environment \nrunning on my servers in my own data center.",
    "start": "233064",
    "end": "236573"
  },
  {
    "text": "How can I use this architecture \nto enjoy the same benefits?",
    "start": "236574",
    "end": "240061"
  },
  {
    "text": "So suppose our customers \nwould like to connect ",
    "start": "240460",
    "end": "242961"
  },
  {
    "text": "their AWS VPC to an on-premises workload,",
    "start": "242961",
    "end": "247358"
  },
  {
    "text": "suppose it's a production environment,",
    "start": "247358",
    "end": "249342"
  },
  {
    "text": "they can use Direct Connect, \nwith or without Transit Gateway,",
    "start": "249473",
    "end": "253496"
  },
  {
    "text": "and consume VPC endpoint \nand the rest of the services as they did before.",
    "start": "253929",
    "end": "259349"
  },
  {
    "text": "It will connect the VPC \nand bring it closer to their workload.",
    "start": "259349",
    "end": "263267"
  },
  {
    "text": "And obviously, it can be the same VPC,\nit can be a separate VPC,",
    "start": "263267",
    "end": "265872"
  },
  {
    "text": "or multiple VPCs. \nSure.",
    "start": "265872",
    "end": "267339"
  },
  {
    "text": "Okay, so let's say I like this idea, \nand I would like to use Artifactory.",
    "start": "267608",
    "end": "271104"
  },
  {
    "text": "How can I start using JFrog on AWS?",
    "start": "271104",
    "end": "273410"
  },
  {
    "text": "The JFrog platform is available \non AWS Marketplace,",
    "start": "273540",
    "end": "276725"
  },
  {
    "text": "with a unique built-in free trial,\nalso from the JFrog.com website.",
    "start": "276725",
    "end": "281341"
  },
  {
    "text": "And once they start using it, ",
    "start": "282077",
    "end": "284438"
  },
  {
    "text": "they can seamlessly upgrade their environment \nto our paid subscription",
    "start": "284438",
    "end": "288146"
  },
  {
    "text": "and gain access to all these features.",
    "start": "288146",
    "end": "290139"
  },
  {
    "text": "This is great, \nRonny, thank you very much for sharing.",
    "start": "290465",
    "end": "292426"
  },
  {
    "text": "Thanks for having me.",
    "start": "292614",
    "end": "293616"
  },
  {
    "text": "And thank you for watching, \n'This is My Architecture'.",
    "start": "294136",
    "end": "296806"
  }
]