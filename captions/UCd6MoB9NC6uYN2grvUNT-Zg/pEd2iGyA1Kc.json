[
  {
    "start": "0",
    "end": "123000"
  },
  {
    "text": "good afternoon and thank you for coming along to CTD 409 high-velocity DevOps",
    "start": "89",
    "end": "8570"
  },
  {
    "text": "hope you had a wonderful week so far here at reinvent and excited about all",
    "start": "8570",
    "end": "13920"
  },
  {
    "text": "the new announcements and looking forward to the replay party tonight",
    "start": "13920",
    "end": "19080"
  },
  {
    "text": "right let's starts off with a question",
    "start": "19080",
    "end": "24230"
  },
  {
    "text": "imagine that you are starting today in your organization as a developer or a",
    "start": "24230",
    "end": "31170"
  },
  {
    "text": "DevOps engineer what does that process look like you may start off with",
    "start": "31170",
    "end": "37620"
  },
  {
    "text": "introducing too few people grant access to multiple different systems including",
    "start": "37620",
    "end": "43170"
  },
  {
    "text": "a git repository you may hand over your SSH public SSH keys push that into a",
    "start": "43170",
    "end": "50700"
  },
  {
    "text": "repository or a secure store and how many of you are happy about the time",
    "start": "50700",
    "end": "57600"
  },
  {
    "text": "taken for a new engineer to get on board and them to add value to your organization and if you think that this",
    "start": "57600",
    "end": "66420"
  },
  {
    "text": "process can be improved then you are at the right place because in today's session we're going to go through some",
    "start": "66420",
    "end": "73380"
  },
  {
    "text": "of the benefits that CI CD continuous integration and continuous delivery will",
    "start": "73380",
    "end": "78990"
  },
  {
    "text": "bring it to your organization along with wider AWS platform offerings my name is",
    "start": "78990",
    "end": "86820"
  },
  {
    "text": "Chang Cabrera I'm a Solutions Architect based in the UK on with AWS bit longer",
    "start": "86820",
    "end": "94020"
  },
  {
    "text": "than two years now but before before joining AWS I was a customer for good",
    "start": "94020",
    "end": "99240"
  },
  {
    "text": "five years I'm here with my colleague HR a cook senior engineer from cloud front",
    "start": "99240",
    "end": "106290"
  },
  {
    "text": "team we also have great customer speaker cover of Tiwari who's a principal",
    "start": "106290",
    "end": "111810"
  },
  {
    "text": "engineer from realtor.com here to share their story in migrating their",
    "start": "111810",
    "end": "117060"
  },
  {
    "text": "application to Amazon CloudFront and wider edge platform so let's have a",
    "start": "117060",
    "end": "124229"
  },
  {
    "start": "123000",
    "end": "123000"
  },
  {
    "text": "quick look at agenda so we got a lot to cover during our presentation time we",
    "start": "124229",
    "end": "131640"
  },
  {
    "text": "will be available to answer questions after this session all the",
    "start": "131640",
    "end": "136800"
  },
  {
    "text": "presentations will be available online in both SlideShare and in YouTube and feel free to contact us or contact our",
    "start": "136800",
    "end": "143430"
  },
  {
    "text": "support team if you got further questions related to the topic that we are covering today we starts off with",
    "start": "143430",
    "end": "151820"
  },
  {
    "text": "with an introduction going through simple steps that we all follow when",
    "start": "151820",
    "end": "158400"
  },
  {
    "text": "developing and delivering applications which is build test release and monitor",
    "start": "158400",
    "end": "163950"
  },
  {
    "text": "right our main focus today is to give you information about how edge services can",
    "start": "163950",
    "end": "171870"
  },
  {
    "text": "be part of your software delivery lifecycle what services are available to support you and show you what Amazon use",
    "start": "171870",
    "end": "179190"
  },
  {
    "text": "when delivering applications in rapid pace after that a job will dive deep",
    "start": "179190",
    "end": "186270"
  },
  {
    "text": "into build test and release show it an example that we have built for our",
    "start": "186270",
    "end": "191940"
  },
  {
    "text": "session and in to reinvent then we'll go through some monitoring aspects to",
    "start": "191940",
    "end": "198180"
  },
  {
    "text": "provide that intelligent monitoring and alerting and reporting capabilities and",
    "start": "198180",
    "end": "203190"
  },
  {
    "text": "at last but not least realtor Chrome's going to share their story go through",
    "start": "203190",
    "end": "209640"
  },
  {
    "text": "some key learnings and takeaways from their experience in migrating their applications to Amazon CloudFront and",
    "start": "209640",
    "end": "217459"
  },
  {
    "text": "other edge platform so this is a 400",
    "start": "217459",
    "end": "223260"
  },
  {
    "text": "level session and I guess by now most of you are familiar with DevOps",
    "start": "223260",
    "end": "229799"
  },
  {
    "text": "methodologies so I'm not going to get",
    "start": "229799",
    "end": "235470"
  },
  {
    "text": "into a philosophical conversation about defining DevOps but in simple terms",
    "start": "235470",
    "end": "241500"
  },
  {
    "text": "DevOps is dev and ops professionals working together collaboratively to",
    "start": "241500",
    "end": "248010"
  },
  {
    "text": "improve your application development and delivery right our main focus today is",
    "start": "248010",
    "end": "256530"
  },
  {
    "text": "to show you how AWS can help you to get your DevOps strategy not to stop at your",
    "start": "256530",
    "end": "261780"
  },
  {
    "text": "origin but to drive it all the way to the edge using our edge portfolio",
    "start": "261780",
    "end": "267170"
  },
  {
    "text": "and in your demos practice there aren't any silos people take responsibility by",
    "start": "267170",
    "end": "274160"
  },
  {
    "text": "and they share to share responsibility by taking ownership and if you wrote the",
    "start": "274160",
    "end": "282060"
  },
  {
    "text": "code it's easier to you to fix it at two o'clock in the morning than anyone else",
    "start": "282060",
    "end": "287640"
  },
  {
    "text": "in the world you may ask who carries the pager or who who does the QA to answer",
    "start": "287640",
    "end": "297840"
  },
  {
    "text": "to that is the to pizza team raise your hand if you're already familiar with",
    "start": "297840",
    "end": "303630"
  },
  {
    "text": "Amazon to pizza team culture okay",
    "start": "303630",
    "end": "309230"
  },
  {
    "text": "not many so back in 2001 Amazon was a",
    "start": "309230",
    "end": "314850"
  },
  {
    "text": "big monolith and over the years we managed to break that monolith into simple micro services and simple small",
    "start": "314850",
    "end": "323070"
  },
  {
    "text": "teams were responsible in managing these micro services so we define this how",
    "start": "323070",
    "end": "329250"
  },
  {
    "text": "small the team are by if he managed to feed the team with two pizzas it's a",
    "start": "329250",
    "end": "334260"
  },
  {
    "text": "good good small team I strongly believe",
    "start": "334260",
    "end": "340140"
  },
  {
    "text": "that it's crucial to maintain a small team structure to build a high velocity",
    "start": "340140",
    "end": "345510"
  },
  {
    "text": "DevOps team so because our talk is about",
    "start": "345510",
    "end": "351780"
  },
  {
    "text": "getting your DevOps strategy to to the edge let's have a look at what our edge",
    "start": "351780",
    "end": "358260"
  },
  {
    "start": "357000",
    "end": "357000"
  },
  {
    "text": "portfolio consists of our edge service consists of cloud front caching service",
    "start": "358260",
    "end": "365930"
  },
  {
    "text": "by the way it's the cloud front tenth anniversary we released a blog post feel",
    "start": "365930",
    "end": "371040"
  },
  {
    "text": "free to read that and we are expanding",
    "start": "371040",
    "end": "378270"
  },
  {
    "text": "our edge portfolio quite rapidly I remember we released that October by",
    "start": "378270",
    "end": "386250"
  },
  {
    "text": "end of October we said that we had hundred caching servers across the globe and with now we got around 150 caching",
    "start": "386250",
    "end": "397830"
  },
  {
    "text": "servers so you can see that our rapid growth and have a commitment to expand our platform in addition to adding new edge",
    "start": "397830",
    "end": "406229"
  },
  {
    "text": "nodes into our platform which we call tops point of presence we also expand in the existing capacity",
    "start": "406229",
    "end": "414110"
  },
  {
    "text": "by using cloud front you would able to improve the performance of your application improve the security posture",
    "start": "414110",
    "end": "421729"
  },
  {
    "text": "cloud front is also as many other AWS services a pay-as-you-go model so you it",
    "start": "421729",
    "end": "429479"
  },
  {
    "text": "provides better economy of scale H is",
    "start": "429479",
    "end": "434820"
  },
  {
    "text": "also consist of Amazon route 53 which is our global DNS service AWS RAF Web",
    "start": "434820",
    "end": "441000"
  },
  {
    "text": "Application Firewall service aw a shield and shield advanced an AWS lambda and",
    "start": "441000",
    "end": "446880"
  },
  {
    "text": "lambda the H which is the service compute at the edge I'm sure by now most",
    "start": "446880",
    "end": "453720"
  },
  {
    "text": "of you are familiar with what a lambda function is is that right everyone knows for a lambda function is yeah so let's",
    "start": "453720",
    "end": "460620"
  },
  {
    "text": "have a quick recap let's have a quick look at a use case imagine that you are an engineer responsible in managing a",
    "start": "460620",
    "end": "467580"
  },
  {
    "text": "large media of website and you want to improve and accelerate that media asset",
    "start": "467580",
    "end": "472889"
  },
  {
    "text": "delivery depends on the browser type you want to provide the right image type",
    "start": "472889",
    "end": "477900"
  },
  {
    "text": "whether it's a web P or PNG depends on the device that people are browsing your site you want to provide the right crop",
    "start": "477900",
    "end": "484349"
  },
  {
    "text": "size or resize value or you want to simply add a watermark to your images it",
    "start": "484349",
    "end": "489870"
  },
  {
    "text": "doesn't matter whether it's a single image or 100,000 images because lambda is a server less compute you don't have",
    "start": "489870",
    "end": "497580"
  },
  {
    "text": "to think about complex topics like D our",
    "start": "497580",
    "end": "504650"
  },
  {
    "text": "high availability reliability performance if you can code it you can",
    "start": "504650",
    "end": "511110"
  },
  {
    "text": "run it as a lambda function so it's a great way for engineers and builders to",
    "start": "511110",
    "end": "517310"
  },
  {
    "text": "adopt the server let's compute lambda is an event-driven architecture that means",
    "start": "517310",
    "end": "522750"
  },
  {
    "text": "you it only executes when there's work to be done so you don't pay for idle capacity that works really well with the",
    "start": "522750",
    "end": "529709"
  },
  {
    "text": "C ICD pipeline when you have to manage multiple",
    "start": "529709",
    "end": "535370"
  },
  {
    "text": "that's great but today people expect",
    "start": "535520",
    "end": "540600"
  },
  {
    "text": "things to happen instantly there were impatience who want to wait for page load times anyway right if there's page",
    "start": "540600",
    "end": "550200"
  },
  {
    "text": "load time involved in your application or your website people go elsewhere",
    "start": "550200",
    "end": "556190"
  },
  {
    "text": "regardless whether they are traveling accessing the site from poor mobile connection or wherever they are in the",
    "start": "558080",
    "end": "563940"
  },
  {
    "text": "world people expect highly performant online experience that's one of the things that",
    "start": "563940",
    "end": "569970"
  },
  {
    "text": "lambda the edge can bring it to you because it lambda function attached to CloudFront distribution means you can",
    "start": "569970",
    "end": "575760"
  },
  {
    "text": "execute the function lot closer to your users when we talk about CloudFront CDN",
    "start": "575760",
    "end": "583080"
  },
  {
    "text": "as the name suggests we talk about distributing content across the globe but now with lambda at the edge along",
    "start": "583080",
    "end": "590370"
  },
  {
    "text": "with your content you have the compute power at the edge that allows customers to move many use cases to the edge which",
    "start": "590370",
    "end": "598860"
  },
  {
    "text": "wasn't possible before when Amazon was a",
    "start": "598860",
    "end": "606450"
  },
  {
    "start": "604000",
    "end": "604000"
  },
  {
    "text": "big monolith getting that features that matters to our customers took very",
    "start": "606450",
    "end": "611610"
  },
  {
    "text": "longer than what is needed to be so Amazon is a very data-driven",
    "start": "611610",
    "end": "616700"
  },
  {
    "text": "organization and we looked at why is it taking so long it's not the time taken",
    "start": "616700",
    "end": "622709"
  },
  {
    "text": "to write the code but rather it's the waiting time involved in every step in",
    "start": "622709",
    "end": "627870"
  },
  {
    "text": "the way so long with building micro services building small teams we also",
    "start": "627870",
    "end": "635070"
  },
  {
    "text": "build lots of tools I will now invite my colleague HR to go through the C sed",
    "start": "635070",
    "end": "641880"
  },
  {
    "text": "journey with you show you how you can use the tools that we built to help you",
    "start": "641880",
    "end": "649079"
  },
  {
    "text": "to automate software delivery process how to improve that developer",
    "start": "649079",
    "end": "654570"
  },
  {
    "text": "productivity how to fix the bugs quickly and most importantly getting the",
    "start": "654570",
    "end": "661290"
  },
  {
    "text": "features that matters to your business faster to your production thank you",
    "start": "661290",
    "end": "667970"
  },
  {
    "text": "Thank You chunka hi my name is Rajesh I'm a software developer with cloud one",
    "start": "669870",
    "end": "677199"
  },
  {
    "text": "for the last five years in AWS our aim is to give full control to the developer",
    "start": "677199",
    "end": "683829"
  },
  {
    "start": "680000",
    "end": "680000"
  },
  {
    "text": "this enables better availability better security and also faster delivery of the",
    "start": "683829",
    "end": "689110"
  },
  {
    "text": "features a device provides many different tools to the developers so",
    "start": "689110",
    "end": "696009"
  },
  {
    "text": "that you will control the destiny of your application but how does collapse on fit in this picture his 30 killer",
    "start": "696009",
    "end": "704230"
  },
  {
    "text": "drone customers used to have a set up months and never touch approach but recently especially after the release of",
    "start": "704230",
    "end": "710980"
  },
  {
    "text": "lund 88 in 2017 we are hearing more and more from our customers that they want",
    "start": "710980",
    "end": "716769"
  },
  {
    "text": "to integrate cloud front with their application stack and they want to apply",
    "start": "716769",
    "end": "722769"
  },
  {
    "text": "all the best practices they are using they are already using with the rest of their stack with cloud front-end lambda",
    "start": "722769",
    "end": "728980"
  },
  {
    "text": "th as well today I'm going to walk through an example which is created by",
    "start": "728980",
    "end": "734529"
  },
  {
    "text": "code star to show how we can achieve a continuous deployment pipeline with",
    "start": "734529",
    "end": "739930"
  },
  {
    "text": "Catherine and lambda th let's take a quick look at what is called star code",
    "start": "739930",
    "end": "746529"
  },
  {
    "start": "742000",
    "end": "742000"
  },
  {
    "text": "star is a wrapper service around other aw services basically it gives you two",
    "start": "746529",
    "end": "752199"
  },
  {
    "text": "benefits the first benefit is that it gives you templates which are running out of the box so that you can direct",
    "start": "752199",
    "end": "759160"
  },
  {
    "text": "the dive into the code and the second benefit is that it gives you a single UI which combines all the services that you",
    "start": "759160",
    "end": "766269"
  },
  {
    "text": "use all the Builder services that you use in your application for the purposes",
    "start": "766269",
    "end": "774310"
  },
  {
    "start": "773000",
    "end": "773000"
  },
  {
    "text": "of this session I started with a built-in template which is a node.js web application template code start creates",
    "start": "774310",
    "end": "782589"
  },
  {
    "text": "multiple cloud permission templates in order to create and manage the resources for you namely these are a code commit",
    "start": "782589",
    "end": "791319"
  },
  {
    "text": "repository for you to keep your code but no worries you can also use your existing github account",
    "start": "791319",
    "end": "798120"
  },
  {
    "text": "cloud9 environments so that you can edit your code but still you can",
    "start": "798120",
    "end": "803140"
  },
  {
    "text": "use your favorite integrated element environment code built for us to build",
    "start": "803140",
    "end": "808450"
  },
  {
    "text": "to lambda T lambda code and a pipeline to integrate and coordinate the",
    "start": "808450",
    "end": "814270"
  },
  {
    "text": "deployments when you click on create you",
    "start": "814270",
    "end": "820180"
  },
  {
    "text": "will see that it will trigger the pipeline automatically and when the deployment is done it will run out of",
    "start": "820180",
    "end": "827260"
  },
  {
    "text": "the box this is super convenient so as a reference let me share what this",
    "start": "827260",
    "end": "833050"
  },
  {
    "text": "template does basically it creates an api gateway to handle the HTTP request",
    "start": "833050",
    "end": "838870"
  },
  {
    "text": "and there's a lambda function which actually serves the content and our",
    "start": "838870",
    "end": "844900"
  },
  {
    "text": "static objects are kept in s3 and this",
    "start": "844900",
    "end": "850360"
  },
  {
    "start": "849000",
    "end": "849000"
  },
  {
    "text": "is the end state that we want to reach so for the purposes of this session we have to intents imagine that our company",
    "start": "850360",
    "end": "858250"
  },
  {
    "text": "is working on an new version of our UI we are in better phase but we want to",
    "start": "858250",
    "end": "864940"
  },
  {
    "text": "test our new interface with our customers but our new interface is not really ready to be the default interface",
    "start": "864940",
    "end": "872050"
  },
  {
    "text": "so we want to give our customers a way to see the new interface if they want to",
    "start": "872050",
    "end": "877840"
  },
  {
    "text": "and we will achieve it with lambda th I will talk about this later and our second intent is using cloud run",
    "start": "877840",
    "end": "885930"
  },
  {
    "text": "you want to use collateral to reduce cost in API gateway s3 and lambda",
    "start": "885930",
    "end": "891820"
  },
  {
    "text": "and also we want to provide better latency for our global customers sorry I",
    "start": "891820",
    "end": "903850"
  },
  {
    "text": "want to remind you that for the purpose of this session I really will not spend",
    "start": "903850",
    "end": "909550"
  },
  {
    "text": "much time on the backend code and I will just focus on CloudFront and lambda th pieces and how we deploy those so let's",
    "start": "909550",
    "end": "917050"
  },
  {
    "start": "916000",
    "end": "916000"
  },
  {
    "text": "do a recap on how lambda th works basically lambda H provides for different event types for your lambda",
    "start": "917050",
    "end": "923200"
  },
  {
    "text": "functions in the lifetime of a collateral request the first event type is beaver request event type we will",
    "start": "923200",
    "end": "929380"
  },
  {
    "text": "request is triggered before your request hits the quatrain cash",
    "start": "929380",
    "end": "935250"
  },
  {
    "text": "example use cases for we will request our authentication at th or both detection the second event type is",
    "start": "935250",
    "end": "943120"
  },
  {
    "text": "origin request you can use origin request events for two different purposes",
    "start": "943120",
    "end": "948220"
  },
  {
    "text": "the first purposes you can customize the request which is going to your origin and example use cases for this are",
    "start": "948220",
    "end": "955500"
  },
  {
    "text": "content based routing and the second purpose you can achieve with origin",
    "start": "955500",
    "end": "961630"
  },
  {
    "text": "request is to generate responses right at the edge so that you can have you can have origins CloudFront applications the",
    "start": "961630",
    "end": "969910"
  },
  {
    "text": "third event type is origin response events with all your response events you can manipulate the response that is",
    "start": "969910",
    "end": "976029"
  },
  {
    "text": "coming from from your origin before clapping caches it one example use cases stripping origin",
    "start": "976029",
    "end": "982660"
  },
  {
    "text": "headers and the final event type is we have a response event type you can",
    "start": "982660",
    "end": "987670"
  },
  {
    "text": "customize the request sorry you can customize the response to your viewers",
    "start": "987670",
    "end": "993010"
  },
  {
    "text": "based on request parameters and also you can trigger side effects such as download receipts to get reports of harm",
    "start": "993010",
    "end": "1001140"
  },
  {
    "text": "in downloads happened right from the edge edge cases before diving into the",
    "start": "1001140",
    "end": "1008820"
  },
  {
    "start": "1007000",
    "end": "1007000"
  },
  {
    "text": "code I want you I want to remind you again we are going to share these slides over SlideShare so don't worry if you",
    "start": "1008820",
    "end": "1018620"
  },
  {
    "text": "cannot read all the code I will emphasize on the imported piece pieces",
    "start": "1018620",
    "end": "1023780"
  },
  {
    "text": "so we are using some template to create our lambda th code so what is Sam Sam is",
    "start": "1023780",
    "end": "1029790"
  },
  {
    "text": "an extension to clot formation but it provides this convenience management of the serverless functions here we are",
    "start": "1029790",
    "end": "1038760"
  },
  {
    "text": "using auto publish a list property of the service function which will create a version each time there is a new code",
    "start": "1038760",
    "end": "1045770"
  },
  {
    "text": "this is required in our example use case because collateral requires lambda",
    "start": "1045770",
    "end": "1050940"
  },
  {
    "text": "lambda function versions and here we are accepting a parameter stage so that we",
    "start": "1050940",
    "end": "1058559"
  },
  {
    "text": "can reuse the same template for different stages of our pipeline namely we can have a bit of lambda tied",
    "start": "1058559",
    "end": "1064290"
  },
  {
    "text": "function we can have a gamma we can have a prod let's take a look at the lambda th code",
    "start": "1064290",
    "end": "1070850"
  },
  {
    "start": "1068000",
    "end": "1068000"
  },
  {
    "text": "so we are using origin request event for this example because in this example our",
    "start": "1070850",
    "end": "1077070"
  },
  {
    "text": "content is highly cashable and using origin request will reduce my cost because it will only be triggered when",
    "start": "1077070",
    "end": "1083460"
  },
  {
    "text": "the object is not a case at the edge so basically this function inspects the",
    "start": "1083460",
    "end": "1089940"
  },
  {
    "text": "query strings and if the value matches it shows a different content by changing",
    "start": "1089940",
    "end": "1096059"
  },
  {
    "text": "to your I parameter of the request that is going to your origin this is just a simple example but you can use many",
    "start": "1096059",
    "end": "1102990"
  },
  {
    "text": "different things as well you can use headers you can use cookies you can use the device type or many other different",
    "start": "1102990",
    "end": "1111140"
  },
  {
    "text": "properties of the request as well in order to achieve this so here are our",
    "start": "1111140",
    "end": "1118669"
  },
  {
    "text": "templates of the CloudFormation template so a parameters of the CloudFormation template i already talked about the",
    "start": "1118669",
    "end": "1124890"
  },
  {
    "text": "stage and the second important parameter is alias name so we are going to use this alias name in CloudFront so that",
    "start": "1124890",
    "end": "1131850"
  },
  {
    "text": "each stage of the cloud front will be admissible with a different domain name and this is the collateral resource of",
    "start": "1131850",
    "end": "1138809"
  },
  {
    "text": "our template here you can see how we refer to the alias name that we injected",
    "start": "1138809",
    "end": "1144809"
  },
  {
    "text": "through the parameters and here you can see how we refer to the version that is",
    "start": "1144809",
    "end": "1150900"
  },
  {
    "text": "being generated by the service function so now our template is ready we need to",
    "start": "1150900",
    "end": "1159350"
  },
  {
    "start": "1155000",
    "end": "1155000"
  },
  {
    "text": "write to build logic to generate this code so it generate this lambda function",
    "start": "1159350",
    "end": "1167150"
  },
  {
    "text": "so code star case a bill spec file code build project and the build spec file",
    "start": "1167150",
    "end": "1172350"
  },
  {
    "text": "with it and this build spec file is run by the code build project to upload your",
    "start": "1172350",
    "end": "1180000"
  },
  {
    "text": "code to s3 so that you can deploy this function through cloud formation so what",
    "start": "1180000",
    "end": "1187470"
  },
  {
    "text": "we are doing is we are adding one more line for lambda th code remember that our back-end code is also on lambda so",
    "start": "1187470",
    "end": "1195030"
  },
  {
    "text": "it will be very similar to it and also don't forget to export your process",
    "start": "1195030",
    "end": "1200490"
  },
  {
    "text": "template because we need to act template from our pipeline this is the",
    "start": "1200490",
    "end": "1206100"
  },
  {
    "text": "pipeline we are trying to achieve so when there's a code change in our repository it will trigger automatically",
    "start": "1206100",
    "end": "1212880"
  },
  {
    "text": "it will be built to code and then it will deploy collateral and lambda th in",
    "start": "1212880",
    "end": "1218910"
  },
  {
    "text": "order to achieve this we need to do to two changes in our existing resources",
    "start": "1218910",
    "end": "1224460"
  },
  {
    "text": "which is auto-generated by code star the first thing is we need to extend our",
    "start": "1224460",
    "end": "1229740"
  },
  {
    "text": "pipeline and the second thing is we need to extend the permissions of the roles",
    "start": "1229740",
    "end": "1234840"
  },
  {
    "text": "that was generated by the code star you can make these changes through AWS",
    "start": "1234840",
    "end": "1240690"
  },
  {
    "text": "console but I strong I strongly recommend that we use cloud formation so",
    "start": "1240690",
    "end": "1246660"
  },
  {
    "text": "that I won't pain adrift our cloud formation stack here you can see the",
    "start": "1246660",
    "end": "1254150"
  },
  {
    "text": "permissions for the pipeline role so these permissions are required because",
    "start": "1254150",
    "end": "1260190"
  },
  {
    "text": "like each resource each platform engine template will be a different stack in this whole application stack so here for",
    "start": "1260190",
    "end": "1267570"
  },
  {
    "text": "simplicity I'm using the project name is a prefix and the second permission you",
    "start": "1267570",
    "end": "1275460"
  },
  {
    "text": "need to add is the permission for the cloud formation role to really create",
    "start": "1275460",
    "end": "1280920"
  },
  {
    "text": "this lambda function and cloud formation distribution sorry CloudFront distribution okay now",
    "start": "1280920",
    "end": "1288210"
  },
  {
    "text": "our permissions are ready we are ready to extend the pipeline the first action",
    "start": "1288210",
    "end": "1293580"
  },
  {
    "text": "we are adding is the generate change that here you can see how we inject our",
    "start": "1293580",
    "end": "1300530"
  },
  {
    "text": "different parameters for this specific stage which is our gamma stage so we are",
    "start": "1300530",
    "end": "1306930"
  },
  {
    "text": "injecting the stage name and also the domain name that we give to our gamma",
    "start": "1306930",
    "end": "1312390"
  },
  {
    "text": "stage and the second action is the step which actually execute the change that",
    "start": "1312390",
    "end": "1319500"
  },
  {
    "text": "we created in the previous action so after this changes has been deployed",
    "start": "1319500",
    "end": "1326450"
  },
  {
    "text": "with cloud formation or maybe if you use console with console it will not trigger",
    "start": "1326450",
    "end": "1332190"
  },
  {
    "text": "it and build because like clot formation code is not in repository so we need to click on",
    "start": "1332190",
    "end": "1338009"
  },
  {
    "text": "release changes in the pipeline so that a new build will be triggered so deployment will happen and then you'll",
    "start": "1338009",
    "end": "1345990"
  },
  {
    "text": "see it in action okay now we've deployed in gamma we are ready to test our code",
    "start": "1345990",
    "end": "1353480"
  },
  {
    "start": "1353000",
    "end": "1353000"
  },
  {
    "text": "the first step of testing is unit testing number taste support no chase so",
    "start": "1353480",
    "end": "1360779"
  },
  {
    "text": "you can use the framework that you're familiar with lambda teach as well this",
    "start": "1360779",
    "end": "1367080"
  },
  {
    "text": "is obvious so I'm not going to spend much time on this slide a more interesting pieces how we are doing the",
    "start": "1367080",
    "end": "1373529"
  },
  {
    "start": "1370000",
    "end": "1370000"
  },
  {
    "text": "integration testing with countries deployment it's really essential that we",
    "start": "1373529",
    "end": "1379169"
  },
  {
    "text": "are doing the integration testing integrated with our pipeline so that we can prevent the buggy code and reaching",
    "start": "1379169",
    "end": "1387240"
  },
  {
    "text": "out to plot in in our example case I'm",
    "start": "1387240",
    "end": "1392850"
  },
  {
    "start": "1390000",
    "end": "1390000"
  },
  {
    "text": "using T again JavaScript code with mocha framework but since this code runs with",
    "start": "1392850",
    "end": "1400230"
  },
  {
    "text": "code build you can use whatever language you want whatever language you are familiar with the second thing is that I",
    "start": "1400230",
    "end": "1408590"
  },
  {
    "text": "understand that every organization have their best practices but for the purposes of this example I put my",
    "start": "1408590",
    "end": "1416639"
  },
  {
    "text": "integration testing code in the same repository so that when I change the integration testing code it will trigger",
    "start": "1416639",
    "end": "1422100"
  },
  {
    "text": "a build so I decided to use code built",
    "start": "1422100",
    "end": "1427440"
  },
  {
    "start": "1424000",
    "end": "1424000"
  },
  {
    "text": "to do my integration testing and with",
    "start": "1427440",
    "end": "1433169"
  },
  {
    "text": "the code build I don't want to run the existing built logic so that I created a",
    "start": "1433169",
    "end": "1439529"
  },
  {
    "text": "custom build spec file and since I want to use this build specification for",
    "start": "1439529",
    "end": "1445440"
  },
  {
    "text": "different stages namely gamma and prod I'm injecting the URL to test as an my",
    "start": "1445440",
    "end": "1453059"
  },
  {
    "text": "enviable so it requires me to create multiple different code build projects for each stage so that I can inject",
    "start": "1453059",
    "end": "1460259"
  },
  {
    "text": "different values here you can see the CloudFormation template code to create",
    "start": "1460259",
    "end": "1467309"
  },
  {
    "text": "this code build projects here you can see how we inject their mind variables and this is",
    "start": "1467309",
    "end": "1473700"
  },
  {
    "text": "our custom-built SPECT coat here we are not building anything we are just running our integration testing and then",
    "start": "1473700",
    "end": "1483659"
  },
  {
    "text": "we need to add these code build steps into our pipeline and then we deployed",
    "start": "1483659",
    "end": "1493379"
  },
  {
    "start": "1491000",
    "end": "1491000"
  },
  {
    "text": "this cloud formation we need to click release changes again to see it in action now we are done with our",
    "start": "1493379",
    "end": "1499259"
  },
  {
    "text": "integration testing we are ready to deploy our code to prod this is the end",
    "start": "1499259",
    "end": "1505139"
  },
  {
    "text": "state we are trying to achieve with with the release phase so since we did a good",
    "start": "1505139",
    "end": "1512700"
  },
  {
    "start": "1511000",
    "end": "1511000"
  },
  {
    "text": "job on reusing our templates for different stages deploying the prod will be similar to deploying the Gama only",
    "start": "1512700",
    "end": "1520289"
  },
  {
    "text": "the injected values will be different so I'm not repeating the same steps for production as well okay now we can see",
    "start": "1520289",
    "end": "1528750"
  },
  {
    "text": "this in action",
    "start": "1528750",
    "end": "1531200"
  },
  {
    "text": "okay so this is our default home page",
    "start": "1541890",
    "end": "1547010"
  },
  {
    "text": "and this is our beta page it doesn't",
    "start": "1550760",
    "end": "1558570"
  },
  {
    "text": "seem much different but I didn't spend much time on the back end code so here",
    "start": "1558570",
    "end": "1564030"
  },
  {
    "text": "you can see that actually we are using the same URL and the actual change of",
    "start": "1564030",
    "end": "1570000"
  },
  {
    "text": "the content happens in lambda th let's",
    "start": "1570000",
    "end": "1576030"
  },
  {
    "start": "1576000",
    "end": "1576000"
  },
  {
    "text": "do a recap on what we what we did we created a code start project we extended it with lambda th and CloudFront we",
    "start": "1576030",
    "end": "1584220"
  },
  {
    "text": "added integration testing steps and finally be released to the production now we need to operate this thing in",
    "start": "1584220",
    "end": "1592290"
  },
  {
    "text": "production my friend Shankar will help us to how to",
    "start": "1592290",
    "end": "1599190"
  },
  {
    "text": "operate the service Thank You AJ so",
    "start": "1599190",
    "end": "1607410"
  },
  {
    "text": "monitoring is the most important aspect of your applications because if you can",
    "start": "1607410",
    "end": "1612720"
  },
  {
    "text": "monitor it you can improve it so aw has",
    "start": "1612720",
    "end": "1618600"
  },
  {
    "text": "provided out-of-the-box capabilities really using cloud watch with cloud",
    "start": "1618600",
    "end": "1623970"
  },
  {
    "text": "watch you can monitor act and analyze cloud watch provides matrix on for cloud",
    "start": "1623970",
    "end": "1632220"
  },
  {
    "text": "front on requests requests whites downloaded error rates and you can",
    "start": "1632220",
    "end": "1638370"
  },
  {
    "text": "extend some of the matrix using custom matrix and you can integrate cloud watch",
    "start": "1638370",
    "end": "1644130"
  },
  {
    "text": "with third-party solutions on our marketplace in addition to lambda the",
    "start": "1644130",
    "end": "1654360"
  },
  {
    "text": "edge and lambda execution logs and distribution acts access logs which developers use to already use in to",
    "start": "1654360",
    "end": "1662580"
  },
  {
    "text": "debug some of the errors we now provide logs to figure it out the integration",
    "start": "1662580",
    "end": "1668970"
  },
  {
    "text": "errors between lambda and the cloud front which helps to extend that",
    "start": "1668970",
    "end": "1675210"
  },
  {
    "text": "troubleshooting capabilities and get help you to figure it out the issues",
    "start": "1675210",
    "end": "1681479"
  },
  {
    "text": "with your lambda functions quite quickly and this is another example with AWS",
    "start": "1681479",
    "end": "1689489"
  },
  {
    "start": "1685000",
    "end": "1685000"
  },
  {
    "text": "raff and shield where cloud watch provides matrix on for shield its",
    "start": "1689489",
    "end": "1696149"
  },
  {
    "text": "leaders detected bytes per seconds packets packet attacks per seconds and",
    "start": "1696149",
    "end": "1702659"
  },
  {
    "text": "with RAF the request allowed request block requests counter requests and you",
    "start": "1702659",
    "end": "1711089"
  },
  {
    "text": "can extend some of these metrics that you got and integrating with the",
    "start": "1711089",
    "end": "1716789"
  },
  {
    "text": "third-party solutions like pager duty for learning or integrate with your",
    "start": "1716789",
    "end": "1723149"
  },
  {
    "text": "slack channels over my career there are",
    "start": "1723149",
    "end": "1730469"
  },
  {
    "text": "so many times that I've been asked to provide who has done what and when I'm",
    "start": "1730469",
    "end": "1735690"
  },
  {
    "text": "sure if you are coming from ops background that questions might be family to you and in traditional",
    "start": "1735690",
    "end": "1744839"
  },
  {
    "text": "infrastructure if you go SSH access or if you go access to the system probably",
    "start": "1744839",
    "end": "1750239"
  },
  {
    "text": "you SSH into multiple different systems and aggregate and you would be able to provide that details but in the cloud",
    "start": "1750239",
    "end": "1757769"
  },
  {
    "text": "and especially in micro services world it is a lot more complex than than that",
    "start": "1757769",
    "end": "1764899"
  },
  {
    "text": "so that's where cloud trail comes into the place with cloud trail enables you",
    "start": "1764899",
    "end": "1771450"
  },
  {
    "text": "to provide that governance compliance reporting report only auditing and risk",
    "start": "1771450",
    "end": "1777419"
  },
  {
    "text": "auditing of your applications and services regardless you access the site",
    "start": "1777419",
    "end": "1784109"
  },
  {
    "text": "use in the AWS console command line tools or practice infrastructure as a",
    "start": "1784109",
    "end": "1790320"
  },
  {
    "text": "cord using cloud formation cloud cloud",
    "start": "1790320",
    "end": "1795419"
  },
  {
    "text": "trail would log that request so by using cloud trail you can copy these cloud",
    "start": "1795419",
    "end": "1801779"
  },
  {
    "text": "trail logs into s3 and you can query using a teener to answer the questions",
    "start": "1801779",
    "end": "1807059"
  },
  {
    "text": "from the data this is a solution that I took it from a",
    "start": "1807059",
    "end": "1815370"
  },
  {
    "start": "1809000",
    "end": "1809000"
  },
  {
    "text": "solution builder a blog post that we released a few months ago where it shows",
    "start": "1815370",
    "end": "1821010"
  },
  {
    "text": "that CloudFront logs and other logs that you get from your application can be",
    "start": "1821010",
    "end": "1827130"
  },
  {
    "text": "copied into s3 and you can use AWS glue which is of ETL product to build a",
    "start": "1827130",
    "end": "1833100"
  },
  {
    "text": "catalog or if the data is when the data is in s3 you can use the teen a to query",
    "start": "1833100",
    "end": "1839490"
  },
  {
    "text": "data and ask the questions from the data or you can extend this data to provide",
    "start": "1839490",
    "end": "1846929"
  },
  {
    "text": "some visibility dashboards using Amazon quick site or tableau a any other kind",
    "start": "1846929",
    "end": "1854130"
  },
  {
    "text": "of visualization and analytics tools that you have or you can use the data to",
    "start": "1854130",
    "end": "1859740"
  },
  {
    "text": "do machine learning and another example",
    "start": "1859740",
    "end": "1864840"
  },
  {
    "start": "1863000",
    "end": "1863000"
  },
  {
    "text": "where you can extend some of the cloud watch matrix and integrate with third-party solution in this case it's a",
    "start": "1864840",
    "end": "1871769"
  },
  {
    "text": "sumo logic with showing you some of the dashboard matrix from AWS shield and",
    "start": "1871769",
    "end": "1878960"
  },
  {
    "text": "wider edge services platform I know the",
    "start": "1878960",
    "end": "1884279"
  },
  {
    "text": "in rain event we also announced some new features and features for cloud watch",
    "start": "1884279",
    "end": "1889919"
  },
  {
    "text": "and feel free to keep ion of a what's new page to get to know more about new",
    "start": "1889919",
    "end": "1897389"
  },
  {
    "text": "features that we release in our monitoring space I will now invite Gaurav to share the",
    "start": "1897389",
    "end": "1904799"
  },
  {
    "text": "realtor.com story with you thank you thank you chunka hello everyone I'm",
    "start": "1904799",
    "end": "1913529"
  },
  {
    "text": "Gaurav Tiwari I'm principal software engineer at realtor.com today I will share some of the key use cases for",
    "start": "1913529",
    "end": "1921059"
  },
  {
    "text": "lambda at the edge and cloud front for realtor.com I will also talk about what",
    "start": "1921059",
    "end": "1926429"
  },
  {
    "text": "we have learned from these experiences so that you don't get your hands burnt while trying out something similar but",
    "start": "1926429",
    "end": "1933899"
  },
  {
    "text": "before we begin a little bit of history of who VR and a precursor to some of the",
    "start": "1933899",
    "end": "1940740"
  },
  {
    "text": "use cases greater calm is part of family of products designed to make all things",
    "start": "1940740",
    "end": "1947940"
  },
  {
    "text": "home simple efficient and enjoyable we offer the most comprehensive source of",
    "start": "1947940",
    "end": "1953700"
  },
  {
    "text": "for sale properties among competing national sites we also provide the",
    "start": "1953700",
    "end": "1958710"
  },
  {
    "text": "information tools and professional expertise to help people move confidently through every step of their",
    "start": "1958710",
    "end": "1965730"
  },
  {
    "text": "home journey realtor comm is also a key part of MU Scott family of businesses",
    "start": "1965730",
    "end": "1972110"
  },
  {
    "start": "1968000",
    "end": "1968000"
  },
  {
    "text": "this relationship has placed us firmly in the largest global digital real",
    "start": "1972110",
    "end": "1978809"
  },
  {
    "text": "estate network more than 20 years ago",
    "start": "1978809",
    "end": "1984440"
  },
  {
    "text": "realtor.com has pioneered the world of digital real estate it is not unusual",
    "start": "1984440",
    "end": "1990450"
  },
  {
    "text": "for the company of this age to have a few legacy system and technical debt we",
    "start": "1990450",
    "end": "1997110"
  },
  {
    "text": "compete in highly aggressive marketplace and remain competitive we needed to put",
    "start": "1997110",
    "end": "2002240"
  },
  {
    "text": "customer first iterate on their feedback improve our velocity and have quality",
    "start": "2002240",
    "end": "2007879"
  },
  {
    "text": "improvements to our products and services in 2014",
    "start": "2007879",
    "end": "2013149"
  },
  {
    "text": "News Corp acquired realtor.com in 2015 we began to completely execute",
    "start": "2013149",
    "end": "2021350"
  },
  {
    "text": "our plan to transform how we build produce deliver and support our products",
    "start": "2021350",
    "end": "2028370"
  },
  {
    "text": "and services we embrace the culture",
    "start": "2028370",
    "end": "2034480"
  },
  {
    "text": "process and Technology of DevOps agile and public cloud while we were on",
    "start": "2034480",
    "end": "2042440"
  },
  {
    "text": "this journey initially we were completely on data centers around that",
    "start": "2042440",
    "end": "2048050"
  },
  {
    "text": "time News Corp announced a goal to be 75% compute and public cloud we asked",
    "start": "2048050",
    "end": "2054440"
  },
  {
    "text": "ourselves why stop there and set up ourself target to be 100% compute and public cloud on this journey to migrate",
    "start": "2054440",
    "end": "2062750"
  },
  {
    "text": "from data center to AWS we wanted to follow certain guiding principles keep things simple design services and use",
    "start": "2062750",
    "end": "2070010"
  },
  {
    "text": "AWS platform in nearly first six months on this transition",
    "start": "2070010",
    "end": "2075649"
  },
  {
    "start": "2072000",
    "end": "2072000"
  },
  {
    "text": "we moved our front-end infrastructure to AWS to make this possible our dev team",
    "start": "2075650",
    "end": "2082940"
  },
  {
    "text": "took the initial lead and ensured that ops team is on board together the set of",
    "start": "2082940",
    "end": "2088760"
  },
  {
    "text": "initial Jenkins deployments for continuous integration and continuous delivery we used cloud formation",
    "start": "2088760",
    "end": "2095899"
  },
  {
    "text": "templates to version our infrastructure this was really important which helped",
    "start": "2095900",
    "end": "2100970"
  },
  {
    "text": "us to create identical to production like environments or sand boxes were",
    "start": "2100970",
    "end": "2106460"
  },
  {
    "text": "very identical to production so that no one can say hey this works on my system and it breaks in production so with this",
    "start": "2106460",
    "end": "2114350"
  },
  {
    "text": "precursor I would like to talk about some of our key use cases for lambda at the edge and Amazon CloudFront we make",
    "start": "2114350",
    "end": "2122690"
  },
  {
    "text": "data-driven decisions so we do lot of a B does how many of you are aware of a B",
    "start": "2122690",
    "end": "2130070"
  },
  {
    "text": "test our mineralogy raise your hand so a few so the people who are not aware of",
    "start": "2130070",
    "end": "2136400"
  },
  {
    "text": "this terminology a B test in the context of web applications is a method to test",
    "start": "2136400",
    "end": "2142580"
  },
  {
    "text": "multiple versions of website and compare them against each other the the",
    "start": "2142580",
    "end": "2148880"
  },
  {
    "text": "comparison could be based on certain metrics such as conversion it could be",
    "start": "2148880",
    "end": "2154760"
  },
  {
    "text": "unique users number of pages and others so almost a year later there was a",
    "start": "2154760",
    "end": "2161390"
  },
  {
    "text": "requirement to set up custom a/b test framework for the brand new version of our web site such that the dev team",
    "start": "2161390",
    "end": "2169100"
  },
  {
    "text": "control the entire logic configuration and deployments for the solution some of",
    "start": "2169100",
    "end": "2176750"
  },
  {
    "text": "the other key requirements for this solution were we should have ability to",
    "start": "2176750",
    "end": "2182810"
  },
  {
    "start": "2177000",
    "end": "2177000"
  },
  {
    "text": "tag user from the very first request for a specific micro markets and show them",
    "start": "2182810",
    "end": "2190670"
  },
  {
    "text": "brand-new version of our website we also need to have ability to show variation",
    "start": "2190670",
    "end": "2196700"
  },
  {
    "text": "from multiple applications I am NOT talking about single application these are multiple applications for this",
    "start": "2196700",
    "end": "2203990"
  },
  {
    "text": "entire new solution the latency should be less than 30 minutes again",
    "start": "2203990",
    "end": "2209600"
  },
  {
    "text": "and since we are building the solution from scratch as expected this should be",
    "start": "2209600",
    "end": "2215630"
  },
  {
    "text": "completely unit testable and deployment should be pretty straightforward because",
    "start": "2215630",
    "end": "2221270"
  },
  {
    "text": "the app team wanted to build continuously on this one so we looked at",
    "start": "2221270",
    "end": "2226730"
  },
  {
    "text": "multiple solutions and found lambda at the edge and Amazon CloudFront setting very nicely for these requirements",
    "start": "2226730",
    "end": "2233710"
  },
  {
    "text": "during our PUC phase we found that we are able to make use of user your origin",
    "start": "2233710",
    "end": "2242270"
  },
  {
    "start": "2235000",
    "end": "2235000"
  },
  {
    "text": "request at lambda at the edge to route request to multiple applications we were",
    "start": "2242270",
    "end": "2250250"
  },
  {
    "text": "able to make use of lambda at the edge to read cookies and make decision for",
    "start": "2250250",
    "end": "2256670"
  },
  {
    "text": "the user and tag user to a specific version of the site that we want for",
    "start": "2256670",
    "end": "2261800"
  },
  {
    "text": "this solution we purchased it and found that the latency is well within the",
    "start": "2261800",
    "end": "2267320"
  },
  {
    "text": "limit since this is again another lambda function as a jar and Shankar mentioned this was written in JavaScript and",
    "start": "2267320",
    "end": "2274600"
  },
  {
    "text": "completely unit testable our DevOps team set up jenkins deployments for us so the",
    "start": "2274600",
    "end": "2281990"
  },
  {
    "text": "deployments became very smooth for lambda at the edge and CloudFront updates with the success of this a B",
    "start": "2281990",
    "end": "2292100"
  },
  {
    "start": "2289000",
    "end": "2289000"
  },
  {
    "text": "testing framework we pushed it to production and I would like to talk",
    "start": "2292100",
    "end": "2298130"
  },
  {
    "text": "about this architecture in a bit so when the user makes a request there is",
    "start": "2298130",
    "end": "2303200"
  },
  {
    "text": "content switch gate me on the left side you see on the screen there are about 70",
    "start": "2303200",
    "end": "2308570"
  },
  {
    "text": "rules I will talk about this in a few slides in detail then the request",
    "start": "2308570",
    "end": "2314540"
  },
  {
    "text": "actually directly goes to the application version 1 let's say if lambda doesn't CloudFront are not",
    "start": "2314540",
    "end": "2320690"
  },
  {
    "text": "sitting in between once we have lambda at the edge and claw at CloudFront we",
    "start": "2320690",
    "end": "2327530"
  },
  {
    "text": "are now able to route the request to multiple version of the application by",
    "start": "2327530",
    "end": "2332630"
  },
  {
    "text": "reading dynamic configuration from dynamodb at runtime and making those",
    "start": "2332630",
    "end": "2337670"
  },
  {
    "text": "decisions based on the user information cookies and others",
    "start": "2337670",
    "end": "2344320"
  },
  {
    "text": "so with the success of this a B testing framework in production we realize the",
    "start": "2344980",
    "end": "2350120"
  },
  {
    "text": "true potential and what we can achieve with lambda at edge and cloud front in the parallel to stream for our ops team",
    "start": "2350120",
    "end": "2357680"
  },
  {
    "text": "were running into some challenges with the content switch gateway I just mentioned some of the key challenges",
    "start": "2357680",
    "end": "2364190"
  },
  {
    "start": "2363000",
    "end": "2363000"
  },
  {
    "text": "that they were facing were there were more than 70 rules and each rule has",
    "start": "2364190",
    "end": "2369290"
  },
  {
    "text": "multiple sub rules so anytime they wanted to make any change to those rules they have to be very careful because we",
    "start": "2369290",
    "end": "2377870"
  },
  {
    "text": "did not have good monitoring for those rules the entire testing effort for this",
    "start": "2377870",
    "end": "2384320"
  },
  {
    "text": "was completely manual and due to manual testing effort the overall deployment",
    "start": "2384320",
    "end": "2391490"
  },
  {
    "text": "time was really really high so we were very limited in deployments we were",
    "start": "2391490",
    "end": "2397760"
  },
  {
    "text": "making 1 to 2 times deployments a week and above all this was like a fixed",
    "start": "2397760",
    "end": "2403910"
  },
  {
    "text": "pricing model versus everything else in the previous architecture you have seen it's on AWS which is pay-as-you-go",
    "start": "2403910",
    "end": "2410090"
  },
  {
    "text": "pricing model so again we took a cue from our previous solution that we did",
    "start": "2410090",
    "end": "2417440"
  },
  {
    "text": "for a B testing framework and found that lambda at the edge and CloudFront can",
    "start": "2417440",
    "end": "2423110"
  },
  {
    "text": "again solve this problem for this",
    "start": "2423110",
    "end": "2428120"
  },
  {
    "start": "2427000",
    "end": "2427000"
  },
  {
    "text": "solution we set up jenkins pipeline this time so instead of making manual changes",
    "start": "2428120",
    "end": "2433550"
  },
  {
    "text": "our ops team now become part of DevOps team and they are making code commits",
    "start": "2433550",
    "end": "2439070"
  },
  {
    "text": "via github Enterprise to check in their changes once they go through the regular",
    "start": "2439070",
    "end": "2445070"
  },
  {
    "text": "PR review and much process after merge it triggers a build which run the test",
    "start": "2445070",
    "end": "2451760"
  },
  {
    "text": "cases and deploy the changes to lambda at the edge and CloudFront",
    "start": "2451760",
    "end": "2459010"
  },
  {
    "text": "reversion or confer configuration with github Enterprise and version the infrastructure with cloud front called",
    "start": "2459010",
    "end": "2465950"
  },
  {
    "text": "cloud formation templates we also used AWS x-ray cloud watch and new relic for",
    "start": "2465950",
    "end": "2473300"
  },
  {
    "text": "monitoring as chunga just mentioned that if you not monitoring and you are not measuring",
    "start": "2473300",
    "end": "2478790"
  },
  {
    "text": "the metrics you will not be able to improve so this is this step was really important for us so in this architecture",
    "start": "2478790",
    "end": "2486980"
  },
  {
    "text": "diagram if you recall the previous one we had previously content switch gateway",
    "start": "2486980",
    "end": "2492710"
  },
  {
    "text": "which has web access firewall rules so",
    "start": "2492710",
    "end": "2497810"
  },
  {
    "text": "we moved the raft rule inside AWS path and we moved the contents which gateway",
    "start": "2497810",
    "end": "2503990"
  },
  {
    "text": "rules more than 70 rules to lambda at the edge now with every request these",
    "start": "2503990",
    "end": "2509930"
  },
  {
    "text": "rules are running inside the lambda function completely testable solution and once the rules are parsed and",
    "start": "2509930",
    "end": "2518090"
  },
  {
    "text": "executed we are now executing a lambda at the edge a B test cases where we are",
    "start": "2518090",
    "end": "2526730"
  },
  {
    "text": "able to route request for application a B and C with good monitoring I think I",
    "start": "2526730",
    "end": "2533270"
  },
  {
    "text": "mentioned earlier about New Relic AWS cloud watch and x-ray we also have",
    "start": "2533270",
    "end": "2541550"
  },
  {
    "text": "enabled our access log to log on to s3 bucket as well so that later we can run",
    "start": "2541550",
    "end": "2547040"
  },
  {
    "text": "Athena query if you want to slice and dice information further so the impact",
    "start": "2547040",
    "end": "2553820"
  },
  {
    "start": "2553000",
    "end": "2553000"
  },
  {
    "text": "of this overall solution we moved from manual changes to completely automated",
    "start": "2553820",
    "end": "2559220"
  },
  {
    "text": "pipeline the check-in after check-in when the PR gets mulch once the PR is",
    "start": "2559220",
    "end": "2566990"
  },
  {
    "text": "merged to the deployment time it was completely fifteen minutes time I'll share some of the metrics in a in a bit",
    "start": "2566990",
    "end": "2574750"
  },
  {
    "text": "this complete automation brought the DevOps team completely in control now",
    "start": "2574750",
    "end": "2581000"
  },
  {
    "text": "depth now the ops team their role did not become obsolete they are rather happy to be part of DevOps team and more",
    "start": "2581000",
    "end": "2588980"
  },
  {
    "text": "confident while making their changes because one there are multiple eyes on",
    "start": "2588980",
    "end": "2593990"
  },
  {
    "text": "this while during the prev process and to you have good automated test coverage",
    "start": "2593990",
    "end": "2600730"
  },
  {
    "text": "so some of these slides I would like to share the metrics and our Jenkins",
    "start": "2601840",
    "end": "2607250"
  },
  {
    "text": "pipeline here so this is our typical Jenkins pipeline we have four solution we are in the pre-deployment setup we are running our test cases once",
    "start": "2607250",
    "end": "2617990"
  },
  {
    "text": "those cases are passing it goes on to deploy to lambda at the edge and then cloud trend to have better visibility in",
    "start": "2617990",
    "end": "2628400"
  },
  {
    "start": "2626000",
    "end": "2626000"
  },
  {
    "text": "monitoring and logging we used cloud Wash metrics to see lambda invocation",
    "start": "2628400",
    "end": "2634310"
  },
  {
    "text": "and errors we also kept an eye on average execution time of lambda function and keeping an eye on",
    "start": "2634310",
    "end": "2642200"
  },
  {
    "text": "throttling since this is just another lambda function and with lambda",
    "start": "2642200",
    "end": "2648770"
  },
  {
    "text": "throttling we need to be really careful if any time we see throttling it can",
    "start": "2648770",
    "end": "2654170"
  },
  {
    "text": "increase overall execution time of lambda function and requests we kept an",
    "start": "2654170",
    "end": "2660230"
  },
  {
    "text": "eye on long tail of execution time with x-ray and debugging we use neural ik",
    "start": "2660230",
    "end": "2667520"
  },
  {
    "text": "metrics to see which rules are becoming obsolete now we have better monitoring in that new relic monitoring also helped",
    "start": "2667520",
    "end": "2675440"
  },
  {
    "text": "us to analyze or error patterns - so the",
    "start": "2675440",
    "end": "2681260"
  },
  {
    "text": "result of this entire exercise and after these two projects we have better",
    "start": "2681260",
    "end": "2687680"
  },
  {
    "text": "monitoring and in-depth monitoring for our solution we have good automation",
    "start": "2687680",
    "end": "2693140"
  },
  {
    "text": "completed we have average latency still well within the limit less than 20",
    "start": "2693140",
    "end": "2700070"
  },
  {
    "text": "millisecond and with the automation velocity has improved immensely we have",
    "start": "2700070",
    "end": "2706070"
  },
  {
    "text": "we are doing multiple deployments of week now so just going a recap and",
    "start": "2706070",
    "end": "2714710"
  },
  {
    "text": "thinking about what we have seen so far we have seen two use cases for lambda at",
    "start": "2714710",
    "end": "2720440"
  },
  {
    "text": "the edge and cloud front for a be testing as well as we moved our contents switch gateway which was some custom",
    "start": "2720440",
    "end": "2725960"
  },
  {
    "text": "rules inside lambda function I would like to share some of the lessons we",
    "start": "2725960",
    "end": "2731570"
  },
  {
    "start": "2731000",
    "end": "2731000"
  },
  {
    "text": "have learned along this journey testing",
    "start": "2731570",
    "end": "2736580"
  },
  {
    "text": "is really important we turn on the vassal and count mode and then optimize",
    "start": "2736580",
    "end": "2741890"
  },
  {
    "text": "them later versus the other way around to ensure that performance is not",
    "start": "2741890",
    "end": "2747890"
  },
  {
    "text": "degrading while we are moving our contents which gateway inside lambda function we ran we took percentage of",
    "start": "2747890",
    "end": "2755000"
  },
  {
    "text": "requests from production traffic and replayed on production like environment multiple times to see the performance is",
    "start": "2755000",
    "end": "2761750"
  },
  {
    "text": "still up to the mark which also ensured that we are not running into errors while we moved our control switch rules",
    "start": "2761750",
    "end": "2768770"
  },
  {
    "text": "here the complete automation the Jenkins",
    "start": "2768770",
    "end": "2774050"
  },
  {
    "text": "pipeline improved our velocity also with the dev and ops team working together it",
    "start": "2774050",
    "end": "2782780"
  },
  {
    "text": "improved our agility from the solution one where we did custom a beta setup to",
    "start": "2782780",
    "end": "2788810"
  },
  {
    "text": "the solution to where we did a migration of content switch gateway rules the",
    "start": "2788810",
    "end": "2793940"
  },
  {
    "text": "second time we did the similar thing it took really less time for us in this",
    "start": "2793940",
    "end": "2799280"
  },
  {
    "text": "solution we did not have manual changes now things are going with a proper",
    "start": "2799280",
    "end": "2804740"
  },
  {
    "text": "process and automation which brought more robustness and more confidence in",
    "start": "2804740",
    "end": "2810530"
  },
  {
    "text": "our solution there are plenty of tools available for monitoring we found cloud",
    "start": "2810530",
    "end": "2816620"
  },
  {
    "text": "wash metrics and x-ray rules are really useful for us so fine but what better",
    "start": "2816620",
    "end": "2823280"
  },
  {
    "text": "tools are available for you and what are best suitable for your applications also",
    "start": "2823280",
    "end": "2830000"
  },
  {
    "text": "I think I mentioned this earlier but reiterating that keeping an eye on lambda function is very important lambda",
    "start": "2830000",
    "end": "2835760"
  },
  {
    "text": "throttling cloud watch metrics are the ones which are really helpful for this",
    "start": "2835760",
    "end": "2840910"
  },
  {
    "text": "above all collaboration is the key to DevOps success nothing happens in vacuum",
    "start": "2840910",
    "end": "2847040"
  },
  {
    "text": "if this work would not have been possible without him the work of impassioned developers and system",
    "start": "2847040",
    "end": "2854300"
  },
  {
    "text": "engineers working across the entire organization also we found able partner",
    "start": "2854300",
    "end": "2861050"
  },
  {
    "text": "with AWS technical account managers and support team who work very closely with",
    "start": "2861050",
    "end": "2866930"
  },
  {
    "text": "our DevOps team and made some very tricky things simple for us so what is",
    "start": "2866930",
    "end": "2873410"
  },
  {
    "start": "2873000",
    "end": "2873000"
  },
  {
    "text": "next we have some new exciting challenges coming in for us we have image resizing at runtime with",
    "start": "2873410",
    "end": "2880910"
  },
  {
    "text": "CloudFront and lambda at the edge coming up for us after realtor.com we have",
    "start": "2880910",
    "end": "2887210"
  },
  {
    "text": "moving dot-com already on the solution and there are a bunch of other domains already lined up to migrate we have",
    "start": "2887210",
    "end": "2895099"
  },
  {
    "text": "lambda blue grain deployment in ECS blue-green deployment already work in progress if you would like to know more",
    "start": "2895099",
    "end": "2902599"
  },
  {
    "text": "about this the solution we talked about or if you have some questions I'm happy",
    "start": "2902599",
    "end": "2908450"
  },
  {
    "text": "to answer some of your question after the session if you would like to work on some of",
    "start": "2908450",
    "end": "2913730"
  },
  {
    "text": "these exciting challenges come join us thank you thank you guru so let's have a",
    "start": "2913730",
    "end": "2927050"
  },
  {
    "start": "2923000",
    "end": "2923000"
  },
  {
    "text": "quick look at some of the key takeaways that we can take home from our session today so I would encourage everyone to",
    "start": "2927050",
    "end": "2936230"
  },
  {
    "text": "consider our edge portfolio as part of your application delivery lifecycle I",
    "start": "2936230",
    "end": "2943089"
  },
  {
    "text": "remember when I was an engineer and a customer we deploy our application into",
    "start": "2943089",
    "end": "2949760"
  },
  {
    "text": "origin and then we hand it over to the ops team to configure the edge cloud",
    "start": "2949760",
    "end": "2955670"
  },
  {
    "text": "cloud front configurations but with now",
    "start": "2955670",
    "end": "2960820"
  },
  {
    "text": "with our stack you can access using the console to start with use command line",
    "start": "2960820",
    "end": "2968570"
  },
  {
    "text": "tools and using for structure infrastructure as a code using cloud formation and actually showed in our",
    "start": "2968570",
    "end": "2975710"
  },
  {
    "text": "session you can automate of your build release and test process use the",
    "start": "2975710",
    "end": "2985670"
  },
  {
    "text": "monitoring capabilities with cloud watch extend that with cloud trail use the",
    "start": "2985670",
    "end": "2992119"
  },
  {
    "text": "example pipelines that we showed in our blog post to get the maximum out of the",
    "start": "2992119",
    "end": "2998660"
  },
  {
    "text": "data that you have within your platform and most importantly every day when you",
    "start": "2998660",
    "end": "3005770"
  },
  {
    "text": "wake up in the morning if you keep an eye out of our what's new page",
    "start": "3005770",
    "end": "3011740"
  },
  {
    "text": "and the Jeff Jeff bars blog there's new features been added to our platform in",
    "start": "3011740",
    "end": "3017140"
  },
  {
    "text": "daily basis and feel free to have a look at the new features that we added into",
    "start": "3017140",
    "end": "3024580"
  },
  {
    "text": "our platform of the services that we have discussed today in our session and",
    "start": "3024580",
    "end": "3030150"
  },
  {
    "text": "also the new services that we have releases in this reinvent thank you for",
    "start": "3030150",
    "end": "3036220"
  },
  {
    "text": "coming along and please use the app to",
    "start": "3036220",
    "end": "3042010"
  },
  {
    "text": "give us the rating and give us the feedback because your feedback is very important to us to improve and run more",
    "start": "3042010",
    "end": "3050080"
  },
  {
    "text": "sessions like this and to improve our sessions in the next Raymond thank you",
    "start": "3050080",
    "end": "3056850"
  },
  {
    "text": "[Applause]",
    "start": "3056850",
    "end": "3059600"
  }
]