[
  {
    "text": "(upbeat electronic music)\n- Hi, I'm Andrea from AWS.",
    "start": "213",
    "end": "2730"
  },
  {
    "text": "- Hi, I'm Sam from Grindr,",
    "start": "2730",
    "end": "4410"
  },
  {
    "text": "and this is my architecture.",
    "start": "4410",
    "end": "5810"
  },
  {
    "text": "- Thanks for being here, Sam.",
    "start": "15540",
    "end": "17430"
  },
  {
    "text": "So, let's dive into this architecture,",
    "start": "17430",
    "end": "19500"
  },
  {
    "text": "which focuses on your\nnext gen chat system,",
    "start": "19500",
    "end": "23610"
  },
  {
    "text": "which sits on AWS.",
    "start": "23610",
    "end": "25260"
  },
  {
    "text": "What is it?",
    "start": "25260",
    "end": "26820"
  },
  {
    "text": "- Well, first of all,",
    "start": "26820",
    "end": "27960"
  },
  {
    "text": "Grindr is a dating and connection app",
    "start": "27960",
    "end": "29970"
  },
  {
    "text": "for the LGBTQ community.",
    "start": "29970",
    "end": "32340"
  },
  {
    "text": "And what's unique about Grindr",
    "start": "32340",
    "end": "34650"
  },
  {
    "text": "is that you can initiate a conversation",
    "start": "34650",
    "end": "36930"
  },
  {
    "text": "with any of the other users,",
    "start": "36930",
    "end": "38010"
  },
  {
    "text": "you don't have to have a match, okay,",
    "start": "38010",
    "end": "39237"
  },
  {
    "text": "and you can just start a conversation.",
    "start": "39237",
    "end": "40620"
  },
  {
    "text": "So that leads to a huge amount of chats",
    "start": "40620",
    "end": "43230"
  },
  {
    "text": "being generated across our platform.",
    "start": "43230",
    "end": "45390"
  },
  {
    "text": "And last year we actually\nsent 121 billion chats.",
    "start": "45390",
    "end": "48690"
  },
  {
    "text": "- So, massive scale.",
    "start": "48690",
    "end": "49559"
  },
  {
    "text": "- Massive scale.",
    "start": "49560",
    "end": "50400"
  },
  {
    "text": "- Awesome. Let's walk\nthrough a user journey.",
    "start": "50400",
    "end": "52890"
  },
  {
    "text": "Say I'm a user,",
    "start": "52890",
    "end": "54270"
  },
  {
    "text": "I'm using this chat system,",
    "start": "54270",
    "end": "56130"
  },
  {
    "text": "and I'm sending a message.",
    "start": "56130",
    "end": "58140"
  },
  {
    "text": "What's the first thing that happens?",
    "start": "58140",
    "end": "59640"
  },
  {
    "text": "- So you would find the user\nthat you want to talk to",
    "start": "59640",
    "end": "61829"
  },
  {
    "text": "in the app, you bring their\nprofile up, their image up,",
    "start": "61830",
    "end": "64290"
  },
  {
    "text": "click on the speech bubble,",
    "start": "64290",
    "end": "65610"
  },
  {
    "text": "and then you would send\nin your chat message.",
    "start": "65610",
    "end": "68070"
  },
  {
    "text": "And so what would happen is,",
    "start": "68070",
    "end": "69510"
  },
  {
    "text": "the phone would send a message",
    "start": "69510",
    "end": "71100"
  },
  {
    "text": "to our web socket layer, okay?",
    "start": "71100",
    "end": "73290"
  },
  {
    "text": "And that is the first step in the journey.",
    "start": "73290",
    "end": "75360"
  },
  {
    "text": "At this point, the system will then check,",
    "start": "75360",
    "end": "76687"
  },
  {
    "text": "you know, you are logged\nin, your credentials,",
    "start": "76687",
    "end": "79979"
  },
  {
    "text": "they will check that the\nuser hasn't blocked you.",
    "start": "79980",
    "end": "81990"
  },
  {
    "text": "So, the basic kind of\nlow-level of validations",
    "start": "81990",
    "end": "84240"
  },
  {
    "text": "will take place at that point.",
    "start": "84240",
    "end": "85350"
  },
  {
    "text": "- I see, Elastic Kubernetes Service.",
    "start": "85350",
    "end": "87330"
  },
  {
    "text": "And then where do you run",
    "start": "87330",
    "end": "88800"
  },
  {
    "text": "kind of the brain of the operation?",
    "start": "88800",
    "end": "90450"
  },
  {
    "text": "So now you initiate the\nfirst contact to EKS,",
    "start": "90450",
    "end": "93000"
  },
  {
    "text": "where's the brain of operations,",
    "start": "93000",
    "end": "94230"
  },
  {
    "text": "where you decide upon\nthe different services",
    "start": "94230",
    "end": "97140"
  },
  {
    "text": "that you want to initiate?",
    "start": "97140",
    "end": "99120"
  },
  {
    "text": "- So we have a\nmicroservice-based architecture,",
    "start": "99120",
    "end": "100800"
  },
  {
    "text": "it's all posted in EKS,",
    "start": "100800",
    "end": "102956"
  },
  {
    "text": "and so once the message arrives\nat the web socket layer,",
    "start": "102956",
    "end": "105240"
  },
  {
    "text": "it will then kind of contact\nthese internal services,",
    "start": "105240",
    "end": "107820"
  },
  {
    "text": "what we call the chat metadata services.",
    "start": "107820",
    "end": "110370"
  },
  {
    "text": "And from there,",
    "start": "110370",
    "end": "111330"
  },
  {
    "text": "the system will perform further checks,",
    "start": "111330",
    "end": "112860"
  },
  {
    "text": "and ultimately persist the message.",
    "start": "112860",
    "end": "114300"
  },
  {
    "text": "- Fantastic.",
    "start": "114300",
    "end": "115133"
  },
  {
    "text": "Now I have the message that I'm sending,",
    "start": "115133",
    "end": "117000"
  },
  {
    "text": "where do you persist that?",
    "start": "117000",
    "end": "118590"
  },
  {
    "text": "- That's a good question,",
    "start": "118590",
    "end": "119423"
  },
  {
    "text": "'cause we actually have\ntwo storage systems in use.",
    "start": "119423",
    "end": "122189"
  },
  {
    "text": "We have both Amazon Dynamo,\nand we have Aurora Postgres,",
    "start": "122190",
    "end": "126810"
  },
  {
    "text": "and we bifurcate the data between the two.",
    "start": "126810",
    "end": "128940"
  },
  {
    "text": "So the chat content,\nthe body of the message,",
    "start": "128940",
    "end": "132060"
  },
  {
    "text": "that goes into Dynamo,",
    "start": "132060",
    "end": "133380"
  },
  {
    "text": "and then what we call the metadata,",
    "start": "133380",
    "end": "134850"
  },
  {
    "text": "so like the headers, or the\nenvelope, of the messages,",
    "start": "134850",
    "end": "137100"
  },
  {
    "text": "and the inbox information,",
    "start": "137100",
    "end": "138450"
  },
  {
    "text": "that goes into Postgres.",
    "start": "138450",
    "end": "139500"
  },
  {
    "text": "- Fantastic.",
    "start": "139500",
    "end": "140333"
  },
  {
    "text": "Why did you do that?",
    "start": "140333",
    "end": "141165"
  },
  {
    "text": "Why choose both of them?",
    "start": "141166",
    "end": "142530"
  },
  {
    "text": "- Yeah, that's another great question.",
    "start": "142530",
    "end": "144090"
  },
  {
    "text": "The answer is, message data,\nthe content of the messages,",
    "start": "144090",
    "end": "148379"
  },
  {
    "text": "will grow very quickly,",
    "start": "148380",
    "end": "149880"
  },
  {
    "text": "so we need the kind of\nhuge scale of storage,",
    "start": "149880",
    "end": "152460"
  },
  {
    "text": "and that's what Amazon\nDynamo will give us.",
    "start": "152460",
    "end": "154320"
  },
  {
    "text": "But you also don't read\nthose messages a lot.",
    "start": "154320",
    "end": "156630"
  },
  {
    "text": "Once the message is sent to the phone,",
    "start": "156630",
    "end": "158430"
  },
  {
    "text": "it kind of stays on the phone,",
    "start": "158430",
    "end": "159659"
  },
  {
    "text": "unless you change device, or\nmove to a different device.",
    "start": "159660",
    "end": "162660"
  },
  {
    "text": "But the inbox is constantly changing,",
    "start": "162660",
    "end": "164640"
  },
  {
    "text": "okay so, the message data,",
    "start": "164640",
    "end": "165630"
  },
  {
    "text": "who sent the message last,\nthe ordering of the inbox,",
    "start": "165630",
    "end": "168030"
  },
  {
    "text": "the timestamp on the messages,",
    "start": "168030",
    "end": "169860"
  },
  {
    "text": "all of that is constantly changing.",
    "start": "169860",
    "end": "171210"
  },
  {
    "text": "And so we have a very read-heavy load,",
    "start": "171210",
    "end": "173790"
  },
  {
    "text": "this is read-heavy load,",
    "start": "173790",
    "end": "174622"
  },
  {
    "text": "and this is a write-heavy load.",
    "start": "174623",
    "end": "175860"
  },
  {
    "text": "And so that's why we kind\nof separate the data out.",
    "start": "175860",
    "end": "177810"
  },
  {
    "text": "- So you use the best of both, right?",
    "start": "177810",
    "end": "179489"
  },
  {
    "text": "- Absolutely, yeah.",
    "start": "179490",
    "end": "180323"
  },
  {
    "text": "- With Aurora for read,\nand then Dynamo for writes.",
    "start": "180323",
    "end": "183540"
  },
  {
    "text": "And then say, in this case,\nwhen I'm sending my message,",
    "start": "183540",
    "end": "187260"
  },
  {
    "text": "I have an inbox, you mentioned the inbox,",
    "start": "187260",
    "end": "189840"
  },
  {
    "text": "how do you make that\ninbox readily available",
    "start": "189840",
    "end": "191760"
  },
  {
    "text": "so you don't need to\ngo to Aurora every time",
    "start": "191760",
    "end": "193890"
  },
  {
    "text": "to read that information?",
    "start": "193890",
    "end": "195360"
  },
  {
    "text": "- [Sam] That's where our\nelastic cache comes in,",
    "start": "195360",
    "end": "197220"
  },
  {
    "text": "which we're using the Redis version,",
    "start": "197220",
    "end": "198420"
  },
  {
    "text": "the Redis flavor of ElastiCache.",
    "start": "198420",
    "end": "200430"
  },
  {
    "text": "And so once a user connects,",
    "start": "200430",
    "end": "202859"
  },
  {
    "text": "the phone will connect to the service,",
    "start": "202860",
    "end": "204900"
  },
  {
    "text": "over REST this time,",
    "start": "204900",
    "end": "206370"
  },
  {
    "text": "and then it will come over to,",
    "start": "206370",
    "end": "208274"
  },
  {
    "text": "again, the brain of the operation.",
    "start": "208274",
    "end": "209280"
  },
  {
    "text": "The system will then\ncome to Redis and say,",
    "start": "209280",
    "end": "211447"
  },
  {
    "text": "\"Is that user's inbox available?\"",
    "start": "211447",
    "end": "213270"
  },
  {
    "text": "If it is, it can be served immediately",
    "start": "213270",
    "end": "214950"
  },
  {
    "text": "with no load on the database.",
    "start": "214950",
    "end": "216569"
  },
  {
    "text": "If it's the first time\nthe user's been online,",
    "start": "216570",
    "end": "218756"
  },
  {
    "text": "you know, for a few hours,",
    "start": "218756",
    "end": "220050"
  },
  {
    "text": "it will then come over to Aurora,",
    "start": "220050",
    "end": "222000"
  },
  {
    "text": "it will refresh the user's entire inbox,",
    "start": "222000",
    "end": "224640"
  },
  {
    "text": "populate that back into\nthe readiness cache,",
    "start": "224640",
    "end": "227069"
  },
  {
    "text": "and from that moment\non, it's kept up to date",
    "start": "227070",
    "end": "228600"
  },
  {
    "text": "until the user goes offline.",
    "start": "228600",
    "end": "229530"
  },
  {
    "text": "- Fantastic.",
    "start": "229530",
    "end": "230362"
  },
  {
    "text": "So, a very intelligent way",
    "start": "230363",
    "end": "231450"
  },
  {
    "text": "of making information readily-available",
    "start": "231450",
    "end": "235319"
  },
  {
    "text": "for the user whenever needed.",
    "start": "235320",
    "end": "237090"
  },
  {
    "text": "In this architecture,",
    "start": "237090",
    "end": "238830"
  },
  {
    "text": "you know, you might have\ntwo scenarios, right,",
    "start": "238830",
    "end": "240785"
  },
  {
    "text": "the other user being available\nonline, versus offline.",
    "start": "240785",
    "end": "245580"
  },
  {
    "text": "Is that a decision factor",
    "start": "245580",
    "end": "246840"
  },
  {
    "text": "that you had to incorporate\ninto this architecture?",
    "start": "246840",
    "end": "249750"
  },
  {
    "text": "- Yeah, so once the message is persisted,",
    "start": "249750",
    "end": "252180"
  },
  {
    "text": "which we've talked about,",
    "start": "252180",
    "end": "253500"
  },
  {
    "text": "the system will then come\nback to the web socket layer,",
    "start": "253500",
    "end": "256200"
  },
  {
    "text": "and say, \"Is the user online?\"",
    "start": "256200",
    "end": "257430"
  },
  {
    "text": "If you're sending me a message,",
    "start": "257430",
    "end": "259590"
  },
  {
    "text": "if I'm online, I will also\nhave a web socket session,",
    "start": "259590",
    "end": "262350"
  },
  {
    "text": "and the system's able to say,",
    "start": "262350",
    "end": "263347"
  },
  {
    "text": "\"Let me send that message\nback out over my web socket.\"",
    "start": "263347",
    "end": "266129"
  },
  {
    "text": "So, this is your web socket, W1,",
    "start": "266130",
    "end": "268320"
  },
  {
    "text": "this is my web socket, W2.",
    "start": "268320",
    "end": "270180"
  },
  {
    "text": "If you are not online,",
    "start": "270180",
    "end": "271350"
  },
  {
    "text": "you're asleep, or you're away\nfrom your phone, or whatever,",
    "start": "271350",
    "end": "273660"
  },
  {
    "text": "the system will determine",
    "start": "273660",
    "end": "274620"
  },
  {
    "text": "that there's no web\nsocket connection open.",
    "start": "274620",
    "end": "276840"
  },
  {
    "text": "We'll then talk to Amazon Pinpoint,",
    "start": "276840",
    "end": "278580"
  },
  {
    "text": "to send a push notification\nover the telephony network.",
    "start": "278580",
    "end": "281370"
  },
  {
    "text": "And so then you will get a\npopup on your phone that says,",
    "start": "281370",
    "end": "283830"
  },
  {
    "text": "you know, Sam Sam sent you a message,",
    "start": "283830",
    "end": "284836"
  },
  {
    "text": "or you sent me a message,",
    "start": "284837",
    "end": "286230"
  },
  {
    "text": "and you will typically then open the app",
    "start": "286230",
    "end": "288330"
  },
  {
    "text": "to come and see what that message is.",
    "start": "288330",
    "end": "289163"
  },
  {
    "text": "- Fantastic. Fantastic.",
    "start": "289163",
    "end": "290310"
  },
  {
    "text": "And then let's talk a\nlittle bit about security.",
    "start": "290310",
    "end": "292710"
  },
  {
    "text": "You know, what security\ncapabilities do you offer",
    "start": "292710",
    "end": "295110"
  },
  {
    "text": "for users using this platform?",
    "start": "295110",
    "end": "297780"
  },
  {
    "text": "- So, all the message content,",
    "start": "297780",
    "end": "299040"
  },
  {
    "text": "which comes into Dynamo, as we mentioned,",
    "start": "299040",
    "end": "300780"
  },
  {
    "text": "that's fully encrypted in the application,",
    "start": "300780",
    "end": "302760"
  },
  {
    "text": "they're not just at rest,",
    "start": "302760",
    "end": "303720"
  },
  {
    "text": "and we use Amazon KMS for that.",
    "start": "303720",
    "end": "306390"
  },
  {
    "text": "So this metadata service will\nencrypt before it comes down,",
    "start": "306390",
    "end": "311100"
  },
  {
    "text": "and then inside here, we just\nhave the encrypted bytes.",
    "start": "311100",
    "end": "313890"
  },
  {
    "text": "We know the message id,",
    "start": "313890",
    "end": "315600"
  },
  {
    "text": "so we're able to pull that back,",
    "start": "315600",
    "end": "316980"
  },
  {
    "text": "and that's why we can use Dynamo as well,",
    "start": "316980",
    "end": "318390"
  },
  {
    "text": "because of the key-value store capability.",
    "start": "318390",
    "end": "320400"
  },
  {
    "text": "- I see.",
    "start": "320400",
    "end": "321233"
  },
  {
    "text": "What about spams and other attributes",
    "start": "321233",
    "end": "323730"
  },
  {
    "text": "that might infiltrate the system?",
    "start": "323730",
    "end": "326670"
  },
  {
    "text": "- Yeah, so protecting our users,",
    "start": "326670",
    "end": "329040"
  },
  {
    "text": "we have a bunch of systems\nthat will sit off this,",
    "start": "329040",
    "end": "331170"
  },
  {
    "text": "that will get the data\nthrough our event bus,",
    "start": "331170",
    "end": "333690"
  },
  {
    "text": "which we use Kafka for,",
    "start": "333690",
    "end": "335714"
  },
  {
    "text": "so this is a managed\nservice for Kafka in AWS.",
    "start": "335714",
    "end": "338490"
  },
  {
    "text": "And so every time a message is sent,",
    "start": "338490",
    "end": "339870"
  },
  {
    "text": "we'll send a metadata,",
    "start": "339870",
    "end": "341430"
  },
  {
    "text": "and a metadata event will\nbe sent over to Kafka,",
    "start": "341430",
    "end": "345419"
  },
  {
    "text": "at which point we will\nhave a bunch of consumers",
    "start": "345420",
    "end": "347520"
  },
  {
    "text": "that sit off the topic and\nare picking up those events.",
    "start": "347520",
    "end": "351900"
  },
  {
    "text": "And then they will do\nasynchronous operations,",
    "start": "351900",
    "end": "353759"
  },
  {
    "text": "such as anti-spam, or\ntracking user connections.",
    "start": "353760",
    "end": "356790"
  },
  {
    "text": "- So, integration with other systems",
    "start": "356790",
    "end": "358320"
  },
  {
    "text": "that this could benefit from.",
    "start": "358320",
    "end": "360000"
  },
  {
    "text": "And also the trade-offs,",
    "start": "360000",
    "end": "361710"
  },
  {
    "text": "why did you settle on\nManaged Service Kafka,",
    "start": "361710",
    "end": "364530"
  },
  {
    "text": "and not RabbitMQ, or, you know,\nany other messaging system?",
    "start": "364530",
    "end": "367800"
  },
  {
    "text": "- Yeah, great question.",
    "start": "367800",
    "end": "369360"
  },
  {
    "text": "RabbitMQ is a great product,",
    "start": "369360",
    "end": "370770"
  },
  {
    "text": "but what Kafka gives us",
    "start": "370770",
    "end": "371789"
  },
  {
    "text": "is the ability to easily\nadd new consumers,",
    "start": "371790",
    "end": "373980"
  },
  {
    "text": "and then replay those messages.",
    "start": "373980",
    "end": "375943"
  },
  {
    "text": "And so for things like this chat system,",
    "start": "375943",
    "end": "378479"
  },
  {
    "text": "where we're constantly\nadding new consumers,",
    "start": "378480",
    "end": "380190"
  },
  {
    "text": "we're constantly adding new\nspam rules, that kind of thing,",
    "start": "380190",
    "end": "382440"
  },
  {
    "text": "it's very easy to add a new consumer,",
    "start": "382440",
    "end": "384300"
  },
  {
    "text": "hook it up to the topic,",
    "start": "384300",
    "end": "385319"
  },
  {
    "text": "and the producers don't\nhave to care about it.",
    "start": "385320",
    "end": "386970"
  },
  {
    "text": "So the producers can just send\nthe message over and over,",
    "start": "386970",
    "end": "390180"
  },
  {
    "text": "and then hooking up these extra consumers,",
    "start": "390180",
    "end": "392009"
  },
  {
    "text": "it's completely decoupled.",
    "start": "392010",
    "end": "393450"
  },
  {
    "text": "- Fantastic.\n(upbeat electronic music)",
    "start": "393450",
    "end": "394410"
  },
  {
    "text": "Sam, thanks so much for walking us through",
    "start": "394410",
    "end": "396120"
  },
  {
    "text": "this amazing architecture with\nyour next gen chat system.",
    "start": "396120",
    "end": "399780"
  },
  {
    "text": "- It was a pleasure to be here. Thank you.",
    "start": "399780",
    "end": "401483"
  }
]