[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "Hi, I'm Matt from AWS.",
    "start": "7153",
    "end": "8825"
  },
  {
    "text": "And on today's episode of 'This is My Architecture',",
    "start": "8825",
    "end": "10825"
  },
  {
    "text": "I'm joined by Andy from OutSystems.",
    "start": "10825",
    "end": "12425"
  },
  {
    "text": "Thanks for joining us.",
    "start": "12425",
    "end": "13125"
  },
  {
    "text": "Thanks for having me.",
    "start": "13125",
    "end": "13925"
  },
  {
    "text": "So, tell us about OutSystems.",
    "start": "13925",
    "end": "15125"
  },
  {
    "text": "OutSystems is a leading low code application development platform, and we're building our new platform on AWS.",
    "start": "15125",
    "end": "21025"
  },
  {
    "text": "Great.",
    "start": "21125",
    "end": "21425"
  },
  {
    "text": "Thank you.",
    "start": "21425",
    "end": "21925"
  },
  {
    "text": "So Architects, like us like to talk about monolith decomposition,",
    "start": "22225",
    "end": "25025"
  },
  {
    "text": "it's one of those favorite topics, but there's more to decomposing a monolith than just the application or the microservices part.",
    "start": "25025",
    "end": "30425"
  },
  {
    "text": "Is that right?",
    "start": "30425",
    "end": "31025"
  },
  {
    "text": "Right, it's really the data, the data really.\nIt has a gravity to it,",
    "start": "31025",
    "end": "35325"
  },
  {
    "text": "That makes it really difficult for you to scale and also write and also build a high-performance low-cost platform,",
    "start": "35325",
    "end": "44871"
  },
  {
    "text": "and especially as we're going multi-tenancy,",
    "start": "44871",
    "end": "47625"
  },
  {
    "text": "that's where a lot of the services in AWS really benefit us.",
    "start": "47825",
    "end": "50241"
  },
  {
    "text": "We have in our platform, we have several different kinds of data.",
    "start": "51008",
    "end": "56025"
  },
  {
    "text": "We have a whole segment of binary data.",
    "start": "56325",
    "end": "58925"
  },
  {
    "text": "Yeah.",
    "start": "58925",
    "end": "59225"
  },
  {
    "text": "We have a bunch of relational, correlational items that that go to defining the applications we give our customers.",
    "start": "59625",
    "end": "68225"
  },
  {
    "text": "Okay.",
    "start": "68225",
    "end": "68424"
  },
  {
    "text": "We have a bunch of data that's really configurational,",
    "start": "69025",
    "end": "72356"
  },
  {
    "text": "really it's key value pairs.",
    "start": "72356",
    "end": "74025"
  },
  {
    "text": "And then the last part is a bunch of encrypted, encrypted data for sensitive information.",
    "start": "74925",
    "end": "81725"
  },
  {
    "text": "So as part of your journey to microservices and decomposing this monolith,",
    "start": "81925",
    "end": "84825"
  },
  {
    "text": "you're looking at the different types of data within your applications and then putting them in the different storage and database services that AWS offers.",
    "start": "85260",
    "end": "91725"
  },
  {
    "text": "Is that right?",
    "start": "91725",
    "end": "92325"
  },
  {
    "start": "92000",
    "end": "142000"
  },
  {
    "text": "Yes, and the great thing about all these different services,",
    "start": "92325",
    "end": "96160"
  },
  {
    "text": "Like we will take binaries, you know, S3 is a natural location for unstructured, blob data.",
    "start": "96556",
    "end": "102993"
  },
  {
    "text": "Yeah.",
    "start": "102993",
    "end": "103225"
  },
  {
    "text": "It's also a great place to store document or structured data.",
    "start": "103225",
    "end": "108025"
  },
  {
    "text": "That is just accessed by a key,",
    "start": "108025",
    "end": "109494"
  },
  {
    "text": "effectively a key value store, yeah?",
    "start": "109494",
    "end": "111525"
  },
  {
    "text": "Exactly, exactly.",
    "start": "111796",
    "end": "113024"
  },
  {
    "text": "And it's something that scales.",
    "start": "113025",
    "end": "115425"
  },
  {
    "text": "It's something that's resilient.",
    "start": "115725",
    "end": "117125"
  },
  {
    "text": "We still have a lot of data, which really should still be relational.",
    "start": "117725",
    "end": "121725"
  },
  {
    "text": "Yeah.",
    "start": "121725",
    "end": "122358"
  },
  {
    "text": "and that's where using Aurora\nServerless really comes in comes into play.",
    "start": "122358",
    "end": "126825"
  },
  {
    "text": "Because one of the things that we're doing during our decomposition,",
    "start": "127305",
    "end": "129225"
  },
  {
    "text": "is that each of our customers - each of our tenants - will\nhave their own instances of these different services.",
    "start": "130584",
    "end": "136425"
  },
  {
    "text": "So, you don't have sort of a giant centralized database, you have,",
    "start": "136425",
    "end": "139325"
  },
  {
    "text": "applications team owning their own Aurora Serverless instances, is that right?",
    "start": "139325",
    "end": "142724"
  },
  {
    "start": "142000",
    "end": "168000"
  },
  {
    "text": "Exactly.",
    "start": "142725",
    "end": "143225"
  },
  {
    "text": "And that's the really, the power of this serverless.",
    "start": "143225",
    "end": "146325"
  },
  {
    "text": "These request-based kind of data services, is that you can have",
    "start": "146325",
    "end": "149625"
  },
  {
    "text": "different services, each having their own instances of these,",
    "start": "149625",
    "end": "153903"
  },
  {
    "text": "to let my teams manage their own data but also run independently.",
    "start": "153903",
    "end": "157941"
  },
  {
    "text": "Okay, so relational data, in Aurora, Aurora Serverless.",
    "start": "157941",
    "end": "161924"
  },
  {
    "text": "You have key value and more sort of blob like data in S3.",
    "start": "161925",
    "end": "165225"
  },
  {
    "text": "How are using Dynamo?",
    "start": "165225",
    "end": "166125"
  },
  {
    "text": "And I see Secrets Manager here, too.",
    "start": "166125",
    "end": "167525"
  },
  {
    "text": "Yeah.",
    "start": "167625",
    "end": "167825"
  },
  {
    "text": "So a lot of as we're looking at all the data that we're storing inside of the relational.",
    "start": "167825",
    "end": "173025"
  },
  {
    "start": "168000",
    "end": "216000"
  },
  {
    "text": "One of the things that we evaluated as how much of the configuration or the key/value pair data that we have,",
    "start": "173425",
    "end": "179387"
  },
  {
    "text": "If we could use and leverage something that's a little bit less expensive,",
    "start": "179387",
    "end": "183411"
  },
  {
    "text": "but also scales a little better.",
    "start": "183411",
    "end": "186213"
  },
  {
    "text": "So you're offloading some of the data out of the relational database to DynamoDB.",
    "start": "186214",
    "end": "189325"
  },
  {
    "text": "Yeah, it's not it's not that we're worried necessarily about Aurora's performance.",
    "start": "189325",
    "end": "193325"
  },
  {
    "text": "It's more of the idea of the relational databases inherently that,",
    "start": "193325",
    "end": "197425"
  },
  {
    "text": "singleton and an architecture from a performance and scale perspective,",
    "start": "197425",
    "end": "200625"
  },
  {
    "text": "and leveraging some of the other services.",
    "start": "200925",
    "end": "202525"
  },
  {
    "text": "It gives us some, some more agility.",
    "start": "202525",
    "end": "205325"
  },
  {
    "text": "I mean, it makes total sense to sort of tier your data and choose the purpose-built database to best meet your needs.",
    "start": "205325",
    "end": "209825"
  },
  {
    "text": "I'm curious to know how using Secrets Manager, you know, you normally wouldn't associate it with database and storage services.",
    "start": "210125",
    "end": "215325"
  },
  {
    "text": "But in this case,",
    "start": "215325",
    "end": "216157"
  },
  {
    "start": "216000",
    "end": "281000"
  },
  {
    "text": "Yeah, and so, you know our current product is based on an enterprise architecture.",
    "start": "216559",
    "end": "222325"
  },
  {
    "text": "Yeah.",
    "start": "222325",
    "end": "222625"
  },
  {
    "text": "Where the only kind of predictable well-maintained storage, you have would be a relational database,",
    "start": "222725",
    "end": "230533"
  },
  {
    "text": "so it became a catch-all for where we put things.",
    "start": "230533",
    "end": "234025"
  },
  {
    "text": "Now we don't store secrets inside of our the relational store.",
    "start": "234025",
    "end": "237525"
  },
  {
    "text": "But we do store encrypted data,",
    "start": "237525",
    "end": "239424"
  },
  {
    "text": "Okay.",
    "start": "239425",
    "end": "239897"
  },
  {
    "text": "You know, some of the different RDS,",
    "start": "239897",
    "end": "241325"
  },
  {
    "text": "or relational instances give you the ability to manage it.",
    "start": "241325",
    "end": "244183"
  },
  {
    "text": "And, then we also have our own app level,",
    "start": "244183",
    "end": "246311"
  },
  {
    "text": "but that's where Secrets Manager comes in,",
    "start": "246311",
    "end": "248518"
  },
  {
    "text": "where instead of us having to manage it.",
    "start": "248518",
    "end": "251425"
  },
  {
    "text": "We can we can offload that.",
    "start": "252025",
    "end": "253825"
  },
  {
    "text": "And then, you know, use a service to securely store those items.",
    "start": "253825",
    "end": "259025"
  },
  {
    "text": "So instead of pre-encrypting and then loading into the relational database, you could just put it into Secrets Manager directly.",
    "start": "259025",
    "end": "263330"
  },
  {
    "text": "Exactly.",
    "start": "263330",
    "end": "263925"
  },
  {
    "text": "And then through the use of like IAM roles and other things, it allows us to ensure, you know, that tenancy boundary for our customers.",
    "start": "263925",
    "end": "271724"
  },
  {
    "text": "Okay.",
    "start": "271825",
    "end": "272225"
  },
  {
    "text": "You said tenancy a few times and multi-tenancy.",
    "start": "272225",
    "end": "274425"
  },
  {
    "text": "Is that how you're using KMS, you know.",
    "start": "275125",
    "end": "276725"
  },
  {
    "text": "You have KMS down here.",
    "start": "276925",
    "end": "277724"
  },
  {
    "text": "It's our last icon.",
    "start": "277725",
    "end": "278625"
  },
  {
    "text": "How is that being used in this data architecture?",
    "start": "279125",
    "end": "281225"
  },
  {
    "text": "And the great thing about a lot of these services, right?",
    "start": "281525",
    "end": "284225"
  },
  {
    "text": "And AWS provides some really good best practices.",
    "start": "284225",
    "end": "287825"
  },
  {
    "text": "It provides also, you know, the pattern way in which you could then encrypt data.",
    "start": "288325",
    "end": "293625"
  },
  {
    "text": "And so, you know, one of the things that's key to know, the customers especially will ask in a multi-tenant world is,",
    "start": "294025",
    "end": "299219"
  },
  {
    "text": "how do I know my data safe from other people,",
    "start": "299219",
    "end": "301462"
  },
  {
    "text": "you know, we have the IAM roles as a way to kind\nof segregate from a permissions perspective,",
    "start": "301463",
    "end": "306084"
  },
  {
    "text": "But then, using the built-in encryption mechanisms, that each of the services have,",
    "start": "306825",
    "end": "312071"
  },
  {
    "text": "we can generate a per-tenant key or multiple keys for\nthat tenant.",
    "start": "312071",
    "end": "318025"
  },
  {
    "text": "And then applied to the each of the different services.",
    "start": "318425",
    "end": "320625"
  },
  {
    "text": "This also gives us a very straightforward path to do a BYOK strategy as well.",
    "start": "320625",
    "end": "325225"
  },
  {
    "text": "Bring your own key strategy.",
    "start": "325325",
    "end": "326425"
  },
  {
    "text": "Yeah, exactly.",
    "start": "326425",
    "end": "327324"
  },
  {
    "text": "Nice.",
    "start": "327625",
    "end": "327925"
  },
  {
    "text": "So I like how you're applying, you know, from the not only the data side and picking the right stores service and database service to meet your needs.",
    "start": "327925",
    "end": "334425"
  },
  {
    "text": "In addition to Secrets Manager,",
    "start": "334425",
    "end": "336724"
  },
  {
    "text": "but you're also enabling microservices based architecture and multi-tenancy with bring your own key and KMS based encryption that works well with these services,",
    "start": "336725",
    "end": "343707"
  },
  {
    "text": "it's really a nice extension of what we traditionally associate with a monolith decomposition.",
    "start": "343707",
    "end": "348825"
  },
  {
    "text": "Yeah.",
    "start": "349125",
    "end": "349525"
  },
  {
    "text": "Yeah.",
    "start": "349525",
    "end": "349824"
  },
  {
    "text": "It's something in the other one of the other things that's really empowering,",
    "start": "349825",
    "end": "354425"
  },
  {
    "text": "is that most of these services have a very easy way for you to do local development with them to allow developers to work detached and then independently.",
    "start": "354425",
    "end": "362128"
  },
  {
    "text": "Nice.",
    "start": "362128",
    "end": "362425"
  },
  {
    "text": "And ultimately that's what we're trying to do,  empower developers, so they can be more productive and ship more code, right?",
    "start": "362425",
    "end": "367046"
  },
  {
    "text": "Mmm.",
    "start": "367046",
    "end": "367525"
  },
  {
    "text": "That's great.",
    "start": "367725",
    "end": "368125"
  },
  {
    "text": "Thanks for sharing this architecture with us.",
    "start": "368125",
    "end": "369425"
  },
  {
    "text": "Thank you.",
    "start": "369425",
    "end": "369824"
  },
  {
    "text": "And thanks for watching,",
    "start": "370125",
    "end": "371025"
  },
  {
    "text": "'This is My Architecture'.",
    "start": "371225",
    "end": "372225"
  }
]