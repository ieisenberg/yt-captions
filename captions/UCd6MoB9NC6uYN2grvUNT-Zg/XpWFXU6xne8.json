[
  {
    "start": "0",
    "end": "32000"
  },
  {
    "text": "and we're live hello everybody I hope you can all see",
    "start": "3049",
    "end": "9510"
  },
  {
    "text": "this well let's just check if everything is working fine if we are online and",
    "start": "9510",
    "end": "20330"
  },
  {
    "text": "yeah we're good",
    "start": "23180",
    "end": "27109"
  },
  {
    "text": "so in this welcome to this live casting we're coding all sorts of applications",
    "start": "31340",
    "end": "40030"
  },
  {
    "start": "32000",
    "end": "71000"
  },
  {
    "text": "here we can do anything you guys would like today we're going to focus on",
    "start": "40030",
    "end": "46309"
  },
  {
    "text": "databases and talk a lot about the recent announcement and run queries as",
    "start": "46309",
    "end": "53600"
  },
  {
    "text": "fast as we can so if you have any",
    "start": "53600",
    "end": "58699"
  },
  {
    "text": "comments or any questions or anything at all feel free to comment on twitch chat",
    "start": "58699",
    "end": "65470"
  },
  {
    "text": "I will try to drive in the direction that you guys want well so let's jump",
    "start": "65470",
    "end": "72860"
  },
  {
    "start": "71000",
    "end": "123000"
  },
  {
    "text": "right to it we have some very good news today from the San Francisco summit or",
    "start": "72860",
    "end": "80030"
  },
  {
    "text": "yesterday as I mean say all career today and either summit we just announced some",
    "start": "80030",
    "end": "88820"
  },
  {
    "text": "very cool features for data bases and applications this they are all on just",
    "start": "88820",
    "end": "94549"
  },
  {
    "text": "bars blog and let's start by the new",
    "start": "94549",
    "end": "99799"
  },
  {
    "text": "services we just announced a new service called backs or dynamo DB acceleration",
    "start": "99799",
    "end": "106429"
  },
  {
    "text": "for in-memory caching so we in the last",
    "start": "106429",
    "end": "111590"
  },
  {
    "text": "episode we talked a lot about dynamodb and how it has provisioning throughput",
    "start": "111590",
    "end": "118340"
  },
  {
    "text": "and you can specify as many Pro put as you'd like and the problem with this is",
    "start": "118340",
    "end": "127690"
  },
  {
    "text": "the one very frequent issue with DynamoDB is when you have a workload",
    "start": "127690",
    "end": "133700"
  },
  {
    "text": "like this where you have the spikes right so most of the time you're under",
    "start": "133700",
    "end": "141140"
  },
  {
    "text": "your provision is throughput let's say that we're provisioning for this but in",
    "start": "141140",
    "end": "146750"
  },
  {
    "text": "an event in an expected event it goes like this so this is if it's expected",
    "start": "146750",
    "end": "154700"
  },
  {
    "text": "you can always provision but it's very hard to handle spikes of an expected",
    "start": "154700",
    "end": "160250"
  },
  {
    "text": "traffic and when it does your heat map your key",
    "start": "160250",
    "end": "165930"
  },
  {
    "text": "axis will look something like this and this is the very problematic scenario",
    "start": "165930",
    "end": "172940"
  },
  {
    "text": "figure for example a news website and you'll have all your news and but then a",
    "start": "172940",
    "end": "181910"
  },
  {
    "text": "celebrity makes something stupid or somebody dies and suddenly that piece of",
    "start": "181910",
    "end": "188520"
  },
  {
    "text": "data is accessed by everybody and while the rest of the data is not and this is",
    "start": "188520",
    "end": "196770"
  },
  {
    "text": "a problem because Dynamo throughput is averaged out by the number of partitions",
    "start": "196770",
    "end": "202590"
  },
  {
    "text": "that you have so if you have for example ten partitions each of them will have",
    "start": "202590",
    "end": "208620"
  },
  {
    "text": "ten percent of your total throughput and if you have like one specific key in one",
    "start": "208620",
    "end": "216360"
  },
  {
    "text": "specific partition consuming or requesting like 50% of your throughput",
    "start": "216360",
    "end": "221820"
  },
  {
    "text": "that's going to get throttled so how to cope with this then idea is usually to",
    "start": "221820",
    "end": "229170"
  },
  {
    "text": "add a cache and we have a cache in memory cache service called elastic",
    "start": "229170",
    "end": "235920"
  },
  {
    "text": "cache which provides mem cache D and Ready's caches as a service which is",
    "start": "235920",
    "end": "242730"
  },
  {
    "text": "very useful for this scenario so you can put those hot keys on cache and respond",
    "start": "242730",
    "end": "248940"
  },
  {
    "text": "instantaneously without even going to to disk even if it's SSD disk and not",
    "start": "248940",
    "end": "256470"
  },
  {
    "text": "consuming your provision at fruit put on dynamodb so this I hope this makes sense",
    "start": "256470",
    "end": "264540"
  },
  {
    "text": "to you guys and let's see a bit of how this works",
    "start": "264540",
    "end": "270020"
  },
  {
    "start": "268000",
    "end": "452000"
  },
  {
    "text": "Dax is currently on Brazil and unfortunately I couldn't get access in",
    "start": "270020",
    "end": "277470"
  },
  {
    "text": "time for today's broadcast so we won't be able to play with it today but I",
    "start": "277470",
    "end": "283080"
  },
  {
    "text": "promise you guys in the next episodes we are going to load some data into it and",
    "start": "283080",
    "end": "289740"
  },
  {
    "text": "the idea is when you create a cluster of back",
    "start": "289740",
    "end": "295330"
  },
  {
    "text": "instances these dusters can be up to ten nodes right now they're going to sit in",
    "start": "295330",
    "end": "301000"
  },
  {
    "text": "front of your dynamodb transparently and the keys are going to be cached and",
    "start": "301000",
    "end": "308020"
  },
  {
    "text": "right with right through behavior meaning when your lights to Dax",
    "start": "308020",
    "end": "313090"
  },
  {
    "text": "it will write to both the cache and the underlying database and when you read if",
    "start": "313090",
    "end": "320740"
  },
  {
    "text": "it's not on cash it's going to fetch from the database and here you can see",
    "start": "320740",
    "end": "327580"
  },
  {
    "text": "what the screenshots looks like and it's just a matter of creating the nodes and",
    "start": "327580",
    "end": "334110"
  },
  {
    "text": "on the when it's after its created you can use the different endpoint this you",
    "start": "334110",
    "end": "342909"
  },
  {
    "text": "can configure on your SDK this is how you connect soon to Dax and in a couple",
    "start": "342909",
    "end": "352830"
  },
  {
    "text": "minutes you'll have it up and available and then you can of course add or remove",
    "start": "352830",
    "end": "359560"
  },
  {
    "text": "nodes dynamically and this is what you should expect it comes with a sample",
    "start": "359560",
    "end": "365500"
  },
  {
    "text": "application and this is the difference if you see this get items times and with",
    "start": "365500",
    "end": "374680"
  },
  {
    "text": "partition keys and every gene in the house of hundreds of milliseconds and in",
    "start": "374680",
    "end": "383289"
  },
  {
    "text": "total and on average ten a dozen milliseconds or so and no no today and",
    "start": "383289",
    "end": "395770"
  },
  {
    "text": "this is Abby's broadcast about dr. Eisen web at today's is a box base broadcast",
    "start": "395770",
    "end": "402159"
  },
  {
    "text": "is about databases when during WMC broom decoding but I hope you like and stay",
    "start": "402159",
    "end": "409930"
  },
  {
    "text": "and for the query tests we can have a",
    "start": "409930",
    "end": "415659"
  },
  {
    "text": "very similar scenario and let's see when",
    "start": "415659",
    "end": "420759"
  },
  {
    "text": "backs is enabled you see this time is dropping dramatically you see form the house",
    "start": "420759",
    "end": "427870"
  },
  {
    "text": "mmm no no say microseconds right below the one millisecond as this is coming",
    "start": "427870",
    "end": "435940"
  },
  {
    "text": "straight from memory and this is the kind of result that you can expect when",
    "start": "435940",
    "end": "443170"
  },
  {
    "text": "running this for the Java API and it's that's pretty much it and let's see what",
    "start": "443170",
    "end": "450370"
  },
  {
    "text": "we have next next we have this thing called redshift spectrum I hope we have",
    "start": "450370",
    "end": "457330"
  },
  {
    "start": "452000",
    "end": "572000"
  },
  {
    "text": "time to play with this student if not very soon and the idea is to extend",
    "start": "457330",
    "end": "464370"
  },
  {
    "text": "redshift to s3 data so when you for",
    "start": "464370",
    "end": "469570"
  },
  {
    "text": "those of you who don't know redshift this is our data warehousing service it's a massively parallel processing",
    "start": "469570",
    "end": "477300"
  },
  {
    "text": "closer for sequel data and the idea is",
    "start": "477300",
    "end": "482410"
  },
  {
    "text": "that you have a very powerful VI database and very cost effective but up",
    "start": "482410",
    "end": "488950"
  },
  {
    "text": "to now you could only store data on your redshift cluster and as you would with a",
    "start": "488950",
    "end": "495970"
  },
  {
    "text": "regular day based with spectrum what you can do is store data on s3 and data will",
    "start": "495970",
    "end": "505900"
  },
  {
    "text": "be you carry you can create those external tables and map to your s3",
    "start": "505900",
    "end": "513430"
  },
  {
    "text": "locations and redshift will index this data in the cluster and let lets you",
    "start": "513430",
    "end": "520390"
  },
  {
    "text": "query it much faster than you would if you were queer indirectly against a",
    "start": "520390",
    "end": "526060"
  },
  {
    "text": "stream with a cleaner or with hive or",
    "start": "526060",
    "end": "531550"
  },
  {
    "text": "with a spark sequel and things like this so sink for example for the square root",
    "start": "531550",
    "end": "541540"
  },
  {
    "text": "taking 6 point 1 billion rows it looked just like 23 seconds and this is quite",
    "start": "541540",
    "end": "549910"
  },
  {
    "text": "impressive brent and it doesn't even [Music]",
    "start": "549910",
    "end": "555650"
  },
  {
    "text": "hurt the cluster too much this is just and the pricing is very interesting all",
    "start": "555650",
    "end": "563390"
  },
  {
    "text": "the other than the redshift costs you're charged of $5 per terabyte of their",
    "start": "563390",
    "end": "571430"
  },
  {
    "text": "process so this is redshift spectrum and I knew another new one is code star gold",
    "start": "571430",
    "end": "579440"
  },
  {
    "start": "572000",
    "end": "674000"
  },
  {
    "text": "star is our developer generation developer portal for all sorts of",
    "start": "579440",
    "end": "586370"
  },
  {
    "text": "applications if you know mobile hub it's pretty much the same idea but the thing",
    "start": "586370",
    "end": "592760"
  },
  {
    "text": "is you can create templates for lots of different applications not only mobile",
    "start": "592760",
    "end": "599200"
  },
  {
    "text": "including easy to install lambda giving us a very wide set of scenarios so well",
    "start": "599200",
    "end": "611510"
  },
  {
    "text": "I have good news for you Mario XSS if you dream with serverless sequel",
    "start": "611510",
    "end": "616820"
  },
  {
    "text": "relational databases that's what we'll be doing in just a few seconds and with",
    "start": "616820",
    "end": "625130"
  },
  {
    "text": "a blast code star you can just create your project and it will build a",
    "start": "625130",
    "end": "631520"
  },
  {
    "text": "complete DevOps pipeline for you so it will create your Beanstalk environment",
    "start": "631520",
    "end": "639860"
  },
  {
    "text": "your code pipeline your code build it will create all the steps in your that",
    "start": "639860",
    "end": "647510"
  },
  {
    "text": "you usually have in a continuous delivery pipeline so this is a continuous delivery as a surface and it",
    "start": "647510",
    "end": "656540"
  },
  {
    "text": "will just build your project and you're ready to go without having to write",
    "start": "656540",
    "end": "662750"
  },
  {
    "text": "scripts or configuring the config services and things like that so very",
    "start": "662750",
    "end": "670520"
  },
  {
    "text": "cool very very cool service for new developers and then some services that",
    "start": "670520",
    "end": "676970"
  },
  {
    "start": "674000",
    "end": "975000"
  },
  {
    "text": "were announced before at wing event that are now made available they were in",
    "start": "676970",
    "end": "682490"
  },
  {
    "text": "preview and now generally available the ec2 instances",
    "start": "682490",
    "end": "687659"
  },
  {
    "text": "with at BJ's those are field programmable programmable gate arrays",
    "start": "687659",
    "end": "692699"
  },
  {
    "text": "they allow you to create customized harder acceleration so if you know logic",
    "start": "692699",
    "end": "700499"
  },
  {
    "text": "lodged gates and you know harder design you can design decisions you can design",
    "start": "700499",
    "end": "706229"
  },
  {
    "text": "a ship and make it real like it's a hard",
    "start": "706229",
    "end": "712439"
  },
  {
    "text": "real hard ship that will be dynamically adapted to your configuration so this is",
    "start": "712439",
    "end": "721769"
  },
  {
    "text": "how FPGA is work and the great thing",
    "start": "721769",
    "end": "727229"
  },
  {
    "text": "about FPGA is using it with the marketplace because with AWS marketplace",
    "start": "727229",
    "end": "733339"
  },
  {
    "text": "you can publish if you are a hardware developer and you know your SDKs for",
    "start": "733339",
    "end": "740159"
  },
  {
    "text": "example you create one FPGA is for video encoding or encryption or some special",
    "start": "740159",
    "end": "748229"
  },
  {
    "text": "kind of machine learning you can just publish your solution on the marketplace",
    "start": "748229",
    "end": "753749"
  },
  {
    "text": "and everybody can consume that they're very very easily so very interested in",
    "start": "753749",
    "end": "761209"
  },
  {
    "text": "f1x rain is our service for inspection",
    "start": "761209",
    "end": "767119"
  },
  {
    "text": "inspected inspecting or latencies and errors and your architecture it will go",
    "start": "767119",
    "end": "772679"
  },
  {
    "text": "through all services in your lambda functions or your code and seeing how",
    "start": "772679",
    "end": "780749"
  },
  {
    "text": "long those requests are taking and you can debug things much easier with x-ray",
    "start": "780749",
    "end": "787229"
  },
  {
    "text": "that's also announced on reinvent and it's now available with lambda integration Amazon lacks for during chat",
    "start": "787229",
    "end": "794249"
  },
  {
    "text": "bot is now available it can talk you can create facebook chat boards or Twitter",
    "start": "794249",
    "end": "801539"
  },
  {
    "text": "chat box very easily now with Amazon lacks and we now have Amazon Aurora with",
    "start": "801539",
    "end": "809069"
  },
  {
    "text": "Postgres compatibility our Aurora is our database design for AWS infrastructure",
    "start": "809069",
    "end": "817300"
  },
  {
    "text": "this means that it's a new database it's it's a server oriented sequel database",
    "start": "817300",
    "end": "824950"
  },
  {
    "text": "but the thing is it's much much faster than your regular old my sequel or both",
    "start": "824950",
    "end": "831820"
  },
  {
    "text": "words it's and use it to be compatible with only my sequel and now we have",
    "start": "831820",
    "end": "838590"
  },
  {
    "text": "Postgres compatibility as well and some new features our image recognition",
    "start": "838590",
    "end": "845260"
  },
  {
    "text": "service now can detect nudity and other kind of dangerous content that you may",
    "start": "845260",
    "end": "854140"
  },
  {
    "text": "want may like to moderate on Amazon Pauline you can now make it whisper and",
    "start": "854140",
    "end": "860170"
  },
  {
    "text": "makes make marks and say specify how you want things to be how speech is",
    "start": "860170",
    "end": "867100"
  },
  {
    "text": "generated with Amazon polling we this is pretty cool Dec end points for Daniel",
    "start": "867100",
    "end": "874540"
  },
  {
    "text": "reading these means that you can make your DynamoDB tables accessible only from the norm V PC not public to the",
    "start": "874540",
    "end": "884920"
  },
  {
    "text": "world and conversational bots in mobile health means that mobile hub can",
    "start": "884920",
    "end": "891550"
  },
  {
    "text": "generate our mobile apps that talk directly to Amazon max and this is my",
    "start": "891550",
    "end": "898270"
  },
  {
    "text": "favorite SAS contracts for a de Bresse marketplace this means that before",
    "start": "898270",
    "end": "904260"
  },
  {
    "text": "before SAS contracts a Debrett's marketplace allowed for one-time payment",
    "start": "904260",
    "end": "910390"
  },
  {
    "text": "only and now it allows recurring fees this means that you can create your",
    "start": "910390",
    "end": "916060"
  },
  {
    "text": "software service and it can be subscribed with a monthly fee on on AWS",
    "start": "916060",
    "end": "922900"
  },
  {
    "text": "mark directly on AWS marketplace and Amazon will manage their subscription",
    "start": "922900",
    "end": "929620"
  },
  {
    "text": "the charging it will be billed to the customers AWS account and you don't have",
    "start": "929620",
    "end": "935980"
  },
  {
    "text": "to trouble with charging with which forms many many customers is a bit of a",
    "start": "935980",
    "end": "944020"
  },
  {
    "text": "pain especially for those who are starting and don't has the legal and finance infrastructure",
    "start": "944020",
    "end": "950259"
  },
  {
    "text": "to handle international payments and things like that like this hey couple couple ARRA hi nice to meet",
    "start": "950259",
    "end": "958299"
  },
  {
    "text": "you welcome we're just going through the recent announcements from the San",
    "start": "958299",
    "end": "964659"
  },
  {
    "text": "Francisco Summit and we now have service related I am roles so that delegating",
    "start": "964659",
    "end": "971499"
  },
  {
    "text": "permissions to AWS services is a bit simpler okay and with this let's jump",
    "start": "971499",
    "end": "978519"
  },
  {
    "start": "975000",
    "end": "1074000"
  },
  {
    "text": "into the coding with our services today and on this I hope you got everybody got",
    "start": "978519",
    "end": "987489"
  },
  {
    "text": "those links let me paste this again if you'd like to I'll be taking notes in",
    "start": "987489",
    "end": "994419"
  },
  {
    "text": "exists and here is the URL I just pasted",
    "start": "994419",
    "end": "999579"
  },
  {
    "text": "on twitch chat and this is a file and we're going to start talking about a SS",
    "start": "999579",
    "end": "1007079"
  },
  {
    "text": "a tenant so it has a Tina this is the",
    "start": "1007079",
    "end": "1013220"
  },
  {
    "text": "serverless sequel that Mario XSS is",
    "start": "1013220",
    "end": "1019189"
  },
  {
    "text": "talking about so oh for sonic boom works",
    "start": "1019189",
    "end": "1026089"
  },
  {
    "text": "liturgy and famine or yeah let's just",
    "start": "1026779",
    "end": "1035428"
  },
  {
    "text": "make sure this works so this is the link for the for the gist that is networks",
    "start": "1035429",
    "end": "1044990"
  },
  {
    "text": "and the link to my Twitter profile",
    "start": "1044990",
    "end": "1052370"
  },
  {
    "text": "oh okay sorry about that yeah and this is me on Flickr through",
    "start": "1058690",
    "end": "1069159"
  },
  {
    "text": "free to ask questions and direct at any time and with Amazon Athena at this just",
    "start": "1069159",
    "end": "1078369"
  },
  {
    "start": "1074000",
    "end": "1139000"
  },
  {
    "text": "as we were you exercise was wishing a surfer with query service for data on s3",
    "start": "1078369",
    "end": "1087039"
  },
  {
    "text": "so it's basically behind the scenes Facebook presto so this is what Amazon",
    "start": "1087039",
    "end": "1105249"
  },
  {
    "text": "attina is using behind the scenes and with Prestel you have a distributed",
    "start": "1105249",
    "end": "1111909"
  },
  {
    "text": "sequel engine that can run over your files wherever they are and execute",
    "start": "1111909",
    "end": "1119859"
  },
  {
    "text": "sequel queries against pretty much like hive or any traditional MapReduce or",
    "start": "1119859",
    "end": "1128789"
  },
  {
    "text": "distributed computing sequel and here",
    "start": "1128789",
    "end": "1134529"
  },
  {
    "text": "let's let's just see what can we do with Amazon attina",
    "start": "1134529",
    "end": "1139809"
  },
  {
    "start": "1139000",
    "end": "1184000"
  },
  {
    "text": "and there's a lot out today I'll be inspecting the detailed data set so the",
    "start": "1139809",
    "end": "1147669"
  },
  {
    "text": "GDL data set is a data set of news and events that happen every day and this is",
    "start": "1147669",
    "end": "1154479"
  },
  {
    "text": "the this is monitored by web crawlers and as events are found they are added",
    "start": "1154479",
    "end": "1162070"
  },
  {
    "text": "to the data set and this data set is available publicly on AWS so you can end",
    "start": "1162070",
    "end": "1169479"
  },
  {
    "text": "on the G Delta on either glass page everything that you need to access it and it's stored on a string this means",
    "start": "1169479",
    "end": "1177429"
  },
  {
    "text": "that we can easily use attina to query data that is on this csv files and",
    "start": "1177429",
    "end": "1184169"
  },
  {
    "start": "1184000",
    "end": "1266000"
  },
  {
    "text": "luckily enough I'm armed my friend evangelist Julian Simon",
    "start": "1184169",
    "end": "1190490"
  },
  {
    "text": "there's this his blog Julie the Twitter is Julie Simon and he made",
    "start": "1190490",
    "end": "1197470"
  },
  {
    "text": "already started doing this and we are going to reduce his code to explore the",
    "start": "1197470",
    "end": "1204410"
  },
  {
    "text": "data set with patina the code of his",
    "start": "1204410",
    "end": "1209900"
  },
  {
    "text": "cold is he here you can find the specs of the",
    "start": "1209900",
    "end": "1215510"
  },
  {
    "text": "file so let's take a look at this and and the github repo his repo is awesome",
    "start": "1215510",
    "end": "1223580"
  },
  {
    "text": "as well so you see that anything in this",
    "start": "1223580",
    "end": "1229250"
  },
  {
    "text": "ug dealt you have this kind of information then when the event happens",
    "start": "1229250",
    "end": "1235480"
  },
  {
    "text": "who performed the event and if it's a",
    "start": "1235480",
    "end": "1241670"
  },
  {
    "text": "root or there is a TED event if it's all",
    "start": "1241670",
    "end": "1246770"
  },
  {
    "text": "informations that are available how many articles site during the event it's just",
    "start": "1246770",
    "end": "1253820"
  },
  {
    "text": "and this is quite interesting the average stone of the event if it's a negative event or a positive event this",
    "start": "1253820",
    "end": "1261920"
  },
  {
    "text": "is all available in the G Delta dataset and without much more let's jump right",
    "start": "1261920",
    "end": "1271130"
  },
  {
    "start": "1266000",
    "end": "1304000"
  },
  {
    "text": "into it so on at this is time console",
    "start": "1271130",
    "end": "1276380"
  },
  {
    "text": "let's just go to the Athena service and start creating this this database so you",
    "start": "1276380",
    "end": "1286730"
  },
  {
    "text": "can see here that I don't I have just our sample databases and I'm going to",
    "start": "1286730",
    "end": "1293360"
  },
  {
    "text": "create a database called seed out for mine for our app and then now we can add",
    "start": "1293360",
    "end": "1304580"
  },
  {
    "start": "1304000",
    "end": "1564000"
  },
  {
    "text": "tables and our tables are backed by s3 so let's see how that how this bucket is",
    "start": "1304580",
    "end": "1311630"
  },
  {
    "text": "is laid out and I have some data here on the on my events those are the look-up",
    "start": "1311630",
    "end": "1319670"
  },
  {
    "text": "tables and then the event themselves are on s3 so let's try to show you guys a bit of",
    "start": "1319670",
    "end": "1328710"
  },
  {
    "text": "that layout on the f3d doubt so this is",
    "start": "1328710",
    "end": "1338380"
  },
  {
    "text": "the a3 URL I can probably just at the blasts as three LS and you can I have to",
    "start": "1338380",
    "end": "1352210"
  },
  {
    "text": "put my credentials and we go so the you",
    "start": "1352210",
    "end": "1360010"
  },
  {
    "text": "can see that there's a file form everyday currently those are updated daily",
    "start": "1360010",
    "end": "1365260"
  },
  {
    "text": "and last one is for in the 90s and this is available on publicly available on",
    "start": "1365260",
    "end": "1374200"
  },
  {
    "text": "Astrid and this is the the file format let's create a table form for that those",
    "start": "1374200",
    "end": "1382750"
  },
  {
    "text": "are the events themselves and they're my in one of my buckets I have some",
    "start": "1382750",
    "end": "1389799"
  },
  {
    "text": "metadata and lookup tables such as countries types of events and things",
    "start": "1389799",
    "end": "1395080"
  },
  {
    "text": "like that so for the first table let's",
    "start": "1395080",
    "end": "1400899"
  },
  {
    "text": "go to Julian in Julian's github repo you'll find this create tables got tax",
    "start": "1400899",
    "end": "1408130"
  },
  {
    "text": "script and we can create a table on 0",
    "start": "1408130",
    "end": "1414279"
  },
  {
    "text": "let's see how this how this actually works so on sequel link calm I hope we",
    "start": "1414279",
    "end": "1425710"
  },
  {
    "text": "can not I'm trying to format this at is",
    "start": "1425710",
    "end": "1433630"
  },
  {
    "text": "that within atom so in atom if we just save this to stern",
    "start": "1433630",
    "end": "1443950"
  },
  {
    "text": "sequel and enable red X and replace commas with",
    "start": "1443950",
    "end": "1454940"
  },
  {
    "text": "commas and new lines we perhaps can understand this a little bit and replace",
    "start": "1454940",
    "end": "1464950"
  },
  {
    "text": "it so great so for every column on on",
    "start": "1465550",
    "end": "1474890"
  },
  {
    "text": "the CSV files on we met those two specific C column names and let's take I",
    "start": "1474890",
    "end": "1483650"
  },
  {
    "text": "actually downloaded this data set easy to instance and they are being loaded",
    "start": "1483650",
    "end": "1489860"
  },
  {
    "text": "right now let's we're going to can see those in a bit but this is just the same",
    "start": "1489860",
    "end": "1498290"
  },
  {
    "text": "definitions from that PDS naming as they end with the proper data type and the",
    "start": "1498290",
    "end": "1505280"
  },
  {
    "text": "important thing is here with the definitions you can see that's pretty",
    "start": "1505280",
    "end": "1511730"
  },
  {
    "text": "pretty simple we said what's the field delimiter on the CSV and where those",
    "start": "1511730",
    "end": "1517730"
  },
  {
    "text": "files are on s3 and done so if we create",
    "start": "1517730",
    "end": "1522920"
  },
  {
    "text": "this [Applause]",
    "start": "1522920",
    "end": "1529790"
  },
  {
    "text": "our query is successful and you should have the G Delta data set with the",
    "start": "1530369",
    "end": "1536369"
  },
  {
    "text": "events table and let's look how that is",
    "start": "1536369",
    "end": "1541519"
  },
  {
    "text": "getting successful so this is running",
    "start": "1544340",
    "end": "1549450"
  },
  {
    "text": "against data that actually on those CSV files so this is our serverless sequel engine",
    "start": "1549450",
    "end": "1558359"
  },
  {
    "text": "pretty simple right and if if we take a look at well under",
    "start": "1558359",
    "end": "1566940"
  },
  {
    "start": "1564000",
    "end": "1694000"
  },
  {
    "text": "the biggest difference between a SS patina and my sequel Mario is that my",
    "start": "1566940",
    "end": "1573269"
  },
  {
    "text": "sequel stores data on the on the on the",
    "start": "1573269",
    "end": "1578399"
  },
  {
    "text": "server right where octina is just like",
    "start": "1578399",
    "end": "1583409"
  },
  {
    "text": "just a query interpreter and data is actually stored on s3 so you don't have",
    "start": "1583409",
    "end": "1590909"
  },
  {
    "text": "and most importantly you we have to understand the difference between schema",
    "start": "1590909",
    "end": "1597539"
  },
  {
    "text": "on read and schema on right so my sequel data is the schema on right so you have",
    "start": "1597539",
    "end": "1605789"
  },
  {
    "text": "to define a schema before you write data on schema on read solutions like a",
    "start": "1605789",
    "end": "1612989"
  },
  {
    "text": "teener you create the schema after the data is there so the data is already was",
    "start": "1612989",
    "end": "1619499"
  },
  {
    "text": "already there on s3 and I just created by schema so this could be this could be",
    "start": "1619499",
    "end": "1625440"
  },
  {
    "text": "read right and the difference is that",
    "start": "1625440",
    "end": "1630749"
  },
  {
    "text": "when you have scheme on right you have an index so query queries are breathing",
    "start": "1630749",
    "end": "1637109"
  },
  {
    "text": "a fast and effective because the data is indexed in victories and whatever kind",
    "start": "1637109",
    "end": "1644219"
  },
  {
    "text": "of index that you're using on a teener it will scan the whole set of CSV files",
    "start": "1644219",
    "end": "1651859"
  },
  {
    "text": "before return the result so it's a much complete ensive compute operation as you",
    "start": "1651859",
    "end": "1659669"
  },
  {
    "text": "don't have those Alexa's unless you're using redshift spectrum which we will talk in",
    "start": "1659669",
    "end": "1666540"
  },
  {
    "text": "a bit right so forth let's see some",
    "start": "1666540",
    "end": "1672030"
  },
  {
    "text": "interesting queries for example we can see how many events we have so let's run",
    "start": "1672030",
    "end": "1680790"
  },
  {
    "text": "an account start from events just to see",
    "start": "1680790",
    "end": "1690960"
  },
  {
    "text": "how many of those goals how many there are and you can see that to return this",
    "start": "1690960",
    "end": "1696530"
  },
  {
    "text": "to return this information at ena must scan through all those s 3 files and",
    "start": "1696530",
    "end": "1705210"
  },
  {
    "text": "they are not fields right right now they are I believe one per day since the",
    "start": "1705210",
    "end": "1713010"
  },
  {
    "text": "beginning so but ingredients board he mentions the current count of files it",
    "start": "1713010",
    "end": "1722160"
  },
  {
    "text": "was like a 1500 CSV files or so then in",
    "start": "1722160",
    "end": "1733670"
  },
  {
    "text": "in just let's see the history oops the hour so in just 20 seconds",
    "start": "1733670",
    "end": "1750330"
  },
  {
    "text": "right the the attina",
    "start": "1750330",
    "end": "1755340"
  },
  {
    "text": "engine scanned 114 gigabytes of files",
    "start": "1755340",
    "end": "1760770"
  },
  {
    "text": "and more than let's see this is",
    "start": "1760770",
    "end": "1766230"
  },
  {
    "text": "thousands millions forty forty five",
    "start": "1766230",
    "end": "1771810"
  },
  {
    "text": "hundred million table rows so this is",
    "start": "1771810",
    "end": "1777210"
  },
  {
    "text": "pretty damn fast right it's probably faster than you would have on your",
    "start": "1777210",
    "end": "1783180"
  },
  {
    "text": "regular nice people or your usual",
    "start": "1783180",
    "end": "1788310"
  },
  {
    "text": "database engine because presto is massively parallel processing tool that",
    "start": "1788310",
    "end": "1794609"
  },
  {
    "text": "will use several servers to fetch this data simultaneously and count them and",
    "start": "1794609",
    "end": "1801269"
  },
  {
    "text": "return it some so this is this is critical",
    "start": "1801269",
    "end": "1806279"
  },
  {
    "text": "let's make some a bit more interesting queries so with this let's get some more",
    "start": "1806279",
    "end": "1814319"
  },
  {
    "text": "code from Julian's ripple and this is a",
    "start": "1814319",
    "end": "1825809"
  },
  {
    "text": "bit different from the first table because the it's now hosted on my s3",
    "start": "1825809",
    "end": "1833399"
  },
  {
    "text": "bucket I had to download these files and they are all on the same repo so on G",
    "start": "1833399",
    "end": "1840359"
  },
  {
    "text": "dealt with poem you can see this country's religion groups this is the",
    "start": "1840359",
    "end": "1846899"
  },
  {
    "text": "those are done that look-up tables that she dealt uses for for event and they",
    "start": "1846899",
    "end": "1854459"
  },
  {
    "text": "are unfortunately not available in the in the new data sent in the master data",
    "start": "1854459",
    "end": "1859499"
  },
  {
    "text": "set so really I applauded them to my only budget that's called G dealt event",
    "start": "1859499",
    "end": "1866279"
  },
  {
    "text": "and this is but this data it's public I",
    "start": "1866279",
    "end": "1871649"
  },
  {
    "text": "added this bucket publicly so if you'd like to run the same queries it should work on everybody's accounts not only",
    "start": "1871649",
    "end": "1878699"
  },
  {
    "text": "mine and run this query it's looking good",
    "start": "1878699",
    "end": "1885199"
  },
  {
    "text": "success and the same thing for the other cup tables so one by one",
    "start": "1885199",
    "end": "1892139"
  },
  {
    "text": "let's get that working the source for event codes now for event types",
    "start": "1892139",
    "end": "1901128"
  },
  {
    "text": "oh there's a format query button here no reg axe magic needed and so let's see",
    "start": "1903870",
    "end": "1916740"
  },
  {
    "text": "the works yay now the groups and the countries",
    "start": "1916740",
    "end": "1932600"
  },
  {
    "text": "so if this works we can see for example that country least when running this",
    "start": "1941300",
    "end": "1946910"
  },
  {
    "text": "query just making sure that everything works as expected all right so now let's",
    "start": "1946910",
    "end": "1955640"
  },
  {
    "start": "1954000",
    "end": "2004000"
  },
  {
    "text": "make more interesting queries so try-hard",
    "start": "1955640",
    "end": "1962060"
  },
  {
    "text": "the new kappa asks if there's a teeny imported csv files or it queries your",
    "start": "1962060",
    "end": "1967910"
  },
  {
    "text": "bucket it attina will go directly to s3 it will not fetch",
    "start": "1967910",
    "end": "1974390"
  },
  {
    "text": "and storm your files anywhere by the time of the query it will scan your data",
    "start": "1974390",
    "end": "1981530"
  },
  {
    "text": "so this is how this is all work let's",
    "start": "1981530",
    "end": "1987520"
  },
  {
    "text": "make some cool air is not so we have a",
    "start": "1987520",
    "end": "1993860"
  },
  {
    "text": "bit more event and let's see how many events Arthur here here is if there is",
    "start": "1993860",
    "end": "2004750"
  },
  {
    "text": "any query you would like me to run feel free to shoot them on twitch chat I will",
    "start": "2004750",
    "end": "2011200"
  },
  {
    "text": "be more than happy to run these queries on your behalf and a very interesting",
    "start": "2011200",
    "end": "2018790"
  },
  {
    "text": "thing is that you don't need to use the console you can of course integrate with",
    "start": "2018790",
    "end": "2024550"
  },
  {
    "text": "your application there is a JDBC driver for attina so you can connect using Java",
    "start": "2024550",
    "end": "2031870"
  },
  {
    "text": "applications or cleaner and drivers let's see AWS at signora so here's the",
    "start": "2031870",
    "end": "2043420"
  },
  {
    "text": "on the documentation page how to connect with jdd scene so if most clients a lot",
    "start": "2043420",
    "end": "2051129"
  },
  {
    "text": "of there are a lot of database clients that uses JDBC this is a very popular",
    "start": "2051130",
    "end": "2057090"
  },
  {
    "text": "way to access a teener I hope we can we see more drivers for other platforms but",
    "start": "2057090",
    "end": "2064560"
  },
  {
    "text": "everything that within the JVM such as Java Scala JRuby whatever groovy can",
    "start": "2064560",
    "end": "2073060"
  },
  {
    "text": "connect to a teen approved as JDBC driver and",
    "start": "2073060",
    "end": "2078919"
  },
  {
    "text": "yeah and so we can see that in less than",
    "start": "2078920",
    "end": "2085080"
  },
  {
    "start": "2084000",
    "end": "2184000"
  },
  {
    "text": "20 seconds it again scanned our 1,400 gigabytes of hundred four gigabytes of",
    "start": "2085080",
    "end": "2094320"
  },
  {
    "text": "data and with the events count and of course and for recent years we have more",
    "start": "2094320",
    "end": "2102300"
  },
  {
    "text": "and more data so last year if they were 72 million events and is in year we",
    "start": "2102300",
    "end": "2110370"
  },
  {
    "text": "already have 21 million and let's see",
    "start": "2110370",
    "end": "2116970"
  },
  {
    "text": "what we have again top 10 event categories so this is cool because it",
    "start": "2116970",
    "end": "2123540"
  },
  {
    "text": "has sub select yeah yeah and so try-hard",
    "start": "2123540",
    "end": "2134300"
  },
  {
    "text": "so try-hard that's really insane for the seconds dealing and talking about",
    "start": "2134300",
    "end": "2141750"
  },
  {
    "text": "dealing it's important to understand how a tina is charged and that is five bucks",
    "start": "2141750",
    "end": "2149790"
  },
  {
    "text": "per terabyte of data is scanned and the cooling is why you're not scanning any",
    "start": "2149790",
    "end": "2155040"
  },
  {
    "text": "data you are not paying anything right and in that's the idea beyond behind the",
    "start": "2155040",
    "end": "2160650"
  },
  {
    "text": "cloud and especially the serverless platform it's you only pay for resources",
    "start": "2160650",
    "end": "2167850"
  },
  {
    "text": "when they are actually working and with traditional sequel you would pay by the",
    "start": "2167850",
    "end": "2173550"
  },
  {
    "text": "hour for the servers and things like that and let's run that other query and",
    "start": "2173550",
    "end": "2183450"
  },
  {
    "text": "the cool thing about this one is it has a sub select with a group and an order",
    "start": "2183450",
    "end": "2189960"
  },
  {
    "start": "2184000",
    "end": "2444000"
  },
  {
    "text": "and join Sutton and other or a different",
    "start": "2189960",
    "end": "2195510"
  },
  {
    "text": "order so this is a very much much more complex query and let's see how long",
    "start": "2195510",
    "end": "2202050"
  },
  {
    "text": "will this take I hoped not much but soon you should see that results",
    "start": "2202050",
    "end": "2210670"
  },
  {
    "text": "coming back and we don't have to wait for this one we can while this runs we",
    "start": "2210670",
    "end": "2216280"
  },
  {
    "text": "can just go for a new query and this one will go on the background and we can",
    "start": "2216280",
    "end": "2221620"
  },
  {
    "text": "make new ones so let's see what we have been given before so let's see how many",
    "start": "2221620",
    "end": "2228150"
  },
  {
    "text": "Barack Obama's we have per ear so and",
    "start": "2228150",
    "end": "2241090"
  },
  {
    "text": "quieren and at any time you can go in the history and see those results so the",
    "start": "2241090",
    "end": "2249010"
  },
  {
    "text": "top ten events query ran in credit two seconds even with sub select and let's see the",
    "start": "2249010",
    "end": "2257470"
  },
  {
    "text": "results it's right here",
    "start": "2257470",
    "end": "2264810"
  },
  {
    "text": "downloaded as you see as an excel file and so we can see the most events are",
    "start": "2264810",
    "end": "2273310"
  },
  {
    "text": "make a statement people making in statement thirty five million of thirty",
    "start": "2273310",
    "end": "2281590"
  },
  {
    "text": "five million of those making a visit hosting a visit consoling appealing praising or",
    "start": "2281590",
    "end": "2288880"
  },
  {
    "text": "endorsing and so and so forth and by now",
    "start": "2288880",
    "end": "2295390"
  },
  {
    "text": "the other queries should be read if it's taking too long you so then I hope to",
    "start": "2295390",
    "end": "2302500"
  },
  {
    "text": "saw that you can cancel the query while it's running this is very important so",
    "start": "2302500",
    "end": "2308440"
  },
  {
    "text": "you got if it runs for a long time it could cost you a lot of money so make sure they are not and see that Barack",
    "start": "2308440",
    "end": "2318820"
  },
  {
    "text": "Obama very little events back in 2003 but as he grew in popularity and",
    "start": "2318820",
    "end": "2326420"
  },
  {
    "text": "between president those skyrocketed right so that's how a Tina works just be",
    "start": "2326420",
    "end": "2335270"
  },
  {
    "text": "able to run a Tina requests from London trihard and di the idea behind this is",
    "start": "2335270",
    "end": "2343010"
  },
  {
    "text": "using lambda for Java so if you run any JDM language you can use the JDBC driver",
    "start": "2343010",
    "end": "2351109"
  },
  {
    "text": "we deal with in lambda to query a Tina so this is praveen pretty",
    "start": "2351109",
    "end": "2356720"
  },
  {
    "text": "straightforward any Java environment like lambda or Beanstalk or even your",
    "start": "2356720",
    "end": "2362630"
  },
  {
    "text": "own machine can use the JDBC driver to query Athena directly okay go right",
    "start": "2362630",
    "end": "2371079"
  },
  {
    "text": "let's see what else does this",
    "start": "2371079",
    "end": "2376089"
  },
  {
    "text": "[Applause] so let's count on Obama and putting",
    "start": "2379540",
    "end": "2387880"
  },
  {
    "text": "events per category and wow I couldn't",
    "start": "2387880",
    "end": "2393360"
  },
  {
    "text": "this I wish I could write more complex",
    "start": "2393360",
    "end": "2398650"
  },
  {
    "text": "queries with window functions and things like this to test it out if any of you",
    "start": "2398650",
    "end": "2403870"
  },
  {
    "text": "guys is an SQL it's more knowledgeable",
    "start": "2403870",
    "end": "2410500"
  },
  {
    "text": "about my sequel you can feel free to send me queries or see this data set and",
    "start": "2410500",
    "end": "2418860"
  },
  {
    "text": "anytime as I'm not so into this and",
    "start": "2418860",
    "end": "2428350"
  },
  {
    "text": "we'll just use the the queries from green and this is good because they're",
    "start": "2428350",
    "end": "2433720"
  },
  {
    "text": "all on the blog and won't cost us much time so let's just see how this this",
    "start": "2433720",
    "end": "2442120"
  },
  {
    "text": "works and I think you guys got it by now how a Tina works and it is very very",
    "start": "2442120",
    "end": "2450280"
  },
  {
    "start": "2444000",
    "end": "2644000"
  },
  {
    "text": "cool to have sequel and serverless cycle",
    "start": "2450280",
    "end": "2455500"
  },
  {
    "text": "engine but eventually we do have to resort to sequel eventually we do have",
    "start": "2455500",
    "end": "2463540"
  },
  {
    "text": "to run c6 chemo and right we if this is",
    "start": "2463540",
    "end": "2470320"
  },
  {
    "text": "the idea when you you need this really real sequel database with actual servers",
    "start": "2470320",
    "end": "2477460"
  },
  {
    "text": "and to do this we have a managed service",
    "start": "2477460",
    "end": "2482500"
  },
  {
    "text": "for databases called RDS so RDS here it",
    "start": "2482500",
    "end": "2489160"
  },
  {
    "text": "is I have a few instances running",
    "start": "2489160",
    "end": "2494260"
  },
  {
    "text": "already but I'll just launch a new one so you see how the service works on RDS you can",
    "start": "2494260",
    "end": "2502330"
  },
  {
    "text": "launch a lot of different database databases just by clicking through and",
    "start": "2502330",
    "end": "2510190"
  },
  {
    "text": "those databases will be automatically provisioned configured",
    "start": "2510190",
    "end": "2515830"
  },
  {
    "text": "made available moon so you can run sequel server several flavors of sequel",
    "start": "2515830",
    "end": "2523160"
  },
  {
    "text": "server you can run Oracle and many",
    "start": "2523160",
    "end": "2530360"
  },
  {
    "text": "papers of Oracle but myself I preferred in open source databases such as posters",
    "start": "2530360",
    "end": "2537170"
  },
  {
    "text": "in my sequin Mary I didn't so on phosphorus is also available memory",
    "start": "2537170",
    "end": "2543770"
  },
  {
    "text": "today and my sequel and the thing about all these engines is they are built to",
    "start": "2543770",
    "end": "2551720"
  },
  {
    "text": "run on any computer you can run my sequel on your computer on your friend's",
    "start": "2551720",
    "end": "2556910"
  },
  {
    "text": "computer on AWS called on any other cloud and it's very hard to design for",
    "start": "2556910",
    "end": "2564560"
  },
  {
    "text": "performance and for flexibility at the same time especially when you have",
    "start": "2564560",
    "end": "2570490"
  },
  {
    "text": "infrastructure like aw asses with very particular designs with availability",
    "start": "2570490",
    "end": "2578720"
  },
  {
    "text": "zones regions and all that so Amazon Aurora is a new database engine designed",
    "start": "2578720",
    "end": "2586210"
  },
  {
    "text": "specifically for a de Bresse infrastructure it's it automatically",
    "start": "2586210",
    "end": "2591680"
  },
  {
    "text": "backups to s3 it takes advantage of movie hd replication and a lot more",
    "start": "2591680",
    "end": "2600790"
  },
  {
    "text": "design choices to make this database as",
    "start": "2600790",
    "end": "2606230"
  },
  {
    "text": "fast as possible and our benchmark shows that it's around five times more",
    "start": "2606230",
    "end": "2613810"
  },
  {
    "text": "throughput than my sequel and much faster to promote with replicas and you",
    "start": "2613810",
    "end": "2619460"
  },
  {
    "text": "can have much more storage it grows automatically up to 64",
    "start": "2619460",
    "end": "2625730"
  },
  {
    "text": "terabytes of data so on my own the other database engines if you have more data",
    "start": "2625730",
    "end": "2631700"
  },
  {
    "text": "than you provision you have to manually adjust or have a script reacting to",
    "start": "2631700",
    "end": "2638900"
  },
  {
    "text": "Copwatch metrics to change your database provisioning with aurora all you need to",
    "start": "2638900",
    "end": "2644660"
  },
  {
    "text": "do is add data and done so we have all this several instance",
    "start": "2644660",
    "end": "2651599"
  },
  {
    "text": "types so mario asks how to handle the",
    "start": "2651599",
    "end": "2657570"
  },
  {
    "text": "connection pulls from a SS lambda and this is a bit tricky that there is an",
    "start": "2657570",
    "end": "2665339"
  },
  {
    "text": "important article for understanding that it's called understanding container we",
    "start": "2665339",
    "end": "2671339"
  },
  {
    "text": "use in lambda so in this article ting",
    "start": "2671339",
    "end": "2680670"
  },
  {
    "text": "Wagner shows the events that can how containers are reused and the idea is as",
    "start": "2680670",
    "end": "2689670"
  },
  {
    "text": "long as you have frequent requests your your container for your lambda functions",
    "start": "2689670",
    "end": "2698339"
  },
  {
    "text": "lambda functions runs on containers and those are going to be reused and so the",
    "start": "2698339",
    "end": "2705089"
  },
  {
    "text": "first time it it's up it can build your connection pool using your connection",
    "start": "2705089",
    "end": "2711329"
  },
  {
    "text": "pool library you could you could use many c-3po or aesthetics I like hickory",
    "start": "2711329",
    "end": "2720750"
  },
  {
    "text": "see I think it's Hickory CP that's yeah",
    "start": "2720750",
    "end": "2726050"
  },
  {
    "text": "so this is what I would recommend for connection poles in jelly beans and it's",
    "start": "2726050",
    "end": "2733650"
  },
  {
    "text": "pretty it's crazy to contain like that so it shouldn't take much time of your",
    "start": "2733650",
    "end": "2739710"
  },
  {
    "text": "cone of your container initialization to connect to your database using secrecy",
    "start": "2739710",
    "end": "2747480"
  },
  {
    "text": "pins and after that's built it will be use it as long as your container is",
    "start": "2747480",
    "end": "2754140"
  },
  {
    "text": "running and well and that's that's how how you can build connection pools with",
    "start": "2754140",
    "end": "2762450"
  },
  {
    "text": "in address lamda rank and so back to RDS",
    "start": "2762450",
    "end": "2769200"
  },
  {
    "start": "2764000",
    "end": "2824000"
  },
  {
    "text": "we select the instance type which can run from one small teacher instance up",
    "start": "2769200",
    "end": "2775530"
  },
  {
    "text": "to this very large artery instance and we can select if we have replicas or",
    "start": "2775530",
    "end": "2782480"
  },
  {
    "text": "not our database could ID for example my",
    "start": "2782480",
    "end": "2787820"
  },
  {
    "text": "DB our username well and something went",
    "start": "2787820",
    "end": "2795620"
  },
  {
    "text": "to Tring and we can go with the Advanced",
    "start": "2795620",
    "end": "2803870"
  },
  {
    "text": "Settings you can specify in which network and subnet you want your",
    "start": "2803870",
    "end": "2809180"
  },
  {
    "text": "database servers to leave your giving",
    "start": "2809180",
    "end": "2816070"
  },
  {
    "text": "cluster I do your database name and",
    "start": "2816070",
    "end": "2821870"
  },
  {
    "text": "things like this and failover how you want it failover how long you want",
    "start": "2821870",
    "end": "2827180"
  },
  {
    "text": "backups to be retained how we want it to be monitored and when you want",
    "start": "2827180",
    "end": "2835100"
  },
  {
    "text": "maintenance to be performed and things like this but doing this will take can",
    "start": "2835100",
    "end": "2842120"
  },
  {
    "text": "take a few minutes especially with this larger instance types so I did this beforehand this exact same settings and",
    "start": "2842120",
    "end": "2849440"
  },
  {
    "text": "I have a rollercoaster running right here with this table name and one thing",
    "start": "2849440",
    "end": "2858410"
  },
  {
    "text": "that is important is understanding that this is a separate server so we need to",
    "start": "2858410",
    "end": "2865220"
  },
  {
    "text": "add data to it to add data to import the",
    "start": "2865220",
    "end": "2870550"
  },
  {
    "text": "G dealt data sets we have to launch and new easy to instance because we don't",
    "start": "2870550",
    "end": "2877340"
  },
  {
    "text": "have access to our our M machines right we only have access to the database",
    "start": "2877340",
    "end": "2884110"
  },
  {
    "text": "endpoint you can't connect to the underlying machine and import files and things like this so to import the",
    "start": "2884110",
    "end": "2891470"
  },
  {
    "text": "detailed data set I created an easy to instance and here it is and",
    "start": "2891470",
    "end": "2901090"
  },
  {
    "text": "um I'm taking I want to have as much",
    "start": "2903940",
    "end": "2910720"
  },
  {
    "text": "fruit put as possible so I'm spinning a",
    "start": "2910720",
    "end": "2915809"
  },
  {
    "text": "3.16 x-large instance on my account and this is very",
    "start": "2915809",
    "end": "2921670"
  },
  {
    "text": "very important understanding your instance types because this completely changes how you think about your limits",
    "start": "2921670",
    "end": "2929980"
  },
  {
    "start": "2929000",
    "end": "3124000"
  },
  {
    "text": "what was big data and needed a no sequel",
    "start": "2929980",
    "end": "2935710"
  },
  {
    "text": "database for example a couple years ago it's not the same right now you see on",
    "start": "2935710",
    "end": "2941380"
  },
  {
    "text": "the instance is it true instance types page we have instances that goes from",
    "start": "2941380",
    "end": "2946809"
  },
  {
    "text": "less than one CPU and half a gig of memory up to very big instances for",
    "start": "2946809",
    "end": "2953890"
  },
  {
    "text": "example the m416 extra large will have 64 cores and 256 gigs of ram the the",
    "start": "2953890",
    "end": "2964869"
  },
  {
    "text": "Seaforth and so on so forth each families and more adequate for a",
    "start": "2964869",
    "end": "2970450"
  },
  {
    "text": "kind of workload and there there are very interesting instance types for",
    "start": "2970450",
    "end": "2975940"
  },
  {
    "text": "example the X 132 extra large will have 128 CPUs and 2 terabytes of memory per",
    "start": "2975940",
    "end": "2984339"
  },
  {
    "text": "node and 2 1 to 2 terabytes disks and 10",
    "start": "2984339",
    "end": "2989500"
  },
  {
    "text": "megabytes of dedicated DBS bandwidth which um are four instances you can go",
    "start": "2989500",
    "end": "2997270"
  },
  {
    "text": "much much further for example on the r4 16 extra large we have 64 gigabytes on",
    "start": "2997270",
    "end": "3005010"
  },
  {
    "text": "64 processors and 488 gigs of memory and",
    "start": "3005010",
    "end": "3010460"
  },
  {
    "text": "with our r3 instance and we are using",
    "start": "3010460",
    "end": "3015960"
  },
  {
    "text": "out that the two instances will have GPU acceleration the f1 instances as we were",
    "start": "3015960",
    "end": "3023339"
  },
  {
    "text": "commenting before and the i3 we have today is this one I create 16",
    "start": "3023339",
    "end": "3029220"
  },
  {
    "text": "extra-large with 64 teams of six six four CPUs 500 gigs of memory",
    "start": "3029220",
    "end": "3036180"
  },
  {
    "text": "and this is the cool thing and 20 gigabytes of networks but this is the",
    "start": "3036180",
    "end": "3041490"
  },
  {
    "text": "feature I would like to highlight it has",
    "start": "3041490",
    "end": "3046490"
  },
  {
    "text": "8 2 terabytes nvme SSDs and nvme SSDs",
    "start": "3046520",
    "end": "3054089"
  },
  {
    "text": "are then fast so if you want to know more about NS nvme SSDs and these are",
    "start": "3054089",
    "end": "3064160"
  },
  {
    "text": "non-volatile storage in the network cards those are in the in the instance",
    "start": "3064160",
    "end": "3070950"
  },
  {
    "text": "inside your on your instances and made available to you so let's connect to",
    "start": "3070950",
    "end": "3076589"
  },
  {
    "text": "that and see how it performs so I can",
    "start": "3076589",
    "end": "3084349"
  },
  {
    "text": "connect to this [Applause]",
    "start": "3084800",
    "end": "3090839"
  },
  {
    "text": "and let's run a small test I have one",
    "start": "3092550",
    "end": "3098110"
  },
  {
    "text": "here in that github of the github files the biggest let me get that link and",
    "start": "3098110",
    "end": "3113130"
  },
  {
    "text": "this so on we will be using sio2 tested",
    "start": "3113130",
    "end": "3126580"
  },
  {
    "start": "3124000",
    "end": "3274000"
  },
  {
    "text": "and with a file we can say that we want to repeat random reads with liebe",
    "start": "3126580",
    "end": "3134170"
  },
  {
    "text": "synchronous i/o direct access to the resources and the name of the files the",
    "start": "3134170",
    "end": "3142150"
  },
  {
    "text": "block sizes the i/o that the size of the files and so and so forth so the number",
    "start": "3142150",
    "end": "3149110"
  },
  {
    "text": "of the ratio between reads and writes and a maximum number of jobs for parallel processing and I will create a",
    "start": "3149110",
    "end": "3156850"
  },
  {
    "text": "bit smaller files just so it doesn't take a lot of time and this is not about",
    "start": "3156850",
    "end": "3162310"
  },
  {
    "text": "this is just for fun it's not really about databases but let's just create",
    "start": "3162310",
    "end": "3167650"
  },
  {
    "text": "thank you good bites thank you gifts and files and see how it performs",
    "start": "3167650",
    "end": "3173140"
  },
  {
    "text": "[Applause] so it's it's now writing to this and",
    "start": "3173140",
    "end": "3183099"
  },
  {
    "text": "let's leave it running and seeing how it performs and while that goes on I",
    "start": "3183099",
    "end": "3191630"
  },
  {
    "text": "started earlier I'm part of the G delt events to this my sequel database so",
    "start": "3191630",
    "end": "3199539"
  },
  {
    "text": "this is the this is the command to import CSV files to I downloaded the CSV",
    "start": "3199539",
    "end": "3208160"
  },
  {
    "text": "files from the s3 repo to this instance and that why it's important to have this",
    "start": "3208160",
    "end": "3214539"
  },
  {
    "text": "fast IO with 20 gigabytes to EBS so we",
    "start": "3214539",
    "end": "3220849"
  },
  {
    "text": "can really have high performance access",
    "start": "3220849",
    "end": "3228020"
  },
  {
    "text": "to restore our storage resources and here's the command that it's all it's",
    "start": "3228020",
    "end": "3233690"
  },
  {
    "text": "also on the on the ripple and well I just expose it the credentials so you",
    "start": "3233690",
    "end": "3240170"
  },
  {
    "text": "can connect should is right now and be my guest",
    "start": "3240170",
    "end": "3245720"
  },
  {
    "text": "it will it won't be up after today so no problems here and and this is the this",
    "start": "3245720",
    "end": "3255529"
  },
  {
    "text": "is the import command so it started a",
    "start": "3255529",
    "end": "3261170"
  },
  {
    "text": "while although just importing the same data set that we have on the on the S on",
    "start": "3261170",
    "end": "3268279"
  },
  {
    "text": "the s3 tables it's not done yet but we should have a reasonable amount of data",
    "start": "3268279",
    "end": "3274369"
  },
  {
    "start": "3274000",
    "end": "3600000"
  },
  {
    "text": "there and using it's just standard my sequel so you can use any sequel client",
    "start": "3274369",
    "end": "3281750"
  },
  {
    "text": "you would like to connect to this endpoint I'll be using the my sequel workbench today I already have this",
    "start": "3281750",
    "end": "3288680"
  },
  {
    "text": "connection configured here it's I will connect from scratch there so you can",
    "start": "3288680",
    "end": "3293960"
  },
  {
    "text": "see that it is actually the same very same thing so the very same plus or or a",
    "start": "3293960",
    "end": "3300710"
  },
  {
    "text": "cluster and let's connect and it's not probably a very good idea",
    "start": "3300710",
    "end": "3308340"
  },
  {
    "text": "to use the tables while it's loading but let's see how it works",
    "start": "3308340",
    "end": "3315000"
  },
  {
    "text": "and we just connected and I'm glad to",
    "start": "3315000",
    "end": "3324150"
  },
  {
    "text": "hear you guys are using RDS and lambdas and I hope you definitely a good idea to",
    "start": "3324150",
    "end": "3331350"
  },
  {
    "text": "use connection both but we can play that with that in a further episode if you'd",
    "start": "3331350",
    "end": "3338790"
  },
  {
    "text": "like and that's why running those queries same queries we ran against a",
    "start": "3338790",
    "end": "3344520"
  },
  {
    "text": "Tina let's see how they perform and I mean Mexico I will suspend import just",
    "start": "3344520",
    "end": "3356190"
  },
  {
    "text": "so we can see how it goes I will just control Z this and stop just so it's not",
    "start": "3356190",
    "end": "3364340"
  },
  {
    "text": "bothering our queries let's see how much we imported so far so",
    "start": "3364340",
    "end": "3376279"
  },
  {
    "text": "while that runs let's talk about the connection time yeah the set up in the static",
    "start": "3383410",
    "end": "3389049"
  },
  {
    "text": "initializer is all it is all right and a pink function that another process means",
    "start": "3389049",
    "end": "3395020"
  },
  {
    "text": "all over lambda does to keep them one is probably a good idea you just have to",
    "start": "3395020",
    "end": "3400420"
  },
  {
    "text": "mind that in a cost it may cost a while so well we lost the connection here",
    "start": "3400420",
    "end": "3407490"
  },
  {
    "text": "during the query I don't know why so let's just recollect",
    "start": "3407490",
    "end": "3414000"
  },
  {
    "text": "what's going on",
    "start": "3421950",
    "end": "3425670"
  },
  {
    "text": "let's check the state of the cluster and see if it's all right",
    "start": "3432620",
    "end": "3437920"
  },
  {
    "text": "14 fine and run our query oh yeah did it",
    "start": "3439600",
    "end": "3456380"
  },
  {
    "text": "time out and say if this if this comes",
    "start": "3456380",
    "end": "3463520"
  },
  {
    "text": "with and the idea of having a pink function to keep your instance your",
    "start": "3463520",
    "end": "3470540"
  },
  {
    "text": "lambda functions containers warm is a good idea it's just a very important",
    "start": "3470540",
    "end": "3477470"
  },
  {
    "text": "thing to remember that those can cost time the scan cost and use some money to",
    "start": "3477470",
    "end": "3485450"
  },
  {
    "text": "keep those warm but it is a good strategy well interesting it lost connection to",
    "start": "3485450",
    "end": "3498710"
  },
  {
    "text": "the to the server during the clearing I don't know why let's try running this on",
    "start": "3498710",
    "end": "3505100"
  },
  {
    "text": "the on the ec2 instance as that's",
    "start": "3505100",
    "end": "3511400"
  },
  {
    "text": "probably better so I will just connect",
    "start": "3511400",
    "end": "3516890"
  },
  {
    "text": "it's the same thing and let's run it",
    "start": "3516890",
    "end": "3527510"
  },
  {
    "text": "from within easy to in a more capable machine and see what happens",
    "start": "3527510",
    "end": "3534820"
  },
  {
    "text": "well that goes on we can show monitoring and see what's going on so CPU traditions all right we can see",
    "start": "3546520",
    "end": "3554869"
  },
  {
    "text": "our connections sound everything is with me pretty normal so memory utilization",
    "start": "3554869",
    "end": "3564349"
  },
  {
    "text": "the proposed latency always looking pretty normal you know not much unload",
    "start": "3564349",
    "end": "3571849"
  },
  {
    "text": "but this will have to scan through all the data and no matter and you can and",
    "start": "3571849",
    "end": "3582410"
  },
  {
    "text": "the idea here is to show you guys how much how different is running a single",
    "start": "3582410",
    "end": "3588800"
  },
  {
    "text": "server versus running a massive massive massively parallel processing cluster so",
    "start": "3588800",
    "end": "3595930"
  },
  {
    "text": "as this is the larger in the best service that we have its own ddr3 eight",
    "start": "3595930",
    "end": "3604220"
  },
  {
    "text": "extra larges so each of those each server will be and r38 extra large so",
    "start": "3604220",
    "end": "3618020"
  },
  {
    "text": "it's 32 gigs 32 cores 240 four gigs of",
    "start": "3618020",
    "end": "3623180"
  },
  {
    "text": "ram so not not a small machine and very very interesting insight but even so",
    "start": "3623180",
    "end": "3631040"
  },
  {
    "text": "it's no match for Athena and it's pretty",
    "start": "3631040",
    "end": "3637010"
  },
  {
    "text": "impressive because the events on on on",
    "start": "3637010",
    "end": "3645020"
  },
  {
    "text": "this table are on the on the server itself it's not it's not on s3 beam",
    "start": "3645020",
    "end": "3654020"
  },
  {
    "text": "access it remotely with object storage this is block storage which would be",
    "start": "3654020",
    "end": "3662030"
  },
  {
    "text": "faster if it was machine against machine but as Athena is parallel it will run",
    "start": "3662030",
    "end": "3667790"
  },
  {
    "text": "much faster but let's keep this query running and see how long it takes to",
    "start": "3667790",
    "end": "3674130"
  },
  {
    "text": "and to count the and another thing this is just a partial data set so this table",
    "start": "3674130",
    "end": "3681359"
  },
  {
    "text": "is actually smaller than the data that we have owned on s3 I wonder on our f io side we are almost",
    "start": "3681359",
    "end": "3692569"
  },
  {
    "text": "halfway through them for the process and",
    "start": "3692569",
    "end": "3697910"
  },
  {
    "text": "it does not impact the query performance as that's running on the server so we",
    "start": "3697910",
    "end": "3704160"
  },
  {
    "text": "can leave those those running and this should should run for more five minutes",
    "start": "3704160",
    "end": "3710910"
  },
  {
    "text": "more so if a Tina is using a blessed batch on the background and or they are",
    "start": "3710910",
    "end": "3717390"
  },
  {
    "text": "separate they're separate the glass batch is for your custom batch",
    "start": "3717390",
    "end": "3723630"
  },
  {
    "text": "applications you can run things like offline asynchronous jobs with AWS batch",
    "start": "3723630",
    "end": "3732019"
  },
  {
    "text": "trihard Athena is actually based on Bristol so pretty different",
    "start": "3732019",
    "end": "3739230"
  },
  {
    "text": "infrastructure there burn so alright it",
    "start": "3739230",
    "end": "3747900"
  },
  {
    "text": "took two minutes and 53 seconds choose to scan then 27 million rows in this",
    "start": "3747900",
    "end": "3759089"
  },
  {
    "text": "table it's just a fraction of one we would have on the on the Athena it's you",
    "start": "3759089",
    "end": "3768630"
  },
  {
    "text": "can see that much much slower even for a fraction of the data and you can expect",
    "start": "3768630",
    "end": "3775140"
  },
  {
    "text": "this to be much much slower on traditional my sequel if it was not",
    "start": "3775140",
    "end": "3780779"
  },
  {
    "text": "Aurora it would take much more oh yes",
    "start": "3780779",
    "end": "3785910"
  },
  {
    "text": "thank you 273 Mina yes I counted wrong but yeah it's so the whole data set was",
    "start": "3785910",
    "end": "3796769"
  },
  {
    "text": "like it's about half of the data set that we had on latina and believe those",
    "start": "3796769",
    "end": "3801869"
  },
  {
    "text": "were four four hundred and nearly five hundred and you know let's see how one of those",
    "start": "3801869",
    "end": "3809020"
  },
  {
    "text": "complex queries run yeah when a simple",
    "start": "3809020",
    "end": "3815140"
  },
  {
    "text": "group by this will take much more than",
    "start": "3815140",
    "end": "3822790"
  },
  {
    "text": "30 seconds the 30 seconds it took Athena and and we can we can even spin a",
    "start": "3822790",
    "end": "3831430"
  },
  {
    "text": "regular my sequel instance if you guys would like but it would take all night",
    "start": "3831430",
    "end": "3836920"
  },
  {
    "text": "to just to get for this just import the data I can if this this is probably",
    "start": "3836920",
    "end": "3843070"
  },
  {
    "text": "quite interesting I will write a blog post and do this offline and show you",
    "start": "3843070",
    "end": "3849580"
  },
  {
    "text": "the benchmarks and comparisons but and this is already more than enough to see",
    "start": "3849580",
    "end": "3855760"
  },
  {
    "text": "how many differences and how to how to",
    "start": "3855760",
    "end": "3863590"
  },
  {
    "text": "handle this how to process this more efficiently well we can try this is the",
    "start": "3863590",
    "end": "3870550"
  },
  {
    "text": "one what if we need the best of both worlds like we want to have the fast",
    "start": "3870550",
    "end": "3879450"
  },
  {
    "text": "sequel queries that scheme on right offers but we want our data on s3 and",
    "start": "3879450",
    "end": "3888430"
  },
  {
    "text": "this is a frequent this would make you a hard choice because if you go a teener",
    "start": "3888430",
    "end": "3895780"
  },
  {
    "text": "it would need to query and scan the whole thing every time and if you go RDS",
    "start": "3895780",
    "end": "3902400"
  },
  {
    "text": "it would have to import all data from s3 so maximum number of connections on IDs",
    "start": "3902400",
    "end": "3911470"
  },
  {
    "text": "that depends Mario on the instance types every instance type will have a",
    "start": "3911470",
    "end": "3917680"
  },
  {
    "text": "different number of max connections I think that's on the documentation but",
    "start": "3917680",
    "end": "3924180"
  },
  {
    "text": "let's get to that so this was actually tested so you can",
    "start": "3924180",
    "end": "3937310"
  },
  {
    "text": "this is the the formula the degree instant class memory divided by this",
    "start": "3937310",
    "end": "3943010"
  },
  {
    "text": "interesting metric number this will give you the number of connections you can",
    "start": "3943010",
    "end": "3948390"
  },
  {
    "text": "have for instance type so on our we can",
    "start": "3948390",
    "end": "3954960"
  },
  {
    "text": "have thousands of connections easily on our on our 16 X 8 extra-large instance",
    "start": "3954960",
    "end": "3962120"
  },
  {
    "text": "probably around 10,000 and not yet and",
    "start": "3962120",
    "end": "3973820"
  },
  {
    "text": "yet so let's go let's continue with what we were saying that we would like to",
    "start": "3973820",
    "end": "3982230"
  },
  {
    "text": "have the best of both worlds so data on s3 and index had sequel query",
    "start": "3982230",
    "end": "3988380"
  },
  {
    "text": "performance and this is exactly what we announced it yesterday at the San",
    "start": "3988380",
    "end": "3994410"
  },
  {
    "text": "Francisco summit the redshift the",
    "start": "3994410",
    "end": "4001670"
  },
  {
    "text": "redshift spectrum service so let's go back to them to the ball in the blast",
    "start": "4001670",
    "end": "4013180"
  },
  {
    "text": "redshift spectrum [Applause]",
    "start": "4013180",
    "end": "4022900"
  },
  {
    "text": "so with spectrum you create a redshift cluster but instead of storing your data",
    "start": "4022900",
    "end": "4030580"
  },
  {
    "text": "in the redshift cluster itself as it used to do before if now can query",
    "start": "4030580",
    "end": "4036940"
  },
  {
    "text": "datasets directly on s3 so you will have",
    "start": "4036940",
    "end": "4042600"
  },
  {
    "text": "ice kimmel created this schema can can be the same Amazon a teener schema that",
    "start": "4042600",
    "end": "4050620"
  },
  {
    "text": "we had and it's just as easy as that and",
    "start": "4050620",
    "end": "4056950"
  },
  {
    "text": "then you can create your tables and the thing is now data will be living a",
    "start": "4056950",
    "end": "4063040"
  },
  {
    "text": "street but we just index it by your redshift cluster and will be we will be",
    "start": "4063040",
    "end": "4069490"
  },
  {
    "text": "able to query it much much faster and with I did start the creation of a",
    "start": "4069490",
    "end": "4076570"
  },
  {
    "text": "redshift cluster earlier let's see if that's done so on let's reload the",
    "start": "4076570",
    "end": "4087430"
  },
  {
    "text": "stages",
    "start": "4087430",
    "end": "4090089"
  },
  {
    "text": "on redshift [Applause]",
    "start": "4096170",
    "end": "4103669"
  },
  {
    "text": "here it is our cluster it is available and healthy but no inbound permissions I",
    "start": "4107279",
    "end": "4113849"
  },
  {
    "text": "will edit the security group so we can allow external connections I will allow",
    "start": "4113849",
    "end": "4122818"
  },
  {
    "text": "external connections from anywhere what is the port in 549 from anywhere so",
    "start": "4122819",
    "end": "4138258"
  },
  {
    "text": "guys can connect to it like and we can",
    "start": "4138259",
    "end": "4145770"
  },
  {
    "text": "run any sequel engine or clients to run",
    "start": "4145770",
    "end": "4151230"
  },
  {
    "text": "this I'm not much of a poster guy but that's for I running on people workbench",
    "start": "4151230",
    "end": "4160689"
  },
  {
    "text": "[Applause] see workbench for J",
    "start": "4160689",
    "end": "4169429"
  },
  {
    "text": "this is a regular JDBC client I will add",
    "start": "4171480",
    "end": "4176970"
  },
  {
    "text": "driver so manage drivers and the the",
    "start": "4176970",
    "end": "4184060"
  },
  {
    "text": "bosphorus driver it's not actually the post whatever it's it's the red shape",
    "start": "4184060",
    "end": "4190529"
  },
  {
    "text": "and red shift driver I downloaded this",
    "start": "4190530",
    "end": "4196480"
  },
  {
    "text": "is the it's on the documentation page [Applause]",
    "start": "4196480",
    "end": "4202770"
  },
  {
    "text": "JDBC driver so here you can obtain the",
    "start": "4202770",
    "end": "4208990"
  },
  {
    "text": "driver and connect so we will need this",
    "start": "4208990",
    "end": "4217360"
  },
  {
    "text": "class name for the driver and the file so on SQL forge a our plan its own local",
    "start": "4217360",
    "end": "4230790"
  },
  {
    "text": "work box or code KBB ratchet so this is",
    "start": "4230790",
    "end": "4241510"
  },
  {
    "text": "the latest driver and the questioning",
    "start": "4241510",
    "end": "4247240"
  },
  {
    "text": "and the sample URL is like this",
    "start": "4247240",
    "end": "4254460"
  },
  {
    "text": "then hope you were the driver so now",
    "start": "4257300",
    "end": "4262470"
  },
  {
    "text": "let's go G delt and push your reg driver",
    "start": "4262470",
    "end": "4268380"
  },
  {
    "text": "and we should have the UIL right there",
    "start": "4268380",
    "end": "4274320"
  },
  {
    "text": "on the console and the database name is",
    "start": "4274320",
    "end": "4286110"
  },
  {
    "text": "keyed out the name password it's the",
    "start": "4286110",
    "end": "4294360"
  },
  {
    "text": "same as fast as it connects successful",
    "start": "4294360",
    "end": "4299510"
  },
  {
    "text": "okay down so now we are connected we can",
    "start": "4299510",
    "end": "4306270"
  },
  {
    "text": "proceed to create our schema and let's see how that how that is so to create an",
    "start": "4306270",
    "end": "4316650"
  },
  {
    "text": "external schema here's how it works for an existing dialog let's see I mean we",
    "start": "4316650",
    "end": "4328290"
  },
  {
    "text": "have for an existing image let's see on",
    "start": "4328290",
    "end": "4334800"
  },
  {
    "text": "if the variables is on the Tina just Mitch word unknown the right thing and",
    "start": "4334800",
    "end": "4340530"
  },
  {
    "text": "this is a very first time I use this service it was announced very very",
    "start": "4340530",
    "end": "4346770"
  },
  {
    "text": "recently so let's see how it works and if you manage your catalog using a",
    "start": "4346770",
    "end": "4352320"
  },
  {
    "text": "Tina that's us specify the Athena database name and the address region in which it's located so this will be it",
    "start": "4352320",
    "end": "4361070"
  },
  {
    "text": "let's just replace with our values so",
    "start": "4361070",
    "end": "4366080"
  },
  {
    "text": "Athena schema from various catalog and database is called G delt we need an I",
    "start": "4366080",
    "end": "4375600"
  },
  {
    "text": "am role to allow redshift to write to this so let's click on I am I already",
    "start": "4375600",
    "end": "4386100"
  },
  {
    "text": "have this role created here so it's just allowing everything right",
    "start": "4386100",
    "end": "4393630"
  },
  {
    "text": "now but please don't do this just allow you can just allow access to s3 and",
    "start": "4393630",
    "end": "4404000"
  },
  {
    "text": "region is one sixth one and let's let's",
    "start": "4404000",
    "end": "4409560"
  },
  {
    "text": "see if it works so a teeny schema created let me call this check out just",
    "start": "4409560",
    "end": "4419429"
  },
  {
    "text": "for consistency and the schema was created so now redshift cluster I",
    "start": "4419429",
    "end": "4427370"
  },
  {
    "text": "created this cluster before let me show how it is configured it's running on dc1",
    "start": "4427370",
    "end": "4434520"
  },
  {
    "text": "ax large instances let me just show you how this other this so those are the",
    "start": "4434520",
    "end": "4446940"
  },
  {
    "text": "fastest instance types available on us",
    "start": "4446940",
    "end": "4453570"
  },
  {
    "text": "is one",
    "start": "4453570",
    "end": "4456198"
  },
  {
    "text": "so those will be 32 gigs of 32 CPUs",
    "start": "4461629",
    "end": "4468159"
  },
  {
    "text": "twenty hundred twenty four four two hundred and forty four gigs of ram and",
    "start": "4468159",
    "end": "4473570"
  },
  {
    "text": "two terabyte SSD nodes at five bucks per hour nearly and now we probably can",
    "start": "4473570",
    "end": "4482149"
  },
  {
    "text": "start queries against our database so let's pick the same ones on count say",
    "start": "4482149",
    "end": "4499969"
  },
  {
    "text": "let's incorporate external table into local catalog why didn't this work that",
    "start": "4499969",
    "end": "4511070"
  },
  {
    "text": "would require some some logging and debugging let's try to figure this out",
    "start": "4511070",
    "end": "4522129"
  },
  {
    "text": "does",
    "start": "4522129",
    "end": "4525129"
  },
  {
    "text": "let's just read a bit for the fluid ox with you guys I hope you guys don't mind but sometimes that's what what it takes",
    "start": "4529070",
    "end": "4537800"
  },
  {
    "text": "right some debugging and if not if it doesn't work I can get it up later and",
    "start": "4537800",
    "end": "4546160"
  },
  {
    "text": "help you guys and show you guys afterwards so this should be it should",
    "start": "4546160",
    "end": "4556400"
  },
  {
    "text": "be pretty this is pretty straightforward there's not much to be wrong let's see",
    "start": "4556400",
    "end": "4562040"
  },
  {
    "text": "the axis created the cluster the next",
    "start": "4562040",
    "end": "4572750"
  },
  {
    "text": "month",
    "start": "4572750",
    "end": "4575110"
  },
  {
    "text": "hmm current transactions well I'm sorry that",
    "start": "4582120",
    "end": "4589349"
  },
  {
    "text": "this doesn't work I'm not sure exactly why let's see if we can make another",
    "start": "4589349",
    "end": "4598409"
  },
  {
    "text": "example let's try the but to try the",
    "start": "4598409",
    "end": "4604979"
  },
  {
    "text": "other example I would need another data set let's see how desk does it if there",
    "start": "4604979",
    "end": "4610800"
  },
  {
    "text": "if it's any different and oh okay um",
    "start": "4610800",
    "end": "4618618"
  },
  {
    "text": "let's let's try this this approach and",
    "start": "4619099",
    "end": "4624320"
  },
  {
    "text": "[Applause]",
    "start": "4625410",
    "end": "4628609"
  },
  {
    "text": "create external this schema is not",
    "start": "4632550",
    "end": "4642019"
  },
  {
    "text": "exists get out to our second attempt and run it",
    "start": "4642019",
    "end": "4651739"
  },
  {
    "text": "[Applause]",
    "start": "4657600",
    "end": "4660749"
  },
  {
    "text": "oh it's it's all one turn data catalog",
    "start": "4662830",
    "end": "4670260"
  },
  {
    "text": "database out there as close as possible",
    "start": "4670260",
    "end": "4677200"
  },
  {
    "text": "to the example so we don't miss there is",
    "start": "4677200",
    "end": "4686920"
  },
  {
    "text": "a spring region us is one I am roll the",
    "start": "4686920",
    "end": "4702070"
  },
  {
    "text": "our service role this would be it",
    "start": "4702070",
    "end": "4711060"
  },
  {
    "text": "our redshift role and I am travel",
    "start": "4714620",
    "end": "4724640"
  },
  {
    "text": "redshift closers to call a black services on our behalf so this would be it should be good it's a bit different",
    "start": "4724640",
    "end": "4734140"
  },
  {
    "text": "yeah that's that's ok and create",
    "start": "4734140",
    "end": "4741340"
  },
  {
    "text": "external database is not exist yep so",
    "start": "4743290",
    "end": "4750470"
  },
  {
    "text": "let's try this now just in valid in",
    "start": "4750470",
    "end": "4756470"
  },
  {
    "text": "invalid transaction box commenting on until the end of current transaction box",
    "start": "4756470",
    "end": "4763390"
  },
  {
    "text": "how to create transactions in branches in bosphorus I don't know how this how",
    "start": "4763390",
    "end": "4771530"
  },
  {
    "text": "this works it should have a spot bottom",
    "start": "4771530",
    "end": "4777590"
  },
  {
    "text": "or quit or interrupt transaction I don't know how to quit this query let's see if",
    "start": "4777590",
    "end": "4785630"
  },
  {
    "text": "we have something on the redshift management console to help us here so on",
    "start": "4785630",
    "end": "4792250"
  },
  {
    "text": "queries we should be able to see them here is the last queries and perhaps",
    "start": "4792250",
    "end": "4799760"
  },
  {
    "text": "stop them yeah if we have to make queries so this can help us finish this",
    "start": "4799760",
    "end": "4807610"
  },
  {
    "text": "they're worse oh yeah this was to make an Alex",
    "start": "4807610",
    "end": "4817270"
  },
  {
    "text": "currently I'm doing but to work no not",
    "start": "4817270",
    "end": "4832960"
  },
  {
    "text": "yet well I will have trims to check this out and get it back to you guys I really",
    "start": "4832960",
    "end": "4840010"
  },
  {
    "text": "don't know I will have to talk to the experts on this but there's I'll leave",
    "start": "4840010",
    "end": "4846790"
  },
  {
    "text": "it to them to the next episode or unless someone knows what the current transit",
    "start": "4846790",
    "end": "4854200"
  },
  {
    "text": "how troop and transactions or how to do any transactions on on this tool perhaps",
    "start": "4854200",
    "end": "4863820"
  },
  {
    "text": "connecting with different - I don't know well I will not guess and keep the",
    "start": "4863820",
    "end": "4870160"
  },
  {
    "text": "buzzing and wasting everyone's time and I'll just fix it and on the next episode",
    "start": "4870160",
    "end": "4876130"
  },
  {
    "text": "I show you guys what was wrong actually but the idea is using spectrum it should",
    "start": "4876130",
    "end": "4886870"
  },
  {
    "text": "be pretty much faster see it's the same syntax the same idea of creating",
    "start": "4886870",
    "end": "4893380"
  },
  {
    "text": "external tables on a string that are at with data scored on s3 but those red",
    "start": "4893380",
    "end": "4900219"
  },
  {
    "text": "shift instances will build the index of that data so you can run very much",
    "start": "4900219",
    "end": "4907210"
  },
  {
    "text": "faster queries so in this in jazz example they were thousands millions",
    "start": "4907210",
    "end": "4915360"
  },
  {
    "text": "billions it was six billion columns and",
    "start": "4915360",
    "end": "4920430"
  },
  {
    "text": "the query took 33 seconds so you can see",
    "start": "4920430",
    "end": "4925690"
  },
  {
    "text": "that it is clearly much much faster than either attina",
    "start": "4925690",
    "end": "4931210"
  },
  {
    "text": "directly because it's indexed or data that would run on RDS for example and",
    "start": "4931210",
    "end": "4939330"
  },
  {
    "text": "for processing all the roles like six billion rows in a single query",
    "start": "4939330",
    "end": "4945880"
  },
  {
    "text": "with grouping and and filtering it I'm",
    "start": "4945880",
    "end": "4952090"
  },
  {
    "text": "just finding these four rows it took just two hundred and fifty three seconds",
    "start": "4952090",
    "end": "4961960"
  },
  {
    "text": "that's four and a half minutes right so you can see that it's for scanning six",
    "start": "4961960",
    "end": "4969910"
  },
  {
    "text": "billion rows it's pretty impressive and it doesn't even you could even run much",
    "start": "4969910",
    "end": "4978130"
  },
  {
    "text": "of those simultaneously as those didn't take much intimidation on your cluster",
    "start": "4978130",
    "end": "4983620"
  },
  {
    "text": "on the cluster after all so I hope you guys are better at sequel than I am and",
    "start": "4983620",
    "end": "4990730"
  },
  {
    "text": "can prime redshift spectrum today so with this I'd like to show you guys that",
    "start": "4990730",
    "end": "5001040"
  },
  {
    "text": "it's not a easy choice between sequel",
    "start": "5001040",
    "end": "5006240"
  },
  {
    "text": "and no sequel that there's a lot to consider because you can run sequel in",
    "start": "5006240",
    "end": "5012300"
  },
  {
    "text": "so many different environments and clusters that then many people have the",
    "start": "5012300",
    "end": "5019920"
  },
  {
    "text": "idea that sequels not performant or not scalable and as you can see we can run sequel",
    "start": "5019920",
    "end": "5027870"
  },
  {
    "text": "against billions of rows on data and stored on text files very quickly on s3",
    "start": "5027870",
    "end": "5033780"
  },
  {
    "text": "so this really changes the perspective of what sequel databases can do and it's",
    "start": "5033780",
    "end": "5042080"
  },
  {
    "text": "but at the same time we have we offer no sequel databases with dynamo DT and then",
    "start": "5042080",
    "end": "5049320"
  },
  {
    "text": "we'll DB acceleration that was launched yesterday so you can have very very fast",
    "start": "5049320",
    "end": "5054480"
  },
  {
    "text": "transactions with with were no sequel data with again a parallel processing",
    "start": "5054480",
    "end": "5063360"
  },
  {
    "text": "and other things that are redshift bring soon so it in the end or and of course",
    "start": "5063360",
    "end": "5072120"
  },
  {
    "text": "you can always build your favorite database you can mongodb you can run any database and you",
    "start": "5072120",
    "end": "5079820"
  },
  {
    "text": "would like on ec3 and the the most important concept",
    "start": "5079820",
    "end": "5085280"
  },
  {
    "text": "behind to understand is that of schema on reads and schema on writes because",
    "start": "5085280",
    "end": "5090679"
  },
  {
    "text": "this is what makes them the magic works with a tina schema is being interpreted",
    "start": "5090679",
    "end": "5097370"
  },
  {
    "text": "as data is being read through so it's of course is lower true to read then if you",
    "start": "5097370",
    "end": "5105679"
  },
  {
    "text": "have index data with index set data as you have on RDS our-our for example it",
    "start": "5105679",
    "end": "5113360"
  },
  {
    "text": "is much faster usually but for massive",
    "start": "5113360",
    "end": "5119449"
  },
  {
    "text": "workloads having just a single server a single query analyzer it's not enough to",
    "start": "5119449",
    "end": "5127159"
  },
  {
    "text": "go through the whole data set so ideally form the highest scale analytics for",
    "start": "5127159",
    "end": "5135350"
  },
  {
    "text": "making reports against the billions of roll it would need the best of both worlds",
    "start": "5135350",
    "end": "5140630"
  },
  {
    "text": "and this would be redshift spectrum grid as you would have data on s3 and indexes",
    "start": "5140630",
    "end": "5148040"
  },
  {
    "text": "on redshift clusters I'm sorry we couldn't I couldn't make that work today",
    "start": "5148040",
    "end": "5154100"
  },
  {
    "text": "but for the next episode we can come back today to that and go please take a",
    "start": "5154100",
    "end": "5162949"
  },
  {
    "text": "look at the a SS board Geoff's blog for",
    "start": "5162949",
    "end": "5169280"
  },
  {
    "text": "the recent announcements and you can this is all them in our jeast we have",
    "start": "5169280",
    "end": "5176840"
  },
  {
    "text": "links to all the things I mentioned especially I would like to thank Julian",
    "start": "5176840",
    "end": "5184580"
  },
  {
    "text": "Simon for this excellent blog post on how to explore the GDL dataset with",
    "start": "5184580",
    "end": "5190100"
  },
  {
    "text": "Amazon Athena that's what we rented a he is Joe Simon on Twitter and it was very very helpful",
    "start": "5190100",
    "end": "5199580"
  },
  {
    "text": "to find that I didn't have to write all those queries myself and that's it",
    "start": "5199580",
    "end": "5207110"
  },
  {
    "text": "formed for today at so we have we always talked about",
    "start": "5207110",
    "end": "5213620"
  },
  {
    "text": "content and web applications distribution in the first then we talked",
    "start": "5213620",
    "end": "5219110"
  },
  {
    "text": "about lambda functions and API a place then dynamodb now sequel and no sequel",
    "start": "5219110",
    "end": "5225469"
  },
  {
    "text": "and with that we have all the components to to build highly scalable application",
    "start": "5225469",
    "end": "5233989"
  },
  {
    "text": "and in the next in the next broadcast we are going to talk about analytics",
    "start": "5233989",
    "end": "5240429"
  },
  {
    "text": "especially live analytics with tools",
    "start": "5240429",
    "end": "5245840"
  },
  {
    "text": "such as the black communities and things like this so I hope to see you guys",
    "start": "5245840",
    "end": "5253150"
  },
  {
    "text": "Eadie's soon talking about dr. Randall we'll be broadcasting soon we are from",
    "start": "5253150",
    "end": "5260060"
  },
  {
    "text": "the developer relations team and our job is to be here talking developer to",
    "start": "5260060",
    "end": "5265910"
  },
  {
    "text": "developer and show showing how things actually work and helping you guys be",
    "start": "5265910",
    "end": "5271850"
  },
  {
    "text": "successful on a SS thank you very much see you guys next time",
    "start": "5271850",
    "end": "5278679"
  }
]