[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "In this video, you’ll see how you can use\nAWS Resilience Hub with microservices.",
    "start": "0",
    "end": "4316"
  },
  {
    "text": "Using Resilience Hub, you can scan \nmicroservices in an application,",
    "start": "4902",
    "end": "8234"
  },
  {
    "text": "garner recommendations for Amazon \nElastic Container Service (Amazon ECS), ",
    "start": "8234",
    "end": "12385"
  },
  {
    "text": "and perform an ECS-specific resilience test.",
    "start": "12385",
    "end": "15060"
  },
  {
    "start": "17000",
    "end": "108000"
  },
  {
    "text": "This is AWS Resilience Hub, which \nprovides a central place to define,",
    "start": "17327",
    "end": "21195"
  },
  {
    "text": "validate, and track the resilience \nof your applications on AWS.",
    "start": "21195",
    "end": "24652"
  },
  {
    "text": "ECS is now completely \nsupported within Resilience Hub.",
    "start": "25414",
    "end": "28295"
  },
  {
    "text": "We’ll look at some new \nfeatures that were released.",
    "start": "28822",
    "end": "30797"
  },
  {
    "text": "Let’s start by adding an application.",
    "start": "31422",
    "end": "32904"
  },
  {
    "text": "We’ll add a CloudFormation stack.",
    "start": "33627",
    "end": "35191"
  },
  {
    "text": "In this case, we’ll choose the Services stack.",
    "start": "40096",
    "end": "42438"
  },
  {
    "text": "Let’s name it microservices.",
    "start": "46473",
    "end": "48000"
  },
  {
    "text": "The new scheduled assessment \nfeature will assess our application daily,",
    "start": "51838",
    "end": "54922"
  },
  {
    "text": "without any manual intervention.",
    "start": "54922",
    "end": "56450"
  },
  {
    "text": "Next, let’s identify the resources we \nwant to review for this application.",
    "start": "59870",
    "end": "63238"
  },
  {
    "text": "We’ll include a Lambda function, an \nECS service, and an API gateway.",
    "start": "63795",
    "end": "67712"
  },
  {
    "text": "Next, let’s select a resiliency policy.",
    "start": "76984",
    "end": "79040"
  },
  {
    "text": "Resiliency policies define the \nRecovery Time Objective (RTO)",
    "start": "79470",
    "end": "82758"
  },
  {
    "text": "and Recovery Point Objective (RPO) \nused to measure an application's",
    "start": "82758",
    "end": "86498"
  },
  {
    "text": "resiliency to certain disruption types.",
    "start": "86498",
    "end": "88538"
  },
  {
    "text": "For our purposes, we’ll choose \nthe Mission critical policy.",
    "start": "89329",
    "end": "92035"
  },
  {
    "text": "Next, let’s review the information \nand publish the application.",
    "start": "94741",
    "end": "97559"
  },
  {
    "text": "Now let’s take a look at the deployed application.",
    "start": "104165",
    "end": "106115"
  },
  {
    "start": "108000",
    "end": "315000"
  },
  {
    "text": "The assessments for the application \nshow that our policy has been breached,",
    "start": "108701",
    "end": "111494"
  },
  {
    "text": "indicating potential resilience weaknesses.",
    "start": "111495",
    "end": "113715"
  },
  {
    "text": "Let’s look at recommendations on how\n to improve our microservices architecture.",
    "start": "114106",
    "end": "117486"
  },
  {
    "text": "We can view recommendations \nfor each application component.",
    "start": "119274",
    "end": "121848"
  },
  {
    "text": "Currently, we are looking at the \nrecommendations for the API gateway.",
    "start": "122444",
    "end": "125544"
  },
  {
    "text": "We can see the changes we need to \nmake to achieve the lowest possible",
    "start": "126472",
    "end": "129110"
  },
  {
    "text": "RTO and RPO in the event of \nan Availability Zone disruption.",
    "start": "129111",
    "end": "132642"
  },
  {
    "text": "The changes include configuring \nRoute53 to route requests to the next",
    "start": "133746",
    "end": "137260"
  },
  {
    "text": "available region, and deploying the \nAPI gateway in a different region.",
    "start": "137260",
    "end": "140648"
  },
  {
    "text": "The estimated cost is $0.00 per month, \nand the architecture type is MultiSite.",
    "start": "141655",
    "end": "145792"
  },
  {
    "text": "Next, let’s look at the recommendations\nfor the Lambda function.",
    "start": "146740",
    "end": "149332"
  },
  {
    "text": "As you can see, the changes include \nmaking users deploy Lambda using an",
    "start": "151218",
    "end": "154372"
  },
  {
    "text": "S3 bucket, deploying Lambda into an \nalternative region, and making users use",
    "start": "154372",
    "end": "158665"
  },
  {
    "text": "failover routing using a \nglobal service (Route53).",
    "start": "158665",
    "end": "161556"
  },
  {
    "text": "These changes will enable us to get as \nclose as possible to our target RTO and",
    "start": "162446",
    "end": "165928"
  },
  {
    "text": "RPO, but our resiliency policy is \nexpected to remain breached.",
    "start": "165928",
    "end": "169498"
  },
  {
    "text": "The estimated cost is $252.00 per month, \nand the architecture type is MultiSite.",
    "start": "170446",
    "end": "175132"
  },
  {
    "text": "Next, let’s look at the recommended \nchanges for the ECS service.",
    "start": "176138",
    "end": "179269"
  },
  {
    "text": "We have three optimization options.",
    "start": "181086",
    "end": "182805"
  },
  {
    "text": "In this case, the recommended changes\n for each option are the same because",
    "start": "183274",
    "end": "186171"
  },
  {
    "text": "we need to get the ECS service in a MultiSite \narchitecture type with another region available.",
    "start": "186171",
    "end": "190504"
  },
  {
    "text": "The changes include adding a service \nreplication in another region and",
    "start": "191431",
    "end": "194612"
  },
  {
    "text": "configuring ECR Replication to copy \nimages to ECR in other regions.",
    "start": "194612",
    "end": "198459"
  },
  {
    "text": "These changes are expected to make the \nRTO and RPO compliant with our policy.",
    "start": "199251",
    "end": "203166"
  },
  {
    "text": "Now let’s look at the \noperational recommendations.",
    "start": "206109",
    "end": "208180"
  },
  {
    "text": "We can see three alarms that have been \ndeployed as part of the ECS service.",
    "start": "210691",
    "end": "214038"
  },
  {
    "text": "Let’s expand the Description \ncolumn to see what they are.",
    "start": "214673",
    "end": "217099"
  },
  {
    "text": "We can also see API Gateway, \nLambda, and Synthetic canary alarms.",
    "start": "219141",
    "end": "222942"
  },
  {
    "text": "Next, let’s view the standard \noperating procedures (SOPs).",
    "start": "225808",
    "end": "229107"
  },
  {
    "text": "Each SOP contains a prescriptive set of \nsteps designed to efficiently recover our",
    "start": "229478",
    "end": "233037"
  },
  {
    "text": "application in the event of an outage or alarm.",
    "start": "233037",
    "end": "235249"
  },
  {
    "text": "Here, we can see an SOP \nfor scaling the ECS Services,",
    "start": "236343",
    "end": "239391"
  },
  {
    "text": "which was recently added to Resilience Hub.",
    "start": "239391",
    "end": "241277"
  },
  {
    "text": "This SOP applies, if provided, new \nCPU, RAM, and Number of task values",
    "start": "242332",
    "end": "247032"
  },
  {
    "text": "through creating a new version of the existing \ntask definition assigned to the given service.",
    "start": "247032",
    "end": "251216"
  },
  {
    "text": "If the new task definition is explicitly provided, \nthe SOP ignores the CPU and RAM parameters.",
    "start": "251822",
    "end": "257067"
  },
  {
    "text": "There are also Lambda SOPs for testing\nLambda behavior, changing memory",
    "start": "257956",
    "end": "261290"
  },
  {
    "text": "size, switching the alias of Lambda \nfunctions to another version, changing",
    "start": "261290",
    "end": "265003"
  },
  {
    "text": "the execution time limit, and \nchanging Provisioned Concurrency.",
    "start": "265003",
    "end": "267940"
  },
  {
    "text": "Next, let’s look at the fault \ninjection experiment templates.",
    "start": "268888",
    "end": "271832"
  },
  {
    "text": "Fault injection experiments are run \nto measure the resiliency of AWS",
    "start": "273561",
    "end": "276750"
  },
  {
    "text": "resources and the amount of time \nit takes to recover from application,",
    "start": "276750",
    "end": "279894"
  },
  {
    "text": "infrastructure, availability \nzone, and AWS Region outages.",
    "start": "279894",
    "end": "283653"
  },
  {
    "text": "The first template simulates a \ncase when ECS has failing tasks,",
    "start": "284591",
    "end": "287990"
  },
  {
    "text": "to evaluate application resiliency.",
    "start": "287990",
    "end": "290050"
  },
  {
    "text": "The second template tests Lambda ",
    "start": "290841",
    "end": "292236"
  },
  {
    "text": "behavior when hitting a \nReservedConcurrentExecutions value.",
    "start": "292236",
    "end": "295335"
  },
  {
    "text": "Thanks to its latest release, Resilience \nHub now fully supports ECS.",
    "start": "297803",
    "end": "301605"
  },
  {
    "text": "You’ve just seen how you can use \nAWS Resilience Hub with microservices.",
    "start": "304385",
    "end": "307879"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "308895",
    "end": "311837"
  },
  {
    "text": "Thanks for watching. Now it’s your turn to try.",
    "start": "312102",
    "end": "313951"
  }
]