[
  {
    "text": "all right well thanks everybody great to be opening reinvent on this",
    "start": "0",
    "end": "6540"
  },
  {
    "text": "Monday morning so we're going to talk today about chaos engineering and I'm",
    "start": "6540",
    "end": "14519"
  },
  {
    "text": "going to also have bring up anima Dana pretty soon she's going to cover a bit in the middle some SAR hands-on demos of",
    "start": "14519",
    "end": "20730"
  },
  {
    "text": "what it looks like and I'm gonna give you more of an overview of what Cass engineering looks like what why we care",
    "start": "20730",
    "end": "27180"
  },
  {
    "text": "about it and some sort of where this is probably going to be going so I'll be",
    "start": "27180",
    "end": "32668"
  },
  {
    "text": "doing history and future and Ann will be actually breaking some containers so",
    "start": "32669",
    "end": "37890"
  },
  {
    "text": "here's a few questions what did your system do when something fails you",
    "start": "37890",
    "end": "43440"
  },
  {
    "text": "really got a few choices well collapse in a heap here's one choice right that's actually quite a common choice that",
    "start": "43440",
    "end": "49230"
  },
  {
    "text": "people make when they didn't think about what might happen when something fails but you really got two choices you get",
    "start": "49230",
    "end": "54570"
  },
  {
    "text": "to stop or try and carry on with reduced functionality meaning that you've figured out how to mitigate that failure",
    "start": "54570",
    "end": "60750"
  },
  {
    "text": "and keep going sometimes the right thing to do is stop like if you're not sure whether it's the right thing to do to",
    "start": "60750",
    "end": "66119"
  },
  {
    "text": "move a billion dollars from point A to point B you should probably stop if you're not sure whether somebody's",
    "start": "66119",
    "end": "71180"
  },
  {
    "text": "authenticated and should be able to do you know watch a movie for free no you",
    "start": "71180",
    "end": "77580"
  },
  {
    "text": "know that doesn't really cost much to do should probably just let them keep going so do you have a back-up datacenter who",
    "start": "77580",
    "end": "84150"
  },
  {
    "text": "here has a backup data center let's get some interactive audience participation here okay how can you fail over apps to",
    "start": "84150",
    "end": "91470"
  },
  {
    "text": "it so the impactor who's good the embarrassing silence here one of the",
    "start": "91470",
    "end": "97619"
  },
  {
    "text": "good answers is about once a year because the order does make us do that right so how often do you feel over the",
    "start": "97619",
    "end": "103470"
  },
  {
    "text": "whole data center at once you know again someone goes and hits the power plug or no no no no no really people very very",
    "start": "103470",
    "end": "110549"
  },
  {
    "text": "rarely do that so I call this availability theater you built yourself a date a whole new backup data center",
    "start": "110549",
    "end": "116759"
  },
  {
    "text": "and you're too scared to actually practice failing over to it and it's a bit like taking your shoes off at the",
    "start": "116759",
    "end": "121890"
  },
  {
    "text": "airport it makes you kind of feel more secure in some weird way but it's really a psychological prop at this point well",
    "start": "121890",
    "end": "127920"
  },
  {
    "text": "maybe it's because the order does made you do it so we have this fairy tale",
    "start": "127920",
    "end": "133720"
  },
  {
    "text": "once upon a time in theory if everything works perfectly we've got this great plan to survive the disasters that we",
    "start": "133720",
    "end": "139210"
  },
  {
    "text": "thought of in advance unfortunately it's not a good fairy tale humanik sleep at",
    "start": "139210",
    "end": "144430"
  },
  {
    "text": "night don't try this on the kids because it really doesn't work out well here's a few cases where that didn't go very well",
    "start": "144430",
    "end": "151960"
  },
  {
    "text": "how about think think about what would happen if the if the primary domain name for the company you work out somebody",
    "start": "151960",
    "end": "157990"
  },
  {
    "text": "forgot to renew it like how much stuff would still be working so this actually happened a year or so ago what was left",
    "start": "157990",
    "end": "165460"
  },
  {
    "text": "of this company was the CEO apologizing on Twitter for about a day until they figured it out so don't be those people",
    "start": "165460",
    "end": "172240"
  },
  {
    "text": "right everyone's gonna think about it how do i how do I go and against that in the future if anybody hasn't seen this",
    "start": "172240",
    "end": "180610"
  },
  {
    "text": "problem then you probably haven't run anything for a while right everybody has seen a certain time out they just do it",
    "start": "180610",
    "end": "187290"
  },
  {
    "text": "we've built elaborate schemes when I was at Netflix we've built schemes for just tracking certs and one of the monkeys",
    "start": "187290",
    "end": "193780"
  },
  {
    "text": "would sort of complain at you if it looked like it was running up AWS we check all these things we have you know",
    "start": "193780",
    "end": "200080"
  },
  {
    "text": "how many days left forever all the certs we can find so this is another thing every now and again one of the certs you",
    "start": "200080",
    "end": "205780"
  },
  {
    "text": "didn't notice well timeout and take you out turns out computers don't work well",
    "start": "205780",
    "end": "211239"
  },
  {
    "text": "underwater so the kind of one of those things and when the water goes away they",
    "start": "211239",
    "end": "216310"
  },
  {
    "text": "don't work when they're full of mud and sand and bits of seaweed either so you know a friend of mine had to deal with",
    "start": "216310",
    "end": "221739"
  },
  {
    "text": "this it was unplanned he spent quite a few months rebuilding a data center no bit not a good plan so the problem is",
    "start": "221739",
    "end": "228190"
  },
  {
    "text": "this could be you tomorrow to start off the bed the week with the downer but",
    "start": "228190",
    "end": "233470"
  },
  {
    "text": "think about all the things that could go wrong and you can't really predict",
    "start": "233470",
    "end": "239080"
  },
  {
    "text": "everything that could go wrong so here's some of the best advice I've heard Crispin Khan was one of the early he was",
    "start": "239080",
    "end": "246700"
  },
  {
    "text": "the original engineering manager for ec2 more than a decade ago and I was on a",
    "start": "246700",
    "end": "252190"
  },
  {
    "text": "panel with him back ages ago back about 2010 and he came up with this this thought which I were thought was one of",
    "start": "252190",
    "end": "258190"
  },
  {
    "text": "the sort of really really key ideas you can't predict exactly what will go wrong but you can get very good",
    "start": "258190",
    "end": "264280"
  },
  {
    "text": "detecting and responding quickly right if you can detect and respond quickly you can limit the impact of anything",
    "start": "264280",
    "end": "270310"
  },
  {
    "text": "happening because the next thing that happens is likely something that's never happened before that you didn't prepare",
    "start": "270310",
    "end": "276250"
  },
  {
    "text": "for it's the one weakest link thing so few more things to read the network is",
    "start": "276250",
    "end": "283750"
  },
  {
    "text": "reliable of course it isn't this is a great paper on ACM queue it lists all",
    "start": "283750",
    "end": "288850"
  },
  {
    "text": "the ways networks aren't reliable all the things that look like Network partitions and there's a great peter",
    "start": "288850",
    "end": "294610"
  },
  {
    "text": "baelish and carl Kingsbury are definitely worth following if you if you want to follow up more about this",
    "start": "294610",
    "end": "301500"
  },
  {
    "text": "another thing even if you do everything perfectly at every stage in the process you can still end up with a catastrophe",
    "start": "301500",
    "end": "308290"
  },
  {
    "text": "and if you can't understand how that happens then this is a great book to read I tell people to read this book but",
    "start": "308290",
    "end": "314290"
  },
  {
    "text": "don't read it on a plane and don't read it if you have a loved one in hospital I",
    "start": "314290",
    "end": "319300"
  },
  {
    "text": "think unfortunately that means very few people read it because I actually ended up doing a whole conference keynote",
    "start": "319300",
    "end": "324790"
  },
  {
    "text": "earlier this year where I went through chapter two of it which is kind of sobering because it's an end-to-end plane crash but you can go find that it",
    "start": "324790",
    "end": "331240"
  },
  {
    "text": "was a go to Chicago at or you can have a catastrophic result after optimizing",
    "start": "331240",
    "end": "336820"
  },
  {
    "text": "every step in the process and doing nothing wrong this is a really really profound thought you have to think",
    "start": "336820",
    "end": "342070"
  },
  {
    "text": "through the first edition of release it by Michael Nygaard was a really",
    "start": "342070",
    "end": "347979"
  },
  {
    "text": "formative book lots of great information there lots of ideas about circuit breakers bulkheads and the second",
    "start": "347979",
    "end": "354460"
  },
  {
    "text": "edition has a whole bunch of new ideas in it so if you've read the first one get the second one if you've never seen this book it's a really essential book",
    "start": "354460",
    "end": "360850"
  },
  {
    "text": "for getting software in production reliably and all the things you can do to make that work well so this is chaos",
    "start": "360850",
    "end": "368860"
  },
  {
    "text": "engineering this is the principles of chaos and the discipline of experimenting in a distributed system in",
    "start": "368860",
    "end": "375610"
  },
  {
    "text": "order to build confidence in the system's capacity to withstand turbulent conditions in production it's a bit of a",
    "start": "375610",
    "end": "380860"
  },
  {
    "text": "mouthful so I'm going to boil this down a bit key things it's experimentation you're running",
    "start": "380860",
    "end": "386260"
  },
  {
    "text": "experiments you're trying to build confidence and then there's this capacity to withstand turbulent",
    "start": "386260",
    "end": "393130"
  },
  {
    "text": "conditions that's a bit of a mouthful so I'm going to modify this a little bit to be something that I think is a little",
    "start": "393130",
    "end": "400129"
  },
  {
    "text": "bit more boiled down and this is the terms here a bit more precise we're experimenting to ensure that the impacts",
    "start": "400129",
    "end": "407449"
  },
  {
    "text": "of the failures that are going to happen anyway are being mitigated in these terms have very precise definitions in",
    "start": "407449",
    "end": "414560"
  },
  {
    "text": "control theory in engineering we understand what failures are we understand what mitigation is we",
    "start": "414560",
    "end": "420439"
  },
  {
    "text": "understand what experiments are the turbulent turbulence is something that's a really a different concept so I think",
    "start": "420439",
    "end": "427370"
  },
  {
    "text": "this is a better way of stating it that lets us boil down what we should really be doing so here's the thing what went",
    "start": "427370",
    "end": "435500"
  },
  {
    "text": "wrong what kind of thing failed what are the effects of the failure",
    "start": "435500",
    "end": "441560"
  },
  {
    "text": "what mitigation mechanisms do you have in place and the problem is you're only going to be as strong as that weakest",
    "start": "441560",
    "end": "447680"
  },
  {
    "text": "link and it's difficult to think of everything that might fail but the more things you think of the better place",
    "start": "447680",
    "end": "453229"
  },
  {
    "text": "you're going to be you're going to push the types of failures you get out into those Byzantine complex weird things",
    "start": "453229",
    "end": "459199"
  },
  {
    "text": "you've never seen before rather than being the obvious thing that should be staring you in the face if you thought about it for five minutes so you can",
    "start": "459199",
    "end": "465259"
  },
  {
    "text": "clean up the easy stuff the hard stuff will never go away but it's worth worth cleaning up the things that you can I",
    "start": "465259",
    "end": "471529"
  },
  {
    "text": "did a version of this talk that's a full hour I did at the Kaos conference where Anna also presented you can think of",
    "start": "471529",
    "end": "478310"
  },
  {
    "text": "this presentation is to of the two one-hour talks from that conference sort of mashed together into one one talk for",
    "start": "478310",
    "end": "484669"
  },
  {
    "text": "here so if you want to see a lot more detail on the taxonomy and a lot more of Anna breaking containers you can go find",
    "start": "484669",
    "end": "491689"
  },
  {
    "text": "the cows conference from last September but I propose some terminology for the",
    "start": "491689",
    "end": "497389"
  },
  {
    "text": "different ways you can categorize failures and I put them in these layers at the bottom there's infrastructure",
    "start": "497389",
    "end": "504620"
  },
  {
    "text": "failure is like a disc brakes a network fails those kinds of things above that's",
    "start": "504620",
    "end": "509870"
  },
  {
    "text": "the software stack the things you brought in the stuff you downloaded from github the packages you bought the",
    "start": "509870",
    "end": "515029"
  },
  {
    "text": "things that you didn't build yourself that's what I think is the software stack all the different ways that can",
    "start": "515029",
    "end": "520130"
  },
  {
    "text": "fail then there's the application code that you wrote there's lots of ways that can fail and finally on the top even",
    "start": "520130",
    "end": "526610"
  },
  {
    "text": "with a perfectly good system if you operate it incorrectly you don't give it enough or you you know don't do an update",
    "start": "526610",
    "end": "534010"
  },
  {
    "text": "correctly there's lots of ways from an Operations point of view that you can you can also cause failures so think",
    "start": "534010",
    "end": "539709"
  },
  {
    "text": "about all the different kinds of things that can go wrong at all these four different layers in your stack and then",
    "start": "539709",
    "end": "545050"
  },
  {
    "text": "break it out just have you know sessions where everyone gets together on a whiteboard and says these are all the",
    "start": "545050",
    "end": "550779"
  },
  {
    "text": "things that could go wrong how probable are they and what's the impact going to be and what can we do about them one of",
    "start": "550779",
    "end": "559480"
  },
  {
    "text": "the most fundamental things we do when we're trying to figure out how to have a mitigator failure is we have to deal",
    "start": "559480",
    "end": "566199"
  },
  {
    "text": "with state and the state in order to mitigate it has to be replicated you have to have at least two places where",
    "start": "566199",
    "end": "573550"
  },
  {
    "text": "you can have your data and at least two ways to get there in order to have a really reliable system and there's",
    "start": "573550",
    "end": "579190"
  },
  {
    "text": "multiple levels you can do this at obviously at the bottom level sort of the traditional data center sand level",
    "start": "579190",
    "end": "584680"
  },
  {
    "text": "they're sort of storage block level replication or or on on AWS it'd be something like an s3 or an you know or",
    "start": "584680",
    "end": "592209"
  },
  {
    "text": "moving snapshots around above that you've got a more structured level where the database itself knows how to do",
    "start": "592209",
    "end": "599050"
  },
  {
    "text": "replication so there's a lot of options in that space and at the top level in your own code you can figure out well I",
    "start": "599050",
    "end": "604930"
  },
  {
    "text": "can send all my traffic myrin timing requests to two different places and I can process them in parallel there's a",
    "start": "604930",
    "end": "610690"
  },
  {
    "text": "number of ways you can do that or you can embed recovery and failover in your application as well so there's three different layers to",
    "start": "610690",
    "end": "616930"
  },
  {
    "text": "think about how you want to do that now",
    "start": "616930",
    "end": "623410"
  },
  {
    "text": "if we think about where this came from I'm just gonna add a bit of past present and future so in the past we had",
    "start": "623410",
    "end": "630699"
  },
  {
    "text": "disaster recovery that was me talking about earlier asking so do you have a data center do you ever fail it over",
    "start": "630699",
    "end": "637149"
  },
  {
    "text": "that's the kind of disaster recovery model now we have chaos engineering just emerging as a new topic it's becoming",
    "start": "637149",
    "end": "643420"
  },
  {
    "text": "quite interesting in the last year more and more people using it as a phrase there's a little meme to kind of have a",
    "start": "643420",
    "end": "650410"
  },
  {
    "text": "rethink of how we're going to do disaster recovery and then in the future we're going to be looking at really",
    "start": "650410",
    "end": "656260"
  },
  {
    "text": "resilient critical systems and the key thing here is I'm sure many of you are",
    "start": "656260",
    "end": "662050"
  },
  {
    "text": "moving operations from the day to the cloud if you think about when that happens we're not just moving the",
    "start": "662050",
    "end": "669050"
  },
  {
    "text": "the top-level applications the ones that the new greenfield applications which if",
    "start": "669050",
    "end": "674480"
  },
  {
    "text": "we start shutting entire data centers you're getting into the backend systems the core banking systems that move",
    "start": "674480",
    "end": "679730"
  },
  {
    "text": "trillions of dollars around the safety critical systems that keep aircraft flying or keep industrial machinery",
    "start": "679730",
    "end": "685519"
  },
  {
    "text": "operating or that keep your business running when those move to the cloud the cost of failure is much higher so we're",
    "start": "685519",
    "end": "692480"
  },
  {
    "text": "now at a stage in the cloud where more and more people are moving more and more critical things into the cloud and this",
    "start": "692480",
    "end": "698360"
  },
  {
    "text": "is an area I personally been working in and working across a whole group of customers in the last year or so so talk",
    "start": "698360",
    "end": "705200"
  },
  {
    "text": "a bit about what that might look like so here's the history of this you may not realize there's a company called SunGard",
    "start": "705200",
    "end": "711440"
  },
  {
    "text": "and it was the Sunoco the Sun Oil Company and God stood for something like Garak guaranteed application resiliency",
    "start": "711440",
    "end": "718700"
  },
  {
    "text": "or something like that and that was really where disaster recovery came from it was mainframe batch oriented they",
    "start": "718700",
    "end": "725180"
  },
  {
    "text": "wanted to failover their batch job so that people would get paid when the when the data center was having a bad day and",
    "start": "725180",
    "end": "731720"
  },
  {
    "text": "they defined two of these two terms recovery point objective and recovery",
    "start": "731720",
    "end": "736970"
  },
  {
    "text": "time objective it's very simple to think about if you think about a daily backup that means you have a recovery point of",
    "start": "736970",
    "end": "743360"
  },
  {
    "text": "once a day anything happened after the backup between backups is lost so you lose up to a day's worth of work but you",
    "start": "743360",
    "end": "749480"
  },
  {
    "text": "get you get back to wherever you took your backup snapshot and you can obviously shrink that time down to be",
    "start": "749480",
    "end": "755959"
  },
  {
    "text": "shorter and shorter periods of time once you get into the milliseconds then you can say I have an RPO of zero if I can",
    "start": "755959",
    "end": "761990"
  },
  {
    "text": "replicate the data into more than one place within before I acknowledge the",
    "start": "761990",
    "end": "767060"
  },
  {
    "text": "request right so a distributed transaction an RTO is how long it takes so it might maybe you have a daily",
    "start": "767060",
    "end": "773810"
  },
  {
    "text": "backup but if you try and restore from the backup might take you two days to get it back in the machine back up and running right so there they're not",
    "start": "773810",
    "end": "780019"
  },
  {
    "text": "really related it's how fast can you recover after you've noticed something's gone wrong it's a two different numbers",
    "start": "780019",
    "end": "785540"
  },
  {
    "text": "here that we've characterized most of these availability systems by and this is a whole business continuity there's a",
    "start": "785540",
    "end": "792680"
  },
  {
    "text": "whole industry around this there are ISO standards around that one sort of plea here train if you",
    "start": "792680",
    "end": "798310"
  },
  {
    "text": "are working in their space try not to reinvent terminology and practices that the industry has been working on for a few decades",
    "start": "798310",
    "end": "804520"
  },
  {
    "text": "read the iso standard read the glossary there's a really good definition a whole lot of terms that allows a lot of",
    "start": "804520",
    "end": "809650"
  },
  {
    "text": "business process kind of stuff that really doesn't need to change we're changing the underlying technology with",
    "start": "809650",
    "end": "815140"
  },
  {
    "text": "chaos engineering but what we're really doing is reengineering what's been",
    "start": "815140",
    "end": "820240"
  },
  {
    "text": "happening in disaster recovery for the last few decades so what is chaos",
    "start": "820240",
    "end": "826420"
  },
  {
    "text": "engineering where did it come from so some of you may know Jesse Robbins so he was at Amazon years ago he called",
    "start": "826420",
    "end": "832480"
  },
  {
    "text": "himself the master of disaster he did go into data centers and hit the power switch he was that guy one time he",
    "start": "832480",
    "end": "839170"
  },
  {
    "text": "actually was even more devious he's also a part-time his or his a reserve fireman and he went in and he simulated a data",
    "start": "839170",
    "end": "846520"
  },
  {
    "text": "center being on fire so he didn't just hit the power switch he said well if the data center was on fire this is the order in which things would go down and",
    "start": "846520",
    "end": "853330"
  },
  {
    "text": "he simulated that this is within the Amazon retail site in the early 2000s so",
    "start": "853330",
    "end": "859990"
  },
  {
    "text": "when when I was at Netflix in 2010 we were looking at moving to AWS we were",
    "start": "859990",
    "end": "865180"
  },
  {
    "text": "trying to think how are we going to build something where we wanted a TV set to just behave like a TV set normally",
    "start": "865180",
    "end": "870310"
  },
  {
    "text": "does you shouldn't have to think about whether the internet still working if you want to watch something on TV that was the the underlying principle we",
    "start": "870310",
    "end": "876940"
  },
  {
    "text": "wanted it to be seamless and highly available and Greg or cell whose Twitter",
    "start": "876940",
    "end": "882250"
  },
  {
    "text": "handle is chaos simiiar which is a bit of a giveaway he built the first version of chaos monkey and hacked on it a few",
    "start": "882250",
    "end": "888880"
  },
  {
    "text": "times it was the first thing we installed in the cloud when we launched this is a really important thing if",
    "start": "888880",
    "end": "893920"
  },
  {
    "text": "you're launching a new application put the chaos in there first build it into your system before you install any apps",
    "start": "893920",
    "end": "899620"
  },
  {
    "text": "it's much easier to install an app on top of a system that's got chaos processes in it because you'll find the",
    "start": "899620",
    "end": "905470"
  },
  {
    "text": "bugs then then it's almost impossible to add chaos to a running system right you",
    "start": "905470",
    "end": "910480"
  },
  {
    "text": "will find it's just too fragile so it's much better to start from scratch in the cloud and build your chaos principles in",
    "start": "910480",
    "end": "917200"
  },
  {
    "text": "and then bring your applications a link later I mean it'll always help but you really get to the kind of resiliency",
    "start": "917200",
    "end": "924640"
  },
  {
    "text": "that we we need we need to build the chaos in early by 2012 Netflix I hope to create the",
    "start": "924640",
    "end": "931600"
  },
  {
    "text": "open-source program there and we did we open-source the Semien army a whole lot of chaos monkeys and things like that",
    "start": "931600",
    "end": "937420"
  },
  {
    "text": "um and Colton Andrus who is at Netflix and at Amazon before that left and",
    "start": "937420",
    "end": "944380"
  },
  {
    "text": "formed gremlin in 2016 that's where Ana works and she'll tell you more about that a bit later the cows engineering",
    "start": "944380",
    "end": "950320"
  },
  {
    "text": "book came out last year and there's also an open source project called the tech ales toolkit if you want to play around",
    "start": "950320",
    "end": "955810"
  },
  {
    "text": "a bit with some open source tools and we're starting to see it adopted more widely and we're seeing it at many more",
    "start": "955810",
    "end": "961000"
  },
  {
    "text": "conferences nowadays so just to summarize that I think of this is four",
    "start": "961000",
    "end": "967779"
  },
  {
    "text": "layers two teams and an attitude and the",
    "start": "967779",
    "end": "972850"
  },
  {
    "text": "four layers are people application switching and infrastructure so you want",
    "start": "972850",
    "end": "977950"
  },
  {
    "text": "to exercise the people with game days you want to know what to do when there's something goes wrong the application",
    "start": "977950",
    "end": "983680"
  },
  {
    "text": "layer is where your code shouldn't just fall over if it gets you know a time out",
    "start": "983680",
    "end": "988990"
  },
  {
    "text": "right there's a lot of things where you just haven't really tested it under any duress you need some switching between",
    "start": "988990",
    "end": "995440"
  },
  {
    "text": "systems so if you're trying to failover between two regions or zones or two copies of an application or two data",
    "start": "995440",
    "end": "1001949"
  },
  {
    "text": "stores you have to have a way to switch between the two that switch has to be more reliable than the things that's",
    "start": "1001949",
    "end": "1008670"
  },
  {
    "text": "switching between otherwise your overall reliability will go down this is of core principle of reliability engineering if",
    "start": "1008670",
    "end": "1015510"
  },
  {
    "text": "you're switching between two things the switch has to be an order of magnitude more reliable than the things are",
    "start": "1015510",
    "end": "1020760"
  },
  {
    "text": "switching between now if you think about your disaster recovery failure failover processes you probably test them so",
    "start": "1020760",
    "end": "1027418"
  },
  {
    "text": "infrequently that they're one of the least reliable parts of your system so this is a big problem and this is one of",
    "start": "1027419",
    "end": "1033270"
  },
  {
    "text": "the core things that chaos engineering is trying to gather is to exercise that switching so that you know that when",
    "start": "1033270",
    "end": "1038970"
  },
  {
    "text": "something goes wrong you're going to the system is going to do the right thing and at the bottom you need replicated",
    "start": "1038970",
    "end": "1044100"
  },
  {
    "text": "infrastructure and you have the chaos engineering tearing team working on this I haven't time to talk about it today",
    "start": "1044100",
    "end": "1049980"
  },
  {
    "text": "but the other team I think is interesting is a security team that some of you may have a red team in your",
    "start": "1049980",
    "end": "1056580"
  },
  {
    "text": "security security operations the red team's job is to break into your",
    "start": "1056580",
    "end": "1061890"
  },
  {
    "text": "you know they work for years that they're not going to really steal anything but their job is to test your security by trying to break in and the",
    "start": "1061890",
    "end": "1067950"
  },
  {
    "text": "chaos engineering team is testing your availability by trying to find the weak parts in your system as well right in",
    "start": "1067950",
    "end": "1073590"
  },
  {
    "text": "the same way the security team is not trying to actually cause a public breach as they do it right the cows engineering",
    "start": "1073590",
    "end": "1079169"
  },
  {
    "text": "team is also trying not to cause a public outage of your system as they do that they're just trying to find the weak spots",
    "start": "1079169",
    "end": "1086419"
  },
  {
    "text": "so failures are a system problem it's not something with the root cause of",
    "start": "1086419",
    "end": "1092280"
  },
  {
    "text": "component or human error it's its root cause as a system inadequacy it means",
    "start": "1092280",
    "end": "1098190"
  },
  {
    "text": "you don't have enough capacity in your system so when you're doing root cause analysis you should always try to drive",
    "start": "1098190",
    "end": "1103409"
  },
  {
    "text": "discussion of root cause if it starts to get into somebody did something wrong you're going in the wrong direction you",
    "start": "1103409",
    "end": "1109020"
  },
  {
    "text": "should always think about what in the system is inadequate that didn't prevent this problem from happening that way you",
    "start": "1109020",
    "end": "1115289"
  },
  {
    "text": "get a your system gets better and better you get a more and more a bust way of operating so what we're doing is we're",
    "start": "1115289",
    "end": "1125490"
  },
  {
    "text": "making hypotheses that say I think we have a safety margin let's test it to be sure right we're doing it in production",
    "start": "1125490",
    "end": "1132720"
  },
  {
    "text": "and we're doing it without causing an issue and there are some people that says I don't want to do chaos in",
    "start": "1132720",
    "end": "1137730"
  },
  {
    "text": "production I'm going to do chaos testing and test and they do resiliency engineering in production where it's",
    "start": "1137730",
    "end": "1143370"
  },
  {
    "text": "fine if you want to call it that it's fine it's the same thing we just called it something different so you didn't have kept the word chaos near production",
    "start": "1143370",
    "end": "1149880"
  },
  {
    "text": "and that makes p.m. people more comfortable I don't care what you call it as long as you are actually testing",
    "start": "1149880",
    "end": "1155220"
  },
  {
    "text": "failure modes in production right so what these are the outcomes these are",
    "start": "1155220",
    "end": "1161190"
  },
  {
    "text": "the four layers we want we want experience stuff they know how to be on call they know what to do when there's an incident they know how to get login",
    "start": "1161190",
    "end": "1168720"
  },
  {
    "text": "to the dashboards they know how to get in and modify and fix things right that's the experience stuff part they've",
    "start": "1168720",
    "end": "1174630"
  },
  {
    "text": "been through some game days you have the robust applications that don't just collapse at the first sign of anything",
    "start": "1174630",
    "end": "1180090"
  },
  {
    "text": "going wrong you got a dependable switching fabric and you've got a lot of redundancy in your service foundation",
    "start": "1180090",
    "end": "1185370"
  },
  {
    "text": "including redundancy of data sources data is in multiple places so let's look",
    "start": "1185370",
    "end": "1191940"
  },
  {
    "text": "at this in practice look at some mechanisms for AWS and for Cooper Addie's the AWS isolation model is based",
    "start": "1191940",
    "end": "1199180"
  },
  {
    "text": "on having no global network or service dependencies it's kind of inconvenient that ad herbalist doesn't have a global",
    "start": "1199180",
    "end": "1204880"
  },
  {
    "text": "network address space but it's deliberate it's because you can screw up a global network address space and if",
    "start": "1204880",
    "end": "1210130"
  },
  {
    "text": "you break something you only break it in one region at a time it's the regions",
    "start": "1210130",
    "end": "1215590"
  },
  {
    "text": "are completely independent regions are made up of availability zones zones are",
    "start": "1215590",
    "end": "1220840"
  },
  {
    "text": "10 to 100 kilometers apart that means they're in separate floodplains their own separate illiteracy electric",
    "start": "1220840",
    "end": "1226630"
  },
  {
    "text": "supplies they're on separate connections to the network but they're close enough for synchronous replications is the key",
    "start": "1226630",
    "end": "1233260"
  },
  {
    "text": "part of the model that that AWS built in the early days we want to be able to do synchronous replication into two places",
    "start": "1233260",
    "end": "1240820"
  },
  {
    "text": "that are far enough apart that they are going to be independently available you",
    "start": "1240820",
    "end": "1245860"
  },
  {
    "text": "know that flood thing where hurricane sandy floods one data center if you're using two regions on AWS",
    "start": "1245860",
    "end": "1251770"
  },
  {
    "text": "it's basically they're far enough apart that the tornado or the hurricane or the flood aren't going to hit the same place",
    "start": "1251770",
    "end": "1257430"
  },
  {
    "text": "but they're far so they've got to be close enough at Manila's few milliseconds apart which is with enough",
    "start": "1257430",
    "end": "1263050"
  },
  {
    "text": "latency to get the replication to it zones are made up of normally multiple",
    "start": "1263050",
    "end": "1268120"
  },
  {
    "text": "buildings because we're getting pretty big now and the data centers each building itself is actually broken up",
    "start": "1268120",
    "end": "1275110"
  },
  {
    "text": "internally to multiple sections so a failure in one part of one building at",
    "start": "1275110",
    "end": "1280990"
  },
  {
    "text": "AWS doesn't take out the whole building or the whole zone we have other levels of containment particularly for the",
    "start": "1280990",
    "end": "1286390"
  },
  {
    "text": "critical services I think tonight there's a keynote tonight where you'll",
    "start": "1286390",
    "end": "1292600"
  },
  {
    "text": "hear a lot more about the about how AWS infrastructure works encourage you to pay attention to that one and we have a",
    "start": "1292600",
    "end": "1300640"
  },
  {
    "text": "redundant private network because all the way around the world here's a",
    "start": "1300640",
    "end": "1305920"
  },
  {
    "text": "natural mechanism this is a neat trick you can get inside Aurora which is our replicated database and you can get in",
    "start": "1305920",
    "end": "1314350"
  },
  {
    "text": "there and because we're managing the backend for you you can't really just get in there and mess with the underlying machine so we give you these",
    "start": "1314350",
    "end": "1320800"
  },
  {
    "text": "abilities to simulate certain types of failures you can call the guten crash on master replicas fail",
    "start": "1320800",
    "end": "1326770"
  },
  {
    "text": "cause disk failure congestion so you can say what does what happens to my data database if I actually inject these",
    "start": "1326770",
    "end": "1332920"
  },
  {
    "text": "types of failures to it and it's just one example here another mechanism if",
    "start": "1332920",
    "end": "1338560"
  },
  {
    "text": "you doing multi region and you want to simulate what would happen if you if a region you know if a particular service",
    "start": "1338560",
    "end": "1344860"
  },
  {
    "text": "in a particular region is no longer available then you can actually introduce that failure at the IAM level",
    "start": "1344860",
    "end": "1350740"
  },
  {
    "text": "by at by having a permitted list of regions and dropping one from that region near dynamically so it's not",
    "start": "1350740",
    "end": "1357280"
  },
  {
    "text": "really what this region scoping thing was built for but it gives you a way to actually mess around a little bit with",
    "start": "1357280",
    "end": "1363510"
  },
  {
    "text": "multi region access and what would happen say if I want to block all s3 writes to a particular region I can go",
    "start": "1363510",
    "end": "1370990"
  },
  {
    "text": "through and modify the iam roles to take that permission away while my applications running and for kubernetes",
    "start": "1370990",
    "end": "1379780"
  },
  {
    "text": "you have all of these different regions and zones that you're running in this is mod three zones in a region and within",
    "start": "1379780",
    "end": "1387700"
  },
  {
    "text": "kubernetes you have a control plane a set of master nodes and and you have a series of nodes which are running your",
    "start": "1387700",
    "end": "1397210"
  },
  {
    "text": "containers for you so you can impact the control plane directly you get in there",
    "start": "1397210",
    "end": "1403180"
  },
  {
    "text": "and and try to say okay what happens if I lose a copy of etcetera D or or I lose one of the kubernetes you know daemons",
    "start": "1403180",
    "end": "1410770"
  },
  {
    "text": "that's running my system may be an sto daemon what there's a whole lot of containers which are there running the",
    "start": "1410770",
    "end": "1416860"
  },
  {
    "text": "various layers of systems that you're running in a kubernetes environment so what happens if you lose each of those columns it take to recover or you can go",
    "start": "1416860",
    "end": "1424300"
  },
  {
    "text": "in there and impact the actual applications as well so I'm gonna go on",
    "start": "1424300",
    "end": "1430870"
  },
  {
    "text": "now to talk about gremlin but I'm going to move over to have Ana come up and run",
    "start": "1430870",
    "end": "1437350"
  },
  {
    "text": "through what gremlin does and talk talk through how give you a few demos of how to take out a few containers right",
    "start": "1437350",
    "end": "1446250"
  },
  {
    "text": "thanks Adrian for that overview on chaos engineering it was really good so now is",
    "start": "1446820",
    "end": "1452440"
  },
  {
    "text": "the fun part I get to show you guys a little bit of breaking containers which it's always fun to say to so my name is",
    "start": "1452440",
    "end": "1458950"
  },
  {
    "text": "Medina I'm currently working gremlin and I'm doing chaos engineering there so a",
    "start": "1458950",
    "end": "1466510"
  },
  {
    "text": "little bit about gremlin where chaos engineering platform for enterprise we",
    "start": "1466510",
    "end": "1471700"
  },
  {
    "text": "offer 12 gremlins out-of-the-box if you want to do chaos engineering on experiments you can run resource attack",
    "start": "1471700",
    "end": "1478300"
  },
  {
    "text": "that includes maximizing like your disk your CPU your i/o when talking to",
    "start": "1478300",
    "end": "1484360"
  },
  {
    "text": "companies about different outages that they have there's always that talk that's like hey are this filled up and",
    "start": "1484360",
    "end": "1490270"
  },
  {
    "text": "we had this outage happen so even just thinking about small scenarios like that really makes a difference",
    "start": "1490270",
    "end": "1495940"
  },
  {
    "text": "we also offer Network attacks that includes dropping packets injecting latency block holding all traffic to a",
    "start": "1495940",
    "end": "1502960"
  },
  {
    "text": "certain port where application or messing around with DNS there's also",
    "start": "1502960",
    "end": "1508390"
  },
  {
    "text": "state level attacks and that would be killing a process or what happens if my host dies or if I kill a container and",
    "start": "1508390",
    "end": "1515560"
  },
  {
    "text": "if you're running server less we're also doing an application level fault injection that you can also implement",
    "start": "1515560",
    "end": "1521740"
  },
  {
    "text": "that way too you're gonna see our UI that I'll run through with a demo today",
    "start": "1521740",
    "end": "1527470"
  },
  {
    "text": "but if you're also interested in maybe implementing this into an internal tool that you already have in place there's a",
    "start": "1527470",
    "end": "1533080"
  },
  {
    "text": "easy to use API as well so to start off Adrianne kind of like give a good",
    "start": "1533080",
    "end": "1539950"
  },
  {
    "text": "overview of how chaos engineering has to do with experiments but you can think about it the same way that you did",
    "start": "1539950",
    "end": "1546600"
  },
  {
    "text": "experiments as a kid where you come up with the hypothesis and you start",
    "start": "1546600",
    "end": "1552010"
  },
  {
    "text": "thinking about what you actually think is gonna happen once you start doing the experiment but for chaos engineering",
    "start": "1552010",
    "end": "1558340"
  },
  {
    "text": "it's a little bit different you also have to start considering abort conditions what is going to make me stop",
    "start": "1558340",
    "end": "1564040"
  },
  {
    "text": "running this chaos engineer experiment in case something goes wrong since we're injecting failure you need to be extremely careful and in the case",
    "start": "1564040",
    "end": "1571600"
  },
  {
    "text": "that your experiment ends up with one of those abort conditions you want to go ahead and stop that experiment",
    "start": "1571600",
    "end": "1578080"
  },
  {
    "text": "immediately and then go and fix that issue and hopefully be able to run that",
    "start": "1578080",
    "end": "1583240"
  },
  {
    "text": "experiment over again and see it succeed and once an experiment successful well",
    "start": "1583240",
    "end": "1588820"
  },
  {
    "text": "you want to go and scale this engineering a scale this experiment so what does that actually",
    "start": "1588820",
    "end": "1594349"
  },
  {
    "text": "mean well why run a chaos engineer experiment on 20% of your infrastructure if you",
    "start": "1594349",
    "end": "1601249"
  },
  {
    "text": "actually don't know what this experiment is gonna do on 10% of your infrastructure so this is what we like",
    "start": "1601249",
    "end": "1607940"
  },
  {
    "text": "calling blast radius blast radius is where you're able to start really really",
    "start": "1607940",
    "end": "1612950"
  },
  {
    "text": "really small and as you see your experiment be successful see your services your applications be able to",
    "start": "1612950",
    "end": "1620179"
  },
  {
    "text": "sustain this failure that you're injecting well now you go and you can actually expand that blast radius so",
    "start": "1620179",
    "end": "1626960"
  },
  {
    "text": "this means maybe run on one hose run on one percent of your infrastructure and",
    "start": "1626960",
    "end": "1632419"
  },
  {
    "text": "you see that experiment go well do it on 24 25 percent of your hosts and things",
    "start": "1632419",
    "end": "1637879"
  },
  {
    "text": "like that but this also means thinking about where you're running these experiments so it would be awesome to",
    "start": "1637879",
    "end": "1644749"
  },
  {
    "text": "just be able to walk in on Monday and be like hey I want to do chaos engineer experiments now let's go let's do is in",
    "start": "1644749",
    "end": "1652279"
  },
  {
    "text": "production on all over fleet well you probably won't get buy-in from anyone and this actually might cost your job so",
    "start": "1652279",
    "end": "1659749"
  },
  {
    "text": "I like thinking about hey what happens if we start doing chaos engineering first on dev test QA whatever other",
    "start": "1659749",
    "end": "1667549"
  },
  {
    "text": "environment you have in place that is close to production so you still have to think about the blast radius even if",
    "start": "1667549",
    "end": "1674239"
  },
  {
    "text": "you're not necessarily doing production as well and that also includes just because you don't want to do chaos",
    "start": "1674239",
    "end": "1680210"
  },
  {
    "text": "engineering experiments to break your test environment you don't want to piss off all the developer to engineers by",
    "start": "1680210",
    "end": "1687499"
  },
  {
    "text": "breaking their stuff as well so let's see this in play so for today's",
    "start": "1687499",
    "end": "1695210"
  },
  {
    "text": "demo we're gonna be using eks where we have a cluster setup and I also decided",
    "start": "1695210",
    "end": "1701539"
  },
  {
    "text": "to run with something that you can take home and play on your own too so I ran",
    "start": "1701539",
    "end": "1706820"
  },
  {
    "text": "the eks get getting started guide and this lets you set up a guestbook application with a Redis primary and two",
    "start": "1706820",
    "end": "1714470"
  },
  {
    "text": "replicas I've also gone ahead and installed gremlin but the one thing that",
    "start": "1714470",
    "end": "1721039"
  },
  {
    "text": "you need to remember is that the number one for doing chaos engineering is that you",
    "start": "1721039",
    "end": "1726380"
  },
  {
    "text": "need monitoring and observability don't run chaos engineer experiments if you don't know how your systems are doing",
    "start": "1726380",
    "end": "1732500"
  },
  {
    "text": "currently and why run a chaos engineer experiment if you can't monitor how it's",
    "start": "1732500",
    "end": "1738320"
  },
  {
    "text": "going as the experiment goes on so that's also the cool thing with some of",
    "start": "1738320",
    "end": "1743450"
  },
  {
    "text": "the monitoring tools out there you're also able to automated that in case you",
    "start": "1743450",
    "end": "1748790"
  },
  {
    "text": "have a certain threshold a certain alert that goes off in your monitoring you're able to call your chaos engineering",
    "start": "1748790",
    "end": "1754640"
  },
  {
    "text": "platform and stop that experiment immediately so it doesn't continue causing more impact or a possible",
    "start": "1754640",
    "end": "1760640"
  },
  {
    "text": "downtime so for the first experiment I'm",
    "start": "1760640",
    "end": "1766520"
  },
  {
    "text": "gonna be doing packet loss and we're gonna be dropping some packets on the",
    "start": "1766520",
    "end": "1771560"
  },
  {
    "text": "guestbook containers my hypothesis is that when packet loss happens I expect a",
    "start": "1771560",
    "end": "1778160"
  },
  {
    "text": "de greater user experience but I'm kind of unsure what that means and I currently want to think about be really",
    "start": "1778160",
    "end": "1785390"
  },
  {
    "text": "inclusive and think about all my customers so what actually happens to those customers that are running in countries that the network is not as",
    "start": "1785390",
    "end": "1792620"
  },
  {
    "text": "reliable I want to see what they would experience using this guestbook and for",
    "start": "1792620",
    "end": "1798440"
  },
  {
    "text": "abort conditions I've decided to say I'm going to stop this experiment if I see any data loss or HTTP 500 errors there's",
    "start": "1798440",
    "end": "1806630"
  },
  {
    "text": "a whole bunch of other abort conditions I could have also put on there but keeping it simple for today so on the",
    "start": "1806630",
    "end": "1814850"
  },
  {
    "text": "right we have our simple guestbook UI application I've gone in just added some",
    "start": "1814850",
    "end": "1819860"
  },
  {
    "text": "names decided to do a reload to make sure everything is good so on the Left we have a gremlin UI we go over to the",
    "start": "1819860",
    "end": "1827270"
  },
  {
    "text": "containers gremlin plays really well with the aides of us tags so he completely imports that so I'm able to",
    "start": "1827270",
    "end": "1833090"
  },
  {
    "text": "come choose all my guestbook containers and now I get to choose the attack so",
    "start": "1833090",
    "end": "1838520"
  },
  {
    "text": "going over to the network layer I get to choose packet loss the sites who run a packet loss attack for 60 seconds and I",
    "start": "1838520",
    "end": "1845480"
  },
  {
    "text": "want to rock to drop 20 percent of the packets so the experiment has been",
    "start": "1845480",
    "end": "1850730"
  },
  {
    "text": "started it takes a little bit sometimes to start and then now I want to see what that experience would be on the UI so",
    "start": "1850730",
    "end": "1857130"
  },
  {
    "text": "I go in start putting in some names and experience starts to get a little bit",
    "start": "1857130",
    "end": "1863100"
  },
  {
    "text": "slower but still kind of usable you see the user input returned on the UI which",
    "start": "1863100",
    "end": "1869280"
  },
  {
    "text": "is good with the reload we see there's a waiting for database connection not much info but things load it up again so",
    "start": "1869280",
    "end": "1877050"
  },
  {
    "text": "things didn't completely fail which was good so thinking about bless radios now",
    "start": "1877050",
    "end": "1883080"
  },
  {
    "text": "what actually happens if I decide to increase that 20% to dropping 50% of the",
    "start": "1883080",
    "end": "1889890"
  },
  {
    "text": "packets so going ahead on the UI and going to select my guestbook containers",
    "start": "1889890",
    "end": "1898429"
  },
  {
    "text": "choosing my network gremlin for a packet loss and doing 50% dropping",
    "start": "1899750",
    "end": "1907860"
  },
  {
    "text": "of packets so kind of expect the user experience to be a little bit degraded",
    "start": "1907860",
    "end": "1912930"
  },
  {
    "text": "but I also don't know how much more degraded it will be then when I ran that 20% so start inputting some extra names",
    "start": "1912930",
    "end": "1920490"
  },
  {
    "text": "I see it's still slow kind of like what we saw previously of course that delays a lot longer and I just kind of want to",
    "start": "1920490",
    "end": "1928320"
  },
  {
    "text": "know what actually happens to my entries as I actually don't get to see them in the UI so refresh wait and I start",
    "start": "1928320",
    "end": "1935850"
  },
  {
    "text": "noticing that even their responses that weren't showing up early are actually starting to show up so there is no data",
    "start": "1935850",
    "end": "1942060"
  },
  {
    "text": "loss on the entries so if a user is able to submit information it still managed to get to Redis and things worked out",
    "start": "1942060",
    "end": "1949470"
  },
  {
    "text": "well so now I know a little bit of how that acts the results were as expected",
    "start": "1949470",
    "end": "1956640"
  },
  {
    "text": "the user had a degraded experience and that's okay but I want to make that",
    "start": "1956640",
    "end": "1962670"
  },
  {
    "text": "better and some action items I thought about is like hey maybe I can actually",
    "start": "1962670",
    "end": "1967920"
  },
  {
    "text": "have a little bit better error messaging so waiting for database connection doesn't really tell anyone much",
    "start": "1967920",
    "end": "1974040"
  },
  {
    "text": "information if you're like a non tech savvy user and at the same time kind of",
    "start": "1974040",
    "end": "1980190"
  },
  {
    "text": "like want to know what actually happens if I drop 90% of the packets what if that internet connection is so",
    "start": "1980190",
    "end": "1986490"
  },
  {
    "text": "unreliable but I want to know how that user is able to shop my store be able to browse my",
    "start": "1986490",
    "end": "1992680"
  },
  {
    "text": "website so thinking about that inclusive customer experience is a good thing for",
    "start": "1992680",
    "end": "1998770"
  },
  {
    "text": "the second experiment I want to run something very similar I want to run a latency attack",
    "start": "1998770",
    "end": "2003780"
  },
  {
    "text": "I want to inject 2000 milliseconds of latency into my guestbook containers I",
    "start": "2003780",
    "end": "2009210"
  },
  {
    "text": "also gonna run it for the default 60 seconds for this kind of like how the",
    "start": "2009210",
    "end": "2015300"
  },
  {
    "text": "packet loss I have the hypothesis that with added latency the application will",
    "start": "2015300",
    "end": "2020370"
  },
  {
    "text": "be a little bit slower but still usable by the user so the exact same experience we can of start with packet loss same",
    "start": "2020370",
    "end": "2027720"
  },
  {
    "text": "abort conditions of data loss and HTTP 500s so we go ahead and add some some",
    "start": "2027720",
    "end": "2035460"
  },
  {
    "text": "more user input we go ahead and create",
    "start": "2035460",
    "end": "2042270"
  },
  {
    "text": "the attack go over to containers lookup or guest pick containers over again be able to select them all and choose the",
    "start": "2042270",
    "end": "2050070"
  },
  {
    "text": "latency gremlin we go over and we decide to inject 2000 milliseconds of latency",
    "start": "2050070",
    "end": "2056960"
  },
  {
    "text": "and we get to start that attack and now I can go over to the UI and actually see",
    "start": "2056960",
    "end": "2063179"
  },
  {
    "text": "what goes on so start inputting information see a delay somewhat expected but you could",
    "start": "2063179",
    "end": "2070950"
  },
  {
    "text": "kind of see like it's kind of like giving you like I'm processing but not telling you much and you still don't see",
    "start": "2070950",
    "end": "2076648"
  },
  {
    "text": "the entries after like 1 or 2 seconds so this can actually lead to a user doing a",
    "start": "2076649",
    "end": "2081960"
  },
  {
    "text": "double entry or if you're an e-commerce site they can actually be making a double purchase and with those purchases",
    "start": "2081960",
    "end": "2088500"
  },
  {
    "text": "the credit card transactions also get started so you also might be getting a customer quite mad so I actually just",
    "start": "2088500",
    "end": "2093720"
  },
  {
    "text": "want to go ahead and stop this experiment I didn't think that like didn't think that was actually meeting",
    "start": "2093720",
    "end": "2100740"
  },
  {
    "text": "the SLA as low I had in place so I can easily just go ahead and stop that and",
    "start": "2100740",
    "end": "2106490"
  },
  {
    "text": "kind of us expected that application well actually not to expect it the",
    "start": "2106490",
    "end": "2111930"
  },
  {
    "text": "application did not give the user usable experience they weren't able to necessarily get a UI that responds back",
    "start": "2111930",
    "end": "2119520"
  },
  {
    "text": "to it as they were interacting with it as I would like so thinking of other action items that I",
    "start": "2119520",
    "end": "2125510"
  },
  {
    "text": "can come up with apart from the ones that I also came up with packet loss well what if I actually insert like",
    "start": "2125510",
    "end": "2131359"
  },
  {
    "text": "another caching layer and be able to display something on the UI while this",
    "start": "2131359",
    "end": "2138050"
  },
  {
    "text": "is the latency is currently going on so that way the user is able to see some information rushes just seeing like an",
    "start": "2138050",
    "end": "2144470"
  },
  {
    "text": "empty page that says waiting for database connection so for some companies this means being able to",
    "start": "2144470",
    "end": "2150410"
  },
  {
    "text": "degrade the experience as you see some packet loss happens some latency happen be able to not necessarily show like",
    "start": "2150410",
    "end": "2157460"
  },
  {
    "text": "that continue watching now or these are the top movies so think about the inclusive experience for everyone so for",
    "start": "2157460",
    "end": "2165349"
  },
  {
    "text": "the next experiment I want to shut down a container and that's going to be the",
    "start": "2165349",
    "end": "2170599"
  },
  {
    "text": "reddest primary container so it actually happens if I kill my rightist primary so",
    "start": "2170599",
    "end": "2175700"
  },
  {
    "text": "I think if I kill the rodas primary the Redis replica will just get promoted to",
    "start": "2175700",
    "end": "2181040"
  },
  {
    "text": "primary and things will continue like running smoothly I think that I'm going",
    "start": "2181040",
    "end": "2186740"
  },
  {
    "text": "to have the same abort conditions of data loss and HTTP five hundreds so let's see that in play we're gonna go",
    "start": "2186740",
    "end": "2194060"
  },
  {
    "text": "ahead put some user input again and then",
    "start": "2194060",
    "end": "2201400"
  },
  {
    "text": "go over to gremlin create that talk it's going to be a state attack we're able to",
    "start": "2202390",
    "end": "2208099"
  },
  {
    "text": "select now the Redis we look the tax we see the mass the master and then like the two slaves so primary and replicas",
    "start": "2208099",
    "end": "2215240"
  },
  {
    "text": "and the shutdown we want to make that delay zero so it just happens",
    "start": "2215240",
    "end": "2220250"
  },
  {
    "text": "automatically for a container doing the reboot doesn't do much since the kubernetes brings it back up which is",
    "start": "2220250",
    "end": "2226250"
  },
  {
    "text": "actually pretty cool and now we get to go to the guestbook and let's put some",
    "start": "2226250",
    "end": "2232970"
  },
  {
    "text": "user input see what goes on oh we just actually lost the information that we",
    "start": "2232970",
    "end": "2239690"
  },
  {
    "text": "had which is not necessarily anything you would ever want to have data loss is",
    "start": "2239690",
    "end": "2245210"
  },
  {
    "text": "extremely expensive for any type of company whether you're a bank ecommerce or just hosting any user information so",
    "start": "2245210",
    "end": "2253670"
  },
  {
    "text": "being able to actually test something out of the box being able to play with it is actually like one of the cool things with Chaos",
    "start": "2253670",
    "end": "2259670"
  },
  {
    "text": "engineering so the results were actually unexpected the Redis replica did not get",
    "start": "2259670",
    "end": "2265730"
  },
  {
    "text": "promoted to primary and data loss has happened so my action items of course would be like hey let me go look into",
    "start": "2265730",
    "end": "2272060"
  },
  {
    "text": "why this Redis replica did not get promoted into primary or what actually went on so when I decided to look into",
    "start": "2272060",
    "end": "2278870"
  },
  {
    "text": "this well we see that the information for the Redis replication is actually",
    "start": "2278870",
    "end": "2284420"
  },
  {
    "text": "set up properly we look on the Left we have our primary we see that they have two replicas and we look at a replica",
    "start": "2284420",
    "end": "2291530"
  },
  {
    "text": "and it has a primary so in theory everything should have been working fine but with more digging on Redis doesn't",
    "start": "2291530",
    "end": "2299120"
  },
  {
    "text": "provide that out of the box for you is not one of those things that you can automatically get that but how do you",
    "start": "2299120",
    "end": "2304460"
  },
  {
    "text": "know that when you're actually just looking at technologies you'll want to implement to your company you don't until you actually are able to inject",
    "start": "2304460",
    "end": "2311690"
  },
  {
    "text": "failure so that's where chaos engineering is really cool so for a redditor specifically for",
    "start": "2311690",
    "end": "2318140"
  },
  {
    "text": "kubernetes there's various ways you can do it you can do it like via helm Redis",
    "start": "2318140",
    "end": "2323540"
  },
  {
    "text": "also has like Sentinel that you can also like just set up that way and some users might be like hey you can also maybe",
    "start": "2323540",
    "end": "2329810"
  },
  {
    "text": "like manually do it but for this specific example if you go into the",
    "start": "2329810",
    "end": "2336080"
  },
  {
    "text": "primary like if you go into primary after we ran this experiment you saw that all the entries were gone and then",
    "start": "2336080",
    "end": "2342710"
  },
  {
    "text": "I was like hey maybe the replica has my entries but nope because kubernetes brought that primary",
    "start": "2342710",
    "end": "2348680"
  },
  {
    "text": "container back up and when it brought the primary container back up the two replicas decided to look at that primary",
    "start": "2348680",
    "end": "2354830"
  },
  {
    "text": "container and wipe all the information so that resiliency or anything with a",
    "start": "2354830",
    "end": "2359960"
  },
  {
    "text": "replica just wasn't there anymore and as an engineer that just kind of sucked so",
    "start": "2359960",
    "end": "2365570"
  },
  {
    "text": "it would be cool to start seeing more projects and more companies start thinking about those things out of the box and that's the cool thing you get to",
    "start": "2365570",
    "end": "2373640"
  },
  {
    "text": "battle test things with chaos engineering so Adrien talked about the chaos conference talk like the chaos",
    "start": "2373640",
    "end": "2380360"
  },
  {
    "text": "conference that happened in San Francisco for that one I decided to with my coworker we decided to put eks at",
    "start": "2380360",
    "end": "2386720"
  },
  {
    "text": "another cloud provider kubernetes just to battle like hey i'm company trying to choose where I want to",
    "start": "2386720",
    "end": "2393380"
  },
  {
    "text": "deploy kubernetes and I want to cloud to actually manage that part of it so we",
    "start": "2393380",
    "end": "2398390"
  },
  {
    "text": "just put them side-by-side decided to shut down the kubernetes - per container",
    "start": "2398390",
    "end": "2403880"
  },
  {
    "text": "and it's like yeah everything's gonna come back up kubernetes promises that everything's gonna go well well that",
    "start": "2403880",
    "end": "2409970"
  },
  {
    "text": "actually wasn't the case so being able to know that right before you start developing on top of that is highly",
    "start": "2409970",
    "end": "2417470"
  },
  {
    "text": "critical it's thing is good to think about resiliency just from the start a",
    "start": "2417470",
    "end": "2424150"
  },
  {
    "text": "gremlin we're trying to help the world create a more resilient internet so with that we've started creating a chaos",
    "start": "2425050",
    "end": "2432230"
  },
  {
    "text": "engineering community so this includes a really cool slack that has over 2,000",
    "start": "2432230",
    "end": "2437360"
  },
  {
    "text": "folks all over the world from companies like Amazon Facebook Google Twitter to smaller startups some of them have",
    "start": "2437360",
    "end": "2443780"
  },
  {
    "text": "actually started running chaos engineering and production they share their successes their failures some of",
    "start": "2443780",
    "end": "2450200"
  },
  {
    "text": "them are trying to get buy-in from upper management and we have discussions about that there's also even people that are like",
    "start": "2450200",
    "end": "2456440"
  },
  {
    "text": "hey I've never heard of DevOps or sre but I'm an engineer but I want to get into this space can you teach me how to",
    "start": "2456440",
    "end": "2462920"
  },
  {
    "text": "get started so that's pretty cool - and then we've also been putting out tutorials in the DevOps essary space",
    "start": "2462920",
    "end": "2470060"
  },
  {
    "text": "over a gremlin comm slash community some of it includes how to set up a high severity incident management side your",
    "start": "2470060",
    "end": "2476750"
  },
  {
    "text": "company how to get buy-in from your manager to do chaos engineering - one of our latest once that's deploying gremlin",
    "start": "2476750",
    "end": "2483950"
  },
  {
    "text": "on ECS and being able to like run something on that if you're interested in learning more about gremlin I put the",
    "start": "2483950",
    "end": "2489860"
  },
  {
    "text": "link down below to get started with an enterprise trial that you're able to take home be able to play with tonight",
    "start": "2489860",
    "end": "2496220"
  },
  {
    "text": "and maybe even also deploy the guestbook application and actually see how that actually happens and maybe you have more",
    "start": "2496220",
    "end": "2503480"
  },
  {
    "text": "free time and decide to fix the Redis replication issue and then run the experiment actually see that your fakes",
    "start": "2503480",
    "end": "2511220"
  },
  {
    "text": "actually made it a lot more reliable I'm going to turn it back to Adrian to talk about the future of chaos engineering",
    "start": "2511220",
    "end": "2516920"
  },
  {
    "text": "but I'll be back on stage out there",
    "start": "2516920",
    "end": "2520540"
  },
  {
    "text": "okay that's great so I'm gonna talk a bit about some future directions and hopefully we'll have a few minutes at",
    "start": "2526190",
    "end": "2532380"
  },
  {
    "text": "the end we both come back and we'll to take some Q&A so observability of",
    "start": "2532380",
    "end": "2538350"
  },
  {
    "text": "systems right how much how well can you tell what they're doing something about epidemic failure modes I think this is",
    "start": "2538350",
    "end": "2545010"
  },
  {
    "text": "an area that people don't necessarily get understand so I'm going to talk a little bit about that and then automation and how we get to the future",
    "start": "2545010",
    "end": "2553620"
  },
  {
    "text": "maybe of continuously running our chaos experiments so observability and there's",
    "start": "2553620",
    "end": "2560520"
  },
  {
    "text": "actually a precise definition of observability it comes from it's a control and control theory term from the",
    "start": "2560520",
    "end": "2567450"
  },
  {
    "text": "early 1960s about its first describe basically if something is observable it means by looking at the inputs and",
    "start": "2567450",
    "end": "2573990"
  },
  {
    "text": "outputs you can you can basically predict what it's going to do okay you",
    "start": "2573990",
    "end": "2579660"
  },
  {
    "text": "can there's there's there's no hidden internal state if you ask it to do the same thing twice it'll do the same thing",
    "start": "2579660",
    "end": "2585300"
  },
  {
    "text": "the same way twice so what that means is if you're trying to take a monolithic system and you log",
    "start": "2585300",
    "end": "2590850"
  },
  {
    "text": "as much information as possible you can find about its internal state you're trying to understand why when you ask it",
    "start": "2590850",
    "end": "2596640"
  },
  {
    "text": "to do three things it does them differently because the logging will tell you what the internal state is if",
    "start": "2596640",
    "end": "2603960"
  },
  {
    "text": "you have tracing now you can see the flow within your model if all the different order that things are happening and you get more you can it's",
    "start": "2603960",
    "end": "2610530"
  },
  {
    "text": "now easy to understand how it's going to behave now if you have a micro service that does one thing and typically it",
    "start": "2610530",
    "end": "2617970"
  },
  {
    "text": "just you just ask it to do it ten times it'll do the same thing ten times given the same input you should get the same",
    "start": "2617970",
    "end": "2623730"
  },
  {
    "text": "output now some micro services have internal state they're a little more complex so you know you need to have some",
    "start": "2623730",
    "end": "2629790"
  },
  {
    "text": "logging that's going on to tell you what's happening in that micro service but if you look at lambda functions AWS",
    "start": "2629790",
    "end": "2636960"
  },
  {
    "text": "lambda functions they typically have no side effects right and you could maybe construct one that that's you know it's",
    "start": "2636960",
    "end": "2644070"
  },
  {
    "text": "not normal to create one that has some side effects but a functional programming the idea of functional",
    "start": "2644070",
    "end": "2649530"
  },
  {
    "text": "programming is you have no side effects so if you call a lambda function hundred times with the same input you",
    "start": "2649530",
    "end": "2654820"
  },
  {
    "text": "should always get the same output and you don't need as much internal logging it will look what you then end up",
    "start": "2654820",
    "end": "2660490"
  },
  {
    "text": "looking at is the calling patterns between your lambda functions which you can use something like x-ray to track or",
    "start": "2660490",
    "end": "2666130"
  },
  {
    "text": "IO pipe something like that to track across your different functions so think about the observe ability and how that's",
    "start": "2666130",
    "end": "2672610"
  },
  {
    "text": "changing let's look at different kinds of failures most people end up just for",
    "start": "2672610",
    "end": "2679870"
  },
  {
    "text": "simplicity assume let's assume one thing goes wrong at a time and I can deal with that okay I'm good well what happens if",
    "start": "2679870",
    "end": "2685480"
  },
  {
    "text": "two things happen at once well then you throw your hands up there's just too many permutations of two different",
    "start": "2685480",
    "end": "2691000"
  },
  {
    "text": "things going on at once for you to deal with so the common assumption is let's just try and deal with one thing at a",
    "start": "2691000",
    "end": "2696550"
  },
  {
    "text": "time but quite often there are these correlated failures where this thing",
    "start": "2696550",
    "end": "2701710"
  },
  {
    "text": "breaks it will always cause this thing next to it to break and this thing next to it so what happens when you have",
    "start": "2701710",
    "end": "2707530"
  },
  {
    "text": "these correlated knock-on effects and you can you have to think about modeling those a bit more carefully and then",
    "start": "2707530",
    "end": "2714010"
  },
  {
    "text": "finally there's this problem with epidemic failures where everything fails at once and it's people don't talk about this that this much so I'm gonna spend a",
    "start": "2714010",
    "end": "2720700"
  },
  {
    "text": "few minutes talking about it here and remember the Linux leap second buck it's",
    "start": "2720700",
    "end": "2725920"
  },
  {
    "text": "like few years ago but hey let's put a leap second in because the world's turning a slightly the wrong speed or",
    "start": "2725920",
    "end": "2730930"
  },
  {
    "text": "whatever it is you know they every now and again they put a leap second in and there was a particular version of Linux",
    "start": "2730930",
    "end": "2736360"
  },
  {
    "text": "where it would just stop and if you happen to be running the wrong version of Linux your website just stopped and",
    "start": "2736360",
    "end": "2743680"
  },
  {
    "text": "your system stopped and there were several several people had a very bad day that day because you know a large",
    "start": "2743680",
    "end": "2749920"
  },
  {
    "text": "amounts their infrastructure stopped so this would be probably about six seven years ago I remember you know I think I",
    "start": "2749920",
    "end": "2758110"
  },
  {
    "text": "was still at Netflix some of our machines were so any other kernel we were running was so old that they hadn't got the problem yet and some of them",
    "start": "2758110",
    "end": "2764170"
  },
  {
    "text": "were new enough that we did that we got past the problem we lost a few EMR Hadoop clusters somewhere along the way",
    "start": "2764170",
    "end": "2769360"
  },
  {
    "text": "of just trying to keep track of everything we had we were in the middle of a major sort of kernel level update",
    "start": "2769360",
    "end": "2775840"
  },
  {
    "text": "at that time we hadn't finished getting it done so that's one problem back in the 1990s I used to work for son and we",
    "start": "2775840",
    "end": "2782620"
  },
  {
    "text": "ship Hardware where there was a where every now and again one of the bits in the cache would flip and the machine would crash we found this out",
    "start": "2782620",
    "end": "2788979"
  },
  {
    "text": "after we shipped rather a lot of hardware that wasn't a good good experience if you have a cloud zone or a",
    "start": "2788979",
    "end": "2795339"
  },
  {
    "text": "region failure that's also an epidemic example it doesn't matter what you were running if that zone goes offline then",
    "start": "2795339",
    "end": "2801489"
  },
  {
    "text": "you'll everything in that zone is gone that's an epidemic failure DNS failure",
    "start": "2801489",
    "end": "2806709"
  },
  {
    "text": "as I mentioned earlier if just forgetting to renew your DNS or all kinds of DNS problems it's actually one",
    "start": "2806709",
    "end": "2811930"
  },
  {
    "text": "of these probably the soft underbelly of most systems if you can get at the dns for a system you can break it it's",
    "start": "2811930",
    "end": "2817959"
  },
  {
    "text": "pretty easy to do and then there's the whole security configuration you leave",
    "start": "2817959",
    "end": "2824380"
  },
  {
    "text": "off a semicolon in some file and deploy it globally and then watch everything collapsed that kind of thing we've seen",
    "start": "2824380",
    "end": "2830439"
  },
  {
    "text": "a few examples of that happen over the years someone I see if somebody was",
    "start": "2830439",
    "end": "2835660"
  },
  {
    "text": "tweeting a talk I gave you years ago and they said to fail is human but to fail and deploy it globally simultaneously as",
    "start": "2835660",
    "end": "2842140"
  },
  {
    "text": "DevOps it was something like that so be careful what you doing with your",
    "start": "2842140",
    "end": "2847269"
  },
  {
    "text": "automation right so when you have an epoch you need quarantine right if you",
    "start": "2847269",
    "end": "2854199"
  },
  {
    "text": "ever travel and there's an epidemic like the SARS epidemic you see people wearing face masks on planes and then if you go",
    "start": "2854199",
    "end": "2860410"
  },
  {
    "text": "particularly in Asia as you come through the airports they have scanners which are looking for people with high temperatures that",
    "start": "2860410",
    "end": "2866650"
  },
  {
    "text": "they're doing infrared scanning of people coming in and if you're running a temperature they'll pull you aside because they want to make sure that they",
    "start": "2866650",
    "end": "2872319"
  },
  {
    "text": "don't let the sort of flu epidemics spread through their airports so quarantine is an interesting point so",
    "start": "2872319",
    "end": "2878410"
  },
  {
    "text": "how do you quarantine these things well one way to quarantine a Linux kernel bug",
    "start": "2878410",
    "end": "2883630"
  },
  {
    "text": "maybe is to run on other operating systems as well maybe you're deploying your java application you could deploy",
    "start": "2883630",
    "end": "2889329"
  },
  {
    "text": "it on Windows it should still work right so maybe you figure out as a you know backup just in case anything goes wrong",
    "start": "2889329",
    "end": "2896559"
  },
  {
    "text": "with Linux what's the code base that's most different from Linux that still runs most of the things you want in it's",
    "start": "2896559",
    "end": "2902199"
  },
  {
    "text": "probably windows so maybe you you can run Windows as a backup for some of your almost critical applications so to think",
    "start": "2902199",
    "end": "2909039"
  },
  {
    "text": "about that or maybe BSD or something or a totally different versions of Linux but you want something with a more dive",
    "start": "2909039",
    "end": "2914789"
  },
  {
    "text": "codebase variety of cpu implementations if you're running if you were completely",
    "start": "2914789",
    "end": "2920099"
  },
  {
    "text": "homogeneous you have exactly the same type of CPU the same Intel chip the same whatever chip if there's a problem with",
    "start": "2920099",
    "end": "2926219"
  },
  {
    "text": "one of those then everything goes at once right cloud zones you should be",
    "start": "2926219",
    "end": "2931349"
  },
  {
    "text": "using cross zone across region replication to make sure you're not dependent on any one zone and then DNS",
    "start": "2931349",
    "end": "2936929"
  },
  {
    "text": "you it's good it's good practice to have more than one DNS provider so that you can failover providers and also to have",
    "start": "2936929",
    "end": "2944609"
  },
  {
    "text": "multiple domains so that you're not running everything through a single domain you have a domains for production",
    "start": "2944609",
    "end": "2950039"
  },
  {
    "text": "maybe as separate from your domain for your corporate email things like that so there's ways you can spread the risk around and then limit the scope of",
    "start": "2950039",
    "end": "2957689"
  },
  {
    "text": "deployments the way that AWS does its deployments is a zone at a time a region",
    "start": "2957689",
    "end": "2963329"
  },
  {
    "text": "at a time stand back does that look at okay will bro it roll it out so anything that looks like a security change or a",
    "start": "2963329",
    "end": "2969689"
  },
  {
    "text": "network change is deployed very very carefully and you walk them through now its staging that manually can be a pain",
    "start": "2969689",
    "end": "2976319"
  },
  {
    "text": "there are some products out there there are some services out there that will help you do that so roll your your your workloads across",
    "start": "2976319",
    "end": "2983459"
  },
  {
    "text": "your your production infrastructure using things like canary testing and",
    "start": "2983459",
    "end": "2989630"
  },
  {
    "text": "accuse code pipeline or spinnaker of something like that",
    "start": "2989630",
    "end": "2994909"
  },
  {
    "text": "so you've got to manage it to contain the epidemic and the nice thing about",
    "start": "2994909",
    "end": "3000529"
  },
  {
    "text": "this though is cloud now gives you the automation that's leading to chaos engineering one of the reasons why",
    "start": "3000529",
    "end": "3006289"
  },
  {
    "text": "disaster recovery has been so hard in the past is that the disaster recovery",
    "start": "3006289",
    "end": "3011449"
  },
  {
    "text": "failover to the other datacenter you never quite sure that that data center is in the right state to run this",
    "start": "3011449",
    "end": "3017179"
  },
  {
    "text": "workload that you've got here so if you can I'm going to fail it over and I think everything's in the right state but it turns out how we've got a",
    "start": "3017179",
    "end": "3023839"
  },
  {
    "text": "down reaffirm we're here and this networks not quite in the right state and they drift independently the thing about cloud is it's much",
    "start": "3023839",
    "end": "3030890"
  },
  {
    "text": "easier to contain that basically the the AP is and the services in two regions or",
    "start": "3030890",
    "end": "3036409"
  },
  {
    "text": "two zones are effectively identical and you can run cloud watch logs and things",
    "start": "3036409",
    "end": "3041749"
  },
  {
    "text": "like that to basically be sure that you've got exactly the same configuration everywhere so that",
    "start": "3041749",
    "end": "3048230"
  },
  {
    "text": "automation is one of the things that making Y is K that sort of an answer to why is chaos engineering happening now",
    "start": "3048230",
    "end": "3053750"
  },
  {
    "text": "and I think it's because cloud is giving us the ability to automate disaster recovery in a low-cost repeatable",
    "start": "3053750",
    "end": "3060740"
  },
  {
    "text": "product I zabaleta than having disaster recovery be an extremely custom expensive and built bespoke thing which",
    "start": "3060740",
    "end": "3068930"
  },
  {
    "text": "you have to recreate and everyone's scared to test right so that's it's this level of automation consistency that",
    "start": "3068930",
    "end": "3074840"
  },
  {
    "text": "really makes it possible and I think we're going to as we see these data centers migrate to cloud we're going to",
    "start": "3074840",
    "end": "3080630"
  },
  {
    "text": "start seeing cows engineering replacing the manual disaster recovery processes that we've had in the past and it's",
    "start": "3080630",
    "end": "3087680"
  },
  {
    "text": "going to move from being a scary annual experience that's provoked by the auditors turning up to something that",
    "start": "3087680",
    "end": "3093470"
  },
  {
    "text": "you do continuously in your production systems you know I left Netflix five",
    "start": "3093470",
    "end": "3098480"
  },
  {
    "text": "years ago but they and we were doing quarterly tests at that time they now do it every few weeks and they've automated",
    "start": "3098480",
    "end": "3105410"
  },
  {
    "text": "their systems so they do zone and region level testing and lots and lots of",
    "start": "3105410",
    "end": "3110600"
  },
  {
    "text": "internal tests thousands of tests a day are running continuously you'll probably hear some talks about this later this",
    "start": "3110600",
    "end": "3116570"
  },
  {
    "text": "week but there's a huge amount of work goes into getting that done and it's",
    "start": "3116570",
    "end": "3121670"
  },
  {
    "text": "been years of work for now flicks to get to that point so that's kind of like a existence proof it's possible to get",
    "start": "3121670",
    "end": "3127610"
  },
  {
    "text": "there most people are at much earlier stage but I think this is the trend we're looking at and the more critical",
    "start": "3127610",
    "end": "3132950"
  },
  {
    "text": "your application the more interested in figuring out how we can build the right products and services from AWS and our",
    "start": "3132950",
    "end": "3139910"
  },
  {
    "text": "partners like gremlin how can we help you build systems that are more resilient if you're building if you're",
    "start": "3139910",
    "end": "3145580"
  },
  {
    "text": "working on something right now that is absolutely critical health safety or",
    "start": "3145580",
    "end": "3151600"
  },
  {
    "text": "business critical talk to us particularly let me know I'm interested in these workloads and figuring out do",
    "start": "3151600",
    "end": "3158030"
  },
  {
    "text": "we have all the right things to support you in it so thanks for that and bring",
    "start": "3158030",
    "end": "3163070"
  },
  {
    "text": "Anna back up we have a few minutes left for some questions",
    "start": "3163070",
    "end": "3167770"
  },
  {
    "text": "[Applause]",
    "start": "3169510",
    "end": "3176320"
  },
  {
    "text": "any QA everyone just desperate to get out and get some more coffee time to do",
    "start": "3176320",
    "end": "3182210"
  },
  {
    "text": "a line for like the next container talk they said it's good to have two presenters by the way this is a highly resilient system if one of us didn't",
    "start": "3182210",
    "end": "3188120"
  },
  {
    "text": "turn up the other one could have taken effects did you see any any comments on Twitter - no just someone asked about",
    "start": "3188120",
    "end": "3195830"
  },
  {
    "text": "the books and got them the list of books yeah you mentioned earlier yeah I mean if you want like I said if you want to",
    "start": "3195830",
    "end": "3202430"
  },
  {
    "text": "find these talks in more detail particularly if you want more detail on my talk I have about twice as much content in the talk I did at the cows",
    "start": "3202430",
    "end": "3209360"
  },
  {
    "text": "conference which I think there's links to that from the gremlin site yeah",
    "start": "3209360",
    "end": "3214660"
  },
  {
    "text": "they're always on YouTube you can look up koskoff like Adam Adina Adrienne and you can load up the videos there and I'm",
    "start": "3214660",
    "end": "3222410"
  },
  {
    "text": "also around the rest of the week if you have any questions on chaos engineering or gremlin or just having fun breaking",
    "start": "3222410",
    "end": "3229520"
  },
  {
    "text": "containers okay well thanks everybody appreciate it have a great week [Applause]",
    "start": "3229520",
    "end": "3237249"
  }
]