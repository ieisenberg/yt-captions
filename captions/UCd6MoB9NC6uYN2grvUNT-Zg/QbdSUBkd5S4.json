[
  {
    "start": "0",
    "end": "16000"
  },
  {
    "text": "so thanks for coming my name is Massimo Leffler I will be running this session which is",
    "start": "930",
    "end": "7649"
  },
  {
    "text": "called running containers on AWS and we'll have Nicolas joining on stage later on to discuss what they are doing",
    "start": "7649",
    "end": "14070"
  },
  {
    "text": "with the stuff that I'm going to talk about this is a little bit about me the",
    "start": "14070",
    "end": "20220"
  },
  {
    "start": "16000",
    "end": "39000"
  },
  {
    "text": "reason that I have this slide is other than giving you my history is because I",
    "start": "20220",
    "end": "25560"
  },
  {
    "text": "have contacts on this line so when you will see and you will get this large you",
    "start": "25560",
    "end": "31199"
  },
  {
    "text": "will have my contacts but you can see them over here before we",
    "start": "31199",
    "end": "36270"
  },
  {
    "text": "start and we get into into the weeds of the presentation a couple of sorts of",
    "start": "36270",
    "end": "43320"
  },
  {
    "start": "39000",
    "end": "75000"
  },
  {
    "text": "announcements this is a 200 level session so we're now going to cover the",
    "start": "43320",
    "end": "48510"
  },
  {
    "text": "very basic of darker and container images so we're going to assume that you",
    "start": "48510",
    "end": "53699"
  },
  {
    "text": "know some of this stuff I don't get to spend a lot of time on these the other",
    "start": "53699",
    "end": "59370"
  },
  {
    "text": "thing is being at 200 level session it tends to be more broad than deep on any",
    "start": "59370",
    "end": "64739"
  },
  {
    "text": "single technology so we will touch a number of different services in the compute space but we're not going very",
    "start": "64739",
    "end": "72180"
  },
  {
    "text": "deep in any of them okay the second thing that I wanted to say is that given",
    "start": "72180",
    "end": "80130"
  },
  {
    "start": "75000",
    "end": "139000"
  },
  {
    "text": "it's a level 200 session and it's very packed I don't really have time to do",
    "start": "80130",
    "end": "86100"
  },
  {
    "text": "demos of the different technologies but I what I wanted to do is I wanted to",
    "start": "86100",
    "end": "91159"
  },
  {
    "text": "leave behind something that was more actionable for people to email tasks",
    "start": "91159",
    "end": "96540"
  },
  {
    "text": "what what we're doing so throughout the presentation I'm using this demo app",
    "start": "96540",
    "end": "102060"
  },
  {
    "text": "that I have on github and you can see the address over here where I'm going to",
    "start": "102060",
    "end": "107939"
  },
  {
    "text": "show you how that I have the deploy on some of those technologies right so it's not a demo but hopefully it will give",
    "start": "107939",
    "end": "115710"
  },
  {
    "text": "you some practical feeling about what happens when you",
    "start": "115710",
    "end": "121659"
  },
  {
    "text": "deploy this application this application is not like a micro service kind of thing it's more a regular application",
    "start": "121659",
    "end": "128600"
  },
  {
    "text": "with a front-end application layer back-end and the radius cache nothing",
    "start": "128600",
    "end": "134239"
  },
  {
    "text": "big but it will have hopefully try to understand the values our option you",
    "start": "134239",
    "end": "141080"
  },
  {
    "start": "139000",
    "end": "241000"
  },
  {
    "text": "heard Matt government talking about the computer options this morning I'm not going to spend too much time describing",
    "start": "141080",
    "end": "148640"
  },
  {
    "text": "them here but basically have ec2 instances containers and server less or",
    "start": "148640",
    "end": "155180"
  },
  {
    "text": "lambda if you will another way to look at these is through",
    "start": "155180",
    "end": "161810"
  },
  {
    "text": "the lens of the layers that you would use in this case right so at the very",
    "start": "161810",
    "end": "167720"
  },
  {
    "text": "bottom there are instances that pretty much back everything that we do in the end there are then there is the",
    "start": "167720",
    "end": "173900"
  },
  {
    "text": "container abstraction and eventually there is the lambda abstraction I just want to point out that there are servers",
    "start": "173900",
    "end": "180170"
  },
  {
    "text": "in server less as you can see on this slide because they need those functions",
    "start": "180170",
    "end": "185870"
  },
  {
    "text": "they need to run on something but that's pretty much what I wanted to call out",
    "start": "185870",
    "end": "193070"
  },
  {
    "text": "the other thing that is important as we go through the presentation is that you keep in mind this notion of when we will",
    "start": "193070",
    "end": "200810"
  },
  {
    "text": "focus on the container stuff that you will keep in mind this notion of the control plane and the data plane right",
    "start": "200810",
    "end": "207109"
  },
  {
    "text": "we will come back with this notion and it's very important so that we can position the services in the proper way",
    "start": "207109",
    "end": "214340"
  },
  {
    "text": "as we go through the presentation basically in the container space the Contra plane is what you talk to to",
    "start": "214340",
    "end": "221870"
  },
  {
    "text": "deploy containers you tell the Contra plane to deploy n number of containers",
    "start": "221870",
    "end": "226910"
  },
  {
    "text": "shaped in a various way and the data plane is where those containers are going to land think of it the data plane",
    "start": "226910",
    "end": "234079"
  },
  {
    "text": "as where the CPU and memory capacity is coming from okay very important to keep",
    "start": "234079",
    "end": "239840"
  },
  {
    "text": "in mind that one so if you if you go a",
    "start": "239840",
    "end": "245930"
  },
  {
    "start": "241000",
    "end": "316000"
  },
  {
    "text": "little bit deeper into these and I took like the don't know Jas example just to",
    "start": "245930",
    "end": "251840"
  },
  {
    "text": "be being able to put on a slide that specific framework this is what we're",
    "start": "251840",
    "end": "257420"
  },
  {
    "text": "going to see throughout the presentation we're not going to talk too much about ec2 we're not going to talk too much",
    "start": "257420",
    "end": "262850"
  },
  {
    "text": "about lambda because this session is very much focused on containers so we're",
    "start": "262850",
    "end": "267890"
  },
  {
    "text": "we're going to spend the majority of the next 20 25 minutes before Nikolas join us on stage talking talking about the",
    "start": "267890",
    "end": "276500"
  },
  {
    "text": "containers services as you can see here and as Matt alluded to in the keynote",
    "start": "276500",
    "end": "283310"
  },
  {
    "text": "this morning there are really two main buckets that we usually talk about with customers",
    "start": "283310",
    "end": "290120"
  },
  {
    "text": "when it comes to containers ECS and eks okay and this is what we're going to discuss going forward a couple",
    "start": "290120",
    "end": "302270"
  },
  {
    "text": "of things that I wanted to call out because when we talk about this stuff to customers there are new to these",
    "start": "302270",
    "end": "308600"
  },
  {
    "text": "technologies they tend to come up and say you know how do I choose one abstraction versus the other right and",
    "start": "308600",
    "end": "315950"
  },
  {
    "text": "what we usually talk about is there are a couple of vectors right for which a",
    "start": "315950",
    "end": "321380"
  },
  {
    "start": "316000",
    "end": "439000"
  },
  {
    "text": "customer may choose one abstraction versus in the other the the first one is speed so think about your you have an",
    "start": "321380",
    "end": "330200"
  },
  {
    "text": "application you have deploy your application and this is the demand that users are posing on that application",
    "start": "330200",
    "end": "336290"
  },
  {
    "text": "over time speed is if you think about the reaction time that the platform has",
    "start": "336290",
    "end": "342350"
  },
  {
    "text": "to these variants of workloads in your in your in your account you can think of",
    "start": "342350",
    "end": "348860"
  },
  {
    "text": "ec2 as being DS reacting right so you can think of ec2 maybe in a auto scaling",
    "start": "348860",
    "end": "356210"
  },
  {
    "text": "group reacting like this you can think of if of a container type of deployment",
    "start": "356210",
    "end": "362090"
  },
  {
    "text": "reacting like this specifically when we talk about Fargate that we're going to touch very briefly upon and if you think",
    "start": "362090",
    "end": "370940"
  },
  {
    "text": "about lambda lambda is really the technology that allows you to actually",
    "start": "370940",
    "end": "376750"
  },
  {
    "text": "size your infrastructure for the actual demand that you're having in that point in time so as I pointed out here all",
    "start": "376750",
    "end": "383690"
  },
  {
    "text": "lines are made up but this is happening on a daily basis this is a chart of the customer that",
    "start": "383690",
    "end": "389840"
  },
  {
    "text": "I've been working with that was experiencing exactly that problem so if you think about this slide is and the",
    "start": "389840",
    "end": "397190"
  },
  {
    "text": "irony here is that this was a containerized customer so that workload is basically running inside containers",
    "start": "397190",
    "end": "406160"
  },
  {
    "text": "ECS containers namely on an ec2 data plane so what happens here is that users",
    "start": "406160",
    "end": "412940"
  },
  {
    "text": "will pose high demand on the on the platform on the on the application at a given point in time and the outer",
    "start": "412940",
    "end": "420169"
  },
  {
    "text": "scanning group will react to that but as you can see in this slide there is a lag between how fast the auto scaling group",
    "start": "420169",
    "end": "427460"
  },
  {
    "text": "is reacting and how fast the auto scaling group is removing instances",
    "start": "427460",
    "end": "433580"
  },
  {
    "text": "right so basically you can see here a potential disservice and waste of money",
    "start": "433580",
    "end": "439210"
  },
  {
    "start": "439000",
    "end": "495000"
  },
  {
    "text": "the second vectors from which customers choose a technology versus the other is",
    "start": "439210",
    "end": "444590"
  },
  {
    "text": "and this is probably the most important is who is responsible for managing what",
    "start": "444590",
    "end": "449630"
  },
  {
    "text": "alright so there is this notion of different abstraction layers tend to",
    "start": "449630",
    "end": "455539"
  },
  {
    "text": "have different responsibilities models so if we go back to the slide that I've showed you before depending on how much",
    "start": "455539",
    "end": "462950"
  },
  {
    "text": "you want to take and keep doing or depending on how much you want AWS to be",
    "start": "462950",
    "end": "469700"
  },
  {
    "text": "doing you may choose a technology versus the other as you can see from the very left hand side ec2 you're basically",
    "start": "469700",
    "end": "476810"
  },
  {
    "text": "opting in for doing everything from the hypervisor and above it the app advisor",
    "start": "476810",
    "end": "484729"
  },
  {
    "text": "will manage it lambda is exactly the opposite you just take your code and you throw onto the platform and it will just",
    "start": "484729",
    "end": "490910"
  },
  {
    "text": "work without you having to worry about that so let's get into into into this as",
    "start": "490910",
    "end": "499550"
  },
  {
    "start": "495000",
    "end": "574000"
  },
  {
    "text": "I said I'm not going to talk too much about ec2 I expect most of you to know",
    "start": "499550",
    "end": "504680"
  },
  {
    "text": "how an ec2 deployment it look like so",
    "start": "504680",
    "end": "510349"
  },
  {
    "text": "I'm not going to spend too much time on this you're responsible for pretty much everything from the operating system to",
    "start": "510349",
    "end": "515810"
  },
  {
    "text": "the framework II obviously the code that you are deploying as I",
    "start": "515810",
    "end": "521419"
  },
  {
    "text": "promised this is a link of a confirmation template that points to my",
    "start": "521420",
    "end": "528560"
  },
  {
    "text": "github repo that shows you what happens when you deploy this application on ec2",
    "start": "528560",
    "end": "534440"
  },
  {
    "text": "instances so on that repo there is a craft formation template that if you run it will stand up that application using",
    "start": "534440",
    "end": "542390"
  },
  {
    "text": "ec2 instances right so there is an ec2 instance dedicated to the UI to the app",
    "start": "542390",
    "end": "548030"
  },
  {
    "text": "server radius the post goes back and obviously this application is not",
    "start": "548030",
    "end": "553160"
  },
  {
    "text": "deployed based on well architected best practices because you will need a couple",
    "start": "553160",
    "end": "559490"
  },
  {
    "text": "of ec2 instance for every layer and so forth which also points out how inefficient",
    "start": "559490",
    "end": "565730"
  },
  {
    "text": "this may become over time right particularly if your application is not",
    "start": "565730",
    "end": "570920"
  },
  {
    "text": "so heavy loaded let's get more into the",
    "start": "570920",
    "end": "576740"
  },
  {
    "text": "container space now so what I'm going to try to do now is I'm going to describe",
    "start": "576740",
    "end": "583400"
  },
  {
    "text": "that slide that we saw at the beginning based on that notion of the concha plane and the data plane for both the e KS and",
    "start": "583400",
    "end": "590600"
  },
  {
    "text": "the ECS technologies so let's start with",
    "start": "590600",
    "end": "595820"
  },
  {
    "text": "E KS when you start with ek yes the first thing that you need to to do is",
    "start": "595820",
    "end": "601730"
  },
  {
    "text": "obviously you need to containerize your application as I said I'm not going to cover the very basic but basically the",
    "start": "601730",
    "end": "608030"
  },
  {
    "text": "dockerfile is the tool that allows you to basically take that application stuff",
    "start": "608030",
    "end": "616520"
  },
  {
    "text": "it with Linux distribution and the",
    "start": "616520",
    "end": "621860"
  },
  {
    "text": "framework of choice so that you have the docker container image that you can then",
    "start": "621860",
    "end": "627560"
  },
  {
    "text": "push for example to either get up or ECR which is our container registry then",
    "start": "627560",
    "end": "634100"
  },
  {
    "text": "what happens is that this is basically the set up that I was describing at the",
    "start": "634100",
    "end": "640040"
  },
  {
    "text": "beginning as I said it is very important that we take into account this notion of the control plane and the data plane so",
    "start": "640040",
    "end": "646670"
  },
  {
    "text": "the Contra plane in this case eks is Cuban this managed service that we manage for",
    "start": "646670",
    "end": "653630"
  },
  {
    "text": "you right I have slides that gets a little bit more into the details of this",
    "start": "653630",
    "end": "658730"
  },
  {
    "text": "but it's a good point to point this out that this is not a fork of kubernetes",
    "start": "658730",
    "end": "664250"
  },
  {
    "text": "this is not an AWS version of kubernetes we just take the upstream kubernetes",
    "start": "664250",
    "end": "669350"
  },
  {
    "text": "version and we manage it for you one when I say we manage it for you we are",
    "start": "669350",
    "end": "674660"
  },
  {
    "text": "referring to the Concha plane in this case okay what what's left out for the moment is the data plane the data plane",
    "start": "674660",
    "end": "682279"
  },
  {
    "text": "as of today can only be easy to and those worker nodes or on the customer to",
    "start": "682279",
    "end": "688430"
  },
  {
    "text": "manage we provide a confirmation template we also provide additional tools that I will touch upon in a second",
    "start": "688430",
    "end": "695750"
  },
  {
    "text": "to stand up both the Contra plane and the data plane but basically the data plane will appear",
    "start": "695750",
    "end": "701600"
  },
  {
    "text": "in your account as easy to instances that you own and manage ok this is",
    "start": "701600",
    "end": "709580"
  },
  {
    "text": "pretty much what I was discussing once you have your container image your 100",
    "start": "709580",
    "end": "715640"
  },
  {
    "text": "lines of Yama's deployment file far from deploying your application and the other",
    "start": "715640",
    "end": "722480"
  },
  {
    "text": "thing that I want to point out is that far gate is not supported yet with as a",
    "start": "722480",
    "end": "728480"
  },
  {
    "text": "data plane for eks so part for a moment for gate we will discuss for gate in a",
    "start": "728480",
    "end": "734209"
  },
  {
    "text": "second but keep in mind that target is not yet supported as a data plane option",
    "start": "734209",
    "end": "739670"
  },
  {
    "text": "for eks or kubernetes I have seen a lot of you know misleading articles on the",
    "start": "739670",
    "end": "746209"
  },
  {
    "text": "Internet in terms of how people tend to think about far gate and kubernetes and",
    "start": "746209",
    "end": "751640"
  },
  {
    "text": "eks and ECS I tend to see people thinking about far gate versus",
    "start": "751640",
    "end": "758990"
  },
  {
    "text": "kubernetes I mean this is not the case far gate for us is a server less compute",
    "start": "758990",
    "end": "764270"
  },
  {
    "text": "option for containers that as of today works with ECS but we want it to work",
    "start": "764270",
    "end": "770329"
  },
  {
    "text": "with eks and kubernetes in general as well so that's how you need to think about forget a we will cover forget in a",
    "start": "770329",
    "end": "777110"
  },
  {
    "text": "second some of this stuff I have already",
    "start": "777110",
    "end": "782720"
  },
  {
    "text": "discussed eks is upstream kubernetes we do have an opinionated deployment that",
    "start": "782720",
    "end": "789180"
  },
  {
    "text": "we do for eks namely we deploy it with the authentication integrated with em",
    "start": "789180",
    "end": "796070"
  },
  {
    "text": "okay and I believe Nicolas will touch on these and the value for super awesome",
    "start": "796070",
    "end": "802190"
  },
  {
    "text": "with this it also uses the V PCC and I plug in right so basically what happens",
    "start": "802190",
    "end": "809670"
  },
  {
    "text": "is that parts that gets instantiated on the ec2 data plane in an e KS cluster",
    "start": "809670",
    "end": "815130"
  },
  {
    "text": "will surface as first-class citizen inside your V PC so a part will have a",
    "start": "815130",
    "end": "820800"
  },
  {
    "text": "VPC IP address rather than doing the bridging thing as I said AWS managed the",
    "start": "820800",
    "end": "832110"
  },
  {
    "text": "Contra plane and the customer as of today needs to manage the worker I want",
    "start": "832110",
    "end": "837690"
  },
  {
    "text": "to I want to mention spot instances because I usually obviously spot",
    "start": "837690",
    "end": "844200"
  },
  {
    "text": "instances are supported with e KS and actually suggested I usually joke with",
    "start": "844200",
    "end": "850740"
  },
  {
    "start": "848000",
    "end": "898000"
  },
  {
    "text": "customers that customers come for the managed contra plane but then they stay",
    "start": "850740",
    "end": "856709"
  },
  {
    "text": "for the spot instances and the saving that they can make with it I truly believe that we keep talking about the",
    "start": "856709",
    "end": "863339"
  },
  {
    "text": "value of cloud provider as a way to hand off to the cloud provider the management",
    "start": "863339",
    "end": "869850"
  },
  {
    "text": "of the contra plane and the cluster and the undifferentiated I've been lifting we don't talk too much about the",
    "start": "869850",
    "end": "874920"
  },
  {
    "text": "benefits of running in the cloud specifically for spot instances for",
    "start": "874920",
    "end": "880740"
  },
  {
    "text": "example in a real example other than my joke here is Skyscanner a very good",
    "start": "880740",
    "end": "887579"
  },
  {
    "text": "customer of ours that said that they are saving up to 74 percent by using spot",
    "start": "887579",
    "end": "893970"
  },
  {
    "text": "instances versus standard ec2 instances",
    "start": "893970",
    "end": "899300"
  },
  {
    "start": "898000",
    "end": "1047000"
  },
  {
    "text": "the other thing that comes up very often when I talk to customers because",
    "start": "899300",
    "end": "904950"
  },
  {
    "text": "kubernetes is a very super broad ecosystem I'm not sure if you have had",
    "start": "904950",
    "end": "910020"
  },
  {
    "text": "the chance to see the CMC end landscape slide but it's it's it's",
    "start": "910020",
    "end": "915500"
  },
  {
    "text": "gigantic for good and bad so one thing that comes out very often when we talk to customers is can I run things like",
    "start": "915500",
    "end": "922970"
  },
  {
    "text": "the dashboard can I run East EO can I run calico can I rhyme fluent the cube",
    "start": "922970",
    "end": "928820"
  },
  {
    "text": "flow prometheus go fauna you name them right and that just picking like zero two percent of that landscape that I was",
    "start": "928820",
    "end": "936080"
  },
  {
    "text": "referring to so the short answer is yes you can run all of those things pretty",
    "start": "936080",
    "end": "941450"
  },
  {
    "text": "much because eks is kubernetes upstream right so there is no magic there is no nothing that we do we're that wouldn't",
    "start": "941450",
    "end": "950120"
  },
  {
    "text": "allow these tools to be stalled on on EK",
    "start": "950120",
    "end": "955340"
  },
  {
    "text": "on an e KS cluster as a matter of fact i created this tool joking a little bit",
    "start": "955340",
    "end": "961040"
  },
  {
    "text": "with the words called extender where i I just took some of the scripts and now",
    "start": "961040",
    "end": "967580"
  },
  {
    "text": "best practices because I typically call out that this is not the script here is not for production type of deployment",
    "start": "967580",
    "end": "974900"
  },
  {
    "text": "but as a toy that you can use to play around and see how all of those tools",
    "start": "974900",
    "end": "980720"
  },
  {
    "text": "will be added to an e KS cluster you can check it out and see how it works the",
    "start": "980720",
    "end": "987350"
  },
  {
    "text": "second thing that I wanted to call out on this slide is that we do we do have a",
    "start": "987350",
    "end": "992440"
  },
  {
    "text": "a public-facing roadmap website or",
    "start": "992440",
    "end": "997520"
  },
  {
    "text": "github repo for containers so this is kind of a first for AWS where we are",
    "start": "997520",
    "end": "1002770"
  },
  {
    "text": "collaborating in the open with customers and users about what we're thinking about in terms of the evolution of the",
    "start": "1002770",
    "end": "1011050"
  },
  {
    "text": "containers related services that we are releasing and one of those discussions",
    "start": "1011050",
    "end": "1017860"
  },
  {
    "text": "is about what do you want us to take on in terms of managing four years right so",
    "start": "1017860",
    "end": "1023560"
  },
  {
    "text": "we said that eks is kind of a bare-bones kubernetes managed service that only",
    "start": "1023560",
    "end": "1029860"
  },
  {
    "text": "runs kubernetes but out of that CN CF gigantic landscape what would you like",
    "start": "1029860",
    "end": "1036850"
  },
  {
    "text": "us to take on that is undifferentiated heavy lifting for you so we're kind of",
    "start": "1036850",
    "end": "1044230"
  },
  {
    "text": "thinking about what we can do in that space as well this is just a screenshot",
    "start": "1044230",
    "end": "1049730"
  },
  {
    "start": "1047000",
    "end": "1102000"
  },
  {
    "text": "of that extender tool that I just mentioned as you can see the very first",
    "start": "1049730",
    "end": "1056240"
  },
  {
    "text": "thing I wrote down is don't use this in production please write so this is just",
    "start": "1056240",
    "end": "1061400"
  },
  {
    "text": "for kind of demo or towing purposes then that's the the the tool has a few",
    "start": "1061400",
    "end": "1068690"
  },
  {
    "text": "parameters basically that you have to configure that is what's a cluster what",
    "start": "1068690",
    "end": "1073730"
  },
  {
    "text": "the region was the account and those sort of things and then when you run this tool it basically set up a",
    "start": "1073730",
    "end": "1081530"
  },
  {
    "text": "bunch of those extended set of tooling",
    "start": "1081530",
    "end": "1087049"
  },
  {
    "text": "that I was alluding to right so you can you can give it a try it will spit at the end the UI for",
    "start": "1087049",
    "end": "1094130"
  },
  {
    "text": "dha'fana permit is the kubernetes dashboard and the demo application that i'm using throughout these slides the",
    "start": "1094130",
    "end": "1104659"
  },
  {
    "start": "1102000",
    "end": "1309000"
  },
  {
    "text": "other thing that comes up very often when we talk to customers is should I use eks or should I use a do-it-yourself",
    "start": "1104659",
    "end": "1113090"
  },
  {
    "text": "kubernetes on ec2 instance when I say do-it-yourself kubernetes on ec2",
    "start": "1113090",
    "end": "1118669"
  },
  {
    "text": "instance I mean instead of deploying an eks cluster that we manage the Contra",
    "start": "1118669",
    "end": "1124520"
  },
  {
    "text": "plane you deploy your own contra plane okay on ec2 instances so there are a few",
    "start": "1124520",
    "end": "1132320"
  },
  {
    "text": "tools that do this for you cops is one of the most famous a great",
    "start": "1132320",
    "end": "1137780"
  },
  {
    "text": "tool and there are a few reasons for which customers may want to still use",
    "start": "1137780",
    "end": "1143020"
  },
  {
    "text": "cops or other tools like that so the food I mean the first one is lots of",
    "start": "1143020",
    "end": "1148520"
  },
  {
    "text": "customers or yeah we understand the benefits of eks and we want to use it but we're not quite ready because we",
    "start": "1148520",
    "end": "1154220"
  },
  {
    "text": "have operationalized pretty much everything with one of these tools so there are maybe on a journey to move to",
    "start": "1154220",
    "end": "1160610"
  },
  {
    "text": "eks there are other things and other reason for which these customers may want to keep using that tool in eks we",
    "start": "1160610",
    "end": "1168380"
  },
  {
    "text": "disabled alpha features so if you want to play or use alpha features kubernetes",
    "start": "1168380",
    "end": "1173480"
  },
  {
    "text": "alpha features you can use eks we we disable those api's okay some",
    "start": "1173480",
    "end": "1182389"
  },
  {
    "text": "customers need to pass parameters startup parameters to the kubernetes api server may be for entry admission",
    "start": "1182389",
    "end": "1190279"
  },
  {
    "text": "controllers that you need to start when you start the api server or to use a",
    "start": "1190279",
    "end": "1196999"
  },
  {
    "text": "different authentication mechanism other than a.m. which is what we use today there is no way today to for a user to",
    "start": "1196999",
    "end": "1204259"
  },
  {
    "text": "pass these parameters so if you need to use some of these parameters to customize how the API servers start you",
    "start": "1204259",
    "end": "1211279"
  },
  {
    "text": "can't use eks and the last two things are very tied together so the first one",
    "start": "1211279",
    "end": "1217129"
  },
  {
    "text": "is if it will take for us a few weeks before we are able to release a version",
    "start": "1217129",
    "end": "1224809"
  },
  {
    "text": "of a kubernetes managed service after it's been released in the community so",
    "start": "1224809",
    "end": "1231559"
  },
  {
    "text": "if you want to run the kubernetes release there has been baked like last night you have to deploy it yourself",
    "start": "1231559",
    "end": "1238610"
  },
  {
    "text": "similarly and obviously we do this because we don't want you to be the testers right there is a lot of work",
    "start": "1238610",
    "end": "1244429"
  },
  {
    "text": "that we need to do to validate that Elise until then make it available as an",
    "start": "1244429",
    "end": "1250159"
  },
  {
    "text": "option for customers to to use the last one is tied to this one but it's exactly",
    "start": "1250159",
    "end": "1256820"
  },
  {
    "text": "the opposite which is as you may know the kubernetes community is committed to",
    "start": "1256820",
    "end": "1265039"
  },
  {
    "text": "fixed bugs and even security bugs and maintaining the last three minor",
    "start": "1265039",
    "end": "1271159"
  },
  {
    "text": "releases of kubernetes ok so basically what happens if you are running a",
    "start": "1271159",
    "end": "1277580"
  },
  {
    "text": "kubernetes release that is N and being the last one available - for your and",
    "start": "1277580",
    "end": "1284600"
  },
  {
    "text": "supported okay so if you for whatever reason you need to run a very old Elise",
    "start": "1284600",
    "end": "1291860"
  },
  {
    "text": "of urban natives you can't use eks because we will enforce over time these",
    "start": "1291860",
    "end": "1299619"
  },
  {
    "text": "policy of not being able to use older version of Cuba natives as an e KS",
    "start": "1299619",
    "end": "1307340"
  },
  {
    "text": "implementation so let's move a little bit into the",
    "start": "1307340",
    "end": "1312789"
  },
  {
    "start": "1309000",
    "end": "1436000"
  },
  {
    "text": "impact this session so this is where I'm using couple of slides just to give you a hint my my demo application and and",
    "start": "1312789",
    "end": "1323950"
  },
  {
    "text": "try to set this up on on an e KS cluster in this case the link that you see at",
    "start": "1323950",
    "end": "1330789"
  },
  {
    "text": "the bottom here is the doctor file for the UI so the UI as I alluded to at the",
    "start": "1330789",
    "end": "1336460"
  },
  {
    "text": "beginning is an angular application that runs on an engine X Server that is",
    "start": "1336460",
    "end": "1342879"
  },
  {
    "text": "serving that angular application now I'm not an angular developer but",
    "start": "1342879",
    "end": "1347919"
  },
  {
    "text": "basically what I learned is that the way that angular works is that you build",
    "start": "1347919",
    "end": "1353080"
  },
  {
    "text": "your source code couple of kilobytes you compile it downloading half of the Internet and you",
    "start": "1353080",
    "end": "1360600"
  },
  {
    "text": "produce a couple of kilobytes of JavaScript right so this is very common",
    "start": "1360600",
    "end": "1366009"
  },
  {
    "text": "with all of those compiled languages this applies to this applies to go as",
    "start": "1366009",
    "end": "1371409"
  },
  {
    "text": "well there is a very well-known pattern in the darker community to use multi",
    "start": "1371409",
    "end": "1378669"
  },
  {
    "text": "stage build where basically what you do is in the very same docker file you",
    "start": "1378669",
    "end": "1384850"
  },
  {
    "text": "create an environment and you probably don't see this but basically this dr. phibes says that the from at the very",
    "start": "1384850",
    "end": "1392620"
  },
  {
    "text": "beginning is from node which is the docker image that contains node which is",
    "start": "1392620",
    "end": "1397990"
  },
  {
    "text": "what I'm using to compile my angular application and then the output of this",
    "start": "1397990",
    "end": "1404259"
  },
  {
    "text": "application those couple of kilobytes files are worth of JavaScript you put",
    "start": "1404259",
    "end": "1409629"
  },
  {
    "text": "them into a new container so inside the same docker file you can produce your",
    "start": "1409629",
    "end": "1414909"
  },
  {
    "text": "output and pass it onto the new one I'm using a from that is nginx and I'm just",
    "start": "1414909",
    "end": "1420309"
  },
  {
    "text": "putting the the the output JavaScript onto that container this is a very good",
    "start": "1420309",
    "end": "1428139"
  },
  {
    "text": "pattern to use in these cases and if you're new to docker I would suggest that you look into this when it comes to",
    "start": "1428139",
    "end": "1438159"
  },
  {
    "start": "1436000",
    "end": "1567000"
  },
  {
    "text": "deployment this is what happens right so this is your eks cluster being deployed",
    "start": "1438159",
    "end": "1446410"
  },
  {
    "text": "as you can see here there is an AWS account that has the EK s contra plane",
    "start": "1446410",
    "end": "1452650"
  },
  {
    "text": "the e KS contra plane is dedicated to you but runs in a dedicated AWS account",
    "start": "1452650",
    "end": "1458410"
  },
  {
    "text": "that you don't get to see what's running in your account or the ec2 instances for",
    "start": "1458410",
    "end": "1464830"
  },
  {
    "text": "the for the data plane ok this is where the the pods are going to run in",
    "start": "1464830",
    "end": "1472720"
  },
  {
    "text": "production or they're going to run anyway typically customers configure",
    "start": "1472720",
    "end": "1478150"
  },
  {
    "text": "auto scaling for that the one thing that I wanted to call out is that we are",
    "start": "1478150",
    "end": "1483580"
  },
  {
    "text": "suggesting new customers new to kubernetes unless they have already",
    "start": "1483580",
    "end": "1488820"
  },
  {
    "text": "standardized on something like terraform or things like that where they can stand up this cluster using for example the e",
    "start": "1488820",
    "end": "1496090"
  },
  {
    "text": "KS API as well as the the data plane",
    "start": "1496090",
    "end": "1502870"
  },
  {
    "text": "with ec2 instances we suggest to use this tool that we build with we works called eks CTL so instead of you know",
    "start": "1502870",
    "end": "1510250"
  },
  {
    "text": "going through the documentation about how do you set this up eks CTL will",
    "start": "1510250",
    "end": "1515890"
  },
  {
    "text": "allow you to to have a cop's like experience if you will and this is what",
    "start": "1515890",
    "end": "1522550"
  },
  {
    "text": "happens next if you run this if you keep cattle apply this Yama file that I have",
    "start": "1522550",
    "end": "1530680"
  },
  {
    "text": "on the on the on the github this is what happens so basically the images are",
    "start": "1530680",
    "end": "1537850"
  },
  {
    "text": "hosted on docker hub because I put the docker container instance images on",
    "start": "1537850",
    "end": "1543190"
  },
  {
    "text": "docker hub and that yamo what it does it it just grabbed those instances and it",
    "start": "1543190",
    "end": "1548230"
  },
  {
    "text": "will create that application on top of the kubernetes cluster okay it will",
    "start": "1548230",
    "end": "1553330"
  },
  {
    "text": "provision as part of the cloud integration the AWS cloud integration you will provision an elastic load",
    "start": "1553330",
    "end": "1560110"
  },
  {
    "text": "balancer which is your endpoint it acts as the UI of that demo application",
    "start": "1560110",
    "end": "1567120"
  },
  {
    "start": "1567000",
    "end": "1697000"
  },
  {
    "text": "so let's move quickly to ECS so we have been talking about kubernetes and eks",
    "start": "1568360",
    "end": "1574330"
  },
  {
    "text": "and what we're doing in that space let's quickly move to ECS nothing really",
    "start": "1574330",
    "end": "1579909"
  },
  {
    "text": "different I mean same dockerfile same stuff that you need to containerize and",
    "start": "1579909",
    "end": "1586840"
  },
  {
    "text": "that this is where it gets a little bit different so there is still this notion",
    "start": "1586840",
    "end": "1591909"
  },
  {
    "text": "of the Contra plane and the data plane okay the Contra plane in this case is",
    "start": "1591909",
    "end": "1597460"
  },
  {
    "text": "not eks is not a kubernetes endpoint it's ECS which is a different Orchestrator okay",
    "start": "1597460",
    "end": "1604120"
  },
  {
    "text": "from a data plane perspective this is where Fargate comes in so from a data plane perspective which is the place",
    "start": "1604120",
    "end": "1611019"
  },
  {
    "text": "where you are actually instantiating your task because task or ECS pods if",
    "start": "1611019",
    "end": "1616630"
  },
  {
    "text": "you will you have the option of choosing ec2 or Fargate yeah so this is pretty",
    "start": "1616630",
    "end": "1625330"
  },
  {
    "text": "much what what i've discussed so far as",
    "start": "1625330",
    "end": "1630610"
  },
  {
    "text": "I said ECS is it obvious native container Orchestrator it supports both data",
    "start": "1630610",
    "end": "1636250"
  },
  {
    "text": "planes ec2 and Fergie we will get to forget in a moment what characterized",
    "start": "1636250",
    "end": "1642490"
  },
  {
    "text": "GCS is that as Matt was alluding to it's very tightly integrated into everything",
    "start": "1642490",
    "end": "1649149"
  },
  {
    "text": "that we're doing across the AWS platform you can read some of those things in the",
    "start": "1649149",
    "end": "1655779"
  },
  {
    "text": "slide what I want to call out is workloads tagging right one of them very",
    "start": "1655779",
    "end": "1660820"
  },
  {
    "text": "common requests that we get for customers is I want to learn a container",
    "start": "1660820",
    "end": "1667510"
  },
  {
    "text": "Orchestrator I'm not opinionated and I want to host different users or even",
    "start": "1667510",
    "end": "1673899"
  },
  {
    "text": "different customers of mine right and I want to repartition the cost of that cluster to different customers or users",
    "start": "1673899",
    "end": "1681789"
  },
  {
    "text": "this is where tagging comes very handy because you can tag those tasks and",
    "start": "1681789",
    "end": "1687850"
  },
  {
    "text": "charge back those users or external customers based on the tagging which is",
    "start": "1687850",
    "end": "1693610"
  },
  {
    "text": "fully integrated into the platform so we",
    "start": "1693610",
    "end": "1699549"
  },
  {
    "start": "1697000",
    "end": "2056000"
  },
  {
    "text": "kept talking about Fargate but before we explain how far gate can be used and",
    "start": "1699549",
    "end": "1705190"
  },
  {
    "text": "what target is I wanted to show you how the ec2 data plane works so imagine that",
    "start": "1705190",
    "end": "1711940"
  },
  {
    "text": "you are deploying and ec2 I'm sorry an ICS task ok which maps to a container",
    "start": "1711940",
    "end": "1718320"
  },
  {
    "text": "nginx or whatever right what you would do and it is important that you notice",
    "start": "1718320",
    "end": "1723880"
  },
  {
    "text": "the graphic here where you have an AWS account which is basically everything that it doesn't run in your account",
    "start": "1723880",
    "end": "1730840"
  },
  {
    "text": "which is on the right hand side on the right hand side you have your V PC and in this case you have the ec2 instances",
    "start": "1730840",
    "end": "1738580"
  },
  {
    "text": "backing that pcs cluster ok as a data plane so what happens here is that when",
    "start": "1738580",
    "end": "1745149"
  },
  {
    "text": "you say ECS can you launch this task can you run this task with an easy to launch",
    "start": "1745149",
    "end": "1753880"
  },
  {
    "text": "type what happens is that that ec2 instance in coordination with ECS will",
    "start": "1753880",
    "end": "1760330"
  },
  {
    "text": "go out your registry is your doctor ha whatever and it will instantiate that",
    "start": "1760330",
    "end": "1765399"
  },
  {
    "text": "task for you task is the container for containers or so to speak it's a part in",
    "start": "1765399",
    "end": "1771460"
  },
  {
    "text": "kubernetes ok so this is what happens when you use a classic ec2 data plane ok",
    "start": "1771460",
    "end": "1777879"
  },
  {
    "text": "the interesting thing that you need to remember is that you have to manage that capacity ok you have to manage that",
    "start": "1777879",
    "end": "1784960"
  },
  {
    "text": "capacity typically using auto scaling groups with for gate we change this",
    "start": "1784960",
    "end": "1791649"
  },
  {
    "text": "model with forget what happens is that those ec2 instances that exist obviously",
    "start": "1791649",
    "end": "1798190"
  },
  {
    "text": "because you have to run your task somewhere or no longer in your account but they are in a fleet that we manage",
    "start": "1798190",
    "end": "1805389"
  },
  {
    "text": "for you this is not manage worker nodes in the sense that they are in your",
    "start": "1805389",
    "end": "1811059"
  },
  {
    "text": "account and we kind of manage them you you don't see those ec2 instances right",
    "start": "1811059",
    "end": "1817240"
  },
  {
    "text": "it's a hidden fleet of ec2 instances that we key for you to use when you",
    "start": "1817240",
    "end": "1822789"
  },
  {
    "text": "deploy a task so if you use for gate with this yes what you're telling is yes",
    "start": "1822789",
    "end": "1828669"
  },
  {
    "text": "is can you run this task with a lunch tied for gate and what ECS does is instead of",
    "start": "1828669",
    "end": "1834910"
  },
  {
    "text": "searching for an available ec2 instance in your account it will take an ec2",
    "start": "1834910",
    "end": "1840010"
  },
  {
    "text": "instance from the Fargate pool and it will instantiate that task for you the",
    "start": "1840010",
    "end": "1845260"
  },
  {
    "text": "task will surface in your V PC so from a networking perspective nothing really changes what changes is the fact that",
    "start": "1845260",
    "end": "1852850"
  },
  {
    "text": "you don't have to manage that capacity anymore I've seen a very interesting",
    "start": "1852850",
    "end": "1858010"
  },
  {
    "text": "articles that describe this process as cluster less ECS or cluster less",
    "start": "1858010",
    "end": "1864220"
  },
  {
    "text": "containers so basically if you look at these impactors I'll show you that slide",
    "start": "1864220",
    "end": "1871240"
  },
  {
    "text": "in a second but the other thing that I wanted to point out is that each Fargate task has its own is isolation in terms",
    "start": "1871240",
    "end": "1879220"
  },
  {
    "text": "of each task runs on a dedicated ec2 instance so you're not sharing a given",
    "start": "1879220",
    "end": "1884380"
  },
  {
    "text": "ec2 instance with many tasks or more than one task for that matter if you",
    "start": "1884380",
    "end": "1890170"
  },
  {
    "text": "look at these from it from a migration perspective the other thing that I",
    "start": "1890170",
    "end": "1896710"
  },
  {
    "text": "usually talk about with customers is how easy it is to move from one Orchestrator",
    "start": "1896710",
    "end": "1903310"
  },
  {
    "text": "to another what I usually say is that once you have containerize your application it's a matter of writing you",
    "start": "1903310",
    "end": "1910210"
  },
  {
    "text": "know a different llamo fight to instantiate that on ECS or kubernetes or",
    "start": "1910210",
    "end": "1915910"
  },
  {
    "text": "eks alright so fairly easy to move back and forth from one another if you look",
    "start": "1915910",
    "end": "1923200"
  },
  {
    "text": "at these in practice this is the scenario where I'm using ECS and I'm",
    "start": "1923200",
    "end": "1928450"
  },
  {
    "text": "deploying to a data plane that is similar to the eks data plane which is basically in your account with this",
    "start": "1928450",
    "end": "1937330"
  },
  {
    "text": "Yammer file you can deploy this very similarly to how you would deploy on eks",
    "start": "1937330",
    "end": "1943090"
  },
  {
    "text": "what's interesting is when you use the the Fargate data plane what what changes",
    "start": "1943090",
    "end": "1949180"
  },
  {
    "text": "is the stuff at the bottom as you can see your account from a resource",
    "start": "1949180",
    "end": "1954250"
  },
  {
    "text": "perspective pretty much gives you no get out of the way you're deploying tasks on",
    "start": "1954250",
    "end": "1959890"
  },
  {
    "text": "it infrastructure that is not your infrastructure is a manner",
    "start": "1959890",
    "end": "1965960"
  },
  {
    "text": "infrastructure the result of this is that you're actually paying only for the",
    "start": "1965960",
    "end": "1971090"
  },
  {
    "text": "task that you're deploying you're not playing paying for the ec2 instance that you need to manage to make",
    "start": "1971090",
    "end": "1978800"
  },
  {
    "text": "this ism even more clear these llamó file that you see here is basically a",
    "start": "1978800",
    "end": "1985550"
  },
  {
    "text": "single Yama file that allows you to deploy that demo application both in a",
    "start": "1985550",
    "end": "1990620"
  },
  {
    "text": "forged and ec3 mode so if you run this conformation template you have an option at the bottom that says what's a lunch",
    "start": "1990620",
    "end": "1997820"
  },
  {
    "text": "type that you want to use ec2 or Fargate and depending on what you choose it will",
    "start": "1997820",
    "end": "2002890"
  },
  {
    "text": "deploy in your account in a ec2 data plane in your account Wow or in our",
    "start": "2002890",
    "end": "2010300"
  },
  {
    "text": "forget fleet don't do your thing there",
    "start": "2010300",
    "end": "2017890"
  },
  {
    "text": "are some considerations in terms of the difference between the two obviously the main one is that we manage the Fargate",
    "start": "2017890",
    "end": "2024940"
  },
  {
    "text": "fleet and you have to manage the ec2 fleet there are other consideration that we don't have too much time to get into",
    "start": "2024940",
    "end": "2032100"
  },
  {
    "text": "in terms of the type of storage the networking mode the daemons and so forth",
    "start": "2032100",
    "end": "2038310"
  },
  {
    "text": "demons and SSH are the two things that comes up very often when you own your",
    "start": "2038310",
    "end": "2044130"
  },
  {
    "text": "infrastructure you can SSH into your ec2 us with forget you cannot SSH into those",
    "start": "2044130",
    "end": "2050200"
  },
  {
    "text": "hosts right so observability needs to take to be taken into account I'm not",
    "start": "2050200",
    "end": "2057730"
  },
  {
    "start": "2056000",
    "end": "2095000"
  },
  {
    "text": "going to touch on the lambda server last option I just want to leave you once",
    "start": "2057730",
    "end": "2063580"
  },
  {
    "text": "again with a Yama file that you can go home and test later today where what",
    "start": "2063580",
    "end": "2070570"
  },
  {
    "text": "I've done is basically took my application and sort of refactor it to being able to deploy it on a server",
    "start": "2070570",
    "end": "2077379"
  },
  {
    "text": "Legend areas like using a 3 API gateway lambda and dynamodb so it's a very same",
    "start": "2077380",
    "end": "2084580"
  },
  {
    "text": "application if you connect to the UI it's a very same thing same functionalities but the back end changes",
    "start": "2084580",
    "end": "2090639"
  },
  {
    "text": "from ec2 you eks ECS and serverless with that said sorry if I've been",
    "start": "2090640",
    "end": "2098410"
  },
  {
    "start": "2095000",
    "end": "2125000"
  },
  {
    "text": "rushing a bit I want to invite Nikolas on stage for letting you know how super awesome",
    "start": "2098410",
    "end": "2105220"
  },
  {
    "text": "is using some of these technologies thank you",
    "start": "2105220",
    "end": "2109020"
  },
  {
    "text": "so Massimo just showed you all the different ways you can deploy containers from AWS now I'm going to walk you",
    "start": "2112890",
    "end": "2119860"
  },
  {
    "text": "through how we use them at super awesome in Y but first let me give you some context so every single day a hundred",
    "start": "2119860",
    "end": "2128110"
  },
  {
    "start": "2125000",
    "end": "2157000"
  },
  {
    "text": "and seventy thousand children gone and for the first time unfortunately the internet wasn't built",
    "start": "2128110",
    "end": "2133510"
  },
  {
    "text": "for them they get exposed to a lot of harmful content and also many companies collect data about them without the",
    "start": "2133510",
    "end": "2141070"
  },
  {
    "text": "consent of their parents super-awesome decided to solve this problem our mission is to make the internet safer",
    "start": "2141070",
    "end": "2147820"
  },
  {
    "text": "for kids we built the technology platform that brands can use to build itself apps and websites and engage",
    "start": "2147820",
    "end": "2155350"
  },
  {
    "text": "safely with the users all we built or product around a set of principles the",
    "start": "2155350",
    "end": "2162280"
  },
  {
    "start": "2157000",
    "end": "2196000"
  },
  {
    "text": "two that will interest us today are privacy by design and Shiffrin iterate so by privacy by design we mean that the",
    "start": "2162280",
    "end": "2169810"
  },
  {
    "text": "privacy of these kids is at the center of everything we do we leave all personal information and personal",
    "start": "2169810",
    "end": "2176350"
  },
  {
    "text": "identifiers Auto for systems and it also means that we are often asked to deploy",
    "start": "2176350",
    "end": "2181660"
  },
  {
    "text": "your code the new isolated environments with chip run iterate we mean that we go",
    "start": "2181660",
    "end": "2187180"
  },
  {
    "text": "for technologies that allow us to get things off the ground quickly then we optimize or we use those technologies",
    "start": "2187180",
    "end": "2194020"
  },
  {
    "text": "through a lot of small iterations we started our journey with containers almost four years ago at the time to get",
    "start": "2194020",
    "end": "2202090"
  },
  {
    "start": "2196000",
    "end": "2307000"
  },
  {
    "text": "the development environment up and running the team had to clone a lot of repositories build some virtual machines",
    "start": "2202090",
    "end": "2209020"
  },
  {
    "text": "and run them on the laptops as you can imagine this was really really resource",
    "start": "2209020",
    "end": "2214540"
  },
  {
    "text": "intensive and unreliable to solve that we switch to containers we took all",
    "start": "2214540",
    "end": "2221710"
  },
  {
    "text": "those projects we controllin eyes them we go through all those virtual machines but one where",
    "start": "2221710",
    "end": "2227290"
  },
  {
    "text": "corine docker compose at the time to handle roof or infrastructure we were",
    "start": "2227290",
    "end": "2232480"
  },
  {
    "text": "relying on an external company we had one guy working full-time on it it",
    "start": "2232480",
    "end": "2237550"
  },
  {
    "text": "wasn't a big fan of containers but in the other technologies in knew how to make things work then someday that guy",
    "start": "2237550",
    "end": "2244330"
  },
  {
    "text": "went on holiday and a technical company sent us somebody else that total person",
    "start": "2244330",
    "end": "2249340"
  },
  {
    "text": "made a manual change in production brought the whole system down and didn't manage to recover it",
    "start": "2249340",
    "end": "2255120"
  },
  {
    "text": "so me and another level developer had a really fun day recovering all that and that's when we decided to bring our",
    "start": "2255120",
    "end": "2261940"
  },
  {
    "text": "infrastructure back in-house and switch to containers as they were already working quite well for us in development",
    "start": "2261940",
    "end": "2268480"
  },
  {
    "text": "at the time we were running an ec2 so we applied the same approach we took what",
    "start": "2268480",
    "end": "2273580"
  },
  {
    "text": "we had we installed the qu'ran docker compose and switch to containers over",
    "start": "2273580",
    "end": "2279900"
  },
  {
    "text": "the following few months the team started creating more and more small services we started more virtual",
    "start": "2279900",
    "end": "2288070"
  },
  {
    "text": "machines and that also increased our infrastructure costs so we decided to switch to something that would be more",
    "start": "2288070",
    "end": "2294880"
  },
  {
    "text": "adapted to containers we did a result at the time kubernetes was in its infancy",
    "start": "2294880",
    "end": "2299950"
  },
  {
    "text": "and we went for ECS it didn't have many features but we knew that it would be",
    "start": "2299950",
    "end": "2305440"
  },
  {
    "text": "stable and reliable over the following two years kubernetes changed quite a lot",
    "start": "2305440",
    "end": "2311080"
  },
  {
    "text": "it got more functionalities it became more stable and also its community grew",
    "start": "2311080",
    "end": "2317050"
  },
  {
    "text": "quite a lot at some point the benefits of switching were higher for us than the",
    "start": "2317050",
    "end": "2322900"
  },
  {
    "text": "cost and the time it would take us so we started a couple of clusters we wrote a",
    "start": "2322900",
    "end": "2328060"
  },
  {
    "text": "script that would transform all or ECS task into kubernetes templates and we",
    "start": "2328060",
    "end": "2333880"
  },
  {
    "text": "switched to understand what we did next you need to understand how the company",
    "start": "2333880",
    "end": "2340360"
  },
  {
    "text": "evolved over those four years so we went from having a handful of ec2 instances to having a few hundreds of them across",
    "start": "2340360",
    "end": "2347800"
  },
  {
    "text": "multiple regions and the debris cycles we went from a few hundreds of HTTP",
    "start": "2347800",
    "end": "2353470"
  },
  {
    "text": "requests per minute to tens of thousands per second we went from a few million and a takes events per day",
    "start": "2353470",
    "end": "2360160"
  },
  {
    "text": "to more than a billion and we went from two guarantees clusters to 20 and we",
    "start": "2360160",
    "end": "2367780"
  },
  {
    "text": "decided to switch three KS to continue to use kubernetes and everything it has",
    "start": "2367780",
    "end": "2373030"
  },
  {
    "text": "to offer us we without the hassle of managing clusters so if you want to rank",
    "start": "2373030",
    "end": "2379150"
  },
  {
    "text": "you manatees you will need to run the Masters so that a control plan that massaman was talking about and denotes",
    "start": "2379150",
    "end": "2385390"
  },
  {
    "text": "the data plane if you want to run it in a highly available way you will run it",
    "start": "2385390",
    "end": "2390520"
  },
  {
    "text": "you will want to run at least three masters in different availability zones on them you will need to run quite a few",
    "start": "2390520",
    "end": "2397030"
  },
  {
    "text": "things for example etcd it it's a quite reliable key value store that is used by",
    "start": "2397030",
    "end": "2403540"
  },
  {
    "text": "communities to store its data you would need to set it up sacred back it up and think about",
    "start": "2403540",
    "end": "2409810"
  },
  {
    "text": "disaster recovery as your cluster grow you would need to think about what you want to do with those masters you want",
    "start": "2409810",
    "end": "2416800"
  },
  {
    "text": "to scale them up so give them more CPU and memory or do you want to scale them out and start more of them so those are",
    "start": "2416800",
    "end": "2424120"
  },
  {
    "text": "extremely interesting engineering challenges challenges but they do not bring us closer to our goal every single",
    "start": "2424120",
    "end": "2431110"
  },
  {
    "text": "hour that we spend working on that is an hour that we do not spend making the internet safer for kids so we decided to",
    "start": "2431110",
    "end": "2437830"
  },
  {
    "text": "stop doing it ourselves and we switched wikis so that was for the masters for the",
    "start": "2437830",
    "end": "2444250"
  },
  {
    "text": "nodes we decided to still manage them ourselves one of the reasons is that we want to run extra security services on",
    "start": "2444250",
    "end": "2451240"
  },
  {
    "text": "all of them and it's also to take advantage of spot instances today 90 to",
    "start": "2451240",
    "end": "2457150"
  },
  {
    "text": "95 percent of for production workloads run on spot instances on kubernetes as",
    "start": "2457150",
    "end": "2465130"
  },
  {
    "text": "you might already know you can support you can lose spot instances on very short notice to mitigate for that we",
    "start": "2465130",
    "end": "2472360"
  },
  {
    "text": "applied the correct on to affinity rules we also set up help check and fell overs at different levels so before eks we",
    "start": "2472360",
    "end": "2481000"
  },
  {
    "start": "2478000",
    "end": "2498000"
  },
  {
    "text": "were already using quite a few other brief services and whenever possible we",
    "start": "2481000",
    "end": "2486730"
  },
  {
    "text": "would configure them using traffic luckily for us ETS also has terraform",
    "start": "2486730",
    "end": "2493170"
  },
  {
    "text": "integration so it was quite easy for us to add it to our existing automation so",
    "start": "2493170",
    "end": "2499770"
  },
  {
    "start": "2498000",
    "end": "2546000"
  },
  {
    "text": "I can talk about containers without mentioning security and networking so in",
    "start": "2499770",
    "end": "2505110"
  },
  {
    "text": "terms of security if you use it so many various services you will need to go through am to authenticate and then AWS",
    "start": "2505110",
    "end": "2513660"
  },
  {
    "text": "you cannot check if you have access to what we try to access on kubernetes you will have something similar we need to",
    "start": "2513660",
    "end": "2519930"
  },
  {
    "text": "authenticate with a crystal and then kubernetes is going to use role based access control to check if you can",
    "start": "2519930",
    "end": "2525990"
  },
  {
    "text": "actually perform some actions with 20 clusters in a big team those things",
    "start": "2525990",
    "end": "2532500"
  },
  {
    "text": "become really complicated to manage because we ended up with a lot of coupon fix with aks you can delegate most of",
    "start": "2532500",
    "end": "2539970"
  },
  {
    "text": "that value so you can authenticate try to your cube in these clusters and not have to worry about it in terms of",
    "start": "2539970",
    "end": "2548040"
  },
  {
    "start": "2546000",
    "end": "2594000"
  },
  {
    "text": "networking if you run containers you will have something like this you will have a V PC with a few subnets you will",
    "start": "2548040",
    "end": "2554850"
  },
  {
    "text": "have some ec2 instances on which will run containers your instances will get the right piece from one other space and",
    "start": "2554850",
    "end": "2561720"
  },
  {
    "text": "the containers from another in our case we have we run clusters in different",
    "start": "2561720",
    "end": "2566820"
  },
  {
    "text": "regions and we pair some V pieces and we want to communicate between pods across",
    "start": "2566820",
    "end": "2572840"
  },
  {
    "text": "across those different networks with AWS eni pods get treated as first-class",
    "start": "2572840",
    "end": "2580350"
  },
  {
    "text": "citizen on the network and they get the own IP address at the same level as instances this allows us with the right",
    "start": "2580350",
    "end": "2588960"
  },
  {
    "text": "configuration to have pot to pot communication between those different networks one last thing to mention is",
    "start": "2588960",
    "end": "2596910"
  },
  {
    "start": "2594000",
    "end": "2686000"
  },
  {
    "text": "load balancing so if you run containers you will have something like this you",
    "start": "2596910",
    "end": "2602250"
  },
  {
    "text": "will have your containers running on you in situ instances then you would put some kind of reverse proxy in front of",
    "start": "2602250",
    "end": "2609990"
  },
  {
    "text": "them in the communities world it's also referred to as an ingress controller and then if like s you have a really dynamic",
    "start": "2609990",
    "end": "2616380"
  },
  {
    "text": "environment you will add some kind of load balancer and your traffic will flow like this it",
    "start": "2616380",
    "end": "2622849"
  },
  {
    "text": "should go to the load balancer then if you go to the reverse proxies well you will do things like SSL terminations and",
    "start": "2622849",
    "end": "2629720"
  },
  {
    "text": "some extra security then it should be sent to the containers if you stay in",
    "start": "2629720",
    "end": "2635030"
  },
  {
    "text": "just one availability zone you won't have an issue and the networking will be",
    "start": "2635030",
    "end": "2640069"
  },
  {
    "text": "free if like us you have highly available dressed ours we can have the following your traffic can go from the",
    "start": "2640069",
    "end": "2646790"
  },
  {
    "text": "load balancer to reverse proxy in another zone and then come back or go to a told one so there are different ways",
    "start": "2646790",
    "end": "2653240"
  },
  {
    "text": "to solve that but you would need to deal with a lot of edge cases to avoid avoid having an unbalanced crystal with eks",
    "start": "2653240",
    "end": "2661730"
  },
  {
    "text": "what we started doing is to use the application of balancer so you merge that reverse proxy with the network load",
    "start": "2661730",
    "end": "2667970"
  },
  {
    "text": "balancer use the application of bouncer from AWS when you can do SSL termination",
    "start": "2667970",
    "end": "2673220"
  },
  {
    "text": "some security and send the traffic directly to the correct parts and this is possible because that word balancer",
    "start": "2673220",
    "end": "2680569"
  },
  {
    "text": "is aware of fastening on your community's crystal tanks we guess so I",
    "start": "2680569",
    "end": "2686780"
  },
  {
    "start": "2686000",
    "end": "2773000"
  },
  {
    "text": "walked you through how we use containers why we decided to use the KS how we",
    "start": "2686780",
    "end": "2692569"
  },
  {
    "text": "managed to know the new spot instances things around security networking and",
    "start": "2692569",
    "end": "2697790"
  },
  {
    "text": "also load balancing I hope that this will also help you in your journey with containers if you have any questions",
    "start": "2697790",
    "end": "2704150"
  },
  {
    "text": "please don't hesitate to get in touch thank you",
    "start": "2704150",
    "end": "2708190"
  },
  {
    "text": "Thank You Nicholas I appreciate I'm standing between you and lunch so this is going to be very quick just a few",
    "start": "2711960",
    "end": "2719309"
  },
  {
    "text": "remarks and conclusion we want to be kind of the place where you want to run containers on AWS a couple of",
    "start": "2719309",
    "end": "2727380"
  },
  {
    "text": "positioning comments on eks and ECS we tend to see customers using eks and",
    "start": "2727380",
    "end": "2733829"
  },
  {
    "text": "kubernetes when they need that broad echo system or they need for hybrid deployment on pram and the cloud and ECS",
    "start": "2733829",
    "end": "2741150"
  },
  {
    "text": "for less of an out-of-the-box experience the last the last point is that it's",
    "start": "2741150",
    "end": "2746220"
  },
  {
    "text": "always a challenge to find a good compromise between making things very",
    "start": "2746220",
    "end": "2751529"
  },
  {
    "text": "easy and making things very you know flexible so to speak so we're always",
    "start": "2751529",
    "end": "2758369"
  },
  {
    "text": "kind of looking for feedback in their space and how to balance that links of",
    "start": "2758369",
    "end": "2765660"
  },
  {
    "text": "the stuff that I've been talking about so when you get this slide you will see these links and you can use some of",
    "start": "2765660",
    "end": "2773339"
  },
  {
    "start": "2773000",
    "end": "2801000"
  },
  {
    "text": "these stuff last thing please complete the recession survey you can only do this",
    "start": "2773339",
    "end": "2780510"
  },
  {
    "text": "from the app from the mobile app at the end of the session please do this I was",
    "start": "2780510",
    "end": "2786299"
  },
  {
    "text": "trying to find a joke on why you should give us a 5 but I couldn't think of any but joking aside it's very important to",
    "start": "2786299",
    "end": "2794160"
  },
  {
    "text": "get that feedback and with that said thank you very much for coming",
    "start": "2794160",
    "end": "2799210"
  },
  {
    "text": "[Applause]",
    "start": "2799210",
    "end": "2803139"
  }
]