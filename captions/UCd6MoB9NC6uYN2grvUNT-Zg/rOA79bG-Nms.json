[
  {
    "text": "alright we're alive hi everyone",
    "start": "1040",
    "end": "6480"
  },
  {
    "text": "this is chase he's awesome this is Nikki she's awesome too okay tell everybody",
    "start": "6480",
    "end": "12300"
  },
  {
    "text": "who you are already I'm the CTO and co-founder at stacker II which is a product that helps people",
    "start": "12300",
    "end": "18690"
  },
  {
    "text": "build service applications and so today we're going to do some fun things",
    "start": "18690",
    "end": "23730"
  },
  {
    "text": "building a web application to request unicorns in case you think it's kind of",
    "start": "23730",
    "end": "29789"
  },
  {
    "text": "boring to request cars through applications these days this sounds awesome so this is my favorite topic",
    "start": "29789",
    "end": "35880"
  },
  {
    "text": "ever if you didn't know this herbalist is my one true love also I'm Nikki you can find me on Twitch",
    "start": "35880",
    "end": "42110"
  },
  {
    "text": "majority of the time I'm an evangelist AWS and I love featuring startups that's",
    "start": "42110",
    "end": "50039"
  },
  {
    "text": "like my thing so stacker is doing some really cool things and I'm excited for Chase to show you all today yeah so",
    "start": "50039",
    "end": "56670"
  },
  {
    "text": "today we're gonna really look at what it means to build a service application and",
    "start": "56670",
    "end": "62129"
  },
  {
    "text": "to end one of the interesting things about service is that it's a it's this",
    "start": "62129",
    "end": "67530"
  },
  {
    "text": "new way of building applications if you're used to building monolithic",
    "start": "67530",
    "end": "73110"
  },
  {
    "text": "applications where you've got an application server that may be load",
    "start": "73110",
    "end": "78270"
  },
  {
    "text": "balanced across a cluster of servers in a data center somewhere or in the AWS cloud you still have this one idea this",
    "start": "78270",
    "end": "86159"
  },
  {
    "text": "one concept of an application and in a service world everything is broken down",
    "start": "86159",
    "end": "91409"
  },
  {
    "text": "into these micro services and so there's questions around how do you actually build applications that are comprised of",
    "start": "91409",
    "end": "99960"
  },
  {
    "text": "all of these little Lego blocks that AWS has done an amazing job of providing",
    "start": "99960",
    "end": "105240"
  },
  {
    "text": "when we think of lambda for compute we think of dynamic DB tables for storing",
    "start": "105240",
    "end": "111600"
  },
  {
    "text": "data in a horizontally scalable fashion when we think of API interfaces like API",
    "start": "111600",
    "end": "118110"
  },
  {
    "text": "gateway front end web hosting Amazon has",
    "start": "118110",
    "end": "123240"
  },
  {
    "text": "all of these amazing resources and now it's our turn to figure out how do we",
    "start": "123240",
    "end": "129000"
  },
  {
    "text": "piece them together to build amazing application awesome so how should we start so we",
    "start": "129000",
    "end": "137020"
  },
  {
    "text": "should talk about one who should be watching so what level of developer technical expertise they need to have",
    "start": "137020",
    "end": "142870"
  },
  {
    "text": "follow along with everything you're gonna do today yeah so we're actually gonna go from the beginning as we're",
    "start": "142870",
    "end": "149110"
  },
  {
    "text": "building an application so anyone at any level should be able to follow along and be able to sort of understand some of",
    "start": "149110",
    "end": "157000"
  },
  {
    "text": "the concepts any code that we're looking at today we're gonna be building and",
    "start": "157000",
    "end": "162099"
  },
  {
    "text": "discussing how it is built up and why we make the choices we make and the awesome",
    "start": "162099",
    "end": "168370"
  },
  {
    "text": "part is some of the most complex parts of building an application are how to make it high availability how to make it",
    "start": "168370",
    "end": "174069"
  },
  {
    "text": "highly scalable how to do things like properly encrypt data that are",
    "start": "174069",
    "end": "179739"
  },
  {
    "text": "credentials API keys and we get to rely on AWS having solved that for us so we",
    "start": "179739",
    "end": "185620"
  },
  {
    "text": "don't even have to dive into super complex algorithms in order to build a great web application this is awesome ok",
    "start": "185620",
    "end": "194650"
  },
  {
    "text": "and is there a github that they can be looking at oh yes I just got a",
    "start": "194650",
    "end": "200489"
  },
  {
    "text": "notification that the camera is a little bit off yeah so while that's getting",
    "start": "200489",
    "end": "205959"
  },
  {
    "text": "sorted out if you go to github.com slash stacker e slash wild - rides ry des -",
    "start": "205959",
    "end": "217959"
  },
  {
    "text": "workshop you'll see it I'm going to post right now the link inside of the the",
    "start": "217959",
    "end": "223180"
  },
  {
    "text": "chatroom [Music]",
    "start": "223180",
    "end": "226819"
  },
  {
    "text": "I'm fixing it you guys I'm making it better",
    "start": "230130",
    "end": "234799"
  },
  {
    "text": "all right and you know while she's doing that this workshop we're gonna kind of",
    "start": "238730",
    "end": "243870"
  },
  {
    "text": "walk through some of it live here today but it's a it's a great if you like what",
    "start": "243870",
    "end": "250080"
  },
  {
    "text": "you're seeing here you want to do it yourself you'll be able to do that if you have a friend who didn't get an",
    "start": "250080",
    "end": "257070"
  },
  {
    "text": "opportunity to take a few hours to watch us today you can share it with them and",
    "start": "257070",
    "end": "263240"
  },
  {
    "text": "it's built so that people can do it at their own pace and learn these concepts",
    "start": "263240",
    "end": "272000"
  },
  {
    "text": "awesome so I'm gonna post the github to what he's talking about in the chat right now",
    "start": "272810",
    "end": "278550"
  },
  {
    "text": "and then also we just want to encourage audience like interactivity ask questions as you go feel free to",
    "start": "278550",
    "end": "285990"
  },
  {
    "text": "interrupt any time I will be watching the chat the entire time he's got the chat up as well so please feel free to",
    "start": "285990",
    "end": "292680"
  },
  {
    "text": "interrupt as we're going through so there's the github okay so today's goals",
    "start": "292680",
    "end": "299160"
  },
  {
    "text": "as he said is to build a simple serverless application called wild rags which allows you to request your horns",
    "start": "299160",
    "end": "306240"
  },
  {
    "text": "yes yes and so we're gonna cover the able us architecture involved and how to",
    "start": "306240",
    "end": "311640"
  },
  {
    "text": "do this yourself so please walk us through the architecture what yeah one of the",
    "start": "311640",
    "end": "318420"
  },
  {
    "text": "interesting things about building service applications is that AWS has all of these pieces that make it easy for",
    "start": "318420",
    "end": "324840"
  },
  {
    "text": "you to put them together to have a scalable high availability system but",
    "start": "324840",
    "end": "330450"
  },
  {
    "text": "you have to know how to put it how to actually combine them in the right ways so what I've got on my screen here yes",
    "start": "330450",
    "end": "341330"
  },
  {
    "text": "so what I've got on my screen here you may be starting from a standpoint of a",
    "start": "342020",
    "end": "347580"
  },
  {
    "text": "nudist service development what does it look like to to do this kind of development you're familiar with your",
    "start": "347580",
    "end": "353940"
  },
  {
    "text": "tools like git provider that could be AWS code commit or",
    "start": "353940",
    "end": "359960"
  },
  {
    "text": "bit buckets it could be your favorite IDE",
    "start": "360020",
    "end": "365140"
  },
  {
    "text": "function code you'll be writing and probably aware that server less involves lambda and you know you may already have",
    "start": "365140",
    "end": "372350"
  },
  {
    "text": "a CI CD solution that you want to put into this but as you start to embrace",
    "start": "372350",
    "end": "378580"
  },
  {
    "text": "and learn more about service development you realized a lot of it is based on starting with infrastructures code at",
    "start": "378580",
    "end": "385100"
  },
  {
    "text": "first and so ABS has a great framework called the simplest application model or",
    "start": "385100",
    "end": "390350"
  },
  {
    "text": "Sam damn family squirrel yes exactly and once you start to build that",
    "start": "390350",
    "end": "397480"
  },
  {
    "text": "infrastructure as code piece now you've got questions of how do I deploy this well you deploy it through",
    "start": "397480",
    "end": "402890"
  },
  {
    "text": "CloudFormation which is another AWS service that provisions all of your infrastructure and so now you can start",
    "start": "402890",
    "end": "409610"
  },
  {
    "text": "to see that using your credentials logging into the management console and your AWS account you start to ask",
    "start": "409610",
    "end": "415010"
  },
  {
    "text": "questions around how do I manage parameterization so we'll see in this example if you need to hit one API in a",
    "start": "415010",
    "end": "422450"
  },
  {
    "text": "certain environment and a different API in a different environment how do you parameterize that in your application",
    "start": "422450",
    "end": "427780"
  },
  {
    "text": "select environment variables and also just like secrets that you need to keep safe exactly so you might find that it",
    "start": "427780",
    "end": "435080"
  },
  {
    "text": "can be a secrets manager is a great great place to store stuff that's highly confidential you need to make sure it's",
    "start": "435080",
    "end": "441200"
  },
  {
    "text": "encrypted at rest that you're accessing it in a way that's secure then lastly",
    "start": "441200",
    "end": "447350"
  },
  {
    "text": "there's a question of how do you package this all up so that you can ship it to",
    "start": "447350",
    "end": "452780"
  },
  {
    "text": "your AWS account both the functions and the CloudFormation templates and once",
    "start": "452780",
    "end": "458720"
  },
  {
    "text": "you deploy this there's a question of how I monitor this how do I operate it so X ray from AWS Club traces CloudWatch",
    "start": "458720",
    "end": "468110"
  },
  {
    "text": "logs these are great tools for managing how how you the metrics and the data",
    "start": "468110",
    "end": "474200"
  },
  {
    "text": "that you're getting about how your application is performing and once you've gotten to that stuff maybe you've",
    "start": "474200",
    "end": "480260"
  },
  {
    "text": "deployed this out to a staging environment or your own developer environment the next question is how do",
    "start": "480260",
    "end": "485960"
  },
  {
    "text": "I replicate this across all- AWS account in different AWS in different environments",
    "start": "485960",
    "end": "492570"
  },
  {
    "text": "so that's kind of what we're going to be looking at today is how you go and piece",
    "start": "492570",
    "end": "498660"
  },
  {
    "text": "together the parts of the AWS provides as these building blocks how you tie",
    "start": "498660",
    "end": "505590"
  },
  {
    "text": "them all together which it looks crazy in all of this but as you'll see when we use stacker II it actually goes through",
    "start": "505590",
    "end": "512400"
  },
  {
    "text": "and it smooths all this out into a great workflow I'm really excited to see that",
    "start": "512400",
    "end": "517620"
  },
  {
    "text": "so should we get started yeah let's do it all right also here you're gonna be using my",
    "start": "517620",
    "end": "523950"
  },
  {
    "text": "favorite first editor Visual Studio code yes yes and so really quick just in case",
    "start": "523950",
    "end": "531480"
  },
  {
    "text": "anyone is curious this is the wild rise app we are creating so this is not the",
    "start": "531480",
    "end": "538260"
  },
  {
    "text": "one we will create we will create that and show that but I just love this application actually I must give credit",
    "start": "538260",
    "end": "543900"
  },
  {
    "text": "where credit is due AWS created this tutorial and they show",
    "start": "543900",
    "end": "550950"
  },
  {
    "text": "how to do it by sort of pointing and clicking through the management console and here today using staff room we're",
    "start": "550950",
    "end": "558210"
  },
  {
    "text": "going to learn how to build this using infrastructures code to make this repeatable and warm across environments",
    "start": "558210",
    "end": "565100"
  },
  {
    "text": "so this is stacker e here you know",
    "start": "565100",
    "end": "571680"
  },
  {
    "text": "Stafford by the way is a tool that encompasses all these workflows if",
    "start": "571680",
    "end": "577590"
  },
  {
    "text": "you're interested you could even follow along today as we're building this application you can sign up there's a",
    "start": "577590",
    "end": "583620"
  },
  {
    "text": "free to you sign up link for you all thank you yeah there's a there's a free tier so you can sign up you get six",
    "start": "583620",
    "end": "590910"
  },
  {
    "text": "stacks that you can deploy in across your AWS accounts for free after that we",
    "start": "590910",
    "end": "597150"
  },
  {
    "text": "make it easy to either pay per extra",
    "start": "597150",
    "end": "602790"
  },
  {
    "text": "stack or per developer on your team I've got lots of ways to help you but the",
    "start": "602790",
    "end": "608460"
  },
  {
    "text": "best part is that staffers are great way to learn server list and you don't gonna have to pay up front for your",
    "start": "608460",
    "end": "613850"
  },
  {
    "text": "first few applications six applications yeah yeah so I'm gonna use our demo",
    "start": "613850",
    "end": "619640"
  },
  {
    "text": "account inside of stacker II today and we're gonna get started by creating a",
    "start": "619640",
    "end": "624800"
  },
  {
    "text": "new stack so I'm going to create it inside of github alright and we're gonna",
    "start": "624800",
    "end": "640520"
  },
  {
    "text": "close code the e-ring today will also be live on be yes so I'm",
    "start": "640520",
    "end": "646010"
  },
  {
    "text": "gonna call it wild rides or should I call it new why it's live live wild",
    "start": "646010",
    "end": "653990"
  },
  {
    "text": "rides live and we'll put it in the stack reorganisation right so well this is",
    "start": "653990",
    "end": "663290"
  },
  {
    "text": "actually referring to the github organization Oh people yeah they've got their personal one this is mine txa SE",
    "start": "663290",
    "end": "669550"
  },
  {
    "text": "in org so we support co commit bit",
    "start": "669550",
    "end": "675380"
  },
  {
    "text": "buckets yeah on Prem in the cloud anywhere",
    "start": "675380",
    "end": "683690"
  },
  {
    "text": "you've got your gate code that we support it and so we're gonna create a public project here starting from a",
    "start": "683690",
    "end": "689839"
  },
  {
    "text": "blank canvas it's going to add that that stack don't give it a second",
    "start": "689839",
    "end": "696040"
  },
  {
    "text": "right now we're creating the scaffold inside of a new gate repository so if I",
    "start": "696040",
    "end": "702620"
  },
  {
    "text": "click into the git repository here we'll see that you know we've got a pretty",
    "start": "702620",
    "end": "708080"
  },
  {
    "text": "basic and empty template effectively I create a repo for you created a repo",
    "start": "708080",
    "end": "713450"
  },
  {
    "text": "created this is a Sam or CloudFormation template and it's basically empty and",
    "start": "713450",
    "end": "722209"
  },
  {
    "text": "it's ready for us to consume so I'm gonna grab the link Sam by the way in case you missus",
    "start": "722209",
    "end": "728460"
  },
  {
    "text": "it's an extension of CloudFormation is specifically for service so it's a way to write infrastructure is code but",
    "start": "728460",
    "end": "734700"
  },
  {
    "text": "specifically for serverless applications yeah all those pieces that you need yeah",
    "start": "734700",
    "end": "740040"
  },
  {
    "text": "so I grabbed a link to the git repository and I am going to clone that",
    "start": "740040",
    "end": "745770"
  },
  {
    "text": "through Visual Studio code amazing it's",
    "start": "745770",
    "end": "752310"
  },
  {
    "text": "just you command plus a little bit yes great all right so you know we've got",
    "start": "752310",
    "end": "760770"
  },
  {
    "text": "that that same application we were just looking at and we're gonna start building our app so the first thing",
    "start": "760770",
    "end": "771180"
  },
  {
    "text": "we're gonna do we've got our template here yep and if you go into Visual",
    "start": "771180",
    "end": "776910"
  },
  {
    "text": "Studio code and you can find we have this extension here we're going to use",
    "start": "776910",
    "end": "782310"
  },
  {
    "text": "this heavily you can install this again all free thank you and we're gonna use",
    "start": "782310",
    "end": "792990"
  },
  {
    "text": "that here to open up our template in a",
    "start": "792990",
    "end": "798620"
  },
  {
    "text": "canvas inside of Visual Studio code Wow so one second so instead of going to",
    "start": "798620",
    "end": "807180"
  },
  {
    "text": "write that JSON you're gonna do some drag-and-drop stuff exactly exactly yeah",
    "start": "807180",
    "end": "814230"
  },
  {
    "text": "we've got an empty template here and we need to start building our application right so first thing we need to do is we",
    "start": "814230",
    "end": "823800"
  },
  {
    "text": "need to add ourselves a is three buckets",
    "start": "823800",
    "end": "829820"
  },
  {
    "text": "we're gonna use a function soon but as we build a single page web application",
    "start": "829820",
    "end": "836190"
  },
  {
    "text": "the first thing we need to do is have a place where we can store our static front-end contents yep we can we can",
    "start": "836190",
    "end": "843420"
  },
  {
    "text": "host this problem so I'm gonna call this front-end con things",
    "start": "843420",
    "end": "849980"
  },
  {
    "text": "so what I'm doing here is I'm specifying what's called a CloudFormation logical",
    "start": "849980",
    "end": "855450"
  },
  {
    "text": "ID and so fact that reminds me let me do",
    "start": "855450",
    "end": "860610"
  },
  {
    "text": "a split screen here and I'm gonna drag this template over into alright so sorry",
    "start": "860610",
    "end": "873180"
  },
  {
    "text": "that was a little disorienting but I got this daiquiri canvas here and we'll see that I already dragged in",
    "start": "873180",
    "end": "879000"
  },
  {
    "text": "the s3 bucket but it dragged it in with",
    "start": "879000",
    "end": "885630"
  },
  {
    "text": "a fairly opaque object store identifier we're also going to change that to front",
    "start": "885630",
    "end": "892980"
  },
  {
    "text": "and content and enable web site hosting and as we save this will see that our template is not dating that's so cool",
    "start": "892980",
    "end": "899579"
  },
  {
    "text": "so now we need to add a function this",
    "start": "899579",
    "end": "905880"
  },
  {
    "text": "function has a very specific purpose it is gonna populate the front end content",
    "start": "905880",
    "end": "914760"
  },
  {
    "text": "just three bucket so we're actually gonna copy some source code that is our",
    "start": "914760",
    "end": "920070"
  },
  {
    "text": "static assets for the web application into this function when this function is",
    "start": "920070",
    "end": "926029"
  },
  {
    "text": "invoked which we'll see in a minute it'll be invoked every time we deploy our sack that's going to cause it to",
    "start": "926029",
    "end": "933750"
  },
  {
    "text": "copy all of that source code into that front end so it's part of the CICE",
    "start": "933750",
    "end": "940050"
  },
  {
    "text": "pipeline essentially yeah it's that's one way to put it yeah and so I'm gonna come down to here will",
    "start": "940050",
    "end": "945720"
  },
  {
    "text": "say trigger on first apply and trigger on every deploy we'll save this and",
    "start": "945720",
    "end": "952339"
  },
  {
    "text": "we'll create a wire from our function to the s3 bucket Wow",
    "start": "952339",
    "end": "959459"
  },
  {
    "text": "so what that did under the covers is it added a permission here this is called a",
    "start": "959459",
    "end": "966360"
  },
  {
    "text": "Sam policy template so it already adds I am permissions for that lambda to be",
    "start": "966360",
    "end": "972000"
  },
  {
    "text": "able to have access to that bucket exactly and we added environment",
    "start": "972000",
    "end": "977970"
  },
  {
    "text": "variables so that in our source code we can easily access these environment variables to find out what is the actual",
    "start": "977970",
    "end": "984839"
  },
  {
    "text": "s3 bucket name that we have deployed out guide so you don't have to save it as",
    "start": "984839",
    "end": "990589"
  },
  {
    "text": "like a variable inside of the function and you can just write exactly so as we",
    "start": "990589",
    "end": "995940"
  },
  {
    "text": "write our code we'll see we'll see how that works all right so I'm gonna save this and I think the the next thing",
    "start": "995940",
    "end": "1004490"
  },
  {
    "text": "we're gonna do is we're gonna start to write some code for this one of the things that is key when you have a",
    "start": "1004490",
    "end": "1011060"
  },
  {
    "text": "function that is going to be invoked on every deployment that's done by having",
    "start": "1011060",
    "end": "1018500"
  },
  {
    "text": "CloudFormation trigger that function but when you have CloudFormation trigger",
    "start": "1018500",
    "end": "1023510"
  },
  {
    "text": "that function you have to be able to respond back to CloudFormation that this",
    "start": "1023510",
    "end": "1028610"
  },
  {
    "text": "function succeeded or failed or whatever otherwise CloudFormation kind of hangs it's waiting for some kind of response",
    "start": "1028610",
    "end": "1035630"
  },
  {
    "text": "and it'll wait for up to an hour and this is not a long enough live stream",
    "start": "1035630",
    "end": "1041630"
  },
  {
    "text": "for us to wait around for an hour for it to type know so that's the first thing we're going to tackle is how can we",
    "start": "1041630",
    "end": "1047209"
  },
  {
    "text": "write the source code for this function so that we can respond back to",
    "start": "1047209",
    "end": "1054100"
  },
  {
    "text": "CloudFormation so we have our and we added that function it added this",
    "start": "1054100",
    "end": "1060650"
  },
  {
    "text": "populate front end content directory and so I it's got this guy exactly that",
    "start": "1060650",
    "end": "1070130"
  },
  {
    "text": "pulls from like a sound template for no it's it's just the standard anytime",
    "start": "1070130",
    "end": "1075970"
  },
  {
    "text": "there's a slight slight tweak to this but this is just a standard style of",
    "start": "1075970",
    "end": "1081710"
  },
  {
    "text": "nodejs based function that you would write for lambda we add this as one line",
    "start": "1081710",
    "end": "1089270"
  },
  {
    "text": "to specifically log the events that we received and the reason for that is",
    "start": "1089270",
    "end": "1095870"
  },
  {
    "text": "through stacker e we have functionality where you can say go grab the last message that was used to invoke this",
    "start": "1095870",
    "end": "1102710"
  },
  {
    "text": "function you can save that in different file and then later on rather",
    "start": "1102710",
    "end": "1107909"
  },
  {
    "text": "than waiting for a full deployment process to take place we can reinvest a",
    "start": "1107909",
    "end": "1114840"
  },
  {
    "text": "function locally hitting third-party hitting the real resources in the AWS",
    "start": "1114840",
    "end": "1121200"
  },
  {
    "text": "cloud but with that that event that we saw from a real invocation we're",
    "start": "1121200",
    "end": "1127710"
  },
  {
    "text": "actually going to see some of this in a little bit so was there a way to create the scaffolding when you out of the",
    "start": "1127710",
    "end": "1133200"
  },
  {
    "text": "function for a different language or you know matically just choosing this one I'm curious yeah I can come into here",
    "start": "1133200",
    "end": "1139649"
  },
  {
    "text": "and we'll add a second function when you added the function you chose the languages change back to that core make",
    "start": "1139649",
    "end": "1149820"
  },
  {
    "text": "sense I can save that and we'll see that now of course you know live demos it",
    "start": "1149820",
    "end": "1158099"
  },
  {
    "text": "didn't quite up there in West Adams wrong but yes it will scaffold out in",
    "start": "1158099",
    "end": "1164070"
  },
  {
    "text": "the language that's appropriate to you oh and then it just removes it and lets",
    "start": "1164070",
    "end": "1169499"
  },
  {
    "text": "you delete it yeah and it all gets stored inside of a trash folder so you never have to worry about the stuff",
    "start": "1169499",
    "end": "1176340"
  },
  {
    "text": "you're doing getting lost as well you accidentally delete yeah exactly",
    "start": "1176340",
    "end": "1181399"
  },
  {
    "text": "so we've got this scaffold of a function and the first thing we need is a helpful",
    "start": "1181399",
    "end": "1189330"
  },
  {
    "text": "module that's going to make it easy for us to respond back to confirmation so if",
    "start": "1189330",
    "end": "1197309"
  },
  {
    "text": "I you know as a regular developer I need a node.js module actually NPM is a great",
    "start": "1197309",
    "end": "1207450"
  },
  {
    "text": "way to search for the node package manager NPM and I'll say CloudFormation",
    "start": "1207450",
    "end": "1214159"
  },
  {
    "text": "response and I know of one in particular",
    "start": "1214159",
    "end": "1220590"
  },
  {
    "text": "that I've used in the past and of course it's not first ones I find we're gonna pretend",
    "start": "1220590",
    "end": "1226880"
  },
  {
    "text": "it's this one and I'm just gonna find the one that I know works great actually",
    "start": "1226880",
    "end": "1233600"
  },
  {
    "text": "maybe it was this one looks like there's",
    "start": "1233600",
    "end": "1240200"
  },
  {
    "text": "a couple of different ones let me pull up my notes real quick make sure I don't",
    "start": "1240200",
    "end": "1245870"
  },
  {
    "text": "want to waste too much time just figuring out which exact module so I'm gonna pull up some notes while he's",
    "start": "1245870",
    "end": "1254390"
  },
  {
    "text": "doing that if you're just joining and you missed the beginning this is chase from Zachary and he's showing us how to",
    "start": "1254390",
    "end": "1260420"
  },
  {
    "text": "use Zachary to build a complete server list application really easily using Visual Studio code with these staggering",
    "start": "1260420",
    "end": "1268090"
  },
  {
    "text": "sentences and all we've done so far is create an s3 bucket and a lambda",
    "start": "1268090",
    "end": "1273110"
  },
  {
    "text": "function alright so CloudFormation works great",
    "start": "1273110",
    "end": "1283630"
  },
  {
    "text": "alright so I found the package that I want to use don't know we have to install it now we gotta go install it so",
    "start": "1283630",
    "end": "1290270"
  },
  {
    "text": "I'm gonna drop into my populate front-end content directory and I'm",
    "start": "1290270",
    "end": "1296179"
  },
  {
    "text": "gonna do NPM install",
    "start": "1296179",
    "end": "1299710"
  },
  {
    "text": "CFN custom resource Wow",
    "start": "1303850",
    "end": "1310070"
  },
  {
    "text": "from memory will dull check that CFN custom resource there we go",
    "start": "1310070",
    "end": "1316399"
  },
  {
    "text": "alright so now we've got that package it's specified in my package Jason which",
    "start": "1316399",
    "end": "1322070"
  },
  {
    "text": "is key because when we go to deploy this function into the cloud we need to be",
    "start": "1322070",
    "end": "1327230"
  },
  {
    "text": "make sure that it's going to install this function again at deployment time",
    "start": "1327230",
    "end": "1332830"
  },
  {
    "text": "so I've got got that scaffold in now we will pull this in alright and we're",
    "start": "1332830",
    "end": "1353809"
  },
  {
    "text": "gonna say just to start out we're gonna have a lot of logic but we want to capture any errors that might occur",
    "start": "1353809",
    "end": "1359779"
  },
  {
    "text": "so first we'll just say we succeeded",
    "start": "1359779",
    "end": "1365809"
  },
  {
    "text": "we'll just have a simple log statement okay and we'll have an area where we've",
    "start": "1365809",
    "end": "1371059"
  },
  {
    "text": "captured an error if an error occurs I love this yeah and so what we need to do",
    "start": "1371059",
    "end": "1378080"
  },
  {
    "text": "is we need to do a CF n response let's",
    "start": "1378080",
    "end": "1383090"
  },
  {
    "text": "look at our docs for CFM response so we'll do CFM response dot send",
    "start": "1383090",
    "end": "1390769"
  },
  {
    "text": "success so when you deploy this stack",
    "start": "1390769",
    "end": "1396830"
  },
  {
    "text": "already confirmation is automatically and I've built this lambda and then we're saving it and ability to okay and",
    "start": "1396830",
    "end": "1408980"
  },
  {
    "text": "so what we've done here is we've said when we get to this line of code we've",
    "start": "1408980",
    "end": "1414499"
  },
  {
    "text": "succeeded so we respond back to CloudFormation saying that we create it we've got this",
    "start": "1414499",
    "end": "1421309"
  },
  {
    "text": "custom resource called populate for an end content there's no extra data that we are needing to tell about from",
    "start": "1421309",
    "end": "1427600"
  },
  {
    "text": "about and the event is a way that we can pass through to this module the data it",
    "start": "1427600",
    "end": "1433690"
  },
  {
    "text": "needs to actually tell CloudFormation about the status if we fail we'll log",
    "start": "1433690",
    "end": "1443260"
  },
  {
    "text": "our error and we will send a failure",
    "start": "1443260",
    "end": "1452380"
  },
  {
    "text": "back to cloud formation which is in the logs yeah we'll just do the error",
    "start": "1452380",
    "end": "1459510"
  },
  {
    "text": "message in the event so now we've got",
    "start": "1459510",
    "end": "1467679"
  },
  {
    "text": "the scaffold of a function that won't really do anything for us but we know",
    "start": "1467679",
    "end": "1472750"
  },
  {
    "text": "that it will at least tell confirmation that it's run successfully but we need",
    "start": "1472750",
    "end": "1477909"
  },
  {
    "text": "this function to actually update the bucket before a telescope yeah so the",
    "start": "1477909",
    "end": "1486789"
  },
  {
    "text": "first step let's just make sure that this function is so I could deploy this",
    "start": "1486789",
    "end": "1492070"
  },
  {
    "text": "out to cloud information and take a couple of minutes and see if that works but with stacker II we've got a great",
    "start": "1492070",
    "end": "1499809"
  },
  {
    "text": "mechanism to do this a little bit faster on our own laptop okay yeah so the first",
    "start": "1499809",
    "end": "1506980"
  },
  {
    "text": "step the first thing I need to do because the way that we do a local invocation is we us we invoke your",
    "start": "1506980",
    "end": "1515559"
  },
  {
    "text": "function in an extremely real world type",
    "start": "1515559",
    "end": "1521710"
  },
  {
    "text": "of context like a record container that simulates yeah exactly so that's one",
    "start": "1521710",
    "end": "1527169"
  },
  {
    "text": "piece and then there's two more pieces that we need to make sure we have one is that it's using the same permissions as",
    "start": "1527169",
    "end": "1533890"
  },
  {
    "text": "the function would be running if it were in lambda right and that it has the same",
    "start": "1533890",
    "end": "1540220"
  },
  {
    "text": "environment variables because we we talked about how in our template here we",
    "start": "1540220",
    "end": "1547210"
  },
  {
    "text": "have environment variables that have the name of the bucket yeah so we need to make sure we have that information so to",
    "start": "1547210",
    "end": "1553539"
  },
  {
    "text": "get to this point we need to actually deploy this basic",
    "start": "1553539",
    "end": "1559820"
  },
  {
    "text": "just for local women just uh yeah well it actually is going to deploy all the way through to the cloud to actually",
    "start": "1559820",
    "end": "1566659"
  },
  {
    "text": "create that lambda function so I'm gonna say stack redeploy I'm going to pick a",
    "start": "1566659",
    "end": "1572119"
  },
  {
    "text": "strategy there's a couple of different strategies and the main ones are am I going to build and execute this",
    "start": "1572119",
    "end": "1579320"
  },
  {
    "text": "deployment from my laptop or am I going to use code build in my AWS account and",
    "start": "1579320",
    "end": "1584570"
  },
  {
    "text": "just to make things fast we'll do it locally today and I'm going to deploy into our development environments and so",
    "start": "1584570",
    "end": "1592940"
  },
  {
    "text": "if I have everything set yes so if",
    "start": "1592940",
    "end": "1607429"
  },
  {
    "text": "you're just joining us we are joined by the amazing CTO of stacker II chase and",
    "start": "1607429",
    "end": "1613369"
  },
  {
    "text": "he's showing us how did he start free to build a surrealist application and and and all we've done so far is create an",
    "start": "1613369",
    "end": "1620269"
  },
  {
    "text": "s3 bucket using the vs code extension as well as a function and now he's deploying it to test to see if that",
    "start": "1620269",
    "end": "1626840"
  },
  {
    "text": "works yeah so we have we built our function",
    "start": "1626840",
    "end": "1633679"
  },
  {
    "text": "and ran what this does the stack redeploy processes it runs the Sam build",
    "start": "1633679",
    "end": "1639679"
  },
  {
    "text": "command part of the Sam CLI suite that AWS has created to package up all the",
    "start": "1639679",
    "end": "1645200"
  },
  {
    "text": "functions we only have one and it's a node function but that's what it's doing here and then it's uploading all of that",
    "start": "1645200",
    "end": "1651169"
  },
  {
    "text": "to s3 it's uploading something called a cloud formation change set to AWS as",
    "start": "1651169",
    "end": "1658460"
  },
  {
    "text": "well and this is the description that Sam template it's a description of all the resources that are necessary that",
    "start": "1658460",
    "end": "1665359"
  },
  {
    "text": "are created mm-hmm and so now we are deploying that out we see that it's it's",
    "start": "1665359",
    "end": "1672470"
  },
  {
    "text": "creating the stack in fact if we wanted to we could hop over into the management",
    "start": "1672470",
    "end": "1682249"
  },
  {
    "text": "console so when you created the stack in the stacker account",
    "start": "1682249",
    "end": "1687700"
  },
  {
    "text": "it didn't actually send anything to confirmation yet did it noticed it yeah until you did stock redeploy mm-hmm yep",
    "start": "1687700",
    "end": "1694960"
  },
  {
    "text": "and so we're creating here and you know live demo fingers crossed this actually",
    "start": "1694960",
    "end": "1701350"
  },
  {
    "text": "you know this is the first step if we actually if I get through this part this is the most one of the most complex",
    "start": "1701350",
    "end": "1709240"
  },
  {
    "text": "parts I know thank you it completed and",
    "start": "1709240",
    "end": "1720460"
  },
  {
    "text": "in fact we see here this was the this populate front-end content deploy trigger that's where it called our",
    "start": "1720460",
    "end": "1726490"
  },
  {
    "text": "function and our function successfully responded back to CloudFormation that triggered this creation it was only on",
    "start": "1726490",
    "end": "1735700"
  },
  {
    "text": "for a month yeah it's great there gonna be a lot of change yeah so this staff deployed out",
    "start": "1735700",
    "end": "1742210"
  },
  {
    "text": "once which is the first step that we needed now we have an actual lambda",
    "start": "1742210",
    "end": "1747880"
  },
  {
    "text": "function with environment variables and permissions set up yeah if we were to go",
    "start": "1747880",
    "end": "1753550"
  },
  {
    "text": "into stachy and we were to look at what we've actually deployed we'd be able to",
    "start": "1753550",
    "end": "1759610"
  },
  {
    "text": "jump into the AWS console for that function and we'd see as it comes up",
    "start": "1759610",
    "end": "1770130"
  },
  {
    "text": "we see we've got our environment variables yeah exactly the the bucket name the we see the permissions here's",
    "start": "1771040",
    "end": "1782740"
  },
  {
    "text": "all those s3 permissions that we talked about yeah that we now have access and",
    "start": "1782740",
    "end": "1787960"
  },
  {
    "text": "one of the key things is that as you're creating permissions you need to make sure that you scope everything down",
    "start": "1787960",
    "end": "1793000"
  },
  {
    "text": "nicely there's a lot of tutorials you might find out there certainly not in the AWS Doc's but at least right control",
    "start": "1793000",
    "end": "1802450"
  },
  {
    "text": "so right here this function only needs to write write and so you know we've got",
    "start": "1802450",
    "end": "1809890"
  },
  {
    "text": "some abilities to list the bucket and get objects if we need it to but it's",
    "start": "1809890",
    "end": "1815380"
  },
  {
    "text": "also right but the key thing is that it is only to this one bucket yep it's not",
    "start": "1815380",
    "end": "1821620"
  },
  {
    "text": "to every bucket in our account so now we've got a function that we've deployed",
    "start": "1821620",
    "end": "1827260"
  },
  {
    "text": "out we can start to do some fun things with local development thing fun things",
    "start": "1827260",
    "end": "1834210"
  },
  {
    "text": "so I'm gonna call this is gonna be",
    "start": "1834210",
    "end": "1843580"
  },
  {
    "text": "similar to like Sam local so actually stack a local invoke call Sam local",
    "start": "1843580",
    "end": "1850000"
  },
  {
    "text": "gotta covers it just adds an extra layer where we're going out and we are it's",
    "start": "1850000",
    "end": "1855010"
  },
  {
    "text": "called assuming the I am role of the function so that we're using the same permissions so I don't even get",
    "start": "1855010",
    "end": "1861580"
  },
  {
    "text": "permissions errors locally exactly so if you mess up your permissions you don't have to wait till it's been deployed to",
    "start": "1861580",
    "end": "1867820"
  },
  {
    "text": "find out that the permissions were messed up you can actually do a local invocation and test that and it goes out",
    "start": "1867820",
    "end": "1874000"
  },
  {
    "text": "and it gets the current environment variables of that function awesome so there are certain things that Sam",
    "start": "1874000",
    "end": "1879340"
  },
  {
    "text": "local invoke can't resolve in those environment variables but this mechanism we just go out and ask well what's",
    "start": "1879340",
    "end": "1886120"
  },
  {
    "text": "actually been deployed for this environment and we use those values also sometimes",
    "start": "1886120",
    "end": "1891190"
  },
  {
    "text": "the permission tears right and so trying",
    "start": "1891190",
    "end": "1897580"
  },
  {
    "text": "to think watch our rights what is watch so what watch does is it says don't just invoke",
    "start": "1897580",
    "end": "1904060"
  },
  {
    "text": "this once watch the files in my in my source",
    "start": "1904060",
    "end": "1909370"
  },
  {
    "text": "directory and if any of them change it again ah this is really cool yeah so this will spin things up oh I just",
    "start": "1909370",
    "end": "1916990"
  },
  {
    "text": "realize if I need to update my miss daiquiri CLI as this is a live demo I'm not gonna tell the girl your stackers",
    "start": "1916990",
    "end": "1922750"
  },
  {
    "text": "GOI is out of these yes oh and I forgot about one thing I need to update quick",
    "start": "1922750",
    "end": "1931380"
  },
  {
    "text": "these are just some default values that",
    "start": "1931380",
    "end": "1936760"
  },
  {
    "text": "are used by the CLI so I don't have to",
    "start": "1936760",
    "end": "1942310"
  },
  {
    "text": "specify it on every command so I hope",
    "start": "1942310",
    "end": "1949240"
  },
  {
    "text": "they did that and we should be able to see now that it's going to invoke it",
    "start": "1949240",
    "end": "1954490"
  },
  {
    "text": "yeah so here it's first in consuming that I enroll and now it is it's",
    "start": "1954490",
    "end": "1968920"
  },
  {
    "text": "basically it's quick from there we see succeeded and this was the event we",
    "start": "1968920",
    "end": "1974260"
  },
  {
    "text": "handed it which is nothing and this last critical thing is simply",
    "start": "1974260",
    "end": "1980700"
  },
  {
    "text": "we invoked it without a proper CloudFormation message and so when we",
    "start": "1980700",
    "end": "1986620"
  },
  {
    "text": "try to respond back it's like i don't know how to respond back to CloudFormation so we can just ignore",
    "start": "1986620",
    "end": "1991720"
  },
  {
    "text": "that for right now so we have the scaffolding to start coding let's start",
    "start": "1991720",
    "end": "1998710"
  },
  {
    "text": "coding okay so we gotta make this function right to the s3 bucket exactly",
    "start": "1998710",
    "end": "2003960"
  },
  {
    "text": "so we're not going to take the time to write all of our static assets today we're going to assume that you have some",
    "start": "2003960",
    "end": "2010680"
  },
  {
    "text": "amazing other engineers on your team who can create that for you",
    "start": "2010680",
    "end": "2015750"
  },
  {
    "text": "so I've got that in directory that I'm just gonna copy what",
    "start": "2015750",
    "end": "2024730"
  },
  {
    "text": "is it like a react app or we'll take a",
    "start": "2024730",
    "end": "2031420"
  },
  {
    "text": "look I'm just curious curiosity yeah all right so I copy I",
    "start": "2031420",
    "end": "2037000"
  },
  {
    "text": "copied it into this static folder and saying we go to the ride HTML it might",
    "start": "2037000",
    "end": "2058120"
  },
  {
    "text": "be straight-up coded yeah oh here we go we got some jQuery going on yeah it",
    "start": "2058120",
    "end": "2065080"
  },
  {
    "text": "looks like it's just like HTML and jQuery we got some kognito stuff which",
    "start": "2065080",
    "end": "2070658"
  },
  {
    "text": "we will see in a little bit and all",
    "start": "2070659",
    "end": "2075700"
  },
  {
    "text": "right so we've got these two the static content and so now we need to start",
    "start": "2075700",
    "end": "2080710"
  },
  {
    "text": "coding our function if you're just",
    "start": "2080710",
    "end": "2091148"
  },
  {
    "text": "tuning in and I'll do a little recap again this is chase he's the CTO of",
    "start": "2091149",
    "end": "2096280"
  },
  {
    "text": "stacker II stack 3 he is an awesome software tool and make it really easy to build serverless applications using",
    "start": "2096280",
    "end": "2103600"
  },
  {
    "text": "CloudFormation or Sam by dragging and dropping and they have a great BS code",
    "start": "2103600",
    "end": "2109810"
  },
  {
    "text": "extension that he's been showing us so far all we've done is create an s3 bucket in a function and now we're going",
    "start": "2109810",
    "end": "2116140"
  },
  {
    "text": "to start actually writing code into our function to write to the s3 bucket yeah",
    "start": "2116140",
    "end": "2121180"
  },
  {
    "text": "and this is just setting up a little pipeline for the front end so every time he deploys the entire application this",
    "start": "2121180",
    "end": "2127720"
  },
  {
    "text": "lambda function will invoke and it will replace all the contents in the s3",
    "start": "2127720",
    "end": "2133360"
  },
  {
    "text": "bucket with anything he's at yeah all right so now we have to do some complex stuff here it's gonna be",
    "start": "2133360",
    "end": "2140069"
  },
  {
    "text": "fun so the first thing we need to do is create a function that we're gonna call that it's gonna upload static contents",
    "start": "2140069",
    "end": "2148710"
  },
  {
    "text": "okay and we'll call into that so let's let's create that down here all right so",
    "start": "2148710",
    "end": "2154319"
  },
  {
    "text": "a sync function all right so this",
    "start": "2154319",
    "end": "2162390"
  },
  {
    "text": "function it has to walk through all the files inside of that stack directory and",
    "start": "2162390",
    "end": "2168359"
  },
  {
    "text": "upload them to the front end content bucket so one thing we could think we",
    "start": "2168359",
    "end": "2176579"
  },
  {
    "text": "could kind of code up how you walk through the file system but node as an ecosystem is great for having all kinds",
    "start": "2176579",
    "end": "2184140"
  },
  {
    "text": "of you know little modules you can use so I'm gonna I'm gonna search for something another thing that recursive",
    "start": "2184140",
    "end": "2193460"
  },
  {
    "text": "directory what yeah so recursive reader",
    "start": "2193460",
    "end": "2205530"
  },
  {
    "text": "it you give it a directory you know some path in our case is gonna be the static",
    "start": "2205530",
    "end": "2210900"
  },
  {
    "text": "directory and it goes and it is gonna find all the files there and hand that back to you as an array cool so let's",
    "start": "2210900",
    "end": "2218069"
  },
  {
    "text": "let's add that to our function",
    "start": "2218069",
    "end": "2222349"
  },
  {
    "text": "it was recursive reader all right and",
    "start": "2226769",
    "end": "2237759"
  },
  {
    "text": "then we will add this to our function so",
    "start": "2237759",
    "end": "2245859"
  },
  {
    "text": "they call it cursive okay can do like",
    "start": "2245859",
    "end": "2260160"
  },
  {
    "text": "control tilde and just get rid of it yeah I'm afraid I would lose my",
    "start": "2260160",
    "end": "2265329"
  },
  {
    "text": "terminals oh no they are so what is it it's control",
    "start": "2265329",
    "end": "2270460"
  },
  {
    "text": "tilde tilde oh nice thank you awesome yeah all right it's a",
    "start": "2270460",
    "end": "2282759"
  },
  {
    "text": "navigator also so helpful all the space",
    "start": "2282759",
    "end": "2288849"
  },
  {
    "text": "so helpful okay all right so it's great yeah",
    "start": "2288849",
    "end": "2295329"
  },
  {
    "text": "all right so the first thing is we're gonna get our list of files I'll make it all like one bigger yes",
    "start": "2295329",
    "end": "2302109"
  },
  {
    "text": "all right so cuz files equals weight cursive and we give it our static",
    "start": "2302109",
    "end": "2311230"
  },
  {
    "text": "directory okay so I don't know if I coded this all up",
    "start": "2311230",
    "end": "2317019"
  },
  {
    "text": "right so why don't we see if we can list there are any more files thank so if we",
    "start": "2317019",
    "end": "2323410"
  },
  {
    "text": "go pull up our terminal again it's still watching on the other one which means",
    "start": "2323410",
    "end": "2328720"
  },
  {
    "text": "[Music] parsing just URL seconds all right can",
    "start": "2328720",
    "end": "2336460"
  },
  {
    "text": "we see cool all right so now let's take",
    "start": "2336460",
    "end": "2345039"
  },
  {
    "text": "this further I'll get rid of that and the next thing we need to do is",
    "start": "2345039",
    "end": "2350529"
  },
  {
    "text": "basically go through every file and upload it to s3 so I'm gonna take all",
    "start": "2350529",
    "end": "2359400"
  },
  {
    "text": "files and I'm gonna map through them iterate through them to generate",
    "start": "2359400",
    "end": "2364619"
  },
  {
    "text": "promises which represent the action of uploading them so for each file okay I",
    "start": "2364619",
    "end": "2371299"
  },
  {
    "text": "am going to do an s3 object right and",
    "start": "2371299",
    "end": "2378740"
  },
  {
    "text": "I'm gonna give that some parameters so",
    "start": "2378740",
    "end": "2384420"
  },
  {
    "text": "the bucket remember we were talking about this function inside of our",
    "start": "2384420",
    "end": "2390000"
  },
  {
    "text": "template the bucket name process not",
    "start": "2390000",
    "end": "2399619"
  },
  {
    "text": "that one I don't know how I do",
    "start": "2403910",
    "end": "2408140"
  },
  {
    "text": "all right the bucket is yeah so the",
    "start": "2410150",
    "end": "2418770"
  },
  {
    "text": "bucket we get from that environment variable alright so and the key this is",
    "start": "2418770",
    "end": "2428549"
  },
  {
    "text": "the basically the file name that we're uploading so one of the things that we",
    "start": "2428549",
    "end": "2434220"
  },
  {
    "text": "want to do is we don't want to upload it to s3 with this stagg prefix we want to",
    "start": "2434220",
    "end": "2440309"
  },
  {
    "text": "remove that so what great way to do that is there's a built in module node and",
    "start": "2440309",
    "end": "2451970"
  },
  {
    "text": "we'll do the key is passed relative static and so that's basically saying",
    "start": "2451970",
    "end": "2461789"
  },
  {
    "text": "give me the location of this file relative to the static directory which",
    "start": "2461789",
    "end": "2469079"
  },
  {
    "text": "is exactly what we're looking for in terms of where we save this file name on the body front this is where we need to",
    "start": "2469079",
    "end": "2476460"
  },
  {
    "text": "get the contents of the file so we have the file as finally we're do FS",
    "start": "2476460",
    "end": "2483410"
  },
  {
    "text": "the FS older that's module so we'll do",
    "start": "2488259",
    "end": "2493640"
  },
  {
    "text": "FS create read and here it'll be so",
    "start": "2493640",
    "end": "2503089"
  },
  {
    "text": "that's gonna create this streaming entity to stream from what's on disk",
    "start": "2503089",
    "end": "2508339"
  },
  {
    "text": "inside of our filesystem out the door to s3 without us actually going to read it",
    "start": "2508339",
    "end": "2513979"
  },
  {
    "text": "all into this next one the last thing",
    "start": "2513979",
    "end": "2537559"
  },
  {
    "text": "you need is every file that's accessed from a browser it needs to have a",
    "start": "2537559",
    "end": "2545150"
  },
  {
    "text": "content type so when you open up a web page it's gonna pull down this HTML file",
    "start": "2545150",
    "end": "2552469"
  },
  {
    "text": "index dot HTML yeah but it has to tell it that the content type is what is its",
    "start": "2552469",
    "end": "2559839"
  },
  {
    "text": "text slash HTML but not all of our files are HTML files so that's not gonna work",
    "start": "2559839",
    "end": "2566180"
  },
  {
    "text": "to it to put it as static there so let's go to our favorites place again NPM and",
    "start": "2566180",
    "end": "2574339"
  },
  {
    "text": "we'll look up my nips and we'll see what we've got",
    "start": "2574339",
    "end": "2579910"
  },
  {
    "text": "yeah images is yeah oh here we go here's",
    "start": "2587410",
    "end": "2592940"
  },
  {
    "text": "a great library so mine types so what this does is we required in and I",
    "start": "2592940",
    "end": "2600820"
  },
  {
    "text": "same I'm not look up on the file name and it all give me back the mine type",
    "start": "2600820",
    "end": "2609210"
  },
  {
    "text": "the exact one you're in a little bit mm-hmm-hmm alright so let's go back here",
    "start": "2609210",
    "end": "2617880"
  },
  {
    "text": "my mind is still weird she gave me the",
    "start": "2628740",
    "end": "2639130"
  },
  {
    "text": "nice okay I'm gonna move it like further",
    "start": "2639130",
    "end": "2645970"
  },
  {
    "text": "down my shirt I guess yes alright so we",
    "start": "2645970",
    "end": "2657130"
  },
  {
    "text": "are now uploading or we written code to upload to our s3 bucket well I don't we",
    "start": "2657130",
    "end": "2664110"
  },
  {
    "text": "owe getting one last piece so this is gonna map through it's gonna iterate",
    "start": "2664110",
    "end": "2670030"
  },
  {
    "text": "through our array and it's going to call these this put object method but what I",
    "start": "2670030",
    "end": "2678730"
  },
  {
    "text": "need to do is I need to ask AWS SDK give",
    "start": "2678730",
    "end": "2684400"
  },
  {
    "text": "me back an actual promise representing this work that's going to be done asynchronously so what I what this has",
    "start": "2684400",
    "end": "2692560"
  },
  {
    "text": "now done is I mapped through the array of file names and I'm getting back an",
    "start": "2692560",
    "end": "2698560"
  },
  {
    "text": "array of promises representing the work to upload each one of those files anyone",
    "start": "2698560",
    "end": "2704530"
  },
  {
    "text": "fails even handle it well not only that but I also can with this array I can say",
    "start": "2704530",
    "end": "2712810"
  },
  {
    "text": "wait on all the promises to resolve",
    "start": "2712810",
    "end": "2719110"
  },
  {
    "text": "before return so that's what this",
    "start": "2719110",
    "end": "2724120"
  },
  {
    "text": "promise to all does is it says take that array of promises yeah wait for them all",
    "start": "2724120",
    "end": "2729760"
  },
  {
    "text": "and then finally once they're all done we'll return so we call that up there I think",
    "start": "2729760",
    "end": "2736349"
  },
  {
    "text": "we're all set to try this out let's let's save this only when I see or all",
    "start": "2736349",
    "end": "2746970"
  },
  {
    "text": "the know when he sees maybe it's just like the around it it's a square you",
    "start": "2746970",
    "end": "2753510"
  },
  {
    "text": "know it's only for me let me just miss",
    "start": "2753510",
    "end": "2758670"
  },
  {
    "text": "taking a little bit more oh and this is the best part about having this if",
    "start": "2758670",
    "end": "2767730"
  },
  {
    "text": "you're used to writing lambda functions and having to deploy them out to find out if they were gonna fail here I got a",
    "start": "2767730",
    "end": "2773339"
  },
  {
    "text": "result in a matter of seconds I forgot to have an s3 object so now all right so",
    "start": "2773339",
    "end": "2793740"
  },
  {
    "text": "I'm creating my s3 object",
    "start": "2793740",
    "end": "2799190"
  },
  {
    "text": "all right let's save this let's see if that fixes things",
    "start": "2800089",
    "end": "2805519"
  },
  {
    "text": "my mind look all right I have to say",
    "start": "2806730",
    "end": "2818740"
  },
  {
    "text": "this is very nerve-wracking doing a stream you're doing absolutely great",
    "start": "2818740",
    "end": "2824740"
  },
  {
    "text": "we're all here yeah yeah call it out yeah I I realize now that one of the",
    "start": "2824740",
    "end": "2834250"
  },
  {
    "text": "challenges with mind look God is when it isn't sure what the mind type should be",
    "start": "2834250",
    "end": "2840010"
  },
  {
    "text": "it returns doesn't like that so we've",
    "start": "2840010",
    "end": "2847060"
  },
  {
    "text": "got just a couple of finals that I like that so just to make it happy we're gonna say use what the lookup provided",
    "start": "2847060",
    "end": "2854410"
  },
  {
    "text": "or application slash octet stream which is just kind of a generic you know it's",
    "start": "2854410",
    "end": "2861369"
  },
  {
    "text": "a binary file type in chat or chase I",
    "start": "2861369",
    "end": "2871960"
  },
  {
    "text": "wish I could get like a drum roll or something just see that from like if",
    "start": "2871960",
    "end": "2877869"
  },
  {
    "text": "there's a way to do a drum roll over twitch guys take movies yeah Oh awesome",
    "start": "2877869",
    "end": "2889530"
  },
  {
    "text": "okay so we at least got to the point where our function thinks we succeeded why don't we go and check out what",
    "start": "2889530",
    "end": "2896410"
  },
  {
    "text": "actually happened so this is what was deployed all right so why don't we go",
    "start": "2896410",
    "end": "2910510"
  },
  {
    "text": "take a look at this this bucket in the s3 console so I'll open this up thank",
    "start": "2910510",
    "end": "2928660"
  },
  {
    "text": "you thank you bye on 222 awesome all right so we've got our",
    "start": "2928660",
    "end": "2936190"
  },
  {
    "text": "we've got our assets in fact we can kind of double check this we've got the web",
    "start": "2936190",
    "end": "2942339"
  },
  {
    "text": "site hosting address for that s3 bucket here if I click into that we'll see oh",
    "start": "2942339",
    "end": "2947440"
  },
  {
    "text": "there it is we've got the beginning of our application that's amazing runnin now it's not gonna do anything",
    "start": "2947440",
    "end": "2954940"
  },
  {
    "text": "when we get to the point we're going to create a ride it's gonna complain at us all this stuff because nothing yep all",
    "start": "2954940",
    "end": "2966730"
  },
  {
    "text": "right but we are making awesome progress all right so so now we're gonna move on now",
    "start": "2966730",
    "end": "2973240"
  },
  {
    "text": "we're gonna move on we are going to see",
    "start": "2973240",
    "end": "2979420"
  },
  {
    "text": "we're gonna switch back here we spend a lot of time getting the foundation of",
    "start": "2979420",
    "end": "2985210"
  },
  {
    "text": "our application oh yeah the next step is authentication it goes",
    "start": "2985210",
    "end": "2992049"
  },
  {
    "text": "hand-in-hand with with front-end web applications is using a Cognito for authentication which is an AWS",
    "start": "2992049",
    "end": "2998339"
  },
  {
    "text": "surrealist service where you can store all of your user records so I'm gonna",
    "start": "2998339",
    "end": "3003420"
  },
  {
    "text": "hop it over here I'm going to use Nikki's awesome shortcuts there we go",
    "start": "3003420",
    "end": "3009920"
  },
  {
    "text": "and we are gonna drop in a kognito user pool I must have accidentally",
    "start": "3009920",
    "end": "3018950"
  },
  {
    "text": "usually not but I'm gonna live demo I think I I managed to get something in a",
    "start": "3023180",
    "end": "3029549"
  },
  {
    "text": "funny state we will reopen this template",
    "start": "3029549",
    "end": "3035720"
  },
  {
    "text": "editor thank you the stork a man I know I I'm a",
    "start": "3038390",
    "end": "3046270"
  },
  {
    "text": "quick learner just retain everything to second me right now all right okay so",
    "start": "3046270",
    "end": "3061240"
  },
  {
    "text": "we're gonna add our user pool into here yeah so this has a lot of hooks where",
    "start": "3061240",
    "end": "3069609"
  },
  {
    "text": "you could hook up different lambda functions to different stages as people",
    "start": "3069609",
    "end": "3074710"
  },
  {
    "text": "are about to sign up after they've confirmed through an occasion code you",
    "start": "3074710",
    "end": "3081339"
  },
  {
    "text": "can see what that looks like lots of things we're actually gonna kind of leave that aside for now but we are",
    "start": "3081339",
    "end": "3087339"
  },
  {
    "text": "gonna add turn on auto verify emails and you know here's this is this is a user",
    "start": "3087339",
    "end": "3094330"
  },
  {
    "text": "pool and we need one other piece the user pool holds the records of the users",
    "start": "3094330",
    "end": "3100540"
  },
  {
    "text": "yeah we need a piece that can create authentication tokens and so that's it",
    "start": "3100540",
    "end": "3105630"
  },
  {
    "text": "it's a user pool client in this case the identity pool is great for generating I",
    "start": "3105630",
    "end": "3111250"
  },
  {
    "text": "am credentials users and the user Perl clients is what generates the raw",
    "start": "3111250",
    "end": "3117220"
  },
  {
    "text": "authentication tokens that have been used set in headers as we make requests",
    "start": "3117220",
    "end": "3123150"
  },
  {
    "text": "so we've got some stuff scaffolding now that we've done this what's what we need",
    "start": "3123150",
    "end": "3130960"
  },
  {
    "text": "to do is you load up the web page and say I want to authenticate well our web",
    "start": "3130960",
    "end": "3136089"
  },
  {
    "text": "page prosthetic content needs to know what user pool we're using and what",
    "start": "3136089",
    "end": "3141490"
  },
  {
    "text": "client we're using so I now drag and create a wire here that is gonna create",
    "start": "3141490",
    "end": "3148180"
  },
  {
    "text": "some references so as we look at our populate front-end content again we'll",
    "start": "3148180",
    "end": "3155170"
  },
  {
    "text": "see that we've added references for the user who ID and for the user pool",
    "start": "3155170",
    "end": "3163000"
  },
  {
    "text": "clients ID as well you know either so",
    "start": "3163000",
    "end": "3168940"
  },
  {
    "text": "now I know which pools in clients right exactly so inside of our inside of",
    "start": "3168940",
    "end": "3178910"
  },
  {
    "text": "our population I'm content function now we are gonna add some code to generate",
    "start": "3178910",
    "end": "3185329"
  },
  {
    "text": "this config dot J's file which is going to contain these IDs okay so first thing",
    "start": "3185329",
    "end": "3192500"
  },
  {
    "text": "first we added some new code and so we need to redeploy this out to cloud",
    "start": "3192500",
    "end": "3198140"
  },
  {
    "text": "formations that we actually create this user pools because so far we just didn't run any globally yeah and while that's",
    "start": "3198140",
    "end": "3209690"
  },
  {
    "text": "doing that we'll go to our code and",
    "start": "3209690",
    "end": "3215470"
  },
  {
    "text": "we'll start to add a new function",
    "start": "3215470",
    "end": "3220059"
  },
  {
    "text": "we're gonna call it so this is graphic",
    "start": "3221020",
    "end": "3228200"
  },
  {
    "text": "interface he's a Zachary I posted the link earlier",
    "start": "3228200",
    "end": "3237549"
  },
  {
    "text": "yeah yeah you install code and clean eat",
    "start": "3244630",
    "end": "3251450"
  },
  {
    "text": "your snack yeah exactly so we're gonna",
    "start": "3251450",
    "end": "3259579"
  },
  {
    "text": "create this function that is going to upload this config dot J's file so there's inside of the the static content",
    "start": "3259579",
    "end": "3269630"
  },
  {
    "text": "that we had if we take a look at that you'll see in some of the JavaScript",
    "start": "3269630",
    "end": "3276829"
  },
  {
    "text": "that and there's say we look at ride Jas",
    "start": "3276829",
    "end": "3282430"
  },
  {
    "text": "we'll see that there's things like config Cognito config dot api that's what we're gonna",
    "start": "3282430",
    "end": "3289460"
  },
  {
    "text": "build up here that underscore config is kind of pulled in from this config dot",
    "start": "3289460",
    "end": "3296460"
  },
  {
    "text": "J's file that we're going to create so if we go back to our file alright so",
    "start": "3296460",
    "end": "3303270"
  },
  {
    "text": "we're going to create a config object represents this data and this is kind of",
    "start": "3303270",
    "end": "3310620"
  },
  {
    "text": "some stuff that's very specific to how this application is written I'm just going to kind of type it in the API",
    "start": "3310620",
    "end": "3321320"
  },
  {
    "text": "actually this part just comes with",
    "start": "3321320",
    "end": "3359250"
  },
  {
    "text": "lambda for free I love three things and this is just a",
    "start": "3359250",
    "end": "3370230"
  },
  {
    "text": "little flag that says actually we're not disabled because we actually are off is",
    "start": "3370230",
    "end": "3375810"
  },
  {
    "text": "not disabled we have a real client ID here so now we've got this object we",
    "start": "3375810",
    "end": "3384360"
  },
  {
    "text": "need to turn it into a snippet that our website can just include as a dot J's",
    "start": "3384360",
    "end": "3389550"
  },
  {
    "text": "file so we'll call that config string and we'll say that window underscore",
    "start": "3389550",
    "end": "3398190"
  },
  {
    "text": "config equals Jason",
    "start": "3398190",
    "end": "3407000"
  },
  {
    "text": "and just looks nice I have one of those",
    "start": "3413220",
    "end": "3418740"
  },
  {
    "text": "keyboards broken keys yes unfortunately",
    "start": "3418740",
    "end": "3424260"
  },
  {
    "text": "alright maybe just getting a speck of",
    "start": "3424260",
    "end": "3431160"
  },
  {
    "text": "dust under a key or something I'm not sure and so we're gonna do a similar",
    "start": "3431160",
    "end": "3442109"
  },
  {
    "text": "thing we did above when we were uploading assets first everybody you",
    "start": "3442109",
    "end": "3454050"
  },
  {
    "text": "miss that we linked from your Twitter is",
    "start": "3454050",
    "end": "3473869"
  },
  {
    "text": "TX just need to make it readable all",
    "start": "3473869",
    "end": "3486690"
  },
  {
    "text": "right so if we take a look we see we",
    "start": "3486690",
    "end": "3492109"
  },
  {
    "text": "successfully deployed out a new our stack which now includes that that",
    "start": "3492109",
    "end": "3498180"
  },
  {
    "text": "Cognito bucket we even see this here this is kind of not yet and so now we're gonna",
    "start": "3498180",
    "end": "3509150"
  },
  {
    "text": "save we'll save this and we'll watch it",
    "start": "3509150",
    "end": "3517890"
  },
  {
    "text": "locally invoke again and so we'll be able to tell did it create that config dot JS file and upload it successfully -",
    "start": "3517890",
    "end": "3525599"
  },
  {
    "text": "yeah the s3 bucket",
    "start": "3525599",
    "end": "3529280"
  },
  {
    "text": "remember this is using silikal on the back and with some extra padding to",
    "start": "3534130",
    "end": "3546530"
  },
  {
    "text": "assume I as well mm-hmm and there we go",
    "start": "3546530",
    "end": "3559520"
  },
  {
    "text": "we see that we have created this config file yeah this config file that has our",
    "start": "3559520",
    "end": "3565970"
  },
  {
    "text": "user pool ID or use a pro client ID",
    "start": "3565970",
    "end": "3570490"
  },
  {
    "text": "all right we're cooking now so we at this stage we basically have",
    "start": "3571760",
    "end": "3580310"
  },
  {
    "text": "our I know I have like Nikki showed me",
    "start": "3580310",
    "end": "3587390"
  },
  {
    "text": "the really amazing way to do so we built",
    "start": "3587390",
    "end": "3593750"
  },
  {
    "text": "up the the kind of a static front-end content piece of our application wheel",
    "start": "3593750",
    "end": "3599210"
  },
  {
    "text": "off with off and so now it's time to create the backend okay for actually",
    "start": "3599210",
    "end": "3605510"
  },
  {
    "text": "even before we get there I realize we can test this out if I hop over to I hop",
    "start": "3605510",
    "end": "3612620"
  },
  {
    "text": "over to our bucket our website register",
    "start": "3612620",
    "end": "3617990"
  },
  {
    "text": "dot HTML and I will register myself Jason yeah I also can't take credit for",
    "start": "3617990",
    "end": "3635390"
  },
  {
    "text": "that well yep and that should have sent",
    "start": "3635390",
    "end": "3643400"
  },
  {
    "text": "me a message to my email address so bear with me while I get the authentication",
    "start": "3643400",
    "end": "3649460"
  },
  {
    "text": "token or the verification code all right so this is my email address and this by",
    "start": "3649460",
    "end": "3656090"
  },
  {
    "text": "the way is all powered by Cognito by signing up all that happened was",
    "start": "3656090",
    "end": "3662850"
  },
  {
    "text": "the front-end JavaScript code told kognito go create a user for Chase at Stanford exactly yeah and so then that",
    "start": "3662850",
    "end": "3673940"
  },
  {
    "text": "automatically sent me an email if I pull it up you can see there it sent me an",
    "start": "3673940",
    "end": "3680970"
  },
  {
    "text": "email it's a very bland email at first but it does say my authentication code we can verify that verification",
    "start": "3680970",
    "end": "3688920"
  },
  {
    "text": "successful the the UX in the UI and all of this can be completely configured",
    "start": "3688920",
    "end": "3694320"
  },
  {
    "text": "lots of websites use it without you even knowing under the covers so that's great",
    "start": "3694320",
    "end": "3700170"
  },
  {
    "text": "we know that our user pool was set up like you said if we go over to stacker II and we click into our user pool we",
    "start": "3700170",
    "end": "3707310"
  },
  {
    "text": "can find an easy link directly into the Amazon console where yeah I see my",
    "start": "3707310",
    "end": "3713790"
  },
  {
    "text": "username here elacry dot io so we're",
    "start": "3713790",
    "end": "3718920"
  },
  {
    "text": "cooking with gas so now it's time to build back in I know I know so do you",
    "start": "3718920",
    "end": "3729120"
  },
  {
    "text": "know how to work this wild rods application yeah it's like uber with",
    "start": "3729120",
    "end": "3735690"
  },
  {
    "text": "unicorns okay okay so you request a unicorn and we sent to you exactly do",
    "start": "3735690",
    "end": "3744930"
  },
  {
    "text": "you know how to get unicorns well I'm",
    "start": "3744930",
    "end": "3750780"
  },
  {
    "text": "just over that's that's more than I know",
    "start": "3750780",
    "end": "3757020"
  },
  {
    "text": "at least that's a start boy thankful well so I don't know how to",
    "start": "3757020",
    "end": "3766170"
  },
  {
    "text": "get them but I found an API they can get can that I can call so basically our",
    "start": "3766170",
    "end": "3773580"
  },
  {
    "text": "application is nothing more than a middleman we take requests for rides and then we go and ask for a unicorn and we send it",
    "start": "3773580",
    "end": "3780570"
  },
  {
    "text": "to the and we charge a huge margin",
    "start": "3780570",
    "end": "3785900"
  },
  {
    "text": "obviously so one of the key things have you ever developed with Tulio yes",
    "start": "3785900",
    "end": "3793230"
  },
  {
    "text": "yeah so Twilio service where you can send out text",
    "start": "3793230",
    "end": "3799119"
  },
  {
    "text": "messages phone calls in all these automated ways right it's great one of",
    "start": "3799119",
    "end": "3806740"
  },
  {
    "text": "the things though that can be a bit pricey with this kind of telephony stuff",
    "start": "3806740",
    "end": "3812349"
  },
  {
    "text": "is sending all this stop creating the voice calls so they have two different environments there's got a production",
    "start": "3812349",
    "end": "3817510"
  },
  {
    "text": "environment where you're gonna pay money and they've got a staging environment where you can just at least test that your api's your integration so again",
    "start": "3817510",
    "end": "3831339"
  },
  {
    "text": "unicorns aren't very expensive okay there's a production API for their",
    "start": "3831339",
    "end": "3836440"
  },
  {
    "text": "service and there's a staging API for their service so we're gonna first build this development version hitting at the",
    "start": "3836440",
    "end": "3842290"
  },
  {
    "text": "staging API but that begs the question how do we have a sense of",
    "start": "3842290",
    "end": "3847839"
  },
  {
    "text": "parameterization so we're hitting the right API endpoint for our staging environment preservative yeah so so",
    "start": "3847839",
    "end": "3857859"
  },
  {
    "text": "let's take a look we have inside of stack green we have an environment abstraction so these environments are",
    "start": "3857859",
    "end": "3864970"
  },
  {
    "text": "abstractions you create that are tied to a specific AWS account and a region and",
    "start": "3864970",
    "end": "3872609"
  },
  {
    "text": "inside of that we set up these name spaced areas to save things so I have",
    "start": "3872609",
    "end": "3879070"
  },
  {
    "text": "this development environment here and I've got a bunch of deployments already",
    "start": "3879070",
    "end": "3884980"
  },
  {
    "text": "deployed into it I'm gonna hop over into environment parameters and when we had",
    "start": "3884980",
    "end": "3890680"
  },
  {
    "text": "that that slide way back in the beginning when we started the stream",
    "start": "3890680",
    "end": "3895869"
  },
  {
    "text": "yeah we're showing how there are all these things they need to be interconnected yeah one of those things was system manager parameter store yeah",
    "start": "3895869",
    "end": "3902200"
  },
  {
    "text": "AWS service where you can store parameters we make it easy to store parameters for these environments in a",
    "start": "3902200",
    "end": "3909609"
  },
  {
    "text": "namespace region all backed by your by the Systems Manager parameters for kini",
    "start": "3909609",
    "end": "3915910"
  },
  {
    "text": "or AWS your right unicorn stable API we have a very",
    "start": "3915910",
    "end": "3925610"
  },
  {
    "text": "specific yeah either works or anywhere so we'll get there you're getting ahead",
    "start": "3925610",
    "end": "3932110"
  },
  {
    "text": "let me just first we don't even have an endpoint to hit yet okay well right it's",
    "start": "3932110",
    "end": "3943850"
  },
  {
    "text": "a gigantic right it's all as a",
    "start": "3943850",
    "end": "3954380"
  },
  {
    "text": "walkthrough tutorial and so I'm going to",
    "start": "3954380",
    "end": "3965750"
  },
  {
    "text": "copy this this API endpoint for their staging environment for the unicorn",
    "start": "3965750",
    "end": "3972170"
  },
  {
    "text": "stables and I'm going to copy that into my parameters already created looks like",
    "start": "3972170",
    "end": "3979220"
  },
  {
    "text": "a unicorn stable they're a third party API they happen to be using API gateway",
    "start": "3979220",
    "end": "3986560"
  },
  {
    "text": "why wouldn't you and so then as you were just mentioning and an API we can hit",
    "start": "3986560",
    "end": "3993170"
  },
  {
    "text": "but we also need a key we need to safely guard these keys it's one thing in staging it doesn't cost us anything but",
    "start": "3993170",
    "end": "3999140"
  },
  {
    "text": "I don't want someone getting my production unicorn stable API key and going to town on it yeah so we're gonna",
    "start": "3999140",
    "end": "4007660"
  },
  {
    "text": "add a secret here this is a single restore inside of AWS secrets manager",
    "start": "4007660",
    "end": "4015400"
  },
  {
    "text": "okay which is a great service that ensures that these these secrets are stored encrypted at rest give the option",
    "start": "4015400",
    "end": "4023170"
  },
  {
    "text": "of rotating them automatically well you know and then we also as we'll see in a",
    "start": "4023170",
    "end": "4031660"
  },
  {
    "text": "moment we can scaffold our application so that we give you tights scope",
    "start": "4031660",
    "end": "4037270"
  },
  {
    "text": "permissions to then read those secrets at runtime so I'm gonna call this secret unicorn stable API",
    "start": "4037270",
    "end": "4044819"
  },
  {
    "text": "you'll notice the whole secret name is slash development slash unicorn stable a vit because we are actually deploying",
    "start": "4044819",
    "end": "4052150"
  },
  {
    "text": "into the development environment that's part of that a namespace singing abstraction layer yeah exactly",
    "start": "4052150",
    "end": "4061900"
  },
  {
    "text": "different namespace so I'm gonna hop into here and grab my API key it'll",
    "start": "4061900",
    "end": "4068529"
  },
  {
    "text": "paste this in here and it's a great point to a great time to point out that",
    "start": "4068529",
    "end": "4073989"
  },
  {
    "text": "stacker II is a toolset that integrates with your AWS account but as you've seen",
    "start": "4073989",
    "end": "4080349"
  },
  {
    "text": "us we have an ability to manage some of your your AWS resources but we actually",
    "start": "4080349",
    "end": "4087880"
  },
  {
    "text": "don't have ability to do a bunch of key things and that's important we don't",
    "start": "4087880",
    "end": "4092950"
  },
  {
    "text": "have the ability to deploy without you using your own credentials whether that is through an dashboard where we have a",
    "start": "4092950",
    "end": "4100540"
  },
  {
    "text": "link to into confirmation or weather that says you need to plan from our CLI",
    "start": "4100540",
    "end": "4105880"
  },
  {
    "text": "that's actually using credentials ap IPS that are stored on my laptop that are",
    "start": "4105880",
    "end": "4111310"
  },
  {
    "text": "not giving to the static system so we don't store credentials to be able to modify much about your environment we do",
    "start": "4111310",
    "end": "4119258"
  },
  {
    "text": "make it easy for you to create secrets but even here there's no way once I created it to go and find out what that",
    "start": "4119259",
    "end": "4126548"
  },
  {
    "text": "value of the secret was I could I could",
    "start": "4126549",
    "end": "4131920"
  },
  {
    "text": "edit I could set I can edit the description how's that great okay so I",
    "start": "4131920",
    "end": "4148540"
  },
  {
    "text": "can do things like I can edit the description of a secret and I can change",
    "start": "4148540",
    "end": "4154179"
  },
  {
    "text": "its value to some new value but I can't actually read back what that credential was well not only that police as stacker",
    "start": "4154179",
    "end": "4163508"
  },
  {
    "text": "II we don't have permission to three day we only give ourselves a permission to create new",
    "start": "4163509",
    "end": "4169810"
  },
  {
    "text": "for you so now we've got that in there we've got environment we can deploy into",
    "start": "4169810",
    "end": "4176790"
  },
  {
    "text": "let's go back to our template so we're",
    "start": "4176790",
    "end": "4181960"
  },
  {
    "text": "gonna start to build a REST API and so",
    "start": "4181960",
    "end": "4187120"
  },
  {
    "text": "on what the first thing when you do is add a REST API so let's let's pop that",
    "start": "4187120",
    "end": "4192870"
  },
  {
    "text": "yeah it's just exactly you can see over",
    "start": "4192870",
    "end": "4197980"
  },
  {
    "text": "here this was added now with a get /r out we're going to",
    "start": "4197980",
    "end": "4202990"
  },
  {
    "text": "change that to post right on top of that",
    "start": "4202990",
    "end": "4208030"
  },
  {
    "text": "we're going to Mabel course because this is being accessed from the web browser",
    "start": "4208030",
    "end": "4213150"
  },
  {
    "text": "so courses cross-origin resource sharing it's a it's a security measure that is",
    "start": "4213150",
    "end": "4219880"
  },
  {
    "text": "very complicated and sometimes annoying when you're doing development but is important and I'm going to put in some",
    "start": "4219880",
    "end": "4228580"
  },
  {
    "text": "values here notes just to make sure that I putting in exactly the right minutes",
    "start": "4228580",
    "end": "4238560"
  },
  {
    "text": "one of the tricky things is there's an escaping mechanism that you have to make",
    "start": "4238980",
    "end": "4244900"
  },
  {
    "text": "sure you get right that's why we've got like triple quotes on each side of the asterisk that's because gamal you can't just put",
    "start": "4244900",
    "end": "4251800"
  },
  {
    "text": "in your asterisks you have to escape it and then on top of that api gateway wants it to be escaped again so i also",
    "start": "4251800",
    "end": "4263590"
  },
  {
    "text": "need to allow headers we need to make it possible for an authorization header to",
    "start": "4263590",
    "end": "4269410"
  },
  {
    "text": "be sent with our requests to this api and the content type because browsers",
    "start": "4269410",
    "end": "4275320"
  },
  {
    "text": "love to add a content better when they're making Ajax requests",
    "start": "4275320",
    "end": "4280560"
  },
  {
    "text": "so save this now so we got a route in an",
    "start": "4280560",
    "end": "4286600"
  },
  {
    "text": "API now we need to back this with a function so I'm going to drag in a",
    "start": "4286600",
    "end": "4293350"
  },
  {
    "text": "function here and we're gonna call this",
    "start": "4293350",
    "end": "4298500"
  },
  {
    "text": "request unit okay and we'll save that",
    "start": "4298500",
    "end": "4307860"
  },
  {
    "text": "and we'll connect that API route to that",
    "start": "4307860",
    "end": "4313660"
  },
  {
    "text": "function okay so we saw over here in the template in case you were curious that's a couple of things we added our API we",
    "start": "4313660",
    "end": "4321910"
  },
  {
    "text": "added the request unicorn here oh nice great so and we've gone and set the",
    "start": "4321910",
    "end": "4329410"
  },
  {
    "text": "chorus settings we have set the integration for the API routes",
    "start": "4329410",
    "end": "4337060"
  },
  {
    "text": "inside of a swagger template to invoke that function so we've done a bunch of",
    "start": "4337060",
    "end": "4343660"
  },
  {
    "text": "stuff there the last two things we need to do is inside of this request Unicorn",
    "start": "4343660",
    "end": "4349360"
  },
  {
    "text": "function okay remember we're gonna request rights from the stable",
    "start": "4349360",
    "end": "4355210"
  },
  {
    "text": "third party API and so we need our URL",
    "start": "4355210",
    "end": "4360940"
  },
  {
    "text": "and the key yeah actually you reminded me I forgot about the URL we'll do that first so you put the URL in the",
    "start": "4360940",
    "end": "4366310"
  },
  {
    "text": "environment as a parameter right and so now we're gonna use that at deployment",
    "start": "4366310",
    "end": "4371770"
  },
  {
    "text": "time we're going to inject that as an environment variable of this function so we're gonna call this unicorn make sure",
    "start": "4371770",
    "end": "4381490"
  },
  {
    "text": "I got the right so as they call it from the stackerlee environment or you're",
    "start": "4381490",
    "end": "4386530"
  },
  {
    "text": "actually just gonna reset environment variable we'll see here in just a second unicorn stable API and I'm",
    "start": "4386530",
    "end": "4394589"
  },
  {
    "text": "gonna say instead of this being a literal value where I might put in a never cool link instead I'm gonna say",
    "start": "4394589",
    "end": "4401819"
  },
  {
    "text": "take it as a parameter from our environment and so we'll say cram name",
    "start": "4401819",
    "end": "4407249"
  },
  {
    "text": "yeah we sort it as unicorn stable API okay and when I save this we'll see that",
    "start": "4407249",
    "end": "4417089"
  },
  {
    "text": "in our template here we've done some some linking of things we've created a",
    "start": "4417089",
    "end": "4424109"
  },
  {
    "text": "parameter a CloudFormation parameter that it's value comes from Systems",
    "start": "4424109",
    "end": "4430800"
  },
  {
    "text": "Manager parameter store yet as a string from the unicorn stable API inside of",
    "start": "4430800",
    "end": "4438929"
  },
  {
    "text": "our environment name that gets swapped out at deployment time and then inside of our inner story saving them by",
    "start": "4438929",
    "end": "4446039"
  },
  {
    "text": "environment so it's like dad / - right exactly and so inside of our function or request",
    "start": "4446039",
    "end": "4453329"
  },
  {
    "text": "unicorn function here we have our environment variables we set that unicorn stable API it has a reference to",
    "start": "4453329",
    "end": "4462119"
  },
  {
    "text": "the value of this parameter so inside of",
    "start": "4462119",
    "end": "4467909"
  },
  {
    "text": "that visual editing workflow we make it easy to pull in those values",
    "start": "4467909",
    "end": "4473269"
  },
  {
    "text": "alright so we've got our yeah that's way easier than adding that to the same time",
    "start": "4473269",
    "end": "4481550"
  },
  {
    "text": "what was the next thing we needed to be able to hit that unicorn API we've got the API maybe we need to write code in",
    "start": "4487099",
    "end": "4494519"
  },
  {
    "text": "the lambda to hit the when you could do that but even before that what did we need to actually hit that API Rob NEPA gateway",
    "start": "4494519",
    "end": "4502079"
  },
  {
    "text": "in Moines we need a secret of the API key oh that's right we never did that yeah so I'm gonna come into here and I'm",
    "start": "4502079",
    "end": "4509760"
  },
  {
    "text": "going to add this secrets resource and connects our unicorn function to us so we can call",
    "start": "4509760",
    "end": "4515719"
  },
  {
    "text": "and get the secret so we can call and get the secret we'll see that we've that that is added a permission to get the",
    "start": "4515719",
    "end": "4523400"
  },
  {
    "text": "value of secrets underneath the environment that we're deploying into",
    "start": "4523400",
    "end": "4529250"
  },
  {
    "text": "okay only that environment so we can get the value from the development namespace",
    "start": "4529250",
    "end": "4536030"
  },
  {
    "text": "when we're deploying a new development yeah we can't access the production namespace because we're not deployed into there and we also add some an",
    "start": "4536030",
    "end": "4543860"
  },
  {
    "text": "environment variable that makes it easy for us to know what was the prefix what was the namespace for that secret in",
    "start": "4543860",
    "end": "4551330"
  },
  {
    "text": "whatever environment were deployed into so we'll see when I write code exactly what happens there so at this point",
    "start": "4551330",
    "end": "4559540"
  },
  {
    "text": "we've done most of the pieces we need to request a unicorn there's one last piece",
    "start": "4559540",
    "end": "4564739"
  },
  {
    "text": "that we're gonna want to do we're going to want to store all the rides as records yeah so let's go and grab a",
    "start": "4564739",
    "end": "4573489"
  },
  {
    "text": "dynamic DB table where is that table there it is all right so we'll call this",
    "start": "4573489",
    "end": "4580580"
  },
  {
    "text": "rise we'll make sure that every ride is",
    "start": "4580580",
    "end": "4586699"
  },
  {
    "text": "just hashed it's its identifier in the the table as a right ID okay",
    "start": "4586699",
    "end": "4592010"
  },
  {
    "text": "so we'll save that we'll move that over so that we can someone said hi to you hi",
    "start": "4592010",
    "end": "4598670"
  },
  {
    "text": "who was it oh that's didn't yell Danielle she's she's one of my co-workers she was",
    "start": "4598670",
    "end": "4605270"
  },
  {
    "text": "amazing she's actually giving a talk at the act W conference coming up so shout",
    "start": "4605270",
    "end": "4614870"
  },
  {
    "text": "out plug in for that you should go see her there Daniel Danielle feel free to post a link to the",
    "start": "4614870",
    "end": "4621230"
  },
  {
    "text": "conference yeah that'd be awesome so we added that dynamic DB table we've wired it up and that means we added the",
    "start": "4621230",
    "end": "4627290"
  },
  {
    "text": "permissions and we added more environment variables to access that so again because we want to kind of",
    "start": "4627290",
    "end": "4634720"
  },
  {
    "text": "start to code this okay we need to",
    "start": "4634720",
    "end": "4639820"
  },
  {
    "text": "deploy out this new infrastructure right I that reminds me of one last piece we",
    "start": "4639820",
    "end": "4645200"
  },
  {
    "text": "have to wire up our front-end needs to know where our API is so we're going to add a wire from populate front-end",
    "start": "4645200",
    "end": "4652850"
  },
  {
    "text": "content so that it has a API URL environment variable alright so we have",
    "start": "4652850",
    "end": "4659890"
  },
  {
    "text": "100% of our infrastructure through this application built at this stage so we",
    "start": "4659890",
    "end": "4665420"
  },
  {
    "text": "need to do two things one is we had this this config that we set up with the",
    "start": "4665420",
    "end": "4672260"
  },
  {
    "text": "Cognito user pool data yep we need to go back and set up the add the the code to",
    "start": "4672260",
    "end": "4682730"
  },
  {
    "text": "tell it where the API is give me one second I'm gonna make sure I'll get the right key set in here pretty sure it's",
    "start": "4682730",
    "end": "4689390"
  },
  {
    "text": "API URL I'm gonna make sure",
    "start": "4689390",
    "end": "4696850"
  },
  {
    "text": "invoke URL that's processed and API URL",
    "start": "4703350",
    "end": "4711270"
  },
  {
    "text": "that's just beautiful and yeah the",
    "start": "4711270",
    "end": "4716790"
  },
  {
    "text": "third-party unicorn stable right again yep actually that's our API that's our",
    "start": "4716790",
    "end": "4724480"
  },
  {
    "text": "middleman API so that is our API that we're gonna write the function of gotta",
    "start": "4724480",
    "end": "4729760"
  },
  {
    "text": "assume all right so we'll save this and now it is time for us to deploy out our",
    "start": "4729760",
    "end": "4738490"
  },
  {
    "text": "new infrastructure so let's close that",
    "start": "4738490",
    "end": "4745570"
  },
  {
    "text": "down and play this out she's gonna create our new dynamic DB table or new",
    "start": "4745570",
    "end": "4750580"
  },
  {
    "text": "API all that kind of stuff so while that is going we'll see that we've got our",
    "start": "4750580",
    "end": "4758040"
  },
  {
    "text": "stacker e scaffolded our requested unicorn yeah actually and when this is the code",
    "start": "4758040",
    "end": "4765040"
  },
  {
    "text": "that we're gonna update you know yeah and I think we had a lot of fun writing the code to populate the the front-end",
    "start": "4765040",
    "end": "4775720"
  },
  {
    "text": "content yeah but looking at time it might be easier if we well maybe we can",
    "start": "4775720",
    "end": "4783280"
  },
  {
    "text": "start scaffolding this out for maybe 10 minutes and then if depending on how far we get we could go back and just kind of",
    "start": "4783280",
    "end": "4791980"
  },
  {
    "text": "copy in the rest of the code so this is a function it's going to request",
    "start": "4791980",
    "end": "4797860"
  },
  {
    "text": "unicorns and so the first thing we need",
    "start": "4797860",
    "end": "4803530"
  },
  {
    "text": "to do is we need to get information",
    "start": "4803530",
    "end": "4808660"
  },
  {
    "text": "about who's requesting it so there's a stereo yes so I'm actually maybe this is",
    "start": "4808660",
    "end": "4815410"
  },
  {
    "text": "a good way to do this at a good pace I'm gonna pull up our workshop where we've",
    "start": "4815410",
    "end": "4820930"
  },
  {
    "text": "got all of our source code and instead of like typing out everything",
    "start": "4820930",
    "end": "4826989"
  },
  {
    "text": "my hand we can kind of go through and copy and paste things over so we're",
    "start": "4826989",
    "end": "4834340"
  },
  {
    "text": "gonna have a lot of this was written by AWS actually so we'll start out with a",
    "start": "4834340",
    "end": "4842160"
  },
  {
    "text": "try/catch handler which is always a great practice as we aren't building out",
    "start": "4842160",
    "end": "4849880"
  },
  {
    "text": "our functionality and inside of our air will just will console not block the air",
    "start": "4849880",
    "end": "4857610"
  },
  {
    "text": "and mr. Graham is down we just got notified that Instagram is down Oh does that affect us no okay",
    "start": "4860010",
    "end": "4869250"
  },
  {
    "text": "Instagram runs on their own servers maybe they should run on AWS yeah and so",
    "start": "4869250",
    "end": "4882449"
  },
  {
    "text": "we need a way if there's an error to respond back with like a 400 bad request or something so we're gonna write this",
    "start": "4882510",
    "end": "4889510"
  },
  {
    "text": "error response function and because it's not actually that interesting to what we are doing it's part of this workshop",
    "start": "4889510",
    "end": "4895480"
  },
  {
    "text": "we're just going to copy and paste okay",
    "start": "4895480",
    "end": "4900760"
  },
  {
    "text": "so we've got a good scaffold here that is oh great we got everything we've got",
    "start": "4900760",
    "end": "4908890"
  },
  {
    "text": "a scaffold to the point where we've got a try block here we can start to",
    "start": "4908890",
    "end": "4914320"
  },
  {
    "text": "implement our functionality okay so the first thing we need to do as",
    "start": "4914320",
    "end": "4919510"
  },
  {
    "text": "I mentioned is we need to get information about who contacted us to",
    "start": "4919510",
    "end": "4924610"
  },
  {
    "text": "get that from PETA yeah and so the event that comes in and as part of the HTTP requests or with the",
    "start": "4924610",
    "end": "4931030"
  },
  {
    "text": "API gateway it is set up to tell us about the authentication yep so we can",
    "start": "4931030",
    "end": "4939130"
  },
  {
    "text": "copy this this code here that is gonna say check make sure that there is",
    "start": "4939130",
    "end": "4945700"
  },
  {
    "text": "authentication information and now if not returning errors exactly now we need",
    "start": "4945700",
    "end": "4953980"
  },
  {
    "text": "to generate a right and this is a great way in nodejs to create random screaming generate some",
    "start": "4953980",
    "end": "4962530"
  },
  {
    "text": "random bytes and to URL string I think that's just like a helper function they",
    "start": "4962530",
    "end": "4968350"
  },
  {
    "text": "have down here that just does some encoding so we'll grab that again not",
    "start": "4968350",
    "end": "4973750"
  },
  {
    "text": "particularly interesting to what we're building all right so now so we can log",
    "start": "4973750",
    "end": "4983020"
  },
  {
    "text": "out so it's easy to see that we've got a write ID great so because we are using",
    "start": "4983020",
    "end": "4993960"
  },
  {
    "text": "the the Cognito user pools authorizer yep we can check something called the",
    "start": "4993960",
    "end": "5000690"
  },
  {
    "text": "authorizer claims which tells us about the user yep and we can get the kognito",
    "start": "5000690",
    "end": "5006060"
  },
  {
    "text": "user name from that so we can pop that over here uses a jaw so he's pulling the",
    "start": "5006060",
    "end": "5018630"
  },
  {
    "text": "claim that always the fact that JWT is pronouncing jobs just throw this really",
    "start": "5018630",
    "end": "5027870"
  },
  {
    "text": "it's like quit vs. gooood right and then like it doesn't matter where you go somebody's gonna do you for the way you",
    "start": "5027870",
    "end": "5034139"
  },
  {
    "text": "say it I mean I said JWT for a long time and then and I always around people that says jobs writing job yeah sorry I will",
    "start": "5034139",
    "end": "5042600"
  },
  {
    "text": "say GWT no no no you can say job like that's I think that's the correct pronunciation it just don't to me it's",
    "start": "5042600",
    "end": "5049199"
  },
  {
    "text": "amazing that jdw turn the dummy turned into a dog alright so now I think it's",
    "start": "5049199",
    "end": "5062190"
  },
  {
    "text": "good is it we're just gonna have to yeah",
    "start": "5062190",
    "end": "5067340"
  },
  {
    "text": "what do you think we're doing do it I guess I think yeah I tried not to say",
    "start": "5068420",
    "end": "5073920"
  },
  {
    "text": "that one as often as I can maybe that's I think I might still do for saying",
    "start": "5073920",
    "end": "5079159"
  },
  {
    "text": "it's like oh so now we're gonna start to",
    "start": "5079159",
    "end": "5087199"
  },
  {
    "text": "look at but what's in the body of that request we got the username who requested it but but in that body of the",
    "start": "5087199",
    "end": "5092690"
  },
  {
    "text": "request is like where do they want a unicorn sent to so the body comes in as",
    "start": "5092690",
    "end": "5098600"
  },
  {
    "text": "a property of that event we know it's going to be sent from the our application and as Jason text so we",
    "start": "5098600",
    "end": "5106250"
  },
  {
    "text": "parsed that so well we'll add that code to our our code here and we get that",
    "start": "5106250",
    "end": "5116420"
  },
  {
    "text": "pickup location as a part of that body that's not mean the Jason that says yes",
    "start": "5116420",
    "end": "5122440"
  },
  {
    "text": "where we want the unicorn of it exactly so now it's no it's a final time now",
    "start": "5122440",
    "end": "5127909"
  },
  {
    "text": "it's time to go get yeah all right so we're gonna create this find unicorn",
    "start": "5127909",
    "end": "5133790"
  },
  {
    "text": "location you're just gonna hit the API mm-hmm with the secret yeah let's go and",
    "start": "5133790",
    "end": "5139760"
  },
  {
    "text": "grab or let's go and see what's in that flying unicorn function so we'll copy in",
    "start": "5139760",
    "end": "5146600"
  },
  {
    "text": "some boilerplate at the top of that function all right so we're passing a",
    "start": "5146600",
    "end": "5152719"
  },
  {
    "text": "pickup location let's see what we need to do in here so it's always handy to",
    "start": "5152719",
    "end": "5159170"
  },
  {
    "text": "kind of log out what is where we are where we are what we're doing we're finding a unicorn for this location all",
    "start": "5159170",
    "end": "5167150"
  },
  {
    "text": "right now we gotta get that API key so",
    "start": "5167150",
    "end": "5172219"
  },
  {
    "text": "we're gonna it's an environment variable though well the API URL is in the secrets",
    "start": "5172219",
    "end": "5180590"
  },
  {
    "text": "manager this yes is gonna be called directives so we're gonna create a new function called async function get",
    "start": "5180590",
    "end": "5188690"
  },
  {
    "text": "unicorn stable API key and now you call secrets manager to get exactly so one of",
    "start": "5188690",
    "end": "5196250"
  },
  {
    "text": "the things we try to do when we use secrets managers we try to cache the value of it so you're not because",
    "start": "5196250",
    "end": "5202340"
  },
  {
    "text": "sequence managers have slow service it's a fast service but it does help a little bit also is the cost",
    "start": "5202340",
    "end": "5208520"
  },
  {
    "text": "it helps us cost so so we will have a little place here that",
    "start": "5208520",
    "end": "5217240"
  },
  {
    "text": "underscore API key we're going to cache it once we've retrieved it the first time so I'll say yes we don't have this",
    "start": "5217240",
    "end": "5224360"
  },
  {
    "text": "API key you know then we'll go infectious and then we'll return the API",
    "start": "5224360",
    "end": "5231410"
  },
  {
    "text": "key whether we fetched it or we've got it or not so how do we go get that API",
    "start": "5231410",
    "end": "5236420"
  },
  {
    "text": "key well we're gonna check first as just a precaution",
    "start": "5236420",
    "end": "5241990"
  },
  {
    "text": "did we have did we get created with an environment variable for that secrets",
    "start": "5241990",
    "end": "5247610"
  },
  {
    "text": "namespace the key to that secret yeah so this tells us that namespace like we're",
    "start": "5247610",
    "end": "5252710"
  },
  {
    "text": "deploying into development development yeah and so it's just a little sanity",
    "start": "5252710",
    "end": "5257870"
  },
  {
    "text": "check Mansa now so you bail out if you don't have that yeah yeah and so now we're",
    "start": "5257870",
    "end": "5264320"
  },
  {
    "text": "gonna create a secrets manager object do you interact with the service and we yep",
    "start": "5264320",
    "end": "5271820"
  },
  {
    "text": "we set the call up so the secret itself has an idea you know if we go back to",
    "start": "5271820",
    "end": "5278420"
  },
  {
    "text": "our our environment here we see that the ID the secret name was slash development",
    "start": "5278420",
    "end": "5285050"
  },
  {
    "text": "slash unicorn stable API key so the development comes from that a name space environment parameter so here we're",
    "start": "5285050",
    "end": "5293930"
  },
  {
    "text": "basically building up that name here's our name space slash development slash and we're adding on a unicorn stable API",
    "start": "5293930",
    "end": "5300620"
  },
  {
    "text": "key cool and so the last piece here my secret is yeah is we call into secrets",
    "start": "5300620",
    "end": "5310010"
  },
  {
    "text": "manager to get that secret so we are doing an a wait asynchronous communication to say get that secret",
    "start": "5310010",
    "end": "5317480"
  },
  {
    "text": "value here is the secret ID that I want and it returns that value inside of an",
    "start": "5317480",
    "end": "5324710"
  },
  {
    "text": "object with a key called secret string this is some snazzy like all AWS SDK for",
    "start": "5324710",
    "end": "5332150"
  },
  {
    "text": "JavaScript right now which he doesn't have to like add like in package or any of that because it's",
    "start": "5332150",
    "end": "5337960"
  },
  {
    "text": "already pre-loaded up in the lambda environment yeah what's amazing is we don't have to",
    "start": "5337960",
    "end": "5343960"
  },
  {
    "text": "add any packages for this whole back-end function that's gonna go request it's",
    "start": "5343960",
    "end": "5350050"
  },
  {
    "text": "just calling the AWS SDK yeah and then making HTTP calls so we have retrieved",
    "start": "5350050",
    "end": "5356200"
  },
  {
    "text": "the secret value we've stored it inside of that underscore API key variable and",
    "start": "5356200",
    "end": "5361960"
  },
  {
    "text": "now we can return that back to where we were calling okay so now nothing comes",
    "start": "5361960",
    "end": "5367990"
  },
  {
    "text": "back here you have to bail out though because you should make a request about the key well if we if we hit that this",
    "start": "5367990",
    "end": "5374230"
  },
  {
    "text": "if say there were no secrets then this would throw an error and that would bottle off to the top and we'd return a",
    "start": "5374230",
    "end": "5381100"
  },
  {
    "text": "400 message so that's what the one thing I love about coding in a language like JavaScript that has exceptions is in",
    "start": "5381100",
    "end": "5388540"
  },
  {
    "text": "some ways I can sort of allow the system to fail and then just capture that at a",
    "start": "5388540",
    "end": "5394450"
  },
  {
    "text": "higher level so now we are moving on and got our API P next step is to get that",
    "start": "5394450",
    "end": "5402460"
  },
  {
    "text": "URL and to hit it for the stable to go request exactly so we're gonna check",
    "start": "5402460",
    "end": "5413500"
  },
  {
    "text": "right here do we have that environment variable if not that's a problem that",
    "start": "5413500",
    "end": "5418540"
  },
  {
    "text": "unicorn stable API so now that we've verified that we have it now we're gonna",
    "start": "5418540",
    "end": "5424990"
  },
  {
    "text": "use it yeah I think this bit of code is just like making sure it's a URL yeah",
    "start": "5424990",
    "end": "5432550"
  },
  {
    "text": "we're just adding like HTTP on to the front and I don't know if it's completely necessary for how we set",
    "start": "5432550",
    "end": "5438580"
  },
  {
    "text": "things up but it's there it's it's nice I think that was part of some of the AWS code originally and we are wrapping or",
    "start": "5438580",
    "end": "5450370"
  },
  {
    "text": "we're checking that the URL matches what we expect it to and now we are pulling",
    "start": "5450370",
    "end": "5457360"
  },
  {
    "text": "out oh I remember okay so we have to pull out the URL or",
    "start": "5457360",
    "end": "5464440"
  },
  {
    "text": "that sign a domain separate from the path that we are going to hit so we do",
    "start": "5464440",
    "end": "5473890"
  },
  {
    "text": "this regular expression is match and make sure that the regular expression",
    "start": "5473890",
    "end": "5479410"
  },
  {
    "text": "actually did - once we get there now we can pull out the the domain name and the",
    "start": "5479410",
    "end": "5489550"
  },
  {
    "text": "path prefix the path part from the URL and we get the full path all right so",
    "start": "5489550",
    "end": "5505210"
  },
  {
    "text": "now this gets into I'm gonna copy and paste this depending on how familiar you",
    "start": "5505210",
    "end": "5511210"
  },
  {
    "text": "are with a node J s this is kind of in",
    "start": "5511210",
    "end": "5516550"
  },
  {
    "text": "depth mechanisms for making HP requests inside of no js' we're creating this",
    "start": "5516550",
    "end": "5525280"
  },
  {
    "text": "options object are using fetch so I'm using raw nodejs",
    "start": "5525280",
    "end": "5532210"
  },
  {
    "text": "there are part of me got excited about",
    "start": "5532210",
    "end": "5538330"
  },
  {
    "text": "using about building this function without needing any external third yeah so you actually have to wrap things",
    "start": "5538330",
    "end": "5547000"
  },
  {
    "text": "inside of promises and it's actually seven fun and semi nots but anyways all",
    "start": "5547000",
    "end": "5553840"
  },
  {
    "text": "this does yeah we create this object options object which with the domain",
    "start": "5553840",
    "end": "5559390"
  },
  {
    "text": "name the path and the headers which includes our API key right and then we",
    "start": "5559390",
    "end": "5564489"
  },
  {
    "text": "wrap the get function which we need to import from up here so the get function",
    "start": "5564489",
    "end": "5574330"
  },
  {
    "text": "is part the HTTP module while up here I",
    "start": "5574330",
    "end": "5580660"
  },
  {
    "text": "remember we're going to need AWS SDK here and so now we've got a",
    "start": "5580660",
    "end": "5593350"
  },
  {
    "text": "sorry now we're calling the get and it's all based on streams and so you know we",
    "start": "5593350",
    "end": "5600230"
  },
  {
    "text": "say make the request and then straight",
    "start": "5600230",
    "end": "5605810"
  },
  {
    "text": "when we stream in the data from the response chunk it into a thing when it's finished we parse it resolve it",
    "start": "5605810",
    "end": "5613310"
  },
  {
    "text": "so anyways all kinds of nitty gritty under the covers ways that we make that request and get the data back I'm gonna",
    "start": "5613310",
    "end": "5622070"
  },
  {
    "text": "make sure that that was the last piece it was and so we found our uniform yep",
    "start": "5622070",
    "end": "5630800"
  },
  {
    "text": "which is great so I'm gonna save this it's probably a good time to save that I",
    "start": "5630800",
    "end": "5637390"
  },
  {
    "text": "did remember after we deployed this out I made a mental note I forgot one step",
    "start": "5637390",
    "end": "5643239"
  },
  {
    "text": "which was we talked about creating our API in using commando for authenticating",
    "start": "5643239",
    "end": "5650000"
  },
  {
    "text": "yep but we didn't configure that authentication we didn't configure API",
    "start": "5650000",
    "end": "5656060"
  },
  {
    "text": "gateway to use that application exactly so this is one part where AWS Sam is",
    "start": "5656060",
    "end": "5663340"
  },
  {
    "text": "currently working on enabling the setting of course and authentic",
    "start": "5663340",
    "end": "5670100"
  },
  {
    "text": "authorizers at the same time in fact you can go on to Sam itself as an open",
    "start": "5670100",
    "end": "5675380"
  },
  {
    "text": "source project you can go onto the repository and you can see how even today there's PR comments going in to",
    "start": "5675380",
    "end": "5681800"
  },
  {
    "text": "make this easier but until that happens we don't have a great visual editing",
    "start": "5681800",
    "end": "5687530"
  },
  {
    "text": "mechanism for this stuff but it's a great opportunity to show how that's okay if you need to do something that",
    "start": "5687530",
    "end": "5693949"
  },
  {
    "text": "stacker e doesn't provide as a visual editing mechanism you can just hop right",
    "start": "5693949",
    "end": "5699080"
  },
  {
    "text": "in and add it yourself so there's this auth property where we can create",
    "start": "5699080",
    "end": "5705520"
  },
  {
    "text": "authorizers I need to make sure I get the right syntax so you're not using second I'm",
    "start": "5705520",
    "end": "5713240"
  },
  {
    "text": "not using the visual editor because we already missed the opportunity well not",
    "start": "5713240",
    "end": "5719000"
  },
  {
    "text": "not because of that it's because Sam itself doesn't have a great abstraction",
    "start": "5719000",
    "end": "5724910"
  },
  {
    "text": "for building this in once they have that we will be adding in visual editing work",
    "start": "5724910",
    "end": "5730070"
  },
  {
    "text": "workflow for it so I'm gonna pull this up because there's a few properties and",
    "start": "5730070",
    "end": "5735530"
  },
  {
    "text": "I want to make sure I get it right so while you're doing that there was a",
    "start": "5735530",
    "end": "5741590"
  },
  {
    "text": "question about WebSockets you can see in the chat yes can you do WebSockets and server list API gateway you can do",
    "start": "5741590",
    "end": "5748280"
  },
  {
    "text": "WebSockets and you would have a PA gateway in front of your lambda and then yes we actually support that where you",
    "start": "5748280",
    "end": "5757160"
  },
  {
    "text": "can drag in a web socket API and then you can create what they consider routes",
    "start": "5757160",
    "end": "5765250"
  },
  {
    "text": "inside of the API gateway abstraction from WebSockets so you can say if this",
    "start": "5765250",
    "end": "5770540"
  },
  {
    "text": "key of an incoming JSON message is this value call this function that's a",
    "start": "5770540",
    "end": "5776420"
  },
  {
    "text": "different value call this other function and so on and giving possibilities to",
    "start": "5776420",
    "end": "5782030"
  },
  {
    "text": "respond back to the client all that kind of stuff so one of the great things about stacker is some of the",
    "start": "5782030",
    "end": "5788570"
  },
  {
    "text": "documentation about web socket API is this new enough that it can be a little bit challenging to figure out how to",
    "start": "5788570",
    "end": "5794030"
  },
  {
    "text": "create a cloud formation based web socket API rather than clicking and",
    "start": "5794030",
    "end": "5799790"
  },
  {
    "text": "dragging through the management console us having that in there is is helping",
    "start": "5799790",
    "end": "5806450"
  },
  {
    "text": "our customers know how to do that easier and I want to give a shout out as well there's an amazing essay partner essay",
    "start": "5806450",
    "end": "5811910"
  },
  {
    "text": "that we've been working with and belney yeah and he helped us figure out how",
    "start": "5811910",
    "end": "5819950"
  },
  {
    "text": "best to build the WebSocket integration for Zachary so I know it's great so yeah",
    "start": "5819950",
    "end": "5828410"
  },
  {
    "text": "clearing up another question that I saw in the chat I was somebody was asking if this is a",
    "start": "5828410",
    "end": "5833540"
  },
  {
    "text": "cost-effective way to to use WebSockets for real-time data and I would say yes",
    "start": "5833540",
    "end": "5839660"
  },
  {
    "text": "because you get 1 million invocations of your lambda for free every month until",
    "start": "5839660",
    "end": "5845300"
  },
  {
    "text": "the end of time so we have two kinds of free tiers on AWS we have one that lasts for the year after you sign up so twelve",
    "start": "5845300",
    "end": "5852020"
  },
  {
    "text": "months and then we have one that is indefinite so it's free forever I don't know when the end of time is PST guys",
    "start": "5852020",
    "end": "5859490"
  },
  {
    "text": "I'm hoping it's a lot it's further away from you know 10 minutes from now at",
    "start": "5859490",
    "end": "5864980"
  },
  {
    "text": "tomorrow a year from now no idea when the anti will be we'll see how much we",
    "start": "5864980",
    "end": "5870470"
  },
  {
    "text": "destroy the environment but until the end of time you get 1 million invocations of lambda for free every",
    "start": "5870470",
    "end": "5876650"
  },
  {
    "text": "month and really when we talk about total cost of ownership for applications",
    "start": "5876650",
    "end": "5882050"
  },
  {
    "text": "it's one thing to say what is the cost comparison between running a fully",
    "start": "5882050",
    "end": "5889010"
  },
  {
    "text": "utilized high throughput web socket API versus what you could 3bi Gateway it was",
    "start": "5889010",
    "end": "5894620"
  },
  {
    "text": "what you could do on ec2 but the real question that you also need to consider is how cost effective is it for a team",
    "start": "5894620",
    "end": "5902090"
  },
  {
    "text": "to build this application agree so when you've got a production API through API",
    "start": "5902090",
    "end": "5908870"
  },
  {
    "text": "gateway that cost maybe 10% more than what you could do with ec2 but in a",
    "start": "5908870",
    "end": "5914480"
  },
  {
    "text": "service mechanism you can have your team of 10 developers have zero cost because",
    "start": "5914480",
    "end": "5920360"
  },
  {
    "text": "they're not going to be hitting this API with you know that with millions of",
    "start": "5920360",
    "end": "5925580"
  },
  {
    "text": "requests every second that's basically free whereas if you want an easy to",
    "start": "5925580",
    "end": "5930770"
  },
  {
    "text": "route every one of your developers probably has to have their own ec2 machine to make sure that this actually",
    "start": "5930770",
    "end": "5936350"
  },
  {
    "text": "works to do their own development so there's a there's a huge total cost of ownership improvement when you have a",
    "start": "5936350",
    "end": "5944450"
  },
  {
    "text": "team and organization building service application ID spending it's especially",
    "start": "5944450",
    "end": "5949970"
  },
  {
    "text": "great for startups Prince Aly Gigi has a question how would you describe or explain a lambda",
    "start": "5949970",
    "end": "5955430"
  },
  {
    "text": "what does stateless mean I have an answer but let's hear your answer first yeah all right so",
    "start": "5955430",
    "end": "5962600"
  },
  {
    "text": "great question Prince led the lambda itself the idea is that you don't",
    "start": "5962600",
    "end": "5970730"
  },
  {
    "text": "control the lifecycle that your function runs inside of you don't control the",
    "start": "5970730",
    "end": "5976760"
  },
  {
    "text": "environment yeah you don't control the environment which sounds crazy at first what it actually means is you don't have",
    "start": "5976760",
    "end": "5983180"
  },
  {
    "text": "to worry about how to scales how its high availability how its operating system and run time or patch you only",
    "start": "5983180",
    "end": "5989630"
  },
  {
    "text": "pay for what you use it stops running so when you say serverless obviously it does not mean that there's",
    "start": "5989630",
    "end": "5995660"
  },
  {
    "text": "not a server running somewhere because there definitely is a server running somewhere with your code on it",
    "start": "5995660",
    "end": "6000880"
  },
  {
    "text": "server list to me means it's server list to me meaning I am not touching that",
    "start": "6000880",
    "end": "6006910"
  },
  {
    "text": "server I am NOT setting up that server I'm not patching that server I'm not maintaining that server it is serverless",
    "start": "6006910",
    "end": "6013180"
  },
  {
    "text": "to me I am literally giving my code and someone else is putting it on a server and running it and you know you can",
    "start": "6013180",
    "end": "6020110"
  },
  {
    "text": "control pieces of the environment like environment variables as you've seen that we've doing with Zachary we can",
    "start": "6020110",
    "end": "6025870"
  },
  {
    "text": "also do directly in lambda and you can control the pieces of it like the memory that is using and how many seconds you",
    "start": "6025870",
    "end": "6031870"
  },
  {
    "text": "have a 15 minute timeout max on lambda but other than that you are not touching that environment at all it is serverless",
    "start": "6031870",
    "end": "6038920"
  },
  {
    "text": "to me right yeah so we've deployed out our new infrastructure with that",
    "start": "6038920",
    "end": "6044260"
  },
  {
    "text": "authentication piece I just kind of slipped it in as we were talking and now it's time to kind of test things out so",
    "start": "6044260",
    "end": "6050800"
  },
  {
    "text": "okay puts we're gonna request a unicorn yeah all right so I'm gonna request this have",
    "start": "6050800",
    "end": "6058210"
  },
  {
    "text": "no idea if it's gonna work of course it didn't and you know what we have to be logged in no no we actually see oh yeah",
    "start": "6058210",
    "end": "6067180"
  },
  {
    "text": "yeah random byte I think I think it's",
    "start": "6067180",
    "end": "6076660"
  },
  {
    "text": "actually an error that comes from that node.js function okay but the reason why",
    "start": "6076660",
    "end": "6082090"
  },
  {
    "text": "I came here not knowing if this was gonna work but trying it first is now what I can do is I can come back to our",
    "start": "6082090",
    "end": "6089200"
  },
  {
    "text": "console and I can say I can remember what is the command pluck",
    "start": "6089200",
    "end": "6098060"
  },
  {
    "text": "of it stacker II pluck oh and you can get the log for this single event yes and we'll",
    "start": "6098060",
    "end": "6110210"
  },
  {
    "text": "say this is a I'm gonna drop into the request unicorn function stacker e",
    "start": "6110210",
    "end": "6119800"
  },
  {
    "text": "events develop development my man what's the carrot at the end and oh you're",
    "start": "6119800",
    "end": "6125990"
  },
  {
    "text": "gonna put it in right I'm gonna put it into gonna put that JSON file in that",
    "start": "6125990",
    "end": "6136580"
  },
  {
    "text": "directory that you're in yes it's uh again with I needed to update one file",
    "start": "6136580",
    "end": "6143540"
  },
  {
    "text": "that has the defaults Oh to make sure that it's pulling correctly yeah so",
    "start": "6143540",
    "end": "6149090"
  },
  {
    "text": "update this to say",
    "start": "6149090",
    "end": "6152349"
  },
  {
    "text": "all right so we'll pluck an event your ball 51 why do bugging with alerts",
    "start": "6155780",
    "end": "6162050"
  },
  {
    "text": "that's just the front end you don't wear it right it's just a trust me here balance you're gonna see the hole 51",
    "start": "6162050",
    "end": "6169700"
  },
  {
    "text": "you're gonna see in a minute a much better way to debug this so when I asked staffer to do for me was go I'm in this",
    "start": "6169700",
    "end": "6178010"
  },
  {
    "text": "requesting a corner function go find that function in the development environment and just made a request to write go find the logs for it and find a",
    "start": "6178010",
    "end": "6186650"
  },
  {
    "text": "find Z get that one that one event that",
    "start": "6186650",
    "end": "6193990"
  },
  {
    "text": "that API gateway invoked that land of functionally yep and so here is all the",
    "start": "6193990",
    "end": "6200210"
  },
  {
    "text": "data for that one event it's kind of gnarly with it's it's all there in JSON",
    "start": "6200210",
    "end": "6205670"
  },
  {
    "text": "form what I can do now is say stacker e local invoke for the",
    "start": "6205670",
    "end": "6216590"
  },
  {
    "text": "development environments yeah watch I won't watch and I need one more thing it",
    "start": "6216590",
    "end": "6224180"
  },
  {
    "text": "is input file input file is request oh",
    "start": "6224180",
    "end": "6230360"
  },
  {
    "text": "you're just gonna invoke it again the same JSON so you can write the air exactly that's sick",
    "start": "6230360",
    "end": "6235730"
  },
  {
    "text": "yeah so yeah ten seconds you can also use the AWS BS code extension to debug",
    "start": "6235730",
    "end": "6243920"
  },
  {
    "text": "your lambda right right exactly yep breakpoint alright so I'm going to",
    "start": "6243920",
    "end": "6251710"
  },
  {
    "text": "make sure I've got my index file so we can take a look in a minute so we'll see we got that same error here",
    "start": "6251710",
    "end": "6258530"
  },
  {
    "text": "tea over coffee likes your extension awesome awesome thanks tea over coffee",
    "start": "6258530",
    "end": "6263930"
  },
  {
    "text": "alright so random bytes was undefined in",
    "start": "6263930",
    "end": "6270380"
  },
  {
    "text": "fact I think random bytes is a helper function I forgot to copy over from our",
    "start": "6270380",
    "end": "6277130"
  },
  {
    "text": "workshop so I'm gonna find oh no it is actually it is just a built-in crypto",
    "start": "6277130",
    "end": "6285620"
  },
  {
    "text": "module from nodejs so I saved that I added that and now",
    "start": "6285620",
    "end": "6292370"
  },
  {
    "text": "it's gonna reinvent so let's see what we got oh we just didn't require something",
    "start": "6292370",
    "end": "6297890"
  },
  {
    "text": "it was actually wonder when you were like oh I'm just gonna pull a ring",
    "start": "6297890",
    "end": "6304190"
  },
  {
    "text": "number I was like I didn't know that was a part of anything you didn't have to define that yeah yeah",
    "start": "6304190",
    "end": "6310580"
  },
  {
    "text": "alright so totally use that UUID package Stooges right yeah yeah so we made a",
    "start": "6310580",
    "end": "6317420"
  },
  {
    "text": "request it said we're making a request and I just realized we don't really have",
    "start": "6317420",
    "end": "6322480"
  },
  {
    "text": "some console.log we should probably put some console in here saying we got unicorn and we'll",
    "start": "6322480",
    "end": "6337730"
  },
  {
    "text": "see if what unicorn would got back from the unicorn state law these majestic",
    "start": "6337730",
    "end": "6343340"
  },
  {
    "text": "creatures one higher up where the random",
    "start": "6343340",
    "end": "6350719"
  },
  {
    "text": "bytes failed make sure we have a right ID one second that's a good question",
    "start": "6350719",
    "end": "6359210"
  },
  {
    "text": "let's yeah I do have received event oh",
    "start": "6359210",
    "end": "6369350"
  },
  {
    "text": "yeah no you're right nevermind yeah so up here probably the we'll see oh thank you thanks BST guy I'm sorry",
    "start": "6369350",
    "end": "6381500"
  },
  {
    "text": "that I have ruined your weekend I'm not",
    "start": "6381500",
    "end": "6387969"
  },
  {
    "text": "alright for that I'm here we go out my weekend good we got unicorn there's something weird",
    "start": "6389410",
    "end": "6394850"
  },
  {
    "text": "going on with like the text parsing in this terminal but basically we got it's more email use for named Florence mmm",
    "start": "6394850",
    "end": "6401330"
  },
  {
    "text": "its colors parchment it's a female weird so so the unicorn stable the staging API",
    "start": "6401330",
    "end": "6409040"
  },
  {
    "text": "there like parchment and taupe and but",
    "start": "6409040",
    "end": "6414980"
  },
  {
    "text": "the the production API you get the real unicorns like they're majestic they're like gold and rainbow and diamond and",
    "start": "6414980",
    "end": "6423410"
  },
  {
    "text": "things you're getting the real deal that your your money action yeah alright so",
    "start": "6423410",
    "end": "6428840"
  },
  {
    "text": "we got a unicorn we need to we need them now and so what we need to do is two",
    "start": "6428840",
    "end": "6438440"
  },
  {
    "text": "more things we now can get a unicorn we need to record that into the dynamic DB right stable got it and then we need to",
    "start": "6438440",
    "end": "6445670"
  },
  {
    "text": "send the response back out to the clients to to those let you know that you have a unicorn yeah exactly",
    "start": "6445670",
    "end": "6452060"
  },
  {
    "text": "so we're gonna create this function we're doing just perfect so now again",
    "start": "6452060",
    "end": "6457930"
  },
  {
    "text": "he's gonna use the AWS SDK to call DynamoDB and by the way I'm gonna post",
    "start": "6457930",
    "end": "6463300"
  },
  {
    "text": "the documentation to this cuz he's he was getting this from his github but it's also available on our just our",
    "start": "6463300",
    "end": "6469780"
  },
  {
    "text": "nodejs API reference which I refer to you like every other day so I'm gonna",
    "start": "6469780",
    "end": "6477550"
  },
  {
    "text": "post the link to it in case you just wanted to go directly to the docs or wanted to know where he's getting these",
    "start": "6477550",
    "end": "6484540"
  },
  {
    "text": "calls from right so we added this function called record right what that",
    "start": "6484540",
    "end": "6490510"
  },
  {
    "text": "does is it calls d DB dynamic DB i think somewhere in here i have to instantiate",
    "start": "6490510",
    "end": "6501880"
  },
  {
    "text": "the client yeah and you can instantiate it with config like a region right we",
    "start": "6501880",
    "end": "6507070"
  },
  {
    "text": "don't have to do that here because we're running a new lambda function which already has that kind of configuration that's why I love lambda as well right",
    "start": "6507070",
    "end": "6513790"
  },
  {
    "text": "but if you wanted to configure it for another region right and you're running or lambda and you don't also do that by don't think in a region yeah so we've",
    "start": "6513790",
    "end": "6521530"
  },
  {
    "text": "got dynamic DB we're putting a record into it yeah and the table name again",
    "start": "6521530",
    "end": "6527320"
  },
  {
    "text": "for those who may not have been here earlier when we were setting up all the wires and stuff the fact that we in our",
    "start": "6527320",
    "end": "6534490"
  },
  {
    "text": "in our visual editor the fact that standing yeah in stacker e the fact that we wired up from requesting a corn to",
    "start": "6534490",
    "end": "6541480"
  },
  {
    "text": "our rides table added permissions for us to access that table to dealing with I",
    "start": "6541480",
    "end": "6549550"
  },
  {
    "text": "am because it automatically for you and it adds this table name environment",
    "start": "6549550",
    "end": "6554770"
  },
  {
    "text": "variable that will be populated at deployment time with the the name of the",
    "start": "6554770",
    "end": "6561880"
  },
  {
    "text": "rides table so we use that table name environment variable here yeah",
    "start": "6561880",
    "end": "6567280"
  },
  {
    "text": "we add this item of this record to dynamic DB with the right ID the",
    "start": "6567280",
    "end": "6573580"
  },
  {
    "text": "username we requested it the unicorn the unicorn name and time cool so we've recorded that to our",
    "start": "6573580",
    "end": "6580750"
  },
  {
    "text": "dynamic DB table and the last thing we need to do is actually send a response",
    "start": "6580750",
    "end": "6586750"
  },
  {
    "text": "back to the U to the client yeah so we",
    "start": "6586750",
    "end": "6593170"
  },
  {
    "text": "make a very specific response back it's",
    "start": "6593170",
    "end": "6608590"
  },
  {
    "text": "like four tabs versus two tabs what is my ID expectable it's the code written in so we because this is an API gateway",
    "start": "6608590",
    "end": "6616330"
  },
  {
    "text": "proxy integration we have to return a special format an object that has the",
    "start": "6616330",
    "end": "6621760"
  },
  {
    "text": "status code 201 yeah the body which is adjacent 0 1 versus 200 I don't think I",
    "start": "6621760",
    "end": "6628810"
  },
  {
    "text": "did this I think this is one a wsn so I can't tell you is that like why don't we",
    "start": "6628810",
    "end": "6634960"
  },
  {
    "text": "look at does anyone know - oh let's see",
    "start": "6634960",
    "end": "6640350"
  },
  {
    "text": "okay we re ated oh that's right created we created a record yes there we go yes",
    "start": "6640350",
    "end": "6648250"
  },
  {
    "text": "you guys a question for you oh yeah does this work with the local version lambda for testing I think we're you can",
    "start": "6648250",
    "end": "6658060"
  },
  {
    "text": "correct me if I'm wrong but what I think you're asking is can I do testing with this local invocation stuff and we don't",
    "start": "6658060",
    "end": "6666400"
  },
  {
    "text": "have a mechanism out of the box when we enable that but there is nothing that",
    "start": "6666400",
    "end": "6672280"
  },
  {
    "text": "stops you from doing it it is super easy to call our CLI and you know see you can",
    "start": "6672280",
    "end": "6679810"
  },
  {
    "text": "do that as part of a test harness to test your inputs and outputs of your function if you're not if you're asking",
    "start": "6679810",
    "end": "6686770"
  },
  {
    "text": "a different question which is can you locally test this lambda I'm showing that with stacker e so basically with",
    "start": "6686770",
    "end": "6693460"
  },
  {
    "text": "Sam local you can test your lambda locally and what Sam does is it will create a docker container that mimics",
    "start": "6693460",
    "end": "6700420"
  },
  {
    "text": "the lambdas environment and then runs your code through that container to test for allow you to test it local",
    "start": "6700420",
    "end": "6706480"
  },
  {
    "text": "what staffer he does is they wrap Sam local Sam locals code or that command",
    "start": "6706480",
    "end": "6712300"
  },
  {
    "text": "and they add two extra pieces to it one being they assumed the I am role so that you would get permissions errors locally",
    "start": "6712300",
    "end": "6720130"
  },
  {
    "text": "as well so you don't have to deploy it to see those which is great and the second thing they had is environment",
    "start": "6720130",
    "end": "6725650"
  },
  {
    "text": "variables so you can plug-in environment variables into that docker container yes",
    "start": "6725650",
    "end": "6730750"
  },
  {
    "text": "can they make those as well so you'll see here I save the function which we ran it and we got our nice API gateway",
    "start": "6730750",
    "end": "6737770"
  },
  {
    "text": "expected Jason back so he's running this locally right now because you guy mm-hmm but here's the interesting thing I've",
    "start": "6737770",
    "end": "6744760"
  },
  {
    "text": "been running it locally but with the permissions that this function has when it's deployed and with the same",
    "start": "6744760",
    "end": "6750100"
  },
  {
    "text": "environment variables which means that even though I'm running the code locally I'm still interacting with the dynamic",
    "start": "6750100",
    "end": "6756730"
  },
  {
    "text": "DB table yeah that's always real why don't we get running though even if",
    "start": "6756730",
    "end": "6762460"
  },
  {
    "text": "you're using Sam local or if you're using stacker II what is the CLI command local local invokes a free local invoke",
    "start": "6762460",
    "end": "6771160"
  },
  {
    "text": "if you're using either of the two even though it is running your code locally in a local doctor container on your",
    "start": "6771160",
    "end": "6777460"
  },
  {
    "text": "machine it is still if that lambda is calling any AWS services it's calling",
    "start": "6777460",
    "end": "6782770"
  },
  {
    "text": "them in the cloud so right we just wrote some code for him to insert into a dynamo table a record and when he ran it",
    "start": "6782770",
    "end": "6789640"
  },
  {
    "text": "locally you can see that it inserted it and inserted this record okay we have another question princess Prince AVI",
    "start": "6789640",
    "end": "6796540"
  },
  {
    "text": "Gigi says the function that requests the unicorn is the lambda right so the",
    "start": "6796540",
    "end": "6802650"
  },
  {
    "text": "function requesting the unicorn is inside the lambdas one of the things that the lambdas doing and the Unicorn",
    "start": "6802650",
    "end": "6808870"
  },
  {
    "text": "is coming back from a third a third party API since the benefit of the lambda is it",
    "start": "6808870",
    "end": "6815470"
  },
  {
    "text": "can scale if there are multiple requests for rides at once am I on the right track yeah",
    "start": "6815470",
    "end": "6822930"
  }
]