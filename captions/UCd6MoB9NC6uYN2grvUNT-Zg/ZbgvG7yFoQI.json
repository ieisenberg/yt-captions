[
  {
    "text": "all right hey everybody thanks for coming out um my name is Tom Jones I'm a solution",
    "start": "719",
    "end": "7399"
  },
  {
    "text": "architect on our partner team work with a bunch of our partners and today we're going to talk about the uh AWS",
    "start": "7399",
    "end": "15320"
  },
  {
    "text": "CLI so um we're going to go pretty deep in here um hopefully this will give you",
    "start": "15320",
    "end": "23560"
  },
  {
    "text": "uh you know a a good look at the CLI help you be a little more well-rounded",
    "start": "23560",
    "end": "29519"
  },
  {
    "text": "with the things that you can do with it and um you know as we dive into the",
    "start": "29519",
    "end": "35480"
  },
  {
    "text": "advanced features um we're going to look at the the core usage scenarios for the the CLI",
    "start": "35480",
    "end": "43600"
  },
  {
    "text": "and we're going to explore them and what I really want you to take away from this is what else you'll be able to do using",
    "start": "43600",
    "end": "50800"
  },
  {
    "text": "the CLI and what else will help you and the end goal is to make us all more proficient at using the CLI and",
    "start": "50800",
    "end": "58359"
  },
  {
    "text": "hopefully you can incorporate some of these things into your day-to-day uh use of the AWS",
    "start": "58359",
    "end": "65440"
  },
  {
    "text": "CLI so I'm going to talk about three broad categories here right uh if you're",
    "start": "65840",
    "end": "71520"
  },
  {
    "text": "not familiar with the AWS CLI that's okay we're going to do a brief crash course uh introduction then we're going",
    "start": "71520",
    "end": "78400"
  },
  {
    "text": "to talk about some of the uh more uh foundational aspects of the CLI and then",
    "start": "78400",
    "end": "83759"
  },
  {
    "text": "finally we're going to get into some Advanced scenarios and some new features",
    "start": "83759",
    "end": "89640"
  },
  {
    "text": "so the first thing I want to talk about is uh just a quick crash course on the CLI so uh quick raise of hands here who",
    "start": "90520",
    "end": "97880"
  },
  {
    "text": "has not used the CLI all right we got quite a few people",
    "start": "97880",
    "end": "103399"
  },
  {
    "text": "that are new to this so welcome and hopefully you'll be taking some good stuff away from",
    "start": "103399",
    "end": "108640"
  },
  {
    "text": "this um so if you've never heard of it before the CLI is a unified tool to",
    "start": "108640",
    "end": "115119"
  },
  {
    "text": "manage your AWS services and by that I mean it's a single tool that you can uh",
    "start": "115119",
    "end": "121560"
  },
  {
    "text": "install and configure which gives you access to all the various AWS services",
    "start": "121560",
    "end": "127560"
  },
  {
    "text": "and it's really easy to install we support three different installation methods we have a MSI installer for",
    "start": "127560",
    "end": "134680"
  },
  {
    "text": "Windows we've got a archive file a bundled file that's available uh it's",
    "start": "134680",
    "end": "140519"
  },
  {
    "text": "crossplatform and uh if you're using python or a platform that supports python you can",
    "start": "140519",
    "end": "146560"
  },
  {
    "text": "use pip uh with the uh pip install AWS CLI command it's pretty easy so once you",
    "start": "146560",
    "end": "155080"
  },
  {
    "text": "have the uh CLI installed on your uh machine the next step is to go ahead and",
    "start": "155080",
    "end": "160640"
  },
  {
    "text": "configure it and the easiest way to configure it is with this simple little command here uh AWS configure It'll ask",
    "start": "160640",
    "end": "168560"
  },
  {
    "text": "you a few questions uh about your configuration and then your system will be all set up um one of the things as",
    "start": "168560",
    "end": "175920"
  },
  {
    "text": "you start to use the CLI to be aware of is that the commands follow a consistent",
    "start": "175920",
    "end": "181239"
  },
  {
    "text": "calling pattern so every command has a similar structure where we see uh",
    "start": "181239",
    "end": "186799"
  },
  {
    "text": "everything's uh starts with AWS and then uh you have the command and sub command",
    "start": "186799",
    "end": "192640"
  },
  {
    "text": "and typically that command is the service that you're calling and then the subcommand is the operation that you're",
    "start": "192640",
    "end": "200319"
  },
  {
    "text": "going to be taking so if I wanted to make a call to a different service it would say follow",
    "start": "200319",
    "end": "206519"
  },
  {
    "text": "that same pattern and uh let me back up a second so here we're calling ec2",
    "start": "206519",
    "end": "212480"
  },
  {
    "text": "describe instances which will tell us about the instances that we have uh provisioned and then here we're calling",
    "start": "212480",
    "end": "218879"
  },
  {
    "text": "IM am which is our identity and access management uh tool okay as far as output what we see",
    "start": "218879",
    "end": "226959"
  },
  {
    "text": "when we call the uh us CLI we've got three different types of output the",
    "start": "226959",
    "end": "232480"
  },
  {
    "text": "default output is Json you can see that here uh you can specify the output with this-- output command we see at the top",
    "start": "232480",
    "end": "239239"
  },
  {
    "text": "of the um screen the other two uh options are we have a text output option these are tab",
    "start": "239239",
    "end": "246840"
  },
  {
    "text": "separated columns and then finally uh but certainly last but not least uh we",
    "start": "246840",
    "end": "252879"
  },
  {
    "text": "have an out a table format uh which is uh really nice for visually parsing",
    "start": "252879",
    "end": "258519"
  },
  {
    "text": "things so here are our our three output types so depending upon what you're",
    "start": "258519",
    "end": "264080"
  },
  {
    "text": "trying to do you can uh choose the appropriate format and like I said you can override provide the default uh",
    "start": "264080",
    "end": "272199"
  },
  {
    "text": "output format um on the command line per invocation by using that-- output uh",
    "start": "272199",
    "end": "279840"
  },
  {
    "text": "syntax or you can just run the AWS configure command and set the the uh",
    "start": "279840",
    "end": "285680"
  },
  {
    "text": "default in your configuration files um the the Json format is really",
    "start": "285680",
    "end": "292600"
  },
  {
    "text": "great if you have tools that are going to parse that and and you want to do some type of programmatic access using",
    "start": "292600",
    "end": "298960"
  },
  {
    "text": "the the output um the tab separated outputs really great if you're using it along with you",
    "start": "298960",
    "end": "305720"
  },
  {
    "text": "know grap or said or a okay so I went through that really",
    "start": "305720",
    "end": "312960"
  },
  {
    "text": "fast let's go ahead we're going to switch to my other machine here just just went to sleep just a second",
    "start": "312960",
    "end": "322680"
  },
  {
    "text": "here okay great so what we're going to do is um we're going to take a walk",
    "start": "327039",
    "end": "334280"
  },
  {
    "text": "through of this um of the CLI so I just have a command line here",
    "start": "334280",
    "end": "342800"
  },
  {
    "text": "clear so like I said you can do a pip install AWS CLI I've already done this",
    "start": "342800",
    "end": "350400"
  },
  {
    "text": "so I don't need to install it but that's the command that you would use to run or to install it um and then we can see",
    "start": "350400",
    "end": "358199"
  },
  {
    "text": "cancel that we can see that if I run uh AWS D- version it'll show me the version",
    "start": "358199",
    "end": "365840"
  },
  {
    "text": "of the CLI that I have installed so like I said one of the first things we're going to do is we're going to go ahead",
    "start": "365840",
    "end": "371599"
  },
  {
    "text": "and run the configure command",
    "start": "371599",
    "end": "376720"
  },
  {
    "text": "uh and it's going to ask us those questions I'm just going to enter through here because I've already gone and configured this but you can see the",
    "start": "377160",
    "end": "384160"
  },
  {
    "text": "four questions that it asks us uh I have my default well your your secret access",
    "start": "384160",
    "end": "389280"
  },
  {
    "text": "key or your access key your secret access key your default region and the default output format super easy to",
    "start": "389280",
    "end": "396360"
  },
  {
    "text": "change that um using this configure command um and then we can do uh maybe",
    "start": "396360",
    "end": "403039"
  },
  {
    "text": "run one of the commands that we saw earlier right so we can just run uh AWS",
    "start": "403039",
    "end": "409720"
  },
  {
    "text": "ec2 scribe regions and this will uh hopefully there",
    "start": "409720",
    "end": "417039"
  },
  {
    "text": "we go the outputs are regions in that B on format I can go ahead and change that just like we were talking about change",
    "start": "417039",
    "end": "423560"
  },
  {
    "text": "that to uh maybe we'll put that in text",
    "start": "423560",
    "end": "429000"
  },
  {
    "text": "format so there we get our nice uh tab uh separated format and then we can",
    "start": "430400",
    "end": "436840"
  },
  {
    "text": "do things like we can pass that to maybe cut and we're just going to get the the",
    "start": "436840",
    "end": "442919"
  },
  {
    "text": "name of the region right so really kind of straightforward um the other thing we",
    "start": "442919",
    "end": "449000"
  },
  {
    "text": "can do is we can do this let's just uh do this in table",
    "start": "449000",
    "end": "454319"
  },
  {
    "text": "format so then we get a nice easy way to visually parse",
    "start": "454319",
    "end": "460120"
  },
  {
    "text": "that okay can can I ask you to Cle it oh",
    "start": "460120",
    "end": "465199"
  },
  {
    "text": "yeahp you got to is that better yeah okay yeah I'm",
    "start": "465199",
    "end": "471440"
  },
  {
    "text": "looking at this and it's a little bit different than that so thank you um the",
    "start": "471440",
    "end": "477000"
  },
  {
    "text": "next thing uh I want to talk about is so that's a b basic usage but as you're using the CLI there's a lot of things",
    "start": "477000",
    "end": "483720"
  },
  {
    "text": "that you can do so um let's take a look at uh every one of the uh calls that you",
    "start": "483720",
    "end": "490560"
  },
  {
    "text": "can make has a help associated with it so let's just go back to um or describe",
    "start": "490560",
    "end": "496159"
  },
  {
    "text": "instances call right here and let's just say",
    "start": "496159",
    "end": "502039"
  },
  {
    "text": "oops and then we'll just say help right so you can get a man page for each one",
    "start": "505120",
    "end": "510319"
  },
  {
    "text": "of the um uh you know one of the actions that you can take and it'll give you you know",
    "start": "510319",
    "end": "517518"
  },
  {
    "text": "a description a synopsis all the various options that are available um down here",
    "start": "517519",
    "end": "523560"
  },
  {
    "text": "at the bottom they uh usually have some examples that you can walk through and",
    "start": "523560",
    "end": "528720"
  },
  {
    "text": "then finally you get the output all right a definition of the output that it's going to give you so um take",
    "start": "528720",
    "end": "536240"
  },
  {
    "text": "advantage uh of that um okay let me clear that",
    "start": "536240",
    "end": "545120"
  },
  {
    "text": "oops so that's help um the next thing to take a note of is that um there's a",
    "start": "545640",
    "end": "553200"
  },
  {
    "text": "syntax that you can use if you want to specify a file as an input and uh let's",
    "start": "553200",
    "end": "562000"
  },
  {
    "text": "see sorry all right switch terminals here",
    "start": "562519",
    "end": "570760"
  },
  {
    "text": "I'll get to that in a minute",
    "start": "570760",
    "end": "574880"
  },
  {
    "text": "um so you'll see in this command here um we're using this um down here at the end",
    "start": "579600",
    "end": "587920"
  },
  {
    "text": "this D- file or I'm sorry file colon SL slash as a way to specify hey I want to",
    "start": "587920",
    "end": "595320"
  },
  {
    "text": "input or or use a file as an input to the command line um and we can even do things like uh",
    "start": "595320",
    "end": "602519"
  },
  {
    "text": "let's see so I can run that oh that one already exists sorry change my region",
    "start": "602519",
    "end": "610160"
  },
  {
    "text": "here okay so that went ahead and imported that key pair for me but if I had something else like this key name",
    "start": "614760",
    "end": "621720"
  },
  {
    "text": "right maybe this key name was actually just another file I could once again use that uh file",
    "start": "621720",
    "end": "628120"
  },
  {
    "text": "col key name um and and import that um file okay",
    "start": "628120",
    "end": "635040"
  },
  {
    "text": "we'll see more of this later all right uh so let's switch back to the",
    "start": "635040",
    "end": "641959"
  },
  {
    "text": "PowerPoint so can we switch back to the PowerPoint awesome thank you",
    "start": "649000",
    "end": "656720"
  },
  {
    "text": "um okay so that was a basic introduction um there's more details in our user",
    "start": "656880",
    "end": "662480"
  },
  {
    "text": "guide so take advantage of that if you're new uh great documentation online",
    "start": "662480",
    "end": "668360"
  },
  {
    "text": "um so but let's go a little bit deeper let's get into some more foundational or core aspects of the",
    "start": "668360",
    "end": "675160"
  },
  {
    "text": "CLI so one of the first thing we're going to look at is that configuration",
    "start": "675160",
    "end": "680320"
  },
  {
    "text": "right we touched on it but let's go a little bit deeper into that and and take a look at what's actually",
    "start": "680320",
    "end": "687360"
  },
  {
    "text": "happening so previously saw you'd run AWS configure but one of the things is",
    "start": "687800",
    "end": "693720"
  },
  {
    "text": "maybe uh well and here's the things that it's going to do right we saw all that but let's see what's happening under the",
    "start": "693720",
    "end": "699760"
  },
  {
    "text": "hood and where these things are getting written out the other thing that's maybe not",
    "start": "699760",
    "end": "705680"
  },
  {
    "text": "obvious is that the configure also has a few sub commands that you can um run",
    "start": "705680",
    "end": "711880"
  },
  {
    "text": "along with it and those are list get and Set uh list is great for helping you",
    "start": "711880",
    "end": "717920"
  },
  {
    "text": "debug where uh various configuration variables come from and we're going to take a look at get and set in a little",
    "start": "717920",
    "end": "724000"
  },
  {
    "text": "more detail so for example here I can go ahead and use configure to get the",
    "start": "724000",
    "end": "731360"
  },
  {
    "text": "region that I'm running in and one of the things that's interesting about this particular um command is that the output",
    "start": "731360",
    "end": "740519"
  },
  {
    "text": "is not in Json or you know it's not in one of the output formats um it's it's",
    "start": "740519",
    "end": "747199"
  },
  {
    "text": "sent to standard out so you can uh use this if you need programmatic access to",
    "start": "747199",
    "end": "752399"
  },
  {
    "text": "configuration variables if we take a look at the set command um you'll notice here I'm",
    "start": "752399",
    "end": "760040"
  },
  {
    "text": "actually doing two things the first thing is I'm setting the region to uswest",
    "start": "760040",
    "end": "765320"
  },
  {
    "text": "2 and then I'm also setting a profile right in this case a production profile",
    "start": "765320",
    "end": "772440"
  },
  {
    "text": "so what is that mean right so um a profile is a set of configuration",
    "start": "772440",
    "end": "779639"
  },
  {
    "text": "values and you might imagine that I could have a development profile in addition to a production profile and",
    "start": "779639",
    "end": "786720"
  },
  {
    "text": "each one of those would have their own set of site specific uh configurations",
    "start": "786720",
    "end": "792360"
  },
  {
    "text": "or or resources that they have access to",
    "start": "792360",
    "end": "797440"
  },
  {
    "text": "permissions um and the way that you would use a profile is uh typically",
    "start": "797720",
    "end": "802959"
  },
  {
    "text": "you're going to you're going to use that Das Dash profile syntax to apply that",
    "start": "802959",
    "end": "809279"
  },
  {
    "text": "profile to the command that you're running and you can apply this to any uh command and it's going to run with the",
    "start": "809279",
    "end": "816360"
  },
  {
    "text": "specifications in that profile so one of the things that comes",
    "start": "816360",
    "end": "822839"
  },
  {
    "text": "up frequently uh as we're talking about the configuration files for the CLI is",
    "start": "822839",
    "end": "829040"
  },
  {
    "text": "that uh if you either want to backup these files or you want to edit these files we we need to understand a little",
    "start": "829040",
    "end": "835040"
  },
  {
    "text": "bit more about where these files are and what's being held in them",
    "start": "835040",
    "end": "840279"
  },
  {
    "text": "um so we actually write out two files there's a credentials file on the left and the um the uh config file the AWS",
    "start": "840279",
    "end": "849079"
  },
  {
    "text": "config file on the right the shared credentials file is it only contains",
    "start": "849079",
    "end": "855320"
  },
  {
    "text": "credentials um so an access key and a secret access key um and uh an optional",
    "start": "855320",
    "end": "862240"
  },
  {
    "text": "session to token but we're not going to get into that so the nice thing about this is that by default AWS CL writes",
    "start": "862240",
    "end": "869560"
  },
  {
    "text": "this out for you and these are the shared credentials that are used by all of the other uh AWS sdks so if you're",
    "start": "869560",
    "end": "877759"
  },
  {
    "text": "using our python SDK or the JavaScript SDK it's going to look in this credentials file uh for your access the",
    "start": "877759",
    "end": "885800"
  },
  {
    "text": "AWS config file is only used by the CLI and it's going to have the CLI specific",
    "start": "885800",
    "end": "891720"
  },
  {
    "text": "things in it like the region um what output format to use and so on",
    "start": "891720",
    "end": "899880"
  },
  {
    "text": "and the reason I want to highlight this is because the configure command understands all of this and it handles",
    "start": "900160",
    "end": "905959"
  },
  {
    "text": "the details for you automatically so as we if we go through an example of using that set command",
    "start": "905959",
    "end": "915040"
  },
  {
    "text": "um we'll see it fill out both of these files so here I'm uh setting the access",
    "start": "915040",
    "end": "922600"
  },
  {
    "text": "key and if there's no section it's going to write it for us so here it created that prod profile for",
    "start": "922600",
    "end": "929560"
  },
  {
    "text": "and wrote out our secret our access key same thing with the secret access",
    "start": "929560",
    "end": "936279"
  },
  {
    "text": "key um and I want to point out here that when you set a configuration variable it",
    "start": "937959",
    "end": "943600"
  },
  {
    "text": "doesn't parse it and then rewrite out all the variables right so if you have comments or particular formatting in one",
    "start": "943600",
    "end": "950519"
  },
  {
    "text": "of these files um it's not going to touch that right it's going to just upend",
    "start": "950519",
    "end": "956759"
  },
  {
    "text": "it so there we go so it's sees uh you know for example it sees that the next",
    "start": "956759",
    "end": "963600"
  },
  {
    "text": "line is uh blank in the file and it's going to write it",
    "start": "963600",
    "end": "968839"
  },
  {
    "text": "there uh and just for completeness the other questions you get asked are the region and that gets set in the config",
    "start": "969079",
    "end": "977560"
  },
  {
    "text": "file and uh the same thing with the output",
    "start": "977560",
    "end": "982959"
  },
  {
    "text": "format there we go um and notice that the configure command understands the",
    "start": "984560",
    "end": "990800"
  },
  {
    "text": "difference between the two formats the CLI has a slightly different format for",
    "start": "990800",
    "end": "995959"
  },
  {
    "text": "profiles and that's because there's other sections that you can have in that configuration file that are not profiles",
    "start": "995959",
    "end": "1003319"
  },
  {
    "text": "so you have to prefix it with profile ahead of it in the credentials file you only have",
    "start": "1003319",
    "end": "1010639"
  },
  {
    "text": "profiles okay so if we bring all this together we can write uh you know here we have a bash script that go goes ahead",
    "start": "1011240",
    "end": "1018560"
  },
  {
    "text": "and um does something like let's create an IM am user and then we're going to",
    "start": "1018560",
    "end": "1023880"
  },
  {
    "text": "create credentials for that user and then we're going to uh have it configure",
    "start": "1023880",
    "end": "1030280"
  },
  {
    "text": "a new profile so we can use it with the AWS CLI right and so when we're we're",
    "start": "1030280",
    "end": "1036438"
  },
  {
    "text": "walking through this code what happens uh is that we're first going to create that I oops create that I am",
    "start": "1036439",
    "end": "1044360"
  },
  {
    "text": "user and then next we're going to get uh or we're going to create cred Cals for",
    "start": "1044360",
    "end": "1050200"
  },
  {
    "text": "this user by default there's no credentials associated with the user we created and you can see this D- query uh",
    "start": "1050200",
    "end": "1058320"
  },
  {
    "text": "syntax here kind of in the middle we're going to take a look at that in more detail in just a",
    "start": "1058320",
    "end": "1064519"
  },
  {
    "text": "minute but here we're grabbing the secret or we're grabbing the keys and",
    "start": "1064640",
    "end": "1069960"
  },
  {
    "text": "then finally we're going to use the set command we talked about to set a new",
    "start": "1069960",
    "end": "1075840"
  },
  {
    "text": "profile and so that's that's our whole script and oops back",
    "start": "1075840",
    "end": "1082360"
  },
  {
    "text": "up um and so this allows you to to create a new profile in the AWS CLI uh",
    "start": "1082360",
    "end": "1089679"
  },
  {
    "text": "entirely programmatically okay so the takeaway",
    "start": "1089679",
    "end": "1094960"
  },
  {
    "text": "here is that if you need programmatic access to your configuration files check out the AWS configure Suite of sub",
    "start": "1094960",
    "end": "1103919"
  },
  {
    "text": "commands all right so let's um I'm going to talk about that-- query",
    "start": "1103919",
    "end": "1109480"
  },
  {
    "text": "uh syntax next that we just saw um so one of the most common things you do",
    "start": "1109480",
    "end": "1114720"
  },
  {
    "text": "with the CLI is you get a whole bunch of output and being able to filter through that output is a very common task so uh",
    "start": "1114720",
    "end": "1123200"
  },
  {
    "text": "you typically only want a subset of the data that that you get so if we take a look here this uh query uh string or",
    "start": "1123200",
    "end": "1132559"
  },
  {
    "text": "this query syntax um gives you the ability to do that and I'm going to go",
    "start": "1132559",
    "end": "1137640"
  },
  {
    "text": "into some detail around this this uh but first let's talk about it at at a high level so um to give you an idea of what",
    "start": "1137640",
    "end": "1146039"
  },
  {
    "text": "this does uh at that high level where uh you know for example if you run AWS ec2",
    "start": "1146039",
    "end": "1154320"
  },
  {
    "text": "describe instances uh or something similar and you hit enter we're going to parse that command we're going to create",
    "start": "1154320",
    "end": "1161120"
  },
  {
    "text": "an HTTP request and then you're going to get a response back uh and this is",
    "start": "1161120",
    "end": "1166159"
  },
  {
    "text": "respon this uh is what we this parse response is what we want to get a little more dive into a little more deeply so",
    "start": "1166159",
    "end": "1173960"
  },
  {
    "text": "what we do uh first is parse the response body and then we apply this query expression to it and then we send",
    "start": "1173960",
    "end": "1181080"
  },
  {
    "text": "that output to whatever the output renderer is table text or Json and then",
    "start": "1181080",
    "end": "1186240"
  },
  {
    "text": "it'll get printed to standard out so um to give you a more concrete example",
    "start": "1186240",
    "end": "1192280"
  },
  {
    "text": "imagine here is uh XML response uh from an AWS service",
    "start": "1192280",
    "end": "1198919"
  },
  {
    "text": "will get uh parsed uh internally in the CLI using uh python so the CLI is",
    "start": "1198919",
    "end": "1205000"
  },
  {
    "text": "written in Python this is uh python uh data structure we see a dictionary of",
    "start": "1205000",
    "end": "1210240"
  },
  {
    "text": "lists of python types and then uh we're going to apply that query uh you know if a query's been",
    "start": "1210240",
    "end": "1218919"
  },
  {
    "text": "query's been requested we'll apply that query to the um data and then we're",
    "start": "1218919",
    "end": "1225120"
  },
  {
    "text": "going to filter that down using the query um and and then we're going to let's say",
    "start": "1225120",
    "end": "1232440"
  },
  {
    "text": "we're rendering in table format we're going to send that to the renderer and it's going to Output that in or display",
    "start": "1232440",
    "end": "1238200"
  },
  {
    "text": "it in table format so uh that's where query fits into the",
    "start": "1238200",
    "end": "1244080"
  },
  {
    "text": "process and it also fits or plays nicely with",
    "start": "1244080",
    "end": "1249559"
  },
  {
    "text": "pagination okay as far as the language that Cy uses he uses this James path.org",
    "start": "1249840",
    "end": "1256000"
  },
  {
    "text": "language and um we're going to take a look at that so uh let's switch over to",
    "start": "1256000",
    "end": "1262840"
  },
  {
    "text": "the uh other computer which is once again going to sleep sorry and um we're going to take a look",
    "start": "1262840",
    "end": "1269679"
  },
  {
    "text": "at James path here hopefully is",
    "start": "1269679",
    "end": "1277519"
  },
  {
    "text": "it maybe should I unplug this and try it again uh yeah but",
    "start": "1277600",
    "end": "1285600"
  },
  {
    "text": "I all right here I'm just going to try oh there it",
    "start": "1286159",
    "end": "1293120"
  },
  {
    "text": "goes nothing like a live demo there we go",
    "start": "1296200",
    "end": "1301080"
  },
  {
    "text": "awesome okay so let's take a look here we're going to switch over to the browser take a look at the James path",
    "start": "1304559",
    "end": "1310880"
  },
  {
    "text": "site so this is James path.org um it has U you know a complete definition of the",
    "start": "1310880",
    "end": "1317919"
  },
  {
    "text": "language um there's all the uh there's there's a ton of examples there's some great",
    "start": "1317919",
    "end": "1324240"
  },
  {
    "text": "tutorials um hopefully you guys can see that um on",
    "start": "1324240",
    "end": "1329799"
  },
  {
    "text": "the tutorial page there's lots of tutorials here so it's really easy to get an idea of what the syntax is in uh",
    "start": "1329799",
    "end": "1336799"
  },
  {
    "text": "James path um so check that out but since this is a talk on the command line",
    "start": "1336799",
    "end": "1343440"
  },
  {
    "text": "I didn't want to show you the stuff in the browser we'll go and uh do this from the command line",
    "start": "1343440",
    "end": "1349240"
  },
  {
    "text": "so if we take a look here this is uh a text or console based",
    "start": "1349240",
    "end": "1356480"
  },
  {
    "text": "uh version that we can use to um work with the syntax in James path",
    "start": "1356480",
    "end": "1364559"
  },
  {
    "text": "so I'm taking a look here at a uh output from an S3",
    "start": "1364559",
    "end": "1370840"
  },
  {
    "text": "command that's uh listing my objects and um one of the first things",
    "start": "1370840",
    "end": "1377240"
  },
  {
    "text": "we can do is we can you know start to to filter through this so we say um maybe I",
    "start": "1377240",
    "end": "1382679"
  },
  {
    "text": "just want to get to Common prefixes all right and then I could",
    "start": "1382679",
    "end": "1388640"
  },
  {
    "text": "filter that down and say I just want the prefix let me type something WR uh",
    "start": "1388640",
    "end": "1396799"
  },
  {
    "text": "prefixes prefixes I want all of the elements in it oops all the elements in",
    "start": "1396799",
    "end": "1405400"
  },
  {
    "text": "there and then I want the prefix right um the other thing you'll see is",
    "start": "1405520",
    "end": "1412720"
  },
  {
    "text": "that you can do things like um let's say let's look at the contents",
    "start": "1412720",
    "end": "1418200"
  },
  {
    "text": "because there's a lot more um in there so I say contents and let's look at everything in",
    "start": "1418200",
    "end": "1424240"
  },
  {
    "text": "that um or the first that's the first element right we say everything with a star um you can also index them you know",
    "start": "1424240",
    "end": "1432919"
  },
  {
    "text": "individually so there I'm choosing the second element um this is uses if you're",
    "start": "1432919",
    "end": "1438159"
  },
  {
    "text": "familiar with python syntax you can also do indexing from the the back so you can",
    "start": "1438159",
    "end": "1443760"
  },
  {
    "text": "get the last element or the second to last element um and then we can also uh dig",
    "start": "1443760",
    "end": "1452720"
  },
  {
    "text": "into that a little bit more by saying all right maybe I don't want all that data Maybe I just want uh the",
    "start": "1452720",
    "end": "1460360"
  },
  {
    "text": "key and key and key and the size",
    "start": "1460360",
    "end": "1469080"
  },
  {
    "text": "okay um so here I'm grabbing a list that",
    "start": "1469080",
    "end": "1475039"
  },
  {
    "text": "corresponds to the key in the size but I could also include an expression so",
    "start": "1475039",
    "end": "1480240"
  },
  {
    "text": "let's say I want the owner",
    "start": "1480240",
    "end": "1485360"
  },
  {
    "text": "um ID",
    "start": "1485360",
    "end": "1491000"
  },
  {
    "text": "um and other thing that comes up frequently is that you can create uh a list of hashes so let's get rid of this",
    "start": "1491000",
    "end": "1498919"
  },
  {
    "text": "and let's create a list of hashes so uh we can say I want the key key and I want",
    "start": "1498919",
    "end": "1506520"
  },
  {
    "text": "that as the key and I want uh let's say",
    "start": "1506520",
    "end": "1511880"
  },
  {
    "text": "the um bites what said bytes is the",
    "start": "1511880",
    "end": "1518440"
  },
  {
    "text": "size size size and we'll have the um ID be the",
    "start": "1518440",
    "end": "1530279"
  },
  {
    "text": "owner ID right so that's pretty",
    "start": "1530279",
    "end": "1536600"
  },
  {
    "text": "straightforward hopefully everybody's uh comfortable with that one of the new things we can do is we can actually add",
    "start": "1536600",
    "end": "1543520"
  },
  {
    "text": "in a literal right so we can just say all right uh I want to add a string in",
    "start": "1543520",
    "end": "1548799"
  },
  {
    "text": "here and uh I'm going to say that is uh we'll just make our",
    "start": "1548799",
    "end": "1554799"
  },
  {
    "text": "string and note that back ticks here S3 object right so now all the elements",
    "start": "1554799",
    "end": "1563000"
  },
  {
    "text": "that I've selected will have that so if I back up here let's go back to the beginning instead of just selecting uh",
    "start": "1563000",
    "end": "1568919"
  },
  {
    "text": "one let's just select them all right so now everything has S3 object listed in",
    "start": "1568919",
    "end": "1575840"
  },
  {
    "text": "it um so that's literal is one of the new things that you can do the the other",
    "start": "1575840",
    "end": "1583120"
  },
  {
    "text": "thing you can do is uh let's take a look at",
    "start": "1583120",
    "end": "1590240"
  },
  {
    "text": "let's clear that and if we go back to contents and we say",
    "start": "1590360",
    "end": "1597320"
  },
  {
    "text": "um let's take a look at uh you know typically it's going to be we want",
    "start": "1597320",
    "end": "1603600"
  },
  {
    "text": "everything and then let's say we just want once again the key and the",
    "start": "1603600",
    "end": "1611640"
  },
  {
    "text": "size um one of the things we can do is if I come back here right I don't actually need that asterisk right I can",
    "start": "1611640",
    "end": "1618559"
  },
  {
    "text": "remove that um and the other thing we can do now we see we have a list of lists so I can come in here and I can",
    "start": "1618559",
    "end": "1626360"
  },
  {
    "text": "say all right well let's just let's just flatten that down by adding in another",
    "start": "1626360",
    "end": "1632520"
  },
  {
    "text": "uh set of square brackets right and I can continue to do this but it's a no op because there's no more lists of lists",
    "start": "1632520",
    "end": "1639159"
  },
  {
    "text": "but uh that flattening operator is really handy and we'll see how that um",
    "start": "1639159",
    "end": "1644200"
  },
  {
    "text": "how how that could be useful later on um",
    "start": "1644200",
    "end": "1649360"
  },
  {
    "text": "okay so let's talk about some of the other new things that you can do right one of the other new things that you can",
    "start": "1649360",
    "end": "1655520"
  },
  {
    "text": "do is filtering so let's go back in here and let's say all right so we got our contents but maybe I only want the",
    "start": "1655520",
    "end": "1662799"
  },
  {
    "text": "output that um is of a certain size so let's say size greater than um",
    "start": "1662799",
    "end": "1672080"
  },
  {
    "text": "2,000 right and then let's just say from that",
    "start": "1672080",
    "end": "1677720"
  },
  {
    "text": "we just want the size right so there's the responses I have that are uh that",
    "start": "1677720",
    "end": "1683720"
  },
  {
    "text": "fit that criteria um the other thing that you can do with this uh so it supports you know",
    "start": "1683720",
    "end": "1691000"
  },
  {
    "text": "greater than less than equals equals equals uh not equal so let's try that let's try uh not equal right and so now",
    "start": "1691000",
    "end": "1698919"
  },
  {
    "text": "we're getting all the the elements or objects that AR aren't equal to 2,000",
    "start": "1698919",
    "end": "1705559"
  },
  {
    "text": "bytes um and uh in addition to um being",
    "start": "1705559",
    "end": "1711720"
  },
  {
    "text": "able to filter in this way um we can add functions in so let's just say hey I",
    "start": "1711720",
    "end": "1718320"
  },
  {
    "text": "want to all right so now I have a list of all the things that fit that filter criteria maybe I just want to sum them",
    "start": "1718320",
    "end": "1726480"
  },
  {
    "text": "so I can sum I can use a function to sum this and I get a total right the the",
    "start": "1726480",
    "end": "1735200"
  },
  {
    "text": "other one that's actually uh really common is that we want to sort our",
    "start": "1735200",
    "end": "1740240"
  },
  {
    "text": "output right so instead of summing let's say we want to sort so",
    "start": "1740240",
    "end": "1748000"
  },
  {
    "text": "sort and um once again we can just do that by",
    "start": "1748000",
    "end": "1753200"
  },
  {
    "text": "size and so there're we're sorted now there's also a sort by right so this is",
    "start": "1753200",
    "end": "1759600"
  },
  {
    "text": "just sorting our list into you know smallest to largest but let's say we want to sort by a specific criteria so",
    "start": "1759600",
    "end": "1767159"
  },
  {
    "text": "we say sort by and in this case um let's say we're",
    "start": "1767159",
    "end": "1774039"
  },
  {
    "text": "going to leave it as a um you know leave our filter in",
    "start": "1774039",
    "end": "1781240"
  },
  {
    "text": "here but uh what we really want to do is we want to filter by uh last modified so",
    "start": "1781240",
    "end": "1787360"
  },
  {
    "text": "we're going to and uh add in last",
    "start": "1787360",
    "end": "1793080"
  },
  {
    "text": "modified and um we're going to close that",
    "start": "1793080",
    "end": "1798799"
  },
  {
    "text": "and let's say for everything so do that and then we're",
    "start": "1798799",
    "end": "1807000"
  },
  {
    "text": "going to get not just the size but let's get the key the",
    "start": "1807000",
    "end": "1814159"
  },
  {
    "text": "size and the last",
    "start": "1814159",
    "end": "1817720"
  },
  {
    "text": "modified okay so now we have a list that's sorted by the last modified date",
    "start": "1819519",
    "end": "1826720"
  },
  {
    "text": "um and we could do the same thing if we wanted to say all right well maybe I don't want to sort it by last modified",
    "start": "1826720",
    "end": "1832279"
  },
  {
    "text": "let's just sort it by size all right so Resorts our list list for",
    "start": "1832279",
    "end": "1838240"
  },
  {
    "text": "us um okay so the reason that I'm going through the syntax that we're using for",
    "start": "1838240",
    "end": "1844120"
  },
  {
    "text": "uh James path is that that's the same syntax we're going to use with that--",
    "start": "1844120",
    "end": "1849600"
  },
  {
    "text": "query Command right back in the CLI so uh let's go to the CLI let's get it get",
    "start": "1849600",
    "end": "1855760"
  },
  {
    "text": "rid of this clear that clear that and um let's say we wanted to uh run a",
    "start": "1855760",
    "end": "1863679"
  },
  {
    "text": "command like this this list",
    "start": "1863679",
    "end": "1870279"
  },
  {
    "text": "objects not that one AWS uh S3",
    "start": "1870279",
    "end": "1878320"
  },
  {
    "text": "API list",
    "start": "1878320",
    "end": "1882320"
  },
  {
    "text": "we're going to list uh we're going to list the objects in a bucket then we're going to use this D- query",
    "start": "1889399",
    "end": "1895320"
  },
  {
    "text": "command to um filter that so let's say",
    "start": "1895320",
    "end": "1900440"
  },
  {
    "text": "contents like we just saw earlier and we can do maybe we'll do that uh filter by",
    "start": "1900440",
    "end": "1907760"
  },
  {
    "text": "size uh greater than um maybe let's just use non equals",
    "start": "1907760",
    "end": "1913200"
  },
  {
    "text": "because that'll probably give us more objects uh equal to and then once again back ticks here for our uh filter",
    "start": "1913200",
    "end": "1921360"
  },
  {
    "text": "term and let's then grab once again the uh",
    "start": "1921360",
    "end": "1929559"
  },
  {
    "text": "key the size and the last",
    "start": "1929559",
    "end": "1937120"
  },
  {
    "text": "modified okay and then we'll close that and let's see what we got so there we go right same same",
    "start": "1937320",
    "end": "1944440"
  },
  {
    "text": "syntax we saw with James path",
    "start": "1944440",
    "end": "1948759"
  },
  {
    "text": "um so another thing that we can do uh we'll look at maybe more a complex",
    "start": "1950760",
    "end": "1956679"
  },
  {
    "text": "example here so um is everybody familiar with uh",
    "start": "1956679",
    "end": "1963639"
  },
  {
    "text": "versioning in S3 S3 buckets maybe okay some of us all right so uh you can have",
    "start": "1963639",
    "end": "1970200"
  },
  {
    "text": "a a bucket that um has versions it keeps all the versions of your uh files that",
    "start": "1970200",
    "end": "1976600"
  },
  {
    "text": "you upload and one of the things that happens is uh even if that bucket's empty you can't remove it because",
    "start": "1976600",
    "end": "1983080"
  },
  {
    "text": "there's all these old versions in there so let's take a look at this command AWS",
    "start": "1983080",
    "end": "1989720"
  },
  {
    "text": "S3 and RB is remove bucket and then I'm going to give it the URL of a bucket",
    "start": "1989720",
    "end": "1995600"
  },
  {
    "text": "that I created and this will be Elvis all right and so when I run this",
    "start": "1995600",
    "end": "2002240"
  },
  {
    "text": "command it's going to say hey you can't delete that bucket it's not empty um so let's go and look all right what's in",
    "start": "2002240",
    "end": "2008720"
  },
  {
    "text": "that bucket so we're going to do AWS S3 API",
    "start": "2008720",
    "end": "2016279"
  },
  {
    "text": "list uh object versions and then we're going to say for",
    "start": "2016279",
    "end": "2022039"
  },
  {
    "text": "our",
    "start": "2022039",
    "end": "2024240"
  },
  {
    "text": "bucket oops versions",
    "start": "2029440",
    "end": "2035399"
  },
  {
    "text": "plural okay so there's all the OB objects that I have in this oops that I have in this bucket um and we can see uh",
    "start": "2035399",
    "end": "2043320"
  },
  {
    "text": "that you know we have things like um you know is the latest here um and so let's",
    "start": "2043320",
    "end": "2050560"
  },
  {
    "text": "let's figure out how we can actually delete the things in this bucket all the previous versions and then delete the",
    "start": "2050560",
    "end": "2058440"
  },
  {
    "text": "bucket so um if we take a look at the AWS",
    "start": "2058440",
    "end": "2065878"
  },
  {
    "text": "S3 um delete",
    "start": "2065879",
    "end": "2070879"
  },
  {
    "text": "objects OBS uh and help",
    "start": "2074800",
    "end": "2080079"
  },
  {
    "text": "command um we'll see that uh as we go through this there's a structure right",
    "start": "2080079",
    "end": "2087240"
  },
  {
    "text": "the structure for the Json syntax right here where it's looking for uh the key",
    "start": "2087240",
    "end": "2092480"
  },
  {
    "text": "in the version ID so let's go ahead and see if we can create that syntax",
    "start": "2092480",
    "end": "2098359"
  },
  {
    "text": "using the CLI and the query commands so the first thing we're going",
    "start": "2098359",
    "end": "2103800"
  },
  {
    "text": "to do is uh let's go back to our list object versions we're going to look at",
    "start": "2103800",
    "end": "2109800"
  },
  {
    "text": "our bucket and then we're going to apply that query uh",
    "start": "2109800",
    "end": "2115280"
  },
  {
    "text": "syntax where we're going to say uh we want",
    "start": "2115280",
    "end": "2121000"
  },
  {
    "text": "versions and let's just say versions for every version for",
    "start": "2123480",
    "end": "2130319"
  },
  {
    "text": "everything let's see what that gives us oops missed something",
    "start": "2131320",
    "end": "2137480"
  },
  {
    "text": "oh that should be I'm going quote this quote that match",
    "start": "2137599",
    "end": "2143119"
  },
  {
    "text": "match match our quotes here and see if this works okay so there's our versions and um from that we need to get",
    "start": "2143119",
    "end": "2152280"
  },
  {
    "text": "the uh the key the version ID so let's go ahead and and add that",
    "start": "2152280",
    "end": "2158240"
  },
  {
    "text": "into our uh syntax or to our query so we're going to say okay let's get our",
    "start": "2158240",
    "end": "2166880"
  },
  {
    "text": "key as a key and we're going to get oh yeah I'm",
    "start": "2166880",
    "end": "2172960"
  },
  {
    "text": "sorry uh let's see okay that'll work too",
    "start": "2172960",
    "end": "2180520"
  },
  {
    "text": "sorry oops WR window",
    "start": "2180520",
    "end": "2185520"
  },
  {
    "text": "uh here I'll just clear we'll start at the top okay so",
    "start": "2187720",
    "end": "2196560"
  },
  {
    "text": "um let's add to our query string we need to get the key and the version ID so um",
    "start": "2196680",
    "end": "2205400"
  },
  {
    "text": "behind U versions here we're going to add in",
    "start": "2205400",
    "end": "2211680"
  },
  {
    "text": "the uh key as the we're trying to match that syntax that was in the the delete",
    "start": "2211680",
    "end": "2218359"
  },
  {
    "text": "um objects um help file so we need the key as the key and we need the version",
    "start": "2218359",
    "end": "2227440"
  },
  {
    "text": "ID as the version",
    "start": "2227440",
    "end": "2234000"
  },
  {
    "text": "ID let's see what we get there okay so we're starting that's our first little",
    "start": "2234000",
    "end": "2239040"
  },
  {
    "text": "bit um and we need to do that for uh not",
    "start": "2239040",
    "end": "2244520"
  },
  {
    "text": "just the the versions but you also need to do that for the uh Delete objects so",
    "start": "2244520",
    "end": "2251000"
  },
  {
    "text": "or the delete markers so if we come in here and yes I",
    "start": "2251000",
    "end": "2257960"
  },
  {
    "text": "know okay so if we come in here and we say all right instead of versions give me",
    "start": "2259119",
    "end": "2266200"
  },
  {
    "text": "delete markers the same thing okay yes I",
    "start": "2268079",
    "end": "2276079"
  },
  {
    "text": "know brilliant um it Our IT department is very uh",
    "start": "2276079",
    "end": "2282800"
  },
  {
    "text": "insistent that we're secure um although that's just iTunes that needs to update so I don't know why that's such a big",
    "start": "2282800",
    "end": "2290040"
  },
  {
    "text": "deal um okay so now we're we're we're starting to get there so uh but but now",
    "start": "2290040",
    "end": "2296640"
  },
  {
    "text": "we have two lists right uh so we need to combine those two lists and then we need to flatten them so we take a look at",
    "start": "2296640",
    "end": "2304640"
  },
  {
    "text": "that uh command we just ran and uh we add in uh so we got our delete markers",
    "start": "2304640",
    "end": "2311480"
  },
  {
    "text": "let's add in our versions so oh and you guys can't see that so let me uh go up",
    "start": "2311480",
    "end": "2317720"
  },
  {
    "text": "back up to the top of the screen okay so this is our delete markers let's add in",
    "start": "2317720",
    "end": "2325200"
  },
  {
    "text": "versions and uh we're going to grab everything under versions and then",
    "start": "2325200",
    "end": "2332000"
  },
  {
    "text": "once again we need the key as the key and we need the uh",
    "start": "2332000",
    "end": "2339640"
  },
  {
    "text": "version ID as as the version",
    "start": "2339640",
    "end": "2346400"
  },
  {
    "text": "ID and hopefully oops what did I do wrong",
    "start": "2346400",
    "end": "2352760"
  },
  {
    "text": "here oh yeah I need a curly brace right here okay no",
    "start": "2352760",
    "end": "2360119"
  },
  {
    "text": "sare sare no okay this is",
    "start": "2360119",
    "end": "2368760"
  },
  {
    "text": "let me look through that again so we have",
    "start": "2368760",
    "end": "2375040"
  },
  {
    "text": "our oh so this actually we need to go back here to the beginning of this as",
    "start": "2378040",
    "end": "2384040"
  },
  {
    "text": "we're creating uh a",
    "start": "2384040",
    "end": "2388599"
  },
  {
    "text": "settin okay so now we have a list let's go ahead and um let's go ahead and",
    "start": "2391640",
    "end": "2397920"
  },
  {
    "text": "flatten that using that flatten operator we saw earlier right so uh we're just",
    "start": "2397920",
    "end": "2403680"
  },
  {
    "text": "going to add in a flatten operator right here and we'll get our flattened",
    "start": "2403680",
    "end": "2411599"
  },
  {
    "text": "list okay so we're I think we're pretty close to the syntax that we need for uh",
    "start": "2411599",
    "end": "2418200"
  },
  {
    "text": "S3 objects let's go back and take a look at that uh help so if we go back here",
    "start": "2418200",
    "end": "2423720"
  },
  {
    "text": "under help what we'll see is that it needs to have this uh objects at the",
    "start": "2423720",
    "end": "2429319"
  },
  {
    "text": "beginning of the um Json so let's go ahead and add that in so once again",
    "start": "2429319",
    "end": "2436160"
  },
  {
    "text": "clear that go back to our Command and now what we're going to do is uh I'm",
    "start": "2436160",
    "end": "2441480"
  },
  {
    "text": "going to add a curly brace here we'll put objects at the beginning of this and that should give us a syntax we",
    "start": "2441480",
    "end": "2450800"
  },
  {
    "text": "need so let's just say uh cly brace here objects",
    "start": "2451079",
    "end": "2457800"
  },
  {
    "text": "go on and let's see there we go so now we've built the um the syntax we need to",
    "start": "2457800",
    "end": "2467079"
  },
  {
    "text": "actually pass this uh command to the delete um command and I actually built",
    "start": "2467079",
    "end": "2475760"
  },
  {
    "text": "all this into a a shell script so let's just take a look at",
    "start": "2475760",
    "end": "2481800"
  },
  {
    "text": "that so here is the actual command that we can use used to delete this uh I",
    "start": "2483440",
    "end": "2488760"
  },
  {
    "text": "built this up ahead of time so basically we're just passing the output of the",
    "start": "2488760",
    "end": "2493880"
  },
  {
    "text": "query that we just made to the S3 delete objects call and it's going to delete",
    "start": "2493880",
    "end": "2499640"
  },
  {
    "text": "our bucket so let's try",
    "start": "2499640",
    "end": "2503000"
  },
  {
    "text": "it so if I",
    "start": "2505040",
    "end": "2508720"
  },
  {
    "text": "say run that all right so let scroll up see what output it gave us",
    "start": "2510440",
    "end": "2517920"
  },
  {
    "text": "there we go it deleted all those things and now we should be able to delete the bucket so let's do uh AWS",
    "start": "2517920",
    "end": "2525400"
  },
  {
    "text": "S3 uh RB and then we're going to delete that bucket S3",
    "start": "2525400",
    "end": "2531800"
  },
  {
    "text": "uh uh this to",
    "start": "2531800",
    "end": "2537880"
  },
  {
    "text": "delete there we go so pretty cool all right um so let's switch back to the",
    "start": "2538720",
    "end": "2545599"
  },
  {
    "text": "PowerPoint uh hopefully that was a a helpful uh demo of how you can use a",
    "start": "2545599",
    "end": "2550640"
  },
  {
    "text": "query syntax to do some real work um let's move on right what else can we",
    "start": "2550640",
    "end": "2557400"
  },
  {
    "text": "do uh yeah check out jamesp pa.org if you want to know more about uh and and",
    "start": "2557400",
    "end": "2562520"
  },
  {
    "text": "brush up on that query syntax um okay so the other thing uh",
    "start": "2562520",
    "end": "2570200"
  },
  {
    "text": "that's a common issue is invoking an operation and then having to wait for a condition to be met before performing",
    "start": "2570200",
    "end": "2578040"
  },
  {
    "text": "the next action so uh for example here's a chart that shows the states of an ec2",
    "start": "2578040",
    "end": "2584760"
  },
  {
    "text": "instance right so you request an instance it goes into a pending State once that's fully operational it'll go",
    "start": "2584760",
    "end": "2590880"
  },
  {
    "text": "into the running State um if I have an instance that's EBS backed it could also",
    "start": "2590880",
    "end": "2597240"
  },
  {
    "text": "go into a stopped State and in both cases I could go ahead and terminate that so if we want to write a script",
    "start": "2597240",
    "end": "2603880"
  },
  {
    "text": "that's going to launch an instance and then waits for it to be running before taking the next action uh we need to be",
    "start": "2603880",
    "end": "2609160"
  },
  {
    "text": "able to handle that so uh here's one way we could do this right we could write a script that",
    "start": "2609160",
    "end": "2615160"
  },
  {
    "text": "looks something like this and if we kind of walk through this uh bit by bit what",
    "start": "2615160",
    "end": "2620800"
  },
  {
    "text": "we'll see is that we're calling ec2 run instances um and you once again you can see we're using the query syntax here to",
    "start": "2620800",
    "end": "2627880"
  },
  {
    "text": "get the instance IDs and output those as text and then we're going to pass that",
    "start": "2627880",
    "end": "2633520"
  },
  {
    "text": "uh to um we're going to we're use that to get the instance State um once again",
    "start": "2633520",
    "end": "2640960"
  },
  {
    "text": "using query and then finally we have a while loop that says while the instance state",
    "start": "2640960",
    "end": "2647839"
  },
  {
    "text": "is not running wait for a little bit and then continue to the next describe in",
    "start": "2647839",
    "end": "2652960"
  },
  {
    "text": "you make the next described instances call so this code's fairly straightforward it's only about eight",
    "start": "2652960",
    "end": "2658240"
  },
  {
    "text": "lines long right it's pretty simple um but there's actually a few issues here",
    "start": "2658240",
    "end": "2663760"
  },
  {
    "text": "and that is that um there are no timeouts no failure States and it's all",
    "start": "2663760",
    "end": "2670720"
  },
  {
    "text": "handwritten code so how can we how can we get around that how can we uh do this a little bit more easily maybe a little",
    "start": "2670720",
    "end": "2676640"
  },
  {
    "text": "bit more reliably so uh for example no timeouts what happens if we miss a",
    "start": "2676640",
    "end": "2682480"
  },
  {
    "text": "transition right if the while loop is sleeping while that transition state happens right then this this won't work",
    "start": "2682480",
    "end": "2690760"
  },
  {
    "text": "um there's no fail fast state for for failure States um so there's a fairly",
    "start": "2690760",
    "end": "2696599"
  },
  {
    "text": "new feature in the CLI to help address this is called the weight condition and uh here we can see an example of that",
    "start": "2696599",
    "end": "2702960"
  },
  {
    "text": "where we're calling weight and then we're using a waiter of instance running to check for that state of that",
    "start": "2702960",
    "end": "2711280"
  },
  {
    "text": "instance so the weight command has a similar syntax to the other commands that we've seen where you have uh you",
    "start": "2711280",
    "end": "2717359"
  },
  {
    "text": "know sub command we have the waiter name um and then we have the uh thing that",
    "start": "2717359",
    "end": "2724680"
  },
  {
    "text": "we're waiting for right and many of the adabs services have waiters that you can",
    "start": "2724680",
    "end": "2731760"
  },
  {
    "text": "apply uh you know we're trying to expand this if you don't see the waiter that you need let us know uh alternatively",
    "start": "2731760",
    "end": "2738480"
  },
  {
    "text": "the AWS CLI is fully open source so if you feel so inclined we'd love to have",
    "start": "2738480",
    "end": "2744760"
  },
  {
    "text": "contributions um to get specific details on the waiters available for each",
    "start": "2744760",
    "end": "2750160"
  },
  {
    "text": "service once again go back to that help command so we could say you know ec2 uh",
    "start": "2750160",
    "end": "2755839"
  },
  {
    "text": "AWS ec2 wait uh and then help or even",
    "start": "2755839",
    "end": "2760880"
  },
  {
    "text": "say instance running help and that'll give you the uh exact um details of that",
    "start": "2760880",
    "end": "2767960"
  },
  {
    "text": "waiter and so what we see here now with this weight uh Handler is that it's",
    "start": "2767960",
    "end": "2773280"
  },
  {
    "text": "going to solve all those uh issues we had with that shell script right it's going to handle all the timeouts and",
    "start": "2773280",
    "end": "2779400"
  },
  {
    "text": "failure States for you okay so that's kind of the basics",
    "start": "2779400",
    "end": "2785240"
  },
  {
    "text": "let's go to some more advanced stuff the first thing we're going to take a look at here are templates and by this I",
    "start": "2785240",
    "end": "2791960"
  },
  {
    "text": "don't mean cloud formation templates right and before we really get into templates we need to talk about the CLI",
    "start": "2791960",
    "end": "2799319"
  },
  {
    "text": "a little bit more in detail the CLI is datadriven and uh it's that's what",
    "start": "2799319",
    "end": "2805440"
  },
  {
    "text": "drives it and so what does that mean right by that I mean somewhere in the",
    "start": "2805440",
    "end": "2810960"
  },
  {
    "text": "CLI codebase there's a Json file that describes the exact input and output for",
    "start": "2810960",
    "end": "2816160"
  },
  {
    "text": "each service you don't really need to understand the format but um somewhere in the file you",
    "start": "2816160",
    "end": "2822040"
  },
  {
    "text": "should be able to inspect and determine what calls are being made for each",
    "start": "2822040",
    "end": "2828440"
  },
  {
    "text": "service and the reason that this is important is that it's helpful uh to uh",
    "start": "2828440",
    "end": "2835400"
  },
  {
    "text": "understand that you can pass in a bunch of top level parameters so uh and the way that you can do that is by creating",
    "start": "2835400",
    "end": "2841440"
  },
  {
    "text": "a Json file and this is specifically helpful if you have a lot of input parameters it's also helpful if you just",
    "start": "2841440",
    "end": "2848359"
  },
  {
    "text": "want to have a record of exactly how you created something uh you know an ec2 instance or a Dynamo DB table or",
    "start": "2848359",
    "end": "2855839"
  },
  {
    "text": "something like that so you can use the-- CLI uh Das input D",
    "start": "2855839",
    "end": "2863760"
  },
  {
    "text": "Json once again with that file colon SL SL uh syntax to import those",
    "start": "2863760",
    "end": "2871400"
  },
  {
    "text": "parameters now um what else can I do right that's",
    "start": "2871400",
    "end": "2876680"
  },
  {
    "text": "that's that's kind of only uh I mean that's that's pretty cool but what would I use this Json file for well um well we",
    "start": "2876680",
    "end": "2883760"
  },
  {
    "text": "talked about what it's for but how can I you know it's a Json file how can I do that a little more easily and uh one of",
    "start": "2883760",
    "end": "2890119"
  },
  {
    "text": "the ways that you can do that is by using this generate CLI skeleton uh",
    "start": "2890119",
    "end": "2896280"
  },
  {
    "text": "syntax which will generate a skeleton of that Json uh parameter file for you and",
    "start": "2896280",
    "end": "2902559"
  },
  {
    "text": "uh send it to standard output or yeah standard out okay so let's take a look at that we're",
    "start": "2902559",
    "end": "2908760"
  },
  {
    "text": "going to switch back to my computer that's once again",
    "start": "2908760",
    "end": "2913599"
  },
  {
    "text": "asleep okay",
    "start": "2916680",
    "end": "2921880"
  },
  {
    "text": "so and me get my notes for this one so let's take a look at uh the Syntax for",
    "start": "2925880",
    "end": "2933559"
  },
  {
    "text": "creating a Dynamo DB table so if I say AWS uh",
    "start": "2933559",
    "end": "2941079"
  },
  {
    "text": "Dynam DB uh create table and I look at",
    "start": "2943280",
    "end": "2948520"
  },
  {
    "text": "the help for that um and we're going to see the",
    "start": "2948520",
    "end": "2954000"
  },
  {
    "text": "Syntax for that down here so let's take a look at uh generating that um skeleton",
    "start": "2954000",
    "end": "2962319"
  },
  {
    "text": "file to create a Dynamo DB table for us so if we look at this let me say okay so now I want to uh",
    "start": "2962319",
    "end": "2970599"
  },
  {
    "text": "D dgen gen a CLI",
    "start": "2970599",
    "end": "2977880"
  },
  {
    "text": "scale okay then it outputs that to standard out we can see all the things that we need to fill in uh potentially",
    "start": "2978640",
    "end": "2985119"
  },
  {
    "text": "to create our Dynamo DB table so what I'm going to do is I'm just going to take that and I'm going to pipe that to",
    "start": "2985119",
    "end": "2992200"
  },
  {
    "text": "SLT uh say table. Json and then I can use less or an editor uh",
    "start": "2992200",
    "end": "3000040"
  },
  {
    "text": "to look at that file um",
    "start": "3000040",
    "end": "3005760"
  },
  {
    "text": "table there we go so here we can see all the things it wants us to fill in uh",
    "start": "3005760",
    "end": "3012040"
  },
  {
    "text": "like um you know various attributes uh the table name right and so it gives us",
    "start": "3012040",
    "end": "3019839"
  },
  {
    "text": "a really easy way to create that Json syntax and and use it as an input so let's go ahead and do that I already uh",
    "start": "3019839",
    "end": "3026200"
  },
  {
    "text": "edited this table so if I take a look at my local",
    "start": "3026200",
    "end": "3031520"
  },
  {
    "text": "one I'm not in my directory hang",
    "start": "3031839",
    "end": "3035839"
  },
  {
    "text": "on so here I took that that skeleton I I added some uh values in here uh we can",
    "start": "3041760",
    "end": "3049000"
  },
  {
    "text": "see I've got an attribute of Fu that's a string I've got an attribute of bar that's a number uh down here I have food",
    "start": "3049000",
    "end": "3056720"
  },
  {
    "text": "that's a hash and bar that's a range and then I have a table name I just call it Tom test one so if I go ahead and pass",
    "start": "3056720",
    "end": "3064640"
  },
  {
    "text": "this in uh once again let me clear this um let's use that it says",
    "start": "3064640",
    "end": "3072240"
  },
  {
    "text": "AWS D",
    "start": "3072240",
    "end": "3079359"
  },
  {
    "text": "DB uh create table and uh then we're going to use",
    "start": "3079359",
    "end": "3087359"
  },
  {
    "text": "the um file syntax so we use that- CLI",
    "start": "3087359",
    "end": "3092960"
  },
  {
    "text": "CLI Das input Json and we're going say file",
    "start": "3092960",
    "end": "3101200"
  },
  {
    "text": "col. Json right and it's going to go and",
    "start": "3101200",
    "end": "3107720"
  },
  {
    "text": "create that table for us so um and now if I look at the table so I",
    "start": "3107720",
    "end": "3116200"
  },
  {
    "text": "use uh let me clear this let's take a look at the table we just created",
    "start": "3116200",
    "end": "3122520"
  },
  {
    "text": "AWS we use a describe table call to look at it um and then we'll give it the",
    "start": "3124920",
    "end": "3130200"
  },
  {
    "text": "table name name and this should be Tom test",
    "start": "3130200",
    "end": "3136960"
  },
  {
    "text": "one um and let's just output that table",
    "start": "3136960",
    "end": "3141359"
  },
  {
    "text": "format and there we go right so there's our table it was created ated uh we can see the attributes I specified in the",
    "start": "3142960",
    "end": "3149240"
  },
  {
    "text": "file uh table name obviously so pretty simple and",
    "start": "3149240",
    "end": "3154440"
  },
  {
    "text": "straightforward let's see um the other thing that you can do with",
    "start": "3154440",
    "end": "3161200"
  },
  {
    "text": "this is let's say somebody gives you a Json file as a as a set of input",
    "start": "3161200",
    "end": "3167960"
  },
  {
    "text": "parameters but you don't want to accept all of the parameters that are in that",
    "start": "3167960",
    "end": "3173720"
  },
  {
    "text": "file uh you can actually really easily over ride those on the command line on a caseby Case basis so let's just say um",
    "start": "3173720",
    "end": "3182799"
  },
  {
    "text": "you know I had that create table uh let's say I don't want the name to be Tom uh test one maybe I want to give it",
    "start": "3182799",
    "end": "3190880"
  },
  {
    "text": "something else so I can just say d-t Das name uh Tom Tom uh test right",
    "start": "3190880",
    "end": "3201079"
  },
  {
    "text": "and now it'll go and it'll create that Tom test table using all the other parameters that were in the f",
    "start": "3201079",
    "end": "3208040"
  },
  {
    "text": "okay so um so this is fairly new but uh check it out hopefully it'll be useful",
    "start": "3208040",
    "end": "3213920"
  },
  {
    "text": "if you're trying to do programmatic manipulation of uh input parameters all",
    "start": "3213920",
    "end": "3219839"
  },
  {
    "text": "right let's switch back to PowerPoint got a few more slides okay so that was uh using Json",
    "start": "3219839",
    "end": "3230119"
  },
  {
    "text": "templates so the next topic I want to cover are credential providers so by that I mean the mechanism used to look",
    "start": "3230119",
    "end": "3236880"
  },
  {
    "text": "up credentials and uh for example when we go to sign a request there's this",
    "start": "3236880",
    "end": "3243839"
  },
  {
    "text": "credential locator object and it will in turn ask each object if it has credentials for me so it's going to",
    "start": "3243839",
    "end": "3251160"
  },
  {
    "text": "start out uh asking the environment if it has a credentials if not it'll say no",
    "start": "3251160",
    "end": "3257720"
  },
  {
    "text": "and then it'll move on and it'll say um well we know the AWS configure command",
    "start": "3257720",
    "end": "3263160"
  },
  {
    "text": "writes credentials to a credentials file so it will ask there and uh in this case he going to get a",
    "start": "3263160",
    "end": "3269559"
  },
  {
    "text": "yes response and for the remainder of those the process those are the",
    "start": "3269559",
    "end": "3274880"
  },
  {
    "text": "credentials it's going to use so the reason I mentioned this is because it's a good example of a linear progression",
    "start": "3274880",
    "end": "3281200"
  },
  {
    "text": "where it's uh just going through these in order uh looking for credentials and",
    "start": "3281200",
    "end": "3286720"
  },
  {
    "text": "it's easy to add credential providers over time so the one uh that is new to",
    "start": "3286720",
    "end": "3293040"
  },
  {
    "text": "the CLI is the assume role credential provider",
    "start": "3293040",
    "end": "3299640"
  },
  {
    "text": "and um I want to go over this in a little uh detail so one of the things",
    "start": "3299640",
    "end": "3305119"
  },
  {
    "text": "that we can do is say we want to have cross account access you've got um two different AWS accounts you want to give",
    "start": "3305119",
    "end": "3311400"
  },
  {
    "text": "somebody access to maybe your S3 bucket right we can use an I am rooll along",
    "start": "3311400",
    "end": "3318280"
  },
  {
    "text": "with the assume roll call to do that so uh here's our bucket right we've got a",
    "start": "3318280",
    "end": "3324319"
  },
  {
    "text": "couple of developers over here in develop velopment our buckets in production these are separate accounts",
    "start": "3324319",
    "end": "3330760"
  },
  {
    "text": "um how do we how do we uh go about this so the way we're going to go about this is we're going to uh give this bottom",
    "start": "3330760",
    "end": "3338880"
  },
  {
    "text": "user bottom developer access to this S3 bucket in production by creating an IM",
    "start": "3338880",
    "end": "3344280"
  },
  {
    "text": "am user or by using an assume rooll we could create an IM am user in production",
    "start": "3344280",
    "end": "3351359"
  },
  {
    "text": "and just give them the credentials to that um but there's another way to do this and and that's with a role so",
    "start": "3351359",
    "end": "3358799"
  },
  {
    "text": "essentially uh when you create a role you need to specify two things number one who can assume that role and we're",
    "start": "3358799",
    "end": "3364680"
  },
  {
    "text": "going to we're going to give it to that guy and then once they assume the role we need to specify what they can do what",
    "start": "3364680",
    "end": "3370880"
  },
  {
    "text": "permissions they have and we'll lock down those permissions to this specific S3",
    "start": "3370880",
    "end": "3377160"
  },
  {
    "text": "bucket okay so normally when you use the assume rooll you're going to call out to",
    "start": "3377480",
    "end": "3382760"
  },
  {
    "text": "the secure token service s uh STS and say I want to assume this role",
    "start": "3382760",
    "end": "3388960"
  },
  {
    "text": "you'll use your credentials uh so the credentials of this developer user and it goes and it checks you are authorized",
    "start": "3388960",
    "end": "3395559"
  },
  {
    "text": "for this role and then it's going to give you those temporary credentials and then you're going to use",
    "start": "3395559",
    "end": "3401880"
  },
  {
    "text": "those credentials to access the bucket and you can do this in the CLI now uh or",
    "start": "3401880",
    "end": "3407160"
  },
  {
    "text": "previously but there were a couple of things that made it tricky to manage uh the big thing is that these are",
    "start": "3407160",
    "end": "3412400"
  },
  {
    "text": "temporary credentials STS uh provides temporary credentials so they expire so",
    "start": "3412400",
    "end": "3417680"
  },
  {
    "text": "you would need to have some type of uh check to make sure that your credentials aren't expired when you go to contact S3",
    "start": "3417680",
    "end": "3424880"
  },
  {
    "text": "and there's also an edge case when uh your ex your credentials expire mid call",
    "start": "3424880",
    "end": "3431240"
  },
  {
    "text": "uh so for example when you're making lots of calls you're doing uh S3 sync or something like that and you know how do",
    "start": "3431240",
    "end": "3437680"
  },
  {
    "text": "you deal with that when you're trying to do this and your credentials are no longer valid so now there's an easier",
    "start": "3437680",
    "end": "3443920"
  },
  {
    "text": "way to do this uh what you can do in instead is of using STS and temporary",
    "start": "3443920",
    "end": "3450039"
  },
  {
    "text": "credentials is set a couple of variables using the configure command um you set the Arn of the role that you the I am Ro",
    "start": "3450039",
    "end": "3457520"
  },
  {
    "text": "you want to assume and you set the profile that you want to use and so the configuration files will",
    "start": "3457520",
    "end": "3465000"
  },
  {
    "text": "end up looking something like this we can see the role AR in the AWS uh config",
    "start": "3465000",
    "end": "3471520"
  },
  {
    "text": "file and uh we have the source profile ref referencing the credentials file so",
    "start": "3471520",
    "end": "3478760"
  },
  {
    "text": "when you do this we handle or the CLI will handle all the details for you specifically we'll make the assume roll",
    "start": "3478760",
    "end": "3484440"
  },
  {
    "text": "call for you and we'll verify your credentials are not expired if they are we'll request new credentials for you if",
    "start": "3484440",
    "end": "3491400"
  },
  {
    "text": "they aren't expired we're going to cach them uh so they can be reused and let's take a look at what",
    "start": "3491400",
    "end": "3498319"
  },
  {
    "text": "that actually looks like so we're going to switch back to laptop and I got to log in again",
    "start": "3498319",
    "end": "3506720"
  },
  {
    "text": "okay and me take a look at that so let's just take a look um here's",
    "start": "3508839",
    "end": "3516240"
  },
  {
    "text": "the assume rooll policy that I created and um we can see that it's giving U the",
    "start": "3516240",
    "end": "3524559"
  },
  {
    "text": "Su roll action uh access to uh a bucket roll and then down here am I under S3",
    "start": "3524559",
    "end": "3531920"
  },
  {
    "text": "I've got my policy that's going to allow them access so let's take a look at what that actually",
    "start": "3531920",
    "end": "3538039"
  },
  {
    "text": "looks like so running the command uh without specifying this",
    "start": "3538039",
    "end": "3545359"
  },
  {
    "text": "profile I would say something like aw AWS",
    "start": "3545359",
    "end": "3550559"
  },
  {
    "text": "S3 uh LS we'll just List It of this bucket S3",
    "start": "3550559",
    "end": "3557920"
  },
  {
    "text": "go1 prod bucket okay and it said no you don't",
    "start": "3558520",
    "end": "3564240"
  },
  {
    "text": "have permission to do that so let's try that same command but let's just this",
    "start": "3564240",
    "end": "3569760"
  },
  {
    "text": "time give it the um profile that has assume roll associated with",
    "start": "3569760",
    "end": "3576000"
  },
  {
    "text": "it and I just call that prod uh",
    "start": "3576039",
    "end": "3582960"
  },
  {
    "text": "profile I type it that yeah it's not it's oh it's prod roll sorry it's a",
    "start": "3587119",
    "end": "3595200"
  },
  {
    "text": "little dark up here REM notes roll prod got a p there we go jeez okay",
    "start": "3595200",
    "end": "3603680"
  },
  {
    "text": "there we go so it let me list this bucket now that I'm uh I have uh used",
    "start": "3603680",
    "end": "3609039"
  },
  {
    "text": "the correct role um and the other thing we can do is we can run this using the--",
    "start": "3609039",
    "end": "3614480"
  },
  {
    "text": "debug command so you can run debug on any of the CLI commands and that will",
    "start": "3614480",
    "end": "3620839"
  },
  {
    "text": "give us uh a bunch of output so uh let me clear that and let's take look at",
    "start": "3620839",
    "end": "3626799"
  },
  {
    "text": "that if I if I run debug and then I pipe that to a file right I could say go uh",
    "start": "3626799",
    "end": "3635319"
  },
  {
    "text": "maybe to Temp debug",
    "start": "3635319",
    "end": "3642200"
  },
  {
    "text": "text and then I can look through that so let's",
    "start": "3644480",
    "end": "3650599"
  },
  {
    "text": "do and we can see that it's calling out retriev the credentials for us and it's",
    "start": "3651960",
    "end": "3658440"
  },
  {
    "text": "using assum roll right the other thing we'll see is if we do subsequent calls to this it's going to it'll show us that",
    "start": "3658440",
    "end": "3664240"
  },
  {
    "text": "it's caching it um so okay that's how you use assume roll let's switch back to",
    "start": "3664240",
    "end": "3673039"
  },
  {
    "text": "PowerPoint and okay another thing really quick uh",
    "start": "3673039",
    "end": "3678880"
  },
  {
    "text": "we're going talk about S3 streaming uh this is pretty cool you can do a lot",
    "start": "3678880",
    "end": "3684240"
  },
  {
    "text": "with this so we've probably all seen this command AWS S3 CP it lets you upload uh or download or copy between S3",
    "start": "3684240",
    "end": "3693920"
  },
  {
    "text": "buckets and let's say we want to avoid dis right we don't want to write to disk during the transfer now there's a way to",
    "start": "3693920",
    "end": "3700599"
  },
  {
    "text": "do that by streaming the files using this Dash syntax so um we can stream directly from",
    "start": "3700599",
    "end": "3708520"
  },
  {
    "text": "standard in to the object in the bucket and it has the intelligence built into it the CLI has the intelligence built",
    "start": "3708520",
    "end": "3714960"
  },
  {
    "text": "into it the buffer has necessary it'll switch to multi-art uploads if the file's too big and it handles all those",
    "start": "3714960",
    "end": "3720920"
  },
  {
    "text": "details for you uh it also works in the opposite way so you can stream from a bucket to",
    "start": "3720920",
    "end": "3726559"
  },
  {
    "text": "standard out so I can say here's my bucket and key print it to standard",
    "start": "3726559",
    "end": "3731960"
  },
  {
    "text": "out so let's give you a concrete example let's say we have a bucket uh we've got",
    "start": "3731960",
    "end": "3737319"
  },
  {
    "text": "a large file we want to download from it we want to compress that and then we want to upload the compress file back to",
    "start": "3737319",
    "end": "3742880"
  },
  {
    "text": "the bucket and we want to do that without writing any stuff to our hard drive because maybe I don't have room on",
    "start": "3742880",
    "end": "3749319"
  },
  {
    "text": "my drive for the the size of file that I'm working with so uh we would run a",
    "start": "3749319",
    "end": "3754559"
  },
  {
    "text": "command like this right we're going to we're going to stream it to standard um",
    "start": "3754559",
    "end": "3759680"
  },
  {
    "text": "output we're going to then run a compression in this case we're doing bzip and then we're going to stream it",
    "start": "3759680",
    "end": "3764960"
  },
  {
    "text": "back up to our bucket right uh this is just one example uh this could work for any file size since it's uh not being",
    "start": "3764960",
    "end": "3773079"
  },
  {
    "text": "written locally uh and that's just one example of what you could do with uh streaming and",
    "start": "3773079",
    "end": "3779039"
  },
  {
    "text": "S3 so in summary we looked at a bunch of topics around the AWS",
    "start": "3779039",
    "end": "3784640"
  },
  {
    "text": "CLI uh we looked at uh configuration and what happens when you run the configuration command we looked at",
    "start": "3784640",
    "end": "3790680"
  },
  {
    "text": "waiters and how you can use those to wait and Poll for uh resource changes we",
    "start": "3790680",
    "end": "3798440"
  },
  {
    "text": "looked at query U both some of the existing functionality and some of the new features we looked at templates for",
    "start": "3798440",
    "end": "3805319"
  },
  {
    "text": "program control over inputs um and using that Json file and",
    "start": "3805319",
    "end": "3811599"
  },
  {
    "text": "CLI uh generate skeleton to generate that uh for you we looked at assume role",
    "start": "3811599",
    "end": "3817240"
  },
  {
    "text": "providers which make it really easy to do things like cross uh account access",
    "start": "3817240",
    "end": "3822960"
  },
  {
    "text": "and finally we looked at an example of S3 streaming so uh here are some uh",
    "start": "3822960",
    "end": "3829319"
  },
  {
    "text": "URLs uh for uh you know James path and for the CLI",
    "start": "3829319",
    "end": "3835960"
  },
  {
    "text": "um the CLI once again is fully open sourced you can find it on GitHub uh also check out uh the AWS forums for the",
    "start": "3835960",
    "end": "3844119"
  },
  {
    "text": "CLI you see that there in the middle uh lots of good stuff there uh and uh thank",
    "start": "3844119",
    "end": "3850720"
  },
  {
    "text": "you very much",
    "start": "3850720",
    "end": "3853760"
  }
]