[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": "hey guys my name is you well I'm",
    "start": "30",
    "end": "2700"
  },
  {
    "text": "director of solution architect of",
    "start": "2700",
    "end": "4380"
  },
  {
    "text": "exponents thanks a lot for Hamazon for",
    "start": "4380",
    "end": "7379"
  },
  {
    "text": "having us today today we will learn how",
    "start": "7379",
    "end": "9719"
  },
  {
    "text": "to deploy eks cluster in a very very",
    "start": "9719",
    "end": "12570"
  },
  {
    "text": "cost efficient and reliable way we're",
    "start": "12570",
    "end": "15269"
  },
  {
    "text": "going to do so with a blend of on-demand",
    "start": "15269",
    "end": "17730"
  },
  {
    "text": "our eyes and spot instances few worried",
    "start": "17730",
    "end": "21750"
  },
  {
    "start": "21000",
    "end": "73000"
  },
  {
    "text": "about spot ins we found that around",
    "start": "21750",
    "end": "23189"
  },
  {
    "text": "three years ago raised the money mostly",
    "start": "23189",
    "end": "26039"
  },
  {
    "text": "from Intel capital have hundreds of",
    "start": "26039",
    "end": "28680"
  },
  {
    "text": "happy clients our goal is 12 our clients",
    "start": "28680",
    "end": "31980"
  },
  {
    "text": "reduce their cloud compute cost by",
    "start": "31980",
    "end": "34739"
  },
  {
    "text": "utilizing cloud provider access capacity",
    "start": "34739",
    "end": "37340"
  },
  {
    "text": "so of course in AWS case we're speaking",
    "start": "37340",
    "end": "40620"
  },
  {
    "text": "about spot instances and if you using",
    "start": "40620",
    "end": "43200"
  },
  {
    "text": "familiar spot instances fantastic spot",
    "start": "43200",
    "end": "48210"
  },
  {
    "text": "instances are the public offering of AWS",
    "start": "48210",
    "end": "51600"
  },
  {
    "text": "for their access capacity they have the",
    "start": "51600",
    "end": "53789"
  },
  {
    "text": "same name same performance as the",
    "start": "53789",
    "end": "56370"
  },
  {
    "text": "on-demand instances being offered with a",
    "start": "56370",
    "end": "58739"
  },
  {
    "text": "discount of anywhere between 70 and 90",
    "start": "58739",
    "end": "61079"
  },
  {
    "text": "percent the only challenge are using",
    "start": "61079",
    "end": "64680"
  },
  {
    "text": "those instances AWS can take them away",
    "start": "64680",
    "end": "68040"
  },
  {
    "text": "from you in any given moment in time and",
    "start": "68040",
    "end": "70409"
  },
  {
    "text": "here spottings can help you we found a",
    "start": "70409",
    "end": "72750"
  },
  {
    "text": "way to help you run any type of workload",
    "start": "72750",
    "end": "75530"
  },
  {
    "start": "73000",
    "end": "97000"
  },
  {
    "text": "production workload on top of spot",
    "start": "75530",
    "end": "78060"
  },
  {
    "text": "instances we doing it with our special",
    "start": "78060",
    "end": "80369"
  },
  {
    "text": "technology we develop prediction",
    "start": "80369",
    "end": "82229"
  },
  {
    "text": "algorithms that help us determine when",
    "start": "82229",
    "end": "85710"
  },
  {
    "text": "AWS is about to take those instances",
    "start": "85710",
    "end": "88439"
  },
  {
    "text": "from you 15-20 minutes ahead of time and",
    "start": "88439",
    "end": "91590"
  },
  {
    "text": "act accordingly in order to ensure your",
    "start": "91590",
    "end": "94770"
  },
  {
    "text": "application availability spotting",
    "start": "94770",
    "end": "98670"
  },
  {
    "start": "97000",
    "end": "128000"
  },
  {
    "text": "silastic group spotting elastic rupees",
    "start": "98670",
    "end": "100740"
  },
  {
    "text": "our scaling service very very similar to",
    "start": "100740",
    "end": "103770"
  },
  {
    "text": "auto scaling group we like to call it",
    "start": "103770",
    "end": "105570"
  },
  {
    "text": "auto scaling group on steroid it's have",
    "start": "105570",
    "end": "108180"
  },
  {
    "text": "a few really cool features for example",
    "start": "108180",
    "end": "109950"
  },
  {
    "text": "we can blend reserved instances spot",
    "start": "109950",
    "end": "113640"
  },
  {
    "text": "instances and on-demand same cluster we",
    "start": "113640",
    "end": "116369"
  },
  {
    "text": "can have many different instance family",
    "start": "116369",
    "end": "118619"
  },
  {
    "text": "and size in the same group and we can",
    "start": "118619",
    "end": "121590"
  },
  {
    "text": "really easily integrate with a lot of",
    "start": "121590",
    "end": "124049"
  },
  {
    "text": "application one of them is of course eks",
    "start": "124049",
    "end": "129170"
  },
  {
    "start": "128000",
    "end": "186000"
  },
  {
    "text": "elastic group for container services is",
    "start": "129709",
    "end": "132480"
  },
  {
    "text": "our proprietary elastic",
    "start": "132480",
    "end": "133900"
  },
  {
    "text": "that help you manage your container",
    "start": "133900",
    "end": "135519"
  },
  {
    "text": "orchestration platform so here really we",
    "start": "135519",
    "end": "137920"
  },
  {
    "text": "can see on the top layer your containers",
    "start": "137920",
    "end": "140590"
  },
  {
    "text": "your pod many different application many",
    "start": "140590",
    "end": "143080"
  },
  {
    "text": "different sizes below we have the",
    "start": "143080",
    "end": "145959"
  },
  {
    "text": "kubernetes layer manage for you by eks",
    "start": "145959",
    "end": "149049"
  },
  {
    "text": "by amazon eks underneath we can see your",
    "start": "149049",
    "end": "152890"
  },
  {
    "text": "instances your actual infrastructure",
    "start": "152890",
    "end": "154900"
  },
  {
    "text": "your kubernetes known we can help you",
    "start": "154900",
    "end": "157750"
  },
  {
    "text": "manage those nodes in a very very",
    "start": "157750",
    "end": "159970"
  },
  {
    "text": "efficient way you can already see here",
    "start": "159970",
    "end": "162129"
  },
  {
    "text": "that we have different sizes of",
    "start": "162129",
    "end": "164349"
  },
  {
    "text": "instances you're not being locked for",
    "start": "164349",
    "end": "166569"
  },
  {
    "text": "single instance size in addition we",
    "start": "166569",
    "end": "169750"
  },
  {
    "text": "develop a really intelligent autoscaler",
    "start": "169750",
    "end": "172030"
  },
  {
    "text": "for those instances so we really want to",
    "start": "172030",
    "end": "175000"
  },
  {
    "text": "abstract from you the need to manage",
    "start": "175000",
    "end": "177609"
  },
  {
    "text": "those node you have complete visibility",
    "start": "177609",
    "end": "179049"
  },
  {
    "text": "complete control over this nodes but",
    "start": "179049",
    "end": "181930"
  },
  {
    "text": "spotting is gonna help you utilize them",
    "start": "181930",
    "end": "183579"
  },
  {
    "text": "really really efficiently so how do we",
    "start": "183579",
    "end": "187090"
  },
  {
    "start": "186000",
    "end": "246000"
  },
  {
    "text": "handle in spot interruption we just said",
    "start": "187090",
    "end": "189159"
  },
  {
    "text": "amazon can take spot instances from you",
    "start": "189159",
    "end": "191879"
  },
  {
    "text": "any given moment in time how spottings",
    "start": "191879",
    "end": "194920"
  },
  {
    "text": "handle it in a production kubernetes",
    "start": "194920",
    "end": "196480"
  },
  {
    "text": "cluster following example we have",
    "start": "196480",
    "end": "199209"
  },
  {
    "text": "kubernetes cluster 3 small instances",
    "start": "199209",
    "end": "201450"
  },
  {
    "text": "some application probably deployed here",
    "start": "201450",
    "end": "204160"
  },
  {
    "text": "presented by ingress controller he'll be",
    "start": "204160",
    "end": "207459"
  },
  {
    "text": "in this case spot is recognized one of",
    "start": "207459",
    "end": "210669"
  },
  {
    "text": "your instances is about to be taken from",
    "start": "210669",
    "end": "212739"
  },
  {
    "text": "you what's happening behind the scenes",
    "start": "212739",
    "end": "215200"
  },
  {
    "text": "for you completely automatically we will",
    "start": "215200",
    "end": "218109"
  },
  {
    "text": "launch additional kubernetes node join",
    "start": "218109",
    "end": "222129"
  },
  {
    "text": "it to the cluster for you in the same",
    "start": "222129",
    "end": "224290"
  },
  {
    "text": "time we drain all the existing",
    "start": "224290",
    "end": "227489"
  },
  {
    "text": "connection and all the containers from",
    "start": "227489",
    "end": "230049"
  },
  {
    "text": "the soon to be interrupted node",
    "start": "230049",
    "end": "232349"
  },
  {
    "text": "splitting the traffic to the new node",
    "start": "232349",
    "end": "234549"
  },
  {
    "text": "make sure your capacity met your",
    "start": "234549",
    "end": "236410"
  },
  {
    "text": "application relief you have the",
    "start": "236410",
    "end": "239019"
  },
  {
    "text": "resources you need and only then safely",
    "start": "239019",
    "end": "242620"
  },
  {
    "text": "terminate the instance that about to be",
    "start": "242620",
    "end": "244780"
  },
  {
    "text": "interrupted let's go to a short dam i'll",
    "start": "244780",
    "end": "248139"
  },
  {
    "start": "246000",
    "end": "420000"
  },
  {
    "text": "show you the console",
    "start": "248139",
    "end": "251069"
  },
  {
    "text": "so this is elastic groups inside",
    "start": "257489",
    "end": "259739"
  },
  {
    "text": "spottings console important to",
    "start": "259739",
    "end": "261209"
  },
  {
    "text": "understand spottings is the SAS layer",
    "start": "261209",
    "end": "263550"
  },
  {
    "text": "all the instances were still running on",
    "start": "263550",
    "end": "266009"
  },
  {
    "text": "side your AWS account we're not running",
    "start": "266009",
    "end": "268289"
  },
  {
    "text": "things in our side so here we see list",
    "start": "268289",
    "end": "270630"
  },
  {
    "text": "of elastic group probably each one of",
    "start": "270630",
    "end": "272550"
  },
  {
    "text": "those elastic group represent a",
    "start": "272550",
    "end": "274380"
  },
  {
    "text": "kubernetes cluster eks cluster if you go",
    "start": "274380",
    "end": "277650"
  },
  {
    "text": "into one of those group we can see that",
    "start": "277650",
    "end": "280110"
  },
  {
    "text": "in this specific group currently we have",
    "start": "280110",
    "end": "282509"
  },
  {
    "text": "39 nodes eks cluster of 39 nodes can",
    "start": "282509",
    "end": "285840"
  },
  {
    "text": "also see the potential cost for running",
    "start": "285840",
    "end": "287849"
  },
  {
    "text": "those instances on on-demand and what",
    "start": "287849",
    "end": "290520"
  },
  {
    "text": "they actually what's the actual cost to",
    "start": "290520",
    "end": "293130"
  },
  {
    "text": "run those instances on top of spot we",
    "start": "293130",
    "end": "295949"
  },
  {
    "text": "see some really nice information running",
    "start": "295949",
    "end": "298199"
  },
  {
    "text": "pod over time we see the different",
    "start": "298199",
    "end": "300720"
  },
  {
    "text": "application running inside the",
    "start": "300720",
    "end": "302490"
  },
  {
    "text": "deployment inside your ETS cluster here",
    "start": "302490",
    "end": "309990"
  },
  {
    "text": "we can see really the blend of different",
    "start": "309990",
    "end": "312570"
  },
  {
    "text": "instances in snider kubernetes cluster",
    "start": "312570",
    "end": "314250"
  },
  {
    "text": "so you can see here but it's actually",
    "start": "314250",
    "end": "317460"
  },
  {
    "text": "really exciting we're not dead often",
    "start": "317460",
    "end": "319889"
  },
  {
    "text": "seeing kubernetes cluster built from",
    "start": "319889",
    "end": "322169"
  },
  {
    "text": "many different instance types we have a",
    "start": "322169",
    "end": "324509"
  },
  {
    "text": "I three instances m4 instances d2",
    "start": "324509",
    "end": "327630"
  },
  {
    "text": "instances all of those in the same",
    "start": "327630",
    "end": "329280"
  },
  {
    "text": "cluster and look at this utilization",
    "start": "329280",
    "end": "331740"
  },
  {
    "text": "this utilization is amazing because",
    "start": "331740",
    "end": "334139"
  },
  {
    "text": "spottings scaling performs scale-up",
    "start": "334139",
    "end": "336479"
  },
  {
    "text": "operation for you not based on threshold",
    "start": "336479",
    "end": "339210"
  },
  {
    "text": "but based on your actual container your",
    "start": "339210",
    "end": "341820"
  },
  {
    "text": "actual pod resource requirements we're",
    "start": "341820",
    "end": "344159"
  },
  {
    "text": "looking into the events of the cluster",
    "start": "344159",
    "end": "345840"
  },
  {
    "text": "and launch the right instance type for",
    "start": "345840",
    "end": "348780"
  },
  {
    "text": "the resources that your containers",
    "start": "348780",
    "end": "350699"
  },
  {
    "text": "required here we can see the",
    "start": "350699",
    "end": "354300"
  },
  {
    "text": "configuration of the elastic group here",
    "start": "354300",
    "end": "356580"
  },
  {
    "text": "we can control the blend of spot and",
    "start": "356580",
    "end": "358740"
  },
  {
    "text": "on-demand as I said really really easy",
    "start": "358740",
    "end": "360719"
  },
  {
    "text": "really easy to determine how many on the",
    "start": "360719",
    "end": "362940"
  },
  {
    "text": "menu one have in your group how many",
    "start": "362940",
    "end": "364169"
  },
  {
    "text": "spot instances you want to have in the",
    "start": "364169",
    "end": "365880"
  },
  {
    "text": "group you can utilize your reserved",
    "start": "365880",
    "end": "368250"
  },
  {
    "text": "instances again spottings will recognize",
    "start": "368250",
    "end": "371070"
  },
  {
    "text": "if you have any vacant sore eyes and",
    "start": "371070",
    "end": "373070"
  },
  {
    "text": "automatically launch those instances as",
    "start": "373070",
    "end": "375539"
  },
  {
    "text": "our eyes lest let's part of the",
    "start": "375539",
    "end": "380340"
  },
  {
    "text": "configuration is here where you choose",
    "start": "380340",
    "end": "382500"
  },
  {
    "text": "the compute so here we can see all the",
    "start": "382500",
    "end": "384539"
  },
  {
    "text": "different instances that can be run as",
    "start": "384539",
    "end": "386370"
  },
  {
    "text": "spot instances you let us know which",
    "start": "386370",
    "end": "388889"
  },
  {
    "text": "instances can",
    "start": "388889",
    "end": "390100"
  },
  {
    "text": "work for your eks cluster choosing the",
    "start": "390100",
    "end": "392560"
  },
  {
    "text": "right instances elastic group will",
    "start": "392560",
    "end": "394570"
  },
  {
    "text": "launch the instances for you not only",
    "start": "394570",
    "end": "396760"
  },
  {
    "text": "based on the spot market availability",
    "start": "396760",
    "end": "398740"
  },
  {
    "text": "that you can really see here you see our",
    "start": "398740",
    "end": "401200"
  },
  {
    "text": "prediction algorithm at work with",
    "start": "401200",
    "end": "403000"
  },
  {
    "text": "providing score for each one of the",
    "start": "403000",
    "end": "405160"
  },
  {
    "text": "different markets so we're not only",
    "start": "405160",
    "end": "406960"
  },
  {
    "text": "going to choose instances for you based",
    "start": "406960",
    "end": "408520"
  },
  {
    "text": "on debt we also going to choose the",
    "start": "408520",
    "end": "411250"
  },
  {
    "text": "instances as I said earlier according to",
    "start": "411250",
    "end": "414010"
  },
  {
    "text": "your cluster resources requirement so",
    "start": "414010",
    "end": "421870"
  },
  {
    "text": "why do we need in spottings to develop",
    "start": "421870",
    "end": "423940"
  },
  {
    "text": "special autoscaler what's what's wrong",
    "start": "423940",
    "end": "425890"
  },
  {
    "text": "with scaling based on thresholds so",
    "start": "425890",
    "end": "427990"
  },
  {
    "text": "let's see this following example here we",
    "start": "427990",
    "end": "430090"
  },
  {
    "text": "have cluster EPS cluster built from",
    "start": "430090",
    "end": "432550"
  },
  {
    "text": "three different instance type or the",
    "start": "432550",
    "end": "434440"
  },
  {
    "text": "good situation very diverse cluster we",
    "start": "434440",
    "end": "437260"
  },
  {
    "text": "have some free capacity in the cluster",
    "start": "437260",
    "end": "438790"
  },
  {
    "text": "three CPUs and a gigabyte of half of RAM",
    "start": "438790",
    "end": "442060"
  },
  {
    "text": "available in the cluster we not going to",
    "start": "442060",
    "end": "444610"
  },
  {
    "text": "perform any scale up here based on",
    "start": "444610",
    "end": "446170"
  },
  {
    "text": "threshold because we didn't met any of",
    "start": "446170",
    "end": "447970"
  },
  {
    "text": "the threshold 80 percent CPU 80 percent",
    "start": "447970",
    "end": "450580"
  },
  {
    "text": "of used ram and so on now we're trying",
    "start": "450580",
    "end": "454210"
  },
  {
    "text": "to deploy a new container a new pod to",
    "start": "454210",
    "end": "456790"
  },
  {
    "text": "this cluster the pods required three CPU",
    "start": "456790",
    "end": "459820"
  },
  {
    "text": "and a gigabyte and half of ram allegedly",
    "start": "459820",
    "end": "462490"
  },
  {
    "text": "we have enough resources in the cluster",
    "start": "462490",
    "end": "464560"
  },
  {
    "text": "right but the pod will fail to get",
    "start": "464560",
    "end": "467560"
  },
  {
    "text": "scheduled this exactly where spottings",
    "start": "467560",
    "end": "470530"
  },
  {
    "text": "autoscaler for eks can help you we will",
    "start": "470530",
    "end": "474190"
  },
  {
    "text": "launch the node that needed to run this",
    "start": "474190",
    "end": "477880"
  },
  {
    "text": "so probably here we launch a node in the",
    "start": "477880",
    "end": "479890"
  },
  {
    "text": "size of c3 large and this is how you'll",
    "start": "479890",
    "end": "482410"
  },
  {
    "text": "have resources infrastructure that",
    "start": "482410",
    "end": "484840"
  },
  {
    "text": "actually meet your containers resources",
    "start": "484840",
    "end": "486970"
  },
  {
    "text": "requirements less the AKS perspectives",
    "start": "486970",
    "end": "490300"
  },
  {
    "text": "so everything I just mentioned very",
    "start": "490300",
    "end": "491950"
  },
  {
    "text": "relevant for any kubernetes",
    "start": "491950",
    "end": "493390"
  },
  {
    "text": "implementation how we differentiate with",
    "start": "493390",
    "end": "495940"
  },
  {
    "text": "eks deployment first we aware of the max",
    "start": "495940",
    "end": "499660"
  },
  {
    "text": "pod attribute in IKS each instance can",
    "start": "499660",
    "end": "502780"
  },
  {
    "text": "have certain amount of instance impulse",
    "start": "502780",
    "end": "505600"
  },
  {
    "text": "pod deploy inside this instance",
    "start": "505600",
    "end": "507430"
  },
  {
    "text": "spottings autoscaler aware to this",
    "start": "507430",
    "end": "509650"
  },
  {
    "text": "number if you reach anywhere close to",
    "start": "509650",
    "end": "511690"
  },
  {
    "text": "this number inside your nodes will scale",
    "start": "511690",
    "end": "514000"
  },
  {
    "text": "up an additional note for you in the",
    "start": "514000",
    "end": "515620"
  },
  {
    "text": "cluster second you can really easy",
    "start": "515620",
    "end": "517719"
  },
  {
    "text": "create new eks class respondents or",
    "start": "517719",
    "end": "520060"
  },
  {
    "text": "integrate into an existing in case",
    "start": "520060",
    "end": "522460"
  },
  {
    "text": "cluster really",
    "start": "522460",
    "end": "523520"
  },
  {
    "text": "to you lest our integration is driven",
    "start": "523520",
    "end": "526910"
  },
  {
    "text": "behind the scene with CloudFormation so",
    "start": "526910",
    "end": "529280"
  },
  {
    "text": "exactly the same way you probably create",
    "start": "529280",
    "end": "531560"
  },
  {
    "text": "your a case cluster today create your",
    "start": "531560",
    "end": "533180"
  },
  {
    "text": "notes today we're doing it in a very",
    "start": "533180",
    "end": "535250"
  },
  {
    "text": "similar way in order for you to be",
    "start": "535250",
    "end": "537050"
  },
  {
    "text": "familiar with the way we implement EPS",
    "start": "537050",
    "end": "539630"
  },
  {
    "text": "cluster and you can of course custom",
    "start": "539630",
    "end": "541940"
  },
  {
    "text": "tailor the CloudFormation for your own",
    "start": "541940",
    "end": "543830"
  },
  {
    "text": "needs that's it thanks a lot",
    "start": "543830",
    "end": "547750"
  },
  {
    "start": "544000",
    "end": "648000"
  },
  {
    "text": "[Applause]",
    "start": "547750",
    "end": "553029"
  },
  {
    "text": "come on down",
    "start": "560040",
    "end": "563089"
  },
  {
    "text": "thank you",
    "start": "565240",
    "end": "567140"
  },
  {
    "text": "hey um so I actually have the inaugural",
    "start": "567140",
    "end": "570529"
  },
  {
    "text": "question from twitch today and twitch",
    "start": "570529",
    "end": "574010"
  },
  {
    "text": "wants to know does spot in Stren as a",
    "start": "574010",
    "end": "575750"
  },
  {
    "text": "controller in my EKF cluster the way we",
    "start": "575750",
    "end": "579529"
  },
  {
    "text": "actually provide all the wonderful",
    "start": "579529",
    "end": "582019"
  },
  {
    "text": "intelligence inside your kubernetes",
    "start": "582019",
    "end": "584089"
  },
  {
    "text": "cluster we provide you with a pod you",
    "start": "584089",
    "end": "586810"
  },
  {
    "text": "install the spot inside your eks inside",
    "start": "586810",
    "end": "589550"
  },
  {
    "text": "the kubernetes cluster and this is how",
    "start": "589550",
    "end": "591200"
  },
  {
    "text": "we have the visibility into the resource",
    "start": "591200",
    "end": "593360"
  },
  {
    "text": "requirements of uronic pots awesome and",
    "start": "593360",
    "end": "596120"
  },
  {
    "text": "I have a question from myself and I'm",
    "start": "596120",
    "end": "598640"
  },
  {
    "text": "why I'm also on Twitter maybe this",
    "start": "598640",
    "end": "600440"
  },
  {
    "text": "counts but do you have any cool cost",
    "start": "600440",
    "end": "602360"
  },
  {
    "text": "optimization stories for us because I",
    "start": "602360",
    "end": "604279"
  },
  {
    "text": "know that a lot of people are nervous to",
    "start": "604279",
    "end": "606649"
  },
  {
    "text": "use spot ences because of the because of",
    "start": "606649",
    "end": "608899"
  },
  {
    "text": "the shutting down time do you have any",
    "start": "608899",
    "end": "611149"
  },
  {
    "text": "cool like cost optimization customer",
    "start": "611149",
    "end": "612980"
  },
  {
    "text": "stories well yeah I think the coolest",
    "start": "612980",
    "end": "615050"
  },
  {
    "text": "story it's about the company we actually",
    "start": "615050",
    "end": "617600"
  },
  {
    "text": "helped bring them for profitability they",
    "start": "617600",
    "end": "620839"
  },
  {
    "text": "had a huge infrastructure a hundred of",
    "start": "620839",
    "end": "623360"
  },
  {
    "text": "thousand of instances paid a lot of",
    "start": "623360",
    "end": "625279"
  },
  {
    "text": "money and it really was hesitate to use",
    "start": "625279",
    "end": "627050"
  },
  {
    "text": "spot instances by utilizing our platform",
    "start": "627050",
    "end": "629810"
  },
  {
    "text": "they could have used any of their",
    "start": "629810",
    "end": "631910"
  },
  {
    "text": "production workload on top of spa and we",
    "start": "631910",
    "end": "633920"
  },
  {
    "text": "actually helped this company become",
    "start": "633920",
    "end": "635420"
  },
  {
    "text": "profitable and its really nice to see",
    "start": "635420",
    "end": "637670"
  },
  {
    "text": "the business meeting the infrastructure",
    "start": "637670",
    "end": "639230"
  },
  {
    "text": "and how we can help awesome that's",
    "start": "639230",
    "end": "641269"
  },
  {
    "text": "really cool well thank you so much it",
    "start": "641269",
    "end": "644000"
  },
  {
    "text": "was great thank you thank you",
    "start": "644000",
    "end": "647260"
  }
]