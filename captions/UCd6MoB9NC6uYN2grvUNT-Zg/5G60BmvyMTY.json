[
  {
    "text": "hello everyone and uh welcome today to our uh monthly edition of office hours",
    "start": "3600",
    "end": "9599"
  },
  {
    "text": "this one obviously this month is PHP office hours uh for those of you who joined us for our office hours program",
    "start": "9599",
    "end": "15400"
  },
  {
    "text": "before I wanted uh thank you for coming back uh and hopefully enjoy this one as well and for those who are not uh I'm",
    "start": "15400",
    "end": "22800"
  },
  {
    "text": "glad to introduce you to uh aws's office hours programming uh before we get",
    "start": "22800",
    "end": "28519"
  },
  {
    "text": "started I wanted to mention that you have if you have joined today's webinar you're muted um and you can listen in on",
    "start": "28519",
    "end": "34160"
  },
  {
    "text": "your computer speakers or you can listen in on your telephone uh you will find both of those options in the attendee",
    "start": "34160",
    "end": "40160"
  },
  {
    "text": "panel on the right hand side of your screen also during the presentation uh",
    "start": "40160",
    "end": "45360"
  },
  {
    "text": "we're going to invite you to ask questions as we'll be answering uh a large number of questions today and it's",
    "start": "45360",
    "end": "51199"
  },
  {
    "text": "a main focal point of the office hour sessions uh in the questions panel um",
    "start": "51199",
    "end": "56239"
  },
  {
    "text": "we're going to be collecting those and then uh again addressing them um in uh for roughly 30 to 40 minutes",
    "start": "56239",
    "end": "64198"
  },
  {
    "text": "today so without further Ado I'd like to introduce to you uh our BAS our two uh",
    "start": "64199",
    "end": "71320"
  },
  {
    "text": "presenters today the first is Jeff bar Jeff is a",
    "start": "71320",
    "end": "77320"
  },
  {
    "text": "senior evangelist AWS he's based in Seattle uh and he is the author of The PHP book host your website in the cloud",
    "start": "77320",
    "end": "85000"
  },
  {
    "text": "uh also joining us today is Ryan parman Ryan is a PHP development engineer who who's also based in Seattle and he's the",
    "start": "85000",
    "end": "92479"
  },
  {
    "text": "creator of the PHP SDK again just a little bit about what",
    "start": "92479",
    "end": "97720"
  },
  {
    "text": "office hours is and office hours is simply uh a program that we created that",
    "start": "97720",
    "end": "102960"
  },
  {
    "text": "enables a technical audience the ability to interact with AWS technical experts",
    "start": "102960",
    "end": "108799"
  },
  {
    "text": "um again we've we this is our third session and we're always looking to uh improve this program so any feedback",
    "start": "108799",
    "end": "116200"
  },
  {
    "text": "that you're willing to provide uh is greatly appreciated what offers hours is not is first of all",
    "start": "116200",
    "end": "123600"
  },
  {
    "text": "office hours is not support um if you have a problem with your current deployment uh please either visit our",
    "start": "123600",
    "end": "129840"
  },
  {
    "text": "forums or actually our support website uh at the following URL and you'll see",
    "start": "129840",
    "end": "135160"
  },
  {
    "text": "multiple different Support options uh for help with your current deployment uh",
    "start": "135160",
    "end": "140319"
  },
  {
    "text": "it's also not a place to find out about upcoming services so as we actually are asking you to submit questions in terms",
    "start": "140319",
    "end": "147599"
  },
  {
    "text": "of asking like what we'll be releasing or what's uh what's upcoming since we typically do not disclose the",
    "start": "147599",
    "end": "152879"
  },
  {
    "text": "information about our services until they're available uh we'll actually not be answering those",
    "start": "152879",
    "end": "159280"
  },
  {
    "text": "questions so today um with the office hours format we always start off a little bit about what's new uh with uh",
    "start": "159280",
    "end": "166400"
  },
  {
    "text": "with the topic so today will be what's new with PHP uh with AWS and then we're going to get into a couple how-to",
    "start": "166400",
    "end": "172080"
  },
  {
    "text": "demonstrations it's actually the first time with office hours uh We've added howto demonstrations is but we received",
    "start": "172080",
    "end": "178159"
  },
  {
    "text": "feedback uh and we I think this is going to be a great addition to the program again the two that we're going to cover",
    "start": "178159",
    "end": "183319"
  },
  {
    "text": "today are dynamically uh instantiate infrastructure and scalable processing Pipeline and then we'll go right into uh",
    "start": "183319",
    "end": "190400"
  },
  {
    "text": "the question and answer session so right now Ryan is going to",
    "start": "190400",
    "end": "196920"
  },
  {
    "text": "jump in and take you through what's new uh with the PHP",
    "start": "196920",
    "end": "202440"
  },
  {
    "text": "SDK thanks a lot Reed so the AWS SDK for PHP launched at the end of September uh",
    "start": "202840",
    "end": "210319"
  },
  {
    "text": "some of the very very high level features are that it has support for all of the major infrastructure services",
    "start": "210319",
    "end": "215840"
  },
  {
    "text": "that AWS provides it it has some some special features",
    "start": "215840",
    "end": "222280"
  },
  {
    "text": "like batch requests which is being able to execute requests in parallel to speed up your application we have response",
    "start": "222280",
    "end": "229200"
  },
  {
    "text": "caching which will cach the responses that come back from AWS so again your",
    "start": "229200",
    "end": "234599"
  },
  {
    "text": "application can run even faster uh it uses simple XML to parse the XML which is uh very popular extension that's",
    "start": "234599",
    "end": "241000"
  },
  {
    "text": "available in php5 and it does a really good job of of doing that and we've made sure that it has as few external",
    "start": "241000",
    "end": "247200"
  },
  {
    "text": "dependencies as possible so just about anybody whether you're on a $5 do shared Hosting account or AWS or something else",
    "start": "247200",
    "end": "254680"
  },
  {
    "text": "you can you can most likely use the SDK um that's about as all that I have",
    "start": "254680",
    "end": "261320"
  },
  {
    "text": "as far as new features and stuff uh I'm GNA go ahead and hand this over to",
    "start": "261320",
    "end": "267919"
  },
  {
    "text": "Jeff okay so I'm Jeff and uh we want to talk",
    "start": "268720",
    "end": "275880"
  },
  {
    "text": "about some of the details of how you get started with the PHP",
    "start": "275880",
    "end": "281039"
  },
  {
    "text": "SDK the first thing that you need to do is you need to download",
    "start": "281039",
    "end": "287039"
  },
  {
    "text": "and unpack the SDK you put that in a directory and then you need to edit your",
    "start": "287440",
    "end": "294280"
  },
  {
    "text": "PHP configuration to put that directory on phps include path",
    "start": "294280",
    "end": "301400"
  },
  {
    "text": "then you need to configure the SDK and you you need um at in the simplest case you need two values you need your AWS",
    "start": "301400",
    "end": "307960"
  },
  {
    "text": "key and your AWS secret key you get both of those by logging into your AWS",
    "start": "307960",
    "end": "315039"
  },
  {
    "text": "portal and you you can simply find your credentials there you then carefully copy those out of the portal you paste",
    "start": "315039",
    "end": "321800"
  },
  {
    "text": "those into we we give you a file called config sample um in.php you copy that",
    "start": "321800",
    "end": "327919"
  },
  {
    "text": "config to config.inc PHP and you then edit the AWS key and AWS secret key to",
    "start": "327919",
    "end": "335000"
  },
  {
    "text": "put them in there so that then gives the SDK the ability to access your AWS account and your your",
    "start": "335000",
    "end": "343080"
  },
  {
    "text": "resources so that's the configuration and then in each of the applications that you build you simply need to",
    "start": "343080",
    "end": "349319"
  },
  {
    "text": "require or include a single file that file is sdk. class.",
    "start": "349319",
    "end": "356479"
  },
  {
    "text": "PHP so once you you've done that each of the",
    "start": "358639",
    "end": "364160"
  },
  {
    "text": "different uh methods and functions that you can call in the SDK will return a an",
    "start": "364160",
    "end": "370560"
  },
  {
    "text": "object of type CF simple XML so this this is a representation of the XML that",
    "start": "370560",
    "end": "376199"
  },
  {
    "text": "is returned from any of the AWS function calls and in order to access this",
    "start": "376199",
    "end": "382599"
  },
  {
    "text": "information you simply need to Traverse through the the hierarchy of PHP arrays",
    "start": "382599",
    "end": "387639"
  },
  {
    "text": "and objects and so forth now when you when you dig in several levels deep what you will find is that",
    "start": "387639",
    "end": "394880"
  },
  {
    "text": "the you'll find individual items that look like strings but it's really important to know that those are",
    "start": "394880",
    "end": "401479"
  },
  {
    "text": "themselves XML objects they render as strings but you need to cast them to a string type in order for them to to be",
    "start": "401479",
    "end": "408800"
  },
  {
    "text": "properly handled as a string throughout the rest of your application so you can",
    "start": "408800",
    "end": "414240"
  },
  {
    "text": "do that casting in two different ways you can either as as you see at the at the bottom of the the page you can",
    "start": "414240",
    "end": "420000"
  },
  {
    "text": "either put the the traditional cast operator at the the front of your expression and in this case we're we're",
    "start": "420000",
    "end": "426520"
  },
  {
    "text": "going several levels deep through the object to access the we get the response",
    "start": "426520",
    "end": "432160"
  },
  {
    "text": "object from the method call that we make we then access the body of the response we go to the contents array we go to the",
    "start": "432160",
    "end": "439520"
  },
  {
    "text": "first element of that array and we then access the key value so once we've referenced that",
    "start": "439520",
    "end": "446599"
  },
  {
    "text": "that's an XML object we can either cast that set to a string or we can call the",
    "start": "446599",
    "end": "452360"
  },
  {
    "text": "two string method on that object and either either way you need to get this as a string the little bit tricky part I",
    "start": "452360",
    "end": "459520"
  },
  {
    "text": "found is that if if you don't cast it to a string when you print it out it it certainly looks like a string but then",
    "start": "459520",
    "end": "466080"
  },
  {
    "text": "when you pass it to other parts of PHP that that other part says huh I I",
    "start": "466080",
    "end": "471319"
  },
  {
    "text": "thought I was supposed to get a string but I got this xnl object what what am I supposed to do with it so if you if you",
    "start": "471319",
    "end": "477120"
  },
  {
    "text": "find yourself getting some a little bit uh kind of surprising error",
    "start": "477120",
    "end": "483120"
  },
  {
    "text": "messages from from your your code as you're working with the SDK simply make sure that you're you're casting your",
    "start": "483120",
    "end": "488400"
  },
  {
    "text": "your XML values into Strings so let's take a look at at two different samples and both of these are",
    "start": "488400",
    "end": "495159"
  },
  {
    "text": "actually things that I have uh that I've first developed for my book they've worked really really well for audiences",
    "start": "495159",
    "end": "500720"
  },
  {
    "text": "and so I continue to use them and reuse them the the first example is is about",
    "start": "500720",
    "end": "506599"
  },
  {
    "text": "dynamically creating AWS infrastructure so with just a little bit of code we're",
    "start": "506599",
    "end": "512880"
  },
  {
    "text": "going to create this this simple architecture we're going to launch an ec2 instance we're going to create and",
    "start": "512880",
    "end": "519680"
  },
  {
    "text": "attach a pair of EBS elastic block storage volumes attach those to the",
    "start": "519680",
    "end": "524800"
  },
  {
    "text": "instance and we're going to allocate an elastic IP address and we're going to attach that to the instance so I always",
    "start": "524800",
    "end": "531720"
  },
  {
    "text": "like to contrast this to the traditional traditional model of uh of",
    "start": "531720",
    "end": "537760"
  },
  {
    "text": "getting infrastructure where you either need to buy hardware and install it in your Colo or you would need to actually",
    "start": "537760",
    "end": "544680"
  },
  {
    "text": "um call up your internet service provider make an arrangement to get Hardware with AWS You're simply making",
    "start": "544680",
    "end": "550680"
  },
  {
    "text": "some function calls and we'll see how to do that through the SDK in order to uh to create this this",
    "start": "550680",
    "end": "557440"
  },
  {
    "text": "Dynamic infrastructure so let's see how to do it",
    "start": "557440",
    "end": "563519"
  },
  {
    "text": "so the the first line of code we're simply calling the SDK we're creating an",
    "start": "563519",
    "end": "568760"
  },
  {
    "text": "access object object called an Amazon ec2 object now there's two ways you can",
    "start": "568760",
    "end": "573959"
  },
  {
    "text": "make this call you can pass in your AWS credentials but since we've already configured our SDK with those",
    "start": "573959",
    "end": "579600"
  },
  {
    "text": "credentials we simply pass we we don't need to pass in any credentials and it'll use a set that we've configured in",
    "start": "579600",
    "end": "586680"
  },
  {
    "text": "that gives us an access object called an ec2 object and we can then make method calls",
    "start": "586680",
    "end": "593160"
  },
  {
    "text": "on that so the second statement in the example here I'm calling the Run instances method passing in just a few",
    "start": "593160",
    "end": "600480"
  },
  {
    "text": "values I'm saying the the Ami or machine image I'd like to run is the first",
    "start": "600480",
    "end": "606480"
  },
  {
    "text": "argument the second and third arguments represent the minimum and maximum number of instances I would like to launch so I",
    "start": "606480",
    "end": "612120"
  },
  {
    "text": "could say I want at least one but as many as 10 if I need 10 or 100 or a thousand instances I can simply change",
    "start": "612120",
    "end": "617800"
  },
  {
    "text": "that second one to a larger number and then I pass in a few",
    "start": "617800",
    "end": "624519"
  },
  {
    "text": "arguments I want to be able to SSH to that instance once I've run it so I pass",
    "start": "624519",
    "end": "630440"
  },
  {
    "text": "in the name of my my keys and I previously created these keys in the AWS Management console and AWS has 11",
    "start": "630440",
    "end": "637680"
  },
  {
    "text": "different types of machines or instances and I need to tell the Run instances",
    "start": "637680",
    "end": "642760"
  },
  {
    "text": "method that I would like to launch an M1 small",
    "start": "642760",
    "end": "647279"
  },
  {
    "text": "instance so I make that call and AWS is going to go ahead and find some available hardware install my operating",
    "start": "648560",
    "end": "656240"
  },
  {
    "text": "system on it launch that OS get make it all up and running and ready for me in the space of just a minute or",
    "start": "656240",
    "end": "662800"
  },
  {
    "text": "two so that that call that I made returned a value that that we captured",
    "start": "662800",
    "end": "668000"
  },
  {
    "text": "as a variable called response I'm then going to dig into that response and find some important information I want two",
    "start": "668000",
    "end": "675320"
  },
  {
    "text": "different values the first is I want the instance ID which is a unique value that identifies the instance that I just",
    "start": "675320",
    "end": "681320"
  },
  {
    "text": "launched so I can refer to it by that name in further calls and the second one is the location which we call the",
    "start": "681320",
    "end": "687600"
  },
  {
    "text": "availability Zone so I need to know with within the particular AWS region that we started this instance I need to know",
    "start": "687600",
    "end": "694000"
  },
  {
    "text": "which zone it is running in so I I I dig through the return value and I get the",
    "start": "694000",
    "end": "699040"
  },
  {
    "text": "instance ID and the zone and then I simply Echo those out so I have a reference on where that was",
    "start": "699040",
    "end": "706959"
  },
  {
    "text": "created now with that information in hand I'd like to get an IP address for my instance so I call the allocate",
    "start": "709480",
    "end": "715720"
  },
  {
    "text": "address method to do that I use the is okay pay check to verify that I was able",
    "start": "715720",
    "end": "721200"
  },
  {
    "text": "to successfully allocate the address and then once again I dig through the response and I assign the",
    "start": "721200",
    "end": "727399"
  },
  {
    "text": "value public IP to the IP address that was assigned for me so at this point I have an IP address it's part of my",
    "start": "727399",
    "end": "733600"
  },
  {
    "text": "account but it doesn't actually route to any particular E2",
    "start": "733600",
    "end": "739760"
  },
  {
    "text": "instance so the next step is to Simply call associate address and that one statement is all we need to do to",
    "start": "739760",
    "end": "746240"
  },
  {
    "text": "connect the instance with a public IP address we call that we check to make sure that",
    "start": "746240",
    "end": "751680"
  },
  {
    "text": "it's exceeded and then we Echo out that we've actually attached the address so just a few very simple very",
    "start": "751680",
    "end": "757880"
  },
  {
    "text": "straightforward function calls we can allocate hardware and attach the address",
    "start": "757880",
    "end": "763480"
  },
  {
    "text": "now let's go ahead and create the virtual dis",
    "start": "763480",
    "end": "767680"
  },
  {
    "text": "volumes to do that we'll call the create volume method twice it just needs two",
    "start": "768959",
    "end": "774880"
  },
  {
    "text": "arguments the first is the size in gigabytes of the volume that we'd like to create",
    "start": "774880",
    "end": "780199"
  },
  {
    "text": "and the second is the availability zone so we'll create a 10 gigabyte dis and a 100 gigabyte dis once again check all",
    "start": "780199",
    "end": "787560"
  },
  {
    "text": "the responses after we've done that dig into the responses and get the IDS of these",
    "start": "787560",
    "end": "794480"
  },
  {
    "text": "created values so we have volume one and volume two representing what was",
    "start": "794480",
    "end": "800160"
  },
  {
    "text": "created the next step is to Simply attach these volumes to the instances and we do that with the volume ID the",
    "start": "800199",
    "end": "806320"
  },
  {
    "text": "instance ID and then we we need to pass in a Linux device where that that raw",
    "start": "806320",
    "end": "811560"
  },
  {
    "text": "dis will appear so now we've created these discs attached them to our our instance if we",
    "start": "811560",
    "end": "818480"
  },
  {
    "text": "were to go f further we would then log into the instance we would attach a file system or make a file system on that",
    "start": "818480",
    "end": "824760"
  },
  {
    "text": "device mount it up into our Unix file system and then proceed so there there you see the the",
    "start": "824760",
    "end": "831279"
  },
  {
    "text": "power of the ability to create Dynamic infrastructure okay now the second",
    "start": "831279",
    "end": "836720"
  },
  {
    "text": "example is a little bit more complicated and I'm going to have to gloss over some of the the more uh the deeper details of",
    "start": "836720",
    "end": "843399"
  },
  {
    "text": "this just due to the limited time that we have this is another example I created for my book and it it's it's",
    "start": "843399",
    "end": "849639"
  },
  {
    "text": "really turned into my my favorite example because it it shows really how simple it is to build a a very scalable",
    "start": "849639",
    "end": "857279"
  },
  {
    "text": "application it it shows that you can create a a complex app like this in in fairly small easy to digest pieces and",
    "start": "857279",
    "end": "865720"
  },
  {
    "text": "it it it scales very very nicely what what I have here as an applic uh if you look at that picture you'll",
    "start": "865720",
    "end": "871360"
  },
  {
    "text": "see that each of those white boxes represents an individual processing step and each of the cues represents a an",
    "start": "871360",
    "end": "878560"
  },
  {
    "text": "Amazon sqs simple Q service buffer between the different processing stages",
    "start": "878560",
    "end": "884199"
  },
  {
    "text": "in this pipeline so the the the big picture here is we're going to feed some URLs at the top into the URL",
    "start": "884199",
    "end": "891240"
  },
  {
    "text": "que the first step is going to fetch the HTML at that location it's then going to",
    "start": "891240",
    "end": "897480"
  },
  {
    "text": "store that HTML in Amazon S3 and then it's going to pass the the next kind of",
    "start": "897480",
    "end": "903399"
  },
  {
    "text": "the the the workflow it's going to pass the work along to the next step which is to take that HTML parse it and identify",
    "start": "903399",
    "end": "911240"
  },
  {
    "text": "any links to images that are found in that HTML so as you see each of these different cues represented in the the",
    "start": "911240",
    "end": "918279"
  },
  {
    "text": "diagram that that that the cues store work to be done that's being passed from stage to Stage to stage of this",
    "start": "918279",
    "end": "925160"
  },
  {
    "text": "pipeline so the second stage is going to go ahead and take the HTML from S3 it's going to parse it find all the",
    "start": "925160",
    "end": "932600"
  },
  {
    "text": "image URLs and then write another record into the next cue to indicate there's",
    "start": "932600",
    "end": "937759"
  },
  {
    "text": "more work to be done the next kind of work to be done is to take those images",
    "start": "937759",
    "end": "943600"
  },
  {
    "text": "fetch each of those images from wherever they're found as reference in the original HTML store those into",
    "start": "943600",
    "end": "950839"
  },
  {
    "text": "S3 and then proceed to write a work unit into the render queue the render queue",
    "start": "950839",
    "end": "957000"
  },
  {
    "text": "is going to take all the images that were found on that page actually just the first 16 images take those images",
    "start": "957000",
    "end": "963639"
  },
  {
    "text": "scale them down and then draw as you see on the the right side of the page just draw like a little Montage or composite",
    "start": "963639",
    "end": "970199"
  },
  {
    "text": "of all the images that are found on on that page so it it's a",
    "start": "970199",
    "end": "975519"
  },
  {
    "text": "really nice pipeline each of these different stages might take a large a longer or shorter amount of time based",
    "start": "975519",
    "end": "981360"
  },
  {
    "text": "on the the response speed of the website the number of images to",
    "start": "981360",
    "end": "987120"
  },
  {
    "text": "be that's the amount amount of work to be done to render them and so forth so if this was part of a production",
    "start": "987120",
    "end": "993839"
  },
  {
    "text": "application I could actually scale this in several different ways I could choose to run each of the different processing",
    "start": "993839",
    "end": "1000399"
  },
  {
    "text": "steps on separate ec2 instances I could even run multiple copies of any of these",
    "start": "1000399",
    "end": "1005920"
  },
  {
    "text": "steps on on the same ec2 instance across multiple cores or I could run it across",
    "start": "1005920",
    "end": "1010959"
  },
  {
    "text": "multiple ec2 instances a really neat attribute of a of a pipeline model like this that's",
    "start": "1010959",
    "end": "1016399"
  },
  {
    "text": "totally driven by the cues is the fact that there there is no Global state held in any local variables all the state all",
    "start": "1016399",
    "end": "1024199"
  },
  {
    "text": "of the the work to be done is always held in a particular sqs message",
    "start": "1024199",
    "end": "1029839"
  },
  {
    "text": "cue so there there's no ordering dependency if this was part of a large application maybe we had people",
    "start": "1029839",
    "end": "1036438"
  },
  {
    "text": "submitting websites and we wanted to snapshot them and and tens or hundreds of these website requests were pouring",
    "start": "1036439",
    "end": "1042600"
  },
  {
    "text": "in every minute we wouldn't have to worry about doing things in order and running things at the the slowest speed",
    "start": "1042600",
    "end": "1048520"
  },
  {
    "text": "of the pipeline we could tune the amount of processing power applied to each step by simply putting it on either different",
    "start": "1048520",
    "end": "1055240"
  },
  {
    "text": "ec2 instances different instance types different cores more cores um and so",
    "start": "1055240",
    "end": "1061880"
  },
  {
    "text": "forth so very simple example but very scalable very very flexible so let's dig",
    "start": "1061880",
    "end": "1068080"
  },
  {
    "text": "in a little bit and see how it works uh this is the a bigger picture of",
    "start": "1068080",
    "end": "1075120"
  },
  {
    "text": "the the pipeline you youve you we've already walked through most of of this",
    "start": "1075120",
    "end": "1080840"
  },
  {
    "text": "here you can see that the different steps they're involved now when I was building this application I designed the",
    "start": "1080840",
    "end": "1087600"
  },
  {
    "text": "pipeline in in some general terms but I I didn't have to actually write all the code before I was able to test it I was",
    "start": "1087600",
    "end": "1094240"
  },
  {
    "text": "able to get a a sense of what I wanted to do do and then I I built each step in",
    "start": "1094240",
    "end": "1100720"
  },
  {
    "text": "turn and then each step would would do its work leave its results in the next message cue for the next step of the",
    "start": "1100720",
    "end": "1106960"
  },
  {
    "text": "pipeline I would then Implement that step and pull the data from step one to step two to three and so forth so I was",
    "start": "1106960",
    "end": "1114120"
  },
  {
    "text": "able to construct this pipeline pretty much as I as I outlined it on the diagram building it step by step by step",
    "start": "1114120",
    "end": "1121559"
  },
  {
    "text": "as I decided exactly how I wanted to make everything happen so these are some of the really",
    "start": "1121559",
    "end": "1128360"
  },
  {
    "text": "important attributes of this architecture it's really simple so each stage is very easy to understand there's",
    "start": "1128360",
    "end": "1135000"
  },
  {
    "text": "not a whole lot of low-level coding because we we can rely on AWS and on the p P SDK for that scalable in a number of",
    "start": "1135000",
    "end": "1142640"
  },
  {
    "text": "different ways adding processing adding instances adding additional stages if we want to make it more complex and I don't",
    "start": "1142640",
    "end": "1149840"
  },
  {
    "text": "have to worry about running out of space and message cues I don't have to worry about storing too much data because",
    "start": "1149840",
    "end": "1155520"
  },
  {
    "text": "we're using AWS and we can take advantage of aws's scalability in in uh several different",
    "start": "1155520",
    "end": "1163240"
  },
  {
    "text": "ways it's also a fault tolerant architecture because of the way message cues work the message Q remains in the",
    "start": "1163600",
    "end": "1169760"
  },
  {
    "text": "queue until processed if one of the the stages were to be delayed or if the the",
    "start": "1169760",
    "end": "1175520"
  },
  {
    "text": "program crashed for some reason those messages will remain in the queue until they're fully processed if a process",
    "start": "1175520",
    "end": "1181799"
  },
  {
    "text": "were to take a message from the queue begin to process it but then the process",
    "start": "1181799",
    "end": "1187640"
  },
  {
    "text": "died for some reason a a very important feature of the simple Q service is that those messages will reappear in the cues",
    "start": "1187640",
    "end": "1194240"
  },
  {
    "text": "after a configurable timeout period and then fin",
    "start": "1194240",
    "end": "1199720"
  },
  {
    "text": "this architecture is asynchronous each stage runs at its own speed and it's very very um possible to build test and",
    "start": "1199720",
    "end": "1206760"
  },
  {
    "text": "run one stage at a time so let's go ahead and look at the",
    "start": "1206760",
    "end": "1212320"
  },
  {
    "text": "the code and see how it was put together I defined names for for the the",
    "start": "1212320",
    "end": "1219280"
  },
  {
    "text": "different cues the URL Q the parse Q the image Q the render que and then the the",
    "start": "1219280",
    "end": "1224520"
  },
  {
    "text": "feed queue was actually a another extension I didn't fully flesh out in this example so these are simply the",
    "start": "1224520",
    "end": "1231240"
  },
  {
    "text": "names of the message cues I'll be using my first step here is I'm going to",
    "start": "1231240",
    "end": "1236679"
  },
  {
    "text": "go ahead and create an access object for sqs and then I'm going to use the create",
    "start": "1236679",
    "end": "1241919"
  },
  {
    "text": "Q method to create uh th those actual message",
    "start": "1241919",
    "end": "1248000"
  },
  {
    "text": "cues now one thing I found when I build these applications is that it's always worthwhile to put in a little bit of",
    "start": "1252000",
    "end": "1257240"
  },
  {
    "text": "time up front to build some little debugging tools and some status Tools in this case I made a a tool that's called",
    "start": "1257240",
    "end": "1263520"
  },
  {
    "text": "crawl Q status and crawl Q status simply goes through each of the message cues and tells me how many messages are are",
    "start": "1263520",
    "end": "1270000"
  },
  {
    "text": "remaining in each of the cues I find it's really worthwhile to build these up front and to put a little bit of extra time into making them have uh um good",
    "start": "1270000",
    "end": "1277720"
  },
  {
    "text": "error checking and high quality output because they they turn always turn out to be a lot more useful um in retrospect",
    "start": "1277720",
    "end": "1283440"
  },
  {
    "text": "than you would have thought in the beginning now the way that the SDK and",
    "start": "1283440",
    "end": "1291000"
  },
  {
    "text": "the way sqs works is that every one of the message cues in sqs has a distinct",
    "start": "1291000",
    "end": "1296159"
  },
  {
    "text": "URL so we have a little utility function called find Q URL that given the name of",
    "start": "1296159",
    "end": "1301520"
  },
  {
    "text": "a queue lets us have the URL of the que for processing so all the other API",
    "start": "1301520",
    "end": "1307039"
  },
  {
    "text": "calls that we make to reference a particular queue are always going to require the URL of the",
    "start": "1307039",
    "end": "1315039"
  },
  {
    "text": "queue so let's see how we go ahead and put message into the queue now a decision I made early on was that each",
    "start": "1315880",
    "end": "1323240"
  },
  {
    "text": "of the messages in my message cues would be encoded in a a very simple format",
    "start": "1323240",
    "end": "1328400"
  },
  {
    "text": "called Json JS n as I created each message I decided",
    "start": "1328400",
    "end": "1334120"
  },
  {
    "text": "that I would actually pass along some history so I could have some very simple timing information in the message and I",
    "start": "1334120",
    "end": "1340400"
  },
  {
    "text": "could see basically the the history of all the locations that that message had been so I could really Trace each piece",
    "start": "1340400",
    "end": "1346679"
  },
  {
    "text": "of work through my system so you can see that I'm I'm building a",
    "start": "1346679",
    "end": "1351760"
  },
  {
    "text": "PHP array and I put four different elements an action telling the next stage of the processing what to be done",
    "start": "1351760",
    "end": "1358480"
  },
  {
    "text": "the origin was was just to say where did the this message originate the data was",
    "start": "1358480",
    "end": "1363960"
  },
  {
    "text": "the was the operation to be um was the information to be processed so in this case we're we're loading messages into",
    "start": "1363960",
    "end": "1371320"
  },
  {
    "text": "the queue so the data would represent a URL and then the history as you'll see as we go through additional steps was",
    "start": "1371320",
    "end": "1377840"
  },
  {
    "text": "simply an array of locations of where the message had been so it starts out",
    "start": "1377840",
    "end": "1383080"
  },
  {
    "text": "and says posted by the name of the program and then a date and time stamp to load",
    "start": "1383080",
    "end": "1391120"
  },
  {
    "text": "the messes the first stage of the queue we simply do a send message call we pass",
    "start": "1391120",
    "end": "1397279"
  },
  {
    "text": "in the URL of the of the queue and the message and then we verify that that was actually passed in so this is how we",
    "start": "1397279",
    "end": "1403840"
  },
  {
    "text": "initiate our pipeline by simply pushing a message into the first stage",
    "start": "1403840",
    "end": "1410039"
  },
  {
    "text": "so if you've built distributed message passing systems in the past you know that it can be fairly complicated to to",
    "start": "1410039",
    "end": "1415600"
  },
  {
    "text": "glue all the pieces together sqs and the phps DK I think make it much much",
    "start": "1415600",
    "end": "1421360"
  },
  {
    "text": "simpler we post the messages and then here's how we receive them we we create",
    "start": "1421360",
    "end": "1426600"
  },
  {
    "text": "a little function called pull message and we call sqss receive message function with the Q URL if um we we need",
    "start": "1426600",
    "end": "1434840"
  },
  {
    "text": "to verify that we received a response if we didn't receive a response we we simply sleep for one second in this case",
    "start": "1434840",
    "end": "1441240"
  },
  {
    "text": "and then we'll try again in a second otherwise we can go ahead and process",
    "start": "1441240",
    "end": "1446840"
  },
  {
    "text": "the message so because we stored the message",
    "start": "1446840",
    "end": "1452760"
  },
  {
    "text": "in Json form we need to decode the message with the Json decode function built into PHP and then the this pull",
    "start": "1452760",
    "end": "1460360"
  },
  {
    "text": "message function that I'm showing you simply returns a PHP array with a number of important values including the time",
    "start": "1460360",
    "end": "1466000"
  },
  {
    "text": "stamp the actual message the the details and then something called the receipt handle that we're going to need later",
    "start": "1466000",
    "end": "1471760"
  },
  {
    "text": "when we actually need to go ahead and remove the message from the the message cue so we we pull the message and then",
    "start": "1471760",
    "end": "1479120"
  },
  {
    "text": "each of the processing stages in my application looks the same okay so what",
    "start": "1479120",
    "end": "1484840"
  },
  {
    "text": "we do is we we we start with uh a while loop that that runs forever all that",
    "start": "1484840",
    "end": "1490600"
  },
  {
    "text": "while loop needs to do is pull the message from the message CU verify that a message was present",
    "start": "1490600",
    "end": "1498520"
  },
  {
    "text": "extract the details and then do any any processing on that message that will be specific to that particular pipeline",
    "start": "1498520",
    "end": "1504840"
  },
  {
    "text": "stat but this is effectively a almost a base class if you will that that's a",
    "start": "1504840",
    "end": "1511080"
  },
  {
    "text": "pattern that would be repeated over and over um in the different stages of the pipeline take the message get the",
    "start": "1511080",
    "end": "1517399"
  },
  {
    "text": "details process it and then in most cases we would then generate a new message and pass it along to the next",
    "start": "1517399",
    "end": "1523159"
  },
  {
    "text": "stage in the pipeline so here's just a sample of the the detailed process processing for a",
    "start": "1523159",
    "end": "1529039"
  },
  {
    "text": "single stage so this is the the page fetch so we have a URL called the page",
    "start": "1529039",
    "end": "1535159"
  },
  {
    "text": "URL that we need to process we we we then use php's file get",
    "start": "1535159",
    "end": "1541120"
  },
  {
    "text": "contents to receive the or to download the the content of that",
    "start": "1541120",
    "end": "1547080"
  },
  {
    "text": "page Echo out a little bit of information for debugging so that we know that it worked and then we're going",
    "start": "1547960",
    "end": "1553480"
  },
  {
    "text": "to take that page and we're going to store it in Amazon S3 so that we can use it reference it again later",
    "start": "1553480",
    "end": "1560240"
  },
  {
    "text": "hang on just a second here accidentally clicked a little bit too much okay there we go back to detailed",
    "start": "1563440",
    "end": "1569720"
  },
  {
    "text": "processing so in order to store in Amazon S3 we simply use our our S3",
    "start": "1569720",
    "end": "1575520"
  },
  {
    "text": "access object and we we call the create object function we need to mention where we'd like to store an S3 a key for the",
    "start": "1575520",
    "end": "1582039"
  },
  {
    "text": "object and then we we pass in what we' like to store as as the body and then the ACL or Access Control list indicates",
    "start": "1582039",
    "end": "1588799"
  },
  {
    "text": "the permissions that we would like to have on there so this is a a single detailed",
    "start": "1588799",
    "end": "1594480"
  },
  {
    "text": "processing step and then in the next step uh the next final part of that processing we we",
    "start": "1594480",
    "end": "1601760"
  },
  {
    "text": "take the values we pulled for the message we augment the history with the fact that it's been through one more stage in the processing Pipeline and",
    "start": "1601760",
    "end": "1608279"
  },
  {
    "text": "then we use send message to pass it along to the the next",
    "start": "1608279",
    "end": "1613440"
  },
  {
    "text": "stage now in the final step what we're going to do we're going to do some graphics processing so this is this is",
    "start": "1613760",
    "end": "1619440"
  },
  {
    "text": "in this particular step we're not doing a whole lot of awx we we've already done all the work to to grab the the",
    "start": "1619440",
    "end": "1625360"
  },
  {
    "text": "different images in in other steps I didn't show you and we simply use php's GD Library which has functions such as",
    "start": "1625360",
    "end": "1632120"
  },
  {
    "text": "image create from string and image copy to to take all the images we",
    "start": "1632120",
    "end": "1639000"
  },
  {
    "text": "fetched and to draw those on onto our final tile okay now I do have this all set up",
    "start": "1639000",
    "end": "1644760"
  },
  {
    "text": "on my desktop and with a little bit of luck I'm going to show you how it works it it's um a little bit complex to demo",
    "start": "1644760",
    "end": "1651480"
  },
  {
    "text": "because I have five separate shell windows open and that's not good when my network",
    "start": "1651480",
    "end": "1656640"
  },
  {
    "text": "connection dropped okay so I'm I'm actually going to forgo the demo because it would take me just a little bit of time to get all of these shell Windows",
    "start": "1656640",
    "end": "1663760"
  },
  {
    "text": "set up again uh what I like to do is I actually have the the um the application",
    "start": "1663760",
    "end": "1670000"
  },
  {
    "text": "up and running in five different shell windows and then I I simply put um the message into the Queue at the first",
    "start": "1670000",
    "end": "1675840"
  },
  {
    "text": "stage and I'm actually running for home today and my internet connection is a little bit under the weather and it",
    "start": "1675840",
    "end": "1682279"
  },
  {
    "text": "looks like my my my shell connections have uh have become a little bit uh flaky here so let's go ahead and turn",
    "start": "1682279",
    "end": "1688519"
  },
  {
    "text": "over to Craig who's going to start uh our Q&A session and in the background here I think I'm going to try to go",
    "start": "1688519",
    "end": "1694720"
  },
  {
    "text": "ahead and get the demo up and running again if uh if we want to try and and do that a little bit later so Craig let's",
    "start": "1694720",
    "end": "1700559"
  },
  {
    "text": "let's uh let's take off on the the Q&A session now and then on the during the Q&A Craig's going to answer ask the",
    "start": "1700559",
    "end": "1706880"
  },
  {
    "text": "questions for us and then Ryan and I will uh will cooperatively um decide uh",
    "start": "1706880",
    "end": "1712840"
  },
  {
    "text": "to answer based on who who has the uh the right answer great thanks Jeff hi everybody my",
    "start": "1712840",
    "end": "1718720"
  },
  {
    "text": "name is Craig nler and I'm a program manager for AWS and I've been collecting everybody's questions from uh the board",
    "start": "1718720",
    "end": "1725279"
  },
  {
    "text": "and Jeff if you want to move us back over to the",
    "start": "1725279",
    "end": "1730278"
  },
  {
    "text": "slides great thanks uh Ryan do you want to start us out uh what's the difference between using strings versus yes simple",
    "start": "1731600",
    "end": "1739200"
  },
  {
    "text": "XML objects well as I think Jeff talked about a little bit earlier it's really",
    "start": "1739200",
    "end": "1745960"
  },
  {
    "text": "easy to confuse strings with uh the simple XML objects we tend to get a lot of questions in the fors about this uh",
    "start": "1745960",
    "end": "1753399"
  },
  {
    "text": "and really the answer is it it looks like a string but it's not really a string so you just need to make sure",
    "start": "1753399",
    "end": "1758799"
  },
  {
    "text": "that you typ cast as a string before you try to use it and and pass that data around to other other method calls or to",
    "start": "1758799",
    "end": "1766600"
  },
  {
    "text": "do other things in your application how can I get",
    "start": "1766600",
    "end": "1771880"
  },
  {
    "text": "help how can you get help uh I spent an awful lot of my day on the PHP forms um",
    "start": "1771880",
    "end": "1779399"
  },
  {
    "text": "so feel free to go there ask your question and I I try to get to those as quickly as I possibly",
    "start": "1779399",
    "end": "1787000"
  },
  {
    "text": "can um let's see other stuff uh sorry uh other stuff um we also have a",
    "start": "1787559",
    "end": "1794919"
  },
  {
    "text": "getting started guide if you go to the uh aws.amazon.com website um go into our PHP developer",
    "start": "1794919",
    "end": "1801679"
  },
  {
    "text": "Center we have some screencasts and tutorials uh there's of course a link to the forums we have getting started",
    "start": "1801679",
    "end": "1806919"
  },
  {
    "text": "guides a few other things like that so um so that should be helpful for you",
    "start": "1806919",
    "end": "1815000"
  },
  {
    "text": "yeah and those URLs the direct URLs are going to be aws.amazon.com PHP for the developer Center and then",
    "start": "1815000",
    "end": "1822480"
  },
  {
    "text": "aws.amazon.com SDK for PHP for the uh actual s",
    "start": "1822480",
    "end": "1828799"
  },
  {
    "text": "okay uh next one up uh describe instances is only giving me instances in the US east region how do I get a list",
    "start": "1828799",
    "end": "1835760"
  },
  {
    "text": "of all instances so for that um what you would",
    "start": "1835760",
    "end": "1841360"
  },
  {
    "text": "do is describe instances is Regions specific so if you wanted to get",
    "start": "1841360",
    "end": "1847320"
  },
  {
    "text": "all instances in all regions what you would have to do is uh basically make",
    "start": "1847320",
    "end": "1852519"
  },
  {
    "text": "four separate calls one to each region and then collect the results that come back from",
    "start": "1852519",
    "end": "1858519"
  },
  {
    "text": "that um if you if you go on to the forums I believe that this question has",
    "start": "1858519",
    "end": "1864120"
  },
  {
    "text": "already been asked and I have already answered it so if you want to search for to describe instances um that should",
    "start": "1864120",
    "end": "1869480"
  },
  {
    "text": "come up you should be able to find the answer to that great thanks now I'm just going to",
    "start": "1869480",
    "end": "1875080"
  },
  {
    "text": "skip over to a couple questions uh that have come in more recently um and we'll",
    "start": "1875080",
    "end": "1880440"
  },
  {
    "text": "just show this slide uh for now um Reed uh this is question for you okay",
    "start": "1880440",
    "end": "1886240"
  },
  {
    "text": "thanks uh for switching that over um what will the slides and the",
    "start": "1886240",
    "end": "1892639"
  },
  {
    "text": "presentation be available at the end of the presentation uh and if so how long will it be available for oh absolutely",
    "start": "1892639",
    "end": "1898960"
  },
  {
    "text": "thanks Craig um yes they will be available uh if you go to our home page",
    "start": "1898960",
    "end": "1904720"
  },
  {
    "text": "and you uh type in uh office hours into our search function uh you'll end up at our office hours page and we store all",
    "start": "1904720",
    "end": "1911440"
  },
  {
    "text": "of uh the programs uh at that",
    "start": "1911440",
    "end": "1916120"
  },
  {
    "text": "site awesome uh next one",
    "start": "1916840",
    "end": "1923158"
  },
  {
    "text": "up how can I find out about upcoming events R do you want that certainly so",
    "start": "1923360",
    "end": "1929519"
  },
  {
    "text": "if you're a current member Uh current AWS customer we actually send out um newsletters uh that actually talk about",
    "start": "1929519",
    "end": "1936480"
  },
  {
    "text": "all the upcoming events such as this one uh but if you're not you can actually just go to our homepage again and uh",
    "start": "1936480",
    "end": "1942399"
  },
  {
    "text": "click on the upcoming events Tab and that will have a list of all the upcoming events",
    "start": "1942399",
    "end": "1949840"
  },
  {
    "text": "great next",
    "start": "1954120",
    "end": "1957360"
  },
  {
    "text": "one Ryan does the ads SDK for PHP support Route",
    "start": "1960600",
    "end": "1965919"
  },
  {
    "text": "53 uh not as of today um that was a",
    "start": "1965919",
    "end": "1970960"
  },
  {
    "text": "recently released service and um we since that is one of our major",
    "start": "1970960",
    "end": "1976279"
  },
  {
    "text": "infrastructure Services we do expect expect support at some point in the future uh but it's not currently in the",
    "start": "1976279",
    "end": "1981799"
  },
  {
    "text": "SDK yep is there a way to invalidate Amazon",
    "start": "1981799",
    "end": "1989639"
  },
  {
    "text": "cloudfront objects using the SDK Ryan absolutely uh we added that I",
    "start": "1989639",
    "end": "1995639"
  },
  {
    "text": "believe right at the same time as that feature launched in cloudfront um um I'm",
    "start": "1995639",
    "end": "2002840"
  },
  {
    "text": "not not prepared to sit down and write code live but uh it's it's pretty simple I believe that um let me see if uh could",
    "start": "2002840",
    "end": "2011519"
  },
  {
    "text": "you guys click over to my screen or or give my screen",
    "start": "2011519",
    "end": "2016120"
  },
  {
    "text": "control okay great all right so here I am at the AWS homepage I've come up here",
    "start": "2020440",
    "end": "2026000"
  },
  {
    "text": "to this Nifty new search section that we've just recently launched searching for PHP um this first one let's see AWS",
    "start": "2026000",
    "end": "2035000"
  },
  {
    "text": "STK for PHP documentation come over here into the API reference and we have a little search",
    "start": "2035000",
    "end": "2042120"
  },
  {
    "text": "box up here we we also have a tree if you know exactly what you're looking for but uh let's go ahead and just type",
    "start": "2042120",
    "end": "2048280"
  },
  {
    "text": "invalidate uh we have in create invalidation so hit the enter key hey",
    "start": "2048280",
    "end": "2054320"
  },
  {
    "text": "Ryan I'm not sure uh what you're showing is showing up on online um uh but I",
    "start": "2054320",
    "end": "2059720"
  },
  {
    "text": "guess the the summary is definitely supported uh we we can help out uh by",
    "start": "2059720",
    "end": "2065599"
  },
  {
    "text": "going to the reference documentation that's just available through ADF on",
    "start": "2065599",
    "end": "2070720"
  },
  {
    "text": "Amazon.com for PHP and Ryan was going to demo oh there",
    "start": "2070720",
    "end": "2076158"
  },
  {
    "text": "it is fantastic there it is you want to keep going uh sure yeah it's the the",
    "start": "2076159",
    "end": "2081398"
  },
  {
    "text": "create invalidation method on the Amazon cloudfront class um and if you scroll",
    "start": "2081399",
    "end": "2086599"
  },
  {
    "text": "down here I actually have an example of how to look at a at an S3 bucket that",
    "start": "2086599",
    "end": "2094280"
  },
  {
    "text": "we're assuming is is attached to distribution you can actually look through all of the objects or all of the",
    "start": "2094280",
    "end": "2101000"
  },
  {
    "text": "files in the S3 bucket and add those to the list of things to invalidate in your",
    "start": "2101000",
    "end": "2106240"
  },
  {
    "text": "in your cloudfront queue or your cloudfront distribution so um we have lots of examples in throughout the",
    "start": "2106240",
    "end": "2112240"
  },
  {
    "text": "documentation and here's an example of how to do that great",
    "start": "2112240",
    "end": "2119599"
  },
  {
    "text": "thanks we'll go back to questions really quick um another question we have is",
    "start": "2121200",
    "end": "2129359"
  },
  {
    "text": "uh can you use the AWS SDK for PHP to pass user scripts to configure an ec2",
    "start": "2129359",
    "end": "2134520"
  },
  {
    "text": "instance at",
    "start": "2134520",
    "end": "2137200"
  },
  {
    "text": "launch um I'm sorry I uh I think I just lost my questions I can't see the screen um what",
    "start": "2140240",
    "end": "2148240"
  },
  {
    "text": "was what was the uh the question is can you use the SDK to user scripts to configure an ec2",
    "start": "2148240",
    "end": "2156480"
  },
  {
    "text": "instance at launch yes um what we'll do is we have",
    "start": "2156480",
    "end": "2166520"
  },
  {
    "text": "a pull this back up again uh let me double check I believe it's in run instances in the",
    "start": "2166520",
    "end": "2172880"
  },
  {
    "text": "ec2 class and we have an optional parameter",
    "start": "2172880",
    "end": "2177920"
  },
  {
    "text": "here called user data where you can pass in um any data that you need directly",
    "start": "2177920",
    "end": "2183760"
  },
  {
    "text": "into the instance and uh process it once it once again on to the other",
    "start": "2183760",
    "end": "2189880"
  },
  {
    "text": "side uh the example here doesn't include that but it is listed here in the optional",
    "start": "2189880",
    "end": "2197520"
  },
  {
    "text": "parameters great thanks next question is there a way to change the",
    "start": "2197520",
    "end": "2204000"
  },
  {
    "text": "owner of an uploaded file if another user uploads it to the",
    "start": "2204000",
    "end": "2209920"
  },
  {
    "text": "bucket I do not believe that that is possible um I'm not 100% on that but I'm",
    "start": "2214640",
    "end": "2223040"
  },
  {
    "text": "about 90% on that I don't believe that it's possible to change the owner once it's been",
    "start": "2223040",
    "end": "2229160"
  },
  {
    "text": "uploaded but I know that you can give access to other people using either um I",
    "start": "2229800",
    "end": "2235880"
  },
  {
    "text": "am or bucket policies or um akles you",
    "start": "2235880",
    "end": "2241760"
  },
  {
    "text": "can give access to other specific users but as far as changing the actual owner I don't believe you can do that",
    "start": "2241760",
    "end": "2248200"
  },
  {
    "text": "correct yeah well I mean once it's uploaded S3 it's it's has the the same",
    "start": "2248200",
    "end": "2253440"
  },
  {
    "text": "owner um hey Jeff yeah I got a question for you um from from your presentation",
    "start": "2253440",
    "end": "2260079"
  },
  {
    "text": "people were wondering what are the limits uh that Amazon sqs can handle with an incoming message per second ah",
    "start": "2260079",
    "end": "2267319"
  },
  {
    "text": "okay so I don't think we've ever published an an upper bound on sqs usage",
    "start": "2267319",
    "end": "2272560"
  },
  {
    "text": "but I've definitely heard of customers that are doing I believe in the the several hundred messages per second",
    "start": "2272560",
    "end": "2279240"
  },
  {
    "text": "posting to sqs there there is a distributed implementation behind sqs so",
    "start": "2279240",
    "end": "2284880"
  },
  {
    "text": "it it it should scale to to handle uh fairly High message",
    "start": "2284880",
    "end": "2290040"
  },
  {
    "text": "rates okay thanks um and one I'm just going to pull off right from the the boards immediately there's no slide for",
    "start": "2290040",
    "end": "2296599"
  },
  {
    "text": "this um Jeff can you recommend any Beginner Books uh for starting out with  and",
    "start": "2296599",
    "end": "2301920"
  },
  {
    "text": "PHP um beginner as in more simple than than what I already",
    "start": "2301920",
    "end": "2307520"
  },
  {
    "text": "wrot about oh uh well I think what are the available books uh ah okay well let",
    "start": "2307520",
    "end": "2315119"
  },
  {
    "text": "me let me bring up the one that I would recommend",
    "start": "2315119",
    "end": "2320480"
  },
  {
    "text": "here so so this is the the book that I wrote last year and was published in uh in late in the fall so I I'm I'm not",
    "start": "2321079",
    "end": "2328920"
  },
  {
    "text": "quite sure what beginner really means in this context I I do assume that that uh the readers of my book do have have some",
    "start": "2328920",
    "end": "2335839"
  },
  {
    "text": "level of uh experience with with PHP and some skills at the the command line and uh if if if that's what",
    "start": "2335839",
    "end": "2343800"
  },
  {
    "text": "qualifies as a beginner then I I would say that you you should be able to to get some good value from my book if uh I",
    "start": "2343800",
    "end": "2349680"
  },
  {
    "text": "I really didn't have the time to to teach PHP or to teach how to use the command line in there but uh we we've",
    "start": "2349680",
    "end": "2356359"
  },
  {
    "text": "gotten some pretty good reviews on the book so far and uh people seem to to think it it does a good job of teaching",
    "start": "2356359",
    "end": "2361520"
  },
  {
    "text": "about AWS and how to get good value from it great",
    "start": "2361520",
    "end": "2369359"
  },
  {
    "text": "another question for you Jeff um could an ec2 instance send sqs to another ec2",
    "start": "2371240",
    "end": "2378319"
  },
  {
    "text": "instance in another different account does that me yeah that that certainly makes sense",
    "start": "2378319",
    "end": "2384480"
  },
  {
    "text": "and that that's very reasonable to do um what you would need to do in that that",
    "start": "2384480",
    "end": "2389640"
  },
  {
    "text": "in that cue that's running in a separate account you would need to use the the policy language to to create a policy",
    "start": "2389640",
    "end": "2396200"
  },
  {
    "text": "that allows that external access and there there's actually a couple different ways to to do that including",
    "start": "2396200",
    "end": "2401440"
  },
  {
    "text": "something new that we just recently introduced called the the policy generator and I'm actually going to try",
    "start": "2401440",
    "end": "2408200"
  },
  {
    "text": "to bring that up on the the screen here so sqs gives a lot of flexibility",
    "start": "2408200",
    "end": "2416720"
  },
  {
    "text": "to let you control who is allowed to post and using this this",
    "start": "2416720",
    "end": "2422520"
  },
  {
    "text": "policy generator you you can actually create policies for their different services",
    "start": "2422520",
    "end": "2429160"
  },
  {
    "text": "including an sqsq policy and you're able to do things like control who is allowed",
    "start": "2429160",
    "end": "2434720"
  },
  {
    "text": "to to uh send messages to the que and there's a very very um fine",
    "start": "2434720",
    "end": "2442359"
  },
  {
    "text": "grain control system on on the sqsq to to allow um for example you can control",
    "start": "2442359",
    "end": "2448200"
  },
  {
    "text": "by um who is um account identity or by IP address so you you you could you can",
    "start": "2448200",
    "end": "2455520"
  },
  {
    "text": "restrict by time and and so for as you can see in the the policy generator so",
    "start": "2455520",
    "end": "2460599"
  },
  {
    "text": "so yes you have that control so you can build complex applications that go across multiple AWS accounts now",
    "start": "2460599",
    "end": "2467800"
  },
  {
    "text": "depending on the the complexity of what you build I would recommend that you you think uh both about multiple accounts",
    "start": "2467800",
    "end": "2474760"
  },
  {
    "text": "and about using the AWS identity and access management to create multiple AWS",
    "start": "2474760",
    "end": "2480640"
  },
  {
    "text": "users inside the scope of a single account um sometimes things that in the",
    "start": "2480640",
    "end": "2485720"
  },
  {
    "text": "past required multiple accounts can actually be solved more more straightforwardly using the identity and",
    "start": "2485720",
    "end": "2491920"
  },
  {
    "text": "access management great thanks",
    "start": "2491920",
    "end": "2499000"
  },
  {
    "text": "CH another question how can you view the number of messages that are in a",
    "start": "2499000",
    "end": "2506240"
  },
  {
    "text": "queue ah okay so I thought I actually had showed that um that there is a method to to do that I I don't remember",
    "start": "2506240",
    "end": "2514160"
  },
  {
    "text": "that I think that's called um Ryan do you know the name of that meth off hand oh let me look um we'll have to read the",
    "start": "2514160",
    "end": "2523079"
  },
  {
    "text": "docks get that would be get Q",
    "start": "2523079",
    "end": "2529760"
  },
  {
    "text": "size yeah and what that does is that reads um it reads from a property that's returned from another sqs call um get Q",
    "start": "2529760",
    "end": "2539119"
  },
  {
    "text": "size yeah um and that's an approximate size um because of the distributed",
    "start": "2539119",
    "end": "2544640"
  },
  {
    "text": "nature of sqs it might not be 100% on but it should be pretty",
    "start": "2544640",
    "end": "2552200"
  },
  {
    "text": "close great thanks one more question",
    "start": "2552920",
    "end": "2561440"
  },
  {
    "text": "uh what use case would require creating Amazon ec2 instances",
    "start": "2561440",
    "end": "2567960"
  },
  {
    "text": "programmatically oh wow I can I can think of quite a few um in the simplest",
    "start": "2568880",
    "end": "2574359"
  },
  {
    "text": "case you would create them programmably to to build scalable site so you you",
    "start": "2574359",
    "end": "2580440"
  },
  {
    "text": "might have some kind of a an observer that's watching to see how how busy are the existing instances and like we could",
    "start": "2580440",
    "end": "2587599"
  },
  {
    "text": "watch their their Network traffic or their their CPU load and then we could create additional instances and then use",
    "start": "2587599",
    "end": "2593960"
  },
  {
    "text": "our elastic load balancer to spread traffic across the all those instances so that's that that that use case is",
    "start": "2593960",
    "end": "2599640"
  },
  {
    "text": "actually so common we have a service called autoscaling to to which dynamically creates instances to to deal",
    "start": "2599640",
    "end": "2604920"
  },
  {
    "text": "with an additional traffic load um you could also think of building uh",
    "start": "2604920",
    "end": "2610319"
  },
  {
    "text": "deployment applications where may maybe you have a an application and you need",
    "start": "2610319",
    "end": "2615760"
  },
  {
    "text": "to have ec2 instances for development for testing for um deploying to more",
    "start": "2615760",
    "end": "2621920"
  },
  {
    "text": "than to multiple customers and maybe you have a a config file that says this is",
    "start": "2621920",
    "end": "2627040"
  },
  {
    "text": "the set of instances I need this is the set of discs the set of IP addresses and you can",
    "start": "2627040",
    "end": "2632640"
  },
  {
    "text": "simply process that config file to say and then create the instances based on",
    "start": "2632640",
    "end": "2639040"
  },
  {
    "text": "on information found in the config file so the important thing is to now think of infrastructure as as something you",
    "start": "2639040",
    "end": "2645119"
  },
  {
    "text": "can create programmably that it's something that is dynamic and so instead of thinking of well I I have this amount",
    "start": "2645119",
    "end": "2652400"
  },
  {
    "text": "of processing power available to me and I need to then um kind of restrict my",
    "start": "2652400",
    "end": "2658640"
  },
  {
    "text": "work to whatever I can do with with that amount of processing power you think of processing power as effectively variable",
    "start": "2658640",
    "end": "2664440"
  },
  {
    "text": "you say I'm going to just dial in as much or as little as I need and if",
    "start": "2664440",
    "end": "2670119"
  },
  {
    "text": "you can automate and do that programmatically then you'll have a a very scalable very reliable",
    "start": "2670119",
    "end": "2675800"
  },
  {
    "text": "system great thanks another one for you Jeff uh where",
    "start": "2675800",
    "end": "2680960"
  },
  {
    "text": "is the auto scaling in AWS is uh is it programmatically only or how do you Auto scale uh instances with you ah several",
    "start": "2680960",
    "end": "2688440"
  },
  {
    "text": "different ways to to work with with auto scaling so in the the simplest way what",
    "start": "2688440",
    "end": "2694400"
  },
  {
    "text": "what you do is you you create a couple different things you create create an autoscaling group and you you configure",
    "start": "2694400",
    "end": "2700160"
  },
  {
    "text": "that autoscaling group so it knows which ec2 um Ami to launch you give it some",
    "start": "2700160",
    "end": "2707200"
  },
  {
    "text": "limits to say the the smallest it's allowed to be and the largest it's allowed to be and then you use our Cloud",
    "start": "2707200",
    "end": "2714079"
  },
  {
    "text": "watch monitoring facility to create something called alarms so the",
    "start": "2714079",
    "end": "2719440"
  },
  {
    "text": "alarms watch various metrics collected by cloudwatch things like CPU load",
    "start": "2719440",
    "end": "2724599"
  },
  {
    "text": "Network traffic in network traffic out you configure these alarms so that based",
    "start": "2724599",
    "end": "2729680"
  },
  {
    "text": "on the uh a threshold value that you set you can set a threshold that says if the",
    "start": "2729680",
    "end": "2735000"
  },
  {
    "text": "average CPU load across all my ec2 instances in the group exceeds let's say",
    "start": "2735000",
    "end": "2740920"
  },
  {
    "text": "75% for a period of more than two minutes I'd like the alarm to fire you then connect that alarm to the",
    "start": "2740920",
    "end": "2747559"
  },
  {
    "text": "autoscaling group with an activity that says increase the size of the autoscaling",
    "start": "2747559",
    "end": "2753160"
  },
  {
    "text": "group so you you use cloudwatch for the monitoring use the autoscaling group to",
    "start": "2753160",
    "end": "2759960"
  },
  {
    "text": "basically encapsulate this package of instances that you'd like to scale up and scale Down based on load and then",
    "start": "2759960",
    "end": "2766000"
  },
  {
    "text": "you use the cloudwatch alarms facility to actually activate the group and say",
    "start": "2766000",
    "end": "2771280"
  },
  {
    "text": "make it larger or make it smaller so in addition to an alarm that says these systems are too busy I need to make it",
    "start": "2771280",
    "end": "2777359"
  },
  {
    "text": "larger you can create another alarm that says the CPU load is so low when averaged across all the instances that",
    "start": "2777359",
    "end": "2784920"
  },
  {
    "text": "um that I can actually terminate some instances in the group and scale it down so you can then build a effectively a",
    "start": "2784920",
    "end": "2791839"
  },
  {
    "text": "reactive system that you don't have to worry about manually bringing in more systems to deal with load you you simply",
    "start": "2791839",
    "end": "2798280"
  },
  {
    "text": "configure your your policies and your philosophy into the autoscaling group and into the alarms and then everything",
    "start": "2798280",
    "end": "2806280"
  },
  {
    "text": "will happen automatically and appropriately based on how you set things",
    "start": "2806280",
    "end": "2811520"
  },
  {
    "text": "up great thanks another question about ec2 uh and Autos scaling and related to",
    "start": "2811680",
    "end": "2817920"
  },
  {
    "text": "programmatically uh launching instances uh can you assign elastic IPS to dynamically created",
    "start": "2817920",
    "end": "2825000"
  },
  {
    "text": "in instances oh certainly yes um then um question for you Reed um",
    "start": "2825000",
    "end": "2834200"
  },
  {
    "text": "any hope that future office hours will have a broader set of supported client platforms or what's what's coming next with the office hours yeah so actually",
    "start": "2834200",
    "end": "2841359"
  },
  {
    "text": "right now uh you know when when we conclude this office hours and and we send a link um",
    "start": "2841359",
    "end": "2847839"
  },
  {
    "text": "with the recorded email we'll actually be soliciting feedback for what um our customers want to hear from this office",
    "start": "2847839",
    "end": "2854559"
  },
  {
    "text": "hours program so far we've done one on Amazon easy2 and Amazon RDS we're doing another product one which is Amazon",
    "start": "2854559",
    "end": "2860640"
  },
  {
    "text": "cloudfront which will be next month um and then we're actually investigating what we might do in March so your",
    "start": "2860640",
    "end": "2866040"
  },
  {
    "text": "feedback would be uh would be helpful on that as we continue to sort of develop this program to serve the needs uh of",
    "start": "2866040",
    "end": "2872160"
  },
  {
    "text": "our customers and potential customers",
    "start": "2872160",
    "end": "2878119"
  },
  {
    "text": "great thanks",
    "start": "2878119",
    "end": "2880680"
  },
  {
    "text": "Reed another question from the board um uh uh Ryan uh does the edus SDK for",
    "start": "2885680",
    "end": "2894920"
  },
  {
    "text": "PHP support uh mechanical truck it does not currently support",
    "start": "2894920",
    "end": "2900520"
  },
  {
    "text": "Mechanical Turk um the focus of the SDK is currently on infrastructure services",
    "start": "2900520",
    "end": "2907240"
  },
  {
    "text": "um so we've we've tried to stay out of some of the other services that involve payment or like mechanical Turf where",
    "start": "2907240",
    "end": "2913839"
  },
  {
    "text": "it's um you know using human beings as processing essentially um scalable",
    "start": "2913839",
    "end": "2921160"
  },
  {
    "text": "Workforce I believe is the term that's used so right now we're focused just on infrastructure uh at the same time we",
    "start": "2921160",
    "end": "2927480"
  },
  {
    "text": "make sure that we pay attention to what our users really want what our users are asking for so if there's enough demand",
    "start": "2927480",
    "end": "2934680"
  },
  {
    "text": "for it then uh that's certainly something that we' be to take a look",
    "start": "2934680",
    "end": "2939480"
  },
  {
    "text": "at Great what about uh support for SNS yes SNS uh went out with the first",
    "start": "2941359",
    "end": "2949960"
  },
  {
    "text": "version of the SDK back at the end of September um so yeah it does include an",
    "start": "2949960",
    "end": "2955000"
  },
  {
    "text": "SNS class that you can use to work with the simple notification",
    "start": "2955000",
    "end": "2961200"
  },
  {
    "text": "service cool and then um another question that just came in um around",
    "start": "2961280",
    "end": "2966440"
  },
  {
    "text": "back WS compatibility with the phpd are our new versions going to be Backward",
    "start": "2966440",
    "end": "2971559"
  },
  {
    "text": "Compatible or what what is a what is the goal uh our goal is to remain backwards",
    "start": "2971559",
    "end": "2977640"
  },
  {
    "text": "compatible as much as humanly possible",
    "start": "2977640",
    "end": "2982960"
  },
  {
    "text": "um we sort of have a rule on our team you know upgrades should not break existing applications so that's",
    "start": "2982960",
    "end": "2989559"
  },
  {
    "text": "backwards compatibility is something that we hold very highly if there is something where we feel there's a a",
    "start": "2989559",
    "end": "2996760"
  },
  {
    "text": "greater reward um compared to risk for an upgrade what we might do is we might",
    "start": "2996760",
    "end": "3002079"
  },
  {
    "text": "deprecate um older functionality but um and then you know",
    "start": "3002079",
    "end": "3007480"
  },
  {
    "text": "either give a timeline for when we're going to phase that out so that we give people an an ample amount of time to make the upgrade or whatever else needs",
    "start": "3007480",
    "end": "3014359"
  },
  {
    "text": "to happen but uh as far as upgrades go we we make every effort to maintain",
    "start": "3014359",
    "end": "3020319"
  },
  {
    "text": "backwards compatibility as we",
    "start": "3020319",
    "end": "3023680"
  },
  {
    "text": "go great",
    "start": "3025640",
    "end": "3030359"
  },
  {
    "text": "thanks Jeff question for you um can you give me an overview of the advantages or",
    "start": "3031480",
    "end": "3037400"
  },
  {
    "text": "uh you know kind of compare uh using Amazon S3 versus EBS especially in in",
    "start": "3037400",
    "end": "3043160"
  },
  {
    "text": "the case of your demo okay so there're they're really um",
    "start": "3043160",
    "end": "3049440"
  },
  {
    "text": "I think they each have uh different different uh kind of strengths so to me",
    "start": "3049440",
    "end": "3054880"
  },
  {
    "text": "S3 was was perfect for the demo because I didn't know if I was going to be a have to store um several tens of files",
    "start": "3054880",
    "end": "3063760"
  },
  {
    "text": "or several millions of files so with with S3 I was able",
    "start": "3063760",
    "end": "3069079"
  },
  {
    "text": "to to Simply store what I what I have and then S3 is going to be able to scale up to to store as as much as could",
    "start": "3069079",
    "end": "3075799"
  },
  {
    "text": "possibly flow in there there's currently something over 200 billion objects in S3 so so adding in a couple hundred or a",
    "start": "3075799",
    "end": "3081599"
  },
  {
    "text": "couple thousand for my app certainly isn't going to make make a dent in the overall S3 store",
    "start": "3081599",
    "end": "3087079"
  },
  {
    "text": "ster gave me that flexibility to use a little bit of storage or huge amounts of storage and also one important aspect I",
    "start": "3087079",
    "end": "3093440"
  },
  {
    "text": "didn't even get a chance to to demo was the fact that when when we have objects stored in S3 each of them has an access",
    "start": "3093440",
    "end": "3099440"
  },
  {
    "text": "control list I can make those objects public and then",
    "start": "3099440",
    "end": "3104760"
  },
  {
    "text": "each those objects has a URL so I can store things in S3 and then I can",
    "start": "3104760",
    "end": "3110559"
  },
  {
    "text": "publish that URL and then I don't have to put the file onto a web server and and deal with the ACT care and feeding",
    "start": "3110559",
    "end": "3117319"
  },
  {
    "text": "of a web server so EBS is strength is if you're going to access these files from",
    "start": "3117319",
    "end": "3123000"
  },
  {
    "text": "an operating system and if if I want to use EBS I would create a disk volume I",
    "start": "3123000",
    "end": "3128880"
  },
  {
    "text": "would then attach it to the instance I would format it as a file system mount it on a particular location in the",
    "start": "3128880",
    "end": "3135400"
  },
  {
    "text": "operating system and I can read and write files just as if it was local dis to that particular",
    "start": "3135400",
    "end": "3140720"
  },
  {
    "text": "machine now as I think about the app that I that I that I reviewed uh one of",
    "start": "3140720",
    "end": "3145880"
  },
  {
    "text": "the real strengths of S3 is the fact that I'd be able to reference those same objects from multiple processes running",
    "start": "3145880",
    "end": "3153160"
  },
  {
    "text": "on separate ec2 instances uh because of the way uh file",
    "start": "3153160",
    "end": "3158240"
  },
  {
    "text": "systems work when you create an EBS volume that volume can only be attached to a single ec2 instance you can't have",
    "start": "3158240",
    "end": "3164960"
  },
  {
    "text": "two ec2 instances reading and writing from the same volume simultaneously so",
    "start": "3164960",
    "end": "3170200"
  },
  {
    "text": "EBS volumes are great when when you need storage that's specific to a particular ec2 instance you can disconnect it and",
    "start": "3170200",
    "end": "3178000"
  },
  {
    "text": "connect to another instance at any time but at at a at a given point in time only one instance is reading a writing",
    "start": "3178000",
    "end": "3184799"
  },
  {
    "text": "to an EBS volume so S3 also gives me this ability to reference that same information from from several different",
    "start": "3184799",
    "end": "3191440"
  },
  {
    "text": "uh proces and ec2 instances I think that was a long answer to a short question",
    "start": "3191440",
    "end": "3197480"
  },
  {
    "text": "but hopefully that covered it thanks",
    "start": "3197480",
    "end": "3203400"
  },
  {
    "text": "um a question for you Ryan M um uh the question is could the presenter",
    "start": "3203400",
    "end": "3209520"
  },
  {
    "text": "comment on any PHP integrated development environments that you know we've heard about or um can be used",
    "start": "3209520",
    "end": "3215520"
  },
  {
    "text": "effectively with ec2 and PHP development are there any specific idees",
    "start": "3215520",
    "end": "3222280"
  },
  {
    "text": "yeah um I think uh whereas languages like Java have pretty much settled on",
    "start": "3222280",
    "end": "3229040"
  },
  {
    "text": "Eclipse and.net has pretty much settled on Visual Studio PHP is sort of the wild",
    "start": "3229040",
    "end": "3236079"
  },
  {
    "text": "wild West um there are a lot of people that use a lot of different idees I've",
    "start": "3236079",
    "end": "3242079"
  },
  {
    "text": "heard of people using Eclipse uh Eclipse PDT I myself use",
    "start": "3242079",
    "end": "3248079"
  },
  {
    "text": "textmate um there there are a lot of them out there um there's a a new one coming up for the Mac platform called",
    "start": "3248079",
    "end": "3254359"
  },
  {
    "text": "code uh that's still in development but a lot of people are pretty enamored with it um so so we we don't currently have",
    "start": "3254359",
    "end": "3263720"
  },
  {
    "text": "uh any uh developer tools published for any specific spefic IDE but um the the",
    "start": "3263720",
    "end": "3269599"
  },
  {
    "text": "surveys that we send out to our customers asking for feedback um we try to collect the sort of information to",
    "start": "3269599",
    "end": "3275160"
  },
  {
    "text": "figure out what people are using so that we know where to spend our time in developing developing tools for um for",
    "start": "3275160",
    "end": "3281680"
  },
  {
    "text": "developers and for IDE and whatnot and if I can add to that I mean",
    "start": "3281680",
    "end": "3287000"
  },
  {
    "text": "you could use any ID with awsd for PHP so um it's not tailored to any specific",
    "start": "3287000",
    "end": "3292720"
  },
  {
    "text": "environment um just to add to that mhm um let's see",
    "start": "3292720",
    "end": "3301559"
  },
  {
    "text": "here Jeff can you mount one EBS volume to multiple ec2",
    "start": "3309040",
    "end": "3316078"
  },
  {
    "text": "instances um no you that that is not allowed because the the reason you can't",
    "start": "3316240",
    "end": "3321400"
  },
  {
    "text": "do that is is a little bit deeper than AWS the the real issue is that when you attach a a disk to a computer and then",
    "start": "3321400",
    "end": "3329799"
  },
  {
    "text": "access it as a as a file system that the file system implementation in the operating system uh there's this",
    "start": "3329799",
    "end": "3337240"
  },
  {
    "text": "essentially this implicit understanding that it's the only one reading and writing to and from that that dis so if",
    "start": "3337240",
    "end": "3344319"
  },
  {
    "text": "you were to have the essentially The Logical ability to create one volume and attach it to ECU instances that still",
    "start": "3344319",
    "end": "3351960"
  },
  {
    "text": "wouldn't give you the desired result because you you would need a file system that was aware of the fact that another",
    "start": "3351960",
    "end": "3358359"
  },
  {
    "text": "instance was was also reading and writing the data and so that's something called a a cluster file system which",
    "start": "3358359",
    "end": "3364520"
  },
  {
    "text": "there currently are not a whole lot of cluster file systems out in in in existence so we we currently allow only",
    "start": "3364520",
    "end": "3371160"
  },
  {
    "text": "one one reader one writer for EBS volumes now we we have had some",
    "start": "3371160",
    "end": "3376319"
  },
  {
    "text": "discussions with with vendors of cluster file systems about extending those to AWS and um there's there's there's some",
    "start": "3376319",
    "end": "3383480"
  },
  {
    "text": "level of work we need to do nebs in some levels",
    "start": "3383480",
    "end": "3388640"
  },
  {
    "text": "that would would be done in the in the the cluster file system to be able to to do that I think there's one called um",
    "start": "3388640",
    "end": "3394640"
  },
  {
    "text": "gluster FS that is able to build a kind of a a a shared dis volume across",
    "start": "3394640",
    "end": "3400359"
  },
  {
    "text": "multiple um instances and across multiple EBS volumes as",
    "start": "3400359",
    "end": "3406400"
  },
  {
    "text": "well great um what about uh how you might go about mounting an EBS uh volume",
    "start": "3407160",
    "end": "3414480"
  },
  {
    "text": "automatically um to the instance after um it launches how would you do that so that",
    "start": "3414480",
    "end": "3421400"
  },
  {
    "text": "would be relatively easy that that's actually more Unix scripting than AWS um",
    "start": "3421400",
    "end": "3426760"
  },
  {
    "text": "work if I was going to to build that I would simply as kind of the next step in",
    "start": "3426760",
    "end": "3431920"
  },
  {
    "text": "the the code sample what what I would do is I would simply have a little Loop that that Waits until the volume has been created and attached once that's",
    "start": "3431920",
    "end": "3439039"
  },
  {
    "text": "done I would then just use a effectively a shell command to to mount the volume to the um to to the",
    "start": "3439039",
    "end": "3446760"
  },
  {
    "text": "instance and then create the file system on top of",
    "start": "3446760",
    "end": "3451280"
  },
  {
    "text": "it Craig we have time Craig we have time for just one more question",
    "start": "3454799",
    "end": "3460880"
  },
  {
    "text": "access okay yeah uh let's just let's do this one um Jeff how can you access um",
    "start": "3460880",
    "end": "3467599"
  },
  {
    "text": "logs for um uh piles or objects downloaded from S3 and",
    "start": "3467599",
    "end": "3474559"
  },
  {
    "text": "cloudfront Okay so so S3 and cloudfront both have logging facilities built in",
    "start": "3474559",
    "end": "3480760"
  },
  {
    "text": "and you do need to explicitly enable those for a particular S3 bucket or for a cloudfront distribution once they're",
    "start": "3480760",
    "end": "3487599"
  },
  {
    "text": "enabled what will happen is that when you enable them you actually designate a separate S3 bucket as the recipient of",
    "start": "3487599",
    "end": "3494200"
  },
  {
    "text": "the log files and then the the service will will generate log files into that bucket in in a standard Apache format",
    "start": "3494200",
    "end": "3501480"
  },
  {
    "text": "that you can then download those log files and analyze them so uh given that",
    "start": "3501480",
    "end": "3507200"
  },
  {
    "text": "log files can take up an appreciable amount of storage we we really make it a separate option you can turn on because",
    "start": "3507200",
    "end": "3513039"
  },
  {
    "text": "that you as you're storing those log files you're just incurring the regular S3 storage charges for them some customers need log files and so they",
    "start": "3513039",
    "end": "3519920"
  },
  {
    "text": "they choose to opt in and some others don't really need the log files so that they don't enable the logging feature",
    "start": "3519920",
    "end": "3526200"
  },
  {
    "text": "for their buckets or the distributions great well thanks Jeff to add on to that",
    "start": "3526200",
    "end": "3533200"
  },
  {
    "text": "um I was just going to say really briefly in the S3 class there's a method called enable logging and if you look up",
    "start": "3533200",
    "end": "3539680"
  },
  {
    "text": "the documentation for that it should be able to walk you right through it great well well thank you so much",
    "start": "3539680",
    "end": "3546280"
  },
  {
    "text": "Jeff and Ryan this really uh concludes our presentation today I want to thank everyone out there for attending today's",
    "start": "3546280",
    "end": "3552039"
  },
  {
    "text": "webinar uh and uh PHP office hour session um we're going to send a follow-up email like I said before with",
    "start": "3552039",
    "end": "3558720"
  },
  {
    "text": "a link to this recorded presentation and again just on half of behalf of Amazon",
    "start": "3558720",
    "end": "3563920"
  },
  {
    "text": "web services uh and our present thank you so much for joining us",
    "start": "3563920",
    "end": "3569960"
  },
  {
    "text": "today thank you all for coming",
    "start": "3571000",
    "end": "3577799"
  }
]