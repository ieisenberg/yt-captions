[
  {
    "start": "0",
    "end": "9000"
  },
  {
    "text": "- [Lecturer] Today, I'll be\ntalking about least privilege",
    "start": "0",
    "end": "1610"
  },
  {
    "text": "and separation of duties\nfor AWS ACM private CA",
    "start": "1610",
    "end": "5910"
  },
  {
    "text": "which is a service that\nallows you to create",
    "start": "5910",
    "end": "7630"
  },
  {
    "text": "and manage certificate authorities.",
    "start": "7630",
    "end": "9160"
  },
  {
    "text": "Let's talk about why least privilege",
    "start": "9160",
    "end": "10920"
  },
  {
    "text": "and separation of duties is important.",
    "start": "10920",
    "end": "13080"
  },
  {
    "text": "Least privilege is the concept\nof only giving users access",
    "start": "13080",
    "end": "16090"
  },
  {
    "text": "to what they need to do their job.",
    "start": "16090",
    "end": "18350"
  },
  {
    "text": "Separation of duties is the concept",
    "start": "18350",
    "end": "19890"
  },
  {
    "text": "that users should not have\nall the privileges necessary",
    "start": "19890",
    "end": "22609"
  },
  {
    "text": "to complete a critical\nbusiness activity on their own.",
    "start": "22610",
    "end": "25280"
  },
  {
    "text": "The concept of implementing quorum",
    "start": "25280",
    "end": "26730"
  },
  {
    "text": "means that no single user can complete",
    "start": "26730",
    "end": "28550"
  },
  {
    "text": "the entire certificate\nauthority set up on their own",
    "start": "28550",
    "end": "31210"
  },
  {
    "text": "and that three distinct\npersonas, a quorum of three,",
    "start": "31210",
    "end": "34570"
  },
  {
    "text": "are required to create an operational CA.",
    "start": "34570",
    "end": "37180"
  },
  {
    "start": "37000",
    "end": "91000"
  },
  {
    "text": "Today we'll be using three personas",
    "start": "37180",
    "end": "38900"
  },
  {
    "text": "to illustrate these concepts.",
    "start": "38900",
    "end": "40960"
  },
  {
    "text": "The first persona is the\ncertificate authority administrator",
    "start": "40960",
    "end": "44190"
  },
  {
    "text": "who is responsible for\ncreating, configuring",
    "start": "44190",
    "end": "46010"
  },
  {
    "text": "and managing certificate authorities.",
    "start": "46010",
    "end": "48640"
  },
  {
    "text": "They require many\npermissions to set attributes",
    "start": "48640",
    "end": "51800"
  },
  {
    "text": "about the certificate authority,",
    "start": "51800",
    "end": "53630"
  },
  {
    "text": "as well as physically creating\nthe certificate authority",
    "start": "53630",
    "end": "56060"
  },
  {
    "text": "using AWS API calls.",
    "start": "56060",
    "end": "57733"
  },
  {
    "text": "This user will also be\nmanaging the permissions",
    "start": "58690",
    "end": "61000"
  },
  {
    "text": "and policies of that\ncertificate authority.",
    "start": "61000",
    "end": "63150"
  },
  {
    "text": "This user also requires\npermissions to Amazon S3,",
    "start": "64060",
    "end": "67143"
  },
  {
    "text": "AWS Resource Access Manager",
    "start": "68150",
    "end": "70110"
  },
  {
    "text": "and the permissions necessary to list",
    "start": "70110",
    "end": "71930"
  },
  {
    "text": "and describe certificates\nand certificate authorities.",
    "start": "71930",
    "end": "74290"
  },
  {
    "text": "The second persona is the\ncertificate signer and issuer.",
    "start": "74290",
    "end": "77300"
  },
  {
    "text": "This user is managing\ncertificate signing requests",
    "start": "77300",
    "end": "80490"
  },
  {
    "text": "as well as certificate issuance.",
    "start": "80490",
    "end": "82299"
  },
  {
    "text": "The certificate importer is the last role",
    "start": "82300",
    "end": "84820"
  },
  {
    "text": "and is responsible for importing\nthe CA signed certificate",
    "start": "84820",
    "end": "88150"
  },
  {
    "text": "into the CA, which will\nmake it fully operational.",
    "start": "88150",
    "end": "90753"
  },
  {
    "start": "91000",
    "end": "104000"
  },
  {
    "text": "Let's take a closer look",
    "start": "91970",
    "end": "93030"
  },
  {
    "text": "at the permissions required for each role.",
    "start": "93030",
    "end": "95473"
  },
  {
    "text": "Here's an example",
    "start": "96880",
    "end": "97713"
  },
  {
    "text": "of what the IM policy document\nlooks like that is used",
    "start": "97713",
    "end": "101380"
  },
  {
    "text": "with the certificate\nauthority administrator role.",
    "start": "101380",
    "end": "103880"
  },
  {
    "text": "Let's look at the certificate\nsigner and issuer IM policy.",
    "start": "105770",
    "end": "109493"
  },
  {
    "text": "Lastly, let's look at the\ncertificate importer IM policy.",
    "start": "113720",
    "end": "117233"
  },
  {
    "start": "119000",
    "end": "129000"
  },
  {
    "text": "The first step to create\na certificate authority",
    "start": "120400",
    "end": "122640"
  },
  {
    "text": "is using the create\ncertificate authority command,",
    "start": "122640",
    "end": "126700"
  },
  {
    "text": "which is run by the certificate\nauthority administrator.",
    "start": "126700",
    "end": "130060"
  },
  {
    "text": "Next, the certificate\nsigner and issuer role",
    "start": "130060",
    "end": "132430"
  },
  {
    "text": "will use the get certificate\nauthority CSR command",
    "start": "132430",
    "end": "135290"
  },
  {
    "text": "to retrieve a CSR from\nthe certificate authority",
    "start": "135290",
    "end": "139189"
  },
  {
    "text": "which is delivered as a PEM file.",
    "start": "139190",
    "end": "141163"
  },
  {
    "text": "Next, the issue certificate\ncommand is used,",
    "start": "142200",
    "end": "145510"
  },
  {
    "text": "which requires the previously\nretrieved CSR file.",
    "start": "145510",
    "end": "149993"
  },
  {
    "text": "This command sends the CSR file",
    "start": "151920",
    "end": "154760"
  },
  {
    "text": "to the certificate authority for signing,",
    "start": "154760",
    "end": "157200"
  },
  {
    "text": "which is then returned\nas a certificate ARN.",
    "start": "157200",
    "end": "160989"
  },
  {
    "text": "Below, there's an example\nof what an ARN looks like.",
    "start": "160990",
    "end": "164753"
  },
  {
    "start": "165000",
    "end": "177000"
  },
  {
    "text": "The certificate ARN is used\nto retrieve the certificate",
    "start": "165710",
    "end": "169800"
  },
  {
    "text": "from the certificate authority,",
    "start": "169800",
    "end": "171090"
  },
  {
    "text": "by the signer and issuer role.",
    "start": "171090",
    "end": "172672"
  },
  {
    "text": "This certificate comes\ndown in a PEM format.",
    "start": "174600",
    "end": "176903"
  },
  {
    "start": "177000",
    "end": "192000"
  },
  {
    "text": "Last, the import certificate\nauthority certificate command",
    "start": "178250",
    "end": "181330"
  },
  {
    "text": "is run by the certificate importer role.",
    "start": "181330",
    "end": "183573"
  },
  {
    "text": "This imports the CA signed\ncertificate into the CA",
    "start": "184820",
    "end": "188560"
  },
  {
    "text": "using the import certificate\nauthority certificate API call.",
    "start": "188560",
    "end": "192700"
  },
  {
    "start": "192000",
    "end": "219000"
  },
  {
    "text": "To further enhance least\nprivilege in this scenario,",
    "start": "192700",
    "end": "195629"
  },
  {
    "text": "I would recommend using\nservice control policies",
    "start": "195630",
    "end": "198050"
  },
  {
    "text": "to explicitly deny actions\nat the AWS account level.",
    "start": "198050",
    "end": "201293"
  },
  {
    "text": "Furthermore, implementing\nconditional logic",
    "start": "202210",
    "end": "204390"
  },
  {
    "text": "to restrict access to specific resources",
    "start": "204390",
    "end": "206870"
  },
  {
    "text": "is a great next step,",
    "start": "206870",
    "end": "208459"
  },
  {
    "text": "so that only certain commands can be run",
    "start": "208460",
    "end": "210410"
  },
  {
    "text": "on certain certificate authorities.",
    "start": "210410",
    "end": "212920"
  },
  {
    "text": "Lastly, it's important to\nconfigure event-based controls",
    "start": "212920",
    "end": "216160"
  },
  {
    "text": "to detect and monitor API activity.",
    "start": "216160",
    "end": "218843"
  },
  {
    "start": "219000",
    "end": "248000"
  },
  {
    "text": "Thanks for joining me as\nwe explored least privilege",
    "start": "220590",
    "end": "223239"
  },
  {
    "text": "and separation of duties for AWS ACM PCA.",
    "start": "223240",
    "end": "226503"
  },
  {
    "text": "Next, I'll be doing a\ntechnical demo of this solution",
    "start": "227910",
    "end": "231450"
  },
  {
    "text": "and I'd recommend you\ncheck out other ACM videos",
    "start": "231450",
    "end": "234660"
  },
  {
    "text": "done by my colleagues on\ncreating a certificate authority,",
    "start": "234660",
    "end": "237950"
  },
  {
    "text": "CA hierarchies, disaster\nrecovery, sharing private CAs,",
    "start": "237950",
    "end": "242420"
  },
  {
    "text": "and using certificate templates.",
    "start": "242420",
    "end": "244580"
  },
  {
    "text": "Thanks so much for your time.",
    "start": "244580",
    "end": "246030"
  }
]