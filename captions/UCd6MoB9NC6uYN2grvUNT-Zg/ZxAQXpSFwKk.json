[
  {
    "text": "welcome to this demo of the generative a",
    "start": "1640",
    "end": "4200"
  },
  {
    "text": "application development experience with",
    "start": "4200",
    "end": "5720"
  },
  {
    "text": "Amazon bog ID in the S maker unified",
    "start": "5720",
    "end": "8760"
  },
  {
    "text": "Studio we can start by accessing with",
    "start": "8760",
    "end": "11200"
  },
  {
    "text": "our single sign on credentials in this",
    "start": "11200",
    "end": "14000"
  },
  {
    "text": "case we are reading this directly from",
    "start": "14000",
    "end": "15599"
  },
  {
    "text": "your identity",
    "start": "15599",
    "end": "18000"
  },
  {
    "text": "provider you can explore the different",
    "start": "18000",
    "end": "20600"
  },
  {
    "text": "models that we have available from",
    "start": "20600",
    "end": "22800"
  },
  {
    "text": "Amazon Bedrock by choosing the",
    "start": "22800",
    "end": "24279"
  },
  {
    "text": "generative AI",
    "start": "24279",
    "end": "25720"
  },
  {
    "text": "playground in this case we can choose in",
    "start": "25720",
    "end": "28920"
  },
  {
    "text": "example Tex gener",
    "start": "28920",
    "end": "30640"
  },
  {
    "text": "models where we can set input prompts in",
    "start": "30640",
    "end": "34480"
  },
  {
    "text": "text or images",
    "start": "34480",
    "end": "37800"
  },
  {
    "text": "combination for the outputs we can check",
    "start": "38160",
    "end": "40960"
  },
  {
    "text": "the different parameters such as the",
    "start": "40960",
    "end": "42920"
  },
  {
    "text": "latency that we're getting in the",
    "start": "42920",
    "end": "44840"
  },
  {
    "text": "responses input tokens and output tokens",
    "start": "44840",
    "end": "47920"
  },
  {
    "text": "and we can compare different models",
    "start": "47920",
    "end": "51000"
  },
  {
    "text": "alongside we can add additional chat",
    "start": "51000",
    "end": "53600"
  },
  {
    "text": "windows so we can compare more than two",
    "start": "53600",
    "end": "55840"
  },
  {
    "text": "models and we can also set up inference",
    "start": "55840",
    "end": "59000"
  },
  {
    "text": "parameters such as the temperature top P",
    "start": "59000",
    "end": "61440"
  },
  {
    "text": "or top",
    "start": "61440",
    "end": "63878"
  },
  {
    "text": "K we can also access the image and video",
    "start": "66320",
    "end": "70280"
  },
  {
    "text": "playground in this case the image",
    "start": "70280",
    "end": "72680"
  },
  {
    "text": "generation models or the video",
    "start": "72680",
    "end": "74400"
  },
  {
    "text": "generation models can be tested with",
    "start": "74400",
    "end": "76360"
  },
  {
    "text": "different prompts we can also set up",
    "start": "76360",
    "end": "79200"
  },
  {
    "text": "parameters and in a few seconds we can",
    "start": "79200",
    "end": "82640"
  },
  {
    "text": "get the media for our",
    "start": "82640",
    "end": "86560"
  },
  {
    "text": "prompts if we go to the build options we",
    "start": "86759",
    "end": "89360"
  },
  {
    "text": "can start by creating chat applications",
    "start": "89360",
    "end": "92560"
  },
  {
    "text": "note that we are working as part of a",
    "start": "92560",
    "end": "94280"
  },
  {
    "text": "project where all the applications that",
    "start": "94280",
    "end": "96200"
  },
  {
    "text": "we are creating are stored there we can",
    "start": "96200",
    "end": "99079"
  },
  {
    "text": "select a name for our application a",
    "start": "99079",
    "end": "101399"
  },
  {
    "text": "model that we want to use system prom",
    "start": "101399",
    "end": "104399"
  },
  {
    "text": "for giving instructions to our",
    "start": "104399",
    "end": "106240"
  },
  {
    "text": "[Music]",
    "start": "106240",
    "end": "107560"
  },
  {
    "text": "system we can also set up inference",
    "start": "107560",
    "end": "111640"
  },
  {
    "text": "parameters and we can connect with",
    "start": "111640",
    "end": "113759"
  },
  {
    "text": "Amazon bedro knowledge basis in this",
    "start": "113759",
    "end": "115840"
  },
  {
    "text": "case we are using a web crawler but we",
    "start": "115840",
    "end": "117719"
  },
  {
    "text": "could also specify local files so we can",
    "start": "117719",
    "end": "121039"
  },
  {
    "text": "connect those to an emedic model and a",
    "start": "121039",
    "end": "123640"
  },
  {
    "text": "vector store that is created",
    "start": "123640",
    "end": "124960"
  },
  {
    "text": "automatically for",
    "start": "124960",
    "end": "126560"
  },
  {
    "text": "us we provide a name and a description",
    "start": "126560",
    "end": "129440"
  },
  {
    "text": "to our knowledge",
    "start": "129440",
    "end": "131680"
  },
  {
    "text": "base and after a few minutes we are",
    "start": "131680",
    "end": "134480"
  },
  {
    "text": "going to get our knowledge base ready",
    "start": "134480",
    "end": "137200"
  },
  {
    "text": "note that we can also work with more",
    "start": "137200",
    "end": "138800"
  },
  {
    "text": "advanced settings that are supported in",
    "start": "138800",
    "end": "140599"
  },
  {
    "text": "knowledge",
    "start": "140599",
    "end": "142160"
  },
  {
    "text": "bases we can do the same with Amazon",
    "start": "142160",
    "end": "144519"
  },
  {
    "text": "bedro guards we can set up a name a",
    "start": "144519",
    "end": "147840"
  },
  {
    "text": "description we can Define different",
    "start": "147840",
    "end": "150080"
  },
  {
    "text": "predefine filters and the strength that",
    "start": "150080",
    "end": "151959"
  },
  {
    "text": "we want for each one of them we can also",
    "start": "151959",
    "end": "154680"
  },
  {
    "text": "go to Advanced filters where we can",
    "start": "154680",
    "end": "156519"
  },
  {
    "text": "actually set up theight Topics by using",
    "start": "156519",
    "end": "158959"
  },
  {
    "text": "natural language",
    "start": "158959",
    "end": "160270"
  },
  {
    "text": "[Music]",
    "start": "160270",
    "end": "161760"
  },
  {
    "text": "definitions and we can also set up",
    "start": "161760",
    "end": "164480"
  },
  {
    "text": "sample phrases for those denight",
    "start": "164480",
    "end": "167840"
  },
  {
    "text": "topics finally we can set up what is the",
    "start": "167840",
    "end": "170599"
  },
  {
    "text": "message that we want the model to",
    "start": "170599",
    "end": "172239"
  },
  {
    "text": "provide whenever it detects a violation",
    "start": "172239",
    "end": "174159"
  },
  {
    "text": "of the filters that we",
    "start": "174159",
    "end": "177200"
  },
  {
    "text": "have once we select our G we could also",
    "start": "178280",
    "end": "181239"
  },
  {
    "text": "work with functions from Amazon Bedrock",
    "start": "181239",
    "end": "184159"
  },
  {
    "text": "agents and we can modify our UI in",
    "start": "184159",
    "end": "187799"
  },
  {
    "text": "example by changing the sound prompts",
    "start": "187799",
    "end": "189720"
  },
  {
    "text": "that are provided to the users the",
    "start": "189720",
    "end": "191239"
  },
  {
    "text": "welcome message and so on once we save",
    "start": "191239",
    "end": "194959"
  },
  {
    "text": "our application we have the option of",
    "start": "194959",
    "end": "197760"
  },
  {
    "text": "testing it directly from our building",
    "start": "197760",
    "end": "201080"
  },
  {
    "text": "console we can note that different",
    "start": "201080",
    "end": "203440"
  },
  {
    "text": "outputs are coming from the knowledge",
    "start": "203440",
    "end": "204959"
  },
  {
    "text": "base that we have configured before",
    "start": "204959",
    "end": "209440"
  },
  {
    "text": "note that we can check for outputs that",
    "start": "210159",
    "end": "212560"
  },
  {
    "text": "are blocked by the",
    "start": "212560",
    "end": "215280"
  },
  {
    "text": "Gils we can also export our applications",
    "start": "217400",
    "end": "221400"
  },
  {
    "text": "which generates cloudformation templates",
    "start": "221400",
    "end": "224599"
  },
  {
    "text": "that we can use for deploying the",
    "start": "224599",
    "end": "226239"
  },
  {
    "text": "resources in different",
    "start": "226239",
    "end": "229280"
  },
  {
    "text": "accounts we can also share our",
    "start": "229560",
    "end": "232000"
  },
  {
    "text": "applications either with the users or",
    "start": "232000",
    "end": "234840"
  },
  {
    "text": "groups that we have defined in our",
    "start": "234840",
    "end": "237360"
  },
  {
    "text": "directory or directly by granting access",
    "start": "237360",
    "end": "240200"
  },
  {
    "text": "to all the users in the domain provided",
    "start": "240200",
    "end": "242159"
  },
  {
    "text": "with a",
    "start": "242159",
    "end": "244480"
  },
  {
    "text": "link after a couple of minutes you can",
    "start": "245000",
    "end": "247799"
  },
  {
    "text": "have this application link ready we can",
    "start": "247799",
    "end": "250599"
  },
  {
    "text": "copy the link and any user with access",
    "start": "250599",
    "end": "253040"
  },
  {
    "text": "to this domain can directly open that so",
    "start": "253040",
    "end": "256239"
  },
  {
    "text": "that it has readon access to our",
    "start": "256239",
    "end": "258680"
  },
  {
    "text": "application you can think of business",
    "start": "258680",
    "end": "260959"
  },
  {
    "text": "power users who could be using this link",
    "start": "260959",
    "end": "263880"
  },
  {
    "text": "for accessing to predefined applications",
    "start": "263880",
    "end": "266600"
  },
  {
    "text": "that were created by our application",
    "start": "266600",
    "end": "268479"
  },
  {
    "text": "development",
    "start": "268479",
    "end": "271000"
  },
  {
    "text": "we can also create flow applications in",
    "start": "271000",
    "end": "273880"
  },
  {
    "text": "this case we can set up different nodes",
    "start": "273880",
    "end": "277360"
  },
  {
    "text": "using multi- agentic workflows where we",
    "start": "277360",
    "end": "280160"
  },
  {
    "text": "can actually set up configurations for",
    "start": "280160",
    "end": "282039"
  },
  {
    "text": "each one of the nodes and rely on",
    "start": "282039",
    "end": "284639"
  },
  {
    "text": "typical features that we have in Amazon",
    "start": "284639",
    "end": "286639"
  },
  {
    "text": "bed such as knowledge bases Proms",
    "start": "286639",
    "end": "289560"
  },
  {
    "text": "guardrails and",
    "start": "289560",
    "end": "291360"
  },
  {
    "text": "more we can set up conditions so that we",
    "start": "291360",
    "end": "294120"
  },
  {
    "text": "can have more deterministic flows that",
    "start": "294120",
    "end": "296080"
  },
  {
    "text": "change depending on the user's input",
    "start": "296080",
    "end": "299759"
  },
  {
    "text": "note that Amazon Bedrock flows creates a",
    "start": "299759",
    "end": "302360"
  },
  {
    "text": "fully serverless endpoint for our",
    "start": "302360",
    "end": "304120"
  },
  {
    "text": "application so we can right away test it",
    "start": "304120",
    "end": "307080"
  },
  {
    "text": "with different",
    "start": "307080",
    "end": "309680"
  },
  {
    "text": "inputs in the same way that we work with",
    "start": "310639",
    "end": "313000"
  },
  {
    "text": "flows we can also work with prompts we",
    "start": "313000",
    "end": "316039"
  },
  {
    "text": "can set up prompts Define models and",
    "start": "316039",
    "end": "319039"
  },
  {
    "text": "inference parameters work with our",
    "start": "319039",
    "end": "321919"
  },
  {
    "text": "prompt template where we can leave",
    "start": "321919",
    "end": "324120"
  },
  {
    "text": "placeholders for",
    "start": "324120",
    "end": "325639"
  },
  {
    "text": "variables once we save it we can test it",
    "start": "325639",
    "end": "328360"
  },
  {
    "text": "from the console",
    "start": "328360",
    "end": "331479"
  },
  {
    "text": "and if we are happy with the result we",
    "start": "331479",
    "end": "333120"
  },
  {
    "text": "can store different variant or versions",
    "start": "333120",
    "end": "335240"
  },
  {
    "text": "of our",
    "start": "335240",
    "end": "336960"
  },
  {
    "text": "prompts another feature that is",
    "start": "336960",
    "end": "339319"
  },
  {
    "text": "important is the model",
    "start": "339319",
    "end": "341360"
  },
  {
    "text": "evaluation in Amazon bog IDE we can",
    "start": "341360",
    "end": "344039"
  },
  {
    "text": "evaluate different models for specific",
    "start": "344039",
    "end": "346000"
  },
  {
    "text": "tasks we can set out what are the",
    "start": "346000",
    "end": "348639"
  },
  {
    "text": "metrics that we want to evaluate and",
    "start": "348639",
    "end": "350360"
  },
  {
    "text": "what are the data sets either building",
    "start": "350360",
    "end": "352440"
  },
  {
    "text": "data sets or bringing our own data once",
    "start": "352440",
    "end": "355840"
  },
  {
    "text": "we have the result ready we can read the",
    "start": "355840",
    "end": "358120"
  },
  {
    "text": "report on the metrics that we're",
    "start": "358120",
    "end": "359319"
  },
  {
    "text": "generating at for that evaluation",
    "start": "359319",
    "end": "363160"
  },
  {
    "text": "job thank you for watching",
    "start": "367440",
    "end": "372000"
  }
]