[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "hello good afternoon everyone thank you",
    "start": "30",
    "end": "3240"
  },
  {
    "text": "for staying back I know these last two",
    "start": "3240",
    "end": "5279"
  },
  {
    "text": "session before you go home my name is",
    "start": "5279",
    "end": "7620"
  },
  {
    "text": "Steve Sophie and I'm covering the public",
    "start": "7620",
    "end": "9120"
  },
  {
    "text": "sector in Singapore and ASEAN many many",
    "start": "9120",
    "end": "12780"
  },
  {
    "text": "single governments geo seas or what have",
    "start": "12780",
    "end": "15210"
  },
  {
    "text": "you so for today's session is an",
    "start": "15210",
    "end": "18810"
  },
  {
    "start": "17000",
    "end": "17000"
  },
  {
    "text": "architectural session we review the",
    "start": "18810",
    "end": "21180"
  },
  {
    "text": "services in terms of how do you do micro",
    "start": "21180",
    "end": "24060"
  },
  {
    "text": "services in on AWS and how does it",
    "start": "24060",
    "end": "28080"
  },
  {
    "text": "differ from the traditional monolithic",
    "start": "28080",
    "end": "30269"
  },
  {
    "text": "architecture and service-oriented",
    "start": "30269",
    "end": "32460"
  },
  {
    "text": "architecture the next thing we'll do",
    "start": "32460",
    "end": "34350"
  },
  {
    "text": "will I will cover is basically some of",
    "start": "34350",
    "end": "36570"
  },
  {
    "text": "the challenges that you you you will see",
    "start": "36570",
    "end": "39180"
  },
  {
    "text": "in terms of when you do a Microsoft",
    "start": "39180",
    "end": "41489"
  },
  {
    "text": "right service architecture at scale and",
    "start": "41489",
    "end": "44250"
  },
  {
    "text": "lastly we will see in terms of how we",
    "start": "44250",
    "end": "46050"
  },
  {
    "text": "can do that on AWS first and foremost is",
    "start": "46050",
    "end": "49649"
  },
  {
    "start": "49000",
    "end": "49000"
  },
  {
    "text": "that what are micro services I'm not",
    "start": "49649",
    "end": "52410"
  },
  {
    "text": "good not going to read through this I",
    "start": "52410",
    "end": "54510"
  },
  {
    "text": "will pick three key terms one it's small",
    "start": "54510",
    "end": "57809"
  },
  {
    "text": "its independent and its decouple so",
    "start": "57809",
    "end": "61949"
  },
  {
    "text": "these are the three key characteristics",
    "start": "61949",
    "end": "64170"
  },
  {
    "text": "that you will have or you will find in a",
    "start": "64170",
    "end": "66600"
  },
  {
    "text": "Microsoft services architecture first",
    "start": "66600",
    "end": "73340"
  },
  {
    "start": "71000",
    "end": "71000"
  },
  {
    "text": "this is a very traditional architecture",
    "start": "73490",
    "end": "77310"
  },
  {
    "text": "that I hope that you have gone this path",
    "start": "77310",
    "end": "79290"
  },
  {
    "text": "value which is the monolithic",
    "start": "79290",
    "end": "81000"
  },
  {
    "text": "architecture itself a holistic",
    "start": "81000",
    "end": "84659"
  },
  {
    "text": "application base is developed as a",
    "start": "84659",
    "end": "86040"
  },
  {
    "text": "single unit so on a shared",
    "start": "86040",
    "end": "87780"
  },
  {
    "text": "infrastructure so all the components or",
    "start": "87780",
    "end": "90240"
  },
  {
    "text": "functions will build into a single",
    "start": "90240",
    "end": "92610"
  },
  {
    "text": "component it is hard to deploy and a lot",
    "start": "92610",
    "end": "96689"
  },
  {
    "text": "of times when of the problem fails",
    "start": "96689",
    "end": "98880"
  },
  {
    "text": "pretty much you have to roll back the",
    "start": "98880",
    "end": "100110"
  },
  {
    "text": "whole thing right",
    "start": "100110",
    "end": "101790"
  },
  {
    "text": "and so this make deployment very risky",
    "start": "101790",
    "end": "105149"
  },
  {
    "text": "and you have to go to a lot of",
    "start": "105149",
    "end": "108329"
  },
  {
    "text": "centralized approval and coordination",
    "start": "108329",
    "end": "112130"
  },
  {
    "text": "many organizations today have seen the",
    "start": "112130",
    "end": "115380"
  },
  {
    "text": "negative impact of this architecture",
    "start": "115380",
    "end": "116880"
  },
  {
    "text": "itself in terms of the impact on how",
    "start": "116880",
    "end": "120479"
  },
  {
    "text": "fast you can how agile you can build an",
    "start": "120479",
    "end": "123060"
  },
  {
    "text": "application so let's get past this next",
    "start": "123060",
    "end": "126899"
  },
  {
    "start": "126000",
    "end": "126000"
  },
  {
    "text": "is one of the most popular service or",
    "start": "126899",
    "end": "128970"
  },
  {
    "text": "the architecture approach so this is",
    "start": "128970",
    "end": "131640"
  },
  {
    "text": "where the components are decoupled",
    "start": "131640",
    "end": "133890"
  },
  {
    "text": "this diagram itself you see that the",
    "start": "133890",
    "end": "137190"
  },
  {
    "text": "architecture is basically split it into",
    "start": "137190",
    "end": "138990"
  },
  {
    "text": "three particular keys or is commonly",
    "start": "138990",
    "end": "141360"
  },
  {
    "text": "known as the ante architecture so to",
    "start": "141360",
    "end": "143490"
  },
  {
    "text": "declare application or the user",
    "start": "143490",
    "end": "145650"
  },
  {
    "text": "front-end experience is being delivered",
    "start": "145650",
    "end": "147600"
  },
  {
    "text": "in the presentation tier and a core set",
    "start": "147600",
    "end": "150660"
  },
  {
    "text": "of this logic",
    "start": "150660",
    "end": "151830"
  },
  {
    "text": "resides on a server or as your logical",
    "start": "151830",
    "end": "154470"
  },
  {
    "text": "here and any database requires to be",
    "start": "154470",
    "end": "156630"
  },
  {
    "text": "persisted or to a datastore resides in",
    "start": "156630",
    "end": "159600"
  },
  {
    "text": "your data too so this makes it in terms",
    "start": "159600",
    "end": "163020"
  },
  {
    "text": "of how you scale in terms of your skill",
    "start": "163020",
    "end": "165030"
  },
  {
    "text": "different components on the different",
    "start": "165030",
    "end": "166560"
  },
  {
    "text": "tier itself so you need to to scale on",
    "start": "166560",
    "end": "169320"
  },
  {
    "text": "on the server side or the database you",
    "start": "169320",
    "end": "171390"
  },
  {
    "text": "can scale independently and for the last",
    "start": "171390",
    "end": "175530"
  },
  {
    "start": "174000",
    "end": "174000"
  },
  {
    "text": "few years the Microsoft the micro",
    "start": "175530",
    "end": "177239"
  },
  {
    "text": "services architecture has become very",
    "start": "177239",
    "end": "178739"
  },
  {
    "text": "popular today and I'm very often than",
    "start": "178739",
    "end": "180900"
  },
  {
    "text": "not you hear like the term containers so",
    "start": "180900",
    "end": "183600"
  },
  {
    "text": "this is very similar to the",
    "start": "183600",
    "end": "185850"
  },
  {
    "text": "service-oriented architecture it has the",
    "start": "185850",
    "end": "189209"
  },
  {
    "text": "same tenets and all of the value",
    "start": "189209",
    "end": "191790"
  },
  {
    "text": "proposition that a service or",
    "start": "191790",
    "end": "193080"
  },
  {
    "text": "architecture approach provides you",
    "start": "193080",
    "end": "195590"
  },
  {
    "text": "however the components are broken into",
    "start": "195590",
    "end": "198269"
  },
  {
    "text": "smaller pieces so that is a single",
    "start": "198269",
    "end": "200640"
  },
  {
    "text": "modular web services such that it still",
    "start": "200640",
    "end": "207480"
  },
  {
    "text": "reap the benefits of SOA so when you",
    "start": "207480",
    "end": "215280"
  },
  {
    "text": "break it up into a small component so",
    "start": "215280",
    "end": "217290"
  },
  {
    "text": "you have a small development team stays",
    "start": "217290",
    "end": "218640"
  },
  {
    "text": "very specialized on you on deliver a",
    "start": "218640",
    "end": "221070"
  },
  {
    "text": "small piece and very functional piece of",
    "start": "221070",
    "end": "223829"
  },
  {
    "text": "code so you're very focused on you have",
    "start": "223829",
    "end": "226590"
  },
  {
    "text": "small teams you can deploy faster you",
    "start": "226590",
    "end": "228630"
  },
  {
    "text": "can develop faster do some of you who",
    "start": "228630",
    "end": "232170"
  },
  {
    "start": "231000",
    "end": "231000"
  },
  {
    "text": "might be new to containers when you talk",
    "start": "232170",
    "end": "234480"
  },
  {
    "text": "about micro services you will hear about",
    "start": "234480",
    "end": "236370"
  },
  {
    "text": "containers so on your right on your left",
    "start": "236370",
    "end": "239700"
  },
  {
    "text": "basically you see the traditional in",
    "start": "239700",
    "end": "241410"
  },
  {
    "text": "terms of hyper-v or VMware or hyper so",
    "start": "241410",
    "end": "245940"
  },
  {
    "text": "virtualization so on your right these",
    "start": "245940",
    "end": "248160"
  },
  {
    "text": "are the containers do the only",
    "start": "248160",
    "end": "249150"
  },
  {
    "text": "difference is that containers does not",
    "start": "249150",
    "end": "252870"
  },
  {
    "text": "have to care about the operating systems",
    "start": "252870",
    "end": "254400"
  },
  {
    "text": "it talks to the operating system through",
    "start": "254400",
    "end": "256229"
  },
  {
    "text": "an API so there's no embedded operating",
    "start": "256229",
    "end": "258329"
  },
  {
    "text": "system in a container itself so how do",
    "start": "258329",
    "end": "262680"
  },
  {
    "text": "you look deploy containers on a double",
    "start": "262680",
    "end": "264690"
  },
  {
    "start": "263000",
    "end": "263000"
  },
  {
    "text": "yesterday",
    "start": "264690",
    "end": "265200"
  },
  {
    "text": "well we always support",
    "start": "265200",
    "end": "267010"
  },
  {
    "text": "the restaurant in obvious what you have",
    "start": "267010",
    "end": "268570"
  },
  {
    "text": "to do basically play the doctor",
    "start": "268570",
    "end": "270040"
  },
  {
    "text": "datacenter on on ec2 or what have you or",
    "start": "270040",
    "end": "273250"
  },
  {
    "text": "you might even be looking at doctor",
    "start": "273250",
    "end": "275410"
  },
  {
    "text": "swamp all these are being supported",
    "start": "275410",
    "end": "277360"
  },
  {
    "text": "today so now let's look at some of",
    "start": "277360",
    "end": "281050"
  },
  {
    "text": "challenges or mark running Microsoft",
    "start": "281050",
    "end": "282550"
  },
  {
    "text": "services first is resource monitoring",
    "start": "282550",
    "end": "286980"
  },
  {
    "text": "when you have a large fleet of service",
    "start": "286980",
    "end": "289510"
  },
  {
    "text": "now these are this is of for example",
    "start": "289510",
    "end": "292320"
  },
  {
    "text": "three ACS in a particular region and a",
    "start": "292320",
    "end": "295210"
  },
  {
    "text": "bunch of ec2 instances it will be very",
    "start": "295210",
    "end": "297580"
  },
  {
    "text": "hard for you to manage or practically",
    "start": "297580",
    "end": "299050"
  },
  {
    "text": "impossible",
    "start": "299050",
    "end": "299860"
  },
  {
    "text": "when you go to such a large fleet or by",
    "start": "299860",
    "end": "302800"
  },
  {
    "text": "hand right so if a small fleet we still",
    "start": "302800",
    "end": "305320"
  },
  {
    "text": "potentially able to manage in terms of",
    "start": "305320",
    "end": "308050"
  },
  {
    "text": "the resources by hand or have a database",
    "start": "308050",
    "end": "310060"
  },
  {
    "text": "to store certain information but how do",
    "start": "310060",
    "end": "312820"
  },
  {
    "text": "you know in terms of like which",
    "start": "312820",
    "end": "315400"
  },
  {
    "text": "resources is available or which host ism",
    "start": "315400",
    "end": "317770"
  },
  {
    "text": "is has the most resources for it to",
    "start": "317770",
    "end": "320080"
  },
  {
    "text": "deploy your services that's particularly",
    "start": "320080",
    "end": "321960"
  },
  {
    "text": "really really challenging to find out",
    "start": "321960",
    "end": "324040"
  },
  {
    "text": "where the second challenge will be",
    "start": "324040",
    "end": "327160"
  },
  {
    "text": "monitoring you could have a tens",
    "start": "327160",
    "end": "329050"
  },
  {
    "text": "hundreds or thousands or individual",
    "start": "329050",
    "end": "330670"
  },
  {
    "text": "services a simple question like how do",
    "start": "330670",
    "end": "333010"
  },
  {
    "text": "you know if an individual service is",
    "start": "333010",
    "end": "334660"
  },
  {
    "text": "healthy how do you measure the",
    "start": "334660",
    "end": "336910"
  },
  {
    "text": "prevalence of an individual services how",
    "start": "336910",
    "end": "339250"
  },
  {
    "text": "do you troubleshoot when an individual",
    "start": "339250",
    "end": "342490"
  },
  {
    "text": "services actually throws an error so",
    "start": "342490",
    "end": "344770"
  },
  {
    "text": "pretty much is very hard to know where",
    "start": "344770",
    "end": "347910"
  },
  {
    "text": "next you'll be looking at service",
    "start": "347910",
    "end": "349720"
  },
  {
    "start": "348000",
    "end": "348000"
  },
  {
    "text": "discovering service discovery basically",
    "start": "349720",
    "end": "351460"
  },
  {
    "text": "it's about wow one service learns about",
    "start": "351460",
    "end": "353890"
  },
  {
    "text": "another so for example if I have a",
    "start": "353890",
    "end": "357670"
  },
  {
    "text": "service a that was to call a service fee",
    "start": "357670",
    "end": "359770"
  },
  {
    "text": "how does it know where that service",
    "start": "359770",
    "end": "361390"
  },
  {
    "text": "service B recites right he has to know",
    "start": "361390",
    "end": "363400"
  },
  {
    "text": "the URL but s the services scale up and",
    "start": "363400",
    "end": "366820"
  },
  {
    "text": "scale down how do you know which host it",
    "start": "366820",
    "end": "369100"
  },
  {
    "text": "is residing at pretty much you will not",
    "start": "369100",
    "end": "371610"
  },
  {
    "text": "have a way to find out we can dig",
    "start": "371610",
    "end": "375610"
  },
  {
    "text": "through it slowly but you have a large",
    "start": "375610",
    "end": "377470"
  },
  {
    "text": "fleet it that's pretty much impossible",
    "start": "377470",
    "end": "379380"
  },
  {
    "text": "and when a new service instance that",
    "start": "379380",
    "end": "383800"
  },
  {
    "text": "comes alive like hey I'm I'm up and",
    "start": "383800",
    "end": "386200"
  },
  {
    "text": "ready I'm ready to receive requests how",
    "start": "386200",
    "end": "388570"
  },
  {
    "text": "does it announce to the wallowing",
    "start": "388570",
    "end": "389680"
  },
  {
    "text": "themselves I'm ready itself so so that's",
    "start": "389680",
    "end": "392410"
  },
  {
    "text": "our summer challenges in terms of",
    "start": "392410",
    "end": "393610"
  },
  {
    "text": "service discovery next deployment the",
    "start": "393610",
    "end": "397420"
  },
  {
    "start": "396000",
    "end": "396000"
  },
  {
    "text": "same challenges itself each developer we",
    "start": "397420",
    "end": "400240"
  },
  {
    "text": "have",
    "start": "400240",
    "end": "400930"
  },
  {
    "text": "Fellman team will have their own",
    "start": "400930",
    "end": "402100"
  },
  {
    "text": "timeline in terms of developing a",
    "start": "402100",
    "end": "403600"
  },
  {
    "text": "services some development teams we have",
    "start": "403600",
    "end": "406570"
  },
  {
    "text": "different programming languages that are",
    "start": "406570",
    "end": "408100"
  },
  {
    "text": "familiar with or they're using different",
    "start": "408100",
    "end": "410139"
  },
  {
    "text": "frameworks so this our services are",
    "start": "410139",
    "end": "412000"
  },
  {
    "text": "Pollock a polygon at the end when the",
    "start": "412000",
    "end": "415960"
  },
  {
    "text": "development team has completed their",
    "start": "415960",
    "end": "417400"
  },
  {
    "text": "development and build the application",
    "start": "417400",
    "end": "419259"
  },
  {
    "text": "itself how do you decide which host you",
    "start": "419259",
    "end": "421660"
  },
  {
    "text": "want to run on so you need to know in",
    "start": "421660",
    "end": "424060"
  },
  {
    "text": "terms of which host has the available",
    "start": "424060",
    "end": "426430"
  },
  {
    "text": "resources so let me introduce you to",
    "start": "426430",
    "end": "430419"
  },
  {
    "start": "429000",
    "end": "429000"
  },
  {
    "text": "Amazon ECS it is a fully managed elastic",
    "start": "430419",
    "end": "433509"
  },
  {
    "text": "service we practically do not need to",
    "start": "433509",
    "end": "435639"
  },
  {
    "text": "run anything on the service skills",
    "start": "435639",
    "end": "437650"
  },
  {
    "text": "accordingly to your to your macros micro",
    "start": "437650",
    "end": "440139"
  },
  {
    "text": "services yes something called share",
    "start": "440139",
    "end": "442389"
  },
  {
    "text": "state optimistic scheduling there has",
    "start": "442389",
    "end": "445539"
  },
  {
    "text": "been an interesting research in terms of",
    "start": "445539",
    "end": "447070"
  },
  {
    "text": "the different schedule type of which are",
    "start": "447070",
    "end": "450810"
  },
  {
    "text": "more efficient or what have you so we",
    "start": "450810",
    "end": "455380"
  },
  {
    "text": "found out that the Shedd step of this",
    "start": "455380",
    "end": "456970"
  },
  {
    "text": "optimistic schedule is one or more",
    "start": "456970",
    "end": "458650"
  },
  {
    "text": "official schedule that we have it is",
    "start": "458650",
    "end": "461650"
  },
  {
    "text": "fully as a compliant on resource and",
    "start": "461650",
    "end": "465430"
  },
  {
    "text": "state management this is important",
    "start": "465430",
    "end": "467380"
  },
  {
    "text": "because in a distributed system a lot of",
    "start": "467380",
    "end": "470289"
  },
  {
    "text": "times database have eventual consistency",
    "start": "470289",
    "end": "473280"
  },
  {
    "text": "right so when you want to make sure that",
    "start": "473280",
    "end": "477280"
  },
  {
    "text": "you have a view of all your resources at",
    "start": "477280",
    "end": "479500"
  },
  {
    "text": "all time instead of having to worry if",
    "start": "479500",
    "end": "482289"
  },
  {
    "text": "there's any consistency issues next",
    "start": "482289",
    "end": "485080"
  },
  {
    "text": "thing it is integrated with Clark watch",
    "start": "485080",
    "end": "486460"
  },
  {
    "text": "for your normal monitoring and logging",
    "start": "486460",
    "end": "488860"
  },
  {
    "text": "so if you are used to having color watch",
    "start": "488860",
    "end": "492250"
  },
  {
    "text": "to monitor your EC tools there's no",
    "start": "492250",
    "end": "493870"
  },
  {
    "text": "different on how cloud was monitored the",
    "start": "493870",
    "end": "495460"
  },
  {
    "text": "rest of the services as well and lastly",
    "start": "495460",
    "end": "498310"
  },
  {
    "text": "if you have DevOps practice in place you",
    "start": "498310",
    "end": "502300"
  },
  {
    "text": "can integrate with co-star services this",
    "start": "502300",
    "end": "504460"
  },
  {
    "text": "other services like commit code bill",
    "start": "504460",
    "end": "506560"
  },
  {
    "text": "pipeline code deploy or alternatively it",
    "start": "506560",
    "end": "509830"
  },
  {
    "text": "can work with some other policy ICT",
    "start": "509830",
    "end": "511419"
  },
  {
    "text": "tools as well so let's take a look at",
    "start": "511419",
    "end": "515680"
  },
  {
    "text": "how the ECS architecture is so on your",
    "start": "515680",
    "end": "519880"
  },
  {
    "start": "518000",
    "end": "518000"
  },
  {
    "text": "life this on the diagram itself there to",
    "start": "519880",
    "end": "522880"
  },
  {
    "text": "architecture of views on your life",
    "start": "522880",
    "end": "525790"
  },
  {
    "text": "basically this is your traditional",
    "start": "525790",
    "end": "527410"
  },
  {
    "text": "common with your private condo VPC",
    "start": "527410",
    "end": "529089"
  },
  {
    "text": "yourself this is where the cluster will",
    "start": "529089",
    "end": "531640"
  },
  {
    "text": "be deployed to and this cluster will",
    "start": "531640",
    "end": "533860"
  },
  {
    "text": "contain",
    "start": "533860",
    "end": "534350"
  },
  {
    "text": "container instances container instances",
    "start": "534350",
    "end": "536960"
  },
  {
    "text": "are basically nothing but easy to server",
    "start": "536960",
    "end": "539780"
  },
  {
    "text": "cluster itself basic contains a",
    "start": "539780",
    "end": "542360"
  },
  {
    "text": "collection of ec2 instances so within",
    "start": "542360",
    "end": "545120"
  },
  {
    "text": "the container instance there is an agent",
    "start": "545120",
    "end": "548060"
  },
  {
    "text": "and ECS agent that is communicating with",
    "start": "548060",
    "end": "550910"
  },
  {
    "text": "the easiest service and on top there",
    "start": "550910",
    "end": "553520"
  },
  {
    "text": "this is where you deploy your containers",
    "start": "553520",
    "end": "555460"
  },
  {
    "text": "there to help controls that you probably",
    "start": "555460",
    "end": "558890"
  },
  {
    "text": "will deploy one is a test definition the",
    "start": "558890",
    "end": "561830"
  },
  {
    "text": "other one is a service I'll get back to",
    "start": "561830",
    "end": "563570"
  },
  {
    "text": "to that in a couple of slides later so",
    "start": "563570",
    "end": "566690"
  },
  {
    "text": "on your right this is where the Amazon",
    "start": "566690",
    "end": "569900"
  },
  {
    "text": "SES service resides",
    "start": "569900",
    "end": "571270"
  },
  {
    "text": "so yeah there's a resource manager that",
    "start": "571270",
    "end": "573800"
  },
  {
    "text": "takes care of knowing which hosts is",
    "start": "573800",
    "end": "576500"
  },
  {
    "text": "available what our capacity has what the",
    "start": "576500",
    "end": "579500"
  },
  {
    "text": "memory has and and and then within it",
    "start": "579500",
    "end": "583250"
  },
  {
    "text": "that's a scheduler their 2001 is the",
    "start": "583250",
    "end": "586850"
  },
  {
    "text": "tasks their own a service I'll get back",
    "start": "586850",
    "end": "588560"
  },
  {
    "text": "to that as well",
    "start": "588560",
    "end": "591100"
  },
  {
    "start": "591000",
    "end": "591000"
  },
  {
    "text": "so they said if you want to build an",
    "start": "591310",
    "end": "593630"
  },
  {
    "text": "application Amazon is yesterday so this",
    "start": "593630",
    "end": "595820"
  },
  {
    "text": "is a very simple application support",
    "start": "595820",
    "end": "597680"
  },
  {
    "text": "potentially have one or two or more ACS",
    "start": "597680",
    "end": "601130"
  },
  {
    "text": "cluster backed by our data store could",
    "start": "601130",
    "end": "603350"
  },
  {
    "text": "be RDS databases and typically this",
    "start": "603350",
    "end": "606200"
  },
  {
    "text": "cluster instances all your containers",
    "start": "606200",
    "end": "607820"
  },
  {
    "text": "will be fronted by an LBO yogi now which",
    "start": "607820",
    "end": "611420"
  },
  {
    "text": "are the load balancers and potentially",
    "start": "611420",
    "end": "613610"
  },
  {
    "text": "using real 53 to see them the fqdn of",
    "start": "613610",
    "end": "616820"
  },
  {
    "text": "the load balances with a friendly URL",
    "start": "616820",
    "end": "618650"
  },
  {
    "text": "name and alternatively you can use",
    "start": "618650",
    "end": "621140"
  },
  {
    "text": "Amazon API get way as well to expose",
    "start": "621140",
    "end": "623750"
  },
  {
    "text": "certain API services to public or",
    "start": "623750",
    "end": "626570"
  },
  {
    "text": "potential to be a mobile application so",
    "start": "626570",
    "end": "631790"
  },
  {
    "text": "on your right on your right yep so",
    "start": "631790",
    "end": "634490"
  },
  {
    "text": "basically it's the easiest services it",
    "start": "634490",
    "end": "636680"
  },
  {
    "text": "has a repository that for you to push",
    "start": "636680",
    "end": "638900"
  },
  {
    "text": "your container images it has integration",
    "start": "638900",
    "end": "642080"
  },
  {
    "text": "with I am as well",
    "start": "642080",
    "end": "643130"
  },
  {
    "text": "it's a fine-grained permission control a",
    "start": "643130",
    "end": "645110"
  },
  {
    "text": "privileges control on the individual",
    "start": "645110",
    "end": "648440"
  },
  {
    "text": "service what can they do",
    "start": "648440",
    "end": "650450"
  },
  {
    "text": "which service they can talk to you right",
    "start": "650450",
    "end": "652820"
  },
  {
    "text": "so so this is a very simple application",
    "start": "652820",
    "end": "654410"
  },
  {
    "text": "that you can simply start and do today",
    "start": "654410",
    "end": "658720"
  },
  {
    "text": "you can do monitoring with Amazon",
    "start": "658720",
    "end": "660800"
  },
  {
    "start": "660000",
    "end": "660000"
  },
  {
    "text": "CloudWatch",
    "start": "660800",
    "end": "661220"
  },
  {
    "text": "there's a one-minute period interval of",
    "start": "661220",
    "end": "663470"
  },
  {
    "text": "sending the cows matrix and there are",
    "start": "663470",
    "end": "667160"
  },
  {
    "text": "four matrix available",
    "start": "667160",
    "end": "668180"
  },
  {
    "text": "CP reservation memory reservation CP",
    "start": "668180",
    "end": "671690"
  },
  {
    "text": "utilization and memory utilization these",
    "start": "671690",
    "end": "674720"
  },
  {
    "text": "are the four key metrics that can have",
    "start": "674720",
    "end": "676040"
  },
  {
    "text": "on the cluster itself and if you view it",
    "start": "676040",
    "end": "679280"
  },
  {
    "text": "two different dimensions could be",
    "start": "679280",
    "end": "680630"
  },
  {
    "text": "whether it's based on a cluster or based",
    "start": "680630",
    "end": "683000"
  },
  {
    "text": "on the individual service that's what I",
    "start": "683000",
    "end": "686240"
  },
  {
    "text": "in charge if you are using flowers to",
    "start": "686240",
    "end": "688010"
  },
  {
    "text": "monitor your existing ec2 instances",
    "start": "688010",
    "end": "690200"
  },
  {
    "text": "today this is a very common - port and",
    "start": "690200",
    "end": "692420"
  },
  {
    "text": "charge that we provide through kawatche",
    "start": "692420",
    "end": "695709"
  },
  {
    "text": "this is a service architecture that",
    "start": "696580",
    "end": "699530"
  },
  {
    "text": "presents with an A or B to show some of",
    "start": "699530",
    "end": "703550"
  },
  {
    "text": "the interesting possibility of using a",
    "start": "703550",
    "end": "705770"
  },
  {
    "text": "or B for service discovery so for",
    "start": "705770",
    "end": "708620"
  },
  {
    "text": "example if I'm not too sure you can see",
    "start": "708620",
    "end": "710300"
  },
  {
    "text": "this basically I have a path and off top",
    "start": "710300",
    "end": "712550"
  },
  {
    "text": "and a ladder path right an Ald will be",
    "start": "712550",
    "end": "716360"
  },
  {
    "text": "able to route requests based on the path",
    "start": "716360",
    "end": "719210"
  },
  {
    "text": "to a target group a target group",
    "start": "719210",
    "end": "722120"
  },
  {
    "text": "basically is a host of service that is",
    "start": "722120",
    "end": "725120"
  },
  {
    "text": "responding to the same type of requests",
    "start": "725120",
    "end": "727520"
  },
  {
    "text": "so based on an off path I were out into",
    "start": "727520",
    "end": "730100"
  },
  {
    "text": "a certain target group based on whether",
    "start": "730100",
    "end": "732110"
  },
  {
    "text": "paths I write on a different group of",
    "start": "732110",
    "end": "733670"
  },
  {
    "text": "servers so how does this help with",
    "start": "733670",
    "end": "738380"
  },
  {
    "text": "service discovery so for example if a",
    "start": "738380",
    "end": "740660"
  },
  {
    "text": "service area on the total service B",
    "start": "740660",
    "end": "742210"
  },
  {
    "text": "service a what he needs to know",
    "start": "742210",
    "end": "744740"
  },
  {
    "text": "basically it's just the path information",
    "start": "744740",
    "end": "747410"
  },
  {
    "text": "and if the application is able to",
    "start": "747410",
    "end": "749750"
  },
  {
    "text": "construct the URL of that particular",
    "start": "749750",
    "end": "752800"
  },
  {
    "text": "path so lb will takes care of routing",
    "start": "752800",
    "end": "757100"
  },
  {
    "text": "the request to the right target groups",
    "start": "757100",
    "end": "758930"
  },
  {
    "text": "or hosts so this is how the service",
    "start": "758930",
    "end": "761900"
  },
  {
    "text": "decart discovery can be automated and",
    "start": "761900",
    "end": "765260"
  },
  {
    "text": "updated accordingly so now let's get",
    "start": "765260",
    "end": "770300"
  },
  {
    "text": "back to D is the schedule type that I",
    "start": "770300",
    "end": "771980"
  },
  {
    "text": "mentioned earlier on one is the easiest",
    "start": "771980",
    "end": "775070"
  },
  {
    "text": "task scheduler task scheduler basically",
    "start": "775070",
    "end": "777620"
  },
  {
    "text": "is suitable for running best jobs or",
    "start": "777620",
    "end": "781810"
  },
  {
    "text": "potentially a job that you need to run",
    "start": "781810",
    "end": "784220"
  },
  {
    "text": "once one is complete it will exit right",
    "start": "784220",
    "end": "787130"
  },
  {
    "text": "there are two ways for you to run a test",
    "start": "787130",
    "end": "789260"
  },
  {
    "text": "one is called run tas run test basically",
    "start": "789260",
    "end": "791990"
  },
  {
    "text": "it doesn't care where the horse is run",
    "start": "791990",
    "end": "795860"
  },
  {
    "text": "the resource manager will decide based",
    "start": "795860",
    "end": "797960"
  },
  {
    "text": "on your requirements of a service which",
    "start": "797960",
    "end": "799970"
  },
  {
    "text": "hosts it will run",
    "start": "799970",
    "end": "801520"
  },
  {
    "text": "or similarly for starcast the only",
    "start": "801520",
    "end": "805370"
  },
  {
    "text": "difference is that start as you are able",
    "start": "805370",
    "end": "807290"
  },
  {
    "text": "to decide which hosts you want to run on",
    "start": "807290",
    "end": "809530"
  },
  {
    "text": "okay the other service schedule schedule",
    "start": "809530",
    "end": "813920"
  },
  {
    "text": "is the ECS service schedule this is for",
    "start": "813920",
    "end": "816560"
  },
  {
    "text": "your long run running apps so for",
    "start": "816560",
    "end": "818450"
  },
  {
    "text": "example if you have an api rest",
    "start": "818450",
    "end": "820520"
  },
  {
    "text": "Oh API gateway type of services that you",
    "start": "820520",
    "end": "827540"
  },
  {
    "text": "want to expose that the keeps running",
    "start": "827540",
    "end": "830030"
  },
  {
    "text": "for for a long time this is where you",
    "start": "830030",
    "end": "832670"
  },
  {
    "text": "run your service it provides health",
    "start": "832670",
    "end": "834920"
  },
  {
    "text": "management because it can want enter the",
    "start": "834920",
    "end": "837200"
  },
  {
    "text": "service of your behalf of your service",
    "start": "837200",
    "end": "839450"
  },
  {
    "text": "such that if you two service goes down",
    "start": "839450",
    "end": "841670"
  },
  {
    "text": "you want the task to restart itself so",
    "start": "841670",
    "end": "844010"
  },
  {
    "text": "that you bring up the service again you",
    "start": "844010",
    "end": "846590"
  },
  {
    "text": "have scale up and scale down",
    "start": "846590",
    "end": "847610"
  },
  {
    "text": "functionality as well it is easier so",
    "start": "847610",
    "end": "851270"
  },
  {
    "text": "for example if I want to deploy for",
    "start": "851270",
    "end": "852950"
  },
  {
    "text": "container instance I do not want to have",
    "start": "852950",
    "end": "856190"
  },
  {
    "text": "my content instance to land up in a",
    "start": "856190",
    "end": "858140"
  },
  {
    "text": "cluster or hosted resize in a single",
    "start": "858140",
    "end": "860540"
  },
  {
    "text": "easy right so if AC goes down all my",
    "start": "860540",
    "end": "863570"
  },
  {
    "text": "services will be gone so what I want you",
    "start": "863570",
    "end": "865610"
  },
  {
    "text": "do is to make sure that all my container",
    "start": "865610",
    "end": "867410"
  },
  {
    "text": "instance are the containers are deployed",
    "start": "867410",
    "end": "870910"
  },
  {
    "text": "accordingly to the differences that I",
    "start": "870910",
    "end": "874130"
  },
  {
    "text": "have service schedule also has a notion",
    "start": "874130",
    "end": "878360"
  },
  {
    "text": "of group containers so for example if I",
    "start": "878360",
    "end": "881780"
  },
  {
    "text": "want to have a container container nginx",
    "start": "881780",
    "end": "885710"
  },
  {
    "text": "proxy but at the same time I want to",
    "start": "885710",
    "end": "887900"
  },
  {
    "text": "have a node.js Express continue as well",
    "start": "887900",
    "end": "890210"
  },
  {
    "text": "because these two has to work together",
    "start": "890210",
    "end": "891830"
  },
  {
    "text": "so I can create a group container such",
    "start": "891830",
    "end": "894380"
  },
  {
    "text": "that every time this service is deployed",
    "start": "894380",
    "end": "895880"
  },
  {
    "text": "the two containers will will be",
    "start": "895880",
    "end": "898400"
  },
  {
    "text": "beautified together at the same time",
    "start": "898400",
    "end": "901900"
  },
  {
    "text": "and here if you have develop rack toises",
    "start": "904580",
    "end": "907990"
  },
  {
    "text": "this is another use case where let's say",
    "start": "907990",
    "end": "911300"
  },
  {
    "text": "you're using Jenkins a very common CR C",
    "start": "911300",
    "end": "913340"
  },
  {
    "text": "D tools today you can actually integrate",
    "start": "913340",
    "end": "915170"
  },
  {
    "text": "with the VCS so for example a developer",
    "start": "915170",
    "end": "918380"
  },
  {
    "text": "finished beliar code checking the code",
    "start": "918380",
    "end": "920920"
  },
  {
    "text": "jenkees will take out and builder the",
    "start": "920920",
    "end": "923750"
  },
  {
    "text": "image itself test the image you'll push",
    "start": "923750",
    "end": "926240"
  },
  {
    "text": "the repository and you tell easy a",
    "start": "926240",
    "end": "929270"
  },
  {
    "text": "service that I have a new jobs or a new",
    "start": "929270",
    "end": "931310"
  },
  {
    "text": "image being deployed and I want it to be",
    "start": "931310",
    "end": "933620"
  },
  {
    "text": "updated so this is something that you",
    "start": "933620",
    "end": "935330"
  },
  {
    "text": "can do it today or via Jenkins or even",
    "start": "935330",
    "end": "938000"
  },
  {
    "text": "with our co-star services you can have a",
    "start": "938000",
    "end": "941120"
  },
  {
    "text": "code commit such that for example if you",
    "start": "941120",
    "end": "943370"
  },
  {
    "text": "peel your code you check into a code",
    "start": "943370",
    "end": "944990"
  },
  {
    "text": "commit you do a code bill and base of a",
    "start": "944990",
    "end": "947630"
  },
  {
    "text": "pipeline or to use the code deploy to",
    "start": "947630",
    "end": "949760"
  },
  {
    "text": "deploy the ECS so this that is something",
    "start": "949760",
    "end": "952550"
  },
  {
    "text": "that you can do with pure Amazon",
    "start": "952550",
    "end": "954410"
  },
  {
    "text": "services similarly for this one so since",
    "start": "954410",
    "end": "962360"
  },
  {
    "text": "you have heard me that saying that ok",
    "start": "962360",
    "end": "964460"
  },
  {
    "text": "ECS will so call respond to the the",
    "start": "964460",
    "end": "968660"
  },
  {
    "text": "different challenges that there are",
    "start": "968660",
    "end": "970880"
  },
  {
    "text": "highlighted earlier on but many of these",
    "start": "970880",
    "end": "974030"
  },
  {
    "text": "tools and innovations still coupled to a",
    "start": "974030",
    "end": "977150"
  },
  {
    "text": "single dependency so why is that",
    "start": "977150",
    "end": "981140"
  },
  {
    "text": "dependency still servers right VCS is",
    "start": "981140",
    "end": "985580"
  },
  {
    "start": "983000",
    "end": "983000"
  },
  {
    "text": "the collection of ec2 instances there",
    "start": "985580",
    "end": "988010"
  },
  {
    "text": "are still servers so we've service",
    "start": "988010",
    "end": "990770"
  },
  {
    "text": "itself it can be the complexity of that",
    "start": "990770",
    "end": "992570"
  },
  {
    "text": "environment introduced ah for example",
    "start": "992570",
    "end": "995090"
  },
  {
    "text": "you as an application owner we have to",
    "start": "995090",
    "end": "997310"
  },
  {
    "text": "answer the following questions for",
    "start": "997310",
    "end": "998480"
  },
  {
    "text": "example like what's our service our",
    "start": "998480",
    "end": "1000280"
  },
  {
    "text": "Reforma budget what sort of service do i",
    "start": "1000280",
    "end": "1002200"
  },
  {
    "text": "need to achieve that level of",
    "start": "1002200",
    "end": "1003670"
  },
  {
    "text": "performance for my application services",
    "start": "1003670",
    "end": "1007589"
  },
  {
    "text": "so if you are able to do web service or",
    "start": "1007920",
    "end": "1013360"
  },
  {
    "text": "web based service applications and based",
    "start": "1013360",
    "end": "1015880"
  },
  {
    "text": "on what you have learned and and know",
    "start": "1015880",
    "end": "1017980"
  },
  {
    "text": "how what happens if there's no server",
    "start": "1017980",
    "end": "1020350"
  },
  {
    "text": "for you to manage that would be quite",
    "start": "1020350",
    "end": "1021970"
  },
  {
    "text": "compelling right all I have to do is to",
    "start": "1021970",
    "end": "1025060"
  },
  {
    "text": "focus on my application code or I do not",
    "start": "1025060",
    "end": "1027970"
  },
  {
    "text": "have to care about provisioning I have",
    "start": "1027970",
    "end": "1029890"
  },
  {
    "text": "high availability built in there's no",
    "start": "1029890",
    "end": "1033100"
  },
  {
    "text": "need for me to patch or monitor the",
    "start": "1033100",
    "end": "1034839"
  },
  {
    "text": "operating systems",
    "start": "1034839",
    "end": "1036250"
  },
  {
    "text": "so as a developer or just focus on my",
    "start": "1036250",
    "end": "1038620"
  },
  {
    "text": "code to build a business logic and give",
    "start": "1038620",
    "end": "1043030"
  },
  {
    "text": "me service applications it has to be",
    "start": "1043030",
    "end": "1045250"
  },
  {
    "text": "scaled accordingly to what I need as",
    "start": "1045250",
    "end": "1048069"
  },
  {
    "text": "well such that I do not have too many",
    "start": "1048069",
    "end": "1050020"
  },
  {
    "text": "scaling it will scale up and down",
    "start": "1050020",
    "end": "1051580"
  },
  {
    "text": "automatically so with that we are",
    "start": "1051580",
    "end": "1056169"
  },
  {
    "text": "looking at a diverse lambda so where's",
    "start": "1056169",
    "end": "1059169"
  },
  {
    "text": "lambda lambda basically is a service",
    "start": "1059169",
    "end": "1061780"
  },
  {
    "text": "event compute service right you can take",
    "start": "1061780",
    "end": "1064630"
  },
  {
    "text": "it as for example lambda being a micro",
    "start": "1064630",
    "end": "1067360"
  },
  {
    "text": "services without server here are the",
    "start": "1067360",
    "end": "1072159"
  },
  {
    "start": "1072000",
    "end": "1072000"
  },
  {
    "text": "different components of lambda I'll run",
    "start": "1072159",
    "end": "1073630"
  },
  {
    "text": "through it one by one first off for most",
    "start": "1073630",
    "end": "1076090"
  },
  {
    "start": "1076000",
    "end": "1076000"
  },
  {
    "text": "this your lambda function the lambda",
    "start": "1076090",
    "end": "1078159"
  },
  {
    "text": "function basically is a piece of code",
    "start": "1078159",
    "end": "1080020"
  },
  {
    "text": "that you write right it could be written",
    "start": "1080020",
    "end": "1082450"
  },
  {
    "text": "in no GS Python Ruby or even c-sharp and",
    "start": "1082450",
    "end": "1087510"
  },
  {
    "text": "each code that you write does not mean",
    "start": "1087510",
    "end": "1090070"
  },
  {
    "text": "that it has to be a single function",
    "start": "1090070",
    "end": "1091559"
  },
  {
    "text": "their function itself can call other",
    "start": "1091559",
    "end": "1094270"
  },
  {
    "text": "functions can include other native",
    "start": "1094270",
    "end": "1096309"
  },
  {
    "text": "libraries or core libraries that you",
    "start": "1096309",
    "end": "1097630"
  },
  {
    "text": "want of course there's a single point of",
    "start": "1097630",
    "end": "1099700"
  },
  {
    "text": "entry to the particular function itself",
    "start": "1099700",
    "end": "1102570"
  },
  {
    "text": "next the service is the what services",
    "start": "1102570",
    "end": "1106720"
  },
  {
    "text": "that this code will have access to what",
    "start": "1106720",
    "end": "1110289"
  },
  {
    "text": "is it about service API s or some other",
    "start": "1110289",
    "end": "1113049"
  },
  {
    "text": "edible services through I am you can",
    "start": "1113049",
    "end": "1115120"
  },
  {
    "text": "control that service which application",
    "start": "1115120",
    "end": "1117970"
  },
  {
    "text": "that it can talk to but very fine-grain",
    "start": "1117970",
    "end": "1120220"
  },
  {
    "text": "you can talk to dynamodb an RDS for",
    "start": "1120220",
    "end": "1123580"
  },
  {
    "text": "example you can fully control there and",
    "start": "1123580",
    "end": "1126280"
  },
  {
    "text": "last but not least basically is the",
    "start": "1126280",
    "end": "1127960"
  },
  {
    "text": "moral memory that you need to allocate",
    "start": "1127960",
    "end": "1129669"
  },
  {
    "text": "to a function the memory will dictate",
    "start": "1129669",
    "end": "1133750"
  },
  {
    "text": "the CPU time as well as the network",
    "start": "1133750",
    "end": "1138280"
  },
  {
    "text": "bandwidth that will be provisioned based",
    "start": "1138280",
    "end": "1140200"
  },
  {
    "text": "on the memory that you provide that you",
    "start": "1140200",
    "end": "1142809"
  },
  {
    "text": "set for example next is event sources",
    "start": "1142809",
    "end": "1148110"
  },
  {
    "start": "1145000",
    "end": "1145000"
  },
  {
    "text": "you have build your code of course you",
    "start": "1148110",
    "end": "1150580"
  },
  {
    "text": "want it to be executed so how do you",
    "start": "1150580",
    "end": "1153190"
  },
  {
    "text": "define when and how it is executed",
    "start": "1153190",
    "end": "1155650"
  },
  {
    "text": "basically is based on event source as of",
    "start": "1155650",
    "end": "1158200"
  },
  {
    "text": "today there are many different events",
    "start": "1158200",
    "end": "1159340"
  },
  {
    "text": "was that you can do today could be s3",
    "start": "1159340",
    "end": "1161740"
  },
  {
    "text": "could be Genesis SNS or even Amazon API",
    "start": "1161740",
    "end": "1165190"
  },
  {
    "text": "gateway based on the resources yesterday",
    "start": "1165190",
    "end": "1168760"
  },
  {
    "text": "information on",
    "start": "1168760",
    "end": "1169549"
  },
  {
    "text": "data or metadata pass through your",
    "start": "1169549",
    "end": "1171080"
  },
  {
    "text": "functions such that the application will",
    "start": "1171080",
    "end": "1173389"
  },
  {
    "text": "know what in what context the",
    "start": "1173389",
    "end": "1175820"
  },
  {
    "text": "application code would run so for",
    "start": "1175820",
    "end": "1177739"
  },
  {
    "text": "example I want to define I want to know",
    "start": "1177739",
    "end": "1181190"
  },
  {
    "text": "or I want to have my code execute when",
    "start": "1181190",
    "end": "1183409"
  },
  {
    "text": "someone drops an object into an s3",
    "start": "1183409",
    "end": "1185929"
  },
  {
    "text": "bucket so I would choose s3 as the event",
    "start": "1185929",
    "end": "1188690"
  },
  {
    "text": "source and whatever information for that",
    "start": "1188690",
    "end": "1192169"
  },
  {
    "text": "particular action so for example who",
    "start": "1192169",
    "end": "1194600"
  },
  {
    "text": "dropped that object into the bucket",
    "start": "1194600",
    "end": "1196100"
  },
  {
    "text": "where's the bucket name was the key and",
    "start": "1196100",
    "end": "1198679"
  },
  {
    "text": "the size of that object will be passed",
    "start": "1198679",
    "end": "1200720"
  },
  {
    "text": "to the application code itself such that",
    "start": "1200720",
    "end": "1202309"
  },
  {
    "text": "I can process it right so of course the",
    "start": "1202309",
    "end": "1211039"
  },
  {
    "text": "key thing is still I'm a debris aslam",
    "start": "1211039",
    "end": "1212749"
  },
  {
    "text": "the service itself this is where the",
    "start": "1212749",
    "end": "1214609"
  },
  {
    "text": "magic happens you check in your code a",
    "start": "1214609",
    "end": "1217399"
  },
  {
    "text": "double slam that will provision into the",
    "start": "1217399",
    "end": "1219919"
  },
  {
    "text": "APWU slammer infrastructure there's no",
    "start": "1219919",
    "end": "1222529"
  },
  {
    "text": "server for you to manage",
    "start": "1222529",
    "end": "1223429"
  },
  {
    "text": "oh that's API for you to tree if you",
    "start": "1223429",
    "end": "1227419"
  },
  {
    "text": "need to to trigger the API or your",
    "start": "1227419",
    "end": "1229669"
  },
  {
    "text": "function directly and every time an",
    "start": "1229669",
    "end": "1233559"
  },
  {
    "text": "event sources is triggered if you're",
    "start": "1233559",
    "end": "1236960"
  },
  {
    "text": "either way slam that will make sure that",
    "start": "1236960",
    "end": "1238249"
  },
  {
    "text": "your code is being run and of course it",
    "start": "1238249",
    "end": "1241879"
  },
  {
    "text": "provides additional operational",
    "start": "1241879",
    "end": "1243139"
  },
  {
    "text": "capabilities such as how much",
    "start": "1243139",
    "end": "1245090"
  },
  {
    "text": "integration with monitoring and there's",
    "start": "1245090",
    "end": "1247279"
  },
  {
    "text": "a local object as well such that of",
    "start": "1247279",
    "end": "1249710"
  },
  {
    "text": "course should you choose to lock a",
    "start": "1249710",
    "end": "1251450"
  },
  {
    "text": "statement it will go to Klutch locks so",
    "start": "1251450",
    "end": "1257419"
  },
  {
    "text": "you might be saying that oh it's all",
    "start": "1257419",
    "end": "1259340"
  },
  {
    "text": "good now okay now I have to do inventory",
    "start": "1259340",
    "end": "1263359"
  },
  {
    "text": "of your functions I've tried to reach",
    "start": "1263359",
    "end": "1265669"
  },
  {
    "text": "transform the way my application is",
    "start": "1265669",
    "end": "1267109"
  },
  {
    "text": "being architected I'll go start to learn",
    "start": "1267109",
    "end": "1269330"
  },
  {
    "text": "lambda but however a lot of times the",
    "start": "1269330",
    "end": "1272450"
  },
  {
    "text": "team will have decided I have decided to",
    "start": "1272450",
    "end": "1274609"
  },
  {
    "text": "go on SOA right so there's no way for me",
    "start": "1274609",
    "end": "1279739"
  },
  {
    "text": "to to react take my whole infrastructure",
    "start": "1279739",
    "end": "1283669"
  },
  {
    "text": "or application code to make use of event",
    "start": "1283669",
    "end": "1286340"
  },
  {
    "text": "trigger you can still do it today right",
    "start": "1286340",
    "end": "1290480"
  },
  {
    "text": "so this is where Amazon API gateway",
    "start": "1290480",
    "end": "1293210"
  },
  {
    "text": "comes in this will allows you to expose",
    "start": "1293210",
    "end": "1295879"
  },
  {
    "text": "your lambda function as an API",
    "start": "1295879",
    "end": "1298619"
  },
  {
    "text": "so always an Amazon API gateway you can",
    "start": "1298619",
    "end": "1302769"
  },
  {
    "start": "1300000",
    "end": "1300000"
  },
  {
    "text": "create your API basically HTTP API is",
    "start": "1302769",
    "end": "1306369"
  },
  {
    "text": "support for standard HTTP methods we",
    "start": "1306369",
    "end": "1310029"
  },
  {
    "text": "need to do is configure the API itself",
    "start": "1310029",
    "end": "1311619"
  },
  {
    "text": "what is triggering an AW slammer",
    "start": "1311619",
    "end": "1314889"
  },
  {
    "text": "function calling an AW service api or",
    "start": "1314889",
    "end": "1317739"
  },
  {
    "text": "even exposing any accessible web",
    "start": "1317739",
    "end": "1322089"
  },
  {
    "text": "services it could be a web service",
    "start": "1322089",
    "end": "1323769"
  },
  {
    "text": "running in the containers itself on",
    "start": "1323769",
    "end": "1326469"
  },
  {
    "text": "Amazon ECS next you will publish it so",
    "start": "1326469",
    "end": "1330399"
  },
  {
    "text": "how do you publish you can test the API",
    "start": "1330399",
    "end": "1333069"
  },
  {
    "text": "itself before it is released you can",
    "start": "1333069",
    "end": "1335889"
  },
  {
    "text": "manage multiple stages or version of the",
    "start": "1335889",
    "end": "1338709"
  },
  {
    "text": "API you can create developer key such",
    "start": "1338709",
    "end": "1341889"
  },
  {
    "text": "that you can expose out this particular",
    "start": "1341889",
    "end": "1343839"
  },
  {
    "text": "API to external developers to leverage",
    "start": "1343839",
    "end": "1346269"
  },
  {
    "text": "on this API to call and use the data",
    "start": "1346269",
    "end": "1349629"
  },
  {
    "text": "that what you provide through the API",
    "start": "1349629",
    "end": "1352139"
  },
  {
    "text": "next is maintenance it scales by itself",
    "start": "1352139",
    "end": "1355659"
  },
  {
    "text": "right and the usage is based I mean the",
    "start": "1355659",
    "end": "1360639"
  },
  {
    "text": "pricing is based on usage so the more of",
    "start": "1360639",
    "end": "1362589"
  },
  {
    "text": "API calls to the particular function",
    "start": "1362589",
    "end": "1365349"
  },
  {
    "text": "itself",
    "start": "1365349",
    "end": "1366629"
  },
  {
    "text": "next thing is monitoring it is",
    "start": "1366629",
    "end": "1369639"
  },
  {
    "text": "integrative call watch as well and how",
    "start": "1369639",
    "end": "1371199"
  },
  {
    "text": "much locks and lastly it is secure right",
    "start": "1371199",
    "end": "1374949"
  },
  {
    "text": "it is integrated with I am and it uses",
    "start": "1374949",
    "end": "1377769"
  },
  {
    "text": "AWS 64 to authorize access to the API",
    "start": "1377769",
    "end": "1381129"
  },
  {
    "text": "ice it has cross run integration such",
    "start": "1381129",
    "end": "1384639"
  },
  {
    "text": "that it will help to prevent videos",
    "start": "1384639",
    "end": "1388259"
  },
  {
    "text": "attacks and of course last but not least",
    "start": "1388559",
    "end": "1392709"
  },
  {
    "text": "it is able to throttle and cache your",
    "start": "1392709",
    "end": "1396519"
  },
  {
    "text": "API such that it will protect your",
    "start": "1396519",
    "end": "1398289"
  },
  {
    "text": "back-end for example if to prevent your",
    "start": "1398289",
    "end": "1400629"
  },
  {
    "text": "back-end from being the so-called and",
    "start": "1400629",
    "end": "1403269"
  },
  {
    "text": "the resources being trained or consume",
    "start": "1403269",
    "end": "1405759"
  },
  {
    "text": "and bring on the whole service itself so",
    "start": "1405759",
    "end": "1407289"
  },
  {
    "text": "it can does traveling to your services",
    "start": "1407289",
    "end": "1412319"
  },
  {
    "text": "one minute okay so how would you build",
    "start": "1413890",
    "end": "1417800"
  },
  {
    "start": "1416000",
    "end": "1416000"
  },
  {
    "text": "such a service then so a simple one",
    "start": "1417800",
    "end": "1420650"
  },
  {
    "text": "quite often we have in our life we might",
    "start": "1420650",
    "end": "1423050"
  },
  {
    "text": "have done certain application that",
    "start": "1423050",
    "end": "1424490"
  },
  {
    "text": "converts one object to another object",
    "start": "1424490",
    "end": "1426680"
  },
  {
    "text": "for example here basically it's from one",
    "start": "1426680",
    "end": "1428810"
  },
  {
    "text": "image to a different formula image or",
    "start": "1428810",
    "end": "1430610"
  },
  {
    "text": "different size so what I have here",
    "start": "1430610",
    "end": "1432740"
  },
  {
    "text": "basically is an is a function itself",
    "start": "1432740",
    "end": "1435580"
  },
  {
    "text": "someone drops image into a bucket you",
    "start": "1435580",
    "end": "1438680"
  },
  {
    "text": "trigger a lambda function and it will",
    "start": "1438680",
    "end": "1441290"
  },
  {
    "text": "convert the image and return the image",
    "start": "1441290",
    "end": "1443300"
  },
  {
    "text": "to the client self so this whole thing",
    "start": "1443300",
    "end": "1445760"
  },
  {
    "text": "as you see there's no not a single",
    "start": "1445760",
    "end": "1448340"
  },
  {
    "text": "server that you have to manage I have",
    "start": "1448340",
    "end": "1453170"
  },
  {
    "text": "one minute to do a quick one",
    "start": "1453170",
    "end": "1457810"
  },
  {
    "text": "okay a simple one so what I have here",
    "start": "1465960",
    "end": "1470249"
  },
  {
    "text": "just to run through it okay I have e an",
    "start": "1470249",
    "end": "1473639"
  },
  {
    "text": "index.html or is residing on s3 I expose",
    "start": "1473639",
    "end": "1477299"
  },
  {
    "text": "it as a website it's a study website I",
    "start": "1477299",
    "end": "1480080"
  },
  {
    "text": "have an API gateway this is where the",
    "start": "1480080",
    "end": "1484919"
  },
  {
    "text": "image processing API resides this is",
    "start": "1484919",
    "end": "1487799"
  },
  {
    "text": "where I configure which slam dunk Shane",
    "start": "1487799",
    "end": "1490230"
  },
  {
    "text": "is going to talk to and I have a lambda",
    "start": "1490230",
    "end": "1497970"
  },
  {
    "text": "function itself so you can actually look",
    "start": "1497970",
    "end": "1499710"
  },
  {
    "text": "at it true for lambda you can actually",
    "start": "1499710",
    "end": "1501629"
  },
  {
    "text": "add attack or inline four so four for",
    "start": "1501629",
    "end": "1504749"
  },
  {
    "text": "this one I'm just using imagemagick",
    "start": "1504749",
    "end": "1506279"
  },
  {
    "text": "which is recites on T did for lambda",
    "start": "1506279",
    "end": "1509580"
  },
  {
    "text": "environment already so what it does",
    "start": "1509580",
    "end": "1511529"
  },
  {
    "text": "basically take the bucket because",
    "start": "1511529",
    "end": "1512669"
  },
  {
    "text": "certain size that you need of compare",
    "start": "1512669",
    "end": "1515249"
  },
  {
    "text": "the size of the image so let's click one",
    "start": "1515249",
    "end": "1520279"
  },
  {
    "text": "so I have one image here I'm gonna",
    "start": "1522679",
    "end": "1527399"
  },
  {
    "text": "change it to 200 so this is what it does",
    "start": "1527399",
    "end": "1533070"
  },
  {
    "text": "so locate the whole thing I do not need",
    "start": "1533070",
    "end": "1535259"
  },
  {
    "text": "a single server it's killed by itself as",
    "start": "1535259",
    "end": "1537480"
  },
  {
    "text": "the number of requests comes in you can",
    "start": "1537480",
    "end": "1538950"
  },
  {
    "text": "total or to the API gateway and the",
    "start": "1538950",
    "end": "1541409"
  },
  {
    "text": "longer function will scale it has a lot",
    "start": "1541409",
    "end": "1543059"
  },
  {
    "text": "of requests coming in another sample",
    "start": "1543059",
    "end": "1546960"
  },
  {
    "text": "that I can leave you with is the abort",
    "start": "1546960",
    "end": "1550230"
  },
  {
    "text": "right abort I can talk to a lambda",
    "start": "1550230",
    "end": "1552029"
  },
  {
    "text": "function what I have here basically its",
    "start": "1552029",
    "end": "1555980"
  },
  {
    "text": "fulfillment function such that you call",
    "start": "1555980",
    "end": "1558059"
  },
  {
    "text": "I'm not function to fulfill the bar so",
    "start": "1558059",
    "end": "1560399"
  },
  {
    "text": "same thing here for example I have a web",
    "start": "1560399",
    "end": "1564179"
  },
  {
    "text": "part line here let's say I have an",
    "start": "1564179",
    "end": "1568200"
  },
  {
    "text": "interest system that allows me to check",
    "start": "1568200",
    "end": "1569730"
  },
  {
    "text": "leaf so I want to check",
    "start": "1569730",
    "end": "1573648"
  },
  {
    "text": "alternatively well it doesn't apply to",
    "start": "1575700",
    "end": "1577929"
  },
  {
    "text": "me but let's try so based on the board",
    "start": "1577929",
    "end": "1581860"
  },
  {
    "text": "based on the labrum function basically",
    "start": "1581860",
    "end": "1584080"
  },
  {
    "text": "ask me okay that's a big question I need",
    "start": "1584080",
    "end": "1586030"
  },
  {
    "text": "to answer before I can get back to me so",
    "start": "1586030",
    "end": "1591720"
  },
  {
    "text": "yes of course I worked in Singapore yes",
    "start": "1591720",
    "end": "1596640"
  },
  {
    "text": "so Allah says 15 October look at it in",
    "start": "1596640",
    "end": "1599470"
  },
  {
    "text": "terms of Justin like an example how you",
    "start": "1599470",
    "end": "1602710"
  },
  {
    "text": "build all these services without having",
    "start": "1602710",
    "end": "1604390"
  },
  {
    "text": "to manage a single server so I know I'm",
    "start": "1604390",
    "end": "1608500"
  },
  {
    "text": "not sharing so I would say just quickly",
    "start": "1608500",
    "end": "1613929"
  },
  {
    "text": "type this and we start on the same day",
    "start": "1613929",
    "end": "1616870"
  },
  {
    "text": "that is born you know so what it does",
    "start": "1616870",
    "end": "1620050"
  },
  {
    "text": "basically knows the date tell you that",
    "start": "1620050",
    "end": "1622090"
  },
  {
    "text": "when you can start where does it end so",
    "start": "1622090",
    "end": "1624340"
  },
  {
    "text": "this is something that you can build to",
    "start": "1624340",
    "end": "1626290"
  },
  {
    "text": "a lambda function without having to",
    "start": "1626290",
    "end": "1628090"
  },
  {
    "text": "manage a single server at all okay with",
    "start": "1628090",
    "end": "1631690"
  },
  {
    "text": "that my time is stopped thank you",
    "start": "1631690",
    "end": "1635130"
  },
  {
    "text": "[Applause]",
    "start": "1635130",
    "end": "1639119"
  }
]