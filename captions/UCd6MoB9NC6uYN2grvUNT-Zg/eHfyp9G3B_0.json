[
  {
    "start": "0",
    "end": "27000"
  },
  {
    "text": "[Music]",
    "start": "50",
    "end": "1010"
  },
  {
    "text": "[Applause]",
    "start": "1010",
    "end": "4088"
  },
  {
    "text": "[Music]",
    "start": "4960",
    "end": "11540"
  },
  {
    "text": "hello I'm utsav A Cloud support engineer",
    "start": "11540",
    "end": "14880"
  },
  {
    "text": "here at the AWS office in Cape Town",
    "start": "14880",
    "end": "17160"
  },
  {
    "text": "today I'm going to show you how to",
    "start": "17160",
    "end": "18960"
  },
  {
    "text": "troubleshoot problems when you are",
    "start": "18960",
    "end": "21060"
  },
  {
    "text": "trying to connect to an Amazon",
    "start": "21060",
    "end": "22740"
  },
  {
    "text": "relational database service instance",
    "start": "22740",
    "end": "25080"
  },
  {
    "text": "let's get started",
    "start": "25080",
    "end": "27480"
  },
  {
    "start": "27000",
    "end": "43000"
  },
  {
    "text": "note that I have already configured an",
    "start": "27480",
    "end": "29820"
  },
  {
    "text": "Amazon RDS for postgres SQL instance and",
    "start": "29820",
    "end": "32279"
  },
  {
    "text": "I will be connecting from an Amazon",
    "start": "32279",
    "end": "34079"
  },
  {
    "text": "elastic compute Cloud instance that's",
    "start": "34079",
    "end": "36540"
  },
  {
    "text": "configured in the same VPC as the Amazon",
    "start": "36540",
    "end": "38760"
  },
  {
    "text": "RDS for postgresql instance using the",
    "start": "38760",
    "end": "41280"
  },
  {
    "text": "primary user",
    "start": "41280",
    "end": "43379"
  },
  {
    "start": "43000",
    "end": "140000"
  },
  {
    "text": "before connecting to the RDS instance",
    "start": "43379",
    "end": "45540"
  },
  {
    "text": "let's verify the status of the RDS",
    "start": "45540",
    "end": "48059"
  },
  {
    "text": "instance from the console to be sure",
    "start": "48059",
    "end": "50100"
  },
  {
    "text": "that it's in the available State we will",
    "start": "50100",
    "end": "53039"
  },
  {
    "text": "also confirm the endpoint of the",
    "start": "53039",
    "end": "54660"
  },
  {
    "text": "instance cross check the specific port",
    "start": "54660",
    "end": "56820"
  },
  {
    "text": "number of the RDS instance and confirm",
    "start": "56820",
    "end": "59219"
  },
  {
    "text": "the master username",
    "start": "59219",
    "end": "61559"
  },
  {
    "text": "to connect to the RDS instance I will",
    "start": "61559",
    "end": "64140"
  },
  {
    "text": "first log into the ec2 instance and try",
    "start": "64140",
    "end": "66900"
  },
  {
    "text": "to connect to the RDS instance through a",
    "start": "66900",
    "end": "69479"
  },
  {
    "text": "p SQL client it's best practice to",
    "start": "69479",
    "end": "72780"
  },
  {
    "text": "always use the RDS endpoint instead of",
    "start": "72780",
    "end": "75600"
  },
  {
    "text": "the IP address",
    "start": "75600",
    "end": "77760"
  },
  {
    "text": "if there is no client software such as",
    "start": "77760",
    "end": "80340"
  },
  {
    "text": "the P SQL or MySQL client to connect to",
    "start": "80340",
    "end": "83880"
  },
  {
    "text": "the RDS engine we can test The",
    "start": "83880",
    "end": "86280"
  },
  {
    "text": "Connection by using the telnet or NC",
    "start": "86280",
    "end": "88619"
  },
  {
    "text": "command",
    "start": "88619",
    "end": "90360"
  },
  {
    "text": "as the connection times out for using",
    "start": "90360",
    "end": "92759"
  },
  {
    "text": "telnet or P SQL let's check the RDS",
    "start": "92759",
    "end": "95939"
  },
  {
    "text": "instance Security Group and confirm that",
    "start": "95939",
    "end": "98460"
  },
  {
    "text": "there's the required inbound entry that",
    "start": "98460",
    "end": "101159"
  },
  {
    "text": "allows the connection from the ec2",
    "start": "101159",
    "end": "102960"
  },
  {
    "text": "instance",
    "start": "102960",
    "end": "104820"
  },
  {
    "text": "to be sure that the required entry is",
    "start": "104820",
    "end": "107340"
  },
  {
    "text": "not present let's check the ec2 instance",
    "start": "107340",
    "end": "110100"
  },
  {
    "text": "IP address from the ec2 console and then",
    "start": "110100",
    "end": "112979"
  },
  {
    "text": "add the inbound rule in the security",
    "start": "112979",
    "end": "114960"
  },
  {
    "text": "group of the RDS instance",
    "start": "114960",
    "end": "118520"
  },
  {
    "text": "now let's test the connection again",
    "start": "123420",
    "end": "127520"
  },
  {
    "text": "the connection works from the P SQL",
    "start": "133080",
    "end": "135540"
  },
  {
    "text": "client as well",
    "start": "135540",
    "end": "137879"
  },
  {
    "text": "let's now test the connection using our",
    "start": "137879",
    "end": "140040"
  },
  {
    "start": "140000",
    "end": "217000"
  },
  {
    "text": "laptop or local machine or Workstation",
    "start": "140040",
    "end": "144300"
  },
  {
    "text": "before connecting from the local laptop",
    "start": "144300",
    "end": "146220"
  },
  {
    "text": "we now know that we must add the",
    "start": "146220",
    "end": "149160"
  },
  {
    "text": "required inbound rule in the security",
    "start": "149160",
    "end": "150720"
  },
  {
    "text": "group of the RDS instance as we saw in",
    "start": "150720",
    "end": "153540"
  },
  {
    "text": "the test that we made with the ec2",
    "start": "153540",
    "end": "155580"
  },
  {
    "text": "instance previously",
    "start": "155580",
    "end": "158099"
  },
  {
    "text": "let's make the required change in the",
    "start": "158099",
    "end": "160200"
  },
  {
    "text": "security group and see if the connection",
    "start": "160200",
    "end": "162180"
  },
  {
    "text": "works",
    "start": "162180",
    "end": "164519"
  },
  {
    "text": "now let's try to connect",
    "start": "164519",
    "end": "167459"
  },
  {
    "text": "we can see the connection is failing",
    "start": "167459",
    "end": "170640"
  },
  {
    "text": "let's check the RDS console",
    "start": "170640",
    "end": "173580"
  },
  {
    "text": "here we can see that the instance is",
    "start": "173580",
    "end": "175860"
  },
  {
    "text": "configured with public accessibility set",
    "start": "175860",
    "end": "178080"
  },
  {
    "text": "to no",
    "start": "178080",
    "end": "179940"
  },
  {
    "text": "when connecting from the laptop the",
    "start": "179940",
    "end": "182099"
  },
  {
    "text": "connection is made over the internet",
    "start": "182099",
    "end": "184200"
  },
  {
    "text": "to connect we can set the option of",
    "start": "184200",
    "end": "186720"
  },
  {
    "text": "public accessibility to yes to allow",
    "start": "186720",
    "end": "189599"
  },
  {
    "text": "connection from a local machine",
    "start": "189599",
    "end": "192420"
  },
  {
    "text": "let's make the required modification",
    "start": "192420",
    "end": "196400"
  },
  {
    "text": "after the modification is completed",
    "start": "209819",
    "end": "212580"
  },
  {
    "text": "let's now try to connect again",
    "start": "212580",
    "end": "215700"
  },
  {
    "text": "we can see that it works now",
    "start": "215700",
    "end": "218700"
  },
  {
    "start": "217000",
    "end": "252000"
  },
  {
    "text": "in many scenarios because of compliance",
    "start": "218700",
    "end": "221400"
  },
  {
    "text": "reasons you might not be able to set",
    "start": "221400",
    "end": "223860"
  },
  {
    "text": "public accessibility to yes if this is",
    "start": "223860",
    "end": "226620"
  },
  {
    "text": "your scenario you can either use an ec2",
    "start": "226620",
    "end": "230220"
  },
  {
    "text": "instance as a Bastion host for SSH",
    "start": "230220",
    "end": "233040"
  },
  {
    "text": "tunneling",
    "start": "233040",
    "end": "234420"
  },
  {
    "text": "note that if you use this solution the",
    "start": "234420",
    "end": "238080"
  },
  {
    "text": "ec2 instance must be in the same VPC as",
    "start": "238080",
    "end": "241379"
  },
  {
    "text": "the RDS instance",
    "start": "241379",
    "end": "243120"
  },
  {
    "text": "or you can use side to side VPN or AWS",
    "start": "243120",
    "end": "247379"
  },
  {
    "text": "direct connect to connect to private RDS",
    "start": "247379",
    "end": "250560"
  },
  {
    "text": "instances",
    "start": "250560",
    "end": "252480"
  },
  {
    "start": "252000",
    "end": "273000"
  },
  {
    "text": "and now you know how to troubleshoot",
    "start": "252480",
    "end": "254400"
  },
  {
    "text": "problems when you are trying to connect",
    "start": "254400",
    "end": "256199"
  },
  {
    "text": "to an RDS instance thanks for watching",
    "start": "256199",
    "end": "259320"
  },
  {
    "text": "and happy cloud computing from all of us",
    "start": "259320",
    "end": "261479"
  },
  {
    "text": "here at AWS",
    "start": "261479",
    "end": "264560"
  },
  {
    "text": "foreign foreign",
    "start": "264620",
    "end": "268860"
  },
  {
    "text": "[Music]",
    "start": "270540",
    "end": "273739"
  }
]