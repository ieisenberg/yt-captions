[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "[Music]",
    "start": "650",
    "end": "1010"
  },
  {
    "text": "[Applause]",
    "start": "1010",
    "end": "4088"
  },
  {
    "text": "[Music]",
    "start": "4960",
    "end": "11679"
  },
  {
    "text": "hello my name is barry and i'm a",
    "start": "11920",
    "end": "13200"
  },
  {
    "text": "technical account manager here at the",
    "start": "13200",
    "end": "14639"
  },
  {
    "text": "aws office in dallas today i'm going to",
    "start": "14639",
    "end": "17600"
  },
  {
    "text": "show you how to restrict an amazon",
    "start": "17600",
    "end": "19520"
  },
  {
    "text": "simple storage service bucket using an",
    "start": "19520",
    "end": "21920"
  },
  {
    "text": "s3 bucket policy that denies all",
    "start": "21920",
    "end": "24080"
  },
  {
    "text": "requests unless those requests meet a",
    "start": "24080",
    "end": "26320"
  },
  {
    "text": "specific criteria let's get started in",
    "start": "26320",
    "end": "29119"
  },
  {
    "text": "this scenario let's consider a bucket",
    "start": "29119",
    "end": "30800"
  },
  {
    "start": "30000",
    "end": "95000"
  },
  {
    "text": "policy where the requesters access must",
    "start": "30800",
    "end": "33440"
  },
  {
    "text": "come from an authorized amazon virtual",
    "start": "33440",
    "end": "35680"
  },
  {
    "text": "private cloud endpoint to access bucket",
    "start": "35680",
    "end": "37920"
  },
  {
    "text": "objects",
    "start": "37920",
    "end": "39040"
  },
  {
    "text": "note there are various condition keys",
    "start": "39040",
    "end": "41360"
  },
  {
    "text": "that can be used for access restrictions",
    "start": "41360",
    "end": "43360"
  },
  {
    "text": "and all types of policies aws identity",
    "start": "43360",
    "end": "46160"
  },
  {
    "text": "and access management user policies",
    "start": "46160",
    "end": "48399"
  },
  {
    "text": "endpoint policies s3 bucket policies and",
    "start": "48399",
    "end": "51840"
  },
  {
    "text": "s3 acls must grant the necessary",
    "start": "51840",
    "end": "54480"
  },
  {
    "text": "permissions today we'll focus on bucket",
    "start": "54480",
    "end": "56879"
  },
  {
    "text": "policy examples that use these three",
    "start": "56879",
    "end": "58719"
  },
  {
    "text": "conditions use caution in production",
    "start": "58719",
    "end": "60879"
  },
  {
    "text": "environments and review your policy as",
    "start": "60879",
    "end": "62960"
  },
  {
    "text": "these examples use explicit deny",
    "start": "62960",
    "end": "64960"
  },
  {
    "text": "statements",
    "start": "64960",
    "end": "66240"
  },
  {
    "text": "our focus today is using several",
    "start": "66240",
    "end": "68080"
  },
  {
    "text": "parameters",
    "start": "68080",
    "end": "69600"
  },
  {
    "text": "source vpc to deny access to the bucket",
    "start": "69600",
    "end": "72159"
  },
  {
    "text": "if a vpc endpoint is not used",
    "start": "72159",
    "end": "74560"
  },
  {
    "text": "vpc source ip to deny access to your",
    "start": "74560",
    "end": "77439"
  },
  {
    "text": "bucket when a specific vpc citer range",
    "start": "77439",
    "end": "80560"
  },
  {
    "text": "or ip address isn't used and finally",
    "start": "80560",
    "end": "83759"
  },
  {
    "text": "source ip to restrict access to specific",
    "start": "83759",
    "end": "86720"
  },
  {
    "text": "public ip addresses or ranges note that",
    "start": "86720",
    "end": "89840"
  },
  {
    "text": "this condition cannot be used for",
    "start": "89840",
    "end": "92000"
  },
  {
    "text": "private vpc ip address ranges",
    "start": "92000",
    "end": "95119"
  },
  {
    "start": "95000",
    "end": "127000"
  },
  {
    "text": "let's start with a policy example that",
    "start": "95119",
    "end": "97040"
  },
  {
    "text": "uses an s3 vpc endpoint",
    "start": "97040",
    "end": "99840"
  },
  {
    "text": "as you can see this policy allows",
    "start": "99840",
    "end": "102320"
  },
  {
    "text": "requests only from sources from our vpc",
    "start": "102320",
    "end": "104960"
  },
  {
    "text": "endpoint as specified in the policy note",
    "start": "104960",
    "end": "107520"
  },
  {
    "text": "that because this policy uses an",
    "start": "107520",
    "end": "109360"
  },
  {
    "text": "explicit deny with conditions to allow",
    "start": "109360",
    "end": "111840"
  },
  {
    "text": "requests only from the vpc endpoint it",
    "start": "111840",
    "end": "115040"
  },
  {
    "text": "does block console access requests to",
    "start": "115040",
    "end": "117840"
  },
  {
    "text": "the bucket as seen here",
    "start": "117840",
    "end": "119759"
  },
  {
    "text": "again use caution with the actions that",
    "start": "119759",
    "end": "121920"
  },
  {
    "text": "you specify so that you prevent lockout",
    "start": "121920",
    "end": "124079"
  },
  {
    "text": "from modifying the bucket policy",
    "start": "124079",
    "end": "126320"
  },
  {
    "text": "let's test our policy from an instance",
    "start": "126320",
    "end": "128319"
  },
  {
    "start": "127000",
    "end": "142000"
  },
  {
    "text": "within a vpc that uses our s3 vpc",
    "start": "128319",
    "end": "131680"
  },
  {
    "text": "endpoint",
    "start": "131680",
    "end": "132879"
  },
  {
    "text": "as you can see requests that come from",
    "start": "132879",
    "end": "134959"
  },
  {
    "text": "our vpc endpoint are successful because",
    "start": "134959",
    "end": "137360"
  },
  {
    "text": "this vpc's route table uses a vpc",
    "start": "137360",
    "end": "140840"
  },
  {
    "text": "endpoint another use case occurs when",
    "start": "140840",
    "end": "143440"
  },
  {
    "start": "142000",
    "end": "167000"
  },
  {
    "text": "multiple endpoints might be configured",
    "start": "143440",
    "end": "145280"
  },
  {
    "text": "in the same vpc by specifying policy",
    "start": "145280",
    "end": "148080"
  },
  {
    "text": "that allows the vpc id",
    "start": "148080",
    "end": "150160"
  },
  {
    "text": "rather than the vpc endpoint id you can",
    "start": "150160",
    "end": "152879"
  },
  {
    "text": "manage access for all s3 vpc endpoints",
    "start": "152879",
    "end": "156400"
  },
  {
    "text": "as you can see we've modified our policy",
    "start": "156400",
    "end": "158800"
  },
  {
    "text": "to use aws source vpc and we've",
    "start": "158800",
    "end": "161920"
  },
  {
    "text": "specified our vpc id",
    "start": "161920",
    "end": "165680"
  },
  {
    "start": "167000",
    "end": "183000"
  },
  {
    "text": "let's test our policy modification",
    "start": "167680",
    "end": "171360"
  },
  {
    "text": "as you can see our requests were",
    "start": "171360",
    "end": "173200"
  },
  {
    "text": "successful and aws source vpc is useful",
    "start": "173200",
    "end": "176239"
  },
  {
    "text": "in a scenario where we might be using",
    "start": "176239",
    "end": "178159"
  },
  {
    "text": "multiple vpc endpoints within a single",
    "start": "178159",
    "end": "180959"
  },
  {
    "text": "vpc",
    "start": "180959",
    "end": "183120"
  },
  {
    "start": "183000",
    "end": "234000"
  },
  {
    "text": "with the current bucket policy a request",
    "start": "183120",
    "end": "185440"
  },
  {
    "text": "from the internet to list bucket objects",
    "start": "185440",
    "end": "187840"
  },
  {
    "text": "will still fail",
    "start": "187840",
    "end": "189599"
  },
  {
    "text": "now we'll add the source ip address of",
    "start": "189599",
    "end": "191519"
  },
  {
    "text": "our computer to the bucket policy",
    "start": "191519",
    "end": "195800"
  },
  {
    "text": "now that we've added the ip address",
    "start": "200800",
    "end": "202879"
  },
  {
    "text": "making the console requests we can",
    "start": "202879",
    "end": "204560"
  },
  {
    "text": "navigate back to the objects tab in the",
    "start": "204560",
    "end": "206640"
  },
  {
    "text": "s3 console",
    "start": "206640",
    "end": "208080"
  },
  {
    "text": "we can see that our policy allows",
    "start": "208080",
    "end": "209840"
  },
  {
    "text": "objects to be listed with these policy",
    "start": "209840",
    "end": "212159"
  },
  {
    "text": "modifications any user's outward bound",
    "start": "212159",
    "end": "215120"
  },
  {
    "text": "request from the ip address or the vpc",
    "start": "215120",
    "end": "218400"
  },
  {
    "text": "id can list the objects also these",
    "start": "218400",
    "end": "221280"
  },
  {
    "text": "conditions can be expanded by other keys",
    "start": "221280",
    "end": "224000"
  },
  {
    "text": "and values by using the aws policy",
    "start": "224000",
    "end": "226560"
  },
  {
    "text": "generator so now you've seen the various",
    "start": "226560",
    "end": "228799"
  },
  {
    "text": "ways that policy can be utilized to",
    "start": "228799",
    "end": "230879"
  },
  {
    "text": "restrict access to an amazon s3 bucket",
    "start": "230879",
    "end": "234080"
  },
  {
    "start": "234000",
    "end": "248000"
  },
  {
    "text": "thanks for watching and happy cloud",
    "start": "234080",
    "end": "235920"
  },
  {
    "text": "computing from all of us here at aws",
    "start": "235920",
    "end": "239070"
  },
  {
    "text": "[Applause]",
    "start": "239070",
    "end": "240840"
  },
  {
    "text": "[Music]",
    "start": "240840",
    "end": "243999"
  },
  {
    "text": "[Music]",
    "start": "246040",
    "end": "247360"
  },
  {
    "text": "you",
    "start": "247360",
    "end": "249439"
  }
]