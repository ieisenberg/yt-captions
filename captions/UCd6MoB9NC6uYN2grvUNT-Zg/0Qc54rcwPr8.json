[
  {
    "text": "architect here at AWS specifically",
    "start": "3140",
    "end": "6000"
  },
  {
    "text": "focused on the Microsoft workloads in",
    "start": "6000",
    "end": "8700"
  },
  {
    "text": "this short video we are going to see",
    "start": "8700",
    "end": "10440"
  },
  {
    "text": "about how AWS app to container helps you",
    "start": "10440",
    "end": "13440"
  },
  {
    "text": "to containerize and migrate your",
    "start": "13440",
    "end": "16139"
  },
  {
    "text": "existing application to understand bit",
    "start": "16139",
    "end": "18840"
  },
  {
    "text": "more on containerization it's a",
    "start": "18840",
    "end": "20880"
  },
  {
    "text": "multi-step process first understand the",
    "start": "20880",
    "end": "23460"
  },
  {
    "text": "application like what are the",
    "start": "23460",
    "end": "24960"
  },
  {
    "text": "dependencies and what are the third",
    "start": "24960",
    "end": "26460"
  },
  {
    "text": "party components in my application and",
    "start": "26460",
    "end": "28920"
  },
  {
    "text": "second is the container building like",
    "start": "28920",
    "end": "30539"
  },
  {
    "text": "you need to create a Docker file and",
    "start": "30539",
    "end": "32340"
  },
  {
    "text": "build the image and upload it and third",
    "start": "32340",
    "end": "34680"
  },
  {
    "text": "is the CI CD process like how I am going",
    "start": "34680",
    "end": "37680"
  },
  {
    "text": "to deploy the containers continuously",
    "start": "37680",
    "end": "40440"
  },
  {
    "text": "you know with why are some Automation",
    "start": "40440",
    "end": "42180"
  },
  {
    "text": "and last is the deployment",
    "start": "42180",
    "end": "43620"
  },
  {
    "text": "infrastructure ECS eks and the VPC",
    "start": "43620",
    "end": "47399"
  },
  {
    "text": "security network Auto scaling you have",
    "start": "47399",
    "end": "49559"
  },
  {
    "text": "to plan for all these let's see how app",
    "start": "49559",
    "end": "52920"
  },
  {
    "text": "to container solves most of the issues",
    "start": "52920",
    "end": "55020"
  },
  {
    "text": "what we just discussed AWS app to",
    "start": "55020",
    "end": "57539"
  },
  {
    "text": "container is a command line tool for",
    "start": "57539",
    "end": "59760"
  },
  {
    "text": "migrating and",
    "start": "59760",
    "end": "61460"
  },
  {
    "text": "modernizing.net web applications into",
    "start": "61460",
    "end": "63719"
  },
  {
    "text": "container format AWS app to container",
    "start": "63719",
    "end": "66900"
  },
  {
    "text": "analysis and Builds an inventory of",
    "start": "66900",
    "end": "69479"
  },
  {
    "text": "applications running in bare metal",
    "start": "69479",
    "end": "71180"
  },
  {
    "text": "virtual machines elastic compute Cloud",
    "start": "71180",
    "end": "73740"
  },
  {
    "text": "instances are in the cloud so what are",
    "start": "73740",
    "end": "76140"
  },
  {
    "text": "the benefits of AWS optic antenna it",
    "start": "76140",
    "end": "79680"
  },
  {
    "text": "Legacy app containerization with minimal",
    "start": "79680",
    "end": "82740"
  },
  {
    "text": "efforts and containerization at scale",
    "start": "82740",
    "end": "84900"
  },
  {
    "text": "best practices for containerization and",
    "start": "84900",
    "end": "87240"
  },
  {
    "text": "opinated AWS deployment artifacts how",
    "start": "87240",
    "end": "91080"
  },
  {
    "text": "AWS up to container works first it",
    "start": "91080",
    "end": "94020"
  },
  {
    "text": "discovers the application that is",
    "start": "94020",
    "end": "95640"
  },
  {
    "text": "running and then it analyzes the",
    "start": "95640",
    "end": "97560"
  },
  {
    "text": "application and extract the components",
    "start": "97560",
    "end": "100259"
  },
  {
    "text": "that are required for the application to",
    "start": "100259",
    "end": "102060"
  },
  {
    "text": "run and containerize is the component",
    "start": "102060",
    "end": "104100"
  },
  {
    "text": "and finally it creates the deployment",
    "start": "104100",
    "end": "106439"
  },
  {
    "text": "artifacts and if you want to use that to",
    "start": "106439",
    "end": "109560"
  },
  {
    "text": "configure in your CI CD pipeline then",
    "start": "109560",
    "end": "111299"
  },
  {
    "text": "you can leverage it or you can directly",
    "start": "111299",
    "end": "113280"
  },
  {
    "text": "want AWS app to continue to deploy that",
    "start": "113280",
    "end": "116100"
  },
  {
    "text": "to AWS it does so so that's how AWS app",
    "start": "116100",
    "end": "119100"
  },
  {
    "text": "to container works",
    "start": "119100",
    "end": "122000"
  },
  {
    "text": "so here is a quick architecture to show",
    "start": "123000",
    "end": "125100"
  },
  {
    "text": "you what can be the source and target",
    "start": "125100",
    "end": "126899"
  },
  {
    "text": "with AWS up to container like where can",
    "start": "126899",
    "end": "129959"
  },
  {
    "text": "my source applications sit in and what",
    "start": "129959",
    "end": "131760"
  },
  {
    "text": "are the targets that AWS after container",
    "start": "131760",
    "end": "133920"
  },
  {
    "text": "supports like Amazon ECS eks apprender",
    "start": "133920",
    "end": "137340"
  },
  {
    "text": "and you can store the images to Amazon",
    "start": "137340",
    "end": "139260"
  },
  {
    "text": "ECR asphalt and it supports both the",
    "start": "139260",
    "end": "142200"
  },
  {
    "text": "Java and the dotnet workloads for",
    "start": "142200",
    "end": "144360"
  },
  {
    "text": "example if you have your legacy",
    "start": "144360",
    "end": "146340"
  },
  {
    "text": "application that is dotnet frame of 4.5",
    "start": "146340",
    "end": "148800"
  },
  {
    "text": "hosted in Microsoft IIs then you can",
    "start": "148800",
    "end": "152760"
  },
  {
    "text": "leverage AWS app to container to deploy",
    "start": "152760",
    "end": "155280"
  },
  {
    "text": "that to Amazon ECS or eks depends on the",
    "start": "155280",
    "end": "157800"
  },
  {
    "text": "use case and it supports the Java",
    "start": "157800",
    "end": "159959"
  },
  {
    "text": "applications as well let's see a quick",
    "start": "159959",
    "end": "162480"
  },
  {
    "text": "demo on how AWS up to container works",
    "start": "162480",
    "end": "165840"
  },
  {
    "text": "for this demo I have used two machines",
    "start": "165840",
    "end": "168720"
  },
  {
    "text": "so one is the source mission where my",
    "start": "168720",
    "end": "171000"
  },
  {
    "text": "actual application is running and",
    "start": "171000",
    "end": "173040"
  },
  {
    "text": "another one is my worker machine where",
    "start": "173040",
    "end": "175620"
  },
  {
    "text": "I'm actually installing the AWS app to",
    "start": "175620",
    "end": "178080"
  },
  {
    "text": "container and containerizing it and",
    "start": "178080",
    "end": "180300"
  },
  {
    "text": "deploying the artifacts to AWS cloud",
    "start": "180300",
    "end": "183780"
  },
  {
    "text": "so let's take a look at my source server",
    "start": "183780",
    "end": "186420"
  },
  {
    "text": "as you could see in the screen so this",
    "start": "186420",
    "end": "188400"
  },
  {
    "text": "is my source server and I have my sample",
    "start": "188400",
    "end": "191340"
  },
  {
    "text": "application that is dotnet new which is",
    "start": "191340",
    "end": "193920"
  },
  {
    "text": "a.net framework based application which",
    "start": "193920",
    "end": "196080"
  },
  {
    "text": "is running in the IIs",
    "start": "196080",
    "end": "198840"
  },
  {
    "text": "and I have enabled Windows Remote",
    "start": "198840",
    "end": "201480"
  },
  {
    "text": "Management protocol so that my work",
    "start": "201480",
    "end": "204360"
  },
  {
    "text": "permission can communicate with my",
    "start": "204360",
    "end": "206099"
  },
  {
    "text": "source machine so it is very good",
    "start": "206099",
    "end": "208560"
  },
  {
    "text": "architecture for you to work with a",
    "start": "208560",
    "end": "210360"
  },
  {
    "text": "source machine and just do all the",
    "start": "210360",
    "end": "212459"
  },
  {
    "text": "operations in your work commission as",
    "start": "212459",
    "end": "213959"
  },
  {
    "text": "you can scale it for multiple Source",
    "start": "213959",
    "end": "216480"
  },
  {
    "text": "servers when you actually work in a",
    "start": "216480",
    "end": "218220"
  },
  {
    "text": "worker machine rather than directly",
    "start": "218220",
    "end": "220260"
  },
  {
    "text": "working in Ansel Source machine",
    "start": "220260",
    "end": "223760"
  },
  {
    "text": "so this is my worker mission where I",
    "start": "224340",
    "end": "227040"
  },
  {
    "text": "have actually installed AWS app to",
    "start": "227040",
    "end": "229200"
  },
  {
    "text": "container and I have enabled relevant",
    "start": "229200",
    "end": "231299"
  },
  {
    "text": "protocol for my worker machine to",
    "start": "231299",
    "end": "233760"
  },
  {
    "text": "communicate with Source server",
    "start": "233760",
    "end": "236099"
  },
  {
    "text": "so so I am going to start interacting",
    "start": "236099",
    "end": "238200"
  },
  {
    "text": "with app to container tool with the help",
    "start": "238200",
    "end": "240060"
  },
  {
    "text": "of command sets first thing I'm going to",
    "start": "240060",
    "end": "242760"
  },
  {
    "text": "do is like initialize the app to",
    "start": "242760",
    "end": "245040"
  },
  {
    "text": "container",
    "start": "245040",
    "end": "246360"
  },
  {
    "text": "let's type in the command of up to",
    "start": "246360",
    "end": "249180"
  },
  {
    "text": "container init",
    "start": "249180",
    "end": "251280"
  },
  {
    "text": "just for Simplicity I have noted on the",
    "start": "251280",
    "end": "253379"
  },
  {
    "text": "comments here",
    "start": "253379",
    "end": "255920"
  },
  {
    "text": "so first thing we are going to configure",
    "start": "257880",
    "end": "260340"
  },
  {
    "text": "the app to container so it is using a",
    "start": "260340",
    "end": "262919"
  },
  {
    "text": "default workspace where it will actually",
    "start": "262919",
    "end": "265199"
  },
  {
    "text": "store the artifacts whatever that is",
    "start": "265199",
    "end": "267300"
  },
  {
    "text": "being generated throughout the process",
    "start": "267300",
    "end": "268800"
  },
  {
    "text": "so I'm just going to leave it as it is",
    "start": "268800",
    "end": "271160"
  },
  {
    "text": "and it is it requires relevant",
    "start": "271160",
    "end": "274259"
  },
  {
    "text": "privileges to run app to container so I",
    "start": "274259",
    "end": "276419"
  },
  {
    "text": "am using the default instance profile",
    "start": "276419",
    "end": "278639"
  },
  {
    "text": "here I'm just going to say why",
    "start": "278639",
    "end": "282360"
  },
  {
    "text": "and the default region it asking me for",
    "start": "282360",
    "end": "285660"
  },
  {
    "text": "S3 bucket where you want to store the",
    "start": "285660",
    "end": "288360"
  },
  {
    "text": "artifacts so I'm just going to configure",
    "start": "288360",
    "end": "290940"
  },
  {
    "text": "the S3 bucket whatever I have create so",
    "start": "290940",
    "end": "293580"
  },
  {
    "text": "do you want agree to report the metrics",
    "start": "293580",
    "end": "295500"
  },
  {
    "text": "I'm going to say yes do you want to",
    "start": "295500",
    "end": "297180"
  },
  {
    "text": "upload a log so I'm going to say yes do",
    "start": "297180",
    "end": "298979"
  },
  {
    "text": "you want to sign the images I'm going to",
    "start": "298979",
    "end": "300720"
  },
  {
    "text": "say no",
    "start": "300720",
    "end": "303139"
  },
  {
    "text": "so with this the initialization is",
    "start": "304139",
    "end": "306419"
  },
  {
    "text": "complete now we are going to set it for",
    "start": "306419",
    "end": "308820"
  },
  {
    "text": "remote configure basically it is going",
    "start": "308820",
    "end": "311100"
  },
  {
    "text": "to consume the machine",
    "start": "311100",
    "end": "313800"
  },
  {
    "text": "The Source machine here so I'm going to",
    "start": "313800",
    "end": "317340"
  },
  {
    "text": "configure the remote here so I have used",
    "start": "317340",
    "end": "320460"
  },
  {
    "text": "the private IP of my source Mission as a",
    "start": "320460",
    "end": "323220"
  },
  {
    "text": "Target here",
    "start": "323220",
    "end": "325759"
  },
  {
    "text": "so I'm just going to give like couple of",
    "start": "328560",
    "end": "330539"
  },
  {
    "text": "seconds for it to generate the inventory",
    "start": "330539",
    "end": "332880"
  },
  {
    "text": "out of it so that it will list down the",
    "start": "332880",
    "end": "335400"
  },
  {
    "text": "what all the applications that are",
    "start": "335400",
    "end": "337020"
  },
  {
    "text": "running in your Source server",
    "start": "337020",
    "end": "339600"
  },
  {
    "text": "let's come back once the inventory",
    "start": "339600",
    "end": "342060"
  },
  {
    "text": "command has been executed successfully",
    "start": "342060",
    "end": "345120"
  },
  {
    "text": "as you could see now inventory command",
    "start": "345120",
    "end": "347880"
  },
  {
    "text": "has been executed successfully and I'm",
    "start": "347880",
    "end": "350220"
  },
  {
    "text": "going to show it to you show you how the",
    "start": "350220",
    "end": "352320"
  },
  {
    "text": "inventory.json looks like",
    "start": "352320",
    "end": "354479"
  },
  {
    "text": "and what it contains",
    "start": "354479",
    "end": "357979"
  },
  {
    "text": "so as you could see here my source",
    "start": "365100",
    "end": "367020"
  },
  {
    "text": "server has two applications that are",
    "start": "367020",
    "end": "368699"
  },
  {
    "text": "running in my IIs and DNN is a sample",
    "start": "368699",
    "end": "371520"
  },
  {
    "text": "application what I'm going to",
    "start": "371520",
    "end": "372900"
  },
  {
    "text": "containerize now so I'm just making a",
    "start": "372900",
    "end": "375360"
  },
  {
    "text": "note of this application ID so once this",
    "start": "375360",
    "end": "378360"
  },
  {
    "text": "inventory has analyzed so I'm going to",
    "start": "378360",
    "end": "381000"
  },
  {
    "text": "perform a deep analysis on my",
    "start": "381000",
    "end": "383580"
  },
  {
    "text": "application so I'm just going to run",
    "start": "383580",
    "end": "385740"
  },
  {
    "text": "that particular command",
    "start": "385740",
    "end": "387479"
  },
  {
    "text": "so as you could see here so I'm",
    "start": "387479",
    "end": "389520"
  },
  {
    "text": "instructing the app to container to",
    "start": "389520",
    "end": "391380"
  },
  {
    "text": "remotely analyze the application ID of",
    "start": "391380",
    "end": "393960"
  },
  {
    "text": "my source and it is sitting in my source",
    "start": "393960",
    "end": "396840"
  },
  {
    "text": "server which is like 10.0.1.104",
    "start": "396840",
    "end": "401160"
  },
  {
    "text": "so what happens in this stage the tool",
    "start": "404039",
    "end": "406560"
  },
  {
    "text": "performs deep analysis on the",
    "start": "406560",
    "end": "408720"
  },
  {
    "text": "application whatever you are requesting",
    "start": "408720",
    "end": "410400"
  },
  {
    "text": "here and it will list down what are the",
    "start": "410400",
    "end": "412620"
  },
  {
    "text": "network ports that needs to be open what",
    "start": "412620",
    "end": "414539"
  },
  {
    "text": "is the framework that is required and",
    "start": "414539",
    "end": "416160"
  },
  {
    "text": "all those information it provides you",
    "start": "416160",
    "end": "418740"
  },
  {
    "text": "so let's give about few seconds for this",
    "start": "418740",
    "end": "421440"
  },
  {
    "text": "tool to complete the analysis and let's",
    "start": "421440",
    "end": "423539"
  },
  {
    "text": "come back once it is complete okay now",
    "start": "423539",
    "end": "426120"
  },
  {
    "text": "that the analysis is complete I am going",
    "start": "426120",
    "end": "428280"
  },
  {
    "text": "to show it to you how analysis.json",
    "start": "428280",
    "end": "430680"
  },
  {
    "text": "looks like for that I am copying the",
    "start": "430680",
    "end": "432780"
  },
  {
    "text": "path where my analysis.json should send",
    "start": "432780",
    "end": "435060"
  },
  {
    "text": "and I'm opening up the file explorer",
    "start": "435060",
    "end": "439699"
  },
  {
    "text": "and here is the analysis.json file so as",
    "start": "440340",
    "end": "444300"
  },
  {
    "text": "you could see here it doesn't have a",
    "start": "444300",
    "end": "446220"
  },
  {
    "text": "container base image so we are going to",
    "start": "446220",
    "end": "447900"
  },
  {
    "text": "configure it and it has two sections one",
    "start": "447900",
    "end": "450180"
  },
  {
    "text": "is the editable and the non-editable",
    "start": "450180",
    "end": "451860"
  },
  {
    "text": "section like the application is running",
    "start": "451860",
    "end": "454139"
  },
  {
    "text": "on Port 80 so it is going to run again",
    "start": "454139",
    "end": "456360"
  },
  {
    "text": "under Port 80 so I'm going to give a",
    "start": "456360",
    "end": "458580"
  },
  {
    "text": "container base image here",
    "start": "458580",
    "end": "460560"
  },
  {
    "text": "so for this I have used 2012 server as",
    "start": "460560",
    "end": "464039"
  },
  {
    "text": "my base so server so I'm going to",
    "start": "464039",
    "end": "466380"
  },
  {
    "text": "upgrade it to 2019 during the",
    "start": "466380",
    "end": "468180"
  },
  {
    "text": "containerization process so I'm going to",
    "start": "468180",
    "end": "470099"
  },
  {
    "text": "give the source base image of 2019 so in",
    "start": "470099",
    "end": "475139"
  },
  {
    "text": "addition to containerizing your",
    "start": "475139",
    "end": "476699"
  },
  {
    "text": "application so AWS up to container will",
    "start": "476699",
    "end": "479160"
  },
  {
    "text": "also help you to actually upgrade your",
    "start": "479160",
    "end": "481979"
  },
  {
    "text": "operating system and then once this",
    "start": "481979",
    "end": "484380"
  },
  {
    "text": "analysis is complete I am going to",
    "start": "484380",
    "end": "486180"
  },
  {
    "text": "remotely extract the application",
    "start": "486180",
    "end": "488099"
  },
  {
    "text": "components like it is going to create a",
    "start": "488099",
    "end": "490319"
  },
  {
    "text": "zip of the executables in the source",
    "start": "490319",
    "end": "493440"
  },
  {
    "text": "server I'm just going to run that",
    "start": "493440",
    "end": "495780"
  },
  {
    "text": "command",
    "start": "495780",
    "end": "498139"
  },
  {
    "text": "and what happens in this step is it's",
    "start": "500039",
    "end": "502259"
  },
  {
    "text": "going to the source server and it is",
    "start": "502259",
    "end": "504419"
  },
  {
    "text": "getting you the executable files and",
    "start": "504419",
    "end": "506879"
  },
  {
    "text": "creating a zip out of it and that zip",
    "start": "506879",
    "end": "508919"
  },
  {
    "text": "will be copied over to the remote server",
    "start": "508919",
    "end": "510900"
  },
  {
    "text": "basically the worker machine here",
    "start": "510900",
    "end": "514620"
  },
  {
    "text": "okay now the extraction is complete I'm",
    "start": "514620",
    "end": "518459"
  },
  {
    "text": "going so next I'm going to run the",
    "start": "518459",
    "end": "521099"
  },
  {
    "text": "containerize command basically to create",
    "start": "521099",
    "end": "523260"
  },
  {
    "text": "the images out of it",
    "start": "523260",
    "end": "527180"
  },
  {
    "text": "and during this page using the docker",
    "start": "532080",
    "end": "535080"
  },
  {
    "text": "file that has been generated by the tool",
    "start": "535080",
    "end": "536820"
  },
  {
    "text": "a container image has been created and I",
    "start": "536820",
    "end": "539279"
  },
  {
    "text": "am going to show you in my local Docker",
    "start": "539279",
    "end": "541800"
  },
  {
    "text": "how the image looks like and then we",
    "start": "541800",
    "end": "544019"
  },
  {
    "text": "will",
    "start": "544019",
    "end": "545459"
  },
  {
    "text": "check what are the components that are",
    "start": "545459",
    "end": "547500"
  },
  {
    "text": "being generated out of it",
    "start": "547500",
    "end": "549959"
  },
  {
    "text": "so it's going to take about few minutes",
    "start": "549959",
    "end": "551880"
  },
  {
    "text": "based on the application size and",
    "start": "551880",
    "end": "555480"
  },
  {
    "text": "okay now the containerization stage is",
    "start": "555480",
    "end": "558120"
  },
  {
    "text": "complete",
    "start": "558120",
    "end": "560660"
  },
  {
    "text": "so as a next step I am going to generate",
    "start": "561000",
    "end": "563279"
  },
  {
    "text": "the deployment files",
    "start": "563279",
    "end": "567180"
  },
  {
    "text": "so for that I am copying the command",
    "start": "567180",
    "end": "569820"
  },
  {
    "text": "here and going to run it",
    "start": "569820",
    "end": "573800"
  },
  {
    "text": "so so I'm not going to actually generate",
    "start": "578160",
    "end": "581459"
  },
  {
    "text": "the pipeline here I'm going to directly",
    "start": "581459",
    "end": "583380"
  },
  {
    "text": "going to instruct the tool to deploy the",
    "start": "583380",
    "end": "585420"
  },
  {
    "text": "artifacts so I'm just going to deploy",
    "start": "585420",
    "end": "588720"
  },
  {
    "text": "the cloud formation command here",
    "start": "588720",
    "end": "592699"
  },
  {
    "text": "it took me like three minutes for the",
    "start": "594120",
    "end": "596580"
  },
  {
    "text": "completion and as you could see here the",
    "start": "596580",
    "end": "599040"
  },
  {
    "text": "application that has been running in",
    "start": "599040",
    "end": "600720"
  },
  {
    "text": "Windows Server 2012 has been migrated",
    "start": "600720",
    "end": "603300"
  },
  {
    "text": "are containerized to 2019 to Amazon ECS",
    "start": "603300",
    "end": "607620"
  },
  {
    "text": "very quickly with the help of AWS app to",
    "start": "607620",
    "end": "610080"
  },
  {
    "text": "container with a set of few commands",
    "start": "610080",
    "end": "611820"
  },
  {
    "text": "that's how very quickly you can work",
    "start": "611820",
    "end": "613800"
  },
  {
    "text": "with AWS app to contact with this I",
    "start": "613800",
    "end": "617160"
  },
  {
    "text": "would like to say thank you for your",
    "start": "617160",
    "end": "619019"
  },
  {
    "text": "time and now it's your turn to try AWS",
    "start": "619019",
    "end": "622260"
  },
  {
    "text": "up to container thank you",
    "start": "622260",
    "end": "625820"
  }
]