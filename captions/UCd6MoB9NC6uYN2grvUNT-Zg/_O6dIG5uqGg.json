[
  {
    "start": "0",
    "end": "88000"
  },
  {
    "text": "hi everyone welcome my name is Mike Rima I am a senior cloud security engineer at",
    "start": "1669",
    "end": "8790"
  },
  {
    "text": "Netflix and at Netflix one of my primary duties is to come up with security",
    "start": "8790",
    "end": "13980"
  },
  {
    "text": "solutions to Netflix is extremely vast and rapidly growing AWS infrastructure",
    "start": "13980",
    "end": "19220"
  },
  {
    "text": "and talking to a number of AWS customers over the years both large and small",
    "start": "19220",
    "end": "24289"
  },
  {
    "text": "there's a number of security use cases and challenges that seem to affect a wide range of customers one of them is",
    "start": "24289",
    "end": "31050"
  },
  {
    "text": "inventory collection so for today's talk we're gonna discuss how we can inventory track and respond to AWS asset changes",
    "start": "31050",
    "end": "39329"
  },
  {
    "text": "within seconds at scale so for today's agenda we're gonna discuss why we're",
    "start": "39329",
    "end": "45930"
  },
  {
    "text": "here what exactly we're trying to solve we're gonna discuss some inventory collection approaches that you can take",
    "start": "45930",
    "end": "51930"
  },
  {
    "text": "in your environment we're gonna talk about a open source tool that we currently own called security monkey",
    "start": "51930",
    "end": "58140"
  },
  {
    "text": "very popular tool we're also going to talk about some challenges that we have faced with security monkey and some",
    "start": "58140",
    "end": "64739"
  },
  {
    "text": "challenges that you might face if you were to build an inventory collection system yourself we're also developing a",
    "start": "64739",
    "end": "71130"
  },
  {
    "text": "new system called historical that we're going to give a deep dive in and lastly we're going to discuss the desired AWS",
    "start": "71130",
    "end": "78240"
  },
  {
    "text": "infrastructure state that we want to obtain at Netflix so are we all here why",
    "start": "78240",
    "end": "85320"
  },
  {
    "text": "what exactly are we trying to solve knowing is half the battle",
    "start": "85320",
    "end": "90540"
  },
  {
    "start": "88000",
    "end": "88000"
  },
  {
    "text": "you need to have inventory and visibility in your vast AWS infrastructure with this you can answer",
    "start": "90540",
    "end": "98310"
  },
  {
    "text": "a number of very serious questions for example which AWS resources do you have",
    "start": "98310",
    "end": "104100"
  },
  {
    "text": "deployed in your environment where are they deployed are they configured",
    "start": "104100",
    "end": "109200"
  },
  {
    "text": "securely did their configuration change and who updated created or deleted a",
    "start": "109200",
    "end": "115079"
  },
  {
    "text": "given asset in your environment when did they do it and how did they do it being",
    "start": "115079",
    "end": "121649"
  },
  {
    "start": "121000",
    "end": "121000"
  },
  {
    "text": "able to answer these questions are important because it allows you to address a number of serious security use cases that you may have take for example",
    "start": "121649",
    "end": "129330"
  },
  {
    "text": "if you are involved in digital forensics and Incident Response if you are involved in dfi are and you're tracking an incident",
    "start": "129330",
    "end": "135870"
  },
  {
    "text": "you have to answer all of those questions did you Bing have you been compromised",
    "start": "135870",
    "end": "141720"
  },
  {
    "text": "how do you know that you want to detect if you have organizational policy violations where you have applications",
    "start": "141720",
    "end": "148440"
  },
  {
    "text": "that can access resources that they shouldn't be accessing if that's the case you want to fix that immediately",
    "start": "148440",
    "end": "153930"
  },
  {
    "text": "you also want to determine if you have publicly accessible resources sometimes",
    "start": "153930",
    "end": "160440"
  },
  {
    "text": "it's okay to have a public s3 bucket other times it's not you want to have inventory of which ones are public and",
    "start": "160440",
    "end": "166049"
  },
  {
    "text": "which ones aren't you also want to know if you have any tooling that is creating and secure by default configuration of",
    "start": "166049",
    "end": "172799"
  },
  {
    "text": "resources for example do you have tools that are provisioning s3 buckets to be",
    "start": "172799",
    "end": "178170"
  },
  {
    "text": "public by default if so you'll want to fix that immediately you also want to",
    "start": "178170",
    "end": "183810"
  },
  {
    "text": "determine the resource ownership of the assets in your infrastructure who created them why let's discuss some",
    "start": "183810",
    "end": "193709"
  },
  {
    "text": "approaches to inventory collection that we can take this is a security talk and",
    "start": "193709",
    "end": "200069"
  },
  {
    "start": "198000",
    "end": "198000"
  },
  {
    "text": "so there's a number of requirements that we have to meet for security we need to",
    "start": "200069",
    "end": "205650"
  },
  {
    "text": "have timely and accurate inventory of our entire infrastructure if it's not timely or accurate it doesn't serve you",
    "start": "205650",
    "end": "211920"
  },
  {
    "text": "any good you also want to have a full view of everything you want to look at",
    "start": "211920",
    "end": "218370"
  },
  {
    "text": "every account every region you want a single pane of glass with everything at your fingertips there's also the",
    "start": "218370",
    "end": "226109"
  },
  {
    "text": "attribution aspect we'll call this the cloud trail context cloud trail is a",
    "start": "226109",
    "end": "231150"
  },
  {
    "text": "feature of AWS that logs all API calls that are made against your environment you absolutely need to have cloud trail",
    "start": "231150",
    "end": "238349"
  },
  {
    "text": "enabled if you want to have a good security story in AWS it will give you the who the what the where the when and",
    "start": "238349",
    "end": "244230"
  },
  {
    "text": "the how to the resources that you have and you also want that change history this is extremely important to know what",
    "start": "244230",
    "end": "251669"
  },
  {
    "text": "changes were made as well as when you're debugging an access control issue to see did something change it broke something",
    "start": "251669",
    "end": "259910"
  },
  {
    "text": "so how can we collect inventory well there's two main approaches there's a",
    "start": "259910",
    "end": "265409"
  },
  {
    "text": "polling approach where you periodic we asked AWS what's the state of my infrastructure and we're going to call",
    "start": "265409",
    "end": "271860"
  },
  {
    "text": "this the are we there yet approach to inventory collection and then there's an event-driven approach where AWS will",
    "start": "271860",
    "end": "278310"
  },
  {
    "text": "actually tell you when your infrastructure changes there are pros",
    "start": "278310",
    "end": "283410"
  },
  {
    "start": "282000",
    "end": "282000"
  },
  {
    "text": "and cons to both approaches to polling the pros are that you can get a full and",
    "start": "283410",
    "end": "288900"
  },
  {
    "text": "complete inventory of all of your resources on demand whenever you need it so if you want to see all the security",
    "start": "288900",
    "end": "295410"
  },
  {
    "text": "groups in a given accounting region you simply issue a describe security groups call and it will give you all your",
    "start": "295410",
    "end": "300900"
  },
  {
    "text": "security groups for that account and region that's great but there's a number of cons to this approach as well when",
    "start": "300900",
    "end": "307979"
  },
  {
    "text": "you have very large AWS infrastructures they tend to get very slow at polling",
    "start": "307979",
    "end": "313040"
  },
  {
    "text": "this is a problem that we have at Netflix we have so many resources that it just takes too long",
    "start": "313040",
    "end": "319050"
  },
  {
    "text": "to get a list of all of them another big problem that we have is for certain api's like describe instances we",
    "start": "319050",
    "end": "326220"
  },
  {
    "text": "actually won't get a response back you'll actually time out because we have so many instances so we have to be",
    "start": "326220",
    "end": "331919"
  },
  {
    "text": "careful of how we frame these describe calls where we have to provide special filters and so we could get responses",
    "start": "331919",
    "end": "337169"
  },
  {
    "text": "back in a timely manner one problem too is that you might not",
    "start": "337169",
    "end": "342479"
  },
  {
    "text": "see what new changes happen since you last issued a describe call so York if your infrastructure is changing",
    "start": "342479",
    "end": "348479"
  },
  {
    "text": "frequently you'll have to issue many describe calls very aggressively in order to reduce the latency between when",
    "start": "348479",
    "end": "354690"
  },
  {
    "text": "you saw something and when you saw it again this of course has a big problem with rate limiting who here has problems",
    "start": "354690",
    "end": "361560"
  },
  {
    "text": "with rate limiting a couple people raise their hands this is a big problem at Netflix the more stuff you have the more",
    "start": "361560",
    "end": "369000"
  },
  {
    "text": "API calls you need to issue the more API calls you issue the more likely you are to be rate limited like I said earlier",
    "start": "369000",
    "end": "375960"
  },
  {
    "text": "this is the are we there yet approach to inventory collection if you constantly ask someone are we there yet are we",
    "start": "375960",
    "end": "381630"
  },
  {
    "text": "there yet are we there yet they're going to get bothered with you tell you to stop an AWS does this in the form of a",
    "start": "381630",
    "end": "387210"
  },
  {
    "text": "rate limit because you're not AWS there's only customers they have lots of customers and they have to make sure",
    "start": "387210",
    "end": "392610"
  },
  {
    "text": "that their services are up and running for every single customer and if you get rate limited that's really going to slow",
    "start": "392610",
    "end": "399690"
  },
  {
    "text": "you down but now you can't do Shu anymore API calls until that rate limit expires another",
    "start": "399690",
    "end": "405990"
  },
  {
    "text": "issue is that you don't get the cloud trail context you want to know given these resources",
    "start": "405990",
    "end": "411990"
  },
  {
    "text": "who made them how were they modified when and how cloud roll is stored",
    "start": "411990",
    "end": "417060"
  },
  {
    "text": "somewhere else so you need to do this non-trivial process of mapping your cloud trail data with your inventory in",
    "start": "417060",
    "end": "423240"
  },
  {
    "text": "order to figure out that information which is very hard to do event-driven",
    "start": "423240",
    "end": "436680"
  },
  {
    "start": "435000",
    "end": "435000"
  },
  {
    "text": "approaches so the pros to an inventor of an approach is that they're fast you can",
    "start": "436680",
    "end": "441720"
  },
  {
    "text": "react to changes as they happen immediately this allows you to get a timely state of your infrastructure and",
    "start": "441720",
    "end": "448140"
  },
  {
    "text": "also allows you to react to changes as they occur so if you see something in your infrastructure that is insecure you",
    "start": "448140",
    "end": "455250"
  },
  {
    "text": "can very quickly react to that and fix it and this can also reduce rate limiting because you're only responding",
    "start": "455250",
    "end": "461160"
  },
  {
    "text": "to the actual legitimate changes in your infrastructure there's constant this approach as well they tend to be very",
    "start": "461160",
    "end": "468360"
  },
  {
    "text": "complex there are lots of components that make this work as you'll see later there's also a big problem that with",
    "start": "468360",
    "end": "475920"
  },
  {
    "text": "event loss enos Amazon does a great job at delivering events to you but it's a",
    "start": "475920",
    "end": "482250"
  },
  {
    "text": "distributed system and distributed systems have failures you have to be tolerant of those failures and in order",
    "start": "482250",
    "end": "489420"
  },
  {
    "text": "to account for any missed event you might get you're still gonna have to pull anyway so even in an event",
    "start": "489420",
    "end": "495530"
  },
  {
    "text": "infrastructure you'll still have to have a pulling component but the benefit is you don't have to pull nearly as",
    "start": "495530",
    "end": "500970"
  },
  {
    "text": "aggressively you can pull every couple of hours and still be okay who here uses",
    "start": "500970",
    "end": "507420"
  },
  {
    "text": "security monkey bunch of hands went up on that one security monkey is an open-source tool",
    "start": "507420",
    "end": "513210"
  },
  {
    "text": "that we developed in 2014 it is a polling based infrastructure is bit bait",
    "start": "513210",
    "end": "519990"
  },
  {
    "text": "based on Python it was originally developed by Patrick Healy who's a very talented engineer on my team the way",
    "start": "519990",
    "end": "525840"
  },
  {
    "text": "security monkey works is that there's three main components there's a watcher component that goes out and describes",
    "start": "525840",
    "end": "531780"
  },
  {
    "text": "all your infrastructure it describes your s3 buckets or SNS topics or sqs Q's etc it gets all of",
    "start": "531780",
    "end": "538510"
  },
  {
    "text": "those configuration details it stores it to the database with change history over time there are then auditors that look",
    "start": "538510",
    "end": "545260"
  },
  {
    "text": "at those configuration details and try to find insecure configurations there",
    "start": "545260",
    "end": "550330"
  },
  {
    "text": "are dead reporters that then take all of those details and sends emails they can send JIRA's they can also you can expand",
    "start": "550330",
    "end": "556930"
  },
  {
    "text": "that to add other systems as well here's a screenshot of security monkey security",
    "start": "556930",
    "end": "564279"
  },
  {
    "text": "monkey intends to be a single pane of glass that you can see all of your infrastructure resources on the",
    "start": "564279",
    "end": "570520"
  },
  {
    "text": "left-hand side you'll see a search component over here you can drill down based on the region the resource type",
    "start": "570520",
    "end": "577420"
  },
  {
    "text": "the account the name of the resource as well as search inside resources that have certain criteria let's drill into",
    "start": "577420",
    "end": "584709"
  },
  {
    "text": "one of them so here's an s3 bucket on the bottom you'll see the configuration",
    "start": "584709",
    "end": "590680"
  },
  {
    "text": "for this bucket and there's one thing to note this s3 bucket has an apple that",
    "start": "590680",
    "end": "596560"
  },
  {
    "text": "grants the all users group read access to this bucket so this is a public s3",
    "start": "596560",
    "end": "601870"
  },
  {
    "text": "bucket security monkeys auditors saw this and created an issue saying that this is an internet accessible bucket",
    "start": "601870",
    "end": "607920"
  },
  {
    "text": "this is very important because it allows you as a security engineer to find and work on the resources that you need your",
    "start": "607920",
    "end": "613779"
  },
  {
    "text": "priority of the most so let's discuss",
    "start": "613779",
    "end": "619510"
  },
  {
    "text": "some challenges that we have faced and that you may also face of building out one of these systems we developed",
    "start": "619510",
    "end": "627250"
  },
  {
    "text": "security monkey in 2014 and back then our infrastructure was totally different",
    "start": "627250",
    "end": "632490"
  },
  {
    "text": "back then we only had a small handful of AWS accounts we had a small handful of",
    "start": "632490",
    "end": "638709"
  },
  {
    "text": "roles that every application shared same with security groups we weren't even in VPC yet today that's a very",
    "start": "638709",
    "end": "646420"
  },
  {
    "text": "different story we have over a hundred accounts now we have thousands of iam",
    "start": "646420",
    "end": "651970"
  },
  {
    "text": "roles and across all these accounts because we now have in a case I am role per application the same with security",
    "start": "651970",
    "end": "658360"
  },
  {
    "text": "groups and now we're in V PC so we have thousands of security groups we also grew in our s3 usage in our SNS you said",
    "start": "658360",
    "end": "665260"
  },
  {
    "text": "your SQ s usage ever imaginable resource and AWS has massively grown since then and at that",
    "start": "665260",
    "end": "671800"
  },
  {
    "text": "time and up until very recently security monkey only ran on exactly one instance to handle the API the UI the scheduler",
    "start": "671800",
    "end": "679660"
  },
  {
    "text": "the watcher everything ran on one instance and when we first develop",
    "start": "679660",
    "end": "685060"
  },
  {
    "text": "security monkey this was okay for a while this was fine one instance is perfectly capable of handling this but",
    "start": "685060",
    "end": "691540"
  },
  {
    "text": "that's not the case anymore our infrastructure grew so big that earlier this year security and monkey stopped",
    "start": "691540",
    "end": "698350"
  },
  {
    "text": "working hard we saw extremely stale data on the order of weeks old many cases we",
    "start": "698350",
    "end": "706210"
  },
  {
    "text": "didn't see anything at all this is a big problem for us our team there we're",
    "start": "706210",
    "end": "711400"
  },
  {
    "text": "constantly in security monkey it's one of our most critical tools there's not a day that goes by where I'm not in",
    "start": "711400",
    "end": "716470"
  },
  {
    "text": "security monkeys searching for a necessary bucket or looking at an IM role and we also provide assistance to",
    "start": "716470",
    "end": "722110"
  },
  {
    "text": "users where if they're having an access denied issue we have to see ok there's a role permitted there's the bucket permitted does the topic permit it etc",
    "start": "722110",
    "end": "728710"
  },
  {
    "text": "so this was a big problem for us it prevented us from doing our job effectively so earlier this year I spent",
    "start": "728710",
    "end": "735640"
  },
  {
    "text": "a lot of time looking at how to make security monkey more scalable for infrastructure so I pulled out all the",
    "start": "735640",
    "end": "741790"
  },
  {
    "text": "old scheduling logic I replaced it with a Python library called celery that does task orchestration management and Python",
    "start": "741790",
    "end": "748300"
  },
  {
    "text": "and that worked really well we made a 1.0 release in January and now I'm happy to say that security monkey",
    "start": "748300",
    "end": "754720"
  },
  {
    "text": "now runs instead of one instance it runs on over 40 instances today so this is",
    "start": "754720",
    "end": "761320"
  },
  {
    "text": "what it looks like now we have a user interface component fronted by a load balancer and many UI instances behind it",
    "start": "761320",
    "end": "768660"
  },
  {
    "text": "the way celery operates is that there's one component that acts as a scheduling node it's tasks a set of workers to go",
    "start": "768660",
    "end": "776560"
  },
  {
    "text": "out and for every accounts for every tech resource type it describes all the",
    "start": "776560",
    "end": "781930"
  },
  {
    "text": "resources it runs the auditors reporters everything in the backend we have a",
    "start": "781930",
    "end": "787090"
  },
  {
    "text": "Postgres equal database to store everything and we actually make use of Postgres arora at netflix and that works",
    "start": "787090",
    "end": "793450"
  },
  {
    "text": "really well for us there's also a ElastiCache Redis cluster that is used",
    "start": "793450",
    "end": "798640"
  },
  {
    "text": "by the celery library to ask the workers and the scheduler what",
    "start": "798640",
    "end": "804159"
  },
  {
    "text": "we actually did is in order to get more priority we made a separate stack of workers and schedulers for different",
    "start": "804159",
    "end": "810909"
  },
  {
    "text": "resource types for instance we have a dedicated stack for I am one for security groups for s3 for SNS and SQS",
    "start": "810909",
    "end": "818649"
  },
  {
    "text": "and that allows those workers to get in just those resource types so we can",
    "start": "818649",
    "end": "823989"
  },
  {
    "text": "operate it much faster and get that data with priority so all is well right well",
    "start": "823989",
    "end": "830739"
  },
  {
    "text": "unfortunately it's not at our scale it's still too slow our environment is just",
    "start": "830739",
    "end": "836289"
  },
  {
    "text": "so big it takes us more than 30 minutes to pull for IEM roles and security",
    "start": "836289",
    "end": "842019"
  },
  {
    "text": "groups and SNS topics in just one account that's how many we have and a",
    "start": "842019",
    "end": "847479"
  },
  {
    "text": "big problem for why that happens is because we get rate limited as we're describing all these resources we hit a",
    "start": "847479",
    "end": "853239"
  },
  {
    "text": "rate limit and the way you recover from that is you have to do this song and dance of okay you get rate",
    "start": "853239",
    "end": "858789"
  },
  {
    "text": "limited so you have to back off a couple of seconds and then you try again and if you get rate limited again you have to",
    "start": "858789",
    "end": "863979"
  },
  {
    "text": "back off a couple of seconds and you have to do this ad infinitum ad nausea until finally you get everything so it",
    "start": "863979",
    "end": "870429"
  },
  {
    "text": "takes 30 minutes plus to get everything in just one account that's not quite the",
    "start": "870429",
    "end": "875619"
  },
  {
    "text": "timeliness we want you also don't get the cloud trail context we still don't",
    "start": "875619",
    "end": "881019"
  },
  {
    "text": "know who created these changes when and how we want that to be with the configuration changes so this is a",
    "start": "881019",
    "end": "887649"
  },
  {
    "text": "limitation we have but really the biggest problem we have is just scalability security monkey is a great",
    "start": "887649",
    "end": "895149"
  },
  {
    "start": "890000",
    "end": "890000"
  },
  {
    "text": "tool the changes I made to it earlier this year make it even better for more customers but our infrastructure is has",
    "start": "895149",
    "end": "901959"
  },
  {
    "text": "outgrown it and continues to outgrow it really what this means is that polling",
    "start": "901959",
    "end": "906999"
  },
  {
    "text": "is not effective at our scale it's just not a good way of getting inventory with the size of environment we have and we",
    "start": "906999",
    "end": "915069"
  },
  {
    "text": "realized this back in 2016 we wanted to make an event-driven infrastructure for security monkey and at that time Amazon",
    "start": "915069",
    "end": "922749"
  },
  {
    "text": "released this brand-new feature that was exciting it was called cloud watch events and how cloud watch events works",
    "start": "922749",
    "end": "928599"
  },
  {
    "text": "is if you have cloud trail enabled in your account cloud watch events will fire when",
    "start": "928599",
    "end": "933790"
  },
  {
    "text": "changes made and it will tell you what was modified and it will give you the full cloud trail context about the",
    "start": "933790",
    "end": "940210"
  },
  {
    "text": "change within seconds of it happening this is great and so we did this",
    "start": "940210",
    "end": "945550"
  },
  {
    "text": "experiment we codenamed it banana peel where we took the most critical components of security monkey we",
    "start": "945550",
    "end": "951670"
  },
  {
    "text": "stripped it down we made it into a lambda function and how this worked is whenever something would happen the",
    "start": "951670",
    "end": "958570"
  },
  {
    "text": "lambda would be invoked it would describe the asset and save the details to the database and this will take under",
    "start": "958570",
    "end": "964840"
  },
  {
    "text": "30 seconds from start to finish this was really great and we're really excited about this but we had some limitations",
    "start": "964840",
    "end": "973710"
  },
  {
    "start": "971000",
    "end": "971000"
  },
  {
    "text": "the biggest problem we had was that we had to orchestrate how to set this up we",
    "start": "973710",
    "end": "978910"
  },
  {
    "text": "had to centralize all these events into one account and we didn't have a good way of doing that we instead made use of",
    "start": "978910",
    "end": "985720"
  },
  {
    "text": "SNS we forward everything to as central sq sq and then had a lambda run every 5",
    "start": "985720",
    "end": "991810"
  },
  {
    "text": "minutes to check that queue for any changes and then do its thing but this had big problems because we were rapidly",
    "start": "991810",
    "end": "998140"
  },
  {
    "text": "growing the size of our environment and we were gonna hit sq s policy size limits this is a problem for us the",
    "start": "998140",
    "end": "1005100"
  },
  {
    "text": "technology we really were missing was cloud watch event buses this allows you to centralize all those cloud watch",
    "start": "1005100",
    "end": "1011910"
  },
  {
    "text": "events into one spot but this didn't come out till another year later another big thing is that as our information",
    "start": "1011910",
    "end": "1019110"
  },
  {
    "text": "security team has grown tremendously over the years we wanted to take the data that was in security monkey and",
    "start": "1019110",
    "end": "1024630"
  },
  {
    "text": "make it far more available for other systems to address a number of other news cases so we wanted to take security",
    "start": "1024630",
    "end": "1030360"
  },
  {
    "text": "monkey and break it into smaller components so that we can make its data go much farther and we learned a lot of",
    "start": "1030360",
    "end": "1037829"
  },
  {
    "text": "lessons from the banana peel and that now feeds into a new tool that we're developing called historical historical",
    "start": "1037830",
    "end": "1046319"
  },
  {
    "text": "is a service event-driven application that tracks changes here AWS resources within seconds of the change and it",
    "start": "1046320",
    "end": "1053340"
  },
  {
    "text": "maintains the cloud trail context of that change what's really powerful about historical is that it enables downstream",
    "start": "1053340",
    "end": "1060090"
  },
  {
    "text": "consumers to respond to those changes and with full context so they can make intelligent decisions we're developing",
    "start": "1060090",
    "end": "1067590"
  },
  {
    "text": "his store open source it is available today on our skunk works repository and the reason why it's a skunk works project is",
    "start": "1067590",
    "end": "1073920"
  },
  {
    "text": "because it is in very active development there is a lot of work we still need to do for it we've made some really great",
    "start": "1073920",
    "end": "1079920"
  },
  {
    "text": "changes to the infrastructure and we're very happy with where it's moving how historical works is that it is an owl it",
    "start": "1079920",
    "end": "1087390"
  },
  {
    "text": "is perched over your environment and you can see all your resources seized all the changes and notifies the downstream",
    "start": "1087390",
    "end": "1092970"
  },
  {
    "text": "consumers of it it is a flexible system it is not a closed loop this is very",
    "start": "1092970",
    "end": "1097980"
  },
  {
    "text": "important today historical is currently monitoring ec2",
    "start": "1097980",
    "end": "1103140"
  },
  {
    "text": "security groups in s3 buckets I'm actively working on a feature that I hope to get completed by the end of this",
    "start": "1103140",
    "end": "1108630"
  },
  {
    "text": "year that will that will provide I am capability so we'll have support for roles groups users manage policies and",
    "start": "1108630",
    "end": "1116100"
  },
  {
    "text": "server certificates I also included a basic terraform template that you can use to install historical in your own",
    "start": "1116100",
    "end": "1122160"
  },
  {
    "text": "environment so let's discuss some general concepts like banana-peel a",
    "start": "1122160",
    "end": "1128880"
  },
  {
    "start": "1125000",
    "end": "1125000"
  },
  {
    "text": "cloud watch event will tell you when something happens in your environment when that happens we then go out to me",
    "start": "1128880",
    "end": "1134580"
  },
  {
    "text": "describe that resource in question we then check if that resources state is actually different from what we",
    "start": "1134580",
    "end": "1140160"
  },
  {
    "text": "previously knew about it and if it is we then save a new change record we also notify the downstream consumers of that",
    "start": "1140160",
    "end": "1146970"
  },
  {
    "text": "change this is important we don't want to create unnecessary noise for the downstream consumers so if you have",
    "start": "1146970",
    "end": "1154320"
  },
  {
    "text": "something in your environment that is constantly putting over the configuration of an item that is a very common pattern that many tools do it's",
    "start": "1154320",
    "end": "1161400"
  },
  {
    "text": "to enforce that an item state is sent but if you're listening to cloud watch events that could be very noisy we don't",
    "start": "1161400",
    "end": "1168150"
  },
  {
    "text": "want to alert to downstream subscribers of changes unless they really care about that so we do some noise reduction and",
    "start": "1168150",
    "end": "1174210"
  },
  {
    "text": "we will only alert downstream subscribers if something actually changed from what we previously knew about it we want to immediately process",
    "start": "1174210",
    "end": "1183420"
  },
  {
    "text": "those cloud watch events it's very important that we do that because when we get a cloud watch event it indicates",
    "start": "1183420",
    "end": "1188430"
  },
  {
    "text": "that our environment is potentially different from what we previously knew about it we also have a polar the polar",
    "start": "1188430",
    "end": "1194790"
  },
  {
    "text": "polls for all resources every couple of hours it's basically in it's your insurance policy in case an event",
    "start": "1194790",
    "end": "1201360"
  },
  {
    "text": "ever gets lost the lostness is very low but you still need to have a polar",
    "start": "1201360",
    "end": "1206370"
  },
  {
    "text": "component anyway it's very every few hours super low priority we also put a",
    "start": "1206370",
    "end": "1213299"
  },
  {
    "text": "full stack of historical in regions where we expect to receive the majority of our cloud watch events to derive so",
    "start": "1213299",
    "end": "1220320"
  },
  {
    "text": "in the majority of all of our Netflix infrastructure we have a historical stack there we also create per resource",
    "start": "1220320",
    "end": "1228570"
  },
  {
    "text": "type stacks we have the stock of historical for s31 for SNS what we'll have one for SNS but one for security",
    "start": "1228570",
    "end": "1234990"
  },
  {
    "text": "groups one for IM in the future this has done for a number of reasons number one it lets us address the nuances of each",
    "start": "1234990",
    "end": "1241169"
  },
  {
    "text": "resource type as well as as we're creating lots of new features for historical we don't want to break",
    "start": "1241169",
    "end": "1246690"
  },
  {
    "text": "anything in that process I have to make a note about sqs and lambda we",
    "start": "1246690",
    "end": "1253470"
  },
  {
    "text": "absolutely love this feature and you should too it is great because it gives you massive",
    "start": "1253470",
    "end": "1258600"
  },
  {
    "text": "concurrency under lambdas if you use sqs to invoke your lenses it will spin tons",
    "start": "1258600",
    "end": "1264150"
  },
  {
    "text": "of lambdas all at once it's great it auto scales for you it also allows you",
    "start": "1264150",
    "end": "1269910"
  },
  {
    "text": "to retry on failure without blocking your entire pipeline so you don't have to poison pill your function it has the",
    "start": "1269910",
    "end": "1277620"
  },
  {
    "text": "ability of doing dead-letter queues which we're not using today but we will in the near future and this last feature",
    "start": "1277620",
    "end": "1283320"
  },
  {
    "text": "is really cool message delays so why would that be cool for so if you have",
    "start": "1283320",
    "end": "1289200"
  },
  {
    "text": "lots of things going into your sqs queue to invoke your lambdas you're gonna have all these land to spin up at one time",
    "start": "1289200",
    "end": "1294780"
  },
  {
    "text": "and if these lambdas are accessing us a resource you'd have a thundering herd problem or all these land is at one time",
    "start": "1294780",
    "end": "1301230"
  },
  {
    "text": "or just hitting against this resource that could be a big problem for you so what message delays do is you could set",
    "start": "1301230",
    "end": "1307650"
  },
  {
    "text": "a randomize time from 0 to 900 seconds to put this message onto the queue and it won't invoke your lambda function",
    "start": "1307650",
    "end": "1314309"
  },
  {
    "text": "until that message until that disability occurs this allows you to introduce jitter in your land of function",
    "start": "1314309",
    "end": "1320460"
  },
  {
    "text": "invocations to avoid that thundering courage from happening we make use of message delays in polling because it",
    "start": "1320460",
    "end": "1326640"
  },
  {
    "text": "doesn't have to run frequently just needs to run at least once a day it's a",
    "start": "1326640",
    "end": "1332130"
  },
  {
    "text": "great feature we make use of cloud watch event buses every single account is configured to",
    "start": "1332130",
    "end": "1338970"
  },
  {
    "text": "route their bus to one central account that were used for processing those events we also have an I am role that",
    "start": "1338970",
    "end": "1347610"
  },
  {
    "text": "lives in the historical account and the I am role can assume into all of the destination accounts that needs to be",
    "start": "1347610",
    "end": "1353400"
  },
  {
    "text": "inventoried this allows historical to get all the inventory that it needs in that account and here it is this is what",
    "start": "1353400",
    "end": "1362010"
  },
  {
    "text": "it looks like I mentioned before there's a lot of stuff that makes up a venture",
    "start": "1362010",
    "end": "1367529"
  },
  {
    "text": "of infrastructure and thousand foot view historical has multiple regions there's",
    "start": "1367529",
    "end": "1373230"
  },
  {
    "text": "a polar that goes out and describes all your resources it runs very infrequently there's also a collector to go out and",
    "start": "1373230",
    "end": "1380820"
  },
  {
    "text": "fetch the details of your resources we save those details to a global DynamoDB",
    "start": "1380820",
    "end": "1386340"
  },
  {
    "text": "table that has a cache of the existing resources that are in your environment there's a lambda function that does the",
    "start": "1386340",
    "end": "1392580"
  },
  {
    "text": "diff between what we currently know about a resource and what we previously knew about a resource that stores",
    "start": "1392580",
    "end": "1398789"
  },
  {
    "text": "details to another dynamo table that stores the full change history over time and then we publish those details to an",
    "start": "1398789",
    "end": "1406740"
  },
  {
    "text": "SNS topic that downstream consumers can subscribe to now if I was in the",
    "start": "1406740",
    "end": "1411870"
  },
  {
    "text": "audience I would think it looks like a bunch of M&Ms on the screen it doesn't make any sense",
    "start": "1411870",
    "end": "1417049"
  },
  {
    "text": "so let's disambiguate this we have a primary region and the purpose of the",
    "start": "1417559",
    "end": "1424260"
  },
  {
    "text": "primary region is to process all of the in region events that occur it serves another purpose we want a full global",
    "start": "1424260",
    "end": "1432510"
  },
  {
    "text": "view of our infrastructure but we don't want to deploy an entire stock of historical there so what we do is we put",
    "start": "1432510",
    "end": "1438450"
  },
  {
    "text": "very minimal pieces of infrastructure in the regions that we don't have a lot of infrastructure in but still care about",
    "start": "1438450",
    "end": "1444230"
  },
  {
    "text": "so for those regions we have a cloud watch change event pointing to an SNS topic that routes all of those messages",
    "start": "1444230",
    "end": "1451380"
  },
  {
    "text": "and events to the primary region for processing so the primary region processes are the in region events and",
    "start": "1451380",
    "end": "1457770"
  },
  {
    "text": "all the off region events there's a secondary region and it's just like the",
    "start": "1457770",
    "end": "1463350"
  },
  {
    "text": "primary region but its concern is just the in region local events this is done so that you can have fast",
    "start": "1463350",
    "end": "1469680"
  },
  {
    "text": "reaction to the cloud watch events that occur the polar runs every few hours",
    "start": "1469680",
    "end": "1477350"
  },
  {
    "text": "it's composed of two different lambda functions a Tasker lambda that basically",
    "start": "1477350",
    "end": "1482430"
  },
  {
    "text": "iterates over all your accounts and regions and it tasks a polar lambda to",
    "start": "1482430",
    "end": "1488010"
  },
  {
    "text": "list all the resources in a given account that will then task another lambda function called the collector to",
    "start": "1488010",
    "end": "1494790"
  },
  {
    "start": "1493000",
    "end": "1493000"
  },
  {
    "text": "go out and describe the details of that resource the collector is invoked one of",
    "start": "1494790",
    "end": "1499830"
  },
  {
    "text": "two ways same function just two different ways of being invoked one is from the polar and",
    "start": "1499830",
    "end": "1505530"
  },
  {
    "text": "the others fee directly from cloud watch change events I mentioned previously that we want to give cloud watch change",
    "start": "1505530",
    "end": "1511980"
  },
  {
    "text": "events top priority that peak that's because when something changes in our infrastructure we immediately want to",
    "start": "1511980",
    "end": "1517320"
  },
  {
    "text": "collect it the reason why there's two invoker's here is that if you just had one invocation mechanism you would have",
    "start": "1517320",
    "end": "1525360"
  },
  {
    "text": "your your change events sandwiched in between polling events and that would slow you down that was a mistake we made",
    "start": "1525360",
    "end": "1531480"
  },
  {
    "text": "we learned our lesson so we created two different ways of invoking and that allows us to have priority to those",
    "start": "1531480",
    "end": "1537000"
  },
  {
    "text": "cloud watch Change events that occur we then saved those details to a global dynamo DB table that we call the current",
    "start": "1537000",
    "end": "1543210"
  },
  {
    "text": "items table and that table acts as a cache of all the existing resources that we see there's a dynamodb stream event",
    "start": "1543210",
    "end": "1551760"
  },
  {
    "text": "on this table that invokes a lambda function that does some noise reduction it then takes the details of that",
    "start": "1551760",
    "end": "1558540"
  },
  {
    "text": "resource that just got changed and it triggers a different function which",
    "start": "1558540",
    "end": "1564090"
  },
  {
    "text": "actually looks at the previous known state of that resource and the current state and checks to see if there's actually a material difference between",
    "start": "1564090",
    "end": "1570450"
  },
  {
    "text": "the two if there is then the differs saves a new change record to the durable",
    "start": "1570450",
    "end": "1575970"
  },
  {
    "text": "items table which is a global dynamodb table with all of your changes over time with the cloud trail context and this is",
    "start": "1575970",
    "end": "1584640"
  },
  {
    "text": "where the magic happens at this point there's a DynamoDB stream on the durable",
    "start": "1584640",
    "end": "1590040"
  },
  {
    "text": "table that invokes another lambda function that takes all of the details of that of that resource the full",
    "start": "1590040",
    "end": "1597450"
  },
  {
    "text": "resource config along with the cloud trail context and it sends that onto SNS for any",
    "start": "1597450",
    "end": "1603320"
  },
  {
    "text": "downstream consumer to care about that change and they get the full context of that change with the collateral context",
    "start": "1603320",
    "end": "1609980"
  },
  {
    "text": "and they can then make very intelligent choices with that this is great so high",
    "start": "1609980",
    "end": "1617000"
  },
  {
    "text": "level overview multiple regions we want to have a full global view of our infrastructure a puller that runs every",
    "start": "1617000",
    "end": "1623690"
  },
  {
    "text": "few hours nothing nothing crazy about that it's not aggressively pulling just every few",
    "start": "1623690",
    "end": "1628850"
  },
  {
    "text": "hours it has to run there's an ekala collector that goes out and describes the resource in question especially",
    "start": "1628850",
    "end": "1634790"
  },
  {
    "text": "after a change event occurs we give priority to that there's been a dynamodb",
    "start": "1634790",
    "end": "1640820"
  },
  {
    "text": "table where we store a cache of the existing resources in our environment that eventually invokes a lend the",
    "start": "1640820",
    "end": "1646820"
  },
  {
    "text": "function we call the differ to DIF the change of the current resource we know",
    "start": "1646820",
    "end": "1652130"
  },
  {
    "text": "about as well as the previous date and if it's different we save a new change to the durable items table which invokes",
    "start": "1652130",
    "end": "1659060"
  },
  {
    "text": "a lambda function that serializes that events in the full context of which and publishes that change to downstream",
    "start": "1659060",
    "end": "1665240"
  },
  {
    "text": "consumers so that they can make proper use of that so how are we using this",
    "start": "1665240",
    "end": "1670670"
  },
  {
    "start": "1669000",
    "end": "1669000"
  },
  {
    "text": "internally historical still new we're still adding new capabilities to it but there's two very awesome use cases we",
    "start": "1670670",
    "end": "1677210"
  },
  {
    "text": "have right now number one we use historical as a source of truth for enabling s3 server access logs",
    "start": "1677210",
    "end": "1684140"
  },
  {
    "text": "everywhere in our infrastructure we have automation that relies on historical to see when s3 buckets are created and if",
    "start": "1684140",
    "end": "1691610"
  },
  {
    "text": "they have the right configuration set so that we can ingest all the s3 server access logs to address a number of very",
    "start": "1691610",
    "end": "1697520"
  },
  {
    "text": "important use cases internally so we have every s3 bucket at Netflix with s3 server access loans enabled",
    "start": "1697520",
    "end": "1703580"
  },
  {
    "text": "automatically because of this this is important this next one we're really",
    "start": "1703580",
    "end": "1708620"
  },
  {
    "text": "excited about stream alert is an open source tool developed by air B&B that",
    "start": "1708620",
    "end": "1714020"
  },
  {
    "text": "allows you to ingest a lot of event data and have real time processing against it we previously made use that we're",
    "start": "1714020",
    "end": "1721220"
  },
  {
    "text": "actually we're currently making use of stream alert with cloud trail so we can do some really interesting alerting up",
    "start": "1721220",
    "end": "1726740"
  },
  {
    "text": "on that we previously had an alert with cloud roll being ingested into stream",
    "start": "1726740",
    "end": "1733040"
  },
  {
    "text": "alert where if they secure group had wide open security group ingress we would create an alert for that cloud trail dumps its logs to s3",
    "start": "1733040",
    "end": "1741549"
  },
  {
    "text": "every 15 minutes that's a pretty long time in order to respond to an active",
    "start": "1741549",
    "end": "1747070"
  },
  {
    "text": "problem potential problem in your infrastructure we replace that with historical for this particular alert and",
    "start": "1747070",
    "end": "1754059"
  },
  {
    "text": "we dropped the time down instead of 15 minutes we brought it down to one minute",
    "start": "1754059",
    "end": "1759779"
  },
  {
    "text": "anywhere in our infrastructure if you could any environment any account any region if you created a wide open",
    "start": "1759779",
    "end": "1765880"
  },
  {
    "text": "security group rule will be alerted within one minute from creation of the rule to completion of the event we even",
    "start": "1765880",
    "end": "1772539"
  },
  {
    "text": "made a slack integration for it we're really excited about this capability and we really look forward to add more stuff",
    "start": "1772539",
    "end": "1777759"
  },
  {
    "text": "to this in the future so what are our goals we want to add a lot more AWS",
    "start": "1777759",
    "end": "1784179"
  },
  {
    "start": "1780000",
    "end": "1780000"
  },
  {
    "text": "resource types we also need to make some enhancements to make it easier for us to do that right now and our rapid",
    "start": "1784179",
    "end": "1791049"
  },
  {
    "text": "innovation mode we have a lot of duplicated code in the coming months we're going to clean that up so it's much easier to add new technologies to",
    "start": "1791049",
    "end": "1797230"
  },
  {
    "text": "historical we're going to massively increase the speed there's ways there's current areas where there's some slight",
    "start": "1797230",
    "end": "1803049"
  },
  {
    "text": "bottlenecks we're going to improve that so it's even faster we want to make some",
    "start": "1803049",
    "end": "1808179"
  },
  {
    "text": "documentation improvements I spend a lot of time on that please let me know if the docs are not correct and I will make",
    "start": "1808179",
    "end": "1813940"
  },
  {
    "text": "an effort to fix that we also want to at some point put a UI and API in front of",
    "start": "1813940",
    "end": "1820809"
  },
  {
    "text": "it as well so what about security monkey security monkey is a great tool it took",
    "start": "1820809",
    "end": "1828429"
  },
  {
    "text": "us very far I use it every single day but security monkey cannot scale to the",
    "start": "1828429",
    "end": "1834639"
  },
  {
    "text": "size of our infrastructure our infrastructure is just too big so we need to focus on tools like historical",
    "start": "1834639",
    "end": "1840309"
  },
  {
    "text": "that can operate at the scale that we need to operate as a result we're going to start supporting minor bug fixes only",
    "start": "1840309",
    "end": "1846519"
  },
  {
    "text": "however community contributions are always welcome please submit them and I will merge those in for you if you're",
    "start": "1846519",
    "end": "1853179"
  },
  {
    "text": "interested in taking ownership of security monkey please come talk to me after this talk before we leave today I",
    "start": "1853179",
    "end": "1860559"
  },
  {
    "text": "want to talk about what our desired ALW AWS infrastructure state is",
    "start": "1860559",
    "end": "1866260"
  },
  {
    "start": "1866000",
    "end": "1866000"
  },
  {
    "text": "we want to have a fast responding auto correcting infrastructure what that",
    "start": "1866260",
    "end": "1872740"
  },
  {
    "text": "means is that we want to discover bad signals and fix them automatically we",
    "start": "1872740",
    "end": "1878380"
  },
  {
    "text": "want to prevent and undo large automation scale failures so what does",
    "start": "1878380",
    "end": "1883450"
  },
  {
    "text": "that mean with our infrastructure we are heavily dependent on automation and I",
    "start": "1883450",
    "end": "1889480"
  },
  {
    "text": "don't know about you but I've made bugs in automation and they can cause",
    "start": "1889480",
    "end": "1894760"
  },
  {
    "text": "problems remarkably fast and remarkably with tons of impact and that's bad and",
    "start": "1894760",
    "end": "1903460"
  },
  {
    "text": "that's stressful to fix we don't want our customers to not be able to stream Netflix because of a bug in automation",
    "start": "1903460",
    "end": "1909160"
  },
  {
    "text": "so what we want to do is create an infrastructure where we have the full state of everything we know exactly what",
    "start": "1909160",
    "end": "1914950"
  },
  {
    "text": "changes who change it and at any time we can write tooling to very easily revert",
    "start": "1914950",
    "end": "1920100"
  },
  {
    "text": "gigantic amounts of changes in our infrastructure to a known good state this is where we see ourselves moving in",
    "start": "1920100",
    "end": "1926530"
  },
  {
    "text": "the future we want to make our infrastructure incredibly robust we hope that this is a similar use case that you",
    "start": "1926530",
    "end": "1933040"
  },
  {
    "text": "have as well and we hope the historical can get you there in the future that concludes my talk if anyone has any",
    "start": "1933040",
    "end": "1940270"
  },
  {
    "text": "questions I will be at the Netflix booth and I'm also giving away these awesome historical stickers so please come by",
    "start": "1940270",
    "end": "1946059"
  },
  {
    "text": "and get yourself one thank you [Applause]",
    "start": "1946059",
    "end": "1954220"
  }
]