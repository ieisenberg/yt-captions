[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "hello everyone thank you for coming to my talk on bpc design I have the distinct honor",
    "start": "2440",
    "end": "10400"
  },
  {
    "text": "of being the only thing standing between you and an open",
    "start": "10400",
    "end": "15880"
  },
  {
    "text": "bar I don't know why they put bpc design at the end of the day but truly thank",
    "start": "16039",
    "end": "22119"
  },
  {
    "text": "you for coming um I hope I hold up to the challenge uh we have a lot to cover in an hour so let's get",
    "start": "22119",
    "end": "28960"
  },
  {
    "text": "started the first thing is all the use cases configurations",
    "start": "28960",
    "end": "34920"
  },
  {
    "start": "30000",
    "end": "52000"
  },
  {
    "text": "designs everything you see in here is real it's not theoretical there's nothing that uh I made up and tried out",
    "start": "34920",
    "end": "41680"
  },
  {
    "text": "it's all comes from customer use cases um so my goal here is really to empower",
    "start": "41680",
    "end": "47280"
  },
  {
    "text": "you with uh what I consider good VPC design practices my name is Rob Alexander I'm a",
    "start": "47280",
    "end": "53640"
  },
  {
    "start": "52000",
    "end": "78000"
  },
  {
    "text": "Solutions architect with Amazon web services we're going to go through a story of simple VPC all the way up to",
    "start": "53640",
    "end": "61039"
  },
  {
    "text": "very complex vpcs and along the way I'm going to share with you customer use cases best practices tips and tricks",
    "start": "61039",
    "end": "69040"
  },
  {
    "text": "hopefully things that you can take back with you and uh can be immediately useful to",
    "start": "69040",
    "end": "76118"
  },
  {
    "text": "you I come from a networking background uh infrastructure design is the favorite",
    "start": "77799",
    "end": "83000"
  },
  {
    "start": "78000",
    "end": "100000"
  },
  {
    "text": "part of my job but in my old life I used to do",
    "start": "83000",
    "end": "88520"
  },
  {
    "text": "design and then I I'd spend months and months living in a data center racking stacking",
    "start": "88520",
    "end": "95119"
  },
  {
    "text": "wiring in my new life with",
    "start": "95119",
    "end": "100520"
  },
  {
    "start": "100000",
    "end": "146000"
  },
  {
    "text": "VPC I design and a deploy at equal speed by the way I blew all my visual effects",
    "start": "100520",
    "end": "105880"
  },
  {
    "text": "Budget on that one shot so the rest of this is going to be like shadow",
    "start": "105880",
    "end": "111439"
  },
  {
    "text": "puppets uh Andy talked about agility yesterday in the keynote and uh coming from infrastructure networking",
    "start": "112360",
    "end": "118840"
  },
  {
    "text": "background uh agility is usually not the first thing that uh our side of the house was associated with but uh VPC",
    "start": "118840",
    "end": "125840"
  },
  {
    "text": "really unleashes experimentation and creativity at the networking stack it uh",
    "start": "125840",
    "end": "130959"
  },
  {
    "text": "enables rapid adaptation to your evolving business needs and it really emphasizes to me the",
    "start": "130959",
    "end": "137360"
  },
  {
    "text": "power of programmable infrastructure so to get started on VPC I'm actually going",
    "start": "137360",
    "end": "142599"
  },
  {
    "text": "to plug cloud formation uh my little uh Cloud light bulb guide is a",
    "start": "142599",
    "end": "150120"
  },
  {
    "start": "146000",
    "end": "234000"
  },
  {
    "text": "indicator that this is a tip so tip number one um a quick word on cloud formation and this is particularly to",
    "start": "150120",
    "end": "157000"
  },
  {
    "text": "those of you in the crowd that are network Engineers systems Engineers",
    "start": "157000",
    "end": "162239"
  },
  {
    "text": "infrastructure Architects the most of you app guys are probably all over this already um being able to Source control",
    "start": "162239",
    "end": "169480"
  },
  {
    "text": "and and Version Control your data center is just extremely powerful to be able to",
    "start": "169480",
    "end": "174680"
  },
  {
    "text": "put in a in a single place in a single configuration template everything that defines your",
    "start": "174680",
    "end": "180720"
  },
  {
    "text": "networking stack everything from the routing rules subnets the security groups and then the actual groups that",
    "start": "180720",
    "end": "188040"
  },
  {
    "text": "manage them to all in one place to be rapidly deployed to be identical and to",
    "start": "188040",
    "end": "193959"
  },
  {
    "text": "be version controlled so that you can go back and forth it will and then reproduce the same structure in other",
    "start": "193959",
    "end": "199799"
  },
  {
    "text": "locations around the world and finally this is something I'm going to come back to quite a bit in this talk is is the",
    "start": "199799",
    "end": "206560"
  },
  {
    "text": "idea of segregation of Duties uh in infrastructure particularly around security control so cloud formation very",
    "start": "206560",
    "end": "213319"
  },
  {
    "text": "easily lets you uh dictate those groups that are responsible for the infrastructure templates that lay the",
    "start": "213319",
    "end": "220159"
  },
  {
    "text": "foundation of your network versus your application teams that might have their own templates their own Stacks that they",
    "start": "220159",
    "end": "226319"
  },
  {
    "text": "would build upon those infrastructure plates and the separate teams would maintain those",
    "start": "226319",
    "end": "231799"
  },
  {
    "text": "templates so elements of VPC design uh obviously this talk is intended for folks who already know a few things",
    "start": "232879",
    "end": "238599"
  },
  {
    "start": "234000",
    "end": "253000"
  },
  {
    "text": "about VPC so I am G to spend a few minutes talking about the the",
    "start": "238599",
    "end": "243959"
  },
  {
    "text": "fundamental elements that make up the VPC but hopefully I'm going to talk about them in a way that you know maybe",
    "start": "243959",
    "end": "250400"
  },
  {
    "text": "you haven't heard before so we start with one a VPC is an",
    "start": "250400",
    "end": "257160"
  },
  {
    "start": "253000",
    "end": "290000"
  },
  {
    "text": "isolated private segmentation of the AWS Cloud where you dictate all of the",
    "start": "257160",
    "end": "262199"
  },
  {
    "text": "networking configuration within it you bring your own network into the",
    "start": "262199",
    "end": "267759"
  },
  {
    "text": "cloud when you create a VPC it stretches across all regions I mean excuse me all",
    "start": "267759",
    "end": "273520"
  },
  {
    "text": "availability zones in the region and there's only one creation decision when you create a VPC and",
    "start": "273520",
    "end": "280120"
  },
  {
    "text": "that's what IP space to assign to it so for our first VPC we've chosen",
    "start": "280120",
    "end": "286400"
  },
  {
    "text": "10.1 16bit subnet mask 16bit subnet mask is actually the largest cider block you",
    "start": "286400",
    "end": "293080"
  },
  {
    "text": "can sign to VPC and we introduce our first subnets now subnets unlike the VPC",
    "start": "293080",
    "end": "298600"
  },
  {
    "text": "itself are AZ specific specific and they're also where you define both routing policy and security policy for",
    "start": "298600",
    "end": "306280"
  },
  {
    "text": "your network but we'll talk about that in a minute at subnet creation at the actual API creation of a subnet there's",
    "start": "306280",
    "end": "314120"
  },
  {
    "text": "only three things you designate and that's the VPC itself or the subnet that's going to exist The Cider block",
    "start": "314120",
    "end": "320759"
  },
  {
    "text": "and the availability zone so tip number two is think about",
    "start": "320759",
    "end": "326080"
  },
  {
    "start": "325000",
    "end": "415000"
  },
  {
    "text": "your IP space before you create it um and unfortunately I've had too many",
    "start": "326080",
    "end": "331160"
  },
  {
    "text": "customers who started spawning more and more vpcs perhaps giving them the same",
    "start": "331160",
    "end": "336880"
  },
  {
    "text": "CER blocks and then down the road wanted those vpcs to talk to themselves talk to each other and obviously with",
    "start": "336880",
    "end": "342960"
  },
  {
    "text": "overlapping IP space it creates an enormous headache so think about your space in advance um make sure you've",
    "start": "342960",
    "end": "349199"
  },
  {
    "text": "designed and considered expansion plans whether that's in the region itself so maybe you only deploy to two",
    "start": "349199",
    "end": "355520"
  },
  {
    "text": "azs at first and then later down the road you might grow to more azs make sure you've allocated space for each a",
    "start": "355520",
    "end": "362319"
  },
  {
    "text": "you want equal dist distribution of your IP space across all azs in a region and",
    "start": "362319",
    "end": "367360"
  },
  {
    "text": "then if you add more regions or particularly if you extend it into your corporate Network you want to make sure",
    "start": "367360",
    "end": "372759"
  },
  {
    "text": "that all these AP spaces are distinct and down the road you won't have headaches and this is particularly",
    "start": "372759",
    "end": "379160"
  },
  {
    "text": "important with subnet design you I have some customers with very large dynamic workloads who are",
    "start": "379160",
    "end": "387039"
  },
  {
    "text": "perfectly comfortable with one large subnet in an a they run thousands and",
    "start": "387039",
    "end": "392160"
  },
  {
    "text": "thousands and thousands of hosts in subnet the traditional networking restraints things like spanning tree",
    "start": "392160",
    "end": "399240"
  },
  {
    "text": "protocol or broadcast domains these don't apply here you don't have to worry about that so use the subnet as you",
    "start": "399240",
    "end": "405639"
  },
  {
    "text": "would for your design and not a physical networking constraint that you're used",
    "start": "405639",
    "end": "411240"
  },
  {
    "text": "to so back to our subnets and the most common separation of of or logical",
    "start": "412919",
    "end": "418400"
  },
  {
    "start": "415000",
    "end": "510000"
  },
  {
    "text": "isolation of subnet types is the private and the public the idea is that a public",
    "start": "418400",
    "end": "424160"
  },
  {
    "text": "subnet is going to contain instances that eventually would be assigned public IPS and be able to Transit out of the",
    "start": "424160",
    "end": "430879"
  },
  {
    "text": "VPC but at this point they're just names um there's nothing inherent with public",
    "start": "430879",
    "end": "436039"
  },
  {
    "text": "and private that that makes it that way there's still a few more pieces we need to add before these can actually mean",
    "start": "436039",
    "end": "443759"
  },
  {
    "text": "anything so let's assign some cider blocks launch some instances so we we've got in the public",
    "start": "443759",
    "end": "450160"
  },
  {
    "text": "we've got A1 and2 in the private we've got A3 and A4 all 24-bit subnet MK just to make it",
    "start": "450160",
    "end": "456800"
  },
  {
    "text": "easy on me so by default every subnet can talk to every other",
    "start": "456800",
    "end": "463199"
  },
  {
    "text": "subnet and this is enabled by a virtual router that sits in a star topology",
    "start": "463199",
    "end": "468800"
  },
  {
    "text": "between all the subnets to get to this router the VPC",
    "start": "468800",
    "end": "473840"
  },
  {
    "text": "DHCP service hands out a one address as a local default gateway for the subnet",
    "start": "473840",
    "end": "480319"
  },
  {
    "text": "so that everything's pointing there within that subnet so what happens then as soon as",
    "start": "480319",
    "end": "487080"
  },
  {
    "text": "it gets to the star that's when the subnets assigned routing table comes into play now I mentioned before when",
    "start": "487080",
    "end": "493599"
  },
  {
    "text": "you create a subnet that you don't actually designate the routing table or security policy up home creation so by",
    "start": "493599",
    "end": "500840"
  },
  {
    "text": "default when you create subnets they're all assigned to a default main routing table yeah",
    "start": "500840",
    "end": "507960"
  },
  {
    "start": "510000",
    "end": "540000"
  },
  {
    "text": "so that routing table looks like this has a local route and that route is actually what defines the star so that",
    "start": "510120",
    "end": "517159"
  },
  {
    "text": "local route is what enables all the intra subnet routing so if that's the case it should",
    "start": "517159",
    "end": "525040"
  },
  {
    "text": "be apparent that you don't actually Define int routing between the subnets",
    "start": "525040",
    "end": "530680"
  },
  {
    "text": "and what you're really doing with routing tables in a VPC is defining the ways out of the VPC",
    "start": "530680",
    "end": "538480"
  },
  {
    "start": "540000",
    "end": "615000"
  },
  {
    "text": "so I want to mention this is tip number three is leave the main route alone uh",
    "start": "541160",
    "end": "547079"
  },
  {
    "text": "it's assigned to every subnet upon creation if you go and start editing the main route table for example putting",
    "start": "547079",
    "end": "553120"
  },
  {
    "text": "routes in there to the public or the private it might not be a route that you want your subnet to have so just leave",
    "start": "553120",
    "end": "559720"
  },
  {
    "text": "it alone leave the default route in there and make sure you're editing with unique routing tables after the subnet",
    "start": "559720",
    "end": "566399"
  },
  {
    "text": "creation uh and you'll notice here uh it's you know it's reporting that it's associated with zero subnets that's",
    "start": "566399",
    "end": "572600"
  },
  {
    "text": "obviously not true um all four of our subnets are associated with this table but that's unique to the main routing",
    "start": "572600",
    "end": "578399"
  },
  {
    "text": "table because by default anything that is not associated with any other routing table is going to be associated with",
    "start": "578399",
    "end": "584279"
  },
  {
    "text": "this",
    "start": "584279",
    "end": "586399"
  },
  {
    "text": "one so the local route it can't be edited it can't be",
    "start": "590800",
    "end": "595839"
  },
  {
    "text": "deleted and you also can't Define a route that's more specific than it so in this case we've tried to put a",
    "start": "595839",
    "end": "602760"
  },
  {
    "text": "route into subnet 3's routing table that says get to subnet one through an instance in subnet 2",
    "start": "602760",
    "end": "611120"
  },
  {
    "text": "right like that and obviously this is this fails",
    "start": "611120",
    "end": "616440"
  },
  {
    "start": "615000",
    "end": "763000"
  },
  {
    "text": "it's not allowed so uh before we talk about the",
    "start": "616440",
    "end": "622800"
  },
  {
    "text": "ways in out of a VPC I wanted to talk a little bit about network security which in a",
    "start": "622800",
    "end": "628959"
  },
  {
    "text": "VPC takes the form of network accles and security groups now you're probably already",
    "start": "628959",
    "end": "635160"
  },
  {
    "text": "familiar with security groups but I wanted to point out some of the key differences between the two so Network",
    "start": "635160",
    "end": "640600"
  },
  {
    "text": "AAL are applied to subnets themselves they're stateless so quite",
    "start": "640600",
    "end": "645720"
  },
  {
    "text": "rigid you have to Define traffic both going in and coming out they allow and deny list rules so",
    "start": "645720",
    "end": "652320"
  },
  {
    "text": "you can actually have blacklists and the rules themselves are processed in the order that you make them so it's very important as a best",
    "start": "652320",
    "end": "659399"
  },
  {
    "text": "practice if you're using knackles to put your most commonly matched rules at the",
    "start": "659399",
    "end": "666320"
  },
  {
    "text": "top security groups on the other hand are applied to elastic network interfaces themselves which are attached",
    "start": "666320",
    "end": "672320"
  },
  {
    "text": "to instances you can have up to five security groups per instance I mean per",
    "start": "672320",
    "end": "677920"
  },
  {
    "text": "interface they're stateful F walls so you don't have to define the traffic in both directions there allow only rules on",
    "start": "677920",
    "end": "684639"
  },
  {
    "text": "security groups the rules are all evaluated as a whole and a decision is made",
    "start": "684639",
    "end": "691240"
  },
  {
    "text": "and finally and which I think is the best feature of security groups is that within a VPC so security groups within a",
    "start": "691279",
    "end": "696639"
  },
  {
    "text": "VPC only exist within that VPC but they can reference each other so you don't have to worry about designating IP",
    "start": "696639",
    "end": "703279"
  },
  {
    "text": "spaces and rules uh between different security groups in a VPC so you can use a security group and a rule as a source",
    "start": "703279",
    "end": "709920"
  },
  {
    "text": "and destination for that rule and another Security Group allows you to very uh easily segment your application",
    "start": "709920",
    "end": "716160"
  },
  {
    "text": "into components that can refer to each other and we'll see that a lot in the designs we look",
    "start": "716160",
    "end": "722760"
  },
  {
    "text": "at so what are knackles really good for uh in general they're good for as a",
    "start": "723360",
    "end": "729320"
  },
  {
    "text": "baseline catchall for screw-ups so if a security group is either misassigned to a server by devops",
    "start": "729320",
    "end": "737600"
  },
  {
    "text": "group or maybe it's misconfigured to to begin with OR the wrong one is applied",
    "start": "737600",
    "end": "744040"
  },
  {
    "text": "it's a good catchall for those kinds of things and again it's a segregation of Duties between those are the responsible",
    "start": "744040",
    "end": "749320"
  },
  {
    "text": "for implementing a security policy for the network itself and a security policy for",
    "start": "749320",
    "end": "756279"
  },
  {
    "text": "servers so best practices with vpcs since they do introduce a degree of",
    "start": "761839",
    "end": "768040"
  },
  {
    "start": "763000",
    "end": "831000"
  },
  {
    "text": "complexity and the fact that they are stateless I always advise to use them quite sparingly keep it simple simple is",
    "start": "768040",
    "end": "775279"
  },
  {
    "text": "good egress security rules are best that's so you don't have to turn around and Define a whole bunch of ephemeral",
    "start": "775279",
    "end": "781720"
  },
  {
    "text": "ports that have to be let back out create some rules with uh you know evenly spaced 100 200 300 just to make",
    "start": "781720",
    "end": "788600"
  },
  {
    "text": "room for those uh extra ones you think up of later after you forget and the",
    "start": "788600",
    "end": "793639"
  },
  {
    "text": "last one is particularly important um use I IM identity and access",
    "start": "793639",
    "end": "799040"
  },
  {
    "text": "management to control who canit your knackles and this is ex extremely",
    "start": "799040",
    "end": "805360"
  },
  {
    "text": "important for those of you who decide not to use knackles because guess what every single your one of your subnets",
    "start": "805360",
    "end": "811120"
  },
  {
    "text": "has the default knle applied to it whether you like it or not so this is the default knle it has one rule it's",
    "start": "811120",
    "end": "816519"
  },
  {
    "text": "allow all so it's basically out of the way unless someone comes along and pushes",
    "start": "816519",
    "end": "821920"
  },
  {
    "text": "that button right guess what that does yeah",
    "start": "821920",
    "end": "827120"
  },
  {
    "text": "your whole bpc is now shut down so tip number four is create a",
    "start": "827120",
    "end": "834839"
  },
  {
    "start": "831000",
    "end": "1000000"
  },
  {
    "text": "network Administration group an I am VPC group High blast radius VPC API calls like the",
    "start": "834839",
    "end": "841480"
  },
  {
    "text": "ones listed here things that could bring down your whole virtual data center put those in that group and make sure the",
    "start": "841480",
    "end": "847759"
  },
  {
    "text": "right folks have access to those and not everyone you know the same kind of",
    "start": "847759",
    "end": "853199"
  },
  {
    "text": "processes and procedure that you would do for a core router and a data center that's the same degree of that you",
    "start": "853199",
    "end": "860920"
  },
  {
    "text": "should look at here um and the the delete rules here the seven are now",
    "start": "860920",
    "end": "867240"
  },
  {
    "text": "enabled for resource permissions so this is something you're seeing more and more as we're rolling out ec2 based resource",
    "start": "867240",
    "end": "873079"
  },
  {
    "text": "permissions it means you can be very granular with uh the I policy you know",
    "start": "873079",
    "end": "878800"
  },
  {
    "text": "before if you gave someone for example the attached internet gateway API you couldn't say this person can only attach",
    "start": "878800",
    "end": "885240"
  },
  {
    "text": "a internet gateway to this VPC but with the delete rules you now can you can say",
    "start": "885240",
    "end": "890759"
  },
  {
    "text": "this group can only delete rules for this PPC and this is an example of that of a",
    "start": "890759",
    "end": "896880"
  },
  {
    "text": "policy like that so this is giving the action for delete nwork Network AO to modify an",
    "start": "896880",
    "end": "902880"
  },
  {
    "text": "echle only to uh where the there's a tag on that",
    "start": "902880",
    "end": "908240"
  },
  {
    "text": "echle that says environment equal to prod and for the extra paranoid there's",
    "start": "908240",
    "end": "914759"
  },
  {
    "text": "two little extra lines down there at the bottom mean you actually have to have an active multiactor authentication token",
    "start": "914759",
    "end": "920880"
  },
  {
    "text": "also before you can execute this so this would work in the actual Management console You' apply this to the group if",
    "start": "920880",
    "end": "926839"
  },
  {
    "text": "you did not log into the Management console with an fa you would not be able to execute this",
    "start": "926839",
    "end": "933440"
  },
  {
    "text": "rule so back to ways out there are two elements that can be",
    "start": "934399",
    "end": "940240"
  },
  {
    "text": "added to a VPC that allow instances in the VPC to get outside the",
    "start": "940240",
    "end": "946079"
  },
  {
    "text": "network the first is what I call the public door or the internet gateway",
    "start": "946079",
    "end": "951720"
  },
  {
    "text": "igw and you attach an igw to VPC in a onetoone relationship you can only have",
    "start": "951720",
    "end": "957040"
  },
  {
    "text": "one igw per VPC and although it's called a",
    "start": "957040",
    "end": "962839"
  },
  {
    "text": "Gateway the igw is not one physical thing in the VPC networking stack the",
    "start": "962839",
    "end": "970399"
  },
  {
    "text": "igw is a is a logical construct uh that gives you the capability for transmit",
    "start": "970399",
    "end": "975839"
  },
  {
    "text": "out of out of a VPC but just assigning and attaching an igw to a VPC does not",
    "start": "975839",
    "end": "982160"
  },
  {
    "text": "mean that all of a sudden everything can go out but it's important to not think",
    "start": "982160",
    "end": "987240"
  },
  {
    "text": "of it as something you have to manage for for availability or bandwidth it's not one physical box that all your",
    "start": "987240",
    "end": "994000"
  },
  {
    "text": "traffic is going",
    "start": "994000",
    "end": "996639"
  },
  {
    "start": "1000000",
    "end": "1050000"
  },
  {
    "text": "through so the second is the private door the back door virtual private",
    "start": "1001959",
    "end": "1007360"
  },
  {
    "text": "Gateway or vgw vgw is are where you logically attach VPN",
    "start": "1007360",
    "end": "1014240"
  },
  {
    "text": "tunnels or direct connect connections back to your Colo back to",
    "start": "1014240",
    "end": "1019399"
  },
  {
    "text": "your on pris data centers and they again are a one toone relationship with with",
    "start": "1019399",
    "end": "1024760"
  },
  {
    "text": "the VPC but unlike the igw while the vgw is still a logical construct in the VPC",
    "start": "1024760",
    "end": "1031839"
  },
  {
    "text": "networking stack it eventually boils down to physical connections so you have",
    "start": "1031839",
    "end": "1038880"
  },
  {
    "text": "to make sure your VPN tunnels are available you have to make sure your private connections are redundant",
    "start": "1038880",
    "end": "1047720"
  },
  {
    "text": "so here we can see we had a a route for the four subnet which points for any corporate",
    "start": "1049039",
    "end": "1055679"
  },
  {
    "text": "cers any private cers point it to the vgw you sign that routing table to that",
    "start": "1055679",
    "end": "1062000"
  },
  {
    "text": "subnet any traffic destined for your internal Network we I'll go to the vgw there you",
    "start": "1062000",
    "end": "1070000"
  },
  {
    "text": "go so back to uh public network access and igw we've assigned igw but there's",
    "start": "1073720",
    "end": "1079280"
  },
  {
    "text": "actually two more pieces that have to be in place before we can actually get anywhere the first one is you need a",
    "start": "1079280",
    "end": "1085440"
  },
  {
    "text": "route to the igw so here we've assigned the default gateway or the default route to the igw doesn't have to be the",
    "start": "1085440",
    "end": "1091760"
  },
  {
    "text": "default you could Define very specific networks that were allowed to go out through the igw but in this case we're going to keep it",
    "start": "1091760",
    "end": "1097440"
  },
  {
    "text": "simple the second thing you need is a public IP address in AWS there's two ways to",
    "start": "1097440",
    "end": "1103520"
  },
  {
    "start": "1098000",
    "end": "1132000"
  },
  {
    "text": "assign public IPS the first one you're probably well familiar with it's been around for quite a while that's it's",
    "start": "1103520",
    "end": "1108919"
  },
  {
    "text": "elastic IPS and I like I like to think of elastic IPS as if you need to maintain a specific IP address that",
    "start": "1108919",
    "end": "1116520"
  },
  {
    "text": "needs to be reached from the outside use elastic IPS you'll be able to maintain",
    "start": "1116520",
    "end": "1121880"
  },
  {
    "text": "that elastic IP you can assign it between instances you can move it around it's very Dynamic but you'll always be",
    "start": "1121880",
    "end": "1127480"
  },
  {
    "text": "guaranteed to have that IP address fronting the opposite of that is",
    "start": "1127480",
    "end": "1132880"
  },
  {
    "start": "1132000",
    "end": "1198000"
  },
  {
    "text": "actually quite a new feature that was released a few months ago um which you might have missed in our flurry of",
    "start": "1132880",
    "end": "1139280"
  },
  {
    "text": "announcements but it's actually to the networking guys quite important um and this is to allow the automatic",
    "start": "1139280",
    "end": "1146240"
  },
  {
    "text": "assignment of public IPS on instance launch so it's very similar to how",
    "start": "1146240",
    "end": "1152600"
  },
  {
    "text": "classic ec2 Works where you have a private and a public automatically assigned if you stop that instance",
    "start": "1152600",
    "end": "1158080"
  },
  {
    "text": "there's a good chance you could lose that public IP but for any situations where you actually don't need to persist",
    "start": "1158080",
    "end": "1164200"
  },
  {
    "text": "a public IP coming in you just need to talk out this is a great feature and and enables a lot of the use cases we'll see",
    "start": "1164200",
    "end": "1173080"
  },
  {
    "text": "today so we have the three pieces in place igw route table to the",
    "start": "1177400",
    "end": "1183679"
  },
  {
    "text": "igw public IP and we're out",
    "start": "1183679",
    "end": "1189280"
  },
  {
    "text": "finally but there's also a lot of services Beyond just the internet that live in public AWS that must be reached",
    "start": "1189280",
    "end": "1195799"
  },
  {
    "text": "outside the VPC so here's some examples of those kinds of services obviously any AWS Epi",
    "start": "1195799",
    "end": "1203799"
  },
  {
    "start": "1198000",
    "end": "1247000"
  },
  {
    "text": "endpoint is actually a public endpoint so think about any API calls you're making from within your VPC whether it's",
    "start": "1203799",
    "end": "1210919"
  },
  {
    "text": "to ec2 endpoints to make EIP adjustments whether it's to sqs or autoscaling calls",
    "start": "1210919",
    "end": "1216760"
  },
  {
    "text": "all those things have to get out of your VPC onto the public Network regional services like S3 and",
    "start": "1216760",
    "end": "1224200"
  },
  {
    "text": "Dynamo DV Dynamo D DP excuse me also so Regional Services Public endpoints you",
    "start": "1224200",
    "end": "1231559"
  },
  {
    "text": "have to get out of the VPC and last software and Patch repositories Amazon Linux actually",
    "start": "1231559",
    "end": "1237799"
  },
  {
    "text": "enforces that you only access it through our IP",
    "start": "1237799",
    "end": "1243320"
  },
  {
    "text": "addresses and finally what if an instance in a private subnet needs to get out it doesn't have a route out",
    "start": "1246480",
    "end": "1253159"
  },
  {
    "start": "1247000",
    "end": "1301000"
  },
  {
    "text": "doesn't have a public IP and this is where n instances come into play",
    "start": "1253159",
    "end": "1259240"
  },
  {
    "text": "so Nat Network ad D translation is where you use an instance to front the connections for these private instances",
    "start": "1259240",
    "end": "1266200"
  },
  {
    "text": "it has a public IP fronts that connection and allows them to hide behind that single n instance the N",
    "start": "1266200",
    "end": "1271720"
  },
  {
    "text": "instance itself has a route out and you can go",
    "start": "1271720",
    "end": "1276200"
  },
  {
    "text": "out and actually we call it a n function but it's actually Pat what a address",
    "start": "1276799",
    "end": "1282320"
  },
  {
    "text": "translation it's not a onetoone relationship it's it's one IP address hiding many privates behind it",
    "start": "1282320",
    "end": "1290039"
  },
  {
    "text": "so this's example of what the route would look like default route for that subnet is now pointing to the natat",
    "start": "1290039",
    "end": "1296240"
  },
  {
    "text": "instance and those private instances can now talk",
    "start": "1296240",
    "end": "1300919"
  },
  {
    "start": "1301000",
    "end": "1360000"
  },
  {
    "text": "out so tip number five is you know we provide a Nat Aly for you but I just",
    "start": "1302880",
    "end": "1309320"
  },
  {
    "text": "wanted to point out there's actually nothing really special about it you can run your own net pretty much any",
    "start": "1309320",
    "end": "1314720"
  },
  {
    "text": "operating system will do it we have lots of virtual appliances and partners that provide uh much more advanced security",
    "start": "1314720",
    "end": "1321240"
  },
  {
    "text": "appliances that do the same functionality but the commands here listed are actually all we do to turn",
    "start": "1321240",
    "end": "1327760"
  },
  {
    "text": "this into a",
    "start": "1327760",
    "end": "1330240"
  },
  {
    "text": "net so other private subnets can obviously share the same route table and be able to get",
    "start": "1333880",
    "end": "1339400"
  },
  {
    "text": "out but as traffic grows and grows you have a single Gat that natat is an ec2",
    "start": "1339400",
    "end": "1346120"
  },
  {
    "text": "instance it has a very limited amount of bandwidth you know it's just one guy with a lot of guys talking to it it's",
    "start": "1346120",
    "end": "1351320"
  },
  {
    "text": "kind of starting to be a bottleneck and as it gets more and more obviously you're going to melt that",
    "start": "1351320",
    "end": "1358158"
  },
  {
    "text": "instance so how do you make scalable and available now I'm not going to directly answer",
    "start": "1359559",
    "end": "1366480"
  },
  {
    "start": "1360000",
    "end": "1428000"
  },
  {
    "text": "that question first I'm going to divert it a little bit because now with this public automatic public IP assignment it",
    "start": "1366480",
    "end": "1372640"
  },
  {
    "text": "enables some uh removal of the headaches that used to exist why folks would use",
    "start": "1372640",
    "end": "1377679"
  },
  {
    "text": "the nets for for everything so think about if your bandwidth intensive",
    "start": "1377679",
    "end": "1383520"
  },
  {
    "text": "processes actually need to be behind a net can they be separated out and be put",
    "start": "1383520",
    "end": "1388880"
  },
  {
    "text": "into what you would consider the public subnets given automatic IP addresses and be able to talk directly out you know",
    "start": "1388880",
    "end": "1395840"
  },
  {
    "text": "there security groups can control that there's actually no access to these servers from the outside in but it does",
    "start": "1395840",
    "end": "1400960"
  },
  {
    "text": "allow them to talk full an instance bandwidth out to things like S3 which is",
    "start": "1400960",
    "end": "1408799"
  },
  {
    "text": "my number one customer use case multi- multi- gigabit streams out of the VPC",
    "start": "1408799",
    "end": "1413919"
  },
  {
    "text": "talking to S3 through a that it doesn't work well so you want to make sure that",
    "start": "1413919",
    "end": "1419360"
  },
  {
    "text": "you're getting the full bandwidth of that instance out if you're doing things like massive multi-gigabit",
    "start": "1419360",
    "end": "1425880"
  },
  {
    "text": "transfers so this is a a customer use case of of mine uh it's an image processing app takes images",
    "start": "1427799",
    "end": "1435559"
  },
  {
    "start": "1428000",
    "end": "1492000"
  },
  {
    "text": "in uh does some work on them generates many many many many different formats loads them all up in",
    "start": "1435559",
    "end": "1441320"
  },
  {
    "text": "S3 we're going to put a uh public facing elb subnet layer here to terminate the",
    "start": "1441320",
    "end": "1447919"
  },
  {
    "text": "customer traffic coming in so that's the only thing open to the outside world obviously the elb is in a Autos",
    "start": "1447919",
    "end": "1455080"
  },
  {
    "text": "scaling group the web layer is in its own Autos",
    "start": "1455080",
    "end": "1460279"
  },
  {
    "text": "scaling group that's automatically assigning public IP addresses to any new instances coming",
    "start": "1460279",
    "end": "1466480"
  },
  {
    "text": "up so customers come in they upload their images the processes take the images",
    "start": "1466760",
    "end": "1473480"
  },
  {
    "text": "create the formats and the web servers are able to talk directly back out to S3 with their full instance",
    "start": "1473480",
    "end": "1481200"
  },
  {
    "text": "bandwidth the natat is still there to perform any functions that those private servers still",
    "start": "1482919",
    "end": "1489720"
  },
  {
    "text": "need and this just kind of illustrates how simple it is to enable",
    "start": "1492640",
    "end": "1497880"
  },
  {
    "text": "automatic public IP assignment for an autoscaling",
    "start": "1497880",
    "end": "1502320"
  },
  {
    "text": "group it's just that one little flag so you still have a Nat in the",
    "start": "1503760",
    "end": "1510159"
  },
  {
    "text": "picture you have to make that available too can't just have one so how do you do available n and",
    "start": "1510159",
    "end": "1518919"
  },
  {
    "text": "again with automatic public IP assignment it creates some interesting new ways to be able to do this um very",
    "start": "1518919",
    "end": "1525720"
  },
  {
    "text": "lightweight and headache free I consider can compared to the past so um this is",
    "start": "1525720",
    "end": "1532240"
  },
  {
    "text": "my best practice Rec recommendation is one net per",
    "start": "1532240",
    "end": "1537279"
  },
  {
    "text": "a so that everything in that a is talking up through that single net almost like",
    "start": "1537279",
    "end": "1542679"
  },
  {
    "text": "columns you create an autoscaling group per a for that natat and it's an autoscaling group we call an",
    "start": "1542679",
    "end": "1550000"
  },
  {
    "text": "availability autoscaling group or cya autoscaling group and what it does is",
    "start": "1550000",
    "end": "1556080"
  },
  {
    "text": "it's set to a minimum of one and a maximum of one so that you are letting",
    "start": "1556080",
    "end": "1561480"
  },
  {
    "text": "autoscaling monitor the health of that single instance and if that instance goes away autoscaling will take care of",
    "start": "1561480",
    "end": "1567559"
  },
  {
    "text": "launching another one in its place and autoscaling also supports public IP assignment so it gets an IP",
    "start": "1567559",
    "end": "1573799"
  },
  {
    "text": "automatically and it can start talking out now the trick is if that instance fails and then it",
    "start": "1573799",
    "end": "1581360"
  },
  {
    "text": "comes back up obviously it's going to have a different instance ID so all those routing tables that were formerly",
    "start": "1581360",
    "end": "1587000"
  },
  {
    "text": "pointing to that instance ID name need to change right so how do you do",
    "start": "1587000",
    "end": "1594000"
  },
  {
    "start": "1595000",
    "end": "1688000"
  },
  {
    "text": "that and this is just uh ill illustrating what I was just talking about so one",
    "start": "1596880",
    "end": "1602919"
  },
  {
    "text": "subnet so this is a a little script I wrote and it's really not much to it and",
    "start": "1603960",
    "end": "1610039"
  },
  {
    "text": "it kind of describes uh the fun you can have with a programmable Network so the idea is that an instance comes up it",
    "start": "1610039",
    "end": "1618520"
  },
  {
    "text": "does very cloudy things it asks who am I what's my name where am I what a what",
    "start": "1618520",
    "end": "1625080"
  },
  {
    "text": "what VPC and what am I supposed to be doing you drop this into user data",
    "start": "1625080",
    "end": "1630520"
  },
  {
    "text": "script it would configure your NP it would ask all those questions it would search all the private subnets in your a",
    "start": "1630520",
    "end": "1637960"
  },
  {
    "text": "that were tagged private and any ones that were tagged private it would edit the routing table",
    "start": "1637960",
    "end": "1643520"
  },
  {
    "text": "to point to itself yeah so",
    "start": "1643520",
    "end": "1649720"
  },
  {
    "text": "you can see right there red designate the name value for Network private and you also notice this is using uh the",
    "start": "1649720",
    "end": "1655880"
  },
  {
    "text": "latest and greatest version of our CLI which allows some pretty cool functionality so if you're if you're a",
    "start": "1655880",
    "end": "1662799"
  },
  {
    "text": "bash guy um the latest version will output to text so you can actually use things like GP and a which before is all",
    "start": "1662799",
    "end": "1670159"
  },
  {
    "text": "Json which was a little awkward to say the least um and it also has some",
    "start": "1670159",
    "end": "1675440"
  },
  {
    "text": "built-in query functionalities so you can actually ask API to return only the values you want so you don't have to do",
    "start": "1675440",
    "end": "1680640"
  },
  {
    "text": "a lot of parsing and I'll make this whole script available this is just a piece of it but it'll be in the deck that we",
    "start": "1680640",
    "end": "1688398"
  },
  {
    "start": "1688000",
    "end": "1763000"
  },
  {
    "text": "publish and here's the role that would go along with it so this is the ec2 role that you would apply to the instance",
    "start": "1688960",
    "end": "1694399"
  },
  {
    "text": "itself that would give that instance the permissions to do what I just",
    "start": "1694399",
    "end": "1699960"
  },
  {
    "text": "did so obviously we had a little fun with tagging tip number six is tag early",
    "start": "1703120",
    "end": "1709120"
  },
  {
    "text": "T tag often tag everything um you know instance names and subnet",
    "start": "1709120",
    "end": "1715519"
  },
  {
    "text": "IDs and you know these things are not friendly nor are they good indicators of",
    "start": "1715519",
    "end": "1720760"
  },
  {
    "text": "what relationship they have to other resources but if you tag them with things that mean something to you especially right at creation later down",
    "start": "1720760",
    "end": "1727840"
  },
  {
    "text": "the road it will alleviate a lot of headache so I recommend just like I recommended thinking about IP space",
    "start": "1727840",
    "end": "1733840"
  },
  {
    "text": "think about tagging strategies so whether it's you know project codes or C centers or environments or function of",
    "start": "1733840",
    "end": "1740320"
  },
  {
    "text": "the server itself whatever it is come up with a schema and stick to it and and do",
    "start": "1740320",
    "end": "1745880"
  },
  {
    "text": "it on resource creation and then the last point is you know if you start tagging things prod",
    "start": "1745880",
    "end": "1752039"
  },
  {
    "text": "make sure you tightly control who can actually do that who can tag things",
    "start": "1752039",
    "end": "1757000"
  },
  {
    "text": "pro and finally if if your if your design can't take advantage of of the public IP assignment talking straight",
    "start": "1757480",
    "end": "1764320"
  },
  {
    "start": "1763000",
    "end": "1805000"
  },
  {
    "text": "out and you still need to put a lot of stuff behind thats that need high band with streams um your option is this one",
    "start": "1764320",
    "end": "1771880"
  },
  {
    "text": "so scale vertically scale your natat instance per a z so stick with the ha net you know one per a z and scale that",
    "start": "1771880",
    "end": "1779519"
  },
  {
    "text": "up so different instance types obviously have different amounts of iio so if you move up the map to the m1x large and the",
    "start": "1779519",
    "end": "1785200"
  },
  {
    "text": "c x large you'll get the maximum amount of bandwidth for that",
    "start": "1785200",
    "end": "1790278"
  },
  {
    "text": "net so let's talk a little bit about more than one VPC",
    "start": "1793760",
    "end": "1800039"
  },
  {
    "text": "so we have one VPC out there with a public facing web app and now we're",
    "start": "1801519",
    "end": "1807200"
  },
  {
    "start": "1805000",
    "end": "1838000"
  },
  {
    "text": "considering moving an internal corporate app up into the same",
    "start": "1807200",
    "end": "1812440"
  },
  {
    "text": "region separate vpcs offer offer you know physically I mean logically separated and distinct networks and for",
    "start": "1812440",
    "end": "1819880"
  },
  {
    "text": "an internal only application that's completely distinct it seems to make sense there's no dependencies between",
    "start": "1819880",
    "end": "1825200"
  },
  {
    "text": "these two it's a pretty easy decision but what about when it's it's not so clear what should you be considering",
    "start": "1825200",
    "end": "1832159"
  },
  {
    "text": "when you face the decision of putting something into a new",
    "start": "1832159",
    "end": "1837080"
  },
  {
    "start": "1838000",
    "end": "1931000"
  },
  {
    "text": "VPC so there are no hard and fast rules for when to evolve your design into",
    "start": "1839000",
    "end": "1844960"
  },
  {
    "text": "multi VPC the tools are flexible and they're designed to meet your requirements but",
    "start": "1844960",
    "end": "1851440"
  },
  {
    "text": "here are some of the most common customer use cases we see where customers decide to move to a multi VPC",
    "start": "1851440",
    "end": "1857200"
  },
  {
    "text": "model so the first one is what we were just talking about today distinct business",
    "start": "1857200",
    "end": "1862240"
  },
  {
    "text": "applications that have no relationship to each other no dependencies it's pretty easy decision scope of audit containment so",
    "start": "1862240",
    "end": "1870559"
  },
  {
    "text": "if you have to say only these teams can can access these prod resources the only",
    "start": "1870559",
    "end": "1877120"
  },
  {
    "text": "way to currently do that without the resource permissions across all API calls is to have distinct AWS",
    "start": "1877120",
    "end": "1884919"
  },
  {
    "text": "accounts so that would also obviously mean distinct vpcs risk level separation",
    "start": "1886120",
    "end": "1891159"
  },
  {
    "text": "is kind of along the same lines so if you have you know PCI applications or if you have confidential information in a",
    "start": "1891159",
    "end": "1897880"
  },
  {
    "text": "certain system you want to isolate those off into separate vpcs um production",
    "start": "1897880",
    "end": "1903320"
  },
  {
    "text": "nonproduction is pretty obvious if you're running a multi-tenant application you want to give each tenant",
    "start": "1903320",
    "end": "1908919"
  },
  {
    "text": "their own VPC and then finally Ben business unit alignment we find many large Enterprise",
    "start": "1908919",
    "end": "1914480"
  },
  {
    "text": "customers that come to us that already have a very distinct internal Network struct structure that's aligned to their",
    "start": "1914480",
    "end": "1920639"
  },
  {
    "text": "business units and they model that with separate",
    "start": "1920639",
    "end": "1925840"
  },
  {
    "text": "vpcs so what should you be considering when you move to multi bpcs what causes",
    "start": "1928760",
    "end": "1933919"
  },
  {
    "start": "1931000",
    "end": "2007000"
  },
  {
    "text": "the most headaches and the first one is definitely knowing your inter VPC",
    "start": "1933919",
    "end": "1939000"
  },
  {
    "text": "traffic so as soon as you logically isolate these networks you need to know",
    "start": "1939000",
    "end": "1945120"
  },
  {
    "text": "if there's any traffic dependencies between them because you're going have to account for that um you know there's",
    "start": "1945120",
    "end": "1950320"
  },
  {
    "text": "ways to do that tying them in VPN tunnels is the most common one but",
    "start": "1950320",
    "end": "1955519"
  },
  {
    "text": "sometimes it's a very simple model if you're offering up just web services between different vpcs it's very easy to",
    "start": "1955519",
    "end": "1961279"
  },
  {
    "text": "offer up web services publicly and they control the access of who can talk to who through those web",
    "start": "1961279",
    "end": "1966519"
  },
  {
    "text": "services but know that in advance before you get into it I mentioned separate AWS accounts",
    "start": "1966519",
    "end": "1973159"
  },
  {
    "text": "you're going to need to if you're going to have centralized operations group to manage these multiple vpcs and you have",
    "start": "1973159",
    "end": "1979639"
  },
  {
    "text": "separate accounts you're going to have to think about things like I roles across the accounts to make sure you",
    "start": "1979639",
    "end": "1985080"
  },
  {
    "text": "have consistent management and you're not having to reproduce the entire IM structure for every VPC that you",
    "start": "1985080",
    "end": "1992639"
  },
  {
    "text": "create and finally the VPC limits just be aware of them they're out there most of them are soft but you don't want to",
    "start": "1992639",
    "end": "1998519"
  },
  {
    "text": "hit them and then have to scramble to get them",
    "start": "1998519",
    "end": "2003600"
  },
  {
    "text": "raised there's a whole talk on this topic tomorrow at 11:30 so um I kind of skimmed over and just gave the",
    "start": "2003880",
    "end": "2009960"
  },
  {
    "start": "2007000",
    "end": "2022000"
  },
  {
    "text": "highlights but there's a whole talk on Multi VPC paradigms and some customers will come",
    "start": "2009960",
    "end": "2015279"
  },
  {
    "text": "up and talk about that so controlling the",
    "start": "2015279",
    "end": "2022320"
  },
  {
    "start": "2022000",
    "end": "2112000"
  },
  {
    "text": "border so in our previous design we were considering moving an internal corporate",
    "start": "2022320",
    "end": "2027919"
  },
  {
    "text": "app up into the cloud except in this design we want to",
    "start": "2027919",
    "end": "2033240"
  },
  {
    "text": "keep it completely private and not provide any ability for instan instances",
    "start": "2033240",
    "end": "2039200"
  },
  {
    "text": "in this private bpc to be able to talk out so we'd like to not give it an",
    "start": "2039200",
    "end": "2046398"
  },
  {
    "text": "igw so the design would use a VPN tunnel back to your corporate data",
    "start": "2046480",
    "end": "2053319"
  },
  {
    "text": "center we've seen this route before unfortunately this application",
    "start": "2054359",
    "end": "2059398"
  },
  {
    "text": "needs to leverage S3 and um there's no other way to do that except either igw or as we'll see",
    "start": "2059399",
    "end": "2067398"
  },
  {
    "text": "in a minute but you wouldn't be able to easily control at a network layer access out to",
    "start": "2067399",
    "end": "2072919"
  },
  {
    "text": "S3 so for example with knackles or even security groups S3 is a constantly moving Target as far as IP addresses are",
    "start": "2072919",
    "end": "2080079"
  },
  {
    "text": "concerned know we're constantly growing constantly changing IPS so you don't want to be chasing your tail trying to",
    "start": "2080079",
    "end": "2085919"
  },
  {
    "text": "keep up with what defines S3 IP addresses so it's General good Cloud",
    "start": "2085919",
    "end": "2091919"
  },
  {
    "text": "advice know IPS come and go DNS names are good",
    "start": "2091919",
    "end": "2099280"
  },
  {
    "text": "so without an igw this is what your route would look",
    "start": "2101040",
    "end": "2105680"
  },
  {
    "text": "like obviously not ideal right so what do you",
    "start": "2106960",
    "end": "2114000"
  },
  {
    "start": "2112000",
    "end": "2171000"
  },
  {
    "text": "do um one of the options is to put a proxy layer that separates your",
    "start": "2114000",
    "end": "2120040"
  },
  {
    "text": "internal application from the igw so it would restrict all outbound",
    "start": "2120040",
    "end": "2125800"
  },
  {
    "text": "HTTP https traffic and only allow traffic passing to specific URLs that",
    "start": "2125800",
    "end": "2131320"
  },
  {
    "text": "you designate there wouldn't be any routes in the private subnets to the",
    "start": "2131320",
    "end": "2136880"
  },
  {
    "text": "igw and you would Define at an instance by instance level in that instance's",
    "start": "2136880",
    "end": "2142280"
  },
  {
    "text": "operating system you define the proxy variable so that they'd actually be able to point to that proxy and then you would add them all to a security group",
    "start": "2142280",
    "end": "2149319"
  },
  {
    "text": "those instances that you want access to the proxy and that security group would be able to access the proxy",
    "start": "2149319",
    "end": "2155920"
  },
  {
    "text": "layer so let's look at that the first thing we do is deploy an",
    "start": "2155920",
    "end": "2161480"
  },
  {
    "text": "internal elb to make sure this proxy labor is scalable and",
    "start": "2161480",
    "end": "2168000"
  },
  {
    "start": "2171000",
    "end": "2246000"
  },
  {
    "text": "available and that brings me to my seventh Point put elbs in their own",
    "start": "2171560",
    "end": "2177440"
  },
  {
    "text": "subnets um you might not have realized this but elbs take your IP addresses",
    "start": "2177440",
    "end": "2183040"
  },
  {
    "text": "there're ec2 instances in your VPC and uh there if if you if you need",
    "start": "2183040",
    "end": "2188760"
  },
  {
    "text": "to define specific private IPS that You' like to keep you might come a day when you go to grab that private IP and it's",
    "start": "2188760",
    "end": "2194920"
  },
  {
    "text": "actually not available to you that's might be because an ec2 instance has it that elb is",
    "start": "2194920",
    "end": "2200000"
  },
  {
    "text": "controlling um there's really a situation where you'd actually blow out",
    "start": "2200000",
    "end": "2206200"
  },
  {
    "text": "a subnet with elb instances you'd have to be pushing a large amount of traffic I think the smallest subnet you can",
    "start": "2206200",
    "end": "2211240"
  },
  {
    "text": "deploy an lbn is uh 26 bit subnet Mass so you know that's uh 62 hosts that be a",
    "start": "2211240",
    "end": "2217880"
  },
  {
    "text": "lot of traffic uh that you'd be pushing but it's good to keep them logically isolated and and back to my routing",
    "start": "2217880",
    "end": "2223960"
  },
  {
    "text": "policy is distinct routing policies for those subnets you don't uh want a situation where you're mixing a routing",
    "start": "2223960",
    "end": "2231000"
  },
  {
    "text": "policy for load balancing with a routing policy for your application",
    "start": "2231000",
    "end": "2236440"
  },
  {
    "text": "layer so with the elb in place we're going to deploy a proxy",
    "start": "2242880",
    "end": "2248520"
  },
  {
    "start": "2246000",
    "end": "2335000"
  },
  {
    "text": "layer I've chosen squid for this again like my n conversation any proxy",
    "start": "2248520",
    "end": "2255480"
  },
  {
    "text": "any any filtering device you want any security Appliance but for this we use squid so deployed between",
    "start": "2255480",
    "end": "2264359"
  },
  {
    "text": "the internal application and the igw obviously the only thing that can talk to the squids is the internal elb",
    "start": "2264359",
    "end": "2271680"
  },
  {
    "text": "and the only thing that can talk to the internal elb are those that are in the proxy Security Group I mentioned",
    "start": "2271680",
    "end": "2279440"
  },
  {
    "text": "so we have a autoscaling group around the squid instances handing out public IPS automatically to them so they they",
    "start": "2279800",
    "end": "2285599"
  },
  {
    "text": "are able to talk directly out requests are made so those instances",
    "start": "2285599",
    "end": "2292400"
  },
  {
    "text": "have their proxy variable set to point to the internal elb DNS",
    "start": "2292400",
    "end": "2298200"
  },
  {
    "text": "name distributes out to the proxy layers those proxy layers right now have a rule that says I'm only allowing traffic to",
    "start": "2298200",
    "end": "2305760"
  },
  {
    "text": "S3 and out you go now remember the star that I mentioned earlier because I'm depicting layers",
    "start": "2305760",
    "end": "2312160"
  },
  {
    "text": "right but they're not really layers so it's very important to make sure your Security Group configuration is",
    "start": "2312160",
    "end": "2318880"
  },
  {
    "text": "spoton because the routing layers actually allow those private subnets to be able to talk at a routing perspective",
    "start": "2318880",
    "end": "2325720"
  },
  {
    "text": "to the proxy subnet but as long as your security groups are in place that can't",
    "start": "2325720",
    "end": "2331440"
  },
  {
    "text": "happen so there you go and here's just a very basic squid",
    "start": "2332280",
    "end": "2338359"
  },
  {
    "start": "2335000",
    "end": "2372000"
  },
  {
    "text": "configuration file and all it's doing is defining the cider blocks the elbs themselves since",
    "start": "2338359",
    "end": "2345400"
  },
  {
    "text": "those will be the only things talking to the proxies combining that with uh a URL",
    "start": "2345400",
    "end": "2350680"
  },
  {
    "text": "destination check or destination domain check for your specific S3 bucket and",
    "start": "2350680",
    "end": "2356319"
  },
  {
    "text": "then doing an and on those so those both those things have to be true you have to be coming from the elb subnets and you",
    "start": "2356319",
    "end": "2362280"
  },
  {
    "text": "have to be going to the S3 bucket if those two things are true out you go",
    "start": "2362280",
    "end": "2368119"
  },
  {
    "text": "otherwise denial uh there's a actually an article",
    "start": "2368119",
    "end": "2375359"
  },
  {
    "text": "on this so cloud formation templates everything you need to try this out on the",
    "start": "2375359",
    "end": "2382000"
  },
  {
    "text": "website and this design could also be used in our earlier discussion when we're talking about scaling outbound",
    "start": "2386400",
    "end": "2392359"
  },
  {
    "text": "traffic as long as your traffic requirements are HTTP only you know the",
    "start": "2392359",
    "end": "2397760"
  },
  {
    "text": "scaling proxy layer works for that",
    "start": "2397760",
    "end": "2402119"
  },
  {
    "text": "too so how about directory and name services in the VPC so extending active directory extending DNS up into your",
    "start": "2404000",
    "end": "2412759"
  },
  {
    "text": "VPC right not exactly the easiest thing to deal with yeah um you know we",
    "start": "2414520",
    "end": "2421079"
  },
  {
    "start": "2419000",
    "end": "2479000"
  },
  {
    "text": "automatically give these to you but they're they're not immediately useful in the way that are internal",
    "start": "2421079",
    "end": "2427800"
  },
  {
    "text": "corporate friendly names are so this is our new requirement we want to be able to extend",
    "start": "2427800",
    "end": "2434880"
  },
  {
    "text": "our internal active directory up into our new corporate application that has domain dependencies for it to",
    "start": "2434880",
    "end": "2441480"
  },
  {
    "text": "work so our plan is to launch domain controllers in this new VPC along with",
    "start": "2441480",
    "end": "2448280"
  },
  {
    "text": "DNS so that new instances coming up can be given friendly names that are then",
    "start": "2448280",
    "end": "2453920"
  },
  {
    "text": "automatically injected into the domain the new machine are registered all of these things flow down into your",
    "start": "2453920",
    "end": "2460240"
  },
  {
    "text": "corporate directory and you know folks sitting on your internal Network can reference these as if they were internal",
    "start": "2460240",
    "end": "2468319"
  },
  {
    "text": "servers and obviously DNS and everything would forward into your corporate DNS structure and resolve",
    "start": "2472079",
    "end": "2479040"
  },
  {
    "start": "2479000",
    "end": "2495000"
  },
  {
    "text": "there so before we go into the design of that uh I want to mention a few things about how DNS works in the VPC out of",
    "start": "2479040",
    "end": "2486160"
  },
  {
    "text": "the box so these are your two options available to you for VPC with these two options",
    "start": "2486160",
    "end": "2492200"
  },
  {
    "text": "enabled you get these names so that's the automatic",
    "start": "2492200",
    "end": "2498160"
  },
  {
    "text": "assignment of host names for instances coming up uh the one unique part is it works a",
    "start": "2498160",
    "end": "2504880"
  },
  {
    "text": "little bit like uh core ec2 works if you are given a public if you have a public",
    "start": "2504880",
    "end": "2510599"
  },
  {
    "text": "IP address assigned to an instance and you get a public name such as that first one that one will will resolve to the",
    "start": "2510599",
    "end": "2517599"
  },
  {
    "text": "public IP address from the outside if you call the same name from the inside the VPC it'll give you back the private",
    "start": "2517599",
    "end": "2524119"
  },
  {
    "text": "IP address so it's kind of nice because you you can be assur you always get the right IP address you're not going out and then back in to reach something",
    "start": "2524119",
    "end": "2530400"
  },
  {
    "text": "that's inside your VPC um the one thing I want to point out is at 10.1.0",
    "start": "2530400",
    "end": "2535960"
  },
  {
    "text": "do2 that's the Amazon DNS service so we provide a uh a virtualized DNS service",
    "start": "2535960",
    "end": "2542720"
  },
  {
    "text": "to every VPC and it takes the form of the do to address for what ever CER you",
    "start": "2542720",
    "end": "2548400"
  },
  {
    "text": "assign to your VPC do2 is going to be the DNS service and we call that Amazon",
    "start": "2548400",
    "end": "2554240"
  },
  {
    "start": "2553000",
    "end": "2687000"
  },
  {
    "text": "provided DNS and the way to circumvent or not use Amazon provided DNS in the",
    "start": "2554240",
    "end": "2561520"
  },
  {
    "text": "VPC is to create your own DHCP option sets so DHCP is the one thing in the VPC you",
    "start": "2561520",
    "end": "2569079"
  },
  {
    "text": "actually can't replace and you know bpc has to be responsible for assigning IP",
    "start": "2569079",
    "end": "2574800"
  },
  {
    "text": "addresses it has to know where things live um it it has to be the one that gives IP addresses out so you can't",
    "start": "2574800",
    "end": "2580000"
  },
  {
    "text": "replace that but you can replace DNS so you do that by altering what DHCP hands",
    "start": "2580000",
    "end": "2586319"
  },
  {
    "text": "out so here you can see we're putting in our own corporate domain name we're putting in the new I dedicated private",
    "start": "2586319",
    "end": "2593040"
  },
  {
    "text": "IPS of the domain the DNS servers we plan to",
    "start": "2593040",
    "end": "2598440"
  },
  {
    "text": "deploy and you can create as many dhtp options sets as you want but only one at a time can be applied to a",
    "start": "2598440",
    "end": "2604839"
  },
  {
    "text": "VPC if you change that set it'll actually apply dynamically so any leases",
    "start": "2604839",
    "end": "2610400"
  },
  {
    "text": "that come up within the VPC will then get the new stuff from that new Option set or if you want to force a lease",
    "start": "2610400",
    "end": "2617280"
  },
  {
    "text": "refresh you'll get all the new stuff too so back to our model now that we've",
    "start": "2617280",
    "end": "2624559"
  },
  {
    "text": "updated our DHCP option sets we've deployed two domain controllers one in each",
    "start": "2624559",
    "end": "2632079"
  },
  {
    "text": "subnet registered them with our internal corporate domain and now when instance comes up",
    "start": "2632079",
    "end": "2637920"
  },
  {
    "text": "with a friendly name it knows where to go it has DNS checks DNS for its serve record right so",
    "start": "2637920",
    "end": "2645119"
  },
  {
    "text": "it knows what domain controller to talk to joins the domain that replicates down to your",
    "start": "2645119",
    "end": "2652240"
  },
  {
    "text": "corporate forest and off you go there's one little",
    "start": "2652240",
    "end": "2657520"
  },
  {
    "text": "trick um by removing Microsoft DHCP from the equation you don't get automatic a",
    "start": "2657520",
    "end": "2663920"
  },
  {
    "text": "and pointer records so you'll get the a record but you won't get the reverse won't get the pointer automatically",
    "start": "2663920",
    "end": "2669760"
  },
  {
    "text": "unless you check these two boxes put in your DNS suffix or enforce this with the GPO of course um as long as those things",
    "start": "2669760",
    "end": "2678040"
  },
  {
    "text": "are present then anything joining you'll get both sides of the record so you'll get your a and your and your",
    "start": "2678040",
    "end": "2686200"
  },
  {
    "text": "pointer and this is just a sample power shell script you would throw into user data to do this um this takes whatever",
    "start": "2687400",
    "end": "2695160"
  },
  {
    "text": "you put in the name tag for for the ec2 instance it takes that as the friendly",
    "start": "2695160",
    "end": "2700559"
  },
  {
    "text": "name registers that as the machine name in The Domain obviously registers the machine",
    "start": "2700559",
    "end": "2706200"
  },
  {
    "text": "in the domain and then reboots um you'll notice I actually left the credential strings in there",
    "start": "2706200",
    "end": "2712520"
  },
  {
    "text": "which you can decide whether that's best practice or not there's many different ways to do this but this is the easy way",
    "start": "2712520",
    "end": "2718319"
  },
  {
    "text": "to do it um I created a a a a domain user that only could add machines so",
    "start": "2718319",
    "end": "2724240"
  },
  {
    "text": "that's one thing but you could put this in a secure file I mean there's many way you could secure this better than than putting a password string into the shell",
    "start": "2724240",
    "end": "2733119"
  },
  {
    "text": "script and this just illustrates what a DNS query would now look like so query your local DNS within the",
    "start": "2733119",
    "end": "2741200"
  },
  {
    "text": "VPC it's set it's foring DNS configuration to be your corporate domain DNS that DNS didn't have it",
    "start": "2741200",
    "end": "2749079"
  },
  {
    "text": "cashed off you go to the internet back so completely circumventing the Amazon",
    "start": "2749079",
    "end": "2754160"
  },
  {
    "text": "DNS and again we have uh quite a few uh",
    "start": "2754160",
    "end": "2760200"
  },
  {
    "text": "examples of this for SharePoint for exchange of how to deploy active directory uh in the",
    "start": "2760200",
    "end": "2767519"
  },
  {
    "start": "2770000",
    "end": "2959000"
  },
  {
    "text": "cloud all right bringing it all back home so now we've got public facing web app",
    "start": "2773760",
    "end": "2780599"
  },
  {
    "text": "now we have this internal corporate application in its own VPC it's now tied into your domain controllers backr",
    "start": "2780599",
    "end": "2788440"
  },
  {
    "text": "home and what's next so it turns out this internal",
    "start": "2788440",
    "end": "2794319"
  },
  {
    "text": "corporate out was pretty popular and",
    "start": "2794319",
    "end": "2800160"
  },
  {
    "text": "now everyone wants one where you had two vpcs I have five 10 20 who",
    "start": "2800160",
    "end": "2807559"
  },
  {
    "text": "knows if you continue to use vpns for this obviously you're creating customer",
    "start": "2807559",
    "end": "2814119"
  },
  {
    "text": "Gateway endpoints on your end so if you have VPN end points on your in this example we",
    "start": "2814119",
    "end": "2819760"
  },
  {
    "text": "have a pair of ha ha pair of VPN endpoints you're creating a customer Gateway for every single one of these",
    "start": "2819760",
    "end": "2827480"
  },
  {
    "text": "vpcs every one of those customer gateways has to have a public IP address assigned to",
    "start": "2827480",
    "end": "2832760"
  },
  {
    "text": "it and it starts to become a bit of an administrative headache especially if",
    "start": "2832760",
    "end": "2837839"
  },
  {
    "text": "you're pushing a large amount of traffic so you know you've got to have some pretty good gear if these these",
    "start": "2837839",
    "end": "2843880"
  },
  {
    "text": "individual VPN tunnels are starting to push multi-gigabit traffic um obviously that's some top end gear some expensive",
    "start": "2843880",
    "end": "2851599"
  },
  {
    "text": "stuff this is one model I have several customers who've gone this way so they collapse inwards do the Hub and",
    "start": "2853280",
    "end": "2861559"
  },
  {
    "text": "spoke have a centralized VPC that provides common services like logging and",
    "start": "2861559",
    "end": "2867400"
  },
  {
    "text": "monitoring and then all the other satellite vpcs are running ec2 endpoints that run",
    "start": "2867400",
    "end": "2873960"
  },
  {
    "text": "VPN software that Connect into the into the vgw of the central",
    "start": "2873960",
    "end": "2879119"
  },
  {
    "text": "VPC and this works to a certain extent but you also have to be comfortable with managing VPN",
    "start": "2879119",
    "end": "2884640"
  },
  {
    "text": "infrastructure because every one of those vpcs now has at Le hopefully two ec2 end points you know an ha pair of of",
    "start": "2884640",
    "end": "2892319"
  },
  {
    "text": "VPN devices that you're now managing you know you're managing some kind of D Dynamic routing protocol",
    "start": "2892319",
    "end": "2898680"
  },
  {
    "text": "between all these Hub and spokes OPF or bgp so there's there's a bar there and",
    "start": "2898680",
    "end": "2904640"
  },
  {
    "text": "it's it can be a headache and again if that single tunnel going back down to",
    "start": "2904640",
    "end": "2909800"
  },
  {
    "text": "you is also high bandwidth at a certain point you're going to start pushing the",
    "start": "2909800",
    "end": "2915119"
  },
  {
    "text": "the limits so direct connect a private fiber",
    "start": "2915119",
    "end": "2922480"
  },
  {
    "text": "connection service simplifies a lot of this you know you can get a direct",
    "start": "2922480",
    "end": "2928400"
  },
  {
    "text": "connection into the region whether it's 50 to 500 megabits which is actually",
    "start": "2928400",
    "end": "2933720"
  },
  {
    "text": "brand new we've announced sub at 1 gbit speeds for Direct Connect 1 GB pipes 10",
    "start": "2933720",
    "end": "2939359"
  },
  {
    "text": "GB pipes or multiples thereof you can get it's almost like the",
    "start": "2939359",
    "end": "2944960"
  },
  {
    "text": "direct connect location acts like a mega customer Gateway right and you define",
    "start": "2944960",
    "end": "2950640"
  },
  {
    "text": "all the interfaces on that single customer",
    "start": "2950640",
    "end": "2955160"
  },
  {
    "text": "Gateway so a few more bits on Direct Connect you can create virtual",
    "start": "2958880",
    "end": "2964880"
  },
  {
    "text": "interfaces so you create create private logical interfaces on the direct connect and associate with them with the vpcs so",
    "start": "2964880",
    "end": "2971440"
  },
  {
    "text": "one per VPC and also create public interfaces to AWS so access public",
    "start": "2971440",
    "end": "2977480"
  },
  {
    "text": "resources in that AWS region over Direct Connect obviously consistent Network",
    "start": "2977480",
    "end": "2984000"
  },
  {
    "text": "performance latency it's a dedicated connection there's at least one location",
    "start": "2984000",
    "end": "2989040"
  },
  {
    "text": "Associated to each region some region have two and what we do is we extend private fiber from the AWS region to",
    "start": "2989040",
    "end": "2996040"
  },
  {
    "text": "these Direct Connect locations and usually these Direct Connect locations they're equinex or corite these are are",
    "start": "2996040",
    "end": "3003480"
  },
  {
    "text": "large colos that have a a concentration of customers already so um there's a good chance you're already there and",
    "start": "3003480",
    "end": "3011079"
  },
  {
    "text": "it's a very simple process to just get patched into us if you're not there we have a whole uh environment ecosystem of",
    "start": "3011079",
    "end": "3019200"
  },
  {
    "text": "partners that provide the Last Mile Services to get you there",
    "start": "3019200",
    "end": "3024880"
  },
  {
    "text": "and obviously we always recommend redundant connections and as you saw before if you don't go redundant",
    "start": "3027200",
    "end": "3033440"
  },
  {
    "text": "connections and you only have a single Direct Connect line but you also have VPN you can do that as a backup and the",
    "start": "3033440",
    "end": "3040760"
  },
  {
    "text": "vgw will always favor that direct connect connection so let's take a look at what",
    "start": "3040760",
    "end": "3046520"
  },
  {
    "text": "that would look like so here's our first",
    "start": "3046520",
    "end": "3052160"
  },
  {
    "text": "VPC 1 vgw we create that private virtual interface",
    "start": "3052160",
    "end": "3057720"
  },
  {
    "text": "we give it a unique ban tag the bgp is ASN is actually that's",
    "start": "3057720",
    "end": "3063520"
  },
  {
    "text": "Amazon's that's AWS is 7224 out of that interface will be advertised The Cider Block You've",
    "start": "3063520",
    "end": "3070240"
  },
  {
    "text": "assigned to the VPC and then obviously you give the interface itself an IP address here I've",
    "start": "3070240",
    "end": "3075440"
  },
  {
    "text": "used a link local address but it can you can put whatever IP address private IP address you want",
    "start": "3075440",
    "end": "3082720"
  },
  {
    "text": "here and this is what you define on your end so notice the most important part is these VLAN tags are identical because",
    "start": "3082720",
    "end": "3089920"
  },
  {
    "text": "that is what determines this layer 2 virtual pipe across the direct connect that extends the VPC into your",
    "start": "3089920",
    "end": "3096920"
  },
  {
    "text": "network uh the bgp ASN on your end can be if you have a public one you can use it or you can just use a private one um",
    "start": "3096920",
    "end": "3103799"
  },
  {
    "text": "there's no worries there it's a it's a it's a onetoone connection you can also obviously you're",
    "start": "3103799",
    "end": "3110720"
  },
  {
    "text": "you're announcing whatever you want over that connection and same for the next one the only thing different is the V tag",
    "start": "3110720",
    "end": "3117480"
  },
  {
    "text": "distinct and unique for that connection and the bgp announcement is for that VPC and again I've used a different bgp",
    "start": "3117480",
    "end": "3125160"
  },
  {
    "text": "ASN on your end that's not required I just did that to make it distinct on these",
    "start": "3125160",
    "end": "3130520"
  },
  {
    "text": "configurations and on we go right every single one gets its own",
    "start": "3130520",
    "end": "3135880"
  },
  {
    "text": "pipe and every VPC now goes over the same physical connection now when it comes to routing",
    "start": "3138960",
    "end": "3145880"
  },
  {
    "text": "this is what the table starts to look like on your end but we don't do any routing between",
    "start": "3145880",
    "end": "3151160"
  },
  {
    "text": "interfaces on our end it literally is a layer two connection all the way to you so routing decisions must be made on",
    "start": "3151160",
    "end": "3157119"
  },
  {
    "text": "your end so when you start to do intra VPC routing say if you want vpc1 to talk",
    "start": "3157119",
    "end": "3162280"
  },
  {
    "text": "to VPC 4 those packets come down to you you make the decision and it goes back out so just like",
    "start": "3162280",
    "end": "3170558"
  },
  {
    "text": "this yeah and so now all the vpcs can talk to each other you know there's no tunnels there's no encryption layers",
    "start": "3171960",
    "end": "3178319"
  },
  {
    "text": "they're all routing between each other and according to your routing",
    "start": "3178319",
    "end": "3184119"
  },
  {
    "start": "3184000",
    "end": "3335000"
  },
  {
    "text": "policy which bring me brings me to tip number eight is to know your routing",
    "start": "3184119",
    "end": "3189400"
  },
  {
    "text": "database so in order to see what the vwcs a little thing I do is I I create a",
    "start": "3189400",
    "end": "3196040"
  },
  {
    "text": "a separate routing table I don't assign it to anything and I enable what we call route propagation so you enable route",
    "start": "3196040",
    "end": "3202000"
  },
  {
    "text": "propagation on a routing table and that means that routing table now sees",
    "start": "3202000",
    "end": "3207319"
  },
  {
    "text": "whatever bgp announcements come on the other side of the vgw are populated into the VPC by the",
    "start": "3207319",
    "end": "3214720"
  },
  {
    "text": "vgw so as soon as you enable that on the routing table you're going to get all the networks that you see over that",
    "start": "3214720",
    "end": "3221000"
  },
  {
    "text": "connection so it's just a nice way to keep a clean record of exactly what",
    "start": "3221000",
    "end": "3226160"
  },
  {
    "text": "you're seeing of all your internal CER blocks and also the CER blocks of your other vpcs if you're announcing out all",
    "start": "3226160",
    "end": "3231960"
  },
  {
    "text": "of those bgp networks over your uh separate VPC connection",
    "start": "3231960",
    "end": "3238440"
  },
  {
    "text": "so we talked about private virtual interfaces to all these vpcs but you can also have a public",
    "start": "3240680",
    "end": "3246559"
  },
  {
    "text": "one so just like we created before you can create a public interface to the public AWS the only difference now is",
    "start": "3246559",
    "end": "3254200"
  },
  {
    "text": "instead of advertising out the VPC cider block we're announcing out whatever",
    "start": "3254200",
    "end": "3259400"
  },
  {
    "text": "public CER blocks are associated with that region",
    "start": "3259400",
    "end": "3264880"
  },
  {
    "text": "the only difference is on your end it's a public connection so you need to treat it as such it's the internet basically",
    "start": "3267680",
    "end": "3274640"
  },
  {
    "text": "um so we don't do any natat or any functionality on there that's something you have to do on your end and obviously",
    "start": "3274640",
    "end": "3279920"
  },
  {
    "text": "security layer between that and your internal Network would be handled by you but now we have an actual",
    "start": "3279920",
    "end": "3286839"
  },
  {
    "text": "designation for the public AWS and a routing table so everything AWS related whether it's S3 or even amazon.com would",
    "start": "3286839",
    "end": "3294720"
  },
  {
    "text": "go over this connection so here I represent some kind of nat Pat",
    "start": "3294720",
    "end": "3299920"
  },
  {
    "text": "security layer that would front this interface and the same deal if you",
    "start": "3299920",
    "end": "3304960"
  },
  {
    "text": "wanted to reach S3 now you could leverage direct connect to do that the packets would come down to",
    "start": "3304960",
    "end": "3311760"
  },
  {
    "text": "you through Direct Connect and go back out over the public interface but it's absolutely",
    "start": "3311760",
    "end": "3318760"
  },
  {
    "text": "doable and you know you might even get better latencies depending on upon how close you are to the direct connect",
    "start": "3318760",
    "end": "3324920"
  },
  {
    "text": "facility and this is just illustrating the same with your internal Network straight out",
    "start": "3324920",
    "end": "3330119"
  },
  {
    "text": "the public to",
    "start": "3330119",
    "end": "3333440"
  },
  {
    "start": "3335000",
    "end": "3456000"
  },
  {
    "text": "S3 so this is what it might look like from a physical perspective where you have your routers we say customer",
    "start": "3335520",
    "end": "3342559"
  },
  {
    "text": "routers but these could also be your TCO provider routers whatever it is that gets you the last mile into that",
    "start": "3342559",
    "end": "3347880"
  },
  {
    "text": "facility that Direct Connect location if you're not actually there yourself already and here we have redundant",
    "start": "3347880",
    "end": "3353920"
  },
  {
    "text": "connections and we tie them together with bgp multipathing so they're active",
    "start": "3353920",
    "end": "3359480"
  },
  {
    "text": "active load balanced we support all the standard bgp stuff so if you want to do",
    "start": "3359480",
    "end": "3364640"
  },
  {
    "text": "meds if you want to do local preference we support all of that we also support BFD so bidirectional forwarding",
    "start": "3364640",
    "end": "3370400"
  },
  {
    "text": "detection for fast link failover support that too and this starts to get really fun",
    "start": "3370400",
    "end": "3378280"
  },
  {
    "text": "when you start leveraging your own network so say you have your own MLS Cloud you can terminate that at each",
    "start": "3378280",
    "end": "3385559"
  },
  {
    "text": "Direct Connect look if that's a region you want to get to and you start tying in the regions to",
    "start": "3385559",
    "end": "3391160"
  },
  {
    "text": "your to your Cloud to your you know your internal cloud and so each AWS region just becomes another spoke on your",
    "start": "3391160",
    "end": "3398000"
  },
  {
    "text": "internal Hub and every resource in every region can talk to each other vpcs in Europe can now talk to",
    "start": "3398000",
    "end": "3404119"
  },
  {
    "text": "vpcs in",
    "start": "3404119",
    "end": "3407318"
  },
  {
    "text": "Virginia and there you go you know Global VPC",
    "start": "3413760",
    "end": "3419440"
  },
  {
    "text": "domination I just realized this slide looks like Missile Command that was not intentional but I like",
    "start": "3419440",
    "end": "3426078"
  },
  {
    "text": "it so here's all we covered there's a lot of stuff thank you for your patience",
    "start": "3426720",
    "end": "3431920"
  },
  {
    "text": "uh one thing I want to mention bpc is free I mean how cool is that cloud",
    "start": "3431920",
    "end": "3437480"
  },
  {
    "text": "information is free uh the only thing you pay for with bpc is the a port charge for VPN connection so it's 5",
    "start": "3437480",
    "end": "3443480"
  },
  {
    "text": "cents an hour for any active VPN tunnels you have but beyond that all the features and functionality we discussed",
    "start": "3443480",
    "end": "3449079"
  },
  {
    "text": "are free",
    "start": "3449079",
    "end": "3452280"
  }
]