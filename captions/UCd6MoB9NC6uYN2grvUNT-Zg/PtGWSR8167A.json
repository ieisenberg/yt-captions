[
  {
    "start": "0",
    "end": "151000"
  },
  {
    "text": "hello i'm rob higurita and i'm an enterprise support lead at aws and i'm based out of austin texas",
    "start": "5359",
    "end": "12160"
  },
  {
    "text": "welcome to aws supports you where we share best practices and troubleshooting tips from aws support",
    "start": "12160",
    "end": "18480"
  },
  {
    "text": "joining me today is mike welds and ivy bakarov from aws support can you give us a quick introduction",
    "start": "18480",
    "end": "24560"
  },
  {
    "text": "mike and then hey i'm mike wells a technical account manager based out of colorado",
    "start": "24560",
    "end": "31760"
  },
  {
    "text": "and as a technical account manager i get to proactively monitor my customers aws environments and assist with",
    "start": "31760",
    "end": "37680"
  },
  {
    "text": "proof-of-concept initiatives and address real business outcomes i also coordinate",
    "start": "37680",
    "end": "43280"
  },
  {
    "text": "access to programs and other aws experts as needed technical account managers they're both",
    "start": "43280",
    "end": "49120"
  },
  {
    "text": "technical and business focused to help aws customers get the best value from aws services",
    "start": "49120",
    "end": "55199"
  },
  {
    "text": "aiden hi i'm iden beckrov i'm an enterprise support lead in san jose california so echo",
    "start": "55199",
    "end": "62079"
  },
  {
    "text": "everything mike said there and i'm really interested in continuously improving",
    "start": "62079",
    "end": "67280"
  },
  {
    "text": "distributed applications and micro services and step functions is a great help in that regard and so",
    "start": "67280",
    "end": "73360"
  },
  {
    "text": "i'm excited to share some knowledge and support customers better so yeah great thanks for the",
    "start": "73360",
    "end": "80320"
  },
  {
    "text": "introduction mike and idan uh so today we'll be introducing you to aws step functions we'll specifically focus on getting you",
    "start": "80320",
    "end": "87439"
  },
  {
    "text": "information on what aws step functions are and how to use aws set functions to",
    "start": "87439",
    "end": "92479"
  },
  {
    "text": "accelerate development and simplify your workflows before we get into the details though a",
    "start": "92479",
    "end": "97600"
  },
  {
    "text": "quick note to the attendees online please feel free to use the chat window on the right hand side of your screen",
    "start": "97600",
    "end": "103360"
  },
  {
    "text": "to share your thoughts and ask your questions throughout the episode we really want to hear your interactions and your questions today so we look",
    "start": "103360",
    "end": "109759"
  },
  {
    "text": "forward to it i can you go ahead and walk us through what we're going to be talking about today yeah totally rob so we'll cover the key",
    "start": "109759",
    "end": "118000"
  },
  {
    "text": "use cases for workflows workflows as in steps um which your your application or your",
    "start": "118000",
    "end": "124320"
  },
  {
    "text": "process is going through they will cover the the key benefits of using aws step functions",
    "start": "124320",
    "end": "130000"
  },
  {
    "text": "and we'll cover how to actually build these workflows and to meet actual business needs and",
    "start": "130000",
    "end": "136560"
  },
  {
    "text": "you know the different types of workflows for different challenges that step functions can offer and lastly you know getting started and",
    "start": "136560",
    "end": "143360"
  },
  {
    "text": "next steps and you know we'll also do um some demos along the way and yeah that's that's the gist here",
    "start": "143360",
    "end": "151280"
  },
  {
    "start": "151000",
    "end": "262000"
  },
  {
    "text": "so you know let's let's jump into it you know why why the effort in in modernization",
    "start": "151280",
    "end": "157680"
  },
  {
    "text": "it's modernization is a business priority today um you you need to keep up and the the",
    "start": "157680",
    "end": "165519"
  },
  {
    "text": "major perks that step functions um provides are are you know basically",
    "start": "165519",
    "end": "170560"
  },
  {
    "text": "everything that serverless environments provide for you so you know step functions is a",
    "start": "170560",
    "end": "176879"
  },
  {
    "text": "serverless function orchestrator and it makes it very easy to sequence like aws lambda functions",
    "start": "176879",
    "end": "183360"
  },
  {
    "text": "and multiple aws services um into you know actual business critical applications and",
    "start": "183360",
    "end": "189920"
  },
  {
    "text": "you know it's it's a serverless solution really for orchestrating business workflows and",
    "start": "189920",
    "end": "196879"
  },
  {
    "text": "the benefits here really you know like adapting at scale what this means is you know from zero to peak you don't",
    "start": "196879",
    "end": "202879"
  },
  {
    "text": "have to over provision um you you only need to provision exactly what you need to to satisfy our customers delight your",
    "start": "202879",
    "end": "209840"
  },
  {
    "text": "customers um this means lower costs not only for you but for your your customers",
    "start": "209840",
    "end": "215200"
  },
  {
    "text": "and you know you pay for exactly what you're using it's um and resources are optimized on your",
    "start": "215200",
    "end": "221040"
  },
  {
    "text": "behalf and what this really translates into is you know i'm getting your idea to market faster",
    "start": "221040",
    "end": "227920"
  },
  {
    "text": "you eliminate a lot of operational overheads and you can release your features quicker",
    "start": "227920",
    "end": "233760"
  },
  {
    "text": "it also has a lot of other benefits like a breaking applications into service components or steps",
    "start": "233760",
    "end": "239519"
  },
  {
    "text": "right that ensure that you know failure one component doesn't bring the whole system down",
    "start": "239519",
    "end": "244560"
  },
  {
    "text": "um you can scale each component independently and that components might be updated",
    "start": "244560",
    "end": "249680"
  },
  {
    "text": "without requiring you know the entire system be redeployed after each change so all this translates",
    "start": "249680",
    "end": "255760"
  },
  {
    "text": "into a better customer experience over to mike yeah let's jump into a real",
    "start": "255760",
    "end": "263040"
  },
  {
    "start": "262000",
    "end": "356000"
  },
  {
    "text": "world case study um i studied about lego recently and lego started their serverless journey in",
    "start": "263040",
    "end": "268520"
  },
  {
    "text": "2019 whenever they migrated their e-commerce website to a serverless platform on aws",
    "start": "268520",
    "end": "274639"
  },
  {
    "text": "in 2020 the lego team focused on acceleration and looked at aws step functions to help",
    "start": "274639",
    "end": "280240"
  },
  {
    "text": "lego uses aws step functions to address two different business needs on their ecommerce platform first they have a product",
    "start": "280240",
    "end": "287360"
  },
  {
    "text": "catalog feed for lego.com with thousands of products across tens of countries and they needed to take that product",
    "start": "287360",
    "end": "293600"
  },
  {
    "text": "data and publish it to different consumers like social media and back-end applications",
    "start": "293600",
    "end": "299120"
  },
  {
    "text": "the key here is that the platform that serves their customer is also the platform that they'll use to",
    "start": "299120",
    "end": "304240"
  },
  {
    "text": "run their own queries and that means that for each country they need to perform a large volume of queries without",
    "start": "304240",
    "end": "310880"
  },
  {
    "text": "overloading the platform step functions allowed lego to easily control and smooth out the number of parallel",
    "start": "310880",
    "end": "317600"
  },
  {
    "text": "queries that they performed at any given time another area where lego took advantage of step functions was",
    "start": "317600",
    "end": "323759"
  },
  {
    "text": "empowering their online recommendation engine as product feeds are updated and fed to the",
    "start": "323759",
    "end": "329440"
  },
  {
    "text": "recommendation engine there are some that will inevitably fail but step functions enabled lego to",
    "start": "329440",
    "end": "335520"
  },
  {
    "text": "automatically manage the reprocessing of only those failed feeds without missing a beat",
    "start": "335520",
    "end": "341440"
  },
  {
    "text": "i admire you tell us a little bit about workflows and how those help what exactly this is totally so",
    "start": "341440",
    "end": "349840"
  },
  {
    "text": "you know workflows are are all around us really um you know it's it's also you know",
    "start": "349840",
    "end": "356000"
  },
  {
    "start": "356000",
    "end": "570000"
  },
  {
    "text": "let's let's start with data processing a very common example like data is everywhere right and and",
    "start": "356000",
    "end": "361600"
  },
  {
    "text": "organizations that take advantage of this really differentiate themselves by developing new",
    "start": "361600",
    "end": "366880"
  },
  {
    "text": "and compelling experiences for customers to gain some competitive advantage right data is diverse",
    "start": "366880",
    "end": "374240"
  },
  {
    "text": "and you know it comes from varying sources like mobile devices your actual applications you know",
    "start": "374240",
    "end": "380720"
  },
  {
    "text": "marketing and sales data external data operational data stores like your infrastructure generates data",
    "start": "380720",
    "end": "386560"
  },
  {
    "text": "as well your logs uh and more you know it's basically looking at how to be data",
    "start": "386560",
    "end": "392400"
  },
  {
    "text": "driven and and break down data silos to gain insights and um that is that is",
    "start": "392400",
    "end": "398639"
  },
  {
    "text": "the reason what data processing is is the first example i want to talk about um you know we i mentioned here like media",
    "start": "398639",
    "end": "406000"
  },
  {
    "text": "processing you know unstructured data processing real time order processing batch processing",
    "start": "406000",
    "end": "411360"
  },
  {
    "text": "and each of each of these has their own steps of you know massaging the data or cleaning",
    "start": "411360",
    "end": "416960"
  },
  {
    "text": "the data or collecting or preparing and and so that's that is a great use",
    "start": "416960",
    "end": "422240"
  },
  {
    "text": "case for step functions and um so let's put that out there that's that's a great use case for it",
    "start": "422240",
    "end": "428639"
  },
  {
    "text": "and and you'll see as well a lot of the service integrations really lend themselves to this like for example",
    "start": "428639",
    "end": "433680"
  },
  {
    "text": "um later we'll talk about how emr um and aws batch our elastic mapreduce and",
    "start": "433680",
    "end": "440080"
  },
  {
    "text": "aws batch are integrated um directly with step functions um you know next machine learning very similar there's a",
    "start": "440080",
    "end": "446960"
  },
  {
    "text": "lot of workflows there you know in order to build train and deploy your models and actually have them providing meaningful",
    "start": "446960",
    "end": "453599"
  },
  {
    "text": "insights and predictions for you those there's a lot of steps in that and that as well",
    "start": "453599",
    "end": "459919"
  },
  {
    "text": "you know microservice orchestration or distributed apps they have to talk the services need to",
    "start": "459919",
    "end": "465039"
  },
  {
    "text": "talk to each other they need to be able to handle failures as you mentioned retries you know be it lambdas be it",
    "start": "465039",
    "end": "472560"
  },
  {
    "text": "containers be it like a human step of approval that's also involved in orchestration um and you",
    "start": "472560",
    "end": "480080"
  },
  {
    "text": "know lastly like security and i.t automation can have a lot of workflow steps in it as well",
    "start": "480080",
    "end": "485440"
  },
  {
    "text": "you know like access management is if a employee is asking to break glass and",
    "start": "485440",
    "end": "490479"
  },
  {
    "text": "and you know help in an emergency um you know you should be able to have this workflow",
    "start": "490479",
    "end": "496240"
  },
  {
    "text": "kind of audited visible and you know provide that insight",
    "start": "496240",
    "end": "501280"
  },
  {
    "text": "you know business case even like a credit application if you're a credit card or a financial company",
    "start": "501280",
    "end": "506879"
  },
  {
    "text": "or even like your ci cd pipelines that is a series of workflows that you can integrate with step",
    "start": "506879",
    "end": "512080"
  },
  {
    "text": "functions so there's a ton of different workflows that can help you out with this",
    "start": "512080",
    "end": "518560"
  },
  {
    "text": "yeah i guess uh rob do we have any questions from um the audience yet hey thanks again uh",
    "start": "518560",
    "end": "525920"
  },
  {
    "text": "we don't have any questions from the audience right now uh but i do have a question you're talking about the different workflows and",
    "start": "525920",
    "end": "531760"
  },
  {
    "text": "just kind of curious about the properties of some for standard workflows and some properties of express workflows like",
    "start": "531760",
    "end": "537519"
  },
  {
    "text": "can you take advantage of both options or how does that work overall yes you can so depending on the",
    "start": "537519",
    "end": "544000"
  },
  {
    "text": "challenges you're you're facing like standard workflows and express workflows um you know asynchronous and synchronous",
    "start": "544000",
    "end": "550480"
  },
  {
    "text": "we're actually going to have a slide later on that explains this in really good detail but short answer yes you can",
    "start": "550480",
    "end": "556720"
  },
  {
    "text": "you can mix and match and you know meet the perfect needs and i'll definitely do that that",
    "start": "556720",
    "end": "562320"
  },
  {
    "text": "that question justice in a few slides later rob great thanks i appreciate it",
    "start": "562320",
    "end": "569200"
  },
  {
    "text": "let's talk about another case study most people have heard of thompson and they have a lot of publications and",
    "start": "569360",
    "end": "574959"
  },
  {
    "start": "570000",
    "end": "692000"
  },
  {
    "text": "a lot of tv channels and if you consume any news at all it's probably hard to get through the course of the day without reading some",
    "start": "574959",
    "end": "581040"
  },
  {
    "text": "of their stories or watching some of their video clips they did have a problem uh not too long",
    "start": "581040",
    "end": "586399"
  },
  {
    "text": "ago they have a lot of incoming videos which is usual uh the incoming clips fortunately for",
    "start": "586399",
    "end": "592800"
  },
  {
    "text": "them are all in the same format so unlike many media companies they don't have too much of an input conversion",
    "start": "592800",
    "end": "597920"
  },
  {
    "text": "problem however they ve very wild wildly in length from",
    "start": "597920",
    "end": "603200"
  },
  {
    "text": "like a three second clip to a half hour long interview with a newsmaker and they need to convert this for",
    "start": "603200",
    "end": "608640"
  },
  {
    "text": "delivery and this is news so they need to do it fast and historically they use ffmpeg which",
    "start": "608640",
    "end": "614959"
  },
  {
    "text": "if you're in the biz or it's what everyone uses the problem is is that it's single",
    "start": "614959",
    "end": "620640"
  },
  {
    "text": "threaded so if you want to transcode a half hour video you can easily end up waiting in half hour for that video to",
    "start": "620640",
    "end": "626160"
  },
  {
    "text": "be transcoded well it turns out if you look at a stream of video frames some of them are special and they're",
    "start": "626160",
    "end": "632320"
  },
  {
    "text": "called key frames and results show that the actual video processing time of each segment is",
    "start": "632320",
    "end": "638160"
  },
  {
    "text": "pretty much static around three seconds to half a second per segment and the initial identification of",
    "start": "638160",
    "end": "644560"
  },
  {
    "text": "keyframes within the source video does depend on the size of the source video and you have to tick",
    "start": "644560",
    "end": "650000"
  },
  {
    "text": "through the whole video to identify the keyframes we're currently doing a little bit further implementation to make this",
    "start": "650000",
    "end": "656160"
  },
  {
    "text": "stage more efficient to save any more time and this could this could feasibly take the processing of any video down to a few seconds",
    "start": "656160",
    "end": "663519"
  },
  {
    "text": "so what what we do in this case with step functions is break the uh break the prop break the",
    "start": "663519",
    "end": "669279"
  },
  {
    "text": "process up and parallel process rather than processing this all at once so in this way we can break down the",
    "start": "669279",
    "end": "676160"
  },
  {
    "text": "processing of video from a 20 minute processing time to be able to transcode it down to two minutes",
    "start": "676160",
    "end": "682800"
  },
  {
    "text": "which is uh fantastic another use case is about um about new data and",
    "start": "682800",
    "end": "690160"
  },
  {
    "text": "new data is a aws customer that helps uses aws to help customers fight fraud",
    "start": "690160",
    "end": "696000"
  },
  {
    "start": "692000",
    "end": "1075000"
  },
  {
    "text": "and protect customers online they were acquired by mastercard in 2017 new data is a canadian startup and just",
    "start": "696000",
    "end": "702800"
  },
  {
    "text": "started using machine learning to detect and prevent account takeover and fraud new data uses uh amazon sage maker to",
    "start": "702800",
    "end": "709839"
  },
  {
    "text": "improve the detection of fraudulent activities like credential stuffing and i hope they use a host of services",
    "start": "709839",
    "end": "716079"
  },
  {
    "text": "but they orchestrate them all with aws step functions and this simplifies the machine learning",
    "start": "716079",
    "end": "721120"
  },
  {
    "text": "architecture and optimizes its training workflow through these improvements and through using aws",
    "start": "721120",
    "end": "727519"
  },
  {
    "text": "step functions they were able to uh reduce the time it takes to develop models",
    "start": "727519",
    "end": "733519"
  },
  {
    "text": "by 60 percent um rob there's a there's a case study from this if you",
    "start": "733519",
    "end": "738880"
  },
  {
    "text": "hopefully i gave you the link if you could post it in the chat for anyone who wants to follow up more about this um",
    "start": "738880",
    "end": "746079"
  },
  {
    "text": "so i didn't why don't you tell us about how the application orchestration works totally",
    "start": "746079",
    "end": "752399"
  },
  {
    "text": "um mike i just wanted to call out like your thompson reuters example like just just how wild that that can be",
    "start": "752399",
    "end": "759680"
  },
  {
    "text": "like you can scale to thousands and thousands of lambdas you know instead of scaling you know ec2",
    "start": "759680",
    "end": "765920"
  },
  {
    "text": "instances right like it's it's so much easier to scale lambdas and and have step functions orchestrate it for you um",
    "start": "765920",
    "end": "773440"
  },
  {
    "text": "you know and and make sure like the right output is is coming out of these keyframes um yeah that's that's huge you i think",
    "start": "773440",
    "end": "780480"
  },
  {
    "text": "i've seen even other blogs where we cut you can cut down like you know from hours of work to like a minute or",
    "start": "780480",
    "end": "786399"
  },
  {
    "text": "you know around that time frame so it's it's all about what you want to you know to scale that concurrency and",
    "start": "786399",
    "end": "791680"
  },
  {
    "text": "and that parallelism too but um yeah super cool example um yeah thanks mike so",
    "start": "791680",
    "end": "797519"
  },
  {
    "text": "um you know orchestration application orchestration you know it's pretty common for for modern cloud",
    "start": "797519",
    "end": "804560"
  },
  {
    "text": "apps to be composed of many services and components right um you might be familiar with the term loosely coupled",
    "start": "804560",
    "end": "810880"
  },
  {
    "text": "microservices you know that that helps build an app as a suite of small services like each running in its own",
    "start": "810880",
    "end": "817600"
  },
  {
    "text": "process each independently deployable um you know in an application different microservices need to communicate with",
    "start": "817600",
    "end": "824160"
  },
  {
    "text": "each other you know depending on what they're trying to achieve and you know like let's let's pretend you're",
    "start": "824160",
    "end": "829199"
  },
  {
    "text": "trying to find restaurants open for delivery and that's a totally different set of microservices needed",
    "start": "829199",
    "end": "835360"
  },
  {
    "text": "you know that you'll you'll communicate with when then when you're trying to place that order um so that that's a good example like",
    "start": "835360",
    "end": "842880"
  },
  {
    "text": "you know and as your app grows and you've got an increasing amount of code that needs to be written just to",
    "start": "842880",
    "end": "848480"
  },
  {
    "text": "coordinate the interaction um deal with retries deal with failures you know all these components that's really where like managing these",
    "start": "848480",
    "end": "855920"
  },
  {
    "text": "these simple workflows these actually and complex workflows with step functions can be very helpful",
    "start": "855920",
    "end": "861760"
  },
  {
    "text": "um so yeah they let you focus on your your actual business components you know instead of",
    "start": "861760",
    "end": "867199"
  },
  {
    "text": "writing all the software and the glue to make that interaction work um that's the orchestration really talking about here",
    "start": "867199",
    "end": "873199"
  },
  {
    "text": "and um you know container orchestration you know you can you can orchestrate i",
    "start": "873199",
    "end": "879360"
  },
  {
    "text": "know i talked about lambdas a few times but you can also orchestrate containers like for example",
    "start": "879360",
    "end": "884800"
  },
  {
    "text": "we even have serverless aws fargate tasks right you can upload your container",
    "start": "884800",
    "end": "890480"
  },
  {
    "text": "um you know with with one or many services in it and that can be orchestrated as well",
    "start": "890480",
    "end": "895760"
  },
  {
    "text": "direct integration and same goes with you know the lambdas like you know if you're building um all you know many different lambda",
    "start": "895760",
    "end": "903040"
  },
  {
    "text": "functions each with a function independently um so that's it in a gist that's that's the orchestration we're",
    "start": "903040",
    "end": "908160"
  },
  {
    "text": "really talking about here and um i can't wait to show you you know uh how it actually looks with",
    "start": "908160",
    "end": "913839"
  },
  {
    "text": "you know the visual workflows and stuff like that but um rob i guess uh any any questions rob",
    "start": "913839",
    "end": "922000"
  },
  {
    "text": "hey so we don't have any questions specifically although we do have uh kind of went back from rancor bro",
    "start": "922000",
    "end": "927120"
  },
  {
    "text": "welcome back to the show um they're kind of looking for ways to get away from like using proprietary software that renames files and dates",
    "start": "927120",
    "end": "934000"
  },
  {
    "text": "um does that sound like a good fit for uh you know using stop functions being able to orchestrate kind of some automated actions",
    "start": "934000",
    "end": "941199"
  },
  {
    "text": "definitely i would say so definitely like we're gonna i have an example later on where we have",
    "start": "941199",
    "end": "946560"
  },
  {
    "text": "like a file upload sequence and it does some work with like text track another like",
    "start": "946560",
    "end": "951920"
  },
  {
    "text": "managed sas product and like actually having a lambda function to rename these these files for you um or maybe",
    "start": "951920",
    "end": "959199"
  },
  {
    "text": "kick off like you know another trigger for you but that's a great use case for like let's call it like data processing so",
    "start": "959199",
    "end": "966800"
  },
  {
    "text": "i'm going to say strong yes as an answer great thanks aiden",
    "start": "966800",
    "end": "971839"
  },
  {
    "text": "sure so emma's amazon provides uh",
    "start": "971839",
    "end": "978079"
  },
  {
    "text": "amazon provides a great way to be able to handle these work through flows through aws step functions and aws",
    "start": "978079",
    "end": "985440"
  },
  {
    "text": "step functions is a serverless function orchestrator that makes it easy to sequence aws lambda functions and",
    "start": "985440",
    "end": "991120"
  },
  {
    "text": "multiple aws services into business critical applications through its visual interface you can",
    "start": "991120",
    "end": "996560"
  },
  {
    "text": "create and run a series of checkpointed and event driven workflows that maintain application state the",
    "start": "996560",
    "end": "1002639"
  },
  {
    "text": "output of one step acts as the input of the next and each step of your application",
    "start": "1002639",
    "end": "1008160"
  },
  {
    "text": "executes an order defined by your business logic so you can actually run these and actually see the process",
    "start": "1008160",
    "end": "1014639"
  },
  {
    "text": "moving through each one of the different states as it moves through each different decision point or mo and you can all identify work through",
    "start": "1014639",
    "end": "1022560"
  },
  {
    "text": "our example and we saw different failures as we were going along through and it made collaboration so much easier because we could both",
    "start": "1022560",
    "end": "1028640"
  },
  {
    "text": "look at the same screen and see exactly where in the process each one of these different each one of these different",
    "start": "1028640",
    "end": "1034079"
  },
  {
    "text": "states failed um orchestrating a series of individual service serverless applications and managing",
    "start": "1034079",
    "end": "1040558"
  },
  {
    "text": "retries and debugging failures can be challenging as as your distributed applications",
    "start": "1040559",
    "end": "1046160"
  },
  {
    "text": "become more complex the complexity of managing them also grows with built-in operational controls step",
    "start": "1046160",
    "end": "1052559"
  },
  {
    "text": "functions manages sequencing error handling retrial logic state and removes significant",
    "start": "1052559",
    "end": "1059039"
  },
  {
    "text": "operational burden from your team i i know that we also",
    "start": "1059039",
    "end": "1065760"
  },
  {
    "text": "integrate with so many other things can you um can you tell us about how how all this",
    "start": "1065760",
    "end": "1071039"
  },
  {
    "text": "stuff works like how go in a little more detail about the step functions totally so you know um",
    "start": "1071039",
    "end": "1078960"
  },
  {
    "start": "1075000",
    "end": "1268000"
  },
  {
    "text": "basically like a workflow can be as simple um you know a simple sequence of steps",
    "start": "1078960",
    "end": "1085039"
  },
  {
    "text": "like we're seeing on the left the left here like we're just doing a very basic you know upload of a raw file",
    "start": "1085039",
    "end": "1091440"
  },
  {
    "text": "to s3 for example like a customer receipt in this case right and um that's just a simple task",
    "start": "1091440",
    "end": "1099039"
  },
  {
    "text": "that is that's the state that's going on here um very basic and then immediately delete it like we just want to make sure",
    "start": "1099039",
    "end": "1104960"
  },
  {
    "text": "that we're just testing the the plumbing here right um that's that's the simplest example just",
    "start": "1104960",
    "end": "1110960"
  },
  {
    "text": "a very linear set of steps here um you know you can you can also",
    "start": "1110960",
    "end": "1116960"
  },
  {
    "text": "involve like branching logic right depending upon you know what happens",
    "start": "1116960",
    "end": "1122000"
  },
  {
    "text": "earlier in the workflow um you know or in the very very right in the right-hand side here like you can",
    "start": "1122000",
    "end": "1128480"
  },
  {
    "text": "have parallel workflows um where you're doing a number of different steps at the exact same time um the results are independents like",
    "start": "1128480",
    "end": "1135200"
  },
  {
    "text": "they're they're not related to each other um and that's you know you can take this",
    "start": "1135200",
    "end": "1140640"
  },
  {
    "text": "even further like these are all this is this example here if i walk us through it you know um we basically you know",
    "start": "1140640",
    "end": "1148799"
  },
  {
    "text": "invoices are scanned right loaded into an s3 bucket you know upon loading like lambda",
    "start": "1148799",
    "end": "1154400"
  },
  {
    "text": "triggers amazon tech extract and that's that's our a fully managed machine learning service to automatically extract the",
    "start": "1154400",
    "end": "1160960"
  },
  {
    "text": "text um and data from the scanned invoice right and um you know then step functions is",
    "start": "1160960",
    "end": "1168160"
  },
  {
    "text": "used to process the results of that text text track job right and this extracted text",
    "start": "1168160",
    "end": "1176000"
  },
  {
    "text": "can can be like you know the combining of the services can can give us our automated you know",
    "start": "1176000",
    "end": "1181120"
  },
  {
    "text": "loading into into the database and um you know quite simply i just want to explain like",
    "start": "1181120",
    "end": "1187520"
  },
  {
    "text": "you know we have a choice state in the very middle like select image converter like do we want to convert to like jpeg",
    "start": "1187520",
    "end": "1194480"
  },
  {
    "text": "or raw um right for example we may stop an execution",
    "start": "1194480",
    "end": "1199520"
  },
  {
    "text": "if there's a failure or a success um that could be like a fail or success state all of these",
    "start": "1199520",
    "end": "1204880"
  },
  {
    "text": "end in in uh success um and you know or we simply want to pass the",
    "start": "1204880",
    "end": "1210320"
  },
  {
    "text": "output there's like a pass state um there can be a wait state say i need to wait for text track like 15 seconds",
    "start": "1210320",
    "end": "1217039"
  },
  {
    "text": "i don't know you know or five seconds like something like that um you know the or the parallel",
    "start": "1217039",
    "end": "1222960"
  },
  {
    "text": "processing on the right side so there's a number of different states that we can choose from and",
    "start": "1222960",
    "end": "1228400"
  },
  {
    "text": "you as i really like how you mentioned like let's pretend i'm totally non-technical and but i'm a business expert um",
    "start": "1228400",
    "end": "1236159"
  },
  {
    "text": "working side by side with with non-technical like um stakeholders this is a great",
    "start": "1236159",
    "end": "1242159"
  },
  {
    "text": "tool because it lets you agree on on what's the next step going to be how do we get to the bottom of this and",
    "start": "1242159",
    "end": "1248080"
  },
  {
    "text": "you know and and it allows and allows that collaboration so um",
    "start": "1248080",
    "end": "1253360"
  },
  {
    "text": "yeah that's that's the step forward and that's the workflow in a gist and in our demo we'll",
    "start": "1253360",
    "end": "1258799"
  },
  {
    "text": "show you a few different more options we have with the types of states the um",
    "start": "1258799",
    "end": "1264480"
  },
  {
    "text": "next slide you know i just really want to call out that another major perk of step functions is",
    "start": "1264480",
    "end": "1270960"
  },
  {
    "start": "1268000",
    "end": "1397000"
  },
  {
    "text": "the existing integrations to like 15 or 16 different over 15 aws services and growing",
    "start": "1270960",
    "end": "1278320"
  },
  {
    "text": "um and you know that that is great that means you don't have to worry about like the sdk and the plumbing and",
    "start": "1278320",
    "end": "1284880"
  },
  {
    "text": "and getting the separate um services you know working perfectly it's a lot of important services are",
    "start": "1284880",
    "end": "1290720"
  },
  {
    "text": "already integrated and that saves a lot of time um and efforts so um yeah",
    "start": "1290720",
    "end": "1296960"
  },
  {
    "text": "i won't go through them all but but uh there's there's there's 15 plus here um yeah over to you mike",
    "start": "1296960",
    "end": "1304880"
  },
  {
    "text": "yeah the the great thing to remember about this is each one of the state's input is this",
    "start": "1304880",
    "end": "1310000"
  },
  {
    "text": "is the output of the previous state so sns output whenever you call s and s is",
    "start": "1310000",
    "end": "1316480"
  },
  {
    "text": "input to the next state so whenever you start building applications um serverless applications",
    "start": "1316480",
    "end": "1322080"
  },
  {
    "text": "they can start to get complex really quickly um serverless is rarely like just a sequential step of events",
    "start": "1322080",
    "end": "1328400"
  },
  {
    "text": "there are multiple decision paths you have to respond to failure there can be downstream issues like",
    "start": "1328400",
    "end": "1333919"
  },
  {
    "text": "timeouts and you could build all this into your workflow as we did on the left here and manage your state with something",
    "start": "1333919",
    "end": "1340159"
  },
  {
    "text": "like sqs but step functions allow you to extract this logic to a higher level",
    "start": "1340159",
    "end": "1345679"
  },
  {
    "text": "and it also gives you gives you a visual representation of moving through the state so in the example that iden gave just a",
    "start": "1345679",
    "end": "1352640"
  },
  {
    "text": "moment ago whenever the product manager is like helping develop this project and he's like i don't know something's",
    "start": "1352640",
    "end": "1358640"
  },
  {
    "text": "failing somewhere you can he can pull up the console himself and look at this diagram and see exactly where the",
    "start": "1358640",
    "end": "1365600"
  },
  {
    "text": "process is falling down this side on the this slide sort of shows how you can reduce",
    "start": "1365600",
    "end": "1372320"
  },
  {
    "text": "some of this operational complexity by you letting step functions handle this decision tree and when",
    "start": "1372320",
    "end": "1379520"
  },
  {
    "text": "you're gonna wait for how long it can also handle exponential back offs as well um so it's",
    "start": "1379520",
    "end": "1384720"
  },
  {
    "text": "a great great tool to um to simplify things aws step functions is serverless and",
    "start": "1384720",
    "end": "1390880"
  },
  {
    "text": "works really well with other services like aws uh sns sqs and more but what's really",
    "start": "1390880",
    "end": "1397120"
  },
  {
    "start": "1397000",
    "end": "1894000"
  },
  {
    "text": "neat about step functions that it also enables you to interact with services beyond serverless like an on-premise container activities",
    "start": "1397120",
    "end": "1405679"
  },
  {
    "text": "enable you to orchestrate a task ring in a different machine called a worker and this worker could be anything that",
    "start": "1405679",
    "end": "1412880"
  },
  {
    "text": "has a http interface the worker can be hosted in amazon elastic cloud compute ecs mobile",
    "start": "1412880",
    "end": "1420880"
  },
  {
    "text": "devices basically any application that can make an http connection hosted anywhere",
    "start": "1420880",
    "end": "1426559"
  },
  {
    "text": "when a when a step function reaches an activity task the workflow waits for the activity to pull the step function",
    "start": "1426559",
    "end": "1433120"
  },
  {
    "text": "for a task and then once the task is available the activity receives a response from the workflow input along",
    "start": "1433120",
    "end": "1440720"
  },
  {
    "text": "with a task token which the activity will then use to complete its work and then when the activity completes its",
    "start": "1440720",
    "end": "1446159"
  },
  {
    "text": "work it can provide a report of success or failure back to and the associated token back to",
    "start": "1446159",
    "end": "1452559"
  },
  {
    "text": "the back to the service so um next we're going to jump into a demo uh",
    "start": "1452559",
    "end": "1458960"
  },
  {
    "text": "before we do that uh rob any any questions from the audience or any anything on your mind uh so yeah",
    "start": "1458960",
    "end": "1466080"
  },
  {
    "text": "just on my mind don't have any questions in the audience so remind the audience again please feel free to post your questions",
    "start": "1466080",
    "end": "1471360"
  },
  {
    "text": "there in the chat and i'll pass them on here to mike and ivan uh but just in general mike can you tell me or i'm",
    "start": "1471360",
    "end": "1477840"
  },
  {
    "text": "concerned about are curious about hipaa compliance and i'm just kind of wondering if step functions is hipaa compliant",
    "start": "1477840",
    "end": "1483919"
  },
  {
    "text": "so yes it is hipaa compliant and there are a number of other compliances",
    "start": "1483919",
    "end": "1490400"
  },
  {
    "text": "um you know constantly growing and um the the landing page faqs i think",
    "start": "1490400",
    "end": "1496400"
  },
  {
    "text": "last place i saw the hipaa compliance are the the compliance is supported but um yes that's a definitely yes great",
    "start": "1496400",
    "end": "1503120"
  },
  {
    "text": "thanks adam i'd love to ask that appreciate it back over to y'all all right let's jump into a demo",
    "start": "1503120",
    "end": "1511360"
  },
  {
    "text": "all right so we'll go and grab the step functions uh step functions service here",
    "start": "1512080",
    "end": "1520720"
  },
  {
    "text": "and you can see a list as a i'm sure you're used to with amazon services see a list of the states",
    "start": "1521279",
    "end": "1527279"
  },
  {
    "text": "i currently have and create a new state machine this is kind of what one looks like here",
    "start": "1527279",
    "end": "1533440"
  },
  {
    "text": "but we're going to run a sample project we have i don't know i didn't 25 26",
    "start": "1533440",
    "end": "1539200"
  },
  {
    "text": "sample projects that can grow you can get yeah yep so we use this one that helps us",
    "start": "1539200",
    "end": "1545760"
  },
  {
    "text": "choose whether we need to buy a stock or not so uh we're gonna this thing over on the left",
    "start": "1545760",
    "end": "1553360"
  },
  {
    "text": "here is the amazon state language which is a json state language that can that defines all",
    "start": "1553360",
    "end": "1559360"
  },
  {
    "text": "our states and this is a cloud formation template that's going to build an sns topic",
    "start": "1559360",
    "end": "1564640"
  },
  {
    "text": "lamp few lambda functions state machine sqs query so we've started the stack um and it's",
    "start": "1564640",
    "end": "1572159"
  },
  {
    "text": "going to take about 10 minutes through the uh magic of demos we're going to",
    "start": "1572159",
    "end": "1577440"
  },
  {
    "text": "uh reduce this 10 minutes here we go all right oh wow that sped through all",
    "start": "1577440",
    "end": "1583679"
  },
  {
    "text": "right starting execution so we can actually watch the execution of this flow through right now it's",
    "start": "1583679",
    "end": "1589440"
  },
  {
    "text": "asking about uh human approval for the um for the stock um and if",
    "start": "1589440",
    "end": "1597039"
  },
  {
    "text": "you can kind of see it as it's moved through these different states um here we can see steps of the actual",
    "start": "1597039",
    "end": "1604640"
  },
  {
    "text": "state this is what this state and step input was and this was the starting state so this is what i took to begin with and it",
    "start": "1604640",
    "end": "1610400"
  },
  {
    "text": "went got the price um and then that input was or that output was the input to the next step",
    "start": "1610400",
    "end": "1616559"
  },
  {
    "text": "um and then to the next step we'll jump into this human intervention thing [Music]",
    "start": "1616559",
    "end": "1621919"
  },
  {
    "text": "and then we make a decision whether we want to buy or sell and again just each input is the",
    "start": "1621919",
    "end": "1627200"
  },
  {
    "text": "previous one's output and then we get a result from the uh",
    "start": "1627200",
    "end": "1632240"
  },
  {
    "text": "from the whole execution and that gets sent back to the call-in function",
    "start": "1632240",
    "end": "1637520"
  },
  {
    "text": "um you can see all the logs in cloudwatch logs uh you can also have you have access to",
    "start": "1637520",
    "end": "1643840"
  },
  {
    "text": "what where lambda actually spit out the um spit out the results from each one of these different",
    "start": "1643840",
    "end": "1649039"
  },
  {
    "text": "things um so let's see",
    "start": "1649039",
    "end": "1654240"
  },
  {
    "text": "we could hit the edit state machine and this allows you to edit the um",
    "start": "1654240",
    "end": "1661279"
  },
  {
    "text": "edit the amazon state language so as you can see i'm just calling an arn in here um to for which service",
    "start": "1661279",
    "end": "1669200"
  },
  {
    "text": "i'm going to be calling and what the input is like and what the output's like from",
    "start": "1669200",
    "end": "1674240"
  },
  {
    "text": "this particular thing let's go take a look at one of these lambda functions just to see",
    "start": "1674240",
    "end": "1680240"
  },
  {
    "text": "how an integrated lambda function looks and grab the human approval",
    "start": "1680240",
    "end": "1689278"
  },
  {
    "text": "so pretty general you know this particular thing doesn't actually do human approval it just sends back",
    "start": "1693039",
    "end": "1699520"
  },
  {
    "text": "passes the task token and um sends back approved every time here so um",
    "start": "1699520",
    "end": "1706480"
  },
  {
    "text": "not a super complex lambda function but just a lambda lambda function just the",
    "start": "1706480",
    "end": "1711520"
  },
  {
    "text": "same as as you've seen with lambda functions before",
    "start": "1711520",
    "end": "1717039"
  },
  {
    "text": "and let's jump back into the step functions here",
    "start": "1717039",
    "end": "1725840"
  },
  {
    "text": "and this uh you can change what you how exactly you are what what you",
    "start": "1730480",
    "end": "1736799"
  },
  {
    "text": "send in to the state function here i'm going to choose game stock",
    "start": "1736799",
    "end": "1742960"
  },
  {
    "text": "gamestop and see how we go here and should we buy or sell gamestop",
    "start": "1742960",
    "end": "1750640"
  },
  {
    "text": "uh oh looks like it's a ba situation here um no forward-looking statements here",
    "start": "1750640",
    "end": "1756799"
  },
  {
    "text": "there's also this new data flow simulator that um that can orchestrate",
    "start": "1756799",
    "end": "1762640"
  },
  {
    "text": "how you send the data through the through the system this is a new new feature and it allows",
    "start": "1762640",
    "end": "1769840"
  },
  {
    "text": "you to simulate different inputs and outputs [Music] really excited about this new feature",
    "start": "1769840",
    "end": "1781840"
  },
  {
    "text": "and that's it um so i didn't know rob if you guys wanna",
    "start": "1782159",
    "end": "1788880"
  },
  {
    "text": "if there's any questions or anything going on now yeah so just one quick question",
    "start": "1788880",
    "end": "1794000"
  },
  {
    "text": "from the audience just wanted to know about uh difference between lambda functions and step functions just asking",
    "start": "1794000",
    "end": "1799600"
  },
  {
    "text": "if they're two separate things or you know you give a little bit more information about those",
    "start": "1799600",
    "end": "1805039"
  },
  {
    "text": "sure um lambda functions versus step functions so um lambda functions is where you run",
    "start": "1805760",
    "end": "1812799"
  },
  {
    "text": "your compute your actual code of your your application code you know in in python or",
    "start": "1812799",
    "end": "1818399"
  },
  {
    "text": "or c sharp or um you know the actual software that you're looking to run the the logic of um",
    "start": "1818399",
    "end": "1825039"
  },
  {
    "text": "your service logic and step functions is like the glue between lambda functions and it allows",
    "start": "1825039",
    "end": "1832159"
  },
  {
    "text": "you to pass the input and output states uh it allows you to make sure that you had a successful execution and",
    "start": "1832159",
    "end": "1838720"
  },
  {
    "text": "you met and you met what you were looking for before it talks to the next lambda function and it helps you tie in you know 15 plus",
    "start": "1838720",
    "end": "1847200"
  },
  {
    "text": "other aws services like if you wanted to have an api gateway you know to have",
    "start": "1847200",
    "end": "1852880"
  },
  {
    "text": "external um you know external http https calls for example",
    "start": "1852880",
    "end": "1858880"
  },
  {
    "text": "um or you know an sns topic to alert you know to like an sms like a phone",
    "start": "1858880",
    "end": "1864080"
  },
  {
    "text": "number right um so that's that's what step functions is doing it's it is um lambda functions are",
    "start": "1864080",
    "end": "1871840"
  },
  {
    "text": "probably the most one of the most common um services you'll integrate with step functions but they're",
    "start": "1871840",
    "end": "1877519"
  },
  {
    "text": "definitely distinct distinct functions um you can make use of",
    "start": "1877519",
    "end": "1883600"
  },
  {
    "text": "thanks adam appreciate that back already so really quick on on this topic uh",
    "start": "1883600",
    "end": "1892320"
  },
  {
    "text": "you know resiliency right step functions really helps with resiliency because it",
    "start": "1892320",
    "end": "1897919"
  },
  {
    "start": "1894000",
    "end": "1983000"
  },
  {
    "text": "has the uh built the native capability um defined in your",
    "start": "1897919",
    "end": "1902960"
  },
  {
    "text": "amazon state language that that json file um mike was showing there to actually specify like the retry",
    "start": "1902960",
    "end": "1909840"
  },
  {
    "text": "number of retries um and exponential back off built in that's an algorithm that says you'll",
    "start": "1909840",
    "end": "1915360"
  },
  {
    "text": "it'll wait a little bit longer if you get like a 5x like a error somewhere in the pipeline and you know",
    "start": "1915360",
    "end": "1922880"
  },
  {
    "text": "this it retries and back offs are usually code",
    "start": "1922880",
    "end": "1928880"
  },
  {
    "text": "you'd have to build yourself or make it take advantage of from like our sdks but having this",
    "start": "1928880",
    "end": "1935039"
  },
  {
    "text": "built in automatically through step functions helps with this with that resiliency that you're looking",
    "start": "1935039",
    "end": "1940320"
  },
  {
    "text": "for and gives you a more reliable application so",
    "start": "1940320",
    "end": "1945519"
  },
  {
    "text": "yeah in this case you know um if the if the the billing the customer failed um it",
    "start": "1945519",
    "end": "1951679"
  },
  {
    "text": "can retry automatically shortly without them knowing in the background um they don't have to care that there",
    "start": "1951679",
    "end": "1957519"
  },
  {
    "text": "was an error um they'll get the the you know the end result that they're looking for um",
    "start": "1957519",
    "end": "1963679"
  },
  {
    "text": "so yeah that's that's that's that in a nutshell um now i i wanted to",
    "start": "1963679",
    "end": "1970559"
  },
  {
    "text": "um rob you you'd asked a question earlier about like kind of mixing and matching workflows and i think this slide and the next",
    "start": "1970559",
    "end": "1977919"
  },
  {
    "text": "slide will answer that that viewers questions and you know really there's two",
    "start": "1977919",
    "end": "1983679"
  },
  {
    "start": "1983000",
    "end": "2269000"
  },
  {
    "text": "major types of workflows there's the standard workflows which is ideal for you know really long",
    "start": "1983679",
    "end": "1989600"
  },
  {
    "text": "running you know durable auditable workflows like we're talking up to uh",
    "start": "1989600",
    "end": "1997279"
  },
  {
    "text": "up to one year this workflow can can run here and um you know whereas express can",
    "start": "1997279",
    "end": "2004159"
  },
  {
    "text": "can run up to five minutes right so totally different uh immediately off the bat different use",
    "start": "2004159",
    "end": "2009600"
  },
  {
    "text": "cases there um you know standard workflows are suited to handle non-item potent",
    "start": "2009600",
    "end": "2015679"
  },
  {
    "text": "actions um like processing payments or or starting up an amazon emr cluster like you know i",
    "start": "2015679",
    "end": "2022720"
  },
  {
    "text": "by just to explain that like um non-item potent i mean like you know making multiple identical requests does not",
    "start": "2022720",
    "end": "2030320"
  },
  {
    "text": "have the same effect as making a single request like you know payment processing um",
    "start": "2030320",
    "end": "2036240"
  },
  {
    "text": "you you could you don't want to end up charging the customer you know more than once for a purchase uh they they would not be happy um",
    "start": "2036240",
    "end": "2043919"
  },
  {
    "text": "so um if you need that extra durable safety um stick to the standard workflows for",
    "start": "2043919",
    "end": "2049839"
  },
  {
    "text": "those like um if your code is not um if you if item potency isn't factored",
    "start": "2049839",
    "end": "2055520"
  },
  {
    "text": "um but for express workflows this this is a newer addition to the the type of workflows um ideal for super",
    "start": "2055520",
    "end": "2062638"
  },
  {
    "text": "high volume event processing and that that less than five minute life span there and from last reinvent uh we announced",
    "start": "2062639",
    "end": "2069919"
  },
  {
    "text": "or we released um synchronous express workflows as well so this is an extra layer of",
    "start": "2069919",
    "end": "2075358"
  },
  {
    "text": "the previously it was asynchronous for us so we um you know basically chaining and",
    "start": "2075359",
    "end": "2080560"
  },
  {
    "text": "waiting for the the results um like in a shopping cart experience you may want to wait for",
    "start": "2080560",
    "end": "2086158"
  },
  {
    "text": "uh you know the the the previous result like confirm inventory before moving on to the next steps and the",
    "start": "2086159",
    "end": "2094158"
  },
  {
    "text": "e we'll explain it in the next chart here but uh if if your workflows are suited for express",
    "start": "2094159",
    "end": "2099520"
  },
  {
    "text": "workflow um the pricing is is a little lower for express workflows and it's also built",
    "start": "2099520",
    "end": "2104960"
  },
  {
    "text": "per um the duration so if they're tiny like microseconds or whatnot",
    "start": "2104960",
    "end": "2110000"
  },
  {
    "text": "um you there you'll get some pricing benefits from the newer the express workflows um but if not",
    "start": "2110000",
    "end": "2116240"
  },
  {
    "text": "the standard workflows are a great option um yeah great hey before we move forward real",
    "start": "2116240",
    "end": "2121760"
  },
  {
    "text": "quickly i got a question from the audience here from bravery 65 about those workflows um is the code for workflows generally",
    "start": "2121760",
    "end": "2128800"
  },
  {
    "text": "generally generated via like a template of some kind or how do those get created the that's my advice is to start with",
    "start": "2128800",
    "end": "2135599"
  },
  {
    "text": "the templates there's in in the demo you saw like 20-ish different sample",
    "start": "2135599",
    "end": "2141680"
  },
  {
    "text": "sample templates there and i say don't reinvent the wheel have a look for",
    "start": "2141680",
    "end": "2146720"
  },
  {
    "text": "inspiration see what is you know in these in these templates there's really clever ways that um you",
    "start": "2146720",
    "end": "2153359"
  },
  {
    "text": "know that a lot of things have been solved before like the launching the emr cluster is doing some of that that extra work um so check the",
    "start": "2153359",
    "end": "2160400"
  },
  {
    "text": "templates check the templates out but of course totally free feel free to edit them and um you can you can launch",
    "start": "2160400",
    "end": "2166800"
  },
  {
    "text": "as well via cloudformation templates um you know via sdks or cdk and",
    "start": "2166800",
    "end": "2173520"
  },
  {
    "text": "but yeah start with the templates and then make it work for your workflows is my advice",
    "start": "2173520",
    "end": "2179839"
  },
  {
    "text": "great thanks for sure yeah and just to go a little bit deeper here standard and express workflows are",
    "start": "2179839",
    "end": "2187040"
  },
  {
    "text": "built for two different types of workloads you should use express workflows for workloads with high event rates and",
    "start": "2187040",
    "end": "2193200"
  },
  {
    "text": "short durations express workflows support event rates of more than 100 000 per second express workflows",
    "start": "2193200",
    "end": "2200720"
  },
  {
    "text": "have a maximum duration of five minutes um they guarantee at least one such execution",
    "start": "2200720",
    "end": "2206640"
  },
  {
    "text": "uh failed workflows must be rerun from the beginning express workflows support all service",
    "start": "2206640",
    "end": "2212400"
  },
  {
    "text": "integrations and ex but express workflows do not support activities uh job run sync",
    "start": "2212400",
    "end": "2219920"
  },
  {
    "text": "callback patterns uh job run sync callback patterns for for our um for integrated services",
    "start": "2219920",
    "end": "2226960"
  },
  {
    "text": "like aws batch amazon ecs step functions can wait for a request to complete before processing",
    "start": "2226960",
    "end": "2233920"
  },
  {
    "text": "the next state and to have step functions wait specifically the resource field and your task state definition",
    "start": "2233920",
    "end": "2241119"
  },
  {
    "text": "with the sync sub suffix appended after the end of the resource uh ur uri standard workflows on aws",
    "start": "2241119",
    "end": "2249680"
  },
  {
    "text": "uh step functions are more suitable for long running durable and auditable workflows",
    "start": "2249680",
    "end": "2255200"
  },
  {
    "text": "where repeating workflow steps is expensive like restarting a media transcode for instance",
    "start": "2255200",
    "end": "2260880"
  },
  {
    "text": "or or harmful like charging a credit card twice as uh as i didn't mentioned um so",
    "start": "2260880",
    "end": "2268000"
  },
  {
    "text": "i'm going to jump into one more case study um coinbase is a uh is a managed wallet and",
    "start": "2268000",
    "end": "2274240"
  },
  {
    "start": "2269000",
    "end": "2706000"
  },
  {
    "text": "exchange platform for cryptocurrencies um the coinbase team identified an opportunity to",
    "start": "2274240",
    "end": "2280480"
  },
  {
    "text": "improve their automated deployment pipeline to increase increased deployment speed using aws",
    "start": "2280480",
    "end": "2286480"
  },
  {
    "text": "step functions and lambda um in doing so there the team simplified their architecture",
    "start": "2286480",
    "end": "2292160"
  },
  {
    "text": "improved visibility for their engineers and simplified auditability they reduced the",
    "start": "2292160",
    "end": "2298560"
  },
  {
    "text": "time needed to add new aws accounts from days to seconds and also they used a single step",
    "start": "2298560",
    "end": "2305839"
  },
  {
    "text": "function to enable multi-accounts providing them with a single audit trail for all deployments",
    "start": "2305839",
    "end": "2312800"
  },
  {
    "text": "they can now enable new accounts with high security without needing to re-implement",
    "start": "2312800",
    "end": "2318640"
  },
  {
    "text": "an audit trail and they also notice a significant reduction in trouble tickets about",
    "start": "2318640",
    "end": "2324160"
  },
  {
    "text": "failed deployments because the engineers can actually see where the deployments failed in the in the actual state um there's a",
    "start": "2324160",
    "end": "2332480"
  },
  {
    "text": "case study reference uh i have a link to that i think i sent that over to you rob if you could post that into the chat would be",
    "start": "2332480",
    "end": "2339040"
  },
  {
    "text": "good um and i yeah thanks mike",
    "start": "2339040",
    "end": "2346240"
  },
  {
    "text": "so you know just circling back here i want to get to like bottom line",
    "start": "2346240",
    "end": "2351440"
  },
  {
    "text": "statements here um you know step functions if you're if you're working with a distributed",
    "start": "2351440",
    "end": "2358160"
  },
  {
    "text": "apps or or microservices like modern applications um this",
    "start": "2358160",
    "end": "2363280"
  },
  {
    "text": "is an awesome awesome service to to help with all of your like your data processing",
    "start": "2363280",
    "end": "2368320"
  },
  {
    "text": "workflows your machine learning workflows um orchestrating your apps and even like your your security and it",
    "start": "2368320",
    "end": "2375599"
  },
  {
    "text": "automation steps and um we went over all these details but i really wanted to drive home",
    "start": "2375599",
    "end": "2381760"
  },
  {
    "text": "you know there's a ton of use cases for this thing for for step functions to you know really improve your workflows",
    "start": "2381760",
    "end": "2388079"
  },
  {
    "text": "and and help orchestrate and give you auditable easy to view um",
    "start": "2388079",
    "end": "2393119"
  },
  {
    "text": "processes in the end result so um you know let's let's help you get",
    "start": "2393119",
    "end": "2399040"
  },
  {
    "text": "started um today and you know this this first link will give you all of your",
    "start": "2399040",
    "end": "2404240"
  },
  {
    "text": "you know your use cases and pricing and your details there um serverless land is awesome for training",
    "start": "2404240",
    "end": "2409920"
  },
  {
    "text": "and for actually like applying a lot of the different the features there's a lot of features",
    "start": "2409920",
    "end": "2415520"
  },
  {
    "text": "and step functions we haven't covered but did all the different use cases and templates um i think",
    "start": "2415520",
    "end": "2421480"
  },
  {
    "text": "ravery65 that that's a great place to check out see the blogs there and lastly there's a",
    "start": "2421480",
    "end": "2427680"
  },
  {
    "text": "lot of different workshops like this this little unicorn serverless land um you know workshops to help you",
    "start": "2427680",
    "end": "2434560"
  },
  {
    "text": "help you apply um and and and get going with the with step functions um so perfect yeah",
    "start": "2434560",
    "end": "2443040"
  },
  {
    "text": "um over to you rob great thank you um spend a little bit of",
    "start": "2443040",
    "end": "2449760"
  },
  {
    "text": "time is there anything else that you'd like to share just uh you know about step functions they kind of went into some information there just to kind of highlight some of",
    "start": "2449760",
    "end": "2456319"
  },
  {
    "text": "the ways to get started uh and working through that anything else you just kind of want to add in general",
    "start": "2456319",
    "end": "2462319"
  },
  {
    "text": "for micro i would say i would say generally just um the it's hard to say how much better",
    "start": "2462319",
    "end": "2470000"
  },
  {
    "text": "this is than sort of spaghetti code that calls one thing and then something else calls something else and then",
    "start": "2470000",
    "end": "2475280"
  },
  {
    "text": "everything's calling things all over the place to be able to see this workflow in just one visual place is just amazing",
    "start": "2475280",
    "end": "2482400"
  },
  {
    "text": "it's awesome to be able to you know debug i i think",
    "start": "2482400",
    "end": "2487920"
  },
  {
    "text": "several times whenever aidan and i were going through some of the projects we were just delighted and it was just uh fun to be able to um",
    "start": "2487920",
    "end": "2495200"
  },
  {
    "text": "to debug things in this way um also uh something that is a pretty",
    "start": "2495200",
    "end": "2501119"
  },
  {
    "text": "cool way to get started with step functions um there's a a uh trusted advisor",
    "start": "2501119",
    "end": "2508560"
  },
  {
    "text": "way to be able to integrate trusted advisor in with step functions um and it's a super cool way to be able",
    "start": "2508560",
    "end": "2514640"
  },
  {
    "text": "to get started and something that can immediately add value to your team and and be able to see things work",
    "start": "2514640",
    "end": "2520880"
  },
  {
    "text": "together if you search that up rob i don't think i gave you the link to that but um but i can uh i can post that up in some in",
    "start": "2520880",
    "end": "2529119"
  },
  {
    "text": "some a little bit later but you just search up trusted advisor step functions it's a",
    "start": "2529119",
    "end": "2534319"
  },
  {
    "text": "it's a reference we have out there yeah i pasted that into you here it's um trusted advisor explorer",
    "start": "2534319",
    "end": "2541520"
  },
  {
    "text": "um right which is which is awesome i mean it it takes like 30 different steps and",
    "start": "2541520",
    "end": "2547040"
  },
  {
    "text": "it's uh it's a template so you don't have to build it yourself but it really makes it i'd say much more",
    "start": "2547040",
    "end": "2553520"
  },
  {
    "text": "useful than you know just just using it directly and it adds an extra extra value for you",
    "start": "2553520",
    "end": "2560000"
  },
  {
    "text": "with trusted advisor um i i guess maybe i have one to add as",
    "start": "2560000",
    "end": "2565760"
  },
  {
    "text": "well like the i i would say before step functions",
    "start": "2565760",
    "end": "2570800"
  },
  {
    "text": "like there's i think some of us might remember like uml modeling like that unified modeling language and",
    "start": "2570800",
    "end": "2578000"
  },
  {
    "text": "um again like being able to have everybody look at this the the whole workflow diagram and and",
    "start": "2578000",
    "end": "2584800"
  },
  {
    "text": "visually see if there's any failures like even non-technical people can can make sense that we're having",
    "start": "2584800",
    "end": "2590720"
  },
  {
    "text": "failures and a lot of retries at this step is a huge benefit i'd say is one of the",
    "start": "2590720",
    "end": "2596160"
  },
  {
    "text": "the best features of step functions um and and mike if you go a couple slides",
    "start": "2596160",
    "end": "2601599"
  },
  {
    "text": "extra um into the appendix i i wanted to call out that you know",
    "start": "2601599",
    "end": "2608240"
  },
  {
    "text": "like there's there's immediate um there's very friendly ways to develop uh you know with with step functions",
    "start": "2608240",
    "end": "2615520"
  },
  {
    "text": "like the serverless application model sam if if you want to work in you know yamo or json declarative you know",
    "start": "2615520",
    "end": "2622640"
  },
  {
    "text": "templates there there's there's the cdk if you want to if you're you know very code centric and and all",
    "start": "2622640",
    "end": "2629680"
  },
  {
    "text": "of our sdks like are supported here so even our data science sdks",
    "start": "2629680",
    "end": "2635440"
  },
  {
    "text": "um and the next slide i mean just like building locally i i um",
    "start": "2635440",
    "end": "2642000"
  },
  {
    "text": "the console's console is great but you know a lot of people's ids you know they want to work in their id",
    "start": "2642000",
    "end": "2648319"
  },
  {
    "text": "um directly and having like direct plug-ins to like visual studio code you can actually",
    "start": "2648319",
    "end": "2653760"
  },
  {
    "text": "display the the same diagrams there so if you don't want to work in the console right all the time",
    "start": "2653760",
    "end": "2661200"
  },
  {
    "text": "you have the options for local development as well um so just a few more callbacks there to um",
    "start": "2661200",
    "end": "2666480"
  },
  {
    "text": "to help you get started great thanks i appreciate that thanks mike for the information um so everyone",
    "start": "2666480",
    "end": "2673040"
  },
  {
    "text": "today we looked at aws step functions and how they can streamline and simplify some of your workflows",
    "start": "2673040",
    "end": "2678160"
  },
  {
    "text": "uh you know and really help you automate and kind of you know orchestrate your serverless environments uh if there are questions that were not",
    "start": "2678160",
    "end": "2684079"
  },
  {
    "text": "answered today you can post their questions on forums.aws.amazon.com",
    "start": "2684079",
    "end": "2689440"
  },
  {
    "text": "and you can email us your feedback at aws supports you at amazon.com we want to hear from you",
    "start": "2689440",
    "end": "2695520"
  },
  {
    "text": "tell us what else you would like to see on this show and thanks for joining us again today at aws supports you",
    "start": "2695520",
    "end": "2701119"
  },
  {
    "text": "hope you have happy cloud computing thank you all thank you",
    "start": "2701119",
    "end": "2707040"
  }
]