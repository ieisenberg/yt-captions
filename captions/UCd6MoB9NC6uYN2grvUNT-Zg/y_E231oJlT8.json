[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "hello and welcome my name is Lee Atkinson welcome to the taking DevOps to the AWS edge so just a brief what to",
    "start": "0",
    "end": "8519"
  },
  {
    "text": "expect from this session so we're going to talk about how to integrate Amazon CloudFront another AWS edge services",
    "start": "8519",
    "end": "15179"
  },
  {
    "text": "into your agile development process so part of your application rather than seeing it's something that's added on to",
    "start": "15179",
    "end": "21840"
  },
  {
    "text": "your application possibly before you do a launch as you think of the edge services as part of your application to",
    "start": "21840",
    "end": "28130"
  },
  {
    "text": "follow best practices around security performance and trying to reduce costs to automate the deployment of your",
    "start": "28130",
    "end": "36360"
  },
  {
    "text": "configuration to the edge services and to do testing and to also to monitor and analyze the performance and the usage of",
    "start": "36360",
    "end": "43649"
  },
  {
    "text": "your edge services so got quite a short agenda so the first we're going to talk",
    "start": "43649",
    "end": "50129"
  },
  {
    "text": "about and define what the AWS edge is I'm going to talk about the application edge and then we're going to talk about",
    "start": "50129",
    "end": "56219"
  },
  {
    "text": "some patterns for using a degree saved services to provide a a DevOps edge so",
    "start": "56219",
    "end": "62789"
  },
  {
    "text": "firstly what is the age where s edge so we can start with the AWS edge locations",
    "start": "62789",
    "end": "69080"
  },
  {
    "start": "66000",
    "end": "66000"
  },
  {
    "text": "so the 68 edge locations operating globally these are the blue dots you can",
    "start": "69080",
    "end": "74850"
  },
  {
    "text": "see on this map the orange dots are the age of its regions but the edge locations is where the edge services",
    "start": "74850",
    "end": "81240"
  },
  {
    "text": "operate from and the edge locations themselves are located close to users",
    "start": "81240",
    "end": "86670"
  },
  {
    "text": "and it's to provide low latency access to the AWS edge services so the age of",
    "start": "86670",
    "end": "94860"
  },
  {
    "text": "SH services themselves are Amazon CloudFront our content delivery network amazon route 53 our dns service an AWS",
    "start": "94860",
    "end": "103619"
  },
  {
    "text": "woth our web application firewall so the",
    "start": "103619",
    "end": "108930"
  },
  {
    "text": "application edge so I think traditionally we would see our application as being the origin web",
    "start": "108930",
    "end": "115320"
  },
  {
    "text": "servers effectively that what original the content for your website or your web application your Web API and the client",
    "start": "115320",
    "end": "122520"
  },
  {
    "text": "itself so the origin you can see is being ec2 elb s3 so they are originating",
    "start": "122520",
    "end": "128670"
  },
  {
    "text": "the content for your website the client can be a web page",
    "start": "128670",
    "end": "133710"
  },
  {
    "text": "a mobile application a desktop application so we were traditionally with seed that is your application but I",
    "start": "133710",
    "end": "139680"
  },
  {
    "text": "want you to think about actually as well as those two there's actually the edge in between so these are the edge",
    "start": "139680",
    "end": "145650"
  },
  {
    "text": "services route 53 cloud front and a degree swath and as a whole those three parts make up your application to dive",
    "start": "145650",
    "end": "154950"
  },
  {
    "text": "in a little bit of how cloudfront improves user experience we're showing here that we've got the origin servers",
    "start": "154950",
    "end": "161130"
  },
  {
    "start": "155000",
    "end": "155000"
  },
  {
    "text": "and the top right we've got our clients in the bottom left we've got these age eight a dress and edge locations our age",
    "start": "161130",
    "end": "171450"
  },
  {
    "text": "request regions and most of our edge locations are operating and connected to the Amazon backbone this provides low",
    "start": "171450",
    "end": "178230"
  },
  {
    "text": "latency optimized communications between the edge locations and the regions so",
    "start": "178230",
    "end": "185520"
  },
  {
    "text": "let's say we've got a client in the bottom left is going to wants to download an object the top right it's a",
    "start": "185520",
    "end": "191250"
  },
  {
    "text": "bar chart the first thing it's got to do is to find out which edge location it's",
    "start": "191250",
    "end": "196500"
  },
  {
    "text": "going to talk to and that's part of cloud 20 to direct that client to the nearest HT location for the low latency",
    "start": "196500",
    "end": "202890"
  },
  {
    "text": "connection because it's HTTP we're using TCP tcp diese three-way handshake to",
    "start": "202890",
    "end": "211200"
  },
  {
    "text": "establish a connection and the short of the distance we can we can establish this connection the quicker we can",
    "start": "211200",
    "end": "216840"
  },
  {
    "text": "establish that connection so the closer we can connect the edge location the better once we've established that",
    "start": "216840",
    "end": "223410"
  },
  {
    "text": "connection we can then make a request to the edge location for the object but if",
    "start": "223410",
    "end": "230580"
  },
  {
    "text": "the object is not actually stored in the edge location the edge location will go back to the origin to make a request",
    "start": "230580",
    "end": "235710"
  },
  {
    "text": "again it's a three-way handshake and it's going over along the distance but the one thing is that once we've",
    "start": "235710",
    "end": "241170"
  },
  {
    "text": "established that connection will persist that connection for as long as possible so any more requests for that origin can",
    "start": "241170",
    "end": "247560"
  },
  {
    "text": "use and reuse that age that connection so we can then download that object into",
    "start": "247560",
    "end": "254400"
  },
  {
    "text": "the edge location and we can then cash that content for future requests and then deliver it to the end client let's",
    "start": "254400",
    "end": "262350"
  },
  {
    "text": "say there's a second client that connects and wants to request the same object again we've got to do the three",
    "start": "262350",
    "end": "267950"
  },
  {
    "text": "way handshake but we're doing it over a short distance again so it can be quick now the objects already in the cash so",
    "start": "267950",
    "end": "273890"
  },
  {
    "text": "we can actually deliver it straight from the cash without even going to the origin but if it wasn't in the origin",
    "start": "273890",
    "end": "279640"
  },
  {
    "text": "because the cut edge location can go back to the origin and so if the object",
    "start": "279640",
    "end": "285260"
  },
  {
    "text": "wasn't in the cash we can go back to the origin and retrieve it from the origin we've already persisted that connection",
    "start": "285260",
    "end": "291440"
  },
  {
    "text": "so even if you have to go back to the origin to get the object it's quicker to go via CloudFront than for the client",
    "start": "291440",
    "end": "297590"
  },
  {
    "text": "itself to establish a connection over the Internet all the way back to the origin so CloudFront can also help to",
    "start": "297590",
    "end": "305180"
  },
  {
    "start": "304000",
    "end": "304000"
  },
  {
    "text": "reduce costs so this free data transfer between an age of west region origin so",
    "start": "305180",
    "end": "312140"
  },
  {
    "text": "that's whether that's easy to or s3 or ELB you don't pay for the data transfer from those two cloud front and the data",
    "start": "312140",
    "end": "320720"
  },
  {
    "text": "transfer out of cloud front is cheaper than coming out the region as well so on the whole you'll save money using cloud",
    "start": "320720",
    "end": "327110"
  },
  {
    "text": "front even if you're not caching content you'll save money to deliver content out",
    "start": "327110",
    "end": "332210"
  },
  {
    "text": "loud front rather than straight out of ec2 or s3 and because we can cache",
    "start": "332210",
    "end": "338990"
  },
  {
    "text": "contents at the edge locations and because we're using reusing persistent connections to the origin will find that",
    "start": "338990",
    "end": "345920"
  },
  {
    "text": "we actually have less load on our origins which means we don't need to scale so much we don't need to run as",
    "start": "345920",
    "end": "350930"
  },
  {
    "text": "much infrastructure at the origin which also saves saves money amazon route 53",
    "start": "350930",
    "end": "359780"
  },
  {
    "start": "357000",
    "end": "357000"
  },
  {
    "text": "has health checks so this allows us to monitor endpoints and update our dns if",
    "start": "359780",
    "end": "366470"
  },
  {
    "text": "we detect there's a problem with one endpoint so in this example I've got a DNS record triple WDS I'm pointing it to",
    "start": "366470",
    "end": "374120"
  },
  {
    "text": "a single endpoint amazon route 53 health checks will monitor the endpoints that",
    "start": "374120",
    "end": "380000"
  },
  {
    "text": "we define and it will repeatedly monitor those the monitoring is performed from",
    "start": "380000",
    "end": "386300"
  },
  {
    "text": "different locations globally and if we",
    "start": "386300",
    "end": "392060"
  },
  {
    "text": "do detect there's actually a failure to be able to at the failure of health in a",
    "start": "392060",
    "end": "397130"
  },
  {
    "text": "particular endpoint route 53 can automatically switch over the to point to the secondary endpoint we",
    "start": "397130",
    "end": "403990"
  },
  {
    "text": "can also use this to automate and provide notification of the of this failure so we're going to talk about the",
    "start": "403990",
    "end": "416950"
  },
  {
    "text": "patterns for the DevOps edge these are five that I've defined when we work",
    "start": "416950",
    "end": "422680"
  },
  {
    "text": "through each one so the first one is to cash as much as possible so we're going",
    "start": "422680",
    "end": "429490"
  },
  {
    "start": "429000",
    "end": "429000"
  },
  {
    "text": "to talk about HTTP cache control so this is something that's defined in the HTTP specification cache control itself is a",
    "start": "429490",
    "end": "435760"
  },
  {
    "text": "header and it can be used in both a request and a response in HTTP I'm going to talk specifically around HTTP",
    "start": "435760",
    "end": "442930"
  },
  {
    "text": "response cache control so let's say",
    "start": "442930",
    "end": "448960"
  },
  {
    "text": "we're going to make our request again from our client to our origin so we're requesting for the bar chart now the",
    "start": "448960",
    "end": "458410"
  },
  {
    "text": "origin we found the object of the origins got the object to going to return it and it will add extra headers",
    "start": "458410",
    "end": "464980"
  },
  {
    "text": "in its response one of those will be can be cash control here we're setting a max age of eighteen hundred so that's 1800",
    "start": "464980",
    "end": "472840"
  },
  {
    "text": "seconds 30 30 minutes and what this is is saying to the client here's the",
    "start": "472840",
    "end": "479200"
  },
  {
    "text": "object you can cash this content for as long as you like but if after 30 minutes",
    "start": "479200",
    "end": "486000"
  },
  {
    "text": "you want to use it again please contact me and validate that you've still got",
    "start": "486000",
    "end": "491020"
  },
  {
    "text": "the latest version what it's not actually saying this is after 30 minutes you can delete the object you know you",
    "start": "491020",
    "end": "497410"
  },
  {
    "text": "can keep that object after 30 minutes but if you want to use it again you need to revalidate that you've got the",
    "start": "497410",
    "end": "502840"
  },
  {
    "text": "current version there's also an extra directives within cache control so",
    "start": "502840",
    "end": "508600"
  },
  {
    "text": "there's also a s max age so that's a shared max age that is for a shared cache so that's a cache that is being",
    "start": "508600",
    "end": "515050"
  },
  {
    "text": "used by more than one user so typically they are cdns proxies web caches etc",
    "start": "515050",
    "end": "523210"
  },
  {
    "text": "probably every cash apart from say the browser cache itself which is obviously only private to that user we can also",
    "start": "523210",
    "end": "531160"
  },
  {
    "text": "specify private which means you can cash this content but only the private cash should be cashing that",
    "start": "531160",
    "end": "536860"
  },
  {
    "text": "content I only the browser cache or the mobile application should be cashing that content we can also specify no cash",
    "start": "536860",
    "end": "544950"
  },
  {
    "text": "so curiously no cash doesn't actually mean that you can't catch the content all it means you can cash it but you",
    "start": "544950",
    "end": "552130"
  },
  {
    "text": "need to validate every single time you want to use it with the origin to make sure that is the most valid most",
    "start": "552130",
    "end": "558130"
  },
  {
    "text": "up-to-date version and no store is saying don't cash it don't save it just",
    "start": "558130",
    "end": "565120"
  },
  {
    "text": "reduced to send it on don't store it at all so I'm going to use maps age",
    "start": "565120",
    "end": "570670"
  },
  {
    "text": "eighteen hundred and also you have a extra tag sometimes called the e-tag",
    "start": "570670",
    "end": "576010"
  },
  {
    "text": "entity tag and this is a way of marking the content as a specific version of",
    "start": "576010",
    "end": "581290"
  },
  {
    "text": "that content we don't actually the specification doesn't specify how you can calculate that each tag but it's",
    "start": "581290",
    "end": "588370"
  },
  {
    "text": "very common that people will use hashing of the content or they'll use a timestamp for the generation but you",
    "start": "588370",
    "end": "593950"
  },
  {
    "text": "should see that as just a piece of string it's a piece of text is not giving you any indication of the content",
    "start": "593950",
    "end": "600010"
  },
  {
    "text": "itself it's just that if you've got two entity tags that are different that means that the content is different too",
    "start": "600010",
    "end": "607380"
  },
  {
    "text": "so at this point the origin will send that to the client and so the client can then use that object for the next 30",
    "start": "607380",
    "end": "614050"
  },
  {
    "text": "minutes it doesn't need to contact the origin again to use it but let's say",
    "start": "614050",
    "end": "619570"
  },
  {
    "text": "after 30 minutes it doesn't need to use it again it will still be in the cache but he's got to validate as I have I got",
    "start": "619570",
    "end": "625180"
  },
  {
    "text": "the current version so this time it will send a get request and it will say if non-match basically we're saying give me",
    "start": "625180",
    "end": "633310"
  },
  {
    "text": "the objects but only if it's a different etag to the one I've got so let's say",
    "start": "633310",
    "end": "640300"
  },
  {
    "text": "the object hasn't changed it's still the same etag so the origin could be very efficient it can say yes you've got the",
    "start": "640300",
    "end": "646690"
  },
  {
    "text": "correct version keep on using it but let's say I has actually changed so",
    "start": "646690",
    "end": "651850"
  },
  {
    "text": "again we repeat it we've got if not match the same ed Tigers before we're saying please send me the new object if",
    "start": "651850",
    "end": "657730"
  },
  {
    "text": "it's changed and this time it has actually changed so the origin this time will actually send the object and will",
    "start": "657730",
    "end": "664150"
  },
  {
    "text": "also send a new e-type because it's a different different object so you can see using this using",
    "start": "664150",
    "end": "670709"
  },
  {
    "text": "cache-control ET tags and can what we call conditional gets with if non-match it could be very efficient to validate",
    "start": "670709",
    "end": "678149"
  },
  {
    "text": "the object so you shouldn't be too concerned about having to go back to the origin of validate because it's",
    "start": "678149",
    "end": "683550"
  },
  {
    "text": "typically it's a yes you've got the current version or no here's the newer version an Amazon CloudFront itself",
    "start": "683550",
    "end": "692810"
  },
  {
    "text": "understands cache control so you don't need to have to make any modifications to cloud for earth to your application",
    "start": "692810",
    "end": "699120"
  },
  {
    "text": "if it's using cash control console and can just use those understands all those",
    "start": "699120",
    "end": "704130"
  },
  {
    "text": "directives so it can cache those objects and it will also act as the server to",
    "start": "704130",
    "end": "709470"
  },
  {
    "text": "your to your client machine and understand when to say 304 not modified etc so clown foot will use the cash",
    "start": "709470",
    "end": "717720"
  },
  {
    "text": "control directive for its TTL how long an object can stay in its cache before",
    "start": "717720",
    "end": "723779"
  },
  {
    "text": "it needs to validate again with the origin but it can also use a",
    "start": "723779",
    "end": "730440"
  },
  {
    "text": "configuration as well so the actual TTL that clown feeling can you can use is a combination of the cache control headers",
    "start": "730440",
    "end": "737699"
  },
  {
    "text": "but also the cut you how you configure it within CloudFront itself so the",
    "start": "737699",
    "end": "744329"
  },
  {
    "text": "response has max age defined in the in the cache control header CloudFront will",
    "start": "744329",
    "end": "750360"
  },
  {
    "text": "use that as a as its TTL I think I said max I mean s-max a shared max age it's",
    "start": "750360",
    "end": "757380"
  },
  {
    "text": "got shared max age it will prefer to use that if it hasn't got a shared max age it would use max age and if it's got a",
    "start": "757380",
    "end": "766260"
  },
  {
    "text": "hex buyers header it will use that now expires is a is there not an older cache-control header it hasn't got as",
    "start": "766260",
    "end": "773220"
  },
  {
    "text": "much features as cache control itself effectively it's it specifies a date and time in the future at which point the",
    "start": "773220",
    "end": "780750"
  },
  {
    "text": "content becomes stale then you need to revalidate it how can we use that as well to define its TTL so at that point",
    "start": "780750",
    "end": "788480"
  },
  {
    "text": "if any of it finds any of those information in those headers it's now the origin itself is now defined that",
    "start": "788480",
    "end": "794880"
  },
  {
    "text": "TTL but if it has if none of those were defined it will use what's called the",
    "start": "794880",
    "end": "801660"
  },
  {
    "text": "TTL so this is the configuration that cow front has if there's if there's no",
    "start": "801660",
    "end": "807060"
  },
  {
    "text": "specification the TTL in the header but within the defined TTL of the origin we",
    "start": "807060",
    "end": "812970"
  },
  {
    "text": "can start to put limits on that maybe we want to limit the max at the maximum",
    "start": "812970",
    "end": "818070"
  },
  {
    "text": "value that TTL can be so there's a configuration called max TTL and there's",
    "start": "818070",
    "end": "824670"
  },
  {
    "text": "also one called min TTL the minimum TTL so we could constrain the range of T tails at CloudFront users so eventually",
    "start": "824670",
    "end": "833790"
  },
  {
    "text": "and this is for every single response the TTL is defined for CloudFront to store that in its cache now one thing to",
    "start": "833790",
    "end": "841170"
  },
  {
    "text": "think about the TTL that's been defined is only used by is used by CloudFront if",
    "start": "841170",
    "end": "846990"
  },
  {
    "text": "once let's say that it's a user minimum TT LOL maximum detail to change the t",
    "start": "846990",
    "end": "852810"
  },
  {
    "text": "tail that's actually defined by the origin cloud one doesn't update the cache controlled header it will still",
    "start": "852810",
    "end": "858270"
  },
  {
    "text": "send that directly to the client so that's a key point to think about that",
    "start": "858270",
    "end": "864120"
  },
  {
    "text": "cache control is great because it allows the origin to be in control and you can",
    "start": "864120",
    "end": "869310"
  },
  {
    "text": "defined cash controls very granular lee both within the URL itself the response",
    "start": "869310",
    "end": "875610"
  },
  {
    "text": "but you can also think about like a time-based TTL so perhaps you create",
    "start": "875610",
    "end": "880860"
  },
  {
    "text": "articles in a news website that's for instance you create an article quite",
    "start": "880860",
    "end": "886650"
  },
  {
    "text": "often that ask will be updated it is breaking news the article is changing quite quite rapidly so you could use a",
    "start": "886650",
    "end": "892830"
  },
  {
    "text": "short TTL while that's changing so that the website will display those changes but as that news article becomes older",
    "start": "892830",
    "end": "899730"
  },
  {
    "text": "it's less likely to change so you can extend that T tail over time so perhaps",
    "start": "899730",
    "end": "904890"
  },
  {
    "text": "once the news article is maybe a week old it probably won't change game so you can extend it to cash it for a long time",
    "start": "904890",
    "end": "910640"
  },
  {
    "text": "to try and think about defining cash control + TTL swing CloudFront if you're",
    "start": "910640",
    "end": "916980"
  },
  {
    "text": "using the origin to define cash controls you can be very granular not only with the URL and the object that you return",
    "start": "916980",
    "end": "923370"
  },
  {
    "text": "but also the time and the age of that object",
    "start": "923370",
    "end": "927500"
  },
  {
    "start": "929000",
    "end": "929000"
  },
  {
    "text": "we also want to think about using the client as well as part of our application so a response you provide",
    "start": "930130",
    "end": "939980"
  },
  {
    "text": "from the origin or from Cloudland can only have a certain level of cash",
    "start": "939980",
    "end": "945649"
  },
  {
    "text": "ability you can't have different elements of your web page and I mean the HTML part of the web page you can't cash",
    "start": "945649",
    "end": "952399"
  },
  {
    "text": "that slightly differently depending on how static or dynamic that content or how personal that content is so if we",
    "start": "952399",
    "end": "960140"
  },
  {
    "text": "take just just a random ecommerce website if we look if we look at the",
    "start": "960140",
    "end": "967940"
  },
  {
    "text": "HTML in that in that web page that structure of that HTML is pretty much the same for most users I mean obviously",
    "start": "967940",
    "end": "974570"
  },
  {
    "text": "the images will change but the general structure of HTML page would be the same however there are certain things that",
    "start": "974570",
    "end": "980540"
  },
  {
    "text": "are very specific to me so these elements here they are specific to me but they're relatively static you know I",
    "start": "980540",
    "end": "987170"
  },
  {
    "text": "will always be a customer since 2000 for instance and I might change my name I'm",
    "start": "987170",
    "end": "992240"
  },
  {
    "text": "sure I will need to update my photo at some point but they are relatively static but they're also dynamic elements",
    "start": "992240",
    "end": "999410"
  },
  {
    "text": "within that web page I would expect if I add an item to my shopping basket that",
    "start": "999410",
    "end": "1004570"
  },
  {
    "text": "should change actually update yeah relatively quickly similarly my orders",
    "start": "1004570",
    "end": "1010510"
  },
  {
    "text": "will change I expect my orders change I would expect to see that change within a few minutes or few hours or something",
    "start": "1010510",
    "end": "1017230"
  },
  {
    "text": "like that so because of these elements within this HTML page are quite quite",
    "start": "1017230",
    "end": "1022899"
  },
  {
    "text": "dynamic or quite personal to me that which suggests the whole that web page can't be can't really be cached a great",
    "start": "1022899",
    "end": "1029260"
  },
  {
    "text": "deal the cash ability of that page is as cacheable as the least cacheable element",
    "start": "1029260",
    "end": "1035699"
  },
  {
    "text": "now there's some techniques that I use such as compiling the web page in a",
    "start": "1035699",
    "end": "1043270"
  },
  {
    "text": "proxy in front of your origin may be using things like edge side includes but",
    "start": "1043270",
    "end": "1048400"
  },
  {
    "text": "again it still can't be cached a great deal they can't it's not very catchable so think about other techniques is to",
    "start": "1048400",
    "end": "1054460"
  },
  {
    "text": "actually use the client to do the inclusion of HTML elements within your web page so you could actually cash that",
    "start": "1054460",
    "end": "1060970"
  },
  {
    "text": "HTML element but perhaps there's a javascript called back to the I to the website to bring back extra data and to",
    "start": "1060970",
    "end": "1068009"
  },
  {
    "text": "modify the HTML page and also to think about content not necessarily being",
    "start": "1068009",
    "end": "1074580"
  },
  {
    "text": "either dynamic or static but it's a range of a range of dynamic or static so",
    "start": "1074580",
    "end": "1080460"
  },
  {
    "text": "some things will range from being very dynamic they're updating their changing stock prices are changing all the time",
    "start": "1080460",
    "end": "1085830"
  },
  {
    "text": "too yes static content that doesn't change but actually content fits along",
    "start": "1085830",
    "end": "1091139"
  },
  {
    "text": "that range similarly private content personal content it still can be cached",
    "start": "1091139",
    "end": "1098070"
  },
  {
    "text": "its object only can be only be cached and served to me but it still can be cashed but then there's also as well as",
    "start": "1098070",
    "end": "1104070"
  },
  {
    "text": "personal content for one person or universal content for everyone there's also content that can be served for a",
    "start": "1104070",
    "end": "1110609"
  },
  {
    "text": "group of users let's say a group of users who prefer particular language for instance so the second person to talk",
    "start": "1110609",
    "end": "1120719"
  },
  {
    "text": "about is to forward as little as possible so what do I mean by forwarding",
    "start": "1120719",
    "end": "1126809"
  },
  {
    "text": "so this is a concept of ink cloud front so if you make a request against",
    "start": "1126809",
    "end": "1132029"
  },
  {
    "text": "CloudFront and it's not in the cache it's going to make that request back to the origin to get the content it needs",
    "start": "1132029",
    "end": "1139489"
  },
  {
    "text": "by default it will always send the path of the request and that's all it sends",
    "start": "1139489",
    "end": "1146549"
  },
  {
    "text": "effectively it's forwarding the path to the origin so the origin can return a",
    "start": "1146549",
    "end": "1152039"
  },
  {
    "text": "response to that path and the path itself is part of the cache key so that",
    "start": "1152039",
    "end": "1158070"
  },
  {
    "text": "if any subsequent requests come in it can cloud when it can look at its cash with that cache key and find the object",
    "start": "1158070",
    "end": "1164219"
  },
  {
    "text": "and return that but quite often just the path on its own doesn't give you or",
    "start": "1164219",
    "end": "1169409"
  },
  {
    "text": "doesn't give the origin or the information that it requires this is an example this is a search page we're not",
    "start": "1169409",
    "end": "1176639"
  },
  {
    "text": "actually providing the origin with any query terms so it wouldn't actually be able to find anything but by default the",
    "start": "1176639",
    "end": "1182190"
  },
  {
    "text": "query string is not actually forwarded in cloud front but we can enable that we",
    "start": "1182190",
    "end": "1187589"
  },
  {
    "text": "can actually configure CloudFront to forward the query string and in fact we can now specify individual parameters",
    "start": "1187589",
    "end": "1194940"
  },
  {
    "text": "actually make up the cache key so the more things that we forward to the origin those things get added to the",
    "start": "1194940",
    "end": "1202320"
  },
  {
    "text": "cache key and if we're forwarding things that vary a lot we're effectively reducing our cache hit ratio because the",
    "start": "1202320",
    "end": "1209250"
  },
  {
    "text": "cache key will be different if the values that we forward are different so",
    "start": "1209250",
    "end": "1214559"
  },
  {
    "text": "we want to try and forward as little as possible we could forward all the headers and all those headers will be",
    "start": "1214559",
    "end": "1221550"
  },
  {
    "text": "added to the cache key and your cache hit ratio is very low at this point because there's so much variability in",
    "start": "1221550",
    "end": "1227370"
  },
  {
    "text": "those headers and in fact if you do forward all headers in cloud one it won't even be bothered you won't can be",
    "start": "1227370",
    "end": "1233820"
  },
  {
    "text": "concerned about caching that content because the chance of you actually hitting that cash subsequently is very",
    "start": "1233820",
    "end": "1239760"
  },
  {
    "text": "low so if you forward all headers you're effectively saying to clown front don't catch any of the content effectively act",
    "start": "1239760",
    "end": "1246420"
  },
  {
    "text": "like a proxy back to your origin they're still benefits for doing that you're so typically you'll see an improvement in",
    "start": "1246420",
    "end": "1252059"
  },
  {
    "text": "latency but you won't be cashing anything at the edge so generally you",
    "start": "1252059",
    "end": "1257190"
  },
  {
    "text": "don't want to forward all headers you want to be specific if you do need forward hold all headers a very common",
    "start": "1257190",
    "end": "1263070"
  },
  {
    "text": "header to forward is the host header what often you have web servers are virtual hosting multiple websites if you",
    "start": "1263070",
    "end": "1270090"
  },
  {
    "text": "don't forward the Hostetter from cloud front to your web servers your web server won't know which website your",
    "start": "1270090",
    "end": "1275100"
  },
  {
    "text": "your users are visiting so it won't be able to serve any content so it's very common to include the hostetter's as",
    "start": "1275100",
    "end": "1281790"
  },
  {
    "text": "part of your forwarding that means that this host header will get added to the cache key you can quite common also to",
    "start": "1281790",
    "end": "1290700"
  },
  {
    "text": "forward the accept language header so this is a the language defined in the browser the preference for that user so",
    "start": "1290700",
    "end": "1297750"
  },
  {
    "text": "you could forward that header so that you could vary the response the language of the response the one thing to be",
    "start": "1297750",
    "end": "1303960"
  },
  {
    "text": "aware we are wary of is accept language isn't just the language of preference it will give you preferences and an ordered",
    "start": "1303960",
    "end": "1311070"
  },
  {
    "text": "list of preferences so here this is my web browser so it's preferring English",
    "start": "1311070",
    "end": "1316350"
  },
  {
    "text": "British but it will also accept English us and also just a general English",
    "start": "1316350",
    "end": "1321600"
  },
  {
    "text": "language but because that gets edited the cache key as is it does mean if",
    "start": "1321600",
    "end": "1327090"
  },
  {
    "text": "another user comes in perhaps using a u.s. web browser doesn't specify English British",
    "start": "1327090",
    "end": "1332159"
  },
  {
    "text": "they will actually be forwarded back to the origin and they will get their own cash version so sometimes you want to",
    "start": "1332159",
    "end": "1338879"
  },
  {
    "text": "think about what if you do forward headers or you do forward cookies there are some techniques to try and reduce",
    "start": "1338879",
    "end": "1344429"
  },
  {
    "text": "that variability and I'll show you that later you can also forward cookies and",
    "start": "1344429",
    "end": "1349829"
  },
  {
    "text": "this is quite common I'm going to example here is obviously it looks like a session ID is a session ID sometimes",
    "start": "1349829",
    "end": "1355169"
  },
  {
    "text": "we want to know who the session is who the user is so it's quite common to want to forward cookies and maybe sometimes",
    "start": "1355169",
    "end": "1360599"
  },
  {
    "text": "you only want to forward certain cookies so for example you could say that this search page here we're not interested in",
    "start": "1360599",
    "end": "1366659"
  },
  {
    "text": "the user of the search the search results won't be affected by the user however maybe the theme of the website",
    "start": "1366659",
    "end": "1372809"
  },
  {
    "text": "will affect the the response it would provide and if we're interested in a",
    "start": "1372809",
    "end": "1377969"
  },
  {
    "text": "particular currency we want the search results to include that particular currency so it's important to forward",
    "start": "1377969",
    "end": "1383339"
  },
  {
    "text": "when the response is varied because of that particular value to hear some tips",
    "start": "1383339",
    "end": "1389609"
  },
  {
    "start": "1389000",
    "end": "1389000"
  },
  {
    "text": "for when forwarding trying only forwards things such as the headers and the",
    "start": "1389609",
    "end": "1395339"
  },
  {
    "text": "cookies when it will affect the response as we mentioned before if you forward",
    "start": "1395339",
    "end": "1400829"
  },
  {
    "text": "something that will be had it and added to the cash king that value will vary over time and over the use users",
    "start": "1400829",
    "end": "1407939"
  },
  {
    "text": "requests that means you're going to reduce your cash it ratio so only",
    "start": "1407939",
    "end": "1413039"
  },
  {
    "text": "forward if the response will be varied a change because of that value of what that you do forward also to reduce the",
    "start": "1413039",
    "end": "1421679"
  },
  {
    "text": "variability and forwarded values so if you if you're forwarding a header that varies a lot that means you're less",
    "start": "1421679",
    "end": "1428639"
  },
  {
    "text": "likely to hit hit the cash with the same values to only try and forward things",
    "start": "1428639",
    "end": "1435179"
  },
  {
    "text": "that can be reducing the different types of values that it can return and that's",
    "start": "1435179",
    "end": "1440579"
  },
  {
    "text": "the accept language scenario that I spoke to earlier and I'll talk about that later so sometimes people will",
    "start": "1440579",
    "end": "1447749"
  },
  {
    "text": "forward things such as session IDs because they want to track their users through the website there are the",
    "start": "1447749",
    "end": "1454229"
  },
  {
    "text": "techniques you can actually look at the clown front access logs and actually track and process the logs directly",
    "start": "1454229",
    "end": "1459239"
  },
  {
    "text": "other options to use things such as a beacon so you don't forward the an ID for the whole web page for",
    "start": "1459239",
    "end": "1465619"
  },
  {
    "text": "instance but you forward it just for a little one pixel gift kind of thing is",
    "start": "1465619",
    "end": "1471109"
  },
  {
    "text": "kind of a common thing or forward just a tracker to actually identify that user but the whole website itself you don't",
    "start": "1471109",
    "end": "1478039"
  },
  {
    "text": "forward the session ID which keeps your cache hit ratio as high as possible",
    "start": "1478039",
    "end": "1483309"
  },
  {
    "text": "sometimes people will forward headers and cookies to do authorization and authentication of users you can do that",
    "start": "1483309",
    "end": "1491299"
  },
  {
    "text": "but again you're going to reduce your cash it ratio so think about using cloud front techniques such as signed URLs and",
    "start": "1491299",
    "end": "1497210"
  },
  {
    "text": "signed cookies to do the author authorization on the edge so you can cash and you reuse the content that's in",
    "start": "1497210",
    "end": "1503629"
  },
  {
    "text": "the cache for different users but each user request is still being authenticated at the edge which makes",
    "start": "1503629",
    "end": "1509210"
  },
  {
    "text": "reduces the load on the origin you're going to increase your cache hit ratio",
    "start": "1509210",
    "end": "1516169"
  },
  {
    "text": "and also the authorization is going to be quicker because it's happening on the edge and finally there's a very response",
    "start": "1516169",
    "end": "1524479"
  },
  {
    "text": "header in HTTP so this is where the web server will send to his client or any",
    "start": "1524479",
    "end": "1529519"
  },
  {
    "text": "caches that it's talking to these are the these headers if you've got",
    "start": "1529519",
    "end": "1535549"
  },
  {
    "text": "different values for the future requests you need to come back and make another",
    "start": "1535549",
    "end": "1540679"
  },
  {
    "text": "request because I will vary my response it's the value of these headers very now",
    "start": "1540679",
    "end": "1547519"
  },
  {
    "text": "you can think of that is very similar to forwarding in cloud front the difference",
    "start": "1547519",
    "end": "1553849"
  },
  {
    "text": "being that forwarding is from the request we're very is being defined by the response now CloudFront doesn't",
    "start": "1553849",
    "end": "1559369"
  },
  {
    "text": "actually use the very head of itself it's already defined the cache key it",
    "start": "1559369",
    "end": "1565070"
  },
  {
    "text": "doesn't on the request rather than the response but it's useful to use very in your origin because you're telling",
    "start": "1565070",
    "end": "1570919"
  },
  {
    "text": "downstream caches so it could be the web browser for instance or it could be the hotel web proxy for instance you're",
    "start": "1570919",
    "end": "1578899"
  },
  {
    "text": "telling downstream caches that they if this particular header varies in its",
    "start": "1578899",
    "end": "1584450"
  },
  {
    "text": "value then I'm going to vary my response so if there's a different value for a future requests come back to me and I'll",
    "start": "1584450",
    "end": "1591830"
  },
  {
    "text": "give you a different response so sometimes it's common to want to",
    "start": "1591830",
    "end": "1597379"
  },
  {
    "start": "1595000",
    "end": "1595000"
  },
  {
    "text": "forward the user agent string it's quite often you may want to the web server",
    "start": "1597379",
    "end": "1602450"
  },
  {
    "text": "needs to understand the type of operating system or the type of device whether it's a mobile device or whether",
    "start": "1602450",
    "end": "1610159"
  },
  {
    "text": "it's a tablet desktop etc so let's say we're going to forward the user agent",
    "start": "1610159",
    "end": "1615799"
  },
  {
    "text": "string so we do a request against the the origin in this case for the user",
    "start": "1615799",
    "end": "1624049"
  },
  {
    "text": "agent string varies a great deal and there's a lot of information that probably you don't need to know you",
    "start": "1624049",
    "end": "1629389"
  },
  {
    "text": "probably don't need to know for instance the exact version number possibly of a",
    "start": "1629389",
    "end": "1634609"
  },
  {
    "text": "browser because there's so much variability if you forward the user agent string your cache hit ratio will",
    "start": "1634609",
    "end": "1640700"
  },
  {
    "text": "go down your forwarding too much information you only want for instance if you only want the operating system",
    "start": "1640700",
    "end": "1646609"
  },
  {
    "text": "for some reason then only for with the operating system however we can't vary",
    "start": "1646609",
    "end": "1651619"
  },
  {
    "text": "the you can't modify the user agent string it's defined by the browser we can't change it from of our brow of our",
    "start": "1651619",
    "end": "1658879"
  },
  {
    "text": "browsers users browsers so let's think about how we can reduce what we forward",
    "start": "1658879",
    "end": "1664960"
  },
  {
    "text": "so one technique is to use a cookie so we can we can set a cookie say for the",
    "start": "1664960",
    "end": "1671269"
  },
  {
    "text": "operating system and then that'll that cookies value will only vary between a few hop operating system options so by",
    "start": "1671269",
    "end": "1679580"
  },
  {
    "text": "just because we're going to be varying that value of that cookie a limited number of values that helps to maintain",
    "start": "1679580",
    "end": "1685339"
  },
  {
    "text": "the cache hit ratio but we've got to set the cookie first so let's say we oh that",
    "start": "1685339",
    "end": "1692269"
  },
  {
    "text": "was one option athens got ahead of myself so one option CloudFront supports rather than forwarding the user agent",
    "start": "1692269",
    "end": "1698119"
  },
  {
    "text": "string it's actually forward these headers now these headers a specific to cloud front and these are one of the",
    "start": "1698119",
    "end": "1703129"
  },
  {
    "text": "things that CloudFront does if you forward this particular header one of these headers all of them all of these",
    "start": "1703129",
    "end": "1709129"
  },
  {
    "text": "headers what clouds front will do at the edge itself will inspect the user agent",
    "start": "1709129",
    "end": "1714139"
  },
  {
    "text": "header extract the information to define whether it's a mobile device or whether it's a desktop device and then it will",
    "start": "1714139",
    "end": "1721460"
  },
  {
    "text": "forward that back to the origin so you can identify one of these devices at the origin without having to forward the",
    "start": "1721460",
    "end": "1728059"
  },
  {
    "text": "user agent string but let's say I do want to know what the operating system is we don't have a an",
    "start": "1728059",
    "end": "1734450"
  },
  {
    "text": "operating system header in Cloudland so I do need to look at the user agent string but what I can do is use a cookie",
    "start": "1734450",
    "end": "1742090"
  },
  {
    "text": "let's say we make a request and that cookie is not set I don't know the operating system so i can issue a",
    "start": "1742090",
    "end": "1747919"
  },
  {
    "text": "redirect to the client to go to this unique special user agent URL in my",
    "start": "1747919",
    "end": "1754130"
  },
  {
    "text": "website so i'm going to redirect the client to that user agent URL for that",
    "start": "1754130",
    "end": "1762380"
  },
  {
    "text": "user agent URL i've defined in cloud front to actually forward the user agent",
    "start": "1762380",
    "end": "1767570"
  },
  {
    "text": "string now my only forwarding the user agent string for that particular URL because I need it in the server to be",
    "start": "1767570",
    "end": "1774049"
  },
  {
    "text": "able to define and set my cookie so the origin now the web servers have that",
    "start": "1774049",
    "end": "1781460"
  },
  {
    "text": "user agent string it can inspect it extract the information it once and then it can send a redirect back to where the",
    "start": "1781460",
    "end": "1789169"
  },
  {
    "text": "client came from and set a cookie so I've set a cookie here operating system is equals Mac OS X so I've now got that",
    "start": "1789169",
    "end": "1797510"
  },
  {
    "text": "information and then for any other requests against that website that",
    "start": "1797510",
    "end": "1802940"
  },
  {
    "text": "cookie will be returned and I'm forwarding that cookie so I can do I can vary my response based on that cookie so",
    "start": "1802940",
    "end": "1811370"
  },
  {
    "text": "here I make a now make a request the client sends a cookie I can now define",
    "start": "1811370",
    "end": "1816559"
  },
  {
    "text": "and understand what the operating system is without having to pull with the user agent string for every URL on that",
    "start": "1816559",
    "end": "1822980"
  },
  {
    "text": "website so the way i did this configuration is using cash behaviors in",
    "start": "1822980",
    "end": "1828200"
  },
  {
    "text": "cloud front and i've specified for a user agent URL to forward the header user agent but then for the rest of the",
    "start": "1828200",
    "end": "1835130"
  },
  {
    "text": "website just for the cookie OS so this helps to maintain the cache hit ratio as",
    "start": "1835130",
    "end": "1841970"
  },
  {
    "text": "high as possible but I'm getting the information in the server that I need and require to do that but this just",
    "start": "1841970",
    "end": "1850130"
  },
  {
    "text": "feel a little bit like browser sniffing that we used to do 10 15 years ago in the web browser to understand which",
    "start": "1850130",
    "end": "1856279"
  },
  {
    "text": "browser we're using what kind of API what's done is available in there in the web browser",
    "start": "1856279",
    "end": "1863749"
  },
  {
    "text": "so ideally we should think about responsive web design and this is not a clown fferent feature this is just a",
    "start": "1863749",
    "end": "1869850"
  },
  {
    "start": "1864000",
    "end": "1864000"
  },
  {
    "text": "feature of web browsers HTML HTTP but by doing this we can vary the response",
    "start": "1869850",
    "end": "1876830"
  },
  {
    "text": "perceived by the client so for this example this is the address at home page",
    "start": "1876830",
    "end": "1882470"
  },
  {
    "text": "for different devices it will change the layout of that web page for that",
    "start": "1882470",
    "end": "1888059"
  },
  {
    "text": "particular size of device and this is all done in the client side i'm using css3 media selectors to actually do this",
    "start": "1888059",
    "end": "1894240"
  },
  {
    "text": "the good thing about this is it's the same response coming from the web server we can cash that and serve that to all",
    "start": "1894240",
    "end": "1900990"
  },
  {
    "text": "the devices and it's the devices that are making that change so as before when i talked about including and modifying",
    "start": "1900990",
    "end": "1907529"
  },
  {
    "text": "the response on the on the client side again we're using the client to vary what we present to the user which it",
    "start": "1907529",
    "end": "1914580"
  },
  {
    "text": "makes it very efficient in the cache because it's just one cached object so",
    "start": "1914580",
    "end": "1923639"
  },
  {
    "text": "three the pattern is to validate efficiently so we can validate so we",
    "start": "1923639",
    "end": "1930539"
  },
  {
    "text": "talked about validation before about doing conditional gets for instance where we get an object what we say give",
    "start": "1930539",
    "end": "1937019"
  },
  {
    "text": "me the object but only if it's a different etag to the one I've got in my cash now sometimes we want invalidation",
    "start": "1937019",
    "end": "1945840"
  },
  {
    "start": "1943000",
    "end": "1943000"
  },
  {
    "text": "the ideas be able to invalidate content in the cache the problem is that HTTP",
    "start": "1945840",
    "end": "1951629"
  },
  {
    "text": "doesn't define invalidation it doesn't exist in HTTP so although CloudFront and",
    "start": "1951629",
    "end": "1956909"
  },
  {
    "text": "other CD ends and open software will support in validation the ability to make an API call to cloud front to tell",
    "start": "1956909",
    "end": "1964529"
  },
  {
    "text": "it to invalidate this particular URL to take it out of the edge locations globally is possible but you can only",
    "start": "1964529",
    "end": "1971970"
  },
  {
    "text": "invalidate content at the origin or it come from you can't invalidate content that you don't in the caches that you",
    "start": "1971970",
    "end": "1978179"
  },
  {
    "text": "don't control so you can't invalidate content at the ISP or in a corporate or hotel caches you can't invalidate",
    "start": "1978179",
    "end": "1985259"
  },
  {
    "text": "content in the browser for instance so you want to think of in validation is sort of like the the emergency button",
    "start": "1985259",
    "end": "1991470"
  },
  {
    "text": "the break glass something's happened made maybe you've accidentally leaked your new products too early so",
    "start": "1991470",
    "end": "1998610"
  },
  {
    "text": "you need to do it you need to invalidate and try your best to try and wipe that content off the internet you're not",
    "start": "1998610",
    "end": "2004460"
  },
  {
    "text": "going to be able to do it if someone's already downloaded it into their browser cache but you can use in validation for",
    "start": "2004460",
    "end": "2010130"
  },
  {
    "text": "that's what the emergency what you don't want to be doing is using it as your day-to-day way of handling and",
    "start": "2010130",
    "end": "2016130"
  },
  {
    "text": "invalidating content you need to think about better ways of doing that so what",
    "start": "2016130",
    "end": "2022670"
  },
  {
    "start": "2022000",
    "end": "2022000"
  },
  {
    "text": "are the better ways use validation not in validation validation some validation",
    "start": "2022670",
    "end": "2027770"
  },
  {
    "text": "is defined in HTTP this is the conditional HTTP requests where we're using things such as if modified so if",
    "start": "2027770",
    "end": "2035360"
  },
  {
    "text": "the objects changed since this time give me the current version if non-match",
    "start": "2035360",
    "end": "2040940"
  },
  {
    "text": "which we talked about before using it with ET tags if match is for when you're putting objects to crowd to your web",
    "start": "2040940",
    "end": "2047810"
  },
  {
    "text": "server so if you're using the put HTTP you can use if match effectively where",
    "start": "2047810",
    "end": "2053179"
  },
  {
    "text": "you download an object it's got a detail you modify that object and you push it back for instance you can make sure that",
    "start": "2053180",
    "end": "2059240"
  },
  {
    "text": "you're actually over writing the version that you downloaded rather than over writing a newer version so if you're",
    "start": "2059240",
    "end": "2068030"
  },
  {
    "text": "using conditional HTTP requests you want to make sure your origin is actually",
    "start": "2068030",
    "end": "2073220"
  },
  {
    "text": "going to return 30 falls where appropriate that's the not modified if they don't support conditional gets or",
    "start": "2073220",
    "end": "2080960"
  },
  {
    "text": "conditional requests you could find yourself as part of the validation the origin will return the object anyway",
    "start": "2080960",
    "end": "2087230"
  },
  {
    "text": "even though it's exactly this the same as what's already cashed in the browser if it doesn't support 30 falls it's",
    "start": "2087230",
    "end": "2092899"
  },
  {
    "text": "going to just send the whole object again so it's not that fishing you want to make sure your origin web servers are",
    "start": "2092900",
    "end": "2099050"
  },
  {
    "text": "responding with 30 falls where appropriate and ideally they should be able to generate those 30 falls really",
    "start": "2099050",
    "end": "2105620"
  },
  {
    "text": "efficiently sometimes you might be in a situation where the web server will make",
    "start": "2105620",
    "end": "2112100"
  },
  {
    "text": "calls to the database it renders the web page it constricts a web page you have",
    "start": "2112100",
    "end": "2117500"
  },
  {
    "text": "to make various calls to various back-end servers to generate that web page only to find out actually the",
    "start": "2117500",
    "end": "2124040"
  },
  {
    "text": "version the web page hasn't changed from what what's already in the cache and you're using cpu side",
    "start": "2124040",
    "end": "2129560"
  },
  {
    "text": "more than time to actually do that effort so if you can build your web applications to understand whether or",
    "start": "2129560",
    "end": "2136790"
  },
  {
    "text": "not the the object has changed or updated without having to generate it that makes it really efficiently so the",
    "start": "2136790",
    "end": "2143870"
  },
  {
    "text": "concept of being able to just look at the database and see is a reversion higher than this one yes it is therefore",
    "start": "2143870",
    "end": "2151010"
  },
  {
    "text": "I will generate that content now if it hasn't changed that I won't generate a content I'll just send a 304 not",
    "start": "2151010",
    "end": "2156380"
  },
  {
    "text": "modified you've got the current version concepts also to use a lower s-max age",
    "start": "2156380",
    "end": "2162440"
  },
  {
    "text": "and a higher max age so as we mentioned before cloudfront supports s max age",
    "start": "2162440",
    "end": "2167620"
  },
  {
    "text": "this gives you the ability where you can refresh content on the on the edge",
    "start": "2167620",
    "end": "2172820"
  },
  {
    "text": "locations on cloud front but you can still keep the content for longer in the",
    "start": "2172820",
    "end": "2178940"
  },
  {
    "text": "client browser in their client caches since that works quite well if you've got content that perhaps it doesn't",
    "start": "2178940",
    "end": "2185990"
  },
  {
    "text": "matter if if users are looking at the old version maybe they've already downloaded it doesn't really matter but",
    "start": "2185990",
    "end": "2191120"
  },
  {
    "text": "you maybe want to make sure that any new users coming to your content gets the latest version so if you set a lower s",
    "start": "2191120",
    "end": "2196610"
  },
  {
    "text": "max age it means that CloudFront will more often go back to validate with the origin but your end users will keep that",
    "start": "2196610",
    "end": "2203690"
  },
  {
    "text": "content a little bit longer helps you reduce the cost on Cloudland because obviously they're going to use that content before they come back to cloud",
    "start": "2203690",
    "end": "2209870"
  },
  {
    "text": "front two to get the latest version and another opportunity to use URL",
    "start": "2209870",
    "end": "2215300"
  },
  {
    "text": "versioning so this works well if it's Java scripts or style sheets if you",
    "start": "2215300",
    "end": "2220820"
  },
  {
    "text": "change the content itself you update change the JavaScript change it to earth style sheet you could give it a",
    "start": "2220820",
    "end": "2227510"
  },
  {
    "text": "different URL and that effectively bust the cash you'll go through the cash because it's a different URL CloudFront",
    "start": "2227510",
    "end": "2234050"
  },
  {
    "text": "will see that as a completely different object anyway so that means you can set JavaScript for instance the the cache",
    "start": "2234050",
    "end": "2240080"
  },
  {
    "text": "control headers you can set the max age for a year because if you go into you will probably change that JavaScript at",
    "start": "2240080",
    "end": "2246080"
  },
  {
    "text": "some point within a year but if you do we'll give it a different version number change the url add a v2 onto it and then",
    "start": "2246080",
    "end": "2254390"
  },
  {
    "text": "the web browser will go to that one and download that later version really efficiently you can keep a cache control",
    "start": "2254390",
    "end": "2261020"
  },
  {
    "text": "headers long keep it in the cache as long as possible but if you need to change it create a new version give it a different",
    "start": "2261020",
    "end": "2266269"
  },
  {
    "text": "URL you can't do that for everything obviously can't change the public web pages and give them a different URL",
    "start": "2266269",
    "end": "2271849"
  },
  {
    "text": "because people won't find them but the things that are being referred to in a web page for instance or images etc then",
    "start": "2271849",
    "end": "2278059"
  },
  {
    "text": "you can do that as well so the fourth",
    "start": "2278059",
    "end": "2283430"
  },
  {
    "text": "pattern is to automate the edge so edge services they all have AP is so you",
    "start": "2283430",
    "end": "2290359"
  },
  {
    "start": "2286000",
    "end": "2286000"
  },
  {
    "text": "can define and make changes to your infrastructure using the edge services using AP is we have SDKs have support",
    "start": "2290359",
    "end": "2298910"
  },
  {
    "text": "for those services as well you can use the CLI as well to make changes and script those changes you can also deploy",
    "start": "2298910",
    "end": "2306680"
  },
  {
    "text": "changes using ADA West cloud formation so obviously is much better to define",
    "start": "2306680",
    "end": "2312349"
  },
  {
    "text": "some again cloud formation because you can then version control your changes and you can change the configuration as",
    "start": "2312349",
    "end": "2319670"
  },
  {
    "text": "your application develops so as just like your application will develop over time and you'll add new features because",
    "start": "2319670",
    "end": "2326720"
  },
  {
    "text": "the edge is part of your application you should be making configuration changes to your to your edge services as well as",
    "start": "2326720",
    "end": "2333319"
  },
  {
    "text": "it changes and it's really powerful to be able to do everything through an API you don't need to engage with AWS",
    "start": "2333319",
    "end": "2340339"
  },
  {
    "text": "directly if you want to make a change to your edge service configuration you don't need to engage with a dress",
    "start": "2340339",
    "end": "2346819"
  },
  {
    "text": "professional services you can do it all yourself through the API through the console and through the CLI and also you",
    "start": "2346819",
    "end": "2356000"
  },
  {
    "text": "can use IM to control who can actually make those changes so that's quite crucial if you want to control who has access to make changes to your edge",
    "start": "2356000",
    "end": "2363289"
  },
  {
    "text": "services use I am to limit access so",
    "start": "2363289",
    "end": "2369950"
  },
  {
    "text": "it's your CDN your your DNS your wife has code this give you a very basic",
    "start": "2369950",
    "end": "2377170"
  },
  {
    "text": "let's say version one of your application so you've got the clients on the left-hand side you're using route 53",
    "start": "2377170",
    "end": "2383180"
  },
  {
    "text": "to provide a domain name for which they can connect to the Amazon CloudFront distribution using a duress certificate",
    "start": "2383180",
    "end": "2390799"
  },
  {
    "text": "manager to manage your TLS certificate so they do a dress certificate manage",
    "start": "2390799",
    "end": "2396260"
  },
  {
    "text": "you can create the certificate and it will deploy that onto your clown for distributions it will also manage the",
    "start": "2396260",
    "end": "2402470"
  },
  {
    "text": "renewal process as well so once you've created the certificates free of charge it will manage the renewal and the",
    "start": "2402470",
    "end": "2408290"
  },
  {
    "text": "deployment of those new certificates to cloud front in also use AWS woth to",
    "start": "2408290",
    "end": "2413900"
  },
  {
    "text": "limit access to your cloudfront distribution so you can specify what rules based on IP addresses or",
    "start": "2413900",
    "end": "2420490"
  },
  {
    "text": "information within the headers or the body and things such as that cross-site",
    "start": "2420490",
    "end": "2425630"
  },
  {
    "text": "scripting sequel injection and then in this example we've got a single origin",
    "start": "2425630",
    "end": "2430900"
  },
  {
    "text": "but perhaps you may want to develop that over time so we realized actually we've got a static content on our website and",
    "start": "2430900",
    "end": "2438020"
  },
  {
    "text": "it's quite there are far more efficient ways of being able to store that content",
    "start": "2438020",
    "end": "2443120"
  },
  {
    "text": "one of those is using s3 obviously so we can move that static content onto s3",
    "start": "2443120",
    "end": "2448400"
  },
  {
    "text": "which means when we leave our web servers to do the the dynamic contents itself so we can make this change using",
    "start": "2448400",
    "end": "2456830"
  },
  {
    "text": "cloud formation with CloudFront to make the change as part of our continuous",
    "start": "2456830",
    "end": "2463370"
  },
  {
    "text": "integration process and continuous delivery an 80 s origin I should say a",
    "start": "2463370",
    "end": "2473330"
  },
  {
    "text": "clown for origin doesn't have to be an AWS as long as it's internet accessible so in this example we've got an origin",
    "start": "2473330",
    "end": "2479600"
  },
  {
    "text": "in our data center we can use that as well and we can make that change and develop the application and develop and",
    "start": "2479600",
    "end": "2485990"
  },
  {
    "text": "change the distribution or using cloud formation and perhaps this application",
    "start": "2485990",
    "end": "2491270"
  },
  {
    "text": "goes global and although we're using cloud fontelle global a global content",
    "start": "2491270",
    "end": "2496340"
  },
  {
    "text": "delivery network let's say we want to reduce the latency to as low as possible so we've got an origin in in Dublin but",
    "start": "2496340",
    "end": "2505250"
  },
  {
    "text": "perhaps we want to add a new region in u.s. west one so you can add a new",
    "start": "2505250",
    "end": "2510590"
  },
  {
    "text": "region oh sorry new origin in a different region and then use route 53 to latency based routing to route cloud",
    "start": "2510590",
    "end": "2517730"
  },
  {
    "text": "front to its nearest edge locate so its nearest origin so clowns ruin edge",
    "start": "2517730",
    "end": "2522830"
  },
  {
    "text": "locations in the US would be routed to the US region and then",
    "start": "2522830",
    "end": "2528660"
  },
  {
    "text": "edge locations in Europe would be routed to the European origin now I'm just",
    "start": "2528660",
    "end": "2535770"
  },
  {
    "text": "going to show you an example my laptop's",
    "start": "2535770",
    "end": "2541650"
  },
  {
    "text": "gone sleep",
    "start": "2541650",
    "end": "2544038"
  },
  {
    "text": "so I'll get an exam player that I've defined a clown from distribution using",
    "start": "2551089",
    "end": "2558390"
  },
  {
    "text": "conformation so what you're seeing here is using a dress code commit which is",
    "start": "2558390",
    "end": "2564119"
  },
  {
    "text": "our get hosting repository service and I've defined a Jason template of",
    "start": "2564119",
    "end": "2570989"
  },
  {
    "text": "confirmation it's fairly simple a moment I've got elastic Beanstalk is my origin",
    "start": "2570989",
    "end": "2577189"
  },
  {
    "text": "but at the bottom here we've got the clown for distribution this is just",
    "start": "2577189",
    "end": "2582749"
  },
  {
    "text": "defining as normal cloud formation Jason in this example but at the top I just",
    "start": "2582749",
    "end": "2587819"
  },
  {
    "text": "want to show you this video I've got a parameter here but I'm accepting a parameter called stage and I will accept",
    "start": "2587819",
    "end": "2593459"
  },
  {
    "text": "two different values either dead or prod and then i'm using a mapping section so",
    "start": "2593459",
    "end": "2598949"
  },
  {
    "text": "for each stage I've got a mapping for alias so this alias is that it's the",
    "start": "2598949",
    "end": "2605279"
  },
  {
    "text": "cname that I want to attach to a cloud front distribution so effectively if I",
    "start": "2605279",
    "end": "2610949"
  },
  {
    "text": "look down here at the cloud cloud for distribution for the alias so",
    "start": "2610949",
    "end": "2616109"
  },
  {
    "text": "effectually the SI dame I want to give to this clown front distribution I'm going to take the parameter stage and",
    "start": "2616109",
    "end": "2622859"
  },
  {
    "text": "then use that to look in my mappings to find the actual cname I'm going to attach to this CloudFront distribution",
    "start": "2622859",
    "end": "2630380"
  },
  {
    "text": "I've also defined to over the JSON files",
    "start": "2630679",
    "end": "2636650"
  },
  {
    "text": "so this one is a parameters so this is a parameter that I'm there if I use this",
    "start": "2636650",
    "end": "2642569"
  },
  {
    "text": "JSON file as a parameter file I'm going to define this to feed it into cloud formation so I can set that my stage is",
    "start": "2642569",
    "end": "2649170"
  },
  {
    "text": "our dev and you can see there there was a prod one as well so I can specify as a prod so I can make change you to that",
    "start": "2649170",
    "end": "2656999"
  },
  {
    "text": "clown formation template I can commit that into my code commit repository but I need to deploy that to cloudfront so",
    "start": "2656999",
    "end": "2665849"
  },
  {
    "text": "what I've used here is a dress code pipeline so code pipeline is a CI",
    "start": "2665849",
    "end": "2671329"
  },
  {
    "text": "pipeline continuous integration pipeline I've got a source there which is the",
    "start": "2671329",
    "end": "2676979"
  },
  {
    "text": "code commit repository and what happens is when I commit some link into that",
    "start": "2676979",
    "end": "2681989"
  },
  {
    "text": "into that repository code pipeline will pick up that change and from now we'll take that",
    "start": "2681989",
    "end": "2687390"
  },
  {
    "text": "information so it will take the the template and the two JSON files I've defined in my repository and then feed",
    "start": "2687390",
    "end": "2694289"
  },
  {
    "text": "it into the next stage called dev and in dev I've defined a deploy category",
    "start": "2694289",
    "end": "2704460"
  },
  {
    "text": "action and i'm using the deployment for ada west confirmation so this was only",
    "start": "2704460",
    "end": "2709710"
  },
  {
    "text": "recently released a few weeks ago I believe so this is a way of using cloud formation to as part of your deployment",
    "start": "2709710",
    "end": "2715530"
  },
  {
    "text": "and hid in here I do find the stack name",
    "start": "2715530",
    "end": "2721079"
  },
  {
    "text": "that I want to deploy it to the template i'm going to use which is in that code",
    "start": "2721079",
    "end": "2726599"
  },
  {
    "text": "repository and i've also defined the template configuration so that means",
    "start": "2726599",
    "end": "2732119"
  },
  {
    "text": "when code pipeline runs this deployment in cloud formation it will pass it the",
    "start": "2732119",
    "end": "2737819"
  },
  {
    "text": "template but it will also specify that take the parameters from that parameter folder the dev Jason parameters file and",
    "start": "2737819",
    "end": "2744059"
  },
  {
    "text": "pass out into cloud formation so cloud formation will know that this stack has",
    "start": "2744059",
    "end": "2749549"
  },
  {
    "text": "got a parameter of prod for stage therefore it will specify that particular alias within the cloud cloud",
    "start": "2749549",
    "end": "2756900"
  },
  {
    "text": "for distribution and once i deploy that to my dev stack i can then check that",
    "start": "2756900",
    "end": "2765180"
  },
  {
    "text": "that's working in Cloudland i haven't shown a testing stage here but it would be common to the testing stage just to",
    "start": "2765180",
    "end": "2771329"
  },
  {
    "text": "make sure that your dev cloudfront distribution is working fine and as no",
    "start": "2771329",
    "end": "2776460"
  },
  {
    "text": "problems before you can move to the next stage and that's to deploy to production",
    "start": "2776460",
    "end": "2786380"
  },
  {
    "text": "so I've created a manual approval here so I can do my testing I can do my",
    "start": "2786380",
    "end": "2791730"
  },
  {
    "text": "manual testing making sure that the the new dev distribution for clowns phone is",
    "start": "2791730",
    "end": "2797069"
  },
  {
    "text": "working exactly as I want it to do before I do approve all to prod and when I hit that button to review the change",
    "start": "2797069",
    "end": "2804390"
  },
  {
    "text": "and to approve that change it will then deploy it to my production stack which is my production Calvin distribution and",
    "start": "2804390",
    "end": "2812779"
  },
  {
    "text": "the so the clown flint distributions will be too powerful distributions their HR member",
    "start": "2812779",
    "end": "2819060"
  },
  {
    "text": "of a cloud formation stack but the two cloudfront distributions will use will",
    "start": "2819060",
    "end": "2824220"
  },
  {
    "text": "have their own a cname their own alias so i can test those individually separately in this example I'm opposite",
    "start": "2824220",
    "end": "2831060"
  },
  {
    "text": "because I've included the elastic Beanstalk application as the origin I effective got an origin / distribution",
    "start": "2831060",
    "end": "2837450"
  },
  {
    "text": "as well so sometimes you might you could create a cloud formation template that defines everything the whole stacks are",
    "start": "2837450",
    "end": "2843660"
  },
  {
    "text": "not just cloud front but also your configuration of your origins etc and it could be part of your deployment process",
    "start": "2843660",
    "end": "2851420"
  },
  {
    "text": "so it's quite keen to think about how you can deploy your clown front distribution area of kalpen",
    "start": "2856070",
    "end": "2861500"
  },
  {
    "text": "configurations and your edge services such as wife and route 53 is part of the CloudFormation template and using code",
    "start": "2861500",
    "end": "2867930"
  },
  {
    "text": "plot pipeline you can have a pipeline to deploy those changes to your development stack before you go to your production",
    "start": "2867930",
    "end": "2873990"
  },
  {
    "text": "stack one other thing of automating is to think about using ad s lambda now",
    "start": "2873990",
    "end": "2881250"
  },
  {
    "text": "obviously we launched lambda at the edge so that's another benefit of thinking of",
    "start": "2881250",
    "end": "2886920"
  },
  {
    "text": "your edge as part of your application you're now able to execute at the edge",
    "start": "2886920",
    "end": "2892350"
  },
  {
    "text": "now effectively so you can make modifications to your requests and your responses in the Amazon CloudFront",
    "start": "2892350",
    "end": "2898500"
  },
  {
    "text": "itself but in this example I'm talking about 80 s lambda making modifications to your wack configuration so if you go",
    "start": "2898500",
    "end": "2906900"
  },
  {
    "text": "to our website we've got a pre-configured automations for laughs so",
    "start": "2906900",
    "end": "2913110"
  },
  {
    "start": "2907000",
    "end": "2907000"
  },
  {
    "text": "these are things that we've we've created for you which gives you you know they can be used and deployed but it",
    "start": "2913110",
    "end": "2919020"
  },
  {
    "text": "also inspires you to think of other ways of managing your wack configuration so",
    "start": "2919020",
    "end": "2924150"
  },
  {
    "text": "it gives you examples such as IP blacklisting for reputation list for instance or perhaps looking at for bad",
    "start": "2924150",
    "end": "2931020"
  },
  {
    "text": "robots or possibly bad actors are looking to try and exploit your website and finding errors in your website and",
    "start": "2931020",
    "end": "2938130"
  },
  {
    "text": "you can see those white looking or confident logs and therefore blocking",
    "start": "2938130",
    "end": "2943380"
  },
  {
    "text": "those users perhaps that are trying to find an exploit in your website",
    "start": "2943380",
    "end": "2948920"
  },
  {
    "text": "so the final pass and talk about is to monitor the edge so we're automating the edge but we need to monitor it as well",
    "start": "2951150",
    "end": "2957630"
  },
  {
    "text": "so cloud roll is supported in both route 53 cloud front and wow this gives you",
    "start": "2957630",
    "end": "2963490"
  },
  {
    "start": "2959000",
    "end": "2959000"
  },
  {
    "text": "the ability to detect any changes configuration or any attempts to make any changes to your edge services amzing",
    "start": "2963490",
    "end": "2973119"
  },
  {
    "start": "2972000",
    "end": "2972000"
  },
  {
    "text": "cloud watch has metrics and alarms for those services as well so it's quite useful to be able to monitor those those",
    "start": "2973119",
    "end": "2979000"
  },
  {
    "text": "metrics coming from your age services just to make sure it's really change in what an expected behavior perhaps if I",
    "start": "2979000",
    "end": "2986140"
  },
  {
    "text": "see my request going down on cloud from maybe something's happened or maybe if my errors increase my origin is having",
    "start": "2986140",
    "end": "2993819"
  },
  {
    "text": "issues cloudfront has its own reporting as well so these are available in the in",
    "start": "2993819",
    "end": "3000420"
  },
  {
    "start": "2996000",
    "end": "2996000"
  },
  {
    "text": "the console but we've also got access logs for cloud front so the access logs",
    "start": "3000420",
    "end": "3006599"
  },
  {
    "start": "3003000",
    "end": "3003000"
  },
  {
    "text": "themselves are just text files to their normal web blogs that you would see from from web servers etc but Amazon",
    "start": "3006599",
    "end": "3014579"
  },
  {
    "text": "CloudFront will deliver those into an s3 bucket of your choice so by default CloudFront distributions are not enabled",
    "start": "3014579",
    "end": "3021540"
  },
  {
    "text": "for logging so you need to enable them and then you can define an s3 bucket to",
    "start": "3021540",
    "end": "3026609"
  },
  {
    "text": "deliver those logs the logs we talked about in the documentation takes within",
    "start": "3026609",
    "end": "3032250"
  },
  {
    "text": "an hour it can be quicker but they get delivered within the hour into an s3",
    "start": "3032250",
    "end": "3037799"
  },
  {
    "text": "bucket what you could think about doing is using lambda with s3 bucket",
    "start": "3037799",
    "end": "3043650"
  },
  {
    "text": "notifications so that when a log file is delivered into s3 you could take that in",
    "start": "3043650",
    "end": "3048869"
  },
  {
    "text": "lambda and perhaps you can enrich that or add more information to your logs perhaps you've got extra information",
    "start": "3048869",
    "end": "3054510"
  },
  {
    "text": "from your own database of logging use of information you could attach those to those log entries to enrich that data",
    "start": "3054510",
    "end": "3060680"
  },
  {
    "text": "deliver it back to an s3 bucket and then you could use Amazon quick site to be able to analyze that data you'd also",
    "start": "3060680",
    "end": "3069089"
  },
  {
    "text": "deliver that into Amazon CloudWatch logs so although CloudFront dozen liver it directly into cloud watch dogs you can",
    "start": "3069089",
    "end": "3074849"
  },
  {
    "text": "use lambda to take those from the s3 bucket delivery into a cloud watch logs and from there you can start to build",
    "start": "3074849",
    "end": "3080490"
  },
  {
    "text": "metrics and alerts based on those logs in Amazon CloudWatch logs in order to use a DRS",
    "start": "3080490",
    "end": "3087780"
  },
  {
    "text": "data pipeline to take that data and deliver it into amazon redshift for other processing as an example into",
    "start": "3087780",
    "end": "3094440"
  },
  {
    "text": "using amazon quick site and then finally because they are just web logs text",
    "start": "3094440",
    "end": "3100290"
  },
  {
    "text": "files you could use your favorites you'll preferred w3c log processor so",
    "start": "3100290",
    "end": "3109349"
  },
  {
    "start": "3109000",
    "end": "3109000"
  },
  {
    "text": "those are all the patterns for the DevOps edge so there's fire in total one",
    "start": "3109349",
    "end": "3114839"
  },
  {
    "text": "thing I want to talk about is the key takeaways from from this session so think of the u.s. h services as part of",
    "start": "3114839",
    "end": "3121710"
  },
  {
    "start": "3115000",
    "end": "3115000"
  },
  {
    "text": "your application don't think of it as something that you might add at the end of your your project think about them",
    "start": "3121710",
    "end": "3127950"
  },
  {
    "text": "how you can use them in your application to provide a better user experience we've now got h lambda at the edge we",
    "start": "3127950",
    "end": "3135450"
  },
  {
    "text": "can start to think of what how we can use that at the edge as well try and optimizing use caching efficiently so",
    "start": "3135450",
    "end": "3141869"
  },
  {
    "text": "think about how you can vary the cache ability of a of an object not just down",
    "start": "3141869",
    "end": "3147089"
  },
  {
    "text": "to its own at the actual URL that it's using but also the time you know it can vary over time for different requests",
    "start": "3147089",
    "end": "3153569"
  },
  {
    "text": "for different for different reasons automate the configuration of the Adri",
    "start": "3153569",
    "end": "3159599"
  },
  {
    "text": "edge although you can do this all in the console manually you're not really documenting what your changes you're",
    "start": "3159599",
    "end": "3165960"
  },
  {
    "text": "making it is quite hard to repeat that to use things like cloud formation to",
    "start": "3165960",
    "end": "3171180"
  },
  {
    "text": "define your edge services and then use things such as code pipeline and code deploy to deploy those rock co deploy do",
    "start": "3171180",
    "end": "3179160"
  },
  {
    "text": "things such as code committing code pipelines to deploy those cloud formation templates to your stacks and",
    "start": "3179160",
    "end": "3186329"
  },
  {
    "text": "finally to monitor your age of wet edge using cloud trail cloud watching services logs so that's the end of my",
    "start": "3186329",
    "end": "3195180"
  },
  {
    "text": "presentation it's intricate any questions we've got six minutes just a",
    "start": "3195180",
    "end": "3200520"
  },
  {
    "text": "couple of things please can you remember to complete your evaluations that's really valuable to us for me personally",
    "start": "3200520",
    "end": "3206040"
  },
  {
    "text": "to understand where where I can improve my presentations so it's really important to give as much feedback as",
    "start": "3206040",
    "end": "3212069"
  },
  {
    "text": "possible there's also some related sessions there's two sessions showing here on the",
    "start": "3212069",
    "end": "3218540"
  },
  {
    "start": "3214000",
    "end": "3214000"
  },
  {
    "text": "tomorrow morning and that's the end of my presentation there's any questions",
    "start": "3218540",
    "end": "3225740"
  },
  {
    "text": "there are microphones there if anybody will speak okay",
    "start": "3227090",
    "end": "3233090"
  }
]