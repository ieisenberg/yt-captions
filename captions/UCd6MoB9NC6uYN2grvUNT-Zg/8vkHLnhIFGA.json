[
  {
    "start": "0",
    "end": "16000"
  },
  {
    "text": "- [Narrator] In this video,",
    "start": "150",
    "end": "990"
  },
  {
    "text": "you'll see how you can\nbuild a Python event-driven",
    "start": "990",
    "end": "3150"
  },
  {
    "text": "serverless application\nwith Amazon CodeWhisperer.",
    "start": "3150",
    "end": "6240"
  },
  {
    "text": "With this machine\nlearning powered service,",
    "start": "6240",
    "end": "8010"
  },
  {
    "text": "you can build applications faster",
    "start": "8010",
    "end": "9450"
  },
  {
    "text": "by leveraging code recommendations",
    "start": "9450",
    "end": "11010"
  },
  {
    "text": "and implementing API calls\nacross popular AWS services.",
    "start": "11010",
    "end": "14433"
  },
  {
    "start": "16000",
    "end": "136000"
  },
  {
    "text": "This is the application\nthat we're going to build",
    "start": "16650",
    "end": "18360"
  },
  {
    "text": "with the help of Amazon CodeWhisperer.",
    "start": "18360",
    "end": "20850"
  },
  {
    "text": "Users will have two different URLs",
    "start": "20850",
    "end": "22410"
  },
  {
    "text": "they can interact with to download",
    "start": "22410",
    "end": "23850"
  },
  {
    "text": "and recognize objects and images.",
    "start": "23850",
    "end": "26160"
  },
  {
    "text": "To achieve this implementation,",
    "start": "26160",
    "end": "27450"
  },
  {
    "text": "we'll work with four\ndifferent Lambda functions.",
    "start": "27450",
    "end": "29689"
  },
  {
    "text": "We'll begin by implementing\na Lambda function",
    "start": "29689",
    "end": "32369"
  },
  {
    "text": "that downloads an image\nusing a provided URL,",
    "start": "32370",
    "end": "34649"
  },
  {
    "text": "and then uploads the image to Amazon S3.",
    "start": "34650",
    "end": "36963"
  },
  {
    "text": "For demonstration purposes,",
    "start": "39420",
    "end": "40739"
  },
  {
    "text": "we've already prepared an application",
    "start": "40740",
    "end": "42180"
  },
  {
    "text": "with the AWS Cloud\nDevelopment Kit, or AWS CDK.",
    "start": "42180",
    "end": "46050"
  },
  {
    "text": "We're using Visual Studio Code as our IDE,",
    "start": "46050",
    "end": "48690"
  },
  {
    "text": "but we could also use an IDE by JetBrains.",
    "start": "48690",
    "end": "51570"
  },
  {
    "text": "To get started, let's navigate\nto our first Lambda function.",
    "start": "51570",
    "end": "55350"
  },
  {
    "text": "CodeWhisperer supports\nseveral programming languages,",
    "start": "55350",
    "end": "57658"
  },
  {
    "text": "including Java, JavaScript and Python.",
    "start": "57659",
    "end": "60630"
  },
  {
    "text": "In this example, we'll use\nPython to build our application.",
    "start": "60630",
    "end": "63750"
  },
  {
    "text": "Let's type a comment that says",
    "start": "63750",
    "end": "65730"
  },
  {
    "text": "write a function to download\na file from HTTP get",
    "start": "65730",
    "end": "68760"
  },
  {
    "text": "and press enter.",
    "start": "68760",
    "end": "69693"
  },
  {
    "text": "CodeWhisperer guesses our intent",
    "start": "71544",
    "end": "73500"
  },
  {
    "text": "and suggests a function name.",
    "start": "73500",
    "end": "75780"
  },
  {
    "text": "We'll accept a suggestion\nby using our tab key.",
    "start": "75780",
    "end": "78130"
  },
  {
    "text": "Next, let's press enter to see\nCodeWhisperer's suggestions",
    "start": "79410",
    "end": "82260"
  },
  {
    "text": "for the body of the function.",
    "start": "82260",
    "end": "83710"
  },
  {
    "text": "We'll use our right arrow\nkey to continue through",
    "start": "84720",
    "end": "86640"
  },
  {
    "text": "the suggestions until we\nfind the one we wanna use.",
    "start": "86640",
    "end": "89190"
  },
  {
    "text": "We'll press tab to select this one.",
    "start": "90150",
    "end": "91900"
  },
  {
    "text": "Next, let's call the function",
    "start": "93090",
    "end": "94469"
  },
  {
    "text": "and pass it the image to recognize",
    "start": "94470",
    "end": "96240"
  },
  {
    "text": "and image file name variables.",
    "start": "96240",
    "end": "98073"
  },
  {
    "text": "Now we need to upload\nthe image to Amazon S3.",
    "start": "99240",
    "end": "101939"
  },
  {
    "text": "To do this, we'll enter a comment.",
    "start": "101940",
    "end": "103640"
  },
  {
    "text": "We'll accept CodeWhisperer's suggestion",
    "start": "108240",
    "end": "110040"
  },
  {
    "text": "to name the function upload file.",
    "start": "110040",
    "end": "111783"
  },
  {
    "text": "We'll also accept the suggested method.",
    "start": "116550",
    "end": "118500"
  },
  {
    "text": "Now, let's call this function",
    "start": "119760",
    "end": "120930"
  },
  {
    "text": "and pass it the image file\nname at our S3 bucket.",
    "start": "120930",
    "end": "123453"
  },
  {
    "text": "We finished our first Lambda function.",
    "start": "127770",
    "end": "129810"
  },
  {
    "text": "All we had to do was type\nin our text comments,",
    "start": "129810",
    "end": "131970"
  },
  {
    "text": "and CodeWhisperer\ngenerated the code for us.",
    "start": "131970",
    "end": "134253"
  },
  {
    "start": "136000",
    "end": "302000"
  },
  {
    "text": "Now we'll implement our\nsecond Lambda function.",
    "start": "137370",
    "end": "139799"
  },
  {
    "text": "This function will read an item",
    "start": "139800",
    "end": "141000"
  },
  {
    "text": "from the Amazon Simple\nQueue Service, or SQS queue.",
    "start": "141000",
    "end": "144060"
  },
  {
    "text": "Use Amazon recognition to recognize",
    "start": "144060",
    "end": "145950"
  },
  {
    "text": "all the labels from the image,",
    "start": "145950",
    "end": "147420"
  },
  {
    "text": "store the results in Amazon DynamoDB,",
    "start": "147420",
    "end": "149910"
  },
  {
    "text": "and then publish the results",
    "start": "149910",
    "end": "150990"
  },
  {
    "text": "to Amazon Simple\nNotification Service, or SNS.",
    "start": "150990",
    "end": "153843"
  },
  {
    "text": "Let's start by entering\nreceive message from SQS.",
    "start": "156090",
    "end": "158853"
  },
  {
    "text": "We'll use the method\nsuggested by CodeWhisperer.",
    "start": "160920",
    "end": "163319"
  },
  {
    "text": "Next, we'll define the image\nevent as receive message",
    "start": "166050",
    "end": "168840"
  },
  {
    "text": "and set MyQueueURL as the parameter.",
    "start": "168840",
    "end": "171213"
  },
  {
    "text": "Now let's enter detect labels\nfrom image with recognition.",
    "start": "172590",
    "end": "175502"
  },
  {
    "text": "We'll accept the suggested name,",
    "start": "177720",
    "end": "179280"
  },
  {
    "text": "which requires a bucket and key.",
    "start": "179280",
    "end": "180880"
  },
  {
    "text": "We'll also accept the\nsuggested implementation",
    "start": "182220",
    "end": "184303"
  },
  {
    "text": "which will return all the\nlabels that are in the image.",
    "start": "184303",
    "end": "187053"
  },
  {
    "text": "Next, let's define labels as detect labels",
    "start": "190800",
    "end": "193470"
  },
  {
    "text": "and pass the image bucket and key.",
    "start": "193470",
    "end": "195170"
  },
  {
    "text": "Now, let's enter save item to DynamoDB.",
    "start": "197190",
    "end": "199833"
  },
  {
    "text": "We'll accept the suggested name",
    "start": "201491",
    "end": "203580"
  },
  {
    "text": "and choose our preferred implementation.",
    "start": "203580",
    "end": "205580"
  },
  {
    "text": "In this case, CodeWhisperer\ntook into consideration",
    "start": "208140",
    "end": "210630"
  },
  {
    "text": "our prior code that recognizes\nimages from recognition",
    "start": "210630",
    "end": "213390"
  },
  {
    "text": "when creating a format and structure",
    "start": "213390",
    "end": "214920"
  },
  {
    "text": "for the items that will be saved.",
    "start": "214920",
    "end": "216569"
  },
  {
    "text": "Let's rename the method",
    "start": "217620",
    "end": "218580"
  },
  {
    "text": "and provide the image ID as a parameter.",
    "start": "218580",
    "end": "220593"
  },
  {
    "text": "We'll also rename a\ncouple of the parameters.",
    "start": "224970",
    "end": "227220"
  },
  {
    "text": "Before calling this method,",
    "start": "234810",
    "end": "236370"
  },
  {
    "text": "we need to import the UUID module.",
    "start": "236370",
    "end": "238593"
  },
  {
    "text": "Let's call the method\nand pass it a random UUID",
    "start": "242230",
    "end": "245400"
  },
  {
    "text": "and the detected label.",
    "start": "245400",
    "end": "246549"
  },
  {
    "text": "Now we need to send the image to SNS.",
    "start": "247680",
    "end": "250019"
  },
  {
    "text": "When we press enter,",
    "start": "250020",
    "end": "251160"
  },
  {
    "text": "CodeWhisperer suggests adding\ncode to send a message.",
    "start": "251160",
    "end": "254220"
  },
  {
    "text": "The suggestion looks good,",
    "start": "254220",
    "end": "255540"
  },
  {
    "text": "but instead of sending the image event,",
    "start": "255540",
    "end": "257130"
  },
  {
    "text": "we'll send the labels.",
    "start": "257130",
    "end": "258230"
  },
  {
    "text": "Now let's define the method.",
    "start": "260400",
    "end": "261799"
  },
  {
    "text": "We'll enter publish item to SNS.",
    "start": "263751",
    "end": "266253"
  },
  {
    "text": "CodeWhisperer makes\nassumptions about the message,",
    "start": "273183",
    "end": "275760"
  },
  {
    "text": "the subject and the message attributes.",
    "start": "275760",
    "end": "278100"
  },
  {
    "text": "The assumptions look good,",
    "start": "278100",
    "end": "279180"
  },
  {
    "text": "so we'll accept this suggestion.",
    "start": "279180",
    "end": "280833"
  },
  {
    "text": "Finally, let's add code to\ndelete the message from SQS",
    "start": "282300",
    "end": "285030"
  },
  {
    "text": "so we don't process it twice.",
    "start": "285030",
    "end": "286653"
  },
  {
    "text": "We'll call delete message",
    "start": "294499",
    "end": "295560"
  },
  {
    "text": "and pass the appropriate parameters.",
    "start": "295560",
    "end": "297360"
  },
  {
    "text": "The second Lambda\nfunction is now complete.",
    "start": "298410",
    "end": "300560"
  },
  {
    "start": "302000",
    "end": "430000"
  },
  {
    "text": "Now we'll implement a\nthird Lambda function.",
    "start": "303180",
    "end": "305460"
  },
  {
    "text": "This function will read the object",
    "start": "305460",
    "end": "306810"
  },
  {
    "text": "from the Amazon SQS\nqueue that was published",
    "start": "306810",
    "end": "308940"
  },
  {
    "text": "by the previous Lambda function.",
    "start": "308940",
    "end": "310980"
  },
  {
    "text": "It will then convert the\nmessage from JSON to XML,",
    "start": "310980",
    "end": "313590"
  },
  {
    "text": "and send the message to\nan external email server.",
    "start": "313590",
    "end": "316040"
  },
  {
    "text": "Let's start by entering\nreceive message from SQS.",
    "start": "318270",
    "end": "321003"
  },
  {
    "text": "We'll accept CodeWhisperer's suggestions.",
    "start": "322950",
    "end": "325143"
  },
  {
    "text": "Next, let's create a\nvariable called SQS QueueURL",
    "start": "326310",
    "end": "329760"
  },
  {
    "text": "and assign a value to it.",
    "start": "329760",
    "end": "331023"
  },
  {
    "text": "Let's also create a variable\ncalled processed image",
    "start": "331920",
    "end": "334380"
  },
  {
    "text": "and set it to our receive message method,",
    "start": "334380",
    "end": "336570"
  },
  {
    "text": "passing the SQS QueueURL\nvariable as a parameter.",
    "start": "336570",
    "end": "339693"
  },
  {
    "text": "When we press enter,",
    "start": "340950",
    "end": "342000"
  },
  {
    "text": "CodeWhisperer guesses\nwhat we wanna do next.",
    "start": "342000",
    "end": "344550"
  },
  {
    "text": "In this case, it's exactly right.",
    "start": "344550",
    "end": "346440"
  },
  {
    "text": "We want to convert JSON to XML.",
    "start": "346440",
    "end": "348633"
  },
  {
    "text": "Let's set up the method.",
    "start": "350730",
    "end": "351930"
  },
  {
    "text": "We'll continue through\nCodeWhisperer's suggestions",
    "start": "361380",
    "end": "363390"
  },
  {
    "text": "until we find a method we like.",
    "start": "363390",
    "end": "364940"
  },
  {
    "text": "Now we need to send the XML message",
    "start": "370020",
    "end": "371699"
  },
  {
    "text": "to our email server using HTTP post.",
    "start": "371700",
    "end": "374612"
  },
  {
    "text": "Again, CodeWhisperer\nguesses what we want to do.",
    "start": "374612",
    "end": "378063"
  },
  {
    "text": "Instead of accepting\nCodeWhisperer's suggestion,",
    "start": "379830",
    "end": "382169"
  },
  {
    "text": "we'll enter send XML object with HTTP post",
    "start": "382170",
    "end": "385140"
  },
  {
    "text": "to define the method first.",
    "start": "385140",
    "end": "386583"
  },
  {
    "text": "Now, let's call the method",
    "start": "400710",
    "end": "401699"
  },
  {
    "text": "and pass it the appropriate parameters.",
    "start": "401700",
    "end": "403650"
  },
  {
    "text": "Next, we'll define a method to\ndelete the message from SQS.",
    "start": "411120",
    "end": "414212"
  },
  {
    "text": "Finally, let's call the method.",
    "start": "420570",
    "end": "422120"
  },
  {
    "start": "430000",
    "end": "526000"
  },
  {
    "text": "Now we'll implement our\nfourth Lambda function.",
    "start": "430560",
    "end": "432930"
  },
  {
    "text": "This function reads all the items",
    "start": "432930",
    "end": "434310"
  },
  {
    "text": "from the DynamoDB table and\nreturns them as JSON objects.",
    "start": "434310",
    "end": "437553"
  },
  {
    "text": "Let's open the Lambda function.",
    "start": "439860",
    "end": "441990"
  },
  {
    "text": "Currently, all this function does",
    "start": "441990",
    "end": "443310"
  },
  {
    "text": "is scan items from DynamoDB.",
    "start": "443310",
    "end": "445740"
  },
  {
    "text": "We'll enter list all items\nfrom a DynamoDB table",
    "start": "445740",
    "end": "449310"
  },
  {
    "text": "to get suggestions from CodeWhisperer.",
    "start": "449310",
    "end": "451210"
  },
  {
    "text": "Let's choose the name scan table.",
    "start": "454290",
    "end": "456093"
  },
  {
    "text": "This method includes\nall the items we want.",
    "start": "457260",
    "end": "459410"
  },
  {
    "text": "We can return the items by\nsimply calling the method",
    "start": "460650",
    "end": "462840"
  },
  {
    "text": "and passing the table as a parameter.",
    "start": "462840",
    "end": "464690"
  },
  {
    "text": "Based on our comments written\nin plain natural language,",
    "start": "466410",
    "end": "469260"
  },
  {
    "text": "CodeWhisperer generated code",
    "start": "469260",
    "end": "470760"
  },
  {
    "text": "that matches our patterns and style,",
    "start": "470760",
    "end": "472500"
  },
  {
    "text": "without requiring us to spend\ntime researching methods.",
    "start": "472500",
    "end": "475263"
  },
  {
    "text": "Now, let's test this application",
    "start": "477788",
    "end": "479970"
  },
  {
    "text": "with this image of a pug\nto see what it recognizes.",
    "start": "479970",
    "end": "482520"
  },
  {
    "text": "We'll invoke the endpoint\nthat we just deployed,",
    "start": "484980",
    "end": "486930"
  },
  {
    "text": "and then pass the URL for the image.",
    "start": "486930",
    "end": "488793"
  },
  {
    "text": "The image uploaded successfully.",
    "start": "489900",
    "end": "491522"
  },
  {
    "text": "Now we'll invoke the\nsecond API gateway endpoint",
    "start": "492711",
    "end": "495720"
  },
  {
    "text": "to see the results.",
    "start": "495720",
    "end": "496713"
  },
  {
    "text": "The application labeled\nour pug image tiger,",
    "start": "498030",
    "end": "500460"
  },
  {
    "text": "wildlife, animal, mammal,\ncanine, pet, dog and so on.",
    "start": "500460",
    "end": "505050"
  },
  {
    "text": "Proving that our application\nwith the code generated",
    "start": "505050",
    "end": "507180"
  },
  {
    "text": "by CodeWhisperer is up and running.",
    "start": "507180",
    "end": "508930"
  },
  {
    "text": "You've just seen how to build a Python",
    "start": "511860",
    "end": "513419"
  },
  {
    "text": "event-driven serverless app\nwith Amazon CodeWhisperer.",
    "start": "513420",
    "end": "516273"
  },
  {
    "text": "You can learn more about this topic",
    "start": "517273",
    "end": "519120"
  },
  {
    "text": "and sign up for the CodeWhisperer preview",
    "start": "519120",
    "end": "520890"
  },
  {
    "text": "in the description and\nlinks for this video.",
    "start": "520890",
    "end": "522990"
  },
  {
    "text": "Thanks for watching, now\nit's your turn to try.",
    "start": "522990",
    "end": "525339"
  }
]