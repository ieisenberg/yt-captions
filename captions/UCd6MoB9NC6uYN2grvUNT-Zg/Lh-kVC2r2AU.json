[
  {
    "text": "everybody thank you for coming to dev 372 infrastructure is code with the AWS",
    "start": "439",
    "end": "5700"
  },
  {
    "text": "cloud development kit my name is Jason Fulgham I'm a dev manager for the AWS cdk project and we also have a lot",
    "start": "5700",
    "end": "12630"
  },
  {
    "text": "ben-israel here with us today Allods our principal engineer for the cdk so in the",
    "start": "12630",
    "end": "18390"
  },
  {
    "text": "next hour a lot and I are gonna take you on a tour of the cdk and show you this new software development framework for",
    "start": "18390",
    "end": "23939"
  },
  {
    "text": "defining your cloud infrastructure as code our session is going to be split up",
    "start": "23939",
    "end": "29369"
  },
  {
    "text": "into four parts today we're gonna start by giving a little bit of context and talk about our journey through infrastructure management talk about",
    "start": "29369",
    "end": "36059"
  },
  {
    "text": "some of the challenges that developers face and some of the best practices that have emerged then we're going to quickly",
    "start": "36059",
    "end": "41820"
  },
  {
    "text": "give you an overview of some of the main core concepts you need to know to work with the cdk and we're really gonna",
    "start": "41820",
    "end": "47370"
  },
  {
    "text": "spend the bulk of our time in this session and demos so we've got a pretty fun little demo application we're gonna",
    "start": "47370",
    "end": "53550"
  },
  {
    "text": "build from scratch using the cdk and we're gonna see how the cdk really changes the developer experience around",
    "start": "53550",
    "end": "60539"
  },
  {
    "text": "defining your infrastructure and finally we'll wrap up with some recommendations on where to go to learn more about the",
    "start": "60539",
    "end": "66420"
  },
  {
    "text": "CDK so I'll turn things over to a lot to talk about infrastructure management",
    "start": "66420",
    "end": "71900"
  },
  {
    "text": "Thanks hey guys welcome thanks for",
    "start": "71900",
    "end": "78630"
  },
  {
    "text": "coming we're pretty excited to be here and talk to you a little bit about this",
    "start": "78630",
    "end": "84840"
  },
  {
    "text": "project we've been working on before we get into coding which is basically what",
    "start": "84840",
    "end": "90060"
  },
  {
    "text": "this thing is about let me tell you a little bit about my journey around",
    "start": "90060",
    "end": "95100"
  },
  {
    "text": "infrastructure management so I used to work for amazon.com before joining AWS the retail website",
    "start": "95100",
    "end": "102060"
  },
  {
    "text": "and as you know Amazon is an AWS customer and we use AWS like anyone else",
    "start": "102060",
    "end": "108329"
  },
  {
    "text": "and my team initially had a pretty simple service we had a bunch of ec2 instances consuming messages from an sqs",
    "start": "108329",
    "end": "116520"
  },
  {
    "text": "queue it's a pretty classic architecture for an fern for a retail team it's it's",
    "start": "116520",
    "end": "122130"
  },
  {
    "text": "quite scalable it can handle a lot and the way we manage our infrastructure was",
    "start": "122130",
    "end": "127770"
  },
  {
    "text": "basically go to the ADA base console log in and we had a pretty pleasant experience you",
    "start": "127770",
    "end": "133730"
  },
  {
    "text": "know click through some buttons and change some knobs and provision or queues in our fleet and whenever we",
    "start": "133730",
    "end": "140480"
  },
  {
    "text": "needed to create another environment we had a little document and you know people followed that little document and",
    "start": "140480",
    "end": "147140"
  },
  {
    "text": "created these as a couple of resources and that model sustained quite well for quite a long time but then two things",
    "start": "147140",
    "end": "154790"
  },
  {
    "text": "happened well gradually two things happen one is we needed to provision",
    "start": "154790",
    "end": "160340"
  },
  {
    "text": "more and more environments I'm sure many of you run into this you expand to a new",
    "start": "160340",
    "end": "165680"
  },
  {
    "text": "region you need test environments integration environments development",
    "start": "165680",
    "end": "171200"
  },
  {
    "text": "environments and so many people needed to create these these resources the",
    "start": "171200",
    "end": "176420"
  },
  {
    "text": "other thing that happened is that there were new services coming in and we",
    "start": "176420",
    "end": "182990"
  },
  {
    "text": "wanted to leverage them DynamoDB came out Kinesis came out our surface became",
    "start": "182990",
    "end": "188000"
  },
  {
    "text": "more and more complex and relied more and more on those resources and our little document became a big document",
    "start": "188000",
    "end": "194120"
  },
  {
    "text": "and people started making mistakes and it took a long time more than we wanted",
    "start": "194120",
    "end": "201019"
  },
  {
    "text": "and so obviously as a coder I was like let's find a way to you know codify this",
    "start": "201019",
    "end": "206870"
  },
  {
    "text": "problem and and automated and so I ran over and picked up the Ruby SDK which is",
    "start": "206870",
    "end": "214130"
  },
  {
    "text": "really awesome and started writing a little ruby program to provision my",
    "start": "214130",
    "end": "220610"
  },
  {
    "text": "resources and that turned to be pretty useful like we could literally throw away this this document and now",
    "start": "220610",
    "end": "228340"
  },
  {
    "text": "everybody that needed a new environment just ran this program and voila you got yourself a stack deployed so that was a",
    "start": "228340",
    "end": "236630"
  },
  {
    "text": "huge improvement and it worked really well until we actually wanted to change",
    "start": "236630",
    "end": "242180"
  },
  {
    "text": "things right and so when you want to change things you can just create those resources you actually need to update",
    "start": "242180",
    "end": "247910"
  },
  {
    "text": "them and I find myself dealing more and more with that aspect of how to",
    "start": "247910",
    "end": "254690"
  },
  {
    "text": "provision my infrastructure right because some people had environments in different stages so this code that needed to take into",
    "start": "254690",
    "end": "261079"
  },
  {
    "text": "account the current state and figure out what's the next state how to update what happens if it doesn't work how do you",
    "start": "261079",
    "end": "267320"
  },
  {
    "text": "roll back you know it's all kind of okay for development and testing but when it comes to production it becomes not kind",
    "start": "267320",
    "end": "274699"
  },
  {
    "text": "of okay to miss things like that and so at some point we realize this model",
    "start": "274699",
    "end": "279800"
  },
  {
    "text": "doesn't sustain anymore and we found out about provisioning engines which I'm",
    "start": "279800",
    "end": "286340"
  },
  {
    "text": "sure most of you are familiar with research provisioning engines are very powerful tools that let you think about",
    "start": "286340",
    "end": "294289"
  },
  {
    "text": "your infrastructure a little differently instead of thinking about what set of operations I need to issue against the",
    "start": "294289",
    "end": "300199"
  },
  {
    "text": "the surface in order to provision my resource I can think about which what is",
    "start": "300199",
    "end": "305360"
  },
  {
    "text": "my desired State I define my desires say using a configuration file CloudFormation which is the provisioning",
    "start": "305360",
    "end": "312110"
  },
  {
    "text": "engine for eight of the u.s. uses a file called AWS CloudFormation templates terraform is a very popular provisioning",
    "start": "312110",
    "end": "319340"
  },
  {
    "text": "engine used in by a DBS customers and they use HCl as a configuration file",
    "start": "319340",
    "end": "324500"
  },
  {
    "text": "format but essentially they work the same way you hand them over this desire safe configuration file and they look at",
    "start": "324500",
    "end": "332300"
  },
  {
    "text": "your stack and determine what are the steps that I that need to be executed in",
    "start": "332300",
    "end": "337310"
  },
  {
    "text": "order to reach that desired state which is exactly the problem that I was trying to solve at that time and it's it's it's",
    "start": "337310",
    "end": "344570"
  },
  {
    "text": "pretty magical right like you really think declaratively about where you want to be and all the heavy lifting is it",
    "start": "344570",
    "end": "353030"
  },
  {
    "text": "happens in the provisioning engine rollbacks updates it's really cool however at some",
    "start": "353030",
    "end": "361370"
  },
  {
    "text": "point I find myself spending full days of copying and pasting llam√≥ files and",
    "start": "361370",
    "end": "368930"
  },
  {
    "text": "that didn't feel right like it didn't feel like what I need to do in order to you know create like reusable things or",
    "start": "368930",
    "end": "375410"
  },
  {
    "text": "create multiple instances of something and and I needed a better solution and",
    "start": "375410",
    "end": "381830"
  },
  {
    "text": "and my intuition was that this file is not something that humans need to write like it's basically a big list of",
    "start": "381830",
    "end": "389270"
  },
  {
    "text": "resources and prop it felt like an assembly language more than a more than actual programming",
    "start": "389270",
    "end": "395719"
  },
  {
    "text": "language and so obviously I went over to",
    "start": "395719",
    "end": "400789"
  },
  {
    "text": "the internet and found these really awesome community-driven projects that allow you to generate CloudFormation",
    "start": "400789",
    "end": "406129"
  },
  {
    "text": "templates it's a pretty natural thing to do right like when you have a big big",
    "start": "406129",
    "end": "413059"
  },
  {
    "text": "configuration file and there are a couple really awesome projects a few really awesome projects troposphere is",
    "start": "413059",
    "end": "419509"
  },
  {
    "text": "probably one of the most popular ones it's in Python it has this really nice class library that allows you to",
    "start": "419509",
    "end": "426639"
  },
  {
    "text": "basically interact but not interact but like produce at CloudFormation template through code and so back to code and",
    "start": "426639",
    "end": "434599"
  },
  {
    "text": "that's where I'm feel comfortable at least and I can define my infrastructure",
    "start": "434599",
    "end": "440359"
  },
  {
    "text": "logic again I can create for loops and if statements and basically create a",
    "start": "440359",
    "end": "445819"
  },
  {
    "text": "mental model of what I'm trying to do instead of actually you know copying and pasting JSON files we still using the",
    "start": "445819",
    "end": "452509"
  },
  {
    "text": "desired state model we're still defining what we want and not how to get there",
    "start": "452509",
    "end": "458149"
  },
  {
    "text": "but what happened is it instead of copying and pasting Jason and yeah no I",
    "start": "458149",
    "end": "465409"
  },
  {
    "text": "find myself caught I found myself copying and pasting Python code we had other people in our group that started",
    "start": "465409",
    "end": "472219"
  },
  {
    "text": "using Pro totus fear and they had similar you know they're similar infrastructure that they needed to provision and it was really hard for us",
    "start": "472219",
    "end": "478610"
  },
  {
    "text": "to actually share that stuff we couldn't the the thing was that we that the",
    "start": "478610",
    "end": "484729"
  },
  {
    "text": "framework itself didn't have an intrinsic capability to create abstractions and to me this is what",
    "start": "484729",
    "end": "491269"
  },
  {
    "text": "software is about it's about creating abstractions and not being able to create these abstractions was the main",
    "start": "491269",
    "end": "497359"
  },
  {
    "text": "motivation for us to start talking and thinking about the CDK and that's when I moved over to AWS to work with Jason and",
    "start": "497359",
    "end": "504619"
  },
  {
    "text": "this really great team because I thought it was a problem worth solving so let me",
    "start": "504619",
    "end": "510439"
  },
  {
    "text": "hand it over to Jason he's gonna tell you a little bit what we came up with and where we are so this is such a",
    "start": "510439",
    "end": "517370"
  },
  {
    "text": "typical story that we've heard from so many of our customers we've experienced it ourselves as developers I think the",
    "start": "517370",
    "end": "523279"
  },
  {
    "text": "the it is really that we have this wealth of cloud services we have hundreds of these",
    "start": "523279",
    "end": "528510"
  },
  {
    "text": "different cloud services we can take advantage of and our applications are using more and more of them and the",
    "start": "528510",
    "end": "533640"
  },
  {
    "text": "configuration for these cloud resources begins to come become more and more complex and so developers really need",
    "start": "533640",
    "end": "539610"
  },
  {
    "text": "more powerful tools for managing that complexity and we really really need powerful tools that let us take these",
    "start": "539610",
    "end": "545339"
  },
  {
    "text": "patterns and naturally emerge as we put all these cloud resources together and turn them into these reusable shareable",
    "start": "545339",
    "end": "551399"
  },
  {
    "text": "abstractions so that is exactly why we started building the AWS cdk I'm gonna",
    "start": "551399",
    "end": "557220"
  },
  {
    "text": "tell you a little bit about some of the main concepts in the CD Kay and then we're gonna get into some code so the CD",
    "start": "557220",
    "end": "563850"
  },
  {
    "text": "K is a software development framework for defining your infrastructure and your cloud resources so that code we",
    "start": "563850",
    "end": "570839"
  },
  {
    "text": "call your CD Kay application we'll see that in just a minute within your CD Kay application you define all the",
    "start": "570839",
    "end": "576810"
  },
  {
    "text": "infrastructure stacks that you need in your system so that could be one infrastructure stack it could be dozens of infrastructure stacks across multiple",
    "start": "576810",
    "end": "583649"
  },
  {
    "text": "regions within each of those infrastructure stacks you define what we call a tree of constructs and construct",
    "start": "583649",
    "end": "591510"
  },
  {
    "text": "is really the key abstraction it's really the core of the cdk programming model as we'll see throughout this",
    "start": "591510",
    "end": "597360"
  },
  {
    "text": "session and at a high level a construct is really some configuration of cloud",
    "start": "597360",
    "end": "603870"
  },
  {
    "text": "resources so it could be a bucket or it could be one cloud resource or it could",
    "start": "603870",
    "end": "609019"
  },
  {
    "text": "it could encompass dozens and dozens of cloud resources so just like we saw",
    "start": "609019",
    "end": "614610"
  },
  {
    "text": "before with troposphere we're still building on a software development framework we're getting all the goodness of using our programming tools we've got",
    "start": "614610",
    "end": "622470"
  },
  {
    "text": "in our IDE s we're factoring tools navigation tools inline documentation",
    "start": "622470",
    "end": "627649"
  },
  {
    "text": "content assist so we've got this really rich environment for building this code just like any other code we're still",
    "start": "627649",
    "end": "633600"
  },
  {
    "text": "building on cloud formation so we've got this powerful provisioning engine underneath and we're working with this",
    "start": "633600",
    "end": "638760"
  },
  {
    "text": "model of desired state configuration we describe the outcome and code that we",
    "start": "638760",
    "end": "644100"
  },
  {
    "text": "want our infrastructure to be and we rely on the provisioning engine to actually make that happen and get us",
    "start": "644100",
    "end": "649440"
  },
  {
    "text": "there so the we talked a little bit about the programming model and that's",
    "start": "649440",
    "end": "655199"
  },
  {
    "text": "really what makes a CD case so powerful is this ability to share and create these abstractions and the cdk is",
    "start": "655199",
    "end": "662510"
  },
  {
    "text": "really built from the ground up around that concept but in addition to the programming model we also ship the AWS",
    "start": "662510",
    "end": "668660"
  },
  {
    "text": "construct library with a cdk so the ad based construct library is a set of constructs specifically curated for",
    "start": "668660",
    "end": "675950"
  },
  {
    "text": "making AWS infrastructure really easy to define and we're going to be using the construct library throughout the demos",
    "start": "675950",
    "end": "683029"
  },
  {
    "text": "so you'll be able to see what kind of support is in there and the construct",
    "start": "683029",
    "end": "688279"
  },
  {
    "text": "library really gives us a lot of flexibility to easily define our infrastructure so setting up permissions",
    "start": "688279",
    "end": "694970"
  },
  {
    "text": "for different resources configuring event sources and much much more and finally the cdk is very new project",
    "start": "694970",
    "end": "703430"
  },
  {
    "text": "we're in Developer Preview we launched earlier this summer you can find all the source code out on github of course it's",
    "start": "703430",
    "end": "709339"
  },
  {
    "text": "fantastic time to get engaged early in the project we think it has a lot of potential to really change how",
    "start": "709339",
    "end": "714440"
  },
  {
    "text": "developers define their infrastructure so we'd love to see engagement from the community of course so I turn things",
    "start": "714440",
    "end": "722630"
  },
  {
    "text": "over to a lot and we're gonna get into some code ok so hello world right we got",
    "start": "722630",
    "end": "734600"
  },
  {
    "text": "to start with that that's what we came up with it's a cue you send a message to the Q lambda",
    "start": "734600",
    "end": "741890"
  },
  {
    "text": "function consumes the message from the Q and writes the contents of the event to clog watch logs pretty simple",
    "start": "741890",
    "end": "749029"
  },
  {
    "text": "architecture we're going to talk a little bit about cdk stack say decay",
    "start": "749029",
    "end": "754820"
  },
  {
    "text": "applications cdk constructs the concepts that make up the CDKs model will show",
    "start": "754820",
    "end": "762920"
  },
  {
    "text": "you the command-line interface called cdk toolkit and that command-line",
    "start": "762920",
    "end": "768290"
  },
  {
    "text": "interface allows you to interact with cdk applications and walks you through the workflow of working with these data",
    "start": "768290",
    "end": "774649"
  },
  {
    "text": "Kay applications and will obviously work with the IDs contract library because we need to provision those resources",
    "start": "774649",
    "end": "781000"
  },
  {
    "text": "without further ado let's open our terminal here",
    "start": "781000",
    "end": "787290"
  },
  {
    "text": "okay starting by creating a new",
    "start": "787290",
    "end": "793650"
  },
  {
    "text": "directory and we're gonna initialize the project using a command called cdk in it",
    "start": "793650",
    "end": "801830"
  },
  {
    "text": "it's basically a little templating engine that allows you to bootstrap you",
    "start": "801830",
    "end": "807960"
  },
  {
    "text": "know cdk projects it's important to emphasize that those projects are just regular idiomatic projects and every",
    "start": "807960",
    "end": "814530"
  },
  {
    "text": "like in like you do in every programming language we've got current as jason said we've",
    "start": "814530",
    "end": "819690"
  },
  {
    "text": "got current support for typescript javascript dotnet java python is coming",
    "start": "819690",
    "end": "826740"
  },
  {
    "text": "up and we plan to add more languages in the future so let me just kick that off",
    "start": "826740",
    "end": "832860"
  },
  {
    "text": "quickly with a typescript project and we're gonna use typescript for this demo",
    "start": "832860",
    "end": "838470"
  },
  {
    "text": "but you can create the exact same demo and the exact same application and one",
    "start": "838470",
    "end": "843480"
  },
  {
    "text": "in each one of those programming languages okay so we've got our new project directory here and it comes",
    "start": "843480",
    "end": "851880"
  },
  {
    "text": "bundled with a bunch of useful commands if you're familiar with typescript you'll know that we need to compile",
    "start": "851880",
    "end": "857940"
  },
  {
    "text": "types we've to JavaScript in order for to execute it and so we're gonna run the",
    "start": "857940",
    "end": "863310"
  },
  {
    "text": "watch command which basically looks at",
    "start": "863310",
    "end": "868320"
  },
  {
    "text": "files in the background and compiles Emma just open a new table tab and I'm",
    "start": "868320",
    "end": "873690"
  },
  {
    "text": "just gonna run the watch command here in the background so I don't have to think about compiling the code all the time",
    "start": "873690",
    "end": "880020"
  },
  {
    "text": "okay back to our original tab and I'm gonna kick off our ID we're gonna use vs",
    "start": "880020",
    "end": "887610"
  },
  {
    "text": "code which is a really really awesome ID for typescript but naturally you can use",
    "start": "887610",
    "end": "892650"
  },
  {
    "text": "any IDE that that works for you which is one of our one of our main goals to",
    "start": "892650",
    "end": "898440"
  },
  {
    "text": "basically bring infrastructure code to your comfort comfort zone if you're",
    "start": "898440",
    "end": "904410"
  },
  {
    "text": "using Java as you run your develop your your you know your programming language and your team you'd be able to use Java",
    "start": "904410",
    "end": "910260"
  },
  {
    "text": "to provision your infrastructure if you use typescript you can use typescript and our goal is to actually get to a",
    "start": "910260",
    "end": "915600"
  },
  {
    "text": "point where we have as many programming languages supported so that you can stay in the same environment and",
    "start": "915600",
    "end": "921569"
  },
  {
    "text": "use the same tools that you're using daily for your infrastructure okay let's",
    "start": "921569",
    "end": "926699"
  },
  {
    "text": "see what we have here so it's a it's a it's a regular typescript project",
    "start": "926699",
    "end": "933480"
  },
  {
    "text": "I've got pack adjacent file with some dependencies ts config for configuration",
    "start": "933480",
    "end": "940709"
  },
  {
    "text": "and this is the entry point that the CD can get created for us and it comes with",
    "start": "940709",
    "end": "949649"
  },
  {
    "text": "this boilerplate example I'm just gonna delete that for now because we want to",
    "start": "949649",
    "end": "955019"
  },
  {
    "text": "create our own little one and is that big enough yeah and so this is this is an empty CD",
    "start": "955019",
    "end": "962249"
  },
  {
    "text": "K application you can see the application here you can see that it contains a single stack as jason said",
    "start": "962249",
    "end": "969360"
  },
  {
    "text": "you can create applications with multiple stacks and reference resources across them and they're really crazy",
    "start": "969360",
    "end": "975689"
  },
  {
    "text": "architectures with this model and we've got the hello CD k stack which extends CD k dot stack and it's an empty stack",
    "start": "975689",
    "end": "984079"
  },
  {
    "text": "to prove it to you I'm gonna use this command called CD case synth for",
    "start": "984079",
    "end": "990299"
  },
  {
    "text": "synthesis synthesized and what siddik a synth is doing is takes your app and",
    "start": "990299",
    "end": "996709"
  },
  {
    "text": "synthesizes the CloudFormation template form from your application and so",
    "start": "996709",
    "end": "1002439"
  },
  {
    "text": "naturally because this stack is empty I'm gonna get an empty template from it okay so first thing we want to do is we",
    "start": "1002439",
    "end": "1010009"
  },
  {
    "text": "want to define a queue right let me switch over to to our browser and this",
    "start": "1010009",
    "end": "1017389"
  },
  {
    "text": "is our documentation website you've got you've got lots of information here",
    "start": "1017389",
    "end": "1023419"
  },
  {
    "text": "we're actually trying to figure out the right organization that would make it really easy to find ourself but there's",
    "start": "1023419",
    "end": "1029899"
  },
  {
    "text": "a lot of information about concepts the construct library patterns how to use",
    "start": "1029899",
    "end": "1036260"
  },
  {
    "text": "CloudFormation the low-level CloudFormation components and there's",
    "start": "1036260",
    "end": "1041659"
  },
  {
    "text": "obviously reference for all the constructs in the construct library and so if I want to use the find es qsq for",
    "start": "1041659",
    "end": "1048830"
  },
  {
    "text": "example there is the AWS sqs construct library",
    "start": "1048830",
    "end": "1054200"
  },
  {
    "text": "so every eight of your service would have a contract library in this in this library and it's it's still not",
    "start": "1054200",
    "end": "1060770"
  },
  {
    "text": "complete you'll find many gaps if you if you hit this now and we're working on",
    "start": "1060770",
    "end": "1066110"
  },
  {
    "text": "making it complete and make it as awesome as we can but it's it's pretty",
    "start": "1066110",
    "end": "1071840"
  },
  {
    "text": "extensive and Jason's gonna talk a little bit about things he can find there already there's really awesome",
    "start": "1071840",
    "end": "1076930"
  },
  {
    "text": "programming models there already ok so we want to install this library it's it's just a regular library so it",
    "start": "1076930",
    "end": "1083000"
  },
  {
    "text": "would be a regular library maven or a nougat or in pi PI or an NPM for our",
    "start": "1083000",
    "end": "1089090"
  },
  {
    "text": "example and so I'm just gonna go back to our console and I'm just gonna install that library so npm install AWS cdk AWS",
    "start": "1089090",
    "end": "1099850"
  },
  {
    "text": "excuse right and now that I have my",
    "start": "1099850",
    "end": "1105380"
  },
  {
    "text": "library installed I can import the sqs module into my code and let's explore",
    "start": "1105380",
    "end": "1116180"
  },
  {
    "text": "that just a little bit so I want to create a queue that I'm doing a new dot",
    "start": "1116180",
    "end": "1123080"
  },
  {
    "text": "and you can see that this yes the library has a queue construct a queue",
    "start": "1123080",
    "end": "1128120"
  },
  {
    "text": "class basically and when trying to create it I can see that this class",
    "start": "1128120",
    "end": "1134780"
  },
  {
    "text": "accepts three parameters parent name we sometimes call that ID and properties",
    "start": "1134780",
    "end": "1141700"
  },
  {
    "text": "this pattern is going to be repeated everywhere in the cdk because that's the",
    "start": "1141700",
    "end": "1147110"
  },
  {
    "text": "pattern of creating constructs you can even see that my stack has these three parameters because a stack is also a",
    "start": "1147110",
    "end": "1152660"
  },
  {
    "text": "construct these three parameters allow the cdk to basically bind your construct",
    "start": "1152660",
    "end": "1158780"
  },
  {
    "text": "to what we call the construct tree you build this tree top down so basically",
    "start": "1158780",
    "end": "1164540"
  },
  {
    "text": "start with the application then you go to the stack and then you basically end up with like the leaves which are the",
    "start": "1164540",
    "end": "1169970"
  },
  {
    "text": "resources and and so the first parameter is a parent and almost every time you",
    "start": "1169970",
    "end": "1176390"
  },
  {
    "text": "would just want to say this because you you're creating this contract in the context of this Const",
    "start": "1176390",
    "end": "1182240"
  },
  {
    "text": "to the construct the parent contract in our cases the class is this stack second parameter is the name and that names",
    "start": "1182240",
    "end": "1189260"
  },
  {
    "text": "maps to the cloud formation logical idea of the resources created underneath that",
    "start": "1189260",
    "end": "1194750"
  },
  {
    "text": "tree and it's a local name it's not a global name like logical identities but",
    "start": "1194750",
    "end": "1200210"
  },
  {
    "text": "it has the same purpose the purpose is to be able to identify this resource across updates of your stack and so I'm",
    "start": "1200210",
    "end": "1207140"
  },
  {
    "text": "just going to give this a name it's not the cue name it's not the physical name of the resource that's actually allocated by CloudFormation when you're",
    "start": "1207140",
    "end": "1214130"
  },
  {
    "text": "deploying the stack so let's call that hello cue and we've got an option an",
    "start": "1214130",
    "end": "1221360"
  },
  {
    "text": "optional property bag here that we can pass we're not gonna use any any of those but I just wanted to show you you",
    "start": "1221360",
    "end": "1228350"
  },
  {
    "text": "can see all the inline documentation and information about how to use these these",
    "start": "1228350",
    "end": "1234080"
  },
  {
    "text": "properties and they're all strongly typed and all those good things that you get from codes from object oriented",
    "start": "1234080",
    "end": "1241970"
  },
  {
    "text": "class libraries ok so I'm just I'm just gonna create a default queue and and to",
    "start": "1241970",
    "end": "1247190"
  },
  {
    "text": "be honest one of the things we're trying to do is to make sure that you're not gonna need to specify anything that doesn't make sense that you would need",
    "start": "1247190",
    "end": "1253640"
  },
  {
    "text": "to specify like smart defaults we call it and we can we go a long way to make",
    "start": "1253640",
    "end": "1260330"
  },
  {
    "text": "sure that you know you get the most concise and efficient and safe development experience when you use the",
    "start": "1260330",
    "end": "1268190"
  },
  {
    "text": "construct library ok so I've created the queue let's call CD case synth again I'm gonna go back to my terminal and see what happens neat so",
    "start": "1268190",
    "end": "1279020"
  },
  {
    "text": "this is a CloudFormation template if fully legal CloudFormation template as a single resource of type sqs queue you",
    "start": "1279020",
    "end": "1285770"
  },
  {
    "text": "can see the CD Celso embeds this metadata entry that allows you to map the path of the resource in the path of",
    "start": "1285770",
    "end": "1292220"
  },
  {
    "text": "the construct in your constructor e to the actual CloudFormation resource so we can you know the back-trace really easy",
    "start": "1292220",
    "end": "1299120"
  },
  {
    "text": "to find it project there are any problems and and yeah I've got my little cue let's just",
    "start": "1299120",
    "end": "1306080"
  },
  {
    "text": "deploy this first and then we'll add the lambda function so I'm going to use cdk deploy to deploy this and it's going to",
    "start": "1306080",
    "end": "1313800"
  },
  {
    "text": "synthesize my templates behind the scenes and basically kick off a CloudFormation deployment for this so",
    "start": "1313800",
    "end": "1319050"
  },
  {
    "text": "you've seen this many times I'm sure and in the meantime let's bring in the",
    "start": "1319050",
    "end": "1324210"
  },
  {
    "text": "lambda library so I'm gonna oh it's already done so before we bring in the lambda library let let me quickly do oh",
    "start": "1324210",
    "end": "1331140"
  },
  {
    "text": "sorry let me quickly check that I actually have a queue here I'm just gonna use",
    "start": "1331140",
    "end": "1336960"
  },
  {
    "text": "this CLI cool so we've got this cube provision for us now bringing in the",
    "start": "1336960",
    "end": "1343020"
  },
  {
    "text": "lambda library and I'm also gonna bring another library I'll call lambda event sources which gives you some nice api's",
    "start": "1343020",
    "end": "1350460"
  },
  {
    "text": "to bind lambda to different event sources I don't know if you're familiar with the CloudFormation experience",
    "start": "1350460",
    "end": "1356370"
  },
  {
    "text": "around that but every event source in lambda it's kind of like Sam right like where",
    "start": "1356370",
    "end": "1362430"
  },
  {
    "text": "all the event sources that have the same semi same API okay lambda sorry I'm like",
    "start": "1362430",
    "end": "1373100"
  },
  {
    "text": "lambda event sources and okay same drill",
    "start": "1373910",
    "end": "1383160"
  },
  {
    "text": "bring in the lambda module",
    "start": "1383160",
    "end": "1387650"
  },
  {
    "text": "and I'm gonna bring in the event sources module two they're gonna use it real",
    "start": "1391429",
    "end": "1397249"
  },
  {
    "text": "real soon cool and now same thing we did with the",
    "start": "1397249",
    "end": "1405289"
  },
  {
    "text": "queue right like we're gonna create a lambda function cool three three",
    "start": "1405289",
    "end": "1414200"
  },
  {
    "text": "arguments for the constructor this and",
    "start": "1414200",
    "end": "1421659"
  },
  {
    "text": "Landa actually has a few required properties like your code right and so",
    "start": "1421659",
    "end": "1427969"
  },
  {
    "text": "the ID even tells us it needs to know some stuff right you can see the ones",
    "start": "1427969",
    "end": "1433429"
  },
  {
    "text": "that have question marks are optional the others are required so we've got code here as required we've got handler",
    "start": "1433429",
    "end": "1439549"
  },
  {
    "text": "we've got runtime and I think that's it like that's that's the minimum requirement for lambda functions and so",
    "start": "1439549",
    "end": "1445849"
  },
  {
    "text": "let's start with the runtime will write will write a will will write our code in",
    "start": "1445849",
    "end": "1451989"
  },
  {
    "text": "JavaScript so we're just gonna use node and now for our code so if you're",
    "start": "1451989",
    "end": "1458899"
  },
  {
    "text": "familiar with cloud formation and Confirmation doesn't deal with the runtime code it's basically just your",
    "start": "1458899",
    "end": "1464269"
  },
  {
    "text": "infrastructure but with the cdk we believe that we wanted to create an",
    "start": "1464269",
    "end": "1469909"
  },
  {
    "text": "experience where you can create constructs that are self-contained right the runtime code and infrastructure code",
    "start": "1469909",
    "end": "1474919"
  },
  {
    "text": "can be bundled together in two libraries that people can reuse and so we have",
    "start": "1474919",
    "end": "1479960"
  },
  {
    "text": "this concept in the cdk called assets which allows you to reference local resources within your project and bundle",
    "start": "1479960",
    "end": "1487219"
  },
  {
    "text": "them into your construct and so first of all let's create our little directory for lambda code and then i'll show you",
    "start": "1487219",
    "end": "1493820"
  },
  {
    "text": "how we bundle we bind them together okay so it just created this lambda directory and index file oh that's a directory no",
    "start": "1493820",
    "end": "1504009"
  },
  {
    "text": "sorry index file and we'll ride out of this",
    "start": "1504009",
    "end": "1515320"
  },
  {
    "text": "stupid lambda function exports handler async event so that's a that's a that's",
    "start": "1515320",
    "end": "1526870"
  },
  {
    "text": "the lambda functions handler signature and we're just gonna log our event to",
    "start": "1526870",
    "end": "1532210"
  },
  {
    "text": "the console nothing nothing fancy here it is like",
    "start": "1532210",
    "end": "1539470"
  },
  {
    "text": "ten times longer than any hello world you've ever seen right but still it's like you'll see the the template soon",
    "start": "1539470",
    "end": "1546010"
  },
  {
    "text": "okay so we've got the we've got the lambda code and now all we need to do is tell the cdk hey use this directory",
    "start": "1546010",
    "end": "1552430"
  },
  {
    "text": "called lambda as your asset as your runtime code and it's it's actually a",
    "start": "1552430",
    "end": "1557860"
  },
  {
    "text": "pretty pretty low level it's more low-level than we want it to be like we actually want to provide an even higher",
    "start": "1557860",
    "end": "1563410"
  },
  {
    "text": "level experience for you to be able to reference your your code much more naturally for every programming language",
    "start": "1563410",
    "end": "1568870"
  },
  {
    "text": "but at the lowest level you can just tell it take this directory zip it up put it in s3 reference it from my",
    "start": "1568870",
    "end": "1576040"
  },
  {
    "text": "CloudFormation template do all the hula hoops that you need to do in order to make this code work and so I'm just",
    "start": "1576040",
    "end": "1581080"
  },
  {
    "text": "gonna put lambda here right that's all I need to do last thing I think is the",
    "start": "1581080",
    "end": "1587700"
  },
  {
    "text": "handler handler okay and learns the name of the handler right like it's index dot",
    "start": "1587700",
    "end": "1594220"
  },
  {
    "text": "handler okay almost done now we need to",
    "start": "1594220",
    "end": "1600010"
  },
  {
    "text": "connect the lambda and Q right like we need to actually get the lambda to consume from the Q so in order to do",
    "start": "1600010",
    "end": "1605920"
  },
  {
    "text": "that we need to be able to act talk to the Q and talk to the lambda function and so I'm just gonna assign those two",
    "start": "1605920",
    "end": "1612550"
  },
  {
    "text": "local variables and if I'm exploring the",
    "start": "1612550",
    "end": "1618850"
  },
  {
    "text": "API I have for my lambda function it's a pretty rich API for example it lets you",
    "start": "1618850",
    "end": "1625920"
  },
  {
    "text": "create metric objects and assign them into dashboards or create alarms from",
    "start": "1625920",
    "end": "1631840"
  },
  {
    "text": "them like there are a lot of really cool things and we're thinking we have a lot of really cool ideas also like not oh",
    "start": "1631840",
    "end": "1638680"
  },
  {
    "text": "not everything is as hearing still but it's there's a lot",
    "start": "1638680",
    "end": "1644650"
  },
  {
    "text": "you can do with this already aside from all these we've got this add event",
    "start": "1644650",
    "end": "1650170"
  },
  {
    "text": "source method which allows you to add an event source to your lambda function presumably and the the signature says I",
    "start": "1650170",
    "end": "1658000"
  },
  {
    "text": "need an eye event source and then there's some some documentation that says you can use the event sources library blah blah blah and so we're just",
    "start": "1658000",
    "end": "1664720"
  },
  {
    "text": "gonna do that new event sources dot and",
    "start": "1664720",
    "end": "1670180"
  },
  {
    "text": "you can see there are only three event sources here but there are like 12 different event sources for lamda and",
    "start": "1670180",
    "end": "1675400"
  },
  {
    "text": "we're just working on those and would love your help and pull requests and",
    "start": "1675400",
    "end": "1681060"
  },
  {
    "text": "Plus Ones and all those okay and then I need to just press in the queue and",
    "start": "1681060",
    "end": "1687940"
  },
  {
    "text": "that's it basically this is my this is how I connect a lambda function to an sqs queue and let's uh let's synthesize",
    "start": "1687940",
    "end": "1697870"
  },
  {
    "text": "this for a second Oh before we synthesize this actually wanted to show you another command called diff diff is",
    "start": "1697870",
    "end": "1704170"
  },
  {
    "text": "pretty cool because it allows you to take your current application and compare it to your deployed stack and",
    "start": "1704170",
    "end": "1709470"
  },
  {
    "text": "see what will happen if I'm actually gonna deploy this so let's do that for a second and before I show you the diff",
    "start": "1709470",
    "end": "1721090"
  },
  {
    "text": "I'm just gonna run deploy because it'll take a second okay so we see the",
    "start": "1721090",
    "end": "1727090"
  },
  {
    "text": "different formation we see that there gonna be a bunch of resources added to",
    "start": "1727090",
    "end": "1732400"
  },
  {
    "text": "my stack we see the lambda function here we see the event source mapping that maps the lambda function to the queue we",
    "start": "1732400",
    "end": "1739720"
  },
  {
    "text": "see the lander role in policy and we also see a bunch of CloudFormation parameters which are part of the the",
    "start": "1739720",
    "end": "1746200"
  },
  {
    "text": "asset magic that basically binds those assets to our to our code and if i take",
    "start": "1746200",
    "end": "1753730"
  },
  {
    "text": "a quick look at the actual templates that's generated let's do a JSON version",
    "start": "1753730",
    "end": "1759020"
  },
  {
    "text": "prefer Jason sometimes you see this is technically what I would manually need",
    "start": "1759020",
    "end": "1766310"
  },
  {
    "text": "to write if I wanted to create this hello world example with what we call",
    "start": "1766310",
    "end": "1771740"
  },
  {
    "text": "raw CloudFormation and so there's a lot here that it's not trivial and one of",
    "start": "1771740",
    "end": "1778370"
  },
  {
    "text": "the interesting things is that you can see that it's created an anion policy for me for my lambda function that",
    "start": "1778370",
    "end": "1785330"
  },
  {
    "text": "allows this lambda function to consume from this Q right like that's required like there's no way for this lambda",
    "start": "1785330",
    "end": "1790340"
  },
  {
    "text": "function to be connected to the Q without without this policy and for those of you who have dealt with",
    "start": "1790340",
    "end": "1796250"
  },
  {
    "text": "anything at AWS that's probably one of the biggest pain points at least was mine okay",
    "start": "1796250",
    "end": "1801950"
  },
  {
    "text": "I think we're done let's see yeah let's go to our lambda console and see",
    "start": "1801950",
    "end": "1807770"
  },
  {
    "text": "what we have lambda console you've changed the icon I think this past month",
    "start": "1807770",
    "end": "1812960"
  },
  {
    "text": "okay so we've got our lambda function and we can see that it's connected to",
    "start": "1812960",
    "end": "1819800"
  },
  {
    "text": "our Q we can see the permissions here also with all these nice set of actions",
    "start": "1819800",
    "end": "1825740"
  },
  {
    "text": "to consume the for it to consume from the Q and if we open the sqs console",
    "start": "1825740",
    "end": "1833810"
  },
  {
    "text": "let's try to actually send a message I",
    "start": "1833810",
    "end": "1838420"
  },
  {
    "text": "think the official one is like that No okay send",
    "start": "1840010",
    "end": "1846190"
  },
  {
    "text": "now the comma is gonna blow up the demo okay i'm back to the lambda function",
    "start": "1846190",
    "end": "1852340"
  },
  {
    "text": "i'll open the cloud wash logs because that's where i expect this to be and",
    "start": "1852340",
    "end": "1858110"
  },
  {
    "text": "we've got a law group still not still working yay hello CD k cool so quick",
    "start": "1858110",
    "end": "1870470"
  },
  {
    "text": "recap we saw how to initialize CD k projects using CD k in it as i said",
    "start": "1870470",
    "end": "1875690"
  },
  {
    "text": "those are just regular projects there are no magic to them and we can add more",
    "start": "1875690",
    "end": "1881420"
  },
  {
    "text": "templates if you feel that we need more templates we saw how to use the CD k",
    "start": "1881420",
    "end": "1887120"
  },
  {
    "text": "toolkit in order to interact with your application and help you with the cdk workflow you",
    "start": "1887120",
    "end": "1892850"
  },
  {
    "text": "write your code you use this toolkit to synthesize diff and deploy our",
    "start": "1892850",
    "end": "1898340"
  },
  {
    "text": "application to tear stack and I'm gonna hand it over to Jason for another really",
    "start": "1898340",
    "end": "1904400"
  },
  {
    "text": "cool demo about writing constructs so",
    "start": "1904400",
    "end": "1910610"
  },
  {
    "text": "we've seen the basics of using the cdk now we've seen the cdk CLI we also consumed some constructs from",
    "start": "1910610",
    "end": "1917810"
  },
  {
    "text": "the construct library so in the second part of the demo we're gonna take things a little bit further and we're really going to look at not only consuming",
    "start": "1917810",
    "end": "1924500"
  },
  {
    "text": "constructs but how we create constructs and use our own custom constructs to shape our code so we are gonna create",
    "start": "1924500",
    "end": "1935570"
  },
  {
    "text": "some custom constructs in this demo we are also going to learn a little bit about the permission system in the abs",
    "start": "1935570",
    "end": "1941840"
  },
  {
    "text": "construct library and talk about how our runtime code in our app in our lambda function actually communicates with the",
    "start": "1941840",
    "end": "1948170"
  },
  {
    "text": "infrastructure we create in our infrastructure code so you can see from",
    "start": "1948170",
    "end": "1953600"
  },
  {
    "text": "the architecture diagram we're gonna refactor our code a little bit we're gonna pull out this cue recorder construct and then instead of just",
    "start": "1953600",
    "end": "1960290"
  },
  {
    "text": "logging to cloud watch logs we're gonna pull in a new module from the construct library and we're going to start writing",
    "start": "1960290",
    "end": "1965870"
  },
  {
    "text": "data to a dynamo DB table so let's go back to vs code and the first thing",
    "start": "1965870",
    "end": "1975830"
  },
  {
    "text": "we're gonna do is pull out this this new cue recorder construct class so this is",
    "start": "1975830",
    "end": "1981260"
  },
  {
    "text": "just like any other code of course we're gonna create a new Lib directory and a",
    "start": "1981260",
    "end": "1987950"
  },
  {
    "text": "cue recorder type script file and then the first thing we need to do is import",
    "start": "1987950",
    "end": "1995060"
  },
  {
    "text": "the cdk framework of course so that we can access construct and all the classes",
    "start": "1995060",
    "end": "2001480"
  },
  {
    "text": "we need and then we're going to export a new class called cue recorder that",
    "start": "2001480",
    "end": "2008140"
  },
  {
    "text": "extends cdk construct and let's go ahead and fill in our initializer and we're",
    "start": "2008140",
    "end": "2016750"
  },
  {
    "text": "gonna follow the same pattern that a lot showed you earlier and we're passing in our parent that's of",
    "start": "2016750",
    "end": "2022409"
  },
  {
    "text": "type cdk construct we're also gonna pass in our ID or our logical name that's",
    "start": "2022409",
    "end": "2028380"
  },
  {
    "text": "going to be of type string and we'll just pass those up to the superclass so",
    "start": "2028380",
    "end": "2035190"
  },
  {
    "text": "this is the simplest construct we can write doesn't actually do anything yet so let's go and pull some of our code over from our main cdk application so",
    "start": "2035190",
    "end": "2044010"
  },
  {
    "text": "let's grab this lambda function and also this code that configures the event source and instead of having all the",
    "start": "2044010",
    "end": "2050128"
  },
  {
    "text": "details on our main cdk application we're just going to shift some of that into the queue recorder class and we can",
    "start": "2050129",
    "end": "2056608"
  },
  {
    "text": "simplify our main application a little bit there so let's go grab these imports",
    "start": "2056609",
    "end": "2064970"
  },
  {
    "text": "you don't need those anymore okay so our",
    "start": "2065540",
    "end": "2072419"
  },
  {
    "text": "codes looking pretty good now we just have one problem down here we have to fix so before we could just directly",
    "start": "2072419",
    "end": "2078358"
  },
  {
    "text": "reference this queue now we're gonna have to pass in the queue to our construct so we're gonna follow the same",
    "start": "2078359",
    "end": "2084300"
  },
  {
    "text": "pattern that allod showed you earlier where we have these property objects that we pass in as the third argument so",
    "start": "2084300",
    "end": "2090419"
  },
  {
    "text": "let's create a new interface and we're gonna call it Q recorder props and the",
    "start": "2090419",
    "end": "2097380"
  },
  {
    "text": "only thing we need to put in here is our input Q of type sqs Q so now let's",
    "start": "2097380",
    "end": "2106349"
  },
  {
    "text": "update our constructor to take in a new props member of type Q recorder props",
    "start": "2106349",
    "end": "2112230"
  },
  {
    "text": "and then we're just going to reference that down here and pull out the input Q",
    "start": "2112230",
    "end": "2119240"
  },
  {
    "text": "cool so that's all it took just like any other code working with our infrastructure definition is now just as",
    "start": "2119810",
    "end": "2125280"
  },
  {
    "text": "easy as we're factoring any other code so let's go back to the main cdk",
    "start": "2125280",
    "end": "2130800"
  },
  {
    "text": "application and actually use this construct so we're gonna create a new Q",
    "start": "2130800",
    "end": "2136200"
  },
  {
    "text": "recorder and we're gonna pass in this as the parent in the construct tree where",
    "start": "2136200",
    "end": "2141240"
  },
  {
    "text": "we want to attach our new construct we're gonna call this our Q recorder and",
    "start": "2141240",
    "end": "2146730"
  },
  {
    "text": "then we have to pass in the input cue that we just saw and of course",
    "start": "2146730",
    "end": "2152840"
  },
  {
    "text": "that is just a cue so go ahead and just update this real quick after our",
    "start": "2152840",
    "end": "2158840"
  },
  {
    "text": "refactoring and while that's running let's go ahead and add the dynamodb",
    "start": "2158840",
    "end": "2164540"
  },
  {
    "text": "table to our system and then we'll change our lambda function to start writing our data to that table so going",
    "start": "2164540",
    "end": "2170420"
  },
  {
    "text": "back into our cue recorder construct so we're gonna put the DynamoDB table in",
    "start": "2170420",
    "end": "2175550"
  },
  {
    "text": "here so we can keep all that complexity kind of wrapped up behind this cue recorder interface and just like we saw",
    "start": "2175550",
    "end": "2183050"
  },
  {
    "text": "in the first demo the first thing we need to do is bring in this new module the DynamoDB module from the ada basic",
    "start": "2183050",
    "end": "2189470"
  },
  {
    "text": "construct library so we're gonna npm install AWS CD k this DynamoDB and after",
    "start": "2189470",
    "end": "2199940"
  },
  {
    "text": "we've added that to our project we can go up here and import it into our code",
    "start": "2199940",
    "end": "2206110"
  },
  {
    "text": "oops so just like we saw for all the other modules in the construct library and then it should not surprise you that",
    "start": "2208960",
    "end": "2216860"
  },
  {
    "text": "we're gonna create our table in the exact same way we created our other constructs so a new dynamodb table we're",
    "start": "2216860",
    "end": "2224300"
  },
  {
    "text": "gonna pass in this as the parent in the construct tree where we want to attach this new construct and we're gonna call",
    "start": "2224300",
    "end": "2230660"
  },
  {
    "text": "this our cue recorder table and we got to pass in one property for a dynamo",
    "start": "2230660",
    "end": "2236990"
  },
  {
    "text": "table let's assign this to a constant two so when we're working with dynamo",
    "start": "2236990",
    "end": "2243260"
  },
  {
    "text": "the one attribute or the one parameter we need to pass in is our partition key and specify which attribute is our",
    "start": "2243260",
    "end": "2249500"
  },
  {
    "text": "partition key so we're going to create an attribute with name ID and type is",
    "start": "2249500",
    "end": "2257270"
  },
  {
    "text": "just going to be a string and we're gonna use an enum in the dynamodb namespace to grab that string attribute",
    "start": "2257270",
    "end": "2265160"
  },
  {
    "text": "type so that's all we have to do to add this table to our system the next thing",
    "start": "2265160",
    "end": "2271640"
  },
  {
    "text": "that I want to do is jump over to our lambda and we're gonna replace this really",
    "start": "2271640",
    "end": "2277970"
  },
  {
    "text": "simple console logger with some code to write to DynamoDB so we've already got",
    "start": "2277970",
    "end": "2283040"
  },
  {
    "text": "this we're just gonna pull it in from the clipboard and then we'll explain what the code does but we've still got a",
    "start": "2283040",
    "end": "2288140"
  },
  {
    "text": "really simple lambda function and we've got 19 lines of code here we're pulling in the dynamodb library from the AWS SDK",
    "start": "2288140",
    "end": "2295370"
  },
  {
    "text": "and we're using the dynamo DB client to write all of the records in the events",
    "start": "2295370",
    "end": "2301310"
  },
  {
    "text": "that come into our lambda function we're just going to write all those records to a dynamo table so the the interesting",
    "start": "2301310",
    "end": "2309440"
  },
  {
    "text": "part of this code here is that we have to have our runtime code able to talk to the infrastructure that our cdk",
    "start": "2309440",
    "end": "2315620"
  },
  {
    "text": "application code is creating and what we do we use a technique where we pass in the table name as an environment",
    "start": "2315620",
    "end": "2321770"
  },
  {
    "text": "variable so a provisioning time we are going to get CloudFormation to wire all this stuff together for us so that our",
    "start": "2321770",
    "end": "2328220"
  },
  {
    "text": "lambda function has this table name environment variable set and is able to just work with that table name without",
    "start": "2328220",
    "end": "2334880"
  },
  {
    "text": "having to do anything else fancy to figure out what was the actual table name the CloudFormation provision for us",
    "start": "2334880",
    "end": "2341230"
  },
  {
    "text": "so that's how the lambda function knows which table to write to but let's go back to our cue recorder cdk code and",
    "start": "2341230",
    "end": "2348830"
  },
  {
    "text": "talk about how we actually supply that information to the lambda function so",
    "start": "2348830",
    "end": "2354680"
  },
  {
    "text": "let's go and explore the function API a little bit right here on top you can see",
    "start": "2354680",
    "end": "2361490"
  },
  {
    "text": "we've got this method called add environment and this is gonna let us specify any environment variables that we want we want to pass to our lambda",
    "start": "2361490",
    "end": "2367970"
  },
  {
    "text": "function code so we are gonna pass this table name environment variable and then",
    "start": "2367970",
    "end": "2374300"
  },
  {
    "text": "we're gonna set this by grabbing the table construct and just asking for its table name and even though we don't know",
    "start": "2374300",
    "end": "2381410"
  },
  {
    "text": "what that name is now when CloudFormation actually provisions all this for us it's gonna wire everything",
    "start": "2381410",
    "end": "2386450"
  },
  {
    "text": "up correctly so that this table name environment is set with the actual table name the physical name and the table",
    "start": "2386450",
    "end": "2391970"
  },
  {
    "text": "that's created so we're pretty close now we've got our code refactored out into a",
    "start": "2391970",
    "end": "2398030"
  },
  {
    "text": "construct we've got this new DynamoDB table and we've got our lambda code updated to write to this table so we're",
    "start": "2398030",
    "end": "2405620"
  },
  {
    "text": "very close but we're still missing one piece we haven't actually granted permissions for our lambda function to be able to",
    "start": "2405620",
    "end": "2411380"
  },
  {
    "text": "write data to that table of course permissions are always locked down by default so we have to explicitly",
    "start": "2411380",
    "end": "2416630"
  },
  {
    "text": "grant any permissions that we want to add to our system so one of the things",
    "start": "2416630",
    "end": "2422240"
  },
  {
    "text": "that I think is really really exciting about the database construct library are all these grant methods oops so this is",
    "start": "2422240",
    "end": "2430820"
  },
  {
    "text": "how you explicitly give permission for different principles to work with different resources it's going to be",
    "start": "2430820",
    "end": "2436910"
  },
  {
    "text": "very clear syntax it's going to be very explicit and we're gonna get a nice tight lease privilege policy that only",
    "start": "2436910",
    "end": "2442850"
  },
  {
    "text": "grants permission for specific operations for one specific resource so",
    "start": "2442850",
    "end": "2448220"
  },
  {
    "text": "security best practices very easy and very clear in the code we're gonna use the grant write data because our land of",
    "start": "2448220",
    "end": "2455120"
  },
  {
    "text": "function just needs to pump data into this function and then we need to pass in the principle that we're granting",
    "start": "2455120",
    "end": "2460760"
  },
  {
    "text": "this permission to so we can do that by grabbing the execution rule in our",
    "start": "2460760",
    "end": "2465860"
  },
  {
    "text": "function so we just grab our function context and ask for the role and that's",
    "start": "2465860",
    "end": "2471740"
  },
  {
    "text": "all we have to do to wire up this permission the code is really simple it's very explicit it's very clear what's happening and we really didn't",
    "start": "2471740",
    "end": "2479060"
  },
  {
    "text": "have to dig deep into some of the assembly language of the CloudFormation template to do this",
    "start": "2479060",
    "end": "2485410"
  },
  {
    "text": "so let's go ahead and take a look at C D K diff now that we have updated all of",
    "start": "2485410",
    "end": "2492200"
  },
  {
    "text": "our code and see what's actually gonna happen when we deploy this and to save a",
    "start": "2492200",
    "end": "2497990"
  },
  {
    "text": "couple of seconds I'm gonna go ahead and kick off the deploy as well so we can",
    "start": "2497990",
    "end": "2503840"
  },
  {
    "text": "see this new table that we created we expected that we can see that our policy our policy document has changed a little",
    "start": "2503840",
    "end": "2510200"
  },
  {
    "text": "bit a lot explained how we had permissions to work with sqs before and now you see that we have some new",
    "start": "2510200",
    "end": "2516110"
  },
  {
    "text": "permissions added here so we now also have permission for the the role that's",
    "start": "2516110",
    "end": "2521210"
  },
  {
    "text": "executing our lambda function also has permission to work with just a few actions in the dynamodb API just for",
    "start": "2521210",
    "end": "2527480"
  },
  {
    "text": "that one table that we granted permissions on so very easy to lock down our permissions nice and tight and we",
    "start": "2527480",
    "end": "2533840"
  },
  {
    "text": "can also see this lambda function down here that we had this new environment variable that we specified",
    "start": "2533840",
    "end": "2540849"
  },
  {
    "text": "let's give this another minute for this deploy to finish and let's go back to our slides and do a quick recap so in",
    "start": "2540849",
    "end": "2549249"
  },
  {
    "text": "this second part of the demo we saw not only how to consume constructs but how we create our own constructs and use",
    "start": "2549249",
    "end": "2555039"
  },
  {
    "text": "them to simplify and shape our code we talked about the permission api's the grant methods and Atos construct library",
    "start": "2555039",
    "end": "2561970"
  },
  {
    "text": "and we talked a little bit about a technique for enabling your runtime your application code to be aware and work",
    "start": "2561970",
    "end": "2568299"
  },
  {
    "text": "with the infrastructure that CloudFormation provisions for you so let's see how our deployments going",
    "start": "2568299",
    "end": "2574690"
  },
  {
    "text": "we finished so let's jump over to the SQL console again and let's go ahead and",
    "start": "2574690",
    "end": "2584319"
  },
  {
    "text": "try sending a message and with any luck the message will be picked up by our lambda function and written to our DynamoDB table",
    "start": "2584319",
    "end": "2591900"
  },
  {
    "text": "let's see let's go ahead and send two messages we'll see if both of these make it over",
    "start": "2596610",
    "end": "2601800"
  },
  {
    "text": "to dynamo so over in the dynamo console we've got our table that we just created",
    "start": "2601800",
    "end": "2607980"
  },
  {
    "text": "and if we look at the items sure enough we can see hello cdk1 hello cdk2",
    "start": "2607980",
    "end": "2613170"
  },
  {
    "text": "so the demo is working and we have our messages flowing from sqs to lambda into",
    "start": "2613170",
    "end": "2618810"
  },
  {
    "text": "our dynamo DB table so I will turn it over to a lot to take us through the",
    "start": "2618810",
    "end": "2623850"
  },
  {
    "text": "last final part of the demo Thanks so we saw how to organise your",
    "start": "2623850",
    "end": "2631350"
  },
  {
    "text": "application using constructs and you can do a lot with that like if you think",
    "start": "2631350",
    "end": "2636360"
  },
  {
    "text": "about it complex cloud applications consist of multiple components and infrastructure",
    "start": "2636360",
    "end": "2644160"
  },
  {
    "text": "is becoming part of the application it's not an external part and so being able to model those mental models using",
    "start": "2644160",
    "end": "2651770"
  },
  {
    "text": "object-oriented techniques is a very powerful capability that we see",
    "start": "2651770",
    "end": "2657540"
  },
  {
    "text": "customers do pretty amazing things with the other nice thing about constructs is that you can use them to share",
    "start": "2657540",
    "end": "2663870"
  },
  {
    "text": "infrastructure components there are just regular classes like any other class that you share and so you could publish",
    "start": "2663870",
    "end": "2671100"
  },
  {
    "text": "them to package managers whether they're internal to your company or in your team or or to the public package managers so",
    "start": "2671100",
    "end": "2678480"
  },
  {
    "text": "I spent some time a couple weeks ago over the weekend writing this cute",
    "start": "2678480",
    "end": "2685200"
  },
  {
    "text": "little construct library called Twitter",
    "start": "2685200",
    "end": "2690410"
  },
  {
    "text": "cue tweet cue I published it to NPM it's",
    "start": "2690410",
    "end": "2696060"
  },
  {
    "text": "it's pretty cool it would basically give you an interface of the queue that",
    "start": "2696060",
    "end": "2701520"
  },
  {
    "text": "contains tweets from a Twitter search so you just specify your query and this",
    "start": "2701520",
    "end": "2707940"
  },
  {
    "text": "Twitter queue thing it has a few moving parts in it it has CloudWatch events that triggers the",
    "start": "2707940",
    "end": "2715000"
  },
  {
    "text": "lambda function a lambda function that pulls Twitter checkpoints through a dynamodb to make sure that it's not",
    "start": "2715000",
    "end": "2721270"
  },
  {
    "text": "repeating any tweets and then publish them to a queue and so you can consume the queue naturally as a queue but",
    "start": "2721270",
    "end": "2730599"
  },
  {
    "text": "there's there's a bunch of things happening here behind the scenes and so let's just plug that queue into our",
    "start": "2730599",
    "end": "2735970"
  },
  {
    "text": "little hello world application it's kind of it's gonna it's gonna plug in pretty cleanly and and there's some",
    "start": "2735970",
    "end": "2744579"
  },
  {
    "text": "documentation here you can install this module it's an NPM module let's do that",
    "start": "2744579",
    "end": "2751828"
  },
  {
    "text": "okay and p.m. installed the star of the demo CD k tweet queue and I'm gonna go",
    "start": "2752640",
    "end": "2768970"
  },
  {
    "text": "to my main file import tweets Q from CD",
    "start": "2768970",
    "end": "2776980"
  },
  {
    "text": "k to HQ sorry",
    "start": "2776980",
    "end": "2780720"
  },
  {
    "text": "equals cdk tweet q oh and let's see the API",
    "start": "2783520",
    "end": "2793840"
  },
  {
    "text": "here new tweet Q tweet Q and it's a",
    "start": "2793840",
    "end": "2799180"
  },
  {
    "text": "construct surprisingly so I'm just gonna bind it to my stack tweets and if I'm",
    "start": "2799180",
    "end": "2808690"
  },
  {
    "text": "looking at the set of properties here again a bunch of optionals a bunch of",
    "start": "2808690",
    "end": "2815170"
  },
  {
    "text": "required ones the two required ones are the secret arne the secrets manager arne",
    "start": "2815170",
    "end": "2821500"
  },
  {
    "text": "a RN that contains the twitter credentials and so we we've actually uploaded before so and I'm not gonna",
    "start": "2821500",
    "end": "2828250"
  },
  {
    "text": "need to do that I'm not gonna eat you uploaded I'm just gonna paste in a little R in here so that contains my",
    "start": "2828250",
    "end": "2837700"
  },
  {
    "text": "Twitter credentials so I can actually hit the Twitter API and the second required parameter is the query so I'm",
    "start": "2837700",
    "end": "2845560"
  },
  {
    "text": "gonna use hashtag AWS cdk and you're gonna need to help me fill up that table",
    "start": "2845560",
    "end": "2852240"
  },
  {
    "text": "with by hashtagging your tweets and I'm just gonna basically replace this cue",
    "start": "2852240",
    "end": "2859000"
  },
  {
    "text": "with the tweet cue because a tweet cue if I'm if I'm looking at the tweet cue definition you see it extends sqs cue so",
    "start": "2859000",
    "end": "2865810"
  },
  {
    "text": "it's basically an sqs cue as far as everything polymorphically is concerned",
    "start": "2865810",
    "end": "2871600"
  },
  {
    "text": "so I'm just gonna I'm just gonna do this I don't need this guy anymore and let me",
    "start": "2871600",
    "end": "2879550"
  },
  {
    "text": "kick oh sorry let me kick off the ployment here and I just I just want to",
    "start": "2879550",
    "end": "2888190"
  },
  {
    "text": "quickly show you what's going on here sorry cdk dip is probably more so this",
    "start": "2888190",
    "end": "2894880"
  },
  {
    "text": "is basically what the this little one line of code or three lines on four",
    "start": "2894880",
    "end": "2899950"
  },
  {
    "text": "lines of code added to my stack like it's added a cue a table role of policy a function that permission cloud watch",
    "start": "2899950",
    "end": "2906280"
  },
  {
    "text": "events rule and event source mapping and it modified our policy by the way this",
    "start": "2906280",
    "end": "2912310"
  },
  {
    "text": "policy view diff view is hopefully going to change we have a poll question four you know nice really UI",
    "start": "2912310",
    "end": "2920819"
  },
  {
    "text": "for showing you exactly what permissions are going to be changed in your stack and so the let's go back to the slides",
    "start": "2920819",
    "end": "2928859"
  },
  {
    "text": "for a second the point here is encapsulation right like it's it's it's",
    "start": "2928859",
    "end": "2933930"
  },
  {
    "text": "a very fundamental principle in software design and we were really excited the CD",
    "start": "2933930",
    "end": "2941309"
  },
  {
    "text": "cake is enabling that around infrastructure all I needed to do is",
    "start": "2941309",
    "end": "2946559"
  },
  {
    "text": "basically bring in this tweet queue class and behind the scenes this class had like lots of implementation details",
    "start": "2946559",
    "end": "2952710"
  },
  {
    "text": "and quite a lot of resources it could be hundreds of resources behind this this",
    "start": "2952710",
    "end": "2958230"
  },
  {
    "text": "one little class it provided an API that's worked against a specific mental model that they designed right like it's",
    "start": "2958230",
    "end": "2965279"
  },
  {
    "text": "not about the resources is about what this thing is actually doing and it plugged really nicely with my existing",
    "start": "2965279",
    "end": "2971519"
  },
  {
    "text": "application because everybody is speaking in the same these construct language right so while this is",
    "start": "2971519",
    "end": "2979619"
  },
  {
    "text": "deploying I think it's gonna take a little while because of all those resources Jason's gonna do a little",
    "start": "2979619",
    "end": "2986609"
  },
  {
    "text": "summary and tell you what more you can explore so I'm gonna recommend some",
    "start": "2986609",
    "end": "2994319"
  },
  {
    "text": "areas to go explore more for the CDK while I'm doing that please help us out and hash tag abs CD case and some tweets",
    "start": "2994319",
    "end": "3001809"
  },
  {
    "text": "my first recommendation is definitely to go explore the AWS construct library remember that this is the curated area",
    "start": "3001809",
    "end": "3009140"
  },
  {
    "text": "where we define the experience for AWS infrastructure and there's a ton of",
    "start": "3009140",
    "end": "3014509"
  },
  {
    "text": "really awesome functionality there already if you want to go build application with containers check out our ECS Fargate an ECR support if you",
    "start": "3014509",
    "end": "3022460"
  },
  {
    "text": "want to build a service application we've got great support for Amazon API gateway a dubious lambda and a davis",
    "start": "3022460",
    "end": "3028670"
  },
  {
    "text": "step functions as well we've also got a nice support for code pipeline code build code deploy so you can use a cdk",
    "start": "3028670",
    "end": "3035779"
  },
  {
    "text": "to manage your whole build and release infrastructure as well - there's a ton more there's great support for ec2 if",
    "start": "3035779",
    "end": "3042259"
  },
  {
    "text": "you want to work at a lower level manage V pcs very very easily security groups cloud watch metrics alarms and",
    "start": "3042259",
    "end": "3048829"
  },
  {
    "text": "dashboards so tons to go explorer if there's something missing in the library raise an issue on github or better yet send us",
    "start": "3048829",
    "end": "3055220"
  },
  {
    "text": "a pull request we'd love to hear about it so we can help prioritize based on customer feedback and we we've really",
    "start": "3055220",
    "end": "3061820"
  },
  {
    "text": "focused on typescript today my second recommendation is to go explore some of the other language support for seedy",
    "start": "3061820",
    "end": "3067280"
  },
  {
    "text": "cave so we've kind of hinted a little bit at this idea where the cdk is really",
    "start": "3067280",
    "end": "3073130"
  },
  {
    "text": "available not only in typescript and javascript but also in Java and c-sharp we've got some experimental support for",
    "start": "3073130",
    "end": "3079580"
  },
  {
    "text": "Python and the repo already that you can check out we hope to include that and the official builds very soon as well",
    "start": "3079580",
    "end": "3085420"
  },
  {
    "text": "but I think one of the really neat things about cdk is that we're able to take this programming model and this ad",
    "start": "3085420",
    "end": "3092240"
  },
  {
    "text": "based construct library and we're able to map it consistently into all these different languages and keep it in sync",
    "start": "3092240",
    "end": "3097430"
  },
  {
    "text": "across the different languages and we're able to do that by using another open source project we created called J SII",
    "start": "3097430",
    "end": "3104080"
  },
  {
    "text": "so that's another really interesting area to explore and then so of course",
    "start": "3104080",
    "end": "3111710"
  },
  {
    "text": "we're really just scratching the surface in an hour of what you can do with the cdk they're already support for a lot of",
    "start": "3111710",
    "end": "3117800"
  },
  {
    "text": "pretty advanced use cases so if you for example have a big application that runs in multiple regions that's easily",
    "start": "3117800",
    "end": "3124790"
  },
  {
    "text": "supported with a CD k if you have a big investment in cloud formation templates already you can take those templates and",
    "start": "3124790",
    "end": "3131420"
  },
  {
    "text": "embed them into your CDA application without having to port them all over the code if you just want to start migrating",
    "start": "3131420",
    "end": "3137359"
  },
  {
    "text": "over to the CD K and there's a ton more check out the docs and ask us questions on github and then finally as some kind",
    "start": "3137359",
    "end": "3146119"
  },
  {
    "text": "of higher level resources if you're just looking for some easy ways to get your hands on some CD K code and learn",
    "start": "3146119",
    "end": "3151369"
  },
  {
    "text": "there's a great workshop online at CD K workshop com this is a nice guided workshop it's",
    "start": "3151369",
    "end": "3157850"
  },
  {
    "text": "gonna help you build a pretty cool application using Amazon API gateway and AWS lambda to build a neat little",
    "start": "3157850",
    "end": "3164990"
  },
  {
    "text": "serverless application you can also find our Doc's linked from github and we'll have the source from this sample",
    "start": "3164990",
    "end": "3170720"
  },
  {
    "text": "application up on github as well later today and of course if you want to reach out and engage the developer team we'd",
    "start": "3170720",
    "end": "3176060"
  },
  {
    "text": "love to hear from you on github or git er or Twitter and there are a couple of related sessions",
    "start": "3176060",
    "end": "3183230"
  },
  {
    "text": "as well that'll have a little bit more cdk content in them so dev for one one infrastructure as code AWS best",
    "start": "3183230",
    "end": "3189920"
  },
  {
    "text": "practices is available three more times this week this is a chalk talk so it's",
    "start": "3189920",
    "end": "3194960"
  },
  {
    "text": "going to be a little bit informal and lots of chances to ask questions there'll be a couple of Engineers from a",
    "start": "3194960",
    "end": "3200630"
  },
  {
    "text": "TBS developer tools there and showing off some cdk code as well dev three to",
    "start": "3200630",
    "end": "3206360"
  },
  {
    "text": "seven beyond the basics advanced infrastructure as code programming on AWS there's a chance to catch this",
    "start": "3206360",
    "end": "3212090"
  },
  {
    "text": "session on Thursday this is going to be an overview of some of the advanced features that we've added to a tube-based cloud formation in the past",
    "start": "3212090",
    "end": "3218570"
  },
  {
    "text": "year so that'll be a cool one and last but not least dev 3:09 CI CD for server",
    "start": "3218570",
    "end": "3225050"
  },
  {
    "text": "lists and containerized applications this is probably the first session I'm going to check out as soon as they're uploaded to YouTube phenomenal speaker",
    "start": "3225050",
    "end": "3232580"
  },
  {
    "text": "and it's gonna have a lot of cdk content in there and really something for everything or something for everybody",
    "start": "3232580",
    "end": "3237770"
  },
  {
    "text": "with CI CDE serverless and containers I mean catch that one later today or on Thursday",
    "start": "3237770",
    "end": "3244210"
  },
  {
    "text": "let's check the tweets yeah okay this is",
    "start": "3244210",
    "end": "3251690"
  },
  {
    "text": "the moment of truth we'll see you gonna be an untied clam",
    "start": "3251690",
    "end": "3256599"
  },
  {
    "text": "table yeah flawless demo before anybody",
    "start": "3256750",
    "end": "3262070"
  },
  {
    "text": "a CD Kay yeah that's a good one thank you all for tweeting thanks for coming we're gonna",
    "start": "3262070",
    "end": "3267770"
  },
  {
    "text": "hang out here we've got some cdk stickers the first ones ever we'd love",
    "start": "3267770",
    "end": "3273710"
  },
  {
    "text": "to talk to anyone on the getter channel who talked to us and is maybe here and we would love to get to know you and",
    "start": "3273710",
    "end": "3279850"
  },
  {
    "text": "thanks so much thank you [Applause]",
    "start": "3279850",
    "end": "3288549"
  }
]