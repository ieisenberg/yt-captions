[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "in this video you'll see how you can",
    "start": "719",
    "end": "2320"
  },
  {
    "text": "query amazon location service using",
    "start": "2320",
    "end": "4400"
  },
  {
    "text": "amazon aurora postgres",
    "start": "4400",
    "end": "6560"
  },
  {
    "text": "with this aws lambda-based solution you",
    "start": "6560",
    "end": "8960"
  },
  {
    "text": "can use amazon location service to",
    "start": "8960",
    "end": "10719"
  },
  {
    "text": "geocode coordinates and addresses stored",
    "start": "10719",
    "end": "13040"
  },
  {
    "text": "in database tables and enrich them with",
    "start": "13040",
    "end": "14960"
  },
  {
    "text": "geospatial context",
    "start": "14960",
    "end": "17600"
  },
  {
    "start": "17000",
    "end": "74000"
  },
  {
    "text": "aurora is a relational database and part",
    "start": "17600",
    "end": "19680"
  },
  {
    "text": "of the amazon relational database",
    "start": "19680",
    "end": "21279"
  },
  {
    "text": "service or amazon rds",
    "start": "21279",
    "end": "23760"
  },
  {
    "text": "to get started let's go to the rds",
    "start": "23760",
    "end": "25760"
  },
  {
    "text": "console and create a new aurora postgres",
    "start": "25760",
    "end": "28000"
  },
  {
    "text": "cluster",
    "start": "28000",
    "end": "31000"
  },
  {
    "text": "we'll use the easy create method",
    "start": "31279",
    "end": "35120"
  },
  {
    "text": "we'll choose the postgres compatible",
    "start": "35920",
    "end": "37520"
  },
  {
    "text": "edition and retain the default",
    "start": "37520",
    "end": "38879"
  },
  {
    "text": "configurations",
    "start": "38879",
    "end": "41680"
  },
  {
    "text": "it takes about 10 minutes for the",
    "start": "42559",
    "end": "43760"
  },
  {
    "text": "database to become available in our",
    "start": "43760",
    "end": "45360"
  },
  {
    "text": "virtual private cloud or vpc",
    "start": "45360",
    "end": "49360"
  },
  {
    "text": "during database creation a master",
    "start": "49520",
    "end": "51360"
  },
  {
    "text": "password is generated let's copy it so",
    "start": "51360",
    "end": "53520"
  },
  {
    "text": "we can use it later",
    "start": "53520",
    "end": "56160"
  },
  {
    "text": "let's also copy the database endpoint so",
    "start": "56160",
    "end": "58079"
  },
  {
    "text": "we can connect to it when we're ready",
    "start": "58079",
    "end": "61440"
  },
  {
    "text": "now that the database is available we",
    "start": "63039",
    "end": "64878"
  },
  {
    "text": "need to deploy an aws lambda function",
    "start": "64879",
    "end": "66960"
  },
  {
    "text": "that calls amazon location service",
    "start": "66960",
    "end": "69040"
  },
  {
    "text": "associated iam permissions and a vpc",
    "start": "69040",
    "end": "71600"
  },
  {
    "text": "endpoint to allow aurora to connect to",
    "start": "71600",
    "end": "73439"
  },
  {
    "text": "lambda",
    "start": "73439",
    "end": "75119"
  },
  {
    "start": "74000",
    "end": "130000"
  },
  {
    "text": "the amazon location service developer",
    "start": "75119",
    "end": "77119"
  },
  {
    "text": "guide provides a cloudformation stack we",
    "start": "77119",
    "end": "79040"
  },
  {
    "text": "can launch to save us some steps",
    "start": "79040",
    "end": "82400"
  },
  {
    "text": "this stack uses esri as the data",
    "start": "82400",
    "end": "84080"
  },
  {
    "text": "provider",
    "start": "84080",
    "end": "85360"
  },
  {
    "text": "we'll change the region to us west 2",
    "start": "85360",
    "end": "87680"
  },
  {
    "text": "which is where we established our rds",
    "start": "87680",
    "end": "89360"
  },
  {
    "text": "cluster",
    "start": "89360",
    "end": "91680"
  },
  {
    "text": "here we'll supply the name of our",
    "start": "91680",
    "end": "92880"
  },
  {
    "text": "cluster",
    "start": "92880",
    "end": "95200"
  },
  {
    "text": "we'll also select our vpc and the",
    "start": "95200",
    "end": "97040"
  },
  {
    "text": "appropriate subnets",
    "start": "97040",
    "end": "100520"
  },
  {
    "text": "let's configure our stack to use the",
    "start": "106159",
    "end": "107680"
  },
  {
    "text": "default security group for the vpc",
    "start": "107680",
    "end": "109520"
  },
  {
    "text": "endpoint",
    "start": "109520",
    "end": "111280"
  },
  {
    "text": "finally we'll acknowledge the warning",
    "start": "111280",
    "end": "112880"
  },
  {
    "text": "and create the stack",
    "start": "112880",
    "end": "115840"
  },
  {
    "text": "let's view the stack resources",
    "start": "119840",
    "end": "122159"
  },
  {
    "text": "in addition to the vpc endpoint and two",
    "start": "122159",
    "end": "124159"
  },
  {
    "text": "lambda functions the stack includes an",
    "start": "124159",
    "end": "126079"
  },
  {
    "text": "amazon location place index let's look",
    "start": "126079",
    "end": "128640"
  },
  {
    "text": "at the outputs",
    "start": "128640",
    "end": "130560"
  },
  {
    "start": "130000",
    "end": "243000"
  },
  {
    "text": "this cli command adds lambda",
    "start": "130560",
    "end": "132480"
  },
  {
    "text": "user-defined function or udf support to",
    "start": "132480",
    "end": "134879"
  },
  {
    "text": "our aurora cluster and assigns it to use",
    "start": "134879",
    "end": "136959"
  },
  {
    "text": "the role that was created let's copy the",
    "start": "136959",
    "end": "139040"
  },
  {
    "text": "command and run it from aws cloud shell",
    "start": "139040",
    "end": "143760"
  },
  {
    "text": "let's return to the rds console and",
    "start": "143760",
    "end": "145680"
  },
  {
    "text": "quickly confirm that the amazon identity",
    "start": "145680",
    "end": "147599"
  },
  {
    "text": "and access management or iam role for",
    "start": "147599",
    "end": "149760"
  },
  {
    "text": "lambda role is active",
    "start": "149760",
    "end": "152879"
  },
  {
    "text": "the role is active so now we can connect",
    "start": "153360",
    "end": "155200"
  },
  {
    "text": "the aurora instance to lambda",
    "start": "155200",
    "end": "158720"
  },
  {
    "text": "to do so we'll first connect to an",
    "start": "158879",
    "end": "160400"
  },
  {
    "text": "amazon elastic compute cloud or amazon",
    "start": "160400",
    "end": "162480"
  },
  {
    "text": "ec2 instance in the same vpc as the rds",
    "start": "162480",
    "end": "165280"
  },
  {
    "text": "instance",
    "start": "165280",
    "end": "167680"
  },
  {
    "text": "we are now within the aurora postgres",
    "start": "167920",
    "end": "169680"
  },
  {
    "text": "database",
    "start": "169680",
    "end": "170879"
  },
  {
    "text": "next we'll register two lambda",
    "start": "170879",
    "end": "172480"
  },
  {
    "text": "user-defined functions in the database",
    "start": "172480",
    "end": "174720"
  },
  {
    "text": "search place index for text and search",
    "start": "174720",
    "end": "177120"
  },
  {
    "text": "place index for position",
    "start": "177120",
    "end": "180319"
  },
  {
    "text": "we can now query amazon location service",
    "start": "180879",
    "end": "183920"
  },
  {
    "text": "let's start by querying the search place",
    "start": "183920",
    "end": "185599"
  },
  {
    "text": "index for text we'll look for the text",
    "start": "185599",
    "end": "187840"
  },
  {
    "text": "vancouver bc",
    "start": "187840",
    "end": "190080"
  },
  {
    "text": "we can see a single result for this",
    "start": "190080",
    "end": "191519"
  },
  {
    "text": "search",
    "start": "191519",
    "end": "193120"
  },
  {
    "text": "let's try another search and look for",
    "start": "193120",
    "end": "194720"
  },
  {
    "text": "mount pleasant we'll restrict the search",
    "start": "194720",
    "end": "196720"
  },
  {
    "text": "to canada and set a five result limit",
    "start": "196720",
    "end": "199760"
  },
  {
    "text": "this search produced five results",
    "start": "199760",
    "end": "202480"
  },
  {
    "text": "we can also constrain searches to a",
    "start": "202480",
    "end": "204080"
  },
  {
    "text": "location boundary",
    "start": "204080",
    "end": "205920"
  },
  {
    "text": "let's define british columbia and part",
    "start": "205920",
    "end": "207760"
  },
  {
    "text": "of alberta as the boundary for another",
    "start": "207760",
    "end": "209519"
  },
  {
    "text": "search of mount pleasant in canada with",
    "start": "209519",
    "end": "211280"
  },
  {
    "text": "a maximum of five results",
    "start": "211280",
    "end": "214560"
  },
  {
    "text": "as you can see these five results differ",
    "start": "214640",
    "end": "216560"
  },
  {
    "text": "from those of the previous search",
    "start": "216560",
    "end": "218799"
  },
  {
    "text": "now let's query the search place index",
    "start": "218799",
    "end": "220560"
  },
  {
    "text": "for position",
    "start": "220560",
    "end": "222159"
  },
  {
    "text": "we'll use a point position for chrissy",
    "start": "222159",
    "end": "223760"
  },
  {
    "text": "field in san francisco california",
    "start": "223760",
    "end": "226560"
  },
  {
    "text": "as you can see one result matches the",
    "start": "226560",
    "end": "228400"
  },
  {
    "text": "point location input",
    "start": "228400",
    "end": "230959"
  },
  {
    "text": "you've just seen how you can query",
    "start": "230959",
    "end": "232319"
  },
  {
    "text": "amazon location service from amazon",
    "start": "232319",
    "end": "234159"
  },
  {
    "text": "aurora postgres",
    "start": "234159",
    "end": "236319"
  },
  {
    "text": "you can learn more about this topic in",
    "start": "236319",
    "end": "237760"
  },
  {
    "text": "the description and links for this video",
    "start": "237760",
    "end": "239599"
  },
  {
    "text": "thanks for watching now it's your turn",
    "start": "239599",
    "end": "241120"
  },
  {
    "text": "to try",
    "start": "241120",
    "end": "244200"
  }
]