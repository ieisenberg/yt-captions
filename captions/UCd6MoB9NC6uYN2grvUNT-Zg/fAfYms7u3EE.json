[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "hello my name is John trahoon and I'm a",
    "start": "960",
    "end": "3419"
  },
  {
    "text": "Senior Solutions architect here at AWS",
    "start": "3419",
    "end": "5700"
  },
  {
    "text": "we're here today to talk about the",
    "start": "5700",
    "end": "7379"
  },
  {
    "text": "sustainability pillar for the",
    "start": "7379",
    "end": "8639"
  },
  {
    "text": "well-architected framework dynamodb",
    "start": "8639",
    "end": "10559"
  },
  {
    "text": "limbs we have a number of topics and",
    "start": "10559",
    "end": "12660"
  },
  {
    "text": "questions to go through in order to",
    "start": "12660",
    "end": "14040"
  },
  {
    "text": "better understand the areas where we can",
    "start": "14040",
    "end": "15719"
  },
  {
    "text": "improve the sustainability of our",
    "start": "15719",
    "end": "17220"
  },
  {
    "text": "applications",
    "start": "17220",
    "end": "18600"
  },
  {
    "text": "the sustainability pillar is really",
    "start": "18600",
    "end": "20520"
  },
  {
    "text": "about understanding and reducing the",
    "start": "20520",
    "end": "22140"
  },
  {
    "text": "impact of the services we use we want to",
    "start": "22140",
    "end": "24600"
  },
  {
    "text": "quantify this and be able to monitor for",
    "start": "24600",
    "end": "26519"
  },
  {
    "text": "energy consumption and efficiency in our",
    "start": "26519",
    "end": "28439"
  },
  {
    "text": "applications",
    "start": "28439",
    "end": "30060"
  },
  {
    "start": "30000",
    "end": "30000"
  },
  {
    "text": "if you've been operating in AWS for some",
    "start": "30060",
    "end": "32040"
  },
  {
    "text": "time you've likely heard of the shared",
    "start": "32040",
    "end": "33600"
  },
  {
    "text": "responsibility model but if you haven't",
    "start": "33600",
    "end": "35280"
  },
  {
    "text": "the shared responsibility model",
    "start": "35280",
    "end": "37079"
  },
  {
    "text": "describes the different responsibilities",
    "start": "37079",
    "end": "39059"
  },
  {
    "text": "of AWS and our customers as we work",
    "start": "39059",
    "end": "41700"
  },
  {
    "text": "together",
    "start": "41700",
    "end": "42660"
  },
  {
    "text": "sustainability requires everyone's",
    "start": "42660",
    "end": "44760"
  },
  {
    "text": "participation and follows that model of",
    "start": "44760",
    "end": "46860"
  },
  {
    "text": "shared responsibility",
    "start": "46860",
    "end": "48239"
  },
  {
    "text": "AWS is responsible for sustainability of",
    "start": "48239",
    "end": "51300"
  },
  {
    "text": "the cloud and customers are responsible",
    "start": "51300",
    "end": "53399"
  },
  {
    "text": "for sustainability in the cloud",
    "start": "53399",
    "end": "55920"
  },
  {
    "text": "that means that AWS is continuing to",
    "start": "55920",
    "end": "58079"
  },
  {
    "text": "work towards lowering the carbon impact",
    "start": "58079",
    "end": "59820"
  },
  {
    "text": "of operating the infrastructure such as",
    "start": "59820",
    "end": "61980"
  },
  {
    "text": "data centers servers cooling that powers",
    "start": "61980",
    "end": "64799"
  },
  {
    "text": "the cloud",
    "start": "64799",
    "end": "65939"
  },
  {
    "text": "Amazon is on path to powering its",
    "start": "65939",
    "end": "68040"
  },
  {
    "text": "operations with 100 renewable energy by",
    "start": "68040",
    "end": "70380"
  },
  {
    "text": "2025 and is committed to being water",
    "start": "70380",
    "end": "72780"
  },
  {
    "text": "positive by 2030. our customers build",
    "start": "72780",
    "end": "75780"
  },
  {
    "text": "their applications on top of that Global",
    "start": "75780",
    "end": "77880"
  },
  {
    "text": "infrastructure and are responsible for",
    "start": "77880",
    "end": "79619"
  },
  {
    "text": "the sustainable design and operation of",
    "start": "79619",
    "end": "81600"
  },
  {
    "text": "those applications",
    "start": "81600",
    "end": "83040"
  },
  {
    "text": "tools such as well architected help our",
    "start": "83040",
    "end": "85320"
  },
  {
    "text": "customers improve sustainability in the",
    "start": "85320",
    "end": "87420"
  },
  {
    "text": "cloud by leveraging efficient software",
    "start": "87420",
    "end": "89460"
  },
  {
    "text": "application designs improving",
    "start": "89460",
    "end": "91320"
  },
  {
    "text": "utilization and reducing waste",
    "start": "91320",
    "end": "94619"
  },
  {
    "text": "for this video we're focusing on",
    "start": "94619",
    "end": "96360"
  },
  {
    "start": "95000",
    "end": "95000"
  },
  {
    "text": "sustainability with regards to Amazon",
    "start": "96360",
    "end": "98100"
  },
  {
    "text": "dynamodb",
    "start": "98100",
    "end": "99600"
  },
  {
    "text": "for this service there are a number of",
    "start": "99600",
    "end": "101220"
  },
  {
    "text": "considerations the first is to",
    "start": "101220",
    "end": "103380"
  },
  {
    "text": "understand if dynamodb is the best",
    "start": "103380",
    "end": "105240"
  },
  {
    "text": "database engine for your workload we",
    "start": "105240",
    "end": "107700"
  },
  {
    "text": "want access patterns to be well known if",
    "start": "107700",
    "end": "109920"
  },
  {
    "text": "axis patterns are ad hoc or more",
    "start": "109920",
    "end": "111659"
  },
  {
    "text": "analytics focused they may not be the",
    "start": "111659",
    "end": "113700"
  },
  {
    "text": "best fit for dynamodb those sorts of",
    "start": "113700",
    "end": "115860"
  },
  {
    "text": "access patterns can mean lots of",
    "start": "115860",
    "end": "117299"
  },
  {
    "text": "scanning which is quite compute",
    "start": "117299",
    "end": "119159"
  },
  {
    "text": "intensive for dynamodb and nosql in",
    "start": "119159",
    "end": "121920"
  },
  {
    "text": "general it's better if we have more",
    "start": "121920",
    "end": "123540"
  },
  {
    "text": "well-known access patterns that are oltp",
    "start": "123540",
    "end": "125700"
  },
  {
    "text": "or transactional in nature we also want",
    "start": "125700",
    "end": "128640"
  },
  {
    "text": "to be sustainable by cleaning up unused",
    "start": "128640",
    "end": "130560"
  },
  {
    "text": "resources and evaluating where slas can",
    "start": "130560",
    "end": "133020"
  },
  {
    "text": "be relaxed for certain workloads we can",
    "start": "133020",
    "end": "135599"
  },
  {
    "text": "be happy just using a single region for",
    "start": "135599",
    "end": "138060"
  },
  {
    "text": "other workloads Global tables may be",
    "start": "138060",
    "end": "139860"
  },
  {
    "text": "needed",
    "start": "139860",
    "end": "141000"
  },
  {
    "text": "if we're using AWS Lambda to read from",
    "start": "141000",
    "end": "143280"
  },
  {
    "text": "dynamodb streams which is a fairly",
    "start": "143280",
    "end": "145020"
  },
  {
    "text": "common design pattern we can now utilize",
    "start": "145020",
    "end": "147360"
  },
  {
    "text": "Lambda event filtering to only invoke",
    "start": "147360",
    "end": "149400"
  },
  {
    "text": "Lambda functions when we have a pattern",
    "start": "149400",
    "end": "151200"
  },
  {
    "text": "match on the payload fewer locations of",
    "start": "151200",
    "end": "153540"
  },
  {
    "text": "Lambda means less compute used which",
    "start": "153540",
    "end": "155580"
  },
  {
    "text": "means better efficiency",
    "start": "155580",
    "end": "157739"
  },
  {
    "text": "we want to monitor consume capacity",
    "start": "157739",
    "end": "159540"
  },
  {
    "text": "units and provision capacity units for",
    "start": "159540",
    "end": "161459"
  },
  {
    "text": "both reads and writes in our application",
    "start": "161459",
    "end": "163140"
  },
  {
    "text": "and we can use these as proxy metrics to",
    "start": "163140",
    "end": "165599"
  },
  {
    "text": "understand the carbon efficiency of our",
    "start": "165599",
    "end": "167580"
  },
  {
    "text": "application the lower we can drive our",
    "start": "167580",
    "end": "170760"
  },
  {
    "text": "consumed capacity the lower our carbon",
    "start": "170760",
    "end": "172800"
  },
  {
    "text": "impact",
    "start": "172800",
    "end": "174060"
  },
  {
    "text": "we also want to optimize writing and",
    "start": "174060",
    "end": "175980"
  },
  {
    "text": "accessing data to be as efficient as",
    "start": "175980",
    "end": "177780"
  },
  {
    "text": "possible writing more data than",
    "start": "177780",
    "end": "179580"
  },
  {
    "text": "necessary or reading data inefficiently",
    "start": "179580",
    "end": "181500"
  },
  {
    "text": "uses additional resources",
    "start": "181500",
    "end": "184500"
  },
  {
    "text": "try to keep your traffic patterns as",
    "start": "184500",
    "end": "186420"
  },
  {
    "text": "smooth as possible spiky workloads can",
    "start": "186420",
    "end": "188519"
  },
  {
    "text": "be harder to provision for which means",
    "start": "188519",
    "end": "190500"
  },
  {
    "text": "additional resources used",
    "start": "190500",
    "end": "192900"
  },
  {
    "text": "it may also be a good idea to run your",
    "start": "192900",
    "end": "194819"
  },
  {
    "text": "batch jobs during off-peak hours where",
    "start": "194819",
    "end": "196860"
  },
  {
    "text": "less of the Grid's power is being",
    "start": "196860",
    "end": "198300"
  },
  {
    "text": "sourced from less efficient Peak power",
    "start": "198300",
    "end": "200340"
  },
  {
    "text": "plants",
    "start": "200340",
    "end": "202560"
  },
  {
    "text": "let's dive into the area of design",
    "start": "202560",
    "end": "204239"
  },
  {
    "text": "efficiency and how best to query data in",
    "start": "204239",
    "end": "206879"
  },
  {
    "text": "dynamodb",
    "start": "206879",
    "end": "208680"
  },
  {
    "start": "208000",
    "end": "208000"
  },
  {
    "text": "with dynamodb we always want to read",
    "start": "208680",
    "end": "211260"
  },
  {
    "text": "data as efficiently as possible",
    "start": "211260",
    "end": "213300"
  },
  {
    "text": "this has benefits for cost speed and for",
    "start": "213300",
    "end": "216120"
  },
  {
    "text": "sustainability",
    "start": "216120",
    "end": "217560"
  },
  {
    "text": "a key design goal for dynamodb is to",
    "start": "217560",
    "end": "220140"
  },
  {
    "text": "minimize the need for complex compute at",
    "start": "220140",
    "end": "222180"
  },
  {
    "text": "runtime instead we store data in a shape",
    "start": "222180",
    "end": "224519"
  },
  {
    "text": "that's easily retrieved without the need",
    "start": "224519",
    "end": "226379"
  },
  {
    "text": "for complex aggregation operations",
    "start": "226379",
    "end": "229379"
  },
  {
    "text": "if we only need to read one item such as",
    "start": "229379",
    "end": "231840"
  },
  {
    "text": "a key value lookup then the get item API",
    "start": "231840",
    "end": "234420"
  },
  {
    "text": "operation makes the most sense this will",
    "start": "234420",
    "end": "236819"
  },
  {
    "text": "read a maximum of one item to the impact",
    "start": "236819",
    "end": "239220"
  },
  {
    "text": "for CPU and disk i o behind the scenes",
    "start": "239220",
    "end": "241620"
  },
  {
    "text": "is low",
    "start": "241620",
    "end": "242879"
  },
  {
    "text": "if we need to read multiple items though",
    "start": "242879",
    "end": "244920"
  },
  {
    "text": "then we have a choice we can either use",
    "start": "244920",
    "end": "247200"
  },
  {
    "text": "Query scan or batch git item",
    "start": "247200",
    "end": "250500"
  },
  {
    "text": "it's nearly always preferable to use",
    "start": "250500",
    "end": "252780"
  },
  {
    "text": "Query instead of scan because it's a lot",
    "start": "252780",
    "end": "254819"
  },
  {
    "text": "more targeted queries read off of a",
    "start": "254819",
    "end": "256919"
  },
  {
    "text": "single partition which is efficient",
    "start": "256919",
    "end": "258780"
  },
  {
    "text": "because it avoids reading data that's",
    "start": "258780",
    "end": "261060"
  },
  {
    "text": "unnecessary to satisfy your request a",
    "start": "261060",
    "end": "264120"
  },
  {
    "text": "scan reads all of the the data on your",
    "start": "264120",
    "end": "266699"
  },
  {
    "text": "table now in some cases this is",
    "start": "266699",
    "end": "269340"
  },
  {
    "text": "necessary where it makes sense to read",
    "start": "269340",
    "end": "271139"
  },
  {
    "text": "data for your entire table but in most",
    "start": "271139",
    "end": "274020"
  },
  {
    "text": "cases it's a better idea to use a query",
    "start": "274020",
    "end": "276419"
  },
  {
    "text": "that's a lot more targeted and more",
    "start": "276419",
    "end": "277979"
  },
  {
    "text": "efficient",
    "start": "277979",
    "end": "279479"
  },
  {
    "text": "when using a query operation we also",
    "start": "279479",
    "end": "281759"
  },
  {
    "text": "have some different options for",
    "start": "281759",
    "end": "283139"
  },
  {
    "text": "filtering data this can be done with a",
    "start": "283139",
    "end": "285540"
  },
  {
    "text": "key condition expression or a filter",
    "start": "285540",
    "end": "287460"
  },
  {
    "text": "expression Key conditions allow",
    "start": "287460",
    "end": "289919"
  },
  {
    "text": "filtering on the sort key and this is",
    "start": "289919",
    "end": "292020"
  },
  {
    "text": "efficient because not all the data needs",
    "start": "292020",
    "end": "294120"
  },
  {
    "text": "to be read it works like a b tree index",
    "start": "294120",
    "end": "296639"
  },
  {
    "text": "taking advantage of the ordered data set",
    "start": "296639",
    "end": "298680"
  },
  {
    "text": "for a filtered expression though this",
    "start": "298680",
    "end": "301860"
  },
  {
    "text": "operates on the non-key attributes and",
    "start": "301860",
    "end": "304620"
  },
  {
    "text": "we have to read the data from disk",
    "start": "304620",
    "end": "306600"
  },
  {
    "text": "before we apply that filter and once",
    "start": "306600",
    "end": "308880"
  },
  {
    "text": "we've read the data from disk we've used",
    "start": "308880",
    "end": "310919"
  },
  {
    "text": "additional resources so using a key",
    "start": "310919",
    "end": "313320"
  },
  {
    "text": "condition expression is always going to",
    "start": "313320",
    "end": "315120"
  },
  {
    "text": "be more efficient in terms of",
    "start": "315120",
    "end": "317300"
  },
  {
    "text": "sustainability than using a filter",
    "start": "317300",
    "end": "319500"
  },
  {
    "text": "expression",
    "start": "319500",
    "end": "321720"
  },
  {
    "text": "we need to have efficient filtering for",
    "start": "321720",
    "end": "323520"
  },
  {
    "text": "different access patterns and that can",
    "start": "323520",
    "end": "325620"
  },
  {
    "text": "mean creating a global secondary index",
    "start": "325620",
    "end": "327300"
  },
  {
    "text": "to efficiently read from a different",
    "start": "327300",
    "end": "328979"
  },
  {
    "text": "copy of our data this index can have a",
    "start": "328979",
    "end": "331620"
  },
  {
    "text": "different partition key and sort key so",
    "start": "331620",
    "end": "333660"
  },
  {
    "text": "that we can use key condition",
    "start": "333660",
    "end": "334680"
  },
  {
    "text": "Expressions to facilitate a new access",
    "start": "334680",
    "end": "336840"
  },
  {
    "text": "pattern",
    "start": "336840",
    "end": "338039"
  },
  {
    "text": "in order to keep data stored to a",
    "start": "338039",
    "end": "340080"
  },
  {
    "text": "minimum it's recommended to only project",
    "start": "340080",
    "end": "342300"
  },
  {
    "text": "to the data that we need for that",
    "start": "342300",
    "end": "343919"
  },
  {
    "text": "specific access pattern we can also have",
    "start": "343919",
    "end": "346259"
  },
  {
    "text": "sparse gsis where only some of the items",
    "start": "346259",
    "end": "348419"
  },
  {
    "text": "are replicated into the index",
    "start": "348419",
    "end": "350520"
  },
  {
    "text": "idle resources are an easy target for",
    "start": "350520",
    "end": "352979"
  },
  {
    "start": "351000",
    "end": "351000"
  },
  {
    "text": "sustainability improvements we can",
    "start": "352979",
    "end": "354960"
  },
  {
    "text": "utilize cloudwatch metrics to see if we",
    "start": "354960",
    "end": "356820"
  },
  {
    "text": "have any underutilized or unused",
    "start": "356820",
    "end": "358740"
  },
  {
    "text": "resources such as tables or indexes if",
    "start": "358740",
    "end": "361740"
  },
  {
    "text": "there are any resources which are",
    "start": "361740",
    "end": "363120"
  },
  {
    "text": "effectively idle these may be good",
    "start": "363120",
    "end": "364680"
  },
  {
    "text": "candidates for deletion or if there are",
    "start": "364680",
    "end": "366900"
  },
  {
    "text": "resources that are very infrequently",
    "start": "366900",
    "end": "368639"
  },
  {
    "text": "used they may be good candidates for",
    "start": "368639",
    "end": "370259"
  },
  {
    "text": "alternate design patterns",
    "start": "370259",
    "end": "373380"
  },
  {
    "text": "design to meet your slas not necessarily",
    "start": "373380",
    "end": "376380"
  },
  {
    "text": "to exceed them",
    "start": "376380",
    "end": "377820"
  },
  {
    "text": "with dynamodb we have single region",
    "start": "377820",
    "end": "380280"
  },
  {
    "text": "tables that already have four nines of",
    "start": "380280",
    "end": "382199"
  },
  {
    "text": "availability as an SLA this may be",
    "start": "382199",
    "end": "384720"
  },
  {
    "text": "enough for many workloads some workloads",
    "start": "384720",
    "end": "387180"
  },
  {
    "text": "though may need Global tables for",
    "start": "387180",
    "end": "389160"
  },
  {
    "text": "multi-region replication or to increase",
    "start": "389160",
    "end": "391380"
  },
  {
    "text": "the SLA to five nines but that also",
    "start": "391380",
    "end": "393960"
  },
  {
    "text": "means storing an additional copy of data",
    "start": "393960",
    "end": "395940"
  },
  {
    "text": "and having to replicate rights so make",
    "start": "395940",
    "end": "398699"
  },
  {
    "text": "an evaluation for the different portions",
    "start": "398699",
    "end": "400680"
  },
  {
    "text": "of your application where you need the",
    "start": "400680",
    "end": "402720"
  },
  {
    "text": "additional availability or multi-region",
    "start": "402720",
    "end": "404699"
  },
  {
    "text": "versus where you may be able to decrease",
    "start": "404699",
    "end": "407699"
  },
  {
    "text": "the carbon impact by sticking with a",
    "start": "407699",
    "end": "410039"
  },
  {
    "text": "single region next we have a number of",
    "start": "410039",
    "end": "412080"
  },
  {
    "start": "411000",
    "end": "411000"
  },
  {
    "text": "questions here that we can run through",
    "start": "412080",
    "end": "413940"
  },
  {
    "text": "to help determine how best to optimize",
    "start": "413940",
    "end": "416220"
  },
  {
    "text": "your application for sustainability in",
    "start": "416220",
    "end": "418680"
  },
  {
    "text": "dynamodb",
    "start": "418680",
    "end": "420000"
  },
  {
    "text": "the first is high level is dynamodb the",
    "start": "420000",
    "end": "422819"
  },
  {
    "text": "right tool",
    "start": "422819",
    "end": "424199"
  },
  {
    "text": "we've talked about evaluating if",
    "start": "424199",
    "end": "425940"
  },
  {
    "text": "dynamodb is the right database for your",
    "start": "425940",
    "end": "427620"
  },
  {
    "text": "workload and this is a great starting",
    "start": "427620",
    "end": "428940"
  },
  {
    "text": "point at AWS we want you to pick the",
    "start": "428940",
    "end": "431220"
  },
  {
    "text": "right database for the right job",
    "start": "431220",
    "end": "433680"
  },
  {
    "text": "second can you utilize other serverless",
    "start": "433680",
    "end": "436139"
  },
  {
    "text": "services",
    "start": "436139",
    "end": "437220"
  },
  {
    "text": "dynamodb is serverless which is great",
    "start": "437220",
    "end": "439620"
  },
  {
    "text": "for having low operational overhead it",
    "start": "439620",
    "end": "441720"
  },
  {
    "text": "means that the AWS service team can take",
    "start": "441720",
    "end": "443639"
  },
  {
    "text": "responsibility for making sure that we",
    "start": "443639",
    "end": "445680"
  },
  {
    "text": "use the right machine instances and",
    "start": "445680",
    "end": "448139"
  },
  {
    "text": "improve operational efficiency this",
    "start": "448139",
    "end": "450419"
  },
  {
    "text": "leads to overall sustainability gains in",
    "start": "450419",
    "end": "452880"
  },
  {
    "text": "this question we ask if we can leverage",
    "start": "452880",
    "end": "454500"
  },
  {
    "text": "other serverless services that integrate",
    "start": "454500",
    "end": "456300"
  },
  {
    "text": "well with dynamodb for example can we",
    "start": "456300",
    "end": "458699"
  },
  {
    "text": "use AWS Lambda to read changes from",
    "start": "458699",
    "end": "460620"
  },
  {
    "text": "dynamodb streams",
    "start": "460620",
    "end": "462960"
  },
  {
    "text": "next can you utilize Lambda event",
    "start": "462960",
    "end": "465539"
  },
  {
    "text": "filtering when using Lambda when you're",
    "start": "465539",
    "end": "468300"
  },
  {
    "text": "using Lambda using event filtering",
    "start": "468300",
    "end": "470220"
  },
  {
    "text": "reduces invocations which reduces",
    "start": "470220",
    "end": "472259"
  },
  {
    "text": "compute and improves sustainability",
    "start": "472259",
    "end": "475979"
  },
  {
    "text": "next is how do you monitor your dynamodb",
    "start": "475979",
    "end": "478800"
  },
  {
    "text": "usage",
    "start": "478800",
    "end": "480900"
  },
  {
    "text": "when monitoring dynamodb we can Leverage",
    "start": "480900",
    "end": "483360"
  },
  {
    "text": "cloudwatch",
    "start": "483360",
    "end": "484680"
  },
  {
    "text": "and view relevant statistics such as",
    "start": "484680",
    "end": "486599"
  },
  {
    "text": "consume capacity or provision capacity",
    "start": "486599",
    "end": "488580"
  },
  {
    "text": "for reads and writes these metrics can",
    "start": "488580",
    "end": "490860"
  },
  {
    "text": "be viewed in the AWS console or by",
    "start": "490860",
    "end": "492840"
  },
  {
    "text": "integrating with third-party services",
    "start": "492840",
    "end": "496080"
  },
  {
    "text": "next how do you evaluate the efficiency",
    "start": "496080",
    "end": "498419"
  },
  {
    "text": "of your data model we talked about a lot",
    "start": "498419",
    "end": "500940"
  },
  {
    "text": "of design decisions to improve",
    "start": "500940",
    "end": "502560"
  },
  {
    "text": "efficiency and this question is about",
    "start": "502560",
    "end": "504960"
  },
  {
    "text": "how you evaluate the efficiency of your",
    "start": "504960",
    "end": "507660"
  },
  {
    "text": "application once you've implemented it",
    "start": "507660",
    "end": "510180"
  },
  {
    "text": "one way to do that is inspecting the",
    "start": "510180",
    "end": "512039"
  },
  {
    "text": "return consume capacity metric that can",
    "start": "512039",
    "end": "514080"
  },
  {
    "text": "optionally be returned when you make API",
    "start": "514080",
    "end": "516000"
  },
  {
    "text": "calls",
    "start": "516000",
    "end": "517260"
  },
  {
    "text": "next is how you detect and decommission",
    "start": "517260",
    "end": "519360"
  },
  {
    "text": "unused resources",
    "start": "519360",
    "end": "521159"
  },
  {
    "text": "leverage cloudwatch to identify",
    "start": "521159",
    "end": "522719"
  },
  {
    "text": "resources that are no longer being used",
    "start": "522719",
    "end": "524580"
  },
  {
    "text": "and could be deleted to improve your",
    "start": "524580",
    "end": "526860"
  },
  {
    "text": "sustainability footprint",
    "start": "526860",
    "end": "529019"
  },
  {
    "text": "foreign",
    "start": "529019",
    "end": "530279"
  },
  {
    "text": "how do you archive data to colder",
    "start": "530279",
    "end": "532080"
  },
  {
    "text": "storage",
    "start": "532080",
    "end": "533040"
  },
  {
    "text": "using TTL to expire data is an efficient",
    "start": "533040",
    "end": "535560"
  },
  {
    "text": "way to delete data it doesn't consume",
    "start": "535560",
    "end": "537660"
  },
  {
    "text": "right capacity units on your table and",
    "start": "537660",
    "end": "539940"
  },
  {
    "text": "is a more efficient way to delete data",
    "start": "539940",
    "end": "542519"
  },
  {
    "text": "than doing explicit deletes",
    "start": "542519",
    "end": "544860"
  },
  {
    "text": "we can pick up this expired data on",
    "start": "544860",
    "end": "546540"
  },
  {
    "text": "stream and move it to S3 and maintain a",
    "start": "546540",
    "end": "548580"
  },
  {
    "text": "copy in colder storage",
    "start": "548580",
    "end": "551600"
  },
  {
    "text": "how can you group data together in the",
    "start": "552899",
    "end": "555000"
  },
  {
    "text": "same table that has a similar limited",
    "start": "555000",
    "end": "557279"
  },
  {
    "text": "life",
    "start": "557279",
    "end": "558120"
  },
  {
    "text": "it can be beneficial to group data",
    "start": "558120",
    "end": "559920"
  },
  {
    "text": "together with a similar lifespan because",
    "start": "559920",
    "end": "562200"
  },
  {
    "text": "while deleting items through TTL is an",
    "start": "562200",
    "end": "564540"
  },
  {
    "text": "excellent way to optimize for cost it",
    "start": "564540",
    "end": "566580"
  },
  {
    "text": "still does consume compute resources",
    "start": "566580",
    "end": "568260"
  },
  {
    "text": "even if you're not billed for them",
    "start": "568260",
    "end": "570300"
  },
  {
    "text": "instead if we can delete the whole table",
    "start": "570300",
    "end": "573480"
  },
  {
    "text": "it's not going to consume right capacity",
    "start": "573480",
    "end": "575519"
  },
  {
    "text": "units and it's not going to consume the",
    "start": "575519",
    "end": "577320"
  },
  {
    "text": "same amount of resources in the back end",
    "start": "577320",
    "end": "579120"
  },
  {
    "text": "this is something to be conscious of",
    "start": "579120",
    "end": "580920"
  },
  {
    "text": "during the planning stages of your",
    "start": "580920",
    "end": "582120"
  },
  {
    "text": "application and is potentially a way to",
    "start": "582120",
    "end": "583980"
  },
  {
    "text": "further reduce the carbon footprint for",
    "start": "583980",
    "end": "587339"
  },
  {
    "text": "applications that have a limited life",
    "start": "587339",
    "end": "589500"
  },
  {
    "text": "cycle of data",
    "start": "589500",
    "end": "591839"
  },
  {
    "text": "these questions are designed to",
    "start": "591839",
    "end": "593279"
  },
  {
    "text": "highlight specific areas that could be",
    "start": "593279",
    "end": "594899"
  },
  {
    "text": "improved in your application we hope",
    "start": "594899",
    "end": "597000"
  },
  {
    "text": "they're helpful in meeting your",
    "start": "597000",
    "end": "598019"
  },
  {
    "text": "sustainability goals",
    "start": "598019",
    "end": "599580"
  },
  {
    "text": "please look out for other videos in this",
    "start": "599580",
    "end": "601380"
  },
  {
    "text": "series on best practices for dynamodb",
    "start": "601380",
    "end": "603360"
  },
  {
    "text": "well architected lens",
    "start": "603360",
    "end": "606560"
  }
]