[
  {
    "start": "0",
    "end": "67000"
  },
  {
    "text": "okay we ready to get started hi everybody thanks for coming to this session I'm Tim Hunt senior",
    "start": "1040",
    "end": "7680"
  },
  {
    "text": "product of manager at Amazon S3 I'm glad you're all here I'm looking forward to",
    "start": "7680",
    "end": "13240"
  },
  {
    "text": "talking to you about some new features on S3 there's a new feature we launched today we'll get into some detail and I'm",
    "start": "13240",
    "end": "19039"
  },
  {
    "text": "pretty excited about that we've also got some existing functionality I'll talk to you about these may be some parts you",
    "start": "19039",
    "end": "25640"
  },
  {
    "text": "may be familiar with but many of you probably aren't using these parts to their full potential so I'll share you a",
    "start": "25640",
    "end": "30800"
  },
  {
    "text": "little bit about that let me go ahead and dive",
    "start": "30800",
    "end": "36120"
  },
  {
    "text": "in so here are the topics we're going to cover we're going to start with that new feature S3 event notifications and we'll",
    "start": "37120",
    "end": "43640"
  },
  {
    "text": "spend a fair bit of time going into some detail there then we're going to move on to versioning and life cycle policies we'll",
    "start": "43640",
    "end": "50239"
  },
  {
    "text": "show you how you can use those together in some newer ways and then I'm going to round that out with some top tips for using Amazon",
    "start": "50239",
    "end": "58920"
  },
  {
    "text": "S3 so S3 event notifications just launched",
    "start": "58920",
    "end": "64720"
  },
  {
    "text": "this today as I mentioned it uh was announced during the keynote this morning I'm particularly excited about",
    "start": "64720",
    "end": "71159"
  },
  {
    "start": "67000",
    "end": "67000"
  },
  {
    "text": "this uh and we think that it's going to be very interesting with a lot to a lot of customers this new feature allows you to",
    "start": "71159",
    "end": "77920"
  },
  {
    "text": "deliver notifications to Amazon SNS Amazon sqs and to this new service",
    "start": "77920",
    "end": "84200"
  },
  {
    "text": "Lambda which I'll talk about a bit so I'm going to break that down give you some of the details it starts with",
    "start": "84200",
    "end": "91040"
  },
  {
    "text": "events now events are things that happen in your S3 bucket some action in many",
    "start": "91040",
    "end": "96360"
  },
  {
    "text": "cases for this launch it's going to be events surrounding a new object being created so in many cases you'll think",
    "start": "96360",
    "end": "102920"
  },
  {
    "text": "about this as a put so a put into an S3 object now with this feature you can generate an event",
    "start": "102920",
    "end": "109719"
  },
  {
    "text": "notification with that event notification you can send it to three different locations as I mentioned first",
    "start": "109719",
    "end": "116079"
  },
  {
    "text": "at the top here there's SNS topics SNS simple notification service that's an",
    "start": "116079",
    "end": "121759"
  },
  {
    "text": "AWS service it's a push model it allows you to send alerts to email addresses to",
    "start": "121759",
    "end": "127680"
  },
  {
    "text": "mobile alerts also to http endpoints so that's",
    "start": "127680",
    "end": "133400"
  },
  {
    "text": "SNS the next option here is sqs so sqs topic sqs is simple Q service this is a",
    "start": "133400",
    "end": "141519"
  },
  {
    "text": "really good option if you've got a workflow perhaps you want to trigger in response to an event in S3 you can set",
    "start": "141519",
    "end": "147800"
  },
  {
    "text": "up your worker Fleet to pull those messages off of the queue and work them again really good for triggering",
    "start": "147800",
    "end": "155440"
  },
  {
    "text": "workflows the last one here is this new service Lambda this is really interesting for us at S3 it's a new",
    "start": "155440",
    "end": "161400"
  },
  {
    "text": "compute service just announced today it allows you to take your code and run it",
    "start": "161400",
    "end": "166879"
  },
  {
    "text": "in the cloud with no Administration so what I mean by that is there's no",
    "start": "166879",
    "end": "172040"
  },
  {
    "text": "instances to think about no servers to maintain there's no scaling to think about you just simply write your code",
    "start": "172040",
    "end": "177920"
  },
  {
    "text": "and we run it for you on demand and it's a really good model to match",
    "start": "177920",
    "end": "183080"
  },
  {
    "text": "with event processing so if you have an event that you need to trigger some compute you might want to consider",
    "start": "183080",
    "end": "189120"
  },
  {
    "text": "Lambda it's in preview mode today you can go and sign up hundreds have done that already um and we think it'll be",
    "start": "189120",
    "end": "195640"
  },
  {
    "text": "work work very well for a lot of customers to take those events in S3 and process them in",
    "start": "195640",
    "end": "202599"
  },
  {
    "text": "Lambda so what are the benefits or what's in it for you the big story here is about",
    "start": "205080",
    "end": "210920"
  },
  {
    "start": "206000",
    "end": "206000"
  },
  {
    "text": "integration and we often use the metaphor of building blocks with AWS so we'll talk about S3 as a building block",
    "start": "210920",
    "end": "217680"
  },
  {
    "text": "and ec2 and Dynamo DB and we talk about how you can put these together to build whatever system your application or your",
    "start": "217680",
    "end": "225200"
  },
  {
    "text": "business requires well we've now taken the S3 building block and we've put a new Surface on it it's a new interface you",
    "start": "225200",
    "end": "231799"
  },
  {
    "text": "can now connect S3 to compute to workflows to processes through these new",
    "start": "231799",
    "end": "237519"
  },
  {
    "text": "event notifications and it allows you to think about how you",
    "start": "237519",
    "end": "242840"
  },
  {
    "text": "architect your system or how you design your system a little bit differently you can now take targeted pieces of code",
    "start": "242840",
    "end": "248200"
  },
  {
    "text": "that perform a function processing perhaps on an object or taking an object to the next stage and you can link these",
    "start": "248200",
    "end": "254319"
  },
  {
    "text": "together you can trigger those through event notifications but it's not just for new",
    "start": "254319",
    "end": "260440"
  },
  {
    "text": "applications you can also use this as a really nice way to extend an existing application even in the Legacy",
    "start": "260440",
    "end": "266680"
  },
  {
    "text": "application if you've got a an application that puts some data into S3",
    "start": "266680",
    "end": "272639"
  },
  {
    "text": "you can now do more with that data say for example you wanted to take a final report that gets placed in S3 and you",
    "start": "272639",
    "end": "279639"
  },
  {
    "text": "wanted to parse that put it in a database or maybe put some analysis of that on a dashboard instead of digging",
    "start": "279639",
    "end": "286880"
  },
  {
    "text": "into your existing application or your legacy application and adding complexity there you can now build on top of that",
    "start": "286880",
    "end": "292759"
  },
  {
    "text": "application using an event notification to trigger that processing so we think it's pretty interesting we're talking",
    "start": "292759",
    "end": "298759"
  },
  {
    "text": "about this as event bace Computing um and i' would encourage a lot all of you to think about what that might mean for",
    "start": "298759",
    "end": "304560"
  },
  {
    "text": "the way you you design and extend your systems the next benefit here is",
    "start": "304560",
    "end": "310240"
  },
  {
    "text": "speed so if you want to kick off some processing or sended alert soon after a",
    "start": "310240",
    "end": "316160"
  },
  {
    "text": "change occurs in S3 you can use a notification to trigger that and those typically arrive in less than a second",
    "start": "316160",
    "end": "323199"
  },
  {
    "text": "so pretty quick and then the last benefit here is Simplicity there are are customers today",
    "start": "323199",
    "end": "331319"
  },
  {
    "text": "we know who need to react to events in S3 and they have a couple of ways of doing that one of the ways they do that",
    "start": "331319",
    "end": "337600"
  },
  {
    "text": "is they take S3 and they put a proxy layer in front of it so that all the requests pass through their proxy layer",
    "start": "337600",
    "end": "342880"
  },
  {
    "text": "and that's the way they can capture those events we know other customers have taken to a process of periodically",
    "start": "342880",
    "end": "350000"
  },
  {
    "text": "listing all the objects that are in their bucket compare that to a list previously and any new object they",
    "start": "350000",
    "end": "355759"
  },
  {
    "text": "recognize as newly created and they can then do something about it so these are some options that can work today but now",
    "start": "355759",
    "end": "362600"
  },
  {
    "text": "we've given you a better solution you don't have to think about the scaling issues you might have to for",
    "start": "362600",
    "end": "367800"
  },
  {
    "text": "a proxy you don't have to think about the list listing itself for a very large bucket could be pretty resource",
    "start": "367800",
    "end": "374160"
  },
  {
    "text": "intensive and pretty slow um and it's also those other attempts or those other",
    "start": "374160",
    "end": "380759"
  },
  {
    "text": "other methods can introduce some delays now with event notifications S3",
    "start": "380759",
    "end": "386319"
  },
  {
    "text": "takes care of that part of the puzzle for you we handle the notification",
    "start": "386319",
    "end": "392080"
  },
  {
    "text": "generation so you can just focus on what's really unique or important to your application you can focus solely on",
    "start": "392080",
    "end": "397639"
  },
  {
    "text": "your code which is what you want to have happen when that event occurs we also recognize that while",
    "start": "397639",
    "end": "404280"
  },
  {
    "text": "there are some custom customers who are doing this today many customers probably saw that as as too big a barrier and so",
    "start": "404280",
    "end": "411160"
  },
  {
    "text": "they haven't thought about reacting to events but now that we've made it easy we really are looking forward to seeing",
    "start": "411160",
    "end": "416599"
  },
  {
    "text": "what many of you do",
    "start": "416599",
    "end": "421520"
  },
  {
    "text": "and speaking about what you might do here's some of the examples that we've heard from customers so we've talked to",
    "start": "422400",
    "end": "428120"
  },
  {
    "start": "423000",
    "end": "423000"
  },
  {
    "text": "a number of customers who've been interested in this feature they've helped us uh given us some feedback",
    "start": "428120",
    "end": "433400"
  },
  {
    "text": "along the way and as we've talked to them about how they want to use notifications they've highlighted or as",
    "start": "433400",
    "end": "439840"
  },
  {
    "text": "we've looked across their answers we've identified a couple of main use cases or a couple of main applications so I'll",
    "start": "439840",
    "end": "446599"
  },
  {
    "text": "summarize those here the first one which is one comes up frequently is the idea",
    "start": "446599",
    "end": "451960"
  },
  {
    "text": "of taking a media file and transcoding it in some way so the classic example here is an image file arrives in S3 and",
    "start": "451960",
    "end": "459440"
  },
  {
    "text": "you need to resize it or create a thumbnail you can kick that off with an event notification another option is uh maybe",
    "start": "459440",
    "end": "467879"
  },
  {
    "text": "a video file that a client might be uploading there's another case where you might want to transcode and kick that",
    "start": "467879",
    "end": "473159"
  },
  {
    "text": "off with a notification another class here is",
    "start": "473159",
    "end": "479000"
  },
  {
    "text": "updating data stores so you may have a cache that you use associated with S3",
    "start": "479000",
    "end": "484319"
  },
  {
    "text": "and you know as we often see that the objects that arrive most recently are typically the objects that are most",
    "start": "484319",
    "end": "489639"
  },
  {
    "text": "frequently accessed so you might want to warn the cach with those new objects you might also have data that",
    "start": "489639",
    "end": "495919"
  },
  {
    "text": "you're storing somewhere else maybe in Dynamo DB maybe you're keeping some metadata there or you want to event",
    "start": "495919",
    "end": "502360"
  },
  {
    "text": "notifications gives you a way to kick off that process of updating your other data store when you have a change in",
    "start": "502360",
    "end": "508440"
  },
  {
    "text": "S3 the third category here is is really quite a broad one it's it's similar to",
    "start": "508440",
    "end": "514680"
  },
  {
    "text": "the first one but more generalized this is processing data files or log files when they arrive in S3 I give you an",
    "start": "514680",
    "end": "521599"
  },
  {
    "text": "example of one customer who is really interested in event notifications to talk to as we've been developing them",
    "start": "521599",
    "end": "527600"
  },
  {
    "text": "this is an electronic data interchange company EDI company every day they have millions of files flug through their",
    "start": "527600",
    "end": "534200"
  },
  {
    "text": "system and these files represent transactions from vendors to retailers they're things like invoices and orders",
    "start": "534200",
    "end": "540360"
  },
  {
    "text": "that get processed and when they took a look at event notifications they recognized the opportunity here that",
    "start": "540360",
    "end": "547079"
  },
  {
    "text": "they can change the way they interface with their customers if they teach their vendors and their retailers how to put",
    "start": "547079",
    "end": "552920"
  },
  {
    "text": "objects directly into S3 that can be their touch point for their customers there are lots of tools already that can",
    "start": "552920",
    "end": "560160"
  },
  {
    "text": "work directly with S3 lots of companies know how to use the S3 apis so that's",
    "start": "560160",
    "end": "565240"
  },
  {
    "text": "not a very big burden and it allows S3 to be their touch point for their customer and in fact in their words S3",
    "start": "565240",
    "end": "572880"
  },
  {
    "text": "could be their API so that's pretty interesting for them now they don't have to create their own API and teach people",
    "start": "572880",
    "end": "578399"
  },
  {
    "text": "how to do it they don't have to work as hard as S3 has on things like availability and reliability and",
    "start": "578399",
    "end": "584000"
  },
  {
    "text": "security and durability they can use the S3 API directly so they're really",
    "start": "584000",
    "end": "589079"
  },
  {
    "text": "excited about that a another option here uh in the same category just another example you",
    "start": "589079",
    "end": "595519"
  },
  {
    "text": "might use cloudwatch uh logs and you can have those delivered directly to S3 now",
    "start": "595519",
    "end": "601120"
  },
  {
    "text": "if you want to do some processing when those logs arrives arrive you can do that and then the last General category",
    "start": "601120",
    "end": "608720"
  },
  {
    "text": "here are the object change alerts so particularly if you have a person perhaps that needs to be notified that",
    "start": "608720",
    "end": "614640"
  },
  {
    "text": "there's a work product they need attention for or maybe another manual process you can send that email or that",
    "start": "614640",
    "end": "620640"
  },
  {
    "text": "mobile alert based on the event notification that happens in S3 so again these are some of the ones",
    "start": "620640",
    "end": "627240"
  },
  {
    "text": "some of the uh some of the use cases that our customers have told us about",
    "start": "627240",
    "end": "632399"
  },
  {
    "text": "and we're really though looking forward to seeing what you guys do we keep hearing about interesting ideas and we think this is going to be pretty",
    "start": "632399",
    "end": "638279"
  },
  {
    "text": "interesting for a lot of you too all right I'm going to switch over",
    "start": "638279",
    "end": "643399"
  },
  {
    "text": "to a demo um describe it here first and I'll show",
    "start": "643399",
    "end": "649480"
  },
  {
    "text": "you a little bit more of how I set it up through some screenshots this is going to be that prototypical example I'm going to take",
    "start": "649480",
    "end": "655839"
  },
  {
    "text": "an image that gets put into S3 I'm going to have that generate a not ification I'm going to send it in this case",
    "start": "655839",
    "end": "661480"
  },
  {
    "text": "directly to Lambda we're going to use a little bit of Lambda code that Lambda code is going to create that thumbnail",
    "start": "661480",
    "end": "667639"
  },
  {
    "text": "back in a new bucket in S3 and I'll show you how really easy this is to set",
    "start": "667639",
    "end": "672880"
  },
  {
    "text": "up so I'm going to use some screenshots to show you what the console experience would be like this is now the S3",
    "start": "672880",
    "end": "680120"
  },
  {
    "start": "676000",
    "end": "676000"
  },
  {
    "text": "Management console and this is the panel that you see for events for a",
    "start": "680120",
    "end": "685560"
  },
  {
    "text": "bucket you can set up your configuration here starting by choosing a name I've",
    "start": "685560",
    "end": "690920"
  },
  {
    "text": "just entered my notifications you can choose the events that you want to send notifications on",
    "start": "690920",
    "end": "697399"
  },
  {
    "text": "there's five that you see here again for most customers a lot of the activity is going to be around object created I",
    "start": "697399",
    "end": "704800"
  },
  {
    "text": "could select the parent category that's the the top created all or I could",
    "start": "704800",
    "end": "709920"
  },
  {
    "text": "select individuals so I could select just puts or I could do a combination I could do puts and copies so there's lots",
    "start": "709920",
    "end": "716440"
  },
  {
    "text": "of options here and this one I just select selected the the parent category of all objects",
    "start": "716440",
    "end": "722320"
  },
  {
    "text": "created then I have options of where I want to send my event to so I've got those three options I've mentioned before I've got topics I've got qes and",
    "start": "722320",
    "end": "729160"
  },
  {
    "text": "I've got Lambda functions if I stayed with the SNS topic I could choose the topic here or I could enter one uh paste",
    "start": "729160",
    "end": "736440"
  },
  {
    "text": "one in I'm going to switch over to the the Lambda function and now I have two",
    "start": "736440",
    "end": "741560"
  },
  {
    "text": "more inputs so the first one is the Lambda function AR itself so the AR the",
    "start": "741560",
    "end": "747240"
  },
  {
    "text": "Amazon resource name is the ID of that function you can enter that there",
    "start": "747240",
    "end": "753880"
  },
  {
    "text": "directly and then the next one is the invocation role now the invocation role",
    "start": "755519",
    "end": "761959"
  },
  {
    "text": "for Lambda functions with integration with S3 this is the way we control permissions for that Lambda function",
    "start": "761959",
    "end": "768680"
  },
  {
    "text": "this gives you control over giving granting S3 permission to call that Lambda function on your behalf it's also",
    "start": "768680",
    "end": "776120"
  },
  {
    "text": "the way that we make sure that whoever's hands on here on the console or whoever's using your SDK actually has",
    "start": "776120",
    "end": "782160"
  },
  {
    "text": "permission to give S3 that Authority so there's kind of two steps in that chain and the invocation rle is the way we",
    "start": "782160",
    "end": "788360"
  },
  {
    "text": "manage both of those sets of permissions once I entered that I hit",
    "start": "788360",
    "end": "795320"
  },
  {
    "text": "save you'd see in the console the list of uh no notification configurations",
    "start": "795320",
    "end": "800959"
  },
  {
    "text": "there's just one listed here the one I just created but you can see there's another button there to add another notification so I could create more than",
    "start": "800959",
    "end": "807240"
  },
  {
    "text": "one on the same bucket I could create for example a configuration that said all objects created send that to Lambda",
    "start": "807240",
    "end": "814000"
  },
  {
    "text": "as I've just done and then I could add another one perhaps that said if I lose an RRS object I want to have that",
    "start": "814000",
    "end": "820440"
  },
  {
    "text": "notification go to SNS or someplace else let me walk you through some of the",
    "start": "820440",
    "end": "827240"
  },
  {
    "text": "code now for Lambda Lambda today in preview supports JavaScript and node.js",
    "start": "827240",
    "end": "832880"
  },
  {
    "text": "so this is some node.js um demo",
    "start": "832880",
    "end": "838040"
  },
  {
    "text": "code it starts with setting up some variables so we've got the source bucket",
    "start": "838040",
    "end": "844079"
  },
  {
    "text": "and the source key and the destination bucket and the destination key in a few",
    "start": "844079",
    "end": "849440"
  },
  {
    "text": "minutes I'm going to show you an example notification message body the actual contents of the notification message you",
    "start": "849440",
    "end": "855600"
  },
  {
    "text": "see that's in the or you will see that's in the Json format and of course being in JavaScript",
    "start": "855600",
    "end": "863519"
  },
  {
    "text": "that's very easy to work through this next part is an important",
    "start": "863519",
    "end": "868880"
  },
  {
    "text": "part to to discuss for a couple of minutes I'm doing here what we're calling a sanity check and I'm making",
    "start": "868880",
    "end": "874000"
  },
  {
    "text": "sure that the source bucket and the destination bucket are not the same you might have ideas as to why I'm",
    "start": "874000",
    "end": "880240"
  },
  {
    "text": "doing this so you can and in some cases you may want to set up a situation where",
    "start": "880240",
    "end": "885800"
  },
  {
    "text": "you create a loop the idea being you could have in a bucket a notification when an object arrives that can send the",
    "start": "885800",
    "end": "892480"
  },
  {
    "text": "notification over to maybe some Lambda code that could put an object back in that same bucket of course that's going",
    "start": "892480",
    "end": "897800"
  },
  {
    "text": "to generate another notification so you might in fact in some probably less common cases you might want to do that",
    "start": "897800",
    "end": "903759"
  },
  {
    "text": "you might want to be progressively resizing smaller series of image to a base size or maybe you're working with",
    "start": "903759",
    "end": "909000"
  },
  {
    "text": "naap tiles you want to subdivide in most cases you probably don't want to do that so we're recommending some best",
    "start": "909000",
    "end": "914240"
  },
  {
    "text": "practices to avoid it this one's a really simple one I'm just simply using different",
    "start": "914240",
    "end": "920720"
  },
  {
    "text": "buckets after that I do a quick check based on the key name uh to see if this",
    "start": "922079",
    "end": "927480"
  },
  {
    "text": "is one of the types of files I want to process a JPEG or a PNG and I exit if",
    "start": "927480",
    "end": "932920"
  },
  {
    "text": "it's not and then on this next slide I do the real work with the file so first I'm",
    "start": "932920",
    "end": "939440"
  },
  {
    "text": "going to download it from S3 I'm using the node.js SDK here so",
    "start": "939440",
    "end": "945959"
  },
  {
    "text": "it's pretty simple to do these calls to AWS services so here I I simply download",
    "start": "945959",
    "end": "951720"
  },
  {
    "text": "it then I'm doing the thumbnailing itself we're using image magic Library",
    "start": "951720",
    "end": "956759"
  },
  {
    "text": "which is available in in Lambda so that makes that step rather easy too and then",
    "start": "956759",
    "end": "962759"
  },
  {
    "text": "finally I'm uploading the object back to",
    "start": "962759",
    "end": "967959"
  },
  {
    "text": "S3 all right let me show you this in",
    "start": "967959",
    "end": "972480"
  },
  {
    "text": "action do that and there we go okay so this is now",
    "start": "975759",
    "end": "981880"
  },
  {
    "text": "the live uh S3 console I'm going to go out",
    "start": "981880",
    "end": "987279"
  },
  {
    "text": "here look at my bucket list and I'm going to choose the Lambda demo bucket",
    "start": "987279",
    "end": "993560"
  },
  {
    "text": "I've already I just showed you how you can set up notifications if I looked over here",
    "start": "993560",
    "end": "999399"
  },
  {
    "text": "under events you could see I've got my notification already configured and what I'm going to do is",
    "start": "999399",
    "end": "1006680"
  },
  {
    "text": "I'm going to go in and upload some files now",
    "start": "1006680",
    "end": "1012040"
  },
  {
    "text": "oops but I have to select them okay so I'm going to pick some of my favorite flower",
    "start": "1012040",
    "end": "1017839"
  },
  {
    "text": "pictures and I'm going to upload those through my",
    "start": "1017839",
    "end": "1024199"
  },
  {
    "text": "bucket there you see them and see what an example looks like",
    "start": "1024199",
    "end": "1032360"
  },
  {
    "text": "this is my red flower picture but now if I go back to my buckets and I go back to",
    "start": "1032360",
    "end": "1039000"
  },
  {
    "text": "my resized bucket there they are it's like",
    "start": "1039000",
    "end": "1044640"
  },
  {
    "text": "magic thank you",
    "start": "1044640",
    "end": "1049799"
  },
  {
    "text": "now I realized that I had meant to show you this bucket was empty before I started you're going to have to take my",
    "start": "1049799",
    "end": "1055440"
  },
  {
    "text": "word for that um but trust me it happens just like",
    "start": "1055440",
    "end": "1062280"
  },
  {
    "text": "that it was empty when it started",
    "start": "1062280",
    "end": "1067480"
  },
  {
    "text": "okay let me go back to the",
    "start": "1067520",
    "end": "1072120"
  },
  {
    "text": "slides great I'm going to tell you a little bit more about the notification feature and then we'll uh",
    "start": "1073600",
    "end": "1079919"
  },
  {
    "text": "we'll show you one more demo so the first thing here is there's no additional charge from Amazon S3 for",
    "start": "1079919",
    "end": "1085320"
  },
  {
    "text": "event notifications you will pay for any Associated use of ss or sqs or Lambda",
    "start": "1085320",
    "end": "1091120"
  },
  {
    "text": "but again no additional charge from S3 as you saw when I configured this you",
    "start": "1091120",
    "end": "1096720"
  },
  {
    "text": "do it at the Bucket Level so you can have a set of configurations perhaps puts going one place in this bucket puts",
    "start": "1096720",
    "end": "1102960"
  },
  {
    "text": "going someplace else in another bucket again it's at that bucket level and you saw the event types that",
    "start": "1102960",
    "end": "1110679"
  },
  {
    "text": "were supporting at launch the first floor put post copy multiart complete",
    "start": "1110679",
    "end": "1116520"
  },
  {
    "text": "those are the ones that are associated with objects created those are probably the ones you'll use most often R RS",
    "start": "1116520",
    "end": "1122679"
  },
  {
    "text": "object lost if Amazon or AWS S3 detects that we've lost one of",
    "start": "1122679",
    "end": "1129039"
  },
  {
    "text": "your RS objects this is an event that'll get fired couple more points here one's",
    "start": "1129039",
    "end": "1136080"
  },
  {
    "text": "highly reliable so this is designed for 99 of reliability with at least once",
    "start": "1136080",
    "end": "1141960"
  },
  {
    "text": "delivery that means that it'll be a very rare occurrence that you'll have an object for example put into S3 bucket",
    "start": "1141960",
    "end": "1148200"
  },
  {
    "text": "and not receive that notification also very rarely but you could have some cases where you have one",
    "start": "1148200",
    "end": "1153960"
  },
  {
    "text": "put and you get multiple notifications so you'll have to design for those and then the last Point here is",
    "start": "1153960",
    "end": "1161000"
  },
  {
    "text": "that the destination needs to be in the same region as your S3 bucket so if I've got an S3 bucket in say our Oregon",
    "start": "1161000",
    "end": "1167960"
  },
  {
    "text": "region and I want to send that to a Lambda function I'll have to have that Lambda function in that same Oregon",
    "start": "1167960",
    "end": "1174520"
  },
  {
    "text": "region we do that for reliability and some performance",
    "start": "1174520",
    "end": "1180679"
  },
  {
    "text": "reasons I mentioned that the contents of the notification are in Json format so",
    "start": "1181960",
    "end": "1188080"
  },
  {
    "text": "here's a quick sample of that we have by the way talked to the other teams around",
    "start": "1188080",
    "end": "1193799"
  },
  {
    "text": "S3 I'm sorry around AWS uh so we've adopted a stand standard",
    "start": "1193799",
    "end": "1199039"
  },
  {
    "text": "here we've got a standard overall framework so if you're working with other services and other services are going to continue to adopt uh event",
    "start": "1199039",
    "end": "1206240"
  },
  {
    "text": "based features you'll see some commonality here in the",
    "start": "1206240",
    "end": "1211039"
  },
  {
    "text": "format so if you look here oops don't do that if you look here",
    "start": "1211360",
    "end": "1216919"
  },
  {
    "text": "we've got at the top some standard information about the event uh what region it was in what the event was this",
    "start": "1216919",
    "end": "1224120"
  },
  {
    "text": "is an object created put subtype some information about the request the source",
    "start": "1224120",
    "end": "1229760"
  },
  {
    "text": "IP address um some of the response Header information and then for S3 some",
    "start": "1229760",
    "end": "1235600"
  },
  {
    "text": "of the more interesting information is in this S3 block so we've got information about the bucket what its",
    "start": "1235600",
    "end": "1242120"
  },
  {
    "text": "name is uh who its owner is and the bucket on we've got information about the object so we've got the key the size",
    "start": "1242120",
    "end": "1249799"
  },
  {
    "text": "and the E tag I'm going to pause for a minute here on the E tag a question that",
    "start": "1249799",
    "end": "1255039"
  },
  {
    "text": "comes up for customers or from customers as we talked about this is what about the consistency model S3's eventual",
    "start": "1255039",
    "end": "1261240"
  },
  {
    "text": "consistency model well this feature Works within that same existing eventual consistency model that we have at S3 and",
    "start": "1261240",
    "end": "1267760"
  },
  {
    "text": "what that means is that you could have an object in S3 you could overwrite that object with a new put that generates a",
    "start": "1267760",
    "end": "1274559"
  },
  {
    "text": "notification and then when your code goes to get that object it's possible with eventual consider eventual uh",
    "start": "1274559",
    "end": "1280640"
  },
  {
    "text": "consistency you might get the previous version e tag is one tool that we give you that you can compare the E tag",
    "start": "1280640",
    "end": "1287600"
  },
  {
    "text": "that's in the notification message with the object that you might get out of S3 to see if to save one another thing to",
    "start": "1287600",
    "end": "1293440"
  },
  {
    "text": "consider for eventual consistency is to use versioning if you want to make sure you're getting the same version or that you need stronger",
    "start": "1293440",
    "end": "1301158"
  },
  {
    "text": "consistency okay let me go into my next demo so the first one I showed you was",
    "start": "1301440",
    "end": "1306600"
  },
  {
    "start": "1304000",
    "end": "1304000"
  },
  {
    "text": "using lambed directly again going to be a great choice for a lot of use cases but I also wanted to show you a use case",
    "start": "1306600",
    "end": "1312640"
  },
  {
    "text": "that uses sqs and Java because these are also good use cases so in this example I'm going to",
    "start": "1312640",
    "end": "1319760"
  },
  {
    "text": "take another object that gets put into a S3 bucket as I said I'm going to use sqs",
    "start": "1319760",
    "end": "1326200"
  },
  {
    "text": "as the message bus here so notifications going to sqs then we're going to have a bit of java code you you see there in",
    "start": "1326200",
    "end": "1332279"
  },
  {
    "text": "the middle that's going to be pulling those messages off of the que it's then going to be pulling the object out of S3",
    "start": "1332279",
    "end": "1339559"
  },
  {
    "text": "it'll be looking at the data in the object putting some of that in Dynamo DB again thumbnailing and putting that back",
    "start": "1339559",
    "end": "1345440"
  },
  {
    "text": "into the S3 bucket and then finally over on the right hand side we have a web page that we're going to use to display",
    "start": "1345440",
    "end": "1353880"
  },
  {
    "text": "it so let me show you some of the demo code here this is the main Loop of the",
    "start": "1354480",
    "end": "1360760"
  },
  {
    "text": "demo code is it's really quite simple it starts first with pulling the sqsq to",
    "start": "1360760",
    "end": "1366480"
  },
  {
    "start": "1361000",
    "end": "1361000"
  },
  {
    "text": "get the messages and then processes and then processes those",
    "start": "1366480",
    "end": "1373200"
  },
  {
    "text": "messages and you can see this is where the real work happen so on the next slide we'll go into more detail for that",
    "start": "1373200",
    "end": "1379000"
  },
  {
    "text": "step and then simply deletes the message after it's been processed so then that process message",
    "start": "1379000",
    "end": "1389039"
  },
  {
    "text": "method this one starts by parsing that notification message pulling out some of",
    "start": "1389640",
    "end": "1394840"
  },
  {
    "text": "the variables we want to set up again bucket name object name thumbnail name we have a separate function here that",
    "start": "1394840",
    "end": "1400400"
  },
  {
    "text": "parses the the Json and then we can pull out that information then we do another check to",
    "start": "1400400",
    "end": "1407159"
  },
  {
    "text": "see if potentially we're in another one of these looping situations in this case",
    "start": "1407159",
    "end": "1412440"
  },
  {
    "text": "we've purposely chosen an example where we're using the same bucket you may or may not want to do that but if you do",
    "start": "1412440",
    "end": "1418520"
  },
  {
    "text": "this is an option to avoid that looping if you want to in this case we're using a naming convention so when we create",
    "start": "1418520",
    "end": "1425520"
  },
  {
    "text": "our thumbnails we're going to give them a prefix and then when we check each notification we're going to see if that",
    "start": "1425520",
    "end": "1431720"
  },
  {
    "text": "object already has that prefix if it already has a prefix we know it's a thumbnail we created so we're just going",
    "start": "1431720",
    "end": "1436760"
  },
  {
    "text": "to discard that that message we're going to exit from that one once we're sure we have the right",
    "start": "1436760",
    "end": "1442919"
  },
  {
    "text": "object type you want to deal with we're going to download the object from",
    "start": "1442919",
    "end": "1448279"
  },
  {
    "text": "S3 and then here in this second page where we do most of the work first we're",
    "start": "1448279",
    "end": "1453679"
  },
  {
    "text": "going to get the GPS location data out of the exf data that's part of that",
    "start": "1453679",
    "end": "1459919"
  },
  {
    "text": "file then we're going to put some information about this photo into Don DB",
    "start": "1460480",
    "end": "1466080"
  },
  {
    "text": "DB so we're going to get the bucket name we're going to get the object uh the GPS location and we're going to put in a u a",
    "start": "1466080",
    "end": "1472080"
  },
  {
    "text": "URL there for some easy access later after that we're going to generate",
    "start": "1472080",
    "end": "1478080"
  },
  {
    "text": "that thumbnail and put it back in that same S3 bucket and then lastly there's actually",
    "start": "1478080",
    "end": "1484799"
  },
  {
    "text": "a second sqsq I didn't mention up front this one is used to trigger the web page that displays the results so that page",
    "start": "1484799",
    "end": "1491760"
  },
  {
    "text": "knows it's got a new object to display all right let me set up for this",
    "start": "1491760",
    "end": "1499039"
  },
  {
    "text": "next",
    "start": "1499039",
    "end": "1501360"
  },
  {
    "text": "demo so I'm actually running the Java code here in Eclipse locally you could",
    "start": "1506679",
    "end": "1512240"
  },
  {
    "text": "of course run it in ec2 as or many other places as was",
    "start": "1512240",
    "end": "1517480"
  },
  {
    "text": "shown and let me switch over there you go okay so I'm back here",
    "start": "1518880",
    "end": "1525720"
  },
  {
    "text": "in my S3 console and here I'm going to choose a different folder which is my",
    "start": "1525720",
    "end": "1531799"
  },
  {
    "text": "Geo Pictures folder so this is this starts empty",
    "start": "1531799",
    "end": "1537480"
  },
  {
    "text": "again uh I could show you quickly in the properties panel I've got this one set up to go to sqs you can see the sqsq",
    "start": "1537480",
    "end": "1545960"
  },
  {
    "text": "that it's set up for and I'm going to pick a number of",
    "start": "1545960",
    "end": "1553960"
  },
  {
    "text": "files",
    "start": "1557240",
    "end": "1560240"
  },
  {
    "text": "and start the uploads okay here they come I'm going to flip over here to my web page and you",
    "start": "1566039",
    "end": "1573279"
  },
  {
    "text": "can see as they're uploaded they're kicking off notifications going through that processing of creating the",
    "start": "1573279",
    "end": "1578799"
  },
  {
    "text": "thumbnail getting into Dynamo DB and displaying those images right here in on",
    "start": "1578799",
    "end": "1584480"
  },
  {
    "text": "the map pretty cool huh",
    "start": "1584480",
    "end": "1590240"
  },
  {
    "text": "okay so I want to show you one more thing with this",
    "start": "1592279",
    "end": "1597000"
  },
  {
    "text": "demo and here it's not just because I want to have a selfie of myself on stage",
    "start": "1598159",
    "end": "1603840"
  },
  {
    "text": "at reinvent everyone smiling all right so the point here is",
    "start": "1603840",
    "end": "1611200"
  },
  {
    "text": "that I'm using standard Android phone and I've got a basic uh S3 app this is nothing special",
    "start": "1611200",
    "end": "1619200"
  },
  {
    "text": "for my demo it's just a basic S3 app downloaded from the App Store and I can",
    "start": "1619200",
    "end": "1624360"
  },
  {
    "text": "have this app upload to that same bucket so as I find it and I'll in my",
    "start": "1624360",
    "end": "1632840"
  },
  {
    "text": "tests of this I will warn you the connection here is really slow so this may take some time to",
    "start": "1632840",
    "end": "1640200"
  },
  {
    "text": "upload here it goes oh it's going better and there it",
    "start": "1640200",
    "end": "1647159"
  },
  {
    "text": "is not not the best",
    "start": "1647159",
    "end": "1655039"
  },
  {
    "text": "selfie okay thanks so again it's a it's a standard tool nothing customized but this is an example kind of back to that",
    "start": "1655919",
    "end": "1662559"
  },
  {
    "text": "EDI example where you can take an existing tool and you can because it knows how to use S3 you can now",
    "start": "1662559",
    "end": "1668159"
  },
  {
    "text": "integrate it into your workflow and into your application",
    "start": "1668159",
    "end": "1674399"
  },
  {
    "text": "okay okay so a couple key takeaways again uh event-based Computing",
    "start": "1676600",
    "end": "1683840"
  },
  {
    "text": "we're pretty excited about this at AWS we think you ought to think about how you can maybe change your applications",
    "start": "1683840",
    "end": "1689760"
  },
  {
    "text": "existing applications or add functionality to uh existing ones or create new ones opens up some some",
    "start": "1689760",
    "end": "1695919"
  },
  {
    "text": "interesting possibilities three destination choices SS sqs and Lambda",
    "start": "1695919",
    "end": "1702480"
  },
  {
    "text": "and again no additional charge from Amazon S3 for this feature okay let's move on",
    "start": "1702480",
    "end": "1708720"
  },
  {
    "text": "I'm going to talk now about versing and life cycle policies these are two features that have been for S3 for a while um but I'm",
    "start": "1708720",
    "end": "1717000"
  },
  {
    "text": "going to give you some of the basics and I'm going to show you something that's newer about how you can use them together so verting first the purpose of",
    "start": "1717000",
    "end": "1723240"
  },
  {
    "text": "verting is to protect you from accidental overwrites or deletes and you can do this without any performance",
    "start": "1723240",
    "end": "1728760"
  },
  {
    "text": "penalty that means that you can have a bucket with verik enabled and you get the same performance as a bucket without ver enabled the way ver IG works is that",
    "start": "1728760",
    "end": "1737120"
  },
  {
    "text": "it creates a new version for every new object so if you've got an object at S3 and you create a new object or you",
    "start": "1737120",
    "end": "1743080"
  },
  {
    "text": "upload a new object for the same key instead of deleting that first one of replacing it you get multiple versions",
    "start": "1743080",
    "end": "1748720"
  },
  {
    "text": "do we keep all of them in a similar fashion when you have version enabled and you and you issue a delete we don't",
    "start": "1748720",
    "end": "1754919"
  },
  {
    "text": "actually delete the version We maintain it but we put a delete marker on top so that the system knows it's been deleted",
    "start": "1754919",
    "end": "1761320"
  },
  {
    "text": "logically but in uh the versioning space there's still a version so you can recover so this gives you the the",
    "start": "1761320",
    "end": "1768279"
  },
  {
    "text": "ability to um easily retrieve an object that you've deleted or to roll back to a",
    "start": "1768279",
    "end": "1774440"
  },
  {
    "text": "previous version if you've overwritten by mistake it's helpful for you guys to know that there are three different",
    "start": "1774440",
    "end": "1780880"
  },
  {
    "text": "modes now for a bucket in terms of versioning there's the default mode with",
    "start": "1780880",
    "end": "1786080"
  },
  {
    "text": "versioning turned off this is the standard Behavior you'd expect from S3 if you put an object into the same key",
    "start": "1786080",
    "end": "1792240"
  },
  {
    "text": "you overwrite the same space and the previous ones are lost similarly if you delete an object that object is deleted",
    "start": "1792240",
    "end": "1797679"
  },
  {
    "text": "and it's lost loss that's the default Behavior again with versioning turned on or enabled you get that behavior where",
    "start": "1797679",
    "end": "1803519"
  },
  {
    "text": "you get multiple versions and you get delete markers once you've got versioning turned on you can also go to",
    "start": "1803519",
    "end": "1809240"
  },
  {
    "text": "a versioning suspended State when you go to versioning suspended State any version you've already created stays",
    "start": "1809240",
    "end": "1815320"
  },
  {
    "text": "it's still there it's protected but we don't create new versions it's back to that that default Behavior where you'll",
    "start": "1815320",
    "end": "1821600"
  },
  {
    "text": "overwrite the same key um as if versioning were not turned on so that's",
    "start": "1821600",
    "end": "1826960"
  },
  {
    "text": "versioning the next feature life cycle policies",
    "start": "1826960",
    "end": "1832559"
  },
  {
    "text": "this also has been around for a while give you a quick overview so it allows you to do automatic teering to a",
    "start": "1832559",
    "end": "1838720"
  },
  {
    "text": "different storage class and also allows you to control cost and it does that through two different actions one is",
    "start": "1838720",
    "end": "1846679"
  },
  {
    "text": "transitions a transition is when we archive an object from S3 to Glacier and",
    "start": "1846679",
    "end": "1852880"
  },
  {
    "text": "you can do these life cycle rules on a Time basis so you can say for example 30",
    "start": "1852880",
    "end": "1858279"
  },
  {
    "text": "days after each object is created in my bucket I want it to transition to Glacier by the way if you're not that",
    "start": "1858279",
    "end": "1864159"
  },
  {
    "text": "familiar with Glacier it's a archiving specific storage class um it has a",
    "start": "1864159",
    "end": "1869480"
  },
  {
    "text": "somewhat different access approach in that you request and then wait for the object to be available but it's at a",
    "start": "1869480",
    "end": "1874880"
  },
  {
    "text": "much lower cost getting back to PO life cycle policies expiration is the other option",
    "start": "1874880",
    "end": "1881600"
  },
  {
    "text": "expiration is really a delete so you can for example you can set up a life cycle policy that says I want want to delete",
    "start": "1881600",
    "end": "1888639"
  },
  {
    "text": "every object when it becomes 90 days old for example in this bucket and you can do those two things together you could",
    "start": "1888639",
    "end": "1894799"
  },
  {
    "text": "say maybe I've got my logs and I want to keep them readily available for 90 days after 90 days I want to Archive them I",
    "start": "1894799",
    "end": "1901799"
  },
  {
    "text": "still want to have them but I don't need to access them that often so I'll save some money and then after a year maybe they've exceeded their usefulness and I",
    "start": "1901799",
    "end": "1908320"
  },
  {
    "text": "just want to delete them so you can stay you can set up that kind of staging and then the last Point here is",
    "start": "1908320",
    "end": "1914080"
  },
  {
    "text": "that life cycle control can happen at the prefixed level so you can have objects in your log prefix have one set",
    "start": "1914080",
    "end": "1920679"
  },
  {
    "text": "of rules and maybe objects in your data prefix have a different set of rules but what's newer about these two",
    "start": "1920679",
    "end": "1927480"
  },
  {
    "text": "features is how you can use them together now and then we've added some",
    "start": "1927480",
    "end": "1934200"
  },
  {
    "text": "some functionality to life cycle policies in particular back in May of this year that allows you to use those",
    "start": "1934200",
    "end": "1940679"
  },
  {
    "text": "on the non-current versions with these two things together you can create what",
    "start": "1940679",
    "end": "1946159"
  },
  {
    "text": "you might call a recycling B that has automatic cleaning so we get customers who call us",
    "start": "1946159",
    "end": "1952639"
  },
  {
    "text": "every once in a while somewhat panicked saying I've deleted my object how can I get it back or I had a bug in my",
    "start": "1952639",
    "end": "1958840"
  },
  {
    "text": "software and I've overwritten all my all my data what can I do and there's not a lot that they can do at that stage but",
    "start": "1958840",
    "end": "1965440"
  },
  {
    "text": "this gives you a way that you can give yourselves a kind of a safety debt a way that you could recover from a situation",
    "start": "1965440",
    "end": "1971720"
  },
  {
    "text": "like that so versioning really versioning is what gives you the recycling bin it maintains those",
    "start": "1971720",
    "end": "1977080"
  },
  {
    "text": "versioning so you can recall those objects if you've deleted them or if you've overwritten them and then life",
    "start": "1977080",
    "end": "1982240"
  },
  {
    "text": "cycle policies as I said before we've now extended those so they don't just work on the current version but they can",
    "start": "1982240",
    "end": "1987840"
  },
  {
    "text": "work on these versions that are behind the scenes the ones that are in your recycling bin and you can decide how",
    "start": "1987840",
    "end": "1993960"
  },
  {
    "text": "long you want to keep them so you can Define how long your window is you might say I want to have this recoverability",
    "start": "1993960",
    "end": "1999120"
  },
  {
    "text": "for seven days or for 30 days or whatever suits your your",
    "start": "1999120",
    "end": "2004638"
  },
  {
    "text": "interest okay I'm going to show you quickly how",
    "start": "2006760",
    "end": "2012519"
  },
  {
    "text": "you can uh set up this uh recycling bin type functionality I'm going to use some",
    "start": "2012519",
    "end": "2018600"
  },
  {
    "text": "screenshots again in the Management console so I've got a bucket here my recycle bin bucket and if I open up on",
    "start": "2018600",
    "end": "2027279"
  },
  {
    "text": "the right here my versioning panel you can see versioning is turned off there's a big blue button you can click to",
    "start": "2027279",
    "end": "2033559"
  },
  {
    "text": "enable versioning it's as simple as that now versioning is turned on as I said when versioning is turned on you can",
    "start": "2033559",
    "end": "2038960"
  },
  {
    "text": "suspend it so there's another equally big blue button so you can suspend versioning or go back and forth but",
    "start": "2038960",
    "end": "2045000"
  },
  {
    "text": "that's as simple as version is to turn on if I then look down at my life cycle",
    "start": "2045000",
    "end": "2050040"
  },
  {
    "text": "panel towards the bottom I can add my life cycle rules this bucket doesn't have it to begin",
    "start": "2050040",
    "end": "2056520"
  },
  {
    "text": "with but I can click by that green button to add a rule and that gives me a three-step",
    "start": "2056520",
    "end": "2062800"
  },
  {
    "text": "process to define a new life cycle policy so first I decide I want the rule to apply to the whole bucket or just a",
    "start": "2062800",
    "end": "2069240"
  },
  {
    "text": "prefix then I can choose what actions I want to take both on that current version and on the previous",
    "start": "2069240",
    "end": "2075079"
  },
  {
    "text": "versions in both of these cases I have four choices one is really to do nothing the first is to Archive only after that",
    "start": "2075079",
    "end": "2082800"
  },
  {
    "text": "I could expire only or I could have that staging archive then expire in this case",
    "start": "2082800",
    "end": "2087919"
  },
  {
    "text": "we're going to leave do nothing for the current version and when we get to the previous version we're going to say we",
    "start": "2087919",
    "end": "2093320"
  },
  {
    "text": "want to permanently delete it and we're going to say we want to do that in seven",
    "start": "2093320",
    "end": "2099359"
  },
  {
    "text": "days so then I just give it a name review it save it and there you have it",
    "start": "2099359",
    "end": "2105280"
  },
  {
    "text": "I've got my uh life cycle policy set up for this bucket so now I've got both versioning and my life cycle policy and",
    "start": "2105280",
    "end": "2112440"
  },
  {
    "text": "I'll show you a little bit about what versioning looks like in the console by",
    "start": "2112440",
    "end": "2117520"
  },
  {
    "text": "the way everything I've done you could also do through the SDK so back through all my demos and the thing I'm doing now",
    "start": "2117520",
    "end": "2122680"
  },
  {
    "text": "all these things are of course accessible through your sdks as well but here's now that slide or that slide",
    "start": "2122680",
    "end": "2130079"
  },
  {
    "text": "here's now that bucket where I've got two objects and this is now a version bucket so if you look at the top you see",
    "start": "2130079",
    "end": "2135520"
  },
  {
    "text": "this hide show control and if I click on show I see a little bit more what's happening behind the scenes for versions",
    "start": "2135520",
    "end": "2142440"
  },
  {
    "text": "now you can see I actually have three objects in this bucket it's just that the bottom one whoops pardon me just",
    "start": "2142440",
    "end": "2148040"
  },
  {
    "text": "that the bottom one had previously been deleted so there was a delete marker on",
    "start": "2148040",
    "end": "2153160"
  },
  {
    "text": "top the top one you can see I've had two versions that I've one written on top of the other and I can keep both versions",
    "start": "2153160",
    "end": "2160400"
  },
  {
    "text": "or roll back to either one so that's versioning life",
    "start": "2160400",
    "end": "2166200"
  },
  {
    "text": "cycles okay so now let's round this out with some top tips for Amazon",
    "start": "2166200",
    "end": "2171920"
  },
  {
    "text": "S3 the first one's a little bit of a gimme I know I just talked about this in detail but we know that a lot of",
    "start": "2171920",
    "end": "2178480"
  },
  {
    "start": "2176000",
    "end": "2176000"
  },
  {
    "text": "customers perhaps aren't aware of this and we think it'll make a lot of sense for a lot of customers so one more plug",
    "start": "2178480",
    "end": "2183800"
  },
  {
    "text": "for version of life cycle policies give yourself that recycling bin that that you can also control and manage the",
    "start": "2183800",
    "end": "2192039"
  },
  {
    "text": "cost the next tip is to understand the three serverside encryption modes we now have on S3 and we've got a new one that",
    "start": "2192240",
    "end": "2198760"
  },
  {
    "start": "2194000",
    "end": "2194000"
  },
  {
    "text": "was just uh announced yesterday so first is the original server side encryption",
    "start": "2198760",
    "end": "2204200"
  },
  {
    "text": "model where Amazon S3 manages your key that's simple check the box and you've",
    "start": "2204200",
    "end": "2209359"
  },
  {
    "text": "got encryption at rest for your data the second option was in response to some customers who wanted to manage",
    "start": "2209359",
    "end": "2216240"
  },
  {
    "text": "their own keys so they didn't want to take on the burden of creating a library or using a library to do the encryption",
    "start": "2216240",
    "end": "2224079"
  },
  {
    "text": "client side but they still wanted to be able to control their keys so we've we've offered this now service side",
    "start": "2224079",
    "end": "2229319"
  },
  {
    "text": "encryption with customer provided keys in this mode you provide your encryption",
    "start": "2229319",
    "end": "2234400"
  },
  {
    "text": "key as you put an object or as you get an object S3 does the encrypting and the decrypting but again you control your",
    "start": "2234400",
    "end": "2242440"
  },
  {
    "text": "keys and then there's the new Option this was announced yesterday during the Keynote the new service AWS Key",
    "start": "2242440",
    "end": "2249680"
  },
  {
    "text": "Management Service or KMS S3 is now integrated as another option for server side encryption with",
    "start": "2249680",
    "end": "2256280"
  },
  {
    "text": "KMS KMS gives you some some added benefits one of the the one of the",
    "start": "2256280",
    "end": "2261319"
  },
  {
    "text": "biggest ones is permissions that you can control on those keys so KMS again if",
    "start": "2261319",
    "end": "2266400"
  },
  {
    "text": "you didn't see the keynote it's a new service across AWS that allows you to centrally create and control your",
    "start": "2266400",
    "end": "2273040"
  },
  {
    "text": "encryption encryption Keys across AWS services",
    "start": "2273040",
    "end": "2278119"
  },
  {
    "text": "so in KMS you can control the permission of that encryption key which means for",
    "start": "2278119",
    "end": "2283960"
  },
  {
    "text": "your sensitive data you now can have two layers of protection you have both the",
    "start": "2283960",
    "end": "2289040"
  },
  {
    "text": "ACC access permissions for S3 itself which we've always had but you also have",
    "start": "2289040",
    "end": "2294520"
  },
  {
    "text": "separate permissions on using the key and if somebody wants to get the object out of S3 they need to have both",
    "start": "2294520",
    "end": "2300920"
  },
  {
    "text": "permissions so it's an extra layer of of protection or extra layer of control there you also get with KMS auditing of",
    "start": "2300920",
    "end": "2307520"
  },
  {
    "text": "your key use so if you want to see when your keys were used um and also if you",
    "start": "2307520",
    "end": "2313160"
  },
  {
    "text": "want to see when your keys were tempted to be used but but we rejected on permission basis you can see that",
    "start": "2313160",
    "end": "2318640"
  },
  {
    "text": "through the KMS service the next tip is detailed billly",
    "start": "2318640",
    "end": "2326680"
  },
  {
    "start": "2325000",
    "end": "2325000"
  },
  {
    "text": "reports so we periodically hear from customers I had one yesterday actually had said how can I get data on my usage",
    "start": "2326680",
    "end": "2333839"
  },
  {
    "text": "down at the Bucket Level for what's at S3 you could of course do this programmatically for some very large",
    "start": "2333839",
    "end": "2339800"
  },
  {
    "text": "buckets that can be kind of resource intensive but turns out you already have an option which is detailed billly",
    "start": "2339800",
    "end": "2346880"
  },
  {
    "text": "reports these provide object count storage in gigabytes requests data",
    "start": "2346880",
    "end": "2353280"
  },
  {
    "text": "transfer usage and they do this down at the Bucket Level to get to them you need to start",
    "start": "2353280",
    "end": "2359920"
  },
  {
    "text": "at the billing and cost Management console and you'll find a section there on the left for preferences and you can",
    "start": "2359920",
    "end": "2365640"
  },
  {
    "text": "turn on these detailed billing reports when you do that you can ask to get",
    "start": "2365640",
    "end": "2370680"
  },
  {
    "text": "those reports delivered directly to an S3 bucket now if you're thinking about my earlier presentation you could of",
    "start": "2370680",
    "end": "2376680"
  },
  {
    "text": "course kick off a notification to process that little plug for events um",
    "start": "2376680",
    "end": "2382319"
  },
  {
    "text": "the other tip I'll give you here is that when I tell some customers this they say no no no there isn't bucket detail in there but but there is and what you need",
    "start": "2382319",
    "end": "2388960"
  },
  {
    "text": "to look for is the reports you can download so there's some you can download through the console there's others you can have directly put into S3",
    "start": "2388960",
    "end": "2396760"
  },
  {
    "text": "if you want the most detailed Reports look for the ones that you can download from the billing",
    "start": "2396760",
    "end": "2402480"
  },
  {
    "text": "console okay the next tip here is restricting deletes so if you have data",
    "start": "2404760",
    "end": "2410400"
  },
  {
    "start": "2405000",
    "end": "2405000"
  },
  {
    "text": "that you're particularly sensitive about it getting deleted you can start with a bucket policy that restricts deletes",
    "start": "2410400",
    "end": "2416560"
  },
  {
    "text": "just limits who or perhaps allows nobody to issue a delete request and that's a",
    "start": "2416560",
    "end": "2421640"
  },
  {
    "text": "start but you might want to go farther you might think that people who have the permissions set up in your buck maret",
    "start": "2421640",
    "end": "2427760"
  },
  {
    "text": "maybe a little more liberal than you'd like and you might have somebody who don't want to be able to get in and in",
    "start": "2427760",
    "end": "2432800"
  },
  {
    "text": "fact change policies and and make a delete you might want to protect yourself against a malicious user even",
    "start": "2432800",
    "end": "2438880"
  },
  {
    "text": "so if you want to go farther you could enable MFA deletes so MFA multiactor",
    "start": "2438880",
    "end": "2445640"
  },
  {
    "text": "authentication requires additional authentication to either change the versioning policy or to delete a version",
    "start": "2445640",
    "end": "2453720"
  },
  {
    "text": "an object version from S3 once you have MF delete require or",
    "start": "2453720",
    "end": "2458920"
  },
  {
    "text": "delete enabled it requires both the credentials that you would normally use",
    "start": "2458920",
    "end": "2464400"
  },
  {
    "text": "for an S3 request and then a code from a authentication device like one of these",
    "start": "2464400",
    "end": "2470040"
  },
  {
    "text": "fobs as you can see there in order for someone to actually make a delete so really strong protection against",
    "start": "2470040",
    "end": "2478280"
  },
  {
    "text": "deletes and my last slide here is about maximizing performance so we had just",
    "start": "2478760",
    "end": "2484880"
  },
  {
    "start": "2480000",
    "end": "2480000"
  },
  {
    "text": "before this another whole presentation maximizing performance at S3 and they went into more detail PFC 403 if you",
    "start": "2484880",
    "end": "2491839"
  },
  {
    "text": "want to if you didn't attend it if you want to go see it I'm going to give you some highlights here about these two",
    "start": "2491839",
    "end": "2497280"
  },
  {
    "text": "parts uh because really no list of tips for S3 probably would be complete if we didn't touch on these two",
    "start": "2497280",
    "end": "2503440"
  },
  {
    "text": "points the first one is about a key naming scheme and how you want to think about your key naming scheme if you're",
    "start": "2503440",
    "end": "2509319"
  },
  {
    "text": "interested in higher TPS or transactions per second this gets important if you're thinking about TPS above 100 and really",
    "start": "2509319",
    "end": "2517800"
  },
  {
    "text": "S3 can scale many times above this we have customers who routinely have TPS in",
    "start": "2517800",
    "end": "2522960"
  },
  {
    "text": "the many thousands the way S3 does this is by partitioning your key naming space in",
    "start": "2522960",
    "end": "2529640"
  },
  {
    "text": "your bucket so it separates the uh key name into different partitions so it can",
    "start": "2529640",
    "end": "2534839"
  },
  {
    "text": "spread the load of those transactions that happens over time and S3 will do that automatically as it sees",
    "start": "2534839",
    "end": "2541040"
  },
  {
    "text": "your your request rate grow and the way you want to enable that is by giving S3",
    "start": "2541040",
    "end": "2546960"
  },
  {
    "text": "a basis to make those partitions and that's that little bit of Randomness earlier on it can be just a few characters two or four depending on your",
    "start": "2546960",
    "end": "2553920"
  },
  {
    "text": "scheme but that gives S3 the ability to partition efficiently what you want to avoid doing",
    "start": "2553920",
    "end": "2560000"
  },
  {
    "text": "is using something like a date stamp up front so you might have all of yesterday's objects with yesterday's day",
    "start": "2560000",
    "end": "2566040"
  },
  {
    "text": "stamp and today's objects to today's day stamp that essentially makes S3 start over partitioning each day because",
    "start": "2566040",
    "end": "2571240"
  },
  {
    "text": "you're into a new Partition space so you don't want to do that again at a hash or if you want to have a time stamp you can",
    "start": "2571240",
    "end": "2577400"
  },
  {
    "text": "actually reverse it so that your seconds are first that gives some variability so that's key naming and and",
    "start": "2577400",
    "end": "2583400"
  },
  {
    "text": "TPS and then the last one here is multi-art upload multi-art upload allows",
    "start": "2583400",
    "end": "2588599"
  },
  {
    "text": "you to take an S3 object and upload it in Parts you can do these parts in parallel you can do them in any order",
    "start": "2588599",
    "end": "2594800"
  },
  {
    "text": "and when you're done you tell S3 you're complete it'll reassemble your object so it's just one object up at S3 this gives",
    "start": "2594800",
    "end": "2601000"
  },
  {
    "text": "you some benefits of being able to pause and resume you can start before your whole object size is known it also helps",
    "start": "2601000",
    "end": "2608760"
  },
  {
    "text": "you if you've got a network connection which is perhaps not super reliable because if you're uploading a really big",
    "start": "2608760",
    "end": "2614880"
  },
  {
    "text": "object and you have an interruption you might have to start over but if you've got a series of Parts you just need to",
    "start": "2614880",
    "end": "2620079"
  },
  {
    "text": "restart those parts that encounted the errors so it's helpful particularly if you're thinking about maybe uploading from a mobile device so it's encouraged",
    "start": "2620079",
    "end": "2627400"
  },
  {
    "text": "for larger objects and it's actually required for the largest objects 5",
    "start": "2627400",
    "end": "2632480"
  },
  {
    "text": "gigabytes is the biggest single put you can do on S3 but if you divide those uh",
    "start": "2632480",
    "end": "2638400"
  },
  {
    "text": "objects up into multiart puts you can get up to 5 terabytes so much",
    "start": "2638400",
    "end": "2644480"
  },
  {
    "text": "larger the last point I'll say about multi m multiart is that the AWS sdks do",
    "start": "2645720",
    "end": "2652440"
  },
  {
    "text": "this for you automatically so it's not hard it's actually quite simple you might want to think about using it depending on your use",
    "start": "2652440",
    "end": "2659160"
  },
  {
    "text": "case Okay that was it thank you I hope that was useful helpful I",
    "start": "2659160",
    "end": "2666000"
  },
  {
    "text": "appreciate it we will uh have a few minutes if you have any",
    "start": "2666000",
    "end": "2671839"
  },
  {
    "text": "questions",
    "start": "2671839",
    "end": "2674839"
  }
]