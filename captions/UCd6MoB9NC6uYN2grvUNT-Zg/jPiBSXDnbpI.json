[
  {
    "start": "0",
    "end": "83000"
  },
  {
    "text": "hi everyone I'm Francesco Penta and I'm a principal Cloud support engineer at AWS and I'm based out of Dublin Ireland",
    "start": "4500",
    "end": "10080"
  },
  {
    "text": "welcome to AWS support you where are the best support experts provide tips to optimize performance in the cloud lower",
    "start": "10080",
    "end": "15660"
  },
  {
    "text": "cost and provide you with the best practices and sign consideration joining me today is Milan and tipu from",
    "start": "15660",
    "end": "21480"
  },
  {
    "text": "AWS support can you give us a quick introduction Milan and tipu hi everybody my name is Milan I'm a",
    "start": "21480",
    "end": "27180"
  },
  {
    "text": "support engineer based in Dallas Texas nice to be here with you and answering my questions today",
    "start": "27180",
    "end": "32279"
  },
  {
    "text": "and IMT Department engineer based in Seattle I've been working with customers",
    "start": "32279",
    "end": "37320"
  },
  {
    "text": "moving workloads and operating on them already Francesco glad to have you here today so today we'll be answering some",
    "start": "37320",
    "end": "44160"
  },
  {
    "text": "questions from repost and we'll be going to focus on the security identity and compliance section but before we get",
    "start": "44160",
    "end": "49920"
  },
  {
    "text": "into the details a quick note to the attendee online so feel free to use the chat window on the right hand side of",
    "start": "49920",
    "end": "55440"
  },
  {
    "text": "your screen to let us know where you're joining us from today and share your thoughts and questions throughout the episode we look forward to hearing from",
    "start": "55440",
    "end": "61140"
  },
  {
    "text": "you we'll also provide a link to our survey so if you'd like to let us know how we did please click the link and",
    "start": "61140",
    "end": "66299"
  },
  {
    "text": "leave your feedback if you have any suggestions or any other episodes that you would like to see and with that said",
    "start": "66299",
    "end": "72659"
  },
  {
    "text": "um Milan can you walk us through what we're going to be talking about today thanks Francesca so today's agenda is",
    "start": "72659",
    "end": "78060"
  },
  {
    "text": "going to be we're going to be reviewing some of the security related questions that the customers have asked us on AWS",
    "start": "78060",
    "end": "83220"
  },
  {
    "start": "83000",
    "end": "916000"
  },
  {
    "text": "repost so the first question of the day is going to be how to get an STS",
    "start": "83220",
    "end": "88320"
  },
  {
    "text": "Regional endpoint in a real scenario and this is one of the questions that one of our customers has asked and was curious",
    "start": "88320",
    "end": "93479"
  },
  {
    "text": "how to get to the regional endpoint using a python SDK but before we get to the answer we're going to put some you",
    "start": "93479",
    "end": "100079"
  },
  {
    "text": "know leveling in terms what the AWS STS is so AWS security token service or AWS",
    "start": "100079",
    "end": "105240"
  },
  {
    "text": "SDS is a service that advanced temporary security credentials and it's actually one of the oldest Services it represents",
    "start": "105240",
    "end": "111180"
  },
  {
    "text": "the base for many use cases that you're used today such as roles and Federation you know the instance profiles and roles",
    "start": "111180",
    "end": "118799"
  },
  {
    "text": "and like other stuff so as I said it's it's a basis of a temporary security credentials but you",
    "start": "118799",
    "end": "124979"
  },
  {
    "text": "know before we go there we need to kind of understand what the temporary security credentials are and when we think about credentials right you have",
    "start": "124979",
    "end": "130979"
  },
  {
    "text": "your standard long-term credentials in form of the you know access key and secret access key when you create an IM",
    "start": "130979",
    "end": "136080"
  },
  {
    "text": "user you would put that into your you know configuration of an SDK or you know your CLI and then you would use those",
    "start": "136080",
    "end": "142680"
  },
  {
    "text": "long-term credentials right but you have to think about all the nuances that come with the long-term credentials now we",
    "start": "142680",
    "end": "148500"
  },
  {
    "text": "have to securely store them we need to make sure they're properly rotated and you know tend to all the best security",
    "start": "148500",
    "end": "153959"
  },
  {
    "text": "practices right and this is where the security token service or AWS STS comes",
    "start": "153959",
    "end": "159000"
  },
  {
    "text": "into play where you know Advanced the temporary security credentials which are by Nature very short-term credentials",
    "start": "159000",
    "end": "164700"
  },
  {
    "text": "they can be configured to last from you know minutes to a couple of hours right and after credentials expire they're no",
    "start": "164700",
    "end": "170700"
  },
  {
    "text": "longer valid so you don't have to think about you know proper rotation strategies right where or long-term",
    "start": "170700",
    "end": "175860"
  },
  {
    "text": "storage because you know they are short term they are dynamically generated so",
    "start": "175860",
    "end": "181080"
  },
  {
    "text": "there's no need to provide any additional context around them so once they expire you know they're gone and",
    "start": "181080",
    "end": "187140"
  },
  {
    "text": "AWS no longer recognizes them however the users can request the news temporary",
    "start": "187140",
    "end": "192480"
  },
  {
    "text": "security credentials when before they expire so that way they can rotate and have a fresh set of credentials to do",
    "start": "192480",
    "end": "198840"
  },
  {
    "text": "not to interrupt their work and once they're done with with those the credentials will just expire on their own yeah it's it's a very Niche uh",
    "start": "198840",
    "end": "206760"
  },
  {
    "text": "approach right but you do not have to embed the long-term credentials right you can use the short-term credentials and the common scenarios are you know",
    "start": "206760",
    "end": "214080"
  },
  {
    "text": "the identity Federation right so when we talk about identity Federation it's you know we can manage our users uh and",
    "start": "214080",
    "end": "220260"
  },
  {
    "text": "their identities in an external system and then rather than creating AWS identities for them we can set up the",
    "start": "220260",
    "end": "227459"
  },
  {
    "text": "identity Federation and for example in an Enterprise environment using the you know a single sign-on or the a security",
    "start": "227459",
    "end": "234900"
  },
  {
    "text": "assertion markup language or saml you know we can manage our users outside and then use awss or you know active",
    "start": "234900",
    "end": "242099"
  },
  {
    "text": "directory and that will allow us to you know avoid creating users we can just map them to roles right and you know",
    "start": "242099",
    "end": "249299"
  },
  {
    "text": "you'll notice that the roles are also here as an example they are a basis also the SDS is a basis of roles for across",
    "start": "249299",
    "end": "256139"
  },
  {
    "text": "account access so we want to give for example access to you know we have multiple accounts like most of our",
    "start": "256139",
    "end": "262320"
  },
  {
    "text": "customers today have multiple accounts where they and manage access through the IM roles",
    "start": "262320",
    "end": "267540"
  },
  {
    "text": "and you know granting permission or somebody granting permission to access a resource in a different account can be",
    "start": "267540",
    "end": "273360"
  },
  {
    "text": "done through you know roles that allow across account access and so this is where again SDS is is a service that's",
    "start": "273360",
    "end": "278940"
  },
  {
    "text": "powering this also rolls for our Amazon ec2 instances so in case you have",
    "start": "278940",
    "end": "283979"
  },
  {
    "text": "applications running on ec2 you can a lot you can grant security",
    "start": "283979",
    "end": "289500"
  },
  {
    "text": "credentials to those uh instances or you know IM credentials to those instances by using the roles for ec2 and this is",
    "start": "289500",
    "end": "298320"
  },
  {
    "text": "abstracted fully way so you don't have to manage this and behind the scenes there are also temporary credentials and many other AWS Services pretty much you",
    "start": "298320",
    "end": "304800"
  },
  {
    "text": "know anything that that touches IM right is is using the AWS STS when it comes to",
    "start": "304800",
    "end": "310139"
  },
  {
    "text": "Temporary credentials now we talk about the endpoints uh the",
    "start": "310139",
    "end": "315180"
  },
  {
    "text": "AWS STS is available in it cut different flavors where there's a global endpoint",
    "start": "315180",
    "end": "320820"
  },
  {
    "text": "which is available by default and it it routes all the requests to a single",
    "start": "320820",
    "end": "326039"
  },
  {
    "text": "endpoint which is STS amazon.aws.com now the tokens that are vended by this",
    "start": "326039",
    "end": "332340"
  },
  {
    "text": "endpoint by default are something they're called version 1 tokens and these are valid tokens but only for",
    "start": "332340",
    "end": "339960"
  },
  {
    "text": "a certain set of AWS regions with introduction with the regional endpoints",
    "start": "339960",
    "end": "345000"
  },
  {
    "text": "uh the token version has changed and now the original endpoints actually have something that's called the version 2",
    "start": "345000",
    "end": "350759"
  },
  {
    "text": "token and the difference is where these tokens can be used and I'll talk a little bit more about it in in a bit so",
    "start": "350759",
    "end": "358199"
  },
  {
    "text": "when we think about Regional the regional endpoints are you know closely they're in that region you can use the",
    "start": "358199",
    "end": "363900"
  },
  {
    "text": "original endpoints to reduce the latency right by making a call to a regional SDS endpoint uh you know it's closer to your",
    "start": "363900",
    "end": "371220"
  },
  {
    "text": "services and your applications and you know you can access the other AWS Services much faster right because you're not spending time that Network",
    "start": "371220",
    "end": "377400"
  },
  {
    "text": "time for STS to you know go to Global endpoint and then get a response back",
    "start": "377400",
    "end": "383280"
  },
  {
    "text": "you can also build in redundancy right if by you know whatever is the reason where you know",
    "start": "383280",
    "end": "389220"
  },
  {
    "text": "you can code your application logic then to switch as the SDS calls from one region to another or maybe even go to a",
    "start": "389220",
    "end": "394979"
  },
  {
    "text": "global one as a fallback right this ensures that like for example if the region stops responding from whatever the reason is your application can",
    "start": "394979",
    "end": "401699"
  },
  {
    "text": "continue operating and getting the temporary security credentials the caveat here is that the redundancy is",
    "start": "401699",
    "end": "406979"
  },
  {
    "text": "not built into the SDK so this is something that you know you will have to build your in in your own fashion you",
    "start": "406979",
    "end": "412740"
  },
  {
    "text": "know tailored to your own use case",
    "start": "412740",
    "end": "416780"
  },
  {
    "text": "the session token validity as I mentioned earlier the global endpoints event tokens which",
    "start": "420900",
    "end": "427139"
  },
  {
    "text": "are only available in certain set of AWS regions and those are regions basically which are enabled by default so",
    "start": "427139",
    "end": "433800"
  },
  {
    "text": "when you request a token from a global endpoint uh you cannot use that token",
    "start": "433800",
    "end": "439380"
  },
  {
    "text": "for example in the Asia Pacific Hong Kong region you can only use those tokens like for example North Virginia",
    "start": "439380",
    "end": "446039"
  },
  {
    "text": "that said you know when you use the regional tokens those tokens are valid in all the AWS regions",
    "start": "446039",
    "end": "451919"
  },
  {
    "text": "you can also change the global endpoint configuration to vent the tokens which",
    "start": "451919",
    "end": "456960"
  },
  {
    "text": "are available in all the regions however you have to be cognizant that the tokens are a little bit larger than",
    "start": "456960",
    "end": "463440"
  },
  {
    "text": "the version two tokens are larger in terms of the payload and the token version one so in case you're storing it",
    "start": "463440",
    "end": "469560"
  },
  {
    "text": "for example building a solution which is a token vending service right you have to be cognizant that you know there are",
    "start": "469560",
    "end": "475080"
  },
  {
    "text": "certain changes right and and this is we're going to see that right in a bit why why is that important so Regional",
    "start": "475080",
    "end": "481979"
  },
  {
    "text": "endpoints are available at https STS and then AWS region.amazonaws.com in this particular",
    "start": "481979",
    "end": "487860"
  },
  {
    "text": "example we have a regional endpoint for us West Oregon Usos 2. on screen",
    "start": "487860",
    "end": "494580"
  },
  {
    "text": "and then you know we go back to the question now that we have a certain basis on how STS works and on screen we",
    "start": "494580",
    "end": "500580"
  },
  {
    "text": "have python code so this is an example of the AWS python SDK uh also known as",
    "start": "500580",
    "end": "507180"
  },
  {
    "text": "103 and in a very small example in the first line we're importing the library",
    "start": "507180",
    "end": "512339"
  },
  {
    "text": "then we're instantiating a client in the second line with SDS underscore client equals below three dot client and then",
    "start": "512339",
    "end": "518700"
  },
  {
    "text": "the first argument is the service name and our python SDK provides metadata",
    "start": "518700",
    "end": "525000"
  },
  {
    "text": "attributes that you can use to inspect certain elements of how the client is configured and in this case we're using",
    "start": "525000",
    "end": "530339"
  },
  {
    "text": "a metadata attribute called endpoint URL which will tell us you know hey what is the SDK going to use as you can see in",
    "start": "530339",
    "end": "536459"
  },
  {
    "text": "this particular example it's going to default to a global endpoint because I've not provided a region or I've just",
    "start": "536459",
    "end": "542220"
  },
  {
    "text": "you know instructed the client to to do what it's what it's supposed to do behind the scenes it's loading the",
    "start": "542220",
    "end": "547560"
  },
  {
    "text": "environment variables but still you can see that it defaults to the the specific region",
    "start": "547560",
    "end": "552660"
  },
  {
    "text": "now if we look into for example a more specific case and I say well I want to use say us West 2 right to go back to",
    "start": "552660",
    "end": "559860"
  },
  {
    "text": "our previous example and use a regional endpoint in case of like an ec2 client so here we have an example similar right",
    "start": "559860",
    "end": "565860"
  },
  {
    "text": "but when we use an ec2 client we instantiate it and we pass a region name parameter equals to Usos 2. if we look",
    "start": "565860",
    "end": "573060"
  },
  {
    "text": "at the metadata attribute for that client we're going to see that it actually uses a regional endpoint right it actually tries to use ec2 dot EOS",
    "start": "573060",
    "end": "580740"
  },
  {
    "text": "Dash Amazon aws.com however if we do the same thing for SDS client and we look into the attributes",
    "start": "580740",
    "end": "588240"
  },
  {
    "text": "again we're still going to see that even though we passed the region it is still defaulting to the global",
    "start": "588240",
    "end": "594360"
  },
  {
    "text": "endpoint and this is by Design as I mentioned earlier due to the different versions of the tokens uh the sdks",
    "start": "594360",
    "end": "601260"
  },
  {
    "text": "inherently Implement a little something that's called a legacy default Behavior",
    "start": "601260",
    "end": "606300"
  },
  {
    "text": "which we're going to touch a bit touch in a bit right so how do we can you know knowing what we",
    "start": "606300",
    "end": "612420"
  },
  {
    "text": "know now how can we actually access the regional Imports so there are a couple of ways to you know configure your client to access a regional endpoint",
    "start": "612420",
    "end": "619440"
  },
  {
    "text": "the first one is the using of the environmental variable which is presented on the screen AWS underscore",
    "start": "619440",
    "end": "626279"
  },
  {
    "text": "STS underscore Regional underscore endpoints and then the values for those are Legacy or Regional the difference is",
    "start": "626279",
    "end": "633240"
  },
  {
    "text": "when we use a legacy variable uh value it is going to default to a global",
    "start": "633240",
    "end": "639420"
  },
  {
    "text": "endpoint in the regions which are enabled by default and for newer regions it will actually default to Regional",
    "start": "639420",
    "end": "646279"
  },
  {
    "text": "configuration now the cache 22 there is that you know it's a little bit of inconsistent so like if we want to have",
    "start": "646279",
    "end": "651779"
  },
  {
    "text": "consistency so we want to ensure a certain you know behavior of our sdks so",
    "start": "651779",
    "end": "657480"
  },
  {
    "text": "that's one way where we can do this another way is using a python SDK config",
    "start": "657480",
    "end": "663480"
  },
  {
    "text": "file or a config object so and it's a very similar thing right you can",
    "start": "663480",
    "end": "668579"
  },
  {
    "text": "configure the STS underscore Regional underscore endpoints in either the voter core config object which is the low",
    "start": "668579",
    "end": "673740"
  },
  {
    "text": "level library that SDK uses or in the AWS config file for your profile and the",
    "start": "673740",
    "end": "679920"
  },
  {
    "text": "third option is you know we can manually because we know how this thing looks like like what is the endpoint URL we",
    "start": "679920",
    "end": "685860"
  },
  {
    "text": "can manually construct it and build you know a wrapper client for example where you know every time we instantiate an",
    "start": "685860",
    "end": "691079"
  },
  {
    "text": "STS you know we're going to pass a region and then we're going to formulate the endpoint URL because if you remember",
    "start": "691079",
    "end": "697200"
  },
  {
    "text": "the example the customer has actually tried to use that endpoint URL so when we look into the regional",
    "start": "697200",
    "end": "703920"
  },
  {
    "text": "endpoint so the difference here is the first half of the example is pretty much the same right we are instantiating in client we're trying to use a Usos 2 as a",
    "start": "703920",
    "end": "711720"
  },
  {
    "text": "region right and we're looking at the metadata attributes nothing's changing and then by implementing the the",
    "start": "711720",
    "end": "717420"
  },
  {
    "text": "environment variable we said that hey we want to use the regional endpoints and when we",
    "start": "717420",
    "end": "723440"
  },
  {
    "text": "re-initialize the SDS client and again looking to their endpoint URL metadata we're going to see that it's actually",
    "start": "723440",
    "end": "728820"
  },
  {
    "text": "now using a regional so this is the way that you can Implement you know your SDK Behavior influence the SDK Behavior to",
    "start": "728820",
    "end": "735839"
  },
  {
    "text": "use the regional endpoints and this is standard across multiple sdks there's a caveat in certain newer major versions",
    "start": "735839",
    "end": "743459"
  },
  {
    "text": "of sdks will use the regional endpoints going forward so for example awcli version 2 actually uses a regional",
    "start": "743459",
    "end": "750779"
  },
  {
    "text": "endpoint configuration behind the scenes in version two and version one is still using the Legacy one",
    "start": "750779",
    "end": "758180"
  },
  {
    "text": "thank you so I have one quick question that we",
    "start": "758640",
    "end": "763740"
  },
  {
    "text": "wanted to ask uh to clarify you mentioned that this is one of the most common way of authenticating using ec2",
    "start": "763740",
    "end": "770279"
  },
  {
    "text": "roles and wondering if you could explain a bit how that works so if I'm going to use an ec2 rule how can I use those",
    "start": "770279",
    "end": "776700"
  },
  {
    "text": "credentials those temporary credentials to authenticate with other AWS services from an instance",
    "start": "776700",
    "end": "782519"
  },
  {
    "text": "thank you very just for asking that question so when you use ec2 roles the",
    "start": "782519",
    "end": "788220"
  },
  {
    "text": "temporary security credentials are actually available made available through what is called an instance metadata service right that every single",
    "start": "788220",
    "end": "795240"
  },
  {
    "text": "instance has an access to AWS so you can use this instance metadata service by",
    "start": "795240",
    "end": "801240"
  },
  {
    "text": "querying a specific URL by your Social Security and then sorry IM security and",
    "start": "801240",
    "end": "806339"
  },
  {
    "text": "then the name of the role for example what you will get back is the a response",
    "start": "806339",
    "end": "811800"
  },
  {
    "text": "which contains a secret key access key secret access key and session token uh",
    "start": "811800",
    "end": "817139"
  },
  {
    "text": "and this is all managed behind the scenes so you don't have to do anything right uh the important bit there is to",
    "start": "817139",
    "end": "823500"
  },
  {
    "text": "be cognizant that if you're using sdks SDK AWS sdks for different programming",
    "start": "823500",
    "end": "829019"
  },
  {
    "text": "languages have this Behavior built in so where they will actually look up through certain steps of how to enumerate and",
    "start": "829019",
    "end": "835740"
  },
  {
    "text": "find the configuration for the credentials like looking into the file into the environmental variables you",
    "start": "835740",
    "end": "842459"
  },
  {
    "text": "know config file ultimately it's also going to touch the the instance metadata service to discover whether it's you",
    "start": "842459",
    "end": "848700"
  },
  {
    "text": "know are there any credentials available there so in case you're using an SDK yeah that's provided by AWS you don't",
    "start": "848700",
    "end": "855360"
  },
  {
    "text": "have to do any additional implementation however if you are using a custom application using your own SDK or or you",
    "start": "855360",
    "end": "862980"
  },
  {
    "text": "know your own code uh you can use the instance metadata service to query it and obtain the temporary security",
    "start": "862980",
    "end": "868920"
  },
  {
    "text": "credentials you can refresh these periodically you can just create an",
    "start": "868920",
    "end": "874440"
  },
  {
    "text": "object again request the data and like once the credentials are refreshed you can you can just use the new ones as",
    "start": "874440",
    "end": "880680"
  },
  {
    "text": "well but thank you and I posted a couple of links to the uh metadata service if you",
    "start": "880680",
    "end": "886860"
  },
  {
    "text": "wanted to get more information about these and specifically for the Java SDK the order on which retrieves credential",
    "start": "886860",
    "end": "894120"
  },
  {
    "text": "uh Whenever there are credentials are available in ec2 and this works similarly for other sdks as well you can",
    "start": "894120",
    "end": "899639"
  },
  {
    "text": "look at that documentation if you need additional information thank you very much okay so",
    "start": "899639",
    "end": "905100"
  },
  {
    "text": "um see that there's no other questions I would like to bring on people for our next question and let you introduce what",
    "start": "905100",
    "end": "912720"
  },
  {
    "text": "was been asked thank you fantastic thank you Francesco thank you",
    "start": "912720",
    "end": "918779"
  },
  {
    "start": "916000",
    "end": "1519000"
  },
  {
    "text": "Milan great question so far by the way um so one question we've seen on repost",
    "start": "918779",
    "end": "924300"
  },
  {
    "text": "is how one can figure out how an SCP or just any IEM construct",
    "start": "924300",
    "end": "930959"
  },
  {
    "text": "around a policy is denying access to a resource and uh picking on the specific one for",
    "start": "930959",
    "end": "938220"
  },
  {
    "text": "session control policies that are a control mechanism for AWS organizations let's let's take a look at",
    "start": "938220",
    "end": "946380"
  },
  {
    "text": "um the landscape",
    "start": "946380",
    "end": "949279"
  },
  {
    "text": "okay so the first thing is why does one even get denied right it's uh it's not",
    "start": "951660",
    "end": "957959"
  },
  {
    "text": "always a matter of misconfiguration sometimes there is actually a good",
    "start": "957959",
    "end": "963360"
  },
  {
    "text": "reason why people get denied access it's because as a security best practice we",
    "start": "963360",
    "end": "968399"
  },
  {
    "text": "want to Grant users and systems the narrowest set of privileges to complete the required tasks this is what we call",
    "start": "968399",
    "end": "974399"
  },
  {
    "text": "the principle of least privilege so there are lots of legitimate situations where someone might not get access in",
    "start": "974399",
    "end": "980639"
  },
  {
    "text": "kinda Knight but of course there are some situations where it was just done due to a configuration issue right and",
    "start": "980639",
    "end": "985980"
  },
  {
    "text": "we want to explain how all of this works so that you don't face this problem when",
    "start": "985980",
    "end": "991620"
  },
  {
    "text": "it's unintended so taking a step back AWS identity and access management has policies so who",
    "start": "991620",
    "end": "999360"
  },
  {
    "text": "can access what the who is the principal so policies get attached to principles",
    "start": "999360",
    "end": "1004959"
  },
  {
    "text": "and the what is uh defined within policies policies get attached to",
    "start": "1004959",
    "end": "1010639"
  },
  {
    "text": "resources um and in these situations we allow certain people the principles to access",
    "start": "1010639",
    "end": "1016639"
  },
  {
    "text": "certain Resources with certain permissions here as you can see in this example we have the effect of allow to a",
    "start": "1016639",
    "end": "1023600"
  },
  {
    "text": "certain principle for a certain action for a certain resource under a certain condition so that's I am as a whole",
    "start": "1023600",
    "end": "1030620"
  },
  {
    "text": "and then we heard from customers that management across multiple accounts at",
    "start": "1030620",
    "end": "1036199"
  },
  {
    "text": "the organization level is really important so AWS organizations really solved the problem of central governance",
    "start": "1036199",
    "end": "1041900"
  },
  {
    "text": "it allows you to Define organizational units have accounts be part of them and",
    "start": "1041900",
    "end": "1047000"
  },
  {
    "text": "then they Define the control access and permissions as well as other policies and so that's where these session",
    "start": "1047000",
    "end": "1053360"
  },
  {
    "text": "control these service control policies or scps really help and these set of",
    "start": "1053360",
    "end": "1059480"
  },
  {
    "text": "tools together allow you to order to Monitor and secure your environment on",
    "start": "1059480",
    "end": "1064580"
  },
  {
    "text": "the multi-account or organization level as well as the general billing benefits",
    "start": "1064580",
    "end": "1070340"
  },
  {
    "text": "that go without saying now these scps are actually guard rails",
    "start": "1070340",
    "end": "1077000"
  },
  {
    "text": "so what I mean by that is that they're not necessarily there to explicitly Grant permission they're there as",
    "start": "1077000",
    "end": "1082580"
  },
  {
    "text": "protection protective mechanisms for example you might not want to Grant everyone access in your whole organization the",
    "start": "1082580",
    "end": "1089960"
  },
  {
    "text": "ability to create IM users or change the organization itself right we want to",
    "start": "1089960",
    "end": "1095000"
  },
  {
    "text": "restrict that perhaps to uh a very specific select a set of security authorized people and these guard rails",
    "start": "1095000",
    "end": "1102320"
  },
  {
    "text": "set by the saps allow you to do that so there's a preventative guardrail that",
    "start": "1102320",
    "end": "1107780"
  },
  {
    "text": "comes uh you know through the form of this SCP and then with the ous it gets",
    "start": "1107780",
    "end": "1113059"
  },
  {
    "text": "applied to the accounts right and that way you can make sure you're compliant the scps ensure that and there are other",
    "start": "1113059",
    "end": "1119660"
  },
  {
    "text": "services such as AWS config that further help you to ensure that if something was",
    "start": "1119660",
    "end": "1124760"
  },
  {
    "text": "misconfigured you can be alerted or that some automated action can be taken as",
    "start": "1124760",
    "end": "1130820"
  },
  {
    "text": "part of the guardrail so once again guardrails are preventative they prevent policy violations",
    "start": "1130820",
    "end": "1136760"
  },
  {
    "text": "using SCP but the key part here is that the scps they don't replace associating",
    "start": "1136760",
    "end": "1143360"
  },
  {
    "text": "IM policies with an AWS account you still have to apply the IM policy on on",
    "start": "1143360",
    "end": "1149600"
  },
  {
    "text": "a on a principle or a certain Resource as we discussed in the previous slide",
    "start": "1149600",
    "end": "1154760"
  },
  {
    "text": "all right so what can go wrong here now as I explained there are guardrails",
    "start": "1154760",
    "end": "1159860"
  },
  {
    "text": "organizational scps are one you have other Target based policies backup policies permission boundaries and all",
    "start": "1159860",
    "end": "1168380"
  },
  {
    "text": "of these things prevent unintended access to be given so that we can stick with our security best practice of",
    "start": "1168380",
    "end": "1174860"
  },
  {
    "text": "principle of lease privilege however in order for someone to get permission to do something for the principal to do an",
    "start": "1174860",
    "end": "1181700"
  },
  {
    "text": "effect we have to do grants right and grants come in the form of identity-based policies resource based",
    "start": "1181700",
    "end": "1188539"
  },
  {
    "text": "policies and object ACLS and now in order for a user to be able to or for",
    "start": "1188539",
    "end": "1194000"
  },
  {
    "text": "any principle to be able to take an action take an effect they must one not go against the",
    "start": "1194000",
    "end": "1200059"
  },
  {
    "text": "guardrail and also have a grant so here are just some steps that you can take to figure out what's going on and",
    "start": "1200059",
    "end": "1206960"
  },
  {
    "text": "offense I will go over some tools that can help make this easier but first thing is check in cloudtrail to confirm",
    "start": "1206960",
    "end": "1213559"
  },
  {
    "text": "the error and the principle and I say this because the cloudtrail message can give you some great hints into what's",
    "start": "1213559",
    "end": "1219080"
  },
  {
    "text": "going on why it's being denied because the deny error message can sometimes tell you exactly why it's being denied",
    "start": "1219080",
    "end": "1225320"
  },
  {
    "text": "and so those cloud trail events in those logs are very useful next check if an IM policy with the",
    "start": "1225320",
    "end": "1232460"
  },
  {
    "text": "right grants the explicit allows are attached to the imusero role who is",
    "start": "1232460",
    "end": "1238640"
  },
  {
    "text": "expected to have this permission and then uh as you can see in this example at the bottom this is an IM",
    "start": "1238640",
    "end": "1245120"
  },
  {
    "text": "policy which has the effect allow obviously to describe instances and easy to describe images so this is I'm",
    "start": "1245120",
    "end": "1250400"
  },
  {
    "text": "explicitly allowing using this policy uh the the any person to run uh the",
    "start": "1250400",
    "end": "1257120"
  },
  {
    "text": "specific person I'm going to attach this policy to to describe to describing images on any resource",
    "start": "1257120",
    "end": "1263780"
  },
  {
    "text": "so why could access still be denied even though I've attached a policy that is",
    "start": "1263780",
    "end": "1269419"
  },
  {
    "text": "doing the explicit allow this is where those guard rails come in and first check if the policy statements that",
    "start": "1269419",
    "end": "1276260"
  },
  {
    "text": "Grant those permissions include any conditions such as time of day IP restriction time of day or IP",
    "start": "1276260",
    "end": "1281720"
  },
  {
    "text": "restrictions so the policies are granular enough that they can restrict specific IPS",
    "start": "1281720",
    "end": "1286880"
  },
  {
    "text": "or even only allow access for certain time of days so those sort of restrictions are things you should check",
    "start": "1286880",
    "end": "1292039"
  },
  {
    "text": "for in the policies and then lastly scps",
    "start": "1292039",
    "end": "1297200"
  },
  {
    "text": "which are which are taking effect on the organizational level you have to ensure that they're not denying a broad set of",
    "start": "1297200",
    "end": "1303860"
  },
  {
    "text": "actions that could be causing this unintended permission denied because the deny will always Trump allows and so as",
    "start": "1303860",
    "end": "1309980"
  },
  {
    "text": "you can see in this example over here there is a deny on all IM and RDS actions so if the permission that you",
    "start": "1309980",
    "end": "1316820"
  },
  {
    "text": "intended for an IM role or use it was to do some RDS operation this SCP guardrail would need to be",
    "start": "1316820",
    "end": "1324620"
  },
  {
    "text": "changed right to ensure that the person can do it now here are some tools that can make it a little bit easier for you",
    "start": "1324620",
    "end": "1330500"
  },
  {
    "text": "the first is IM policy Simulator the benefit of this tool is it allows you to",
    "start": "1330500",
    "end": "1336440"
  },
  {
    "text": "put in the policy and then see why it gets denied really understand the reason for it so that then you can correct the",
    "start": "1336440",
    "end": "1343100"
  },
  {
    "text": "policy uh before it actually takes any impact in a production system so I",
    "start": "1343100",
    "end": "1348140"
  },
  {
    "text": "recommend using this as part of your troubleshooting process another useful tool is IAM access",
    "start": "1348140",
    "end": "1353900"
  },
  {
    "text": "analyzer as it reviews cloudtrail to actually create policies and so if there",
    "start": "1353900",
    "end": "1360440"
  },
  {
    "text": "were cloudtrail messages showing that there's some user who's trying doing some action it can actually recommend",
    "start": "1360440",
    "end": "1366640"
  },
  {
    "text": "policies based on those actual cloudtrail API call logs which are useful and it generates fine-grained",
    "start": "1366640",
    "end": "1372640"
  },
  {
    "text": "control policy permissions similar to what we talked about the principle of least privilege and then also uh gives",
    "start": "1372640",
    "end": "1380059"
  },
  {
    "text": "you recommendations so let's see what this looks like um in the screenshot you can see that",
    "start": "1380059",
    "end": "1386120"
  },
  {
    "text": "there are certain policies that are applied and then the recommendations that are given so there's a security recommendation that's given there uh",
    "start": "1386120",
    "end": "1392659"
  },
  {
    "text": "through IM access policy validation so that you can have the best policy",
    "start": "1392659",
    "end": "1399559"
  },
  {
    "text": "adhering to the right uh best practices and ensure that you have better security",
    "start": "1399559",
    "end": "1405740"
  },
  {
    "text": "posture foreign",
    "start": "1405740",
    "end": "1410380"
  },
  {
    "text": "thank you very much tipu and before we go to the next question I I wanted you",
    "start": "1412120",
    "end": "1417320"
  },
  {
    "text": "to clarify a bit one aspect of these so definitely very useful tools to use but I would like to understand a bit more",
    "start": "1417320",
    "end": "1423200"
  },
  {
    "text": "how do permission boundaries I am policies and service control policies work together so they seems to be quite",
    "start": "1423200",
    "end": "1431179"
  },
  {
    "text": "similar in terms of what they do but can you clarify a bit about their permission boundary and how they work",
    "start": "1431179",
    "end": "1438080"
  },
  {
    "text": "absolutely so identity based permissions or things like IM policies that you've attached to a user uh Define how uh a",
    "start": "1438080",
    "end": "1446840"
  },
  {
    "text": "user can actually take effect uh on a specific resource",
    "start": "1446840",
    "end": "1451940"
  },
  {
    "text": "um and there has to be sort of this intersection between these uh fruition",
    "start": "1451940",
    "end": "1457520"
  },
  {
    "text": "so I really I'm really glad you brought up commission boundaries as well because permission boundaries are also sort of this guardrail that prevent uh",
    "start": "1457520",
    "end": "1464960"
  },
  {
    "text": "permissions from being implemented that were unintended so scps is across the uh you know the organization level it",
    "start": "1464960",
    "end": "1472460"
  },
  {
    "text": "controls that so you must have no deny in the sap policy the permission boundary must also not deny any of those",
    "start": "1472460",
    "end": "1479179"
  },
  {
    "text": "permissions and the IM I am policy must also explicitly give those permissions the intersections of those is what the",
    "start": "1479179",
    "end": "1485840"
  },
  {
    "text": "effective permissions for the person or for the action are perfect thanks and I've seen let me use",
    "start": "1485840",
    "end": "1492440"
  },
  {
    "text": "those two tools quite often with our customers to ensure that they were able to pinpoint sometimes it might be a bit",
    "start": "1492440",
    "end": "1498860"
  },
  {
    "text": "tricky because you have an explicit deny or you forgot the allow and then you go in the in implicit deny and has helped",
    "start": "1498860",
    "end": "1506539"
  },
  {
    "text": "quite a bit so I recommend if everyone is having issues as people suggested cloudtrail first and then you can use",
    "start": "1506539",
    "end": "1512539"
  },
  {
    "text": "those two tools to to dig in a bit more next thank you tipu uh I hope everyone found the answer to this question super",
    "start": "1512539",
    "end": "1518419"
  },
  {
    "text": "useful as I did so going next um I would like to um answer this question so one of the",
    "start": "1518419",
    "end": "1524600"
  },
  {
    "start": "1519000",
    "end": "2377000"
  },
  {
    "text": "user asked how they can increase the performance of fetching Secrets using AWS Secrets manager and the question",
    "start": "1524600",
    "end": "1531260"
  },
  {
    "text": "revolved basically around figuring out how they could improve the speed because",
    "start": "1531260",
    "end": "1536779"
  },
  {
    "text": "they saw a latency of an average of 200 milliseconds or retrieving secrets from Secrets manager and if you're using VPC",
    "start": "1536779",
    "end": "1543260"
  },
  {
    "text": "endpoints will help a bit more with the speed because anytime they're caching they have the issue of caching sales",
    "start": "1543260",
    "end": "1550580"
  },
  {
    "text": "credentials every now and then with obviously cause application issues",
    "start": "1550580",
    "end": "1555740"
  },
  {
    "text": "um so basically I wanted to answer this by saying that VPC endpoints are not the",
    "start": "1555740",
    "end": "1560960"
  },
  {
    "text": "solution to faster retrieval and we'll see that in a second um the BBC endpoints are really meant to",
    "start": "1560960",
    "end": "1566900"
  },
  {
    "text": "be used anytime your application um it needs to be in a private subnet or",
    "start": "1566900",
    "end": "1572179"
  },
  {
    "text": "you want to keep those resources in a secure non-inter and taxable subnet you can create a VPC endpoint that will",
    "start": "1572179",
    "end": "1579020"
  },
  {
    "text": "allow that application or your Lambda function in this case to access Adobe Secrets manager without having to use an",
    "start": "1579020",
    "end": "1585559"
  },
  {
    "text": "internet gateway or not Gateway so basically keeping those resources in a secure private subnet when we're using",
    "start": "1585559",
    "end": "1592400"
  },
  {
    "text": "an internal Gateway we're still going over the Internet staying in region hopefully you're using the secrets",
    "start": "1592400",
    "end": "1597500"
  },
  {
    "text": "manager in the same region you're running your resources to reduce latency but the path is taking will be pretty",
    "start": "1597500",
    "end": "1602600"
  },
  {
    "text": "similar and you will be having a connection latency of around one millisecond um and depending on which is",
    "start": "1602600",
    "end": "1609919"
  },
  {
    "text": "easy or calling from but hopefully and will stay around sorry it will say",
    "start": "1609919",
    "end": "1615260"
  },
  {
    "text": "around one millisecond the latency that the customer is seeing is that definitely comes from the time it takes",
    "start": "1615260",
    "end": "1622100"
  },
  {
    "text": "to retrieve the secrets because there are several checks and mechanisms that happens behind the scenes when",
    "start": "1622100",
    "end": "1627500"
  },
  {
    "text": "retrieving that secret so the first thing is that a lot of our customers using we wanted to get rid of",
    "start": "1627500",
    "end": "1633620"
  },
  {
    "text": "context into Secrets managers and how this is used because um one of the main advantages in ucx",
    "start": "1633620",
    "end": "1640880"
  },
  {
    "text": "manager to manage your sequence is the ability of rotating Secrets um safely so this means that you can",
    "start": "1640880",
    "end": "1646700"
  },
  {
    "text": "change your secrets so that you can transform a long-term secret something that's immutable into a short-term",
    "start": "1646700",
    "end": "1652700"
  },
  {
    "text": "secret so something that changes every few hours every few days or weeks depending really what is your security",
    "start": "1652700",
    "end": "1658580"
  },
  {
    "text": "requirement this means that in the case your credentials are unfortunately compromised or that you need to revoke",
    "start": "1658580",
    "end": "1666260"
  },
  {
    "text": "those credentials for whatever reason you are not impacting all the applications you're only having",
    "start": "1666260",
    "end": "1671480"
  },
  {
    "text": "impacting that secret that is now being rotated and is getting invalidated pretty soon so this is one of the best",
    "start": "1671480",
    "end": "1678200"
  },
  {
    "text": "security best practices work similarly to the concept that we are with the STS and temporary credentials and allow you",
    "start": "1678200",
    "end": "1685100"
  },
  {
    "text": "to have a more robust and an application serious manager is built with the RDS is",
    "start": "1685100",
    "end": "1691340"
  },
  {
    "text": "extendable with Lambda when you have to rotate credentials this is something that allows you to basically create your",
    "start": "1691340",
    "end": "1699020"
  },
  {
    "text": "own rotation strategy as well and allows to use versioning as well so that you can ensure that you don't break secrets",
    "start": "1699020",
    "end": "1706159"
  },
  {
    "text": "that are rotated what this means is that it is important to cache and",
    "start": "1706159",
    "end": "1714440"
  },
  {
    "text": "um it is something that you can work around the issue that our users saw in",
    "start": "1714440",
    "end": "1720200"
  },
  {
    "text": "this question by using proper rotation strategy so let's see why caching is",
    "start": "1720200",
    "end": "1725240"
  },
  {
    "text": "important first of all so this is a recommendation that we make wholeheartedly we recommend it to Cache",
    "start": "1725240",
    "end": "1732140"
  },
  {
    "text": "your credential on using client-side caching and this is because it gives you a couple of benefits first of all",
    "start": "1732140",
    "end": "1737779"
  },
  {
    "text": "improves the speed uh since you do not have to contact a Secrets manager to retrieve your credentials",
    "start": "1737779",
    "end": "1744440"
  },
  {
    "text": "um the retrievable cash credentials since it's staying in your Lambda environment or your caching system",
    "start": "1744440",
    "end": "1751159"
  },
  {
    "text": "whatever you're using on your application is almost immediate which is a lowering the time it takes so this",
    "start": "1751159",
    "end": "1756919"
  },
  {
    "text": "gives a better customer experience you'll also be making a fewer API calls",
    "start": "1756919",
    "end": "1762620"
  },
  {
    "text": "to retrieve those secrets and those API calls have a cost around 5 cents for 10",
    "start": "1762620",
    "end": "1767779"
  },
  {
    "text": "000 API calls obviously this might not be impacting you if you have low volumes but when you're having a thousands and",
    "start": "1767779",
    "end": "1774919"
  },
  {
    "text": "thousands hundreds of thousands of calls per day that might add up so caching",
    "start": "1774919",
    "end": "1780080"
  },
  {
    "text": "will reduce greatly that cost additionally if as your our user you're using Lambda then that also reduced the",
    "start": "1780080",
    "end": "1787940"
  },
  {
    "text": "Lambda execution time and depending on the size of the Lambda that you're using that my old and the number of",
    "start": "1787940",
    "end": "1794620"
  },
  {
    "text": "concurrency that you're having an invocation that you're having for that Lambda that might adapt to pretty",
    "start": "1794620",
    "end": "1800179"
  },
  {
    "text": "sensible savings when you're reducing that time so the second thing that I wanted to say",
    "start": "1800179",
    "end": "1807020"
  },
  {
    "text": "is that if caching is fundamental how we can avoid um issues where your caching scale",
    "start": "1807020",
    "end": "1812720"
  },
  {
    "text": "credentials this means that anytime you're caching you might be holding something that's no",
    "start": "1812720",
    "end": "1818419"
  },
  {
    "text": "longer current so the first consideration to make is that you want to Cache the those credentials for a",
    "start": "1818419",
    "end": "1826159"
  },
  {
    "text": "shorter amount than your routing those credentials so recruit rotating credentials every eight hours the TTL on",
    "start": "1826159",
    "end": "1832640"
  },
  {
    "text": "your cache should be lower than that that ensures that any time we're retrieving credentials we're not cashing",
    "start": "1832640",
    "end": "1838039"
  },
  {
    "text": "for longer than the actual credential uh lifetime the second thing that we can do is that",
    "start": "1838039",
    "end": "1843860"
  },
  {
    "text": "if the secret is invalid so let's say that we are now caching the scale credentials and we attempt to connect to",
    "start": "1843860",
    "end": "1850100"
  },
  {
    "text": "our database or our application we might want to retry the SEC with the second attempt by retrieving the the secrets",
    "start": "1850100",
    "end": "1857600"
  },
  {
    "text": "from Secrets manager directly so basically having a fallback to retrieve a fresher credentials",
    "start": "1857600",
    "end": "1863960"
  },
  {
    "text": "um the third thing is that depending on the application that you're using and this is usable for RDS for example you",
    "start": "1863960",
    "end": "1869960"
  },
  {
    "text": "might want to consider using a different rotation strategy because so far we are only discussed about rotation strategies",
    "start": "1869960",
    "end": "1876020"
  },
  {
    "text": "where anytime you rotating credentials then um you are invalidating the current",
    "start": "1876020",
    "end": "1882620"
  },
  {
    "text": "credentials which means that if you're caching those credentials they are made invalid and creating problems whenever",
    "start": "1882620",
    "end": "1888860"
  },
  {
    "text": "you're trying to access something um when you're caching you don't have to",
    "start": "1888860",
    "end": "1894140"
  },
  {
    "text": "do this on your own uh there's a few tools that are built in especially when using Lambda um there's a couple of blog",
    "start": "1894140",
    "end": "1900799"
  },
  {
    "text": "posts I'm going to post those links in the chat now uh for either using Lambda",
    "start": "1900799",
    "end": "1906260"
  },
  {
    "text": "extensions or a nice blog post on how to uh securely retrieve credentials that",
    "start": "1906260",
    "end": "1911480"
  },
  {
    "text": "teach you how to use those caching mechanisms to ensure that",
    "start": "1911480",
    "end": "1917480"
  },
  {
    "text": "your credentials are retrieved and are always fresh for your environment and uh basically not having to build that on",
    "start": "1917480",
    "end": "1923960"
  },
  {
    "text": "your own but even if you're not using a Lambda and you're deploying these on your eks cluster or your own classic",
    "start": "1923960",
    "end": "1930919"
  },
  {
    "text": "application you can use the built-in libraries that the secrets managers offer for Java python.net and go there's",
    "start": "1930919",
    "end": "1938659"
  },
  {
    "text": "a link to the generic section where you can go and look a bit more in those libraries but these allow you to Cache",
    "start": "1938659",
    "end": "1944299"
  },
  {
    "text": "credentials as well allowing you to follow best practices now we mentioned the rotation strategies",
    "start": "1944299",
    "end": "1951620"
  },
  {
    "text": "um this is basically means how you're rotating your credentials um the normally what everyone uses uh",
    "start": "1951620",
    "end": "1958279"
  },
  {
    "text": "more often than not is a single-use rotation strategy where you have a single user um either in your database",
    "start": "1958279",
    "end": "1963620"
  },
  {
    "text": "or your application and anytime you're rotating the credential you're creating",
    "start": "1963620",
    "end": "1968840"
  },
  {
    "text": "new credentials and invalidating the old ones which might lead to the problem that you're wrapping because if you're",
    "start": "1968840",
    "end": "1974179"
  },
  {
    "text": "caching then that will then bring will try to use invalid credentials since we",
    "start": "1974179",
    "end": "1979880"
  },
  {
    "text": "have just rotated those what we can actually do here is to use an uh what we call alternating user rotation strategy",
    "start": "1979880",
    "end": "1986840"
  },
  {
    "text": "what this means is that we'll have two sets of credentials for a single user and then anytime we rotating the",
    "start": "1986840",
    "end": "1994460"
  },
  {
    "text": "credential instead of immediately invalidating the current credentials we're versioning them and we're bringing",
    "start": "1994460",
    "end": "2000039"
  },
  {
    "text": "them to a state where they are not disabled but they are going to be scheduled for disabling on the next run",
    "start": "2000039",
    "end": "2005440"
  },
  {
    "text": "Third Run basically so at this point you will have a current set of credentials that are valid a slightly older set of",
    "start": "2005440",
    "end": "2012220"
  },
  {
    "text": "credentials that will still be valid and then um when you're doing the third rotation",
    "start": "2012220",
    "end": "2017559"
  },
  {
    "text": "or the fourth and so on you will always going to whisk Tire the older set of credentials to explain this a bit more",
    "start": "2017559",
    "end": "2024100"
  },
  {
    "text": "clearly um grow this graph where we have your secrets manager with your database",
    "start": "2024100",
    "end": "2029799"
  },
  {
    "text": "secret your RDS database in your VPC and an application that's attempting to",
    "start": "2029799",
    "end": "2035080"
  },
  {
    "text": "connect so normally what happens is that your application contacts a Secrets manager",
    "start": "2035080",
    "end": "2040120"
  },
  {
    "text": "um with the by retrieving credentials and those credentials so issues the call",
    "start": "2040120",
    "end": "2045640"
  },
  {
    "text": "from the application to Secrets manager under Secrets manager responds with a",
    "start": "2045640",
    "end": "2052300"
  },
  {
    "text": "set of credential for Simplicity we'll call them UA and uh PA so we'll be",
    "start": "2052300",
    "end": "2058060"
  },
  {
    "text": "username and password the application will have those credentials and then send those to the RDS VPC in dppc by",
    "start": "2058060",
    "end": "2067118"
  },
  {
    "text": "scientific credentials and if everything works well as we see we do up the user will return the data from the database",
    "start": "2067119",
    "end": "2075460"
  },
  {
    "text": "now what happens is that when we're going to rotate credential or uh the Lambda the rotation function",
    "start": "2075460",
    "end": "2082358"
  },
  {
    "text": "um is going to create a new set of credential in our secrets manager um by mentioning them",
    "start": "2082359",
    "end": "2090220"
  },
  {
    "text": "um and let's call them uh PB and UB and PB what happens now is that the Lambda",
    "start": "2090220",
    "end": "2098260"
  },
  {
    "text": "will also be responsible for creating the user in the RDS database and then validating that the user that just",
    "start": "2098260",
    "end": "2104500"
  },
  {
    "text": "created um can access the data that we require so basically we love a second call that",
    "start": "2104500",
    "end": "2110380"
  },
  {
    "text": "attempts to validate the code and if everything goes well then is when we will up the rotation",
    "start": "2110380",
    "end": "2117280"
  },
  {
    "text": "so when we have the rotation what happens is that instead of invalidating credential we're simply swapping the",
    "start": "2117280",
    "end": "2123940"
  },
  {
    "text": "versioning labels so the next time the application is retrieving the credential",
    "start": "2123940",
    "end": "2129820"
  },
  {
    "text": "from Secrets manager is going to retrieve the current version which will",
    "start": "2129820",
    "end": "2134920"
  },
  {
    "text": "be the new credentials that we have created will attempt to connect to mySQL in the VPC and obviously since the",
    "start": "2134920",
    "end": "2142480"
  },
  {
    "text": "username has been created you will be able to connect and retrieve the data what this means is that",
    "start": "2142480",
    "end": "2150280"
  },
  {
    "text": "um when uh see if we still have cache credentials from the previous stamp",
    "start": "2150280",
    "end": "2156160"
  },
  {
    "text": "let's say that we just got credentials they're about to expire those credentials are still valid so if we",
    "start": "2156160",
    "end": "2163900"
  },
  {
    "text": "play safely with the TTL we'll end up in a situation where the credentials are never expired at least we cannot have a",
    "start": "2163900",
    "end": "2170680"
  },
  {
    "text": "situation where caching is stale and allowing us to always be able to connect the to the database and this does not",
    "start": "2170680",
    "end": "2178300"
  },
  {
    "text": "only work for the database obviously this is a strategy that you can Implement for your own application or",
    "start": "2178300",
    "end": "2184420"
  },
  {
    "text": "for using credentials that allow you to access any other system that this is something that is built in in RDS so the",
    "start": "2184420",
    "end": "2192099"
  },
  {
    "text": "RDS rotation strategies and Lambda that are in GitHub I'll post a link to those are built-in rotation strategy for",
    "start": "2192099",
    "end": "2199780"
  },
  {
    "text": "um alternating users as well but you can see from that code how that can be used",
    "start": "2199780",
    "end": "2205300"
  },
  {
    "text": "and now the validation can be done so that if you want to Port this to your application",
    "start": "2205300",
    "end": "2210460"
  },
  {
    "text": "um you can do that as well that's it hopefully that answered that question and I wanted to bring Milan and",
    "start": "2210460",
    "end": "2218320"
  },
  {
    "text": "people see if there was any question from the audience at the moment so I have a question you know you",
    "start": "2218320",
    "end": "2224800"
  },
  {
    "text": "mentioned earlier that you know we should be looking at a smaller TTL and like playing around with it can you",
    "start": "2224800",
    "end": "2230980"
  },
  {
    "text": "elaborate a little bit more and expand you know why is it important and like you know what would be like recommended should we go in the fast like with like",
    "start": "2230980",
    "end": "2237820"
  },
  {
    "text": "a very small detail or maybe a longer one like what what do you recommend to our customers when you're working",
    "start": "2237820",
    "end": "2244599"
  },
  {
    "text": "perfect thank you Milan for for the question so um obviously TTL um needs to be smaller than your",
    "start": "2244599",
    "end": "2251560"
  },
  {
    "text": "rotation time because if you're rotating every eight hours and you have a 10 hour TTL you will end up in a situation where",
    "start": "2251560",
    "end": "2258040"
  },
  {
    "text": "you will have still credential for at least two hours and obviously we want to have this to be shorter",
    "start": "2258040",
    "end": "2263200"
  },
  {
    "text": "the other issue that we have is that we might end up in a situation where",
    "start": "2263200",
    "end": "2268420"
  },
  {
    "text": "we're starting with a cold Lambda um just a couple of minutes before the",
    "start": "2268420",
    "end": "2273640"
  },
  {
    "text": "credentials are rotated so even if we have a six hour TTL for our cash",
    "start": "2273640",
    "end": "2279400"
  },
  {
    "text": "we are going to rotate credentials in two minutes which will give us invalid credentials for five hour and uh 58",
    "start": "2279400",
    "end": "2286240"
  },
  {
    "text": "minutes so that is obviously not really desirable um the shorter the TTL the better the",
    "start": "2286240",
    "end": "2292660"
  },
  {
    "text": "chances that this is not going to happen or the credentials are going to be refreshed but you definitely want to get",
    "start": "2292660",
    "end": "2298060"
  },
  {
    "text": "in a situation where you're catching for as much as possible so if you have a strategy for invalidating",
    "start": "2298060",
    "end": "2304359"
  },
  {
    "text": "um the cash so basically if you get an access denied you go and attempt to get",
    "start": "2304359",
    "end": "2309520"
  },
  {
    "text": "those questions from uh those credentials from the secrets manager then you can do that as well it will be",
    "start": "2309520",
    "end": "2315880"
  },
  {
    "text": "a small performance seat and definitely depends on how you want to structure your application if you're using the",
    "start": "2315880",
    "end": "2321460"
  },
  {
    "text": "alternating user strategy then the important thing is that your cash is that smaller your TTL is smaller than",
    "start": "2321460",
    "end": "2329320"
  },
  {
    "text": "the sum of both of the rotations so if you're rotating every eight hour needs to be",
    "start": "2329320",
    "end": "2334900"
  },
  {
    "text": "um at the least lower than the TTL of a single rotation so that allows you to",
    "start": "2334900",
    "end": "2340480"
  },
  {
    "text": "never exceed the validity of the old credential in case you're having a stale cache but in the",
    "start": "2340480",
    "end": "2347859"
  },
  {
    "text": "end the rule of thumb is always is shorter than your rotation at least",
    "start": "2347859",
    "end": "2352920"
  },
  {
    "text": "depending on a few hours if you can spare it and then if you're using the alternating user strategy uh still",
    "start": "2352920",
    "end": "2359260"
  },
  {
    "text": "shorter than the expiration for a single rotation and that will allow you to be",
    "start": "2359260",
    "end": "2365020"
  },
  {
    "text": "able to connect uh and validate your credentials as much as possible having stale credentials",
    "start": "2365020",
    "end": "2371260"
  },
  {
    "text": "okay um hopefully that answered your question Milan",
    "start": "2371260",
    "end": "2376900"
  },
  {
    "text": "um just wanted to thank you again for taking the time answering uh the questions and I'm just want to give a",
    "start": "2376900",
    "end": "2383619"
  },
  {
    "start": "2377000",
    "end": "2464000"
  },
  {
    "text": "brief recap uh we answered some questions regarding STS the IM control",
    "start": "2383619",
    "end": "2389079"
  },
  {
    "text": "tower policies and SCP policies for for organizations and the best practices for",
    "start": "2389079",
    "end": "2394540"
  },
  {
    "text": "KMS credential rotations if there are any questions that were not answered today or even if you get any other",
    "start": "2394540",
    "end": "2401140"
  },
  {
    "text": "questions while you're re-watching this episode you can post your questions or repost.ws where one of our experts can",
    "start": "2401140",
    "end": "2407619"
  },
  {
    "text": "provide you with an answer on your question uh could become a topic of one of our next future show if you have any",
    "start": "2407619",
    "end": "2413800"
  },
  {
    "text": "feedback for us please check the chat box on the right side for a link to our survey or you can email us the Ws",
    "start": "2413800",
    "end": "2419859"
  },
  {
    "text": "supports you at amazon.com we want to hear from you if you have any other idea or questions around the different",
    "start": "2419859",
    "end": "2425619"
  },
  {
    "text": "episodes we would like to know what you would like to see on this show um",
    "start": "2425619",
    "end": "2431320"
  },
  {
    "text": "and also please join us again next Monday on the October the 3rd at 11 Pacific time we'll be exploring vmc and",
    "start": "2431320",
    "end": "2438099"
  },
  {
    "text": "cost Explorer again I want to thank you for uh being with us Tipo and Milan and thank your audience for joining us under",
    "start": "2438099",
    "end": "2444280"
  },
  {
    "text": "the best supports you and happy cloud computing thank you",
    "start": "2444280",
    "end": "2451800"
  },
  {
    "text": "[Music]",
    "start": "2453160",
    "end": "2458639"
  }
]