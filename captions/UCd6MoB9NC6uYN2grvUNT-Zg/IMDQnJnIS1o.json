[
  {
    "text": "In this video, you’ll see how to set up multi-cluster \ncost analysis for Amazon Elastic Kubernetes",
    "start": "0",
    "end": "5757"
  },
  {
    "text": "Service (Amazon EKS) using Amazon \nManaged Service for Prometheus and Kubecost.",
    "start": "5757",
    "end": "12245"
  },
  {
    "text": "With this solution, you can get granular \nvisibility into your EKS cluster costs",
    "start": "12601",
    "end": "17712"
  },
  {
    "text": "without manually scaling the Prometheus \ninstance, and get recommendations for",
    "start": "17712",
    "end": "22083"
  },
  {
    "text": "optimizing your Kubernetes \nworkloads to reduce costs.",
    "start": "22083",
    "end": "25661"
  },
  {
    "text": "To get started, let’s navigate to the \nAWS Cloud9 console, where we’ll",
    "start": "27672",
    "end": "32781"
  },
  {
    "text": "create an Amazon Managed \nService for Prometheus workspace.",
    "start": "32781",
    "end": "36206"
  },
  {
    "text": "The workspace is being created.",
    "start": "37632",
    "end": "39329"
  },
  {
    "text": "This is the workspace where we'll \ningest our EKS cluster metrics.",
    "start": "39476",
    "end": "42897"
  },
  {
    "text": "Now let’s return to the AWS Cloud9 console.",
    "start": "43274",
    "end": "46311"
  },
  {
    "text": "Notice that we’re signed in to our central \naccount, which is where we created the workspace.",
    "start": "46962",
    "end": "51659"
  },
  {
    "text": "Now let's navigate to the Amazon \nManaged Service for Prometheus",
    "start": "52225",
    "end": "55291"
  },
  {
    "text": "console to check the status of the workspace.",
    "start": "55291",
    "end": "57966"
  },
  {
    "text": "The workspace has been created and is active.",
    "start": "61780",
    "end": "64263"
  },
  {
    "text": "Now let’s switch to our workload account, \nwhere we’ll create the Kubecost deployments.",
    "start": "64493",
    "end": "68977"
  },
  {
    "text": "We’ll be deploying a federated setup,",
    "start": "69564",
    "end": "71323"
  },
  {
    "text": "so we’ll store our ETL data in an Amazon \nS3 bucket to improve query performance.",
    "start": "71323",
    "end": "77319"
  },
  {
    "text": "For our purposes, an S3 bucket \nhas already been created.",
    "start": "77633",
    "end": "81384"
  },
  {
    "text": "Now let’s return to the Cloud9 terminal.",
    "start": "82641",
    "end": "84946"
  },
  {
    "text": "Our workload account\ncontains two EKS clusters.",
    "start": "85575",
    "end": "89257"
  },
  {
    "text": "Let’s set up some environment \nvariables in the primary cluster.",
    "start": "89802",
    "end": "92945"
  },
  {
    "text": "First we’ll define the Kubecost version.",
    "start": "93657",
    "end": "95898"
  },
  {
    "text": "We’ll use the most recent version available.",
    "start": "96570",
    "end": "98707"
  },
  {
    "text": "Next, we’ll define the AWS region.",
    "start": "99357",
    "end": "101751"
  },
  {
    "text": "Next, let's define a variable for our S3 bucket.",
    "start": "102338",
    "end": "105251"
  },
  {
    "text": "Next, let's specify the AWS Account ID.",
    "start": "105900",
    "end": "108834"
  },
  {
    "text": "Next, we’ll define a variable for the remote \nwrite URL of the workspace we created.",
    "start": "109504",
    "end": "114393"
  },
  {
    "text": "Finally, we’ll define the query URL \nof the workspace we created.",
    "start": "115127",
    "end": "119317"
  },
  {
    "text": "Now, let's log into our secondary \ncluster, which is running in the",
    "start": "120093",
    "end": "123825"
  },
  {
    "text": "same account, and create the \nsame environment variables.",
    "start": "123825",
    "end": "127534"
  },
  {
    "text": "The remote write URL will be the same \nfor each cluster because they will both",
    "start": "130593",
    "end": "134638"
  },
  {
    "text": "use the Amazon Managed Service for \nPrometheus workspace as a back end.",
    "start": "134638",
    "end": "139028"
  },
  {
    "text": "Now that we’ve set up the environment\nvariables, let’s clear the terminal.",
    "start": "140960",
    "end": "144259"
  },
  {
    "text": "Let's return to the primary cluster and \ncreate a Kubernetes secret to allow",
    "start": "144846",
    "end": "148777"
  },
  {
    "text": "Kubecost to write ETL files to the S3 bucket.",
    "start": "148777",
    "end": "152954"
  },
  {
    "text": "First, we'll create a Kubecost namespace.",
    "start": "153521",
    "end": "155849"
  },
  {
    "text": "We’ll create the secret from \nthe federated-store.yaml file.",
    "start": "156394",
    "end": "159849"
  },
  {
    "text": "Let’s view the contents of this file.",
    "start": "160102",
    "end": "162113"
  },
  {
    "text": "Notice that the file contains the \ninformation for our S3 bucket.",
    "start": "162512",
    "end": "166500"
  },
  {
    "text": "Next, let’s create the secret \nin the Kubecost namespace.",
    "start": "166962",
    "end": "170921"
  },
  {
    "text": "Next, let’s retrieve the information for the \nsecret to make sure it was created successfully.",
    "start": "173268",
    "end": "178230"
  },
  {
    "text": "Everything looks good.",
    "start": "178754",
    "end": "180000"
  },
  {
    "text": "Next, we'll log into the second \ncluster and perform the same steps.",
    "start": "180251",
    "end": "183908"
  },
  {
    "text": "Now let’s log back in to our primary cluster.",
    "start": "189880",
    "end": "192505"
  },
  {
    "text": "Next, we need to grant cross-account \npermissions to our Kubecost service",
    "start": "195439",
    "end": "199582"
  },
  {
    "text": "accounts so they can successfully \nwrite the cost metrics into Amazon",
    "start": "199582",
    "end": "203642"
  },
  {
    "text": "Managed Service for Prometheus.",
    "start": "203642",
    "end": "205764"
  },
  {
    "text": "First, let’s look at the trust policy \nwe’ll attach to the IAM role for the",
    "start": "206539",
    "end": "210931"
  },
  {
    "text": "kubecost-cost-analyzer-amp account.",
    "start": "210931",
    "end": "214225"
  },
  {
    "text": "The policy includes two principals:",
    "start": "214895",
    "end": "217189"
  },
  {
    "text": "one OpenID Connect (OIDC) provider for \neach EKS cluster running in the account.",
    "start": "217189",
    "end": "223420"
  },
  {
    "text": "Let’s create the IAM role \nand attach the policy to it.",
    "start": "224071",
    "end": "227662"
  },
  {
    "text": "Next, let’s look at the permissions \nwe’ll assign to this role.",
    "start": "228290",
    "end": "231547"
  },
  {
    "text": "These permissions will enable users \nto do an Amazon Prometheus remote",
    "start": "232909",
    "end": "236444"
  },
  {
    "text": "write in the central account, and \nwill grant Amazon S3 full access.",
    "start": "236444",
    "end": "241224"
  },
  {
    "text": "Next, we’ll attach this policy document\nto the IAM role we created earlier.",
    "start": "241894",
    "end": "246902"
  },
  {
    "text": "The IAM role has been created.",
    "start": "248910",
    "end": "251089"
  },
  {
    "text": "Now let’s navigate to the IAM console \nand ensure everything was set up correctly.",
    "start": "251424",
    "end": "256239"
  },
  {
    "text": "The S3 full access and cross-account \npermissions policies have been",
    "start": "261032",
    "end": "264896"
  },
  {
    "text": "attached to the EKS-Kubecost-cost-\nrole, and we’ve enabled this role to",
    "start": "264896",
    "end": "269655"
  },
  {
    "text": "assume the EKS-AMP-Central-Role.",
    "start": "269655",
    "end": "273135"
  },
  {
    "text": "Here’s the trust relationship \nwe established earlier.",
    "start": "273743",
    "end": "276251"
  },
  {
    "text": "Now let’s return to the terminal and create \nthe kubecost-cost-analyzer-amp account.",
    "start": "278888",
    "end": "283602"
  },
  {
    "text": "We’ll create the service account in the first \ncluster within the Kubecost namespace.",
    "start": "284344",
    "end": "288556"
  },
  {
    "text": "Notice that the command specifies \nthe role that we just created.",
    "start": "288828",
    "end": "292222"
  },
  {
    "text": "Let’s confirm that the service\naccount has been created.",
    "start": "292999",
    "end": "295556"
  },
  {
    "text": "Next, let’s make sure the role \nwas assigned successfully.",
    "start": "297295",
    "end": "300354"
  },
  {
    "text": "We can see that the EKS-Kubecost-\ncost-role has been attached to the",
    "start": "301056",
    "end": "304403"
  },
  {
    "text": "kubecost-cost-analyzer-amp account.",
    "start": "304403",
    "end": "307278"
  },
  {
    "text": "Now, let's log into the second EKS \ncluster and run the same command",
    "start": "307925",
    "end": "311322"
  },
  {
    "text": "to create a service account in it.",
    "start": "311322",
    "end": "313059"
  },
  {
    "text": "Let’s ensure the service account was \ncreated and the correct role was assigned.",
    "start": "315238",
    "end": "319253"
  },
  {
    "text": "Now, we need to create the kubecost-prometheus-\nserver-amp service account in each cluster.",
    "start": "319891",
    "end": "325275"
  },
  {
    "text": "Before doing so, let’s log in to the first cluster to\n create the IAM role that will be used by this account.",
    "start": "325871",
    "end": "331822"
  },
  {
    "text": "Let’s view the trust policy \nthat we’ll attach to the role.",
    "start": "332470",
    "end": "335403"
  },
  {
    "text": "The policy contains two principals: \none OIDC provider for each cluster.",
    "start": "336087",
    "end": "340676"
  },
  {
    "text": "The policy will also enable the \naccount to assume the role we’ll create.",
    "start": "340969",
    "end": "344531"
  },
  {
    "text": "Next, let’s create the IAM role for the second \nservice account and attach the trust policy to it.",
    "start": "345204",
    "end": "350777"
  },
  {
    "text": "Next, we’ll attach the cross-account \npermissions policy to the role.",
    "start": "352496",
    "end": "355823"
  },
  {
    "text": "Now let’s return to the IAM console and\n quickly review the role we just created.",
    "start": "357688",
    "end": "362055"
  },
  {
    "text": "Here’s the trust policy we attached.",
    "start": "368801",
    "end": "370841"
  },
  {
    "text": "Here’s the permissions policy we \nattached, which gives the account",
    "start": "374864",
    "end": "378130"
  },
  {
    "text": "permission to access the Amazon \nManaged Service for Prometheus workspace.",
    "start": "378130",
    "end": "382371"
  },
  {
    "text": "Now that we’ve successfully \ncreated the EKS-Kubecost-prom-role,",
    "start": "383042",
    "end": "387198"
  },
  {
    "text": "let's create the kubecost-\nprometheus-server-amp account.",
    "start": "387198",
    "end": "391410"
  },
  {
    "text": "We’ll create the account in the first cluster.",
    "start": "393316",
    "end": "395494"
  },
  {
    "text": "The first cluster now contains the \ntwo service accounts we added.",
    "start": "398050",
    "end": "401223"
  },
  {
    "text": "Next, let's create the kubecost-\nprometheus-server-amp service",
    "start": "401852",
    "end": "405649"
  },
  {
    "text": "account in the second cluster.",
    "start": "405649",
    "end": "407254"
  },
  {
    "text": "We can see that the correct IAM role \nhas been attached to this service account.",
    "start": "410586",
    "end": "415000"
  },
  {
    "text": "Now that we’ve created the service \naccounts, let’s return to our central",
    "start": "415922",
    "end": "419307"
  },
  {
    "text": "account to create one more IAM role.",
    "start": "419308",
    "end": "422041"
  },
  {
    "text": "Before we create the role, let's \nlook at the trust policy we’ll attach.",
    "start": "422732",
    "end": "426642"
  },
  {
    "text": "The policy contains the two \nIAM roles we created earlier,",
    "start": "427292",
    "end": "431324"
  },
  {
    "text": "enabling both roles to assume the \nEKS-AMP-central-role we’re creating.",
    "start": "431324",
    "end": "436248"
  },
  {
    "text": "Now, we’ll create the role with Amazon Prometheus \nfull access and attach the permissions policy to it.",
    "start": "436793",
    "end": "442009"
  },
  {
    "text": "Now let’s return to the IAM console \nand review the role we just created.",
    "start": "444062",
    "end": "448190"
  },
  {
    "text": "The role contains the permissions \npolicy and trust policy that we attached.",
    "start": "457430",
    "end": "461405"
  },
  {
    "text": "We’ve now configured a two-way trust\n relationship between the IAM roles.",
    "start": "464464",
    "end": "468965"
  },
  {
    "text": "Now, let’s return to the terminal \nand create the Kubecost pods.",
    "start": "469424",
    "end": "472848"
  },
  {
    "text": "First, let’s take a look at the config values \nthat will be used by the Kubecost helm chart.",
    "start": "473518",
    "end": "478661"
  },
  {
    "text": "Notice that the Kubecost helm chart contains \nthe Prometheus endpoints and the sigv4 is",
    "start": "479289",
    "end": "484846"
  },
  {
    "text": "accurately pointing to the region where the \nPrometheus workspace was provisioned.",
    "start": "484846",
    "end": "489218"
  },
  {
    "text": "Additionally, the role that we created in the central \naccount is being parsed with the sigV4 configuration.",
    "start": "489637",
    "end": "495974"
  },
  {
    "text": "Next, let's make sure that \nwe are in the primary cluster.",
    "start": "496665",
    "end": "499660"
  },
  {
    "text": "Next, let's run the helm command \nto deploy the Kubecost pods.",
    "start": "501462",
    "end": "505000"
  },
  {
    "text": "Since this is the primary cluster, the command \nspecifies the primary-federator.yaml file.",
    "start": "505545",
    "end": "511180"
  },
  {
    "text": "Next, let’s check the status of the Kubecost pods.",
    "start": "511745",
    "end": "514594"
  },
  {
    "text": "The Kubecost pods are all running.",
    "start": "515223",
    "end": "517066"
  },
  {
    "text": "The kubecost-prometheus-server-amp \nservice account, which has the Amazon",
    "start": "517799",
    "end": "522737"
  },
  {
    "text": "Managed Service for Prometheus workspace, will \nbe used by the kubecost-prometheus-server pod.",
    "start": "522737",
    "end": "528669"
  },
  {
    "text": "The kubecost-cost-analyzer-amp service account \nwill be used by the kubecost-cost-analyzer pod.",
    "start": "529318",
    "end": "536188"
  },
  {
    "text": "Both service accounts have the necessary \npermissions to analyze the workspace.",
    "start": "536964",
    "end": "541173"
  },
  {
    "text": "Let’s also take a look at the logs \nto ensure that there are no errors.",
    "start": "541759",
    "end": "545467"
  },
  {
    "text": "Everything looks good.",
    "start": "546536",
    "end": "547592"
  },
  {
    "text": "Now let's log into the second cluster \nto install Kubecost and integrate it with",
    "start": "549415",
    "end": "553748"
  },
  {
    "text": "the Amazon Managed Service \nfor Prometheus workspace.",
    "start": "553748",
    "end": "556901"
  },
  {
    "text": "We’ll run the same command \nas we did for the first cluster,",
    "start": "557069",
    "end": "559883"
  },
  {
    "text": "but this time we’ll use the \nagent-federated.yaml file.",
    "start": "559883",
    "end": "563706"
  },
  {
    "text": "Next, let’s check the \nstatus of the Kubecost pods.",
    "start": "566618",
    "end": "569571"
  },
  {
    "text": "The Kubecost pods are running successfully.",
    "start": "570283",
    "end": "572818"
  },
  {
    "text": "The federator pod only runs on the \nprimary cluster, so it doesn’t appear here.",
    "start": "573069",
    "end": "577175"
  },
  {
    "text": "Now that we’ve successfully deployed \nKubecost, let’s navigate to our S3 bucket",
    "start": "577888",
    "end": "582524"
  },
  {
    "text": "where a federated folder has been created.",
    "start": "582524",
    "end": "584832"
  },
  {
    "text": "There are three subfolders: one for the \nprimary cluster, one for the secondary cluster,",
    "start": "585544",
    "end": "590852"
  },
  {
    "text": "and one that’s combined so we can \nmonitor both EKS clusters at the same time.",
    "start": "590852",
    "end": "595766"
  },
  {
    "text": "Now that everything is set up, let’s return\n to the terminal to set up the Kubecost UI.",
    "start": "596458",
    "end": "601578"
  },
  {
    "text": "First, we’ll enable the service as a load balancer.",
    "start": "602291",
    "end": "604910"
  },
  {
    "text": "Once we save our changes, \nthe load balancer will be created.",
    "start": "611698",
    "end": "615000"
  },
  {
    "text": "The load balancer is now being created.",
    "start": "618939",
    "end": "621098"
  },
  {
    "text": "Let’s navigate to the Amazon EC2 \nconsole to monitor its status.",
    "start": "621412",
    "end": "625372"
  },
  {
    "text": "Let’s look at the instances.",
    "start": "632140",
    "end": "633708"
  },
  {
    "text": "The status of each instance currently \nshows as \"OutOfService.\"",
    "start": "635363",
    "end": "638964"
  },
  {
    "text": "Once the health check is complete, \nthey will update to \"InService.”",
    "start": "639320",
    "end": "643331"
  },
  {
    "text": "Now that both instances are in \nservice, let’s access the Kubecost UI.",
    "start": "643981",
    "end": "648170"
  },
  {
    "text": "The Overview page shows information\n about our two clusters, including the",
    "start": "648715",
    "end": "652932"
  },
  {
    "text": "total cost incurred, possible monthly \nsavings, and cluster efficiency.",
    "start": "652932",
    "end": "657292"
  },
  {
    "text": "Next, we’ll explore the pages \nunder the Monitor section.",
    "start": "657921",
    "end": "660905"
  },
  {
    "text": "On the Allocations page, we can \naggregate the data by multiple dimensions.",
    "start": "662833",
    "end": "666956"
  },
  {
    "text": "For example, we can view cost \nby namespace and cluster.",
    "start": "667522",
    "end": "670644"
  },
  {
    "text": "The Cloud Costs page provides information \nabout other AWS services and their respective cost.",
    "start": "675820",
    "end": "681578"
  },
  {
    "text": "It will take some time for \ndata to begin appearing here.",
    "start": "681578",
    "end": "684344"
  },
  {
    "text": "This page shows all of our Kubecost \nmonitored clusters, as well as any",
    "start": "686984",
    "end": "690844"
  },
  {
    "text": "clusters captured in our cloud bill.",
    "start": "690844",
    "end": "692986"
  },
  {
    "text": "Next, let’s look at the Savings page.",
    "start": "693489",
    "end": "695592"
  },
  {
    "text": "This page shows how much we can \nsave by implementing recommendations,",
    "start": "696221",
    "end": "700181"
  },
  {
    "text": "such as ensuring that we have right-\nsize cluster nodes and containers.",
    "start": "700181",
    "end": "704129"
  },
  {
    "text": "You’ve just seen how to set up multi-\ncluster cost analysis for Amazon EKS",
    "start": "706371",
    "end": "710728"
  },
  {
    "text": "using Amazon Managed Service \nfor Prometheus and Kubecost.",
    "start": "710729",
    "end": "714820"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "715649",
    "end": "719587"
  },
  {
    "text": "Thanks for watching. Now it’s your turn to try.",
    "start": "720425",
    "end": "723485"
  }
]