[
  {
    "start": "0",
    "end": "73000"
  },
  {
    "text": "guess that's RQ good afternoon everyone everyone's",
    "start": "919",
    "end": "6120"
  },
  {
    "text": "still awake everyone surviving looking forward to some more fun tonight I suppose my name is Grant mallister I'm a",
    "start": "6120",
    "end": "13120"
  },
  {
    "text": "senior principal engineer with AWS I work on the Amazon RDS team uh today",
    "start": "13120",
    "end": "18920"
  },
  {
    "text": "we're going to do a deep dive into our use of postgress and our newest features",
    "start": "18920",
    "end": "24359"
  },
  {
    "text": "that we've just announced in the last couple days as well as some of the learnings that we've had over the last year running postgress for our customers",
    "start": "24359",
    "end": "32160"
  },
  {
    "text": "and helping them manage it and I'm also very happy to have Greg Roberts here who's going to talk about his experience",
    "start": "32160",
    "end": "38160"
  },
  {
    "text": "using uh Amazon RDS and the postgress Edition specifically so let's Dive Right",
    "start": "38160",
    "end": "45800"
  },
  {
    "text": "In okay is that maybe it's not working",
    "start": "46399",
    "end": "52600"
  },
  {
    "text": "okay sorry technical stuff okay we'll just do it the old",
    "start": "52800",
    "end": "58079"
  },
  {
    "text": "fashioned way um so one of the things that we get a lot with our customers is talking about data movement you know how",
    "start": "58079",
    "end": "64360"
  },
  {
    "text": "do I get data in and out of RDS how do I you know connect my database to other",
    "start": "64360",
    "end": "69439"
  },
  {
    "text": "things so we had a lot of questions so we wanted to cover this uh this topic so",
    "start": "69439",
    "end": "74960"
  },
  {
    "start": "73000",
    "end": "73000"
  },
  {
    "text": "you probably get a lot of blogs out there that say here's how to load data you know some of the standard things are if you're doing a full big database load",
    "start": "74960",
    "end": "80799"
  },
  {
    "text": "you want to disable your backups you want to turn off our multiz feature you want to turn off a auto vacuum if you're",
    "start": "80799",
    "end": "87320"
  },
  {
    "text": "using PG dump you want to use the compress the big capital F little C and if you're",
    "start": "87320",
    "end": "92840"
  },
  {
    "text": "doing the restore with PG restore you want to use the minus J option which really get you parallelism on like building indexes and other uh actions",
    "start": "92840",
    "end": "99439"
  },
  {
    "text": "like that you want to increase your maintenance work memory because we see that the default to 16 Meg because we",
    "start": "99439",
    "end": "106000"
  },
  {
    "text": "don't know how big of a index is and other things you're going to do and I'll actually show you some examples of that",
    "start": "106000",
    "end": "111079"
  },
  {
    "text": "and then the other one that we really recommend is increasing the checkpoint segments and the checkpoint timeout this is how often your database is going to",
    "start": "111079",
    "end": "117320"
  },
  {
    "text": "checkpoint now one of the other things that you'll see a lot in the blogs is disabling fsync now how many people in",
    "start": "117320",
    "end": "123560"
  },
  {
    "text": "the audience know what disabling fsync does so a few of you so what you're basically telling your database don't",
    "start": "123560",
    "end": "130800"
  },
  {
    "text": "immediately sync this stuff that I just changed to dis do it whenever you know",
    "start": "130800",
    "end": "135959"
  },
  {
    "text": "sort of convenient for you so you imagine if that database reboots or that system crashes what's going to happen",
    "start": "135959",
    "end": "141680"
  },
  {
    "text": "it's going to leave your database in an inconsistent state so not just the table you were loading but possibly system tables if you were creating an extension",
    "start": "141680",
    "end": "148560"
  },
  {
    "text": "it'll have all kinds of weird effects so in reality we don't like that recommendation because we think it's not",
    "start": "148560",
    "end": "154720"
  },
  {
    "text": "actually that useful instead what I recommend is disabling synchronous commit and how many people have used",
    "start": "154720",
    "end": "161120"
  },
  {
    "text": "that feature few so this is the safe way to get the same effect essentially",
    "start": "161120",
    "end": "166200"
  },
  {
    "text": "you're just telling the database bundle a bunch of stuff up but do it in a strictly consistent fashion so even if",
    "start": "166200",
    "end": "172400"
  },
  {
    "text": "you crash you'll just lose the last couple records not you know corrupt your whole database so I wanted to show this",
    "start": "172400",
    "end": "180319"
  },
  {
    "text": "as an actual real Benchmark example not just you know theoretical so I took a 32A insert test with fsync on and F sync",
    "start": "180319",
    "end": "188159"
  },
  {
    "text": "off synchronous commit synchronous commit off and so this is a transactions per second on the vertical axis so",
    "start": "188159",
    "end": "194000"
  },
  {
    "text": "obviously bigger is better and you can see when we start with both of them turned on I actually ran the test with",
    "start": "194000",
    "end": "200720"
  },
  {
    "text": "both 16 checkpoint segments and 256 and so that the the 256 is in that sort of purplish color so when we turn fsync off",
    "start": "200720",
    "end": "209040"
  },
  {
    "text": "you see we get a lot of improvement which is why the blog posts all say to do this right because it makes things go",
    "start": "209040",
    "end": "215200"
  },
  {
    "text": "faster but guess what if we turn that back on and we turn synchronous commit",
    "start": "215200",
    "end": "220599"
  },
  {
    "text": "off it's actually faster than fsync off which is kind of interesting right and I",
    "start": "220599",
    "end": "225879"
  },
  {
    "text": "was actually talking to the the the person that committed this for postgress and he was like thank you very much he's been trying to tell people about this",
    "start": "225879",
    "end": "231439"
  },
  {
    "text": "for a long time he was very happy to see this now you can turn both of them off and you get a slight performance",
    "start": "231439",
    "end": "237120"
  },
  {
    "text": "Improvement but look it's really only 4% are you going to risk your whole",
    "start": "237120",
    "end": "242159"
  },
  {
    "text": "database being corrupted for 4 more per. I mean it's an option but it's not one that we really think you should be using",
    "start": "242159",
    "end": "247920"
  },
  {
    "text": "because look you get 104% Improvement by just doing synchronous commit",
    "start": "247920",
    "end": "253120"
  },
  {
    "text": "off so what about Big Data loads now this is a little different right you're doing a bulk load if you do this you can actually see",
    "start": "253120",
    "end": "260600"
  },
  {
    "text": "when we go and we use 256 checkpoint segments we get a big reduction almost 40% so that's an actual real parameter",
    "start": "260600",
    "end": "267600"
  },
  {
    "text": "you want to change when you're doing this kind of work now if we do turn",
    "start": "267600",
    "end": "272919"
  },
  {
    "text": "fsync off look not really much improvement and even synchronous commit doesn't make much difference here",
    "start": "272919",
    "end": "277960"
  },
  {
    "text": "because you're only really doing one big load right and turning the both off again little bit of improvement but",
    "start": "277960",
    "end": "284400"
  },
  {
    "text": "we're talking 3% again so again probably not worth to make that change you're better off just having more checkpoint",
    "start": "284400",
    "end": "292680"
  },
  {
    "text": "segments so someone said well what about on index builds so we did the same thing now again these ones are time so we want",
    "start": "292680",
    "end": "298919"
  },
  {
    "text": "them to be smaller just like in the last example and I started out with the maintenance work memory set to the minimum 16 Meg right and the checkpoint",
    "start": "298919",
    "end": "306919"
  },
  {
    "text": "segment set to 16 as well and you can see with fsync turned off where fsync equals zero we saw a Whole 30 seconds of",
    "start": "306919",
    "end": "313960"
  },
  {
    "text": "improvement or not even that you know not much now look at when we go and change the maintenance work memory to a",
    "start": "313960",
    "end": "319319"
  },
  {
    "text": "gig we see a nice reduction right and if we change the checkpoint segments to",
    "start": "319319",
    "end": "325360"
  },
  {
    "text": "1024 we actually see another great Improvement so this is really just showing you that you know depending on",
    "start": "325360",
    "end": "330880"
  },
  {
    "text": "the action you're taking you really want to look at the parameters and you want to do a bunch of testing and the great thing about RDS is you can take your",
    "start": "330880",
    "end": "337240"
  },
  {
    "text": "production system you can make a copy of it you know couple clicks and then you can run with these new parameters and",
    "start": "337240",
    "end": "343080"
  },
  {
    "text": "test all of it it's very simple I also get a lot of customers say well should I just set the parameters really large I'm",
    "start": "343080",
    "end": "349400"
  },
  {
    "text": "on a big box I got 200 gig of RAM should I set you know my maintenance work memory to 100 Gig like I don't know so I",
    "start": "349400",
    "end": "356880"
  },
  {
    "text": "ran this test where I did an index build on a 20 gig table I started out with the default of 16 Meg for the maintenance",
    "start": "356880",
    "end": "362160"
  },
  {
    "text": "work memory and you can see I got 29 minutes when I increase it to 4 gig I",
    "start": "362160",
    "end": "367319"
  },
  {
    "text": "get a slight Improvement but I only got a minute back it's kind of odd so I thought well what about on just a gig",
    "start": "367319",
    "end": "374120"
  },
  {
    "text": "and it's faster right now this is going to depend on you know your system and",
    "start": "374120",
    "end": "379280"
  },
  {
    "text": "you know what you're doing but even 512 turned out to be a little faster so you",
    "start": "379280",
    "end": "385080"
  },
  {
    "text": "know it's not necessarily that you always want to set your parameters really large you want to test them now now everybody's system is different how",
    "start": "385080",
    "end": "391199"
  },
  {
    "text": "many processors you have how much parallelization you can do that all depends right but you really want to",
    "start": "391199",
    "end": "396680"
  },
  {
    "text": "test all these all these things out the other one we get a lot of questions about is vacuuming so I did",
    "start": "396680",
    "end": "403880"
  },
  {
    "start": "400000",
    "end": "400000"
  },
  {
    "text": "that insert I've loaded my tables but I didn't do any updates or deletes so I shouldn't need to vacuum right so I was",
    "start": "403880",
    "end": "410400"
  },
  {
    "text": "running 100% readon workload and you can see the green line is right eye Ops and",
    "start": "410400",
    "end": "415800"
  },
  {
    "text": "this is cloudwatch metrics that you can get with RDS and you'll notice I start that test off I'm getting 21,000",
    "start": "415800",
    "end": "421800"
  },
  {
    "text": "transactions per second which is quite great but I'm doing like 5,000 rights",
    "start": "421800",
    "end": "427280"
  },
  {
    "text": "per second what's going on here well postgress leaves rows in states where",
    "start": "427280",
    "end": "433800"
  },
  {
    "text": "some point it wants to flush them back out and it's this one specifically is called hint bits and I won't go into all",
    "start": "433800",
    "end": "439680"
  },
  {
    "text": "the details you can read about it in the manual but what we needed to do is we need to actually vacuum the table out",
    "start": "439680",
    "end": "445840"
  },
  {
    "text": "and so I stop the test I do a vacuum and you can see how much work it's doing cuz it's up to to 20,000 doing 20,000 iops",
    "start": "445840",
    "end": "451840"
  },
  {
    "text": "to get that out and then once that's done you can see in that pink area I reran my read test I get 45,000",
    "start": "451840",
    "end": "458160"
  },
  {
    "text": "transactions per second so a dramatic difference because what postgress was doing was as it was reading those blocks",
    "start": "458160",
    "end": "463960"
  },
  {
    "text": "it was writing them back out some of them so now it doesn't have to do that it can run much faster so you really",
    "start": "463960",
    "end": "469800"
  },
  {
    "text": "want to pay attention to a lot of your vacuum settings in postgress because otherwise you're actually going to have",
    "start": "469800",
    "end": "474840"
  },
  {
    "text": "you know lower performance so what do you really want to look at when you're setting these",
    "start": "474840",
    "end": "480240"
  },
  {
    "start": "477000",
    "end": "477000"
  },
  {
    "text": "well first you can do vacuuming yourself manually but a lot of people just rely on the autov vacuum function it will",
    "start": "480240",
    "end": "486680"
  },
  {
    "text": "basically kick in when you have the vacuum threshold plus the scale factor",
    "start": "486680",
    "end": "492680"
  },
  {
    "text": "basically hit on a table and that is a defaults to 20% out of the box so the PG",
    "start": "492680",
    "end": "498840"
  },
  {
    "text": "class Rel tles is essentially how many rows you have in your table if more than 20% of them change then it's going to",
    "start": "498840",
    "end": "504319"
  },
  {
    "text": "vacuum your table the vacuum threshold I think is set to 50 so it's it's actually unless you have a tiny table doesn't even really come into account and then",
    "start": "504319",
    "end": "511639"
  },
  {
    "text": "the other parameters you want to look at is how hard autov vacuum will actually run and this is kind of interesting",
    "start": "511639",
    "end": "517039"
  },
  {
    "text": "because there's a lot of little settings here which if you don't tune you probably won't get through vacuuming all",
    "start": "517039",
    "end": "522320"
  },
  {
    "text": "your tables on a regular basis so the number of workers you can do so am of parallelism the nap time it'll stop",
    "start": "522320",
    "end": "528839"
  },
  {
    "text": "after each time it does a vacuum and if you set that to like a day you'll get one vacuum done a day right um the cost",
    "start": "528839",
    "end": "535720"
  },
  {
    "text": "limit and cost delay basically how hard will autovacuum work so every time it looks at a row that is a particular cost",
    "start": "535720",
    "end": "543279"
  },
  {
    "text": "higher cost if it's on dis lower if it's in memory and then when it hits that limit it delays so it sleeps for you",
    "start": "543279",
    "end": "549959"
  },
  {
    "text": "know some number of milliseconds so in this you can tune so it can you know take a long time but be very smooth on",
    "start": "549959",
    "end": "556720"
  },
  {
    "text": "your system or you can have it work harder so it's really things that you want to really set one of the other new parameters that",
    "start": "556720",
    "end": "563480"
  },
  {
    "text": "we introduced uh or sorry new extensions we introduced on this Monday with our latest release of 935 is postgress fdw",
    "start": "563480",
    "end": "571320"
  },
  {
    "text": "now this is a really nice extension because it allows you to basically read or write to other databases that are",
    "start": "571320",
    "end": "576480"
  },
  {
    "text": "postgress or postgress front ends and I thought well what better way to show this than to use Amazon red shift",
    "start": "576480",
    "end": "583200"
  },
  {
    "text": "because it has a postgress front end and we can see how you might integrate that with your regular postest database so I",
    "start": "583200",
    "end": "589560"
  },
  {
    "text": "create an extension and you can see here that you know red shift. Amazon aws.com",
    "start": "589560",
    "end": "594959"
  },
  {
    "text": "so I'm actually connecting to a real red shift instance I go create the user mapping and the foreign table definition",
    "start": "594959",
    "end": "600440"
  },
  {
    "text": "and I can do a count from that table I didn't have a lot of data in there but I can also insert which is kind of interesting so this is a way for you to",
    "start": "600440",
    "end": "608240"
  },
  {
    "text": "basically move data in and out of RDS and to link to other databases and I think like you know having red shift",
    "start": "608240",
    "end": "613680"
  },
  {
    "text": "tables available in your application is a really kind of cool way to you know have data warehousing you know and not",
    "start": "613680",
    "end": "620920"
  },
  {
    "text": "have to go make another connection for your application one of the other things we",
    "start": "620920",
    "end": "626800"
  },
  {
    "start": "625000",
    "end": "625000"
  },
  {
    "text": "added was support for the session replication role which is actually not a ro it's an actual session based parameter which I really like um and",
    "start": "626800",
    "end": "634560"
  },
  {
    "text": "this is essentially used by all the third-party replication tools for postgress pretty",
    "start": "634560",
    "end": "640320"
  },
  {
    "text": "much and what it does is it really helps you um deal with triggers and replication and I'll show a little",
    "start": "640320",
    "end": "646120"
  },
  {
    "text": "example here so assume you have two databases you have two tables and you're basically triggering inserts into each",
    "start": "646120",
    "end": "652120"
  },
  {
    "text": "other across them let's say with an fdw um so if you were to do an insert into one of these that insert is going to go",
    "start": "652120",
    "end": "659360"
  },
  {
    "text": "into the table and fire the trigger right well that trigger is going to go and basically Loop it around and insert",
    "start": "659360",
    "end": "665120"
  },
  {
    "text": "it into the other table and that trigger is going to fire and it's going to go around in that Circle forever or unless you if you had a primary key you'd get a",
    "start": "665120",
    "end": "671320"
  },
  {
    "text": "nice little error so what the session replication role does is allows you to say don't fire triggers depending on",
    "start": "671320",
    "end": "677800"
  },
  {
    "text": "what that role is set to so why do you care about this well because it allows",
    "start": "677800",
    "end": "682959"
  },
  {
    "start": "682000",
    "end": "682000"
  },
  {
    "text": "us to support things like Bardo list and some of the other third party replication tools so in this example I",
    "start": "682959",
    "end": "689720"
  },
  {
    "text": "installed Bardo on an Amazon ec2 instance why did I do that instead of RDS well it requires the um PL Pearl U",
    "start": "689720",
    "end": "696760"
  },
  {
    "text": "the unsafe version of pearl which we don't support inside of RDS but Bardo is",
    "start": "696760",
    "end": "702639"
  },
  {
    "text": "nice because it reaches out and talks to things so you can have an RDS instance that you can basically replicate into",
    "start": "702639",
    "end": "709399"
  },
  {
    "text": "out of or even multimaster so that's actually a really nice way if you if you need to move data into RDS or you want",
    "start": "709399",
    "end": "716360"
  },
  {
    "text": "to run sort of a hybrid mode where you have an RDS instance Plus plus an on premise or an ec2 instance now some",
    "start": "716360",
    "end": "722399"
  },
  {
    "text": "people will say well what about if I want multimaster between two RDS instances well it's not possible to do",
    "start": "722399",
    "end": "729839"
  },
  {
    "text": "directly but again you can use Bardo as to be the thing in between them and you can actually do this and I set this up",
    "start": "729839",
    "end": "736279"
  },
  {
    "text": "and it was running great and worked really nicely so there are sort of opportunities now I'm not an expert on",
    "start": "736279",
    "end": "741440"
  },
  {
    "text": "any of these sort of third party tools but you know LA and some of these other ones they definitely uh they work with",
    "start": "741440",
    "end": "747560"
  },
  {
    "text": "the with the session replication role so let's jump into scale and",
    "start": "747560",
    "end": "752880"
  },
  {
    "text": "availability so again we have a lot of customers that have questions about that and one of the big announcements that we",
    "start": "752880",
    "end": "758440"
  },
  {
    "text": "made was support for read replicas on Monday so this is a really great feature that we've had in MySQL uh engine for a",
    "start": "758440",
    "end": "765160"
  },
  {
    "start": "759000",
    "end": "759000"
  },
  {
    "text": "while and that we wanted to you know have for postgress as well so our",
    "start": "765160",
    "end": "770240"
  },
  {
    "text": "general story on availability is we like our multi product it's synchronous replication what's nice about",
    "start": "770240",
    "end": "775480"
  },
  {
    "text": "synchronous replication is we know your data is going to be on the second so there's no data loss when you want to",
    "start": "775480",
    "end": "781199"
  },
  {
    "text": "fail over right so you know that's great but some people say look I need even higher availability than that I need to",
    "start": "781199",
    "end": "787600"
  },
  {
    "text": "have high read availability so let's say you have a Blog application most of your people coming in are only doing reads",
    "start": "787600",
    "end": "794279"
  },
  {
    "text": "there's a few people that are probably writing blogs but probably 95 99% of them are doing reads so what you can do",
    "start": "794279",
    "end": "799560"
  },
  {
    "text": "for that kind of application is you can create one or more read replicas and this is postgress you know streaming",
    "start": "799560",
    "end": "805839"
  },
  {
    "text": "asynchronous replication that you know you would use uh today with post stress and you have to change your application",
    "start": "805839",
    "end": "811199"
  },
  {
    "text": "obviously so that it you know does the eventually consistent reads over to the read replicas and you still want the",
    "start": "811199",
    "end": "816320"
  },
  {
    "text": "rights and the reads that need to read those rights to come from the primary but the way this works and how it helps",
    "start": "816320",
    "end": "822160"
  },
  {
    "text": "with availability is let's say something happens to your primary well we're going to fail that over but that takes about",
    "start": "822160",
    "end": "828199"
  },
  {
    "text": "60 seconds to happen so while that's happening you can't write but the nice thing is hey your blog application is",
    "start": "828199",
    "end": "834759"
  },
  {
    "text": "still working because most of the people are just doing reading right and this goes the the same you know once the",
    "start": "834759",
    "end": "841240"
  },
  {
    "text": "database comes fails over you know you can write again and we're going to stream those uh you know changes over to",
    "start": "841240",
    "end": "846600"
  },
  {
    "text": "the secondary so you're all back together and this is if you're doing let's say upgrades you can use the same",
    "start": "846600",
    "end": "851959"
  },
  {
    "text": "model where you can keep reading while you're doing a change or an upgrade to your uh to your database or your application and of course because you're",
    "start": "851959",
    "end": "858399"
  },
  {
    "text": "going to have more than one read replica you can upgrade them you know at different times so you can sort of roll through them so it's a nice way to to",
    "start": "858399",
    "end": "864800"
  },
  {
    "text": "add availability uh to your application the other thing that you know read",
    "start": "864800",
    "end": "870560"
  },
  {
    "start": "869000",
    "end": "869000"
  },
  {
    "text": "replicas is us are used for is scale a lot of people do scale out with these so for example in a lot of our regions we",
    "start": "870560",
    "end": "877639"
  },
  {
    "text": "have one or more availability zones in this one I'm showing three fake azs and you normally start off with the one",
    "start": "877639",
    "end": "882800"
  },
  {
    "text": "database the one application running against it and of course we recommend that you have multi-az running again and",
    "start": "882800",
    "end": "889040"
  },
  {
    "text": "you have multiple application servers in each of the availability zones but now each of those can go and read from a",
    "start": "889040",
    "end": "894800"
  },
  {
    "text": "local read replica so the latency is really good and you can get scale out of it uh and you can have you know this is",
    "start": "894800",
    "end": "902000"
  },
  {
    "text": "just showing one in each but you could have them all in one you know it's very flexible that way now one of the things to think about",
    "start": "902000",
    "end": "907959"
  },
  {
    "start": "907000",
    "end": "907000"
  },
  {
    "text": "when you're using read replicas for scale is how much writing am I doing because let's say you have an example",
    "start": "907959",
    "end": "914639"
  },
  {
    "text": "where you have 90% reads and 10% wrs if you go and do four replicas you're going",
    "start": "914639",
    "end": "920839"
  },
  {
    "text": "to be able to move a lot of that read workload to those right but remember that the rights still have to go through",
    "start": "920839",
    "end": "925959"
  },
  {
    "text": "and be done on you know all those replicas now it's maybe not quite as expensive as it is on the primary",
    "start": "925959",
    "end": "931759"
  },
  {
    "text": "because you're not parsing and doing all that but you still have to do those physical rights so when you scale you're",
    "start": "931759",
    "end": "937519"
  },
  {
    "text": "basically adding more to each one so in this case you can see with a 90% read",
    "start": "937519",
    "end": "942839"
  },
  {
    "text": "ratio we can actually get pretty good scale out of it we can get a 3X scale number but on the other hand for example",
    "start": "942839",
    "end": "950759"
  },
  {
    "text": "if you had a the yellow line here where it's 50% right guess what read replicas is not going to do a lot for you you'd",
    "start": "950759",
    "end": "957160"
  },
  {
    "text": "have to use something like 32 nodes to get 2x scale it's not a very good deal so and I show 10% here but you can",
    "start": "957160",
    "end": "963880"
  },
  {
    "text": "imagine if you had 99% reads you would get a lot better scale so we have a lot of customers that use this uh in my SQL",
    "start": "963880",
    "end": "971000"
  },
  {
    "text": "very successfully for scale the one thing I did want to cover was How We Do promotions which is a",
    "start": "971000",
    "end": "976120"
  },
  {
    "start": "974000",
    "end": "974000"
  },
  {
    "text": "little different than you might see uh on premise or on ec2 so let's say we have a read replica that we want to make",
    "start": "976120",
    "end": "983680"
  },
  {
    "text": "into a reporting node well you can always just do a restore but one of the nice things about having is a read",
    "start": "983680",
    "end": "988920"
  },
  {
    "text": "replicas you know it's always caught up right so it's it's right up to date you don't have to wait for a restore to happen so let's say we want to promote",
    "start": "988920",
    "end": "995839"
  },
  {
    "text": "that one well when we run that promote call we get a new primary now you can make this multiz you can create read",
    "start": "995839",
    "end": "1001399"
  },
  {
    "text": "replicas off of it but the important note is notice that nothing else changed in that setup we didn't change any of",
    "start": "1001399",
    "end": "1007120"
  },
  {
    "text": "the other read replicas we didn't re you know parent them to this replica we didn't change anything about your multi-az setup and of course you can",
    "start": "1007120",
    "end": "1014000"
  },
  {
    "text": "just go put a new application points to a new C name and you're off and running",
    "start": "1014000",
    "end": "1020759"
  },
  {
    "text": "now there's some very important sort of parameters to think about when you think about using uh streaming replication",
    "start": "1021079",
    "end": "1026240"
  },
  {
    "text": "with with postgress and the big one that we see is wallke keep segments and how this works is when you're streaming you",
    "start": "1026240",
    "end": "1033360"
  },
  {
    "text": "don't really care about where your logs are because it's being streamed there is no log shipping but let's say that",
    "start": "1033360",
    "end": "1038918"
  },
  {
    "text": "replication link breaks for for a little bit because the Network's having a little problem well you're going to",
    "start": "1038919",
    "end": "1044038"
  },
  {
    "text": "start accumulating logs on the primary so you're going to keep doing this and let's say you the wall keep segment set",
    "start": "1044039",
    "end": "1049960"
  },
  {
    "text": "to 98 well when you hit 99 logs postgress wants to start removing them to clean it up space the nice thing with",
    "start": "1049960",
    "end": "1056679"
  },
  {
    "text": "RDS of course is that we actually put them in the you know the cloud we back them up all the time for you so we can",
    "start": "1056679",
    "end": "1064880"
  },
  {
    "text": "manually apply those on the read replica and even though it's removed from the",
    "start": "1064880",
    "end": "1070640"
  },
  {
    "text": "primary it's going to get shipped down to the read replica where it can get applied So This Is How We Do catchup and",
    "start": "1070640",
    "end": "1076120"
  },
  {
    "text": "this is a really nice feature because it means even if you run out of space we will catch you up but during that time",
    "start": "1076120",
    "end": "1081880"
  },
  {
    "text": "you're going to be into log apply so it's going to be your lag is going to be greater so the trade-off on wall keep",
    "start": "1081880",
    "end": "1089320"
  },
  {
    "text": "segments is when you know the replication comes back together you know it'll take you a little longer to catch",
    "start": "1089320",
    "end": "1095120"
  },
  {
    "text": "up so it's a space tradeoff now segments are only 16 Meg and you really want to think about how much space that you'd",
    "start": "1095120",
    "end": "1100880"
  },
  {
    "text": "like to trade off so that your streaming replication will basically come back sooner in the case of some disruption",
    "start": "1100880",
    "end": "1109000"
  },
  {
    "start": "1110000",
    "end": "1110000"
  },
  {
    "text": "the other replication parameters that are really important is how this this replicas work with queries so in this",
    "start": "1110039",
    "end": "1117240"
  },
  {
    "text": "example I have a source and a replica and it has a table and it has a row in there with a primary key of A and A text",
    "start": "1117240",
    "end": "1122520"
  },
  {
    "text": "of Fu let's say I run a long running query on my replica select from T1 now",
    "start": "1122520",
    "end": "1128960"
  },
  {
    "text": "no one's ever had a user that forgot to do a wear Clause have they nah it's never happened on your database right so",
    "start": "1128960",
    "end": "1134360"
  },
  {
    "text": "this thing's going to take hours to run for example what happens if we go do an update to that",
    "start": "1134360",
    "end": "1139480"
  },
  {
    "text": "on the source well for postgress how it does its mvcc is to essentially make a",
    "start": "1139480",
    "end": "1147880"
  },
  {
    "text": "new row and keep the old one around to satisfy any queries so that's what it",
    "start": "1147880",
    "end": "1153039"
  },
  {
    "text": "looks like we get up that new row called A- bar this of course is going to be replicated down to a replica just like",
    "start": "1153039",
    "end": "1160360"
  },
  {
    "text": "you'd expect no problem there but let's say the administrator decides to do a vacuum on that table well that vacuum is",
    "start": "1160360",
    "end": "1168159"
  },
  {
    "text": "going to remove move that old row because it's not needed there was nobody quering it on the old uh",
    "start": "1168159",
    "end": "1173640"
  },
  {
    "text": "Source now the replication kicks in that's going to replicate basically the removal of that row when that happens",
    "start": "1173640",
    "end": "1180760"
  },
  {
    "text": "this is what happens that query that was running for an hour gets broken and you get this nice error and it didn't just",
    "start": "1180760",
    "end": "1186720"
  },
  {
    "text": "break your query it broke your connection actually so how do you how can you deal with this well I mean you",
    "start": "1186720",
    "end": "1192880"
  },
  {
    "text": "could not run long running queries on your on your uh replica but that may not always be possible so there's three key",
    "start": "1192880",
    "end": "1199159"
  },
  {
    "text": "parameters and they all kind of function differently but they're all trade-offs vacuum defer cleanup age essentially",
    "start": "1199159",
    "end": "1204799"
  },
  {
    "text": "says to wait you know whatever amount of time you set before the vacuum will kick",
    "start": "1204799",
    "end": "1210880"
  },
  {
    "text": "in on the primary so that will basically you know cause a little more bloat to happen Max stand by streaming delay will",
    "start": "1210880",
    "end": "1218360"
  },
  {
    "text": "actually say don't apply a change on the replica that will break a query for this amount of time so of course the bad part",
    "start": "1218360",
    "end": "1225320"
  },
  {
    "text": "about that is it's going to cause replica lag and then the Third third one is hot stand by feedback where the",
    "start": "1225320",
    "end": "1231480"
  },
  {
    "text": "replica basically sends information back to the source and says hey I have this long running query don't vacuum this",
    "start": "1231480",
    "end": "1237159"
  },
  {
    "text": "information because I still need it that will also cause bloat so you really have to play with these and trade them off on",
    "start": "1237159",
    "end": "1242640"
  },
  {
    "text": "you know how much you know space you want to use how much delay you want to have but this one's actually really key to having good success with uh with",
    "start": "1242640",
    "end": "1250159"
  },
  {
    "text": "replicas and of course you can now that we support replication we also support the PG stat replication View and you can",
    "start": "1250159",
    "end": "1256919"
  },
  {
    "text": "see here you know just an example Le hey the state is streaming so you get some nice information feedback on uh on the",
    "start": "1256919",
    "end": "1262840"
  },
  {
    "text": "state we also have a cloudwatch metric that shows the lag of your replicas so you can monitor it that way as",
    "start": "1262840",
    "end": "1269400"
  },
  {
    "text": "well and of course all this Benchmark and everything I did how did I look at all that those numbers how did I see",
    "start": "1269400",
    "end": "1275200"
  },
  {
    "text": "what was going on I use the extension PG stat statements and we just introduced support for that how do you get this",
    "start": "1275200",
    "end": "1281159"
  },
  {
    "text": "configured on your RDS instance change your parameter group to add it as a shared pre-load Library once you've done",
    "start": "1281159",
    "end": "1286640"
  },
  {
    "text": "that you can start using it and it's you know it's super handy for really tuning and seeing what's going on in your",
    "start": "1286640",
    "end": "1291799"
  },
  {
    "text": "database you know the old method was to turn on a lot of logging dump it to the log then post process the log this is",
    "start": "1291799",
    "end": "1297720"
  },
  {
    "text": "super nice because it's all there in your database ready to go there's a bunch of parameters as well that you can tune this with I think there's like four",
    "start": "1297720",
    "end": "1303440"
  },
  {
    "text": "parameters that change sort of the settings as well so other things that we've done in",
    "start": "1303440",
    "end": "1308840"
  },
  {
    "text": "935 uh we support pv8 now the JavaScript engine so that's really nice um the test",
    "start": "1308840",
    "end": "1314559"
  },
  {
    "text": "parser extension now I know all of you are really excited about this how many people know what that does almost nobody yeah I I didn't know",
    "start": "1314559",
    "end": "1322720"
  },
  {
    "text": "what it did either and our customer said look you know we don't use it much but we use it to do some validation so we were like great we'll we we'll put it in",
    "start": "1322720",
    "end": "1329120"
  },
  {
    "text": "with this release so that was nice uh we put a new version of postgis into the build uh that fixed a few bugs as well",
    "start": "1329120",
    "end": "1335919"
  },
  {
    "text": "as we added support for grid shift files which I still don't understand what that does but it's a it's a good feature and",
    "start": "1335919",
    "end": "1342120"
  },
  {
    "text": "then of course we support shared preload libraries um but at the moment the only one we support is PJ statement stats but",
    "start": "1342120",
    "end": "1348320"
  },
  {
    "text": "in the the future we'll be able to add other ones as customers sort of give us feedback on other things they'd like to",
    "start": "1348320",
    "end": "1354080"
  },
  {
    "text": "see now I wanted to cover some stuff that's a little more general not specific on",
    "start": "1354080",
    "end": "1359480"
  },
  {
    "start": "1355000",
    "end": "1355000"
  },
  {
    "text": "post grass and it's really about Burst Mode Computing because this is something we've rolled out over the last year that",
    "start": "1359480",
    "end": "1364880"
  },
  {
    "text": "I think is really important for all of our customers especially from a deep perspective to understand how these things work because I think there's a",
    "start": "1364880",
    "end": "1369919"
  },
  {
    "text": "ton of Leverage here for you from a sort of price performance perspective so we have two basic uh additions the gp2",
    "start": "1369919",
    "end": "1377840"
  },
  {
    "text": "storage type from EBS that we support and it's an SSD one much like the provision to iops model except for",
    "start": "1377840",
    "end": "1384400"
  },
  {
    "text": "instead of specifying how many iops you want you just tell us how much storage and then you get three iops per gig so",
    "start": "1384400",
    "end": "1391880"
  },
  {
    "text": "you buy 100 Gig you get a regular steady state of 300 iops now if you don't use all 300 iops they sort of go into your",
    "start": "1391880",
    "end": "1398720"
  },
  {
    "text": "piggy bank and then you can use them back up you can burst basically to at least 3,000 or higher depending upon the",
    "start": "1398720",
    "end": "1404520"
  },
  {
    "text": "size and that's I'll show you how that looks and then on the ec2 side we have the t2 line which we start as a T2 dbt2",
    "start": "1404520",
    "end": "1412200"
  },
  {
    "text": "micro small and medium and these do the same thing where you have base CPU",
    "start": "1412200",
    "end": "1417559"
  },
  {
    "text": "credits if you use them all up it's great but if you don't you get to spend them later and you get to burst and the",
    "start": "1417559",
    "end": "1423520"
  },
  {
    "text": "thing I really like about the t2 is there's actually a cloudwatch metric that shows you that which I'll I'll show you an example so this is actually",
    "start": "1423520",
    "end": "1430360"
  },
  {
    "text": "running a real Benchmark of a read workload where we start off getting really good",
    "start": "1430360",
    "end": "1437360"
  },
  {
    "text": "performance 6 th000 transactions per second really quite remarkable this is a T2 medium with a 200 gig uh gp2 volume",
    "start": "1437360",
    "end": "1447919"
  },
  {
    "text": "or uh size so what happened on that first drop well that's when we ran out",
    "start": "1447919",
    "end": "1453919"
  },
  {
    "text": "of gp2 credits so you can see that there's dramatic reduction but hey look we ran for almost",
    "start": "1453919",
    "end": "1459880"
  },
  {
    "text": "two hours before that happened and then I run a long long time many hours before",
    "start": "1459880",
    "end": "1465399"
  },
  {
    "text": "I exhaust the t2 credits so then I dropped down to 2 200 now this seems like a big drop but still it's actually",
    "start": "1465399",
    "end": "1471440"
  },
  {
    "text": "doing quite a bit of good work for me there how do I see how I'm exhausting the credits on the t2 well there's a",
    "start": "1471440",
    "end": "1478200"
  },
  {
    "start": "1475000",
    "end": "1475000"
  },
  {
    "text": "nice little graph and you can see since I was doing a steady state test my CPU credit balance just slowly drops in the",
    "start": "1478200",
    "end": "1483600"
  },
  {
    "text": "yellow there as we go on until it hits zero and then you can see from the CPU graph in the green how it basically",
    "start": "1483600",
    "end": "1489799"
  },
  {
    "text": "drops down quite a bit now that's all nice but why do you",
    "start": "1489799",
    "end": "1495600"
  },
  {
    "start": "1493000",
    "end": "1493000"
  },
  {
    "text": "care about this well it's about price performance",
    "start": "1495600",
    "end": "1500320"
  },
  {
    "text": "so I took an older model one of our past generation systems a DB M1 medium 4 gig",
    "start": "1501360",
    "end": "1508559"
  },
  {
    "text": "of RAM and I had a 200 gig standard uh magnetic you know storage on",
    "start": "1508559",
    "end": "1514120"
  },
  {
    "text": "it so this is what you know we used to have everybody runs still a lot of our customers run it and I ran this Benchmark I got about 1,200 TPS out of",
    "start": "1514120",
    "end": "1521279"
  },
  {
    "text": "it and the cost was about 57.5 cents an hour one of the reasons why it was so expensive is it's a past generation",
    "start": "1521279",
    "end": "1527279"
  },
  {
    "text": "system but but also because you get charged per IOP well per million iops on the standard uh e EBS so this is going",
    "start": "1527279",
    "end": "1536320"
  },
  {
    "text": "to add up if you're actually doing a lot of iops which I was in this test so I said well okay let's go use a more",
    "start": "1536320",
    "end": "1541520"
  },
  {
    "text": "modern system one of our M3 mediums and this time I used the provisioned iops",
    "start": "1541520",
    "end": "1547480"
  },
  {
    "text": "and I bought 200 gig with 2,000 iops and you can see I got double the performance",
    "start": "1547480",
    "end": "1553520"
  },
  {
    "text": "and wait I'm spending less money so it does show that you know sometimes depending on your what you're doing you",
    "start": "1553520",
    "end": "1559559"
  },
  {
    "text": "definitely want to pick up the newer models of our our Fleet I noticed that I",
    "start": "1559559",
    "end": "1564720"
  },
  {
    "text": "was a little CPU bound on this test so I thought well let's let's throw an M3 large at it so that's the next jump up",
    "start": "1564720",
    "end": "1571279"
  },
  {
    "text": "it's got a little more RAM as well so I got a little more got up to 3,000 but I was basically running out of iops there",
    "start": "1571279",
    "end": "1577679"
  },
  {
    "text": "so I wasn't going to get a lot better but still good Improvement and if you actually look at it the price performance is about the",
    "start": "1577679",
    "end": "1582840"
  },
  {
    "text": "same now let's go look at the t2s so the first one I picked was that T2 medium",
    "start": "1582840",
    "end": "1588320"
  },
  {
    "text": "with the 200 gigs of gp2 storage what was very interesting about in this particular test which is a little",
    "start": "1588320",
    "end": "1593600"
  },
  {
    "text": "different than the previous one is that I get really good performance right off",
    "start": "1593600",
    "end": "1598799"
  },
  {
    "text": "the bat more than 3 and a half thousand transactions per second and the remarkable thing look at that cost it's",
    "start": "1598799",
    "end": "1604399"
  },
  {
    "text": "10. half cents an hour that's almost a quarter of the cost of the medium the M3",
    "start": "1604399",
    "end": "1611279"
  },
  {
    "text": "medium so that's REM markable now it does drop down after a couple of hours and I'm not getting that great performance now I'm getting you know",
    "start": "1611279",
    "end": "1617640"
  },
  {
    "text": "less than a, so I was I said to myself well the nice thing about gp2 is if I want more iops all I have to do is buy",
    "start": "1617640",
    "end": "1624880"
  },
  {
    "text": "more space so I went and provisioned one with a terabyte instead and that's in the gray so you can see now the cost",
    "start": "1624880",
    "end": "1632679"
  },
  {
    "text": "went up we're now paying 23.3 cents an hour but look at that we got 6,000",
    "start": "1632679",
    "end": "1637960"
  },
  {
    "text": "transactions per second until we hit the first cap on the on the gp2 so even when",
    "start": "1637960",
    "end": "1645039"
  },
  {
    "text": "it dropped down we're still at 4,000 and look at how many hours we at that so you go to almost 18 hours of sustained",
    "start": "1645039",
    "end": "1652120"
  },
  {
    "text": "really good performance better than any of the other options and even when we drop down right at the",
    "start": "1652120",
    "end": "1657799"
  },
  {
    "text": "end notice that we're still almost the same as the M3 medium and look at the",
    "start": "1657799",
    "end": "1663000"
  },
  {
    "text": "price difference there it's almost half the cost so even when it was not bursting it's still great economics and",
    "start": "1663000",
    "end": "1670360"
  },
  {
    "text": "when it is bursting it's unbelievable economics so now whether a T2 fits you",
    "start": "1670360",
    "end": "1675960"
  },
  {
    "text": "or a gp2 does but I would definitely check them out especially the gp2 if you're using magnetic today it's a great",
    "start": "1675960",
    "end": "1682240"
  },
  {
    "text": "option to get you basically more performance for a lower cost so you'll actually save money by running gp2 for",
    "start": "1682240",
    "end": "1688919"
  },
  {
    "text": "most database workloads over magnetic so we're really encouraging customers to go to go check that out and with that I'm",
    "start": "1688919",
    "end": "1696120"
  },
  {
    "text": "going to turn it over to Greg who's going to talk about his experience with uh RDS thank",
    "start": "1696120",
    "end": "1701320"
  },
  {
    "text": "youy everyone I'm Greg Roberts I'm the associate director of uh cloud computing",
    "start": "1701320",
    "end": "1706919"
  },
  {
    "text": "at um alumina uh how many people have heard of",
    "start": "1706919",
    "end": "1712640"
  },
  {
    "text": "DNA okay I'm assuming there's more people than that but how many people have heard of alumina before it just got",
    "start": "1712640",
    "end": "1718559"
  },
  {
    "text": "brought up today a couple people um so for the people that haven't heard of DNA um come see me",
    "start": "1718559",
    "end": "1724799"
  },
  {
    "text": "after this uh talk and I'll fill you in um but alumina is the leading provider",
    "start": "1724799",
    "end": "1732559"
  },
  {
    "start": "1731000",
    "end": "1731000"
  },
  {
    "text": "of genomic sequencing and array Technologies so we like to say that",
    "start": "1732559",
    "end": "1737720"
  },
  {
    "text": "almost more than 90% of the world's bases that are sequenced throughout the world are done on our technology so if",
    "start": "1737720",
    "end": "1744440"
  },
  {
    "text": "you've ever you know ran into anywhere where you've gotten sequenced or genotyped um it probably happened on one",
    "start": "1744440",
    "end": "1749640"
  },
  {
    "text": "of our instruments um it's also interesting to know that earlier in this year we",
    "start": "1749640",
    "end": "1755600"
  },
  {
    "text": "announced uh what we call the high seek X which was the first instrument that's capable of producing a $1,000 genome um",
    "start": "1755600",
    "end": "1763039"
  },
  {
    "text": "this may not seem too interesting to some people but if you look at Moore's Law compared to what we call a flat Le",
    "start": "1763039",
    "end": "1770000"
  },
  {
    "text": "law um about 10 or 12 years ago the first genome that was sequenced cost",
    "start": "1770000",
    "end": "1775600"
  },
  {
    "text": "about $100 million um so the the price drop of how you know sequencing has been progressing",
    "start": "1775600",
    "end": "1781960"
  },
  {
    "text": "has been outpacing Ms law for a while now um and the other interesting thing",
    "start": "1781960",
    "end": "1787399"
  },
  {
    "text": "is that genomics is really big data so um if I were to get my you know full DNA",
    "start": "1787399",
    "end": "1794200"
  },
  {
    "text": "sequence it would be about 300 to 500 gigabytes of raw data um and one of our really high-end",
    "start": "1794200",
    "end": "1800120"
  },
  {
    "text": "instruments can produce about 1 and a half to 1.8 terabytes in a couple days",
    "start": "1800120",
    "end": "1806200"
  },
  {
    "text": "um so you can imagine uh you've just bought a bunch of these uh sequencers",
    "start": "1806200",
    "end": "1811320"
  },
  {
    "text": "and now you have a data problem um so aluminous answer to to that data problem",
    "start": "1811320",
    "end": "1816360"
  },
  {
    "text": "is a product or a service that we call Base Bas um and this is a service that we run in",
    "start": "1816360",
    "end": "1822600"
  },
  {
    "text": "AWS um it does several things uh for our users one of the things is it is uh",
    "start": "1822600",
    "end": "1828360"
  },
  {
    "text": "instrument management so setting up your you know your SE your sequencer and monitoring and all that um you sort of",
    "start": "1828360",
    "end": "1835399"
  },
  {
    "text": "have that tight integration um the unique thing about our platform is as the data is being",
    "start": "1835399",
    "end": "1840480"
  },
  {
    "text": "produced that 1.8 terabytes or less it's constantly being streaming stream to AWS",
    "start": "1840480",
    "end": "1845840"
  },
  {
    "text": "so we don't wait till the very end to actually put all that data into the system it's sort of we can keep up with",
    "start": "1845840",
    "end": "1851000"
  },
  {
    "text": "the sequencer because it's just sort of uh falling off um so for our customers a big part",
    "start": "1851000",
    "end": "1857559"
  },
  {
    "text": "of what we're offering them is uh data management and sharing so if I've got one of these 400 gigabyte data sets I",
    "start": "1857559",
    "end": "1863960"
  },
  {
    "text": "can just you know create a share link much like you can and Dropbox or box and give other researchers access to",
    "start": "1863960",
    "end": "1870480"
  },
  {
    "text": "it um and and the reason why I'm here today is to talk about one of the components of uh sort of the third tier",
    "start": "1870480",
    "end": "1876440"
  },
  {
    "text": "of what bbas is is doing is it's an application platform uh so for when we",
    "start": "1876440",
    "end": "1881760"
  },
  {
    "text": "first started out about three years ago we initially launched an API much like you know Facebook or Twitter API that",
    "start": "1881760",
    "end": "1888279"
  },
  {
    "text": "allows other websites to sort of integrate with our system but it was really you know for desktop and web applications to integrate and really for",
    "start": "1888279",
    "end": "1895399"
  },
  {
    "text": "genomics researchers what they want to do is is create algorithms package those up and run them with the data so we",
    "start": "1895399",
    "end": "1901840"
  },
  {
    "text": "needed to come up with a way for those algorithms to get packaged up and run securely in our system um around that",
    "start": "1901840",
    "end": "1909279"
  },
  {
    "text": "time is when Docker was announced so is sort of dumb luck for us um that that",
    "start": "1909279",
    "end": "1914600"
  },
  {
    "text": "technology was just getting started and getting popular when we decided that going to build this framework um so the",
    "start": "1914600",
    "end": "1920320"
  },
  {
    "text": "the the three components of the Native app engine um one is the sort of input form so we have a a declarative syntax",
    "start": "1920320",
    "end": "1926720"
  },
  {
    "text": "that people can you know use to create sort of their sets of inputs then we have um their Docker image um when we",
    "start": "1926720",
    "end": "1933919"
  },
  {
    "text": "host our own private registry uh for the docker um containers and then we have a report generation mechanism so you kind",
    "start": "1933919",
    "end": "1940639"
  },
  {
    "text": "of put all those things together and it gives the um our developers a nice way to sort of package up an an analysis",
    "start": "1940639",
    "end": "1948159"
  },
  {
    "text": "uh that's a picture of our developer portal so one of the Key Systems that we",
    "start": "1948159",
    "end": "1954799"
  },
  {
    "start": "1952000",
    "end": "1952000"
  },
  {
    "text": "needed to build that sort of make all this glue uh work is something that we call mission control and Mission Control",
    "start": "1954799",
    "end": "1960840"
  },
  {
    "text": "is very simply just a a Docker job scheduler so on Amazon um obviously",
    "start": "1960840",
    "end": "1966720"
  },
  {
    "text": "you're not dealing with Docker you're dealing with ec2 and Amis um so the sort of overarching goal",
    "start": "1966720",
    "end": "1974000"
  },
  {
    "text": "of this is to be really simple so we like a lot of cloud providers we produce these sort of purpose built Services",
    "start": "1974000",
    "end": "1980039"
  },
  {
    "text": "instead of a monolithic service so we needed something very simple uh we wanted everything to be very you know",
    "start": "1980039",
    "end": "1986240"
  },
  {
    "text": "assd and transactional um we have semi-structured and relational data so",
    "start": "1986240",
    "end": "1991840"
  },
  {
    "text": "we sort of package all that up into uh an API service that's running on Amazon we're using postgress RDS as our as our",
    "start": "1991840",
    "end": "1999679"
  },
  {
    "text": "back end we're using multi-az for all the reasons that U Grant talked about and then on the sort of what is running",
    "start": "1999679",
    "end": "2007399"
  },
  {
    "text": "side the native app Ami we have Docker and then we have a custombuilt fuse driver um in our little uh service",
    "start": "2007399",
    "end": "2015200"
  },
  {
    "text": "called space stock that's sort of doing a bunch of magic to make all this stuff work and if you want to learn more there",
    "start": "2015200",
    "end": "2022360"
  },
  {
    "text": "if you just Google developer Bas space you'll find more about that so some of the reasons why we chose",
    "start": "2022360",
    "end": "2029039"
  },
  {
    "start": "2026000",
    "end": "2026000"
  },
  {
    "text": "postris um you know there's a lot more than I've I've listed here um you know",
    "start": "2029039",
    "end": "2034240"
  },
  {
    "text": "General performance and and compression is really good in postgis so a lot of times you have to tweak other you know",
    "start": "2034240",
    "end": "2039840"
  },
  {
    "text": "if I'm talking about mostly open source Data Systems like my SQL you can do compression now but you know it's not on",
    "start": "2039840",
    "end": "2046240"
  },
  {
    "text": "by default so it's one of the things we like um for us you know coming from maybe an Oracle SQL Server world uh it's",
    "start": "2046240",
    "end": "2053720"
  },
  {
    "text": "it's weird to me that you don't have transactional ddl in some systems um so I think even before MySQL 56 you",
    "start": "2053720",
    "end": "2060878"
  },
  {
    "text": "couldn't even do a lot of online transactional statements you know like adding a column or something so in",
    "start": "2060879",
    "end": "2066960"
  },
  {
    "text": "postgis you know if you say you want these three columns added and if one of them fails you don't want any of them added then",
    "start": "2066960",
    "end": "2072760"
  },
  {
    "text": "that's you know transactional ddl which is very nice um the the type system in postris",
    "start": "2072760",
    "end": "2079040"
  },
  {
    "text": "is really um pretty cool uh they have Json the H store which is sort of a",
    "start": "2079040",
    "end": "2084919"
  },
  {
    "text": "dictionary format um Geo which is powered by postgis um arrays um so for",
    "start": "2084919",
    "end": "2090878"
  },
  {
    "text": "us Json was really important because that's sort of how some of our jobs get declared um so we have a you know part",
    "start": "2090879",
    "end": "2097320"
  },
  {
    "text": "of our schema has this sort of you know Json based part to it um and the other",
    "start": "2097320",
    "end": "2102520"
  },
  {
    "text": "thing that a lot of people maybe don't consider or you know for the cloud it's maybe it's not as important um is licensing so postris is BSD um some of",
    "start": "2102520",
    "end": "2110720"
  },
  {
    "text": "the other database engines are either just totally proprietary or uh GPL um",
    "start": "2110720",
    "end": "2115800"
  },
  {
    "text": "for us we actually package up Bas base and sell it as an appliance um so it's really important that we make technology",
    "start": "2115800",
    "end": "2121359"
  },
  {
    "text": "decisions that can work on that Appliance um without too many legal",
    "start": "2121359",
    "end": "2126800"
  },
  {
    "text": "concerns and then I I think an unspoken sort of momentum um you know I think there's a",
    "start": "2126800",
    "end": "2133160"
  },
  {
    "text": "lot of stuff going on with post Chris so if you've ever heard people talk from Instagram and stuff there's a lot of",
    "start": "2133160",
    "end": "2138599"
  },
  {
    "text": "interesting things going around um with the use of postris and then on the RDS side so you",
    "start": "2138599",
    "end": "2144800"
  },
  {
    "text": "know I'm a developer I'm not a postris DBA or anything um and one of the things I loved about RDS when we first started",
    "start": "2144800",
    "end": "2150720"
  },
  {
    "text": "using it was this all these complex you know multi- standby uh you know or sorry hot standby",
    "start": "2150720",
    "end": "2158079"
  },
  {
    "text": "and read replicas and all that that you know 5 years ago if you would have done that in a small shop you were doing something pretty Advanced um but you",
    "start": "2158079",
    "end": "2165920"
  },
  {
    "text": "know a couple clicks of a mouse and you have this pretty fault tolerant system set up is really powerful um so I",
    "start": "2165920",
    "end": "2171800"
  },
  {
    "text": "wouldn't say you not going to have a DBA on your team but eliminates a lot of the typical things that a DBA may have to",
    "start": "2171800",
    "end": "2178200"
  },
  {
    "text": "do so like I said the complex configurations uh another thing that you",
    "start": "2178200",
    "end": "2183240"
  },
  {
    "text": "know isn't always the easiest is upgrades so um if you've been using um any of the systems in in RDS for a while",
    "start": "2183240",
    "end": "2189920"
  },
  {
    "text": "you know they make it really easy to get to the next version and the next version is usually available pretty pretty you",
    "start": "2189920",
    "end": "2195000"
  },
  {
    "text": "know soon after when it's released and then finally automated backups and restore um you know",
    "start": "2195000",
    "end": "2201520"
  },
  {
    "text": "everybody anybody that's running any transactional system you really need you know automated backups it's just another",
    "start": "2201520",
    "end": "2207319"
  },
  {
    "text": "mouse click or CLI you know call um we often will before we test big releases",
    "start": "2207319",
    "end": "2214200"
  },
  {
    "text": "that have a lot of migrations in them we'll restore a backup of the latest and sort of test out everything and shut it",
    "start": "2214200",
    "end": "2220280"
  },
  {
    "text": "down or um you know you can spend up replicas and make those changes there",
    "start": "2220280",
    "end": "2225960"
  },
  {
    "text": "and then switch it over um for us the transition to RDS was",
    "start": "2225960",
    "end": "2233119"
  },
  {
    "start": "2230000",
    "end": "2230000"
  },
  {
    "text": "pretty smooth when this project got started it was maybe six months before they announced that postris support was",
    "start": "2233119",
    "end": "2239040"
  },
  {
    "text": "there so we just started sort of doing some stuff in production on postgis uh we were using previously um",
    "start": "2239040",
    "end": "2246760"
  },
  {
    "text": "another s provider Enterprise DB and they were sort of Hosting our stuff on ec2 wasn't necessarily anything wrong",
    "start": "2246760",
    "end": "2252680"
  },
  {
    "text": "with it but it didn't have a lot of the benefits that we we know we could get from RDS so we just did a very standard",
    "start": "2252680",
    "end": "2258319"
  },
  {
    "text": "you know PG jump dump and load when that time came to to transfer over um the setup that we've sort of now landed on",
    "start": "2258319",
    "end": "2265440"
  },
  {
    "text": "is a M3 2x large multi-az um it's got about 30 gigs of RAM and we've got about 400 gigs of",
    "start": "2265440",
    "end": "2272000"
  },
  {
    "text": "storage of 4,000 iops uh the two sort of alarms that I",
    "start": "2272000",
    "end": "2277040"
  },
  {
    "text": "you know I set usually on these is high CPU and low dis space I mean obviously low dispas you know you don't want to",
    "start": "2277040",
    "end": "2284240"
  },
  {
    "text": "run out of dis bace uh I CPU I think we it's good to know because a lot of times there's a an application issue if you're",
    "start": "2284240",
    "end": "2290720"
  },
  {
    "text": "really spiking at you know more than 80% CPU for you know and you didn't know about",
    "start": "2290720",
    "end": "2296599"
  },
  {
    "text": "it so for performance tuning um there's a couple tools at your disposal and I'm",
    "start": "2296599",
    "end": "2301800"
  },
  {
    "text": "not going to go into a lot of the complex stuff that um the grant went into but I think it's really good just for normal developers to kind of",
    "start": "2301800",
    "end": "2307920"
  },
  {
    "text": "understand that performance tuning and benchmarking is really easy um and there's a couple tools you know readily",
    "start": "2307920",
    "end": "2314319"
  },
  {
    "text": "available that make it easy and there's a lot of stuff that you can do more advanced um PG tune is just a sort of",
    "start": "2314319",
    "end": "2321119"
  },
  {
    "text": "recommendation um tool that's been converted into a simple website so if you just put in how many CPUs how much",
    "start": "2321119",
    "end": "2327400"
  },
  {
    "text": "memory it'll just sort of spit out well this is the general sort of settings that maybe you should think about um and",
    "start": "2327400",
    "end": "2334160"
  },
  {
    "text": "PG bench is just a very um simple command line that will will throw load at a server and it's got a a bunch of",
    "start": "2334160",
    "end": "2340119"
  },
  {
    "text": "different options on um the schema that you want it to look at and how many you know do you wanted to use transactions",
    "start": "2340119",
    "end": "2347079"
  },
  {
    "text": "or how many threads and all that do you wanted to use um so I'm going to go over some of",
    "start": "2347079",
    "end": "2352839"
  },
  {
    "start": "2349000",
    "end": "2349000"
  },
  {
    "text": "the things that I found um regarded to the the setup that we ended up uh changing the defaults um and",
    "start": "2352839",
    "end": "2361000"
  },
  {
    "text": "overall I think most of the settings that um postris has on RDS are are pretty good but I think some of them are",
    "start": "2361000",
    "end": "2366680"
  },
  {
    "text": "a little conservative um one of the things that I think everybody should look at is the max",
    "start": "2366680",
    "end": "2371960"
  },
  {
    "text": "connection so by default um RDS is looking at the memory size and not the sort of CPU configuration so a lot of",
    "start": "2371960",
    "end": "2378240"
  },
  {
    "text": "the recommendations that I've seen sort of it's it you know everything is application specific but a lot of it's",
    "start": "2378240",
    "end": "2383640"
  },
  {
    "text": "also specific to how many CPUs you have so I think the default that you got um was probably too many connections set so",
    "start": "2383640",
    "end": "2390240"
  },
  {
    "text": "we had lowered that for our instance type um shared buffers most of the",
    "start": "2390240",
    "end": "2395440"
  },
  {
    "text": "literature you read Around is about 25% to 40% of your memory um so we kept the",
    "start": "2395440",
    "end": "2402160"
  },
  {
    "text": "the same there but you can definitely you know test out your different setup um working memory this is sort of",
    "start": "2402160",
    "end": "2409440"
  },
  {
    "text": "tied to how many Max connections you have so this is how much memory a connection will actually take up and if",
    "start": "2409440",
    "end": "2415319"
  },
  {
    "text": "you have too less then you might end up you know running into issues and you have too much then you're you know allocating too much memory for",
    "start": "2415319",
    "end": "2421560"
  },
  {
    "text": "connection um so for us that we changed the default from one to three",
    "start": "2421560",
    "end": "2428480"
  },
  {
    "text": "um and the last one I think that's really um worth bringing up is the maintenance work MIM um this one is set",
    "start": "2428480",
    "end": "2435319"
  },
  {
    "text": "to the engine default which is 16 megabytes which was probably set I don't know eight years ago when you know",
    "start": "2435319",
    "end": "2441079"
  },
  {
    "text": "machines didn't have a lot of memory um this is something that you really need to sort of be aware of when you are",
    "start": "2441079",
    "end": "2447079"
  },
  {
    "text": "making big uh schema changes or adding indexes and stuff like this because this is how much memory do you give that",
    "start": "2447079",
    "end": "2453359"
  },
  {
    "text": "process to carry on that so 16 Megs um in Grant showed a very good sort of bar",
    "start": "2453359",
    "end": "2459000"
  },
  {
    "text": "graph of it sometimes it's very particular to what you're changing but I think you know just coming into this new",
    "start": "2459000",
    "end": "2465319"
  },
  {
    "text": "it's something that hey why did that index take so long to create this is something I would look at and say well maybe that you know can be",
    "start": "2465319",
    "end": "2473319"
  },
  {
    "text": "increased and then finally um I did a really simple uh PG bench just to sort of show how easy some of this stuff is",
    "start": "2473319",
    "end": "2480480"
  },
  {
    "text": "so when we were initially transitioning from um the older instance types to the new instance type I was just curious you",
    "start": "2480480",
    "end": "2487040"
  },
  {
    "start": "2485000",
    "end": "2485000"
  },
  {
    "text": "know you know if I did a very simple test what would the performance difference be",
    "start": "2487040",
    "end": "2492319"
  },
  {
    "text": "and you know obviously Amazon makes this type of stuff really easy just spin up a couple ec2 nodes spin up a couple RDS",
    "start": "2492319",
    "end": "2498599"
  },
  {
    "text": "nodes and now you've got your test set up um so for us we were just comparing",
    "start": "2498599",
    "end": "2504119"
  },
  {
    "text": "the M2 to x large M3 to x large it's a little unfair because the CPUs and stuff",
    "start": "2504119",
    "end": "2509200"
  },
  {
    "text": "you know obviously change so you would expect that the newer ones would be faster um and indeed it was and you know",
    "start": "2509200",
    "end": "2516040"
  },
  {
    "text": "this is the simple command line that we ran just to do a single threaded sort of how many inserts can we do and how fast",
    "start": "2516040",
    "end": "2522880"
  },
  {
    "text": "can I get done you know this is very simplistic example um a lot of what the PG bench tool will actually do is set up",
    "start": "2522880",
    "end": "2529200"
  },
  {
    "text": "the schema and then you can do a lot of different queries and you can track the transactions per second and all that um",
    "start": "2529200",
    "end": "2535440"
  },
  {
    "text": "but I think for postris sort of newbies this is you know something of",
    "start": "2535440",
    "end": "2541200"
  },
  {
    "text": "Interest so that's all I have um one note is uh you know aluminum B space",
    "start": "2541200",
    "end": "2547440"
  },
  {
    "text": "we're always looking for good uh Engineers so if you guys are interested please come talk to me after this thank",
    "start": "2547440",
    "end": "2554359"
  },
  {
    "text": "you Greg so I think we have a little bit of",
    "start": "2554359",
    "end": "2559078"
  },
  {
    "text": "time we can take a few questions I would remind everyone to to give us feedback on the on the talks we really appreciate",
    "start": "2560920",
    "end": "2567160"
  },
  {
    "text": "that so if you get a chance uh go online and do that any",
    "start": "2567160",
    "end": "2573160"
  },
  {
    "text": "questions oh go ahead",
    "start": "2574800",
    "end": "2579119"
  },
  {
    "text": "so the question is how to set up uh read slays yeah um the question was about how to set up read read replicas as we call",
    "start": "2584920",
    "end": "2592440"
  },
  {
    "text": "them uh for postgress uh you have to make sure you're selecting that you have to be on 935 it's the only release",
    "start": "2592440",
    "end": "2598480"
  },
  {
    "text": "that's available so it'll be gr out if you're on like 931 or through 933 that's probably the",
    "start": "2598480",
    "end": "2605599"
  },
  {
    "text": "yeah any other question questions go",
    "start": "2605599",
    "end": "2612440"
  },
  {
    "text": "ahead yes I didn't quite catch that last",
    "start": "2615280",
    "end": "2622079"
  },
  {
    "text": "part so right so the question about setting",
    "start": "2622079",
    "end": "2628040"
  },
  {
    "text": "the dis based check summing on for postgress is that the question right yeah so yeah by default",
    "start": "2628040",
    "end": "2635920"
  },
  {
    "text": "RDS turns on the uh that that check sums for all the instances you know we believe that even though there's a",
    "start": "2635920",
    "end": "2641680"
  },
  {
    "text": "little overhead um you know you really want to know if there's something going wrong with your system in any way and",
    "start": "2641680",
    "end": "2647880"
  },
  {
    "text": "you know I was actually really happy because when we first started looking at postgress uh you know we got lucky that",
    "start": "2647880",
    "end": "2653960"
  },
  {
    "text": "you know 93 was the release that that came in which was our first release so because of course even if you upgrade",
    "start": "2653960",
    "end": "2659400"
  },
  {
    "text": "from you know 92 to 93 you won't get that because you it's only on new crates that you can do it um so if you are",
    "start": "2659400",
    "end": "2665520"
  },
  {
    "text": "doing that you need to like to a dump and load luckily for us we started on the version that supported it",
    "start": "2665520",
    "end": "2671599"
  },
  {
    "text": "so other questions",
    "start": "2671599",
    "end": "2675359"
  },
  {
    "text": "goe yes so the question is around the postgress integration with red Shi so I wouldn't say it's integration per say",
    "start": "2685079",
    "end": "2691319"
  },
  {
    "text": "but I mean the nice thing about the postgress fdw extension is it'll allow you to connect to anything so it l Lally",
    "start": "2691319",
    "end": "2697280"
  },
  {
    "text": "what was on my slide you you just go in you can do I mean you need to do it as the RDS super user which is the privileged account that you get when you",
    "start": "2697280",
    "end": "2703520"
  },
  {
    "text": "create the instance um but once you've done that yeah you can select or insert data so you know you could have a you",
    "start": "2703520",
    "end": "2710000"
  },
  {
    "text": "know petabyte redshift cluster and you could have that let's say there's a table that's a petabyte you could be",
    "start": "2710000",
    "end": "2715240"
  },
  {
    "text": "able to do selections from it now of course red shift has slightly different semantics and slightly different data",
    "start": "2715240",
    "end": "2721319"
  },
  {
    "text": "types in some cases than standard postgress so you can't necessarily have it you know everything be exact the same",
    "start": "2721319",
    "end": "2727920"
  },
  {
    "text": "uh and there will be some language",
    "start": "2727920",
    "end": "2731040"
  },
  {
    "text": "restrictions the question is can you join tables between them uh as much as postgress fdw supports uh so I I believe",
    "start": "2734160",
    "end": "2742119"
  },
  {
    "text": "the answer is yes but I don't know to what level of complexity that that that occurs but good questions any other",
    "start": "2742119",
    "end": "2752359"
  },
  {
    "text": "questions sorry the question about supporting uh beta releases um we currently don't have any plans to",
    "start": "2755520",
    "end": "2761960"
  },
  {
    "text": "support beta releases uh in general we try to get the new versions out as soon as possible after the release and you",
    "start": "2761960",
    "end": "2767880"
  },
  {
    "text": "know uh part of the challenge is with a Beta release sometimes they you know they tell you by the way everything you",
    "start": "2767880",
    "end": "2773040"
  },
  {
    "text": "put in there you've got to you know remove which is tough for us as a manage service where our customers may not quite understand you know that that",
    "start": "2773040",
    "end": "2780359"
  },
  {
    "text": "challenge so any other questions",
    "start": "2780359",
    "end": "2788000"
  },
  {
    "text": "uh we'll be available outside if anyone has anything else they'd like to talk to about and uh obviously there's a down in",
    "start": "2788000",
    "end": "2794079"
  },
  {
    "text": "the exhibition hall there's a database Booth where you can come talk to uh my colleagues about RDS Dynamo DB red shift",
    "start": "2794079",
    "end": "2801280"
  },
  {
    "text": "elasticache or any of the other uh database uh services that we end thank",
    "start": "2801280",
    "end": "2806800"
  },
  {
    "text": "you again [Applause]",
    "start": "2806800",
    "end": "2814480"
  }
]