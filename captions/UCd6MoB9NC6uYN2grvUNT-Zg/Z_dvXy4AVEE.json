[
  {
    "text": "[Music]",
    "start": "430",
    "end": "11150"
  },
  {
    "text": "hello my name is Aaron Hennessy",
    "start": "13639",
    "end": "16118"
  },
  {
    "text": "documentation writer for the Amazon",
    "start": "16119",
    "end": "18400"
  },
  {
    "text": "simple workflow service also known as",
    "start": "18400",
    "end": "22279"
  },
  {
    "text": "swf in this video I'll show you the",
    "start": "22279",
    "end": "25279"
  },
  {
    "text": "basics of programming with the new AWS",
    "start": "25279",
    "end": "28679"
  },
  {
    "text": "flow framework for",
    "start": "28679",
    "end": "31960"
  },
  {
    "text": "Ruby s swf helps coordinate operate and",
    "start": "33600",
    "end": "38239"
  },
  {
    "text": "audit work across multiple",
    "start": "38239",
    "end": "40640"
  },
  {
    "text": "machines this helps you focus on the",
    "start": "40640",
    "end": "43280"
  },
  {
    "text": "business logic that makes your",
    "start": "43280",
    "end": "45399"
  },
  {
    "text": "application unique and not on writing",
    "start": "45399",
    "end": "48160"
  },
  {
    "text": "glue code and implementing State",
    "start": "48160",
    "end": "52399"
  },
  {
    "text": "machines the AWS flow framework for Ruby",
    "start": "53559",
    "end": "57399"
  },
  {
    "text": "is a programming framework that frees",
    "start": "57399",
    "end": "59440"
  },
  {
    "text": "you from writing the details of",
    "start": "59440",
    "end": "61399"
  },
  {
    "text": "communicating with swf and allows you to",
    "start": "61399",
    "end": "64878"
  },
  {
    "text": "focus instead on the logic of your",
    "start": "64879",
    "end": "67640"
  },
  {
    "text": "workflows it follows many of the",
    "start": "67640",
    "end": "69880"
  },
  {
    "text": "programming patterns used in the AWS",
    "start": "69880",
    "end": "72560"
  },
  {
    "text": "flow framework for Java but is designed",
    "start": "72560",
    "end": "75479"
  },
  {
    "text": "uniquely for the Ruby programming",
    "start": "75479",
    "end": "79520"
  },
  {
    "text": "language the video follows an example",
    "start": "80960",
    "end": "83880"
  },
  {
    "text": "that is also present in the",
    "start": "83880",
    "end": "85960"
  },
  {
    "text": "documentation so for the latest written",
    "start": "85960",
    "end": "88360"
  },
  {
    "text": "version of this example see the topic",
    "start": "88360",
    "end": "91079"
  },
  {
    "text": "called getting started hello world in",
    "start": "91079",
    "end": "94079"
  },
  {
    "text": "the AWS flow framework for Ruby",
    "start": "94079",
    "end": "98720"
  },
  {
    "text": "documentation you don't need to write",
    "start": "104560",
    "end": "106719"
  },
  {
    "text": "any code to understand the example in",
    "start": "106719",
    "end": "109000"
  },
  {
    "text": "this video but if you want to follow",
    "start": "109000",
    "end": "111040"
  },
  {
    "text": "along and execute the example on your",
    "start": "111040",
    "end": "113280"
  },
  {
    "text": "own while watching the video you'll need",
    "start": "113280",
    "end": "115399"
  },
  {
    "text": "to first sign up for AWS and install the",
    "start": "115399",
    "end": "118960"
  },
  {
    "text": "AWS flow framework for ruby",
    "start": "118960",
    "end": "122399"
  },
  {
    "text": "gems because we have limited time I",
    "start": "122399",
    "end": "125320"
  },
  {
    "text": "won't go into the details of how to",
    "start": "125320",
    "end": "127360"
  },
  {
    "text": "perform each of the steps here but you",
    "start": "127360",
    "end": "129920"
  },
  {
    "text": "can find detailed information on the AWS",
    "start": "129920",
    "end": "133400"
  },
  {
    "text": "website at",
    "start": "133400",
    "end": "135760"
  },
  {
    "text": "aws.amazon.com",
    "start": "135760",
    "end": "138760"
  },
  {
    "text": "the traditional application used for",
    "start": "146519",
    "end": "149879"
  },
  {
    "text": "troducing programmers to a new language",
    "start": "149879",
    "end": "152080"
  },
  {
    "text": "or technology is Hello World here it is",
    "start": "152080",
    "end": "156760"
  },
  {
    "text": "in all its Glory we'll use this",
    "start": "156760",
    "end": "159760"
  },
  {
    "text": "application as inspiration for the",
    "start": "159760",
    "end": "162200"
  },
  {
    "text": "example here but since Amazon swf is",
    "start": "162200",
    "end": "165480"
  },
  {
    "text": "designed to run workflows that may",
    "start": "165480",
    "end": "167560"
  },
  {
    "text": "consist of many activities running on",
    "start": "167560",
    "end": "170440"
  },
  {
    "text": "separate computers across the internet",
    "start": "170440",
    "end": "173040"
  },
  {
    "text": "our example will be a little more",
    "start": "173040",
    "end": "174760"
  },
  {
    "text": "interesting than this",
    "start": "174760",
    "end": "177760"
  },
  {
    "text": "one our hello world will implement the",
    "start": "178480",
    "end": "181840"
  },
  {
    "text": "basic three parts of a flow framework",
    "start": "181840",
    "end": "184799"
  },
  {
    "text": "application a workflow also known as a",
    "start": "184799",
    "end": "188080"
  },
  {
    "text": "decider that implements the control flow",
    "start": "188080",
    "end": "190560"
  },
  {
    "text": "and makes decisions about which",
    "start": "190560",
    "end": "192440"
  },
  {
    "text": "activities to run an activity that",
    "start": "192440",
    "end": "195560"
  },
  {
    "text": "performs a specific task perhaps among",
    "start": "195560",
    "end": "199159"
  },
  {
    "text": "many tasks and a starter which could be",
    "start": "199159",
    "end": "202959"
  },
  {
    "text": "another application that triggers",
    "start": "202959",
    "end": "204840"
  },
  {
    "text": "workflow execution",
    "start": "204840",
    "end": "208519"
  },
  {
    "text": "the first thing we need to do when",
    "start": "211760",
    "end": "213720"
  },
  {
    "text": "connecting with Amazon web services is",
    "start": "213720",
    "end": "216439"
  },
  {
    "text": "to provide an access key the AWS flow",
    "start": "216439",
    "end": "220239"
  },
  {
    "text": "framework is no different so we'll",
    "start": "220239",
    "end": "222480"
  },
  {
    "text": "create some code that loads in a yaml",
    "start": "222480",
    "end": "225400"
  },
  {
    "text": "formatted text file containing our",
    "start": "225400",
    "end": "227920"
  },
  {
    "text": "access",
    "start": "227920",
    "end": "230360"
  },
  {
    "text": "Keys substitute your own access key",
    "start": "231280",
    "end": "234439"
  },
  {
    "text": "values for the values shown here we'll",
    "start": "234439",
    "end": "237120"
  },
  {
    "text": "call this file AWS",
    "start": "237120",
    "end": "240159"
  },
  {
    "text": "config.txt and store it in the same",
    "start": "240159",
    "end": "243319"
  },
  {
    "text": "folder as our",
    "start": "243319",
    "end": "245799"
  },
  {
    "text": "application if you don't know how to get",
    "start": "245799",
    "end": "248040"
  },
  {
    "text": "your access Keys follow the guide called",
    "start": "248040",
    "end": "251519"
  },
  {
    "text": "how do I get security credentials in the",
    "start": "251519",
    "end": "254280"
  },
  {
    "text": "Amazon web services General",
    "start": "254280",
    "end": "258320"
  },
  {
    "text": "reference since all parts of our program",
    "start": "259359",
    "end": "262079"
  },
  {
    "text": "will need the security credentials for",
    "start": "262079",
    "end": "264759"
  },
  {
    "text": "Simplicity We'll add the code to a file",
    "start": "264759",
    "end": "267479"
  },
  {
    "text": "that can be downloaded by each part",
    "start": "267479",
    "end": "269960"
  },
  {
    "text": "we'll call it utils.py",
    "start": "269960",
    "end": "274440"
  },
  {
    "text": "we first require AWS decider which loads",
    "start": "276440",
    "end": "281880"
  },
  {
    "text": "the AWS flow framework for",
    "start": "281880",
    "end": "285320"
  },
  {
    "text": "Ruby every workflow needs a domain and a",
    "start": "285320",
    "end": "288680"
  },
  {
    "text": "task list which we Define as",
    "start": "288680",
    "end": "292240"
  },
  {
    "text": "constants we start by loading the",
    "start": "292240",
    "end": "295039"
  },
  {
    "text": "credentials from our awsc config.txt",
    "start": "295039",
    "end": "298479"
  },
  {
    "text": "file",
    "start": "298479",
    "end": "301360"
  },
  {
    "text": "next we register our domain with s swf",
    "start": "301360",
    "end": "304880"
  },
  {
    "text": "we save the domain in an instance",
    "start": "304880",
    "end": "307240"
  },
  {
    "text": "variable so we can use it in our",
    "start": "307240",
    "end": "309120"
  },
  {
    "text": "workflow and activity",
    "start": "309120",
    "end": "312560"
  },
  {
    "text": "code next we'll Define the activity that",
    "start": "318400",
    "end": "321400"
  },
  {
    "text": "will run in a file called hello",
    "start": "321400",
    "end": "324720"
  },
  {
    "text": "activity.",
    "start": "324720",
    "end": "327520"
  },
  {
    "text": "RB first we include the utils RB file we",
    "start": "327520",
    "end": "332000"
  },
  {
    "text": "just created so we can access AWS and",
    "start": "332000",
    "end": "335479"
  },
  {
    "text": "the values that we declared in that",
    "start": "335479",
    "end": "339240"
  },
  {
    "text": "file now we'll create an activity class",
    "start": "339240",
    "end": "342639"
  },
  {
    "text": "by extending AWS flow",
    "start": "342639",
    "end": "347960"
  },
  {
    "text": "activities an activity has activity",
    "start": "348960",
    "end": "351919"
  },
  {
    "text": "options that can be set the version",
    "start": "351919",
    "end": "354800"
  },
  {
    "text": "string is required you can use any value",
    "start": "354800",
    "end": "357800"
  },
  {
    "text": "here and it identifies the version of",
    "start": "357800",
    "end": "360199"
  },
  {
    "text": "the",
    "start": "360199",
    "end": "362440"
  },
  {
    "text": "activity in this example we're defining",
    "start": "362880",
    "end": "365919"
  },
  {
    "text": "a task list that is used by the AWS flow",
    "start": "365919",
    "end": "369280"
  },
  {
    "text": "framework to schedule and process tasks",
    "start": "369280",
    "end": "372479"
  },
  {
    "text": "much like a",
    "start": "372479",
    "end": "374639"
  },
  {
    "text": "q since we're using the same task list",
    "start": "374639",
    "end": "377880"
  },
  {
    "text": "for all of our activities we'll enter",
    "start": "377880",
    "end": "380160"
  },
  {
    "text": "the constant",
    "start": "380160",
    "end": "382919"
  },
  {
    "text": "here we are also setting some timeouts",
    "start": "382919",
    "end": "385919"
  },
  {
    "text": "for our activity in this case we're",
    "start": "385919",
    "end": "388800"
  },
  {
    "text": "limiting the time time allowed for the",
    "start": "388800",
    "end": "390560"
  },
  {
    "text": "task to stay in the task list before",
    "start": "390560",
    "end": "393000"
  },
  {
    "text": "being picked up by a worker to 30",
    "start": "393000",
    "end": "397319"
  },
  {
    "text": "seconds we are also imposing the same",
    "start": "397919",
    "end": "400840"
  },
  {
    "text": "limit on the time allowed for the worker",
    "start": "400840",
    "end": "402960"
  },
  {
    "text": "to process the task to",
    "start": "402960",
    "end": "406599"
  },
  {
    "text": "completion now that we're finished",
    "start": "406800",
    "end": "408880"
  },
  {
    "text": "setting the activity options we'll",
    "start": "408880",
    "end": "411280"
  },
  {
    "text": "provide the body of the activity this",
    "start": "411280",
    "end": "413880"
  },
  {
    "text": "represents your business logic this",
    "start": "413880",
    "end": "416319"
  },
  {
    "text": "particular activity prints a pleasant",
    "start": "416319",
    "end": "418479"
  },
  {
    "text": "greeting taking the name as",
    "start": "418479",
    "end": "422160"
  },
  {
    "text": "input we've completed the definition of",
    "start": "424639",
    "end": "427360"
  },
  {
    "text": "our activity task now we just need an",
    "start": "427360",
    "end": "430120"
  },
  {
    "text": "activity worker to run the",
    "start": "430120",
    "end": "433319"
  },
  {
    "text": "activity finally we add some code to run",
    "start": "433319",
    "end": "436479"
  },
  {
    "text": "the worker when the file is run from the",
    "start": "436479",
    "end": "438599"
  },
  {
    "text": "command line we'll execute each part of",
    "start": "438599",
    "end": "441440"
  },
  {
    "text": "the program separately to show that",
    "start": "441440",
    "end": "443440"
  },
  {
    "text": "they're all coordinated by Amazon swf",
    "start": "443440",
    "end": "448960"
  },
  {
    "text": "next we'll implement the workflow logic",
    "start": "459160",
    "end": "461960"
  },
  {
    "text": "in a file called hello forwork flow.",
    "start": "461960",
    "end": "466800"
  },
  {
    "text": "RB now we'll Define a workflow class by",
    "start": "466800",
    "end": "470120"
  },
  {
    "text": "extending AWS flow",
    "start": "470120",
    "end": "474960"
  },
  {
    "text": "workflows the workflow is also",
    "start": "475560",
    "end": "478000"
  },
  {
    "text": "identified by a version",
    "start": "478000",
    "end": "481400"
  },
  {
    "text": "number our workflow which is responsible",
    "start": "481400",
    "end": "484680"
  },
  {
    "text": "for controlling the flow and making",
    "start": "484680",
    "end": "486919"
  },
  {
    "text": "decisions about which activities to run",
    "start": "486919",
    "end": "489720"
  },
  {
    "text": "also needs to know the name of the task",
    "start": "489720",
    "end": "492440"
  },
  {
    "text": "list which will be used to store its",
    "start": "492440",
    "end": "494960"
  },
  {
    "text": "decision",
    "start": "494960",
    "end": "497638"
  },
  {
    "text": "tasks we also set a timeout for the",
    "start": "497759",
    "end": "500599"
  },
  {
    "text": "workflow of 1 hour from start to close",
    "start": "500599",
    "end": "504599"
  },
  {
    "text": "timeouts are always specified in seconds",
    "start": "504599",
    "end": "507599"
  },
  {
    "text": "so we'll set it to 3600",
    "start": "507599",
    "end": "511440"
  },
  {
    "text": "seconds our workflow sets an activity",
    "start": "512000",
    "end": "514880"
  },
  {
    "text": "client and copies the settings from",
    "start": "514880",
    "end": "517120"
  },
  {
    "text": "Hello World activity which we defined in",
    "start": "517120",
    "end": "520479"
  },
  {
    "text": "hello activity.",
    "start": "520479",
    "end": "524360"
  },
  {
    "text": "RB our workflow is rather simple and",
    "start": "525200",
    "end": "528399"
  },
  {
    "text": "just runs the hello activity passing it",
    "start": "528399",
    "end": "531040"
  },
  {
    "text": "the name that is also provided as input",
    "start": "531040",
    "end": "533560"
  },
  {
    "text": "to the",
    "start": "533560",
    "end": "535880"
  },
  {
    "text": "workflow finally we set up a workflow",
    "start": "536360",
    "end": "539120"
  },
  {
    "text": "work that will start executing the",
    "start": "539120",
    "end": "543160"
  },
  {
    "text": "workflow again we add a line of code",
    "start": "543160",
    "end": "546079"
  },
  {
    "text": "that allows us to run the file from the",
    "start": "546079",
    "end": "548120"
  },
  {
    "text": "command",
    "start": "548120",
    "end": "550560"
  },
  {
    "text": "line we are now finished with both the",
    "start": "554720",
    "end": "557640"
  },
  {
    "text": "activity and workflow",
    "start": "557640",
    "end": "559720"
  },
  {
    "text": "implementations next we'll create a",
    "start": "559720",
    "end": "562000"
  },
  {
    "text": "starter that ties it all",
    "start": "562000",
    "end": "565640"
  },
  {
    "text": "together create a new file called hellor",
    "start": "567920",
    "end": "571800"
  },
  {
    "text": "starter. RB it looks like",
    "start": "571800",
    "end": "575440"
  },
  {
    "text": "this now we'll get a workflow client",
    "start": "575440",
    "end": "578480"
  },
  {
    "text": "that will start the workflow execution",
    "start": "578480",
    "end": "580519"
  },
  {
    "text": "on Amazon",
    "start": "580519",
    "end": "583720"
  },
  {
    "text": "swf we then print a message to the",
    "start": "583800",
    "end": "586440"
  },
  {
    "text": "console to indicate what's happening and",
    "start": "586440",
    "end": "588839"
  },
  {
    "text": "start the workflow",
    "start": "588839",
    "end": "591959"
  },
  {
    "text": "execution the execution passes the",
    "start": "592399",
    "end": "595120"
  },
  {
    "text": "string AWS flow framework for Ruby to",
    "start": "595120",
    "end": "598839"
  },
  {
    "text": "the workfl",
    "start": "598839",
    "end": "600040"
  },
  {
    "text": "which as we designed will pass it to the",
    "start": "600040",
    "end": "602640"
  },
  {
    "text": "activity and which in turn will print",
    "start": "602640",
    "end": "605440"
  },
  {
    "text": "the final message to the",
    "start": "605440",
    "end": "608720"
  },
  {
    "text": "screen let's run it now and see if it",
    "start": "611120",
    "end": "615920"
  },
  {
    "text": "works after saving the files we'll go",
    "start": "618200",
    "end": "621360"
  },
  {
    "text": "back to the command line and run the",
    "start": "621360",
    "end": "623200"
  },
  {
    "text": "activity then the workflow and then the",
    "start": "623200",
    "end": "626000"
  },
  {
    "text": "starter it doesn't really matter whether",
    "start": "626000",
    "end": "628640"
  },
  {
    "text": "we start the activity or workflow first",
    "start": "628640",
    "end": "631399"
  },
  {
    "text": "but we want to run them at least once",
    "start": "631399",
    "end": "633959"
  },
  {
    "text": "before running the starter if all goes",
    "start": "633959",
    "end": "637040"
  },
  {
    "text": "well we should see the string hello AWS",
    "start": "637040",
    "end": "640480"
  },
  {
    "text": "flow framework for Ruby printed when the",
    "start": "640480",
    "end": "643000"
  },
  {
    "text": "activity is finally executed there it is",
    "start": "643000",
    "end": "646720"
  },
  {
    "text": "Hello World courtesy of the Amazon Cloud",
    "start": "646720",
    "end": "650399"
  },
  {
    "text": "and swf",
    "start": "650399",
    "end": "653959"
  },
  {
    "text": "to download the AWS flow framework for",
    "start": "661360",
    "end": "664000"
  },
  {
    "text": "Ruby the hello world sample and more go",
    "start": "664000",
    "end": "667360"
  },
  {
    "text": "to",
    "start": "667360",
    "end": "668200"
  },
  {
    "text": "aws.amazon.com",
    "start": "668200",
    "end": "671200"
  },
  {
    "text": "sswf",
    "start": "672079",
    "end": "675079"
  },
  {
    "text": "sflow for more information about the AWS",
    "start": "675920",
    "end": "679399"
  },
  {
    "text": "flow framework for Ruby including many",
    "start": "679399",
    "end": "681760"
  },
  {
    "text": "more programming examples and a complete",
    "start": "681760",
    "end": "684480"
  },
  {
    "text": "API reference see the documentation at",
    "start": "684480",
    "end": "687880"
  },
  {
    "text": "docs. a ws.",
    "start": "687880",
    "end": "691120"
  },
  {
    "text": "amazon.com SL Amazon",
    "start": "691120",
    "end": "694680"
  },
  {
    "text": "swf latest SL AWS RB flow guide",
    "start": "694680",
    "end": "702360"
  }
]