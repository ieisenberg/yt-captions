[
  {
    "start": "0",
    "end": "44000"
  },
  {
    "text": "all right it looks like we're at about 1:30 here so I'm going to kick it off because this is about a 60-minute presentation so um welcome thanks for",
    "start": "4440",
    "end": "11280"
  },
  {
    "text": "coming today my name is Brett Holman um I'm a Solutions architect I'm part of",
    "start": "11280",
    "end": "16440"
  },
  {
    "text": "the solutions architecture organization we work with customers such as yourselves um helping you guys understand best practices best way to",
    "start": "16440",
    "end": "22920"
  },
  {
    "text": "migrate apps to the cloud and so on so there's many of us around at the conference you can come by the booth and talk to a lot of different solutions",
    "start": "22920",
    "end": "28960"
  },
  {
    "text": "architects in the organization um so today we're going to talk about building highly available applications in Amazon virtual private Cloud so let's",
    "start": "28960",
    "end": "36440"
  },
  {
    "text": "get started so what you're going to learn about today is you know first off we're going to deal with the question is what is Amazon virtual private Cloud",
    "start": "36440",
    "end": "41800"
  },
  {
    "text": "what's the best way to define it then we're going to go through some of the common use cases for virtual private Cloud um we're going to hit a few of the",
    "start": "41800",
    "end": "48520"
  },
  {
    "start": "44000",
    "end": "44000"
  },
  {
    "text": "um Basics around VPC and some definitions then we're going to talk about why you might want to move to VPC",
    "start": "48520",
    "end": "53680"
  },
  {
    "text": "what are some of the advantages that you have inside of VPC over um maybe classic ec2 then uh next we'll move over to",
    "start": "53680",
    "end": "60879"
  },
  {
    "text": "connecting your um your own data centers with your virtual private cloud and how that might work then we're going to kind",
    "start": "60879",
    "end": "66799"
  },
  {
    "text": "of shift gears and go into more of a high availability um set of what I call Design patterns so we're going to talk",
    "start": "66799",
    "end": "72080"
  },
  {
    "text": "about design patterns for making your virtual private Cloud highly available and then we're going to go and transition into building a highly",
    "start": "72080",
    "end": "79320"
  },
  {
    "text": "available app inside of your virtual private cloud and some of the design patterns you might use for that and then lastly we're going to finish off with a",
    "start": "79320",
    "end": "85600"
  },
  {
    "text": "demo of chaos monkey um acting against an application I created for this demo purpose so that'll be our",
    "start": "85600",
    "end": "92119"
  },
  {
    "text": "wrapup all right so what is Amazon virtual private Cloud well really it's a private section of the ads Cloud um that",
    "start": "92119",
    "end": "99280"
  },
  {
    "start": "96000",
    "end": "96000"
  },
  {
    "text": "you actually get control of you get you own the virtual networking topology you define the IP addressing scheme you",
    "start": "99280",
    "end": "105320"
  },
  {
    "text": "really have complete control over defining the the footprint for a data center that you want to build virtually",
    "start": "105320",
    "end": "110759"
  },
  {
    "text": "on top of Amazon and so you're defining that data center footprint so to speak um and most easily put it is a virtual",
    "start": "110759",
    "end": "117600"
  },
  {
    "text": "data center on AWS that's really what you're building with with Amazon virtual private cloud is a virtual data center",
    "start": "117600",
    "end": "122680"
  },
  {
    "text": "on top of Amazon web services and one thing to note here it's not just a data center um a virtual data center on AWS",
    "start": "122680",
    "end": "129399"
  },
  {
    "text": "but it's actually a highly available data center if you build it correctly so this virtual data center that you're going to build out can actually be",
    "start": "129399",
    "end": "135400"
  },
  {
    "text": "spread across a region and you can actually build a virtual data center that sits over the top of many physical",
    "start": "135400",
    "end": "140440"
  },
  {
    "text": "Data Centers inside of a region on top of AWS so there's lots of capabilities that gives you that you wouldn't get in",
    "start": "140440",
    "end": "145519"
  },
  {
    "text": "a traditional data center topology so um what are some of the common use cases for VPC EXC",
    "start": "145519",
    "end": "152239"
  },
  {
    "text": "me so um I already mentioned this designing a virtual data center on AWS that's a great um great way to think of",
    "start": "152239",
    "end": "158920"
  },
  {
    "start": "154000",
    "end": "154000"
  },
  {
    "text": "it great for many Enterprise organizations you know they're already running their own data center footprint",
    "start": "158920",
    "end": "164000"
  },
  {
    "text": "um basically creating a VPC on top of AWS is adding another data center to that footprint and that's a a way to",
    "start": "164000",
    "end": "169800"
  },
  {
    "text": "think about it it is really a virtual data center topology so you know first off you build out your your network",
    "start": "169800",
    "end": "175360"
  },
  {
    "text": "topology on top of AWS we're going to talk a lot more in detail about how you do that that but then um once you've",
    "start": "175360",
    "end": "181959"
  },
  {
    "text": "done that you actually just add it to your data center footprint by connecting via VPN or direct connect a private",
    "start": "181959",
    "end": "187040"
  },
  {
    "text": "layer 2 circuit to connect your virtual private cloud or your virtual data center on AWS back to your overall data",
    "start": "187040",
    "end": "192519"
  },
  {
    "text": "center footprint that you already operate um so you know once you've done that now you have the ability to do",
    "start": "192519",
    "end": "198680"
  },
  {
    "text": "things like run directory services in AWS replicate your active directory or run directory Services um you can",
    "start": "198680",
    "end": "204560"
  },
  {
    "text": "emulate your network configuration that you're running in your own data centers and actually run a similar network configuration with a lot of the virtual",
    "start": "204560",
    "end": "210200"
  },
  {
    "text": "networking topology controls you have inside of VPC you also can take your encryption that you're running inside of",
    "start": "210200",
    "end": "216280"
  },
  {
    "text": "your own Data Center and you can actually hold those encryption keys inside of a cloud HSM Appliance you can deploy inside of your VPC so you can use",
    "start": "216280",
    "end": "222799"
  },
  {
    "text": "the same encryption you're using in your own data center over in your virtual private Cloud also you know when you",
    "start": "222799",
    "end": "229239"
  },
  {
    "text": "talk about backup you might have backup appliances that are running over inside of your um your own data center you can actually push those backups to the cloud",
    "start": "229239",
    "end": "235439"
  },
  {
    "text": "and take advantage of that um storage in S3 or Glacier where it's really un you only pay for what you use and it's",
    "start": "235439",
    "end": "241319"
  },
  {
    "text": "Unlimited in terms of growth potential and you know lastly you can run on premise apps you can run Cloud apps you",
    "start": "241319",
    "end": "246920"
  },
  {
    "text": "can run hybrid apps we're going to talk more about some of that today so this is the picture of a",
    "start": "246920",
    "end": "252840"
  },
  {
    "text": "multi-tier public web app um inside a virtual private cloud and um you know it doesn't look that much different than",
    "start": "252840",
    "end": "258759"
  },
  {
    "start": "254000",
    "end": "254000"
  },
  {
    "text": "the classic world with a few exceptions if you take a look I'm running a lot of my um a lot of my servers I don't know",
    "start": "258759",
    "end": "264800"
  },
  {
    "text": "if this laser is going to work probably not um but I'm I'm running a lot of my my servers in private subnets you notice",
    "start": "264800",
    "end": "271759"
  },
  {
    "text": "my web servers are running in private subnets um the only thing I'm actually exposing publicly is my public load balancer um further I'm actually doing a",
    "start": "271759",
    "end": "279600"
  },
  {
    "text": "private load balancing tier inside of there as well um I've got a a load balancer that's only privately addressable between my web and my app",
    "start": "279600",
    "end": "285960"
  },
  {
    "text": "tier so there's a lot of advantages here we're going to talk through many many more um as this presentation goes on but",
    "start": "285960",
    "end": "291000"
  },
  {
    "text": "that's that's a start oh excuse me um you can also",
    "start": "291000",
    "end": "296199"
  },
  {
    "text": "create private or hybrid applications inside of virtual private Cloud as well so this would be an example of a private",
    "start": "296199",
    "end": "301560"
  },
  {
    "start": "300000",
    "end": "300000"
  },
  {
    "text": "or hybrid app here we got the same application running except we're not connecting to it through an internet gateway we're connecting to it through a",
    "start": "301560",
    "end": "308080"
  },
  {
    "text": "VPN Gateway which is something that um exposes either Direct Connect or VPN access into the virtual private Cloud so",
    "start": "308080",
    "end": "314560"
  },
  {
    "text": "again my virtual private cloud is privately addressed if I if I choose and um and now I got users that can connect",
    "start": "314560",
    "end": "320680"
  },
  {
    "text": "from the internal user over on the left connecting through the VPN Gateway and it actually hitting that private web app",
    "start": "320680",
    "end": "326800"
  },
  {
    "text": "further I could have that internal user hitting an application that's over in their corporate data center and maybe there's an analytical workload that's um",
    "start": "326800",
    "end": "333440"
  },
  {
    "text": "part of that overall um architecture so maybe I'm shipping data out to um the",
    "start": "333440",
    "end": "338600"
  },
  {
    "text": "cloud and running things like EMR or red shift or something like that that's doing analytical type work that's part",
    "start": "338600",
    "end": "344600"
  },
  {
    "text": "of my overall application infrastructure for this particular app also Disaster Recovery is another um",
    "start": "344600",
    "end": "351479"
  },
  {
    "text": "very common use case for using virtual private cloud and um we've got a disaster recovery white paper or a Dr",
    "start": "351479",
    "end": "357680"
  },
  {
    "text": "white paper if you go out to AWS amazon.com white papers you'll find a whole list of all our white papers",
    "start": "357680",
    "end": "363360"
  },
  {
    "start": "363000",
    "end": "363000"
  },
  {
    "text": "there's a great Disaster Recovery white paper it talks through four different scenarios you might use um for Dr in the",
    "start": "363360",
    "end": "368639"
  },
  {
    "text": "cloud um these are uh just a list them backup and restore pilot light warm",
    "start": "368639",
    "end": "373759"
  },
  {
    "text": "standby and active active multi- sight solution and so so this is a picture of the disaster recovery um um scenario for",
    "start": "373759",
    "end": "381440"
  },
  {
    "text": "pilot light and in the pilot light what's happening is I'm running a a stack over in my own data center um as",
    "start": "381440",
    "end": "387240"
  },
  {
    "text": "you can see over on the left and then um I've got that stack running what I'm doing is I'm replicating my database",
    "start": "387240",
    "end": "393280"
  },
  {
    "text": "server over to a database server running on ec2 and I can be running a very small database server over there compared to",
    "start": "393280",
    "end": "398639"
  },
  {
    "text": "what I'd run in production because all it needs to be able to do is to be able to receive the replication so um I've",
    "start": "398639",
    "end": "404479"
  },
  {
    "text": "got the database server running and I'm replicating my data over to VPC through my VPN tunnel or through my direct",
    "start": "404479",
    "end": "409680"
  },
  {
    "text": "connect then I've got a web server and an app server that I went and configured to mirror my web server and app server",
    "start": "409680",
    "end": "415319"
  },
  {
    "text": "over on my corporate data center I created an Ami I launched them and then I stopped those servers so now all I'm",
    "start": "415319",
    "end": "420360"
  },
  {
    "text": "doing is paying for storage on those servers so all I'm paying for in VPC is the VPN connection um the database",
    "start": "420360",
    "end": "426160"
  },
  {
    "text": "server and the storage for the web and the app server so I'm paying very little to have this this application mirrored",
    "start": "426160",
    "end": "431680"
  },
  {
    "text": "over in inside of Amazon virtual private cloud and so now what happens if I've got a disaster um I would go and I would",
    "start": "431680",
    "end": "438560"
  },
  {
    "text": "um promote the the slave to master I would probably stop and restart that",
    "start": "438560",
    "end": "443680"
  },
  {
    "text": "database instance to Move It from small Hardware to very large Hardware maybe I'm moving up to a 4XL um High memory",
    "start": "443680",
    "end": "449800"
  },
  {
    "text": "instance and then I'm going to go and start my application in web tier and scale those tiers out and um I literally",
    "start": "449800",
    "end": "455520"
  },
  {
    "text": "can do that I could have a script ready that I kick off and does all of that work you know in a matter of a few minutes um with boot time and then I",
    "start": "455520",
    "end": "462520"
  },
  {
    "text": "repoint my DNS and that's called the pilot light you know I'm paying for very little in terms of compute in the cloud",
    "start": "462520",
    "end": "468240"
  },
  {
    "text": "um but I I can stand on my app pretty rapidly you know again all these different scenarios that I just talked about for Dr um there's a different cost",
    "start": "468240",
    "end": "474960"
  },
  {
    "text": "for each one so you know this is kind of on the still on the lower end so let's talk about a few basics for",
    "start": "474960",
    "end": "481039"
  },
  {
    "text": "VPC and do a few definitions as well all right so um first off VPC",
    "start": "481039",
    "end": "486680"
  },
  {
    "start": "485000",
    "end": "485000"
  },
  {
    "text": "stands for virtual private cloud and when you create a VPC you're choosing a a CER block to start so you know I",
    "start": "486680",
    "end": "492400"
  },
  {
    "text": "typically tell people to start with a sl16 a large um block of ips that they want to use for their data center",
    "start": "492400",
    "end": "497639"
  },
  {
    "text": "footprint on AWS from there you can subnet that out create subnets or um other networks inside of that larger CER",
    "start": "497639",
    "end": "504639"
  },
  {
    "text": "block and then from there you can actually deploy akles or network access control lists around that particular",
    "start": "504639",
    "end": "510599"
  },
  {
    "text": "subnet block which specify the Ingress policies and egress policies allowed for that particular subnet so I can imple",
    "start": "510599",
    "end": "517039"
  },
  {
    "text": "Implement security at the security group layer like you know people commonly know of with ec2 but I can also Implement",
    "start": "517039",
    "end": "522680"
  },
  {
    "text": "security at the network layer as well and I can do it in independent subnets um then I can create route tables um and",
    "start": "522680",
    "end": "529240"
  },
  {
    "text": "a route table specifies how a particular um subnet is allowed to Route what gateways can it um egress and so on um",
    "start": "529240",
    "end": "536480"
  },
  {
    "text": "from there I can create a VPN connection to tie it back to my own corporate data center footprint that usually is a pair of um redundant encrypted connections um",
    "start": "536480",
    "end": "544480"
  },
  {
    "text": "I can also use Direct Connect rather than VPN connections and Direct Connect is going to be a private layer 2 circuit",
    "start": "544480",
    "end": "549720"
  },
  {
    "text": "or a or a cross connect if you're colled at one of our Direct Connect locations that get you privately um a private",
    "start": "549720",
    "end": "555839"
  },
  {
    "text": "ethernet connection between your router and the Amazon router that you're facing so now let's say somebody needs",
    "start": "555839",
    "end": "562079"
  },
  {
    "text": "access to your VPC um there's a couple things they need they either need to come in through the VPN or they need to come in through the internet so we're",
    "start": "562079",
    "end": "568519"
  },
  {
    "text": "going to define a couple Concepts around that first off the internet gateway um this is what provides a particular",
    "start": "568519",
    "end": "573640"
  },
  {
    "text": "subnet access to the internet from inside of your virtual private Cloud so once you've created an internet gateway",
    "start": "573640",
    "end": "578959"
  },
  {
    "text": "and attached it to your virtual private Cloud you then can define a route out to the internet for a particular subnet",
    "start": "578959",
    "end": "585480"
  },
  {
    "text": "virtual private Gateway is very similar it's the same thing but for that VPN connection back in this particular subnet talk to my corporate data centers",
    "start": "585480",
    "end": "591760"
  },
  {
    "text": "or my um land environment back at headquarters um the customer Gateway is going to be your router or firewall that",
    "start": "591760",
    "end": "597600"
  },
  {
    "text": "faces AWS over the Direct Connect or VPN connection um we're going to dive dive",
    "start": "597600",
    "end": "602720"
  },
  {
    "text": "deeper on that today Network address translation which is um a service that you run inside a VPC and it provides uh",
    "start": "602720",
    "end": "610360"
  },
  {
    "text": "um port address translation for servers that are sitting in private subnets that don't have internet access to get out to the internet to download software",
    "start": "610360",
    "end": "616160"
  },
  {
    "text": "patches called apis and so on um security groups those are things that are common to ec2 if you're an ec2 user",
    "start": "616160",
    "end": "623200"
  },
  {
    "text": "today you know what these are um and these spe this is really the firewall that wraps your ec2 instance and it",
    "start": "623200",
    "end": "628519"
  },
  {
    "text": "specifies inbound and outbound access policies for that particular E2 instance and lastly availability zones an AZ is a",
    "start": "628519",
    "end": "636480"
  },
  {
    "text": "either a data center or a cluster of data centers that are on a particular piece of land and every region has",
    "start": "636480",
    "end": "641880"
  },
  {
    "text": "multiple availability zones they're built to be fault tolerant from each other they're typically separated by by",
    "start": "641880",
    "end": "647000"
  },
  {
    "text": "geography and they're they're built to be F tolerant from the other availability zones in the",
    "start": "647000",
    "end": "652519"
  },
  {
    "text": "region okay so what are some of the features of EPC and I've already mentioned a few of these so we'll cruise through these pretty quick but um you",
    "start": "652560",
    "end": "658639"
  },
  {
    "start": "657000",
    "end": "657000"
  },
  {
    "text": "control the addressing you're going to you choose for your your um virtual private Cloud You' got the ability to subnet that further um from there you",
    "start": "658639",
    "end": "665480"
  },
  {
    "text": "can apply AAL with the egress and Ingress policies um you can assign multiple IP addresses inside of EPC as",
    "start": "665480",
    "end": "670800"
  },
  {
    "text": "well to your ec2 instances and you can also assign multiple elastic network interfaces we're going to talk more",
    "start": "670800",
    "end": "676720"
  },
  {
    "text": "about that later and where that becomes useful um you can also run private load balancing Services as I showed you a",
    "start": "676720",
    "end": "682320"
  },
  {
    "text": "slide earlier and then lastly um you can Bridge your VPC with your on-site infrastructure so again it just becomes",
    "start": "682320",
    "end": "687680"
  },
  {
    "text": "another Data Center and your data center foot print um just another set of IP address ranges you can go and launch Services into it's easy to scale up and",
    "start": "687680",
    "end": "694560"
  },
  {
    "text": "and launch into VPC don't have to order anything you just call the apis so here's a picture of some of the",
    "start": "694560",
    "end": "701600"
  },
  {
    "text": "security controls inside of VPC so for this particular example let's say we got the 10.06 network um so first we picked",
    "start": "701600",
    "end": "709880"
  },
  {
    "text": "that particular Network and and then we went and decided to submit it out into a couple subnets the 10.0.0 sl24 and the",
    "start": "709880",
    "end": "716800"
  },
  {
    "text": "10.10 sl24 then further I'm going to go wrap akles around that subnet if I",
    "start": "716800",
    "end": "722360"
  },
  {
    "text": "choose um to spec to to to Define what that subnet is allowed to do in terms of",
    "start": "722360",
    "end": "727480"
  },
  {
    "text": "Ingress and egress um and then from there I Define route tables which specify how a subnet can route out can",
    "start": "727480",
    "end": "732760"
  },
  {
    "start": "732000",
    "end": "732000"
  },
  {
    "text": "it route out through the VPN Gateway can it route out through the internet gateway can it route out through both what IP ranges route where that's the",
    "start": "732760",
    "end": "739160"
  },
  {
    "text": "type of thing that happens in the route table so um lastly I would go and um",
    "start": "739160",
    "end": "744519"
  },
  {
    "text": "deploy an instance when I deploy an instance I choose a security group that I'm going to launch it into um here I",
    "start": "744519",
    "end": "749600"
  },
  {
    "text": "get the ability to Define inbound and outbound access policies around my security groups whereas in class ec2 I",
    "start": "749600",
    "end": "754920"
  },
  {
    "text": "can only Define um inbound policies and then I can actually specify an exact IP",
    "start": "754920",
    "end": "759959"
  },
  {
    "text": "address inside of a subnet then further if I go and stop and restart that instance it's going to remain or it's",
    "start": "759959",
    "end": "765000"
  },
  {
    "text": "going to retain that same IP address scheme that's on that that particular instance right there so if I stop the",
    "start": "765000",
    "end": "770240"
  },
  {
    "text": "10.0.0 6 and then I restart it it's going to have the same IP address it's a little different from the classic ec2",
    "start": "770240",
    "end": "776079"
  },
  {
    "text": "world so here's a little example um that I like to walk people through um this",
    "start": "776079",
    "end": "781320"
  },
  {
    "start": "777000",
    "end": "777000"
  },
  {
    "text": "would be your network on the upper right the 17268 the internet on the left and then",
    "start": "781320",
    "end": "787000"
  },
  {
    "text": "um we've got our virtual private CL Cloud down below and if you take a look at this particular case um we've got",
    "start": "787000",
    "end": "792360"
  },
  {
    "text": "what we're calling a public subnet over on the bottom left and a private subnet on the right and what makes the bottom",
    "start": "792360",
    "end": "797720"
  },
  {
    "text": "left um subnet a private or a public subnet if you take a look at all the servers there we've got a bunch of web servers and a Nat server if you take a",
    "start": "797720",
    "end": "805240"
  },
  {
    "text": "look at them uh they're all privately addressed for that subnet and they also have public IPS assigned as well and um",
    "start": "805240",
    "end": "811800"
  },
  {
    "text": "then if you look at the route table you'll notice there's a couple routes there's a local route the 10.0.0.0",
    "start": "811800",
    "end": "817600"
  },
  {
    "text": "sl16 every route table has a route that's local that says that everything in the VPC can talk to each other um",
    "start": "817600",
    "end": "823240"
  },
  {
    "text": "barring any akles or security groups that prevent that we'll talk a little bit more about that later um and then",
    "start": "823240",
    "end": "828760"
  },
  {
    "text": "there's a default route out to the internet gateway this means that any route that hasn't been further defined that's more granular is going to",
    "start": "828760",
    "end": "834680"
  },
  {
    "text": "actually go out to the internet to terminate that traffic so these these servers all have access to talk to the internet and receive um requests from",
    "start": "834680",
    "end": "840759"
  },
  {
    "text": "the internet as well if you look at the subnet on the right it's called a private subnet it's labeled a private",
    "start": "840759",
    "end": "846120"
  },
  {
    "text": "subnet and the reason why again it's got a local route but now it has this route out to the VPN Gateway for the 17216",
    "start": "846120",
    "end": "852320"
  },
  {
    "text": "Network and then lastly there's a NAD instance a route to the N instance and that's where our default route is pointing in this case and what that",
    "start": "852320",
    "end": "858720"
  },
  {
    "text": "means is that um when these servers want to let's say call a public API or put",
    "start": "858720",
    "end": "864000"
  },
  {
    "text": "something in S3 or get something out of S3 or download a patch or download software they can actually go out and",
    "start": "864000",
    "end": "870279"
  },
  {
    "text": "make a call to the NAD instance the NAD instance will port address translate that that request um allow them access",
    "start": "870279",
    "end": "875759"
  },
  {
    "text": "out to that internet destination and then allow a stateful response back similar to your laptop behind a firewall",
    "start": "875759",
    "end": "881600"
  },
  {
    "text": "when you're sitting at your own corporate head headquarters you know you don't have a public IP assigned but you can still get out to the internet same",
    "start": "881600",
    "end": "887399"
  },
  {
    "text": "idea here okay so some considerations around",
    "start": "887399",
    "end": "892720"
  },
  {
    "text": "building out your virtual private Cloud so first off I say um you know typically you're going to want to choose your CER",
    "start": "892720",
    "end": "899160"
  },
  {
    "start": "895000",
    "end": "895000"
  },
  {
    "text": "block that you pick for your VPC wisely you're going to want to pick something that doesn't collide with your overall um corporate land environment or your",
    "start": "899160",
    "end": "905560"
  },
  {
    "text": "data center footprint so pick a unique IP address range that you haven't um used somewhere else already unless of",
    "start": "905560",
    "end": "911240"
  },
  {
    "text": "course you're building this for a Dr scenario where it's a it's a a standby site so so that might be an exception but typically you want to pick something",
    "start": "911240",
    "end": "917360"
  },
  {
    "text": "that doesn't collide with your overall corporate land environment your data center footprint you also want to pick something that's big enough um for",
    "start": "917360",
    "end": "923480"
  },
  {
    "text": "future growth so you can run multiple vpcs and that's that's very common as well but um you know if you're building",
    "start": "923480",
    "end": "929160"
  },
  {
    "text": "out a VPC and you're going to have a lot of shared resources in there and you want to um grow and grow and grow this pick start with a sl6 it's a great place",
    "start": "929160",
    "end": "936079"
  },
  {
    "text": "to start and then you can subnet that out um further now when you when it comes to subnetting there's kind of two different ways to think about this",
    "start": "936079",
    "end": "942120"
  },
  {
    "text": "there's the keep it simple method or the divide by function and that's those are my terms so they're not uh something",
    "start": "942120",
    "end": "948120"
  },
  {
    "text": "you're going to find in our documents but keep it simple um I'm going to go in and for each availability Zone I want to",
    "start": "948120",
    "end": "953360"
  },
  {
    "text": "run my VPC on I'm going to define a public and a private subnet a large public and a large private subnet pretty",
    "start": "953360",
    "end": "959360"
  },
  {
    "text": "simple if I'm running in two A's I've got four subnets right um that works well if you want to just run a simple",
    "start": "959360",
    "end": "964639"
  },
  {
    "text": "VPC but let's say um you know you want to um well let's let's talk about the",
    "start": "964639",
    "end": "969759"
  },
  {
    "text": "divide by function here so so that might be dividing things by tier I might have a database subnet um for each",
    "start": "969759",
    "end": "975560"
  },
  {
    "text": "availability Zone and maybe I've got an app subnet maybe I've got um some analytical workloads that I've got",
    "start": "975560",
    "end": "980600"
  },
  {
    "text": "running in another subnet maybe I've got a couple different web tiers maybe I want to put those in different subnets as well in each availability zone so I'm",
    "start": "980600",
    "end": "986480"
  },
  {
    "text": "dividing by function and that's where Network Ackles versus security groups comes in so the way I like to explain",
    "start": "986480",
    "end": "992560"
  },
  {
    "text": "this to people at least you know from there's many philosophies there's no right answer but but a good answer is um",
    "start": "992560",
    "end": "999440"
  },
  {
    "text": "Network akles are are great for like a network security organization right somebody comes in and defines the data center footprint designs um how we're",
    "start": "999440",
    "end": "1006880"
  },
  {
    "text": "going to lay out our subnets they divide up by function and then either day one or later they can come in and deploy",
    "start": "1006880",
    "end": "1012440"
  },
  {
    "text": "akles around um those particular subnets specifying what's a a course grad set of",
    "start": "1012440",
    "end": "1017600"
  },
  {
    "text": "rules around what the universe is that's allowed to talk into the subnet and out of this subnet so they might say hey",
    "start": "1017600",
    "end": "1023639"
  },
  {
    "text": "this database subnet we don't want anybody talking to it except these couple IP address ranges and we're only allowing these ports open right that you",
    "start": "1023639",
    "end": "1031000"
  },
  {
    "text": "know and then and then further um some some application team is going to come in and launch a database or or launch a",
    "start": "1031000",
    "end": "1037079"
  },
  {
    "text": "web server and they might say hey I want to I'm going to put a security group in place and I'm going to open it up to the",
    "start": "1037079",
    "end": "1042480"
  },
  {
    "text": "whole world right well okay you the network security organization already put a set of controls and rules around a",
    "start": "1042480",
    "end": "1049120"
  },
  {
    "text": "particular subnet about when traffic's allowed in and out so so the akles or I mean sorry the security groups now have",
    "start": "1049120",
    "end": "1054400"
  },
  {
    "text": "got to live with inside of that set of rules you can open up more ports but they're not going to be exposed because you've locked them down at the network",
    "start": "1054400",
    "end": "1059960"
  },
  {
    "text": "layer so I typically think of AAL as something the network security or takes care of and security groups being",
    "start": "1059960",
    "end": "1066400"
  },
  {
    "text": "something that the app team takes care of when they're launching instances so the security groups or the akles may have been open to many ports but the",
    "start": "1066400",
    "end": "1072640"
  },
  {
    "text": "secur the security groups might say the the app owner might say well I only need these three ports open that's that's",
    "start": "1072640",
    "end": "1078880"
  },
  {
    "text": "that's kind of the way I make sense of it so why move to VPC well first off",
    "start": "1078880",
    "end": "1084919"
  },
  {
    "text": "hopefully you won't be sleeping on your data center floor if that's the case um couple other",
    "start": "1084919",
    "end": "1091200"
  },
  {
    "text": "reasons um first off you know it's an expandable data center it's something you can burst into very rapidly you can",
    "start": "1091200",
    "end": "1097919"
  },
  {
    "text": "deploy resources and very rapidly it costs you zero to run a VPC inside of AWS um you only pay for the resources",
    "start": "1097919",
    "end": "1104240"
  },
  {
    "text": "you launch into VPC or your VPN connection or your direct connect and literally to to turn up a VPC and have",
    "start": "1104240",
    "end": "1110480"
  },
  {
    "text": "it ready um for the day that you're ready to actually start using it it costs a120 a day it's 5 cents an hour to",
    "start": "1110480",
    "end": "1116320"
  },
  {
    "text": "run a redundant pair of tunnels into AWS so for a120 a day you've got a data center on your footprint that you can",
    "start": "1116320",
    "end": "1121960"
  },
  {
    "text": "quickly deploy services to Devon test environments and so on as that need becomes um as as as projects require",
    "start": "1121960",
    "end": "1130480"
  },
  {
    "text": "it so another reason all new accounts today already default to VPC so um many",
    "start": "1130480",
    "end": "1135880"
  },
  {
    "text": "products like ec2 um and so on if we'll talk more about exactly how this works",
    "start": "1135880",
    "end": "1141039"
  },
  {
    "text": "but the idea is there's already such a concept as default VPC if you're opening up new accounts anywhere except us East",
    "start": "1141039",
    "end": "1147400"
  },
  {
    "text": "and um really what that is um there's a lot of features we've exposed inside of",
    "start": "1147400",
    "end": "1153080"
  },
  {
    "start": "1148000",
    "end": "1148000"
  },
  {
    "text": "virtual private cloud and um you know what we've done is create this concept of a special VPC when you create a new",
    "start": "1153080",
    "end": "1160360"
  },
  {
    "text": "account we create a VPC for you and we create a uh a public subnet inside of that VPC and then any untargeted",
    "start": "1160360",
    "end": "1166840"
  },
  {
    "text": "launches of uh ec2 RDS um elastic load balancing EMR and so on any untargeted",
    "start": "1166840",
    "end": "1173240"
  },
  {
    "text": "launches where you're not specifying a specific VPC to Target those two they're going to go to your default VPC which",
    "start": "1173240",
    "end": "1178840"
  },
  {
    "text": "really acts a lot like the classic ec2 world you get a public IP a private IP a public host name a private host name you",
    "start": "1178840",
    "end": "1185480"
  },
  {
    "text": "get all those things um just like the classic world but you're inside of a virtual private Cloud you can take advantage of all these other things",
    "start": "1185480",
    "end": "1191440"
  },
  {
    "text": "we're going to talk about um inside of there and so each region has one default VPC and each a has one default subnet um",
    "start": "1191440",
    "end": "1198440"
  },
  {
    "text": "so so if you're signing up your new accounts in regions other than us East you're defaulting into VPC automatically",
    "start": "1198440",
    "end": "1203760"
  },
  {
    "text": "and again as you're launching resources into these um default vpcs you can take advantage you can further subnet it you",
    "start": "1203760",
    "end": "1209840"
  },
  {
    "text": "can add private load balancers private subnets and so on so um what are some of the",
    "start": "1209840",
    "end": "1216000"
  },
  {
    "text": "functionalities that are provided by VPC um or are moving from ec2 to VPC um and",
    "start": "1216000",
    "end": "1221880"
  },
  {
    "text": "static private you know IP addresses being able to allocate those to your instances um the ability to um allocate",
    "start": "1221880",
    "end": "1227600"
  },
  {
    "text": "multiple IPS and multiple elastic network interfaces um Dynamic Security Group membership allocation",
    "start": "1227600",
    "end": "1232840"
  },
  {
    "text": "configuration you can go and change the security groups after you've launched the instance um you also can do out outbound packet filtering on your",
    "start": "1232840",
    "end": "1239000"
  },
  {
    "text": "security groups um you can deploy Network accles and again private load balancing so okay so let's shift gears into how to",
    "start": "1239000",
    "end": "1245840"
  },
  {
    "text": "connect VPC with your data centers so um first off there are two options VPN connections or direct connect and for a",
    "start": "1245840",
    "end": "1253240"
  },
  {
    "text": "VPN connection you can do redundant IP SE tunnels that's what's recommended um this also supports bgp your static",
    "start": "1253240",
    "end": "1259039"
  },
  {
    "start": "1254000",
    "end": "1254000"
  },
  {
    "text": "routing so you can say hey here are the routes from my particular um data center that you I want the VPC to know about",
    "start": "1259039",
    "end": "1265440"
  },
  {
    "text": "over the VPN connection or you can say I'm going to exchange routes over bgp you can also run redundant customer",
    "start": "1265440",
    "end": "1270640"
  },
  {
    "text": "gateways to build in some redundancy on the land side so a single VPN connection",
    "start": "1270640",
    "end": "1276080"
  },
  {
    "start": "1274000",
    "end": "1274000"
  },
  {
    "text": "communicates with um multiple data centers in multiple availability zones so you got this virtual data center it's",
    "start": "1276080",
    "end": "1281679"
  },
  {
    "text": "running in multiple as's and um one VPN connection can talk to both the availability zones in this particular",
    "start": "1281679",
    "end": "1286919"
  },
  {
    "text": "diagram or all three if there were free you can also do multiple VPN connections so um all your offices can",
    "start": "1286919",
    "end": "1294120"
  },
  {
    "text": "talk to a VPC through the virtual private Gateway we also have something called Cloud Hub where all these offices",
    "start": "1294120",
    "end": "1299520"
  },
  {
    "text": "could talk to each other and the cloud Hub um the virtual private Gateway hubs the traffic between the offices so that",
    "start": "1299520",
    "end": "1305799"
  },
  {
    "text": "they can communicate with each other almost like um well think of it as a cloud a cloud Hub in the middle I guess",
    "start": "1305799",
    "end": "1312480"
  },
  {
    "text": "that's the term of the product but um redundant Tunnels for your VPN connection so when you set up a VPN",
    "start": "1312480",
    "end": "1318120"
  },
  {
    "text": "connection you're going to want to put together multiple tunnels and those are going to terminate on different Hardware on the Amazon side so so again if",
    "start": "1318120",
    "end": "1324520"
  },
  {
    "start": "1319000",
    "end": "1319000"
  },
  {
    "text": "there's maintenance done on one um traffic will flow over the other you also can run redundant",
    "start": "1324520",
    "end": "1330320"
  },
  {
    "start": "1330000",
    "end": "1330000"
  },
  {
    "text": "customer gateways so that you're building building redundancy into it on your side of the equation so it's not just dual routers on the AWS side but",
    "start": "1330320",
    "end": "1336760"
  },
  {
    "text": "you also got dual routers on your side so you're going to build redundancy into your land environment you know with something like hsrp or",
    "start": "1336760",
    "end": "1343760"
  },
  {
    "text": "vrrp so what is direct connect um we're going to go more into this in the next couple slides slides but really it's an",
    "start": "1343760",
    "end": "1349279"
  },
  {
    "start": "1345000",
    "end": "1345000"
  },
  {
    "text": "alternative to using the internet you're going to use a third party provider um Telecom provider or a Colo provider um",
    "start": "1349279",
    "end": "1355400"
  },
  {
    "text": "it's a private network connection um you're going to be able to reduce costs um and change your network",
    "start": "1355400",
    "end": "1360520"
  },
  {
    "text": "characteristics in terms of you know having a more consistent connection that you're you're communicating to AWS with",
    "start": "1360520",
    "end": "1368240"
  },
  {
    "start": "1367000",
    "end": "1367000"
  },
  {
    "text": "so you might say reduce bandwidth C cost of bandwidth well I'm going to have to come with a private circuit and you know",
    "start": "1368240",
    "end": "1374600"
  },
  {
    "text": "that's going to cost me some money every month to come come with a private circuit to AWS but there's a Delta between the cost for data out over",
    "start": "1374600",
    "end": "1381159"
  },
  {
    "text": "Direct Connect versus the cost for data out over the internet if you come with your own pipe and the data is being transported by you out you pay a certain",
    "start": "1381159",
    "end": "1388640"
  },
  {
    "text": "amount of cents per per gig out right and if you're using our internet pipe to get data out it's going to cost more so",
    "start": "1388640",
    "end": "1394159"
  },
  {
    "text": "let's say the Delta's eight or nine cents a gig and I might be off on that I'm just using some numbers but",
    "start": "1394159",
    "end": "1399320"
  },
  {
    "text": "eventually you're going to make you're going to make up that if you're pushing enough data out if you're running Big Data if you're running analytical",
    "start": "1399320",
    "end": "1404799"
  },
  {
    "text": "workloads you're pulling a lot of data out of AWS um at some point there's going to be a break even where you're actually saving money by using Direct",
    "start": "1404799",
    "end": "1410760"
  },
  {
    "text": "Connect and getting better Network performance so again more consistent",
    "start": "1410760",
    "end": "1416159"
  },
  {
    "text": "Network performance you're going to be buying a dedicated circuit from a carrier potentially a wavelength a gigabit wavelength or a 10 gig",
    "start": "1416159",
    "end": "1421640"
  },
  {
    "text": "wavelength or a 10 gig PRI or a gig private line or or potentially a layer two packet over over ethernet type",
    "start": "1421640",
    "end": "1427840"
  },
  {
    "text": "solution or something like that but um these things typically have much better performance than the internet you should be able to get a pretty well defined",
    "start": "1427840",
    "end": "1434240"
  },
  {
    "text": "latency from your carrier you can also connect privately to your um your direct connect with",
    "start": "1434240",
    "end": "1440120"
  },
  {
    "text": "Direct Connect as well so and we're going to talk more about that um we do have many Direct Connect locations there",
    "start": "1440120",
    "end": "1445480"
  },
  {
    "text": "are currently 11 locations um you can find out more details on our website we also have a variety of partners for",
    "start": "1445480",
    "end": "1451000"
  },
  {
    "text": "Direct Connect so um there are Colo Partners such as equinex and coresite in the US and um we also have Telecom",
    "start": "1451000",
    "end": "1457960"
  },
  {
    "text": "Partners a variety of partners that um can deliver circuits from your data center over to AWS to the direct connect",
    "start": "1457960",
    "end": "1463400"
  },
  {
    "text": "regions and get you that that cross connect over to the AWS panel that faces our router",
    "start": "1463400",
    "end": "1469760"
  },
  {
    "text": "so um let's look at a few Direct Connect architectures quickly so first off um",
    "start": "1469760",
    "end": "1475480"
  },
  {
    "start": "1475000",
    "end": "1475000"
  },
  {
    "text": "this would be a basic direct connect with no redundancy built in we've got our our router um we got the direct",
    "start": "1475480",
    "end": "1480919"
  },
  {
    "text": "connect connection it's terminating on the AWS router inside of the cage um you go you go turn up a port from the",
    "start": "1480919",
    "end": "1486520"
  },
  {
    "text": "console um say I want a gig Port you're going to get Loa CFA back from us a letter of authorization and a carrier",
    "start": "1486520",
    "end": "1493039"
  },
  {
    "text": "facility assignment of where where you where you cross connect AWS you give that to your carrier and your carrier will and order the cross connect from",
    "start": "1493039",
    "end": "1499679"
  },
  {
    "text": "the direct connect um Colo provider to get you over to AWS on that particular panel on that particular port and then",
    "start": "1499679",
    "end": "1505399"
  },
  {
    "text": "you go through the activation process turn up your virtual interfaces and so on now um as you see here you can have",
    "start": "1505399",
    "end": "1510880"
  },
  {
    "text": "multiple virtual interfaces over a direct connect um or sub interfaces and these are vlans so you can have a public",
    "start": "1510880",
    "end": "1516880"
  },
  {
    "text": "VLAN that faces AWS where people in your data center or or on your corporate um footprint talk",
    "start": "1516880",
    "end": "1523880"
  },
  {
    "text": "to AWS public services and this would be preferred over the public internet path um so people can go put things in S3 and",
    "start": "1523880",
    "end": "1529799"
  },
  {
    "text": "get things out of S3 let's say you've got workloads that are pushing a lot of data into S3 for Big Data um for",
    "start": "1529799",
    "end": "1535080"
  },
  {
    "text": "analytical workloads or or big data workloads and you're generating a lot of data over your data center you want to push it to AWS and your internet",
    "start": "1535080",
    "end": "1541120"
  },
  {
    "text": "connection maybe isn't enough maybe you can't get enough throughput um you might use a public interface over direct connect to do something like that um",
    "start": "1541120",
    "end": "1548399"
  },
  {
    "text": "hybrid apps would be another case um and then you can always create virtual interfaces that are private over to your",
    "start": "1548399",
    "end": "1553760"
  },
  {
    "text": "different vpcs is as it's done here there are two different vlans um VLAN X and VLAN y I believe inside of the",
    "start": "1553760",
    "end": "1559720"
  },
  {
    "text": "diagram that that actually connect your um corporate headquarters to two different virtual data centers running",
    "start": "1559720",
    "end": "1565600"
  },
  {
    "text": "in a region and you can actually relegate virtual interfaces to sub accounts as well or other accounts um",
    "start": "1565600",
    "end": "1572720"
  },
  {
    "text": "this would be a little more of a robust solution for Direct Connect here and um you know this is probably the more",
    "start": "1572720",
    "end": "1578880"
  },
  {
    "start": "1573000",
    "end": "1573000"
  },
  {
    "text": "recommended solution where you've got dual routers on or or a single or dual routers on your end facing dual routers",
    "start": "1578880",
    "end": "1584360"
  },
  {
    "text": "on our side and um you know you can do this um if you order two direct connects",
    "start": "1584360",
    "end": "1589559"
  },
  {
    "text": "you can have link level redundancy and router level redundancy on our side you can also run dual Direct",
    "start": "1589559",
    "end": "1596440"
  },
  {
    "start": "1596000",
    "end": "1596000"
  },
  {
    "text": "Connect um um like locations you're actually hitting AWS in a single region",
    "start": "1596440",
    "end": "1601919"
  },
  {
    "text": "at two different buildings so in US West one Northern California you can meet us at um one Wilshire corite one Wilshire",
    "start": "1601919",
    "end": "1608640"
  },
  {
    "text": "or equinix San Jose if you're on the east coast and you're trying to hit us East you can meet us at eonix Virginia",
    "start": "1608640",
    "end": "1615559"
  },
  {
    "text": "or corite New York and so now you've got um building redundancy or location redundancy built into your",
    "start": "1615559",
    "end": "1622240"
  },
  {
    "text": "solution okay so now we've talked a lot about what are all these things we're actually going to shift gears into um",
    "start": "1622240",
    "end": "1628840"
  },
  {
    "text": "making this highly available so um we're going to shift into more of a a design pattern type environment here so in this",
    "start": "1628840",
    "end": "1635919"
  },
  {
    "start": "1632000",
    "end": "1632000"
  },
  {
    "text": "case I've got a problem statement where I've got um an application that runs either one on a single instance or two",
    "start": "1635919",
    "end": "1642000"
  },
  {
    "text": "um and maybe it only runs on a single instance this application doesn't hor horizontally scale so it's a single point of failure in my architecture I",
    "start": "1642000",
    "end": "1648360"
  },
  {
    "text": "want to run a hot standby alongside it or or this could also just be used for upgrades as well um but I got the",
    "start": "1648360",
    "end": "1654279"
  },
  {
    "text": "ability to Define an interface called an elastic network interface um when I launch an instance it's always going to",
    "start": "1654279",
    "end": "1659640"
  },
  {
    "text": "have an Ethernet zero and that's not movable between instances but if I go and attach an Ethernet one interface or an Ethernet 2 interface and create an",
    "start": "1659640",
    "end": "1666559"
  },
  {
    "text": "elastic network interface and attach it to my ec2 instance I can actually move that within the subnet to another instance so let's say I do have a hot",
    "start": "1666559",
    "end": "1673159"
  },
  {
    "text": "standby and I want to move the interface I don't want to change people are pointing to IP addresses and whatever I don't anything to change underneath the",
    "start": "1673159",
    "end": "1679159"
  },
  {
    "text": "covers so all I need to do is move that eni from one instance to another and I've got the ability to do that um with",
    "start": "1679159",
    "end": "1684440"
  },
  {
    "text": "this floating interface pattern so I mean some of the pros here um I don't have to update DNS um fall back is as",
    "start": "1684440",
    "end": "1690279"
  },
  {
    "text": "easy as moving back my eni if I'm doing an upgrade or something like that and um you anybody that's pointing to public or",
    "start": "1690279",
    "end": "1696279"
  },
  {
    "text": "private IPS on that interface they all go with it so everything goes with that interface so it's um so it's a it's a",
    "start": "1696279",
    "end": "1701720"
  },
  {
    "text": "virtual elastic network interface and uh the last note is this is only good within a subnet so you can",
    "start": "1701720",
    "end": "1708159"
  },
  {
    "text": "only move them within a subnet and a subnet is confined to an availability zone so you can't move these between uh",
    "start": "1708159",
    "end": "1713360"
  },
  {
    "text": "availability zones so we talked a little bit about on demand natat and here the problem is",
    "start": "1713360",
    "end": "1718519"
  },
  {
    "start": "1718000",
    "end": "1718000"
  },
  {
    "text": "I've got these things I want to remain private but I want them to be able to talk to the internet to download patches",
    "start": "1718519",
    "end": "1723600"
  },
  {
    "text": "to download software um to call apis to put things in S3 and get things out of S3 to call Dynamo DB all of those",
    "start": "1723600",
    "end": "1730279"
  },
  {
    "text": "services that would be public um I might have those needs inside of my virtual private Cloud how do I expose that to",
    "start": "1730279",
    "end": "1736360"
  },
  {
    "text": "things that are running in private subnets and um you know deploying a nnat on an ec2 server is the way you do that",
    "start": "1736360",
    "end": "1742399"
  },
  {
    "text": "you deploy a natat um you take your subnet um and you you create a route that points the default route or a",
    "start": "1742399",
    "end": "1748679"
  },
  {
    "text": "specific set of Ip ranges to that particular net and then when any requests go out in in that IP block um",
    "start": "1748679",
    "end": "1754440"
  },
  {
    "text": "they'll go through the natat and the natat will um do a p address translation to give again a stateful request and",
    "start": "1754440",
    "end": "1759640"
  },
  {
    "text": "response to that internet destination for your request so um so this is a very common pattern but you know next you'd",
    "start": "1759640",
    "end": "1765960"
  },
  {
    "text": "say well okay I deployed but it's a single point of failure now let's say my",
    "start": "1765960",
    "end": "1771279"
  },
  {
    "text": "application um depends upon that what do I do in that case so um then I'd say you",
    "start": "1771279",
    "end": "1777519"
  },
  {
    "text": "know what you really want to think about is high availability net how do I how do I build a net that's more highly available so um in this case I'm going",
    "start": "1777519",
    "end": "1784720"
  },
  {
    "text": "to run that in Independent Auto scale groups in each availability Zone and um",
    "start": "1784720",
    "end": "1789799"
  },
  {
    "text": "so these Auto scale groups have a Min of one and a Max of one and let's say that net dies what's going to happen Auto",
    "start": "1789799",
    "end": "1795840"
  },
  {
    "start": "1790000",
    "end": "1790000"
  },
  {
    "text": "scaling it's not Auto scaling is not meaning to scale things out now all it's doing with a Min of one and a Max of one is make sure that one instance is",
    "start": "1795840",
    "end": "1802240"
  },
  {
    "text": "healthy if that instance dies or degrades it's going to kick it out and launch another one and so um so Autos",
    "start": "1802240",
    "end": "1808240"
  },
  {
    "text": "scale will take care of launching the new Gat but then how do I how do I set up the natat services again here well",
    "start": "1808240",
    "end": "1814200"
  },
  {
    "text": "what I do here is as part of my launch configuration I'm going to assign a public IP I've got that capability now that's something we we made available",
    "start": "1814200",
    "end": "1820519"
  },
  {
    "text": "shortly um in the last uh 4 to8 weeks I'm going to say and um then lastly you",
    "start": "1820519",
    "end": "1826720"
  },
  {
    "text": "can kick off through user data script that would actually go and update the um VPC route table for that particular",
    "start": "1826720",
    "end": "1833200"
  },
  {
    "text": "subnet to point to the new um net so the n's actually bootstrapping itself it's",
    "start": "1833200",
    "end": "1838600"
  },
  {
    "text": "actually saying hey I'm the natat I launched with a Nat Ami and I assigned an IP address and now I've got Public",
    "start": "1838600",
    "end": "1843679"
  },
  {
    "text": "Access so I'm going to go call make the API call out to go and update all the routes that are supposed to point to me to point to me so um the pros here I",
    "start": "1843679",
    "end": "1852000"
  },
  {
    "text": "mean your n application is much more ha than it was before where there is manual",
    "start": "1852000",
    "end": "1857399"
  },
  {
    "text": "um inter vention that was required to stand up a new um but you know and you've got limited downtime but I mean",
    "start": "1857399",
    "end": "1863559"
  },
  {
    "text": "it's going to be a few minutes of downtime if it goes down right you got a you know Autos scaling you to discover it that takes a little bit of time and",
    "start": "1863559",
    "end": "1869279"
  },
  {
    "text": "then and then you know once it launches it it's going to take a little bit of time to boot as well so so you know can I accept that well um we got another",
    "start": "1869279",
    "end": "1876919"
  },
  {
    "text": "pattern called squid proxy um so I like the pattern before for its Simplicity",
    "start": "1876919",
    "end": "1882120"
  },
  {
    "text": "it's a really good pattern there's an article um one of the pro serve guys um in Irvine in my office wrote on squid",
    "start": "1882120",
    "end": "1888519"
  },
  {
    "text": "proxy you can go find it if you do search for AWS squid proxy I think it'll be the first link on Google and um but",
    "start": "1888519",
    "end": "1895360"
  },
  {
    "text": "the um and it has all the cloud information templates as well so for setting this up but um here the problem",
    "start": "1895360",
    "end": "1900960"
  },
  {
    "text": "is um again standard Nat um I don't want to be dependent upon one instance um I maybe I can't take the amount of",
    "start": "1900960",
    "end": "1907039"
  },
  {
    "text": "downtime of a few minutes while that n reboots maybe my application is dependent upon it um and lastly maybe I",
    "start": "1907039",
    "end": "1912360"
  },
  {
    "text": "need to push a lot of data out to S3 do a lot of puts and gets out to S3 and maybe my throughput is going to be Way",
    "start": "1912360",
    "end": "1918760"
  },
  {
    "text": "Beyond what a single net instance I might have hundreds of instances that are trying to put and get things out of S3 and you know one single instance",
    "start": "1918760",
    "end": "1925320"
  },
  {
    "text": "being the network bottleneck is probably not the right the right way to operate on this so so what do I do here I run a",
    "start": "1925320",
    "end": "1930880"
  },
  {
    "text": "squid proxy configuration in an auto scale group I might have that auto scale group scale on network IO or something",
    "start": "1930880",
    "end": "1937760"
  },
  {
    "text": "like that and then I put a proxy layer in front of it a private load balancer and then when I boot these ec2 instances",
    "start": "1937760",
    "end": "1943360"
  },
  {
    "text": "I have them bootstrapped to proxy all their connections for HTTP and https out through um that particular private load",
    "start": "1943360",
    "end": "1950720"
  },
  {
    "text": "balancer so now if a squid proxy fails what happens I've got as many more as I had I might have a Min of four in that",
    "start": "1950720",
    "end": "1957440"
  },
  {
    "text": "tier and a Max of 20 let's say and so I've got three others that are sitting there and auto scaling is going to launch that fourth one again further as",
    "start": "1957440",
    "end": "1963919"
  },
  {
    "text": "Network iio goes up it's going to scale up that squid proxy layer it's going to scale it back down as as Network iio",
    "start": "1963919",
    "end": "1969519"
  },
  {
    "text": "goes down so so really good pattern here um for haat but you know there are a few",
    "start": "1969519",
    "end": "1974600"
  },
  {
    "text": "cons um more maintenance more cost all of those things right so so um you know",
    "start": "1974600",
    "end": "1980039"
  },
  {
    "text": "you got to balance the pattern you use with the cost and the administration that goes along with",
    "start": "1980039",
    "end": "1985200"
  },
  {
    "text": "it okay so we're going to shift gears now to application design patterns and um talk about some um different patterns",
    "start": "1985200",
    "end": "1992480"
  },
  {
    "text": "for making your application highly available and you know uh Amazon CTO ver Vogal says quite often everything fails",
    "start": "1992480",
    "end": "1998799"
  },
  {
    "text": "so you really got to build your application with that mindset everything fails so you know you really need to design your application to meet your SLA",
    "start": "1998799",
    "end": "2005679"
  },
  {
    "text": "and your price point at some point those two those two are going to intersect it there's there's the the amount that it",
    "start": "2005679",
    "end": "2010799"
  },
  {
    "text": "costs for your application to be down um the RPO and the RTO and you need to balance those with against the cost of",
    "start": "2010799",
    "end": "2016960"
  },
  {
    "text": "what it takes to run a highly available application and figure out where that that that crosses so just a couple metrics here for for a 59 application",
    "start": "2016960",
    "end": "2024039"
  },
  {
    "text": "you're talking about five minutes of downtime a year for a 69ine application you're talking about 30 seconds so um",
    "start": "2024039",
    "end": "2030960"
  },
  {
    "text": "how do you design your application and balance it with expense for your particular scenario so we're going to",
    "start": "2030960",
    "end": "2036880"
  },
  {
    "text": "start off with the mult data center pattern now this is probably a pretty Elementary pattern for most people um",
    "start": "2036880",
    "end": "2042480"
  },
  {
    "text": "that have been using AWS for a while you run a load balancer you run multiple servers behind that load balancer in multiple availability zones that load",
    "start": "2042480",
    "end": "2049158"
  },
  {
    "start": "2044000",
    "end": "2044000"
  },
  {
    "text": "balancer health checks the instances if an instance fails that load balancer is going to kick that instance out of the",
    "start": "2049159",
    "end": "2054878"
  },
  {
    "text": "load balancing cycle and it's going to load balance to the other instances and if that instance becomes healthy again it starts passing passing health checks",
    "start": "2054879",
    "end": "2061440"
  },
  {
    "text": "it'll start serving traffic to it again so so now I'm more highly available I've got multiple servers running in multiple availability zones and I'm load",
    "start": "2061440",
    "end": "2067440"
  },
  {
    "text": "balancing ing traffic and I'm Health cheing them um further I can actually use Auto scaling and wrap Auto scaling",
    "start": "2067440",
    "end": "2073560"
  },
  {
    "text": "around those ec2 instances to um kick out the the bad instances rejuvenate",
    "start": "2073560",
    "end": "2079040"
  },
  {
    "text": "them scale up scale down um and uh it will actually register instances with",
    "start": "2079040",
    "end": "2084158"
  },
  {
    "text": "the the elastic load balancer it also deregister instances and and shut them down so um there's a couple things that",
    "start": "2084159",
    "end": "2090200"
  },
  {
    "text": "are key here so let's say I'm going to use this multi multi-server pattern um first off when I've got somebody",
    "start": "2090200",
    "end": "2095960"
  },
  {
    "text": "uploading content to my site let's say I've got used are generated content where am I going to put that am I going to store that that Avatar or that that",
    "start": "2095960",
    "end": "2102400"
  },
  {
    "text": "video or photo um on that particular server probably not right I'm going to need to have that you know I might have",
    "start": "2102400",
    "end": "2109320"
  },
  {
    "text": "20 servers in my web Fleet and um you know they're not the other 19 aren't going to know about it so um so I want",
    "start": "2109320",
    "end": "2115760"
  },
  {
    "text": "to think about how I how I manage that type of interaction do I put stuff in S3 cloud storage or do I put things in an",
    "start": "2115760",
    "end": "2121680"
  },
  {
    "text": "NFS behind how do I how do I manage that and we'll talk about that next um also you know if I'm going to be scaling up",
    "start": "2121680",
    "end": "2127280"
  },
  {
    "text": "and scal down um am I storing session State on my servers so am I storing",
    "start": "2127280",
    "end": "2133320"
  },
  {
    "text": "session state in cookies am I storing it back in a backend database or in a key Value Store am I storing it on my server",
    "start": "2133320",
    "end": "2139000"
  },
  {
    "text": "so I've got user session information so I need to direct users to the same server every time now as my servers get",
    "start": "2139000",
    "end": "2144599"
  },
  {
    "text": "bogged down and I scale out I can't push any of the traffic out to those other servers maybe new maybe new users can go",
    "start": "2144599",
    "end": "2150200"
  },
  {
    "text": "to new servers but the current users that are bogging down a server can't be moved out there I'm not stateless I'm very stateful people need to go and",
    "start": "2150200",
    "end": "2157000"
  },
  {
    "text": "session affinity needs to be applied or I need to direct a a user to a particular server using session",
    "start": "2157000",
    "end": "2162680"
  },
  {
    "text": "stickiness which you can do with our elastic load balancing service but there there are better patterns so we're going to talk more about that as",
    "start": "2162680",
    "end": "2169560"
  },
  {
    "text": "well and hence the web storage pattern so um so this is really the pattern of using something like S3 um here the the",
    "start": "2169560",
    "end": "2176880"
  },
  {
    "start": "2173000",
    "end": "2173000"
  },
  {
    "text": "thing is um one I've got content that's going to be replicated um maybe it's user generated content I need to put it",
    "start": "2176880",
    "end": "2182920"
  },
  {
    "text": "somewhere that's common to serve it out of um or two you know maybe I just want to take load off my website servers I",
    "start": "2182920",
    "end": "2188079"
  },
  {
    "text": "mean that's a very you know why why should i serve jpegs um videos CSS",
    "start": "2188079",
    "end": "2193680"
  },
  {
    "text": "JavaScript why should I store that all those big files on every web server and serve it off the web server why not",
    "start": "2193680",
    "end": "2199079"
  },
  {
    "text": "serve it from a common repository such as S3 um so uh taking load off my server",
    "start": "2199079",
    "end": "2205240"
  },
  {
    "text": "is also a key pattern here so the solution here is to actually store your static assets in S3 and S3 um is is a um",
    "start": "2205240",
    "end": "2213000"
  },
  {
    "text": "cloud cloud storage solution web storage solution and it's actually um capable of serving that content up so you know",
    "start": "2213000",
    "end": "2219319"
  },
  {
    "text": "storing all those heavy static Assets in something that other than your web servers that can actually serve that content is actually a great pattern here",
    "start": "2219319",
    "end": "2226280"
  },
  {
    "text": "and um so S3 is going to eliminate the need to you know worry about that load on your servers you can actually put",
    "start": "2226280",
    "end": "2231599"
  },
  {
    "text": "more traffic on your actual web or app tiers rather than actually serving static content you're not going to max",
    "start": "2231599",
    "end": "2236880"
  },
  {
    "text": "out your network um as easily um S3 is highly durable you're talking about 119",
    "start": "2236880",
    "end": "2242520"
  },
  {
    "text": "of durability in terms of the storage the objects you place in S3 so when you place an object in S3 it's replic at",
    "start": "2242520",
    "end": "2247720"
  },
  {
    "text": "around the region many times in at least three different data centers so you're talking about 11 nines of durability on",
    "start": "2247720",
    "end": "2253440"
  },
  {
    "text": "on the objects you store there so very durable um lastly you can actually use S3 as the origin for your content for",
    "start": "2253440",
    "end": "2260400"
  },
  {
    "text": "our content delivery Network or or other content delivery networks as well so so cloudfront is our CDN and um cloudfront",
    "start": "2260400",
    "end": "2267040"
  },
  {
    "text": "or S3 can be the origin for our content delivery Network and what what happens when you put the content delivery",
    "start": "2267040",
    "end": "2272119"
  },
  {
    "text": "Network in front of it is you're putting a global caching Network in front of these static assets so so that the",
    "start": "2272119",
    "end": "2277880"
  },
  {
    "text": "assets get moved closer to the user so um it allows your web pages to download faster to load faster to to serve that",
    "start": "2277880",
    "end": "2284640"
  },
  {
    "text": "video or that heavy image or whatever it might be faster and and just render your page quicker overall so lastly you might say I've got",
    "start": "2284640",
    "end": "2292160"
  },
  {
    "text": "a lot of content I need to get it up on AWS I've got terabytes and terabytes of content it's going to take me forever at",
    "start": "2292160",
    "end": "2298319"
  },
  {
    "text": "all these videos um yes you can technically ship those videos to us in a box um using AWS import export",
    "start": "2298319",
    "end": "2306319"
  },
  {
    "text": "so uh State sharing so um we talked a little bit",
    "start": "2306319",
    "end": "2312359"
  },
  {
    "text": "about the idea of um storing State on a server and not being able to scale out horizontally so if I want to scale out",
    "start": "2312359",
    "end": "2319079"
  },
  {
    "text": "horizontally um and I'm storing all session State on a server well now when that server gets filled with users that",
    "start": "2319079",
    "end": "2324400"
  },
  {
    "text": "all have their session State stored on it when I open up the next server um what's going to happen you know I'm not",
    "start": "2324400",
    "end": "2329440"
  },
  {
    "text": "going to have any users on it at day one or at minute one and over time my new users might end up on the new server but",
    "start": "2329440",
    "end": "2335960"
  },
  {
    "text": "um so so in this stage sharing model I want to move that state sharing off into a key value store or a database or",
    "start": "2335960",
    "end": "2342119"
  },
  {
    "text": "something like that so you know commonly and there are plugins to move State directly for PHP and I think a few other",
    "start": "2342119",
    "end": "2347760"
  },
  {
    "text": "um languages there's a plugin to move it directly out to Dynamo DB it's a common place I mean also using elasticache",
    "start": "2347760",
    "end": "2353720"
  },
  {
    "text": "reddis or mcash D is another common place you know putting in my SQL the one thing you want to make sure um is you",
    "start": "2353720",
    "end": "2360160"
  },
  {
    "text": "don't make that a bottleneck now so if you're going to put all this stuff in Dynamo make sure that your Dynamo reads are high enough that you're you're going",
    "start": "2360160",
    "end": "2366640"
  },
  {
    "text": "to be able to you know handle all those session reads you're doing out of Dynamo same with your you know using elasticache make sure you got enough",
    "start": "2366640",
    "end": "2371960"
  },
  {
    "text": "cluster nodes as well um and uh you know this this actually alleviates the",
    "start": "2371960",
    "end": "2377560"
  },
  {
    "text": "problem now I don't have to worry about um session being tied to a particular server I'm stateless so now I can scale",
    "start": "2377560",
    "end": "2383200"
  },
  {
    "text": "up and every every user request doesn't matter who it's from can go to any of the servers in the fleet and then as I",
    "start": "2383200",
    "end": "2389319"
  },
  {
    "text": "want to scale down I can scale down as well without losing sessions so good",
    "start": "2389319",
    "end": "2394880"
  },
  {
    "text": "pattern highly available database pattern um here you know I want to have a highly available database solution",
    "start": "2394880",
    "end": "2401119"
  },
  {
    "start": "2399000",
    "end": "2399000"
  },
  {
    "text": "where if I lose my master node um in an outage um my application survives so you",
    "start": "2401119",
    "end": "2406640"
  },
  {
    "text": "know the the solution to this problem is and and there are many different ways to do this you can do this on ec2 and roll your own solution um but you know we",
    "start": "2406640",
    "end": "2414400"
  },
  {
    "text": "make this very easily um doable for you with our RDS solution with my SQL Oracle",
    "start": "2414400",
    "end": "2420119"
  },
  {
    "text": "so if you take a look you can run a master database in one availability Zone run a slave in a second availability",
    "start": "2420119",
    "end": "2425760"
  },
  {
    "text": "Zone and have synchronous replication between the master and the slave um you can also run read replicas with my SQL",
    "start": "2425760",
    "end": "2432119"
  },
  {
    "text": "and um take all of the reads for your application and push them against the read replicas or any offline reporting",
    "start": "2432119",
    "end": "2437319"
  },
  {
    "text": "and have it run against the read replicas and then only your rights go against the Masters so that hence improving your IO that you have for your",
    "start": "2437319",
    "end": "2443319"
  },
  {
    "text": "particular application in your database solution um so the pros here you get one connection string um one to the master",
    "start": "2443319",
    "end": "2450920"
  },
  {
    "text": "if the master goes down we're going to change that connection string over to the slave promote the slave to master",
    "start": "2450920",
    "end": "2456000"
  },
  {
    "text": "spin up a new slave so um takes about 2 to 4 minutes for that to happen we",
    "start": "2456000",
    "end": "2461160"
  },
  {
    "text": "recommend implementing retry Logic on your database requests if you if you make a request and there's no there's no",
    "start": "2461160",
    "end": "2466480"
  },
  {
    "text": "response to that connection um back off and make another request and and that that's the recommended approach um but",
    "start": "2466480",
    "end": "2472319"
  },
  {
    "text": "but in a short amount of time you'll fail over from Master to slave so this makes this a much more highly available database pattern than a standard um",
    "start": "2472319",
    "end": "2478560"
  },
  {
    "text": "running on a single instance bootstrapping an instance so in",
    "start": "2478560",
    "end": "2484000"
  },
  {
    "text": "this case um I've got code releas releases that happen often and um I don't want to create an Ami",
    "start": "2484000",
    "end": "2489720"
  },
  {
    "text": "every time to put into my auto scale group um let's say I'm releasing a couple times a day um you know that",
    "start": "2489720",
    "end": "2496520"
  },
  {
    "text": "that's a lot of work and then maybe I'm copying those Amis off to another region so it's a lot to keep track of in a lot",
    "start": "2496520",
    "end": "2501560"
  },
  {
    "text": "of work so the solution here is to develop a base Ami and then bootstrap the instance during boot um to install",
    "start": "2501560",
    "end": "2507960"
  },
  {
    "text": "software get updates install source code and download you know your source code off of GitHub or wherever it might be S3",
    "start": "2507960",
    "end": "2514040"
  },
  {
    "text": "Pros here you don't have to update your Ami very often um and you can you know you can live with",
    "start": "2514040",
    "end": "2519240"
  },
  {
    "text": "an Ami you know that you only update every once in a while when you got to install a new package or new dependency or update your OS with some security",
    "start": "2519240",
    "end": "2525560"
  },
  {
    "text": "changes or whatever it might be um the the the cons here are that um",
    "start": "2525560",
    "end": "2530720"
  },
  {
    "text": "bootstrapping in its entirety takes longer than booting from a golden Ami so if you think about the golden Ami that's",
    "start": "2530720",
    "end": "2536680"
  },
  {
    "text": "where all the bits and bites to run your particular server um are sitting on that particular um dis image and when you",
    "start": "2536680",
    "end": "2542880"
  },
  {
    "text": "boot it boots really quick when you when you start with a A based Ami and then you bootstrap takes a little longer",
    "start": "2542880",
    "end": "2547920"
  },
  {
    "text": "because I going to be installing those those things um lib magic whatever it might be right all the different packages and pulling my source code off",
    "start": "2547920",
    "end": "2554520"
  },
  {
    "text": "and running those processes during the boot process so so you know there's there's a balance here do I need to boot",
    "start": "2554520",
    "end": "2560559"
  },
  {
    "text": "fast or do I you know want to have ultimate flexibility well maybe I meet somewhere in the middle maybe I've got a",
    "start": "2560559",
    "end": "2565800"
  },
  {
    "text": "lot of the packages already installed I've created a custom Ami um all I'm doing is installing source code or maybe",
    "start": "2565800",
    "end": "2571960"
  },
  {
    "text": "a few things during the boot process to so I'm meeting somewhere in the middle I'm bootstrapping but I'm also using a",
    "start": "2571960",
    "end": "2577400"
  },
  {
    "text": "Ami that's going to allow me to boot a little faster so so here's an example of",
    "start": "2577400",
    "end": "2584440"
  },
  {
    "text": "bootstrapping and um this is a cloud formation template I built a while back and um I'm just going to step over here",
    "start": "2584440",
    "end": "2589800"
  },
  {
    "start": "2585000",
    "end": "2585000"
  },
  {
    "text": "and see if my laser Works um sorry to those of you that can't see the screen but um so here I'm using um cloud",
    "start": "2589800",
    "end": "2597000"
  },
  {
    "text": "formation and knit to bootstrap an instance and what I've got basically here is an auto scale group that I created and every time you launch an",
    "start": "2597000",
    "end": "2603839"
  },
  {
    "text": "instance in an autoscale group you're launching it based on your autoscale launch config the launch config defines",
    "start": "2603839",
    "end": "2609040"
  },
  {
    "text": "what the server is going to look like every time you launch a new server with autoscaling it's going to specify you know here's my Ami here's this here's",
    "start": "2609040",
    "end": "2615520"
  },
  {
    "text": "that so so in this particular case here I'm using cloud formation init to bootstrap I'm uh installing packages I'm",
    "start": "2615520",
    "end": "2622440"
  },
  {
    "text": "using yum the installer for my Amazon Linux um to install Apache in PHP then",
    "start": "2622440",
    "end": "2629000"
  },
  {
    "text": "I'm using the sources command here to um pull all my source code off of a zip file in S3 and unpack it into V dubdub",
    "start": "2629000",
    "end": "2636240"
  },
  {
    "text": "duub HTML and then lastly I'm I'm my services command here is um it's",
    "start": "2636240",
    "end": "2641720"
  },
  {
    "text": "enabling Apache and ensuring it's running when it's done all those steps my server should be running should be",
    "start": "2641720",
    "end": "2647040"
  },
  {
    "text": "attaching to the load balancer and I bootstrapped my instance so this instance is starting from a base",
    "start": "2647040",
    "end": "2652319"
  },
  {
    "text": "Amazon Linux Emi all it's doing here is doing a hello world I mean pretty pretty basic but but nevertheless you get the",
    "start": "2652319",
    "end": "2658319"
  },
  {
    "text": "idea that could be a very complex application in that zip file that I'm deploying with this particular bootstrap",
    "start": "2658319",
    "end": "2663680"
  },
  {
    "text": "instance example okay so you might say this is all great um what happens though if my",
    "start": "2663680",
    "end": "2671520"
  },
  {
    "text": "application still degrades let's say it's um a database issue let's say it's uh an application issue let's say it's",
    "start": "2671520",
    "end": "2677920"
  },
  {
    "text": "an infrastructure issue like we talked about everything fails so applications can degrade or what happens if I just",
    "start": "2677920",
    "end": "2683200"
  },
  {
    "text": "want to do maintenance you know I might just need to do maintenance at some point in time how do I how do I have meet my SLA of five minutes of downtime",
    "start": "2683200",
    "end": "2689359"
  },
  {
    "text": "or whatever I set that SLA to per year um you know and operate to that you know with these possible factors that could",
    "start": "2689359",
    "end": "2695599"
  },
  {
    "text": "impact my app so one of the answers that I like to give people is run a static s a static",
    "start": "2695599",
    "end": "2703240"
  },
  {
    "text": "website in S3 so I might have my web app out there that's a dynamic app right it's written in a Java or PHP or Ruby um",
    "start": "2703240",
    "end": "2710880"
  },
  {
    "text": "and it has lots of features and functionality but I could have a very nice page you know index page product",
    "start": "2710880",
    "end": "2717079"
  },
  {
    "text": "pages contact Pages um anything else that's applicable to my particular application um but it's static you know",
    "start": "2717079",
    "end": "2723480"
  },
  {
    "text": "PDFs all of that could be you can actually create a website in an S3 bucket and actually have S3 become the",
    "start": "2723480",
    "end": "2730079"
  },
  {
    "text": "web server for that static website and then you can use Route 53 with DNS failover to um fail over traffic to that",
    "start": "2730079",
    "end": "2738240"
  },
  {
    "text": "static website when the dynamic website goes down so this is a great pattern if you take a look this is building out a",
    "start": "2738240",
    "end": "2744280"
  },
  {
    "text": "static website on S3 and um you you define your bucket you put all your your static files inside of",
    "start": "2744280",
    "end": "2750440"
  },
  {
    "text": "that bucket you can Define your index document your error document and so on and then we're going to go create a DNS",
    "start": "2750440",
    "end": "2757160"
  },
  {
    "text": "failover policy which um here I've got a a cname",
    "start": "2757160",
    "end": "2762440"
  },
  {
    "text": "record of dubdub dub that's going to point to my elastic load balancer it's got a routing policy of fail over routing and it's got a record type of",
    "start": "2762440",
    "end": "2769119"
  },
  {
    "text": "primary so what Route 53 is going to do is it's going to always health check it's going to health check the",
    "start": "2769119",
    "end": "2775160"
  },
  {
    "text": "load balancer and as long as it gets responses it's going to serve traffic to that load balancer but if that health",
    "start": "2775160",
    "end": "2780520"
  },
  {
    "text": "check fails well I've got a secondary policy um in my fail over routing that points to my S3 static website which",
    "start": "2780520",
    "end": "2787440"
  },
  {
    "text": "if I want to be really you know if I really want to worry about um fa",
    "start": "2787440",
    "end": "2793040"
  },
  {
    "text": "tolerance and redundancy I might put that in a different region so now um this is going to live",
    "start": "2793040",
    "end": "2800119"
  },
  {
    "text": "you know um Route 53 is going to fail everything over to that static website in the case here so and that's exactly",
    "start": "2800119",
    "end": "2805240"
  },
  {
    "text": "what happens in the example here you know our fth our health check failed um we we switched over to the secondary",
    "start": "2805240",
    "end": "2810400"
  },
  {
    "text": "route and now we're actually serving a static version of our website or our web app out of",
    "start": "2810400",
    "end": "2815839"
  },
  {
    "text": "S3 so what might a highly available like this highly available application like",
    "start": "2815839",
    "end": "2821720"
  },
  {
    "text": "this look like inside a virtual private cloud with a lot of the best practices we learned so um here we've got um we've",
    "start": "2821720",
    "end": "2829319"
  },
  {
    "text": "got our application there's a lot going on here but we separated all our um subnets out by function so if we choose",
    "start": "2829319",
    "end": "2835440"
  },
  {
    "text": "to add AAL later we can we also um have deployed all of our servers in private",
    "start": "2835440",
    "end": "2841280"
  },
  {
    "text": "subnets so I'm not putting these servers and exposing them to the public they might be web servers but the only thing that needs to be public is my load",
    "start": "2841280",
    "end": "2847520"
  },
  {
    "text": "balancer in this case um we also are using um elastic load balancers um in front of the web",
    "start": "2847520",
    "end": "2854319"
  },
  {
    "text": "tier and between the web and the app tier and these are highly available fault tolerant Services as well that",
    "start": "2854319",
    "end": "2859800"
  },
  {
    "text": "that heal heal themselves in case of issues and um so we got fall tolerance built in there we also deployed ha using",
    "start": "2859800",
    "end": "2867440"
  },
  {
    "text": "the Autos skill um design pattern we we talked about earlier today um we're also using the multi server pattern with",
    "start": "2867440",
    "end": "2873839"
  },
  {
    "text": "multi-az at both the web and the app tier we're using the web storage pattern",
    "start": "2873839",
    "end": "2879000"
  },
  {
    "text": "so we're serving all of our content out a cloudfront with um S3 being the origin so we're taking load off the",
    "start": "2879000",
    "end": "2884800"
  },
  {
    "text": "servers um we also are taking all session State and putting in Dynam DB um we're also using the high",
    "start": "2884800",
    "end": "2891520"
  },
  {
    "text": "availability database pattern so we've got uh master and slave",
    "start": "2891520",
    "end": "2896680"
  },
  {
    "text": "with reads coming out of our read replicas in the local availability Zone we're using Route 53 for DNS failover",
    "start": "2896680",
    "end": "2903599"
  },
  {
    "text": "running a static website in an S3 bucket and and then lastly we're using dual customer gateways for um internal app",
    "start": "2903599",
    "end": "2910280"
  },
  {
    "text": "users that are coming through VPN or administrators or whoever it might be we're using we're using dual VPN",
    "start": "2910280",
    "end": "2915359"
  },
  {
    "text": "connections dual customer gateways potentially dual direct connects okay so this is all great um as",
    "start": "2915359",
    "end": "2924640"
  },
  {
    "text": "we talked about everything fails so it's important to test our application out and um there's a variety of load and",
    "start": "2924640",
    "end": "2931520"
  },
  {
    "text": "fault tolerant testing tools out there um this is an image of bees with machine guns you can spin this via cloud",
    "start": "2931520",
    "end": "2937319"
  },
  {
    "text": "formation really you're spinning up a a set of B's um being the ec2 instances",
    "start": "2937319",
    "end": "2942480"
  },
  {
    "text": "and the machine guns are the requests they make out to your web app to put load on it um I like that little image",
    "start": "2942480",
    "end": "2948680"
  },
  {
    "text": "so a variety of test Tools Apache bench bees of machine guns load Runner um and then we get to chaos monkey which is",
    "start": "2948680",
    "end": "2954839"
  },
  {
    "start": "2951000",
    "end": "2951000"
  },
  {
    "text": "more of a fault testing tool and um that's where we're going to transition to next so um what is chaos monkey um",
    "start": "2954839",
    "end": "2963079"
  },
  {
    "text": "it's really something that targets and terminates instances in a region um why would you run this well like we",
    "start": "2963079",
    "end": "2969839"
  },
  {
    "text": "talked about everything fails so why not test to see what that failure looks like know what what's how your application is",
    "start": "2969839",
    "end": "2975760"
  },
  {
    "text": "going to behave in case of an outage or in case servers die in a particular tier um so it's best to be prepared by",
    "start": "2975760",
    "end": "2982119"
  },
  {
    "text": "testing there are multiple implementations of this you can do a net CLI app which is what I'm going to demo today there's also an open source Java",
    "start": "2982119",
    "end": "2989240"
  },
  {
    "text": "Services implementation you can use um so what it does is it targets instances",
    "start": "2989240",
    "end": "2994319"
  },
  {
    "text": "in Autos scale groups um at least that's what you you typically want to be doing you want to deployed your application correctly so they self-heal um at each",
    "start": "2994319",
    "end": "3001079"
  },
  {
    "text": "layer and so you target Auto scale groups to to knock um have chaos monkey knock these things out and see what",
    "start": "3001079",
    "end": "3006200"
  },
  {
    "text": "happens how your application responds so um there's an optin or opt out model we're going to use the opt-in model I'll",
    "start": "3006200",
    "end": "3011839"
  },
  {
    "text": "show you how it's going to work it's tunable so you can set it to how many instances you want to terminate um",
    "start": "3011839",
    "end": "3017280"
  },
  {
    "text": "Netflix runs this during the week um and I don't know if this is still accurate but they used to run it from 9: to 3",
    "start": "3017280",
    "end": "3022480"
  },
  {
    "text": "Monday through Thursday so it's almost like a shift um so for our demo we're going to",
    "start": "3022480",
    "end": "3028520"
  },
  {
    "text": "actually demo I built an application out that looks similar to the application we looked at a couple slides ago um it's",
    "start": "3028520",
    "end": "3034160"
  },
  {
    "start": "3031000",
    "end": "3031000"
  },
  {
    "text": "called chaos demo. hom and.me um this is the actual CLI command I'm going to",
    "start": "3034160",
    "end": "3039440"
  },
  {
    "text": "issue against chaos monkey so we're going to log everything to chaos log. text um we're going to run this against",
    "start": "3039440",
    "end": "3045160"
  },
  {
    "text": "the US West 2 region there's my access key and secet key um anything that's",
    "start": "3045160",
    "end": "3050200"
  },
  {
    "text": "tagged with chaos and a value of one is going to be targeted and then I'm going to kill four servers and I'm going to do",
    "start": "3050200",
    "end": "3056040"
  },
  {
    "text": "it every 15 15 seconds that's the duration so next we're going to transition into our demo so give me one",
    "start": "3056040",
    "end": "3062760"
  },
  {
    "text": "second here hopefully um everything should be up okay so",
    "start": "3062760",
    "end": "3069040"
  },
  {
    "text": "here's the command um and we're going to run this I'm running this on a Windows Server here and right here I've got the",
    "start": "3069040",
    "end": "3074520"
  },
  {
    "text": "chaos demo application and if I refresh this essentially what the application is",
    "start": "3074520",
    "end": "3079599"
  },
  {
    "text": "this is I mean it's it's fairly crude no UI just a PHP app with no HTML",
    "start": "3079599",
    "end": "3084760"
  },
  {
    "text": "formatting it but essentially it's going to tell you the web server you hit with the request the app server you hit with",
    "start": "3084760",
    "end": "3089839"
  },
  {
    "text": "the request the web servers in your web tier the app servers in your app tier and any scaling activities that have",
    "start": "3089839",
    "end": "3095280"
  },
  {
    "text": "happened recently now these are all from demo runs um and if I scroll through them you'll notice that down at the",
    "start": "3095280",
    "end": "3102599"
  },
  {
    "text": "bottom I can actually see when all my servers were launched when I created this demo um on October 22nd but um so",
    "start": "3102599",
    "end": "3111200"
  },
  {
    "text": "so essentially we're going to run chaos monkey against this and see what happens I'll just show you right now",
    "start": "3111200",
    "end": "3117200"
  },
  {
    "text": "here are my app and web tier servers inside of ec2 they're all running so those are all the servers and",
    "start": "3117200",
    "end": "3125200"
  },
  {
    "text": "lastly we will kick off KS monkey to run against this so I'm going to kick it off it says I need to press D to",
    "start": "3125200",
    "end": "3131400"
  },
  {
    "text": "indemnify so it's running now it's actually chosen an instance to kill um i0 d286",
    "start": "3131400",
    "end": "3140720"
  },
  {
    "text": "b39 um and it's waiting 20 seconds to kill the next instance okay so let's go",
    "start": "3140720",
    "end": "3146359"
  },
  {
    "text": "over to our console and refresh and see what's happening there okay so we see an instance",
    "start": "3146359",
    "end": "3151480"
  },
  {
    "text": "shutting down in my web tier right if I refresh",
    "start": "3151480",
    "end": "3158160"
  },
  {
    "text": "here I should see okay now i' I'm actually got only four instances in my web tier I've got six instances still",
    "start": "3158480",
    "end": "3164359"
  },
  {
    "text": "running in my application tier um so if we go back to here we can see we've actually terminated two instances",
    "start": "3164359",
    "end": "3169880"
  },
  {
    "text": "already it's killed a second instance it's waiting 20 milliseconds to kill a third so there it found a third instance",
    "start": "3169880",
    "end": "3176200"
  },
  {
    "text": "now and it's waiting the 20 seconds again if I go back to the ec2 console I should see now a few instances that have",
    "start": "3176200",
    "end": "3181960"
  },
  {
    "text": "been shut down okay so I've I've got one that's shutting two that are shutting down and",
    "start": "3181960",
    "end": "3187920"
  },
  {
    "text": "one that's terminated right and you know my application should still be surviving",
    "start": "3187920",
    "end": "3193520"
  },
  {
    "text": "this I can see now I'm down to five application servers and four instances in the web tier right um but my",
    "start": "3193520",
    "end": "3200480"
  },
  {
    "text": "application is still resilient okay so now I've got a pending",
    "start": "3200480",
    "end": "3206520"
  },
  {
    "text": "server in the web tier so I've replaced one of those web servers that died in the web tier via Autos scaling so I'm launching a new server I'm down to four",
    "start": "3206520",
    "end": "3212520"
  },
  {
    "text": "in the app tier now so I'm assuming KS monkey is finished now um so it's killed four instances it's done the process is",
    "start": "3212520",
    "end": "3218760"
  },
  {
    "text": "over I could have set this to run every 20 minutes uh once a day however long I wanted to run it and you can also use",
    "start": "3218760",
    "end": "3224599"
  },
  {
    "text": "the Java Services implementation and I think that's very tunable as well but um as we can see here if I refresh the",
    "start": "3224599",
    "end": "3232440"
  },
  {
    "text": "console um I've killed couple instances and um I should have instances that are",
    "start": "3232440",
    "end": "3238319"
  },
  {
    "text": "spawning this instance is initializing right now so this is a new instance it doesn't even have a label yet and um",
    "start": "3238319",
    "end": "3243480"
  },
  {
    "text": "again my uh my application is still surviving and so now I've got five",
    "start": "3243480",
    "end": "3248920"
  },
  {
    "text": "running in my web tier five in my app tier and one of or sorry my app tier has got four live servers and one that's",
    "start": "3248920",
    "end": "3254599"
  },
  {
    "text": "pending that's being booted so essentially in a couple minutes this whole application is going to have",
    "start": "3254599",
    "end": "3259920"
  },
  {
    "text": "rebuilt itself and is going to be back to you know square one where I was running six web servers six app servers",
    "start": "3259920",
    "end": "3265359"
  },
  {
    "text": "you know I've got my um elastic load balancers between the tiers and so",
    "start": "3265359",
    "end": "3270799"
  },
  {
    "text": "on all right so let's go back to our slide",
    "start": "3271400",
    "end": "3277440"
  },
  {
    "text": "so there's a variety of other sessions on VPC and direct connect at at reinvent",
    "start": "3277440",
    "end": "3282920"
  },
  {
    "text": "that I'd recommend you attending um on Thursday there's going to be from one to many evolving VPC design patterns it's",
    "start": "3282920",
    "end": "3288760"
  },
  {
    "text": "going to talk through some of the patterns we talked about today and dive deep on a lot of other patterns as well and a lot of other good architectural",
    "start": "3288760",
    "end": "3294280"
  },
  {
    "text": "practices for VPC um you know using multiple vpcs all the different things you might want to think about um then",
    "start": "3294280",
    "end": "3299880"
  },
  {
    "text": "there's also another um discussion on hybrid cloud architectures with Direct Connect um on Friday further tonight",
    "start": "3299880",
    "end": "3306640"
  },
  {
    "text": "there's a pub crawl um so join the AWS startup team to go to the pub crawl um",
    "start": "3306640",
    "end": "3312640"
  },
  {
    "start": "3310000",
    "end": "3310000"
  },
  {
    "text": "it's meeting over at canaletto on the vishan second floor it's from 5:30 to 7:30 and then lastly um if you're in the",
    "start": "3312640",
    "end": "3319040"
  },
  {
    "start": "3318000",
    "end": "3318000"
  },
  {
    "text": "startup Community there's going to be a bunch of sessions with Verner Vogal our our CTO of Amazon and there'll be some",
    "start": "3319040",
    "end": "3324960"
  },
  {
    "text": "Fireside Chats tomorrow from from 1:30 to 2:30 and from 3:00 to 4: and some startup launches tomorrow at 4:15 so I",
    "start": "3324960",
    "end": "3332960"
  },
  {
    "text": "want to thank you guys for coming I appreciate you joining the session um please give your feedback that's how I",
    "start": "3332960",
    "end": "3338280"
  },
  {
    "text": "know how to get better at this and um you know uh if you want to actually ask questions I'm going to have a number of",
    "start": "3338280",
    "end": "3344200"
  },
  {
    "text": "essay that come up to the front so feel free to come up and come to us with questions or I will be in the Amazon booth in the deployment and management",
    "start": "3344200",
    "end": "3350520"
  },
  {
    "text": "area tomorrow from 10:30 to 1:30 thanks very much",
    "start": "3350520",
    "end": "3358240"
  }
]