[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "in this video you'll see how you can",
    "start": "240",
    "end": "1680"
  },
  {
    "text": "query third-party data from aws data",
    "start": "1680",
    "end": "3919"
  },
  {
    "text": "exchange with amazon athena",
    "start": "3919",
    "end": "6000"
  },
  {
    "text": "you'll learn how you can point to",
    "start": "6000",
    "end": "7040"
  },
  {
    "text": "third-party data sets imported via aws",
    "start": "7040",
    "end": "9360"
  },
  {
    "text": "data exchange subscriptions to amazon's",
    "start": "9360",
    "end": "11360"
  },
  {
    "text": "simple storage service or amazon s3 and",
    "start": "11360",
    "end": "13679"
  },
  {
    "text": "run ad-hoc queries on the catalog",
    "start": "13679",
    "end": "15360"
  },
  {
    "text": "metadata with amazon athena using",
    "start": "15360",
    "end": "17039"
  },
  {
    "text": "standard ansi sql",
    "start": "17039",
    "end": "20240"
  },
  {
    "start": "20000",
    "end": "92000"
  },
  {
    "text": "to get started let's review a few",
    "start": "20400",
    "end": "21920"
  },
  {
    "text": "prerequisites",
    "start": "21920",
    "end": "23359"
  },
  {
    "text": "this video assumes you've already",
    "start": "23359",
    "end": "24640"
  },
  {
    "text": "exported data into an amazon s3 bucket",
    "start": "24640",
    "end": "28080"
  },
  {
    "text": "we have two aws identity and access",
    "start": "28080",
    "end": "30080"
  },
  {
    "text": "management or iam roles the first role",
    "start": "30080",
    "end": "32640"
  },
  {
    "text": "grants amazon athena full access to",
    "start": "32640",
    "end": "34480"
  },
  {
    "text": "amazon s3 where we've exported the data",
    "start": "34480",
    "end": "36800"
  },
  {
    "text": "from aws data exchange",
    "start": "36800",
    "end": "39280"
  },
  {
    "text": "the second iam role grants athena read",
    "start": "39280",
    "end": "41360"
  },
  {
    "text": "write privileges to our s3 bucket so we",
    "start": "41360",
    "end": "43280"
  },
  {
    "text": "can query the data directly and store",
    "start": "43280",
    "end": "44960"
  },
  {
    "text": "the query results",
    "start": "44960",
    "end": "46879"
  },
  {
    "text": "the role is coded to include the path to",
    "start": "46879",
    "end": "48640"
  },
  {
    "text": "the specific bucket we're using",
    "start": "48640",
    "end": "51840"
  },
  {
    "text": "next let's go to aws data exchange",
    "start": "51840",
    "end": "55680"
  },
  {
    "text": "we've already subscribed to some third",
    "start": "55680",
    "end": "57280"
  },
  {
    "text": "party data providers",
    "start": "57280",
    "end": "60079"
  },
  {
    "text": "for this example we'll use this sample",
    "start": "60079",
    "end": "61760"
  },
  {
    "text": "data product",
    "start": "61760",
    "end": "64158"
  },
  {
    "text": "let's see the data we subscribed to",
    "start": "64159",
    "end": "67200"
  },
  {
    "text": "we'll use the esg gc high level sample",
    "start": "67200",
    "end": "71360"
  },
  {
    "text": "let's choose the revision to use",
    "start": "71360",
    "end": "74400"
  },
  {
    "text": "here we can see the revision overview",
    "start": "74400",
    "end": "76080"
  },
  {
    "text": "which includes the data set id and type",
    "start": "76080",
    "end": "78640"
  },
  {
    "text": "let's close this and view the asset",
    "start": "78640",
    "end": "81920"
  },
  {
    "text": "the data asset is a csv file",
    "start": "81920",
    "end": "84479"
  },
  {
    "text": "we can see the jobs run by aws glue data",
    "start": "84479",
    "end": "86880"
  },
  {
    "text": "brew to export the asset to our amazon",
    "start": "86880",
    "end": "88799"
  },
  {
    "text": "s3 bucket",
    "start": "88799",
    "end": "90240"
  },
  {
    "text": "let's go to the aws glue console",
    "start": "90240",
    "end": "92880"
  },
  {
    "start": "92000",
    "end": "157000"
  },
  {
    "text": "you can add table definitions to the aws",
    "start": "92880",
    "end": "94880"
  },
  {
    "text": "glue data catalog manually or you can",
    "start": "94880",
    "end": "96799"
  },
  {
    "text": "use a crawler a crawler connects to the",
    "start": "96799",
    "end": "98880"
  },
  {
    "text": "data store and uses built-in or custom",
    "start": "98880",
    "end": "100799"
  },
  {
    "text": "classifiers to evaluate the format of",
    "start": "100799",
    "end": "102640"
  },
  {
    "text": "the data and infer a schema",
    "start": "102640",
    "end": "104720"
  },
  {
    "text": "the resulting metadata is contained in a",
    "start": "104720",
    "end": "106399"
  },
  {
    "text": "database in the glue data catalog",
    "start": "106399",
    "end": "108640"
  },
  {
    "text": "for our purposes we've already prepared",
    "start": "108640",
    "end": "110240"
  },
  {
    "text": "a database in our aws glue data catalog",
    "start": "110240",
    "end": "112560"
  },
  {
    "text": "to represent the subscription data set",
    "start": "112560",
    "end": "114720"
  },
  {
    "text": "let's view the table",
    "start": "114720",
    "end": "117600"
  },
  {
    "text": "here we can see metadata including the",
    "start": "119280",
    "end": "121119"
  },
  {
    "text": "name of the database its classification",
    "start": "121119",
    "end": "123360"
  },
  {
    "text": "and table properties",
    "start": "123360",
    "end": "125119"
  },
  {
    "text": "this link opens the amazon s3 bucket",
    "start": "125119",
    "end": "127119"
  },
  {
    "text": "where the asset is stored",
    "start": "127119",
    "end": "130080"
  },
  {
    "text": "we can follow the storage path until we",
    "start": "130080",
    "end": "131680"
  },
  {
    "text": "see the csv file",
    "start": "131680",
    "end": "134799"
  },
  {
    "text": "from here we could open and view the",
    "start": "136560",
    "end": "138000"
  },
  {
    "text": "file let's go back to aws glue",
    "start": "138000",
    "end": "142319"
  },
  {
    "text": "the table schema represents all the",
    "start": "142319",
    "end": "143840"
  },
  {
    "text": "columns in the dataset csv file and",
    "start": "143840",
    "end": "145760"
  },
  {
    "text": "their data type",
    "start": "145760",
    "end": "146959"
  },
  {
    "text": "if you are interested in learning more",
    "start": "146959",
    "end": "148239"
  },
  {
    "text": "about aws glue data catalog and its",
    "start": "148239",
    "end": "150319"
  },
  {
    "text": "components please refer to the link in",
    "start": "150319",
    "end": "152160"
  },
  {
    "text": "the description below this video",
    "start": "152160",
    "end": "154800"
  },
  {
    "text": "now let's go to amazon athena",
    "start": "154800",
    "end": "158080"
  },
  {
    "start": "157000",
    "end": "185000"
  },
  {
    "text": "when using amazon athena for the first",
    "start": "158080",
    "end": "159840"
  },
  {
    "text": "time an amazon s3 bucket must be",
    "start": "159840",
    "end": "161920"
  },
  {
    "text": "established as a data source",
    "start": "161920",
    "end": "163840"
  },
  {
    "text": "let's go to the query editor to take a",
    "start": "163840",
    "end": "165440"
  },
  {
    "text": "look",
    "start": "165440",
    "end": "167680"
  },
  {
    "text": "we'll go to the settings tab",
    "start": "168239",
    "end": "170560"
  },
  {
    "text": "in this case we've already established",
    "start": "170560",
    "end": "172080"
  },
  {
    "text": "our amazon s3 bucket as a data source",
    "start": "172080",
    "end": "176080"
  },
  {
    "text": "we can manage settings for our bucket",
    "start": "176080",
    "end": "177680"
  },
  {
    "text": "here or enter the location of a",
    "start": "177680",
    "end": "179280"
  },
  {
    "text": "different amazon s3 bucket",
    "start": "179280",
    "end": "181280"
  },
  {
    "text": "let's cancel and return to the editor",
    "start": "181280",
    "end": "182879"
  },
  {
    "text": "tab",
    "start": "182879",
    "end": "185840"
  },
  {
    "start": "185000",
    "end": "307000"
  },
  {
    "text": "on the left we see the data source is",
    "start": "185920",
    "end": "187519"
  },
  {
    "text": "our aws glue data catalog and three",
    "start": "187519",
    "end": "189920"
  },
  {
    "text": "tables are available for querying",
    "start": "189920",
    "end": "192560"
  },
  {
    "text": "let's expand the table holding our",
    "start": "192560",
    "end": "194000"
  },
  {
    "text": "subscription data to see its schema",
    "start": "194000",
    "end": "198000"
  },
  {
    "text": "can select the vertical ellipsis next to",
    "start": "198000",
    "end": "199760"
  },
  {
    "text": "the table name to see our options",
    "start": "199760",
    "end": "202400"
  },
  {
    "text": "let's preview this table",
    "start": "202400",
    "end": "205280"
  },
  {
    "text": "with this action athena has generated",
    "start": "205280",
    "end": "207200"
  },
  {
    "text": "and run a query to preview 10 results",
    "start": "207200",
    "end": "208959"
  },
  {
    "text": "from the table",
    "start": "208959",
    "end": "210640"
  },
  {
    "text": "although the data set is a csv file",
    "start": "210640",
    "end": "212720"
  },
  {
    "text": "amazon athena queries are coded using",
    "start": "212720",
    "end": "214720"
  },
  {
    "text": "standard ansi sql",
    "start": "214720",
    "end": "217040"
  },
  {
    "text": "let's run another query this time to",
    "start": "217040",
    "end": "218799"
  },
  {
    "text": "reveal 100 results",
    "start": "218799",
    "end": "222080"
  },
  {
    "text": "let's view the results",
    "start": "224799",
    "end": "227840"
  },
  {
    "text": "now let's run a more sophisticated query",
    "start": "232879",
    "end": "236720"
  },
  {
    "text": "this query will count the number of",
    "start": "238799",
    "end": "240080"
  },
  {
    "text": "unique countries sectors and industries",
    "start": "240080",
    "end": "242000"
  },
  {
    "text": "in the data set and reveal their average",
    "start": "242000",
    "end": "243760"
  },
  {
    "text": "esg and gc scores",
    "start": "243760",
    "end": "247439"
  },
  {
    "text": "let's run the query",
    "start": "248480",
    "end": "252040"
  },
  {
    "text": "we can see the counts from all records",
    "start": "254080",
    "end": "255680"
  },
  {
    "text": "in the data set",
    "start": "255680",
    "end": "257519"
  },
  {
    "text": "let's try another query",
    "start": "257519",
    "end": "260639"
  },
  {
    "text": "with this query we'll search for the",
    "start": "261440",
    "end": "262880"
  },
  {
    "text": "distinct industry records represented in",
    "start": "262880",
    "end": "264880"
  },
  {
    "text": "the data set and get their average esg",
    "start": "264880",
    "end": "266880"
  },
  {
    "text": "and gc scores",
    "start": "266880",
    "end": "269840"
  },
  {
    "text": "let's review the results",
    "start": "270560",
    "end": "273680"
  },
  {
    "text": "the data set contains 48 unique",
    "start": "274320",
    "end": "276160"
  },
  {
    "text": "industries",
    "start": "276160",
    "end": "277840"
  },
  {
    "text": "let's run one more query",
    "start": "277840",
    "end": "281120"
  },
  {
    "text": "this query is similar to the previous",
    "start": "281680",
    "end": "283360"
  },
  {
    "text": "one but searches for the unique economic",
    "start": "283360",
    "end": "285199"
  },
  {
    "text": "sector records within the data set",
    "start": "285199",
    "end": "288880"
  },
  {
    "text": "per the results 18 unique economic",
    "start": "288960",
    "end": "290880"
  },
  {
    "text": "sectors are represented in the data set",
    "start": "290880",
    "end": "294720"
  },
  {
    "text": "you've just seen how you can query",
    "start": "294960",
    "end": "296240"
  },
  {
    "text": "third-party data from aws data exchange",
    "start": "296240",
    "end": "298400"
  },
  {
    "text": "with amazon athena",
    "start": "298400",
    "end": "300800"
  },
  {
    "text": "you can learn more about this topic in",
    "start": "300800",
    "end": "302240"
  },
  {
    "text": "the description and links for this video",
    "start": "302240",
    "end": "303919"
  },
  {
    "text": "thanks for watching now it's your turn",
    "start": "303919",
    "end": "305360"
  },
  {
    "text": "to try",
    "start": "305360",
    "end": "308439"
  }
]