[
  {
    "text": "thank you very much B uh good afternoon or good evening everybody um my name is Matt Wood I'm the general manager of",
    "start": "120",
    "end": "5920"
  },
  {
    "text": "data science here at Amazon web services and that rather bizarre title uh basically means that I get to talk to",
    "start": "5920",
    "end": "12120"
  },
  {
    "text": "smart people such as yourselves about how to build sophisticated scalable",
    "start": "12120",
    "end": "17359"
  },
  {
    "text": "applications uh that uh enable your business and uh enable you to do wonderful things with your data um so um",
    "start": "17359",
    "end": "24880"
  },
  {
    "text": "this always gets left to the end uh so I just wanted to thank you very much uh for taking the time to uh listen and",
    "start": "24880",
    "end": "31400"
  },
  {
    "text": "join our webinar today uh you could have been anywhere in the world today so we really appreciate you taking the time uh",
    "start": "31400",
    "end": "36879"
  },
  {
    "text": "to listen to a little bit about what we the work we've been doing around Dynamo DB and some of the work that our",
    "start": "36879",
    "end": "42160"
  },
  {
    "text": "customers have been doing in enabling their mobile applications uh using Dynamo DB for a back",
    "start": "42160",
    "end": "48199"
  },
  {
    "text": "end so I really just wanted to talk about three things today uh it's a a",
    "start": "48199",
    "end": "53239"
  },
  {
    "text": "presentation in three acts I'm going to start off with just a quick introduction to Dynamo DB uh then I'll talk a little",
    "start": "53239",
    "end": "60440"
  },
  {
    "text": "bit about how customers are using Dynamo DB today uh to power their mobile applications and then finally we'll",
    "start": "60440",
    "end": "67040"
  },
  {
    "text": "round out with some next stuff next steps uh some free stuff and some tips on on getting started so let's move into",
    "start": "67040",
    "end": "74040"
  },
  {
    "text": "act one where we're going to talk a little bit about uh Dynamo DB what it is and take a quick look under the covers",
    "start": "74040",
    "end": "80119"
  },
  {
    "text": "of Dynamo DB uh about and about how you can build uh schemes uh applications uh",
    "start": "80119",
    "end": "86479"
  },
  {
    "text": "which can deliver uh information to and from your mobile device at very high throughput and can store that data at a",
    "start": "86479",
    "end": "93560"
  },
  {
    "text": "basically unlimited scale so uh for those of you may be familiar uh Amazon web services",
    "start": "93560",
    "end": "99560"
  },
  {
    "text": "basically provides a collection of foundational building blocks on which you can build these sophisticated",
    "start": "99560",
    "end": "104680"
  },
  {
    "text": "scalable applications we have everything built on top of a a global infrastructure uh on top of that we",
    "start": "104680",
    "end": "110040"
  },
  {
    "text": "layer in uh networking and then we have main areas of services such as comput",
    "start": "110040",
    "end": "115399"
  },
  {
    "text": "storage and databases uh which allow you to dial up the resources that you application needs as and when you need",
    "start": "115399",
    "end": "121360"
  },
  {
    "text": "to and then pay for them with utility style billing so that means you only pay for what you use and you can use as much",
    "start": "121360",
    "end": "127320"
  },
  {
    "text": "or as little as you like in addition to that we have a collection of application Services which let you lash all these",
    "start": "127320",
    "end": "132920"
  },
  {
    "text": "different individual building blocks together and then we have deployment and administration tools on top of that as well so today I'm really going to",
    "start": "132920",
    "end": "138760"
  },
  {
    "text": "concentrate on our database services and we have four main services available today uh a relational database service",
    "start": "138760",
    "end": "145519"
  },
  {
    "text": "Amazon RDS red shift a data warehousing service and elastic cach which is a",
    "start": "145519",
    "end": "150720"
  },
  {
    "text": "caching service built on top of mcash and Reddit but I'm going to talk primarily today about Amazon Dynamo",
    "start": "150720",
    "end": "157560"
  },
  {
    "text": "DB now Dynamo uh was actually a design pattern which was created uh inside",
    "start": "157560",
    "end": "164280"
  },
  {
    "text": "amazon.com many many years ago and you can actually look up the original paper published by the uh Amazon CTO Verna",
    "start": "164280",
    "end": "170800"
  },
  {
    "text": "Vogal up on the Internet there a white paper available about how we started to",
    "start": "170800",
    "end": "176040"
  },
  {
    "text": "see relational traditional relational database Management Systems as something of a Swiss army knife uh we were trying",
    "start": "176040",
    "end": "182480"
  },
  {
    "text": "to do a lot of things with them we were trying to do analytics reporting we were trying to do scale with them we were trying to build all sorts of bells and",
    "start": "182480",
    "end": "189120"
  },
  {
    "text": "whistles on top of the traditional relational database um but this Swiss Army KN Swiss army knife approach",
    "start": "189120",
    "end": "195120"
  },
  {
    "text": "actually wasn't the best fit and we started to take the approach of what if we started to build a database service",
    "start": "195120",
    "end": "200959"
  },
  {
    "text": "and build a database system uh where it was built for a distributed system where",
    "start": "200959",
    "end": "206840"
  },
  {
    "text": "availability and scale were foundational building box they were the founding principles of Dynamo and we wrote that",
    "start": "206840",
    "end": "213319"
  },
  {
    "text": "up as a paper and then many years ago we as we were developing that technology inside Amazon and this was used to power",
    "start": "213319",
    "end": "220000"
  },
  {
    "text": "the Amazon website and the checkout system and all the rest of it we used a lot of that operational experience to",
    "start": "220000",
    "end": "225400"
  },
  {
    "text": "start to build out a new generation of service uh which we launched about 18",
    "start": "225400",
    "end": "230439"
  },
  {
    "text": "months ago called Dynamo DB so this isn't the original Dynamo system which has just been exposed this is something",
    "start": "230439",
    "end": "236400"
  },
  {
    "text": "where we've taken a lot of our operational learning and then built a new system from the ground up to build large internet scale uh web and mobile",
    "start": "236400",
    "end": "245120"
  },
  {
    "text": "applications so at its heart Amazon Dynamo DB is simply a simple key Value",
    "start": "245120",
    "end": "250640"
  },
  {
    "text": "Store uh if you're a developer you can think of it as a large distributed array or hash of keys and values um but when",
    "start": "250640",
    "end": "259079"
  },
  {
    "text": "you start to dig into a little bit what it actually provides is predictable performance uh it's designed for massive",
    "start": "259079",
    "end": "265759"
  },
  {
    "text": "scale uh it can store an unlimited amount of data under its Hood it's fully managed uh which means you don't have to",
    "start": "265759",
    "end": "272240"
  },
  {
    "text": "take on board any of the uh laborious um database Administration tasks which are so common with relational systems or",
    "start": "272240",
    "end": "279199"
  },
  {
    "text": "running uh nosql style systems on uh ec2 it's designed to be delivered at",
    "start": "279199",
    "end": "284560"
  },
  {
    "text": "extremely low cost and since this is a presentation in three parts uh Dynam DB",
    "start": "284560",
    "end": "289919"
  },
  {
    "text": "really has three main areas three main uh collections of benefits one built",
    "start": "289919",
    "end": "295240"
  },
  {
    "text": "around benefits for developers one built around benefits for operation folks and system administrators and one a group",
    "start": "295240",
    "end": "302440"
  },
  {
    "text": "which is built around benefits of the users so by using dynb you get access to developer developer tools uh operation",
    "start": "302440",
    "end": "309600"
  },
  {
    "text": "support and a great service to power your mobile applications with low latency so let's dive into some of these",
    "start": "309600",
    "end": "315639"
  },
  {
    "text": "uh in a bit more detail so Prime first and foremost Amazon Dynamo DB is a great",
    "start": "315639",
    "end": "321720"
  },
  {
    "text": "environment for fast application development um using this key value",
    "start": "321720",
    "end": "326840"
  },
  {
    "text": "store which doesn't require a schema allows you to build your applications much more quickly uh you can start to",
    "start": "326840",
    "end": "333039"
  },
  {
    "text": "work with flexible data models uh Dynamo DB has an amazingly simple API it's one",
    "start": "333039",
    "end": "338759"
  },
  {
    "text": "of my favorite apis that we offer here at Amazon web services because it fits on just one slide uh it's built and",
    "start": "338759",
    "end": "344319"
  },
  {
    "text": "designed to handle very high scale queries and very high scale reads and writes uh and it also has offline or",
    "start": "344319",
    "end": "350600"
  },
  {
    "text": "laptop style development environments so you can uh code and develop without being connected to the",
    "start": "350600",
    "end": "355880"
  },
  {
    "text": "internet so let's take a look at these in a bit more detail um two customers which use Dynamo DB today in production",
    "start": "355880",
    "end": "363280"
  },
  {
    "text": "that talk to the fast development environment are Shazam and uh Earth networks so Shazam built a new Super",
    "start": "363280",
    "end": "370919"
  },
  {
    "text": "Bowl promotion uh at the Super Bowl most recently uh which resulted in millions of interactions over extremely short",
    "start": "370919",
    "end": "377720"
  },
  {
    "text": "period of time so Shazam if you're not familiar with it is a music detection or tagging service where you can hold your",
    "start": "377720",
    "end": "384560"
  },
  {
    "text": "mobile phone up to the TV or up in a restaurant where music is playing Shazam will listen out to the music which is",
    "start": "384560",
    "end": "390160"
  },
  {
    "text": "playing and then tell you the artist and all provide links to purchase it and those sort of things um as part of the",
    "start": "390160",
    "end": "395840"
  },
  {
    "text": "Super Bowl promotion they actually embedded links inside all of the Super Bowl adverts and then encourag customers",
    "start": "395840",
    "end": "401280"
  },
  {
    "text": "to hold their phones up to the Super Bowl adverts uh some would argue the most uh um successful and popular part",
    "start": "401280",
    "end": "408000"
  },
  {
    "text": "of the Super Bowl um hold their phones up and detect various different tagged uh uh media as part of the as part of",
    "start": "408000",
    "end": "414639"
  },
  {
    "text": "the advert so this obviously only runs over the the short advert breaks uh throughout the Super Bowl but they",
    "start": "414639",
    "end": "420639"
  },
  {
    "text": "expected millions and millions of interactions over this short period of time um they built all of this",
    "start": "420639",
    "end": "425800"
  },
  {
    "text": "application in just 3 days from design all the way through to a production ready application uh which launched",
    "start": "425800",
    "end": "431599"
  },
  {
    "text": "alongside the Super Bowl this talks about not only the fast application development environment that Dynam DB",
    "start": "431599",
    "end": "437120"
  },
  {
    "text": "provides but also the scale that you can achieve without any real uh uh upfront commitment in terms of going off and",
    "start": "437120",
    "end": "443160"
  },
  {
    "text": "buying Hardware uh or the operational skills to build that sort of uh environment to power those sort of",
    "start": "443160",
    "end": "449479"
  },
  {
    "text": "engaging mobile second screen environments the second is Earth networks who build the popular",
    "start": "449479",
    "end": "455560"
  },
  {
    "text": "WeatherBug mobile application um they've been using lightning detection and alerting uh for about 40 million users",
    "start": "455560",
    "end": "462560"
  },
  {
    "text": "each and every month and they developed and tested this in just weeks uh using Dynamo DB uh a nice point on the lowcost",
    "start": "462560",
    "end": "470520"
  },
  {
    "text": "environment as well is that they were able to do this at 120th of the cost of a traditional database approach so not",
    "start": "470520",
    "end": "477159"
  },
  {
    "text": "only does Dynamo DB allow you to build applications more quickly but you're not sacrificing anything in terms of cost or",
    "start": "477159",
    "end": "483800"
  },
  {
    "text": "in terms of performance in doing so so two nice examples two nice use",
    "start": "483800",
    "end": "489520"
  },
  {
    "text": "cases there of mobile apps being built on top of Dynamo DB but what makes this fast application development environment",
    "start": "489520",
    "end": "495960"
  },
  {
    "text": "uh so Speedy there's really again three things the first is relationship modeling the second is that simple API",
    "start": "495960",
    "end": "502319"
  },
  {
    "text": "that I talked about and the third is the ability to create very highs scale query patterns against arbitrarily complex",
    "start": "502319",
    "end": "509800"
  },
  {
    "text": "sets so let's dive into these in a little bit more detail so if you're not familiar with Dynamo DB uh a table in",
    "start": "509800",
    "end": "516760"
  },
  {
    "text": "Dynamo DB is really just a collection of items and an item in Dynamo DB is just a",
    "start": "516760",
    "end": "522360"
  },
  {
    "text": "collection of attributes where each attribute has a key and a value so this",
    "start": "522360",
    "end": "527839"
  },
  {
    "text": "really is a table which is just a big bag of keys and values there's no real",
    "start": "527839",
    "end": "533360"
  },
  {
    "text": "structure around this data other than the keys and the values that you place on it so there's no formal schema uh",
    "start": "533360",
    "end": "538720"
  },
  {
    "text": "which means you don't have to migrate that schema and you're not beholden to that schema as your application needs",
    "start": "538720",
    "end": "545680"
  },
  {
    "text": "change there's only a couple of uh decisions that you have to make when you start working with Dynamo DB you",
    "start": "546000",
    "end": "552320"
  },
  {
    "text": "obviously don't have to decide on a schema because you can bend and flex that depending on your application needs",
    "start": "552320",
    "end": "557760"
  },
  {
    "text": "uh one thing that you do have to decide up front is your primary Keys um so by Dynamo DB uh you can use two different",
    "start": "557760",
    "end": "565160"
  },
  {
    "text": "types of primary key the first is a hash key uh this is very much similar or equivalent to a unique ID inside a",
    "start": "565160",
    "end": "572120"
  },
  {
    "text": "relational database but you can also use composite Keys uh this is a collection of a hash key and what we call a range",
    "start": "572120",
    "end": "579160"
  },
  {
    "text": "key and an example of a good hash key might be let's say you're running an e-commerce site so a good hash key might",
    "start": "579160",
    "end": "585760"
  },
  {
    "text": "be a customer ID um where you're recording a collection of orders against that customer a composite Key May a good",
    "start": "585760",
    "end": "592880"
  },
  {
    "text": "example of that might be a customer key linked with a uh date or time which",
    "start": "592880",
    "end": "598360"
  },
  {
    "text": "would allow you to retrieve all of the orders for a particular customer within a range so you can use composite Keys",
    "start": "598360",
    "end": "605160"
  },
  {
    "text": "alongside hash keys to build more complex queries for your application primarily uh items are indexed by",
    "start": "605160",
    "end": "612120"
  },
  {
    "text": "primary key u there are also local secondary indices available on Dynamo DB which I'll talk about in a minute and",
    "start": "612120",
    "end": "618320"
  },
  {
    "text": "data is automatically partitioned by Dynamo DB primarily based on the hash key that you provide so dyn DB although",
    "start": "618320",
    "end": "625560"
  },
  {
    "text": "all you have to do is add and read and write data into the service under the hood Dynamo DB is partitioning that data",
    "start": "625560",
    "end": "632079"
  },
  {
    "text": "out across multiple servers to provide very high availability and to be able to automatically scale to respond to the",
    "start": "632079",
    "end": "638560"
  },
  {
    "text": "amount of throughput that your application needs so choosing those hash keys and those composite Keys is is a",
    "start": "638560",
    "end": "643959"
  },
  {
    "text": "key important um uh step uh no pun",
    "start": "643959",
    "end": "649959"
  },
  {
    "text": "intended uh using this very flexible schemes key value approach uh you can do",
    "start": "649959",
    "end": "655240"
  },
  {
    "text": "things you're probably used to doing with a relational database system such as modeling one to one relationships so",
    "start": "655240",
    "end": "661079"
  },
  {
    "text": "a good example of this might be uh using a table with just a simple hash key uh so where you might have in this example",
    "start": "661079",
    "end": "667360"
  },
  {
    "text": "a users table and a gamees table where you want to Model A on toone relationship between the user and the",
    "start": "667360",
    "end": "673040"
  },
  {
    "text": "games that user has played so you can see we have a users table where the hash key is just a user ID and we have a",
    "start": "673040",
    "end": "679680"
  },
  {
    "text": "selection of attributes alongside those so these again are the keys and the values so the email being Bob gmail.com",
    "start": "679680",
    "end": "686320"
  },
  {
    "text": "and the date that they join the service being the two attributes available for that first item we also have a Fred uh",
    "start": "686320",
    "end": "693560"
  },
  {
    "text": "that has you can see a a dis a disperate set of keys and values so we've added a",
    "start": "693560",
    "end": "699279"
  },
  {
    "text": "gender or sex in there and Fred is male we also have a games table here where we have a game ID as a hash key and we have",
    "start": "699279",
    "end": "705959"
  },
  {
    "text": "the attributes in there as well so you can see we can have join date and the launch date and the hash key all joined",
    "start": "705959",
    "end": "712240"
  },
  {
    "text": "together to form these one toone relationship uh using just the hash key",
    "start": "712240",
    "end": "718240"
  },
  {
    "text": "you can also model more complex relationship such as one to many relationships so here we would use a",
    "start": "718240",
    "end": "723480"
  },
  {
    "text": "table which has a hash and a range key associated with it so an example here where is using the uh a mobile game for",
    "start": "723480",
    "end": "730839"
  },
  {
    "text": "example is that one user can play many games so you'd end up with a user games table where you have a hash key of the",
    "start": "730839",
    "end": "736920"
  },
  {
    "text": "user ID in this case Bob Fred and then Bob again you can see at the bottom there and a range key which is the game",
    "start": "736920",
    "end": "743160"
  },
  {
    "text": "ID so this is the game the name of the game that they that they were playing and we can use these along with our one",
    "start": "743160",
    "end": "748360"
  },
  {
    "text": "to1 relation ships to build out complex queries and again store arbitrary amounts of information against each of",
    "start": "748360",
    "end": "755160"
  },
  {
    "text": "the uh user game table items so we have high scores in there where those high scores were were were were what date",
    "start": "755160",
    "end": "761920"
  },
  {
    "text": "those were made on and when they were last played so this allows you to create",
    "start": "761920",
    "end": "768680"
  },
  {
    "text": "these these these rich query patterns uh and store you know arbitrarily complex data in this key value environment let's",
    "start": "768680",
    "end": "776000"
  },
  {
    "text": "take a quick look at Dynamo DB's simple API uh this is the entirety of the uh Dynamo",
    "start": "776000",
    "end": "782240"
  },
  {
    "text": "DB API uh it's here all in one side you can see it breaks down roughly into four",
    "start": "782240",
    "end": "787399"
  },
  {
    "text": "different areas we have a collection of API calls to manage the tables of Dynamo DB so create table update table delete",
    "start": "787399",
    "end": "794959"
  },
  {
    "text": "table describe table and list tables which do do pretty much what you would expect them we have a list of API calls",
    "start": "794959",
    "end": "801199"
  },
  {
    "text": "to read and write items over on the right hand side so put and get items and also update and delete item uh we also",
    "start": "801199",
    "end": "808000"
  },
  {
    "text": "have bulk convenien uh methods for uh Batch get and batch writing items and we",
    "start": "808000",
    "end": "814079"
  },
  {
    "text": "have query specific items and scan items as well so query is the main Port of",
    "start": "814079",
    "end": "819800"
  },
  {
    "text": "Call you're going to use to query the data in your database scan allows you to do a full table scan and that's the only",
    "start": "819800",
    "end": "826279"
  },
  {
    "text": "API call which isn't guaranteed to deliver a consistent predictable level of performance because it has to go",
    "start": "826279",
    "end": "832600"
  },
  {
    "text": "through every item in the table so let's let's take a quick look",
    "start": "832600",
    "end": "839839"
  },
  {
    "text": "at the query uh specific items API call so query the query API",
    "start": "839839",
    "end": "847079"
  },
  {
    "text": "call allows you to basically take a look at your data and slice and dice it based on the hash and the range range primary",
    "start": "847079",
    "end": "854160"
  },
  {
    "text": "keys on your tables you can retrieve all the items by a hash key uh so you could get all of the high scores that Bob has",
    "start": "854160",
    "end": "860920"
  },
  {
    "text": "scored for example but you can also apply key range Key conditions so you can do equality greater than less than",
    "start": "860920",
    "end": "867519"
  },
  {
    "text": "greater than or equals to and so on and so on you can also do begins with and between for more advanced queries dyn DB",
    "start": "867519",
    "end": "874199"
  },
  {
    "text": "can sort your results uh you can work with counts and you can retrieve the top and the bottom end values and you should",
    "start": "874199",
    "end": "880040"
  },
  {
    "text": "expect paged responses for very large queries where each page is limited to uh 1 megab in size for each API call and",
    "start": "880040",
    "end": "887079"
  },
  {
    "text": "you can then call the next page with a token that Dynamo DB will give you so you'll know when you're being paged so",
    "start": "887079",
    "end": "893720"
  },
  {
    "text": "these query patterns allowed to build very complex very uh very uh supportive queries for your for your mobile",
    "start": "893720",
    "end": "901440"
  },
  {
    "text": "applications donb also supports uh local secondary indices so in this case uh the",
    "start": "901440",
    "end": "908680"
  },
  {
    "text": "these are designed for high-scale multi-tenant applications where you have multiple users stored within data from",
    "start": "908680",
    "end": "915360"
  },
  {
    "text": "multiple users stored within a single table so you can index local to the hash",
    "start": "915360",
    "end": "920800"
  },
  {
    "text": "key which basically means that the local here replies to a petition within Dynamo DB and you can add five of these indices",
    "start": "920800",
    "end": "927920"
  },
  {
    "text": "without any put performance degradation on each and every table so looking at our example here at the bottom you can",
    "start": "927920",
    "end": "933319"
  },
  {
    "text": "see we've got our user games table again where we have our hash key as's a user ID we have our range key as a game ID",
    "start": "933319",
    "end": "939279"
  },
  {
    "text": "and a collection of key value attributes we can then take if we wanted to query",
    "start": "939279",
    "end": "945079"
  },
  {
    "text": "um just based on the time that the uh game was last played we can create a local secondary index based on that",
    "start": "945079",
    "end": "951279"
  },
  {
    "text": "where we have now a hash key which is the user ID and the range key now becomes the date of when that game was",
    "start": "951279",
    "end": "956800"
  },
  {
    "text": "last played uh this allows us to do faster lookups and index against that that uh those keys and those values",
    "start": "956800",
    "end": "963920"
  },
  {
    "text": "based in that in that attribute in the user games table you can see that we also have a column called projected",
    "start": "963920",
    "end": "970040"
  },
  {
    "text": "attributes this allows you to elevate attributes from a user games table into the index uh for faster",
    "start": "970040",
    "end": "978560"
  },
  {
    "text": "lookups so moving on we have uh another new announcement",
    "start": "980880",
    "end": "987519"
  },
  {
    "text": "uh coming up um which we announced recently uh which is the availability of uh Dynamo DB uh local Dynamo DB local is",
    "start": "987519",
    "end": "996120"
  },
  {
    "text": "a disconnected development environment uh for you to develop against so it has full API support uh uh against the API",
    "start": "996120",
    "end": "1003959"
  },
  {
    "text": "that I just showed you on Dynam DB but it's available as a binary which you can download and just run locally on your",
    "start": "1003959",
    "end": "1010000"
  },
  {
    "text": "local laptop so this means that you can develop your applications uh against the Dynamo API either without a network",
    "start": "1010000",
    "end": "1016079"
  },
  {
    "text": "connection or have it behave as if it would when you deploy your application against ec2 this is a very useful tool",
    "start": "1016079",
    "end": "1023279"
  },
  {
    "text": "for building and for testing your applications because this can to be used for for mocking out a live Dynamo DB",
    "start": "1023279",
    "end": "1028720"
  },
  {
    "text": "table running up on AWS with a local test Tool uh there's more information is available about that on our website and",
    "start": "1028720",
    "end": "1035199"
  },
  {
    "text": "you can download it today at aws.amazon.com",
    "start": "1035199",
    "end": "1039480"
  },
  {
    "text": "dynamodb so let's take a look at the operational benefits of running on dynb",
    "start": "1040360",
    "end": "1046839"
  },
  {
    "text": "uh I guess the biggest thing to say here is that Dynamo DB is designed to be essentially admin free at any scale so",
    "start": "1046839",
    "end": "1054240"
  },
  {
    "text": "that means that you can build very very high scale applications such as Shazam and the WeatherBug team did without",
    "start": "1054240",
    "end": "1060360"
  },
  {
    "text": "having the uh operational skills of managing very very large database systems that can handle hundreds of",
    "start": "1060360",
    "end": "1066760"
  },
  {
    "text": "thousands of iops each and every second so again some good examples of where",
    "start": "1066760",
    "end": "1071919"
  },
  {
    "text": "this has been used uh by customers um we have a good good quote here from SmugMug",
    "start": "1071919",
    "end": "1078159"
  },
  {
    "text": "which is is a photos sharing site and they say that even though they have years of experience with large complex",
    "start": "1078159",
    "end": "1084039"
  },
  {
    "text": "nosql style architectures uh they were happy to be out of finally out of the business of managing it all themselves",
    "start": "1084039",
    "end": "1090360"
  },
  {
    "text": "and this really talks to the point that when you start to remove some of this undifferentiated heavy lifting",
    "start": "1090360",
    "end": "1095960"
  },
  {
    "text": "associated with managing databases at scale you get to reinvest that time and that money and that expertise back into",
    "start": "1095960",
    "end": "1102919"
  },
  {
    "text": "your application rather than uh wasting it on the mck of just provisioning servers and partitioning data which dyb",
    "start": "1102919",
    "end": "1110000"
  },
  {
    "text": "will do for you automatically another good example from sumo logic an analytics company uh they say that our",
    "start": "1110000",
    "end": "1115799"
  },
  {
    "text": "previous nosql database required almost a full-time administrator to run but now AWS takes care of all of it and so even",
    "start": "1115799",
    "end": "1122280"
  },
  {
    "text": "if you are running on uh other no esql databases um it's uh much more efficient",
    "start": "1122280",
    "end": "1127480"
  },
  {
    "text": "to run with this in this admin free environment uh up on AWS so again two more good use cases",
    "start": "1127480",
    "end": "1134280"
  },
  {
    "text": "there uh that we've seen be very useful when we talk about admin free these are some of the things that we're talking",
    "start": "1134280",
    "end": "1139720"
  },
  {
    "text": "about we're talking about removing the need to have to go off and provision and and more importantly configure servers",
    "start": "1139720",
    "end": "1145919"
  },
  {
    "text": "and storage which can be very challenging when you start getting uh up to scale and can be very timec consuming",
    "start": "1145919",
    "end": "1151280"
  },
  {
    "text": "even at low scale when you're running uh development and test servers you have to monitor and handle Hardware failures",
    "start": "1151280",
    "end": "1156679"
  },
  {
    "text": "Dynamo DB does all of that on your behalf automatically and actually will replicate data across multiple what we",
    "start": "1156679",
    "end": "1162679"
  },
  {
    "text": "call availability zones uh so these are one or more data centers which are have",
    "start": "1162679",
    "end": "1167840"
  },
  {
    "text": "redundant connectivity and are redundantly powered and on separate fault lines and flood planes and all the",
    "start": "1167840",
    "end": "1172960"
  },
  {
    "text": "rest of it so not when you're using Dynamo DB you're actually getting asynchronous replication across multiple",
    "start": "1172960",
    "end": "1178799"
  },
  {
    "text": "data centers uh across multiple availability zones and we won't acknowledge that a right to Dynamo DB is",
    "start": "1178799",
    "end": "1184320"
  },
  {
    "text": "taken place until that data is stored across multiple beta centers then you have to go through the updates of",
    "start": "1184320",
    "end": "1190000"
  },
  {
    "text": "hardware and software you have to manage cross availability own replication which Dynamo DB does for you and then you have",
    "start": "1190000",
    "end": "1195720"
  },
  {
    "text": "to repartition data and balance clusters as as your requirements and scale needs change that can be challenged to do",
    "start": "1195720",
    "end": "1201960"
  },
  {
    "text": "going up it's also very challenging to do when you need to scale down uh and being able to do that at short notice to",
    "start": "1201960",
    "end": "1208960"
  },
  {
    "text": "scale down during short periods or quiet periods of your application time either in the evening or when you're not you",
    "start": "1208960",
    "end": "1215520"
  },
  {
    "text": "know working on Super Bowl ads then there's some nice cost savings available there as",
    "start": "1215520",
    "end": "1220559"
  },
  {
    "text": "well so Dynamo DB introduces the concept of provision throughput so irrespective",
    "start": "1220559",
    "end": "1227360"
  },
  {
    "text": "of the amount of data stored under the hood and how Dynamo DB is managing that Dynamo DB provides consistent",
    "start": "1227360",
    "end": "1233679"
  },
  {
    "text": "predictable connectivity so single digigit millisecond latencies when running against uh uh ec2 it does this",
    "start": "1233679",
    "end": "1240679"
  },
  {
    "text": "through this provision throughput request based capacity provisioning model so throughput is declared and",
    "start": "1240679",
    "end": "1246880"
  },
  {
    "text": "updated via the API and so when you create your table or when you update your table you tell Damo DB how many",
    "start": "1246880",
    "end": "1253080"
  },
  {
    "text": "reads per second and how many writes per second your application is going to need and Dynamo DB will go off and provision",
    "start": "1253080",
    "end": "1258760"
  },
  {
    "text": "the amount of throughput for the amount of data uh that your that your application needs on the back end so",
    "start": "1258760",
    "end": "1264200"
  },
  {
    "text": "it'll manage the databases for you dyb basically handles all of the uh all of the uh information and all the",
    "start": "1264200",
    "end": "1270559"
  },
  {
    "text": "operational performance under the hood so it will reserve the capacity uh and make it available when it's needed it'll",
    "start": "1270559",
    "end": "1276960"
  },
  {
    "text": "provide you with scaling up triggers uh when repartitioning and reallocating and it'll do all of this scaling up and",
    "start": "1276960",
    "end": "1282440"
  },
  {
    "text": "scaling down and repartitioning without impacting the performance or availability of your application so as",
    "start": "1282440",
    "end": "1288559"
  },
  {
    "text": "you change the API throughput rate on your on your database table dyb will execute on that and reprovision the",
    "start": "1288559",
    "end": "1295440"
  },
  {
    "text": "hardware and repartition the data automatically but you won't see any uh downtime or any impact to the throughput",
    "start": "1295440",
    "end": "1301440"
  },
  {
    "text": "of your application so DB makes all of that available with just a single API call uh which would once have been",
    "start": "1301440",
    "end": "1308440"
  },
  {
    "text": "extremely complex and extremely timec consuming to set up and may have involve downtime for your application which with",
    "start": "1308440",
    "end": "1314400"
  },
  {
    "text": "a mobile application is not what you're not what you are are are aiming for obviously so the third area is where",
    "start": "1314400",
    "end": "1321360"
  },
  {
    "text": "Dynamo DB is useful to users and that really is in creating this durable low",
    "start": "1321360",
    "end": "1326559"
  },
  {
    "text": "latency environment uh that that your application requires so as we talked",
    "start": "1326559",
    "end": "1331600"
  },
  {
    "text": "about already Dynamo DB will replicate the data under the hood across these availability zones so once you write",
    "start": "1331600",
    "end": "1337679"
  },
  {
    "text": "your data in uh it will continuously replicate against multiple availability zones and you'll only get an",
    "start": "1337679",
    "end": "1344159"
  },
  {
    "text": "acknowledgement of a right when it's written across multiple data data centers as soon as it's persisted to disk and we use custom ssds under the",
    "start": "1344159",
    "end": "1351360"
  },
  {
    "text": "hood to provide this low latency single digigit millisecond uh performance uh that'll get persisted across multiple",
    "start": "1351360",
    "end": "1357720"
  },
  {
    "text": "ssds in multiple data centers across multiple availability dates all automatically all you have to do is make",
    "start": "1357720",
    "end": "1363400"
  },
  {
    "text": "one API call reads are very easy as well uh we support both strongly and",
    "start": "1363400",
    "end": "1368520"
  },
  {
    "text": "eventually consistent uh reads from databases and you can make a decision of what uh databases what database reads",
    "start": "1368520",
    "end": "1374760"
  },
  {
    "text": "you make at what time and there's no latency tradeoff uh for making either strong or eventually consistent reads",
    "start": "1374760",
    "end": "1381120"
  },
  {
    "text": "from your database so an example of this can be",
    "start": "1381120",
    "end": "1387400"
  },
  {
    "text": "seen with this latency graph here where we have service side latency across all of the apis so you can see here that the",
    "start": "1387400",
    "end": "1393559"
  },
  {
    "text": "if we zoom in on this area you can see that the average uh for this particular application running on Dynamo DB the",
    "start": "1393559",
    "end": "1399520"
  },
  {
    "text": "average response from the apis was less than 3 millisecs and the tp90 was less than 4.5 milliseconds this is a very",
    "start": "1399520",
    "end": "1406400"
  },
  {
    "text": "very consistent very predict ible environment for the application to read and write data from uh and that makes it",
    "start": "1406400",
    "end": "1412159"
  },
  {
    "text": "a very good experience for your customers when they're working on uh on mobile applications where latency is",
    "start": "1412159",
    "end": "1417240"
  },
  {
    "text": "very important so speaking of mobile applications let's move on to act two",
    "start": "1417240",
    "end": "1422320"
  },
  {
    "text": "where we're going to talk a little bit about just two use cases of where Dynamo DB can be used alongside and to support",
    "start": "1422320",
    "end": "1429279"
  },
  {
    "text": "a a mobile application so one of those is with in building location aware applications uh",
    "start": "1429279",
    "end": "1436799"
  },
  {
    "text": "so Dynamo DB because of its scale and because of its uh uh key value scheal structure is particularly well suited",
    "start": "1436799",
    "end": "1443640"
  },
  {
    "text": "for building geospatial queries and so uh a couple of months ago we actually",
    "start": "1443640",
    "end": "1448919"
  },
  {
    "text": "announced a new library a new code Library which provides a small domain specific language for building location",
    "start": "1448919",
    "end": "1455320"
  },
  {
    "text": "aware apps on top of Dynam DB and this allows very very easy geospatial queries",
    "start": "1455320",
    "end": "1460960"
  },
  {
    "text": "uh using Dynamo DB as a back end uh so we call this the geol library for Dynamo DB it's available as a Java",
    "start": "1460960",
    "end": "1467880"
  },
  {
    "text": "jar file so you can just drop it straight into your existing development environment it allows you to create geospatial data items against a Dynamo",
    "start": "1467880",
    "end": "1474840"
  },
  {
    "text": "DV table either up on AWS or running uh as a test and development environment or using dun DB local by providing latitude",
    "start": "1474840",
    "end": "1482640"
  },
  {
    "text": "and longitude and also attribute pairs U maintained by the application so that's where you put the metadata Associated to",
    "start": "1482640",
    "end": "1489360"
  },
  {
    "text": "your check-ins or your reviews or whatever it happens to be that are tagged to a particular location on the",
    "start": "1489360",
    "end": "1494760"
  },
  {
    "text": "earth so the library takes care of creating and maintaining the hash Keys all the range keys and the indexes that",
    "start": "1494760",
    "end": "1500640"
  },
  {
    "text": "allow for fast and efficient execution of location based queries so all of that creation of the uh of the tables all of",
    "start": "1500640",
    "end": "1507799"
  },
  {
    "text": "that creation of the keys and the values and the uh the range keys and the building the queries for those range",
    "start": "1507799",
    "end": "1514120"
  },
  {
    "text": "gyss are handled by this geolocation library on top of Dynamo DB so this",
    "start": "1514120",
    "end": "1519520"
  },
  {
    "text": "really gives you the best of both worlds it gives you the predictable consistent performance of Dynamo DB it gives you",
    "start": "1519520",
    "end": "1524679"
  },
  {
    "text": "the ability to be able to scale and unlim scale to store limited amount of data under the hood but also gives you a",
    "start": "1524679",
    "end": "1530720"
  },
  {
    "text": "very very easy to use API which is remain specific against uh Geographic uh",
    "start": "1530720",
    "end": "1536880"
  },
  {
    "text": "information so there's a little bit of code here that you hopefully you can take a look at this is all you need to do uh in Java in order to be able to",
    "start": "1536880",
    "end": "1543399"
  },
  {
    "text": "create a new Geo table you can see all we do on the first line there is create a new database client uh we tell it",
    "start": "1543399",
    "end": "1548919"
  },
  {
    "text": "which region of the Amazon web services Cloud to run in uh then we go off create the configuration and uh go off and",
    "start": "1548919",
    "end": "1555679"
  },
  {
    "text": "create the new table you can see here we're not having to specify any primary keys or hash keys or range keys or",
    "start": "1555679",
    "end": "1561360"
  },
  {
    "text": "anything like that uh the data manager is going to do all of that for us uh through this Library it's very very easy",
    "start": "1561360",
    "end": "1567039"
  },
  {
    "text": "to get up and running once you've got that table uh it's specifically built to store and uh uh uh retrieve uh ge what",
    "start": "1567039",
    "end": "1575200"
  },
  {
    "text": "we call Geo points so these are points which are tagged against a geographic location so this allows you to create",
    "start": "1575200",
    "end": "1581000"
  },
  {
    "text": "those points of interest for reviews or where the photos were taken or where the check-ins St Place uh you can store a",
    "start": "1581000",
    "end": "1587039"
  },
  {
    "text": "lat longitude which your mobile device will conveniently give you uh through the local device API you can just write",
    "start": "1587039",
    "end": "1593440"
  },
  {
    "text": "those points back to Dynamo DB using the put Point method inside the Library so it really is as simple as getting the uh",
    "start": "1593440",
    "end": "1600120"
  },
  {
    "text": "the the latitude and longitude from the from the mobile device the GPS on the mobile device setting the attributes the",
    "start": "1600120",
    "end": "1605720"
  },
  {
    "text": "keys and the values and then pushing those back through the library back to Dynamo DB and all of that happens of course with this consistent predictable",
    "start": "1605720",
    "end": "1612520"
  },
  {
    "text": "performance once you've got your data in there you can start to query against that uh so you might want to do a query",
    "start": "1612520",
    "end": "1618559"
  },
  {
    "text": "rectangle this is very useful if you're viewing a square or rectangle shaped graph sorry map on your mobile device or",
    "start": "1618559",
    "end": "1625200"
  },
  {
    "text": "your tablet uh this allows you to locate all the points that fall within a pair of two other Geographic points so as",
    "start": "1625200",
    "end": "1631919"
  },
  {
    "text": "your users are are flicking and tweezing apart their maps on their on their touch devices you basically take the two",
    "start": "1631919",
    "end": "1638600"
  },
  {
    "text": "latitude and longitude coordinates of that and then Define the rectangles and project them back onto your map this is",
    "start": "1638600",
    "end": "1644279"
  },
  {
    "text": "how you you would query that data which is stored uh Geographic latitude and longitude back in Dynamo DB again very",
    "start": "1644279",
    "end": "1651720"
  },
  {
    "text": "very easy just get the coordinates from your device and then ask Dynamo DB for the results to come back and they'll be",
    "start": "1651720",
    "end": "1657399"
  },
  {
    "text": "paged if there's a lot of information to come back and a lot of points of interest uh which are which the user is",
    "start": "1657399",
    "end": "1663360"
  },
  {
    "text": "requesting similarly you can also use a query radius method which gives you all of the points of interest which are",
    "start": "1663360",
    "end": "1669080"
  },
  {
    "text": "local and close to a given Radiance radius of where the uh user currently is",
    "start": "1669080",
    "end": "1674399"
  },
  {
    "text": "so let's say instead of just looking at a point on the map you want to tell them all the the the uh points of interest which are close by then the query radius",
    "start": "1674399",
    "end": "1680679"
  },
  {
    "text": "will do that for you again and again all you have to do is create the center point uh which could be the current location of the user and then send off",
    "start": "1680679",
    "end": "1687760"
  },
  {
    "text": "that request and you'll get all the results back from uh from Dynamo",
    "start": "1687760",
    "end": "1693399"
  },
  {
    "text": "DB so what's happening behind the scenes on this well it's relatively straightforward although all you're",
    "start": "1693399",
    "end": "1698640"
  },
  {
    "text": "doing is calling a couple of API calls Dynamo DB and the library are doing all the heavy lifting for you so the first",
    "start": "1698640",
    "end": "1704399"
  },
  {
    "text": "thing is that Dynamo DB on the back end is creating a virtual grid that overlays basically the entire planet and each",
    "start": "1704399",
    "end": "1710640"
  },
  {
    "text": "grid cell has an address that is derived from its location of the cell so when those Geo points are inserted into",
    "start": "1710640",
    "end": "1716840"
  },
  {
    "text": "Dynamo DB geohash is computed and used to map the data record to the correct",
    "start": "1716840",
    "end": "1722039"
  },
  {
    "text": "grid cell so then all you have to do is store that items geohash as an image",
    "start": "1722039",
    "end": "1727159"
  },
  {
    "text": "attribute and you can use local secondary indices to recall that attribute based on the rectangle or the",
    "start": "1727159",
    "end": "1733600"
  },
  {
    "text": "radius that you want to you want to get recall the points of interest so the library then postprocesses the results",
    "start": "1733600",
    "end": "1739760"
  },
  {
    "text": "of those items and returns only those that are within the specified bounding box or radius so all that is happening",
    "start": "1739760",
    "end": "1746000"
  },
  {
    "text": "under the hood all you have to do is make a couple of API calls and just to show how simple it is uh we have some",
    "start": "1746000",
    "end": "1751279"
  },
  {
    "text": "iOS sample code available uh you can see it here uh available it's called the find yourself example application and",
    "start": "1751279",
    "end": "1757840"
  },
  {
    "text": "all the documentation library and Sample source code available via GitHub you can get it at github.com AWS laabs dynamodb",
    "start": "1757840",
    "end": "1766720"
  },
  {
    "text": "DG so all of that is available to show you how to implement this uh using a library using a backend running on Dynamo",
    "start": "1766720",
    "end": "1774360"
  },
  {
    "text": "DB so location aware um applications are obviously extremely common another very",
    "start": "1774360",
    "end": "1780279"
  },
  {
    "text": "common use case that we see from customers is using push notifications uh with their mobile device uh so these uh",
    "start": "1780279",
    "end": "1787640"
  },
  {
    "text": "are typically highs scale and they can either be personalized notifications for your applications uh which you target to",
    "start": "1787640",
    "end": "1793880"
  },
  {
    "text": "specific individual users or you might want to send l large scale notifications to large groups of users on their mobile",
    "start": "1793880",
    "end": "1800960"
  },
  {
    "text": "devices so let's quickly back up and take a look at uh at notifications in",
    "start": "1800960",
    "end": "1806120"
  },
  {
    "text": "general and how they're currently implemented so today mobile push notifications are used to basically",
    "start": "1806120",
    "end": "1811960"
  },
  {
    "text": "engage customers when your app is not currently active I'm sure anybody running a modern mobile application has",
    "start": "1811960",
    "end": "1817399"
  },
  {
    "text": "seen these pop up on their device or on their on their lock screen users typically have to opt in to receive them",
    "start": "1817399",
    "end": "1823480"
  },
  {
    "text": "mandated by the device operating system uh they're delivered to a spefic specific app on a specific devices and",
    "start": "1823480",
    "end": "1829720"
  },
  {
    "text": "they're typically short messages uh customers can choose to read ignore or acknowledge the notification which",
    "start": "1829720",
    "end": "1835720"
  },
  {
    "text": "typically launches the app so you can see some examples here where the Seahawks of one and we've got a gate",
    "start": "1835720",
    "end": "1840799"
  },
  {
    "text": "change notification for our flight upcoming flight so I'm sure most of you are familiar with those uh here's how",
    "start": "1840799",
    "end": "1846960"
  },
  {
    "text": "they're typically implemented uh on the back end what typically happens is that",
    "start": "1846960",
    "end": "1853159"
  },
  {
    "text": "um typically happens is that you have your application a running up or on the cloud and you want to be able to push",
    "start": "1853159",
    "end": "1860039"
  },
  {
    "text": "this up onto a specific mobile device or group of mobile",
    "start": "1860039",
    "end": "1865480"
  },
  {
    "text": "devices okay",
    "start": "1869200",
    "end": "1874279"
  },
  {
    "text": "um thank you so you typically want to be able to push that up onto your mobile application uh in order to be able to do",
    "start": "1875639",
    "end": "1881679"
  },
  {
    "text": "this you typically use some sort of platform service either provided by the uh the operating system or provided by",
    "start": "1881679",
    "end": "1887840"
  },
  {
    "text": "some other third party in order to do that you have to do all sorts of again undifferentiated",
    "start": "1887840",
    "end": "1895200"
  },
  {
    "text": "heavy lifting associated with managing the the permissions to talk to those",
    "start": "1895200",
    "end": "1900480"
  },
  {
    "text": "devices so the platform service typically manages token feedback from the application and the devices",
    "start": "1900480",
    "end": "1906039"
  },
  {
    "text": "themselves will send token registration information uh to be able to um to manage where the permissions of the",
    "start": "1906039",
    "end": "1912600"
  },
  {
    "text": "notifications uh so T developers that want to take advantage of push notifications have to be able to manage",
    "start": "1912600",
    "end": "1917880"
  },
  {
    "text": "all of this for each device and must proactively swap or disable them based on feedback from the customers so all of",
    "start": "1917880",
    "end": "1924360"
  },
  {
    "text": "this when you're just trying to build an engaging environment for your application and for your customers is again what we call undifferentiated",
    "start": "1924360",
    "end": "1931000"
  },
  {
    "text": "heavy lifting this is time that would be better spent focusing on what information to push to those customers",
    "start": "1931000",
    "end": "1936519"
  },
  {
    "text": "what features you want to enable within your application that rely on this me method of of notification rather than on",
    "start": "1936519",
    "end": "1943320"
  },
  {
    "text": "the the complex implementation of that Implement of that of that feature of those notifications uh but it gets even",
    "start": "1943320",
    "end": "1950720"
  },
  {
    "text": "worse than that because each platform specific Push Service Works slightly differently they have different apis",
    "start": "1950720",
    "end": "1956120"
  },
  {
    "text": "they have different features and they have different feedback mechanisms for managing those tokens so what you actually end up with is something more",
    "start": "1956120",
    "end": "1962799"
  },
  {
    "text": "similar to this diagram where you have a single application that has to have multiple implementations of similar a",
    "start": "1962799",
    "end": "1969279"
  },
  {
    "text": "but different apis that talk to similar but different notifications on similar but different applications running",
    "start": "1969279",
    "end": "1975080"
  },
  {
    "text": "across many many devices so push notifications get very very complex as you scale to support millions of devices",
    "start": "1975080",
    "end": "1981880"
  },
  {
    "text": "and you need to be able to support those across multiple different platforms um the approach we use at",
    "start": "1981880",
    "end": "1988000"
  },
  {
    "text": "Amazon web services through a service we have called the simple notification service or SNS is to use a push",
    "start": "1988000",
    "end": "1994159"
  },
  {
    "text": "intermediary service in order to be able to talk to and mask all of this complexity this basically allows you to",
    "start": "1994159",
    "end": "2001279"
  },
  {
    "text": "abstract all the complexity of managing uh all of the different um apis of",
    "start": "2001279",
    "end": "2007000"
  },
  {
    "text": "managing all the different devices and just let you focus back in on what your application should be doing which is",
    "start": "2007000",
    "end": "2012880"
  },
  {
    "text": "adding value to your own customers so developers use these intermediaries to abstract platform specific apis and",
    "start": "2012880",
    "end": "2019159"
  },
  {
    "text": "manage tokens for millions and millions of apps so you get to maintain that engagement with users on basically any",
    "start": "2019159",
    "end": "2026240"
  },
  {
    "text": "platform and manage tokens to insure messages are delivered reliably you remove the operational complexity and",
    "start": "2026240",
    "end": "2033360"
  },
  {
    "text": "the scalability uh required to implement all of this and you can do do all of this obviously at much much lower cost",
    "start": "2033360",
    "end": "2039600"
  },
  {
    "text": "uh even though the platform Services themselves are free so uh probably about two months ago",
    "start": "2039600",
    "end": "2046039"
  },
  {
    "text": "now we announced an update to the simple notification Service uh which enabled it to be used as a mobile Push Service uh",
    "start": "2046039",
    "end": "2053800"
  },
  {
    "text": "so Amazon SNS now supports mobile push uh and in a similar way to Dynamo DB which abstracts a lot of the complexity",
    "start": "2053800",
    "end": "2060560"
  },
  {
    "text": "of dealing with the data stored across many servers uh so SNS abstracts all the complexity of dealing with multiple",
    "start": "2060560",
    "end": "2067398"
  },
  {
    "text": "notifications across multiple platforms and millions of devices so you can use this as a cross-platform push",
    "start": "2067399",
    "end": "2073118"
  },
  {
    "text": "intermediary service to support iOS devices Android devices and of course Amazon Kindle Fire",
    "start": "2073119",
    "end": "2080440"
  },
  {
    "text": "devices and what we've seen customers do and a popular pattern is that they'll use NS SNS for the distribution",
    "start": "2080440",
    "end": "2087240"
  },
  {
    "text": "mechanism of the uh of the notifications um but they will use Dynamo DB uh to",
    "start": "2087240",
    "end": "2093599"
  },
  {
    "text": "store the the IDS and to store the uh metadata associated with either the customer or the devices to which they're",
    "start": "2093599",
    "end": "2100640"
  },
  {
    "text": "going to push their moob mobile notifications and this allows you to build very very complex uh um patterns",
    "start": "2100640",
    "end": "2108079"
  },
  {
    "text": "of delivery of push notifications for example you can send distinct payloads uh to each platform uh",
    "start": "2108079",
    "end": "2115320"
  },
  {
    "text": "so you could send a distinct payload to all of your customers running on iOS uh you could send a different notification to everything running on Android uh in",
    "start": "2115320",
    "end": "2122400"
  },
  {
    "text": "accordance to the various different uh um platform uh uh um",
    "start": "2122400",
    "end": "2127640"
  },
  {
    "text": "uh Norms uh but you can also do publish once and deliver everywhere so you can",
    "start": "2127640",
    "end": "2132720"
  },
  {
    "text": "do a single publish and deliver to all of your devices across all of the different platforms and you can manage",
    "start": "2132720",
    "end": "2138079"
  },
  {
    "text": "that through SNS and store all the information on the back end using Dynamo DB which is again perfectly set up to",
    "start": "2138079",
    "end": "2143760"
  },
  {
    "text": "handle millions of queries and handle millions of devices and handle the scale underneath that uh you can publish",
    "start": "2143760",
    "end": "2149839"
  },
  {
    "text": "unique messages to either individual devices uh or you can broadcast identical messages such as adverts or",
    "start": "2149839",
    "end": "2156000"
  },
  {
    "text": "new features or a new version of your application to many devices at once uh so we call this direct publishing where",
    "start": "2156000",
    "end": "2161839"
  },
  {
    "text": "you publish a notification to a single server or you can broadcast using SNS topics a single a single message to",
    "start": "2161839",
    "end": "2168760"
  },
  {
    "text": "multiple devices um the good news is that SNS uh",
    "start": "2168760",
    "end": "2176160"
  },
  {
    "text": "consumes all the feedback from each of the platform and manages swapping and disabling the tokens on your behalf so",
    "start": "2176160",
    "end": "2181480"
  },
  {
    "text": "again all of that heavy lifting uh is managed for you using the service uh in delivering the notification and all the",
    "start": "2181480",
    "end": "2187400"
  },
  {
    "text": "heav lifting in managing the data about the mobile devices is managed by Dynam DB so you can write to one stable",
    "start": "2187400",
    "end": "2193960"
  },
  {
    "text": "endpoint per device uh and you can also access the feedback uh but you don't have to uh if you don't want",
    "start": "2193960",
    "end": "2200680"
  },
  {
    "text": "to so uh the good news is that SNF SNS offers easy scalability uh so you can",
    "start": "2200680",
    "end": "2206839"
  },
  {
    "text": "just start by sending a couple more messages when you get up and running uh but you can go from a few messages as",
    "start": "2206839",
    "end": "2212760"
  },
  {
    "text": "your application launches to hundreds of millions without managing the scale of distribution and you can go from a few",
    "start": "2212760",
    "end": "2218599"
  },
  {
    "text": "devices when you launch to hopefully hundreds of millions of those devices again without handling the complexity and scale SNF is going to abstract all",
    "start": "2218599",
    "end": "2225920"
  },
  {
    "text": "of that away from you and Dynamo DB is going to abstract the headaches of managing the infrastructure on the database side so you can do all of this",
    "start": "2225920",
    "end": "2232760"
  },
  {
    "text": "without provisioning configuring or managing a single server uh with either data storage or uh notification",
    "start": "2232760",
    "end": "2241319"
  },
  {
    "text": "delivery so those are two of the common use cases that we see uh mobile applications us Dynam DB uh building",
    "start": "2241319",
    "end": "2248400"
  },
  {
    "text": "these very very scalable very very viral applications which increase user engagement using notifications and that",
    "start": "2248400",
    "end": "2255119"
  },
  {
    "text": "build out you know novel inventive new features using geolocation so in the third short final",
    "start": "2255119",
    "end": "2261319"
  },
  {
    "text": "Act uh we'll talk about uh some next steps and how you can use some of these Services uh for free so to get up and",
    "start": "2261319",
    "end": "2268119"
  },
  {
    "text": "running uh all you really have to do is download uh some of our sdks uh so we",
    "start": "2268119",
    "end": "2273440"
  },
  {
    "text": "have sdks available for a very wide variety of uh of programming languages",
    "start": "2273440",
    "end": "2278960"
  },
  {
    "text": "uh from java uh iOS Android we have uh sdks for nodejs for building nice",
    "start": "2278960",
    "end": "2285520"
  },
  {
    "text": "scalable back ends net PHP Python and of course Ruby and rails uh and we've also",
    "start": "2285520",
    "end": "2290960"
  },
  {
    "text": "integrated a number of these into existing Ides so whether you're using eclipse or virtual Studio or you're more",
    "start": "2290960",
    "end": "2296680"
  },
  {
    "text": "comfortable on the command line uh either on Linux or power shell on Windows uh you can get these command",
    "start": "2296680",
    "end": "2301720"
  },
  {
    "text": "line tools and uh sdks available which you can just plug in and start using these things straight away",
    "start": "2301720",
    "end": "2307359"
  },
  {
    "text": "so for example the python and Ruby sdks will handle all of the um registration",
    "start": "2307359",
    "end": "2313240"
  },
  {
    "text": "and security for dynamodb by managing the tokens that it uses for authentication uh for you so some nice",
    "start": "2313240",
    "end": "2320920"
  },
  {
    "text": "advantages to working with these sdks um to get up and running we also have a free tier uh you can learn more",
    "start": "2320920",
    "end": "2326400"
  },
  {
    "text": "about this at aws.amazon.com sfree and this includes a free tier for Dynamo DB uh where you can uh receive",
    "start": "2326400",
    "end": "2334079"
  },
  {
    "text": "free Dynamo DB tables uh up to 100 megabytes of storage and you can provision 10 units of read capacity and",
    "start": "2334079",
    "end": "2340880"
  },
  {
    "text": "five units of right capacity uh uh for free for new customers for a year so if",
    "start": "2340880",
    "end": "2345920"
  },
  {
    "text": "you want to learn more about this uh go to aws.amazon.com free uh and learn more about dynamodb",
    "start": "2345920",
    "end": "2351880"
  },
  {
    "text": "likewise uh the SNS mobile push uh will provide 1 million free per month so",
    "start": "2351880",
    "end": "2357079"
  },
  {
    "text": "that's a million publishes and 1 million mobile push notifications for free and after that it's just $1 per million uh",
    "start": "2357079",
    "end": "2363960"
  },
  {
    "text": "notifications uh you can see the other prices there so this is a very very free way and then a very cost-effective way",
    "start": "2363960",
    "end": "2369440"
  },
  {
    "text": "of delivering uh these sort of new features at scale and you can set all of this up uh for SNS mobile push uh using",
    "start": "2369440",
    "end": "2376119"
  },
  {
    "text": "the console so there's one very simple workflow to create apps on any platform and then you can upload or paste in",
    "start": "2376119",
    "end": "2381760"
  },
  {
    "text": "exactly the credential you you receive from each platform when you sign up to register to deliver those notifications",
    "start": "2381760",
    "end": "2387680"
  },
  {
    "text": "and there's easy migration of existing applications by batch uploading existing tokens if you're migrating from an",
    "start": "2387680",
    "end": "2393520"
  },
  {
    "text": "alternative platform for managing this so it's very very easy to get up and running uh very very easy to migrate",
    "start": "2393520",
    "end": "2398760"
  },
  {
    "text": "onto uh when you're working in this environment so just to summarize uh we covered three things we gave an",
    "start": "2398760",
    "end": "2405040"
  },
  {
    "text": "introduction to Dynamo DB including the scheme less tables and a little bit of information about how you can construct",
    "start": "2405040",
    "end": "2410680"
  },
  {
    "text": "Ono one and on to many applications and use soal uh local secondary indices we talked about using Dynamo DB uh with a",
    "start": "2410680",
    "end": "2417200"
  },
  {
    "text": "mobile application for both uh uh geospatial applications and using SNS mobile push notifications and we also",
    "start": "2417200",
    "end": "2423800"
  },
  {
    "text": "talked about the next steps how you can get up and running with stuff and how you can get started even in the console",
    "start": "2423800",
    "end": "2430040"
  },
  {
    "text": "or with the SD case uh with that I'd like to thank you very much for your attention uh that brings uh to close the",
    "start": "2430040",
    "end": "2437520"
  },
  {
    "text": "the presentation component of this webinar uh I've been joined while we were talking I by representatives of",
    "start": "2437520",
    "end": "2443240"
  },
  {
    "text": "both the Dynamo DB and the mobile uh uh mobile push SNS team and so if you have",
    "start": "2443240",
    "end": "2448280"
  },
  {
    "text": "any questions uh relating to this area we would love to answer them for you",
    "start": "2448280",
    "end": "2453838"
  },
  {
    "text": "now you'll hear a few seconds of Silence on the line while we reorganize our",
    "start": "2455319",
    "end": "2461000"
  },
  {
    "text": "chair Q&A",
    "start": "2461000",
    "end": "2464400"
  },
  {
    "text": "portion do that one so here's a here's a question uh do you need to store the AWS",
    "start": "2477160",
    "end": "2483839"
  },
  {
    "text": "secret keys on the device and is that a security risk so this is in regards to mobile",
    "start": "2483839",
    "end": "2491359"
  },
  {
    "text": "push notifications in particular if I have my token on the device and it needs",
    "start": "2491359",
    "end": "2496440"
  },
  {
    "text": "to get registered with SNS ultimately there needs to be some sort of",
    "start": "2496440",
    "end": "2501920"
  },
  {
    "text": "authentication the easy but not recommended practice is to embed some",
    "start": "2501920",
    "end": "2507920"
  },
  {
    "text": "narrow credentials on the device itself this is easier to build but as the as",
    "start": "2507920",
    "end": "2514560"
  },
  {
    "text": "the person asking the question question suggests that's not an excellent",
    "start": "2514560",
    "end": "2520280"
  },
  {
    "text": "security practice the preferred security practice is to use one of two options the first is an",
    "start": "2520280",
    "end": "2527920"
  },
  {
    "text": "AWS provided option called the token vending machine that creates temporary",
    "start": "2527920",
    "end": "2533000"
  },
  {
    "text": "credentials that allow your device to perform this particular action of registering itself with SNS in a way",
    "start": "2533000",
    "end": "2540400"
  },
  {
    "text": "that is secure because the token expires after it's used for that initial purpose and so the first option is the",
    "start": "2540400",
    "end": "2547640"
  },
  {
    "text": "token vending machine the second option that some other customers use is a proxy",
    "start": "2547640",
    "end": "2554240"
  },
  {
    "text": "where actually my app doesn't speak directly to SNS at all but rather speaks",
    "start": "2554240",
    "end": "2559680"
  },
  {
    "text": "to a cloud service whose job it is to accept input from the app and the cloud",
    "start": "2559680",
    "end": "2565960"
  },
  {
    "text": "service then interacts with SNS and so there to sum up three options",
    "start": "2565960",
    "end": "2573520"
  },
  {
    "text": "one is the simple but not recommended way uh that is typically used for",
    "start": "2573520",
    "end": "2578559"
  },
  {
    "text": "development and testing which is to embed narrow credentials directly into your app that's not the recommended way",
    "start": "2578559",
    "end": "2585640"
  },
  {
    "text": "the two recommended ways are to use the token vending machine or to use an intermediate",
    "start": "2585640",
    "end": "2594119"
  },
  {
    "text": "proxy okay thanks John um so we have a question about Dynam DB does Dynamo DB",
    "start": "2597200",
    "end": "2602440"
  },
  {
    "text": "support Disaster Recovery in case region one data Center went down and can I",
    "start": "2602440",
    "end": "2607559"
  },
  {
    "text": "retrieve the data from a backup data center transparently um so the short answer is",
    "start": "2607559",
    "end": "2612760"
  },
  {
    "text": "yes um when we talk about a region though a region is a group of availability zones and an availability",
    "start": "2612760",
    "end": "2618359"
  },
  {
    "text": "zone is a cluster of data centers so if a data center went down that doesn't",
    "start": "2618359",
    "end": "2623920"
  },
  {
    "text": "mean a region or even an a is is impacted DB is architected to span",
    "start": "2623920",
    "end": "2629040"
  },
  {
    "text": "multiple availability zones uh continuously so the data is constantly",
    "start": "2629040",
    "end": "2634079"
  },
  {
    "text": "um maintained in multiple Loc at once so to be sure um in a we recommend High",
    "start": "2634079",
    "end": "2641559"
  },
  {
    "text": "availability um work and be built and architected within a single region as",
    "start": "2641559",
    "end": "2646760"
  },
  {
    "text": "does amazon.com for instance um for Dr though yes moving data out of the region is a is a good idea um so we've recently",
    "start": "2646760",
    "end": "2654000"
  },
  {
    "text": "announced if you look at Jeff Bar's blog a data pipeline uh template that enables you to move data from a dynb table um",
    "start": "2654000",
    "end": "2662119"
  },
  {
    "text": "for in one region and move it to basically load another table in another region and to do that with basically",
    "start": "2662119",
    "end": "2667880"
  },
  {
    "text": "push button uh automation so yes the answer is yes we have a question on uh",
    "start": "2667880",
    "end": "2674800"
  },
  {
    "text": "Autos scaning so do you have any plans to provide autos scaning for Dynamo DB um the answer is that you can actually",
    "start": "2674800",
    "end": "2680280"
  },
  {
    "text": "do that today uh so when you set up a new Dynamo DB table uh Dynamo DB will ask you if you want to set up uh",
    "start": "2680280",
    "end": "2686400"
  },
  {
    "text": "notifications uh when you start to reach the limits of your provision throughput",
    "start": "2686400",
    "end": "2691440"
  },
  {
    "text": "uh so you can actually tell Dynamo DB when you get to say 80 or 90% % of your",
    "start": "2691440",
    "end": "2696640"
  },
  {
    "text": "provision throughput that you've that you've set up it will send you a either email notification or a programmatic",
    "start": "2696640",
    "end": "2702559"
  },
  {
    "text": "notification again using SNF uh and you can respond to that in in a programmatic way and so there's some code available",
    "start": "2702559",
    "end": "2709400"
  },
  {
    "text": "up on our website and up on uh the developer blog uh which will give you the guidance on how you can respond to",
    "start": "2709400",
    "end": "2715400"
  },
  {
    "text": "those notifications all you do is just make an API call to decide what to do by adding or a moving capacity as you start",
    "start": "2715400",
    "end": "2721800"
  },
  {
    "text": "to move in and out of your of the limits of your your operational limits of your provision throughput uh so you can",
    "start": "2721800",
    "end": "2727119"
  },
  {
    "text": "actually do that today great thanks Matt so we have another question is Dynamo DB local only",
    "start": "2727119",
    "end": "2733200"
  },
  {
    "text": "for development purposes or is it likely to be deployed as a production option as a replicated Source um definitely the",
    "start": "2733200",
    "end": "2739640"
  },
  {
    "text": "first uh the former it's a development environment decid designed really to give you disconnected access to the API",
    "start": "2739640",
    "end": "2747520"
  },
  {
    "text": "so it's uh well the API uh essentially simulated it allows you to do laptop",
    "start": "2747520",
    "end": "2752640"
  },
  {
    "text": "development wherever you are um but yes for any any degree of scalability um the",
    "start": "2752640",
    "end": "2757720"
  },
  {
    "text": "service it's is not the service it's a it's an emulator of the API so no it is not designed for scale and it's",
    "start": "2757720",
    "end": "2763240"
  },
  {
    "text": "definitely for for development",
    "start": "2763240",
    "end": "2766559"
  },
  {
    "text": "purposes it I know we've got a few more here um",
    "start": "2769000",
    "end": "2774040"
  },
  {
    "text": "so just a just one comment also we've we've had a few questions about um you know what do we What will what are our",
    "start": "2774040",
    "end": "2780920"
  },
  {
    "text": "plans we don't share those plans publicly in this sort of forum um but uh all the Everything you ask is is great",
    "start": "2780920",
    "end": "2787880"
  },
  {
    "text": "and other customers um feel the same way and they ask us and we are driven by customer requests so um these are these",
    "start": "2787880",
    "end": "2794920"
  },
  {
    "text": "are uh well taken and uh things that we do embed into our road map as we go forward so you can be sure that if it's",
    "start": "2794920",
    "end": "2801319"
  },
  {
    "text": "not here today then uh we're certainly listening and planning something uh coming",
    "start": "2801319",
    "end": "2806720"
  },
  {
    "text": "up so that covers things like cross region replication um online secondary index creation and so on which we've had",
    "start": "2806720",
    "end": "2813760"
  },
  {
    "text": "a few questions about um we've also heard a question about the difference between Dynamo DB and simple",
    "start": "2813760",
    "end": "2819559"
  },
  {
    "text": "DB and when you would recommend one versus the other um there is actually a decent uh discussion on that on the",
    "start": "2819559",
    "end": "2825960"
  },
  {
    "text": "website I recommend you go there to the Dynamo DB website U where you can check on the differences between them um",
    "start": "2825960",
    "end": "2833440"
  },
  {
    "text": "essentially with local secondary indexes um most of the use cases that you would deploy for simple DB are available in",
    "start": "2833440",
    "end": "2839400"
  },
  {
    "text": "Dynamo DB um simple DB indexes every attribute so that's that's a constraining factor in its ability to",
    "start": "2839400",
    "end": "2846400"
  },
  {
    "text": "scale so that's that's the only thing there simple DB is extremely versatile um but it is designed for uh lower scale",
    "start": "2846400",
    "end": "2853640"
  },
  {
    "text": "um smaller data sets Dynamo DB has no such limit and uh for most used cases is",
    "start": "2853640",
    "end": "2858960"
  },
  {
    "text": "is generally significantly cheaper as well",
    "start": "2858960",
    "end": "2866640"
  },
  {
    "text": "uh is there any limitation of query data from Dynamo DB per second can I query 50",
    "start": "2867359",
    "end": "2873359"
  },
  {
    "text": "million data um I presume that means data items from Dynamo DB in 1 second um",
    "start": "2873359",
    "end": "2880880"
  },
  {
    "text": "the the short answer is yes uh it all depends how much throughput you give that sort of request um and how well",
    "start": "2880880",
    "end": "2887760"
  },
  {
    "text": "structured your your data is so dynb is a distributed system that uses the hash key to distribute data across the the",
    "start": "2887760",
    "end": "2896599"
  },
  {
    "text": "the data set the partitions um so if you're doing sort of a batch get you a batch get of say 100 items you could get",
    "start": "2896599",
    "end": "2904440"
  },
  {
    "text": "that uh that will work in parallel and potentially hit up to 100 100 different partitions to retrieve that if you're",
    "start": "2904440",
    "end": "2910880"
  },
  {
    "text": "doing a query which is where the question was Associated a query is associated with a hash range primary key",
    "start": "2910880",
    "end": "2917559"
  },
  {
    "text": "so a hash range gives you the on to many relationship where you have a single hash for example user ID and then a",
    "start": "2917559",
    "end": "2923480"
  },
  {
    "text": "range uh a range key which unifies the the key into a primary key u but that",
    "start": "2923480",
    "end": "2928880"
  },
  {
    "text": "could be say a timestamp and so if you just ask a query if you give the query just the hash credentials then the full",
    "start": "2928880",
    "end": "2935240"
  },
  {
    "text": "data will come back in range sorted order so is there any limitation um",
    "start": "2935240",
    "end": "2940440"
  },
  {
    "text": "there's not a limitation um but obviously latency for returning 50 million records will be higher for the",
    "start": "2940440",
    "end": "2947520"
  },
  {
    "text": "last record than it will be for the first record um but what you'll get is a very very low latency experience um most",
    "start": "2947520",
    "end": "2953920"
  },
  {
    "text": "of that data is collocated physically so the access will be extremely fast won't be across the network um and we just",
    "start": "2953920",
    "end": "2961319"
  },
  {
    "text": "recommend you try it um if you're using local secondary indexes um that is they they are they operate within the",
    "start": "2961319",
    "end": "2968280"
  },
  {
    "text": "construct of an item collection um where we uh we do constrain each hash key to a 10 gig partition um that is so we can do",
    "start": "2968280",
    "end": "2975559"
  },
  {
    "text": "all the operations locally the advantage of that is when you put items into that",
    "start": "2975559",
    "end": "2980839"
  },
  {
    "text": "the original The Source table you don't incur a latency overhead as you do with traditional databases uh the downside is",
    "start": "2980839",
    "end": "2987559"
  },
  {
    "text": "each hash key is uh limited to 10 gig which by the way for hash key is a very high limit M so we have one here on what",
    "start": "2987559",
    "end": "2995359"
  },
  {
    "text": "is is the best practice for periodic large scale tens of millions update or inserts to a dynb table specifically",
    "start": "2995359",
    "end": "3001839"
  },
  {
    "text": "this would be a data export from a hive table in EMR that's a good question uh so EMR if you're not familiar with it is",
    "start": "3001839",
    "end": "3008119"
  },
  {
    "text": "uh a managed Hadoop service elastic map produced and we've actually embedded and",
    "start": "3008119",
    "end": "3013240"
  },
  {
    "text": "integrated EMR with Dynamo DB so when you're working with Hive which is a I",
    "start": "3013240",
    "end": "3018359"
  },
  {
    "text": "guess an SQL like query language which sits on top of map ruce on Hadoop um",
    "start": "3018359",
    "end": "3023520"
  },
  {
    "text": "Hive will actually allow you to create an external table which is a Dynamo DB table you specify the keys and the",
    "start": "3023520",
    "end": "3028920"
  },
  {
    "text": "values and you can do SQL style queries against the Dynamo DB table using Hive",
    "start": "3028920",
    "end": "3034760"
  },
  {
    "text": "um the nice thing is that you because it's nicely integrated into Hive on EMR you can actually set the level of",
    "start": "3034760",
    "end": "3040839"
  },
  {
    "text": "provision throughput that that query will consume so if you have a production database that you're loading data into",
    "start": "3040839",
    "end": "3047440"
  },
  {
    "text": "you may not want your uh Hive query to completely overrun the provision throughput which your other clients are",
    "start": "3047440",
    "end": "3054359"
  },
  {
    "text": "are using uh so you consider it to be very low alternatively if you're just doing a data load you consider it to be 100% of the provision throughput of your",
    "start": "3054359",
    "end": "3061640"
  },
  {
    "text": "Dynamo DB table then you just crank up the provision throughput of your Dynamo DB table you can easily handle those",
    "start": "3061640",
    "end": "3067200"
  },
  {
    "text": "tens of millions of inserts uh using an external uh table integration using EMR",
    "start": "3067200",
    "end": "3073079"
  },
  {
    "text": "and you can do the same thing for taking data from Dynamo DB and moving it into an S3 bucket or or quering across data",
    "start": "3073079",
    "end": "3079640"
  },
  {
    "text": "in an S3 bucket and Dynamo DB so some very nice integration points inside EMR great thanks so we've got time for a",
    "start": "3079640",
    "end": "3087160"
  },
  {
    "text": "couple more um you mentioned five and 10 read write capacity units in the free tier for Dynamo DB what does this",
    "start": "3087160",
    "end": "3094079"
  },
  {
    "text": "capacity denote so it's a good question what we refer to when we say a read unit or a write unit um is essentially a read",
    "start": "3094079",
    "end": "3101160"
  },
  {
    "text": "per second or a right per second for uh a certain size a maximum size of data so",
    "start": "3101160",
    "end": "3107359"
  },
  {
    "text": "for rights that is 1K for reads it's 4K so in general it it translates to reads",
    "start": "3107359",
    "end": "3112480"
  },
  {
    "text": "per second or writes per second but if you do have larger item for example 3K of items or just over 3K you may have to",
    "start": "3112480",
    "end": "3119520"
  },
  {
    "text": "consume 4K of write units and 1K of read unit to move that item so a put of that",
    "start": "3119520",
    "end": "3124920"
  },
  {
    "text": "item will maybe consume four right units um so in general yeah look at your items your average item size first um if",
    "start": "3124920",
    "end": "3132280"
  },
  {
    "text": "they're generally under 1K then that translates to to basically per",
    "start": "3132280",
    "end": "3137599"
  },
  {
    "text": "second we have a question are there any sample applications we can use as a guide uh absolutely uh take a look at",
    "start": "3137599",
    "end": "3143720"
  },
  {
    "text": "your uh SDK of choice and you'll find example code in there relating to Dynamo DB uh it's really as I say the API for",
    "start": "3143720",
    "end": "3151079"
  },
  {
    "text": "Dynamo DB is is extremely simple uh you can get up and running uh literally in five or 10 minutes after you created",
    "start": "3151079",
    "end": "3156720"
  },
  {
    "text": "your first table um so there there's example code in those and as I say we also have example iOS code uh available",
    "start": "3156720",
    "end": "3162920"
  },
  {
    "text": "for our geospatial library as well and I'll chime in about mobile push we actually have sample applications for",
    "start": "3162920",
    "end": "3169480"
  },
  {
    "text": "iOS Android and candle fire that help you get started sending your first your first push notification in just a few",
    "start": "3169480",
    "end": "3175359"
  },
  {
    "text": "minutes you can get to that through the SNS documentation great uh one more question",
    "start": "3175359",
    "end": "3182599"
  },
  {
    "text": "I think what is the upgrade path from simple DB to Dynamo DB um firstly it's not there's no um need to move if you",
    "start": "3182599",
    "end": "3189799"
  },
  {
    "text": "don't want to move um we encourage you uh if you need higher scale or lower cost which you know is quite a common",
    "start": "3189799",
    "end": "3196559"
  },
  {
    "text": "requirement these days um then that is something to look at with local secondary indexes in Dynamo DB you get a",
    "start": "3196559",
    "end": "3203400"
  },
  {
    "text": "pretty uh a very consistent mapping between the concept of a domain and a table in Dynamo DB um with all the",
    "start": "3203400",
    "end": "3210280"
  },
  {
    "text": "attributes indexed in simple DB uh you can you can basically build a local secondary index on the same structure",
    "start": "3210280",
    "end": "3216960"
  },
  {
    "text": "the same table structure in Dynamo DB and and support up to six different more um five additional access read access",
    "start": "3216960",
    "end": "3224160"
  },
  {
    "text": "pattern so if you think you can access it by the hash key as well as the range key with local secondary indexes and",
    "start": "3224160",
    "end": "3230920"
  },
  {
    "text": "this answers another question can you have other range Keys against the table uh with local secondary indexes you're",
    "start": "3230920",
    "end": "3236799"
  },
  {
    "text": "you're what you're doing is um providing an alternate range key so again with the same hash you have a different Lookout",
    "start": "3236799",
    "end": "3242920"
  },
  {
    "text": "so you may look up from timestamp in one case or user ID in another case and so on so yes that mapping is uh uh provides",
    "start": "3242920",
    "end": "3251240"
  },
  {
    "text": "you with basically the the a support for multiple query patents that you would",
    "start": "3251240",
    "end": "3256440"
  },
  {
    "text": "you were familiar with from simple DB as well as the power and the scalability of Dynamo DB so the process is fairly",
    "start": "3256440",
    "end": "3262319"
  },
  {
    "text": "simple just unload the data in com see CSV or you delimited format and load it back into Dynamo DB tables in",
    "start": "3262319",
    "end": "3269520"
  },
  {
    "text": "nonrelational are fortunate in that they don't have the intro uh database relations to worry about no parent child",
    "start": "3269520",
    "end": "3276520"
  },
  {
    "text": "uh relationships are expressed in the database so you can basically move data as a discrete set move it out move it in",
    "start": "3276520",
    "end": "3282160"
  },
  {
    "text": "and so on your application needs to you know it manages all those relationships right one more just",
    "start": "3282160",
    "end": "3288480"
  },
  {
    "text": "because actually two more um so somebody asked for a data import scenario can I",
    "start": "3288480",
    "end": "3293680"
  },
  {
    "text": "provision something like 10,000 right and then set it to 10 once it's done how does the pricing work the answer absolutely um so you pay for Dynamo EB",
    "start": "3293680",
    "end": "3302040"
  },
  {
    "text": "in two ways you pay for the provision throughput uh and you pay for what you provisioned not what you've actually used uh so you would uh you could set up",
    "start": "3302040",
    "end": "3309240"
  },
  {
    "text": "your 10,000 rights uh 10,000 you know right IO uh and then you'll pay for",
    "start": "3309240",
    "end": "3314720"
  },
  {
    "text": "those as and when you're using them and then when you scale back down to 10 you'll only pay for 10 uh so you pay for",
    "start": "3314720",
    "end": "3319960"
  },
  {
    "text": "that but you also pay for the storage under the hood as well um so um those are two key levers for pricing on Dynamo",
    "start": "3319960",
    "end": "3326359"
  },
  {
    "text": "DB but absolutely you can scale up to 10,000 and then scale it back down to 10 once it's done uh the final question is",
    "start": "3326359",
    "end": "3332520"
  },
  {
    "text": "when is dynb planned to be out of beta um this is an interesting question so we got nothing to announce today but I did",
    "start": "3332520",
    "end": "3338599"
  },
  {
    "text": "want to just touch on what we mean at AWS when we talk about uh beta or beta",
    "start": "3338599",
    "end": "3344240"
  },
  {
    "text": "um we use it slightly differently to how uh to how maybe other customers or other companies use it when we talk about beta",
    "start": "3344240",
    "end": "3350280"
  },
  {
    "text": "we're talking about a service which is operationally stable which is designed for produ uction use uh and which as you",
    "start": "3350280",
    "end": "3356640"
  },
  {
    "text": "can see customers are already using for very very high scale um but beta for us means that it doesn't quite fulfill our",
    "start": "3356640",
    "end": "3363240"
  },
  {
    "text": "original Vision in terms of the feature set so our goal is always to get our services operationally stable and get",
    "start": "3363240",
    "end": "3369880"
  },
  {
    "text": "them out in front of customers as soon as possible and then use the feedback from customers uh working with the",
    "start": "3369880",
    "end": "3375160"
  },
  {
    "text": "service uh to improve and add features to that service over time and when we eventually get to a point where it's",
    "start": "3375160",
    "end": "3380920"
  },
  {
    "text": "kind of fulfilled our original vision for what you can consider 1.0 that's when we remove the beta tag this has",
    "start": "3380920",
    "end": "3386880"
  },
  {
    "text": "nothing to do with operational stability or suitability for production systems it has everything to do with our vision uh",
    "start": "3386880",
    "end": "3392480"
  },
  {
    "text": "for the feature set for Dynamo DB we released it with a you know a minimal set deliberately and then we've iterated",
    "start": "3392480",
    "end": "3399280"
  },
  {
    "text": "and added features time and time again as more and more customers are come on to on board um so again nothing to",
    "start": "3399280",
    "end": "3404920"
  },
  {
    "text": "announce today but that's our approach when it comes to Beta",
    "start": "3404920",
    "end": "3410480"
  }
]