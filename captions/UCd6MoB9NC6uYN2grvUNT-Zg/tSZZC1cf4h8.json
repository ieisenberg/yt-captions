[
  {
    "start": "0",
    "end": "35000"
  },
  {
    "text": "so hello everyone thank you for joining us here at dev three three two this is",
    "start": "110",
    "end": "5310"
  },
  {
    "text": "the using AWS to achieve both autonomy and governance at 3m my name is Nathan Scott I am a senior consultant at AWS",
    "start": "5310",
    "end": "12780"
  },
  {
    "text": "professional services and welcome so the session here today is about how do we",
    "start": "12780",
    "end": "20810"
  },
  {
    "text": "get developers autonomy to do their jobs while at the same time being able to",
    "start": "20810",
    "end": "26359"
  },
  {
    "text": "govern the processes and ensure that we have compliance with we you know with",
    "start": "26359",
    "end": "32219"
  },
  {
    "text": "governance policy now we all know that",
    "start": "32219",
    "end": "37280"
  },
  {
    "text": "developers want to move fast right they don't want to have any roadblocks they",
    "start": "37280",
    "end": "43140"
  },
  {
    "text": "don't want to have to put requests in for resources wait for approvals and wait for provisioning of those resources",
    "start": "43140",
    "end": "50480"
  },
  {
    "text": "they need to be able to move fast they need to be able to do you know move at the speed of business to be able to to",
    "start": "50480",
    "end": "57750"
  },
  {
    "text": "be able to capture market opportunities and to be able to you know beat the",
    "start": "57750",
    "end": "63570"
  },
  {
    "text": "competition to market and to be able to do that they have to have everything out of their way but on the other hand we",
    "start": "63570",
    "end": "70740"
  },
  {
    "text": "have security needs right we have governance and policies in place for a reason we need to ensure that the",
    "start": "70740",
    "end": "77759"
  },
  {
    "text": "security teams need to ensure that that you know all the changes are monitored",
    "start": "77759",
    "end": "83640"
  },
  {
    "text": "and capture and that everything is in compliance with governance policies that are set forth for that organization you",
    "start": "83640",
    "end": "91530"
  },
  {
    "text": "know and and risk mitigation is at the top of their list you know they can't have development teams directly in",
    "start": "91530",
    "end": "97860"
  },
  {
    "text": "production environments that's their worst nightmare right so how do we",
    "start": "97860",
    "end": "103049"
  },
  {
    "text": "achieve it how do we to give the developers the autonomy to go do what they need to do as fast as they need to",
    "start": "103049",
    "end": "108540"
  },
  {
    "text": "do it but still ensure that the security pieces and the governance are all met",
    "start": "108540",
    "end": "115500"
  },
  {
    "text": "right to ensure that all the policies are met and we have everything captured that needs to be captured well today I",
    "start": "115500",
    "end": "123049"
  },
  {
    "start": "121000",
    "end": "161000"
  },
  {
    "text": "would like to introduce that we have an AWS customer James Martin with he's the",
    "start": "123049",
    "end": "130050"
  },
  {
    "text": "automation manager at 3m H is also have kaseylee which is the chief",
    "start": "130050",
    "end": "137310"
  },
  {
    "text": "architect with AWS premier partner stella gent with us today to help",
    "start": "137310",
    "end": "143489"
  },
  {
    "text": "discuss us to help us discuss this this this problem and some of the solutions that that we have to it right so that we",
    "start": "143489",
    "end": "150629"
  },
  {
    "text": "can make developers autonomous and let them move fast but at the same time",
    "start": "150629",
    "end": "156000"
  },
  {
    "text": "ensure that we're complying to governance policy so some of the topics",
    "start": "156000",
    "end": "163829"
  },
  {
    "start": "161000",
    "end": "223000"
  },
  {
    "text": "we'll be talking about today are first what industry are we talking about here right what security requirements do we",
    "start": "163829",
    "end": "172049"
  },
  {
    "text": "have I think you'll be surprised when you hear James talk about what we're actually doing here right",
    "start": "172049",
    "end": "178530"
  },
  {
    "text": "and we'll also dive deep into the problem and into the solutions and the",
    "start": "178530",
    "end": "183750"
  },
  {
    "text": "options that we have for this right so we we have solutions in place that allow",
    "start": "183750",
    "end": "190230"
  },
  {
    "text": "the developers to do the things they need to do as quickly and as they as they can do them you know and at the",
    "start": "190230",
    "end": "195900"
  },
  {
    "text": "same time we have the pieces in place that allows for the governance and the policies to ensure that we're were not",
    "start": "195900",
    "end": "202079"
  },
  {
    "text": "out of compliance so without further ado I'd like to introduce James Martin",
    "start": "202079",
    "end": "208549"
  },
  {
    "text": "automation manager with 3m H is",
    "start": "208549",
    "end": "213260"
  },
  {
    "text": "Thank You Nate all right yes so as Nate",
    "start": "219940",
    "end": "226450"
  },
  {
    "start": "223000",
    "end": "308000"
  },
  {
    "text": "said I'm James I am the automation engineering manager at 3m HS and we",
    "start": "226450",
    "end": "232459"
  },
  {
    "text": "build tools for development teams to hopefully make their jobs easier faster",
    "start": "232459",
    "end": "239390"
  },
  {
    "text": "or more fulfilling a bit about 3m so most of you probably know 3m for some of",
    "start": "239390",
    "end": "245000"
  },
  {
    "text": "our consumer products things like scotch tape or some air filters we make and",
    "start": "245000",
    "end": "251900"
  },
  {
    "text": "also post-it notes but in fact and we make thousands of other things but in",
    "start": "251900",
    "end": "258320"
  },
  {
    "text": "fact we also make some software and so I work for H is healthcare information systems as you could guess we build",
    "start": "258320",
    "end": "266480"
  },
  {
    "text": "software for the healthcare space I give a quick couple blurbs about our business",
    "start": "266480",
    "end": "273050"
  },
  {
    "text": "just to set the stage in the background so you all understand at a high level what we do",
    "start": "273050",
    "end": "278480"
  },
  {
    "text": "so our historical business was has been around in some shape for around 30 years",
    "start": "278480",
    "end": "284660"
  },
  {
    "text": "and we are the historical business was around improving the process of",
    "start": "284660",
    "end": "292180"
  },
  {
    "text": "gathering and collecting and analyzing the documentation that occurs when someone visits a healthcare organization",
    "start": "292180",
    "end": "299419"
  },
  {
    "text": "and and help reduce costs and improve that interaction so the lots of analysis",
    "start": "299419",
    "end": "305240"
  },
  {
    "text": "on documentation of a particular visit and the future state of our of our",
    "start": "305240",
    "end": "312020"
  },
  {
    "start": "308000",
    "end": "337000"
  },
  {
    "text": "products is more focused around notions called population health essentially population",
    "start": "312020",
    "end": "319340"
  },
  {
    "text": "health is this concept of looking at large swaths of healthcare interactions",
    "start": "319340",
    "end": "325220"
  },
  {
    "text": "and data and trying to understand how at a higher level what the what performance",
    "start": "325220",
    "end": "332260"
  },
  {
    "text": "improvements can be made for the healthcare sued to deliver better outcomes to patients and just a quick",
    "start": "332260",
    "end": "340070"
  },
  {
    "start": "337000",
    "end": "370000"
  },
  {
    "text": "slide about the scale that we've got we operate on one percent of the gross domestic product flows through three MHI",
    "start": "340070",
    "end": "349220"
  },
  {
    "text": "systems we have of 24 states have adopted our systems",
    "start": "349220",
    "end": "354380"
  },
  {
    "text": "across the United States and 80% of 87 percent of the population",
    "start": "354380",
    "end": "360100"
  },
  {
    "text": "is risk adjusted by some of our systems so a lot of data and a lot of dollars",
    "start": "360100",
    "end": "367910"
  },
  {
    "text": "throat flow through our systems so H is",
    "start": "367910",
    "end": "373100"
  },
  {
    "text": "made a shift made a jump to Amazon Web Services a little over a year ago and we",
    "start": "373100",
    "end": "381110"
  },
  {
    "text": "did this typical lift and shift moving out of a of an old traditional type of",
    "start": "381110",
    "end": "386510"
  },
  {
    "text": "data center into the Amazon environment we saw a lot of immediate wins in terms of scalability in terms of price the",
    "start": "386510",
    "end": "394280"
  },
  {
    "text": "typical things you get from to moving to a cloud-based platform but we weren't",
    "start": "394280",
    "end": "402020"
  },
  {
    "text": "moving fast enough so their stuff products weren't getting delivered to",
    "start": "402020",
    "end": "407210"
  },
  {
    "text": "customers fast enough new features weren't getting added and deployed fast enough bugs weren't being fixed and",
    "start": "407210",
    "end": "412280"
  },
  {
    "text": "deployed fast enough at cetera so we had to evolve again and some of those those",
    "start": "412280",
    "end": "418880"
  },
  {
    "start": "416000",
    "end": "445000"
  },
  {
    "text": "those Baldwin acts around that that the sort of earlier phase of operations",
    "start": "418880",
    "end": "426110"
  },
  {
    "text": "we're in or well of course development time there's always going to be the development time bottleneck when you're",
    "start": "426110",
    "end": "432650"
  },
  {
    "text": "writing software but things like manual testing manual QA manual deployment all",
    "start": "432650",
    "end": "437900"
  },
  {
    "text": "of these things are slowing down your ability to deliver ideas turn those ideas into code and put them in your",
    "start": "437900",
    "end": "443810"
  },
  {
    "text": "hands of the customers and ultimately the only bottleneck you really want is coming up with the idea and then the",
    "start": "443810",
    "end": "451010"
  },
  {
    "start": "445000",
    "end": "496000"
  },
  {
    "text": "development time itself so how do you how do you get there well this notion of",
    "start": "451010",
    "end": "456950"
  },
  {
    "text": "continuous delivery that everyone here is familiar with this slide is actually Curtis courtesy of Rob Brigham from from",
    "start": "456950",
    "end": "465440"
  },
  {
    "text": "Amazon but essentially the notion is everything that's in that the blue",
    "start": "465440",
    "end": "470840"
  },
  {
    "text": "section of the slide is waste and the faster you can in terms of the time",
    "start": "470840",
    "end": "476090"
  },
  {
    "text": "spent doing it and the more you can shrink that that time down the quicker this feedback loop is going to happen",
    "start": "476090",
    "end": "481850"
  },
  {
    "text": "with your customer you're going to get product in the customers and faster get feedback from the customer and begin that cycle again so",
    "start": "481850",
    "end": "490039"
  },
  {
    "text": "everything that we we were trying to develop is increase reduce the amount of time in this feedback loop so what was",
    "start": "490039",
    "end": "498349"
  },
  {
    "start": "496000",
    "end": "509000"
  },
  {
    "text": "what was our path to continuous delivery as you can guess for organization of our",
    "start": "498349",
    "end": "505759"
  },
  {
    "text": "size there's quite a bit of a maze to navigate through one of the first things",
    "start": "505759",
    "end": "511430"
  },
  {
    "start": "509000",
    "end": "560000"
  },
  {
    "text": "we stepped though we started with was building an automation engineering team automation engineering team is comprised",
    "start": "511430",
    "end": "518810"
  },
  {
    "text": "of folks that are very knowledgeable of Amazon Web Services they are also knowledgeable about software development",
    "start": "518810",
    "end": "525290"
  },
  {
    "text": "so they understand the complete lifecycle of software from making the commit to writing the deployment scripts",
    "start": "525290",
    "end": "532519"
  },
  {
    "text": "and you typically have some background in how to to manage the operating system of the devices where the software is due",
    "start": "532519",
    "end": "541010"
  },
  {
    "text": "meeting deployed so not not the kind of person who is sort of the the software",
    "start": "541010",
    "end": "547160"
  },
  {
    "text": "developer who lives under the stairs in the dark and writes code all day and doesn't want to talk to anybody but it's",
    "start": "547160",
    "end": "552560"
  },
  {
    "text": "also comfortable having discussions with other engineers and working with other",
    "start": "552560",
    "end": "557779"
  },
  {
    "text": "teams the second aspect of our journey",
    "start": "557779",
    "end": "563839"
  },
  {
    "start": "560000",
    "end": "621000"
  },
  {
    "text": "was choosing the right technology it was a lot of us know as engineers we often",
    "start": "563839",
    "end": "570130"
  },
  {
    "text": "can and have that tendency to over over engineered things so it was very important for us to focus at the problem",
    "start": "570130",
    "end": "577880"
  },
  {
    "text": "at hand and not try to get ahead of ourselves and what we're trying to do but look for quick wins and and figure",
    "start": "577880",
    "end": "585440"
  },
  {
    "text": "out how we can how we can solve today's problems and not tomorrow's problems worried about tomorrow's problems tomorrow and in finding the right tool",
    "start": "585440",
    "end": "593389"
  },
  {
    "text": "set for that so that was for us native Amazon Web Services whenever possible as KC's going to demonstrate",
    "start": "593389",
    "end": "599449"
  },
  {
    "text": "later he's going to show all the different tools that we use but you know",
    "start": "599449",
    "end": "604600"
  },
  {
    "text": "using a video services and if you can't find 80 of our services that meet your",
    "start": "604600",
    "end": "610040"
  },
  {
    "text": "need using a SAS based solution is really a good idea because oftentimes those people are going to be able to",
    "start": "610040",
    "end": "616329"
  },
  {
    "text": "perform function better than you could internally the next sort of thing we",
    "start": "616329",
    "end": "625760"
  },
  {
    "start": "621000",
    "end": "698000"
  },
  {
    "text": "went through was working with the security team we got we worked with the security security team really early in",
    "start": "625760",
    "end": "633410"
  },
  {
    "text": "our journey to continuous delivery so we got buy-in from the security team very early in the process we told them what",
    "start": "633410",
    "end": "639650"
  },
  {
    "text": "they were trying to do they gave us a lot of good feedback and how we can build security from the start into into our pipelines and security is",
    "start": "639650",
    "end": "646850"
  },
  {
    "text": "also a consumer of the tools that we use that we built so now they've they've not",
    "start": "646850",
    "end": "652400"
  },
  {
    "text": "only gave us feedback but they're vetting our own tools based on their consumption and they also helped a lot",
    "start": "652400",
    "end": "657800"
  },
  {
    "text": "with this this notion of freedom developer freedom with guardrails so",
    "start": "657800",
    "end": "662960"
  },
  {
    "text": "that you want to have developers give it to Belarus as much freedom as you as you can but you don't want them to fall on",
    "start": "662960",
    "end": "669500"
  },
  {
    "text": "their face so you want to build nice guardrails that with that are sort of from a security perspective defined by",
    "start": "669500",
    "end": "677030"
  },
  {
    "text": "your controls but and not allow them to fall out of those guardrails but give them plenty of space inside to do what",
    "start": "677030",
    "end": "683450"
  },
  {
    "text": "they need to do and of course another in our particular case we deal with lots of sensitive data so security has very",
    "start": "683450",
    "end": "690290"
  },
  {
    "text": "specific restrictions on how we can handle data so our pipelines have to be",
    "start": "690290",
    "end": "695540"
  },
  {
    "text": "sensitive to that requirement the really",
    "start": "695540",
    "end": "701630"
  },
  {
    "start": "698000",
    "end": "747000"
  },
  {
    "text": "important part of our of anyone's journey into continuous delivery and ours is finding the right service to",
    "start": "701630",
    "end": "708200"
  },
  {
    "text": "start with if you're an enterprise you probably have a lot of big monolithic applications I can tell you now that",
    "start": "708200",
    "end": "714140"
  },
  {
    "text": "those are not the right ones to start day one on your journey to continuous delivery you find something really",
    "start": "714140",
    "end": "721250"
  },
  {
    "text": "really simple maybe it's a simple stateless app a very simple website but",
    "start": "721250",
    "end": "727970"
  },
  {
    "text": "use something really simple to prove your concepts test out your policies",
    "start": "727970",
    "end": "733030"
  },
  {
    "text": "security policies and just enough to prove the tools that you're building in",
    "start": "733030",
    "end": "738890"
  },
  {
    "text": "your process and keep doing that and iterating on the simple parts before you start moving on to the big parts the big",
    "start": "738890",
    "end": "745190"
  },
  {
    "text": "the big processes in addition to finding the right service or",
    "start": "745190",
    "end": "751160"
  },
  {
    "start": "747000",
    "end": "818000"
  },
  {
    "text": "application you want to put through a continuous silver we had to find the right teams to get started with you and",
    "start": "751160",
    "end": "756649"
  },
  {
    "text": "when you're making this journey you have to find the team that wants the power right there's a lot of power and",
    "start": "756649",
    "end": "761959"
  },
  {
    "text": "continuous delivery our goal is to give developers the ability to push a commit",
    "start": "761959",
    "end": "767089"
  },
  {
    "text": "to a repository and have that commit eventually land in production so this it",
    "start": "767089",
    "end": "772519"
  },
  {
    "text": "has to be some team of folks that want the power and they have to be willing to do the work this is not we're gonna go",
    "start": "772519",
    "end": "778129"
  },
  {
    "text": "build your pipelines and walk away you're gonna participate and own this",
    "start": "778129",
    "end": "783139"
  },
  {
    "text": "pipeline and all the deployment code around it and oftentimes if you have a",
    "start": "783139",
    "end": "788360"
  },
  {
    "text": "champion in that particular team the the process is going to give movie even faster because you need someone and when",
    "start": "788360",
    "end": "795620"
  },
  {
    "text": "you're making this migration who has to be able to convince the rest of the members a team that continuous delivery",
    "start": "795620",
    "end": "800629"
  },
  {
    "text": "and its principles are the right way going forward and of course you have to have the business need as well using an",
    "start": "800629",
    "end": "807889"
  },
  {
    "text": "application that gets deployed once or twice a year and moving it through",
    "start": "807889",
    "end": "812990"
  },
  {
    "text": "continuous delivery probably not the best use of of resources and this",
    "start": "812990",
    "end": "820670"
  },
  {
    "start": "818000",
    "end": "864000"
  },
  {
    "text": "particular notion has worked out really well for us in our journey and this idea",
    "start": "820670",
    "end": "826579"
  },
  {
    "text": "of embedding the automation engineering team with the application teams that are",
    "start": "826579",
    "end": "833750"
  },
  {
    "text": "consuming our tools so at the get-go we have established some success criteria",
    "start": "833750",
    "end": "840079"
  },
  {
    "text": "with the teams that are adopting our tools we want to know what they want to get out of this out of this adventure",
    "start": "840079",
    "end": "846439"
  },
  {
    "text": "and our team would work very closely with that team participate in their sprint cycles get feedback on the tools",
    "start": "846439",
    "end": "853399"
  },
  {
    "text": "that we are producing from that team help them and help them adopt those tools would bring that feedback directly",
    "start": "853399",
    "end": "859160"
  },
  {
    "text": "to the engineering team to make improvements and deliver back to the team but the problem in an enterprise is",
    "start": "859160",
    "end": "868370"
  },
  {
    "start": "864000",
    "end": "928000"
  },
  {
    "text": "that you have a lot of teams so if this problem of continuous delivery at scale",
    "start": "868370",
    "end": "874430"
  },
  {
    "text": "and so we have some notion of 60 plus scrum teams H is and you know with",
    "start": "874430",
    "end": "882439"
  },
  {
    "text": "continuous delivery there's actually a lot of complex components that that needs to be built",
    "start": "882439",
    "end": "887840"
  },
  {
    "text": "and to be managed and you don't want to put that burden on the responsibility of application development teams you also",
    "start": "887840",
    "end": "895640"
  },
  {
    "text": "want to avoid running into this problem of snowflake pipelines where every",
    "start": "895640",
    "end": "900680"
  },
  {
    "text": "single development team is doing a pipeline differently and you also we",
    "start": "900680",
    "end": "907490"
  },
  {
    "text": "also you would also have this problem of if you did it the traditional way uh you could also have this problem of limited",
    "start": "907490",
    "end": "913640"
  },
  {
    "text": "governance where is sort of a tangent of of the snowflake problem but there's no",
    "start": "913640",
    "end": "918950"
  },
  {
    "text": "oversight into how these pipelines are being created and managed so given those",
    "start": "918950",
    "end": "926560"
  },
  {
    "text": "that problem set we came up with this concept of the pipeline Factory so the",
    "start": "926560",
    "end": "933500"
  },
  {
    "start": "928000",
    "end": "1029000"
  },
  {
    "text": "goal of the pipeline Factory is stamp out a working pipeline for a team with",
    "start": "933500",
    "end": "939350"
  },
  {
    "text": "all the bits and pieces that are included with the software delivery process already pre-configured for the",
    "start": "939350",
    "end": "945500"
  },
  {
    "text": "team so the idea was reduced the barrier entry for Barry to entry for a team that",
    "start": "945500",
    "end": "951890"
  },
  {
    "text": "wants to adopt CI CD reduce the snowflakes obviously reduce the set-up time we can provision these things I",
    "start": "951890",
    "end": "958280"
  },
  {
    "text": "think in less than 10 minutes and enforce the security controls that sort",
    "start": "958280",
    "end": "964910"
  },
  {
    "text": "of the freedom with guardrails that I hinted at before and with that I'm gonna pass the mic on to KC and he's going to",
    "start": "964910",
    "end": "972980"
  },
  {
    "text": "talk in depth about the tooling that we've actually built to do this all right thank you James",
    "start": "972980",
    "end": "980170"
  },
  {
    "text": "all right good afternoon my name is Casey Lee I work for Stella j't we're an AWS premier consulting partner and we",
    "start": "980960",
    "end": "988550"
  },
  {
    "text": "specialize in DevOps automation and we've had the privilege of working with James and 3m over the past months on",
    "start": "988550",
    "end": "994250"
  },
  {
    "text": "their transformation and the work they're doing around building these pipeline factories and it becomes pretty",
    "start": "994250",
    "end": "1000130"
  },
  {
    "text": "apparent when you hear James tell the story that the challenge is that 3m was having really boiled down to two main",
    "start": "1000130",
    "end": "1006670"
  },
  {
    "text": "things the first is that of autonomy they wanted their teams to have autonomy",
    "start": "1006670",
    "end": "1012100"
  },
  {
    "text": "to be able to control when they're delivering their software to production and then the second challenge that they",
    "start": "1012100",
    "end": "1017410"
  },
  {
    "text": "had was governance they didn't want to give that up they still wanted to be able to ensure that the organization was",
    "start": "1017410",
    "end": "1022480"
  },
  {
    "text": "able to comply with the regulation that they were held to and so that's where these pipeline factories come in and so",
    "start": "1022480",
    "end": "1027910"
  },
  {
    "text": "today what I'd like to talk about are three parts of the solution that we've implemented at 3m that help to achieve",
    "start": "1027910",
    "end": "1034270"
  },
  {
    "start": "1029000",
    "end": "1101000"
  },
  {
    "text": "both of those challenges the first thing I'm going to talk about our continuous delivery pipelines and how we built",
    "start": "1034270",
    "end": "1040480"
  },
  {
    "text": "these pipelines that allow the teams to control when their software goes to production we'll go into details about",
    "start": "1040480",
    "end": "1046089"
  },
  {
    "text": "how the pipeline works and how it met the method needs second thing we're going to talk about is self service and",
    "start": "1046089",
    "end": "1052780"
  },
  {
    "text": "what self service not only did we give the team's the ability to control when they're putting their software to production but also give them ownership",
    "start": "1052780",
    "end": "1058780"
  },
  {
    "text": "of creating and managing those pipelines directly what's cool about self-service is not only does it help address the",
    "start": "1058780",
    "end": "1065320"
  },
  {
    "text": "autonomy challenge and giving the team's what they needed it also helps to address the governance because we're",
    "start": "1065320",
    "end": "1071080"
  },
  {
    "text": "able to come up with automation that allows the teams to build those pipelines in a prescriptive and",
    "start": "1071080",
    "end": "1077470"
  },
  {
    "text": "compliant manner the last piece that I'm going to talk about is monitoring and how we put automation in place that",
    "start": "1077470",
    "end": "1084340"
  },
  {
    "text": "monitors things that the development teams are creating to ensure the compliance is being met so let's start",
    "start": "1084340",
    "end": "1090640"
  },
  {
    "text": "off with continuous delivery for continuous delivery we ended up using AWS as code pipeline service it's a",
    "start": "1090640",
    "end": "1097870"
  },
  {
    "text": "managed service for doing continuous delivery pipelines and let's let's review what the problem was",
    "start": "1097870",
    "end": "1104140"
  },
  {
    "start": "1101000",
    "end": "1147000"
  },
  {
    "text": "so the the original problem was that development teams had a manual handoff with the operations teams and the",
    "start": "1104140",
    "end": "1110980"
  },
  {
    "text": "operations team would then orchestrate the provisioning of the sure and configuration of it in the different environments now this was a",
    "start": "1110980",
    "end": "1118190"
  },
  {
    "text": "completely manual there's plenty of automation that the operations team had in place to configure those environments but the challenge the challenge here is",
    "start": "1118190",
    "end": "1125450"
  },
  {
    "text": "that the orchestration of that automation was done by human and so there was this handoff that was",
    "start": "1125450",
    "end": "1131990"
  },
  {
    "text": "error-prone and then there was this impediment where there was one group that did all of that automation and this",
    "start": "1131990",
    "end": "1138320"
  },
  {
    "text": "is important you can't miss this just because you built out some bits of automation doesn't mean you've accomplished continuous delivery and so",
    "start": "1138320",
    "end": "1145549"
  },
  {
    "text": "that's where the pipeline comes in so what we did was we put in the AWS code",
    "start": "1145549",
    "end": "1150799"
  },
  {
    "start": "1147000",
    "end": "1340000"
  },
  {
    "text": "pipeline service as the solution to orchestrate that automation through the",
    "start": "1150799",
    "end": "1156049"
  },
  {
    "text": "different environments a couple things to point out about code pipeline and the pipeline's that we build first of all",
    "start": "1156049",
    "end": "1161539"
  },
  {
    "text": "the code pipelines were the only path to production so there was no manual",
    "start": "1161539",
    "end": "1166639"
  },
  {
    "text": "process by which code was getting put in this was the path to production second",
    "start": "1166639",
    "end": "1172100"
  },
  {
    "text": "thing to note is that the way the pipeline's were triggered was through commits so the developers would push",
    "start": "1172100",
    "end": "1177289"
  },
  {
    "text": "their code into code commit those the git repo that we were using code commit is that AWS managed to get repository",
    "start": "1177289",
    "end": "1182899"
  },
  {
    "text": "when the commits happen code pipeline triggers now why do we do that we do that because we want to keep the batch",
    "start": "1182899",
    "end": "1188720"
  },
  {
    "text": "size as small as possible we don't want to build up these big chunks of code that go to production we want small",
    "start": "1188720",
    "end": "1194029"
  },
  {
    "text": "batch sizes ultimately to decrease risk in these were production deployment next",
    "start": "1194029",
    "end": "1199429"
  },
  {
    "text": "thing you'll notice about these pipelines is that there's one pipeline for deployable artifact we actually",
    "start": "1199429",
    "end": "1204649"
  },
  {
    "text": "consider it to be an anti-pattern to have multiple pipelines representing each environment because if you do that you're back to where you started where",
    "start": "1204649",
    "end": "1210980"
  },
  {
    "text": "somebody has to orchestrate which pipeline to run as the builds come off the build system so one pipeline starts",
    "start": "1210980",
    "end": "1217549"
  },
  {
    "text": "its source promotes through all the environments and ends in production the",
    "start": "1217549",
    "end": "1223190"
  },
  {
    "text": "other thing with these pipelines is the only manual input to the pipelines are manual approvals that are yes or no",
    "start": "1223190",
    "end": "1230659"
  },
  {
    "text": "allow the pipeline to proceed or reject terminate the pipeline go back to square one that's the only place where humans",
    "start": "1230659",
    "end": "1236750"
  },
  {
    "text": "are involved in the pipeline and then the last thing is that all infrastructure is managed through cloud",
    "start": "1236750",
    "end": "1242299"
  },
  {
    "text": "formation all infrastructures manages code and what's cool about this is all the infrastructure to run the app the",
    "start": "1242299",
    "end": "1247730"
  },
  {
    "text": "low bouncers the ec2 instances the RDS databases those are all defined in cloud formations stored in the repository and",
    "start": "1247730",
    "end": "1255170"
  },
  {
    "text": "owned by the developers developers not only control when they're releasing the software but what the infrastructure",
    "start": "1255170",
    "end": "1260300"
  },
  {
    "text": "looks like that their application runs on so let's take a look at what this",
    "start": "1260300",
    "end": "1265550"
  },
  {
    "text": "pipeline actually looks like so as I said we're using AWS code pipeline a pipeline consists of a series of stages",
    "start": "1265550",
    "end": "1271790"
  },
  {
    "text": "each stage consists of a series of actions what we're looking at here is",
    "start": "1271790",
    "end": "1277040"
  },
  {
    "text": "one stage in the pipeline this is for managing the deployment of one specific environment when you configure these",
    "start": "1277040",
    "end": "1284030"
  },
  {
    "text": "actions they run in in series one after the other you can configure actions to",
    "start": "1284030",
    "end": "1289220"
  },
  {
    "text": "run in parallel two if you prefer and the other great thing that code pipeline offers is native integrations to tons of",
    "start": "1289220",
    "end": "1295160"
  },
  {
    "text": "other AWS services for example code commit is the trigger for this pipeline you've got integration with code build",
    "start": "1295160",
    "end": "1301100"
  },
  {
    "text": "for doing build type activity you've got integration with cloud formation natively integration with code deploy",
    "start": "1301100",
    "end": "1306470"
  },
  {
    "text": "and then you can integrate it with other third party things like Jenkins as you'll see we've done in a little bit so",
    "start": "1306470",
    "end": "1312680"
  },
  {
    "text": "let's walk through this pipeline our pipeline starts with code commit and you'll notice that there's two actions",
    "start": "1312680",
    "end": "1318860"
  },
  {
    "text": "in the source stage we've got an application source and we've got a AC source infrastructure as code source so",
    "start": "1318860",
    "end": "1325250"
  },
  {
    "text": "the reason we've got two different coachman repositories is we've separated the application code from the infrastructure code and this was done",
    "start": "1325250",
    "end": "1331610"
  },
  {
    "text": "intentionally so that you can as I am policies to control who has access to the source code versus who has access to",
    "start": "1331610",
    "end": "1338030"
  },
  {
    "text": "the infrastructure code next we go to the configure stage of the pipeline and",
    "start": "1338030",
    "end": "1344300"
  },
  {
    "start": "1340000",
    "end": "1389000"
  },
  {
    "text": "the action that we have in there is for seeding Jenkins jobs now we use Jenkins",
    "start": "1344300",
    "end": "1349760"
  },
  {
    "text": "to implement many of the steps later on in the pipeline but somehow those Jenkins jobs have to be configured we",
    "start": "1349760",
    "end": "1355820"
  },
  {
    "text": "don't want developers in clicking around Jenkins to configure Jenkins jobs so we use job DSL job DSL allows you to define",
    "start": "1355820",
    "end": "1362810"
  },
  {
    "text": "Jenkins jobs in in your code and then the pipeline always runs all of your job",
    "start": "1362810",
    "end": "1369710"
  },
  {
    "text": "DSL to set up the jobs for you before it proceeds to actually using those jobs so",
    "start": "1369710",
    "end": "1374960"
  },
  {
    "text": "here we've got a sample job usl assets of a maven job uses your pom.xml on the source in the root of your repo",
    "start": "1374960",
    "end": "1381380"
  },
  {
    "text": "and runs a series of mavin goals now keep in mind remember this isn't actually running mavin here this is just",
    "start": "1381380",
    "end": "1387950"
  },
  {
    "text": "creating the Jenkins job now we get to the part where we actually get to run the Jenkins job we move to the build",
    "start": "1387950",
    "end": "1393980"
  },
  {
    "start": "1389000",
    "end": "1410000"
  },
  {
    "text": "stage of the pipeline in the build stage the primary thing to focus on here is we're building the source code this is",
    "start": "1393980",
    "end": "1400010"
  },
  {
    "text": "where we're using maven to do things like unit testing static analysis as it was and then we're Altima compared",
    "start": "1400010",
    "end": "1407480"
  },
  {
    "text": "artifact that'll be used later on in the pipeline then we get to our first manual",
    "start": "1407480",
    "end": "1413210"
  },
  {
    "start": "1410000",
    "end": "1424000"
  },
  {
    "text": "gate in the pipeline this is just approve or reject that's all that can happen here this sits in front of the",
    "start": "1413210",
    "end": "1419330"
  },
  {
    "text": "environment that's about to be deployed - if everything looks good we approve it it moves into the environment and then",
    "start": "1419330",
    "end": "1425299"
  },
  {
    "text": "we move on to the infrastructure action in this case we're using cloud formation to provision all the infrastructure",
    "start": "1425299",
    "end": "1431750"
  },
  {
    "text": "necessary to run the application we're provisioning auto-scaling groups load balancers RDS databases instances",
    "start": "1431750",
    "end": "1437990"
  },
  {
    "text": "whatever it is the application needs to run pipeline waits for the infrastructure to be created once it's",
    "start": "1437990",
    "end": "1444710"
  },
  {
    "text": "created we use AWS code deploy to take the artifact that was packaged up earlier on in the pipeline and deploy it",
    "start": "1444710",
    "end": "1451250"
  },
  {
    "text": "into the brand-new infrastructure that was launched once the infrastructure is",
    "start": "1451250",
    "end": "1457400"
  },
  {
    "start": "1455000",
    "end": "1472000"
  },
  {
    "text": "up once the applications configured now we can use Jenkins run our end end tests against the new infrastructure and the",
    "start": "1457400",
    "end": "1464030"
  },
  {
    "text": "new deployment that's where you'd use something like selenium to run tests and validate the functional and",
    "start": "1464030",
    "end": "1469280"
  },
  {
    "text": "non-functional requirements of the application if all looks good we move on to the last action that we see in these",
    "start": "1469280",
    "end": "1476000"
  },
  {
    "text": "stages which is a Bluegreen switch in the blue-green switch what we're doing is taking the new infrastructure the new",
    "start": "1476000",
    "end": "1481460"
  },
  {
    "text": "auto scaling group called the green auto scaling group and we're adding it to the existing load balancer so for a brief",
    "start": "1481460",
    "end": "1488960"
  },
  {
    "text": "period of time both of the old auto scaling group called the blue auto scaling group and the new auto scaling",
    "start": "1488960",
    "end": "1494419"
  },
  {
    "text": "group that was just provisioned is in the ELB once the health checks are good on the new auto scaling group we then",
    "start": "1494419",
    "end": "1499730"
  },
  {
    "text": "disconnect pull out the old auto scaling group the blue auto scaling group pull it out of the elbe and now we're ready",
    "start": "1499730",
    "end": "1505220"
  },
  {
    "text": "to take traffic in that environment and so that covers what these pipelines look like these were the pipeline's that we",
    "start": "1505220",
    "end": "1511460"
  },
  {
    "text": "created for the teams now we got to get into self-service because there's another challenge that",
    "start": "1511460",
    "end": "1517270"
  },
  {
    "text": "comes up we've got these pipelines in place that we want to use but the question of how are we going to create",
    "start": "1517270",
    "end": "1522760"
  },
  {
    "text": "them comes up and who's going to create them we don't want snowflake pipelines as",
    "start": "1522760",
    "end": "1528340"
  },
  {
    "text": "James talked about and as you saw those pipelines tend to be pretty complex so we need a way that developers can create",
    "start": "1528340",
    "end": "1535060"
  },
  {
    "text": "these pipelines without having to re-engineer and reinvent the wheel every time there's another problem if you",
    "start": "1535060",
    "end": "1541060"
  },
  {
    "text": "notice there's some resources that need to get created for these pipelines that tend to be very sensitive resources",
    "start": "1541060",
    "end": "1546760"
  },
  {
    "text": "resources that need to be governed things like kms keys s3 buckets I am rolls these aren't things that we want",
    "start": "1546760",
    "end": "1553330"
  },
  {
    "text": "the developers to have access to create directly so how do we allow the",
    "start": "1553330",
    "end": "1558400"
  },
  {
    "text": "developers to create these pipelines if we don't wanna give them access to those resources and that's where the idea the",
    "start": "1558400",
    "end": "1564250"
  },
  {
    "text": "pipeline Factory came about and so what we did was we used a managed service",
    "start": "1564250",
    "end": "1569290"
  },
  {
    "text": "that AWA das has called a SS Service Catalog to implement the pipeline Factory so",
    "start": "1569290",
    "end": "1576370"
  },
  {
    "start": "1575000",
    "end": "1683000"
  },
  {
    "text": "let's discuss Service Catalog real quick just to make sure we're all on the same page here Service Catalog is a service",
    "start": "1576370",
    "end": "1582100"
  },
  {
    "text": "that has two real sets of users you have administrators on one side and end-users on the other side in step one the",
    "start": "1582100",
    "end": "1588820"
  },
  {
    "text": "administrator defines cloud formation templates nothing special just regular old confirmation and you expose",
    "start": "1588820",
    "end": "1594520"
  },
  {
    "text": "parameters out of the template as you normally would step two you take that template you register it with Service",
    "start": "1594520",
    "end": "1599770"
  },
  {
    "text": "Catalog as what's called a product once the product has been registered the",
    "start": "1599770",
    "end": "1604990"
  },
  {
    "text": "administrator then creates a portfolio for all those products that they just created when the portfolio has been",
    "start": "1604990",
    "end": "1612190"
  },
  {
    "text": "created the administrator in step four can then grant access to I am users",
    "start": "1612190",
    "end": "1618010"
  },
  {
    "text": "groups and roles to use that portfolio and launch products out of that portfolio there's one other step that",
    "start": "1618010",
    "end": "1624490"
  },
  {
    "text": "happens here the administrator also passes a service role in to Service",
    "start": "1624490",
    "end": "1629830"
  },
  {
    "text": "Catalog that is the elevated rights that's that's what gives service catalog the right to create those resources that",
    "start": "1629830",
    "end": "1636760"
  },
  {
    "text": "we don't want to let developers create directly so once that's done we move all of our onto the other side of the screen in step five the end users are now able",
    "start": "1636760",
    "end": "1645040"
  },
  {
    "text": "to browse the products that they have access to they can either do this the the UI the console or through CLI and then they can",
    "start": "1645040",
    "end": "1653440"
  },
  {
    "text": "launch products that they have access to launch when they launch the product you have to pass the parameters from the",
    "start": "1653440",
    "end": "1658840"
  },
  {
    "text": "cloud formation template and then service catalog takes over in step seven and it talks to cloud formation using",
    "start": "1658840",
    "end": "1665320"
  },
  {
    "text": "the template that was registered with it to create a stack as prescribed by the",
    "start": "1665320",
    "end": "1670480"
  },
  {
    "text": "administrator you then have notifications available in step eight to both the administrators and to the end users through SNS and then lastly you",
    "start": "1670480",
    "end": "1677710"
  },
  {
    "text": "can use lambdas to do maintenance against these products that have been provisioning so now if we plug that back",
    "start": "1677710",
    "end": "1684640"
  },
  {
    "text": "into our picture we see that Service Catalog becomes the engine for our pipeline Factory we've solved the",
    "start": "1684640",
    "end": "1690850"
  },
  {
    "text": "problem of autonomy developers can now go to Service Catalog and provision the pipeline's as they need we solved the",
    "start": "1690850",
    "end": "1697840"
  },
  {
    "text": "problem of lease privilege because the developers didn't get access to those resources rather they only got access to",
    "start": "1697840",
    "end": "1704050"
  },
  {
    "text": "the specific products that we wanted them to use we solved the problem of governance because we've described the",
    "start": "1704050",
    "end": "1711130"
  },
  {
    "text": "pipelines in cloud formation and registered it and therefore provided a very opinionated approach to what those",
    "start": "1711130",
    "end": "1717760"
  },
  {
    "text": "pipelines ought to be so let's do a demo",
    "start": "1717760",
    "end": "1724710"
  },
  {
    "start": "1721000",
    "end": "2232000"
  },
  {
    "text": "what I'd like to demo is the pipeline that we built the pipeline factory that",
    "start": "1732679",
    "end": "1738470"
  },
  {
    "text": "we built for 3m using service catalog",
    "start": "1738470",
    "end": "1743080"
  },
  {
    "text": "now full disclosure here this is a pre-recorded demo because we are going to be launching CloudFormation stacks",
    "start": "1750370",
    "end": "1756130"
  },
  {
    "text": "and running pipelines that take many minutes and we don't want to wait for that there's nothing to do with the fact that I'm terrified of doing a live demo",
    "start": "1756130",
    "end": "1763559"
  },
  {
    "text": "alright so this is the console for AWS Service Catalog and what we see here is",
    "start": "1764039",
    "end": "1769240"
  },
  {
    "text": "there's two products available for me to launch there's the Blackbird the pipeline and the team so we're gonna start by",
    "start": "1769240",
    "end": "1774940"
  },
  {
    "text": "creating a team a team represents the Jenkins instances that need to be created so that we can then use for",
    "start": "1774940",
    "end": "1781029"
  },
  {
    "text": "pipelines we give the the product a name we'll call this the reinvent team and",
    "start": "1781029",
    "end": "1786279"
  },
  {
    "text": "then we're going to choose a version each version has a corresponding CloudFormation template that backs it",
    "start": "1786279",
    "end": "1791409"
  },
  {
    "text": "will go in launch a version one instance of this product now we see the parameters that were exposed to the",
    "start": "1791409",
    "end": "1798070"
  },
  {
    "text": "cloud formation template we're going to put some parameters in these ultimately into becoming tags that we put on the",
    "start": "1798070",
    "end": "1803169"
  },
  {
    "text": "stacks and the team name we need so that we can refer back to it once we start creating pipelines put this information",
    "start": "1803169",
    "end": "1810700"
  },
  {
    "text": "in we move forward keep going through we're not going to setup any notifications at this point and then",
    "start": "1810700",
    "end": "1817779"
  },
  {
    "text": "we'll get to a screen where we get to preview the stack that's about to created and then go ahead and click Launch once we click launch service",
    "start": "1817779",
    "end": "1826450"
  },
  {
    "text": "catalog now does the job of talking to CloudFormation and creating the stack for us so we see that the the product",
    "start": "1826450",
    "end": "1833679"
  },
  {
    "text": "exists its associated with version one like we desired and we can see that it's currently on an in-progress State we'll",
    "start": "1833679",
    "end": "1840880"
  },
  {
    "text": "just refresh this a little bit we see that cloud formation stack has been associated and we're going to jump over there and take a look at the cloud",
    "start": "1840880",
    "end": "1847690"
  },
  {
    "text": "formation console next to see what's starting to create so here we're looking at the cloud formation console and we",
    "start": "1847690",
    "end": "1854409"
  },
  {
    "text": "see that we have various stacks starting to come in progress and go through completed state we've got sub stacks for",
    "start": "1854409",
    "end": "1860320"
  },
  {
    "text": "buckets sub stacks for rolls sub stacks for KMS keys and what also is happening",
    "start": "1860320",
    "end": "1866710"
  },
  {
    "text": "here is some of these nested stacks are actually stacks in other accounts because remember we have one pipeline",
    "start": "1866710",
    "end": "1871990"
  },
  {
    "text": "that needs to be able to deploy across account so we're creating buckets Keys rolls in many accounts all through this",
    "start": "1871990",
    "end": "1877690"
  },
  {
    "text": "one product and service catalog and now we're waiting for our Jenkins auto scaling group to come up and once that's",
    "start": "1877690",
    "end": "1883179"
  },
  {
    "text": "done our staff is now complete we can jump back over to the console for Service Catalog and",
    "start": "1883179",
    "end": "1889269"
  },
  {
    "text": "we'll be able to confirm that it also shows that it's completed we have outputs from the stacks we have",
    "start": "1889269",
    "end": "1895899"
  },
  {
    "text": "the jenkins URL and we can click on that to look at the new jenkins cluster that was just created for us so we'll go",
    "start": "1895899",
    "end": "1902379"
  },
  {
    "text": "ahead and click on the jenkins URL and what we see is a brand new Jenkins",
    "start": "1902379",
    "end": "1909100"
  },
  {
    "text": "instance that has no jobs except for backup job as we'd expect it's brand new if there's no jobs created yet it's not",
    "start": "1909100",
    "end": "1914559"
  },
  {
    "text": "until the pipeline runs and the job you sell runs so we'll start to see some jobs show so let's go and do that let's",
    "start": "1914559",
    "end": "1923109"
  },
  {
    "text": "jump back over to Service Catalog and we'll choose the pipeline product and",
    "start": "1923109",
    "end": "1929409"
  },
  {
    "text": "start launching that so again we have to pick a name call it reinvent 2017",
    "start": "1929409",
    "end": "1936489"
  },
  {
    "text": "widgets cuz I'm not very creative and then we'll choose a version then we'll",
    "start": "1936489",
    "end": "1943840"
  },
  {
    "text": "get the same prompt where we can put in the parameters for the cloud formation stack we're gonna pick an email address that's going to be used for",
    "start": "1943840",
    "end": "1949779"
  },
  {
    "text": "notifications as the pipeline progresses we've got to put in some more information for tags on the resources",
    "start": "1949779",
    "end": "1955419"
  },
  {
    "text": "that are created and then we have to point back to the team that we just created so that we know which Jenkins",
    "start": "1955419",
    "end": "1960639"
  },
  {
    "text": "instance to target with these pipelines and we next through this get to our",
    "start": "1960639",
    "end": "1966279"
  },
  {
    "text": "confirmation screen where we go ahead and review everything and once everything looks good we're gonna go ahead and launch our stack so same story",
    "start": "1966279",
    "end": "1974889"
  },
  {
    "text": "here we see some new cloud formation stacks are gonna start showing up we've got a code commit repository being",
    "start": "1974889",
    "end": "1980799"
  },
  {
    "text": "created we've got a code pipeline being created and once this completes we'll be",
    "start": "1980799",
    "end": "1986499"
  },
  {
    "text": "able to jump back over to Service Catalog and we'll be able to confirm that the",
    "start": "1986499",
    "end": "1992379"
  },
  {
    "text": "Service Catalog sees that the confirmation stack has been completed and then we'll also get a new output",
    "start": "1992379",
    "end": "1998739"
  },
  {
    "text": "output for our pipeline URL where we can jump over to code pipeline and now look at the brand new pipeline that was just",
    "start": "1998739",
    "end": "2004739"
  },
  {
    "text": "created for us through Service Catalog this looks very similar to the pipeline I was showing in the slides earlier we",
    "start": "2004739",
    "end": "2010440"
  },
  {
    "text": "see we've got our building packaged stage and then we've got our stages for all the environments that are deployed and tested against so",
    "start": "2010440",
    "end": "2017730"
  },
  {
    "text": "see that the source code is currently being run there's being pulled down from code command let's go and click on code commit and look at the brand new code",
    "start": "2017730",
    "end": "2024060"
  },
  {
    "text": "commit repo that was created now there's a bunch of files in here and you might be thinking well how did these files get",
    "start": "2024060",
    "end": "2030150"
  },
  {
    "text": "here we see the code commit repository with cloud formation with job DSL that",
    "start": "2030150",
    "end": "2036780"
  },
  {
    "text": "is needed for the pipeline to work the developers can then change it but this gives them a starting point that has a",
    "start": "2036780",
    "end": "2042270"
  },
  {
    "text": "green pipeline you don't want to give them a pipeline that's red and say good luck so this gives them a green pipeline",
    "start": "2042270",
    "end": "2047730"
  },
  {
    "text": "that has the job DSL the CloudFormation everything they need to to start working with their pipeline if we look at the",
    "start": "2047730",
    "end": "2056370"
  },
  {
    "text": "commit history sure enough there's only one commit on this repo three minutes ago we implemented this to a lambda",
    "start": "2056370",
    "end": "2061500"
  },
  {
    "text": "function that serves as a custom cloud formation resource on the stack that gets created so now through the magic of",
    "start": "2061500",
    "end": "2069810"
  },
  {
    "text": "post-production let's watch as this pipeline progresses first let's jump over here let's look at our C job so in",
    "start": "2069810",
    "end": "2076080"
  },
  {
    "text": "our C job we see that C jobs run and now all of a sudden that Jenkins instance has a bunch of jobs to find these jobs",
    "start": "2076080",
    "end": "2081210"
  },
  {
    "text": "weren't here a minute ago when we looked these jobs all got created from the job DSL that was inside that code commit",
    "start": "2081210",
    "end": "2087240"
  },
  {
    "text": "repo those created these jobs will now support the rest of the pipeline as it progresses and deploys to the different",
    "start": "2087240",
    "end": "2093270"
  },
  {
    "text": "environments okay so now let's let the pipeline run we see we're going through",
    "start": "2093270",
    "end": "2098310"
  },
  {
    "text": "we're doing a build build passes we move on to an environment where we're launching cloud formation cloud",
    "start": "2098310",
    "end": "2104880"
  },
  {
    "text": "formation is going to spin I wish code pipeline always ran this fast it's going to launch a bunch of stacks for us an auto scaling group once",
    "start": "2104880",
    "end": "2112080"
  },
  {
    "text": "the infrastructure is done we use code deploy to deploy the war file that was compiled in Jenkins a little bit ago",
    "start": "2112080",
    "end": "2117890"
  },
  {
    "text": "once code deploy finishes we move on to the testing phase where we run some and then test and then we do the blue-green",
    "start": "2117890",
    "end": "2124140"
  },
  {
    "text": "switch at which point pipe lines gone on to the next stage and we're ready for an",
    "start": "2124140",
    "end": "2129540"
  },
  {
    "text": "approval one last thing I want to demonstrate which is how do we do changes to the pipeline Factory well in",
    "start": "2129540",
    "end": "2136080"
  },
  {
    "text": "this case let's upgrade our widgets pipeline to version 2 we noticed there was a version 2 out there so with the",
    "start": "2136080",
    "end": "2142230"
  },
  {
    "text": "version 2 all you have to do is choose the new version for your existing pipeline you could change parameters if",
    "start": "2142230",
    "end": "2147480"
  },
  {
    "text": "you want or you can just proceed and then you run update Service Catalog does the job of applying",
    "start": "2147480",
    "end": "2153690"
  },
  {
    "text": "that new template to that existing cloud formation stack and so by by using this approach we let service catalog and",
    "start": "2153690",
    "end": "2160620"
  },
  {
    "text": "cloud formation do the heavy lifting of converging changes onto an existing pipeline and so now we wait for Service",
    "start": "2160620",
    "end": "2168600"
  },
  {
    "text": "Catalog to do its thing we see it's showing version two which is good and Service Catalog sees that the change is",
    "start": "2168600",
    "end": "2174210"
  },
  {
    "text": "done and now we've just upgraded our pipeline from version one to version two",
    "start": "2174210",
    "end": "2179869"
  },
  {
    "text": "there was one thing I kind of glossed over there I want to go into a little more detail and that is when Service",
    "start": "2184310",
    "end": "2190200"
  },
  {
    "text": "Catalog creates that cloud formation stack it's having to create resources in other accounts that represent the other",
    "start": "2190200",
    "end": "2197520"
  },
  {
    "text": "environments the CI environment the test environment the prod environment each of those environments needs to have",
    "start": "2197520",
    "end": "2203010"
  },
  {
    "text": "resources set up so that this pipeline actually works we do this through a",
    "start": "2203010",
    "end": "2208610"
  },
  {
    "text": "lambda function that serves as a custom resource in the parent stack and the",
    "start": "2208610",
    "end": "2215400"
  },
  {
    "text": "lambda function then assumes a role in the other account and runs at CloudFormation template in that account",
    "start": "2215400",
    "end": "2220790"
  },
  {
    "text": "now CloudFormation has native support for nests and stacks the challenge is it",
    "start": "2220790",
    "end": "2226230"
  },
  {
    "text": "doesn't support cross account roles so we had to create a lambda function to solve that for us this is what this",
    "start": "2226230",
    "end": "2234240"
  },
  {
    "start": "2232000",
    "end": "2261000"
  },
  {
    "text": "looks like in code so this is a snippet of cloud formation that's creating the buckets in the Prada can't a couple",
    "start": "2234240",
    "end": "2241260"
  },
  {
    "text": "things to point out here you've got the assumed role that's where the AR n of the I M role in the other account is",
    "start": "2241260",
    "end": "2248070"
  },
  {
    "text": "passed in you've got the template URL this is URL to the mo file that serves as the CloudFormation template that's",
    "start": "2248070",
    "end": "2253980"
  },
  {
    "text": "going to be run in that other account and then you've got parameters like usual that you're passing in to that cloud formation stack and then the last",
    "start": "2253980",
    "end": "2263490"
  },
  {
    "start": "2261000",
    "end": "2306000"
  },
  {
    "text": "thing we did in the self-service side is we created a website where developers",
    "start": "2263490",
    "end": "2268680"
  },
  {
    "text": "could go to to support themselves on these pipelines it's not enough to just",
    "start": "2268680",
    "end": "2274650"
  },
  {
    "text": "build the tooling and then hope they can figure it out we needed a place where developers can go to onboard themselves",
    "start": "2274650",
    "end": "2280530"
  },
  {
    "text": "to solve common problems and also to learn about changing in the pipeline factory as we",
    "start": "2280530",
    "end": "2286220"
  },
  {
    "text": "come up with new releases as we change the I am structures we change bucket policies and we want teams to start",
    "start": "2286220",
    "end": "2292849"
  },
  {
    "text": "using these will publish a new version and then teams would go in as we saw self-service update their pipeline to",
    "start": "2292849",
    "end": "2299420"
  },
  {
    "text": "the newer version this documentation shows what's changed and how to do those migrations so that wraps up the",
    "start": "2299420",
    "end": "2308029"
  },
  {
    "start": "2306000",
    "end": "2318000"
  },
  {
    "text": "self-service part of the solution and brings us to the last section which is monitoring and this is our final step in",
    "start": "2308029",
    "end": "2314029"
  },
  {
    "text": "infor in ensuring that governance is maintained inside the organization the",
    "start": "2314029",
    "end": "2319670"
  },
  {
    "start": "2318000",
    "end": "2363000"
  },
  {
    "text": "first thing we did was we added CFN nag to our pipeline Stephan nag is a tool",
    "start": "2319670",
    "end": "2325069"
  },
  {
    "text": "that does static analysis of cloud formation templates this tool looks at your cloud formation and looks for any",
    "start": "2325069",
    "end": "2331190"
  },
  {
    "text": "potential security vulnerabilities like overly permissive security groups or externally Obie's or overly permissive",
    "start": "2331190",
    "end": "2337579"
  },
  {
    "text": "bucket policies I am roles we run C F n nag very early",
    "start": "2337579",
    "end": "2342859"
  },
  {
    "text": "in the pipeline at the same time that we're building the source code and this gives us a view into what the developers",
    "start": "2342859",
    "end": "2348589"
  },
  {
    "text": "are doing with cloud formation before we even get close to running the cloud formation in an actual account c FN AG",
    "start": "2348589",
    "end": "2355130"
  },
  {
    "text": "is an open source product that was developed at stella chen it's available at stella gence github repo urls on the",
    "start": "2355130",
    "end": "2361190"
  },
  {
    "text": "screen there also be a URL I'll share a little bit later next thing we did was we used a tool called cloud custodian",
    "start": "2361190",
    "end": "2367940"
  },
  {
    "start": "2363000",
    "end": "2402000"
  },
  {
    "text": "this is an open source tool the capital one put out and with cloud custodian you define policies and then you run those",
    "start": "2367940",
    "end": "2374599"
  },
  {
    "text": "policies as lambda functions in your accounts these lambda functions are triggered either on a scheduled basis",
    "start": "2374599",
    "end": "2380930"
  },
  {
    "text": "like a cron notation or in response to cloud trail events when things are happening in your account the rules will",
    "start": "2380930",
    "end": "2387499"
  },
  {
    "text": "look for certain patterns on the resources that are created and then it can either notify people that bad stuffs",
    "start": "2387499",
    "end": "2393380"
  },
  {
    "text": "happening in your account developers are doing things they shouldn't be doing or it can actually do immediate remediation",
    "start": "2393380",
    "end": "2398869"
  },
  {
    "text": "of those pilot policy violations here's a sample policy this policy is looking",
    "start": "2398869",
    "end": "2405319"
  },
  {
    "start": "2402000",
    "end": "2441000"
  },
  {
    "text": "for s3 buckets and it's attached to cloud trail so anytime the book put bucket ACL API call is made cloud trail",
    "start": "2405319",
    "end": "2414049"
  },
  {
    "text": "sends an event this triggers the lambda function that runs the policy this then looking for any buckets that have",
    "start": "2414049",
    "end": "2419780"
  },
  {
    "text": "global grants enabled or website hosting enabled and it does a couple things if",
    "start": "2419780",
    "end": "2425060"
  },
  {
    "text": "it finds a bucket in this state first of all it deletes the global grants then next it'll remove any website hosting",
    "start": "2425060",
    "end": "2430760"
  },
  {
    "text": "that's enabled on the bucket and then lastly it'll notify the resource owner and the central security team that the",
    "start": "2430760",
    "end": "2436730"
  },
  {
    "text": "bucket has the has been deleted or updated next example policy is a",
    "start": "2436730",
    "end": "2443930"
  },
  {
    "start": "2441000",
    "end": "2471000"
  },
  {
    "text": "periodic policy so this one's not responding to cloud trail events this one's just running every 30 minutes you",
    "start": "2443930",
    "end": "2449210"
  },
  {
    "text": "see the periodic the schedule line running every 30 minutes in cron type notation this is looking for ec2",
    "start": "2449210",
    "end": "2454910"
  },
  {
    "text": "instances that have the cost center tag or the team tag absent from the instance",
    "start": "2454910",
    "end": "2461060"
  },
  {
    "text": "and what this policy is going to do is it's going to first of all stop the instance and then it's going to mark the",
    "start": "2461060",
    "end": "2466670"
  },
  {
    "text": "instance to be terminated in two days from now another tool that we've used to",
    "start": "2466670",
    "end": "2473630"
  },
  {
    "start": "2471000",
    "end": "2525000"
  },
  {
    "text": "help with governance is a tool called governor this is a tool that was built internally at 3m and this integrates",
    "start": "2473630",
    "end": "2479390"
  },
  {
    "text": "with the pipelines and what this does is after the cloud formation is launched in an account governor then runs as an as",
    "start": "2479390",
    "end": "2487460"
  },
  {
    "text": "the next step in the pipeline as a lambda function it queries a set of rules that are defined inside of a",
    "start": "2487460",
    "end": "2493010"
  },
  {
    "text": "dynamo DB database some of those rules could be organizational level rules that are defined by the security organization",
    "start": "2493010",
    "end": "2498950"
  },
  {
    "text": "but some of those rules could be rules defined by the product teams themselves",
    "start": "2498950",
    "end": "2504200"
  },
  {
    "text": "and what's cool about that is these can also be functional tests so product teams can create tests that are actually",
    "start": "2504200",
    "end": "2510710"
  },
  {
    "text": "looking for functional requirements of their application in their infrastructure not just looking for security vulnerabilities if any of those",
    "start": "2510710",
    "end": "2517490"
  },
  {
    "text": "tests fail either to the product level test or the organizational level test causes the pipeline to fail and",
    "start": "2517490",
    "end": "2522550"
  },
  {
    "text": "developers go back to square one the last thing that we did for monitoring is",
    "start": "2522550",
    "end": "2529310"
  },
  {
    "start": "2525000",
    "end": "2599000"
  },
  {
    "text": "we created this pipeline dashboard if you're creating continuous delivery pipelines it's not enough just build the",
    "start": "2529310",
    "end": "2536359"
  },
  {
    "text": "pipeline and assume it's making an impact in your organization you have to measure and you have to adjust based on",
    "start": "2536359",
    "end": "2543140"
  },
  {
    "text": "what you see so what this dashboard is doing is its showing key indications of",
    "start": "2543140",
    "end": "2548180"
  },
  {
    "text": "those pipelines that tell whether or not they're doing job or not some of the metrics that we look at are things like cycle time how",
    "start": "2548180",
    "end": "2555469"
  },
  {
    "text": "often between production release we look at lead time how long does it take from a commit until the code hits production",
    "start": "2555469",
    "end": "2561799"
  },
  {
    "text": "we look at mean time between failure which is how often is your pipeline failing and then mean time to recovery",
    "start": "2561799",
    "end": "2567919"
  },
  {
    "text": "of the pipeline how quick does the team swarm and get that pipeline back to green then the last metric we look at is",
    "start": "2567919",
    "end": "2574159"
  },
  {
    "text": "feedback time which is how long does it take for a pipeline to fail we don't want to wait hours to find a bug we want",
    "start": "2574159",
    "end": "2580759"
  },
  {
    "text": "to find a bug as fast as possible we want a low feedback time it's not enough to just build pipelines and assume",
    "start": "2580759",
    "end": "2587419"
  },
  {
    "text": "they're working you have to measure if you're not measuring your pipelines you're doing it wrong you got to keep an eye on what's going on and be able to",
    "start": "2587419",
    "end": "2593149"
  },
  {
    "text": "adjust and make sure they're having the impact on the organization that you intend them to how does this work this",
    "start": "2593149",
    "end": "2600829"
  },
  {
    "start": "2599000",
    "end": "2643000"
  },
  {
    "text": "is a completely serverless solution so code pipeline already emits events to cloud watch for you so you get",
    "start": "2600829",
    "end": "2607039"
  },
  {
    "text": "that for free there's a lambda function that responds to the events and turns those into cloud watch metrics then we",
    "start": "2607039",
    "end": "2614359"
  },
  {
    "text": "have a dashboard that's looking at those metrics and generating what you just saw the trick is this with cloud watch",
    "start": "2614359",
    "end": "2620389"
  },
  {
    "text": "dashboards you can't do dynamic lookups like getting the list of pipelines is not something you can dynamically do in",
    "start": "2620389",
    "end": "2625789"
  },
  {
    "text": "the definition of your dashboard so what we had to do is write another lambda function that runs every five minutes",
    "start": "2625789",
    "end": "2630919"
  },
  {
    "text": "and it queries the cloud watch metrics looks for the discrete list of pipelines",
    "start": "2630919",
    "end": "2638089"
  },
  {
    "text": "as dimensions in the metrics and then generates the dashboard for us the",
    "start": "2638089",
    "end": "2644479"
  },
  {
    "start": "2643000",
    "end": "2687000"
  },
  {
    "text": "serverless application model SI m makes this very easy to do through cloud formation so this is the cloud formation",
    "start": "2644479",
    "end": "2649909"
  },
  {
    "text": "for the lambda front this is for the this the cloud formation for deploying the lambda function that that builds the",
    "start": "2649909",
    "end": "2655819"
  },
  {
    "text": "metrics for the dashboard you see the call out to the the Python code that serves as the implementation of the",
    "start": "2655819",
    "end": "2662499"
  },
  {
    "text": "lambda function and then you have an event section that says I want this lambda function to trigger on cloud",
    "start": "2662499",
    "end": "2669859"
  },
  {
    "text": "watch events specifically cloud watch events that are code pipeline sourced events and are of these different types",
    "start": "2669859",
    "end": "2676039"
  },
  {
    "text": "either start or stop pipeline executions stages or actions anytime a pipeline",
    "start": "2676039",
    "end": "2681589"
  },
  {
    "text": "stage or action starts or stops we want to get notified lambda function and does the metrics for us likewise",
    "start": "2681589",
    "end": "2688990"
  },
  {
    "start": "2687000",
    "end": "2705000"
  },
  {
    "text": "here's the CloudFormation for deploying the function that builds the dashboard it's very similar we point to some",
    "start": "2688990",
    "end": "2694420"
  },
  {
    "text": "Python code and then instead of triggering this based on cloud watch events we trigger it on a schedule you've got a crontab notation for the",
    "start": "2694420",
    "end": "2701290"
  },
  {
    "text": "schedule runs every five minutes and build our dashboard for us so let's",
    "start": "2701290",
    "end": "2707500"
  },
  {
    "start": "2705000",
    "end": "2811000"
  },
  {
    "text": "review what we've talked about we've talked about two things mainly autonomy and governance on the autonomy side",
    "start": "2707500",
    "end": "2714250"
  },
  {
    "text": "we've talked about how 3m achieved their autonomy through continuous delivery",
    "start": "2714250",
    "end": "2719290"
  },
  {
    "text": "pipelines and self service we looked at how the first thing they did was that all infrastructure was defined his code",
    "start": "2719290",
    "end": "2726030"
  },
  {
    "text": "in cloud formation or in job DSL we talked about how all deployments are done through that pipeline and the",
    "start": "2726030",
    "end": "2733030"
  },
  {
    "text": "initiation of the pipeline is triggered by code commit so that we can ensure small batch size and low risk last thing",
    "start": "2733030",
    "end": "2741010"
  },
  {
    "text": "was that for the pipeline the only manual step of the pipeline is an approve or reject that's the only human",
    "start": "2741010",
    "end": "2747550"
  },
  {
    "text": "input for the pipeline and then the last thing for autonomy was we use Service Catalog to enable that self-service for",
    "start": "2747550",
    "end": "2754450"
  },
  {
    "text": "the developers on the governance side we achieved governance through self-service",
    "start": "2754450",
    "end": "2760630"
  },
  {
    "text": "and through monitoring we started with saying let's use cloud formation to define the pipeline's",
    "start": "2760630",
    "end": "2765940"
  },
  {
    "text": "by doing so we were then able to use Service Catalog as the self-service engine for the pipeline Factory Service",
    "start": "2765940",
    "end": "2773890"
  },
  {
    "text": "Catalog provided the self-service that was needed and it also provided the governance that the organization",
    "start": "2773890",
    "end": "2779920"
  },
  {
    "text": "demanded by using cloud formation for provisioning the infrastructure we're able to use static analysis with CFN nag",
    "start": "2779920",
    "end": "2786819"
  },
  {
    "text": "to ensure that the stuff that the developers were doing was compliant with the organization's requirements we're",
    "start": "2786819",
    "end": "2792819"
  },
  {
    "text": "also using cloud custodian to assess and enforce not just dona phi but also remediate any in complying resources in",
    "start": "2792819",
    "end": "2800559"
  },
  {
    "text": "the account and then lastly we built that dashboard for monitoring the pipeline's",
    "start": "2800559",
    "end": "2805900"
  },
  {
    "text": "getting a single view on how healthy the pipeline's were so that we could adjust",
    "start": "2805900",
    "end": "2811710"
  },
  {
    "start": "2811000",
    "end": "2838000"
  },
  {
    "text": "I'm going to leave you with this URL this is a microsite that was created for this talk this has a list of",
    "start": "2811710",
    "end": "2819099"
  },
  {
    "text": "all of the projects that I talked about CFN add custodian pipeline dashboard and it also has a link to a bunch of blogs",
    "start": "2819099",
    "end": "2826329"
  },
  {
    "text": "there was a blog article just recently posted on Stella Joon's website about that dashboard encourage you to check this out and get more information with",
    "start": "2826329",
    "end": "2833680"
  },
  {
    "text": "that I'm gonna invite Nate and James back up and we've got some time for questions before we get into questions I",
    "start": "2833680",
    "end": "2847809"
  },
  {
    "start": "2838000",
    "end": "2939000"
  },
  {
    "text": "just wanted to say that link that he just shared I'm super happy to announce that within that link you'll find three",
    "start": "2847809",
    "end": "2855069"
  },
  {
    "text": "M's first open-source project on github which is the pipeline you'll find the source code to the pipeline dashboard",
    "start": "2855069",
    "end": "2861249"
  },
  {
    "text": "that a KC was demoing earlier very good so we've got a couple mics in the aisles",
    "start": "2861249",
    "end": "2867670"
  },
  {
    "text": "if you have any questions don't be shy",
    "start": "2867670",
    "end": "2873089"
  },
  {
    "text": "I'll start pointing at people in a second I have a question this is do you",
    "start": "2873089",
    "end": "2882849"
  },
  {
    "text": "hear me yes all right I'm Ethan Aldrich and my question is on",
    "start": "2882849",
    "end": "2888930"
  },
  {
    "text": "data governance and how you're managing",
    "start": "2888930",
    "end": "2894249"
  },
  {
    "text": "the date of it goes with applications that's probably a better question for",
    "start": "2894249",
    "end": "2900670"
  },
  {
    "text": "the security team team to be honest sorry",
    "start": "2900670",
    "end": "2905549"
  },
  {
    "text": "other questions don't be shy",
    "start": "2912400",
    "end": "2916359"
  },
  {
    "text": "so this is the first thing we ever open source I can tell you it was a fun",
    "start": "2925820",
    "end": "2931170"
  },
  {
    "text": "process but I certainly hoped to open source more things that my team is building I'm in the future",
    "start": "2931170",
    "end": "2937290"
  },
  {
    "text": "absolutely yeah could you describe a little bit more around the manual stem",
    "start": "2937290",
    "end": "2943860"
  },
  {
    "start": "2939000",
    "end": "2998000"
  },
  {
    "text": "and have you found any ways around automating that code review process so",
    "start": "2943860",
    "end": "2949110"
  },
  {
    "text": "the manual step is built there originally because as a gate because",
    "start": "2949110",
    "end": "2955320"
  },
  {
    "text": "most teams are starting out on this are not comfortable enough with the code freely flowing into the next level",
    "start": "2955320",
    "end": "2961530"
  },
  {
    "text": "environments certainly if they had a mature enough pipeline with mature enough testing and they were comfortable",
    "start": "2961530",
    "end": "2967110"
  },
  {
    "text": "with that happening then the there there can be the discussion of let's remove the manual gate",
    "start": "2967110",
    "end": "2974480"
  },
  {
    "text": "sure right now we are about nine people yeah in your diagram so you had your RDS",
    "start": "2978900",
    "end": "2986130"
  },
  {
    "text": "instances in there how do you handle data migration between your deploys",
    "start": "2986130",
    "end": "2991940"
  },
  {
    "text": "liquid base is primarily what we are using for database migrations so some of",
    "start": "2991940",
    "end": "2999330"
  },
  {
    "start": "2998000",
    "end": "3087000"
  },
  {
    "text": "the infrastructure is not launched from scratch on every run in the pipeline so for example the load balancer is",
    "start": "2999330",
    "end": "3004600"
  },
  {
    "text": "maintained the DNS records are maintained from release release so those are updates that are happening that the",
    "start": "3004600",
    "end": "3010190"
  },
  {
    "text": "auto scaling group and the ec2 instances are the ones that are Bluegreen those other ones are launched new on every pipe and so the database is maintained",
    "start": "3010190",
    "end": "3017180"
  },
  {
    "text": "and preserved long pipeline runs yes you could actually if you needed to you could actually have multiple pipelines",
    "start": "3017180",
    "end": "3023270"
  },
  {
    "text": "that have different sections for this could be data centric right or",
    "start": "3023270",
    "end": "3028490"
  },
  {
    "text": "infrastructure that you never gets destroyed it doesn't have to have you kind of separate them out my rate of change right that's kind of how you look",
    "start": "3028490",
    "end": "3035450"
  },
  {
    "text": "at a pipeline and if you have different rates of change then you can have different pipelines that accommodate",
    "start": "3035450",
    "end": "3041510"
  },
  {
    "text": "that where those rates have changed so you got an automation engineering team sort of sort of this efforts and you",
    "start": "3041510",
    "end": "3048770"
  },
  {
    "text": "putting this everything with the code sort of changed that really that responsibility to the two engineers how",
    "start": "3048770",
    "end": "3055700"
  },
  {
    "text": "do you how do you keep them up to date with that that's throw technologists and then there's another sort of stuff they they learn sure so we we provide",
    "start": "3055700",
    "end": "3065000"
  },
  {
    "text": "training right so you know we've made a significant investment in AWS training",
    "start": "3065000",
    "end": "3070640"
  },
  {
    "text": "for the teams we provide a lot of documentation we provide this capability to embed with",
    "start": "3070640",
    "end": "3077150"
  },
  {
    "text": "the team who who may need that extra help and what was the last part of your",
    "start": "3077150",
    "end": "3085190"
  },
  {
    "text": "question sorry all right so here just the more the more documentation and in",
    "start": "3085190",
    "end": "3090950"
  },
  {
    "start": "3087000",
    "end": "3151000"
  },
  {
    "text": "the more oh I know what the Pete the other person we part we have I wanted mention was we have this concept of a",
    "start": "3090950",
    "end": "3097160"
  },
  {
    "text": "user contract so the person the team that's adopting the the pipeline factory",
    "start": "3097160",
    "end": "3102200"
  },
  {
    "text": "has to understand that these are going to be your responsibilities that your the your code deployments you're running",
    "start": "3102200",
    "end": "3108590"
  },
  {
    "text": "your infrastructure code you're owning X Y Z and and with that there is a",
    "start": "3108590",
    "end": "3115160"
  },
  {
    "text": "responsibility of my team which is the platform that builds all these things and then you know defining that upfront",
    "start": "3115160",
    "end": "3122240"
  },
  {
    "text": "and letting them understand what they have to know sort of enforce it forces them to have to go back in and study up",
    "start": "3122240",
    "end": "3129410"
  },
  {
    "text": "on and learn what they need to know before they adopt the framework I was curious if this model to the degree that",
    "start": "3129410",
    "end": "3136040"
  },
  {
    "text": "you're deploying public facing services could you comment on like Public DNS registration API gateway if you're using",
    "start": "3136040",
    "end": "3142460"
  },
  {
    "text": "that interest service or inter-service off if you're doing any of these things",
    "start": "3142460",
    "end": "3147620"
  },
  {
    "text": "how did you solve those details so on that the external side there's there's",
    "start": "3147620",
    "end": "3154100"
  },
  {
    "start": "3151000",
    "end": "3261000"
  },
  {
    "text": "proxies that are configured outside the pipeline's that we've run into for the Interop",
    "start": "3154100",
    "end": "3159320"
  },
  {
    "text": "service there's example there's a federated IDP that's doing tokens",
    "start": "3159320",
    "end": "3165530"
  },
  {
    "text": "between the service calls could you talk",
    "start": "3165530",
    "end": "3170750"
  },
  {
    "text": "a little bit about what it was like engaging with business and getting the business side to say like yes pipeline",
    "start": "3170750",
    "end": "3177170"
  },
  {
    "text": "factories we need these is gonna make you know us more agile better I think",
    "start": "3177170",
    "end": "3182870"
  },
  {
    "text": "that's interesting good question so I've been at 3m for a year and that notion",
    "start": "3182870",
    "end": "3189230"
  },
  {
    "text": "had started the at least and its infancy right before I came along and I and I",
    "start": "3189230",
    "end": "3199160"
  },
  {
    "text": "was really driven in fact by my my boss and and the the Rd team that that we",
    "start": "3199160",
    "end": "3207650"
  },
  {
    "text": "work and I'm not sure quite how much the business had influence on on that decision well and I think the business",
    "start": "3207650",
    "end": "3213320"
  },
  {
    "text": "actually drove it was not a technology I was there from the very beginning it really wasn't a it really wasn't",
    "start": "3213320",
    "end": "3221120"
  },
  {
    "text": "something that IT brought to the company or to the business the business actually worked hand in hand to get this",
    "start": "3221120",
    "end": "3229070"
  },
  {
    "text": "capability up and going because they had a need for it right so I think the key",
    "start": "3229070",
    "end": "3234740"
  },
  {
    "text": "to it is is is working with the business not necessarily working with IT right so",
    "start": "3234740",
    "end": "3242580"
  },
  {
    "text": "so that was pretty much almost 100% my question the only good I'd like to maybe add on",
    "start": "3242580",
    "end": "3248470"
  },
  {
    "text": "were there any parts that you had to kind of sell into the business process or were they just hey we want this",
    "start": "3248470",
    "end": "3254440"
  },
  {
    "text": "whatever you guys decide is the right answer and let us know what needed to do so I think I can I can answer that too",
    "start": "3254440",
    "end": "3261550"
  },
  {
    "text": "so realistically and I think if you talk to you know some of the the executives",
    "start": "3261550",
    "end": "3268000"
  },
  {
    "text": "and higher-ups over there at 3m what you'll hear is they they they they developed a magnet as as one of the",
    "start": "3268000",
    "end": "3277030"
  },
  {
    "text": "leaders calls it and the whole point is is you were never forced to use this",
    "start": "3277030",
    "end": "3282550"
  },
  {
    "text": "right that's not the point they literally built the magnet and everybody came to it there was no forcing anybody to do",
    "start": "3282550",
    "end": "3289180"
  },
  {
    "text": "anything right it was just the path of least resistance and every team saw that",
    "start": "3289180",
    "end": "3294190"
  },
  {
    "text": "anybody who went and used this got to got a heck of a lot further a lot faster than if they tried to pave their own way",
    "start": "3294190",
    "end": "3301900"
  },
  {
    "text": "right so I mean it's just essentially it's a magnet like he said that's it's exactly what it is it's a magnet that",
    "start": "3301900",
    "end": "3309160"
  },
  {
    "text": "you don't have to worry about pushing on anybody right it pulls so you use sorry",
    "start": "3309160",
    "end": "3316240"
  },
  {
    "text": "so you described with CloudFormation templates you're able to create these common build pipelines is there any way",
    "start": "3316240",
    "end": "3323770"
  },
  {
    "text": "that you all looked at treating that as a base pipeline and then teams could add on to it to make it more complex yeah so",
    "start": "3323770",
    "end": "3330100"
  },
  {
    "text": "as part of that pipeline provisioning process you can actually select a number",
    "start": "3330100",
    "end": "3336040"
  },
  {
    "text": "of different application types like a Windows application or a Linux application or a service application and",
    "start": "3336040",
    "end": "3341710"
  },
  {
    "text": "you get essentially a hello world application that is fully comes with a",
    "start": "3341710",
    "end": "3347500"
  },
  {
    "text": "fully green pipeline that is completely working so a team can then go back in",
    "start": "3347500",
    "end": "3353170"
  },
  {
    "text": "and modify that to their liking and implement their own application within that template so we actually built a",
    "start": "3353170",
    "end": "3359500"
  },
  {
    "text": "number of tools around how to how to template a source repository and push rendered code into that repository that",
    "start": "3359500",
    "end": "3367600"
  },
  {
    "text": "works with that particular teams pipeline so there's a bit of technology around doing that but yeah we support the notion of okay so that's",
    "start": "3367600",
    "end": "3374410"
  },
  {
    "text": "been identified upfront then sorry it's been identified upfront there's different sets of requires yes that's",
    "start": "3374410",
    "end": "3380830"
  },
  {
    "text": "part of it yes so that's like in the in the and the service catalog interface is where you would select the type of",
    "start": "3380830",
    "end": "3387210"
  },
  {
    "text": "pipeline that you wanted to build okay thank you one thing to add to that the template the template creates the",
    "start": "3387210",
    "end": "3393370"
  },
  {
    "text": "pipeline but the developer then can go where they want with it so it's kind of like picking a good starting point right yeah they're not locked in not stuck",
    "start": "3393370",
    "end": "3399730"
  },
  {
    "text": "with it okay sounds good with 60 scrum teams how big is your team",
    "start": "3399730",
    "end": "3407730"
  },
  {
    "text": "yeah my team is about nine people right now yeah I have a second question with a",
    "start": "3407730",
    "end": "3414690"
  },
  {
    "text": "Bluegreen switch that you provide through the pipeline know who you find somehow developer define the rules of",
    "start": "3414690",
    "end": "3421510"
  },
  {
    "text": "switching how do they switch off and the at the provisioning stage at the final",
    "start": "3421510",
    "end": "3428680"
  },
  {
    "text": "stage when you put another version in the load balancer when you find the automated rule of switching between two",
    "start": "3428680",
    "end": "3435160"
  },
  {
    "text": "versions so the the rules for defining when the switch so are you saying that the rules on when the switch or how the",
    "start": "3435160",
    "end": "3441610"
  },
  {
    "start": "3436000",
    "end": "3586000"
  },
  {
    "text": "switch happens yeah the rules that it is safe to switch so if it's safe to switch",
    "start": "3441610",
    "end": "3447340"
  },
  {
    "text": "is is governed by health checks so we add the auto scaling group to the load balancer and we wait for the load",
    "start": "3447340",
    "end": "3453490"
  },
  {
    "text": "balancer to have the to show all great all good health checks on the instances",
    "start": "3453490",
    "end": "3458830"
  },
  {
    "text": "in the green auto scaling group and health checks provided by developer team so yes so the health checks are built by",
    "start": "3458830",
    "end": "3463990"
  },
  {
    "text": "the development teams so the health check is something that is a part of the application and we have a configuration",
    "start": "3463990",
    "end": "3472240"
  },
  {
    "text": "for how the how to point to their health check but the team defines the health check and it's up to them to how good of",
    "start": "3472240",
    "end": "3478480"
  },
  {
    "text": "a health check they implement in their application it looks like you've had an",
    "start": "3478480",
    "end": "3486370"
  },
  {
    "text": "amazing journey for a year here to get to this place and it looks like a pretty awesome pipeline thank you what kind of",
    "start": "3486370",
    "end": "3493230"
  },
  {
    "text": "things are coming up that you're hearing are the new things that you need to start adding to",
    "start": "3493230",
    "end": "3498700"
  },
  {
    "text": "this yes I'm interested in containers so",
    "start": "3498700",
    "end": "3504150"
  },
  {
    "text": "that for us it's one of the next logical steps for teams it was a little bit",
    "start": "3504150",
    "end": "3510670"
  },
  {
    "text": "early and in the beginning to built-in container functionality from the start but based on where we are right now I'm",
    "start": "3510670",
    "end": "3516640"
  },
  {
    "text": "with what we built the containers is just another deployment methodology and said we the groundwork has been",
    "start": "3516640",
    "end": "3522160"
  },
  {
    "text": "established so it should be relatively straightforward going for it okay thanks good luck yeah thank you so",
    "start": "3522160",
    "end": "3530070"
  },
  {
    "text": "at the beginning of your presentation you talked about the whole driver behind this was go faster yeah what's the level",
    "start": "3530070",
    "end": "3538150"
  },
  {
    "text": "of improvement that you've seen and have you been able to articulate that back to the business in a form of a cost benefit",
    "start": "3538150",
    "end": "3545320"
  },
  {
    "text": "or the paying back the investment thus far the problem one of the the problems",
    "start": "3545320",
    "end": "3551410"
  },
  {
    "text": "was those metrics weren't being tracked very well and uniformly prior to this I",
    "start": "3551410",
    "end": "3558310"
  },
  {
    "text": "could tell you with some of our teams they had to wait weeks or days between",
    "start": "3558310",
    "end": "3565210"
  },
  {
    "text": "the deployments and now are doing the multiple deployments a day so you know anywhere from you know you know 200",
    "start": "3565210",
    "end": "3571870"
  },
  {
    "text": "percent to order of magnitude increase in the number of deployments actually congratulations thank you all right",
    "start": "3571870",
    "end": "3580600"
  },
  {
    "text": "thanks for coming [Applause]",
    "start": "3580600",
    "end": "3588420"
  }
]