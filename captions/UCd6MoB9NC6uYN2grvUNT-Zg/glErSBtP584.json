[
  {
    "start": "0",
    "end": "112000"
  },
  {
    "text": "[Music] hi my name is clint white coffin i'm an",
    "start": "370",
    "end": "6640"
  },
  {
    "text": "enterprise support manager here at aws and welcome to aws support you where we",
    "start": "6640",
    "end": "11840"
  },
  {
    "text": "share troubleshooting tips and best practices from aws support joining me today is ashwini mohan and rob hicarita",
    "start": "11840",
    "end": "19359"
  },
  {
    "text": "from aws support can you give us a quick introduction ashwini and rob",
    "start": "19359",
    "end": "24560"
  },
  {
    "text": "hi i'm ashwini mohan technical account manager at aws i'm based in austin texas",
    "start": "24560",
    "end": "30640"
  },
  {
    "text": "and i'm one of the rad53 subject matter expert hi everyone my name is rob pigretta and",
    "start": "30640",
    "end": "36800"
  },
  {
    "text": "i'm a principal technical account manager located in austin texas as well and i deal with customers uh helping",
    "start": "36800",
    "end": "42800"
  },
  {
    "text": "them to improve resiliency in their architecture and using best practices in aws so happy to be here today to help",
    "start": "42800",
    "end": "48239"
  },
  {
    "text": "perfect thanks ashwini and rob um so folks to the viewers online thanks for joining joining the stream we really",
    "start": "48239",
    "end": "53840"
  },
  {
    "text": "appreciate you taking a few minutes out of your busy day um today we're going to be introducing introducing you to some",
    "start": "53840",
    "end": "59520"
  },
  {
    "text": "ways that you can increase the reliability of your environment with native features that are built into",
    "start": "59520",
    "end": "65198"
  },
  {
    "text": "route 53 on the aws platform but before we get into the details today",
    "start": "65199",
    "end": "70960"
  },
  {
    "text": "a quick note to the viewers online and the attendees here today please feel free to use the chat window on the right",
    "start": "70960",
    "end": "76880"
  },
  {
    "text": "hand side of your screen ask your questions there and also please tell us where you're joining us uh from",
    "start": "76880",
    "end": "82799"
  },
  {
    "text": "today we definitely want to hear from you share your thoughts questions we'll be answering those live here um so rob",
    "start": "82799",
    "end": "89360"
  },
  {
    "text": "hey can you give us a quick rundown of what we're going to be talking about today absolutely thanks clint um so we're",
    "start": "89360",
    "end": "95280"
  },
  {
    "text": "going to be talking about how to increase reliability architectures using route 53 but before we get started in",
    "start": "95280",
    "end": "100560"
  },
  {
    "text": "some of the details or i'm going to let sweeney dive into some of those intricacies and she's our smee today i want to give a little brief introduction",
    "start": "100560",
    "end": "106720"
  },
  {
    "text": "on you know what route 53 is in case you're new to aws you haven't used service before um so route 53 is our dns",
    "start": "106720",
    "end": "113840"
  },
  {
    "start": "112000",
    "end": "164000"
  },
  {
    "text": "service that's going to allow you to host and register domain names uh in aws so you'll be able to register new",
    "start": "113840",
    "end": "119759"
  },
  {
    "text": "domains uh and then you'll be able to have public and private hosted as zones within route 53 that you can use for",
    "start": "119759",
    "end": "126399"
  },
  {
    "text": "your infrastructure from your you know public facing websites to your internal dns for applications that you may build",
    "start": "126399",
    "end": "132000"
  },
  {
    "text": "in aws uh we also have additional capabilities to route 53 such as route 53 resolvers",
    "start": "132000",
    "end": "138160"
  },
  {
    "text": "which will help you to integrate with your on-premise dns environments creating those inbound outbound resolvers that you can kind of create a",
    "start": "138160",
    "end": "143920"
  },
  {
    "text": "hybrid infrastructure using your uh you know dns and aws with your on-premise environment vice versa and then we have",
    "start": "143920",
    "end": "150640"
  },
  {
    "text": "a multitude of different record types for various use cases that we're going to kind of cover more in depth as we get going here today uh specifically",
    "start": "150640",
    "end": "157360"
  },
  {
    "text": "focusing on a couple uh that will really help with the resiliency in your architecture but we do have quite a few so before we get",
    "start": "157360",
    "end": "164080"
  },
  {
    "start": "164000",
    "end": "334000"
  },
  {
    "text": "into that i'm going to go forward here and move into talking about kind of the infrastructure of route 53",
    "start": "164080",
    "end": "170480"
  },
  {
    "text": "and a little bit about anycast here that we use so route53 is our highly available dns service the data plane",
    "start": "170480",
    "end": "176319"
  },
  {
    "text": "size has a 100 uptime uh reliability on it and it's done so via this kind of",
    "start": "176319",
    "end": "181760"
  },
  {
    "text": "worldwide distributed architecture of uh data plane essentially items that are making that 100 uptime",
    "start": "181760",
    "end": "188879"
  },
  {
    "text": "so uh we have here a variety of dns servers or infrastructure that are rather around the world as you can see",
    "start": "188879",
    "end": "196000"
  },
  {
    "text": "and we do this in high availability using any cast as a service so if you're familiar with uh amazon's global",
    "start": "196000",
    "end": "201599"
  },
  {
    "text": "accelerator it uses a similar technology called anycast to be able to use as you can see here these same ip addresses",
    "start": "201599",
    "end": "207440"
  },
  {
    "text": "across the world so when there might be an issue say in sydney or something with traffic there it's going",
    "start": "207440",
    "end": "213360"
  },
  {
    "text": "to kind of be able to reconvert to be able to still route you to the nearest location for dns and be",
    "start": "213360",
    "end": "219440"
  },
  {
    "text": "able to implement use this and so you have these resolvers that will be located throughout the different areas so as your infrastructure targets route",
    "start": "219440",
    "end": "225920"
  },
  {
    "text": "23 for these you're going to have a very resilient um availability for dns",
    "start": "225920",
    "end": "231120"
  },
  {
    "text": "and we do that locally in each side if we move forward a little bit into shuffle sharding uh which we talked",
    "start": "231120",
    "end": "236640"
  },
  {
    "text": "about previously on an episode where we met with one of the well architected essays and he covered in depth shuffle",
    "start": "236640",
    "end": "242159"
  },
  {
    "text": "sharding so we'll actually drop a link into the chat as well to that episode in case you want to go back and check it",
    "start": "242159",
    "end": "247920"
  },
  {
    "text": "out uh but shuffle sharing essentially allows you to deploy into multiple availability zones within a region and",
    "start": "247920",
    "end": "253920"
  },
  {
    "text": "will help you balance your workload and such there and so it's a really great episode to check out uh just not only for what we're talking about today how",
    "start": "253920",
    "end": "260560"
  },
  {
    "text": "it's implemented in rot 53 but how you can implement it in your own environment to increase resiliency just within your",
    "start": "260560",
    "end": "266160"
  },
  {
    "text": "aws usage so i'm going to uh turn it over here to a",
    "start": "266160",
    "end": "272160"
  },
  {
    "text": "sweeney to kind of cover our next section but before we do so claim just wanted to check and see um if there are",
    "start": "272160",
    "end": "278320"
  },
  {
    "text": "any questions from the audience thanks rob we did have a question from",
    "start": "278320",
    "end": "283759"
  },
  {
    "text": "robert tables come in uh so i'm going to read it here and it says due to restrictions on apex records if you were",
    "start": "283759",
    "end": "290240"
  },
  {
    "text": "to do multi-account domain name delegation would you put the apex in your product account or",
    "start": "290240",
    "end": "296400"
  },
  {
    "text": "something else between i don't know if you want to take",
    "start": "296400",
    "end": "302160"
  },
  {
    "text": "that one for apex records yeah yeah sure so yeah so for the apex domain it's pretty much if you're doing a",
    "start": "302160",
    "end": "307919"
  },
  {
    "text": "multi-domain delegation you can make use of a prod account that's totally okay uh if i'm",
    "start": "307919",
    "end": "314320"
  },
  {
    "text": "not sure if there is any restriction you are facing with that uh but yeah you can totally do um the delegation in your",
    "start": "314320",
    "end": "321759"
  },
  {
    "text": "apex domain in your product account perfect that was the uh that was the",
    "start": "321759",
    "end": "327600"
  },
  {
    "text": "only question that has come across so far thanks thanks thanks rob uh so",
    "start": "327600",
    "end": "334720"
  },
  {
    "start": "334000",
    "end": "669000"
  },
  {
    "text": "uh here i'm going to talk about the route 53 rocking policies so route 53",
    "start": "334720",
    "end": "340240"
  },
  {
    "text": "offers seven base crafting policy and we will get into details here so the first one is like a simple routing policy so",
    "start": "340240",
    "end": "347520"
  },
  {
    "text": "that's the default routing policy where customer can point a domain name to your resource using any of the supported",
    "start": "347520",
    "end": "353759"
  },
  {
    "text": "route 53 record type so the main use of the simple uh routing policies like when",
    "start": "353759",
    "end": "358880"
  },
  {
    "text": "you use for a single resources that performs a given function for your domain for example a web server that",
    "start": "358880",
    "end": "365680"
  },
  {
    "text": "serves content for your example.com domain and next in our list is the weighted routing policy",
    "start": "365680",
    "end": "372240"
  },
  {
    "text": "in traditional round robin if there are three records over a period of a time",
    "start": "372240",
    "end": "377360"
  },
  {
    "text": "every record will be returned one third of the time however the weighted uh routing policy",
    "start": "377360",
    "end": "383840"
  },
  {
    "text": "allows customer to assign weights that corresponds to the amount of traffic that should be routed to a specific ip",
    "start": "383840",
    "end": "390720"
  },
  {
    "text": "address and basically uh the weighted routing policies used to route traffic",
    "start": "390720",
    "end": "395759"
  },
  {
    "text": "to a multiple resources in proportion that you specify and the next is the geolocation routing",
    "start": "395759",
    "end": "402080"
  },
  {
    "text": "policy with the name the geolocation routing lets you to choose the resources that you that serves your traffic based",
    "start": "402080",
    "end": "409520"
  },
  {
    "text": "on the geographic location of your user meaning that the location that dns query originate from for example uh you might",
    "start": "409520",
    "end": "416800"
  },
  {
    "text": "want all the queries from europe to be routed to the load balancing in frankfurt region so that's where you use",
    "start": "416800",
    "end": "423039"
  },
  {
    "text": "uh the geolocation drafting policy and the next one is the geoproximity routing",
    "start": "423039",
    "end": "428080"
  },
  {
    "text": "policy which provides uh more control over the geolocation routing policy the",
    "start": "428080",
    "end": "433280"
  },
  {
    "text": "reason is the geoproximity routing lets uh the route 53 to route 53 traffic to",
    "start": "433280",
    "end": "439360"
  },
  {
    "text": "your resources based on the geographic location of a user and your resources you can also optionally choose to route",
    "start": "439360",
    "end": "446639"
  },
  {
    "text": "more traffic or less traffic to a given resource by specifying a value that we",
    "start": "446639",
    "end": "451680"
  },
  {
    "text": "call as bias value and the next one is the latency routing policy",
    "start": "451680",
    "end": "457759"
  },
  {
    "text": "when route53 receives a dns query for your domain or a subdomain it determines",
    "start": "457759",
    "end": "463680"
  },
  {
    "text": "which aws region you have created the latency record for and data mines which",
    "start": "463680",
    "end": "469120"
  },
  {
    "text": "region gives you gives the user the lowest latency and then selects the latency record for that region",
    "start": "469120",
    "end": "476080"
  },
  {
    "text": "so the draft 53 like what is the use case here so you use the latency based routing when you have resources in",
    "start": "476080",
    "end": "482879"
  },
  {
    "text": "multiple aws region and you want to route traffic to the region that provides the best latency with very less",
    "start": "482879",
    "end": "490080"
  },
  {
    "text": "round trip time and the another scenario is like if your application is hosted in a multiple aws uh region you can",
    "start": "490080",
    "end": "497520"
  },
  {
    "text": "obviously improve your uh performance for your user by storing their requests from aws region that provides the lowest",
    "start": "497520",
    "end": "505280"
  },
  {
    "text": "latency and the next one is our failover routing policy which is like a commonly used one",
    "start": "505280",
    "end": "511599"
  },
  {
    "text": "which lets customer to route traffic to our resources when the resources is healthy or to a different resource when",
    "start": "511599",
    "end": "518399"
  },
  {
    "text": "the first that is your primary resources unhealthy both primary and secondary can point to",
    "start": "518399",
    "end": "524159"
  },
  {
    "text": "anything from amazon s3 bucket that is configure your basic website uh to a",
    "start": "524159",
    "end": "529360"
  },
  {
    "text": "complex tree of record um so the failover routing policy use cases like when you want to configure active",
    "start": "529360",
    "end": "536240"
  },
  {
    "text": "passive failover the last one which we have in in our list is the multi-value",
    "start": "536240",
    "end": "541360"
  },
  {
    "text": "answer routing policy so to route traffic approximately randomly to multiple resources the customer can",
    "start": "541360",
    "end": "547760"
  },
  {
    "text": "create one multi-value answer resource for each of your record set and",
    "start": "547760",
    "end": "552800"
  },
  {
    "text": "optionally associate our route 53 health check with each of your record and",
    "start": "552800",
    "end": "558760"
  },
  {
    "text": "amazon.53 will respond to your dns query with up to eight healthy record and",
    "start": "558760",
    "end": "564160"
  },
  {
    "text": "gives a different answer to different dns resolver so we will look into",
    "start": "564160",
    "end": "570240"
  },
  {
    "text": "uh the example architectures of multi-value and the failover and some of the demo in next section",
    "start": "570240",
    "end": "577279"
  },
  {
    "text": "and uh before i move forward is there any question [Music]",
    "start": "577279",
    "end": "583740"
  },
  {
    "text": "hey sweeney it wasn't necessarily a question but something that i think is a good takeaway for the viewers and",
    "start": "586080",
    "end": "592160"
  },
  {
    "text": "something we could highlight is the the difference or when you would use failover routing policy versus weighted",
    "start": "592160",
    "end": "598000"
  },
  {
    "text": "routing policy and maybe some typical use cases there uh for the weighted routing policy the",
    "start": "598000",
    "end": "604480"
  },
  {
    "text": "typical use cases like the blue green deployment where you want to slowly uh",
    "start": "604480",
    "end": "609600"
  },
  {
    "text": "steadily increase your traffic from one resource to another resource like you can move from zero to hundred for one",
    "start": "609600",
    "end": "616000"
  },
  {
    "text": "resource and just drop down from 100 to 0 for the other resource that's where the typical use",
    "start": "616000",
    "end": "621440"
  },
  {
    "text": "cases for the weighted rotting policy for the failover routing policy which i mentioned before it's like an active",
    "start": "621440",
    "end": "627600"
  },
  {
    "text": "passive so you can have a active resource to be resolved uh whenever it's healthy uh that's week that we call as a",
    "start": "627600",
    "end": "634560"
  },
  {
    "text": "primary record set like something like a website which is working uh throughout",
    "start": "634560",
    "end": "639600"
  },
  {
    "text": "the day and then you want to resolve to that particular load balancer or anything any any of your website and if",
    "start": "639600",
    "end": "645680"
  },
  {
    "text": "there is any maintenance going on you want to point it to your s3 bucket which is like a maintenance page that's where",
    "start": "645680",
    "end": "651440"
  },
  {
    "text": "you can make use of the failover routing policy perfect uh there was also a question",
    "start": "651440",
    "end": "656560"
  },
  {
    "text": "there about sharding from node 143 that i'll answer in the in the chat there so we'll i will address that one",
    "start": "656560",
    "end": "663839"
  },
  {
    "text": "um so that okay to continue along now thank you thank you",
    "start": "663839",
    "end": "669440"
  },
  {
    "start": "669000",
    "end": "990000"
  },
  {
    "text": "moving forward um so before we get into the failover architecture i want to",
    "start": "669760",
    "end": "674880"
  },
  {
    "text": "quickly provide some more insight about the health check with raft 53 so the health check that monitors an endpoint",
    "start": "674880",
    "end": "681600"
  },
  {
    "text": "so you can configure a health check that monitors an endpoint that you specify either by ip address or a domain name",
    "start": "681600",
    "end": "688240"
  },
  {
    "text": "but at our regular interval that you specify the route53 will submit an automatic request over the internet to",
    "start": "688240",
    "end": "694880"
  },
  {
    "text": "your application or your resource or your server uh to verify whether it's reachable available and it's functional",
    "start": "694880",
    "end": "702320"
  },
  {
    "text": "optionally you can also configure the health check to make requests to those the user actually make for example like",
    "start": "702320",
    "end": "708720"
  },
  {
    "text": "trying to access particular url from your website so how does route53 works",
    "start": "708720",
    "end": "713920"
  },
  {
    "text": "here so route 53 will periodically check the health of the endpoint that is specified in your health check it",
    "start": "713920",
    "end": "720240"
  },
  {
    "text": "doesn't actually perform the health check when the actual dns query arrives",
    "start": "720240",
    "end": "725519"
  },
  {
    "text": "and what is happening behind the scenes route 53 has health checkers in multiple locations around the world when you",
    "start": "725519",
    "end": "732560"
  },
  {
    "text": "create a health check that monitors an end point the health checker starts to send requests to an endpoint that you",
    "start": "732560",
    "end": "738639"
  },
  {
    "text": "specify to determine whether the endpoint is healthy you can choose which location you want route 53 use and also",
    "start": "738639",
    "end": "745600"
  },
  {
    "text": "you can specify the interval between between the checks like every 10 seconds or every 30 seconds",
    "start": "745600",
    "end": "752240"
  },
  {
    "text": "and each health check ralph of the health shakers propagate the results of its health checks to the ralph 53 dns",
    "start": "752240",
    "end": "759519"
  },
  {
    "text": "server which is located worldwide and each uh health checker aggregates and",
    "start": "759519",
    "end": "764639"
  },
  {
    "text": "analyze the data to decide the health check status and one one thing to note",
    "start": "764639",
    "end": "769680"
  },
  {
    "text": "here is the rap53 health checker in different data center don't coordinate with each",
    "start": "769680",
    "end": "775360"
  },
  {
    "text": "other so you will see sometimes there are several requests per second regardless of the interval you mentioned",
    "start": "775360",
    "end": "781200"
  },
  {
    "text": "or you configure in your health check configuration uh followed by like a few seconds with no health check at all",
    "start": "781200",
    "end": "788240"
  },
  {
    "text": "and how does r50 determine if the end point is healthy or not so uh it has",
    "start": "788240",
    "end": "793920"
  },
  {
    "text": "some threshold uh so let me provide you that so the rad53 will aggregate the data from the health checkers and",
    "start": "793920",
    "end": "799839"
  },
  {
    "text": "determine the input with healthy only if more than 18 percent of the health",
    "start": "799839",
    "end": "804959"
  },
  {
    "text": "checker report that an endpoint is healthy then route 53 will consider it as unhealthy if 18 percent of a l",
    "start": "804959",
    "end": "812800"
  },
  {
    "text": "checker or fewer reports that the end point is healthy then route 53 will consider as unhealthy so this is about",
    "start": "812800",
    "end": "820079"
  },
  {
    "text": "the health check let me quickly move to the architectural discussion",
    "start": "820079",
    "end": "825600"
  },
  {
    "text": "so here is the example of the failover architecture when a user is trying to",
    "start": "825600",
    "end": "830800"
  },
  {
    "text": "resolve the domain name of a failover architecture if the health check of the u.s east load balancer is healthy the",
    "start": "830800",
    "end": "838079"
  },
  {
    "text": "route 53 will resolve to the east load balancer if the resource in east region",
    "start": "838079",
    "end": "844079"
  },
  {
    "text": "becomes unhealthy uh drought 53 health checker like my resource health check will change to",
    "start": "844079",
    "end": "850720"
  },
  {
    "text": "unhealthy status and the route 53 will automatically resolve to the u.s best load balancer",
    "start": "850720",
    "end": "857279"
  },
  {
    "text": "consider if both the primary and the secondary resources are unhealthy by default the primary record will be",
    "start": "857279",
    "end": "864399"
  },
  {
    "text": "resolved so that is the basic behavior of the failover architecture but with",
    "start": "864399",
    "end": "869680"
  },
  {
    "text": "complex routing architecture we can achieve high availability which we can see in next section",
    "start": "869680",
    "end": "876399"
  },
  {
    "text": "we'll move to the next uh architecture which is like a multi-value record architecture uh i provided a",
    "start": "876399",
    "end": "883600"
  },
  {
    "text": "basic information for the multi-value but the basic use case is like when the customer wants to create more than one",
    "start": "883600",
    "end": "890160"
  },
  {
    "text": "record of the same name and type and routing traffic to multiple resources and associating and health check to the",
    "start": "890160",
    "end": "896880"
  },
  {
    "text": "records that's where the multi-value answer routing policy come into picture in this example the route 53 will result",
    "start": "896880",
    "end": "904320"
  },
  {
    "text": "to both the ip address which is 1.2.3.4 and 1.2.4.3 uh to both ip addresses provided",
    "start": "904320",
    "end": "912240"
  },
  {
    "text": "the health check of both is healthy if 1.2.3.4 uh becomes unhealthy over here",
    "start": "912240",
    "end": "919279"
  },
  {
    "text": "uh the health check status will change to unhealthy status and the route 53 will only resolve to 1.2.4.3",
    "start": "919279",
    "end": "927839"
  },
  {
    "text": "so one quick note about the multi-value answer routing policy is like it distribute the dns response across",
    "start": "927839",
    "end": "934639"
  },
  {
    "text": "multiple ip address if a web server become unavailable after a dns resolver",
    "start": "934639",
    "end": "940000"
  },
  {
    "text": "caches it the client can try up to eight other ip address from the response to avoid the downtime um and the",
    "start": "940000",
    "end": "947680"
  },
  {
    "text": "multi-value answer routing is not actually a load balancer it's not a substitute for a load balancer the",
    "start": "947680",
    "end": "953519"
  },
  {
    "text": "reason is like the route 53 will randomly select any eight records uh when you perform a dns resolution for",
    "start": "953519",
    "end": "960000"
  },
  {
    "text": "your domain name for a multiple times you might notice that the ip address keep on rotating so this rotation will",
    "start": "960000",
    "end": "966800"
  },
  {
    "text": "improve the availability and provide some load balancing functionality and it's the responsible for your operating",
    "start": "966800",
    "end": "974240"
  },
  {
    "text": "system to perform this round robin dns for the cache responses like not the route 53 will take will rotate it from",
    "start": "974240",
    "end": "981120"
  },
  {
    "text": "your application uh next we have a demo session i'm going to hand over to rob here",
    "start": "981120",
    "end": "989199"
  },
  {
    "text": "hey thanks for sharing we appreciate that um so yeah we're going to go ahead and jump into the console and into the page to take a look at uh actually",
    "start": "989440",
    "end": "996800"
  },
  {
    "start": "990000",
    "end": "2124000"
  },
  {
    "text": "implementing this and doing the uh route53 failover uh infrastructure here",
    "start": "996800",
    "end": "1003199"
  },
  {
    "text": "so go ahead and pull up here and uh one of the things you want to",
    "start": "1003199",
    "end": "1008480"
  },
  {
    "text": "cover first is actually just the implementation right so sweeney mentioned a lot about the health checks and how you're going to configure these",
    "start": "1008480",
    "end": "1013839"
  },
  {
    "text": "dns health checks and how you're going to use these in order to understand which resources healthy and",
    "start": "1013839",
    "end": "1019120"
  },
  {
    "text": "which resources unhealthy so that you can have your failover mechanism in place this is really important to get",
    "start": "1019120",
    "end": "1024319"
  },
  {
    "text": "established and set up ahead of time uh before an actual event happens and so you're going to start by taking a look",
    "start": "1024319",
    "end": "1030000"
  },
  {
    "text": "at this route 53 health checks and configuring dns failover documentation page and it's going to be able to give you all this kind of information on how",
    "start": "1030000",
    "end": "1036480"
  },
  {
    "text": "you're going to set up these and uh cover some other items for um our prop 53 checks",
    "start": "1036480",
    "end": "1043678"
  },
  {
    "text": "um so as we get going in here i have a demo infrastructure very similar to the one that is showing on the slides itself",
    "start": "1043679",
    "end": "1050640"
  },
  {
    "text": "where we're going to have a route 53 y called rough 53 alb east and a alb and",
    "start": "1050640",
    "end": "1056240"
  },
  {
    "text": "west so we're going to have a multi-region deployment that we're going to be using in order to implement failover between the two so you can see",
    "start": "1056240",
    "end": "1063360"
  },
  {
    "text": "i have my one in east and if i switch over to the west region here or us west 2 to be specific we'll see route 53 aob",
    "start": "1063360",
    "end": "1070480"
  },
  {
    "text": "west and that is my two different load balancers that i have uh in front of some ec2 instances so you can see here",
    "start": "1070480",
    "end": "1077760"
  },
  {
    "text": "that i have route 53 us east one which is my ec2 instances or my single ec2",
    "start": "1077760",
    "end": "1083039"
  },
  {
    "text": "instance in this case behind my load balancer that is going to be serving my website here and then if i switch over to the us west",
    "start": "1083039",
    "end": "1090799"
  },
  {
    "text": "side i have a very similar name instance route 53 us west 2 that is serving my",
    "start": "1090799",
    "end": "1096160"
  },
  {
    "text": "website get rid of that error message from the other one we can see that i just have two instances across the different regions",
    "start": "1096160",
    "end": "1102240"
  },
  {
    "text": "with the load balancer in front of them that are going to be my highly available infrastructure essentially in case of a failover now to get all this workings",
    "start": "1102240",
    "end": "1109760"
  },
  {
    "text": "that it actually automatically fails over and i don't have to actually go through and uh do this myself right so i",
    "start": "1109760",
    "end": "1117919"
  },
  {
    "text": "have my infrastructure set up with my usb server here and my us west server",
    "start": "1117919",
    "end": "1123520"
  },
  {
    "text": "and this is kind of a key element that you want to make sure that you have in place when you have these infrastructures in two different regions one thing you really want to do is make",
    "start": "1123520",
    "end": "1129919"
  },
  {
    "text": "sure that you have these failover records set in place that you don't have to manually go in and make an implementation change during an event",
    "start": "1129919",
    "end": "1136640"
  },
  {
    "text": "and that it will actually do it for you so my primary that i have set up as we",
    "start": "1136640",
    "end": "1141840"
  },
  {
    "text": "saw before shiny was mentioning we have between our primary and our secondary and we'll see what that looks like in route 53 itself in the console my",
    "start": "1141840",
    "end": "1148400"
  },
  {
    "text": "primary is my usb server so as we come to my website here we can see that it's usb server and if i refresh this page",
    "start": "1148400",
    "end": "1154640"
  },
  {
    "text": "it's still going to be usb server when i refresh because it's a healthy record and it's going to direct traffic to that",
    "start": "1154640",
    "end": "1160480"
  },
  {
    "text": "and not do like you mentioned before the multi-value it could return either so let's switch into my route 53 console",
    "start": "1160480",
    "end": "1167679"
  },
  {
    "text": "here and we'll see that i have some different health checks implemented here and these health checks are going to be what's",
    "start": "1167679",
    "end": "1173600"
  },
  {
    "text": "used to evaluate and understand what is healthy within my environment so i'm going to be looking at my route",
    "start": "1173600",
    "end": "1178799"
  },
  {
    "text": "53 east and i have my load balancer is my target for this health check and then i also have a route 53 west one",
    "start": "1178799",
    "end": "1185520"
  },
  {
    "text": "as well that is doing the same thing but for east it sees that we have healthy right now",
    "start": "1185520",
    "end": "1191120"
  },
  {
    "text": "and if i go over into my actual dns configuration here i'm going to go into you can actually click into my hosted",
    "start": "1191120",
    "end": "1197200"
  },
  {
    "text": "zone first i'm going to filter down to just my www records because that's the name of the records that i'm using here for the site",
    "start": "1197200",
    "end": "1204559"
  },
  {
    "text": "uh and i see that i have it www.rawhid.myinstance.com and i have a failover record set that's",
    "start": "1204559",
    "end": "1210080"
  },
  {
    "text": "primary and secondary so let's go ahead and take a quick look at the actual dns record itself and see",
    "start": "1210080",
    "end": "1215760"
  },
  {
    "text": "how i have this configured so i'm going to click on edit record and we can see that it's",
    "start": "1215760",
    "end": "1221000"
  },
  {
    "text": "www.rompig.instance.com and then we have the cname routes traffic to aws domain",
    "start": "1221000",
    "end": "1226320"
  },
  {
    "text": "normally i would say we'd have this alias record checked in this since i didn't delegate my dns zone to my other",
    "start": "1226320",
    "end": "1231679"
  },
  {
    "text": "account so it's going to cross-account dns resolution so if i were to click this i wouldn't be",
    "start": "1231679",
    "end": "1236960"
  },
  {
    "text": "able to choose my load balancer so right now i have this unchecked but if you're going to be using this in aws with your rough 53 we highly recommend you use",
    "start": "1236960",
    "end": "1244640"
  },
  {
    "text": "alias records as well as we can see here though i have got the",
    "start": "1244640",
    "end": "1250159"
  },
  {
    "text": "uh route 53 aob east in this uh record entry and so that's my first record set",
    "start": "1250159",
    "end": "1256080"
  },
  {
    "text": "that i have in place for things and that's we're going to be using to direct traffic to a majority of the time uh",
    "start": "1256080",
    "end": "1261919"
  },
  {
    "text": "until this becomes unhealthy so i've set this record up with a fairly low uh ttl",
    "start": "1261919",
    "end": "1267679"
  },
  {
    "text": "so that it expires quickly you can see that my routing policies fail over um and then i have a few other items and as",
    "start": "1267679",
    "end": "1273520"
  },
  {
    "text": "sweeney mentioned before we've got some options here so we can see simple weighted geolocation latency and",
    "start": "1273520",
    "end": "1279039"
  },
  {
    "text": "failover for today's demo i've got the mounted as a failover this is my primary record you're always going to have a",
    "start": "1279039",
    "end": "1284400"
  },
  {
    "text": "primary and then a secondary and so we can see east again they mentioned before primary",
    "start": "1284400",
    "end": "1289760"
  },
  {
    "text": "and then we have those health checks designated before below to make sure that when route53 um gets an unhealthy",
    "start": "1289760",
    "end": "1296799"
  },
  {
    "text": "check from my east server it's going to go to move traffic over to us west",
    "start": "1296799",
    "end": "1302799"
  },
  {
    "text": "and then of course you've got a record id here below as well and this record id is a unique uh id that you're going to",
    "start": "1302799",
    "end": "1309039"
  },
  {
    "text": "give to this record set so i have it just named east lv for this one uh and then we'll see here in a little bit from",
    "start": "1309039",
    "end": "1314320"
  },
  {
    "text": "my west one it's kind of made a little different all right so let's take a look at the secondary configuration see it looks",
    "start": "1314320",
    "end": "1320559"
  },
  {
    "text": "very much the same except for now i have west it's my failover record as we can see",
    "start": "1320559",
    "end": "1325600"
  },
  {
    "text": "again but it's the secondary for my failover record and so we're going to be using that to also have another health",
    "start": "1325600",
    "end": "1331120"
  },
  {
    "text": "check that's checking the resources in west um to make sure that we can resolve things to west and let's have the west",
    "start": "1331120",
    "end": "1337200"
  },
  {
    "text": "lb as my senate so what we're going to want to do is test this and see how this works for us and a",
    "start": "1337200",
    "end": "1343760"
  },
  {
    "text": "failover so we're going to be going into my ec2 instance in us east one and being",
    "start": "1343760",
    "end": "1349039"
  },
  {
    "text": "um well causing essentially an event there so that we have this failover from usb server to my us west server",
    "start": "1349039",
    "end": "1356559"
  },
  {
    "text": "so i'm just running linux and apache on these servers so what i'm going to end up doing is going into my ec2 instance",
    "start": "1356559",
    "end": "1362240"
  },
  {
    "text": "and stopping apache and make sure that it implements and uses the us west side then instead so if",
    "start": "1362240",
    "end": "1368720"
  },
  {
    "text": "i switch back to where i have my infrastructure located at my other account we're going to go over to my ec2",
    "start": "1368720",
    "end": "1375600"
  },
  {
    "text": "instances in us east as we can see i'm on the route 53 usb server and i'm going to",
    "start": "1375600",
    "end": "1380720"
  },
  {
    "text": "connect to this this is my quick plug for systems manager session manager if you're not using this on your ec2",
    "start": "1380720",
    "end": "1387039"
  },
  {
    "text": "instances right now it's a big help in being able to connect to your instances without having to open like say port 22",
    "start": "1387039",
    "end": "1394640"
  },
  {
    "text": "to your site uh or to your corporate vpn or something like that as well you can actually get to your ec2 instances",
    "start": "1394640",
    "end": "1400640"
  },
  {
    "text": "through the browser or through the aws cli as long as you've got a im credentials that allow you access to",
    "start": "1400640",
    "end": "1406400"
  },
  {
    "text": "um connect ec2 instances so i'll show you real quickly here i'm just going to connect into my instance and",
    "start": "1406400",
    "end": "1412400"
  },
  {
    "text": "it's just going to load right here in my browser well it has nothing to do with route53",
    "start": "1412400",
    "end": "1417440"
  },
  {
    "text": "it's still a really nice feature so i just want to call it out and i'm going to stop httpd or my apache service on my usb",
    "start": "1417440",
    "end": "1425120"
  },
  {
    "text": "server and stop here in just a second",
    "start": "1425120",
    "end": "1430159"
  },
  {
    "text": "and now i'm just going to show you the status of it to show that it's actually stopped and we'll see here that it's inactive",
    "start": "1430159",
    "end": "1436880"
  },
  {
    "text": "dead right and it's no longer there and if i click refresh i will get a 502 bad gateway that's because as we",
    "start": "1436880",
    "end": "1444240"
  },
  {
    "text": "have to go back in here and check to see we have those health checks that are occurring on my route 53 records and it's going to end",
    "start": "1444240",
    "end": "1451200"
  },
  {
    "text": "up having to um become an unhealthy check and that what unhealthy check happens is when it's",
    "start": "1451200",
    "end": "1456720"
  },
  {
    "text": "going to then redirect target uh traffic over to my us west servers so let's go quickly take a look at my route53 health",
    "start": "1456720",
    "end": "1464799"
  },
  {
    "text": "check and we'll see that the whole entire time i've had this route53 health check up it has been going through and",
    "start": "1464799",
    "end": "1469919"
  },
  {
    "text": "checking and coming out so status of one um just meaning basically that there hasn't been any overall issues",
    "start": "1469919",
    "end": "1475919"
  },
  {
    "text": "um so eventually we'll see here and i'll come back to this a little bit to show you when that drops off but basically what's happening in the background right",
    "start": "1475919",
    "end": "1482080"
  },
  {
    "text": "now is these health checkers that as schweine was mentioning before are going through and they are checking against",
    "start": "1482080",
    "end": "1487760"
  },
  {
    "text": "this um health check that i have out together to show whether they are healthy or not and",
    "start": "1487760",
    "end": "1492880"
  },
  {
    "text": "so if we actually go into these health checkers we can actually see the individual health checkers and the status that they have so again that kind",
    "start": "1492880",
    "end": "1499200"
  },
  {
    "text": "of evaluative that is mentioned at the 18 failure you know successful would show",
    "start": "1499200",
    "end": "1505200"
  },
  {
    "text": "so right here we can see that all of them are failing um because i've stopped that and if i refresh i now have an",
    "start": "1505200",
    "end": "1511279"
  },
  {
    "text": "unhealthy health check and we can see on this page between the different health checks in tokyo singapore sydney ireland",
    "start": "1511279",
    "end": "1517520"
  },
  {
    "text": "all over have failed that health check and it's no longer um",
    "start": "1517520",
    "end": "1523279"
  },
  {
    "text": "working there right so now we've got a failure condition on my health check and route 53 is going to",
    "start": "1523279",
    "end": "1529600"
  },
  {
    "text": "say i'm no longer redirecting traffic to my us east load balancer and i'm going to start directing traffic to my u.s",
    "start": "1529600",
    "end": "1535600"
  },
  {
    "text": "west load balancer based on the fact that all of my health checks essentially failed but my route 53 west is still healthy so",
    "start": "1535600",
    "end": "1542559"
  },
  {
    "text": "again back to what asrini mentioned before uh if they were both unhealthy it would continue to try and send it to route 53 east but since i have a healthy",
    "start": "1542559",
    "end": "1549440"
  },
  {
    "text": "health check on my route 53 west and i see here that we are have that so",
    "start": "1549440",
    "end": "1555279"
  },
  {
    "text": "because of the fact that it is my secondary record and it's using that health check in here so we'll bounce back in and i'll just show you because",
    "start": "1555279",
    "end": "1561760"
  },
  {
    "text": "we kind of went through it quickly before on this secondary",
    "start": "1561760",
    "end": "1567440"
  },
  {
    "text": "we go back and we edit this record and we scroll down for this we can see that we've got that failover and it's the secondary one and it's using that prop",
    "start": "1567440",
    "end": "1573840"
  },
  {
    "text": "53 health check that is still checking through as healthy um and that means that we're going to get traffic to this",
    "start": "1573840",
    "end": "1579520"
  },
  {
    "text": "load balancer instead of my other one so when i go back to my website and i refresh i'm now on my us west server",
    "start": "1579520",
    "end": "1585840"
  },
  {
    "text": "instead of my usb server and i've essentially without having to actually make changes to route 53 or really do",
    "start": "1585840",
    "end": "1591440"
  },
  {
    "text": "anything in my environment other than wait for that health check to come through it has switched my infrastructure over",
    "start": "1591440",
    "end": "1597440"
  },
  {
    "text": "from the u.s east 1 region to the u.s west 2 region without me having to make any manual changes just relying on the",
    "start": "1597440",
    "end": "1604159"
  },
  {
    "text": "route 53 health checks i'm going to stop right there really quickly quinn just to see if any questions came in from the audience",
    "start": "1604159",
    "end": "1610240"
  },
  {
    "text": "while i was going through the first part of failover and then continue on just a little bit more",
    "start": "1610240",
    "end": "1615520"
  },
  {
    "text": "yes so uh hey rob there has been a few questions that have come in here the first one um",
    "start": "1615520",
    "end": "1622320"
  },
  {
    "text": "we did address the the shuffle sharding question from earlier a question from dw",
    "start": "1622320",
    "end": "1628080"
  },
  {
    "text": "blood so had came in if you're white listing ips is there a cap on how many you can do i'm not sure if he has",
    "start": "1628080",
    "end": "1634880"
  },
  {
    "text": "they have seen the the chat i did have a follow up there maybe you could be a little bit more specific as to what you",
    "start": "1634880",
    "end": "1640720"
  },
  {
    "text": "were looking for there in whitelisting ips and let us know um we'll address that question as we go",
    "start": "1640720",
    "end": "1647520"
  },
  {
    "text": "along here there was also another one that i think comes relates directly to what you were showing there in the demo",
    "start": "1647520",
    "end": "1654480"
  },
  {
    "text": "about how where'd it go sorry trying to scroll here from jib jab when you're talking about route 53 health checks how would",
    "start": "1654480",
    "end": "1661760"
  },
  {
    "text": "these work in conjunction with alb health checks",
    "start": "1661760",
    "end": "1667039"
  },
  {
    "text": "yeah i can let sweeney cover that one because i know she's going to be covering it here a little bit as well on our slide so i'll let her give her a quick answer on that one",
    "start": "1667039",
    "end": "1673600"
  },
  {
    "text": "sure uh so the alb performs like the alb health checks when we talk about the alb",
    "start": "1673600",
    "end": "1679039"
  },
  {
    "text": "hill checks it will check the health of your ec2 instance or whatever resources that's behind your load balancer but",
    "start": "1679039",
    "end": "1685279"
  },
  {
    "text": "drought 53 will check the uh like when you when you have a aw like",
    "start": "1685279",
    "end": "1690640"
  },
  {
    "text": "load balancer with route 53 we always recommend you to make use of eval by target health that is something like",
    "start": "1690640",
    "end": "1696960"
  },
  {
    "text": "route 53 offers it's one of the feature which i'll be covering in next section um so make use of it evaluate targeted",
    "start": "1696960",
    "end": "1703039"
  },
  {
    "text": "so that route 53 will make all the background work of checking whether the load balancer and the resources behind",
    "start": "1703039",
    "end": "1708880"
  },
  {
    "text": "the load balancer are healthy instead of you manually creating the health checks for the resources which is sitting in a",
    "start": "1708880",
    "end": "1714880"
  },
  {
    "text": "private one so health check works only for the public uh public endpoint so",
    "start": "1714880",
    "end": "1720240"
  },
  {
    "text": "the load like resources which is behind the load balancer will 90 it will be a private resources that's where we uh we",
    "start": "1720240",
    "end": "1727360"
  },
  {
    "text": "will be using the evaluate target health uh i'll be discussing more next slide",
    "start": "1727360",
    "end": "1732720"
  },
  {
    "text": "awesome uh also one thing that i wanted to call out there rob that you had mentioned is that the use of alias",
    "start": "1732720",
    "end": "1738480"
  },
  {
    "text": "records that's definitely a best practice whenever you're pointing at aws um",
    "start": "1738480",
    "end": "1743600"
  },
  {
    "text": "specific resources yeah for sure um there was another question that has",
    "start": "1743600",
    "end": "1749200"
  },
  {
    "text": "come across here from ceco160 in what i guess the way that i'm",
    "start": "1749200",
    "end": "1754880"
  },
  {
    "text": "understanding the question that you were asking there is the difference between route 53 and cloudfront which i think we",
    "start": "1754880",
    "end": "1760640"
  },
  {
    "text": "can have a an interesting discussion here for a minute or two about so route 53 as we've been talking about is a",
    "start": "1760640",
    "end": "1766720"
  },
  {
    "text": "fully featured dns domain name service service that's native to aws right um so route 53 or",
    "start": "1766720",
    "end": "1774399"
  },
  {
    "text": "excuse me cloudfront being a content distribution network you know rob and",
    "start": "1774399",
    "end": "1779440"
  },
  {
    "text": "ashwini how does um cloudfront leverage route 53 and how it",
    "start": "1779440",
    "end": "1784640"
  },
  {
    "text": "delivers content to users i think that might be um a way to help clarify the question",
    "start": "1784640",
    "end": "1791120"
  },
  {
    "text": "yeah so it's definitely i mean in comparison to the two of them they're kind of used for two different things right so cloud fronts get kind of to put",
    "start": "1791120",
    "end": "1796640"
  },
  {
    "text": "edge content closer to users to improve performance of static assets like images um it's video content and such like that",
    "start": "1796640",
    "end": "1802880"
  },
  {
    "text": "you can stream through cloudfront but really designed to have those geographical edge locations closer to",
    "start": "1802880",
    "end": "1809360"
  },
  {
    "text": "you your end users to improve performance where route 53 isn't really like a performance enhancements as much",
    "start": "1809360",
    "end": "1814399"
  },
  {
    "text": "as it can be used for slightly can be used for performance right because as sweeney mentioned we have the geoproximity location",
    "start": "1814399",
    "end": "1819919"
  },
  {
    "text": "latency-based type records that will direct you to your resources closest to your end-user based on the route 53",
    "start": "1819919",
    "end": "1826480"
  },
  {
    "text": "record type in use um but more so it's designed kind of to help you with the resiliency as well or just standard dns",
    "start": "1826480",
    "end": "1832399"
  },
  {
    "text": "usage in aws make sure you have anything else you want yeah just one point to add on here is",
    "start": "1832399",
    "end": "1838159"
  },
  {
    "text": "like as rob mentioned like uh the cloud front is like a cda and the router that is a dns",
    "start": "1838159",
    "end": "1844399"
  },
  {
    "text": "you can use route53 to point your custom domain name to your cloudfriend uh because like with aws cloud friend we",
    "start": "1844399",
    "end": "1851360"
  },
  {
    "text": "provide a domain name that's not like a user friendly so you can have a custom domain name in front of your cloud",
    "start": "1851360",
    "end": "1857440"
  },
  {
    "text": "friend and then point it to you and um you can you can have like a failover as well like something goes wrong with your",
    "start": "1857440",
    "end": "1863919"
  },
  {
    "text": "end point like a load balance or s3 uh you can have like a you know maintenance page something like that with route 53",
    "start": "1863919",
    "end": "1869679"
  },
  {
    "text": "that's where rough 53 you can combine right from 3 and cf together perfect um so that's that's all for the",
    "start": "1869679",
    "end": "1876799"
  },
  {
    "text": "for the questions for now okay great um so i'm going to go through here so we just looked at what it is to",
    "start": "1876799",
    "end": "1882880"
  },
  {
    "text": "implement a fail of a record really quickly i'm not going to go through a full failover or anything on this one so much but just really wanted to show a",
    "start": "1882880",
    "end": "1888799"
  },
  {
    "text": "quick example overall if we were to use a multi-value answer for our route",
    "start": "1888799",
    "end": "1894240"
  },
  {
    "text": "53 record type and so we can kind of do the same implementation that we had we've got the same infrastructure in u.s",
    "start": "1894240",
    "end": "1899519"
  },
  {
    "text": "east and then u.s west and be able to use a multi-value answer to actually distribute the traffic between the two of them so right now i have stopped the",
    "start": "1899519",
    "end": "1906880"
  },
  {
    "text": "ec2 or the http service on my ec2 instance and so that's",
    "start": "1906880",
    "end": "1912799"
  },
  {
    "text": "why we're going to us west right now but we have health checks that we can use with our",
    "start": "1912799",
    "end": "1919120"
  },
  {
    "text": "overall instances as we can see here i mentioned before i was going to come back and show you that the health checks actually dropped off",
    "start": "1919120",
    "end": "1924640"
  },
  {
    "text": "um and so that's still unhealthy so in order for us to test our multi-value answer we'll have to restart that",
    "start": "1924640",
    "end": "1930960"
  },
  {
    "text": "overall service on the instant so that we actually get a working web page again from us east so i'm going to use session",
    "start": "1930960",
    "end": "1937200"
  },
  {
    "text": "manager again to quickly jump into that server and restart my httpd service on",
    "start": "1937200",
    "end": "1943440"
  },
  {
    "text": "it so that we can use um this as well in our multi-valued answers otherwise it's going to be unhealthy",
    "start": "1943440",
    "end": "1949279"
  },
  {
    "text": "we'll do a status check again to show you that it's back active and running no longer inactive and dead on this one so",
    "start": "1949279",
    "end": "1956320"
  },
  {
    "text": "now if we switch back into our route 53 since we have a running service in both u.s east and us west 2",
    "start": "1956320",
    "end": "1962880"
  },
  {
    "text": "were actually able to now take advantage of our multi-value record we'll see also our health check we'll come back to",
    "start": "1962880",
    "end": "1968399"
  },
  {
    "text": "healthy here so i switch back it'll take a few seconds of course again like it did before",
    "start": "1968399",
    "end": "1973519"
  },
  {
    "text": "i'm healthy but if we refresh here a little bit it might take a second before it's going to come back up so i'll make you wait for",
    "start": "1973519",
    "end": "1979519"
  },
  {
    "text": "that um but we can go in and we can take a look at a multi-valued answer set up so i",
    "start": "1979519",
    "end": "1986080"
  },
  {
    "text": "have same thing just now i've got it at www.rawpig.insta i'm using for this example here um as we",
    "start": "1986080",
    "end": "1992399"
  },
  {
    "text": "can see that is a multi-valued answer record so we'll quickly take a look here configuration is going to be very similar to our failover except we have a",
    "start": "1992399",
    "end": "1999360"
  },
  {
    "text": "public resource that we're going to be pointing to in here where i just have an ec2 instance in each region",
    "start": "1999360",
    "end": "2004799"
  },
  {
    "text": "that i'm going to be using to coordinate this so i have my instance here configured as my",
    "start": "2004799",
    "end": "2010880"
  },
  {
    "text": "primary and a multi-value again i have my ttl set load stuff we'll click into this and edit a little bit so you can",
    "start": "2010880",
    "end": "2016000"
  },
  {
    "text": "see the primary secondary um but very similar setup overall it's what we saw with the failover record as far as",
    "start": "2016000",
    "end": "2022240"
  },
  {
    "text": "having two records that we're going to find and we can have more than two records um as well so",
    "start": "2022240",
    "end": "2027440"
  },
  {
    "text": "um but our different resource and stuff that will happen here i just have the one ip uh i don't have any health checks",
    "start": "2027440",
    "end": "2032960"
  },
  {
    "text": "implemented but we'd want to probably get a health check so that if we didn't have a healthy resource right we could",
    "start": "2032960",
    "end": "2038880"
  },
  {
    "text": "make sure that we had a healthy resource available so we're not routing your traffic to things that aren't healthy anymore",
    "start": "2038880",
    "end": "2045360"
  },
  {
    "text": "same thing with the record ac id set where i'm going to have a multi-valued record id or to say have a record one",
    "start": "2045360",
    "end": "2050638"
  },
  {
    "text": "for my record id that's going to be unique um i could leave this off i wanted to if they'll say it's optional definitely",
    "start": "2050639",
    "end": "2056960"
  },
  {
    "text": "recommend having one because you wouldn't want it to be since it is essentially just kind of round-robing through the different available services",
    "start": "2056960",
    "end": "2063599"
  },
  {
    "text": "in the background for just like the ec2 instances if you didn't have a health check there's an opportunity that it could send to",
    "start": "2063599",
    "end": "2069440"
  },
  {
    "text": "your user traffic to it overall so just wanted to make sure that we called",
    "start": "2069440",
    "end": "2074960"
  },
  {
    "text": "that out and show kind of a little bit here um but with these health checks in place and with your record configuration",
    "start": "2074960",
    "end": "2080320"
  },
  {
    "text": "the same as you would have a failover you'll be able to do a very similar thing as you have where you have multi-region architectures where you're",
    "start": "2080320",
    "end": "2085919"
  },
  {
    "text": "going to have something in us east u.s west and be able to implement a multi-value answer there to",
    "start": "2085919",
    "end": "2092079"
  },
  {
    "text": "get between the two of them so just wanted to cover that real quickly and show that you have the same kind of",
    "start": "2092079",
    "end": "2097440"
  },
  {
    "text": "availability to leverage with those multi-valued answers that is mentioned before to help you increase increase",
    "start": "2097440",
    "end": "2102720"
  },
  {
    "text": "kind of the reliability um you could pair these with other types of records um that shouldn't especially before to",
    "start": "2102720",
    "end": "2108880"
  },
  {
    "text": "have like your um geoproximity so you can have things closer served up so you can improve performance but we'll cover that today",
    "start": "2108880",
    "end": "2115920"
  },
  {
    "text": "um and for now i'm going to turn it back over to if you need to cover a little bit more on some of these advanced kind",
    "start": "2115920",
    "end": "2121680"
  },
  {
    "text": "of combination of record types and such uh before uh we moved into a complex routing policy uh i could like to",
    "start": "2121680",
    "end": "2128400"
  },
  {
    "start": "2124000",
    "end": "2183000"
  },
  {
    "text": "quickly provide some insight about the evaluate target health so it's an option when you create a alias resource record",
    "start": "2128400",
    "end": "2135200"
  },
  {
    "text": "set that's very specific to route 53 so customer could use uh the evaluate target health with aws resources and",
    "start": "2135200",
    "end": "2142640"
  },
  {
    "text": "with a multi-layered dns architecture along with a routing policy in a multi-layered dns architecture as long",
    "start": "2142640",
    "end": "2149280"
  },
  {
    "text": "as there is one underlying part that's healthy then the path itself is considered healthy so when you enable",
    "start": "2149280",
    "end": "2156400"
  },
  {
    "text": "this evaluate target health for any of your alias resource record set this course is not freely determined",
    "start": "2156400",
    "end": "2162880"
  },
  {
    "text": "whether there is any healthy resource within that branch before even trying to see and route traffic to another branch if",
    "start": "2162880",
    "end": "2169839"
  },
  {
    "text": "there is nothing which is healthy in one branch then rodri have opportunity to choose a healthy resource in other",
    "start": "2169839",
    "end": "2176320"
  },
  {
    "text": "branch but that is possible only if you have this eval way target health enabled",
    "start": "2176320",
    "end": "2181599"
  },
  {
    "text": "in all of your branch so we will quickly get started and look into some of the complex architectures",
    "start": "2181599",
    "end": "2188720"
  },
  {
    "start": "2183000",
    "end": "2565000"
  },
  {
    "text": "so with a geolocation drafting policy we can achieve high availability use case",
    "start": "2188720",
    "end": "2193920"
  },
  {
    "text": "where we can implement a failover within the geolocation drafting policy",
    "start": "2193920",
    "end": "2199040"
  },
  {
    "text": "in this scenario uh for example.amazon.com the first branch is the u.s region with",
    "start": "2199040",
    "end": "2206720"
  },
  {
    "text": "a failover record set that's pointing to u.s east region alb and u.s west region",
    "start": "2206720",
    "end": "2211760"
  },
  {
    "text": "alb and additionally we have four other uh like geolocation record created for",
    "start": "2211760",
    "end": "2218079"
  },
  {
    "text": "north america asia and default so consider that the user is trying the user is",
    "start": "2218079",
    "end": "2224800"
  },
  {
    "text": "trying to resolve the domain name that's example dot from texas provided if both the primary",
    "start": "2224800",
    "end": "2232000"
  },
  {
    "text": "and the secondary health check is in a healthy status it will resolve to the primary record set",
    "start": "2232000",
    "end": "2237920"
  },
  {
    "text": "but if the primary record set is unhealthy it obviously will go to the secondary record set uh like i want to",
    "start": "2237920",
    "end": "2244400"
  },
  {
    "text": "give a quick insight about how does the geolocation works by default like without any complex like",
    "start": "2244400",
    "end": "2251440"
  },
  {
    "text": "having audio with a failover how does it work if a endpoint is unhealthy the",
    "start": "2251440",
    "end": "2256560"
  },
  {
    "text": "route 53 will look for a record for a larger and associated geographical region for",
    "start": "2256560",
    "end": "2261760"
  },
  {
    "text": "example suppose you have a united state a record set you have a north america record set and you have a default record",
    "start": "2261760",
    "end": "2268800"
  },
  {
    "text": "if the end point of the united states record set is unhealthy the route 53 will check check the record for north",
    "start": "2268800",
    "end": "2275040"
  },
  {
    "text": "america and it will also check for the record for default in that order until it finds a healthy record to resolve",
    "start": "2275040",
    "end": "2282000"
  },
  {
    "text": "like for the rod resolve if all the applicable records are unhealthy consider everything is unhealthy uh then",
    "start": "2282000",
    "end": "2288880"
  },
  {
    "text": "drought 53 will resolve to a smallest geographical region which is like a u.s region here",
    "start": "2288880",
    "end": "2294400"
  },
  {
    "text": "but here the scenario is different because we have a failover record in in top of like like failover on top of",
    "start": "2294400",
    "end": "2301520"
  },
  {
    "text": "your geo location record so here if the failover record like both the primary",
    "start": "2301520",
    "end": "2307599"
  },
  {
    "text": "and the secondary fails by default route 53 will result your primary record that's what rob also mentioned in his",
    "start": "2307599",
    "end": "2313920"
  },
  {
    "text": "demo and we saw that in one of our architectural in previous slide that is the actual behavior of failover but if",
    "start": "2313920",
    "end": "2320320"
  },
  {
    "text": "you want uh like your user to resolve to north america region which is your larger geographical region to do so you",
    "start": "2320320",
    "end": "2328000"
  },
  {
    "text": "need to enable evaluate target health and for the geolocation branch as well",
    "start": "2328000",
    "end": "2333520"
  },
  {
    "text": "as for your underlying branch so that the raw food 3 will branch out from the",
    "start": "2333520",
    "end": "2338560"
  },
  {
    "text": "failover and it will resolve to your north america region and as i mentioned if both the u.s as",
    "start": "2338560",
    "end": "2344320"
  },
  {
    "text": "well as the north america is unhealthy the route 43 will result to the default one which is the like if you can have",
    "start": "2344320",
    "end": "2350560"
  },
  {
    "text": "something like an s3 maintenance page there and it will result your default one and moving forward uh with our next here",
    "start": "2350560",
    "end": "2358960"
  },
  {
    "text": "is a scenario of high availability available scenario using multiple routing policy you can go to any level",
    "start": "2358960",
    "end": "2365359"
  },
  {
    "text": "of combining routing policy in route 53 so here we have two branches first let",
    "start": "2365359",
    "end": "2370400"
  },
  {
    "text": "me give you some inside about the first branch uh where with the primary branch we have a primary branch we have a",
    "start": "2370400",
    "end": "2377920"
  },
  {
    "text": "geolocation routing policy for north america and then default and both of it",
    "start": "2377920",
    "end": "2383119"
  },
  {
    "text": "is like having a health check associated and eth enabled when the primary branch resources are",
    "start": "2383119",
    "end": "2389520"
  },
  {
    "text": "healthy the raw 53 will resolve to the geolocation records it if the status of",
    "start": "2389520",
    "end": "2394720"
  },
  {
    "text": "the health check is healthy based on the location of your client on the other side we have this one the secondary",
    "start": "2394720",
    "end": "2401040"
  },
  {
    "text": "failover branch where we have the latency routing policy with two regions um any any region based on your use case",
    "start": "2401040",
    "end": "2408880"
  },
  {
    "text": "and on top of it we have a weighted routing policy with weight 30 and weight zero weight 30 is pointing to your",
    "start": "2408880",
    "end": "2415440"
  },
  {
    "text": "latency recorded alias records it and uh the weight zero is pointing to your s3",
    "start": "2415440",
    "end": "2421119"
  },
  {
    "text": "maintenance page let me okay when a user is trying to resolve",
    "start": "2421119",
    "end": "2426880"
  },
  {
    "text": "web.amazon.com it will check if there is any resource which is healthy in primary punch based",
    "start": "2426880",
    "end": "2433200"
  },
  {
    "text": "on your location if i'm coming from anywhere from texas or california i'll be like if the primary is um healthy",
    "start": "2433200",
    "end": "2440240"
  },
  {
    "text": "then i'll be going to the north america region but since the eth is enabled in the",
    "start": "2440240",
    "end": "2445680"
  },
  {
    "text": "primary branch rot 53 will know the if the whole branch becomes unhealthy it",
    "start": "2445680",
    "end": "2451200"
  },
  {
    "text": "needs to look for a healthy resource in your another branch what does that actually mean is when a client is trying",
    "start": "2451200",
    "end": "2457119"
  },
  {
    "text": "to resolve it consider your complete primary branch is unhealthy the whole one is unhealthy",
    "start": "2457119",
    "end": "2463359"
  },
  {
    "text": "with the eval way targeted enabled in the main uh domain name it will check",
    "start": "2463359",
    "end": "2468480"
  },
  {
    "text": "where the client is coming from and resolve the record with a less latent uh one as the weight is 30 there compared",
    "start": "2468480",
    "end": "2475040"
  },
  {
    "text": "to the weight zero which is pointing to s3 bucket if both the latency record set is",
    "start": "2475040",
    "end": "2480240"
  },
  {
    "text": "unhealthy the client will resolve to a s3 maintenance page this is how you can",
    "start": "2480240",
    "end": "2485520"
  },
  {
    "text": "go to any level of combining multiple routing policy to achieve your particular use case",
    "start": "2485520",
    "end": "2492400"
  },
  {
    "text": "and in next i will be just discussing about uh one of the use case from a customer where here's the architecture",
    "start": "2492400",
    "end": "2499359"
  },
  {
    "text": "for highly available fault tolerance global web application",
    "start": "2499359",
    "end": "2504560"
  },
  {
    "text": "customer could like to have like multiple use case like here the use cases they want all the user that are",
    "start": "2504560",
    "end": "2510560"
  },
  {
    "text": "located in china to reach their local web server and all all the customers from other countries go to a data center",
    "start": "2510560",
    "end": "2517680"
  },
  {
    "text": "in different region like oregon island or tokyo based on a lease latency",
    "start": "2517680",
    "end": "2523040"
  },
  {
    "text": "they are not combined with a jio kind of thing of course if none of the data centers",
    "start": "2523040",
    "end": "2528560"
  },
  {
    "text": "are available or healthy uh the customer could like to fail over to a static",
    "start": "2528560",
    "end": "2533760"
  },
  {
    "text": "website which is running in s3 bucket or it can be a different resource which is like providing the same resource like a",
    "start": "2533760",
    "end": "2540400"
  },
  {
    "text": "replica of it to achieve a high availability so based on all the",
    "start": "2540400",
    "end": "2545440"
  },
  {
    "text": "architectures which we are discussing with these are the sample architecture so with route53 you can achieve high",
    "start": "2545440",
    "end": "2551920"
  },
  {
    "text": "available and high reliable use case and going combining multiple uh uh routing",
    "start": "2551920",
    "end": "2557440"
  },
  {
    "text": "policies and i'm hanging over to rob for talking",
    "start": "2557440",
    "end": "2562560"
  },
  {
    "text": "about three application recovery controller thanks to shreem appreciate all that additional information on kind of",
    "start": "2562560",
    "end": "2568480"
  },
  {
    "start": "2565000",
    "end": "2762000"
  },
  {
    "text": "combining those different complex uh routing mechanisms uh so we covered today how you can get kind of",
    "start": "2568480",
    "end": "2574480"
  },
  {
    "text": "implemented in using or how you should be using right route 53 failover multi-valued answers to help you increase resiliency uh once you've kind",
    "start": "2574480",
    "end": "2581359"
  },
  {
    "text": "of adopted those you started to get it into the different recovery strategies using route53 we wanted to kind of just",
    "start": "2581359",
    "end": "2587920"
  },
  {
    "text": "quickly talk about the raw53 application recovery controller so our rough 53 application recovery controller is going",
    "start": "2587920",
    "end": "2593520"
  },
  {
    "text": "to be kind of that next iteration to be able to help you uh be able to check health of both sites and to make these",
    "start": "2593520",
    "end": "2600000"
  },
  {
    "text": "actual failover implementations happen for you so you're going to be able to use",
    "start": "2600000",
    "end": "2605119"
  },
  {
    "text": "route53 application recovery controller once you have these different mutations set up to monitor essentially the health of your two different environments and",
    "start": "2605119",
    "end": "2611920"
  },
  {
    "text": "allow you to make implementation changes if you have to during a disaster event um so if you have something that happens",
    "start": "2611920",
    "end": "2618319"
  },
  {
    "text": "in u.s east one and you have an infrastructure in us west too you could use the application recovery controller",
    "start": "2618319",
    "end": "2623359"
  },
  {
    "text": "to actually move all of your resource target essentially over to uh your other",
    "start": "2623359",
    "end": "2628400"
  },
  {
    "text": "region as well so just wanted to make sure we'll drop a link in or clinton i'll drop a link into",
    "start": "2628400",
    "end": "2633440"
  },
  {
    "text": "a little bit more on the application recovery controller we may talk about it more later on another episode but definitely take a look at it it's a nice",
    "start": "2633440",
    "end": "2640640"
  },
  {
    "text": "additional way to help you commit these failover mechanisms uh the key thing is to do these things ahead of time right",
    "start": "2640640",
    "end": "2647119"
  },
  {
    "text": "before you have an actual event happen uh have these automated failover records in place that you don't have to worry",
    "start": "2647119",
    "end": "2653200"
  },
  {
    "text": "about when something happens going in and making a manual change at that time so that's probably the biggest thing uh",
    "start": "2653200",
    "end": "2658720"
  },
  {
    "text": "overall so clint just want to pull you in here to see if we have any questions from the audience otherwise that's uh pretty much",
    "start": "2658720",
    "end": "2664240"
  },
  {
    "text": "everything for today no robin and ashwini thanks for thanks for that awesome presentation today we",
    "start": "2664240",
    "end": "2670240"
  },
  {
    "text": "really appreciate it there is no more questions that have come into the chat since the",
    "start": "2670240",
    "end": "2675359"
  },
  {
    "text": "since the last time so um everyone thanks for for tuning in to aws supports you today we looked at some features of",
    "start": "2675359",
    "end": "2683040"
  },
  {
    "text": "route 53 and how you can leverage the routing policies to increase reliability um within your environment um i believe",
    "start": "2683040",
    "end": "2690640"
  },
  {
    "text": "we did answer all of your questions however if there are other questions that come up on route 53 cloudfront we",
    "start": "2690640",
    "end": "2697040"
  },
  {
    "text": "talked a little bit about or any other aws services head over to uh repost dot",
    "start": "2697040",
    "end": "2702720"
  },
  {
    "text": "aws where one of our experts can provide you with an answer to your question or you could be um become a topic of one of",
    "start": "2702720",
    "end": "2709680"
  },
  {
    "text": "our future episodes um yeah so if you do have any other further questions feel free to email us with your feedback also",
    "start": "2709680",
    "end": "2716880"
  },
  {
    "text": "at aws support shoot at amazon.com we definitely want to hear from you so that you have a voice in the show",
    "start": "2716880",
    "end": "2724240"
  },
  {
    "text": "and tell us what you'd like to see or hear about uh so next monday on aws support you we will have another episode",
    "start": "2724240",
    "end": "2731200"
  },
  {
    "text": "where we will cover getting started with exploratory data analysis on aws uh so",
    "start": "2731200",
    "end": "2736880"
  },
  {
    "text": "we look forward to seeing you then um and thanks for joining us at aws support",
    "start": "2736880",
    "end": "2742079"
  },
  {
    "text": "you today and uh happy cloud happy cloud computing everyone",
    "start": "2742079",
    "end": "2747820"
  },
  {
    "text": "[Music]",
    "start": "2747820",
    "end": "2759780"
  },
  {
    "text": "you",
    "start": "2761760",
    "end": "2763839"
  }
]