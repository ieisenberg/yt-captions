[
  {
    "text": "hi my name is saleh passami",
    "start": "560",
    "end": "3120"
  },
  {
    "text": "and i'm a database specialist solutions",
    "start": "3120",
    "end": "5200"
  },
  {
    "text": "architect for amazon timestream",
    "start": "5200",
    "end": "7440"
  },
  {
    "text": "in this demo i'm going to show you how",
    "start": "7440",
    "end": "9040"
  },
  {
    "text": "to collect store and analyze data for",
    "start": "9040",
    "end": "11519"
  },
  {
    "text": "devops workloads",
    "start": "11519",
    "end": "12960"
  },
  {
    "text": "using amazon timestream telegraph and",
    "start": "12960",
    "end": "15360"
  },
  {
    "text": "grafana",
    "start": "15360",
    "end": "17760"
  },
  {
    "text": "telegraph is an open source plugin",
    "start": "17760",
    "end": "19439"
  },
  {
    "text": "driven server agent for collecting",
    "start": "19439",
    "end": "21199"
  },
  {
    "text": "metrics for various systems including",
    "start": "21199",
    "end": "23279"
  },
  {
    "text": "servers containers",
    "start": "23279",
    "end": "24800"
  },
  {
    "text": "databases and queues and we have",
    "start": "24800",
    "end": "27199"
  },
  {
    "text": "developed time stream output plugin for",
    "start": "27199",
    "end": "29039"
  },
  {
    "text": "telegraph to enable customers",
    "start": "29039",
    "end": "30880"
  },
  {
    "text": "ingest their time service data that is",
    "start": "30880",
    "end": "32960"
  },
  {
    "text": "coming through telegraph and represent",
    "start": "32960",
    "end": "34800"
  },
  {
    "text": "it in influx db",
    "start": "34800",
    "end": "36079"
  },
  {
    "text": "long protocol into amazon time stream",
    "start": "36079",
    "end": "38960"
  },
  {
    "text": "without changing any application code",
    "start": "38960",
    "end": "41920"
  },
  {
    "text": "now let's have a look at architecture",
    "start": "41920",
    "end": "43440"
  },
  {
    "text": "and see different components",
    "start": "43440",
    "end": "46000"
  },
  {
    "text": "on the left you see different sources",
    "start": "46000",
    "end": "48239"
  },
  {
    "text": "generating events and time service data",
    "start": "48239",
    "end": "50879"
  },
  {
    "text": "telegraph input plugins would deliver",
    "start": "50879",
    "end": "53199"
  },
  {
    "text": "the metrics to telegraph",
    "start": "53199",
    "end": "54960"
  },
  {
    "text": "and then time stream output plugin would",
    "start": "54960",
    "end": "57199"
  },
  {
    "text": "convert the metrics from telegraph model",
    "start": "57199",
    "end": "59359"
  },
  {
    "text": "to time stream model and writes them to",
    "start": "59359",
    "end": "61920"
  },
  {
    "text": "amazon timestream",
    "start": "61920",
    "end": "63680"
  },
  {
    "text": "you can then query the data directly in",
    "start": "63680",
    "end": "65840"
  },
  {
    "text": "amazon timestream",
    "start": "65840",
    "end": "66960"
  },
  {
    "text": "or use a tool like grafana to interact",
    "start": "66960",
    "end": "69360"
  },
  {
    "text": "with the data",
    "start": "69360",
    "end": "71360"
  },
  {
    "text": "for this demo i'll set up telegraph on",
    "start": "71360",
    "end": "73520"
  },
  {
    "text": "three ec2 instances to collect cpu",
    "start": "73520",
    "end": "76320"
  },
  {
    "text": "and memory utilization metrics and in",
    "start": "76320",
    "end": "78799"
  },
  {
    "text": "addition i'll set up",
    "start": "78799",
    "end": "79920"
  },
  {
    "text": "and run a sample python application that",
    "start": "79920",
    "end": "82560"
  },
  {
    "text": "continuously estimates the number pi",
    "start": "82560",
    "end": "84799"
  },
  {
    "text": "and sends that along with the iteration",
    "start": "84799",
    "end": "87119"
  },
  {
    "text": "number as metrics",
    "start": "87119",
    "end": "88560"
  },
  {
    "text": "to telegraph we're going to create three",
    "start": "88560",
    "end": "91360"
  },
  {
    "text": "tables in amazon time stream for the",
    "start": "91360",
    "end": "92880"
  },
  {
    "text": "metrics coming from memory cpu",
    "start": "92880",
    "end": "94880"
  },
  {
    "text": "and the sample application and finally",
    "start": "94880",
    "end": "97600"
  },
  {
    "text": "we look at all these metrics in a",
    "start": "97600",
    "end": "99280"
  },
  {
    "text": "grafana dashboard",
    "start": "99280",
    "end": "101600"
  },
  {
    "text": "time stream atwood plugin is available",
    "start": "101600",
    "end": "103439"
  },
  {
    "text": "for telegraph version 1.16 and above",
    "start": "103439",
    "end": "107439"
  },
  {
    "text": "there are also a few options to",
    "start": "107439",
    "end": "108720"
  },
  {
    "text": "customize the behavior of the plugin",
    "start": "108720",
    "end": "110640"
  },
  {
    "text": "and the two that i'd like to highlight",
    "start": "110640",
    "end": "112159"
  },
  {
    "text": "here are database name and",
    "start": "112159",
    "end": "114720"
  },
  {
    "text": "mapping mode database name would tell",
    "start": "114720",
    "end": "117040"
  },
  {
    "text": "the plugin",
    "start": "117040",
    "end": "117840"
  },
  {
    "text": "which amazon time stream table to store",
    "start": "117840",
    "end": "119840"
  },
  {
    "text": "the records in",
    "start": "119840",
    "end": "121280"
  },
  {
    "text": "mapping mode would tell the plugin how",
    "start": "121280",
    "end": "123759"
  },
  {
    "text": "to transform the records from line",
    "start": "123759",
    "end": "125439"
  },
  {
    "text": "protocol in telegraph",
    "start": "125439",
    "end": "126960"
  },
  {
    "text": "to records in amazon times tree the",
    "start": "126960",
    "end": "129599"
  },
  {
    "text": "acceptable values for mapping mode",
    "start": "129599",
    "end": "131599"
  },
  {
    "text": "are multi-table and single table",
    "start": "131599",
    "end": "134720"
  },
  {
    "text": "let's look at the differences with an",
    "start": "134720",
    "end": "136080"
  },
  {
    "text": "example here we have some data in line",
    "start": "136080",
    "end": "138800"
  },
  {
    "text": "protocol",
    "start": "138800",
    "end": "139599"
  },
  {
    "text": "where weather and air quality are our",
    "start": "139599",
    "end": "142560"
  },
  {
    "text": "measure names",
    "start": "142560",
    "end": "145200"
  },
  {
    "text": "location and season our tags and our",
    "start": "145280",
    "end": "148239"
  },
  {
    "text": "fields",
    "start": "148239",
    "end": "148959"
  },
  {
    "text": "are temperature humidity no2",
    "start": "148959",
    "end": "152239"
  },
  {
    "text": "and pm25 to represent air pollution in",
    "start": "152239",
    "end": "156080"
  },
  {
    "text": "multi-table mode",
    "start": "156080",
    "end": "157200"
  },
  {
    "text": "this data would be represented in two",
    "start": "157200",
    "end": "159440"
  },
  {
    "text": "tables",
    "start": "159440",
    "end": "160319"
  },
  {
    "text": "weather and air quality and you can see",
    "start": "160319",
    "end": "163120"
  },
  {
    "text": "how the rest of the elements are mapped",
    "start": "163120",
    "end": "165280"
  },
  {
    "text": "we would have dimensions for location",
    "start": "165280",
    "end": "167360"
  },
  {
    "text": "and season and the fields",
    "start": "167360",
    "end": "169360"
  },
  {
    "text": "become our measuring measure names",
    "start": "169360",
    "end": "173040"
  },
  {
    "text": "now what if we specify single table as",
    "start": "173040",
    "end": "175440"
  },
  {
    "text": "mapping mode in the plugin",
    "start": "175440",
    "end": "177280"
  },
  {
    "text": "in that case data would be written to a",
    "start": "177280",
    "end": "179840"
  },
  {
    "text": "single table",
    "start": "179840",
    "end": "181120"
  },
  {
    "text": "and you would need to specify two",
    "start": "181120",
    "end": "182720"
  },
  {
    "text": "additional parameters",
    "start": "182720",
    "end": "184159"
  },
  {
    "text": "one would be table name to use in time",
    "start": "184159",
    "end": "186319"
  },
  {
    "text": "stream to store the data",
    "start": "186319",
    "end": "187840"
  },
  {
    "text": "and second would be a dimension name to",
    "start": "187840",
    "end": "190239"
  },
  {
    "text": "store line protocol",
    "start": "190239",
    "end": "191599"
  },
  {
    "text": "measurement names which in this example",
    "start": "191599",
    "end": "194480"
  },
  {
    "text": "are weather and",
    "start": "194480",
    "end": "195360"
  },
  {
    "text": "air quality and as you see here we have",
    "start": "195360",
    "end": "198560"
  },
  {
    "text": "a specified that measure name",
    "start": "198560",
    "end": "200239"
  },
  {
    "text": "to be namespace then similar to",
    "start": "200239",
    "end": "202879"
  },
  {
    "text": "multi-table mode",
    "start": "202879",
    "end": "204159"
  },
  {
    "text": "season and location tags become",
    "start": "204159",
    "end": "205840"
  },
  {
    "text": "dimensions and fields",
    "start": "205840",
    "end": "208080"
  },
  {
    "text": "become measure measure names in time",
    "start": "208080",
    "end": "210159"
  },
  {
    "text": "stream",
    "start": "210159",
    "end": "211760"
  },
  {
    "text": "with that let's start the demo",
    "start": "211760",
    "end": "215599"
  },
  {
    "text": "as the first step i'm going to create a",
    "start": "216319",
    "end": "217920"
  },
  {
    "text": "database and the three tables that we",
    "start": "217920",
    "end": "219440"
  },
  {
    "text": "need",
    "start": "219440",
    "end": "220480"
  },
  {
    "text": "so i'm going to databases section create",
    "start": "220480",
    "end": "222879"
  },
  {
    "text": "database",
    "start": "222879",
    "end": "224799"
  },
  {
    "text": "i'm going to call it telegraph demo",
    "start": "224799",
    "end": "230159"
  },
  {
    "text": "and then i'm going to create three",
    "start": "231200",
    "end": "232640"
  },
  {
    "text": "tables",
    "start": "232640",
    "end": "235040"
  },
  {
    "text": "for our metrics the first one would be",
    "start": "236080",
    "end": "237920"
  },
  {
    "text": "cpu",
    "start": "237920",
    "end": "239120"
  },
  {
    "text": "i'm going to specify 24 hours of",
    "start": "239120",
    "end": "241280"
  },
  {
    "text": "retention for",
    "start": "241280",
    "end": "242159"
  },
  {
    "text": "in memory and 7 days of retention for",
    "start": "242159",
    "end": "245200"
  },
  {
    "text": "magnetic store",
    "start": "245200",
    "end": "248000"
  },
  {
    "text": "second table would be for memory",
    "start": "250080",
    "end": "255760"
  },
  {
    "text": "same retention periods",
    "start": "255760",
    "end": "258958"
  },
  {
    "text": "and the third table is going going to",
    "start": "260799",
    "end": "262720"
  },
  {
    "text": "hold sample",
    "start": "262720",
    "end": "264560"
  },
  {
    "text": "app metrics so i'm just gonna call it",
    "start": "264560",
    "end": "268160"
  },
  {
    "text": "sample app",
    "start": "268160",
    "end": "269120"
  },
  {
    "text": "with the same retention periods",
    "start": "269120",
    "end": "272479"
  },
  {
    "text": "and now we're ready to move on to",
    "start": "276160",
    "end": "277680"
  },
  {
    "text": "install telegraph",
    "start": "277680",
    "end": "279600"
  },
  {
    "text": "there are multiple ways you can install",
    "start": "279600",
    "end": "281280"
  },
  {
    "text": "telegraph you can",
    "start": "281280",
    "end": "283600"
  },
  {
    "text": "go to the github repository page and",
    "start": "283600",
    "end": "286080"
  },
  {
    "text": "from there there are links to",
    "start": "286080",
    "end": "287440"
  },
  {
    "text": "downloads or the releases section where",
    "start": "287440",
    "end": "289520"
  },
  {
    "text": "you can find different",
    "start": "289520",
    "end": "291120"
  },
  {
    "text": "packages for different operating systems",
    "start": "291120",
    "end": "294000"
  },
  {
    "text": "or you can use",
    "start": "294000",
    "end": "295680"
  },
  {
    "text": "homebrew to install telegraph i'm going",
    "start": "295680",
    "end": "298800"
  },
  {
    "text": "to use homebrew",
    "start": "298800",
    "end": "299759"
  },
  {
    "text": "so i'm going to my ec2 machine and",
    "start": "299759",
    "end": "304560"
  },
  {
    "text": "i'm going to install teddygraph",
    "start": "305120",
    "end": "311840"
  },
  {
    "text": "i'm going to verify the version for this",
    "start": "313360",
    "end": "315440"
  },
  {
    "text": "after installation just to make sure",
    "start": "315440",
    "end": "316800"
  },
  {
    "text": "it's",
    "start": "316800",
    "end": "317280"
  },
  {
    "text": "uh greater than 1.16",
    "start": "317280",
    "end": "322479"
  },
  {
    "text": "it is that's great now we can",
    "start": "322960",
    "end": "326880"
  },
  {
    "text": "generate a sample config file with the",
    "start": "326880",
    "end": "330800"
  },
  {
    "text": "write input output plugins",
    "start": "330800",
    "end": "334560"
  },
  {
    "text": "here you see i'm basically generating a",
    "start": "334560",
    "end": "337520"
  },
  {
    "text": "sample config file for cpu and memory",
    "start": "337520",
    "end": "339520"
  },
  {
    "text": "input plugins and time stream output",
    "start": "339520",
    "end": "341199"
  },
  {
    "text": "plugin",
    "start": "341199",
    "end": "342880"
  },
  {
    "text": "this would generate the sample.conf file",
    "start": "342880",
    "end": "345039"
  },
  {
    "text": "and i can",
    "start": "345039",
    "end": "348240"
  },
  {
    "text": "modify that to point it to the database",
    "start": "348800",
    "end": "352000"
  },
  {
    "text": "that we just created i'm going",
    "start": "352000",
    "end": "355840"
  },
  {
    "text": "down to the bottom",
    "start": "355840",
    "end": "359039"
  },
  {
    "text": "i'm going to change this to",
    "start": "359039",
    "end": "362639"
  },
  {
    "text": "the database that i created just now",
    "start": "363039",
    "end": "366800"
  },
  {
    "text": "and if i go down a little bit more you",
    "start": "366800",
    "end": "368560"
  },
  {
    "text": "see the mapping mode",
    "start": "368560",
    "end": "370400"
  },
  {
    "text": "now it's set to multi-table that's what",
    "start": "370400",
    "end": "372400"
  },
  {
    "text": "we want in this",
    "start": "372400",
    "end": "374080"
  },
  {
    "text": "demo and to keep this",
    "start": "374080",
    "end": "377199"
  },
  {
    "text": "simple i'm going to comment out these",
    "start": "377199",
    "end": "380639"
  },
  {
    "text": "lines here",
    "start": "380639",
    "end": "383039"
  },
  {
    "text": "we're going to save the file",
    "start": "383039",
    "end": "386560"
  },
  {
    "text": "and now we're ready to start telegraph",
    "start": "387039",
    "end": "389840"
  },
  {
    "text": "agent",
    "start": "389840",
    "end": "392240"
  },
  {
    "text": "i'm going to point it to the config file",
    "start": "393440",
    "end": "395759"
  },
  {
    "text": "that",
    "start": "395759",
    "end": "396639"
  },
  {
    "text": "we just edited and i'm going to start it",
    "start": "396639",
    "end": "399919"
  },
  {
    "text": "also in the background so i can",
    "start": "399919",
    "end": "402400"
  },
  {
    "text": "go ahead and install my sample python",
    "start": "402400",
    "end": "406720"
  },
  {
    "text": "application",
    "start": "406840",
    "end": "409039"
  },
  {
    "text": "now that this is started",
    "start": "409039",
    "end": "412479"
  },
  {
    "text": "i'll move on to the next section which",
    "start": "412800",
    "end": "415599"
  },
  {
    "text": "is",
    "start": "415599",
    "end": "416080"
  },
  {
    "text": "installing the python application i have",
    "start": "416080",
    "end": "418880"
  },
  {
    "text": "already",
    "start": "418880",
    "end": "421120"
  },
  {
    "text": "downloaded that uh the python",
    "start": "421120",
    "end": "423680"
  },
  {
    "text": "application and i already have python",
    "start": "423680",
    "end": "425520"
  },
  {
    "text": "installed on this",
    "start": "425520",
    "end": "426880"
  },
  {
    "text": "uh but what we need to do i'm going to",
    "start": "426880",
    "end": "429039"
  },
  {
    "text": "create a",
    "start": "429039",
    "end": "430880"
  },
  {
    "text": "virtual environment for python first",
    "start": "430880",
    "end": "433680"
  },
  {
    "text": "because we need libraries for that",
    "start": "433680",
    "end": "435360"
  },
  {
    "text": "application",
    "start": "435360",
    "end": "436160"
  },
  {
    "text": "so i'm going to create a virtual",
    "start": "436160",
    "end": "438720"
  },
  {
    "text": "environment called emph",
    "start": "438720",
    "end": "440319"
  },
  {
    "text": "and then activate it that application",
    "start": "440319",
    "end": "444639"
  },
  {
    "text": "sample application needs influx db",
    "start": "444639",
    "end": "448560"
  },
  {
    "text": "libraries because it's generating",
    "start": "448560",
    "end": "451120"
  },
  {
    "text": "records in",
    "start": "451120",
    "end": "453440"
  },
  {
    "text": "line protocol format so what i'm going",
    "start": "453440",
    "end": "456400"
  },
  {
    "text": "to do",
    "start": "456400",
    "end": "457199"
  },
  {
    "text": "i'm going to install",
    "start": "457199",
    "end": "460240"
  },
  {
    "text": "pip first",
    "start": "460560",
    "end": "465840"
  },
  {
    "text": "and then install influx db libraries",
    "start": "466400",
    "end": "470400"
  },
  {
    "text": "and now that i have that we can run the",
    "start": "474639",
    "end": "478080"
  },
  {
    "text": "sample application",
    "start": "478080",
    "end": "481039"
  },
  {
    "text": "it takes two arguments uh the server",
    "start": "482319",
    "end": "484960"
  },
  {
    "text": "name",
    "start": "484960",
    "end": "485440"
  },
  {
    "text": "and the port that influx db or telegraph",
    "start": "485440",
    "end": "488879"
  },
  {
    "text": "agent are listening on",
    "start": "488879",
    "end": "491120"
  },
  {
    "text": "so telegraph agent is running on",
    "start": "491120",
    "end": "493599"
  },
  {
    "text": "localhost",
    "start": "493599",
    "end": "494400"
  },
  {
    "text": "and it's listening on port 8186 so i",
    "start": "494400",
    "end": "497599"
  },
  {
    "text": "should be able to run this application",
    "start": "497599",
    "end": "499039"
  },
  {
    "text": "now",
    "start": "499039",
    "end": "501280"
  },
  {
    "text": "all right that is great it's generating",
    "start": "504319",
    "end": "507120"
  },
  {
    "text": "data",
    "start": "507120",
    "end": "508080"
  },
  {
    "text": "and now i can move on to the other two",
    "start": "508080",
    "end": "510080"
  },
  {
    "text": "instances",
    "start": "510080",
    "end": "512638"
  },
  {
    "text": "so on the other two instances",
    "start": "513919",
    "end": "516959"
  },
  {
    "text": "i already have uh telegraph installed",
    "start": "516959",
    "end": "520399"
  },
  {
    "text": "and the",
    "start": "520399",
    "end": "521599"
  },
  {
    "text": "config file uh modified and the sample",
    "start": "521599",
    "end": "525200"
  },
  {
    "text": "app installed so",
    "start": "525200",
    "end": "526320"
  },
  {
    "text": "all i'm gonna do is uh start the",
    "start": "526320",
    "end": "529600"
  },
  {
    "text": "telegraph agent",
    "start": "529600",
    "end": "532560"
  },
  {
    "text": "all right great so all our three",
    "start": "532560",
    "end": "534240"
  },
  {
    "text": "machines are sending",
    "start": "534240",
    "end": "536080"
  },
  {
    "text": "cpu memory uh utilization to",
    "start": "536080",
    "end": "539519"
  },
  {
    "text": "telegraph as well as the iteration",
    "start": "539519",
    "end": "542720"
  },
  {
    "text": "numbers and",
    "start": "542720",
    "end": "543760"
  },
  {
    "text": "uh the estimation for for pi",
    "start": "543760",
    "end": "547120"
  },
  {
    "text": "so next we're going to take a look at uh",
    "start": "547120",
    "end": "550320"
  },
  {
    "text": "look at this data in time stream and",
    "start": "550320",
    "end": "553360"
  },
  {
    "text": "uh grafana all right",
    "start": "553360",
    "end": "556880"
  },
  {
    "text": "now that we have our three ec2 instances",
    "start": "556880",
    "end": "560480"
  },
  {
    "text": "set up let's take a look at data in",
    "start": "560480",
    "end": "562720"
  },
  {
    "text": "amazon timestream",
    "start": "562720",
    "end": "563680"
  },
  {
    "text": "and grafana i'm going to",
    "start": "563680",
    "end": "566959"
  },
  {
    "text": "go to query editor and",
    "start": "566959",
    "end": "570640"
  },
  {
    "text": "take a look at a sample of",
    "start": "570640",
    "end": "573680"
  },
  {
    "text": "records in the cpu table",
    "start": "573680",
    "end": "577600"
  },
  {
    "text": "okay and the memory table",
    "start": "577600",
    "end": "581759"
  },
  {
    "text": "going to look at some of the measures in",
    "start": "587440",
    "end": "590160"
  },
  {
    "text": "the cpu table",
    "start": "590160",
    "end": "592560"
  },
  {
    "text": "some of the measures in the memory table",
    "start": "592560",
    "end": "596320"
  },
  {
    "text": "okay and how about sample app",
    "start": "596320",
    "end": "600720"
  },
  {
    "text": "we had two measures sending from the app",
    "start": "601040",
    "end": "603680"
  },
  {
    "text": "which is shown here",
    "start": "603680",
    "end": "605040"
  },
  {
    "text": "and let's take a look at some sample",
    "start": "605040",
    "end": "607040"
  },
  {
    "text": "data from that",
    "start": "607040",
    "end": "610079"
  },
  {
    "text": "okay that looks good now let's go to",
    "start": "615200",
    "end": "617440"
  },
  {
    "text": "grafana",
    "start": "617440",
    "end": "619839"
  },
  {
    "text": "so i already have graffana installed on",
    "start": "620000",
    "end": "622399"
  },
  {
    "text": "this machine",
    "start": "622399",
    "end": "623600"
  },
  {
    "text": "um but if you're interested we have",
    "start": "623600",
    "end": "625519"
  },
  {
    "text": "another video specific to using grafana",
    "start": "625519",
    "end": "627760"
  },
  {
    "text": "with amazon timestream which you can",
    "start": "627760",
    "end": "629440"
  },
  {
    "text": "find in the",
    "start": "629440",
    "end": "630160"
  },
  {
    "text": "getting started section of amazon",
    "start": "630160",
    "end": "631920"
  },
  {
    "text": "timestream",
    "start": "631920",
    "end": "633279"
  },
  {
    "text": "website or in the tutorial section in",
    "start": "633279",
    "end": "635519"
  },
  {
    "text": "the console",
    "start": "635519",
    "end": "636720"
  },
  {
    "text": "i already have my dashboard imported",
    "start": "636720",
    "end": "638720"
  },
  {
    "text": "here so i'll click on it",
    "start": "638720",
    "end": "641440"
  },
  {
    "text": "and that will show me",
    "start": "641440",
    "end": "644720"
  },
  {
    "text": "different metrics that i'm getting from",
    "start": "644720",
    "end": "648240"
  },
  {
    "text": "from time stream and ingest that through",
    "start": "648240",
    "end": "651839"
  },
  {
    "text": "telegraph so this top one is the last",
    "start": "651839",
    "end": "654480"
  },
  {
    "text": "average pi estimate",
    "start": "654480",
    "end": "655839"
  },
  {
    "text": "number of iterations that are coming",
    "start": "655839",
    "end": "658839"
  },
  {
    "text": "from uh",
    "start": "658839",
    "end": "660720"
  },
  {
    "text": "different hosts and uh cpu utilization",
    "start": "660720",
    "end": "663760"
  },
  {
    "text": "and memory utilization down below",
    "start": "663760",
    "end": "666000"
  },
  {
    "text": "and in the top right corner is the value",
    "start": "666000",
    "end": "668480"
  },
  {
    "text": "of",
    "start": "668480",
    "end": "669440"
  },
  {
    "text": "the estimated value of pi over time",
    "start": "669440",
    "end": "675120"
  },
  {
    "text": "if i want i can go and edit the query",
    "start": "675120",
    "end": "677600"
  },
  {
    "text": "here",
    "start": "677600",
    "end": "678240"
  },
  {
    "text": "or i can also",
    "start": "678240",
    "end": "682000"
  },
  {
    "text": "inspect the query or go to query and",
    "start": "682000",
    "end": "685760"
  },
  {
    "text": "refresh and say response",
    "start": "685760",
    "end": "689839"
  },
  {
    "text": "and that concludes our demo i hope you",
    "start": "691760",
    "end": "694880"
  },
  {
    "text": "enjoyed it",
    "start": "694880",
    "end": "695600"
  },
  {
    "text": "and thanks for watching",
    "start": "695600",
    "end": "702320"
  },
  {
    "text": "you",
    "start": "702320",
    "end": "704399"
  }
]