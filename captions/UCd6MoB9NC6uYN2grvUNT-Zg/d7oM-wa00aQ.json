[
  {
    "start": "0",
    "end": "489000"
  },
  {
    "text": "hi I'm Stephen Hebron I am a senior technical account manager at AWS and I'm",
    "start": "5220",
    "end": "10320"
  },
  {
    "text": "based out of Philadelphia Pennsylvania welcome to AWS supports you where AWS",
    "start": "10320",
    "end": "15420"
  },
  {
    "text": "support experts provide tips to optimize performance in the cloud lower cost and provide you with best practices and",
    "start": "15420",
    "end": "21779"
  },
  {
    "text": "design considerations joining me today is where Goosen from AWS support where",
    "start": "21779",
    "end": "26939"
  },
  {
    "text": "can you give us a quick introduction yeah Stephen hi I'm Mark cousins I'm",
    "start": "26939",
    "end": "32640"
  },
  {
    "text": "working as a solution architect with Enterprise customers here in Belgium",
    "start": "32640",
    "end": "38820"
  },
  {
    "text": "awesome thanks uh today we'll be introducing you to implementing infrastructure as code using python we",
    "start": "38820",
    "end": "45360"
  },
  {
    "text": "will specifically focus on cdk for provisioning of AWS Services before we",
    "start": "45360",
    "end": "51059"
  },
  {
    "text": "get into the details a quick note on for the attendees online use the chat window on the right hand side of your screen to",
    "start": "51059",
    "end": "57480"
  },
  {
    "text": "let us know where you're joining us from today and share your thoughts and questions throughout the episode we look",
    "start": "57480",
    "end": "62879"
  },
  {
    "text": "forward to hearing from you we will also provide a link to our survey so if you'd like to let us know how we did please",
    "start": "62879",
    "end": "69000"
  },
  {
    "text": "click the link and uh provide your feedback uh word can you take it away",
    "start": "69000",
    "end": "76799"
  },
  {
    "text": "yeah thank you so let me start with a bold statement I",
    "start": "76799",
    "end": "82140"
  },
  {
    "text": "think that the maturity of the tools that we use today to configure our",
    "start": "82140",
    "end": "87299"
  },
  {
    "text": "infrastructure is not up to the level of the tools that we use for programming",
    "start": "87299",
    "end": "93420"
  },
  {
    "text": "Maybe you can have a look at the history of both infrastructure and software development to explain that a bit",
    "start": "93420",
    "end": "102900"
  },
  {
    "text": "so the picture you see here is a picture of one of the first uh acts of programming the person in the",
    "start": "102900",
    "end": "110700"
  },
  {
    "text": "middle is Grace Hopkins she's programming a computer to calculate the biggest prime factor of the number 2 to",
    "start": "110700",
    "end": "117540"
  },
  {
    "text": "the 18th power this was about 70 years ago and since Grace Hopkins entered this program lots",
    "start": "117540",
    "end": "125040"
  },
  {
    "text": "of new development has happened in this area for example a few years later the program ring language Fortran was",
    "start": "125040",
    "end": "132060"
  },
  {
    "text": "developed and built on top of that many other languages came and with these languages new paradigms came and with",
    "start": "132060",
    "end": "139319"
  },
  {
    "text": "these new paradigms new ways of thinking about solving problems with programming game also there was a lot of support",
    "start": "139319",
    "end": "144739"
  },
  {
    "text": "built around these programming languages things like tools compilers linters it's",
    "start": "144739",
    "end": "150300"
  },
  {
    "text": "have been developed in the last in the last 70 years or so",
    "start": "150300",
    "end": "156080"
  },
  {
    "text": "the history of infrastructure is started slightly different because For the Longest Time infrastructure required a",
    "start": "156540",
    "end": "164700"
  },
  {
    "text": "very physical act as well there was a need to move boxes from A to B you have",
    "start": "164700",
    "end": "170459"
  },
  {
    "text": "to open the boxes and get what was inside out put it in a rack maybe connect it up with cables the room was",
    "start": "170459",
    "end": "176879"
  },
  {
    "text": "had to be controlled to a certain temperature to be physically secured as well people had to be trained to do that",
    "start": "176879",
    "end": "183660"
  },
  {
    "text": "so the the the development of the tooling around provisioning infrastructure",
    "start": "183660",
    "end": "189780"
  },
  {
    "text": "came from a very different uh from a very different place also it was much more expensive to just",
    "start": "189780",
    "end": "197280"
  },
  {
    "text": "install a new computer there was a very big purchase that needed to be made and that made that companies were much less",
    "start": "197280",
    "end": "204379"
  },
  {
    "text": "willing or much as able to experiment with in these processes so there are many companies developed long processes",
    "start": "204379",
    "end": "211140"
  },
  {
    "text": "to make sure that the right Hardware was procured and to stop wasting money so",
    "start": "211140",
    "end": "216360"
  },
  {
    "text": "these kind of processes are still living with us today but made it of course much harder for infrastructure to develop the",
    "start": "216360",
    "end": "224220"
  },
  {
    "text": "tooling that was able to develop around software development much less experimentation much harder to",
    "start": "224220",
    "end": "229860"
  },
  {
    "text": "experiment now fast forward a few years in 2007 AWS",
    "start": "229860",
    "end": "238080"
  },
  {
    "text": "Amazon at the time introduced one service called sqs that enabled",
    "start": "238080",
    "end": "243900"
  },
  {
    "text": "customers to use a piece of infrastructure without buying the hardware without provisioning something",
    "start": "243900",
    "end": "250319"
  },
  {
    "text": "physically they allowed their users to just use an API or a UI and start that",
    "start": "250319",
    "end": "256979"
  },
  {
    "text": "piece of functionality use it for as long as they wished for and then stop using it without paying for any",
    "start": "256979",
    "end": "263220"
  },
  {
    "text": "provisioning and all without paying after they stopped using it this was a fundamentally different way",
    "start": "263220",
    "end": "269280"
  },
  {
    "text": "of thinking about infrastructure one that has no physical component anymore since then a lot of services were added",
    "start": "269280",
    "end": "276240"
  },
  {
    "text": "and what you can see here is around the 200 services that are offered today each of these Services is replacing in a very",
    "start": "276240",
    "end": "283259"
  },
  {
    "text": "Specialized or a very generic way a piece of physical infrastructure that",
    "start": "283259",
    "end": "288720"
  },
  {
    "text": "had to be purchased and had to be installed at some point in time with a totally virtual experience that can also",
    "start": "288720",
    "end": "295259"
  },
  {
    "text": "be completely without any physical aspect to be provisioned and be shut",
    "start": "295259",
    "end": "301139"
  },
  {
    "text": "down again this of course allows for a lot more of experimentation and a lot of different tools were developed around",
    "start": "301139",
    "end": "307979"
  },
  {
    "text": "this new around this new um let's say way of working for infrastructure",
    "start": "307979",
    "end": "315440"
  },
  {
    "text": "these tools tools can think of in three levels of abstraction the lowest level is the manual the",
    "start": "315540",
    "end": "322919"
  },
  {
    "text": "manual level where people would still go and do a few steps they would just not",
    "start": "322919",
    "end": "327960"
  },
  {
    "text": "involve any physical activity so people would go into the UI click on start new server automatically manage the network",
    "start": "327960",
    "end": "335520"
  },
  {
    "text": "for that server and and do all the steps that were needed to provision the infrastructure just not with the",
    "start": "335520",
    "end": "341699"
  },
  {
    "text": "physical action I mean except for the clicking of the button of course after that people started documenting or",
    "start": "341699",
    "end": "349100"
  },
  {
    "text": "documenting these steps so that it became a bit easier to repeat them in wikis or internal documents",
    "start": "349100",
    "end": "356580"
  },
  {
    "text": "um but but when when something really bad happened there was still a lot of times where you needed to find that one",
    "start": "356580",
    "end": "362039"
  },
  {
    "text": "person that one person that knew how to get this infrastructure up and running again",
    "start": "362039",
    "end": "367080"
  },
  {
    "text": "this is the ask Jenny she knows effect or the ask Bob Pinos or whoever but the",
    "start": "367080",
    "end": "372780"
  },
  {
    "text": "fact that you still are very dependent on a few people who knew how to do these steps",
    "start": "372780",
    "end": "378060"
  },
  {
    "text": "to get rid of this problem or to to help solving this problem there are tools",
    "start": "378060",
    "end": "383340"
  },
  {
    "text": "developed that made infrastructure available as code so you could now as a",
    "start": "383340",
    "end": "388440"
  },
  {
    "text": "team develop a a text file like a code file that you did for your application",
    "start": "388440",
    "end": "394860"
  },
  {
    "text": "code that perfectly described what the infrastructure should look like that you that you needed to run your application",
    "start": "394860",
    "end": "402000"
  },
  {
    "text": "these tools there were quite a few there's quite a few of them terraform is a very famous one there's Chef puppet",
    "start": "402000",
    "end": "408419"
  },
  {
    "text": "ansible and there's also the one that Elizabeth developed called cloud formation all of them have a very",
    "start": "408419",
    "end": "415740"
  },
  {
    "text": "declarative syntax they basically allow you to write in a text file in great detail all the different components of",
    "start": "415740",
    "end": "422340"
  },
  {
    "text": "that infrastructure that you are requiring for your for your application to run there is then",
    "start": "422340",
    "end": "429180"
  },
  {
    "text": "an application that will take these configuration files and turn them into real",
    "start": "429180",
    "end": "435000"
  },
  {
    "text": "virtual Hardware in in the cloud for example",
    "start": "435000",
    "end": "440400"
  },
  {
    "text": "this was a great step forward but still it is a totally different way of thinking about about a problem than",
    "start": "440400",
    "end": "447360"
  },
  {
    "text": "about software development in the previous life I was a software developer and I was very proficient with languages",
    "start": "447360",
    "end": "453300"
  },
  {
    "text": "like Java closure JavaScript but I remember clearly that at the time when infrastructure as code was introduced",
    "start": "453300",
    "end": "459599"
  },
  {
    "text": "for me my first reaction was yet another language yet another thing to configure yet another tool chain to to master yet",
    "start": "459599",
    "end": "465900"
  },
  {
    "text": "another thing to explain to new people who joined the team that's another thing to get into documentation to find all",
    "start": "465900",
    "end": "471720"
  },
  {
    "text": "the details when when it goes wrong and that's where I think that the next step here the next logical step is",
    "start": "471720",
    "end": "478199"
  },
  {
    "text": "actually instead of infrastructure as code infrastructure is code and that is exactly what cdk is is",
    "start": "478199",
    "end": "486900"
  },
  {
    "text": "offering us cdk is a a different way of approaching",
    "start": "486900",
    "end": "493199"
  },
  {
    "start": "489000",
    "end": "1641000"
  },
  {
    "text": "infrastructure definition as code it basically is not a separate language it",
    "start": "493199",
    "end": "498900"
  },
  {
    "text": "is a library that plugs into an existing language it's available in six different",
    "start": "498900",
    "end": "504000"
  },
  {
    "text": "languages there is support for Java there is support for.net c-sharp there is support for go Python",
    "start": "504000",
    "end": "511500"
  },
  {
    "text": "typescript and JavaScript so if any of these languages are familiar to you you can basically keep on using that same",
    "start": "511500",
    "end": "517800"
  },
  {
    "text": "language just import a library and start developing infrastructure next to your application code",
    "start": "517800",
    "end": "523680"
  },
  {
    "text": "this has um this has a few advantages um and I will come back to to the advantages later it is also by now being",
    "start": "523680",
    "end": "531360"
  },
  {
    "text": "used as the de facto standard inside AWS",
    "start": "531360",
    "end": "535940"
  },
  {
    "text": "so this is a screenshot of my editor while editing uh some infrastructures",
    "start": "537180",
    "end": "542459"
  },
  {
    "text": "code definitions as you can see it looks very much like any normal application code there is a class definition there",
    "start": "542459",
    "end": "548399"
  },
  {
    "text": "but more importantly um it is just a normal python file and and you also get all the nice things",
    "start": "548399",
    "end": "554880"
  },
  {
    "text": "from the support from the editor that you would get while developing normal python code you",
    "start": "554880",
    "end": "562080"
  },
  {
    "text": "can see there there is a pop-up showing me what kind of methods are available on this object and there is also inline",
    "start": "562080",
    "end": "568440"
  },
  {
    "text": "documentation all of these things you are used to from the from the python",
    "start": "568440",
    "end": "573480"
  },
  {
    "text": "development experience while writing software is now also available to you",
    "start": "573480",
    "end": "578640"
  },
  {
    "text": "for developing infrastructure",
    "start": "578640",
    "end": "582380"
  },
  {
    "text": "so why would you use cdk first of all again like I said it is the same tools for",
    "start": "584600",
    "end": "590940"
  },
  {
    "text": "infrastructure as it is for developing software it's one less thing to keep in your head while developing software is",
    "start": "590940",
    "end": "597420"
  },
  {
    "text": "one less new thing that people that join the team have to learn it's one less dual chain that you have to set up one",
    "start": "597420",
    "end": "603180"
  },
  {
    "text": "is way of of handling compiler errors because it's all bundled in that same",
    "start": "603180",
    "end": "609060"
  },
  {
    "text": "language that you already use it reduces as such it reduces the number",
    "start": "609060",
    "end": "614760"
  },
  {
    "text": "of tools and it gives you the same level of tool support like code completion",
    "start": "614760",
    "end": "621300"
  },
  {
    "text": "compiler type checks that you are used to from your normal software development experience if you use a language like",
    "start": "621300",
    "end": "628140"
  },
  {
    "text": "python you like why you might get hints but if you use a language like Java or typescript you will actually get very",
    "start": "628140",
    "end": "634620"
  },
  {
    "text": "strong compiler support for for things like type checking but for me the major advantage of cdk",
    "start": "634620",
    "end": "642240"
  },
  {
    "text": "and the one thing that that is really setting it apart from from more declarative languages like cloud",
    "start": "642240",
    "end": "648120"
  },
  {
    "text": "formation is the fact that you can abstract your infrastructure because you're not just using a programming",
    "start": "648120",
    "end": "654480"
  },
  {
    "text": "language as a way to configure infrastructure you're using all the concepts behind it for that are",
    "start": "654480",
    "end": "660300"
  },
  {
    "text": "available to you for abstraction as well things like inheritance can be used now",
    "start": "660300",
    "end": "665579"
  },
  {
    "text": "to to rep or to combine different uh different parts of infrastructure together and to come and to distribute",
    "start": "665579",
    "end": "671880"
  },
  {
    "text": "them as as a single thing to to enable your teams to talk about constructs as a",
    "start": "671880",
    "end": "678240"
  },
  {
    "text": "whole as a more abstract entity than if you were talking about them as all the individual components",
    "start": "678240",
    "end": "684860"
  },
  {
    "text": "giving this abstraction it's also much easier to share these constructs with the wider World it could be inside the",
    "start": "684860",
    "end": "691560"
  },
  {
    "text": "organization it could also be outside the organization so it allows it allows teams to think in a more abstract way",
    "start": "691560",
    "end": "697620"
  },
  {
    "text": "about our infrastructure and not focusing too much on the individual components but rather look at what",
    "start": "697620",
    "end": "704339"
  },
  {
    "text": "you're building with it how it's built together and then shipping this and and sharing it inside the organization",
    "start": "704339",
    "end": "712579"
  },
  {
    "text": "so cdk is organized in such a way that allows the users to think in three",
    "start": "715920",
    "end": "721620"
  },
  {
    "text": "levels of abstraction the lowest level is very similar to cloud formation it",
    "start": "721620",
    "end": "728160"
  },
  {
    "text": "basically allows you to create constructs we'll come to that to that later but to get constructs there are",
    "start": "728160",
    "end": "733920"
  },
  {
    "text": "more or less one-on-one mapped to cloud formation constructs so if you write a",
    "start": "733920",
    "end": "739200"
  },
  {
    "text": "cdk like that it will just be like cloud formation in a slightly different syntax you will get some advantages with you",
    "start": "739200",
    "end": "745680"
  },
  {
    "text": "not use the full power of cdk if you're in the second level you start",
    "start": "745680",
    "end": "752220"
  },
  {
    "text": "wrapping these constructs maybe bringing a few things together providing some sensible defaults for",
    "start": "752220",
    "end": "758220"
  },
  {
    "text": "your setup and then start sharing a bit more higher level concerns and that's where cdk starts adding more value so",
    "start": "758220",
    "end": "765300"
  },
  {
    "text": "say for example that a level one construct could be an S3 buckets a plane",
    "start": "765300",
    "end": "770540"
  },
  {
    "text": "standard AWS S3 buckets this would be a simple thing to Define but it might for",
    "start": "770540",
    "end": "776639"
  },
  {
    "text": "your organization might not be enough maybe you have some policies company policies that uh that that's demand that",
    "start": "776639",
    "end": "784200"
  },
  {
    "text": "you put a certain protection in place a certain Security Group maybe or you block Public Access you could add these",
    "start": "784200",
    "end": "790440"
  },
  {
    "text": "things on top of the standard S3 buckets and then wrap that in a concert that you",
    "start": "790440",
    "end": "795540"
  },
  {
    "text": "now use as if it were in a street bracket but it's adapted to your situation so you can stop thinking about",
    "start": "795540",
    "end": "800700"
  },
  {
    "text": "all the implementation details so to say for a company specific S3 buckets you could just take it as a storage bin or",
    "start": "800700",
    "end": "807060"
  },
  {
    "text": "whoever you want to whatever you want to call it and pass it on share that and use it now for in any case where you",
    "start": "807060",
    "end": "814139"
  },
  {
    "text": "would actually not only need an S3 bucket and you don't you can you don't have to um all add all the steps that you would",
    "start": "814139",
    "end": "820440"
  },
  {
    "text": "normally have to do um that's that's that's what the level where we call curated uh curated",
    "start": "820440",
    "end": "827040"
  },
  {
    "text": "components and these components into even a higher level of extraction and you think about",
    "start": "827040",
    "end": "833820"
  },
  {
    "text": "the infrastructure not just as a collection of uh of components but as a",
    "start": "833820",
    "end": "839700"
  },
  {
    "text": "something that solves a business problem then you're thinking about level three and that's what we call the patterns so",
    "start": "839700",
    "end": "845459"
  },
  {
    "text": "on a pattern you could think about for example a API an API will actually contain quite a few components it will",
    "start": "845459",
    "end": "852000"
  },
  {
    "text": "contain an HTTP part it will handle the request it will also contain some logic that that is that's used to generate the",
    "start": "852000",
    "end": "858420"
  },
  {
    "text": "responses everything in between has to be wired up um all these things together could be",
    "start": "858420",
    "end": "864240"
  },
  {
    "text": "very different depending on your um on your um on your company setup",
    "start": "864240",
    "end": "871459"
  },
  {
    "text": "um but but these could all be packaged together and could be used to uh it",
    "start": "872100",
    "end": "878220"
  },
  {
    "text": "could then be shared over the different uh over the different Departments of your organization so that you have some",
    "start": "878220",
    "end": "883680"
  },
  {
    "text": "kind of unified way to define an API",
    "start": "883680",
    "end": "887660"
  },
  {
    "text": "and this is where um this is where cdk really adds value because it allows you to to think about this a higher level of",
    "start": "889320",
    "end": "896279"
  },
  {
    "text": "abstractions to say so let's dive a bit uh in in these uh in",
    "start": "896279",
    "end": "903120"
  },
  {
    "text": "these Concepts here um the lowest level in cdk or the most fundamental building block in cdk is the",
    "start": "903120",
    "end": "910260"
  },
  {
    "text": "construct and the construct is for example could be a Lambda function or could be an S3 bucket it could be a",
    "start": "910260",
    "end": "916740"
  },
  {
    "text": "dynamodb table or or it could and be anything that that you can also Define using the UI",
    "start": "916740",
    "end": "922980"
  },
  {
    "text": "these constructs um can be can be um combined and then",
    "start": "922980",
    "end": "928519"
  },
  {
    "text": "deployed as a stack so a stack here is a single unit of deployment a stack can",
    "start": "928519",
    "end": "935040"
  },
  {
    "text": "also then be deployed independently if you have multiple Stacks inside an application each stack can be deployed",
    "start": "935040",
    "end": "940980"
  },
  {
    "text": "independently so the application is the combination of",
    "start": "940980",
    "end": "947220"
  },
  {
    "text": "all the stacks all the stacks are composed out of different constructs and the constructs are the things that you define within your within your",
    "start": "947220",
    "end": "954240"
  },
  {
    "text": "organization that you can use to reason about and you can use to share now class formation comes with a console",
    "start": "954240",
    "end": "961260"
  },
  {
    "text": "application CLI sorry cdk comes with the CLI that compiles your cloud formation code",
    "start": "961260",
    "end": "969360"
  },
  {
    "text": "and sorry that compiles your cdk code into cloud formation template and this Cloud automation template is then",
    "start": "969360",
    "end": "975300"
  },
  {
    "text": "deployed to AWS and inside AWS the cloudformation web service is used to",
    "start": "975300",
    "end": "981180"
  },
  {
    "text": "provision these these resources maybe Steven are any questions at this",
    "start": "981180",
    "end": "988920"
  },
  {
    "text": "point in time around around the presentation so far yeah we've got a question from jibjabo",
    "start": "988920",
    "end": "996120"
  },
  {
    "text": "six um they'd like to know when to use a different stack",
    "start": "996120",
    "end": "1002259"
  },
  {
    "text": "and it's a very good question so it's um it's the the fundamental thing here to",
    "start": "1002300",
    "end": "1007339"
  },
  {
    "text": "realize is that Stacks can be deployed independently so if there's inside your application parts that you would rather",
    "start": "1007339",
    "end": "1013220"
  },
  {
    "text": "deploy let's say more often like the code that is running on your back end",
    "start": "1013220",
    "end": "1018560"
  },
  {
    "text": "this could be deployed independently from things that you might not deploy that often like your database servers so",
    "start": "1018560",
    "end": "1024678"
  },
  {
    "text": "think about speed and and and and and how often things will change together basically a bit like the the way",
    "start": "1024679",
    "end": "1031339"
  },
  {
    "text": "microservices should be cut so if you think about it like that it becomes clear where you could use that as a",
    "start": "1031339",
    "end": "1037520"
  },
  {
    "text": "guidance to know where to cut your Stakes cool thanks don't have any other",
    "start": "1037520",
    "end": "1043280"
  },
  {
    "text": "questions so uh carry on all right go to the next slide then",
    "start": "1043280",
    "end": "1049720"
  },
  {
    "text": "so if you think about infrastructure in this slightly higher uh abstraction",
    "start": "1050660",
    "end": "1057919"
  },
  {
    "text": "you can start building libraries of components or uh",
    "start": "1057919",
    "end": "1064280"
  },
  {
    "text": "things that you can then share within your organization and I have seen quite a few customers that built this internal",
    "start": "1064280",
    "end": "1070460"
  },
  {
    "text": "library of ways how to solve business problems with with cdk so as a huge",
    "start": "1070460",
    "end": "1077900"
  },
  {
    "text": "example a huge Advantage for teams that started are starting out and they can",
    "start": "1077900",
    "end": "1082940"
  },
  {
    "text": "just build on top of what other teams have already discovered or already built and it also allows you to put some kind",
    "start": "1082940",
    "end": "1089480"
  },
  {
    "text": "of governments in place right you could say this is the best practice for our organization to do apis for example just",
    "start": "1089480",
    "end": "1095660"
  },
  {
    "text": "to take the same example again this is the best way that we found that the organization wants to do uh storage in",
    "start": "1095660",
    "end": "1102080"
  },
  {
    "text": "S3 and and these things can then be shared and then this could either be shared as a um",
    "start": "1102080",
    "end": "1108020"
  },
  {
    "text": "as a in a way where there is an um in a way where there is a different team",
    "start": "1108020",
    "end": "1113660"
  },
  {
    "text": "owning each of these components or it can be shared where teams are working",
    "start": "1113660",
    "end": "1118760"
  },
  {
    "text": "together on these components there is a lot of inspiration there you could take from the open source community and of",
    "start": "1118760",
    "end": "1124580"
  },
  {
    "text": "course if you share these things it's not just about giving you can also use what is already created so there's for",
    "start": "1124580",
    "end": "1130160"
  },
  {
    "text": "example a contract library in cdkpatrons.com uh that you can visit and see what other",
    "start": "1130160",
    "end": "1136160"
  },
  {
    "text": "people have built with cdk and then also import that inside your application and build on top of that",
    "start": "1136160",
    "end": "1143259"
  },
  {
    "text": "the the patterns that are there are very diverse there's for example one that allows you to add monitoring to uh to to",
    "start": "1146020",
    "end": "1153919"
  },
  {
    "text": "quite a few uh to quite a few components so we could just pull in a a construct from cdkpatrons.com add that to your",
    "start": "1153919",
    "end": "1161600"
  },
  {
    "text": "application as a stack or or maybe add it to a stack that you already have and",
    "start": "1161600",
    "end": "1167360"
  },
  {
    "text": "then you can start adding all of these things to uh and you can start adding monitoring for all the other components",
    "start": "1167360",
    "end": "1174080"
  },
  {
    "text": "in your in your stack so next I would like to touch briefly on",
    "start": "1174080",
    "end": "1181940"
  },
  {
    "text": "on best practices because of course it might be the same language it doesn't mean that you can tweet it exactly the",
    "start": "1181940",
    "end": "1188720"
  },
  {
    "text": "same as as normal programming it's of course a it's of course a different different setup even if it's the same",
    "start": "1188720",
    "end": "1194480"
  },
  {
    "text": "languages there's definitely best practices there that that you that you should should be aware of so first of",
    "start": "1194480",
    "end": "1201260"
  },
  {
    "text": "all and I think nobody will be surprised about that you should version your code this makes it much easier to roll back",
    "start": "1201260",
    "end": "1207559"
  },
  {
    "text": "if there's something if something went wrong it's actually one of the great advantages of using infrastructure as",
    "start": "1207559",
    "end": "1212960"
  },
  {
    "text": "code by defining everything in a text file you can use all these nice tools that are available for text file",
    "start": "1212960",
    "end": "1218360"
  },
  {
    "text": "versioning like git is probably one of the most popular once you have it versioned you should",
    "start": "1218360",
    "end": "1223640"
  },
  {
    "text": "also think about continuous integration even continuous deployments it's more almost to become kind of standard",
    "start": "1223640",
    "end": "1230960"
  },
  {
    "text": "practice for software development but I think it works very well for infrastructure as well of course the ICD",
    "start": "1230960",
    "end": "1236840"
  },
  {
    "text": "you cannot just do that without without any support there so what testing is for",
    "start": "1236840",
    "end": "1242600"
  },
  {
    "text": "for example very important there for for for testing you could uh you could you could you",
    "start": "1242600",
    "end": "1248120"
  },
  {
    "text": "could think about about linting which is not really testing of course but this is not a quality check there are some nice",
    "start": "1248120",
    "end": "1253940"
  },
  {
    "text": "tools out there CFN neck is is an interesting one there's also CFN",
    "start": "1253940",
    "end": "1259260"
  },
  {
    "text": "[Music] CFN check which are basically codifying best practices in a way that you can run",
    "start": "1259260",
    "end": "1266419"
  },
  {
    "text": "them against your cdk code and get warnings if if something would be for",
    "start": "1266419",
    "end": "1272059"
  },
  {
    "text": "example an obvious security security issue and These Warnings can then either be ignored because sometimes you know",
    "start": "1272059",
    "end": "1278360"
  },
  {
    "text": "this is the way we do it and there's no risk there or they could stop the pipeline and in case your test coverage",
    "start": "1278360",
    "end": "1284360"
  },
  {
    "text": "is good enough you know that once the test is passed the actually new version",
    "start": "1284360",
    "end": "1289940"
  },
  {
    "text": "of the infrastructure can be deployed into your into your environments then of course after you deploy to the",
    "start": "1289940",
    "end": "1296120"
  },
  {
    "text": "environment there should be some additional testing a really cool pattern there I think is the blue green deployment where you deploy a new",
    "start": "1296120",
    "end": "1301640"
  },
  {
    "text": "version of your application you start testing if that if that new version is",
    "start": "1301640",
    "end": "1306820"
  },
  {
    "text": "performing as expected if not you roll back and if it is you start gradually",
    "start": "1306820",
    "end": "1311919"
  },
  {
    "text": "deprecating the old version for for in favor of the news originally",
    "start": "1311919",
    "end": "1317799"
  },
  {
    "text": "um I think also Cloud Rec mentioned here that that smaller Stacks could be used for testing I think that's a great a",
    "start": "1318140",
    "end": "1324380"
  },
  {
    "text": "great idea and because indeed a shorter shorter time a shorter time to deploy",
    "start": "1324380",
    "end": "1330500"
  },
  {
    "text": "you could basically select a subset of of components to to deploy and put it in",
    "start": "1330500",
    "end": "1335780"
  },
  {
    "text": "a stack and test that immediately that sounds like a great idea I haven't personally done it yet but it sounds",
    "start": "1335780",
    "end": "1340820"
  },
  {
    "text": "like a great idea um another thing is another question I see",
    "start": "1340820",
    "end": "1347659"
  },
  {
    "text": "here is that um uh amplify hosting",
    "start": "1347659",
    "end": "1354100"
  },
  {
    "text": "can we can you do something that mimics amplify hosting um there I'm not 100",
    "start": "1355100",
    "end": "1360679"
  },
  {
    "text": "sure what the question means maybe if you could clarify it a bit because cdk is actually pretty different from that",
    "start": "1360679",
    "end": "1366740"
  },
  {
    "text": "right you could construct something that does hosting for you but it's quite uh it's it's quite different tool it has a",
    "start": "1366740",
    "end": "1373100"
  },
  {
    "text": "very different very different use case I think it's basically defining how to do the hosting it's not something that",
    "start": "1373100",
    "end": "1379580"
  },
  {
    "text": "hosts itself to say okay so uh for the uh for the best",
    "start": "1379580",
    "end": "1385640"
  },
  {
    "text": "practices another very important uh thing that you have to think about as a team is slos with slos I mean",
    "start": "1385640",
    "end": "1393620"
  },
  {
    "text": "service level objectives so these are not SLA so there's no agreement here",
    "start": "1393620",
    "end": "1398840"
  },
  {
    "text": "there's no service level agreement not something that you put inside the contract that you sign with your",
    "start": "1398840",
    "end": "1404299"
  },
  {
    "text": "customer that you might have some liabilities if you don't meet them service level objectives are things that",
    "start": "1404299",
    "end": "1410120"
  },
  {
    "text": "the team themselves Define and that they can decide then on whether this is something that they can achieve or not",
    "start": "1410120",
    "end": "1418100"
  },
  {
    "text": "um it is something that you should Define together with Technical and product people and have an agreement on",
    "start": "1418100",
    "end": "1423620"
  },
  {
    "text": "because objectives will be both functional like we have to load the overview page when people go to the",
    "start": "1423620",
    "end": "1430159"
  },
  {
    "text": "overview page for example but there will also be non-fiction requirements like the page should be loaded in a few uh",
    "start": "1430159",
    "end": "1436159"
  },
  {
    "text": "milliseconds or or should be up most of the time and if you have these as well as defines you can also automate checks",
    "start": "1436159",
    "end": "1442880"
  },
  {
    "text": "and make sure that the uh that the that the application the new version of the",
    "start": "1442880",
    "end": "1447919"
  },
  {
    "text": "application that you just deployed the infrastructure you just deployed is actually still reaching meeting these",
    "start": "1447919",
    "end": "1454100"
  },
  {
    "text": "these checks [Music] the um the the very important topic here",
    "start": "1454100",
    "end": "1462500"
  },
  {
    "text": "also is the concept of uh least privileges for deploying what this means",
    "start": "1462500",
    "end": "1468980"
  },
  {
    "text": "is that you will have an a user that will be used to deploy your application to most likely be a user that is um that",
    "start": "1468980",
    "end": "1477440"
  },
  {
    "text": "is created only for this purpose or a role that is created only for this purpose and you should try to limit the",
    "start": "1477440",
    "end": "1485179"
  },
  {
    "text": "the permissions that this role has so that only can do the deployment of your application",
    "start": "1485179",
    "end": "1490700"
  },
  {
    "text": "and vice versa ideally you think you might have a setup where only your code",
    "start": "1490700",
    "end": "1497000"
  },
  {
    "text": "pipeline so the thing that runs your checks and runs your deploys is able to assume this role no human can ever",
    "start": "1497000",
    "end": "1503000"
  },
  {
    "text": "assume this role under uh except on a very very uh big exceptional",
    "start": "1503000",
    "end": "1509120"
  },
  {
    "text": "circumstances if if you have a setup like that you can be you can be sure",
    "start": "1509120",
    "end": "1515120"
  },
  {
    "text": "that the infrastructure as code definition will match the environment",
    "start": "1515120",
    "end": "1521000"
  },
  {
    "text": "that has been created because only that one role can deploy the uh to that",
    "start": "1521000",
    "end": "1526159"
  },
  {
    "text": "account and the only way that this role is being assumed is by using an automatic process that takes your",
    "start": "1526159",
    "end": "1532400"
  },
  {
    "text": "infrastructure's code runs your tests and only if they are successful moves that into uh production",
    "start": "1532400",
    "end": "1539860"
  },
  {
    "text": "another one for uh around security is that you can use cdk to do some checks",
    "start": "1540500",
    "end": "1545620"
  },
  {
    "text": "for example testing whether a certain S3 bucket is reachable but you cannot use",
    "start": "1545620",
    "end": "1550820"
  },
  {
    "text": "cdk for enforcing security for that you should use a native mechanisms like IM",
    "start": "1550820",
    "end": "1556039"
  },
  {
    "text": "or security groups that are built into into AWS",
    "start": "1556039",
    "end": "1562120"
  },
  {
    "text": "the deployment of your application if you have defined it in infrastructure as",
    "start": "1562700",
    "end": "1567860"
  },
  {
    "text": "code becomes much easier over different regions and different accounts because you have the same definition that you",
    "start": "1567860",
    "end": "1573799"
  },
  {
    "text": "can now deploy to to two different accounts or two different regions or even more and that allows you of course",
    "start": "1573799",
    "end": "1579799"
  },
  {
    "text": "to have test environments that are very close to your production environment and also to develop to deploy in a",
    "start": "1579799",
    "end": "1585799"
  },
  {
    "text": "multi-region setup that makes your application more resilient for for uh for failures",
    "start": "1585799",
    "end": "1593440"
  },
  {
    "text": "um this was a a short introduction now I would really like to show you a bit in a",
    "start": "1597380",
    "end": "1602539"
  },
  {
    "text": "demo how developing a infrastructures code project using cdk",
    "start": "1602539",
    "end": "1608960"
  },
  {
    "text": "works but before I do that are there any questions uh in in the room",
    "start": "1608960",
    "end": "1615080"
  },
  {
    "text": "uh thanks word um from um from the ones you already answered",
    "start": "1615080",
    "end": "1620539"
  },
  {
    "text": "with uh Rudy X world and Cloud Rec",
    "start": "1620539",
    "end": "1625880"
  },
  {
    "text": "um I'm not seeing any other questions at the moment coming in so if you want to go ahead and jump into the demo",
    "start": "1625880",
    "end": "1633440"
  },
  {
    "text": "sure let me start the demo here",
    "start": "1633440",
    "end": "1637778"
  },
  {
    "start": "1641000",
    "end": "2727000"
  },
  {
    "text": "so what what you'll see here is a an instance of a visual code code editor",
    "start": "1641779",
    "end": "1648740"
  },
  {
    "text": "that I use for normal python development and they start out with them this demo",
    "start": "1648740",
    "end": "1653779"
  },
  {
    "text": "starts out in an empty folder um this uh always has a good start for a",
    "start": "1653779",
    "end": "1659120"
  },
  {
    "text": "project and it's also a requirement for a cdk project the First Command that you will do to start a cdk project is to",
    "start": "1659120",
    "end": "1666020"
  },
  {
    "text": "command cdk init app that you can specify the language with the flag language in our case for",
    "start": "1666020",
    "end": "1671900"
  },
  {
    "text": "this demo will use python running this command will create quite a",
    "start": "1671900",
    "end": "1677059"
  },
  {
    "text": "few files you'll see them appear on the left in the browser and you also see",
    "start": "1677059",
    "end": "1683120"
  },
  {
    "text": "some output here apart from the normal code files there's also some virtual amp",
    "start": "1683120",
    "end": "1689059"
  },
  {
    "text": "environments that are being created so that you know for sure that the python that you are using is the right version",
    "start": "1689059",
    "end": "1696200"
  },
  {
    "text": "and has the right dependencies you need to activate that version of python here I use the fish command because that's",
    "start": "1696200",
    "end": "1703400"
  },
  {
    "text": "what I use here and you also see that there is a requirement file that's been created this requirement file contains",
    "start": "1703400",
    "end": "1709760"
  },
  {
    "text": "the libraries that we need to install installing these libraries in Python is pretty straightforward for that we use",
    "start": "1709760",
    "end": "1716600"
  },
  {
    "text": "Python pip install minus r and under requirements file",
    "start": "1716600",
    "end": "1723340"
  },
  {
    "text": "this command will download quite a few libraries so basically dependencies that are listed in that file above and and",
    "start": "1723860",
    "end": "1729320"
  },
  {
    "text": "then also of course there are transient dependencies and um yeah once once that this is done",
    "start": "1729320",
    "end": "1735980"
  },
  {
    "text": "you are ready to go with the with cdk development",
    "start": "1735980",
    "end": "1741679"
  },
  {
    "text": "so next to the requirements file there is also a readme file that was created and then there is the cdk.json file",
    "start": "1741679",
    "end": "1747559"
  },
  {
    "text": "which is kind of configuration if you want so one thing that you could could configure in there is for example the",
    "start": "1747559",
    "end": "1752600"
  },
  {
    "text": "profile that you want to use to provision your application this profile will be used this is basically a user or",
    "start": "1752600",
    "end": "1758659"
  },
  {
    "text": "a role that is defined in your AWS credentials file and this is then being being used for provisioning your",
    "start": "1758659",
    "end": "1765860"
  },
  {
    "text": "infrastructure inside AWS",
    "start": "1765860",
    "end": "1770080"
  },
  {
    "text": "the next um important file here is the app.pi this is the entry point of your",
    "start": "1771440",
    "end": "1777200"
  },
  {
    "text": "application it's not normally going to be a lot of development happening in here because basically instantiate a",
    "start": "1777200",
    "end": "1784399"
  },
  {
    "text": "class of type IC demo stack and that's the definition of this class is where most of your infrastructure has code",
    "start": "1784399",
    "end": "1791179"
  },
  {
    "text": "will land so you basically create a stack and then this stack will be referenced app you can also see that",
    "start": "1791179",
    "end": "1797779"
  },
  {
    "text": "there is a test file being created address there is a nice nice testing",
    "start": "1797779",
    "end": "1803840"
  },
  {
    "text": "framework and also part as of cdk you should definitely have a look at that if you want to take this into production",
    "start": "1803840",
    "end": "1811720"
  },
  {
    "text": "um the the steps in the life the lives let's say the life cycle steps of a cdk application of course the bird starts",
    "start": "1814700",
    "end": "1821600"
  },
  {
    "text": "with cdk in it we've done that then there is the build step or synthesized",
    "start": "1821600",
    "end": "1826640"
  },
  {
    "text": "step you can do div afterwards and deploy after that you can also see that on the top here so you write code inside",
    "start": "1826640",
    "end": "1833380"
  },
  {
    "text": "cdk and python files you execute the CLI this synthesizes actually into cloud",
    "start": "1833380",
    "end": "1839659"
  },
  {
    "text": "formation templates it's really important to realize that cdk is basically taking cdk code putting it",
    "start": "1839659",
    "end": "1845840"
  },
  {
    "text": "into cloud formation then the cloudformation gets deployed into AWS where the cloud formation service will",
    "start": "1845840",
    "end": "1852740"
  },
  {
    "text": "then provision your Cloud resources that we have defined in in cdk",
    "start": "1852740",
    "end": "1858679"
  },
  {
    "text": "okay that's in the last step the deploy step so at this point in time we did the init",
    "start": "1858679",
    "end": "1864559"
  },
  {
    "text": "step so the next step would be to do the send step the stint will automatically do a build step for us",
    "start": "1864559",
    "end": "1872020"
  },
  {
    "text": "so let's uh let's try this out",
    "start": "1872419",
    "end": "1877539"
  },
  {
    "text": "so again this will take your infrastructure as code definitions in cdk so in Python and we'll output the",
    "start": "1881600",
    "end": "1890260"
  },
  {
    "text": "cloud formation template that you can see here in the console of course the",
    "start": "1890260",
    "end": "1895940"
  },
  {
    "text": "console is not the easiest place to look at this but fortunately the file was also created inside our project here we",
    "start": "1895940",
    "end": "1903440"
  },
  {
    "text": "can see the new folder with a new file there template.json and this file is basically what you would write yourself",
    "start": "1903440",
    "end": "1910220"
  },
  {
    "text": "if you would write directly in cloud formation there's quite a few boilerplate there there's actually only",
    "start": "1910220",
    "end": "1915320"
  },
  {
    "text": "only boilerplate at this point in time because we didn't add anything else to it um but this uh this is a",
    "start": "1915320",
    "end": "1922399"
  },
  {
    "text": "this is the output of a sent command so let's make something more interesting here let's add some construct to our to",
    "start": "1922399",
    "end": "1929840"
  },
  {
    "text": "our cdk application uh let's just create a Lambda function uh that that",
    "start": "1929840",
    "end": "1936580"
  },
  {
    "text": "Lambda function is basically a serverless construct that allows you to execute business logic without",
    "start": "1936580",
    "end": "1943580"
  },
  {
    "text": "provisioning any uh infrastructure no no machine that runs but also no runtime",
    "start": "1943580",
    "end": "1948980"
  },
  {
    "text": "you can just upload the the business logic in any kind of in the languages that you choose and then they get",
    "start": "1948980",
    "end": "1955760"
  },
  {
    "text": "executed inside the environment so I'll import it here as Lambda underscore because python already has a Lambda",
    "start": "1955760",
    "end": "1962539"
  },
  {
    "text": "keyword and don't want to override it and um that's that's my case here I'll",
    "start": "1962539",
    "end": "1969500"
  },
  {
    "text": "I'll create a new Handler a new uh object called Handler that is of type",
    "start": "1969500",
    "end": "1976539"
  },
  {
    "text": "Lambda function and a function is a construct that takes as an argument to",
    "start": "1976539",
    "end": "1981799"
  },
  {
    "text": "its Constructor another construct and a string so that's a typical typical pattern you see when you create a",
    "start": "1981799",
    "end": "1987860"
  },
  {
    "text": "construct you need to pass another construct that's the paired construct and then an ID string so the parent",
    "start": "1987860",
    "end": "1993740"
  },
  {
    "text": "construct in this case will just be to stack so just be self in this case but if your application gets more",
    "start": "1993740",
    "end": "2000700"
  },
  {
    "text": "complex then you can actually have another level of nesting there the string is just a way internally for",
    "start": "2000700",
    "end": "2005919"
  },
  {
    "text": "yourself to uh to to name uh to name objects and will not be literally the",
    "start": "2005919",
    "end": "2012340"
  },
  {
    "text": "same in AWS because it needs to be unique so there will be some kind of uh string appended to this you can also see",
    "start": "2012340",
    "end": "2019600"
  },
  {
    "text": "here there's quite a lot of tips already from the editor all the uh the code completion that we",
    "start": "2019600",
    "end": "2026799"
  },
  {
    "text": "can see here so for example if I want to select the runtime I could just go and look at the runtime objects and see what",
    "start": "2026799",
    "end": "2035380"
  },
  {
    "text": "the runtimes available are for me so in this case we'll use Python use Python",
    "start": "2035380",
    "end": "2040960"
  },
  {
    "text": "3.9 we will Define the we'll store the code in a folder and the way to do that with",
    "start": "2040960",
    "end": "2049839"
  },
  {
    "text": "Lambda is to use the code.s from assets which means it will",
    "start": "2049839",
    "end": "2055540"
  },
  {
    "text": "be part of our of our code base we'll call this function sorry",
    "start": "2055540",
    "end": "2061179"
  },
  {
    "text": "this subfolder Lambda I'll have to create it later right now just just adding it now and in that Lambda folder",
    "start": "2061179",
    "end": "2067839"
  },
  {
    "text": "we will create a Handler in a file called hello and the Handler will call be called enter so we'll just create a",
    "start": "2067839",
    "end": "2074440"
  },
  {
    "text": "function called Handler and a file called hello in a folder called Lambda",
    "start": "2074440",
    "end": "2080940"
  },
  {
    "text": "foreign",
    "start": "2081639",
    "end": "2083940"
  },
  {
    "text": "you can see here that editor is pointing to some error in our code um I don't really immediately see what",
    "start": "2088659",
    "end": "2095138"
  },
  {
    "text": "the issue is but it does show you that you get all the support for programming",
    "start": "2095139",
    "end": "2100780"
  },
  {
    "text": "languages out of the box that you that you are used to but now with with infrastructure as code as a Target so",
    "start": "2100780",
    "end": "2108280"
  },
  {
    "text": "there is something wrong here I don't know yet what let's just try to to continue and see where where we get",
    "start": "2108280",
    "end": "2115180"
  },
  {
    "text": "where we get stuck",
    "start": "2115180",
    "end": "2118078"
  },
  {
    "text": "foreign so I'll create a Lambda subfolder sorry",
    "start": "2121540",
    "end": "2129099"
  },
  {
    "text": "I need to create it in the top level so the Lambda subfolder inside that folder I'll create a file called hello and",
    "start": "2129099",
    "end": "2136420"
  },
  {
    "text": "hello has to be a python file so rename it to hello.pi",
    "start": "2136420",
    "end": "2143140"
  },
  {
    "text": "and inside this folder sorry in select file will create a function called Handler this is a function that will be",
    "start": "2143140",
    "end": "2149680"
  },
  {
    "text": "executed whenever the Lambda function is invoked and it will return a simple map",
    "start": "2149680",
    "end": "2156700"
  },
  {
    "text": "representing an HTTP response you'll see later why this is but the HTTP response",
    "start": "2156700",
    "end": "2162700"
  },
  {
    "text": "here is represented it has a body with a string hello from cdk and it has a",
    "start": "2162700",
    "end": "2167920"
  },
  {
    "text": "status code for in our case 200.",
    "start": "2167920",
    "end": "2173640"
  },
  {
    "text": "so the Handler also takes two arguments an event and the context",
    "start": "2175839",
    "end": "2182020"
  },
  {
    "text": "this is if you want to have more if you want to react on how the Lambda function was invoked in our case we'll just",
    "start": "2182020",
    "end": "2188500"
  },
  {
    "text": "ignore these arguments so with that in place we have the code",
    "start": "2188500",
    "end": "2193900"
  },
  {
    "text": "and we have the infrastructure definition we can try a cdk synth to see what happens",
    "start": "2193900",
    "end": "2201119"
  },
  {
    "text": "and you can see here that we actually have a syntax error and again see how",
    "start": "2206940",
    "end": "2212260"
  },
  {
    "text": "nice and how close this is to to what you would expect from any normal programming experience so there's just",
    "start": "2212260",
    "end": "2217960"
  },
  {
    "text": "literally saying did you forget a comma",
    "start": "2217960",
    "end": "2221700"
  },
  {
    "text": "now adding the comma again doing another synth",
    "start": "2224859",
    "end": "2230460"
  },
  {
    "text": "and in this output here you can already see that there's quite a few of extra",
    "start": "2242280",
    "end": "2249280"
  },
  {
    "text": "things that were generated the command cdk diff will show you the difference between what is being",
    "start": "2249280",
    "end": "2254560"
  },
  {
    "text": "generated now and what was already been deployed to the cloud because this is the first time it will do a deploy we",
    "start": "2254560",
    "end": "2260260"
  },
  {
    "text": "will actually see everything that will be deployed to the cloud and as you can see that's quite a lot of stuff here",
    "start": "2260260",
    "end": "2266800"
  },
  {
    "text": "so there's a service role there's also a",
    "start": "2266800",
    "end": "2273520"
  },
  {
    "text": "function there the Lambda Handler the all these things have been generated for",
    "start": "2273520",
    "end": "2281020"
  },
  {
    "text": "us so we can deploy this now and see see",
    "start": "2281020",
    "end": "2286060"
  },
  {
    "text": "how it's going to look like in in the AWS console while this is deploying let's quickly",
    "start": "2286060",
    "end": "2292240"
  },
  {
    "text": "have a look again at the template file so the Json file it was generated for this",
    "start": "2292240",
    "end": "2297940"
  },
  {
    "text": "for this cdk stack to confirm first yeah okay",
    "start": "2297940",
    "end": "2304079"
  },
  {
    "text": "you can see there is a lot of elements that were created here and",
    "start": "2304079",
    "end": "2310300"
  },
  {
    "text": "this is I think where you can start seeing the level of abstraction so if you look",
    "start": "2310300",
    "end": "2315940"
  },
  {
    "text": "to the generated file on the right and the file that we had to write on the",
    "start": "2315940",
    "end": "2321280"
  },
  {
    "text": "left you can see that there is a big difference right so the the four lines of code generated this this much larger",
    "start": "2321280",
    "end": "2327220"
  },
  {
    "text": "file on the right and then this is basically what what cdk will offer you it allows you to think a bit less about",
    "start": "2327220",
    "end": "2332920"
  },
  {
    "text": "all the individual parts of your infrastructure think more about it in in a sense of of the the problems that it's",
    "start": "2332920",
    "end": "2338920"
  },
  {
    "text": "solving it's just a Lambda function so while this is deploying uh you can",
    "start": "2338920",
    "end": "2345460"
  },
  {
    "text": "see here also what kind of things are being deployed it takes takes a few",
    "start": "2345460",
    "end": "2350619"
  },
  {
    "text": "seconds and now we have a success successful",
    "start": "2350619",
    "end": "2358119"
  },
  {
    "text": "deployment so there is a demo stack here being deployed and that is actually something we could also",
    "start": "2358119",
    "end": "2364119"
  },
  {
    "text": "see in the AWS console so this is my AWS console and if I go here it to cloud formation",
    "start": "2364119",
    "end": "2371400"
  },
  {
    "text": "you can see that the infrastructures called demo stack was deployed there I was just created successfully and if you",
    "start": "2372339",
    "end": "2379720"
  },
  {
    "text": "go inside that demo stack there is a way to actually see the resources or the individual individual",
    "start": "2379720",
    "end": "2386980"
  },
  {
    "text": "AWS components that were created so in our case there is a Lambda Handler there there is a Lambda function use the uh",
    "start": "2386980",
    "end": "2394540"
  },
  {
    "text": "use the the UI here to click and go through the Lambda definition",
    "start": "2394540",
    "end": "2400500"
  },
  {
    "text": "and a lot of definition is of course a piece of code and this piece of code",
    "start": "2402760",
    "end": "2408400"
  },
  {
    "text": "should look familiar to you because it's exactly the same code that we wrote in",
    "start": "2408400",
    "end": "2414280"
  },
  {
    "text": "the hello.bi file so this is how it all comes together this was the file that was written by us",
    "start": "2414280",
    "end": "2420160"
  },
  {
    "text": "and that is now being deployed as the code definition for for Lambda we can test this file we can test this Lambda",
    "start": "2420160",
    "end": "2426880"
  },
  {
    "text": "function by creating a test event and this test event will follow a template from API Gateway because we",
    "start": "2426880",
    "end": "2434619"
  },
  {
    "text": "were later in this demo wire up the Lambda to the API Gateway this is how API Gateway invokes lambdas just save it",
    "start": "2434619",
    "end": "2442180"
  },
  {
    "text": "and try to execute it and as you can see the responses as we expected that the body is Hello from cdk under status code",
    "start": "2442180",
    "end": "2449140"
  },
  {
    "text": "is 200 so that so far so far so good I would say",
    "start": "2449140",
    "end": "2455578"
  },
  {
    "text": "at the same time this is not very spectacular right so we did we did",
    "start": "2457619",
    "end": "2463240"
  },
  {
    "text": "create a Lambda function and we did save quite a line of quite a few lines of code but at the same time it's not a",
    "start": "2463240",
    "end": "2469359"
  },
  {
    "text": "fundamental change I think this is this level one construct that that I mentioned this is basically cloud",
    "start": "2469359",
    "end": "2474520"
  },
  {
    "text": "formation within a different syntax if you want to see a bit more how this abstraction works we can add something",
    "start": "2474520",
    "end": "2480579"
  },
  {
    "text": "here that is a bit more a bit more complex for example an API Gateway an API Gateway has as many more",
    "start": "2480579",
    "end": "2488140"
  },
  {
    "text": "components and and it is more it's more high level construct in in our uh in in",
    "start": "2488140",
    "end": "2494140"
  },
  {
    "text": "cdk so I'll import it here and then I create a new API Gateway also reference it save",
    "start": "2494140",
    "end": "2501040"
  },
  {
    "text": "it as an object sorry as a value here so API Gateway and again it has a as a Constructor that",
    "start": "2501040",
    "end": "2508359"
  },
  {
    "text": "takes a construct as a parent and an ID so just again reference the parent stack",
    "start": "2508359",
    "end": "2516400"
  },
  {
    "text": "as itself here um and we'll name this",
    "start": "2516400",
    "end": "2522099"
  },
  {
    "text": "I've been named this this API cdk demo API",
    "start": "2522099",
    "end": "2527940"
  },
  {
    "text": "now on this API we want to create a Handler so we basically want to",
    "start": "2528280",
    "end": "2533440"
  },
  {
    "text": "configure it to handle certain requests in our case you want to handle the get methods on the root part and",
    "start": "2533440",
    "end": "2543280"
  },
  {
    "text": "we want to invoke the Lambda Handler once that that request comes in so",
    "start": "2543280",
    "end": "2549579"
  },
  {
    "text": "that's basically the wiring between the API Gateway and the Lambda function that we defined before and you can see here now that we use the",
    "start": "2549579",
    "end": "2557079"
  },
  {
    "text": "Lambda integration to point to the Lambda Handler that we that we that we defined on line 13. so",
    "start": "2557079",
    "end": "2564160"
  },
  {
    "text": "this is basically how how normal programming languages work all the time you define you define values and you",
    "start": "2564160",
    "end": "2571060"
  },
  {
    "text": "pass them around and let's take really cool to be able to do this here as well for your infrastructure and",
    "start": "2571060",
    "end": "2577780"
  },
  {
    "text": "um so if we run again now this cdk deploy here",
    "start": "2577780",
    "end": "2583740"
  },
  {
    "text": "um foreign",
    "start": "2584260",
    "end": "2588880"
  },
  {
    "text": "so if we now go into the AWS control again",
    "start": "2601680",
    "end": "2606960"
  },
  {
    "text": "and we go back to the stack",
    "start": "2608260",
    "end": "2611579"
  },
  {
    "text": "we'll see that not just is there the uh the lamba Handler but there's also the",
    "start": "2617260",
    "end": "2622839"
  },
  {
    "text": "demo API that we have created the API Gateway basically you can also",
    "start": "2622839",
    "end": "2628180"
  },
  {
    "text": "see at the output of the command there was a there was a value output at the URL here so this is a dynamic value that",
    "start": "2628180",
    "end": "2634780"
  },
  {
    "text": "was generated during the synthesis or during the deployment of your application and this is the this is the",
    "start": "2634780",
    "end": "2640480"
  },
  {
    "text": "URL where the rest API was deployed so if we if we execute a curl command or",
    "start": "2640480",
    "end": "2645760"
  },
  {
    "text": "basically just a get request on that API we'll get the hello from cdk and this is",
    "start": "2645760",
    "end": "2651400"
  },
  {
    "text": "coming from the Lambda function so what you see here is that we call an API Gateway that calls the Lambda function",
    "start": "2651400",
    "end": "2657520"
  },
  {
    "text": "gets the response from the Lambda function and returns this to the caller and to show this I will just quickly",
    "start": "2657520",
    "end": "2662800"
  },
  {
    "text": "change the response body here adding to exclamation marks and I will deploy",
    "start": "2662800",
    "end": "2668260"
  },
  {
    "text": "again um because it's just a small change it's just a change in the London definition I",
    "start": "2668260",
    "end": "2673300"
  },
  {
    "text": "will use deploy with the hot swap function allows us to do this deployment",
    "start": "2673300",
    "end": "2679119"
  },
  {
    "text": "much quicker doesn't work for everything it's not used for usable for production but if you're developing and you're",
    "start": "2679119",
    "end": "2685780"
  },
  {
    "text": "working on Lambda functions it makes it much faster to deploy change and if we do a change if we do a call request",
    "start": "2685780",
    "end": "2691780"
  },
  {
    "text": "again now you will see that the that the uh the two exclamation marks were added",
    "start": "2691780",
    "end": "2697119"
  },
  {
    "text": "there so showing that this code actually landed in that uh in that Lambda function that we defined",
    "start": "2697119",
    "end": "2704040"
  },
  {
    "text": "so this brings me to the end of this demo um let me go back to the slides here",
    "start": "2704380",
    "end": "2712660"
  },
  {
    "text": "and wondering if there's any any questions uh Stephen from from the audience",
    "start": "2712660",
    "end": "2720040"
  },
  {
    "text": "thanks uh at this time we don't have any uh questions",
    "start": "2720040",
    "end": "2725319"
  },
  {
    "text": "so if you want to continue on all right great so if you if you like then if you",
    "start": "2725319",
    "end": "2730420"
  },
  {
    "start": "2727000",
    "end": "3028000"
  },
  {
    "text": "you think this was interesting there is quite a few places you can go to learn more about cdk",
    "start": "2730420",
    "end": "2736119"
  },
  {
    "text": "um we'll put some links in in the chat uh The City Gate product pages is of",
    "start": "2736119",
    "end": "2741160"
  },
  {
    "text": "course a very good place to start it has a nice nice",
    "start": "2741160",
    "end": "2746380"
  },
  {
    "text": "um nice overview it also has an FAQ with common questions and then some developer",
    "start": "2746380",
    "end": "2751720"
  },
  {
    "text": "uh resources there's also a cdk workshop that allows you to get some hands-on",
    "start": "2751720",
    "end": "2758680"
  },
  {
    "text": "experience by following some some steps in very well prepared if you if you are",
    "start": "2758680",
    "end": "2764200"
  },
  {
    "text": "true with that there is a lot more advanced stuff there as well Advanced workshops and then there's the cdk patterns library that I mentioned",
    "start": "2764200",
    "end": "2770619"
  },
  {
    "text": "earlier so these are all very good places to go to learn more about cdk",
    "start": "2770619",
    "end": "2776920"
  },
  {
    "text": "so just just to to repeat here",
    "start": "2776920",
    "end": "2785020"
  },
  {
    "text": "that if if you want to do cdk you you probably want to do um",
    "start": "2785020",
    "end": "2790599"
  },
  {
    "text": "you want to version your your infrastructure as code and you want to you want to make sure",
    "start": "2790599",
    "end": "2797619"
  },
  {
    "text": "that you privilege the role that deploys your infrastructure with the least amount of privileges that that is",
    "start": "2797619",
    "end": "2803619"
  },
  {
    "text": "possible you definitely want to investigate testing and there's different ways of testing cdk applications and and maybe",
    "start": "2803619",
    "end": "2812560"
  },
  {
    "text": "automate this in a continuous integration of continuous deployment pipeline look for tools that can that",
    "start": "2812560",
    "end": "2818980"
  },
  {
    "text": "can find spots best practices or or or security security best practices for you",
    "start": "2818980",
    "end": "2827380"
  },
  {
    "text": "and um yeah and that's that's that's more or less that's that's these are the steps that you should uh should be able",
    "start": "2827380",
    "end": "2833920"
  },
  {
    "text": "to uh these these steps should be able to uh help you getting running with the with cdk I've also shared a link uh with",
    "start": "2833920",
    "end": "2841359"
  },
  {
    "text": "a link to a blog post detailing a few of these best practices I think it's really",
    "start": "2841359",
    "end": "2846480"
  },
  {
    "text": "worth uh reading true and thank you very much for for this uh for your attention",
    "start": "2846480",
    "end": "2852339"
  },
  {
    "text": "I hope you you enjoyed it uh that was the end of our presentation",
    "start": "2852339",
    "end": "2857800"
  },
  {
    "text": "thanks for uh we do have one uh final question coming in from jibjab06 again",
    "start": "2857800",
    "end": "2864220"
  },
  {
    "text": "um how do you maintain shared resources yeah so this is often often uh",
    "start": "2864220",
    "end": "2872560"
  },
  {
    "text": "a challenge for companies there is one team that develops a construct and they share it internally then all of a sudden",
    "start": "2872560",
    "end": "2878980"
  },
  {
    "text": "another team needs something else added to this but who is now owning it and how",
    "start": "2878980",
    "end": "2884319"
  },
  {
    "text": "how do you how do you share this these these uh how do you make these first compatible for example so I think",
    "start": "2884319",
    "end": "2889780"
  },
  {
    "text": "there's there's multiple ways to solve this and depends on your organization one way is to just copy and not maintain",
    "start": "2889780",
    "end": "2896500"
  },
  {
    "text": "any kind of any kind of link you can just say this is a cdk code that we had just copy into the new project and from",
    "start": "2896500",
    "end": "2902260"
  },
  {
    "text": "there on the development of works independently you can also have a look at how open source projects do it for",
    "start": "2902260",
    "end": "2908740"
  },
  {
    "text": "example with a the pull request approach so these are all the all",
    "start": "2908740",
    "end": "2916240"
  },
  {
    "text": "approaches that that can work depending on your environment setup cool thanks uh do you want to call out",
    "start": "2916240",
    "end": "2923619"
  },
  {
    "text": "uh like I said no no other questions but um there are some good uh chat uh during",
    "start": "2923619",
    "end": "2930460"
  },
  {
    "text": "the session uh freaky measures who who uh is a big fan of the cdk",
    "start": "2930460",
    "end": "2936640"
  },
  {
    "text": "um really likes it great glad to hear that um you know and I suggest if you're not",
    "start": "2936640",
    "end": "2943240"
  },
  {
    "text": "familiar with cdk please check out some of the resources that we've shared during this uh especially the workshops",
    "start": "2943240",
    "end": "2949599"
  },
  {
    "text": "they're a good way to learn and to start to dive into using the cdk",
    "start": "2949599",
    "end": "2955359"
  },
  {
    "text": "um so today we we looked at leveraging AWS cdk for implementation of",
    "start": "2955359",
    "end": "2960579"
  },
  {
    "text": "infrastructure as code or is code uh and if there's any questions that were not answered post your questions on",
    "start": "2960579",
    "end": "2967920"
  },
  {
    "text": "reposts.aws Where one of our experts can provide you with an answer to your",
    "start": "2967920",
    "end": "2974319"
  },
  {
    "text": "question and it could become a topic uh for one of our next shows if you have feedback please uh click on the link to",
    "start": "2974319",
    "end": "2983140"
  },
  {
    "text": "the survey or you can email us at AWS support you at amazon.com we do want to",
    "start": "2983140",
    "end": "2988780"
  },
  {
    "text": "hear from you tell us what you would like to see on the show and be sure to check out with us next Monday November",
    "start": "2988780",
    "end": "2994540"
  },
  {
    "text": "14th at 11 A.M uh Pacific Time or 2 p.m eastern time where we'll be exploring",
    "start": "2994540",
    "end": "3000060"
  },
  {
    "text": "cost optimization for sap on AWS workloads thank you again Ward for",
    "start": "3000060",
    "end": "3006000"
  },
  {
    "text": "taking the time to present today thanks for joining us at AWS support you and happy cloud computing",
    "start": "3006000",
    "end": "3012720"
  },
  {
    "text": "thank you",
    "start": "3012720",
    "end": "3015500"
  },
  {
    "text": "[Music]",
    "start": "3017740",
    "end": "3023219"
  }
]