[
  {
    "text": "hi good morning everyone welcome to day two of General Sessions at reinvent my name is Sagi Matthew I'm a Solutions",
    "start": "880",
    "end": "7759"
  },
  {
    "text": "architect at AWS and along with me is Christian Bean CTO and co-founder of sumo logic and today what we're going to",
    "start": "7759",
    "end": "15160"
  },
  {
    "text": "do is talk about how to design for SAS on AWS so we have a lot of material for you",
    "start": "15160",
    "end": "21720"
  },
  {
    "text": "we're going to start with by talking about some popular SAS architectural infrastructure approaches then we'll",
    "start": "21720",
    "end": "28039"
  },
  {
    "text": "dive into a SAS reference architecture then we'll talk about some best practices for designing your SAS",
    "start": "28039",
    "end": "35360"
  },
  {
    "text": "solution and then Christian will dive into talking about his experience on building and evolving a SAS offering on",
    "start": "35360",
    "end": "44600"
  },
  {
    "text": "AWS so as we've seen over the last few years software delivery is rapidly",
    "start": "45320",
    "end": "51199"
  },
  {
    "text": "evolving initially uh we were used to having bits shipped to us where we would",
    "start": "51199",
    "end": "57079"
  },
  {
    "text": "procure Hardware data center space install configure maintain backup and",
    "start": "57079",
    "end": "62160"
  },
  {
    "text": "Patch but that's giving way to much more favorable and agile Solutions today you",
    "start": "62160",
    "end": "68040"
  },
  {
    "text": "can have your applications hosted either uh by the vendor or you can host it yourself or by a partner you can have",
    "start": "68040",
    "end": "75320"
  },
  {
    "text": "the application hosted in AWS and gain some of the advantages of cloud But ultimately the solution that we want is",
    "start": "75320",
    "end": "82079"
  },
  {
    "text": "to have a fully shared SAS platform running on AWS and that's what we're going to focus on for the rest of the",
    "start": "82079",
    "end": "88680"
  },
  {
    "text": "session so there's no single right way to design",
    "start": "88680",
    "end": "94000"
  },
  {
    "text": "a sour SAS architecture it's largely depend dependent on where you are today",
    "start": "94000",
    "end": "100399"
  },
  {
    "text": "whether you have an application ready to go or not your uh constraints such as cost and resources and your timeline but",
    "start": "100399",
    "end": "108560"
  },
  {
    "text": "we've seen a lot of different approaches over the years and I like to talk about three of them that we see most commonly",
    "start": "108560",
    "end": "114240"
  },
  {
    "text": "with our customers the first is the most approachable and easy to Implement if",
    "start": "114240",
    "end": "120960"
  },
  {
    "text": "you have an existing application and that is the isolated customer stack where you simply spin up a dedicated",
    "start": "120960",
    "end": "127680"
  },
  {
    "text": "stack for each customer that is on your platform on the other end we have a pure",
    "start": "127680",
    "end": "135120"
  },
  {
    "text": "shared services platform from top to bottom and in the middle we're seeing a",
    "start": "135120",
    "end": "140680"
  },
  {
    "text": "newer pattern emerge over the last couple of years with the emergence of Docker and now with support from AWS",
    "start": "140680",
    "end": "147000"
  },
  {
    "text": "with the ec2 container service the use of containers to slice compute and",
    "start": "147000",
    "end": "153319"
  },
  {
    "text": "dedicate that to your customers so let's dive in and take a look at each of these",
    "start": "153319",
    "end": "158360"
  },
  {
    "text": "in turn on the right hand side you're going to see a number of common SAS",
    "start": "158360",
    "end": "164040"
  },
  {
    "text": "services that we'll dive into but for the next few slides we'll just look at the provisioning and metering part and",
    "start": "164040",
    "end": "170000"
  },
  {
    "text": "how it relates to the three common approaches that we're going to uh to",
    "start": "170000",
    "end": "175120"
  },
  {
    "text": "examine for the isolated customer stack as you can see it's fairly straightforward every time you get a new",
    "start": "175120",
    "end": "181440"
  },
  {
    "text": "customer you simply launch a new stack and you tag all the resources that",
    "start": "181440",
    "end": "186640"
  },
  {
    "text": "you're going to be dedicating to that customer with a unique customer ID in this example we have a tag called cost",
    "start": "186640",
    "end": "193560"
  },
  {
    "text": "center and that's tagged with the customer ID of customer one this information will flow into your",
    "start": "193560",
    "end": "200159"
  },
  {
    "text": "AWS billing report so that now you know exactly how much to charge that customer",
    "start": "200159",
    "end": "205599"
  },
  {
    "text": "so it's very straightforward and this application needs to have no knowledge that it's running in a multi-tenant",
    "start": "205599",
    "end": "212360"
  },
  {
    "text": "environment because it's simply serving a single customer as you onboard new customers",
    "start": "212360",
    "end": "218599"
  },
  {
    "text": "you simply can launch a new stack for them and with AWS cloud formation this is very straightforward to do so so",
    "start": "218599",
    "end": "226040"
  },
  {
    "text": "there are a couple advantages to this besides the um the ability to launch an",
    "start": "226040",
    "end": "231519"
  },
  {
    "text": "application quickly with minimal to no coding changes most applications will be able to take advantage of services like",
    "start": "231519",
    "end": "238200"
  },
  {
    "text": "elastic load balancing multiple availability zones autoscaling and maybe",
    "start": "238200",
    "end": "244640"
  },
  {
    "text": "other services such as RDS additionally if you have customers in highly regulated Industries where",
    "start": "244640",
    "end": "251480"
  },
  {
    "text": "they typically demand an isolated stack this could be a good approach but there",
    "start": "251480",
    "end": "256560"
  },
  {
    "text": "are some serious drawbacks with this approach as well if you have thousands of customers you're going to have",
    "start": "256560",
    "end": "263120"
  },
  {
    "text": "thousands of stacks and you're going to have to deal with infrastructure sprawl",
    "start": "263120",
    "end": "269440"
  },
  {
    "text": "and another negative is that your utilization across all of these Stacks is going to be the least of the three",
    "start": "269440",
    "end": "275639"
  },
  {
    "text": "approaches that we'll talk about Additionally you may be tempted to tweak",
    "start": "275639",
    "end": "280919"
  },
  {
    "text": "a stack for a given customer which will also cause a lot of unintended problems",
    "start": "280919",
    "end": "286400"
  },
  {
    "text": "and consequences and finally deployment becomes more of a challenge because with",
    "start": "286400",
    "end": "291680"
  },
  {
    "text": "a th Stacks you have a thousand places to deploy your code on a daily",
    "start": "291680",
    "end": "297360"
  },
  {
    "text": "basis and so let's take a look at another option which is containerization",
    "start": "297360",
    "end": "302759"
  },
  {
    "text": "containerization is a refinement of the isolated customer stacks and instead of dedicating a single compute instance to",
    "start": "302759",
    "end": "309919"
  },
  {
    "text": "a customer you can slice up compute instances in the form of containers and dedicate that to several customers in",
    "start": "309919",
    "end": "317199"
  },
  {
    "text": "this example we have two customers customer one is dedicated the blue",
    "start": "317199",
    "end": "322319"
  },
  {
    "text": "containers and customer two has access to all of the yellow containers if you",
    "start": "322319",
    "end": "327440"
  },
  {
    "text": "want to add another customer or add more capacity for existing customers we can simply coordinate that with the ec2",
    "start": "327440",
    "end": "334800"
  },
  {
    "text": "container service so the advantage to this option is greater utilization and",
    "start": "334800",
    "end": "342440"
  },
  {
    "text": "less infrastructure sprawl and the challenge to this is that metering",
    "start": "342440",
    "end": "348039"
  },
  {
    "text": "becomes a little bit more complicated now you'll have to bake in instrumentation and metering code to",
    "start": "348039",
    "end": "354840"
  },
  {
    "text": "various parts of your application and so that could take longer to implement",
    "start": "354840",
    "end": "360360"
  },
  {
    "text": "and but this is uh definitely an option to consider if you are developing a",
    "start": "360360",
    "end": "365720"
  },
  {
    "text": "newer application and you don't have to make that many coding changes ultimately what we want to",
    "start": "365720",
    "end": "373639"
  },
  {
    "text": "advise customers to do is to get to the shared platform option where all",
    "start": "373639",
    "end": "378919"
  },
  {
    "text": "customers share a single platform this is the approach that you should take if",
    "start": "378919",
    "end": "385440"
  },
  {
    "text": "you are developing a brand new application from the ground up on on AWS",
    "start": "385440",
    "end": "390759"
  },
  {
    "text": "if you have an existing application you may want to evolve it over time to reach this end State here we can see multiple",
    "start": "390759",
    "end": "397440"
  },
  {
    "text": "customers using things like aob um various instances in the",
    "start": "397440",
    "end": "403319"
  },
  {
    "text": "front-end web Fleet as well as instances across the application layer and finally",
    "start": "403319",
    "end": "408720"
  },
  {
    "text": "the database is shared amongst all customers the challenge here is that all",
    "start": "408720",
    "end": "413880"
  },
  {
    "text": "parts of your application now need to be multi-tenant aware and so this could uh",
    "start": "413880",
    "end": "420599"
  },
  {
    "text": "require a lot of changes for an existing application but if you're developing a new application this is something you'll",
    "start": "420599",
    "end": "425960"
  },
  {
    "text": "just build in naturally the advantages are you have a single platform and that",
    "start": "425960",
    "end": "431199"
  },
  {
    "text": "means you can benefit from economies of scale it becomes very straightforward to provision there's no explicit",
    "start": "431199",
    "end": "437520"
  },
  {
    "text": "provisioning step as you onboard more customers autoscaling and other techniques can simply add more capacity",
    "start": "437520",
    "end": "444720"
  },
  {
    "text": "as you need them and deployment is fairly straightforward you simply can deploy deoy to a single infrastructure",
    "start": "444720",
    "end": "452360"
  },
  {
    "text": "instead of many containers or many isolated Stacks so now that we looked at a number",
    "start": "452360",
    "end": "459879"
  },
  {
    "text": "of different infrastructure approaches let's dive into SAS reference",
    "start": "459879",
    "end": "465520"
  },
  {
    "text": "architecture so don't be afraid this looks like an explosion of AWS icons but",
    "start": "465520",
    "end": "471199"
  },
  {
    "text": "we'll explain each of this uh very quickly so as you can see this reference",
    "start": "471199",
    "end": "476400"
  },
  {
    "text": "architecture is composed of four major areas your application resource management",
    "start": "476400",
    "end": "483000"
  },
  {
    "text": "business services and core platform services so your application is the star",
    "start": "483000",
    "end": "488720"
  },
  {
    "text": "of the show and everything else is The Supporting Cast and so with your application you may have a single",
    "start": "488720",
    "end": "495199"
  },
  {
    "text": "application today but over time you may develop a portfolio of applications that",
    "start": "495199",
    "end": "500840"
  },
  {
    "text": "are presented as SAS offerings to your customers the most important thing you can do here is not build a monolithic",
    "start": "500840",
    "end": "508759"
  },
  {
    "text": "application that mixes in all of the supporting services into your application code instead you want to use",
    "start": "508759",
    "end": "515640"
  },
  {
    "text": "best practices such as service oriented architecture and Loosely coupled application components to develop",
    "start": "515640",
    "end": "521320"
  },
  {
    "text": "something that can work independently of your application so let's dive in to the top",
    "start": "521320",
    "end": "528880"
  },
  {
    "text": "left which is resource management and the ordering components with ordering this is the entry point to your",
    "start": "528880",
    "end": "535959"
  },
  {
    "text": "application and how your customers reach your ordering pipeline will depend on things like your existing marketing",
    "start": "535959",
    "end": "542519"
  },
  {
    "text": "efforts you may have a page on the AWS Marketplace that will redirect a customer to your ordering page and it",
    "start": "542519",
    "end": "550040"
  },
  {
    "text": "will integrate with billing analytics authentication and authorization components within this",
    "start": "550040",
    "end": "557120"
  },
  {
    "text": "architecture you can use several aw services to help you build out the ordering portion of this you can use",
    "start": "557120",
    "end": "563480"
  },
  {
    "text": "Simple workflow if you have a very heavyduty complex uh orchestration",
    "start": "563480",
    "end": "568920"
  },
  {
    "text": "required for onboarding new customers or you can use something like sqs for something a little bit more",
    "start": "568920",
    "end": "574839"
  },
  {
    "text": "modest next we have provisioning provisioning is the ability to fully automate deployments of your",
    "start": "574839",
    "end": "582079"
  },
  {
    "text": "infrastructure and as we saw with the first three approaches to uh designing your SAS architecture that is going to",
    "start": "582079",
    "end": "588519"
  },
  {
    "text": "depend on which approach you take but generally what you want is a a",
    "start": "588519",
    "end": "594000"
  },
  {
    "text": "completely automated de deployment that has really no manual intervention and when you develop applications on AWS",
    "start": "594000",
    "end": "600200"
  },
  {
    "text": "you're going to capture the infrastructure in the form of a cloud formation template that you can use to",
    "start": "600200",
    "end": "607440"
  },
  {
    "text": "deploy your Dev test staging and production environments so once you have Cloud information in place it becomes",
    "start": "607440",
    "end": "613680"
  },
  {
    "text": "very simple to launch dedicated instances for uh your customers if you",
    "start": "613680",
    "end": "619519"
  },
  {
    "text": "have the um the dedicated instance approach as well as uh provisioning",
    "start": "619519",
    "end": "624640"
  },
  {
    "text": "development environments and within a single region as well as going multi- region if if you decide to go that way",
    "start": "624640",
    "end": "631560"
  },
  {
    "text": "so some of the services that you can use besides Cloud information include AWS Ops Works elastic bean stock and of",
    "start": "631560",
    "end": "639040"
  },
  {
    "text": "course if you decide to use the container service option EC container service is something that can be helpful",
    "start": "639040",
    "end": "644880"
  },
  {
    "text": "here as well next we have application life cycle management and this is one of",
    "start": "644880",
    "end": "650079"
  },
  {
    "text": "the biggest changes when people move from a on-prem development mindset to a",
    "start": "650079",
    "end": "655399"
  },
  {
    "text": "SAS mindset with an on-prem option you have the development life cycles that",
    "start": "655399",
    "end": "661639"
  },
  {
    "text": "could take months or maybe years with a SAS application you may do multiple deployments per day certainly per week",
    "start": "661639",
    "end": "669079"
  },
  {
    "text": "maybe months as well but what you need to do is to really engineer your",
    "start": "669079",
    "end": "674760"
  },
  {
    "text": "deployment so that new deployments are seamless they don't cause disruption and they're completely transparent to your",
    "start": "674760",
    "end": "681279"
  },
  {
    "text": "customers with no downtime and so there are various ways to get here you can use",
    "start": "681279",
    "end": "686639"
  },
  {
    "text": "various open source and Commercial options as as well as a suite of AWS tools such as code deploy which can help",
    "start": "686639",
    "end": "693600"
  },
  {
    "text": "you deploy your uh your new code to various instances and help you roll back",
    "start": "693600",
    "end": "699680"
  },
  {
    "text": "in case there's a problem in addition to that you can use code pipeline to orchestrate your development process as",
    "start": "699680",
    "end": "705279"
  },
  {
    "text": "well as code commit to host your repos moving on to the business service",
    "start": "705279",
    "end": "712399"
  },
  {
    "text": "portion of this uh first up we have billing billing Aggregates customer usage data and presents a bill to the",
    "start": "712399",
    "end": "719000"
  },
  {
    "text": "customer customer for payment think about how AWS presents your bill it",
    "start": "719000",
    "end": "724360"
  },
  {
    "text": "provides a lot lot of granularity in terms of the services that you use whether you choose to go that granular",
    "start": "724360",
    "end": "731079"
  },
  {
    "text": "or not really depends on your application but ultimately you can use that as a model to kind of uh to to",
    "start": "731079",
    "end": "737399"
  },
  {
    "text": "determine how you should present your bill and what sort of data you want to capture to present to your customers so",
    "start": "737399",
    "end": "744440"
  },
  {
    "text": "there are a lot of third- party options that you can use for not only billing but VAR other parts of uh this reference",
    "start": "744440",
    "end": "752000"
  },
  {
    "text": "architecture and so one thing I want to call out is that you don't have to build all of this stuff yourself you can certainly leverage other SAS solutions",
    "start": "752000",
    "end": "759440"
  },
  {
    "text": "to help you get to Market a lot faster so some of the services that can help you here are dynb to store your billing",
    "start": "759440",
    "end": "766800"
  },
  {
    "text": "information and EMR to help you generate and um to actually calculate and",
    "start": "766800",
    "end": "772199"
  },
  {
    "text": "generate the bills next we have analytics and this is also one of the fundamental differences",
    "start": "772199",
    "end": "779320"
  },
  {
    "text": "with SAS Solutions in that now you can collect a lot of metrics that will give",
    "start": "779320",
    "end": "785279"
  },
  {
    "text": "you great insight into exactly how your customers are using not only your",
    "start": "785279",
    "end": "790600"
  },
  {
    "text": "application but the platform itself and with that information you can do some",
    "start": "790600",
    "end": "795839"
  },
  {
    "text": "deep analysis which can drive decisions on what sort of features you present to",
    "start": "795839",
    "end": "801360"
  },
  {
    "text": "customers uh how to improve your infrastructure and so on so let's take a look a little bit more deeply about how",
    "start": "801360",
    "end": "808519"
  },
  {
    "text": "analytics should should work in a SAS offering you can see on the leand side you have various data sources these",
    "start": "808519",
    "end": "815320"
  },
  {
    "text": "could be your application ec2 instances these could be your containers and these could be various databases that hold",
    "start": "815320",
    "end": "822839"
  },
  {
    "text": "application metering and billing data and so you should have a plan in",
    "start": "822839",
    "end": "828440"
  },
  {
    "text": "place to um rotate your logs and put them in durable State such as S3 you can",
    "start": "828440",
    "end": "834639"
  },
  {
    "text": "also use AWS code pipeline to move data from your database",
    "start": "834639",
    "end": "839800"
  },
  {
    "text": "and store that in S3 as well once you have it in S3 you can leverage things",
    "start": "839800",
    "end": "846399"
  },
  {
    "text": "like EMR as well as red shift to do data analysis you can also take advantage of",
    "start": "846399",
    "end": "852360"
  },
  {
    "text": "machine learning Service as part of the AWS platform to give you insights into your data as well once you have the data",
    "start": "852360",
    "end": "860959"
  },
  {
    "text": "that's processed you can now present reports both internally to understand what's going on with the platform and",
    "start": "860959",
    "end": "867199"
  },
  {
    "text": "usage of the service as as well as to your customers so you can take advantage",
    "start": "867199",
    "end": "872759"
  },
  {
    "text": "of the newly introduced uh quick site product as well here to generate reports easily and of course you can present",
    "start": "872759",
    "end": "879040"
  },
  {
    "text": "that to customers and you can present not only reports but you may want to think about presenting a query interface",
    "start": "879040",
    "end": "884800"
  },
  {
    "text": "for deeper analysis that customers can take advantage of so now if we move on to the core",
    "start": "884800",
    "end": "891079"
  },
  {
    "text": "platform Services we have authentication and authorization which should be very self-explanatory and think about how AWS",
    "start": "891079",
    "end": "898160"
  },
  {
    "text": "implements this you have have a master account from there you can create numerous IM am entities such as users",
    "start": "898160",
    "end": "905079"
  },
  {
    "text": "groups and roles now whether you want to take that approach or something simpler is completely up to you but the idea is",
    "start": "905079",
    "end": "911040"
  },
  {
    "text": "that you should have a independent identity store that could be leveraged by your single SAS offering today or",
    "start": "911040",
    "end": "917560"
  },
  {
    "text": "multiple SAS offerings tomorrow and of course you want this to integrate with",
    "start": "917560",
    "end": "923079"
  },
  {
    "text": "existing identity stores that the customer may have and third-party options as well and you want to provide",
    "start": "923079",
    "end": "928399"
  },
  {
    "text": "a single sign on option also so some services that you can use include AWS",
    "start": "928399",
    "end": "934880"
  },
  {
    "text": "identity access management to to give granual access to various aw Services",
    "start": "934880",
    "end": "940880"
  },
  {
    "text": "you want to think about using KMS Key Management Service to hold the keys that will encrypt data for either the",
    "start": "940880",
    "end": "947800"
  },
  {
    "text": "customer and its entirety or various users within that customer base Cognito can be useful for web and mobile",
    "start": "947800",
    "end": "954959"
  },
  {
    "text": "authentication and you can take advantage of directory service so you don't have to match manage uh ec2",
    "start": "954959",
    "end": "960480"
  },
  {
    "text": "instances for your directory services and then finally RDS could be the host",
    "start": "960480",
    "end": "966120"
  },
  {
    "text": "for your custom authentication and authorization stores moving on to monitoring this is a",
    "start": "966120",
    "end": "972759"
  },
  {
    "text": "very critical piece of any SAS platform in that it is what will basically give",
    "start": "972759",
    "end": "978880"
  },
  {
    "text": "you an idea of how healthy your platform is both at the business level as well as",
    "start": "978880",
    "end": "984120"
  },
  {
    "text": "the infrastructure level and so what you want to do is to ensure that this is scalable and that as your application",
    "start": "984120",
    "end": "990440"
  },
  {
    "text": "requires you can scale this monitoring piece easily and quickly um as demand uh",
    "start": "990440",
    "end": "996959"
  },
  {
    "text": "fluctuates over time you can again certainly take advantage of third-party options here there's numerous uh uh",
    "start": "996959",
    "end": "1004000"
  },
  {
    "text": "vendors in the space And as far as AWS Services you can use kesa streams to get",
    "start": "1004000",
    "end": "1009160"
  },
  {
    "text": "real-time data from various parts of your application and you can use cloud watch to get access to various metrics",
    "start": "1009160",
    "end": "1015880"
  },
  {
    "text": "about the infrastructure that hosts your SAS solution and finally we have metering metering is",
    "start": "1015880",
    "end": "1022759"
  },
  {
    "text": "the ability to understand customer usage and activity within your SAS solution it",
    "start": "1022759",
    "end": "1029918"
  },
  {
    "text": "is what basically is going to be used by various parts of your SAS solution such as billing and analytics to give you",
    "start": "1029919",
    "end": "1036720"
  },
  {
    "text": "insight into what's going on within the platform one of the key features of your",
    "start": "1036720",
    "end": "1041918"
  },
  {
    "text": "metering platform has to be auditability and traceability so that if a customer",
    "start": "1041919",
    "end": "1047120"
  },
  {
    "text": "has a question about why they were build a certain amount you can certainly give them um auditability about how that",
    "start": "1047120",
    "end": "1054840"
  },
  {
    "text": "particular line item came into their bill so some options for this let's dive",
    "start": "1054840",
    "end": "1060320"
  },
  {
    "text": "in and take a look you can see that on the Le hand side you have a number of different data sources such as S3",
    "start": "1060320",
    "end": "1067440"
  },
  {
    "text": "Kinesis Dynamo and RDS as well as application instances all of these data",
    "start": "1067440",
    "end": "1073840"
  },
  {
    "text": "sources can generate metering data so if you want to generate metering data from",
    "start": "1073840",
    "end": "1079320"
  },
  {
    "text": "these data sources such as these databases we can leverage Lambda Lambda",
    "start": "1079320",
    "end": "1084880"
  },
  {
    "text": "can be called by any of these sources they can trigger a function that can pass in data and generate a metering",
    "start": "1084880",
    "end": "1092320"
  },
  {
    "text": "message and of course the application instances can generate these metor messages all by themselves once these",
    "start": "1092320",
    "end": "1097880"
  },
  {
    "text": "messages are generated they can be put into a simple queuing service queue that",
    "start": "1097880",
    "end": "1103039"
  },
  {
    "text": "Q can be leveraged by your aggregation engine which can be implemented in EMR",
    "start": "1103039",
    "end": "1108840"
  },
  {
    "text": "could be implemented as a custom code in ec2 instances but once the the metering",
    "start": "1108840",
    "end": "1114799"
  },
  {
    "text": "data is aggregated it could be stored in Dynamo once it's stored in Dynamo you",
    "start": "1114799",
    "end": "1120120"
  },
  {
    "text": "now should have a service that can make that information available to other components of your infrastructure",
    "start": "1120120",
    "end": "1127480"
  },
  {
    "text": "including billing and analytics all right so now you looked at",
    "start": "1127480",
    "end": "1133840"
  },
  {
    "text": "the architecture we looked at different approaches to building out the infrastructure let's talk about some of",
    "start": "1133840",
    "end": "1139760"
  },
  {
    "text": "the best practices that we've learned over the years from customers who've built SAS Solutions on AWS the first is",
    "start": "1139760",
    "end": "1147280"
  },
  {
    "text": "to separate the platform from the program and what I mean by this is that you should consider a service oriented",
    "start": "1147280",
    "end": "1154559"
  },
  {
    "text": "approach where each of the components that we talked about can run completely independent of each other and it should",
    "start": "1154559",
    "end": "1160400"
  },
  {
    "text": "not be tightly coupled with your main application the reason for that are",
    "start": "1160400",
    "end": "1166280"
  },
  {
    "text": "numerous first your applications will have evolve from the supporting platform",
    "start": "1166280",
    "end": "1171360"
  },
  {
    "text": "independently you can reuse these support these supporting services for various applications that you may",
    "start": "1171360",
    "end": "1176880"
  },
  {
    "text": "Implement over time you'll be able to scale these parts uh independently of",
    "start": "1176880",
    "end": "1182960"
  },
  {
    "text": "each other so there may be times when the metering component will require more resources so adding more resources to",
    "start": "1182960",
    "end": "1188799"
  },
  {
    "text": "that should not have any impact on the rest of the application so you can scale imp independently and have much better",
    "start": "1188799",
    "end": "1195360"
  },
  {
    "text": "cost effec Effectiveness for the entire platform by making all of these parts independent from each",
    "start": "1195360",
    "end": "1201799"
  },
  {
    "text": "other you can optimize for cost and performance which often seem to be at",
    "start": "1201799",
    "end": "1206880"
  },
  {
    "text": "the opposite ends of the spectrum with AWS you have a variety of different storage and compute options they have",
    "start": "1206880",
    "end": "1213159"
  },
  {
    "text": "different price points and so you can offer your customers various levels of performance uh based on their",
    "start": "1213159",
    "end": "1220240"
  },
  {
    "text": "sensitivity to price so for example you can have a free tier you can have a",
    "start": "1220240",
    "end": "1225520"
  },
  {
    "text": "premium tier the premium tier may use the highest end services such as the largest instance sizes along with the",
    "start": "1225520",
    "end": "1232840"
  },
  {
    "text": "fastest storage along with the lowest latency databases the free tier will use",
    "start": "1232840",
    "end": "1238400"
  },
  {
    "text": "exactly the opposite it'll be maybe a best effort U uh implementation where",
    "start": "1238400",
    "end": "1243919"
  },
  {
    "text": "you will use maybe the uh burstable instances such as a T2 and maybe you",
    "start": "1243919",
    "end": "1249640"
  },
  {
    "text": "want to think about using magnetic storage for EBS and so you can come up with various um options that give",
    "start": "1249640",
    "end": "1257360"
  },
  {
    "text": "customers a range of cost and performance as long as you set the expectations with customers correctly",
    "start": "1257360",
    "end": "1262799"
  },
  {
    "text": "this should be fairly straightforward to do another best practice is horizontal scaling at every layer and I think this",
    "start": "1262799",
    "end": "1269080"
  },
  {
    "text": "is a common and well-known principle for AWS application design the third is to",
    "start": "1269080",
    "end": "1275279"
  },
  {
    "text": "create smaller more paralyzable units of work so the idea behind this is not to",
    "start": "1275279",
    "end": "1281320"
  },
  {
    "text": "create something that will use the largest box possible but rather",
    "start": "1281320",
    "end": "1286360"
  },
  {
    "text": "something that can be easily horizontally scaled and finally leverage",
    "start": "1286360",
    "end": "1292000"
  },
  {
    "text": "inherently scalable services such as Dynamo Aurora and others so that as your",
    "start": "1292000",
    "end": "1297760"
  },
  {
    "text": "customer base grows you can easily scale up and there won't be a bottleneck in anywhere any part of your application",
    "start": "1297760",
    "end": "1304679"
  },
  {
    "text": "architecture so for example with Dynamo whenever you need more read or write capacity units it's simply an API call",
    "start": "1304679",
    "end": "1313519"
  },
  {
    "text": "away when you design a SAS solution you have to think about multi multi-tenancy",
    "start": "1313760",
    "end": "1319720"
  },
  {
    "text": "when you have an on-prem solution you are designing it for a single customer",
    "start": "1319720",
    "end": "1325000"
  },
  {
    "text": "and that customer's user base when you design a SAS solution you're designing for thousands of customers and all of",
    "start": "1325000",
    "end": "1332480"
  },
  {
    "text": "their users so you're dealing with an order of magnitude of complexity and this has vast implications for your",
    "start": "1332480",
    "end": "1340080"
  },
  {
    "text": "entire application from the application code all the way to the database schema so you can imagine that the database",
    "start": "1340080",
    "end": "1346279"
  },
  {
    "text": "schema for an on-prem application would be a lot simpler than the one for a SAS application so for a SAS application the",
    "start": "1346279",
    "end": "1353400"
  },
  {
    "text": "schema will include not only users but customers as well you can provide tiers",
    "start": "1353400",
    "end": "1360279"
  },
  {
    "text": "for request prioritization so going back to the earlier example of a free tier and a premium tier perhaps the free tier",
    "start": "1360279",
    "end": "1367799"
  },
  {
    "text": "those requests will go into a low priority queue um and that queue may use spot instances very lowc cost spot",
    "start": "1367799",
    "end": "1375159"
  },
  {
    "text": "instances and then for premium customers it'll go into high priority que which will get executed um um as necessary to",
    "start": "1375159",
    "end": "1383840"
  },
  {
    "text": "maintain a certain SLA it'll again use the highest level of services from ec2",
    "start": "1383840",
    "end": "1389919"
  },
  {
    "text": "EBS and the database services so that essentially your premium customers get the best service and other customers",
    "start": "1389919",
    "end": "1397720"
  },
  {
    "text": "ones that are free can get a Best effort uh service and obviously you want to monitor the infrastructure closely so",
    "start": "1397720",
    "end": "1404799"
  },
  {
    "text": "that you can understand what activi is happening and then allocate resources is not only at the business level but at",
    "start": "1404799",
    "end": "1410760"
  },
  {
    "text": "the infrastructure level a key principle of SAS design is understanding the life cycle of your",
    "start": "1410760",
    "end": "1417080"
  },
  {
    "text": "data with an on Prem solution maybe you will store all of the data in a",
    "start": "1417080",
    "end": "1422279"
  },
  {
    "text": "relational database on AWS you have many more options including databases S3 uh",
    "start": "1422279",
    "end": "1430039"
  },
  {
    "text": "Glacier and so on so now you can design an application that is much more coste",
    "start": "1430039",
    "end": "1435880"
  },
  {
    "text": "effective and tuned to how your C customers really use and access data so",
    "start": "1435880",
    "end": "1441960"
  },
  {
    "text": "perhaps your customers will access most frequently the first years worth of data",
    "start": "1441960",
    "end": "1447919"
  },
  {
    "text": "the rest they may never access or may infrequently access so you can set up policies so that you age data from a",
    "start": "1447919",
    "end": "1455200"
  },
  {
    "text": "relational database onto perhaps S3 S3 has a little bit greater latency than a",
    "start": "1455200",
    "end": "1460640"
  },
  {
    "text": "relational database but certainly you can set that expectation with customers if indeed they infrequently access uh",
    "start": "1460640",
    "end": "1467520"
  },
  {
    "text": "that type of data or over um the years and certainly you can leverage S3 standard the new S3 infrequent access",
    "start": "1467520",
    "end": "1474960"
  },
  {
    "text": "option and eventually you can take advantage of Glacier here as well so what this does is make your design a",
    "start": "1474960",
    "end": "1481279"
  },
  {
    "text": "little bit simpler it'll reduce the size of your relational database and then uh",
    "start": "1481279",
    "end": "1486440"
  },
  {
    "text": "make it much more cost effective to offer different types of storage to your customers uh",
    "start": "1486440",
    "end": "1493679"
  },
  {
    "text": "transparently and finally we want to collect as much data as possible and learned from it and what we mean by this",
    "start": "1493799",
    "end": "1500399"
  },
  {
    "text": "is that with a SAS solution you can monitor exactly what your customers are",
    "start": "1500399",
    "end": "1505559"
  },
  {
    "text": "doing at every any one time so you can understand where or what features your",
    "start": "1505559",
    "end": "1510720"
  },
  {
    "text": "customers are using the most where they're getting stuck what features add no value and this can drive decisions on",
    "start": "1510720",
    "end": "1517640"
  },
  {
    "text": "how you evolve your application so you can allocate resources much more intelligently than ever before and",
    "start": "1517640",
    "end": "1525679"
  },
  {
    "text": "essentially by collecting and analyzing the data data you can learn and profit through using analytics and you can",
    "start": "1525679",
    "end": "1532399"
  },
  {
    "text": "monetize this by understanding exactly the usage of the application by your customers and then thinking about",
    "start": "1532399",
    "end": "1538840"
  },
  {
    "text": "perhaps new products that can meet a gap that your solution may have today so with that let me now turn it",
    "start": "1538840",
    "end": "1546679"
  },
  {
    "text": "over to Christian and what he's going to do is talk about Sumo logic how is it designed and evolved over the years on",
    "start": "1546679",
    "end": "1554360"
  },
  {
    "text": "AWS take it away Christian thanks very much s yeah give this man a",
    "start": "1554360",
    "end": "1561120"
  },
  {
    "text": "hand um you know where were you in 2010 when we started Sumo logic um I wish I",
    "start": "1561279",
    "end": "1568200"
  },
  {
    "text": "had known all of this stuff I wish we would had known all of this all of this stuff we were you know thinking about",
    "start": "1568200",
    "end": "1573399"
  },
  {
    "text": "building an application we were not worried about billing and metering and all of these things so uh all right so",
    "start": "1573399",
    "end": "1579919"
  },
  {
    "text": "internet of things huh very exciting all the chairs are instrumented so we can get realtime feedback for each",
    "start": "1579919",
    "end": "1587080"
  },
  {
    "text": "slide I how your butts are shuffling around so all righty so who am I um I'm",
    "start": "1587080",
    "end": "1593640"
  },
  {
    "text": "one of the founders of uh of sumo logic I'm also the CTO I have been dealing",
    "start": "1593640",
    "end": "1598919"
  },
  {
    "text": "with uh with logs and log analytics pretty much uh throughout my entire",
    "start": "1598919",
    "end": "1604360"
  },
  {
    "text": "career for last about 15 years what does Sumo logic do Sumo logic",
    "start": "1604360",
    "end": "1611159"
  },
  {
    "text": "basically picks up this uh this uh this this thread that a was talking about at",
    "start": "1611159",
    "end": "1616799"
  },
  {
    "text": "the end of his of his presentation around you know monitor everything and and and learn from all the data and you",
    "start": "1616799",
    "end": "1622720"
  },
  {
    "text": "know we do that by giving you a way to put all of the you know logs and metrics and so forth of your you know that get",
    "start": "1622720",
    "end": "1629440"
  },
  {
    "text": "generated as your applications your SAS applications your on Prem applications new old whatever it is in the cloud or",
    "start": "1629440",
    "end": "1637240"
  },
  {
    "text": "or in your in your data center we make it so that it's very easy for you to put all the data in one place and we provide",
    "start": "1637240",
    "end": "1643200"
  },
  {
    "text": "the analytics on top of it it looks roughly like this",
    "start": "1643200",
    "end": "1648919"
  },
  {
    "text": "um we uh you know it's pretty obvious it's a cloud-based platform uh the data can come from anywhere whether you're in",
    "start": "1648919",
    "end": "1654679"
  },
  {
    "text": "the cloud or not doesn't really matter um you know the use cases that that that we support you know range from def Ops",
    "start": "1654679",
    "end": "1661440"
  },
  {
    "text": "to um you know it Ops and also compliance and security um you know what",
    "start": "1661440",
    "end": "1666919"
  },
  {
    "text": "we hear from our customers is that you know in today's age with M law and connectivity and all of these things um",
    "start": "1666919",
    "end": "1673840"
  },
  {
    "text": "there is a need to continuously innovate in order to stay competitive uh I supports that obviously you know",
    "start": "1673840",
    "end": "1680159"
  },
  {
    "text": "technology networks Etc but um you know as you know as technology takes over the",
    "start": "1680159",
    "end": "1685799"
  },
  {
    "text": "business things also to some degree can get more complicated more distributed uh you know more external Services being",
    "start": "1685799",
    "end": "1692279"
  },
  {
    "text": "used and uh you know we provide visibility in all of this and you know we what what we actually furnish to our",
    "start": "1692279",
    "end": "1698000"
  },
  {
    "text": "customers is a way to be uh continuously intelligent all right enough about this",
    "start": "1698000",
    "end": "1704919"
  },
  {
    "text": "Sumo logic is sass why is sumic sass because and I can say",
    "start": "1704919",
    "end": "1713880"
  },
  {
    "text": "this because I've been there enterprise software just plain",
    "start": "1713880",
    "end": "1719919"
  },
  {
    "text": "sucks too much pain for the customer I live to this for 10",
    "start": "1719919",
    "end": "1725200"
  },
  {
    "text": "years all we ever did we talked to our customers about how to run the",
    "start": "1725200",
    "end": "1731320"
  },
  {
    "text": "system we never really talked to them a whole lot about how to use it eventually",
    "start": "1731320",
    "end": "1737080"
  },
  {
    "text": "you realize that there's something wrong there and of course this is something that is you know that's not necessarily",
    "start": "1737080",
    "end": "1743360"
  },
  {
    "text": "new you know everybody goes to the goes to their own evolution of how they come up you know realizing this something",
    "start": "1743360",
    "end": "1750559"
  },
  {
    "text": "that I have not heard a lot of people talk about is and this is also from from",
    "start": "1750559",
    "end": "1756200"
  },
  {
    "text": "my experience it is actually disastrous for you as a vendor as well every time",
    "start": "1756200",
    "end": "1762240"
  },
  {
    "text": "you release software that leaves your control that software will not go away",
    "start": "1762240",
    "end": "1768240"
  },
  {
    "text": "and it will continue to track you down year after year after",
    "start": "1768240",
    "end": "1773960"
  },
  {
    "text": "year up to the point where you cannot innovate",
    "start": "1774159",
    "end": "1779559"
  },
  {
    "text": "anymore because all of your resources are spent updating old branches",
    "start": "1779559",
    "end": "1785240"
  },
  {
    "text": "backporting fixes and not actually building new versions and even if you build new",
    "start": "1785240",
    "end": "1791120"
  },
  {
    "text": "versions people will not actually deploy them because of number one it's too",
    "start": "1791120",
    "end": "1796240"
  },
  {
    "text": " hard so why did we chose in 2010 when we",
    "start": "1796240",
    "end": "1803360"
  },
  {
    "text": "started Sumo logic why did we why do why did we choose AWS so we're developers",
    "start": "1803360",
    "end": "1809120"
  },
  {
    "text": "that's our background we don't we know nothing about data centers we wanted to build a service we knew it was going to have to scale not just to the largest",
    "start": "1809120",
    "end": "1816799"
  },
  {
    "text": "customer but really to all customers and so hey AWS has turned the data center into an",
    "start": "1816799",
    "end": "1822760"
  },
  {
    "text": "API as a developer that's something that I can understand and I'm I'm comfortable with",
    "start": "1822760",
    "end": "1828519"
  },
  {
    "text": "and anyways you know the developer mindset is reuse you know we've used you",
    "start": "1828519",
    "end": "1833880"
  },
  {
    "text": "know we run we don't write our own os's anymore at least most of us don't you know we don't necessarily you know",
    "start": "1833880",
    "end": "1839440"
  },
  {
    "text": "reimplement the standard libraries at least most of us don't we are actually used to this idea of reuse AWS just puts",
    "start": "1839440",
    "end": "1847360"
  },
  {
    "text": "that on a different level of obstruction now you're reusing a data center",
    "start": "1847360",
    "end": "1854000"
  },
  {
    "text": "so I want to go through three things you know three major areas or you know three",
    "start": "1854000",
    "end": "1859080"
  },
  {
    "text": "sort of tenets that are actually important for us and that I want to share with you around you know how we",
    "start": "1859080",
    "end": "1864760"
  },
  {
    "text": "think about building a SAS application and you know some principles that we",
    "start": "1864760",
    "end": "1870440"
  },
  {
    "text": "think are important and the first one is it can't be",
    "start": "1870440",
    "end": "1877159"
  },
  {
    "text": "monolithic there's a lot of talk about these days around you know microservices Etc a lot of people say Hey you know",
    "start": "1877159",
    "end": "1884360"
  },
  {
    "text": "don't factor out too much until you know what you have to do in our case we",
    "start": "1884360",
    "end": "1889519"
  },
  {
    "text": "actually knew what we had to do or at least we were like foolish enough to know to think that we knew and you know",
    "start": "1889519",
    "end": "1894960"
  },
  {
    "text": "because we had buildt a similar product before we were not looking for an MVP we knew this thing had to scale so from the",
    "start": "1894960",
    "end": "1902639"
  },
  {
    "text": "very beginning we had a logical breakdown of the system pretty much right",
    "start": "1902639",
    "end": "1909360"
  },
  {
    "text": "away so I'm going to show you this high level logical breakdown",
    "start": "1910440",
    "end": "1915679"
  },
  {
    "text": "that in many ways actually maps to the services that we have actually factored out and I'll show the detail of this in",
    "start": "1915679",
    "end": "1921080"
  },
  {
    "text": "a little bit our system as a lock analytics platform needs to ingest a lot of",
    "start": "1921080",
    "end": "1928679"
  },
  {
    "text": "data this is our ingestion path we receive the data from the internets we",
    "start": "1928679",
    "end": "1934600"
  },
  {
    "text": "have some sort of bus kind of thing there and then you know we process the raw data and we shove it into S3 so it's",
    "start": "1934600",
    "end": "1941159"
  },
  {
    "text": "there and never gets lost and we encrypted and all those good things um we run a fleet that does all of the",
    "start": "1941159",
    "end": "1946799"
  },
  {
    "text": "indexing since we deal with semi-structured data you know the the the full text indexing is basically our",
    "start": "1946799",
    "end": "1953200"
  },
  {
    "text": "database and then we run continuous queries continuous quer is Run in real",
    "start": "1953200",
    "end": "1959120"
  },
  {
    "text": "time updating Aggregates or in other words what was",
    "start": "1959120",
    "end": "1964360"
  },
  {
    "text": "earlier announced um on top of Kinesis unfortunately we didn't have",
    "start": "1964360",
    "end": "1969679"
  },
  {
    "text": "that in 2010 so we had to build it ourselves The Continuous gray engine uses S3 for snapshots because you know",
    "start": "1969679",
    "end": "1976760"
  },
  {
    "text": "ultimately you know the chance that you that you lose a machine and maybe State and so you can snapshot it into S3 and",
    "start": "1976760",
    "end": "1982320"
  },
  {
    "text": "then pull it back as part of the analytics part uh as part of the analytics path what else is there well",
    "start": "1982320",
    "end": "1987600"
  },
  {
    "text": "there's a query engine we have to basically pull the data out you know we have to use indexes and other things in",
    "start": "1987600",
    "end": "1992639"
  },
  {
    "text": "order to answer your queries in order to give you the analytics that you need and then there is a you know service that",
    "start": "1992639",
    "end": "1998120"
  },
  {
    "text": "basically that's a service service it's a great name for that that we came up with that basically interacts with your",
    "start": "1998120",
    "end": "2004559"
  },
  {
    "text": "input you know API UI and so forth so that's kind of the high level breakdown of our",
    "start": "2004559",
    "end": "2010440"
  },
  {
    "text": "system this has at this point reached a scale of 50 terab of new incoming data",
    "start": "2010440",
    "end": "2016159"
  },
  {
    "text": "every day um we continue to scale in a super linear fashion I was here talking",
    "start": "2016159",
    "end": "2021600"
  },
  {
    "text": "about our system last year uh in November so it's 11 months later last year I was talking about 15 terabytes of",
    "start": "2021600",
    "end": "2029480"
  },
  {
    "text": "new of new data per day and I promise you that was the largest number i' had ever seen in my life um you know it just",
    "start": "2029480",
    "end": "2036559"
  },
  {
    "text": "keeps growing CU obviously good um we are actually in four instances so we have sort of three or",
    "start": "2036559",
    "end": "2042159"
  },
  {
    "text": "four different deployments across the world that's another thing that you get uh basically for free with AWS actually",
    "start": "2042159",
    "end": "2047840"
  },
  {
    "text": "uh you can go into uh into Europe you can go into Asia pack Etc",
    "start": "2047840",
    "end": "2053118"
  },
  {
    "text": "so principles of scaling if you build a SAS you need to have some handle on",
    "start": "2053119",
    "end": "2061040"
  },
  {
    "text": "scaling um ours is a data platform so scaling becomes even more important but",
    "start": "2061040",
    "end": "2066240"
  },
  {
    "text": "even if you are not crazy enough to actually think that you can just shove all this data through your system in",
    "start": "2066240",
    "end": "2071800"
  },
  {
    "text": "some way shape or form you will have to scale there's a great book out there called the out of scalability that was",
    "start": "2071800",
    "end": "2078720"
  },
  {
    "text": "actually out in 2010 uh and I really wish we had read it a little bit more",
    "start": "2078720",
    "end": "2084158"
  },
  {
    "text": "carefully but we came up at least with two of the three dimensions more or less on our own so the uh the X the x-axis",
    "start": "2084159",
    "end": "2091760"
  },
  {
    "text": "here in the in the sort of uh you know some sort of scaling Cube here is essentially horizontal scaling right",
    "start": "2091760",
    "end": "2097800"
  },
  {
    "text": "right so so you have something that does something and you make it so that you can go from you know anywhere between",
    "start": "2097800",
    "end": "2104240"
  },
  {
    "text": "three to you know thousands of replicas or or instances that all do the same",
    "start": "2104240",
    "end": "2109520"
  },
  {
    "text": "thing so I think that's that's called horizontal scaling um you know don't use just one box and hope that everything",
    "start": "2109520",
    "end": "2115480"
  },
  {
    "text": "works make it so that you can actually scale it out that's I think pretty much everybody has picked up on this by now",
    "start": "2115480",
    "end": "2121240"
  },
  {
    "text": "the other thing and that's the that's the y- AIS here that's that's a little bit more more interesting functional",
    "start": "2121240",
    "end": "2127839"
  },
  {
    "text": "deom functional decomposition so basically try to figure",
    "start": "2127839",
    "end": "2133119"
  },
  {
    "text": "out what are the components of your system and can you actually keep them separate so that sort of maps back to",
    "start": "2133119",
    "end": "2138880"
  },
  {
    "text": "the sort of high level architecture of our system that I showed you earlier why would you do",
    "start": "2138880",
    "end": "2144400"
  },
  {
    "text": "that one reason to do it is to um to decrease your your blast radius there a",
    "start": "2144400",
    "end": "2151520"
  },
  {
    "text": "very martial term of looking at it but you know if stuff you know basically blows up and it will",
    "start": "2151520",
    "end": "2158280"
  },
  {
    "text": "then you can try to bail you can you you don't want the entire system to fail",
    "start": "2158280",
    "end": "2163599"
  },
  {
    "text": "make it so that probably only a part of the system fails and maybe the rest of the system will sort of continue to limp",
    "start": "2163599",
    "end": "2169560"
  },
  {
    "text": "along still better you know than not having anything at all it's about separation of concerns",
    "start": "2169560",
    "end": "2177520"
  },
  {
    "text": "and you know from a developer perspective that makes a lot of sense because in many ways that's how we've been trained to build systems even",
    "start": "2177520",
    "end": "2184200"
  },
  {
    "text": "before we deployed them into Data Centers of you know unlimited",
    "start": "2184200",
    "end": "2189839"
  },
  {
    "text": "size not everything will break all the time you will not be able to ever rewrite the entire system and you do not",
    "start": "2189839",
    "end": "2196200"
  },
  {
    "text": "want to get stuck with having to change the entire system if something fails so the way that we talk about it",
    "start": "2196200",
    "end": "2202839"
  },
  {
    "text": "is you know the planes flying It Never Lands we have some magic plane that Never Lands um we need to repair the",
    "start": "2202839",
    "end": "2210160"
  },
  {
    "text": "engines in Flight if you are building a SAS service that's what you that's what",
    "start": "2210160",
    "end": "2215319"
  },
  {
    "text": "you will end up having to do so if you make the things",
    "start": "2215319",
    "end": "2220760"
  },
  {
    "text": "smaller there is less impact and you know you can basically get closer to where the actual problem is you can you",
    "start": "2220760",
    "end": "2227400"
  },
  {
    "text": "can change the engine in Flight you do not you do not have to reconstruct the wing just to stay of the",
    "start": "2227400",
    "end": "2232760"
  },
  {
    "text": "metaphor and finally and uh this is kind of from a sort of from a human systems perspective",
    "start": "2232760",
    "end": "2239119"
  },
  {
    "text": "is very interesting as well if you have the concern separation if you have the functional decompos decomposition they",
    "start": "2239119",
    "end": "2245599"
  },
  {
    "text": "can also actually help you scale your development because now not everybody necessarily needs to know everything in",
    "start": "2245599",
    "end": "2251560"
  },
  {
    "text": "your organization people can be experts uh of a particular part of the system",
    "start": "2251560",
    "end": "2256920"
  },
  {
    "text": "they provide interfaces and they interact with the other guys' interfaces as well and that gives you ultimately",
    "start": "2256920",
    "end": "2263319"
  },
  {
    "text": "more parallelism and you can build stuff more quickly so that's also known sort",
    "start": "2263319",
    "end": "2268560"
  },
  {
    "text": "of as the if you can pull this off well it's also known as the reverse convey maneuver so you're basically putting",
    "start": "2268560",
    "end": "2274480"
  },
  {
    "text": "your organization together around the functional decomposed",
    "start": "2274480",
    "end": "2281599"
  },
  {
    "text": "architecture all righty so what did we actually do we actually were smart enough to",
    "start": "2281599",
    "end": "2287800"
  },
  {
    "text": "figure out that we needed to compose the applications that make up the entire SAS from layers of modules in our case we've",
    "start": "2287800",
    "end": "2294839"
  },
  {
    "text": "done a lot of work in Java before we were comfortable with the jvm as a platform um we were a little bit bored",
    "start": "2294839",
    "end": "2300599"
  },
  {
    "text": "with this whole Java thing so we decided you know let's use a totally unproven um you know new research",
    "start": "2300599",
    "end": "2308319"
  },
  {
    "text": "language called Scala to build the next thing and uh that actually worked out really well I'm",
    "start": "2308319",
    "end": "2314960"
  },
  {
    "text": "not sure I can recommend you know that that train of thought necessarily um but uh for us it worked",
    "start": "2314960",
    "end": "2321880"
  },
  {
    "text": "out well attracts a lot of talent people want to work with new stuff and that was kind of the thinking um it's in Java or",
    "start": "2321880",
    "end": "2328400"
  },
  {
    "text": "Scala it's a jvm based so of course we're using PA we're using Maven uh each module has a palm as you would expect",
    "start": "2328400",
    "end": "2335480"
  },
  {
    "text": "and modules compos into applications or services and there's a main method for those services so it's pretty simple we",
    "start": "2335480",
    "end": "2342040"
  },
  {
    "text": "initially had separate git repos for every service at the point or actually for",
    "start": "2342040",
    "end": "2349280"
  },
  {
    "text": "every module at the point where we had like you know even even relatively early on we already had like 40 to 50 or so different",
    "start": "2349280",
    "end": "2355400"
  },
  {
    "text": "modules um making any change to the system required often you know to touch more than one module because maybe",
    "start": "2355400",
    "end": "2361760"
  },
  {
    "text": "you're changing some interface and you need to make the change on the other side as well from the API perspective and became uh became pretty hard to do",
    "start": "2361760",
    "end": "2369920"
  },
  {
    "text": "that it's okay to do it locally but then try to give somebody a pull request that SP that that spans multiple repos uh",
    "start": "2369920",
    "end": "2377200"
  },
  {
    "text": "that ended up being basically a nightmare so we ended up ultimately making one repo that has all of the",
    "start": "2377200",
    "end": "2383040"
  },
  {
    "text": "modules in it that's kind of where we ended up for each application again remember",
    "start": "2383040",
    "end": "2388960"
  },
  {
    "text": "the um the graphic that I had before all of these like components these are all applications we ended up basically",
    "start": "2388960",
    "end": "2396000"
  },
  {
    "text": "turning each of these into into their own cluster so we have three plus of each of those and what that also helped",
    "start": "2396000",
    "end": "2402000"
  },
  {
    "text": "us do is kind of right siiz the instance type for the type of cluster more CPU you know Etc the usual uh uh you know",
    "start": "2402000",
    "end": "2411000"
  },
  {
    "text": "tradeoffs you know and then for what it's worth we're using our frow over HTTP for RPC and that's also what we run",
    "start": "2411280",
    "end": "2419280"
  },
  {
    "text": "over our messaging uh infrastructure we we use a lot of hornet Q because there was no Kafka and there was no Kinesis in",
    "start": "2419280",
    "end": "2425839"
  },
  {
    "text": "2010 um you know we're looking very heavily into and in fact we're actually starting to deploy a replacement for the",
    "start": "2425839",
    "end": "2431760"
  },
  {
    "text": "underlying kind of messaging infrastructure uh uh that's based on kfka",
    "start": "2431760",
    "end": "2438200"
  },
  {
    "text": "so basically what I've been trying to tell you is that this whole",
    "start": "2438200",
    "end": "2443280"
  },
  {
    "text": "microservices thing is actually a pretty good idea um because you will find when",
    "start": "2443280",
    "end": "2450560"
  },
  {
    "text": "you're successful that you need to have the flexibility you need to be able to divide and conquer",
    "start": "2450560",
    "end": "2457720"
  },
  {
    "text": "so that's how I actually visualize microservices",
    "start": "2457720",
    "end": "2465720"
  },
  {
    "text": "so and here's our services uh incredible mess and death star and you've seen this",
    "start": "2465720",
    "end": "2472000"
  },
  {
    "text": "from a lot of other companies uh we're not quite yet at Twitter scale we don't actually have 200 uh different Services",
    "start": "2472000",
    "end": "2478800"
  },
  {
    "text": "you know we still have this idea that probably not every single line of code needs to be its own service and its own container but there is definitely a lot",
    "start": "2478800",
    "end": "2485960"
  },
  {
    "text": "of um of breakdown going on here and in these little uh in these little boxes you will see uh uh you know some of the",
    "start": "2485960",
    "end": "2493319"
  },
  {
    "text": "higher level functional components reflected because that's really where we started from and this is a living",
    "start": "2493319",
    "end": "2498359"
  },
  {
    "text": "evolving system we never set out to rewrite the entire thing we never will but in many ways it's being Rewritten",
    "start": "2498359",
    "end": "2504720"
  },
  {
    "text": "you know as we go um again everything gets deployed on",
    "start": "2504720",
    "end": "2510240"
  },
  {
    "text": "at least three machines and some things get deployed on 3,000 machines",
    "start": "2510240",
    "end": "2516440"
  },
  {
    "text": "one thing that's important if you have the microservices or service oriented architecture is that you do not actually",
    "start": "2517720",
    "end": "2523880"
  },
  {
    "text": "equip the individual applications or services with with any knowledge about the environment that they are in in a",
    "start": "2523880",
    "end": "2530480"
  },
  {
    "text": "static fashion that has to be dynamic uh and this is again also not not necessarily something that you haven't",
    "start": "2530480",
    "end": "2536000"
  },
  {
    "text": "heard before but I want to stress it because it's really important from the very beginning we thought that each of",
    "start": "2536000",
    "end": "2541160"
  },
  {
    "text": "the applications or Services should literally not have some sort of you know config properties thing or you know some",
    "start": "2541160",
    "end": "2547680"
  },
  {
    "text": "gnarly old XML that's sitting there telling it what to do that you have to somehow par in when you when you",
    "start": "2547680",
    "end": "2552960"
  },
  {
    "text": "basically start the application this is how we start a service in Sumo we simply give it one",
    "start": "2552960",
    "end": "2559680"
  },
  {
    "text": "parameter and only one parameter and that parameter points it to where the service registry is the service registry",
    "start": "2559680",
    "end": "2565800"
  },
  {
    "text": "in our case is built around sueper that seems pretty obvious given when we started and the fact that we are jvm",
    "start": "2565800",
    "end": "2571160"
  },
  {
    "text": "based um there's other options um for example cor you know IFD ET have all of",
    "start": "2571160",
    "end": "2577960"
  },
  {
    "text": "these things already built in you know that's just how important that idea of a service registry is and a distributed",
    "start": "2577960",
    "end": "2584359"
  },
  {
    "text": "system like that and it's not the hardest thing to build especially not if you have some good consensus kind of",
    "start": "2584359",
    "end": "2589920"
  },
  {
    "text": "tool like suer or C Etc all right so now the second one the",
    "start": "2589920",
    "end": "2597119"
  },
  {
    "text": "second main point we truly believe in multi-tenancy",
    "start": "2597119",
    "end": "2602280"
  },
  {
    "text": "um you know this also came out in thees part so um if you can if you are",
    "start": "2602280",
    "end": "2608599"
  },
  {
    "text": "starting from a clean slate in particular go with a multi-tenant approach it will be a lot",
    "start": "2608599",
    "end": "2615240"
  },
  {
    "text": "better it is actually going to keep your costs down to some degree because you",
    "start": "2615240",
    "end": "2620800"
  },
  {
    "text": "have less slack and I'm going to go into that in a second and also you really want to make sure that",
    "start": "2620800",
    "end": "2628200"
  },
  {
    "text": "you do not do any sort of customization on a poor customer basis if every",
    "start": "2628200",
    "end": "2633599"
  },
  {
    "text": "customer is a single tenant in your system what will happen is that going to call you up and they're going to say oh",
    "start": "2633599",
    "end": "2639359"
  },
  {
    "text": "but you can you change this or maybe can you make this UI change and revert it and you know you're going to go and",
    "start": "2639359",
    "end": "2644400"
  },
  {
    "text": "ultimately it you know you're losing control and ultimately you're going to get tracked down into sort of you know",
    "start": "2644400",
    "end": "2649440"
  },
  {
    "text": "software kind of on-prem deploy model so um with a wink we're appropriating this",
    "start": "2649440",
    "end": "2656400"
  },
  {
    "text": "sort of Dev hops kind of Mantra of you know cattle versus pets and I really think that like just from a you know",
    "start": "2656400",
    "end": "2663359"
  },
  {
    "text": "purely rational kind of architect perspective you really should think about your customers as cattle and not",
    "start": "2663359",
    "end": "2670880"
  },
  {
    "text": "as pets it'll get you into a lot of trouble otherwise so now of course there's a bunch of our customers in here",
    "start": "2670880",
    "end": "2677000"
  },
  {
    "text": "and so you know how we",
    "start": "2677000",
    "end": "2680440"
  },
  {
    "text": "really so how we really really actually feel about you guys is like that's the kind that's kind of how we visualize you",
    "start": "2682079",
    "end": "2689359"
  },
  {
    "text": "um and uh of course nothing will ever be the same across two customers even if",
    "start": "2689359",
    "end": "2694440"
  },
  {
    "text": "you have a multi-tenant system so you will end up introducing you know dynamic configuration and feature flex and so",
    "start": "2694440",
    "end": "2700920"
  },
  {
    "text": "forth and there's really not a whole lot of things that you can do about that uh you will end up having to do it and uh",
    "start": "2700920",
    "end": "2707359"
  },
  {
    "text": "so the cattle will all essentially run around with their own configuration of feature flex and a large system that can get pretty complicated if you go down",
    "start": "2707359",
    "end": "2714280"
  },
  {
    "text": "the route of feature Flex which you will have to make sure you have good introspection tools for those uh you",
    "start": "2714280",
    "end": "2721160"
  },
  {
    "text": "know otherwise on a per tenent basis the system Behavior might just you know kind of change a little bit and can sometimes",
    "start": "2721160",
    "end": "2727680"
  },
  {
    "text": "get really nasty in terms of debugging all right so everybody here's",
    "start": "2727680",
    "end": "2733920"
  },
  {
    "text": "a Sumo customer you know I hope you don't take this too seriously so",
    "start": "2733920",
    "end": "2740079"
  },
  {
    "text": "um especially for us as a data platform why is multi tendency going to be more efficient well here's a here's a typical",
    "start": "2740079",
    "end": "2746720"
  },
  {
    "text": "sumic customer there's literally an adex variance in the amount of data that's being sent 250 gigs all the way up to",
    "start": "2746720",
    "end": "2753960"
  },
  {
    "text": "almost two terabytes right if you're building a single tenant",
    "start": "2753960",
    "end": "2760359"
  },
  {
    "text": "system you're basically going to provision that system especially if it's onr but even if you're building a m a",
    "start": "2760359",
    "end": "2766720"
  },
  {
    "text": "single tenant SAS you have to have some sort of static provisioning for this and you are going",
    "start": "2766720",
    "end": "2773319"
  },
  {
    "text": "to waste money right you can think hey I'm going to build you know the world's best",
    "start": "2773319",
    "end": "2779000"
  },
  {
    "text": "autoscaling controller and I'm going to dynamically you know put everything and make it go up and down but the reality",
    "start": "2779000",
    "end": "2785720"
  },
  {
    "text": "is that in a system system like this where the data comes in in real time that ends up getting pretty hard your",
    "start": "2785720",
    "end": "2791760"
  },
  {
    "text": "controller is going to be a very complicated piece of logic and I've read the control theory",
    "start": "2791760",
    "end": "2798520"
  },
  {
    "text": "book and I thought that I can write the best pit controler there is and guess what I can't because of the loss of",
    "start": "2798520",
    "end": "2805119"
  },
  {
    "text": "physics and the fact that you know just because you think you need capacity AWS gives you this capacity potentially very",
    "start": "2805119",
    "end": "2811520"
  },
  {
    "text": "quickly but it still takes on the order of you know seconds or minutes and not",
    "start": "2811520",
    "end": "2817079"
  },
  {
    "text": "microseconds and so controlling that in a close loop gets really really",
    "start": "2817079",
    "end": "2822960"
  },
  {
    "text": "hairy so the load per tenant fluctuates wildly but the aggregated system load in",
    "start": "2822960",
    "end": "2829079"
  },
  {
    "text": "our case because all of these things cancel each other out ends up actually",
    "start": "2829079",
    "end": "2834839"
  },
  {
    "text": "just growing slowly day over day so believe it or not our system from the outside is actually ends up being",
    "start": "2834839",
    "end": "2841280"
  },
  {
    "text": "provisioned rather statically we don't do any wild autoscaling",
    "start": "2841280",
    "end": "2846880"
  },
  {
    "text": "this is the third of three your data center is now an",
    "start": "2847680",
    "end": "2853160"
  },
  {
    "text": "API do not do anything manually use automation to the fullest extent",
    "start": "2853160",
    "end": "2860160"
  },
  {
    "text": "possible this is actually to some degree easier said than",
    "start": "2860160",
    "end": "2865720"
  },
  {
    "text": "done we of course use shenkin you can pull whatever you know C tool you you want to use uh that's fine um we still",
    "start": "2865720",
    "end": "2872880"
  },
  {
    "text": "build system versions actually that we deploy as cross cuts across all all the modules because we feel that we need to",
    "start": "2872880",
    "end": "2878760"
  },
  {
    "text": "test them together so even if you have microservices you can still end up in the in the sort of trap of having uh a",
    "start": "2878760",
    "end": "2885319"
  },
  {
    "text": "monolithic microservices thing going on because you feel that you need to deploy them all together we are working now and",
    "start": "2885319",
    "end": "2891040"
  },
  {
    "text": "this is really something that after the effect gets a lot harder and if you do it right away we're working now on",
    "start": "2891040",
    "end": "2896119"
  },
  {
    "text": "basically making smaller groups of services that that sort of evolve together and you know and we're going",
    "start": "2896119",
    "end": "2901680"
  },
  {
    "text": "towards um continuous deployment and Delivery for those in a small step if you have have a green field opportunity",
    "start": "2901680",
    "end": "2908559"
  },
  {
    "text": "today don't start with this idea of having to have a Crosscut system version",
    "start": "2908559",
    "end": "2913880"
  },
  {
    "text": "uh across all of your services it uh it'll it'll slow down your deployment processes because everything has to be",
    "start": "2913880",
    "end": "2919280"
  },
  {
    "text": "tested together Etc you know try to go for the continuous delivery approach on a per service level right away here's",
    "start": "2919280",
    "end": "2926160"
  },
  {
    "text": "how Jenkins looks like in our case just like throwing in some gra some some pictures here you can see there qu's",
    "start": "2926160",
    "end": "2932000"
  },
  {
    "text": "lots of stuff lots of different modules they keep getting built all the time so it's a really busy system Jenkins for",
    "start": "2932000",
    "end": "2937559"
  },
  {
    "text": "example you can set up with elastic slaves put them on spot instance Etc use more other than less you can paralyze",
    "start": "2937559",
    "end": "2944160"
  },
  {
    "text": "everything wor much faster we have um a four-step process to",
    "start": "2944160",
    "end": "2949880"
  },
  {
    "text": "get something into broad everything gets put on night which is a nightly deployment um you know system versions",
    "start": "2949880",
    "end": "2956559"
  },
  {
    "text": "that we actually think work well together become uh uh get get pushed to stack which is our QA Department uh uh",
    "start": "2956559",
    "end": "2963119"
  },
  {
    "text": "deployment and they will be able to test it there and then if it actually comes back out of that okay we push it under",
    "start": "2963119",
    "end": "2969799"
  },
  {
    "text": "this deployment that's called long which is our internal deployment that we use every day in order to run Sumo logic and",
    "start": "2969799",
    "end": "2977040"
  },
  {
    "text": "that's the deployment that gets all of our production logs so everybody at Sumo is always using this this last stage",
    "start": "2977040",
    "end": "2984359"
  },
  {
    "text": "deployment and then we pushed abroad we did a lot of tooling it's our",
    "start": "2984359",
    "end": "2992520"
  },
  {
    "text": "deployment tools called ddsh again in 2010 we did not have sort of the abundance of tools that what that's",
    "start": "2992520",
    "end": "2998359"
  },
  {
    "text": "available today um you know our Chief Architect Stefan who's actually sitting right here spent a lot of time and and",
    "start": "2998359",
    "end": "3004920"
  },
  {
    "text": "invested a lot of love into actually building as a commandline deployment tool that knows to how to basically do",
    "start": "3004920",
    "end": "3010319"
  },
  {
    "text": "everything in AWS and knows how to do that with our code base and that is based actually on a model of how our",
    "start": "3010319",
    "end": "3016720"
  },
  {
    "text": "system is supposed to work the fact that it is actually modelbased is something that I have not seen in a lot of Contin",
    "start": "3016720",
    "end": "3022559"
  },
  {
    "text": "in in a lot of deployment tools yet um but that actually turns out to be an entire talk in itself so I'm not going",
    "start": "3022559",
    "end": "3029079"
  },
  {
    "text": "to actually dive into this very much all right so now we're back to the",
    "start": "3029079",
    "end": "3035720"
  },
  {
    "text": "reference architecture and uh looks like somebody",
    "start": "3035720",
    "end": "3041040"
  },
  {
    "text": "at AWS really likes Minecraft looking at all of these logos um so let me map onto this reference",
    "start": "3041040",
    "end": "3049280"
  },
  {
    "text": "architecture kind of you know which parts we use and you know what we kind of use for the individual um for the",
    "start": "3049280",
    "end": "3056040"
  },
  {
    "text": "individual concerns here so um we use elb of course in our case we have three",
    "start": "3056040",
    "end": "3063400"
  },
  {
    "text": "one for service which is the API that our uh uh user interface talks to then we also have a a published API uh that's",
    "start": "3063400",
    "end": "3070760"
  },
  {
    "text": "another elb and then ultimately um of course we need to inest all of this data",
    "start": "3070760",
    "end": "3076280"
  },
  {
    "text": "uh and that's a bank of uh of what we call receivers and those are behind elbs",
    "start": "3076280",
    "end": "3081640"
  },
  {
    "text": "as well so that's pretty obvious um as far as the application is concerned of course we're using ec2",
    "start": "3081640",
    "end": "3089640"
  },
  {
    "text": "we're obviously using reserved instances um in our case because it turns out and",
    "start": "3089640",
    "end": "3094760"
  },
  {
    "text": "that is actually counterintuitive and we were not really prepared for this in the beginning either but it turns out that",
    "start": "3094760",
    "end": "3099880"
  },
  {
    "text": "because of the cancellation of the various fluctuating loads the system is actually relatively statically",
    "start": "3099880",
    "end": "3105559"
  },
  {
    "text": "provisioned it turns out that we can actually get a pretty good saving with our eyes because there's not all that",
    "start": "3105559",
    "end": "3111880"
  },
  {
    "text": "much Dynamic sort of uh uh you know instan of spin up spin down going on and",
    "start": "3111880",
    "end": "3116920"
  },
  {
    "text": "of course we like looking at spot as well you know spot is really interesting in many ways I think as I think of of",
    "start": "3116920",
    "end": "3123680"
  },
  {
    "text": "spot as this idea of unreliable distributed systems you know thought all the way through so if you want to really",
    "start": "3123680",
    "end": "3129760"
  },
  {
    "text": "really have a reliable system make sure you develop it such that it can actually survive running on spot instances and",
    "start": "3129760",
    "end": "3136640"
  },
  {
    "text": "then it's pretty much going to be perfect we use the simple email services in order to send uh emails to to our",
    "start": "3136640",
    "end": "3144799"
  },
  {
    "text": "customers alerts and all of these things sending emails these days is very very tricky you don't want to do it yourself",
    "start": "3144799",
    "end": "3151079"
  },
  {
    "text": "you're going to get caught pretty much in all the spam filters and and SCS fixes",
    "start": "3151079",
    "end": "3156160"
  },
  {
    "text": "that um simple queuing service is actually used uh s s she referred to",
    "start": "3156160",
    "end": "3161960"
  },
  {
    "text": "that earlier for um for user registration from the corporate website so when you go to W.S logic.com and you",
    "start": "3161960",
    "end": "3168520"
  },
  {
    "text": "you sign up for free tier or free trial um we need to do some provisioning work of course and that comes to an S uh sqsq",
    "start": "3168520",
    "end": "3177480"
  },
  {
    "text": "We have basically as I said before double digit pedabytes of",
    "start": "3177480",
    "end": "3183079"
  },
  {
    "text": "S3 um S3 is a fantastic",
    "start": "3183079",
    "end": "3187400"
  },
  {
    "text": "system the amount of um you know the amount of durability really that that we",
    "start": "3188319",
    "end": "3194160"
  },
  {
    "text": "get out of it is is is basically gamechanging we do not have to worry about losing uh the you know system of",
    "start": "3194160",
    "end": "3200760"
  },
  {
    "text": "record data basically so that's a that's a fantastic benefit we use elastic cach m cach",
    "start": "3200760",
    "end": "3207280"
  },
  {
    "text": "in order to uh you know populate client caches for uh for guys who basically",
    "start": "3207280",
    "end": "3213040"
  },
  {
    "text": "talk one service talks to another service about you know customer data or you know whatever it is you know internal configuration data so mcash is",
    "start": "3213040",
    "end": "3219480"
  },
  {
    "text": "used pretty heavily there to make it so that we don't have to constantly call the backends um I'm still trying to find",
    "start": "3219480",
    "end": "3224960"
  },
  {
    "text": "a way to get reddis in there because I love reddis but I'm apparently the only person at Sumo that does so right now",
    "start": "3224960",
    "end": "3230799"
  },
  {
    "text": "we're doing mcash we use Dynamo DB not very heavily but we put the feature flag in there and",
    "start": "3230799",
    "end": "3236920"
  },
  {
    "text": "all of the configuration stuff and it also acts as a journal for one of the um for one of the metadata services and uh",
    "start": "3236920",
    "end": "3244920"
  },
  {
    "text": "uh that was clearly overdesigned and uh because you don't really need dynamodb I mean dynamodb is",
    "start": "3244920",
    "end": "3250880"
  },
  {
    "text": "a nice system and all but if you need a journal you know just a pen to a file uh",
    "start": "3250880",
    "end": "3256040"
  },
  {
    "text": "and so of course uh when there's a hiccup in Dynamo DB as uh apparently there was a little while ago um you know",
    "start": "3256040",
    "end": "3262160"
  },
  {
    "text": "we were not entirely unaffected by that",
    "start": "3262160",
    "end": "3266838"
  },
  {
    "text": "all of the configuration and content objects you know the the uh the system configuration you know organizations",
    "start": "3267640",
    "end": "3273640"
  },
  {
    "text": "users you know searches queries Etc that's all in in in my SQL via RDS we use Simple DB a little bit for a",
    "start": "3273640",
    "end": "3281960"
  },
  {
    "text": "simple deployment locator we have a yellow page service internally that basically tells us where is this custom",
    "start": "3281960",
    "end": "3287680"
  },
  {
    "text": "which deployment we we just club that into simple DB because it's easy",
    "start": "3287680",
    "end": "3292839"
  },
  {
    "text": "monitoring well guess what we're using our own tool for that you know I would uh encourage you to think about doing",
    "start": "3292839",
    "end": "3299680"
  },
  {
    "text": "the same um we also use cloud watch and cloud",
    "start": "3299680",
    "end": "3305280"
  },
  {
    "text": "trail um for analytics again you know we happen to have an analytics platform lying around so um we use it very",
    "start": "3305280",
    "end": "3311960"
  },
  {
    "text": "heavily we're really lucky actually because we have a almost perfect dog fooding scenario which not not a lot of",
    "start": "3311960",
    "end": "3317599"
  },
  {
    "text": "folks have we use S for building s is another SAS so you know",
    "start": "3317599",
    "end": "3323440"
  },
  {
    "text": "there's nothing wrong with using others with using other people's sass you know to do stuff for you s is pretty",
    "start": "3323440",
    "end": "3328960"
  },
  {
    "text": "industrial strength uh in you know in terms of building you know life cycle management",
    "start": "3328960",
    "end": "3335440"
  },
  {
    "text": "Jenkins I've already said we're using GitHub everything's in a private repo provisioning goes through the stuff",
    "start": "3335440",
    "end": "3341720"
  },
  {
    "text": "that we build ourselves I referenced that earlier as well this is not something that you",
    "start": "3341720",
    "end": "3346920"
  },
  {
    "text": "probably are going to go down that route of this these days there's probably better tools that you can get you there more",
    "start": "3346920",
    "end": "3352119"
  },
  {
    "text": "quickly um we're starting to uh for for a new project we're starting to uh to look at msos we're using cloud formation",
    "start": "3352119",
    "end": "3358960"
  },
  {
    "text": "they have some pretty nice cloud formation scripts to set that up so that's cool and uh that was pretty much",
    "start": "3358960",
    "end": "3364559"
  },
  {
    "text": "the mapping um want to toot my own horn here just a little bit uh we actually have",
    "start": "3364559",
    "end": "3370920"
  },
  {
    "text": "Integrations with a lot of the AWS services that spit out data I think that's really cool yeah they're listed",
    "start": "3370920",
    "end": "3376359"
  },
  {
    "text": "here so we can generate we can basically inest from S3 you know all of the audit locks Etc that you get you know Cloud",
    "start": "3376359",
    "end": "3382280"
  },
  {
    "text": "watch cloud trail um we just announced something for VPC flow locks which is super interesting um so that's kind of",
    "start": "3382280",
    "end": "3388640"
  },
  {
    "text": "how we kind of you know link back and of course we use that ourselves as well um you know with our infrastructure",
    "start": "3388640",
    "end": "3393920"
  },
  {
    "text": "provider which I think is a really good story what am I very excited about EFS",
    "start": "3393920",
    "end": "3399359"
  },
  {
    "text": "the elastic file system essentially hosted um uh uh hosted NFS essentially",
    "start": "3399359",
    "end": "3405359"
  },
  {
    "text": "is very cool learned a little bit more about that yesterday from the guys who actually build it um very cool system so",
    "start": "3405359",
    "end": "3411520"
  },
  {
    "text": "we're looking into uh you know doing some work with that the Key Management Service is super exciting but also kind",
    "start": "3411520",
    "end": "3418400"
  },
  {
    "text": "of like the topic of Key Management is again that's a whole another talk so I'm not going to go into that um very",
    "start": "3418400",
    "end": "3424520"
  },
  {
    "text": "excited about you know Docker and M and all of these things um but frankly I think that that AWS already invented the",
    "start": "3424520",
    "end": "3432280"
  },
  {
    "text": "the future after containers even while we're still all catching up of the container stuff including AWS with the with the elastic",
    "start": "3432280",
    "end": "3439200"
  },
  {
    "text": "container service I really think in 5 or 10 years we're going to be here talking about how to build large scale",
    "start": "3439200",
    "end": "3445559"
  },
  {
    "text": "applications and experiences of having built large scale applications on top of",
    "start": "3445559",
    "end": "3451839"
  },
  {
    "text": "Lambda thank you very",
    "start": "3451839",
    "end": "3455319"
  },
  {
    "text": "much awesome um thank you Christian a couple of last slides before we break if",
    "start": "3460319",
    "end": "3465960"
  },
  {
    "text": "you haven't already please register with the AWS partner Network APN and when you",
    "start": "3465960",
    "end": "3471960"
  },
  {
    "text": "do you can apply for the SAS partner program you can see there's a whole host of benefits here this information is",
    "start": "3471960",
    "end": "3478559"
  },
  {
    "text": "available on the APN Network site so definitely go take a look at it once you join APN you'll have access to much",
    "start": "3478559",
    "end": "3485440"
  },
  {
    "text": "deeper content than what I was able to present today including videos white papers more reference architectures and",
    "start": "3485440",
    "end": "3490839"
  },
  {
    "text": "you'll be able to consult with our partner team for guidance on how to build your SAS Solution optimally on AWS",
    "start": "3490839",
    "end": "3498039"
  },
  {
    "text": "so with that thank you for attending enjoy the rest of reinvent [Applause]",
    "start": "3498039",
    "end": "3507229"
  }
]