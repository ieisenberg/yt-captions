[
  {
    "start": "0",
    "end": "128000"
  },
  {
    "text": "so re invents coming to close hope you guys have had fun good week so i'm going to talk today",
    "start": "1040",
    "end": "6160"
  },
  {
    "text": "about low latency multiplayer with aws so launching a game is a ton of fun",
    "start": "6160",
    "end": "12639"
  },
  {
    "text": "right you spend a you know a year or two or three of your life toiling away crunching trying to",
    "start": "12639",
    "end": "18640"
  },
  {
    "text": "create this awesome experience and you know you have a private beta you have a public beta you load test your",
    "start": "18640",
    "end": "25279"
  },
  {
    "text": "servers you make sure everything's hardened and ready to go and then when it comes time to launch",
    "start": "25279",
    "end": "30800"
  },
  {
    "text": "there's still about a 50 50 chance that everything is going to just completely fall apart some of you have probably",
    "start": "30800",
    "end": "37280"
  },
  {
    "text": "been through this firsthand i have as well uh before coming to aws i spent many years at playstation building and",
    "start": "37280",
    "end": "43440"
  },
  {
    "text": "launching online games and luckily many of them went well but some of them did not at least they were",
    "start": "43440",
    "end": "49280"
  },
  {
    "text": "learning experiences but this has really kind of become a pervasive problem for the game industry you know almost to",
    "start": "49280",
    "end": "56800"
  },
  {
    "text": "the point where a lot of players expect the game to just be completely broken for",
    "start": "56800",
    "end": "62160"
  },
  {
    "text": "weeks after any major release or new dlc etc so how do we actually fix this",
    "start": "62160",
    "end": "68880"
  },
  {
    "text": "how do we leverage services that aws provides leverage newer patterns and",
    "start": "68880",
    "end": "74000"
  },
  {
    "text": "game servers in order to avoid falling into the same traps that people have fallen into time and",
    "start": "74000",
    "end": "80560"
  },
  {
    "text": "time again so by the end of this session hope you leave with some real world practical",
    "start": "80560",
    "end": "86400"
  },
  {
    "text": "tips that you can take back when you're designing your next generation game back ends",
    "start": "86400",
    "end": "91520"
  },
  {
    "text": "and then also just some philosophical decision points so that you more",
    "start": "91520",
    "end": "96720"
  },
  {
    "text": "understand the process your game probably won't look exactly like any of the diagrams that i'm going to show but",
    "start": "96720",
    "end": "101840"
  },
  {
    "text": "the idea is to understand the process and the type of decisions that you need to make",
    "start": "101840",
    "end": "107840"
  },
  {
    "text": "and hopefully overcome issues like this so i'm nate weiger i run the gaming solutions team at aws uh member",
    "start": "108079",
    "end": "114079"
  },
  {
    "text": "my team dhruv is going to speak right after me about load testing and then i'm joined today by james gwurtzman the ceo of playfab",
    "start": "114079",
    "end": "120719"
  },
  {
    "text": "who has actually built a game platform that has powered several uh top ten steam games",
    "start": "120719",
    "end": "126240"
  },
  {
    "text": "following principles such as these so in order to make this more tangible i kind of came up with the idea of",
    "start": "126240",
    "end": "131840"
  },
  {
    "start": "128000",
    "end": "177000"
  },
  {
    "text": "walking through a hypothetical game so this is just something i came up with this knights versus samurai the idea is",
    "start": "131840",
    "end": "137840"
  },
  {
    "text": "this is going to be four versus four death match you're just going to go on and hack your friends to bits the people that hack their friends to",
    "start": "137840",
    "end": "143760"
  },
  {
    "text": "bits the fastest win game that i personally would have a blast playing uh this is a cool piece of artwork",
    "start": "143760",
    "end": "149360"
  },
  {
    "text": "actually care of game artist dan scott i found it on an image search i emailed him he's like yeah sure cool use it so",
    "start": "149360",
    "end": "155040"
  },
  {
    "text": "thanks dan so with a game like this obviously low latency is going to be",
    "start": "155040",
    "end": "160400"
  },
  {
    "text": "really important but also we want to make it a global experience we want people to be able to",
    "start": "160400",
    "end": "166000"
  },
  {
    "text": "log on and have equal opportunity to hack themselves to bits and whether or not they're in the u.s or europe or south america",
    "start": "166000",
    "end": "173120"
  },
  {
    "text": "japan etc so how do we resolve those two because they're inherently in conflict let's talk about latency to",
    "start": "173120",
    "end": "179599"
  },
  {
    "start": "177000",
    "end": "236000"
  },
  {
    "text": "begin with so this is a map care of super data research that shows average latency",
    "start": "179599",
    "end": "184959"
  },
  {
    "text": "around the globe and the exact numbers you know they aren't that important i don't know exactly how accurate but",
    "start": "184959",
    "end": "190080"
  },
  {
    "text": "they're in the ballpark the idea is when you're in a given region your latency is good if you have game servers in the goodman",
    "start": "190080",
    "end": "196560"
  },
  {
    "text": "region your latency is going to be fine but anytime you're leaving that region and you're",
    "start": "196560",
    "end": "201680"
  },
  {
    "text": "going across you know the pacific to go over to the japan or going across the atlantic to",
    "start": "201680",
    "end": "207440"
  },
  {
    "text": "get to europe you're adding 100 150 milliseconds minimum so what's the implication so 150",
    "start": "207440",
    "end": "213840"
  },
  {
    "text": "millisecond ping time sucks right like if you've ever played an online game with 150 second",
    "start": "213840",
    "end": "219519"
  },
  {
    "text": "you know 150 millisecond ping time it's no good there's lag and there's glitches and you're jumping around so that's not",
    "start": "219519",
    "end": "224640"
  },
  {
    "text": "going to work for the real-time multiplayer aspect of a game like this but we do want it to be global so how",
    "start": "224640",
    "end": "230799"
  },
  {
    "text": "are we going to do this in a way that we can kind of get this best of both worlds so starting with the game server piece",
    "start": "230799",
    "end": "238000"
  },
  {
    "start": "236000",
    "end": "323000"
  },
  {
    "text": "first straightforward we're going to aim to put game servers as close to our end users as possible",
    "start": "238000",
    "end": "244080"
  },
  {
    "text": "this makes sense right we're going to use aws regions in oregon and frankfurt new region we just",
    "start": "244080",
    "end": "250959"
  },
  {
    "text": "launched tokyo and then brazil in order to get game servers as close to people as possible but what we can't",
    "start": "250959",
    "end": "257919"
  },
  {
    "text": "do is just kind of replicate data everywhere now that seems like the easy way out like you just kind of",
    "start": "257919",
    "end": "264000"
  },
  {
    "text": "connect all these regions and you build this big data mesh i strongly recommend not to do that and",
    "start": "264000",
    "end": "269360"
  },
  {
    "text": "there's a few reasons why i say that first of all it adds all that latency right back into the system so okay you don't have game",
    "start": "269360",
    "end": "275919"
  },
  {
    "text": "server latency to your player anymore but now you have a huge amount of latency in this giant data mesh and you're talking about",
    "start": "275919",
    "end": "282080"
  },
  {
    "text": "waiting you know 100 milliseconds and another 100 milliseconds and another 100 milliseconds and if you're really trying to have any kind of",
    "start": "282080",
    "end": "288240"
  },
  {
    "text": "transactional integrity you've got to wait for that whole cycle to complete for any important transaction anything",
    "start": "288240",
    "end": "294880"
  },
  {
    "text": "where it's like a purchase or anything and you want to make sure that the data is consistent you've got to wait four or 500 milliseconds doesn't really",
    "start": "294880",
    "end": "301520"
  },
  {
    "text": "buy us much from latency and then it also adds a ton of fragility now all of our regions are dependent on",
    "start": "301520",
    "end": "307039"
  },
  {
    "text": "one another it's conceivable that if you had a region in you know brazil for example and that region had",
    "start": "307039",
    "end": "313440"
  },
  {
    "text": "some issue it could cascade through your whole environment and take everybody offline you know not what you want to do not",
    "start": "313440",
    "end": "319919"
  },
  {
    "text": "leveraging aws to its fullest so let's look at some alternatives the first step is to take the old school",
    "start": "319919",
    "end": "326800"
  },
  {
    "start": "323000",
    "end": "599000"
  },
  {
    "text": "concept of a game server you know the quake two days like if you if you remember the old you know doom",
    "start": "326800",
    "end": "332000"
  },
  {
    "text": "server like where was the game server and you would connect and you get everything from that game server and do all your game play and then disconnect",
    "start": "332000",
    "end": "337600"
  },
  {
    "text": "so we're going to take that and just kind of throw that on the ground break it into a million pieces and as as we're picking it up we're",
    "start": "337600",
    "end": "343680"
  },
  {
    "text": "going to sort it out based on what our low latency pieces are and which pieces can deal",
    "start": "343680",
    "end": "349199"
  },
  {
    "text": "with a bit higher latency and when you do this you come to a couple you know reasonable",
    "start": "349199",
    "end": "354240"
  },
  {
    "text": "conclusions probably some of you have already been through this thought exercise as well but first one low latency game servers need to be next",
    "start": "354240",
    "end": "361120"
  },
  {
    "text": "to players you need that low 20 50 millisecond ping in order to give people that real-time experience",
    "start": "361120",
    "end": "366880"
  },
  {
    "text": "but there's a whole lot of other stuff like off and login friends lists you know",
    "start": "366880",
    "end": "374000"
  },
  {
    "text": "leaderboards all those kinds of operations we're going to build those as a set of http apis",
    "start": "374000",
    "end": "380639"
  },
  {
    "text": "and what that's going to let us do is then deploy these different apis around the world in different places where they make the",
    "start": "380639",
    "end": "387039"
  },
  {
    "text": "most sense so we're not just going to build one giant api stack we're actually going to peel it apart",
    "start": "387039",
    "end": "392080"
  },
  {
    "text": "and deploy these different api stacks around the world which we'll talk about one note those of you who have been",
    "start": "392080",
    "end": "397440"
  },
  {
    "text": "doing game server programming for a while might look at http and say no you know we're more advanced we know that we're",
    "start": "397440",
    "end": "402880"
  },
  {
    "text": "going to need tcp sockets for certain kinds of things we want a two-way bi-directional socket we understand the trade-off so",
    "start": "402880",
    "end": "409360"
  },
  {
    "text": "we're not going to get to take advantage of things like auto scaling and that's fine if you understand those trade-offs go for it",
    "start": "409360",
    "end": "415680"
  },
  {
    "text": "again the point of this is to just outline the thought process so when you're deciding where you're",
    "start": "415680",
    "end": "420880"
  },
  {
    "text": "going to deploy services where and how to connect them all together you're able to leverage the most out of",
    "start": "420880",
    "end": "426000"
  },
  {
    "text": "what aws provides and then get the best experience for your players",
    "start": "426000",
    "end": "431199"
  },
  {
    "text": "it's obviously what we want and another key point i've got three",
    "start": "431199",
    "end": "436960"
  },
  {
    "text": "more here so any kind of data replication is bad okay right like we don't want to just build this big mesh i already talked about",
    "start": "436960",
    "end": "443360"
  },
  {
    "text": "that it's going to slow everything down add fragility but local caches are good instead so if",
    "start": "443360",
    "end": "449759"
  },
  {
    "text": "you have a player's data and say player data say i log in and my account's usually in",
    "start": "449759",
    "end": "454960"
  },
  {
    "text": "north america but i want to play against somebody in brazil it's fine to pull over a copy of",
    "start": "454960",
    "end": "460000"
  },
  {
    "text": "the player data that you need while i'm running you know on that game server in brazil cache it locally in",
    "start": "460000",
    "end": "465199"
  },
  {
    "text": "fact that's a very good pattern to do and then when you're done with that sync that back to a user's home region",
    "start": "465199",
    "end": "470639"
  },
  {
    "text": "and that brings me to my last point which is nobody really plays everywhere like anytime i hear this i'm",
    "start": "470639",
    "end": "476800"
  },
  {
    "text": "always you know a little alarm bulk goes off but maybe the feature is a little half baked let me tell you what i mean so say i'm",
    "start": "476800",
    "end": "483599"
  },
  {
    "text": "sitting around some tuesday afternoon i got time between meetings i would never do this by the way but i want to",
    "start": "483599",
    "end": "489360"
  },
  {
    "text": "play a few you know you know browns maybe nice versus samurai similar game hack some people to death",
    "start": "489360",
    "end": "494800"
  },
  {
    "text": "uh and then before my next meeting and so in this hypothetical situation do i really want to go online and say",
    "start": "494800",
    "end": "501199"
  },
  {
    "text": "hey find me a 4v4 deathmatch and uh go and i say hey you're lucky we've got a server for you",
    "start": "501199",
    "end": "507680"
  },
  {
    "text": "right here down in brazil enjoy like no i don't want that like the",
    "start": "507680",
    "end": "513599"
  },
  {
    "text": "latency is going to suck and more important i don't even know how to swear in portuguese so",
    "start": "513599",
    "end": "518959"
  },
  {
    "text": "how am i gonna understand what the guy is saying to me is he's laughing at my dead and decrepit body by the way i said i",
    "start": "518959",
    "end": "525600"
  },
  {
    "text": "love playing these games doesn't mean i'm any good at them i've lost my thatch twist uh responses long ago but",
    "start": "525600",
    "end": "532000"
  },
  {
    "text": "so when you talk about okay we want people to have this global experience really what you're talking about is you want the ability for people to make that",
    "start": "532000",
    "end": "539040"
  },
  {
    "text": "choice in specific situations to join other regions that's very different",
    "start": "539040",
    "end": "544640"
  },
  {
    "text": "than just magically having your data available everywhere and just randomly connecting to a region",
    "start": "544640",
    "end": "549680"
  },
  {
    "text": "it actually opens up a lot of possibilities for you as server architects to design your stack in a way and we'll",
    "start": "549680",
    "end": "556320"
  },
  {
    "text": "talk about this so that when people actually connect and they say okay i want to play against my",
    "start": "556320",
    "end": "561440"
  },
  {
    "text": "friend in tokyo you can have a person then transition between the different services you're building",
    "start": "561440",
    "end": "566720"
  },
  {
    "text": "have that game and then still keep the majority of a player's data in their home region because the",
    "start": "566720",
    "end": "572959"
  },
  {
    "text": "vast vast majority of the time people are playing in their home region i'm playing in north america that's where all my",
    "start": "572959",
    "end": "578720"
  },
  {
    "text": "friends live they're in the same time zone we all speak the same language occasionally i see them in the real world still exists for now so that's where i'm",
    "start": "578720",
    "end": "586640"
  },
  {
    "text": "spending most of my time but maybe i'm up late or up early and i want to play with somebody across the ocean maybe a friend in japan",
    "start": "586640",
    "end": "593120"
  },
  {
    "text": "that's a rare situation so we want to support that but we don't need to replicate all of our data to make that happen",
    "start": "593120",
    "end": "598720"
  },
  {
    "text": "so if we follow this kind of to its logical conclusion what we wind up with is these loosely coupled pods",
    "start": "598720",
    "end": "605040"
  },
  {
    "text": "that we can then deploy all over the world and these are this is a simplified diagram but the idea behind this is that",
    "start": "605040",
    "end": "611440"
  },
  {
    "text": "you would have a set of api web api stacks or you know maybe something tcp if your game",
    "start": "611440",
    "end": "616640"
  },
  {
    "text": "needs that bi-directional communication but you've got these pieces of your api stack that are doing things like",
    "start": "616640",
    "end": "622640"
  },
  {
    "text": "auth and login you know just leaderboards matchmaking that would be the stack that's in virginia in this",
    "start": "622640",
    "end": "629040"
  },
  {
    "text": "diagram and then for game servers you can deploy these around the world you can frankfurt oregon tokyo etc as we talked",
    "start": "629040",
    "end": "635760"
  },
  {
    "text": "about and and this gives you a good separation of your different concerns because",
    "start": "635760",
    "end": "640880"
  },
  {
    "text": "again you can have people contact your api stack figure out then where they want to play and you're still able to home your data",
    "start": "640880",
    "end": "646560"
  },
  {
    "text": "to a person's home region and last thing i just you know as a mental thing i try to think of these as",
    "start": "646560",
    "end": "652640"
  },
  {
    "text": "these kind of like little escape pods like spaceship escape paws if you think about star wars you know the real first one",
    "start": "652640",
    "end": "658399"
  },
  {
    "text": "where c-3po and r2 blast off you know they're kind of all independent and they're you know they're getting away from the empire and you can have",
    "start": "658399",
    "end": "664399"
  },
  {
    "text": "these space paws that can certainly communicate which will show but they're not dependent on one another",
    "start": "664399",
    "end": "670399"
  },
  {
    "text": "again if something in brazil explodes the other ones just they just kind of keep going",
    "start": "670399",
    "end": "676399"
  },
  {
    "start": "676000",
    "end": "837000"
  },
  {
    "text": "so martin gave a great talk yesterday about the web api stack and it's a common pattern too",
    "start": "676959",
    "end": "682000"
  },
  {
    "text": "so it won't dwell a lot on it but just to illustrate the point this is what our",
    "start": "682000",
    "end": "687200"
  },
  {
    "text": "these api services that we're going to build are using this is kind of bread and butter aws we're using multiple availability zones we're going",
    "start": "687200",
    "end": "694160"
  },
  {
    "text": "to have an auto scaling group for our web tier that's going to live behind an elb we're going to have a caching tier",
    "start": "694160",
    "end": "700480"
  },
  {
    "text": "elastic supports both redis and memcache redis is very popular for game companies because it lets you",
    "start": "700480",
    "end": "706000"
  },
  {
    "text": "do in-memory sorting and a lot of other more interesting operations than just key values",
    "start": "706000",
    "end": "711200"
  },
  {
    "text": "and then finally dynamo won't spend a lot of time but i do just want to mention i've had a lot of cases where game",
    "start": "711200",
    "end": "717279"
  },
  {
    "text": "companies start out with a relational database really push it past this limit and move",
    "start": "717279",
    "end": "722320"
  },
  {
    "text": "over to dynamos dynamo is very well suited for games so i highlighted here in this presentation especially it can keep up",
    "start": "722320",
    "end": "728560"
  },
  {
    "text": "with the right throughput you know common web apps are typically ten to one reads to writes",
    "start": "728560",
    "end": "733920"
  },
  {
    "text": "games are commonly three to five x rights to reads which means you're doing three or five times as many writes",
    "start": "733920",
    "end": "739440"
  },
  {
    "text": "versus reads which is a little bit insane when you think about it but relational databases just really aren't built to withstand that so",
    "start": "739440",
    "end": "745839"
  },
  {
    "text": "you know ea gave a great example earlier where they moved from my sequel to dynamodb saved a ton of money and also",
    "start": "745839",
    "end": "751200"
  },
  {
    "text": "got much better performance so please do take a look at it and then last details on this stack",
    "start": "751200",
    "end": "757920"
  },
  {
    "text": "would be users coming in making http requests any kind of content static content is going",
    "start": "757920",
    "end": "763440"
  },
  {
    "text": "to go through s3 cloud front pretty straightforward and then finally anything that can",
    "start": "763440",
    "end": "769360"
  },
  {
    "text": "be processed just you know maybe a second or so later put that in a queue have a set of background workers take",
    "start": "769360",
    "end": "774560"
  },
  {
    "text": "care of that for example i upload a new custom avatar want to resize it stick that into cue like sqs have a",
    "start": "774560",
    "end": "781839"
  },
  {
    "text": "background worker pick that up resize it stick that in dynamo or s3 or wherever that's gonna go",
    "start": "781839",
    "end": "787120"
  },
  {
    "text": "maybe beating somebody on a leaderboard wanting to set out an alert anything like that anything where you can decouple and put it in a queue if it",
    "start": "787120",
    "end": "792959"
  },
  {
    "text": "doesn't have to happen right right right right now put it in the queue deal with it you know second or two later",
    "start": "792959",
    "end": "799040"
  },
  {
    "text": "still gonna have a very lively feeling system and if you do that then when we start talking about okay what are ways that",
    "start": "799040",
    "end": "805120"
  },
  {
    "text": "these different pods can communicate where you can use these cues then to shuttle information",
    "start": "805120",
    "end": "811360"
  },
  {
    "text": "between these different pods and it's much better than having a tightly coupled database link between",
    "start": "811360",
    "end": "817920"
  },
  {
    "text": "all of your different you know escape pods all around the world because you're just gonna forget which data pieces depending on which you",
    "start": "817920",
    "end": "825680"
  },
  {
    "text": "know it happens time and time again easy mistakes but if you put it in queues then you can see which data is flowing",
    "start": "825680",
    "end": "831519"
  },
  {
    "text": "and it makes it much easier to not only keep them decoupled but also to understand how your application data flow",
    "start": "831519",
    "end": "836639"
  },
  {
    "text": "is working so let's walk through an example of this in action i want to play knights versus samurai i",
    "start": "836639",
    "end": "842720"
  },
  {
    "start": "837000",
    "end": "1029000"
  },
  {
    "text": "log in it's going to go to my api stack i'm going to download any updates maybe there's you know new items new weapons",
    "start": "842720",
    "end": "849519"
  },
  {
    "text": "etc and then i'm going to do matchmaking and say hey i want to play this kind of game i want to play two versus two first team",
    "start": "849519",
    "end": "856480"
  },
  {
    "text": "to ten kills wins and says hey you're in luck there's a game server right over here for you",
    "start": "856480",
    "end": "861680"
  },
  {
    "text": "and at that point then my game client is going to make a direct connection to the game server could be combination of tcp udp",
    "start": "861680",
    "end": "868320"
  },
  {
    "text": "typically udp for game traffic because you're no doubt aware because it gives you lowest latency and if you lose a few",
    "start": "868320",
    "end": "873680"
  },
  {
    "text": "packets here and there with udp it's not a big deal because you're just sending out this constant stream of updates",
    "start": "873680",
    "end": "879519"
  },
  {
    "text": "so gameplay is you know continuing and i'm you know hacking my friend to death i'm running around",
    "start": "879519",
    "end": "885680"
  },
  {
    "text": "you know and essentially a friend jumps in the game still doing my",
    "start": "885680",
    "end": "891199"
  },
  {
    "text": "real-time game play and as events are happening then i can still communicate with that main stack and for example",
    "start": "891199",
    "end": "898720"
  },
  {
    "text": "when game over report back my state at the end so as i said this",
    "start": "898720",
    "end": "904320"
  },
  {
    "text": "gives the gives you the best decoupling of different uh concerns in your stack this",
    "start": "904320",
    "end": "910160"
  },
  {
    "text": "example also gives a little bit of a simplified version where it implies that okay you start a game and then you move",
    "start": "910160",
    "end": "915199"
  },
  {
    "text": "over to your game server and you move back but there's no reason why you wouldn't have in real life both of those channels",
    "start": "915199",
    "end": "921920"
  },
  {
    "text": "operating at the same time so let me give you an example for this i've created a visual aid okay so you first log in you say okay",
    "start": "921920",
    "end": "928639"
  },
  {
    "text": "hey i'm logging in i'd like to play this type of game i'm making my api requests",
    "start": "928639",
    "end": "933920"
  },
  {
    "text": "give me uh you know let me do matchmaking says hey you're in luck here's a server over here so i say okay so i start running around",
    "start": "933920",
    "end": "939519"
  },
  {
    "text": "and i'm attacking my friends i'm hacking them to death i slice okay save that as an apa oh",
    "start": "939519",
    "end": "944800"
  },
  {
    "text": "picked up 300 gold save that up hey katana cool save that oh i died okay i'm back in the game",
    "start": "944800",
    "end": "952079"
  },
  {
    "text": "okay game's over send my final stats and you're back out at the front and you say okay that was fun i want to",
    "start": "952079",
    "end": "957759"
  },
  {
    "text": "play this kind of game again via api requests now i want to play over in brazil",
    "start": "957759",
    "end": "963600"
  },
  {
    "text": "it hands me off and then the server cluster down in brazil i start my running around and the cycle",
    "start": "963600",
    "end": "968720"
  },
  {
    "text": "completes so i'm going to stop there and we're going to classify that as game developer exercise for the day",
    "start": "968720",
    "end": "975120"
  },
  {
    "text": "so you can have these two channels and the thing that i you know want to emphasize is that this h",
    "start": "975120",
    "end": "981680"
  },
  {
    "text": "you know this http channel doesn't just have to be to one place the benefit of these service pods the",
    "start": "981680",
    "end": "987839"
  },
  {
    "text": "service oriented architecture when you pursue it and you say okay we're going to break these services apart we're going to have",
    "start": "987839",
    "end": "994240"
  },
  {
    "text": "an auth service we're going to have a leaderboard service we're going to have a matchmaking service aziz can live wherever now you can you",
    "start": "994240",
    "end": "1002160"
  },
  {
    "text": "can make a request to your auth service and that could be maybe a central auth service which is common a lot of times",
    "start": "1002160",
    "end": "1007600"
  },
  {
    "text": "especially bigger game studios you have some kind of central authentication mechanism but then you can make an http request",
    "start": "1007600",
    "end": "1014240"
  },
  {
    "text": "that's just as easy to make over to a local matchmaking service in say north america or say down in",
    "start": "1014240",
    "end": "1020399"
  },
  {
    "text": "brazil so it gives you a lot of flexibility there by breaking these services apart to be able to locate them where they",
    "start": "1020399",
    "end": "1027280"
  },
  {
    "text": "make the most sense let's get into a little bit more detail than we talked about what the game api",
    "start": "1027280",
    "end": "1033839"
  },
  {
    "start": "1029000",
    "end": "1259000"
  },
  {
    "text": "looks like let's dig into what the actual game servers look like again best practices multiple",
    "start": "1033839",
    "end": "1038880"
  },
  {
    "text": "availability zones for fault tolerance we're going to create vpc public subnets",
    "start": "1038880",
    "end": "1044400"
  },
  {
    "text": "again no load balancer here we're going to directly connect to the public ips and then we're going to spin up these groups of instances",
    "start": "1044400",
    "end": "1051200"
  },
  {
    "text": "and this is how our actual gameplay is going to happen the the game client is kind of come in and directly",
    "start": "1051200",
    "end": "1056559"
  },
  {
    "text": "uh contact our public ips and that's where all the gameplay is going to happen have a private subnet for our data",
    "start": "1056559",
    "end": "1063200"
  },
  {
    "text": "pieces which could include a local cache again for performance you can pull over the data you need while you're doing",
    "start": "1063200",
    "end": "1068720"
  },
  {
    "text": "your game play and then last kind of critical component",
    "start": "1068720",
    "end": "1074480"
  },
  {
    "text": "here is usually you're going to want some way for these game servers to communicate with one another",
    "start": "1074480",
    "end": "1080000"
  },
  {
    "text": "let me give you an example let's say you're you're creating uh you know a world like maybe an mmo world",
    "start": "1080000",
    "end": "1085360"
  },
  {
    "text": "and it's bigger than fits on one given game server or otherwise you want to create this experience where people can kind of move",
    "start": "1085360",
    "end": "1091360"
  },
  {
    "text": "throughout the world and you need to send updates across your player population maybe a given server only handles maybe 32 people or",
    "start": "1091360",
    "end": "1099039"
  },
  {
    "text": "50 people just depending on your architecture of your game server and you want to send updates across all",
    "start": "1099039",
    "end": "1106000"
  },
  {
    "text": "of your players so you need some way to route messages between these servers in a data center a lot of times the",
    "start": "1106000",
    "end": "1112799"
  },
  {
    "text": "historical methodology here was to put them all on a private switch and use multicast it doesn't really work in a cloud",
    "start": "1112799",
    "end": "1118799"
  },
  {
    "text": "environment but luckily there are newer solutions that are just as good if not better because they give you a lot of",
    "start": "1118799",
    "end": "1123840"
  },
  {
    "text": "extra features so the de facto standard with gaming these days is using rabbitmq for this",
    "start": "1123840",
    "end": "1129440"
  },
  {
    "text": "so rabbitmq has a an active active mode a straightforward to set up it runs on top of ec2 very very easily",
    "start": "1129440",
    "end": "1136880"
  },
  {
    "text": "and then you can actually put elb running in tcp mode in front of this and i actually owe this",
    "start": "1136880",
    "end": "1142240"
  },
  {
    "text": "tip to a game developer who we've worked with because previously we were actually recommending people to",
    "start": "1142240",
    "end": "1148160"
  },
  {
    "text": "use elastic ips but after some testing turns out that uh elb and tcp mode works really well when",
    "start": "1148160",
    "end": "1154080"
  },
  {
    "text": "you set it up this way then your game servers can just connect to the elb elb is going to load balance them",
    "start": "1154080",
    "end": "1159280"
  },
  {
    "text": "somewhere in that rabbitmq cluster and then any kind of kind of broadcast messages maybe you want to",
    "start": "1159280",
    "end": "1165600"
  },
  {
    "text": "send chat to a common channel or maybe you want to send a game invite across or maybe you want to send an announcement",
    "start": "1165600",
    "end": "1170799"
  },
  {
    "text": "any of that kind of traffic can go straight across that rabbitmq cluster and rabbitmq is a great fit for this",
    "start": "1170799",
    "end": "1176480"
  },
  {
    "text": "because it's very low latency you know a couple milliseconds latency again easy to set up and it kind of just",
    "start": "1176480",
    "end": "1182240"
  },
  {
    "text": "works one caveat i'll mention and then i'm going to go into a few more details on rabbitmq",
    "start": "1182240",
    "end": "1187840"
  },
  {
    "text": "one cavity i will mention is that actually making you know a do-it-yourself cluster",
    "start": "1187840",
    "end": "1193280"
  },
  {
    "text": "clustered you know cube like rabbit mq durable takes a good amount of work",
    "start": "1193280",
    "end": "1198960"
  },
  {
    "text": "so while this setup is really good for transient messages that maybe if you lose a few now and then because a node crashes",
    "start": "1198960",
    "end": "1206000"
  },
  {
    "text": "not a big deal like if you lose some chat like nobody really cares like that happens all the time right i am",
    "start": "1206000",
    "end": "1211120"
  },
  {
    "text": "drops messages all the time like hey dude are you there oh yeah whatever so that is fine but you really don't",
    "start": "1211120",
    "end": "1216799"
  },
  {
    "text": "want to set up your own cue to necessarily transport crucial transactional like purchase information",
    "start": "1216799",
    "end": "1223200"
  },
  {
    "text": "unless you're going to invest time in using our services like ebs really investigate durability backup",
    "start": "1223200",
    "end": "1229440"
  },
  {
    "text": "snapshotting etc i'm not covering that i'm covering more the simple use case where you can just use to transport that",
    "start": "1229440",
    "end": "1235360"
  },
  {
    "text": "low latency data between your game servers and again your game players are coming",
    "start": "1235360",
    "end": "1241120"
  },
  {
    "text": "in playing on a server this is all part of that experience and then as i mentioned anything that you want to either process",
    "start": "1241120",
    "end": "1248320"
  },
  {
    "text": "in the background or possibly transport to another pod you can use a cue either rabbitmq or that's you know a",
    "start": "1248320",
    "end": "1253760"
  },
  {
    "text": "generic q icon you could also use sqs in order to transport that between your different pods",
    "start": "1253760",
    "end": "1260240"
  },
  {
    "start": "1259000",
    "end": "1588000"
  },
  {
    "text": "i just put this in you can read this later but make sure to uh enable enhanced networking and for",
    "start": "1260240",
    "end": "1265840"
  },
  {
    "text": "any kind of game server makes a huge night and day difference these slides will be made available and those are just some links to help you",
    "start": "1265840",
    "end": "1271200"
  },
  {
    "text": "out so back to rabbitmq what does it actually look like so we spin up two nodes",
    "start": "1271200",
    "end": "1276799"
  },
  {
    "text": "as mentioned we connect a tcp mode elastic load balancer in front of them",
    "start": "1276799",
    "end": "1282400"
  },
  {
    "text": "open up a few security ports so that it can do replication and then there's a couple little funny things about rabbitmq you actually need",
    "start": "1282400",
    "end": "1288880"
  },
  {
    "text": "to assign local host names because that's how it actually sets up the databases",
    "start": "1288880",
    "end": "1294400"
  },
  {
    "text": "so if you just use whatever random private ip address that ec2 assigns you and you stop the",
    "start": "1294400",
    "end": "1300320"
  },
  {
    "text": "node and you start it up again you get a nice freshly wiped no cue available",
    "start": "1300320",
    "end": "1305440"
  },
  {
    "text": "totally i've never been part of any cluster before rabbitmqno which is probably not so much what you want",
    "start": "1305440",
    "end": "1312960"
  },
  {
    "text": "but if you follow the steps here again this is stuff you can read later these slides will be available rab mq docs actually have a really good",
    "start": "1313120",
    "end": "1319440"
  },
  {
    "text": "walkthrough on this and then i put just some additional notes in terms of which ports to actually open up if you follow these steps what you wind",
    "start": "1319440",
    "end": "1326640"
  },
  {
    "text": "up with is a configuration file looks something like this it's got your two nodes in it and your port you're listening on",
    "start": "1326640",
    "end": "1333840"
  },
  {
    "text": "so i'm going to mention one alternative and then we'll come back to this and i'm going to talk a little bit about automation",
    "start": "1335760",
    "end": "1342720"
  },
  {
    "text": "one alternative to grab an mq just worth mentioning is if you're using elasticache and you're using elasticash with redis",
    "start": "1342720",
    "end": "1349840"
  },
  {
    "text": "redis has a pub sub mode too which works great for this purpose you might be able to simplify your architecture by just using that",
    "start": "1349840",
    "end": "1356159"
  },
  {
    "text": "and using the redis pub sub capabilities similar failure modes to rabbitmq you have you know if the",
    "start": "1356159",
    "end": "1362320"
  },
  {
    "text": "node fails over elastic cache for redis has auto failover if a node fails over it's possible to lose a few messages",
    "start": "1362320",
    "end": "1368559"
  },
  {
    "text": "again for non-critical data not really a big deal but just keep it in mind so back to rabbitmq all that kind of",
    "start": "1368559",
    "end": "1376400"
  },
  {
    "text": "configuration is fine if we want to do it manually but really nobody wants to do that manually it's fine if you're setting it up for",
    "start": "1376400",
    "end": "1382480"
  },
  {
    "text": "dev but if we're talking about really pursuing this and having hey all of these different pods all around the",
    "start": "1382480",
    "end": "1388799"
  },
  {
    "text": "world we're talking about hey we're going to have 10 or 20 of these and then we're going to have all our micro service stacks",
    "start": "1388799",
    "end": "1394000"
  },
  {
    "text": "that's a lot of stuff to do by hand we don't want to do that so the winning kind of combination here",
    "start": "1394000",
    "end": "1399280"
  },
  {
    "text": "that's very popular with game companies and non-game companies alike is using cloud formation and chef cloud formation is",
    "start": "1399280",
    "end": "1404960"
  },
  {
    "text": "great for automating the aws pieces of it setting up your vpc subnets setting up all your security",
    "start": "1404960",
    "end": "1410080"
  },
  {
    "text": "groups and so forth and then chef comes in at the part where you're saying okay well once these nodes",
    "start": "1410080",
    "end": "1416080"
  },
  {
    "text": "come up i need to actually join them together assign them host names make them aware",
    "start": "1416080",
    "end": "1421440"
  },
  {
    "text": "of each other all of that stuff that happens at that application level that's where chef is really a perfect",
    "start": "1421440",
    "end": "1428000"
  },
  {
    "text": "fit okay so with that i'm going to switch over to the live demo see if this works",
    "start": "1428000",
    "end": "1433039"
  },
  {
    "text": "now what i'm going to show you guys is actually something i'm pretty uh excited about this is something we've been",
    "start": "1433039",
    "end": "1438400"
  },
  {
    "text": "working on in a conjunction with epic games so i mentioned uh you know using chef for",
    "start": "1438400",
    "end": "1444880"
  },
  {
    "text": "rabbitmq with another thing when you talk about spinning up these game servers is how do you actually automate a game server",
    "start": "1444880",
    "end": "1450799"
  },
  {
    "text": "so what i have here is a series of uh cloud formation and chef recipes that together will actually launch an",
    "start": "1450799",
    "end": "1457120"
  },
  {
    "text": "unreal engine server and actually just a few clicks and this is something that nick downs another member of my team put together",
    "start": "1457120",
    "end": "1462960"
  },
  {
    "text": "did a heck of a lot of heavy lifting here if you look down here you see the json these are our actual",
    "start": "1462960",
    "end": "1469039"
  },
  {
    "text": "template files that go into cloud formation here's a tgz of our chef recipes our chef cookbooks",
    "start": "1469039",
    "end": "1477279"
  },
  {
    "text": "and then finally there's your actual unreal engine server all right so with all that in mind then",
    "start": "1477279",
    "end": "1484720"
  },
  {
    "text": "all i need to do is run a simple aws cloudformation command and",
    "start": "1484720",
    "end": "1489919"
  },
  {
    "text": "then it returns me back a stack id now like any good sleight of hand artist what i'm going to do is i'm going to",
    "start": "1489919",
    "end": "1495600"
  },
  {
    "text": "switch over i can use this then to monitor the the status of it i'm going to switch over",
    "start": "1495600",
    "end": "1501039"
  },
  {
    "text": "then to look at one that i've already created previously because it takes a few minutes to boot up so this is in the cloudformation console",
    "start": "1501039",
    "end": "1508720"
  },
  {
    "text": "and if i look through here i can actually see that okay the cloud formation stack completed and when it gives me the",
    "start": "1508720",
    "end": "1515120"
  },
  {
    "text": "outputs then i can actually get the ip this is the server ip then running my unreal engine",
    "start": "1515120",
    "end": "1520720"
  },
  {
    "text": "server",
    "start": "1520720",
    "end": "1523039"
  },
  {
    "text": "oops now i can connect to it theoretically if the wi-fi works",
    "start": "1526840",
    "end": "1533919"
  },
  {
    "text": "all right and a little bit of linuxc goodness and now i can see that unreal engine is running in the",
    "start": "1537520",
    "end": "1543360"
  },
  {
    "text": "background here so if you can see that in the back you can see it's just a process running",
    "start": "1543360",
    "end": "1550559"
  },
  {
    "text": "so we're going to open sources which is actually pretty exciting from my perspective we've been trying to do this for a while now and we finally",
    "start": "1550559",
    "end": "1557120"
  },
  {
    "text": "are able to do it so keep an eye on this we're going to be releasing this open source and then you'll be able to download this template and then modify",
    "start": "1557120",
    "end": "1563679"
  },
  {
    "text": "it change it maybe if you need to change the number of servers or where they're spinning up etc but at least get you started and get you",
    "start": "1563679",
    "end": "1570159"
  },
  {
    "text": "up and running quickly okay it's a few more notes and i'm going to hand it over to uh",
    "start": "1570159",
    "end": "1575520"
  },
  {
    "text": "james this is just a recap this is the command i ran this is what we saw we went into the",
    "start": "1575520",
    "end": "1581440"
  },
  {
    "text": "console we got the ip address and then we were able to connect to it and actually see unreal engine uh up and",
    "start": "1581440",
    "end": "1587120"
  },
  {
    "text": "running okay last thing i'm going to talk about is server registration so where my",
    "start": "1587120",
    "end": "1592960"
  },
  {
    "start": "1588000",
    "end": "1744000"
  },
  {
    "text": "servers at sorry i couldn't resist cheap cheap joke so so far we've talked about these paws and",
    "start": "1592960",
    "end": "1598640"
  },
  {
    "text": "they're all independent they're running around which is cool but they're all decoupled but they're actually kind of non-coupled right",
    "start": "1598640",
    "end": "1604799"
  },
  {
    "text": "like right now they actually don't know about each other whatsoever so if i've got this nice little matchmaking",
    "start": "1604799",
    "end": "1611039"
  },
  {
    "text": "service that's running here and i want to connect to it how is it going to know even where the servers are located how is it even going",
    "start": "1611039",
    "end": "1616720"
  },
  {
    "text": "to know that these pods exist and this brings about the concept of server registration so we're going to",
    "start": "1616720",
    "end": "1621840"
  },
  {
    "text": "have this matchmaking service and as our servers spin up then using for example this",
    "start": "1621840",
    "end": "1626880"
  },
  {
    "text": "the cloud formation and chef template just showed you they're going to send a request using the same api we just built",
    "start": "1626880",
    "end": "1633919"
  },
  {
    "text": "uh https obviously you'll want to secure it with some kind of unique key glad to discuss that as a",
    "start": "1633919",
    "end": "1640320"
  },
  {
    "text": "sidebar later but that's pretty straightforward and then as your different servers spin up they're going to basically register",
    "start": "1640320",
    "end": "1646480"
  },
  {
    "text": "and they're going to be sending a heartbeat they're going to say okay i'm up here's my public ip here's a number of people on my server",
    "start": "1646480",
    "end": "1653279"
  },
  {
    "text": "you know i can accept four more people and they're just going to be sending that every you know 30 seconds or whatever makes sense for your game",
    "start": "1653279",
    "end": "1660159"
  },
  {
    "text": "and then that's going into a dynamodb table that has your server list so through the same service then your",
    "start": "1660159",
    "end": "1667039"
  },
  {
    "text": "game players can actually come in and say okay i want to join a server and it says hey you're in luck here's the list i know there's spots",
    "start": "1667039",
    "end": "1673120"
  },
  {
    "text": "playing this game mode on this server right now returns back the public ip and then the game client can actually transition and",
    "start": "1673120",
    "end": "1679520"
  },
  {
    "text": "connect to that public ip and do that whole sequence we talked about earlier",
    "start": "1679520",
    "end": "1685039"
  },
  {
    "text": "and the second part of it the last part of it is you have this background job running that's watching that table",
    "start": "1685039",
    "end": "1690320"
  },
  {
    "text": "and just looking to see if any of the servers have gone unhealthy so if it's just running on a timer doing a",
    "start": "1690320",
    "end": "1695360"
  },
  {
    "text": "little cleanup look loop and say oh you know i haven't heard from this server in three minutes or five minutes whatever",
    "start": "1695360",
    "end": "1700880"
  },
  {
    "text": "makes sense again for your game maybe it's time to at least put it in kind of an unhealthy state",
    "start": "1700880",
    "end": "1706399"
  },
  {
    "text": "similar to what elb would do but again game servers they need a little bit of custom logic here because",
    "start": "1706399",
    "end": "1711679"
  },
  {
    "text": "game servers aren't just all interchangeable you can't just randomly kill one at whim you know everybody will get kicked off they'll get all pissed",
    "start": "1711679",
    "end": "1717679"
  },
  {
    "text": "off they'll start flaming you on the forums you'll learn all the new insults of the week but kind of trying to avoid that",
    "start": "1717679",
    "end": "1723440"
  },
  {
    "text": "right okay so you've got this clean up loop and then the last part is you say okay we're running low on capacity",
    "start": "1723440",
    "end": "1729279"
  },
  {
    "text": "turns out we actually need some extra game servers let's make an api request out and say okay spin these up",
    "start": "1729279",
    "end": "1734320"
  },
  {
    "text": "use that template spin another one up spin it in this region it comes up it registers and that cycle continues",
    "start": "1734320",
    "end": "1742799"
  },
  {
    "start": "1744000",
    "end": "1775000"
  },
  {
    "text": "a few odds and ends just an example what you could do http post highly recommend you include an hmac",
    "start": "1744720",
    "end": "1750559"
  },
  {
    "text": "very straightforward it's like a double shot one or shot two of the actual payload along with a",
    "start": "1750559",
    "end": "1757120"
  },
  {
    "text": "custom salt and it's straightforward stuff and glad to discuss that in details if you want and then sending that server status as i",
    "start": "1757120",
    "end": "1764080"
  },
  {
    "text": "mentioned then you have that background job this monitoring it and the two last details before i hand it over to james who's going to give a",
    "start": "1764080",
    "end": "1770320"
  },
  {
    "text": "real world example of following these kinds of patterns with loadout",
    "start": "1770320",
    "end": "1775519"
  },
  {
    "text": "understanding how your game servers are running pretty important like are they performing well or not two ways to get game server logs off one",
    "start": "1776159",
    "end": "1782559"
  },
  {
    "text": "of them is cloud wash logs bone simple to get started just configure it you can install the agent on all your different instances and push",
    "start": "1782559",
    "end": "1788960"
  },
  {
    "text": "those logs to your s3 bucket and then the other pattern that's emerging more and more is people actually using kinesis",
    "start": "1788960",
    "end": "1795760"
  },
  {
    "text": "now between these two patterns i wouldn't say one is clearly better they're just kind of they're good at different things cloud wash logs is",
    "start": "1795760",
    "end": "1802320"
  },
  {
    "text": "great if you just want a way to collect your game server logs if you're going to do like post mortems",
    "start": "1802320",
    "end": "1807679"
  },
  {
    "text": "and you want to do debugging and you just want to stick it in an s3 bucket and then process it in batch later cloud",
    "start": "1807679",
    "end": "1813919"
  },
  {
    "text": "watch logs is great for that super cheap simple to set up but if you say hey you know we want to actually alert in",
    "start": "1813919",
    "end": "1820399"
  },
  {
    "text": "more real time maybe build a dashboard on which players are building which games and how they're doing",
    "start": "1820399",
    "end": "1825520"
  },
  {
    "text": "that's where using something like kinesis can buy you certain advantages and kinesis specifically has a plug-in",
    "start": "1825520",
    "end": "1831440"
  },
  {
    "text": "now for fluent d which can just run like an agent on your actual game server or on any of your servers really there's",
    "start": "1831440",
    "end": "1837279"
  },
  {
    "text": "nothing game server specific about it it can just run there collect whatever metrics you want shuttle those to",
    "start": "1837279",
    "end": "1842960"
  },
  {
    "text": "kinesis and then you can still put them in s3 if you want to just dump a copy for later so however you want to you",
    "start": "1842960",
    "end": "1848480"
  },
  {
    "text": "know comb through it and then you can also do things like send it to redshift or send it to a",
    "start": "1848480",
    "end": "1853600"
  },
  {
    "text": "live dashboard that you built on top of maybe dynamo or ec2 so it just gives you more flexibility",
    "start": "1853600",
    "end": "1860799"
  },
  {
    "start": "1860000",
    "end": "1885000"
  },
  {
    "text": "and final thought to drive this architecture home is you know china obviously has certain",
    "start": "1861279",
    "end": "1867200"
  },
  {
    "text": "specific challenges because of the fact that it's kind of separated from a network perspective and the good news is that if you follow",
    "start": "1867200",
    "end": "1872799"
  },
  {
    "text": "this architecture pattern you say okay we're really going to break things up into services we're going to have people's data by",
    "start": "1872799",
    "end": "1878720"
  },
  {
    "text": "where they predominantly play and we're still going to want to create this this community this global",
    "start": "1878720",
    "end": "1884480"
  },
  {
    "text": "community you can achieve it then you can have these regional pods where people's data lives so that's",
    "start": "1884480",
    "end": "1891440"
  },
  {
    "start": "1885000",
    "end": "1908000"
  },
  {
    "text": "where they play the vast vast majority of the time and if you want to do something like create a global leaderboard and say hey we want",
    "start": "1891440",
    "end": "1897120"
  },
  {
    "text": "you know a leaderboard that shows everybody around the world u.s europe china in one place and you can create a web service that",
    "start": "1897120",
    "end": "1903360"
  },
  {
    "text": "just does that purpose-built and you can deploy that in the region that makes sense so with that i'm going",
    "start": "1903360",
    "end": "1909200"
  },
  {
    "start": "1908000",
    "end": "1934000"
  },
  {
    "text": "to turn it over to james talk about the architecture for uh playfab for loadout",
    "start": "1909200",
    "end": "1914240"
  },
  {
    "text": "well thanks a lot cool and i'd really say sitting through nate's conversation it's really uncanny",
    "start": "1914240",
    "end": "1919440"
  },
  {
    "text": "uh because so much of the architecture i'm about to show you uh follows exactly the same patterns you",
    "start": "1919440",
    "end": "1924640"
  },
  {
    "text": "need to spoke about and yet you know we had not coordinated prior to doing this talk together so",
    "start": "1924640",
    "end": "1929679"
  },
  {
    "text": "you know either obviously what he's saying must be completely correct because we're doing the exact same thing and obviously we're doing",
    "start": "1929679",
    "end": "1934720"
  },
  {
    "start": "1934000",
    "end": "1977000"
  },
  {
    "text": "the right thing so what is playfab so we have built essentially a platform as a service for gaming and so",
    "start": "1934720",
    "end": "1940799"
  },
  {
    "text": "if you wanted to do for example everything nate was just showing but you didn't actually want to build it yourself from scratch playfab is an",
    "start": "1940799",
    "end": "1946880"
  },
  {
    "text": "option you can look into and essentially what we've got is three things we've got tools you can use for actually operating",
    "start": "1946880",
    "end": "1952640"
  },
  {
    "text": "maintaining your game in real time we've got all these cloud-based backend services",
    "start": "1952640",
    "end": "1957679"
  },
  {
    "text": "all accessible via a web-based api and we call that kind of backend services and finally we have an",
    "start": "1957679",
    "end": "1964000"
  },
  {
    "text": "ecosystem of a bunch of third-party services that are sort of already pre-integrated into the system and more to come so for",
    "start": "1964000",
    "end": "1970320"
  },
  {
    "text": "example we've done a deal with photon to integrate the photon multiplayer server in and that'll become tighter and tighter",
    "start": "1970320",
    "end": "1976320"
  },
  {
    "text": "integrated over time what i'm here to talk about today in particular is loadout and loadout is a",
    "start": "1976320",
    "end": "1981679"
  },
  {
    "text": "first-person shooter the free-to-play first-person shooter developed by the austin studio edge of reality uh they built this game",
    "start": "1981679",
    "end": "1988159"
  },
  {
    "text": "uh using playfab and so we essentially have built and are hosting",
    "start": "1988159",
    "end": "1993279"
  },
  {
    "text": "all the backend services for them and we're also hosting uh their game servers around the world so they've",
    "start": "1993279",
    "end": "1998640"
  },
  {
    "text": "built their own game server they built their own game client and then what we're doing is we're doing the work of exactly what nate described",
    "start": "1998640",
    "end": "2004399"
  },
  {
    "text": "having these regions and pods around the world where we can take those game service from them and move them around and i'm going to",
    "start": "2004399",
    "end": "2009760"
  },
  {
    "text": "talk about a bunch of patterns and tips and tricks we followed and if i have time at the end i'll actually show you the tool",
    "start": "2009760",
    "end": "2015039"
  },
  {
    "text": "and show you how easy it is to actually upload a build and choose which region you want to build to go live in and and do it that way",
    "start": "2015039",
    "end": "2020240"
  },
  {
    "start": "2020000",
    "end": "2047000"
  },
  {
    "text": "so some quick stats i mean loadout has been live now since january uh we've we've logged over a billion api",
    "start": "2020240",
    "end": "2025919"
  },
  {
    "text": "calls of our system from it uh at the peak we had about 300 thousand deu uh and and it's peak and launch we had a 120",
    "start": "2025919",
    "end": "2033919"
  },
  {
    "text": "sort of dedicated servers that were releasing from software layer and uh we had 110 ec2 instances spin up",
    "start": "2033919",
    "end": "2039440"
  },
  {
    "text": "automatically to handle overload or overflow uh uh for bursting which is exactly what they're there for",
    "start": "2039440",
    "end": "2045120"
  },
  {
    "text": "and it's great to have that sort of a capacity available in building playfab some tenants we followed",
    "start": "2045120",
    "end": "2050638"
  },
  {
    "start": "2047000",
    "end": "2117000"
  },
  {
    "text": "we never wanted any scheduled downtime so everything we we build was designed to be able to bring up a new instance get all",
    "start": "2050639",
    "end": "2056878"
  },
  {
    "text": "the service pushed over that and take down the old instance so you never had these it's 11 pm and you can't play your game because you know they're upgrading the",
    "start": "2056879",
    "end": "2063280"
  },
  {
    "text": "servers uh automatic scaling using elastic bean stock and then again developers should not need to know what's going on behind",
    "start": "2063280",
    "end": "2069599"
  },
  {
    "text": "the scenes so once you have a clean api you can do whatever you want behind the scenes and a good example is",
    "start": "2069599",
    "end": "2074878"
  },
  {
    "text": "we originally were using simpledb for a lot of our databases over the last couple months we have",
    "start": "2074879",
    "end": "2080079"
  },
  {
    "text": "switched everything over now to dynamodb which is fantastic and none of our customers have noticed anything because they don't need to know",
    "start": "2080079",
    "end": "2085760"
  },
  {
    "text": "anything it's all going through apis and they don't know what's going on behind the scenes and finally this buffering comment when",
    "start": "2085760",
    "end": "2091118"
  },
  {
    "text": "you have a lot of tightly coupled servers you think about it like expansion joints on a bridge if you've got a lot of",
    "start": "2091119",
    "end": "2096638"
  },
  {
    "text": "coupled servers and one of them suddenly has a temporary slowdown or a lag or something if they're too tightly coupled that can",
    "start": "2096639",
    "end": "2102720"
  },
  {
    "text": "ripple through the whole system that's really bad so you want to have wherever you can whatever you have servers talking to each other have some buffering in there so that if",
    "start": "2102720",
    "end": "2108880"
  },
  {
    "text": "this thing suddenly temporarily is down things don't dissolve grindel halt they just kind of queue up and eventually they release when that when that comes",
    "start": "2108880",
    "end": "2115359"
  },
  {
    "text": "through so we'll talk about that in a second so let's look at our architecture so this is the",
    "start": "2115359",
    "end": "2120720"
  },
  {
    "start": "2117000",
    "end": "2168000"
  },
  {
    "text": "so our architecture follows exactly what nate described we have a whole bunch of http based web services",
    "start": "2120720",
    "end": "2126000"
  },
  {
    "text": "and then we also have a whole bunch of game servers around the world so this is basically the the web",
    "start": "2126000",
    "end": "2131119"
  },
  {
    "text": "services stack of our of our system so we have the game client we're using a route 53",
    "start": "2131119",
    "end": "2137280"
  },
  {
    "text": "and what we've done is every game on our platform has its own url and that's really nice because it means",
    "start": "2137280",
    "end": "2142960"
  },
  {
    "text": "that we can have that url mapped to you know one ip address or we can for example if we want to give a game its",
    "start": "2142960",
    "end": "2148320"
  },
  {
    "text": "own completely independent uh a set of hardware we can simply use raw53 to map that to a different set of",
    "start": "2148320",
    "end": "2153920"
  },
  {
    "text": "set of hardware so every game has its own endpoint it goes an elb for load balancing goes to one or more",
    "start": "2153920",
    "end": "2159359"
  },
  {
    "text": "web servers to handle the uh the load these web servers are in different availability zones so we can handle",
    "start": "2159359",
    "end": "2164960"
  },
  {
    "text": "outages and then we're using all the suite of services in the background and then the game the multiplayer game server",
    "start": "2164960",
    "end": "2171359"
  },
  {
    "start": "2168000",
    "end": "2196000"
  },
  {
    "text": "side again simple pattern we have the notion of a matchmaker which knows about all the different uh",
    "start": "2171359",
    "end": "2176720"
  },
  {
    "text": "servers that are out there in the world we have the notion of a game server monitor which is periodically pinging servers to make sure they're all healthy",
    "start": "2176720",
    "end": "2182720"
  },
  {
    "text": "and then we have on the on the top right what you're seeing is ec2 instances being spun up in different regions",
    "start": "2182720",
    "end": "2188320"
  },
  {
    "text": "and in the bottom right we have dedicated hardware that are sort of leased servers releasing from an arca software but it",
    "start": "2188320",
    "end": "2194079"
  },
  {
    "text": "could be other other providers around the world this is an example of the kind of web apis",
    "start": "2194079",
    "end": "2199680"
  },
  {
    "text": "that we have in our system obviously you probably can't read all these my point here is simply that there's a bunch of different kinds of services on",
    "start": "2199680",
    "end": "2206000"
  },
  {
    "text": "there that we have with one client api which is inherently non non-trusted you can't",
    "start": "2206000",
    "end": "2212480"
  },
  {
    "text": "trust your client because people can hack their clients so we don't for example allow our clients to simply say",
    "start": "2212480",
    "end": "2217760"
  },
  {
    "text": "give me a thousand gold pieces or give me the sword of damocles or something because you could easily hack that",
    "start": "2217760",
    "end": "2222960"
  },
  {
    "text": "that message especially when you're using http posting as your primary protocol so the the client apis things like get",
    "start": "2222960",
    "end": "2228800"
  },
  {
    "text": "catalog items make you know do this transaction uh store this property from my user the",
    "start": "2228800",
    "end": "2234400"
  },
  {
    "text": "server side is things like give me a gold give me an item more more declarative things because our server api is trusted and with the",
    "start": "2234400",
    "end": "2240720"
  },
  {
    "text": "client server api is not trusted a typical api looks like this so this is an example of a",
    "start": "2240720",
    "end": "2246160"
  },
  {
    "text": "of a matchmaking request so the client is passing in a session key for authentication",
    "start": "2246160",
    "end": "2251440"
  },
  {
    "text": "and it's basically saying match make me against this build version and this region and this game mode in this lobby",
    "start": "2251440",
    "end": "2258480"
  },
  {
    "text": "and then the server basically responds back saying great you know here's your lobby id here's the ip address to connect to his report",
    "start": "2258480",
    "end": "2264320"
  },
  {
    "text": "number connect to here's your security ticket uh and then the client can take that information and then make its own separate",
    "start": "2264320",
    "end": "2269920"
  },
  {
    "text": "connection request directly to the game server to to begin the game instance and that's example of how you might use",
    "start": "2269920",
    "end": "2275760"
  },
  {
    "text": "the web api to set up the connection and then you go directly to the game server for the actual game play itself",
    "start": "2275760",
    "end": "2281040"
  },
  {
    "text": "now i'm going to show you some some sort of tips and tricks we've accumulated along the way for performance reasons so one of these",
    "start": "2281040",
    "end": "2286800"
  },
  {
    "text": "is the notion of using um the the actual elb itself",
    "start": "2286800",
    "end": "2292079"
  },
  {
    "text": "for logging purposes so we wanted to have a log of every single api request made and by",
    "start": "2292079",
    "end": "2298160"
  },
  {
    "text": "which game and it turns out the most efficient way to do this was to simply have the elb log itself get dumped out and then",
    "start": "2298160",
    "end": "2304880"
  },
  {
    "text": "process that in order to to uh to generate those api logs so what's happening here here again this is",
    "start": "2304880",
    "end": "2309920"
  },
  {
    "text": "an example of a login request and my game client is connecting up to the to route 23 and saying basically uh i want to log in",
    "start": "2309920",
    "end": "2316960"
  },
  {
    "text": "and it's going here against three dot playback.com that means i'm connecting to game number three that's how i know that this api is for",
    "start": "2316960",
    "end": "2322960"
  },
  {
    "text": "that particular game and then what can happen is uh we're now able to um",
    "start": "2322960",
    "end": "2328560"
  },
  {
    "start": "2327000",
    "end": "2428000"
  },
  {
    "text": "grab those logs it dumps an s3 we have a report service that analyzes those logs puts them on the redshift a typical log",
    "start": "2328560",
    "end": "2335599"
  },
  {
    "text": "event looks like what you're seeing there you know the user id the event name and so forth and all of that can then go",
    "start": "2335599",
    "end": "2341040"
  },
  {
    "text": "into amazon redshift for analysis and here's an example of an api usage report that i get dumped out so we can see okay",
    "start": "2341040",
    "end": "2347599"
  },
  {
    "text": "you know the user info request was called 93 million times for example so that's an example of a report we look at",
    "start": "2347599",
    "end": "2353200"
  },
  {
    "text": "a lot to see what's going on under the covers another pattern that we find very useful this notion of when you have a",
    "start": "2353200",
    "end": "2360720"
  },
  {
    "text": "singleton service so so the reason we have a matchmaker we want to have one matchmaker you know service that essentially has in",
    "start": "2360720",
    "end": "2367040"
  },
  {
    "text": "memory all the different game server instances around the world because it's very convenient to have all that in one server",
    "start": "2367040",
    "end": "2372079"
  },
  {
    "text": "this example something you don't want to shard out you want to have one box that sort of knows about all your different servers but obviously you want to make",
    "start": "2372079",
    "end": "2377680"
  },
  {
    "text": "sure it's highly available so what do you do so the answer is you have two instances in different availability zones a primary and",
    "start": "2377680",
    "end": "2383359"
  },
  {
    "text": "secondary in this case what we're doing is we're using um raising invested elastic bean stock uh",
    "start": "2383359",
    "end": "2389599"
  },
  {
    "text": "to basically keep an eye on these two instances and if uh one of them the primer in this case goes down uh",
    "start": "2389599",
    "end": "2396480"
  },
  {
    "text": "then uh i'll just means i can notice a note about that terminate it uh route 53",
    "start": "2396480",
    "end": "2401680"
  },
  {
    "text": "independently is also set up to be doing a kind of health checking when route 53",
    "start": "2401680",
    "end": "2407040"
  },
  {
    "text": "notices that the primary is down it will automatically shift over to the secondary and start using the secondary for all",
    "start": "2407040",
    "end": "2413920"
  },
  {
    "text": "requests meanwhile the uh uh the auto scaling is gonna have noticed that the primary shutdown",
    "start": "2413920",
    "end": "2419520"
  },
  {
    "text": "it will automatically restart the primary and then eventually once it's back up again it will switch back over again so that's an example of a pattern using two",
    "start": "2419520",
    "end": "2425680"
  },
  {
    "text": "different services for high availability on a singleton another thing we do server health really really important if",
    "start": "2425680",
    "end": "2431680"
  },
  {
    "start": "2428000",
    "end": "2461000"
  },
  {
    "text": "there are problems you want to know about them as soon as possible we use a couple different things to keep track of all the different servers in our clusters",
    "start": "2431680",
    "end": "2437359"
  },
  {
    "text": "so we use victorops as the service to basically gather information from cloudwatch and",
    "start": "2437359",
    "end": "2443680"
  },
  {
    "text": "do things like set up pager notifications and make sms messages and phone calls at 3am to tell people there's a problem",
    "start": "2443680",
    "end": "2449680"
  },
  {
    "text": "separately we do a third party service pingdom which is basically doing a very simple pinging of all different servers in a system on a regular basis to get sort of an",
    "start": "2449680",
    "end": "2455920"
  },
  {
    "text": "independent uh health check of what's up what's down and that's proven to be a pretty pretty effective system",
    "start": "2455920",
    "end": "2461839"
  },
  {
    "start": "2461000",
    "end": "2486000"
  },
  {
    "text": "another thing we talked about buffering here's an example where we do logging not of kind of apis but we have",
    "start": "2461839",
    "end": "2468000"
  },
  {
    "text": "a whole bunch of custom in-game event logging we do and so one thing's very nice is when you have an ec2 you can set it up to",
    "start": "2468000",
    "end": "2473920"
  },
  {
    "text": "automatically get a local ssd drive and that is not something you want to use for long term data storage because",
    "start": "2473920",
    "end": "2479839"
  },
  {
    "text": "as soon as that ec2 instance goes away you lose your disk storage but it's perfect for caching local data so you can cache all your events on your",
    "start": "2479839",
    "end": "2486160"
  },
  {
    "start": "2486000",
    "end": "2507000"
  },
  {
    "text": "local drive and then you can have a service pick up those those logs from time to time and shove them over in the red",
    "start": "2486160",
    "end": "2491280"
  },
  {
    "text": "shifter processing and we're doing that both on local event logs things like sort of standard error out type logs",
    "start": "2491280",
    "end": "2496640"
  },
  {
    "text": "as well as actual uh kind of a server logic logs which in our case get a little bit more fancier uh analysis and actually here",
    "start": "2496640",
    "end": "2503599"
  },
  {
    "text": "we're using rabbitmq just as we were describing earlier to do that analysis so again very common pattern again lots",
    "start": "2503599",
    "end": "2508960"
  },
  {
    "start": "2507000",
    "end": "2540000"
  },
  {
    "text": "of different storage mechanisms dynamodb we use rds we use s3 different systems for different things",
    "start": "2508960",
    "end": "2514560"
  },
  {
    "text": "if you look at what we're doing with the dynamodb it's really good at player data because we don't have to worry about sharding it's very entirely available",
    "start": "2514560",
    "end": "2521359"
  },
  {
    "text": "we're able to store things in here like the user data custom properties inventory and using in this case pretty",
    "start": "2521359",
    "end": "2527440"
  },
  {
    "text": "common the the primary hash is the user id and then the secondary hash is going to be things or the the range key is doing things like your",
    "start": "2527440",
    "end": "2534400"
  },
  {
    "text": "your item or your your title to get at just the data for that particular player",
    "start": "2534400",
    "end": "2540480"
  },
  {
    "start": "2540000",
    "end": "2553000"
  },
  {
    "text": "physical deployment uh common scenario we uh have just been describing pods around the world",
    "start": "2540480",
    "end": "2545680"
  },
  {
    "text": "but all of our core services live in oregon that's where our primary uh",
    "start": "2545680",
    "end": "2551520"
  },
  {
    "text": "kind of main services live we did start originally over in us1 and then we",
    "start": "2551520",
    "end": "2556560"
  },
  {
    "text": "basically moved it to us west too and what's interesting with that is when you have a system where you have",
    "start": "2556560",
    "end": "2562240"
  },
  {
    "text": "your you're moving from one data center to another data center you've got this problem with all this data here now you want to move it all",
    "start": "2562240",
    "end": "2568000"
  },
  {
    "text": "here and you don't want to shut everything down and and sort of copy everything over and it's too much data to copy on the fly",
    "start": "2568000",
    "end": "2573200"
  },
  {
    "text": "so one very common pattern is to have logic to dynamically know about the",
    "start": "2573200",
    "end": "2578560"
  },
  {
    "text": "possibility of multiple places so we wrote this code you probably can't read it but what it basically says is i know that a player's data may be in",
    "start": "2578560",
    "end": "2585040"
  },
  {
    "text": "two different places and i'm going to by default look for it here and if i don't find it here i'm going to",
    "start": "2585040",
    "end": "2590640"
  },
  {
    "text": "automatically fail over and look for here if i if i find it here i will then read it in and then when it's time to make my right",
    "start": "2590640",
    "end": "2596960"
  },
  {
    "text": "i will write it back to the first place and that's a common pattern you can set up and that's useful for all sorts of things like data migration",
    "start": "2596960",
    "end": "2603040"
  },
  {
    "text": "multiple data regions that kind of thing um okay i'm gonna give a really really",
    "start": "2603040",
    "end": "2608240"
  },
  {
    "start": "2605000",
    "end": "2627000"
  },
  {
    "text": "really quick demo if i can and then we will uh",
    "start": "2608240",
    "end": "2613760"
  },
  {
    "text": "take a break oh i need to log in nate",
    "start": "2613760",
    "end": "2617119"
  },
  {
    "text": "sorry",
    "start": "2618839",
    "end": "2621839"
  },
  {
    "text": "okay so a couple different things here really briefly so one of the fun things to look at is in",
    "start": "2623920",
    "end": "2629680"
  },
  {
    "start": "2627000",
    "end": "2655000"
  },
  {
    "text": "our system we're logging for example every time a multiplayer game session completes we automatically",
    "start": "2629680",
    "end": "2635440"
  },
  {
    "text": "take a created a log file from that server instance so i can pick any one of these game sessions here click the log button",
    "start": "2635440",
    "end": "2642240"
  },
  {
    "text": "and i'm getting a copy here of my actual server log so that's a perfect example of what we're doing after the game session ends",
    "start": "2642240",
    "end": "2647359"
  },
  {
    "text": "that log file gets shoved over into s3 for archive purposes and then you can index them and research them and use them for debugging and so",
    "start": "2647359",
    "end": "2653119"
  },
  {
    "text": "on so that's one kind of neat little pattern this is our actual tool itself and so",
    "start": "2653119",
    "end": "2658560"
  },
  {
    "text": "you can do things like see the dashboard for your game do things like go into your catalog management and for example if you're",
    "start": "2658560",
    "end": "2663599"
  },
  {
    "text": "managing in-game inventory here's you know a card from a card game and you can set properties on this card and so on",
    "start": "2663599",
    "end": "2669119"
  },
  {
    "text": "what i want to show you is server management so i'm going back to describing this now you've got this pattern where you want to be able to",
    "start": "2669119",
    "end": "2675200"
  },
  {
    "text": "upload game servers around the world so in our system you can actually go in uh find your",
    "start": "2675200",
    "end": "2680240"
  },
  {
    "text": "actual uh game server which is just you know executable which knows how to run it could be a unreal server instance it",
    "start": "2680240",
    "end": "2686000"
  },
  {
    "text": "could be your custom game server instance give it a name like aws demo hit submit",
    "start": "2686000",
    "end": "2691520"
  },
  {
    "text": "and what's doing is actually uploading the zip file now to the server and it's basically now going to sort of unpack that zip file and now here it is",
    "start": "2691520",
    "end": "2698160"
  },
  {
    "text": "this is the one i just uploaded and this is now available and i could actually go in right now and say i want that available to be in",
    "start": "2698160",
    "end": "2703200"
  },
  {
    "text": "u.s central u.s east and you know japan and hit save and this system is going to go now and",
    "start": "2703200",
    "end": "2708319"
  },
  {
    "text": "do exactly the scope it's now going to automatically back around spin up ec2 instances in those three different regions it's going to copy",
    "start": "2708319",
    "end": "2714640"
  },
  {
    "text": "the executable over it's going to get it all unpacked and set up and create a custom ami for it get the ami configured",
    "start": "2714640",
    "end": "2720800"
  },
  {
    "text": "and then the matchmaker now knows to go and connect to those servers and start things running which is pretty cool so later when i go",
    "start": "2720800",
    "end": "2726880"
  },
  {
    "text": "into servers it's not going to show anything you can see right here these two are now initializing they're not live yet it's going to take a few minutes to get those spun up and",
    "start": "2726880",
    "end": "2733040"
  },
  {
    "text": "running but that's an example the kind of benefit of a you know of following this pattern and in our case with an off-the-shelf tool",
    "start": "2733040",
    "end": "2738640"
  },
  {
    "text": "that does it all for you so with that i think we're done i'm having to talk to you more about the stuff how we chose implement these patterns in",
    "start": "2738640",
    "end": "2744880"
  },
  {
    "text": "building playfab or if you're interested we'd love to talk about using playfab for yourselves so with that thank you very much",
    "start": "2744880",
    "end": "2750560"
  },
  {
    "text": "i think we are done",
    "start": "2750560",
    "end": "2755680"
  }
]