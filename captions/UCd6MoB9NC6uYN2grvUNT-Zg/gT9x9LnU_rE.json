[
  {
    "text": "good afternoon everyone I'm cool deep I'm from Xperia I've been doing building",
    "start": "299",
    "end": "6180"
  },
  {
    "text": "tools and platforms around AWS or cloud computing for the last four years I'm",
    "start": "6180",
    "end": "12870"
  },
  {
    "text": "here to talk about how xperia use is using serverless architecture against ever less is not",
    "start": "12870",
    "end": "20490"
  },
  {
    "text": "just Amazon AWS lambda there is API Gateway DynamoDB as one are also",
    "start": "20490",
    "end": "25800"
  },
  {
    "text": "mentioned this morning it is not just lambdas the intent of my talk today is actually here again as I mentioned I'm",
    "start": "25800",
    "end": "34079"
  },
  {
    "text": "from xperia x bi is one of the largest travel in this online travel industry",
    "start": "34079",
    "end": "40469"
  },
  {
    "text": "out there right we are operating in 75 different countries with more than 100",
    "start": "40469",
    "end": "47190"
  },
  {
    "text": "points of sale our mission is to revolutionize travel with the power of",
    "start": "47190",
    "end": "53219"
  },
  {
    "text": "technology we allow travel and we want to simplify the travel for our customers",
    "start": "53219",
    "end": "59280"
  },
  {
    "text": "with the power of technology so agenda for this session I'm going to talk about",
    "start": "59280",
    "end": "66299"
  },
  {
    "text": "if I miss on lambda you say that Expedia how many transactions we are doing now and how much do we spend for that amount",
    "start": "66299",
    "end": "73110"
  },
  {
    "text": "of compute that we use from lambdas then and then also do a demo of how we have",
    "start": "73110",
    "end": "80790"
  },
  {
    "text": "created a platform so that people can like our team members can go and create a lambda so I'm going to create that and",
    "start": "80790",
    "end": "87240"
  },
  {
    "text": "do a live demo of it as well and then mind the and then I'll cover different",
    "start": "87240",
    "end": "92659"
  },
  {
    "text": "serverless abs that we are running at Expedia I'm going to cover four different patterns right so again this",
    "start": "92659",
    "end": "101009"
  },
  {
    "text": "is our current users with Amazon there are there we use almost I won't say",
    "start": "101009",
    "end": "106110"
  },
  {
    "text": "almost but there are lot of Amazon services that we use without current infrastructure the the platform that we",
    "start": "106110",
    "end": "112140"
  },
  {
    "text": "paid we call it internally primer we do around 1200 deployments across across",
    "start": "112140",
    "end": "117689"
  },
  {
    "text": "the globe these are not just production deploys these are also test everything I'm not just talking about production",
    "start": "117689",
    "end": "123990"
  },
  {
    "text": "and we have more than 700 use engineers using Amazon and then we have about 600",
    "start": "123990",
    "end": "129950"
  },
  {
    "text": "micro services deployed in six different regions the globe so that is our Amazon usage",
    "start": "129950",
    "end": "136110"
  },
  {
    "text": "and if if you look at the lambda usage engine particularly we do about 2.3",
    "start": "136110",
    "end": "141810"
  },
  {
    "text": "billion transactions a month and about 200 K hours is being spent based on",
    "start": "141810",
    "end": "146970"
  },
  {
    "text": "different lambdas that we have right we have about 600 different lambdas I think got around I don't that and but we spend",
    "start": "146970",
    "end": "154020"
  },
  {
    "text": "only 550 bucks for that and as one had mentioned in the morning you pay for",
    "start": "154020",
    "end": "160500"
  },
  {
    "text": "even a by milliseconds right like 200 milliseconds what they charge you and even the I and also by memory there is",
    "start": "160500",
    "end": "171930"
  },
  {
    "text": "also an interesting one that I am going to show later on of different architectures that we follow and I will",
    "start": "171930",
    "end": "177630"
  },
  {
    "text": "show how much we spend as well but the biggest one that I wanted to get out of this session is the opportunity more",
    "start": "177630",
    "end": "186270"
  },
  {
    "text": "than the cost right so there are different possibilities that you get with lambda that you can't even do with",
    "start": "186270",
    "end": "192540"
  },
  {
    "text": "EC as you can but you have to build a lot of infrastructure around it to do that so that's that's what I wanted to",
    "start": "192540",
    "end": "198560"
  },
  {
    "text": "present as a quick refresher what is Amazon lambda you can run different code",
    "start": "198560",
    "end": "205350"
  },
  {
    "text": "platforms right node Python Java and there is no server that you need to",
    "start": "205350",
    "end": "210720"
  },
  {
    "text": "provision Amazon takes care of the provisioning of the server and you're basically running a function out there and there is no administration zero",
    "start": "210720",
    "end": "217980"
  },
  {
    "text": "administration there is no operations that you need to deal with and then it also scales based on you are the number",
    "start": "217980",
    "end": "225510"
  },
  {
    "text": "of requests that you sign it scales again you have to be very careful when I says scale there right if you are",
    "start": "225510",
    "end": "231870"
  },
  {
    "text": "running in the B PC then you need to make sure you have the NFIP s and whatnot but if you're not running inside",
    "start": "231870",
    "end": "237900"
  },
  {
    "text": "a V PC then I think it scales infinitely and then as I mentioned earlier the",
    "start": "237900",
    "end": "242940"
  },
  {
    "text": "cause that Amazon charge is used by sub seconds then how it works right so you",
    "start": "242940",
    "end": "249030"
  },
  {
    "text": "you write your code whatever that it is whether it is node Java or Python then",
    "start": "249030",
    "end": "254100"
  },
  {
    "text": "you upload that into to lambda basically you you can upload to s3 or whatnot but",
    "start": "254100",
    "end": "260790"
  },
  {
    "text": "you give it to Amazon's lambda to run that and then there are different even trigger so I did say even driven",
    "start": "260790",
    "end": "266419"
  },
  {
    "text": "architecture you have SNS that you can do you can use API gateway and just make just a history",
    "start": "266419",
    "end": "271770"
  },
  {
    "text": "DP call to it and then the num is on lambda runs again as what I mentioned it",
    "start": "271770",
    "end": "278670"
  },
  {
    "text": "is a single threaded application it is not multi-threaded the lambda executions and then you pay for what you use right",
    "start": "278670",
    "end": "285390"
  },
  {
    "text": "like and the maximum you can only do only is like five seconds you can't do more than five seconds so again just it",
    "start": "285390",
    "end": "292020"
  },
  {
    "text": "was a quick refresher on what lambda is again earlier I mentioned server less",
    "start": "292020",
    "end": "298110"
  },
  {
    "text": "when I said well as lambda is only one part of it it is just the execution layer there are other parts of it but",
    "start": "298110",
    "end": "304290"
  },
  {
    "text": "I'm going to show a little bit on the demo of how do we create lambdas at Expedia so we we call we have a platform",
    "start": "304290",
    "end": "312450"
  },
  {
    "text": "that we internally build we called as primer so that it helps teams to create",
    "start": "312450",
    "end": "317490"
  },
  {
    "text": "different types of apps it could be a lambda type of an app springboard node",
    "start": "317490",
    "end": "324750"
  },
  {
    "text": "no js' spring MVC you name it we have about 26 different types that we have",
    "start": "324750",
    "end": "331280"
  },
  {
    "text": "now for this talk I'm just going to concentrate on the lambda part of it as a user you go to that page right now you",
    "start": "331280",
    "end": "338820"
  },
  {
    "text": "you log in with your credentials and you can see it says it's you are you're focusing in our apps not on the",
    "start": "338820",
    "end": "344760"
  },
  {
    "text": "infrastructure how to build my infrastructure how do you might deploy so that's what we are enabling our users",
    "start": "344760",
    "end": "350150"
  },
  {
    "text": "and all you go in the page I say I am going to create a lambda and have a idea",
    "start": "350150",
    "end": "356340"
  },
  {
    "text": "that I want you to try out and you just enter the name of the app right and then there are a few few things that you need",
    "start": "356340",
    "end": "361890"
  },
  {
    "text": "to enter like the team name so that we can go and tag the resources not on",
    "start": "361890",
    "end": "367950"
  },
  {
    "text": "lambda but in general right like they're on ec2 ELB ease and whatnot so you want to actually attack them and there are a",
    "start": "367950",
    "end": "375720"
  },
  {
    "text": "few things which I'll go through when I do the demo and then once you are done it this is the page that you get I think",
    "start": "375720",
    "end": "381930"
  },
  {
    "text": "the lambda creation process is like two or three seconds today when I say lambda is created what happened behind the",
    "start": "381930",
    "end": "388740"
  },
  {
    "text": "scenes is we have a templated source code it says it's a hollow world up anything that we do all the different",
    "start": "388740",
    "end": "394800"
  },
  {
    "text": "templates that I mentioned are just hollow world but we do have unit testing on on the up as well and there are few things that",
    "start": "394800",
    "end": "403130"
  },
  {
    "text": "we do here right like it means because it is a node lambda there is nothing that we need to deal with a docker",
    "start": "403130",
    "end": "409160"
  },
  {
    "text": "registry or whatnot some of the steps will be skipped and then once this is",
    "start": "409160",
    "end": "414380"
  },
  {
    "text": "done you get a email which says hey this is the source code which you can go and make changes whatever the changes that",
    "start": "414380",
    "end": "420170"
  },
  {
    "text": "you want to whether you are talking to SNS whether you are talking to you getting through the request coming",
    "start": "420170",
    "end": "426290"
  },
  {
    "text": "through API gateway whatnot whatever you want to you configure it and check it in",
    "start": "426290",
    "end": "431300"
  },
  {
    "text": "and then the lambda will automatically get deployed I'll show that as well now yep so I will do the demo hopefully the",
    "start": "431300",
    "end": "439730"
  },
  {
    "text": "demo gods are with me okay so so as a",
    "start": "439730",
    "end": "452090"
  },
  {
    "text": "user I guess as I mentioned you go to this page you get some details and then if you go to this templates page right",
    "start": "452090",
    "end": "457490"
  },
  {
    "text": "this explains different types of templates that we have and all of them as I said which more than 27 I think and",
    "start": "457490",
    "end": "464690"
  },
  {
    "text": "you have your node.js one and it explains what the template is actually",
    "start": "464690",
    "end": "471760"
  },
  {
    "text": "right and as I'll do it I will create a new lambda now right so I'm just going",
    "start": "471760",
    "end": "479630"
  },
  {
    "text": "to select lambda nodejs and something like maybe 1 the team name right so this",
    "start": "479630",
    "end": "492350"
  },
  {
    "text": "is all required for you to tag your resources so that you can do show backs and whatnot so there are different line",
    "start": "492350",
    "end": "497780"
  },
  {
    "text": "of businesses that we have so all you do this and we heavily use HipChat for all",
    "start": "497780",
    "end": "505520"
  },
  {
    "text": "our communications there are some teams who use slack as well and people are plugged in sending notifications to",
    "start": "505520",
    "end": "512479"
  },
  {
    "text": "slack as well you using lambdas",
    "start": "512479",
    "end": "517089"
  },
  {
    "text": "it's funny it says 60 1.54 76.90 - but i",
    "start": "522310",
    "end": "529010"
  },
  {
    "text": "can it is done now right like it is done the app the whatever that I asked hey go and create this repo for me it is done",
    "start": "529010",
    "end": "535700"
  },
  {
    "text": "right now I can go to the repo soda I usually get an email I didn't want to",
    "start": "535700",
    "end": "542150"
  },
  {
    "text": "open my email but this is this is the repo that did created right now live",
    "start": "542150",
    "end": "548270"
  },
  {
    "text": "with their sample source code I'm going to clone this and I'm going to show what",
    "start": "548270",
    "end": "554480"
  },
  {
    "text": "all it actually does as well",
    "start": "554480",
    "end": "557769"
  },
  {
    "text": "so as I mentioned earlier we also do test and do a unit testing for them as",
    "start": "576090",
    "end": "581460"
  },
  {
    "text": "well right and you also have code coverage so we use Jasmine for testing and we have Istanbul for doing the code",
    "start": "581460",
    "end": "588330"
  },
  {
    "text": "coverage right so this is all you get for free and let me run this in the",
    "start": "588330",
    "end": "593790"
  },
  {
    "text": "backend so",
    "start": "593790",
    "end": "596570"
  },
  {
    "text": "so this one is just basically it's a hello world think I did it it's basically we are giving you the",
    "start": "624050",
    "end": "630529"
  },
  {
    "text": "boilerplate as a user as a team member to go and do whatever you want to but while you get is this hello world and",
    "start": "630529",
    "end": "635959"
  },
  {
    "text": "you also have a test right so the test says that that basically needs to be hello world alright so as a user you can",
    "start": "635959",
    "end": "643640"
  },
  {
    "text": "make changes and then make sure your tests are running hopefully this is done okay this is done so I'll just quickly",
    "start": "643640",
    "end": "651380"
  },
  {
    "text": "walk through this and",
    "start": "651380",
    "end": "654160"
  },
  {
    "text": "right so and you run gulp and the gulp should fail right so gulp is saying hey",
    "start": "662940",
    "end": "668190"
  },
  {
    "text": "you said in the test it saw the world but you said hello rain went down so it failed and and as a user you just go and",
    "start": "668190",
    "end": "676410"
  },
  {
    "text": "update it and so now the test has passed",
    "start": "676410",
    "end": "687270"
  },
  {
    "text": "the code coverage everything is good the one that I wanted to show is this part where as I mentioned earlier there are",
    "start": "687270",
    "end": "693510"
  },
  {
    "text": "different even types that you are lambdas will trigger off whether it is SNS s3 file creation or object creation",
    "start": "693510",
    "end": "700770"
  },
  {
    "text": "so as a as a team member you can say hey my event source is something from SNS",
    "start": "700770",
    "end": "707160"
  },
  {
    "text": "you you add that in and then you check it in that's that's all you are doing basically you're not doing anything beyond that and and the deployment",
    "start": "707160",
    "end": "714120"
  },
  {
    "text": "framework actually takes care of it for most of our deployments well again as I",
    "start": "714120",
    "end": "719610"
  },
  {
    "text": "mentioned primary is the platform but most of our deployments happen through Jenkins so all it is doing is calling a",
    "start": "719610",
    "end": "724860"
  },
  {
    "text": "Jenkins job to do the deploys hope I have it here",
    "start": "724860",
    "end": "732019"
  },
  {
    "text": "there's the one that I kicked off it's already deployed again now I can make a",
    "start": "741230",
    "end": "746779"
  },
  {
    "text": "small change and then check it in and it will again go and deploy them for the user and also go to the AWS console to",
    "start": "746779",
    "end": "752690"
  },
  {
    "text": "show that it's up there so and this is",
    "start": "752690",
    "end": "762019"
  },
  {
    "text": "how we enable CI CD for our teams right so it's not only just we give them the",
    "start": "762019",
    "end": "767480"
  },
  {
    "text": "option to create a new lambda but you also have full CI CD as you make changes you just commit your master and",
    "start": "767480",
    "end": "774470"
  },
  {
    "text": "everything else happens for them it's good to lambda so this is the one that",
    "start": "774470",
    "end": "784399"
  },
  {
    "text": "that I created right now so with that again I this is what we have built for",
    "start": "784399",
    "end": "790610"
  },
  {
    "text": "our team so that they can start focus on innovating writing apps versus how to",
    "start": "790610",
    "end": "796430"
  },
  {
    "text": "create lambdas how do they wire up so that's that's the what I wanted to show Jilly let me switch back to my slide",
    "start": "796430",
    "end": "804829"
  },
  {
    "text": "deck so with that again now I really want to focus on four different types of architectures that are currently news",
    "start": "804829",
    "end": "811329"
  },
  {
    "text": "again there are many more I'm not going to cover everywhere every architecture that we have the first one RC a CD",
    "start": "811329",
    "end": "819920"
  },
  {
    "text": "platform that I showed you right now the lot of the changes that I was making all",
    "start": "819920",
    "end": "825140"
  },
  {
    "text": "the metadata that you see in our dashboard everything most of it actually runs behind the scenes with a lot of",
    "start": "825140",
    "end": "830540"
  },
  {
    "text": "lambdas we call them as minions so that's what we call them internally they're much like 20 of them are 30 of",
    "start": "830540",
    "end": "837230"
  },
  {
    "text": "them I don't know there are so many minions I need to each perform different tasks right one is sending your HipChat notification one is writing two",
    "start": "837230",
    "end": "844339"
  },
  {
    "text": "elasticsearch one is writing two DynamoDB based on whatever the event is again this most of our as I showed",
    "start": "844339",
    "end": "852140"
  },
  {
    "text": "earlier everything we most of stuff that I'd we do is get up enterprise we have",
    "start": "852140",
    "end": "857300"
  },
  {
    "text": "it hosted internally so as a user you are making the change to github and we used git up where books then any",
    "start": "857300",
    "end": "864829"
  },
  {
    "text": "change that you make that gets pushed to a API gateway so there is a API gateway",
    "start": "864829",
    "end": "870290"
  },
  {
    "text": "endpoint that we have any thing that we do in our like in our github and",
    "start": "870290",
    "end": "875300"
  },
  {
    "text": "there is a UN that gets triggered right so there again calls a lambda and in",
    "start": "875300",
    "end": "880820"
  },
  {
    "text": "that lambda you you have there are like for that one particular even there are",
    "start": "880820",
    "end": "887780"
  },
  {
    "text": "like 20 different lambdas that are listening on that same event and then every lambda has a different purpose",
    "start": "887780",
    "end": "893450"
  },
  {
    "text": "right like it looks at that event and says hey this particular one is interesting so that I have to update the",
    "start": "893450",
    "end": "900260"
  },
  {
    "text": "deployment conflict how many minimum bar instances how many maximum instances there is other one",
    "start": "900260",
    "end": "905870"
  },
  {
    "text": "where we enforce at is it possible at least guide are you team members that",
    "start": "905870",
    "end": "913790"
  },
  {
    "text": "you don't you don't merge your own pool request or you don't push directly to master right so that's that's one other",
    "start": "913790",
    "end": "920180"
  },
  {
    "text": "use case but everything is done by inspecting that same payload again as the lambda lesson s so here the the part",
    "start": "920180",
    "end": "930110"
  },
  {
    "text": "that I mentioned is it figure out there are different lambdas that are running once and once they figure out what it",
    "start": "930110",
    "end": "937040"
  },
  {
    "text": "needs to do it will send again events to different destiny so it's not just one SNS there but they are like another 20",
    "start": "937040",
    "end": "942620"
  },
  {
    "text": "different SNSs each lambda will trigger so one of them basically right one one",
    "start": "942620",
    "end": "948620"
  },
  {
    "text": "SNS is basically powering or deployment config changes right and it writes to",
    "start": "948620",
    "end": "954140"
  },
  {
    "text": "elasticsearch I get some as one elasticsearch that we use and we catch our data there and then this is the one",
    "start": "954140",
    "end": "961190"
  },
  {
    "text": "that I mentioned right like if a developer pushes the code directly to master there's another lambda that's",
    "start": "961190",
    "end": "966800"
  },
  {
    "text": "there and it actually sends an email as well that's saying that you have pushed your change directly to master and",
    "start": "966800",
    "end": "972670"
  },
  {
    "text": "basically it is at least a guidelines that we are providing to our teams and",
    "start": "972670",
    "end": "978140"
  },
  {
    "text": "then the other one is basically all the deep the changes that I was showing in the app basically they also go and get",
    "start": "978140",
    "end": "985339"
  },
  {
    "text": "registered into your dynamo DB right so and all this is 9 million computations",
    "start": "985339",
    "end": "994190"
  },
  {
    "text": "that we do for a month this particular use case and we spend only 1.8 dollar for that whole thing right the amount of",
    "start": "994190",
    "end": "1001240"
  },
  {
    "text": "time it spends is far less it's it's nothing transactional there that it",
    "start": "1001240",
    "end": "1006850"
  },
  {
    "text": "needs to run so much hours so and for it's about 350 hours I think yeah and it's 1.8 dollars that's",
    "start": "1006850",
    "end": "1013730"
  },
  {
    "text": "what we spent for that that particular platform that we have again I'll do a",
    "start": "1013730",
    "end": "1019580"
  },
  {
    "text": "demo of this to show that how it works and then we'll go and go through the other use cases that we actually have",
    "start": "1019580",
    "end": "1028000"
  },
  {
    "text": "so I created a app before these four I came in so this one is the lamp",
    "start": "1031120",
    "end": "1041650"
  },
  {
    "text": "so if I go to the same app in our dashboard that I'm trying to open right",
    "start": "1058330",
    "end": "1063980"
  },
  {
    "text": "now right so you can see that the team",
    "start": "1063980",
    "end": "1069260"
  },
  {
    "text": "it says here as primer right again this the other part we have a big gamify our",
    "start": "1069260",
    "end": "1077330"
  },
  {
    "text": "deployments as well that's the reason you see that Ghost core we actually did I recently attacked a blog on our",
    "start": "1077330",
    "end": "1084410"
  },
  {
    "text": "official blog post on how we actually power that again I'm not going to go into the details of that one so I'm",
    "start": "1084410",
    "end": "1093559"
  },
  {
    "text": "going to change the team name and see and see that it gets reflected I'll also",
    "start": "1093559",
    "end": "1098630"
  },
  {
    "text": "show that in the different lambdas are running this thing so I go here so this",
    "start": "1098630",
    "end": "1105980"
  },
  {
    "text": "is the meta data right so this is where it says as primer for the same app I'm just going to edit it again please don't",
    "start": "1105980",
    "end": "1112100"
  },
  {
    "text": "March to master directly I'm just doing it myself here right I just change the",
    "start": "1112100",
    "end": "1120260"
  },
  {
    "text": "team name here I'm pushing it a master I would have already got an email by now right because I push to master myself",
    "start": "1120260",
    "end": "1129370"
  },
  {
    "text": "update yet I will come back to this so",
    "start": "1133299",
    "end": "1138350"
  },
  {
    "text": "these ones as I mentioned earlier there are different so this is one of them",
    "start": "1138350",
    "end": "1146179"
  },
  {
    "text": "right so one of these lambdas the minion lambdas that we have there are different different of different lambdas that we",
    "start": "1146179",
    "end": "1152299"
  },
  {
    "text": "have and and based on the data that came in all it is doing it is passing the JSON file and it is writing to dynamo DB",
    "start": "1152299",
    "end": "1160040"
  },
  {
    "text": "right and there are different events that are running here behind the scenes to record this this has changed",
    "start": "1160040",
    "end": "1169360"
  },
  {
    "text": "okay looks like I will take a look at it later when we after I go through the",
    "start": "1186710",
    "end": "1192480"
  },
  {
    "text": "other slides and if I go here and search",
    "start": "1192480",
    "end": "1200400"
  },
  {
    "text": "for different minions so you can see there are a lot of minions that are running and each one is serving different purpose right like one is",
    "start": "1200400",
    "end": "1206430"
  },
  {
    "text": "writing to elasticsearch one is writing to DynamoDB there are different use",
    "start": "1206430",
    "end": "1211740"
  },
  {
    "text": "cases that we are trying to solve and this this is the one that sends the email as well because you push directly to the master yep so the second one that",
    "start": "1211740",
    "end": "1224100"
  },
  {
    "text": "I want you to talk to I think there is a session as well on this from Amazon so how do we go on our infrastructure right",
    "start": "1224100",
    "end": "1232550"
  },
  {
    "text": "most of them is driven through automation everyone goes and creates the instances most of them there are a lot",
    "start": "1232550",
    "end": "1238650"
  },
  {
    "text": "of folks use different tools as well but there are a lot of users who have console access as well to go and create",
    "start": "1238650",
    "end": "1245190"
  },
  {
    "text": "the instances in through AWS console how do we make sure that the necessary",
    "start": "1245190",
    "end": "1251160"
  },
  {
    "text": "attacks are in place so that that's this particular use case right so again we",
    "start": "1251160",
    "end": "1259320"
  },
  {
    "text": "looked at different services that amazon offers to do this right first we looked at AWS conflict to do this config",
    "start": "1259320",
    "end": "1266910"
  },
  {
    "text": "records all these data as well for you but again and then you have to you can",
    "start": "1266910",
    "end": "1271980"
  },
  {
    "text": "write your own lambda or your own custom configure all to do this as we were",
    "start": "1271980",
    "end": "1277620"
  },
  {
    "text": "looking at with config it was getting a little expensive I don't have the real",
    "start": "1277620",
    "end": "1283320"
  },
  {
    "text": "numbers but it was expensive than doing the other way with cloud trial so that's the reason we moved into using cloud",
    "start": "1283320",
    "end": "1288840"
  },
  {
    "text": "trial again a cloud trial but for those who don't know it records every most of",
    "start": "1288840",
    "end": "1295350"
  },
  {
    "text": "the API calls that you are making in Amazon it records most of them there are few I don't know if they still record",
    "start": "1295350",
    "end": "1300900"
  },
  {
    "text": "like some of the kms stuff may not be there and then you have n abel cloud trail what happens is on if I think it's",
    "start": "1300900",
    "end": "1309270"
  },
  {
    "text": "I don't know the timeframe whenever the file gets created but on a on a schedule",
    "start": "1309270",
    "end": "1315540"
  },
  {
    "text": "there is s3 file that's created that has all the events that have happened for the like maybe two minutes or three minutes",
    "start": "1315540",
    "end": "1322200"
  },
  {
    "text": "and then it's it's uploaded to s3 right and what we are doing here is we have a",
    "start": "1322200",
    "end": "1327240"
  },
  {
    "text": "cloud trail this is the cloud trail event which is a schedule one that runs",
    "start": "1327240",
    "end": "1332880"
  },
  {
    "text": "on a schedule and then goes and gets that file from s3 and then there is a",
    "start": "1332880",
    "end": "1338669"
  },
  {
    "text": "lambda that's running on that we're just getting that file right and it is writing to a DynamoDB table saying hey",
    "start": "1338669",
    "end": "1344700"
  },
  {
    "text": "these are the events that have actually happened right and after that we have",
    "start": "1344700",
    "end": "1350220"
  },
  {
    "text": "this scheduled lambda that's that's basically using cloud watch events that",
    "start": "1350220",
    "end": "1356580"
  },
  {
    "text": "that's what we are doing here and then it actually sends a message out saying",
    "start": "1356580",
    "end": "1362340"
  },
  {
    "text": "that hey go and look at the data that we have in the DynamoDB and see what you what you can do on that right so this",
    "start": "1362340",
    "end": "1369539"
  },
  {
    "text": "one basically again again everything here it's DynamoDB SNS and api gateway",
    "start": "1369539",
    "end": "1377130"
  },
  {
    "text": "so if you see most of them are that right that that's what we are using here so then what happens is it goes and",
    "start": "1377130",
    "end": "1383039"
  },
  {
    "text": "looks at that event that's there in dynamo dB and it validates based on the rules that we have defined so we we need",
    "start": "1383039",
    "end": "1390510"
  },
  {
    "text": "our I think we have four tags that you need to have like one is role one is team portfolio and product area and if",
    "start": "1390510",
    "end": "1397289"
  },
  {
    "text": "those tags are not there on the resources that's when we basically operate on top of it the other thing",
    "start": "1397289",
    "end": "1403740"
  },
  {
    "text": "that we do in this particular validator stage I don't know how many of you guys",
    "start": "1403740",
    "end": "1408900"
  },
  {
    "text": "know when you create ec2 instance does the tags go onto the EBS instance plus",
    "start": "1408900",
    "end": "1414500"
  },
  {
    "text": "right so that's I'd say it's a huge problem at least for us right because",
    "start": "1414500",
    "end": "1420600"
  },
  {
    "text": "you are creating the instance always but the tags are not automatically getting flown to the EBS volume so part of this",
    "start": "1420600",
    "end": "1426900"
  },
  {
    "text": "validator lambda what we actually do is in the payload that you get from Cloud trail there is also a parent attribute",
    "start": "1426900",
    "end": "1434010"
  },
  {
    "text": "so what we use that we use that parent attribute and then we automatically tag the OBS volume as well let's say that",
    "start": "1434010",
    "end": "1441539"
  },
  {
    "text": "particular event is create volumes that's what came in as the validator lambda it inspects the payload and then",
    "start": "1441539",
    "end": "1447840"
  },
  {
    "text": "it goes and gets the tax from the instance and then automatically adds that to the EBS",
    "start": "1447840",
    "end": "1453750"
  },
  {
    "text": "that's why that's how we are in ensuring that the EBS volumes are always tagged prior to this reactor actually had to",
    "start": "1453750",
    "end": "1460980"
  },
  {
    "text": "run a bad job once a once a day which scans all of the EBS volumes that we",
    "start": "1460980",
    "end": "1466200"
  },
  {
    "text": "have then figures out what is the eb ec2 instance that's associated with that EBS volume again this has saved a lot of",
    "start": "1466200",
    "end": "1473490"
  },
  {
    "text": "things for us but the main intent is not that the main intent is to make sure the",
    "start": "1473490",
    "end": "1479820"
  },
  {
    "text": "required tacks are there on the instance so once it validates it again it sends an SNS when it sees that there is a",
    "start": "1479820",
    "end": "1486150"
  },
  {
    "text": "particular resource that doesn't match that particular like the four tags that",
    "start": "1486150",
    "end": "1491490"
  },
  {
    "text": "I mentioned right we do it for ec2 we do it for s3 s3 buckets we do it for EBS we",
    "start": "1491490",
    "end": "1497850"
  },
  {
    "text": "root for load balancers there are few more that auto scaling groups as well right and then this is where the lambda",
    "start": "1497850",
    "end": "1504419"
  },
  {
    "text": "comes in the one that actually goes and operates on it and then actually just terminates it usually by the time that",
    "start": "1504419",
    "end": "1510210"
  },
  {
    "text": "you have created we give about 15 minutes and after 15 minutes if it is",
    "start": "1510210",
    "end": "1515520"
  },
  {
    "text": "not tagged it actually gets you destroyed all right again there is an essence even that sent out when that",
    "start": "1515520",
    "end": "1521520"
  },
  {
    "text": "particular event happens and then there is another lambda that's watching for it and it writes to the dynamodb here there",
    "start": "1521520",
    "end": "1528120"
  },
  {
    "text": "are two types of DBS that I showed here right one is a simulation mode and one is history sometimes there could be some",
    "start": "1528120",
    "end": "1535650"
  },
  {
    "text": "issues that are happening behind the scenes on Amazon or whatnot and we don't want to even even the",
    "start": "1535650",
    "end": "1541460"
  },
  {
    "text": "instances that are created through automation we don't want them to be terminated so we can turn that on and",
    "start": "1541460",
    "end": "1547230"
  },
  {
    "text": "off the simulation mode and if it is in simulation mode we record everything but we don't actually operate on it but with",
    "start": "1547230",
    "end": "1554790"
  },
  {
    "text": "the simulation mode when you want to really operate on it you can go back and then act on it so that that's that's",
    "start": "1554790",
    "end": "1561480"
  },
  {
    "text": "this one again I'm hoping this I actually created a instance before we",
    "start": "1561480",
    "end": "1568559"
  },
  {
    "text": "started let's see if it is there if it is we actually have a dashboard as well",
    "start": "1568559",
    "end": "1577140"
  },
  {
    "text": "that shows all the events that have happened let's see if I have it here",
    "start": "1577140",
    "end": "1584000"
  },
  {
    "text": "so this is the table sorry UI so when",
    "start": "1584000",
    "end": "1592590"
  },
  {
    "text": "you create a ec2 instance from the console the the API behind the scenes is basically run instances right so that",
    "start": "1592590",
    "end": "1598590"
  },
  {
    "text": "that's that's what I'm doing and the environment that I did this is in so",
    "start": "1598590",
    "end": "1604140"
  },
  {
    "text": "right before when we started actually created this instance right at 12:55 and",
    "start": "1604140",
    "end": "1609660"
  },
  {
    "text": "you can see it is actually in a terminated state the reason why it is terminated because they were literally",
    "start": "1609660",
    "end": "1615540"
  },
  {
    "text": "no tax on that instance and if I go back to the same UI that I was trying to search let's see if I can find it now",
    "start": "1615540",
    "end": "1624500"
  },
  {
    "text": "you can see this this is the instance that it operated on and it automatically terminated it because there were no",
    "start": "1645159",
    "end": "1651159"
  },
  {
    "text": "required tax on it if that instance had that for tax whatever the tax that I mentioned you do not now have deleted it",
    "start": "1651159",
    "end": "1657489"
  },
  {
    "text": "right so that's that's the use case that I wanted to show and this is how we are ensuring that whatever the governance",
    "start": "1657489",
    "end": "1664210"
  },
  {
    "text": "that we want to put on our infrastructure those are always in place right whatever automation tools that you",
    "start": "1664210",
    "end": "1669399"
  },
  {
    "text": "use whether you use a chef whether you use docker whether you use ansible cloud",
    "start": "1669399",
    "end": "1675429"
  },
  {
    "text": "formation just at least you need to make sure that the necessary tasks are in place okay go back to my slides",
    "start": "1675429",
    "end": "1685289"
  },
  {
    "text": "so we do a lot of a/b testing at Expedia right so we have we have a infrastructure that has been built on",
    "start": "1690910",
    "end": "1697120"
  },
  {
    "text": "top of dynamo DB on Postgres database right the the part of the talk my here",
    "start": "1697120",
    "end": "1706300"
  },
  {
    "text": "is before this particular use case was done all the aggregations used to happen",
    "start": "1706300",
    "end": "1713080"
  },
  {
    "text": "in in Postgres DB itself right like when you want to generate a report on what actually all the tests that have been",
    "start": "1713080",
    "end": "1720220"
  },
  {
    "text": "run over a period of time there was a very expensive query that used to run on",
    "start": "1720220",
    "end": "1725230"
  },
  {
    "text": "the fly in the DB then we used to our CPUs our memory used to pack a lot so",
    "start": "1725230",
    "end": "1731230"
  },
  {
    "text": "what we have done is again every change that you make on the sorry every changes",
    "start": "1731230",
    "end": "1739960"
  },
  {
    "text": "that are run through the a/b testing platform they actually go to a dynamo DB so we use dynamo DB streams here right",
    "start": "1739960",
    "end": "1746350"
  },
  {
    "text": "with dynamo DB streams a lambda gets triggered and then what it does is it",
    "start": "1746350",
    "end": "1751420"
  },
  {
    "text": "just writes that messages to sqs so all the messages are just gone into SQL and",
    "start": "1751420",
    "end": "1756550"
  },
  {
    "text": "that's where the initial part is complete then what we actually have is",
    "start": "1756550",
    "end": "1761980"
  },
  {
    "text": "is a back-end thing that runs on a schedule or actually it's a streaming job that's running so we use spark spots",
    "start": "1761980",
    "end": "1769060"
  },
  {
    "text": "streaming so this part streaming actually goes to as skewers gets all the messages that are were done for the last",
    "start": "1769060",
    "end": "1775690"
  },
  {
    "text": "whatever the time that when you try and previously then it writes to s3 bucket",
    "start": "1775690",
    "end": "1781150"
  },
  {
    "text": "using a internal app that we called as collector right and there is another spark job that goes and massages the",
    "start": "1781150",
    "end": "1788710"
  },
  {
    "text": "data and creates all those aggregations and then directly writes that to the test and learn Postgres DB right",
    "start": "1788710",
    "end": "1795220"
  },
  {
    "text": "the benefit here is we have offloaded all that tranch changes to a different",
    "start": "1795220",
    "end": "1800470"
  },
  {
    "text": "system and we are not doing any of the heavy lifting in the DB everything else is done off like by by this park system",
    "start": "1800470",
    "end": "1809770"
  },
  {
    "text": "here and then it just goes into Postgres aggregated so you're not doing aggregations on-the-fly so this is one",
    "start": "1809770",
    "end": "1816310"
  },
  {
    "text": "of the use cases that we have so this one the other use case that we are",
    "start": "1816310",
    "end": "1821410"
  },
  {
    "text": "running lambdas how many of you have used auto-scaling scheduled actions yep so with with",
    "start": "1821410",
    "end": "1829610"
  },
  {
    "text": "scheduled auto-scaling right you say hey this is the time that I want to scale up",
    "start": "1829610",
    "end": "1835670"
  },
  {
    "text": "and this is the time that you want to scale down and and it and it works for most of the cases but the problem that",
    "start": "1835670",
    "end": "1842120"
  },
  {
    "text": "we are trying to solve here is we have this app called as Expedia suggest service there is a type-ahead service",
    "start": "1842120",
    "end": "1848330"
  },
  {
    "text": "that when you go to the UI and then search for the app right like like",
    "start": "1848330",
    "end": "1853550"
  },
  {
    "text": "search for Seattle search for Las Vegas it gives you some suggestions so that's",
    "start": "1853550",
    "end": "1858620"
  },
  {
    "text": "the app it's used across different systems right and in this one every day",
    "start": "1858620",
    "end": "1867760"
  },
  {
    "text": "there is a memory refresh that happens so when the memory refresh happens it",
    "start": "1867760",
    "end": "1873590"
  },
  {
    "text": "actually the heap usually most of the gaseous doubles the current heap size so",
    "start": "1873590",
    "end": "1881000"
  },
  {
    "text": "we were running into issues with the heap size being almost the double the instance performance was not good or you",
    "start": "1881000",
    "end": "1887120"
  },
  {
    "text": "actually had to add more instances to the system right and so if you look at",
    "start": "1887120",
    "end": "1894110"
  },
  {
    "text": "the graph here right so this is the typical heap size that we run and whenever the memory refresh happens the",
    "start": "1894110",
    "end": "1901040"
  },
  {
    "text": "heap size goes up almost double and again you have to the service gets",
    "start": "1901040",
    "end": "1908180"
  },
  {
    "text": "degraded sometimes or you actually have to do over provision as well so what we did with lambda and auto scaling yeah so",
    "start": "1908180",
    "end": "1917960"
  },
  {
    "text": "this is what I mentioned so what we do is we actually have a lambda yeah",
    "start": "1917960",
    "end": "1926030"
  },
  {
    "text": "there's al and other runs once a day right and and whenever the memory refresh needs to happen in it goes and",
    "start": "1926030",
    "end": "1932510"
  },
  {
    "text": "looks at the auto scaling group that the experience are just service is using currently and it goes and tax it right",
    "start": "1932510",
    "end": "1938630"
  },
  {
    "text": "like saying hey I'm going to do something right now if the tag doesn't exist and it also records the current",
    "start": "1938630",
    "end": "1945370"
  },
  {
    "text": "current instance count what is the desired what is the maximum what is the minimum instance count it has and then",
    "start": "1945370",
    "end": "1952670"
  },
  {
    "text": "it goes and doubles it right whatever is the current count it goes and doubles it and then we let the",
    "start": "1952670",
    "end": "1960170"
  },
  {
    "text": "auto scaling group to like kick in the number of instances that he needs to",
    "start": "1960170",
    "end": "1965240"
  },
  {
    "text": "launch so I'll show this as well so there is a lambda sacred watch events",
    "start": "1965240",
    "end": "1971110"
  },
  {
    "text": "based lambda is a scheduled lamda Aid and then it's going and operating on the",
    "start": "1971110",
    "end": "1977810"
  },
  {
    "text": "auto scaling group then it adds the tag on to the box with the minimum and maximum instances on it right and if",
    "start": "1977810",
    "end": "1983990"
  },
  {
    "text": "there is an error it just stops at that point and then and we also do the old oldest termination policy sold his first",
    "start": "1983990",
    "end": "1992000"
  },
  {
    "text": "termination policy right and then we let the auto scaling group to scale up and",
    "start": "1992000",
    "end": "1997160"
  },
  {
    "text": "then out that point this particular lambdas work is done right so this and",
    "start": "1997160",
    "end": "2003160"
  },
  {
    "text": "now we actually need to scale down right like we don't scale down you're actually you're continue to spend money because",
    "start": "2003160",
    "end": "2008890"
  },
  {
    "text": "you have said I want to x of the instances not just X right so there is",
    "start": "2008890",
    "end": "2014920"
  },
  {
    "text": "another lambda that goes right then it is it is searching for that auto scaling group that experience as a service is",
    "start": "2014920",
    "end": "2022840"
  },
  {
    "text": "using and then it looks at the attack so if that tag exists on that auto scaling",
    "start": "2022840",
    "end": "2028660"
  },
  {
    "text": "group then it goes and checks if the load balancer has the sorry it checks",
    "start": "2028660",
    "end": "2035560"
  },
  {
    "text": "the auto scaling group to make sure all the instances are in service right so we want to make sure that it is in service",
    "start": "2035560",
    "end": "2041410"
  },
  {
    "text": "and then it also sees once that it validates that all of the instances are",
    "start": "2041410",
    "end": "2046930"
  },
  {
    "text": "in service then it actually trick makes the change on the auto scaling group to",
    "start": "2046930",
    "end": "2052389"
  },
  {
    "text": "go back to the old values whatever the values that were set in that tag so that's what it does and then once it is",
    "start": "2052390",
    "end": "2059560"
  },
  {
    "text": "done again it it exits at that point so this is how we are doing auto scaling as",
    "start": "2059560",
    "end": "2065649"
  },
  {
    "text": "well on our instances again we could have just done schedule action but we",
    "start": "2065650",
    "end": "2071290"
  },
  {
    "text": "don't get that flexibility of scheduled action saying that something is done",
    "start": "2071290",
    "end": "2076330"
  },
  {
    "text": "so hopefully Amazon is able to add that as well again this is not this is not",
    "start": "2076330",
    "end": "2083110"
  },
  {
    "text": "lambda like Amazon lambda but it is a lambda that we run",
    "start": "2083110",
    "end": "2088570"
  },
  {
    "text": "internally using a platform we call it internally as Hendrix right so again I",
    "start": "2088570",
    "end": "2095679"
  },
  {
    "text": "just wanted to give an idea of how the system has been built right there are different event sources the same way",
    "start": "2095679",
    "end": "2102040"
  },
  {
    "text": "that I mentioned earlier I'd say have different SNS events that are coming in our different API gateway requests that",
    "start": "2102040",
    "end": "2107500"
  },
  {
    "text": "are coming in so which is what I have it here as sources right and there are a lot of and basically these are all",
    "start": "2107500",
    "end": "2114490"
  },
  {
    "text": "different signals that that come in so and the lambdas that I talk here are are",
    "start": "2114490",
    "end": "2120190"
  },
  {
    "text": "also created through the same primary automation that I mentioned earlier and then what the lambda here is is the",
    "start": "2120190",
    "end": "2127830"
  },
  {
    "text": "again the lambda here is just a function it is not not a big micro service or",
    "start": "2127830",
    "end": "2133510"
  },
  {
    "text": "anything is just a scalar function and the way that we do this is you have dynamo DB as the metadata about where",
    "start": "2133510",
    "end": "2141790"
  },
  {
    "text": "the file is where the source code is and then you have a and then s3 is where the source code resides there are different",
    "start": "2141790",
    "end": "2150190"
  },
  {
    "text": "sources but there are also different people who are acting on the same source right so that's where it multiplies I",
    "start": "2150190",
    "end": "2156580"
  },
  {
    "text": "don't have the number but when I did the last calculation this particular lambda system that we built internally",
    "start": "2156580",
    "end": "2163260"
  },
  {
    "text": "processes about 20 billion transactions a day right so there are that one of the",
    "start": "2163260",
    "end": "2169240"
  },
  {
    "text": "source that you see up there is our user interaction service basically anything that you do on our side we record it so",
    "start": "2169240",
    "end": "2175960"
  },
  {
    "text": "that's that's huge and then we have our access logs so that so there are and",
    "start": "2175960",
    "end": "2182980"
  },
  {
    "text": "there are two other sources I forgot now but but the number of transactions that",
    "start": "2182980",
    "end": "2189520"
  },
  {
    "text": "we do is about 20 billion messages sorry",
    "start": "2189520",
    "end": "2195490"
  },
  {
    "text": "to only billion computations in a day right and sometimes the computation may not do may do nothing but at least it",
    "start": "2195490",
    "end": "2202960"
  },
  {
    "text": "gets invoked at that many number of times so that is the system that we have built and you can use we can build these",
    "start": "2202960",
    "end": "2209350"
  },
  {
    "text": "systems we have the developer who build that as well in the room if you want to ask questions about it feel free to",
    "start": "2209350",
    "end": "2215310"
  },
  {
    "text": "stick around and again I want to wrap up",
    "start": "2215310",
    "end": "2221819"
  },
  {
    "text": "with the benefits that I wanted to make so the the one that I mentioned earlier what is Amazon lambda and what are the",
    "start": "2221819",
    "end": "2228010"
  },
  {
    "text": "different benefits you get right the first one as I mentioned earlier we spend about three five hundred fifty",
    "start": "2228010",
    "end": "2233650"
  },
  {
    "text": "bucks for about two point three billion transactions again cost is where it",
    "start": "2233650",
    "end": "2239619"
  },
  {
    "text": "really helps with the cost there is no server to patch right so the server is",
    "start": "2239619",
    "end": "2245650"
  },
  {
    "text": "always there because Amazon is just triggering your function and you don't",
    "start": "2245650",
    "end": "2250660"
  },
  {
    "text": "have to go and manage your server to patch it and whatnot so that's where there is zero administration that you",
    "start": "2250660",
    "end": "2257500"
  },
  {
    "text": "have to deal with that's operations and the scale right like as you have more",
    "start": "2257500",
    "end": "2263500"
  },
  {
    "text": "requests coming into the system you have the the number of times that you can run the lambda also increases right and the",
    "start": "2263500",
    "end": "2270970"
  },
  {
    "text": "biggest one that I really wanted to emphasize is the opportunity right there are a lot of things that you could build",
    "start": "2270970",
    "end": "2276220"
  },
  {
    "text": "yourself but you have to spend a lot of time figuring out how to build like DynamoDB how do how do I build the SNS",
    "start": "2276220",
    "end": "2284160"
  },
  {
    "text": "notification system all of those you can just do your like use Amazon services",
    "start": "2284160",
    "end": "2290770"
  },
  {
    "text": "DynamoDB API gateways SNS s3 year events",
    "start": "2290770",
    "end": "2297250"
  },
  {
    "text": "and even the recent cloud watch be called cloud watch scheduler as well",
    "start": "2297250",
    "end": "2303430"
  },
  {
    "text": "like based on you you are you are able to scale your trigger your lambdas based",
    "start": "2303430",
    "end": "2308740"
  },
  {
    "text": "on that and then as I mentioned show showed earlier it will literally took me to create my",
    "start": "2308740",
    "end": "2314109"
  },
  {
    "text": "lambda like 10 seconds and and if you have a idea a very small area that you",
    "start": "2314109",
    "end": "2319690"
  },
  {
    "text": "want to go and operate on it you can actually try it and see if it works",
    "start": "2319690",
    "end": "2325539"
  },
  {
    "text": "if it doesn't work you throw up right like that's what micro services were also give like so micro services were",
    "start": "2325539",
    "end": "2331000"
  },
  {
    "text": "also giving you but in this it is just a simple function that you are running and it is and the execution time is pretty",
    "start": "2331000",
    "end": "2337480"
  },
  {
    "text": "less versus like how do you build a server with micro service go and figure",
    "start": "2337480",
    "end": "2342700"
  },
  {
    "text": "out whether how do I run it right a chef cookbook how do I write a docker file or whatnot in this case you are just",
    "start": "2342700",
    "end": "2348460"
  },
  {
    "text": "running a your function basically right so what do we",
    "start": "2348460",
    "end": "2355370"
  },
  {
    "text": "as going forward I'd I don't know recently Amazon gateway added support as",
    "start": "2355370",
    "end": "2361970"
  },
  {
    "text": "a proxy to lambdas before that you actually had to do like transformation",
    "start": "2361970",
    "end": "2367010"
  },
  {
    "text": "on the messages that you got in recently Amazon added full integration with API",
    "start": "2367010",
    "end": "2372740"
  },
  {
    "text": "gateway and lambdas basically when you are done executing a lambda through API gateway all you are doing is sending a",
    "start": "2372740",
    "end": "2378770"
  },
  {
    "text": "response code HTTP response response codes and then that's what the end user will also get so we are going to improve",
    "start": "2378770",
    "end": "2386030"
  },
  {
    "text": "that support in our platform the primary platform that I mentioned and currently again lambda supports login to cloud",
    "start": "2386030",
    "end": "2393800"
  },
  {
    "text": "watch it's by default it does but we use plunk and other sources as well so there",
    "start": "2393800",
    "end": "2399680"
  },
  {
    "text": "are some teams who wants to use like write the logs directly to spelunk as well so more than providing that at a",
    "start": "2399680",
    "end": "2406730"
  },
  {
    "text": "platform we are probably looking at teams work with the teams to make sure we can have some connectors that go into",
    "start": "2406730",
    "end": "2412790"
  },
  {
    "text": "cloud watch into spoink as well and again this is the spike we we were we",
    "start": "2412790",
    "end": "2419000"
  },
  {
    "text": "have our hotel images that we run in our system right there is a media server",
    "start": "2419000",
    "end": "2424160"
  },
  {
    "text": "that runs in in Amazon it uses zookeeper rescuers and and those mechanisms versus",
    "start": "2424160",
    "end": "2431020"
  },
  {
    "text": "running through lambdas like whenever a new image comes in we do some processing",
    "start": "2431020",
    "end": "2436490"
  },
  {
    "text": "on top of it when when they were trying to do this in Amazon at that time VPC",
    "start": "2436490",
    "end": "2442880"
  },
  {
    "text": "support was not there for lambdas again it has been there for a while now so we",
    "start": "2442880",
    "end": "2448220"
  },
  {
    "text": "may look at doing it and also with the latest announcement that Werner did",
    "start": "2448220",
    "end": "2453470"
  },
  {
    "text": "today with the state like managing the state with lambdas and whatnot so that",
    "start": "2453470",
    "end": "2458630"
  },
  {
    "text": "really helps us again go and revisit whether we can do that with purely just lambdas versus the current zookeeper",
    "start": "2458630",
    "end": "2467150"
  },
  {
    "text": "ecosystem that we have again that with that again my intent with the talk is we",
    "start": "2467150",
    "end": "2473810"
  },
  {
    "text": "do lot of things there are there are different other use cases that we do as well I just want to share the different",
    "start": "2473810",
    "end": "2479480"
  },
  {
    "text": "patterns that we are doing at experience see if you can learn from that and use for your systems as well thanks everyone",
    "start": "2479480",
    "end": "2487180"
  },
  {
    "text": "[Applause]",
    "start": "2487180",
    "end": "2494640"
  }
]