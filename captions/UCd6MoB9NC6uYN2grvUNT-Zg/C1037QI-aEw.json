[
  {
    "start": "0",
    "end": "44000"
  },
  {
    "text": "everyone welcome to gm33 uh I see a few familiar faces in the audience quite a few new ones uh",
    "start": "359",
    "end": "7439"
  },
  {
    "text": "thank you really appreciate that you guys made the last session before the big reinvent party uh I hope to see all",
    "start": "7439",
    "end": "12719"
  },
  {
    "text": "of you there uh in my experience uh I tend to usually get the best feedback after a few drinks um my name is truth",
    "start": "12719",
    "end": "19800"
  },
  {
    "text": "to craw I'm a gaming Solutions architect um actually also I'm in Nate's team and today we'll be talking about Beyond game",
    "start": "19800",
    "end": "26599"
  },
  {
    "text": "servers load uh testing rendering and cloud gaming um I'll be talking for the first 20 minutes or so on low testing",
    "start": "26599",
    "end": "33120"
  },
  {
    "text": "and then my talk is followed by yuval's talk and he is the VP of research and development at playcast and he will be",
    "start": "33120",
    "end": "39520"
  },
  {
    "text": "talking about their platform that runs on AWS um so let's get started um so what are the traditional",
    "start": "39520",
    "end": "45600"
  },
  {
    "start": "44000",
    "end": "205000"
  },
  {
    "text": "challenges that you face um when you do load testing um one is the availability of instances uh you want to have the",
    "start": "45600",
    "end": "52079"
  },
  {
    "text": "flexibility to be able to launch as many machines uh to be able to generate as much load as possible uh if the",
    "start": "52079",
    "end": "57920"
  },
  {
    "text": "infrastructure limits the amount of machines uh that can be brought up and then U it limits the amount of load that",
    "start": "57920",
    "end": "63920"
  },
  {
    "text": "can be generated uh it does not give you a truly accurate picture uh because you tend up extrapolating those results um a",
    "start": "63920",
    "end": "70680"
  },
  {
    "text": "lot of the times um I've seen with many customers um their low test environments are actually run in black box or",
    "start": "70680",
    "end": "76479"
  },
  {
    "text": "quarantine environments and this is because of a valid reason um um it is worried about the fact that the low test",
    "start": "76479",
    "end": "82840"
  },
  {
    "text": "might be generating tons of requests and packets that might have end up uh saturating the corporate network uh if",
    "start": "82840",
    "end": "88280"
  },
  {
    "text": "these networks have intrusion detection system systems or intrusion prevention systems then the low tests might end up triggering those as well so a lot of the",
    "start": "88280",
    "end": "95320"
  },
  {
    "text": "times these low tests are actually run uh within a quarantined environment um and then you know what happens if",
    "start": "95320",
    "end": "101960"
  },
  {
    "text": "there's multiple Studios trying to launch a game during the critical holiday season um the low test",
    "start": "101960",
    "end": "107479"
  },
  {
    "text": "environment becomes a shared resource and becomes a shared critical resource that there's a lot of contention uh to",
    "start": "107479",
    "end": "113479"
  },
  {
    "text": "actually access um and then come January your game's launched everything stable you know people you know come back from",
    "start": "113479",
    "end": "118920"
  },
  {
    "text": "the holidays um everything's U stabilized that same low test",
    "start": "118920",
    "end": "123960"
  },
  {
    "text": "environment is not used a whole lot and so you have a resource that is either used quite a bit in a short period of",
    "start": "123960",
    "end": "129759"
  },
  {
    "text": "time or is not used um um you know during certain parts of the of the year",
    "start": "129759",
    "end": "136239"
  },
  {
    "text": "and then geographical load testing how do you achieve truly geographical load testing um in my past what I would do is",
    "start": "136239",
    "end": "141519"
  },
  {
    "text": "I would end up you know spoofing HTTP referral headers or spoofing IP addresses just to simulate you know the",
    "start": "141519",
    "end": "146879"
  },
  {
    "text": "number of clients that were accessing the system but what this does not tell you it does not give",
    "start": "146879",
    "end": "152480"
  },
  {
    "text": "you a truly accurate picture of latency U and if your application has any dependencies on thirdparty Services you",
    "start": "152480",
    "end": "159400"
  },
  {
    "text": "want to know how those thirdparty Services actually behave uh from truly Global traffic footprint um and then for",
    "start": "159400",
    "end": "166000"
  },
  {
    "text": "all of the above reasons uh the low test becomes complex if the low test environment is running um in a quarantined uh environment with no u",
    "start": "166000",
    "end": "173680"
  },
  {
    "text": "with restrictions on outbound traffic and if your application actually needs access to that uh to those outbound",
    "start": "173680",
    "end": "179280"
  },
  {
    "text": "services um what I would do is I would end up creating stubs and those stubs would return static data or dummy data and",
    "start": "179280",
    "end": "185720"
  },
  {
    "text": "I've already compromised the quality of my low test um if the low test database",
    "start": "185720",
    "end": "191120"
  },
  {
    "text": "um is not in sync with the production database and if there's a mismatch in the size of the data set um as well as",
    "start": "191120",
    "end": "196840"
  },
  {
    "text": "if you're making constant schema changes on your production that are not reflected in your low test database then you're not having an Apples to Apples",
    "start": "196840",
    "end": "203720"
  },
  {
    "text": "comparison um so how does AWS make load testing better um obviously you know you",
    "start": "203720",
    "end": "208920"
  },
  {
    "start": "205000",
    "end": "349000"
  },
  {
    "text": "have the choice you have a lot of instances available to you um and you have the choice of launching you know a few big beefy",
    "start": "208920",
    "end": "215319"
  },
  {
    "text": "instances so perhaps you can launch you know few C3 instances that have a lot of threads running on them or you can",
    "start": "215319",
    "end": "221319"
  },
  {
    "text": "launch you know hundreds or thousands of T2 instances and then kind of have a swarming effect uh for your low test um",
    "start": "221319",
    "end": "228360"
  },
  {
    "text": "low testing on AWS is also coste effective you can use cloud formation uh to generate a low testing stack bring up",
    "start": "228360",
    "end": "235120"
  },
  {
    "text": "your low test environment uh and then once you're done with the low test you tear down that stack and you just lather",
    "start": "235120",
    "end": "240439"
  },
  {
    "text": "rinse repeat and for the above reason resource sharing becomes really easy uh in fact resource sharing doesn't really",
    "start": "240439",
    "end": "246879"
  },
  {
    "text": "need to happen because load testing is so cheap each and every Studio can have their own cloud formation template and",
    "start": "246879",
    "end": "252760"
  },
  {
    "text": "they can launch their own load testing stack uh in parallel to the other Studios and and there's no stepping on",
    "start": "252760",
    "end": "258799"
  },
  {
    "text": "each other's toes uh when everyone's doing a load test and so the same process can be applied to multiple",
    "start": "258799",
    "end": "264280"
  },
  {
    "text": "Studios and each Studio can have a customized version of their low test stack available to them um and with AWS",
    "start": "264280",
    "end": "270960"
  },
  {
    "text": "you can actually achieve truly geographical load you have 11 regions we just announced Frankfurt you can use",
    "start": "270960",
    "end": "277520"
  },
  {
    "text": "those same cloud formation templates to launch those Stacks in you know as many regions as you choose uh and then you",
    "start": "277520",
    "end": "283000"
  },
  {
    "text": "can start uh your load test um this allows you to have reduced complexity because since there's no restrictions on",
    "start": "283000",
    "end": "289120"
  },
  {
    "text": "uh limiting outbound traffic your low test deployment actually behaves like your production deployment and there's",
    "start": "289120",
    "end": "294440"
  },
  {
    "text": "no stubs or anything I mean your low test application is the exact same uh build as um the production application",
    "start": "294440",
    "end": "301479"
  },
  {
    "text": "with perhaps a few configuration changes on maybe a low test database um data Integrity um so you can leverate",
    "start": "301479",
    "end": "308039"
  },
  {
    "text": "snapshots and your cloud formation template when it launches can refer to the last production snapshot that you",
    "start": "308039",
    "end": "313759"
  },
  {
    "text": "took if you're using RDS um you know snapshots are taken on a daily or preconfigured basis or if you have an",
    "start": "313759",
    "end": "319280"
  },
  {
    "text": "EBS backed volume for your ec2 database you can use those snapshots and then you have a parody between your low test",
    "start": "319280",
    "end": "325759"
  },
  {
    "text": "database and your production database uh and then finally um you know there's minimal impact on corporate infrastructure you can use AWS to run",
    "start": "325759",
    "end": "333199"
  },
  {
    "text": "your load test as a DMZ um it really does not step on the corporate infrastructure if you have any Services",
    "start": "333199",
    "end": "339120"
  },
  {
    "text": "uh you know critical services that are within your own data center you can still run those low tests you know by",
    "start": "339120",
    "end": "344240"
  },
  {
    "text": "launching in a VPC and then still being able to access those internal services and so what are the typical",
    "start": "344240",
    "end": "351479"
  },
  {
    "start": "349000",
    "end": "418000"
  },
  {
    "text": "steps uh when you are actually load testing uh you want to start out by um testing the individual decouple",
    "start": "351479",
    "end": "357400"
  },
  {
    "text": "components uh perhaps monolithic components where all the operations are self-contained perhaps your databases",
    "start": "357400",
    "end": "363360"
  },
  {
    "text": "your data access objects your getter STS um once you've test those then you can start moving on to testing any dependent",
    "start": "363360",
    "end": "369240"
  },
  {
    "text": "internal Services um a lot of times you know um every time I work with game companies U billing is an critical",
    "start": "369240",
    "end": "375599"
  },
  {
    "text": "internal service that a lot of games need to access digital Rights Management modules are a critical service that",
    "start": "375599",
    "end": "380720"
  },
  {
    "text": "everyone needs to access um perhaps there's an invoicing module so you want to be able to load test those as well um",
    "start": "380720",
    "end": "386919"
  },
  {
    "text": "and then you want to start testing uh the dependent external service uh perhaps your game uses uh social apis",
    "start": "386919",
    "end": "392919"
  },
  {
    "text": "perhaps you're using Facebook Google or Twitter uh you want to be able to test those as well um if you're using something like push notifications um you",
    "start": "392919",
    "end": "399880"
  },
  {
    "text": "know want to make sure that um you're testing push notifications as well um and then finally you test the entire",
    "start": "399880",
    "end": "405160"
  },
  {
    "text": "stack um you you've tested the individual components together uh but now you want to know how all those components actually um interact with",
    "start": "405160",
    "end": "411840"
  },
  {
    "text": "each other in a true endtoend",
    "start": "411840",
    "end": "415240"
  },
  {
    "text": "test clicker her help all right so let's start with testing those",
    "start": "417199",
    "end": "422360"
  },
  {
    "start": "418000",
    "end": "676000"
  },
  {
    "text": "individual decouple components those internal Services um in this scenario what if those internal services or",
    "start": "422360",
    "end": "428080"
  },
  {
    "text": "components are actually already running on AWS um in this case um low testing",
    "start": "428080",
    "end": "433280"
  },
  {
    "text": "actually becomes pretty easy um what you see is a very standard architecture uh",
    "start": "433280",
    "end": "438360"
  },
  {
    "text": "where in your internal services are within a VPC and your database is in a private subnet your uh web servers or",
    "start": "438360",
    "end": "445120"
  },
  {
    "text": "your application servers or in a public subnet um and your low testing stack um",
    "start": "445120",
    "end": "450520"
  },
  {
    "text": "you just launch your low testing stack in a separate subnet within that same VPC uh and why this is simple is because",
    "start": "450520",
    "end": "456160"
  },
  {
    "text": "by default subnet to subnet traffic uh is allowed so your load test stack can actually access not only your database",
    "start": "456160",
    "end": "462199"
  },
  {
    "text": "and a private subnet uh but it can also access you know your your resources in the public subnet um and so in this case",
    "start": "462199",
    "end": "469520"
  },
  {
    "text": "I'm showcasing u a grinder Cloud information template and I have the link to this template but this could be you",
    "start": "469520",
    "end": "475080"
  },
  {
    "text": "know a low testing stack of your choice you could be using Gatling you could be using S it could be anything um so you have a grinder console and you",
    "start": "475080",
    "end": "482400"
  },
  {
    "text": "have your grinder agents uh in an autoscaling group uh and then your metrics uh collection and graphing could",
    "start": "482400",
    "end": "488120"
  },
  {
    "text": "be something as simple as Cloud watch and so you know let's start testing uh your master database um if your master",
    "start": "488120",
    "end": "495120"
  },
  {
    "text": "database is a relational database U something like my SQL um you can use grinder for um issuing jdbc queries but",
    "start": "495120",
    "end": "502240"
  },
  {
    "text": "you can also use something like J meter uh to hammer your database with jdbc queries and then get the response times",
    "start": "502240",
    "end": "508199"
  },
  {
    "text": "back and see how it performs um if you're using uh mongod DB a lot of game companies use mongod DB uh then you",
    "start": "508199",
    "end": "514200"
  },
  {
    "text": "have the choice of using uh two tools  perf and hyen perf um sound",
    "start": "514200",
    "end": "519399"
  },
  {
    "text": "the same but you know do pretty uh separate things perf actually tests the dis iio of the server that",
    "start": "519399",
    "end": "525480"
  },
  {
    "text": " is running on and it does so by just sending randomly timed IO operations and then measuring the response times um hyphen perf is",
    "start": "525480",
    "end": "532480"
  },
  {
    "text": "actually a synthetic benchmarking tool that tests the database itself and so it performs inserts reads and updates and",
    "start": "532480",
    "end": "539079"
  },
  {
    "text": "then return returns that results back to you so when you combine the two U you end up getting a test of not only the",
    "start": "539079",
    "end": "544519"
  },
  {
    "text": "database itself but the hardware that it runs on um if you're using something like Dynamo DB because it's a provision",
    "start": "544519",
    "end": "549920"
  },
  {
    "text": "throughput model um all you end up doing is you know you set up your read WR throughput uh and you're ready to go uh",
    "start": "549920",
    "end": "556440"
  },
  {
    "text": "what we do recommend is you know you use the import export feature and copy the data into a specialized set of tables",
    "start": "556440",
    "end": "562120"
  },
  {
    "text": "that is meant just for load testing and then when you start load testing please do involve the data specialist Solutions",
    "start": "562120",
    "end": "567720"
  },
  {
    "text": "Architects so they can look at at how your tables are performing when you're running the load test and they can give",
    "start": "567720",
    "end": "572760"
  },
  {
    "text": "you guidance on how to optimize the schema make sure you know that your hash key um is um optimal and you know is",
    "start": "572760",
    "end": "579640"
  },
  {
    "text": "being spread appropriately oh sorry so then you've",
    "start": "579640",
    "end": "586560"
  },
  {
    "text": "tested your you've tested your database um and now you know you want to test uh the internal service servers that",
    "start": "586560",
    "end": "592800"
  },
  {
    "text": "actually access that database um so this is pretty simple you know you start hitting your data access objects your",
    "start": "592800",
    "end": "598240"
  },
  {
    "text": "getter Setter methods um this is a really good place to test um if you're using an object relation mapper I used",
    "start": "598240",
    "end": "603839"
  },
  {
    "text": "to use hibernate um if you want to be be able to see what's the performance overhead of an object relational mapper",
    "start": "603839",
    "end": "610320"
  },
  {
    "text": "you already have the Raw results from your database load test and now you want to see how those components that",
    "start": "610320",
    "end": "615640"
  },
  {
    "text": "interact with the database if there's any kind of Delta so this is a really good place to test",
    "start": "615640",
    "end": "621800"
  },
  {
    "text": "that um in this scenario um what if your internal services are in your existing data center um so depending on how these",
    "start": "621800",
    "end": "629680"
  },
  {
    "text": "services are going to be accessed in production uh if these services are going to be accessed in production over the internet then make sure your low",
    "start": "629680",
    "end": "635800"
  },
  {
    "text": "test uh stack is accessing is low testing this these Services across the internet or if they're being accessed",
    "start": "635800",
    "end": "641399"
  },
  {
    "text": "over Direct Connect then you have to kind of match that in your low test environment um a lot of times uh these",
    "start": "641399",
    "end": "647200"
  },
  {
    "text": "internal services are accessed over a VPN connection because these are secure services and so this is a really good",
    "start": "647200",
    "end": "653079"
  },
  {
    "text": "place to actually test low test your VPN connections ability to handle production load um if you're concerned about the",
    "start": "653079",
    "end": "659800"
  },
  {
    "text": "amount of round trips that is H that are happening between your application and uh your internal Services over a VPN",
    "start": "659800",
    "end": "665680"
  },
  {
    "text": "connection perhaps you can cash some of the data that does not change that often uh closer to your application so you",
    "start": "665680",
    "end": "672320"
  },
  {
    "text": "don't have to make those round trips over and over again and so testing external services",
    "start": "672320",
    "end": "678959"
  },
  {
    "start": "676000",
    "end": "739000"
  },
  {
    "text": "this part is usually easier to test um what you should just do is you know contact your account manager inform them",
    "start": "678959",
    "end": "685800"
  },
  {
    "text": "of your intention to low test their API um it's a very simple step but it's a very important step um what happens if",
    "start": "685800",
    "end": "691720"
  },
  {
    "text": "you don't do this chances are this third party service will Blacklist your IP and",
    "start": "691720",
    "end": "696800"
  },
  {
    "text": "then because they're thinking they're under a denal service attack and so you don't want to get it to that point so it's a very simple step but it's also",
    "start": "696800",
    "end": "703680"
  },
  {
    "text": "very important um you know give them a call make sure they're aware they might actually give you a separate set of end",
    "start": "703680",
    "end": "709399"
  },
  {
    "text": "points when you're doing your load test so you might have to make that configuration change um and then you know when you're ready um assuming",
    "start": "709399",
    "end": "716079"
  },
  {
    "text": "you're access most likely you're accessing these external apis across the the internet um you launch your stack in",
    "start": "716079",
    "end": "721320"
  },
  {
    "text": "one region another region another region uh and you hit go and then it's hammer",
    "start": "721320",
    "end": "729399"
  },
  {
    "text": "time so if you want to see me dance to this uh you'll have to buy me drinks at the party um I have to let this play out",
    "start": "729399",
    "end": "736880"
  },
  {
    "text": "for some reason but it's worth it so now um you've tested the",
    "start": "736880",
    "end": "741920"
  },
  {
    "start": "739000",
    "end": "784000"
  },
  {
    "text": "individual components you've tested the external components you want to test the entire stack um at this point you start",
    "start": "741920",
    "end": "747079"
  },
  {
    "text": "simulating entire gameplay sessions start simulating transactional workflows get an idea of how component to",
    "start": "747079",
    "end": "753120"
  },
  {
    "text": "component interaction works and this is a really good place to identify any bottlenecks within your entire system um",
    "start": "753120",
    "end": "759079"
  },
  {
    "text": "if you use profiling tools this is a really good time to use profiling tools I would use U you know J console or",
    "start": "759079",
    "end": "764160"
  },
  {
    "text": "jprofiler I come from a Java background you know look at your threads uh you know look where they're uh if there's",
    "start": "764160",
    "end": "769320"
  },
  {
    "text": "any contention um just kind of make sure that if there's any U culprits from your previous low test you know where to find",
    "start": "769320",
    "end": "775880"
  },
  {
    "text": "issues um and just kind of like get a full holistic view U of your low",
    "start": "775880",
    "end": "782199"
  },
  {
    "text": "test let's see and so what does this end up looking like um this is just a Consolidated view",
    "start": "782199",
    "end": "790399"
  },
  {
    "start": "784000",
    "end": "968000"
  },
  {
    "text": "of what I've just talked about so you have your internal services and your corporate data center you have your external apis um that you're accessing",
    "start": "790399",
    "end": "797519"
  },
  {
    "text": "over the Internet your low test deployment that is a target of your loow test you know is within a VPC and then",
    "start": "797519",
    "end": "803920"
  },
  {
    "text": "your load testers you know are in multiple regions and then actually hitting your load test deployment",
    "start": "803920",
    "end": "811120"
  },
  {
    "text": "so on a day-to-day basis what does this process look like you know you've seen the overall you know process from a high",
    "start": "811760",
    "end": "817160"
  },
  {
    "text": "level but from from a develop developer point of view you know how does this look like on a day day-to-day basis uh",
    "start": "817160",
    "end": "823360"
  },
  {
    "text": "you might have low test scripts in a code repository if you're writing scripts you know you check them in or if",
    "start": "823360",
    "end": "828639"
  },
  {
    "text": "there's already an existing list of uh scripts then you check those scripts out um and then your developers run a small",
    "start": "828639",
    "end": "834720"
  },
  {
    "text": "low test U against um against a low test deployment and this is to verify the",
    "start": "834720",
    "end": "840399"
  },
  {
    "text": "functionality of the scripts make sure everything is working as it's supposed to and then when everything is good to go you check those scripts back and then",
    "start": "840399",
    "end": "846880"
  },
  {
    "text": "upload those finished scenarios onto S3 at the same time um on the right hand",
    "start": "846880",
    "end": "852920"
  },
  {
    "text": "side uh your lowest stack is being launched uh via cloud formation um use your favorite configuration management",
    "start": "852920",
    "end": "859120"
  },
  {
    "text": "server of choice Chef puppet you know really depends on what kind of shop you have uh push that configuration for",
    "start": "859120",
    "end": "866360"
  },
  {
    "text": "again depends on if you're using Gatling if you're using grinder if you're using S just push that configuration um in",
    "start": "866360",
    "end": "872680"
  },
  {
    "text": "this case grinder you know will pick up pick up the scenarios from S3 and then",
    "start": "872680",
    "end": "878600"
  },
  {
    "text": "you actually start running a full scale low test and then at the same time you're sending data to something like",
    "start": "878600",
    "end": "884720"
  },
  {
    "text": "EMR plus red shift to get you know graphical analyses of how your load tests are doing you can use graphite or Splunk or whatever your favorite",
    "start": "884720",
    "end": "890800"
  },
  {
    "text": "graphing tool is and then upload those Raw results um onto S3 because you want",
    "start": "890800",
    "end": "896199"
  },
  {
    "text": "to have historical data when comparing future load test tests you can apply a similar scenario",
    "start": "896199",
    "end": "903360"
  },
  {
    "text": "um to soak testing um does everyone know the difference between a soak test and a low test who doesn't know the difference",
    "start": "903360",
    "end": "910839"
  },
  {
    "text": "okay I I'll just go over it quickly so a low test is meant to break your system and it runs in a more or less you know",
    "start": "910839",
    "end": "916920"
  },
  {
    "text": "in a very short period of time a soak test is actually intended to test the system's functionality over an extended",
    "start": "916920",
    "end": "922399"
  },
  {
    "text": "period of time so you could be running it for days you know really a predefined period because it's a really good point",
    "start": "922399",
    "end": "927800"
  },
  {
    "text": "to like identify any memory um any any any issues that you might get over long running processes and so let's",
    "start": "927800",
    "end": "934720"
  },
  {
    "text": "say you're using a similar architecture for running a soak test um this time we're going to leverage U the new",
    "start": "934720",
    "end": "940399"
  },
  {
    "text": "feature that we launched with S3 notifications let's say your developer pushes a new script um for soap test S3",
    "start": "940399",
    "end": "947680"
  },
  {
    "text": "can actually send a notification to your load test stack your load test stack then has two choices it can either",
    "start": "947680",
    "end": "953600"
  },
  {
    "text": "automatically download the update scenarios and restart um the test or it can notify your load test or soak",
    "start": "953600",
    "end": "959920"
  },
  {
    "text": "testing team uh team and basically tell them that know there's a new scenario do you want to run an updated",
    "start": "959920",
    "end": "967079"
  },
  {
    "start": "968000",
    "end": "1096000"
  },
  {
    "text": "scenario and so you know here's some final thoughts um on what we just talked",
    "start": "968160",
    "end": "973639"
  },
  {
    "text": "about you want to automate everything um use cloud formation um it gives you the",
    "start": "973639",
    "end": "979440"
  },
  {
    "text": "ability to launch Stacks very easily across multiple regions um use your favorite configuration management tool",
    "start": "979440",
    "end": "985680"
  },
  {
    "text": "um you know make sure that you're using combining the two to to make your life really really easy um record everything",
    "start": "985680",
    "end": "992199"
  },
  {
    "text": "um you know data is key U Storage is so cheap nowadays there's no reason not to keep historical data um I've heard you",
    "start": "992199",
    "end": "999000"
  },
  {
    "text": "know quite a bit uh when people say it's better to more often than not it's better to run a simple analyses on a",
    "start": "999000",
    "end": "1004600"
  },
  {
    "text": "large data set than a very complicated analyses on a small data set um and then",
    "start": "1004600",
    "end": "1009800"
  },
  {
    "text": "save money um use um use cloud information only you know use your low",
    "start": "1009800",
    "end": "1015199"
  },
  {
    "text": "testing stack when you need to tear it down when you're not using it um leverage spot instances uh if you've",
    "start": "1015199",
    "end": "1021000"
  },
  {
    "text": "automated everything U make sure that you're running your load tests um in the odd hours of the night so you can you",
    "start": "1021000",
    "end": "1027160"
  },
  {
    "text": "know get guaranteed spot instances this will make sure that your low testing environment is actually pretty cost- effective um if you're using elbs as a",
    "start": "1027160",
    "end": "1034480"
  },
  {
    "text": "front for your application um connect with the elb team or your technical account manager or account manager and",
    "start": "1034480",
    "end": "1040280"
  },
  {
    "text": "make sure that they're aware that you're going to be doing a load test so they can pre-warm those elbs um this is a",
    "start": "1040280",
    "end": "1045600"
  },
  {
    "text": "link to the cloud formation template uh for the grinder load testing stack um this is not an official template but",
    "start": "1045600",
    "end": "1050640"
  },
  {
    "text": "it's really really well documented and you know it's a really good place to get started if you just want to you know try",
    "start": "1050640",
    "end": "1056240"
  },
  {
    "text": "something really quickly really really well documented um and and you know the",
    "start": "1056240",
    "end": "1061760"
  },
  {
    "text": "final and the most important step is you still have to hope in pray at launch because all of these tools are just",
    "start": "1061760",
    "end": "1068440"
  },
  {
    "text": "meant to prepare you for what is to come um you know it's meant to prepare you to identify you know any issues in the end",
    "start": "1068440",
    "end": "1074960"
  },
  {
    "text": "experien is the best teacher and the more and more you do this you know the more you you'll get better at it um but",
    "start": "1074960",
    "end": "1081039"
  },
  {
    "text": "you know these tools are available to you make sure you use them um and have fun as much fun as one can have doing a",
    "start": "1081039",
    "end": "1086919"
  },
  {
    "text": "low test thank you everyone and now you evolve from playcast thank",
    "start": "1086919",
    "end": "1092340"
  },
  {
    "text": "[Applause] you okay so uh thanks for coming uh I",
    "start": "1092340",
    "end": "1100240"
  },
  {
    "start": "1096000",
    "end": "1215000"
  },
  {
    "text": "want to talk with you today uh about Cloud stream about cloud gaming and how",
    "start": "1100240",
    "end": "1105440"
  },
  {
    "text": "playcast actually moved from a private cloud from one PR Cloud to AWS and leverage the ability of AWS to be",
    "start": "1105440",
    "end": "1113240"
  },
  {
    "text": "elastic uh let's start with what playcast is doing so playcast is a cloud gaming company we take a game and we run",
    "start": "1113240",
    "end": "1119280"
  },
  {
    "text": "it on the server we don't run the game on the client we run it on the server uh the game is run and rendered on the",
    "start": "1119280",
    "end": "1124919"
  },
  {
    "text": "server and then we stream it as video in real time uh the frames are being sent",
    "start": "1124919",
    "end": "1130240"
  },
  {
    "text": "as encoded video to an end device can be a TV a settle box whatever device you like um and the game pad is connected to",
    "start": "1130240",
    "end": "1138400"
  },
  {
    "text": "that device device so the game pad command will be sent back to the server and by that we basically bring a conso",
    "start": "1138400",
    "end": "1145000"
  },
  {
    "text": "like experience to any device TV setle Box Etc uh not only we run one game uh",
    "start": "1145000",
    "end": "1151960"
  },
  {
    "text": "on the server we actually run multiple games so we have the ability to run multiple games uh in parallel uh on the",
    "start": "1151960",
    "end": "1158480"
  },
  {
    "text": "server we we are running many servers and we have a complete management system so the manag system enables us to decide",
    "start": "1158480",
    "end": "1165400"
  },
  {
    "text": "which game to run on which server uh where where whether the system is loaded Etc to col data what people are playing",
    "start": "1165400",
    "end": "1173080"
  },
  {
    "text": "when are they playing and make decision according to that um so we don't develop games we actually",
    "start": "1173080",
    "end": "1180320"
  },
  {
    "text": "provide a platform uh that with that we can deploy games uh using cloud gaming",
    "start": "1180320",
    "end": "1186840"
  },
  {
    "text": "so we have agreement with many Publishers we actually have today over",
    "start": "1186840",
    "end": "1191880"
  },
  {
    "text": "100 titles uh on our uh platform uh you can see the list of the Publishers we",
    "start": "1191880",
    "end": "1197280"
  },
  {
    "text": "have more publishers uh actually it's very interesting today we released a game from kunami which is P 15 both on",
    "start": "1197280",
    "end": "1204919"
  },
  {
    "text": "Street date it is already it is also on our service so today a game that was sold to the public is also on our",
    "start": "1204919",
    "end": "1211720"
  },
  {
    "text": "service so it's very nice um so today we operate in three",
    "start": "1211720",
    "end": "1218600"
  },
  {
    "text": "countries France Portugal and Korea the way the service is working there is by",
    "start": "1218600",
    "end": "1225000"
  },
  {
    "text": "having servers on premise bermal servers on premise on in those operators data",
    "start": "1225000",
    "end": "1231480"
  },
  {
    "text": "centers so basically when uh a customer has a setle box at home and he switched",
    "start": "1231480",
    "end": "1237159"
  },
  {
    "text": "to a certain channel on the TV he can get a cloud gaming service powered by",
    "start": "1237159",
    "end": "1242600"
  },
  {
    "text": "us um several months ago we decided we want to go over the top so we took uh the",
    "start": "1242600",
    "end": "1251240"
  },
  {
    "text": "Ouya box and launched uh a trial service over the top when we wanted to do that",
    "start": "1251240",
    "end": "1257240"
  },
  {
    "text": "we actually thought how we going to do that because we're going to need to deploy many servers and have a large",
    "start": "1257240",
    "end": "1264760"
  },
  {
    "text": "investment in capex for those servers so we wanted to look on how to do that in a",
    "start": "1264760",
    "end": "1270520"
  },
  {
    "text": "more uh efficient way in terms of the cost so this is when we looked into AWS",
    "start": "1270520",
    "end": "1277440"
  },
  {
    "text": "and we actually launched this service using AWS and it is a life service today",
    "start": "1277440",
    "end": "1283440"
  },
  {
    "text": "operating in uh North America and Europe so let me show you how this uh service",
    "start": "1283440",
    "end": "1291880"
  },
  {
    "start": "1288000",
    "end": "1439000"
  },
  {
    "text": "looks like uh I'm going to show you now uh a real time demo thank you drew um",
    "start": "1291880",
    "end": "1298919"
  },
  {
    "text": "what you see here this is the fun part when I need to talk and play together so I hope I make it uh what you see here is",
    "start": "1298919",
    "end": "1307559"
  },
  {
    "text": "basically a game which is running on AWS in San Francisco uh we stream it in real",
    "start": "1307559",
    "end": "1314120"
  },
  {
    "text": "time playing this is me right see I'm stopping it stops so I'm playing and",
    "start": "1314120",
    "end": "1319679"
  },
  {
    "text": "this is a game being streamed in HD 720p uh in return from San Francisco and I'm",
    "start": "1319679",
    "end": "1326720"
  },
  {
    "text": "playing that on on the system so all I have here is a game pad connected to a",
    "start": "1326720",
    "end": "1331880"
  },
  {
    "text": "very uh small device an a device that doesn't have any processing capability",
    "start": "1331880",
    "end": "1337880"
  },
  {
    "text": "to play this to to run this to this game this is a tripa game and you can see that can actually enjoy a triaa game on",
    "start": "1337880",
    "end": "1345520"
  },
  {
    "text": "such a device uh and again this is from San Francisco",
    "start": "1345520",
    "end": "1352039"
  },
  {
    "text": "uh on G2 instance running in R so what I because this is cloud gaming I can also",
    "start": "1352039",
    "end": "1360200"
  },
  {
    "text": "pause the game I can exit the game and then I can have oops exit again yeah and",
    "start": "1360200",
    "end": "1367840"
  },
  {
    "text": "I can now have a whole catalog being brought to me again everything is streamed from G2 so in a sense it's",
    "start": "1367840",
    "end": "1375000"
  },
  {
    "text": "another game being uh running on the service so now I have a catalog that I",
    "start": "1375000",
    "end": "1380880"
  },
  {
    "text": "can browse the the games that are available uh this is a UI which is uh was developed by us and it is a stream",
    "start": "1380880",
    "end": "1387600"
  },
  {
    "text": "UI nothing is running on on the box itself and now will choose a different game let's see",
    "start": "1387600",
    "end": "1394039"
  },
  {
    "text": "um so let's take this one so I launched the spram to cell game um and now the",
    "start": "1394039",
    "end": "1401279"
  },
  {
    "text": "same process is happening so the system allocate resources for this game this game is been uh launched on an instance",
    "start": "1401279",
    "end": "1409120"
  },
  {
    "text": "uh there might be other games running on that instance as well and I'm going to get the stream in real time and you see",
    "start": "1409120",
    "end": "1414840"
  },
  {
    "text": "the how quickly the game loads on the system and how quickly you can start playing the",
    "start": "1414840",
    "end": "1421240"
  },
  {
    "text": "[Music] game yeah so we can continue playing",
    "start": "1421600",
    "end": "1427039"
  },
  {
    "text": "like the end so let's stop it here okay",
    "start": "1427039",
    "end": "1434520"
  },
  {
    "text": "um yeah so how does it works",
    "start": "1434520",
    "end": "1439640"
  },
  {
    "start": "1439000",
    "end": "1567000"
  },
  {
    "text": "uh we wanted to move from a private Cloud to AWS and we looked into what",
    "start": "1439640",
    "end": "1446279"
  },
  {
    "text": "kind of an AWS components do we need in order to drive such a service so the AWS",
    "start": "1446279",
    "end": "1452480"
  },
  {
    "text": "components that we are using in in in our service are first the G2 so the G2",
    "start": "1452480",
    "end": "1459919"
  },
  {
    "text": "is the streaming server that on that server we actually run the game render",
    "start": "1459919",
    "end": "1465200"
  },
  {
    "text": "it and stream it as video uh the G2 has an Nvidia grid GPU that we are using uh",
    "start": "1465200",
    "end": "1473559"
  },
  {
    "text": "and and it is basically the foundation of running the game the G2 has a 60 gab",
    "start": "1473559",
    "end": "1481039"
  },
  {
    "text": "of SSD now if you take a collection of game you saw in in my demo that we have",
    "start": "1481039",
    "end": "1486640"
  },
  {
    "text": "like tens of games or even hundreds of game if you try to store them all on 60 gigabyte dis uh you came you're come to",
    "start": "1486640",
    "end": "1494880"
  },
  {
    "text": "a space problem so in order to solve that we actually use EBS so we have we",
    "start": "1494880",
    "end": "1501159"
  },
  {
    "text": "attach an EBS to the instance and we store the games there when you're doing cloud gaming you",
    "start": "1501159",
    "end": "1508399"
  },
  {
    "text": "want to give the user the ability to return to the game from the same location he started so you need to save",
    "start": "1508399",
    "end": "1516120"
  },
  {
    "text": "uh uh the the progress and for that we use S3 and I will explain in a minute",
    "start": "1516120",
    "end": "1522240"
  },
  {
    "text": "why we chose to use S3 for that so we use S3 to store this the the game progress and we take um everything and",
    "start": "1522240",
    "end": "1531559"
  },
  {
    "text": "actually bundle that within an Ami so using an Ami we can actually instantiate",
    "start": "1531559",
    "end": "1538000"
  },
  {
    "text": "uh the whole uh system the whole instances on the Fly uh since we are launching instances",
    "start": "1538000",
    "end": "1547120"
  },
  {
    "text": "and termina them on the Fly we need to use the API so we are using the AWS API",
    "start": "1547120",
    "end": "1553240"
  },
  {
    "text": "in order to instantiate instances to terminate them and and and to have the",
    "start": "1553240",
    "end": "1559760"
  },
  {
    "text": "system manage that so we are using the the net apis for",
    "start": "1559760",
    "end": "1565480"
  },
  {
    "text": "that so how does the architecture looks like what is the flow when you take all those",
    "start": "1565480",
    "end": "1571840"
  },
  {
    "start": "1567000",
    "end": "1720000"
  },
  {
    "text": "components how do you connect them together in order to have a complete",
    "start": "1571840",
    "end": "1576919"
  },
  {
    "text": "system so let's look on this uh flow so here we have the management system and",
    "start": "1576919",
    "end": "1583760"
  },
  {
    "text": "there is a g a streaming a game streaming server uh are running with",
    "start": "1583760",
    "end": "1589919"
  },
  {
    "text": "gains and let's assume that at some at some point in time there is a lack of space you cannot",
    "start": "1589919",
    "end": "1598320"
  },
  {
    "text": "run more games on that server so at that point in time we actually uh instantiate a new G2",
    "start": "1598320",
    "end": "1606760"
  },
  {
    "text": "instance and an EBS so now we have those components up in the air running but",
    "start": "1606760",
    "end": "1612880"
  },
  {
    "text": "there are still you cannot still use them you need to connect them so basically using an Amit",
    "start": "1612880",
    "end": "1618880"
  },
  {
    "text": "we connect them the Ami not only connects them but but using the Ami we actually have immediately all the games",
    "start": "1618880",
    "end": "1626480"
  },
  {
    "text": "stored on the EBS so we don't need to copy everything again and again it's instantly there uh not only the games",
    "start": "1626480",
    "end": "1634520"
  },
  {
    "text": "are instantly there but also the software stack of our system is being uh",
    "start": "1634520",
    "end": "1641760"
  },
  {
    "text": "loaded on the G2 and now uh the streaming server can be used in order to",
    "start": "1641760",
    "end": "1648240"
  },
  {
    "text": "stream the game and we can start playing so this is actually what we saw before when you saw the demo actually uh this",
    "start": "1648240",
    "end": "1656159"
  },
  {
    "text": "it was a process that was happening um and we continue playing but",
    "start": "1656159",
    "end": "1662039"
  },
  {
    "text": "what happens when I stop playing so I stopped playing or the game is game over",
    "start": "1662039",
    "end": "1667960"
  },
  {
    "text": "uh now we need to store the data we need to store the data of the game so that",
    "start": "1667960",
    "end": "1674120"
  },
  {
    "text": "when I will play it next time I will continue from the exact same location my progress in the game so why not just",
    "start": "1674120",
    "end": "1682519"
  },
  {
    "text": "keep it on the EBS so if you keep it on the EBS there might be a case where that",
    "start": "1682519",
    "end": "1688279"
  },
  {
    "text": "instance is being terminated because there is no need for the instance at the moment because is this is a uh there is",
    "start": "1688279",
    "end": "1695080"
  },
  {
    "text": "no load on the system so we determined the instance so if we keep the progress on the EBS we will lose the data and",
    "start": "1695080",
    "end": "1703159"
  },
  {
    "text": "this is not something we want to do so we store it on DS3 and once we store it on DS3 basically available to all the",
    "start": "1703159",
    "end": "1710080"
  },
  {
    "text": "next session of that user running that game so I can terminate the instance now",
    "start": "1710080",
    "end": "1717039"
  },
  {
    "text": "and I still have the data so when you take such a complex",
    "start": "1717039",
    "end": "1724880"
  },
  {
    "start": "1720000",
    "end": "1780000"
  },
  {
    "text": "Service uh a a very performance demanding service move it from a BAL uh",
    "start": "1724880",
    "end": "1731279"
  },
  {
    "text": "infrastructure to the cloud what are the challenges that you're starting to face so the first challenge is",
    "start": "1731279",
    "end": "1738559"
  },
  {
    "text": "performance we are running games this are AAA games running in the cloud uh",
    "start": "1738559",
    "end": "1745120"
  },
  {
    "text": "can we get the same performance we are getting on a BAL server from the virtual",
    "start": "1745120",
    "end": "1752600"
  },
  {
    "text": "server so that's the first Challenge and the Second Challenge is the throughput",
    "start": "1752600",
    "end": "1758120"
  },
  {
    "text": "so we are running many games on an instance iio uh operations can the",
    "start": "1758120",
    "end": "1765240"
  },
  {
    "text": "EBS uh give througho performance as if it was a local disc so as you can",
    "start": "1765240",
    "end": "1772159"
  },
  {
    "text": "imagine because you saw it's working the answer is yes but let's see how we got",
    "start": "1772159",
    "end": "1777320"
  },
  {
    "text": "into that conclusion so let's start with the CPU comparison so what you see here in the",
    "start": "1777320",
    "end": "1783799"
  },
  {
    "start": "1780000",
    "end": "1905000"
  },
  {
    "text": "graph is actually the CPU usage of Dirt 3 that's the game I actually uh played",
    "start": "1783799",
    "end": "1790840"
  },
  {
    "text": "before and you can see the CPU usage both on the uh G two instance and",
    "start": "1790840",
    "end": "1799840"
  },
  {
    "text": "on a BAL server what you can see that the the uses of the CPU is almost identical",
    "start": "1799840",
    "end": "1807600"
  },
  {
    "text": "there may be slight changes so in terms of performance the G2 give the",
    "start": "1807600",
    "end": "1813600"
  },
  {
    "text": "performance that you need in order to run the game you don't have any penalty by running the game on a virtual server",
    "start": "1813600",
    "end": "1821919"
  },
  {
    "text": "so this is great but what about the GPU so the G2",
    "start": "1821919",
    "end": "1827799"
  },
  {
    "text": "has has an Nvidia grid the grid uh card is the base is GPU that you are using on",
    "start": "1827799",
    "end": "1834440"
  },
  {
    "text": "the G2 uh what you see here in the graph is a",
    "start": "1834440",
    "end": "1839840"
  },
  {
    "text": "histogram it show we took actually the dirt three game and we played it we",
    "start": "1839840",
    "end": "1844960"
  },
  {
    "text": "played it on a b metal server on a physical server and on the G2 and then",
    "start": "1844960",
    "end": "1850640"
  },
  {
    "text": "we measured how much time does it take to render a frame so when the game sends",
    "start": "1850640",
    "end": "1856919"
  },
  {
    "text": "a frame to the GPU it takes time to render the frame and then you get the frame back and you can",
    "start": "1856919",
    "end": "1862039"
  },
  {
    "text": "encode it and send it this video so how much time does it take to render a frame",
    "start": "1862039",
    "end": "1867120"
  },
  {
    "text": "and this is what this graph illustrates so you can see that the majority of the frames for the three are around 4.5",
    "start": "1867120",
    "end": "1876279"
  },
  {
    "text": "milliseconds and you can see that it doesn't matter whether this is a G2",
    "start": "1876279",
    "end": "1881559"
  },
  {
    "text": "which is a virtualized environment or it's a a beral server in both cases you",
    "start": "1881559",
    "end": "1889200"
  },
  {
    "text": "can achieve the GPU performance that you need uh from the G2 so running a game on",
    "start": "1889200",
    "end": "1896039"
  },
  {
    "text": "a G2 doesn't imply any performance overhead from the GPU",
    "start": "1896039",
    "end": "1904398"
  },
  {
    "text": "side the last part of the challenge is the the the",
    "start": "1904799",
    "end": "1910960"
  },
  {
    "start": "1905000",
    "end": "1989000"
  },
  {
    "text": "EBS so gp2 as you know is the SSD based",
    "start": "1910960",
    "end": "1916679"
  },
  {
    "text": "EBS uh that gives a very very high throughput in terms of Pi",
    "start": "1916679",
    "end": "1922399"
  },
  {
    "text": "Ops uh and the question is whether that EBS can serve as a dis as if it was a",
    "start": "1922399",
    "end": "1931120"
  },
  {
    "text": "local disc for the server so what you see here is a graph that illustrates the",
    "start": "1931120",
    "end": "1937240"
  },
  {
    "text": "number of iops which are uh measured on",
    "start": "1937240",
    "end": "1943080"
  },
  {
    "text": "uh the system on a G2 instance and Debs what you can see that we don't get",
    "start": "1943080",
    "end": "1950200"
  },
  {
    "text": "any uh overhead or we don't get into a peck Point even though we are running",
    "start": "1950200",
    "end": "1956320"
  },
  {
    "text": "multiple games on the instance so what you see here is the pi",
    "start": "1956320",
    "end": "1961840"
  },
  {
    "text": "Ops that the system requires at each point in time and we don't reach any",
    "start": "1961840",
    "end": "1968440"
  },
  {
    "text": "pics and the EBS actually gives us the same performance that we would achieve",
    "start": "1968440",
    "end": "1974159"
  },
  {
    "text": "from a local hard disk so when you talk about gaming gaming game games do a lot of iio",
    "start": "1974159",
    "end": "1980200"
  },
  {
    "text": "operations and as you can see running them in the cloud using an EBS can",
    "start": "1980200",
    "end": "1988360"
  },
  {
    "start": "1989000",
    "end": "2112000"
  },
  {
    "text": "work so now we have a system that we can run in the cloud uh and this gives a lot of",
    "start": "1990240",
    "end": "1998320"
  },
  {
    "text": "Advantage because the cloud is elastic and when you look on cloud gaming and",
    "start": "1998320",
    "end": "2004360"
  },
  {
    "text": "this is data from our existing servers uh in France Korea and Portugal and you",
    "start": "2004360",
    "end": "2011519"
  },
  {
    "text": "can see that actually a cloud gaming service behaves in terms of the",
    "start": "2011519",
    "end": "2017519"
  },
  {
    "text": "consumption the users's consumption the same way any other TV servers uh uh uh",
    "start": "2017519",
    "end": "2023399"
  },
  {
    "text": "behaves like so as you see here the play time that people when when people are",
    "start": "2023399",
    "end": "2029440"
  },
  {
    "text": "playing they're playing uh during peak hours so there are peak hours and low hours and this is exactly where AWS",
    "start": "2029440",
    "end": "2035840"
  },
  {
    "text": "helps us so once we start to reach to a point of the demand we can instantiate",
    "start": "2035840",
    "end": "2042399"
  },
  {
    "text": "more instances once the demand go down we can terminate instances so AWS basically gave us the",
    "start": "2042399",
    "end": "2050960"
  },
  {
    "text": "possibility to manage that and be much more cost efficient we don't need to have servers up and running waiting for",
    "start": "2050960",
    "end": "2059599"
  },
  {
    "text": "a demand we just instantiate them on the Fly um and the way we do to and the way",
    "start": "2059599",
    "end": "2066919"
  },
  {
    "text": "we manage that is Again by using the apis to instantiate the instance set the am",
    "start": "2066919",
    "end": "2075240"
  },
  {
    "text": "connect the EBS Etc what we need to note is that when",
    "start": "2075240",
    "end": "2080679"
  },
  {
    "text": "you launch an E when you launch an instance it can take some time so it can",
    "start": "2080679",
    "end": "2086638"
  },
  {
    "text": "take up to several minutes and that needs to be taken into account when you",
    "start": "2086639",
    "end": "2092599"
  },
  {
    "text": "design some kind of a load balancer system so our system doesn't use the AWS",
    "start": "2092599",
    "end": "2097720"
  },
  {
    "text": "load balancer we actually created uh our proprietary load balancer that uh uh",
    "start": "2097720",
    "end": "2103760"
  },
  {
    "text": "takes into account what would be the demand and we'll instantiate the instances",
    "start": "2103760",
    "end": "2111000"
  },
  {
    "text": "accordingly so what would we see today so first of all we saw that you can move",
    "start": "2111000",
    "end": "2117320"
  },
  {
    "start": "2112000",
    "end": "2288000"
  },
  {
    "text": "from a private Cloud to the public Cloud to AWS and while everybody knows that it",
    "start": "2117320",
    "end": "2122640"
  },
  {
    "text": "doesn't seem trivial for gaming gaming seem to be a a unique",
    "start": "2122640",
    "end": "2128160"
  },
  {
    "text": "workload that it is not river that you can move it to the cloud so we showed you that we can do that on the cloud uh",
    "start": "2128160",
    "end": "2136480"
  },
  {
    "text": "working with AWS enables us to deploy global Service without the need to",
    "start": "2136480",
    "end": "2143119"
  },
  {
    "text": "invest into uh uh expensive Hardware so we can just go there launch the service",
    "start": "2143119",
    "end": "2149920"
  },
  {
    "text": "and if there is a demand we launch more instances and we scale as we grow we don't need to invest any any hardware in",
    "start": "2149920",
    "end": "2157640"
  },
  {
    "text": "investment in that when we are doing cloud gaming on AWS you're using not only the G2 as an",
    "start": "2157640",
    "end": "2166680"
  },
  {
    "text": "instance but you're using many components so we are using G2 uh in",
    "start": "2166680",
    "end": "2172200"
  },
  {
    "text": "order to run the game and stream it we are using e EBS because the G2 has only",
    "start": "2172200",
    "end": "2178520"
  },
  {
    "text": "60 gab of SSD and using the EBS we actually get uh a a local disc",
    "start": "2178520",
    "end": "2185760"
  },
  {
    "text": "performance attached to the instrument uh we are using Amazon F3 that enables",
    "start": "2185760",
    "end": "2191240"
  },
  {
    "text": "us to manage and store the progress of the users in the cloud and we can get",
    "start": "2191240",
    "end": "2197599"
  },
  {
    "text": "that user progress when no matter where the user is playing and no matter from",
    "start": "2197599",
    "end": "2203160"
  },
  {
    "text": "which device and we use the Ami in order to bundle everything and instantiate the",
    "start": "2203160",
    "end": "2210920"
  },
  {
    "text": "instances on the fly without the need to set it up every time from scratch copy the data Etc so the games are instant",
    "start": "2210920",
    "end": "2219079"
  },
  {
    "text": "instantly being loaded on the EBS and the software stack is being loaded on the",
    "start": "2219079",
    "end": "2225119"
  },
  {
    "text": "instance and performance so performance is critical for cloud gaming and as you",
    "start": "2225119",
    "end": "2230480"
  },
  {
    "text": "saw you don't get an overhead or the overhead is very minimal uh you can run",
    "start": "2230480",
    "end": "2236240"
  },
  {
    "text": "games on G2 on AWS and get the performance as if it was a bur metal uh",
    "start": "2236240",
    "end": "2243160"
  },
  {
    "text": "server which is not a trivial thing to do and last elasticity so using AWS when",
    "start": "2243160",
    "end": "2250359"
  },
  {
    "text": "you run a Ser a service which has a peak time pattern usage okay and hours where",
    "start": "2250359",
    "end": "2257400"
  },
  {
    "text": "you need more servers and hours when you need less servers this is where you get the benefit we get the benefit from AWS",
    "start": "2257400",
    "end": "2264920"
  },
  {
    "text": "it enable us to be elastic and and to scale as we grow according to the hourly",
    "start": "2264920",
    "end": "2270800"
  },
  {
    "text": "demand and be much more cost efficient so uh with that I want thank",
    "start": "2270800",
    "end": "2277839"
  },
  {
    "text": "you we want to thank you thanks everyone uh thank you very much uh this is the link for give us feedback if anybody",
    "start": "2277839",
    "end": "2283680"
  },
  {
    "text": "wants to play you're welcome and thank you",
    "start": "2283680",
    "end": "2288880"
  }
]