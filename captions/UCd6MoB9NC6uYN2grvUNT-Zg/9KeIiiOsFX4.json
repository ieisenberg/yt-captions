[
  {
    "text": "What's up everyone? Today's episode \nis all about machine learning,",
    "start": "0",
    "end": "3709"
  },
  {
    "text": "specifically computer vision. ",
    "start": "3709",
    "end": "5709"
  },
  {
    "text": "If you're looking to bring computer vision\nto your application in the cloud,",
    "start": "5709",
    "end": "9136"
  },
  {
    "text": "stick around, this episode is for you. ",
    "start": "9136",
    "end": "11954"
  },
  {
    "text": "Our guest for this episode, Mo, \nis based in the UK",
    "start": "19954",
    "end": "23396"
  },
  {
    "text": "and is the founder and CEO \nof Satis.AI.",
    "start": "23396",
    "end": "26586"
  },
  {
    "text": "SATIS.AI is a full stack artificial \nintelligence operating system for kitchens.",
    "start": "26586",
    "end": "32275"
  },
  {
    "text": "Mo has a PhD in formal methods, \na branch of computer science ",
    "start": "32275",
    "end": "36661"
  },
  {
    "text": "from the University of Manchester. ",
    "start": "36661",
    "end": "38898"
  },
  {
    "text": "Let's hear from Mo.",
    "start": "38898",
    "end": "40496"
  },
  {
    "text": "On the technology side, we deployed \na set of hardware to each kitchen,",
    "start": "42323",
    "end": "46939"
  },
  {
    "text": "which is going to be\na couple of cameras with units",
    "start": "46939",
    "end": "51107"
  },
  {
    "text": "which are piping this picture \ninitially to the cloud,",
    "start": "51108",
    "end": "54613"
  },
  {
    "text": "and eventually to some\nEdge GPU-powered device",
    "start": "54613",
    "end": "59337"
  },
  {
    "text": "for the videos to be interpreted \nand then produce events,",
    "start": "59338",
    "end": "64180"
  },
  {
    "text": "which we are gathering all together ",
    "start": "64180",
    "end": "66187"
  },
  {
    "text": "and this digital twin state \nis getting evolved",
    "start": "66187",
    "end": "70178"
  },
  {
    "text": "through the events\nthat are being piped to us",
    "start": "70179",
    "end": "73452"
  },
  {
    "text": "as a result of evaluating\nthe picture or possible sensors",
    "start": "73452",
    "end": "77881"
  },
  {
    "text": "that we are going to install \nin the kitchen ",
    "start": "77881",
    "end": "80405"
  },
  {
    "text": "as well as some sort of a \nstructured data that is coming to us",
    "start": "80405",
    "end": "83233"
  },
  {
    "text": "like the order data, or equipment, \nIoT kind of feedback from the devices. ",
    "start": "83233",
    "end": "89652"
  },
  {
    "text": "Mo wants to build an application ",
    "start": "91252",
    "end": "93739"
  },
  {
    "text": "that helps line cooks place \nthe right food items",
    "start": "93739",
    "end": "96768"
  },
  {
    "text": "into the correct customer's \ndelivery bag. ",
    "start": "96768",
    "end": "99138"
  },
  {
    "text": "I'll also share tips for you to build \nyour app with computer vision using AWS.",
    "start": "99138",
    "end": "104280"
  },
  {
    "text": "Let's cook up a computer vision \nsolution for Satis.AI.",
    "start": "104280",
    "end": "107664"
  },
  {
    "text": "I'm going to put an order in for \na Manchester cheeseburger, ",
    "start": "108423",
    "end": "111970"
  },
  {
    "text": "with Canary Wharf fries \nand a London Swirl.",
    "start": "112452",
    "end": "115850"
  },
  {
    "text": "The solution for Satis.AI will be \nconnected to the restaurant's",
    "start": "116906",
    "end": "120577"
  },
  {
    "text": "point of sale system,\nwhich will capture my order.",
    "start": "120578",
    "end": "123677"
  },
  {
    "text": "Next, the line cook will get a new bag.",
    "start": "123677",
    "end": "126915"
  },
  {
    "text": "And tag it with the order number \nand then place that on a countertop.",
    "start": "127615",
    "end": "132386"
  },
  {
    "text": "In Mo's case,\nhe doesn't just want to know",
    "start": "132386",
    "end": "134998"
  },
  {
    "text": "if the item is\na hamburger or french fries,",
    "start": "134998",
    "end": "137456"
  },
  {
    "text": "which can be detected with existing \ncomputer vision solutions like",
    "start": "137456",
    "end": "140586"
  },
  {
    "text": "Amazon Rekognition,",
    "start": "140587",
    "end": "141963"
  },
  {
    "text": "he needs to know if it's\nthe correct item off the menu.",
    "start": "141963",
    "end": "144987"
  },
  {
    "text": "Is it the signature Manchester burger \nwith the Canary Wharf fries, ",
    "start": "144987",
    "end": "149084"
  },
  {
    "text": "or is it the Liverpool double bacon burger \nwith extra large Canary Wharf fries? ",
    "start": "149084",
    "end": "154086"
  },
  {
    "text": "There we go.",
    "start": "159945",
    "end": "161347"
  },
  {
    "text": "This requires building\na specific model with the right spice.",
    "start": "161779",
    "end": "165967"
  },
  {
    "text": "Is it oregano? No!",
    "start": "165967",
    "end": "168120"
  },
  {
    "text": "Pepper?",
    "start": "168120",
    "end": "169323"
  },
  {
    "text": "No!",
    "start": "169323",
    "end": "170492"
  },
  {
    "text": "Oh, wait that's it... sage!",
    "start": "171490",
    "end": "174647"
  },
  {
    "text": "Amazon SageMaker provides \na single solution to train, ",
    "start": "175162",
    "end": "178740"
  },
  {
    "text": "build and deploy your \nmachine learning models at scale.",
    "start": "178740",
    "end": "182707"
  },
  {
    "text": "Now we're cooking.",
    "start": "182707",
    "end": "184197"
  },
  {
    "text": "Before you can run models, \nyou need to bake them. ",
    "start": "184197",
    "end": "187043"
  },
  {
    "text": "The first step is to gather your computer \nvision machine learning ingredients,",
    "start": "187043",
    "end": "191692"
  },
  {
    "text": "which are images\nof food from the menu.",
    "start": "191692",
    "end": "194598"
  },
  {
    "text": "You'll need to feed your model \na lot of images.",
    "start": "196944",
    "end": "200181"
  },
  {
    "text": "The more images you provide,",
    "start": "200181",
    "end": "202016"
  },
  {
    "text": "the higher the likelihood\nyou'll build an accurate model.",
    "start": "202016",
    "end": "205446"
  },
  {
    "text": "You'll also need to factor in\nlighting and different camera angles",
    "start": "206072",
    "end": "209516"
  },
  {
    "text": "to build a robust model. ",
    "start": "209516",
    "end": "211354"
  },
  {
    "text": "Once you have your images, \nyou'll need to prep them, ",
    "start": "211354",
    "end": "213740"
  },
  {
    "text": "which means labelling them \nwith descriptions. ",
    "start": "213740",
    "end": "216621"
  },
  {
    "text": "Labelling images\nis very time-consuming.",
    "start": "216621",
    "end": "219803"
  },
  {
    "text": "I recommend using\nAmazon SageMaker Ground Truth",
    "start": "219803",
    "end": "223504"
  },
  {
    "text": "to offload labelling to\nyour co-workers or to contractors.",
    "start": "223907",
    "end": "227765"
  },
  {
    "text": "So while you're at happy hour \nwith your friends, ",
    "start": "227765",
    "end": "229769"
  },
  {
    "text": "they're hitting the keyboard for you.",
    "start": "229769",
    "end": "231548"
  },
  {
    "text": "SageMaker Ground Truth is a \nfully managed data labelling service",
    "start": "231548",
    "end": "235838"
  },
  {
    "text": "that makes it easy to build\naccurate data sets for machine learning.",
    "start": "235838",
    "end": "239526"
  },
  {
    "text": "Once your training images\nare prepped with labels,",
    "start": "239526",
    "end": "242092"
  },
  {
    "text": "you can put them all into \na large mixing bowl like Amazon S3.",
    "start": "242092",
    "end": "246668"
  },
  {
    "text": "S3 is your go-to AWS service \nfor object storage.",
    "start": "246668",
    "end": "251007"
  },
  {
    "text": "You might need to try a few \nmachine learning recipes",
    "start": "251007",
    "end": "253677"
  },
  {
    "text": "to get the right taste for our model. ",
    "start": "253677",
    "end": "255789"
  },
  {
    "text": "Mo will evaluate models by \nhaving them predict labels ",
    "start": "255789",
    "end": "259139"
  },
  {
    "text": "for a new set of images. ",
    "start": "259139",
    "end": "260605"
  },
  {
    "text": "Then, he'll compare\nthe predictive labels to the true ones.",
    "start": "260606",
    "end": "265017"
  },
  {
    "text": "The goal is to achieve a very high \nsuccess rate of predictions.",
    "start": "265017",
    "end": "269166"
  },
  {
    "text": "Once you have a delicious model, \nyou're ready to deploy it into production.",
    "start": "269166",
    "end": "273913"
  },
  {
    "text": "Voil√†! Dinner is served.",
    "start": "273914",
    "end": "276722"
  },
  {
    "text": "Satis.AI will need to repeat the process \nfor multiple models",
    "start": "277041",
    "end": "281087"
  },
  {
    "text": "to answer questions like,",
    "start": "281088",
    "end": "282400"
  },
  {
    "text": "\"What item has been in place \nand to which bag?\"",
    "start": "282400",
    "end": "285255"
  },
  {
    "text": "And, \"which bag\ncorresponds to an order?\"",
    "start": "285256",
    "end": "288395"
  },
  {
    "text": "With this information, Satis.AI can use \nAWS Lambda functions",
    "start": "288395",
    "end": "293341"
  },
  {
    "text": "to keep track of orders\nin Amazon DynamoDB.",
    "start": "293732",
    "end": "298050"
  },
  {
    "text": "Lambda gives you serverless compute ",
    "start": "301925",
    "end": "304427"
  },
  {
    "text": "and is even available\non some devices for Edge computing.",
    "start": "304428",
    "end": "307964"
  },
  {
    "text": "DynamoDB is a NoSQL database \nthat's great at capturing",
    "start": "307964",
    "end": "312014"
  },
  {
    "text": "the state of data in real time. ",
    "start": "312015",
    "end": "315218"
  },
  {
    "text": "You can use DynamoDB Streams \nto keep a time ordered sequence",
    "start": "315218",
    "end": "319315"
  },
  {
    "text": "of item level modifications \nin a DynamoDB table.  ",
    "start": "319316",
    "end": "323322"
  },
  {
    "text": "If the wrong piece of food \nwas put in a bag,",
    "start": "323322",
    "end": "325804"
  },
  {
    "text": "or gets picked up before \nthe order is complete, ",
    "start": "325804",
    "end": "328267"
  },
  {
    "text": "then DynamoDB Streams \nwill trigger a Lambda function ",
    "start": "328268",
    "end": "331915"
  },
  {
    "text": "to send a warning message to \nthe restaurant's order management system ",
    "start": "331915",
    "end": "335398"
  },
  {
    "text": "through Amazon Simple \nNotification Service. ",
    "start": "335398",
    "end": "339164"
  },
  {
    "text": "Amazon Simple Notification Service \nis a web service ",
    "start": "339687",
    "end": "343489"
  },
  {
    "text": "that makes it easy to send\nnotifications from the cloud.",
    "start": "343489",
    "end": "346453"
  },
  {
    "text": "Now the next step is making sure that \nyou are set up to deploy your model",
    "start": "346453",
    "end": "350396"
  },
  {
    "text": "in the real world. ",
    "start": "350396",
    "end": "351710"
  },
  {
    "text": "For this application \nto be useful, ",
    "start": "351710",
    "end": "353781"
  },
  {
    "text": "you'll have to run\ninference that's snappy",
    "start": "353782",
    "end": "356018"
  },
  {
    "text": "to make your customers happy.",
    "start": "356018",
    "end": "358264"
  },
  {
    "text": "This is crucial for any real time \ncomputer vision application. ",
    "start": "358264",
    "end": "362029"
  },
  {
    "text": "For a use-case like Mo's that requires \nlow latency and high bandwidth",
    "start": "362029",
    "end": "366938"
  },
  {
    "text": "you'll want to deploy your models on site \nby taking advantage of Edge computing.",
    "start": "366938",
    "end": "372479"
  },
  {
    "text": "The cameras have to\nconstantly look at the order,",
    "start": "372480",
    "end": "375408"
  },
  {
    "text": "the bag and the item \nto understand the state. ",
    "start": "375408",
    "end": "378860"
  },
  {
    "text": "This lends itself well to AWS \nIoT Greengrass.",
    "start": "378860",
    "end": "383744"
  },
  {
    "text": "Greengrass extends\nthe cloud to Edge devices",
    "start": "383744",
    "end": "386763"
  },
  {
    "text": "so they can act locally\non the data they generate",
    "start": "386763",
    "end": "389736"
  },
  {
    "text": "while talking back to the cloud.",
    "start": "389736",
    "end": "391626"
  },
  {
    "text": "With Greengrass,\nyou can run Lambda functions",
    "start": "391626",
    "end": "394379"
  },
  {
    "text": "and machine learning models \nright from the device. ",
    "start": "394379",
    "end": "397649"
  },
  {
    "text": "You're going to need\ncamera sensors and Edge compute.",
    "start": "397649",
    "end": "400823"
  },
  {
    "text": "To do this, you have two options.",
    "start": "400823",
    "end": "403024"
  },
  {
    "text": "One, for models with multiple \ncamera inputs ",
    "start": "403024",
    "end": "406198"
  },
  {
    "text": "purchase a Computer Vision Developer Kit \nthat is compatible with Greengrass",
    "start": "406199",
    "end": "410892"
  },
  {
    "text": "like the NVIDIA Jetson ",
    "start": "410892",
    "end": "412535"
  },
  {
    "text": "and separate cameras\nthat are compatible with this kit.",
    "start": "412535",
    "end": "415355"
  },
  {
    "text": "Two, for models\nthat are fed from a single camera,",
    "start": "415355",
    "end": "418767"
  },
  {
    "text": "purchase an all in one Edge AI Camera.",
    "start": "418767",
    "end": "422128"
  },
  {
    "text": "This combines an image sensor \nand a compute module",
    "start": "422128",
    "end": "424966"
  },
  {
    "text": "for simplified deployment.",
    "start": "424967",
    "end": "426649"
  },
  {
    "text": "This is great for running\none model per camera.",
    "start": "426649",
    "end": "429891"
  },
  {
    "text": "In both cases, we use hardware \ncompatible with Greengrass. ",
    "start": "429891",
    "end": "434048"
  },
  {
    "text": "Greengrass is compatible with \nAmazon SageMaker Neo",
    "start": "434048",
    "end": "437824"
  },
  {
    "text": "to optimize the model\nfor the hardware that you're using.",
    "start": "437824",
    "end": "441344"
  },
  {
    "text": "SageMaker Neo is a feature in \nAmazon SageMaker that enables us",
    "start": "441344",
    "end": "445478"
  },
  {
    "text": "to take machine learning models \ntrained in the cloud",
    "start": "445478",
    "end": "447897"
  },
  {
    "text": "and deploy optimized versions \nat the Edge.",
    "start": "447897",
    "end": "451175"
  },
  {
    "text": "You can find a list of Greengrass \ncompatible hardware ",
    "start": "451175",
    "end": "454094"
  },
  {
    "text": "in the AWS Partner Device Catalog.",
    "start": "454094",
    "end": "457209"
  },
  {
    "text": "When selecting a camera, \nconsider the environment it'll be in,",
    "start": "457209",
    "end": "461149"
  },
  {
    "text": "the available bandwidth\nand the types of detections you'll need.",
    "start": "461149",
    "end": "464577"
  },
  {
    "text": "Most importantly, consider your budget \nsince camera prices can range from ",
    "start": "464577",
    "end": "469136"
  },
  {
    "text": "just under $10 for a Raspberry Pi Cam \nto one million dollars.",
    "start": "469136",
    "end": "474323"
  },
  {
    "text": "Pretty insane!",
    "start": "474323",
    "end": "475961"
  },
  {
    "text": "But it might help you get a better \nsocial media brunch picture.",
    "start": "475961",
    "end": "478615"
  },
  {
    "text": "Most solutions won't need \na helicopter camera.",
    "start": "478615",
    "end": "481647"
  },
  {
    "text": "Though definitely consider \nsetting aside a budget",
    "start": "481647",
    "end": "484460"
  },
  {
    "text": "for cameras with a high bit rate, \nframe rate and a wider angle lens. ",
    "start": "484460",
    "end": "489564"
  },
  {
    "text": "Even the best models\nencounter unexpected situations.",
    "start": "489564",
    "end": "493330"
  },
  {
    "text": "Use Amazon Augmented AI \nto create a workflow",
    "start": "493330",
    "end": "496961"
  },
  {
    "text": "so that if your model identifies\nan image with a low confidence score,",
    "start": "496962",
    "end": "500440"
  },
  {
    "text": "it will be reviewed by a human.",
    "start": "500440",
    "end": "502622"
  },
  {
    "text": "Catching these Edge cases helps us \nmake our model better over time.",
    "start": "502622",
    "end": "506802"
  },
  {
    "text": "That made me hungry. \nNow, it's time for a recap. ",
    "start": "506802",
    "end": "510340"
  },
  {
    "text": "The first step of a computer vision \nmachine learning project",
    "start": "510340",
    "end": "514294"
  },
  {
    "text": "is to get a lot of images \nof your subject matter.",
    "start": "514294",
    "end": "517302"
  },
  {
    "text": "Next, label them using Amazon \nSageMaker Ground Truth.",
    "start": "517302",
    "end": "521909"
  },
  {
    "text": "This will be your\nmachine learning training data.",
    "start": "521909",
    "end": "524602"
  },
  {
    "text": "With this data, train and build models \nin Amazon SageMaker.",
    "start": "524602",
    "end": "528915"
  },
  {
    "text": "Next, select a hardware for deployment. ",
    "start": "528915",
    "end": "531550"
  },
  {
    "text": "For simplicity, pick an all in one \nEdge AI camera",
    "start": "531550",
    "end": "535787"
  },
  {
    "text": "that is compatible with AWS \nIoT Greengrass",
    "start": "535788",
    "end": "538985"
  },
  {
    "text": "so you can run machine learning models \nright on the camera.",
    "start": "538985",
    "end": "541839"
  },
  {
    "text": "You'll thank me later. ",
    "start": "541840",
    "end": "542997"
  },
  {
    "text": "For flexibility, purchase a \nComputer Vision Developer Kit  ",
    "start": "542997",
    "end": "546549"
  },
  {
    "text": "that is compatible with IoT Greengrass \nand cameras or sensors",
    "start": "546549",
    "end": "550628"
  },
  {
    "text": "that are compatible with that hardware. ",
    "start": "550628",
    "end": "552781"
  },
  {
    "text": "Use SageMaker Neo to optimize \nand deploy your model to your device. ",
    "start": "552781",
    "end": "557487"
  },
  {
    "text": "Build an application layer with DynamoDB \nand Simple Notification Service",
    "start": "557487",
    "end": "562170"
  },
  {
    "text": "that handles communication between \nyour system and the customer system.",
    "start": "562170",
    "end": "566027"
  },
  {
    "text": "Finally, create a workflow with \nAmazon Augmented AI",
    "start": "566028",
    "end": "570191"
  },
  {
    "text": "so if an image generates\na low confidence score,",
    "start": "570191",
    "end": "572615"
  },
  {
    "text": "it is sent to someone for review",
    "start": "572616",
    "end": "574600"
  },
  {
    "text": "and can be used to improve \nyour model over time.",
    "start": "574600",
    "end": "577527"
  },
  {
    "text": "That's how you cook a delicious, organic,",
    "start": "577527",
    "end": "579792"
  },
  {
    "text": "vegan and low calorie \ncomputer vision app in AWS.",
    "start": "579792",
    "end": "582924"
  },
  {
    "text": "It doesn't matter when you start \nas long as you just get started. ",
    "start": "582924",
    "end": "586273"
  },
  {
    "text": "Thanks for hanging out with me today. \nSee you next time.  ",
    "start": "586273",
    "end": "589070"
  }
]