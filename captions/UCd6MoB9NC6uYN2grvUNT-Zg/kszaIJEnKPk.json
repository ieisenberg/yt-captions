[
  {
    "text": "Hello all, welcome to an episode \nof 'This is My Architecture.'",
    "start": "7462",
    "end": "11059"
  },
  {
    "text": "My name is Ayesha, and with me today \nI have Brian joining us from ResMed.",
    "start": "11579",
    "end": "16313"
  },
  {
    "text": "- Hi, Brian. \n- Delighted to be here.",
    "start": "16313",
    "end": "18212"
  },
  {
    "text": "Brian, can you tell us a little bit about ResMed.",
    "start": "18212",
    "end": "21034"
  },
  {
    "text": "Absolutely yeah.",
    "start": "21034",
    "end": "21802"
  },
  {
    "text": "ResMed is a med-tech company \nwhich specializes in sleep apnea therapy.",
    "start": "21802",
    "end": "25051"
  },
  {
    "text": "So we build medical devices \nand digital solutions.",
    "start": "25051",
    "end": "27464"
  },
  {
    "text": "Recently, you underwent a major migration,",
    "start": "28448",
    "end": "31075"
  },
  {
    "text": "where you migrated \nyour on-premises monolithic architecture",
    "start": "31313",
    "end": "34453"
  },
  {
    "text": "for your product, myAir,\nto a completely serverless environment on AWS.",
    "start": "34639",
    "end": "39210"
  },
  {
    "text": "Can you talk a little more about that?",
    "start": "39514",
    "end": "41253"
  },
  {
    "text": "Yes, myAir is our patient engagement platform.",
    "start": "41253",
    "end": "43417"
  },
  {
    "text": "So this consists of mobile apps, website,",
    "start": "43417",
    "end": "45919"
  },
  {
    "text": "a medical device, and our back end system.",
    "start": "45919",
    "end": "48128"
  },
  {
    "text": "And this allows our patients \nto engage and track their therapy.",
    "start": "48129",
    "end": "51233"
  },
  {
    "text": "Okay, so you brought your architecture with us, \nlet's dive straight into it.",
    "start": "51381",
    "end": "55612"
  },
  {
    "text": "Absolutely yeah.",
    "start": "55612",
    "end": "56267"
  },
  {
    "text": "So the first thing, though, \nis this is a fully serverless solution.",
    "start": "56267",
    "end": "58635"
  },
  {
    "text": "And that's direction we wanted to go \nwith for low operations costs.",
    "start": "58902",
    "end": "62402"
  },
  {
    "text": "So for any user here using our mobile app,",
    "start": "62402",
    "end": "64816"
  },
  {
    "text": "the communication is over Graph QL,\nM2 AppSync.",
    "start": "64816",
    "end": "68372"
  },
  {
    "text": "AppSync and manage Graph QL server.",
    "start": "68372",
    "end": "70256"
  },
  {
    "text": "We wanted to take advantage \nnot just of Graph QL,",
    "start": "70524",
    "end": "72842"
  },
  {
    "text": "but we also wanted to take advantage \nof the synchronization infrastructure",
    "start": "72842",
    "end": "75723"
  },
  {
    "text": "that comes out of the box with AppSync.",
    "start": "75723",
    "end": "77782"
  },
  {
    "text": "We didn't want to have to rebuild this.",
    "start": "77782",
    "end": "79285"
  },
  {
    "text": "Any requests that come in here, \nthey'll basically go through something called VTL,",
    "start": "79812",
    "end": "83911"
  },
  {
    "text": "which is a velocity translation language.",
    "start": "83912",
    "end": "86177"
  },
  {
    "text": "So this then basically writes it \nto a particular Lambda,",
    "start": "86733",
    "end": "89871"
  },
  {
    "text": "we have multiple Lambdas.",
    "start": "89871",
    "end": "90963"
  },
  {
    "text": "And then these Lambdas call into DynamoDB, \nto either write or read,",
    "start": "90963",
    "end": "94881"
  },
  {
    "text": "and they execute a bunch of business logic.",
    "start": "94881",
    "end": "97123"
  },
  {
    "text": "Okay, this slide there \nseems like a very robust architecture.",
    "start": "97124",
    "end": "100680"
  },
  {
    "text": "Can you talk a little bit \nabout how you scale for this?",
    "start": "100680",
    "end": "103092"
  },
  {
    "text": "Yeah, absolutely yeah.",
    "start": "103092",
    "end": "104219"
  },
  {
    "text": "So these are all managed services, \nwhich really helps on the scaling side.",
    "start": "104219",
    "end": "106992"
  },
  {
    "text": "So we have \nabout 60 million Lambda invocations every day.",
    "start": "106992",
    "end": "112006"
  },
  {
    "text": "And at peak load, we're hitting about 4000 Lambdas, \nconcurrent Lambdas.",
    "start": "112006",
    "end": "118008"
  },
  {
    "text": "So it's incredible to see it in operation.",
    "start": "118009",
    "end": "119897"
  },
  {
    "text": "That's definitely very impressive.",
    "start": "119897",
    "end": "121667"
  },
  {
    "text": "Can you talk a bit about how does this \nIoT device right here fit into this architecture?",
    "start": "122072",
    "end": "126422"
  },
  {
    "text": "Absolutely yeah.",
    "start": "126422",
    "end": "127048"
  },
  {
    "text": "So we have our own EMM solution currently,",
    "start": "127048",
    "end": "128929"
  },
  {
    "text": "within them within ResMed\nwhich handles IoT.",
    "start": "128929",
    "end": "133423"
  },
  {
    "text": "The difference with this project is, \nis we now write this data,",
    "start": "134429",
    "end": "137162"
  },
  {
    "text": "and we publish this data real-time into Kinesis.",
    "start": "137162",
    "end": "140564"
  },
  {
    "text": "There's little bit of transformation, \nwe get this data,",
    "start": "140564",
    "end": "142793"
  },
  {
    "text": "and then we write this\ninto DynamoDB via Lambda polar,",
    "start": "142794",
    "end": "147322"
  },
  {
    "text": "which does a bunch of statistical analysis.",
    "start": "147322",
    "end": "149164"
  },
  {
    "text": "Okay, so it seems like DynamoDB right here,",
    "start": "149164",
    "end": "152063"
  },
  {
    "text": "is acting like a centralized repository,",
    "start": "152063",
    "end": "154301"
  },
  {
    "text": "not just for users pulling in data,",
    "start": "154301",
    "end": "156241"
  },
  {
    "text": "but also any data that you collect, \nbased on their performance from the IoT device.",
    "start": "156241",
    "end": "160810"
  },
  {
    "text": "Is that right? \nThat's exactly correct.",
    "start": "160810",
    "end": "162168"
  },
  {
    "text": "Okay, so how does SNS fit into this?",
    "start": "162168",
    "end": "164540"
  },
  {
    "text": "Yeah, so as soon as this data arrives in here,",
    "start": "164540",
    "end": "166290"
  },
  {
    "text": "we're taking advantage of DB Streams.",
    "start": "166290",
    "end": "167905"
  },
  {
    "text": "And what we're doing\nis we have another Lambda here,",
    "start": "168505",
    "end": "170997"
  },
  {
    "text": "and which essentially interrogate \nthe data that's just been written,",
    "start": "170997",
    "end": "174204"
  },
  {
    "text": "to understand what is the most important information \nthat we need to tell the user",
    "start": "174204",
    "end": "177649"
  },
  {
    "text": "about how they slept last night, \nor any issues they were having.",
    "start": "177649",
    "end": "179943"
  },
  {
    "text": "This then puts it onto an SNS topic.",
    "start": "180480",
    "end": "182720"
  },
  {
    "text": "And then this gets sent out to the user,",
    "start": "183251",
    "end": "184851"
  },
  {
    "text": "either as a push notification, \nor we can send an email off to SES.",
    "start": "184851",
    "end": "189855"
  },
  {
    "text": "Okay, so not only are users tracking \nand monitoring their health performances,",
    "start": "190469",
    "end": "195969"
  },
  {
    "text": "but they're also getting notified in real-time",
    "start": "195969",
    "end": "198301"
  },
  {
    "text": "based on any anomalies \nor any important information",
    "start": "198301",
    "end": "200946"
  },
  {
    "text": "that they need to know about their health.",
    "start": "200947",
    "end": "202334"
  },
  {
    "text": "Absolutely yeah, correct.",
    "start": "202334",
    "end": "203554"
  },
  {
    "text": "And was there any performance improvement",
    "start": "203806",
    "end": "205997"
  },
  {
    "text": "that you saw with this kind of deployment \nright here?",
    "start": "205997",
    "end": "208760"
  },
  {
    "text": "Yeah, so obviously, the database access \nis incredible, incredibly fast.",
    "start": "209262",
    "end": "212821"
  },
  {
    "text": "The data that comes through the system \nfrom the medical device.",
    "start": "213417",
    "end": "217239"
  },
  {
    "text": "So what happens \nwhen someone wakes up in the morning,",
    "start": "217676",
    "end": "220077"
  },
  {
    "text": "that's when we send up the data to the cloud.",
    "start": "220078",
    "end": "222204"
  },
  {
    "text": "Typically, in the past, it was taking a few minutes \nfor this dataset to arrive.",
    "start": "222204",
    "end": "227922"
  },
  {
    "text": "So it was measured in minutes.",
    "start": "228256",
    "end": "230636"
  },
  {
    "text": "So right now, this data is less than 10 seconds \nto make it all the way to our system.",
    "start": "231069",
    "end": "234871"
  },
  {
    "text": "That's impressive.",
    "start": "234871",
    "end": "235959"
  },
  {
    "text": "And finally, I see CloudFront and S3 here.",
    "start": "236634",
    "end": "238804"
  },
  {
    "text": "So what are these two components \ndoing here in this architecture?",
    "start": "238804",
    "end": "241596"
  },
  {
    "text": "Yeah. So within here, \nwe have a lot of static content,",
    "start": "241596",
    "end": "245004"
  },
  {
    "text": "that we basically stored in here.",
    "start": "245005",
    "end": "246830"
  },
  {
    "text": "This static content is things like videos, images, \nand any other assets, which drive the mobile applications.",
    "start": "247003",
    "end": "251613"
  },
  {
    "text": "So we support currently, right now we support \nabout 30 countries and 20 languages.",
    "start": "253077",
    "end": "259057"
  },
  {
    "text": "So potentially, any asset in here",
    "start": "259058",
    "end": "262275"
  },
  {
    "text": "could be represented 600 times \nbased on that matrix.",
    "start": "262275",
    "end": "264772"
  },
  {
    "text": "So when a when the app calls in, \nwe have CloudFront in front of S3.",
    "start": "265419",
    "end": "269687"
  },
  {
    "text": "So we have a Lambda@Edge here.",
    "start": "270278",
    "end": "273337"
  },
  {
    "text": "And this Lambda@Edge\ninterrogates the headers within that request,",
    "start": "273725",
    "end": "276958"
  },
  {
    "text": "and determines what language, what country?",
    "start": "277360",
    "end": "279057"
  },
  {
    "text": "And it has a lookup table, \nwhich then basically tells CloudFront here,",
    "start": "279245",
    "end": "282990"
  },
  {
    "text": "this is the URL within S3 that you need to call,",
    "start": "282990",
    "end": "285475"
  },
  {
    "text": "and it calls that.",
    "start": "285476",
    "end": "286184"
  },
  {
    "text": "And then this reduces instead of having \nthe 600 potential assets, we have about 60.",
    "start": "286383",
    "end": "291491"
  },
  {
    "text": "So 10X reduction, so for maintenance, \nthat's very, very beneficial.",
    "start": "291491",
    "end": "294221"
  },
  {
    "text": "That's very, very impressive, Brian.",
    "start": "294735",
    "end": "297168"
  },
  {
    "text": "So I can see that you have users \nacross 30 countries across the globe.",
    "start": "297421",
    "end": "301822"
  },
  {
    "text": "So anything that he wanted to talk \nabout the global scale of this architecture?",
    "start": "301822",
    "end": "305012"
  },
  {
    "text": "Yeah, well, I mean, it scales incredibly",
    "start": "305012",
    "end": "306820"
  },
  {
    "text": "and a lot of it is out of the box \nbecause it's serverless.",
    "start": "306821",
    "end": "308991"
  },
  {
    "text": "So we didn't have to do \ntoo much tweaking on that,",
    "start": "308991",
    "end": "312006"
  },
  {
    "text": "and to be able to hit these numbers, \nit's just amazing.",
    "start": "312006",
    "end": "315212"
  },
  {
    "text": "Okay, thank you for sharing this with us, Brian.",
    "start": "315212",
    "end": "317958"
  },
  {
    "text": "No problem at all.",
    "start": "317958",
    "end": "318791"
  },
  {
    "text": "Thank you for watching,\n'This is My Architecture.'",
    "start": "319409",
    "end": "321732"
  }
]