[
  {
    "text": "Welcome to 'This is My Architecture'.",
    "start": "8104",
    "end": "9755"
  },
  {
    "text": "My name is Christian, and today I'm joined \nby Guido from Homegate.",
    "start": "10056",
    "end": "13566"
  },
  {
    "text": "Welcome, Guido.",
    "start": "13566",
    "end": "14702"
  },
  {
    "text": "Thanks for having me here.",
    "start": "14702",
    "end": "16368"
  },
  {
    "text": "Guido tell us a little bit about Homegate.",
    "start": "16369",
    "end": "18608"
  },
  {
    "text": "So Homegate is a Swiss company,",
    "start": "19159",
    "end": "21129"
  },
  {
    "text": "it's leading real estate marketplace in Switzerland,",
    "start": "21129",
    "end": "25112"
  },
  {
    "text": "has around 100,000 leased properties advertised",
    "start": "25335",
    "end": "29190"
  },
  {
    "text": "and also more than 9 million visits per month.",
    "start": "29353",
    "end": "32111"
  },
  {
    "text": "Wow, that's huge.",
    "start": "32200",
    "end": "33239"
  },
  {
    "text": "So we are seeing a nice architecture here.",
    "start": "33549",
    "end": "35992"
  },
  {
    "text": "Please walk us through what use case\nyou are addressing with this.",
    "start": "35992",
    "end": "39141"
  },
  {
    "text": "So what we have here,\nit's our main ingest property ",
    "start": "40138",
    "end": "44062"
  },
  {
    "text": "listings data ingestion mechanism, right.",
    "start": "44062",
    "end": "46838"
  },
  {
    "text": "What we call the importer.",
    "start": "46838",
    "end": "48790"
  },
  {
    "text": "And every property\nthat gets advertised at Homegate",
    "start": "51621",
    "end": "55580"
  },
  {
    "text": "needs to go for this process.",
    "start": "55581",
    "end": "57115"
  },
  {
    "text": "Another important service we have is the dispatcher.",
    "start": "57605",
    "end": "61425"
  },
  {
    "text": "This one is responsible for syncing legacy data",
    "start": "62485",
    "end": "67630"
  },
  {
    "text": "into the new reengineered services.",
    "start": "67630",
    "end": "70920"
  },
  {
    "text": "So in this way, we can leave legacy and reengineered services together.",
    "start": "70989",
    "end": "76052"
  },
  {
    "text": "I see.\nPerfect. ",
    "start": "76052",
    "end": "77517"
  },
  {
    "text": "So we are seeing a lot of serverless and managed services here on that board",
    "start": "77517",
    "end": "82812"
  },
  {
    "text": "that are used in your architecture.",
    "start": "82812",
    "end": "84442"
  },
  {
    "text": "Maybe you can quickly explain why we've chosen them\nand what the benefits are.",
    "start": "84443",
    "end": "87996"
  },
  {
    "text": "So we wanted to minimize some issues\nwe had in the past with the legacy system,",
    "start": "88437",
    "end": "92423"
  },
  {
    "text": "which were, was very complex and had long build times,",
    "start": "92424",
    "end": "97263"
  },
  {
    "text": "and we wanted to scale the team as well",
    "start": "97753",
    "end": "99872"
  },
  {
    "text": "and also avoid managing of our own infrastructure, right?",
    "start": "101068",
    "end": "105116"
  },
  {
    "text": "So we went to rewrite everything from scratch on AWS",
    "start": "105116",
    "end": "109902"
  },
  {
    "text": "using cloud native technologies.",
    "start": "109902",
    "end": "112002"
  },
  {
    "text": "This way we can leverage AWS infrastructure",
    "start": "113761",
    "end": "117600"
  },
  {
    "text": "and worry less about scaling and provisioning",
    "start": "117972",
    "end": "122586"
  },
  {
    "text": "and security and worry more about our domain,\nwhich is real estate marketplace.",
    "start": "122586",
    "end": "126402"
  },
  {
    "text": "Okay, so by choosing\nthis microservice based architecture,",
    "start": "126402",
    "end": "129741"
  },
  {
    "text": "this allows you to focus more on innovation and building new things",
    "start": "129741",
    "end": "132946"
  },
  {
    "text": "instead of managing\na complex architecture.\n- Exactly.",
    "start": "132946",
    "end": "135745"
  },
  {
    "text": "That's very good.",
    "start": "135745",
    "end": "136424"
  },
  {
    "text": "So please walk me through the import process\nand what happens in this architecture.",
    "start": "136425",
    "end": "141321"
  },
  {
    "text": "Sure.",
    "start": "141851",
    "end": "142889"
  },
  {
    "text": "First we have a CloudWatch event, that scheduled event that triggers this Lambda,",
    "start": "143590",
    "end": "149542"
  },
  {
    "text": "to pull data from the legacy system",
    "start": "149542",
    "end": "153243"
  },
  {
    "text": "and replicate that in a DynamoDB table.",
    "start": "153243",
    "end": "156965"
  },
  {
    "text": "Okay, why did you go\nfor DynamoDB here?",
    "start": "156965",
    "end": "159694"
  },
  {
    "text": "So DynamoDB is very flexible.",
    "start": "160448",
    "end": "162487"
  },
  {
    "text": "It's also managed service, of course.",
    "start": "163079",
    "end": "165428"
  },
  {
    "text": "It's also very fast to provision, right?",
    "start": "166129",
    "end": "169213"
  },
  {
    "text": "We also can we leverage DynamoDB streams.",
    "start": "169602",
    "end": "173140"
  },
  {
    "text": "It's very neat for any change that happens in legacy.",
    "start": "173422",
    "end": "176831"
  },
  {
    "text": "We can decide if it's a relevant change to be published or not,",
    "start": "176831",
    "end": "181228"
  },
  {
    "text": "and we do that in this Lambda here.",
    "start": "181228",
    "end": "183915"
  },
  {
    "text": "Okay, so to sum it up,\nthis dispatcher microservice ",
    "start": "184360",
    "end": "187275"
  },
  {
    "text": "that you build allows you to pull the data from the legacy,",
    "start": "187275",
    "end": "190730"
  },
  {
    "text": "which you still have",
    "start": "190731",
    "end": "192010"
  },
  {
    "text": "and forward it to the new created import microservice,",
    "start": "192010",
    "end": "196504"
  },
  {
    "text": "which is handling all the imports\nthat go through the platform. ",
    "start": "196505",
    "end": "200839"
  },
  {
    "text": "Exactly.\nGood. ",
    "start": "200839",
    "end": "202573"
  },
  {
    "text": "So maybe you can tell me what happens next\nonce you have the data pulled ",
    "start": "202573",
    "end": "206168"
  },
  {
    "text": "and kind of curated converted to the new format,\nwhere is it handed over?",
    "start": "206169",
    "end": "210944"
  },
  {
    "text": "So, and then we call a endpoint, \nan API endpoint",
    "start": "211554",
    "end": "216189"
  },
  {
    "text": "which is a central publishing endpoint at Homegate.",
    "start": "216189",
    "end": "218890"
  },
  {
    "text": "And this will trigger, evoke a Lambda\nthat then saves this new listing stable data",
    "start": "219816",
    "end": "226114"
  },
  {
    "text": "in an internal DynamoDB table ",
    "start": "226115",
    "end": "228864"
  },
  {
    "text": "and also triggers a set of Step Functions.",
    "start": "228864",
    "end": "231845"
  },
  {
    "text": "Okay, so DynamoDB is another data store\nfor this listings importer microservice.",
    "start": "232467",
    "end": "237861"
  },
  {
    "text": "I'm a very curious to learn more\nabout what you're using Step Functions for.",
    "start": "238861",
    "end": "242564"
  },
  {
    "text": "So the ingestion mechanism is a complex,\nrather complex service, right?",
    "start": "242857",
    "end": "248612"
  },
  {
    "text": "So we have many steps.",
    "start": "248612",
    "end": "250138"
  },
  {
    "text": "We have to enrich the listing with geotagging information.",
    "start": "250138",
    "end": "254096"
  },
  {
    "text": "Also replace numbers with call tracking softwares",
    "start": "254765",
    "end": "258133"
  },
  {
    "text": "as well as quality grading,\nand image optimization and uploading",
    "start": "259208",
    "end": "264219"
  },
  {
    "text": "and Step Functions make managing\nthis whole workflow easier.",
    "start": "264219",
    "end": "268988"
  },
  {
    "text": "And also we can visualize easily whenever something goes wrong,",
    "start": "269261",
    "end": "275047"
  },
  {
    "text": "and we can retry that step to continue\nthe ingestion process at any moment.",
    "start": "275048",
    "end": "279396"
  },
  {
    "text": "And I guess it's also easily possible to integrate additional steps",
    "start": "279396",
    "end": "283443"
  },
  {
    "text": "if you would need to do some other modifications",
    "start": "283443",
    "end": "286050"
  },
  {
    "text": "and other enrichments and data modifications.",
    "start": "286050",
    "end": "289249"
  },
  {
    "text": "Exactly.\nPerfect. ",
    "start": "289249",
    "end": "290546"
  },
  {
    "text": "So once the data is enriched and the listing\nis ready to be published, what happens next?",
    "start": "290546",
    "end": "294845"
  },
  {
    "text": "Next once the ingestion process is over, ",
    "start": "295830",
    "end": "298345"
  },
  {
    "text": "we then send a message to SNS topic ",
    "start": "298346",
    "end": "301273"
  },
  {
    "text": "where any other microservice\nthat is interested in listing and publishing ",
    "start": "301968",
    "end": "306767"
  },
  {
    "text": "can listen to and react to it.",
    "start": "306982",
    "end": "308764"
  },
  {
    "text": "So one example is the social alert",
    "start": "308765",
    "end": "311075"
  },
  {
    "text": "where we have post notifications or email alerts",
    "start": "311195",
    "end": "314602"
  },
  {
    "text": "about interesting properties.",
    "start": "314914",
    "end": "316716"
  },
  {
    "text": "And we make millions of them per week.",
    "start": "317391",
    "end": "319731"
  },
  {
    "text": "That's one of the services right now that we use, ",
    "start": "320331",
    "end": "322827"
  },
  {
    "text": "but future engineered services can also use this topic.",
    "start": "322827",
    "end": "326406"
  },
  {
    "text": "That way we can decouple systems\nand react to any published event. ",
    "start": "327639",
    "end": "334243"
  },
  {
    "text": "Yeah.\nGreat.",
    "start": "334243",
    "end": "335830"
  },
  {
    "text": "So I really like that microservices based approach",
    "start": "335830",
    "end": "338426"
  },
  {
    "text": "and the clear interfaces you implemented in order to connect them.",
    "start": "338426",
    "end": "342005"
  },
  {
    "text": "Very interesting.",
    "start": "342588",
    "end": "343495"
  },
  {
    "text": "Thanks for sharing this architecture with us today.",
    "start": "343495",
    "end": "345596"
  },
  {
    "text": "You're welcome.",
    "start": "345596",
    "end": "346821"
  },
  {
    "text": "And thanks for watching 'This is My Architecture'.",
    "start": "347343",
    "end": "349645"
  }
]