[
  {
    "start": "0",
    "end": "19000"
  },
  {
    "text": "hi everybody thanks for coming to our talk my name is Norm Johansson and with me is Steve Roberts we are both software",
    "start": "560",
    "end": "6879"
  },
  {
    "text": "developers at Amazon web services where we focus on the net tooling that is the adus SDK foret the adus toolkit for",
    "start": "6879",
    "end": "14639"
  },
  {
    "text": "visual studio and ads tools for Windows Powershell today what we're going to",
    "start": "14639",
    "end": "20439"
  },
  {
    "start": "19000",
    "end": "19000"
  },
  {
    "text": "learn about is how to do asp.net 5 development with AWS as.net 5 is the new",
    "start": "20439",
    "end": "27400"
  },
  {
    "text": "redesign of as.net which which is currently under development as an open source project out there on GitHub some",
    "start": "27400",
    "end": "33840"
  },
  {
    "text": "of the major goals of this redesign is to make H5 um modulized and",
    "start": "33840",
    "end": "39079"
  },
  {
    "text": "cross-platform so Linux and Mac will be first class platforms for development and",
    "start": "39079",
    "end": "44680"
  },
  {
    "text": "deployment once we go over some of the development aspects we're going to talk about how we can actually deploy as.net",
    "start": "44680",
    "end": "51480"
  },
  {
    "text": "5 applications to adbs today even while it's in its beta",
    "start": "51480",
    "end": "56920"
  },
  {
    "text": "stage first we're going to take a look at how we can deploy it using 8us Code deploy and here we're going to still use",
    "start": "56920",
    "end": "64000"
  },
  {
    "text": "a lot of the things we're familiar with we're still going to deploy to Windows still take advantage of I so we'll use",
    "start": "64000",
    "end": "69080"
  },
  {
    "text": "things that we're familiar with but use the latest and greatest AET 5 and then we're going to take advantage of the",
    "start": "69080",
    "end": "75280"
  },
  {
    "text": "crossplatform support and use Docker as a deployment mechanism where we can make our application",
    "start": "75280",
    "end": "81360"
  },
  {
    "text": "containerized um and we're going to run it on Linux and ads has a couple services that can actually deploy Docker",
    "start": "81360",
    "end": "88360"
  },
  {
    "text": "for us we've got ad elastic bean stock and Amazon ec2 container service and",
    "start": "88360",
    "end": "93640"
  },
  {
    "text": "we're going to take a look at both those services today before we get into that I want to",
    "start": "93640",
    "end": "100040"
  },
  {
    "start": "97000",
    "end": "97000"
  },
  {
    "text": "give a quick update on the ads SDK for.net we released version three of the SDK last July and this is our new fully",
    "start": "100040",
    "end": "108680"
  },
  {
    "text": "moduled version of the SDK where every one of the ad Services is a separate nougat package with a dependency on a",
    "start": "108680",
    "end": "115200"
  },
  {
    "text": "common core runtime and we did this modularization for a couple reasons um it let you as",
    "start": "115200",
    "end": "122240"
  },
  {
    "text": "developers be able only to include just the parts of AWS you want in your application giving you a much smaller footprint for",
    "start": "122240",
    "end": "128399"
  },
  {
    "text": "AWS and it helped us out too because as you see in the keynote and and you follow our blogs you see there's new",
    "start": "128399",
    "end": "134360"
  },
  {
    "text": "Adit Services updates going out all the time so our SDK was getting updated on a weekly if not more frequent basis so now",
    "start": "134360",
    "end": "141840"
  },
  {
    "text": "you only need to take updates for when the services your application are using are getting updates included in every one of these",
    "start": "141840",
    "end": "149160"
  },
  {
    "text": "new V3 three Nate packages is zamon support so now you can use the SDK to do",
    "start": "149160",
    "end": "154480"
  },
  {
    "text": "IOS and Android development as well we designed version three of the",
    "start": "154480",
    "end": "160080"
  },
  {
    "text": "SDK to have a high compatibility with version two our hope is that most customers will only have to go and",
    "start": "160080",
    "end": "166080"
  },
  {
    "text": "remove the N get package to the old adbs SDK package and then include the N get",
    "start": "166080",
    "end": "172040"
  },
  {
    "text": "packages for the services they're actually using so what is open or what is hnet 5",
    "start": "172040",
    "end": "179959"
  },
  {
    "start": "176000",
    "end": "176000"
  },
  {
    "text": "I mentioned it's open source out there in GitHub it's going crossplatform and they've modulized asp.net",
    "start": "179959",
    "end": "187720"
  },
  {
    "text": "and the one of the reasons they did this is that you can actually now choose which part of AET you want to use for",
    "start": "187720",
    "end": "194840"
  },
  {
    "text": "example if you're writing a microservice that is only using just the web API you can remove components like you don't",
    "start": "194840",
    "end": "201200"
  },
  {
    "text": "need the static files module and this can actually give you a smaller footprint and give you better",
    "start": "201200",
    "end": "206680"
  },
  {
    "text": "performance because there's less modules in the pipeline now aset 5 works on net 452 and above",
    "start": "206680",
    "end": "215239"
  },
  {
    "text": "mono and the new Corr runtime and that Corr runtime is the new crossplatform",
    "start": "215239",
    "end": "221519"
  },
  {
    "text": "runtime which has a new modulized NET Framework so now we have our modulized",
    "start": "221519",
    "end": "227720"
  },
  {
    "text": "ads SDK for.net we have our modulized asp.net 5 framework and our modulized",
    "start": "227720",
    "end": "233360"
  },
  {
    "text": "NET Framework so now we can have a really refined set of exactly what our application needs giving us a much",
    "start": "233360",
    "end": "238680"
  },
  {
    "text": "smaller application for development we have a new project structure so the role of the visual",
    "start": "238680",
    "end": "245079"
  },
  {
    "text": "studio project is greatly diminished there's now this new project Json file a Json file that defines all of your",
    "start": "245079",
    "end": "251879"
  },
  {
    "text": "dependencies as well as how do you actually build and run your application and we'll take a look at more at that",
    "start": "251879",
    "end": "258000"
  },
  {
    "text": "later we also have a new suite of command Lane tools uh the first one is",
    "start": "258000",
    "end": "263040"
  },
  {
    "text": "dnvm that VM stands for version manager this is how we get to include the",
    "start": "263040",
    "end": "268280"
  },
  {
    "text": "runtime we want to use with our application and this is a new thing for us where we actually get to decide on a",
    "start": "268280",
    "end": "274280"
  },
  {
    "text": "per application which net runtime we want to use so this saves a lot of it",
    "start": "274280",
    "end": "279880"
  },
  {
    "text": "fears of when the developer says I need the latest version of net on the server and you don't know how that's going to",
    "start": "279880",
    "end": "285320"
  },
  {
    "text": "affect the other Mach applications running on that server in this world that runtime is bundled with the",
    "start": "285320",
    "end": "290720"
  },
  {
    "text": "application so it's only going to affect just that application then there's d andu u being",
    "start": "290720",
    "end": "297120"
  },
  {
    "text": "utility this is the command line to help you manage your Nate packages easily restore all your packages for a project",
    "start": "297120",
    "end": "303680"
  },
  {
    "text": "and it also has utilities to be able to package up your application and get it ready for",
    "start": "303680",
    "end": "309520"
  },
  {
    "text": "publishing and then DNX this is the new execution engine this is what's actually going to run your application now in the",
    "start": "309520",
    "end": "316840"
  },
  {
    "text": "AET 5 world you're not really creating executables like we're used to you're actually running your application with",
    "start": "316840",
    "end": "322680"
  },
  {
    "text": "the source actually with DNX which is going to build and run your appli application on the on the Fly",
    "start": "322680",
    "end": "330600"
  },
  {
    "start": "330000",
    "end": "330000"
  },
  {
    "text": "aset 5 is currently uh on beta 7 I think beta 8 is imminent like maybe next week on the Microsoft road map they've listed",
    "start": "331240",
    "end": "339080"
  },
  {
    "text": "uh November as the when RC for AET will come out and Microsoft goal is for the",
    "start": "339080",
    "end": "345479"
  },
  {
    "text": "One release to be q1 next year the way we are supporting as 5 in",
    "start": "345479",
    "end": "351360"
  },
  {
    "text": "the SDK is we've released a new version of the SD the 3.2 beta version so that's the one that's got all",
    "start": "351360",
    "end": "357720"
  },
  {
    "text": "of the Corr support So if you we still need the the current stable version all the latest service Upstate we're going",
    "start": "357720",
    "end": "363199"
  },
  {
    "text": "to keep maintaining the 31 version of the SDK while a 5 is under beta once",
    "start": "363199",
    "end": "368360"
  },
  {
    "text": "that's out of beta we'll take our 32 out of beta and then that will become our new current stable",
    "start": "368360",
    "end": "374560"
  },
  {
    "start": "375000",
    "end": "375000"
  },
  {
    "text": "line if your application is coding that new Corr runtime that crossplatform",
    "start": "375560",
    "end": "380680"
  },
  {
    "text": "runtime there are a couple coding differences you need to be aware of the first is all of your ad service calls",
    "start": "380680",
    "end": "387680"
  },
  {
    "text": "only support the asynchronous pattern and this is because the htb client that",
    "start": "387680",
    "end": "392960"
  },
  {
    "text": "we have available to us on a crystal only has those calls the ASN calls and if you're writing your your server your",
    "start": "392960",
    "end": "399199"
  },
  {
    "text": "a server application you're wanting high sk ability using that asynchron pattern is your best practices because otherwise",
    "start": "399199",
    "end": "405039"
  },
  {
    "text": "you're going to have a lot of tasks and threads being blocked waiting from responses and servers and in this case",
    "start": "405039",
    "end": "410759"
  },
  {
    "text": "those tasks can be doing something more useful credentials management has had a slight change as well um if you've been",
    "start": "410759",
    "end": "417879"
  },
  {
    "text": "using our SDK before you hopefully SE we have that embedded encrypted SDK store credential",
    "start": "417879",
    "end": "424160"
  },
  {
    "text": "store um that is not currently supported in the Corr version the reason is",
    "start": "424160",
    "end": "429240"
  },
  {
    "text": "because that the way that works is it's actually doing some P invoke methods to some wind Windows API calls and since",
    "start": "429240",
    "end": "435120"
  },
  {
    "text": "we're crossplatform that isn't necessarily available to us we're still looking into this I'm kind of hoping we",
    "start": "435120",
    "end": "440440"
  },
  {
    "text": "can at least make it work when we're running cors Windows um so look for updates on this but that's where we are",
    "start": "440440",
    "end": "446000"
  },
  {
    "text": "today so Alternatives is you can use the shared credentials file this is the the",
    "start": "446000",
    "end": "451520"
  },
  {
    "text": "text file that lives under your your user directory and this is supported by all the ads sdks and tools you can also use",
    "start": "451520",
    "end": "459440"
  },
  {
    "text": "environment variables as well and then when you're actually deploying your application you would want to use IM",
    "start": "459440",
    "end": "465000"
  },
  {
    "text": "roles to get your application your credentials to your application so when we started looking",
    "start": "465000",
    "end": "470960"
  },
  {
    "text": "at how can we support as5 with the SDK we thought we should actually start writing an application and see what",
    "start": "470960",
    "end": "476919"
  },
  {
    "text": "that's like you want to show show it off Steve sure so what we've got for you is an application called",
    "start": "476919",
    "end": "482360"
  },
  {
    "text": "pollster and if I just go away to a tab here and look CL pollster here pser is",
    "start": "482360",
    "end": "487919"
  },
  {
    "text": "an app that serves polls at scheduled intervals so as a user you can go in and you can create a poll um give the poll",
    "start": "487919",
    "end": "494840"
  },
  {
    "text": "options schedule when you want it to start when you want it to end Etc uh and then at the relevant time the poll will",
    "start": "494840",
    "end": "500120"
  },
  {
    "text": "become visible on the screen you can see a number of polls here um back in Seattle the team got their heads",
    "start": "500120",
    "end": "505879"
  },
  {
    "text": "together like what can we show for polls and we thought well it'd be really useful if you know we could kind of get",
    "start": "505879",
    "end": "511240"
  },
  {
    "text": "some feedback of where do you want us to go next with the the SDK for.net and the tooling right so we put some polls",
    "start": "511240",
    "end": "517360"
  },
  {
    "text": "together so we invite you to join in you can go to www.cloud.com please vote um there's no",
    "start": "517360",
    "end": "524560"
  },
  {
    "text": "guarantees we'll we'll do it let's let's be honest here right but it will guide us a little bit in where we go in future",
    "start": "524560",
    "end": "531160"
  },
  {
    "text": "now uh full disclaimer we don't want Total Chaos today so we've disabled the",
    "start": "531160",
    "end": "536480"
  },
  {
    "text": "ability to create polls okay so that won't work you'll get an error if you go there well please go to Club pollster do",
    "start": "536480",
    "end": "542200"
  },
  {
    "text": "some polling and uh let's see I know that I'm Ved on this so there we go and we popular already yeah yeah",
    "start": "542200",
    "end": "550279"
  },
  {
    "text": "so that's po no one said no on that so here's the the 10,000 foot",
    "start": "550279",
    "end": "557800"
  },
  {
    "start": "555000",
    "end": "555000"
  },
  {
    "text": "architecture view of of poster right we have a a 5 MVC application as our front",
    "start": "557800",
    "end": "564200"
  },
  {
    "text": "end which communicates to a collection of microservices in the back which are dealing with specific tasks like the",
    "start": "564200",
    "end": "569760"
  },
  {
    "text": "actual current polls processing the votes um and creating the new polls and",
    "start": "569760",
    "end": "576279"
  },
  {
    "text": "we chose this microservices design because Steve likes to put bugs in my code and when we fix those bugs we want",
    "start": "576279",
    "end": "583279"
  },
  {
    "text": "to just deploy this that the service that's effective so there's a bug in the poll feed then we want to deploy just that",
    "start": "583279",
    "end": "589040"
  },
  {
    "text": "one then we also have this as 5 console application and this might seem a little",
    "start": "589040",
    "end": "594760"
  },
  {
    "text": "strange to you think of aset having a console application but what this means is is is a program that still has a main",
    "start": "594760",
    "end": "600440"
  },
  {
    "text": "function but it's run by that DNX execution engine that so we're not creating an executable we are giving",
    "start": "600440",
    "end": "607360"
  },
  {
    "text": "that that source to DNX and DNX is going to build it and run it on the Fly and that's going to make it crossplatform",
    "start": "607360",
    "end": "613160"
  },
  {
    "text": "for us services plls are use is we use",
    "start": "613160",
    "end": "618800"
  },
  {
    "start": "615000",
    "end": "615000"
  },
  {
    "text": "Amazon DB to actually store the poles um as we saw the the poles have a time when they go active and when they get expired",
    "start": "618800",
    "end": "625279"
  },
  {
    "text": "so that scheduling is all handled with simple workflow and then we use Simple notification service to actually send",
    "start": "625279",
    "end": "630800"
  },
  {
    "text": "out the results of that poll and to help us with all the debugging we pushed all of our log messages out to cloudwatch",
    "start": "630800",
    "end": "637000"
  },
  {
    "text": "log so we could see what's going on without having to try to log on to the machines so let's take a look at the",
    "start": "637000",
    "end": "643680"
  },
  {
    "text": "source okay so in Just sh it here we've got the",
    "start": "643680",
    "end": "648760"
  },
  {
    "text": "pster solution and basically got six projects of Interest we've got some common code and then we got a project",
    "start": "648760",
    "end": "654160"
  },
  {
    "text": "for each of the little microservices and then we got the pole web front end which is the MVC app and if I open that up",
    "start": "654160",
    "end": "659920"
  },
  {
    "text": "if you haven't seen um ASP 5's project yet it looks very similar right we have",
    "start": "659920",
    "end": "665399"
  },
  {
    "text": "our models we have our controls we have our views we have some static content here on a www route that we'll come to later",
    "start": "665399",
    "end": "672360"
  },
  {
    "text": "and then if we scroll down we see we have a project. Json file which we'll come to again shortly now as an I kind",
    "start": "672360",
    "end": "678680"
  },
  {
    "text": "of deployment guy um I'm kind of looking for web config but I'm not seeing it here right I'm seeing some config Json",
    "start": "678680",
    "end": "684440"
  },
  {
    "text": "files right that's one of the things they changed at as 5 is they've gone away from the whole having the web file",
    "start": "684440",
    "end": "689760"
  },
  {
    "text": "and made config a lot more configurable you can have Json config files or XML config files or ini config files or",
    "start": "689760",
    "end": "696440"
  },
  {
    "text": "environment variables you get to control a lot more of that um which is so we're",
    "start": "696440",
    "end": "701480"
  },
  {
    "text": "using Json config files and another concept that's common throughout as5 is this environment variable a",
    "start": "701480",
    "end": "708760"
  },
  {
    "text": "SPV it's describing the environment that we are actually running our application at so here in Visual Studio we're",
    "start": "708760",
    "end": "715360"
  },
  {
    "text": "basically setting the environment variable to development and then when we run our applic we're using that environment variable to let us know",
    "start": "715360",
    "end": "722320"
  },
  {
    "text": "which one of our configs do we actually load up do we want to load up the development config or our code deploy",
    "start": "722320",
    "end": "727959"
  },
  {
    "text": "config or Bean one we have all those controls and that config is what we are using in pollster is how do we actually",
    "start": "727959",
    "end": "733720"
  },
  {
    "text": "find our microservices so in a sense this is like the web config transforms so we had",
    "start": "733720",
    "end": "739279"
  },
  {
    "text": "before where it was just debug or release this kind of similar system right often it's the that environment",
    "start": "739279",
    "end": "744760"
  },
  {
    "text": "was also used for to determine whether do I want to use debug JavaScript or minifi JavaScript",
    "start": "744760",
    "end": "749880"
  },
  {
    "text": "we just kind of used it also to decide our config file okay so that's our project not much",
    "start": "749880",
    "end": "755880"
  },
  {
    "start": "756000",
    "end": "756000"
  },
  {
    "text": "different so once you know we forgot to mention too we actually open source all this code I skipped that step um so we",
    "start": "756519",
    "end": "764880"
  },
  {
    "text": "don't have time to go through a lot of the code actually that's all we really have time for um so if you want to see",
    "start": "764880",
    "end": "770519"
  },
  {
    "text": "how we develop that application all this thing is put out in our samples uh G repository we piss we we went past that",
    "start": "770519",
    "end": "776399"
  },
  {
    "text": "link but it's also at the end so any wants to see how we developed that it's there so once we had that development we",
    "start": "776399",
    "end": "783160"
  },
  {
    "text": "wanted to figure out how we actually deploy this currently to AWS and so the things we need to think about is how do",
    "start": "783160",
    "end": "788839"
  },
  {
    "text": "we actually package up our application which for that we got for free because that dnu command actually has the the",
    "start": "788839",
    "end": "795240"
  },
  {
    "text": "command to package up all of our stuff for us and then wherever what environment we deploy to we need to make",
    "start": "795240",
    "end": "801680"
  },
  {
    "text": "sure it actually supports aspet 5 because aset 5 is brand new and it's",
    "start": "801680",
    "end": "806959"
  },
  {
    "text": "getting new updates all the time and our windows on I are not going to have it on there so how do we make sure that it's",
    "start": "806959",
    "end": "812320"
  },
  {
    "text": "going to be there and that's where we're going to take advantage of the fact that we can bundle our runtime with our",
    "start": "812320",
    "end": "818360"
  },
  {
    "text": "application and pollster we we have five separate Pro processes to get it all up",
    "start": "818360",
    "end": "823440"
  },
  {
    "text": "and running so how do we actually ship all five services to our environments and get them running and ideally we want",
    "start": "823440",
    "end": "829800"
  },
  {
    "text": "to be able to deploy each one of those independently we don't want to think about we have a bug fix in one service how do we now have to deploy the whole",
    "start": "829800",
    "end": "836320"
  },
  {
    "text": "entire system and once we get it deployed how do we scale this thing what's our",
    "start": "836320",
    "end": "842839"
  },
  {
    "text": "strategy the first thing we're going to take a look at is how did we deploy um our application to adus code deploy and",
    "start": "842959",
    "end": "849480"
  },
  {
    "start": "843000",
    "end": "843000"
  },
  {
    "text": "again we're going to stick here with Windows and I the things that we're familiar with and our Windows alies do",
    "start": "849480",
    "end": "854600"
  },
  {
    "text": "not have as 5 on there so we're going to bundle our our runtime our net runtime",
    "start": "854600",
    "end": "859800"
  },
  {
    "text": "with our application and that's how we can get it to run there and code deploy allows us to have a very scriptable",
    "start": "859800",
    "end": "866120"
  },
  {
    "text": "deployment mechanism we can actually use Powershell and batch files to any sort of setup we need when we deploy",
    "start": "866120",
    "end": "873240"
  },
  {
    "text": "them so our perimet is for Rus code deploy is we have an application and this is that logical container of our",
    "start": "873279",
    "end": "880199"
  },
  {
    "text": "application and it has a deployment group associated with it and that deployment group shows all the ec2",
    "start": "880199",
    "end": "886320"
  },
  {
    "text": "instances that I actually want to deploy this application to and we can actually reuse those same ec2 instances for",
    "start": "886320",
    "end": "892720"
  },
  {
    "text": "multiple deployment groups Steve actually why don't we take a look how we set that up for sure so I head off to",
    "start": "892720",
    "end": "898199"
  },
  {
    "text": "the console and and in here go to code deploy and then here you can see his or",
    "start": "898199",
    "end": "905399"
  },
  {
    "text": "our applications click on one here here's our deployment group there two instances",
    "start": "905399",
    "end": "912079"
  },
  {
    "text": "running each of the services so we had every one of our five separate processes is considered a code deploy application",
    "start": "912079",
    "end": "918639"
  },
  {
    "start": "918000",
    "end": "918000"
  },
  {
    "text": "so we're basically going to deploy each one of those independently so our deployment is an application bundle",
    "start": "918639",
    "end": "924480"
  },
  {
    "text": "within this case of runtime as well and it also has this atpc y file this is the",
    "start": "924480",
    "end": "930160"
  },
  {
    "text": "file that tells code deploy how do I actually install this application here's it what the aspect",
    "start": "930160",
    "end": "935839"
  },
  {
    "text": "file looks like for our pole feed service and this one's pretty basic all it's really doing is extracting all our",
    "start": "935839",
    "end": "941759"
  },
  {
    "text": "files underneath I and then during application start we run a Powershell script that sets up that virtual",
    "start": "941759",
    "end": "947519"
  },
  {
    "text": "directory in is and then an application stop essentially when it's being",
    "start": "947519",
    "end": "952600"
  },
  {
    "text": "uninstalled we run another Power shell script to remove it so we can clean up after ourselves",
    "start": "952600",
    "end": "959160"
  },
  {
    "text": "adus code deploy is considered one of our our building block Services you get to decide what is your compute",
    "start": "960000",
    "end": "965959"
  },
  {
    "text": "architecture um you it's you're going to set it up so we could do something very simple like create a load balancer and a",
    "start": "965959",
    "end": "972480"
  },
  {
    "text": "few ec2 instances and create a old pmit group for that and have all of our machine all of our pollster services",
    "start": "972480",
    "end": "979079"
  },
  {
    "text": "running on each of those machines alternatively we could say some",
    "start": "979079",
    "end": "984319"
  },
  {
    "start": "982000",
    "end": "982000"
  },
  {
    "text": "of these services are more high traffic so let's put those on a deployment group that's got more more compute power",
    "start": "984319",
    "end": "990000"
  },
  {
    "text": "behind it and put our lower traffics on a smaller deployment group so there it just sort of depends on what is your",
    "start": "990000",
    "end": "996279"
  },
  {
    "text": "needs you get to Define that compute architecture for you so we've actually already um",
    "start": "996279",
    "end": "1002000"
  },
  {
    "text": "deployed it as you saw so let's take a look how we deployed it and Steve I noticed when we did look at clo poster",
    "start": "1002000",
    "end": "1007319"
  },
  {
    "text": "the banner was wrong right it said development didn't it that's right yeah so at the top here we've got a little Banner that just tells us what that",
    "start": "1007319",
    "end": "1013759"
  },
  {
    "text": "asp.net environment variable was set to and obviously you didn't pick up my code change you probably check it in right so",
    "start": "1013759",
    "end": "1020079"
  },
  {
    "text": "let's fix that and let's redeploy it so get ridig file take that out so I to",
    "start": "1020079",
    "end": "1026918"
  },
  {
    "text": "know that's in layout and I think you were a bit upset when I put this in so you commented everything out so let me",
    "start": "1026919",
    "end": "1032400"
  },
  {
    "text": "just swipe and uncomment all of this and",
    "start": "1032400",
    "end": "1038120"
  },
  {
    "text": "edit comment okay that's the only change we need to",
    "start": "1038760",
    "end": "1043959"
  },
  {
    "text": "make right we're not deploying binaries anymore we're deploying source code with as. net5 so we're good to go all",
    "start": "1043959",
    "end": "1050240"
  },
  {
    "text": "right so is this the point at which I get to run that new dnu command you mentioned to do we could run the dnu now",
    "start": "1050240",
    "end": "1056080"
  },
  {
    "text": "to actually start packaging up um what we thought when we started looking at this is we really wanted to um",
    "start": "1056080",
    "end": "1063480"
  },
  {
    "text": "centralize How We Do Everything um when you use DNX use DNX to actually run your",
    "start": "1063480",
    "end": "1069240"
  },
  {
    "text": "application and you actually get to write your own custom commands as well and so we thought if we wrote deployment",
    "start": "1069240",
    "end": "1074679"
  },
  {
    "text": "commands that would be part of our project and since they're DNX console applications it makes those crossplatform",
    "start": "1074679",
    "end": "1080520"
  },
  {
    "text": "so if we look at our project Json file we can look how we set that",
    "start": "1080520",
    "end": "1085640"
  },
  {
    "text": "up so here's the Json F so you can see our dependencies our references effectively if I scroll down you can see",
    "start": "1085640",
    "end": "1091440"
  },
  {
    "text": "a bunch of commands krel and then some custom commands yeah so those commands is what DNX uses to figure out how to",
    "start": "1091440",
    "end": "1097520"
  },
  {
    "text": "run your application so Kestrel is the the web server you can use to self-host your as applications and the bottom",
    "start": "1097520",
    "end": "1105120"
  },
  {
    "text": "three are the ones that we wrote which are basically going to run that command line pul deployment commands which is a console application so we have one of",
    "start": "1105120",
    "end": "1112440"
  },
  {
    "text": "those called deploy code deploy why don't we just go ahead and run that first so I just jump away to a console",
    "start": "1112440",
    "end": "1118480"
  },
  {
    "text": "hopefully you guys can see this yeah um so I'm just going to run uh DNX and then",
    "start": "1118480",
    "end": "1123919"
  },
  {
    "text": "deploy iPhone code",
    "start": "1123919",
    "end": "1127480"
  },
  {
    "text": "deploy there we go so I've St from running so should we go take a look what that's doing yeah",
    "start": "1132919",
    "end": "1139159"
  },
  {
    "text": "so down in our solution file here we've got a tools folder and here's a project that corresponds if you see pulser",
    "start": "1139159",
    "end": "1144640"
  },
  {
    "text": "deployment commands it's just a simple console application but in there we have code deploy processor and if I scroll",
    "start": "1144640",
    "end": "1150880"
  },
  {
    "text": "through this code and get down here a little bit you'll see here's the execution so we get the publish directory where we're going to put the",
    "start": "1150880",
    "end": "1156600"
  },
  {
    "text": "bundle two as a zip file uh and then we're calling something called execute published so if I just navigate away to",
    "start": "1156600",
    "end": "1162840"
  },
  {
    "text": "that you see here all that we're actually doing is getting output folder packaging all the files together so this",
    "start": "1162840",
    "end": "1169000"
  },
  {
    "text": "is effectively wrapping dnu right because you've got a runtime switch as well right yeah like I said we could have run dnu we decided to wrap it",
    "start": "1169000",
    "end": "1174799"
  },
  {
    "text": "around so we could always have a consistent set of arguments it was just part of our project setup um and we have",
    "start": "1174799",
    "end": "1179880"
  },
  {
    "text": "that extra bully in there to say to include runtime and so that's how you can see as part of the command line argument we're saying include the",
    "start": "1179880",
    "end": "1185520"
  },
  {
    "text": "current active runtime that's running on my box okay so let's run dnu so we have the application package ready to go so",
    "start": "1185520",
    "end": "1192360"
  },
  {
    "text": "we go back to the code deploy processor we then looks like we're doing some copying of files we're copying the the abpc yaml file to the route right",
    "start": "1192360",
    "end": "1198919"
  },
  {
    "text": "because in our source code we have aspect file kind of buried in one of our folders with all of the rest of our code deploy information and code deploy",
    "start": "1198919",
    "end": "1205919"
  },
  {
    "text": "expects that absp yam file to be at the root of your application bundle so we just needed to move that up to the top",
    "start": "1205919",
    "end": "1211240"
  },
  {
    "text": "of the bundle okay so once that's done we then zip up the directory where we've uh bundled everything together and then",
    "start": "1211240",
    "end": "1216720"
  },
  {
    "text": "this looks familiar we just create an S3 object upload the bundle to S3 and then we send a create deployment",
    "start": "1216720",
    "end": "1222960"
  },
  {
    "text": "request to code deploy with a new revision location pointing at the new bundle in S3 it's as simple as that",
    "start": "1222960",
    "end": "1229960"
  },
  {
    "text": "right probably been done let's go check uh there we go deployment initiated so if we now go to the console go to code",
    "start": "1229960",
    "end": "1237360"
  },
  {
    "text": "deploy and then go to the top and select deployments we should see one of the last few seconds it says a minute ago",
    "start": "1237360",
    "end": "1244200"
  },
  {
    "text": "there we go go deploy looks like they've all gone through two instances done so if we now",
    "start": "1244200",
    "end": "1251559"
  },
  {
    "text": "go and launch window if we now go and launch a tab onto that version of code deploy uh pul strong code deploy we",
    "start": "1251559",
    "end": "1258640"
  },
  {
    "text": "should hopefully see the banner has changed of course there's a few seconds because we've deploying source code so",
    "start": "1258640",
    "end": "1264520"
  },
  {
    "text": "in memory compilation going on now there we go page serve from Windows",
    "start": "1264520",
    "end": "1270679"
  },
  {
    "text": "iOS and adus code deploy all right fixed there we go so that's how we were able [Applause]",
    "start": "1270679",
    "end": "1280259"
  },
  {
    "text": "to all right so I'm going to vote again see how we doing I'm sure everyone's",
    "start": "1280360",
    "end": "1286360"
  },
  {
    "text": "voting for that was the give me he thinking about it yeah compiling that Source too whatever oh 79 very",
    "start": "1286360",
    "end": "1294159"
  },
  {
    "text": "interesting okay all right so to the slides what' you learn Steve so I",
    "start": "1294159",
    "end": "1300799"
  },
  {
    "text": "learned well right now I'm feeling super comfortable right because I know I deployment I know that I can now take advantage I can take advantage of",
    "start": "1300799",
    "end": "1306840"
  },
  {
    "text": "asp.net 5 and take just a bare bounds instance and deploy my app right I don't have to wait for somebody to set up a",
    "start": "1306840",
    "end": "1312279"
  },
  {
    "text": "custom army for me with the runtime Etc that I need um I can do traditional net I can do cor CLR if I want",
    "start": "1312279",
    "end": "1319240"
  },
  {
    "text": "we can still deploy each service independently I only sent out the web front end there I didn't send out all the individual services and scaling is",
    "start": "1319240",
    "end": "1325320"
  },
  {
    "text": "pretty simple right I just add new instances right it's as easy as that so yeah it's pretty",
    "start": "1325320",
    "end": "1330760"
  },
  {
    "text": "cool so now Steve let's let's challenge you here a bit let's go to Docker now",
    "start": "1330760",
    "end": "1336320"
  },
  {
    "start": "1331000",
    "end": "1331000"
  },
  {
    "text": "where we're going to actually containerize our application where we're going to take each of those five pollster services and run those a",
    "start": "1336320",
    "end": "1341559"
  },
  {
    "text": "separate Docker containers in this way they're going to run a complete isolation giving us control of how much",
    "start": "1341559",
    "end": "1347279"
  },
  {
    "text": "CPU and how much memory each each one of those containers going to use and remember Docker currently only runs on Linux we know Microsoft is working on",
    "start": "1347279",
    "end": "1354200"
  },
  {
    "text": "making windows-based Docker containers so next year we could have a different conversation but today we're going to take advantage of our cross platform",
    "start": "1354200",
    "end": "1361880"
  },
  {
    "text": "support So crash course for you Steve I we're going to learn about so Docker",
    "start": "1361880",
    "end": "1368440"
  },
  {
    "start": "1362000",
    "end": "1362000"
  },
  {
    "text": "has images and an image is basically a snapshot of your application it contains all the files and all the dependencies",
    "start": "1368440",
    "end": "1373919"
  },
  {
    "text": "for your application along with the instructions on how to actually start your application up",
    "start": "1373919",
    "end": "1379400"
  },
  {
    "text": "and then there's a container which is the running instance of that image it's very similar to a virtual machine except",
    "start": "1379400",
    "end": "1385880"
  },
  {
    "text": "it has it's more a lot more efficient efficient because it reuses a lot of the",
    "start": "1385880",
    "end": "1391200"
  },
  {
    "text": "host machine resources you only get your own separate copy of those resources once you try to change them in the",
    "start": "1391200",
    "end": "1397039"
  },
  {
    "text": "container and this gives us a big performance benefit as well as the near instant startup for these containers",
    "start": "1397039",
    "end": "1403919"
  },
  {
    "text": "versus a virtual machine which can take several seconds or minutes to start up and then once we've run our container",
    "start": "1403919",
    "end": "1409960"
  },
  {
    "text": "locally we've proved that this is the perfect container and it's awesome we wanted to share it out to other machines",
    "start": "1409960",
    "end": "1415360"
  },
  {
    "text": "running our uh other machines running Docker we can push this image to what's",
    "start": "1415360",
    "end": "1420559"
  },
  {
    "text": "called a registry um and then other machines that are running Docker can actually pull",
    "start": "1420559",
    "end": "1425880"
  },
  {
    "text": "those down and start running it and Registries are either public like the official Docker Hub registry or they can",
    "start": "1425880",
    "end": "1431480"
  },
  {
    "text": "also be private as well a little bit more on images or yeah",
    "start": "1431480",
    "end": "1437039"
  },
  {
    "text": "images images are actually all built on layers so when when Steve and I are working on container containerizing our",
    "start": "1437039",
    "end": "1443720"
  },
  {
    "text": "services we're actually only defining really that top layer that pollster service layer all the files that we care",
    "start": "1443720",
    "end": "1448880"
  },
  {
    "text": "about but then we say this layer depends on another Docker image and this case we",
    "start": "1448880",
    "end": "1454919"
  },
  {
    "text": "want to depend on the a 5 Docker image this is the image that Microsoft maintains and then that one says it has",
    "start": "1454919",
    "end": "1461919"
  },
  {
    "text": "a dependency on mono and that's how we get our runtime so in this case our runtime isn't bundled with our",
    "start": "1461919",
    "end": "1467399"
  },
  {
    "text": "application it's going to be already part of our Docker container based off of our layers which then also the model",
    "start": "1467399",
    "end": "1473640"
  },
  {
    "text": "has a dependency on Linux so that's we get our full stack to create a Docker image we write",
    "start": "1473640",
    "end": "1479960"
  },
  {
    "text": "what's called a Docker file that defines all the files we want to include in our image we also say what ports we want to",
    "start": "1479960",
    "end": "1486919"
  },
  {
    "text": "expose from our container out to our host machine and then whatever instructions it takes to actually start",
    "start": "1486919",
    "end": "1492559"
  },
  {
    "text": "our application up once we have that file we use the docker command line to actually do that build",
    "start": "1492559",
    "end": "1499279"
  },
  {
    "text": "you feeling brave Steve let's give it a go all right sweaty hands yeah sweaty hands do",
    "start": "1499279",
    "end": "1505960"
  },
  {
    "text": "console work right okay so I noticed that in the project we had a Docker file so let's go",
    "start": "1505960",
    "end": "1512200"
  },
  {
    "text": "take a quick look at that and uh H okay well I was kind of expecting something a little bit more detailed to be honest",
    "start": "1512200",
    "end": "1518600"
  },
  {
    "text": "right but based on what you just said I'm going to have a crack of decoding this right so you said that we only have to declare the layer that we depend on",
    "start": "1518600",
    "end": "1525440"
  },
  {
    "text": "immediately below us right so that's the first line the from we don't need to worry about all the other bits underneath we're building an image in",
    "start": "1525440",
    "end": "1532799"
  },
  {
    "text": "this particular case so add just suggests we're adding everything in a certain folder to a SL app path in the",
    "start": "1532799",
    "end": "1538080"
  },
  {
    "text": "image right of the work do set Expos 5,000 you were talking about ports right",
    "start": "1538080",
    "end": "1544279"
  },
  {
    "text": "but my users are not going expect to go to Port 5,000 right so this is going to be the port that the container exposes",
    "start": "1544279",
    "end": "1550520"
  },
  {
    "text": "to the host but then we can actually set up dock we can map our host ports to our container ports so that's when we're",
    "start": "1550520",
    "end": "1556600"
  },
  {
    "text": "going to later map Port 80 on the to map Port 5000 on our container okay and",
    "start": "1556600",
    "end": "1561960"
  },
  {
    "text": "entry point Cal I guess is just the web Tech that we're going to we're going to host in okay so there's our Docker file",
    "start": "1561960",
    "end": "1567440"
  },
  {
    "text": "so I guess we go back to the source file the source folder and you want me to",
    "start": "1567440",
    "end": "1572960"
  },
  {
    "text": "write some Docker code here right well first we should we got to publish our application and then we could use dnu",
    "start": "1572960",
    "end": "1578440"
  },
  {
    "text": "publish but we also created one of our DNX commands publish only which encapsulate that dnu you that was the",
    "start": "1578440",
    "end": "1584480"
  },
  {
    "text": "bit that wrapped dnu right yep okay so DNX publish",
    "start": "1584480",
    "end": "1591440"
  },
  {
    "text": "only so what really this is doing it's doing deu we're also copying everything to our temp folder we have found in our",
    "start": "1596440",
    "end": "1603159"
  },
  {
    "text": "experience that a lot of these n packages create some very long names and we very often run into the windows 260",
    "start": "1603159",
    "end": "1608720"
  },
  {
    "text": "character file path limit um which drives us all crazy so I pushed everything to the temp folder okay",
    "start": "1608720",
    "end": "1614240"
  },
  {
    "text": "that's done why don't we go look at the temp folder and see what it does okay so PA web front end here we are so",
    "start": "1614240",
    "end": "1620720"
  },
  {
    "text": "here's ww rout that's the static content we saw in the project we obviously have some scripts lying in here but we've got",
    "start": "1620720",
    "end": "1626120"
  },
  {
    "text": "this new thing called app rout um packages I guess is all the packages it sucked in we go to Source there's our",
    "start": "1626120",
    "end": "1632480"
  },
  {
    "text": "application packaged up effectively ready to go right so all is good so back",
    "start": "1632480",
    "end": "1638360"
  },
  {
    "text": "to the command line so now we need to go on our console that's actually in our published folder and we actually want to",
    "start": "1638360",
    "end": "1644200"
  },
  {
    "text": "run Docker build for that okay so here we are whole web front end so uh Docker and you said",
    "start": "1644200",
    "end": "1651480"
  },
  {
    "text": "build and then we need to tag our new image this is like a version right yeah like a version okay so we do a-t to say",
    "start": "1651480",
    "end": "1658200"
  },
  {
    "text": "we want to tag it and then when you're pushing Docker images to Docker Hub you need to give it uh the name space um for",
    "start": "1658200",
    "end": "1664240"
  },
  {
    "text": "us our name space is ADB with.net and then we need to do a slash",
    "start": "1664240",
    "end": "1670200"
  },
  {
    "text": "and the name of our actual image and all of our the mechanisms that we created for pulser for deployment is doing all",
    "start": "1670200",
    "end": "1675799"
  },
  {
    "text": "the name heuristics based off of our project name so we need to name our image the same as our project name is",
    "start": "1675799",
    "end": "1681200"
  },
  {
    "text": "this case sensitive yes Docker actually requires all that the name to be completely lowercase",
    "start": "1681200",
    "end": "1688039"
  },
  {
    "text": "okay okay and then we do colon and you get to pick a tag what do you want to call it uh let's use the session ID so",
    "start": "1688880",
    "end": "1695679"
  },
  {
    "text": "Dev 302 I think it is okay okay now we need to point to where our Docker file",
    "start": "1695679",
    "end": "1700760"
  },
  {
    "text": "is and that's with the- f command okay and that will be the docker file that we deployed out to app rout in that package",
    "start": "1700760",
    "end": "1707039"
  },
  {
    "text": "right right so that's going to be let's see I'm in there so it's going to be slash app rot uh",
    "start": "1707039",
    "end": "1712840"
  },
  {
    "text": "Source pole web front end it should be Docker file there we go yeah and then we",
    "start": "1712840",
    "end": "1718880"
  },
  {
    "text": "just need to say we want to run from this directory so we'll include everything from this point",
    "start": "1718880",
    "end": "1724000"
  },
  {
    "text": "down so this should very fast the reason this is fast for us is we've already ran this before and we've actually already",
    "start": "1725120",
    "end": "1732120"
  },
  {
    "text": "pulled down that base image that Microsoft asp.net layer if we were running for the first time then it would have to pull that layer down",
    "start": "1732120",
    "end": "1739559"
  },
  {
    "text": "so now ideally what we would do is we would now do Docker run to actually start running our application um we're",
    "start": "1739559",
    "end": "1745600"
  },
  {
    "text": "going to assume for today's sake that Steve wrote the most beautiful code and it's ready to ship so what we do then is",
    "start": "1745600",
    "end": "1750640"
  },
  {
    "text": "we actually push it to our registry and we do that with Docker",
    "start": "1750640",
    "end": "1755799"
  },
  {
    "text": "push and we give the full name to our our image that we just",
    "start": "1755799",
    "end": "1761760"
  },
  {
    "text": "created we do yeah abs. net oh the tag you mean I'm",
    "start": "1761760",
    "end": "1767240"
  },
  {
    "text": "sorry I thought you meant the um the folder location oh",
    "start": "1767240",
    "end": "1771919"
  },
  {
    "text": "no two okay I believe that's what I typed okay and we've actually already",
    "start": "1775120",
    "end": "1782720"
  },
  {
    "text": "um so this is going to be pushed to Docker Hub and we actually ran Docker log on previously today to handle the",
    "start": "1782720",
    "end": "1788720"
  },
  {
    "text": "log on which is why we were able to do that without it being prompted this takes a little bit to run so why don't we go back to the slides while that's",
    "start": "1788720",
    "end": "1795240"
  },
  {
    "text": "pushing up to Docker hub so we've seen how you can now create",
    "start": "1795240",
    "end": "1800519"
  },
  {
    "start": "1798000",
    "end": "1798000"
  },
  {
    "text": "this image with ads and ads SDK and as 5 code now we're going to start looking at",
    "start": "1800519",
    "end": "1807159"
  },
  {
    "text": "how we can actually deploy this Docker image with abs elastic beanock and beanock has a couple ways you can do",
    "start": "1807159",
    "end": "1813440"
  },
  {
    "text": "this they have What's called the single single container environment which is for when you have your monolithic",
    "start": "1813440",
    "end": "1818760"
  },
  {
    "text": "application that's all in one image but that's not going to work for us because poster again is it's got five",
    "start": "1818760",
    "end": "1824799"
  },
  {
    "text": "services that we want to deploy each independently so they also have What's called the multicontainer environment",
    "start": "1824799",
    "end": "1830720"
  },
  {
    "text": "which actually is a wrapper around the ec2 container service but it simplifies a lot of the administration we don't",
    "start": "1830720",
    "end": "1836640"
  },
  {
    "text": "have to think about our compute architecture how we create it it'll create it for us but give us a lot of power to still how we want to tweak it",
    "start": "1836640",
    "end": "1842840"
  },
  {
    "text": "after it sets that up for us so our pretus for being suck is we",
    "start": "1842840",
    "end": "1848000"
  },
  {
    "start": "1845000",
    "end": "1845000"
  },
  {
    "text": "have an application this is our logical container for the application and then an application version which is a",
    "start": "1848000",
    "end": "1853919"
  },
  {
    "text": "pointer to our application bundle in as3 and then we have an environment which is",
    "start": "1853919",
    "end": "1859799"
  },
  {
    "text": "the actual ads resources that's going to run our application and I mentioned unlike code",
    "start": "1859799",
    "end": "1866880"
  },
  {
    "text": "deploy which was a building block service and we had to create our compute architecture for us beanock is going to actually create this compute",
    "start": "1866880",
    "end": "1872200"
  },
  {
    "text": "architecture for us we say create the environment for us it's going to set up the load balancer and auto scaling group and create up the ec2 instances all for",
    "start": "1872200",
    "end": "1879159"
  },
  {
    "text": "us and once it has it there are also a lot of extra knobs we can then tweak on that to customize it for us so it's got",
    "start": "1879159",
    "end": "1884480"
  },
  {
    "text": "a lot of power just getting things up and running now to deploy our application to beanock",
    "start": "1884480",
    "end": "1892120"
  },
  {
    "text": "we have to write what's called the docker run. ads. Json file and this um",
    "start": "1892120",
    "end": "1897960"
  },
  {
    "text": "defines or this is actually the application bundle in this case so this is very different than we're used to",
    "start": "1897960",
    "end": "1903279"
  },
  {
    "text": "with our traditional Visual Studio deployment where essentially we right clicked it in visual studio and we said publish that compiled it zipped it up",
    "start": "1903279",
    "end": "1909720"
  },
  {
    "text": "into a web deploy archive and sent it to S3 here we have just this Json file the reason it's done that is",
    "start": "1909720",
    "end": "1916519"
  },
  {
    "text": "because we actually already pushed our applic to our registry and what this file is saying is what images do we pull",
    "start": "1916519",
    "end": "1922320"
  },
  {
    "text": "from our registry and then then it's going to say for those images what's the runtime configuration any environment",
    "start": "1922320",
    "end": "1928399"
  },
  {
    "text": "variables we need to set the memory and CPU we want for that image and the port mappings and that's how we can say let's",
    "start": "1928399",
    "end": "1933519"
  },
  {
    "text": "have Port 5,000 go to point 80 on the host so we've actually already deployed",
    "start": "1933519",
    "end": "1940240"
  },
  {
    "text": "this um Steve you want to show what it looked like in the console yep so back to the console scroll up and",
    "start": "1940240",
    "end": "1947360"
  },
  {
    "text": "go to be St so here's our Bean stalk environment for",
    "start": "1947360",
    "end": "1953320"
  },
  {
    "text": "pollster and we just go in here running away nicely okay and then we've created",
    "start": "1953320",
    "end": "1958880"
  },
  {
    "text": "a new image so let's update our Docker run file to point to that new image so here's the docker run file we're",
    "start": "1958880",
    "end": "1964880"
  },
  {
    "text": "interested in so you can see here each of the individual uh images or projects that we be working on so let's change",
    "start": "1964880",
    "end": "1970279"
  },
  {
    "text": "this version here to be uh Dev 302 I can see you've got your",
    "start": "1970279",
    "end": "1975480"
  },
  {
    "text": "environment varibles set you've got your Port mapping set but line 51 looks interesting links what's that for so",
    "start": "1975480",
    "end": "1981919"
  },
  {
    "text": "actually if you look in the config file for poster um for uh bean stock you can see the way it's actually trying to find",
    "start": "1981919",
    "end": "1989399"
  },
  {
    "text": "the microservices is by the name of that service and by when we say in that",
    "start": "1989399",
    "end": "1995720"
  },
  {
    "text": "Docker run file we want to link what it's going to actually do for us is when that container is deployed it's going to",
    "start": "1995720",
    "end": "2001960"
  },
  {
    "text": "right into its host file to make the name of those images point to the",
    "start": "2001960",
    "end": "2007799"
  },
  {
    "text": "containers running that IP address so that's a way we can get that you know pass that information into our Master",
    "start": "2007799",
    "end": "2014679"
  },
  {
    "text": "you know web friend end how to connect to our services so why don't we try actually deploying that okay so I've edited the",
    "start": "2014679",
    "end": "2021600"
  },
  {
    "text": "docker file so I'm just going to upload and deploy here so I'm going to and choose the file which is not where I",
    "start": "2021600",
    "end": "2026960"
  },
  {
    "text": "wanted it to be where did I put that file",
    "start": "2026960",
    "end": "2032120"
  },
  {
    "text": "now go to in samples all right",
    "start": "2032120",
    "end": "2038960"
  },
  {
    "text": "we get to look through your machine now this is cool yeah all right where did you put it get Repros yep right samples",
    "start": "2040480",
    "end": "2047120"
  },
  {
    "text": "is down there samples is where not seeing it yet it's the joy",
    "start": "2047120",
    "end": "2053760"
  },
  {
    "text": "switching machines right before the talk there we go is this the one I just changed all right so this is that",
    "start": "2053760",
    "end": "2059240"
  },
  {
    "text": "samples repository we're talking about oh that's actually quite useful that we're doing this then yeah remember it's on it's on",
    "start": "2059240",
    "end": "2065638"
  },
  {
    "text": "GitHub uh back up back up one sorry there more deployment scripts",
    "start": "2065760",
    "end": "2071440"
  },
  {
    "text": "deployment scripts of course there we go all right and I'm was going to give this the same version tag",
    "start": "2071440",
    "end": "2078079"
  },
  {
    "text": "doesn't have can be anything but I'm going to use the same one there's nothing else that I need to change there so I hit",
    "start": "2078079",
    "end": "2083280"
  },
  {
    "text": "deploy okay so now being T now take that file and it's then going to find out what are",
    "start": "2083280",
    "end": "2089040"
  },
  {
    "text": "the docker Imes I need to pull down and start running those we could actually um go into one of those machines and check",
    "start": "2089040",
    "end": "2094320"
  },
  {
    "text": "out see what's going on okay got a visual I'll open up the adus",
    "start": "2094320",
    "end": "2100640"
  },
  {
    "text": "Explorer",
    "start": "2101359",
    "end": "2104359"
  },
  {
    "text": "quietly here we go so I'll open up ec2 instances so I'm guessing you've tagged",
    "start": "2108040",
    "end": "2113440"
  },
  {
    "text": "these with be we go pster beant so there Linux so I'm SSH we use the key pair so",
    "start": "2113440",
    "end": "2119240"
  },
  {
    "text": "I'm just going to click okay the tool kit will do all the work and might not changed the fonts here yeah oh no that's quite large",
    "start": "2119240",
    "end": "2127400"
  },
  {
    "text": "maybe I should have used the machine at the top oh look can't open",
    "start": "2132520",
    "end": "2137960"
  },
  {
    "text": "file all right let me try the other one yes I do want to close the session all right poster be stock let's try that",
    "start": "2138240",
    "end": "2147078"
  },
  {
    "text": "again there we go that's better all right so here I on the machine so how do I see what's running if we do a a pseudo",
    "start": "2147880",
    "end": "2154839"
  },
  {
    "text": "Docker PS that actually tells you all the current running um Docker containers okay okay there they are so there's our",
    "start": "2154839",
    "end": "2161480"
  },
  {
    "text": "individual projects or our containers they all restarted 12 seconds then 24 seconds ago yeah that's one of the",
    "start": "2161480",
    "end": "2167280"
  },
  {
    "text": "things you should be aware of when you're using beanock as your Docker deployment um when even we we only",
    "start": "2167280",
    "end": "2172640"
  },
  {
    "text": "pushed one New Image but all of them do get restarted in this multicontainer environment so you mentioned there was a",
    "start": "2172640",
    "end": "2179000"
  },
  {
    "text": "like a host remap going on with that links right can I can I dig into it from here yeah we can actually open up a bash",
    "start": "2179000",
    "end": "2184400"
  },
  {
    "text": "shell script into uh what don't we do into the web front end to do that we do a pseudo Docker",
    "start": "2184400",
    "end": "2191200"
  },
  {
    "text": "exac okay and then we do a-t to give us a terminal dasi to make it interactive",
    "start": "2191200",
    "end": "2197319"
  },
  {
    "text": "and then we got to pass in the container ID one we want to actually connect",
    "start": "2197319",
    "end": "2202680"
  },
  {
    "text": "to okay and then say we want to do a b bash to open up a bash script bash so",
    "start": "2203319",
    "end": "2209319"
  },
  {
    "text": "now we hear bash script right onto that container okay so I just look at more Etc hosts oh there we go see Paul feed Paul",
    "start": "2209319",
    "end": "2216599"
  },
  {
    "text": "voter and Paul writer from the links they're in our config right nice all right so if I exit from there we exit",
    "start": "2216599",
    "end": "2222960"
  },
  {
    "text": "out of that shell and we go back to link here and bring up the beant",
    "start": "2222960",
    "end": "2228280"
  },
  {
    "text": "stalk environment wrong one yeah that's the",
    "start": "2228280",
    "end": "2233880"
  },
  {
    "text": "right one we got the ban there we go got the banix docker and beanock yeah cool okay and I'm going to vote",
    "start": "2233880",
    "end": "2239480"
  },
  {
    "text": "again I know how many times I've voted so we can discount this from the actual",
    "start": "2239480",
    "end": "2245039"
  },
  {
    "text": "total okay what you other Steve well it's pretty",
    "start": "2245920",
    "end": "2251760"
  },
  {
    "text": "simple to set up right um we can still we push our images independently however when we deploy to The Container you know",
    "start": "2251760",
    "end": "2258079"
  },
  {
    "text": "all those images all those uh containers are going to restart it's just one of the things we have um scaling similar to",
    "start": "2258079",
    "end": "2263920"
  },
  {
    "text": "code deploy we just add another machine but it's pretty cool I can take an sp. net app and just deploy it to beanock",
    "start": "2263920",
    "end": "2269640"
  },
  {
    "text": "and run it on Linux right thanks great that's cool so now that we've seen how to do",
    "start": "2269640",
    "end": "2275520"
  },
  {
    "text": "with beanock and I mentioned that beanock multicontainer is really wrapping around ec2 container service",
    "start": "2275520",
    "end": "2281520"
  },
  {
    "text": "let's take a look at how we could use that service directly so our Primitives here is we have a task definition which it's is its",
    "start": "2281520",
    "end": "2288640"
  },
  {
    "start": "2284000",
    "end": "2284000"
  },
  {
    "text": "collection of container definitions um and we get to specify the CPU and memory and Port mapping environment very",
    "start": "2288640",
    "end": "2294880"
  },
  {
    "text": "similar to what we saw with that Dr run file from beanock and then we have the service",
    "start": "2294880",
    "end": "2300560"
  },
  {
    "text": "this a service is a long liveed task like a web server or our console",
    "start": "2300560",
    "end": "2305800"
  },
  {
    "text": "application that's pulling Swift that's actually going to run our process and this is another interesting",
    "start": "2305800",
    "end": "2312400"
  },
  {
    "text": "thing about services that we haven't seen before is we can optionally associate a load balancer with a service",
    "start": "2312400",
    "end": "2318920"
  },
  {
    "text": "so we're used to thinking of load balancers as always being tied to an ec2 instance but in this case it's on the",
    "start": "2318920",
    "end": "2324319"
  },
  {
    "text": "service and so ECS is going to always look at your cluster and figure out where's the best place to run all these",
    "start": "2324319",
    "end": "2330520"
  },
  {
    "text": "services and when it does that it's going to make sure that the load balancers are up to date with where that",
    "start": "2330520",
    "end": "2336280"
  },
  {
    "text": "that service is running so this is going to allow us to be able to do scaling not at the instance level but at The",
    "start": "2336280",
    "end": "2342000"
  },
  {
    "text": "Individual Services level and then we have our cluster which is the ec2 instances that's running our tasks in",
    "start": "2342000",
    "end": "2348599"
  },
  {
    "text": "service as well as an ECS agent that's going to keep our load balance updated and or and orchestrate our running of",
    "start": "2348599",
    "end": "2354720"
  },
  {
    "text": "our um services so again we've already deployed this let's see how we did that in the",
    "start": "2354720",
    "end": "2360960"
  },
  {
    "text": "console so go up to the console again scroll up and go to container service",
    "start": "2360960",
    "end": "2367520"
  },
  {
    "text": "and if we drill into task definitions here you see here's our various test here's the one that be store created for",
    "start": "2368760",
    "end": "2374640"
  },
  {
    "text": "us and if we go in there you can see there's all the individual task U revisions that we have there if we go",
    "start": "2374640",
    "end": "2381560"
  },
  {
    "text": "back let look at the task yeah you can see with beanock it",
    "start": "2381560",
    "end": "2387640"
  },
  {
    "text": "actually created all of your services or pollster Services under one task definition and this is why this is why",
    "start": "2387640",
    "end": "2394480"
  },
  {
    "text": "we saw that restart of all the services because that whole task definition gets restarted so with pollster you can see",
    "start": "2394480",
    "end": "2400240"
  },
  {
    "text": "we actually made each one of our five separate Services as separate task definitions which allows us to deploy",
    "start": "2400240",
    "end": "2406079"
  },
  {
    "text": "them independently and only just those ones get",
    "start": "2406079",
    "end": "2409759"
  },
  {
    "start": "2412000",
    "end": "2412000"
  },
  {
    "text": "restarted so ECS is again like codoy one of our building block Services you get",
    "start": "2412119",
    "end": "2417520"
  },
  {
    "text": "to decide your compute architecture it's up to you to set everything up we can do something very simple like let's have",
    "start": "2417520",
    "end": "2423079"
  },
  {
    "text": "one one ECS service that contains all of our pollster service services and have",
    "start": "2423079",
    "end": "2428160"
  },
  {
    "text": "that run across all of our machines so that would that would be very similar to the beant stalk model right that is very similar to how Bean is doing",
    "start": "2428160",
    "end": "2434839"
  },
  {
    "text": "it we could also do something more advanced where we then put each of our pollster services as separate ECS",
    "start": "2434839",
    "end": "2441680"
  },
  {
    "start": "2436000",
    "end": "2436000"
  },
  {
    "text": "services and then for all of our web processes we could put load balancers on",
    "start": "2441680",
    "end": "2446839"
  },
  {
    "text": "each of those so this is going to allow us to do scaling at The Individual Services level for our example poster we",
    "start": "2446839",
    "end": "2453680"
  },
  {
    "text": "know that the front end is our most important service if that goes down then all anyone sees when they come to our our application is errors so we wanted",
    "start": "2453680",
    "end": "2460720"
  },
  {
    "text": "that to be running across all of our machines in the other services we could do varying amount of of instances of",
    "start": "2460720",
    "end": "2467800"
  },
  {
    "text": "those Services depending on the needs of that service now to deploy a new version of",
    "start": "2467800",
    "end": "2474680"
  },
  {
    "start": "2472000",
    "end": "2472000"
  },
  {
    "text": "our application to our ECS cluster we need to build a new image with a new tag we need to push that image to our",
    "start": "2474680",
    "end": "2480599"
  },
  {
    "text": "registry which we've just done we've just done that we did that for bin now to do for ECS we need to update that t t",
    "start": "2480599",
    "end": "2487599"
  },
  {
    "text": "definition to reference the new image and when we do that that's going to generate us a new revision ID for that",
    "start": "2487599",
    "end": "2493440"
  },
  {
    "text": "task definition so then we have to go to our service that's running on our cluster and say you need to run this",
    "start": "2493440",
    "end": "2499240"
  },
  {
    "text": "latest task revision so let's go do that Steve okay",
    "start": "2499240",
    "end": "2504839"
  },
  {
    "text": "so I'm guessing it's another one of your custom commands that is true okay so we'll go to the source code and we go so",
    "start": "2504839",
    "end": "2511839"
  },
  {
    "text": "DNX and uh what did you call this one nor this one is ECS D task D update",
    "start": "2511839",
    "end": "2517760"
  },
  {
    "text": "ACS task",
    "start": "2517760",
    "end": "2521319"
  },
  {
    "text": "update oh you didn't tell me I need a tag right so here we need to say this is the the the image tag that we want is it",
    "start": "2524960",
    "end": "2532240"
  },
  {
    "text": "the full tag that right no in this case we're only going to do just Dev 302 because we set up poster so it's always",
    "start": "2532240",
    "end": "2537760"
  },
  {
    "text": "using the name her istics knowing hey you're currently in the PE pole web front and so that's the name of our image",
    "start": "2537760",
    "end": "2545400"
  },
  {
    "text": "Okay so that takes a little bit to go so why don't we go look in the how that's running so let draw down through",
    "start": "2545400",
    "end": "2552760"
  },
  {
    "text": "pollster here ECS update task so here we are in our custom command if I scroll",
    "start": "2552760",
    "end": "2558040"
  },
  {
    "text": "through we'll get to here so you can see what we're doing get rid of the intell so we're fing the test definition and",
    "start": "2558040",
    "end": "2564480"
  },
  {
    "text": "then we're getting the container definition from that and then down at line 66 that's where we push through the",
    "start": "2564480",
    "end": "2570359"
  },
  {
    "text": "new tag that we just um typed in we register that yeah so this creates this",
    "start": "2570359",
    "end": "2576119"
  },
  {
    "text": "registers a new test definition and so we're going to get a new revision ID right and then presumably we do something with that revision",
    "start": "2576119",
    "end": "2582680"
  },
  {
    "text": "ID I'm guessing oh yeah we just uh yeah okay so we oh perform rolling service deployment this looks interesting I can",
    "start": "2582680",
    "end": "2589240"
  },
  {
    "text": "see it right below what's going on here n this so when we say we want to start a new task definition what's going to",
    "start": "2589240",
    "end": "2595559"
  },
  {
    "text": "happen is it's going to we need to it's going to spin up all of the new instances new tasks with our new task",
    "start": "2595559",
    "end": "2601240"
  },
  {
    "text": "definition and once those are all up and running it's going to tear down the others that's going to give you that minimal downtime now the tricky thing is",
    "start": "2601240",
    "end": "2608200"
  },
  {
    "text": "for those new instances to come up there has to be the available resources for those to come up there has to be the",
    "start": "2608200",
    "end": "2613920"
  },
  {
    "text": "available memory the available CPU and what also in our case there has to be the available ports for that to come up",
    "start": "2613920",
    "end": "2621040"
  },
  {
    "text": "so we have three machines in our cluster and we're currently running three tasks so we have no available Port 8s open so",
    "start": "2621040",
    "end": "2627640"
  },
  {
    "text": "what we're doing here is essentially let's cut in half the existing um tasks running to free up some poor 80s and",
    "start": "2627640",
    "end": "2633960"
  },
  {
    "text": "then start launching some of the new instances okay all right so looks like what we're doing then is describe",
    "start": "2633960",
    "end": "2639160"
  },
  {
    "text": "Services we get the number of services in total we then chop that in half so",
    "start": "2639160",
    "end": "2644599"
  },
  {
    "text": "we're taking half of them away half the old ones wait till that's done because there's no point running",
    "start": "2644599",
    "end": "2650559"
  },
  {
    "text": "otherwise then we update with a new revision when those have come up we then",
    "start": "2650559",
    "end": "2656200"
  },
  {
    "text": "just spin out the rest yeah very simple let's see if we actually got some console output here oh",
    "start": "2656200",
    "end": "2662280"
  },
  {
    "text": "there we go yeah so starting roll deployment reducing the number of tasks to one three and half one",
    "start": "2662280",
    "end": "2667599"
  },
  {
    "text": "starting one Tesla new and then the remainder coming up so it should actually be launched now right let's go see if we've updated the banner on our",
    "start": "2667599",
    "end": "2673480"
  },
  {
    "text": "main website so if we actually go to the real website yeah Cloud holster is actually pointing to our ECS cluster",
    "start": "2673480",
    "end": "2679559"
  },
  {
    "text": "this this should update there we go Docker and ec2 container service there we go done neat all right I'm going to",
    "start": "2679559",
    "end": "2685280"
  },
  {
    "text": "do it again oh no it's Don n Aurora I'm white that one I'm interested in both obviously but",
    "start": "2685280",
    "end": "2692079"
  },
  {
    "text": "you know should we go back to the slides yeah",
    "start": "2692079",
    "end": "2697440"
  },
  {
    "start": "2696000",
    "end": "2696000"
  },
  {
    "text": "so what you learn now Steve so in this particular case the redeployment only affected the task ring that image right",
    "start": "2697599",
    "end": "2702920"
  },
  {
    "text": "because we have separate task definitions right we have lots of different scaling options now we a",
    "start": "2702920",
    "end": "2708480"
  },
  {
    "text": "little bit closer to the metal in some terms right we have more control over how compute resources are divided Bean",
    "start": "2708480",
    "end": "2713680"
  },
  {
    "text": "stalk does a lot for you we're taking a little bit of control back when we use ECS directly so you could say you could argue we're trading Simplicity for",
    "start": "2713680",
    "end": "2720440"
  },
  {
    "text": "control um that's no bad thing um and I to say you're saying recommend cloud formation for setup right and you will",
    "start": "2720440",
    "end": "2727400"
  },
  {
    "text": "see if you check out our GitHub repository of all a poster you'll see all of the poh scripts and cloud formation templates we use to create our",
    "start": "2727400",
    "end": "2733760"
  },
  {
    "text": "code deploy and our ECS cluster and so to recap here we learned that a 5",
    "start": "2733760",
    "end": "2742200"
  },
  {
    "start": "2739000",
    "end": "2739000"
  },
  {
    "text": "has a lot new deployment possibilities for us and we covered quite a few different options for us and I would say",
    "start": "2742200",
    "end": "2748000"
  },
  {
    "text": "all these options are equally valid it really just depends on your needs Adis code deploy we looked at how we can",
    "start": "2748000",
    "end": "2753440"
  },
  {
    "text": "still use Windows still use iOS but we got to use the new project structure the new modularization at as",
    "start": "2753440",
    "end": "2759119"
  },
  {
    "text": "5 with ad elastic beanock it was an easy way for us to get everything set up and to start actually using Docker with our",
    "start": "2759119",
    "end": "2765559"
  },
  {
    "text": "application and then using ECS container service we got full control over all of our compute architecture and we got some",
    "start": "2765559",
    "end": "2772400"
  },
  {
    "text": "new new options for how we want to scale our",
    "start": "2772400",
    "end": "2777078"
  },
  {
    "text": "application so just a closing here we have some extra links for you guys to look at the first is our GitHub",
    "start": "2779240",
    "end": "2784839"
  },
  {
    "text": "repository actually St we have time why don't you click on that link sure um so this is the repository of the adus",
    "start": "2784839",
    "end": "2791280"
  },
  {
    "text": "SDK um it's very useful if you scroll down I mention everything is modulized",
    "start": "2791280",
    "end": "2797680"
  },
  {
    "text": "so down below is we have the list of all the Nate packages so if you're ever trying to find one of the services this",
    "start": "2797680",
    "end": "2803920"
  },
  {
    "text": "is a really easy way to see what are all the services and how to get them for n packages the other link is pointing to",
    "start": "2803920",
    "end": "2810040"
  },
  {
    "text": "our samples repository um do you want to show what we got there Steve y so this is where we have all of our console up",
    "start": "2810040",
    "end": "2817200"
  },
  {
    "text": "or Z zamon as well as we've been putting our um reinvent code uh this talk here",
    "start": "2817200",
    "end": "2823520"
  },
  {
    "text": "as well as Steve has a talk on Powershell tomorrow if you want to learn about Powershell so all that stuff is right there for",
    "start": "2823520",
    "end": "2830440"
  },
  {
    "text": "you and if you want to follow our blog where Steve and I often blog about net development with AWS and there's some",
    "start": "2830480",
    "end": "2837200"
  },
  {
    "text": "final Links of the services we use so with that thank you really appreciate com to our talk and plugging",
    "start": "2837200",
    "end": "2843720"
  },
  {
    "text": "un filling those evaluations as well as Cloud poster and do we have time for",
    "start": "2843720",
    "end": "2848880"
  },
  {
    "text": "questions um says we got eight minutes so any questions that we can answer we have a few minutes there",
    "start": "2848880",
    "end": "2855000"
  },
  {
    "text": "that's thanks",
    "start": "2855000",
    "end": "2859000"
  }
]