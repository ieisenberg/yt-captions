[
  {
    "text": "after that rousing uh start my name is John Handler I'm a solution architect",
    "start": "80",
    "end": "6600"
  },
  {
    "text": "and I specialize in Amazon Cloud search um today I'm really excited to talk to",
    "start": "6600",
    "end": "12679"
  },
  {
    "text": "you about how to build search into your application using Amazon Cloud search",
    "start": "12679",
    "end": "18640"
  },
  {
    "text": "and I'm going to really give you a Soup To Nuts sort of description of how to",
    "start": "18640",
    "end": "24199"
  },
  {
    "text": "think about your problem your search problem how to get the data together and how to support it",
    "start": "24199",
    "end": "30840"
  },
  {
    "text": "uh support your the the search that you need in your application so we're going to start out",
    "start": "30840",
    "end": "38200"
  },
  {
    "text": "by looking at an application that we're going to walk through how to build this uh in this session so what we have here",
    "start": "38200",
    "end": "45960"
  },
  {
    "text": "is an application called build your playlist and you can see that we have a",
    "start": "45960",
    "end": "51840"
  },
  {
    "text": "very typical search interface this includes a search box where users can",
    "start": "51840",
    "end": "57520"
  },
  {
    "text": "enter uh text searches it shows search",
    "start": "57520",
    "end": "63439"
  },
  {
    "text": "results and typically um in a again in a typical fashion we have facets that",
    "start": "63439",
    "end": "70159"
  },
  {
    "text": "would allow users directly to drill down and to narrow their search and we have sorting that brings",
    "start": "70159",
    "end": "78040"
  },
  {
    "text": "the best results to the top and ultimately our users will add this to their playlist and we'll hear all about",
    "start": "78040",
    "end": "84759"
  },
  {
    "text": "that so we are going to take this as our example and we're going to start at the very beginning",
    "start": "84759",
    "end": "90720"
  },
  {
    "text": "and build this all the way up but before we go there why should we",
    "start": "90720",
    "end": "96280"
  },
  {
    "text": "care about search well more and more these days search is actually an",
    "start": "96280",
    "end": "101640"
  },
  {
    "text": "interface that lets users get to the data to your data that lets it users get",
    "start": "101640",
    "end": "108119"
  },
  {
    "text": "to the functions of your applications so on the web search is used to on a site",
    "start": "108119",
    "end": "116640"
  },
  {
    "text": "like say amazon.com search is used to bring people to products that they want to buy desktop applications including",
    "start": "116640",
    "end": "124360"
  },
  {
    "text": "email programs spreadsheets all you search to help you to get to the piece",
    "start": "124360",
    "end": "130160"
  },
  {
    "text": "of data that you actually care about or want to uh want to see inside that",
    "start": "130160",
    "end": "135280"
  },
  {
    "text": "program and mobile applications on phones etc etc increasingly search is",
    "start": "135280",
    "end": "140959"
  },
  {
    "text": "becoming Central even to locating the functionality that you're providing in your application and that people need to",
    "start": "140959",
    "end": "148239"
  },
  {
    "text": "get to to use your application uh correctly so all of that means that",
    "start": "148239",
    "end": "154239"
  },
  {
    "text": "the search experience itself really drives Revenue it drives user satisfaction it drives retention and",
    "start": "154239",
    "end": "162040"
  },
  {
    "text": "search itself is a core piece of an application that you want to",
    "start": "162040",
    "end": "167800"
  },
  {
    "text": "build and I want to today we're going to talk about Amazon Cloud search Amazon Cloud search is a fully managed managed",
    "start": "167800",
    "end": "175720"
  },
  {
    "text": "full featured search engine provided to you as a service in the cloud it's a",
    "start": "175720",
    "end": "181200"
  },
  {
    "text": "very simple interaction model push data pull query results and we'll get into some depth about that but a little",
    "start": "181200",
    "end": "188799"
  },
  {
    "text": "overview uh on the product it's extremely easy to get started and it's",
    "start": "188799",
    "end": "194879"
  },
  {
    "text": "easy to integrate into your application it's also provides automatic scaling and",
    "start": "194879",
    "end": "200599"
  },
  {
    "text": "takes all of the operational burden of running a search engine off of your",
    "start": "200599",
    "end": "205799"
  },
  {
    "text": "shoulders so looking at these Cloud search is integrated with the AWS main",
    "start": "205799",
    "end": "211680"
  },
  {
    "text": "console to start get started with search you can you walk through a very quick wizard just a few clicks and you'll have",
    "start": "211680",
    "end": "219120"
  },
  {
    "text": "a search engine which deployed for you in the cloud along with our console integration",
    "start": "219120",
    "end": "226920"
  },
  {
    "text": "we have um a dashboard that shows you status of what's going on it's a little bit busy to read but um a lot of",
    "start": "226920",
    "end": "234000"
  },
  {
    "text": "information about your search domain and we even have a test interface that allows you to run sech searches within",
    "start": "234000",
    "end": "240360"
  },
  {
    "text": "the console on your data Cloud search is easy to get integrated with there's three uh main",
    "start": "240360",
    "end": "248319"
  },
  {
    "text": "interaction points when you start Cloud search would you create a search domain a search domain is an instance in the",
    "start": "248319",
    "end": "255439"
  },
  {
    "text": "cloud with all of the software and services that you need that support running your search engine so there are",
    "start": "255439",
    "end": "263160"
  },
  {
    "text": "three as I said interaction points the first is you have a search service the search service available through through",
    "start": "263160",
    "end": "269800"
  },
  {
    "text": "HTTP of course send search results back to you um it's available either API or",
    "start": "269800",
    "end": "276720"
  },
  {
    "text": "console and there's some IP based uh access control that lets you control who",
    "start": "276720",
    "end": "282280"
  },
  {
    "text": "can actually send searches to your search domain along with the search service we have the document service",
    "start": "282280",
    "end": "288000"
  },
  {
    "text": "document service is where you push your data again it's an HTTP endpoint it's a",
    "start": "288000",
    "end": "294560"
  },
  {
    "text": "restful interaction simply post your documents in a format as we review",
    "start": "294560",
    "end": "299919"
  },
  {
    "text": "simple Json or XML format this also is available direct to API through the",
    "start": "299919",
    "end": "305639"
  },
  {
    "text": "console and also we provide command line tools to help out with this and there's access control for",
    "start": "305639",
    "end": "313000"
  },
  {
    "text": "document service as well on top of all this there's DNS and load balancing that ensures that your search endpoints stay",
    "start": "313000",
    "end": "320960"
  },
  {
    "text": "St stable oh that's a hard one stay stable through uh all of the changes",
    "start": "320960",
    "end": "326319"
  },
  {
    "text": "that are going on operationally for your search domain",
    "start": "326319",
    "end": "331360"
  },
  {
    "text": "alongside the search domain itself we have a configuration service that is the point where you control how your fields",
    "start": "331360",
    "end": "338520"
  },
  {
    "text": "are treated how your data is indexed access policies for your domain etc",
    "start": "338520",
    "end": "345319"
  },
  {
    "text": "etc this is uh available through AWS query this is the AWS API you can go",
    "start": "345319",
    "end": "351280"
  },
  {
    "text": "direct to API uh again command line tools and console as well so this is the",
    "start": "351280",
    "end": "356840"
  },
  {
    "text": "whole picture of the interaction with cloud CL search now Cloud search is automatically",
    "start": "356840",
    "end": "364240"
  },
  {
    "text": "scaling as I mentioned and one of our one of our features is that we take the burden of running a search service off",
    "start": "364240",
    "end": "371240"
  },
  {
    "text": "of your shoulders if any of you have worked with search you know that there's a challenge to figure out how do I",
    "start": "371240",
    "end": "377520"
  },
  {
    "text": "partition my data how do I deploy my data to hosts I have to manage those",
    "start": "377520",
    "end": "382840"
  },
  {
    "text": "hosts and as my traffic grows and shrinks I have to uh add and remove",
    "start": "382840",
    "end": "388919"
  },
  {
    "text": "hosts from my search grid Amazon Cloud search does all of the heavy lifting for",
    "start": "388919",
    "end": "394639"
  },
  {
    "text": "this of this for you so when you start your domain you would have a single search instance with one partition's",
    "start": "394639",
    "end": "401160"
  },
  {
    "text": "worth of data as you send data to Cloud search you're actually going to increase and",
    "start": "401160",
    "end": "407479"
  },
  {
    "text": "fill up the ram of that instance and at some point when you overflow Cloud",
    "start": "407479",
    "end": "413199"
  },
  {
    "text": "search would build a new index deploy that new index with a second partition",
    "start": "413199",
    "end": "418599"
  },
  {
    "text": "for you behind your stable DNS endpoint so without any work on your part other",
    "start": "418599",
    "end": "423800"
  },
  {
    "text": "than pushing documents in Cloud search would scale out to fit the data that you're putting in as you continue to",
    "start": "423800",
    "end": "430280"
  },
  {
    "text": "send data Cloud search will continue to build and deploy indices in the amount",
    "start": "430280",
    "end": "436000"
  },
  {
    "text": "of hosts that are necessary to host those that ramp similarly Cloud search will scale",
    "start": "436000",
    "end": "442400"
  },
  {
    "text": "for traffic so we'd start out with a some certain number of partitions with",
    "start": "442400",
    "end": "447759"
  },
  {
    "text": "one host as you're sending more traffic Cloud search is using CPU to serve those",
    "start": "447759",
    "end": "453039"
  },
  {
    "text": "queries when the CPU goes over a trigger then Cloud search would add additional",
    "start": "453039",
    "end": "459599"
  },
  {
    "text": "copies or replicas of your partitions to serve the traffic and similarly as you",
    "start": "459599",
    "end": "465120"
  },
  {
    "text": "as you send more traffic Cloud search would add additional replicas and of course Cloud search will scale down as",
    "start": "465120",
    "end": "470599"
  },
  {
    "text": "well as your traffic dies down so we really have much of the benefit of the pay as you go and pay for what you use",
    "start": "470599",
    "end": "478080"
  },
  {
    "text": "uh AWS model okay so that's a a really sort of broad",
    "start": "478080",
    "end": "483360"
  },
  {
    "text": "overview of cloud search so let's get into some specifics and talk about how",
    "start": "483360",
    "end": "488680"
  },
  {
    "text": "to build our application with Cloud search so you know music is something",
    "start": "488680",
    "end": "494720"
  },
  {
    "text": "that people really relate to and different music has different meaning for for different times of your lives",
    "start": "494720",
    "end": "501440"
  },
  {
    "text": "when I got married we actually created a CD everybody remembers CDs they were",
    "start": "501440",
    "end": "506960"
  },
  {
    "text": "round they had music on so we created a CD and we handed it out to all of our friends and relatives and that was our",
    "start": "506960",
    "end": "514120"
  },
  {
    "text": "wedding CD now we recently actually Monday got remarried at the graceand chapel and uh as part of that I thought",
    "start": "514120",
    "end": "521880"
  },
  {
    "text": "well you know it' be nice if we went through that uh experience again created a a playlist and you know handed it out",
    "start": "521880",
    "end": "528519"
  },
  {
    "text": "or a CD and handed it out to our friends and family now of course we don't have CDs anymore we have playlists and we do",
    "start": "528519",
    "end": "534160"
  },
  {
    "text": "social networking and sharing but I thought you know what there's an application in there people relate to",
    "start": "534160",
    "end": "539800"
  },
  {
    "text": "music and and if I could actually go online Bing Bing Bing search for songs",
    "start": "539800",
    "end": "545279"
  },
  {
    "text": "create them as a playlist share it out to my friends and relatives that would make a nice application um so we're",
    "start": "545279",
    "end": "552680"
  },
  {
    "text": "going to do that and we're going to use uh a data set called the million song data set this is a publicly available",
    "start": "552680",
    "end": "559560"
  },
  {
    "text": "open source data set containing songs by title and artist and as we'll see with",
    "start": "559560",
    "end": "564680"
  },
  {
    "text": "other information and we're going to put that into search so that people can search for songs that they want and then",
    "start": "564680",
    "end": "570920"
  },
  {
    "text": "build playlists out of them and that's our application so I",
    "start": "570920",
    "end": "576079"
  },
  {
    "text": "wanted to give you a feel for what's in so when we're thinking about that the first thing we know already is we're",
    "start": "576079",
    "end": "581760"
  },
  {
    "text": "going to be searching for songs and so it's going to be important to have a collection of songs so the million song",
    "start": "581760",
    "end": "589040"
  },
  {
    "text": "data set includes uh a a set of songs with information like the title The Year",
    "start": "589040",
    "end": "596240"
  },
  {
    "text": "the artist name and it has a number of measur measures things like danceability hotness artist familiarity there's",
    "start": "596240",
    "end": "603240"
  },
  {
    "text": "actually about 100 different um integers that you can pull out of there this is just a quick sample so we want to start",
    "start": "603240",
    "end": "609800"
  },
  {
    "text": "with that and say okay we know we have title we know we have artist name those are things we want to search we want to be able to narrow by year and we want to",
    "start": "609800",
    "end": "617240"
  },
  {
    "text": "be able to bring all of that information okay so here are the steps that we're going to sort of go through we we need",
    "start": "617240",
    "end": "625079"
  },
  {
    "text": "to create a cloud search domain we're going to identify our supporting data we're going to talk about how to get",
    "start": "625079",
    "end": "631440"
  },
  {
    "text": "that structured and uploaded we're going to configure our domain to support the search that we want we're going to",
    "start": "631440",
    "end": "637600"
  },
  {
    "text": "improve our ranking so that the best results come to the top and we're going to integrate it with a front end and",
    "start": "637600",
    "end": "643800"
  },
  {
    "text": "then we'll talk a little bit about how to keep it up to date as things change so creating a cloud search domain",
    "start": "643800",
    "end": "650680"
  },
  {
    "text": "as I said this is a very simple process really involves just a few clicks and a domain is up and running and ready for",
    "start": "650680",
    "end": "656639"
  },
  {
    "text": "you to start pushing data in we'll take a little bit more time talking about the use case and supporting data so looking",
    "start": "656639",
    "end": "663880"
  },
  {
    "text": "at our interface again we see that our user has searched",
    "start": "663880",
    "end": "668920"
  },
  {
    "text": "here for Rolling Stones somebody searches for Rolling Stones we would expect to match mostly the artist",
    "start": "668920",
    "end": "675519"
  },
  {
    "text": "Rolling Stones but also if things were in the title we'd like to bring that as well um and he these are the results",
    "start": "675519",
    "end": "682160"
  },
  {
    "text": "that come back initially for Rolling Stones if we look at an individual search result what we'll see is again we",
    "start": "682160",
    "end": "689160"
  },
  {
    "text": "have the song title the artist name we're showing a familiarity and a year",
    "start": "689160",
    "end": "694200"
  },
  {
    "text": "so these are pieces of data that we want to hold on to and we say okay those those data are important we want to make sure that we include those in what we",
    "start": "694200",
    "end": "701200"
  },
  {
    "text": "sent to Cloud search the search engine will use them in addition we were showing facets",
    "start": "701200",
    "end": "707040"
  },
  {
    "text": "in order to do fating we obviously need the data to do the fating in this case",
    "start": "707040",
    "end": "712639"
  },
  {
    "text": "we have the artist again a genre which allows people to narrow by pop rock all",
    "start": "712639",
    "end": "717800"
  },
  {
    "text": "of that and a year which allows people to narrow down to particular years so that they can see search results for",
    "start": "717800",
    "end": "723680"
  },
  {
    "text": "that year so these are all of the pieces of data that we have to bring together",
    "start": "723680",
    "end": "729600"
  },
  {
    "text": "into our single search document that's what we're going to",
    "start": "729600",
    "end": "734920"
  },
  {
    "text": "search over so once we have our document we need to our our sort of abstract",
    "start": "734920",
    "end": "741360"
  },
  {
    "text": "document defined we need to then take the data that we have and prepare it and",
    "start": "741360",
    "end": "746839"
  },
  {
    "text": "upload it into Cloud search so that those documents are in the search engine so Cloud search um documents are",
    "start": "746839",
    "end": "755120"
  },
  {
    "text": "formatted in something called SDF this is search data format it's really a very",
    "start": "755120",
    "end": "760760"
  },
  {
    "text": "lightweight Json or XML uh wrapper around each of the documents in our",
    "start": "760760",
    "end": "766639"
  },
  {
    "text": "system and we'll see a an example of that one important point is that the source data itself is usually maintained",
    "start": "766639",
    "end": "773920"
  },
  {
    "text": "in a system outside of the search engine so in this case we have million song data set set is not maintained the the",
    "start": "773920",
    "end": "782760"
  },
  {
    "text": "system of record for that is not our search engine and that's t a typical pattern there will be some external",
    "start": "782760",
    "end": "788079"
  },
  {
    "text": "system that owns the data and then we'll have to build a process to pull the data",
    "start": "788079",
    "end": "793440"
  },
  {
    "text": "out of that system and push it into the search engine so once we've done that we can",
    "start": "793440",
    "end": "799519"
  },
  {
    "text": "emit that SDF and we can upload it and looking at it sort of",
    "start": "799519",
    "end": "805040"
  },
  {
    "text": "schematically we have our million song data set all of our songs we're going to create SDF now SDF itself is a batch",
    "start": "805040",
    "end": "812000"
  },
  {
    "text": "format so we'll be able to put together multiples multiple search documents into",
    "start": "812000",
    "end": "817199"
  },
  {
    "text": "a single batch for upload and we'll post those to Cloud",
    "start": "817199",
    "end": "822600"
  },
  {
    "text": "search so here we see an example of an SDF batch as you can see it's a Json array",
    "start": "822600",
    "end": "830240"
  },
  {
    "text": "if you can't read Json don't worry about it too much um within the batch we have",
    "start": "830240",
    "end": "835399"
  },
  {
    "text": "single records separated by commas and each record is a single search document",
    "start": "835399",
    "end": "841560"
  },
  {
    "text": "in this case we have an ad document Cloud search documents can be either ads or deletes if you add a document that's",
    "start": "841560",
    "end": "848800"
  },
  {
    "text": "already there it will update that document to the newer version that you're sending along with the type we",
    "start": "848800",
    "end": "855040"
  },
  {
    "text": "have some identifying information an ID a version number and a language and then",
    "start": "855040",
    "end": "860880"
  },
  {
    "text": "we have a collection of fields fields are name value Pairs and these are the fields that you can search over that you",
    "start": "860880",
    "end": "867839"
  },
  {
    "text": "can retrieve and that form the sort of backbone of your Search application and I left one",
    "start": "867839",
    "end": "873240"
  },
  {
    "text": "out there because Fields can be either single or multivalued and they work the",
    "start": "873240",
    "end": "878600"
  },
  {
    "text": "same okay so we now have our Millions song data set we have it in batches it's all prepared it's in SDF it's uploaded",
    "start": "878600",
    "end": "885920"
  },
  {
    "text": "now we need to configure the domain so that we can tell the search engine for instance that we want to faast it and",
    "start": "885920",
    "end": "892040"
  },
  {
    "text": "that we should retrieve facet counts for say the genre Cloud search has three different",
    "start": "892040",
    "end": "899199"
  },
  {
    "text": "um base types the first type is uh a text",
    "start": "899199",
    "end": "905759"
  },
  {
    "text": "type and text types are text processed so um they're split into tokens stemming",
    "start": "905759",
    "end": "913920"
  },
  {
    "text": "is applied stop wordss are applied synonyms are applied and they are really",
    "start": "913920",
    "end": "919920"
  },
  {
    "text": "good for matching user terms so when the user types Rolling Stones we want",
    "start": "919920",
    "end": "925000"
  },
  {
    "text": "rolling rolling if they type rolling we'd like rolling to match the title",
    "start": "925000",
    "end": "930279"
  },
  {
    "text": "rolling in the de or we'd like to match rolling to Rolling Stones we use text",
    "start": "930279",
    "end": "935600"
  },
  {
    "text": "fields for that along with the basic types Cloud search has three different field",
    "start": "935600",
    "end": "942560"
  },
  {
    "text": "options the first option is result enabled result enabled Fields can be",
    "start": "942560",
    "end": "948000"
  },
  {
    "text": "returned with your search results General best practice is not to put a lot of result enabled fields in there in",
    "start": "948000",
    "end": "954360"
  },
  {
    "text": "fact because there's a system of record the best practice is to put nothing but IDs for return and as you get your",
    "start": "954360",
    "end": "961839"
  },
  {
    "text": "results go to your secondary system pull all of the data for that result and then use it to display the UI but you can",
    "start": "961839",
    "end": "968519"
  },
  {
    "text": "result enval fields and those can be useful for a lot of reasons like pointers to S3 objects or pointers to",
    "start": "968519",
    "end": "974399"
  },
  {
    "text": "your database the second type of field is the",
    "start": "974399",
    "end": "979639"
  },
  {
    "text": "literal field literal fields are not text processed so they are not tokenized",
    "start": "979639",
    "end": "986519"
  },
  {
    "text": "the term rolling would not match Rolling Stones if that was a literal field it",
    "start": "986519",
    "end": "992279"
  },
  {
    "text": "must be a full field match exact match um the second option is facet enabled",
    "start": "992279",
    "end": "1001680"
  },
  {
    "text": "and cloud searge fating is is really very simple you simply say I would like to retrieve fastet counts for this field",
    "start": "1001680",
    "end": "1009079"
  },
  {
    "text": "so and the final um option is search enabled especially for literal Fields",
    "start": "1009079",
    "end": "1015600"
  },
  {
    "text": "you might want to search those separately so this allows you to do structured search with Boolean",
    "start": "1015600",
    "end": "1021120"
  },
  {
    "text": "Expressions mixing different fields um provided that they search",
    "start": "1021120",
    "end": "1028038"
  },
  {
    "text": "enabled and the final field type is integer integer fields are not",
    "start": "1028039",
    "end": "1033120"
  },
  {
    "text": "surprisingly integers and they are used for ranking",
    "start": "1033120",
    "end": "1038280"
  },
  {
    "text": "and they can also be used for fasting or narrowing and I wanted to show you a",
    "start": "1038280",
    "end": "1044678"
  },
  {
    "text": "screenshot of what this looks like in the cloud search console what you're seeing here is the piece of",
    "start": "1044679",
    "end": "1051679"
  },
  {
    "text": "the console that allows you to set the configuration for your domain you can see it's very simple we have the list of",
    "start": "1051679",
    "end": "1057480"
  },
  {
    "text": "fields a drop down for the type a few checkboxes for the different options and",
    "start": "1057480",
    "end": "1063400"
  },
  {
    "text": "it should it literally takes two minutes to configure your domain to do what you want it to",
    "start": "1063400",
    "end": "1070160"
  },
  {
    "text": "do okay so we got our documents we got them uploaded we have our domain",
    "start": "1070160",
    "end": "1075640"
  },
  {
    "text": "configured to support our fating to support our text searching and now we're",
    "start": "1075640",
    "end": "1081000"
  },
  {
    "text": "going to talk a little bit about ranking so you can see here the the",
    "start": "1081000",
    "end": "1087520"
  },
  {
    "text": "results for Rolling Stones um Cloud search uses a default text relevance",
    "start": "1087520",
    "end": "1093760"
  },
  {
    "text": "function which is comprised of a tfidf and a proximity measure so when you",
    "start": "1093760",
    "end": "1100039"
  },
  {
    "text": "match text to text we're looking for um both how many terms matched and how",
    "start": "1100039",
    "end": "1107360"
  },
  {
    "text": "unique were those terms Ms for the match and then how close together they were so",
    "start": "1107360",
    "end": "1112799"
  },
  {
    "text": "the scoring for each document takes those into account and it brings the highest scores to the top um in this",
    "start": "1112799",
    "end": "1120200"
  },
  {
    "text": "case we have heart of stones with the Rolling Stones that's good we're glad with that one and then we have Under the",
    "start": "1120200",
    "end": "1126600"
  },
  {
    "text": "Boardwalk by rhythms delmundo featuring The Rolling Stones not as good a match but text relevance wise that's the one",
    "start": "1126600",
    "end": "1133840"
  },
  {
    "text": "that comes up and then we have one which I believe is in Portuguese which I can't read",
    "start": "1133840",
    "end": "1138919"
  },
  {
    "text": "um but also uh the Rel just the pure text relevance itself brings that one to",
    "start": "1138919",
    "end": "1144480"
  },
  {
    "text": "the top and then we continue on with Rolling Stones so really what we'd like to see for this query is we'd like to",
    "start": "1144480",
    "end": "1150360"
  },
  {
    "text": "see songs by The Rolling Stones now fortunately we have a an integer measure",
    "start": "1150360",
    "end": "1156720"
  },
  {
    "text": "that can help us out with that and that's the artist familiarity so what we can do is Define a cloud search rank",
    "start": "1156720",
    "end": "1163600"
  },
  {
    "text": "expression which allows us to mix algebraically values that are in our document with our text relevance",
    "start": "1163600",
    "end": "1170679"
  },
  {
    "text": "function or with other values in our document to provide a scoring Criterion for each document in this case we give",
    "start": "1170679",
    "end": "1177520"
  },
  {
    "text": "it a name and we mix the text relevance",
    "start": "1177520",
    "end": "1183080"
  },
  {
    "text": "with the half of the artist familiarity there's a little bit of number tweaking that you can do to make sure things line",
    "start": "1183080",
    "end": "1189480"
  },
  {
    "text": "up correctly but the larger point is we can define a function for each document that",
    "start": "1189480",
    "end": "1195280"
  },
  {
    "text": "lets us score that document and hopefully bring the the correct results up to the",
    "start": "1195280",
    "end": "1202158"
  },
  {
    "text": "top once we reorder by that ranking function what we can see is we have a",
    "start": "1202240",
    "end": "1208960"
  },
  {
    "text": "number of matches by The Rolling Stones those have moved up to the top because the Rolling Stones are a more familiar",
    "start": "1208960",
    "end": "1215480"
  },
  {
    "text": "artist Cloud search has a lot of flexibility in rank Expressions you can Define custom ranking Expressions to do",
    "start": "1215480",
    "end": "1223039"
  },
  {
    "text": "just about what you want okay so we have our search we have",
    "start": "1223039",
    "end": "1228400"
  },
  {
    "text": "ranked we're we're ranked nicely now we want to talk about the interaction with the front end and how does that look I",
    "start": "1228400",
    "end": "1235840"
  },
  {
    "text": "wrote a really simple PHP script um you can do this any number of ways in PHP",
    "start": "1235840",
    "end": "1241600"
  },
  {
    "text": "file get contents is a call that you use to retrieve a full result from an HTTP",
    "start": "1241600",
    "end": "1248400"
  },
  {
    "text": "endpoint um it's just like a curl call we include our Cloud search",
    "start": "1248400",
    "end": "1253640"
  },
  {
    "text": "endpoint here again this is unique for our domain this is our search endpoint",
    "start": "1253640",
    "end": "1259200"
  },
  {
    "text": "and we include in the URL path we we point to the search resource and then we",
    "start": "1259200",
    "end": "1265280"
  },
  {
    "text": "include our keywords in the query and Q equals is a search parameter that tells",
    "start": "1265280",
    "end": "1270559"
  },
  {
    "text": "us to search against all text fields we can tell Cloud search to",
    "start": "1270559",
    "end": "1276240"
  },
  {
    "text": "return different fields in this case we're returning the title the artist name and the",
    "start": "1276240",
    "end": "1282240"
  },
  {
    "text": "year we can also facet so we tell Cloud search facet by artist name uh year and",
    "start": "1282240",
    "end": "1289400"
  },
  {
    "text": "genre and we can also specify our ranking function how to rank the results you",
    "start": "1289400",
    "end": "1295200"
  },
  {
    "text": "could type all of this into a URL this is simply uh an HTTP endpoint it's a",
    "start": "1295200",
    "end": "1300240"
  },
  {
    "text": "simple HTTP get what comes back we can just Jason decode it inflate it into",
    "start": "1300240",
    "end": "1306799"
  },
  {
    "text": "objects and use those objects to populate our UI so looking a little bit uh in detail",
    "start": "1306799",
    "end": "1314679"
  },
  {
    "text": "at some of the search results for simple search like rolling Stones we'll get",
    "start": "1314679",
    "end": "1320200"
  },
  {
    "text": "some information from cloud search that talks about that tells us what the query was what it was ranked by and how many",
    "start": "1320200",
    "end": "1327120"
  },
  {
    "text": "hits there are each hit is a single document that cloud search has identified as matching this this query",
    "start": "1327120",
    "end": "1333480"
  },
  {
    "text": "in this case Rolling Stones finds 204 hits that's that wrapped poorly but um",
    "start": "1333480",
    "end": "1342000"
  },
  {
    "text": "for each hit in a simple query we receive the document ID for that hit and",
    "start": "1342000",
    "end": "1348440"
  },
  {
    "text": "again the best practice is to get a result like this and then take those document IDs go to your secondary system",
    "start": "1348440",
    "end": "1355600"
  },
  {
    "text": "and inflate them happy to answer questions uh",
    "start": "1355600",
    "end": "1361000"
  },
  {
    "text": "after so um let's look at a uh search results with some return",
    "start": "1361000",
    "end": "1367559"
  },
  {
    "text": "values again for each hit if we specify that we want return values what we get",
    "start": "1367559",
    "end": "1373840"
  },
  {
    "text": "out is the ID and then a data section that provides us with the values that we",
    "start": "1373840",
    "end": "1380120"
  },
  {
    "text": "sent into Cloud search when we created this when we posted this document in this case we have artist",
    "start": "1380120",
    "end": "1387080"
  },
  {
    "text": "familiarity name text relevance uh I'm returning text relevance here because",
    "start": "1387080",
    "end": "1392679"
  },
  {
    "text": "that lets us sort of look at it and see um how they rank against one another",
    "start": "1392679",
    "end": "1398080"
  },
  {
    "text": "that helps us do uh uh tuning for ranking title and",
    "start": "1398080",
    "end": "1405159"
  },
  {
    "text": "year and we can look at also what the result looks like when we do some fating",
    "start": "1405320",
    "end": "1410840"
  },
  {
    "text": "so after the section of hits in our search result we get a section of facets",
    "start": "1410840",
    "end": "1416480"
  },
  {
    "text": "for each each facet in this case genre we'd get a list of the possible values",
    "start": "1416480",
    "end": "1422760"
  },
  {
    "text": "along with the counts for those values and if you look at that you can see it Maps almost one to one with what you see",
    "start": "1422760",
    "end": "1430039"
  },
  {
    "text": "uh typically in the left rail of an application you would see Pop is 126 and",
    "start": "1430039",
    "end": "1435679"
  },
  {
    "text": "rock is 125 alternative 109 Etc so that's kind of a walk through um",
    "start": "1435679",
    "end": "1444600"
  },
  {
    "text": "we started out with identifying our application we thought a little bit about the data that we would need to",
    "start": "1444600",
    "end": "1451720"
  },
  {
    "text": "support the kind of searches that we wanted talked about how to get that data structure it and put it into Cloud",
    "start": "1451720",
    "end": "1457679"
  },
  {
    "text": "search how to configure our domain talked about the integration how does the communication look back and forth",
    "start": "1457679",
    "end": "1464840"
  },
  {
    "text": "and you know ultimately we'd like to see our users come and build their playlist and um have their list of songs",
    "start": "1464840",
    "end": "1472679"
  },
  {
    "text": "hopefully buy those songs from us um and uh and be excellent okay so we also",
    "start": "1472679",
    "end": "1482720"
  },
  {
    "text": "want to talk about keeping ourselves up to date as as the system is in motion",
    "start": "1482720",
    "end": "1487880"
  },
  {
    "text": "and typically your data is not static and as you have updates to your data you want to capture those updates so for",
    "start": "1487880",
    "end": "1494799"
  },
  {
    "text": "instance in a social social networking scenario if you have users thumbing up",
    "start": "1494799",
    "end": "1500440"
  },
  {
    "text": "uh different different items you want to be able to push those scores into your search engine so what you do is you um",
    "start": "1500440",
    "end": "1508679"
  },
  {
    "text": "capture the updates as they occur then you will you would create SDF documents",
    "start": "1508679",
    "end": "1514559"
  },
  {
    "text": "for each of the changed documents in the system assign them a version number again Cloud search serves the highest",
    "start": "1514559",
    "end": "1521840"
  },
  {
    "text": "version number for any document that you've pushed in so for a particular document you would pick a higher version",
    "start": "1521840",
    "end": "1526919"
  },
  {
    "text": "number than you that you've sent before and best practice there is to use a",
    "start": "1526919",
    "end": "1532039"
  },
  {
    "text": "version number uh a Unix timestamp Unix epic is a good one as you're sending it out uh that means that will be",
    "start": "1532039",
    "end": "1538919"
  },
  {
    "text": "monotonically increasing and your updates will always apply uh you want to batch your updates together and upload",
    "start": "1538919",
    "end": "1544960"
  },
  {
    "text": "them using again a similar process to what we did in creating the initial data set um your updates are applied to the",
    "start": "1544960",
    "end": "1552080"
  },
  {
    "text": "index and they're available in near real time there's no additional work on your part you don't have to build indexes you",
    "start": "1552080",
    "end": "1557240"
  },
  {
    "text": "don't have to work worry about partitioning simply post your updates and they come in near real",
    "start": "1557240",
    "end": "1563919"
  },
  {
    "text": "time okay so I am going to uh turn it over now to Matt Norton uh from PBS he's",
    "start": "1563919",
    "end": "1571559"
  },
  {
    "text": "the director of application development and uh he's going to talk a little bit about Cloud search from a user",
    "start": "1571559",
    "end": "1576640"
  },
  {
    "text": "perspective thank you so much uh hi I'm Matt Norton as he said um",
    "start": "1576640",
    "end": "1583039"
  },
  {
    "text": "from PBS and I'm essentially a tech lead there and um",
    "start": "1583039",
    "end": "1588200"
  },
  {
    "text": "Focus mostly on our mobile applications but I've had some involvement with our Cloud search efforts",
    "start": "1588200",
    "end": "1596440"
  },
  {
    "text": "so uh essentially the two main use cases that we had uh were first of all we were working on our mobile video portal which",
    "start": "1596440",
    "end": "1603480"
  },
  {
    "text": "is a responsive website trying to uh take advantage of all the new platforms",
    "start": "1603480",
    "end": "1608880"
  },
  {
    "text": "out there and um the search that we had well I can get into the details of that",
    "start": "1608880",
    "end": "1615120"
  },
  {
    "text": "but essentially we had the new video port Port we wanted to get search on and we also uh wanted to get a solution that",
    "start": "1615120",
    "end": "1624159"
  },
  {
    "text": "we could add search to all of our applications at PBS so we have a lot of one-off applications and we wanted to",
    "start": "1624159",
    "end": "1629960"
  },
  {
    "text": "find a an easily Plugged In Search solution for all of our",
    "start": "1629960",
    "end": "1636520"
  },
  {
    "text": "apps um so our video portal we needed a mobile specific search and uh we had",
    "start": "1636880",
    "end": "1644200"
  },
  {
    "text": "ramp and we still have ramp on our main website and and that was working okay but it was going to cost us a lot of",
    "start": "1644200",
    "end": "1651320"
  },
  {
    "text": "money and it was going to uh be quite a b bit of effort to make it be able to give back mobile specific results so",
    "start": "1651320",
    "end": "1658720"
  },
  {
    "text": "we're looking for something that we could do quick lightweight but our team was very busy working with responsive",
    "start": "1658720",
    "end": "1665080"
  },
  {
    "text": "web and trying to figure out uh mobile video and so our vice president John",
    "start": "1665080",
    "end": "1671159"
  },
  {
    "text": "brenel who some of you guys may uh have seen in some of the other Amazon talks from PBS he's um",
    "start": "1671159",
    "end": "1678679"
  },
  {
    "text": "he's a very Hands-On manager and he was the guy who got us into AWS there and",
    "start": "1678679",
    "end": "1684760"
  },
  {
    "text": "but he's not a developer and the reason I bring this up is that uh while I'm very glad John brought up kind of how",
    "start": "1684760",
    "end": "1690440"
  },
  {
    "text": "you do exactly uh what we did and how to get your app search uh it actually is",
    "start": "1690440",
    "end": "1696880"
  },
  {
    "text": "simple enough that our our vice president who is very sharp was able to come in with very basic Python and uh",
    "start": "1696880",
    "end": "1704120"
  },
  {
    "text": "get a a prototype up and running and uh so he did that he started off uh taking",
    "start": "1704120",
    "end": "1711799"
  },
  {
    "text": "a CSV file of all of our video metadata and he uploaded it uh into the console",
    "start": "1711799",
    "end": "1718159"
  },
  {
    "text": "directly I think so there was no programming involved at all and then he started doing queries started to play",
    "start": "1718159",
    "end": "1723640"
  },
  {
    "text": "around to see if this was a solution that was uh good enough for our data and he liked it so he started playing with",
    "start": "1723640",
    "end": "1729559"
  },
  {
    "text": "python and uh boto boto is the uh Amazon SDK for",
    "start": "1729559",
    "end": "1734720"
  },
  {
    "text": "Python and it has a cloud search uh uh module as well but essentially we",
    "start": "1734720",
    "end": "1740720"
  },
  {
    "text": "started taking our our data from our API and going through python shoving it and",
    "start": "1740720",
    "end": "1746039"
  },
  {
    "text": "update as it was updated putting it on a schedule into uh",
    "start": "1746039",
    "end": "1751159"
  },
  {
    "text": "the um up into Cloud search so uh he also developed a quick Client app with a",
    "start": "1751159",
    "end": "1756760"
  },
  {
    "text": "little help to play uh with the search engine and uh basically it let us look at all the queries the facets and uh you",
    "start": "1756760",
    "end": "1764679"
  },
  {
    "text": "can uh see it's not very clear there but essentially you can search and then it gives uh sort of what you would need to",
    "start": "1764679",
    "end": "1772519"
  },
  {
    "text": "query directly the API if you were going to put into your app uh but it also lets you visually play around with",
    "start": "1772519",
    "end": "1779080"
  },
  {
    "text": "it so this is what ended up happening it ended up becoming a production product",
    "start": "1779080",
    "end": "1785200"
  },
  {
    "text": "uh with uh the vice president's work so uh we had a little client side work obviously to link it up but it was uh",
    "start": "1785200",
    "end": "1793120"
  },
  {
    "text": "you know just drop in a query into uh the app or in this case it's mobile web",
    "start": "1793120",
    "end": "1800080"
  },
  {
    "text": "and we started getting results back and um that's live that's our mobile website",
    "start": "1800080",
    "end": "1807760"
  },
  {
    "text": "we only have about 60,000 video Assets in there right now which is uh sort of our live mobile catalog um that we've",
    "start": "1807760",
    "end": "1814919"
  },
  {
    "text": "transcoded uh but it's um and we do update the index like I said on a regular schedule so um with the python",
    "start": "1814919",
    "end": "1822320"
  },
  {
    "text": "stuff that's just a little details how we implemented it and it works very well so far it's very fast it's 26",
    "start": "1822320",
    "end": "1829440"
  },
  {
    "text": "milliseconds average response time and uh our developers are very happy as a",
    "start": "1829440",
    "end": "1835440"
  },
  {
    "text": "matter of fact with all of the um facets everything else on there for the quering",
    "start": "1835440",
    "end": "1840960"
  },
  {
    "text": "our developers have asked hey can we switch over to just using Cloud search",
    "start": "1840960",
    "end": "1846120"
  },
  {
    "text": "to get the data so and by that I mean even for browsing uh so uh basically I",
    "start": "1846120",
    "end": "1852120"
  },
  {
    "text": "don't know if it's misusing Cloud search but it's basically using in a very fast flat kind of of uh uh search so we'll do",
    "start": "1852120",
    "end": "1861159"
  },
  {
    "text": "a quick search on you know like he was saying Rolling Stone so we'll look for",
    "start": "1861159",
    "end": "1866200"
  },
  {
    "text": "Masterpiece videos and it will give us all the Masterpiece videos and so it's it's essentially a search but it's very",
    "start": "1866200",
    "end": "1872840"
  },
  {
    "text": "much you know we're looking we're not searching on text we're at that point looking at a literal and kind of",
    "start": "1872840",
    "end": "1878279"
  },
  {
    "text": "drilling down through it so um that has uh our API we haven't had time to go",
    "start": "1878279",
    "end": "1885000"
  },
  {
    "text": "back and make that faster and with 26 6 milliseconds and you know scalable everything kind of just is managed for",
    "start": "1885000",
    "end": "1892559"
  },
  {
    "text": "us has been excellent uh we've used some of the uh",
    "start": "1892559",
    "end": "1897799"
  },
  {
    "text": "options that cloud search currently has like uh ranking we've you know given title a little more precedence over",
    "start": "1897799",
    "end": "1904080"
  },
  {
    "text": "description uh the publishing date kind of how recent the video is we've uh factored that",
    "start": "1904080",
    "end": "1910639"
  },
  {
    "text": "in we've started looking uh at other things we can do for that as well um",
    "start": "1910639",
    "end": "1916320"
  },
  {
    "text": "trying to you know get the search a little bit cleaner but it is very good like I said already we've used synonyms",
    "start": "1916320",
    "end": "1922639"
  },
  {
    "text": "a lot of people come in uh mistyping stuff particularly on mobile um so we for the we look through our",
    "start": "1922639",
    "end": "1931039"
  },
  {
    "text": "search results and we see what the top terms are that have no uh hits and we start entering those in on the side uh",
    "start": "1931039",
    "end": "1939519"
  },
  {
    "text": "just like we do in ramp actually and so um we also have a couple stop Words which are just common terms that people",
    "start": "1939519",
    "end": "1945720"
  },
  {
    "text": "search for that are also all of our videos",
    "start": "1945720",
    "end": "1951240"
  },
  {
    "text": "um yeah so the ux is actually taking advantage of the FES now",
    "start": "1951240",
    "end": "1957039"
  },
  {
    "text": "um and now the next step is trying to Pride away from the VP so we're trying to make this into a serious product with",
    "start": "1957039",
    "end": "1963760"
  },
  {
    "text": "you know uh staging environments QA environments and in order to kind of put",
    "start": "1963760",
    "end": "1969039"
  },
  {
    "text": "more Ops and uh uh product around it we need to eventually uh get it into a",
    "start": "1969039",
    "end": "1975080"
  },
  {
    "text": "product team so that's kind of one of our next steps and then the second use case we",
    "start": "1975080",
    "end": "1981559"
  },
  {
    "text": "have excuse me mind if I grab some this water how is",
    "start": "1981559",
    "end": "1987799"
  },
  {
    "text": "this sorry uh the Second Use case we had was",
    "start": "1995320",
    "end": "2001600"
  },
  {
    "text": "uh adding search to our other apps and admin tools and so just very briefly we developed a cloud search backend for",
    "start": "2001600",
    "end": "2008320"
  },
  {
    "text": "Jango hay stack which is uh you can go look at it but it's essentially a uh",
    "start": "2008320",
    "end": "2013480"
  },
  {
    "text": "module that you can drop into your python jeno uh apps and it manages it",
    "start": "2013480",
    "end": "2018679"
  },
  {
    "text": "syncs all of your models and all your uh data from the omm it automatically pushes it up in the cloud search and",
    "start": "2018679",
    "end": "2025120"
  },
  {
    "text": "well really whatever search back end you choose um they didn't have a cloud search back end so we wrote this and",
    "start": "2025120",
    "end": "2031320"
  },
  {
    "text": "open- sourced it um it's not quite ready for production but we're working on it and there's a couple things I think we",
    "start": "2031320",
    "end": "2036480"
  },
  {
    "text": "need to either look at uh boto uh getting some of our changes pulled into",
    "start": "2036480",
    "end": "2042279"
  },
  {
    "text": "there before we can really consider it production ready uh or into the Hast stack uh",
    "start": "2042279",
    "end": "2047960"
  },
  {
    "text": "itself and that's going to enable us for all of our small one-off apps to basically say hey I want to be able to",
    "start": "2047960",
    "end": "2053398"
  },
  {
    "text": "add search to you know this very basic app maybe just a app that um our",
    "start": "2053399",
    "end": "2059000"
  },
  {
    "text": "producers use or something you know and it would just be very trivial to say yep drop in the Hy stack module and all the",
    "start": "2059000",
    "end": "2065320"
  },
  {
    "text": "data uh is searchable so and that's it check out PBS uh donate",
    "start": "2065320",
    "end": "2073398"
  },
  {
    "text": "to your station I can't thanks John",
    "start": "2073399",
    "end": "2081118"
  },
  {
    "text": "thanks thanks mat I really love that story BP just",
    "start": "2083200",
    "end": "2089320"
  },
  {
    "text": "went ahead and did it um so just to to summarize a little bit you know we",
    "start": "2089320",
    "end": "2095919"
  },
  {
    "text": "talked about like as Matt was also pointing out search really is a central part of your",
    "start": "2095919",
    "end": "2102200"
  },
  {
    "text": "application and it it drives your users's ability to locate the data the",
    "start": "2102200",
    "end": "2108280"
  },
  {
    "text": "functionality the pieces of your application that you want to provide to them and it has been a difficult",
    "start": "2108280",
    "end": "2116000"
  },
  {
    "text": "challenge to provide search in your application with Amazon Cloud search you",
    "start": "2116000",
    "end": "2123480"
  },
  {
    "text": "get a fully managed service that allows you simply to push in data and pull out",
    "start": "2123480",
    "end": "2128960"
  },
  {
    "text": "search results in a full-featured search engine which is fast and provides",
    "start": "2128960",
    "end": "2134960"
  },
  {
    "text": "features like Boolean queries fating ranking customizable ranking uh right",
    "start": "2134960",
    "end": "2142240"
  },
  {
    "text": "out of the box it's got the benefits of the cloud so it's pay as you go no",
    "start": "2142240",
    "end": "2147480"
  },
  {
    "text": "upfront costs pay for what you use and it lets you get up and running fast",
    "start": "2147480",
    "end": "2153079"
  },
  {
    "text": "without focusing a lot of it effort on operating your search service it lets",
    "start": "2153079",
    "end": "2158240"
  },
  {
    "text": "you innovate so right now we are running a free trial for new users of cloud search",
    "start": "2158240",
    "end": "2164280"
  },
  {
    "text": "you can use cloud search for 30 days free encourage everybody here to check it out spin up a search domain you'll",
    "start": "2164280",
    "end": "2170599"
  },
  {
    "text": "see uh in the console we have uh data sets that allow you to just try it out",
    "start": "2170599",
    "end": "2176880"
  },
  {
    "text": "and um get up and running now and thank you very",
    "start": "2176880",
    "end": "2183240"
  },
  {
    "text": "much",
    "start": "2185680",
    "end": "2188680"
  }
]