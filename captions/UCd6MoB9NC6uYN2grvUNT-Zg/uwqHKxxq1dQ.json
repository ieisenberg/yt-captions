[
  {
    "text": "hi good afternoon everybody my name is",
    "start": "30",
    "end": "2639"
  },
  {
    "text": "Nick",
    "start": "2639",
    "end": "3419"
  },
  {
    "text": "I'm a senior principal network engineer",
    "start": "3419",
    "end": "6150"
  },
  {
    "text": "at Atlassian the company responsible for",
    "start": "6150",
    "end": "8730"
  },
  {
    "text": "every JIRA tickets ever so yeah we make",
    "start": "8730",
    "end": "13080"
  },
  {
    "text": "collaboration software JIRA conference",
    "start": "13080",
    "end": "15330"
  },
  {
    "text": "Status page Trello bitbucket and yep",
    "start": "15330",
    "end": "19350"
  },
  {
    "text": "so basically we've been doing a lot of",
    "start": "19350",
    "end": "21869"
  },
  {
    "text": "stuff on top of AWS and we've kind of",
    "start": "21869",
    "end": "26189"
  },
  {
    "text": "built interesting things so today I'm",
    "start": "26189",
    "end": "31980"
  },
  {
    "text": "going to walk through you through our",
    "start": "31980",
    "end": "33719"
  },
  {
    "text": "journey into the AWS cloud and we'll",
    "start": "33719",
    "end": "38070"
  },
  {
    "text": "look at some of the requirements that",
    "start": "38070",
    "end": "40110"
  },
  {
    "text": "were given to us to the network team and",
    "start": "40110",
    "end": "43260"
  },
  {
    "text": "the solutions that we've came up that",
    "start": "43260",
    "end": "45600"
  },
  {
    "text": "we've come up to to solve them one of",
    "start": "45600",
    "end": "48210"
  },
  {
    "text": "those solutions is about managing VPC",
    "start": "48210",
    "end": "50610"
  },
  {
    "text": "peering at scale the other one is about",
    "start": "50610",
    "end": "52739"
  },
  {
    "text": "building private inning cast inside of",
    "start": "52739",
    "end": "55079"
  },
  {
    "text": "AWS and the last one is about using the",
    "start": "55079",
    "end": "58170"
  },
  {
    "text": "right connect gateways for fun and",
    "start": "58170",
    "end": "59850"
  },
  {
    "text": "profit so that we can build some",
    "start": "59850",
    "end": "61320"
  },
  {
    "text": "software back holes between our sites",
    "start": "61320",
    "end": "65210"
  },
  {
    "text": "using AWS network so Atlassian is all",
    "start": "65210",
    "end": "72420"
  },
  {
    "text": "about teams we have a lot of teams we",
    "start": "72420",
    "end": "75750"
  },
  {
    "text": "believe in teams because we believe that",
    "start": "75750",
    "end": "77790"
  },
  {
    "text": "people will do their best work and when",
    "start": "77790",
    "end": "80850"
  },
  {
    "text": "they're in a small autonomous team where",
    "start": "80850",
    "end": "83430"
  },
  {
    "text": "they're given the means and the autonomy",
    "start": "83430",
    "end": "86250"
  },
  {
    "text": "to build whatever they need to build",
    "start": "86250",
    "end": "88439"
  },
  {
    "text": "that means that we end up with a lot of",
    "start": "88439",
    "end": "91380"
  },
  {
    "text": "teams and our mission is to unleash the",
    "start": "91380",
    "end": "93450"
  },
  {
    "text": "potential in every team so we've done",
    "start": "93450",
    "end": "96720"
  },
  {
    "text": "that inside the company and we try to do",
    "start": "96720",
    "end": "98640"
  },
  {
    "text": "that outside of the company and for the",
    "start": "98640",
    "end": "100710"
  },
  {
    "text": "network team that means that we end up",
    "start": "100710",
    "end": "102930"
  },
  {
    "text": "with a lot of teams which give us a lot",
    "start": "102930",
    "end": "106500"
  },
  {
    "text": "of requirements so what are those",
    "start": "106500",
    "end": "108390"
  },
  {
    "text": "requirements what do those team wants",
    "start": "108390",
    "end": "110520"
  },
  {
    "text": "and at what scale well they're pretty",
    "start": "110520",
    "end": "113759"
  },
  {
    "text": "simple they want to connect to",
    "start": "113759",
    "end": "115229"
  },
  {
    "text": "absolutely everything they want an",
    "start": "115229",
    "end": "117390"
  },
  {
    "text": "infinite amount of bandwidth they want",
    "start": "117390",
    "end": "119909"
  },
  {
    "text": "no Litton sea between anything and",
    "start": "119909",
    "end": "121380"
  },
  {
    "text": "anything and they want it all for free",
    "start": "121380",
    "end": "123500"
  },
  {
    "text": "so that's pretty easy to build that",
    "start": "123500",
    "end": "126210"
  },
  {
    "text": "right with AWS at what scale do we need",
    "start": "126210",
    "end": "128759"
  },
  {
    "text": "to deliver that we have more than 100",
    "start": "128759",
    "end": "131220"
  },
  {
    "text": "accounts probably getting to two",
    "start": "131220",
    "end": "133980"
  },
  {
    "text": "these days we have over 200 connected V",
    "start": "133980",
    "end": "137790"
  },
  {
    "text": "pcs we're present in six regions",
    "start": "137790",
    "end": "140940"
  },
  {
    "text": "probably eight before the end of this",
    "start": "140940",
    "end": "143849"
  },
  {
    "text": "financial year and everything is",
    "start": "143849",
    "end": "146280"
  },
  {
    "text": "connected with multiple ten gigs today",
    "start": "146280",
    "end": "149340"
  },
  {
    "text": "we've got 12 x 10 gigs of Direct Connect",
    "start": "149340",
    "end": "152489"
  },
  {
    "text": "going between AWS and are the rest of",
    "start": "152489",
    "end": "155730"
  },
  {
    "text": "our infrastructure so what if we just",
    "start": "155730",
    "end": "161190"
  },
  {
    "text": "try to deliver those things just using",
    "start": "161190",
    "end": "164400"
  },
  {
    "text": "the normal AWS building blocks without",
    "start": "164400",
    "end": "166519"
  },
  {
    "text": "let's say taking the naive approach",
    "start": "166519",
    "end": "168660"
  },
  {
    "text": "without engineering anything funny on",
    "start": "168660",
    "end": "172079"
  },
  {
    "text": "top well the problem we would have is",
    "start": "172079",
    "end": "176760"
  },
  {
    "text": "that V PC peering would be a big part of",
    "start": "176760",
    "end": "179400"
  },
  {
    "text": "creating the connectivity between all",
    "start": "179400",
    "end": "181140"
  },
  {
    "text": "the things a vb c peering is where you",
    "start": "181140",
    "end": "183629"
  },
  {
    "text": "take one V PC you connected to another V",
    "start": "183629",
    "end": "185280"
  },
  {
    "text": "PC then you take static routes and you",
    "start": "185280",
    "end": "186959"
  },
  {
    "text": "point them at the BBC peering so that",
    "start": "186959",
    "end": "188790"
  },
  {
    "text": "they can talk to one another so if you",
    "start": "188790",
    "end": "191129"
  },
  {
    "text": "think of doing that for let's say",
    "start": "191129",
    "end": "194549"
  },
  {
    "text": "between 10 and 100 V pcs across six",
    "start": "194549",
    "end": "197220"
  },
  {
    "text": "regions just managing those raw tables",
    "start": "197220",
    "end": "199859"
  },
  {
    "text": "is going to be a nightmare like it's",
    "start": "199859",
    "end": "201359"
  },
  {
    "text": "gonna be impossible and those raw tables",
    "start": "201359",
    "end": "203609"
  },
  {
    "text": "are also in like hundreds of accounts",
    "start": "203609",
    "end": "205680"
  },
  {
    "text": "like it's we would have to hire a whole",
    "start": "205680",
    "end": "208709"
  },
  {
    "text": "team just to do that if we wanted to do",
    "start": "208709",
    "end": "210540"
  },
  {
    "text": "it just manually also rod tables have",
    "start": "210540",
    "end": "214260"
  },
  {
    "text": "limits a hundred rods today is still the",
    "start": "214260",
    "end": "218040"
  },
  {
    "text": "hard limit for rod table size again if",
    "start": "218040",
    "end": "221220"
  },
  {
    "text": "you think of the number of bbc's we have",
    "start": "221220",
    "end": "223109"
  },
  {
    "text": "we would hit that limit and if we need",
    "start": "223109",
    "end": "225299"
  },
  {
    "text": "to check a few more rods to connect to",
    "start": "225299",
    "end": "227519"
  },
  {
    "text": "on Prem infrastructure and a few other",
    "start": "227519",
    "end": "229019"
  },
  {
    "text": "things V PC endpoints it's very easy for",
    "start": "229019",
    "end": "231630"
  },
  {
    "text": "us to hit that 100 ROC limit so if we",
    "start": "231630",
    "end": "237510"
  },
  {
    "text": "wanted to do private in eek as well we",
    "start": "237510",
    "end": "240810"
  },
  {
    "text": "wouldn't be able to write like in AWS",
    "start": "240810",
    "end": "243629"
  },
  {
    "text": "you can't do you can't inject routes",
    "start": "243629",
    "end": "247220"
  },
  {
    "text": "that overlap with things so you wouldn't",
    "start": "247220",
    "end": "250109"
  },
  {
    "text": "be able to do private DNS today we use",
    "start": "250109",
    "end": "254069"
  },
  {
    "text": "route 53 for DNS but because we have all",
    "start": "254069",
    "end": "257250"
  },
  {
    "text": "of those accounts and we want to use",
    "start": "257250",
    "end": "260130"
  },
  {
    "text": "every account wants to use their own",
    "start": "260130",
    "end": "261810"
  },
  {
    "text": "private hosted zones we have to put a",
    "start": "261810",
    "end": "264180"
  },
  {
    "text": "layer between rod 53",
    "start": "264180",
    "end": "267139"
  },
  {
    "text": "and the the DNS service that we expose",
    "start": "267139",
    "end": "269330"
  },
  {
    "text": "internally so we have that proxy layer",
    "start": "269330",
    "end": "272090"
  },
  {
    "text": "and the way we want to expose that proxy",
    "start": "272090",
    "end": "273919"
  },
  {
    "text": "layer is through any caste because",
    "start": "273919",
    "end": "275479"
  },
  {
    "text": "that's what we did back when we had",
    "start": "275479",
    "end": "278029"
  },
  {
    "text": "everything on premise now we want to",
    "start": "278029",
    "end": "279680"
  },
  {
    "text": "pour that into a WS there is just no",
    "start": "279680",
    "end": "281479"
  },
  {
    "text": "very easy way to do that natively and",
    "start": "281479",
    "end": "285529"
  },
  {
    "text": "also we can't provide a very generic",
    "start": "285529",
    "end": "288620"
  },
  {
    "text": "cross region private connectivity",
    "start": "288620",
    "end": "290650"
  },
  {
    "text": "out-of-the-box what exists today to do",
    "start": "290650",
    "end": "293150"
  },
  {
    "text": "those kind of things in AWS our cross",
    "start": "293150",
    "end": "294949"
  },
  {
    "text": "region v PCP rings but because of the",
    "start": "294949",
    "end": "297080"
  },
  {
    "text": "problems I explained earlier we can't do",
    "start": "297080",
    "end": "299300"
  },
  {
    "text": "that at the scale that we need to do",
    "start": "299300",
    "end": "301279"
  },
  {
    "text": "also I have a few concerns like doing",
    "start": "301279",
    "end": "305960"
  },
  {
    "text": "vbc peering within a data center or",
    "start": "305960",
    "end": "307550"
  },
  {
    "text": "between a Z's that's I don't have any",
    "start": "307550",
    "end": "310279"
  },
  {
    "text": "concerns doing that knowing that there",
    "start": "310279",
    "end": "312020"
  },
  {
    "text": "is plenty of capacity a lot of ecmp",
    "start": "312020",
    "end": "314150"
  },
  {
    "text": "going on in the in the background in AWS",
    "start": "314150",
    "end": "316580"
  },
  {
    "text": "but I'm a network engineer I know how",
    "start": "316580",
    "end": "319039"
  },
  {
    "text": "international links go and I want my",
    "start": "319039",
    "end": "322009"
  },
  {
    "text": "pass that go between one continent and",
    "start": "322009",
    "end": "324199"
  },
  {
    "text": "another to be able to reconvert using",
    "start": "324199",
    "end": "326150"
  },
  {
    "text": "routing which we busy peering the rods",
    "start": "326150",
    "end": "328639"
  },
  {
    "text": "are static if there is a problem with",
    "start": "328639",
    "end": "330289"
  },
  {
    "text": "the BBC peering with the link I can try",
    "start": "330289",
    "end": "332150"
  },
  {
    "text": "converging alternate paths even if it",
    "start": "332150",
    "end": "333919"
  },
  {
    "text": "exists because there is no routing so I",
    "start": "333919",
    "end": "335539"
  },
  {
    "text": "can't do that also the other classical",
    "start": "335539",
    "end": "339199"
  },
  {
    "text": "solution for those kind of problems is",
    "start": "339199",
    "end": "343839"
  },
  {
    "text": "the what's called the the the transit",
    "start": "343839",
    "end": "348589"
  },
  {
    "text": "VPC right where you spin up some",
    "start": "348589",
    "end": "351129"
  },
  {
    "text": "software routers like ICS are 1000 v or",
    "start": "351129",
    "end": "354020"
  },
  {
    "text": "something like that and you start to",
    "start": "354020",
    "end": "355849"
  },
  {
    "text": "connect your VPNs to or your a pcs that",
    "start": "355849",
    "end": "358550"
  },
  {
    "text": "works but it's quite expensive and it",
    "start": "358550",
    "end": "360860"
  },
  {
    "text": "doesn't quite scale to to to multiple 10",
    "start": "360860",
    "end": "364550"
  },
  {
    "text": "gigs doesn't quite scale in the way we",
    "start": "364550",
    "end": "366349"
  },
  {
    "text": "like also the the reconvergence is a",
    "start": "366349",
    "end": "368479"
  },
  {
    "text": "little bit slow like VPN will basically",
    "start": "368479",
    "end": "371330"
  },
  {
    "text": "fail bgp health checks and henry",
    "start": "371330",
    "end": "373699"
  },
  {
    "text": "converge within 30 seconds we typically",
    "start": "373699",
    "end": "375919"
  },
  {
    "text": "try to be under a second for things to",
    "start": "375919",
    "end": "378050"
  },
  {
    "text": "reconverge because we actually use our",
    "start": "378050",
    "end": "380389"
  },
  {
    "text": "global network to route some of the",
    "start": "380389",
    "end": "382310"
  },
  {
    "text": "customer requests right like if you have",
    "start": "382310",
    "end": "384110"
  },
  {
    "text": "batch jobs you can have reconvergence",
    "start": "384110",
    "end": "386000"
  },
  {
    "text": "time that go way up but if you're",
    "start": "386000",
    "end": "388520"
  },
  {
    "text": "actually taking a customer request",
    "start": "388520",
    "end": "389990"
  },
  {
    "text": "taking it into a region and forwarding",
    "start": "389990",
    "end": "392449"
  },
  {
    "text": "it to another region you can't have 30",
    "start": "392449",
    "end": "394789"
  },
  {
    "text": "second reconvergence time whenever there",
    "start": "394789",
    "end": "396529"
  },
  {
    "text": "is a network event",
    "start": "396529",
    "end": "399229"
  },
  {
    "text": "so four years ago when we started our",
    "start": "399229",
    "end": "403020"
  },
  {
    "text": "journey where were we we had two sides",
    "start": "403020",
    "end": "404910"
  },
  {
    "text": "in the US one close to us each one one",
    "start": "404910",
    "end": "407430"
  },
  {
    "text": "close to us west one still most of the",
    "start": "407430",
    "end": "409860"
  },
  {
    "text": "infrastructure was on prem about 80% the",
    "start": "409860",
    "end": "412979"
  },
  {
    "text": "basic business case for getting Direct",
    "start": "412979",
    "end": "414840"
  },
  {
    "text": "Connect at the time was just backups we",
    "start": "414840",
    "end": "417990"
  },
  {
    "text": "were shipping the backups into Glacier",
    "start": "417990",
    "end": "419669"
  },
  {
    "text": "through the direct connect and just that",
    "start": "419669",
    "end": "422280"
  },
  {
    "text": "business case already justified the",
    "start": "422280",
    "end": "423840"
  },
  {
    "text": "direct connect so they were kind of",
    "start": "423840",
    "end": "425039"
  },
  {
    "text": "given to my team when we started because",
    "start": "425039",
    "end": "428240"
  },
  {
    "text": "we had that to play with between the two",
    "start": "428240",
    "end": "432840"
  },
  {
    "text": "sides we had private links like MPLS",
    "start": "432840",
    "end": "434940"
  },
  {
    "text": "type circuits two times ten gigs and all",
    "start": "434940",
    "end": "437400"
  },
  {
    "text": "the traffic that was going between VPC",
    "start": "437400",
    "end": "439410"
  },
  {
    "text": "at the time would just happen between",
    "start": "439410",
    "end": "440940"
  },
  {
    "text": "two vbc through the direct connect",
    "start": "440940",
    "end": "442949"
  },
  {
    "text": "because VPC peering wasn't even a thing",
    "start": "442949",
    "end": "445139"
  },
  {
    "text": "at the time it's also at that time that",
    "start": "445139",
    "end": "448349"
  },
  {
    "text": "we realized the trout table limit was a",
    "start": "448349",
    "end": "450599"
  },
  {
    "text": "thing because with everybody has limited",
    "start": "450599",
    "end": "452669"
  },
  {
    "text": "a lot of time you don't read the",
    "start": "452669",
    "end": "453750"
  },
  {
    "text": "documentation until you run up against",
    "start": "453750",
    "end": "455370"
  },
  {
    "text": "the limit and that's when you realize",
    "start": "455370",
    "end": "457289"
  },
  {
    "text": "that something doesn't quite work",
    "start": "457289",
    "end": "458340"
  },
  {
    "text": "anymore so the atlast network was",
    "start": "458340",
    "end": "460680"
  },
  {
    "text": "growing we got to a hundred prefix on",
    "start": "460680",
    "end": "463229"
  },
  {
    "text": "our private network and all of a sudden",
    "start": "463229",
    "end": "464970"
  },
  {
    "text": "some prefixes couldn't reach some VP",
    "start": "464970",
    "end": "466590"
  },
  {
    "text": "season huh so at that time we started",
    "start": "466590",
    "end": "470220"
  },
  {
    "text": "advertising RFC 1918 summaries into each",
    "start": "470220",
    "end": "473400"
  },
  {
    "text": "of our VPC so that we lower the rod",
    "start": "473400",
    "end": "475289"
  },
  {
    "text": "table usage so then AWS announced vbc",
    "start": "475289",
    "end": "481349"
  },
  {
    "text": "peering everybody wants we busy peering",
    "start": "481349",
    "end": "483180"
  },
  {
    "text": "vbc peering is awesome because it solves",
    "start": "483180",
    "end": "485370"
  },
  {
    "text": "two of our problems we get infinite",
    "start": "485370",
    "end": "487050"
  },
  {
    "text": "bandwidth because we're not going",
    "start": "487050",
    "end": "488340"
  },
  {
    "text": "through the direct connect anymore we're",
    "start": "488340",
    "end": "489599"
  },
  {
    "text": "not kept by that capacity and we get",
    "start": "489599",
    "end": "492210"
  },
  {
    "text": "near zero latency because we stay within",
    "start": "492210",
    "end": "494250"
  },
  {
    "text": "AWS within the region but the problem is",
    "start": "494250",
    "end": "496949"
  },
  {
    "text": "with visa peering handshaking is hard",
    "start": "496949",
    "end": "498990"
  },
  {
    "text": "you need to make a request accept the",
    "start": "498990",
    "end": "500880"
  },
  {
    "text": "request once appearing is up do a rod",
    "start": "500880",
    "end": "503520"
  },
  {
    "text": "table on the door out on that side go",
    "start": "503520",
    "end": "505259"
  },
  {
    "text": "out on that side and the rod table size",
    "start": "505259",
    "end": "507270"
  },
  {
    "text": "is limited as as we already found out so",
    "start": "507270",
    "end": "511169"
  },
  {
    "text": "we need to get a little bit smarter",
    "start": "511169",
    "end": "512789"
  },
  {
    "text": "about this we're a software company so",
    "start": "512789",
    "end": "515070"
  },
  {
    "text": "let's write some software to do that so",
    "start": "515070",
    "end": "519180"
  },
  {
    "text": "our design guidelines was everything",
    "start": "519180",
    "end": "521490"
  },
  {
    "text": "still needs to be radical because that's",
    "start": "521490",
    "end": "523260"
  },
  {
    "text": "what we started with that's what our",
    "start": "523260",
    "end": "525600"
  },
  {
    "text": "users want we do security with security",
    "start": "525600",
    "end": "529350"
  },
  {
    "text": "measures so we do security groups and",
    "start": "529350",
    "end": "531450"
  },
  {
    "text": "knackles we don't use routing",
    "start": "531450",
    "end": "533000"
  },
  {
    "text": "for security and we advertise the 3rs in",
    "start": "533000",
    "end": "536990"
  },
  {
    "text": "1919 prefixes over the Direct Connect so",
    "start": "536990",
    "end": "539390"
  },
  {
    "text": "it's everything has to be reachable and",
    "start": "539390",
    "end": "541670"
  },
  {
    "text": "we don't want the BBC owners to have to",
    "start": "541670",
    "end": "543740"
  },
  {
    "text": "manage the handshaking in static routes",
    "start": "543740",
    "end": "545420"
  },
  {
    "text": "and all of that so we basically came up",
    "start": "545420",
    "end": "550400"
  },
  {
    "text": "with the tool that creates the topology",
    "start": "550400",
    "end": "552620"
  },
  {
    "text": "that we want at first we wanted to have",
    "start": "552620",
    "end": "555530"
  },
  {
    "text": "just one full mesh in the region that",
    "start": "555530",
    "end": "557720"
  },
  {
    "text": "connected all the bbc's to all the bbc's",
    "start": "557720",
    "end": "559550"
  },
  {
    "text": "and basically would copy what we had",
    "start": "559550",
    "end": "562850"
  },
  {
    "text": "with the happening on Direct Connect but",
    "start": "562850",
    "end": "565430"
  },
  {
    "text": "because of our table size limit we",
    "start": "565430",
    "end": "567980"
  },
  {
    "text": "decided to go and create the concept of",
    "start": "567980",
    "end": "570620"
  },
  {
    "text": "an environment where we say all my Prada",
    "start": "570620",
    "end": "572960"
  },
  {
    "text": "pcs actually need to talk to one to each",
    "start": "572960",
    "end": "575870"
  },
  {
    "text": "other but all my staging bbc's don't",
    "start": "575870",
    "end": "578480"
  },
  {
    "text": "need to have the optimized path when",
    "start": "578480",
    "end": "580640"
  },
  {
    "text": "talking to my prod via pcs everybody",
    "start": "580640",
    "end": "582620"
  },
  {
    "text": "still falls back to Direct Connect and",
    "start": "582620",
    "end": "584570"
  },
  {
    "text": "hair pinning if they need to so",
    "start": "584570",
    "end": "586070"
  },
  {
    "text": "connectivity is there but I don't need",
    "start": "586070",
    "end": "588530"
  },
  {
    "text": "the full mesh and I can save on route",
    "start": "588530",
    "end": "590150"
  },
  {
    "text": "table space those mesh can overlap the",
    "start": "590150",
    "end": "594020"
  },
  {
    "text": "same account same V PC can be in as many",
    "start": "594020",
    "end": "596300"
  },
  {
    "text": "mesh as required that's handled by the",
    "start": "596300",
    "end": "599960"
  },
  {
    "text": "tool a particular case for example here",
    "start": "599960",
    "end": "605089"
  },
  {
    "text": "as well is let's say we get a V PC where",
    "start": "605089",
    "end": "608150"
  },
  {
    "text": "we have a Cassandra cluster and it's",
    "start": "608150",
    "end": "610370"
  },
  {
    "text": "actually in a separate account and we've",
    "start": "610370",
    "end": "612650"
  },
  {
    "text": "given access to that account to a third",
    "start": "612650",
    "end": "615080"
  },
  {
    "text": "party because they managed the Cassandra",
    "start": "615080",
    "end": "616610"
  },
  {
    "text": "V PC for us and that's that's a nice way",
    "start": "616610",
    "end": "619490"
  },
  {
    "text": "to do separation of duties and so on but",
    "start": "619490",
    "end": "621380"
  },
  {
    "text": "we still want this this v bc to be",
    "start": "621380",
    "end": "624020"
  },
  {
    "text": "paired we can create a special like a",
    "start": "624020",
    "end": "625970"
  },
  {
    "text": "custom environment just for them and",
    "start": "625970",
    "end": "627440"
  },
  {
    "text": "just put those 2 VB C's in them and",
    "start": "627440",
    "end": "629300"
  },
  {
    "text": "clearly still manages the VP's appearing",
    "start": "629300",
    "end": "631550"
  },
  {
    "text": "in the route table yeah you can see in",
    "start": "631550",
    "end": "635300"
  },
  {
    "text": "this example as well so we've got some",
    "start": "635300",
    "end": "637040"
  },
  {
    "text": "resource like an LDAP server or Decker",
    "start": "637040",
    "end": "639350"
  },
  {
    "text": "docker repo they need to be available",
    "start": "639350",
    "end": "641030"
  },
  {
    "text": "from staging and from prod so we put",
    "start": "641030",
    "end": "643370"
  },
  {
    "text": "them in in the multiple things so we",
    "start": "643370",
    "end": "646400"
  },
  {
    "text": "create a config file that describes the",
    "start": "646400",
    "end": "648350"
  },
  {
    "text": "topology we want we have actually",
    "start": "648350",
    "end": "649940"
  },
  {
    "text": "switched to llamó so that it's a little",
    "start": "649940",
    "end": "651860"
  },
  {
    "text": "bit more compact now but this slide is",
    "start": "651860",
    "end": "655760"
  },
  {
    "text": "still on there on the old version of",
    "start": "655760",
    "end": "657230"
  },
  {
    "text": "Jason so we kind of go through the",
    "start": "657230",
    "end": "660080"
  },
  {
    "text": "region's first so because we don't yet",
    "start": "660080",
    "end": "663350"
  },
  {
    "text": "support in the tool cross region 3 PC",
    "start": "663350",
    "end": "665000"
  },
  {
    "text": "peering that's on our to-do list of",
    "start": "665000",
    "end": "666410"
  },
  {
    "text": "things",
    "start": "666410",
    "end": "667850"
  },
  {
    "text": "and under each region we have list of",
    "start": "667850",
    "end": "671209"
  },
  {
    "text": "environments so those are the different",
    "start": "671209",
    "end": "672589"
  },
  {
    "text": "full mesh and under each environment we",
    "start": "672589",
    "end": "675500"
  },
  {
    "text": "have a list of accounts the same account",
    "start": "675500",
    "end": "677390"
  },
  {
    "text": "may be in multiple in multiple",
    "start": "677390",
    "end": "679610"
  },
  {
    "text": "environments as we saw and then you can",
    "start": "679610",
    "end": "683810"
  },
  {
    "text": "see that a particular VPC can be in",
    "start": "683810",
    "end": "685820"
  },
  {
    "text": "multiple account that describes the",
    "start": "685820",
    "end": "687860"
  },
  {
    "text": "entire topology we have left one bit of",
    "start": "687860",
    "end": "690529"
  },
  {
    "text": "the configuration that's left with VPC",
    "start": "690529",
    "end": "695120"
  },
  {
    "text": "owners because we don't actually know",
    "start": "695120",
    "end": "697310"
  },
  {
    "text": "which route table does what within a VPC",
    "start": "697310",
    "end": "699950"
  },
  {
    "text": "so because public route tables private",
    "start": "699950",
    "end": "702709"
  },
  {
    "text": "route tables they might have route",
    "start": "702709",
    "end": "703700"
  },
  {
    "text": "tables for specific purpose",
    "start": "703700",
    "end": "706100"
  },
  {
    "text": "we tell them basically anything that you",
    "start": "706100",
    "end": "709370"
  },
  {
    "text": "want purely to touch just tag it with",
    "start": "709370",
    "end": "712880"
  },
  {
    "text": "purely eligible equal true and if the",
    "start": "712880",
    "end": "715760"
  },
  {
    "text": "route table is tagged in that way we",
    "start": "715760",
    "end": "717709"
  },
  {
    "text": "will touch it and we will install all",
    "start": "717709",
    "end": "719180"
  },
  {
    "text": "the routes that that you want into it so",
    "start": "719180",
    "end": "721220"
  },
  {
    "text": "we still give some control to the BBC",
    "start": "721220",
    "end": "723680"
  },
  {
    "text": "owners but the topology is defined by",
    "start": "723680",
    "end": "725810"
  },
  {
    "text": "centrally through the tool so how does",
    "start": "725810",
    "end": "730040"
  },
  {
    "text": "the tool actually do its job well it's",
    "start": "730040",
    "end": "732410"
  },
  {
    "text": "conceptually it's quite simple we do",
    "start": "732410",
    "end": "735230"
  },
  {
    "text": "describe we work through all the",
    "start": "735230",
    "end": "736790"
  },
  {
    "text": "accounts we do describe of all the VP's",
    "start": "736790",
    "end": "738680"
  },
  {
    "text": "hearings and all the route tables based",
    "start": "738680",
    "end": "740990"
  },
  {
    "text": "on our list described in our topology we",
    "start": "740990",
    "end": "743930"
  },
  {
    "text": "compute the current set then we compute",
    "start": "743930",
    "end": "746029"
  },
  {
    "text": "the desired state based on the config",
    "start": "746029",
    "end": "747620"
  },
  {
    "text": "file and then we start we get to work",
    "start": "747620",
    "end": "749959"
  },
  {
    "text": "and we add and remove the old earrings",
    "start": "749959",
    "end": "751550"
  },
  {
    "text": "that are required and we retry because",
    "start": "751550",
    "end": "753560"
  },
  {
    "text": "API requests may fail or we might hit a",
    "start": "753560",
    "end": "756620"
  },
  {
    "text": "rate limit or something so we just keep",
    "start": "756620",
    "end": "758540"
  },
  {
    "text": "retrying and same thing with the routes",
    "start": "758540",
    "end": "760730"
  },
  {
    "text": "we add and until the topology is exactly",
    "start": "760730",
    "end": "764209"
  },
  {
    "text": "the one we want so what's the result the",
    "start": "764209",
    "end": "767300"
  },
  {
    "text": "management overhead is gone we can",
    "start": "767300",
    "end": "769339"
  },
  {
    "text": "basically create our topology implement",
    "start": "769339",
    "end": "771829"
  },
  {
    "text": "it without having to go and click and",
    "start": "771829",
    "end": "774290"
  },
  {
    "text": "log into a bazillion different accounts",
    "start": "774290",
    "end": "776120"
  },
  {
    "text": "and region and the route table usage is",
    "start": "776120",
    "end": "778310"
  },
  {
    "text": "minimized through the use of different",
    "start": "778310",
    "end": "780020"
  },
  {
    "text": "environments for the things that",
    "start": "780020",
    "end": "781790"
  },
  {
    "text": "actually need them most one thing that",
    "start": "781790",
    "end": "785660"
  },
  {
    "text": "we do to figure out which are the things",
    "start": "785660",
    "end": "787700"
  },
  {
    "text": "that need those things most is that",
    "start": "787700",
    "end": "789579"
  },
  {
    "text": "which is to flow monitoring on the",
    "start": "789579",
    "end": "792140"
  },
  {
    "text": "direct connect also on Prem on our core",
    "start": "792140",
    "end": "794270"
  },
  {
    "text": "routers we do flow monitoring and we",
    "start": "794270",
    "end": "796370"
  },
  {
    "text": "basically identify anything that happens",
    "start": "796370",
    "end": "798260"
  },
  {
    "text": "on Direct Connect",
    "start": "798260",
    "end": "799320"
  },
  {
    "text": "and we can see who are the large users",
    "start": "799320",
    "end": "801630"
  },
  {
    "text": "of cross BBC traffic and we can then",
    "start": "801630",
    "end": "805020"
  },
  {
    "text": "pick those up and tell people hey you",
    "start": "805020",
    "end": "807210"
  },
  {
    "text": "should join this purely mesh so that",
    "start": "807210",
    "end": "808850"
  },
  {
    "text": "your traffic gets optimized and it's",
    "start": "808850",
    "end": "812520"
  },
  {
    "text": "basically faster so now we've solved we",
    "start": "812520",
    "end": "816540"
  },
  {
    "text": "still have connectivity to everything",
    "start": "816540",
    "end": "817800"
  },
  {
    "text": "and we practically have infinite",
    "start": "817800",
    "end": "819210"
  },
  {
    "text": "bandwidth and no latency so we've built",
    "start": "819210",
    "end": "822090"
  },
  {
    "text": "this tool now that does a lot of",
    "start": "822090",
    "end": "823860"
  },
  {
    "text": "management for our tables and basically",
    "start": "823860",
    "end": "827640"
  },
  {
    "text": "can touch AWS and manage all those",
    "start": "827640",
    "end": "829470"
  },
  {
    "text": "things well what else can we do with it",
    "start": "829470",
    "end": "832580"
  },
  {
    "text": "turns out it's possible to do private",
    "start": "832580",
    "end": "834960"
  },
  {
    "text": "anycast in AWS using a lot of the same",
    "start": "834960",
    "end": "837780"
  },
  {
    "text": "tooling just as a refresher anycast is a",
    "start": "837780",
    "end": "841230"
  },
  {
    "text": "network routing technique where you",
    "start": "841230",
    "end": "843000"
  },
  {
    "text": "advertise the exact same prefix from",
    "start": "843000",
    "end": "845250"
  },
  {
    "text": "multiple locations and you have a health",
    "start": "845250",
    "end": "848520"
  },
  {
    "text": "check mechanism that so that if a",
    "start": "848520",
    "end": "850800"
  },
  {
    "text": "location becomes unhealthy or the",
    "start": "850800",
    "end": "852960"
  },
  {
    "text": "service in one place becomes unhealthy",
    "start": "852960",
    "end": "854490"
  },
  {
    "text": "it signals the routing protocol to",
    "start": "854490",
    "end": "856590"
  },
  {
    "text": "withdraw the routes pointing to it so",
    "start": "856590",
    "end": "858690"
  },
  {
    "text": "that traffic can break away and go to",
    "start": "858690",
    "end": "862230"
  },
  {
    "text": "the alternate next closest location",
    "start": "862230",
    "end": "864290"
  },
  {
    "text": "anycast is used extensively by AWS your",
    "start": "864290",
    "end": "867900"
  },
  {
    "text": "broad 53 public servers they're always",
    "start": "867900",
    "end": "871230"
  },
  {
    "text": "using anycast they're like the same IPS",
    "start": "871230",
    "end": "873930"
  },
  {
    "text": "are advertised from a bunch of different",
    "start": "873930",
    "end": "875520"
  },
  {
    "text": "edge pops by AWS on the private side AWS",
    "start": "875520",
    "end": "881190"
  },
  {
    "text": "also uses anycast the 169 2 5 4",
    "start": "881190",
    "end": "884220"
  },
  {
    "text": "addresses that give you your meta data",
    "start": "884220",
    "end": "885960"
  },
  {
    "text": "and point your dns endpoint your ntp",
    "start": "885960",
    "end": "890070"
  },
  {
    "text": "endpoint that's all private anycast but",
    "start": "890070",
    "end": "892320"
  },
  {
    "text": "you can't do your own AWS offers you",
    "start": "892320",
    "end": "894510"
  },
  {
    "text": "services over any caste but you can't",
    "start": "894510",
    "end": "896430"
  },
  {
    "text": "build your own except that you can it's",
    "start": "896430",
    "end": "900420"
  },
  {
    "text": "very simple you just have to build this",
    "start": "900420",
    "end": "904280"
  },
  {
    "text": "because it's not so simple",
    "start": "904280",
    "end": "906150"
  },
  {
    "text": "I'll break it down the key piece to",
    "start": "906150",
    "end": "909840"
  },
  {
    "text": "making this work is the layout of the",
    "start": "909840",
    "end": "912690"
  },
  {
    "text": "anycast VPC subnet so we actually have",
    "start": "912690",
    "end": "915600"
  },
  {
    "text": "one anycast VPC per se in each region",
    "start": "915600",
    "end": "919170"
  },
  {
    "text": "where we want to make any caste services",
    "start": "919170",
    "end": "921630"
  },
  {
    "text": "available and they all use the exact",
    "start": "921630",
    "end": "923880"
  },
  {
    "text": "same side arranged in our case we've",
    "start": "923880",
    "end": "926160"
  },
  {
    "text": "used 10.50 3.50 10.53 dot 0 dot 0 slash",
    "start": "926160",
    "end": "930360"
  },
  {
    "text": "16 so that we could have our DNS sir",
    "start": "930360",
    "end": "933059"
  },
  {
    "text": "is any casted over 10.50 3.50 3.53 the",
    "start": "933059",
    "end": "939449"
  },
  {
    "text": "trick with that subnet layout is that",
    "start": "939449",
    "end": "941489"
  },
  {
    "text": "the there is we basically we split it",
    "start": "941489",
    "end": "945929"
  },
  {
    "text": "into the front end subnet is actually",
    "start": "945929",
    "end": "948749"
  },
  {
    "text": "the same one everywhere but within the",
    "start": "948749",
    "end": "952079"
  },
  {
    "text": "front end subnet there is part of the",
    "start": "952079",
    "end": "954179"
  },
  {
    "text": "range that we make a convention that is",
    "start": "954179",
    "end": "956399"
  },
  {
    "text": "also the same everywhere that's where we",
    "start": "956399",
    "end": "958139"
  },
  {
    "text": "have our virtual IPS or vapes where we",
    "start": "958139",
    "end": "960509"
  },
  {
    "text": "expose a service but we have a little",
    "start": "960509",
    "end": "962789"
  },
  {
    "text": "chunk or slash 27 where that is globally",
    "start": "962789",
    "end": "966719"
  },
  {
    "text": "unique where that is only used by this",
    "start": "966719",
    "end": "970829"
  },
  {
    "text": "particular instance of the anycast with",
    "start": "970829",
    "end": "972839"
  },
  {
    "text": "PC and it's different in in every",
    "start": "972839",
    "end": "974819"
  },
  {
    "text": "instance of the anycast via PC and we",
    "start": "974819",
    "end": "977009"
  },
  {
    "text": "use that so that we can health check a",
    "start": "977009",
    "end": "978809"
  },
  {
    "text": "particular anycast V PC and know that",
    "start": "978809",
    "end": "981149"
  },
  {
    "text": "we're eating that particular one at the",
    "start": "981149",
    "end": "984029"
  },
  {
    "text": "back end the other half of the subnet",
    "start": "984029",
    "end": "986999"
  },
  {
    "text": "it's mostly unused we just again we pick",
    "start": "986999",
    "end": "989879"
  },
  {
    "text": "one subnet slash 25 there that has just",
    "start": "989879",
    "end": "994889"
  },
  {
    "text": "globally unique IPS and there is no",
    "start": "994889",
    "end": "998009"
  },
  {
    "text": "overlap at the back end so that we can",
    "start": "998009",
    "end": "999449"
  },
  {
    "text": "use that subnet to reach easy to",
    "start": "999449",
    "end": "1001189"
  },
  {
    "text": "instances that are inside the Anika's v",
    "start": "1001189",
    "end": "1002989"
  },
  {
    "text": "pc and have those instances to back to",
    "start": "1002989",
    "end": "1006229"
  },
  {
    "text": "back end services or whatever else they",
    "start": "1006229",
    "end": "1008209"
  },
  {
    "text": "need to talk to so I've got now my",
    "start": "1008209",
    "end": "1013789"
  },
  {
    "text": "anycast V PC I've drawn let's say that",
    "start": "1013789",
    "end": "1015589"
  },
  {
    "text": "I've got to availability zones just",
    "start": "1015589",
    "end": "1017599"
  },
  {
    "text": "because if I had three wouldn't fit on",
    "start": "1017599",
    "end": "1019339"
  },
  {
    "text": "the slide anymore and I've got client V",
    "start": "1019339",
    "end": "1022729"
  },
  {
    "text": "pcs they're also multi se just like",
    "start": "1022729",
    "end": "1024740"
  },
  {
    "text": "everybody else I've got V PC peering",
    "start": "1024740",
    "end": "1026569"
  },
  {
    "text": "going between my client V pcs and my",
    "start": "1026569",
    "end": "1029659"
  },
  {
    "text": "anycast v pcs but I don't have any",
    "start": "1029659",
    "end": "1031759"
  },
  {
    "text": "routes yet so the rods that I'm gonna",
    "start": "1031759",
    "end": "1034339"
  },
  {
    "text": "install with PRD as kind of static",
    "start": "1034339",
    "end": "1037308"
  },
  {
    "text": "routes will target the healthcheck",
    "start": "1037309",
    "end": "1040220"
  },
  {
    "text": "subnet and only those health checks are",
    "start": "1040220",
    "end": "1042409"
  },
  {
    "text": "met so this means that I can have a",
    "start": "1042409",
    "end": "1045499"
  },
  {
    "text": "lambda in my client V PC that I run on",
    "start": "1045499",
    "end": "1047839"
  },
  {
    "text": "schedule and that lambda will health",
    "start": "1047839",
    "end": "1050749"
  },
  {
    "text": "check those health check rips and it",
    "start": "1050749",
    "end": "1052549"
  },
  {
    "text": "will report whether the health check is",
    "start": "1052549",
    "end": "1056090"
  },
  {
    "text": "succeeding or failing back to a dynamodb",
    "start": "1056090",
    "end": "1058610"
  },
  {
    "text": "table so now I've got a DynamoDB table",
    "start": "1058610",
    "end": "1061549"
  },
  {
    "text": "that has records of the last time that",
    "start": "1061549",
    "end": "1064730"
  },
  {
    "text": "my service was healthy in each of",
    "start": "1064730",
    "end": "1066980"
  },
  {
    "text": "easy and then I have another lambda that",
    "start": "1066980",
    "end": "1071120"
  },
  {
    "text": "runs outside of the V PC and all it does",
    "start": "1071120",
    "end": "1074780"
  },
  {
    "text": "is it queries the dynamodb table and it",
    "start": "1074780",
    "end": "1078679"
  },
  {
    "text": "looks whether there was a success",
    "start": "1078679",
    "end": "1082660"
  },
  {
    "text": "reported in the table for a particular",
    "start": "1082660",
    "end": "1085070"
  },
  {
    "text": "AZ and based on that if there was a",
    "start": "1085070",
    "end": "1088429"
  },
  {
    "text": "success it installed the rods that point",
    "start": "1088429",
    "end": "1091370"
  },
  {
    "text": "to D any cowslips",
    "start": "1091370",
    "end": "1093429"
  },
  {
    "text": "it kind of works its Deadman switch so",
    "start": "1093429",
    "end": "1096530"
  },
  {
    "text": "that if there are no success reported in",
    "start": "1096530",
    "end": "1098510"
  },
  {
    "text": "the last 5-10 seconds I then withdraw",
    "start": "1098510",
    "end": "1102890"
  },
  {
    "text": "the routes so that basically if all else",
    "start": "1102890",
    "end": "1105590"
  },
  {
    "text": "fails what happens is that all unique a",
    "start": "1105590",
    "end": "1108020"
  },
  {
    "text": "sweep roads always drawn and that means",
    "start": "1108020",
    "end": "1110510"
  },
  {
    "text": "that my RFC 1918 summary is pointing to",
    "start": "1110510",
    "end": "1114020"
  },
  {
    "text": "Direct Connect takeover and I",
    "start": "1114020",
    "end": "1116419"
  },
  {
    "text": "automatically fed over to an alternate",
    "start": "1116419",
    "end": "1118010"
  },
  {
    "text": "region so if my service in the region is",
    "start": "1118010",
    "end": "1120830"
  },
  {
    "text": "totally dead it just uses Direct Connect",
    "start": "1120830",
    "end": "1123590"
  },
  {
    "text": "go to a different region from inside",
    "start": "1123590",
    "end": "1128600"
  },
  {
    "text": "unique as VB see I've got proxy",
    "start": "1128600",
    "end": "1130040"
  },
  {
    "text": "instances that pick up the traffic on",
    "start": "1130040",
    "end": "1131630"
  },
  {
    "text": "the web stand on the health check and",
    "start": "1131630",
    "end": "1133100"
  },
  {
    "text": "proxy it to the services that I'm",
    "start": "1133100",
    "end": "1135740"
  },
  {
    "text": "actually fronting there again the ec2",
    "start": "1135740",
    "end": "1139070"
  },
  {
    "text": "instance we use a proxy called v TM and",
    "start": "1139070",
    "end": "1141770"
  },
  {
    "text": "it helps checks the backend and it can",
    "start": "1141770",
    "end": "1144200"
  },
  {
    "text": "fell over to the alternate a Z if it",
    "start": "1144200",
    "end": "1146780"
  },
  {
    "text": "needs to and if all fails then it just",
    "start": "1146780",
    "end": "1150049"
  },
  {
    "text": "it stops serving which triggers the",
    "start": "1150049",
    "end": "1151970"
  },
  {
    "text": "lambda which triggers the the fell over",
    "start": "1151970",
    "end": "1154640"
  },
  {
    "text": "to the alternate region so with any cast",
    "start": "1154640",
    "end": "1159020"
  },
  {
    "text": "in AWS we just create an insane amount",
    "start": "1159020",
    "end": "1161510"
  },
  {
    "text": "of redundancy and that means that we can",
    "start": "1161510",
    "end": "1163940"
  },
  {
    "text": "expose services we're basically putting",
    "start": "1163940",
    "end": "1168410"
  },
  {
    "text": "it behind an e lb is not an option so",
    "start": "1168410",
    "end": "1170320"
  },
  {
    "text": "UDP based services such as DNS obviously",
    "start": "1170320",
    "end": "1173510"
  },
  {
    "text": "you can't use DNS to expose DNS things",
    "start": "1173510",
    "end": "1177230"
  },
  {
    "text": "also like syslog endpoints that's the",
    "start": "1177230",
    "end": "1180679"
  },
  {
    "text": "end point where your client may actually",
    "start": "1180679",
    "end": "1183200"
  },
  {
    "text": "only resolve the IP address of the",
    "start": "1183200",
    "end": "1185570"
  },
  {
    "text": "syslog end point or stats the end point",
    "start": "1185570",
    "end": "1187160"
  },
  {
    "text": "at at start and then if you put that",
    "start": "1187160",
    "end": "1190040"
  },
  {
    "text": "behind and ELB ELB changes IP and it",
    "start": "1190040",
    "end": "1193070"
  },
  {
    "text": "doesn't work there are a few things",
    "start": "1193070",
    "end": "1195200"
  },
  {
    "text": "mainly dns but a few other things that",
    "start": "1195200",
    "end": "1197150"
  },
  {
    "text": "can really benefit from using any cask",
    "start": "1197150",
    "end": "1199419"
  },
  {
    "text": "you can also",
    "start": "1199419",
    "end": "1201230"
  },
  {
    "text": "we use this to fan out if you have a",
    "start": "1201230",
    "end": "1203480"
  },
  {
    "text": "service that needs to be presented on a",
    "start": "1203480",
    "end": "1205640"
  },
  {
    "text": "single IP but you want to fan it out to",
    "start": "1205640",
    "end": "1207799"
  },
  {
    "text": "a lot of instances you can't necessarily",
    "start": "1207799",
    "end": "1211790"
  },
  {
    "text": "do that with year we here you can have",
    "start": "1211790",
    "end": "1214100"
  },
  {
    "text": "one Parisi you could even split out your",
    "start": "1214100",
    "end": "1217070"
  },
  {
    "text": "your route tables further if you wanted",
    "start": "1217070",
    "end": "1220160"
  },
  {
    "text": "to and you can have something that looks",
    "start": "1220160",
    "end": "1221750"
  },
  {
    "text": "like one IP and is actually served by as",
    "start": "1221750",
    "end": "1223970"
  },
  {
    "text": "many ec2 instances as you want",
    "start": "1223970",
    "end": "1226720"
  },
  {
    "text": "so we've create a lot of resiliency the",
    "start": "1226720",
    "end": "1230240"
  },
  {
    "text": "health check at the front end the health",
    "start": "1230240",
    "end": "1231890"
  },
  {
    "text": "check at the back ends the fell over to",
    "start": "1231890",
    "end": "1233419"
  },
  {
    "text": "the alternate region and normally we",
    "start": "1233419",
    "end": "1238070"
  },
  {
    "text": "have preference that you stay within the",
    "start": "1238070",
    "end": "1240320"
  },
  {
    "text": "same AZ the client VPC will target the",
    "start": "1240320",
    "end": "1243200"
  },
  {
    "text": "any Cal type in the same as E which will",
    "start": "1243200",
    "end": "1244730"
  },
  {
    "text": "target the backend instance in the same",
    "start": "1244730",
    "end": "1246770"
  },
  {
    "text": "as E so even though across to V PC",
    "start": "1246770",
    "end": "1248360"
  },
  {
    "text": "peering we stay in the same as e so",
    "start": "1248360",
    "end": "1249980"
  },
  {
    "text": "we're still talking about less than one",
    "start": "1249980",
    "end": "1253160"
  },
  {
    "text": "millisecond to typically ever request",
    "start": "1253160",
    "end": "1255110"
  },
  {
    "text": "goes through all right so we've talked",
    "start": "1255110",
    "end": "1260570"
  },
  {
    "text": "about keeping latency low having",
    "start": "1260570",
    "end": "1262460"
  },
  {
    "text": "infinite bandwidth what we haven't",
    "start": "1262460",
    "end": "1265970"
  },
  {
    "text": "talked about yet is getting free stuff",
    "start": "1265970",
    "end": "1271690"
  },
  {
    "text": "we need to get some free stuff",
    "start": "1271690",
    "end": "1273470"
  },
  {
    "text": "especially from Amazon doesn't really",
    "start": "1273470",
    "end": "1275929"
  },
  {
    "text": "know as far as Network transit cost what",
    "start": "1275929",
    "end": "1279230"
  },
  {
    "text": "what natural transit costs do you get",
    "start": "1279230",
    "end": "1281510"
  },
  {
    "text": "for free in AWS I'm sure somebody need",
    "start": "1281510",
    "end": "1285919"
  },
  {
    "text": "it this is not as intimate as I hoped to",
    "start": "1285919",
    "end": "1288070"
  },
  {
    "text": "to get some response from the audience",
    "start": "1288070",
    "end": "1290630"
  },
  {
    "text": "so you may know that when you send data",
    "start": "1290630",
    "end": "1294290"
  },
  {
    "text": "into AWS it's always free it's when you",
    "start": "1294290",
    "end": "1297620"
  },
  {
    "text": "pull data out that they typically charge",
    "start": "1297620",
    "end": "1299510"
  },
  {
    "text": "you but to send data into AWS via direct",
    "start": "1299510",
    "end": "1302660"
  },
  {
    "text": "connect or internet it's always free so",
    "start": "1302660",
    "end": "1305240"
  },
  {
    "text": "we're going to try to play a little bit",
    "start": "1305240",
    "end": "1306980"
  },
  {
    "text": "of a trick on this to use Direct Connect",
    "start": "1306980",
    "end": "1310580"
  },
  {
    "text": "gateway to take advantage of that and",
    "start": "1310580",
    "end": "1312890"
  },
  {
    "text": "get some free stuff so another Quick",
    "start": "1312890",
    "end": "1317900"
  },
  {
    "text": "Poll maybe a show of hands might get a",
    "start": "1317900",
    "end": "1319490"
  },
  {
    "text": "little bit more who has Direct Connect",
    "start": "1319490",
    "end": "1321860"
  },
  {
    "text": "here in Australia yeah I would say about",
    "start": "1321860",
    "end": "1326030"
  },
  {
    "text": "half the people who has a direct connect",
    "start": "1326030",
    "end": "1327980"
  },
  {
    "text": "also outside of Australia not too many I",
    "start": "1327980",
    "end": "1332510"
  },
  {
    "text": "was kind of expecting that",
    "start": "1332510",
    "end": "1334700"
  },
  {
    "text": "we were lucky that we do who has private",
    "start": "1334700",
    "end": "1338090"
  },
  {
    "text": "circuits going between different sides",
    "start": "1338090",
    "end": "1340340"
  },
  {
    "text": "that you manage with in Australia or",
    "start": "1340340",
    "end": "1342860"
  },
  {
    "text": "outside yeah",
    "start": "1342860",
    "end": "1344980"
  },
  {
    "text": "so based on that you may be interested",
    "start": "1344980",
    "end": "1348860"
  },
  {
    "text": "to use alright to know that direct",
    "start": "1348860",
    "end": "1350600"
  },
  {
    "text": "cannot get where it can be used to get",
    "start": "1350600",
    "end": "1353090"
  },
  {
    "text": "sound some free stuff so the right can I",
    "start": "1353090",
    "end": "1355070"
  },
  {
    "text": "get where is the service where you can",
    "start": "1355070",
    "end": "1356660"
  },
  {
    "text": "now have a Direct Connect connect from",
    "start": "1356660",
    "end": "1359360"
  },
  {
    "text": "where it physically is to a V PC in any",
    "start": "1359360",
    "end": "1362480"
  },
  {
    "text": "region so that means we can build a",
    "start": "1362480",
    "end": "1364520"
  },
  {
    "text": "topology like this where I've got a",
    "start": "1364520",
    "end": "1366590"
  },
  {
    "text": "Direct Connect pop in u.s. West two and",
    "start": "1366590",
    "end": "1369980"
  },
  {
    "text": "one in AP sauce is 2 and V pcs on either",
    "start": "1369980",
    "end": "1372830"
  },
  {
    "text": "side and my direct connects are actually",
    "start": "1372830",
    "end": "1374720"
  },
  {
    "text": "cross connected to both in the V pcs I",
    "start": "1374720",
    "end": "1378140"
  },
  {
    "text": "run a regular ec2 instance I just make",
    "start": "1378140",
    "end": "1381020"
  },
  {
    "text": "sure that it's an ene enabled once",
    "start": "1381020",
    "end": "1382610"
  },
  {
    "text": "because they've got better network",
    "start": "1382610",
    "end": "1384740"
  },
  {
    "text": "characteristics and I can run software",
    "start": "1384740",
    "end": "1388730"
  },
  {
    "text": "bgp router on there such as bird so once",
    "start": "1388730",
    "end": "1392720"
  },
  {
    "text": "I've got that what do i do i build some",
    "start": "1392720",
    "end": "1394850"
  },
  {
    "text": "GRE tunnels between my untrim routers",
    "start": "1394850",
    "end": "1398059"
  },
  {
    "text": "and bird instances on each side so I've",
    "start": "1398059",
    "end": "1403760"
  },
  {
    "text": "got tunnels",
    "start": "1403760",
    "end": "1404780"
  },
  {
    "text": "I can run BGP on top and now I just do a",
    "start": "1404780",
    "end": "1407240"
  },
  {
    "text": "little bit of BGP traffic engineering so",
    "start": "1407240",
    "end": "1409460"
  },
  {
    "text": "that because I've got two paths to go",
    "start": "1409460",
    "end": "1412040"
  },
  {
    "text": "between my corridor in Sydney and my",
    "start": "1412040",
    "end": "1414380"
  },
  {
    "text": "core router in Oregon so the path that",
    "start": "1414380",
    "end": "1416990"
  },
  {
    "text": "I'm gonna select is the one that always",
    "start": "1416990",
    "end": "1418640"
  },
  {
    "text": "goes into AWS as much as possible so to",
    "start": "1418640",
    "end": "1421820"
  },
  {
    "text": "cross the Pacific Ocean I go straight to",
    "start": "1421820",
    "end": "1424010"
  },
  {
    "text": "us West to using Direct Connect gateway",
    "start": "1424010",
    "end": "1426110"
  },
  {
    "text": "and that's free I get all of us was to",
    "start": "1426110",
    "end": "1428960"
  },
  {
    "text": "to my core router in Oregon and that's I",
    "start": "1428960",
    "end": "1432320"
  },
  {
    "text": "mean I pay for that but that's local",
    "start": "1432320",
    "end": "1434179"
  },
  {
    "text": "Direct Connect cost and for the return",
    "start": "1434179",
    "end": "1436250"
  },
  {
    "text": "traffic again I go up to my instance in",
    "start": "1436250",
    "end": "1438980"
  },
  {
    "text": "episodes two and go back down at the",
    "start": "1438980",
    "end": "1441950"
  },
  {
    "text": "local cost what that means is that I've",
    "start": "1441950",
    "end": "1445340"
  },
  {
    "text": "got a biter",
    "start": "1445340",
    "end": "1445880"
  },
  {
    "text": "bi-directional BGP link between the two",
    "start": "1445880",
    "end": "1448490"
  },
  {
    "text": "continents and I never pay anything when",
    "start": "1448490",
    "end": "1450620"
  },
  {
    "text": "crossing the Pacific Ocean which if you",
    "start": "1450620",
    "end": "1452809"
  },
  {
    "text": "talk to any circuit provider they're not",
    "start": "1452809",
    "end": "1455840"
  },
  {
    "text": "going to agree to give you that so I",
    "start": "1455840",
    "end": "1459470"
  },
  {
    "text": "mean I'm saying it's free it's not",
    "start": "1459470",
    "end": "1461870"
  },
  {
    "text": "totally free what does it mean if I run",
    "start": "1461870",
    "end": "1465620"
  },
  {
    "text": "one of those in in reality we've been",
    "start": "1465620",
    "end": "1467540"
  },
  {
    "text": "running this in four",
    "start": "1467540",
    "end": "1468210"
  },
  {
    "text": "reduction for now for a few months and",
    "start": "1468210",
    "end": "1470280"
  },
  {
    "text": "obviously we run two of those but if you",
    "start": "1470280",
    "end": "1472710"
  },
  {
    "text": "run a single one of those you need one",
    "start": "1472710",
    "end": "1474780"
  },
  {
    "text": "instance on each side that's about 200",
    "start": "1474780",
    "end": "1476400"
  },
  {
    "text": "bucks a month and your per gig cost for",
    "start": "1476400",
    "end": "1479580"
  },
  {
    "text": "the traffic is two cents when you go",
    "start": "1479580",
    "end": "1481350"
  },
  {
    "text": "from Sydney to Oregon and four cents",
    "start": "1481350",
    "end": "1483420"
  },
  {
    "text": "when you go from Oregon to Sydney just a",
    "start": "1483420",
    "end": "1485280"
  },
  {
    "text": "local Direct Connect cost how much",
    "start": "1485280",
    "end": "1487380"
  },
  {
    "text": "traffic can you push through one of",
    "start": "1487380",
    "end": "1488580"
  },
  {
    "text": "those about a gig and a half is what I",
    "start": "1488580",
    "end": "1491160"
  },
  {
    "text": "could get with with an i perv on either",
    "start": "1491160",
    "end": "1493710"
  },
  {
    "text": "direction the thing is you can scale",
    "start": "1493710",
    "end": "1496110"
  },
  {
    "text": "that horizontal e right there is nothing",
    "start": "1496110",
    "end": "1498240"
  },
  {
    "text": "preventing you from doing more GRE",
    "start": "1498240",
    "end": "1499710"
  },
  {
    "text": "tunnels",
    "start": "1499710",
    "end": "1500160"
  },
  {
    "text": "you're just capped by your keep your",
    "start": "1500160",
    "end": "1502230"
  },
  {
    "text": "capacity on Direct Connect and yeah and",
    "start": "1502230",
    "end": "1506430"
  },
  {
    "text": "your core routers and their ability to",
    "start": "1506430",
    "end": "1508410"
  },
  {
    "text": "do GRE I'm assuming that the direct",
    "start": "1508410",
    "end": "1511290"
  },
  {
    "text": "connects are some cost and that the",
    "start": "1511290",
    "end": "1513240"
  },
  {
    "text": "control plane overheads are pretty",
    "start": "1513240",
    "end": "1515130"
  },
  {
    "text": "negligible which in practice they are so",
    "start": "1515130",
    "end": "1518850"
  },
  {
    "text": "yeah that has worked for us the good",
    "start": "1518850",
    "end": "1520740"
  },
  {
    "text": "thing is you can really get generic",
    "start": "1520740",
    "end": "1522900"
  },
  {
    "text": "connectivity so our office in Sydney of",
    "start": "1522900",
    "end": "1525000"
  },
  {
    "text": "our few offices in Sydney are all",
    "start": "1525000",
    "end": "1527850"
  },
  {
    "text": "connected to or our cores that are in a",
    "start": "1527850",
    "end": "1531570"
  },
  {
    "text": "city dead center that is connected via",
    "start": "1531570",
    "end": "1533760"
  },
  {
    "text": "AWS Direct Connect so for the past few",
    "start": "1533760",
    "end": "1536070"
  },
  {
    "text": "months everybody that connects to any",
    "start": "1536070",
    "end": "1537750"
  },
  {
    "text": "vbc in the US from the office in Sydney",
    "start": "1537750",
    "end": "1539730"
  },
  {
    "text": "is going through that we've had a bunch",
    "start": "1539730",
    "end": "1542670"
  },
  {
    "text": "of clubs and things but because I've got",
    "start": "1542670",
    "end": "1544590"
  },
  {
    "text": "BGP and I can reconverge nobody has ever",
    "start": "1544590",
    "end": "1548070"
  },
  {
    "text": "complained about any outage it's been",
    "start": "1548070",
    "end": "1550830"
  },
  {
    "text": "working quite well so what was the",
    "start": "1550830",
    "end": "1556890"
  },
  {
    "text": "result when we run this cross region is",
    "start": "1556890",
    "end": "1558960"
  },
  {
    "text": "free we finally got free stuff to",
    "start": "1558960",
    "end": "1560910"
  },
  {
    "text": "connect the connectivity is completely",
    "start": "1560910",
    "end": "1562740"
  },
  {
    "text": "generic right we're talking about doing",
    "start": "1562740",
    "end": "1564450"
  },
  {
    "text": "bgp between on-prem and on-prem i don't",
    "start": "1564450",
    "end": "1567510"
  },
  {
    "text": "have to worry about fraud table-size in",
    "start": "1567510",
    "end": "1569400"
  },
  {
    "text": "any way shape or form and my scaling is",
    "start": "1569400",
    "end": "1572370"
  },
  {
    "text": "not too limited turns out if you take",
    "start": "1572370",
    "end": "1577230"
  },
  {
    "text": "direct connect gateway ena which is the",
    "start": "1577230",
    "end": "1580290"
  },
  {
    "text": "in an ends network adapter so the good",
    "start": "1580290",
    "end": "1583170"
  },
  {
    "text": "networking for you see to instance which",
    "start": "1583170",
    "end": "1584640"
  },
  {
    "text": "you get on c5 and r4 and a few other you",
    "start": "1584640",
    "end": "1587670"
  },
  {
    "text": "add GRE and BGP and you mix it up you",
    "start": "1587670",
    "end": "1589890"
  },
  {
    "text": "get your triple G bandwidth expander so",
    "start": "1589890",
    "end": "1592050"
  },
  {
    "text": "that's that's why that's what it's",
    "start": "1592050",
    "end": "1594090"
  },
  {
    "text": "called",
    "start": "1594090",
    "end": "1594440"
  },
  {
    "text": "so we finally got free stuff all right",
    "start": "1594440",
    "end": "1598530"
  },
  {
    "text": "so what did we talk about today",
    "start": "1598530",
    "end": "1601500"
  },
  {
    "text": "okay we can use PRD to solve the",
    "start": "1601500",
    "end": "1604740"
  },
  {
    "text": "management and scaling issues that we",
    "start": "1604740",
    "end": "1606299"
  },
  {
    "text": "have for VPC peering we really got to",
    "start": "1606299",
    "end": "1609059"
  },
  {
    "text": "get to open sourcing this it when it is",
    "start": "1609059",
    "end": "1611700"
  },
  {
    "text": "it's gonna be on bitbucket the rock",
    "start": "1611700",
    "end": "1613379"
  },
  {
    "text": "slash Atlassian and we're gonna put the",
    "start": "1613379",
    "end": "1614820"
  },
  {
    "text": "code there we need to do a little bit of",
    "start": "1614820",
    "end": "1616710"
  },
  {
    "text": "cleanup and it's been on our backlog for",
    "start": "1616710",
    "end": "1618539"
  },
  {
    "text": "a while but we'll definitely get to it",
    "start": "1618539",
    "end": "1620090"
  },
  {
    "text": "if you add some extra lambda health",
    "start": "1620090",
    "end": "1624210"
  },
  {
    "text": "checks and proxies and DynamoDB you can",
    "start": "1624210",
    "end": "1626279"
  },
  {
    "text": "actually simulate private in cast inside",
    "start": "1626279",
    "end": "1628200"
  },
  {
    "text": "of AWS and then on the side if you want",
    "start": "1628200",
    "end": "1632399"
  },
  {
    "text": "to connect and use AWS and get a bit of",
    "start": "1632399",
    "end": "1636029"
  },
  {
    "text": "a free stuff to get your global network",
    "start": "1636029",
    "end": "1639419"
  },
  {
    "text": "going you can do that between your",
    "start": "1639419",
    "end": "1641100"
  },
  {
    "text": "direct connected pop using the g3",
    "start": "1641100",
    "end": "1645509"
  },
  {
    "text": "bandwidth expander thank you very much",
    "start": "1645509",
    "end": "1647789"
  },
  {
    "text": "I'm happy I thought there was gonna be a",
    "start": "1647789",
    "end": "1650549"
  },
  {
    "text": "smaller room and that we're gonna be",
    "start": "1650549",
    "end": "1652320"
  },
  {
    "text": "able to have more of a conversation but",
    "start": "1652320",
    "end": "1654659"
  },
  {
    "text": "I'm more than happy to take questions",
    "start": "1654659",
    "end": "1655950"
  },
  {
    "text": "here at the front if you have any thank",
    "start": "1655950",
    "end": "1659730"
  },
  {
    "text": "you",
    "start": "1659730",
    "end": "1661850"
  }
]