[
  {
    "text": "hi welcome back in part three of this",
    "start": "160",
    "end": "2399"
  },
  {
    "text": "series we will focus on the architecture",
    "start": "2399",
    "end": "4400"
  },
  {
    "text": "and configuration",
    "start": "4400",
    "end": "5759"
  },
  {
    "text": "of the application you launched in the",
    "start": "5759",
    "end": "7440"
  },
  {
    "text": "first video and customized in the second",
    "start": "7440",
    "end": "10080"
  },
  {
    "text": "so the assumptions then are that you",
    "start": "10080",
    "end": "11759"
  },
  {
    "text": "launched the application in video one",
    "start": "11759",
    "end": "13840"
  },
  {
    "text": "that you customized it in video 2 and",
    "start": "13840",
    "end": "16000"
  },
  {
    "text": "that you also accessed the application",
    "start": "16000",
    "end": "18240"
  },
  {
    "text": "source",
    "start": "18240",
    "end": "18880"
  },
  {
    "text": "in github as described in that second",
    "start": "18880",
    "end": "21199"
  },
  {
    "text": "video",
    "start": "21199",
    "end": "22000"
  },
  {
    "text": "as a reminder though you can find the",
    "start": "22000",
    "end": "23840"
  },
  {
    "text": "application source",
    "start": "23840",
    "end": "25119"
  },
  {
    "text": "at aws labs on github at this point",
    "start": "25119",
    "end": "28160"
  },
  {
    "text": "we've seen our application as it exists",
    "start": "28160",
    "end": "30400"
  },
  {
    "text": "in the management console",
    "start": "30400",
    "end": "31760"
  },
  {
    "text": "we've also opened the app up and used it",
    "start": "31760",
    "end": "34239"
  },
  {
    "text": "and saw that it stores information about",
    "start": "34239",
    "end": "36160"
  },
  {
    "text": "customers",
    "start": "36160",
    "end": "36800"
  },
  {
    "text": "who want to know when our product",
    "start": "36800",
    "end": "38160"
  },
  {
    "text": "launches that data goes in dynamodb",
    "start": "38160",
    "end": "41040"
  },
  {
    "text": "and the application also uses the simple",
    "start": "41040",
    "end": "43120"
  },
  {
    "text": "notification service",
    "start": "43120",
    "end": "44399"
  },
  {
    "text": "to send you an email when a new customer",
    "start": "44399",
    "end": "46160"
  },
  {
    "text": "signs up now let's address the",
    "start": "46160",
    "end": "48079"
  },
  {
    "text": "cliffhanger we left you with at the end",
    "start": "48079",
    "end": "49920"
  },
  {
    "text": "of the second video",
    "start": "49920",
    "end": "51120"
  },
  {
    "text": "where did the dynamodb table and the sns",
    "start": "51120",
    "end": "53600"
  },
  {
    "text": "topic come from",
    "start": "53600",
    "end": "54640"
  },
  {
    "text": "and how did your application",
    "start": "54640",
    "end": "55920"
  },
  {
    "text": "configuration learn about them",
    "start": "55920",
    "end": "58320"
  },
  {
    "text": "let's talk about where the table and",
    "start": "58320",
    "end": "59760"
  },
  {
    "text": "topic come from first",
    "start": "59760",
    "end": "61520"
  },
  {
    "text": "so if you do nothing else an elastic",
    "start": "61520",
    "end": "63840"
  },
  {
    "text": "beanstalk environment looks like this",
    "start": "63840",
    "end": "66240"
  },
  {
    "text": "it's automatically load balanced and the",
    "start": "66240",
    "end": "68400"
  },
  {
    "text": "server capacity automatically scales",
    "start": "68400",
    "end": "71040"
  },
  {
    "text": "it can also store log files for you in",
    "start": "71040",
    "end": "73040"
  },
  {
    "text": "s3 and provides a monitoring and metrics",
    "start": "73040",
    "end": "76000"
  },
  {
    "text": "dashboard",
    "start": "76000",
    "end": "76960"
  },
  {
    "text": "your beanstalk environment doesn't",
    "start": "76960",
    "end": "78720"
  },
  {
    "text": "automatically come with a dynamodb table",
    "start": "78720",
    "end": "81280"
  },
  {
    "text": "or an sns topic we'll call this a",
    "start": "81280",
    "end": "83520"
  },
  {
    "text": "resource customization",
    "start": "83520",
    "end": "85200"
  },
  {
    "text": "you can easily customize resources in",
    "start": "85200",
    "end": "87600"
  },
  {
    "text": "elastic beanstalk",
    "start": "87600",
    "end": "88880"
  },
  {
    "text": "with configuration files a configuration",
    "start": "88880",
    "end": "91200"
  },
  {
    "text": "file is",
    "start": "91200",
    "end": "92479"
  },
  {
    "text": "a file with a dot config extension am i",
    "start": "92479",
    "end": "95759"
  },
  {
    "text": "blowing your mind here yet",
    "start": "95759",
    "end": "97360"
  },
  {
    "text": "it is yaml formatted it declares other",
    "start": "97360",
    "end": "99759"
  },
  {
    "text": "aws resources",
    "start": "99759",
    "end": "101360"
  },
  {
    "text": "you want created along with your",
    "start": "101360",
    "end": "102960"
  },
  {
    "text": "application and you save the",
    "start": "102960",
    "end": "104880"
  },
  {
    "text": "configuration file in a folder",
    "start": "104880",
    "end": "107200"
  },
  {
    "text": "named eb extensions at the top level",
    "start": "107200",
    "end": "110320"
  },
  {
    "text": "of your application let's look at the",
    "start": "110320",
    "end": "113280"
  },
  {
    "text": "configuration",
    "start": "113280",
    "end": "114079"
  },
  {
    "text": "file for our sample application here see",
    "start": "114079",
    "end": "116960"
  },
  {
    "text": "here's my eb",
    "start": "116960",
    "end": "117920"
  },
  {
    "text": "extensions folder it's at the top level",
    "start": "117920",
    "end": "119840"
  },
  {
    "text": "of my app i have one dot config file",
    "start": "119840",
    "end": "122719"
  },
  {
    "text": "setup.config you can have multiple",
    "start": "122719",
    "end": "124960"
  },
  {
    "text": "config files that do different things",
    "start": "124960",
    "end": "126960"
  },
  {
    "text": "they're processed in alphabetical order",
    "start": "126960",
    "end": "128879"
  },
  {
    "text": "based on file name",
    "start": "128879",
    "end": "130479"
  },
  {
    "text": "the resources key is where we go to",
    "start": "130479",
    "end": "132239"
  },
  {
    "text": "define resources our first resource is",
    "start": "132239",
    "end": "134480"
  },
  {
    "text": "called startup signups table",
    "start": "134480",
    "end": "136319"
  },
  {
    "text": "and we see its type is a dynamodb table",
    "start": "136319",
    "end": "138879"
  },
  {
    "text": "the properties then tell",
    "start": "138879",
    "end": "140160"
  },
  {
    "text": "dynamodb how the table should be created",
    "start": "140160",
    "end": "142720"
  },
  {
    "text": "we've just provisioned one unit of read",
    "start": "142720",
    "end": "144560"
  },
  {
    "text": "and write capacity for this table",
    "start": "144560",
    "end": "146400"
  },
  {
    "text": "we would of course increase these values",
    "start": "146400",
    "end": "148239"
  },
  {
    "text": "to accommodate more load",
    "start": "148239",
    "end": "149920"
  },
  {
    "text": "before deploying to production and we",
    "start": "149920",
    "end": "151920"
  },
  {
    "text": "can make these changes just like we make",
    "start": "151920",
    "end": "153599"
  },
  {
    "text": "code changes",
    "start": "153599",
    "end": "154400"
  },
  {
    "text": "update the value in the file and upload",
    "start": "154400",
    "end": "156720"
  },
  {
    "text": "the changed application to elastic",
    "start": "156720",
    "end": "158480"
  },
  {
    "text": "beanstalk",
    "start": "158480",
    "end": "159360"
  },
  {
    "text": "beanstalk will take care of modifying",
    "start": "159360",
    "end": "161120"
  },
  {
    "text": "the properties of the table",
    "start": "161120",
    "end": "162560"
  },
  {
    "text": "if it already exists so it makes it",
    "start": "162560",
    "end": "164400"
  },
  {
    "text": "really simple to scale our dynamodb",
    "start": "164400",
    "end": "166800"
  },
  {
    "text": "table performance out or in",
    "start": "166800",
    "end": "168720"
  },
  {
    "text": "as needed we create the s s topic",
    "start": "168720",
    "end": "171519"
  },
  {
    "text": "similarly",
    "start": "171519",
    "end": "172319"
  },
  {
    "text": "and use its properties to subscribe an",
    "start": "172319",
    "end": "174640"
  },
  {
    "text": "administrator's email address",
    "start": "174640",
    "end": "176239"
  },
  {
    "text": "to be notified when a message is",
    "start": "176239",
    "end": "177840"
  },
  {
    "text": "published",
    "start": "177840",
    "end": "179599"
  },
  {
    "text": "okay so it's great that we can use the",
    "start": "179599",
    "end": "181280"
  },
  {
    "text": "resources block and tell elastic bean",
    "start": "181280",
    "end": "183280"
  },
  {
    "text": "stock the things it should create",
    "start": "183280",
    "end": "185120"
  },
  {
    "text": "for our application now we need to tell",
    "start": "185120",
    "end": "187519"
  },
  {
    "text": "our application",
    "start": "187519",
    "end": "188800"
  },
  {
    "text": "where those things are via its",
    "start": "188800",
    "end": "190640"
  },
  {
    "text": "configuration",
    "start": "190640",
    "end": "192000"
  },
  {
    "text": "the flask framework makes it easy to",
    "start": "192000",
    "end": "194000"
  },
  {
    "text": "load configuration values from various",
    "start": "194000",
    "end": "196000"
  },
  {
    "text": "places",
    "start": "196000",
    "end": "196800"
  },
  {
    "text": "in our case we'd like to create a file",
    "start": "196800",
    "end": "198800"
  },
  {
    "text": "that has our app config",
    "start": "198800",
    "end": "200720"
  },
  {
    "text": "in key equals value format in addition",
    "start": "200720",
    "end": "203599"
  },
  {
    "text": "to creating resources",
    "start": "203599",
    "end": "205280"
  },
  {
    "text": "our elastic beanstalk.config files let",
    "start": "205280",
    "end": "207760"
  },
  {
    "text": "us customize things on our servers",
    "start": "207760",
    "end": "210000"
  },
  {
    "text": "including creating files in this files",
    "start": "210000",
    "end": "212560"
  },
  {
    "text": "block we tell",
    "start": "212560",
    "end": "213360"
  },
  {
    "text": "eb to create a file at var app",
    "start": "213360",
    "end": "216480"
  },
  {
    "text": "app.config we tell it the file",
    "start": "216480",
    "end": "218720"
  },
  {
    "text": "permissions and we specify the contents",
    "start": "218720",
    "end": "220720"
  },
  {
    "text": "of the file",
    "start": "220720",
    "end": "221920"
  },
  {
    "text": "in this example the first line of var",
    "start": "221920",
    "end": "224159"
  },
  {
    "text": "app app.config",
    "start": "224159",
    "end": "225519"
  },
  {
    "text": "will be aws underscore region equals",
    "start": "225519",
    "end": "228799"
  },
  {
    "text": "and the ref syntax dynamically injects",
    "start": "228799",
    "end": "231120"
  },
  {
    "text": "the current region we're running in",
    "start": "231120",
    "end": "232720"
  },
  {
    "text": "for example us-west-one",
    "start": "232720",
    "end": "235760"
  },
  {
    "text": "the second line has the value startup",
    "start": "235760",
    "end": "237680"
  },
  {
    "text": "underscore sign-up underscore table and",
    "start": "237680",
    "end": "239920"
  },
  {
    "text": "the ref value injects the name of the",
    "start": "239920",
    "end": "241920"
  },
  {
    "text": "dynamodb table",
    "start": "241920",
    "end": "243360"
  },
  {
    "text": "created above in the resources section",
    "start": "243360",
    "end": "246000"
  },
  {
    "text": "the order here doesn't matter",
    "start": "246000",
    "end": "247760"
  },
  {
    "text": "the files block could come before",
    "start": "247760",
    "end": "249360"
  },
  {
    "text": "resources elastic beanstalk is smart",
    "start": "249360",
    "end": "251920"
  },
  {
    "text": "enough to infer dependencies",
    "start": "251920",
    "end": "253760"
  },
  {
    "text": "and will do things in the correct order",
    "start": "253760",
    "end": "255519"
  },
  {
    "text": "for you automatically",
    "start": "255519",
    "end": "257840"
  },
  {
    "text": "finally we can use the setup.config file",
    "start": "257840",
    "end": "260880"
  },
  {
    "text": "to inject environment variables into our",
    "start": "260880",
    "end": "263440"
  },
  {
    "text": "eb",
    "start": "263440",
    "end": "263919"
  },
  {
    "text": "servers flask allows you to indicate the",
    "start": "263919",
    "end": "266639"
  },
  {
    "text": "application config file",
    "start": "266639",
    "end": "268000"
  },
  {
    "text": "to load based on an environment variable",
    "start": "268000",
    "end": "270560"
  },
  {
    "text": "so we set the app",
    "start": "270560",
    "end": "271840"
  },
  {
    "text": "underscore config environment var to",
    "start": "271840",
    "end": "275120"
  },
  {
    "text": "equal slash var app.config",
    "start": "275120",
    "end": "278880"
  },
  {
    "text": "flask also supports debugging which is",
    "start": "278880",
    "end": "281120"
  },
  {
    "text": "something you definitely",
    "start": "281120",
    "end": "282160"
  },
  {
    "text": "do not want turned on in production we",
    "start": "282160",
    "end": "284560"
  },
  {
    "text": "expose flask debugging",
    "start": "284560",
    "end": "286320"
  },
  {
    "text": "as an environment variable and tell our",
    "start": "286320",
    "end": "288759"
  },
  {
    "text": "application.pi",
    "start": "288759",
    "end": "290160"
  },
  {
    "text": "to enable debug mode based on that",
    "start": "290160",
    "end": "292400"
  },
  {
    "text": "variable",
    "start": "292400",
    "end": "293199"
  },
  {
    "text": "this lets us turn debugging on and off",
    "start": "293199",
    "end": "295520"
  },
  {
    "text": "from the elastic bean stock management",
    "start": "295520",
    "end": "297199"
  },
  {
    "text": "console very cool",
    "start": "297199",
    "end": "300000"
  },
  {
    "text": "it's easy to get your app up and running",
    "start": "300000",
    "end": "301759"
  },
  {
    "text": "with elastic beanstalk but you're still",
    "start": "301759",
    "end": "303360"
  },
  {
    "text": "able to customize your application and",
    "start": "303360",
    "end": "305280"
  },
  {
    "text": "environment as needed",
    "start": "305280",
    "end": "306479"
  },
  {
    "text": "the cool thing about this is that your",
    "start": "306479",
    "end": "308080"
  },
  {
    "text": "customizations are automated and because",
    "start": "308080",
    "end": "310080"
  },
  {
    "text": "you make them in these yaml",
    "start": "310080",
    "end": "311800"
  },
  {
    "text": "formatted.config files",
    "start": "311800",
    "end": "313360"
  },
  {
    "text": "they're version controlled alongside",
    "start": "313360",
    "end": "314880"
  },
  {
    "text": "your application for more information on",
    "start": "314880",
    "end": "317520"
  },
  {
    "text": "customizing your app with config files",
    "start": "317520",
    "end": "319759"
  },
  {
    "text": "head over to the elastic beanstalk",
    "start": "319759",
    "end": "321360"
  },
  {
    "text": "documentation where you'll find detailed",
    "start": "321360",
    "end": "323680"
  },
  {
    "text": "docs",
    "start": "323680",
    "end": "324240"
  },
  {
    "text": "specific to all of the languages and",
    "start": "324240",
    "end": "325919"
  },
  {
    "text": "platforms elastic bean stock supports",
    "start": "325919",
    "end": "328320"
  },
  {
    "text": "including java.net ruby php node.js and",
    "start": "328320",
    "end": "332320"
  },
  {
    "text": "python",
    "start": "332320",
    "end": "332960"
  },
  {
    "text": "and finally thanks for watching stay",
    "start": "332960",
    "end": "334800"
  },
  {
    "text": "tuned to the aws channel here on youtube",
    "start": "334800",
    "end": "336960"
  },
  {
    "text": "and visit the aws application management",
    "start": "336960",
    "end": "339199"
  },
  {
    "text": "blog for developer focused blog posts",
    "start": "339199",
    "end": "341520"
  },
  {
    "text": "about elastic beanstalk",
    "start": "341520",
    "end": "344638"
  }
]