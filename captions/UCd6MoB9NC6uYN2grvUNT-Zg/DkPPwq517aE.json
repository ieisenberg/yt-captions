[
  {
    "text": "Hello, welcome to another episode\nof 'This is My Architecture'.",
    "start": "6992",
    "end": "10488"
  },
  {
    "text": "I'm José, \nand I'm with Jesús,\nfrom Enimbos, \nhow are you, Jesús?",
    "start": "10624",
    "end": "13656"
  },
  {
    "text": "-Hi José, delighted to \nbe here with you.\n-Well, what do you do at Enimbos?",
    "start": "13720",
    "end": "17616"
  },
  {
    "text": "At Enimbos we are a company",
    "start": "17752",
    "end": "20592"
  },
  {
    "text": "founded in 2016, and we help\nclients use cloud services.",
    "start": "20616",
    "end": "24264"
  },
  {
    "text": "We offer migration services, with 24/7 support,",
    "start": "24384",
    "end": "27648"
  },
  {
    "text": "Finox and Government services.",
    "start": "27768",
    "end": "29824"
  },
  {
    "text": "And since October 2020,\nwe have been part of Accenture.",
    "start": "30048",
    "end": "34232"
  },
  {
    "text": "Very well, and what kind of architecture\nare you describing for us today?",
    "start": "34568",
    "end": "38160"
  },
  {
    "text": "Well, it is the architecture of an application\nthat we have developed internally.",
    "start": "38288",
    "end": "42592"
  },
  {
    "text": "And well, the application\nallows us to automate tasks",
    "start": "42760",
    "end": "48480"
  },
  {
    "text": "that are normally routine\nin the cloud world,",
    "start": "48544",
    "end": "50871"
  },
  {
    "text": "and do it in a super simple way,\nboth for our own devs,",
    "start": "50920",
    "end": "54767"
  },
  {
    "text": "as well as for customers,\nwho can also use it.",
    "start": "54808",
    "end": "57696"
  },
  {
    "text": "And as for the architecture,\nit is a typical two-layer architecture.",
    "start": "58168",
    "end": "62688"
  },
  {
    "text": "On the front we can see how the users",
    "start": "62936",
    "end": "66816"
  },
  {
    "text": "access a front",
    "start": "66904",
    "end": "69824"
  },
  {
    "text": "developed in VMware, in JavaScript,\nwhich is stored",
    "start": "69888",
    "end": "73792"
  },
  {
    "text": "in an S3 package, users\nwould enter via a WAF,",
    "start": "73912",
    "end": "77504"
  },
  {
    "text": "for security reasons.\nWell, we may have many requests,",
    "start": "77560",
    "end": "80647"
  },
  {
    "text": "Java also needs to be here.",
    "start": "80720",
    "end": "83240"
  },
  {
    "text": "From the WAF we go to the CloudFront,",
    "start": "83640",
    "end": "85896"
  },
  {
    "text": "and from CloudFront, we attack the application\nthat we have hosted on an S3.",
    "start": "86096",
    "end": "90208"
  },
  {
    "text": "And CloudFront, why are you\nrunning it in front of the S3?",
    "start": "90440",
    "end": "94208"
  },
  {
    "text": "Well, CloudFront, above all, is to improve\nthe end user experience.",
    "start": "94280",
    "end": "97560"
  },
  {
    "text": "In other words, it is not that expensive,\nand it really improves the experience.",
    "start": "97632",
    "end": "102848"
  },
  {
    "text": "In addition, security, a WAF goes ahead and...",
    "start": "102944",
    "end": "105992"
  },
  {
    "text": "Of course, yes of course. Maybe\ncaching the static packages from the S3.",
    "start": "106648",
    "end": "110408"
  },
  {
    "text": "-Exactly.\n-And this back-end part? What would your flow be like?",
    "start": "110456",
    "end": "113784"
  },
  {
    "text": "Well, once the user has\nthe front, which is his device,",
    "start": "113872",
    "end": "118024"
  },
  {
    "text": "the front end attacks the back end\nof the application via API Rest,",
    "start": "118136",
    "end": "122248"
  },
  {
    "text": "the applications will enter\nthrough the API Gateway.",
    "start": "122320",
    "end": "124960"
  },
  {
    "text": "In the API Gateway, we have a balancer\nin the middle, but the calls are already being made",
    "start": "125136",
    "end": "129616"
  },
  {
    "text": "to the microservices.",
    "start": "129616",
    "end": "131610"
  },
  {
    "text": "We have these microservices\norchestrated in an ECS cluster.",
    "start": "131760",
    "end": "135911"
  },
  {
    "text": "And when it is necessary\nto go for persistent data,",
    "start": "136616",
    "end": "139536"
  },
  {
    "text": "we go",
    "start": "139864",
    "end": "141200"
  },
  {
    "text": "to the RDS database,\na MySQL RDS that we have.",
    "start": "141472",
    "end": "144752"
  },
  {
    "text": "And here, I see that you have used far gate.",
    "start": "144808",
    "end": "148312"
  },
  {
    "text": "Why did you choose far gate?",
    "start": "148496",
    "end": "151992"
  },
  {
    "text": "Well, for simplicity.",
    "start": "152032",
    "end": "154680"
  },
  {
    "text": "The truth is, we did tests and in addition\nwe saw that it saved us costs,",
    "start": "154800",
    "end": "158464"
  },
  {
    "text": "and we also saw",
    "start": "158568",
    "end": "161855"
  },
  {
    "text": "that it made it easier for us\nto not worry about managing instances.",
    "start": "161944",
    "end": "164984"
  },
  {
    "text": "Could it be an RDS code?\nHow do you scale them?",
    "start": "165208",
    "end": "169112"
  },
  {
    "text": "At RDS we have\na system set up that allows us to",
    "start": "169144",
    "end": "172888"
  },
  {
    "text": "have Read Replicas, we deploy\nRead Replicas depending on the load.",
    "start": "173128",
    "end": "177400"
  },
  {
    "text": "At the end we have an alarm\nconfigured in CloudWatch,",
    "start": "178760",
    "end": "180991"
  },
  {
    "text": "that, according to the load that\nthe database is having,",
    "start": "181064",
    "end": "183456"
  },
  {
    "text": "starts deploying\ndifferent Read Replicas.",
    "start": "183504",
    "end": "186088"
  },
  {
    "text": "And we make sure that\nthe microservices, when they do",
    "start": "186256",
    "end": "189512"
  },
  {
    "text": "read calls, there can only be\nthese Read Replicas.",
    "start": "189544",
    "end": "193448"
  },
  {
    "text": "Alright, and I see you\nmentioned CloudWatch,",
    "start": "194040",
    "end": "197096"
  },
  {
    "text": "I see that you are also using\nCloudWatch events,",
    "start": "197136",
    "end": "199400"
  },
  {
    "text": "What function do you use on this platform?",
    "start": "199464",
    "end": "204272"
  },
  {
    "text": "Well, we use CloudWatch Events\nas a programmer.",
    "start": "204528",
    "end": "207568"
  },
  {
    "text": "In the end, it is an application that helps you",
    "start": "208112",
    "end": "211416"
  },
  {
    "text": "to automate tasks\nand these tasks are the ones that are scheduled.",
    "start": "211456",
    "end": "213952"
  },
  {
    "text": "So, CloudWatch Events runs \nevery minute.",
    "start": "214096",
    "end": "218168"
  },
  {
    "text": "That one-minute frequency",
    "start": "222424",
    "end": "224920"
  },
  {
    "text": "wakes up a daemon\nwe have in the ECS cluster,",
    "start": "224968",
    "end": "227992"
  },
  {
    "text": "the ECS cluster looks for",
    "start": "228128",
    "end": "230192"
  },
  {
    "text": "the tasks you have to do\nwhen CloudWatch Events is launched,",
    "start": "230416",
    "end": "234544"
  },
  {
    "text": "and let's say, what it does is that,\nthose tasks that it takes,",
    "start": "234648",
    "end": "238127"
  },
  {
    "text": "it stores them, divides them,",
    "start": "238296",
    "end": "241264"
  },
  {
    "text": "it sends them to an SQS queue.",
    "start": "241656",
    "end": "244296"
  },
  {
    "text": "Why? To undock\nthe application with the SQS.",
    "start": "244416",
    "end": "247864"
  },
  {
    "text": "It is responsible for having the work stored.",
    "start": "247976",
    "end": "250400"
  },
  {
    "text": "And then we have other services",
    "start": "250632",
    "end": "252960"
  },
  {
    "text": "taking those other services.",
    "start": "253040",
    "end": "255047"
  },
  {
    "text": "Those other services inside,\nthey are microservices,",
    "start": "255184",
    "end": "257816"
  },
  {
    "text": "they auto-scale according to\nthe size of the SQS.",
    "start": "257848",
    "end": "261471"
  },
  {
    "text": "So, let's say",
    "start": "262040",
    "end": "265224"
  },
  {
    "text": "the execution of events is decoupled.",
    "start": "265328",
    "end": "269856"
  },
  {
    "text": "A decoupled reading to be able to scale",
    "start": "269928",
    "end": "273016"
  },
  {
    "text": "the ECS cluster as required\nby the platform.",
    "start": "273056",
    "end": "275472"
  },
  {
    "text": "-Precisely.\n-Very well.",
    "start": "275576",
    "end": "277983"
  },
  {
    "text": "Well, in a short, medium term,",
    "start": "278088",
    "end": "280920"
  },
  {
    "text": "what improvements do you see in the platform?",
    "start": "281000",
    "end": "283664"
  },
  {
    "text": "Well, we are evaluating two,",
    "start": "283910",
    "end": "288304"
  },
  {
    "text": "above all, it improves the backend part.",
    "start": "288400",
    "end": "290199"
  },
  {
    "text": "We are seeing two roads, the first one\nwe are going to send to Aurora, it is quite simple.",
    "start": "290320",
    "end": "294910"
  },
  {
    "text": "There, we will test Aurora's auto-scaling.",
    "start": "295208",
    "end": "298056"
  },
  {
    "text": "And the second pair that we are going to take,\nand that can also go in parallel",
    "start": "298224",
    "end": "302344"
  },
  {
    "text": "for certain things, is to start taking\ntables that we have identified",
    "start": "302384",
    "end": "305880"
  },
  {
    "text": "inside MySQL and start using\nnon-SQL technology,",
    "start": "305936",
    "end": "309464"
  },
  {
    "text": "well, specifically DynamoDB\nis what we are using.",
    "start": "309512",
    "end": "312688"
  },
  {
    "text": "Very good, very good idea.",
    "start": "312896",
    "end": "314296"
  },
  {
    "text": "Well, thank you very much, Jesús,\nfor joining us today.",
    "start": "314392",
    "end": "316800"
  },
  {
    "text": "You're welcome, José, thank you.",
    "start": "316896",
    "end": "319272"
  },
  {
    "text": "Well, thank you very much for watching this\nepisode of 'This is My Architecture'.",
    "start": "319344",
    "end": "323136"
  },
  {
    "text": "See you in the next chapter.",
    "start": "323184",
    "end": "325130"
  }
]