[
  {
    "start": "0",
    "end": "50000"
  },
  {
    "text": "good morning good afternoon and good evening depending upon where you are thank you very very much for attending",
    "start": "1079",
    "end": "7200"
  },
  {
    "text": "this screencast I am Janes waria technology evangelist at Amazon web",
    "start": "7200",
    "end": "12679"
  },
  {
    "text": "services as most of you might already know Amazon web services offers highly",
    "start": "12679",
    "end": "18000"
  },
  {
    "text": "reliable highly scalable cost effective Cloud Computing Services in this presentation I'm going",
    "start": "18000",
    "end": "25480"
  },
  {
    "text": "to tell you a beautiful love story the story will tell us how you can start",
    "start": "25480",
    "end": "31800"
  },
  {
    "text": "small and then grow gradually to build a powerful web application using all the",
    "start": "31800",
    "end": "37239"
  },
  {
    "text": "different services that AWS offers today so before I tell you that story",
    "start": "37239",
    "end": "42800"
  },
  {
    "text": "let me give you a brief overview of what uh AWS offers today and then go go into",
    "start": "42800",
    "end": "49239"
  },
  {
    "text": "it so starting from the bottom Amazon web services has built a highly reliable",
    "start": "49239",
    "end": "55840"
  },
  {
    "start": "50000",
    "end": "310000"
  },
  {
    "text": "infrastructure uh using the same principles that powers amazon.com retail",
    "start": "55840",
    "end": "60879"
  },
  {
    "text": "website today there are five regions around the world two in the US One in",
    "start": "60879",
    "end": "66520"
  },
  {
    "text": "Europe one in Singapore and the newest one in Japan each region consists of",
    "start": "66520",
    "end": "72759"
  },
  {
    "text": "multiple availability zones availability zones or azs are logical data centers",
    "start": "72759",
    "end": "79280"
  },
  {
    "text": "that don't share the same powering cooling flood panels fault lines and hence reduce the probability of failure",
    "start": "79280",
    "end": "85640"
  },
  {
    "text": "and help you design better fault tolerant websites on the top of that",
    "start": "85640",
    "end": "91600"
  },
  {
    "text": "highly reliable infrastructure we offer variety of different core infrastructure",
    "start": "91600",
    "end": "97520"
  },
  {
    "text": "services on the compute side Amazon elastic compute cloud or Amazon ec2 is a",
    "start": "97520",
    "end": "103640"
  },
  {
    "text": "web service that gives you access to virtualized instances on a pay as you go fashion you can spin up several ec2",
    "start": "103640",
    "end": "111000"
  },
  {
    "text": "instances within minutes and then get root level access to each instance uh you can take advantage of",
    "start": "111000",
    "end": "118039"
  },
  {
    "text": "1,800 or so Amazon machine images that are available or you can bundle your own",
    "start": "118039",
    "end": "123560"
  },
  {
    "text": "operating system your software with your configuration settings into your own Amazon machine",
    "start": "123560",
    "end": "129520"
  },
  {
    "text": "image all this can be done using simple web services calls or command line uh",
    "start": "129520",
    "end": "135519"
  },
  {
    "text": "functions to scale elastic uh elastically up and down you can also purchase uh OnDemand",
    "start": "135519",
    "end": "143480"
  },
  {
    "text": "easy2 instances in which you pay pay for the instances by the hour or take",
    "start": "143480",
    "end": "148640"
  },
  {
    "text": "advantage of Reserve instances in which you pay a low onetime payment and",
    "start": "148640",
    "end": "153959"
  },
  {
    "text": "reserve and and and reserve the capacity as well as receive a lower usage rate",
    "start": "153959",
    "end": "160319"
  },
  {
    "text": "than that of the on demand instance on the unstructured storage",
    "start": "160319",
    "end": "165360"
  },
  {
    "text": "side there are several options available Amazon EBS which is elastic blog store",
    "start": "165360",
    "end": "172120"
  },
  {
    "text": "stands for um is essentially uh network attached storage it is a persistent blog",
    "start": "172120",
    "end": "178959"
  },
  {
    "text": "device that can be be mounted onto an ec2 instance and it is completely independent to the ec2 instance you can",
    "start": "178959",
    "end": "185440"
  },
  {
    "text": "provision what we call the volumes from 1 gab to 1 terabyte and attach multiple",
    "start": "185440",
    "end": "191280"
  },
  {
    "text": "volumes to an ec2 instance Amazon S3 which is our simple",
    "start": "191280",
    "end": "196720"
  },
  {
    "text": "storage service is a highly distributed redundant data store you give us a blob of data and the key to that data we will",
    "start": "196720",
    "end": "204040"
  },
  {
    "text": "take that blob of data and store it multiple redundant geographically distributed data centers and you can",
    "start": "204040",
    "end": "210000"
  },
  {
    "text": "retrieve that blob of data using the key that you have provided all you have to worry about in S3 is get put update",
    "start": "210000",
    "end": "217959"
  },
  {
    "text": "delete and and buckets and objects on the network side Amazon VPC",
    "start": "217959",
    "end": "224519"
  },
  {
    "text": "or a virtual private Cloud offers Network isolation a true VLAN type",
    "start": "224519",
    "end": "230000"
  },
  {
    "text": "functionality so that you can securely connect your existing data center to that to the cloud and map the same I IP",
    "start": "230000",
    "end": "237239"
  },
  {
    "text": "address range that you have in your own corporate net Network and sort of get best of both the world Amazon elb is the elastic load",
    "start": "237239",
    "end": "245840"
  },
  {
    "text": "balancing service and allows you to create a load balancer to so that you can Route traffic uh among multiple ec2",
    "start": "245840",
    "end": "253280"
  },
  {
    "text": "instances Amazon Route 53 on the network side side again is a authoritative DNS",
    "start": "253280",
    "end": "260359"
  },
  {
    "text": "service that allows you to programmatically manage DNS records on the structured storage side",
    "start": "260359",
    "end": "267400"
  },
  {
    "text": "Amazon offers two Alternatives today Amazon simple DB is a highly distributed",
    "start": "267400",
    "end": "272560"
  },
  {
    "text": "queriable key Value Store a lot of people call this as a nosql option on",
    "start": "272560",
    "end": "279199"
  },
  {
    "text": "Amazon if you have relational data you can use Amazon RDS or relational data",
    "start": "279199",
    "end": "284759"
  },
  {
    "text": "store MySQL uh managed offering by Amazon that abstracts out and automates",
    "start": "284759",
    "end": "291560"
  },
  {
    "text": "most of your database Administration pass so that you can focus more on your",
    "start": "291560",
    "end": "297160"
  },
  {
    "text": "own application the cool thing about IDs is with just few clicks you can actually",
    "start": "297160",
    "end": "302320"
  },
  {
    "text": "scale from a 2 CPU box to a 4 CPU box as well as you can add more storage",
    "start": "302320",
    "end": "309680"
  },
  {
    "text": "volumes on the platform side of things there are variety of different options that serve a specific",
    "start": "309680",
    "end": "316120"
  },
  {
    "start": "310000",
    "end": "464000"
  },
  {
    "text": "purpose if you have lots and lots of logs and you like to Lo process lots of",
    "start": "316120",
    "end": "321560"
  },
  {
    "text": "these logs and process them parallely um across uh know massively distributed uh",
    "start": "321560",
    "end": "327800"
  },
  {
    "text": "ec2 instances you can take advantage of Amazon elastic map reduce which is a",
    "start": "327800",
    "end": "333039"
  },
  {
    "text": "hosted Hadoop framework optimized to run on an on demand infrastructure there are several payment",
    "start": "333039",
    "end": "339800"
  },
  {
    "text": "options available like Amazon Dev pay which is a billing and metering platform Amazon FPS is a flexible payment service",
    "start": "339800",
    "end": "347720"
  },
  {
    "text": "that allows you to send no payment and and uh using the same uh amazon.com",
    "start": "347720",
    "end": "355479"
  },
  {
    "text": "credit user accounts we have several Edge locations",
    "start": "355479",
    "end": "361600"
  },
  {
    "text": "around the world and you can also take advantage of our content delivery Network Amazon cloudfront that will Edge",
    "start": "361600",
    "end": "368440"
  },
  {
    "text": "cach your static content so that content is much more closer to the",
    "start": "368440",
    "end": "373479"
  },
  {
    "text": "customer Amazon Mechanical Turk is an OnDemand Workforce allows you to get",
    "start": "373479",
    "end": "379479"
  },
  {
    "text": "access to lots and lots of humans to do a particular task for a short period of",
    "start": "379479",
    "end": "385240"
  },
  {
    "text": "time it's a really cool service that will help you um design human intelligence tasks that are very",
    "start": "385240",
    "end": "392680"
  },
  {
    "text": "difficult for computers to perform but very easy for humans to do there are several services on the",
    "start": "392680",
    "end": "398800"
  },
  {
    "text": "messaging and email side Amazon SNS it's our notification service and it allows",
    "start": "398800",
    "end": "404880"
  },
  {
    "text": "you to create a publisher subscriber model where you create a topic and have",
    "start": "404880",
    "end": "411720"
  },
  {
    "text": "subscribers subscribe to that particular topic and then Publishers will know send",
    "start": "411720",
    "end": "416759"
  },
  {
    "text": "messages and all the publish all the subscribers can get messages very quickly and get",
    "start": "416759",
    "end": "422840"
  },
  {
    "text": "notified Amazon sqs is a highly distributed transient buffer and and a",
    "start": "422840",
    "end": "429400"
  },
  {
    "text": "kind of a workflow system so it it IT addresses the producer consumer pattern",
    "start": "429400",
    "end": "434919"
  },
  {
    "text": "where you have now several producers producing the jobs while putting",
    "start": "434919",
    "end": "440240"
  },
  {
    "text": "messages inside the queue while there are several consumers picking up those messages and are creating a highly",
    "start": "440240",
    "end": "446599"
  },
  {
    "text": "Loosely coupled application like one of the newest services in this",
    "start": "446599",
    "end": "451960"
  },
  {
    "text": "category is Amazon sces or simple email service it allows you to send bulk email",
    "start": "451960",
    "end": "458360"
  },
  {
    "text": "transaction uh using the same amazon.com infrastructure",
    "start": "458360",
    "end": "463400"
  },
  {
    "text": "itself there are several cross service features available that use lots of of",
    "start": "463400",
    "end": "469039"
  },
  {
    "start": "464000",
    "end": "545000"
  },
  {
    "text": "these underlining services for example Amazon uh identity and access management",
    "start": "469039",
    "end": "475080"
  },
  {
    "text": "is a simple way that allows you to create multiple users within a single",
    "start": "475080",
    "end": "480639"
  },
  {
    "text": "account and assign them policies that restricts and allows access to individual AWS",
    "start": "480639",
    "end": "487639"
  },
  {
    "text": "resources if you like to monitor your Cloud resources for example Amazon EPS",
    "start": "487639",
    "end": "492960"
  },
  {
    "text": "IO or ec2 instances CPU utilization you can take advantage of Amazon Cloud watch",
    "start": "492960",
    "end": "498919"
  },
  {
    "text": "which is our monitoring service one of my favorite services in this category is elastic bean",
    "start": "498919",
    "end": "507120"
  },
  {
    "text": "stock elastic bean stock makes it extremely easy to deploy and manage your",
    "start": "507120",
    "end": "513719"
  },
  {
    "text": "applications it essentially puts your application on on an autopilot mode and",
    "start": "513719",
    "end": "519159"
  },
  {
    "text": "creates and manage the underlining infrastructure so that you can focus more on the application and not worry",
    "start": "519159",
    "end": "525839"
  },
  {
    "text": "about servers instances volume load balances lot of people like to call this",
    "start": "525839",
    "end": "530959"
  },
  {
    "text": "as a platform as a service offering by Amazon likewise AWS cloud formation",
    "start": "530959",
    "end": "537480"
  },
  {
    "text": "allows you to provision a AWS Resources with a simple Json template it's a",
    "start": "537480",
    "end": "542640"
  },
  {
    "text": "provisioning engine how you can access the services",
    "start": "542640",
    "end": "547720"
  },
  {
    "start": "545000",
    "end": "642000"
  },
  {
    "text": "is very simple and there are variety of different ways are available today there are libraries and sdks which are simple",
    "start": "547720",
    "end": "553560"
  },
  {
    "text": "single drop files that allow you to access programmatically all these web",
    "start": "553560",
    "end": "558760"
  },
  {
    "text": "services using the apis or you can have a point and click interface our web interface uh AWS Management console that",
    "start": "558760",
    "end": "566720"
  },
  {
    "text": "allows several ways in which you can access the access these Services there are also tools and idees",
    "start": "566720",
    "end": "573360"
  },
  {
    "text": "like the eclipse toolkit which allows you to stay in Eclipse environment and also deploy directly from within",
    "start": "573360",
    "end": "580079"
  },
  {
    "text": "eclipse and lastly there are several command line interface that take advantage of these apis which integrate",
    "start": "580079",
    "end": "586880"
  },
  {
    "text": "into your existing applications very quickly so this is the complete Buffet",
    "start": "586880",
    "end": "592399"
  },
  {
    "text": "of what Amazon web services is offering today there are three things common in about all these Services everything has",
    "start": "592399",
    "end": "599120"
  },
  {
    "text": "an API so you can programmatically access each one of them you have you don't really have to use all the",
    "start": "599120",
    "end": "606040"
  },
  {
    "text": "services can pick and choose the services from this buffet and make your own meal your",
    "start": "606040",
    "end": "612600"
  },
  {
    "text": "application and thirdly all these Services inherently scale either inherently scale or they give you an",
    "start": "612600",
    "end": "619120"
  },
  {
    "text": "option to scale the the the the application so this is the living and",
    "start": "619120",
    "end": "624760"
  },
  {
    "text": "the evolving AWS Cloud so we are Contin continuously evolving as well as adding new services",
    "start": "624760",
    "end": "632000"
  },
  {
    "text": "and expanding to new geographical regions so stay tuned with our blog and other our website to get the latest and",
    "start": "632000",
    "end": "638440"
  },
  {
    "text": "the greatest of Amazon web services platform so now let me tell you a story",
    "start": "638440",
    "end": "645360"
  },
  {
    "start": "642000",
    "end": "714000"
  },
  {
    "text": "this story is about scalability about how you can start small and then gradually build up highly",
    "start": "645360",
    "end": "653360"
  },
  {
    "text": "powerful highly available highly scalable fall ton and website in the AWS",
    "start": "653360",
    "end": "658680"
  },
  {
    "text": "cloud using all the services that I just talked about in few moments",
    "start": "658680",
    "end": "663959"
  },
  {
    "text": "ago so once upon a time not so very long ago there was a boy named",
    "start": "663959",
    "end": "669760"
  },
  {
    "text": "Andy Andy was 25y old very techsavvy",
    "start": "669760",
    "end": "675079"
  },
  {
    "text": "and really keeps up to date with the latest and the greatest Technologies like others in in that age",
    "start": "675079",
    "end": "683279"
  },
  {
    "text": "Andy were also having a problem of finding dates every Thursday",
    "start": "683279",
    "end": "689600"
  },
  {
    "text": "and he gets really frustrated about the fact that he has not secured a Friday",
    "start": "689600",
    "end": "694880"
  },
  {
    "text": "night date necessity is the mother of invention he knew how to code in PHP so",
    "start": "694880",
    "end": "702320"
  },
  {
    "text": "he started building his own website he calls it thsd dat.com",
    "start": "702320",
    "end": "707680"
  },
  {
    "text": "thsd dat.com is not an ordinary dating website it's a dating website in the",
    "start": "707680",
    "end": "714720"
  },
  {
    "start": "714000",
    "end": "807000"
  },
  {
    "text": "cloud it's a dating website that is having a really cool",
    "start": "714720",
    "end": "720399"
  },
  {
    "text": "idea it goes live on 400 p.m. th",
    "start": "720399",
    "end": "726440"
  },
  {
    "text": "Thursday and then shuts itself off 700 p.m. that the same day it is only live 3",
    "start": "726440",
    "end": "736760"
  },
  {
    "text": "hours a week and this gets repeated every Thursday of the week thereby",
    "start": "736760",
    "end": "743560"
  },
  {
    "text": "creating a Black Friday effect like lots of people are waiting for the clock to take",
    "start": "743560",
    "end": "749639"
  },
  {
    "text": "as soon as 400 p.m. comes in there are several people will log into the website",
    "start": "749639",
    "end": "754839"
  },
  {
    "text": "create their new profile upload their videos and then try to find the Friday",
    "start": "754839",
    "end": "760680"
  },
  {
    "text": "night date so it was an epimeral website that truly leverages the OnDemand Cloud",
    "start": "760680",
    "end": "769320"
  },
  {
    "text": "infrastructure from the technical perspective this was ideal for something to build on the cloud because you're",
    "start": "769320",
    "end": "775680"
  },
  {
    "text": "only paying for the 3-hour time frame at the same same time and he knew that he",
    "start": "775680",
    "end": "781000"
  },
  {
    "text": "has to scale so that it meets the customer demand during that 3 hours so",
    "start": "781000",
    "end": "787440"
  },
  {
    "text": "with its elastic capabilities it will be ideal to build this website in the",
    "start": "787440",
    "end": "793040"
  },
  {
    "text": "cloud so is this idea a cool idea thursday.com it's magical elastic dating",
    "start": "793040",
    "end": "799839"
  },
  {
    "text": "that happens every Thursday so now let's see how Andy went about building this",
    "start": "799839",
    "end": "805279"
  },
  {
    "text": "particular website so Andy did simple prototype and this is how a thsd dat.com is going to",
    "start": "805279",
    "end": "812560"
  },
  {
    "text": "look like most of the time thsd dat.com is sleeping in quots and and in a static",
    "start": "812560",
    "end": "821519"
  },
  {
    "text": "website is being shown but only for that 3our time frame the website will go live",
    "start": "821519",
    "end": "827839"
  },
  {
    "text": "and people will be able to log in and upload their profiles their video and and then find each other at the date for",
    "start": "827839",
    "end": "835279"
  },
  {
    "text": "the Friday night he builds a simple web",
    "start": "835279",
    "end": "840519"
  },
  {
    "start": "837000",
    "end": "929000"
  },
  {
    "text": "application he starts an ec2 instance using the AWS Management console",
    "start": "840519",
    "end": "846720"
  },
  {
    "text": "installs Apache installs PHP module configures it and also installs MySQL in",
    "start": "846720",
    "end": "853320"
  },
  {
    "text": "the single instance he quickly runs certain scripts",
    "start": "853320",
    "end": "859120"
  },
  {
    "text": "so that the B MySQL binary logs are backed up to Amazon S3 every 2",
    "start": "859120",
    "end": "865199"
  },
  {
    "text": "hours he creates an elastic IP elastic IPS are a remappable static IP addresses",
    "start": "865199",
    "end": "872399"
  },
  {
    "text": "so it can point the domain name that PHP website in this case thd.com to point to",
    "start": "872399",
    "end": "879240"
  },
  {
    "text": "this ec2 instance with his minimal code and his and using open source",
    "start": "879240",
    "end": "885120"
  },
  {
    "text": "Technologies he was able to launch this particular website very quickly in the cloud he created the necessary security",
    "start": "885120",
    "end": "892120"
  },
  {
    "text": "groups he created the necessary configuration that's needed to quickly launch a website within 2 hours",
    "start": "892120",
    "end": "900120"
  },
  {
    "text": "so first pattern he he he listens to several of the best practices that Amazon talk talks about all the time the",
    "start": "900120",
    "end": "907560"
  },
  {
    "text": "first pattern in designing web application is to design for failure and nothing will",
    "start": "907560",
    "end": "914279"
  },
  {
    "text": "fail with that design pattern in mind Andy decided to make sure that his",
    "start": "914279",
    "end": "921079"
  },
  {
    "text": "particular website that he has build he has to quickly now make take advantage",
    "start": "921079",
    "end": "926320"
  },
  {
    "text": "of some of the fa Tarn and features that are available so he makes sure that instead of just having an an ephemeral",
    "start": "926320",
    "end": "934160"
  },
  {
    "start": "929000",
    "end": "1139000"
  },
  {
    "text": "instance and and in case it that it dies he is to make sure that the data has is",
    "start": "934160",
    "end": "939279"
  },
  {
    "text": "not lost so he creates Amazon EBS volumes these are one root volume and",
    "start": "939279",
    "end": "945959"
  },
  {
    "text": "one data volume and attaches that volume to that ec2 instance and then know configures the",
    "start": "945959",
    "end": "953199"
  },
  {
    "text": "ec2 instances so that the every uh hour or so periodically they they get",
    "start": "953199",
    "end": "959560"
  },
  {
    "text": "snapshotted onto Amazon S3 these snapshots are incremental in",
    "start": "959560",
    "end": "965680"
  },
  {
    "text": "nature so pay actually for the subsequent snapshot so much these are only the changed bits are going to be",
    "start": "965680",
    "end": "973000"
  },
  {
    "text": "saved so he also learned during this process that there are two ways in which",
    "start": "973000",
    "end": "978240"
  },
  {
    "text": "you can create an Amazon machine image one is S3 bagged Amazon machine image in",
    "start": "978240",
    "end": "984000"
  },
  {
    "text": "which the Amazon machine image blob is actually stored in S3 and under one is",
    "start": "984000",
    "end": "989120"
  },
  {
    "text": "an EBS bagged Amazon machine image which is also stored in S3 but in this case it",
    "start": "989120",
    "end": "994440"
  },
  {
    "text": "is first provisioned onto an EBS volume and then EBS volume is bootable so it it",
    "start": "994440",
    "end": "1000240"
  },
  {
    "text": "will boot up to an ec2 instance certain more advantages of Amazon EBS bagged",
    "start": "1000240",
    "end": "1007199"
  },
  {
    "text": "Amazon machine image so he tries to build that Amazon machine image because there are things like he can do stop and",
    "start": "1007199",
    "end": "1014720"
  },
  {
    "text": "it's also very fast to boot up so with that in mind he just builds this website",
    "start": "1014720",
    "end": "1020560"
  },
  {
    "text": "and goes live few of his friends come comes to know about his particular website and he",
    "start": "1020560",
    "end": "1026199"
  },
  {
    "text": "quickly understands that edge cat the static content now isolates the static",
    "start": "1026199",
    "end": "1031600"
  },
  {
    "text": "data with the dynamic data all the JavaScript images audio video files are",
    "start": "1031600",
    "end": "1038558"
  },
  {
    "text": "are stored and are moved to Amazon S3 cloudfront distribution is created for",
    "start": "1038559",
    "end": "1044120"
  },
  {
    "text": "that particular Amazon S3 bucket and it exposes into a new C name media.",
    "start": "1044120",
    "end": "1050280"
  },
  {
    "text": "thursday.com so all the traffic directly hits uh the",
    "start": "1050280",
    "end": "1056280"
  },
  {
    "text": "S3 bucket as well as the static content is is Edge know Edge cached so it's more",
    "start": "1056280",
    "end": "1062240"
  },
  {
    "text": "faster and it's more um closer to the customer by doing that he he also",
    "start": "1062240",
    "end": "1070520"
  },
  {
    "text": "reduced the load on his E2 instance so this is another way to scale your web",
    "start": "1070520",
    "end": "1077000"
  },
  {
    "text": "application he also also made certain cool changes and used some of the new features that Amazon S3 provides for",
    "start": "1077000",
    "end": "1083559"
  },
  {
    "text": "example he used the post feature so that any client or any user actually when",
    "start": "1083559",
    "end": "1089280"
  },
  {
    "text": "uploads a particular video of his own he directly uploads to Amazon S3 versus",
    "start": "1089280",
    "end": "1094880"
  },
  {
    "text": "going through ec2 instance and his web server that way he's also Distributing or isolating the",
    "start": "1094880",
    "end": "1101720"
  },
  {
    "text": "traffic so by creating and Edge caching the static content he created a slightly",
    "start": "1101720",
    "end": "1106919"
  },
  {
    "text": "better design from what he had before so he starts promoting his",
    "start": "1106919",
    "end": "1112240"
  },
  {
    "text": "particular website few people log into this website one of the colleges actually picked it up and they felt this",
    "start": "1112240",
    "end": "1119000"
  },
  {
    "text": "was a really cool web application web application because",
    "start": "1119000",
    "end": "1124480"
  },
  {
    "text": "every time when they log in they get something new there is no past memories",
    "start": "1124480",
    "end": "1129640"
  },
  {
    "text": "so always there is new content so people l in and look out for the Thursday 400",
    "start": "1129640",
    "end": "1137080"
  },
  {
    "text": "p.m. so the first thing that he does is to scale that particular website he moves",
    "start": "1137320",
    "end": "1143679"
  },
  {
    "start": "1139000",
    "end": "1203000"
  },
  {
    "text": "that mySQL database to Amazon RDS database which is a separate in DB",
    "start": "1143679",
    "end": "1149960"
  },
  {
    "text": "instance it's very easy to start a new RDS DB instance he goes to the console",
    "start": "1149960",
    "end": "1157000"
  },
  {
    "text": "clicks or through few wizard screens and then creates an DB",
    "start": "1157000",
    "end": "1162559"
  },
  {
    "text": "instance he uses MySQL standard UT tools and moves exist ing database data into",
    "start": "1162559",
    "end": "1170640"
  },
  {
    "text": "my SQL database in RDS RDS automatically manages most of",
    "start": "1170640",
    "end": "1176679"
  },
  {
    "text": "his database Administration task things like patch management things like automatic backups and so forth it was",
    "start": "1176679",
    "end": "1184280"
  },
  {
    "text": "able to save some of his time so by moving the database out of",
    "start": "1184280",
    "end": "1190159"
  },
  {
    "text": "his Amazon ec2 instance to RDS he also created his ec2 instance slightly more",
    "start": "1190159",
    "end": "1196559"
  },
  {
    "text": "lightweight so there was another another way to scale his uh current",
    "start": "1196559",
    "end": "1202799"
  },
  {
    "text": "website there was lots of cool side benefits of the dynamicity of the cloud",
    "start": "1202799",
    "end": "1208919"
  },
  {
    "start": "1203000",
    "end": "1300000"
  },
  {
    "text": "for example he understood and learned that he can use some of these elastic IP",
    "start": "1208919",
    "end": "1215039"
  },
  {
    "text": "addresses to his Advantage when upgrading to new versions of his app so",
    "start": "1215039",
    "end": "1220240"
  },
  {
    "text": "for example his first web application version and his source code v. no",
    "start": "1220240",
    "end": "1226559"
  },
  {
    "text": "1.1 the Thursday com has an elastic IP address that point to an ec2 instance",
    "start": "1226559",
    "end": "1231600"
  },
  {
    "text": "that that uses Amazon RDS so when he wants to upgrade to newer version of the",
    "start": "1231600",
    "end": "1237280"
  },
  {
    "text": "application he simply starts a new new Amazon ec2 instance let's call this staging ec2 instance puts the code the",
    "start": "1237280",
    "end": "1245320"
  },
  {
    "text": "newer version of his application onto it creates a new C name mapping let's call",
    "start": "1245320",
    "end": "1253480"
  },
  {
    "text": "this staging do thursday.com runs all his unit test as soon soon as the",
    "start": "1253480",
    "end": "1258559"
  },
  {
    "text": "staging instance passed all the unit tests he actually renames the staging",
    "start": "1258559",
    "end": "1265240"
  },
  {
    "text": "instance as the production instance and then connects the old the IP address to",
    "start": "1265240",
    "end": "1271520"
  },
  {
    "text": "that of this new ec2 instance and simply terminates that old production",
    "start": "1271520",
    "end": "1276960"
  },
  {
    "text": "instance this was very cool from the past the from the things that he has done before where we try to move uh Cod",
    "start": "1276960",
    "end": "1285559"
  },
  {
    "text": "between these environments instead he is just not changing the staging instance",
    "start": "1285559",
    "end": "1291400"
  },
  {
    "text": "to production instance so there are some these cool tactics for and you're using",
    "start": "1291400",
    "end": "1296600"
  },
  {
    "text": "dynamicity to your own Advantage so coming back to the original",
    "start": "1296600",
    "end": "1302200"
  },
  {
    "start": "1300000",
    "end": "1353000"
  },
  {
    "text": "design now he has simple website deployed using Amazon S3 for static",
    "start": "1302200",
    "end": "1308440"
  },
  {
    "text": "storage Amazon RDS for his relational data storage Amazon cloudfront to to",
    "start": "1308440",
    "end": "1313760"
  },
  {
    "text": "actually Edge cast The static content that's stored in Amazon S3 and also Amazon ec2 where the actual application",
    "start": "1313760",
    "end": "1321200"
  },
  {
    "text": "is running and he kept himself up to dat with the latest and the greatest",
    "start": "1321200",
    "end": "1327400"
  },
  {
    "text": "features of AWS he was not only subscribed to AWS blog but also was",
    "start": "1327400",
    "end": "1334000"
  },
  {
    "text": "actively reading the AWS newsletter and talking to evangelists so he knew that he had to be",
    "start": "1334000",
    "end": "1341799"
  },
  {
    "text": "prepared just in case nate.com becomes really successful",
    "start": "1341799",
    "end": "1348880"
  },
  {
    "text": "so he started doing his own research and understanding what he has to do next so",
    "start": "1348880",
    "end": "1354480"
  },
  {
    "start": "1353000",
    "end": "1555000"
  },
  {
    "text": "this comes to the third design pattern to implement elasticity elasticity is the fundamental",
    "start": "1354480",
    "end": "1361320"
  },
  {
    "text": "property of the cloud so doing his research now he wanted to proof",
    "start": "1361320",
    "end": "1368080"
  },
  {
    "text": "third.com so he decides to use some of the advanced features of Amazon ec2 to spike",
    "start": "1368080",
    "end": "1375480"
  },
  {
    "text": "proof third.com the first thing that he does is creates",
    "start": "1375480",
    "end": "1381240"
  },
  {
    "text": "an Amazon machine image of his currently running Amazon ec2 instance then he replaces the elastic IP",
    "start": "1381240",
    "end": "1389919"
  },
  {
    "text": "to use the elastic load balancer and then uses the autoscaling",
    "start": "1389919",
    "end": "1395200"
  },
  {
    "text": "group for creating the autoscaling group he has to create what we call the launch",
    "start": "1395200",
    "end": "1400640"
  },
  {
    "text": "configuration specify the Amazon machine image that needs to be started and specify the Min and the max of the Auto",
    "start": "1400640",
    "end": "1408400"
  },
  {
    "text": "scaling configuration his configuration settings were set such that if the ec2 instance",
    "start": "1408400",
    "end": "1417080"
  },
  {
    "text": "CPU utilization goes 85 and above and it stays there for 3 minutes automatically",
    "start": "1417080",
    "end": "1422720"
  },
  {
    "text": "start uh new ec2 e instance from this particular Amazon machine Mage and tied",
    "start": "1422720",
    "end": "1429960"
  },
  {
    "text": "that back to the load balancer so the new request directly hit the new instances that come online in the order",
    "start": "1429960",
    "end": "1435799"
  },
  {
    "text": "scaling group so by bundling an Amazon machine image creating a launch configuration and also creating the",
    "start": "1435799",
    "end": "1442840"
  },
  {
    "text": "elastic load balancer he created a highly scalable web",
    "start": "1442840",
    "end": "1448240"
  },
  {
    "text": "application he also realized that because everything is happening in the cloud there is this need of getting",
    "start": "1448240",
    "end": "1456039"
  },
  {
    "text": "notified so he took advantage of the Amazon simple notification service and",
    "start": "1456039",
    "end": "1461880"
  },
  {
    "text": "configured such that in case the ec2 instance terminates or dies then it will",
    "start": "1461880",
    "end": "1468559"
  },
  {
    "text": "automatically notify him via email he also moved some of the catalog data and",
    "start": "1468559",
    "end": "1474559"
  },
  {
    "text": "configuration data to Amazon simple DB and started to monitor the Amazon RDS",
    "start": "1474559",
    "end": "1481720"
  },
  {
    "text": "EBS volumes as well as ec2 instances using Amazon Cloud watch on his iPad so",
    "start": "1481720",
    "end": "1488600"
  },
  {
    "text": "there are two benefits of using the autoscaling service the first is resiliency and",
    "start": "1488600",
    "end": "1494840"
  },
  {
    "text": "self-healing you can set the minimum threshold of the number of ec2 instances you would want to always run so in case",
    "start": "1494840",
    "end": "1502960"
  },
  {
    "text": "all the ec2 instance dies it'll automatically start the new ec2 instance and the second it will allow",
    "start": "1502960",
    "end": "1510120"
  },
  {
    "text": "him to horizontally scale his web tier from one ec2 instance to multiple ec2",
    "start": "1510120",
    "end": "1517520"
  },
  {
    "text": "instances thereby creating a highly scalable highly resilient web",
    "start": "1517520",
    "end": "1524320"
  },
  {
    "text": "application so all the components of this web application are now inherently",
    "start": "1524320",
    "end": "1529440"
  },
  {
    "text": "scalable either they are scalable by Design or they are configured to scale",
    "start": "1529440",
    "end": "1534600"
  },
  {
    "text": "except one which is the relational database and this is very typical in",
    "start": "1534600",
    "end": "1539720"
  },
  {
    "text": "Thea in the designing web applications that relational database are usually the bottle l so and he starts to research",
    "start": "1539720",
    "end": "1548559"
  },
  {
    "text": "more about the database and what are the database scaling options available with Amazon",
    "start": "1548559",
    "end": "1555080"
  },
  {
    "text": "RDS this comes to our fourth pattern leveraging multiple availability zones",
    "start": "1555080",
    "end": "1561840"
  },
  {
    "text": "in order to create a highly available",
    "start": "1561840",
    "end": "1566880"
  },
  {
    "text": "database one of the cool features of Amazon RDS is a",
    "start": "1567039",
    "end": "1572200"
  },
  {
    "text": "multi-az with just a click in the Management console you can create a",
    "start": "1572200",
    "end": "1578240"
  },
  {
    "text": "standby slave in another availability Zone which will do synchronous",
    "start": "1578240",
    "end": "1584000"
  },
  {
    "text": "replication from the primary to the standby and also monitor through health checks that if",
    "start": "1584000",
    "end": "1591360"
  },
  {
    "text": "the primary fails it will automatically fail over to the standby thereby",
    "start": "1591360",
    "end": "1597159"
  },
  {
    "text": "creating a highly available database so after implementing the multi-az feature",
    "start": "1597159",
    "end": "1603520"
  },
  {
    "text": "he starts to look at his read and write traffic to the relational database and",
    "start": "1603520",
    "end": "1609880"
  },
  {
    "text": "this brings us to our fifth pattern isolating your read traffic with the",
    "start": "1609880",
    "end": "1615240"
  },
  {
    "text": "right traffic just like we isolated the static traffic from the dynamic traffic",
    "start": "1615240",
    "end": "1620679"
  },
  {
    "text": "by using cloudfront he quickly realizes that there is this new feature of Amazon RDS",
    "start": "1620679",
    "end": "1628559"
  },
  {
    "text": "called read replicas with just few clicks on the Management console he can",
    "start": "1628559",
    "end": "1633919"
  },
  {
    "text": "create multiple read replicas in the same availability Zone which will do a",
    "start": "1633919",
    "end": "1639240"
  },
  {
    "text": "synchronous replication from the master to the slaves and all the read traffic",
    "start": "1639240",
    "end": "1644880"
  },
  {
    "text": "will be automatically going from the read r while the right traffic will keep on",
    "start": "1644880",
    "end": "1650279"
  },
  {
    "text": "going through the master so by isolating the re traffic by the right traffic he",
    "start": "1650279",
    "end": "1655320"
  },
  {
    "text": "is making sure that the master is not overloaded and the read replicas",
    "start": "1655320",
    "end": "1662880"
  },
  {
    "text": "continues to serve the read traffic and thereby creating a highly scalable",
    "start": "1662880",
    "end": "1668039"
  },
  {
    "text": "design as well so now Andy has created a two tier highly scalable highly durable",
    "start": "1668039",
    "end": "1674480"
  },
  {
    "text": "fall tolerant website his traffic is increasing every",
    "start": "1674480",
    "end": "1679559"
  },
  {
    "text": "Thursday from now hundreds of people he has moved to thousands of people and he",
    "start": "1679559",
    "end": "1684640"
  },
  {
    "text": "starts implementing new features the beauty about thursday.com is that there",
    "start": "1684640",
    "end": "1690559"
  },
  {
    "start": "1687000",
    "end": "1740000"
  },
  {
    "text": "are no past memories everything when you log in is going to be new there are",
    "start": "1690559",
    "end": "1695600"
  },
  {
    "text": "going to be new people and there are going to be new profiles so whatever happens in those three hours you you",
    "start": "1695600",
    "end": "1702279"
  },
  {
    "text": "know it stays in that 3 hours so he starts implementing new features like theme now you can be a doctor one day or",
    "start": "1702279",
    "end": "1709760"
  },
  {
    "text": "you can be a geek one day or you can be philosopher one day and so forth this",
    "start": "1709760",
    "end": "1714880"
  },
  {
    "text": "picked up the traffic even further so now he gets several thousands of people",
    "start": "1714880",
    "end": "1722799"
  },
  {
    "text": "logging in to thursday.com at 400 p.m. every Thursday and to find and secure",
    "start": "1722799",
    "end": "1731000"
  },
  {
    "text": "that date so in order to implement these features he started to invest some time",
    "start": "1731000",
    "end": "1736840"
  },
  {
    "text": "in automating the software development life cycle and this brings us to the",
    "start": "1736840",
    "end": "1742080"
  },
  {
    "start": "1740000",
    "end": "1817000"
  },
  {
    "text": "pattern number six which should which is automating your in the cloud software",
    "start": "1742080",
    "end": "1747279"
  },
  {
    "text": "development life cycle in a typical software development life cycle there are four stages Dev",
    "start": "1747279",
    "end": "1753640"
  },
  {
    "text": "test QA staging and production and each one has its own",
    "start": "1753640",
    "end": "1759440"
  },
  {
    "text": "requirements for example Dev might be all the components in one instance test",
    "start": "1759440",
    "end": "1765200"
  },
  {
    "text": "and QA you might have two tier application with a small database the dummy data staging will be having",
    "start": "1765200",
    "end": "1771399"
  },
  {
    "text": "production data and having a little bit more highly scalable uh application",
    "start": "1771399",
    "end": "1776679"
  },
  {
    "text": "while production environment might be you know a highly available in a multi-az environment and he decides to",
    "start": "1776679",
    "end": "1784679"
  },
  {
    "text": "use AWS cloud formation along with chef and puppet which are configuration",
    "start": "1784679",
    "end": "1790679"
  },
  {
    "text": "management tools AWS cloud formation allows him to create individ idual",
    "start": "1790679",
    "end": "1797799"
  },
  {
    "text": "environments using simple Json templates and this gives him the",
    "start": "1797799",
    "end": "1804360"
  },
  {
    "text": "ultimate flexibility to not only tweak the current environment but also put that Json template and in a source code",
    "start": "1804360",
    "end": "1811760"
  },
  {
    "text": "repository so that he can make some those changes and then roll back if something goes wrong as more and more",
    "start": "1811760",
    "end": "1819080"
  },
  {
    "start": "1817000",
    "end": "1894000"
  },
  {
    "text": "people started to use the system more and more complaints started to come in that the website is not performant",
    "start": "1819080",
    "end": "1825880"
  },
  {
    "text": "enough it's not fast enough it's not responsive so that brings us to our",
    "start": "1825880",
    "end": "1832640"
  },
  {
    "text": "seventh pattern cash as much as possible in your web application so he started to",
    "start": "1832640",
    "end": "1838799"
  },
  {
    "text": "rearchitecturing",
    "start": "1838799",
    "end": "1841360"
  },
  {
    "text": "a highly performant web application all the requests now go to the castier",
    "start": "1857760",
    "end": "1865240"
  },
  {
    "text": "rather than going to the database and if the data is already existing it will",
    "start": "1865240",
    "end": "1870960"
  },
  {
    "text": "quickly rever back and give the results back to the application server so by moving from a two-tier web",
    "start": "1870960",
    "end": "1878760"
  },
  {
    "text": "application to a three- tier web application he is creating not only a highly scalable web application design",
    "start": "1878760",
    "end": "1885840"
  },
  {
    "text": "but also a highly performing One Security is often a concern",
    "start": "1885840",
    "end": "1891159"
  },
  {
    "text": "expressed by those who are building applications in the cloud so that brings us to our eighth pattern hardening",
    "start": "1891159",
    "end": "1898360"
  },
  {
    "start": "1894000",
    "end": "2122000"
  },
  {
    "text": "security at every single stage with Cloud it's very important to understand",
    "start": "1898360",
    "end": "1905200"
  },
  {
    "text": "that security is a shared responsibility and Andy also did his research to go to",
    "start": "1905200",
    "end": "1911960"
  },
  {
    "text": "our security Center and understanding how to implement Security in is",
    "start": "1911960",
    "end": "1917919"
  },
  {
    "text": "application to understand the shared security model it's important to",
    "start": "1917919",
    "end": "1923279"
  },
  {
    "text": "understand that there is infrastructure security the things that we do to make",
    "start": "1923279",
    "end": "1928559"
  },
  {
    "text": "sure that our infrastructure is secure most of this is validated by the",
    "start": "1928559",
    "end": "1934000"
  },
  {
    "text": "certifications like SAS 70 type 2 audit uh ISO 27011 uh Amazon is PCI DSS level one",
    "start": "1934000",
    "end": "1944840"
  },
  {
    "text": "compliant uh as well as now can run Hippa and socks compliant applications",
    "start": "1944840",
    "end": "1950240"
  },
  {
    "text": "on AWS like like infrastructure security there are several services and features",
    "start": "1950240",
    "end": "1957039"
  },
  {
    "text": "available like identity and access management multiactor authentication VPC",
    "start": "1957039",
    "end": "1962880"
  },
  {
    "text": "using encryption and encrypted file systems in ec2 using security groups features and so forth and lastly now",
    "start": "1962880",
    "end": "1970799"
  },
  {
    "text": "it's also the responsibility of the developer so so that you can know use some of the traditional best practices",
    "start": "1970799",
    "end": "1978159"
  },
  {
    "text": "that you have used in the past also in the cloud and make sure that you're patching your operating system you're",
    "start": "1978159",
    "end": "1984159"
  },
  {
    "text": "writing better secure applications and AO and avoiding SQL injection and",
    "start": "1984159",
    "end": "1989519"
  },
  {
    "text": "cross-side scripting errors and so forth and encrypting data in transit encrypting data in rest and so forth so",
    "start": "1989519",
    "end": "1996200"
  },
  {
    "text": "by together understanding this particular model you you can build highly secure application so coming back",
    "start": "1996200",
    "end": "2003120"
  },
  {
    "text": "to our THS dat.com example Andy did Implement security groups in in a very",
    "start": "2003120",
    "end": "2009799"
  },
  {
    "text": "unique way now web applications web servers only talk to the application servers and application servers only",
    "start": "2009799",
    "end": "2016480"
  },
  {
    "text": "talk to the caching servers and caching servers only talk to the the database servers and having separate security",
    "start": "2016480",
    "end": "2023159"
  },
  {
    "text": "groups and denying all other access for example the load balancer is only",
    "start": "2023159",
    "end": "2029080"
  },
  {
    "text": "exposed to port number 80 and 443 while all other access is denied while the",
    "start": "2029080",
    "end": "2035399"
  },
  {
    "text": "database the only Port that is open is 3209 in this particular case and all the",
    "start": "2035399",
    "end": "2040559"
  },
  {
    "text": "ports are are closed so by by having and using some of the security features uh",
    "start": "2040559",
    "end": "2046240"
  },
  {
    "text": "implementing it in the right best practices way you can make sure that your application is highly",
    "start": "2046240",
    "end": "2052560"
  },
  {
    "text": "secure so now with a secure web design and a highly performant and highly",
    "start": "2052560",
    "end": "2058358"
  },
  {
    "text": "skillable design and he is able to get people to work for him and with teamwork",
    "start": "2058359",
    "end": "2064440"
  },
  {
    "text": "he's able to increase the traffic to his website from tens of thousands of people",
    "start": "2064440",
    "end": "2070520"
  },
  {
    "text": "to hundreds of thousands of people accessing his particular website in order to meet that growing",
    "start": "2070520",
    "end": "2077800"
  },
  {
    "text": "demand of hundreds of thousands of people accessing thursday.com concurrently he has to make sure that",
    "start": "2077800",
    "end": "2084240"
  },
  {
    "text": "the website never goes down and in order to do that Andy takes it to the next",
    "start": "2084240",
    "end": "2089919"
  },
  {
    "text": "level by taking advantage of availability zones because he has uh",
    "start": "2089919",
    "end": "2095118"
  },
  {
    "text": "already built the Amazon machine image es uh elastic load balancers also work across availability Zone with just few",
    "start": "2095119",
    "end": "2102800"
  },
  {
    "text": "clicks he's able to actually instantiate that entire infrastructure in another",
    "start": "2102800",
    "end": "2108079"
  },
  {
    "text": "availability Zone and quickly increase the uh availability SLA of his",
    "start": "2108079",
    "end": "2114800"
  },
  {
    "text": "website now Andy has tasted success and he doesn't want to stop so he is on a",
    "start": "2114800",
    "end": "2120520"
  },
  {
    "text": "mission to go Global he wants to offer thursday.com to all parts of the world",
    "start": "2120520",
    "end": "2127520"
  },
  {
    "start": "2122000",
    "end": "2375000"
  },
  {
    "text": "including Europe and Asia and this brings us to our ninth pattern the cloud",
    "start": "2127520",
    "end": "2133480"
  },
  {
    "text": "allows you to go Global very quickly with a single API however there is a",
    "start": "2133480",
    "end": "2140000"
  },
  {
    "text": "problem if the application is deployed in US east region and the users are are",
    "start": "2140000",
    "end": "2148599"
  },
  {
    "text": "accessing from let's say Asia Pacific due to Geographic distance there is",
    "start": "2148599",
    "end": "2154040"
  },
  {
    "text": "going to be latency so what if from a centralized architecture",
    "start": "2154040",
    "end": "2160800"
  },
  {
    "text": "like this we can go to a geod distributed architecture where we deploy third.com in every region around the",
    "start": "2160800",
    "end": "2169119"
  },
  {
    "text": "world so that users from Asia pafic Only access the application in as deployed in",
    "start": "2169119",
    "end": "2177160"
  },
  {
    "text": "Asia Pacific and if you want to do data application between all the regions we",
    "start": "2177160",
    "end": "2183079"
  },
  {
    "text": "can use some sort of a open- source data replicator because Amazon web services",
    "start": "2183079",
    "end": "2188400"
  },
  {
    "text": "offers five regions around the world and because all of them have similar identical services and all of them use",
    "start": "2188400",
    "end": "2196079"
  },
  {
    "text": "similar uh apis it's very easy to go Global as you know Andy is a really",
    "start": "2196079",
    "end": "2203440"
  },
  {
    "text": "smart dude and he whatever he does he does it with style so he want wanted to",
    "start": "2203440",
    "end": "2209520"
  },
  {
    "text": "understand what is the best way to go Global while keeping your cost down that",
    "start": "2209520",
    "end": "2215040"
  },
  {
    "text": "truly leverages the Cloud infrastructure so he goes and builds",
    "start": "2215040",
    "end": "2221640"
  },
  {
    "text": "something what I call the follow the sun model follow the sun truly leverages the",
    "start": "2221640",
    "end": "2229160"
  },
  {
    "text": "auto scaling and elasticity of the cloud platform such that the application",
    "start": "2229160",
    "end": "2235839"
  },
  {
    "text": "automatically scales during the daytime when the users are actually accessing",
    "start": "2235839",
    "end": "2241240"
  },
  {
    "text": "the system and then scales back down when the during the nighttime technically sleeps during the night time",
    "start": "2241240",
    "end": "2248720"
  },
  {
    "text": "when the users are not accessing the system when you don't need this the",
    "start": "2248720",
    "end": "2253760"
  },
  {
    "text": "application to be up it uses goip directional DNS to Route the request to",
    "start": "2253760",
    "end": "2259079"
  },
  {
    "text": "the nearest server and it uses Master replication using software based data",
    "start": "2259079",
    "end": "2264680"
  },
  {
    "text": "replicator in case you need data in all regions there are going to be Geographic",
    "start": "2264680",
    "end": "2270280"
  },
  {
    "text": "latency in that but you can truly leverage the OnDemand Auto scaling as",
    "start": "2270280",
    "end": "2276720"
  },
  {
    "text": "well as elasticity of the AWS uh infrastructure by building this",
    "start": "2276720",
    "end": "2282359"
  },
  {
    "text": "follow the sun model now this is only possible then you have consistent set of services and",
    "start": "2282359",
    "end": "2289560"
  },
  {
    "text": "consistent set of apis available in different regions around the world now",
    "start": "2289560",
    "end": "2294720"
  },
  {
    "text": "how cool is that so now this follow the sun model worked well for thirdday.com",
    "start": "2294720",
    "end": "2300720"
  },
  {
    "text": "but that does not necessarily mean that it will work for all the application use",
    "start": "2300720",
    "end": "2306200"
  },
  {
    "text": "cases and all the architectures uh itself there are different ways in which",
    "start": "2306200",
    "end": "2311319"
  },
  {
    "text": "you can implement the follow the sun model to increase efficiency of your application uh overall the first model",
    "start": "2311319",
    "end": "2318880"
  },
  {
    "text": "obviously is on the database side that you can Implement software based data replicator which will trigger based on",
    "start": "2318880",
    "end": "2326960"
  },
  {
    "text": "every insert and update happening and replicate the data across uh multiple",
    "start": "2326960",
    "end": "2332319"
  },
  {
    "text": "regions uh the second design is to have a single Master uh where all the rights",
    "start": "2332319",
    "end": "2337920"
  },
  {
    "text": "will happen and then have slaves in each region which will be replicated through asynchronous replication and the third",
    "start": "2337920",
    "end": "2344800"
  },
  {
    "text": "design is to have my SQL master master application across all regions um",
    "start": "2344800",
    "end": "2352000"
  },
  {
    "text": "ideally these are just the different architectural database architecture",
    "start": "2352000",
    "end": "2357319"
  },
  {
    "text": "design patterns that you might be able to take advantage on your use case now",
    "start": "2357319",
    "end": "2364119"
  },
  {
    "text": "Andy is a celebrity he he knows that he can build a highly scalable web",
    "start": "2364119",
    "end": "2371240"
  },
  {
    "text": "application that can go Global but the beauty about the cloud is the fact that",
    "start": "2371240",
    "end": "2376720"
  },
  {
    "start": "2375000",
    "end": "2425000"
  },
  {
    "text": "you can keep on optimizing and that brings us to our final pattern that keep",
    "start": "2376720",
    "end": "2382040"
  },
  {
    "text": "optimizing your infrastructure and you will see the Savings in your next month's bill so an example is now",
    "start": "2382040",
    "end": "2390800"
  },
  {
    "text": "investing in reserved instances investing in reserved instances not only ensures you you that you have the",
    "start": "2390800",
    "end": "2397440"
  },
  {
    "text": "necessary capacity when you need it but also overall in a one year 3year time",
    "start": "2397440",
    "end": "2403839"
  },
  {
    "text": "frame your um overall cost reduces from up to 40% so you are not only saving on",
    "start": "2403839",
    "end": "2413599"
  },
  {
    "text": "your infrastructure but also by changing part of your infrastructure and adding",
    "start": "2413599",
    "end": "2418839"
  },
  {
    "text": "more optimizations you can actually make a significant impact in your next month's",
    "start": "2418839",
    "end": "2425359"
  },
  {
    "start": "2425000",
    "end": "2510000"
  },
  {
    "text": "bill so in conclusion we were able to see how Andy started small and was able",
    "start": "2425359",
    "end": "2431599"
  },
  {
    "text": "to build a powerful web application which is highly skillable highly available highly responsive fall",
    "start": "2431599",
    "end": "2438960"
  },
  {
    "text": "tolerant cost effective and that is globally deployed around various parts of the world using all the different",
    "start": "2438960",
    "end": "2446000"
  },
  {
    "text": "services that Amazon web services offers today for those of you who are who are",
    "start": "2446000",
    "end": "2451680"
  },
  {
    "text": "still wondering what H happened to Andy and his love life Andy did find a",
    "start": "2451680",
    "end": "2457079"
  },
  {
    "text": "beautiful young girl and they are madly in love with each other and they are",
    "start": "2457079",
    "end": "2462319"
  },
  {
    "text": "happily married and everybody knows the first love for Andy is still the clouds so I",
    "start": "2462319",
    "end": "2471200"
  },
  {
    "text": "hope you enjoyed this presentation uh if you really like the presentation please",
    "start": "2471200",
    "end": "2476520"
  },
  {
    "text": "do get back to me my email address is J waria amazon.com and before you ask yes",
    "start": "2476520",
    "end": "2483280"
  },
  {
    "text": "the slides are available on slideshare.net SL Amazon web services please get back",
    "start": "2483280",
    "end": "2489359"
  },
  {
    "text": "to me if you have any questions thank you very much for listening and if you like this",
    "start": "2489359",
    "end": "2495319"
  },
  {
    "text": "particular presentation you will like other white papers that I have authored you can find them at aws.amazon.com",
    "start": "2495319",
    "end": "2503119"
  },
  {
    "text": "swhite papers again thank you very much for",
    "start": "2503119",
    "end": "2508520"
  },
  {
    "text": "listening",
    "start": "2509800",
    "end": "2512800"
  }
]