[
  {
    "text": "welcome everyone my name is Aditya",
    "start": "199",
    "end": "2580"
  },
  {
    "text": "Salman",
    "start": "2580",
    "end": "3120"
  },
  {
    "text": "I am a database specialist solutions",
    "start": "3120",
    "end": "5190"
  },
  {
    "text": "architect here at AWS and today we're",
    "start": "5190",
    "end": "7620"
  },
  {
    "text": "going to talk about machine learning",
    "start": "7620",
    "end": "8670"
  },
  {
    "text": "with Amazon Arora and we are going to do",
    "start": "8670",
    "end": "10740"
  },
  {
    "text": "a quick demo of sentiment analysis",
    "start": "10740",
    "end": "13400"
  },
  {
    "text": "today's agenda we are going to quickly",
    "start": "13400",
    "end": "17340"
  },
  {
    "text": "go over what the machine learning with",
    "start": "17340",
    "end": "19949"
  },
  {
    "text": "or looks like and then we'll jump right",
    "start": "19949",
    "end": "22500"
  },
  {
    "text": "into the sentiment analysis demo so if",
    "start": "22500",
    "end": "26460"
  },
  {
    "text": "you have tried to build a machine",
    "start": "26460",
    "end": "29250"
  },
  {
    "text": "learning application to integrate with",
    "start": "29250",
    "end": "31529"
  },
  {
    "text": "your relational database typically it",
    "start": "31529",
    "end": "34170"
  },
  {
    "text": "has a lot of manual steps and it has",
    "start": "34170",
    "end": "37320"
  },
  {
    "text": "about six steps so step one is to select",
    "start": "37320",
    "end": "40290"
  },
  {
    "text": "and train the machine learning model",
    "start": "40290",
    "end": "41790"
  },
  {
    "text": "step two is to write the application",
    "start": "41790",
    "end": "44219"
  },
  {
    "text": "code to read the data from the database",
    "start": "44219",
    "end": "46039"
  },
  {
    "text": "step three is to format the data from",
    "start": "46039",
    "end": "48870"
  },
  {
    "text": "the machine learning model step four is",
    "start": "48870",
    "end": "51149"
  },
  {
    "text": "to call a machine learning service to",
    "start": "51149",
    "end": "53160"
  },
  {
    "text": "run the machine learning model on the",
    "start": "53160",
    "end": "54539"
  },
  {
    "text": "formatted data step five would be to",
    "start": "54539",
    "end": "56820"
  },
  {
    "text": "format the output and then finally step",
    "start": "56820",
    "end": "59070"
  },
  {
    "text": "six is to load the applications with",
    "start": "59070",
    "end": "61170"
  },
  {
    "text": "this newly derived insights so that's",
    "start": "61170",
    "end": "63930"
  },
  {
    "text": "quite a long process and typically it",
    "start": "63930",
    "end": "66060"
  },
  {
    "text": "ends up being offline in a data",
    "start": "66060",
    "end": "68100"
  },
  {
    "text": "scientists desktop or a laptop because",
    "start": "68100",
    "end": "71760"
  },
  {
    "text": "it's hard to do all the integration",
    "start": "71760",
    "end": "73560"
  },
  {
    "text": "together so the solution to this is",
    "start": "73560",
    "end": "78240"
  },
  {
    "text": "Amazon fish Ororo machine learning which",
    "start": "78240",
    "end": "81810"
  },
  {
    "text": "is simple optimized and secure and it",
    "start": "81810",
    "end": "84000"
  },
  {
    "text": "integrates with two of our machine",
    "start": "84000",
    "end": "87509"
  },
  {
    "text": "learning stack services which is sage",
    "start": "87509",
    "end": "89220"
  },
  {
    "text": "maker and comprehend for today's session",
    "start": "89220",
    "end": "91979"
  },
  {
    "text": "we're going to stick with comprehend",
    "start": "91979",
    "end": "93720"
  },
  {
    "text": "integration and we're going to talk",
    "start": "93720",
    "end": "95189"
  },
  {
    "text": "about sentiment analysis so this",
    "start": "95189",
    "end": "100170"
  },
  {
    "text": "integration of machine learning with",
    "start": "100170",
    "end": "102090"
  },
  {
    "text": "Aurra actually takes from the six steps",
    "start": "102090",
    "end": "104460"
  },
  {
    "text": "to three steps or even lower which is",
    "start": "104460",
    "end": "108180"
  },
  {
    "text": "just to select the machine learning",
    "start": "108180",
    "end": "109920"
  },
  {
    "text": "model in case of comprehend you don't",
    "start": "109920",
    "end": "112920"
  },
  {
    "text": "even have to do that step two is to run",
    "start": "112920",
    "end": "115890"
  },
  {
    "text": "a sequel query and then step three is to",
    "start": "115890",
    "end": "118200"
  },
  {
    "text": "use the results in the application it is",
    "start": "118200",
    "end": "120479"
  },
  {
    "text": "really that simple so in today's demo we",
    "start": "120479",
    "end": "124829"
  },
  {
    "text": "are going to go through the sentiment",
    "start": "124829",
    "end": "126299"
  },
  {
    "text": "analysis and we're going to detect",
    "start": "126299",
    "end": "127979"
  },
  {
    "text": "negative and positive sentiments here's",
    "start": "127979",
    "end": "130890"
  },
  {
    "text": "an example of such an application",
    "start": "130890",
    "end": "133590"
  },
  {
    "text": "where you have you know review text",
    "start": "133590",
    "end": "136770"
  },
  {
    "text": "inside your database and then you simply",
    "start": "136770",
    "end": "139080"
  },
  {
    "text": "run a select statement with a inbuilt",
    "start": "139080",
    "end": "142740"
  },
  {
    "text": "comprehend service function and this",
    "start": "142740",
    "end": "145860"
  },
  {
    "text": "function detects the sentiments and tell",
    "start": "145860",
    "end": "147840"
  },
  {
    "text": "see if it's positive or negative so",
    "start": "147840",
    "end": "150840"
  },
  {
    "text": "before we get to the demo let's see what",
    "start": "150840",
    "end": "153000"
  },
  {
    "text": "we're going to achieve in this demo",
    "start": "153000",
    "end": "154170"
  },
  {
    "text": "today first of all there is no machine",
    "start": "154170",
    "end": "157320"
  },
  {
    "text": "learning training required for this demo",
    "start": "157320",
    "end": "159060"
  },
  {
    "text": "we are going to configure identity",
    "start": "159060",
    "end": "161940"
  },
  {
    "text": "access and management because that's",
    "start": "161940",
    "end": "163470"
  },
  {
    "text": "always the first step when you try to do",
    "start": "163470",
    "end": "165630"
  },
  {
    "text": "anything with AWS you have to secure you",
    "start": "165630",
    "end": "168210"
  },
  {
    "text": "know security is always the top priority",
    "start": "168210",
    "end": "169950"
  },
  {
    "text": "and then we are going to invoke the",
    "start": "169950",
    "end": "171960"
  },
  {
    "text": "Amazon component function and run sequel",
    "start": "171960",
    "end": "175260"
  },
  {
    "text": "queries for this we're going to use",
    "start": "175260",
    "end": "178860"
  },
  {
    "text": "built in simple queries which are AWS is",
    "start": "178860",
    "end": "182100"
  },
  {
    "text": "comprehend detects sentiment and a",
    "start": "182100",
    "end": "183720"
  },
  {
    "text": "Tobias comprehend detects sentiment",
    "start": "183720",
    "end": "185190"
  },
  {
    "text": "confidence and I'll show you what these",
    "start": "185190",
    "end": "186960"
  },
  {
    "text": "two functions mean and how to use them",
    "start": "186960",
    "end": "190470"
  },
  {
    "text": "in the steps in the demo are going to be",
    "start": "190470",
    "end": "192870"
  },
  {
    "text": "to create a table and then execute these",
    "start": "192870",
    "end": "195720"
  },
  {
    "text": "queries and functions and then just look",
    "start": "195720",
    "end": "198810"
  },
  {
    "text": "at the output and see how the sentiment",
    "start": "198810",
    "end": "200940"
  },
  {
    "text": "was detected properly or not alright so",
    "start": "200940",
    "end": "203130"
  },
  {
    "text": "let get okay so now we're in the RDS",
    "start": "203130",
    "end": "206520"
  },
  {
    "text": "console as you can see the Aurora",
    "start": "206520",
    "end": "209240"
  },
  {
    "text": "cluster is all respond up and ready to",
    "start": "209240",
    "end": "211680"
  },
  {
    "text": "go so step number one is to create the",
    "start": "211680",
    "end": "215190"
  },
  {
    "text": "IAM policy in the world so that the",
    "start": "215190",
    "end": "217410"
  },
  {
    "text": "Aurora service and machine learning",
    "start": "217410",
    "end": "218730"
  },
  {
    "text": "services can talk together so to do that",
    "start": "218730",
    "end": "221370"
  },
  {
    "text": "we are going to go down to the",
    "start": "221370",
    "end": "223110"
  },
  {
    "text": "connectivity and security tab and then",
    "start": "223110",
    "end": "225600"
  },
  {
    "text": "scroll down to the area that's labeled",
    "start": "225600",
    "end": "227430"
  },
  {
    "text": "manage I am roles select a service to",
    "start": "227430",
    "end": "231600"
  },
  {
    "text": "connect to this cluster and then from",
    "start": "231600",
    "end": "233730"
  },
  {
    "text": "the drop down we're going to select I am",
    "start": "233730",
    "end": "235860"
  },
  {
    "text": "or Amazon comprehend and then click on",
    "start": "235860",
    "end": "238560"
  },
  {
    "text": "connect service we're going to click on",
    "start": "238560",
    "end": "240750"
  },
  {
    "text": "the connect service button again so now",
    "start": "240750",
    "end": "243450"
  },
  {
    "text": "what's happening in the background is",
    "start": "243450",
    "end": "244830"
  },
  {
    "text": "that a new role and policy is being",
    "start": "244830",
    "end": "246720"
  },
  {
    "text": "created so that the Amazon Aurora and",
    "start": "246720",
    "end": "250320"
  },
  {
    "text": "then the comprehend service can talk to",
    "start": "250320",
    "end": "253170"
  },
  {
    "text": "each other when you create this",
    "start": "253170",
    "end": "254910"
  },
  {
    "text": "initially it goes into the pending mode",
    "start": "254910",
    "end": "256500"
  },
  {
    "text": "and then eventually it's going to become",
    "start": "256500",
    "end": "258329"
  },
  {
    "text": "active into the",
    "start": "258330",
    "end": "263420"
  },
  {
    "text": "seconds but now the roll is active so",
    "start": "263420",
    "end": "266210"
  },
  {
    "text": "what I want to do is show you folks",
    "start": "266210",
    "end": "268310"
  },
  {
    "text": "quickly what this roll is doing in the",
    "start": "268310",
    "end": "270680"
  },
  {
    "text": "backend to do that we're going to go to",
    "start": "270680",
    "end": "273230"
  },
  {
    "text": "the iam console and look up this roll",
    "start": "273230",
    "end": "276770"
  },
  {
    "text": "name click on the name and then expand",
    "start": "276770",
    "end": "280970"
  },
  {
    "text": "the policy that's attached to this roll",
    "start": "280970",
    "end": "283690"
  },
  {
    "text": "so if you see the policy does two things",
    "start": "283690",
    "end": "286520"
  },
  {
    "text": "it allows the comprehend service detect",
    "start": "286520",
    "end": "289520"
  },
  {
    "text": "sentiment and batch detect sentiment API",
    "start": "289520",
    "end": "291830"
  },
  {
    "text": "should be called on behalf of the RDS",
    "start": "291830",
    "end": "294650"
  },
  {
    "text": "service let's look at the trust",
    "start": "294650",
    "end": "297350"
  },
  {
    "text": "relationship if you see right here the",
    "start": "297350",
    "end": "300560"
  },
  {
    "text": "other thing that this policy is doing or",
    "start": "300560",
    "end": "302960"
  },
  {
    "text": "this role is doing is to allow the RDS",
    "start": "302960",
    "end": "306350"
  },
  {
    "text": "service to talk to the comprehend",
    "start": "306350",
    "end": "308390"
  },
  {
    "text": "service so those are the only two things",
    "start": "308390",
    "end": "309950"
  },
  {
    "text": "this role is doing now let's move on to",
    "start": "309950",
    "end": "314120"
  },
  {
    "text": "step two step two is to configure the",
    "start": "314120",
    "end": "317570"
  },
  {
    "text": "parameter groups so that the appropriate",
    "start": "317570",
    "end": "320810"
  },
  {
    "text": "I am role is present in our parameters",
    "start": "320810",
    "end": "323570"
  },
  {
    "text": "so to do that we are going to go to the",
    "start": "323570",
    "end": "326150"
  },
  {
    "text": "configuration tab scroll down and then",
    "start": "326150",
    "end": "330320"
  },
  {
    "text": "we are going to look at the cluster",
    "start": "330320",
    "end": "331760"
  },
  {
    "text": "parameter group we are going to click on",
    "start": "331760",
    "end": "334580"
  },
  {
    "text": "the cluster parameter group which opens",
    "start": "334580",
    "end": "337220"
  },
  {
    "text": "it up in a next tab in the parameter",
    "start": "337220",
    "end": "345680"
  },
  {
    "text": "group we are going to look at the",
    "start": "345680",
    "end": "347540"
  },
  {
    "text": "comprehend parameter option or the",
    "start": "347540",
    "end": "350480"
  },
  {
    "text": "comprehend parameters a parameter group",
    "start": "350480",
    "end": "353150"
  },
  {
    "text": "actually gives us ways to define",
    "start": "353150",
    "end": "355280"
  },
  {
    "text": "specific ways that we can change",
    "start": "355280",
    "end": "357890"
  },
  {
    "text": "behavior of the aurora cluster from the",
    "start": "357890",
    "end": "360830"
  },
  {
    "text": "default behavior in this case we are",
    "start": "360830",
    "end": "362780"
  },
  {
    "text": "just going to change the comprehend",
    "start": "362780",
    "end": "364870"
  },
  {
    "text": "parameter so that it knows exactly which",
    "start": "364870",
    "end": "367640"
  },
  {
    "text": "I am role to use so I'm just going to",
    "start": "367640",
    "end": "369560"
  },
  {
    "text": "quickly look at the comprehend role",
    "start": "369560",
    "end": "371240"
  },
  {
    "text": "parameter the name of this parameter is",
    "start": "371240",
    "end": "373280"
  },
  {
    "text": "AWS default comprehend role so you can",
    "start": "373280",
    "end": "375980"
  },
  {
    "text": "click on this parameter click on edit",
    "start": "375980",
    "end": "378740"
  },
  {
    "text": "parameter and the value it's expecting",
    "start": "378740",
    "end": "381380"
  },
  {
    "text": "is the I am value of the role that we",
    "start": "381380",
    "end": "386690"
  },
  {
    "text": "created so we can quickly get that value",
    "start": "386690",
    "end": "388970"
  },
  {
    "text": "from our I am console it's open right",
    "start": "388970",
    "end": "391610"
  },
  {
    "text": "here you're going to have to look at the",
    "start": "391610",
    "end": "394490"
  },
  {
    "text": "role bearing",
    "start": "394490",
    "end": "395870"
  },
  {
    "text": "and then copy the role Aaron and then",
    "start": "395870",
    "end": "398660"
  },
  {
    "text": "just go back to our parameter and paste",
    "start": "398660",
    "end": "400850"
  },
  {
    "text": "it",
    "start": "400850",
    "end": "401300"
  },
  {
    "text": "Save Changes and you're good to go okay",
    "start": "401300",
    "end": "407270"
  },
  {
    "text": "so the first two steps were the",
    "start": "407270",
    "end": "408890"
  },
  {
    "text": "configuration now comes the fun part",
    "start": "408890",
    "end": "410630"
  },
  {
    "text": "which is to run the actual commands and",
    "start": "410630",
    "end": "413420"
  },
  {
    "text": "do the sentiment analysis and to see the",
    "start": "413420",
    "end": "415700"
  },
  {
    "text": "results ourselves first things first",
    "start": "415700",
    "end": "417710"
  },
  {
    "text": "though we need to make sure that our",
    "start": "417710",
    "end": "419870"
  },
  {
    "text": "aurora my sequel is running on the",
    "start": "419870",
    "end": "422390"
  },
  {
    "text": "proper version so we will do that by",
    "start": "422390",
    "end": "424940"
  },
  {
    "text": "running the simple query and make sure",
    "start": "424940",
    "end": "427580"
  },
  {
    "text": "that it's running the proper version it",
    "start": "427580",
    "end": "429740"
  },
  {
    "text": "is in this case it's using 2.0 7.1 so if",
    "start": "429740",
    "end": "433760"
  },
  {
    "text": "you are in tube on 2.0 7.1 or above you",
    "start": "433760",
    "end": "436760"
  },
  {
    "text": "should be able to use the machine",
    "start": "436760",
    "end": "437900"
  },
  {
    "text": "learning integration with our or my",
    "start": "437900",
    "end": "439430"
  },
  {
    "text": "sequel now what we're gonna do is we're",
    "start": "439430",
    "end": "442700"
  },
  {
    "text": "going to use a database you can create a",
    "start": "442700",
    "end": "445010"
  },
  {
    "text": "new database or use one that you may",
    "start": "445010",
    "end": "447020"
  },
  {
    "text": "already have and then create a table to",
    "start": "447020",
    "end": "451160"
  },
  {
    "text": "use for sentiment analysis demo this",
    "start": "451160",
    "end": "454040"
  },
  {
    "text": "table just has two columns comment ID",
    "start": "454040",
    "end": "456740"
  },
  {
    "text": "and common text in your case you may",
    "start": "456740",
    "end": "459260"
  },
  {
    "text": "already have a database and already have",
    "start": "459260",
    "end": "460910"
  },
  {
    "text": "a table that has comment values or",
    "start": "460910",
    "end": "463670"
  },
  {
    "text": "values or or text comments or text",
    "start": "463670",
    "end": "466400"
  },
  {
    "text": "values that you want to do sentiment",
    "start": "466400",
    "end": "468350"
  },
  {
    "text": "analysis on you will use that one in",
    "start": "468350",
    "end": "470630"
  },
  {
    "text": "your real-world example I'm going to",
    "start": "470630",
    "end": "473750"
  },
  {
    "text": "insert a bunch of values here let's",
    "start": "473750",
    "end": "477590"
  },
  {
    "text": "quickly examine these values some of",
    "start": "477590",
    "end": "479120"
  },
  {
    "text": "these values are positive for example",
    "start": "479120",
    "end": "481910"
  },
  {
    "text": "this one this value says this is very",
    "start": "481910",
    "end": "484490"
  },
  {
    "text": "useful thank you for writing it",
    "start": "484490",
    "end": "485960"
  },
  {
    "text": "obviously a very positive comment there",
    "start": "485960",
    "end": "488750"
  },
  {
    "text": "are some comments that are negative this",
    "start": "488750",
    "end": "490760"
  },
  {
    "text": "value here says I don't like how this is",
    "start": "490760",
    "end": "492890"
  },
  {
    "text": "this was implemented a negative comment",
    "start": "492890",
    "end": "495170"
  },
  {
    "text": "and then there are also some neutral",
    "start": "495170",
    "end": "497930"
  },
  {
    "text": "comments that are not necessarily",
    "start": "497930",
    "end": "499190"
  },
  {
    "text": "positive or negative so for example this",
    "start": "499190",
    "end": "501980"
  },
  {
    "text": "value here says an interesting write-up",
    "start": "501980",
    "end": "503900"
  },
  {
    "text": "please add more details so as humans we",
    "start": "503900",
    "end": "506960"
  },
  {
    "text": "have intuition and we are able to",
    "start": "506960",
    "end": "508780"
  },
  {
    "text": "understand what these comments mean but",
    "start": "508780",
    "end": "511640"
  },
  {
    "text": "for a database or for a machine to",
    "start": "511640",
    "end": "514669"
  },
  {
    "text": "understand this it's it's a little more",
    "start": "514670",
    "end": "516800"
  },
  {
    "text": "difficult especially for sequel",
    "start": "516800",
    "end": "518990"
  },
  {
    "text": "databases or relational databases you",
    "start": "518990",
    "end": "521270"
  },
  {
    "text": "may be able to cobble together some",
    "start": "521270",
    "end": "522620"
  },
  {
    "text": "full-text queries and some complex query",
    "start": "522620",
    "end": "525860"
  },
  {
    "text": "writing and function writing but it's",
    "start": "525860",
    "end": "528500"
  },
  {
    "text": "not going to be very",
    "start": "528500",
    "end": "529430"
  },
  {
    "text": "so let's see how integration would",
    "start": "529430",
    "end": "532730"
  },
  {
    "text": "comprehend and machine learning stack",
    "start": "532730",
    "end": "534290"
  },
  {
    "text": "and actually solve this problem for you",
    "start": "534290",
    "end": "536560"
  },
  {
    "text": "so to do that we are going to use the",
    "start": "536560",
    "end": "539660"
  },
  {
    "text": "built-in functions these building",
    "start": "539660",
    "end": "541820"
  },
  {
    "text": "functions are AWS comprehend detects",
    "start": "541820",
    "end": "544250"
  },
  {
    "text": "sentiment and ADA base comprehend",
    "start": "544250",
    "end": "546589"
  },
  {
    "text": "detects sentiment confidence so if you",
    "start": "546589",
    "end": "549589"
  },
  {
    "text": "have used any Amazon machine learning",
    "start": "549589",
    "end": "551720"
  },
  {
    "text": "stack services you would know that when",
    "start": "551720",
    "end": "553820"
  },
  {
    "text": "we do any sort of prediction you have a",
    "start": "553820",
    "end": "555860"
  },
  {
    "text": "result and then you have a confidence",
    "start": "555860",
    "end": "558320"
  },
  {
    "text": "related to that result the confidence",
    "start": "558320",
    "end": "560420"
  },
  {
    "text": "level is where the algorithm is telling",
    "start": "560420",
    "end": "562490"
  },
  {
    "text": "you how confident it is in the",
    "start": "562490",
    "end": "564440"
  },
  {
    "text": "prediction that it has provided so we",
    "start": "564440",
    "end": "567170"
  },
  {
    "text": "get those same values here I want to",
    "start": "567170",
    "end": "571070"
  },
  {
    "text": "spend a quick minute here talking about",
    "start": "571070",
    "end": "573290"
  },
  {
    "text": "this function itself the function takes",
    "start": "573290",
    "end": "575450"
  },
  {
    "text": "essentially three values the first",
    "start": "575450",
    "end": "578060"
  },
  {
    "text": "parameter the function take is the comp",
    "start": "578060",
    "end": "580220"
  },
  {
    "text": "takes is the comment text itself now you",
    "start": "580220",
    "end": "583520"
  },
  {
    "text": "could be sending direct comments or you",
    "start": "583520",
    "end": "586339"
  },
  {
    "text": "know text values or you could be",
    "start": "586339",
    "end": "587930"
  },
  {
    "text": "iterating through a table that's older",
    "start": "587930",
    "end": "590060"
  },
  {
    "text": "that already exists the second value is",
    "start": "590060",
    "end": "592550"
  },
  {
    "text": "language in this case we're using",
    "start": "592550",
    "end": "595070"
  },
  {
    "text": "English but several other languages are",
    "start": "595070",
    "end": "597680"
  },
  {
    "text": "also supported like French etc and",
    "start": "597680",
    "end": "600350"
  },
  {
    "text": "there's also a third value that I'm not",
    "start": "600350",
    "end": "601940"
  },
  {
    "text": "showing here but I'll get to in a second",
    "start": "601940",
    "end": "603800"
  },
  {
    "text": "which is the size of the batch by",
    "start": "603800",
    "end": "607550"
  },
  {
    "text": "default the comprehend functions try to",
    "start": "607550",
    "end": "611600"
  },
  {
    "text": "batch as many as rosy as it can I think",
    "start": "611600",
    "end": "615350"
  },
  {
    "text": "the current sweet spot is about 25 so",
    "start": "615350",
    "end": "618500"
  },
  {
    "text": "that it can send you know lots of rows",
    "start": "618500",
    "end": "621380"
  },
  {
    "text": "together and get good performance so",
    "start": "621380",
    "end": "623150"
  },
  {
    "text": "we'll talk about that in a second so",
    "start": "623150",
    "end": "625480"
  },
  {
    "text": "having said that let's run this function",
    "start": "625480",
    "end": "628220"
  },
  {
    "text": "and let's run this query and see the",
    "start": "628220",
    "end": "630140"
  },
  {
    "text": "results so if you see the results here",
    "start": "630140",
    "end": "634070"
  },
  {
    "text": "you get two values first is the",
    "start": "634070",
    "end": "637459"
  },
  {
    "text": "prediction of the sentiment if it's",
    "start": "637459",
    "end": "639079"
  },
  {
    "text": "positive negative or neutral and then",
    "start": "639079",
    "end": "641270"
  },
  {
    "text": "the second one is the confidence these",
    "start": "641270",
    "end": "644029"
  },
  {
    "text": "are essentially the outputs of the",
    "start": "644029",
    "end": "646100"
  },
  {
    "text": "functions that we pass the values to so",
    "start": "646100",
    "end": "649250"
  },
  {
    "text": "here's an example a positive comment",
    "start": "649250",
    "end": "651770"
  },
  {
    "text": "like this is very useful thank you for",
    "start": "651770",
    "end": "653420"
  },
  {
    "text": "writing it has a sentiment value of",
    "start": "653420",
    "end": "655790"
  },
  {
    "text": "positive and the confidence value of 99",
    "start": "655790",
    "end": "658130"
  },
  {
    "text": "that means the algorithm has",
    "start": "658130",
    "end": "660460"
  },
  {
    "text": "99% confidence level that the prediction",
    "start": "660460",
    "end": "663490"
  },
  {
    "text": "is correct in case of a negative comp",
    "start": "663490",
    "end": "667180"
  },
  {
    "text": "value here I don't like how this was",
    "start": "667180",
    "end": "669790"
  },
  {
    "text": "implemented again the sentiment is",
    "start": "669790",
    "end": "671620"
  },
  {
    "text": "negative and the confidence level is 99%",
    "start": "671620",
    "end": "675030"
  },
  {
    "text": "in case of some other comments that are",
    "start": "675030",
    "end": "680440"
  },
  {
    "text": "not necessarily positive or negative",
    "start": "680440",
    "end": "682320"
  },
  {
    "text": "here is an example an interesting",
    "start": "682320",
    "end": "684700"
  },
  {
    "text": "write-up please add more details",
    "start": "684700",
    "end": "686230"
  },
  {
    "text": "so the algorithm thinks it's neutral and",
    "start": "686230",
    "end": "689860"
  },
  {
    "text": "the confidence level is 51 so you can",
    "start": "689860",
    "end": "692710"
  },
  {
    "text": "see that you can use the actual",
    "start": "692710",
    "end": "694690"
  },
  {
    "text": "prediction and the confidence level",
    "start": "694690",
    "end": "697030"
  },
  {
    "text": "together to make the output a lot more",
    "start": "697030",
    "end": "700330"
  },
  {
    "text": "effective next we're going to talk a",
    "start": "700330",
    "end": "704320"
  },
  {
    "text": "little bit about performance and the",
    "start": "704320",
    "end": "706210"
  },
  {
    "text": "built in performance enhancements that",
    "start": "706210",
    "end": "709480"
  },
  {
    "text": "we have implemented to this algorithm so",
    "start": "709480",
    "end": "713280"
  },
  {
    "text": "let's look at the query plan for this",
    "start": "713280",
    "end": "718830"
  },
  {
    "text": "statement that we just passed right so",
    "start": "719010",
    "end": "721630"
  },
  {
    "text": "we're gonna use explain for that if you",
    "start": "721630",
    "end": "724180"
  },
  {
    "text": "look at the explained query plan you",
    "start": "724180",
    "end": "726580"
  },
  {
    "text": "would see that under the extra column",
    "start": "726580",
    "end": "729220"
  },
  {
    "text": "you see batched machine learning which",
    "start": "729220",
    "end": "731830"
  },
  {
    "text": "means that we are batching all of these",
    "start": "731830",
    "end": "734650"
  },
  {
    "text": "comments for you like I talked about the",
    "start": "734650",
    "end": "736570"
  },
  {
    "text": "sweet spot right now is about 25 and",
    "start": "736570",
    "end": "738820"
  },
  {
    "text": "this is done automatically for you so to",
    "start": "738820",
    "end": "741310"
  },
  {
    "text": "actually demonstrate the performance",
    "start": "741310",
    "end": "743380"
  },
  {
    "text": "enhancement what I'm gonna do is I'm",
    "start": "743380",
    "end": "745570"
  },
  {
    "text": "going to turn off batching and then I'm",
    "start": "745570",
    "end": "747940"
  },
  {
    "text": "going to also turn on batching again and",
    "start": "747940",
    "end": "750280"
  },
  {
    "text": "then we're gonna see the difference",
    "start": "750280",
    "end": "751060"
  },
  {
    "text": "between the batch and the non batch",
    "start": "751060",
    "end": "753340"
  },
  {
    "text": "performances right so to turn the",
    "start": "753340",
    "end": "756220"
  },
  {
    "text": "batching off if you remember we talked",
    "start": "756220",
    "end": "758620"
  },
  {
    "text": "about the third parameter which is the",
    "start": "758620",
    "end": "760330"
  },
  {
    "text": "size of the batch if ice set the size of",
    "start": "760330",
    "end": "763630"
  },
  {
    "text": "the batch to one it's essentially",
    "start": "763630",
    "end": "765580"
  },
  {
    "text": "sending one right at a time that means",
    "start": "765580",
    "end": "767890"
  },
  {
    "text": "we're turning the batching off so let me",
    "start": "767890",
    "end": "770320"
  },
  {
    "text": "run the exact same query with batching",
    "start": "770320",
    "end": "772810"
  },
  {
    "text": "turned off and then run the query again",
    "start": "772810",
    "end": "776860"
  },
  {
    "text": "without any batch parameter which means",
    "start": "776860",
    "end": "779620"
  },
  {
    "text": "the batching will all automatically be",
    "start": "779620",
    "end": "781420"
  },
  {
    "text": "turned on and then look at the",
    "start": "781420",
    "end": "783910"
  },
  {
    "text": "difference between the performance and",
    "start": "783910",
    "end": "785320"
  },
  {
    "text": "to look at the performance difference we",
    "start": "785320",
    "end": "787300"
  },
  {
    "text": "are going to use performance schema okay",
    "start": "787300",
    "end": "793400"
  },
  {
    "text": "let's take a look at the duration for",
    "start": "793400",
    "end": "795830"
  },
  {
    "text": "the query that when we ran it for the",
    "start": "795830",
    "end": "798800"
  },
  {
    "text": "first time so first time when you ran",
    "start": "798800",
    "end": "802700"
  },
  {
    "text": "this query it ran in about 120",
    "start": "802700",
    "end": "804589"
  },
  {
    "text": "milliseconds 119 milliseconds as you can",
    "start": "804589",
    "end": "807050"
  },
  {
    "text": "see that the batching was turned on when",
    "start": "807050",
    "end": "810200"
  },
  {
    "text": "we ran it again with the batching turned",
    "start": "810200",
    "end": "812180"
  },
  {
    "text": "off with the batch size of 1 you can see",
    "start": "812180",
    "end": "815660"
  },
  {
    "text": "it took roughly 294 milliseconds so you",
    "start": "815660",
    "end": "818660"
  },
  {
    "text": "know close to 300 milliseconds so if you",
    "start": "818660",
    "end": "821210"
  },
  {
    "text": "if you look at that with the batching",
    "start": "821210",
    "end": "823940"
  },
  {
    "text": "turned on which is automatic and",
    "start": "823940",
    "end": "825620"
  },
  {
    "text": "batching turned off which is manually",
    "start": "825620",
    "end": "828080"
  },
  {
    "text": "you can do it if you want it to the",
    "start": "828080",
    "end": "830029"
  },
  {
    "text": "difference between the exact same query",
    "start": "830029",
    "end": "831830"
  },
  {
    "text": "is more than twice as long so it is",
    "start": "831830",
    "end": "836000"
  },
  {
    "text": "highly recommended that your batching",
    "start": "836000",
    "end": "837470"
  },
  {
    "text": "turn turn the batching on or you don't",
    "start": "837470",
    "end": "839720"
  },
  {
    "text": "change the batching value and then",
    "start": "839720",
    "end": "841970"
  },
  {
    "text": "overarching advice is to group as many",
    "start": "841970",
    "end": "845930"
  },
  {
    "text": "rows together as possible",
    "start": "845930",
    "end": "848870"
  },
  {
    "text": "this is the reason behind that is that",
    "start": "848870",
    "end": "851240"
  },
  {
    "text": "you need you should be sending as many",
    "start": "851240",
    "end": "853970"
  },
  {
    "text": "rows as possible over the wire because",
    "start": "853970",
    "end": "855950"
  },
  {
    "text": "it's much easier to group those values",
    "start": "855950",
    "end": "857810"
  },
  {
    "text": "together and then get the prediction",
    "start": "857810",
    "end": "859880"
  },
  {
    "text": "just once and then send that prediction",
    "start": "859880",
    "end": "862430"
  },
  {
    "text": "back on the wire as opposed to sending",
    "start": "862430",
    "end": "864980"
  },
  {
    "text": "one row at a time or two rows at a time",
    "start": "864980",
    "end": "866650"
  },
  {
    "text": "and that you know round-trip becomes",
    "start": "866650",
    "end": "869529"
  },
  {
    "text": "exponential explains expensive and",
    "start": "869529",
    "end": "871850"
  },
  {
    "text": "you're you know predictions are going to",
    "start": "871850",
    "end": "874760"
  },
  {
    "text": "get slower so again the advice is to",
    "start": "874760",
    "end": "878750"
  },
  {
    "text": "turn the batching on and then try to",
    "start": "878750",
    "end": "880520"
  },
  {
    "text": "group as many rows in the batch as your",
    "start": "880520",
    "end": "883720"
  },
  {
    "text": "algorithm supports again in this case",
    "start": "883720",
    "end": "886400"
  },
  {
    "text": "which is our comprehend case the",
    "start": "886400",
    "end": "888260"
  },
  {
    "text": "algorithm supports 25 so we are",
    "start": "888260",
    "end": "891410"
  },
  {
    "text": "automatically sending 25 rows in a batch",
    "start": "891410",
    "end": "893510"
  },
  {
    "text": "for you ok so that was the end of the",
    "start": "893510",
    "end": "897800"
  },
  {
    "text": "demo I hope you enjoyed it to summarize",
    "start": "897800",
    "end": "899930"
  },
  {
    "text": "what we learn here today is how easily",
    "start": "899930",
    "end": "901910"
  },
  {
    "text": "you can integrate Amazon comprehend with",
    "start": "901910",
    "end": "903980"
  },
  {
    "text": "Aurra",
    "start": "903980",
    "end": "904610"
  },
  {
    "text": "you can use built-in functions to do",
    "start": "904610",
    "end": "906680"
  },
  {
    "text": "sentiment analysis and to enrich your",
    "start": "906680",
    "end": "908510"
  },
  {
    "text": "relational data you don't have to learn",
    "start": "908510",
    "end": "910790"
  },
  {
    "text": "machine learning you don't have to learn",
    "start": "910790",
    "end": "912470"
  },
  {
    "text": "any new languages like Python or are you",
    "start": "912470",
    "end": "915050"
  },
  {
    "text": "can just use your familiar sequel",
    "start": "915050",
    "end": "916640"
  },
  {
    "text": "language to achieve all of this and we",
    "start": "916640",
    "end": "918860"
  },
  {
    "text": "also reviewed how you can use batching",
    "start": "918860",
    "end": "921680"
  },
  {
    "text": "for your advantage and",
    "start": "921680",
    "end": "923150"
  },
  {
    "text": "optimal performance with that I'd like",
    "start": "923150",
    "end": "926510"
  },
  {
    "text": "to thank you for taking the time and",
    "start": "926510",
    "end": "928250"
  },
  {
    "text": "watching this video I hope it was",
    "start": "928250",
    "end": "930470"
  },
  {
    "text": "beneficial and I'd like to wish you",
    "start": "930470",
    "end": "932600"
  },
  {
    "text": "happy computing from all of us here at",
    "start": "932600",
    "end": "934580"
  },
  {
    "text": "AWS",
    "start": "934580",
    "end": "937120"
  }
]