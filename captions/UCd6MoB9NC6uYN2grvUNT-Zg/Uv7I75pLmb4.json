[
  {
    "text": "[Music]",
    "start": "3890",
    "end": "7009"
  },
  {
    "text": "hello hello welcome to solving with AWS",
    "start": "9349",
    "end": "12269"
  },
  {
    "text": "solutions your deep dive into",
    "start": "12269",
    "end": "13769"
  },
  {
    "text": "architecture is built by AWS that are",
    "start": "13769",
    "end": "16289"
  },
  {
    "text": "ready to deploy instantly in the cloud",
    "start": "16289",
    "end": "17820"
  },
  {
    "text": "I'm Rob your host joined today with a",
    "start": "17820",
    "end": "19740"
  },
  {
    "text": "man who lights sails in the Hudson River",
    "start": "19740",
    "end": "21180"
  },
  {
    "text": "Tom hello and welcome back today we will",
    "start": "21180",
    "end": "24630"
  },
  {
    "text": "be exploring distributed load testing on",
    "start": "24630",
    "end": "26609"
  },
  {
    "text": "AWS a solution that simulates thousands",
    "start": "26609",
    "end": "29369"
  },
  {
    "text": "of concurrent connections to a single",
    "start": "29369",
    "end": "30990"
  },
  {
    "text": "endpoint so really a useful tool for",
    "start": "30990",
    "end": "32550"
  },
  {
    "text": "anyone entering on their application",
    "start": "32550",
    "end": "34590"
  },
  {
    "text": "development and performance it's",
    "start": "34590",
    "end": "36120"
  },
  {
    "text": "absolutely right all right let's get",
    "start": "36120",
    "end": "37770"
  },
  {
    "text": "into it so table talk to me about",
    "start": "37770",
    "end": "39860"
  },
  {
    "text": "distributed load testing what exactly",
    "start": "39860",
    "end": "42059"
  },
  {
    "text": "are we testing as part of this so",
    "start": "42059",
    "end": "43739"
  },
  {
    "text": "imagine you're a developer you've built",
    "start": "43739",
    "end": "45660"
  },
  {
    "text": "your application you know it works",
    "start": "45660",
    "end": "47579"
  },
  {
    "text": "because you've done your unit testing",
    "start": "47579",
    "end": "49140"
  },
  {
    "text": "what you need to know next is is this",
    "start": "49140",
    "end": "50969"
  },
  {
    "text": "going to perform in production and is it",
    "start": "50969",
    "end": "53100"
  },
  {
    "text": "going to perform at scale so scalability",
    "start": "53100",
    "end": "55050"
  },
  {
    "text": "is important one user is one thing but",
    "start": "55050",
    "end": "56789"
  },
  {
    "text": "testing it for a thousand is different",
    "start": "56789",
    "end": "58559"
  },
  {
    "text": "exactly right this solution builds built",
    "start": "58559",
    "end": "61230"
  },
  {
    "text": "out a framework where you can easily",
    "start": "61230",
    "end": "63030"
  },
  {
    "text": "test your applications under load by",
    "start": "63030",
    "end": "65430"
  },
  {
    "text": "using elastic container services to spin",
    "start": "65430",
    "end": "69390"
  },
  {
    "text": "up containers that will create hundreds",
    "start": "69390",
    "end": "71880"
  },
  {
    "text": "and hundreds of connections to your",
    "start": "71880",
    "end": "73350"
  },
  {
    "text": "endpoint and you can spin up hundreds of",
    "start": "73350",
    "end": "75689"
  },
  {
    "text": "hundreds of those containers awesome so",
    "start": "75689",
    "end": "77400"
  },
  {
    "text": "this is our landing page walk me through",
    "start": "77400",
    "end": "78750"
  },
  {
    "text": "this yep so like all our solutions we",
    "start": "78750",
    "end": "80880"
  },
  {
    "text": "have a link to a CloudFormation template",
    "start": "80880",
    "end": "83070"
  },
  {
    "text": "this will spin up the solution in your",
    "start": "83070",
    "end": "84900"
  },
  {
    "text": "account with a couple of clicks and a",
    "start": "84900",
    "end": "86850"
  },
  {
    "text": "detailed deployment guide and we also",
    "start": "86850",
    "end": "89220"
  },
  {
    "text": "have the source code available on github",
    "start": "89220",
    "end": "91140"
  },
  {
    "text": "if you want to take it customize it and",
    "start": "91140",
    "end": "93030"
  },
  {
    "text": "do your own thing we have a wonderful",
    "start": "93030",
    "end": "94740"
  },
  {
    "text": "architecture diagram let's walk through",
    "start": "94740",
    "end": "96360"
  },
  {
    "text": "that we do it so the solution comprises",
    "start": "96360",
    "end": "99270"
  },
  {
    "text": "really of a front end and a back end if",
    "start": "99270",
    "end": "101790"
  },
  {
    "text": "we start with a front end we have a web",
    "start": "101790",
    "end": "104790"
  },
  {
    "text": "console a UI that we can use to interact",
    "start": "104790",
    "end": "107340"
  },
  {
    "text": "with the solution and then a API so that",
    "start": "107340",
    "end": "110790"
  },
  {
    "text": "allows you to create tests view status",
    "start": "110790",
    "end": "113939"
  },
  {
    "text": "of tests rerun tests delete tests that",
    "start": "113939",
    "end": "116490"
  },
  {
    "text": "type of operations so the UI comes from",
    "start": "116490",
    "end": "118680"
  },
  {
    "text": "the CloudFormation template this is",
    "start": "118680",
    "end": "119939"
  },
  {
    "text": "where the users actually start",
    "start": "119939",
    "end": "121619"
  },
  {
    "text": "configuring the test itself that's right",
    "start": "121619",
    "end": "123479"
  },
  {
    "text": "so from that we then have the backend",
    "start": "123479",
    "end": "125670"
  },
  {
    "text": "and that comprises really of two things",
    "start": "125670",
    "end": "127290"
  },
  {
    "text": "there's a docker pipeline and then the",
    "start": "127290",
    "end": "129959"
  },
  {
    "text": "actual testing engine itself and where's",
    "start": "129959",
    "end": "132150"
  },
  {
    "text": "the docker pipeline coming from",
    "start": "132150",
    "end": "133670"
  },
  {
    "text": "so the solution uses a open-source",
    "start": "133670",
    "end": "137630"
  },
  {
    "text": "software called torus that a camp there",
    "start": "137630",
    "end": "140660"
  },
  {
    "text": "is a docker image available on docker",
    "start": "140660",
    "end": "142610"
  },
  {
    "text": "hub that you can use and that allows you",
    "start": "142610",
    "end": "145430"
  },
  {
    "text": "to generate hundreds of hundreds of",
    "start": "145430",
    "end": "147349"
  },
  {
    "text": "concurrent connections to an endpoint",
    "start": "147349",
    "end": "149239"
  },
  {
    "text": "it also supports jmeter and gatling",
    "start": "149239",
    "end": "153290"
  },
  {
    "text": "which are other testing tools okay",
    "start": "153290",
    "end": "154940"
  },
  {
    "text": "very common in it this is the actual",
    "start": "154940",
    "end": "156380"
  },
  {
    "text": "testing part of these so this is the the",
    "start": "156380",
    "end": "158450"
  },
  {
    "text": "application that's going to do the",
    "start": "158450",
    "end": "159739"
  },
  {
    "text": "testing and that comes in the form of a",
    "start": "159739",
    "end": "161720"
  },
  {
    "text": "docker image so our back-end pipeline is",
    "start": "161720",
    "end": "164540"
  },
  {
    "text": "going to take that image package it up",
    "start": "164540",
    "end": "166730"
  },
  {
    "text": "for us put and push it out to s3 in the",
    "start": "166730",
    "end": "169130"
  },
  {
    "text": "customers account and then we're going",
    "start": "169130",
    "end": "170989"
  },
  {
    "text": "to use co-pi p-- line and code build to",
    "start": "170989",
    "end": "173239"
  },
  {
    "text": "then build that image and register it",
    "start": "173239",
    "end": "175850"
  },
  {
    "text": "with our elastic container set where is",
    "start": "175850",
    "end": "178069"
  },
  {
    "text": "the actual testing occurring so the",
    "start": "178069",
    "end": "180769"
  },
  {
    "text": "testing itself is being run in AWS",
    "start": "180769",
    "end": "183650"
  },
  {
    "text": "Fargate okay so AWS Fargate is a managed",
    "start": "183650",
    "end": "186709"
  },
  {
    "text": "service that will let you run your",
    "start": "186709",
    "end": "189049"
  },
  {
    "text": "containers on the elastic container",
    "start": "189049",
    "end": "191269"
  },
  {
    "text": "service without having to worry about",
    "start": "191269",
    "end": "192980"
  },
  {
    "text": "networking or the underlining",
    "start": "192980",
    "end": "195100"
  },
  {
    "text": "infrastructure or anything like that so",
    "start": "195100",
    "end": "197989"
  },
  {
    "text": "it's literally just spin up tasks run",
    "start": "197989",
    "end": "200900"
  },
  {
    "text": "the number of containers that you want",
    "start": "200900",
    "end": "202160"
  },
  {
    "text": "everything else is taken care of so far",
    "start": "202160",
    "end": "204260"
  },
  {
    "text": "gates actually really taking care of",
    "start": "204260",
    "end": "206030"
  },
  {
    "text": "that back in area where you don't have",
    "start": "206030",
    "end": "207470"
  },
  {
    "text": "to worry about the scalability of it's",
    "start": "207470",
    "end": "208730"
  },
  {
    "text": "exactly so that's the core of the",
    "start": "208730",
    "end": "211609"
  },
  {
    "text": "solution okay and then around that we",
    "start": "211609",
    "end": "213980"
  },
  {
    "text": "have a lambda function that will take",
    "start": "213980",
    "end": "217310"
  },
  {
    "text": "the requests from our API and that's",
    "start": "217310",
    "end": "219380"
  },
  {
    "text": "what's actually running the the tests so",
    "start": "219380",
    "end": "221570"
  },
  {
    "text": "okay it's going to store a test template",
    "start": "221570",
    "end": "224359"
  },
  {
    "text": "in s3 it's going to store all of the",
    "start": "224359",
    "end": "226880"
  },
  {
    "text": "information that we're collecting in",
    "start": "226880",
    "end": "228320"
  },
  {
    "text": "dynamo and then we're using sqs to queue",
    "start": "228320",
    "end": "231410"
  },
  {
    "text": "up those tasks in AWS Fargate so that we",
    "start": "231410",
    "end": "234470"
  },
  {
    "text": "can start spinning up our containers",
    "start": "234470",
    "end": "235910"
  },
  {
    "text": "alright so can you show me a little bit",
    "start": "235910",
    "end": "237380"
  },
  {
    "text": "about the front-end on how we configured",
    "start": "237380",
    "end": "239180"
  },
  {
    "text": "some of these tests yeah",
    "start": "239180",
    "end": "240410"
  },
  {
    "text": "so it's a nice simple front end there's",
    "start": "240410",
    "end": "243470"
  },
  {
    "text": "a dashboard if we go back to that you",
    "start": "243470",
    "end": "245720"
  },
  {
    "text": "can see here a couple of tests that I've",
    "start": "245720",
    "end": "248180"
  },
  {
    "text": "set up but okay I've got one running",
    "start": "248180",
    "end": "249650"
  },
  {
    "text": "I've got one completed from the create",
    "start": "249650",
    "end": "253220"
  },
  {
    "text": "test page so the warning here saying",
    "start": "253220",
    "end": "255709"
  },
  {
    "text": "that we currently have a test running so",
    "start": "255709",
    "end": "257660"
  },
  {
    "text": "let's not kick off another one okay the",
    "start": "257660",
    "end": "259820"
  },
  {
    "text": "reason for that is all of the all of the",
    "start": "259820",
    "end": "262070"
  },
  {
    "text": "containers will be sending information",
    "start": "262070",
    "end": "263720"
  },
  {
    "text": "back to the same location so currently",
    "start": "263720",
    "end": "266270"
  },
  {
    "text": "it doesn't support multi",
    "start": "266270",
    "end": "267440"
  },
  {
    "text": "tests running at the same time because",
    "start": "267440",
    "end": "268940"
  },
  {
    "text": "no aggregated results would be a mixture",
    "start": "268940",
    "end": "271520"
  },
  {
    "text": "of the two but as part of this UX out of",
    "start": "271520",
    "end": "273530"
  },
  {
    "text": "the cloud formation template we're",
    "start": "273530",
    "end": "274730"
  },
  {
    "text": "gathering some base information on how",
    "start": "274730",
    "end": "276440"
  },
  {
    "text": "to configure the tests we want to run so",
    "start": "276440",
    "end": "278840"
  },
  {
    "text": "give it a name give it a description",
    "start": "278840",
    "end": "280610"
  },
  {
    "text": "task count is the number of containers",
    "start": "280610",
    "end": "283160"
  },
  {
    "text": "that you want to run concurrency is the",
    "start": "283160",
    "end": "286100"
  },
  {
    "text": "number for each container how many",
    "start": "286100",
    "end": "287780"
  },
  {
    "text": "concurrent connections that's going to",
    "start": "287780",
    "end": "289370"
  },
  {
    "text": "create and then a ramp up time and hold",
    "start": "289370",
    "end": "291950"
  },
  {
    "text": "time is how long am I going to get from",
    "start": "291950",
    "end": "294380"
  },
  {
    "text": "start to get up to that number of",
    "start": "294380",
    "end": "296240"
  },
  {
    "text": "concurrent connections and then how long",
    "start": "296240",
    "end": "298190"
  },
  {
    "text": "am I going to hold that test for okay",
    "start": "298190",
    "end": "301070"
  },
  {
    "text": "currently we support single endpoint but",
    "start": "301070",
    "end": "304160"
  },
  {
    "text": "we also support different get put post",
    "start": "304160",
    "end": "307310"
  },
  {
    "text": "and delete operations and you can",
    "start": "307310",
    "end": "309680"
  },
  {
    "text": "actually pass in headers and payload of",
    "start": "309680",
    "end": "312950"
  },
  {
    "text": "body text if so a lot of flexible",
    "start": "312950",
    "end": "314900"
  },
  {
    "text": "information to run as part yeah so you",
    "start": "314900",
    "end": "316490"
  },
  {
    "text": "can there's a number of ways you can",
    "start": "316490",
    "end": "318170"
  },
  {
    "text": "test different types of endpoints do you",
    "start": "318170",
    "end": "320030"
  },
  {
    "text": "have a test currently running so I have",
    "start": "320030",
    "end": "321620"
  },
  {
    "text": "a I do we've got a running test here",
    "start": "321620",
    "end": "324460"
  },
  {
    "text": "this has been running for a couple of",
    "start": "324460",
    "end": "326720"
  },
  {
    "text": "minutes so here's the details of the",
    "start": "326720",
    "end": "328310"
  },
  {
    "text": "test and you can see I asked for 20",
    "start": "328310",
    "end": "330590"
  },
  {
    "text": "containers and I've currently got 20",
    "start": "330590",
    "end": "332660"
  },
  {
    "text": "containers running once that's finished",
    "start": "332660",
    "end": "334910"
  },
  {
    "text": "on the backend each of the containers",
    "start": "334910",
    "end": "338060"
  },
  {
    "text": "will run their tests take the results",
    "start": "338060",
    "end": "340490"
  },
  {
    "text": "and then store that as in the form of an",
    "start": "340490",
    "end": "342680"
  },
  {
    "text": "XML file in s3 and then our back-end",
    "start": "342680",
    "end": "345140"
  },
  {
    "text": "lambda function once all of the",
    "start": "345140",
    "end": "346700"
  },
  {
    "text": "containers have finished we'll take that",
    "start": "346700",
    "end": "348620"
  },
  {
    "text": "information and aggregate it and and",
    "start": "348620",
    "end": "351590"
  },
  {
    "text": "pass all of that information into deines",
    "start": "351590",
    "end": "354200"
  },
  {
    "text": "so how do we see some of the results and",
    "start": "354200",
    "end": "355910"
  },
  {
    "text": "so if we look at a completed test again",
    "start": "355910",
    "end": "358550"
  },
  {
    "text": "here's the summary of what we asked for",
    "start": "358550",
    "end": "360350"
  },
  {
    "text": "and then here's our results so we've got",
    "start": "360350",
    "end": "362419"
  },
  {
    "text": "average response times Layton sees we're",
    "start": "362419",
    "end": "365240"
  },
  {
    "text": "getting a cloud walk met a cloud watch",
    "start": "365240",
    "end": "366860"
  },
  {
    "text": "metric so we can see how we're",
    "start": "366860",
    "end": "368270"
  },
  {
    "text": "performing a number of other data points",
    "start": "368270",
    "end": "371240"
  },
  {
    "text": "and we're also getting a history so you",
    "start": "371240",
    "end": "373790"
  },
  {
    "text": "imagine you could run this once do some",
    "start": "373790",
    "end": "376880"
  },
  {
    "text": "fine-tuning on your on your end point on",
    "start": "376880",
    "end": "379100"
  },
  {
    "text": "your API and then rerun the test again",
    "start": "379100",
    "end": "381500"
  },
  {
    "text": "to see how that improves the response so",
    "start": "381500",
    "end": "384890"
  },
  {
    "text": "developers are able to iterate and see",
    "start": "384890",
    "end": "386990"
  },
  {
    "text": "their results over time with the",
    "start": "386990",
    "end": "388400"
  },
  {
    "text": "improvements for the making to their",
    "start": "388400",
    "end": "389630"
  },
  {
    "text": "application and the most important part",
    "start": "389630",
    "end": "391070"
  },
  {
    "text": "they're seeing at scale that's awesome",
    "start": "391070",
    "end": "392870"
  },
  {
    "text": "so thanks for walking through distribute",
    "start": "392870",
    "end": "394400"
  },
  {
    "text": "load testing you're welcome so that was",
    "start": "394400",
    "end": "396470"
  },
  {
    "text": "a deep dive into our distributed load",
    "start": "396470",
    "end": "398240"
  },
  {
    "text": "testing solution on AWS this solution",
    "start": "398240",
    "end": "401120"
  },
  {
    "text": "moves all the complexities of generating",
    "start": "401120",
    "end": "403010"
  },
  {
    "text": "load to test your applications at scale",
    "start": "403010",
    "end": "404900"
  },
  {
    "text": "thanks for watching",
    "start": "404900",
    "end": "406010"
  },
  {
    "text": "launch this ATS solution or other",
    "start": "406010",
    "end": "407810"
  },
  {
    "text": "solutions via our webpage see you next",
    "start": "407810",
    "end": "409880"
  },
  {
    "text": "time",
    "start": "409880",
    "end": "412000"
  },
  {
    "text": "you",
    "start": "415810",
    "end": "417870"
  }
]