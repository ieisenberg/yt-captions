[
  {
    "start": "0",
    "end": "104000"
  },
  {
    "text": "Lawrence you want to introduce yourself oh yeah sure I'm a tech lead for GoPro",
    "start": "5720",
    "end": "10849"
  },
  {
    "text": "and so how many you guys know GoPro plus oh wow geez give you a little background",
    "start": "10849",
    "end": "18779"
  },
  {
    "text": "like the GoPro platform cover kind of like how our platform work what's what's",
    "start": "18779",
    "end": "26250"
  },
  {
    "text": "go pro Plus then we're good continued I kind of like why do we choose ECS you know what was before ECS",
    "start": "26250",
    "end": "34950"
  },
  {
    "text": "and what were options besides easiest then the migration process here we can't",
    "start": "34950",
    "end": "40530"
  },
  {
    "text": "go to nitty-gritty stuff you know you look more important stuff the stuff you probably care like how do I qui did that",
    "start": "40530",
    "end": "46739"
  },
  {
    "text": "I've get ton of a little I am Rose Terre forums go throw some buzzwords orchestration mm-hmm pretty cool huh",
    "start": "46739",
    "end": "53010"
  },
  {
    "text": "and next finally lessons learned what the heck did we learn yeah we make mistakes we all makes the stick",
    "start": "53010",
    "end": "59609"
  },
  {
    "text": "but part of being a software developer it's kind of learning from your mistakes and improving and you guys learn from",
    "start": "59609",
    "end": "65670"
  },
  {
    "text": "our so you don't repeat our mistakes so as we mentioned so GoPro plus is one of the main services we run on our cloud",
    "start": "65670",
    "end": "71670"
  },
  {
    "text": "platform it was launched in 2016 it's a subscription service that makes it easy",
    "start": "71670",
    "end": "77070"
  },
  {
    "text": "to automatically upload share and edit your videos you can do that from your mobile device you can do that straight from the new GoPro cameras like the hero",
    "start": "77070",
    "end": "83430"
  },
  {
    "text": "5 and you can share it with all of your friends of course so to make this",
    "start": "83430",
    "end": "88439"
  },
  {
    "text": "possible we needed particularly needed a scalable and cost-efficient solution GoPro has a lot of very enthusiastic",
    "start": "88439",
    "end": "96170"
  },
  {
    "text": "customers around the world and they have a lot of video content a lot of photo",
    "start": "96170",
    "end": "101400"
  },
  {
    "text": "content that they want to upload and share let's talk a little bit about some of the platform components so the AWS",
    "start": "101400",
    "end": "107820"
  },
  {
    "start": "104000",
    "end": "104000"
  },
  {
    "text": "platform runs more than just GoPro plus it also does these things so media",
    "start": "107820",
    "end": "113040"
  },
  {
    "text": "upload as we saw photo and video processing as you would expect also users subscription management of users",
    "start": "113040",
    "end": "119850"
  },
  {
    "text": "etc we also do device management so GoPro plus the GoPro platform rather",
    "start": "119850",
    "end": "126680"
  },
  {
    "text": "also manages our devices out in the field like the hero 5 cameras and like the drones and like the mobile apps",
    "start": "126680",
    "end": "132950"
  },
  {
    "text": "that run our software so all this is coming into our cloud platform consuming our api's and in some cases using the",
    "start": "132950",
    "end": "139460"
  },
  {
    "text": "web front-ends that we have so today our ECS cluster has around 40 services",
    "start": "139460",
    "end": "145040"
  },
  {
    "text": "running on an introduction we process hundreds of thousands of API requests per minute sometimes half a million per",
    "start": "145040",
    "end": "151820"
  },
  {
    "text": "minute at peak and right now we've migrated all of our workers over to ecs and we're in the process of migrating",
    "start": "151820",
    "end": "157940"
  },
  {
    "text": "all of our web services we're thinking that we'll have all our web services running on ecs by the end of the year",
    "start": "157940",
    "end": "163280"
  },
  {
    "text": "we're basically a bunch of micro services and not only dad we have a bunch of clients and these clients all",
    "start": "163280",
    "end": "169820"
  },
  {
    "text": "talk to our micro services and these micro service are both synchronous and asynchronous and one thing I want to",
    "start": "169820",
    "end": "176000"
  },
  {
    "text": "kind of show you is a little flow like how kind of like an asynchronous part and part work and this is where ECS kind",
    "start": "176000",
    "end": "184220"
  },
  {
    "text": "of fits may fit in pretty much our clients and apps kind of talk to our web",
    "start": "184220",
    "end": "189530"
  },
  {
    "text": "service and there you're asking for some work done and we got a track and get skewed by",
    "start": "189530",
    "end": "195770"
  },
  {
    "text": "these asynchronous workers they could be doing something complex like processing media or doing some orchestrating some",
    "start": "195770",
    "end": "204200"
  },
  {
    "text": "accounts for our users after it finally done then it talks back to our web server saying I am done and then our",
    "start": "204200",
    "end": "210830"
  },
  {
    "text": "clients will be constantly checking back to web service is it done and then once it's done then it knows that the work is",
    "start": "210830",
    "end": "217790"
  },
  {
    "text": "ready or it could access it could access the media or stuff let's go to the next part",
    "start": "217790",
    "end": "223160"
  },
  {
    "start": "222000",
    "end": "222000"
  },
  {
    "text": "in the next section is we're talking about why do we choose you know ECS and",
    "start": "223160",
    "end": "228340"
  },
  {
    "text": "that comes to one part here before ECS we were using a third-party solution to",
    "start": "228340",
    "end": "235550"
  },
  {
    "text": "do you know all that complex stuff I show you like that asynchronous event-driven system where the workers",
    "start": "235550",
    "end": "242930"
  },
  {
    "text": "doing all this stuff in it in the background and then we needed like developers needed like a simple",
    "start": "242930",
    "end": "248560"
  },
  {
    "text": "simple self-serve service but there was drawbacks you know it didn't really give",
    "start": "248560",
    "end": "253640"
  },
  {
    "text": "us transparency we couldn't control the scalability and then there's like too",
    "start": "253640",
    "end": "259370"
  },
  {
    "text": "much abstraction to debug our problems and then also orchestrations there was a lot",
    "start": "259370",
    "end": "265250"
  },
  {
    "text": "orchestration issues it wasn't quite perfect what we needed and then monitoring alert you know they didn't",
    "start": "265250",
    "end": "270650"
  },
  {
    "text": "have that for us we had to build our own solution we end up building some cloud wash thing to support this there's a few",
    "start": "270650",
    "end": "277610"
  },
  {
    "text": "details there we might go into so especially around scaling up when we were using this third-party worker",
    "start": "277610",
    "end": "284240"
  },
  {
    "start": "280000",
    "end": "280000"
  },
  {
    "text": "orchestration platform there scaling algorithm was basically a black box it was something they provided as a service",
    "start": "284240",
    "end": "290270"
  },
  {
    "text": "we didn't get much control over that so that was a problem for us we didn't always know how much we were scaling or",
    "start": "290270",
    "end": "296150"
  },
  {
    "text": "how much compute we were using also before we moved DCs we ran our own apps and micro services on our own AWS",
    "start": "296150",
    "end": "303979"
  },
  {
    "start": "299000",
    "end": "299000"
  },
  {
    "text": "platform but we did it a little bit differently we did it in a pretty naive way so although we were using docker we",
    "start": "303979",
    "end": "310520"
  },
  {
    "text": "were running basically one docker app container per instance this is how a lot you might start out if you're not using",
    "start": "310520",
    "end": "316940"
  },
  {
    "text": "an orchestration engine and it works it makes sense in a certain kind of way but",
    "start": "316940",
    "end": "322990"
  },
  {
    "text": "it obviously wasn't as efficient as using something like UCS where you can pack all of the containers onto each",
    "start": "322990",
    "end": "329060"
  },
  {
    "text": "instance also we were using this time-tested model of rolling ami images",
    "start": "329060",
    "end": "334880"
  },
  {
    "text": "and then creating auto scaling groups from the ami images so that's a pattern",
    "start": "334880",
    "end": "340490"
  },
  {
    "text": "that I'm sure a lot of the audience is familiar with we did that for a very long time so that's simple because",
    "start": "340490",
    "end": "346190"
  },
  {
    "text": "you're creating an ami image at deploy time you're creating the entire image",
    "start": "346190",
    "end": "351260"
  },
  {
    "text": "and then you're just you know that that's going to become your next auto scaling group so it's predictable in that sense it's also very inefficient",
    "start": "351260",
    "end": "358039"
  },
  {
    "text": "because it's building an image might be rather large it takes a long time to actually create the ami and for us we",
    "start": "358039",
    "end": "364190"
  },
  {
    "text": "were spending 30 sometimes 45 minutes on a deploy of a single micro service",
    "start": "364190",
    "end": "370060"
  },
  {
    "text": "so we have long and error-prone deployments so that was where we were at before we decided to move over to ECS",
    "start": "370690",
    "end": "376660"
  },
  {
    "text": "and in order to get there we did an evaluation process of these two familiar",
    "start": "376660",
    "end": "383200"
  },
  {
    "start": "380000",
    "end": "380000"
  },
  {
    "text": "products we looked at kubernetes and our engineering teams and devops team spent quite a while evaluating both kubernetes",
    "start": "383200",
    "end": "389500"
  },
  {
    "text": "and UCS we did a proof of concept with each and we had a long list of maybe 50",
    "start": "389500",
    "end": "395020"
  },
  {
    "text": "criteria that we needed for our platform we found that essentially both of these solutions offered almost everything that",
    "start": "395020",
    "end": "401200"
  },
  {
    "text": "we needed a lot of people really liked kubernetes we liked kubernetes a lot but we found that there were a few key items",
    "start": "401200",
    "end": "407950"
  },
  {
    "text": "that ECS really did that kubernetes wasn't going to do for us so specifically I am roles specific to each",
    "start": "407950",
    "end": "414400"
  },
  {
    "text": "service that was really important to us we wanted to be able to isolate the security of each service from other",
    "start": "414400",
    "end": "419860"
  },
  {
    "text": "services running in the cluster because we have a lot of different databases we have a lot of s3 buckets as qsq s",
    "start": "419860",
    "end": "425650"
  },
  {
    "text": "etcetera so at least at the time when we evaluated kubernetes there wasn't a good way to do that I think there was a",
    "start": "425650",
    "end": "431440"
  },
  {
    "text": "third-party way to kind of bolt it on it didn't seem very stable and we didn't really trust it with the security of",
    "start": "431440",
    "end": "436720"
  },
  {
    "text": "these services second major point of course is that we were really familiar with AWS platform already our DevOps",
    "start": "436720",
    "end": "442450"
  },
  {
    "text": "team has been running in AWS for a few years now so very familiar with auto-scaling group's cloud watch you",
    "start": "442450",
    "end": "449830"
  },
  {
    "text": "know use it on a daily basis so ECS for us easy one more level of abstraction on",
    "start": "449830",
    "end": "456520"
  },
  {
    "text": "top of the services you know that we all know and love another big one for us was",
    "start": "456520",
    "end": "463210"
  },
  {
    "text": "enterprise support so we have enterprise support with AWS we love those guys they're awesome we work with them on a",
    "start": "463210",
    "end": "468640"
  },
  {
    "text": "weekly basis and moving our entire production stack to a new container orchestration platform felt really",
    "start": "468640",
    "end": "475330"
  },
  {
    "text": "important especially to the business to have enterprise support available and it's definitely come in handy we've",
    "start": "475330",
    "end": "480640"
  },
  {
    "text": "talked to you know the product team at ECS on numerous occasions they've made themselves very available to us so",
    "start": "480640",
    "end": "486340"
  },
  {
    "text": "that's been a really good good thing and then finally very much of importance to",
    "start": "486340",
    "end": "492940"
  },
  {
    "text": "the ops guys there's no real cluster maintenance with ECS so maybe what",
    "start": "492940",
    "end": "498669"
  },
  {
    "text": "you're doing is you're updating your ami image that's run your cluster that's as simple as editing the launch configuration there's not",
    "start": "498669",
    "end": "504810"
  },
  {
    "text": "much else you have to do so I just wanted to get kind of lay the land for the migration so at GoPro we have quite a few different development teams",
    "start": "504810",
    "end": "510620"
  },
  {
    "text": "working in different locations and even among our engineering teams locally",
    "start": "510620",
    "end": "516990"
  },
  {
    "text": "there's five or six of them I think that all had workers that were running an AWS that we needed to pour it over to ECS",
    "start": "516990",
    "end": "523490"
  },
  {
    "text": "for example Lawrence's team is focused on media ingestion and processing and metadata processing so in remove TECs we",
    "start": "523490",
    "end": "531330"
  },
  {
    "text": "decided to first migrate all of the workers before any of the web services so these are just these asynchronous",
    "start": "531330",
    "end": "537120"
  },
  {
    "text": "workers that place jobs on a queue and other workers pick up jobs from the queue as Lawrence showed and so that's",
    "start": "537120",
    "end": "544290"
  },
  {
    "text": "where we started one of the things we were able to get out of this deal is infrastructure as code we went with",
    "start": "544290",
    "end": "549750"
  },
  {
    "text": "terraform we had some guys on the team that we're familiar with terraform so we use that and we terraformed almost",
    "start": "549750",
    "end": "554790"
  },
  {
    "text": "everything starting with VP sees clusters sqs queues the task definitions",
    "start": "554790",
    "end": "560310"
  },
  {
    "text": "themselves and the docker image tag that's baked into the service or task definition the resource reservations for",
    "start": "560310",
    "end": "568260"
  },
  {
    "text": "each service in ETS I am roles environment variables etc so all of this we encoded in terraform this for us was",
    "start": "568260",
    "end": "575730"
  },
  {
    "text": "a huge improvement to the previous way of doing things which was no code at all and just people would spin up these ec2",
    "start": "575730",
    "end": "582570"
  },
  {
    "text": "instances and hack on them and change things and it wasn't always easy to tell what had been changed in fact we had no",
    "start": "582570",
    "end": "587580"
  },
  {
    "text": "idea it gives us more transparency definitely yeah so we decided to check in the terraform code for each of our",
    "start": "587580",
    "end": "595410"
  },
  {
    "text": "different parts of the stack with the service itself so the DevOps team for us",
    "start": "595410",
    "end": "600990"
  },
  {
    "text": "developed the base modules in terraform then the development teams for each service imported those base modules and",
    "start": "600990",
    "end": "606960"
  },
  {
    "text": "basically just edited them a little bit but mostly just filled in the variables that they needed to do to get their service stack up and running",
    "start": "606960",
    "end": "614260"
  },
  {
    "text": "[Music] so those are just obvious kinds of variables like the name tasks definition",
    "start": "614260",
    "end": "621510"
  },
  {
    "text": "importantly the resource allocation for each task so moving to ECS our",
    "start": "621510",
    "end": "627670"
  },
  {
    "text": "development teams didn't really know how much CPU or memory their services would consume because they didn't really care",
    "start": "627670",
    "end": "633400"
  },
  {
    "text": "because we would over provision all of our capacity in ec2 moving ECS actually",
    "start": "633400",
    "end": "638410"
  },
  {
    "text": "made us measure all these things because you have to provide that minimum or maximum threshold so that was something",
    "start": "638410",
    "end": "644320"
  },
  {
    "text": "we sort of did for the first time ultimately that led to a much more efficient use of compute because we're",
    "start": "644320",
    "end": "650110"
  },
  {
    "text": "only allocating what we actually need and then the last bullet point here it's",
    "start": "650110",
    "end": "655330"
  },
  {
    "text": "just about the cloud watch alarms on sqs queues so we scale our workers based on",
    "start": "655330",
    "end": "660880"
  },
  {
    "text": "the length of the queue so there's more job or items in the queue then we boot up more containers during the workers another big part of this as I mentioned",
    "start": "660880",
    "end": "667180"
  },
  {
    "start": "666000",
    "end": "666000"
  },
  {
    "text": "was V pcs so we introduced new V pcs for every environment when we went to e CS",
    "start": "667180",
    "end": "672610"
  },
  {
    "text": "just made it really easy to segregate our QA staging and production environments and we terraformed all of",
    "start": "672610",
    "end": "677950"
  },
  {
    "text": "that like I said and we also moved over to the new application load balancers they were new at the time so just a",
    "start": "677950",
    "end": "683500"
  },
  {
    "text": "couple easy wins that we kind of got for this migration I think it's always a good practice to kind of look at the",
    "start": "683500",
    "end": "688960"
  },
  {
    "text": "whole environment when you're going to migrate to something like a new platform let's talk about kind of like the",
    "start": "688960",
    "end": "694390"
  },
  {
    "start": "694000",
    "end": "694000"
  },
  {
    "text": "developer side of this migration you know porting code you know it's our just",
    "start": "694390",
    "end": "699970"
  },
  {
    "text": "to give you a little context like I show you earlier that we process a lot as via and this media takes time to process as",
    "start": "699970",
    "end": "707320"
  },
  {
    "text": "a result is we have these long-running workers that is doing all these tasks and it takes times launch Tim so ideally",
    "start": "707320",
    "end": "714460"
  },
  {
    "text": "we'd like it continuously running and there may be doing multiple tasks at a time I think we had the support was",
    "start": "714460",
    "end": "720130"
  },
  {
    "text": "draining that's after you downscale and I'll show you later that it wasn't a big",
    "start": "720130",
    "end": "727209"
  },
  {
    "text": "change for us and the final thing we had to do was feature flipping it was it was a migration process you know we didn't",
    "start": "727209",
    "end": "734440"
  },
  {
    "text": "want to go 1% sqs automatically would want to run the two things together and",
    "start": "734440",
    "end": "739839"
  },
  {
    "text": "then kind of flip between it when we're feel comfortable from our own system to ECS this allows us to just trans",
    "start": "739839",
    "end": "746110"
  },
  {
    "text": "for live production traffic and live workers corrected it seamlessly we have live traffic coming so you want to",
    "start": "746110",
    "end": "752350"
  },
  {
    "text": "switch between SQS UCS so this is a little code snippet I took you guys from",
    "start": "752350",
    "end": "758740"
  },
  {
    "text": "there we go but if not I got some Ruby examples too but it's just a little snippet of show",
    "start": "758740",
    "end": "764620"
  },
  {
    "text": "you know it's not much change for our part the same thing it was the same for Ruby nice thing about I am rose we we",
    "start": "764620",
    "end": "770709"
  },
  {
    "start": "769000",
    "end": "769000"
  },
  {
    "text": "took advantage of the opportunity and we want to clean up some stuff so one definitely thing is we kind of tied two",
    "start": "770709",
    "end": "776860"
  },
  {
    "text": "tasks with the I am I am a bros and nice thing you kind of see the task this is",
    "start": "776860",
    "end": "783100"
  },
  {
    "text": "like media and you kinda know what's the right policy should be like the process",
    "start": "783100",
    "end": "788800"
  },
  {
    "text": "the task is kind of like you know spice lay for that one work like processing",
    "start": "788800",
    "end": "794110"
  },
  {
    "text": "media or an account or rotating a video or something like that so is it's",
    "start": "794110",
    "end": "799329"
  },
  {
    "text": "one-to-one is very clear we also consolidate our I am rose and it definitely allow us to it was definitely",
    "start": "799329",
    "end": "808089"
  },
  {
    "text": "a lot more cleaner we also tighten in our policy and I like to use little",
    "start": "808089",
    "end": "813430"
  },
  {
    "text": "buzzword principle of least privilege and that's a good thing because as I",
    "start": "813430",
    "end": "818920"
  },
  {
    "text": "said earlier you don't have like ease process able to access utter service",
    "start": "818920",
    "end": "824800"
  },
  {
    "text": "that they're not supposed to and that kind of also time with the first bullet where you know that tasks that specific",
    "start": "824800",
    "end": "830620"
  },
  {
    "text": "process is gonna only could access specific parts of of AWS like you don't",
    "start": "830620",
    "end": "837130"
  },
  {
    "text": "want our identity service to access our s3 stuff and it's a big plus definitely",
    "start": "837130",
    "end": "843310"
  },
  {
    "text": "so this was a great opportunity to kind of clean up our security policy and our",
    "start": "843310",
    "end": "848920"
  },
  {
    "text": "I Ambrose I love this quote master image was deployed was it today's master or",
    "start": "848920",
    "end": "854860"
  },
  {
    "start": "851000",
    "end": "851000"
  },
  {
    "text": "yesterday's master I don't know so that's a one problem we had before is like we did had a clear vision what was",
    "start": "854860",
    "end": "863110"
  },
  {
    "text": "out in production DevOps did not so they we've introduced this thing as like",
    "start": "863110",
    "end": "868240"
  },
  {
    "text": "semantic versioning and a great vice tagging for images you know it's it ties",
    "start": "868240",
    "end": "874000"
  },
  {
    "text": "to get tagged to to the image itself and then it's it was a clear you know what code",
    "start": "874000",
    "end": "880230"
  },
  {
    "text": "was actually in that image another thing is we because you didn't know what was",
    "start": "880230",
    "end": "886890"
  },
  {
    "text": "what was master how do you grow back when was the last master and that was another lacking thing and we would clean",
    "start": "886890",
    "end": "893370"
  },
  {
    "text": "that up definitely with this semantic versioning last like I said earlier",
    "start": "893370",
    "end": "898590"
  },
  {
    "text": "visibility ops visibility ops knew what was out there running in production he",
    "start": "898590",
    "end": "903780"
  },
  {
    "text": "knew was running a staging QA man those guys are promising thank God now I know what's running out there right guys so",
    "start": "903780",
    "end": "910950"
  },
  {
    "text": "I'm just remembering how we used to do roll backs which is basically look at the get hash and do a cherry-pick back",
    "start": "910950",
    "end": "917610"
  },
  {
    "text": "to the commit from three days ago and then create it you know do a new deployment there so that is very",
    "start": "917610",
    "end": "922710"
  },
  {
    "text": "error-prone very manual correct and now with these semantic versioning you know we always know exactly what our last",
    "start": "922710",
    "end": "928920"
  },
  {
    "text": "deploy was for each service exactly running forty services plus that's that is even more important definitely",
    "start": "928920",
    "end": "935250"
  },
  {
    "text": "alright so speaking of deployments here's a great complicated slide so this basically describes our deployment",
    "start": "935250",
    "end": "941420"
  },
  {
    "text": "workflow or pipeline so I want to run through this a little bit we're using a few different AWS services here this is",
    "start": "941420",
    "end": "948300"
  },
  {
    "text": "where it gets real DevOps II we use github as you can see we also use circle CI which is like software as a service",
    "start": "948300",
    "end": "955380"
  },
  {
    "text": "that runs tests and we'll do deploys docker containers for asset management",
    "start": "955380",
    "end": "963090"
  },
  {
    "text": "for a repository we use we were using docker hub and we moved over to artifactory recently and an api gateway",
    "start": "963090",
    "end": "970290"
  },
  {
    "text": "is providing the ingress into our V pcs so that those external services like",
    "start": "970290",
    "end": "975630"
  },
  {
    "text": "circle CI and github can talk to our internal Jenkins system and then of course we have ETS so the",
    "start": "975630",
    "end": "983880"
  },
  {
    "text": "flow here is basically on github when we do a commit to our development branches",
    "start": "983880",
    "end": "990300"
  },
  {
    "text": "or are staging branches circle see I just notices that and it builds the container pulls the container from github runs the tests builds an image",
    "start": "990300",
    "end": "998670"
  },
  {
    "text": "and container and then pushes up the nh-2 artifactory and in the case of our",
    "start": "998670",
    "end": "1005930"
  },
  {
    "text": "QA or staging environment it then goes ahead and calls UCS and actually deploys",
    "start": "1005930",
    "end": "1012380"
  },
  {
    "text": "that container with no other intermediate intermediate steps if it's production we have a one more step in",
    "start": "1012380",
    "end": "1019160"
  },
  {
    "text": "there which is basically to call our Jenkins house and the Jenkins house is kind of the gatekeeper to deploy into production so for that we have circle CI",
    "start": "1019160",
    "end": "1027079"
  },
  {
    "text": "making a call to API gateway if you a gateway assumes a role that allows it to talk to our Jenkins system internally so",
    "start": "1027080",
    "end": "1033770"
  },
  {
    "text": "circle CI has a token that allows it to talk to API gateway and then API gateway calls a Jenkins job that allows us to",
    "start": "1033770",
    "end": "1041240"
  },
  {
    "text": "have a little bit more safety when we're deploying to production also lets us do things like that tagging that happens in Jenkins so when",
    "start": "1041240",
    "end": "1047689"
  },
  {
    "text": "we're pulling from the latest staging build and we want to promote that to master Jenkins automatically computes",
    "start": "1047690",
    "end": "1054170"
  },
  {
    "text": "the next semantic version number applies that tags a container and tags github",
    "start": "1054170",
    "end": "1059510"
  },
  {
    "text": "with the same semantic version so it's pretty nice we've got to get tags are the same as the container tags and that",
    "start": "1059510",
    "end": "1066680"
  },
  {
    "text": "ultimately is the same as what's deployed into the task and ECS auto-scaling I want to talk about kind of like the",
    "start": "1066680",
    "end": "1072770"
  },
  {
    "start": "1071000",
    "end": "1071000"
  },
  {
    "text": "two things we auto-scale like our ec2 instance our cluster scaling is",
    "start": "1072770",
    "end": "1077900"
  },
  {
    "text": "basically just a CPU metrics however our our tasks Geylang is low it's we have a",
    "start": "1077900",
    "end": "1084470"
  },
  {
    "text": "couple kind of flows here one is our workers which I talked about earlier that does this asynchronous stuff",
    "start": "1084470",
    "end": "1090590"
  },
  {
    "text": "they're doing a little different we auto scale by queue size you know when based on the amount of stuff and the cube is",
    "start": "1090590",
    "end": "1097340"
  },
  {
    "text": "if it's not consuming fast enough we add more workers to process the queues and",
    "start": "1097340",
    "end": "1102970"
  },
  {
    "text": "us as for our services which is like our web services it would be just just like",
    "start": "1102970",
    "end": "1109460"
  },
  {
    "text": "re are easy to kind of like CPU based one thing that I want to know that I know I said",
    "start": "1109460",
    "end": "1116899"
  },
  {
    "text": "earlier what ECS didn't really provide us was kind of like container draining and that's something we kind of like had",
    "start": "1116899",
    "end": "1124669"
  },
  {
    "start": "1123000",
    "end": "1123000"
  },
  {
    "text": "to explore and own I think a good way I can give an idea of how it works is I kind of show you a flow here so",
    "start": "1124669",
    "end": "1131889"
  },
  {
    "text": "auto-scaling you're probably familiar when it reaches a threshold limit triggers our cloud watch alarm and then",
    "start": "1131889",
    "end": "1137960"
  },
  {
    "text": "we pretty much auto skills to ECS instance boom then all the ECS instance",
    "start": "1137960",
    "end": "1145039"
  },
  {
    "text": "gets up at some point the CPU is not using it you know it's not doing as much work and then we're gonna got a",
    "start": "1145039",
    "end": "1151009"
  },
  {
    "text": "downscale there's like an event like a life cycle event triggers that you know",
    "start": "1151009",
    "end": "1157759"
  },
  {
    "text": "we need to downscale and then it checks it calls our lambda function that lambda function we start singling these easy",
    "start": "1157759",
    "end": "1165019"
  },
  {
    "text": "two containers okay we need to downscale they send that single and earlier I mentioned if you",
    "start": "1165019",
    "end": "1172190"
  },
  {
    "text": "recall that I told you to only change that we need to do on a code with supporting the the single to do drain",
    "start": "1172190",
    "end": "1180739"
  },
  {
    "text": "and uh that's the only thing and that's what's happening here so you get a little high via high-level",
    "start": "1180739",
    "end": "1187159"
  },
  {
    "text": "view and it until the container is actually done then it starts killing off",
    "start": "1187159",
    "end": "1193309"
  },
  {
    "text": "the ec2 instance and that's how our draining works so I should mention this",
    "start": "1193309",
    "end": "1198350"
  },
  {
    "text": "is based on a reference architecture that I believe comes from AWS it's available on github so that'll be on the",
    "start": "1198350",
    "end": "1203359"
  },
  {
    "text": "slides we'll share that so the lambda function basically we just used it more",
    "start": "1203359",
    "end": "1208580"
  },
  {
    "text": "or less the way that we found in the reference architecture I don't know if this is a feature that's upcoming in ecs but it would be nice yeah and it's this",
    "start": "1208580",
    "end": "1216230"
  },
  {
    "text": "is something we had to implement on our own like I said but there's a documentation and we'll share it at the",
    "start": "1216230",
    "end": "1222169"
  },
  {
    "text": "end yeah now this is particularly important for services like workers because you don't wanna interrupt them right when they're processing big photos",
    "start": "1222169",
    "end": "1229159"
  },
  {
    "text": "big video files to pull that file down from s3 again would take some amount of time that would add a certain amount of",
    "start": "1229159",
    "end": "1235220"
  },
  {
    "text": "latency to the work if you're running a stateless web service it might not matter that much you might be able to",
    "start": "1235220",
    "end": "1240619"
  },
  {
    "text": "kill off your tasks and not worry about it when the cluster is scaling in but for our workers we really wanted",
    "start": "1240619",
    "end": "1246290"
  },
  {
    "text": "them to be able to complete at least one unit of work before getting shut down automatically and that's basically",
    "start": "1246290",
    "end": "1251570"
  },
  {
    "text": "because it's yeah latency for our users is correct and draining is because like saven saying is just too expensive to",
    "start": "1251570",
    "end": "1258740"
  },
  {
    "text": "redo it again and that's why we did this training let's talk about you know you",
    "start": "1258740",
    "end": "1264260"
  },
  {
    "text": "know all this experience we definitely gone through some pains and some mistakes and I think it's best we kind",
    "start": "1264260",
    "end": "1269900"
  },
  {
    "text": "of share kind of like stuff that we want you guys avoid which we've our experience so one thing like our",
    "start": "1269900",
    "end": "1277280"
  },
  {
    "start": "1276000",
    "end": "1276000"
  },
  {
    "text": "migration process so as I said earlier our migration process was if you look at",
    "start": "1277280",
    "end": "1283280"
  },
  {
    "text": "this diagram we had two things running in parallel we had sqs with our ECS",
    "start": "1283280",
    "end": "1288559"
  },
  {
    "text": "workers and our third-party solution and it's like he's even said earlier we had",
    "start": "1288559",
    "end": "1293929"
  },
  {
    "text": "live traffic coming not only dad our code was constantly evolving we we have",
    "start": "1293929",
    "end": "1300380"
  },
  {
    "text": "to take get out these new features out at the same time so that's why we had this feature flipping you know and there",
    "start": "1300380",
    "end": "1308120"
  },
  {
    "text": "were like two approaches we kind of did here like some we did feature flipping and for code that's very dynamic",
    "start": "1308120",
    "end": "1315830"
  },
  {
    "text": "but if your code is very stale we also had teams that did just branching so you",
    "start": "1315830",
    "end": "1321740"
  },
  {
    "text": "got way it out like do I need you know it's a code stale you know branching is fine but if it's no this is live you",
    "start": "1321740",
    "end": "1329630"
  },
  {
    "text": "don't want to be changing both branch at a time keeping it consistent for bugs and stuff is a pain too but it's a easy",
    "start": "1329630",
    "end": "1335929"
  },
  {
    "text": "row back definitely zero back if there's problems and tuning that's another thing",
    "start": "1335929",
    "end": "1341840"
  },
  {
    "text": "is the system meeting up the performance is our old system so we were able to kind of flip between a two comparison",
    "start": "1341840",
    "end": "1348559"
  },
  {
    "text": "measured the two system and then tune tune our ECS to the right right leveled",
    "start": "1348559",
    "end": "1355429"
  },
  {
    "text": "as equivalent to our third party solution and last thing we also we did a",
    "start": "1355429",
    "end": "1361730"
  },
  {
    "text": "bachelor lure so when I mean batch is like we didn't do a switch over all our system at one time we switch some system",
    "start": "1361730",
    "end": "1371210"
  },
  {
    "text": "may be running a third party solution or Ottery system may be running two ECS",
    "start": "1371210",
    "end": "1377289"
  },
  {
    "text": "you know sqs solution and migrated batches of services right like media",
    "start": "1377289",
    "end": "1383559"
  },
  {
    "text": "services when in one batch yeah entity services my going a different batch correct this is the way to organize the",
    "start": "1383559",
    "end": "1389260"
  },
  {
    "text": "team work a little bit more efficiently we went through the whole migration process parallel its scaling we're also",
    "start": "1389260",
    "end": "1394539"
  },
  {
    "start": "1392000",
    "end": "1392000"
  },
  {
    "text": "learning about scale like one thing is don't scale away into one percent",
    "start": "1394539",
    "end": "1399700"
  },
  {
    "text": "capacity eighty percent capacity because our containers take a time to launch by time you reach a hundred percent it's re to",
    "start": "1399700",
    "end": "1406269"
  },
  {
    "text": "you're not handling the load so eighty percent capacity it's better to scale by",
    "start": "1406269",
    "end": "1411610"
  },
  {
    "text": "cpu utilization CPU res you reservation",
    "start": "1411610",
    "end": "1416679"
  },
  {
    "text": "not utilization the last thing we kind of also learn is you know we've always",
    "start": "1416679",
    "end": "1422710"
  },
  {
    "text": "been scaling by resource CPU like just you know dis space but there's also",
    "start": "1422710",
    "end": "1429039"
  },
  {
    "text": "queue size you know nobody else thought about yeah queues where there's a lot of stuff in a queue you may launch need to",
    "start": "1429039",
    "end": "1435490"
  },
  {
    "text": "launch a lot more workers to consume these events so the first two bullets they're really about scaling out the",
    "start": "1435490",
    "end": "1441250"
  },
  {
    "text": "cluster before the tasks need the resources so we started out scaling on CPU utilization which is what you would",
    "start": "1441250",
    "end": "1447309"
  },
  {
    "text": "do in a typical auto scaling group with ec2 if you do that in UCS you might find that your tasks and don't get placed",
    "start": "1447309",
    "end": "1453250"
  },
  {
    "text": "because there's no more available CPU on the cluster cluster starts to boot up a new ec2 instance but the tasks will fail",
    "start": "1453250",
    "end": "1460299"
  },
  {
    "text": "to place until that happens that could be several minutes or more depending on how you're provisioning your ec2 instance yeah and it's like I said it",
    "start": "1460299",
    "end": "1466179"
  },
  {
    "text": "takes time to launch these new containers so you know factor in 80%",
    "start": "1466179",
    "end": "1471309"
  },
  {
    "text": "might not be right for you you gotta find the right percent 80 we found our",
    "start": "1471309",
    "end": "1477100"
  },
  {
    "text": "by measuring and that's how it came with the number 80 percent you know it's like",
    "start": "1477100",
    "end": "1482799"
  },
  {
    "text": "we knew eighty percent by the time our next containers launch it'll be ready",
    "start": "1482799",
    "end": "1488769"
  },
  {
    "text": "care form so a few lessons around terraform and the supplies in general to configuration infrastructure as code",
    "start": "1488769",
    "end": "1496080"
  },
  {
    "start": "1489000",
    "end": "1489000"
  },
  {
    "text": "executing your terraform code this requires privileges across many different AWS services when you're",
    "start": "1496080",
    "end": "1502419"
  },
  {
    "text": "talking about an architecture like ours if you want to give say an engineer the ability to update their stack they might",
    "start": "1502419",
    "end": "1509460"
  },
  {
    "text": "date everything from the task definition to the queues to the cloud watch alarms who knows what else right s3 buckets etc",
    "start": "1509460",
    "end": "1517230"
  },
  {
    "text": "so although we're checking in the terraform code with the application code that's a good thing we're not sure that",
    "start": "1517230",
    "end": "1523560"
  },
  {
    "text": "we want to give all the developers access to do that on production all the time so this brought up some new sort of",
    "start": "1523560",
    "end": "1529170"
  },
  {
    "text": "access control problems for us that we're still kind of figuring out we made",
    "start": "1529170",
    "end": "1534540"
  },
  {
    "text": "some mistakes as DevOps and we blew away some things in production as we were learning this one of the things we",
    "start": "1534540",
    "end": "1540270"
  },
  {
    "text": "learned is that you've got the task definition for your service described in",
    "start": "1540270",
    "end": "1546930"
  },
  {
    "text": "terraform but then you do a bunch of deployments to that service and so the image version is updated so now your",
    "start": "1546930",
    "end": "1555000"
  },
  {
    "text": "terraform code is out of date so you've got an older image in the code so then if you go and apply that terraform definition again you're gonna",
    "start": "1555000",
    "end": "1560880"
  },
  {
    "text": "essentially roll back your service to the old version without meaning to so we added a check basically in our terraform",
    "start": "1560880",
    "end": "1566910"
  },
  {
    "text": "tooling to make sure that the image that we're pushing out is actually the latest image that's in the repository and then",
    "start": "1566910",
    "end": "1573690"
  },
  {
    "text": "finally we decoupled unrelated terraform modules so if I'm going in to make a",
    "start": "1573690",
    "end": "1578790"
  },
  {
    "text": "change to an sqs queue I don't want to need to check all of the code for the service or the cluster and make sure",
    "start": "1578790",
    "end": "1584730"
  },
  {
    "text": "that I'm all up-to-date I just want to make that one change terraform of course provides some rails to to prevent this",
    "start": "1584730",
    "end": "1591900"
  },
  {
    "text": "kind of thing but they're not foolproof and you have to inspect a big list of changes on your screen so it's it",
    "start": "1591900",
    "end": "1597810"
  },
  {
    "text": "there's a lot of human error there so moving on the last section is about our benefits that we realized so cost",
    "start": "1597810",
    "end": "1603480"
  },
  {
    "text": "savings this is one of the best benefits that we've gotten from moving to UCS this is just an example of some of",
    "start": "1603480",
    "end": "1609360"
  },
  {
    "text": "Lawrence's media workers from the old system so you can see there this is three different environments QA staging",
    "start": "1609360",
    "end": "1614850"
  },
  {
    "text": "and prod and to maintain some sort of high availability in our old way of doing things we needed at least two ec2",
    "start": "1614850",
    "end": "1620670"
  },
  {
    "text": "instances per environment so we're spread across two availability zones in production we're usually running three",
    "start": "1620670",
    "end": "1626760"
  },
  {
    "text": "or more so even if the service is not running under full load we're using in this example nine ec2 instances to run",
    "start": "1626760",
    "end": "1634530"
  },
  {
    "text": "this one micro service if you don't have a lot of time to optimize your services",
    "start": "1634530",
    "end": "1639960"
  },
  {
    "text": "do a lot of benchmarking and find the right instance type that means you're going to be over-provisioning your compute and I think AWS makes a lot",
    "start": "1639960",
    "end": "1646360"
  },
  {
    "text": "of money on this kind of thing so they love it you might not so we were trading",
    "start": "1646360",
    "end": "1652480"
  },
  {
    "text": "efficiency for H a in the old model so now to contrast this with an example of an UCS cluster this is one of our QA",
    "start": "1652480",
    "end": "1659049"
  },
  {
    "text": "clusters you can see down here we're running 50 services on this one cluster we're using nine instances so same",
    "start": "1659049",
    "end": "1665169"
  },
  {
    "text": "number of instances we're running 50 services now admittedly the CPU utilization overall resource utilization",
    "start": "1665169",
    "end": "1670510"
  },
  {
    "text": "on this cluster is very low it's our QA cluster but still it's it's like a",
    "start": "1670510",
    "end": "1676929"
  },
  {
    "text": "factor of and better if we're looking at three different environments so you can imagine spread across production with",
    "start": "1676929",
    "end": "1682720"
  },
  {
    "text": "full load of users and all that it really adds up a lot we think we're gonna save like 75% of our ec2 costs by",
    "start": "1682720",
    "end": "1689080"
  },
  {
    "text": "moving these yes this is just an example of our cluster utilization CPU reservation is on the left here so that",
    "start": "1689080",
    "end": "1696070"
  },
  {
    "text": "shows that we're reserving all the tasks or all the services running on this cluster are together reserving something",
    "start": "1696070",
    "end": "1703240"
  },
  {
    "text": "around 80 percent of the total capacity on the cluster it's nice to be able to measure that it's nice that we know how",
    "start": "1703240",
    "end": "1708669"
  },
  {
    "text": "much capacity we have to grow into and on the right our utilization again is quite low so to me that just says we've",
    "start": "1708669",
    "end": "1714640"
  },
  {
    "text": "got some work to do still and we can do even better with cost efficiency a little bit about metrics and monitoring",
    "start": "1714640",
    "end": "1720820"
  },
  {
    "text": "in ECS things that team liked about it benchmarking services resource",
    "start": "1720820",
    "end": "1726100"
  },
  {
    "text": "requirements is quite easy like I mentioned and we also like the EECS event stream that's really helpful for",
    "start": "1726100",
    "end": "1731620"
  },
  {
    "text": "monitoring the sort of tax placement errors and that kind of thing that you'll see in real life operations on",
    "start": "1731620",
    "end": "1737230"
  },
  {
    "text": "the cluster and on the negative side there's a lack of container level monitoring with cloud watch and ECS it's",
    "start": "1737230",
    "end": "1744279"
  },
  {
    "text": "not easy to tell at a glance all the containers that are running on a host so we've actually started using data dog",
    "start": "1744279",
    "end": "1750880"
  },
  {
    "text": "which we like a lot for container level monitoring and then finally the basic cloud watch metrics only come in at five",
    "start": "1750880",
    "end": "1756669"
  },
  {
    "text": "minute intervals that seems pretty quick but when you're talking about scaling of workers that are processing media on people's phones and desktops you need to",
    "start": "1756669",
    "end": "1763809"
  },
  {
    "text": "be able to be kind of up-to-date we want to know what's going on at a more granular level and I guess to get that",
    "start": "1763809",
    "end": "1769000"
  },
  {
    "text": "you pay more with enhanced metrics I hope that was all useful for you guys",
    "start": "1769000",
    "end": "1775210"
  },
  {
    "text": "we've pretty much cover you know like how GoPros platform is based on the ECS",
    "start": "1775210",
    "end": "1781000"
  },
  {
    "text": "and then kind of explain like why we chose it and kind of show our migration",
    "start": "1781000",
    "end": "1786010"
  },
  {
    "text": "process and some of our pains and we go and we definitely realized you know be cost saving you know a better deploying",
    "start": "1786010",
    "end": "1793260"
  },
  {
    "text": "better organization stability he's happy I'm happy you guys could be also be",
    "start": "1793260",
    "end": "1802059"
  },
  {
    "text": "happy to maybe you should try it hundred and dad you know get a GoPro or",
    "start": "1802059",
    "end": "1807429"
  },
  {
    "text": "here for thank you guys",
    "start": "1807429",
    "end": "1811080"
  },
  {
    "text": "[Music]",
    "start": "1813130",
    "end": "1816539"
  }
]