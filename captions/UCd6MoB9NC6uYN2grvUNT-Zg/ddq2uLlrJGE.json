[
  {
    "text": "with that let's get started with some introductions as I said I'm Mike BG I handle marketing for cloud search",
    "start": "6560",
    "end": "13120"
  },
  {
    "text": "joining me today is John Handler John's a solution's architect for cloud search uh he's experienced search engineer and",
    "start": "13120",
    "end": "20320"
  },
  {
    "text": "developer and currently spends his time working with a bunch of customers implementing Cloud search so welcome",
    "start": "20320",
    "end": "25680"
  },
  {
    "text": "John good morning everybody welcome our special guest today is Paul Nelson the",
    "start": "25680",
    "end": "31320"
  },
  {
    "text": "CTO of search Technologies one of the world's largest providers of search Consulting and implementation services",
    "start": "31320",
    "end": "38200"
  },
  {
    "text": "and they're part of the AWS partner Network as well Paul's worked on search for a long time over 20 years and he was",
    "start": "38200",
    "end": "45640"
  },
  {
    "text": "the architect of retrieval Weare which many of you in it",
    "start": "45640",
    "end": "51320"
  },
  {
    "text": "was later acquired by Microsoft he's worked with thousands of customers and has been involved in hundreds of search",
    "start": "51320",
    "end": "58359"
  },
  {
    "text": "installations of all shapes and sizes so got lots of experience and unique in insights to share with us today thanks",
    "start": "58359",
    "end": "66080"
  },
  {
    "text": "for joining us Paul Paul thanks for joining hey everybody sorry about that uh pleasure to be",
    "start": "66080",
    "end": "73400"
  },
  {
    "text": "here couple of housekeeping items uh you will see some polling questions pop up",
    "start": "74400",
    "end": "80680"
  },
  {
    "text": "so please enter your responses and we'll review the results after 10 or 15 seconds as I mentioned",
    "start": "80680",
    "end": "87680"
  },
  {
    "text": "Q&A will be at the end about 40 minutes from now so send us your questions as we go along uh we will re be recording this",
    "start": "87680",
    "end": "94759"
  },
  {
    "text": "webinar you'll get an email with a link to the recording within a day or two and",
    "start": "94759",
    "end": "100200"
  },
  {
    "text": "in addition we'll post the slides on and a recording so you'll see the recording",
    "start": "100200",
    "end": "106240"
  },
  {
    "text": "on YouTube and the AWS Channel and you'll be able to access the slides on",
    "start": "106240",
    "end": "113600"
  },
  {
    "text": "SlideShare a quick look at our agenda for today we'll start off with a summary of Amazon Cloud search to Ure that",
    "start": "114040",
    "end": "120240"
  },
  {
    "text": "everybody's up to speed on what it is and what it does then Paul will take us through the steps he took to add",
    "start": "120240",
    "end": "126119"
  },
  {
    "text": "improved search capabilities for the Wikipedia data set working from the data",
    "start": "126119",
    "end": "132120"
  },
  {
    "text": "acquisition and cleanup to building the index improving the relevancy and the r ranking of results and building the user",
    "start": "132120",
    "end": "139720"
  },
  {
    "text": "interface and finally we will wrap up with some recommendations for your search implementations and move to the",
    "start": "139720",
    "end": "146920"
  },
  {
    "text": "Q&A portion so what is Amazon Cloud search here's the summary uh it's a full fully",
    "start": "146920",
    "end": "153959"
  },
  {
    "text": "managed and fully featured search service that runs in the AWS Cloud so",
    "start": "153959",
    "end": "159360"
  },
  {
    "text": "you no longer have to worry about you know setting up maintaining scaling and operating your own search platform Cloud",
    "start": "159360",
    "end": "166760"
  },
  {
    "text": "search has a unique capability to scale automatically as your data or traffic",
    "start": "166760",
    "end": "172440"
  },
  {
    "text": "fluctuate so resources are added or removed dynamically to meet the needs of your application Cloud search can hand",
    "start": "172440",
    "end": "179760"
  },
  {
    "text": "handled structured and unstructured data and it supports near realtime indexing of your documents so you can quickly",
    "start": "179760",
    "end": "186159"
  },
  {
    "text": "search for documents after they've been uploaded it's designed to be up and running in less than an hour we see many",
    "start": "186159",
    "end": "192879"
  },
  {
    "text": "customers get up and running very very quickly so you simply upload your data",
    "start": "192879",
    "end": "198000"
  },
  {
    "text": "configure your search domain and then Cloud search takes care of the rest in terms of your indexing and provisioning",
    "start": "198000",
    "end": "204120"
  },
  {
    "text": "of all the technology and and Hardware required and finally you pay only for",
    "start": "204120",
    "end": "209400"
  },
  {
    "text": "the resources that you use and the costs start at less than $100 per",
    "start": "209400",
    "end": "215480"
  },
  {
    "text": "month so let's turn to our first polling question I'll just bring it up",
    "start": "215480",
    "end": "224080"
  },
  {
    "text": "now and we're going to ask you you know what search are you using",
    "start": "224080",
    "end": "230200"
  },
  {
    "text": "today so select one of the following uh you're not using any search today um or you're using a database",
    "start": "230439",
    "end": "238560"
  },
  {
    "text": "relational or no SQL database uh you may be using open source search such as solar or elastic search or you're using",
    "start": "238560",
    "end": "245680"
  },
  {
    "text": "a legacy Enterprise search vendor such as IND de or autonomy or you're using uh",
    "start": "245680",
    "end": "251480"
  },
  {
    "text": "one of the Google products Google search Appliance or site",
    "start": "251480",
    "end": "256239"
  },
  {
    "text": "search okay just a few more seconds and we'll uh fit close the poll here so if you get into your results that' be",
    "start": "257519",
    "end": "264880"
  },
  {
    "text": "great I like this slide because it's it's practically a history of",
    "start": "264880",
    "end": "270560"
  },
  {
    "text": "search right in front of us I can remember the old days when I",
    "start": "270560",
    "end": "275880"
  },
  {
    "text": "tried to explain what search was and people asked me oh so that's a relational database I'm like no",
    "start": "275880",
    "end": "281840"
  },
  {
    "text": "right but let's take a look at the results I think they're interesting Paul",
    "start": "281840",
    "end": "287720"
  },
  {
    "text": "U so right now we can see there's still some people not using search out there so 9% of you are not using search about",
    "start": "287800",
    "end": "295240"
  },
  {
    "text": "15% still on database uh open source continues to be popular 54% and then we",
    "start": "295240",
    "end": "301240"
  },
  {
    "text": "see 29% stuck in the Legacy world and uh 21% are using Google products now of",
    "start": "301240",
    "end": "308280"
  },
  {
    "text": "course uh since Cloud search launched three months ago there are many customers already in production so um we",
    "start": "308280",
    "end": "315320"
  },
  {
    "text": "anticipate seeing these numbers change over time so um let's let's move on and uh",
    "start": "315320",
    "end": "323720"
  },
  {
    "text": "Paul maybe you could get us started",
    "start": "323720",
    "end": "331479"
  },
  {
    "text": "sure I'll just Advance the slide for you Paul and will you make me presenter yep",
    "start": "333639",
    "end": "341080"
  },
  {
    "text": "just one second okay yeah it's interesting I I mean obviously the AWS",
    "start": "341080",
    "end": "347199"
  },
  {
    "text": "environment is very closely tied to the open- source environment and so you know it certainly",
    "start": "347199",
    "end": "354039"
  },
  {
    "text": "makes sense that uh certainly makes sense that the",
    "start": "354039",
    "end": "360479"
  },
  {
    "text": "open source environment is going to be the uh the primary uh search engine used by",
    "start": "360479",
    "end": "368960"
  },
  {
    "text": "the developers today so Mike do you need to close the oh there we go show",
    "start": "368960",
    "end": "375599"
  },
  {
    "text": "my excellent well welcome everybody um you know I think this is just a",
    "start": "375599",
    "end": "381479"
  },
  {
    "text": "fantastic opportunity to talk about Wikipedia and searching Wikipedia we had",
    "start": "381479",
    "end": "386800"
  },
  {
    "text": "a lot of fun doing this project and we've had a lot of fun working with the Amazon team and uh it's great to talk",
    "start": "386800",
    "end": "393280"
  },
  {
    "text": "about it I think it's a it's a good demonstration of cloud search and what it can do so you know when we first",
    "start": "393280",
    "end": "399560"
  },
  {
    "text": "heard about Cloud search we were like oh this is fantastic and we wanted something that would really stress Cloud",
    "start": "399560",
    "end": "406560"
  },
  {
    "text": "search a little bit and really test all of its features and kind of a a platform",
    "start": "406560",
    "end": "412240"
  },
  {
    "text": "that we could use to experiment I mean we could have thrown random data at it but we thought let's use Wikipedia I",
    "start": "412240",
    "end": "417720"
  },
  {
    "text": "mean after all it's awesome right I mean I use it at least a 100 times a day and",
    "start": "417720",
    "end": "423360"
  },
  {
    "text": "as everybody knows the default Wikipedia search is really bad I mean lookup is good if you want to find a particular",
    "start": "423360",
    "end": "429080"
  },
  {
    "text": "article based on the name that's really good but search is really bad it's and we'll just see it later um and it's",
    "start": "429080",
    "end": "435639"
  },
  {
    "text": "publicly available data right so I can just download The Dump files and index them well I mean just I say we'll talk",
    "start": "435639",
    "end": "441919"
  },
  {
    "text": "about the steps that it took to do that um and then it's awesome and I put it's awesome twice because it's twice as",
    "start": "441919",
    "end": "447800"
  },
  {
    "text": "awesome cool so now why Cloud search for Wikipedia well I mean we were really",
    "start": "447800",
    "end": "454039"
  },
  {
    "text": "excited about the possibility of cloud search because we know how difficult it is for lots of our customers just to",
    "start": "454039",
    "end": "461160"
  },
  {
    "text": "provision a search engine so that part of it is just awesome um we think it's a",
    "start": "461160",
    "end": "466639"
  },
  {
    "text": "really great choice for a public serving search engine I mean it lives on the internet just like Wikipedia so",
    "start": "466639",
    "end": "472479"
  },
  {
    "text": "shouldn't we be using a search engine on the internet like Wikipedia itself we got the first version up and running",
    "start": "472479",
    "end": "477639"
  },
  {
    "text": "really quickly and then we went through oh gosh at least 13 different iterations to to tune it all exactly the way that",
    "start": "477639",
    "end": "484280"
  },
  {
    "text": "we wanted it automatically scales to the required query volume I think this is",
    "start": "484280",
    "end": "490080"
  },
  {
    "text": "critically important for something like what we wanted to do because we had no idea how many people were going to be",
    "start": "490080",
    "end": "495840"
  },
  {
    "text": "doing searches on Wikipedia I mean it could have been this viral Sensation that went across the web uh and then we",
    "start": "495840",
    "end": "503360"
  },
  {
    "text": "could have seen this huge spike in our query requests so to not have to worry",
    "start": "503360",
    "end": "508400"
  },
  {
    "text": "about that is such a relief so if there's this big viral spike in queries",
    "start": "508400",
    "end": "513839"
  },
  {
    "text": "you know Cloud search will just magically handle it all and there won't ever be a problem um so you never know",
    "start": "513839",
    "end": "520719"
  },
  {
    "text": "with a public facing search engine exactly what you're going to need and that that's just worked out great turns",
    "start": "520719",
    "end": "526360"
  },
  {
    "text": "out the rank expressions for the Wikipedia data worked out really well for cloud search and then I just wanted",
    "start": "526360",
    "end": "532519"
  },
  {
    "text": "to point out that during the process of creating our system this is not exactly about Wikipedia but during the process",
    "start": "532519",
    "end": "538399"
  },
  {
    "text": "of creating our search engine we found that the way that you can create search domains in Cloud search because you can",
    "start": "538399",
    "end": "544360"
  },
  {
    "text": "create a search domain very easily it actually led us to a new way of developing an application because we",
    "start": "544360",
    "end": "551320"
  },
  {
    "text": "have the user interface team working on an old version of the index while the indexing team is working on a the next",
    "start": "551320",
    "end": "557040"
  },
  {
    "text": "iteration the next generation of the index and it it just made the actual development so much easier so much",
    "start": "557040",
    "end": "563360"
  },
  {
    "text": "faster so much more stable so that was an unexpected bonus so let's go ahead",
    "start": "563360",
    "end": "568680"
  },
  {
    "text": "and give it a um I'm going to go ahead close up my window here so this is",
    "start": "568680",
    "end": "576120"
  },
  {
    "text": "the standard wekipedia search um and so we'll search for",
    "start": "576120",
    "end": "581160"
  },
  {
    "text": "Amazon because after all that's what we're doing and just taking a look at the standard search uh I mean it's it's",
    "start": "581160",
    "end": "589600"
  },
  {
    "text": "It Feels So 1990s actually all you get is the title a very short summary um",
    "start": "589600",
    "end": "595920"
  },
  {
    "text": "some useless information like the date information which is really not that helpful I'll explain why the size I'm",
    "start": "595920",
    "end": "601760"
  },
  {
    "text": "not sure that people really care much about the size you don't really know what types of documents the are these",
    "start": "601760",
    "end": "606959"
  },
  {
    "text": "are um you don't know what categories there's no opportunity for exploration",
    "start": "606959",
    "end": "612760"
  },
  {
    "text": "and then you have this really weird navigator at the bottom you know we just felt that this kind of search engine was",
    "start": "612760",
    "end": "618079"
  },
  {
    "text": "just so limiting U that we felt we could really do a lot lot better so let's go",
    "start": "618079",
    "end": "623200"
  },
  {
    "text": "ahead and take a look at the new Wikipedia search engine we'll execute the same search",
    "start": "623200",
    "end": "629800"
  },
  {
    "text": "and here we go so this is the the Wikipedia user interface search engine",
    "start": "629800",
    "end": "637440"
  },
  {
    "text": "that we put together uh with Cloud search underneath as you can see the presentation itself is a lot nicer um",
    "start": "637440",
    "end": "645480"
  },
  {
    "text": "just a presentation of the of each of the individual articles we have a nice summary of the article which we call a",
    "start": "645480",
    "end": "651560"
  },
  {
    "text": "static teaser we can tell you what the type of the article is you see that the first one is an article and the second",
    "start": "651560",
    "end": "656600"
  },
  {
    "text": "one is a disambiguation page you get link links to the author the last updated date is a little more you know",
    "start": "656600",
    "end": "662720"
  },
  {
    "text": "useful and then you get a list of all the categories contained with inside the article which is a really fun feature",
    "start": "662720",
    "end": "669160"
  },
  {
    "text": "for doing um kind of an exploration of the Wikipedia database on the left we",
    "start": "669160",
    "end": "675240"
  },
  {
    "text": "get Navigators with the full Navigator counts on the left so you see these different article Types on the left",
    "start": "675240",
    "end": "681440"
  },
  {
    "text": "these are all wikkipedia namespaces and then the different categories which are categories extracted from the Wikipedia engine",
    "start": "681440",
    "end": "688000"
  },
  {
    "text": "itself uh with all of the exact Counts from all of the the categories that's a",
    "start": "688000",
    "end": "693240"
  },
  {
    "text": "one of the key and really nice things about Cloud search is that all the counts are exact so the count of the",
    "start": "693240",
    "end": "699040"
  },
  {
    "text": "count here and all the the category counts and everything is exactly what they should be the authors we actually",
    "start": "699040",
    "end": "705360"
  },
  {
    "text": "thought the authors would be more useful than they turned out to be um just because uh there's a lot of robots",
    "start": "705360",
    "end": "711519"
  },
  {
    "text": "happening and so you mostly get authors who are robots and similarly with the last updated because you have so many",
    "start": "711519",
    "end": "717760"
  },
  {
    "text": "robots running around almost always 2012 is the by by far the",
    "start": "717760",
    "end": "722800"
  },
  {
    "text": "strongest um the user interface framework that we use has the possibility for doing charting so we can",
    "start": "722800",
    "end": "730240"
  },
  {
    "text": "see a chart of the different page types here which is really fun most of them are articles of course Wikipedia pages",
    "start": "730240",
    "end": "737040"
  },
  {
    "text": "are about Wikipedia themselves the updates timeline again you can see most of the updates occur in 2012 which is",
    "start": "737040",
    "end": "743639"
  },
  {
    "text": "typical because you have so many robots and then the top authors and again most of the top authors are",
    "start": "743639",
    "end": "750120"
  },
  {
    "text": "robots um but if you want one of these just click on Graham Hardy just because that's kind of fun and so here we have",
    "start": "750120",
    "end": "757519"
  },
  {
    "text": "all the articles by Graham Hardy uh that he wrote in the files that he uploaded we can go take a look at that author",
    "start": "757519",
    "end": "764199"
  },
  {
    "text": "Graham Hardy my life so far that's nice and you know I had mentioned about the",
    "start": "764199",
    "end": "770519"
  },
  {
    "text": "ability to do exploration you know one of the things that I really liked is I said oh well let's find um uh American",
    "start": "770519",
    "end": "777320"
  },
  {
    "text": "films that mention Amazon and so oh well that's kind of cool let's how about Tarzan films Tarzan and the",
    "start": "777320",
    "end": "784440"
  },
  {
    "text": "Amazon so let's let's remove the word Amazon let's remove the American films",
    "start": "784440",
    "end": "789480"
  },
  {
    "text": "and now we have all Tarzan films which I just think is really fun and so in in",
    "start": "789480",
    "end": "795360"
  },
  {
    "text": "this way you can kind of do this kind of an exploration of the database and it's just a you just discover all kinds of",
    "start": "795360",
    "end": "801760"
  },
  {
    "text": "really fun things about Wikipedia that you didn't know and areas to research and and just fun things that I find",
    "start": "801760",
    "end": "808399"
  },
  {
    "text": "myself just sitting in here for a while just kind of playing and seeing what comes up so that's the uh the goal let's in",
    "start": "808399",
    "end": "816639"
  },
  {
    "text": "order to achieve that goal we went through a particular process uh this is a sort of process",
    "start": "816639",
    "end": "823360"
  },
  {
    "text": "that that most people will go through for most certains some of the steps may",
    "start": "823360",
    "end": "828720"
  },
  {
    "text": "be very small and very easy and other of the steps may be uh larger uh more",
    "start": "828720",
    "end": "834120"
  },
  {
    "text": "complicated uh so we're going to go through each of those steps uh and how we did that for Wikipedia",
    "start": "834120",
    "end": "839279"
  },
  {
    "text": "the first step was data acquisition and data acquisition is",
    "start": "839279",
    "end": "844720"
  },
  {
    "text": "fairly straightforward in Wikipedia we have this this list of dump files it's essentially an FTP listing and the files",
    "start": "844720",
    "end": "852079"
  },
  {
    "text": "that we want are all of these Ian Wiki latest Pages articles xml. bz2 there's",
    "start": "852079",
    "end": "859000"
  },
  {
    "text": "27 of them and they are all bzip2 compressed slices of the Wikipedia",
    "start": "859000",
    "end": "866639"
  },
  {
    "text": "Pages uh now there's a lot of different ways that you can go about fetching the data right you can just use a pearl",
    "start": "866639",
    "end": "872720"
  },
  {
    "text": "script for example uh if you have your data in a relational database then you might um you know use a regular export",
    "start": "872720",
    "end": "879720"
  },
  {
    "text": "tool or an eil process what we decided to do was to use a framework which we",
    "start": "879720",
    "end": "886240"
  },
  {
    "text": "have called Aspire for doing the content processing it's a Java pipelining",
    "start": "886240",
    "end": "891320"
  },
  {
    "text": "framework uh which you can actually download and use yourself if you go to the search Technologies",
    "start": "891320",
    "end": "896600"
  },
  {
    "text": "website the way it worked for we edas we first fetched the listing and as we",
    "start": "896600",
    "end": "902040"
  },
  {
    "text": "fetched the HTML page which is the list of all the files we then scan through",
    "start": "902040",
    "end": "907199"
  },
  {
    "text": "that to identify the files that we actually contain the dumps that we need to process we did that with a regular",
    "start": "907199",
    "end": "913959"
  },
  {
    "text": "expression matching it's a little more complicated because there are multiple versions of some of the files and so we",
    "start": "913959",
    "end": "920000"
  },
  {
    "text": "have to actually gather up all those versions sort by date and choose the latest once we have the list of files",
    "start": "920000",
    "end": "927279"
  },
  {
    "text": "identified we're going to now open a stream against each one of those files and pipe that data down from Wikipedia",
    "start": "927279",
    "end": "934519"
  },
  {
    "text": "you can open two connections to Wikipedia at a time that allows you to do a little parallel processing and then the stream is then",
    "start": "934519",
    "end": "941319"
  },
  {
    "text": "sent through file processing which we'll talk about about later um and the end result of file processing of course is a",
    "start": "941319",
    "end": "948199"
  },
  {
    "text": "series of um individual records that get sent to Amazon Cloud",
    "start": "948199",
    "end": "954399"
  },
  {
    "text": "search uh just some advantages of this content processing framework uh over say",
    "start": "954399",
    "end": "959440"
  },
  {
    "text": "a pearl script or some kind of other more ad hoc approach is we can process multiple files simultaneously everything",
    "start": "959440",
    "end": "967040"
  },
  {
    "text": "is fully streaming so we never actually download the data to local disk we just stream it straight from Wikipedia",
    "start": "967040",
    "end": "972800"
  },
  {
    "text": "through a streaming processor and straight out the cloud search so that's kind of cool and it's fast I was really",
    "start": "972800",
    "end": "978120"
  },
  {
    "text": "surprised you know we started and as we worked in worked on it a little bit we were able to get up to 450 documents per",
    "start": "978120",
    "end": "985199"
  },
  {
    "text": "second end to end which is practically a home run which is just to say that cloud search can accept documents very very",
    "start": "985199",
    "end": "993160"
  },
  {
    "text": "quickly um and remember this was end to end all the way from Wikipedia through all the processing and out to Cloud",
    "start": "993160",
    "end": "999360"
  },
  {
    "text": "search that's a really good number most other you know vendor systems I would use are probably in the 50 to 100",
    "start": "999360",
    "end": "1006040"
  },
  {
    "text": "range integrated connectors if you if you have other sources that you need to crawl from like SharePoint or websites",
    "start": "1006040",
    "end": "1012720"
  },
  {
    "text": "it has text extraction built in we use Apache Tika for that and then some entity extraction as well for names",
    "start": "1012720",
    "end": "1019279"
  },
  {
    "text": "places companies and so on so we're ready for the next polling question uh curious to know where your",
    "start": "1019279",
    "end": "1026839"
  },
  {
    "text": "data is stored uh we tend to take a data Centric approach to search and so almost",
    "start": "1026839",
    "end": "1032319"
  },
  {
    "text": "always the very first question we ask everybody is where is your data and what's it like do you want to take over M",
    "start": "1032319",
    "end": "1038280"
  },
  {
    "text": "Mike yeah just one minute and I'll uh open up the polling",
    "start": "1038280",
    "end": "1043678"
  },
  {
    "text": "question so here uh you know the question is where are you keeping your data and please select one of the",
    "start": "1046079",
    "end": "1051840"
  },
  {
    "text": "following the file systems S3 database uh CMS or some other type of uh",
    "start": "1051840",
    "end": "1062240"
  },
  {
    "text": "repository it's a useful question I think uh you know that cloud search",
    "start": "1062240",
    "end": "1068000"
  },
  {
    "text": "can index documents straight from S3 and so that's a a useful feature of",
    "start": "1068000",
    "end": "1075280"
  },
  {
    "text": "of cloud search file systems you can do to some extent with uh command line",
    "start": "1075280",
    "end": "1081159"
  },
  {
    "text": "tools uh relational databases and other content Management Systems can be a little",
    "start": "1081159",
    "end": "1087559"
  },
  {
    "text": "trickier okay well let's take a look at the results",
    "start": "1088640",
    "end": "1093200"
  },
  {
    "text": "Paul so uh like 44% yeah database uh big time 70% um",
    "start": "1095000",
    "end": "1103200"
  },
  {
    "text": "although there this was a multiple choice question so um S3 is obviously pretty popular",
    "start": "1103200",
    "end": "1109000"
  },
  {
    "text": "still a lot of CMS data out there and there's other repositories the 19% for",
    "start": "1109000",
    "end": "1114840"
  },
  {
    "text": "other okay so this seems pretty typical a lot of our customers have databases I mean that's a very common storage",
    "start": "1114840",
    "end": "1121320"
  },
  {
    "text": "structure especially these days um you may for example want to Simply export",
    "start": "1121320",
    "end": "1126840"
  },
  {
    "text": "your records and then do some kind of XML transformation to transform them into Cloud search documents that's",
    "start": "1126840",
    "end": "1132960"
  },
  {
    "text": "certainly possible um or create a a framework like ours the or use the",
    "start": "1132960",
    "end": "1138799"
  },
  {
    "text": "search Technologies framework which has components for accessing relational database",
    "start": "1138799",
    "end": "1144200"
  },
  {
    "text": "data okay so we have acquired the data from its originating location we're now",
    "start": "1144200",
    "end": "1150120"
  },
  {
    "text": "ready to do data processing I think this is one of those steps that a lot of",
    "start": "1150120",
    "end": "1155280"
  },
  {
    "text": "people discount um people who are not in the search World they tend to think that",
    "start": "1155280",
    "end": "1160960"
  },
  {
    "text": "you know I just take my fields from wherever they are and write them to the search engine uh but often times you",
    "start": "1160960",
    "end": "1167320"
  },
  {
    "text": "need to do some sort of processing field mapping field adjustment uh value",
    "start": "1167320",
    "end": "1172480"
  },
  {
    "text": "normalization so that you get good results for the for the the end",
    "start": "1172480",
    "end": "1178159"
  },
  {
    "text": "user what we did for the Wikipedia well let's first take a look at the Wikipedia",
    "start": "1178159",
    "end": "1183280"
  },
  {
    "text": "data uh this is what the Wikipedia XML file looks like this is one of those uh",
    "start": "1183280",
    "end": "1189799"
  },
  {
    "text": "a sample of one of those XML files every one of the XML files starts with site info which is about the site itself and",
    "start": "1189799",
    "end": "1197200"
  },
  {
    "text": "then you can see it has page page page page page page page now each one of",
    "start": "1197200",
    "end": "1204919"
  },
  {
    "text": "those pages will be a page that we are want to index as a separate record",
    "start": "1204919",
    "end": "1210360"
  },
  {
    "text": "inside of uh Cloud search and you can see the the title uh ID timestamp",
    "start": "1210360",
    "end": "1218200"
  },
  {
    "text": "username uh and then the actual content of the Wikipedia article as entered by",
    "start": "1218200",
    "end": "1224280"
  },
  {
    "text": "the wikipedian I'm just trying to see if I could find a there's a redirect so",
    "start": "1224280",
    "end": "1229320"
  },
  {
    "text": "here's an example of a redirect it has the redirect flag set to it these are",
    "start": "1229320",
    "end": "1235000"
  },
  {
    "text": "redirects in Wikipedia that we don't want to index so some not all the pages we necessarily want to send over so",
    "start": "1235000",
    "end": "1240919"
  },
  {
    "text": "somehow we want to convert each one of these into an individual add command to",
    "start": "1240919",
    "end": "1246440"
  },
  {
    "text": "Wikipedia and you know process the fields as necessary now some of the things that we",
    "start": "1246440",
    "end": "1251919"
  },
  {
    "text": "did off for data processing of course all the data is in bzip 2 compression so",
    "start": "1251919",
    "end": "1257159"
  },
  {
    "text": "at a minimum we have to to decompress that into a utf8 stream then we want to extract each of those individual pages",
    "start": "1257159",
    "end": "1263720"
  },
  {
    "text": "from the larger XML document and send them to Cloud search who used a saxs parser to do that we then skip the pound",
    "start": "1263720",
    "end": "1270600"
  },
  {
    "text": "redirect pages so we want to identify all the redirects and then just cancel those and we do compute some document",
    "start": "1270600",
    "end": "1277400"
  },
  {
    "text": "statistics and we write those document statistics into Cloud search fields and that helps us for relevancy ranking",
    "start": "1277400",
    "end": "1283840"
  },
  {
    "text": "we'll talk a little bit about that later and for some of the Advanced features uh the categories Navigator the",
    "start": "1283840",
    "end": "1291240"
  },
  {
    "text": "author's Navigator the update dates there's some additional processing you notice that the updates date was just",
    "start": "1291240",
    "end": "1296760"
  },
  {
    "text": "year month so there's some date manipulation there the document type we extract the prefix of the title for the",
    "start": "1296760",
    "end": "1303440"
  },
  {
    "text": "document type disambiguation Pages turns out to be really complicated it's based",
    "start": "1303440",
    "end": "1308799"
  },
  {
    "text": "on certain templates that are used on the page and you have to have both a template white list and a template Black",
    "start": "1308799",
    "end": "1314320"
  },
  {
    "text": "List before you can accurately determine what pages are disambiguation pages and which ones are not so there was a whole",
    "start": "1314320",
    "end": "1321000"
  },
  {
    "text": "slew of of iteration that was required around",
    "start": "1321000",
    "end": "1328278"
  },
  {
    "text": "that and then finally and it has this large info box at the top and it's got",
    "start": "1339880",
    "end": "1346520"
  },
  {
    "text": "all of this extra encoding that kind of ugly encoding and embedded and you know",
    "start": "1346520",
    "end": "1353159"
  },
  {
    "text": "HTML comments and all kinds of other junk in there when we take a look at the after picture we see something that's a",
    "start": "1353159",
    "end": "1359679"
  },
  {
    "text": "lot cleaner a lot nicer a lot more",
    "start": "1359679",
    "end": "1363840"
  },
  {
    "text": "readable and that's what the the static teaser processing required not all systems require this in fact Pro I mean",
    "start": "1365039",
    "end": "1371080"
  },
  {
    "text": "very few but it's it's I think a good demonstration of the kind of processing you may have to do on your",
    "start": "1371080",
    "end": "1376960"
  },
  {
    "text": "documents okay so that's document processing let's move on to the next stage this is indexing this turns out to",
    "start": "1376960",
    "end": "1383520"
  },
  {
    "text": "be one of the easier parts for cloud search I mean you just create the XML and pretty much it you know worked first",
    "start": "1383520",
    "end": "1390600"
  },
  {
    "text": "time so that that was uh that was the you know about the sum of it um but",
    "start": "1390600",
    "end": "1396480"
  },
  {
    "text": "there are a couple things that are worth communicating one is every document needs to have a unique document ID so",
    "start": "1396480",
    "end": "1402559"
  },
  {
    "text": "that when you submit that same document again Cloud search will automatically understand that you know you're submitting an update instead of an ad so",
    "start": "1402559",
    "end": "1410360"
  },
  {
    "text": "um every document has a unique document ID it has to have only letters and digits so if you have something like a",
    "start": "1410360",
    "end": "1415720"
  },
  {
    "text": "URL you'll need to uh md5 encode that the document version uh now this is",
    "start": "1415720",
    "end": "1423520"
  },
  {
    "text": "actually it seems odd but it's actually an incredibly powerful feature of cloud search one of the things that we've",
    "start": "1423520",
    "end": "1430320"
  },
  {
    "text": "always had a problem with is doing parallel processing across multiple incoming streams of",
    "start": "1430320",
    "end": "1436200"
  },
  {
    "text": "data and you have a situation with that happens across multiple threads or",
    "start": "1436200",
    "end": "1442480"
  },
  {
    "text": "multiple processes where a newer version will take longer to process than an",
    "start": "1442480",
    "end": "1450039"
  },
  {
    "text": "older version uh or that's I guess it's the other way around a new version will",
    "start": "1450039",
    "end": "1456880"
  },
  {
    "text": "take less time and an older version will take a long time and and then the old",
    "start": "1461159",
    "end": "1466399"
  },
  {
    "text": "version overwrites the new version and so you have all this synchronization code you have to do which is kind of a",
    "start": "1466399",
    "end": "1471799"
  },
  {
    "text": "you know a real pain Cloud search does that all for you and it's a fabulous thing it it guarantees that every",
    "start": "1471799",
    "end": "1479919"
  },
  {
    "text": "document with a lower version for that document than has been pre index previously it's just ignored so you",
    "start": "1479919",
    "end": "1486120"
  },
  {
    "text": "never have to worry about this problem as long as you have that integer version number that increases for every new",
    "start": "1486120",
    "end": "1493480"
  },
  {
    "text": "version of the document now in the case of the Wikipedia uhst system we just did",
    "start": "1493480",
    "end": "1498720"
  },
  {
    "text": "you know large batch updates right right we would just update everything and then do another batch update so we just set",
    "start": "1498720",
    "end": "1506360"
  },
  {
    "text": "the version number equal to U the system the current system time at of the",
    "start": "1506360",
    "end": "1512080"
  },
  {
    "text": "initiation of the crawl you know minus some very large number and uh in seconds",
    "start": "1512080",
    "end": "1517200"
  },
  {
    "text": "rather than in milliseconds and so that's a that's a a good general purpose formula for you to use for document",
    "start": "1517200",
    "end": "1522840"
  },
  {
    "text": "version uh which is used by lots of people some of the detail",
    "start": "1522840",
    "end": "1528320"
  },
  {
    "text": "of the indexing you know we formed all the fields in the cloud search SDF that meant you know selecting individual",
    "start": "1528320",
    "end": "1533799"
  },
  {
    "text": "fields and mapping them to SDF fields we submitted it in batches uh submitting",
    "start": "1533799",
    "end": "1539440"
  },
  {
    "text": "them individually versus submitting them in batches was responsible for like a oh",
    "start": "1539440",
    "end": "1544840"
  },
  {
    "text": "gosh about an an eight times performance Improvement you can also Mo open",
    "start": "1544840",
    "end": "1550440"
  },
  {
    "text": "multiple connections to Cloud search which I think is really cool uh you don't have to send it over one pipe you",
    "start": "1550440",
    "end": "1555840"
  },
  {
    "text": "could open open up five pipes and send it across you know five different connections to the cloud search system",
    "start": "1555840",
    "end": "1561159"
  },
  {
    "text": "you get some improve improvements there and then finally if you put your index I'm sorry it's not the same Zone",
    "start": "1561159",
    "end": "1568480"
  },
  {
    "text": "it's the same region as Cloud search so if your indexer is on an ec2 instance in",
    "start": "1568480",
    "end": "1573720"
  },
  {
    "text": "the same region as Cloud search then you get many times better performance we were surprised I you know we had this",
    "start": "1573720",
    "end": "1579640"
  },
  {
    "text": "thing running um just on my laptop actually and we were getting about 50 documents per second and some of that",
    "start": "1579640",
    "end": "1586279"
  },
  {
    "text": "with some of just my laptop but we moved that to a large instance in",
    "start": "1586279",
    "end": "1591720"
  },
  {
    "text": "the same region as the cloud search system and we got 450 documents per second so that was like a nine times",
    "start": "1591720",
    "end": "1597799"
  },
  {
    "text": "Improvement you know the bandwidth within a region is so large that putting your indexer within the same region as",
    "start": "1597799",
    "end": "1605279"
  },
  {
    "text": "the cloud search uh search domain is is just a big win here's an example of the",
    "start": "1605279",
    "end": "1611640"
  },
  {
    "text": "cloud search SDF Cloud search SDF is just this XML record which represents a",
    "start": "1611640",
    "end": "1617320"
  },
  {
    "text": "batch of of transactions and you can have both add and delete transactions and so you see",
    "start": "1617320",
    "end": "1623039"
  },
  {
    "text": "the add transaction there with the version number in the ID and the list of all the fields that were submitted along",
    "start": "1623039",
    "end": "1629120"
  },
  {
    "text": "with the document and you can see where some of the fields like year month have been carefully processed ahead of time",
    "start": "1629120",
    "end": "1634679"
  },
  {
    "text": "as well as the teaser um you know and some other other content cool oh and you see the title",
    "start": "1634679",
    "end": "1640919"
  },
  {
    "text": "size and the content size so those some of the statistics that we compute as we go along so this is and and",
    "start": "1640919",
    "end": "1648360"
  },
  {
    "text": "of the data acquisition data processing and indexing data flow uh we start by fetching that dump",
    "start": "1648360",
    "end": "1655799"
  },
  {
    "text": "file we extract the URLs that we want to to index we then open a stream on every",
    "start": "1655799",
    "end": "1661440"
  },
  {
    "text": "URL we bzip to compress that stream it's a streaming decompressor so that's very cool we then do an XML subjob extractor",
    "start": "1661440",
    "end": "1669279"
  },
  {
    "text": "that underneath that uses Sachs to extract the individual pages each individual page then goes through a",
    "start": "1669279",
    "end": "1675320"
  },
  {
    "text": "metadata cleansing and content cleansing cleansing process which we did with uh groovy",
    "start": "1675320",
    "end": "1681480"
  },
  {
    "text": "scripting our framework has a groovy scripting module you can stick in there intermediate XML into Amazon Cloud",
    "start": "1681480",
    "end": "1688760"
  },
  {
    "text": "search XML batch that up into batches and send it to Amazon cool all right uh we have a",
    "start": "1688760",
    "end": "1697279"
  },
  {
    "text": "couple more sections uh and then we'll um ask uh start take questions uh",
    "start": "1697279",
    "end": "1703679"
  },
  {
    "text": "queries and relevancy this is you know being a search guy from the",
    "start": "1703679",
    "end": "1710880"
  },
  {
    "text": "1989 um queries and relevancy has always been my number one Fascination and",
    "start": "1710880",
    "end": "1717559"
  },
  {
    "text": "obviously there's a lot of different relevancy models a lot of different ways of doing queries uh what we started off with was",
    "start": "1717559",
    "end": "1725600"
  },
  {
    "text": "this debug interface and this is something that we do for almost you know all implementations I can send you a",
    "start": "1725600",
    "end": "1732960"
  },
  {
    "text": "copy it's it's just an HTML file in this case for cloud search we actually hosted",
    "start": "1732960",
    "end": "1739559"
  },
  {
    "text": "it on an ec2 instance with a little proxy server just to just for fun",
    "start": "1739559",
    "end": "1745519"
  },
  {
    "text": "basically and so I'm going to turn on the raw representation the it has an XSL",
    "start": "1745519",
    "end": "1752039"
  },
  {
    "text": "the hosted version has an xslt transform so I can submit it and you can see it gives me gives me the results here let's",
    "start": "1752039",
    "end": "1759360"
  },
  {
    "text": "do another query Amazon like so Amazon the Amazon you see",
    "start": "1759360",
    "end": "1765720"
  },
  {
    "text": "a lot of Wikipedia articles up top and categories this is some of the relevancy ranking that I was talking",
    "start": "1765720",
    "end": "1771000"
  },
  {
    "text": "about uh you can see the raw XML by clicking on Raw equals true here and",
    "start": "1771000",
    "end": "1776519"
  },
  {
    "text": "when I submit that you now see the basic structure of the XML that comes back",
    "start": "1776519",
    "end": "1782000"
  },
  {
    "text": "from cloud search and so this is the XML that needs to be rendered into your user interface in some way or",
    "start": "1782000",
    "end": "1788679"
  },
  {
    "text": "another um here we have 4,000 hits we started on uh hit zero uh the match",
    "start": "1788679",
    "end": "1794360"
  },
  {
    "text": "expression the the rank it's it's sorting uh descending by text relevancy and then",
    "start": "1794360",
    "end": "1800559"
  },
  {
    "text": "within the each of the hits you have all of the individual hits each one with a hit ID and then the list of of fields",
    "start": "1800559",
    "end": "1807679"
  },
  {
    "text": "which I selected the multivalue",
    "start": "1807679",
    "end": "1813519"
  },
  {
    "text": "category raas field the teaser text relevance some of these other items",
    "start": "1815360",
    "end": "1820960"
  },
  {
    "text": "content size uh resubmit in addition to this hits",
    "start": "1820960",
    "end": "1828320"
  },
  {
    "text": "uh tag we now have a facets tag and inside the facets tag we have both of",
    "start": "1828320",
    "end": "1834080"
  },
  {
    "text": "our facets the author and the categories within the author we have an individual",
    "start": "1834080",
    "end": "1840279"
  },
  {
    "text": "constraint tag for each of the individual values with the counts for all of those and then similarly for the",
    "start": "1840279",
    "end": "1846440"
  },
  {
    "text": "the cat categories tag so it's you know it's a very straightforward XML",
    "start": "1846440",
    "end": "1852080"
  },
  {
    "text": "structure uh very easy to parse and turn into an XML uh presentation you see it also has",
    "start": "1852080",
    "end": "1859840"
  },
  {
    "text": "the time so it tells you how long it took to do the query and their request ID so that's just a a very useful",
    "start": "1859840",
    "end": "1866919"
  },
  {
    "text": "technique and then you can play with you know different types of relevancy ranking different types of parameters",
    "start": "1866919",
    "end": "1873399"
  },
  {
    "text": "play with the BQ queries and make sure that all those filters are working correctly and the debug interface really",
    "start": "1873399",
    "end": "1879240"
  },
  {
    "text": "helps you do that now queries for Wikipedia turns out you know the query was quite easy for",
    "start": "1879240",
    "end": "1886440"
  },
  {
    "text": "cloud search we just take whatever the user entered and put it into the Q field um we use uh the BQ field for",
    "start": "1886440",
    "end": "1894559"
  },
  {
    "text": "selecting facets and the BQ you can specify the field the name and the value",
    "start": "1894559",
    "end": "1900519"
  },
  {
    "text": "so it'd be like actually the word field and then title in the value for including uh filtering on a facet and",
    "start": "1900519",
    "end": "1907519"
  },
  {
    "text": "for excluding a facet value because our user interface allows for both including and excluding facets you know you have a",
    "start": "1907519",
    "end": "1913760"
  },
  {
    "text": "not parameter and you can combine these expressions with and in or the only comment I'd make about BQ and these",
    "start": "1913760",
    "end": "1921600"
  },
  {
    "text": "these um uh prefix notation is just don't forget to escape the single quotes",
    "start": "1921600",
    "end": "1927120"
  },
  {
    "text": "so remember that you have single quotes in here and if you if your data value has single quotes uh you'll need to be",
    "start": "1927120",
    "end": "1932960"
  },
  {
    "text": "careful to escape those now relevancy ranking U gosh I could spend hours on this but I won't in",
    "start": "1932960",
    "end": "1941120"
  },
  {
    "text": "Cloud search this is done with rank Expressions now rank Expressions uh a way of doing relevancy",
    "start": "1941120",
    "end": "1948279"
  },
  {
    "text": "ranking that emphasizes document quality that is if you have any sorts of",
    "start": "1948279",
    "end": "1953760"
  },
  {
    "text": "Statistics which identify high quality documents over low quality of documents",
    "start": "1953760",
    "end": "1958919"
  },
  {
    "text": "then rank expressions are going to be perfect for that so as an example um any kind of document",
    "start": "1958919",
    "end": "1965799"
  },
  {
    "text": "statistics like content size or title size or whatever if you have ratings um",
    "start": "1965799",
    "end": "1971120"
  },
  {
    "text": "if you're doing that kind of uh search engine e-commerce will typically have a lot of of good document",
    "start": "1971120",
    "end": "1978360"
  },
  {
    "text": "quality data like sales data ratings data uh click-through counts um",
    "start": "1978360",
    "end": "1983880"
  },
  {
    "text": "conversion counts and things like that if you have uh interlinkages",
    "start": "1983880",
    "end": "1989919"
  },
  {
    "text": "say you're doing uh an academic datab base with referen biographies you uh",
    "start": "1989919",
    "end": "1995559"
  },
  {
    "text": "incoming links will be a very useful one we wanted to do that for Wikipedia we just didn't have the time if you have",
    "start": "1995559",
    "end": "2001559"
  },
  {
    "text": "editorial comments like Flags or popularity um freshness and recency so",
    "start": "2001559",
    "end": "2007320"
  },
  {
    "text": "if you're like in a news system and you want your more recent documents to be uh of a higher quality then you can",
    "start": "2007320",
    "end": "2013519"
  },
  {
    "text": "incorporate that into the rank expression expressions are Uber flexible and they work great I mean you just",
    "start": "2013519",
    "end": "2019360"
  },
  {
    "text": "specify the expression uh in the cloud search uh console and then it'll create",
    "start": "2019360",
    "end": "2026519"
  },
  {
    "text": "a rank expression that you can then use for sorting with the uh rank parameter uh so it's very easy in the case of",
    "start": "2026519",
    "end": "2033600"
  },
  {
    "text": "Wikipedia we decided to boost longer documents that that's because you know longer documents tend to be more",
    "start": "2033600",
    "end": "2039960"
  },
  {
    "text": "comprehensive documents which are more um you know descriptive and also",
    "start": "2039960",
    "end": "2045039"
  },
  {
    "text": "documents with shorter titles we discovered that once you had longer and longer titles those documents tend to be",
    "start": "2045039",
    "end": "2051158"
  },
  {
    "text": "about more Niche uh areas rather than over broader areas so for example you",
    "start": "2051159",
    "end": "2056679"
  },
  {
    "text": "know a query over Olympics will be um just the smaller title of Olympics will",
    "start": "2056679",
    "end": "2062280"
  },
  {
    "text": "be um better than you know Olympics of 2010 swimming team from Australia for",
    "start": "2062280",
    "end": "2069158"
  },
  {
    "text": "example and then we decided to reduce documents in the Wikipedia Nam space um",
    "start": "2069159",
    "end": "2074679"
  },
  {
    "text": "documents in the Wikipedia namespace are about Wikipedia itself they're not so much about uh articles that end users",
    "start": "2074679",
    "end": "2080960"
  },
  {
    "text": "would Mo most like likely to see and then this is the resulting expression that we came up with we tend to use",
    "start": "2080960",
    "end": "2087000"
  },
  {
    "text": "logarithms a lot just because um most of this type of data is log normal data and",
    "start": "2087000",
    "end": "2092280"
  },
  {
    "text": "taking the log 10 of it will give you a nice gaussian distributions that you can use",
    "start": "2092280",
    "end": "2098119"
  },
  {
    "text": "cool okay so that's relevancy ranking with Wikipedia um and again that was mostly",
    "start": "2098119",
    "end": "2103400"
  },
  {
    "text": "just figuring out what the formula was and then entering it into the cloud search console so very very easy",
    "start": "2103400",
    "end": "2108640"
  },
  {
    "text": "actually and then finally building the user interface now with the user interface you can build it in a variety",
    "start": "2108640",
    "end": "2114320"
  },
  {
    "text": "of different ways um you know every toolkit that's known to man um Java",
    "start": "2114320",
    "end": "2120359"
  },
  {
    "text": "server faes or if you use a proxy server you can get the Json directly from cloud",
    "start": "2120359",
    "end": "2125640"
  },
  {
    "text": "search and render it in j query or some other uh client side application for example if you get XML from cloud search",
    "start": "2125640",
    "end": "2133119"
  },
  {
    "text": "you can use an xslt transform to render it which you saw in the debug",
    "start": "2133119",
    "end": "2138240"
  },
  {
    "text": "interface uh what we decided to do was use this um framework search framework",
    "start": "2138240",
    "end": "2145160"
  },
  {
    "text": "search user interface framework called twig kit uh and it's useful because you",
    "start": "2145160",
    "end": "2151760"
  },
  {
    "text": "know those guys have handled all of the detail work about how how to to render",
    "start": "2151760",
    "end": "2158240"
  },
  {
    "text": "uh Navigators and all the clicks and all of the the breadcrumbs and everything so",
    "start": "2158240",
    "end": "2163640"
  },
  {
    "text": "that most of that user inface that you saw was a twig kit uh widgets that we",
    "start": "2163640",
    "end": "2169960"
  },
  {
    "text": "then combined together to make our custom uh Wikipedia search engine in order to get Cloud search to work with",
    "start": "2169960",
    "end": "2176560"
  },
  {
    "text": "twigkit though we first created a Java API and this is open source and was",
    "start": "2176560",
    "end": "2182839"
  },
  {
    "text": "announced on the the Amazon uh forums which is just an ordinary Java API that",
    "start": "2182839",
    "end": "2188839"
  },
  {
    "text": "handles all the communications to Cloud search that is creating the URL and the parameters and then processing the uh",
    "start": "2188839",
    "end": "2195280"
  },
  {
    "text": "the cloud search query XML that comes back we then wrapped that Java API with",
    "start": "2195280",
    "end": "2200400"
  },
  {
    "text": "the cloud search platform that's a special twigkit plugin which essentially",
    "start": "2200400",
    "end": "2205599"
  },
  {
    "text": "translates the communications required by qu twigkit to the communications",
    "start": "2205599",
    "end": "2210720"
  },
  {
    "text": "provided by the cloud search JPI Java API so it's a a translation layer to",
    "start": "2210720",
    "end": "2216720"
  },
  {
    "text": "translate between Cloud search needs and Twig kit needs um both of those turned",
    "start": "2216720",
    "end": "2221839"
  },
  {
    "text": "out to be quite E",
    "start": "2221839",
    "end": "2225880"
  },
  {
    "text": "easy to create and you know it was really really quite easy and then once",
    "start": "2227880",
    "end": "2234359"
  },
  {
    "text": "we plugged the whole thing together you know we got the the beautiful twicket interface that you saw and so just to",
    "start": "2234359",
    "end": "2240640"
  },
  {
    "text": "just to emphasize the UI architecture if Tomcat for the Java application",
    "start": "2240640",
    "end": "2246119"
  },
  {
    "text": "container twigkit which handles all the graphical user interface uh controls the cloud",
    "start": "2246119",
    "end": "2251599"
  },
  {
    "text": "search platform translates between twigkit and the cloud search Java API",
    "start": "2251599",
    "end": "2256920"
  },
  {
    "text": "and then finally the cloud search Java API and and there's a link for it if you'd like to download that and uh and",
    "start": "2256920",
    "end": "2262880"
  },
  {
    "text": "source code is provided so you can you know do whatever you'd like with that and that's it so let's let's just",
    "start": "2262880",
    "end": "2268960"
  },
  {
    "text": "do a quick summary these are the typical stages of a search engine implementation",
    "start": "2268960",
    "end": "2274319"
  },
  {
    "text": "data acquisition um you can use a variety of different techniques we used our own framework called Aspire data",
    "start": "2274319",
    "end": "2281359"
  },
  {
    "text": "processing again a variety of scripting techniques are possible there uh again",
    "start": "2281359",
    "end": "2286800"
  },
  {
    "text": "we used our own framework called Aspire indexing uh again very straightforward",
    "start": "2286800",
    "end": "2291920"
  },
  {
    "text": "just create the right XML structure and pipe it over to Cloud search query just",
    "start": "2291920",
    "end": "2297480"
  },
  {
    "text": "that's a question of identifying what query parameters what query structure and rank Expressions you need to use and",
    "start": "2297480",
    "end": "2303480"
  },
  {
    "text": "then finally the user interface and our solution for that was the the twick hit API although again any other Java server",
    "start": "2303480",
    "end": "2311000"
  },
  {
    "text": "faces or jQuery um and user interface would work just as well and there you go thank you so much",
    "start": "2311000",
    "end": "2318160"
  },
  {
    "text": "for uh your time I think we have uh plenty of time now for questions Mike would you like to take",
    "start": "2318160",
    "end": "2324280"
  },
  {
    "text": "over sure so if uh you haven't entered in your question uh please do so in the",
    "start": "2324280",
    "end": "2329400"
  },
  {
    "text": "question box on your go to meeting control panel uh Paul I have a I think",
    "start": "2329400",
    "end": "2335200"
  },
  {
    "text": "you addressed this but I had one question here which was what did you use for category",
    "start": "2335200",
    "end": "2342000"
  },
  {
    "text": "extraction oh right the category extraction that was a simple regular expression over the content uh",
    "start": "2342000",
    "end": "2347920"
  },
  {
    "text": "categories are identified in the content with square bracket square bracket the word categor colon and the category so",
    "start": "2347920",
    "end": "2355119"
  },
  {
    "text": "we we uh ran a regular expression to extract all of those and then we did a little normalization on the category",
    "start": "2355119",
    "end": "2361280"
  },
  {
    "text": "name itself and then that gave us a list of categories which we then of course um",
    "start": "2361280",
    "end": "2366599"
  },
  {
    "text": "put in as a list of field tags in the cloud search stf great thanks so John I guess this",
    "start": "2366599",
    "end": "2373599"
  },
  {
    "text": "one might be for you uh and and Paul please chime in uh the question is how",
    "start": "2373599",
    "end": "2378960"
  },
  {
    "text": "easy is it to move from solar let's say to Cloud search yeah thanks um so it's it's uh",
    "start": "2378960",
    "end": "2387920"
  },
  {
    "text": "really simple to move from solar to Cloud search um you have on the one hand",
    "start": "2387920",
    "end": "2393480"
  },
  {
    "text": "the getting your data into Cloud search and Cloud searches format uh is is very",
    "start": "2393480",
    "end": "2399160"
  },
  {
    "text": "similar to solar's format so you can uh intercept very easily your solar documents and send them over to Cloud",
    "start": "2399160",
    "end": "2406240"
  },
  {
    "text": "search um and we uh support a a range of features that that solar supports and um",
    "start": "2406240",
    "end": "2413960"
  },
  {
    "text": "should be a quick step over I might add that we've already had a number of users that have done the migration with really",
    "start": "2413960",
    "end": "2419880"
  },
  {
    "text": "very little pain you know yeah I think that the uh the index XML structure the",
    "start": "2419880",
    "end": "2426560"
  },
  {
    "text": "update XML for uh solar is almost exactly the same as the update XML for",
    "start": "2426560",
    "end": "2432200"
  },
  {
    "text": "for cloud search so that's a very easily translation and the parameters",
    "start": "2432200",
    "end": "2440680"
  },
  {
    "text": "are roughly equal then the cloud search deployment you know what did that look like in terms of the number of",
    "start": "2451920",
    "end": "2459599"
  },
  {
    "text": "instances uh the week it it kind of went all over the map but when when we finally got everything cleaned up and",
    "start": "2460400",
    "end": "2466560"
  },
  {
    "text": "all the um uh the redirects removed we ended up with about 6.7 million documents in the",
    "start": "2466560",
    "end": "2475599"
  },
  {
    "text": "Wikipedia database now I know if you go to the Wikipedia homepage it says there's like 2.8 million articles but",
    "start": "2475599",
    "end": "2482800"
  },
  {
    "text": "not every page is counted as an article for that count so the total number of",
    "start": "2482800",
    "end": "2489400"
  },
  {
    "text": "pages minus redirects that includes Wikipedia pages and Pages which are too small",
    "start": "2489400",
    "end": "2496079"
  },
  {
    "text": "that we",
    "start": "2496079",
    "end": "2499280"
  },
  {
    "text": "can considered to be articles came out extra- large instances and you know that that may",
    "start": "2501200",
    "end": "2508760"
  },
  {
    "text": "that that I think is in part because of the both the traffic and the and the data",
    "start": "2508760",
    "end": "2514800"
  },
  {
    "text": "size yeah let me just piggyback on that a little bit um Cloud search as as Mike",
    "start": "2514800",
    "end": "2520760"
  },
  {
    "text": "mentioned at the beginning does automatically scale um in two directions to handle your your search problem so as",
    "start": "2520760",
    "end": "2529119"
  },
  {
    "text": "you send more data Cloud search will scale from a small to a large to an extra large and then partition out to",
    "start": "2529119",
    "end": "2535880"
  },
  {
    "text": "handle as much data as you want to send and it also um as you send more",
    "start": "2535880",
    "end": "2545160"
  },
  {
    "text": "traffic we will add copies or replicas of each of the partitions to handle",
    "start": "2545160",
    "end": "2550480"
  },
  {
    "text": "additional traffic uh as you're sending it to us and then of course if traffic dies down if you're dealing with a spike",
    "start": "2550480",
    "end": "2556280"
  },
  {
    "text": "or something like that we'll scale back to right size the domain to handle your traffic and you know",
    "start": "2556280",
    "end": "2564000"
  },
  {
    "text": "as of now we have some uh limits on size that you can scale to which is 10 wide",
    "start": "2564000",
    "end": "2570640"
  },
  {
    "text": "and five deep um but it's very easy we have a little form on the on the website you can contact us us we can expand that",
    "start": "2570640",
    "end": "2577920"
  },
  {
    "text": "pretty much uh as large as you'd want we currently have customers with more than a billion documents and uh more than a",
    "start": "2577920",
    "end": "2585599"
  },
  {
    "text": "terabyte of uh of source data so Cloud sech can scale to be quite large and",
    "start": "2585599",
    "end": "2593400"
  },
  {
    "text": "um yes and that would be a terabyte of post-process data I imagine whereas you",
    "start": "2593400",
    "end": "2600800"
  },
  {
    "text": "know a lot of people if they're indexing PowerPoint presentations and um micros",
    "start": "2600800",
    "end": "2606160"
  },
  {
    "text": "softw documents uh you know that that that can run up into the terabytes really really",
    "start": "2606160",
    "end": "2611800"
  },
  {
    "text": "quickly but uh I think what you're talking about is the post-process data yes exactly and that's an excellent",
    "start": "2611800",
    "end": "2618119"
  },
  {
    "text": "point um we hear from people who say I have you know 50 megabyte PDF files and",
    "start": "2618119",
    "end": "2624040"
  },
  {
    "text": "how am I going to get those in there and and really the when when the text is extracted from that file um it's going",
    "start": "2624040",
    "end": "2630000"
  },
  {
    "text": "to be quite a bit smaller than that okay hey here's one question",
    "start": "2630000",
    "end": "2636280"
  },
  {
    "text": "question um how can I search domains based on document",
    "start": "2636280",
    "end": "2642720"
  },
  {
    "text": "types could be blogs or images or videos um the question was how do I",
    "start": "2642720",
    "end": "2648079"
  },
  {
    "text": "query across all of these uh domains you want to take that John sure",
    "start": "2648079",
    "end": "2653880"
  },
  {
    "text": "I'll jump in so um one thing is that thinking about your search problem and",
    "start": "2653880",
    "end": "2659480"
  },
  {
    "text": "your data layout you can actually segment your data within a single domain",
    "start": "2659480",
    "end": "2665160"
  },
  {
    "text": "by adding a type field to each of your documents and then using that as a filter within your queries So within a",
    "start": "2665160",
    "end": "2673079"
  },
  {
    "text": "single domain you could put uh different types of uh Corpus or different sources",
    "start": "2673079",
    "end": "2678640"
  },
  {
    "text": "of information to search across domains um is a somewhat complicated problem",
    "start": "2678640",
    "end": "2685680"
  },
  {
    "text": "where you would have to send each of the queries and then do some kind of uh",
    "start": "2685680",
    "end": "2690800"
  },
  {
    "text": "Federated search that includes a blending of the results uh keeping in mind the the the relevance values in",
    "start": "2690800",
    "end": "2697920"
  },
  {
    "text": "each of the different domains to get an overall sort uh another way to approach it is if the if the types of information",
    "start": "2697920",
    "end": "2705480"
  },
  {
    "text": "are very different then to present different segments in the user interface",
    "start": "2705480",
    "end": "2710559"
  },
  {
    "text": "representing each of the sets of results um from each of the types of",
    "start": "2710559",
    "end": "2716200"
  },
  {
    "text": "information yeah I'll just throw I'll just make a you know add that we you know we recommend if you can put",
    "start": "2716200",
    "end": "2721880"
  },
  {
    "text": "everything in the same search domain you will get the better the best POS possible relevancy ranking from doing",
    "start": "2721880",
    "end": "2727680"
  },
  {
    "text": "that uh it'll share the statistics and have a have a better uh text more",
    "start": "2727680",
    "end": "2733400"
  },
  {
    "text": "uniform text relevancy across all of your documents if you can do that and if not then you know I think",
    "start": "2733400",
    "end": "2739760"
  },
  {
    "text": "just sending out parallel queries and presenting those in multiple tabs or multiple um divs is maybe the best way",
    "start": "2739760",
    "end": "2745760"
  },
  {
    "text": "to go thanks Paul uh so here's a question",
    "start": "2745760",
    "end": "2751400"
  },
  {
    "text": "that just came in around uh how do you handle different users having different access to data based on their own data",
    "start": "2751400",
    "end": "2759160"
  },
  {
    "text": "and connections to other users such as social graph MH Cloud search's uh",
    "start": "2759160",
    "end": "2765359"
  },
  {
    "text": "security model is IP based at the moment um so if you're were talking about",
    "start": "2765359",
    "end": "2772880"
  },
  {
    "text": "securing the domain itself for access from different groups of people uh we",
    "start": "2772880",
    "end": "2779720"
  },
  {
    "text": "don't currently have a great solution for that within a cloud search domain",
    "start": "2779720",
    "end": "2786559"
  },
  {
    "text": "um you can add access information to each of your documents and then use booing queries to",
    "start": "2786559",
    "end": "2795400"
  },
  {
    "text": "um restrict access based on the querying individual actually I think Paul can",
    "start": "2795400",
    "end": "2800960"
  },
  {
    "text": "probably comment on that too yeah and um I mean that's that's almost exactly what's done uh as you craw the documents",
    "start": "2800960",
    "end": "2808359"
  },
  {
    "text": "you extract the ACLS and then index the acl's into an ACL field and then when",
    "start": "2808359",
    "end": "2813400"
  },
  {
    "text": "the user connects up to the system you you'll uh expand that user to all their group membership and create a an or of",
    "start": "2813400",
    "end": "2820000"
  },
  {
    "text": "all the the groups to which the user is is a member of you may also have a not",
    "start": "2820000",
    "end": "2825480"
  },
  {
    "text": "AAL field if they're deny AAL as well and then construct the appropriate Boolean expression uh the Aspire",
    "start": "2825480",
    "end": "2831760"
  },
  {
    "text": "framework that I mentioned does have connectors that actually extract all those ACLS and then index those into",
    "start": "2831760",
    "end": "2838400"
  },
  {
    "text": "Cloud search so we have actually index SharePoint with ACLS and uh file systems",
    "start": "2838400",
    "end": "2843440"
  },
  {
    "text": "and other um S3 with acl's into uh Cloud search and then on the other side we've",
    "start": "2843440",
    "end": "2849640"
  },
  {
    "text": "also got uh group expansion to do that group expansion and I'll just throw in a plug for twick kit twick kit also has",
    "start": "2849640",
    "end": "2855680"
  },
  {
    "text": "some of the single sign on and um you know that the the user authentication",
    "start": "2855680",
    "end": "2861880"
  },
  {
    "text": "part built in as part of that as well so those tools are are out there and",
    "start": "2861880",
    "end": "2866920"
  },
  {
    "text": "available if you need to uh to put that sort of application",
    "start": "2866920",
    "end": "2873160"
  },
  {
    "text": "together okay here here's one for you John are you able to handle uh bulk deletes for stale data or set data",
    "start": "2874000",
    "end": "2882440"
  },
  {
    "text": "expiration so the way we handle deletes now is um we handle you send a delete",
    "start": "2882440",
    "end": "2889760"
  },
  {
    "text": "for each document that you want to delete so we don't have a notion of a delete query where you could specify a",
    "start": "2889760",
    "end": "2896880"
  },
  {
    "text": "query that that pulled a set of documents and then deleted those documents uh you'd have to run that",
    "start": "2896880",
    "end": "2902480"
  },
  {
    "text": "query and then generate the SDF for the delete for all of those documents but",
    "start": "2902480",
    "end": "2908559"
  },
  {
    "text": "within that we do handle you know document batching so you can send uh a",
    "start": "2908559",
    "end": "2914359"
  },
  {
    "text": "number of deletes at the same time within the same batch I'm G to throw in a a thing here",
    "start": "2914359",
    "end": "2920680"
  },
  {
    "text": "too unlike any other search engine I've ever done you can access enormous",
    "start": "2920680",
    "end": "2926240"
  },
  {
    "text": "results lists from cloud search this is one of the thing that just astonished me most other search engines will stop at",
    "start": "2926240",
    "end": "2932119"
  },
  {
    "text": "like a thousand or 4,000 but in Cloud search I was able to download like a",
    "start": "2932119",
    "end": "2937480"
  },
  {
    "text": "100,000 500,000 doc IDs on a single query it's like whoa and it comes back",
    "start": "2937480",
    "end": "2943640"
  },
  {
    "text": "very quickly like in a couple seconds that's just kind of unheard of in the search engine world so if you need these",
    "start": "2943640",
    "end": "2949200"
  },
  {
    "text": "large deletes it's actually really easy just to do a search download them all and then turn them around to the search",
    "start": "2949200",
    "end": "2954720"
  },
  {
    "text": "engine and uh we've done that for some of these larger larger uh batch delites and it works just",
    "start": "2954720",
    "end": "2962280"
  },
  {
    "text": "fine here's a question actually there's a couple questions with regards to what kind of documents um can be indexes and",
    "start": "2962520",
    "end": "2969640"
  },
  {
    "text": "sources so one is are there any connectors to CMS data and in terms of",
    "start": "2969640",
    "end": "2975839"
  },
  {
    "text": "document types uh how do you hand handle uh PDFs or Word",
    "start": "2975839",
    "end": "2981280"
  },
  {
    "text": "documents so out of the box uh what cloud search has is uh a tool a command",
    "start": "2981280",
    "end": "2987240"
  },
  {
    "text": "line tool um that's also integrated into the console which will do a very basic",
    "start": "2987240",
    "end": "2993920"
  },
  {
    "text": "uh text extraction on PDF word um Etc",
    "start": "2993920",
    "end": "3000440"
  },
  {
    "text": "what it won't do is any any of the more complicated processing that Paul talked about to extract fields or to um you",
    "start": "3000440",
    "end": "3008720"
  },
  {
    "text": "know run regular Expressions to figure out what the contents of the document are and how they should map to uh",
    "start": "3008720",
    "end": "3015599"
  },
  {
    "text": "particular document Fields the tool we provide is really something that would just pull the entire content as a text",
    "start": "3015599",
    "end": "3021960"
  },
  {
    "text": "blob and allow you to index over that um and again I'll I'll let Paul jump in",
    "start": "3021960",
    "end": "3027520"
  },
  {
    "text": "here I think as we've seen he's got a a nice add-on there yeah the framework our",
    "start": "3027520",
    "end": "3033520"
  },
  {
    "text": "framework has that built in uh I would just also say that Apache tikas is you",
    "start": "3033520",
    "end": "3038799"
  },
  {
    "text": "know practically the standard way of doing that these days works great across a wide variety of sources and it",
    "start": "3038799",
    "end": "3044880"
  },
  {
    "text": "extracts both fielded data as well as um the full text of the content um and it's",
    "start": "3044880",
    "end": "3050400"
  },
  {
    "text": "really easy to use so that's that's a great way to to do it is to IND integrate uh Pache Tika so that's what",
    "start": "3050400",
    "end": "3056240"
  },
  {
    "text": "we've done and you know you can use our framework for that as well if you'd",
    "start": "3056240",
    "end": "3062680"
  },
  {
    "text": "like right so here's a question regarding um where the search UI that",
    "start": "3063440",
    "end": "3068640"
  },
  {
    "text": "where the results um and the UI need to be uh the question is um does the search",
    "start": "3068640",
    "end": "3075480"
  },
  {
    "text": "results UI need to be hosted on the Amazon AWS cloud cloud or can it be",
    "start": "3075480",
    "end": "3082119"
  },
  {
    "text": "hosted on an in-house Farm Cloud search yes so I I'll jump in on that one um so",
    "start": "3082119",
    "end": "3089000"
  },
  {
    "text": "a little bit of the sort of cloud search architecture and design here Cloud search uh creates your domain for you in",
    "start": "3089000",
    "end": "3095040"
  },
  {
    "text": "the cloud and then exposes two stable DNS entries um for you to access the",
    "start": "3095040",
    "end": "3103359"
  },
  {
    "text": "domain so it's a restful service when you're sending documents it's a simple",
    "start": "3103359",
    "end": "3108960"
  },
  {
    "text": "HTTP post and as I mentioned this the security model is IP based so if you're",
    "start": "3108960",
    "end": "3114960"
  },
  {
    "text": "any host uh on in on the internet can access that domain provided that you set",
    "start": "3114960",
    "end": "3120839"
  },
  {
    "text": "up the access control to allow it and can post the document similarly with search results um any any IP address",
    "start": "3120839",
    "end": "3129599"
  },
  {
    "text": "that you set up access for can send a get request with the query and the URL",
    "start": "3129599",
    "end": "3135359"
  },
  {
    "text": "to retrieve uh search results from your search",
    "start": "3135359",
    "end": "3139799"
  },
  {
    "text": "domain great um here's one for data acquisition is is there any way to pull",
    "start": "3141119",
    "end": "3146240"
  },
  {
    "text": "data from a database by opening up a database connection to the source itself",
    "start": "3146240",
    "end": "3151400"
  },
  {
    "text": "or does the transformation on happen on cloud search itself or um do I need to",
    "start": "3151400",
    "end": "3158119"
  },
  {
    "text": "do the transformation from database so Cloud search again out of",
    "start": "3158119",
    "end": "3163799"
  },
  {
    "text": "the box we provide the the restful service that allows you to post SDF uh",
    "start": "3163799",
    "end": "3169799"
  },
  {
    "text": "for your documents and we don't in the back manage any kind of database Bas",
    "start": "3169799",
    "end": "3175520"
  },
  {
    "text": "connections or data transformation and uh I really think Paul makes an excellent point that as",
    "start": "3175520",
    "end": "3182680"
  },
  {
    "text": "you think about you want to put it into a search engine as a search document um",
    "start": "3182680",
    "end": "3188640"
  },
  {
    "text": "that step is really for the developer to do",
    "start": "3188640",
    "end": "3194559"
  },
  {
    "text": "themselves okay so we answered I think the question about how do you get from",
    "start": "3194559",
    "end": "3199720"
  },
  {
    "text": "solar to Cloud search but I've seen a few questions just popping up around why",
    "start": "3199720",
    "end": "3204799"
  },
  {
    "text": "would you move from solar to Cloud search in fact one says you know if it's",
    "start": "3204799",
    "end": "3211359"
  },
  {
    "text": "working well and it doesn't need to scale why would I go to Cloud search so I know we've heard feedback from some",
    "start": "3211359",
    "end": "3217720"
  },
  {
    "text": "solar users that when it when it comes to scaling it becomes you know more",
    "start": "3217720",
    "end": "3223720"
  },
  {
    "text": "difficult to manage and deploy um as you go across chards and partitions and so",
    "start": "3223720",
    "end": "3229960"
  },
  {
    "text": "on so what's what what what have you been hearing John yeah I mean I think that um solar",
    "start": "3229960",
    "end": "3237119"
  },
  {
    "text": "is uh well suited if if you're uh willing to focus the time and",
    "start": "3237119",
    "end": "3243000"
  },
  {
    "text": "attention and need the additional uh sort of ability to to",
    "start": "3243000",
    "end": "3248920"
  },
  {
    "text": "tweak and control at a very very deep level including writing code to uh do customized things Cloud search is really",
    "start": "3248920",
    "end": "3256000"
  },
  {
    "text": "a great TurnKey solution that takes a lot of the burden of figuring out",
    "start": "3256000",
    "end": "3261920"
  },
  {
    "text": "deployments and partitioning and uh keeping your your code up to dat um one",
    "start": "3261920",
    "end": "3269760"
  },
  {
    "text": "thing we we haven't mentioned is that cloud search uh you",
    "start": "3269760",
    "end": "3277680"
  },
  {
    "text": "know it it takes care of domain so the operational overhead really of running",
    "start": "3279520",
    "end": "3287240"
  },
  {
    "text": "your own uh search solution is really taken",
    "start": "3287240",
    "end": "3292480"
  },
  {
    "text": "from your olders and Company I may not have you",
    "start": "3292480",
    "end": "3299839"
  },
  {
    "text": "know the desire to develop expertise in search to be able to um deploy something",
    "start": "3299839",
    "end": "3306640"
  },
  {
    "text": "like solar I'd rather focus on my mission critical uh problem and and put my effort behind that and just have",
    "start": "3306640",
    "end": "3313760"
  },
  {
    "text": "search sort of out of the box easy to use so I think those are the benefits of",
    "start": "3313760",
    "end": "3319200"
  },
  {
    "text": "of going with Cloud search there's also an availability um story that some AB as",
    "start": "3319200",
    "end": "3325599"
  },
  {
    "text": "well yeah if uh if you're running your own uh",
    "start": "3325599",
    "end": "3330960"
  },
  {
    "text": "solar deployment then uh and a host goes down then you have the the headache of",
    "start": "3330960",
    "end": "3337079"
  },
  {
    "text": "really you lose all of your data you lose everything that was on that host with Cloud search if a host goes out we",
    "start": "3337079",
    "end": "3343799"
  },
  {
    "text": "are able to you know reprovision and bring a host back",
    "start": "3343799",
    "end": "3348880"
  },
  {
    "text": "up and other questions on your um on your",
    "start": "3353839",
    "end": "3359000"
  },
  {
    "text": "deployment here your project um how many fields did you index per document and",
    "start": "3359000",
    "end": "3365319"
  },
  {
    "text": "how many of those were parametric uh let's see I'd say there",
    "start": "3365319",
    "end": "3371760"
  },
  {
    "text": "are maybe a couple dozen fields and by parametric Fields do they",
    "start": "3371760",
    "end": "3377039"
  },
  {
    "text": "mean facet Fields I don't have any more than that",
    "start": "3377039",
    "end": "3382760"
  },
  {
    "text": "if if you mean facets then maybe four or five facet",
    "start": "3382760",
    "end": "3388240"
  },
  {
    "text": "Fields um you know any uh I think we there may have been a few more that we selected this facets",
    "start": "3388240",
    "end": "3395280"
  },
  {
    "text": "but not necessarily actually used in the user interface so maybe as many as six facet Fields across the the 20 24 fields",
    "start": "3395280",
    "end": "3404240"
  },
  {
    "text": "or so and then there was another maybe half dozen fields that hold numeric",
    "start": "3404240",
    "end": "3409880"
  },
  {
    "text": "information um that we use for relevancy scoring",
    "start": "3409880",
    "end": "3416079"
  },
  {
    "text": "Paul there was a question regarding relevance ranking such as uh keyword",
    "start": "3416079",
    "end": "3421520"
  },
  {
    "text": "waiting factors or even something like page rank yeah page rank is a perfect use for",
    "start": "3421520",
    "end": "3430799"
  },
  {
    "text": "um for cloud search if you have a page rank that is uh you know some compute",
    "start": "3430799",
    "end": "3437000"
  },
  {
    "text": "some way of computing based on number of inbound links and Authority references and things like that what the page L",
    "start": "3437000",
    "end": "3443240"
  },
  {
    "text": "rank is for each of your documents and I mean most systems of any size will use like a Hadoop architecture for computing",
    "start": "3443240",
    "end": "3449760"
  },
  {
    "text": "page ranks that's what Google does does and they do that as a pre-processing goes into the search",
    "start": "3449760",
    "end": "3457200"
  },
  {
    "text": "engine which you can then include into the the rank expression so it's a great way of doing a document",
    "start": "3457200",
    "end": "3463839"
  },
  {
    "text": "quality um and using that in their the ranking expression weighted keywords there's a",
    "start": "3463839",
    "end": "3470880"
  },
  {
    "text": "little bit you can do there um you can over index some fields and get some weighted keywords on that that's",
    "start": "3470880",
    "end": "3477359"
  },
  {
    "text": "probably the best way to do it for now and then um you I think there there'll be some additional uh capabilities on on",
    "start": "3477359",
    "end": "3486359"
  },
  {
    "text": "weighted keywords um in the",
    "start": "3486359",
    "end": "3490759"
  },
  {
    "text": "near",
    "start": "3503720",
    "end": "3506720"
  },
  {
    "text": "future thanks Paul regions so over the next year or so you",
    "start": "3526599",
    "end": "3532280"
  },
  {
    "text": "should expect to see more languages coming out with native support especially Asian languages where which",
    "start": "3532280",
    "end": "3539119"
  },
  {
    "text": "would support a native tokenization of that language as well as um stops and",
    "start": "3539119",
    "end": "3545039"
  },
  {
    "text": "stems and synonyms for that okay well that's our time everyone",
    "start": "3545039",
    "end": "3551480"
  },
  {
    "text": "thank you for joining us on your screen you can see some contact information if you have any questions uh please get",
    "start": "3551480",
    "end": "3558440"
  },
  {
    "text": "them to us uh and there's a wealth of information on the aws.amazon.com",
    "start": "3558440",
    "end": "3565280"
  },
  {
    "text": "Cloud search overview page there you can get tutorials uh demos recorded um lots",
    "start": "3565280",
    "end": "3572480"
  },
  {
    "text": "of information FAQs uh if you want or more information on pricing so uh please",
    "start": "3572480",
    "end": "3578160"
  },
  {
    "text": "check that out and in addition um obviously go to the search technology site you can see Paul's blog on how he",
    "start": "3578160",
    "end": "3584520"
  },
  {
    "text": "did it as well as uh do your own Wikipedia searches so thanks very much",
    "start": "3584520",
    "end": "3590039"
  },
  {
    "text": "for joining us Paul thank you for participating uh we look forward to uh working with you on the the next",
    "start": "3590039",
    "end": "3596440"
  },
  {
    "text": "webinars thanks everybody it's been a real pleasure and just to let everybody know uh you know a recording of This",
    "start": "3596440",
    "end": "3601920"
  },
  {
    "text": "webinar as well as the slides themselves will also be available yeah thanks for that reminder",
    "start": "3601920",
    "end": "3608760"
  }
]