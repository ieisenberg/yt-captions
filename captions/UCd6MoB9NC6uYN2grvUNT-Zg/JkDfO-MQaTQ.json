[
  {
    "start": "0",
    "end": "36000"
  },
  {
    "text": "good morning everyone happy to be here my name is Marcos I'm a Solutions Architect for AWS Sydney so today we are",
    "start": "30",
    "end": "6899"
  },
  {
    "text": "going to talk about container security and as you know organizations are adopting containers because containers",
    "start": "6899",
    "end": "13500"
  },
  {
    "text": "help them to improve flexibility portability but you also can maximize resource utilization but ultimately",
    "start": "13500",
    "end": "20699"
  },
  {
    "text": "these organizations are trying to be more agile to deliver products and services to their users however there",
    "start": "20699",
    "end": "27869"
  },
  {
    "text": "are some important security aspects in this container journey that should be considered and that's what we are going",
    "start": "27869",
    "end": "33719"
  },
  {
    "text": "to talk about on the next 30 minutes so containers are great they solve a lot of",
    "start": "33719",
    "end": "38790"
  },
  {
    "text": "problems but they also require some they also have some security challenge that",
    "start": "38790",
    "end": "43950"
  },
  {
    "text": "we need to take care of and the first one is because of the dynamic nature of",
    "start": "43950",
    "end": "49140"
  },
  {
    "text": "these containers so they come and go they scale in they scale out and during",
    "start": "49140",
    "end": "54420"
  },
  {
    "text": "the day they may get different IPS different port different even different services servers and hosts so making",
    "start": "54420",
    "end": "61620"
  },
  {
    "text": "sure that we have the right security isolation on the network perspective it's very important and secondly they",
    "start": "61620",
    "end": "69060"
  },
  {
    "text": "usually run in a very distributed and complex environment with several micro services with several dependencies what",
    "start": "69060",
    "end": "75780"
  },
  {
    "text": "that means is that having the right identity and access management in place so a container can connect to the right",
    "start": "75780",
    "end": "81840"
  },
  {
    "text": "AWS services or to the right dependence is very important as you know containers",
    "start": "81840",
    "end": "88560"
  },
  {
    "text": "they have a layered approach for the their image what that means is that a lot of people may have touched those",
    "start": "88560",
    "end": "95100"
  },
  {
    "text": "containers image and making sure that there is nothing vulnerable in that container image is very important and",
    "start": "95100",
    "end": "101250"
  },
  {
    "text": "yes namespaces they do provide a good isolation but in the end this containers",
    "start": "101250",
    "end": "107460"
  },
  {
    "text": "they share they may share the same kernel what that means is that patching the kernel is a very important task",
    "start": "107460",
    "end": "115578"
  },
  {
    "text": "so just to level set here there are several ways for you to run containers on AWS you can choose your own adventure",
    "start": "115790",
    "end": "122579"
  },
  {
    "text": "and stall manage and secure your orchestration tool or you can go for one",
    "start": "122579",
    "end": "127710"
  },
  {
    "text": "of the orchestration tools that AWS provides and the first one is ecs",
    "start": "127710",
    "end": "133360"
  },
  {
    "text": "The Container sirs which is available in Sydney and we it's a service that will provide the highly scalable and highly",
    "start": "133360",
    "end": "140530"
  },
  {
    "text": "available container orchestration service for you to scale your containers",
    "start": "140530",
    "end": "145630"
  },
  {
    "text": "on AWS and if you want to run kubernetes you can choose to run with ek ek ek s",
    "start": "145630",
    "end": "152620"
  },
  {
    "text": "where AWS is going to secure and install and maintain the control plane for you",
    "start": "152620",
    "end": "158430"
  },
  {
    "text": "so for this session we are going to focus on how to secure your container",
    "start": "158430",
    "end": "163840"
  },
  {
    "text": "environment using ECS and ECS and Fargate so you may be familiar with easy",
    "start": "163840",
    "end": "169900"
  },
  {
    "text": "to wear in a security perspective you are responsible for install manage and secure secure that ec2 instance but we",
    "start": "169900",
    "end": "177940"
  },
  {
    "text": "also have far gates and far gate is available in sydney and what Fargate gives to you is the ability to have AWS",
    "start": "177940",
    "end": "186550"
  },
  {
    "text": "managing the operating system for you what that means is that we patch and scale the operating system for you and",
    "start": "186550",
    "end": "192760"
  },
  {
    "text": "you only need to take care of the container secure itself and forget configuration so quickly talking about",
    "start": "192760",
    "end": "200140"
  },
  {
    "start": "198000",
    "end": "218000"
  },
  {
    "text": "our agenda today we are going to talk about security in AWS and how it relates to container security then we jump to",
    "start": "200140",
    "end": "207519"
  },
  {
    "text": "container best practices around security and then we have a demo showing how to enforce security for our container",
    "start": "207519",
    "end": "214480"
  },
  {
    "text": "environment so as security professionals",
    "start": "214480",
    "end": "220510"
  },
  {
    "start": "218000",
    "end": "253000"
  },
  {
    "text": "you may be aware of the shared responsibility model and what the shared responsibility model says is that AWS is",
    "start": "220510",
    "end": "229030"
  },
  {
    "text": "responsible for securing the infrastructure that runs the cloud so there will be servers networking and the",
    "start": "229030",
    "end": "235720"
  },
  {
    "text": "software that runs the clouds y/o as a customer you are responsible for setting up the security in the cloud and",
    "start": "235720",
    "end": "242739"
  },
  {
    "text": "securely in the cloud has several important aspects and you can see on the",
    "start": "242739",
    "end": "248110"
  },
  {
    "text": "screen and the first one and the most critical one is customer data so there",
    "start": "248110",
    "end": "253720"
  },
  {
    "start": "253000",
    "end": "315000"
  },
  {
    "text": "are several tools and services that can help you to secure and encrypt your customer data you are data and one that",
    "start": "253720",
    "end": "261130"
  },
  {
    "text": "I particularly want to discuss with you is application secrets application configuration",
    "start": "261130",
    "end": "267100"
  },
  {
    "text": "and API keys which is very relevant not only for containers but any application",
    "start": "267100",
    "end": "272560"
  },
  {
    "text": "because we have seen some companies or some organizations having hard-coded",
    "start": "272560",
    "end": "279340"
  },
  {
    "text": "credentials in their cold and the reason this is not a best practice is that someone may accidentally commit this",
    "start": "279340",
    "end": "286360"
  },
  {
    "text": "code in a public repo and we don't want our secrets our configuration data shared with the internet so for this",
    "start": "286360",
    "end": "293560"
  },
  {
    "text": "reason I would like to highlight parameter store and parameters or is a service that will provide you a secure",
    "start": "293560",
    "end": "301060"
  },
  {
    "text": "storage for you to store your configurations your secrets and your API",
    "start": "301060",
    "end": "306250"
  },
  {
    "text": "keys in your application without having then hard-coded to your application or",
    "start": "306250",
    "end": "311560"
  },
  {
    "text": "to your container you can download this from your application so if we move down",
    "start": "311560",
    "end": "316720"
  },
  {
    "start": "315000",
    "end": "442000"
  },
  {
    "text": "to the shared responsibility model we can talk about identity and access management and identity and access",
    "start": "316720",
    "end": "322690"
  },
  {
    "text": "management controls who can access what on the AWS cloud so that means your application your server or a container",
    "start": "322690",
    "end": "329410"
  },
  {
    "text": "connecting to a queue like SQS simple queue service or s3 or other AWS",
    "start": "329410",
    "end": "335590"
  },
  {
    "text": "services if we move down one layer to the network and fire a configuration",
    "start": "335590",
    "end": "341260"
  },
  {
    "text": "that's one of my favorite layers and there are several layers of protection",
    "start": "341260",
    "end": "346270"
  },
  {
    "text": "that you can implement on your container on your in your application and the",
    "start": "346270",
    "end": "351370"
  },
  {
    "text": "first one if we start with the border you can have DDoS protection by using",
    "start": "351370",
    "end": "356470"
  },
  {
    "text": "AWS shield and the attacks will not get to your application because you will be",
    "start": "356470",
    "end": "361990"
  },
  {
    "text": "absorbed by AWS if we talk about all W ask top end attacks like sequoia",
    "start": "361990",
    "end": "368650"
  },
  {
    "text": "injection or Cora site scripting or other attacks you can attach a wsof web",
    "start": "368650",
    "end": "374200"
  },
  {
    "text": "application file to protect your applications before the attacks gets to your containers or to your application",
    "start": "374200",
    "end": "380730"
  },
  {
    "text": "and you may be asking like this is a container session you are talking about",
    "start": "380730",
    "end": "386100"
  },
  {
    "text": "features that I'm aware that I can install and use with ec2 and the reason",
    "start": "386100",
    "end": "391630"
  },
  {
    "text": "I'm talking about these features is because anything that you can do security wise on ec2 you can do with VCS",
    "start": "391630",
    "end": "399820"
  },
  {
    "text": "and easier and Fargate and i have here an example for security groups and security groups",
    "start": "399820",
    "end": "406240"
  },
  {
    "text": "offer an amazing way for you to have micro segmentation for your containers",
    "start": "406240",
    "end": "412120"
  },
  {
    "text": "or for your ec2 instance because you can reference one layer in another layer and",
    "start": "412120",
    "end": "417400"
  },
  {
    "text": "for example you can have the application layer referenced on the database layer",
    "start": "417400",
    "end": "422730"
  },
  {
    "text": "so if anything scales horizontally during the day you don't need your hard",
    "start": "422730",
    "end": "428680"
  },
  {
    "text": "code IPS or subnets because one layer is aware of the other layer so anything",
    "start": "428680",
    "end": "433930"
  },
  {
    "text": "that we can do security wise on ec2 we now can do on e CS and e CS and Fargate",
    "start": "433930",
    "end": "441210"
  },
  {
    "start": "442000",
    "end": "564000"
  },
  {
    "text": "so next question would be how do i isolate how do I secure my containers so",
    "start": "443340",
    "end": "449170"
  },
  {
    "text": "if we come back to the shared responsibility model we can start talking about Identity and Access",
    "start": "449170",
    "end": "454360"
  },
  {
    "text": "Management so who can control what so since 2016 we launched the feature where",
    "start": "454360",
    "end": "461110"
  },
  {
    "text": "you can attach I am rows to your containers to your tasks and what that",
    "start": "461110",
    "end": "466720"
  },
  {
    "text": "means is that you can have fine granularity of security control for",
    "start": "466720",
    "end": "471730"
  },
  {
    "text": "exactly that task so traditionally you would have an I am row attach it to an",
    "start": "471730",
    "end": "477460"
  },
  {
    "text": "ec2 instance and that I am row would have all permissions required for all",
    "start": "477460",
    "end": "482890"
  },
  {
    "text": "containers and the reason that this is not a good practice is that with any container running on that instance will",
    "start": "482890",
    "end": "489580"
  },
  {
    "text": "have access to all services always ws services that you allowed on the I am",
    "start": "489580",
    "end": "494680"
  },
  {
    "text": "row so since 2016 you can have an IM row attach it to your containers and you can",
    "start": "494680",
    "end": "500800"
  },
  {
    "text": "define security for that I am role if we move down to the network and firo",
    "start": "500800",
    "end": "505930"
  },
  {
    "text": "configuration since reinvent 2017 we",
    "start": "505930",
    "end": "511000"
  },
  {
    "text": "launch it the ability to have test not working and what a stock works gives you is the ability to attach an an en I",
    "start": "511000",
    "end": "519130"
  },
  {
    "text": "elastic network interface to your containers so ECS would ask for a new",
    "start": "519130",
    "end": "526510"
  },
  {
    "text": "container running in one ec2 instance and it will create a new namespace and",
    "start": "526510",
    "end": "532839"
  },
  {
    "text": "attach that Tanner judean I to the nastic network interface and what that gives you and",
    "start": "532839",
    "end": "539339"
  },
  {
    "text": "it's very relevant in a network security is the ability to attach security groups",
    "start": "539339",
    "end": "544980"
  },
  {
    "text": "for your tasks so that means that you can have egress and out grass inbound",
    "start": "544980",
    "end": "550410"
  },
  {
    "text": "and outbound controls security verifications as a file for your containers so instead of giving the ec2",
    "start": "550410",
    "end": "558089"
  },
  {
    "text": "instance abroad access in a network perspective you can have that attached to your container so if we come back to",
    "start": "558089",
    "end": "567000"
  },
  {
    "start": "564000",
    "end": "596000"
  },
  {
    "text": "the shared responsibility model with ecs",
    "start": "567000",
    "end": "572389"
  },
  {
    "text": "AWS takes responsibility of securing the data the control plane so that's the",
    "start": "572389",
    "end": "578459"
  },
  {
    "text": "orchestrator and ECS has several security compliance like pca that can",
    "start": "578459",
    "end": "584940"
  },
  {
    "text": "help you with pci or sock y-you-you still responsible for scaling",
    "start": "584940",
    "end": "591600"
  },
  {
    "text": "your instances and also making sure that the operating system is secure however",
    "start": "591600",
    "end": "597089"
  },
  {
    "text": "if you choose to use far gate you can see that several boxes they moved down to the AWS responsibility and we will",
    "start": "597089",
    "end": "605009"
  },
  {
    "text": "take care of scaling the operating system for you and most importantly in a secular perspective securing and",
    "start": "605009",
    "end": "612630"
  },
  {
    "text": "managing the operating system so far gate has some benefits we talked about",
    "start": "612630",
    "end": "618089"
  },
  {
    "text": "securing that and by securing the operating system means patching the operating system very",
    "start": "618089",
    "end": "624899"
  },
  {
    "text": "important and critical in a security perspective also patching the docker daemon on the instance and ECS agent so",
    "start": "624899",
    "end": "633300"
  },
  {
    "text": "that you transfer that responsibility to AWS we forget and as I mentioned before",
    "start": "633300",
    "end": "638370"
  },
  {
    "text": "far gate is available in Sydney it is going to use test not working so we talked about having an e an ILS elastic",
    "start": "638370",
    "end": "646709"
  },
  {
    "text": "network interface attach it to your container for gate uses that technology so you have a security group attach it",
    "start": "646709",
    "end": "653310"
  },
  {
    "text": "to your image to your container running container so we talked about sharing the",
    "start": "653310",
    "end": "658620"
  },
  {
    "text": "same kernel so without any additional costs you can create different surfs names with four gates and we will make",
    "start": "658620",
    "end": "665730"
  },
  {
    "text": "sure that different services names we run in different kernels so that",
    "start": "665730",
    "end": "671040"
  },
  {
    "text": "gives you that kernel isolation as well choose securing enhancements with Fargate so no runtime access to the",
    "start": "671040",
    "end": "678210"
  },
  {
    "text": "server or to the container instance or to the container docker container itself",
    "start": "678210",
    "end": "684210"
  },
  {
    "text": "however you don't lose any troubleshooting capability because you can string your logs to cloud watch logs",
    "start": "684210",
    "end": "691200"
  },
  {
    "text": "or you can string to your favorites log in to and the privilege flag for",
    "start": "691200",
    "end": "696540"
  },
  {
    "text": "containers won't be enabled so that will enhance security as well so if we go",
    "start": "696540",
    "end": "703530"
  },
  {
    "text": "back to the shared responsibility model with Fargate you need to secure your image and ECS configuration and AWS will",
    "start": "703530",
    "end": "711930"
  },
  {
    "text": "take care of security of the operating system for you and if we do an analogy",
    "start": "711930",
    "end": "717780"
  },
  {
    "start": "716000",
    "end": "743000"
  },
  {
    "text": "with a real world shipping container for gate will be a shipping as a service so",
    "start": "717780",
    "end": "724200"
  },
  {
    "text": "we take care of the bottom layer why you need to secure the container image and",
    "start": "724200",
    "end": "729660"
  },
  {
    "text": "also your pipeline and very importantly the development pipeline for it that",
    "start": "729660",
    "end": "736050"
  },
  {
    "text": "container so if I need to secure my container how do I secure my container",
    "start": "736050",
    "end": "741930"
  },
  {
    "text": "image so there are a couple of best practices there I cannot stress that enough",
    "start": "741930",
    "end": "747090"
  },
  {
    "start": "743000",
    "end": "884000"
  },
  {
    "text": "no secrets hard-coded to your container use parameter stores use secrets manager",
    "start": "747090",
    "end": "754800"
  },
  {
    "text": "use these services where you can securely and store your credentials your",
    "start": "754800",
    "end": "760620"
  },
  {
    "text": "API keys you can even rotate these API keys if you want to with secrets manager",
    "start": "760620",
    "end": "766560"
  },
  {
    "text": "and then that will make sure that if your container image gets published",
    "start": "766560",
    "end": "771950"
  },
  {
    "text": "accidentally anywhere public your secrets won't be shared so if you can",
    "start": "771950",
    "end": "778320"
  },
  {
    "text": "build your own container image that's amazing otherwise use trusted image use",
    "start": "778320",
    "end": "784410"
  },
  {
    "text": "trusted image from docker hub we mentioned before because of the layered nature of this image a lot of people may",
    "start": "784410",
    "end": "792120"
  },
  {
    "text": "have touched them and we don't want you have any vulnerability in this container image so use an image that you trust",
    "start": "792120",
    "end": "801200"
  },
  {
    "text": "and you can always run more than one service per task per container but use",
    "start": "802370",
    "end": "810860"
  },
  {
    "text": "one surface per container because the container Orchestrator will be",
    "start": "810860",
    "end": "816899"
  },
  {
    "text": "responsible for isolating this step and you can do in using security groups or",
    "start": "816899",
    "end": "822630"
  },
  {
    "text": "even IM roles no console and troubleshooting tools so as I mentioned before Fargate won't accept console and",
    "start": "822630",
    "end": "830519"
  },
  {
    "text": "troubleshooting tools and that will make your image bigger and potentially you",
    "start": "830519",
    "end": "836430"
  },
  {
    "text": "can introduce some security challenge therefore you unique and informative",
    "start": "836430",
    "end": "842220"
  },
  {
    "text": "tools during the full deployment lifecycle and that's very important because if you do that you will be able",
    "start": "842220",
    "end": "850019"
  },
  {
    "text": "to track if something bad was introduced to your containers if any vulnerability",
    "start": "850019",
    "end": "855209"
  },
  {
    "text": "or if any bug what caused what PR caused and probably track which developer",
    "start": "855209",
    "end": "861860"
  },
  {
    "text": "created that issue in your security you can track by using tags during the full",
    "start": "861860",
    "end": "868589"
  },
  {
    "text": "deployment lifecycle so we say internally that good intentions are not",
    "start": "868589",
    "end": "875029"
  },
  {
    "text": "enough we need mechanisms and ways for enforcing these best practices and we if",
    "start": "875029",
    "end": "881579"
  },
  {
    "text": "we talk about mechanism same ways for enforcing best practices with containers there are couple then the first one that",
    "start": "881579",
    "end": "888839"
  },
  {
    "start": "884000",
    "end": "958000"
  },
  {
    "text": "I would like to talk is enforce your security s code so don't do any manual",
    "start": "888839",
    "end": "894649"
  },
  {
    "text": "modification in your infrastructure enforce everything else called no manual",
    "start": "894649",
    "end": "899760"
  },
  {
    "text": "modifications will make sure that a few you can improve the security of your",
    "start": "899760",
    "end": "905819"
  },
  {
    "text": "infrastructure and also have your CI CD pipeline during the full lifecycle of",
    "start": "905819",
    "end": "912389"
  },
  {
    "text": "your container and no this is not a devolved session but having the F's a",
    "start": "912389",
    "end": "917610"
  },
  {
    "text": "cops is very important and what I mean by that is that having security is kenny",
    "start": "917610",
    "end": "922920"
  },
  {
    "text": "for our doing as soon as a developer commits a code and the image is created",
    "start": "922920",
    "end": "928579"
  },
  {
    "text": "having a security and image scan on our image will make sure that",
    "start": "928579",
    "end": "934680"
  },
  {
    "text": "a venerable quote does not get committed in production and we don't want to do that we don't have venerable image in",
    "start": "934680",
    "end": "942089"
  },
  {
    "text": "production and you can use tools like Clair which gives you an image scanning",
    "start": "942089",
    "end": "948420"
  },
  {
    "text": "capability and also other tools like aqua and twistlock that can help you to improve security of",
    "start": "948420",
    "end": "955410"
  },
  {
    "text": "your during your deployment pipeline so quickly talking about the demo that I'm",
    "start": "955410",
    "end": "961860"
  },
  {
    "text": "going to show to you we have we built an architecture where we are deploying all",
    "start": "961860",
    "end": "970230"
  },
  {
    "start": "963000",
    "end": "1079000"
  },
  {
    "text": "our containers in Fargate what that means is that as in an operational",
    "start": "970230",
    "end": "977339"
  },
  {
    "text": "perspective and in a security perspective there is no server to manage there is no server to secure so",
    "start": "977339",
    "end": "983970"
  },
  {
    "text": "traditionally is being very important and critical to patch servers AWS is doing that for us because we are using",
    "start": "983970",
    "end": "989820"
  },
  {
    "text": "faregates so your contain the container image for this application is hosted on",
    "start": "989820",
    "end": "995010"
  },
  {
    "text": "Fargate the way I'm using for connecting to external external services external",
    "start": "995010",
    "end": "1001250"
  },
  {
    "text": "AWS services and also to the database is by using I am ROS attach it to this",
    "start": "1001250",
    "end": "1007790"
  },
  {
    "text": "running container so starting with connecting to server services like s3 for objects storage I'm using these I am",
    "start": "1007790",
    "end": "1017209"
  },
  {
    "text": "ROS attach it to my containers on faregates to get authorization so I'm not hard-coding any credential and that",
    "start": "1017209",
    "end": "1024319"
  },
  {
    "text": "applies also for the RDS my sequel database so I'm not hard coding user",
    "start": "1024319",
    "end": "1030050"
  },
  {
    "text": "name and password in my application because the way I'm doing is giving an IM row for this RDS my sequel database",
    "start": "1030050",
    "end": "1039650"
  },
  {
    "text": "for this container to connect to the database so it is using secured token service to get temporarily credentials",
    "start": "1039650",
    "end": "1046910"
  },
  {
    "text": "for the database the way I'm enforcing Network as I mentioned before network",
    "start": "1046910",
    "end": "1053510"
  },
  {
    "text": "security isolation is done by security groups so the application tier which is",
    "start": "1053510",
    "end": "1059510"
  },
  {
    "text": "our containers is referenced on the database security group so doesn't",
    "start": "1059510",
    "end": "1065690"
  },
  {
    "text": "matter if the scales out or scaling the today the IPS for these tasks will be",
    "start": "1065690",
    "end": "1071480"
  },
  {
    "text": "added in the security group for the data layer and then the same applies for the",
    "start": "1071480",
    "end": "1076640"
  },
  {
    "text": "elastic load balancer that we have there our dev Cyclops pipeline how are you",
    "start": "1076640",
    "end": "1082820"
  },
  {
    "start": "1079000",
    "end": "1179000"
  },
  {
    "text": "doing that so as soon as a developer creates a PR and this PR is merged to",
    "start": "1082820",
    "end": "1091130"
  },
  {
    "text": "our master branch it will trigger a pipeline so this pipeline we are using a",
    "start": "1091130",
    "end": "1096650"
  },
  {
    "text": "CI CD by with cold pipeline and that will trigger code build and what code",
    "start": "1096650",
    "end": "1103970"
  },
  {
    "text": "build will do it's going to create our docker image but in a security perspective most importantly it's going",
    "start": "1103970",
    "end": "1111200"
  },
  {
    "text": "to trigger Clair scanner and Clary scanner is going to analyze if we have",
    "start": "1111200",
    "end": "1116330"
  },
  {
    "text": "anything vulnerable in that image so very important in this case we used a good image and it's going to be",
    "start": "1116330",
    "end": "1124580"
  },
  {
    "text": "committed to ECR an ECR is our container repo that has encryption in transit and",
    "start": "1124580",
    "end": "1131330"
  },
  {
    "text": "encryption at rest so your image is in a security perspective is secure and after",
    "start": "1131330",
    "end": "1138110"
  },
  {
    "text": "committing to ECR this container image is going to be pushed to production but",
    "start": "1138110",
    "end": "1147200"
  },
  {
    "text": "let's say we want this demo to fail we are going to introduce some intentionally introduced some",
    "start": "1147200",
    "end": "1153470"
  },
  {
    "text": "vulnerability in our container image so the same pipeline will be triggered but",
    "start": "1153470",
    "end": "1160280"
  },
  {
    "text": "as soon as code build triggers claire network scanner Claire will detect that",
    "start": "1160280",
    "end": "1165770"
  },
  {
    "text": "this is a venerable image we don't want this in production so it's going to fail the pipeline it's not going to get to",
    "start": "1165770",
    "end": "1172070"
  },
  {
    "text": "production can we switch to the demo please",
    "start": "1172070",
    "end": "1178419"
  },
  {
    "start": "1179000",
    "end": "1748000"
  },
  {
    "text": "so I pre-recorded this demo so we could maximize our time here and I'm using",
    "start": "1179590",
    "end": "1185970"
  },
  {
    "text": "cloud 9 here for our cloud ID and I'm",
    "start": "1185970",
    "end": "1190990"
  },
  {
    "text": "going to create a new branch and I'm going to change dockerfile to use an",
    "start": "1190990",
    "end": "1197649"
  },
  {
    "text": "image that I know it has some vulnerabilities",
    "start": "1197649",
    "end": "1202590"
  },
  {
    "text": "so I'm going to save this and I'm going to add this file to our branch and",
    "start": "1209630",
    "end": "1216350"
  },
  {
    "text": "commit and past your production so in a security perspective you are going to",
    "start": "1216350",
    "end": "1222470"
  },
  {
    "text": "see that I used a very poor and vague comment we should raise a lot of red flags and never go to and never be",
    "start": "1222470",
    "end": "1229880"
  },
  {
    "text": "authorized to be merged to production so you can see it does not add any value",
    "start": "1229880",
    "end": "1235190"
  },
  {
    "text": "and that should raise a several red flags and not be merged so let's have",
    "start": "1235190",
    "end": "1242270"
  },
  {
    "text": "this post and I'm going to switch to code commit and code committee is our managed to get repo and I'm going to",
    "start": "1242270",
    "end": "1250130"
  },
  {
    "text": "create a pull request for this new docker image that I know has some",
    "start": "1250130",
    "end": "1255530"
  },
  {
    "text": "vulnerabilities",
    "start": "1255530",
    "end": "1257770"
  },
  {
    "text": "so creating the pool requesting here and again using a very vague comment this",
    "start": "1265460",
    "end": "1271910"
  },
  {
    "text": "should never go to production but I want to demonstrate that we can enforce security in our pipeline",
    "start": "1271910",
    "end": "1280120"
  },
  {
    "text": "so it is created and let's pretend I'm someone else because the person who",
    "start": "1290860",
    "end": "1296080"
  },
  {
    "text": "creates that poor request should not be the one who merged this to master brand so pretending I'm someone else here I'm",
    "start": "1296080",
    "end": "1303370"
  },
  {
    "text": "going to check the chains that were executed for our application and you can",
    "start": "1303370",
    "end": "1309820"
  },
  {
    "text": "see the new docker image is in there and I'm going to authorize and merge this to",
    "start": "1309820",
    "end": "1317440"
  },
  {
    "text": "production",
    "start": "1317440",
    "end": "1319799"
  },
  {
    "text": "so when we merge this Jamar's master branch it will automatically trigger a",
    "start": "1334900",
    "end": "1341140"
  },
  {
    "text": "CI CD pipeline with code pipeline and one thing that I would like to show to",
    "start": "1341140",
    "end": "1346360"
  },
  {
    "text": "you is that as soon as we merge we are going to get merge the commit ID that's",
    "start": "1346360",
    "end": "1352660"
  },
  {
    "text": "how I mentioned before what I mentioned before should be used for tagging the full lifecycle of our container so you",
    "start": "1352660",
    "end": "1360610"
  },
  {
    "text": "can see there that's the commit ID and if we refresh this page we are going to",
    "start": "1360610",
    "end": "1366880"
  },
  {
    "text": "see on code commit that we can audit who created this PR and who merged to",
    "start": "1366880",
    "end": "1372640"
  },
  {
    "text": "production in this case it is the same user but in production you would have separate these controls so you can see",
    "start": "1372640",
    "end": "1383110"
  },
  {
    "text": "I'm going to change to easy our our manage container repo because I want to",
    "start": "1383110",
    "end": "1389890"
  },
  {
    "text": "show to you that we are enforcing and showing this commit ID in our tags for",
    "start": "1389890",
    "end": "1396730"
  },
  {
    "text": "the container image so you can see we have container tags there we have commit",
    "start": "1396730",
    "end": "1402100"
  },
  {
    "text": "IDs there and we we can track what commits created that one so if we go",
    "start": "1402100",
    "end": "1407559"
  },
  {
    "text": "back to our pipeline you can see that our dev psych ops pipeline started and",
    "start": "1407559",
    "end": "1412990"
  },
  {
    "text": "if we refresh the page you are going to see again the commits ID so we are tracking during the full lifecycle the",
    "start": "1412990",
    "end": "1421800"
  },
  {
    "text": "commit ID so we can track back to back who created this so while the pipeline",
    "start": "1421800",
    "end": "1428500"
  },
  {
    "text": "is running I want to show some security enhancements that we have in our ACR and",
    "start": "1428500",
    "end": "1435670"
  },
  {
    "text": "ECS so I'm here on the ECS console and the first thing that I would like to",
    "start": "1435670",
    "end": "1440710"
  },
  {
    "text": "show to you is the instances that we are running so there are no instances no instance for us to patch and manage",
    "start": "1440710",
    "end": "1447520"
  },
  {
    "text": "because we are using fire gate AWS is the scaling that for us and it's securing as well so if we open one of",
    "start": "1447520",
    "end": "1455440"
  },
  {
    "text": "the services that we are running you will be able to see that we have one",
    "start": "1455440",
    "end": "1460990"
  },
  {
    "text": "task definition which is the container configuration running on the cloud running on easier on far gate",
    "start": "1460990",
    "end": "1467970"
  },
  {
    "text": "one in three containers as of now and we are using Fargate the technology that I",
    "start": "1467970",
    "end": "1473880"
  },
  {
    "text": "mentioned before and these containers are attached to a lot load balancer and if we open we see that we have three",
    "start": "1473880",
    "end": "1481470"
  },
  {
    "text": "tasks run in there and let me show to you some of the test configuration that",
    "start": "1481470",
    "end": "1487200"
  },
  {
    "text": "can help you in a security security perspective so you can see again we are using fire gate but if you see on the",
    "start": "1487200",
    "end": "1494820"
  },
  {
    "text": "demo we have AWS VPC it has an IP address and a elastic network interface",
    "start": "1494820",
    "end": "1500700"
  },
  {
    "text": "but he also has a task row so that's how I'm connecting to the database so if we",
    "start": "1500700",
    "end": "1506520"
  },
  {
    "text": "open the test definition to see the container configuration you will be able to see the comet ID for that configure",
    "start": "1506520",
    "end": "1514500"
  },
  {
    "text": "that specific docker image so tracking again the full lifecycle and if you",
    "start": "1514500",
    "end": "1519780"
  },
  {
    "text": "check environment variables you were not going to find database password because",
    "start": "1519780",
    "end": "1524880"
  },
  {
    "text": "again we are using I am roles forgetting temporary credentials so going to the",
    "start": "1524880",
    "end": "1530430"
  },
  {
    "text": "easy to console you will see some servers there they are not the service servers running our container is just",
    "start": "1530430",
    "end": "1537300"
  },
  {
    "text": "cloud nine and a VPN however if we check the network interfaces that we have you",
    "start": "1537300",
    "end": "1544650"
  },
  {
    "text": "will see that we do have several elastic network interfaces that were created by",
    "start": "1544650",
    "end": "1549750"
  },
  {
    "text": "Fargate and these were attached to your tasks running on ec2 on Fargate so you",
    "start": "1549750",
    "end": "1558300"
  },
  {
    "text": "can see that these tasks they have security groups and if you open one of the security groups we will be able to",
    "start": "1558300",
    "end": "1565410"
  },
  {
    "text": "see the micro segmentation that security groups can help you with",
    "start": "1565410",
    "end": "1571190"
  },
  {
    "text": "so that's the application layer security group so if I open that one you will be",
    "start": "1572680",
    "end": "1578590"
  },
  {
    "text": "able to see that the application the container security group is authorizing",
    "start": "1578590",
    "end": "1583650"
  },
  {
    "text": "the load balancer security group on party on part 30 23 6 8 and if we open",
    "start": "1583650",
    "end": "1592090"
  },
  {
    "text": "the other security group which is the database layer security group you will see that the security group used by the",
    "start": "1592090",
    "end": "1598960"
  },
  {
    "text": "application layer is authorized to connects there and if we get the other security group you will be able to see",
    "start": "1598960",
    "end": "1607060"
  },
  {
    "text": "that this is the only security group that has internet access so 4 4 3 and",
    "start": "1607060",
    "end": "1612720"
  },
  {
    "text": "also 80 so that's how we're doing micro segmentation lastly but not least let's",
    "start": "1612720",
    "end": "1623290"
  },
  {
    "text": "see the I am role that we are attaching to this container so we showed the network security that we are using",
    "start": "1623290",
    "end": "1629110"
  },
  {
    "text": "security groups now we are going to show the I am for enforcing the consumption",
    "start": "1629110",
    "end": "1636100"
  },
  {
    "text": "of AWS services authentication and authorization and also the database",
    "start": "1636100",
    "end": "1641140"
  },
  {
    "text": "connection to the database so no longer we need to hard-code credentials for the",
    "start": "1641140",
    "end": "1646300"
  },
  {
    "text": "database we are using I am for connecting to RDS my sequel so as you",
    "start": "1646300",
    "end": "1652900"
  },
  {
    "text": "can see we have a router that is authorizing our container to connect to",
    "start": "1652900",
    "end": "1658480"
  },
  {
    "text": "do a DB connect to our database ghost on their region and on their account so",
    "start": "1658480",
    "end": "1666720"
  },
  {
    "text": "let's go back to the pipeline that we triggered that was using an image that I",
    "start": "1666720",
    "end": "1672010"
  },
  {
    "text": "know which is vulnerable and refreshing that we you will see that the demo",
    "start": "1672010",
    "end": "1677350"
  },
  {
    "text": "failed the pipeline failed and if we go there and check the reason why this demo",
    "start": "1677350",
    "end": "1683440"
  },
  {
    "text": "failed you will be able to see that it failed",
    "start": "1683440",
    "end": "1690820"
  },
  {
    "text": "and if you go to post build where Claire runs the docker the runtime verification",
    "start": "1690820",
    "end": "1698440"
  },
  {
    "text": "security verification you will see that claire detected seven vulnerabilities in",
    "start": "1698440",
    "end": "1703990"
  },
  {
    "text": "our container image and this was luckily not available in production so we",
    "start": "1703990",
    "end": "1709630"
  },
  {
    "text": "enforced security in our pipeline and if you want to do some remediation and",
    "start": "1709630",
    "end": "1715300"
  },
  {
    "text": "understand why this happened you will be able to open the CV that has description",
    "start": "1715300",
    "end": "1722380"
  },
  {
    "text": "for this venerable Eden introduced by the wrong container image so that's the",
    "start": "1722380",
    "end": "1730240"
  },
  {
    "text": "demo that I have to show how to enforce Network and I am an access control",
    "start": "1730240",
    "end": "1736840"
  },
  {
    "text": "management on AWS but also how to enforce security scanning and never",
    "start": "1736840",
    "end": "1742960"
  },
  {
    "text": "getting a venerable image in our production can we switch back to the",
    "start": "1742960",
    "end": "1751860"
  },
  {
    "start": "1748000",
    "end": "1799000"
  },
  {
    "text": "thanks just summing up containers are first-class citizens on AWS so anything",
    "start": "1751860",
    "end": "1759940"
  },
  {
    "text": "that you can do secure you eyes on ec2 you can do with VCS and ETS and far gate",
    "start": "1759940",
    "end": "1765930"
  },
  {
    "text": "far gate means that AWS will do more in a security perspective and you don't",
    "start": "1765930",
    "end": "1771430"
  },
  {
    "text": "need to worry about scaling the operating system and also securing that operating system you will take care of",
    "start": "1771430",
    "end": "1778240"
  },
  {
    "text": "your container image and mechanisms that can help you to enforce this security",
    "start": "1778240",
    "end": "1784450"
  },
  {
    "text": "our I am security groups parameter store secrets manager and code star as well so",
    "start": "1784450",
    "end": "1792040"
  },
  {
    "text": "with that I thank you for your attention and my contacts are there and I'm here for questions and answers thank you",
    "start": "1792040",
    "end": "1799610"
  },
  {
    "text": "[Applause]",
    "start": "1799610",
    "end": "1801869"
  }
]