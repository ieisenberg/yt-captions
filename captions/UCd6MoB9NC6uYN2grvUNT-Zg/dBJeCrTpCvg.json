[
  {
    "start": "0",
    "end": "144000"
  },
  {
    "text": "welcome everyone to today's session evolving perimeters with guardrails and",
    "start": "60",
    "end": "5400"
  },
  {
    "text": "not gates I'm Charlie Hamill I'm a principal Enterprise Architect with AWS and joining me today are Chris power and",
    "start": "5400",
    "end": "14549"
  },
  {
    "text": "David Hockey who are cloud solutions architects with Comcast we're gonna",
    "start": "14549",
    "end": "19830"
  },
  {
    "text": "hopefully give you something to take away that'll help you get your arms around what your teams are doing within",
    "start": "19830",
    "end": "25260"
  },
  {
    "text": "AWS with regards to I am security practices we're gonna talk to you about",
    "start": "25260",
    "end": "30269"
  },
  {
    "text": "it just a couple of things because I am is huge that might give you things that you can layer into your existing",
    "start": "30269",
    "end": "36590"
  },
  {
    "text": "accounts and get control over some things we're going to start by me giving",
    "start": "36590",
    "end": "43559"
  },
  {
    "text": "you a basic primer on some I am things we go really fast but those things are",
    "start": "43559",
    "end": "48989"
  },
  {
    "text": "important for you to understand what Comcast is doing along those lines so David and Chris will come up next and",
    "start": "48989",
    "end": "55649"
  },
  {
    "text": "talk to you about the journey they're on so some of this may be very basic to you you may know it already you may be doing",
    "start": "55649",
    "end": "61890"
  },
  {
    "text": "some of it but it's good to know so the first thing is with I am you have the",
    "start": "61890",
    "end": "69090"
  },
  {
    "text": "the concept of principles and principles are either users and groups or their",
    "start": "69090",
    "end": "74580"
  },
  {
    "text": "roles and roles are all kinds of things like assumed roles delegated roles",
    "start": "74580",
    "end": "79759"
  },
  {
    "text": "federated roles and service linked or there's applications all of these things are principles so an identity is a",
    "start": "79759",
    "end": "86939"
  },
  {
    "text": "principle and let's say that identity wants to do something AWS access some",
    "start": "86939",
    "end": "92100"
  },
  {
    "text": "resource so the journey for doing that is to make a request and I am gets",
    "start": "92100",
    "end": "98430"
  },
  {
    "text": "involved at that point and authenticates that principle are you who you claim to",
    "start": "98430",
    "end": "104040"
  },
  {
    "text": "be and assuming the answer is yes then the next step is to authorize what that principle can do an authorization is all",
    "start": "104040",
    "end": "111990"
  },
  {
    "text": "based on policies the policies can be based on the identity of that principle",
    "start": "111990",
    "end": "117090"
  },
  {
    "text": "that person or service that's trying to do something or they can be based on a number of other things like resources so",
    "start": "117090",
    "end": "124860"
  },
  {
    "text": "the resource itself can have policies in front of it that say what identities can",
    "start": "124860",
    "end": "131530"
  },
  {
    "text": "do and then there's a number of other policies around trusts and permissions boundaries so to give you an idea of how",
    "start": "131530",
    "end": "140530"
  },
  {
    "text": "that works we're going to take a look at two accounts and we're going to look at",
    "start": "140530",
    "end": "147760"
  },
  {
    "start": "144000",
    "end": "144000"
  },
  {
    "text": "a human being who wants to actually get on to the areas management console but",
    "start": "147760",
    "end": "152920"
  },
  {
    "text": "someone has set up some some actually no this case is a human being wanting to",
    "start": "152920",
    "end": "159160"
  },
  {
    "text": "get access to a dynamodb table in another account that has a table in it about books so the account on the on the",
    "start": "159160",
    "end": "168340"
  },
  {
    "text": "right is the trusting account that they want to access and the account on the",
    "start": "168340",
    "end": "173380"
  },
  {
    "text": "left oh I'm sorry on the right is the is the person who wants to access that account",
    "start": "173380",
    "end": "179290"
  },
  {
    "text": "so we've got a trust relationship that has to happen now in order for that to work the trusting account needs to set",
    "start": "179290",
    "end": "185680"
  },
  {
    "text": "up a couple of policies so the first policy says that someone from a",
    "start": "185680",
    "end": "191980"
  },
  {
    "text": "particular account account a can perform this action which is assumed role so",
    "start": "191980",
    "end": "198850"
  },
  {
    "text": "they're declaring here a policy that's going to let someone from the other account assume a role and then the next",
    "start": "198850",
    "end": "205330"
  },
  {
    "text": "policy is exactly what they can do once they assume that role so in this case the trusting account is explicitly",
    "start": "205330",
    "end": "212560"
  },
  {
    "text": "saying persons who do that can do these basic read-only activities on DynamoDB",
    "start": "212560",
    "end": "219010"
  },
  {
    "text": "and it's very restricted to a particular table and DynamoDB that's about books",
    "start": "219010",
    "end": "224140"
  },
  {
    "text": "so with that they've opened themselves up in a very explicit way to allowing",
    "start": "224140",
    "end": "230910"
  },
  {
    "text": "account a to come in to account B and do those things now account a has to do",
    "start": "230910",
    "end": "238120"
  },
  {
    "text": "something to it has to make a declaration through a policy that its own users can go ahead and assume a role",
    "start": "238120",
    "end": "245860"
  },
  {
    "text": "in that other account B so with that somebody in account a can attempt to",
    "start": "245860",
    "end": "252910"
  },
  {
    "text": "access account B and they would they get as a temporary security token it has an",
    "start": "252910",
    "end": "259180"
  },
  {
    "text": "expiration time on it and that could be anywhere from 15 minutes to 12 hours and they get it back",
    "start": "259180",
    "end": "265420"
  },
  {
    "text": "and now they can use that to access dynamodb in the other account restricted to only one table across account trust",
    "start": "265420",
    "end": "273600"
  },
  {
    "text": "another way to assume a role is in identity Federation with enterprises so",
    "start": "273600",
    "end": "280660"
  },
  {
    "text": "again on the on the Left you have an enterprise and let's say it's using Active Directory to authenticate and",
    "start": "280660",
    "end": "287530"
  },
  {
    "text": "manage its corporate users so typically let's say there's a browser interface that a person inside the",
    "start": "287530",
    "end": "294100"
  },
  {
    "text": "enterprise is using and they're logging on and they're logging on to their identity provider which is Active",
    "start": "294100",
    "end": "299710"
  },
  {
    "text": "Directory and that will go ahead and look them up and return to them the things they can do in the form of a",
    "start": "299710",
    "end": "306070"
  },
  {
    "text": "sam'l assertion or sam'l token and now if you've gone ahead and prepared your",
    "start": "306070",
    "end": "312490"
  },
  {
    "text": "AWS environment with trust to that identity provider that person or that",
    "start": "312490",
    "end": "318730"
  },
  {
    "text": "application can pests that sam'l assertion over to AWS using a sam'l",
    "start": "318730",
    "end": "323740"
  },
  {
    "text": "endpoint an AWS will validate it go look them up some things I'm not showing here",
    "start": "323740",
    "end": "329320"
  },
  {
    "text": "and return a temporary token that they can use to go ahead and do something in",
    "start": "329320",
    "end": "334900"
  },
  {
    "text": "this case it's a human being attempting to use the ID OS management console but",
    "start": "334900",
    "end": "339940"
  },
  {
    "text": "using their corporate credentials they never had to log on to AWS to do this and there they go they're able to access",
    "start": "339940",
    "end": "347470"
  },
  {
    "text": "the management console and this can even be a fairly restricted access you give them there's certain things on the",
    "start": "347470",
    "end": "353050"
  },
  {
    "text": "console that they won't see if that's what you want so there's two examples of assuming a role and the idea here is",
    "start": "353050",
    "end": "360550"
  },
  {
    "text": "role-based security is one way to really get your arms around what the P people are doing in your organization now the",
    "start": "360550",
    "end": "368740"
  },
  {
    "text": "second thing we wanted to talk about under this initial primer that I'm giving you is something called",
    "start": "368740",
    "end": "376410"
  },
  {
    "text": "permissions boundary it's something that we introduced last year and what it does",
    "start": "376410",
    "end": "382150"
  },
  {
    "text": "is it limits the maximum permissions of the principles created by an admin so",
    "start": "382150",
    "end": "388750"
  },
  {
    "text": "you may have gone ahead and created permissions policies and you've got principals acquiring those policies and",
    "start": "388750",
    "end": "397830"
  },
  {
    "text": "somebody else may come an admin thing though they're a little too permissive I get why you want that policy in",
    "start": "397830",
    "end": "404860"
  },
  {
    "text": "certain cases that's appropriate but I want to get our arms around that and and",
    "start": "404860",
    "end": "410289"
  },
  {
    "text": "limit what folks normally do when they have that policy so before if you wanted to do that it's pretty cumbersome",
    "start": "410289",
    "end": "417419"
  },
  {
    "text": "somebody could an admin could create a permissions policy such as put user policy or attach role policy they were",
    "start": "417419",
    "end": "424599"
  },
  {
    "text": "very premises fairly unconstrained and in order to allow that kind of thing at",
    "start": "424599",
    "end": "431289"
  },
  {
    "text": "a self-service environment so that you weren't granting too many privileges it is a non-trivial amount of work to",
    "start": "431289",
    "end": "437770"
  },
  {
    "text": "automate that now with permissions boundaries you can still have administrators creating these highly",
    "start": "437770",
    "end": "444729"
  },
  {
    "text": "unrestricted policies and roles but with",
    "start": "444729",
    "end": "451000"
  },
  {
    "text": "permissions boundaries it allows the developers to use those roles but being confident there's some guardrails in",
    "start": "451000",
    "end": "457240"
  },
  {
    "text": "place because the permission boundary is restricting it let's take a look at that in a little more detail so here's an",
    "start": "457240",
    "end": "464289"
  },
  {
    "start": "462000",
    "end": "462000"
  },
  {
    "text": "example of of an oven of an a delegate and IIM administrator creating a policy",
    "start": "464289",
    "end": "470740"
  },
  {
    "text": "and as you can see under the the action it's s 3 star cloud watch star ec2 sorry",
    "start": "470740",
    "end": "479080"
  },
  {
    "text": "it's everything they can do a lot of things with this permission statement but they've gone ahead and constrained",
    "start": "479080",
    "end": "485680"
  },
  {
    "text": "it in a particular area in the red there and that constraint says not so fast on",
    "start": "485680",
    "end": "491949"
  },
  {
    "text": "s3 yeah you can do everything except and you can't actually do anything on a",
    "start": "491949",
    "end": "498130"
  },
  {
    "text": "particular bucket the goal here is to really make sure nobody messes with this project bucket because it's got some",
    "start": "498130",
    "end": "504789"
  },
  {
    "text": "stuff that we don't other people other people even seeing or touching so that's what this does so the next thing they",
    "start": "504789",
    "end": "512320"
  },
  {
    "text": "can do is create a permissions policy that allows creation of I am roles but",
    "start": "512320",
    "end": "518169"
  },
  {
    "text": "only if the company boundary policy that we just saw is part of that role so this",
    "start": "518169",
    "end": "525040"
  },
  {
    "text": "is now allowing is a higher level admin saying I'm going to let you guys go",
    "start": "525040",
    "end": "530320"
  },
  {
    "text": "ahead and create roles but when you do you got to put this company boundary policy in place which is a permissions boundary",
    "start": "530320",
    "end": "536640"
  },
  {
    "text": "so the way the higher level admin will do that is say go ahead you can create",
    "start": "536640",
    "end": "541680"
  },
  {
    "text": "roles you can attach policies you can delete policies but the condition statement that you'll see there about",
    "start": "541680",
    "end": "547920"
  },
  {
    "text": "midway through says it must contain the condition boundary policy and so on so",
    "start": "547920",
    "end": "555870"
  },
  {
    "text": "the next step we have here is someone attempting to create a role specifying a",
    "start": "555870",
    "end": "565500"
  },
  {
    "text": "permissions boundaries so they're doing the right thing here this is another admin going along creating a role and",
    "start": "565500",
    "end": "570990"
  },
  {
    "text": "it's called my test a parole and there are absolutely doing the right thing they're saying a permissions boundary is",
    "start": "570990",
    "end": "576960"
  },
  {
    "text": "the company boundaries so they've done the right thing here and now they're going to create a permissions policy",
    "start": "576960",
    "end": "583620"
  },
  {
    "text": "allowing full access to s3 the very thing that permissions boundary doesn't",
    "start": "583620",
    "end": "588990"
  },
  {
    "text": "want you to do but their help they can go ahead and do that because they really want the users of this role to do",
    "start": "588990",
    "end": "594030"
  },
  {
    "text": "anything in s3 except what they're not supposed to do it's the idea and so there it is allow",
    "start": "594030",
    "end": "601110"
  },
  {
    "text": "s3 anything and now go ahead and create that new policy to the newly created",
    "start": "601110",
    "end": "607650"
  },
  {
    "text": "role and so the effect of that is that you've got this constraint created by",
    "start": "607650",
    "end": "614430"
  },
  {
    "start": "610000",
    "end": "610000"
  },
  {
    "text": "the permission boundary which says ah you can't do anything on this three this is one thing you can't do but they made",
    "start": "614430",
    "end": "621630"
  },
  {
    "text": "this statement allow anything on s3 the two get together and create this result",
    "start": "621630",
    "end": "626970"
  },
  {
    "text": "when someone tries to browse to that restricted s3 bucket they can't do it so",
    "start": "626970",
    "end": "635040"
  },
  {
    "text": "here's a Venn diagram that illustrates what we've just been talking about and I'm gonna test you if you've been paying",
    "start": "635040",
    "end": "641460"
  },
  {
    "text": "attention you'll pass the test we have a pernicious permissions boundary that says ec2 star s3 star we have a",
    "start": "641460",
    "end": "648510"
  },
  {
    "text": "permissions policy like we've just seen that says ec2 star sqs star somebody",
    "start": "648510",
    "end": "655830"
  },
  {
    "text": "shout out what is the resulting net permission this will give somebody",
    "start": "655830",
    "end": "661460"
  },
  {
    "text": "correct so there's a result of that now",
    "start": "661460",
    "end": "668340"
  },
  {
    "text": "all of that has been great but it's still pretty fine-grained it's down at the account level it's down at the",
    "start": "668340",
    "end": "675090"
  },
  {
    "text": "individual level what if you want to get your arms through a bigger swath of accounts and what's going on well this",
    "start": "675090",
    "end": "681930"
  },
  {
    "text": "is something fairly new organizations has been around a while and",
    "start": "681930",
    "end": "687020"
  },
  {
    "text": "organizations if you don't really get it yet this is the idea of getting all of",
    "start": "687020",
    "end": "692070"
  },
  {
    "text": "your accounts into a hierarchy and doing consistent things with them so at the top we have the master account and so",
    "start": "692070",
    "end": "699990"
  },
  {
    "text": "you can States things and restrictions and policies at the master account level that affect every other account",
    "start": "699990",
    "end": "705600"
  },
  {
    "text": "underneath that or you can drive down further you can organize your accountants under something called",
    "start": "705600",
    "end": "711920"
  },
  {
    "text": "organizational units and from there you can have more accounts it's a tree",
    "start": "711920",
    "end": "717510"
  },
  {
    "text": "structure and we see customers a lot of times doing things exactly like this",
    "start": "717510",
    "end": "722550"
  },
  {
    "text": "they want all their dev accounts having uniform policies test and pride and similarly so you can do things with",
    "start": "722550",
    "end": "729330"
  },
  {
    "text": "something called service control policies it's fairly new as of March",
    "start": "729330",
    "end": "736220"
  },
  {
    "text": "service control policies are a lot like permission boundaries but they're",
    "start": "736220",
    "end": "741390"
  },
  {
    "text": "through organizational level so you can do something at the master account level with a service control policy that will",
    "start": "741390",
    "end": "747900"
  },
  {
    "text": "restrict or grant privileges that people didn't think about restricting or granting at a lower level and likewise",
    "start": "747900",
    "end": "755700"
  },
  {
    "text": "that the devil organizational unit level you can do it so you'd actually don't actually have to attach to an account",
    "start": "755700",
    "end": "761220"
  },
  {
    "text": "you can attach it to an organizational unit so that all the accounts under that oh you have the same restrictions and",
    "start": "761220",
    "end": "768530"
  },
  {
    "text": "likewise you could go down to the account level too and there's some",
    "start": "768530",
    "end": "774210"
  },
  {
    "text": "unique characteristics about scps first of all they do let you control which",
    "start": "774210",
    "end": "780240"
  },
  {
    "text": "service is an AP eyes are accessible you can define the list of AP eyes that are",
    "start": "780240",
    "end": "785430"
  },
  {
    "text": "allowed you can to find a list of AP eyes that you want to block they can't",
    "start": "785430",
    "end": "791820"
  },
  {
    "text": "be over in by a local administrator of an account once they're in place that's",
    "start": "791820",
    "end": "796990"
  },
  {
    "text": "and the effective permission on an I am a role is the combination of the user",
    "start": "796990",
    "end": "804010"
  },
  {
    "text": "role in the intersection between the SCP and all the IME I am permission so we've",
    "start": "804010",
    "end": "809500"
  },
  {
    "text": "already seen the case of of to the circles combining now we've got three we",
    "start": "809500",
    "end": "815589"
  },
  {
    "text": "have the permissions policy that we were looking at before and we had that overlaid with the permissions boundary",
    "start": "815589",
    "end": "821890"
  },
  {
    "text": "which resulted in ec2 star now we've got a service control policy coming along",
    "start": "821890",
    "end": "827260"
  },
  {
    "text": "that says s3 star in ec2 star will still the intersection is ec2 star so that's",
    "start": "827260",
    "end": "833020"
  },
  {
    "text": "the only thing a user that happens to have these three things in place can do",
    "start": "833020",
    "end": "839399"
  },
  {
    "text": "finally let's take a look at the journey I am takes to evaluate policies so the",
    "start": "840089",
    "end": "848350"
  },
  {
    "start": "843000",
    "end": "843000"
  },
  {
    "text": "first thing I am does starting at the upper left is to look for any deny",
    "start": "848350",
    "end": "854440"
  },
  {
    "text": "evaluations are there any deny statements in any policy if so you can't",
    "start": "854440",
    "end": "859540"
  },
  {
    "text": "do what you want we're trying to do that deny always wins even if there's a conflicting allow deny",
    "start": "859540",
    "end": "865900"
  },
  {
    "text": "wins the second step is if there are no denies look for allows but look for them",
    "start": "865900",
    "end": "872320"
  },
  {
    "text": "at the service control policy level that's the big one and if there's allowed there it's yes to",
    "start": "872320",
    "end": "878980"
  },
  {
    "text": "do what you're trying to do thank you let's keep going let's look at permissions boundaries are there any",
    "start": "878980",
    "end": "884800"
  },
  {
    "text": "permission boundaries that allow you to do what you're trying to do and if the answer is yes let's keep going",
    "start": "884800",
    "end": "890890"
  },
  {
    "text": "is there an assumed role that you're in your are you assuming a role temporarily",
    "start": "890890",
    "end": "897100"
  },
  {
    "text": "and is that allowing you to do what you want to do if it's yes then we can keep going or you ride entity based policies",
    "start": "897100",
    "end": "905410"
  },
  {
    "text": "or your resource based policies allowing you to do what you want to do if it's yes you're good so with that I want to",
    "start": "905410",
    "end": "915100"
  },
  {
    "text": "turn it over to Chris and David who talked to you about the journey Comcast is on to actually implement a lot of",
    "start": "915100",
    "end": "922060"
  },
  {
    "text": "this in their real world thanks charlie",
    "start": "922060",
    "end": "927100"
  },
  {
    "text": "hmm as charlie pointed out there's a lot of foundational building blocks that Amazon provides you as cloud and",
    "start": "927100",
    "end": "934060"
  },
  {
    "text": "security architects to build upon to govern securely and find that balance",
    "start": "934060",
    "end": "939520"
  },
  {
    "text": "between productivity for your developers and governance and security we're going to talk a little bit today about how we",
    "start": "939520",
    "end": "945070"
  },
  {
    "text": "have evolved our governance framework to meet both those both of those needs as Charlie said my name's Chris power I'm",
    "start": "945070",
    "end": "951460"
  },
  {
    "text": "an architect on our cloud team at Comcast the function of our team is largely to help drive strategy best",
    "start": "951460",
    "end": "958690"
  },
  {
    "text": "practices implement governance and we spend a lot of time sitting and talking with teams and listening to them both",
    "start": "958690",
    "end": "964720"
  },
  {
    "text": "David and I come from application engineering backgrounds and product backgrounds so we really want to find",
    "start": "964720",
    "end": "970360"
  },
  {
    "text": "how fun ways to strike the balance between governing and securing our cloud environments and operating those",
    "start": "970360",
    "end": "976360"
  },
  {
    "text": "environments in a fiscally responsible way with the productivity that people approach the cloud to find and so we'll",
    "start": "976360",
    "end": "982480"
  },
  {
    "text": "talk a little bit about how we've done that first a little bit about Comcast's most of you probably think of Comcast as",
    "start": "982480",
    "end": "988210"
  },
  {
    "text": "a broadband provider cable television provider but we're much more than that it's a media and entertainment company",
    "start": "988210",
    "end": "993790"
  },
  {
    "text": "today so we do broadband we do cable we do voice Xfinity mobile as a mobile",
    "start": "993790",
    "end": "999010"
  },
  {
    "text": "service and digital home which is our home security product but we also own NBC Universal DreamWorks Fandango sky as",
    "start": "999010",
    "end": "1008460"
  },
  {
    "text": "well recently through acquisition earlier this year so really a global company that services a number of",
    "start": "1008460",
    "end": "1015480"
  },
  {
    "text": "different industries so from a scale and a context perspective we're sort of setting the stage here for for the",
    "start": "1015480",
    "end": "1022080"
  },
  {
    "text": "landscape that we have to operate in when we're thinking about governing and architecting for the cloud so when we",
    "start": "1022080",
    "end": "1029430"
  },
  {
    "start": "1023000",
    "end": "1023000"
  },
  {
    "text": "think about scale and landscape our team specifically is responsible for hundreds",
    "start": "1029430",
    "end": "1034920"
  },
  {
    "text": "of accounts throughout our footprint thousands of active developers on those",
    "start": "1034920",
    "end": "1040170"
  },
  {
    "text": "accounts at any given time across a number of different regions so we do use",
    "start": "1040170",
    "end": "1045600"
  },
  {
    "text": "a multi account strategy which is something that I'll think a lot of folks have started to consider and are moving to and we also provide access to dozens",
    "start": "1045600",
    "end": "1054480"
  },
  {
    "text": "of different services within Amazon across multiple lines of business in this case we're talking about video and",
    "start": "1054480",
    "end": "1060120"
  },
  {
    "text": "broadband at home and and some of the things that we talked about but when we think about governing in the cloud we'd like to",
    "start": "1060120",
    "end": "1066630"
  },
  {
    "start": "1066000",
    "end": "1066000"
  },
  {
    "text": "strike a bit of a balance and and we have some guiding principles that help us understand how to go about implementing these tools and we think of",
    "start": "1066630",
    "end": "1074340"
  },
  {
    "text": "it in in terms of guardrails right and not gates and and to be fair we started",
    "start": "1074340",
    "end": "1079590"
  },
  {
    "text": "in many places with gates with tickets and things we'll talk a little bit about that but how we've evolved beyond that",
    "start": "1079590",
    "end": "1085590"
  },
  {
    "text": "is thinking about developer experience first right but then balancing that with",
    "start": "1085590",
    "end": "1091320"
  },
  {
    "text": "the need to have scale at our organization level meaning hundreds of accounts and thousands of users and the",
    "start": "1091320",
    "end": "1097080"
  },
  {
    "text": "balance that we have with our partners and the security organization our network teams our software architecture",
    "start": "1097080",
    "end": "1102840"
  },
  {
    "text": "teams to balance all three of these things we run a model that is I guess fairly decentralized from a development",
    "start": "1102840",
    "end": "1109710"
  },
  {
    "text": "perspective so we really try to encourage teams to choose the right",
    "start": "1109710",
    "end": "1114840"
  },
  {
    "text": "services and tools that make sense for their use cases and as a result we were while we provide some amount of",
    "start": "1114840",
    "end": "1120510"
  },
  {
    "text": "governance and guardrails which we'll talk about we don't necessarily restrict you can't just be server less or you can",
    "start": "1120510",
    "end": "1125790"
  },
  {
    "text": "only run eks or you can only run ec2 we're trying to kind of get to a place",
    "start": "1125790",
    "end": "1131220"
  },
  {
    "text": "where we have some some standardized models but today teams are allowed to sort of pick what makes sense for them",
    "start": "1131220",
    "end": "1136230"
  },
  {
    "text": "and the cloud and in our on-premise offerings and so what does developer experience mean for us right then we",
    "start": "1136230",
    "end": "1143070"
  },
  {
    "start": "1140000",
    "end": "1140000"
  },
  {
    "text": "think of it in these sort of four four axes right so agility the ability to",
    "start": "1143070",
    "end": "1148679"
  },
  {
    "text": "move quickly teams come to the cloud because they want to move quickly they want to be able to get to market quickly they want to be able to develop and",
    "start": "1148679",
    "end": "1155400"
  },
  {
    "text": "turnaround product features quickly and change direction we want choice choice in architecture choice and services",
    "start": "1155400",
    "end": "1161900"
  },
  {
    "text": "choices that work for your team and we want a native experience right so more",
    "start": "1161900",
    "end": "1167040"
  },
  {
    "text": "all too often when you're building a governance framework in the cloud you start building lots of custom tooling",
    "start": "1167040",
    "end": "1172350"
  },
  {
    "text": "and we did the same thing that gets in the way sometimes of developers being productive and so you need to find a way",
    "start": "1172350",
    "end": "1177480"
  },
  {
    "text": "to strike that balance and provide as much of a native access into the tooling as you really possibly can and the SDKs",
    "start": "1177480",
    "end": "1185550"
  },
  {
    "text": "and other things and and obviously support for modern development practices see ICD infrastructures code",
    "start": "1185550",
    "end": "1191100"
  },
  {
    "text": "CloudFormation terraformed things like that ability for teams that that want to use these things to be able to",
    "start": "1191100",
    "end": "1196559"
  },
  {
    "text": "do so so by way of example this is a fairly common thing that you know we see",
    "start": "1196559",
    "end": "1202019"
  },
  {
    "text": "developers doing right and I'm sure you all see this as well I'm a developer I'd like to build an API that's",
    "start": "1202019",
    "end": "1208019"
  },
  {
    "text": "authenticated there's some lambda sitting behind it it maybe it's talking to a DynamoDB table we're capturing",
    "start": "1208019",
    "end": "1214380"
  },
  {
    "text": "symmetric sand cloud watch and we're tracing an x-ray for example right so one of the first things you're going to",
    "start": "1214380",
    "end": "1219899"
  },
  {
    "text": "find is that you need rolls to accomplish this in the ideal case they're at least privileged and and we",
    "start": "1219899",
    "end": "1226409"
  },
  {
    "text": "think you know that's there's a strong story a strong argument to be made there for those but teams need the ability to",
    "start": "1226409",
    "end": "1231990"
  },
  {
    "text": "create rolls to build this right and which so when you're building a governance framework and you're trying to avoid things like privilege",
    "start": "1231990",
    "end": "1237840"
  },
  {
    "text": "escalation or teams running and doing things with services or other resources",
    "start": "1237840",
    "end": "1243450"
  },
  {
    "text": "that you don't want oftentimes one of the things that that you'll do is you'll sort of take claw back the roll create",
    "start": "1243450",
    "end": "1248850"
  },
  {
    "text": "or user create piece and we did the same thing and so you end up with this sort of scenario which we don't want right",
    "start": "1248850",
    "end": "1254669"
  },
  {
    "text": "this is an anti-pattern if there ever was one which is I'm a developer I need to create a ticket so I can get a roll",
    "start": "1254669",
    "end": "1260159"
  },
  {
    "text": "and then I create the ticket wrong and the roll comes out wrong and now I'm back creating that ticket again and now",
    "start": "1260159",
    "end": "1265860"
  },
  {
    "text": "I'm like a weekend to this and all I wanted to do is create a lambda function like how can I get there much faster",
    "start": "1265860",
    "end": "1271049"
  },
  {
    "text": "right and so we really wanted to avoid that and drive towards a solution that enables us to to do those things and be",
    "start": "1271049",
    "end": "1278940"
  },
  {
    "text": "self-service and be quick and agile as we said so what does our governance toolkit looks like look like fairly",
    "start": "1278940",
    "end": "1286620"
  },
  {
    "start": "1282000",
    "end": "1282000"
  },
  {
    "text": "typical pieces here right we've got I am organizations as Charlie mentioned service control policies permissions",
    "start": "1286620",
    "end": "1293519"
  },
  {
    "text": "boundaries are in there as well and we'll talk about what this stuff actually looks like in practice like how do we take those building blocks and",
    "start": "1293519",
    "end": "1298679"
  },
  {
    "text": "employ those cloud trail config our duty we deploy those across all of our entire",
    "start": "1298679",
    "end": "1304860"
  },
  {
    "text": "footprint we've got custom tooling we've got some third-party tooling as well and of course we've really started to lean",
    "start": "1304860",
    "end": "1310740"
  },
  {
    "text": "heavily on single sign-on multi-factor authentication for our users and in the",
    "start": "1310740",
    "end": "1315809"
  },
  {
    "text": "accounts today we'll specifically talk a little bit about I am organizations some of the custom tooling we've built and",
    "start": "1315809",
    "end": "1321960"
  },
  {
    "text": "how we think about roles as principles versus users so with that in mind we're going to really cover two things",
    "start": "1321960",
    "end": "1327980"
  },
  {
    "text": "here right sort of the federated access experience that Charlie had talked about role assumption things like that and the",
    "start": "1327980",
    "end": "1333080"
  },
  {
    "text": "David will take a take a stab at the permissions boundaries themselves how we've actually implemented this how this",
    "start": "1333080",
    "end": "1339440"
  },
  {
    "text": "is actually working some of the things that we've seen work well and some of the things that we you know are still working on as this is an ever-evolving",
    "start": "1339440",
    "end": "1345730"
  },
  {
    "text": "externa for us so the federated access experience is often the things that developers see first right they get",
    "start": "1345730",
    "end": "1352610"
  },
  {
    "text": "their account what are the first thing they want to do use the CLI log into the console how do they do that historically",
    "start": "1352610",
    "end": "1358309"
  },
  {
    "text": "we like many of you probably had I am users scattered across all of your accounts we did the same thing as a",
    "start": "1358309",
    "end": "1364429"
  },
  {
    "text": "developer myself I had trouble remembering passwords across several accounts that I had so probably 12 or 18",
    "start": "1364429",
    "end": "1371900"
  },
  {
    "text": "months ago we started a journey towards moving away from iam users moving into a federated model that uses roles backed",
    "start": "1371900",
    "end": "1378740"
  },
  {
    "text": "by Active Directory with single sign-on and multi-factor authentication enforced across our entire footprint and to be",
    "start": "1378740",
    "end": "1385160"
  },
  {
    "text": "fair that took some time to get there right it took us months to move off of I am users to move to roles to convince",
    "start": "1385160",
    "end": "1391220"
  },
  {
    "text": "developers and engineers and other folks that you don't need to have a long live set of access keys sitting on your",
    "start": "1391220",
    "end": "1397370"
  },
  {
    "text": "laptop to access and interact with a an Amazon so some of the advantages to this model right single sign-on for all of",
    "start": "1397370",
    "end": "1403669"
  },
  {
    "start": "1401000",
    "end": "1401000"
  },
  {
    "text": "our federated users so I as an engineer have a single set of credentials that I use it's the same set of credentials that I might log into my account with",
    "start": "1403669",
    "end": "1410770"
  },
  {
    "text": "across all of my accounts right that's a win for me personally right out of the box I get an MFA push notifications boom",
    "start": "1410770",
    "end": "1417770"
  },
  {
    "text": "right into the console we'll talk about how we do this with the CLI as well now we now have temporary access keys",
    "start": "1417770",
    "end": "1422990"
  },
  {
    "text": "instead of long-lived access keys which is a common attack vector in in public cloud generally speaking with maximum",
    "start": "1422990",
    "end": "1429650"
  },
  {
    "text": "credential ages we now can tie the users",
    "start": "1429650",
    "end": "1434660"
  },
  {
    "text": "lifecycle to our HR system so when someone enters the company we can add them to accounts easily and when they",
    "start": "1434660",
    "end": "1440419"
  },
  {
    "text": "leave we can take them out of the accounts easily we have consistent credentials as I said and as I mentioned",
    "start": "1440419",
    "end": "1445820"
  },
  {
    "text": "we're able to then move primary largely completely off of i.m users entirely to",
    "start": "1445820",
    "end": "1450830"
  },
  {
    "text": "roles whether it's a person service and ec2 instance and we have sort of one remaining case where we still use I am",
    "start": "1450830",
    "end": "1458419"
  },
  {
    "text": "users we'll talk a bit about that some of the challenges though with I any Federation right you need a customized sam'l claim you have to be",
    "start": "1458419",
    "end": "1465020"
  },
  {
    "start": "1460000",
    "end": "1460000"
  },
  {
    "text": "able to go from your federated identity provider to a sam'l claim that Amazon understands and we've had to do some",
    "start": "1465020",
    "end": "1470090"
  },
  {
    "text": "work to map that we created our own directory structure to support that and you need custom tooling for things like",
    "start": "1470090",
    "end": "1475490"
  },
  {
    "text": "the CLI there's some open source out there that you can start with and which is what we did and I'll show how that",
    "start": "1475490",
    "end": "1480590"
  },
  {
    "text": "works so you need to work on that a little bit so for doing CLI access from your laptop or running terraform or",
    "start": "1480590",
    "end": "1486620"
  },
  {
    "text": "maybe some other things some tooling there some systems don't support temporary credentials right so if you're",
    "start": "1486620",
    "end": "1491750"
  },
  {
    "text": "running a Jenkins on premise or you need some service that you're running on premise that needs to talk to Amazon",
    "start": "1491750",
    "end": "1497630"
  },
  {
    "text": "services you can't necessarily have em if they involve per se so today that's the one use case that we do support I am",
    "start": "1497630",
    "end": "1503870"
  },
  {
    "text": "users for which is we call them service users right but limited to that only and",
    "start": "1503870",
    "end": "1509840"
  },
  {
    "text": "you need a way to manage user accounts mapping into sorry users mapping into Amazon accounts right and so we built",
    "start": "1509840",
    "end": "1516500"
  },
  {
    "text": "some custom tooling around that both API and UI to allow people that own accounts",
    "start": "1516500",
    "end": "1521660"
  },
  {
    "text": "to manage who has access to what accounts and what roles and that's been pretty successful for it for us",
    "start": "1521660",
    "end": "1527570"
  },
  {
    "text": "I probably stole the the Thunder on this slide so customized sam'l claims piece",
    "start": "1527570",
    "end": "1535580"
  },
  {
    "text": "you really have to have a good relationship with your directory services team you may be the directory services team if so that's great",
    "start": "1535580",
    "end": "1540650"
  },
  {
    "text": "otherwise you know really build those relationships that's worked really well for us there as I said custom tooling we",
    "start": "1540650",
    "end": "1547340"
  },
  {
    "text": "started with an open source project and built both a Python and a golang version that supports interacting with the CLI",
    "start": "1547340",
    "end": "1552740"
  },
  {
    "text": "using roles and temporary credentials and integrates into our a TFS back-end and in our case after MFA for for MFA I",
    "start": "1552740",
    "end": "1561800"
  },
  {
    "text": "mentioned this already temporary credentials issuing I am users for service accounts it's really the only",
    "start": "1561800",
    "end": "1566809"
  },
  {
    "text": "place we do that today and that still ticket driven today actually only ticketed process we have left from a from a IM perspective and as i said need",
    "start": "1566809",
    "end": "1576860"
  },
  {
    "text": "to need ability to map and we built a portal in an api that supports that so what does that look like from the",
    "start": "1576860",
    "end": "1582080"
  },
  {
    "text": "federated console perspective you may have used this before denne provider initiated so you get",
    "start": "1582080",
    "end": "1588260"
  },
  {
    "text": "single sign-on you essentially go to a u single URL sign into that URL and then that gives you access to all of your",
    "start": "1588260",
    "end": "1594860"
  },
  {
    "text": "account and all of the roles that you have access to in those accounts so as a developer I just checked the radio box",
    "start": "1594860",
    "end": "1601520"
  },
  {
    "text": "button that I want click sign in and it drops me right into the console and the",
    "start": "1601520",
    "end": "1607040"
  },
  {
    "text": "experience is actually the same on the CLI so now it's a single URL it's a single sign-on an MFA to access all of",
    "start": "1607040",
    "end": "1614420"
  },
  {
    "text": "my accounts so from a federated CLI perspective we now simply have a tool",
    "start": "1614420",
    "end": "1619670"
  },
  {
    "text": "that everyone has access to that they can use to effect the same behavior on the CLI so you hit that username",
    "start": "1619670",
    "end": "1627679"
  },
  {
    "text": "password you know push notification type in your token ID whatever the case is and it gives you the same list of",
    "start": "1627679",
    "end": "1633200"
  },
  {
    "text": "accounts the same roles that you had access to from the console you pick the one you want and then it drops a",
    "start": "1633200",
    "end": "1640190"
  },
  {
    "text": "temporary access key secret key and session token into your local a DFS credentials cache and away you go",
    "start": "1640190",
    "end": "1646340"
  },
  {
    "text": "you simply then need to just specify the profile as we did here with a command line option or you can set an",
    "start": "1646340",
    "end": "1652730"
  },
  {
    "text": "environment variable and there's a number of ways and the nice thing about this is this works just fine with cloud formation if you're running it from your",
    "start": "1652730",
    "end": "1658309"
  },
  {
    "text": "local machine if you're using Python code and you're running things in the SDK or if you're building infrastructure",
    "start": "1658309",
    "end": "1664760"
  },
  {
    "text": "with terraform like many of our teams do as well this worked quite well and so you get this experience now with the",
    "start": "1664760",
    "end": "1671510"
  },
  {
    "text": "federated access that you typically historically had to use I am teased for but without but without needing to do",
    "start": "1671510",
    "end": "1679070"
  },
  {
    "text": "that and we've seen a lot of benefit there because now we don't have keys floating around in different places so with that I think we'll we'll turn it",
    "start": "1679070",
    "end": "1686059"
  },
  {
    "text": "over to David and he will talk a little bit about how we've actually then built out the management of roles that we",
    "start": "1686059",
    "end": "1692480"
  },
  {
    "text": "talked about in our example thanks faith so I'm gonna talk a little bit about our",
    "start": "1692480",
    "end": "1698090"
  },
  {
    "text": "role management experience so I think Charlie and Chris really set the stage for like why do we need this why is it",
    "start": "1698090",
    "end": "1705290"
  },
  {
    "text": "important that we have a mechanism for role management and when we think about the product evolution of a service like",
    "start": "1705290",
    "end": "1712610"
  },
  {
    "start": "1709000",
    "end": "1709000"
  },
  {
    "text": "this or a feature like this so we want to enable for developers we think of it in you know kind of three phases for",
    "start": "1712610",
    "end": "1719030"
  },
  {
    "text": "almost everything we do right it's its first there's probably a ticketed process users can't do that themselves",
    "start": "1719030",
    "end": "1724520"
  },
  {
    "text": "then perhaps there's an out-of-band process and then you know finally the case scenario for us is you know a",
    "start": "1724520",
    "end": "1731630"
  },
  {
    "text": "delegated native experience and that was our approach to role creation as well",
    "start": "1731630",
    "end": "1737570"
  },
  {
    "text": "right we got together and we thought okay like do we want to do this roles as tickets thing do we want to do something",
    "start": "1737570",
    "end": "1744920"
  },
  {
    "text": "about and called role vending which I'll talk about momentarily and you know how do we get to like native role creation",
    "start": "1744920",
    "end": "1750080"
  },
  {
    "text": "how do we get comfortable as an organization know that we can do this in a secure way so pretty quickly we threw",
    "start": "1750080",
    "end": "1757580"
  },
  {
    "text": "out this concept of roles as tickets we were like this is not gonna happen for a very small organization you know talking",
    "start": "1757580",
    "end": "1765050"
  },
  {
    "text": "a single-digit number number of people supporting thousands of users roles as tickets was never going to fly so we",
    "start": "1765050",
    "end": "1772070"
  },
  {
    "text": "started with a concept called role vending which I'll talk about now and this is what a role vending machine",
    "start": "1772070",
    "end": "1778010"
  },
  {
    "start": "1776000",
    "end": "1776000"
  },
  {
    "text": "looks like for Comcast so you can imagine you have a client they authenticate to an API gateway through",
    "start": "1778010",
    "end": "1784310"
  },
  {
    "text": "some sort of custom authorizer in lambda which applies some sort of business logic that looks at your attributes and",
    "start": "1784310",
    "end": "1790010"
  },
  {
    "text": "says you know do you have access to the account you're trying to vendor role in what kinds of roles can you create once",
    "start": "1790010",
    "end": "1795770"
  },
  {
    "text": "it makes an enforcement decision you have another lambda function which calls the I am service creates a role attached",
    "start": "1795770",
    "end": "1802580"
  },
  {
    "text": "to some sort of permissions to it and you're off to the races right so the",
    "start": "1802580",
    "end": "1808160"
  },
  {
    "text": "advantages to this of course is that it's self-service we can make it programmatic we can provide an API so",
    "start": "1808160",
    "end": "1813620"
  },
  {
    "text": "everything we do is driven by this philosophy that anything that you can do in the kind of the console experience",
    "start": "1813620",
    "end": "1818810"
  },
  {
    "text": "that we built has to also be available in an API so none of this like okay you have one thing that the console can do",
    "start": "1818810",
    "end": "1825140"
  },
  {
    "text": "and then your feature parity and the API lags because of that we wanted to avoid that experience so what does a vended",
    "start": "1825140",
    "end": "1834290"
  },
  {
    "text": "role look like and and why did we do it so we did this before permission boundaries existed so we and we were",
    "start": "1834290",
    "end": "1842360"
  },
  {
    "text": "fortunate enough that actually our implementation looks very similar to permission boundaries so on the left you",
    "start": "1842360",
    "end": "1848270"
  },
  {
    "text": "can imagine that we have a developer role it's a federated role and you might",
    "start": "1848270",
    "end": "1853490"
  },
  {
    "text": "give them something like power user access which is an AWS managed policy and that managed policy allows you to",
    "start": "1853490",
    "end": "1860000"
  },
  {
    "text": "run the gamut of AWS services which is important to us but it doesn't really let you use those services because most of those services",
    "start": "1860000",
    "end": "1866330"
  },
  {
    "text": "outside of the lower-level services like ec2 or s3 require roles to actually",
    "start": "1866330",
    "end": "1872350"
  },
  {
    "text": "instantiate that service and then have it be able to communicate with other roles so we added this additional policy",
    "start": "1872350",
    "end": "1878360"
  },
  {
    "text": "which in this case we're calling the role manager policy and that role manager policy gives some limited",
    "start": "1878360",
    "end": "1884450"
  },
  {
    "text": "permissions in this case to attach and detach AWS manage policies provided that",
    "start": "1884450",
    "end": "1890149"
  },
  {
    "text": "they meet a few criteria so one of the first criteria is that it matches some role naming convention which we came up",
    "start": "1890149",
    "end": "1896570"
  },
  {
    "text": "with part of this is to support api's which don't have support for condition keys the other reason is it helps us",
    "start": "1896570",
    "end": "1903679"
  },
  {
    "text": "really audit and identify these roles make searching Cloud trail logs much",
    "start": "1903679",
    "end": "1908990"
  },
  {
    "text": "easier for example and lastly we say you can do this such you can take these",
    "start": "1908990",
    "end": "1914570"
  },
  {
    "text": "actions such that the resource that you are trying to attach to that role or detach that role is something we call a",
    "start": "1914570",
    "end": "1920960"
  },
  {
    "text": "protect policy so what is the the role look like once you've ended it so you go to this portal where you instantiate",
    "start": "1920960",
    "end": "1926869"
  },
  {
    "text": "this API and we append you know you say I want to create my test role and that role we prepend with this custom role",
    "start": "1926869",
    "end": "1933950"
  },
  {
    "text": "path and the only thing in that role besides the trust policy by default is an attached protect policy and most",
    "start": "1933950",
    "end": "1941659"
  },
  {
    "text": "importantly what that protect policy does is it says you can't remove me right so the most important thing it",
    "start": "1941659",
    "end": "1947960"
  },
  {
    "text": "does is it protects itself and then subsequently it applies those guardrails for those maximum set of permissions",
    "start": "1947960",
    "end": "1954200"
  },
  {
    "text": "that really restrict kind of access to secure resources or services which might",
    "start": "1954200",
    "end": "1960049"
  },
  {
    "text": "not be permissible to that user and then so because of this now this user has",
    "start": "1960049",
    "end": "1965869"
  },
  {
    "text": "been able to create a role which now they can apply any set of privileges that they want and because as Charlie",
    "start": "1965869",
    "end": "1972409"
  },
  {
    "text": "mentioned the evaluation logic denies always win these denies that are in this",
    "start": "1972409",
    "end": "1978080"
  },
  {
    "text": "protect policy prevent the user from adding star star permissions and having that actually be effectively star star",
    "start": "1978080",
    "end": "1985129"
  },
  {
    "text": "permissions so what are some of the challenges though with with role vending",
    "start": "1985129",
    "end": "1990519"
  },
  {
    "start": "1989000",
    "end": "1989000"
  },
  {
    "text": "you have to be really careful with your testing of this pipeline right",
    "start": "1990519",
    "end": "1996559"
  },
  {
    "text": "you saw a lot of custom steps that we had to implement to get to ultimately the created role experience right it's",
    "start": "1996559",
    "end": "2002320"
  },
  {
    "text": "it's not until like the fourth or fifth step that you actually hit an AWS API to do any of this right and you also have",
    "start": "2002320",
    "end": "2009460"
  },
  {
    "text": "to validate the policies that you're venting it was not trivial to create a policy which couldn't be removed by",
    "start": "2009460",
    "end": "2014590"
  },
  {
    "text": "itself once we got it working it was great but it took a lot of kind of pre",
    "start": "2014590",
    "end": "2020019"
  },
  {
    "text": "work there's a lot of validation and error handling you have to do because of the eventual consistency of I am I don't",
    "start": "2020019",
    "end": "2026649"
  },
  {
    "text": "know if any of you have ever tried to create a role and then attach a policy immediately after like in a terraform or",
    "start": "2026649",
    "end": "2031840"
  },
  {
    "text": "something like that sometimes it fails right because that role hasn't propagated yet and so when you're",
    "start": "2031840",
    "end": "2038320"
  },
  {
    "text": "talking about needing to attach a policy which is kind of like your guardrail that can't fail right so we'll talk",
    "start": "2038320",
    "end": "2043690"
  },
  {
    "text": "about how we address that and then lastly the roles have to be pre created right so you have to have this",
    "start": "2043690",
    "end": "2051128"
  },
  {
    "text": "out-of-band AWS six an experience that's out-of-band of AWS so you really have to",
    "start": "2051129",
    "end": "2056349"
  },
  {
    "text": "educate your users and have to understand like oh I got this dreaded like users not authorized to create I am",
    "start": "2056349",
    "end": "2062470"
  },
  {
    "text": "create role what do I do now you know it's a super generic message they search google google tells them become an",
    "start": "2062470",
    "end": "2068800"
  },
  {
    "text": "administrator sign in as the root account we're like no that's not that's not going to work for you so so how do",
    "start": "2068800",
    "end": "2075819"
  },
  {
    "text": "we address these challenges right so of course you know typical software development practices are really what we",
    "start": "2075819",
    "end": "2082329"
  },
  {
    "text": "implemented at the core of this right we're treating it as a product and that product needs to be you know really",
    "start": "2082329",
    "end": "2090128"
  },
  {
    "text": "hardened in code and validation right so we have the integration test unit tests",
    "start": "2090129",
    "end": "2095849"
  },
  {
    "text": "we we actually treat the creation of these protected roles as a single",
    "start": "2095849",
    "end": "2102310"
  },
  {
    "text": "transaction so if any tasks fail during the creation of these roles we roll back",
    "start": "2102310",
    "end": "2107950"
  },
  {
    "text": "every resource that was created so as not to risk leaving a role in a potentially bad state where it could be",
    "start": "2107950",
    "end": "2114700"
  },
  {
    "text": "used for privilege escalation you still have to have some sort of pre created",
    "start": "2114700",
    "end": "2121900"
  },
  {
    "text": "role process there's nothing really getting around that in in this world so",
    "start": "2121900",
    "end": "2127089"
  },
  {
    "text": "we published a lot of documentation with examples like how do I get started how do I invoke the API how do I use the UI and",
    "start": "2127089",
    "end": "2134500"
  },
  {
    "text": "then we also actually to make it even a little more programmatic inner source to terraform provider which actually would",
    "start": "2134500",
    "end": "2140350"
  },
  {
    "text": "wrap our custom api that teams who are consuming terraform could use to manage those resources without having to like",
    "start": "2140350",
    "end": "2146920"
  },
  {
    "text": "import them in a very non terraform supported way and we thought about this",
    "start": "2146920",
    "end": "2152710"
  },
  {
    "text": "and it works but you know we're like can we do better right we continued listening to application teams focusing",
    "start": "2152710",
    "end": "2157990"
  },
  {
    "text": "on that developer experience wanting to increase agility and that native experience an increased support for",
    "start": "2157990",
    "end": "2164650"
  },
  {
    "text": "infrastructure as code so how can we get there and and for us that's really been permission boundaries so permission",
    "start": "2164650",
    "end": "2172720"
  },
  {
    "start": "2172000",
    "end": "2172000"
  },
  {
    "text": "boundaries has some advantages it's a native experience for managing roles using the console to CLI the SDKs um and",
    "start": "2172720",
    "end": "2179620"
  },
  {
    "text": "it's a lot less tooling that we have to manage and to some extent removes out-of-band role creation and the great",
    "start": "2179620",
    "end": "2185950"
  },
  {
    "text": "thing is today is supported by both cloud formation in terraform which are pretty much our exclusive infrastructure",
    "start": "2185950",
    "end": "2193270"
  },
  {
    "text": "as code tooling selections at comcast and so we can look at this architecture",
    "start": "2193270",
    "end": "2198790"
  },
  {
    "start": "2196000",
    "end": "2196000"
  },
  {
    "text": "now and you can see that it actually looks pretty similar to our role vending architecture but the nice thing is that",
    "start": "2198790",
    "end": "2204040"
  },
  {
    "text": "we've now swapped all of those custom components that custom authorization the resource based access control attribute",
    "start": "2204040",
    "end": "2209890"
  },
  {
    "text": "based access control with the AWS native building blocks right so now where before we had a custom authorizer and an",
    "start": "2209890",
    "end": "2217300"
  },
  {
    "text": "api gateway we have something like the AWS management console or the AWS api's directly invoking i am so this allows us",
    "start": "2217300",
    "end": "2225310"
  },
  {
    "text": "to get out of the way of our users but still enforce some sort of permission boundary which is the maximum set of",
    "start": "2225310",
    "end": "2233080"
  },
  {
    "text": "things that were comfortable with them doing and so what does it mean to adopt permission boundaries so one things we",
    "start": "2233080",
    "end": "2239620"
  },
  {
    "start": "2235000",
    "end": "2235000"
  },
  {
    "text": "really loved about this was that the amount of changes that a developer who's coming let's say from outside the organization or who's like reading some",
    "start": "2239620",
    "end": "2247120"
  },
  {
    "text": "documentation online about how do you create a role how do you set the trust policy how do you attach policies is really minimal so there's really just",
    "start": "2247120",
    "end": "2254050"
  },
  {
    "text": "two things you change here you have to adopt this naming convention we've implemented again just for reporting",
    "start": "2254050",
    "end": "2260800"
  },
  {
    "text": "reasons and also to read those resources which only support kind",
    "start": "2260800",
    "end": "2265999"
  },
  {
    "text": "of resource name based restrictions and the other is you apply permission boundaries so you can see in this",
    "start": "2265999",
    "end": "2272599"
  },
  {
    "text": "example CloudFormation I only had to change two things and now my CloudFormation template which",
    "start": "2272599",
    "end": "2278630"
  },
  {
    "text": "previously would rollback worked without a problem so going from one to the other far",
    "start": "2278630",
    "end": "2286159"
  },
  {
    "text": "simpler than trying to educate users on going to this other portal which we created which they don't recognize it",
    "start": "2286159",
    "end": "2291709"
  },
  {
    "text": "looks nothing like AWS - now having this real native experience permission",
    "start": "2291709",
    "end": "2298789"
  },
  {
    "start": "2297000",
    "end": "2297000"
  },
  {
    "text": "permission boundaries have some limitations though so you don't get away from testing those policies those policies still have to enforce kind of",
    "start": "2298789",
    "end": "2305269"
  },
  {
    "text": "like the maximum set of permissions that you're comfortable with today you can only apply one which is means you really",
    "start": "2305269",
    "end": "2312769"
  },
  {
    "text": "have to be very thoughtful about the types of things that you'll restrict or",
    "start": "2312769",
    "end": "2319249"
  },
  {
    "text": "allow in a permission boundary the policy simulator doesn't support permission boundaries so historically we",
    "start": "2319249",
    "end": "2324859"
  },
  {
    "text": "use the policy simulator to basically say hey let's validate that these",
    "start": "2324859",
    "end": "2330049"
  },
  {
    "text": "resources or api's that we want to call are protected that doesn't work today and hopefully hopefully that'll be there",
    "start": "2330049",
    "end": "2336859"
  },
  {
    "text": "in the future and lastly you know while we you can now create the roles in the console when you want to kind of",
    "start": "2336859",
    "end": "2342559"
  },
  {
    "text": "discover a service you can only do that in iam console the Wizards for example like spinning up an EMR cluster or",
    "start": "2342559",
    "end": "2348469"
  },
  {
    "text": "creating a lambda still require that you've pre created the role out-of-band but at least you can now do it in a",
    "start": "2348469",
    "end": "2354589"
  },
  {
    "text": "native experience something that'll work using AWS documentation things of that nature",
    "start": "2354589",
    "end": "2360609"
  },
  {
    "text": "so how are we addressing these challenges right no getting away from you know just needing more testing right",
    "start": "2360609",
    "end": "2367069"
  },
  {
    "start": "2361000",
    "end": "2361000"
  },
  {
    "text": "being super thorough one approach that we're taking and I'll talk a little bit",
    "start": "2367069",
    "end": "2373369"
  },
  {
    "text": "more about this momentarily about how we're creating these boundaries is that you have to ultimately end up providing",
    "start": "2373369",
    "end": "2378739"
  },
  {
    "text": "multiple boundaries and there's a few strategies for this and I'll talk to you about the one to accomplish Comcast implemented and then also you can move",
    "start": "2378739",
    "end": "2385399"
  },
  {
    "text": "additional controls to AWS organizations and SCPs so historically scps were super",
    "start": "2385399",
    "end": "2390829"
  },
  {
    "text": "restrictive and so you'd put everything on the IAM principle with the features released earlier this year that Charlie",
    "start": "2390829",
    "end": "2396709"
  },
  {
    "text": "was talking about you can really now simplify your policies and then abstract",
    "start": "2396709",
    "end": "2402500"
  },
  {
    "text": "that out into kind of broader controls nothing we can do here again about",
    "start": "2402500",
    "end": "2408110"
  },
  {
    "text": "policy simulator support besides just adding more tests and and really in some cases even manual testing to validate",
    "start": "2408110",
    "end": "2414770"
  },
  {
    "text": "that these controls are being enforced properly so I'm going to take a moment now to talk about this multiple",
    "start": "2414770",
    "end": "2420680"
  },
  {
    "text": "permission boundary concept like when you're thinking about it like well okay as an administrator do I basically have",
    "start": "2420680",
    "end": "2427940"
  },
  {
    "text": "to create a boundary for every combination of services that someone wants to talk to right like lambda they",
    "start": "2427940",
    "end": "2434000"
  },
  {
    "text": "want to talk to RDS versus lambda they want to launch they don't want to launch into vbc and they wanted to talk to dynamo so we took a kind of different",
    "start": "2434000",
    "end": "2441560"
  },
  {
    "text": "approach instead of looking at like a workload centric approach instead we took an approach which base is based on",
    "start": "2441560",
    "end": "2447230"
  },
  {
    "text": "a graduated maturity model so the way we think about it is we created a user centric approach to permission",
    "start": "2447230",
    "end": "2452780"
  },
  {
    "text": "boundaries so we took that concept of you know what AWS calls delegated administration and use that when we",
    "start": "2452780",
    "end": "2458930"
  },
  {
    "text": "applied what permission boundaries can you create so you can imagine in the simplest case you have like these",
    "start": "2458930",
    "end": "2464870"
  },
  {
    "text": "introductory users they're new to AWS you have service roles that like lambda DynamoDB communication right these are",
    "start": "2464870",
    "end": "2472550"
  },
  {
    "text": "the least privileged roles they're gonna have a be able to they're gonna have to be protected by a fairly tight",
    "start": "2472550",
    "end": "2480400"
  },
  {
    "text": "permission boundary then you kind of have this next level of users who your more intermediate users they're users",
    "start": "2480400",
    "end": "2487040"
  },
  {
    "text": "that or principals like a CI CD role that actually need to be able to create",
    "start": "2487040",
    "end": "2492680"
  },
  {
    "text": "roles themselves right so maybe they need to create things of these like level one roles and then finally we",
    "start": "2492680",
    "end": "2501080"
  },
  {
    "text": "wanted to really enable our development teams and empower them and so we created",
    "start": "2501080",
    "end": "2506300"
  },
  {
    "text": "this third level for the most advanced user so we really wanted to proliferate",
    "start": "2506300",
    "end": "2513110"
  },
  {
    "text": "kind of the security knowledge of the organization sorry the security and AWS best practices into the organization so",
    "start": "2513110",
    "end": "2520790"
  },
  {
    "text": "for users with demonstrate a high level of maturity in terms of understanding AWS best practice security best practice",
    "start": "2520790",
    "end": "2527750"
  },
  {
    "text": "as well as Comcast specific policies through a certification process that we created we will grant you permissions to",
    "start": "2527750",
    "end": "2535159"
  },
  {
    "text": "be able to do more things and to be able to empower you you to support your development teams as they increase their",
    "start": "2535159",
    "end": "2542630"
  },
  {
    "text": "own maturity right and we've seen really good success of this but again this is",
    "start": "2542630",
    "end": "2549319"
  },
  {
    "text": "all kind of at the microscopic level right it's it's like a principle within an account but we have you know we have",
    "start": "2549319",
    "end": "2555199"
  },
  {
    "text": "hundreds of accounts and so there's certain things that we have to really scale across accounts and these are security invariants and we enforce those",
    "start": "2555199",
    "end": "2562269"
  },
  {
    "start": "2561000",
    "end": "2561000"
  },
  {
    "text": "you know using AWS organizations and SCPs so eight obvious organizations",
    "start": "2562269",
    "end": "2567859"
  },
  {
    "text": "really started as a cost view for us a billing view a usage view and I think is",
    "start": "2567859",
    "end": "2574249"
  },
  {
    "text": "it some people would say it's not relevant to this talk but in a lot of ways it is in that building it's",
    "start": "2574249",
    "end": "2580400"
  },
  {
    "text": "probably one of the best ways to understand how people are consuming Amazon there's very few things in Amazon",
    "start": "2580400",
    "end": "2586729"
  },
  {
    "text": "that have no cost I am being one of them but everything else you can really derive an understanding about what your",
    "start": "2586729",
    "end": "2592669"
  },
  {
    "text": "users are doing based purely on kind of cost Explorer right and that helped",
    "start": "2592669",
    "end": "2598969"
  },
  {
    "text": "actually us define some of these controls that we would implement with SCPs we also rely on some of the native",
    "start": "2598969",
    "end": "2605719"
  },
  {
    "text": "service integration so things like cloud trail have native integrations with organizations where you can deploy a",
    "start": "2605719",
    "end": "2610759"
  },
  {
    "text": "trail in your in your master payer account and it'll actually deploy to all",
    "start": "2610759",
    "end": "2615939"
  },
  {
    "text": "accounts within the organization and are not modifiable by any of the child accounts so the relatively new feature",
    "start": "2615939",
    "end": "2622459"
  },
  {
    "text": "that people should definitely check out and we also use it as our kind of account discovery framework so like when",
    "start": "2622459",
    "end": "2628400"
  },
  {
    "text": "we want to deploy changes or we want to audit something about accounts we use",
    "start": "2628400",
    "end": "2634159"
  },
  {
    "text": "this as the place to kind of enumerate all of our accounts but there's still things we'd like to see right like",
    "start": "2634159",
    "end": "2639229"
  },
  {
    "text": "additional service integrations things that are really push-button that you can just enable support for account metadata",
    "start": "2639229",
    "end": "2645469"
  },
  {
    "text": "is something we've been talking about for a long time I think many organizations such as ourselves maintain",
    "start": "2645469",
    "end": "2651589"
  },
  {
    "text": "a separate database of like your account and the cost Center mapping and perhaps like the email distribution list of that",
    "start": "2651589",
    "end": "2657349"
  },
  {
    "text": "account and you know really looking for a way to improve that and then finally you know",
    "start": "2657349",
    "end": "2663640"
  },
  {
    "text": "an improved account lifecycle management so today you can't autumn fully automate the creation or closure of an account",
    "start": "2663640",
    "end": "2669300"
  },
  {
    "text": "which makes it really challenging to get away from that ticketed process again to something that's much more native and in",
    "start": "2669300",
    "end": "2676420"
  },
  {
    "text": "fact you know one thing that we've been really happy about is that the organization service has been iterating very quickly and get support for account",
    "start": "2676420",
    "end": "2684190"
  },
  {
    "text": "metadata actually launched about two weeks ago so you can actually now a tagged accounts with interesting",
    "start": "2684190",
    "end": "2689950"
  },
  {
    "text": "attributes similar to being able to tag other resources in Amazon so scps we use",
    "start": "2689950",
    "end": "2698800"
  },
  {
    "text": "to kind of protect those resources and services within accounts and it helps us as simplify I am policies as I mentioned",
    "start": "2698800",
    "end": "2704410"
  },
  {
    "text": "before which allowed us to really it gives us a lot more room and flexibility",
    "start": "2704410",
    "end": "2709480"
  },
  {
    "text": "to implement implementing iterate on those permission boundaries because we",
    "start": "2709480",
    "end": "2714580"
  },
  {
    "text": "can put some of those security invariants kind of at the organization level the cross account or even across",
    "start": "2714580",
    "end": "2719710"
  },
  {
    "text": "all accounts you know we can implement those with you knowing which gives us a",
    "start": "2719710",
    "end": "2725680"
  },
  {
    "text": "much better sense of security when we go to make perhaps those permission boundaries even more permissive to again",
    "start": "2725680",
    "end": "2732670"
  },
  {
    "text": "enable developer experience there's some limitations though you're limited to",
    "start": "2732670",
    "end": "2737800"
  },
  {
    "text": "five SCPs per entity and they can only be about five kilobytes each SCPs though",
    "start": "2737800",
    "end": "2743770"
  },
  {
    "text": "can of course be applied at both the account the öyou and organization level but of course that doesn't scale nearly",
    "start": "2743770",
    "end": "2749830"
  },
  {
    "text": "as much as as other IAM principles like roles or policies you have been really",
    "start": "2749830",
    "end": "2755230"
  },
  {
    "text": "deliberate about the design as a result we're already finding that we're hitting the 5 KB limit with just some basic",
    "start": "2755230",
    "end": "2760840"
  },
  {
    "text": "controls and it creates a wide blast radius whereas before if we made a",
    "start": "2760840",
    "end": "2766210"
  },
  {
    "text": "modification to an iamb principle like a permission boundary or something like that we could be pretty reasonably sure",
    "start": "2766210",
    "end": "2771670"
  },
  {
    "text": "that it's only going to break like something within one account if you miss enable NSEP you could affect multiple",
    "start": "2771670",
    "end": "2777970"
  },
  {
    "text": "accounts or in the worst case you could actually affect every account in your organization including the one which",
    "start": "2777970",
    "end": "2783610"
  },
  {
    "text": "were you were using to manage the SCPs so you could actually lock yourself out of Amazon and your entire organization",
    "start": "2783610",
    "end": "2790750"
  },
  {
    "text": "so be really careful with the so I'm gonna hand it over to Chris now",
    "start": "2790750",
    "end": "2796540"
  },
  {
    "start": "2794000",
    "end": "2794000"
  },
  {
    "text": "to talk about like you know what what it what is this meant for us right and and how our developers feel about this today",
    "start": "2796540",
    "end": "2804270"
  },
  {
    "text": "thanks yes I don't lock yourself out so what does the experience actually look like today like where have we evolved to",
    "start": "2804270",
    "end": "2811150"
  },
  {
    "text": "today account owners are happy right because they can easily add users into accounts to sign them to roles take away",
    "start": "2811150",
    "end": "2818620"
  },
  {
    "text": "privileged access if they need to individuals are happy developers because they can use the console on the CLI to",
    "start": "2818620",
    "end": "2823750"
  },
  {
    "text": "create the roles that they need to in a very simple very native way away when you go out and start googling you'll",
    "start": "2823750",
    "end": "2829840"
  },
  {
    "text": "find information on all right securities happy because we are federated single sign-on MFA teams are happy because they",
    "start": "2829840",
    "end": "2836440"
  },
  {
    "text": "can manage those roles natively and the technical leadership is happy because we've returned two teams the ability to",
    "start": "2836440",
    "end": "2844600"
  },
  {
    "text": "be productive agile have that choice that we talked about with developer experience so lastly where are we going",
    "start": "2844600",
    "end": "2851050"
  },
  {
    "text": "obviously this is an evolving journey for us and continues to do so we'd love to extend our use of SCPs to further",
    "start": "2851050",
    "end": "2858430"
  },
  {
    "text": "simplify governance controls and and simplify the permission boundaries expand self-service SSO role so when a",
    "start": "2858430",
    "end": "2865030"
  },
  {
    "text": "person wants to access Amazon with one of these single sign-on roles we'd like to be able to delegate the ability for",
    "start": "2865030",
    "end": "2870250"
  },
  {
    "text": "teams to actually create and manage those things as well and a more fine-grained manner and we're working on",
    "start": "2870250",
    "end": "2876070"
  },
  {
    "text": "that and launching self-service I am users is another thing that's kind of on our roadmap and as well as taking the",
    "start": "2876070",
    "end": "2882250"
  },
  {
    "text": "concept of that graduated maturity model and really using that as a mechanism to",
    "start": "2882250",
    "end": "2887440"
  },
  {
    "text": "drive maturity into the organization from a security from a governance from an IM and from a lease privilege",
    "start": "2887440",
    "end": "2893860"
  },
  {
    "text": "perspective and with that I think we've got just a few minutes for for questions",
    "start": "2893860",
    "end": "2899380"
  },
  {
    "text": "so I'll stop there and say thanks and see if anyone has any questions",
    "start": "2899380",
    "end": "2904200"
  }
]