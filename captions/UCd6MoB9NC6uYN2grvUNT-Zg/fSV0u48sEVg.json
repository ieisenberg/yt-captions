[
  {
    "text": "Hello, and welcome to\n'This is My Architecture.'",
    "start": "7268",
    "end": "9575"
  },
  {
    "text": "Today with me,\nI have Boris from Social Quantum.",
    "start": "9575",
    "end": "12037"
  },
  {
    "text": "It's pleasure to be here.",
    "start": "12037",
    "end": "13583"
  },
  {
    "text": "So Boris, can you tell us\na little bit about Social Quantum,",
    "start": "13583",
    "end": "16322"
  },
  {
    "text": "We are a game development company",
    "start": "16322",
    "end": "18000"
  },
  {
    "text": "with more than 10 years\nhistory on the market.",
    "start": "18001",
    "end": "20946"
  },
  {
    "text": "We specialize in mobile games,",
    "start": "20947",
    "end": "23131"
  },
  {
    "text": "and we have several award-winning titles\nsuch as Wild West 3D and Megapolis.",
    "start": "23131",
    "end": "28893"
  },
  {
    "text": "Okay, so you brought us\nquite an interesting architecture here",
    "start": "28893",
    "end": "32238"
  },
  {
    "text": "because I can see\nthere's a lot of serverless pieces here,",
    "start": "32239",
    "end": "35140"
  },
  {
    "text": "actually, almost the whole\narchitecture is serverless,",
    "start": "35140",
    "end": "37875"
  },
  {
    "text": "can you tell us about it?",
    "start": "37876",
    "end": "38991"
  },
  {
    "text": "Well, so actually, it's pretty simple.",
    "start": "39655",
    "end": "42982"
  },
  {
    "text": "The requests from our users are processed\nby the application load balancer,",
    "start": "43793",
    "end": "49712"
  },
  {
    "text": "then they're forwarded\nto the ECS Fargate cluster,",
    "start": "50357",
    "end": "53934"
  },
  {
    "text": "which provides our application.",
    "start": "53935",
    "end": "59062"
  },
  {
    "text": "It's responsible for\nall the game logic and user interaction.",
    "start": "59332",
    "end": "62767"
  },
  {
    "text": "Also, we use\nRDS Postgres database cluster.",
    "start": "63375",
    "end": "68478"
  },
  {
    "text": "So I guess that's where all the user data\nand the game data is stored as well?",
    "start": "68830",
    "end": "72100"
  },
  {
    "text": "Yes, that's right.",
    "start": "72100",
    "end": "73416"
  },
  {
    "text": "And we use ElastiCache",
    "start": "73841",
    "end": "76999"
  },
  {
    "text": "which helps us to reduce\nthe load on the database",
    "start": "78350",
    "end": "83275"
  },
  {
    "text": "by caching some data from it.",
    "start": "83275",
    "end": "85492"
  },
  {
    "text": "-I guess it's just to make it much faster.\n-Yes, it is.",
    "start": "85492",
    "end": "88408"
  },
  {
    "text": "So, and we have several Lambda functions",
    "start": "88641",
    "end": "92187"
  },
  {
    "text": "for our infrequent or maintenance tasks.",
    "start": "92728",
    "end": "96442"
  },
  {
    "text": "The interesting thing that",
    "start": "96938",
    "end": "98517"
  },
  {
    "text": "these Lambdas are ran in ECS cluster.",
    "start": "98518",
    "end": "103861"
  },
  {
    "text": "Okay, so you also need\nto monitor the whole system.",
    "start": "105417",
    "end": "108470"
  },
  {
    "text": "So I can see the CloudWatch here.\nCan you tell us about it?",
    "start": "108470",
    "end": "111149"
  },
  {
    "text": "Of course. So we also need to monitor",
    "start": "111149",
    "end": "114566"
  },
  {
    "text": "and collect logs\nfrom all of our environments.",
    "start": "114566",
    "end": "119353"
  },
  {
    "text": "So we use CloudWatch,\nit helps us to collect metrics and logs",
    "start": "119353",
    "end": "123711"
  },
  {
    "text": "from any piece of our back end",
    "start": "123711",
    "end": "127792"
  },
  {
    "text": "with almost zero effort.",
    "start": "128330",
    "end": "130496"
  },
  {
    "text": "Okay, so the main logic\nof the core component,",
    "start": "131330",
    "end": "134983"
  },
  {
    "text": "I would say, is this one,\nwhich is actually ECS. So why ECS?",
    "start": "134983",
    "end": "139919"
  },
  {
    "text": "ECS is a very simple tool.",
    "start": "140884",
    "end": "143454"
  },
  {
    "text": "It doesn't require from you\nany special knowledge to operate it.",
    "start": "145323",
    "end": "148996"
  },
  {
    "text": "And I guess it could take up\na couple of hours",
    "start": "148996",
    "end": "153038"
  },
  {
    "text": "to spin up a proof of concept\nlike this in ECS.",
    "start": "153038",
    "end": "156319"
  },
  {
    "text": "Okay, but it's not only ECS.",
    "start": "156572",
    "end": "158125"
  },
  {
    "text": "It's also Fargate,\nwhich is quite interesting.",
    "start": "158126",
    "end": "160994"
  },
  {
    "text": "Fargate is, I guess,\nthe most important piece here.",
    "start": "161137",
    "end": "164810"
  },
  {
    "text": "It eliminates the need of servers at all.",
    "start": "165130",
    "end": "168694"
  },
  {
    "text": "For example, several months ago,\nwe ran this architecture on-premises,",
    "start": "168694",
    "end": "173911"
  },
  {
    "text": "and we had two servers here,",
    "start": "173911",
    "end": "177009"
  },
  {
    "text": "twelve here, and six here.",
    "start": "177843",
    "end": "181750"
  },
  {
    "text": "And now thanks to Fargate we have none.",
    "start": "181750",
    "end": "185556"
  },
  {
    "text": "Okay, sounds very interesting.",
    "start": "186616",
    "end": "188135"
  },
  {
    "text": "But the games are actually the workload,",
    "start": "188587",
    "end": "190958"
  },
  {
    "text": "which needs to be scaled\ndue to the customer demands,",
    "start": "190959",
    "end": "193810"
  },
  {
    "text": "and sometimes it can be unpredictable,\nfor example, during the featuring phase.",
    "start": "193810",
    "end": "198343"
  },
  {
    "text": "So how do you actually scale the system?",
    "start": "198563",
    "end": "200021"
  },
  {
    "text": "That's a good question.",
    "start": "200369",
    "end": "201617"
  },
  {
    "text": "So yes, we have an average",
    "start": "201617",
    "end": "204971"
  },
  {
    "text": "of 60,000 requests per minute,",
    "start": "204971",
    "end": "210782"
  },
  {
    "text": "but it could vary from 10,000 to 120,000.",
    "start": "211375",
    "end": "217229"
  },
  {
    "text": "So after scan feature\nis very crucial for us.",
    "start": "217229",
    "end": "220730"
  },
  {
    "text": "But it's very easily handled\nby Fargate itself.",
    "start": "220730",
    "end": "223901"
  },
  {
    "text": "We just need to provide it\nwith some metrics.",
    "start": "223901",
    "end": "227339"
  },
  {
    "text": "For example, we could use\naverage processing time",
    "start": "227339",
    "end": "232654"
  },
  {
    "text": "for a request from the ALB,",
    "start": "232700",
    "end": "235181"
  },
  {
    "text": "or, for example, the average number\nof requests per container in your cluster.",
    "start": "235663",
    "end": "241030"
  },
  {
    "text": "Okay, so scaling\nit's a very important piece,",
    "start": "241450",
    "end": "245264"
  },
  {
    "text": "but the system should also be stable.",
    "start": "245264",
    "end": "248433"
  },
  {
    "text": "So how do you actually handle\nthis situation?",
    "start": "248433",
    "end": "252273"
  },
  {
    "text": "Just like the scaling,",
    "start": "252740",
    "end": "255323"
  },
  {
    "text": "the availability is built\nin Fargate itself.",
    "start": "255323",
    "end": "259539"
  },
  {
    "text": "You just specify the availability zones",
    "start": "259542",
    "end": "263207"
  },
  {
    "text": "you want to run your containers in,",
    "start": "263209",
    "end": "265627"
  },
  {
    "text": "and that's all, it just works.",
    "start": "266050",
    "end": "268512"
  },
  {
    "text": "Okay, so scaling works,\navailability works,",
    "start": "268811",
    "end": "271940"
  },
  {
    "text": "but it shouldn't be that simple.",
    "start": "271941",
    "end": "273484"
  },
  {
    "text": "So while developing the system, obviously,",
    "start": "273490",
    "end": "275707"
  },
  {
    "text": "there were some challenges\nthat you had to overcome.",
    "start": "275709",
    "end": "277391"
  },
  {
    "text": "First of all, you may need some courage\nto deep dive into AWS serverless services.",
    "start": "277391",
    "end": "282748"
  },
  {
    "text": "You need to think the cloud native way",
    "start": "282748",
    "end": "285655"
  },
  {
    "text": "to apprehend all the features\nthat AWS could provide.",
    "start": "285656",
    "end": "290287"
  },
  {
    "text": "As for technical issues,",
    "start": "290922",
    "end": "292865"
  },
  {
    "text": "so our app wasn't ready\nto work in the cloud at all.",
    "start": "292865",
    "end": "298233"
  },
  {
    "text": "First of all, we needed to dockerize it,",
    "start": "298303",
    "end": "301506"
  },
  {
    "text": "And then afte we had done that,",
    "start": "301975",
    "end": "303534"
  },
  {
    "text": "we discovered that our app",
    "start": "303534",
    "end": "305980"
  },
  {
    "text": "wasn't ready to work in Fargate,",
    "start": "305980",
    "end": "310215"
  },
  {
    "text": "because we used TCP checks here\ninstead of HTTP ones from the ALB.",
    "start": "310450",
    "end": "316124"
  },
  {
    "text": "So our backend development team",
    "start": "316124",
    "end": "318439"
  },
  {
    "text": "took some time to write\nsome parts of the application.",
    "start": "318440",
    "end": "321759"
  },
  {
    "text": "And that's all, problem solved.",
    "start": "322017",
    "end": "323523"
  },
  {
    "text": "So this system actually been running\nin production for quite some time.",
    "start": "323523",
    "end": "327498"
  },
  {
    "text": "What's the performance\nand the outcomes of the system?",
    "start": "327990",
    "end": "331030"
  },
  {
    "text": "First of all, we were able to even reduce\nthe overall cost of our backend",
    "start": "331031",
    "end": "336077"
  },
  {
    "text": "compared to when we ran\nthese backends on-premises.",
    "start": "336542",
    "end": "340429"
  },
  {
    "text": "Also, thanks to ECS and Fargate,",
    "start": "341403",
    "end": "344480"
  },
  {
    "text": "we eliminated all the service\nand the maintenance",
    "start": "344480",
    "end": "348877"
  },
  {
    "text": "and actually, we--",
    "start": "348877",
    "end": "351904"
  },
  {
    "text": "Now we have twice less people",
    "start": "352924",
    "end": "355125"
  },
  {
    "text": "to look after our backends\nthan we had before.",
    "start": "355126",
    "end": "357459"
  },
  {
    "text": "And right now,",
    "start": "357917",
    "end": "361212"
  },
  {
    "text": "we have only one tool\nto control our environment,",
    "start": "361212",
    "end": "365016"
  },
  {
    "text": "which is Terraform by HashiCorp.",
    "start": "365016",
    "end": "367630"
  },
  {
    "text": "One tool is really easy to maintain",
    "start": "367743",
    "end": "369992"
  },
  {
    "text": "and it helps us to develop\nand deploy new environments very quickly.",
    "start": "369992",
    "end": "374817"
  },
  {
    "text": "Okay, so that's the cost,\noptimization, maintenance",
    "start": "375148",
    "end": "378122"
  },
  {
    "text": "and overall stability of the system,\nwhich is very interesting.",
    "start": "378122",
    "end": "381142"
  },
  {
    "text": "So, thank you, Boris,",
    "start": "381142",
    "end": "382414"
  },
  {
    "text": "for sharing\nthis information today with us.",
    "start": "382415",
    "end": "384663"
  },
  {
    "text": "You're welcome.",
    "start": "384663",
    "end": "385734"
  },
  {
    "text": "And thank you for watching,\n'This is My Architecture.'",
    "start": "385734",
    "end": "388173"
  }
]