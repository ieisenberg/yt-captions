[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "hello and thank you for joining us today for this webinar on how to get started with Amazon web services I'm Adam Glick",
    "start": "80",
    "end": "6480"
  },
  {
    "text": "and I work for Amazon web services here in Seattle Washington in today's webinar we're going to talk about the following",
    "start": "6480",
    "end": "11799"
  },
  {
    "text": "things we'll cover the fundamental pillars of Amazon web services Cloud we'll also discuss the typical progress",
    "start": "11799",
    "end": "17520"
  },
  {
    "text": "we see organizations go through as they migrate to the cloud we'll then spend the majority of our time actually",
    "start": "17520",
    "end": "22560"
  },
  {
    "text": "showing you what you need to know to get started with AWS and finally we'll conclude this webinar with a question",
    "start": "22560",
    "end": "28439"
  },
  {
    "text": "and answer session to help answer the questions you have after watching today's presentation let's get started",
    "start": "28439",
    "end": "33520"
  },
  {
    "text": "there's six fundamental parts of the AWS Cloud these fundamentals form the basis for all the benefits that you can",
    "start": "33520",
    "end": "38719"
  },
  {
    "start": "34000",
    "end": "34000"
  },
  {
    "text": "achieve from Amazon web services the first of these is a complete set of services AWS first launched in 2006 and",
    "start": "38719",
    "end": "45320"
  },
  {
    "text": "now provides over 30 different services to help you achieve your specific needs from access to small amounts of",
    "start": "45320",
    "end": "50440"
  },
  {
    "text": "computing power to large clusters database services with SQL and no SQL options DNS CDN queuing notifications",
    "start": "50440",
    "end": "58480"
  },
  {
    "text": "transcoding deployment monitoring and much more ads even provides the ability",
    "start": "58480",
    "end": "63600"
  },
  {
    "text": "to programmatically employ people for tasks that are difficult to automate the second is flexibility personally I",
    "start": "63600",
    "end": "69080"
  },
  {
    "text": "always find it inspiring when I hear of all the different things that companies are doing with Amazon web services we",
    "start": "69080",
    "end": "74159"
  },
  {
    "text": "know there are a lot of great ideas out there and we want to empower our customers to be able to do what they want in the ways that they want to do it",
    "start": "74159",
    "end": "79920"
  },
  {
    "text": "we've tried to make AWS as flexible as possible so you can use the operating systems platforms tools and plugins that",
    "start": "79920",
    "end": "86600"
  },
  {
    "text": "you want we also give you root access so you can access any of the resources in the operating system with a complete set",
    "start": "86600",
    "end": "92920"
  },
  {
    "text": "of services and the flexibility to use those Services however you want we've been amazed at what our customers have",
    "start": "92920",
    "end": "98079"
  },
  {
    "text": "come up with the next fundamental is a global presence another core benefit of Amazon web services is the global",
    "start": "98079",
    "end": "103159"
  },
  {
    "text": "presence that it provides AWS has regions around the world so you can locate your applications close to your",
    "start": "103159",
    "end": "108439"
  },
  {
    "text": "customers and in regions that make sense for your business a developer in the United States could start operating in",
    "start": "108439",
    "end": "113880"
  },
  {
    "text": "Japan and Ireland simply by changing a variable in their AWS code or clicking a drop down in the AWS Management console",
    "start": "113880",
    "end": "120759"
  },
  {
    "text": "this greatly lowers the barrier to starting operations in a new part of the world coupled with that is our next",
    "start": "120759",
    "end": "125880"
  },
  {
    "text": "fundamental it's the instant access to resources and instant access to resources means that you can get access",
    "start": "125880",
    "end": "131720"
  },
  {
    "text": "to everything in the AWS Cloud without prior planning with this immediate access to resources we've had companies",
    "start": "131720",
    "end": "137440"
  },
  {
    "text": "like engage tell us that they've lowered their time to Market by 90% by not having to wait for purchasing delivery",
    "start": "137440",
    "end": "143040"
  },
  {
    "text": "and provisioning of new systems companies also avoid having to do capacity planning because more resources",
    "start": "143040",
    "end": "148319"
  },
  {
    "text": "are always available when they need them another advantage of this instant access to resources is they can be turned off when they aren't needed this means you",
    "start": "148319",
    "end": "154400"
  },
  {
    "text": "can size your infrastructure to the actual demand and scale it elastically instead of under or over provisioning",
    "start": "154400",
    "end": "160599"
  },
  {
    "text": "combining the global presence of AWS with the instant access to resources means that going global is now something",
    "start": "160599",
    "end": "166120"
  },
  {
    "text": "that can happen in minutes instead of months or years AWS has a commitment to providing lowcost it Amazon web services",
    "start": "166120",
    "end": "172560"
  },
  {
    "text": "works on a pay as youo model this means you never have to pay Upfront for Capital expenditures and only pay for",
    "start": "172560",
    "end": "177920"
  },
  {
    "text": "the operating costs of what you use this is has been one of the things that our customers have told us was most beneficial to them by avoiding the large",
    "start": "177920",
    "end": "183720"
  },
  {
    "text": "upfront costs of creating new infrastructure they able to do more experimentation to optimize their businesses in addition one of the",
    "start": "183720",
    "end": "190239"
  },
  {
    "text": "commitments AWS has is a belief that we can always help our customers by lowering prices we've worked hard to",
    "start": "190239",
    "end": "195760"
  },
  {
    "text": "find ways to lower our prices every year we continue to take those savings and then pass them along to our customers",
    "start": "195760",
    "end": "201360"
  },
  {
    "text": "our customers tell us that they love it when we lower our prices and it's why it's part of what we do we've done it",
    "start": "201360",
    "end": "206400"
  },
  {
    "text": "dozens of times in the past years and will continue to do so we are only successful when our customers are and as",
    "start": "206400",
    "end": "211720"
  },
  {
    "text": "we lower our prices our customers have more money to make their business successful that's a virtuous cycle that results in US seeing more business from",
    "start": "211720",
    "end": "218400"
  },
  {
    "text": "what they do so it's in our interests to help those customers grow their businesses this is one of the great disruptive effects of the AWS Cloud we",
    "start": "218400",
    "end": "225959"
  },
  {
    "text": "provide additional ways that we can deliver on lowering the cost of it by providing ways to reserve the prices of",
    "start": "225959",
    "end": "232000"
  },
  {
    "text": "your instances at a substantial discount and that discount can exceed 40% as well as tiered pricing which enables bulk",
    "start": "232000",
    "end": "238400"
  },
  {
    "text": "discounts in your purchase of AWS Services finally we look at how we can make our customers more productive",
    "start": "238400",
    "end": "243519"
  },
  {
    "text": "Amazon web services provides database services that can handle scaling of a database backing up of data automatically load balancing that",
    "start": "243519",
    "end": "250360"
  },
  {
    "text": "automatically scales with your Demand Storage that automatically handles redundancy and many other features we hope to make all of our customers",
    "start": "250360",
    "end": "257160"
  },
  {
    "text": "successful and part of that is empowering our customers to focus on what their Core Business is we handle",
    "start": "257160",
    "end": "262199"
  },
  {
    "text": "the racking and stacking of service locations utility management and much more so you can focus on what makes your",
    "start": "262199",
    "end": "267759"
  },
  {
    "text": "application great these six fundamental help AWS provide a broad set of lowcost services instantly available around the",
    "start": "267759",
    "end": "274039"
  },
  {
    "text": "world with these Services you have the flexibility to do what you want while avoiding the undifferentiated heavy",
    "start": "274039",
    "end": "279240"
  },
  {
    "text": "lifting in your applications and infrastructure Amazon web services provides a complete set of online services to enable your online business",
    "start": "279240",
    "end": "285840"
  },
  {
    "start": "282000",
    "end": "282000"
  },
  {
    "text": "we're not going to go through all the services today since there are over 30 of them but I did want to cover the areas of technology that the services",
    "start": "285840",
    "end": "291800"
  },
  {
    "text": "cover as well as give you some examples on the bottom of the stack AWS provides a global infrastructure this includes",
    "start": "291800",
    "end": "297800"
  },
  {
    "text": "regions around the world and the power physical security and maintenance of those resources the next layer is the",
    "start": "297800",
    "end": "303080"
  },
  {
    "text": "networking layer AWS provides networking services like virtual private cloud or VPC technology and this gives you full",
    "start": "303080",
    "end": "310120"
  },
  {
    "text": "address control of your environment so if you want to use private IP subnets for instance you're completely able to",
    "start": "310120",
    "end": "315400"
  },
  {
    "text": "do so we also provide DNS services with product called Route 53 firewall controls with security groups VPN",
    "start": "315400",
    "end": "322360"
  },
  {
    "text": "connections Network load balancing Services a Content distribution Network or CDN called Amazon cloudfront as well",
    "start": "322360",
    "end": "328400"
  },
  {
    "text": "as other core networking Services the next layer is broken into three areas compute storage and database compute is",
    "start": "328400",
    "end": "334759"
  },
  {
    "text": "the computing power provided through ec2 or the elastic compute Cloud these are virtual machines or instances as they're",
    "start": "334759",
    "end": "340960"
  },
  {
    "text": "called in AWS that you can run your application in storage is a set of services that provides ways for you to",
    "start": "340960",
    "end": "346120"
  },
  {
    "text": "store your information these are everything from hard disk services for your virtual machines to Internet connected storage with Amazon simple",
    "start": "346120",
    "end": "352120"
  },
  {
    "text": "storage service or S3 it even has archival storage with things like Amazon Glacier the database layer provides many",
    "start": "352120",
    "end": "357759"
  },
  {
    "text": "different database services to meet your needs the relational database service or RDS provides relational database",
    "start": "357759",
    "end": "362919"
  },
  {
    "text": "services using products like my SQL Microsoft SQL server and Oracle AWS also",
    "start": "362919",
    "end": "368039"
  },
  {
    "text": "provides a nosql option with Dynamo DB you have the access to large paby scale data warehouses with Amazon redshift the",
    "start": "368039",
    "end": "374680"
  },
  {
    "text": "application Services layer provides applications to Aid common development tasks these include a queuing service to",
    "start": "374680",
    "end": "380360"
  },
  {
    "text": "help you create highly available cues to help with designing highly available applications this service is called the",
    "start": "380360",
    "end": "385800"
  },
  {
    "text": "simple queuing service or sqs likewise we have a simple notification service or SNS that helps deliver notifications by",
    "start": "385800",
    "end": "391880"
  },
  {
    "text": "email SMS or mobile app notification there's also services for workflow transcoding outbound email and many",
    "start": "391880",
    "end": "397759"
  },
  {
    "text": "others finally the deployment Administration layer provides tools to enable you to handle management of your applications services like elastic beant",
    "start": "397759",
    "end": "404759"
  },
  {
    "text": "stock allow you to never have to worry about how to configure your AWS resources while products like opsw Works",
    "start": "404759",
    "end": "410759"
  },
  {
    "text": "give you monitoring control and access to Chef recipes for configuration as you can see there's a lot to the adbs",
    "start": "410759",
    "end": "416680"
  },
  {
    "text": "products deck we're not going to try and get through it all today today we're just going to focus on the first parts of what you need to know to get started",
    "start": "416680",
    "end": "422680"
  },
  {
    "text": "with AWS when we talk to our customers we typically see a pattern around how they adopt AWS Services it's not a",
    "start": "422680",
    "end": "428479"
  },
  {
    "start": "424000",
    "end": "424000"
  },
  {
    "text": "blueprint for every customer but it may be helpful in deciding what information and services are best for you to look into as opposed to trying to learn",
    "start": "428479",
    "end": "434960"
  },
  {
    "text": "everything at once usually a startup will start with developers coding on their own machines this is easy and fast",
    "start": "434960",
    "end": "440680"
  },
  {
    "text": "but makes it hard to share your code with others as other developers need to look at the code a server is sometimes used that is connected to an internet",
    "start": "440680",
    "end": "446919"
  },
  {
    "text": "connection this works fine for a few users working in Shadow mode but finds itself whims of having a single machine",
    "start": "446919",
    "end": "452759"
  },
  {
    "text": "plugged into a consumer internet connection typically at an office or home the organization usually grows a little more and it's looking for",
    "start": "452759",
    "end": "458960"
  },
  {
    "text": "something that's a little more ready for internal testing and demonstrations to select individuals like Angel Investors",
    "start": "458960",
    "end": "464159"
  },
  {
    "text": "Venture capitalists or important project decision makers this is the time when many startups think about creating a server closet using a co-location",
    "start": "464159",
    "end": "471120"
  },
  {
    "text": "facility or moving their operations into the cloud although you could move to the cloud at any phase listed here we",
    "start": "471120",
    "end": "476360"
  },
  {
    "text": "typically see organizations start in the cloud or move into the aw Cloud at this point as they don't have to invest in",
    "start": "476360",
    "end": "481560"
  },
  {
    "text": "new infrastructure and don't have to worry about having a highquality internet connection want some protection from localized challenges like theft or",
    "start": "481560",
    "end": "488800"
  },
  {
    "text": "spilling a cup of coffee on their production box this webinar is focused on those that are in this stage as the",
    "start": "488800",
    "end": "494319"
  },
  {
    "text": "company grows more the need for additional resources become more apparent the easiest way to scale for many organizations that haven't chosen",
    "start": "494319",
    "end": "500039"
  },
  {
    "text": "to design horizontally is to scale up this enables them to handle greater numbers of users but comes with some",
    "start": "500039",
    "end": "505720"
  },
  {
    "text": "challenges around scale cost and availability this will be covered in Greater depth in the next webinar in this series as growth continues",
    "start": "505720",
    "end": "512320"
  },
  {
    "text": "typically after a round of investment Capital the company looks at rearching for greater availability better",
    "start": "512320",
    "end": "517800"
  },
  {
    "text": "scalability and to reduce their costs we call this scaling out finally the organization is growing quickly and has",
    "start": "517800",
    "end": "524120"
  },
  {
    "text": "many resources to manage at this point deployment and Resource Management tools as well as cost optimization tools and",
    "start": "524120",
    "end": "530480"
  },
  {
    "text": "other highlevel services aimed at helping manage monitor optimize and run these Services become employed as the",
    "start": "530480",
    "end": "536399"
  },
  {
    "text": "organization looks to scale to meet the growing needs of a fast F growing user base since this is an introductory",
    "start": "536399",
    "end": "541680"
  },
  {
    "text": "session we'll be dealing with the people in the early stages who want to start using AWS these would be startups looking to get start in the cloud and",
    "start": "541680",
    "end": "548360"
  },
  {
    "text": "would be in the create share or deploy stages shown here I did want to mention that if you would like Amazon web services to handle all of the deployment",
    "start": "548360",
    "end": "554680"
  },
  {
    "text": "of your application for you we provide a service called elastic bean stock that will do that for you at no extra charge",
    "start": "554680",
    "end": "560600"
  },
  {
    "text": "elastic beanock enables you to take a Java Ruby python PHP node or net",
    "start": "560600",
    "end": "566079"
  },
  {
    "text": "application and have AWS deploy and manage it for you it will automatically configure the servers the way that you",
    "start": "566079",
    "end": "571440"
  },
  {
    "text": "want and scale the service as you specify if you are looking to deploy your application do not want to understand how to access the low-level",
    "start": "571440",
    "end": "577760"
  },
  {
    "text": "resources in AWS this might be the solution for you you can learn more about elastic beanock at aws.amazon.com",
    "start": "577760",
    "end": "584839"
  },
  {
    "text": "elastic beanock everyone who signs up for AWS is automatically signed up for",
    "start": "584839",
    "end": "589880"
  },
  {
    "start": "587000",
    "end": "587000"
  },
  {
    "text": "the free tier everything we do today will be done within the free tier so you can do everything you see today without",
    "start": "589880",
    "end": "595360"
  },
  {
    "text": "any cost to you many AWS services are included in the free tier to help you get familiar with the services and let",
    "start": "595360",
    "end": "600839"
  },
  {
    "text": "you try them out with your own code and use cases you can find more information on everything in the free tier at",
    "start": "600839",
    "end": "605880"
  },
  {
    "text": "aws.amazon.com sfree now that we've covered the fundamentals of the AWS Cloud let's talk",
    "start": "605880",
    "end": "611800"
  },
  {
    "start": "609000",
    "end": "609000"
  },
  {
    "text": "about how you get started I'll demonstrate how you can get your first virtual machine running we call them instances we've designed AWS to be",
    "start": "611800",
    "end": "618360"
  },
  {
    "text": "secure by default so I'll show you how you can open a port in your AWS firewall so that you can connect your application",
    "start": "618360",
    "end": "623920"
  },
  {
    "text": "I'll also show you how you can use secured key pays for connecting to your instances you'll also see how to set up an email alert if your server is under",
    "start": "623920",
    "end": "630560"
  },
  {
    "text": "high CPU load and I'll demonstrate how to take a backup of your instance and how to restore that backup we'll finish",
    "start": "630560",
    "end": "635800"
  },
  {
    "text": "by putting a file in Amazon simple storage solution sometimes referred to as S3 and how to make that file",
    "start": "635800",
    "end": "641240"
  },
  {
    "text": "available to anyone on the internet let's get started the first thing that you need to do is sign up for an Amazon",
    "start": "641240",
    "end": "646440"
  },
  {
    "text": "web services account it's simple just go to aws.amazon.com and click on the sign",
    "start": "646440",
    "end": "651480"
  },
  {
    "text": "up button at the top you do need a credit card and be near a phone because we have a phone verification section",
    "start": "651480",
    "end": "657120"
  },
  {
    "text": "let's walk through that process",
    "start": "657120",
    "end": "661040"
  },
  {
    "text": "here enter your email",
    "start": "665720",
    "end": "668920"
  },
  {
    "text": "address now select I'm a new user and click the signin using our secure server",
    "start": "672440",
    "end": "679320"
  },
  {
    "text": "button enter your name and then verify your email address by entering again in",
    "start": "679320",
    "end": "684600"
  },
  {
    "text": "the second box",
    "start": "684600",
    "end": "690959"
  },
  {
    "text": "select a password then enter it again and click",
    "start": "692560",
    "end": "698160"
  },
  {
    "text": "the continue",
    "start": "698160",
    "end": "700759"
  },
  {
    "text": "button in your Details page enter your full name company name address city",
    "start": "704120",
    "end": "711839"
  },
  {
    "text": "state or region zip code and phone",
    "start": "711839",
    "end": "716440"
  },
  {
    "text": "number",
    "start": "717959",
    "end": "720959"
  },
  {
    "text": "once you've completed entering that information you can enter the verification number in the security check enter the letters that you see",
    "start": "728560",
    "end": "736399"
  },
  {
    "text": "above in the picture make sure that you read the Amazon web services customer agreement",
    "start": "736399",
    "end": "743440"
  },
  {
    "text": "then select that you verify it and create your account by clicking the create account and continue button on",
    "start": "743440",
    "end": "749240"
  },
  {
    "text": "the payment method page you'll select what kind of credit card you want to use enter your card number card holder name",
    "start": "749240",
    "end": "755440"
  },
  {
    "text": "and expiration",
    "start": "755440",
    "end": "758199"
  },
  {
    "text": "date click continue for phone verification we have",
    "start": "771680",
    "end": "778600"
  },
  {
    "text": "the phone phone number and click call me now a phone call will be placed to you and you'll be asked to enter the pin number that you see on the screen once",
    "start": "778600",
    "end": "784959"
  },
  {
    "text": "you've done that you can click the continue button that will",
    "start": "784959",
    "end": "789880"
  },
  {
    "text": "appear here you can select the form of support that you'd like with your AWS plan we'll leave it as basic for now and",
    "start": "793000",
    "end": "798639"
  },
  {
    "text": "then click continue you've now set up your AWS",
    "start": "798639",
    "end": "804920"
  },
  {
    "text": "account we'll go back to the homepage and then from there we'll click on my account SL console and choose AWS",
    "start": "804920",
    "end": "811279"
  },
  {
    "text": "Management console to log into our new account here log in using the password",
    "start": "811279",
    "end": "816600"
  },
  {
    "text": "you created the beginning of this process and then click sign in using our secure",
    "start": "816600",
    "end": "822040"
  },
  {
    "text": "server there you go you're into the AWS Management console if the virtual machine or",
    "start": "822959",
    "end": "828760"
  },
  {
    "start": "827000",
    "end": "827000"
  },
  {
    "text": "instances as we call them you will be creating an ec2 will be using Linux the first thing you will need to do after",
    "start": "828760",
    "end": "834320"
  },
  {
    "text": "you've signed up for Amazon web services is to create a secure shell key or SSH key remember this doesn't depend on what",
    "start": "834320",
    "end": "841079"
  },
  {
    "text": "operating system you are using on your own computer this is for the computer that AWS is going to be running for you",
    "start": "841079",
    "end": "847160"
  },
  {
    "text": "for users who will be using Windows instances in AWS you do not need an SSH key as you'll be using remote desktop",
    "start": "847160",
    "end": "853440"
  },
  {
    "text": "and a login and password to connect your windows instances from your computer you will however need a key pair to create",
    "start": "853440",
    "end": "859800"
  },
  {
    "text": "your windows administrator credentials so you'll need to create a key pair in either case for this example we'll be",
    "start": "859800",
    "end": "865120"
  },
  {
    "text": "looking at working with a Linux instance and so we're going to create an SSA key SSH key is help avoid weak passwords",
    "start": "865120",
    "end": "871519"
  },
  {
    "text": "since the key used is much longer than most user passwords if you want you have the ability to import your own key is",
    "start": "871519",
    "end": "877120"
  },
  {
    "text": "for use in connecting to your ec2 instances in this demonstration we'll be using the key pair generator that is",
    "start": "877120",
    "end": "883040"
  },
  {
    "text": "built into AWS we're going to start at the AWS homepage from here click my account and then select AWS Management",
    "start": "883040",
    "end": "890000"
  },
  {
    "text": "console we'll then log in with the user we've created and click sign in using our secure server you're now at the AWS",
    "start": "890000",
    "end": "896480"
  },
  {
    "text": "Management console page click EC on the left hand side here's the ec2 Management",
    "start": "896480",
    "end": "902079"
  },
  {
    "text": "console we're going to check our region up in the right hand corner here you can see we're in US West Northern California",
    "start": "902079",
    "end": "908399"
  },
  {
    "text": "you'll always want to make sure you're in the right region the region that you choose isn't important just make sure you're always in the same one then click",
    "start": "908399",
    "end": "915399"
  },
  {
    "text": "key pairs here click create key pair because we're making a new one and make a new key pair called my first",
    "start": "915399",
    "end": "923040"
  },
  {
    "text": "key click yes and there you go one thing that you",
    "start": "923040",
    "end": "929120"
  },
  {
    "text": "should be aware of is depending on the browser and your operating system the file that gets saved may be called different things if you're using Chrome",
    "start": "929120",
    "end": "935839"
  },
  {
    "text": "on Mavericks for instance it may say myir key. CER or if you're using Safari",
    "start": "935839",
    "end": "941759"
  },
  {
    "text": "like we are here you'll see in a second that it becomes a txt file in some cases it'll be a PM file the correct file",
    "start": "941759",
    "end": "948440"
  },
  {
    "text": "extension is PM and so we're going to go into our terminal here or if you were in Windows you could do into your command",
    "start": "948440",
    "end": "955319"
  },
  {
    "text": "prompt or your Explorer window and you'll have to go rename that and so we're going to go do that but be aware that you may see different file names",
    "start": "955319",
    "end": "962000"
  },
  {
    "text": "and that's just something that you may need to rename it based upon the operating system and browser that's downloading",
    "start": "962000",
    "end": "968360"
  },
  {
    "text": "it we'll go back to the dashboard and then open up our terminal",
    "start": "969880",
    "end": "975319"
  },
  {
    "text": "window here we go and I'm going to go to my downloads directory where that was downloaded",
    "start": "975319",
    "end": "981279"
  },
  {
    "text": "to so in here we'll do a directory listing you can see that my my first key. pm. txt again because I mentioned",
    "start": "984560",
    "end": "991480"
  },
  {
    "text": "that I'm using Mavericks and Safari so I'm going to rename that to my first",
    "start": "991480",
    "end": "997240"
  },
  {
    "text": "key.pem the other thing that we'll need to do is if you are using Linux or OSX",
    "start": "997680",
    "end": "1003319"
  },
  {
    "text": "you're going to need to change the permissions on that file so for instance in this case I'm going to change the permissions to 400 if you have",
    "start": "1003319",
    "end": "1009720"
  },
  {
    "text": "permissions that are set too broadly then when you're trying to make your connections over SSH it's going to tell",
    "start": "1009720",
    "end": "1015880"
  },
  {
    "text": "you that you have a overly permissive access and you won't be able to access it so it's very important that you change these windows users won't run",
    "start": "1015880",
    "end": "1023079"
  },
  {
    "text": "into this because you use directory permissions so it's a little different but if you're using Mac or Linux make sure to do the chod 400 and then the",
    "start": "1023079",
    "end": "1029520"
  },
  {
    "text": "name of your key file and there we go we've set up our key pair Security on the Internet is",
    "start": "1029520",
    "end": "1036480"
  },
  {
    "start": "1035000",
    "end": "1035000"
  },
  {
    "text": "always important to help ensure that your resources are secured ads automatically starts your resources",
    "start": "1036480",
    "end": "1042199"
  },
  {
    "text": "without any connection enabled from the internet much like an internet firewall security groups allow you to choose",
    "start": "1042199",
    "end": "1047678"
  },
  {
    "text": "which ports are open to which IP addresses on the internet you can specify a range of ports as well as a",
    "start": "1047679",
    "end": "1052840"
  },
  {
    "text": "range of addresses to give you full control over what ports are available and where the connections can come from",
    "start": "1052840",
    "end": "1058400"
  },
  {
    "text": "in this demonstration we'll create a new security group and open port 80 used for web traffic or HTTP traffic as well as",
    "start": "1058400",
    "end": "1065520"
  },
  {
    "text": "Port 443 which is used for secure web traffic or https traffic and then Port",
    "start": "1065520",
    "end": "1070600"
  },
  {
    "text": "22 for SSH access which is used in Linux for us to be able to access the command shell and port",
    "start": "1070600",
    "end": "1077400"
  },
  {
    "text": "3389 which is used for remote desktop protocol or RDP when connecting to windows-based instances in this example",
    "start": "1077400",
    "end": "1083880"
  },
  {
    "text": "we'll be opening each of these to any internet connection though for your own work you may want to limit your RDP and",
    "start": "1083880",
    "end": "1089919"
  },
  {
    "text": "SSH connections to just your personal IP address this section is very important as one of the most common problems users",
    "start": "1089919",
    "end": "1096000"
  },
  {
    "text": "sometimes face is not having the right ports open or not having the right IP addresses allowed through those ports a",
    "start": "1096000",
    "end": "1101640"
  },
  {
    "text": "good example of this would be if you enabled only your own personal IP address to access your instance and then",
    "start": "1101640",
    "end": "1107880"
  },
  {
    "text": "your service provider or ISP dynamically gave you a new IP address or you went to a new location this is not untypical for",
    "start": "1107880",
    "end": "1114840"
  },
  {
    "text": "personal internet accounts or people who are working on laptops that move around from internet connection to other",
    "start": "1114840",
    "end": "1120360"
  },
  {
    "text": "internet connections now let's see how to create and configure a security group from the AWS Management console select",
    "start": "1120360",
    "end": "1128039"
  },
  {
    "text": "ec2 and then here we're going to check our location again we're still in Northern California we always want to make sure we're in the right region that",
    "start": "1128039",
    "end": "1135080"
  },
  {
    "text": "we want to access and click security groups from the left hand side notice here the default Security Group",
    "start": "1135080",
    "end": "1140480"
  },
  {
    "text": "is already there but we're going to create our own by clicking create Security Group give it a name like my",
    "start": "1140480",
    "end": "1145919"
  },
  {
    "text": "first SG and you can give it a description of anything that you like VPC underneath it has to do with virtual",
    "start": "1145919",
    "end": "1151480"
  },
  {
    "text": "private Cloud leave as a default for right now we won't get into that today so it's okay to leave it as default and",
    "start": "1151480",
    "end": "1156520"
  },
  {
    "text": "things will just work as you expect click yes create this creates our security group you can see it highlighted in blue at the top we're",
    "start": "1156520",
    "end": "1162360"
  },
  {
    "text": "going to expand the bottom section so we expand that out and here's where we set the inbound and outbound rules now I",
    "start": "1162360",
    "end": "1167919"
  },
  {
    "text": "mentioned things are secure by default so you notice there's no connections that are allowed in yet we're going to add one for SSH put that in there we'll",
    "start": "1167919",
    "end": "1175200"
  },
  {
    "text": "talk about sources in a second add the rule and you'll notice that changes haven't been applied yet you have to click apply rule changes and they'll",
    "start": "1175200",
    "end": "1181640"
  },
  {
    "text": "change from Blue to White over on the right hand side when those are applied go in and add one for htttp and then",
    "start": "1181640",
    "end": "1188520"
  },
  {
    "text": "we'll do the same we'll go in for https traffic that probably would go in and out of our server and then finally in",
    "start": "1188520",
    "end": "1195320"
  },
  {
    "text": "case you wanted a security group working for your windows folks you can choose RDP as well so we'll select RDP all the",
    "start": "1195320",
    "end": "1202120"
  },
  {
    "text": "add all those rules and then once we're done with that we can go and apply our rule",
    "start": "1202120",
    "end": "1207159"
  },
  {
    "text": "changes now I want to talk for a second about sources so for ease of this",
    "start": "1207159",
    "end": "1212400"
  },
  {
    "text": "demonstration I've chosen you know 0.0.0.0 Z so basically it's open to the",
    "start": "1212400",
    "end": "1217840"
  },
  {
    "text": "entire internet this is not a good security practice it's good for HTP and https because that's your web traffic",
    "start": "1217840",
    "end": "1224640"
  },
  {
    "text": "and you probably want to be available to all of your customers but for things like SS H or RDP which are typically used for administration you're going to",
    "start": "1224640",
    "end": "1231360"
  },
  {
    "text": "want to lock those down now you can use ranges with cider rules or even direct IP addresses here so whatever your",
    "start": "1231360",
    "end": "1237440"
  },
  {
    "text": "personal IP address is you could type that in here and that will mean that even if someone had your key or had your",
    "start": "1237440",
    "end": "1243159"
  },
  {
    "text": "password they still couldn't get in because you've actually locked the firewall so this is a very important security setting to do however for me to",
    "start": "1243159",
    "end": "1249559"
  },
  {
    "text": "do it here you would see an example that would just be my IP address so I'm doing zeros so it just makes it very easy for people to see but it's important that",
    "start": "1249559",
    "end": "1255880"
  },
  {
    "text": "you know that you're going to want to lock those things down and not leave them wide open that's not a good security practice it's just kind of a",
    "start": "1255880",
    "end": "1261159"
  },
  {
    "text": "getting started thing that I put here and with that we can go back to the",
    "start": "1261159",
    "end": "1266320"
  },
  {
    "text": "regular AWS console we've set up our first Security Group Amazon's elastic",
    "start": "1266320",
    "end": "1272279"
  },
  {
    "start": "1271000",
    "end": "1271000"
  },
  {
    "text": "compute Cloud also called ec2 gives you the computing power available on demand in the AWS Cloud the AWS instances which",
    "start": "1272279",
    "end": "1280000"
  },
  {
    "text": "are similar to Virtual machines give you the ability to run the operating system platform and tools that you want you get",
    "start": "1280000",
    "end": "1286120"
  },
  {
    "text": "full control of the resources and administrator or rout access to the instance you can choose the processing",
    "start": "1286120",
    "end": "1292039"
  },
  {
    "text": "power memory and hard disk space that you need there are even instance types that give you access to special Graphics",
    "start": "1292039",
    "end": "1298000"
  },
  {
    "text": "Hardware if you require it there are many different configurations you can choose from in this example we'll be creating a T1 micro Amazon Linux",
    "start": "1298000",
    "end": "1305039"
  },
  {
    "text": "instance we'll pick the hard drive space as well as the SSH key that we'll use for Access and the security group we",
    "start": "1305039",
    "end": "1310960"
  },
  {
    "text": "want applied for Access we will then start the instance and take note of the address of this instance on the internet",
    "start": "1310960",
    "end": "1316480"
  },
  {
    "text": "so we can connect to it later let's let's get started from the AWS Management console select",
    "start": "1316480",
    "end": "1323639"
  },
  {
    "text": "ec2 from the ec2 Management console again make sure we're still operating in our same region in this case we're using",
    "start": "1323760",
    "end": "1329720"
  },
  {
    "text": "Northern California from us West select instances on the left hand side you can see we have no instances running so",
    "start": "1329720",
    "end": "1335880"
  },
  {
    "text": "we'll click launch instance here you can see all the different virtual machines that you could choose from we want to",
    "start": "1335880",
    "end": "1341200"
  },
  {
    "text": "stay within the free tier so we'll click the free tier box and we're going to choose Amazon Linux you could take a",
    "start": "1341200",
    "end": "1346440"
  },
  {
    "text": "look at your other Amis you have ones available in the marketplace or Community we'll just start with something simple Amazon Linux version",
    "start": "1346440",
    "end": "1352760"
  },
  {
    "text": "we'll leave it a 64-bit and click select now on this next screen you can",
    "start": "1352760",
    "end": "1358240"
  },
  {
    "text": "see what kind of instance you're going to launch and indeed how what size the machine is we're using the free tier one",
    "start": "1358240",
    "end": "1363600"
  },
  {
    "text": "so it's a micro but you can see there's many other options if you need more memory more compute just a larger box in",
    "start": "1363600",
    "end": "1369520"
  },
  {
    "text": "general we'll stick with the micro instance from here we could just review and launch but I want to show you how to",
    "start": "1369520",
    "end": "1374840"
  },
  {
    "text": "step through the whole process and so we're going to step through the next processes when we launch our next instance later on we'll just click on",
    "start": "1374840",
    "end": "1380679"
  },
  {
    "text": "this to kind of skip through it but here we'll choose next configuration instance",
    "start": "1380679",
    "end": "1386559"
  },
  {
    "text": "details here you see lots of things you can set you can choose the number of machines you want to launch in this case one instance don't worry about spot",
    "start": "1386559",
    "end": "1393080"
  },
  {
    "text": "instances it's a different way to pay uh for things it's a spot kind of an open market same thing I mentioned the vpcs",
    "start": "1393080",
    "end": "1399000"
  },
  {
    "text": "before just ignore that for right now you're going to start in your own addressing space and don't need to worry about the subnetting for that because of",
    "start": "1399000",
    "end": "1405279"
  },
  {
    "text": "it there'll be a public IP that's applied don't worry about IM rules or shutdown Behavior again these are things",
    "start": "1405279",
    "end": "1410960"
  },
  {
    "text": "you can get into later but they're permissions based things um same thing with cloudwatch we'll do that later so",
    "start": "1410960",
    "end": "1416679"
  },
  {
    "text": "just move to the next one add storage you can see we start with 8 gbt of standard storage uh for this instance",
    "start": "1416679",
    "end": "1422400"
  },
  {
    "text": "size you can go up to 30 in the free tier you can also choose provision ey Ops if you want that allows you to select a specified number of ey Ops that",
    "start": "1422400",
    "end": "1429400"
  },
  {
    "text": "you get um and have that be consistent that's a paid four options we'll leave it with standard move on next and we'll",
    "start": "1429400",
    "end": "1434559"
  },
  {
    "text": "give this a name like uh my first instance for this you can add up to 10 tags here so this is the name tag we're",
    "start": "1434559",
    "end": "1440320"
  },
  {
    "text": "just adding that click next here you're going to see you could set up a security group here like we did before but I",
    "start": "1440320",
    "end": "1445960"
  },
  {
    "text": "wanted to show you where you could create your own so we'll select the existing one we already created go ahead and tick the one next to my first SG and",
    "start": "1445960",
    "end": "1453240"
  },
  {
    "text": "click review and launch here's where you can review um all the information that you just selected you'll notice the",
    "start": "1453240",
    "end": "1458760"
  },
  {
    "text": "warning at the top because we had that security group that was open to the entire internet and I mentioned that's a bad security practice so there's a",
    "start": "1458760",
    "end": "1464520"
  },
  {
    "text": "warning here that lets you know that you're doing that you can see it's a T1 micro since we talked about the naming",
    "start": "1464520",
    "end": "1469840"
  },
  {
    "text": "for that which Security Group and click launch now here's where you select your key pair so go ahead and select the key",
    "start": "1469840",
    "end": "1475520"
  },
  {
    "text": "that you created earlier and tick the box that acknowledges that yes you know that you have that key pair remember if",
    "start": "1475520",
    "end": "1481000"
  },
  {
    "text": "you lose that key that private key there's no way for you to get it back again click launch instance and your instance is on its way to launching so",
    "start": "1481000",
    "end": "1487960"
  },
  {
    "text": "let's take a look at viewing our instances and you can see that that instance the my first instance is starting up right now so wait a little",
    "start": "1487960",
    "end": "1494240"
  },
  {
    "text": "while and that will spin up and start once that's done loading it take can take a little bit it depends for that to",
    "start": "1494240",
    "end": "1500760"
  },
  {
    "text": "be running but when you do that then select the instance here and we'll go look at the properties of it at the",
    "start": "1500760",
    "end": "1506799"
  },
  {
    "text": "bottom you notice this public DNS part I'll highlight it here this is going to be important for us to connect to it",
    "start": "1506799",
    "end": "1512720"
  },
  {
    "text": "later on so just make a note of that it'll be here later if you want to look at it but I just wanted to call it out in specific um you can also see that it",
    "start": "1512720",
    "end": "1519320"
  },
  {
    "text": "passed status checks you'll notice that it starts running and then it goes through to status checks we'll go back to the main ads console and we've",
    "start": "1519320",
    "end": "1525240"
  },
  {
    "text": "launched our first instance previously we created an elastic compute cloud or ec2 instance Amazon web services",
    "start": "1525240",
    "end": "1531840"
  },
  {
    "start": "1527000",
    "end": "1527000"
  },
  {
    "text": "provides the flexibility to run the software you want using the tools you are most familiar with this means you can connect to a Linux instance using",
    "start": "1531840",
    "end": "1538200"
  },
  {
    "text": "any terminal program that supports SSH there's a Java based terminal that can be used by anyone who has a browser that",
    "start": "1538200",
    "end": "1544320"
  },
  {
    "text": "supports Java this is what we'll be using in today's demonstration if you would prefer to use an application on",
    "start": "1544320",
    "end": "1549720"
  },
  {
    "text": "your personal machine you can use terminal on Mac's running OSX or putty",
    "start": "1549720",
    "end": "1554760"
  },
  {
    "text": "on a windows-based PC please note that there's some additional step steps to using putty under Windows as you need to",
    "start": "1554760",
    "end": "1560399"
  },
  {
    "text": "convert the PM SSH private key file to a PPK file if we had created a Windows",
    "start": "1560399",
    "end": "1565640"
  },
  {
    "text": "instance in AWS we could connect from remote desktop or Microsoft terminal Services client from a windows-based",
    "start": "1565640",
    "end": "1571760"
  },
  {
    "text": "machine or 2x from a Mac running OSX or a Linux machine as a reference I'll",
    "start": "1571760",
    "end": "1577480"
  },
  {
    "text": "cover how to do each of these to connect to a Linux instance from Mac OSX or a Linux PC just open a terminal window and",
    "start": "1577480",
    "end": "1584880"
  },
  {
    "start": "1579000",
    "end": "1579000"
  },
  {
    "text": "type s-i then the location of your private key that you downloaded this key usually",
    "start": "1584880",
    "end": "1590520"
  },
  {
    "text": "ends in pm and then ec2 D user which is",
    "start": "1590520",
    "end": "1595640"
  },
  {
    "text": "our username the at symbol and then the public DNS name of the instance we want to connect to we are logging in as ec2",
    "start": "1595640",
    "end": "1602520"
  },
  {
    "text": "user which has administrator or root permissions for security reasons we don't log in as the root user though",
    "start": "1602520",
    "end": "1608440"
  },
  {
    "text": "once you are into your instance you are free to change the root account and change access in any way that you wish",
    "start": "1608440",
    "end": "1614440"
  },
  {
    "text": "in general it's not recommended that you log in as the root user if you're using Windows and do not want to use the Java",
    "start": "1614440",
    "end": "1619919"
  },
  {
    "start": "1618000",
    "end": "1618000"
  },
  {
    "text": "based client in the AWS ec2 console you can use putty you can download Putty for",
    "start": "1619919",
    "end": "1625120"
  },
  {
    "text": "free from the link listed here you will need to convert your PM key file that you downloaded earlier to a PPK file you",
    "start": "1625120",
    "end": "1633159"
  },
  {
    "text": "can do this using putty genen which comes with putty you will then need to create a connection in putty there are a",
    "start": "1633159",
    "end": "1639039"
  },
  {
    "text": "number of steps in this process detailed screenshots of this process are available in the version of this",
    "start": "1639039",
    "end": "1644200"
  },
  {
    "text": "presentation that is posted on the internet in the AWS slide share location located at",
    "start": "1644200",
    "end": "1650240"
  },
  {
    "text": "www.slideshare.net amazonwebservices you may need to search for this particular presentation as many",
    "start": "1650240",
    "end": "1656919"
  },
  {
    "text": "of our presentations are posted there if you're connecting to a Windows instance from Windows PC you can use Remote",
    "start": "1656919",
    "end": "1662799"
  },
  {
    "start": "1659000",
    "end": "1659000"
  },
  {
    "text": "Desktop to make your remote desktop connection press the Windows key and the r key at the same time you can also",
    "start": "1662799",
    "end": "1668200"
  },
  {
    "text": "press the start menu and select the Run option for the menu if you're using Windows XP through Windows 7 in The Run",
    "start": "1668200",
    "end": "1674679"
  },
  {
    "text": "box that appears type mstsc /v colon and then the public DNS name of the ec2",
    "start": "1674679",
    "end": "1681399"
  },
  {
    "text": "instance from the details section of the AWS ec2 Management console you will see a window appear asking for your username",
    "start": "1681399",
    "end": "1687440"
  },
  {
    "text": "and password use the username and password you were given when creating your AWS instance to connect to your",
    "start": "1687440",
    "end": "1692519"
  },
  {
    "text": "windows ec2 instance in this example we'll be connecting to the Linux ec2 instance that we created earlier let's",
    "start": "1692519",
    "end": "1699200"
  },
  {
    "text": "get started from the AWS Management console choose ec2 to go to the ec2 Management",
    "start": "1699200",
    "end": "1705519"
  },
  {
    "text": "console from here make sure you're in the right region we're still in Northern California and select",
    "start": "1705519",
    "end": "1711480"
  },
  {
    "text": "instances here we can see our instance so we select the instance we want to connect to and then that public DNS",
    "start": "1711480",
    "end": "1717120"
  },
  {
    "text": "address that I mentioned before I'm going to grab this and copy it because I'm going to show you how to connect through terminal and then we'll do the Java client I open up my terminal",
    "start": "1717120",
    "end": "1723600"
  },
  {
    "text": "program here and I'm in terminal so I'm just going to do s-i now I'm going to give the directory",
    "start": "1723600",
    "end": "1731039"
  },
  {
    "text": "where I located my key at remember I put it in my downloads directory so that and then my pem file so my first",
    "start": "1731039",
    "end": "1738360"
  },
  {
    "text": "keypm and then our username so ec2 user at and here I'm going to paste in that",
    "start": "1738360",
    "end": "1743559"
  },
  {
    "text": "public DNS address so I do that and I connect and you may see a couple of warnings that come up that's okay I'm",
    "start": "1743559",
    "end": "1749039"
  },
  {
    "text": "also listing to show you there's nothing in the directory now and I'm going to open up V Vim it's a text editor if you're not familiar with it and I'm just",
    "start": "1749039",
    "end": "1755120"
  },
  {
    "text": "going to create a new file you'll see why in a second so here I'm just going to create a file I'll say hello Cloud",
    "start": "1755120",
    "end": "1761200"
  },
  {
    "text": "our first server in the cloud and then I just go in I hit Escape colon and WQ and",
    "start": "1761200",
    "end": "1766600"
  },
  {
    "text": "that writes it to the file so you can now see that it's there so we've gone and created that I'll close that out use",
    "start": "1766600",
    "end": "1772039"
  },
  {
    "text": "contr D and then close the window now I want to show you how to connect through the Java client so I'll click connect",
    "start": "1772039",
    "end": "1778559"
  },
  {
    "text": "but if you're using Safari on Mavericks you need to go and change your security permissions so if you go into your security permissions and manage websites",
    "start": "1778559",
    "end": "1785039"
  },
  {
    "text": "make sure you select Java and then console. ads amazon.com and you need to choose run and unsafe mode because",
    "start": "1785039",
    "end": "1790640"
  },
  {
    "text": "otherwise the Java client is blocked from accessing your key so we go we select that and now we can connect",
    "start": "1790640",
    "end": "1797000"
  },
  {
    "text": "otherwise you'll get a connection eror after you go through this process say Java SSH and I'm going to",
    "start": "1797000",
    "end": "1802480"
  },
  {
    "text": "give the location where my pem file is again here you'll notice the username is already defaulted to the correct",
    "start": "1802480",
    "end": "1807960"
  },
  {
    "text": "username of ec2 user so users Adam downloads my first",
    "start": "1807960",
    "end": "1814399"
  },
  {
    "text": "key.pem and I made a couple mistakes my slashes here so I'm going to go back and change",
    "start": "1814399",
    "end": "1820080"
  },
  {
    "text": "them but we'll go and put this in for our private key and then we'll click the launch SSH client button here now I'm",
    "start": "1820080",
    "end": "1829000"
  },
  {
    "text": "running in full screen mode for the browser so because the way the Java client starts I'll flip back you'll see",
    "start": "1829000",
    "end": "1836080"
  },
  {
    "text": "in a second here that I'll I'll flip back and I'll have to come back in order to be able to get access to that window um if you weren't running in full screen",
    "start": "1836080",
    "end": "1841399"
  },
  {
    "text": "mode it would just show up on the window that you're seeing here but I wanted to make sure you could all see my full",
    "start": "1841399",
    "end": "1847919"
  },
  {
    "text": "screen so there we go we saw it popup takes a second for the jvm to start I accept the user license it needs to",
    "start": "1849000",
    "end": "1855840"
  },
  {
    "text": "create a couple of directories so I let it create those directories and it's from an unknown host which is okay I say yes and I'm connected in and this is a",
    "start": "1855840",
    "end": "1862799"
  },
  {
    "text": "terminal same thing you'll notice if I do a list of the directory here you can see that file that we",
    "start": "1862799",
    "end": "1868639"
  },
  {
    "text": "created you can see it's the same file so I'll close our connection",
    "start": "1868639",
    "end": "1875360"
  },
  {
    "text": "here and close out our connection from the ec2 console and from here go back to",
    "start": "1875360",
    "end": "1881880"
  },
  {
    "text": "the AWS Management console and that's how you connect your AWS instances cloudwatch is a service that",
    "start": "1881880",
    "end": "1888919"
  },
  {
    "start": "1886000",
    "end": "1886000"
  },
  {
    "text": "provides monitoring to your ec2 instances cloudwatch also allows you to take action on those monitors you can",
    "start": "1888919",
    "end": "1894639"
  },
  {
    "text": "use cloudwatch to notify you about the state of your instances as well as scale out or in your application you can use",
    "start": "1894639",
    "end": "1900840"
  },
  {
    "text": "metrics like dis iio per second or iops network throughput CPU utilization and",
    "start": "1900840",
    "end": "1906720"
  },
  {
    "text": "many others cloudwatch helps you define when you want the system to take certain actions on your application as well as",
    "start": "1906720",
    "end": "1913000"
  },
  {
    "text": "when you would like to be alerted in today's example we'll only be running one instance and so we'll be setting up",
    "start": "1913000",
    "end": "1918080"
  },
  {
    "text": "a cloudwatch alarm to email us if the CPU utilization of our application goes over 80% for over 5 minutes this way",
    "start": "1918080",
    "end": "1925639"
  },
  {
    "text": "we'll know if our system is reaching its limit and we may need to look at scaling up which we'll deal with in the next webinar in the series we could also use",
    "start": "1925639",
    "end": "1932320"
  },
  {
    "text": "this to set an alarm if your server becomes unresponsive so you would know if your application crashed or was not",
    "start": "1932320",
    "end": "1937600"
  },
  {
    "text": "available for your users let's go set up a cloudwatch alarm in this example we are going to create a cloud watch alarm",
    "start": "1937600",
    "end": "1943279"
  },
  {
    "text": "that will send us an email if the CPU utilization of our instance goes over 80% % for longer than 5 minutes this",
    "start": "1943279",
    "end": "1949080"
  },
  {
    "text": "will be useful to know if our service is under heavy load and we may need to increase our resources or look into a",
    "start": "1949080",
    "end": "1954639"
  },
  {
    "text": "product bug let's get started from the AWS Management console select Cloud watch here's where we can create a new",
    "start": "1954639",
    "end": "1961240"
  },
  {
    "text": "alarm so we'll select create alarm and for viewing we're going to choose ec2 metrics now there's a lot of metrics",
    "start": "1961240",
    "end": "1966760"
  },
  {
    "text": "here you can see our instance ID we only have one so it's easy and we're going to choose CPU utilization you can see a graph in the upper right of what it",
    "start": "1966760",
    "end": "1972799"
  },
  {
    "text": "might look like there's also things for like status failed check which would be interesting to see if it has failed click continue we're going to give this",
    "start": "1972799",
    "end": "1978760"
  },
  {
    "text": "a name I'll say high CPU greater than 80 and give it a description this is",
    "start": "1978760",
    "end": "1984360"
  },
  {
    "text": "where you can put add a plain text description of it I've got one that's in my cache here um and then we're going to",
    "start": "1984360",
    "end": "1990000"
  },
  {
    "text": "set the settings here here it's greater than or equal to 80% for 5 minutes click",
    "start": "1990000",
    "end": "1995279"
  },
  {
    "text": "continue and here we want an alarm to go off so we'll select action type we're going to send a notification and we're",
    "start": "1995279",
    "end": "2000720"
  },
  {
    "text": "going to create a new email topic I'll give it a topic here so very simple High",
    "start": "2000720",
    "end": "2005880"
  },
  {
    "text": "CPU 80 and then I'll give it an email address in this case uh my email here at",
    "start": "2005880",
    "end": "2011200"
  },
  {
    "text": "amazon.com click add action you can add multiple actions if you like and then click continue it's important for you to",
    "start": "2011200",
    "end": "2017159"
  },
  {
    "text": "know that when you're setting up cloudwatch alarms you can set a number of them for free but if you set the frequency to be very short if you want",
    "start": "2017159",
    "end": "2024760"
  },
  {
    "text": "frequent alarms or you set a lot of alarms and specialized alarms there are costs for those uh but the one that I",
    "start": "2024760",
    "end": "2030080"
  },
  {
    "text": "showed you today a CPU with a 5minute interval that one you can have as part of the free tier and so when you're",
    "start": "2030080",
    "end": "2035519"
  },
  {
    "text": "going and setting this up for testing use that it's also important to know that when you look at these there's two",
    "start": "2035519",
    "end": "2041559"
  },
  {
    "text": "ways that you can primarily use it when you're starting out so high CPU will let you know if your server is getting hammered or if there your code might",
    "start": "2041559",
    "end": "2048560"
  },
  {
    "text": "have a bug in it that's causing it to to run the processor a lot and that'll give you an alert about that before your site",
    "start": "2048560",
    "end": "2053760"
  },
  {
    "text": "is down the other one is that if there's a status check you can set up a status check basically it's a ping between the",
    "start": "2053760",
    "end": "2060720"
  },
  {
    "text": "service and your server to see if it's alive kind of like a heartbeat and you might want to set that one up just to",
    "start": "2060720",
    "end": "2066320"
  },
  {
    "text": "make sure that server is still responding to things so in either way you would get an email that would be",
    "start": "2066320",
    "end": "2072040"
  },
  {
    "text": "sent out to you along with that the email address that you specify will get an email saying that it's been added for",
    "start": "2072040",
    "end": "2078240"
  },
  {
    "text": "an alert if you haven't done it before once you've done it once it'll it'll remember that setting but for the first time it will send an email to that email",
    "start": "2078240",
    "end": "2084720"
  },
  {
    "text": "address you'll have to go open that email and click on it so if I went to my email box I'd see that email there I'd",
    "start": "2084720",
    "end": "2090280"
  },
  {
    "text": "click on it and then it says okay I can send these notifications but obviously that's set up to make sure that people",
    "start": "2090280",
    "end": "2095358"
  },
  {
    "text": "don't spam email accounts that aren't theirs once you've done that it gives you a chance to review what you have and",
    "start": "2095359",
    "end": "2100960"
  },
  {
    "text": "then click create alarm there you go you will have created your first Cloud watch alarm and then we go back to the ec2",
    "start": "2100960",
    "end": "2107240"
  },
  {
    "text": "Management",
    "start": "2107240",
    "end": "2109640"
  },
  {
    "text": "console from the AWS Management console select Cloud watch here's where we can",
    "start": "2113440",
    "end": "2118560"
  },
  {
    "start": "2115000",
    "end": "2115000"
  },
  {
    "text": "create a new alarm so we'll select create alarm and for viewing we're going to choose ec2 metrics now there's a lot",
    "start": "2118560",
    "end": "2124240"
  },
  {
    "text": "of metrics here you can see our instance ID we only have one so it's we're going to choose CPU utilization you can see a",
    "start": "2124240",
    "end": "2129520"
  },
  {
    "text": "graph in the upper right of what it might look like there's also things for like status failed check which would be interesting to see if it has failed",
    "start": "2129520",
    "end": "2135560"
  },
  {
    "text": "click continue we're going to give this a name I'll say high CPU greater than 80 and give it a description this is",
    "start": "2135560",
    "end": "2142280"
  },
  {
    "text": "where you can put out a plain text description of it I've got one that's in my cache here um and then we're going to",
    "start": "2142280",
    "end": "2147960"
  },
  {
    "text": "set the settings here here it's greater than or equal to 80% for 5 minutes click",
    "start": "2147960",
    "end": "2153240"
  },
  {
    "text": "continue now here we want an alarm to go off so we'll select action type we're going to send a notification and we're",
    "start": "2153240",
    "end": "2158680"
  },
  {
    "text": "going to create a new email topic I'll give it a topic here so very simple High",
    "start": "2158680",
    "end": "2163800"
  },
  {
    "text": "CPU 80 and then I'll give it an email address in this case uh my email here at",
    "start": "2163800",
    "end": "2169119"
  },
  {
    "text": "amazon.com click add action you can add multiple actions if you like and then click continue it's important for you to",
    "start": "2169119",
    "end": "2175079"
  },
  {
    "text": "know that when you're setting up cloudwatch alarms you can set a number of them for free but if you set the frequency to be very short if you want",
    "start": "2175079",
    "end": "2182680"
  },
  {
    "text": "frequent alarms or you set a lot of alarms and specialized alarms there are costs for those uh but the one I showed",
    "start": "2182680",
    "end": "2188160"
  },
  {
    "text": "you today a CPU with a 5minute interval that one you can have as part of the free tier and so when you're going and",
    "start": "2188160",
    "end": "2193720"
  },
  {
    "text": "setting this up for testing use that it's also important to know that when you look at these there's two ways that",
    "start": "2193720",
    "end": "2199800"
  },
  {
    "text": "you can primarily use it when you're starting out so high CPU will let you know if your server is getting hammered or if there your code might have a bug",
    "start": "2199800",
    "end": "2206839"
  },
  {
    "text": "in it that's causing it to to run the processor a lot and that'll give you an alert about that before your site is down the other one is that if there's a",
    "start": "2206839",
    "end": "2214480"
  },
  {
    "text": "status check you can set up a status check basically it's a ping between the service and your server to see if it's",
    "start": "2214480",
    "end": "2220520"
  },
  {
    "text": "alive kind of like a heartbeat and you might want to set that one up just to make sure that your server is still",
    "start": "2220520",
    "end": "2226960"
  },
  {
    "text": "responding to things so in either way you would get an email that would be sent out to you along with that the",
    "start": "2226960",
    "end": "2232359"
  },
  {
    "text": "email address that you specify will get an email saying that it's been added for an alert if you haven't done it before",
    "start": "2232359",
    "end": "2237720"
  },
  {
    "text": "once you've done it once it'll it'll remember that setting but for the first time it will send an email to that email address you'll have to go open that",
    "start": "2237720",
    "end": "2244000"
  },
  {
    "text": "email and click on it so if I went to my email box I'd see that email there I'd click on it and then it says okay I can",
    "start": "2244000",
    "end": "2249920"
  },
  {
    "text": "send these notifications but obviously that's set up to make sure that people don't spam email accounts that aren't",
    "start": "2249920",
    "end": "2255400"
  },
  {
    "text": "theirs once you've done that it gives you a chance to review what you have and then click create alarm there you go you",
    "start": "2255400",
    "end": "2260960"
  },
  {
    "text": "will have created your first cloudwatch alarm and then we go back to the ec2 Management console in this demonstration",
    "start": "2260960",
    "end": "2266920"
  },
  {
    "text": "we're going to take a look at the ec2 hard drive we call it an EBS volume and create a backup of that volume we'll",
    "start": "2266920",
    "end": "2272800"
  },
  {
    "text": "call it a snapshot this will be helpful in case something bad happens to our instance and we need to bring back a saved snapshot of our ec2 instance let's",
    "start": "2272800",
    "end": "2280280"
  },
  {
    "text": "get started from the Management console select ec2 go in here make sure as always to",
    "start": "2280280",
    "end": "2286240"
  },
  {
    "text": "check our region and then click instances select the instance that we're interested in and uh you can see this is",
    "start": "2286240",
    "end": "2292920"
  },
  {
    "text": "my first instance obviously we only have one at this point and then go take a look at your volumes now if you take a",
    "start": "2292920",
    "end": "2298800"
  },
  {
    "text": "look at your volumes again there's only one so it's easy but when you have multiple machines may be a little more challenging and notice here in the",
    "start": "2298800",
    "end": "2305000"
  },
  {
    "text": "attachment information you can see that it's attached to my first instance you also have a volume ID so that's what we",
    "start": "2305000",
    "end": "2310560"
  },
  {
    "text": "want select actions and create snapshot snapshot's just a backup give it a name",
    "start": "2310560",
    "end": "2316000"
  },
  {
    "text": "how about my first snapshot and then give it any description that you like and once you're done with that just",
    "start": "2316000",
    "end": "2321760"
  },
  {
    "text": "click yes create now it's starting to create that in order to see it you need to go over to snapshot so on the left",
    "start": "2321760",
    "end": "2327640"
  },
  {
    "text": "hand side we'll select snapshots and you can see that my for snapshot is being created it says pending when it's done",
    "start": "2327640",
    "end": "2333280"
  },
  {
    "text": "it'll be green say complet it like that and that's how you create a snap snapshot I do want to take a second and",
    "start": "2333280",
    "end": "2338400"
  },
  {
    "text": "talk about snapshots because there are some important things to know about them one when you're using EBS volumes it's",
    "start": "2338400",
    "end": "2343599"
  },
  {
    "text": "usually a good idea to make sure that you have separate volumes for data versus operating system pieces in this case on a micro instance with one drive",
    "start": "2343599",
    "end": "2351040"
  },
  {
    "text": "you'll be fine but just when you think about building larger applications remember to keep your data volume separate because you're taking a backup",
    "start": "2351040",
    "end": "2357720"
  },
  {
    "text": "of not the operating system itself but just the data pieces of it it's also good to know that if you take multiple",
    "start": "2357720",
    "end": "2362760"
  },
  {
    "text": "snapshots from a particular volume it'll be a differential backup and what that means is it doesn't need to take an",
    "start": "2362760",
    "end": "2368280"
  },
  {
    "text": "image of everything there but simply everything that has changed from the last time you took a snapshot so this time it'll take everything that we've",
    "start": "2368280",
    "end": "2374680"
  },
  {
    "text": "done in this case that one text file that we created and then every change we make after that will only be the differences between the two that helps",
    "start": "2374680",
    "end": "2380839"
  },
  {
    "text": "save you some some space obviously because these snapshots that you take they're stored in your S3 bucket you",
    "start": "2380839",
    "end": "2386440"
  },
  {
    "text": "can't see it there but that's actually where it's stored so that you're aware of that and now we'll go back to the Management",
    "start": "2386440",
    "end": "2393680"
  },
  {
    "text": "console ec2 instances use Amazon machine images or Amis to boot from you can",
    "start": "2395400",
    "end": "2401000"
  },
  {
    "start": "2396000",
    "end": "2396000"
  },
  {
    "text": "choose from many public Amis for most popular operating systems or you can Define your own defining your own can be",
    "start": "2401000",
    "end": "2406880"
  },
  {
    "text": "useful because you can define a base image for your applications you can create as many of them as you want though the images are stored in Amazon",
    "start": "2406880",
    "end": "2413599"
  },
  {
    "text": "simple storage service or S3 for short the S3 copy of your image is private to your user though you can choose to share",
    "start": "2413599",
    "end": "2419520"
  },
  {
    "text": "it publicly if you wish many AWS Partners also make Amis available for their software to make starting up their",
    "start": "2419520",
    "end": "2425680"
  },
  {
    "text": "software package easy and avoid installation processes in this demonstration we'll take the EBS snapshot we had taken previously and",
    "start": "2425680",
    "end": "2432720"
  },
  {
    "text": "convert that into an Ami then start a new instance with that Ami let's get started from the AWS Management console",
    "start": "2432720",
    "end": "2439079"
  },
  {
    "text": "choose ec2 here make sure we're in the right region again we're still in Northern",
    "start": "2439079",
    "end": "2444160"
  },
  {
    "text": "California for this example but any region would work select instances you can see there's the one instance running",
    "start": "2444160",
    "end": "2450359"
  },
  {
    "text": "is the one that we created previously we're going to select that and take a look at one of its properties now when",
    "start": "2450359",
    "end": "2456079"
  },
  {
    "text": "we go down we'll expand this up and we're going to take a look at the kernel ID so it's important to make note of",
    "start": "2456079",
    "end": "2461400"
  },
  {
    "text": "this I always remember it's f77 ends in B2 now we'll go to our snapshots you can see our snapshot here",
    "start": "2461400",
    "end": "2468000"
  },
  {
    "text": "we're going to create an image don't create a volume that'd be like another hard dve create an image give it a name",
    "start": "2468000",
    "end": "2473240"
  },
  {
    "text": "whatever name you like is fine so you can give it a description",
    "start": "2473240",
    "end": "2478440"
  },
  {
    "text": "whatever description you like is fine remember these just help you find them later if you have multiples of them change the architecture we chose a 64-",
    "start": "2478440",
    "end": "2485240"
  },
  {
    "text": "bit so we have to choose 64bit otherwise we won't see the right kernel ID we find the kernel ID that matches and we put",
    "start": "2485240",
    "end": "2491400"
  },
  {
    "text": "that in here it's very important choose create and now the creation is happening it's pending so if we go take a look at",
    "start": "2491400",
    "end": "2498160"
  },
  {
    "text": "our Amis we can see there's now an Ami or Amazon machine image now we select that",
    "start": "2498160",
    "end": "2503960"
  },
  {
    "text": "one we can see the status is available so it's already ready for us and then we want to go and we want to launch an",
    "start": "2503960",
    "end": "2509520"
  },
  {
    "text": "instance from that so we're going to launch in this case we're going to stick with a T1 micro part of the free tier and I said before we won't go through",
    "start": "2509520",
    "end": "2515640"
  },
  {
    "text": "all the steps we're we're just going to do the review and launch the easy one this time we're going to stick with the",
    "start": "2515640",
    "end": "2520880"
  },
  {
    "text": "default Security Group and as you can see you know there's the warning about being opened all it's only opened uh SSH",
    "start": "2520880",
    "end": "2526440"
  },
  {
    "text": "or Port 22 in this one we'll choose launch we'll select our key it's easy again the one key that we have take the",
    "start": "2526440",
    "end": "2534000"
  },
  {
    "text": "acknowledge box and click launch instance it'll go and launch and if we look at our list of instances you'll see",
    "start": "2534000",
    "end": "2539839"
  },
  {
    "text": "there's now a second instance there's no name because we didn't give it a tag but it'll take it a second to start up and once it finishes starting up in the",
    "start": "2539839",
    "end": "2546599"
  },
  {
    "text": "example here we can go and take a look at it so you see we're going to have two",
    "start": "2546599",
    "end": "2551720"
  },
  {
    "text": "instances that are running so once it finishes initializing we'll select it so",
    "start": "2551720",
    "end": "2557119"
  },
  {
    "text": "that we can find out the information about it go up go up here I'll click on it and then we can see our public DNS",
    "start": "2557119",
    "end": "2565079"
  },
  {
    "text": "down at the bottom we go to highlight here for a second so if you want to connect through terminal or through putty you could grab that information in",
    "start": "2565079",
    "end": "2571720"
  },
  {
    "text": "this case I'll just use the built-in mind term the Java client that we used before",
    "start": "2571720",
    "end": "2578160"
  },
  {
    "text": "go up I'll click connect go in we'll select the Java client now you notice the username",
    "start": "2578359",
    "end": "2584200"
  },
  {
    "text": "changeed so we have to change it to the one in this case remember ec2 D user is a default username so it wasn't root",
    "start": "2584200",
    "end": "2590720"
  },
  {
    "text": "always make sure you fill that in and the path to our private key that we",
    "start": "2590720",
    "end": "2595960"
  },
  {
    "text": "downloaded go put that in still in my downloads directory my first key and click launch SSH",
    "start": "2595960",
    "end": "2605079"
  },
  {
    "text": "client so again we'll have to wait pop back and",
    "start": "2605079",
    "end": "2612040"
  },
  {
    "text": "forth to get it it's a new machine so it doesn't know the fingerprints we have to say yes we want that we'll look in the",
    "start": "2612040",
    "end": "2617280"
  },
  {
    "text": "machine and if we take a directory listing we can see yep there's the file we did as part of the backup there we go",
    "start": "2617280",
    "end": "2622720"
  },
  {
    "text": "so we'll close this all down and that's your creating a uh",
    "start": "2622720",
    "end": "2628319"
  },
  {
    "text": "restore of a backup creating a new machine from backup that you had in this case we're going to go and terminate that instance so it doesn't keep running",
    "start": "2628319",
    "end": "2633760"
  },
  {
    "text": "so you don't get build for running two machines say yes we're going to terminate we know we're terminating it and so it'll start shutting it down",
    "start": "2633760",
    "end": "2639240"
  },
  {
    "text": "it'll do that in the background so we can go back to the regular console and that's how you restore an image Amazon",
    "start": "2639240",
    "end": "2645720"
  },
  {
    "text": "simple storage service sometimes referred to as S3 is an easy way to store files on the internet Amazon S3 is",
    "start": "2645720",
    "end": "2652280"
  },
  {
    "text": "highly scalable so the files you post on S3 will be highly available as well as highly durable Amazon web services",
    "start": "2652280",
    "end": "2658960"
  },
  {
    "text": "stores multiple copies of your file in different geographically separated locations so your data is always",
    "start": "2658960",
    "end": "2664480"
  },
  {
    "text": "available to you or your customer when you need it to be you can store files that are any size from 1 by to 5 terab",
    "start": "2664480",
    "end": "2670920"
  },
  {
    "text": "in Amazon S3 S3 also provides 119 of durability that's",
    "start": "2670920",
    "end": "2677280"
  },
  {
    "text": "99.999999999% durability so you can have confidence that your files are always going to be there AWS provides",
    "start": "2678920",
    "end": "2685200"
  },
  {
    "text": "encryption of your files to protect against unauthorized access as well as in transit when they're being transferred in or out of the S3 folder",
    "start": "2685200",
    "end": "2692480"
  },
  {
    "text": "we call them buckets all of your storage is separated by region so you can choose choose the geographic location where your data is stored and you have the",
    "start": "2692480",
    "end": "2698839"
  },
  {
    "text": "granular permissions control so you can control who can access each file in your bucket individually or as a group S3",
    "start": "2698839",
    "end": "2704880"
  },
  {
    "text": "also allows users to access your content via the apis and web-based requests web-based requests can also use the",
    "start": "2704880",
    "end": "2711359"
  },
  {
    "text": "built-in web server so S3 can serve up static websites like content images videos documents and even HTML",
    "start": "2711359",
    "end": "2718640"
  },
  {
    "text": "JavaScript and CSS files themselves in this demonstration we'll upload a new image file to an Amazon S3 bucket we'll",
    "start": "2718640",
    "end": "2724920"
  },
  {
    "text": "then set the permissions on file so it'll be publicly available on the internet finally we'll access that image via web browser to prove that it's",
    "start": "2724920",
    "end": "2731559"
  },
  {
    "text": "available over the Internet let's get started here we are at the Management console we'll click on",
    "start": "2731559",
    "end": "2736880"
  },
  {
    "text": "S3 here the first thing we'll do is create a new bucket we need to give it a unique name and that name needs to be",
    "start": "2736880",
    "end": "2742720"
  },
  {
    "text": "unique for all users across AWS in this example I'll choose my username demo",
    "start": "2742720",
    "end": "2748599"
  },
  {
    "text": "user first",
    "start": "2748599",
    "end": "2751559"
  },
  {
    "text": "bucket no one else has ever used that name so it's available I'll click on that and open",
    "start": "2754880",
    "end": "2760599"
  },
  {
    "text": "that bucket think of this as a directory where you can put files I'll click upload and choose a file to upload I",
    "start": "2760599",
    "end": "2767000"
  },
  {
    "text": "click add and I have an image file that I want to upload but this could be any kind of file that you like once I've",
    "start": "2767000",
    "end": "2773160"
  },
  {
    "text": "added all the files that I want click Start upload and the upload will begin you can see the status on the right hand",
    "start": "2773160",
    "end": "2779000"
  },
  {
    "text": "side everything's done uploading in this case let's select our file and then look",
    "start": "2779000",
    "end": "2784240"
  },
  {
    "text": "at the properties of it here you can see the URL where this file",
    "start": "2784240",
    "end": "2790680"
  },
  {
    "text": "would be available on the internet let's click on that to see what happens as you can see access is denied",
    "start": "2790680",
    "end": "2798280"
  },
  {
    "text": "because by default we don't make it available to the public let's change",
    "start": "2798280",
    "end": "2803960"
  },
  {
    "text": "that we're going to have our file selected and then we're going to go and choose permissions you can see that I",
    "start": "2803960",
    "end": "2809400"
  },
  {
    "text": "have access already to open it view it and to edit it we're going to add more permissions for the grantee it's who we",
    "start": "2809400",
    "end": "2816280"
  },
  {
    "text": "want to give permissions to in this case it will be everyone so we select everyone and then give them the rights",
    "start": "2816280",
    "end": "2821359"
  },
  {
    "text": "to open and download and view but not to edit we'll then save these",
    "start": "2821359",
    "end": "2828359"
  },
  {
    "text": "permissions now that we made that change let's click on the link again and see what",
    "start": "2830400",
    "end": "2835480"
  },
  {
    "text": "happens as you can see now it's available on the internet for anyone to be able to see in this example we used",
    "start": "2835480",
    "end": "2841359"
  },
  {
    "text": "an image file but if you wanted you could use HTML files JavaScript files or any their common static website files",
    "start": "2841359",
    "end": "2847640"
  },
  {
    "text": "this is a great way to have a static website as well as to store other files online for Access either by everyone or",
    "start": "2847640",
    "end": "2853440"
  },
  {
    "text": "by setting permissions for particular users in today's webinar we've seen how to sign up for Amazon web services",
    "start": "2853440",
    "end": "2859520"
  },
  {
    "start": "2856000",
    "end": "2856000"
  },
  {
    "text": "create an SSH key to connect to a Linux instance configure a security group to enable access to our instance we've",
    "start": "2859520",
    "end": "2865200"
  },
  {
    "text": "created an ec2 instance and connected to that instance we've set an alarm to notify us if our instance has high CPU",
    "start": "2865200",
    "end": "2871000"
  },
  {
    "text": "load we've also backed up an instance and done a restore of that backup and finally we put a file in S3 made it",
    "start": "2871000",
    "end": "2876160"
  },
  {
    "text": "available to the internet if you are interested in learning more you can sign up for more webinars at aws.amazon.com",
    "start": "2876160",
    "end": "2882520"
  },
  {
    "text": "about- AWS events thank you for your time today and watching this webinar I",
    "start": "2882520",
    "end": "2887920"
  },
  {
    "text": "hope it helps you in your exploration of using Amazon web services you can also follow Amazon web services on Twitter",
    "start": "2887920",
    "end": "2894000"
  },
  {
    "text": "we're at awscloud you can also join us in our forums at forums. aws.amazon.com",
    "start": "2894000",
    "end": "2899800"
  },
  {
    "text": "with that I'll I'll be glad to answer questions in the time we have remaining",
    "start": "2899800",
    "end": "2905640"
  }
]