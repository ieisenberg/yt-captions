[
  {
    "text": "[Music]",
    "start": "0",
    "end": "2159"
  },
  {
    "text": "in this video",
    "start": "2159",
    "end": "3280"
  },
  {
    "text": "we will see how to use aws proton as",
    "start": "3280",
    "end": "5839"
  },
  {
    "text": "application deployment service",
    "start": "5839",
    "end": "7359"
  },
  {
    "text": "for container and serverless application",
    "start": "7359",
    "end": "10639"
  },
  {
    "text": "today's development team are building",
    "start": "10639",
    "end": "12559"
  },
  {
    "text": "apps made of hundreds of individual",
    "start": "12559",
    "end": "14400"
  },
  {
    "text": "components or microservices",
    "start": "14400",
    "end": "16160"
  },
  {
    "text": "that running container or serverless",
    "start": "16160",
    "end": "18080"
  },
  {
    "text": "environment each of these services",
    "start": "18080",
    "end": "20000"
  },
  {
    "text": "is built to be independent and modular",
    "start": "20000",
    "end": "22160"
  },
  {
    "text": "so that it can be changed without",
    "start": "22160",
    "end": "23920"
  },
  {
    "text": "affecting the others",
    "start": "23920",
    "end": "25119"
  },
  {
    "text": "the business is able to divide its",
    "start": "25119",
    "end": "26720"
  },
  {
    "text": "development teams that work on a part of",
    "start": "26720",
    "end": "28800"
  },
  {
    "text": "the site",
    "start": "28800",
    "end": "29519"
  },
  {
    "text": "so that they can move faster with less",
    "start": "29519",
    "end": "31679"
  },
  {
    "text": "operational risk",
    "start": "31679",
    "end": "32719"
  },
  {
    "text": "it is important to realize however each",
    "start": "32719",
    "end": "35200"
  },
  {
    "text": "of those components has a lot of",
    "start": "35200",
    "end": "36719"
  },
  {
    "text": "complexity underneath",
    "start": "36719",
    "end": "38000"
  },
  {
    "text": "enterprise customer often organized into",
    "start": "38000",
    "end": "40160"
  },
  {
    "text": "development and platform teams",
    "start": "40160",
    "end": "41760"
  },
  {
    "text": "where the development or the services",
    "start": "41760",
    "end": "43760"
  },
  {
    "text": "team owns",
    "start": "43760",
    "end": "45039"
  },
  {
    "text": "application development and the platform",
    "start": "45039",
    "end": "46879"
  },
  {
    "text": "team maintains the infrastructure",
    "start": "46879",
    "end": "48800"
  },
  {
    "text": "the problem is that existing solutions",
    "start": "48800",
    "end": "51199"
  },
  {
    "text": "don't strike the right balance for",
    "start": "51199",
    "end": "52960"
  },
  {
    "text": "companies",
    "start": "52960",
    "end": "53760"
  },
  {
    "text": "with large development teams or fast",
    "start": "53760",
    "end": "56160"
  },
  {
    "text": "growing application portfolios",
    "start": "56160",
    "end": "58079"
  },
  {
    "text": "that are using modern container and",
    "start": "58079",
    "end": "59920"
  },
  {
    "text": "serverless architecture",
    "start": "59920",
    "end": "62559"
  },
  {
    "text": "on one hand developers work with",
    "start": "62559",
    "end": "64720"
  },
  {
    "text": "platform teams to define and create the",
    "start": "64720",
    "end": "66799"
  },
  {
    "text": "infrastructure configuration",
    "start": "66799",
    "end": "68400"
  },
  {
    "text": "and tie everything together for",
    "start": "68400",
    "end": "69840"
  },
  {
    "text": "deployment and every time the developers",
    "start": "69840",
    "end": "71760"
  },
  {
    "text": "want",
    "start": "71760",
    "end": "72000"
  },
  {
    "text": "to change something the cycle with the",
    "start": "72000",
    "end": "74000"
  },
  {
    "text": "platform team needs to repeat",
    "start": "74000",
    "end": "76000"
  },
  {
    "text": "so that they can maintain consistency",
    "start": "76000",
    "end": "78080"
  },
  {
    "text": "and control almost",
    "start": "78080",
    "end": "79200"
  },
  {
    "text": "all of the service on the other hand",
    "start": "79200",
    "end": "81200"
  },
  {
    "text": "platform team can define all the",
    "start": "81200",
    "end": "82720"
  },
  {
    "text": "environmental requirement",
    "start": "82720",
    "end": "84240"
  },
  {
    "text": "around running that code and offer a",
    "start": "84240",
    "end": "86560"
  },
  {
    "text": "package solution for the service team to",
    "start": "86560",
    "end": "88479"
  },
  {
    "text": "use",
    "start": "88479",
    "end": "90079"
  },
  {
    "text": "aws proton is the first fully managed",
    "start": "90079",
    "end": "92320"
  },
  {
    "text": "application deployment service for",
    "start": "92320",
    "end": "93840"
  },
  {
    "text": "container and serverless applications",
    "start": "93840",
    "end": "95680"
  },
  {
    "text": "and can be used to help strike a balance",
    "start": "95680",
    "end": "97920"
  },
  {
    "text": "between the needs of the operator",
    "start": "97920",
    "end": "99759"
  },
  {
    "text": "for control and the developers need for",
    "start": "99759",
    "end": "102240"
  },
  {
    "text": "flexibility",
    "start": "102240",
    "end": "103280"
  },
  {
    "text": "we will see how a platform team can",
    "start": "103280",
    "end": "105600"
  },
  {
    "text": "create an environment that is used by",
    "start": "105600",
    "end": "107520"
  },
  {
    "text": "the service team to develop",
    "start": "107520",
    "end": "108960"
  },
  {
    "text": "and deploy using ci cd integration for",
    "start": "108960",
    "end": "111439"
  },
  {
    "text": "an enterprise web application built with",
    "start": "111439",
    "end": "113520"
  },
  {
    "text": "dot net 5. the service team no longer",
    "start": "113520",
    "end": "115920"
  },
  {
    "text": "needs to learn",
    "start": "115920",
    "end": "116880"
  },
  {
    "text": "a new infrastructure as code language or",
    "start": "116880",
    "end": "119840"
  },
  {
    "text": "learn container orchestration",
    "start": "119840",
    "end": "121439"
  },
  {
    "text": "build pipelines or auto scaling logic",
    "start": "121439",
    "end": "124000"
  },
  {
    "text": "instead",
    "start": "124000",
    "end": "124640"
  },
  {
    "text": "they can focus on application",
    "start": "124640",
    "end": "126840"
  },
  {
    "text": "development",
    "start": "126840",
    "end": "128239"
  },
  {
    "text": "when developers use the aws proton self",
    "start": "128239",
    "end": "131360"
  },
  {
    "text": "service interface to select a service",
    "start": "131360",
    "end": "133680"
  },
  {
    "text": "template they are selecting a",
    "start": "133680",
    "end": "135360"
  },
  {
    "text": "standardized application stack",
    "start": "135360",
    "end": "137040"
  },
  {
    "text": "definition",
    "start": "137040",
    "end": "137840"
  },
  {
    "text": "for their code deployment proton",
    "start": "137840",
    "end": "139599"
  },
  {
    "text": "automatically provisions the resources",
    "start": "139599",
    "end": "141920"
  },
  {
    "text": "configure the cicd pipeline",
    "start": "141920",
    "end": "143680"
  },
  {
    "text": "and deploys the code into the defined",
    "start": "143680",
    "end": "145599"
  },
  {
    "text": "infrastructure the application we have",
    "start": "145599",
    "end": "147280"
  },
  {
    "text": "here is a cycle store application",
    "start": "147280",
    "end": "149200"
  },
  {
    "text": "this is an asp.net core application",
    "start": "149200",
    "end": "151200"
  },
  {
    "text": "displaying by categories and",
    "start": "151200",
    "end": "152480"
  },
  {
    "text": "subcategories",
    "start": "152480",
    "end": "153519"
  },
  {
    "text": "from amazon relational database service",
    "start": "153519",
    "end": "155760"
  },
  {
    "text": "for sql server using entity framework",
    "start": "155760",
    "end": "157840"
  },
  {
    "text": "core",
    "start": "157840",
    "end": "158160"
  },
  {
    "text": "we will use aws proton to create a",
    "start": "158160",
    "end": "160720"
  },
  {
    "text": "seamless handshake between the platform",
    "start": "160720",
    "end": "162959"
  },
  {
    "text": "team",
    "start": "162959",
    "end": "163280"
  },
  {
    "text": "and the service team the platform team",
    "start": "163280",
    "end": "165040"
  },
  {
    "text": "will create an environment template and",
    "start": "165040",
    "end": "166959"
  },
  {
    "text": "a service template the service team will",
    "start": "166959",
    "end": "168879"
  },
  {
    "text": "create an environment",
    "start": "168879",
    "end": "170000"
  },
  {
    "text": "and deploy the cycle store app by",
    "start": "170000",
    "end": "171840"
  },
  {
    "text": "creating a service we are also using aws",
    "start": "171840",
    "end": "174080"
  },
  {
    "text": "secret manager to store database",
    "start": "174080",
    "end": "175680"
  },
  {
    "text": "credential",
    "start": "175680",
    "end": "176480"
  },
  {
    "text": "these are obtained by the application",
    "start": "176480",
    "end": "177920"
  },
  {
    "text": "code at the runtime",
    "start": "177920",
    "end": "179920"
  },
  {
    "text": "for this demo i have already created a",
    "start": "179920",
    "end": "181840"
  },
  {
    "text": "microsoft sql server rds instance",
    "start": "181840",
    "end": "184000"
  },
  {
    "text": "you can also create the rds instance by",
    "start": "184000",
    "end": "186159"
  },
  {
    "text": "downloading the amazon cloud formation",
    "start": "186159",
    "end": "187840"
  },
  {
    "text": "template from the github repo",
    "start": "187840",
    "end": "189599"
  },
  {
    "text": "and populate data by running the data",
    "start": "189599",
    "end": "191440"
  },
  {
    "text": "script for that you will also need an",
    "start": "191440",
    "end": "194000"
  },
  {
    "text": "aws account if you do not have one you",
    "start": "194000",
    "end": "196239"
  },
  {
    "text": "can sign up using the link below",
    "start": "196239",
    "end": "198000"
  },
  {
    "text": "the application's code structure follows",
    "start": "198000",
    "end": "200000"
  },
  {
    "text": "typical best practices for an asp.net",
    "start": "200000",
    "end": "202560"
  },
  {
    "text": "core",
    "start": "202560",
    "end": "202959"
  },
  {
    "text": "mvc web application all the static",
    "start": "202959",
    "end": "205040"
  },
  {
    "text": "contents like css",
    "start": "205040",
    "end": "206959"
  },
  {
    "text": "images are located in www root folder",
    "start": "206959",
    "end": "210319"
  },
  {
    "text": "models generated by entity framework",
    "start": "210319",
    "end": "212400"
  },
  {
    "text": "core from the cycle store database",
    "start": "212400",
    "end": "214480"
  },
  {
    "text": "are available under models folder",
    "start": "214480",
    "end": "216799"
  },
  {
    "text": "service interfaces",
    "start": "216799",
    "end": "218400"
  },
  {
    "text": "and their implementation are in the",
    "start": "218400",
    "end": "220560"
  },
  {
    "text": "service folder",
    "start": "220560",
    "end": "221440"
  },
  {
    "text": "these interfaces holds the blueprint of",
    "start": "221440",
    "end": "224080"
  },
  {
    "text": "the functions",
    "start": "224080",
    "end": "224879"
  },
  {
    "text": "to fetch data leveraging the entity",
    "start": "224879",
    "end": "227040"
  },
  {
    "text": "framework core",
    "start": "227040",
    "end": "227920"
  },
  {
    "text": "database context this service interface",
    "start": "227920",
    "end": "230239"
  },
  {
    "text": "has been injected in the asp.net core",
    "start": "230239",
    "end": "232560"
  },
  {
    "text": "middleware",
    "start": "232560",
    "end": "233439"
  },
  {
    "text": "by using standard dependency injection",
    "start": "233439",
    "end": "235680"
  },
  {
    "text": "the solution also consists of a docker",
    "start": "235680",
    "end": "237760"
  },
  {
    "text": "file to build a container image from the",
    "start": "237760",
    "end": "240000"
  },
  {
    "text": "application source code in order to run",
    "start": "240000",
    "end": "241840"
  },
  {
    "text": "this application on your local machine",
    "start": "241840",
    "end": "243920"
  },
  {
    "text": "please make sure the dot net 5 runtime",
    "start": "243920",
    "end": "246560"
  },
  {
    "text": "is installed on your development",
    "start": "246560",
    "end": "248239"
  },
  {
    "text": "workstation",
    "start": "248239",
    "end": "249120"
  },
  {
    "text": "now i will build and run this",
    "start": "249120",
    "end": "250640"
  },
  {
    "text": "application locally to make sure",
    "start": "250640",
    "end": "252959"
  },
  {
    "text": "everything is working as expected",
    "start": "252959",
    "end": "256958"
  },
  {
    "text": "for this demo i have already created a",
    "start": "262639",
    "end": "264720"
  },
  {
    "text": "private amazon elastic container",
    "start": "264720",
    "end": "266560"
  },
  {
    "text": "registry",
    "start": "266560",
    "end": "267280"
  },
  {
    "text": "name cycle store repo and push the",
    "start": "267280",
    "end": "269280"
  },
  {
    "text": "container image to the repository we",
    "start": "269280",
    "end": "271360"
  },
  {
    "text": "will be using this later to mimic the",
    "start": "271360",
    "end": "273360"
  },
  {
    "text": "real world scenario",
    "start": "273360",
    "end": "274479"
  },
  {
    "text": "i will be using the aws cli to provision",
    "start": "274479",
    "end": "277440"
  },
  {
    "text": "the environment",
    "start": "277440",
    "end": "278320"
  },
  {
    "text": "and the service template for the service",
    "start": "278320",
    "end": "280240"
  },
  {
    "text": "team and i will be using aws console to",
    "start": "280240",
    "end": "282880"
  },
  {
    "text": "run the service",
    "start": "282880",
    "end": "283759"
  },
  {
    "text": "to provision environment and service",
    "start": "283759",
    "end": "285600"
  },
  {
    "text": "template we will be using pillow",
    "start": "285600",
    "end": "287440"
  },
  {
    "text": "repository",
    "start": "287440",
    "end": "288240"
  },
  {
    "text": "which is a curated list of sample",
    "start": "288240",
    "end": "290240"
  },
  {
    "text": "templates to use with aws proton to use",
    "start": "290240",
    "end": "293120"
  },
  {
    "text": "this repository browse to the folder",
    "start": "293120",
    "end": "295440"
  },
  {
    "text": "that corresponds to the template that",
    "start": "295440",
    "end": "297440"
  },
  {
    "text": "you want to use",
    "start": "297440",
    "end": "298479"
  },
  {
    "text": "you will find there all the information",
    "start": "298479",
    "end": "300400"
  },
  {
    "text": "you need to create environment",
    "start": "300400",
    "end": "301840"
  },
  {
    "text": "and service templates and to deploy",
    "start": "301840",
    "end": "303840"
  },
  {
    "text": "corresponding environments",
    "start": "303840",
    "end": "305199"
  },
  {
    "text": "and services i have cloned the",
    "start": "305199",
    "end": "306720"
  },
  {
    "text": "repository from github repo",
    "start": "306720",
    "end": "308560"
  },
  {
    "text": "on my local machine already and on top i",
    "start": "308560",
    "end": "311280"
  },
  {
    "text": "have already ran a command to copy my",
    "start": "311280",
    "end": "313199"
  },
  {
    "text": "aws account number to a variable name",
    "start": "313199",
    "end": "315360"
  },
  {
    "text": "account id so that i can use it",
    "start": "315360",
    "end": "317280"
  },
  {
    "text": "throughout this demo",
    "start": "317280",
    "end": "318320"
  },
  {
    "text": "as aws proton is still in preview i have",
    "start": "318320",
    "end": "321280"
  },
  {
    "text": "manually configured the aws cli to add",
    "start": "321280",
    "end": "323840"
  },
  {
    "text": "commands for proton you will not have to",
    "start": "323840",
    "end": "326080"
  },
  {
    "text": "perform these steps when proton will be",
    "start": "326080",
    "end": "328160"
  },
  {
    "text": "generally available",
    "start": "328160",
    "end": "329280"
  },
  {
    "text": "please follow the steps mentioned in the",
    "start": "329280",
    "end": "331120"
  },
  {
    "text": "aws documentation",
    "start": "331120",
    "end": "332479"
  },
  {
    "text": "let's first create an amazon s3 bucket",
    "start": "332479",
    "end": "335199"
  },
  {
    "text": "to store our environment and service",
    "start": "335199",
    "end": "337120"
  },
  {
    "text": "template now i'll move to the directory",
    "start": "337120",
    "end": "339360"
  },
  {
    "text": "where i have cloned",
    "start": "339360",
    "end": "340400"
  },
  {
    "text": "templates from the github proton uses im",
    "start": "340400",
    "end": "343440"
  },
  {
    "text": "role to provision infrastructure",
    "start": "343440",
    "end": "345280"
  },
  {
    "text": "i will create a role named proton",
    "start": "345280",
    "end": "347600"
  },
  {
    "text": "service role from the sample role and",
    "start": "347600",
    "end": "349520"
  },
  {
    "text": "policy provided",
    "start": "349520",
    "end": "350880"
  },
  {
    "text": "only for the demo i will attach",
    "start": "350880",
    "end": "352800"
  },
  {
    "text": "administrator access policy to the role",
    "start": "352800",
    "end": "355120"
  },
  {
    "text": "in the production environment you will",
    "start": "355120",
    "end": "356800"
  },
  {
    "text": "need to follow the list privilege",
    "start": "356800",
    "end": "358400"
  },
  {
    "text": "principle",
    "start": "358400",
    "end": "360400"
  },
  {
    "text": "let's run below commands to do that",
    "start": "360400",
    "end": "366800"
  },
  {
    "text": "in the next step i'll create an",
    "start": "366800",
    "end": "368400"
  },
  {
    "text": "environment template an",
    "start": "368400",
    "end": "369919"
  },
  {
    "text": "environment template is a set of shared",
    "start": "369919",
    "end": "372400"
  },
  {
    "text": "resources and policies that apply to all",
    "start": "372400",
    "end": "374800"
  },
  {
    "text": "services deployed to it",
    "start": "374800",
    "end": "376800"
  },
  {
    "text": "now let's first define the template",
    "start": "376800",
    "end": "380560"
  },
  {
    "text": "now tag this template with major version",
    "start": "380560",
    "end": "384960"
  },
  {
    "text": "then we'll compress this and upload it",
    "start": "388160",
    "end": "390319"
  },
  {
    "text": "to our dedicated s3 bucket we created",
    "start": "390319",
    "end": "395840"
  },
  {
    "text": "now we need to let proton know that we",
    "start": "397039",
    "end": "399759"
  },
  {
    "text": "have a new version",
    "start": "399759",
    "end": "401120"
  },
  {
    "text": "of our environment template which is",
    "start": "401120",
    "end": "403360"
  },
  {
    "text": "available",
    "start": "403360",
    "end": "404160"
  },
  {
    "text": "and wait for it to complete registration",
    "start": "404160",
    "end": "409840"
  },
  {
    "text": "before i build and deploy the service",
    "start": "418080",
    "end": "420000"
  },
  {
    "text": "template let me show you",
    "start": "420000",
    "end": "421680"
  },
  {
    "text": "how i modified the service template to",
    "start": "421680",
    "end": "423599"
  },
  {
    "text": "satisfy our business need",
    "start": "423599",
    "end": "426000"
  },
  {
    "text": "our cycle store application retrieves",
    "start": "426000",
    "end": "428160"
  },
  {
    "text": "data from amazon rds sql server instance",
    "start": "428160",
    "end": "431039"
  },
  {
    "text": "so when the docker container will be",
    "start": "431039",
    "end": "432960"
  },
  {
    "text": "deployed in the amazon ecs cluster",
    "start": "432960",
    "end": "435199"
  },
  {
    "text": "the ecs task needs to have necessary",
    "start": "435199",
    "end": "437599"
  },
  {
    "text": "permission to connect to the amazon rds",
    "start": "437599",
    "end": "439759"
  },
  {
    "text": "service",
    "start": "439759",
    "end": "440319"
  },
  {
    "text": "as a platform provider you can do that",
    "start": "440319",
    "end": "442479"
  },
  {
    "text": "by changing",
    "start": "442479",
    "end": "443440"
  },
  {
    "text": "the amazon cloud formation template for",
    "start": "443440",
    "end": "445440"
  },
  {
    "text": "the service here i have assigned ecs",
    "start": "445440",
    "end": "448080"
  },
  {
    "text": "task full access proton role to",
    "start": "448080",
    "end": "450000"
  },
  {
    "text": "task execution role as well as task",
    "start": "450000",
    "end": "452000"
  },
  {
    "text": "growth in this way when the development",
    "start": "452000",
    "end": "453759"
  },
  {
    "text": "team",
    "start": "453759",
    "end": "454319"
  },
  {
    "text": "creates a service using this service",
    "start": "454319",
    "end": "456240"
  },
  {
    "text": "template these roles will be associated",
    "start": "456240",
    "end": "458240"
  },
  {
    "text": "with the task definition",
    "start": "458240",
    "end": "459440"
  },
  {
    "text": "publishing the service template follows",
    "start": "459440",
    "end": "461360"
  },
  {
    "text": "the same steps as we did to provision",
    "start": "461360",
    "end": "463680"
  },
  {
    "text": "the environment template",
    "start": "463680",
    "end": "464879"
  },
  {
    "text": "first i will compress and then upload it",
    "start": "464879",
    "end": "467199"
  },
  {
    "text": "to my s3 bucket",
    "start": "467199",
    "end": "468240"
  },
  {
    "text": "and publish the new version of the",
    "start": "468240",
    "end": "469759"
  },
  {
    "text": "template now let's run these commands",
    "start": "469759",
    "end": "471919"
  },
  {
    "text": "one after another",
    "start": "471919",
    "end": "479840"
  },
  {
    "text": "in a normal organizational setting you",
    "start": "480000",
    "end": "482560"
  },
  {
    "text": "will be incrementing the minor version",
    "start": "482560",
    "end": "484560"
  },
  {
    "text": "id",
    "start": "484560",
    "end": "484960"
  },
  {
    "text": "each time you make a change and once",
    "start": "484960",
    "end": "487199"
  },
  {
    "text": "everything looks good you will publish",
    "start": "487199",
    "end": "490840"
  },
  {
    "text": "it",
    "start": "490840",
    "end": "492080"
  },
  {
    "text": "i'll now be working as a service team",
    "start": "492080",
    "end": "494000"
  },
  {
    "text": "member and try to deploy my service",
    "start": "494000",
    "end": "495919"
  },
  {
    "text": "let's log back into the aws management",
    "start": "495919",
    "end": "498160"
  },
  {
    "text": "console and navigate to the aws proton",
    "start": "498160",
    "end": "500800"
  },
  {
    "text": "service landing page",
    "start": "500800",
    "end": "502000"
  },
  {
    "text": "first we need to set up a connection to",
    "start": "502000",
    "end": "505120"
  },
  {
    "text": "the source code repository containing",
    "start": "505120",
    "end": "506960"
  },
  {
    "text": "the application source",
    "start": "506960",
    "end": "508240"
  },
  {
    "text": "for that you can navigate from the",
    "start": "508240",
    "end": "510080"
  },
  {
    "text": "brutal landing page to set up a",
    "start": "510080",
    "end": "512080"
  },
  {
    "text": "connection",
    "start": "512080",
    "end": "512640"
  },
  {
    "text": "then set up your source code repository",
    "start": "512640",
    "end": "514640"
  },
  {
    "text": "connection here i have already connected",
    "start": "514640",
    "end": "516399"
  },
  {
    "text": "to my github repository we can see the",
    "start": "516399",
    "end": "518320"
  },
  {
    "text": "environment template we created above to",
    "start": "518320",
    "end": "520320"
  },
  {
    "text": "allow self-service infrastructure",
    "start": "520320",
    "end": "522000"
  },
  {
    "text": "provisioning we can also see the service",
    "start": "522000",
    "end": "523919"
  },
  {
    "text": "template we created to self-service",
    "start": "523919",
    "end": "525839"
  },
  {
    "text": "application provisioning and deployment",
    "start": "525839",
    "end": "527839"
  },
  {
    "text": "as a service team",
    "start": "527839",
    "end": "528880"
  },
  {
    "text": "we can now move to the environment",
    "start": "528880",
    "end": "530480"
  },
  {
    "text": "section to build our first application",
    "start": "530480",
    "end": "532560"
  },
  {
    "text": "environment",
    "start": "532560",
    "end": "533519"
  },
  {
    "text": "let's fill some basic information that",
    "start": "533519",
    "end": "535680"
  },
  {
    "text": "will help us",
    "start": "535680",
    "end": "536640"
  },
  {
    "text": "to distinguish this environment from",
    "start": "536640",
    "end": "538720"
  },
  {
    "text": "others in the account pick the service",
    "start": "538720",
    "end": "540640"
  },
  {
    "text": "rule that we have created earlier",
    "start": "540640",
    "end": "542320"
  },
  {
    "text": "and click next now we have the",
    "start": "542320",
    "end": "544000"
  },
  {
    "text": "opportunity to customize subnet sider",
    "start": "544000",
    "end": "546240"
  },
  {
    "text": "blocks",
    "start": "546240",
    "end": "546800"
  },
  {
    "text": "but we will keep default values for the",
    "start": "546800",
    "end": "548880"
  },
  {
    "text": "new vpc",
    "start": "548880",
    "end": "549839"
  },
  {
    "text": "and choose create this environment will",
    "start": "549839",
    "end": "551600"
  },
  {
    "text": "take few minutes to provision resources",
    "start": "551600",
    "end": "553600"
  },
  {
    "text": "once our environment is built we can now",
    "start": "553600",
    "end": "555760"
  },
  {
    "text": "provision our application we start by",
    "start": "555760",
    "end": "557760"
  },
  {
    "text": "choosing create service",
    "start": "557760",
    "end": "559200"
  },
  {
    "text": "and selecting our pre-created service",
    "start": "559200",
    "end": "561200"
  },
  {
    "text": "template we will name our service",
    "start": "561200",
    "end": "563200"
  },
  {
    "text": "as cycle store will also provide branch",
    "start": "563200",
    "end": "565839"
  },
  {
    "text": "name and the repository id from my",
    "start": "565839",
    "end": "568000"
  },
  {
    "text": "github repository",
    "start": "568000",
    "end": "569200"
  },
  {
    "text": "we'll add a load balance service",
    "start": "569200",
    "end": "570959"
  },
  {
    "text": "instance this defines exactly how our",
    "start": "570959",
    "end": "573279"
  },
  {
    "text": "service should be executed",
    "start": "573279",
    "end": "574959"
  },
  {
    "text": "this will use the template created by",
    "start": "574959",
    "end": "576800"
  },
  {
    "text": "the platform team to provision a load",
    "start": "576800",
    "end": "578640"
  },
  {
    "text": "balancer",
    "start": "578640",
    "end": "579360"
  },
  {
    "text": "target group ecs task definition cloud",
    "start": "579360",
    "end": "582320"
  },
  {
    "text": "watch log stream",
    "start": "582320",
    "end": "583279"
  },
  {
    "text": "target tracking auto scaling for our",
    "start": "583279",
    "end": "585279"
  },
  {
    "text": "application eca repository good commit",
    "start": "585279",
    "end": "587839"
  },
  {
    "text": "project and anything else defined by our",
    "start": "587839",
    "end": "590080"
  },
  {
    "text": "platform team",
    "start": "590080",
    "end": "590959"
  },
  {
    "text": "in the service template it will take",
    "start": "590959",
    "end": "592640"
  },
  {
    "text": "some time to provision the service",
    "start": "592640",
    "end": "594399"
  },
  {
    "text": "but at the end it will provide a load",
    "start": "594399",
    "end": "596480"
  },
  {
    "text": "balance service endpoint for my",
    "start": "596480",
    "end": "598000"
  },
  {
    "text": "application",
    "start": "598000",
    "end": "599040"
  },
  {
    "text": "that's it now every time you check in",
    "start": "599040",
    "end": "600959"
  },
  {
    "text": "your code it will run a docker build",
    "start": "600959",
    "end": "603040"
  },
  {
    "text": "and deploy the latest code to the ecs",
    "start": "603040",
    "end": "605040"
  },
  {
    "text": "cluster for example",
    "start": "605040",
    "end": "606399"
  },
  {
    "text": "if i change my header template to v2",
    "start": "606399",
    "end": "609040"
  },
  {
    "text": "this will trigger an cicd pipeline to",
    "start": "609040",
    "end": "611279"
  },
  {
    "text": "deploy the latest code to the ecs",
    "start": "611279",
    "end": "613279"
  },
  {
    "text": "cluster to demonstrate this",
    "start": "613279",
    "end": "614959"
  },
  {
    "text": "we will open the header file and perform",
    "start": "614959",
    "end": "617040"
  },
  {
    "text": "a small change",
    "start": "617040",
    "end": "618160"
  },
  {
    "text": "and push it to the git repository now",
    "start": "618160",
    "end": "620320"
  },
  {
    "text": "amazon code build will build the latest",
    "start": "620320",
    "end": "622240"
  },
  {
    "text": "code and deploy the code to the amazon",
    "start": "622240",
    "end": "624480"
  },
  {
    "text": "ecs cluster using the amazon code",
    "start": "624480",
    "end": "628560"
  },
  {
    "text": "pipeline",
    "start": "630839",
    "end": "633760"
  },
  {
    "text": "this concludes my demo thank you for",
    "start": "633760",
    "end": "635600"
  },
  {
    "text": "watching this and to summarize",
    "start": "635600",
    "end": "638000"
  },
  {
    "text": "with aws proton we want to make it as",
    "start": "638000",
    "end": "640560"
  },
  {
    "text": "easy as possible for you to give your",
    "start": "640560",
    "end": "642560"
  },
  {
    "text": "development team great templates",
    "start": "642560",
    "end": "644399"
  },
  {
    "text": "and so we have a growing library of open",
    "start": "644399",
    "end": "646560"
  },
  {
    "text": "source template that are well",
    "start": "646560",
    "end": "647920"
  },
  {
    "text": "architected and production ready aws",
    "start": "647920",
    "end": "650079"
  },
  {
    "text": "proton has a set of core features that",
    "start": "650079",
    "end": "652079"
  },
  {
    "text": "helps to strike the balance for operator",
    "start": "652079",
    "end": "654240"
  },
  {
    "text": "control with developer productivity",
    "start": "654240",
    "end": "656079"
  },
  {
    "text": "including a familiar self-service",
    "start": "656079",
    "end": "657920"
  },
  {
    "text": "developer interface centralized",
    "start": "657920",
    "end": "659600"
  },
  {
    "text": "management for operators",
    "start": "659600",
    "end": "661040"
  },
  {
    "text": "one click upgrades to new versions when",
    "start": "661040",
    "end": "663600"
  },
  {
    "text": "templates are updated",
    "start": "663600",
    "end": "664800"
  },
  {
    "text": "deep integration with ci cd pipeline and",
    "start": "664800",
    "end": "667040"
  },
  {
    "text": "of course it also supports third party",
    "start": "667040",
    "end": "668959"
  },
  {
    "text": "tools and integration",
    "start": "668959",
    "end": "675839"
  },
  {
    "text": "you",
    "start": "678640",
    "end": "680720"
  }
]