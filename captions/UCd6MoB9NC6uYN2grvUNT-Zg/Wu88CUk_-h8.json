[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "[Music]",
    "start": "700",
    "end": "6149"
  },
  {
    "text": "I'm going to speak today on building fault tolerant applications um some of that we're going",
    "start": "8120",
    "end": "14280"
  },
  {
    "text": "to spend a little time really starting off and talking through uh faults are",
    "start": "14280",
    "end": "19560"
  },
  {
    "start": "17000",
    "end": "17000"
  },
  {
    "text": "all the different kinds of ways you can break your stuff uh I have run into every different kind of uh physical",
    "start": "19560",
    "end": "25680"
  },
  {
    "text": "failure I've had buildings uh that have caught on fire for the infrastructure that we running for systems uh I",
    "start": "25680",
    "end": "31720"
  },
  {
    "text": "definitely had a dump truck back up into the power wire and disconnect power uh we had a friend of mine that was",
    "start": "31720",
    "end": "38120"
  },
  {
    "text": "building his system up that uh um accidentally poured a cup of coffee into the router uh every different kind of",
    "start": "38120",
    "end": "44360"
  },
  {
    "text": "physical failure that's possible and a whole bunch above that the networking that you've deployed the code that",
    "start": "44360",
    "end": "49600"
  },
  {
    "text": "you've deployed does Bill come on on Time the classic example is Fred got hit by the bus every one of the different",
    "start": "49600",
    "end": "56320"
  },
  {
    "text": "layers of your stack from the facilities that you run in all the way down to the people that run your infrastructure",
    "start": "56320",
    "end": "61640"
  },
  {
    "text": "every one of those things is a possible driver of fault we're going to talk today about fault tolerance how do we",
    "start": "61640",
    "end": "67360"
  },
  {
    "start": "65000",
    "end": "65000"
  },
  {
    "text": "build infrastructure that's designed to survive fault and and we're not talking",
    "start": "67360",
    "end": "72920"
  },
  {
    "text": "about an absolute thing here this is not a a binary ah I am fault tolerant and now my application won't fail and oh I'm",
    "start": "72920",
    "end": "79759"
  },
  {
    "text": "not fault tolerant and not I could fail anytime what we're talking about is degrees of risk mitigation each one of",
    "start": "79759",
    "end": "85119"
  },
  {
    "text": "those different possible causes of fault has a given likelihood that likelihood is a associated with a cost on the other",
    "start": "85119",
    "end": "92159"
  },
  {
    "text": "side of mitigation some mitigations are really easy to implement you add an extra semicolon someplace uh or you",
    "start": "92159",
    "end": "97920"
  },
  {
    "text": "ensure that you've clicked a button on our infrastructure uh those kinds of changes are the ones we want to walk you through so that you're doing the easy",
    "start": "97920",
    "end": "103799"
  },
  {
    "text": "things you can do the inexpensive things that you can do to increase fault tolerance and then beyond that as you",
    "start": "103799",
    "end": "109000"
  },
  {
    "text": "identify places where there's real risk for your business real risk for your applications for your customers data",
    "start": "109000",
    "end": "115280"
  },
  {
    "text": "we'll make it so that if it's worth value to your business that there's a way to build app applications that are",
    "start": "115280",
    "end": "120520"
  },
  {
    "text": "fault tolerant there too we also really strongly believe that fault tolerance is not typically something that can be done",
    "start": "120520",
    "end": "126880"
  },
  {
    "text": "with your fingers if someone has to run over someplace and poke something that's semi fault tolerant or human-based fault",
    "start": "126880",
    "end": "134560"
  },
  {
    "text": "tolerance we like automation we like systems that are doing this on their own we like systems that are programmed to",
    "start": "134560",
    "end": "139680"
  },
  {
    "text": "react faster than most of us can and we like it when you've tested this stuff so we'll go through some examples for",
    "start": "139680",
    "end": "144920"
  },
  {
    "text": "that the agenda for today I'm going to talk a little bit about Amazon web services approach to fault tolerant",
    "start": "144920",
    "end": "151800"
  },
  {
    "start": "145000",
    "end": "145000"
  },
  {
    "text": "application design U we'll talk about how that's a little different and how cloud has changed the way that companies",
    "start": "151800",
    "end": "157920"
  },
  {
    "text": "build and deploy these kinds of systems uh we'll talk about our building blocks what do Amazon built that you can use to",
    "start": "157920",
    "end": "164000"
  },
  {
    "text": "get to fault tolerant uh and then I'll have uh bulot from uh twia will come up and show how they've in specific built a",
    "start": "164000",
    "end": "171080"
  },
  {
    "text": "very very successful fault tolerant application uh for their uh for their phone and and text messaging system",
    "start": "171080",
    "end": "177040"
  },
  {
    "text": "that's really really a powerful application on us then we'll go through a couple of quick final design patterns I think it'll make a lot of sense and",
    "start": "177040",
    "end": "183319"
  },
  {
    "text": "make it a lot easier for you to build uh in a way that fits the best practice so",
    "start": "183319",
    "end": "189000"
  },
  {
    "start": "188000",
    "end": "188000"
  },
  {
    "text": "uh if you used to do this sort of old school fault tolerance why why build one when you can build two twice the price",
    "start": "189000",
    "end": "196080"
  },
  {
    "text": "right it's really the easy way to get around almost all of the bad choices you could possibly make buy the really",
    "start": "196080",
    "end": "201640"
  },
  {
    "text": "expensive one and then buy two of them that way if one breaks there is not an issue um we don't think that that works",
    "start": "201640",
    "end": "207720"
  },
  {
    "text": "and we think that cloud has proven that there approaches that make more sense and there and there are really sort of",
    "start": "207720",
    "end": "213680"
  },
  {
    "text": "the standard obvious places where that is but you've been talked through for a lot of I think the last couple of tracks",
    "start": "213680",
    "end": "220480"
  },
  {
    "text": "about what are the sort of obvious cloud computing benefits these benefits translate to fault tolerance so we'll",
    "start": "220480",
    "end": "227400"
  },
  {
    "text": "make it so that there isn't an upfront Capital expense for a highly available architecture we'll make it so that your",
    "start": "227400",
    "end": "232519"
  },
  {
    "text": "backups don't cost so much to run we'll make it so that your Disaster Recovery is really only something you pay the big bucks for when you need it we'll make it",
    "start": "232519",
    "end": "239239"
  },
  {
    "text": "so that delivering fault tolerant applications is easier is faster you can get that stuff to Market more quickly uh",
    "start": "239239",
    "end": "245560"
  },
  {
    "text": "one way that we've been trying to help people understand about it is is that the AWS Cloud allows you to overcast a",
    "start": "245560",
    "end": "251280"
  },
  {
    "start": "248000",
    "end": "248000"
  },
  {
    "text": "little bit you get this Shadow infrastructure that's there we've built a pile of machines we have a pile of",
    "start": "251280",
    "end": "257959"
  },
  {
    "text": "infrastructure ready for you to use but you don't have to pay for that capacity until you need it so you get this little sort of extra Shadow bit that's ready",
    "start": "257959",
    "end": "264800"
  },
  {
    "text": "just like you'd have to normally pay for that stuff up front uh but you you only pay for it with us when you're using it",
    "start": "264800",
    "end": "271199"
  },
  {
    "text": "we we know that there are really significant barriers to the difference between a disaster recovery approach",
    "start": "271199",
    "end": "277680"
  },
  {
    "text": "where someone is calling you and yelling at you about things being broken and you think there's a pretty clear way that",
    "start": "277680",
    "end": "282840"
  },
  {
    "text": "you can fix it and the new approach which is highly available where no one's called and there's no pagers and things",
    "start": "282840",
    "end": "288600"
  },
  {
    "text": "are just working even though there's been some kind of a physical or a structural device that's failed we know that there are big cost and complexity",
    "start": "288600",
    "end": "296280"
  },
  {
    "text": "and expertise challenges to this you've really got to be able to not only learn how to use all of these new parts um but",
    "start": "296280",
    "end": "303680"
  },
  {
    "text": "but but but do so in a scalable way so to sort of Step into the Amazon parts",
    "start": "303680",
    "end": "309280"
  },
  {
    "text": "for this uh We've really built in two different strategies uh you've heard you heard",
    "start": "309280",
    "end": "315400"
  },
  {
    "text": "talks uh from a couple of different folks wner even mentioned it uh during his keynote the the systems that we",
    "start": "315400",
    "end": "322800"
  },
  {
    "start": "318000",
    "end": "318000"
  },
  {
    "text": "deploy as Services Dynamo DB S3 simple DB uh each of the simple integration",
    "start": "322800",
    "end": "330120"
  },
  {
    "text": "Services SNS sqs sces simple workflow all of these pieces are delivered as",
    "start": "330120",
    "end": "335240"
  },
  {
    "text": "Services by us to you and that choice that design includes by default Amazon's",
    "start": "335240",
    "end": "342080"
  },
  {
    "text": "work on fault tolerance so if you need a q system that is Fault tolerant we we",
    "start": "342080",
    "end": "347240"
  },
  {
    "text": "built one of those we'll sell it to you a little tiny piece at a time uh that might be the easiest and quickest way to",
    "start": "347240",
    "end": "353240"
  },
  {
    "text": "get to a fault tolerant application that's there there are some applications here that we haven't already built and",
    "start": "353240",
    "end": "359039"
  },
  {
    "text": "sell to you as a service probably the number one candidate there being the application that you built we didn't build that for you sorry uh that's",
    "start": "359039",
    "end": "366039"
  },
  {
    "text": "something that you'd have to go work on we have built components application components like ec2 like EBS uh like RDS",
    "start": "366039",
    "end": "374000"
  },
  {
    "text": "databases where with the right configurations with the right deployment the right implementation you're able to",
    "start": "374000",
    "end": "380280"
  },
  {
    "text": "get to a fault tolerant architecture uh that that can be as as resilient as",
    "start": "380280",
    "end": "386599"
  },
  {
    "text": "redundant as the services we built or forget it you make them more redundant we have S3 today in a regional area I",
    "start": "386599",
    "end": "394360"
  },
  {
    "text": "have no problem if you want to make a copy of your data in every a in every region across the globe you've made a",
    "start": "394360",
    "end": "400000"
  },
  {
    "text": "lot more copies than we've made when we put it in S3 you win you get to put more nines down than we did so that stack of",
    "start": "400000",
    "end": "407160"
  },
  {
    "text": "infrastructure the componentry that's either a service from Amazon or a component that you can use to build your",
    "start": "407160",
    "end": "413919"
  },
  {
    "text": "own Services uh is the sort of split in our infrastructure and we'll spend most of the time talking about how to build",
    "start": "413919",
    "end": "421080"
  },
  {
    "text": "fault Tolerance on the ones that you have to make the choices on the right hand side left so we know that there are",
    "start": "421080",
    "end": "428080"
  },
  {
    "start": "426000",
    "end": "426000"
  },
  {
    "text": "opportunities for failure at every one of the layers in the stack from there's",
    "start": "428080",
    "end": "433160"
  },
  {
    "text": "a geographical disruption there's an earthquake there's a flood there's a tsunami there are problems uh up through",
    "start": "433160",
    "end": "439520"
  },
  {
    "text": "problems with individual facilities the networking the configuration of your systems the management of those",
    "start": "439520",
    "end": "445280"
  },
  {
    "text": "configurations the deployment of that management and configuration the actual resources themselves we've built fault",
    "start": "445280",
    "end": "451599"
  },
  {
    "text": "tolerant pieces at each of the layers of the stack so we have regions that are available around the globe we have",
    "start": "451599",
    "end": "457960"
  },
  {
    "text": "availability zones we have Route 53 for DNS and elastic IPS for addresses we",
    "start": "457960",
    "end": "463680"
  },
  {
    "text": "built cloud formation for programmatic management of deployments we built cloudwatch alarms and auto scaling to",
    "start": "463680",
    "end": "469360"
  },
  {
    "text": "allow you to manage the deployments of individual pieces of the infrastructure and then each of the building blocks the",
    "start": "469360",
    "end": "474440"
  },
  {
    "text": "Amazon machine images and ec2 instances those systems are all designed to be used in coordinated fashion to build a",
    "start": "474440",
    "end": "482400"
  },
  {
    "text": "an allog together fault tolerant stack so let's drill into each of those pieces we have eight regions available today",
    "start": "482400",
    "end": "489319"
  },
  {
    "start": "485000",
    "end": "485000"
  },
  {
    "text": "those regions are distributed intentionally around the globe they're not all right next to each other they're",
    "start": "489319",
    "end": "494599"
  },
  {
    "text": "there so that you can build those kinds of fault tolerant environments they also help with latency they also help with",
    "start": "494599",
    "end": "500560"
  },
  {
    "text": "compliance if you have issues with sort of specific country laws but we think that their the original intent the",
    "start": "500560",
    "end": "506159"
  },
  {
    "text": "original goal there certainly is to get to those uh those sort of broader and and and and and larger environments As",
    "start": "506159",
    "end": "513080"
  },
  {
    "text": "you move down the stack into the availability zones I think you've seen these kinds of topologies a bunch of",
    "start": "513080",
    "end": "518719"
  },
  {
    "start": "516000",
    "end": "516000"
  },
  {
    "text": "different times the real goal is to take the layers of your application and make them redundant across availability zones",
    "start": "518719",
    "end": "526080"
  },
  {
    "text": "part of the one optimization to do there is to minimize the cross talk between those zones we have a charge Associated",
    "start": "526080",
    "end": "532200"
  },
  {
    "text": "cost you a penny a gig if you want to move data Zone to Zone and part of that is not because it it's a gigantic",
    "start": "532200",
    "end": "537920"
  },
  {
    "text": "expense on our side part of it is is to encourage those kinds of isolated environments where you're Loosely",
    "start": "537920",
    "end": "542959"
  },
  {
    "text": "coupled where the left side of the stack isn't talking so often to the right side of the stack so that they really do fail",
    "start": "542959",
    "end": "549040"
  },
  {
    "text": "independently so if a whole AZ were to go the left side would keep running and everything would keep moving we've also",
    "start": "549040",
    "end": "555160"
  },
  {
    "text": "built tools that allow you to span Those Distant groups so the elastic load balancer allows you to distribute",
    "start": "555160",
    "end": "560959"
  },
  {
    "text": "traffic across the azs another building block that makes it very straightforward very tangible very easy that's all",
    "start": "560959",
    "end": "567399"
  },
  {
    "text": "programmatic it's all scriptable when you use an auto scaling group across azs the load balancers will handle that so",
    "start": "567399",
    "end": "573320"
  },
  {
    "text": "makes it makes it pretty approachable to do this level of work we also know a big",
    "start": "573320",
    "end": "578440"
  },
  {
    "text": "big driver of complexity in all this is Network so we built fault tolerant",
    "start": "578440",
    "end": "584120"
  },
  {
    "start": "581000",
    "end": "581000"
  },
  {
    "text": "Network design tools uh you know what's the difference between uh a 107 address and one of the 50 addresses in our Fleet",
    "start": "584120",
    "end": "591000"
  },
  {
    "text": "the 50 addresses are typically eips and eips can move around from instance to instance that's Loosely coupled and as a",
    "start": "591000",
    "end": "598079"
  },
  {
    "text": "result that's Vault tolerant can take an instance that's failed move its IP address from one machine to another",
    "start": "598079",
    "end": "603519"
  },
  {
    "text": "machine that is the simplest Poor Man's way to move traffic from one to the other that's the beginning sort of",
    "start": "603519",
    "end": "609760"
  },
  {
    "text": "ingredient of fault tolerance we already talked a little bit about elastic load balancing and one of the questions that",
    "start": "609760",
    "end": "615079"
  },
  {
    "text": "we've heard a lot like isn't then the elb a single point of failure in my",
    "start": "615079",
    "end": "620480"
  },
  {
    "text": "infrastructure really critical thing to point out elb itself is a service from Amazon just like the other services that",
    "start": "620480",
    "end": "627200"
  },
  {
    "text": "I described so I'm I'm here to assure you you that there is not a single point of failure in the physical topology of",
    "start": "627200",
    "end": "632959"
  },
  {
    "text": "the elb device it is designed to survive the same kinds of failures that your infrastructure uh being built of",
    "start": "632959",
    "end": "638880"
  },
  {
    "text": "multiple instances uh is designed to survive we've also built automated DNS",
    "start": "638880",
    "end": "644440"
  },
  {
    "text": "we know a huge number of the most sophisticated systems for redirecting traffic between nodes ensuring that the",
    "start": "644440",
    "end": "651240"
  },
  {
    "text": "names are consistent as machines start and stop those kinds of Design Elements",
    "start": "651240",
    "end": "656440"
  },
  {
    "text": "uh are much easier when you don't have to go all the way back to the weird shared hosting provider where you bought",
    "start": "656440",
    "end": "661760"
  },
  {
    "text": "your DNS in the first place and remember that funky password and type in ah this is what the C name is supposed to be",
    "start": "661760",
    "end": "667279"
  },
  {
    "text": "bring that stuff over into the same API context so that it's very very easy so that it's programmatic so that it can be",
    "start": "667279",
    "end": "673040"
  },
  {
    "text": "deployed by the same control tools you already use so that it can be managed in the same context and deliver the same",
    "start": "673040",
    "end": "679360"
  },
  {
    "text": "kinds of benefits from a fault tolerant standpoint we've also just added a feature to that hugely important feature",
    "start": "679360",
    "end": "685560"
  },
  {
    "text": "from Fault tolerance standpoint in latency based routing so now you have one DNS entry from us that points to all",
    "start": "685560",
    "end": "692560"
  },
  {
    "text": "the different regions that you have access to all the different regions that you have active systems",
    "start": "692560",
    "end": "697959"
  },
  {
    "text": "in and the folks that come in to use your your resources we figure out which",
    "start": "697959",
    "end": "704000"
  },
  {
    "text": "region they're closest to and Route the traffic to the appropriate place that used to be something you had to get outside of Amazon we've added that in as",
    "start": "704000",
    "end": "709880"
  },
  {
    "text": "a feature that's not just to make things faster it also makes it so that if one of the regions isn't working today the",
    "start": "709880",
    "end": "716480"
  },
  {
    "text": "other regions can handle the load so now you're not stuck you're not in this position where DNS becomes a single",
    "start": "716480",
    "end": "723200"
  },
  {
    "text": "point of failure we fix that too another huge layer as you sort of move that one step up the stack is the is the",
    "start": "723200",
    "end": "730200"
  },
  {
    "start": "729000",
    "end": "729000"
  },
  {
    "text": "application deployment application management I think the big question the the thing to sort of noodle as you're",
    "start": "730200",
    "end": "736440"
  },
  {
    "text": "looking through your application is when you deploy the application stack that you have is that unique is that totally",
    "start": "736440",
    "end": "743279"
  },
  {
    "text": "new in yours do you manage individual servers in a way that no one else does if it's Unique we have a system called",
    "start": "743279",
    "end": "749480"
  },
  {
    "text": "Cloud information where we'll package up your stack will help you deploy it more rapidly Amis are a part of that but",
    "start": "749480",
    "end": "755519"
  },
  {
    "text": "Cloud information lets you build complex topologies that have multiple nodes maybe you need the first part of your",
    "start": "755519",
    "end": "761079"
  },
  {
    "text": "app tier and then you need another section of the app tier as another instance or maybe you need mid-tier load balancing with ha proxy or you need you",
    "start": "761079",
    "end": "768440"
  },
  {
    "text": "know other kinds of software Tools in there Cloud information lets you create an actual atomically deliverable",
    "start": "768440",
    "end": "775959"
  },
  {
    "text": "individual stack out of your stuff as opposed to oh I have to build this part and then the next part and then the next",
    "start": "775959",
    "end": "781839"
  },
  {
    "text": "part builds that into a process if on the other hand your stack is not unique",
    "start": "781839",
    "end": "787600"
  },
  {
    "text": "if you use Java just like everybody else if you have PHP code just like everybody else does and you just need it to go we",
    "start": "787600",
    "end": "794040"
  },
  {
    "text": "have a thing for that too it works the same way called beanock it's maybe an easier way to understand what beanock",
    "start": "794040",
    "end": "799360"
  },
  {
    "text": "does it's really just a cloud formation script it's really just a way to programmatically deploy your stack so we",
    "start": "799360",
    "end": "806199"
  },
  {
    "text": "know that you're going to have a stack of some kind whether that's you know in these languages or not if it's not in",
    "start": "806199",
    "end": "811800"
  },
  {
    "text": "these languages you end up using Cloud information or some of our great Partners engine yard Heroku some of the",
    "start": "811800",
    "end": "816880"
  },
  {
    "text": "other guys that have built great stuff there you can build your own stack too that I don't have any issue with that we have a lot of folks that have made that",
    "start": "816880",
    "end": "822440"
  },
  {
    "text": "choice but it's a place where you need to make the investment in understanding those tools and ensure that you have",
    "start": "822440",
    "end": "828040"
  },
  {
    "text": "some expertise there so that when you're designing the way that that's deployed you're designing it in a fault tall our",
    "start": "828040",
    "end": "833480"
  },
  {
    "text": "way we we've also built a lot uh of signals in our system",
    "start": "833480",
    "end": "839560"
  },
  {
    "start": "834000",
    "end": "834000"
  },
  {
    "text": "so it's not just what the API reads back uh now you have Cloud watch that is able",
    "start": "839560",
    "end": "844920"
  },
  {
    "text": "to tell you you know how how much CPU am I using or how much network is going on you can custom put metrics into",
    "start": "844920",
    "end": "851279"
  },
  {
    "text": "cloudwatch so if you have application monitoring software like nagios or ganglia or there's a pile of those",
    "start": "851279",
    "end": "858360"
  },
  {
    "text": "different tools you can write from them into cloudwatch so now you have another access point for automated actions maybe",
    "start": "858360",
    "end": "866040"
  },
  {
    "text": "that's not even Auto scaling Auto scaling is a great tool but maybe you're using Cloud watch metrics to trigger",
    "start": "866040",
    "end": "871920"
  },
  {
    "text": "other kinds of actions construction of new simple cues or construction of uh new you know backup objects in S3 there",
    "start": "871920",
    "end": "878360"
  },
  {
    "text": "are a bunch of patterns for allowing these systems to interact with each other based on those kinds of automatic",
    "start": "878360",
    "end": "884600"
  },
  {
    "text": "triggers automatic signals that come out of our environment that make it a lot easier a lot easier to build those more",
    "start": "884600",
    "end": "891720"
  },
  {
    "text": "distributed more fault tolerant workflows we also know a lot of folks have built a lot of Amazon machine",
    "start": "891720",
    "end": "898160"
  },
  {
    "text": "images I don't know if you've seen the catalog recently I read through it I think there's over 10,000 Amis at this",
    "start": "898160",
    "end": "903800"
  },
  {
    "text": "point really important that any Ami you use is with either something that you've",
    "start": "903800",
    "end": "909519"
  },
  {
    "text": "built or with somebody that you have a relationship with we want you to be able to identify the Constructor of that it's",
    "start": "909519",
    "end": "915000"
  },
  {
    "text": "an important piece of building a fault tolerant application but we also know that there isn't anything built into the",
    "start": "915000",
    "end": "922440"
  },
  {
    "text": "Ami system that allows automatic programmatic management of their contents they are a fixed gold image the",
    "start": "922440",
    "end": "929600"
  },
  {
    "text": "whole point of having an ID on those things is so that you aren't changing them you want to maintain their",
    "start": "929600",
    "end": "934639"
  },
  {
    "text": "consistency but their maintenance is critical software gets updated all the time so whether you",
    "start": "934639",
    "end": "940800"
  },
  {
    "text": "use programmatic deployers like Chef like puppet like some of the thirdparty",
    "start": "940800",
    "end": "946079"
  },
  {
    "text": "management tools like right scale or others if you use those sorts of systems they'll build the image that you're",
    "start": "946079",
    "end": "951920"
  },
  {
    "text": "going to use on your behalf if you're not using something like that you need to do this maintenance you need to ensure that you're rebundling and",
    "start": "951920",
    "end": "958360"
  },
  {
    "text": "repatching based on your newest versions of your code and the newest versions of the application software that you're",
    "start": "958360",
    "end": "963440"
  },
  {
    "text": "using that builds fault tolerance in from a security standpoint from an update standpoint we also really suggest",
    "start": "963440",
    "end": "969639"
  },
  {
    "text": "at this point we've made a recent change the M1 Smalls the C1 medium instances",
    "start": "969639",
    "end": "975279"
  },
  {
    "text": "very popular for small parts of the application which used to only run 32bit now allow 64 so you can use the same Ami",
    "start": "975279",
    "end": "981759"
  },
  {
    "text": "from one core and 1.7 gigs all the way up to eight cores and 68 gigs of memory",
    "start": "981759",
    "end": "988079"
  },
  {
    "text": "huge span a vertical scaleability on the same Ami so uh really important you also",
    "start": "988079",
    "end": "995040"
  },
  {
    "text": "recognize that the regions themselves are logically isolated so if you're going to use Amis as the building block",
    "start": "995040",
    "end": "1001600"
  },
  {
    "text": "of your infrastructure really critical that you replicate those across regions if we had some kind of catastrophic uh",
    "start": "1001600",
    "end": "1008519"
  },
  {
    "text": "catastrophic event in Singapore and all of the Amis there were lost you'd want to have a copy of your image in another",
    "start": "1008519",
    "end": "1014160"
  },
  {
    "text": "region that's that's a process where you'd create it hydrate it as an EBS volume replicate those bits to the other",
    "start": "1014160",
    "end": "1019759"
  },
  {
    "text": "region and resave as a new image that's that takes a little bit of work at this point it's a it's a task uh it's",
    "start": "1019759",
    "end": "1026038"
  },
  {
    "text": "something that we've heard from customers that there's a feature request there there's there there are a few more things we need to build for sure but",
    "start": "1026039",
    "end": "1032520"
  },
  {
    "text": "this is a place where today there are plenty of patterns for getting those Amazon machine images back and forth",
    "start": "1032520",
    "end": "1038160"
  },
  {
    "text": "across the regions we also built we think the sort of sim single simplest",
    "start": "1038160",
    "end": "1043360"
  },
  {
    "start": "1041000",
    "end": "1041000"
  },
  {
    "text": "thing which is virtualized machines that allow you to build and Deploy on demand",
    "start": "1043360",
    "end": "1048480"
  },
  {
    "text": "the I think the sort of normal building block pieces yes they're consistent and reliable a large will always run the",
    "start": "1048480",
    "end": "1054960"
  },
  {
    "text": "same speed and size as a as another large you can do reserved instances to increase the likelihood to make sure",
    "start": "1054960",
    "end": "1061520"
  },
  {
    "text": "that you have access to uh to instance hours when you need them you can use EBS",
    "start": "1061520",
    "end": "1066640"
  },
  {
    "text": "volumes for advanced persistence on your disc but probably the sneakiest the most",
    "start": "1066640",
    "end": "1071720"
  },
  {
    "text": "the most important difference between this and any other environment you've worked in is just absolutely immense Fleet scale this system is gigantic",
    "start": "1071720",
    "end": "1079520"
  },
  {
    "text": "when you grow like Pinterest did when you grow like these other businesses you need to be sure that the fault isn't",
    "start": "1079520",
    "end": "1086080"
  },
  {
    "text": "that you're too big so having enough machines around so that when it's time to rebundle and redeploy when it's time",
    "start": "1086080",
    "end": "1092919"
  },
  {
    "text": "to update your software and you're going to start a whole other Fleet of machines having enough of them is its own kind of",
    "start": "1092919",
    "end": "1098880"
  },
  {
    "text": "fa tolerance we've also recently added a pretty important feature uh elastic network interfaces so in our VPC",
    "start": "1098880",
    "end": "1105280"
  },
  {
    "text": "environment you can now have two distinct interfaces with their own IP addresses hooked to the same instance",
    "start": "1105280",
    "end": "1112280"
  },
  {
    "text": "that allows you to not only have internal network not external public network but internal Network addresses",
    "start": "1112280",
    "end": "1118159"
  },
  {
    "text": "uh for different channels of communication but those addresses are just like elastic IPS in that they're movable from instance to instance so now",
    "start": "1118159",
    "end": "1125280"
  },
  {
    "text": "you're talking about remapping the middle tier and the app tier database tier components from node to node we",
    "start": "1125280",
    "end": "1131640"
  },
  {
    "text": "have a lot of companies that come to us maybe you're built this way this is a",
    "start": "1131640",
    "end": "1136919"
  },
  {
    "text": "typical absolutely straight forward end tier forklifted application you take what you have in your Colo and You",
    "start": "1136919",
    "end": "1143320"
  },
  {
    "text": "remake it with us you you treat us like we're a web Hoster not like we're a cloud and as a result you build this",
    "start": "1143320",
    "end": "1149799"
  },
  {
    "text": "thing it's in 1 a it's probably got a Master Slave database but they're in the same building you've got software load",
    "start": "1149799",
    "end": "1156559"
  },
  {
    "text": "balancers all over the place that you pay full instance hours for you probably just have the two machines that are as",
    "start": "1156559",
    "end": "1162440"
  },
  {
    "text": "big as you need to ensure that if one fails this this if you go to a Colo This is highly available this is this is in",
    "start": "1162440",
    "end": "1169080"
  },
  {
    "text": "design that is not the way to do it we we drag people kicking and screaming sometimes through to do the work to do",
    "start": "1169080",
    "end": "1175840"
  },
  {
    "text": "fault tolerant design you're using Auto scaling at the front tier and hopefully at the app tier you got software lad",
    "start": "1175840",
    "end": "1181159"
  },
  {
    "text": "balancers to ensure that that's a loose coupling you got elastic load balancers out front and Route 53 DNS between",
    "start": "1181159",
    "end": "1187480"
  },
  {
    "text": "you're using RDS or you're managing replication across availability zones on your own for databased here you're using",
    "start": "1187480",
    "end": "1193840"
  },
  {
    "text": "a cash service you can use M casd on your own you can use our elastic cach I don't care which one but put a layer",
    "start": "1193840",
    "end": "1199320"
  },
  {
    "text": "between your databases in the front end that's just a good idea I I do this presentation a lot I walked through and",
    "start": "1199320",
    "end": "1205200"
  },
  {
    "text": "this next slide is actually built by one of our customers um I walked through this whole thing said this is the way",
    "start": "1205200",
    "end": "1210679"
  },
  {
    "text": "you're supposed to build it if you're going to go building app man build it this way and he said that's a lot of work why can't I just build it like this",
    "start": "1210679",
    "end": "1217200"
  },
  {
    "text": "any of the stuff that Wiggles put it over in the bean stock any of the stuff that's not supposed to wiggle put it",
    "start": "1217200",
    "end": "1223400"
  },
  {
    "text": "over in the S3 all the dynamic code goes over here all the not Dynamic code goes over here I'm done tap it out",
    "start": "1223400",
    "end": "1229440"
  },
  {
    "text": "like that's accurate if your application fits in in a stack manager and your application has static assets there are",
    "start": "1229440",
    "end": "1236240"
  },
  {
    "text": "huge numbers of programs that have big hairy stuff just like this very very complicated topologies paying for",
    "start": "1236240",
    "end": "1242720"
  },
  {
    "text": "instance hours paying for configuration time paying for it guys to straighten all this stuff out when they need that",
    "start": "1242720",
    "end": "1249559"
  },
  {
    "text": "that pushes so much work on off on to us it's such a simpler design it's two",
    "start": "1249559",
    "end": "1255760"
  },
  {
    "text": "boxes so it's your pick like I I like both ways I have customers that have",
    "start": "1255760",
    "end": "1261320"
  },
  {
    "text": "gigantic fleets that are this way and there are plenty of applications that are there are great reasons for this kind of design at least do this please",
    "start": "1261320",
    "end": "1267679"
  },
  {
    "text": "don't do that please please get here and we have",
    "start": "1267679",
    "end": "1273039"
  },
  {
    "text": "really great assets there's lots and lots of documentation that makes it pretty easy we have a bunch of videos that try to make clear all the different",
    "start": "1273039",
    "end": "1279520"
  },
  {
    "text": "sort of steps that you go through uh and if that stuff seems heavy it might be a good indication to you that this is a",
    "start": "1279520",
    "end": "1285520"
  },
  {
    "text": "good way to go right if if 30 pages the docks on how to set up the API calls uh",
    "start": "1285520",
    "end": "1291279"
  },
  {
    "text": "for running through and doing autoscaling is is too heavy it it might be a sign to you that that that a stack",
    "start": "1291279",
    "end": "1297320"
  },
  {
    "text": "is a way to save effort a way to save energy in time a way to get to Market more quickly so I'm going to take a",
    "start": "1297320",
    "end": "1302880"
  },
  {
    "text": "break for a second and have bot from uh from twilio come up twilio has uh taken",
    "start": "1302880",
    "end": "1308000"
  },
  {
    "text": "this to Heart uh they've built a very very scalable very very highly available",
    "start": "1308000",
    "end": "1313440"
  },
  {
    "text": "application thank you miles uh hi everyone so like uh mil set my name is",
    "start": "1313440",
    "end": "1319520"
  },
  {
    "text": "bulat and my last name is long um I'm very happy to be here today uh to",
    "start": "1319520",
    "end": "1325880"
  },
  {
    "text": "share with you uh how we think about continuous delivery under high availability constraints so I'm going to",
    "start": "1325880",
    "end": "1332600"
  },
  {
    "text": "start by asking uh how many of you have actually heard or know of Tulio uh please raise your",
    "start": "1332600",
    "end": "1338760"
  },
  {
    "text": "hand that's quite a lot of hands uh thank you but for those of of you who don't",
    "start": "1338760",
    "end": "1345840"
  },
  {
    "text": "know what Tulio is and this is giving me a little bit of hard time okay so uh twio is actually uh lets",
    "start": "1345840",
    "end": "1355080"
  },
  {
    "text": "developers uh add voice and SMS Communications to their apps and uh lets",
    "start": "1355080",
    "end": "1360360"
  },
  {
    "text": "their apps interact with Telecom Network that's been a black box for uh all this time before Tulia and um we basically",
    "start": "1360360",
    "end": "1368960"
  },
  {
    "text": "sit between carriers and developers and we abstract all the carrier Communications away and give developers",
    "start": "1368960",
    "end": "1374120"
  },
  {
    "text": "one simple API that they can use to initiate a phone call or send a text message uh and do Al all sorts of",
    "start": "1374120",
    "end": "1380039"
  },
  {
    "text": "workflows around that uh the toio toolbox consists of the three tools",
    "start": "1380039",
    "end": "1385360"
  },
  {
    "start": "1382000",
    "end": "1382000"
  },
  {
    "text": "primarily uh the rest API itself which developers can use to uh initiate a phone call for example or send a text",
    "start": "1385360",
    "end": "1392000"
  },
  {
    "text": "message then we have the twio markup language or twiml which uh developers use to tell our server what to do when",
    "start": "1392000",
    "end": "1399640"
  },
  {
    "text": "certain events occur when a phone call comes in for example or when a short message comes in or at any other uh part",
    "start": "1399640",
    "end": "1405840"
  },
  {
    "text": "of the um life cycle of the communication and uh a little less than a year ago we",
    "start": "1405840",
    "end": "1411799"
  },
  {
    "text": "released uh to your client which is a JavaScript library and uh set of mobile",
    "start": "1411799",
    "end": "1417960"
  },
  {
    "text": "sdks iOS and uh soon Android uh for adding voice uh and presence",
    "start": "1417960",
    "end": "1424200"
  },
  {
    "text": "communication capabilities to your mobile applications be them uh in the browser or on mobile and you could",
    "start": "1424200",
    "end": "1431159"
  },
  {
    "text": "assume you can do uh quite a lot of stuff with that uh kind of tool set and we've seen uh customers or uh toer",
    "start": "1431159",
    "end": "1439080"
  },
  {
    "text": "customers Implement things uh from uh contact centers and interactive voice",
    "start": "1439080",
    "end": "1444440"
  },
  {
    "text": "response applications uh to business process automation marketing campaigns",
    "start": "1444440",
    "end": "1449799"
  },
  {
    "text": "cold tracking lead generation click to call social networking all of that stuff that you couldn't previously do uh and",
    "start": "1449799",
    "end": "1457440"
  },
  {
    "text": "uh some of our customers are uh include big names like Walmart or uh eBay or",
    "start": "1457440",
    "end": "1463320"
  },
  {
    "text": "Sprint Sprint huh so uh we're a phone company",
    "start": "1463320",
    "end": "1470320"
  },
  {
    "text": "and since we're a phone company we can't go down uh cuz no one likes dropped calls right plus uh our International",
    "start": "1470320",
    "end": "1476720"
  },
  {
    "text": "SMS and voice offering um guarantees that at all times somewhere someone will",
    "start": "1476720",
    "end": "1482640"
  },
  {
    "text": "be there making a call or sending a message so we have to be available uh 24/7",
    "start": "1482640",
    "end": "1488799"
  },
  {
    "text": "globally and uh the way we think about that kind of availability is by following a set of engineering",
    "start": "1488799",
    "end": "1494720"
  },
  {
    "start": "1492000",
    "end": "1492000"
  },
  {
    "text": "principles that I'm here to share with you today uh that Tulio has following from its Inception uh and that allowed",
    "start": "1494720",
    "end": "1501559"
  },
  {
    "text": "us to achieve the kind of fa tolerance and high availability that we're capable of today uh so let me start with uh",
    "start": "1501559",
    "end": "1507919"
  },
  {
    "text": "containing failures uh we think about failure in units and the smallest unit",
    "start": "1507919",
    "end": "1513520"
  },
  {
    "text": "of failure is a single host so we build our systems so that they're able to",
    "start": "1513520",
    "end": "1518679"
  },
  {
    "text": "recover uh when any host in the cluster goes down for example or any two three",
    "start": "1518679",
    "end": "1524520"
  },
  {
    "text": "hosts however many and we also think about uh availability zones and regions as units of failures as well so our",
    "start": "1524520",
    "end": "1531399"
  },
  {
    "text": "system uh is built uh to handle those failures too and um to give you an",
    "start": "1531399",
    "end": "1538399"
  },
  {
    "text": "example of that kind of isolation uh you could have a web server that writes to a",
    "start": "1538399",
    "end": "1543840"
  },
  {
    "text": "database and you could write to a database directly but then in case that remote database goes down your web",
    "start": "1543840",
    "end": "1549240"
  },
  {
    "start": "1544000",
    "end": "1544000"
  },
  {
    "text": "server goes down as well so you see that domino effect of one failure causing failures all over the system and making",
    "start": "1549240",
    "end": "1555000"
  },
  {
    "text": "it unpredictable so uh you could use a local queue on the web server machine",
    "start": "1555000",
    "end": "1560200"
  },
  {
    "text": "itself uh to um in to inq the rides and uh actually dump them to the database",
    "start": "1560200",
    "end": "1566760"
  },
  {
    "text": "asynchronously and that will give you some time to recover in case the remote database goes down and that time is very",
    "start": "1566760",
    "end": "1572600"
  },
  {
    "text": "valuable alternatively when you perform reads um we use uh load balancers on the",
    "start": "1572600",
    "end": "1578320"
  },
  {
    "text": "box the local load balancer on every box that load balances reads between a pool of slaves so in case one of the slaves",
    "start": "1578320",
    "end": "1584520"
  },
  {
    "text": "go down we're able to rebalance the queries to the slaves that are actually up and that will give us time to recover",
    "start": "1584520",
    "end": "1590000"
  },
  {
    "text": "the slave that went down as well another important principle is ability to fail",
    "start": "1590000",
    "end": "1595120"
  },
  {
    "start": "1594000",
    "end": "1594000"
  },
  {
    "text": "fast uh by failing fast I mean raising exceptions as soon as they occur do not",
    "start": "1595120",
    "end": "1601039"
  },
  {
    "text": "suppress errors and this involves a certain way of writing code uh that is sprinkled with assertions and exceptions",
    "start": "1601039",
    "end": "1607480"
  },
  {
    "text": "that for example might look like this and if you're writing C uh and the reason failing fast is important is",
    "start": "1607480",
    "end": "1614200"
  },
  {
    "text": "because uh if you fail fast it gives you the ability to retry on failure uh and",
    "start": "1614200",
    "end": "1620039"
  },
  {
    "start": "1618000",
    "end": "1618000"
  },
  {
    "text": "when you build a fault tolerant system um you expect failures and you have to",
    "start": "1620039",
    "end": "1625480"
  },
  {
    "text": "be able to retry in case they happen and the sooner you fail the sooner you're able to retry uh but don't forget to",
    "start": "1625480",
    "end": "1633640"
  },
  {
    "text": "include timeouts uh so that your system doesn't lack down uh in case of some long network communication happens and",
    "start": "1633640",
    "end": "1639399"
  },
  {
    "text": "you actually fail uh fast another important principle is",
    "start": "1639399",
    "end": "1644480"
  },
  {
    "start": "1644000",
    "end": "1644000"
  },
  {
    "text": "being itm potent itm potent is a very weird word right so let me try to give you an example let's say you were",
    "start": "1644480",
    "end": "1650960"
  },
  {
    "text": "building a u bank account application in a full tolerant manner um you could",
    "start": "1650960",
    "end": "1659120"
  },
  {
    "text": "uh build it without F without item poent in mind but other if you had uh built an",
    "start": "1659120",
    "end": "1665399"
  },
  {
    "text": "application that was itm potent that means that no many no matter how many attempts you do to deposit money to an",
    "start": "1665399",
    "end": "1670480"
  },
  {
    "text": "account you actually deposit the money only once because otherwise it would be a very bad bank right um another",
    "start": "1670480",
    "end": "1677440"
  },
  {
    "text": "important principle is being stateless and the reason is that uh data persistence is actually one of the",
    "start": "1677440",
    "end": "1682559"
  },
  {
    "start": "1678000",
    "end": "1678000"
  },
  {
    "text": "hardest problems uh scalable software as a service companies face nowadays um",
    "start": "1682559",
    "end": "1689200"
  },
  {
    "text": "because it's very hard you have to manage backups you have to do replication you have to uh do all sorts",
    "start": "1689200",
    "end": "1695519"
  },
  {
    "text": "of crazy stuff and so at T we constantly try to look at our stock and evaluate uh",
    "start": "1695519",
    "end": "1701279"
  },
  {
    "text": "where we can get rid of stateless statefulness and uh use a stateless architecture instead another way to do",
    "start": "1701279",
    "end": "1707960"
  },
  {
    "text": "it is by uploading your uh databases to some third party vendor like Amazon with",
    "start": "1707960",
    "end": "1713039"
  },
  {
    "text": "their uh amazing uh Dynamo DB or uh relational database services so you",
    "start": "1713039",
    "end": "1719760"
  },
  {
    "text": "don't have to worry about you let them worry about uh but a common way of uh making a stateful architecture stateless",
    "start": "1719760",
    "end": "1725559"
  },
  {
    "text": "is in a web in a uh web servers you you might have a pool of web servers that",
    "start": "1725559",
    "end": "1730760"
  },
  {
    "text": "store session and information in some common uh session store uh and that is a",
    "start": "1730760",
    "end": "1736080"
  },
  {
    "text": "stateful architecture and uh poorly scalable alternatively you could just encrypt the whole session data in the in",
    "start": "1736080",
    "end": "1742640"
  },
  {
    "text": "the cookie and exchange that instead so that way we just got rid of a uh another",
    "start": "1742640",
    "end": "1748159"
  },
  {
    "text": "database and made our system more stateless another important thing is relaxing consistency uh well you know",
    "start": "1748159",
    "end": "1754640"
  },
  {
    "start": "1752000",
    "end": "1752000"
  },
  {
    "text": "cap theorum says uh that any kind of distributed computing system can only achieve uh cannot achieve um partition",
    "start": "1754640",
    "end": "1763679"
  },
  {
    "text": "tolerance uh consistency and uh availability all",
    "start": "1763679",
    "end": "1768880"
  },
  {
    "text": "three at the same time so uh uh consistency and partition tolerance are uh very important because partition",
    "start": "1768880",
    "end": "1774559"
  },
  {
    "text": "tolerance lets you recover from failure without corrupting your data and consistency is uh also very important",
    "start": "1774559",
    "end": "1781240"
  },
  {
    "text": "because you don't want inconsistent data uh so well actually consist consistency is",
    "start": "1781240",
    "end": "1788399"
  },
  {
    "text": "important yes but you can relax consistency and that way you can actually perform a lot more reads uh for",
    "start": "1788399",
    "end": "1794039"
  },
  {
    "text": "example by uh doing replication uh and scale system better instead of going to",
    "start": "1794039",
    "end": "1800120"
  },
  {
    "text": "the same data source all the time like in this example okay so those are the six uh",
    "start": "1800120",
    "end": "1806200"
  },
  {
    "text": "engineering principles that we try to follow uh to make systems full tolerant but there is also important thing uh",
    "start": "1806200",
    "end": "1812519"
  },
  {
    "text": "like uh having a single button test and deploy system because we don't want Engineers to struggle with long deploys",
    "start": "1812519",
    "end": "1819600"
  },
  {
    "text": "uh so we try to automate as much as possible uh of our deployment process as well uh but we don't Deploy on the same",
    "start": "1819600",
    "end": "1827000"
  },
  {
    "text": "frequency everything uh so here is a um logarithmic scale of",
    "start": "1827000",
    "end": "1832399"
  },
  {
    "text": "how often how frequently we deploy different parts of our system so for example for every single uh schema",
    "start": "1832399",
    "end": "1838080"
  },
  {
    "text": "change we might do 10 uh API deployments uh which includes uh PHP and python code",
    "start": "1838080",
    "end": "1844279"
  },
  {
    "text": "modification for example and for every uh uh 10 of those we might do actually",
    "start": "1844279",
    "end": "1850000"
  },
  {
    "text": "100 uh website uh front and code changes because they are a lot lower risk than",
    "start": "1850000",
    "end": "1855639"
  },
  {
    "text": "the API changes and for uh 100 of those we might do 10,000 I mean a thousand",
    "start": "1855639",
    "end": "1861559"
  },
  {
    "text": "content changes on the website itself because that's very low risk um but to",
    "start": "1861559",
    "end": "1867080"
  },
  {
    "text": "automate deployments uh and to be able to build uh the to bring up the full toolio stock with just one click of a",
    "start": "1867080",
    "end": "1873720"
  },
  {
    "text": "button we built an internal tool that's called box config that lets us manage um",
    "start": "1873720",
    "end": "1879399"
  },
  {
    "start": "1876000",
    "end": "1876000"
  },
  {
    "text": "host configuration orchestration monitor running hosts uh and um really eases Our",
    "start": "1879399",
    "end": "1886760"
  },
  {
    "text": "Lives because we can build a full twilio stock with just one single uh click of a",
    "start": "1886760",
    "end": "1893000"
  },
  {
    "text": "button and we use monitoring for uh we we use nagos for monitoring and alerting",
    "start": "1893399",
    "end": "1898799"
  },
  {
    "text": "of the running host we use local ha proxy instances for load balancing uh uh",
    "start": "1898799",
    "end": "1904240"
  },
  {
    "text": "like I gave the database example um and this ultimately lets us do multicenter",
    "start": "1904240",
    "end": "1910840"
  },
  {
    "text": "uh deployments and analytics with a single click of a button uh those are screenshots from the box config to Tool",
    "start": "1910840",
    "end": "1917279"
  },
  {
    "text": "itself where you can see the host list and here you can see the host details for example uh that uh gives you links",
    "start": "1917279",
    "end": "1923159"
  },
  {
    "text": "to important AIO statistics and uh uh load balancing stats and various other",
    "start": "1923159",
    "end": "1928880"
  },
  {
    "text": "metrics like CPU load uh load on the host and etc etc so um tool use recipe",
    "start": "1928880",
    "end": "1935880"
  },
  {
    "text": "to high availability and uh fault tolerance in the cloud is engineering",
    "start": "1935880",
    "end": "1940960"
  },
  {
    "text": "principles plus automation uh I know that might not be the Panacea and that might not work for everyone but that's",
    "start": "1940960",
    "end": "1947559"
  },
  {
    "text": "that's our approach and I was happy here uh to share it today thank",
    "start": "1947559",
    "end": "1953519"
  },
  {
    "text": "you thanks BL thanks a bunch bot I think that I",
    "start": "1953960",
    "end": "1960960"
  },
  {
    "text": "think that was awesome so uh Parts you know there's a um uh I went to",
    "start": "1960960",
    "end": "1969000"
  },
  {
    "start": "1963000",
    "end": "1963000"
  },
  {
    "text": "a great presentation where uh someone was building their own physical infrastructure and uh the the original",
    "start": "1969000",
    "end": "1975799"
  },
  {
    "text": "the the only content of the presentation was just scrolling through uh the invoices of the stuff that he' bought",
    "start": "1975799",
    "end": "1981799"
  },
  {
    "text": "all of the different parts of the gear that he needed to buy that's it's a long list so here is your parts list here is",
    "start": "1981799",
    "end": "1987760"
  },
  {
    "text": "the stuff that's in your toolbox uh we talked through most of these different components so at the addressing layer",
    "start": "1987760",
    "end": "1993519"
  },
  {
    "text": "Route 53 and EIP uh did the distribution layer using multi easy design elb Cloud",
    "start": "1993519",
    "end": "1999639"
  },
  {
    "text": "front out front for the edge cache I'll talk up just for a second on cloudfront such a gigantic way of insulating",
    "start": "1999639",
    "end": "2005440"
  },
  {
    "text": "yourself from probably the most popular kind of fault which is uh you know death by success uh somebody decides that your",
    "start": "2005440",
    "end": "2012559"
  },
  {
    "text": "front page is the coolest looking thing in the world and they post to it on Pinterest and all the other interesting websites all of a sudden there's this",
    "start": "2012559",
    "end": "2018919"
  },
  {
    "text": "gigantic amount of traffic if those pictures are in cloudfront I am telling you cloudfront will scale and maybe your",
    "start": "2018919",
    "end": "2024679"
  },
  {
    "text": "website might not so it's critical if you have any of that kind of static content get it off your boxes it is the",
    "start": "2024679",
    "end": "2031399"
  },
  {
    "text": "least efficient use of this precious compute resource the largest single driver of your cost in any",
    "start": "2031399",
    "end": "2037240"
  },
  {
    "text": "infrastructure is the compute hours so really important if you can get static things out of the way of those machines",
    "start": "2037240",
    "end": "2043559"
  },
  {
    "text": "you can help uh unload them reduce your cost and increase your fault tolerance",
    "start": "2043559",
    "end": "2048878"
  },
  {
    "text": "also important um you know we think I watched a great presentation a little earlier today on uh on Big Data anal",
    "start": "2048879",
    "end": "2055599"
  },
  {
    "text": "analytics and Analysis uh we think you should measure everything there's so much great signal coming out of these",
    "start": "2055599",
    "end": "2062320"
  },
  {
    "text": "systems cloudwatch is one of those measures um it's pretty sophisticated for uh EC I think we have more folks",
    "start": "2062320",
    "end": "2069679"
  },
  {
    "text": "writing custom metrics there than anywhere else but I really encourage you to go take a look at the measures you get back from RDS or the measures you",
    "start": "2069679",
    "end": "2076919"
  },
  {
    "text": "get back from EBS volumes or the measures that you get back from these other pieces really rich analytics",
    "start": "2076919",
    "end": "2082200"
  },
  {
    "text": "because those are richer programs they have more stuff built up so you'll get all sorts of useful data out of those",
    "start": "2082200",
    "end": "2087760"
  },
  {
    "text": "very important piece of the pie um another important thing around the data tier which I think everybody spends the",
    "start": "2087760",
    "end": "2094200"
  },
  {
    "start": "2090000",
    "end": "2090000"
  },
  {
    "text": "most time working through and working on how do I get to a place where the data tier systems are fault tolerant you you",
    "start": "2094200",
    "end": "2101480"
  },
  {
    "text": "you will be doing these kinds of tasks you will do patching you will be cashing something you are going to Shard you're",
    "start": "2101480",
    "end": "2107400"
  },
  {
    "text": "going to distribute all of that work it's a lot of work it takes a bunch of time you have to be really good at it to",
    "start": "2107400",
    "end": "2114480"
  },
  {
    "text": "be better at it than a lot of other folks this stuff uh you know we built I've built a couple of different",
    "start": "2114480",
    "end": "2120119"
  },
  {
    "text": "startups we spent weeks and months fussing our way through exactly these",
    "start": "2120119",
    "end": "2126079"
  },
  {
    "text": "parts it takes a huge amount of skill and talent and frankly I wasn't that good it'd be much easier to just work on",
    "start": "2126079",
    "end": "2132359"
  },
  {
    "text": "the sort of shiny website part and the shiny app code part and get back to job so we Amazon's heard that we feel that",
    "start": "2132359",
    "end": "2139000"
  },
  {
    "start": "2137000",
    "end": "2137000"
  },
  {
    "text": "we've built in the context of that amazon.com knows exactly how much work that stuff is that's why we've invested",
    "start": "2139000",
    "end": "2146000"
  },
  {
    "text": "like crazy at the data tier to make sure that you've got tools that make this easier that make this more approachable",
    "start": "2146000",
    "end": "2152280"
  },
  {
    "text": "I in personal experience Dynamo DB is amazing it does amazing things in this context it lifts a lot of intelligence",
    "start": "2152280",
    "end": "2160319"
  },
  {
    "text": "not only from the design of Dynamo the original of these databases as a as a paper and real application inside of",
    "start": "2160319",
    "end": "2166599"
  },
  {
    "text": "amazon.com but also from the design of S3 and its ability to replicate and build a system that can scale and grow",
    "start": "2166599",
    "end": "2173480"
  },
  {
    "text": "and survive and be highly durable and be highly available we also know that that",
    "start": "2173480",
    "end": "2179240"
  },
  {
    "text": "that it's going to take time for folks to refactor their code to refactor their applications to take advantage of these",
    "start": "2179240",
    "end": "2184680"
  },
  {
    "text": "newer Data Systems and that you know my SQL works real good Oracle Works real good real relational databases add a lot",
    "start": "2184680",
    "end": "2191400"
  },
  {
    "text": "of value to a lot of workloads so RDS helps a huge amount there really really reduces the barrier to entry I watch",
    "start": "2191400",
    "end": "2198800"
  },
  {
    "text": "folks struggle with the configuration of these systems with tuning and parameterizing their deployments uh with",
    "start": "2198800",
    "end": "2205520"
  },
  {
    "text": "sort of getting the right patch versions together uh this is a this is a much simpler Way Forward and and elastic cash",
    "start": "2205520",
    "end": "2212240"
  },
  {
    "text": "and simple dbd products they they fit the same mold they're designed in the same way um to to dig in a little on RDS",
    "start": "2212240",
    "end": "2219960"
  },
  {
    "start": "2219000",
    "end": "2219000"
  },
  {
    "text": "um we get some folks that have been confused uh MySQL has its own approach for replication it uses asynchronous",
    "start": "2219960",
    "end": "2226920"
  },
  {
    "text": "replication node to node asynchronous replication as just exactly per the per",
    "start": "2226920",
    "end": "2232280"
  },
  {
    "text": "the term has its own risks Associated it's possible you wouldn't have a piece of data over there at the moment that",
    "start": "2232280",
    "end": "2237839"
  },
  {
    "text": "you need it so we built the RDS my SQL deployment to support synchronous rights",
    "start": "2237839",
    "end": "2243440"
  },
  {
    "text": "between availability zones you push that button and we guarantee on the right that is in two different places that's a",
    "start": "2243440",
    "end": "2250599"
  },
  {
    "text": "critical critical uh uplift to the performance and uh you know Enterprise",
    "start": "2250599",
    "end": "2255800"
  },
  {
    "text": "scale and and power of MySQL in our context we also let you use asynchronous",
    "start": "2255800",
    "end": "2260960"
  },
  {
    "text": "replication we're okay with that we think it's great for read replicas though so we've built that as a push button deployment as well makes it much",
    "start": "2260960",
    "end": "2267720"
  },
  {
    "text": "easier probably the easiest and biggest thing that you'd be doing this is really more disaster recovery but even doing",
    "start": "2267720",
    "end": "2274359"
  },
  {
    "text": "that right can be chuff can be a cause of failures I have customers that have incorrectly set the way that they uh the",
    "start": "2274359",
    "end": "2281760"
  },
  {
    "text": "way that they transmit trans uh uh tlogs off of the systems uh if you set that up",
    "start": "2281760",
    "end": "2287079"
  },
  {
    "text": "wrong you're reading too often you're affecting the performance of the database that can be a cause of fault so we've built automation that we've tested",
    "start": "2287079",
    "end": "2293280"
  },
  {
    "text": "and proven and we know Works to suck the t- logs off of these boxes every five minutes to S3 I'm here to promise they",
    "start": "2293280",
    "end": "2300440"
  },
  {
    "text": "aren't going anywhere when they're in S3 so if you lose an RDS instance it's easy to bring those tlogs back into context",
    "start": "2300440",
    "end": "2306599"
  },
  {
    "text": "to replay the log get right back to where you were no more than 5 minutes of data gone that's a huge huge huge",
    "start": "2306599",
    "end": "2312800"
  },
  {
    "text": "benefit to that system if one of the things we've heard from a lot of folks is great great I you know awesome",
    "start": "2312800",
    "end": "2318160"
  },
  {
    "text": "there's a bunch of building blocks from Amazon I like all that my application's here it's on premise I don't know how to",
    "start": "2318160",
    "end": "2323200"
  },
  {
    "text": "get it up there I don't know how to get into context of these Data Systems we just added storage Gateway that's a",
    "start": "2323200",
    "end": "2329240"
  },
  {
    "start": "2328000",
    "end": "2328000"
  },
  {
    "text": "great first step you create volumes in storage Gateway they are EBS snapshots",
    "start": "2329240",
    "end": "2335280"
  },
  {
    "text": "so it's just like you have EBS discs that sit back at your on premise you copy your data in there they are in S3",
    "start": "2335280",
    "end": "2342440"
  },
  {
    "text": "you can rehydrate them as EBS volumes and you're ready to go you bring that data over into the context of your application and you start to get to work",
    "start": "2342440",
    "end": "2349680"
  },
  {
    "text": "that works both ways if you want to bring that stuff back down on premise you can drag it that way we have other features there's there's VM import and",
    "start": "2349680",
    "end": "2356480"
  },
  {
    "text": "other tools that are helping folks bridge the gap make it easier I think you've heard pretty recently we made an",
    "start": "2356480",
    "end": "2362480"
  },
  {
    "text": "announcement that we've licensed eucalyptus so they officially now support and hold our API that's a part",
    "start": "2362480",
    "end": "2369240"
  },
  {
    "text": "of our growing commitment to making it easier to move things in and out to making it easier to be fault tolerant in",
    "start": "2369240",
    "end": "2375640"
  },
  {
    "text": "both contexts to be able to move applications to the place where they're most efficient uh I've spent I've said",
    "start": "2375640",
    "end": "2381800"
  },
  {
    "text": "the word test a bunch of times I know everybody likes the monkey slide you have to show the monkey slide it's kind",
    "start": "2381800",
    "end": "2386960"
  },
  {
    "start": "2384000",
    "end": "2384000"
  },
  {
    "text": "of important um chaos monkey will be open source the semeon Army component from uh from our friends at Netflix is",
    "start": "2386960",
    "end": "2393560"
  },
  {
    "text": "really powerful code uh there's no reason that you need code to do this most of us have enough bad practices in",
    "start": "2393560",
    "end": "2400359"
  },
  {
    "text": "place that you can just trust little intern Tom to accidentally poke the",
    "start": "2400359",
    "end": "2405839"
  },
  {
    "text": "wrong button and all of a sudden you have a chaos monkey loose in your midst uh we think it is The Prudent and",
    "start": "2405839",
    "end": "2412400"
  },
  {
    "text": "conservative and professional thing to be testing your applications this way to ensure that if you pull the plug on",
    "start": "2412400",
    "end": "2418440"
  },
  {
    "text": "pieces that's instances but we have folks that have built really complicated versions of this where they'll run every",
    "start": "2418440",
    "end": "2424520"
  },
  {
    "text": "one of the API requests through an API proxy which runs them back out to ec2",
    "start": "2424520",
    "end": "2429680"
  },
  {
    "text": "which gives them an opportunity to screw with their own API requests which means they'll do really nasty things like not",
    "start": "2429680",
    "end": "2435960"
  },
  {
    "text": "attach EBS volumes when they ask to or switch the network address from one side to the other or specify a different Ami",
    "start": "2435960",
    "end": "2442240"
  },
  {
    "text": "than you asked for that's brutal that makes super super super hard to detect changes in your systems but it means",
    "start": "2442240",
    "end": "2448760"
  },
  {
    "text": "more fault tolerant applications out the other side so we we think the cool kids do this a lot it's definitely sort of a",
    "start": "2448760",
    "end": "2454839"
  },
  {
    "text": "nerdy way to spend your time you don't have to do all this development all on your own hopefully there'll be more and",
    "start": "2454839",
    "end": "2459920"
  },
  {
    "text": "more of that that gets open sourced over time I I'm excited about this kind of",
    "start": "2459920",
    "end": "2465000"
  },
  {
    "text": "work because I know that it makes makes it so that businesses from the tiny tiny little startups to the big Enterprises",
    "start": "2465000",
    "end": "2471040"
  },
  {
    "text": "that are used to throwing money at these problems uh able to build in a way that they can bring things online I there are",
    "start": "2471040",
    "end": "2477520"
  },
  {
    "text": "a bunch of solution Architects here uh you can sort of tell us a part where the geekier looking ones uh happy to answer",
    "start": "2477520",
    "end": "2483359"
  },
  {
    "text": "any your questions at all after the session about fall tolerance I really appreciate you taking the time with bot",
    "start": "2483359",
    "end": "2488839"
  },
  {
    "text": "and I thanks a bunch",
    "start": "2488839",
    "end": "2492400"
  },
  {
    "text": "[Music]",
    "start": "2494280",
    "end": "2497949"
  }
]