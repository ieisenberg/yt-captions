[
  {
    "start": "0",
    "end": "27000"
  },
  {
    "text": "hello everyone I'd like to inform you",
    "start": "40",
    "end": "2560"
  },
  {
    "text": "that AWS W have extended its regular",
    "start": "2560",
    "end": "5600"
  },
  {
    "text": "expression regex support align regex",
    "start": "5600",
    "end": "9200"
  },
  {
    "text": "patterns to be expressed in line within",
    "start": "9200",
    "end": "12559"
  },
  {
    "text": "a rule statement awsw is a web",
    "start": "12559",
    "end": "15599"
  },
  {
    "text": "application firewall that you can use to",
    "start": "15599",
    "end": "18080"
  },
  {
    "text": "monitor web requests that your end users",
    "start": "18080",
    "end": "21560"
  },
  {
    "text": "send to your applications and to control",
    "start": "21560",
    "end": "24880"
  },
  {
    "text": "access to your content previously you",
    "start": "24880",
    "end": "28199"
  },
  {
    "start": "27000",
    "end": "104000"
  },
  {
    "text": "are to create a regex pattern set which",
    "start": "28199",
    "end": "31640"
  },
  {
    "text": "provides a collection of regex patterns",
    "start": "31640",
    "end": "34520"
  },
  {
    "text": "in a rule statement even if you want to",
    "start": "34520",
    "end": "37600"
  },
  {
    "text": "use just a single regex pattern in your",
    "start": "37600",
    "end": "41120"
  },
  {
    "text": "W Ru",
    "start": "41120",
    "end": "42320"
  },
  {
    "text": "logic with inline regx you can now",
    "start": "42320",
    "end": "45680"
  },
  {
    "text": "include a single regex pattern directly",
    "start": "45680",
    "end": "49000"
  },
  {
    "text": "inside the W rule statement simplifying",
    "start": "49000",
    "end": "52000"
  },
  {
    "text": "how W rules are expressed within your",
    "start": "52000",
    "end": "55239"
  },
  {
    "text": "web AC in addition inline regex we",
    "start": "55239",
    "end": "60199"
  },
  {
    "text": "definitely reduce the amount of web ACL",
    "start": "60199",
    "end": "63239"
  },
  {
    "text": "capacity units you used compared to the",
    "start": "63239",
    "end": "66400"
  },
  {
    "text": "regex pattern",
    "start": "66400",
    "end": "69200"
  },
  {
    "text": "set awsw uses wcu to calculate and",
    "start": "69200",
    "end": "74360"
  },
  {
    "text": "control the operating resources that are",
    "start": "74360",
    "end": "76799"
  },
  {
    "text": "required to run your rules rule groups",
    "start": "76799",
    "end": "80159"
  },
  {
    "text": "and web",
    "start": "80159",
    "end": "81720"
  },
  {
    "text": "ACL there's no additional cost for using",
    "start": "81720",
    "end": "85000"
  },
  {
    "text": "inline R deex in your Ru statement but",
    "start": "85000",
    "end": "88680"
  },
  {
    "text": "standard service charged for AWS W still",
    "start": "88680",
    "end": "93200"
  },
  {
    "text": "apply support for inline regex match is",
    "start": "93200",
    "end": "97200"
  },
  {
    "text": "available in all AWS W regions and for",
    "start": "97200",
    "end": "101280"
  },
  {
    "text": "each supported services our use case",
    "start": "101280",
    "end": "104640"
  },
  {
    "start": "104000",
    "end": "123000"
  },
  {
    "text": "will include the",
    "start": "104640",
    "end": "106520"
  },
  {
    "text": "following to create inline regular",
    "start": "106520",
    "end": "109159"
  },
  {
    "text": "expression within a r statement to test",
    "start": "109159",
    "end": "112840"
  },
  {
    "text": "the inline regular expression within the",
    "start": "112840",
    "end": "116600"
  },
  {
    "text": "rule statement let's go into the WS",
    "start": "116600",
    "end": "120280"
  },
  {
    "text": "console for a brief demonstration from",
    "start": "120280",
    "end": "123280"
  },
  {
    "start": "123000",
    "end": "625000"
  },
  {
    "text": "the AWS console search for w and shield",
    "start": "123280",
    "end": "127119"
  },
  {
    "text": "in the search",
    "start": "127119",
    "end": "129798"
  },
  {
    "text": "box and click on W and",
    "start": "131280",
    "end": "135959"
  },
  {
    "text": "shield click on create web as here now",
    "start": "138720",
    "end": "143160"
  },
  {
    "text": "we have given our web ACL a name a",
    "start": "143160",
    "end": "147280"
  },
  {
    "text": "description and a cloud watch metric",
    "start": "147280",
    "end": "151760"
  },
  {
    "text": "name for this demo I've chosen our",
    "start": "152200",
    "end": "155760"
  },
  {
    "text": "resource type as Regional resources but",
    "start": "155760",
    "end": "159800"
  },
  {
    "text": "customers can also use Amazon cloudfront",
    "start": "159800",
    "end": "165080"
  },
  {
    "text": "distributions for this demo also I've",
    "start": "165080",
    "end": "167640"
  },
  {
    "text": "chosen our region to be us one but",
    "start": "167640",
    "end": "171040"
  },
  {
    "text": "customers can select from other",
    "start": "171040",
    "end": "174959"
  },
  {
    "text": "regions also I've Associated our web ACL",
    "start": "174959",
    "end": "179920"
  },
  {
    "text": "with an application load",
    "start": "179920",
    "end": "182120"
  },
  {
    "text": "balancer then we click on next here",
    "start": "182120",
    "end": "187120"
  },
  {
    "text": "customers have the option to use AWS",
    "start": "187120",
    "end": "191200"
  },
  {
    "text": "manage rules but this demonstration will",
    "start": "191200",
    "end": "195840"
  },
  {
    "text": "be for a custom",
    "start": "195840",
    "end": "198519"
  },
  {
    "text": "rule select add my own rules and Rule",
    "start": "198519",
    "end": "203760"
  },
  {
    "text": "groups from the add rules drop down we",
    "start": "203760",
    "end": "207799"
  },
  {
    "text": "select the rule Builder that will be the",
    "start": "207799",
    "end": "210519"
  },
  {
    "text": "first step to build our own",
    "start": "210519",
    "end": "212959"
  },
  {
    "text": "R the goal of this Ru is to March our",
    "start": "212959",
    "end": "216799"
  },
  {
    "text": "inline regular expression in a query",
    "start": "216799",
    "end": "219840"
  },
  {
    "text": "string then if there's a match we want",
    "start": "219840",
    "end": "223239"
  },
  {
    "text": "AWS W to block the request also we will",
    "start": "223239",
    "end": "228080"
  },
  {
    "text": "be including a URI part that starts with",
    "start": "228080",
    "end": "231200"
  },
  {
    "text": "a string and creating our",
    "start": "231200",
    "end": "235159"
  },
  {
    "text": "Command under Ru Builder you can use the",
    "start": "235159",
    "end": "239079"
  },
  {
    "text": "rule visual editor or the ru Json",
    "start": "239079",
    "end": "245239"
  },
  {
    "text": "editor so we will stick with the r",
    "start": "245920",
    "end": "248760"
  },
  {
    "text": "visual",
    "start": "248760",
    "end": "251519"
  },
  {
    "text": "editor we have a name provided for our",
    "start": "253319",
    "end": "258040"
  },
  {
    "text": "rule for this demo we choose a regular",
    "start": "258040",
    "end": "262639"
  },
  {
    "text": "rule",
    "start": "262639",
    "end": "263680"
  },
  {
    "text": "type customers can also choose the rate",
    "start": "263680",
    "end": "267000"
  },
  {
    "text": "based rule type if they want to limit",
    "start": "267000",
    "end": "270560"
  },
  {
    "text": "the number of request allowed in a 5",
    "start": "270560",
    "end": "274039"
  },
  {
    "text": "minute",
    "start": "274039",
    "end": "276600"
  },
  {
    "text": "period under if a",
    "start": "277400",
    "end": "280360"
  },
  {
    "text": "request we have a couple of options for",
    "start": "280360",
    "end": "284320"
  },
  {
    "text": "monitoring your request based on the",
    "start": "284320",
    "end": "287240"
  },
  {
    "text": "request that will be created",
    "start": "287240",
    "end": "291440"
  },
  {
    "text": "below you can either inspect your",
    "start": "292280",
    "end": "295560"
  },
  {
    "text": "traffic that matches the",
    "start": "295560",
    "end": "298560"
  },
  {
    "text": "statement or you are creating multiple",
    "start": "298560",
    "end": "302240"
  },
  {
    "text": "statements or you want to apply logical",
    "start": "302240",
    "end": "306919"
  },
  {
    "text": "operations on how you want your request",
    "start": "306919",
    "end": "309880"
  },
  {
    "text": "to match a statement you can choose any",
    "start": "309880",
    "end": "313320"
  },
  {
    "text": "of these options as it applies to your",
    "start": "313320",
    "end": "316759"
  },
  {
    "text": "use",
    "start": "316759",
    "end": "317680"
  },
  {
    "text": "case for this",
    "start": "317680",
    "end": "319759"
  },
  {
    "text": "demo we choose matches all the",
    "start": "319759",
    "end": "323080"
  },
  {
    "text": "statements",
    "start": "323080",
    "end": "325918"
  },
  {
    "text": "hand the reason for this choice",
    "start": "326560",
    "end": "330080"
  },
  {
    "text": "is because we want our request to",
    "start": "330080",
    "end": "332800"
  },
  {
    "text": "inspect an URI part and our regular",
    "start": "332800",
    "end": "338520"
  },
  {
    "text": "expression to be inspected in the query",
    "start": "338520",
    "end": "344039"
  },
  {
    "text": "string for statement",
    "start": "345880",
    "end": "349759"
  },
  {
    "text": "one for inspect we select URI part from",
    "start": "351039",
    "end": "356000"
  },
  {
    "text": "the drop down as we will be including a",
    "start": "356000",
    "end": "359120"
  },
  {
    "text": "u part doing our match",
    "start": "359120",
    "end": "364039"
  },
  {
    "text": "testing for match type we select start",
    "start": "364840",
    "end": "370199"
  },
  {
    "text": "with string from the dropdown as the",
    "start": "370199",
    "end": "373440"
  },
  {
    "text": "inspection of the URI part we start with",
    "start": "373440",
    "end": "377160"
  },
  {
    "text": "a",
    "start": "377160",
    "end": "379319"
  },
  {
    "text": "string for strings to match we type a",
    "start": "380599",
    "end": "385319"
  },
  {
    "text": "double forward",
    "start": "385319",
    "end": "386759"
  },
  {
    "text": "slash this would help to detect htttp",
    "start": "386759",
    "end": "391680"
  },
  {
    "text": "request with double for slash in the",
    "start": "391680",
    "end": "395800"
  },
  {
    "text": "query command and query string with a",
    "start": "395800",
    "end": "399160"
  },
  {
    "text": "random string of",
    "start": "399160",
    "end": "402720"
  },
  {
    "text": "characters for test transformation we",
    "start": "405919",
    "end": "408560"
  },
  {
    "text": "leave it as",
    "start": "408560",
    "end": "411120"
  },
  {
    "text": "none for statement",
    "start": "412240",
    "end": "415840"
  },
  {
    "text": "two for inspect we select",
    "start": "415840",
    "end": "420080"
  },
  {
    "text": "query",
    "start": "420080",
    "end": "421000"
  },
  {
    "text": "string from the drop down as we need a",
    "start": "421000",
    "end": "425120"
  },
  {
    "text": "query to inspect our inline regular",
    "start": "425120",
    "end": "428960"
  },
  {
    "text": "expression",
    "start": "428960",
    "end": "431319"
  },
  {
    "text": "match for match",
    "start": "431319",
    "end": "433639"
  },
  {
    "text": "type we select matches regular",
    "start": "433639",
    "end": "437400"
  },
  {
    "text": "expression from the",
    "start": "437400",
    "end": "438960"
  },
  {
    "text": "dropdown as this relate to the main",
    "start": "438960",
    "end": "442199"
  },
  {
    "text": "topic of the video it allow us to",
    "start": "442199",
    "end": "445639"
  },
  {
    "text": "include inline regular statement in our",
    "start": "445639",
    "end": "449599"
  },
  {
    "text": "rule instead of using a regular",
    "start": "449599",
    "end": "453560"
  },
  {
    "text": "expression pattern",
    "start": "453560",
    "end": "455879"
  },
  {
    "text": "set for regular",
    "start": "455879",
    "end": "458120"
  },
  {
    "text": "expression type the regular expression",
    "start": "458120",
    "end": "460800"
  },
  {
    "text": "of your",
    "start": "460800",
    "end": "462680"
  },
  {
    "text": "choice for test",
    "start": "462680",
    "end": "466120"
  },
  {
    "text": "transformation we",
    "start": "466120",
    "end": "468720"
  },
  {
    "text": "select URL decode uni code from the drop",
    "start": "468720",
    "end": "474680"
  },
  {
    "text": "down this is needed for the URL encoded",
    "start": "474680",
    "end": "478879"
  },
  {
    "text": "data in the query string and part of a",
    "start": "478879",
    "end": "482080"
  },
  {
    "text": "URL to be decoded by the web server to",
    "start": "482080",
    "end": "485840"
  },
  {
    "text": "retrieve the original",
    "start": "485840",
    "end": "489960"
  },
  {
    "text": "data under",
    "start": "491120",
    "end": "493479"
  },
  {
    "text": "action we are selecting",
    "start": "493479",
    "end": "496280"
  },
  {
    "text": "block this is telling AWS W the action",
    "start": "496280",
    "end": "500319"
  },
  {
    "text": "to take when a request match the",
    "start": "500319",
    "end": "503520"
  },
  {
    "text": "statement we have listed",
    "start": "503520",
    "end": "507400"
  },
  {
    "text": "above there are options customer can",
    "start": "507400",
    "end": "510319"
  },
  {
    "text": "choose from we have",
    "start": "510319",
    "end": "513479"
  },
  {
    "text": "allow this allows the request to be",
    "start": "513479",
    "end": "516240"
  },
  {
    "text": "forwarded to the protected AWA resource",
    "start": "516240",
    "end": "519440"
  },
  {
    "text": "for processing and",
    "start": "519440",
    "end": "522279"
  },
  {
    "text": "response we also have count this is",
    "start": "522279",
    "end": "525600"
  },
  {
    "text": "saying AWS should count the request but",
    "start": "525600",
    "end": "528320"
  },
  {
    "text": "does not determine whether to allow it",
    "start": "528320",
    "end": "530560"
  },
  {
    "text": "or block",
    "start": "530560",
    "end": "532760"
  },
  {
    "text": "it we have capture and challenge you can",
    "start": "532760",
    "end": "536680"
  },
  {
    "text": "configure your AWS W rules to run a",
    "start": "536680",
    "end": "540440"
  },
  {
    "text": "capture or challenge action against web",
    "start": "540440",
    "end": "544040"
  },
  {
    "text": "requests that match your rules",
    "start": "544040",
    "end": "547519"
  },
  {
    "text": "inspection",
    "start": "547519",
    "end": "550279"
  },
  {
    "text": "criteria then we click on ADD Rule now",
    "start": "550279",
    "end": "555800"
  },
  {
    "text": "we can see some details about our rule",
    "start": "555800",
    "end": "559320"
  },
  {
    "text": "which include the name the capacity and",
    "start": "559320",
    "end": "563079"
  },
  {
    "text": "the",
    "start": "563079",
    "end": "564320"
  },
  {
    "text": "action",
    "start": "564320",
    "end": "566160"
  },
  {
    "text": "then we have to decide on the default",
    "start": "566160",
    "end": "569519"
  },
  {
    "text": "web actions for requests that don't",
    "start": "569519",
    "end": "573120"
  },
  {
    "text": "match any rules we have created to recap",
    "start": "573120",
    "end": "577680"
  },
  {
    "text": "we have created a rule that says if the",
    "start": "577680",
    "end": "580480"
  },
  {
    "text": "inline regular expression matches the",
    "start": "580480",
    "end": "582839"
  },
  {
    "text": "query spring we want to block it so the",
    "start": "582839",
    "end": "588079"
  },
  {
    "text": "web ACL default for request that don't",
    "start": "588079",
    "end": "591200"
  },
  {
    "text": "match this rule we allow",
    "start": "591200",
    "end": "595200"
  },
  {
    "text": "it then we click on next yeah then we we",
    "start": "595200",
    "end": "599240"
  },
  {
    "text": "select next",
    "start": "599240",
    "end": "602160"
  },
  {
    "text": "again we leave everything as default",
    "start": "602640",
    "end": "605560"
  },
  {
    "text": "here and we select",
    "start": "605560",
    "end": "608320"
  },
  {
    "text": "next here we can review everything we",
    "start": "608320",
    "end": "611440"
  },
  {
    "text": "have created and uh we can edit any step",
    "start": "611440",
    "end": "616120"
  },
  {
    "text": "if we need",
    "start": "616120",
    "end": "618760"
  },
  {
    "text": "to scroll down and you click on create",
    "start": "618959",
    "end": "623160"
  },
  {
    "text": "web ACL now that we have our web ACL",
    "start": "623160",
    "end": "627320"
  },
  {
    "start": "625000",
    "end": "840000"
  },
  {
    "text": "rule created let's test this out for a",
    "start": "627320",
    "end": "631680"
  },
  {
    "text": "brief overview we are saying that any",
    "start": "631680",
    "end": "634480"
  },
  {
    "text": "inline regular expression that we have",
    "start": "634480",
    "end": "637680"
  },
  {
    "text": "created within the rule that matches",
    "start": "637680",
    "end": "640120"
  },
  {
    "text": "with the characters in The query",
    "start": "640120",
    "end": "644360"
  },
  {
    "text": "string we want AWS W to block it as I",
    "start": "645519",
    "end": "649959"
  },
  {
    "text": "have mentioned earlier on and this is",
    "start": "649959",
    "end": "652200"
  },
  {
    "text": "the action",
    "start": "652200",
    "end": "654839"
  },
  {
    "text": "here we need to create a command based",
    "start": "654880",
    "end": "659040"
  },
  {
    "text": "Bas on the rule created to dictate HTTP",
    "start": "659040",
    "end": "663480"
  },
  {
    "text": "request which is for our load balancer",
    "start": "663480",
    "end": "667839"
  },
  {
    "text": "with double forward slash which is right",
    "start": "667839",
    "end": "673079"
  },
  {
    "text": "here and query string with a random",
    "start": "673079",
    "end": "677000"
  },
  {
    "text": "string of characters that are between 37",
    "start": "677000",
    "end": "681360"
  },
  {
    "text": "and 40 character long which is right",
    "start": "681360",
    "end": "686320"
  },
  {
    "text": "here so with test this out from our",
    "start": "687200",
    "end": "690720"
  },
  {
    "text": "terminal using the call command first we",
    "start": "690720",
    "end": "694560"
  },
  {
    "text": "want to make sure that we're able to get",
    "start": "694560",
    "end": "696839"
  },
  {
    "text": "access to our application load balancer",
    "start": "696839",
    "end": "701839"
  },
  {
    "text": "first okay so this is good we have",
    "start": "715240",
    "end": "717880"
  },
  {
    "text": "access to our our load balancer the",
    "start": "717880",
    "end": "720399"
  },
  {
    "text": "application load balancer so the next",
    "start": "720399",
    "end": "722440"
  },
  {
    "text": "thing we want to do is that we want to",
    "start": "722440",
    "end": "724279"
  },
  {
    "text": "test this out you know writing out our",
    "start": "724279",
    "end": "727120"
  },
  {
    "text": "own command by using this call command",
    "start": "727120",
    "end": "731279"
  },
  {
    "text": "with this rule that we have created to",
    "start": "731279",
    "end": "734360"
  },
  {
    "text": "the application load balancer and the",
    "start": "734360",
    "end": "737320"
  },
  {
    "text": "response we are trying to see here is to",
    "start": "737320",
    "end": "739680"
  },
  {
    "text": "see that we have this action blocked uh",
    "start": "739680",
    "end": "743320"
  },
  {
    "text": "because what we have there as our inline",
    "start": "743320",
    "end": "746320"
  },
  {
    "text": "regular expression since it's going to",
    "start": "746320",
    "end": "748560"
  },
  {
    "text": "match up with what we have in the string",
    "start": "748560",
    "end": "750760"
  },
  {
    "text": "here so our expectation you know for the",
    "start": "750760",
    "end": "753519"
  },
  {
    "text": "response is for this request to be",
    "start": "753519",
    "end": "758040"
  },
  {
    "text": "blocked so before I run this command",
    "start": "765839",
    "end": "768760"
  },
  {
    "text": "couple of things uh that I wanted to",
    "start": "768760",
    "end": "771519"
  },
  {
    "text": "mention is to the get option that you",
    "start": "771519",
    "end": "774519"
  },
  {
    "text": "are seeing here is to help us retrieve",
    "start": "774519",
    "end": "777279"
  },
  {
    "text": "our http",
    "start": "777279",
    "end": "779639"
  },
  {
    "text": "and also when you look at here the",
    "start": "779639",
    "end": "782600"
  },
  {
    "text": "double forward slash that we have here",
    "start": "782600",
    "end": "785440"
  },
  {
    "text": "was actually included in our rules over",
    "start": "785440",
    "end": "789160"
  },
  {
    "text": "here and everything you are seeing here",
    "start": "789160",
    "end": "792440"
  },
  {
    "text": "also is the URL part you know that we",
    "start": "792440",
    "end": "795639"
  },
  {
    "text": "Define for our query",
    "start": "795639",
    "end": "798360"
  },
  {
    "text": "parameter so need to see the response",
    "start": "798360",
    "end": "802240"
  },
  {
    "text": "now so this tells us that uh the request",
    "start": "802240",
    "end": "807839"
  },
  {
    "text": "was blocked which means that our rule",
    "start": "807839",
    "end": "810560"
  },
  {
    "text": "does",
    "start": "810560",
    "end": "811440"
  },
  {
    "text": "work so in this video what we have done",
    "start": "811440",
    "end": "814720"
  },
  {
    "text": "is that we created an inline regular",
    "start": "814720",
    "end": "818120"
  },
  {
    "text": "expression instead of using the regular",
    "start": "818120",
    "end": "821600"
  },
  {
    "text": "expression pattern set so we specify in",
    "start": "821600",
    "end": "824959"
  },
  {
    "text": "our rule that if the inline regular",
    "start": "824959",
    "end": "828480"
  },
  {
    "text": "expression matches what we have in the",
    "start": "828480",
    "end": "830519"
  },
  {
    "text": "query string we want AWS W to block it",
    "start": "830519",
    "end": "834920"
  },
  {
    "text": "and that is what happened we can see",
    "start": "834920",
    "end": "837480"
  },
  {
    "text": "that the request was blocked",
    "start": "837480",
    "end": "840000"
  },
  {
    "start": "840000",
    "end": "852000"
  },
  {
    "text": "to learn more about AWS W regular",
    "start": "840000",
    "end": "843480"
  },
  {
    "text": "expressions and more information about",
    "start": "843480",
    "end": "845800"
  },
  {
    "text": "the service visit the awsw documentation",
    "start": "845800",
    "end": "850160"
  },
  {
    "text": "thank",
    "start": "850160",
    "end": "851480"
  },
  {
    "text": "you",
    "start": "851480",
    "end": "854480"
  }
]