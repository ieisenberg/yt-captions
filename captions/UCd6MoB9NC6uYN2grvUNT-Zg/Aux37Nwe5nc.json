[
  {
    "start": "0",
    "end": "64000"
  },
  {
    "text": "my name is david deluca i'm a senior",
    "start": "1280",
    "end": "3600"
  },
  {
    "text": "storage solutions architect at amazon",
    "start": "3600",
    "end": "5759"
  },
  {
    "text": "web services",
    "start": "5759",
    "end": "7680"
  },
  {
    "text": "i'm here today to demonstrate the amazon",
    "start": "7680",
    "end": "9760"
  },
  {
    "text": "elastic file system",
    "start": "9760",
    "end": "11920"
  },
  {
    "text": "let's get started amazon efs",
    "start": "11920",
    "end": "15440"
  },
  {
    "text": "is a simple fully managed cloud native",
    "start": "15440",
    "end": "17760"
  },
  {
    "text": "file system",
    "start": "17760",
    "end": "19199"
  },
  {
    "text": "efs provides serverless shared storage",
    "start": "19199",
    "end": "21680"
  },
  {
    "text": "so you don't need to provision or manage",
    "start": "21680",
    "end": "23519"
  },
  {
    "text": "any infrastructure or capacity",
    "start": "23519",
    "end": "26000"
  },
  {
    "text": "efs file systems support up to tens of",
    "start": "26000",
    "end": "28320"
  },
  {
    "text": "thousands of concurrent clients",
    "start": "28320",
    "end": "31039"
  },
  {
    "text": "efs is elastic and can grow to petabytes",
    "start": "31039",
    "end": "33760"
  },
  {
    "text": "in size",
    "start": "33760",
    "end": "35120"
  },
  {
    "text": "you only pay for what you use and",
    "start": "35120",
    "end": "37040"
  },
  {
    "text": "performance automatically scales with",
    "start": "37040",
    "end": "38960"
  },
  {
    "text": "capacity",
    "start": "38960",
    "end": "40320"
  },
  {
    "text": "it is also highly available and highly",
    "start": "40320",
    "end": "42840"
  },
  {
    "text": "durable",
    "start": "42840",
    "end": "44160"
  },
  {
    "text": "in terms of performance efs file systems",
    "start": "44160",
    "end": "47039"
  },
  {
    "text": "provide",
    "start": "47039",
    "end": "47520"
  },
  {
    "text": "low consistent latencies and high",
    "start": "47520",
    "end": "49760"
  },
  {
    "text": "throughput and iops",
    "start": "49760",
    "end": "52800"
  },
  {
    "text": "finally efs offers multiple storage",
    "start": "52879",
    "end": "55680"
  },
  {
    "text": "classes",
    "start": "55680",
    "end": "56399"
  },
  {
    "text": "as well as life cycle policies for cost",
    "start": "56399",
    "end": "58879"
  },
  {
    "text": "optimization",
    "start": "58879",
    "end": "61280"
  },
  {
    "text": "now let's move on to a demonstration",
    "start": "61280",
    "end": "64799"
  },
  {
    "start": "64000",
    "end": "105000"
  },
  {
    "text": "here we are in the aws management",
    "start": "65280",
    "end": "66960"
  },
  {
    "text": "console",
    "start": "66960",
    "end": "68799"
  },
  {
    "text": "efs is located under the storage",
    "start": "68799",
    "end": "70840"
  },
  {
    "text": "category",
    "start": "70840",
    "end": "73840"
  },
  {
    "text": "an efs file system can be created in",
    "start": "73840",
    "end": "76240"
  },
  {
    "text": "seconds",
    "start": "76240",
    "end": "77520"
  },
  {
    "text": "on the main efs page simply click create",
    "start": "77520",
    "end": "80400"
  },
  {
    "text": "file system",
    "start": "80400",
    "end": "82880"
  },
  {
    "text": "you have the option of naming it you",
    "start": "82880",
    "end": "86000"
  },
  {
    "text": "then assign it to a vpc",
    "start": "86000",
    "end": "89280"
  },
  {
    "text": "and select regional or one zone then",
    "start": "89280",
    "end": "92320"
  },
  {
    "text": "click create",
    "start": "92320",
    "end": "95040"
  },
  {
    "text": "it only takes a few seconds to be",
    "start": "95600",
    "end": "97200"
  },
  {
    "text": "created",
    "start": "97200",
    "end": "99600"
  },
  {
    "text": "the file system is now available and has",
    "start": "99600",
    "end": "101680"
  },
  {
    "text": "been configured with the default values",
    "start": "101680",
    "end": "105520"
  },
  {
    "start": "105000",
    "end": "285000"
  },
  {
    "text": "let's create another efs file system",
    "start": "106399",
    "end": "109360"
  },
  {
    "text": "this time we'll walk through the",
    "start": "109360",
    "end": "110560"
  },
  {
    "text": "customized steps and explain each",
    "start": "110560",
    "end": "112399"
  },
  {
    "text": "setting in more detail",
    "start": "112399",
    "end": "115280"
  },
  {
    "text": "once again we have the option of naming",
    "start": "115280",
    "end": "117040"
  },
  {
    "text": "the file system",
    "start": "117040",
    "end": "119520"
  },
  {
    "text": "you then assign it to a vpc if you're",
    "start": "119520",
    "end": "122479"
  },
  {
    "text": "planning to access this file system from",
    "start": "122479",
    "end": "124399"
  },
  {
    "text": "on-premises",
    "start": "124399",
    "end": "125600"
  },
  {
    "text": "be sure to select a vpc that is routable",
    "start": "125600",
    "end": "127920"
  },
  {
    "text": "from your vpn",
    "start": "127920",
    "end": "128959"
  },
  {
    "text": "or direct connect link amazon efs",
    "start": "128959",
    "end": "132319"
  },
  {
    "text": "offers the choice of creating the file",
    "start": "132319",
    "end": "133920"
  },
  {
    "text": "system using regional",
    "start": "133920",
    "end": "135520"
  },
  {
    "text": "or one zone storage classes",
    "start": "135520",
    "end": "138800"
  },
  {
    "text": "regional storage classes store the data",
    "start": "138800",
    "end": "141040"
  },
  {
    "text": "within and across",
    "start": "141040",
    "end": "142560"
  },
  {
    "text": "multiple availability zones one's own",
    "start": "142560",
    "end": "145920"
  },
  {
    "text": "storage classes",
    "start": "145920",
    "end": "147120"
  },
  {
    "text": "store the data redundantly within a",
    "start": "147120",
    "end": "149200"
  },
  {
    "text": "single availability zone",
    "start": "149200",
    "end": "150800"
  },
  {
    "text": "at a lower cost for workloads that don't",
    "start": "150800",
    "end": "153280"
  },
  {
    "text": "require",
    "start": "153280",
    "end": "154000"
  },
  {
    "text": "multi-availability zone resilience",
    "start": "154000",
    "end": "157840"
  },
  {
    "text": "this time we'll click customize to take",
    "start": "158080",
    "end": "160080"
  },
  {
    "text": "a closer look at the options",
    "start": "160080",
    "end": "162879"
  },
  {
    "text": "by default automatic backups are enabled",
    "start": "162879",
    "end": "165519"
  },
  {
    "text": "and will create a daily snapshot of the",
    "start": "165519",
    "end": "167120"
  },
  {
    "text": "file system",
    "start": "167120",
    "end": "169200"
  },
  {
    "text": "you can also leverage lifecycle",
    "start": "169200",
    "end": "170720"
  },
  {
    "text": "management by specifying the number of",
    "start": "170720",
    "end": "172879"
  },
  {
    "text": "days that must elapse",
    "start": "172879",
    "end": "174160"
  },
  {
    "text": "for an inactive file to move to the",
    "start": "174160",
    "end": "176319"
  },
  {
    "text": "infrequent access tier",
    "start": "176319",
    "end": "179760"
  },
  {
    "text": "for performance considerations most",
    "start": "180800",
    "end": "183200"
  },
  {
    "text": "customers will select general purpose",
    "start": "183200",
    "end": "185599"
  },
  {
    "text": "however certain workloads such as big",
    "start": "185599",
    "end": "188000"
  },
  {
    "text": "data analytics",
    "start": "188000",
    "end": "189280"
  },
  {
    "text": "media processing and genomic analysis",
    "start": "189280",
    "end": "192080"
  },
  {
    "text": "may benefit from the max i o setting",
    "start": "192080",
    "end": "194879"
  },
  {
    "text": "please note that this setting cannot be",
    "start": "194879",
    "end": "196480"
  },
  {
    "text": "modified once the file system",
    "start": "196480",
    "end": "198000"
  },
  {
    "text": "has been created",
    "start": "198000",
    "end": "200879"
  },
  {
    "text": "along those same lines the bursting",
    "start": "202400",
    "end": "204879"
  },
  {
    "text": "throughput mode will meet many customer",
    "start": "204879",
    "end": "206799"
  },
  {
    "text": "requirements",
    "start": "206799",
    "end": "208319"
  },
  {
    "text": "this mode automatically scales",
    "start": "208319",
    "end": "210000"
  },
  {
    "text": "throughput as the file system grows",
    "start": "210000",
    "end": "213440"
  },
  {
    "text": "you can also select provisioned and",
    "start": "213440",
    "end": "215599"
  },
  {
    "text": "specify a fixed throughput",
    "start": "215599",
    "end": "217519"
  },
  {
    "text": "in megabytes per second",
    "start": "217519",
    "end": "220720"
  },
  {
    "text": "your data is encrypted by default",
    "start": "221680",
    "end": "225360"
  },
  {
    "text": "and like any aws service you can always",
    "start": "225360",
    "end": "227760"
  },
  {
    "text": "add tags to help identify",
    "start": "227760",
    "end": "229599"
  },
  {
    "text": "and track your resources notice one",
    "start": "229599",
    "end": "232720"
  },
  {
    "text": "setting that appears to be missing",
    "start": "232720",
    "end": "234560"
  },
  {
    "text": "you do not specify the size of the file",
    "start": "234560",
    "end": "236640"
  },
  {
    "text": "system",
    "start": "236640",
    "end": "238000"
  },
  {
    "text": "it will be automatically created at a",
    "start": "238000",
    "end": "239599"
  },
  {
    "text": "minimal size and will expand as needed",
    "start": "239599",
    "end": "244080"
  },
  {
    "text": "because we selected regional for the",
    "start": "244879",
    "end": "246640"
  },
  {
    "text": "availability",
    "start": "246640",
    "end": "248000"
  },
  {
    "text": "efs automatically created a mount point",
    "start": "248000",
    "end": "250239"
  },
  {
    "text": "for all availability zones within that",
    "start": "250239",
    "end": "252400"
  },
  {
    "text": "region",
    "start": "252400",
    "end": "253680"
  },
  {
    "text": "this screen gives you the ability to",
    "start": "253680",
    "end": "255120"
  },
  {
    "text": "specify the subnet",
    "start": "255120",
    "end": "257040"
  },
  {
    "text": "ip address and security group for each",
    "start": "257040",
    "end": "260160"
  },
  {
    "text": "mount point",
    "start": "260160",
    "end": "262400"
  },
  {
    "text": "had we selected one zone we would have",
    "start": "262400",
    "end": "264479"
  },
  {
    "text": "only seen a single availability zone",
    "start": "264479",
    "end": "266639"
  },
  {
    "text": "on the screen finally",
    "start": "266639",
    "end": "270000"
  },
  {
    "text": "you have the option of overriding the",
    "start": "270000",
    "end": "271759"
  },
  {
    "text": "default file permissions",
    "start": "271759",
    "end": "275040"
  },
  {
    "text": "the file system is now available",
    "start": "281040",
    "end": "284639"
  },
  {
    "start": "285000",
    "end": "352000"
  },
  {
    "text": "note that since it is empty the capacity",
    "start": "285280",
    "end": "287360"
  },
  {
    "text": "is only six kilobytes",
    "start": "287360",
    "end": "290080"
  },
  {
    "text": "the next step is to attach this file",
    "start": "290080",
    "end": "292160"
  },
  {
    "text": "system to a linux host",
    "start": "292160",
    "end": "294479"
  },
  {
    "text": "i'll be using two amazon ec2 instances",
    "start": "294479",
    "end": "298880"
  },
  {
    "text": "let's take a moment to look at the ec2",
    "start": "298880",
    "end": "300639"
  },
  {
    "text": "console to demonstrate the integration",
    "start": "300639",
    "end": "302720"
  },
  {
    "text": "between ec2",
    "start": "302720",
    "end": "304000"
  },
  {
    "text": "and efs we click launch",
    "start": "304000",
    "end": "307280"
  },
  {
    "text": "instance and select amazon",
    "start": "307280",
    "end": "310320"
  },
  {
    "text": "linux 2. for this demo",
    "start": "310320",
    "end": "313759"
  },
  {
    "text": "we will keep the default instance size",
    "start": "313759",
    "end": "317520"
  },
  {
    "text": "in the file system section you can",
    "start": "317520",
    "end": "319759"
  },
  {
    "text": "create an efs file system in just one",
    "start": "319759",
    "end": "322080"
  },
  {
    "text": "click",
    "start": "322080",
    "end": "323280"
  },
  {
    "text": "this is the same process that we walked",
    "start": "323280",
    "end": "324960"
  },
  {
    "text": "through in the efs console",
    "start": "324960",
    "end": "327199"
  },
  {
    "text": "and the file system will be created with",
    "start": "327199",
    "end": "328960"
  },
  {
    "text": "the default settings",
    "start": "328960",
    "end": "331280"
  },
  {
    "text": "once it has been created you click add",
    "start": "331280",
    "end": "333759"
  },
  {
    "text": "file system to instance",
    "start": "333759",
    "end": "335680"
  },
  {
    "text": "to automatically mount efs when the",
    "start": "335680",
    "end": "338240"
  },
  {
    "text": "instance boots up",
    "start": "338240",
    "end": "340800"
  },
  {
    "text": "you also have the option of attaching",
    "start": "340800",
    "end": "342479"
  },
  {
    "text": "any existing efs file systems",
    "start": "342479",
    "end": "346479"
  },
  {
    "text": "since i've already created two linux",
    "start": "346479",
    "end": "348320"
  },
  {
    "text": "instances i'm going to hit cancel",
    "start": "348320",
    "end": "352720"
  },
  {
    "start": "352000",
    "end": "413000"
  },
  {
    "text": "back in the efs console let's",
    "start": "352720",
    "end": "354800"
  },
  {
    "text": "demonstrate how to manually attach a",
    "start": "354800",
    "end": "356479"
  },
  {
    "text": "file system",
    "start": "356479",
    "end": "359199"
  },
  {
    "text": "when you click on attach you'll see a",
    "start": "359759",
    "end": "362400"
  },
  {
    "text": "couple of commands to mount the file",
    "start": "362400",
    "end": "364080"
  },
  {
    "text": "system",
    "start": "364080",
    "end": "365759"
  },
  {
    "text": "let's copy this bottom one into our",
    "start": "365759",
    "end": "367440"
  },
  {
    "text": "clipboard",
    "start": "367440",
    "end": "370000"
  },
  {
    "text": "this is one of the ec2 instances that i",
    "start": "370639",
    "end": "372720"
  },
  {
    "text": "created",
    "start": "372720",
    "end": "374960"
  },
  {
    "text": "the first thing we have to do is create",
    "start": "374960",
    "end": "376639"
  },
  {
    "text": "a mount point let's create a directory",
    "start": "376639",
    "end": "378880"
  },
  {
    "text": "called efs",
    "start": "378880",
    "end": "380080"
  },
  {
    "text": "to use as the mount point",
    "start": "380080",
    "end": "383120"
  },
  {
    "text": "now we can paste the attach command from",
    "start": "383120",
    "end": "385039"
  },
  {
    "text": "the clipboard",
    "start": "385039",
    "end": "387759"
  },
  {
    "text": "the file system is successfully mounted",
    "start": "389120",
    "end": "393039"
  },
  {
    "text": "as expected it is currently empty",
    "start": "393280",
    "end": "396800"
  },
  {
    "text": "let's download some data from an s3",
    "start": "396800",
    "end": "398639"
  },
  {
    "text": "bucket just to have some sample files",
    "start": "398639",
    "end": "400880"
  },
  {
    "text": "that we can work with",
    "start": "400880",
    "end": "403759"
  },
  {
    "text": "the download is complete and we now have",
    "start": "406160",
    "end": "408800"
  },
  {
    "text": "several files and folders",
    "start": "408800",
    "end": "410240"
  },
  {
    "text": "in our efs file system",
    "start": "410240",
    "end": "413520"
  },
  {
    "start": "413000",
    "end": "495000"
  },
  {
    "text": "a refresh of the console shows that the",
    "start": "413520",
    "end": "415599"
  },
  {
    "text": "file system has automatically expanded",
    "start": "415599",
    "end": "417759"
  },
  {
    "text": "to 2.99 gigabytes efs is of course a",
    "start": "417759",
    "end": "421919"
  },
  {
    "text": "shared file system",
    "start": "421919",
    "end": "423599"
  },
  {
    "text": "let's bring up a second linux instance",
    "start": "423599",
    "end": "425759"
  },
  {
    "text": "in which i've already mounted our efs",
    "start": "425759",
    "end": "427520"
  },
  {
    "text": "file system",
    "start": "427520",
    "end": "429440"
  },
  {
    "text": "so now we have two hosts connected as",
    "start": "429440",
    "end": "431840"
  },
  {
    "text": "two different users",
    "start": "431840",
    "end": "433199"
  },
  {
    "text": "looking at the same shared file system",
    "start": "433199",
    "end": "436319"
  },
  {
    "text": "lastly let's demonstrate that file",
    "start": "436319",
    "end": "438560"
  },
  {
    "text": "permissions maintain the posix standard",
    "start": "438560",
    "end": "442160"
  },
  {
    "text": "in this left window we are logged in as",
    "start": "442160",
    "end": "444319"
  },
  {
    "text": "the root user",
    "start": "444319",
    "end": "446639"
  },
  {
    "text": "if we create a file",
    "start": "446639",
    "end": "451840"
  },
  {
    "text": "we can see that the file has been",
    "start": "453440",
    "end": "454720"
  },
  {
    "text": "created with the default permissions",
    "start": "454720",
    "end": "456800"
  },
  {
    "text": "in which the owner has read and write",
    "start": "456800",
    "end": "458880"
  },
  {
    "text": "and everyone else has read only",
    "start": "458880",
    "end": "461759"
  },
  {
    "text": "from the other host we cannot edit the",
    "start": "461759",
    "end": "464240"
  },
  {
    "text": "file",
    "start": "464240",
    "end": "464800"
  },
  {
    "text": "since we are not logged in as the owner",
    "start": "464800",
    "end": "468080"
  },
  {
    "text": "if we change the permission to allow",
    "start": "468080",
    "end": "469919"
  },
  {
    "text": "full control for everyone",
    "start": "469919",
    "end": "473280"
  },
  {
    "text": "now the other user is able to edit the",
    "start": "473840",
    "end": "476840"
  },
  {
    "text": "file",
    "start": "476840",
    "end": "479280"
  },
  {
    "text": "the takeaway is that efs maintains posix",
    "start": "479280",
    "end": "481919"
  },
  {
    "text": "file permissions",
    "start": "481919",
    "end": "484000"
  },
  {
    "text": "this concludes our demonstration",
    "start": "484000",
    "end": "487199"
  },
  {
    "text": "to get started with amazon efs please",
    "start": "487199",
    "end": "489759"
  },
  {
    "text": "visit the link to the aws management",
    "start": "489759",
    "end": "491520"
  },
  {
    "text": "console",
    "start": "491520",
    "end": "492240"
  },
  {
    "text": "shown here thank you for your time",
    "start": "492240",
    "end": "497280"
  }
]