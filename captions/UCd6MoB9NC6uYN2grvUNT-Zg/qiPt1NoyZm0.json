[
  {
    "text": "JAMES SARYERWINNIE: Get started. Hi everyone. Welcome. Thank you all\nfor being here today.",
    "start": "400",
    "end": "7200"
  },
  {
    "text": "My name is James Saryerwinnie. I am a software development engineer\nat Amazon Web Services.",
    "start": "7200",
    "end": "12800"
  },
  {
    "text": "I work on the Python SDK as well\nas the AWS Command Line Interface,",
    "start": "12800",
    "end": "18000"
  },
  {
    "text": "which is what I'm going to be talking\nabout today. And we're going to look at not only how to install and configure the new CLI,",
    "start": "18000",
    "end": "24900"
  },
  {
    "text": "but we're also going to walk through\nthe major features of the CLI, as well as walking through an example",
    "start": "24900",
    "end": "30400"
  },
  {
    "text": "of how to set up a static blog using the CLI. But before we get into that,",
    "start": "30400",
    "end": "36900"
  },
  {
    "text": "what is the AWS Command Line Interface? It's a relatively new tool.",
    "start": "36900",
    "end": "42100"
  },
  {
    "text": "We just had our 1.0 release this\npast September, and it's a unified tool to manage\nyour AWS services.",
    "start": "42100",
    "end": "50900"
  },
  {
    "text": "And unified is key here. By unified, I mean that you have one tool that has one installation process\nand one configuration process,",
    "start": "50900",
    "end": "61100"
  },
  {
    "text": "and access to over two dozen AWS services. Now, it hasn't always been this way.",
    "start": "61100",
    "end": "68300"
  },
  {
    "text": "Historically, each service team has\nprovided their own CLI. So, you'd have a separate install and configuration process per CLI,",
    "start": "68300",
    "end": "75700"
  },
  {
    "text": "and there might be different prerequisites,\nJava or Ruby. And as the number of services grew,",
    "start": "75700",
    "end": "82600"
  },
  {
    "text": "we realized we had the opportunity to consolidate and unify the command land so that you had a consistent experience",
    "start": "82600",
    "end": "89300"
  },
  {
    "text": "across all of the different services. And that's what this new AWS Command\nLine Interface provides.",
    "start": "89300",
    "end": "96200"
  },
  {
    "text": "So, getting set up with the new CLI\nis very straightforward. I'm going to cover the installation\nand configuration process here.",
    "start": "96200",
    "end": "102799"
  },
  {
    "text": "We support all of the major platforms. So, Windows, Mac, Linux.",
    "start": "102800",
    "end": "108300"
  },
  {
    "text": "And on Windows, you have an MSI installer\navailable for you. So, you download the MSI, run through the steps,",
    "start": "108300",
    "end": "114600"
  },
  {
    "text": "and we'll set up the appropriate\nenvironment variables so you just have an AWS command available for you.",
    "start": "114600",
    "end": "121300"
  },
  {
    "text": "We also provide a bundled installer. So, a bundled installer has all the\ndependencies you need to install the CLI.",
    "start": "121300",
    "end": "128899"
  },
  {
    "text": "And the way that works is you download it, you unzip it, and there's an install script.",
    "start": "128900",
    "end": "134600"
  },
  {
    "text": "Now, by default, it will go in your\nhome directory. There are command line options that\nallow you to change where to install it or whether you\nwant to create a symlink",
    "start": "134600",
    "end": "142000"
  },
  {
    "text": "to somewhere that's on your path - and we'll look at an example of this\nin a few minutes.",
    "start": "142000",
    "end": "149200"
  },
  {
    "text": "So, the other option for installing\nthe CLI is pip. So, the CLI is written in Python.",
    "start": "149200",
    "end": "156300"
  },
  {
    "text": "It is a Python package. So, if there's any Python developers out there or anyone familiar with pip,",
    "start": "156300",
    "end": "161500"
  },
  {
    "text": "you can use that to install the CLI. You run pip install --upgrade aws cli",
    "start": "161500",
    "end": "167800"
  },
  {
    "text": "and you'll get the latest version\nof the CLI. You might have to use sudo depending\non how you have pip set up,",
    "start": "167800",
    "end": "174500"
  },
  {
    "text": "and if you're on a Linux distribution, generally, if you don't have pip available, you can run sudo apt-get install python-pip",
    "start": "174500",
    "end": "182700"
  },
  {
    "text": "or sudo yum install python-pip, and then you can use that install the CLI.",
    "start": "182700",
    "end": "189400"
  },
  {
    "text": "So, that's installation. For configuration, probably the most\nimportant part is how you manage your credentials.",
    "start": "189400",
    "end": "196300"
  },
  {
    "text": "And we have three options available for you. Probably the easiest is if you're\non an EC2 instance",
    "start": "196300",
    "end": "201500"
  },
  {
    "text": "and you launch it with an IAM Role, we'll automatically detect that and you don't have to do anything\nto configure your credentials.",
    "start": "201500",
    "end": "208700"
  },
  {
    "text": "So, you're all set. Just install the CLI and you're ready to go. We also provide environment variables.",
    "start": "208700",
    "end": "215000"
  },
  {
    "text": "So, you can export these variables\ninto your environment as a way to also set your credentials.",
    "start": "215000",
    "end": "222099"
  },
  {
    "text": "And the last option is a config file. So, there's a .AWS/config file",
    "start": "222100",
    "end": "227500"
  },
  {
    "text": "that you would provide these two\nvalues here, and we'll see what the specific syntax\nlooks like for the config file.",
    "start": "227500",
    "end": "234099"
  },
  {
    "text": "But if you do want to use the config\nfile to manage your credentials, we provide an easier way to get started,",
    "start": "234100",
    "end": "239800"
  },
  {
    "text": "and that's this configure command. So, once you install the CLI, you'll have an AWS executable,",
    "start": "239800",
    "end": "245799"
  },
  {
    "text": "and you run AWS configure and it will prompt you for some values here. Your Access Key, your Secret Key,",
    "start": "245800",
    "end": "251900"
  },
  {
    "text": "and then these two other options\nwe'll look at a little bit later. And once you've done that, if the\nconfig file does not exist,",
    "start": "251900",
    "end": "259600"
  },
  {
    "text": "we will create it for you. We will then write out the values\nfor whatever you've entered,",
    "start": "259600",
    "end": "265000"
  },
  {
    "text": "and you're all set. You can also use the configure command\nto update existing values.",
    "start": "265000",
    "end": "270100"
  },
  {
    "text": "So, if you want to change a value and you don't want to open it in an editor, you can use this AWS configure command.",
    "start": "270100",
    "end": "276300"
  },
  {
    "text": "The current value's presented in\nthe brackets, and then you just hit enter to accept\nthe current value or you enter a new value.",
    "start": "276300",
    "end": "283700"
  },
  {
    "text": "And also, if you have comments or existing formatting in your existing\nconfig file, we won't touch any of that.",
    "start": "283700",
    "end": "289000"
  },
  {
    "text": "So, you can use this to safely update any existing values in your configuration file.",
    "start": "289000",
    "end": "296600"
  },
  {
    "text": "Now, if you do want to create that\nconfig file by hand, which is perfectly fine, it would\nlook like this. You would have a default section.",
    "start": "296600",
    "end": "304199"
  },
  {
    "text": "You would then have the AWS Access Key ID and the AWS Secret Access Key,",
    "start": "304200",
    "end": "309699"
  },
  {
    "text": "as well as region and output if you want. So, you notice there's this default section.",
    "start": "309700",
    "end": "314800"
  },
  {
    "text": "So, you might be wondering are there\nother sections you can provide. Yes, and one of the most popular ones",
    "start": "314800",
    "end": "320599"
  },
  {
    "text": "is to configure additional profiles. So, you might imagine I have a testing profile",
    "start": "320600",
    "end": "326900"
  },
  {
    "text": "and a production profile, and then I can have different sections in there with different credentials, different regions,",
    "start": "326900",
    "end": "333500"
  },
  {
    "text": "and then when I run a command, I can say what profile to use. So, if you want to have all of those\nin a single config file,",
    "start": "333500",
    "end": "339300"
  },
  {
    "text": "you can do that, and we'll see an\nexample of that later. So, that is installation and configuration.",
    "start": "339300",
    "end": "349400"
  },
  {
    "text": "We're now ready to run services. So, I want to actually show how to\ndo this in a terminal here.",
    "start": "349400",
    "end": "357800"
  },
  {
    "text": "I know I went through that pretty quickly. But so, I'm at a terminal and I want\nto install the CLI.",
    "start": "357800",
    "end": "363400"
  },
  {
    "text": "We'll walk through those two steps\nwe just looked at. So, the first thing I do - and I'm going to show the bundled\ninstaller version.",
    "start": "363400",
    "end": "368900"
  },
  {
    "text": "So, the first thing we do, download\nthe bundled installer.",
    "start": "368900",
    "end": "374600"
  },
  {
    "text": "And once this is downloaded, we'll unzip it and then we'll look at those other\noptions I mentioned about where to install the CLI to.",
    "start": "374600",
    "end": "382900"
  },
  {
    "text": "So, we'll unzip it, go into this directory.",
    "start": "382900",
    "end": "388600"
  },
  {
    "text": "And so, there's these other options here, an INSTALL_DIR and a BIN_LOCATION. So, if you want to put it in, say, usr/local/aws or somewhere else,\nyou can do that.",
    "start": "388600",
    "end": "396900"
  },
  {
    "text": "And then, if you want to create a\nsymlink to, say, usr/bin/aws or something else on\nyour path, you can do that.",
    "start": "396900",
    "end": "402900"
  },
  {
    "text": "And so, in this case, I'll just say\nlet's install to democli just for the purposes\nof this demo.",
    "start": "402900",
    "end": "412500"
  },
  {
    "text": "And so, it requires no network access\nat this point. Everything it needs is self-contained. You do need Python, though,",
    "start": "412500",
    "end": "418100"
  },
  {
    "text": "and we support Python 2.6, 2.7, and\n3.3.",
    "start": "418100",
    "end": "423800"
  },
  {
    "text": "So, now that we've installed it,\nyou can run version. And it's in a self-contained directory,",
    "start": "423800",
    "end": "429400"
  },
  {
    "text": "so everything's in this tmp/democli. So, if I want to uninstall it, I\njust can remove that directory.",
    "start": "429400",
    "end": "435100"
  },
  {
    "text": "It doesn't put anything outside of\nthat directory. And at that this point, you can create a symlink or add it to your path or what I'm\ngoing to do",
    "start": "435100",
    "end": "441700"
  },
  {
    "text": "is just probably get an alias.",
    "start": "441700",
    "end": "448200"
  },
  {
    "text": "So, I have the CLI installed and\nI want to configure credentials.",
    "start": "448200",
    "end": "454000"
  },
  {
    "text": "I'll use a config file, and again, I have this pre-populated, but you'd enter your Access Key,\nyour Secret Key.",
    "start": "454000",
    "end": "460500"
  },
  {
    "text": "Region name I’m going to use us-west-2 here, and then the default output format,\nI don't have one.",
    "start": "460500",
    "end": "466100"
  },
  {
    "text": "And that's it. That is getting installed and configured\nwith the new CLI.",
    "start": "466100",
    "end": "476199"
  },
  {
    "text": "So, now we can run a command, and we'll go back to the terminal\nin a second, but I want to talk about the structure\nof a command. So, here's an example.",
    "start": "476200",
    "end": "481900"
  },
  {
    "text": "This is to describe all of the instances you have in a particular region.",
    "start": "481900",
    "end": "487100"
  },
  {
    "text": "And the syntax here, you start with aws. So, we only install a single executable,\nwhich is aws.",
    "start": "487100",
    "end": "494600"
  },
  {
    "text": "And then, you use the service name\nand the operation name.",
    "start": "494600",
    "end": "500600"
  },
  {
    "text": "And you'll see this output here which\nwe'll talk about in a second. But this general structure is the\nsame across all the services.",
    "start": "500600",
    "end": "506800"
  },
  {
    "text": "So, if you wanted to run, say, the\nlist users command for IAM,",
    "start": "506800",
    "end": "512500"
  },
  {
    "text": "it'd be aws iam list-users. It's that same general structure.",
    "start": "512500",
    "end": "519900"
  },
  {
    "text": "For arguments, this is an example\nof import-key-pair. So, if I have a public key, an SSH key and I want to import it,",
    "start": "519900",
    "end": "527100"
  },
  {
    "text": "we use the long option name, so --key-name\nand then the value.",
    "start": "527100",
    "end": "533399"
  },
  {
    "text": "And then here, we have the public-key-material, and this is the first thing I want\nto point out. You see this file:// and this is\na general pattern",
    "start": "533400",
    "end": "540500"
  },
  {
    "text": "that applies to all the values in the CLI, that you can provide a file:// prefix\nfor any value.",
    "start": "540500",
    "end": "547800"
  },
  {
    "text": "And what we'll do is open that file, read the contents of that file,",
    "start": "547800",
    "end": "553699"
  },
  {
    "text": "and use that as the value for that parameter. So, in this case, I'm saying the public-key-material\nis in this file location.",
    "start": "553700",
    "end": "560600"
  },
  {
    "text": "So, this might be good for things that are naturally suited to a file or if you have long or really complex\ninput parameters,",
    "start": "560600",
    "end": "567600"
  },
  {
    "text": "say an IAM policy or something, you\ncan use that.",
    "start": "567600",
    "end": "573199"
  },
  {
    "text": "This also applies to http and https. So, in this case, we'll retrieve\nthe contents of that URL",
    "start": "573200",
    "end": "579399"
  },
  {
    "text": "and then use that value as a parameter value. So, that's the first feature I wanted\nto go over.",
    "start": "579400",
    "end": "586700"
  },
  {
    "text": "Next, when you're using the CLI, a natural question is how do I know\nwhat arguments to use. Where do I find that information?",
    "start": "586700",
    "end": "592800"
  },
  {
    "text": "And so, you have two options really\navailable for you. First one is to just use help. So, when you do that, you can add\nhelp to the end of any command",
    "start": "592800",
    "end": "601200"
  },
  {
    "text": "and we'll pull up a Man Page for\nyou that has the name, the description, all the options\nand their documentation.",
    "start": "601200",
    "end": "609899"
  },
  {
    "text": "And in many cases, you'll have an\nexample, too, that shows specifically how to use\nthis command.",
    "start": "609900",
    "end": "617400"
  },
  {
    "text": "If you prefer HTML version, we have the exact same content rendered as HTML and hosted on our Docs site,",
    "start": "617400",
    "end": "623600"
  },
  {
    "text": "so docs.aws.amazon.com, and you can read the contents there.",
    "start": "623600",
    "end": "629200"
  },
  {
    "text": "So, if you prefer that, you can use\nthe Man Page or you can use the HTML docs.",
    "start": "629200",
    "end": "635000"
  },
  {
    "text": "And this applies to any tier of the command. So, you can run aws service operation help,",
    "start": "635000",
    "end": "641899"
  },
  {
    "text": "and it'll give you the examples we\njust looked at. If you run aws service help, that will give you a list of all\nthe available operations.",
    "start": "641900",
    "end": "649700"
  },
  {
    "text": "And then, if you just run aws help, it'll give you a list of all the\navailable services as well as top level commands",
    "start": "649700",
    "end": "655899"
  },
  {
    "text": "like the configure command we just looked at. The second option is tab completion.",
    "start": "655900",
    "end": "661800"
  },
  {
    "text": "So, we support tab completion for\na number of different shells. And for example, the Bash, you would\nrun this on the terminal",
    "start": "661800",
    "end": "669600"
  },
  {
    "text": "or you could add this to your bashrc or however you want to set that up. And we will auto complete service\nnames, operation names,",
    "start": "669600",
    "end": "678500"
  },
  {
    "text": "as well as parameter values. So, tab completion is something you\ncan use as well",
    "start": "678500",
    "end": "684900"
  },
  {
    "text": "to figure out what options are available for you. So, I want to go back to that original\ncommand we looked at,",
    "start": "684900",
    "end": "690199"
  },
  {
    "text": "the describe-instances command. And this is actually what your output\nmight look like",
    "start": "690200",
    "end": "695500"
  },
  {
    "text": "once you have a few instances running. And this is this JSON output. So, you can see there's Reservations\nthat have instances",
    "start": "695500",
    "end": "701500"
  },
  {
    "text": "and a number of different key value pairs. And while JSON output is useful, so, it can be useful in certain contexts.",
    "start": "701500",
    "end": "707899"
  },
  {
    "text": "If you're piping into something with\na full-fledged JSON parser or tools that can manipulate JSON,\nyou can use that.",
    "start": "707900",
    "end": "715700"
  },
  {
    "text": "However, we do support multiple output formats. So, there's the JSON output which\nis the default.",
    "start": "715700",
    "end": "722400"
  },
  {
    "text": "We also have a Table output, and table output is good for interactive browsing. So, if you want to just run a command\ninteractively",
    "start": "722400",
    "end": "729699"
  },
  {
    "text": "and see that output in a way that's\nmaybe easier to visually parse, you have that option.",
    "start": "729700",
    "end": "735700"
  },
  {
    "text": "And also, we have a Text output, and this is similar to the existing CLIs, if you're familiar with that output.",
    "start": "735700",
    "end": "742500"
  },
  {
    "text": "And this is useful if you want to\npipe to other text tools, sed or grep or awk, tools like that.",
    "start": "742500",
    "end": "748800"
  },
  {
    "text": "And the way you configure this, that was first of all the output\nconfiguration value we saw a few slides ago,",
    "start": "748800",
    "end": "755300"
  },
  {
    "text": "but also when you're running a command, you can use a --output and give any\nof these output formats.",
    "start": "755300",
    "end": "763600"
  },
  {
    "text": "And so, I talked about the different\noutput formats, but I didn't really go over what\nthey look like.",
    "start": "763600",
    "end": "770800"
  },
  {
    "text": "I think that's a little bit easier\nto show in the terminal. So, I'm going to start with a command\nhere, describe-regions.",
    "start": "770800",
    "end": "777500"
  },
  {
    "text": "And so, this is the default JSON output. You can see you have regions that\nhas an Endpoint and a RegionName,",
    "start": "777500",
    "end": "784200"
  },
  {
    "text": "and that's the basic structure of\nthis output. Now, if I run this same command,\nthe table output,",
    "start": "784200",
    "end": "793200"
  },
  {
    "text": "you can see it's the same information, just structured a little differently. That makes it easier to see that you have an Endpoint column,\nyou have a RegionName,",
    "start": "793200",
    "end": "800899"
  },
  {
    "text": "and then the same data as before. And we can look at what text output\nshould look like.",
    "start": "800900",
    "end": "811800"
  },
  {
    "text": "You'll notice you'll have an uppercased identifier followed by tab separated columns. It's the same information, the Endpoint\nas well as the RegionName.",
    "start": "811800",
    "end": "821300"
  },
  {
    "text": "And so, this makes it useful, for example, if you wanted to get all the RegionNames and maybe iterate over them.",
    "start": "821300",
    "end": "830100"
  },
  {
    "text": "So, for this region, I won't actually\nrun the command, but let's say I wanted to describe\nyour instances in a region,",
    "start": "830100",
    "end": "842100"
  },
  {
    "text": "and then maybe also see all the running instances.",
    "start": "842100",
    "end": "848600"
  },
  {
    "text": "So, you could do something like that, and that would just give you a list of all of your instances and all\nthe regions as an example.",
    "start": "848600",
    "end": "856100"
  },
  {
    "text": "But, if you notice here, we're grabbing a particular column\nout of this response,",
    "start": "856100",
    "end": "862500"
  },
  {
    "text": "and while you can use tools like grep, or in this case, cut, and that works fine, another option that we provide is\na query option.",
    "start": "862500",
    "end": "869900"
  },
  {
    "text": "And so, I'm going to show this in\nthe terminal before we switch back to the slides. And the way that works is you run\naws ec2 describe,",
    "start": "869900",
    "end": "879199"
  },
  {
    "text": "and there's a query option. And what this does, it allows you\nto give you an expression that says what type of output you\nwant to select.",
    "start": "879200",
    "end": "885900"
  },
  {
    "text": "So, that same thing that we just\nsaw, I can say Regions. Say I want all of them, and then\nget the RegionName.",
    "start": "885900",
    "end": "896300"
  },
  {
    "text": "And it'll give me that same output. What's nice is this is independent\nof your output format. So, this is JSON output.",
    "start": "896300",
    "end": "902800"
  },
  {
    "text": "I can still say that I want text output and do the same thing as before where\nI iterate over the regions",
    "start": "902800",
    "end": "908100"
  },
  {
    "text": "and call a command with a region argument. And so, this was a simpler example\nwith described regions.",
    "start": "908100",
    "end": "915100"
  },
  {
    "text": "If we look at what we were looking\nat in the slides,",
    "start": "915100",
    "end": "920300"
  },
  {
    "text": "describe instances, you have a much\nlarger output. And even with text output,",
    "start": "920300",
    "end": "928300"
  },
  {
    "text": "you could perhaps, maybe if you wanted\nto grab the InstanceID, you could say INSTANCES,",
    "start": "928300",
    "end": "939300"
  },
  {
    "text": "and so you'd get your InstanceID's. But again, using that query syntax, I can say something like grab all\nthe reservations,",
    "start": "939300",
    "end": "952700"
  },
  {
    "text": "the instances, and the InstanceID, and it's the same output.",
    "start": "952700",
    "end": "958500"
  },
  {
    "text": "Now, what's nice about this is the\nquery syntax actually supports more than this. I'll give you a few more examples.",
    "start": "958500",
    "end": "965000"
  },
  {
    "text": "Let's say that I also wanted to select\nthe InstanceID, maybe the PublicDnsName, and whether\nor not it's running.",
    "start": "965000",
    "end": "975000"
  },
  {
    "text": "So, in this case, you'll have tab\nseparated output that has exact columns you want.",
    "start": "975000",
    "end": "983200"
  },
  {
    "text": "And again, independent of the output format, so maybe I want to see that a little\nbit easier visually,",
    "start": "983200",
    "end": "989699"
  },
  {
    "text": "so I can use table output. And if you notice, I don't have column\nnames here, so there is a syntax for that if you wanted to provide explicit\ncolumn names.",
    "start": "989700",
    "end": "997500"
  },
  {
    "text": "Maybe I call this ID and then Hostname,\nand then maybe the State.",
    "start": "997500",
    "end": "1005700"
  },
  {
    "text": "And so, you'll have something like that. So, that is using the query option",
    "start": "1005700",
    "end": "1011800"
  },
  {
    "text": "to be able to select the exact output you want that makes it easier to script, even if you're using text output\nor just to create tables",
    "start": "1011800",
    "end": "1018600"
  },
  {
    "text": "that are a little bit easier for\nyou to visually parse.",
    "start": "1018600",
    "end": "1029100"
  },
  {
    "text": "So, let's cover some of that syntax\nwe just saw. So, this was that first example. You have the Regions, and we're saying\nRegions is a list.",
    "start": "1029100",
    "end": "1035199"
  },
  {
    "text": "You can see how it's a list in the\nJSON in the left. And we're selecting all the elements, and for each of those elements, grab\nthe RegionName.",
    "start": "1035200",
    "end": "1041899"
  },
  {
    "text": "And so, you'll get the output on the right. And then, we also looked at something like this",
    "start": "1041900",
    "end": "1047600"
  },
  {
    "text": "where you have the Reservations, Instances, and then we're going to grab two columns, the InstanceID and the State.Name,",
    "start": "1047600",
    "end": "1054900"
  },
  {
    "text": "and you'll get the output on the right. And then, also, that table syntax. So, that's where you can specify\na key name and then a state,",
    "start": "1054900",
    "end": "1063100"
  },
  {
    "text": "and it'll actually use that as the\ncolumn name.",
    "start": "1063100",
    "end": "1069200"
  },
  {
    "text": "And again, these are independent\nof the output format. So, if you wanted this as JSON output, you can still have this as well as\ntext output.",
    "start": "1069200",
    "end": "1077200"
  },
  {
    "text": "So, I didn't cover all of the syntax here. This is just an example of some of\nthe other things you can do.",
    "start": "1077200",
    "end": "1082299"
  },
  {
    "text": "You can go into nested hashes, index\ninto an array.",
    "start": "1082300",
    "end": "1087700"
  },
  {
    "text": "There's OR expressions, and then those two versions of the\nmultiselect as well as the wildcards here.",
    "start": "1087700",
    "end": "1095500"
  },
  {
    "text": "So, the feature here is you can use --query to create the exact output you want. We use a library called jmespath.",
    "start": "1095500",
    "end": "1102500"
  },
  {
    "text": "There's the link there at the bottom and it has a full specification in grammar that really talks about the details",
    "start": "1102500",
    "end": "1107700"
  },
  {
    "text": "of what you can do with this query syntax.",
    "start": "1107700",
    "end": "1112899"
  },
  {
    "text": "I want to go back to something that\nI did earlier in the demo. When I was looking at the running instances, I had this --filters and then I had\nthis value here,",
    "start": "1112900",
    "end": "1121400"
  },
  {
    "text": "and I didn't really go over it, and I want to go over it now. If we look at the help for this,",
    "start": "1121400",
    "end": "1128900"
  },
  {
    "text": "we'll see that we have two versions here, a Shorthand Syntax and a JSON Syntax.",
    "start": "1128900",
    "end": "1135299"
  },
  {
    "text": "And you notice that they're expressing\nthe same values and the same content here.",
    "start": "1135300",
    "end": "1141100"
  },
  {
    "text": "There's a name that takes a string, and then values, which is a list. And you can actually specify either\nversion that you want.",
    "start": "1141100",
    "end": "1149900"
  },
  {
    "text": "So, in this case, this is useful, maybe, if you're typing it on the command\nline interactively.",
    "start": "1149900",
    "end": "1158800"
  },
  {
    "text": "And this would be great, perhaps, if you wanted to put them in a file or run them through a JSON validator to make sure you have the correct syntax.",
    "start": "1158800",
    "end": "1166100"
  },
  {
    "text": "But they're exactly equivalent. There's no difference. It's your preference which one you\nwant to use.",
    "start": "1166100",
    "end": "1173100"
  },
  {
    "text": "So, you can use Shorthand Syntax\nto specify parameter values. These are these nonscalar parameter values.",
    "start": "1173100",
    "end": "1181500"
  },
  {
    "text": "So, the next thing I want to cover\nis Large Responses. So, let's say I run a command and I get something conceptually like this.",
    "start": "1181500",
    "end": "1187900"
  },
  {
    "text": "I have 100,000 records and I want\nto work with them.",
    "start": "1187900",
    "end": "1193500"
  },
  {
    "text": "That's how you would think of working\nwith a large response. You just have a lot of data. But a lot of times, what happens\nwith the services",
    "start": "1193500",
    "end": "1199000"
  },
  {
    "text": "is you'll get something like this, where you'll get a single page of responses and you'll have this little marker",
    "start": "1199000",
    "end": "1205800"
  },
  {
    "text": "that says there's more results. The results have been truncated. If you want more results, send that same request, but with a token,",
    "start": "1205800",
    "end": "1211600"
  },
  {
    "text": "and we'll know to give you that next\npage of response. And so, in your code, you would say something like while\nit's being truncated,",
    "start": "1211600",
    "end": "1218900"
  },
  {
    "text": "grab the next page of results until you get to the page on the end",
    "start": "1218900",
    "end": "1224299"
  },
  {
    "text": "that has no truncation. But really, you want to think of\nconceptually as just a single, large response,",
    "start": "1224300",
    "end": "1231600"
  },
  {
    "text": "and then something else should handle how to transparently make that efficient and grab the next pages while there are some.",
    "start": "1231600",
    "end": "1239800"
  },
  {
    "text": "Because as services operate in terms of a page size and a next token, and sometimes these parameters are\ndifferent names per services,",
    "start": "1239800",
    "end": "1247300"
  },
  {
    "text": "next token, or next marker, or sometimes it's implied as a last\nelement in an array,",
    "start": "1247300",
    "end": "1253700"
  },
  {
    "text": "and what the CLI provides is transparent\npagination. So, what this means is by default,",
    "start": "1253700",
    "end": "1259000"
  },
  {
    "text": "if you want all the results, you\ndon't have to do anything. You don't have to worry about the\nresults being truncated",
    "start": "1259000",
    "end": "1265500"
  },
  {
    "text": "and you didn't grab the next page. We'll grab all the results for you. And instead of thinking in terms\nof page sizes,",
    "start": "1265500",
    "end": "1271600"
  },
  {
    "text": "you think in terms of max items. So, you just say I want 3500 elements, and we'll figure out what that means\nin terms of grabbing responses",
    "start": "1271600",
    "end": "1279600"
  },
  {
    "text": "until we have the exact amount you asked for. And we'll also give you a token as well,",
    "start": "1279600",
    "end": "1286000"
  },
  {
    "text": "so if you do want to grab the next\npage of results, you can use this --starting-token,",
    "start": "1286000",
    "end": "1291600"
  },
  {
    "text": "and it's just this opaque blob that\nyou get back and you'll just send that in the\nnext request.",
    "start": "1291600",
    "end": "1296700"
  },
  {
    "text": "And so, that lets you not have to\nworry about pagination. And I do want to mention that if\nyou do want those raw pages,",
    "start": "1296700",
    "end": "1303500"
  },
  {
    "text": "there is a --no-paginate option if\nyou want to disable this feature.",
    "start": "1303500",
    "end": "1309000"
  },
  {
    "text": "But, you can use starting-token and\nmax-items to paginate results.",
    "start": "1309000",
    "end": "1314400"
  },
  {
    "text": "Otherwise, the pagination happens\ntransparently for you.",
    "start": "1314400",
    "end": "1321200"
  },
  {
    "text": "So, I want to recap so far what we've looked at. We've looked at the file://.",
    "start": "1321200",
    "end": "1328400"
  },
  {
    "text": "That's a way to specify parameter\nvalues in a file. We've also looked at how to get help.",
    "start": "1328400",
    "end": "1334700"
  },
  {
    "text": "So, the Man Pages as well as the\nHTML documentation. We looked at tab completion",
    "start": "1334700",
    "end": "1340900"
  },
  {
    "text": "and how you can enable that in the\nvarious shells. And we covered the JSON, the Table,\nand the Text output formats,",
    "start": "1340900",
    "end": "1348800"
  },
  {
    "text": "as well as how to use the --query option to select the exact field you want\nout of response",
    "start": "1348800",
    "end": "1354100"
  },
  {
    "text": "using a JMESPath expression. And then, we looked at shorthand syntax as an alternative to the JSON syntax.",
    "start": "1354100",
    "end": "1362400"
  },
  {
    "text": "And finally, we just looked at pagination and how it's handled transparently for you, or if you do want to paginate,",
    "start": "1362400",
    "end": "1368200"
  },
  {
    "text": "it's in terms of the maximum number of items rather than the pages.",
    "start": "1368200",
    "end": "1373700"
  },
  {
    "text": "So, I want to switch gears here and talk about",
    "start": "1373700",
    "end": "1381200"
  },
  {
    "text": "setting up a Static Blog with Amazon\nS3. And so, we'll just use some of the\nfeatures we just looked at",
    "start": "1381200",
    "end": "1386700"
  },
  {
    "text": "to accomplish this task. And the basic steps here, we're going to create the blog locally,",
    "start": "1386700",
    "end": "1393600"
  },
  {
    "text": "sync it to Amazon S3, use AWS Identity and Access Management",
    "start": "1393600",
    "end": "1399200"
  },
  {
    "text": "to restrict access for a user to\njust push content to this blog, and then look at using Amazon Route53",
    "start": "1399200",
    "end": "1406000"
  },
  {
    "text": "to set up a DNS name for this blog.",
    "start": "1406000",
    "end": "1411200"
  },
  {
    "text": "And if you're not familiar with static blog, I'll go over that real quickly.",
    "start": "1411200",
    "end": "1417600"
  },
  {
    "text": "So, generally what this is means is I have some sort of static blog generator. I'm using a Python one called Pelican,",
    "start": "1417600",
    "end": "1424500"
  },
  {
    "text": "but there are other ones such as\nOctopress and a number of others where I write content locally and say this is a sample post",
    "start": "1424500",
    "end": "1430299"
  },
  {
    "text": "showing how to create a static blog. You can render the content",
    "start": "1430300",
    "end": "1436100"
  },
  {
    "text": "and you can look at that content locally. So, for example, this is what it\nmight look like",
    "start": "1436100",
    "end": "1442100"
  },
  {
    "text": "as an HTML version. And you notice this is running a localhost. And so, you want to look at how do\nwe actually get that up",
    "start": "1442100",
    "end": "1448299"
  },
  {
    "text": "and pushed to a public site. And that's what we're going to look at here.",
    "start": "1448300",
    "end": "1456500"
  },
  {
    "text": "So, to do this, the first thing here, we're going to use the s3 command.",
    "start": "1456500",
    "end": "1463600"
  },
  {
    "text": "And this s3 command is going to be\nused to first make a bucket. So, the mb command is to make a bucket.",
    "start": "1463600",
    "end": "1469200"
  },
  {
    "text": "And then, there's this website command, and that allows you to specify an\nindex-document",
    "start": "1469200",
    "end": "1474600"
  },
  {
    "text": "and basically get a bucket website\nconfiguration set up.",
    "start": "1474600",
    "end": "1482900"
  },
  {
    "text": "So, next we want to create a user that has access only to the static blog. And what this means is that we want to ensure",
    "start": "1482900",
    "end": "1490299"
  },
  {
    "text": "that it can push content and essentially manipulate anything\nin this bucket, but it can't do anything else.",
    "start": "1490300",
    "end": "1499299"
  },
  {
    "text": "To do that, we're going to look at\nthe IAM service. So, this is a three-step process. We create the user, we give it an access key",
    "start": "1499300",
    "end": "1506700"
  },
  {
    "text": "or we give it credentials, and then we put a specific policy\nthat says what that user can do.",
    "start": "1506700",
    "end": "1513300"
  },
  {
    "text": "So, we're going to create a user, call it static-blog. You'll get this response back.",
    "start": "1513300",
    "end": "1518400"
  },
  {
    "text": "And once we've done that, to create\nthe credentials, we'll say create-access-key and use\nthat same user-name.",
    "start": "1518400",
    "end": "1525700"
  },
  {
    "text": "And you'll see there, there's the SecretAccessKey and the\nAccessKeyID.",
    "start": "1525700",
    "end": "1531600"
  },
  {
    "text": "And now that we've done that, we can say what permissions this user has.",
    "start": "1531600",
    "end": "1539299"
  },
  {
    "text": "And you'll see this file://. So, that's one of the features we\nlooked at previously. And in this file, has a policy that\nsays that essentially,",
    "start": "1539300",
    "end": "1547299"
  },
  {
    "text": "can do anything to this bucket here.",
    "start": "1547300",
    "end": "1552800"
  },
  {
    "text": "Now, once we've created this, we want to know how can I tell the\nCLI about this new user. We have a new set of credentials, potentially a new region or a different\nconfiguration options.",
    "start": "1552800",
    "end": "1561200"
  },
  {
    "text": "How do we configure the CLI for this? And this is what I was talking about\npreviously with profiles.",
    "start": "1561200",
    "end": "1567700"
  },
  {
    "text": "So, I can run the aws configure command with a --profile and a profile name,",
    "start": "1567700",
    "end": "1573500"
  },
  {
    "text": "and it will ask me those same four\nquestions we saw earlier, the AccessKey, SecretKey, and then\nthe Region and Output.",
    "start": "1573500",
    "end": "1580600"
  },
  {
    "text": "And it will write out a new section\nin your config file with this information.",
    "start": "1580600",
    "end": "1586900"
  },
  {
    "text": "And if you do want to manipulate\nthis by hand, which is perfectly fine, you would just create a new section\nin that config file.",
    "start": "1586900",
    "end": "1593399"
  },
  {
    "text": "It would have profile and then the\nprofile name, followed by these values here.",
    "start": "1593400",
    "end": "1599299"
  },
  {
    "text": "So, at this point, we've told the\nCLI how to use this new user. We want to now, whenever we run commands,",
    "start": "1599300",
    "end": "1604900"
  },
  {
    "text": "make sure that we're using that profile. And so, this is one option here.",
    "start": "1604900",
    "end": "1610000"
  },
  {
    "text": "I'm going to go over the S3 sync command. The parts of this command are that\nwe're saying sync from the local directory to this\nbucket name.",
    "start": "1610000",
    "end": "1618500"
  },
  {
    "text": "That's actually the host name. That's a short version. It should be www.reinvent-cli-blog-demo.com.",
    "start": "1618500",
    "end": "1625600"
  },
  {
    "text": "And we're saying that we want public-read so anyone has access to read this content.",
    "start": "1625600",
    "end": "1631000"
  },
  {
    "text": "We want to delete anything that's\non the remote end that's not locally. So, if I delete a file locally and then sync",
    "start": "1631000",
    "end": "1636500"
  },
  {
    "text": "and that file was in the remote location, we'll delete that so that it matches exactly what's on your local file system.",
    "start": "1636500",
    "end": "1644300"
  },
  {
    "text": "And then, this profile argument, this is where we tell the CLI to\nuse that profile we just created.",
    "start": "1644300",
    "end": "1650200"
  },
  {
    "text": "So, you can add this to any command,\n--profile staticblog, or you can also export a environment variable,",
    "start": "1650200",
    "end": "1657500"
  },
  {
    "text": "that's aws_default_profile, with\nunderscores. And then that way, you don't have to set it",
    "start": "1657500",
    "end": "1663500"
  },
  {
    "text": "for every command you run. So, I want to cover what Amazon S3 Sync does.",
    "start": "1663500",
    "end": "1670600"
  },
  {
    "text": "And essentially, what it does is\nit starts at the top. So, on the left, we have our local\nfile system, and on the right, we have the contents\nin S3,",
    "start": "1670600",
    "end": "1677800"
  },
  {
    "text": "and we'll go through those contents in order and figure out if there's any differences\nbetween the files.",
    "start": "1677800",
    "end": "1683500"
  },
  {
    "text": "So, in this diagram, you might imagine\nthe first file is an example of something that's changed. The next one might be an example\nof something that was added,",
    "start": "1683500",
    "end": "1691400"
  },
  {
    "text": "and then maybe the last one is something\nthat was removed. So, what we do now is once we detect\nwhat that list of changes are,",
    "start": "1691400",
    "end": "1700500"
  },
  {
    "text": "as soon as we figure those out, we'll\nadd them to a queue. And this happens all in a pipeline.",
    "start": "1700500",
    "end": "1706400"
  },
  {
    "text": "So, we don't read the contents of\nthe S3 bucket all into memory.",
    "start": "1706400",
    "end": "1711600"
  },
  {
    "text": "We're doing this as we get pages back. And once we figure that out, we figure out a change, add it to a queue,",
    "start": "1711600",
    "end": "1717700"
  },
  {
    "text": "and then we have worker threads here that will perform these operations\nin parallel.",
    "start": "1717700",
    "end": "1722900"
  },
  {
    "text": "And what's nice about this is that\nthis might be an example of what the task queue looks like. And it could be doing any number\nof operations",
    "start": "1722900",
    "end": "1730299"
  },
  {
    "text": "in parallel at the same time, since with syncing, these are independent\noperations. You can imagine it might add a small\nfile, delete a file,",
    "start": "1730300",
    "end": "1740700"
  },
  {
    "text": "and in the case of large files, we automatically detect that and we'll split them into smaller chunks and then upload those chunks in parallel",
    "start": "1740700",
    "end": "1746600"
  },
  {
    "text": "using the multi-part upload API. This is all happening concurrently,",
    "start": "1746600",
    "end": "1752100"
  },
  {
    "text": "which means that you have a very\nefficient sync process.",
    "start": "1752100",
    "end": "1757700"
  },
  {
    "text": "So, you can use this S3 Sync command to sync new or changed files. The files are uploaded in parallel\nindividual files,",
    "start": "1757700",
    "end": "1764700"
  },
  {
    "text": "and then large files are split into chunks and also uploaded in parallel.",
    "start": "1764700",
    "end": "1771500"
  },
  {
    "text": "And this final part, Amazon Route53. So, we want to be able go to www.reinvent-cli-blog-demo.com",
    "start": "1771500",
    "end": "1779100"
  },
  {
    "text": "and go there for the blog content. And to do this, we will look at the\nRoute53 command.",
    "start": "1779100",
    "end": "1785799"
  },
  {
    "text": "So, we just create a new hosted zone with the host name here,",
    "start": "1785800",
    "end": "1792000"
  },
  {
    "text": "and we'll get those NameServers at\nthe bottom, and that's where you would go to\nyour DNS provider and enter those values for the NameServers.",
    "start": "1792000",
    "end": "1799800"
  },
  {
    "text": "And then here, we're going to use the change-resource-record-sets command,",
    "start": "1799800",
    "end": "1805000"
  },
  {
    "text": "and we're going to look at what the contents of what that changebatch file is.",
    "start": "1805000",
    "end": "1811000"
  },
  {
    "text": "And all we're doing here is just\ncreating an alias to that S3 bucket. So, it would just say that we're\ncreating an alias",
    "start": "1811000",
    "end": "1817400"
  },
  {
    "text": "with that DNS name at the bottom and the HostedZoneID is for the region\nthat we're in. In this case, it was us-west-2.",
    "start": "1817400",
    "end": "1826300"
  },
  {
    "text": "And at that point, we would have\neverything we would need to be able to try out this static blog.",
    "start": "1826300",
    "end": "1833200"
  },
  {
    "text": "So, an example of what this looks like is let's say that so, I make a change\nand I render that content.",
    "start": "1833200",
    "end": "1847900"
  },
  {
    "text": "And this is that command we're looking\nat earlier. I'm just going to run the sync command.",
    "start": "1847900",
    "end": "1853100"
  },
  {
    "text": "You'll figure out what's changed,\nupload them to S3 in parallel, and then I can go to cli-blog-demo",
    "start": "1853100",
    "end": "1862700"
  },
  {
    "text": "and you see that that changed here is public. So, at this point, I have this workflow where I make the changes, render\nthem locally,",
    "start": "1862700",
    "end": "1869799"
  },
  {
    "text": "make sure they look okay, and then just run that sync command\nto push that content up. And then, you'll have a static blog\nset up with the CLI.",
    "start": "1869800",
    "end": "1880700"
  },
  {
    "text": "Okay. So, finally, I want to cover\nsome additional topics.",
    "start": "1880700",
    "end": "1889100"
  },
  {
    "text": "These are some topics that I won't\ngo into too much detail, but I think are interesting and worth\nexploring if you're interested.",
    "start": "1889100",
    "end": "1897500"
  },
  {
    "text": "The first one is Botocore. So, the CLI uses a library called\nBotocore under the hood,",
    "start": "1897500",
    "end": "1903100"
  },
  {
    "text": "and this is essentially responsible for the request and the response\npart of the commands.",
    "start": "1903100",
    "end": "1912700"
  },
  {
    "text": "And if you notice, each of the services are specified\nin a JSON file, and what's nice about that is, for example,",
    "start": "1912700",
    "end": "1919100"
  },
  {
    "text": "with ec2.json, it declaratively describes\nwhat that service is. So, it'll have things like the api_version\nand signature_version,",
    "start": "1919100",
    "end": "1927700"
  },
  {
    "text": "but also it has operations, and then it has a list of operations with the exact input and output.",
    "start": "1927700",
    "end": "1933200"
  },
  {
    "text": "And so, this makes it very easy to stay up to date with the latest\nservice changes.",
    "start": "1933200",
    "end": "1939400"
  },
  {
    "text": "Botocore's also data driven in the sense that it has things like retry configuration. So, if you were curious",
    "start": "1939400",
    "end": "1945000"
  },
  {
    "text": "what a particular retry policy is\nfor a service, you could look at this file and say\nthis is an example of dynamodb,",
    "start": "1945000",
    "end": "1952100"
  },
  {
    "text": "that you're going to retry up to\n10 times, have an exponential delay. So, 0.05, 2 to the X or to the number\nof attempts.",
    "start": "1952100",
    "end": "1962100"
  },
  {
    "text": "And this policy applies whenever you have a service_error_code of this, and a status_code of 400.",
    "start": "1962100",
    "end": "1971000"
  },
  {
    "text": "And also, that pagination was all\ndata driven as well. And the last topic here is plugins.",
    "start": "1971000",
    "end": "1977100"
  },
  {
    "text": "So, with plugins, this is something that if you were a Python developer,",
    "start": "1977100",
    "end": "1982299"
  },
  {
    "text": "you can essentially extend any part of the CLI with new functionality using this\nplugin architecture.",
    "start": "1982300",
    "end": "1989900"
  },
  {
    "text": "In fact, some of the examples we\nsaw previously were actually written as plugins that we felt were valuable enough\nto include with a default install.",
    "start": "1989900",
    "end": "1997400"
  },
  {
    "text": "So, that Shorthand syntax, the configure command so you can add new top level commands\nor subcommands with the CLI,",
    "start": "1997400",
    "end": "2004899"
  },
  {
    "text": "they're all written as built-in plugins. But you can also write 3rd party plugins that people can install and enhance\nthe behavior of the CLI.",
    "start": "2004900",
    "end": "2012000"
  },
  {
    "text": "Maybe a new output format or something like that. And so, if you're interested in that, the only caveat is that it is in\na developer preview,",
    "start": "2012000",
    "end": "2019700"
  },
  {
    "text": "so while the CLI is a 1.0 release\nor is a full-supported release, the plugin interface is subject to change.",
    "start": "2019700",
    "end": "2026900"
  },
  {
    "text": "So, just something to keep in mind. So, some next steps.",
    "start": "2026900",
    "end": "2032299"
  },
  {
    "text": "I encourage everyone to check out the code. So, we're on Github. All of this is open source. There's the AWS Org and Botocore\nis under github.com/boto.",
    "start": "2032300",
    "end": "2043400"
  },
  {
    "text": "Feel free to file issues on Github, or if you have feature requests, you can also file them on Github.",
    "start": "2043400",
    "end": "2049500"
  },
  {
    "text": "You can ask questions on our forums, and also we will be at the Developer\nLounge today at 1:30,",
    "start": "2049500",
    "end": "2055899"
  },
  {
    "text": "and for Python questions, but feel\nfree for CLI as well. And then, the CLI is also at 3:30.",
    "start": "2055900",
    "end": "2065200"
  },
  {
    "text": "And that's it. Encourage you all to give your feedback\non the presentation, and I thank you all again for coming.",
    "start": "2065200",
    "end": "2078400"
  }
]