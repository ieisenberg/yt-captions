[
  {
    "text": "hello i am padma malik original i am an enterprise support manager at aws and i am based out of austin texas",
    "start": "4160",
    "end": "12160"
  },
  {
    "text": "welcome to aws supports you where we share best practices and troubleshooting tips",
    "start": "12160",
    "end": "17199"
  },
  {
    "text": "from aws support joining me today is louise fox and adrian de vera from aws support can",
    "start": "17199",
    "end": "24080"
  },
  {
    "text": "you give us a quick introduction louise and adrian thanks padma hi my name is louise and",
    "start": "24080",
    "end": "30240"
  },
  {
    "text": "i'm a technical account manager based in amsterdam in the netherlands and i mainly work directly with",
    "start": "30240",
    "end": "35840"
  },
  {
    "text": "customers on their cloud-based architecture which includes cloudfront and security as well",
    "start": "35840",
    "end": "41600"
  },
  {
    "text": "hi i'm adrian i'm a cloud support engineer based in dublin ireland i work primarily with aws customers on",
    "start": "41600",
    "end": "47520"
  },
  {
    "text": "web development security and content delivery of their cloud moreover i help with their own",
    "start": "47520",
    "end": "52640"
  },
  {
    "text": "cloud for infrastructure thank you for joining us from across time zones everyone",
    "start": "52640",
    "end": "58480"
  },
  {
    "text": "today we will be introducing to you amazon cloudfront we will specifically focus on security best practices",
    "start": "58480",
    "end": "64878"
  },
  {
    "text": "using the amazon cloudfront service before we get into the details a quick note to our attendees online",
    "start": "64879",
    "end": "71040"
  },
  {
    "text": "please use the chat window on the right hand side of your screen to ask your questions and share your thoughts throughout the episode",
    "start": "71040",
    "end": "77520"
  },
  {
    "text": "we look forward to hearing from you louise can you walk us through what you're going to be talking about today",
    "start": "77520",
    "end": "83600"
  },
  {
    "text": "yeah sure um thanks padma so the agenda for today firstly we're going to be",
    "start": "83600",
    "end": "88960"
  },
  {
    "text": "talking about secure access controls so ssl certificates viewer protocol policy origin protocol policy",
    "start": "88960",
    "end": "95920"
  },
  {
    "text": "then we're going to be discussing restrict access control so restricting access to your origin signed urls signed cookies geolocation",
    "start": "95920",
    "end": "103280"
  },
  {
    "text": "based content access so i'm restricting based on location um encryption in transit so this will be",
    "start": "103280",
    "end": "110159"
  },
  {
    "text": "enforcing https connections for requesting your data at the origin ddos mitigation techniques and uh",
    "start": "110159",
    "end": "117439"
  },
  {
    "text": "cloudfront integration with wac and shield securitywithland.edge logging and monitoring and the different",
    "start": "117439",
    "end": "124000"
  },
  {
    "text": "features and services we have here configuration management with aws config",
    "start": "124000",
    "end": "129599"
  },
  {
    "text": "compliance and the different compliance types we have that support cloudfront and lastly some security best",
    "start": "129599",
    "end": "136160"
  },
  {
    "text": "practices for myself and adrian for cloudfront so starting with secure access control",
    "start": "136160",
    "end": "144400"
  },
  {
    "text": "um here we have a diagram showing between viewers and clipfront and also between cloudfront and",
    "start": "144400",
    "end": "149680"
  },
  {
    "text": "origin so what are the different https connections that we offer here",
    "start": "149680",
    "end": "154800"
  },
  {
    "text": "so between viewer and cloudfront we have a viewer protocol policy where you can",
    "start": "154800",
    "end": "159920"
  },
  {
    "text": "choose between http and https redirecting http to https which would",
    "start": "159920",
    "end": "165599"
  },
  {
    "text": "mean that any of your viewers that are using the http protocol it will redirect it to a more secure protocol",
    "start": "165599",
    "end": "172239"
  },
  {
    "text": "um so that way the communication is fully encrypted and then lastly https only so any",
    "start": "172239",
    "end": "178159"
  },
  {
    "text": "request coming from http will actually be dropped and only http connect",
    "start": "178159",
    "end": "183599"
  },
  {
    "text": "https connections will be allowed then down below we have certificate options so you can if you want to use the",
    "start": "183599",
    "end": "189599"
  },
  {
    "text": "default cloudfront domain name you can use the default cloudfront certificate free of charge and additionally if you",
    "start": "189599",
    "end": "196239"
  },
  {
    "text": "want to use a custom domain you can upload an acm which is an amazon certificate manager certificate",
    "start": "196239",
    "end": "202400"
  },
  {
    "text": "and these are free of charge and managed by aws you only pay for the resources that you integrated with",
    "start": "202400",
    "end": "207840"
  },
  {
    "text": "and also iem certificates so depending on your use case you can upload either of these certificates to your",
    "start": "207840",
    "end": "213519"
  },
  {
    "text": "client distribution protocol options you can see here we have several different ones for different security policies",
    "start": "213519",
    "end": "220080"
  },
  {
    "text": "we usually from a security standpoint would recommend tls version 1.2 and up if possible",
    "start": "220080",
    "end": "226239"
  },
  {
    "text": "then we also have the origin protocol policy so match viewer https only or http only",
    "start": "226239",
    "end": "233519"
  },
  {
    "text": "um much fewer https only would be the more secure ones here again and lastly having an ssl certificate on",
    "start": "233519",
    "end": "240400"
  },
  {
    "text": "your origin so if you're using an s3 origin we actually have certificates managed by amazon that you",
    "start": "240400",
    "end": "247120"
  },
  {
    "text": "can use and if you have your own custom origin you can again um upload your own certificate or use acm",
    "start": "247120",
    "end": "254159"
  },
  {
    "text": "as well so moving on here to field level encryption so field level encryption is as we",
    "start": "254159",
    "end": "261199"
  },
  {
    "text": "previously saw you can enforce secure end-to-end communications between your cloudfront and origin",
    "start": "261199",
    "end": "267280"
  },
  {
    "text": "and use https so then fee level encryption is just basically an additional layer of security here that",
    "start": "267280",
    "end": "272800"
  },
  {
    "text": "lets you protect specific data by encrypting it at the edge location using your public key",
    "start": "272800",
    "end": "278320"
  },
  {
    "text": "and this allows your users to securely upload sensitive data to your web servers and all the",
    "start": "278320",
    "end": "284639"
  },
  {
    "text": "encryption all the data will be encrypted from your edge location all the way to the application in the origin",
    "start": "284639",
    "end": "290080"
  },
  {
    "text": "and only specific applications in the origin can actually decrypt that data",
    "start": "290080",
    "end": "296000"
  },
  {
    "text": "um moving on uh adrian's going to talk about restrict access control thanks louise in continuation of having",
    "start": "296000",
    "end": "302800"
  },
  {
    "text": "https between client and cloudfront and between cloudfront and the origin one of the security features of",
    "start": "302800",
    "end": "308639"
  },
  {
    "text": "cloudfront is restricting access control to utilize and maximize security",
    "start": "308639",
    "end": "314080"
  },
  {
    "text": "features of cloudfront it would be better to restrict your viewers to only use cloudfront",
    "start": "314080",
    "end": "319199"
  },
  {
    "text": "and for them not to go straight to the origin this will allow cloudfront 2 distinguish between authorized and",
    "start": "319199",
    "end": "325280"
  },
  {
    "text": "unauthorized users and to allow or deny certain requests based on urls cookies query strings",
    "start": "325280",
    "end": "332400"
  },
  {
    "text": "certain ips and where the viewers are geograph geographically located from",
    "start": "332400",
    "end": "337520"
  },
  {
    "text": "this also allows your origin not to get overwhelmed with a lot of requests and to prevent and mitigate",
    "start": "337520",
    "end": "343039"
  },
  {
    "text": "attacks in the likes of ddos attack if you have only allowed cloudfront to",
    "start": "343039",
    "end": "348479"
  },
  {
    "text": "access your origin and when viewers try to access your origin directly then those viewers will get access",
    "start": "348479",
    "end": "354160"
  },
  {
    "text": "denied on this topic i will cover using amazon amazon origins like s3",
    "start": "354160",
    "end": "359840"
  },
  {
    "text": "and also i will get i will go through some custom origins for using amazon as through rest api",
    "start": "359840",
    "end": "366960"
  },
  {
    "text": "endpoint one of the security features of cloudfront is oei or origin access identity",
    "start": "366960",
    "end": "372479"
  },
  {
    "text": "what this does is it creates an i end user for a cloudfront and that imuser will be using the s3",
    "start": "372479",
    "end": "378240"
  },
  {
    "text": "bucket policy think of this i am like an id or identification for a cloud front in the",
    "start": "378240",
    "end": "383759"
  },
  {
    "text": "bucket policy so in the screenshot shown in the slide there's only one effect which is allow then the only",
    "start": "383759",
    "end": "391039"
  },
  {
    "text": "allowed principal or viewer is cloudfront which is represented by an im user then",
    "start": "391039",
    "end": "396800"
  },
  {
    "text": "the only allowed action is for for this cloudfront is to get object meaning to get contact to get content from the",
    "start": "396800",
    "end": "404400"
  },
  {
    "text": "from this s3 origin and the resource simply says the name of the bucket",
    "start": "404400",
    "end": "409919"
  },
  {
    "text": "so if any other principal let's say public viewers that tries to get content directly to this s3 bucket",
    "start": "409919",
    "end": "417039"
  },
  {
    "text": "will be access denied since there are no other principle mentioned other than cloudfront",
    "start": "417039",
    "end": "423840"
  },
  {
    "text": "if you are using custom origin like elb or ec2 or your own http server",
    "start": "424479",
    "end": "429680"
  },
  {
    "text": "and you want to restrict users to only use cloudfront first you would have to configure a",
    "start": "429680",
    "end": "435120"
  },
  {
    "text": "secret header in your custom origin in order for the request to succeed then",
    "start": "435120",
    "end": "440160"
  },
  {
    "text": "you will need to configure cloudfront to pass this secret header in the request and more importantly",
    "start": "440160",
    "end": "446160"
  },
  {
    "text": "you only want cloudfront to have this secret header so if the origin did not get the secret",
    "start": "446160",
    "end": "452400"
  },
  {
    "text": "header from a request then the request will not be successful and an access denied is returned",
    "start": "452400",
    "end": "458400"
  },
  {
    "text": "on the screenshot shown in the slide i have a simple alb rule there are two rules actually the",
    "start": "458400",
    "end": "464639"
  },
  {
    "text": "first rule is that if the request has the secret header then the request succeeds",
    "start": "464639",
    "end": "470160"
  },
  {
    "text": "and the second rule of my alb or my origin is that when the request has no secret header access denied 403",
    "start": "470160",
    "end": "477039"
  },
  {
    "text": "is returned so cloudfront is a feature where it can pass origin custom headers",
    "start": "477039",
    "end": "482960"
  },
  {
    "text": "that matches the secret header in your custom origin",
    "start": "482960",
    "end": "487919"
  },
  {
    "text": "cloudfront offers geo-restriction where you only allow or deny certain countries",
    "start": "489039",
    "end": "494080"
  },
  {
    "text": "to access your platform distribution or website use cases for this feature is for",
    "start": "494080",
    "end": "499280"
  },
  {
    "text": "regulatory needs or region based contents or application or if you would just like certain countries",
    "start": "499280",
    "end": "505599"
  },
  {
    "text": "to access your website or cloudfront distribution so let's say i have a cloudfront distribution set up in the us um canada",
    "start": "505599",
    "end": "512159"
  },
  {
    "text": "and europe and i configured that viewers from the united states are the only viewers",
    "start": "512159",
    "end": "517680"
  },
  {
    "text": "that allow that are allowed to access my cloudfront or website application so the requests",
    "start": "517680",
    "end": "524159"
  },
  {
    "text": "are okay but what if there are viewers from other parts of the world that tries to access",
    "start": "524159",
    "end": "529360"
  },
  {
    "text": "my application so since i have georestriction for us viewers only",
    "start": "529360",
    "end": "534880"
  },
  {
    "text": "others will get access denied so geo restriction",
    "start": "534880",
    "end": "542720"
  },
  {
    "text": "is for allowing or denying certain countries for accessing your cloudfront and on top of that you could use aws wav",
    "start": "542720",
    "end": "549680"
  },
  {
    "text": "for web application firewall to further restrict certain user agents ip addresses and networks",
    "start": "549680",
    "end": "557519"
  },
  {
    "text": "another restriction feature for a cloudfront is by using signed urls or signed cookies",
    "start": "558880",
    "end": "564000"
  },
  {
    "text": "and one of the use cases for this feature is for paid content like video and demand streaming also if you",
    "start": "564000",
    "end": "570959"
  },
  {
    "text": "only want authorized users to access your content",
    "start": "570959",
    "end": "576399"
  },
  {
    "text": "for viewers to access your content and the distribution you would need signed urls and signed cookies",
    "start": "576399",
    "end": "582800"
  },
  {
    "text": "viewers would have some sort of subscription file then that subscription is passed to the",
    "start": "582800",
    "end": "588240"
  },
  {
    "text": "origin and the origin checks it and verifies that it is valid then the origin generates a signed url",
    "start": "588240",
    "end": "595680"
  },
  {
    "text": "or signed cookie back to the viewer then the viewer uses that alongside with the path",
    "start": "595680",
    "end": "601040"
  },
  {
    "text": "and the request succeeds if an unauthorized viewer tries to",
    "start": "601040",
    "end": "606160"
  },
  {
    "text": "access adjust the file without the signed url or cookie then the access denied is returned as",
    "start": "606160",
    "end": "613279"
  },
  {
    "text": "shown in the slide the difference between signed url and signed cookie is that sign url is for one file access only",
    "start": "613279",
    "end": "621200"
  },
  {
    "text": "whereas a cookie can be used to multi to access multiple files",
    "start": "621200",
    "end": "627200"
  },
  {
    "text": "encryption and transit will be discussed by louise thanks adrian um before we get started",
    "start": "627760",
    "end": "633120"
  },
  {
    "text": "on this padma are there any questions from the audience hi louise uh yes we do have a question",
    "start": "633120",
    "end": "641120"
  },
  {
    "text": "from mon ramon 357 um so when you were demonstrating uh",
    "start": "641120",
    "end": "647040"
  },
  {
    "text": "communication between cloudfront and the custom origin slides i know that you have a demo coming up",
    "start": "647040",
    "end": "653440"
  },
  {
    "text": "later on here and the question is will that demo cover some of the steps",
    "start": "653440",
    "end": "658959"
  },
  {
    "text": "about setting up the custom origin yes it will cover in terms of um",
    "start": "658959",
    "end": "664079"
  },
  {
    "text": "communicating between coffin and doors and either http or https that's perfect hopefully that answers",
    "start": "664079",
    "end": "669839"
  },
  {
    "text": "your question mondragon 357 and also i had one question of my own",
    "start": "669839",
    "end": "675200"
  },
  {
    "text": "here uh can i use my own ssl certificate instead of the aws certificate manager",
    "start": "675200",
    "end": "681279"
  },
  {
    "text": "or acm certificate uh yes you can so if you have your own",
    "start": "681279",
    "end": "686399"
  },
  {
    "text": "custom domain and you have your own ssl requirements where you need a third-party certificate",
    "start": "686399",
    "end": "691839"
  },
  {
    "text": "you can actually upload that into acm directly and then you can use that with cloudfront",
    "start": "691839",
    "end": "697279"
  },
  {
    "text": "so that would be how that is done and then also on the that would be between let's say uploading a cloud front and then if you have a",
    "start": "697279",
    "end": "703600"
  },
  {
    "text": "custom origin you can actually upload your third party certificate directly to that as well um but in the next slide actually we'll",
    "start": "703600",
    "end": "710000"
  },
  {
    "text": "just be discussing acm amazon certificate manager briefly so it's always good to",
    "start": "710000",
    "end": "715519"
  },
  {
    "text": "see what what i guess cc use case best because that's pros and cons to using acm certificates",
    "start": "715519",
    "end": "721760"
  },
  {
    "text": "iem ssl certificates and your own custom domain certificates as well got it thanks for covering that uh and",
    "start": "721760",
    "end": "727920"
  },
  {
    "text": "back to you louise great thank you so here we're going to be discussing encryption in transit with cloudfront so",
    "start": "727920",
    "end": "735680"
  },
  {
    "text": "on the next slide here we just have some features of cloudfront and the different um encryption transit",
    "start": "735680",
    "end": "741440"
  },
  {
    "text": "things it offers i guess so we touched on this earlier with the https communication slide but basically",
    "start": "741440",
    "end": "748079"
  },
  {
    "text": "encryption transit is just encrypting your data while it is being moved it is in transit",
    "start": "748079",
    "end": "753120"
  },
  {
    "text": "and what we do here with cloudfront is that you can require that your viewers use https to request your files",
    "start": "753120",
    "end": "759440"
  },
  {
    "text": "so that all connections are encrypted from cloud your viewers to cloudfront and also cloudfront to your origin as",
    "start": "759440",
    "end": "764959"
  },
  {
    "text": "well so first here we have advanced ciphers so this can any high security cypher",
    "start": "764959",
    "end": "770399"
  },
  {
    "text": "just improves the security of your https connections and amazon playfront edge servers then",
    "start": "770399",
    "end": "776800"
  },
  {
    "text": "and clients will also agree on the most secure cipher to use in as part of the ssl handshake process",
    "start": "776800",
    "end": "783200"
  },
  {
    "text": "so that way your connections are always using the most advanced most secure cipher next we have amazon",
    "start": "783200",
    "end": "789200"
  },
  {
    "text": "certificate manager that we touched on earlier so this is managed by uh by aws and it's",
    "start": "789200",
    "end": "794800"
  },
  {
    "text": "free ssl certificates that you can request for your custom domain and integrate directly with the",
    "start": "794800",
    "end": "800320"
  },
  {
    "text": "cloudfront as well but like we said there are other certificates you can use as well so just complete depends on",
    "start": "800320",
    "end": "806399"
  },
  {
    "text": "what best suits your business requirements we also have ocsp stapling so this is online",
    "start": "806399",
    "end": "812320"
  },
  {
    "text": "certificate status protocol and what this does is it actually does a call to",
    "start": "812320",
    "end": "817360"
  },
  {
    "text": "check if your certificate is valid or revoked and what cloudfun can do is it can staple that call so ocsp is stapling",
    "start": "817360",
    "end": "824240"
  },
  {
    "text": "it which basically means that the client no longer needs to handle certificate validation and this not only",
    "start": "824240",
    "end": "829760"
  },
  {
    "text": "improves performance but also security as well because it lessens the tls handshake and",
    "start": "829760",
    "end": "834880"
  },
  {
    "text": "there's less communication required there um session tickets so session tickets help",
    "start": "834880",
    "end": "840639"
  },
  {
    "text": "speed up the time spent restarting or resuming an ssl session so cloudfront will encrypt the ssl",
    "start": "840639",
    "end": "846959"
  },
  {
    "text": "session um information and store that in a ticket so that way you no longer have to request it or restart it each time you",
    "start": "846959",
    "end": "853839"
  },
  {
    "text": "can just resume from where you left off on the same secure connection perfect forward secrecy so this um",
    "start": "853839",
    "end": "860880"
  },
  {
    "text": "provides additional safeguards against eavesdropping of encrypted data by using a unique random session key",
    "start": "860880",
    "end": "867600"
  },
  {
    "text": "protocol enforcement so this is enforcing different protocol types and as i mentioned before tls version 1.2 is what we recommend",
    "start": "867600",
    "end": "874560"
  },
  {
    "text": "that or higher if possible half or full bridge connections this is defining the type of",
    "start": "874560",
    "end": "880399"
  },
  {
    "text": "um connection you want between cloudfront and uh your viewer and cloudfront entitlement",
    "start": "880399",
    "end": "885680"
  },
  {
    "text": "and your origin so do you want https the whole way or do you want maybe half http",
    "start": "885680",
    "end": "890959"
  },
  {
    "text": "and then https so it really depends on i guess you might want to strike a balance between security and performance here",
    "start": "890959",
    "end": "897360"
  },
  {
    "text": "obviously from a security standpoint we would recommend using https enforcing it for both sides",
    "start": "897360",
    "end": "903519"
  },
  {
    "text": "but if you have um a static page logos or images that don't need to be",
    "start": "903519",
    "end": "908880"
  },
  {
    "text": "encrypted you might want to reduce the overall latency and use a half bridge connection instead so we offer that for both and lastly",
    "start": "908880",
    "end": "916320"
  },
  {
    "text": "field level encryption which i touched on earlier so these will be all the features that we have for encryption and",
    "start": "916320",
    "end": "921360"
  },
  {
    "text": "transit with cloudfront um on the next slide we have",
    "start": "921360",
    "end": "926639"
  },
  {
    "text": "uh ddos mitigation techniques so uh aws cloudfront uh amazon",
    "start": "926639",
    "end": "933360"
  },
  {
    "text": "cloudfront is heavily integrated with web application firewall which you can add and a web acl a waffle",
    "start": "933360",
    "end": "941360"
  },
  {
    "text": "bcl and this will mitigate any attacks on layer 7 so any ddos attacks coming in",
    "start": "941360",
    "end": "947920"
  },
  {
    "text": "on layer 7 of the osi model can actually be reduced or mitigated by using waffle cloudfront so you can",
    "start": "947920",
    "end": "954320"
  },
  {
    "text": "create different firewall rules and you can block allow or count these rules",
    "start": "954320",
    "end": "959680"
  },
  {
    "text": "depending on what you want to do and what you want logged and tracked as well and you can block based on ip addresses",
    "start": "959680",
    "end": "965759"
  },
  {
    "text": "on location on very specific great bait ruling as well whatever you whatever you think is best and yeah this",
    "start": "965759",
    "end": "972880"
  },
  {
    "text": "can prevent against different types of layer 7 attacks such as sql injection attacks sea surf attacks http floods attacks sin",
    "start": "972880",
    "end": "980160"
  },
  {
    "text": "flood attacks as well and it can enhance cloud print features such as custom error pages and gear",
    "start": "980160",
    "end": "985440"
  },
  {
    "text": "restriction not only that but platform is also um a very robust um proxy as well",
    "start": "985440",
    "end": "993040"
  },
  {
    "text": "and it has uh what we're trying to say it has a syn proxy feature where it can actually validate three-way handshakes before",
    "start": "993040",
    "end": "1000160"
  },
  {
    "text": "passing them to the application which would prevent any sinful attacks and it's obviously globally distributed",
    "start": "1000160",
    "end": "1005519"
  },
  {
    "text": "which has really good attack mitigation capabilities as well so moving on to the next slide here we",
    "start": "1005519",
    "end": "1012240"
  },
  {
    "text": "just have a diagram of how this would kind of work i guess so here you can see several different",
    "start": "1012240",
    "end": "1017600"
  },
  {
    "text": "computers uh distributed denial of service attack incoming and as you can see here you have shield",
    "start": "1017600",
    "end": "1024400"
  },
  {
    "text": "and waff integrated with cloudfront so shield standard is enabled by default on",
    "start": "1024400",
    "end": "1029839"
  },
  {
    "text": "every customer account free of charge and this can prevent against layer 3 and therefore attacks",
    "start": "1029839",
    "end": "1035600"
  },
  {
    "text": "and then using aws shield advanced there is a cost to it and you do have to enable this manually",
    "start": "1035600",
    "end": "1041520"
  },
  {
    "text": "but this will be able to help you with your your waffles and mitigating any layer 7 attacks and",
    "start": "1041520",
    "end": "1047839"
  },
  {
    "text": "it has other features as well such as um being able to call the disaster recovery team",
    "start": "1047839",
    "end": "1053840"
  },
  {
    "text": "and um uh yeah just uh pricing uh features as well so this then from",
    "start": "1053840",
    "end": "1059679"
  },
  {
    "text": "cloudfront you have two origins here so elastic low balance thing and also s3 is an origin",
    "start": "1059679",
    "end": "1065200"
  },
  {
    "text": "so elastic low balancing would be really good here in terms of scaling your application to be able to hand any",
    "start": "1065200",
    "end": "1070720"
  },
  {
    "text": "handle any increased loads or any form of ddos attacks and s3 could be used for any static content then as well",
    "start": "1070720",
    "end": "1077120"
  },
  {
    "text": "so using shield or shield advanced overall here is just very beneficial to the architecture for mitigating ddos",
    "start": "1077120",
    "end": "1083280"
  },
  {
    "text": "attacks um over to you adrian thanks louise louise",
    "start": "1083280",
    "end": "1088960"
  },
  {
    "text": "so so now",
    "start": "1088960",
    "end": "1094720"
  },
  {
    "text": "so now uh we're going to discuss how programmable features of cloudfront like lambda edge or cloudfront functions add",
    "start": "1094720",
    "end": "1101039"
  },
  {
    "text": "security features you can use lam.edge and cloudfront",
    "start": "1101039",
    "end": "1107039"
  },
  {
    "text": "functions to intercept and modify requests and responses and these are viewer requests",
    "start": "1107039",
    "end": "1113120"
  },
  {
    "text": "origin requests origin response and viewer response some security examples of having landed",
    "start": "1113120",
    "end": "1119440"
  },
  {
    "text": "edge or functions to your distribution is by adding http security headers to improve",
    "start": "1119440",
    "end": "1124880"
  },
  {
    "text": "security and privacy for your website also for redirecting unauthenticated",
    "start": "1124880",
    "end": "1129919"
  },
  {
    "text": "users to a sign-in page cloudform function is a new feature of cloudfront that was just released last",
    "start": "1129919",
    "end": "1135440"
  },
  {
    "text": "month and you can code directly in cloudfront without having without having to go to",
    "start": "1135440",
    "end": "1140799"
  },
  {
    "text": "to lambda also it is faster and way more cost effective for light operations like",
    "start": "1140799",
    "end": "1146640"
  },
  {
    "text": "adding security headers and redirecting unauthenticated users and also you can only use cloudfront",
    "start": "1146640",
    "end": "1153200"
  },
  {
    "text": "function and view requests and or viewer response",
    "start": "1153200",
    "end": "1158080"
  },
  {
    "text": "on this slide is just an example of using lambda at edge or function is by adding security headers",
    "start": "1158640",
    "end": "1164000"
  },
  {
    "text": "in the response and the likes of content security policy referrer policy strict transport",
    "start": "1164000",
    "end": "1170480"
  },
  {
    "text": "security x content type options x frame options and lastly xxss protection",
    "start": "1170480",
    "end": "1179840"
  },
  {
    "text": "another security example is to redirect unauthenticated users to a sign in page if no credentials were entered as shown",
    "start": "1180240",
    "end": "1187600"
  },
  {
    "text": "in the slide this is a sample code on how you can reprogram or recode requests and responses",
    "start": "1187600",
    "end": "1194640"
  },
  {
    "text": "in this case it's for lambda and for redirecting on unauthenticated users so this code checks if there is a",
    "start": "1194640",
    "end": "1201600"
  },
  {
    "text": "session id present in the cookie and if there is the request succeeds if not a 302 found",
    "start": "1201600",
    "end": "1208159"
  },
  {
    "text": "redirect is returned and a sign in link is returned to the viewer",
    "start": "1208159",
    "end": "1213519"
  },
  {
    "text": "logging and monitoring will be discussed by louise",
    "start": "1214080",
    "end": "1221840"
  },
  {
    "text": "thanks adrian so next we're going to go over some logging and monitoring features and services that are",
    "start": "1222640",
    "end": "1227760"
  },
  {
    "text": "integrated with cloudfront monitoring is such an important part of maintaining the availability and",
    "start": "1227760",
    "end": "1233760"
  },
  {
    "text": "performance of cloudfront um so yeah obviously it's very recommended for security as well just",
    "start": "1233760",
    "end": "1239039"
  },
  {
    "text": "even to easily debug multi-point failures or",
    "start": "1239039",
    "end": "1244240"
  },
  {
    "text": "monitoring and responding to any potential malicious attacks or incidents with clive front",
    "start": "1244240",
    "end": "1250320"
  },
  {
    "text": "so here we have cloud for an access logs which i'll actually go into more detail on the next slides but this is known as",
    "start": "1250320",
    "end": "1255520"
  },
  {
    "text": "cloudfront standard logging and it can be enabled on your distribution and we also have cons uh platform",
    "start": "1255520",
    "end": "1261200"
  },
  {
    "text": "console reports as well which is another feature of cloudfront aws athena is our service where you can",
    "start": "1261200",
    "end": "1267039"
  },
  {
    "text": "actually make sql statement queries um on the logs to be able to very easily search them and",
    "start": "1267039",
    "end": "1273120"
  },
  {
    "text": "see what you're looking for and hi from real-time logging is aws kinesis",
    "start": "1273120",
    "end": "1278799"
  },
  {
    "text": "so this is a service where you can very easily stream data and you'll be able to immediately",
    "start": "1278799",
    "end": "1285440"
  },
  {
    "text": "instantly see the logs i think it's within one second so we've more on the slide as well um monitoring requests using cloud watch",
    "start": "1285440",
    "end": "1292640"
  },
  {
    "text": "so we have played watch logs and also cloud watch alarms which i'll also do a use case on after this",
    "start": "1292640",
    "end": "1298159"
  },
  {
    "text": "um but basically this would be monitoring single metrics and if they go above a threshold you can be notified of",
    "start": "1298159",
    "end": "1304000"
  },
  {
    "text": "this logging api calls with cloudtrail so this would log all cloudfront related api calls in your",
    "start": "1304000",
    "end": "1310320"
  },
  {
    "text": "account and cloudtrail is enabled by default however if you want to store the logs you have to create your",
    "start": "1310320",
    "end": "1316000"
  },
  {
    "text": "own trail and lastly tracking configuration changes and also resource inventory with aws",
    "start": "1316000",
    "end": "1321760"
  },
  {
    "text": "config so on the next slide here we have cloudfront access logs also known as",
    "start": "1321760",
    "end": "1327760"
  },
  {
    "text": "standard logging where you can basically enable this on a per distribution level and then you can",
    "start": "1327760",
    "end": "1333679"
  },
  {
    "text": "save the logs to an s3 bucket that you can choose yourself and depending on which",
    "start": "1333679",
    "end": "1338799"
  },
  {
    "text": "distribution it's coming from you can actually save into different prefixes just to organize it better cloudfront standard",
    "start": "1338799",
    "end": "1345200"
  },
  {
    "text": "logging is free of charge you only pay for storing the logs and on the next slide you're going to see an example of what these logs",
    "start": "1345200",
    "end": "1352400"
  },
  {
    "text": "actually look like when being queried by athena so this is the sql-based service um so you can search here through the",
    "start": "1352400",
    "end": "1359120"
  },
  {
    "text": "logs and in terms of a security point of view you can see the date the time timestamp the location",
    "start": "1359120",
    "end": "1367120"
  },
  {
    "text": "like was this location expected if maybe you're looking up a previous attack that",
    "start": "1367120",
    "end": "1372240"
  },
  {
    "text": "happened the user agent which browsers are coming from is it coming from a bot and query string",
    "start": "1372240",
    "end": "1378080"
  },
  {
    "text": "can also tell you a lot about the incident um if it was an attack or if it was actually a genuine customer",
    "start": "1378080",
    "end": "1386320"
  },
  {
    "text": "on the next slide here we have real-time logging with aws kinesis so this gives you information about the",
    "start": "1386559",
    "end": "1393280"
  },
  {
    "text": "request made to a distribution in real time logs are delivered within seconds of receiving the request and you",
    "start": "1393280",
    "end": "1399120"
  },
  {
    "text": "can use this real-time logs to ingest that data monitor it analyze it and take action based on any content",
    "start": "1399120",
    "end": "1405919"
  },
  {
    "text": "delivery performance so this is really good there's also the sampling rate here i determine the",
    "start": "1405919",
    "end": "1410960"
  },
  {
    "text": "sampling rate one percent to 100 the percentage here is the percentage of requests for which you",
    "start": "1410960",
    "end": "1416559"
  },
  {
    "text": "want to receive these real-time records basically um and there are specific fields as well",
    "start": "1416559",
    "end": "1421760"
  },
  {
    "text": "if you want to receive logs in particular you know custom ways you can set this up too",
    "start": "1421760",
    "end": "1427039"
  },
  {
    "text": "and it can be enabled on a per distribution behavior as i mentioned before there's also extra metrics with amazon",
    "start": "1427039",
    "end": "1433760"
  },
  {
    "text": "cloudwatch such as error rates so if you want to see the 400 or 500 errors and there's also specific cash behaviors",
    "start": "1433760",
    "end": "1440400"
  },
  {
    "text": "as well path patterns which you can receive real-time logs for",
    "start": "1440400",
    "end": "1445840"
  },
  {
    "text": "cloudfront reporting suite so this is more detailed insight into even more metrics again",
    "start": "1446159",
    "end": "1451600"
  },
  {
    "text": "if you want to see different requests or error rates to be able to debug a previous scenario and get a full",
    "start": "1451600",
    "end": "1456960"
  },
  {
    "text": "report on what happened cash statistics usage charts what's popular as well",
    "start": "1456960",
    "end": "1462559"
  },
  {
    "text": "so top refers is another one so is a single page maybe uh being requested a lot of times",
    "start": "1462559",
    "end": "1468080"
  },
  {
    "text": "this can tell you a lot if it was in attack or not were they 400 errors which would be",
    "start": "1468080",
    "end": "1473120"
  },
  {
    "text": "client-side or 500 areas which may be server-side you can look up these you can see different graphs and ingest this data as",
    "start": "1473120",
    "end": "1478960"
  },
  {
    "text": "well which is really handy on the next slide we have cloudwatch alarms so i mentioned this briefly",
    "start": "1478960",
    "end": "1485840"
  },
  {
    "text": "earlier but you can set up different cloud watch alarms where you can define your own metrics and set thresholds for these metrics so",
    "start": "1485840",
    "end": "1492960"
  },
  {
    "text": "if any changes are made to your clarifying distribution or if there's any different errors or",
    "start": "1492960",
    "end": "1498799"
  },
  {
    "text": "something like that you can actually set a threshold to notify you via alarm or even to take action",
    "start": "1498799",
    "end": "1504559"
  },
  {
    "text": "if it suddenly goes above or below a certain threshold so this is a great thing to have if you want um more of an automated approach to",
    "start": "1504559",
    "end": "1511760"
  },
  {
    "text": "dealing with different attacks and mitigating them and all the logs are stored as well",
    "start": "1511760",
    "end": "1517279"
  },
  {
    "text": "cloudtrail as i mentioned before this is enabled by default on your account however you can",
    "start": "1517279",
    "end": "1522640"
  },
  {
    "text": "um create a trail if you want to save the logs yourself and be able to go through them but yeah you can see everything in event",
    "start": "1522640",
    "end": "1528559"
  },
  {
    "text": "history and in terms of again security you can see event name ip address so where did the",
    "start": "1528559",
    "end": "1533600"
  },
  {
    "text": "request come from at what time what were they requesting this can tell you a lot as well um about any",
    "start": "1533600",
    "end": "1540000"
  },
  {
    "text": "requests that are made to your distributions and looking for any unwanted actions so you can see here on the right all the different api calls",
    "start": "1540000",
    "end": "1546559"
  },
  {
    "text": "made on the next slide we have aws config",
    "start": "1546559",
    "end": "1552000"
  },
  {
    "text": "so this service is really good for monitoring any changes made to your resources in this case your cloudfront",
    "start": "1552000",
    "end": "1558640"
  },
  {
    "text": "distribution and what it can do is any change that's made you will receive a recording of this in a",
    "start": "1558640",
    "end": "1564640"
  },
  {
    "text": "configuration item and you can also set up your own aws",
    "start": "1564640",
    "end": "1570080"
  },
  {
    "text": "config rules so these can be rules that are managed by aws and they're predefined and you can very",
    "start": "1570080",
    "end": "1575200"
  },
  {
    "text": "easily just select them which are just below and i'll get into that in a second or else there's also custom managed rules as well where you",
    "start": "1575200",
    "end": "1581600"
  },
  {
    "text": "can actually define your own rules using lambda so depending on your security posture and your business requirements",
    "start": "1581600",
    "end": "1588480"
  },
  {
    "text": "what exactly do you want to ensure is you know your client distribution is compliant with so for example",
    "start": "1588480",
    "end": "1593679"
  },
  {
    "text": "the rules below are showing is cloudfront access logging enabled for your distributions so if it's not",
    "start": "1593679",
    "end": "1599440"
  },
  {
    "text": "this would make the cloud the config rule that you've defined non-compliant and you will be notified of this you can even set up all the",
    "start": "1599440",
    "end": "1605840"
  },
  {
    "text": "remediation to this as well other examples of predefined managed rules by config",
    "start": "1605840",
    "end": "1611760"
  },
  {
    "text": "are is it associated with web acls does it have a custom ssl certificate",
    "start": "1611760",
    "end": "1617600"
  },
  {
    "text": "associated or is it using origin access identity which is what adrian mentioned earlier",
    "start": "1617600",
    "end": "1623279"
  },
  {
    "text": "is this configured if you have an s3 origin which is just a way to make um request your urgent more secure as",
    "start": "1623279",
    "end": "1629600"
  },
  {
    "text": "well so these are different things you can check with config and lastly moving on to comply oh",
    "start": "1629600",
    "end": "1634720"
  },
  {
    "text": "actually before we get to compliance padme are there any questions from the audience",
    "start": "1634720",
    "end": "1641840"
  },
  {
    "text": "yes you're new yes we do we do have a few questions from the audience thank you louise um the question uh from",
    "start": "1642960",
    "end": "1650720"
  },
  {
    "text": "princeton girl 21 thank you for your question can you talk a little bit about",
    "start": "1650720",
    "end": "1655840"
  },
  {
    "text": "cloudfront encryption at rest oh yeah sure um",
    "start": "1655840",
    "end": "1661039"
  },
  {
    "text": "so i guess the reason we actually didn't touch on encryption at rest in these slides is because con cloudtrail uh sorry cloudfront is a",
    "start": "1661039",
    "end": "1669360"
  },
  {
    "text": "content delivery network so we're more talking about the data being moved in transit but in terms of at rest",
    "start": "1669360",
    "end": "1676000"
  },
  {
    "text": "uh cloudfront uses ssds which are encrypted for are they encrypted at the edge location",
    "start": "1676000",
    "end": "1681360"
  },
  {
    "text": "points um presence of what they're called pops and it's also their encrypted ebs volumes at",
    "start": "1681360",
    "end": "1687360"
  },
  {
    "text": "the regional edge look at regional edge cache location as well",
    "start": "1687360",
    "end": "1692399"
  },
  {
    "text": "so that is how the data is actually encrypted at rest there's also um function code as well",
    "start": "1692399",
    "end": "1699760"
  },
  {
    "text": "i'm pretty sure so that's always stored in encrypted format at the encrypted ssds on the edge location pops and in",
    "start": "1699760",
    "end": "1707440"
  },
  {
    "text": "other storage locations by cloudfront as well in terms of encrypting the data at your origin",
    "start": "1707440",
    "end": "1713120"
  },
  {
    "text": "you can also set up encryption on s3 buckets or on your ec2 instances using evs volumes or there",
    "start": "1713120",
    "end": "1719679"
  },
  {
    "text": "are different ways to do that as well but in terms of just cloudfront.rest amazon manages all of that for you don't",
    "start": "1719679",
    "end": "1725520"
  },
  {
    "text": "really have to worry about it it's all on encrypted ssds that are all internally managed by aws",
    "start": "1725520",
    "end": "1731679"
  },
  {
    "text": "thanks louise and i'll also post a link to the documentation on this topic as well i have another",
    "start": "1731679",
    "end": "1738320"
  },
  {
    "text": "question here from rally63 and the question is does waff allow rate limiting or does it",
    "start": "1738320",
    "end": "1746799"
  },
  {
    "text": "only allow blocking connections um yeah it actually allows both so you",
    "start": "1746799",
    "end": "1753120"
  },
  {
    "text": "can specify a rate limit or ip addresses as a condition and what will happen is aws",
    "start": "1753120",
    "end": "1759120"
  },
  {
    "text": "waff will set the limit on the ip addresses that match the conditions so when an ip address reaches that rate",
    "start": "1759120",
    "end": "1765679"
  },
  {
    "text": "limit threshold then waff will apply the whatever action you assigned whether it's allow block or",
    "start": "1765679",
    "end": "1771919"
  },
  {
    "text": "account as quickly as possible usually within 30 seconds and it will fully block any rules with sorry any additional ip",
    "start": "1771919",
    "end": "1779200"
  },
  {
    "text": "addresses after that that from the rate that you set got it that's all the questions on the",
    "start": "1779200",
    "end": "1785039"
  },
  {
    "text": "window everyone please post your questions we have our experts adrian uh and louise here to",
    "start": "1785039",
    "end": "1790640"
  },
  {
    "text": "answer those for you and back to you luis okay uh take it away adrian",
    "start": "1790640",
    "end": "1797360"
  },
  {
    "text": "now we're moving on to cloudfront compliance um third-party auditors assesses the security and compliance of",
    "start": "1797360",
    "end": "1803679"
  },
  {
    "text": "amazon cloudfund as part of multiple abs compliance programs these include",
    "start": "1803679",
    "end": "1808720"
  },
  {
    "text": "soc pci hipaa fedramp fips and others which is for for example",
    "start": "1808720",
    "end": "1815120"
  },
  {
    "text": "pci dss for payment card standards fedramp for us government data standards",
    "start": "1815120",
    "end": "1821039"
  },
  {
    "text": "fips for u.s government security standards and hipaa for protected health information just to",
    "start": "1821039",
    "end": "1826240"
  },
  {
    "text": "name a few for more information about cloud from compliance please visit cloudfront",
    "start": "1826240",
    "end": "1832480"
  },
  {
    "text": "compliance programs links shown in the screen now we're going to discuss about",
    "start": "1832480",
    "end": "1838320"
  },
  {
    "text": "security best practices for a cloud firm so yeah here are some security best",
    "start": "1838320",
    "end": "1845200"
  },
  {
    "text": "practices for client friends that myself and adrian put together just to summarize everything that we discussed",
    "start": "1845200",
    "end": "1850399"
  },
  {
    "text": "and a lot of this will be put into play once we start the demo as well so the first one is what i touched on",
    "start": "1850399",
    "end": "1856480"
  },
  {
    "text": "earlier about configuring http to https redirects for your viewer protocol policy",
    "start": "1856480",
    "end": "1862240"
  },
  {
    "text": "and what this is basically is if your viewers are coming in using http making the request which is",
    "start": "1862240",
    "end": "1868799"
  },
  {
    "text": "unsecure clarifying can then redirect this request to https making all of the communications more",
    "start": "1868799",
    "end": "1876159"
  },
  {
    "text": "secure then um encrypting the traffic between player from distributions and their origins so",
    "start": "1876159",
    "end": "1882000"
  },
  {
    "text": "first was viewer between viewer and cloudfront now it's clip on your origin using https as well",
    "start": "1882000",
    "end": "1887519"
  },
  {
    "text": "with this for this you can actually um assign a different protocol policy which i mentioned again earlier so then",
    "start": "1887519",
    "end": "1893919"
  },
  {
    "text": "lastly using improved security policies for your https connections what i was saying here is the more",
    "start": "1893919",
    "end": "1900480"
  },
  {
    "text": "secure more advanced cipher that you use whenever the tls handshake takes place it is going to they're both going to",
    "start": "1900480",
    "end": "1907200"
  },
  {
    "text": "decide on the most secure most advanced protocol and that will make your",
    "start": "1907200",
    "end": "1912720"
  },
  {
    "text": "communication secure and in continuation of having https between viewers and",
    "start": "1912720",
    "end": "1918080"
  },
  {
    "text": "cloudfront and cloudfront 2d origin it is better not for your viewers to go straight to the origin",
    "start": "1918080",
    "end": "1923679"
  },
  {
    "text": "so if you're using s3 rest api bucket origins you can use origin axis identity or if",
    "start": "1923679",
    "end": "1929600"
  },
  {
    "text": "you're using website endpoint or custom origins you can use cloudfront custom headers to",
    "start": "1929600",
    "end": "1935039"
  },
  {
    "text": "pass these secret headers also enforcing field level encryption for sensitive",
    "start": "1935039",
    "end": "1940559"
  },
  {
    "text": "and confidential content is um highly recommended so that",
    "start": "1940559",
    "end": "1946640"
  },
  {
    "text": "private information and confidential information like for example credit card or health care information",
    "start": "1947279",
    "end": "1952720"
  },
  {
    "text": "will be um encrypted um from edge location all the way to the application stack",
    "start": "1952720",
    "end": "1960159"
  },
  {
    "text": "oh uh yeah and then moving away from encryption and on to logging and monitoring so you can enable",
    "start": "1960960",
    "end": "1967039"
  },
  {
    "text": "cloud for an access logging on your distribution and as i mentioned before this is like standard logging",
    "start": "1967039",
    "end": "1973120"
  },
  {
    "text": "it's free of charge you only pay for storing the logs and then other features and services to do logging and",
    "start": "1973120",
    "end": "1979679"
  },
  {
    "text": "monitoring that are integrated with cloudfront are amazon cloudwatch for setting alarms",
    "start": "1979679",
    "end": "1984880"
  },
  {
    "text": "setting thresholds and being notified of this athena for making any sql queries that",
    "start": "1984880",
    "end": "1990080"
  },
  {
    "text": "you'd like to your logs just an easier way to search for whatever you're looking for whether it's api call or timestamp or a type of",
    "start": "1990080",
    "end": "1996399"
  },
  {
    "text": "request anything like that um kinesis for real-time logging and for streaming and ingesting that data to be",
    "start": "1996399",
    "end": "2002559"
  },
  {
    "text": "analyzed and monitored and aws cloud trail for monitoring any api calls to your cloud distribution as",
    "start": "2002559",
    "end": "2008720"
  },
  {
    "text": "well and you can use aws config for configuration management resource inventory ensuring that your",
    "start": "2008720",
    "end": "2016720"
  },
  {
    "text": "resources are compliant with your different conflict rules and if not how would you like to be notified of",
    "start": "2016720",
    "end": "2022000"
  },
  {
    "text": "this or would you like any other mediation to take place for ddos resiliency cloudfront",
    "start": "2022000",
    "end": "2028080"
  },
  {
    "text": "integrates with awswaff for web application firewall and ailable shield and to restrict access to content i'm",
    "start": "2028080",
    "end": "2035840"
  },
  {
    "text": "using sign or else inside cookies as well and by using and on top of that you can use waf again ngu restriction",
    "start": "2035840",
    "end": "2043279"
  },
  {
    "text": "and last but not least lambda edge and cloudfront functions adds a variety of functions",
    "start": "2043279",
    "end": "2048398"
  },
  {
    "text": "and security features for your distribution and your website",
    "start": "2048399",
    "end": "2053520"
  },
  {
    "text": "so now we're going to move on to the demo",
    "start": "2054399",
    "end": "2061839"
  },
  {
    "text": "so",
    "start": "2072839",
    "end": "2075839"
  },
  {
    "text": "so now just uh we're going through creating platform distribution from the very start",
    "start": "2080079",
    "end": "2085520"
  },
  {
    "text": "so yeah so let's get started so for the origin domain name you have",
    "start": "2085520",
    "end": "2090960"
  },
  {
    "text": "to specify the dns uh name of your origin it has to be publicly accessible",
    "start": "2090960",
    "end": "2096638"
  },
  {
    "text": "for a cloud front to access this origin okay of course this is where you were going to store",
    "start": "2096639",
    "end": "2102079"
  },
  {
    "text": "your your content and you can use amazon s3 as shown a while ago",
    "start": "2102079",
    "end": "2107599"
  },
  {
    "text": "elb ec2 or your own http server that is dns publicly accessible",
    "start": "2107599",
    "end": "2113200"
  },
  {
    "text": "for now i'm going to use one of my s3 buckets for the origin path if you have a",
    "start": "2113200",
    "end": "2118560"
  },
  {
    "text": "specific path in your origin that you want cloudfront to get content to you can",
    "start": "2118560",
    "end": "2124160"
  },
  {
    "text": "specify it here but for now i'll leave this blank origin shield is another layer for a",
    "start": "2124160",
    "end": "2130400"
  },
  {
    "text": "cloud front to for for caching purposes and in terms of",
    "start": "2130400",
    "end": "2136480"
  },
  {
    "text": "if if there are multiple regional edge cache going to get the content instead of",
    "start": "2136480",
    "end": "2144000"
  },
  {
    "text": "going straight to the origin it can just go to the origin shield okay and it has to be close to the",
    "start": "2144000",
    "end": "2149839"
  },
  {
    "text": "origin so right now i'll just leave it as no origin id auto populates depending on the origin",
    "start": "2149839",
    "end": "2155599"
  },
  {
    "text": "domain name then restrict bucket access is since i'm",
    "start": "2155599",
    "end": "2161599"
  },
  {
    "text": "using s3 and if you're using an s3 rest api endpoint you can use um",
    "start": "2161599",
    "end": "2167359"
  },
  {
    "text": "origin access entity or oai which creates the im user as shown a while ago and yes",
    "start": "2167359",
    "end": "2174560"
  },
  {
    "text": "to update pocket policy of course then origin connection attempts just um",
    "start": "2174560",
    "end": "2180240"
  },
  {
    "text": "basically tells how how many times cloudfront tries to connect if",
    "start": "2180240",
    "end": "2185839"
  },
  {
    "text": "there's a there's an error where clutter cannot connect to the origin for now leave it as three connection",
    "start": "2185839",
    "end": "2192320"
  },
  {
    "text": "timeout is for each of the try it um this tells the maximum seconds for",
    "start": "2192320",
    "end": "2198000"
  },
  {
    "text": "each try so now i'll leave this 10. origin custom headers is used for",
    "start": "2198000",
    "end": "2203520"
  },
  {
    "text": "origin um from custom origins for example passing in secret headers okay if you're not using s3 bucket and",
    "start": "2203520",
    "end": "2211280"
  },
  {
    "text": "you can specify the secret name and value here",
    "start": "2211280",
    "end": "2217280"
  },
  {
    "text": "so that the request will be successful uh without this then of course the request will not be successful",
    "start": "2217280",
    "end": "2225040"
  },
  {
    "text": "then the default cache behavior basically tells between",
    "start": "2225200",
    "end": "2230320"
  },
  {
    "text": "cloud front and viewer so here for security best practice it's",
    "start": "2230320",
    "end": "2236160"
  },
  {
    "text": "better to use https so here the first the second one is if there are any user agents that is that",
    "start": "2236160",
    "end": "2242480"
  },
  {
    "text": "are using http they will be redirected to https and https only um meaning https is the",
    "start": "2242480",
    "end": "2251040"
  },
  {
    "text": "only protocol allowed and any http will be access denied so in this case i will just pick redirect http to",
    "start": "2251040",
    "end": "2258000"
  },
  {
    "text": "https allowed http methods is what your viewers are allowed to",
    "start": "2258000",
    "end": "2264000"
  },
  {
    "text": "to to to to do basically in your website and going straight to the origin for now",
    "start": "2264000",
    "end": "2270560"
  },
  {
    "text": "i'll just leave it as get head options but please take note as a security practice if you're using put post patch",
    "start": "2270560",
    "end": "2277280"
  },
  {
    "text": "delete please ensure that in your origin you handle these requests properly so that to prevent any",
    "start": "2277280",
    "end": "2284160"
  },
  {
    "text": "malicious activity basically or malicious actions from the viewers so for now i'll",
    "start": "2284160",
    "end": "2289359"
  },
  {
    "text": "just use get head and options a field level encryption which is for",
    "start": "2289359",
    "end": "2294480"
  },
  {
    "text": "private and confidential information that is passed by the viewer to cloudfront for now i'll",
    "start": "2294480",
    "end": "2301040"
  },
  {
    "text": "i'll just leave it as blank cached http methods um what are the methods that cloudfront will be cached",
    "start": "2301040",
    "end": "2308000"
  },
  {
    "text": "by default get ahead will be cached and you can optionally pick options to for for cloudfront to",
    "start": "2308000",
    "end": "2314560"
  },
  {
    "text": "cache options cache and origin request settings dictates um how cloudfront",
    "start": "2314560",
    "end": "2319920"
  },
  {
    "text": "and how long cloudfront is going to cache your contents so here you can set up your the request",
    "start": "2319920",
    "end": "2326880"
  },
  {
    "text": "headers that cloudfront that you want cloudfront to pass to the origin the minimum ttl",
    "start": "2326880",
    "end": "2332240"
  },
  {
    "text": "of the object in the edge locations the maximum ttl and the default dtl on how long the",
    "start": "2332240",
    "end": "2338079"
  },
  {
    "text": "objects will stay in the edge locations you may also want cloudfront to forward",
    "start": "2338079",
    "end": "2343920"
  },
  {
    "text": "cookies and query strings to your origin and if you need to you can configure it",
    "start": "2343920",
    "end": "2350000"
  },
  {
    "text": "but in this case i will use cache policy and origin request policy so yep it's basically the same thing as",
    "start": "2350000",
    "end": "2358160"
  },
  {
    "text": "the legacy cache settings okay but this is way more simplified",
    "start": "2358160",
    "end": "2363280"
  },
  {
    "text": "smooth streaming i'll leave it as no since i am not using microsoft iis server",
    "start": "2363280",
    "end": "2368560"
  },
  {
    "text": "and restrict viewer access is from uh shown a while ago which is for",
    "start": "2368560",
    "end": "2375040"
  },
  {
    "text": "paid view content like video video and demand streaming where you you need viewers to use sign you are",
    "start": "2375040",
    "end": "2381920"
  },
  {
    "text": "also assigned cookies to access your content you can use either key groups or a",
    "start": "2381920",
    "end": "2387839"
  },
  {
    "text": "trusted signer okay it is recommended to use key groups",
    "start": "2387839",
    "end": "2393599"
  },
  {
    "text": "rather than trusted trusted signer because you have more control on who and who can create the um",
    "start": "2393599",
    "end": "2401040"
  },
  {
    "text": "what you call this designer elson cookie in this case i'll just leave it as no compress objects",
    "start": "2401040",
    "end": "2406960"
  },
  {
    "text": "automatically helps you to helps your website to render um faster so basically what this does is",
    "start": "2406960",
    "end": "2412640"
  },
  {
    "text": "if the object is not compressed and cloud front sees that it can be a compressed object depending on",
    "start": "2412640",
    "end": "2419520"
  },
  {
    "text": "requirements like content encoding and this is the file the size of the file",
    "start": "2419520",
    "end": "2425680"
  },
  {
    "text": "then cloud will compress it i'll leave it as yes okay edge functions um you can associate",
    "start": "2425680",
    "end": "2433920"
  },
  {
    "text": "edge functions um as shown a while ago whether it's a viewer response viewer request",
    "start": "2433920",
    "end": "2439280"
  },
  {
    "text": "or origin request or origin response okay this is an example of a lambda code",
    "start": "2439280",
    "end": "2445440"
  },
  {
    "text": "or a live the function where i'm adding security headers as shown a while ago on the presentation",
    "start": "2445440",
    "end": "2452720"
  },
  {
    "text": "okay so yeah strict transport security access protection refer policy and i can just use that arm",
    "start": "2452720",
    "end": "2460000"
  },
  {
    "text": "and i can just copy and paste that for that particular behavior path in cloud fund",
    "start": "2460000",
    "end": "2466160"
  },
  {
    "text": "okay um enable real time login for",
    "start": "2466160",
    "end": "2471359"
  },
  {
    "text": "for aws kinesis of course yeah for now i'll just leave it as no for the",
    "start": "2471359",
    "end": "2478480"
  },
  {
    "text": "distribution settings itself or just in general um price class dictates what are the edge locations that you are",
    "start": "2478480",
    "end": "2485200"
  },
  {
    "text": "going to use so for example if you only need um edge locations in us canada and",
    "start": "2485200",
    "end": "2490400"
  },
  {
    "text": "europe you can just pick the first one if you need us canada europe asia middle east and africa then",
    "start": "2490400",
    "end": "2496560"
  },
  {
    "text": "uh you can use the second one then for all edge locations which is the best performance um anywhere like your",
    "start": "2496560",
    "end": "2502160"
  },
  {
    "text": "viewers anywhere from the world can utilize cloudfront close to their locations",
    "start": "2502160",
    "end": "2508318"
  },
  {
    "text": "acl this is the firewall that you can add to cloudfront basically for for example to restrict or to allow or",
    "start": "2509359",
    "end": "2516960"
  },
  {
    "text": "deny certain ips and locations domain names um",
    "start": "2516960",
    "end": "2523680"
  },
  {
    "text": "by default you get a cloudfront uh link for you to access the distribution but",
    "start": "2523680",
    "end": "2529359"
  },
  {
    "text": "if you want your own cname or your you want your own website domain like for example",
    "start": "2529359",
    "end": "2534839"
  },
  {
    "text": "example.com you can specify it here and for https connection you can",
    "start": "2534839",
    "end": "2540640"
  },
  {
    "text": "add a custom ssl certificate from amazon certificate manager or acm um",
    "start": "2540640",
    "end": "2548160"
  },
  {
    "text": "yeah for sni security policy it is recommended to use tlsv 1.2 2019 and above for",
    "start": "2548160",
    "end": "2555599"
  },
  {
    "text": "better ciphers or security ciphers between the connection between the viewer and cloudfront",
    "start": "2555599",
    "end": "2562720"
  },
  {
    "text": "supported http versions yes http 2 1.1 and 1.0 default root object so",
    "start": "2562720",
    "end": "2569359"
  },
  {
    "text": "for example if your viewers only hit your uh website domain without any path in",
    "start": "2569359",
    "end": "2575200"
  },
  {
    "text": "the url cloudfront will look for the index.html which is it will show the default page",
    "start": "2575200",
    "end": "2581839"
  },
  {
    "text": "standard login which is uh one of the i mean one of the security features or best",
    "start": "2581839",
    "end": "2586880"
  },
  {
    "text": "practice actually to monitor the requests coming into your website or or cloudform distribution",
    "start": "2586880",
    "end": "2595200"
  },
  {
    "text": "so you can store those logs in an amazon sv bucket and you can you can add log prefix if",
    "start": "2595200",
    "end": "2601599"
  },
  {
    "text": "you want to for now i'll leave it as no cookie logging um i'll put it as",
    "start": "2601599",
    "end": "2606640"
  },
  {
    "text": "off and april ipv6 you can enable ipv6 for cloudfront to to use ipv6 to",
    "start": "2606640",
    "end": "2612800"
  },
  {
    "text": "connect the platform or not um yeah comment just to before i click",
    "start": "2612800",
    "end": "2619760"
  },
  {
    "text": "before we go to the create distribution going back to the question a while ago since i'm using s3",
    "start": "2619760",
    "end": "2624960"
  },
  {
    "text": "i know it didn't show between uh you can between cloudfront and the origin but if",
    "start": "2624960",
    "end": "2630560"
  },
  {
    "text": "you're using your own custom origin on on top of the page you can either use",
    "start": "2630560",
    "end": "2635920"
  },
  {
    "text": "http or https only to connect to the origin or you can use",
    "start": "2635920",
    "end": "2642560"
  },
  {
    "text": "match viewer where it will use i mean cloudfront in order for platform to communicate to",
    "start": "2642560",
    "end": "2648079"
  },
  {
    "text": "the origin it will use the protocol that the viewer use for example whether it's http or",
    "start": "2648079",
    "end": "2654000"
  },
  {
    "text": "https then cloudfront will use http or https to the origin",
    "start": "2654000",
    "end": "2660078"
  },
  {
    "text": "okay so creating the distribution um here it is um you have your distribution id the are",
    "start": "2660319",
    "end": "2666319"
  },
  {
    "text": "and the the cname if you have one of course you will have your own domain name for example cloudfront.net basically",
    "start": "2666319",
    "end": "2673440"
  },
  {
    "text": "everything that we have discussed a while ago okay um",
    "start": "2673440",
    "end": "2679760"
  },
  {
    "text": "yeah so behavior path pattern this is where you have",
    "start": "2679760",
    "end": "2686319"
  },
  {
    "text": "other paths in your url and you can set them up depending on you",
    "start": "2686319",
    "end": "2691920"
  },
  {
    "text": "know the the objects the like caching the objects and for different viewer protocol policy",
    "start": "2691920",
    "end": "2697760"
  },
  {
    "text": "or allowed http methods for that specific path file and also you can",
    "start": "2697760",
    "end": "2704560"
  },
  {
    "text": "add additional lambda edge on a specific um path pattern or behavior path pattern which is shown",
    "start": "2704560",
    "end": "2711599"
  },
  {
    "text": "like this um yeah",
    "start": "2711599",
    "end": "2716720"
  },
  {
    "text": "origin and origin groups you can add um um where you can add up to 25 origins",
    "start": "2716720",
    "end": "2723920"
  },
  {
    "text": "um where your cloudfront needs to get content to uh for example on this um on my s3 origin here as i was",
    "start": "2723920",
    "end": "2731359"
  },
  {
    "text": "saying going back to the question if you weren't using s3 there would be an option here",
    "start": "2731359",
    "end": "2736720"
  },
  {
    "text": "on what cloudfront or you want you want cloudfront to use in order to communicate to the origin either http or",
    "start": "2736720",
    "end": "2743040"
  },
  {
    "text": "https or match viewer but here since i'm using s3 it's not appearing and https is used by",
    "start": "2743040",
    "end": "2750880"
  },
  {
    "text": "default so going to my amazon s3 bucket as an",
    "start": "2750880",
    "end": "2756000"
  },
  {
    "text": "origin so as you can see it's fully private block public access is are all turned on and if we look",
    "start": "2756000",
    "end": "2764319"
  },
  {
    "text": "upon the bucket policy okay i'm only allowing cloud front and it's",
    "start": "2764319",
    "end": "2770319"
  },
  {
    "text": "the only principle to get this object any other principle other than platform will",
    "start": "2770319",
    "end": "2775680"
  },
  {
    "text": "will of course uh will be access denied and yep",
    "start": "2775680",
    "end": "2781520"
  },
  {
    "text": "uh yeah as you can see my bucket acl is all private no one is allowed to list or to",
    "start": "2783200",
    "end": "2791040"
  },
  {
    "text": "get any objects other than cloudfront okay for monitoring",
    "start": "2791040",
    "end": "2798480"
  },
  {
    "text": "as louise mentioned a while ago you can see the requests the error rate um data transfer",
    "start": "2798480",
    "end": "2806079"
  },
  {
    "text": "4xx error rate between uh viewer and cloudfront as well as between cloudfront and the",
    "start": "2806079",
    "end": "2812560"
  },
  {
    "text": "origin which is shown in the 5x error rate breakdown and of course origin latency",
    "start": "2812560",
    "end": "2817599"
  },
  {
    "text": "between catherine and the origin and last but not least cash hit rate as well",
    "start": "2817599",
    "end": "2824480"
  },
  {
    "text": "there you go for logs in the cloudfront console we",
    "start": "2825440",
    "end": "2831760"
  },
  {
    "text": "can see the total request and the percentage of viewer requests by result type okay bytes transferred to the viewers",
    "start": "2831760",
    "end": "2839119"
  },
  {
    "text": "which is the successful operations i mean successful uh responses back to the viewer",
    "start": "2839119",
    "end": "2845040"
  },
  {
    "text": "uh http status code which is a breakdown of 2xx 3xx 4xx and 5xx and a percentage of get",
    "start": "2845040",
    "end": "2852240"
  },
  {
    "text": "requests that did not finish downloading this is really important just to see if there's",
    "start": "2852240",
    "end": "2857359"
  },
  {
    "text": "anyone just trying to connect the cloudfront and all of a sudden just breaks the connection just to throttle",
    "start": "2857359",
    "end": "2863040"
  },
  {
    "text": "the requests so for popular objects report you can also see the the the objects that are being",
    "start": "2863040",
    "end": "2871359"
  },
  {
    "text": "get the most and the top refers as well on where the requests are coming from um",
    "start": "2871359",
    "end": "2879280"
  },
  {
    "text": "yeah usage the number of requests data transfer again yeah data transfer by destination",
    "start": "2879280",
    "end": "2886559"
  },
  {
    "text": "and then the viewers you can see who are making the request whether it's a desktop bot or unknown or mobile",
    "start": "2886559",
    "end": "2893920"
  },
  {
    "text": "um yeah and then you can see what are the",
    "start": "2893920",
    "end": "2899200"
  },
  {
    "text": "browsers they're using whether it's firefox or uc browser or chrome",
    "start": "2899200",
    "end": "2906400"
  },
  {
    "text": "you can go as far as 60 days if i'm not mistaken",
    "start": "2906400",
    "end": "2911839"
  },
  {
    "text": "bot crawler yeah unknown you can basically filter out um to see",
    "start": "2911839",
    "end": "2918960"
  },
  {
    "text": "what are the kind of users that are trying to get requests to your to your",
    "start": "2918960",
    "end": "2924079"
  },
  {
    "text": "distribution as well as operating system you can use whether they're using mac os or linux or windows or ios or android",
    "start": "2924079",
    "end": "2932640"
  },
  {
    "text": "as an example okay and lastly the locations on where the",
    "start": "2932640",
    "end": "2939280"
  },
  {
    "text": "viewers are coming from and you can highlight the top five countries where",
    "start": "2939280",
    "end": "2944640"
  },
  {
    "text": "the viewers are requesting something from your distribution",
    "start": "2944640",
    "end": "2949680"
  },
  {
    "text": "so now uh in terms of the logging this the last part of it",
    "start": "2951680",
    "end": "2958240"
  },
  {
    "text": "yeah you can use amazon athena as an example and then when you query them this is where you see",
    "start": "2958240",
    "end": "2964960"
  },
  {
    "text": "the the operations",
    "start": "2964960",
    "end": "2971838"
  },
  {
    "text": "just the sample form so yep that's it for the demo",
    "start": "2972319",
    "end": "2980880"
  },
  {
    "text": "great thanks adrian um padma are there any questions before we finish up",
    "start": "2982240",
    "end": "2988800"
  },
  {
    "text": "thanks for the great demo adrian and yes we do have a couple of questions here on",
    "start": "2988880",
    "end": "2994640"
  },
  {
    "text": "the chat window so the first question is from uh ajit tasha thank you for your question",
    "start": "2994640",
    "end": "3001599"
  },
  {
    "text": "the question is about aws shield and the aws web application firewall can you",
    "start": "3001599",
    "end": "3008319"
  },
  {
    "text": "talk about when you would use one versus the other uh oh yeah yeah sure um so",
    "start": "3008319",
    "end": "3016559"
  },
  {
    "text": "while waff is uh that's used to mitigate any ddos attacks at layer 7 of the osi model so the application there",
    "start": "3016559",
    "end": "3023520"
  },
  {
    "text": "shield is more used to protect against any uh web services from datasets on layer 3 or layer 4. so that would be the",
    "start": "3023520",
    "end": "3030880"
  },
  {
    "text": "network or the transport layer so layer 3 or layer 4 attacks would be um",
    "start": "3030880",
    "end": "3036640"
  },
  {
    "text": "the ping of death using imcp um icmp floods as well as teardrop attacks",
    "start": "3036640",
    "end": "3044720"
  },
  {
    "text": "synac attacks to sin flood attacks uh udp flood tax reflection attacks i think",
    "start": "3044720",
    "end": "3050800"
  },
  {
    "text": "that's everything i can think of and then layer seven attacks are what i mentioned earlier so sql injections",
    "start": "3050800",
    "end": "3056160"
  },
  {
    "text": "uh sea surf attacks and http flood attacks as well so that would be what cloudfront and what could be working",
    "start": "3056160",
    "end": "3062240"
  },
  {
    "text": "together on we do have another talk in two weeks same time on twitch as well called architecting",
    "start": "3062240",
    "end": "3068800"
  },
  {
    "text": "for ddos resiliency or we'll actually be talking a lot more about this kind of thing if you would like to join that",
    "start": "3068800",
    "end": "3074960"
  },
  {
    "text": "thank you louise i also posted a link to the when you use shield versus web on",
    "start": "3074960",
    "end": "3080800"
  },
  {
    "text": "the chat window hopefully that's useful agitation uh there was another question from",
    "start": "3080800",
    "end": "3085839"
  },
  {
    "text": "sml block 66 thank you for your question uh this was about how to use amazon",
    "start": "3085839",
    "end": "3091200"
  },
  {
    "text": "cloudwatch dashboards and custom cloud watch metrics i posted the links on the chat window",
    "start": "3091200",
    "end": "3096400"
  },
  {
    "text": "hopefully those links are useful as well with that everyone today we looked at",
    "start": "3096400",
    "end": "3102640"
  },
  {
    "text": "amazon cloudfront and some of the best practices for leveraging the security features using cloudfront",
    "start": "3102640",
    "end": "3108559"
  },
  {
    "text": "thank you to our moderators for posting the registration page for the upcoming episodes aws supports",
    "start": "3108559",
    "end": "3115160"
  },
  {
    "text": "you.splashthat.com please bookmark this page and we hope you can join us next time if there are any questions that were not",
    "start": "3115160",
    "end": "3121520"
  },
  {
    "text": "answered today you can post them on forums.aws.amazon.com or email us any feedback aws supports",
    "start": "3121520",
    "end": "3128720"
  },
  {
    "text": "you at amazon.com we want to hear from you and tell us what else you would like to",
    "start": "3128720",
    "end": "3133760"
  },
  {
    "text": "see on the show thank you for joining us today at aw supports you and happy cloud computing",
    "start": "3133760",
    "end": "3143520"
  }
]