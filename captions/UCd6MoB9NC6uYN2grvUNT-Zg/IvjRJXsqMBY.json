[
  {
    "start": "0",
    "end": "182000"
  },
  {
    "text": "[Music]",
    "start": "140",
    "end": "1160"
  },
  {
    "text": "[Applause]",
    "start": "1160",
    "end": "2910"
  },
  {
    "text": "[Music]",
    "start": "2910",
    "end": "6080"
  },
  {
    "text": "hello I am Santosh a cloud support",
    "start": "8599",
    "end": "11320"
  },
  {
    "text": "engineer at the AWS office in Dallas",
    "start": "11320",
    "end": "14719"
  },
  {
    "text": "today I'm going to show how to",
    "start": "14719",
    "end": "16278"
  },
  {
    "text": "troubleshoot problems that might occur",
    "start": "16279",
    "end": "18400"
  },
  {
    "text": "when you are trying to connect to an",
    "start": "18400",
    "end": "20240"
  },
  {
    "text": "Amazon relational database service",
    "start": "20240",
    "end": "21960"
  },
  {
    "text": "database or an Amazon Aurora database",
    "start": "21960",
    "end": "24640"
  },
  {
    "text": "using Amazon RDS proxy let's get started",
    "start": "24640",
    "end": "28800"
  },
  {
    "text": "there are several reasons that you might",
    "start": "28800",
    "end": "30960"
  },
  {
    "text": "experience connection failures with RDS",
    "start": "30960",
    "end": "33200"
  },
  {
    "text": "proxy including the following Security",
    "start": "33200",
    "end": "36200"
  },
  {
    "text": "Group rules either at the database",
    "start": "36200",
    "end": "38480"
  },
  {
    "text": "instance or at the RS proxy are",
    "start": "38480",
    "end": "41320"
  },
  {
    "text": "preventing the connection check whether",
    "start": "41320",
    "end": "43600"
  },
  {
    "text": "the RS proxy uses different Security",
    "start": "43600",
    "end": "45680"
  },
  {
    "text": "Group check whether it has outbound rule",
    "start": "45680",
    "end": "48280"
  },
  {
    "text": "to the RDS database and also check that",
    "start": "48280",
    "end": "51360"
  },
  {
    "text": "the RDS database has inbound rules that",
    "start": "51360",
    "end": "54520"
  },
  {
    "text": "allow connections from the",
    "start": "54520",
    "end": "56520"
  },
  {
    "text": "proxy RDS proxy currently Works only",
    "start": "56520",
    "end": "59559"
  },
  {
    "text": "Within the VPC because RDS proxy Works",
    "start": "59559",
    "end": "62600"
  },
  {
    "text": "only within a VPC connections from",
    "start": "62600",
    "end": "65320"
  },
  {
    "text": "outside the private Network fail",
    "start": "65320",
    "end": "68040"
  },
  {
    "text": "database is not available or is not",
    "start": "68040",
    "end": "70400"
  },
  {
    "text": "accepting",
    "start": "70400",
    "end": "71640"
  },
  {
    "text": "connections the status of database must",
    "start": "71640",
    "end": "74240"
  },
  {
    "text": "be available and it must accept",
    "start": "74240",
    "end": "77320"
  },
  {
    "text": "connection authentication credentials",
    "start": "77320",
    "end": "80320"
  },
  {
    "text": "the username password used are not valid",
    "start": "80320",
    "end": "83680"
  },
  {
    "text": "the authentication credentials the",
    "start": "83680",
    "end": "85520"
  },
  {
    "text": "native username password mode used must",
    "start": "85520",
    "end": "88079"
  },
  {
    "text": "be valid to connect through the proxy as",
    "start": "88079",
    "end": "90840"
  },
  {
    "text": "a specific user you must make sure that",
    "start": "90840",
    "end": "94000"
  },
  {
    "text": "the password associated with a secret",
    "start": "94000",
    "end": "96600"
  },
  {
    "text": "matches the database password for that",
    "start": "96600",
    "end": "99040"
  },
  {
    "text": "user for each proxy that you create you",
    "start": "99040",
    "end": "102799"
  },
  {
    "text": "must first use AWS Secrets manager",
    "start": "102799",
    "end": "105880"
  },
  {
    "text": "service to store username and password",
    "start": "105880",
    "end": "108960"
  },
  {
    "text": "credentials in Secrets manager create",
    "start": "108960",
    "end": "112240"
  },
  {
    "text": "these secrets with values for the",
    "start": "112240",
    "end": "114399"
  },
  {
    "text": "username and password Fields the proxy",
    "start": "114399",
    "end": "117719"
  },
  {
    "text": "ignores other fields such as host and",
    "start": "117719",
    "end": "121320"
  },
  {
    "text": "Port if they are present in the",
    "start": "121320",
    "end": "124680"
  },
  {
    "text": "secret the ec2 basan client has outbound",
    "start": "124680",
    "end": "128200"
  },
  {
    "text": "Rule and the inbound rule of the proxy",
    "start": "128200",
    "end": "131039"
  },
  {
    "text": "Security Group allows connections from",
    "start": "131039",
    "end": "133440"
  },
  {
    "text": "the Basin host to connect to the proxy",
    "start": "133440",
    "end": "136360"
  },
  {
    "text": "endpoint from Amazon elastic compute",
    "start": "136360",
    "end": "138480"
  },
  {
    "text": "Cloud basting host the proxy Security",
    "start": "138480",
    "end": "141480"
  },
  {
    "text": "Group must include an inbound rule from",
    "start": "141480",
    "end": "144160"
  },
  {
    "text": "the ec2 Bastion Security Group also the",
    "start": "144160",
    "end": "148200"
  },
  {
    "text": "ec2 Bastion must have outbound set to 0.",
    "start": "148200",
    "end": "154840"
  },
  {
    "text": "0.0.0.0",
    "start": "155040",
    "end": "157360"
  },
  {
    "text": "or the proxy Security Group the AWS",
    "start": "157360",
    "end": "161680"
  },
  {
    "text": "identity and access management user or",
    "start": "161680",
    "end": "164360"
  },
  {
    "text": "role associated with the client isn't",
    "start": "164360",
    "end": "167080"
  },
  {
    "text": "authorized to connect with RS proxy when",
    "start": "167080",
    "end": "169879"
  },
  {
    "text": "im am DB authentication is used when",
    "start": "169879",
    "end": "173480"
  },
  {
    "text": "using IM am for authentication the user",
    "start": "173480",
    "end": "176920"
  },
  {
    "text": "or role must be authorized to connect",
    "start": "176920",
    "end": "179159"
  },
  {
    "text": "with the AR s",
    "start": "179159",
    "end": "182080"
  },
  {
    "start": "182000",
    "end": "244000"
  },
  {
    "text": "proxy loging into the ec2 Bastion and",
    "start": "182400",
    "end": "185959"
  },
  {
    "text": "then check the status of the proxy for",
    "start": "185959",
    "end": "189080"
  },
  {
    "text": "example my ec2 instance has a role",
    "start": "189080",
    "end": "191760"
  },
  {
    "text": "attached to perform H checks on the",
    "start": "191760",
    "end": "194200"
  },
  {
    "text": "proxy I'll be using this Bastion to",
    "start": "194200",
    "end": "196799"
  },
  {
    "text": "connect to the database using a proxy",
    "start": "196799",
    "end": "199080"
  },
  {
    "text": "end point for this I must make sure that",
    "start": "199080",
    "end": "203239"
  },
  {
    "text": "this Bastion also has the inbound to the",
    "start": "203239",
    "end": "207920"
  },
  {
    "text": "proxy",
    "start": "208680",
    "end": "211680"
  },
  {
    "text": "my basan E2 resides in same Amazon",
    "start": "219840",
    "end": "222319"
  },
  {
    "text": "virtual private Cloud as the RDS DB and",
    "start": "222319",
    "end": "225200"
  },
  {
    "text": "proxy if your EC to client Bastion",
    "start": "225200",
    "end": "227879"
  },
  {
    "text": "resides in an external host make sure to",
    "start": "227879",
    "end": "230920"
  },
  {
    "text": "set up VPC",
    "start": "230920",
    "end": "233720"
  },
  {
    "text": "paing confirm that Pro toxy health is",
    "start": "237879",
    "end": "242599"
  },
  {
    "text": "healthy go to Amazon RDS console to see",
    "start": "243040",
    "end": "246400"
  },
  {
    "start": "244000",
    "end": "453000"
  },
  {
    "text": "the RDS Security",
    "start": "246400",
    "end": "249360"
  },
  {
    "text": "Group check whether it has inbound rule",
    "start": "267400",
    "end": "270240"
  },
  {
    "text": "from the RDS proxy on Port",
    "start": "270240",
    "end": "272840"
  },
  {
    "text": "5432 if the proxy and the RDS database",
    "start": "272840",
    "end": "276720"
  },
  {
    "text": "instance use the same Security Group",
    "start": "276720",
    "end": "279479"
  },
  {
    "text": "then add a self- referencing rule in my",
    "start": "279479",
    "end": "282759"
  },
  {
    "text": "case the proxy and the RDS are using",
    "start": "282759",
    "end": "285919"
  },
  {
    "text": "different security",
    "start": "285919",
    "end": "288720"
  },
  {
    "text": "groups ensure proxy Security Group has",
    "start": "292600",
    "end": "295680"
  },
  {
    "text": "outbound rule for RDS database Security",
    "start": "295680",
    "end": "298560"
  },
  {
    "text": "Group",
    "start": "298560",
    "end": "301560"
  },
  {
    "text": "I already logged in to the database as",
    "start": "302400",
    "end": "304520"
  },
  {
    "text": "the master user now I will create the",
    "start": "304520",
    "end": "307520"
  },
  {
    "text": "username and password and we'll use the",
    "start": "307520",
    "end": "309960"
  },
  {
    "text": "secrets manager service to store the",
    "start": "309960",
    "end": "312240"
  },
  {
    "text": "username and",
    "start": "312240",
    "end": "314960"
  },
  {
    "text": "password",
    "start": "328479",
    "end": "331479"
  },
  {
    "text": "my secrets will be encrypted using the",
    "start": "364400",
    "end": "366520"
  },
  {
    "text": "non-default AWS KMS key I'll will also",
    "start": "366520",
    "end": "370160"
  },
  {
    "text": "connect to the database using the",
    "start": "370160",
    "end": "372479"
  },
  {
    "text": "username and password stored in Secrets",
    "start": "372479",
    "end": "375639"
  },
  {
    "text": "manager using RDS endpoint to confirm",
    "start": "375639",
    "end": "379560"
  },
  {
    "text": "that I can connect to the",
    "start": "379560",
    "end": "382880"
  },
  {
    "text": "database",
    "start": "388400",
    "end": "391400"
  },
  {
    "text": "for my proxy to be able to talk to",
    "start": "394240",
    "end": "396240"
  },
  {
    "text": "Secrets manager to decrypt the AWS KMS",
    "start": "396240",
    "end": "399639"
  },
  {
    "text": "key I must attach the role to my proxy",
    "start": "399639",
    "end": "403800"
  },
  {
    "text": "the proxy will be assuming this role and",
    "start": "403800",
    "end": "406720"
  },
  {
    "text": "The Trusted entity will be RDS rs.",
    "start": "406720",
    "end": "411000"
  },
  {
    "text": "Amazon aws.com",
    "start": "411000",
    "end": "414560"
  },
  {
    "text": "I'll will attach this policy to the",
    "start": "416960",
    "end": "421400"
  },
  {
    "text": "role for more information on what might",
    "start": "426560",
    "end": "430039"
  },
  {
    "text": "be stopping the proxy from connecting to",
    "start": "430039",
    "end": "431960"
  },
  {
    "text": "the database instance review the target",
    "start": "431960",
    "end": "434800"
  },
  {
    "text": "Health structure in the output from the",
    "start": "434800",
    "end": "437800"
  },
  {
    "text": "describe Das db- proxy D targets command",
    "start": "437800",
    "end": "442840"
  },
  {
    "text": "review the state reason and description",
    "start": "442840",
    "end": "446160"
  },
  {
    "text": "fields for more information on the",
    "start": "446160",
    "end": "448800"
  },
  {
    "text": "connection health of the RDS proxy",
    "start": "448800",
    "end": "452400"
  },
  {
    "text": "Target revie the RDS proxy logs turn on",
    "start": "452400",
    "end": "456520"
  },
  {
    "start": "453000",
    "end": "527000"
  },
  {
    "text": "the enhanced logging feature of the RDS",
    "start": "456520",
    "end": "458840"
  },
  {
    "text": "proxy turning on logging gives detailed",
    "start": "458840",
    "end": "461680"
  },
  {
    "text": "information about the SQL statements",
    "start": "461680",
    "end": "464520"
  },
  {
    "text": "these logs are useful resource to help",
    "start": "464520",
    "end": "466479"
  },
  {
    "text": "you understand certain authentication",
    "start": "466479",
    "end": "468520"
  },
  {
    "text": "issues because turning on these logs",
    "start": "468520",
    "end": "471520"
  },
  {
    "text": "adds to Performance overhead it's best",
    "start": "471520",
    "end": "474080"
  },
  {
    "text": "practice to turn them on only for",
    "start": "474080",
    "end": "478080"
  },
  {
    "text": "debugging",
    "start": "478319",
    "end": "480240"
  },
  {
    "text": "confirm the status of proxy as",
    "start": "480240",
    "end": "484080"
  },
  {
    "text": "available and then login to the ec2",
    "start": "492199",
    "end": "495039"
  },
  {
    "text": "basan client to connect to the database",
    "start": "495039",
    "end": "498479"
  },
  {
    "text": "using the proxy endpoint and database",
    "start": "498479",
    "end": "500919"
  },
  {
    "text": "credentials stored in Secrets",
    "start": "500919",
    "end": "505080"
  },
  {
    "text": "manager",
    "start": "508240",
    "end": "511240"
  },
  {
    "start": "527000",
    "end": "586000"
  },
  {
    "text": "if you are also using IM authentication",
    "start": "527240",
    "end": "529440"
  },
  {
    "text": "to connect to database then follow these",
    "start": "529440",
    "end": "532080"
  },
  {
    "text": "troubleshooting",
    "start": "532080",
    "end": "533760"
  },
  {
    "text": "steps a check that database allows IM",
    "start": "533760",
    "end": "538200"
  },
  {
    "text": "Authentication",
    "start": "538200",
    "end": "540279"
  },
  {
    "text": "B check that the ec2 Bastion that's used",
    "start": "540279",
    "end": "544320"
  },
  {
    "text": "has appropriate rules attached The",
    "start": "544320",
    "end": "547279"
  },
  {
    "text": "Trusted entity will be ec2 e2. Amazon",
    "start": "547279",
    "end": "551160"
  },
  {
    "text": "aws.com the policy attached to the role",
    "start": "551160",
    "end": "555519"
  },
  {
    "text": "or IM am user will look similar to the",
    "start": "555519",
    "end": "558519"
  },
  {
    "text": "one on the",
    "start": "558519",
    "end": "560200"
  },
  {
    "text": "screen the client must generate a token",
    "start": "560200",
    "end": "563560"
  },
  {
    "text": "to authorize the connection request to",
    "start": "563560",
    "end": "566480"
  },
  {
    "text": "do this the IM user and IM Ro associated",
    "start": "566480",
    "end": "570760"
  },
  {
    "text": "with this client must have the",
    "start": "570760",
    "end": "574480"
  },
  {
    "text": "rds-b colon connect IM policy also make",
    "start": "574480",
    "end": "578680"
  },
  {
    "text": "sure to use the RDS proxy ID in the Arn",
    "start": "578680",
    "end": "582560"
  },
  {
    "text": "for the resources attribute in the",
    "start": "582560",
    "end": "585480"
  },
  {
    "text": "policy and now you know how to",
    "start": "585480",
    "end": "587640"
  },
  {
    "start": "586000",
    "end": "612000"
  },
  {
    "text": "troubleshoot problems that might occur",
    "start": "587640",
    "end": "590240"
  },
  {
    "text": "when you are trying to connect to an RDS",
    "start": "590240",
    "end": "592320"
  },
  {
    "text": "database or an aurora database using RDS",
    "start": "592320",
    "end": "595399"
  },
  {
    "text": "proxy thanks for watching and happy",
    "start": "595399",
    "end": "597959"
  },
  {
    "text": "cloud computing from all of us here at",
    "start": "597959",
    "end": "601100"
  },
  {
    "text": "[Music]",
    "start": "601100",
    "end": "602120"
  },
  {
    "text": "[Applause]",
    "start": "602120",
    "end": "603870"
  },
  {
    "text": "[Music]",
    "start": "603870",
    "end": "607039"
  },
  {
    "text": "[Music]",
    "start": "609080",
    "end": "610320"
  },
  {
    "text": "AWS",
    "start": "610320",
    "end": "613320"
  }
]