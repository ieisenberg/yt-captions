[
  {
    "start": "0",
    "end": "127000"
  },
  {
    "text": "hello everyone welcome to Microsoft application migration session part of AWS innovate online conference my name",
    "start": "60",
    "end": "7680"
  },
  {
    "text": "is Sri wanta Tanika and I'm a partner solution architect here at amazon web services focusing on",
    "start": "7680",
    "end": "12719"
  },
  {
    "text": "Microsoft technologies in this session we are going to explore a few options",
    "start": "12719",
    "end": "17760"
  },
  {
    "text": "available for you to easily migrate Microsoft applications to AWS there are",
    "start": "17760",
    "end": "24119"
  },
  {
    "text": "multiple ways you can move your existing workloads to areas each has its own use cases advantages and disadvantages for",
    "start": "24119",
    "end": "31740"
  },
  {
    "text": "the best interest of time we will dig a bit deep into only some of these",
    "start": "31740",
    "end": "37020"
  },
  {
    "text": "services and explore how they work we will explore simple ways to migrate your workloads like being important export",
    "start": "37020",
    "end": "44040"
  },
  {
    "text": "and then look into some modern way to move your workloads use in containers",
    "start": "44040",
    "end": "49129"
  },
  {
    "text": "for many of you containerization of your workload may be quite new we will dig a",
    "start": "49129",
    "end": "54989"
  },
  {
    "text": "bit deep into containerization and share a short demonstration how you can containerize an exe application easily",
    "start": "54989",
    "end": "61620"
  },
  {
    "text": "you will learn about Amazon Elastic container services and it use cases related to Microsoft applications we",
    "start": "61620",
    "end": "68460"
  },
  {
    "text": "hope that by the end of our time together you have developed an appreciation of the AWS services that",
    "start": "68460",
    "end": "74340"
  },
  {
    "text": "helps you to migrate Microsoft apps onto AWS so let's get started",
    "start": "74340",
    "end": "79549"
  },
  {
    "text": "imagine you have legacy Microsoft applications running on Windows 2003 AWS",
    "start": "79549",
    "end": "85740"
  },
  {
    "text": "is the only cloud service provider that still supports 32-bit operating system and allows you to spin up virtual",
    "start": "85740",
    "end": "92220"
  },
  {
    "text": "machines running 32-bit operating systems such as Windows 2003 a lot of",
    "start": "92220",
    "end": "97860"
  },
  {
    "text": "organizations are in a situation where upgrading existing OS is not an option it could be due to number of reasons",
    "start": "97860",
    "end": "104579"
  },
  {
    "text": "such as our data documentation lack of organization knowledge about application",
    "start": "104579",
    "end": "109590"
  },
  {
    "text": "Oh application vendor does not support the new operating system discontinued the product or the company no longer",
    "start": "109590",
    "end": "115649"
  },
  {
    "text": "exists in any of these cases lift and shift may be the only option AWS",
    "start": "115649",
    "end": "122610"
  },
  {
    "text": "provides a few services to easily do lift and shift migration if you have a",
    "start": "122610",
    "end": "127890"
  },
  {
    "start": "127000",
    "end": "243000"
  },
  {
    "text": "Windows applications with some acceptable down times what are some simple options to migrate",
    "start": "127890",
    "end": "133890"
  },
  {
    "text": "workload - AWS cloud for those workloads where are some downtime is possible VM",
    "start": "133890",
    "end": "140220"
  },
  {
    "text": "important export is a simple yet powerful way to migrate to a Microsoft workloads - AWS cloud consider a case",
    "start": "140220",
    "end": "147750"
  },
  {
    "text": "where you are running in a virtualized environment on your on-premise data center if you want to move one of your",
    "start": "147750",
    "end": "154260"
  },
  {
    "text": "virtual machine to the cloud using VM import/export you first stop the virtual machine you then export it into one of",
    "start": "154260",
    "end": "161910"
  },
  {
    "text": "the supported format like OVA VHD VHDX VMDK or all after exporting the image",
    "start": "161910",
    "end": "171060"
  },
  {
    "text": "you kickstart a command line and punching some commands to import that image into s3 bucket if the image is big",
    "start": "171060",
    "end": "178530"
  },
  {
    "text": "it can take some time to upload use in a slower internet connection but you can monitor the progress with another",
    "start": "178530",
    "end": "184470"
  },
  {
    "text": "command some large customers use AWS Direct Connect for faster connection",
    "start": "184470",
    "end": "189570"
  },
  {
    "text": "between on-premise environment and AWS cloud regardless of how you connect your",
    "start": "189570",
    "end": "197400"
  },
  {
    "text": "data at transit will always be encrypted once the upload is completed",
    "start": "197400",
    "end": "202440"
  },
  {
    "text": "AWS will kickstart an image conversion process who which will produce an Amazon machine image out of which you can spin",
    "start": "202440",
    "end": "209519"
  },
  {
    "text": "up ec2 instances if you want to spin up VM in another region you can simply copy",
    "start": "209519",
    "end": "217080"
  },
  {
    "text": "the Amazon machine image into the new region and use it images imported to AWS",
    "start": "217080",
    "end": "222989"
  },
  {
    "text": "can be exported back this will prevent you from locking please note that only",
    "start": "222989",
    "end": "228120"
  },
  {
    "text": "the images you have imported to EA WS can be exported for example you cannot",
    "start": "228120",
    "end": "234269"
  },
  {
    "text": "export an Emerson prided pay-as-you-go license included image to a local",
    "start": "234269",
    "end": "239430"
  },
  {
    "text": "environment to obvious license compliance reasons we an import and export is suitable for simple migration",
    "start": "239430",
    "end": "245730"
  },
  {
    "start": "243000",
    "end": "412000"
  },
  {
    "text": "scenarios if you want to lie or replicate or running VMs into AWS AWS",
    "start": "245730",
    "end": "251850"
  },
  {
    "text": "server migration service or our partner solutions like cloud menu is a great place to start with to understand how",
    "start": "251850",
    "end": "259799"
  },
  {
    "text": "AWS server migration service work imagine you have a virtualized environment first you download an email",
    "start": "259799",
    "end": "267870"
  },
  {
    "text": "that contains aw server migration connector you can download a connector",
    "start": "267870",
    "end": "273270"
  },
  {
    "text": "that supports either VMware or hyper-v you import this image to your",
    "start": "273270",
    "end": "278580"
  },
  {
    "text": "virtualized environment then start the connector like any other virtual machine with a few configuration you can then",
    "start": "278580",
    "end": "285900"
  },
  {
    "text": "connect your virtualized environment into AWS cloud the connection can be to Internet Direct Connect VPN or the data",
    "start": "285900",
    "end": "293520"
  },
  {
    "text": "transfer is always encrypted the cool thing is you don't need to install any",
    "start": "293520",
    "end": "299340"
  },
  {
    "text": "agents in your VMs once replication completes it will create a new Amazon",
    "start": "299340",
    "end": "304650"
  },
  {
    "text": "machine image which you can use to spin up new ec2 instances the server",
    "start": "304650",
    "end": "312450"
  },
  {
    "text": "migration connector exposes a local website with a nice user interface you can use to check the connection and",
    "start": "312450",
    "end": "319139"
  },
  {
    "text": "replication status this is how it looks like when the server migration connect establishes the connection to AWS cloud",
    "start": "319139",
    "end": "326720"
  },
  {
    "text": "once the connection is established your on-premise service will appear on AWS console you can then select which",
    "start": "326720",
    "end": "334289"
  },
  {
    "text": "service you want to replicate kickstart a replication job that will replicate the block-level content once the",
    "start": "334289",
    "end": "340979"
  },
  {
    "text": "replication job completes you can start a new ec2 Stinson's out of the image the",
    "start": "340979",
    "end": "345990"
  },
  {
    "text": "replication job has created being the first cloud service provider AWS has a",
    "start": "345990",
    "end": "353220"
  },
  {
    "text": "great and matured partner network our partner network has built a strong ecosystem of tools and services for our",
    "start": "353220",
    "end": "360180"
  },
  {
    "text": "customers there are many AWS partner solution that will make your life easy during migration",
    "start": "360180",
    "end": "365580"
  },
  {
    "text": "for example during initial stages TCO logic can assist in building your",
    "start": "365580",
    "end": "370770"
  },
  {
    "text": "business case for cloud migration it can collect data from your existing",
    "start": "370770",
    "end": "376410"
  },
  {
    "text": "virtualization environment logs Excel sheets and estimate the cost of current infrastructure and compare it against",
    "start": "376410",
    "end": "382979"
  },
  {
    "text": "AWS equivalent the tool can collect data like CPU memory utilization from",
    "start": "382979",
    "end": "388380"
  },
  {
    "text": "on-premise servers and provide instant size recommendation it is part enough to",
    "start": "388380",
    "end": "393630"
  },
  {
    "text": "consider your current Microsoft license portfolio and recommend different licensing option that can save money",
    "start": "393630",
    "end": "401080"
  },
  {
    "text": "how the newer is also a powerful partner solution that can allow you migrate virtual machines to AWS feel free to",
    "start": "401080",
    "end": "407710"
  },
  {
    "text": "explore a partner solution that can assist you on your migration journey if you are not planning to do lift and",
    "start": "407710",
    "end": "414370"
  },
  {
    "start": "412000",
    "end": "566000"
  },
  {
    "text": "shift migration and oils replication modernization still is in your agenda containerization is a great way to move",
    "start": "414370",
    "end": "421419"
  },
  {
    "text": "your workload to cloud there are a lot of reasons why you should consider containers as a first-class citizen in",
    "start": "421419",
    "end": "427599"
  },
  {
    "text": "your cloud migration journey for example containers are super easy to create they",
    "start": "427599",
    "end": "433659"
  },
  {
    "text": "are portable across many cloud service providers more importantly Microsoft has taken containers as a first-class",
    "start": "433659",
    "end": "439389"
  },
  {
    "text": "citizens on Windows platform Windows 2016 service has now made you docker",
    "start": "439389",
    "end": "444550"
  },
  {
    "text": "support for those who are not familiar with docker containers let me give you a",
    "start": "444550",
    "end": "449919"
  },
  {
    "text": "two minute crash course let's compare traditional virtual machines to containers traditional virtualization",
    "start": "449919",
    "end": "456729"
  },
  {
    "text": "based on technologies like hyper-v or VMware and strike the hosts a hardware whereas containers abstract the host",
    "start": "456729",
    "end": "463779"
  },
  {
    "text": "operating system both need some physical servers to run both needs some host",
    "start": "463779",
    "end": "469690"
  },
  {
    "text": "operating system in the case of virtual machines you run something called hypervisor that abstract the hardware to",
    "start": "469690",
    "end": "476169"
  },
  {
    "text": "the guest operating system you then spin up virtual machines on top of hypervisor in VMs shareable resources are not",
    "start": "476169",
    "end": "484089"
  },
  {
    "text": "shared that leads to resource with gist for example consider the two virtual",
    "start": "484089",
    "end": "489520"
  },
  {
    "text": "machines based out of the same operating system 90% of the oils contained in these two virtual machines are going to",
    "start": "489520",
    "end": "496210"
  },
  {
    "text": "be the same if your oils image is print gigabyte for the two virtual machines",
    "start": "496210",
    "end": "502690"
  },
  {
    "text": "you will use 40 gigabyte of storage think about dotnet framework why you need to install them on both virtual",
    "start": "502690",
    "end": "509199"
  },
  {
    "text": "machines think about the complexity that comes when you try to patch you need to patch each virtual machines some of the",
    "start": "509199",
    "end": "516190"
  },
  {
    "text": "common processors restaurants are help a task that has nothing to do with the apps they take valuable resources like",
    "start": "516190",
    "end": "523539"
  },
  {
    "text": "CPU and memory that can be used for your apps you have wasted resources which applications can use overall you end up",
    "start": "523539",
    "end": "531970"
  },
  {
    "text": "running a fewer number of apps on a given hardware in the case of containers multiple",
    "start": "531970",
    "end": "537730"
  },
  {
    "text": "containers can share the same base operating system image for example containers one two four running dotnet",
    "start": "537730",
    "end": "544330"
  },
  {
    "text": "apps can be used a single OS image with the dotnet framework installed containers five to six run in a java",
    "start": "544330",
    "end": "551500"
  },
  {
    "text": "application can share an operating system image with Java framework installed overall you can now run six",
    "start": "551500",
    "end": "558490"
  },
  {
    "text": "apps instead of two apps on a given hardware you have effectively increased",
    "start": "558490",
    "end": "564040"
  },
  {
    "text": "the packing density of apps content images are based on a concept called layers for example you may start out",
    "start": "564040",
    "end": "572140"
  },
  {
    "start": "566000",
    "end": "604000"
  },
  {
    "text": "with the base operating system image in layer 1 you then install some security",
    "start": "572140",
    "end": "577240"
  },
  {
    "text": "updates in layer 2 you then install some application one specific content like",
    "start": "577240",
    "end": "582310"
  },
  {
    "text": "dotnet framework on layer 3 and finally the application on layer 4 application 2",
    "start": "582310",
    "end": "588340"
  },
  {
    "text": "on the other hand depends on your patch layer to install its specific framework",
    "start": "588340",
    "end": "594130"
  },
  {
    "text": "like Java framework on layer file and itself on layer 6 this concept of shared",
    "start": "594130",
    "end": "599410"
  },
  {
    "text": "layers make the containers very lightweight and patching becomes super easy when you create images and push",
    "start": "599410",
    "end": "606490"
  },
  {
    "text": "them into container registry only Delta changes in layers are pushed this saves a lot of time when uploading images if",
    "start": "606490",
    "end": "613780"
  },
  {
    "text": "you plan to create a CI CD pipeline with continuous push of images to a repository you don't need to worry about",
    "start": "613780",
    "end": "620110"
  },
  {
    "text": "uploading large images because only Delta changes are plotted designed",
    "start": "620110",
    "end": "625660"
  },
  {
    "start": "624000",
    "end": "646000"
  },
  {
    "text": "correctly patching and maintenance is easy with containers in this example we",
    "start": "625660",
    "end": "631510"
  },
  {
    "text": "have two applications that depends on asp.net latest image when the framework",
    "start": "631510",
    "end": "636730"
  },
  {
    "text": "is updated you can easily upgrade only that layer if a new windows update comes",
    "start": "636730",
    "end": "641770"
  },
  {
    "text": "you can upgrade only that layer and your application will still run let's now go",
    "start": "641770",
    "end": "646930"
  },
  {
    "start": "646000",
    "end": "1007000"
  },
  {
    "text": "for a demo and see how we can package a simple exe application as container you",
    "start": "646930",
    "end": "652210"
  },
  {
    "text": "can also containerize applications like asp.net Web Apps that runs on web servers such as I is Apache Dutch",
    "start": "652210",
    "end": "660010"
  },
  {
    "text": "application has console apps PowerShell scripts exercise jobs what services such",
    "start": "660010",
    "end": "665080"
  },
  {
    "text": "as SQL Server to name of you you can pretty much control any application that runs on Windows",
    "start": "665080",
    "end": "670810"
  },
  {
    "text": "Server coinage I have a sample Exe application that I",
    "start": "670810",
    "end": "675899"
  },
  {
    "text": "want to container eyes it's called my batch app so let's run it and then see",
    "start": "675899",
    "end": "681930"
  },
  {
    "text": "how it works so all what it does is spin up multiple threads and then paint some random numbers if you go to the CPU",
    "start": "681930",
    "end": "689820"
  },
  {
    "text": "utilization you can find that it pretty much uses all the CPU available of the machine a classic bad behaving",
    "start": "689820",
    "end": "696510"
  },
  {
    "text": "application so let's see how we can containerize this application so I",
    "start": "696510",
    "end": "701519"
  },
  {
    "text": "started PowerShell as an administrator",
    "start": "701519",
    "end": "705440"
  },
  {
    "text": "and I'm going to download an image from Microsoft to do that I'm going to call",
    "start": "706670",
    "end": "714300"
  },
  {
    "text": "docker pool and I'm going to give you the name of the image Microsoft Windows",
    "start": "714300",
    "end": "720209"
  },
  {
    "text": "server call this will go to docker hub and download the latest version of",
    "start": "720209",
    "end": "725339"
  },
  {
    "text": "Windows Server coinage so it already identified that some layers already",
    "start": "725339",
    "end": "730589"
  },
  {
    "text": "exist so it's not going to download the existing layers and there's one layer that is missing maybe it's a new",
    "start": "730589",
    "end": "737459"
  },
  {
    "text": "security patch on an upgrade from Microsoft so it's downloading that missing layer",
    "start": "737459",
    "end": "743690"
  },
  {
    "text": "so this layer is a compressed version of the image so the download is fast so now",
    "start": "743690",
    "end": "750449"
  },
  {
    "text": "it's extracting that compressed layer so we are almost done so the download is",
    "start": "750449",
    "end": "758220"
  },
  {
    "text": "now complete and if I type docker images you can find",
    "start": "758220",
    "end": "764940"
  },
  {
    "text": "in the latest downloaded images",
    "start": "764940",
    "end": "769339"
  },
  {
    "text": "so let's run a docker container in this case I'm going to run it interactively",
    "start": "774520",
    "end": "779560"
  },
  {
    "text": "and they can image that I'm going to use this Microsoft Windows server core and I'm going to run PowerShell inside this",
    "start": "779560",
    "end": "786580"
  },
  {
    "text": "container so when I type enter it will go inside the container because I'm",
    "start": "786580",
    "end": "791890"
  },
  {
    "text": "running it as an interactive mode to know the container ID I can type",
    "start": "791890",
    "end": "797140"
  },
  {
    "text": "hostname so you get the container ID so if you look at the directory structure",
    "start": "797140",
    "end": "803410"
  },
  {
    "text": "of this container you can find that it's completely different from the container host and from any other containers",
    "start": "803410",
    "end": "811060"
  },
  {
    "text": "running on this machine so containers have their own file system so the registry entries or any configuration",
    "start": "811060",
    "end": "817240"
  },
  {
    "text": "that you modified in the container is only visible within that container same",
    "start": "817240",
    "end": "823060"
  },
  {
    "text": "for the task list if you look at the processors running inside the container you can find that they are different",
    "start": "823060",
    "end": "828790"
  },
  {
    "text": "from what you find on your container host containers start fast because they",
    "start": "828790",
    "end": "834279"
  },
  {
    "text": "don't need to start all the processors that you need to start when you run a virtual machine",
    "start": "834279",
    "end": "841440"
  },
  {
    "text": "so let's make a directory inside this",
    "start": "845860",
    "end": "851090"
  },
  {
    "text": "container so I'm going to say mkdir and I'm going to tell it as my app and I",
    "start": "851090",
    "end": "857029"
  },
  {
    "text": "have started another PowerShell window in the content host so if I type dock",
    "start": "857029",
    "end": "863060"
  },
  {
    "text": "appears I can find the running containers inside this container host so I have one call for six nine so what I'm",
    "start": "863060",
    "end": "873110"
  },
  {
    "text": "going to do now is to copy my exe application inside mic which is inside",
    "start": "873110",
    "end": "878600"
  },
  {
    "text": "my container host undersea install my batch into the container so I give the",
    "start": "878600",
    "end": "884420"
  },
  {
    "text": "Content ID in this case for year 69 you can only do part of the idea as long as",
    "start": "884420",
    "end": "890210"
  },
  {
    "text": "it distinguished from the rest of the run in containers and inside my content I have a folder called my app and I'm",
    "start": "890210",
    "end": "896630"
  },
  {
    "text": "going to copy it to that my app folder so if you look at my a folder you can find that exe application has been",
    "start": "896630",
    "end": "902480"
  },
  {
    "text": "copied so my exe is now inside the container I can exit from the container",
    "start": "902480",
    "end": "909650"
  },
  {
    "text": "like this because I have copied the file oh I can simply say docker stop and give",
    "start": "909650",
    "end": "915980"
  },
  {
    "text": "the container ID from my container host so I'm going to stop the container that",
    "start": "915980",
    "end": "922820"
  },
  {
    "text": "I just modified so it has the exe that I copied the next thing I'm going to do is",
    "start": "922820",
    "end": "930800"
  },
  {
    "text": "to call docker commit that will save these changes as an image so the",
    "start": "930800",
    "end": "937040"
  },
  {
    "text": "container that I want to save is 4 6 9 that's the container ID you can do only part of the container ID if you like and",
    "start": "937040",
    "end": "943040"
  },
  {
    "text": "then I give a name for my image so in this case I'm going to call it my app so from the time I do that it will save the",
    "start": "943040",
    "end": "950450"
  },
  {
    "text": "changes that I have made so if I type",
    "start": "950450",
    "end": "956690"
  },
  {
    "text": "docker images you can find my newly created image called my app",
    "start": "956690",
    "end": "962230"
  },
  {
    "text": "so I can now run this container image that I just created but instead of giving all the CP available I'm going to",
    "start": "971790",
    "end": "978180"
  },
  {
    "text": "give only 20% of the CPU so image I'm going to run is called my app inside",
    "start": "978180",
    "end": "983880"
  },
  {
    "text": "that image I have a application called my batch app so from the time that I type inter application will start as",
    "start": "983880",
    "end": "991230"
  },
  {
    "text": "normal like before but if you look at the CP utilization you can see that I",
    "start": "991230",
    "end": "996330"
  },
  {
    "text": "have slice and dice my CPU and give only fraction of it so it's now no longer",
    "start": "996330",
    "end": "1001910"
  },
  {
    "text": "using the hundred percent of my CPU so",
    "start": "1001910",
    "end": "1008540"
  },
  {
    "start": "1007000",
    "end": "1039000"
  },
  {
    "text": "far we have containerized and ran on the one application running a single container is easy you can even do it",
    "start": "1008540",
    "end": "1015470"
  },
  {
    "text": "manually what happens when you start running hundreds or even thousands of containers you need to track which",
    "start": "1015470",
    "end": "1022640"
  },
  {
    "text": "containers are run in which containers are stopped and sometimes you need to schedule containers to start on a",
    "start": "1022640",
    "end": "1028130"
  },
  {
    "text": "specific time you also need to track how much spare resources like CPU and memory are left on each Hardware all these",
    "start": "1028130",
    "end": "1035480"
  },
  {
    "text": "bookkeeping tasks can be daunting in a real enterprise environment that is why",
    "start": "1035480",
    "end": "1040490"
  },
  {
    "start": "1039000",
    "end": "1081000"
  },
  {
    "text": "we invented Amazon Elastic container registry and container service elastic container registry is similar to docker",
    "start": "1040490",
    "end": "1046910"
  },
  {
    "text": "hub you can use it to keep your docker images however unlike docker hub it is",
    "start": "1046910",
    "end": "1052250"
  },
  {
    "text": "tightly integrated with air abuse identity and access management and you can easily set permissions such as who",
    "start": "1052250",
    "end": "1058370"
  },
  {
    "text": "can read or write to ECR elastic container service is orchestration",
    "start": "1058370",
    "end": "1063860"
  },
  {
    "text": "engine that orchestrate your containers on a cluster of ec2 instances it knows",
    "start": "1063860",
    "end": "1069080"
  },
  {
    "text": "which ec2 instance have free capacity which one do not if the ec2 instance",
    "start": "1069080",
    "end": "1074420"
  },
  {
    "text": "running on the container fails due to some malfunction easier scan scheduled containers in the new ec2 instance",
    "start": "1074420",
    "end": "1080740"
  },
  {
    "text": "before you start orchestrating your containers on these years you create something called a cluster a cluster is",
    "start": "1080740",
    "end": "1087890"
  },
  {
    "start": "1081000",
    "end": "1105000"
  },
  {
    "text": "an abstract or a running set of ec2 instances you can join existing ec2 instances or you can spin up new ec2",
    "start": "1087890",
    "end": "1094910"
  },
  {
    "text": "instance that provides additional CPU memory or storage you can also set up",
    "start": "1094910",
    "end": "1099950"
  },
  {
    "text": "auto scaling group that will automatically scale based on CPU and memory demand",
    "start": "1099950",
    "end": "1105570"
  },
  {
    "start": "1105000",
    "end": "1153000"
  },
  {
    "text": "once the cluster is created you create something called a task the task describes what contain images you want",
    "start": "1105570",
    "end": "1111660"
  },
  {
    "text": "to run and constraints there need to follow for example you can define you want to run two containers as part of",
    "start": "1111660",
    "end": "1118680"
  },
  {
    "text": "this task one website one SQL server instance you may then define constraints",
    "start": "1118680",
    "end": "1124050"
  },
  {
    "text": "like do not run human resource website on the same ec2 instance that runs finance website due to regulatory",
    "start": "1124050",
    "end": "1130650"
  },
  {
    "text": "requirements you can also define how much memory CPU each task needs if your",
    "start": "1130650",
    "end": "1136890"
  },
  {
    "text": "task needs half of a V CPU but the custard does not have additional CPU capacity to provide that half V CPU your",
    "start": "1136890",
    "end": "1144840"
  },
  {
    "text": "task will be delayed until the cluster provision enough new CPUs or running tasks finishes releasing the CPU",
    "start": "1144840",
    "end": "1151380"
  },
  {
    "text": "capacity it has been using once you create a task you can schedule it on no",
    "start": "1151380",
    "end": "1156660"
  },
  {
    "text": "ec2 cluster however if for some reason the task fails let's say due to ec2",
    "start": "1156660",
    "end": "1162690"
  },
  {
    "text": "instance failure it won't automatically start again to maintain a desired set of",
    "start": "1162690",
    "end": "1168000"
  },
  {
    "text": "tasks always running you can create something called a service a service define things like how many tasks to run",
    "start": "1168000",
    "end": "1175290"
  },
  {
    "text": "what is the deployment strategy how the task should be auto scaled a service can",
    "start": "1175290",
    "end": "1181950"
  },
  {
    "text": "maintain a decide number of containers if a disaster happens and some running tasks fails the service will",
    "start": "1181950",
    "end": "1188460"
  },
  {
    "text": "automatically start additional tasks to keep the desired count equal to the running count",
    "start": "1188460",
    "end": "1193670"
  },
  {
    "start": "1193000",
    "end": "1202000"
  },
  {
    "text": "ECS has built-in intelligence to know the available resources in the cluster it can place tasks in the underlying ec2",
    "start": "1193670",
    "end": "1200610"
  },
  {
    "text": "instances in various way for example bin packing placement its first phase one",
    "start": "1200610",
    "end": "1206940"
  },
  {
    "text": "easy to instance completely with containers before moving to another instance in the case of balanced spread",
    "start": "1206940",
    "end": "1213330"
  },
  {
    "text": "easiest places tasks even in all available easy to instances you can",
    "start": "1213330",
    "end": "1218850"
  },
  {
    "text": "place multiple tasks hence multiple applications in a given cluster for example you can run human",
    "start": "1218850",
    "end": "1224970"
  },
  {
    "text": "resource application as service 1 and your ERP application as service 2 if",
    "start": "1224970",
    "end": "1230160"
  },
  {
    "text": "your application demands more compute resources you can easily scale the cluster I'm in my AWS console",
    "start": "1230160",
    "end": "1238950"
  },
  {
    "start": "1235000",
    "end": "1356000"
  },
  {
    "text": "so let's go into elastic container service you can find that I already have",
    "start": "1238950",
    "end": "1244679"
  },
  {
    "text": "two clusters running let's go to repositories where I can keep my docker images so this is Amazon Elastic",
    "start": "1244679",
    "end": "1252119"
  },
  {
    "text": "container registry let's create a repository only thing we need to give is",
    "start": "1252119",
    "end": "1258090"
  },
  {
    "text": "a name let's call it hello world and click next step the repository is",
    "start": "1258090",
    "end": "1265320"
  },
  {
    "text": "created and it gives you a list of commands that you can use to publish images into this repository if you want",
    "start": "1265320",
    "end": "1275309"
  },
  {
    "text": "to know the commands again you can view which you push commands and you can see",
    "start": "1275309",
    "end": "1280590"
  },
  {
    "text": "the commands that you saw just a while ago so I'm in my container host where I",
    "start": "1280590",
    "end": "1287100"
  },
  {
    "text": "created my image so if I type docker images I can see the images in this",
    "start": "1287100",
    "end": "1292889"
  },
  {
    "text": "container host so the first thing I'm going to do is to call the Curt AG",
    "start": "1292889",
    "end": "1299029"
  },
  {
    "text": "instead of calling my app latest I'm going to give it the full URL of my",
    "start": "1299029",
    "end": "1304320"
  },
  {
    "text": "repository so that it knows that this image when I publish it has to go into",
    "start": "1304320",
    "end": "1311879"
  },
  {
    "text": "this container repository so you can now find a tagged image with my full",
    "start": "1311879",
    "end": "1319499"
  },
  {
    "text": "container repository URL so what I'm going to do now is to first login into",
    "start": "1319499",
    "end": "1328889"
  },
  {
    "text": "the container repository for that I copy paste one of the commands that I saw",
    "start": "1328889",
    "end": "1334080"
  },
  {
    "text": "before and I'm going to call AWS easy our gate login so now you can see the",
    "start": "1334080",
    "end": "1340379"
  },
  {
    "text": "login is successful I can now publish an image to the repository by calling",
    "start": "1340379",
    "end": "1346769"
  },
  {
    "text": "docker push and giving the full docker image name you can find that only the",
    "start": "1346769",
    "end": "1353190"
  },
  {
    "text": "Delta changes have been pushed and some layers that already exist are not being",
    "start": "1353190",
    "end": "1358230"
  },
  {
    "start": "1356000",
    "end": "1535000"
  },
  {
    "text": "pushed so here I'm in my repository so if i refresh it you can find a newly",
    "start": "1358230",
    "end": "1364049"
  },
  {
    "text": "published image or the layers appearing here and the size is very small",
    "start": "1364049",
    "end": "1371700"
  },
  {
    "text": "so let's go to the cluster so I already have two clusters created so one class",
    "start": "1371700",
    "end": "1378130"
  },
  {
    "text": "of example how to want to e to ec2 instances running so let's create a",
    "start": "1378130",
    "end": "1383290"
  },
  {
    "text": "cluster select Windows plus networking click Next",
    "start": "1383290",
    "end": "1389710"
  },
  {
    "text": "give it a name let's call it hello world cluster you can either select on-demand",
    "start": "1389710",
    "end": "1395380"
  },
  {
    "text": "instance or spot instances you can select the instance type that goes into them of course you can change these",
    "start": "1395380",
    "end": "1401920"
  },
  {
    "text": "parameters later so in this case I want to have for ec2 instance back in this cluster size of the EBS volume attached",
    "start": "1401920",
    "end": "1409720"
  },
  {
    "text": "to that and the secret cream if you want to remote login into that you can specify a remote login the secret key",
    "start": "1409720",
    "end": "1415630"
  },
  {
    "text": "won't where I set up the network configuration the port's that you need to open and finally the I am rod that",
    "start": "1415630",
    "end": "1423160"
  },
  {
    "text": "will be used to invoke other AWS services click create",
    "start": "1423160",
    "end": "1430020"
  },
  {
    "text": "so with few minutes after your cluster will be ready because it needs to start",
    "start": "1430020",
    "end": "1436930"
  },
  {
    "text": "the ec2 instance while it is happening will create some tasks click create new tasks give it a name so this is where we",
    "start": "1436930",
    "end": "1446800"
  },
  {
    "text": "are going to specify the containers that we want to run so you can keep these",
    "start": "1446800",
    "end": "1451990"
  },
  {
    "text": "things empty as of now the windows support only default network mode so",
    "start": "1451990",
    "end": "1457390"
  },
  {
    "text": "what I'm going to do now is to add a container give it a name and I'm going to pin point into my repository URL so",
    "start": "1457390",
    "end": "1466480"
  },
  {
    "text": "in this case is going to be hello world and the version is going to be the latest so when this pass run it will run",
    "start": "1466480",
    "end": "1472060"
  },
  {
    "text": "this image you can specify how much memory this needs so in this case I'm going to do 128 megabyte",
    "start": "1472060",
    "end": "1479110"
  },
  {
    "text": "you can do port mapping if you are running a website but this is a batch application I don't need to do that and",
    "start": "1479110",
    "end": "1484620"
  },
  {
    "text": "the command that I need to run so here I can specify how much CPU you need one ms",
    "start": "1484620",
    "end": "1490540"
  },
  {
    "text": "e pu e equals 2024 so if i want to allocate fraction of my CPU i can",
    "start": "1490540",
    "end": "1496030"
  },
  {
    "text": "specify something like 2 5 6 so the command that i want to run is my app my",
    "start": "1496030",
    "end": "1502690"
  },
  {
    "text": "batch exe so this is what I have copied to my contain image and you can specify things",
    "start": "1502690",
    "end": "1509559"
  },
  {
    "text": "like DNS settings whether you want to mount a data volume so the containers",
    "start": "1509559",
    "end": "1515350"
  },
  {
    "text": "will have the data they want we keep everything default and click Add so I",
    "start": "1515350",
    "end": "1521770"
  },
  {
    "text": "have set up my container if you want you can define the constraints like hey this",
    "start": "1521770",
    "end": "1528909"
  },
  {
    "text": "is HR application it has to follow these constraints as of now I keep the default and create the task so my task creation",
    "start": "1528909",
    "end": "1536500"
  },
  {
    "start": "1535000",
    "end": "1796000"
  },
  {
    "text": "is successful my container cluster I",
    "start": "1536500",
    "end": "1542409"
  },
  {
    "text": "created HelloWorld is also ready for instances are running so let's run the task so I go to task run a new task I",
    "start": "1542409",
    "end": "1551789"
  },
  {
    "text": "specify which task I won't run so I already have the task that I just created I want to run 6 of them so when",
    "start": "1551789",
    "end": "1560590"
  },
  {
    "text": "I click create it will start 6 tasks in balance bed manner so they are as of now",
    "start": "1560590",
    "end": "1568270"
  },
  {
    "text": "pending state if you keep refreshing some of these tasks will start so as of",
    "start": "1568270",
    "end": "1574179"
  },
  {
    "text": "now 3 task has already started if I go to task list you can find that 3",
    "start": "1574179",
    "end": "1580029"
  },
  {
    "text": "containers are running and 3 are pending starting if I select one of these tasks",
    "start": "1580029",
    "end": "1589330"
  },
  {
    "text": "I can go to the ec2 instance that these tasks are scheduled so it's like a",
    "start": "1589330",
    "end": "1594429"
  },
  {
    "text": "normal easy to instance running Windows if I want to remote login into that I need to enable the RDP port and I can",
    "start": "1594429",
    "end": "1602559"
  },
  {
    "text": "actually remotely log in into these machines or the ec2 instance that runs these containers behind the scene",
    "start": "1602559",
    "end": "1609600"
  },
  {
    "text": "easiest just execute docker commands on these ec2 instances to start containers",
    "start": "1609600",
    "end": "1615600"
  },
  {
    "text": "so I can connect into these one of these ec2 instance download my remote login",
    "start": "1615600",
    "end": "1624700"
  },
  {
    "text": "app and then connect into them so it's the same Windows experience so once I",
    "start": "1624700",
    "end": "1631809"
  },
  {
    "text": "connect into one of these ec2 instance that runs the containers I can start PowerShell and for example",
    "start": "1631809",
    "end": "1638230"
  },
  {
    "text": "if I type hostname you can find that's easy to instance name and if I type da copy as you can find that the container",
    "start": "1638230",
    "end": "1645639"
  },
  {
    "text": "the ECS has started if I type docker inspect and give the container name I",
    "start": "1645639",
    "end": "1651970"
  },
  {
    "text": "can find what commands the easiest executor to start this container so you",
    "start": "1651970",
    "end": "1659350"
  },
  {
    "text": "can see that it is running my at my back see you can find details about the",
    "start": "1659350",
    "end": "1665610"
  },
  {
    "text": "container cluster we are it is running some tags of course if you look at this",
    "start": "1665610",
    "end": "1675759"
  },
  {
    "text": "container you can if you want you can even attach into that you can say docker attach and use the container name and",
    "start": "1675759",
    "end": "1681399"
  },
  {
    "text": "you can find the application is running it's like before the same application",
    "start": "1681399",
    "end": "1688799"
  },
  {
    "text": "that is running so far so good you can easily create a service like",
    "start": "1688799",
    "end": "1695350"
  },
  {
    "text": "before so create a service give it a name so select the cluster so how many",
    "start": "1695350",
    "end": "1705429"
  },
  {
    "text": "tasks you won't run let's say we won't run for containers for this service if you are running a website you can select",
    "start": "1705429",
    "end": "1710980"
  },
  {
    "text": "an application load balancer this is an exe application so I just select none and click Next",
    "start": "1710980",
    "end": "1716590"
  },
  {
    "text": "if you want to auto scale based on the Lord that these containers are facing or",
    "start": "1716590",
    "end": "1721659"
  },
  {
    "text": "this cluster is facing you can do that based on the CPU or memory utilization for example but as of now I'm not going",
    "start": "1721659",
    "end": "1728080"
  },
  {
    "text": "to auto scale so let's skip this step and so the number of containers I want",
    "start": "1728080",
    "end": "1735250"
  },
  {
    "text": "to run is 4 so create the service so in this case the pending count of the task",
    "start": "1735250",
    "end": "1741879"
  },
  {
    "text": "is 4 but so the decide count is 4 but the running count is only 2 so what will",
    "start": "1741879",
    "end": "1750159"
  },
  {
    "text": "happen is over time this running count will equal to the desired count so",
    "start": "1750159",
    "end": "1755620"
  },
  {
    "text": "running count is 4 and the desired countries also 4 so this is a healthy situation let's say something bad",
    "start": "1755620",
    "end": "1762460"
  },
  {
    "text": "happens and one of these tasks dies maybe you restart the world so I'm going to stop some of these tasks",
    "start": "1762460",
    "end": "1768500"
  },
  {
    "text": "I'm simulating a machine crash so if this happens these the number of cars",
    "start": "1768500",
    "end": "1775130"
  },
  {
    "text": "now is only for only running task is only two instead of four so what will",
    "start": "1775130",
    "end": "1781610"
  },
  {
    "text": "happen is the service will identify that there's a deviation from desired state and will automatically schedule some",
    "start": "1781610",
    "end": "1788960"
  },
  {
    "text": "tasks in another ec2 instances so now",
    "start": "1788960",
    "end": "1793970"
  },
  {
    "text": "the desired count equals that are in count AWS has a wide partner ecosystem",
    "start": "1793970",
    "end": "1799520"
  },
  {
    "start": "1796000",
    "end": "1853000"
  },
  {
    "text": "to help you focus on your success and take full advantages of all the business benefit that AWS has to offer learn more",
    "start": "1799520",
    "end": "1806900"
  },
  {
    "text": "about how our European partners can help you and find the right APN partner for your needs we see the AWS APN booth at",
    "start": "1806900",
    "end": "1814190"
  },
  {
    "text": "our showcase to gain more confidence and hands-on experience with AWS watch our",
    "start": "1814190",
    "end": "1820100"
  },
  {
    "text": "instructional videos and explore the self-paced lab I think none of instructor-led classes and learn how to",
    "start": "1820100",
    "end": "1826070"
  },
  {
    "text": "design deploy and operate highly available cost-effective and secure applications on AWS finally well get",
    "start": "1826070",
    "end": "1833120"
  },
  {
    "text": "your technical expertise with AWS and use practice exams to help you prepare for AWS certifications you now have new",
    "start": "1833120",
    "end": "1841040"
  },
  {
    "text": "Arsenal at your disposal when you want to migrate your Microsoft apps to AWS do",
    "start": "1841040",
    "end": "1846080"
  },
  {
    "text": "provide us with your feedback and let us know how we can improve the event experience for you in the future thank",
    "start": "1846080",
    "end": "1851510"
  },
  {
    "text": "you for attending this session",
    "start": "1851510",
    "end": "1854260"
  }
]