[
  {
    "start": "0",
    "end": "8000"
  },
  {
    "text": "- Hey, this is Kirk\nfrom the DynamoDB team,",
    "start": "1890",
    "end": "3600"
  },
  {
    "text": "and today we are talking\nabout import from S3",
    "start": "3600",
    "end": "6060"
  },
  {
    "text": "and what you need to know about it.",
    "start": "6060",
    "end": "8490"
  },
  {
    "start": "8000",
    "end": "36000"
  },
  {
    "text": "Import from Amazon S3 for Amazon DynamoDB",
    "start": "8490",
    "end": "11340"
  },
  {
    "text": "is a fully managed feature,",
    "start": "11340",
    "end": "12870"
  },
  {
    "text": "ready to import your data files from S3",
    "start": "12870",
    "end": "15600"
  },
  {
    "text": "into a new DynamoDB table.",
    "start": "15600",
    "end": "17640"
  },
  {
    "text": "There's no code to write,\nno AWS Lambda functions",
    "start": "17640",
    "end": "20670"
  },
  {
    "text": "to implement and no other\nservices to set up and manage.",
    "start": "20670",
    "end": "23970"
  },
  {
    "text": "For data formats, you can import CSV,",
    "start": "23970",
    "end": "26918"
  },
  {
    "text": "DynamoDB JSON and Amazon Ion formats.",
    "start": "26918",
    "end": "30420"
  },
  {
    "text": "If you're not familiar with DynamoDB JSON",
    "start": "30420",
    "end": "32520"
  },
  {
    "text": "or Amazon Ion formats, I've put links",
    "start": "32520",
    "end": "34710"
  },
  {
    "text": "in the description for more information.",
    "start": "34710",
    "end": "36930"
  },
  {
    "start": "36000",
    "end": "54000"
  },
  {
    "text": "The most common use cases\nfor this feature are",
    "start": "36930",
    "end": "38970"
  },
  {
    "text": "when you need to do a migration\nfrom another database,",
    "start": "38970",
    "end": "41790"
  },
  {
    "text": "importing data from S3\nfor a one-time data load,",
    "start": "41790",
    "end": "44880"
  },
  {
    "text": "to move and create secondary copies",
    "start": "44880",
    "end": "46650"
  },
  {
    "text": "of a table to a different\nAWS region or account",
    "start": "46650",
    "end": "49800"
  },
  {
    "text": "and to import data that\nwas previously exported",
    "start": "49800",
    "end": "52290"
  },
  {
    "text": "with the DynamoDB export to S3 feature.",
    "start": "52290",
    "end": "55200"
  },
  {
    "text": "When you initiate an import\nfrom S3 with this feature,",
    "start": "55200",
    "end": "58350"
  },
  {
    "text": "DynamoDB creates a new table",
    "start": "58350",
    "end": "60210"
  },
  {
    "text": "and any secondary indexes you specified",
    "start": "60210",
    "end": "62760"
  },
  {
    "text": "with enough partitions based",
    "start": "62760",
    "end": "64170"
  },
  {
    "text": "on the uncompressed\nsize of the import files",
    "start": "64170",
    "end": "66960"
  },
  {
    "text": "DynamoDB manages capacity\nduring the import,",
    "start": "66960",
    "end": "69630"
  },
  {
    "text": "so you don't have to, like you might",
    "start": "69630",
    "end": "71310"
  },
  {
    "text": "if you were doing the\ndata load on your own.",
    "start": "71310",
    "end": "73740"
  },
  {
    "text": "When performing an import,\nyou can load one file",
    "start": "73740",
    "end": "76290"
  },
  {
    "text": "or multiple files with the\nsame prefix from an S3 bucket.",
    "start": "76290",
    "end": "80160"
  },
  {
    "text": "Files can be compressed in\nZstandard or GZIP format",
    "start": "80160",
    "end": "83160"
  },
  {
    "text": "or can be directly imported\nin uncompressed form.",
    "start": "83160",
    "end": "86190"
  },
  {
    "text": "The cost of the import from S3 is based",
    "start": "86190",
    "end": "88350"
  },
  {
    "text": "on the uncompressed size\nof all the files processed",
    "start": "88350",
    "end": "91200"
  },
  {
    "text": "and doesn't consume regular\ntable capacity units",
    "start": "91200",
    "end": "93719"
  },
  {
    "text": "or requests, but more on\ncost here in a little bit.",
    "start": "93720",
    "end": "96333"
  },
  {
    "start": "97000",
    "end": "154000"
  },
  {
    "text": "Quick tip for you, when\ncreating a new table",
    "start": "97170",
    "end": "99479"
  },
  {
    "text": "as part of the import, pay close attention",
    "start": "99480",
    "end": "101550"
  },
  {
    "text": "to the spelling and case\nsensitivity of the partition",
    "start": "101550",
    "end": "104370"
  },
  {
    "text": "and sort keys as compared\nto the files to be imported.",
    "start": "104370",
    "end": "107790"
  },
  {
    "text": "Don't do what I did and mistype\nthe sort key into the form,",
    "start": "107790",
    "end": "110790"
  },
  {
    "text": "run the job and then wonder\nwhy the import throws errors.",
    "start": "110790",
    "end": "114600"
  },
  {
    "text": "Complete user error on my\npart. So learn from my mistake.",
    "start": "114600",
    "end": "118380"
  },
  {
    "text": "Along with double-checking the partition",
    "start": "118380",
    "end": "120060"
  },
  {
    "text": "and sort keys I just talked about,",
    "start": "120060",
    "end": "121649"
  },
  {
    "text": "I also recommend you\ndouble and triple-check",
    "start": "121650",
    "end": "123690"
  },
  {
    "text": "your data formats, compression schemes,",
    "start": "123690",
    "end": "125760"
  },
  {
    "text": "file sizes and so on before\ninitiating the import.",
    "start": "125760",
    "end": "129690"
  },
  {
    "text": "This helps minimize the times where",
    "start": "129690",
    "end": "131220"
  },
  {
    "text": "you could get partial data\nimports, but may still be charged",
    "start": "131220",
    "end": "134280"
  },
  {
    "text": "for the full file size for that import.",
    "start": "134280",
    "end": "136680"
  },
  {
    "text": "When you do need the text of any info",
    "start": "136680",
    "end": "138480"
  },
  {
    "text": "or errors from the import process,",
    "start": "138480",
    "end": "140760"
  },
  {
    "text": "they're available in Amazon CloudWatch.",
    "start": "140760",
    "end": "143730"
  },
  {
    "text": "This includes information\nabout the import,",
    "start": "143730",
    "end": "146010"
  },
  {
    "text": "what errors, if any, were\nencountered, which items errored",
    "start": "146010",
    "end": "149790"
  },
  {
    "text": "and what actions you might need to take",
    "start": "149790",
    "end": "152010"
  },
  {
    "text": "to resolve any problems.",
    "start": "152010",
    "end": "154140"
  },
  {
    "start": "154000",
    "end": "191000"
  },
  {
    "text": "Let's look at a quick cost example.",
    "start": "154140",
    "end": "156660"
  },
  {
    "text": "Here we compare the cost of writing code",
    "start": "156660",
    "end": "158490"
  },
  {
    "text": "to import data yourself,\nas opposed to using",
    "start": "158490",
    "end": "160860"
  },
  {
    "text": "the DynamoDB import from S3 feature.",
    "start": "160860",
    "end": "163920"
  },
  {
    "text": "With 100 million items,\naveraging two kilobytes each",
    "start": "163920",
    "end": "167220"
  },
  {
    "text": "and one global secondary index,",
    "start": "167220",
    "end": "169500"
  },
  {
    "text": "you can see the cost of doing this",
    "start": "169500",
    "end": "171240"
  },
  {
    "text": "with the import for S3\nfeature is much cheaper.",
    "start": "171240",
    "end": "174930"
  },
  {
    "text": "That's even without factoring in",
    "start": "174930",
    "end": "176310"
  },
  {
    "text": "the time it would take you to write",
    "start": "176310",
    "end": "177840"
  },
  {
    "text": "and test your own code to do the import.",
    "start": "177840",
    "end": "180063"
  },
  {
    "text": "$28.65, as compared to\n$500, is a big difference.",
    "start": "181109",
    "end": "185939"
  },
  {
    "text": "For more information on\ncost for import from S3,",
    "start": "185940",
    "end": "188640"
  },
  {
    "text": "check the links in the video description.",
    "start": "188640",
    "end": "190690"
  },
  {
    "start": "191000",
    "end": "216000"
  },
  {
    "text": "Quick cost saving tip for you,",
    "start": "191820",
    "end": "193860"
  },
  {
    "text": "if the new tables will ultimately\nhave secondary indexes,",
    "start": "193860",
    "end": "196680"
  },
  {
    "text": "create those indexes as part of the import",
    "start": "196680",
    "end": "199170"
  },
  {
    "text": "from S3 table create process.",
    "start": "199170",
    "end": "201750"
  },
  {
    "text": "This way, secondary\nindexes are free to create,",
    "start": "201750",
    "end": "204810"
  },
  {
    "text": "as the cost of doing an import is based",
    "start": "204810",
    "end": "206849"
  },
  {
    "text": "on the import file sizes,\nnot on any capacity used",
    "start": "206850",
    "end": "210810"
  },
  {
    "text": "to create the table or secondary index,",
    "start": "210810",
    "end": "212580"
  },
  {
    "text": "like you would incur if you created",
    "start": "212580",
    "end": "214680"
  },
  {
    "text": "the secondary index at a later point.",
    "start": "214680",
    "end": "216573"
  },
  {
    "start": "216000",
    "end": "345000"
  },
  {
    "text": "All right, it's demo time.",
    "start": "217800",
    "end": "219540"
  },
  {
    "text": "Today, we're in the\nconsole on Imports from S3.",
    "start": "219540",
    "end": "222510"
  },
  {
    "text": "We're gonna click on the\nImport from S3 button.",
    "start": "222510",
    "end": "225209"
  },
  {
    "text": "We're gonna browse S3 and find",
    "start": "225210",
    "end": "227130"
  },
  {
    "text": "our bucket here, in the directory.",
    "start": "227130",
    "end": "229620"
  },
  {
    "text": "I have five JSUN documents.",
    "start": "229620",
    "end": "231510"
  },
  {
    "text": "They're in DynamoDB JSON format,",
    "start": "231510",
    "end": "233790"
  },
  {
    "text": "but they could be in CSV\nor Amazon Ion format.",
    "start": "233790",
    "end": "238439"
  },
  {
    "text": "I'm not gonna do each one\nof these individually.",
    "start": "238440",
    "end": "241170"
  },
  {
    "text": "I'm going to do the\nentire directory of them.",
    "start": "241170",
    "end": "243900"
  },
  {
    "text": "Hit Choose.",
    "start": "243900",
    "end": "245370"
  },
  {
    "text": "I could do here where this bucket comes",
    "start": "245370",
    "end": "247440"
  },
  {
    "text": "from a different account,\nbut I'm not going to.",
    "start": "247440",
    "end": "249570"
  },
  {
    "text": "Here's where you specify the compression",
    "start": "249570",
    "end": "251940"
  },
  {
    "text": "that you have on your files, if you do.",
    "start": "251940",
    "end": "253980"
  },
  {
    "text": "I don't, so I'm not worried about that,",
    "start": "253980",
    "end": "255840"
  },
  {
    "text": "and here's where you look at\nthe other different format.",
    "start": "255840",
    "end": "258780"
  },
  {
    "text": "Click Next, gonna put in My Table3.",
    "start": "258780",
    "end": "261737"
  },
  {
    "text": "I'm gonna put a partition key\nof PK and a sort key of SK,",
    "start": "263940",
    "end": "268530"
  },
  {
    "text": "and this is because this is\nwhat's in the JSUN documents.",
    "start": "268530",
    "end": "271680"
  },
  {
    "text": "Your documents may vary and\nyour partition key names,",
    "start": "271680",
    "end": "274229"
  },
  {
    "text": "but these need to match\nwhat's in your JSON documents.",
    "start": "274230",
    "end": "277440"
  },
  {
    "text": "I'm gonna take the defaults,",
    "start": "277440",
    "end": "278730"
  },
  {
    "text": "but you could customize this\ntable, if you wanted to.",
    "start": "278730",
    "end": "281820"
  },
  {
    "text": "This should look very familiar\nif you've ever created",
    "start": "281820",
    "end": "283800"
  },
  {
    "text": "a DynamoDB table in the console.",
    "start": "283800",
    "end": "285840"
  },
  {
    "text": "Again, I'm not gonna\nchange any of this stuff,",
    "start": "285840",
    "end": "288060"
  },
  {
    "text": "but I could if I wanted to.",
    "start": "288060",
    "end": "289800"
  },
  {
    "text": "Take the default settings. Hit Next.",
    "start": "289800",
    "end": "292199"
  },
  {
    "text": "Here's a summary of what it's gonna do,",
    "start": "292200",
    "end": "294420"
  },
  {
    "text": "and then I click Import,",
    "start": "294420",
    "end": "295890"
  },
  {
    "text": "and now it is off to\nthe races and importing.",
    "start": "295890",
    "end": "298443"
  },
  {
    "text": "As you can see here, the import\nhas completed successfully.",
    "start": "301290",
    "end": "304620"
  },
  {
    "text": "We can refresh this",
    "start": "304620",
    "end": "305610"
  },
  {
    "text": "and see the details of\nwhat actually happened.",
    "start": "305610",
    "end": "308310"
  },
  {
    "text": "Here's where we can go",
    "start": "308310",
    "end": "309570"
  },
  {
    "text": "and view the CloudWatch\nlogs, If you want to.",
    "start": "309570",
    "end": "312150"
  },
  {
    "text": "Let's actually go look\nat the table itself.",
    "start": "312150",
    "end": "314460"
  },
  {
    "text": "It's My Table3.",
    "start": "314460",
    "end": "316237"
  },
  {
    "text": "I'm gonna do Explore items,\nand now you can see all",
    "start": "316237",
    "end": "320010"
  },
  {
    "text": "of these items are in this table here.",
    "start": "320010",
    "end": "322740"
  },
  {
    "text": "In summary, using the import\nfrom S3 feature of DynamoDB",
    "start": "322740",
    "end": "326520"
  },
  {
    "text": "to create new tables is easier",
    "start": "326520",
    "end": "328440"
  },
  {
    "text": "and cheaper than creating\nyour own data import process.",
    "start": "328440",
    "end": "331800"
  },
  {
    "text": "There's nothing to manage or implement",
    "start": "331800",
    "end": "333780"
  },
  {
    "text": "as DynamoDB takes care\nof the process for you.",
    "start": "333780",
    "end": "336840"
  },
  {
    "text": "Thanks to be on the lookout",
    "start": "336840",
    "end": "337800"
  },
  {
    "text": "for more core concept videos here",
    "start": "337800",
    "end": "339599"
  },
  {
    "text": "and on our Twitter handle @DynamoDB.",
    "start": "339600",
    "end": "341400"
  }
]