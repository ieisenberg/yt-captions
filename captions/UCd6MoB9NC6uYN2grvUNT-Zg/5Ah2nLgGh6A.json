[
  {
    "text": "Welcome to 'Back to Basics'.",
    "start": "5919",
    "end": "7408"
  },
  {
    "text": "I'm Mai Nishitani,\na Solutions Architect from Amazon Web Services.",
    "start": "7408",
    "end": "11131"
  },
  {
    "text": "Today, we're going to be walking\nthrough monitoring and observability",
    "start": "11688",
    "end": "15047"
  },
  {
    "text": "for containerized applications,",
    "start": "15048",
    "end": "17121"
  },
  {
    "text": "how do we take those metrics\nand visualize them as well?",
    "start": "17121",
    "end": "20065"
  },
  {
    "text": "So prior to this role, I used to be a cloud engineer,",
    "start": "21805",
    "end": "24491"
  },
  {
    "text": "and a lot of times I got woken up early in the morning",
    "start": "24491",
    "end": "27467"
  },
  {
    "text": "because there was a code push to production",
    "start": "27593",
    "end": "30641"
  },
  {
    "text": "that broke the infrastructure\nand our customers couldn't access our web application",
    "start": "30823",
    "end": "35272"
  },
  {
    "text": "running on containers.",
    "start": "35272",
    "end": "36592"
  },
  {
    "text": "So as a cloud engineer,\nI needed to dive deep into where the problem was,",
    "start": "36922",
    "end": "41072"
  },
  {
    "text": "what the root cause was\nand how we can prevent it from happening in the future.",
    "start": "41570",
    "end": "45642"
  },
  {
    "text": "We also needed to make sure\nthat our infrastructure was scaling in the back end,",
    "start": "46107",
    "end": "50613"
  },
  {
    "text": "depending on the level of traffic\nthat we were receiving.",
    "start": "50613",
    "end": "53839"
  },
  {
    "text": "So how do we do that?",
    "start": "54111",
    "end": "55685"
  },
  {
    "text": "You want to first baseline your applications\non how it operates during non-peak time.",
    "start": "56177",
    "end": "61364"
  },
  {
    "text": "If there are anomalies from the normal pattern,",
    "start": "61364",
    "end": "64211"
  },
  {
    "text": "you can investigate this before a major event,\nsuch as a new product launch,",
    "start": "64212",
    "end": "68437"
  },
  {
    "text": "where you're expecting high levels of traffic.",
    "start": "68438",
    "end": "70802"
  },
  {
    "text": "Well, you really don't want to be continuously woken up\nearly in the morning",
    "start": "71373",
    "end": "75086"
  },
  {
    "text": "to investigate what went wrong,",
    "start": "75086",
    "end": "77313"
  },
  {
    "text": "if there are any interruptions to your service.",
    "start": "77314",
    "end": "80126"
  },
  {
    "text": "Let me show you\nan AWS native architecture pattern",
    "start": "81009",
    "end": "84395"
  },
  {
    "text": "for monitoring your container environment.",
    "start": "84395",
    "end": "86880"
  },
  {
    "text": "Let's start off with the container application\nrunning in Amazon ECS.",
    "start": "87418",
    "end": "91917"
  },
  {
    "text": "You can see one of my favorite services,",
    "start": "91993",
    "end": "94217"
  },
  {
    "text": "AWS Distro for Open Telemetry,\ntalking to the application as a typical sidecar architecture pattern.",
    "start": "94218",
    "end": "100939"
  },
  {
    "text": "The application is sending its metrics\nvia the AWS Distro for Open Telemetry collector.",
    "start": "101539",
    "end": "106985"
  },
  {
    "text": "It's also correlating distributed traces and metrics,",
    "start": "107870",
    "end": "111289"
  },
  {
    "text": "then sending it to the Amazon\nManaged Services for Prometheus.",
    "start": "111289",
    "end": "114942"
  },
  {
    "text": "I like Amazon Managed Services for Prometheus",
    "start": "115475",
    "end": "117864"
  },
  {
    "text": "as it's a Prometheus compatible service\nthat let you monitor",
    "start": "117864",
    "end": "121496"
  },
  {
    "text": "and alert for your containerized applications\nand infrastructure at scale.",
    "start": "121496",
    "end": "125616"
  },
  {
    "text": "You can also benefit\nfrom enhancing your container metrics",
    "start": "126080",
    "end": "129571"
  },
  {
    "text": "via Amazon CloudWatch Container Insights.",
    "start": "129571",
    "end": "132238"
  },
  {
    "text": "In the past with Amazon CloudWatch,",
    "start": "132238",
    "end": "134749"
  },
  {
    "text": "you needed to enable \ncustom monitoring of services and tasks.",
    "start": "134749",
    "end": "138584"
  },
  {
    "text": "With CloudWatch Container Insights,",
    "start": "139024",
    "end": "141133"
  },
  {
    "text": "it provides several key metrics\nsuch as your containers' CPU",
    "start": "141133",
    "end": "145133"
  },
  {
    "text": "and memory utilization, and task \nand service counts out of the box.",
    "start": "145133",
    "end": "150108"
  },
  {
    "text": "Amazon CloudWatch, AWS Distro for Open Telemetry,",
    "start": "150706",
    "end": "153985"
  },
  {
    "text": "and Amazon Managed Services for Prometheus",
    "start": "153985",
    "end": "156535"
  },
  {
    "text": "are all great data sources\nthat collects, monitors,",
    "start": "156608",
    "end": "160267"
  },
  {
    "text": "analyzes, and acts on all the things\nthat are going on in your system.",
    "start": "160267",
    "end": "164494"
  },
  {
    "text": "If you're a cloud engineer,\nyou definitely like to see these metrics",
    "start": "165126",
    "end": "168477"
  },
  {
    "text": "that you're collecting on a dashboard.",
    "start": "168477",
    "end": "170224"
  },
  {
    "text": "So let's talk about how you can take\nthese different sources of data",
    "start": "170641",
    "end": "174140"
  },
  {
    "text": "and visualize them\nusing Amazon Managed Services for Grafana.",
    "start": "174140",
    "end": "178849"
  },
  {
    "text": "Amazon Managed Services for Grafana\nwill help you visualize",
    "start": "179477",
    "end": "183422"
  },
  {
    "text": "all of these data sources\ninto a nice dashboard like this.",
    "start": "183422",
    "end": "187260"
  },
  {
    "text": "You can analyze your metrics, logs,\nand traces without all the heavy lifting.",
    "start": "187260",
    "end": "192202"
  },
  {
    "text": "There's no need to provision servers,",
    "start": "192203",
    "end": "194261"
  },
  {
    "text": "configure and update software,",
    "start": "194261",
    "end": "196188"
  },
  {
    "text": "and you can also connect your existing identities\nvia AWS Single Sign On.",
    "start": "196188",
    "end": "200864"
  },
  {
    "text": "The top three metrics that you want to look out\nfor in your container applications on ECS",
    "start": "200864",
    "end": "206422"
  },
  {
    "text": "are number one, CPU utilization.",
    "start": "206422",
    "end": "210573"
  },
  {
    "text": "If this metric\nis nearing capacity in a single service,",
    "start": "211032",
    "end": "214731"
  },
  {
    "text": "you might consider updating\nthat service to include more tasks.",
    "start": "214731",
    "end": "218915"
  },
  {
    "text": "High CPU utilization\nmay indicate CPU intensive workloads.",
    "start": "218915",
    "end": "224547"
  },
  {
    "text": "If this is happening, consider upgrading\nto a task with a higher vCPU.",
    "start": "224547",
    "end": "229306"
  },
  {
    "text": "Number two, memory utilization.",
    "start": "229306",
    "end": "232294"
  },
  {
    "text": "ECS will terminate any containers\nthat exceed the hard memory limit.",
    "start": "232294",
    "end": "236820"
  },
  {
    "text": "If you set one, you'll want to alert your team\nwhen memory utilization approaches",
    "start": "237300",
    "end": "241867"
  },
  {
    "text": "100% so that your containerized application\nremains available.",
    "start": "241867",
    "end": "246856"
  },
  {
    "text": "Even if you set a soft limit,\nmemory utilization can exceed 100%",
    "start": "247438",
    "end": "252387"
  },
  {
    "text": "without ECS killing containers.",
    "start": "252387",
    "end": "254694"
  },
  {
    "text": "However, it's still good to know\nwhether you're approaching this threshold",
    "start": "255213",
    "end": "258562"
  },
  {
    "text": "as it can help you avoid\nunexpected out memory errors",
    "start": "258562",
    "end": "262178"
  },
  {
    "text": "for your EC2 Instances\nor unexpected high Fargate bills.",
    "start": "262178",
    "end": "266524"
  },
  {
    "text": "As with CPU utilization, \nit's great to know if you are adequately scaling your ECS services.",
    "start": "266738",
    "end": "272524"
  },
  {
    "text": "And lastly, running task count.",
    "start": "272794",
    "end": "275369"
  },
  {
    "text": "You can track the number of tasks",
    "start": "275617",
    "end": "277406"
  },
  {
    "text": "running within a container instance,\nservice, and cluster.",
    "start": "277406",
    "end": "280929"
  },
  {
    "text": "The metric running count can also show\nwhether your services are running tasks",
    "start": "281449",
    "end": "285375"
  },
  {
    "text": "as expected.",
    "start": "285375",
    "end": "286687"
  },
  {
    "text": "When creating or updating a service,",
    "start": "287228",
    "end": "289572"
  },
  {
    "text": "you can specify\nnot only the number of desired tasks,",
    "start": "289572",
    "end": "293060"
  },
  {
    "text": "as in how many tasks\nthe service will attempt to keep running,",
    "start": "293060",
    "end": "296281"
  },
  {
    "text": "but also how many tasks\nfrom a previous deployment",
    "start": "296281",
    "end": "299084"
  },
  {
    "text": "you need to keep running\nwhile new ones are launched.",
    "start": "299084",
    "end": "302449"
  },
  {
    "text": "In this session, you learned\nall about an AWS native container monitoring architecture,",
    "start": "302639",
    "end": "307519"
  },
  {
    "text": "and the three major metrics\nto look out for, for Amazon ECS.",
    "start": "307519",
    "end": "311587"
  },
  {
    "text": "Check out the links below to start building.",
    "start": "312570",
    "end": "315002"
  },
  {
    "text": "Thanks for watching 'Back to Basics'.",
    "start": "315484",
    "end": "317257"
  },
  {
    "text": "See you next time.",
    "start": "317257",
    "end": "318475"
  }
]