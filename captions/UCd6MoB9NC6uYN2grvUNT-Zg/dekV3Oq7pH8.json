[
  {
    "start": "0",
    "end": "118000"
  },
  {
    "text": "number two all right okay that's incoming people seems to",
    "start": "2030",
    "end": "9059"
  },
  {
    "text": "have slowed to a trickle not quite as packed as yesterday but thanks everyone for coming",
    "start": "9059",
    "end": "14540"
  },
  {
    "text": "there's my kicker there we go okay so I",
    "start": "14540",
    "end": "20880"
  },
  {
    "text": "actually wanted to change the title of this light of this talk and I didn't get time to modify the slides but people who",
    "start": "20880",
    "end": "27480"
  },
  {
    "text": "are interested in high-availability the book came out on Tuesday that you",
    "start": "27480",
    "end": "32940"
  },
  {
    "text": "should all hear about who has heard of the Black Swan and the whole concept of",
    "start": "32940",
    "end": "38489"
  },
  {
    "text": "black swans and the book by is by by talent so he cuz his new book came out",
    "start": "38489",
    "end": "43770"
  },
  {
    "text": "and it's called antifragility and it's about basically building systems that when you apply a black swan",
    "start": "43770",
    "end": "50100"
  },
  {
    "text": "to them they still work right and that that's kind of I wanted to change this to Netflix antifragility architecture",
    "start": "50100",
    "end": "56550"
  },
  {
    "text": "and I think I'll do that going forward because I've read the first few bits of the book I pulled it off Kindle app kid",
    "start": "56550",
    "end": "61859"
  },
  {
    "text": "the Kindle Store on Tuesday morning I read it on the way here but really worth with you're at all interested in this",
    "start": "61859",
    "end": "67560"
  },
  {
    "text": "area some great philosophical discussion about how to build systems that are anti",
    "start": "67560",
    "end": "73500"
  },
  {
    "text": "fragile meaning that they're actually chaotic enough that they don't become brittle and what we've got here is a",
    "start": "73500",
    "end": "79470"
  },
  {
    "text": "very chaotic kind of system and there's this sort of natural thing to go clean everything up and make it tidy and the",
    "start": "79470",
    "end": "86430"
  },
  {
    "text": "ops guys like to have everything tidy in particular and what they're actually doing is making it brittle so it works fine most of the time then it breaks",
    "start": "86430",
    "end": "92579"
  },
  {
    "text": "really badly if you let yourself let the system be a bit more chaotic and what",
    "start": "92579",
    "end": "97710"
  },
  {
    "text": "we've got here is an architecture that actually looks a little chaotic you find that it's much more resilient to to",
    "start": "97710",
    "end": "104009"
  },
  {
    "text": "impact because they'd only affect a little piece of the system and the problems don't propagate all the way through just like having a large brittle",
    "start": "104009",
    "end": "110520"
  },
  {
    "text": "thing cracks propagate through it was something that's soft I mean you can't crack jelly kind of maybe that's the",
    "start": "110520",
    "end": "115619"
  },
  {
    "text": "wrong analogy but anyway all right most of you probably know about Netflix we're",
    "start": "115619",
    "end": "122070"
  },
  {
    "start": "118000",
    "end": "177000"
  },
  {
    "text": "all over the world now we just launched in the Nordics that's going very well we're all over the u.s. at Canada Latin",
    "start": "122070",
    "end": "128970"
  },
  {
    "text": "America you can Ireland and we're launching internationally you know",
    "start": "128970",
    "end": "134050"
  },
  {
    "text": "on a sort of regular basis as the previous countries we've launched get profitable we just launched a new one",
    "start": "134050",
    "end": "140489"
  },
  {
    "text": "I'm not going to go over the history of how we got into the cloud lots of other talks on that lots of stuff on",
    "start": "140489",
    "end": "146739"
  },
  {
    "text": "SlideShare and there was a talk yesterday afternoon by Yuri who is my",
    "start": "146739",
    "end": "153370"
  },
  {
    "text": "manager and and Neil hunt who's our chief product officer that went through how netflix migrated to the cloud why",
    "start": "153370",
    "end": "160840"
  },
  {
    "text": "what we were thinking about how we did that so pull that up on YouTube when they post it and that will give you a",
    "start": "160840",
    "end": "166420"
  },
  {
    "text": "great background from the managers that run the things on how we got here so",
    "start": "166420",
    "end": "172390"
  },
  {
    "text": "this is my favorite slide for what it's like running on cloud it's all the",
    "start": "172390",
    "end": "178180"
  },
  {
    "start": "177000",
    "end": "208000"
  },
  {
    "text": "things that we don't do oops I went bit too far so we provision everything",
    "start": "178180",
    "end": "183400"
  },
  {
    "text": "directly we give the developers root access and the ability to provision not only the ability but we make them",
    "start": "183400",
    "end": "189310"
  },
  {
    "text": "provision their own systems so that's that's the normal way so you don't have to go home meeting with IT because you",
    "start": "189310",
    "end": "195430"
  },
  {
    "text": "need 500 machines or you want to run a test with you know we ran a benchmark which involved about 400 something",
    "start": "195430",
    "end": "202480"
  },
  {
    "text": "machines we needed them for a few hours didn't have to go talk to anyone about that we just did it so it's good to tidy",
    "start": "202480",
    "end": "209799"
  },
  {
    "start": "208000",
    "end": "216000"
  },
  {
    "text": "up after yourself so some things we do do I'm just going to go through the audience here of who likes who doesn't like putting their hand up okay we got a",
    "start": "209799",
    "end": "217720"
  },
  {
    "start": "216000",
    "end": "229000"
  },
  {
    "text": "few of you all right so let's count those who's using big data Hadoop in production today all right Amazon Cloud",
    "start": "217720",
    "end": "225819"
  },
  {
    "text": "hopefully a larger proportion of you can where we are today APM application",
    "start": "225819",
    "end": "230829"
  },
  {
    "start": "229000",
    "end": "233000"
  },
  {
    "text": "performance management right if you don't know what this means you're probably not doing it by the way",
    "start": "230829",
    "end": "236079"
  },
  {
    "start": "233000",
    "end": "285000"
  },
  {
    "text": "integrated DevOps stuff okay we've got a few of you this is tend to be the same hands going up of course continuous",
    "start": "236079",
    "end": "242349"
  },
  {
    "text": "integration continuous delivery yep a few of you know sequel globally",
    "start": "242349",
    "end": "247900"
  },
  {
    "text": "distributed no sequel o few of you doing that too core platform as a service as",
    "start": "247900",
    "end": "252910"
  },
  {
    "text": "micro services lots and lots of little services yeah not that many social",
    "start": "252910",
    "end": "257919"
  },
  {
    "text": "coding who's pulling code from github into production that they wrote so a few of you so this is when we Netflix did all these",
    "start": "257919",
    "end": "265930"
  },
  {
    "text": "things in production and sort of there was a whole story about how we got to doing all of these things but this is",
    "start": "265930",
    "end": "272110"
  },
  {
    "text": "kind of the state of the art I think in terms of you know engineering buzzwords",
    "start": "272110",
    "end": "277180"
  },
  {
    "text": "or whatever they're marketing buzzwords and and we've got most of these running in production now so I'm going to talk about how we put all this together to",
    "start": "277180",
    "end": "283930"
  },
  {
    "text": "make a highly available architecture so you'll go through the architecture itself then talk basically try to come",
    "start": "283930",
    "end": "290229"
  },
  {
    "text": "up with a taxonomy of service outages dig into a little bit about where there's different ways that things can go wrong so you want to have labels that",
    "start": "290229",
    "end": "297750"
  },
  {
    "text": "identify okay yeah we're covered for this kind of problem but not for this kind of problem so I'll talk a bit about that then I'm going to look at some",
    "start": "297750",
    "end": "304360"
  },
  {
    "text": "actual outages from several different cloud vendors look which illustrate those types of outages and then look at",
    "start": "304360",
    "end": "311260"
  },
  {
    "text": "what you what you can do about it and what in particular as people that build applications on top of the cloud which",
    "start": "311260",
    "end": "317289"
  },
  {
    "text": "is kind of my approach you know where most of us probably are how can you",
    "start": "317289",
    "end": "322810"
  },
  {
    "text": "learn from these patterns and the things that went wrong so you don't end up making you're making the same mistake",
    "start": "322810",
    "end": "328560"
  },
  {
    "text": "and then finally a little bit at the end on the components that we have open sourced we have an open source platform",
    "start": "328560",
    "end": "334180"
  },
  {
    "text": "though if you follow the Netflix OSS Twitter feed you can the only thing on that feed is announcements about that",
    "start": "334180",
    "end": "341169"
  },
  {
    "text": "platform you know the the actual products the pieces of the platform itself so have a collection of what",
    "start": "341169",
    "end": "346510"
  },
  {
    "text": "looks a bit like random open source projects but they are forming a platform and as we get further down the road",
    "start": "346510",
    "end": "352810"
  },
  {
    "text": "probably early next year well it'll be almost like a one-click install to go boot this into an Amazon",
    "start": "352810",
    "end": "357849"
  },
  {
    "text": "account that's kind of where we're trying to get to with it and then you'll be able to just drop your war files in",
    "start": "357849",
    "end": "363010"
  },
  {
    "text": "it and go write some code write some code so what's the inspiration for this",
    "start": "363010",
    "end": "369610"
  },
  {
    "start": "366000",
    "end": "413000"
  },
  {
    "text": "kind of architecture well this is one of the fundamental papers in this area back in 2003 they were talking about was so",
    "start": "369610",
    "end": "378099"
  },
  {
    "text": "what is it that Google did that was different and what happened was they built a extremely reliable service out",
    "start": "378099",
    "end": "384039"
  },
  {
    "text": "of low cost commodity components and moved all the complexity into the software where the cost doesn't really",
    "start": "384039",
    "end": "390039"
  },
  {
    "text": "scale the only other alternative is to buy ever more high-end",
    "start": "390039",
    "end": "395320"
  },
  {
    "text": "Londyn sort of mainframe e style bits of hardware and go vertical so this is this was one of the early times where",
    "start": "395320",
    "end": "401530"
  },
  {
    "text": "somebody clearly said no we're going to stop building systems where you're trying to make a massive sand highly",
    "start": "401530",
    "end": "407800"
  },
  {
    "text": "available on a massive pile of big machines and you're going to go for low-end stuff and software so what we're",
    "start": "407800",
    "end": "414820"
  },
  {
    "text": "trying to build here is a Welling we'll talk about here is a platform and service patterns which you could",
    "start": "414820",
    "end": "421030"
  },
  {
    "text": "implement on any platform that provide highly available services but without requiring that the other parts of your",
    "start": "421030",
    "end": "428440"
  },
  {
    "text": "service are dependable or of highly available and the platform isn't highly",
    "start": "428440",
    "end": "434050"
  },
  {
    "text": "available and the infrastructure isn't highly available so you just assume and this is echoed in the keynote this",
    "start": "434050",
    "end": "440530"
  },
  {
    "text": "morning you know you take all of these pieces that that you don't have to if",
    "start": "440530",
    "end": "447820"
  },
  {
    "text": "you don't depend on them but you can still build a highly available service on top of that okay so this architecture",
    "start": "447820",
    "end": "455770"
  },
  {
    "start": "452000",
    "end": "464000"
  },
  {
    "text": "does apply to any kind of system it's just easier to implement on cloud and we built all the automation around it you",
    "start": "455770",
    "end": "461380"
  },
  {
    "text": "could do in the data center it's just hard work and takes longer so this is how Netflix works you have the front end",
    "start": "461380",
    "end": "467230"
  },
  {
    "start": "464000",
    "end": "556000"
  },
  {
    "text": "a very high level just to get context here so you have a the blue box is the thing you have at home ps3 a digital you",
    "start": "467230",
    "end": "474220"
  },
  {
    "text": "know TV set your P your laptop something like that and you decide you want to",
    "start": "474220",
    "end": "480520"
  },
  {
    "text": "watch movies so you pull up the Netflix application or the website so that browse that's the first box here you go",
    "start": "480520",
    "end": "486940"
  },
  {
    "text": "to browse you're talking to an EOB with a bunch of instances behind it behind that's all the user data for you",
    "start": "486940",
    "end": "493630"
  },
  {
    "text": "describes you and what movies you like and all the personalization algorithms that then figure out what what list of",
    "start": "493630",
    "end": "500620"
  },
  {
    "text": "movies to show you so now you're staring at a screen with you know 50 or 100 or a thousand movies that you can scroll",
    "start": "500620",
    "end": "506170"
  },
  {
    "text": "around and pick something or TV shows next thing you do is pick one of those and hit the play button that talks to a",
    "start": "506170",
    "end": "512650"
  },
  {
    "text": "different API that gives you the the route to that data on the CDN it gives",
    "start": "512650",
    "end": "519460"
  },
  {
    "text": "you the DRM key that decodes that movie and it starts logging your quality of",
    "start": "519460",
    "end": "524860"
  },
  {
    "text": "service so this is tracking everything that you're the backend for this quality of service",
    "start": "524860",
    "end": "529910"
  },
  {
    "text": "logging system is a single Cassandra cluster doing more than a million requests a second there'll be a talk about that a little",
    "start": "529910",
    "end": "536600"
  },
  {
    "text": "bit later this afternoon so we do insist",
    "start": "536600",
    "end": "541670"
  },
  {
    "text": "to some extent you could say that Netflix is an application for writing log files that occasionally shows people movies and we trying to keep sort of",
    "start": "541670",
    "end": "550490"
  },
  {
    "text": "don't really need to log all this data but you know we keep having to go back and clean stuff up then the the client",
    "start": "550490",
    "end": "558079"
  },
  {
    "start": "556000",
    "end": "678000"
  },
  {
    "text": "has now been given a bunch of URLs that point at our CDN boxes so all the grey boxes here are Amazon services and",
    "start": "558079",
    "end": "564589"
  },
  {
    "text": "there's no connection to the data center anywhere in this flow right there was a connection they say when you first sign",
    "start": "564589",
    "end": "569779"
  },
  {
    "text": "up where we story a credit card and do billing and stuff but that's currently the only thing that really touches the data center but we touch these open",
    "start": "569779",
    "end": "577370"
  },
  {
    "text": "connects CDN boxes and the commercial CD ends and just to be really clear these aren't running on the Amazon Cloud these",
    "start": "577370",
    "end": "584120"
  },
  {
    "text": "are distributed much more widely there in ISPs peering points they're scattered all over the world and they are they",
    "start": "584120",
    "end": "590450"
  },
  {
    "text": "just huge static web servers they have a hundred terabytes of disk and they have",
    "start": "590450",
    "end": "596240"
  },
  {
    "text": "lots of copies of the movies and TV shows you want to watch and you just point out them and it's a static web",
    "start": "596240",
    "end": "602870"
  },
  {
    "text": "server it's just HTTP GET we stream the bits out that's it there's nothing clever here it's just a box with ten",
    "start": "602870",
    "end": "608540"
  },
  {
    "text": "gigabits of bandwidth and a hundred terabytes in it we ship you know we ship large numbers of those to all over the",
    "start": "608540",
    "end": "614480"
  },
  {
    "text": "world and that's our we've open source the design for this so if you were bill trying to build a CDN and that sounds",
    "start": "614480",
    "end": "620810"
  },
  {
    "text": "like an interesting box we've actually published the hardware specs and the software specs so so that's our",
    "start": "620810",
    "end": "626959"
  },
  {
    "text": "distributed CDN behind that though there's a bunch of Amazon based services",
    "start": "626959",
    "end": "632930"
  },
  {
    "text": "which still put data into that manage the health of them monitor and figure",
    "start": "632930",
    "end": "638180"
  },
  {
    "text": "out which box has bandwidth on it record you know which piece of content is on which box if you want to watch you know",
    "start": "638180",
    "end": "643880"
  },
  {
    "text": "seasons for Episode six of friends or something you know it'll be on this box",
    "start": "643880",
    "end": "648890"
  },
  {
    "text": "over here right that kind of thing we need to have all that data and then at the bottom here there was a talk by",
    "start": "648890",
    "end": "654410"
  },
  {
    "text": "yesterday by Kevin McEntee who's the VP engineering that the actually led a lot of the initial cloud",
    "start": "654410",
    "end": "660320"
  },
  {
    "text": "cloud development he now runs the content encoding side for Netflix and if",
    "start": "660320",
    "end": "665630"
  },
  {
    "text": "you want to know more about content encoding there's an entire talk that was run yesterday so look that up on the YouTube channel so this is what hitting",
    "start": "665630",
    "end": "674930"
  },
  {
    "text": "the website really looks like it's not just hitting a couple of grey boxes it's hitting lots of little green boxes which",
    "start": "674930",
    "end": "681320"
  },
  {
    "text": "are mostly the Java ones and some grey boxes that are things like memcache deep here and just to load the homepage you",
    "start": "681320",
    "end": "690230"
  },
  {
    "text": "hit all these different things that this looks this is where it looks messy but what we've really got here is an",
    "start": "690230",
    "end": "696740"
  },
  {
    "text": "extremely resilient architecture because any one developer is building one of these boxes that's their job they have a",
    "start": "696740",
    "end": "702680"
  },
  {
    "text": "REST API coming in they call a bunch of other things behind it cassandra or rest or memcache D and they're just",
    "start": "702680",
    "end": "709490"
  },
  {
    "text": "responsible for that one piece so if they ship some code that breaks for some reason like this we've lost one little",
    "start": "709490",
    "end": "716630"
  },
  {
    "text": "piece right so maybe one of the rows on your website no longer appears we think we no longer know how to do similar",
    "start": "716630",
    "end": "722480"
  },
  {
    "text": "movies or we no longer know how to do your top ten but the rest of the site still works right so that's that's one",
    "start": "722480",
    "end": "729290"
  },
  {
    "text": "of the ways that you get resilient I'll talk a little bit more about that later this box in the bottom left that's got",
    "start": "729290",
    "end": "735110"
  },
  {
    "text": "everything talking to it is the thing that chooses those lists of movies for you so if you've ever wondered why you",
    "start": "735110",
    "end": "740270"
  },
  {
    "text": "get you know 20th century movies with a strong female lead and set in China with",
    "start": "740270",
    "end": "746600"
  },
  {
    "text": "dogs in or something you know you can you can tag together arbitrarily complicated genres and find those for",
    "start": "746600",
    "end": "753050"
  },
  {
    "text": "people so that's kind of what that core system does and I've been at Netflix about five or six years and at some",
    "start": "753050",
    "end": "759500"
  },
  {
    "text": "point actually was managing the development of that effectively that box for the first few years that I was at",
    "start": "759500",
    "end": "765080"
  },
  {
    "text": "Netflix and then we moved that whole architecture to the cloud about three",
    "start": "765080",
    "end": "770180"
  },
  {
    "text": "years ago and that's when I moved into this new role as more of a cloud architect at more of an overview of the",
    "start": "770180",
    "end": "775250"
  },
  {
    "text": "system and then some of these back-end things are Cassandra they're just another Java process that you happen to",
    "start": "775250",
    "end": "781220"
  },
  {
    "text": "call and some of them are memcache D or s3 buckets or whatever right so if you",
    "start": "781220",
    "end": "788390"
  },
  {
    "text": "took this is just for the webview right so we've got lots of things calling into this Architecture from lots of different",
    "start": "788390",
    "end": "793550"
  },
  {
    "text": "directions and that looks a bit more like this and this is a simplified version a she took from a test account",
    "start": "793550",
    "end": "798860"
  },
  {
    "start": "795000",
    "end": "830000"
  },
  {
    "text": "because the one in production just looks like all the lines are just a big blob the at least you can see some of the",
    "start": "798860",
    "end": "804350"
  },
  {
    "text": "calls on this and I just wanted a diagram that I could I could repeat you'll see this come up a lot long way a",
    "start": "804350",
    "end": "810680"
  },
  {
    "text": "lot more later so the chaos monkey is is",
    "start": "810680",
    "end": "815900"
  },
  {
    "text": "a service that we built that kills individual instances to make sure that we can handle killing them so chaos",
    "start": "815900",
    "end": "821780"
  },
  {
    "text": "monkey may kill one of these or you may ship some bad code it's basically the same problem and the system can survive",
    "start": "821780",
    "end": "829340"
  },
  {
    "text": "that so if we take three copies of that mess of interconnected services and put",
    "start": "829340",
    "end": "835910"
  },
  {
    "start": "830000",
    "end": "924000"
  },
  {
    "text": "them in each launch each one of them in a different availability zone and that's a one-click operation you just tell",
    "start": "835910",
    "end": "841400"
  },
  {
    "text": "Amazon please distribute this available this order scale group across these three zones so it's a full as God just",
    "start": "841400",
    "end": "847730"
  },
  {
    "text": "does that then I've got three copies of everything and I have an ear will be at the front at the top of this diagram",
    "start": "847730",
    "end": "853910"
  },
  {
    "text": "which is sending traffic into that so multiple load balancers so there's a",
    "start": "853910",
    "end": "858950"
  },
  {
    "text": "front-end for each of the different api's and web sites and things like that so we have multiple al bees connecting",
    "start": "858950",
    "end": "865340"
  },
  {
    "text": "into this mesh of interconnected services these services of all stateless mostly stateless the one the ones that",
    "start": "865340",
    "end": "872690"
  },
  {
    "text": "have state are the memcache D and Cassandra so I sort of drawn them at the bottom of this and and that's where the",
    "start": "872690",
    "end": "877730"
  },
  {
    "text": "cross whose own replication mostly happens so if you write data into one zone you also want to make sure that",
    "start": "877730",
    "end": "883970"
  },
  {
    "text": "data is copied to the other two zones because the next request could go to that zone and want to see a copy of that",
    "start": "883970",
    "end": "889430"
  },
  {
    "text": "data so we have a layer that called evey cache which runs over the top of memcache D that basically does that",
    "start": "889430",
    "end": "896090"
  },
  {
    "text": "cross zone replication and you know it Bros reads from the local zone and writes to all three it's just a",
    "start": "896090",
    "end": "901250"
  },
  {
    "text": "client-side layer wrapper and it sits on top of memcache D and then Cassandra",
    "start": "901250",
    "end": "906650"
  },
  {
    "text": "does the replication for us if you want something durable memcache D we don't really guarantee any particular",
    "start": "906650",
    "end": "911720"
  },
  {
    "text": "consistency or availability but we have the Cassandra layer for stuff that actually matters so things like session",
    "start": "911720",
    "end": "918950"
  },
  {
    "text": "states are typically in memcache D things like your personal preferences about things would be in Cassandra",
    "start": "918950",
    "end": "924720"
  },
  {
    "start": "924000",
    "end": "1046000"
  },
  {
    "text": "so KFC gorilla is another tool we've built this shuts down an entire zone to",
    "start": "924720",
    "end": "930760"
  },
  {
    "text": "basically test to make sure everything works the response to to anything that takes out a whole zone or a large chunk",
    "start": "930760",
    "end": "936730"
  },
  {
    "text": "of a zone is to turn off the traffic to that zone okay so we've just got this extra little yeah shut down there and",
    "start": "936730",
    "end": "944680"
  },
  {
    "text": "then we continue to run on two zones and in several of the recent outages that have happened we've just run on two",
    "start": "944680",
    "end": "950830"
  },
  {
    "text": "zones for a few days and then when everything sort of calmed down we just turned back on the news that the other zone",
    "start": "950830",
    "end": "955990"
  },
  {
    "text": "the other thing chaos gorillas can do is move zones so for example sometimes one",
    "start": "955990",
    "end": "961930"
  },
  {
    "text": "of the zones gets too full there's too many customers going into it and we're fairly big customers so we will look we need some Headroom and",
    "start": "961930",
    "end": "968470"
  },
  {
    "text": "Amazon says could you just move all of your stuff from micro zone 8 as only because we've built this new zone and",
    "start": "968470",
    "end": "973720"
  },
  {
    "text": "it's got lots of new stuff in it so we actually one of the things we do with chaos gorillas it programmatically systematically takes everything in a",
    "start": "973720",
    "end": "980470"
  },
  {
    "text": "zone and moves it to another zone we did it by hand a few times and it's soap error-prone and we almost took the site",
    "start": "980470",
    "end": "986410"
  },
  {
    "text": "down because by pushing the wrong button so the automation here is really important so next thing we have",
    "start": "986410",
    "end": "995500"
  },
  {
    "text": "persistence at the bottom that's triple replicated so all my data is in three different zones it's in three different",
    "start": "995500",
    "end": "1001350"
  },
  {
    "text": "buildings effectively they're a millisecond apart a few miles apart pretty hard to take them all out at once",
    "start": "1001350",
    "end": "1007770"
  },
  {
    "text": "and however if I'm doing maintenance on Cassandra like I want to upgrade the",
    "start": "1007770",
    "end": "1014400"
  },
  {
    "text": "version of Cassandra I pick one Cassandra instance which has one of those triple replicas and I take it out",
    "start": "1014400",
    "end": "1020760"
  },
  {
    "text": "of service so that I can do a software update or something like that so I'm just taking one node out of my large",
    "start": "1020760",
    "end": "1026100"
  },
  {
    "text": "Cassandra cluster out of service so that means that that local zone if it wants that particular replica of the data it's",
    "start": "1026100",
    "end": "1033060"
  },
  {
    "text": "no longer there so it's pretty straightforward you just go get the data from another zone so our Cassandra tier",
    "start": "1033060",
    "end": "1039780"
  },
  {
    "text": "is is you know typically the one that goes cross zone more often than the regular services now when we went to",
    "start": "1039780",
    "end": "1048180"
  },
  {
    "start": "1046000",
    "end": "1164000"
  },
  {
    "text": "Europe we decided that we were going to eventually do you know more and more of Europe so we wanted to create our own",
    "start": "1048180",
    "end": "1053610"
  },
  {
    "text": "standalone interest there it also gets busy at a different time of the day to the US so we wanted",
    "start": "1053610",
    "end": "1058630"
  },
  {
    "text": "to try and order scale it separately and it's a it's a smaller system that we could scale up so we decided to deploy",
    "start": "1058630",
    "end": "1064870"
  },
  {
    "text": "an entire copy of our infrastructure into Europe and that was quite a lot of engineering work to do that you can talk",
    "start": "1064870",
    "end": "1071770"
  },
  {
    "text": "to Ruslan here about how how that went he was he led that overall project for getting everything coordinated to do",
    "start": "1071770",
    "end": "1077530"
  },
  {
    "text": "that but we brought up Cassandra with three more copies of the data for some of our databases sort of membership",
    "start": "1077530",
    "end": "1083770"
  },
  {
    "text": "databases things like that the really right intense databases we don't typically replicate but they're",
    "start": "1083770",
    "end": "1090190"
  },
  {
    "text": "storing things like logging information that you don't need to replicate and then we have this link between them that",
    "start": "1090190",
    "end": "1097570"
  },
  {
    "text": "basically keeps the two sides consistent but it does it asynchronously so it's maybe a few hundred milliseconds",
    "start": "1097570",
    "end": "1103360"
  },
  {
    "text": "propagation delay before your the thing you changed in the u.s. turns up in the in Europe and that we kept that works",
    "start": "1103360",
    "end": "1109690"
  },
  {
    "text": "fairly well for us so one of the things that can go wrong there is that the connection this is over the public Internet just with the you know TLS type",
    "start": "1109690",
    "end": "1116800"
  },
  {
    "text": "of protection it's secure it's a secure link but it's over the public network this is you could lose the connection",
    "start": "1116800",
    "end": "1123850"
  },
  {
    "text": "but when that comes back cassandra automatically just connects everything",
    "start": "1123850",
    "end": "1129010"
  },
  {
    "text": "backup resyncs and whoever wrote last wins so that's how everything stays in sync and it's very automated you don't",
    "start": "1129010",
    "end": "1135220"
  },
  {
    "text": "have to do much manual work on this if you lose an entire region for some",
    "start": "1135220",
    "end": "1140650"
  },
  {
    "text": "reason the other region just keeps running so any time that we've had you know we finally put a bug in and we",
    "start": "1140650",
    "end": "1147100"
  },
  {
    "text": "broke dns or something like that and we lost everything that could go to that region the other side still coming up",
    "start": "1147100",
    "end": "1152110"
  },
  {
    "text": "and the biggest cause of region outages i think is actually getting somebody typing the wrong thing into a dns",
    "start": "1152110",
    "end": "1157300"
  },
  {
    "text": "conflict it's not that the site went down or the longview lost power it's you know one of those central things like",
    "start": "1157300",
    "end": "1163330"
  },
  {
    "text": "dns so just to go through those failure modes application failure is the most",
    "start": "1163330",
    "end": "1169420"
  },
  {
    "start": "1164000",
    "end": "1327000"
  },
  {
    "text": "likely thing to happen we've got an automatic degraded response built in I'll talk more about that later region",
    "start": "1169420",
    "end": "1177010"
  },
  {
    "text": "failure is pretty unlikely to happen and when it does with it tends to be short",
    "start": "1177010",
    "end": "1182770"
  },
  {
    "text": "duration and we found that waiting for the region to recover is our current strategy for dealing that zone failure we we basically treat",
    "start": "1182770",
    "end": "1191890"
  },
  {
    "text": "that as something that we are going to happen occasionally and you can roll up all different kinds of failures into his",
    "start": "1191890",
    "end": "1197980"
  },
  {
    "text": "own failure and just put a box around it and say if anything goes wrong in this zone I don't care what's gone wrong I'm just going to shut it down run on two",
    "start": "1197980",
    "end": "1204070"
  },
  {
    "text": "more zones so we have a good strategy for that our data centers also caused a bunch of failures connections to it you",
    "start": "1204070",
    "end": "1211299"
  },
  {
    "text": "know oracle dying and things like that so we still have those systems in the backend and we still connect to them for",
    "start": "1211299",
    "end": "1217480"
  },
  {
    "text": "a few things but what we've done is over time reduce the dependencies into our data center and we've got more and more",
    "start": "1217480",
    "end": "1223179"
  },
  {
    "text": "available as we've become less dependent on sort of the single source of failure type systems in the data center and the",
    "start": "1223179",
    "end": "1229720"
  },
  {
    "text": "connectivity to the data center it turns out it's much easier to build a highly variable architecture on a multi on a",
    "start": "1229720",
    "end": "1235840"
  },
  {
    "text": "widely replicated cloud platform than to actually do that in a data center and we've got my failover and systems in the",
    "start": "1235840",
    "end": "1241840"
  },
  {
    "text": "data center but it's not really a 24 by 7 kind of environment data store failure",
    "start": "1241840",
    "end": "1248409"
  },
  {
    "text": "what I mean by that is that we ship you know we'd say let's say we do a buggy version of Cassandra for some reason and",
    "start": "1248409",
    "end": "1253840"
  },
  {
    "text": "it starts corrupting data haven't actually had that in production but you know you have to guard against the things that might happen and or you",
    "start": "1253840",
    "end": "1261250"
  },
  {
    "text": "could somebody just accidentally deletes a key space whoops yeah it would be nice to have that stuff so we do backups",
    "start": "1261250",
    "end": "1268120"
  },
  {
    "text": "continuously into s3 we do a daily snapshot and we do a incremental backup",
    "start": "1268120",
    "end": "1274240"
  },
  {
    "text": "so anything that's written into Cassandra within you know 10 minutes or a few minutes is there's a copy of it in",
    "start": "1274240",
    "end": "1279370"
  },
  {
    "text": "s3 if s 3 fails which is unlikely or you",
    "start": "1279370",
    "end": "1285549"
  },
  {
    "text": "know we get some account level compromised type problem we actually have a copy of the data on a different",
    "start": "1285549",
    "end": "1290740"
  },
  {
    "text": "s3 account so a different Amazon account right in a different region so we copy",
    "start": "1290740",
    "end": "1295840"
  },
  {
    "text": "all our eastcoast data for the west coast and put it in a different Amazon account where nobody else knows the password different keys and you can only",
    "start": "1295840",
    "end": "1302380"
  },
  {
    "text": "write to it and it's version so you can't overwrite it and it has that policy set up to automatically expire",
    "start": "1302380",
    "end": "1308260"
  },
  {
    "text": "the data after 90 days or whatever we felt like so we have a remote archive and then of course well if s3 fails well",
    "start": "1308260",
    "end": "1314740"
  },
  {
    "text": "there's other cloud vendors providing s3 alternatives some of them quite cheaply increasingly cheaply over",
    "start": "1314740",
    "end": "1321809"
  },
  {
    "text": "recent days that you can store an additional copy in so application code",
    "start": "1321809",
    "end": "1329400"
  },
  {
    "start": "1327000",
    "end": "1336000"
  },
  {
    "text": "fails you want to be able to deal with it so you want to run what you wrote you want rapid detection and rapid response",
    "start": "1329400",
    "end": "1336200"
  },
  {
    "start": "1336000",
    "end": "1435000"
  },
  {
    "text": "so run what you wrote means that developers are responsible for failures they learn they write code that doesn't",
    "start": "1336200",
    "end": "1342539"
  },
  {
    "text": "fail they are encore that there's a page of duty rotor with the developers that",
    "start": "1342539",
    "end": "1347880"
  },
  {
    "text": "deployed the code in it and the escalation path goes to their management and on the way up so you know if you",
    "start": "1347880",
    "end": "1353789"
  },
  {
    "text": "don't answer the call your manager probably gets the next call or at least a co-worker does use incident reviews to",
    "start": "1353789",
    "end": "1361409"
  },
  {
    "text": "find gaps to fix rather than assign blame and then there's a few other things that just you helpful hints like",
    "start": "1361409",
    "end": "1366960"
  },
  {
    "text": "keeping timeouts as short as possible failing fast if something doesn't work and retrying it it's probably not still",
    "start": "1366960",
    "end": "1373140"
  },
  {
    "text": "not going to work and waiting longer for it to work is probably still not going to work so particularly for connection timeouts don't keep connecting to the",
    "start": "1373140",
    "end": "1379530"
  },
  {
    "text": "same thing and assuming it's like one of those you know definitions of insanity you get the same a thing over and over again you're expecting a different",
    "start": "1379530",
    "end": "1385530"
  },
  {
    "text": "outcome just connect somewhere else and try again and then give up and propagate the failure up the system and then we have",
    "start": "1385530",
    "end": "1393090"
  },
  {
    "text": "this dynamic configuration option see once we have to tweak timeout retries properties for turning features on and",
    "start": "1393090",
    "end": "1399390"
  },
  {
    "text": "off you want to do all that in real time you don't want to have to do it by pushing code or editing stuff or logging",
    "start": "1399390",
    "end": "1406650"
  },
  {
    "text": "into a box so we have our caius is a a global property management system that is distributed globally and has scoping",
    "start": "1406650",
    "end": "1415080"
  },
  {
    "text": "rules so I can say change this property for every machine of this application service type in this zone or in this",
    "start": "1415080",
    "end": "1422909"
  },
  {
    "text": "region or just that one or globally or whatever right and the only thing the",
    "start": "1422909",
    "end": "1429360"
  },
  {
    "text": "feature we discover it needs is it needs to remember what all of what the previous version of everything was but we'll get to that another thing we",
    "start": "1429360",
    "end": "1437340"
  },
  {
    "start": "1435000",
    "end": "1552000"
  },
  {
    "text": "announced a few days ago is the historic circuit-breaker design so this is a pattern where you're a developer you",
    "start": "1437340",
    "end": "1444299"
  },
  {
    "text": "import all of these jar files that are like the the client libraries for all these other services but you don't",
    "start": "1444299",
    "end": "1450539"
  },
  {
    "text": "really trust them they might give you them wrong so they might timeout so instead of just calling the code you wrap it in a",
    "start": "1450539",
    "end": "1457659"
  },
  {
    "text": "circuit breaker and you call it in you fork off a separate thread to call this library and you sit and look at it",
    "start": "1457659",
    "end": "1463149"
  },
  {
    "text": "suspiciously and you tie me down and if it fails you call some workaround that",
    "start": "1463149",
    "end": "1468159"
  },
  {
    "text": "basically says I have a fallback position I maybe have a local cached copy to fall back to of something that's",
    "start": "1468159",
    "end": "1474220"
  },
  {
    "text": "maybe less good but it's still okay like we do progressively depersonalized the",
    "start": "1474220",
    "end": "1479799"
  },
  {
    "text": "website this way so instead of getting every possible best recommendation you could get we gradually fall back to a",
    "start": "1479799",
    "end": "1485440"
  },
  {
    "text": "non personalized site but if you call this thing two or three times and it breaks every time eventually you flip",
    "start": "1485440",
    "end": "1491590"
  },
  {
    "text": "the circuit breaker and say I'm just going to stop calling it at that point that that's what the circuit break up",
    "start": "1491590",
    "end": "1496630"
  },
  {
    "text": "happened does and then every now and again you call it again to see if it's recovered so that's the that's the basic",
    "start": "1496630",
    "end": "1502299"
  },
  {
    "text": "pattern and this is the flowchart for it which I won't go through lots of detail so if you're if you're using Java and",
    "start": "1502299",
    "end": "1508899"
  },
  {
    "text": "you think this is an interesting pattern the client libraries there there's a client so there's a user interface for",
    "start": "1508899",
    "end": "1515320"
  },
  {
    "text": "monitoring this with a one-second update so you can see in real time which circuit breakers are set which ones are",
    "start": "1515320",
    "end": "1520720"
  },
  {
    "text": "clear and that way when you push code and you break something you can see in a few seconds that it broke and then when",
    "start": "1520720",
    "end": "1527649"
  },
  {
    "text": "you fix it by making a change or switching the code back you can see that it fixed in a few seconds so that's the",
    "start": "1527649",
    "end": "1533620"
  },
  {
    "text": "key thing here we've built this for our API we're now deploying this across many more of our services very powerful that",
    "start": "1533620",
    "end": "1540820"
  },
  {
    "text": "the UI part is coming soon it's not quite there to the open source of thing",
    "start": "1540820",
    "end": "1545980"
  },
  {
    "text": "chaos monkey there's a talk at the end of today about this so I'll go over it really quickly everything's gonna",
    "start": "1545980",
    "end": "1552220"
  },
  {
    "start": "1552000",
    "end": "1570000"
  },
  {
    "text": "randomly die so you should help it on its way to make sure your error code handling path works properly that's",
    "start": "1552220",
    "end": "1557380"
  },
  {
    "text": "basically the idea and we have latency monkey because just dying is a to clean at a failure you want to be able to",
    "start": "1557380",
    "end": "1563470"
  },
  {
    "text": "inject Byzantine error rates and error codes and occasionally be really slow and things like that another tool we",
    "start": "1563470",
    "end": "1572080"
  },
  {
    "start": "1570000",
    "end": "1744000"
  },
  {
    "text": "have is a configuration history tool which is called EDA editor is something like the stories of the Norse gods or",
    "start": "1572080",
    "end": "1578260"
  },
  {
    "text": "something and Asgard is is the same team that did Asgard and all of their stuff is based on Norse gods for some reason",
    "start": "1578260",
    "end": "1584619"
  },
  {
    "text": "it used internally it was it was called the entry points so some some of my previous presentations your find entry",
    "start": "1584619",
    "end": "1591379"
  },
  {
    "text": "points mentioned so this is now out there it's open source it's a a database",
    "start": "1591379",
    "end": "1597379"
  },
  {
    "text": "which collects the state of your universe in the cloud is like it basically continuously scrapes all those",
    "start": "1597379",
    "end": "1602539"
  },
  {
    "text": "describe calls that describe instance describe ASG describe the IP all of those things pulls all that data and",
    "start": "1602539",
    "end": "1608690"
  },
  {
    "text": "just logs it as the JSON object that came back from Amazon is put into a MongoDB database because that's what",
    "start": "1608690",
    "end": "1615169"
  },
  {
    "text": "MongoDB is really good for and then it's cross-indexed so now you don't have to",
    "start": "1615169",
    "end": "1620209"
  },
  {
    "text": "say oh because somebody says hey what's the IP address I've got an IP address which machine was that currently you",
    "start": "1620209",
    "end": "1626059"
  },
  {
    "text": "have to go and scan everything you've got and when you've got 10,000 machines it takes too long so with this it's a",
    "start": "1626059",
    "end": "1631819"
  },
  {
    "text": "query lookup it's an index type index field in these objects so that's the Amazon instances feeding in but we also",
    "start": "1631819",
    "end": "1638029"
  },
  {
    "text": "have our own Eureka which is our service registry that's collecting all the",
    "start": "1638029",
    "end": "1643339"
  },
  {
    "text": "information about our entities like this isn't just an incidence it's an instance of our API front-end and this is a",
    "start": "1643339",
    "end": "1648949"
  },
  {
    "text": "middle tier personalization server and here's a similar service so now we know all of those and when they could push",
    "start": "1648949",
    "end": "1654829"
  },
  {
    "text": "code and what version they're on and all those kinds of things because they all have descriptions as well so we pulled",
    "start": "1654829",
    "end": "1660619"
  },
  {
    "text": "that metadata out of Eureka and we store that in edit as well and then app",
    "start": "1660619",
    "end": "1666529"
  },
  {
    "text": "dynamics which is how I was drawing those little diagrams early that showed everything calling everything that",
    "start": "1666529",
    "end": "1671809"
  },
  {
    "text": "collectors the request flow through our system and they have an API and they have objects on objects so we start",
    "start": "1671809",
    "end": "1677509"
  },
  {
    "text": "collecting that now you can form queries that says who was calling what and what's going on so that all sounds cool",
    "start": "1677509",
    "end": "1684829"
  },
  {
    "text": "and it's a very useful talk but there's one extra thing that that makes this really clever which is that it doesn't",
    "start": "1684829",
    "end": "1690799"
  },
  {
    "text": "just tell you what's going on now it remembers the complete history of the state this is a really sort of very",
    "start": "1690799",
    "end": "1699199"
  },
  {
    "text": "fundamental thing it means I can say exactly what was the entire state of my machine at any point in in the history",
    "start": "1699199",
    "end": "1705139"
  },
  {
    "text": "what was the state of my infrastructure you can't do that in data centers there's no way you could say exactly",
    "start": "1705139",
    "end": "1710179"
  },
  {
    "text": "what was the state of my data center you know four weeks ago on Thursday night you maybe know where a few things are",
    "start": "1710179",
    "end": "1715970"
  },
  {
    "text": "that there's nothing there here I can do a query know exactly what was there so and this is what the monkeys run against",
    "start": "1715970",
    "end": "1722720"
  },
  {
    "text": "most of the monkeys that we've built our queries against this database that do things like well here's a you know",
    "start": "1722720",
    "end": "1729800"
  },
  {
    "text": "here's something that hasn't been used for a week I can clean it up so the janitor monkey for example does cleanups by using the time-based part of this if",
    "start": "1729800",
    "end": "1736640"
  },
  {
    "text": "you want if you want to hear about all the monkeys it's the like four o'clock today I think so here's a couple of",
    "start": "1736640",
    "end": "1742910"
  },
  {
    "text": "query examples it's a rest-based user interface with a query syntax so the first one basically",
    "start": "1742910",
    "end": "1749030"
  },
  {
    "text": "says hey who's had this public IP address since the beginning of time and it gives you a list of instances that's",
    "start": "1749030",
    "end": "1754880"
  },
  {
    "text": "a hold JSON nest right so who changed this security group and what was the",
    "start": "1754880",
    "end": "1760460"
  },
  {
    "text": "last change to it okay so I'm eliminated a bunch of stuff but it basically gives",
    "start": "1760460",
    "end": "1765470"
  },
  {
    "text": "you this diff syntax on the IP ranges of a security group okay so now I'm being",
    "start": "1765470",
    "end": "1770900"
  },
  {
    "text": "able to debug my infrastructure so in terms of trying to keep everything up and running because I now know the full",
    "start": "1770900",
    "end": "1776270"
  },
  {
    "text": "state of it you can go do that as I gave a talk a few weeks ago to a group and saw one of the guys here and",
    "start": "1776270",
    "end": "1782510"
  },
  {
    "text": "he said you were already up and running with this thing and you can its pluggable you can add your own data sources to it so if you have",
    "start": "1782510",
    "end": "1788570"
  },
  {
    "text": "infrastructure or some other data source write the code contribute it and well",
    "start": "1788570",
    "end": "1794150"
  },
  {
    "text": "add more data sources to this so this has only been out for a few weeks I think it's a really interesting service",
    "start": "1794150",
    "end": "1799210"
  },
  {
    "text": "it's written in Scala so it runs on runs on a tomcat server like all of our other",
    "start": "1799210",
    "end": "1804260"
  },
  {
    "text": "stuff but yeah we for some reason we the engineer decided he wanted to write it in Scala instead of the Java okay so we",
    "start": "1804260",
    "end": "1812540"
  },
  {
    "start": "1810000",
    "end": "1870000"
  },
  {
    "text": "have this distributed operational model there was a talk a little bit earlier today about this from Jeremy Edberg",
    "start": "1812540",
    "end": "1817880"
  },
  {
    "text": "where developers are provisioning and running their own code in production they're on call they're on page of duty",
    "start": "1817880",
    "end": "1824120"
  },
  {
    "text": "and the use auto scale is because the peak traffic for us is about 7:00 p.m. on a Sunday night that's when all of you",
    "start": "1824120",
    "end": "1830600"
  },
  {
    "text": "are watching movies or you're all your kids are watching movies and that's when we're trying to sit down have dinner or",
    "start": "1830600",
    "end": "1836300"
  },
  {
    "text": "watch a movie right we don't want to be sitting there going oh we need four new machines here so the",
    "start": "1836300",
    "end": "1842050"
  },
  {
    "text": "order scalars take care of these Peaks and it runs out on autopilot through the weekend and it just scales up to whatever it needs to be at and then",
    "start": "1842050",
    "end": "1851140"
  },
  {
    "text": "we're sort of our DevOps approaches the DevOps teams are building the tooling to run this service rather than actually",
    "start": "1851140",
    "end": "1858040"
  },
  {
    "text": "touching it themselves you're building automation you're constraining the developers to use your automation so",
    "start": "1858040",
    "end": "1864460"
  },
  {
    "text": "you've got more responsibility on developers but they have a lot of tooling so if they're not getting buried in that we do rapid rollback so we push",
    "start": "1864460",
    "end": "1873460"
  },
  {
    "start": "1870000",
    "end": "1887000"
  },
  {
    "text": "code actually this was demoed this morning so if you saw the keynote you saw several examples of the red/black",
    "start": "1873460",
    "end": "1879610"
  },
  {
    "text": "deployment thing this is what Werner was talking about so I'll skip this time",
    "start": "1879610",
    "end": "1885160"
  },
  {
    "text": "alone feel short on time talk about some more things this is what the demo that you saw with the Amazon console this is",
    "start": "1885160",
    "end": "1891520"
  },
  {
    "start": "1887000",
    "end": "1913000"
  },
  {
    "text": "our version of that demo you click there you click there you're done it's much simpler there's no these like tick boxes",
    "start": "1891520",
    "end": "1897340"
  },
  {
    "text": "and lists of instances and this will work with 10,000 machines instead of having to do one instance at a time kind",
    "start": "1897340",
    "end": "1902440"
  },
  {
    "text": "of stuff so this is a much nicer way of doing the demo that Matt showed Matt showed you earlier today so just do",
    "start": "1902440",
    "end": "1910720"
  },
  {
    "text": "version versioning on aSG's so I'm gonna now talk about different kinds of",
    "start": "1910720",
    "end": "1916150"
  },
  {
    "start": "1913000",
    "end": "2081000"
  },
  {
    "text": "outages and give them names so that we can start talking about oh this was that",
    "start": "1916150",
    "end": "1921340"
  },
  {
    "text": "kind of hours this was this kind of outage I'm covered for them I'm not covered for them those kinds of things so these are the main failure modes that",
    "start": "1921340",
    "end": "1928240"
  },
  {
    "text": "a zone has I'm talking I've been talking about the code level problems that we have and how we address those now I'm",
    "start": "1928240",
    "end": "1934420"
  },
  {
    "text": "going one level lower below to the platform level so let's say a zone fails",
    "start": "1934420",
    "end": "1939460"
  },
  {
    "text": "for some reason power outage okay that's a nice clean easy one those instances are now off any state they had is now",
    "start": "1939460",
    "end": "1946360"
  },
  {
    "text": "gone when it comes back up they may be still there or but you probably just",
    "start": "1946360",
    "end": "1951670"
  },
  {
    "text": "delete them and start again right so that's a much easier but it's actually it kind of sounds bad but it's actually",
    "start": "1951670",
    "end": "1957580"
  },
  {
    "text": "the easiest kind of outage to deal with cause it's a very clean outage when you try and route traffic to a machine that",
    "start": "1957580",
    "end": "1963100"
  },
  {
    "text": "is down you get no route to host all right posts isn't there anymore so you",
    "start": "1963100",
    "end": "1968679"
  },
  {
    "text": "get a you get a fast fail it's a clean break a fast fail and it's relatively easy to recover from because",
    "start": "1968679",
    "end": "1975250"
  },
  {
    "text": "you just you know pile them back up again and you're back again right so the",
    "start": "1975250",
    "end": "1980950"
  },
  {
    "text": "next kind of outage is a network outage where the weather route into the system goes so let's say all the perimeters for",
    "start": "1980950",
    "end": "1987130"
  },
  {
    "text": "this particular zone are no longer working but the machines inside are",
    "start": "1987130",
    "end": "1992350"
  },
  {
    "text": "still working they're still running they're still talking to each other going up why isn't anyone talking to us they saw in their cron jobs are running",
    "start": "1992350",
    "end": "1998620"
  },
  {
    "text": "things like that are happening and but it doesn't tend to happen like that it tends to happen kind of like this",
    "start": "1998620",
    "end": "2005360"
  },
  {
    "text": "randomly flickers on and off so you get odd things of happening and it's hard to",
    "start": "2005360",
    "end": "2010590"
  },
  {
    "text": "deal with and when something is and when you get a network outage like this quite often there is still a route to that",
    "start": "2010590",
    "end": "2016650"
  },
  {
    "text": "host it's just not responding it's a packets are being dropped so you tend to get long time out so it's very",
    "start": "2016650",
    "end": "2023010"
  },
  {
    "text": "different to a power outage where you maybe get just no route to hosts in a fast fail this is a slow fail you backup all your",
    "start": "2023010",
    "end": "2029340"
  },
  {
    "text": "threads clogged up and the system will sort of grind to a halt and then it flickers on and off so it's hard to tell",
    "start": "2029340",
    "end": "2034679"
  },
  {
    "text": "quite what's going on so it's much harder after that type of outage to deal with finally you get these what I call a",
    "start": "2034679",
    "end": "2042360"
  },
  {
    "text": "zone dependent service outage this is the sort of EBS EO b sqs s3 something",
    "start": "2042360",
    "end": "2048480"
  },
  {
    "text": "like that is broken or maybe one of your own internal services like our discovery service or something like that or a",
    "start": "2048480",
    "end": "2054570"
  },
  {
    "text": "zookeeper server is down in that region in that zone sorry and what happens is",
    "start": "2054570",
    "end": "2059850"
  },
  {
    "text": "that outage rippled through into the rest of the system in a fairly complex way which tends to be very hard to debug",
    "start": "2059850",
    "end": "2065340"
  },
  {
    "text": "it's not immediately obvious what's going on there we go so this is just a",
    "start": "2065340",
    "end": "2074730"
  },
  {
    "text": "summary of those types of outages for people that are reading this slide decks rather than listening to me so let's",
    "start": "2074730",
    "end": "2082050"
  },
  {
    "start": "2081000",
    "end": "2183000"
  },
  {
    "text": "look at regional failure modes sort of going up one level one is a regional",
    "start": "2082050",
    "end": "2087600"
  },
  {
    "text": "network outages this is kind of the DNS failure if like all of your traffic into a zone is though is like Netflix comm or",
    "start": "2087600",
    "end": "2094378"
  },
  {
    "text": "something and somebody manages to mess that up then you cannot get there so that's or they you know or the",
    "start": "2094379",
    "end": "2102420"
  },
  {
    "text": "routing is broken there times where there was a black hole routes where no outbound traffic could get out of his own get out of the entire",
    "start": "2102420",
    "end": "2108740"
  },
  {
    "text": "region for a short while so those are the kinds of outages that take everything out the other kind of outage",
    "start": "2108740",
    "end": "2115910"
  },
  {
    "text": "is control plane overload this is the one of the more complex ones so in this case because of an outage capper outage",
    "start": "2115910",
    "end": "2123470"
  },
  {
    "text": "then the systems are trying to recover from that but there's now a lot more activity and it overloads the ability to",
    "start": "2123470",
    "end": "2130070"
  },
  {
    "text": "control that service in that zone and that and that inability to control that",
    "start": "2130070",
    "end": "2136280"
  },
  {
    "text": "service spreads through the control plane and starts affecting other zones so this is a regional outage which is",
    "start": "2136280",
    "end": "2142130"
  },
  {
    "text": "really because of a local outage that is propagated with a kind of a cascading failure so typically what happens is",
    "start": "2142130",
    "end": "2148640"
  },
  {
    "text": "after a little while it catches up with itself and the multi region part multi the multi zone part of the outage goes",
    "start": "2148640",
    "end": "2155330"
  },
  {
    "text": "away so we've seen this a number of times where where you know that there's",
    "start": "2155330",
    "end": "2160730"
  },
  {
    "text": "a power outage or something and it spreads across the regions for a little while and then gets back and now it's",
    "start": "2160730",
    "end": "2166160"
  },
  {
    "text": "kind of working okay but you've still got the original outage there but it's no longer a regional one and then when",
    "start": "2166160",
    "end": "2172490"
  },
  {
    "text": "you clear that everything gets better right so these are much more complex to diagnose and I'll talk a bit later about",
    "start": "2172490",
    "end": "2179680"
  },
  {
    "text": "what's been done to fix these so that's just to summarize that and then global",
    "start": "2179680",
    "end": "2187040"
  },
  {
    "start": "2183000",
    "end": "2212000"
  },
  {
    "text": "failure modes this is generally self-inflicted it's pretty hard to actually break the global cloud but we",
    "start": "2187040",
    "end": "2193850"
  },
  {
    "text": "do this with like global property changes that go wrong with or bugs or",
    "start": "2193850",
    "end": "2200150"
  },
  {
    "text": "memory leaks we deploy everything or more famously time-related things like",
    "start": "2200150",
    "end": "2207110"
  },
  {
    "text": "leap seconds and leap leap years tend to have this outage like a bit more later",
    "start": "2207110",
    "end": "2212590"
  },
  {
    "start": "2212000",
    "end": "2276000"
  },
  {
    "text": "so then finally if you have this great",
    "start": "2212590",
    "end": "2218420"
  },
  {
    "text": "idea that when you lose a zone you're going to send all your traffic to the other zone but that zone doesn't actually have enough machines running in",
    "start": "2218420",
    "end": "2224600"
  },
  {
    "text": "it to take that traffic because you were running pretty hot and you didn't order scale up fast then that one goes down",
    "start": "2224600",
    "end": "2230000"
  },
  {
    "text": "too and now you know you this and then someone thought it was a",
    "start": "2230000",
    "end": "2235370"
  },
  {
    "text": "really good idea that if the US is down you should send all the traffic somewhere else because that global failure would be better and it would be",
    "start": "2235370",
    "end": "2241220"
  },
  {
    "text": "a really good idea so then you do this and then you have nothing left and everything's down and that was turns out",
    "start": "2241220",
    "end": "2248240"
  },
  {
    "text": "that was a really bad idea so my grading demand across regions is something you have to do extremely",
    "start": "2248240",
    "end": "2253880"
  },
  {
    "text": "carefully we're actually looking into the ability to do across regional failover but we're going to be very",
    "start": "2253880",
    "end": "2259760"
  },
  {
    "text": "careful to watch out for this kind of scenario and we may get it wrong a few times but this is you know it isn't as",
    "start": "2259760",
    "end": "2265910"
  },
  {
    "text": "simple as saying I'll just send more traffic over there you've got to make sure you can handle it when it gets there okay so let's look at some actual",
    "start": "2265910",
    "end": "2275030"
  },
  {
    "text": "outages here's some global software bug outages - looking at the global level",
    "start": "2275030",
    "end": "2281090"
  },
  {
    "start": "2276000",
    "end": "2442000"
  },
  {
    "text": "yeah s3 had an outage in o8 they fixed it they haven't had an outage since but again this was a pro gossip Protocol",
    "start": "2281090",
    "end": "2287840"
  },
  {
    "text": "problem like a metadata problem that propagated globally Azur had a leap day",
    "start": "2287840",
    "end": "2293030"
  },
  {
    "text": "outage this year where they were making certificates that lasted for a year so",
    "start": "2293030",
    "end": "2299390"
  },
  {
    "text": "they wanted the end date of the certificate to be one year in the future so they tried to make certificates that",
    "start": "2299390",
    "end": "2305420"
  },
  {
    "text": "were valid until the 29th of February 2013 and that date doesn't exist because",
    "start": "2305420",
    "end": "2311030"
  },
  {
    "text": "it's not a leap year so if it failed and then they because they had no certificates their entire system globally sort of collapsed because they",
    "start": "2311030",
    "end": "2318110"
  },
  {
    "text": "could no longer talk from between different parts of their system so that's a one-line code book right it was",
    "start": "2318110",
    "end": "2324170"
  },
  {
    "text": "a one-line fix and so how many one line code bugs do you have like that you know most probably in your code and in",
    "start": "2324170",
    "end": "2329840"
  },
  {
    "text": "everywhere else so no not to point the finger at them particularly because there are probably other instances of",
    "start": "2329840",
    "end": "2335960"
  },
  {
    "text": "this lying around it's a really good example on this configuration error that we had this year somebody updated",
    "start": "2335960",
    "end": "2342710"
  },
  {
    "text": "something which globally broke Netflix and and then after about an hour we figured out what was going wrong and",
    "start": "2342710",
    "end": "2349070"
  },
  {
    "text": "switched it back and then we fixed it and what we learned from that was that we want to keep all of these global",
    "start": "2349070",
    "end": "2354500"
  },
  {
    "text": "properties we keep the history of those properties so we should store them in edit and we weren't currently doing that so that's a kind of a future enhancement",
    "start": "2354500",
    "end": "2360890"
  },
  {
    "text": "so then I can go back look at the history of every global property that we've ever had",
    "start": "2360890",
    "end": "2366220"
  },
  {
    "text": "looking at regional control plane over hood overload there was this EBS outage in April of last year and this was human",
    "start": "2366910",
    "end": "2375460"
  },
  {
    "text": "error cascading failures the usual kind of things the impact on Netflix was that",
    "start": "2375460",
    "end": "2381610"
  },
  {
    "text": "all of the instances in one zone basically started to hang and we couldn't launch replacements because we",
    "start": "2381610",
    "end": "2386740"
  },
  {
    "text": "use an EBS back to route this but it didn't affect the data integrity and we have a few my sequel but master slaves",
    "start": "2386740",
    "end": "2392530"
  },
  {
    "text": "and we actually lost some of our slaves but the masters were ok because it happened to hit the right zone from us",
    "start": "2392530",
    "end": "2398020"
  },
  {
    "text": "to just hit the slave so it wasn't too much of a deal and my sequel stuff is generally not customer-facing it's or",
    "start": "2398020",
    "end": "2404440"
  },
  {
    "text": "it's optional functionality so this was slightly higher errors slightly higher",
    "start": "2404440",
    "end": "2409600"
  },
  {
    "text": "latency no big deal I could tweet hey Netflix is still up I think this was",
    "start": "2409600",
    "end": "2415800"
  },
  {
    "text": "maybe this was when there was a case where Jeremy was still at reddit and he was sitting at reddit complaining about",
    "start": "2415800",
    "end": "2421480"
  },
  {
    "text": "the fact that reddit was down and watching Netflix movies and so that's kind of we need to stay up so that when",
    "start": "2421480",
    "end": "2426550"
  },
  {
    "text": "everyone else is down they've got something to do it's very important we",
    "start": "2426550",
    "end": "2432430"
  },
  {
    "text": "have to stay up during Hurricane sandy so that your kids don't drive you crazy while they're at home from because the schools are shut those kinds of things a",
    "start": "2432430",
    "end": "2439530"
  },
  {
    "text": "regional network fairly a Google App Engine had one of these a few months ago which was a network router that",
    "start": "2439530",
    "end": "2445840"
  },
  {
    "start": "2442000",
    "end": "2468000"
  },
  {
    "text": "overloaded NIT cascaded and it just kept cascading and it basically shut down while traffic it through their system or",
    "start": "2445840",
    "end": "2450880"
  },
  {
    "text": "it had about a 50 percent error rate for a few hours you know the workaround for that is just be really careful about having enough",
    "start": "2450880",
    "end": "2456820"
  },
  {
    "text": "capacity and particularly when you're performing maintenance operations me as previous outage was actually a",
    "start": "2456820",
    "end": "2462010"
  },
  {
    "text": "maintenance operation that triggered it and if you're running infrastructure you know that's the most dangerous time more",
    "start": "2462010",
    "end": "2467620"
  },
  {
    "text": "automation helps his own power failures as the this June's big storm you know",
    "start": "2467620",
    "end": "2474160"
  },
  {
    "start": "2468000",
    "end": "2500000"
  },
  {
    "text": "they lost one data center for 7% of the u.s. East capacity it wasn't like US East went down it was 7% of it for 10",
    "start": "2474160",
    "end": "2481180"
  },
  {
    "text": "minutes I mean that was the actual outage with the trip the ripples out from that caused a bigger problem we",
    "start": "2481180",
    "end": "2487270"
  },
  {
    "text": "lost about 20 percent of traffic for a few hours so we weren't completely down but we had a partial outage and so it's",
    "start": "2487270",
    "end": "2494410"
  },
  {
    "text": "kind of you can say well we went down but it wasn't perfect right that it was a relatively small impact and I'll show you what actually",
    "start": "2494410",
    "end": "2500680"
  },
  {
    "start": "2500000",
    "end": "2505000"
  },
  {
    "text": "happened so there's the power outage now we have a yuriko's our service registry",
    "start": "2500680",
    "end": "2507760"
  },
  {
    "start": "2505000",
    "end": "2599000"
  },
  {
    "text": "and due to a bug in the way that was configured the service registry didn't mark down the bad instances that had",
    "start": "2507760",
    "end": "2514210"
  },
  {
    "text": "gone away it still listed them as available so every request that came in potentially could call us a machine that",
    "start": "2514210",
    "end": "2520180"
  },
  {
    "text": "was no longer there and it would just timeout and take a long time and there was a one-third chance that anything you",
    "start": "2520180",
    "end": "2525610"
  },
  {
    "text": "tried to call was broken and then what we also had was a bunch of applications in our in our infrastructure that",
    "start": "2525610",
    "end": "2532000"
  },
  {
    "text": "weren't using zone aware routing they were calling across all zones rather than calling inside their zone right and",
    "start": "2532000",
    "end": "2538600"
  },
  {
    "text": "this is shows the danger of doing that it makes you can kind of think well what if there aren't any left in my zone well",
    "start": "2538600",
    "end": "2543730"
  },
  {
    "text": "we have an algorithm that says if you can't find any then you call krauser that anyway and what we you know the fix",
    "start": "2543730",
    "end": "2550570"
  },
  {
    "text": "for this was pretty obvious we turned on zone aware routing as default it was available as an option but not everyone",
    "start": "2550570",
    "end": "2556750"
  },
  {
    "text": "had picked it up so we flipped that option around to make it the default going forwards you know did a bit of",
    "start": "2556750",
    "end": "2561880"
  },
  {
    "text": "debug and work for the people that weren't using it to make sure that was ok and we fixed the configuration in",
    "start": "2561880",
    "end": "2568450"
  },
  {
    "text": "eureka to make sure that it it didn't it kind of had a failsafe mode that got triggered says I'm not sure what's going",
    "start": "2568450",
    "end": "2574480"
  },
  {
    "text": "on the too much stuff has disappeared at once I don't want to just shut everything down which is actually a useful failsafe mode but you have to be",
    "start": "2574480",
    "end": "2581140"
  },
  {
    "text": "very careful how you trigger those and make sure you are aware that it's in that mode and it took us a while to figure that out all right and then some",
    "start": "2581140",
    "end": "2588910"
  },
  {
    "text": "dependent service failures again this is like going back to that big storm",
    "start": "2588910",
    "end": "2595180"
  },
  {
    "text": "EBS goes out the blocks door that takes out the ability to launch instances that takes out instances that are actually",
    "start": "2595180",
    "end": "2601870"
  },
  {
    "start": "2599000",
    "end": "2622000"
  },
  {
    "text": "part of the ELB service the load balancer service and now the load balancers impacted and now I can't",
    "start": "2601870",
    "end": "2607690"
  },
  {
    "text": "manage my load balancers and we can't we have and we have a network outage right so because we can't get the traffic",
    "start": "2607690",
    "end": "2613510"
  },
  {
    "text": "through and we can't manage that and AWS in their in their report talked about",
    "start": "2613510",
    "end": "2618520"
  },
  {
    "text": "what they were doing to fix that and and this is that this is a very useful pattern so what they've done is instead",
    "start": "2618520",
    "end": "2624220"
  },
  {
    "text": "of having one command queue for their control plane they now have a on cue per region but sorry per zone and",
    "start": "2624220",
    "end": "2631990"
  },
  {
    "text": "then they have a global one per region that is just about the routing so requests which are to change a turn on",
    "start": "2631990",
    "end": "2640270"
  },
  {
    "text": "and off individual zones now go to their own cue that Armada finding the DNS records at the top so that's that talk",
    "start": "2640270",
    "end": "2646480"
  },
  {
    "text": "one so now you can control traffic routing and there will never be an overload of traffic to that because the",
    "start": "2646480",
    "end": "2652150"
  },
  {
    "text": "instances aren't involved in sending commands to that and then in each zone they now have a separate queue and all",
    "start": "2652150",
    "end": "2658750"
  },
  {
    "text": "of the activity involved in trying to recover from an outage in one zone just builds up a queue of work to do in that",
    "start": "2658750",
    "end": "2665650"
  },
  {
    "text": "zone and all of the other zones that aren't affected have empty queues and",
    "start": "2665650",
    "end": "2670690"
  },
  {
    "text": "will take you know requests and you can manage them so think of this pattern when you're building your own systems",
    "start": "2670690",
    "end": "2675790"
  },
  {
    "text": "when you've got a distributed control system make sure you don't have a global command queue and you want to be able to",
    "start": "2675790",
    "end": "2681730"
  },
  {
    "text": "send commands to it but you want to have sub queues and you want to be very careful about the failure modes of that",
    "start": "2681730",
    "end": "2687040"
  },
  {
    "text": "so this is this kind of hardening is I think in place now they've been working over the last few months to implement",
    "start": "2687040",
    "end": "2692740"
  },
  {
    "text": "this for some various AWS services and it's described in their outage report so",
    "start": "2692740",
    "end": "2698170"
  },
  {
    "text": "yeah this is this is kind of one of the things about a device they learn from the problems they've had and they tend",
    "start": "2698170",
    "end": "2703570"
  },
  {
    "text": "to not recur and they figure out how to fix them and and they've been working through so it's it's becoming a much more resilient system as they learn all",
    "start": "2703570",
    "end": "2710950"
  },
  {
    "text": "of these kinds of failure modes all right I'm gonna skip through this",
    "start": "2710950",
    "end": "2716800"
  },
  {
    "text": "section pretty quickly because the there's a talk up next for",
    "start": "2716800",
    "end": "2723060"
  },
  {
    "text": "for Cassandra the from Rosland and Greg so this is what our service pattern",
    "start": "2723060",
    "end": "2728410"
  },
  {
    "start": "2725000",
    "end": "2765000"
  },
  {
    "text": "looks like for all of our rest plants talking to a rest data provider service in the middle there and then often the",
    "start": "2728410",
    "end": "2734619"
  },
  {
    "text": "top right you have a Cassandra cluster that is just serving one kind of data to one kind of consumer so we've fully",
    "start": "2734619",
    "end": "2741880"
  },
  {
    "text": "denormalized our data model we have 50 different clusters we're doing you know the biggest ones doing a chameleon reads",
    "start": "2741880",
    "end": "2748869"
  },
  {
    "text": "and writes a second something like that and then at the bottom this data center serve this this data provider service",
    "start": "2748869",
    "end": "2755680"
  },
  {
    "text": "can actually handle the replication into the data center or data from it maintaining that kind of",
    "start": "2755680",
    "end": "2761390"
  },
  {
    "text": "eventual consistency to your legacy systems that you typically have to do so",
    "start": "2761390",
    "end": "2766520"
  },
  {
    "start": "2765000",
    "end": "2778000"
  },
  {
    "text": "this is what micro services look like you're basically dropping code into a tomcat server this is our standard you",
    "start": "2766520",
    "end": "2773540"
  },
  {
    "text": "know instance it's a base ami we just we have a bakery it builds on this we have",
    "start": "2773540",
    "end": "2779390"
  },
  {
    "start": "2778000",
    "end": "2794000"
  },
  {
    "text": "a stone ax which is a Java client library which has a bunch of better resilience options for finding machines",
    "start": "2779390",
    "end": "2785450"
  },
  {
    "text": "that are avoiding machines that are slow and for retrying better having a better retry algorithm for assist for when",
    "start": "2785450",
    "end": "2792020"
  },
  {
    "text": "things go down this is what the code looks like I'll skip past this and then",
    "start": "2792020",
    "end": "2798340"
  },
  {
    "start": "2797000",
    "end": "2902000"
  },
  {
    "text": "this is what the Cassandra instances look like and I wanted to really make this clear we're using the internal",
    "start": "2798340",
    "end": "2804650"
  },
  {
    "text": "disks in these instances when we don't have attached data we're not using network attached data with Cassandra you're already using all the network",
    "start": "2804650",
    "end": "2811430"
  },
  {
    "text": "traffic just to get to the Cassandra instance you already have three copies of the data so you are using local",
    "start": "2811430",
    "end": "2816680"
  },
  {
    "text": "instant storage and that makes Cassandra incredibly cheap as a storage engine and the new mega machine that they just came",
    "start": "2816680",
    "end": "2823130"
  },
  {
    "text": "out with today with they aren't 48 terabytes of disk in one incident time we have to benchmark that to see what",
    "start": "2823130",
    "end": "2829130"
  },
  {
    "text": "happens but yeah that is an incredibly cheap way of storing stuff because you're using the internal and if you're",
    "start": "2829130",
    "end": "2835010"
  },
  {
    "text": "trying to do that yourself this is the best pattern for doing that because you don't ever want to lose that instance",
    "start": "2835010",
    "end": "2840200"
  },
  {
    "text": "and lose all the data that was in it cassandra handles the replication so I've always got three copies of this data and I can put data in it very",
    "start": "2840200",
    "end": "2847430"
  },
  {
    "text": "rapidly so we've been using the 1.6 terabytes of local disk store in the m2",
    "start": "2847430",
    "end": "2852770"
  },
  {
    "text": "for excel mostly and then recently we've been converting over to the solid state disk instances and if you if you've been",
    "start": "2852770",
    "end": "2859250"
  },
  {
    "text": "trying to get hold of Sallah say distances is we're sorry but we're using them all and they're they're gradually",
    "start": "2859250",
    "end": "2866780"
  },
  {
    "text": "getting easier to get but yeah we have a few hundred of them and they are in short supply but they're gradually",
    "start": "2866780",
    "end": "2873140"
  },
  {
    "text": "becoming over the next few months hopefully there'll be you know more generally available but 2 terabytes of",
    "start": "2873140",
    "end": "2878630"
  },
  {
    "text": "storage you can do a gigabyte per second to disk and across the network to these",
    "start": "2878630",
    "end": "2884270"
  },
  {
    "text": "instances a gigabyte per second and you can do a hundred thousand diopside I just trivially did this with a couple of",
    "start": "2884270",
    "end": "2889940"
  },
  {
    "text": "you know without doing any tuning I just went I wonder what I can do right on it yep it does 100,000 diodes and yep",
    "start": "2889940",
    "end": "2896580"
  },
  {
    "text": "it does do a gigabyte a second that is a monstrously powerful IO server right we",
    "start": "2896580",
    "end": "2903210"
  },
  {
    "start": "2902000",
    "end": "2910000"
  },
  {
    "text": "have our automation oh by the way on the left list we still have this Tomcat server running but it's running free and",
    "start": "2903210",
    "end": "2909090"
  },
  {
    "text": "this is what pre-and does it auto zero touch auto configuration of Cassandra it's basically as near as you can get to",
    "start": "2909090",
    "end": "2915750"
  },
  {
    "start": "2910000",
    "end": "2962000"
  },
  {
    "text": "running something like dynamo but on your own instances and this is kind of the model I'd suggest for people if",
    "start": "2915750",
    "end": "2921420"
  },
  {
    "text": "you're starting out and you're really small start on dynamo if you start to get the proportion of your bill to be",
    "start": "2921420",
    "end": "2927600"
  },
  {
    "text": "starts to get big or you start getting to the point where you where it's worth running say six or more instances then",
    "start": "2927600",
    "end": "2933690"
  },
  {
    "text": "you should probably cut over to Cassandra because you'll find that it's a much more it's a much lower cost more",
    "start": "2933690",
    "end": "2938760"
  },
  {
    "text": "linear scalability in terms of costing the perk the per request pricing of",
    "start": "2938760",
    "end": "2945650"
  },
  {
    "text": "dynamo it gets a little bit more expensive as you get to the high end of the scale but at the low end you can't",
    "start": "2945650",
    "end": "2952110"
  },
  {
    "text": "really run Cassandra clusters that are small enough to be cost effective at the low end so that's the problem all right",
    "start": "2952110",
    "end": "2958290"
  },
  {
    "text": "we do backup we do growing the thing and just get through this so the last last",
    "start": "2958290",
    "end": "2964320"
  },
  {
    "start": "2962000",
    "end": "3034000"
  },
  {
    "text": "piece this is all an architecture that would be maybe a lot of work to implement but we're releasing it as open",
    "start": "2964320",
    "end": "2970170"
  },
  {
    "text": "source so we have it on github one piece at a time intros documentation and what we found",
    "start": "2970170",
    "end": "2978510"
  },
  {
    "text": "is that the biggest thing we found is that if you start open sourcing your code it gets cleaned up because the",
    "start": "2978510",
    "end": "2984030"
  },
  {
    "text": "engineers have to write documentation they realize that the configurations not that good and that interface isn't quite",
    "start": "2984030",
    "end": "2989400"
  },
  {
    "text": "right and they wish they've done something different and they do all the cleanup work before they open source it so if you've got technical debt in your",
    "start": "2989400",
    "end": "2996090"
  },
  {
    "text": "codebase you know and you get this so at the end of it you're a hero because you've got your open source on github and that makes you feel good but you",
    "start": "2996090",
    "end": "3002690"
  },
  {
    "text": "actually did some work to get there and it's the best code cleaner mechanism we've ever found if you want we have a",
    "start": "3002690",
    "end": "3011500"
  },
  {
    "text": "booth in the exhibition center if you want to come through and talk to us we'd love to know what parts of the Netflix",
    "start": "3011500",
    "end": "3017920"
  },
  {
    "text": "library projects you are using and you know what's missing what you'd like to",
    "start": "3017920",
    "end": "3024380"
  },
  {
    "text": "contribute those kinds of things so we're trying to gather together sense of a community here there's some",
    "start": "3024380",
    "end": "3029690"
  },
  {
    "text": "you know mailing lists and things like that but we're particularly looking for input this is a list of all the projects",
    "start": "3029690",
    "end": "3036380"
  },
  {
    "start": "3034000",
    "end": "3094000"
  },
  {
    "text": "the ones in light green are the ones that are not yet out and part of the the",
    "start": "3036380",
    "end": "3041599"
  },
  {
    "text": "biggest part of this is our bakery which is a Jenkins based build system that gathers takes your code checks it out of",
    "start": "3041599",
    "end": "3048380"
  },
  {
    "text": "github or whatever and turns it into a baked ami that you then deploy there's a",
    "start": "3048380",
    "end": "3054320"
  },
  {
    "text": "few other bits and pieces here that will be along a bit later the the the load",
    "start": "3054320",
    "end": "3059930"
  },
  {
    "text": "balancer that we use internally for doing our zone aware routing between services that's on the list to come out",
    "start": "3059930",
    "end": "3065990"
  },
  {
    "text": "and the server side sort of there's some instrumented patterns in the calling between services that we have coming out",
    "start": "3065990",
    "end": "3072710"
  },
  {
    "text": "soon and then we also set the build ina slaves this is a using the Amazon VPC",
    "start": "3072710",
    "end": "3078410"
  },
  {
    "text": "service to take our current data center based build system you know Jenkins system is actually running in our data",
    "start": "3078410",
    "end": "3084050"
  },
  {
    "text": "center because we had to start somewhere and it bursts dynamically bursts into the cloud and builds new slaves there",
    "start": "3084050",
    "end": "3090950"
  },
  {
    "text": "and you have build slaves there and then shuts them down when they're done okay so some more talks as a talk this coming",
    "start": "3090950",
    "end": "3099290"
  },
  {
    "start": "3094000",
    "end": "3116000"
  },
  {
    "text": "up soon although we're running a little late today you get choice of talking to about to Jason about security or data",
    "start": "3099290",
    "end": "3106730"
  },
  {
    "text": "science for a bit Curt brown and then this afternoon Cassandra I'm on a panel",
    "start": "3106730",
    "end": "3112069"
  },
  {
    "text": "and then the chaos monkey so hopefully we'll see you again at one of those talks and this is tech way",
    "start": "3112069",
    "end": "3119680"
  },
  {
    "start": "3116000",
    "end": "3143000"
  },
  {
    "text": "feel free to connect to me on LinkedIn and I'll be around the conference I think we're probably out of time for Q&A",
    "start": "3125279",
    "end": "3131890"
  },
  {
    "text": "but because there's more talks coming up but I'll if anyone desperately wants to",
    "start": "3131890",
    "end": "3138369"
  },
  {
    "text": "say something I'll be here for the next few minutes as we set up Thanks",
    "start": "3138369",
    "end": "3143999"
  }
]