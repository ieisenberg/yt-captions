[
  {
    "start": "0",
    "end": "40000"
  },
  {
    "text": "and again welcome to today's webcast scheduling on aws for the first 10",
    "start": "240",
    "end": "5520"
  },
  {
    "text": "million users our presenter today is chris montz chris is the aws certified solution",
    "start": "5520",
    "end": "12639"
  },
  {
    "text": "architect he has worked both in a physical and cloud data center environment chris has many years of",
    "start": "12639",
    "end": "19840"
  },
  {
    "text": "experience setting up and managing web application servers database tuning application design firewall",
    "start": "19840",
    "end": "25760"
  },
  {
    "text": "configuration monitoring and magic collection and backup and disaster recovery so chris",
    "start": "25760",
    "end": "32238"
  },
  {
    "text": "you have the floor great thank you bowen and thank you again everyone also for joining us here today",
    "start": "32239",
    "end": "38079"
  },
  {
    "text": "um so as bone just mentioned my name is chris muns and i'm a solutions architect at aws based in our new york city office",
    "start": "38079",
    "end": "45680"
  },
  {
    "text": "generally here today hopefully you're here to learn a little bit more about skilling infrastructure in aws",
    "start": "45680",
    "end": "51039"
  },
  {
    "text": "and today is really going to be about some best practices and things to think about it it's definitely not a definite",
    "start": "51039",
    "end": "56399"
  },
  {
    "text": "blueprint or the only way to get things done but it's really just for help you get some general ideas of best",
    "start": "56399",
    "end": "61760"
  },
  {
    "text": "practices and the types of patterns and that you might see as you're building out an application on top of aws",
    "start": "61760",
    "end": "69280"
  },
  {
    "text": "so obviously you know when you're looking at building the cloud you're usually looking to make use of economies",
    "start": "69280",
    "end": "74320"
  },
  {
    "text": "of scale the ability to scale elasticity and handle large amounts of you know data or",
    "start": "74320",
    "end": "80080"
  },
  {
    "text": "traffic or load whatever it might be in your application and so we find ourselves early on asking",
    "start": "80080",
    "end": "85119"
  },
  {
    "text": "is how do we scale on aws you know what's involved obviously cloud is a little bit of a",
    "start": "85119",
    "end": "90560"
  },
  {
    "start": "87000",
    "end": "200000"
  },
  {
    "text": "change compared to those of us who are used to working in traditional data centers on physical infrastructure",
    "start": "90560",
    "end": "95759"
  },
  {
    "text": "even if you're doing virtualization inside of your your own data center you know it's still quite a different uh look and feel to",
    "start": "95759",
    "end": "103439"
  },
  {
    "text": "building in the cloud plus here at aws we do have some other services that can help you scale faster both in terms of you know",
    "start": "103439",
    "end": "110799"
  },
  {
    "text": "managing and then also in terms of application services and so we're going to try to cover some of that today for a lot of",
    "start": "110799",
    "end": "116880"
  },
  {
    "text": "us though uh starting out in aws especially if you're starting out new it could be kind of confusing as to",
    "start": "116880",
    "end": "122960"
  },
  {
    "text": "where to start where to go uh what you think what you should be thinking of first and uh",
    "start": "122960",
    "end": "128239"
  },
  {
    "text": "you know what your priorities should be like so let's say that you know you're a new customer to aws",
    "start": "128239",
    "end": "133520"
  },
  {
    "text": "you're looking to build out a web application and you want to figure out about how you could scale on aws",
    "start": "133520",
    "end": "139680"
  },
  {
    "text": "for many people your first step is your favorite search browser or search engine i'm sorry and you're typing something like scaling",
    "start": "139680",
    "end": "146319"
  },
  {
    "text": "on aws if we were to type this in right now today we'd get back quite a lot of results",
    "start": "146319",
    "end": "153200"
  },
  {
    "text": "almost a million of them today maybe a little bit more this might be a little bit dated but the first one that comes up right",
    "start": "153920",
    "end": "159280"
  },
  {
    "text": "now today at least in terms of what google spits back at us is auto scaling which is one service",
    "start": "159280",
    "end": "164480"
  },
  {
    "text": "that we have here at aws and while it's a very important service at aws this is not necessarily the",
    "start": "164480",
    "end": "170000"
  },
  {
    "text": "general starting point for scaling on aws there's a lot of other things that we need to get out of the way and so while",
    "start": "170000",
    "end": "175760"
  },
  {
    "text": "you could think of auto scaling as more of a tool and a destination that you want to build on it's not the kind",
    "start": "175760",
    "end": "181599"
  },
  {
    "text": "of thing that you can just point and click or you know drop it in place and all your problems are going to be solved",
    "start": "181599",
    "end": "187440"
  },
  {
    "text": "so leads us to asking you know what do we need first if a lot of if just going to try on auto",
    "start": "187440",
    "end": "192640"
  },
  {
    "text": "scaling isn't the thing that will solve all of our problems where should we start so i always like to start with",
    "start": "192640",
    "end": "197920"
  },
  {
    "text": "some basics the most basic of things with aws is actually at the physical level",
    "start": "197920",
    "end": "203120"
  },
  {
    "start": "200000",
    "end": "404000"
  },
  {
    "text": "so we have a concept at aws called regions currently today there are nine of these around the globe one of us one of them",
    "start": "203120",
    "end": "210080"
  },
  {
    "text": "is our govcloud region for government customers in the united states the other eight though you could use pretty much interchangeably around the",
    "start": "210080",
    "end": "216400"
  },
  {
    "text": "world and the idea here is that these regions contain uh usually all the services that we have",
    "start": "216400",
    "end": "223519"
  },
  {
    "text": "all the features that we've launched at any given point in time potentially with some delay as new services come out",
    "start": "223519",
    "end": "229840"
  },
  {
    "text": "but you should be able to run your infrastructure the same in u.s east or virginia as you would in south america or as you",
    "start": "229840",
    "end": "235840"
  },
  {
    "text": "would in singapore or as you would in sydney diving a little deeper inside of those",
    "start": "235840",
    "end": "241040"
  },
  {
    "text": "regions we have another concept called availability zones you can think of availability zones as individual plots of land that",
    "start": "241040",
    "end": "247760"
  },
  {
    "text": "amazon has where we have data centers that are inside of a region with the idea being that when you build an",
    "start": "247760",
    "end": "254480"
  },
  {
    "text": "application on aws you want to be making use of multiple availability zones inside of a single region there's",
    "start": "254480",
    "end": "260959"
  },
  {
    "text": "definitely patterns and reasons that you might want to go multi-region but at least for most of today's",
    "start": "260959",
    "end": "266000"
  },
  {
    "text": "conversation we're going to be focusing on single region deployments making use of multiple availability zones",
    "start": "266000",
    "end": "271919"
  },
  {
    "text": "we have a number of services that will automatically span valuability zones for you we have a number of services that have",
    "start": "271919",
    "end": "277120"
  },
  {
    "text": "built-in redundancy and duplication of data and so we'll be talking a little bit about those a",
    "start": "277120",
    "end": "282560"
  },
  {
    "text": "little bit more detail as we go through the talk today to help set some of the scope for the",
    "start": "282560",
    "end": "288960"
  },
  {
    "text": "size of aws this is a question we often get asked and you know we don't necessarily disclose all these numbers",
    "start": "288960",
    "end": "295840"
  },
  {
    "text": "one fact that we do like to bring up is that back in 2003 amazon.com or siblings on",
    "start": "295840",
    "end": "301440"
  },
  {
    "text": "the retail side they were a 5.2 billion dollar business at almost 8 000 employees globally",
    "start": "301440",
    "end": "307199"
  },
  {
    "text": "and they had a whole lot of servers it was even back in 2003 an incredibly popular",
    "start": "307199",
    "end": "312560"
  },
  {
    "text": "website to buy all sorts of different things on looking at aws today in 2013 every single day",
    "start": "312560",
    "end": "320560"
  },
  {
    "text": "we add enough capacity and storage to have powered amazon.com back in 2003. so every single day we are",
    "start": "320560",
    "end": "328720"
  },
  {
    "text": "constantly adding new capacity constantly adding new storage and so the thought is is that it should",
    "start": "328720",
    "end": "333759"
  },
  {
    "text": "be nearly impossible for you to outscale what was capable of being built on top of aws especially",
    "start": "333759",
    "end": "339919"
  },
  {
    "text": "as we continue to grow our footprint globally we talk about the services that make up",
    "start": "339919",
    "end": "345919"
  },
  {
    "text": "aws there's a couple of main categories that we have deployment administration application",
    "start": "345919",
    "end": "351039"
  },
  {
    "text": "services the three main blocks that we have which are compute storage database",
    "start": "351039",
    "end": "356400"
  },
  {
    "text": "built on top of our networking layer and then we have the aws global infrastructure which are the regions and availability zones",
    "start": "356400",
    "end": "362000"
  },
  {
    "text": "that we were just talking about a few minutes ago the way it gets broken out in the console that",
    "start": "362000",
    "end": "368720"
  },
  {
    "text": "web console that we have that you can use to access these servers is a little bit like this there's about 26 services that we have",
    "start": "368720",
    "end": "375199"
  },
  {
    "text": "listed here i believe i'm not going to go through all of these today but i guess the idea here is just to explain that",
    "start": "375199",
    "end": "380319"
  },
  {
    "text": "there's a lot of different services and a lot of different components that you can use in building out your your applications and your infrastructure on aws and sometimes you",
    "start": "380319",
    "end": "387759"
  },
  {
    "text": "may not think about all the different points and places where they could help you out but i really definitely",
    "start": "387759",
    "end": "393600"
  },
  {
    "text": "recommend that you investigate each of these a little bit further and get a good understanding of how they might potentially help you",
    "start": "393600",
    "end": "400880"
  },
  {
    "text": "so getting back to our application for today that we're going to talk about we're going to be discussing a fairly straightforward web",
    "start": "400880",
    "end": "407199"
  },
  {
    "start": "404000",
    "end": "750000"
  },
  {
    "text": "application um you know it could be a a blog or an e-commerce site",
    "start": "407199",
    "end": "412800"
  },
  {
    "text": "or some sort of a media site something that users would interface with we're gonna be storing some user data we're",
    "start": "412800",
    "end": "418319"
  },
  {
    "text": "gonna be serving out some content and the concern here is that we are a increasingly popular application on the",
    "start": "418319",
    "end": "424880"
  },
  {
    "text": "internet and we need to deal with scale so starting from you know day one user one you the developer creator of this",
    "start": "424880",
    "end": "431120"
  },
  {
    "text": "application pretty straightforward standard kind of early setup you have a single ec2",
    "start": "431120",
    "end": "437440"
  },
  {
    "text": "instance where you'd be running the full stack on this host so that is the web app the database any manager tools that you",
    "start": "437440",
    "end": "443520"
  },
  {
    "text": "might have everything on this one instance we're going to attach an elastic ip to it which is a static ip address that you",
    "start": "443520",
    "end": "449919"
  },
  {
    "text": "would assign to the cc2 instance and then we're going to reference the dns for our you know example.com or",
    "start": "449919",
    "end": "455280"
  },
  {
    "text": "whatever it might be in route 53 which is a global dns service that we have here",
    "start": "455280",
    "end": "460479"
  },
  {
    "text": "at aws and so with this you know you could quite possibly serve into the hundreds if not maybe thousands of",
    "start": "460479",
    "end": "467840"
  },
  {
    "text": "individual you know users that might be using your website and the real simple way to scale this",
    "start": "467840",
    "end": "472879"
  },
  {
    "text": "would be going to a larger ec2 instance so we have a number of different ec2",
    "start": "472879",
    "end": "478319"
  },
  {
    "text": "instances at aws here um over 15 now today that you",
    "start": "478319",
    "end": "483520"
  },
  {
    "text": "can select from with all sorts of different characteristics to them you know going up the ladder in higher",
    "start": "483520",
    "end": "490639"
  },
  {
    "text": "cpu and higher memory and higher disk storage and then beyond that we have some specialized instances that offer you things such as",
    "start": "490639",
    "end": "497039"
  },
  {
    "text": "high io instances that are backed by ssds high memory instances high cpu instances",
    "start": "497039",
    "end": "503039"
  },
  {
    "text": "high storage instances and it's pretty easy for you to be able to change instant sizes with your application and continue to",
    "start": "503039",
    "end": "509680"
  },
  {
    "text": "scale up you know horizontally by using the lower vertically by using a larger host but eventually you'll hit an end point",
    "start": "509680",
    "end": "515599"
  },
  {
    "text": "at some point you'll have been on the largest host that we have at a given point in time and so scaling up isn't really going to",
    "start": "515599",
    "end": "521200"
  },
  {
    "text": "get you much further than that point so the other things that you would have",
    "start": "521200",
    "end": "527680"
  },
  {
    "text": "to think about is that in this setup right here we have no failover we have no redundancy and we really have too many",
    "start": "527680",
    "end": "532959"
  },
  {
    "text": "eggs in one basket so even though we could scale to a few hundred to maybe a few thousand users we still got a lot of concerns",
    "start": "532959",
    "end": "540080"
  },
  {
    "text": "about the ability for this instance and this architecture to handle any sorts of failure",
    "start": "540080",
    "end": "545760"
  },
  {
    "text": "and to potentially scale beyond this individual single host so the first logical step is to break",
    "start": "545760",
    "end": "551200"
  },
  {
    "text": "out our web in our database tier our application our database here and so in doing this we're going to add in",
    "start": "551200",
    "end": "557279"
  },
  {
    "text": "another ec2 instance and we're going to run our database on it but instead of adding another ec2",
    "start": "557279",
    "end": "563600"
  },
  {
    "text": "instance what if we were to make use of a database service so the first collection of services i'm",
    "start": "563600",
    "end": "569279"
  },
  {
    "text": "going to talk about here today are database options that we have at aws so the first one obviously is",
    "start": "569279",
    "end": "574720"
  },
  {
    "text": "that you could self-manage on an ec2 instance and all the configuration from pretty much any database software you could",
    "start": "574720",
    "end": "580880"
  },
  {
    "text": "think of from my sql to oracle to sql server to dpd to postgres to any number of nosql",
    "start": "580880",
    "end": "587600"
  },
  {
    "text": "offerings you could if it installs on linux or windows you could pretty much run it on an ec2 instance no problem",
    "start": "587600",
    "end": "594320"
  },
  {
    "text": "but beyond that we have a number of services that are more or less fully managed to take away",
    "start": "594320",
    "end": "599680"
  },
  {
    "text": "some of the load of you having to do this yourself so the first is amazon rds relational database service",
    "start": "599680",
    "end": "605600"
  },
  {
    "text": "this is a database offering that we have that supports three different engines microsoft sql server oracle or mysql",
    "start": "605600",
    "end": "612320"
  },
  {
    "text": "and what we do is we help take care of a lot of the kind of low-level heavy lifting involved with dealing with",
    "start": "612320",
    "end": "618560"
  },
  {
    "text": "a relational database so things like netly backups easy ability to",
    "start": "618560",
    "end": "623680"
  },
  {
    "text": "scale the physical resources of the server so cpu and ram at storage the ability to do configuration",
    "start": "623680",
    "end": "629279"
  },
  {
    "text": "management in terms of how you configure the databases the ability to do snapshots patch management uh viewing the the logs",
    "start": "629279",
    "end": "636399"
  },
  {
    "text": "that come off of these databases and so there's a lot of tools that are built in to help make your life a lot easier when",
    "start": "636399",
    "end": "642480"
  },
  {
    "text": "managing a relational database the next service that we have is dynamodb this is a managed nosql",
    "start": "642480",
    "end": "648079"
  },
  {
    "text": "database service that we have it's built on top of ssds so it's meant to be you know lightning fast incredibly low",
    "start": "648079",
    "end": "653920"
  },
  {
    "text": "latency incredibly fast replies to queries and with dynamo",
    "start": "653920",
    "end": "659519"
  },
  {
    "text": "there's almost zero administration you literally just tell it the number of reads and writes per second that you want to be able to",
    "start": "659519",
    "end": "665200"
  },
  {
    "text": "handle and the service behind the scenes handles any sort of replication of your data duplication of your data scaling out of",
    "start": "665200",
    "end": "672399"
  },
  {
    "text": "storage scaling out of the ability to reply to queries and there's really nothing that you have to do to it you just",
    "start": "672399",
    "end": "678640"
  },
  {
    "text": "took it you just tweak it to what you need it to be and it handles all the rest behind the scenes and then the last service is something",
    "start": "678640",
    "end": "684720"
  },
  {
    "text": "that we came out with earlier this year amazon redshift it's a massively parallel petabyte-scale data warehouse",
    "start": "684720",
    "end": "691279"
  },
  {
    "text": "service giving you the ability to do to analyze large large queries of data",
    "start": "691279",
    "end": "698079"
  },
  {
    "text": "in a structured columnar format and with amazon redshift again much like the other ones you you",
    "start": "698079",
    "end": "704640"
  },
  {
    "text": "throw your data into it and you have the ability to query against it and as time as your data grows redshift",
    "start": "704640",
    "end": "709920"
  },
  {
    "text": "can scale with you into you know very large scale again petabytes of storage available and many",
    "start": "709920",
    "end": "715760"
  },
  {
    "text": "many processing cores to handle you know the largest queries that you could think of",
    "start": "715760",
    "end": "721760"
  },
  {
    "text": "so the next question is you know we've got a number of different options right we've got sql options and no sql options",
    "start": "722000",
    "end": "729120"
  },
  {
    "text": "some that are hosted and available by us here at amazon some that you could bring yourself and run yourself",
    "start": "729120",
    "end": "734160"
  },
  {
    "text": "how do you go about choosing database technology for a new application and it's definitely a a conversation",
    "start": "734160",
    "end": "741279"
  },
  {
    "text": "that requires a lot of time and a lot of investigation to how your application is going to work and it kind of borders sometimes on the",
    "start": "741279",
    "end": "747920"
  },
  {
    "text": "lines of a religious conversation and so some folks may not like this answer but our recommendation is that you start",
    "start": "747920",
    "end": "754000"
  },
  {
    "start": "750000",
    "end": "845000"
  },
  {
    "text": "with sql-based databases and right now i know there's a lot of other people that are listening online",
    "start": "754000",
    "end": "759200"
  },
  {
    "text": "here watching this and they're saying but i have a good reason not to use a sql based database fortunately more",
    "start": "759200",
    "end": "766639"
  },
  {
    "text": "often than not you don't so our advice again here is to start with sql databases",
    "start": "766639",
    "end": "774720"
  },
  {
    "text": "so i start with a sql database well it's well established and well worn technology sql has been around for a long time now",
    "start": "775760",
    "end": "783120"
  },
  {
    "text": "bordering on probably 30 plus years there's lots of existing code communities books people that have",
    "start": "783120",
    "end": "789200"
  },
  {
    "text": "background and tools that can help you build and tune your applications and your infrastructure as you're scaling",
    "start": "789200",
    "end": "795839"
  },
  {
    "text": "you're also not going to break sql dbs and you're you know in your first 10 million users really",
    "start": "795839",
    "end": "801279"
  },
  {
    "text": "again you know and there's a little asterisk here you know unless you're doing something super weird with the data or you have massive massive amounts of",
    "start": "801279",
    "end": "807839"
  },
  {
    "text": "it even then more likely than not sql will still have a place in your stack the other thing and we'll discuss a",
    "start": "807839",
    "end": "813040"
  },
  {
    "text": "little bit later is that there are really clear patterns to scalability you're not reinventing the wheel some of",
    "start": "813040",
    "end": "818480"
  },
  {
    "text": "the largest organizations in the world are built on top of sql some of the largest websites that people deal with",
    "start": "818480",
    "end": "823839"
  },
  {
    "text": "every single day are built on top of sql and so it's definitely a recommendation that you you look at this technology",
    "start": "823839",
    "end": "829680"
  },
  {
    "text": "as something that should be a foundation of what you're building a large scale application on top of",
    "start": "829680",
    "end": "835199"
  },
  {
    "text": "so again we're going back to this astrix here where i say you know there are some potential",
    "start": "835199",
    "end": "840560"
  },
  {
    "text": "exclusions or reasons why you might not want to go with the nosql um the first one that everyone says is",
    "start": "840560",
    "end": "847440"
  },
  {
    "start": "845000",
    "end": "887000"
  },
  {
    "text": "oh well we're talking about going to a large size and you said that you know if i have massive amounts",
    "start": "847440",
    "end": "852480"
  },
  {
    "text": "of data then maybe i'm an exclusion into this and everyone says i will have massive amounts of data",
    "start": "852480",
    "end": "858240"
  },
  {
    "text": "i think it's important to kind of quantify what that you know massive amount of data might be so what",
    "start": "858240",
    "end": "863839"
  },
  {
    "text": "i like to define it as if usage is such that you'll be generating several title rights in the order of five or greater data in",
    "start": "863839",
    "end": "870000"
  },
  {
    "text": "your first year of an application or you have an incredibly data intensive workload",
    "start": "870000",
    "end": "875519"
  },
  {
    "text": "you know kind of work like where you're analyzing regularly millions of rows in your application then you might need",
    "start": "875519",
    "end": "881519"
  },
  {
    "text": "no sql again what i've found with working with many customers over the last couple",
    "start": "881519",
    "end": "887839"
  },
  {
    "start": "887000",
    "end": "1111000"
  },
  {
    "text": "years working at amazon is that this is probably less than 90 percent of you so you really want to take some time to",
    "start": "887839",
    "end": "893279"
  },
  {
    "text": "think about what databases you're choosing for your applications why you're making those choices to use them",
    "start": "893279",
    "end": "900399"
  },
  {
    "text": "there's obviously a lot of you know marketing and attention that goes into companies that make database software to",
    "start": "900399",
    "end": "906800"
  },
  {
    "text": "you know try and promote their offerings but you should really take the time to take a look at how your application interfaces with the",
    "start": "906800",
    "end": "912560"
  },
  {
    "text": "data is a relational workload is it something where you're really truly going to have massive quantities of data",
    "start": "912560",
    "end": "918320"
  },
  {
    "text": "and if not you probably want to stick with the sql-based database",
    "start": "918320",
    "end": "922800"
  },
  {
    "text": "so moving back to our architecture here let's say that we have made the decision to go with rds",
    "start": "923360",
    "end": "928800"
  },
  {
    "text": "potentially mysql i guess we'll say in this case and so we've decided to go with rds and we still have our single web",
    "start": "928800",
    "end": "936240"
  },
  {
    "text": "instance so we've taken care of splitting out the the web and the database load but we",
    "start": "936240",
    "end": "941279"
  },
  {
    "text": "really yet haven't addressed any of the failover or redundancy in our application",
    "start": "941279",
    "end": "947120"
  },
  {
    "text": "so taking what we have here and moving on to addressing that the first thing that we're going to do",
    "start": "947120",
    "end": "952160"
  },
  {
    "text": "is break our application into a multi-az setup so what i've got here on the slide",
    "start": "952160",
    "end": "957440"
  },
  {
    "text": "outlined in the dashed orange marks is representing two different availability zones inside of a single",
    "start": "957440",
    "end": "963360"
  },
  {
    "text": "region and so we've now added a separate web instance and in using rds one of the",
    "start": "963360",
    "end": "968720"
  },
  {
    "text": "capabilities of it is the ability for you to have what we call a multi-az setup such that you have a primary instance in",
    "start": "968720",
    "end": "975279"
  },
  {
    "text": "one az you have a standby and another a z and if at any point in time the primary were to fail or you lose",
    "start": "975279",
    "end": "981360"
  },
  {
    "text": "communication with it the service will actually swap over the connection point to the standby",
    "start": "981360",
    "end": "988800"
  },
  {
    "text": "and your application should have to do nothing in order to start talking to the standby",
    "start": "988800",
    "end": "993839"
  },
  {
    "text": "so very quick failover completely painless for your application in terms of you need to make any changes",
    "start": "993839",
    "end": "998959"
  },
  {
    "text": "and your infrastructure continue to run and you should be able to continue to serve traffic the other thing that we've added to this",
    "start": "998959",
    "end": "1004560"
  },
  {
    "text": "topology here is an elastic load balancer and we're going to talk a little bit",
    "start": "1004560",
    "end": "1009839"
  },
  {
    "text": "further here about elastic load balancing in aws so elb elastic load balancing is a",
    "start": "1009839",
    "end": "1016240"
  },
  {
    "text": "service that we have that allows you to create a highly scalable",
    "start": "1016240",
    "end": "1021440"
  },
  {
    "text": "load balancing tier inside of your application and we have the ability also now inside of",
    "start": "1021440",
    "end": "1026720"
  },
  {
    "text": "virtual private cloud vpc the ability for you to do internal elbs in between your different tiers of your application",
    "start": "1026720",
    "end": "1032640"
  },
  {
    "text": "stack the idea here is that elb can span multiple az's inside of a single region",
    "start": "1032640",
    "end": "1037839"
  },
  {
    "text": "and serve any incoming traffic that you have to that elb down to any hosts behind it",
    "start": "1037839",
    "end": "1043600"
  },
  {
    "text": "such that if any of the hosts behind it any of those web instances were to fail the elb will know just to just serve",
    "start": "1043600",
    "end": "1050240"
  },
  {
    "text": "traffic over the ones that are still healthy and so it does this via having health checks of the instances that are behind",
    "start": "1050240",
    "end": "1055760"
  },
  {
    "text": "it it has the ability to pull those instances out in case they are failing it also has the ability to do things",
    "start": "1055760",
    "end": "1061840"
  },
  {
    "text": "such as session stickiness to do ssl termination and also provides you a number of different metrics back",
    "start": "1061840",
    "end": "1068400"
  },
  {
    "text": "against your infrastructure and so with elb you literally just provision it point it this is behind it and it takes",
    "start": "1068400",
    "end": "1074320"
  },
  {
    "text": "care of any sort of scaling or healing of the eob layer that needs to happen and so we have customers that are doing",
    "start": "1074320",
    "end": "1081200"
  },
  {
    "text": "tens if not hundreds of thousands of requests per second through elb without having to worry about managing",
    "start": "1081200",
    "end": "1087120"
  },
  {
    "text": "the load balancer layer themselves without having to provision say multiple load balancers and scale them",
    "start": "1087120",
    "end": "1092480"
  },
  {
    "text": "out eob takes care of all that for you so again another service that's meant to be very light in administration",
    "start": "1092480",
    "end": "1098480"
  },
  {
    "text": "but is very very capable of handling large amounts of traffic of self-healing itself and self-scaling",
    "start": "1098480",
    "end": "1104080"
  },
  {
    "text": "itself so now that we have elb and we've got",
    "start": "1104080",
    "end": "1109200"
  },
  {
    "text": "rds kind of doing its thing we could scale this horizontally and vertically again you know using larger instance classes",
    "start": "1109200",
    "end": "1115360"
  },
  {
    "start": "1111000",
    "end": "1167000"
  },
  {
    "text": "and get pretty far to the tens if not hundreds of thousands of users so if we were to look at this",
    "start": "1115360",
    "end": "1121440"
  },
  {
    "text": "topology again here a little bit more expanded out we have our user that's using route 53",
    "start": "1121440",
    "end": "1127919"
  },
  {
    "text": "or communicating with route 53 to get the dns records for our website which is going to serve",
    "start": "1127919",
    "end": "1133440"
  },
  {
    "text": "back the ip addresses for our elastic load balancer behind the elastic load balancer is",
    "start": "1133440",
    "end": "1139600"
  },
  {
    "text": "going to be our web tier so in this case we've currently showing eight web instances",
    "start": "1139600",
    "end": "1144880"
  },
  {
    "text": "and then behind those eight web instances is our rds database tier so in this case what we're seeing is a",
    "start": "1144880",
    "end": "1150799"
  },
  {
    "text": "a master and a secondary and then a whole bunch of re-replicas which is another capability that rds has",
    "start": "1150799",
    "end": "1157520"
  },
  {
    "text": "built into the platforms the ability to fire up read replicas so again with this we can honestly get",
    "start": "1157520",
    "end": "1163360"
  },
  {
    "text": "pretty far we'd be able to serve quite a bit of traffic there's quite a lot of",
    "start": "1163360",
    "end": "1168480"
  },
  {
    "start": "1167000",
    "end": "1592000"
  },
  {
    "text": "redundancy and failover and we could definitely scale quite a bit and that's actually",
    "start": "1168480",
    "end": "1174640"
  },
  {
    "text": "probably the most basic topology that we see most of our customers that early beginning scale take and so this",
    "start": "1174640",
    "end": "1180400"
  },
  {
    "text": "will definitely take us far but if we care a lot about the performance and efficiency of our infrastructure there's definitely places that we can",
    "start": "1180400",
    "end": "1186240"
  },
  {
    "text": "clean this up so looking back at the web application layer and the database layer",
    "start": "1186240",
    "end": "1192240"
  },
  {
    "text": "there's a couple of things that we can do very easily to help give us quite a performance boost in this application",
    "start": "1192240",
    "end": "1197679"
  },
  {
    "text": "first thing we're going to want to do is move any sort of static assets from our web server or servers off to something that",
    "start": "1197679",
    "end": "1204000"
  },
  {
    "text": "would serve that better so move the static content say your css files and your javascript files",
    "start": "1204000",
    "end": "1210000"
  },
  {
    "text": "and your image files off to something like s3 our storage service and then put",
    "start": "1210000",
    "end": "1216240"
  },
  {
    "text": "cloudfront or cdn service in front of that what that's going to give you is a highly durable highly scalable",
    "start": "1216240",
    "end": "1222159"
  },
  {
    "text": "storage service where your data is going to be located and we'll go into a little bit deeper about s3 in a minute here and then",
    "start": "1222159",
    "end": "1228640"
  },
  {
    "text": "fronting that with amazon cloudfront a content delivery network that has global presence the ability to serve up",
    "start": "1228640",
    "end": "1235200"
  },
  {
    "text": "content to your end users much quicker and so in doing that you're going to lift an incredible load off of your web",
    "start": "1235200",
    "end": "1241679"
  },
  {
    "text": "application often it's found that static assets are often sometimes 80 or more of the",
    "start": "1241679",
    "end": "1248799"
  },
  {
    "text": "traffic that might be coming off of a web server um and going to an end browser so this will definitely",
    "start": "1248799",
    "end": "1254080"
  },
  {
    "text": "lighten up the load in terms of network utilization on these hosts the next thing we want to look at doing is",
    "start": "1254080",
    "end": "1260640"
  },
  {
    "text": "lightening up both the application and the database further via doing some sort of caching",
    "start": "1260640",
    "end": "1265760"
  },
  {
    "text": "so this could be session caching it could be cookie caching it could be database result caching and",
    "start": "1265760",
    "end": "1271360"
  },
  {
    "text": "there's a number of different services that can help us with this also one is a service called alaska cache which we'll go into a little bit further",
    "start": "1271360",
    "end": "1277600"
  },
  {
    "text": "here in a moment the other one is dynamodb which you've already lightly covered today so in moving some of this workload from",
    "start": "1277600",
    "end": "1283600"
  },
  {
    "text": "the web instances and also from the database tier we can actually significantly lighten up",
    "start": "1283600",
    "end": "1288640"
  },
  {
    "text": "the amount of memory and compute that's being used by centralizing these in these tiers",
    "start": "1288640",
    "end": "1295760"
  },
  {
    "text": "so in diving a little bit deeper on s3 again this is our simple storage service",
    "start": "1296720",
    "end": "1304480"
  },
  {
    "text": "that we use that you can use to store objects uh in the cloud so it has 11 lines of",
    "start": "1304480",
    "end": "1309600"
  },
  {
    "text": "durability and it's good for things again like static assets backups logs",
    "start": "1309600",
    "end": "1315440"
  },
  {
    "text": "ingesto files for processing and we like to say that it's infinitely scalable when we talk about what that means back",
    "start": "1315440",
    "end": "1321679"
  },
  {
    "text": "in april of this year at our new york summit it was actually announced that at that point amazon s3 held over 2 trillion",
    "start": "1321679",
    "end": "1328880"
  },
  {
    "text": "objects and was processing 1.1 million requests per second so this was several months ago i know",
    "start": "1328880",
    "end": "1334720"
  },
  {
    "text": "this stat is already dated but you can see that even going back to april there's quite a lot of data that's",
    "start": "1334720",
    "end": "1340480"
  },
  {
    "text": "stored inside of s3 it's quite a large scale service so you should feel comfortable putting your your objects that are",
    "start": "1340480",
    "end": "1346480"
  },
  {
    "text": "going to be served out to your your end users in s3 s3 also has a lot of great features of",
    "start": "1346480",
    "end": "1351760"
  },
  {
    "text": "things like fine grained permission control so the ability to control who can see what objects who can modify them who can",
    "start": "1351760",
    "end": "1357679"
  },
  {
    "text": "delete them again it ties in very closely and very nicely with cloudfront or cdn service",
    "start": "1357679",
    "end": "1363600"
  },
  {
    "text": "it also ties in with emr elastic mapreduce which is our hosted hadoop service a service that we're actually not going",
    "start": "1363600",
    "end": "1369679"
  },
  {
    "text": "to be talking too much about today should also act as a logging endpoint for both itself",
    "start": "1369679",
    "end": "1375520"
  },
  {
    "text": "cloudfront and billing basically with s3 cloudfront and our billing",
    "start": "1375520",
    "end": "1380960"
  },
  {
    "text": "abilities you have the ability to get logs of access to s3 cloudfront or what",
    "start": "1380960",
    "end": "1386400"
  },
  {
    "text": "you've spent over an hour or a day or a month put into an s3 bucket it also supports encryption at transit",
    "start": "1386400",
    "end": "1392799"
  },
  {
    "text": "net rest which is a very useful thing it also has another kind of flavor to it which is called",
    "start": "1392799",
    "end": "1398640"
  },
  {
    "text": "reduce redundancy mode which is the third cheaper and has a little bit less durability than the full version of s3 does",
    "start": "1398640",
    "end": "1406480"
  },
  {
    "text": "and then lastly there's another kind of version of the service called glacier which is an archive service that we have",
    "start": "1406480",
    "end": "1412640"
  },
  {
    "text": "which is really really useful for long-term storage of things that you wouldn't potentially not be accessing but need to keep around",
    "start": "1412640",
    "end": "1419039"
  },
  {
    "text": "for potentially you know regulatory reasons",
    "start": "1419039",
    "end": "1423039"
  },
  {
    "text": "next service i want to talk about here again is dynamodb and so i gave you a brief on this a little bit earlier again it's a nosql",
    "start": "1424240",
    "end": "1430640"
  },
  {
    "text": "database built on top of ssds it's meant for really fast predictable performance",
    "start": "1430640",
    "end": "1436000"
  },
  {
    "text": "in our application stack here this is something that we could definitely use as a caching tier so potentially again",
    "start": "1436000",
    "end": "1441360"
  },
  {
    "text": "storing things like session information in an e-commerce site maybe cart data or maybe some sort of other",
    "start": "1441360",
    "end": "1448159"
  },
  {
    "text": "transient data that has been fully committed yet to our relational database again with dynamodb you literally just",
    "start": "1448159",
    "end": "1454559"
  },
  {
    "text": "dial up and down the read and write capacity that you need and behind the scenes it takes care of all of the provisioning and all of the",
    "start": "1454559",
    "end": "1460400"
  },
  {
    "text": "scaling and all of the redundancies that are based into dynamo dynamodb much like s3 are two services",
    "start": "1460400",
    "end": "1468880"
  },
  {
    "text": "that are multi-az by default so you never have to worry about what a z they're in they automatically have",
    "start": "1468880",
    "end": "1474559"
  },
  {
    "text": "their data replicated across them and you just talk to the common endpoint and the service figures out how to",
    "start": "1474559",
    "end": "1480080"
  },
  {
    "text": "direct you to get your data it has strong consistency so when a record is",
    "start": "1480080",
    "end": "1486320"
  },
  {
    "text": "written into the database you know that when you request it you will get back the the most recent write again it's highly fault tolerant there's",
    "start": "1486320",
    "end": "1493279"
  },
  {
    "text": "a lot of built-in monitoring with our service cloud watch which is our metrics and monitoring service and aws",
    "start": "1493279",
    "end": "1498640"
  },
  {
    "text": "it's very secure you can control access to it with iam or dining access and management and this also much like s3 ties in with",
    "start": "1498640",
    "end": "1505520"
  },
  {
    "text": "emr or elastic mapreduce for analyzing large data sets that you might have stored there",
    "start": "1505520",
    "end": "1511679"
  },
  {
    "text": "the last service i'm going to touch on here is elasticash which is a service that we have right",
    "start": "1512799",
    "end": "1519520"
  },
  {
    "text": "now that currently supports the memcached engine and it speaks the same apis as",
    "start": "1519520",
    "end": "1524799"
  },
  {
    "text": "the traditional open source memcache d it's pretty much just hosted memcache d with some really awesome stuff put on top of",
    "start": "1524799",
    "end": "1530080"
  },
  {
    "text": "it what you do with elasticaction you provision it as a cluster and so that could be from one to many many nodes",
    "start": "1530080",
    "end": "1537600"
  },
  {
    "text": "what the last class elastic cache cluster will do for you is it self-healing so if any instance",
    "start": "1537600",
    "end": "1543039"
  },
  {
    "text": "were to fail it will automatically replace that instance again currently with using memcached as the",
    "start": "1543039",
    "end": "1549840"
  },
  {
    "text": "engine it's very very fast you know potentially single digit milliseconds speeds or potentially less",
    "start": "1549840",
    "end": "1555279"
  },
  {
    "text": "depending on the size of the instance and the amount of data or requests that are going to it so it's very very useful",
    "start": "1555279",
    "end": "1560320"
  },
  {
    "text": "for being a light cache interior in a web application where you're either caching say database queries or session",
    "start": "1560320",
    "end": "1566080"
  },
  {
    "text": "information or any sort of other temporary information that you might need to we've also built out an auto discovery",
    "start": "1566080",
    "end": "1572480"
  },
  {
    "text": "client in a couple of different languages that help you with when an instance dies and then is",
    "start": "1572480",
    "end": "1577520"
  },
  {
    "text": "replaced you won't have to necessarily hard code that that hosts information into your",
    "start": "1577520",
    "end": "1583039"
  },
  {
    "text": "application which is really really great for helping you build very highly durable applications",
    "start": "1583039",
    "end": "1589840"
  },
  {
    "text": "so now that we've shifted some weight off of our web and database tier primarily our web tier here by moving",
    "start": "1590080",
    "end": "1595200"
  },
  {
    "start": "1592000",
    "end": "1821000"
  },
  {
    "text": "static assets off to s3 and cloud cloudfront by moving some application caching off to",
    "start": "1595200",
    "end": "1600640"
  },
  {
    "text": "either elasticash or dynamodb we can actually go back and revisit what we talked about beginning of this talk",
    "start": "1600640",
    "end": "1607120"
  },
  {
    "text": "which is autoscaling so again auto scaling not the place where you want to look to start when you're first",
    "start": "1607120",
    "end": "1613679"
  },
  {
    "text": "building your application but definitely something that you want to build to once you've gotten to the place where you can lighten up some of the other tiers of",
    "start": "1613679",
    "end": "1620480"
  },
  {
    "text": "your application stack so auto scaling is a service that is built directly into ec2",
    "start": "1620480",
    "end": "1626799"
  },
  {
    "text": "it's very easy to configure it's very easy to set up and what auto scaling will allow you to",
    "start": "1626799",
    "end": "1631840"
  },
  {
    "text": "do is to scale horizontally the number of instances that you have representing any single pool",
    "start": "1631840",
    "end": "1637919"
  },
  {
    "text": "so it's not going to help you go from an m1 small to an m1 extra large but what it is going to do is help you",
    "start": "1637919",
    "end": "1644080"
  },
  {
    "text": "go from two m1 smalls to 20 m1 smalls back down to 14 m1",
    "start": "1644080",
    "end": "1649120"
  },
  {
    "text": "smalls or whatever it might be based on the traffic that you have and so there's a number of different ways that you can set up the policies",
    "start": "1649120",
    "end": "1655440"
  },
  {
    "text": "or the triggers for doing the scaling you could do it based on some sort of a metric that is in cloudwatch you can do it",
    "start": "1655440",
    "end": "1662159"
  },
  {
    "text": "based on a schedule so maybe you want to launch a number of instances at 6am and turn them back off",
    "start": "1662159",
    "end": "1667360"
  },
  {
    "text": "at 12 a.m or there are manual triggers that you can set up so you have the ability of within say",
    "start": "1667360",
    "end": "1673440"
  },
  {
    "text": "your own application or your own monitoring to just call the api or command line tool to",
    "start": "1673440",
    "end": "1678880"
  },
  {
    "text": "initialize a scaling up or scaling down action one of the other great things about auto scaling is that it's built into our",
    "start": "1678880",
    "end": "1685120"
  },
  {
    "text": "notification service sns so you can actually take notifications from auto scaling actions",
    "start": "1685120",
    "end": "1690559"
  },
  {
    "text": "again a scale up or scale down and then use that in further automation in your own systems",
    "start": "1690559",
    "end": "1696399"
  },
  {
    "text": "so where is auto scaling useful if we were to look at typical traffic",
    "start": "1696399",
    "end": "1701919"
  },
  {
    "text": "for a week at amazon.com sunday through saturday might look something like this and this pattern might look very similar to the",
    "start": "1701919",
    "end": "1707919"
  },
  {
    "text": "applications that you might be running with your own websites and so it's actually pretty easy to provision",
    "start": "1707919",
    "end": "1713279"
  },
  {
    "text": "capacity for this we can take a line draw it above say 15 percent what we think peak capacity is and actually be pretty",
    "start": "1713279",
    "end": "1720399"
  },
  {
    "text": "good in our utilization given the provision capacity that we have here so if we did want to",
    "start": "1720399",
    "end": "1725600"
  },
  {
    "text": "statically provision resources we could do this and probably be pretty good for this week right here",
    "start": "1725600",
    "end": "1732480"
  },
  {
    "text": "however it changes a little bit for amazon.com when we go to november and at the end of the month there's some",
    "start": "1732480",
    "end": "1737919"
  },
  {
    "text": "serious spikes as we go into the holiday season in traffic so if we were now to draw a line at 15",
    "start": "1737919",
    "end": "1743440"
  },
  {
    "text": "above peak utilization there'd be a massive amount of wasted compu",
    "start": "1743440",
    "end": "1748480"
  },
  {
    "text": "if we were provisioned ahead of time to handle the end of the month load and traditionally if you were working inside of a data center and you had",
    "start": "1748480",
    "end": "1754720"
  },
  {
    "text": "maybe say you know yearly hardware purchases you would be making these same kind of guesses you",
    "start": "1754720",
    "end": "1760559"
  },
  {
    "text": "would say okay we're going to draw a line at 15 above what we think we might need and you provision that capacity in order of",
    "start": "1760559",
    "end": "1767279"
  },
  {
    "text": "that and have it racked and powered and spinning but you might have a lot of wasted capacity going into that time frame when",
    "start": "1767279",
    "end": "1773440"
  },
  {
    "text": "you actually need it so auto scaling allows us to do is take this blue line",
    "start": "1773440",
    "end": "1779120"
  },
  {
    "text": "and match it exactly to our traffic and again that could be done via say cpu load on the cluster latency",
    "start": "1779120",
    "end": "1785440"
  },
  {
    "text": "off of the load balancer network traffic coming in and out of the environment and so again we can really really finely",
    "start": "1785440",
    "end": "1793520"
  },
  {
    "text": "tie in the amount of resources that we need directly to the amount of resources that",
    "start": "1793520",
    "end": "1799039"
  },
  {
    "text": "we really need here based on traffic so again auto scaling lets you do this",
    "start": "1799039",
    "end": "1805039"
  },
  {
    "text": "and it's definitely the kind of thing that you want to look at once you've taken care of some of the things we talked about earlier in terms of",
    "start": "1805039",
    "end": "1810799"
  },
  {
    "text": "lightening up your web application and making sure that you could handle things such as the the teardown of an instance as part of a",
    "start": "1810799",
    "end": "1817600"
  },
  {
    "text": "scale down so given that we've added in auto scaling there's still further",
    "start": "1817600",
    "end": "1822880"
  },
  {
    "start": "1821000",
    "end": "2131000"
  },
  {
    "text": "improvements that can be made to our webinar application layer so one of the big concepts that we",
    "start": "1822880",
    "end": "1828880"
  },
  {
    "text": "talked about at aws and something that is very prevalent inside of both amazon and aws is service oriented architecture",
    "start": "1828880",
    "end": "1836640"
  },
  {
    "text": "or you like to call soa all the things so in soa in your architecture and your",
    "start": "1836640",
    "end": "1843360"
  },
  {
    "text": "infrastructure what you're looking at doing is moving services or components of your application into their own tiers or",
    "start": "1843360",
    "end": "1849120"
  },
  {
    "text": "modules so treat every single part of your application as its own piece of infrastructure as its own little mini",
    "start": "1849120",
    "end": "1855520"
  },
  {
    "text": "application which will allow you to really scale them independently fix bugs that might be in between them",
    "start": "1855520",
    "end": "1862320"
  },
  {
    "text": "move forward in development and launching new features without having to worry about having the entire application stack follow with you and",
    "start": "1862320",
    "end": "1869039"
  },
  {
    "text": "this is something that is done very extensively again at amazon.com and aws if you ever use the service ec2 which we",
    "start": "1869039",
    "end": "1876000"
  },
  {
    "text": "all hope you will underneath the hood of ec2 are several dozen",
    "start": "1876000",
    "end": "1881600"
  },
  {
    "text": "mini services that pin together and make the service work for our end customers so in terms of doing",
    "start": "1881600",
    "end": "1888720"
  },
  {
    "text": "and building you know service oriented architecture into your own application and infrastructure loose",
    "start": "1888720",
    "end": "1894559"
  },
  {
    "text": "coupling is really one of the key concepts that helps set you free and be able to do this really well so again loosely coupling",
    "start": "1894559",
    "end": "1901039"
  },
  {
    "text": "the different parts of your application providing potentially individual interfaces or some sort of",
    "start": "1901039",
    "end": "1906799"
  },
  {
    "text": "common communication plane between them is what will allow you to really really scale up and deal with a lot of traffic",
    "start": "1906799",
    "end": "1912720"
  },
  {
    "text": "or deal with a lot of data so again think of these all as independent components try to design every one of them as a black box",
    "start": "1912720",
    "end": "1919440"
  },
  {
    "text": "no two components should have to know too too much about the other outside of some sort of common interface",
    "start": "1919440",
    "end": "1924880"
  },
  {
    "text": "that they use to talk with each other try to decouple interactions wherever you can and try to favor services that",
    "start": "1924880",
    "end": "1930480"
  },
  {
    "text": "have built-in redundancy and scalability instead of building your own we'll talk a little bit about that in a minute here",
    "start": "1930480",
    "end": "1935840"
  },
  {
    "text": "in canada's example here we show let's say that you had to pass data between two different services controller and controller b you could",
    "start": "1935840",
    "end": "1942799"
  },
  {
    "text": "take data in to controller a and then send it directly to controller b but if there was a failure in any one",
    "start": "1942799",
    "end": "1947919"
  },
  {
    "text": "of these components what might go wrong would you lose data could you potentially overwhelm another service",
    "start": "1947919",
    "end": "1953679"
  },
  {
    "text": "could you starve you know controller b for resources and so you might want to think of putting something say like an",
    "start": "1953679",
    "end": "1958720"
  },
  {
    "text": "sqs queue in between two different parts of your application to help handle any sort of",
    "start": "1958720",
    "end": "1964480"
  },
  {
    "text": "overflow or failures that might happen and sqs is a service that we have simple q service that very high scale q",
    "start": "1964480",
    "end": "1971840"
  },
  {
    "text": "service that you could use for say buffering information or for worker workflows or",
    "start": "1971840",
    "end": "1977679"
  },
  {
    "text": "anything that you might do with a queue so again loose coupling in soa will",
    "start": "1977679",
    "end": "1983919"
  },
  {
    "text": "really help set you free and really help you win in terms of scaling your infrastructure and in the early days if you're building out a new",
    "start": "1983919",
    "end": "1990159"
  },
  {
    "text": "product or you're building out a new company you might want to try to avoid building",
    "start": "1990159",
    "end": "1995279"
  },
  {
    "text": "components that other people already have out there for you you know reinventing the wheel on some of these things so there's a number of services that we",
    "start": "1995279",
    "end": "2001360"
  },
  {
    "text": "provide that can help you out i have six of them listed here amazon sns which is our notification service",
    "start": "2001360",
    "end": "2008480"
  },
  {
    "text": "which we actually just launched the ability for you to do mobile push notifications to iphone and android devices amazon cloud",
    "start": "2008480",
    "end": "2015440"
  },
  {
    "text": "search which is a hosted search platform built on the same technology that powers the amazon.com",
    "start": "2015440",
    "end": "2020960"
  },
  {
    "text": "search toolbar amazon sqs again a queuing service that we have very highly scalable",
    "start": "2020960",
    "end": "2027360"
  },
  {
    "text": "very high durability built into the service amazon ses is simple email service this is a",
    "start": "2027360",
    "end": "2032799"
  },
  {
    "text": "service for sending email outbound potentially to your customers and it can handle millions of mess",
    "start": "2032799",
    "end": "2037919"
  },
  {
    "text": "of emails a day very high scale very high throughput amazon simple",
    "start": "2037919",
    "end": "2044080"
  },
  {
    "text": "workflow is a workflow management service that you could use in building and actually helping with some of your",
    "start": "2044080",
    "end": "2050240"
  },
  {
    "text": "soa infrastructure and then lastly amazon elastic transcoder if you're doing any sort of transcoding of audio",
    "start": "2050240",
    "end": "2055679"
  },
  {
    "text": "or video files elasti transcoder is a very simple drop-in service to help you",
    "start": "2055679",
    "end": "2061040"
  },
  {
    "text": "take in the audio or video in pretty much any format and output it again into multiple formats to be digested by your",
    "start": "2061040",
    "end": "2068000"
  },
  {
    "text": "users other examples of things you might want to look at you know separating out and",
    "start": "2068000",
    "end": "2074000"
  },
  {
    "text": "opting for a build service instead of building your own things like databases monitoring tools metrics tools and",
    "start": "2074000",
    "end": "2080720"
  },
  {
    "text": "logging tools these are the kind of things that you really shouldn't be building yourself which kind of leads to",
    "start": "2080720",
    "end": "2086638"
  },
  {
    "text": "my my next point here in this presentation and this is something that i have run into",
    "start": "2086639",
    "end": "2092158"
  },
  {
    "text": "many many times and working with lots of different customers is that if you find yourself writing things such as your own queue",
    "start": "2092159",
    "end": "2098720"
  },
  {
    "text": "or your own dns server or your own database server error storage system or monitoring tools",
    "start": "2098720",
    "end": "2104800"
  },
  {
    "text": "my recommendation is that you take a deep breath and you convince the developers in the organization that are doing that to stop",
    "start": "2104800",
    "end": "2110960"
  },
  {
    "text": "it now again this really is the definition of reinventing the wheel and more often",
    "start": "2110960",
    "end": "2116079"
  },
  {
    "text": "than not i find that people are either not exploring current things that are open source or available from third parties that are",
    "start": "2116079",
    "end": "2122160"
  },
  {
    "text": "probably going to solve the exact same issue that you're looking to to solve yourselves",
    "start": "2122160",
    "end": "2128240"
  },
  {
    "text": "so getting back again here to soa let's imagine that we had a feature on",
    "start": "2128640",
    "end": "2135040"
  },
  {
    "start": "2131000",
    "end": "2492000"
  },
  {
    "text": "our website that allowed our users to upload photos so maybe it's a mobile device maybe it's a browser but somehow they're going to",
    "start": "2135040",
    "end": "2141680"
  },
  {
    "text": "be sending us photos and then we're going to take those photos and then resize them such that they can",
    "start": "2141680",
    "end": "2147359"
  },
  {
    "text": "be served back out in you know some sizes for for different media so again maybe serve back out to",
    "start": "2147359",
    "end": "2153680"
  },
  {
    "text": "mobile or serving back out to a browser or something similar",
    "start": "2153680",
    "end": "2159838"
  },
  {
    "text": "so looking at this example architecture here that we have for this process again we have our end user and they have",
    "start": "2160079",
    "end": "2166400"
  },
  {
    "text": "uploaded their image and so we've put that directly into an s3 bucket that we're going to use for ingest",
    "start": "2166400",
    "end": "2172079"
  },
  {
    "text": "and then part of the application is also going to send a or cube a message into an sms topic",
    "start": "2172079",
    "end": "2179200"
  },
  {
    "text": "and then sns has the ability to have multiple listeners off the topic so it's going to push out that message",
    "start": "2179200",
    "end": "2185200"
  },
  {
    "text": "to three different cubes that we have one queue for thumbnails one for the image for mobile devices",
    "start": "2185200",
    "end": "2191119"
  },
  {
    "text": "and one size for web devices and again these queues here are almost infinitely scalable i've seen",
    "start": "2191119",
    "end": "2198240"
  },
  {
    "text": "customers with tens of millions of objects in the queue and so we can continue to write these in",
    "start": "2198240",
    "end": "2203920"
  },
  {
    "text": "and then behind these cues what's going to be pulling them is a group of hosts inside of an auto scaling group",
    "start": "2203920",
    "end": "2209920"
  },
  {
    "text": "running our image resizer application and so with this we can have you know",
    "start": "2209920",
    "end": "2215440"
  },
  {
    "text": "three or more however many different sizes that we need to make all being sized by independent pools and",
    "start": "2215440",
    "end": "2220960"
  },
  {
    "text": "each of these independent pools could potentially have failures at any point in time it could be taken down could be changed",
    "start": "2220960",
    "end": "2226480"
  },
  {
    "text": "without us having to affect the rest of the application and so in its heart here this is exactly",
    "start": "2226480",
    "end": "2231920"
  },
  {
    "text": "what soa is about we've got loose coupling between the different parts of our application stack we've got",
    "start": "2231920",
    "end": "2238960"
  },
  {
    "text": "the ability to handle failing of any single component without it tying back to",
    "start": "2238960",
    "end": "2245359"
  },
  {
    "text": "any other component in the application and we're also making use of highly redundant reliable self-healing services",
    "start": "2245359",
    "end": "2252560"
  },
  {
    "text": "such as auto scaling sqs and sms and then we're taking our data after post-processing tossing them back",
    "start": "2252560",
    "end": "2258960"
  },
  {
    "text": "the originals into a regular s3 bucket tossing the resized into a reduced redundancy mode s3 bucket",
    "start": "2258960",
    "end": "2264880"
  },
  {
    "text": "which we could then serve back out to cloudfront and with this we could handle a very large throughput you know",
    "start": "2264880",
    "end": "2271119"
  },
  {
    "text": "potentially tens of thousands if not hundreds of thousands of images per day maybe even more than that and this is a",
    "start": "2271119",
    "end": "2278240"
  },
  {
    "text": "very common pattern that we see for this type of a workload",
    "start": "2278240",
    "end": "2282480"
  },
  {
    "text": "so in putting this all together here and reaching let's say our first million users that we're going to have of our",
    "start": "2283760",
    "end": "2289200"
  },
  {
    "text": "application multi-az obviously a really key component in building in redundancy and scalability in our application",
    "start": "2289200",
    "end": "2295839"
  },
  {
    "text": "using elastic load balancer between tiers another very important thing the ability to have these kind of",
    "start": "2295839",
    "end": "2302079"
  },
  {
    "text": "self-healing self-balancing parts of our application across availability zones making use of auto",
    "start": "2302079",
    "end": "2307599"
  },
  {
    "text": "scaling again when you're ready to when your application is ready to to help you match the capacity that you",
    "start": "2307599",
    "end": "2313359"
  },
  {
    "text": "have running at any point in time to the needs of the application you know based on traffic coming in",
    "start": "2313359",
    "end": "2319599"
  },
  {
    "text": "looking at building out a service oriented architecture really taking our application stack taking all the components all the different flows",
    "start": "2319599",
    "end": "2326320"
  },
  {
    "text": "and breaking them out into their own individual services their own little mini architecture stacks",
    "start": "2326320",
    "end": "2331599"
  },
  {
    "text": "serving content smartly again you really shouldn't be serving static content from a web server these days",
    "start": "2331599",
    "end": "2336720"
  },
  {
    "text": "this is exactly what s3 and cloudfront are there for moving caching off of the database",
    "start": "2336720",
    "end": "2342000"
  },
  {
    "text": "in database caches can often be pretty painful and pretty slow and not worthwhile at large scale so again",
    "start": "2342000",
    "end": "2348480"
  },
  {
    "text": "look at making use of a service like elastic cache or dynamodb to help cache some of the things that",
    "start": "2348480",
    "end": "2354079"
  },
  {
    "text": "are coming off of your database and then the last thing here again is moving state off of tiers.autoscale",
    "start": "2354079",
    "end": "2360880"
  },
  {
    "text": "so anytime that you have a tier of your application that's going to be auto scaling whether it's scaling up or scaling down",
    "start": "2360880",
    "end": "2366800"
  },
  {
    "text": "you want to make sure that you're not storing anything on those instances that would be bad if you lost so any sort of",
    "start": "2366800",
    "end": "2372960"
  },
  {
    "text": "stateful information things like log data assets that your users might be uploading assets that might be",
    "start": "2372960",
    "end": "2379599"
  },
  {
    "text": "kept in your application look at putting those also into a caching tier or into you know a static object store",
    "start": "2379599",
    "end": "2386000"
  },
  {
    "text": "like s3 so a quick glance here again at what",
    "start": "2386000",
    "end": "2392480"
  },
  {
    "text": "this architecture might look like in this case uh i'm breaking it down",
    "start": "2392480",
    "end": "2397520"
  },
  {
    "text": "just to one a z here and so what you see is again inside the orange box would be potentially doubled",
    "start": "2397520",
    "end": "2404000"
  },
  {
    "text": "up to represent the other availability zone that we would have or availability zones if you had more than two",
    "start": "2404000",
    "end": "2410000"
  },
  {
    "text": "so again we have amazon route 53 our dns service directing traffic either to a load",
    "start": "2410000",
    "end": "2416079"
  },
  {
    "text": "balancer or to cloud front to serve up our assets from our elastic load balancer it is",
    "start": "2416079",
    "end": "2421839"
  },
  {
    "text": "going to be pushing traffic down to the web instances that are attached to it which we've now put inside of an auto scaling",
    "start": "2421839",
    "end": "2427599"
  },
  {
    "text": "pool we've moved some sort of application caching needs off of the web instances",
    "start": "2427599",
    "end": "2434400"
  },
  {
    "text": "to elasticash so this that that one cache block could represent an entire cluster of elastic",
    "start": "2434400",
    "end": "2439680"
  },
  {
    "text": "cache nodes storing in memory things like session state or cart data or something similar",
    "start": "2439680",
    "end": "2445280"
  },
  {
    "text": "we're still making use of rds in this case i'm just showing the master but you could assume there would be a standby in another availability zone",
    "start": "2445280",
    "end": "2451520"
  },
  {
    "text": "and we're still making use of read replicas and then moving off to the right a little bit further here we've",
    "start": "2451520",
    "end": "2456880"
  },
  {
    "text": "got our worker instances that are talking to an amazon sqs queue and maybe we've got some sort of internal app instances that are also",
    "start": "2456880",
    "end": "2464480"
  },
  {
    "text": "in this environment also in an auto scaling group and then we're making use of services such as dynamodb or amazon ses",
    "start": "2464480",
    "end": "2472240"
  },
  {
    "text": "again self-healing self-scaling kind of set it and forget it services",
    "start": "2472240",
    "end": "2477520"
  },
  {
    "text": "that you don't have to do a lot of management on and that can handle a large amount of scale with very little oversight from the user",
    "start": "2477520",
    "end": "2484720"
  },
  {
    "text": "of those services",
    "start": "2484720",
    "end": "2487520"
  },
  {
    "text": "so what are some of the next big steps right we've built quite a lot into this application stack here it's it's pretty",
    "start": "2489839",
    "end": "2495520"
  },
  {
    "start": "2492000",
    "end": "2548000"
  },
  {
    "text": "decently complicated but what are the first things that you're going to start running into as you're scaling this out and you're",
    "start": "2495520",
    "end": "2500560"
  },
  {
    "text": "trying to get into the the five to 10 million user range that we're we're talking about today's talk",
    "start": "2500560",
    "end": "2506000"
  },
  {
    "text": "well you'll potentially start to at this some point here run into issues with your database around contention",
    "start": "2506000",
    "end": "2511280"
  },
  {
    "text": "on say that master database that we have so let's say that you've already gone and you've scaled up to the largest",
    "start": "2511280",
    "end": "2516319"
  },
  {
    "text": "instance possible and the most amount of tuning that you can do in the most amount of storage how would you get around solving that",
    "start": "2516319",
    "end": "2522319"
  },
  {
    "text": "issue a couple different options here the first one you usually see people do is federation they're splitting",
    "start": "2522319",
    "end": "2528400"
  },
  {
    "text": "the single database into multiple databases based on function the next option is sharding so splitting",
    "start": "2528400",
    "end": "2534400"
  },
  {
    "text": "one data set up across multiple hosts or you could find that you need to move some functionality into other types of",
    "start": "2534400",
    "end": "2539680"
  },
  {
    "text": "databases potentially in nosql database",
    "start": "2539680",
    "end": "2544240"
  },
  {
    "text": "so talking about federation again a very common database scaling technique here we're taking our one single monolithic",
    "start": "2547839",
    "end": "2554160"
  },
  {
    "start": "2548000",
    "end": "2627000"
  },
  {
    "text": "database we're going to split it up into different functions so in this case i'm giving the examples of taking our master db and splitting it",
    "start": "2554160",
    "end": "2560720"
  },
  {
    "text": "into a forums database and a user's database and a products database which would then give us the ability to",
    "start": "2560720",
    "end": "2566880"
  },
  {
    "text": "scale each of these databases independently of each other again kind of moving closer towards an",
    "start": "2566880",
    "end": "2572240"
  },
  {
    "text": "soa architecture for our databases such that we don't have to worry about let's say that our website was very very",
    "start": "2572240",
    "end": "2578560"
  },
  {
    "text": "heavy in forums we wouldn't want the forums traffic negatively impacting the user's database or",
    "start": "2578560",
    "end": "2584720"
  },
  {
    "text": "products database traffic so again gives us the ability to break",
    "start": "2584720",
    "end": "2590319"
  },
  {
    "text": "this up and scale it independently but then it becomes a little harder to do some cross-function queries you know",
    "start": "2590319",
    "end": "2596160"
  },
  {
    "text": "joining across multiple databases or multiple tables and multiple databases becomes something that you have to push",
    "start": "2596160",
    "end": "2601599"
  },
  {
    "text": "up more into the application layer as opposed to doing it in the database layer but it could essentially delay the need",
    "start": "2601599",
    "end": "2606960"
  },
  {
    "text": "for you to do things such as sharding or nosql until you know much further and much higher capacity but one thing obviously is that",
    "start": "2606960",
    "end": "2613280"
  },
  {
    "text": "it won't help you with single huge functions or tables where again once you reach the point that you're back at the the largest instance",
    "start": "2613280",
    "end": "2620160"
  },
  {
    "text": "and the most amount of read replicas you know what you do after that",
    "start": "2620160",
    "end": "2625359"
  },
  {
    "text": "and so some people will actually completely skip over the federation step and go right into sharding so again here",
    "start": "2626960",
    "end": "2633119"
  },
  {
    "start": "2627000",
    "end": "2718000"
  },
  {
    "text": "in sharding we're taking our single data set that we have and instead of breaking off by function",
    "start": "2633119",
    "end": "2638240"
  },
  {
    "text": "we're taking the entire data set and spreading it out across some number of databases so",
    "start": "2638240",
    "end": "2643920"
  },
  {
    "text": "some users are going to be on chart a some are going to be on b some are going to be on c and so forth and so would be the same",
    "start": "2643920",
    "end": "2650240"
  },
  {
    "text": "for any type of data that we had in our database so this becomes much more complicated at the application layer",
    "start": "2650240",
    "end": "2656960"
  },
  {
    "text": "and so you're probably going to be leaning on some sort of orm to help support those database queries and that database",
    "start": "2656960",
    "end": "2662400"
  },
  {
    "text": "knowledge but what's nice is that there's potentially no practical limit on scalability sharding is something that a lot of very",
    "start": "2662400",
    "end": "2668880"
  },
  {
    "text": "large scale organizations do companies such as you know flickr and",
    "start": "2668880",
    "end": "2675280"
  },
  {
    "text": "instagram and pinterest and etsy and to degree facebook and google all make use of some sort of",
    "start": "2675280",
    "end": "2681200"
  },
  {
    "text": "sharding horizontally to help them store massive quantities of information there's definitely some operational",
    "start": "2681200",
    "end": "2687359"
  },
  {
    "text": "complexity and sophistication that you're going to have to deal with but again it's the kind of thing that once you've worked out some of the kinks",
    "start": "2687359",
    "end": "2692800"
  },
  {
    "text": "you could actually have a little bit more peace of mind that it's easier to to shard out your database and continue to scale that out",
    "start": "2692800",
    "end": "2698960"
  },
  {
    "text": "horizontally and you're going to be looking at charting on some sort of a function or some sort of a key space",
    "start": "2698960",
    "end": "2704160"
  },
  {
    "text": "again very much application specific and sharding is something that could be done in a traditional relational database",
    "start": "2704160",
    "end": "2709839"
  },
  {
    "text": "or potentially by a nosql database",
    "start": "2709839",
    "end": "2718800"
  },
  {
    "start": "2718000",
    "end": "2785000"
  },
  {
    "text": "and so other things that you'll potentially run into at some point is that you'll potentially start to run",
    "start": "2718800",
    "end": "2724720"
  },
  {
    "text": "into issues with the speed and performance of your applications so you'll want to make sure that you have really strong monitoring and",
    "start": "2724720",
    "end": "2730480"
  },
  {
    "text": "metrics and logging in place again if you can't build it internally look at outsourcing it",
    "start": "2730480",
    "end": "2736000"
  },
  {
    "text": "this is definitely the kind of space where there are a lot of really wonderful third-party tools to help you from a from a very small scale get",
    "start": "2736000",
    "end": "2742720"
  },
  {
    "text": "started a lot of great companies out there that have very easy pricing baked in to help",
    "start": "2742720",
    "end": "2748160"
  },
  {
    "text": "you move forward and you also want to be paying attention to what your customers are saying works well",
    "start": "2748160",
    "end": "2753440"
  },
  {
    "text": "first what doesn't right are customers complaining about your forums pages being slow or the user",
    "start": "2753440",
    "end": "2759280"
  },
  {
    "text": "customization page is being slow or maybe the checkout process is really slow you know gathering that kind of feed put",
    "start": "2759280",
    "end": "2765280"
  },
  {
    "text": "from your customers that kind of feedback was sorry",
    "start": "2765280",
    "end": "2770640"
  },
  {
    "text": "is really really valuable in helping you decide on what to focus on when you're looking to scale an application like this",
    "start": "2770640",
    "end": "2776319"
  },
  {
    "text": "you really want to try to work on squeezing out as much performance from every component or service that you could",
    "start": "2776319",
    "end": "2783040"
  },
  {
    "start": "2785000",
    "end": "2908000"
  },
  {
    "text": "so just an example here of some of the most kind of important metrics i feel that people need to look at host level metrics definitely important",
    "start": "2785040",
    "end": "2792319"
  },
  {
    "text": "but not the kind of thing that you want to spend too much time focusing on unless you're really trying to troubleshoot",
    "start": "2792319",
    "end": "2798400"
  },
  {
    "text": "individual components in your application much more important are probably aggregate level metrics so looking at",
    "start": "2798400",
    "end": "2804160"
  },
  {
    "text": "metrics that go across the entire pool of hosts let's say the entire web tier or the entire caching tier or the application",
    "start": "2804160",
    "end": "2810960"
  },
  {
    "text": "tier you know how is cpu performing overall in that cluster how is latency of your service on that",
    "start": "2810960",
    "end": "2816720"
  },
  {
    "text": "that individual pool behaving and these are the types of things that you would normally key off say auto scaling",
    "start": "2816720",
    "end": "2822400"
  },
  {
    "text": "based off of is the performance of those aggregate level metrics equally important are things like log",
    "start": "2822400",
    "end": "2827760"
  },
  {
    "text": "analysis your applications today are definitely generating lots of logs you know spend the time to get a good",
    "start": "2827760",
    "end": "2834560"
  },
  {
    "text": "log analysis tool often there's you know needles in the haystack that you're looking to dig out",
    "start": "2834560",
    "end": "2840400"
  },
  {
    "text": "but those needles could be extremely important in terms of understanding what's going on and what might be going",
    "start": "2840400",
    "end": "2845520"
  },
  {
    "text": "wrong with your application and then lastly this is one that i'm always really surprised to find",
    "start": "2845520",
    "end": "2851119"
  },
  {
    "text": "people skipping is external site performance what are your users actually seeing well",
    "start": "2851119",
    "end": "2856480"
  },
  {
    "text": "it's definitely important for you to know internally how your app hosts are performing and how your uh applications are performing what is",
    "start": "2856480",
    "end": "2863599"
  },
  {
    "text": "the actual end user experience what are they seeing and are you tracking that and graphing",
    "start": "2863599",
    "end": "2868880"
  },
  {
    "text": "it out properly so these two gra these four graphs that i have here the top two are actually",
    "start": "2868880",
    "end": "2874160"
  },
  {
    "text": "from cloudwatch again our metrics and monitoring service uh the one on the bottom left here with the log analysis this is from a tool",
    "start": "2874160",
    "end": "2880640"
  },
  {
    "text": "called uh cabana which ties in with another log tool called logstash great open source tools",
    "start": "2880640",
    "end": "2887119"
  },
  {
    "text": "really really flexible and then on the bottom right is this is a graph from the website pingdom",
    "start": "2887119",
    "end": "2892559"
  },
  {
    "text": "which is a third party performance tracking site for web applications",
    "start": "2892559",
    "end": "2897760"
  },
  {
    "text": "all good easy places to get started and something that you should definitely spend time on if you're building your applications on aws",
    "start": "2897760",
    "end": "2905920"
  },
  {
    "text": "and what i really like to say is that you know not having proper monitoring or metrics in place is like flying a plane with an eye mask",
    "start": "2907359",
    "end": "2914000"
  },
  {
    "start": "2908000",
    "end": "2997000"
  },
  {
    "text": "on and a thunderstorm and the co-pilot tells you your wings on fire you know how do you react",
    "start": "2914000",
    "end": "2920000"
  },
  {
    "text": "how bad is the fire what wing is it what are you going to do you can't make these kind of decisions",
    "start": "2920000",
    "end": "2925200"
  },
  {
    "text": "in terms of scaling or building your application without having some of these tools in place",
    "start": "2925200",
    "end": "2931440"
  },
  {
    "text": "and so why we ourselves here aws don't necessarily have a whole lot of applications to help you do this",
    "start": "2931440",
    "end": "2936720"
  },
  {
    "text": "what we do have is some really great partners and third parties that work with us and that integrate tightly with",
    "start": "2936720",
    "end": "2942240"
  },
  {
    "text": "the platform you can actually find a lot of these on our marketplace which you can find at aws.amazon.com",
    "start": "2942240",
    "end": "2948160"
  },
  {
    "text": "marketplace marketplace is a site that we have where you can find and research and then buy software",
    "start": "2948160",
    "end": "2954880"
  },
  {
    "text": "to use on aws a lot of these companies that are listed there have also followed our pricing",
    "start": "2954880",
    "end": "2960720"
  },
  {
    "text": "model so you know pay for what you use potentially pay just on hourly basis lots of flexibility that will help you",
    "start": "2960720",
    "end": "2967599"
  },
  {
    "text": "in you know using these tools and making them cost effective for you as you grow and scale your business and your organization",
    "start": "2967599",
    "end": "2973839"
  },
  {
    "text": "a lot of them have built right in the ability to launch in just minutes um from you know when you find",
    "start": "2973839",
    "end": "2980800"
  },
  {
    "text": "what you're looking for and again hundreds of different products across",
    "start": "2980800",
    "end": "2986319"
  },
  {
    "text": "you know 20 plus different categories so i really encourage you to take a look at the marketplace and see what's listed there",
    "start": "2986319",
    "end": "2993119"
  },
  {
    "start": "2997000",
    "end": "3209000"
  },
  {
    "text": "so moving forward now to you know i'm sorry um still dealing with uh",
    "start": "2997200",
    "end": "3003520"
  },
  {
    "text": "getting above you know the 5 million mark to the 10 million users here manage your infrastructure also become",
    "start": "3003520",
    "end": "3008800"
  },
  {
    "text": "an ever increasing uh part of your time um managing infrastructure at scale is definitely a",
    "start": "3008800",
    "end": "3014640"
  },
  {
    "text": "challenge i've seen it personally myself and managing environments that have you know hundreds of server instances",
    "start": "3014640",
    "end": "3020960"
  },
  {
    "text": "running um that that takes up a lot of time it's definitely gonna require some you know dedicated staff on your part to",
    "start": "3020960",
    "end": "3026720"
  },
  {
    "text": "to take time and to you know care for this environment what i definitely recommend is looking at different tools to help you out with",
    "start": "3026720",
    "end": "3032720"
  },
  {
    "text": "this though so tools to help manage aws resources tools to manage software configuration on your",
    "start": "3032720",
    "end": "3038400"
  },
  {
    "text": "actual instances and then different tools to do things like automated data analysis of your logs and your user",
    "start": "3038400",
    "end": "3044960"
  },
  {
    "text": "actions and other things that might be going on some of the tools that i mentioned before could definitely help you with this the",
    "start": "3044960",
    "end": "3050400"
  },
  {
    "text": "third category here in terms of tools that can help you with managing uh",
    "start": "3050400",
    "end": "3055680"
  },
  {
    "text": "your aws environment there's a number of different tools that we do have that are really really helpful for people",
    "start": "3055680",
    "end": "3061839"
  },
  {
    "text": "so starting from the left and moving right we have a service called elastic bean stock you can think of it very much akin to a",
    "start": "3061839",
    "end": "3068400"
  },
  {
    "text": "platform as a service type tool where you throw your code into elastic bean stock and it helps build out a",
    "start": "3068400",
    "end": "3074160"
  },
  {
    "text": "highly available automatically scaling infrastructure for you ties in things like elb and auto scaling",
    "start": "3074160",
    "end": "3080400"
  },
  {
    "text": "groups and ec2 instance configuration and all you really need to do is just toss your code",
    "start": "3080400",
    "end": "3085520"
  },
  {
    "text": "at beanstalk and you have a couple of different parameters that you need to select up front and then again it just builds that for you really great",
    "start": "3085520",
    "end": "3092480"
  },
  {
    "text": "tool for those who are getting started new on aws or if you really want to be a little bit",
    "start": "3092480",
    "end": "3097760"
  },
  {
    "text": "more hands-off with the your actual infrastructure on top of aws",
    "start": "3097760",
    "end": "3103359"
  },
  {
    "text": "the next service we have is something that we launched earlier this year called opsworks opsworks kind of similar to beanstalk",
    "start": "3103359",
    "end": "3109359"
  },
  {
    "text": "although it gives you a bit more configuration and bit more hands-on control involved with opfworks you",
    "start": "3109359",
    "end": "3115440"
  },
  {
    "text": "actually define out different layers of your infrastructure stack so a web tier an application tier a database",
    "start": "3115440",
    "end": "3121839"
  },
  {
    "text": "tier a load balancing tier whatever it might be you control those individually in opsworks",
    "start": "3121839",
    "end": "3127520"
  },
  {
    "text": "and it has different tools to help you deploy new code and provision those resources it also",
    "start": "3127520",
    "end": "3132880"
  },
  {
    "text": "ties in directly with ops code chef so the instances when they come up can help",
    "start": "3132880",
    "end": "3138079"
  },
  {
    "text": "or can make use of chef cookbooks to help deploy you know applications or configuration",
    "start": "3138079",
    "end": "3144160"
  },
  {
    "text": "files or whatever it might be so another tool that we have to really help make administration of services much much easier",
    "start": "3144160",
    "end": "3150960"
  },
  {
    "text": "further on the right here we have cloud formation service that i'm particularly very fond of cloudformation is a template driven",
    "start": "3150960",
    "end": "3157040"
  },
  {
    "text": "service that we have to help you deploy out your infrastructure in a very repeatable",
    "start": "3157040",
    "end": "3162559"
  },
  {
    "text": "controllable way so you define these json templates that would define resources from ec2 instances to security",
    "start": "3162559",
    "end": "3169839"
  },
  {
    "text": "groups to rds instances to vpc subnets whatever you could think of and",
    "start": "3169839",
    "end": "3176800"
  },
  {
    "text": "use these files to then modify and update your infrastructure again in a very very controlled way",
    "start": "3176800",
    "end": "3181920"
  },
  {
    "text": "and so cloud formation is a very powerful tool that a lot of organizations as they",
    "start": "3181920",
    "end": "3187359"
  },
  {
    "text": "mature in aws begin to make use of and then obviously lastly is the ability for you just to manage raw ec2 instances",
    "start": "3187359",
    "end": "3194400"
  },
  {
    "text": "something that will definitely not work for you with scale especially when you're dealing with the hundreds of instances that you would",
    "start": "3194400",
    "end": "3200160"
  },
  {
    "text": "in an application that would be serving you know potentially millions of users",
    "start": "3200160",
    "end": "3208240"
  },
  {
    "text": "going along with the aws management tools you also want to be thinking about some host management configuration tools",
    "start": "3208240",
    "end": "3213760"
  },
  {
    "start": "3209000",
    "end": "3277000"
  },
  {
    "text": "so again i had mentioned how opsworks ties in with chef we do see a lot of customers using obstacles chef or potentially puppet",
    "start": "3213760",
    "end": "3220000"
  },
  {
    "text": "labs as puppet to do host-based configuration management of their instances",
    "start": "3220000",
    "end": "3225040"
  },
  {
    "text": "they both more or less do a lot of the same things these days they're not too too dissimilar syntax and some",
    "start": "3225040",
    "end": "3230079"
  },
  {
    "text": "methodology might be a little different but we really recommend that customers look into a tool like one of the two of",
    "start": "3230079",
    "end": "3235599"
  },
  {
    "text": "these or one of the other ones that are very similar to these things like ansible or salt",
    "start": "3235599",
    "end": "3240720"
  },
  {
    "text": "they really really help you with",
    "start": "3240720",
    "end": "3244960"
  },
  {
    "text": "managing and deploying the infrastructure that you have",
    "start": "3246960",
    "end": "3252000"
  },
  {
    "text": "and so you really want to spend time learning these services understanding how they work and how you can best utilize them",
    "start": "3252000",
    "end": "3258640"
  },
  {
    "text": "and it's going to be really difficult for you to be able to scale on aws",
    "start": "3258640",
    "end": "3264800"
  },
  {
    "text": "without having one of these tools so again spend some time to get to know them and to uh to you know build them into your",
    "start": "3264800",
    "end": "3271359"
  },
  {
    "text": "infrastructure so a quick review obviously we've talked",
    "start": "3271359",
    "end": "3280000"
  },
  {
    "start": "3277000",
    "end": "3504000"
  },
  {
    "text": "about a lot of different things today a lot of different things that you need to think about when you're building for scale in aws",
    "start": "3280000",
    "end": "3285680"
  },
  {
    "text": "multi-ageing your infrastructure again one of the key key core components of building on aws",
    "start": "3285680",
    "end": "3290880"
  },
  {
    "text": "making use of those different azs within a single region making sure that you're evenly spread across them",
    "start": "3290880",
    "end": "3296640"
  },
  {
    "text": "either manually or via using services like auto scaling an elastic load balancer",
    "start": "3296640",
    "end": "3301760"
  },
  {
    "text": "try to leverage as much as possible the the self scaling and self self-healing services that we do have so things like elb s3",
    "start": "3301760",
    "end": "3310160"
  },
  {
    "text": "sms or sqs simple workflow or scs etc all the different services that we have",
    "start": "3310160",
    "end": "3315599"
  },
  {
    "text": "here for this try to build a redundancy at every level right try to avoid any single single point of failure that you",
    "start": "3315599",
    "end": "3321440"
  },
  {
    "text": "might have in your application stack and",
    "start": "3321440",
    "end": "3326720"
  },
  {
    "text": "you know really try to think about how your components are talking to each other to make sure of that",
    "start": "3327839",
    "end": "3335839"
  },
  {
    "text": "again start with sql seriously straw recommendation from us there's a lot of cool technology out there",
    "start": "3336000",
    "end": "3341839"
  },
  {
    "text": "but you know look at your organization and what you're doing and how you're using it or how you're accessing your data and",
    "start": "3341839",
    "end": "3348319"
  },
  {
    "text": "how your application might be accessing your data and really pay attention to the kind of database technology that you end up",
    "start": "3348319",
    "end": "3354319"
  },
  {
    "text": "going with move to nosql if it really makes sense again really think hard and",
    "start": "3354319",
    "end": "3360240"
  },
  {
    "text": "really fight hard to determine that that is the right choice for you to make try to leverage managed or low touch",
    "start": "3360240",
    "end": "3366640"
  },
  {
    "text": "services as much as you can again things like dynamodb where pretty much zero administration outside",
    "start": "3366640",
    "end": "3372640"
  },
  {
    "text": "of provisioning of it will definitely make your life easier as you're building out a new application or scaling a new site think really hard",
    "start": "3372640",
    "end": "3380720"
  },
  {
    "text": "about soa splitting those individual application components and tiers that you have into you know individual components",
    "start": "3380720",
    "end": "3388880"
  },
  {
    "text": "individual services again it's really the key to getting your really scalable infrastructure",
    "start": "3388880",
    "end": "3394240"
  },
  {
    "text": "is making use of soa try to use auto scaling once you're ready to but try to make sure that you're",
    "start": "3394240",
    "end": "3399520"
  },
  {
    "text": "definitely making the right choices in terms of what you're auto scaling and how you're auto scaling you're going to want to make sure that",
    "start": "3399520",
    "end": "3405040"
  },
  {
    "text": "you have good host-based configuration management tools in place make sure that you've moved",
    "start": "3405040",
    "end": "3410960"
  },
  {
    "text": "anything that is stateful off of those hosts and you know are able to tolerate the",
    "start": "3410960",
    "end": "3416000"
  },
  {
    "text": "failure of hosts based on auto scaling doing a downscaly action try to use",
    "start": "3416000",
    "end": "3421119"
  },
  {
    "text": "automation tools your infrastructure wherever you can again both the ones that we provide and the ones that are out there from third",
    "start": "3421119",
    "end": "3426559"
  },
  {
    "text": "parties it's very difficult at scale to do this kind of stuff manually see a lot of companies waste a lot of",
    "start": "3426559",
    "end": "3432319"
  },
  {
    "text": "time and resources and doing things manual when spending the time to learn automation tool would definitely be helpful",
    "start": "3432319",
    "end": "3438799"
  },
  {
    "text": "and then you know again make sure that you have good metrics monitoring logging tools in place",
    "start": "3438799",
    "end": "3444160"
  },
  {
    "text": "you can't make educated decisions without that data and you know right from the beginning try to have those tools uh set up",
    "start": "3444160",
    "end": "3451119"
  },
  {
    "text": "and if you can't run it yourself you don't want to run it yourself look at some of the third parties that exist out there that could do it for you either",
    "start": "3451119",
    "end": "3457119"
  },
  {
    "text": "in a hosted fashion or you know provide bundled software and obviously one of the most key",
    "start": "3457119",
    "end": "3462240"
  },
  {
    "text": "important things here is don't reinvent the wheel don't spend time you know trying to build services on your own",
    "start": "3462240",
    "end": "3468559"
  },
  {
    "text": "that other people might have for you that the cost of building it could well well well well outweigh the cost of",
    "start": "3468559",
    "end": "3475280"
  },
  {
    "text": "using a third party",
    "start": "3475280",
    "end": "3478160"
  },
  {
    "text": "so putting this all together we should be able to handle you know our golden 10 million plus users here",
    "start": "3482079",
    "end": "3488240"
  },
  {
    "text": "again it's all a little bit of those components it's definitely a lot of working through whatever kinks you might have",
    "start": "3488240",
    "end": "3493359"
  },
  {
    "text": "and you know making sure that you are on top of you know the data and what's actually happening inside of your",
    "start": "3493359",
    "end": "3500798"
  },
  {
    "text": "infrastructure moving beyond 10 million users you know",
    "start": "3500839",
    "end": "3506880"
  },
  {
    "start": "3504000",
    "end": "3589000"
  },
  {
    "text": "to infinity and what goes on above this uh this amount it's going to",
    "start": "3506880",
    "end": "3512400"
  },
  {
    "text": "be a lot of what we've covered today right it's going to get you up above the tens of millions uh pretty much what we've covered today",
    "start": "3512400",
    "end": "3519440"
  },
  {
    "text": "again just kind of continually iterating on top of those patterns and soa and really fine-tuning a performance",
    "start": "3519440",
    "end": "3525839"
  },
  {
    "text": "tweaking of the things that might be going on inside of your your infrastructure and your applications",
    "start": "3525839",
    "end": "3533119"
  },
  {
    "text": "things that you'll definitely want to take into account and want to think about beyond again you know really fine-tuning",
    "start": "3533280",
    "end": "3539280"
  },
  {
    "text": "of your application and really heavily soa is maybe potentially looking at going multi-region again we really don't",
    "start": "3539280",
    "end": "3545119"
  },
  {
    "text": "encourage customers to think about multi-region up front outside of potentially maybe dr",
    "start": "3545119",
    "end": "3550720"
  },
  {
    "text": "reasons but again multi-az inside of a region can usually help you out with a lot of that",
    "start": "3550720",
    "end": "3556880"
  },
  {
    "text": "you might potentially one year above 10 million users need to start thinking about doing custom solutions think about actually building some of",
    "start": "3556880",
    "end": "3563040"
  },
  {
    "text": "these components yourself that are very purposeful and tied down to exactly uh you know",
    "start": "3563040",
    "end": "3569119"
  },
  {
    "text": "what you're doing and how your application works and then also doing really deep analysis of your entire",
    "start": "3569119",
    "end": "3574400"
  },
  {
    "text": "stack so really looking at all the different components all the different services and really diving deep in exactly how",
    "start": "3574400",
    "end": "3580160"
  },
  {
    "text": "each of those things are performing in order for you to really get the most out of them",
    "start": "3580160",
    "end": "3587440"
  },
  {
    "text": "so what are the next steps we believe in putting as much information and as much documentation as",
    "start": "3587440",
    "end": "3594240"
  },
  {
    "start": "3589000",
    "end": "3599000"
  },
  {
    "text": "we can publicly out on the internet which is why if you go to aws amazon.com documentation",
    "start": "3594240",
    "end": "3600480"
  },
  {
    "text": "you will find very in-depth documentation for all of our services getting started guides best practices",
    "start": "3600480",
    "end": "3607040"
  },
  {
    "text": "things like that you'll find that are available to you if you go to amazon aws to amazon.com",
    "start": "3607040",
    "end": "3613200"
  },
  {
    "text": "architecture you will find different architectural patterns case studies customer success stories of",
    "start": "3613200",
    "end": "3619760"
  },
  {
    "text": "what they've been able to build and architect on top of aws to handle you know massive scale",
    "start": "3619760",
    "end": "3625599"
  },
  {
    "text": "operations and then also aws to amazon.com startups for those of you that are from a startup",
    "start": "3625599",
    "end": "3631599"
  },
  {
    "text": "that are listening in on the phone again lots of uh interesting case studies and",
    "start": "3631599",
    "end": "3636880"
  },
  {
    "text": "references that you can build off of we also encourage you to spend some time playing",
    "start": "3636880",
    "end": "3642079"
  },
  {
    "text": "with our free tier so amazon aws amazon.com free almost all the services that we",
    "start": "3642079",
    "end": "3648480"
  },
  {
    "text": "have are part of the free tier and enables you to a certain amount of usage or capacity",
    "start": "3648480",
    "end": "3653599"
  },
  {
    "text": "over a one year period your first year as a customer and it's a great place to just kind of get your hands dirty and",
    "start": "3653599",
    "end": "3658880"
  },
  {
    "text": "understand how things work and get to you know turn some knobs play with things a little bit",
    "start": "3658880",
    "end": "3665200"
  },
  {
    "text": "also really encourage you to reach out to um forums a really robust community they're in the",
    "start": "3665839",
    "end": "3672160"
  },
  {
    "text": "forum space to help you you know solve any problems that you might be having beyond that we also",
    "start": "3672160",
    "end": "3678000"
  },
  {
    "text": "definitely encourage you to look at signing up for support if you're running a production application on aws",
    "start": "3678000",
    "end": "3684400"
  },
  {
    "text": "it's extremely recommended that you are a member of a support tier because if there's just so many",
    "start": "3684400",
    "end": "3690240"
  },
  {
    "text": "different benefits of working with our support organization and helping and then being able to help you troubleshoot things and",
    "start": "3690240",
    "end": "3696000"
  },
  {
    "text": "help answer questions for how things work and then lastly you know reach out to a local account manager",
    "start": "3696000",
    "end": "3701359"
  },
  {
    "text": "um if you don't have one of these actually one of the best ways to get one of these is to message support and say that you would",
    "start": "3701359",
    "end": "3706799"
  },
  {
    "text": "like to talk to somebody from the account team and they could put you in touch with the right people based on wherever you are",
    "start": "3706799",
    "end": "3712079"
  },
  {
    "text": "in the world and also help you get in touch with resources like myself",
    "start": "3712079",
    "end": "3717838"
  },
  {
    "text": "and so with that i want to thank you for listening today we're now going to try to do some q a",
    "start": "3718400",
    "end": "3724720"
  },
  {
    "text": "here for the next 30 minutes i have a hard stop at 1 30 pm eastern here",
    "start": "3724720",
    "end": "3730319"
  },
  {
    "text": "but thank you again all for listening as bowen mentioned earlier the slides and also recording of this",
    "start": "3730319",
    "end": "3736319"
  },
  {
    "text": "will be available for you sometime in the next few weeks and you should receive an email about that",
    "start": "3736319",
    "end": "3743039"
  },
  {
    "text": "but again i hope that you all found this useful and learned something and thanks again for your time",
    "start": "3743039",
    "end": "3749839"
  },
  {
    "text": "so one second here as i go through and try and filter through the questions here",
    "start": "3751599",
    "end": "3757200"
  },
  {
    "text": "there's quite a bit",
    "start": "3757200",
    "end": "3760240"
  },
  {
    "text": "someone had asked earlier is the latency between regions significant i want to",
    "start": "3763039",
    "end": "3768400"
  },
  {
    "text": "know if i have users uploading to s3 from us west and us east to a bucket in usus",
    "start": "3768400",
    "end": "3773920"
  },
  {
    "text": "oregon is a difference in latency uh negligible so you know latency is going",
    "start": "3773920",
    "end": "3781119"
  },
  {
    "text": "to depend on a lot of things you're really going to want to think about where the users are uploading from",
    "start": "3781119",
    "end": "3788400"
  },
  {
    "text": "what i've seen is that if you have people uploading save from a mobile device it's going to be really highly",
    "start": "3788400",
    "end": "3793440"
  },
  {
    "text": "dependent on the carrier how close they are to a tower where they are in any given space and so uh",
    "start": "3793440",
    "end": "3801359"
  },
  {
    "text": "that is actually going to be the bigger concern than you have versus any sort of lanes that might be on our",
    "start": "3801359",
    "end": "3806559"
  },
  {
    "text": "side and so if you're really looking to shrink that i've definitely seen applications where customers of our",
    "start": "3806559",
    "end": "3813760"
  },
  {
    "text": "service will actually based on where the devices is loading the application from",
    "start": "3813760",
    "end": "3819440"
  },
  {
    "text": "actually point users to the closest s3 region to them there's a lot of",
    "start": "3819440",
    "end": "3824799"
  },
  {
    "text": "different ways that you could do this our route 53 service has the ability to do latency based routing",
    "start": "3824799",
    "end": "3830160"
  },
  {
    "text": "so you can actually be a dns query in the application figure out what region they should be talking to",
    "start": "3830160",
    "end": "3835920"
  },
  {
    "text": "and then point the application at that end point and then what you do with that data afterwards i guess is kind of highly dependent on",
    "start": "3835920",
    "end": "3841920"
  },
  {
    "text": "your application um so that's something that i guess you would have to you know build into your application",
    "start": "3841920",
    "end": "3848880"
  },
  {
    "text": "thank you for that question though um someone just asked the question of",
    "start": "3848880",
    "end": "3855839"
  },
  {
    "text": "when considering failover are zones within a region physically separated yes so availability zones are separate",
    "start": "3855839",
    "end": "3863680"
  },
  {
    "text": "holy separate data centers and holy separate plots of land inside of a given region they are 5 to 15 miles apart",
    "start": "3863680",
    "end": "3871599"
  },
  {
    "text": "different power grids different flood planes different fault lines were applicable different tier 1 isp connections go into",
    "start": "3871599",
    "end": "3878720"
  },
  {
    "text": "each of them so you should be able to think of them as complete equals inside of a region and you again want to be building",
    "start": "3878720",
    "end": "3885119"
  },
  {
    "text": "equally across them with the idea being that any component in your application could fail",
    "start": "3885119",
    "end": "3890319"
  },
  {
    "text": "all the way up to an az level let's say and hopefully your application could continue",
    "start": "3890319",
    "end": "3895440"
  },
  {
    "text": "to to live on",
    "start": "3895440",
    "end": "3898480"
  },
  {
    "text": "someone asked the question of do i have any suggestions in terms of uh dealing with postgres",
    "start": "3902400",
    "end": "3909520"
  },
  {
    "text": "or postgresql so right now today we don't have a service that provides",
    "start": "3909520",
    "end": "3915280"
  },
  {
    "text": "postgres for you we did actually just publish a white paper on postgres if you google",
    "start": "3915280",
    "end": "3920319"
  },
  {
    "text": "aws postgres white paper you should find a link to it it includes a lot of our best practices",
    "start": "3920319",
    "end": "3925359"
  },
  {
    "text": "for running postgres at scale on aws uh it's definitely something that we hear a lot of people about",
    "start": "3925359",
    "end": "3931760"
  },
  {
    "text": "uh a lot of people requesting i'm sorry and so um you know hopefully at some point in",
    "start": "3931760",
    "end": "3937039"
  },
  {
    "text": "the future we'll do something uh with postgrass another question just came in any tips",
    "start": "3937039",
    "end": "3943440"
  },
  {
    "text": "on code promotion strategies for application tiers or soa components",
    "start": "3943440",
    "end": "3951520"
  },
  {
    "text": "code promotion strategies um i'm not sure if this is referencing",
    "start": "3951520",
    "end": "3958960"
  },
  {
    "text": "on the people side of things or on the application side of things",
    "start": "3958960",
    "end": "3964960"
  },
  {
    "text": "in terms of getting people to think about things you really want to spend the time to you know get",
    "start": "3964960",
    "end": "3970559"
  },
  {
    "text": "on a whiteboard and break out all the different flows that you have within your architecture within your",
    "start": "3970559",
    "end": "3976839"
  },
  {
    "text": "application and think about how you could separate those out so spend time with you know",
    "start": "3976839",
    "end": "3981920"
  },
  {
    "text": "the developers developers and the product organization to think about how can we break apart this larger application",
    "start": "3981920",
    "end": "3988400"
  },
  {
    "text": "and uh you know deal with those individual components hopefully that is the uh hopefully that's what you were",
    "start": "3988400",
    "end": "3994319"
  },
  {
    "text": "looking for at that question try to get some of the questions that were from earlier",
    "start": "3994319",
    "end": "4001359"
  },
  {
    "text": "um so in terms of someone said for metrics do we have any suggestions for",
    "start": "4001359",
    "end": "4006720"
  },
  {
    "text": "third-party providers um again i really encourage you to look at our marketplace",
    "start": "4006720",
    "end": "4011760"
  },
  {
    "text": "um the companies that are listed on the marketplace have definitely been vetted by us we've definitely been a part of understanding their solution",
    "start": "4011760",
    "end": "4018400"
  },
  {
    "text": "and how uh you know well it can work for our customers so there's really a lot of different",
    "start": "4018400",
    "end": "4024000"
  },
  {
    "text": "options depending on exactly what it is that you're looking to do and i just really encourage you to take a look there and",
    "start": "4024000",
    "end": "4030799"
  },
  {
    "text": "you know explore a couple different options",
    "start": "4030799",
    "end": "4035839"
  },
  {
    "text": "someone asked in terms of the self-healing clients that are written specifically for elastic cash that's correct right now",
    "start": "4039280",
    "end": "4045680"
  },
  {
    "text": "today those clients only would work with elastic cache they would not work with",
    "start": "4045680",
    "end": "4050799"
  },
  {
    "text": "your own host in memcache and it has to do with how the clients have the ability to talk to the control plate to find out what the",
    "start": "4050799",
    "end": "4057440"
  },
  {
    "text": "new uh service endpoints or node endpoint names would be in part of an elastic cluster",
    "start": "4057440",
    "end": "4076160"
  },
  {
    "text": "um uh someone had actually asked here when i said you know 10 million users do i mean",
    "start": "4076160",
    "end": "4083039"
  },
  {
    "text": "the ability to serve 10 million at peak load um you know kind of fuzzy fuzzy number in the title",
    "start": "4083039",
    "end": "4091119"
  },
  {
    "text": "here it could mean 10 million total users on your site could potentially mean 10 million at peak low it really depends on what your",
    "start": "4091119",
    "end": "4096640"
  },
  {
    "text": "application is how heavy that is and you know what's involved in",
    "start": "4096640",
    "end": "4102159"
  },
  {
    "text": "you know your per user activity but generally speaking i think that the",
    "start": "4102159",
    "end": "4107199"
  },
  {
    "text": "recommendations that we go through in in this webinar um the architectural guidance that we",
    "start": "4107199",
    "end": "4112480"
  },
  {
    "text": "provide is the kind of thing that again depending on your application following these design patterns and get",
    "start": "4112480",
    "end": "4117838"
  },
  {
    "text": "you to a very very high uh you know level of concurrency level of number of users and and all of that",
    "start": "4117839",
    "end": "4126080"
  },
  {
    "text": "a couple of people are asking very very specific questions about their architectures i unfortunately wouldn't want to go into",
    "start": "4126080",
    "end": "4132960"
  },
  {
    "text": "anything really specific on this call um i definitely recommend that if you are running into",
    "start": "4132960",
    "end": "4138318"
  },
  {
    "text": "issues with uh services or you're running into something that you don't think is quite right definitely the kind of thing that you",
    "start": "4138319",
    "end": "4144400"
  },
  {
    "text": "want to reach out to support about and you know see if they have some further guidance there",
    "start": "4144400",
    "end": "4150718"
  },
  {
    "text": "someone just asked what is the typical use case for across region architecture",
    "start": "4152560",
    "end": "4158080"
  },
  {
    "text": "so it depends sometimes it could be let's say that you have a highly latency uh you know um",
    "start": "4158080",
    "end": "4167440"
  },
  {
    "text": "highly latency concerned application where you need to let's say serve out things like online advertisements or be able to get",
    "start": "4167679",
    "end": "4175199"
  },
  {
    "text": "data from points around the globe very very quickly and so that might be a place where you do want to end up going",
    "start": "4175199",
    "end": "4182000"
  },
  {
    "text": "with a you know cross reason architecture where you are using again our latency based routing",
    "start": "4182000",
    "end": "4187758"
  },
  {
    "text": "potentially to direct traffic to the closest region um other places where people might do that is for things like",
    "start": "4187759",
    "end": "4194480"
  },
  {
    "text": "uh dr on a cross regional level let's say that you have such an important application that you",
    "start": "4194480",
    "end": "4199600"
  },
  {
    "text": "are concerned about you know something horrible happening that destroys an amazon region",
    "start": "4199600",
    "end": "4206719"
  },
  {
    "text": "you know how how important is it your application to be available inside of another region and that really",
    "start": "4206719",
    "end": "4211920"
  },
  {
    "text": "comes down to a business need for that and you know again adds a lot of complication to what you might be doing",
    "start": "4211920",
    "end": "4218480"
  },
  {
    "text": "in your application um",
    "start": "4218480",
    "end": "4225520"
  },
  {
    "text": "so someone asked here can i go over what you mean by build service also what services are",
    "start": "4228159",
    "end": "4234320"
  },
  {
    "text": "available from metrics and logging in terms of a build service i don't",
    "start": "4234320",
    "end": "4240239"
  },
  {
    "text": "recall exactly mentioning that you don't really have anything that",
    "start": "4240239",
    "end": "4245280"
  },
  {
    "text": "would build application code for you we do have services that would build out",
    "start": "4245280",
    "end": "4250719"
  },
  {
    "text": "infrastructure for you so elastic bean stock where you push into it your your code or your deployable",
    "start": "4250719",
    "end": "4259040"
  },
  {
    "text": "you know application that you might have it will stand up ec2 instances and auto scaling groups",
    "start": "4259040",
    "end": "4264560"
  },
  {
    "text": "and eobs and stuff like that for you in terms of talking about services that are good for metrics and",
    "start": "4264560",
    "end": "4270080"
  },
  {
    "text": "logging so we do have a service called cloudwatch that is built in across many many different components of our",
    "start": "4270080",
    "end": "4275679"
  },
  {
    "text": "platform to help you gather metrics from things like ec2 instances or auto scaling",
    "start": "4275679",
    "end": "4281280"
  },
  {
    "text": "groups or rds instances and you can use those metrics to help you know troubleshoot your infrastructure to help",
    "start": "4281280",
    "end": "4287520"
  },
  {
    "text": "um understand you know what's utilizing parts of your infrastructure and so that is probably the main service",
    "start": "4287520",
    "end": "4294320"
  },
  {
    "text": "that we have to help with with metrics collection and monitoring in terms of host logging or application",
    "start": "4294320",
    "end": "4300640"
  },
  {
    "text": "logging um we don't really have a service for that today that's really where you would have to kind of leverage third parties",
    "start": "4300640",
    "end": "4305840"
  },
  {
    "text": "or open source or um you know enterprise applications say such as splunk very very popular tool",
    "start": "4305840",
    "end": "4311600"
  },
  {
    "text": "on our uh on our platform right now that those are probably the best options",
    "start": "4311600",
    "end": "4318719"
  },
  {
    "text": "second here uh someone actually asked the question",
    "start": "4326239",
    "end": "4331280"
  },
  {
    "text": "here are you planning to monitor amount of available memory uh inside of an ec2 instance so the",
    "start": "4331280",
    "end": "4337120"
  },
  {
    "text": "cloudwatch team actually has provided a bunch of scripts that you could use to run on your ec2 instances that will",
    "start": "4337120",
    "end": "4343760"
  },
  {
    "text": "actually report that information so if you go into the cloudwatch",
    "start": "4343760",
    "end": "4348960"
  },
  {
    "text": "documentation you will see that the problem with things like available memory is that it is only a",
    "start": "4348960",
    "end": "4354719"
  },
  {
    "text": "host level based metric so you would actually need something running on the instance to provide that",
    "start": "4354719",
    "end": "4361199"
  },
  {
    "text": "to cloud watch that you could monitor so those scripts help you out the things that you could run",
    "start": "4361199",
    "end": "4367040"
  },
  {
    "text": "as a cron job or just as a background process and it will put that information into",
    "start": "4367040",
    "end": "4372159"
  },
  {
    "text": "cloudwatch then you could potentially do monitoring or learning off of that",
    "start": "4372159",
    "end": "4384960"
  },
  {
    "text": "uh someone had a question about free tier um does it back date when you start using",
    "start": "4384960",
    "end": "4391040"
  },
  {
    "text": "the services uh it actually back dates to when you open the account so if you open the account that is the",
    "start": "4391040",
    "end": "4396239"
  },
  {
    "text": "beginning of your free tier",
    "start": "4396239",
    "end": "4399840"
  },
  {
    "text": "um someone asked the question of many of",
    "start": "4410840",
    "end": "4415920"
  },
  {
    "text": "the diagrams show a large uh sort of large scale application just using a web layer directly accessing the",
    "start": "4415920",
    "end": "4422400"
  },
  {
    "text": "rds instance when would it be a good idea to separate out your data layer into separate ec2 instances so maybe",
    "start": "4422400",
    "end": "4428560"
  },
  {
    "text": "having a a middle layer application tier in between the web chair and the database tier",
    "start": "4428560",
    "end": "4434080"
  },
  {
    "text": "really depends on your application makes as much sense i guess as it does",
    "start": "4434080",
    "end": "4439199"
  },
  {
    "text": "you know given whatever your stack might look like definitely didn't mean to discourage that type of a topology",
    "start": "4439199",
    "end": "4445440"
  },
  {
    "text": "in this presentation um you know really if you have a middleware",
    "start": "4445440",
    "end": "4450560"
  },
  {
    "text": "layer or some sort of a middle business logic layer that's interfacing your database it totally makes sense to put that on a",
    "start": "4450560",
    "end": "4455679"
  },
  {
    "text": "separate tier inside of auto scaling and potentially put an elb between your you know your web front ends and that",
    "start": "4455679",
    "end": "4461199"
  },
  {
    "text": "application here to help you scale horizontally to handle load",
    "start": "4461199",
    "end": "4469840"
  },
  {
    "text": "i'm looking for any other questions here um still have just a couple of minutes",
    "start": "4470480",
    "end": "4477600"
  },
  {
    "text": "if you want to try to submit things",
    "start": "4477600",
    "end": "4483840"
  },
  {
    "text": "any other questions feel free to fire them at me",
    "start": "4497199",
    "end": "4511840"
  },
  {
    "text": "going once going twice any other last questions here",
    "start": "4524000",
    "end": "4529920"
  },
  {
    "text": "oh here we go uh one question here is can s3 snapshots",
    "start": "4533280",
    "end": "4539199"
  },
  {
    "text": "be scheduled automatically from ec2 so uh right now it is not built into the",
    "start": "4539199",
    "end": "4544800"
  },
  {
    "text": "platform itself today uh there are some third-party tools that could be used to do this or it's something that you know you",
    "start": "4544800",
    "end": "4552719"
  },
  {
    "text": "would have to build yourself into to doing that that snapshotting",
    "start": "4552719",
    "end": "4557840"
  },
  {
    "text": "another question here is what do you mean by host-based configuration management what does this do so in this case we're",
    "start": "4557840",
    "end": "4564640"
  },
  {
    "text": "talking about something that would actually sit on the host uh continuously running to help manage",
    "start": "4564640",
    "end": "4570080"
  },
  {
    "text": "things like application configuration um the os level configuration any sort of",
    "start": "4570080",
    "end": "4576560"
  },
  {
    "text": "application install so tools like puppet and chef will actually run on your your instances",
    "start": "4576560",
    "end": "4582719"
  },
  {
    "text": "and then you could continue to push down any sort of changes to them without having to roll out a completely",
    "start": "4582719",
    "end": "4588159"
  },
  {
    "text": "new host or having to make those changes yourself and so these could be very powerful tools to help you do broad scale",
    "start": "4588159",
    "end": "4594480"
  },
  {
    "text": "management of your infrastructure you know let's say that i wanted to take all of my you know i had 400 linux based",
    "start": "4594480",
    "end": "4601040"
  },
  {
    "text": "hosts and i wanted to take those hosts and change you know the",
    "start": "4601040",
    "end": "4608480"
  },
  {
    "text": "ldap config on all of them right so i'm looking at some managed way to do that what these tools could do is",
    "start": "4608480",
    "end": "4614159"
  },
  {
    "text": "help you do something like that and that's a very kind of basic example but it's really something that lives on the",
    "start": "4614159",
    "end": "4619520"
  },
  {
    "text": "instance or on the host itself and helps manage the configuration now we certainly have tools that can help",
    "start": "4619520",
    "end": "4624640"
  },
  {
    "text": "you in the initial provisioning of those instances things like cloudfront and",
    "start": "4624640",
    "end": "4630159"
  },
  {
    "text": "beanstalk but in terms of that the ongoing management that's really where these tools play a role",
    "start": "4630159",
    "end": "4635600"
  },
  {
    "text": "and that's why you know tools like ops works have chef built into it which kind of helps you with this",
    "start": "4635600",
    "end": "4642960"
  },
  {
    "text": "someone asked the question here about i talk about the cost of the tiers latency for example",
    "start": "4646320",
    "end": "4652719"
  },
  {
    "text": "um so in terms of the cost of the tiers in terms of things like latency i think it's going to be highly",
    "start": "4652719",
    "end": "4657760"
  },
  {
    "text": "dependent based on what those tiers are made up of and and what you're talking to and",
    "start": "4657760",
    "end": "4663280"
  },
  {
    "text": "in terms of what scale that you have here generally speaking latency could be very very low or very",
    "start": "4663280",
    "end": "4670480"
  },
  {
    "text": "very high right i mean it depends on you know we talked about latency of database queries are we just talking of latency between two different hosts that",
    "start": "4670480",
    "end": "4677120"
  },
  {
    "text": "have different parts of your application a lot of different factors from instant",
    "start": "4677120",
    "end": "4682560"
  },
  {
    "text": "size to you know are they in the same az or any different azs to how good is your code and how quickly",
    "start": "4682560",
    "end": "4688400"
  },
  {
    "text": "can it reply to requests generally speaking between hosts in aws",
    "start": "4688400",
    "end": "4694000"
  },
  {
    "text": "latency should be the same as they would be if they were in you know your data center on the same switch",
    "start": "4694000",
    "end": "4699760"
  },
  {
    "text": "should be very very low between azs you should be looking at maybe an additional two milliseconds above",
    "start": "4699760",
    "end": "4704800"
  },
  {
    "text": "whatever you see in you know inside of a single a z so it",
    "start": "4704800",
    "end": "4710800"
  },
  {
    "text": "shouldn't look drastically different when you're doing multi-az for first doing inside of a single az",
    "start": "4710800",
    "end": "4721840"
  },
  {
    "text": "um let's just okay so i was talking about a question here",
    "start": "4722960",
    "end": "4728800"
  },
  {
    "text": "with promoting components say from test to production environments you know",
    "start": "4728800",
    "end": "4734080"
  },
  {
    "text": "i guess it really depends on your co-deployment process",
    "start": "4734080",
    "end": "4739120"
  },
  {
    "text": "how you would handle or how you do handle deploying that code",
    "start": "4739120",
    "end": "4744400"
  },
  {
    "text": "in things like beanstalk they have the ability for you to have different environments such that you could have a test",
    "start": "4744400",
    "end": "4749760"
  },
  {
    "text": "environment that you do code deploys to and then once it's been approved via say like an automated system or a manual",
    "start": "4749760",
    "end": "4755440"
  },
  {
    "text": "process you then allow that code to be deployed to production you can do similar kinds of things with opsworks or",
    "start": "4755440",
    "end": "4762080"
  },
  {
    "text": "with cloud formation in terms of let's say referencing some sort of deployable asset that you have maybe a",
    "start": "4762080",
    "end": "4767840"
  },
  {
    "text": "zip file or an rpm or something like that and then taking that code and moving it from you know from one",
    "start": "4767840",
    "end": "4774960"
  },
  {
    "text": "environment to another environment uh in general again you know soa favors you really heavily here right",
    "start": "4774960",
    "end": "4781520"
  },
  {
    "text": "the lighter your service tiers are the better that you can independently push out different features or new",
    "start": "4781520",
    "end": "4786800"
  },
  {
    "text": "versions without without affecting the the bigger",
    "start": "4786800",
    "end": "4792000"
  },
  {
    "text": "picture potentially of your application stack uh someone mentioned here about eob is",
    "start": "4792000",
    "end": "4798719"
  },
  {
    "text": "not having certain metrics accounts inside of them yeah there are definitely things that",
    "start": "4798719",
    "end": "4804320"
  },
  {
    "text": "are missing from certain services today um we're we're definitely constantly trying to iterate and build on top of",
    "start": "4804320",
    "end": "4810719"
  },
  {
    "text": "our services largely based on customer demand so something that you may not see today you might end up seeing in a",
    "start": "4810719",
    "end": "4817120"
  },
  {
    "text": "couple months time or maybe sooner or maybe later again kind of depending on",
    "start": "4817120",
    "end": "4823120"
  },
  {
    "text": "depending on you know what the demand is for that generally speaking you know a lot of",
    "start": "4823120",
    "end": "4828159"
  },
  {
    "text": "times you can garner metrics from other parts of your application pump them into cloud watch and use them",
    "start": "4828159",
    "end": "4833199"
  },
  {
    "text": "for things like auto scaling other sorts of alerting",
    "start": "4833199",
    "end": "4837440"
  },
  {
    "text": "uh someone and i actually am going to have to make this be the last question unfortunately here as we're coming out",
    "start": "4839600",
    "end": "4844639"
  },
  {
    "text": "to the bottom of the hour why don't i recommend multi-region deployments with a globally distributed user base it",
    "start": "4844639",
    "end": "4851360"
  },
  {
    "text": "would seem to make sense so uh yes and no so it really depends on",
    "start": "4851360",
    "end": "4856880"
  },
  {
    "text": "what you're talking about with this user base if you have a simple web application where most of the interfacing with it is",
    "start": "4856880",
    "end": "4864719"
  },
  {
    "text": "the let's say the the end user is getting say static assets and there's maybe just a little bit of",
    "start": "4864719",
    "end": "4871360"
  },
  {
    "text": "data proportional again to those static assets that's going back and forth across the wire you can actually perform quite well",
    "start": "4871360",
    "end": "4877440"
  },
  {
    "text": "again making use of a cdn to serve out those static assets making use of something like route 53 to",
    "start": "4877440",
    "end": "4883360"
  },
  {
    "text": "less than the amount of time the dns queries would take and then serving them the data directly from a single region i think it really really",
    "start": "4883360",
    "end": "4890480"
  },
  {
    "text": "depends on what your goals are for um you know latency and request time",
    "start": "4890480",
    "end": "4895520"
  },
  {
    "text": "to those end users obviously also depends exactly on what the application is but you know usually speaking the amount",
    "start": "4895520",
    "end": "4903600"
  },
  {
    "text": "of data that's probably coming out of the region is hopefully a lot less than the the total picture of what you're serving out",
    "start": "4903600",
    "end": "4909360"
  },
  {
    "text": "to those users again assuming that you can put some content into cdn and i think that stands true for",
    "start": "4909360",
    "end": "4914840"
  },
  {
    "text": "probably 90 plus percent of web applications in existence today",
    "start": "4914840",
    "end": "4920000"
  },
  {
    "text": "at least at least the ones that i've seen and dealt with from both small startups up through enterprises",
    "start": "4920000",
    "end": "4926480"
  },
  {
    "text": "very rarely do you have to go multi-region again unless you're at a very very large scale",
    "start": "4926480",
    "end": "4932239"
  },
  {
    "text": "or you're just extremely you know latency sensitive so uh with that we're pretty much",
    "start": "4932239",
    "end": "4940639"
  },
  {
    "text": "at the bottom of the hour here today again i want to thank everyone for participating really want to thank you for these questions i hope that everybody has",
    "start": "4940639",
    "end": "4948000"
  },
  {
    "text": "had some good takeaways from this and that um this was worth your time uh thanks again",
    "start": "4948000",
    "end": "4953920"
  },
  {
    "text": "and have a great day and as you mentioned earlier again this presentation and these slides will be",
    "start": "4953920",
    "end": "4959360"
  },
  {
    "text": "available online and sent to you guys over the next couple days if not the next week or so",
    "start": "4959360",
    "end": "4964719"
  },
  {
    "text": "thank you thank you chris mom reminder for everyone please click on the purple url widget so",
    "start": "4964719",
    "end": "4972159"
  },
  {
    "text": "you can have a chance to fill out the survey because before we close our webcast",
    "start": "4972159",
    "end": "4977280"
  },
  {
    "text": "so i'd like to extend a special thank you to our presenter today chris month and all our live attendees thank you",
    "start": "4977280",
    "end": "4983440"
  },
  {
    "text": "everyone for joining have a rest of your day thank you",
    "start": "4983440",
    "end": "4989840"
  }
]