[
  {
    "start": "0",
    "end": "173000"
  },
  {
    "text": "hi",
    "start": "6080",
    "end": "6960"
  },
  {
    "text": "my name is ben addicts and today i will",
    "start": "6960",
    "end": "9120"
  },
  {
    "text": "be showing you how to use amazon",
    "start": "9120",
    "end": "10960"
  },
  {
    "text": "sagemaker",
    "start": "10960",
    "end": "11920"
  },
  {
    "text": "for image classification tasks",
    "start": "11920",
    "end": "15040"
  },
  {
    "text": "amazon sagemaker helps data scientists",
    "start": "15040",
    "end": "17199"
  },
  {
    "text": "and developers",
    "start": "17199",
    "end": "18320"
  },
  {
    "text": "to quickly prepare build train",
    "start": "18320",
    "end": "21600"
  },
  {
    "text": "and deploy high quality machine learning",
    "start": "21600",
    "end": "24000"
  },
  {
    "text": "models",
    "start": "24000",
    "end": "24720"
  },
  {
    "text": "by bringing together a broad set of",
    "start": "24720",
    "end": "26720"
  },
  {
    "text": "capabilities",
    "start": "26720",
    "end": "27760"
  },
  {
    "text": "purpose built for machine learning we'll",
    "start": "27760",
    "end": "30560"
  },
  {
    "text": "be working in sagemaker studio",
    "start": "30560",
    "end": "32640"
  },
  {
    "text": "which is a fully integrated development",
    "start": "32640",
    "end": "34559"
  },
  {
    "text": "environment for machine learning",
    "start": "34559",
    "end": "36399"
  },
  {
    "text": "making it a great tool for rapidly",
    "start": "36399",
    "end": "38640"
  },
  {
    "text": "iterating through the building",
    "start": "38640",
    "end": "40480"
  },
  {
    "text": "training and deploying of machine",
    "start": "40480",
    "end": "42399"
  },
  {
    "text": "learning models",
    "start": "42399",
    "end": "44079"
  },
  {
    "text": "for our demo i will show you how to",
    "start": "44079",
    "end": "46399"
  },
  {
    "text": "detect metastases",
    "start": "46399",
    "end": "48160"
  },
  {
    "text": "or the spread of cancer from images of",
    "start": "48160",
    "end": "50879"
  },
  {
    "text": "lymph node sections",
    "start": "50879",
    "end": "52559"
  },
  {
    "text": "using amazon sagemaker identifying",
    "start": "52559",
    "end": "55440"
  },
  {
    "text": "metastases",
    "start": "55440",
    "end": "56640"
  },
  {
    "text": "requires a lot of time for pathologists",
    "start": "56640",
    "end": "59359"
  },
  {
    "text": "and is prone to misinterpretation",
    "start": "59359",
    "end": "61760"
  },
  {
    "text": "machine learning can help because it can",
    "start": "61760",
    "end": "63760"
  },
  {
    "text": "analyze images",
    "start": "63760",
    "end": "64878"
  },
  {
    "text": "much quicker than a human can which",
    "start": "64879",
    "end": "67040"
  },
  {
    "text": "means it can analyze",
    "start": "67040",
    "end": "68159"
  },
  {
    "text": "more images to get better at pattern",
    "start": "68159",
    "end": "70240"
  },
  {
    "text": "detection",
    "start": "70240",
    "end": "71360"
  },
  {
    "text": "as well as get results to patients",
    "start": "71360",
    "end": "73200"
  },
  {
    "text": "faster",
    "start": "73200",
    "end": "74799"
  },
  {
    "text": "machine learning can also identify",
    "start": "74799",
    "end": "76799"
  },
  {
    "text": "patterns that are not easily visible to",
    "start": "76799",
    "end": "78880"
  },
  {
    "text": "humans",
    "start": "78880",
    "end": "80640"
  },
  {
    "text": "therefore a good machine learning",
    "start": "80640",
    "end": "82240"
  },
  {
    "text": "solution can improve the diagnosis",
    "start": "82240",
    "end": "84560"
  },
  {
    "text": "of patients reduce the subjectivity",
    "start": "84560",
    "end": "87600"
  },
  {
    "text": "in diagnosis and reduce the workload of",
    "start": "87600",
    "end": "90240"
  },
  {
    "text": "pathologists",
    "start": "90240",
    "end": "92400"
  },
  {
    "text": "in this demo we train a machine learning",
    "start": "92400",
    "end": "94720"
  },
  {
    "text": "model to look for metastases",
    "start": "94720",
    "end": "96799"
  },
  {
    "text": "by using labeled sample images we then",
    "start": "96799",
    "end": "100079"
  },
  {
    "text": "use",
    "start": "100079",
    "end": "100640"
  },
  {
    "text": "the trained model to recognize the",
    "start": "100640",
    "end": "102640"
  },
  {
    "text": "cancer cells in new images",
    "start": "102640",
    "end": "104720"
  },
  {
    "text": "and predict the probability of",
    "start": "104720",
    "end": "106479"
  },
  {
    "text": "metastases",
    "start": "106479",
    "end": "107920"
  },
  {
    "text": "images that are predicted to contain",
    "start": "107920",
    "end": "109520"
  },
  {
    "text": "metastases are then sent to an expert",
    "start": "109520",
    "end": "112000"
  },
  {
    "text": "physician for further diagnosis",
    "start": "112000",
    "end": "114880"
  },
  {
    "text": "we will use the amazon sagemaker image",
    "start": "114880",
    "end": "117439"
  },
  {
    "text": "classification algorithm",
    "start": "117439",
    "end": "118880"
  },
  {
    "text": "because it has an option for transfer",
    "start": "118880",
    "end": "121040"
  },
  {
    "text": "learning mode where the network is",
    "start": "121040",
    "end": "122719"
  },
  {
    "text": "initialized with",
    "start": "122719",
    "end": "123840"
  },
  {
    "text": "pre-trained weights and just the top",
    "start": "123840",
    "end": "126560"
  },
  {
    "text": "fully connected layer is initialized",
    "start": "126560",
    "end": "128800"
  },
  {
    "text": "with random weights",
    "start": "128800",
    "end": "130800"
  },
  {
    "text": "then the whole network is fine-tuned",
    "start": "130800",
    "end": "132720"
  },
  {
    "text": "with our new images",
    "start": "132720",
    "end": "134800"
  },
  {
    "text": "in transfer learning mode training can",
    "start": "134800",
    "end": "136879"
  },
  {
    "text": "be achieved",
    "start": "136879",
    "end": "137840"
  },
  {
    "text": "even with smaller data sets because most",
    "start": "137840",
    "end": "140400"
  },
  {
    "text": "of the network is already trained",
    "start": "140400",
    "end": "142160"
  },
  {
    "text": "and therefore does not require as much",
    "start": "142160",
    "end": "144000"
  },
  {
    "text": "training data",
    "start": "144000",
    "end": "145440"
  },
  {
    "text": "our original data set comes from the",
    "start": "145440",
    "end": "147680"
  },
  {
    "text": "camelon 16",
    "start": "147680",
    "end": "148959"
  },
  {
    "text": "challenge and contains whole slide image",
    "start": "148959",
    "end": "151680"
  },
  {
    "text": "files",
    "start": "151680",
    "end": "153040"
  },
  {
    "text": "these whole slides are broken down into",
    "start": "153040",
    "end": "154879"
  },
  {
    "text": "smaller tiles",
    "start": "154879",
    "end": "156080"
  },
  {
    "text": "or cropped images by bass vling",
    "start": "156080",
    "end": "159120"
  },
  {
    "text": "and for this demo we will use a subset",
    "start": "159120",
    "end": "161360"
  },
  {
    "text": "of those tile images",
    "start": "161360",
    "end": "163519"
  },
  {
    "text": "our data set contains 14 000 tile",
    "start": "163519",
    "end": "166560"
  },
  {
    "text": "samples",
    "start": "166560",
    "end": "167519"
  },
  {
    "text": "along with their labels of whether the",
    "start": "167519",
    "end": "169440"
  },
  {
    "text": "tile contains metastases or not",
    "start": "169440",
    "end": "173760"
  },
  {
    "start": "173000",
    "end": "378000"
  },
  {
    "text": "to get started once we land on the",
    "start": "173760",
    "end": "176959"
  },
  {
    "text": "sagemaker page within the console we",
    "start": "176959",
    "end": "179599"
  },
  {
    "text": "select sagemaker studio",
    "start": "179599",
    "end": "181120"
  },
  {
    "text": "in the top left corner",
    "start": "181120",
    "end": "184239"
  },
  {
    "text": "here we'll be taken to the sagemaker",
    "start": "184239",
    "end": "186480"
  },
  {
    "text": "studio control panel",
    "start": "186480",
    "end": "188560"
  },
  {
    "text": "here we can see all the sagemaker studio",
    "start": "188560",
    "end": "190720"
  },
  {
    "text": "users that are associated with our",
    "start": "190720",
    "end": "192480"
  },
  {
    "text": "account",
    "start": "192480",
    "end": "193519"
  },
  {
    "text": "if there are no users you can create one",
    "start": "193519",
    "end": "195280"
  },
  {
    "text": "by clicking the add user button in the",
    "start": "195280",
    "end": "197440"
  },
  {
    "text": "top right",
    "start": "197440",
    "end": "199040"
  },
  {
    "text": "here i already have a user so i'll click",
    "start": "199040",
    "end": "201120"
  },
  {
    "text": "open studio",
    "start": "201120",
    "end": "203280"
  },
  {
    "text": "this takes us to our sagemaker studio",
    "start": "203280",
    "end": "205920"
  },
  {
    "text": "environment which is an integrated",
    "start": "205920",
    "end": "207760"
  },
  {
    "text": "development environment",
    "start": "207760",
    "end": "210000"
  },
  {
    "text": "once we're in sagemaker studio the",
    "start": "210000",
    "end": "212000"
  },
  {
    "text": "launcher has a variety of different",
    "start": "212000",
    "end": "213599"
  },
  {
    "text": "features that we can take advantage of",
    "start": "213599",
    "end": "215760"
  },
  {
    "text": "we could start by creating a new data",
    "start": "215760",
    "end": "218640"
  },
  {
    "text": "flow",
    "start": "218640",
    "end": "220000"
  },
  {
    "text": "or creating a new autopilot experiment",
    "start": "220000",
    "end": "222159"
  },
  {
    "text": "for example",
    "start": "222159",
    "end": "224400"
  },
  {
    "text": "if we click the file icon in the top",
    "start": "224400",
    "end": "226640"
  },
  {
    "text": "left hand corner we can see any",
    "start": "226640",
    "end": "228239"
  },
  {
    "text": "files or folders that are available",
    "start": "228239",
    "end": "231599"
  },
  {
    "text": "if you wish to follow along with this",
    "start": "231599",
    "end": "232959"
  },
  {
    "text": "demo you'll need to clone the repository",
    "start": "232959",
    "end": "236319"
  },
  {
    "text": "to clone a repository you can go to the",
    "start": "236319",
    "end": "238480"
  },
  {
    "text": "get icon",
    "start": "238480",
    "end": "240480"
  },
  {
    "text": "and click clone repository",
    "start": "240480",
    "end": "243599"
  },
  {
    "text": "and we'll need to type in the name of",
    "start": "243599",
    "end": "245360"
  },
  {
    "text": "our repo",
    "start": "245360",
    "end": "247940"
  },
  {
    "text": "[Music]",
    "start": "247940",
    "end": "250879"
  },
  {
    "text": "as well as our credentials",
    "start": "250879",
    "end": "255840"
  },
  {
    "text": "now we can see that our repository has",
    "start": "259440",
    "end": "263440"
  },
  {
    "text": "cloned and we can enter the the new",
    "start": "263440",
    "end": "266400"
  },
  {
    "text": "folder",
    "start": "266400",
    "end": "267520"
  },
  {
    "text": "and launch our notebook in this notebook",
    "start": "267520",
    "end": "270800"
  },
  {
    "text": "we will read in our images and split",
    "start": "270800",
    "end": "273199"
  },
  {
    "text": "them into our training",
    "start": "273199",
    "end": "274720"
  },
  {
    "text": "validation and testing sets we will then",
    "start": "274720",
    "end": "277759"
  },
  {
    "text": "use",
    "start": "277759",
    "end": "278479"
  },
  {
    "text": "a hyperparameter tuner job using the",
    "start": "278479",
    "end": "281120"
  },
  {
    "text": "amazon sagemaker image classification",
    "start": "281120",
    "end": "283360"
  },
  {
    "text": "algorithm",
    "start": "283360",
    "end": "284479"
  },
  {
    "text": "and save the results in a model registry",
    "start": "284479",
    "end": "287360"
  },
  {
    "text": "finally we will build a pipeline which",
    "start": "287360",
    "end": "289040"
  },
  {
    "text": "automates the model building process",
    "start": "289040",
    "end": "291280"
  },
  {
    "text": "which streamlines our iterations for",
    "start": "291280",
    "end": "293280"
  },
  {
    "text": "when we would receive new data in the",
    "start": "293280",
    "end": "294880"
  },
  {
    "text": "future",
    "start": "294880",
    "end": "297840"
  },
  {
    "text": "to begin with we'll import our libraries",
    "start": "299040",
    "end": "303840"
  },
  {
    "text": "and configure our bodu 3 clients and",
    "start": "303840",
    "end": "308160"
  },
  {
    "text": "sessions",
    "start": "308840",
    "end": "310479"
  },
  {
    "text": "next we can import our data set and",
    "start": "310479",
    "end": "313600"
  },
  {
    "text": "split it into our x and y variables",
    "start": "313600",
    "end": "316400"
  },
  {
    "text": "the x contains the image tile whereas",
    "start": "316400",
    "end": "318800"
  },
  {
    "text": "the y contains the label",
    "start": "318800",
    "end": "320400"
  },
  {
    "text": "for whether that tile contains",
    "start": "320400",
    "end": "322400"
  },
  {
    "text": "metastases or not which was determined",
    "start": "322400",
    "end": "324800"
  },
  {
    "text": "by pathologists",
    "start": "324800",
    "end": "326400"
  },
  {
    "text": "it's important to feed the model both",
    "start": "326400",
    "end": "328320"
  },
  {
    "text": "the x",
    "start": "328320",
    "end": "329840"
  },
  {
    "text": "which is our images and the y which is",
    "start": "329840",
    "end": "332080"
  },
  {
    "text": "our labels so that it can determine the",
    "start": "332080",
    "end": "333919"
  },
  {
    "text": "patterns that are associated with",
    "start": "333919",
    "end": "336840"
  },
  {
    "text": "metastases",
    "start": "336840",
    "end": "338320"
  },
  {
    "text": "by printing the shape we can see that we",
    "start": "338320",
    "end": "341120"
  },
  {
    "text": "have 14 000 records",
    "start": "341120",
    "end": "343440"
  },
  {
    "text": "and the images are 96 pixels by 96",
    "start": "343440",
    "end": "346639"
  },
  {
    "text": "pixels",
    "start": "346639",
    "end": "347759"
  },
  {
    "text": "with three color channels the rgb color",
    "start": "347759",
    "end": "350840"
  },
  {
    "text": "channels",
    "start": "350840",
    "end": "353440"
  },
  {
    "text": "to give you an idea of what each of",
    "start": "353440",
    "end": "355280"
  },
  {
    "text": "these tiles look like",
    "start": "355280",
    "end": "356960"
  },
  {
    "text": "you can see a few sample images with",
    "start": "356960",
    "end": "358960"
  },
  {
    "text": "their labels",
    "start": "358960",
    "end": "361520"
  },
  {
    "text": "without the labels it'll be hard to tell",
    "start": "363360",
    "end": "365360"
  },
  {
    "text": "by eye which samples contain metastases",
    "start": "365360",
    "end": "368000"
  },
  {
    "text": "while detecting metastases may be",
    "start": "368000",
    "end": "369840"
  },
  {
    "text": "difficult for us humans",
    "start": "369840",
    "end": "371440"
  },
  {
    "text": "it's much easier for computers and that",
    "start": "371440",
    "end": "373360"
  },
  {
    "text": "is why machine learning can be so",
    "start": "373360",
    "end": "374880"
  },
  {
    "text": "powerful in this domain",
    "start": "374880",
    "end": "378000"
  },
  {
    "text": "our next step is splitting the data into",
    "start": "378560",
    "end": "380319"
  },
  {
    "text": "training validation",
    "start": "380319",
    "end": "381600"
  },
  {
    "text": "and testing sets once that's done",
    "start": "381600",
    "end": "385919"
  },
  {
    "text": "we can convert them to record io format",
    "start": "385919",
    "end": "389120"
  },
  {
    "text": "the only prerequisite for conversion to",
    "start": "389120",
    "end": "391199"
  },
  {
    "text": "record io here",
    "start": "391199",
    "end": "392639"
  },
  {
    "text": "is that our data starts in an array and",
    "start": "392639",
    "end": "395199"
  },
  {
    "text": "then our function",
    "start": "395199",
    "end": "396160"
  },
  {
    "text": "makes the conversion",
    "start": "396160",
    "end": "399039"
  },
  {
    "text": "record i o is the preferred data type",
    "start": "400160",
    "end": "402080"
  },
  {
    "text": "for training in sagemaker image",
    "start": "402080",
    "end": "403680"
  },
  {
    "text": "classification algorithm",
    "start": "403680",
    "end": "405919"
  },
  {
    "text": "because it provides small file sizes",
    "start": "405919",
    "end": "409199"
  },
  {
    "text": "parallel or distributed packing of data",
    "start": "409199",
    "end": "412800"
  },
  {
    "text": "fast data loading and online",
    "start": "412800",
    "end": "414400"
  },
  {
    "text": "augmentation",
    "start": "414400",
    "end": "416160"
  },
  {
    "text": "and quick reads from arbitrary parts of",
    "start": "416160",
    "end": "418319"
  },
  {
    "text": "the data set in the distributed setting",
    "start": "418319",
    "end": "420800"
  },
  {
    "text": "now we save the record i o files to",
    "start": "420800",
    "end": "422880"
  },
  {
    "text": "amazon s3 where they can be picked up by",
    "start": "422880",
    "end": "425039"
  },
  {
    "text": "the model",
    "start": "425039",
    "end": "427440"
  },
  {
    "text": "once our data is saved we need to create",
    "start": "431599",
    "end": "433919"
  },
  {
    "text": "and configure our estimator using the",
    "start": "433919",
    "end": "436800"
  },
  {
    "text": "sagemaker image classification algorithm",
    "start": "436800",
    "end": "439680"
  },
  {
    "text": "the first step is defining some of the",
    "start": "439680",
    "end": "441599"
  },
  {
    "text": "hyper parameters for the model to use",
    "start": "441599",
    "end": "444240"
  },
  {
    "text": "let me explain some of the",
    "start": "444240",
    "end": "445360"
  },
  {
    "text": "hyperparameters",
    "start": "445360",
    "end": "447759"
  },
  {
    "text": "the number of layers is the number of",
    "start": "447759",
    "end": "449759"
  },
  {
    "text": "layers in our neural network",
    "start": "449759",
    "end": "452880"
  },
  {
    "text": "use pre-trained model is set to 1",
    "start": "452880",
    "end": "456000"
  },
  {
    "text": "meaning we use a pre-trained model and",
    "start": "456000",
    "end": "458319"
  },
  {
    "text": "only retrain the final",
    "start": "458319",
    "end": "460000"
  },
  {
    "text": "fully connected layer this way we",
    "start": "460000",
    "end": "462240"
  },
  {
    "text": "leverage learning that the algorithm",
    "start": "462240",
    "end": "464000"
  },
  {
    "text": "has performed on other data sets while",
    "start": "464000",
    "end": "466479"
  },
  {
    "text": "training the last layer",
    "start": "466479",
    "end": "467840"
  },
  {
    "text": "helps us tailor it for our specific data",
    "start": "467840",
    "end": "470319"
  },
  {
    "text": "set",
    "start": "470319",
    "end": "471199"
  },
  {
    "text": "augmentation type specifies ways for the",
    "start": "471199",
    "end": "474160"
  },
  {
    "text": "algorithm to augment the data",
    "start": "474160",
    "end": "476960"
  },
  {
    "text": "crop color transform means it will",
    "start": "476960",
    "end": "479599"
  },
  {
    "text": "randomly",
    "start": "479599",
    "end": "480560"
  },
  {
    "text": "crop flip and rotate images as well as",
    "start": "480560",
    "end": "484080"
  },
  {
    "text": "add",
    "start": "484080",
    "end": "484479"
  },
  {
    "text": "random color variations these",
    "start": "484479",
    "end": "486960"
  },
  {
    "text": "augmentations",
    "start": "486960",
    "end": "488080"
  },
  {
    "text": "should help our model generalize better",
    "start": "488080",
    "end": "490560"
  },
  {
    "text": "especially since we're dealing with",
    "start": "490560",
    "end": "491840"
  },
  {
    "text": "medical images",
    "start": "491840",
    "end": "493280"
  },
  {
    "text": "where aspects like the rotation should",
    "start": "493280",
    "end": "495440"
  },
  {
    "text": "not matter in determining metastases",
    "start": "495440",
    "end": "498240"
  },
  {
    "text": "image shape is the dimensions of our",
    "start": "498240",
    "end": "500080"
  },
  {
    "text": "data that we showed above",
    "start": "500080",
    "end": "502479"
  },
  {
    "text": "our number of training samples we will",
    "start": "502479",
    "end": "505280"
  },
  {
    "text": "pull directly",
    "start": "505280",
    "end": "506000"
  },
  {
    "text": "from our training data lastly we have",
    "start": "506000",
    "end": "508800"
  },
  {
    "text": "some",
    "start": "508800",
    "end": "509199"
  },
  {
    "text": "standard neural network parameters such",
    "start": "509199",
    "end": "511280"
  },
  {
    "text": "as the batch size",
    "start": "511280",
    "end": "513279"
  },
  {
    "text": "epics and learning rate",
    "start": "513279",
    "end": "516640"
  },
  {
    "text": "next we configure our estimator we pass",
    "start": "517039",
    "end": "520000"
  },
  {
    "text": "the hyperparameters that we just defined",
    "start": "520000",
    "end": "522479"
  },
  {
    "text": "above",
    "start": "522479",
    "end": "523279"
  },
  {
    "text": "as well as some additional parameters",
    "start": "523279",
    "end": "525600"
  },
  {
    "text": "here we pass",
    "start": "525600",
    "end": "526480"
  },
  {
    "text": "the training image for the image",
    "start": "526480",
    "end": "528720"
  },
  {
    "text": "classification algorithm",
    "start": "528720",
    "end": "530800"
  },
  {
    "text": "we define that above here",
    "start": "530800",
    "end": "534240"
  },
  {
    "text": "we'll also pass our iam role",
    "start": "534240",
    "end": "537360"
  },
  {
    "text": "and the count and type of instance to",
    "start": "537360",
    "end": "539680"
  },
  {
    "text": "train on",
    "start": "539680",
    "end": "540880"
  },
  {
    "text": "we will use one ml p3",
    "start": "540880",
    "end": "544160"
  },
  {
    "text": "2x large instance which is a gpu",
    "start": "544160",
    "end": "547120"
  },
  {
    "text": "instance",
    "start": "547120",
    "end": "548560"
  },
  {
    "text": "for larger training sets that require",
    "start": "548560",
    "end": "550640"
  },
  {
    "text": "more memory",
    "start": "550640",
    "end": "551760"
  },
  {
    "text": "you could use larger gpu instances",
    "start": "551760",
    "end": "554800"
  },
  {
    "text": "or use multiple instances for",
    "start": "554800",
    "end": "556880"
  },
  {
    "text": "distributed training",
    "start": "556880",
    "end": "558640"
  },
  {
    "text": "we'll also pass the output path which",
    "start": "558640",
    "end": "560959"
  },
  {
    "text": "will save the training result",
    "start": "560959",
    "end": "563600"
  },
  {
    "text": "now that our config is defined we can",
    "start": "563600",
    "end": "565680"
  },
  {
    "text": "instantiate our estimator",
    "start": "565680",
    "end": "569120"
  },
  {
    "text": "we also want to tune some of the hyper",
    "start": "571920",
    "end": "574080"
  },
  {
    "text": "parameters like the",
    "start": "574080",
    "end": "575360"
  },
  {
    "text": "batch size and the learning rate",
    "start": "575360",
    "end": "578640"
  },
  {
    "text": "we want to make sure that we're choosing",
    "start": "578640",
    "end": "580080"
  },
  {
    "text": "optimal values for these hyper",
    "start": "580080",
    "end": "581519"
  },
  {
    "text": "parameters",
    "start": "581519",
    "end": "582880"
  },
  {
    "text": "by testing different values of these",
    "start": "582880",
    "end": "584720"
  },
  {
    "text": "hyperparameter configurations",
    "start": "584720",
    "end": "586880"
  },
  {
    "text": "we can potentially get drastically",
    "start": "586880",
    "end": "588720"
  },
  {
    "text": "different model results",
    "start": "588720",
    "end": "590399"
  },
  {
    "text": "and then we can choose which of them is",
    "start": "590399",
    "end": "592320"
  },
  {
    "text": "optimal based off their performance",
    "start": "592320",
    "end": "594240"
  },
  {
    "text": "here we call them categorical parameters",
    "start": "594240",
    "end": "597519"
  },
  {
    "text": "and we specify the exact values that we",
    "start": "597519",
    "end": "599680"
  },
  {
    "text": "want but you can also use",
    "start": "599680",
    "end": "601440"
  },
  {
    "text": "continuous parameters to specify a range",
    "start": "601440",
    "end": "604240"
  },
  {
    "text": "and sagemaker will sample from within",
    "start": "604240",
    "end": "606160"
  },
  {
    "text": "that range",
    "start": "606160",
    "end": "607360"
  },
  {
    "text": "we can instantiate the sagemaker",
    "start": "607360",
    "end": "609279"
  },
  {
    "text": "hyperparameter tuner",
    "start": "609279",
    "end": "610959"
  },
  {
    "text": "and pass it the estimator that we",
    "start": "610959",
    "end": "613760"
  },
  {
    "text": "defined above",
    "start": "613760",
    "end": "615360"
  },
  {
    "text": "we'll also set the objective metric name",
    "start": "615360",
    "end": "617600"
  },
  {
    "text": "to validation accuracy",
    "start": "617600",
    "end": "619680"
  },
  {
    "text": "this is the metric that will be used to",
    "start": "619680",
    "end": "621360"
  },
  {
    "text": "compare the different hyperparameter",
    "start": "621360",
    "end": "623040"
  },
  {
    "text": "configurations",
    "start": "623040",
    "end": "625839"
  },
  {
    "text": "we'll tell it six max jobs",
    "start": "625839",
    "end": "629440"
  },
  {
    "text": "for our six different hyper parameter",
    "start": "629440",
    "end": "631360"
  },
  {
    "text": "configurations",
    "start": "631360",
    "end": "632959"
  },
  {
    "text": "and two parallel jobs meaning it will do",
    "start": "632959",
    "end": "636560"
  },
  {
    "text": "two of those training jobs at the same",
    "start": "636560",
    "end": "638720"
  },
  {
    "text": "time",
    "start": "638720",
    "end": "639690"
  },
  {
    "text": "[Music]",
    "start": "639690",
    "end": "642909"
  },
  {
    "start": "643000",
    "end": "931000"
  },
  {
    "text": "then we specify the s3 locations of our",
    "start": "644000",
    "end": "647360"
  },
  {
    "text": "training and validation data",
    "start": "647360",
    "end": "651120"
  },
  {
    "text": "because we're using record io files we",
    "start": "651120",
    "end": "653519"
  },
  {
    "text": "can enable the pipe mode",
    "start": "653519",
    "end": "655150"
  },
  {
    "text": "[Music]",
    "start": "655150",
    "end": "656640"
  },
  {
    "text": "which allows the algorithm to train",
    "start": "656640",
    "end": "658640"
  },
  {
    "text": "while it's streaming the data from s3 to",
    "start": "658640",
    "end": "660800"
  },
  {
    "text": "the container",
    "start": "660800",
    "end": "662320"
  },
  {
    "text": "for large data sets this speeds up",
    "start": "662320",
    "end": "664240"
  },
  {
    "text": "training and reduces compute cost",
    "start": "664240",
    "end": "668399"
  },
  {
    "text": "we'll then call dot fit on our hyper",
    "start": "671839",
    "end": "674399"
  },
  {
    "text": "parameter tuner",
    "start": "674399",
    "end": "676640"
  },
  {
    "text": "this will produce the six training jobs",
    "start": "676640",
    "end": "679279"
  },
  {
    "text": "at two at a time",
    "start": "679279",
    "end": "681120"
  },
  {
    "text": "each job takes about five minutes for a",
    "start": "681120",
    "end": "683440"
  },
  {
    "text": "total of fifteen minutes for all the",
    "start": "683440",
    "end": "685360"
  },
  {
    "text": "jobs to complete the job status can be",
    "start": "685360",
    "end": "688959"
  },
  {
    "text": "viewed in real time by going to the",
    "start": "688959",
    "end": "690800"
  },
  {
    "text": "training job",
    "start": "690800",
    "end": "691839"
  },
  {
    "text": "tab in the sagemaker console we will",
    "start": "691839",
    "end": "694880"
  },
  {
    "text": "pause here and pick back up once the",
    "start": "694880",
    "end": "696720"
  },
  {
    "text": "tuning is complete",
    "start": "696720",
    "end": "699680"
  },
  {
    "text": "once the tuning job finishes the data is",
    "start": "699839",
    "end": "702560"
  },
  {
    "text": "automatically saved in sagemaker",
    "start": "702560",
    "end": "704720"
  },
  {
    "text": "so you don't need to run it again if you",
    "start": "704720",
    "end": "706320"
  },
  {
    "text": "stop the notebook instance",
    "start": "706320",
    "end": "708079"
  },
  {
    "text": "or the if the kernel restarts",
    "start": "708079",
    "end": "711760"
  },
  {
    "text": "we can look at the results and convert",
    "start": "714000",
    "end": "715440"
  },
  {
    "text": "them to a data frame",
    "start": "715440",
    "end": "717519"
  },
  {
    "text": "this gives us a lot of metadata about",
    "start": "717519",
    "end": "719440"
  },
  {
    "text": "each training job",
    "start": "719440",
    "end": "721120"
  },
  {
    "text": "including the hyper parameters that were",
    "start": "721120",
    "end": "722959"
  },
  {
    "text": "used the training job name",
    "start": "722959",
    "end": "726320"
  },
  {
    "text": "and our final objective value which in",
    "start": "726320",
    "end": "728880"
  },
  {
    "text": "our case is the",
    "start": "728880",
    "end": "730639"
  },
  {
    "text": "validation accuracy you can choose the",
    "start": "730639",
    "end": "733760"
  },
  {
    "text": "hyper parameter combination which gives",
    "start": "733760",
    "end": "735519"
  },
  {
    "text": "you the best accuracy",
    "start": "735519",
    "end": "736800"
  },
  {
    "text": "or the one that gives you a balance",
    "start": "736800",
    "end": "738399"
  },
  {
    "text": "between training time and accuracy",
    "start": "738399",
    "end": "740880"
  },
  {
    "text": "since the training time will factor into",
    "start": "740880",
    "end": "742800"
  },
  {
    "text": "monetary costs of training the model",
    "start": "742800",
    "end": "746800"
  },
  {
    "text": "once our model is trained we'll want to",
    "start": "749440",
    "end": "750959"
  },
  {
    "text": "use sagemaker lineage tracking to track",
    "start": "750959",
    "end": "753920"
  },
  {
    "text": "different artifacts about the model",
    "start": "753920",
    "end": "756240"
  },
  {
    "text": "an important aspect of transparency in",
    "start": "756240",
    "end": "758560"
  },
  {
    "text": "machine learning",
    "start": "758560",
    "end": "759839"
  },
  {
    "text": "is to be able to link a model with the",
    "start": "759839",
    "end": "761920"
  },
  {
    "text": "data used to train it",
    "start": "761920",
    "end": "763360"
  },
  {
    "text": "so we can easily find how any given",
    "start": "763360",
    "end": "765440"
  },
  {
    "text": "model was produced",
    "start": "765440",
    "end": "767200"
  },
  {
    "text": "in the event that a model begins to",
    "start": "767200",
    "end": "768959"
  },
  {
    "text": "start performing poorly",
    "start": "768959",
    "end": "770800"
  },
  {
    "text": "we should be able to quickly find all",
    "start": "770800",
    "end": "772480"
  },
  {
    "text": "the artifacts used to create it",
    "start": "772480",
    "end": "774399"
  },
  {
    "text": "so we can debug the problem at the",
    "start": "774399",
    "end": "776320"
  },
  {
    "text": "source",
    "start": "776320",
    "end": "777440"
  },
  {
    "text": "to do this we need to create an artifact",
    "start": "777440",
    "end": "779600"
  },
  {
    "text": "for every aspect of the training that",
    "start": "779600",
    "end": "781519"
  },
  {
    "text": "we'd like to save",
    "start": "781519",
    "end": "783440"
  },
  {
    "text": "first we'll create an artifact",
    "start": "783440",
    "end": "784880"
  },
  {
    "text": "containing the training data",
    "start": "784880",
    "end": "788639"
  },
  {
    "text": "and then an artifact containing the",
    "start": "792800",
    "end": "794560"
  },
  {
    "text": "model itself",
    "start": "794560",
    "end": "797279"
  },
  {
    "text": "once the desired artifacts have been",
    "start": "798480",
    "end": "800000"
  },
  {
    "text": "created you can then create associations",
    "start": "800000",
    "end": "802240"
  },
  {
    "text": "between them so it's very clear what the",
    "start": "802240",
    "end": "803920"
  },
  {
    "text": "relationship is",
    "start": "803920",
    "end": "804959"
  },
  {
    "text": "between artifacts you can even produce a",
    "start": "804959",
    "end": "807760"
  },
  {
    "text": "graph network",
    "start": "807760",
    "end": "808639"
  },
  {
    "text": "using the associations and artifacts if",
    "start": "808639",
    "end": "810959"
  },
  {
    "text": "your machine learning solutions",
    "start": "810959",
    "end": "812560"
  },
  {
    "text": "have many complex dependencies like",
    "start": "812560",
    "end": "814639"
  },
  {
    "text": "models which produce features as an",
    "start": "814639",
    "end": "816399"
  },
  {
    "text": "input into other models",
    "start": "816399",
    "end": "819680"
  },
  {
    "text": "now for our model registry here we start",
    "start": "824800",
    "end": "827519"
  },
  {
    "text": "to create",
    "start": "827519",
    "end": "828240"
  },
  {
    "text": "a model package group in order to store",
    "start": "828240",
    "end": "830720"
  },
  {
    "text": "the modeled metadata",
    "start": "830720",
    "end": "832240"
  },
  {
    "text": "including artifacts such as code data",
    "start": "832240",
    "end": "835279"
  },
  {
    "text": "and model parameters",
    "start": "835279",
    "end": "837120"
  },
  {
    "text": "this will allow future data scientists",
    "start": "837120",
    "end": "839120"
  },
  {
    "text": "or machine learning engineers",
    "start": "839120",
    "end": "841040"
  },
  {
    "text": "to gain visibility and reproducibility",
    "start": "841040",
    "end": "843680"
  },
  {
    "text": "of the process by which we created the",
    "start": "843680",
    "end": "845360"
  },
  {
    "text": "models",
    "start": "845360",
    "end": "847760"
  },
  {
    "text": "first we create a model package group",
    "start": "848880",
    "end": "850720"
  },
  {
    "text": "that contains different versions of a",
    "start": "850720",
    "end": "852560"
  },
  {
    "text": "model",
    "start": "852560",
    "end": "853040"
  },
  {
    "text": "for example all the models from our",
    "start": "853040",
    "end": "854800"
  },
  {
    "text": "tuning job",
    "start": "854800",
    "end": "856480"
  },
  {
    "text": "once the model package group has been",
    "start": "856480",
    "end": "858160"
  },
  {
    "text": "created you can now add all of your",
    "start": "858160",
    "end": "860240"
  },
  {
    "text": "models from the tuning job",
    "start": "860240",
    "end": "863440"
  },
  {
    "text": "along with the s3 location of the",
    "start": "863440",
    "end": "865120"
  },
  {
    "text": "trained model you need to add the",
    "start": "865120",
    "end": "866800"
  },
  {
    "text": "inference specification",
    "start": "866800",
    "end": "868480"
  },
  {
    "text": "so we know what docker image to use to",
    "start": "868480",
    "end": "870720"
  },
  {
    "text": "deploy the model to make predictions",
    "start": "870720",
    "end": "874399"
  },
  {
    "text": "finally we can tag the model with a",
    "start": "875279",
    "end": "877600"
  },
  {
    "text": "status",
    "start": "877600",
    "end": "879440"
  },
  {
    "text": "so it's easy to tell which models are",
    "start": "879440",
    "end": "881279"
  },
  {
    "text": "actually approved or declined for",
    "start": "881279",
    "end": "882880"
  },
  {
    "text": "production here we're saying pending",
    "start": "882880",
    "end": "885040"
  },
  {
    "text": "manual approval",
    "start": "885040",
    "end": "886079"
  },
  {
    "text": "so someone would need to go in later and",
    "start": "886079",
    "end": "887839"
  },
  {
    "text": "manually approve this model before it",
    "start": "887839",
    "end": "889600"
  },
  {
    "text": "could be used in production",
    "start": "889600",
    "end": "892720"
  },
  {
    "text": "next we're going to create our model",
    "start": "893680",
    "end": "896000"
  },
  {
    "text": "even though we have a trained model",
    "start": "896000",
    "end": "897680"
  },
  {
    "text": "or a trained estimator it does nothing",
    "start": "897680",
    "end": "900000"
  },
  {
    "text": "on its own until it is deployed",
    "start": "900000",
    "end": "902560"
  },
  {
    "text": "we now want to use the model to perform",
    "start": "902560",
    "end": "904320"
  },
  {
    "text": "inference for this example",
    "start": "904320",
    "end": "906480"
  },
  {
    "text": "that means predicting the presence of",
    "start": "906480",
    "end": "908160"
  },
  {
    "text": "metastases given an input image",
    "start": "908160",
    "end": "911519"
  },
  {
    "text": "in order to make these inferences we",
    "start": "911519",
    "end": "913600"
  },
  {
    "text": "need to create the model",
    "start": "913600",
    "end": "916350"
  },
  {
    "text": "[Music]",
    "start": "916350",
    "end": "919360"
  },
  {
    "text": "now that the model is created we can",
    "start": "919360",
    "end": "921519"
  },
  {
    "text": "deploy it using our dot deploy method",
    "start": "921519",
    "end": "925440"
  },
  {
    "text": "this will take around 5 to 10 minutes",
    "start": "925440",
    "end": "928079"
  },
  {
    "text": "and we'll pick back up when it is",
    "start": "928079",
    "end": "929600"
  },
  {
    "text": "finished",
    "start": "929600",
    "end": "931440"
  },
  {
    "start": "931000",
    "end": "1273000"
  },
  {
    "text": "now that our model is deployed we can",
    "start": "931440",
    "end": "933680"
  },
  {
    "text": "perform inference against the model",
    "start": "933680",
    "end": "935519"
  },
  {
    "text": "at our endpoint let's start by",
    "start": "935519",
    "end": "937839"
  },
  {
    "text": "performing inference on a single image",
    "start": "937839",
    "end": "940079"
  },
  {
    "text": "and then we will perform inference on",
    "start": "940079",
    "end": "941680"
  },
  {
    "text": "the entire test set",
    "start": "941680",
    "end": "944800"
  },
  {
    "text": "here we view one of our test images we",
    "start": "947360",
    "end": "949680"
  },
  {
    "text": "can see that it has label 1",
    "start": "949680",
    "end": "951519"
  },
  {
    "text": "meaning metastases are present so we",
    "start": "951519",
    "end": "954079"
  },
  {
    "text": "would hope that our model catches this",
    "start": "954079",
    "end": "957759"
  },
  {
    "text": "we can run inference by calling the",
    "start": "962399",
    "end": "965360"
  },
  {
    "text": "invoke endpoint command and passing our",
    "start": "965360",
    "end": "967440"
  },
  {
    "text": "endpoint name as the model package",
    "start": "967440",
    "end": "970160"
  },
  {
    "text": "that we defined above",
    "start": "970160",
    "end": "973279"
  },
  {
    "text": "there's two probabilities here",
    "start": "974240",
    "end": "977440"
  },
  {
    "text": "the first is the probability of class 0",
    "start": "977440",
    "end": "980399"
  },
  {
    "text": "or no metastases",
    "start": "980399",
    "end": "982320"
  },
  {
    "text": "the second is the probability of class 1",
    "start": "982320",
    "end": "984880"
  },
  {
    "text": "or",
    "start": "984880",
    "end": "985360"
  },
  {
    "text": "metastases being present and we can see",
    "start": "985360",
    "end": "988160"
  },
  {
    "text": "there's a 94",
    "start": "988160",
    "end": "989360"
  },
  {
    "text": "chance that our test image contain",
    "start": "989360",
    "end": "991600"
  },
  {
    "text": "metastases",
    "start": "991600",
    "end": "993839"
  },
  {
    "text": "so it looks like the model is performing",
    "start": "993839",
    "end": "995199"
  },
  {
    "text": "well for one image but how about the",
    "start": "995199",
    "end": "996880"
  },
  {
    "text": "entire test set",
    "start": "996880",
    "end": "999759"
  },
  {
    "text": "our model has .86 precision",
    "start": "1003920",
    "end": "1007759"
  },
  {
    "text": "a recall of 0.87 and an f1 score of 0.86",
    "start": "1007759",
    "end": "1013839"
  },
  {
    "text": "this means that for example with the",
    "start": "1013839",
    "end": "1015360"
  },
  {
    "text": "precision that when the model",
    "start": "1015360",
    "end": "1017600"
  },
  {
    "text": "predicts an image contains metastases",
    "start": "1017600",
    "end": "1020480"
  },
  {
    "text": "there's an 86",
    "start": "1020480",
    "end": "1021920"
  },
  {
    "text": "chance that it is correct",
    "start": "1021920",
    "end": "1025839"
  },
  {
    "text": "now we can automate all of these steps",
    "start": "1026799",
    "end": "1029360"
  },
  {
    "text": "using sagemaker pipelines",
    "start": "1029360",
    "end": "1031678"
  },
  {
    "text": "automating new models might be helpful",
    "start": "1031679",
    "end": "1034240"
  },
  {
    "text": "for example when new data is sent to a",
    "start": "1034240",
    "end": "1036400"
  },
  {
    "text": "training folder in s3",
    "start": "1036400",
    "end": "1039360"
  },
  {
    "text": "for our first step we will upload the",
    "start": "1039360",
    "end": "1041678"
  },
  {
    "text": "data to s3",
    "start": "1041679",
    "end": "1044640"
  },
  {
    "text": "then we'll create a processing step that",
    "start": "1046480",
    "end": "1048480"
  },
  {
    "text": "will take that data we uploaded",
    "start": "1048480",
    "end": "1051600"
  },
  {
    "text": "and we'll do the training validation",
    "start": "1051600",
    "end": "1054559"
  },
  {
    "text": "testing split",
    "start": "1054559",
    "end": "1055840"
  },
  {
    "text": "as well as writing to record io here",
    "start": "1055840",
    "end": "1058960"
  },
  {
    "text": "we're writing this as a generic",
    "start": "1058960",
    "end": "1060720"
  },
  {
    "text": "processing step",
    "start": "1060720",
    "end": "1062080"
  },
  {
    "text": "which will run our split data.py file",
    "start": "1062080",
    "end": "1066080"
  },
  {
    "text": "that split data dot py file contains all",
    "start": "1066080",
    "end": "1069200"
  },
  {
    "text": "the transformations",
    "start": "1069200",
    "end": "1070400"
  },
  {
    "text": "that we did above",
    "start": "1070400",
    "end": "1073280"
  },
  {
    "text": "you can see that in this processing step",
    "start": "1077520",
    "end": "1080400"
  },
  {
    "text": "we have the",
    "start": "1080400",
    "end": "1081520"
  },
  {
    "text": "outputs for our train data validation",
    "start": "1081520",
    "end": "1084320"
  },
  {
    "text": "data and testing data",
    "start": "1084320",
    "end": "1086960"
  },
  {
    "text": "these outputs will now become the inputs",
    "start": "1086960",
    "end": "1090080"
  },
  {
    "text": "to our training step by having",
    "start": "1090080",
    "end": "1094400"
  },
  {
    "text": "the inputs of the training step be the",
    "start": "1094400",
    "end": "1096640"
  },
  {
    "text": "outputs of the previous step",
    "start": "1096640",
    "end": "1098559"
  },
  {
    "text": "it lets pipelines know that that there",
    "start": "1098559",
    "end": "1100400"
  },
  {
    "text": "is a dependency there",
    "start": "1100400",
    "end": "1102559"
  },
  {
    "text": "and that the training step needs to wait",
    "start": "1102559",
    "end": "1104480"
  },
  {
    "text": "until the previous step",
    "start": "1104480",
    "end": "1105600"
  },
  {
    "text": "is complete before it can run",
    "start": "1105600",
    "end": "1109200"
  },
  {
    "text": "sagemaker has a nice pre-made training",
    "start": "1109200",
    "end": "1112000"
  },
  {
    "text": "step for us",
    "start": "1112000",
    "end": "1112799"
  },
  {
    "text": "where all we need to do is provide our",
    "start": "1112799",
    "end": "1114640"
  },
  {
    "text": "estimator as well as the training inputs",
    "start": "1114640",
    "end": "1119280"
  },
  {
    "text": "our next step is the register model step",
    "start": "1120720",
    "end": "1123200"
  },
  {
    "text": "this also has a pre-made step for",
    "start": "1123200",
    "end": "1124880"
  },
  {
    "text": "convenience",
    "start": "1124880",
    "end": "1127039"
  },
  {
    "text": "here we're setting a parameter string",
    "start": "1127039",
    "end": "1128799"
  },
  {
    "text": "for the model approval status",
    "start": "1128799",
    "end": "1131520"
  },
  {
    "text": "and we're saying that that status is",
    "start": "1131520",
    "end": "1133360"
  },
  {
    "text": "pending manual approval",
    "start": "1133360",
    "end": "1134880"
  },
  {
    "text": "meaning a person would need to go in and",
    "start": "1134880",
    "end": "1137200"
  },
  {
    "text": "manually approve this model for",
    "start": "1137200",
    "end": "1138880"
  },
  {
    "text": "production",
    "start": "1138880",
    "end": "1139679"
  },
  {
    "text": "later on by setting",
    "start": "1139679",
    "end": "1143039"
  },
  {
    "text": "this argument as a parameter string it",
    "start": "1143039",
    "end": "1145360"
  },
  {
    "text": "allows us to",
    "start": "1145360",
    "end": "1146240"
  },
  {
    "text": "change it in the future if we ever need",
    "start": "1146240",
    "end": "1149600"
  },
  {
    "text": "to",
    "start": "1149600",
    "end": "1151280"
  },
  {
    "text": "it's really helpful if you need to set",
    "start": "1151280",
    "end": "1153360"
  },
  {
    "text": "the value for some kind of step",
    "start": "1153360",
    "end": "1155280"
  },
  {
    "text": "parameter but keep it flexible so it can",
    "start": "1155280",
    "end": "1157440"
  },
  {
    "text": "change right before the pipeline is",
    "start": "1157440",
    "end": "1160799"
  },
  {
    "text": "executed",
    "start": "1162840",
    "end": "1164720"
  },
  {
    "text": "our fourth step is our create model step",
    "start": "1164720",
    "end": "1169120"
  },
  {
    "text": "the model is specified to use the output",
    "start": "1169120",
    "end": "1171520"
  },
  {
    "text": "of the training step",
    "start": "1171520",
    "end": "1173679"
  },
  {
    "text": "before deploying a model it is necessary",
    "start": "1173679",
    "end": "1176160"
  },
  {
    "text": "to run",
    "start": "1176160",
    "end": "1176720"
  },
  {
    "text": "the create model step",
    "start": "1176720",
    "end": "1179840"
  },
  {
    "text": "and step 5 we deploy our model",
    "start": "1181440",
    "end": "1184480"
  },
  {
    "text": "here we define a processing step again",
    "start": "1184480",
    "end": "1187120"
  },
  {
    "text": "but this time it runs our deploy",
    "start": "1187120",
    "end": "1189080"
  },
  {
    "text": "model.py script",
    "start": "1189080",
    "end": "1191679"
  },
  {
    "text": "and this dot py script contains the",
    "start": "1191679",
    "end": "1194880"
  },
  {
    "text": "deployment steps that we showed above",
    "start": "1194880",
    "end": "1198480"
  },
  {
    "text": "once all of our steps are defined we can",
    "start": "1200320",
    "end": "1202480"
  },
  {
    "text": "put them together",
    "start": "1202480",
    "end": "1204159"
  },
  {
    "text": "in this pipeline object in the pipeline",
    "start": "1204159",
    "end": "1207280"
  },
  {
    "text": "object we specify our parameters such as",
    "start": "1207280",
    "end": "1209360"
  },
  {
    "text": "the input data and the model approval",
    "start": "1209360",
    "end": "1211200"
  },
  {
    "text": "status",
    "start": "1211200",
    "end": "1212320"
  },
  {
    "text": "as well as each of the steps that we",
    "start": "1212320",
    "end": "1213919"
  },
  {
    "text": "just defined",
    "start": "1213919",
    "end": "1216639"
  },
  {
    "text": "when we call upsert the pipeline",
    "start": "1217280",
    "end": "1220159"
  },
  {
    "text": "registers it with sagemaker",
    "start": "1220159",
    "end": "1223679"
  },
  {
    "text": "before we run the pipeline we can use a",
    "start": "1227360",
    "end": "1229039"
  },
  {
    "text": "different value from for model approval",
    "start": "1229039",
    "end": "1231120"
  },
  {
    "text": "status",
    "start": "1231120",
    "end": "1232480"
  },
  {
    "text": "in this case we are saying that the",
    "start": "1232480",
    "end": "1233919"
  },
  {
    "text": "model is approved and ready for",
    "start": "1233919",
    "end": "1235280"
  },
  {
    "text": "production",
    "start": "1235280",
    "end": "1236720"
  },
  {
    "text": "for your use case you might want another",
    "start": "1236720",
    "end": "1238799"
  },
  {
    "text": "human in the loop to perform manual",
    "start": "1238799",
    "end": "1240720"
  },
  {
    "text": "approval",
    "start": "1240720",
    "end": "1241520"
  },
  {
    "text": "rather than approving models",
    "start": "1241520",
    "end": "1242880"
  },
  {
    "text": "automatically but here i'm showing you",
    "start": "1242880",
    "end": "1246720"
  },
  {
    "text": "what i had mentioned above that by",
    "start": "1246720",
    "end": "1248400"
  },
  {
    "text": "setting that parameter string we can now",
    "start": "1248400",
    "end": "1250480"
  },
  {
    "text": "change that parameter",
    "start": "1250480",
    "end": "1252080"
  },
  {
    "text": "here when we actually call the pipeline",
    "start": "1252080",
    "end": "1255919"
  },
  {
    "text": "when we call the pipeline.start it will",
    "start": "1256159",
    "end": "1258080"
  },
  {
    "text": "kick off the pipeline",
    "start": "1258080",
    "end": "1262000"
  },
  {
    "text": "once we kick off the pipeline we can",
    "start": "1262000",
    "end": "1265039"
  },
  {
    "text": "track the progress using",
    "start": "1265039",
    "end": "1266480"
  },
  {
    "text": "the sagemaker component and registries",
    "start": "1266480",
    "end": "1268640"
  },
  {
    "text": "icon on the left hand side",
    "start": "1268640",
    "end": "1272000"
  },
  {
    "start": "1273000",
    "end": "1372000"
  },
  {
    "text": "this pipeline will take around 30",
    "start": "1275600",
    "end": "1277280"
  },
  {
    "text": "minutes to complete and we'll pick back",
    "start": "1277280",
    "end": "1278960"
  },
  {
    "text": "up when it's finished",
    "start": "1278960",
    "end": "1280640"
  },
  {
    "text": "when the pipeline is finished we can see",
    "start": "1280640",
    "end": "1282400"
  },
  {
    "text": "that in the status here",
    "start": "1282400",
    "end": "1284320"
  },
  {
    "text": "the status will say either failed or",
    "start": "1284320",
    "end": "1286159"
  },
  {
    "text": "succeeded and here we can see",
    "start": "1286159",
    "end": "1287840"
  },
  {
    "text": "that our succeeded if we click in",
    "start": "1287840",
    "end": "1292240"
  },
  {
    "text": "we can see the graph showing green for",
    "start": "1292240",
    "end": "1294880"
  },
  {
    "text": "each stage as well meaning each stage",
    "start": "1294880",
    "end": "1296720"
  },
  {
    "text": "completed successfully",
    "start": "1296720",
    "end": "1298480"
  },
  {
    "text": "if any of your stages failed they will",
    "start": "1298480",
    "end": "1301360"
  },
  {
    "text": "appear red and you'll know exactly where",
    "start": "1301360",
    "end": "1302880"
  },
  {
    "text": "the problem is",
    "start": "1302880",
    "end": "1305440"
  },
  {
    "text": "so this graph shows all of our stages",
    "start": "1305440",
    "end": "1308000"
  },
  {
    "text": "from the",
    "start": "1308000",
    "end": "1308640"
  },
  {
    "text": "split data to training model",
    "start": "1308640",
    "end": "1311840"
  },
  {
    "text": "registering the model creating the model",
    "start": "1311840",
    "end": "1313919"
  },
  {
    "text": "and deploying the model",
    "start": "1313919",
    "end": "1315280"
  },
  {
    "text": "if we jump back to the notebook",
    "start": "1315280",
    "end": "1319840"
  },
  {
    "text": "we can also print the lineage table",
    "start": "1324400",
    "end": "1326960"
  },
  {
    "text": "visualizer",
    "start": "1326960",
    "end": "1327760"
  },
  {
    "text": "which shows all of the artifacts that",
    "start": "1327760",
    "end": "1329679"
  },
  {
    "text": "have been tracked through lineage",
    "start": "1329679",
    "end": "1331840"
  },
  {
    "text": "that way if we need to know which data",
    "start": "1331840",
    "end": "1334000"
  },
  {
    "text": "was used or which model",
    "start": "1334000",
    "end": "1335360"
  },
  {
    "text": "we have a history to refer to these",
    "start": "1335360",
    "end": "1338159"
  },
  {
    "text": "lineage artifacts are the same ones that",
    "start": "1338159",
    "end": "1340000"
  },
  {
    "text": "we defined earlier in the notebook",
    "start": "1340000",
    "end": "1342240"
  },
  {
    "text": "well there you have it in this demo we",
    "start": "1342240",
    "end": "1344640"
  },
  {
    "text": "showed you how to integrate various",
    "start": "1344640",
    "end": "1346159"
  },
  {
    "text": "sagemaker services",
    "start": "1346159",
    "end": "1347600"
  },
  {
    "text": "including training hyperparameter tuning",
    "start": "1347600",
    "end": "1350799"
  },
  {
    "text": "model lineage model registry",
    "start": "1350799",
    "end": "1353919"
  },
  {
    "text": "deployment and pipelines we built an",
    "start": "1353919",
    "end": "1356960"
  },
  {
    "text": "image classification model",
    "start": "1356960",
    "end": "1358559"
  },
  {
    "text": "using sagemaker's built-in algorithm",
    "start": "1358559",
    "end": "1361039"
  },
  {
    "text": "which allowed us to identify metastases",
    "start": "1361039",
    "end": "1363280"
  },
  {
    "text": "in medical imaging",
    "start": "1363280",
    "end": "1365360"
  },
  {
    "text": "happy building",
    "start": "1365360",
    "end": "1374559"
  }
]