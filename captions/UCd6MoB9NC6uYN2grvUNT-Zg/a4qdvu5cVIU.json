[
  {
    "start": "0",
    "end": "27000"
  },
  {
    "text": "[Music]",
    "start": "50",
    "end": "1010"
  },
  {
    "text": "[Applause]",
    "start": "1010",
    "end": "4088"
  },
  {
    "text": "[Music]",
    "start": "4960",
    "end": "11689"
  },
  {
    "text": "hello",
    "start": "12080",
    "end": "13040"
  },
  {
    "text": "i'm priyanka a cloud support engineer",
    "start": "13040",
    "end": "15120"
  },
  {
    "text": "here at the aws office in northern",
    "start": "15120",
    "end": "17119"
  },
  {
    "text": "virginia today i am going to show you",
    "start": "17119",
    "end": "19760"
  },
  {
    "text": "how to expose the kubernetes service",
    "start": "19760",
    "end": "22000"
  },
  {
    "text": "running on my amazon elastic kubernetes",
    "start": "22000",
    "end": "24240"
  },
  {
    "text": "service cluster",
    "start": "24240",
    "end": "25680"
  },
  {
    "text": "let's get started",
    "start": "25680",
    "end": "27920"
  },
  {
    "start": "27000",
    "end": "90000"
  },
  {
    "text": "to expose the kubernetes service running",
    "start": "27920",
    "end": "30080"
  },
  {
    "text": "on your cluster create a sample",
    "start": "30080",
    "end": "31920"
  },
  {
    "text": "application",
    "start": "31920",
    "end": "33200"
  },
  {
    "text": "then apply the cluster ip",
    "start": "33200",
    "end": "35280"
  },
  {
    "text": "node port and the load balancer",
    "start": "35280",
    "end": "37360"
  },
  {
    "text": "kubernetes service type to your sample",
    "start": "37360",
    "end": "39680"
  },
  {
    "text": "application",
    "start": "39680",
    "end": "41520"
  },
  {
    "text": "keep in mind the following cluster ip",
    "start": "41520",
    "end": "44399"
  },
  {
    "text": "exposes the service on the cluster's",
    "start": "44399",
    "end": "46480"
  },
  {
    "text": "internal ip address",
    "start": "46480",
    "end": "48399"
  },
  {
    "text": "node port exposes the service on each",
    "start": "48399",
    "end": "50879"
  },
  {
    "text": "node's ip address at a static port",
    "start": "50879",
    "end": "54079"
  },
  {
    "text": "load balancer exposes the service",
    "start": "54079",
    "end": "56399"
  },
  {
    "text": "externally using a load balancer",
    "start": "56399",
    "end": "60000"
  },
  {
    "text": "note",
    "start": "60000",
    "end": "60879"
  },
  {
    "text": "amazon ek supports network load balancer",
    "start": "60879",
    "end": "63760"
  },
  {
    "text": "and classic load balancers for pods",
    "start": "63760",
    "end": "65920"
  },
  {
    "text": "running on amazon elastic compute cloud",
    "start": "65920",
    "end": "68320"
  },
  {
    "text": "instance worker nodes",
    "start": "68320",
    "end": "70240"
  },
  {
    "text": "amazon eks provides this support by",
    "start": "70240",
    "end": "72640"
  },
  {
    "text": "using the load balancer",
    "start": "72640",
    "end": "74960"
  },
  {
    "text": "you can load balance network traffic to",
    "start": "74960",
    "end": "77200"
  },
  {
    "text": "a network load balancer with instance or",
    "start": "77200",
    "end": "79680"
  },
  {
    "text": "ip target or a classic load balancer",
    "start": "79680",
    "end": "82960"
  },
  {
    "text": "with instance target",
    "start": "82960",
    "end": "84840"
  },
  {
    "text": "only the first step is to create a",
    "start": "84840",
    "end": "87600"
  },
  {
    "text": "sample application to do that log into a",
    "start": "87600",
    "end": "90400"
  },
  {
    "start": "90000",
    "end": "108000"
  },
  {
    "text": "terminal that has cube ctl installed",
    "start": "90400",
    "end": "94400"
  },
  {
    "text": "define and apply a deployment file the",
    "start": "94400",
    "end": "97040"
  },
  {
    "text": "following example creates a replica set",
    "start": "97040",
    "end": "99280"
  },
  {
    "text": "that spins up two nginx pods and then",
    "start": "99280",
    "end": "102479"
  },
  {
    "text": "creates a file called",
    "start": "102479",
    "end": "103759"
  },
  {
    "text": "nginxdeployment.yml",
    "start": "103759",
    "end": "106759"
  },
  {
    "text": "create the deployment by running the",
    "start": "106960",
    "end": "108560"
  },
  {
    "start": "108000",
    "end": "225000"
  },
  {
    "text": "following command",
    "start": "108560",
    "end": "111280"
  },
  {
    "text": "now verify that your pods are running",
    "start": "111280",
    "end": "113759"
  },
  {
    "text": "and have their own internal ip addresses",
    "start": "113759",
    "end": "116240"
  },
  {
    "text": "using the following command",
    "start": "116240",
    "end": "119040"
  },
  {
    "text": "your output should look like this",
    "start": "119040",
    "end": "122159"
  },
  {
    "text": "now that we have successfully created a",
    "start": "122159",
    "end": "124719"
  },
  {
    "text": "sample application",
    "start": "124719",
    "end": "126320"
  },
  {
    "text": "let's start with the next step to create",
    "start": "126320",
    "end": "128239"
  },
  {
    "text": "the cluster iop service",
    "start": "128239",
    "end": "131280"
  },
  {
    "text": "first create a file called",
    "start": "131280",
    "end": "133319"
  },
  {
    "text": "clusterip.yaml and then set type to",
    "start": "133319",
    "end": "136000"
  },
  {
    "text": "cluster ip for example",
    "start": "136000",
    "end": "139599"
  },
  {
    "text": "create the cluster ip object in",
    "start": "139599",
    "end": "141599"
  },
  {
    "text": "kubernetes using either a declarative or",
    "start": "141599",
    "end": "144400"
  },
  {
    "text": "imperative command",
    "start": "144400",
    "end": "146879"
  },
  {
    "text": "to create the object and apply the",
    "start": "146879",
    "end": "148879"
  },
  {
    "text": "cluster ip.eml file run the following",
    "start": "148879",
    "end": "152080"
  },
  {
    "text": "declarative command",
    "start": "152080",
    "end": "154800"
  },
  {
    "text": "to expose a deployment of cluster ip",
    "start": "154800",
    "end": "157519"
  },
  {
    "text": "type run the following imperative",
    "start": "157519",
    "end": "159599"
  },
  {
    "text": "command",
    "start": "159599",
    "end": "161840"
  },
  {
    "text": "note the expose command creates a",
    "start": "161840",
    "end": "164239"
  },
  {
    "text": "service without creating a yaml file",
    "start": "164239",
    "end": "167120"
  },
  {
    "text": "however",
    "start": "167120",
    "end": "168239"
  },
  {
    "text": "cubectl",
    "start": "168239",
    "end": "169599"
  },
  {
    "text": "translates your imperative command into",
    "start": "169599",
    "end": "171840"
  },
  {
    "text": "a declarative kubernetes deployment",
    "start": "171840",
    "end": "174000"
  },
  {
    "text": "object",
    "start": "174000",
    "end": "176080"
  },
  {
    "text": "access the application and get the",
    "start": "176080",
    "end": "178000"
  },
  {
    "text": "cluster ip number using the following",
    "start": "178000",
    "end": "180319"
  },
  {
    "text": "command",
    "start": "180319",
    "end": "182319"
  },
  {
    "text": "you should see an output similar to this",
    "start": "182319",
    "end": "186400"
  },
  {
    "text": "to test the configuration let's use this",
    "start": "186400",
    "end": "189120"
  },
  {
    "text": "example",
    "start": "189120",
    "end": "190319"
  },
  {
    "text": "first",
    "start": "190319",
    "end": "191280"
  },
  {
    "text": "create a test pod using the following",
    "start": "191280",
    "end": "193360"
  },
  {
    "text": "command",
    "start": "193360",
    "end": "195440"
  },
  {
    "text": "you should see an output similar to this",
    "start": "195440",
    "end": "199360"
  },
  {
    "text": "next",
    "start": "199360",
    "end": "200319"
  },
  {
    "text": "use exec into the pod and curl the",
    "start": "200319",
    "end": "202720"
  },
  {
    "text": "cluster ip",
    "start": "202720",
    "end": "204720"
  },
  {
    "text": "you should see an output similar to this",
    "start": "204720",
    "end": "209040"
  },
  {
    "text": "delete the cluster ip service using the",
    "start": "209040",
    "end": "211599"
  },
  {
    "text": "following command",
    "start": "211599",
    "end": "214000"
  },
  {
    "text": "you see the output that's similar to",
    "start": "214000",
    "end": "216400"
  },
  {
    "text": "this",
    "start": "216400",
    "end": "218640"
  },
  {
    "text": "in a similar way to how we created",
    "start": "218879",
    "end": "221280"
  },
  {
    "text": "cluster ip service we can create a node",
    "start": "221280",
    "end": "223760"
  },
  {
    "text": "port service",
    "start": "223760",
    "end": "226080"
  },
  {
    "start": "225000",
    "end": "352000"
  },
  {
    "text": "to create an output service create a",
    "start": "226080",
    "end": "228560"
  },
  {
    "text": "file called node.jaml",
    "start": "228560",
    "end": "230879"
  },
  {
    "text": "and then set type to node port for",
    "start": "230879",
    "end": "233680"
  },
  {
    "text": "example",
    "start": "233680",
    "end": "236080"
  },
  {
    "text": "create an output object in kubernetes",
    "start": "236080",
    "end": "239040"
  },
  {
    "text": "using either a declarative or imperative",
    "start": "239040",
    "end": "241360"
  },
  {
    "text": "command",
    "start": "241360",
    "end": "243360"
  },
  {
    "text": "to create the object and apply the",
    "start": "243360",
    "end": "245480"
  },
  {
    "text": "node.yaml file",
    "start": "245480",
    "end": "247439"
  },
  {
    "text": "run the following declarative command",
    "start": "247439",
    "end": "250720"
  },
  {
    "text": "alternatively",
    "start": "250720",
    "end": "252080"
  },
  {
    "text": "to expose a deployment of node port type",
    "start": "252080",
    "end": "255360"
  },
  {
    "text": "run the following imperative command",
    "start": "255360",
    "end": "258959"
  },
  {
    "text": "get the information about nginx service",
    "start": "258959",
    "end": "262960"
  },
  {
    "text": "an important note the service type is a",
    "start": "262960",
    "end": "265600"
  },
  {
    "text": "node port and cluster i p are created",
    "start": "265600",
    "end": "268639"
  },
  {
    "text": "automatically for the service",
    "start": "268639",
    "end": "271600"
  },
  {
    "text": "the output from the preceding command",
    "start": "271600",
    "end": "273759"
  },
  {
    "text": "shows that the node port service is",
    "start": "273759",
    "end": "276080"
  },
  {
    "text": "export externally",
    "start": "276080",
    "end": "277840"
  },
  {
    "text": "on the port",
    "start": "277840",
    "end": "279160"
  },
  {
    "text": "30051 of the available worker nodes ec2",
    "start": "279160",
    "end": "283280"
  },
  {
    "text": "instance",
    "start": "283280",
    "end": "285280"
  },
  {
    "text": "before you access",
    "start": "285280",
    "end": "286880"
  },
  {
    "text": "node ip colon node port from outside the",
    "start": "286880",
    "end": "289840"
  },
  {
    "text": "cluster",
    "start": "289840",
    "end": "291040"
  },
  {
    "text": "you must set the security group of the",
    "start": "291040",
    "end": "293199"
  },
  {
    "text": "nodes to allow the incoming traffic",
    "start": "293199",
    "end": "296560"
  },
  {
    "text": "you can allow the incoming traffic",
    "start": "296560",
    "end": "298479"
  },
  {
    "text": "through the port",
    "start": "298479",
    "end": "300280"
  },
  {
    "text": "30051 that's listed in the output of the",
    "start": "300280",
    "end": "303440"
  },
  {
    "text": "preceding cube ctl get service command",
    "start": "303440",
    "end": "305920"
  },
  {
    "text": "[Music]",
    "start": "305920",
    "end": "307440"
  },
  {
    "text": "if the node is in public subnet and is",
    "start": "307440",
    "end": "309919"
  },
  {
    "text": "reachable from the internet",
    "start": "309919",
    "end": "311840"
  },
  {
    "text": "then check the node's public ip address",
    "start": "311840",
    "end": "314400"
  },
  {
    "text": "using the following command",
    "start": "314400",
    "end": "317440"
  },
  {
    "text": "or if the node is in private subnet and",
    "start": "317440",
    "end": "320400"
  },
  {
    "text": "is reachable only inside or through a",
    "start": "320400",
    "end": "322800"
  },
  {
    "text": "vpc then check the node's private ip",
    "start": "322800",
    "end": "325680"
  },
  {
    "text": "address using the following command",
    "start": "325680",
    "end": "328960"
  },
  {
    "text": "to test the configuration let's create a",
    "start": "328960",
    "end": "331520"
  },
  {
    "text": "test port using the following command",
    "start": "331520",
    "end": "334960"
  },
  {
    "text": "you should see an output similar to this",
    "start": "334960",
    "end": "338960"
  },
  {
    "text": "next",
    "start": "338960",
    "end": "340000"
  },
  {
    "text": "we will exec into the pod and curl the",
    "start": "340000",
    "end": "342560"
  },
  {
    "text": "node ip including the node port",
    "start": "342560",
    "end": "346639"
  },
  {
    "text": "now if you would like to delete the node",
    "start": "346639",
    "end": "348880"
  },
  {
    "text": "put service",
    "start": "348880",
    "end": "351280"
  },
  {
    "text": "now let's create a load balancer service",
    "start": "351280",
    "end": "355280"
  },
  {
    "start": "352000",
    "end": "432000"
  },
  {
    "text": "to create a load balancer service create",
    "start": "355280",
    "end": "357840"
  },
  {
    "text": "a file called",
    "start": "357840",
    "end": "359240"
  },
  {
    "text": "loadbalancer.yaml and then set type to",
    "start": "359240",
    "end": "362400"
  },
  {
    "text": "loadbalancer",
    "start": "362400",
    "end": "363840"
  },
  {
    "text": "for example",
    "start": "363840",
    "end": "366160"
  },
  {
    "text": "apply the loadbalancer.yaml using the",
    "start": "366160",
    "end": "368720"
  },
  {
    "text": "following command",
    "start": "368720",
    "end": "371039"
  },
  {
    "text": "or",
    "start": "371039",
    "end": "371919"
  },
  {
    "text": "to expose a deployment of load balancer",
    "start": "371919",
    "end": "374240"
  },
  {
    "text": "type run the following imperative",
    "start": "374240",
    "end": "376080"
  },
  {
    "text": "command",
    "start": "376080",
    "end": "378160"
  },
  {
    "text": "get information about the nginx service",
    "start": "378160",
    "end": "382080"
  },
  {
    "text": "verify that you can access the load",
    "start": "382080",
    "end": "384000"
  },
  {
    "text": "balancer externally",
    "start": "384000",
    "end": "386639"
  },
  {
    "text": "you receive the following output between",
    "start": "386639",
    "end": "389120"
  },
  {
    "text": "html title tags",
    "start": "389120",
    "end": "391360"
  },
  {
    "text": "welcome to nginx",
    "start": "391360",
    "end": "393759"
  },
  {
    "text": "now if you want to delete the load",
    "start": "393759",
    "end": "395680"
  },
  {
    "text": "balancer service",
    "start": "395680",
    "end": "398080"
  },
  {
    "text": "note",
    "start": "398080",
    "end": "398960"
  },
  {
    "text": "by default the preceding load balancer",
    "start": "398960",
    "end": "401039"
  },
  {
    "text": "service creates a classic load balancer",
    "start": "401039",
    "end": "404880"
  },
  {
    "text": "to create a network load balancer with",
    "start": "404880",
    "end": "407280"
  },
  {
    "text": "the instance type target add the",
    "start": "407280",
    "end": "409440"
  },
  {
    "text": "following annotations to the service",
    "start": "409440",
    "end": "411680"
  },
  {
    "text": "manifest",
    "start": "411680",
    "end": "413840"
  },
  {
    "text": "or",
    "start": "413840",
    "end": "414720"
  },
  {
    "text": "you can create a network load balancer",
    "start": "414720",
    "end": "417039"
  },
  {
    "text": "with ip targets",
    "start": "417039",
    "end": "419280"
  },
  {
    "text": "deploy the aws load balancer controller",
    "start": "419280",
    "end": "422080"
  },
  {
    "text": "and then create a load balancer that",
    "start": "422080",
    "end": "424639"
  },
  {
    "text": "uses ip targets",
    "start": "424639",
    "end": "426800"
  },
  {
    "text": "to learn more see the documentation",
    "start": "426800",
    "end": "429120"
  },
  {
    "text": "linked in the associated knowledge",
    "start": "429120",
    "end": "430800"
  },
  {
    "text": "center article",
    "start": "430800",
    "end": "432960"
  },
  {
    "start": "432000",
    "end": "456000"
  },
  {
    "text": "so now you know how to expose the",
    "start": "432960",
    "end": "434880"
  },
  {
    "text": "kubernetes service",
    "start": "434880",
    "end": "436400"
  },
  {
    "text": "running on my amazon eks cluster",
    "start": "436400",
    "end": "439840"
  },
  {
    "text": "thanks for watching and happy cloud",
    "start": "439840",
    "end": "441680"
  },
  {
    "text": "computing from all of us here at aws",
    "start": "441680",
    "end": "445490"
  },
  {
    "text": "[Music]",
    "start": "445490",
    "end": "446530"
  },
  {
    "text": "[Applause]",
    "start": "446530",
    "end": "449610"
  },
  {
    "text": "[Music]",
    "start": "453490",
    "end": "454800"
  },
  {
    "text": "you",
    "start": "454800",
    "end": "456879"
  }
]