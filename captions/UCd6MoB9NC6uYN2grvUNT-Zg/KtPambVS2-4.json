[
  {
    "start": "0",
    "end": "133000"
  },
  {
    "text": "and for the next 40 minutes we're going to be talking about the fundamentals of networking and security and the services",
    "start": "0",
    "end": "6899"
  },
  {
    "text": "surrounding that on AWS so if you're already familiar with AWS and you've",
    "start": "6899",
    "end": "13200"
  },
  {
    "text": "been in some of the previous sessions today you will have heard about ec2 instances virtual machines running in",
    "start": "13200",
    "end": "18840"
  },
  {
    "text": "the cloud so you probably are going to be running at least one of those you",
    "start": "18840",
    "end": "23910"
  },
  {
    "text": "might be running more than one and all of these are running within AWS running",
    "start": "23910",
    "end": "29189"
  },
  {
    "text": "in the cloud but in reality there's a little bit more detail behind that all",
    "start": "29189",
    "end": "34380"
  },
  {
    "text": "of these ec2 instances are actually running inside a VDC and that's because",
    "start": "34380",
    "end": "40290"
  },
  {
    "text": "every single ec2 instance that you launch will need to have an IP address and in this case I'm showing you the",
    "start": "40290",
    "end": "46350"
  },
  {
    "text": "private IP addresses for these ec2 instances if we want to go into one more little piece of detail these ec2",
    "start": "46350",
    "end": "53670"
  },
  {
    "text": "instances with our IP addresses are running within particular subnets and these subnets are aligned to our",
    "start": "53670",
    "end": "59340"
  },
  {
    "text": "availability zones some of these ec2 instances may also need to have public",
    "start": "59340",
    "end": "65280"
  },
  {
    "text": "IP addresses and as a result you need a route to the internet using something",
    "start": "65280",
    "end": "70409"
  },
  {
    "text": "called the internet gateway so what you're seeing on the screen now is a typical V PC an internet-connected V PC",
    "start": "70409",
    "end": "76799"
  },
  {
    "text": "and to start this session I want to talk to you through the process of actually building an environment like this so",
    "start": "76799",
    "end": "83909"
  },
  {
    "text": "simply put a V PC is your private network within AWS virtual private cloud",
    "start": "83909",
    "end": "90110"
  },
  {
    "text": "so let's build an internet-connected V PC and to do that there are four really quite simple steps the first thing we",
    "start": "90110",
    "end": "97890"
  },
  {
    "text": "need to do is choose what IP addresses we want to use within our V PC once",
    "start": "97890",
    "end": "102990"
  },
  {
    "text": "we've done that we need to then create our subnets which are aligned to the availability zones within the AWS region",
    "start": "102990",
    "end": "109310"
  },
  {
    "text": "we need to then create routing out to the Internet and then finally we need to",
    "start": "109310",
    "end": "114600"
  },
  {
    "text": "actually allow the traffic to flow we need to configure the security within our V PC so these four simple steps we",
    "start": "114600",
    "end": "121380"
  },
  {
    "text": "can build our internet connected V PC so the first step let's choose our IP address range for this particular V PC",
    "start": "121380",
    "end": "127759"
  },
  {
    "text": "now we use something called cider notation that's classless inter-domain routing",
    "start": "127759",
    "end": "133140"
  },
  {
    "start": "133000",
    "end": "133000"
  },
  {
    "text": "this is the kind of format that it takes now if you've not seen this kind of format for IP addressing before it's",
    "start": "133140",
    "end": "138240"
  },
  {
    "text": "quite simple what it means is if we convert all of that into binary it means that we take the top 16 bits and we fix",
    "start": "138240",
    "end": "145350"
  },
  {
    "text": "them so this particular V PC is 1/7 2.31 and then if everything from 0.0 through",
    "start": "145350",
    "end": "151920"
  },
  {
    "text": "to 255 255 thats the V PC that we're going to create this is the side of range that",
    "start": "151920",
    "end": "157500"
  },
  {
    "text": "we're assigning to it when we choose our side arrange that's the first choice we",
    "start": "157500",
    "end": "164340"
  },
  {
    "start": "159000",
    "end": "159000"
  },
  {
    "text": "make for our V PC and it is fixed for the lifetime of that V PC you can't change it once the V PC has been created",
    "start": "164340",
    "end": "171380"
  },
  {
    "text": "we would recommend that when you create the V PC you choose RFC 1918 address",
    "start": "171380",
    "end": "176760"
  },
  {
    "text": "space that's private address space and in general unless you have another reason you might as well start with a",
    "start": "176760",
    "end": "183390"
  },
  {
    "text": "slash 16 that's the largest amount of address space that you can assign to a V PC that's just over 64 and a half",
    "start": "183390",
    "end": "189600"
  },
  {
    "text": "thousand IP addresses I think that might be enough to get by for now the other",
    "start": "189600",
    "end": "195420"
  },
  {
    "text": "thing to consider when you choose this address range is if you have an existing on-premises network or a data center",
    "start": "195420",
    "end": "200760"
  },
  {
    "text": "network already let's choose an IP address range that does not overlap with that existing infrastructure that you",
    "start": "200760",
    "end": "206160"
  },
  {
    "text": "already have let's start with a nice clean set of address space so great",
    "start": "206160",
    "end": "211890"
  },
  {
    "text": "we've chosen our side arrange for our V PC the next thing to do is to divide that up into subnets so here we have our",
    "start": "211890",
    "end": "217890"
  },
  {
    "text": "V PC and I'm going to overlay on top of that the availability zones for this particular region so we're using a u.s.",
    "start": "217890",
    "end": "224430"
  },
  {
    "text": "one this is in Ireland and we have three availability zones in Ireland so at a minimum we can choose to create three",
    "start": "224430",
    "end": "231000"
  },
  {
    "text": "different subnets one in each availability zone when we do that again we need to assign a block of IP",
    "start": "231000",
    "end": "237090"
  },
  {
    "text": "addresses from the side arranged assigned to the V PC to be used in each of these subnets so in this case I'm",
    "start": "237090",
    "end": "243900"
  },
  {
    "text": "going to go with slash 24 so 250 order IP addresses and we're going to assign a",
    "start": "243900",
    "end": "249000"
  },
  {
    "text": "different slash 24 to each of the subnets that I've created so as a",
    "start": "249000",
    "end": "255989"
  },
  {
    "text": "general recommendation when you're choosing your IP address schema for your V PC we would suggest unless you have",
    "start": "255989",
    "end": "261479"
  },
  {
    "text": "another reason to start with slash 16 for the actual V PC itself and I would smash 24s for the subnets you",
    "start": "261479",
    "end": "268680"
  },
  {
    "text": "can then keep creating more subnets with slash 24s assigned to them within that vbc as you need to again start from the",
    "start": "268680",
    "end": "276060"
  },
  {
    "text": "perspective of having one subnet per availability zone at least but you can always grow that later on so now we have",
    "start": "276060",
    "end": "285030"
  },
  {
    "text": "our V PC and our subnets created V PC is a pretty lonely place unless we can talk to something outside it so we want to",
    "start": "285030",
    "end": "291599"
  },
  {
    "text": "talk to the internet so how do we configure that well within the V PC we're going to configure routing we're",
    "start": "291599",
    "end": "297210"
  },
  {
    "start": "295000",
    "end": "295000"
  },
  {
    "text": "going to use route tables and this is where interesting things happen in the V PC a route table is simply a set of",
    "start": "297210",
    "end": "302880"
  },
  {
    "text": "rules that explain where traffic should flow or where packets should be directed to and when you create your V PC you",
    "start": "302880",
    "end": "309150"
  },
  {
    "text": "have what's called a main route table created for that V PC at the very beginning that main route table just has",
    "start": "309150",
    "end": "315930"
  },
  {
    "text": "one simple entry in it which I'll show you in a moment that allows traffic to flow just within your V PC and we're",
    "start": "315930",
    "end": "321810"
  },
  {
    "text": "going to need to modify that to enable traffic to flow to the Internet one thing that you can do with route tables",
    "start": "321810",
    "end": "327780"
  },
  {
    "text": "though is that you can assign a different route table to every single subnet in your V PC if you want to so",
    "start": "327780",
    "end": "333810"
  },
  {
    "text": "you can have different routing applied to different sets of ec2 instances but for the moment let's keep it fairly",
    "start": "333810",
    "end": "339449"
  },
  {
    "text": "simple so this is the main route table for my V PC you can see down at the",
    "start": "339449",
    "end": "344940"
  },
  {
    "text": "bottom of the screen I have an entry that says 170 2.30 1/16 is local so that",
    "start": "344940",
    "end": "351150"
  },
  {
    "text": "enables the traffic to flow within my V PC between all of the ec2 instances in the subnets for traffic to flow out to",
    "start": "351150",
    "end": "359849"
  },
  {
    "start": "357000",
    "end": "357000"
  },
  {
    "text": "the internet though I need to create one other thing for my V PC and that's called an Internet gateway and igw",
    "start": "359849",
    "end": "365810"
  },
  {
    "text": "so you can see here I've created an Internet gateway in the console it is attached to my B PC but until I go and",
    "start": "365810",
    "end": "373380"
  },
  {
    "text": "modify the route table there is nothing using this particular internet gateway so let's go back to the route table we",
    "start": "373380",
    "end": "380070"
  },
  {
    "text": "were looking at earlier you can see the local entry that's already there we're going to add an entry which says anything that is not destined for my V",
    "start": "380070",
    "end": "387449"
  },
  {
    "text": "PC let's send it to the Internet gateway and that's expressed as a route that says 0.0.0.0 the internet you can get",
    "start": "387449",
    "end": "396300"
  },
  {
    "text": "for that fire I GW and the identifier for the internet gate so now we have two entries inside our",
    "start": "396300",
    "end": "402660"
  },
  {
    "text": "root table okay so we now have subnets and we have a route out to the Internet where we're getting there but we have",
    "start": "402660",
    "end": "409259"
  },
  {
    "text": "one more thing that we need to configure and that is the security for our V PC now we support two primary concepts to",
    "start": "409259",
    "end": "417330"
  },
  {
    "text": "consider here for your V PC in terms of security network ACLs and security groups so let's take Network ACLs first",
    "start": "417330",
    "end": "424800"
  },
  {
    "start": "423000",
    "end": "423000"
  },
  {
    "text": "a network ACL is basically a stateless firewall you need to define traffic flow",
    "start": "424800",
    "end": "430740"
  },
  {
    "text": "in both directions and you apply this to a subnet so what you can see here is",
    "start": "430740",
    "end": "436080"
  },
  {
    "text": "that this particular network ACL is assigned to all of the subnets in my V PC and it has a very simple rule base at",
    "start": "436080",
    "end": "442319"
  },
  {
    "text": "the bottom of the screen you can see that the lowest rule at the bottom the one that we create by default is a deny",
    "start": "442319",
    "end": "448440"
  },
  {
    "text": "rule on top of that though when you first create your V PC we actually add an extra rule for you which is the rule",
    "start": "448440",
    "end": "454440"
  },
  {
    "text": "100 that's shown here that actually allows all traffic and that's because quite often this is where customers",
    "start": "454440",
    "end": "459930"
  },
  {
    "text": "choose to start with their network ACLs and network APL's are processed in order",
    "start": "459930",
    "end": "466590"
  },
  {
    "text": "of their rule number so on the left hand side you see a rule number and traffic is then matched against that rule and",
    "start": "466590",
    "end": "471630"
  },
  {
    "text": "either allowed or denied the translation of what you're seeing on the screen here",
    "start": "471630",
    "end": "477000"
  },
  {
    "text": "is as much as we have a deny rule at the bottom above that we have an allow rule that allows all traffic so right now",
    "start": "477000",
    "end": "482639"
  },
  {
    "text": "this network ACL is going to allow all traffic in and out of our subnet what",
    "start": "482639",
    "end": "489300"
  },
  {
    "start": "488000",
    "end": "488000"
  },
  {
    "text": "about security groups so security groups are applied in a slightly different way if you look at our V PC here we've got",
    "start": "489300",
    "end": "496500"
  },
  {
    "text": "two very clear different sets of ec2 instances we have these ones at the top we have the ones at the bottom now we",
    "start": "496500",
    "end": "503400"
  },
  {
    "text": "might consider these perhaps our web servers at the top and maybe our back-end servers our database servers at",
    "start": "503400",
    "end": "508710"
  },
  {
    "text": "the bottom here and security groups tend to follow your application structure so",
    "start": "508710",
    "end": "514169"
  },
  {
    "text": "in this case if we think about what we would want to happen with our traffic coming into our V PC we want to allow",
    "start": "514169",
    "end": "519719"
  },
  {
    "text": "480 inbound from the internet these are web servers so that's the first thing we need to be able to configure but our",
    "start": "519719",
    "end": "526589"
  },
  {
    "text": "back-end servers no one needs to be able to talk to those except for the web servers the rule that we want to apply here is",
    "start": "526589",
    "end": "533140"
  },
  {
    "text": "allow traffic from my web servers to my back-end servers on a particular port number so this is what it looks like how",
    "start": "533140",
    "end": "539950"
  },
  {
    "text": "do we actually configure that if we go and take a look at our security groups in the console you can see the top two",
    "start": "539950",
    "end": "545560"
  },
  {
    "start": "541000",
    "end": "541000"
  },
  {
    "text": "security groups are the ones we're going to be working with here we have my web servers and now at the bottom you see",
    "start": "545560",
    "end": "551200"
  },
  {
    "text": "the rule that I have created within this security group and I think it's pretty self-explanatory we're allowing port 80",
    "start": "551200",
    "end": "557670"
  },
  {
    "text": "TCP to be able to connect from a source of anywhere so traffic from the Internet",
    "start": "557670",
    "end": "563529"
  },
  {
    "text": "is allowed on port 80 to our web servers but what about the backend servers the",
    "start": "563529",
    "end": "569830"
  },
  {
    "start": "568000",
    "end": "568000"
  },
  {
    "text": "backend servers we actually said we only want to allow traffic from our web servers so we could do that by listing",
    "start": "569830",
    "end": "575410"
  },
  {
    "text": "all the source IP addresses of those web servers but actually we don't need to do that because we've got all of our web",
    "start": "575410",
    "end": "581500"
  },
  {
    "text": "servers in a security group we can reference that security group as the source so you can see on the bottom",
    "start": "581500",
    "end": "587380"
  },
  {
    "text": "right hand side it says the source of this traffic of my database port in this case port 2 3 4 5 that is allowed from a",
    "start": "587380",
    "end": "594790"
  },
  {
    "text": "source of the web servers we don't have to reference any IP addresses so this is",
    "start": "594790",
    "end": "600190"
  },
  {
    "text": "a really easy way of configuring security within your V PC and allowing traffic to flow using security groups so",
    "start": "600190",
    "end": "608140"
  },
  {
    "start": "607000",
    "end": "607000"
  },
  {
    "text": "a couple of other things to consider with security groups always consider the principle of least privilege if a permission is not required don't grant",
    "start": "608140",
    "end": "614950"
  },
  {
    "text": "it if you don't need to open up your back-end servers to the Internet don't only open them up to the web",
    "start": "614950",
    "end": "620110"
  },
  {
    "text": "servers VPC security groups allow you to control traffic both inbound and",
    "start": "620110",
    "end": "626230"
  },
  {
    "text": "outbound you'll see two tabs at the bottom of the screen if you're using the console so you can actually choose to allow traffic inbound on port 80 and",
    "start": "626230",
    "end": "633640"
  },
  {
    "text": "because these are stateful firewalls will allow the reply automatically if those web servers don't need to be able",
    "start": "633640",
    "end": "639700"
  },
  {
    "text": "to reach out to the Internet you can set the outbound rules to not have any entries in them at all that's the best",
    "start": "639700",
    "end": "645370"
  },
  {
    "text": "practice for a security group and finally you'll quite often find that the",
    "start": "645370",
    "end": "650589"
  },
  {
    "text": "architecture of your applications map quite nicely between security groups and iam roles and I am is Identity and",
    "start": "650589",
    "end": "657850"
  },
  {
    "text": "Access Management so I am role will determine what it is that instance can do and the security group will determine",
    "start": "657850",
    "end": "664270"
  },
  {
    "text": "who it is that I'm allowed to talk to so normally those two things work quite closely together so",
    "start": "664270",
    "end": "672820"
  },
  {
    "text": "we've now got our internet connected VPC what if we want to connect to something else well what else might we want to",
    "start": "672820",
    "end": "678910"
  },
  {
    "text": "connect to well we might want to connect to our on-premises infrastructure our data center realigning even want to",
    "start": "678910",
    "end": "683920"
  },
  {
    "text": "connect to other V pcs so how do we actually do that well first of all let's",
    "start": "683920",
    "end": "689290"
  },
  {
    "text": "consider the fact that if we're talking to other environments perhaps a data center we might want to restrict our",
    "start": "689290",
    "end": "694420"
  },
  {
    "text": "ability to talk to the Internet we might want to be able to connect this V PC to many other V pcs and then finally once",
    "start": "694420",
    "end": "701830"
  },
  {
    "text": "we've done that connect back to that corporate network so these are the three steps that I'm going to take you through next so how do we restrict routing out",
    "start": "701830",
    "end": "710200"
  },
  {
    "text": "to the internet first before we connect this V PC to anything else let's consider that you remember earlier that",
    "start": "710200",
    "end": "717040"
  },
  {
    "start": "716000",
    "end": "716000"
  },
  {
    "text": "I mentioned you can create route tables for individual subnets so let's take our application here we've got our front-end",
    "start": "717040",
    "end": "722890"
  },
  {
    "text": "web servers again and our back-end servers but this time let's put them in two different subnets what we now want",
    "start": "722890",
    "end": "729970"
  },
  {
    "text": "to do is configure these web servers so that they can talk to the Internet remember we're allowing port 80 in this is for our consumers to access our web",
    "start": "729970",
    "end": "736840"
  },
  {
    "text": "servers so that's fine we've already built one of those we have an internet gate where we have a route table but",
    "start": "736840",
    "end": "742810"
  },
  {
    "text": "these back-end instances they don't need to ever talk to the internet so how do",
    "start": "742810",
    "end": "748510"
  },
  {
    "start": "748000",
    "end": "748000"
  },
  {
    "text": "we configure that well here's our two subnets I've put them side-by-side now rather than underneath each other we",
    "start": "748510",
    "end": "753730"
  },
  {
    "text": "need to consider one other element though for our back-end servers what if they need to go and get some updates what if they need to reach out to a",
    "start": "753730",
    "end": "759400"
  },
  {
    "text": "young repo or Windows Update something like that so we can use something called in that",
    "start": "759400",
    "end": "764770"
  },
  {
    "text": "gateway to enable that and actually separate our two subnets using two different route tables so what we're",
    "start": "764770",
    "end": "771610"
  },
  {
    "text": "going to do is we're going to have our route table with a default route to the Internet gateway that's the existing one",
    "start": "771610",
    "end": "776790"
  },
  {
    "text": "however on our private subnet our one that has our back-end servers we've created a brand new route tape it has no",
    "start": "776790",
    "end": "783339"
  },
  {
    "text": "entries in it apart from the local route when we create it we're then going to create an app gateway and that in that",
    "start": "783339",
    "end": "789730"
  },
  {
    "text": "gateway lives inside the Internet connected subnet and what we can then do",
    "start": "789730",
    "end": "795250"
  },
  {
    "text": "is configure our route table from our private subnet or our back servers are to send all that traffic",
    "start": "795250",
    "end": "800680"
  },
  {
    "text": "over to the NAT gateway and then from there out to the public Internet and what that means is our back-end servers",
    "start": "800680",
    "end": "806860"
  },
  {
    "text": "don't need to have public IP addresses they never need to be reachable from the internet and yet they're still able to",
    "start": "806860",
    "end": "812110"
  },
  {
    "text": "reach out and retrieve those updates those young repo downloads etc so in",
    "start": "812110",
    "end": "818440"
  },
  {
    "text": "that gateway is the way that you can achieve this and then have a public and a private subnet this is what the route",
    "start": "818440",
    "end": "825850"
  },
  {
    "text": "table would look like in my private subnet if you remember earlier I had a default route that went via the internet",
    "start": "825850",
    "end": "831580"
  },
  {
    "text": "gateway but in this case I have a default route that goes by than that gateway and this is the mechanism where",
    "start": "831580",
    "end": "837370"
  },
  {
    "text": "I don't need to assign public IP addresses to my private instances okay",
    "start": "837370",
    "end": "842950"
  },
  {
    "text": "what if I've created multiple V pcs and I want to connect them together to do this we use something called V PC",
    "start": "842950",
    "end": "848920"
  },
  {
    "text": "peering so a very common model for V PC peering is to create something called a shared services V PC so this might be",
    "start": "848920",
    "end": "856570"
  },
  {
    "start": "851000",
    "end": "851000"
  },
  {
    "text": "somewhere where you deploy things like logging servers authentication directory servers those kinds of things in the",
    "start": "856570",
    "end": "862540"
  },
  {
    "text": "diagram here it's V PC a in the middle you don't want to connect all of your other V pcs back to that shared services",
    "start": "862540",
    "end": "868600"
  },
  {
    "text": "V PC so that they can consume those shared services from one place and not require you to create duplicates of",
    "start": "868600",
    "end": "875020"
  },
  {
    "text": "every single environment so how do you use V PC peering well here we've got two completely separate V pcs the first",
    "start": "875020",
    "end": "882220"
  },
  {
    "text": "thing you'll notice is the IP address space for these two V pcs does not overlap so these are two separate slash",
    "start": "882220",
    "end": "888010"
  },
  {
    "text": "sixteens we have the orange V PC on the Left we have the blue V PC on the right when we create these V PC s though we'd",
    "start": "888010",
    "end": "895720"
  },
  {
    "text": "still like to be able to use security groups between them so earlier we created my web servers my back-end",
    "start": "895720",
    "end": "901540"
  },
  {
    "text": "servers well we've got two V pcs now we'd like to be able to refer to them across V PC peering and we can do that",
    "start": "901540",
    "end": "909100"
  },
  {
    "text": "so if we have an orange security group we can choose to allow traffic from that orange security group into our blue",
    "start": "909100",
    "end": "915880"
  },
  {
    "text": "security group so V PC peering wit works within an AWS region enables you to",
    "start": "915880",
    "end": "921370"
  },
  {
    "text": "connect to V pcs together and allows you to refer to security groups between those V pcs can also be used cross",
    "start": "921370",
    "end": "928540"
  },
  {
    "text": "account within that same AWS region if you've separated out your V pcs into",
    "start": "928540",
    "end": "933649"
  },
  {
    "text": "different environments in different AWS accounts that's fine v pcs appearing still works across those what's the",
    "start": "933649",
    "end": "940579"
  },
  {
    "text": "process to create a peering connection well there's two steps to it the first one is you have to initiate a peering",
    "start": "940579",
    "end": "946490"
  },
  {
    "text": "request so from one side in this case we're going to start with orange we initiate a VP CP request for the other",
    "start": "946490",
    "end": "952639"
  },
  {
    "text": "VP see if it's in the same accounts we'll see a drop-down list of all of our V pcs if it's in another account you put",
    "start": "952639",
    "end": "959690"
  },
  {
    "text": "the account number in and you name the V PC identifier once we've made that",
    "start": "959690",
    "end": "964790"
  },
  {
    "text": "request though even if it's within the same account we have to accept that request so in this case we would go to the blue",
    "start": "964790",
    "end": "971570"
  },
  {
    "text": "V PC and we would choose to accept the pairing request now once that's done that's a that's a pretty good place the",
    "start": "971570",
    "end": "978680"
  },
  {
    "text": "two V pcs are allowed to talk to each other but remember earlier that I said nothing interesting happens in a V PC",
    "start": "978680",
    "end": "984199"
  },
  {
    "text": "until you configure routing well the same thing is true with V PC peering so",
    "start": "984199",
    "end": "989209"
  },
  {
    "text": "our final step that quite often is forgotten by people and they wonder why it doesn't work is to actually configure",
    "start": "989209",
    "end": "994490"
  },
  {
    "text": "the routing so here's our route table from earlier we've got our local entry",
    "start": "994490",
    "end": "999889"
  },
  {
    "text": "at the top that says everything in my B PC can talk to each other we have a route to an Internet gateway the 0.020",
    "start": "999889",
    "end": "1007600"
  },
  {
    "text": "route and we now have this third route which says to get to 10.55 which is the",
    "start": "1007600",
    "end": "1012790"
  },
  {
    "text": "blue V PC I'm going to use my PC X my peering connection between those two V",
    "start": "1012790",
    "end": "1018579"
  },
  {
    "text": "pcs and when you do that you need to configure that on both sides of the connection so this is the entry in the",
    "start": "1018579",
    "end": "1025630"
  },
  {
    "text": "route table that tells me where traffic should route if it's going to these IP addresses configure it on both sides and",
    "start": "1025630",
    "end": "1032168"
  },
  {
    "text": "our instances can now talk to each other subject to their security group configuration so what about now",
    "start": "1032169",
    "end": "1041558"
  },
  {
    "text": "connecting back to our on-premises network or a remote network we have a couple of options for doing this we can",
    "start": "1041559",
    "end": "1047110"
  },
  {
    "text": "use a VPN connection a virtual private network connection or we can use AWS Direct Connect so let's explore what",
    "start": "1047110",
    "end": "1053620"
  },
  {
    "text": "those two options are on the left hand side here we have our corporate network on the right hand side we have our V PC",
    "start": "1053620",
    "end": "1061260"
  },
  {
    "text": "connecting these together we have the two options I mentioned we have VPN and Rett Connect VPN is probably quite",
    "start": "1061260",
    "end": "1069130"
  },
  {
    "start": "1067000",
    "end": "1067000"
  },
  {
    "text": "self-explanatory but let's start with the building blocks that you need to make these connections first of all",
    "start": "1069130",
    "end": "1074710"
  },
  {
    "text": "you're going to need a device in your network we refer to this as the customer gateway some sort of Rooter a device",
    "start": "1074710",
    "end": "1081549"
  },
  {
    "text": "that can talk IPSec VPNs perhaps on the AWS side we need something to connect to",
    "start": "1081549",
    "end": "1087760"
  },
  {
    "text": "so we're going to create a virtual private gateway and between these two components the customer gateway and the",
    "start": "1087760",
    "end": "1093820"
  },
  {
    "text": "virtual private gateway we're then going to build our VPN connection now in AWS",
    "start": "1093820",
    "end": "1099070"
  },
  {
    "text": "terms a VPN connection is two IPSec tunnels and the endpoints those IPSec",
    "start": "1099070",
    "end": "1104380"
  },
  {
    "text": "tunnels on the AWS side terminate in different availability zones so by having two tunnels you have a really",
    "start": "1104380",
    "end": "1111220"
  },
  {
    "text": "good level of resilience for your VPN connectivity into AWS now VPN",
    "start": "1111220",
    "end": "1117490"
  },
  {
    "text": "connections are great they work over the internet but if you need a connection that is perhaps a bit more consistent",
    "start": "1117490",
    "end": "1123039"
  },
  {
    "text": "that is not subject to events that might happen out on the internet that might impact that connection you might need to",
    "start": "1123039",
    "end": "1129340"
  },
  {
    "text": "make this a bit more reliable you might need to create a direct connect so",
    "start": "1129340",
    "end": "1135460"
  },
  {
    "start": "1134000",
    "end": "1134000"
  },
  {
    "text": "Direct Connect allows you to take that virtual private gateway we created earlier and build a physical connection",
    "start": "1135460",
    "end": "1142600"
  },
  {
    "text": "from our Direct Connect locations back to your infrastructure so this is a one",
    "start": "1142600",
    "end": "1148330"
  },
  {
    "text": "gig or a ten gig connection straight into the AWS network via our Direct Connect locations and our Direct Connect",
    "start": "1148330",
    "end": "1154630"
  },
  {
    "text": "locations are in Colo facilities places like ed clinics or core sites or interaction so between VPN and Direct",
    "start": "1154630",
    "end": "1162220"
  },
  {
    "text": "Connect you have a choice and these are these are a few things you might want to consider in terms of what connectivity",
    "start": "1162220",
    "end": "1167830"
  },
  {
    "text": "option is the right one for you both of them are secure connections into your V PC a VPN is that pair of IPSec tunnels",
    "start": "1167830",
    "end": "1175120"
  },
  {
    "text": "gives you a good level of resilience but with Direct Connect you can also build two connections you can build resilience",
    "start": "1175120",
    "end": "1181360"
  },
  {
    "text": "into Direct Connect as well Direct Connect is dedicated to you it's a one gig or a 10 gig or multiple ones or 10",
    "start": "1181360",
    "end": "1189130"
  },
  {
    "text": "gig connections straight into AWS and the data transfer rate that we charge over Direct Connect is less than",
    "start": "1189130",
    "end": "1195850"
  },
  {
    "text": "internet rates so as a guide in Ireland at the moment it costs 9 cents per gig for data",
    "start": "1195850",
    "end": "1201990"
  },
  {
    "text": "transfer out via the internet gateway whereas it's either 2 cents or 3 cents per gig if you're transferring data over",
    "start": "1201990",
    "end": "1208740"
  },
  {
    "text": "Direct Connect if you're considering using Direct Connect our advice would actually be to use both Direct Connect",
    "start": "1208740",
    "end": "1215550"
  },
  {
    "text": "and VPN that gives you a really good availability story it gives you resilience and redundancy",
    "start": "1215550",
    "end": "1220559"
  },
  {
    "text": "both to a physical connection falling back to a connection over the Internet",
    "start": "1220559",
    "end": "1226760"
  },
  {
    "text": "ok so we now have our connectivity back to our on-premises Network we've peered some other VP C's what about other AWS",
    "start": "1226880",
    "end": "1234540"
  },
  {
    "text": "services how do they interact with our V PC so we're going to talk about some of",
    "start": "1234540",
    "end": "1240780"
  },
  {
    "text": "these specific AWS services that we have we're going to talk about V PC endpoints for s3 and more recently announced",
    "start": "1240780",
    "end": "1247650"
  },
  {
    "text": "DynamoDB how does dns work in a V PC and finally we're going to talk about",
    "start": "1247650",
    "end": "1253080"
  },
  {
    "text": "logging with V PC flow logs so let's talk about those AWS services that we've",
    "start": "1253080",
    "end": "1258960"
  },
  {
    "text": "got so an example RDS relational database service when you create an RDS",
    "start": "1258960",
    "end": "1265110"
  },
  {
    "start": "1259000",
    "end": "1259000"
  },
  {
    "text": "instance you actually choose which V PC to launch it into what that means is",
    "start": "1265110",
    "end": "1270300"
  },
  {
    "text": "that RDS is available on an IP address that is inside your V PC even though it's a managed service by AWS we present",
    "start": "1270300",
    "end": "1277260"
  },
  {
    "text": "it to you on an IP address inside your V PC because it's inside your V PC you can",
    "start": "1277260",
    "end": "1282780"
  },
  {
    "text": "use security groups with it so all the same principles that we just applied to our web servers our back-end servers",
    "start": "1282780",
    "end": "1288120"
  },
  {
    "text": "they apply to RDS as well we can choose to allow traffic from our application",
    "start": "1288120",
    "end": "1293340"
  },
  {
    "text": "server to our RDS environment RDS can",
    "start": "1293340",
    "end": "1299070"
  },
  {
    "text": "run as a multi a-z infrastructure multi availability zone and again that security group extends across both",
    "start": "1299070",
    "end": "1304320"
  },
  {
    "text": "availability zones and makes the configuration of the security inside your V PC very simple when you access",
    "start": "1304320",
    "end": "1312840"
  },
  {
    "text": "RDS we actually give you a DNS name so what that means is when you configure your application to connect to that",
    "start": "1312840",
    "end": "1318240"
  },
  {
    "text": "particular DNS name should there be a failover event between the two different availability zones for RDS we will",
    "start": "1318240",
    "end": "1325350"
  },
  {
    "text": "update that DNS name for you therefore as long as your application is connecting for that RDS cname that we",
    "start": "1325350",
    "end": "1331470"
  },
  {
    "text": "create we will flip over to the other AV automatically and in amongst all of that you don't need to reconfigure anything",
    "start": "1331470",
    "end": "1337049"
  },
  {
    "text": "to do with the security groups because it's one security group that is used to manage this what about lambda you might",
    "start": "1337049",
    "end": "1344070"
  },
  {
    "text": "have heard lambda today a couple of times I'm sure in some of the other sessions where you can have a lambda function that is running inside your V",
    "start": "1344070",
    "end": "1350130"
  },
  {
    "text": "PC so here we have it down on the bottom left the lambda function runs perhaps it",
    "start": "1350130",
    "end": "1355620"
  },
  {
    "text": "needs to be able to reach out to something like an ec2 instance that is also running inside your V PC it can do",
    "start": "1355620",
    "end": "1361289"
  },
  {
    "start": "1357000",
    "end": "1357000"
  },
  {
    "text": "that it can also reach out to an RDS database and again we have security groups controlling this access within",
    "start": "1361289",
    "end": "1367770"
  },
  {
    "text": "our V PC controlling that traffic flow so it gives you an idea of how two of our services interact inside of e PC",
    "start": "1367770",
    "end": "1374960"
  },
  {
    "text": "what are some of the best practices around this well first of all just consider that most of our services do",
    "start": "1374960",
    "end": "1380610"
  },
  {
    "text": "support running inside a V PC still apply the least privileged concept with security groups and always use multi",
    "start": "1380610",
    "end": "1388049"
  },
  {
    "text": "availability zone if available so things like EFS elastic file system we actually",
    "start": "1388049",
    "end": "1393240"
  },
  {
    "text": "present you with an endpoint for EFS in each of our availability zones and you should use those now what if we want to",
    "start": "1393240",
    "end": "1401610"
  },
  {
    "text": "access s/3 s/3 doesn't exist inside our V PC exists on public IP addresses you",
    "start": "1401610",
    "end": "1406890"
  },
  {
    "text": "normally access s3 over the internet but if you're inside a V PC and you don't want to have an Internet gateway how",
    "start": "1406890",
    "end": "1412799"
  },
  {
    "text": "could that work equally what if you wanted to access dynamodb again from inside your V PC and you don't want to",
    "start": "1412799",
    "end": "1419760"
  },
  {
    "text": "use an Internet gateway well let's take a look at that V PC this would be the typical setup we've got a V PC here with",
    "start": "1419760",
    "end": "1426000"
  },
  {
    "text": "two subnets we've got a dynamodb table and an s3 bucket sitting outside of our V PC and",
    "start": "1426000",
    "end": "1432210"
  },
  {
    "text": "up at the top right you can see that we have an Internet gateway this is the normal traffic flow for traffic trying",
    "start": "1432210",
    "end": "1438630"
  },
  {
    "text": "to reach Dynamo and trying to reach s3 your applications are going to be making",
    "start": "1438630",
    "end": "1443880"
  },
  {
    "text": "outbound connections so one of the things that we can actually do here is remove the internet gateway and instead",
    "start": "1443880",
    "end": "1450659"
  },
  {
    "start": "1449000",
    "end": "1449000"
  },
  {
    "text": "replace it with a V PC endpoint so let's look at s3 specifically first when we",
    "start": "1450659",
    "end": "1456390"
  },
  {
    "text": "create a V PC endpoints it's another object that is associated with our DPC when you create it you'll then be",
    "start": "1456390",
    "end": "1462720"
  },
  {
    "text": "prompted to choose some route tables just like the ones we looked at earlier and we will automatically put an entry into",
    "start": "1462720",
    "end": "1468450"
  },
  {
    "text": "that root table for you so you can see here this root table does not have a root out to the Internet but it does",
    "start": "1468450",
    "end": "1474180"
  },
  {
    "text": "have this additional root now this second one and it says all traffic that is destined for this prefix list which",
    "start": "1474180",
    "end": "1481110"
  },
  {
    "text": "has a name of : dot Amazon AWS dot u s West to dot s 3 which is s 3 is the",
    "start": "1481110",
    "end": "1486990"
  },
  {
    "text": "server 7.4 S 3 we're going to route that traffic via the V PC endpoint we don't",
    "start": "1486990",
    "end": "1492390"
  },
  {
    "text": "need an Internet gateway anymore to get to it the same thing applies to DynamoDB",
    "start": "1492390",
    "end": "1499220"
  },
  {
    "text": "again you're going to create a V PC endpoint and when you do that it will create entries in your root table but",
    "start": "1499220",
    "end": "1506280"
  },
  {
    "start": "1503000",
    "end": "1503000"
  },
  {
    "text": "the nice thing about using V PC endpoints is you can actually apply a few different policies so from a security perspective we actually get",
    "start": "1506280",
    "end": "1511560"
  },
  {
    "text": "some extra tools by using V PC endpoints we can apply a policy to the V PC",
    "start": "1511560",
    "end": "1516600"
  },
  {
    "text": "endpoint that defines which s3 buckets we can access so although it is an",
    "start": "1516600",
    "end": "1521730"
  },
  {
    "text": "endpoint for s3 you can actually lock down exactly what the traffic is allowed to flow to from your V PC so it can only",
    "start": "1521730",
    "end": "1528540"
  },
  {
    "text": "reach your s3 bucket further to that we can actually apply an IM policy on the",
    "start": "1528540",
    "end": "1533610"
  },
  {
    "text": "s3 bucket itself which says don't allow access to me over the Internet only allow access if it came via this V",
    "start": "1533610",
    "end": "1540750"
  },
  {
    "text": "PC endpoint so we can use these two extra security controls that we have here to manage access v V PC endpoints",
    "start": "1540750",
    "end": "1547470"
  },
  {
    "text": "same obviously applies to dynamodb onto 2 briefly also touch on cloud front so",
    "start": "1547470",
    "end": "1554760"
  },
  {
    "text": "cloud front is our content delivery network if you're not familiar with CD ends it's basically a very large distribution",
    "start": "1554760",
    "end": "1560580"
  },
  {
    "text": "of caching servers what we call edge locations and it allows you to cache that content closer to where your users",
    "start": "1560580",
    "end": "1566790"
  },
  {
    "text": "are consuming it so this might be a static website it might be assets that are used for displaying particular web",
    "start": "1566790",
    "end": "1573780"
  },
  {
    "text": "pages and we have many edge locations around the world currently we have 88 77",
    "start": "1573780",
    "end": "1580590"
  },
  {
    "text": "of those are actual cloud from edge locations and the other 11 are what we call regional edge caches so I'm not",
    "start": "1580590",
    "end": "1587460"
  },
  {
    "text": "going to go into all the detail of cloud from here but there are two concepts I wanted to touch on first of all cloud",
    "start": "1587460",
    "end": "1593340"
  },
  {
    "start": "1591000",
    "end": "1591000"
  },
  {
    "text": "front distributions now plant front distribution is the domain name of this tree that is used to refer",
    "start": "1593340",
    "end": "1598890"
  },
  {
    "text": "to these objects that we're storing and cloud from within that distribution we then need to define the origin of these",
    "start": "1598890",
    "end": "1606180"
  },
  {
    "text": "objects so where are we going to retrieve these objects from when an end customer asks for a particular URL it",
    "start": "1606180",
    "end": "1613230"
  },
  {
    "text": "supports HTTP and HTTPS and beyond that we need to configure a whole bunch of",
    "start": "1613230",
    "end": "1618270"
  },
  {
    "text": "other parameters things like origins behaviors to control how this CloudFront distribution works but linking this back",
    "start": "1618270",
    "end": "1624510"
  },
  {
    "text": "to our VPC and s3 that we've already talked about here's an example of some of the origins that you could be using",
    "start": "1624510",
    "end": "1630650"
  },
  {
    "start": "1625000",
    "end": "1625000"
  },
  {
    "text": "so we support using an s3 bucket to store perhaps your static content we",
    "start": "1630650",
    "end": "1636630"
  },
  {
    "text": "could be reaching back to an ec2 instance that is in our V PC as long as it has a public IP address and is",
    "start": "1636630",
    "end": "1642150"
  },
  {
    "text": "reachable via an Internet gateway it can also be an origin for cloud from we can",
    "start": "1642150",
    "end": "1647640"
  },
  {
    "text": "reach out to elastic load balancing or we could reach out to any other custom origin that you can define using a URL",
    "start": "1647640",
    "end": "1653960"
  },
  {
    "text": "so that's where cloud Front fits in now everything we've talked about so far has",
    "start": "1653960",
    "end": "1659550"
  },
  {
    "text": "been based on IP addresses what about naming what about DNS in our V PC how does that work well actually it's really",
    "start": "1659550",
    "end": "1666450"
  },
  {
    "start": "1666000",
    "end": "1666000"
  },
  {
    "text": "quite simple when you create a V PC there's a set of options that are by default turned on you can see them down",
    "start": "1666450",
    "end": "1671730"
  },
  {
    "text": "at the bottom here it's DNS resolution DNS host names if they're both set to yes we will automatically provide the",
    "start": "1671730",
    "end": "1678750"
  },
  {
    "text": "ability to resolve names out on the Internet inside your V PC and will also",
    "start": "1678750",
    "end": "1683940"
  },
  {
    "text": "automatically assign a DNS name to every single ec2 instance that you launched if",
    "start": "1683940",
    "end": "1692730"
  },
  {
    "text": "we have a look at an ec2 instance you'd be able to see that name displayed but what if you don't want to use the name",
    "start": "1692730",
    "end": "1698640"
  },
  {
    "text": "that we generated well that's where route 53 private hosted zones come in you can actually create your own zone",
    "start": "1698640",
    "end": "1705300"
  },
  {
    "text": "your own domain name that you use within your V PC the rest of the internet can't see it it doesn't resolve publicly you",
    "start": "1705300",
    "end": "1712350"
  },
  {
    "text": "can create in this case a zone called demo hosted zone within that I can create an entry for my ec2 instances and",
    "start": "1712350",
    "end": "1718980"
  },
  {
    "text": "I can point that on my private IP address so within the world of my B PC I can now resolve names that are within",
    "start": "1718980",
    "end": "1725310"
  },
  {
    "text": "demo hosted zone org",
    "start": "1725310",
    "end": "1728780"
  },
  {
    "text": "how do we get visibility of what's actually going on inside our V PC from a network perspective well V PC flow logs",
    "start": "1730600",
    "end": "1737080"
  },
  {
    "text": "are the tool that we give you to be able to do this so V PC flow logs allow you",
    "start": "1737080",
    "end": "1742210"
  },
  {
    "text": "to get visibility into what is happening when a piece of traffic tries to flow within your V PC is it stopped by",
    "start": "1742210",
    "end": "1748690"
  },
  {
    "text": "security groups it is stopped by network ACLs if something isn't working V PC flow logs is the tool that you can use",
    "start": "1748690",
    "end": "1755049"
  },
  {
    "text": "to try and find what if I miss configured what have I done wrong inside my V PC and it also gives you a whole",
    "start": "1755049",
    "end": "1762130"
  },
  {
    "text": "load of data that you can use to then do analysis on the traffic flow within your particular V PC how do you configure it",
    "start": "1762130",
    "end": "1769510"
  },
  {
    "start": "1769000",
    "end": "1769000"
  },
  {
    "text": "well you go to your V PC at the bottom of the screen you'll see a tab that says flow logs and it's as simple as then",
    "start": "1769510",
    "end": "1775240"
  },
  {
    "text": "choosing to enable it you create the flow log you enable it for the V PC but if you want to you could just enable it",
    "start": "1775240",
    "end": "1781270"
  },
  {
    "text": "for a particular network interface in most cases though we see customers generally enabling it for the whole V PC",
    "start": "1781270",
    "end": "1787169"
  },
  {
    "text": "once that's done what do you actually get well once the flow log is created we then push that data into our service",
    "start": "1787169",
    "end": "1793990"
  },
  {
    "text": "called cloud watch logs so you end up with raw log data and it looks like this within that log data you've got the",
    "start": "1793990",
    "end": "1800950"
  },
  {
    "start": "1796000",
    "end": "1796000"
  },
  {
    "text": "standard details of that particular packet so we've got the fact that in this case it was rejected so a security",
    "start": "1800950",
    "end": "1807340"
  },
  {
    "text": "require network ACL has denied this traffic flow we know which port it was so it was UDP 53 says DNS we can also",
    "start": "1807340",
    "end": "1816880"
  },
  {
    "text": "see what the source and destination IP address is both of which you'd expect to be able to see in this kind of logging",
    "start": "1816880",
    "end": "1822490"
  },
  {
    "text": "so now you can investigate first of all what is this traffic and then why was it blocked why was it rejected so just as a",
    "start": "1822490",
    "end": "1832780"
  },
  {
    "text": "reminder go right the way back to the beginning what is a V PC quite simply a",
    "start": "1832780",
    "end": "1837850"
  },
  {
    "text": "V PC is your private network within AWS it's where you define the parameters of",
    "start": "1837850",
    "end": "1843039"
  },
  {
    "text": "the network everything from the side arranged that's used how it's divided up into different subnets and how the",
    "start": "1843039",
    "end": "1848890"
  },
  {
    "text": "routing works both within the V PC and then out to remote connected networks it",
    "start": "1848890",
    "end": "1854799"
  },
  {
    "text": "can provide access to multiple ec2 instances inside that V PC you can",
    "start": "1854799",
    "end": "1860110"
  },
  {
    "text": "create as many subnets as you need within that V PC aligned for those availability zones and in terms of security we have",
    "start": "1860110",
    "end": "1866679"
  },
  {
    "text": "security groups and Network ACLs the security groups control access to AWS",
    "start": "1866679",
    "end": "1872260"
  },
  {
    "text": "services as well as other ec2 instances in your V PC we provide flow logs so",
    "start": "1872260",
    "end": "1878770"
  },
  {
    "text": "that you can inspect the traffic that is flowing from a meta data point of view and we provide the ability to connect",
    "start": "1878770",
    "end": "1885580"
  },
  {
    "start": "1884000",
    "end": "1884000"
  },
  {
    "text": "outside your V PC you can create an Internet gateway to talk to resources out on the Internet you can connect to",
    "start": "1885580",
    "end": "1892120"
  },
  {
    "text": "your corporate data center over VPNs and direct connect you can connect to other V pcs using V PC peering and you can",
    "start": "1892120",
    "end": "1899860"
  },
  {
    "text": "also reach out to V PC endpoints to reach things like s3 and dynamodb so",
    "start": "1899860",
    "end": "1906850"
  },
  {
    "text": "that's been a very quick tour around the features of V PC hopefully you've got a bit of an idea now of how you might",
    "start": "1906850",
    "end": "1912400"
  },
  {
    "text": "create an internet connect via PC how you might use some of the features that I've shown you here and I'd like to",
    "start": "1912400",
    "end": "1918790"
  },
  {
    "text": "thank you very much for your time this afternoon [Applause]",
    "start": "1918790",
    "end": "1927258"
  }
]