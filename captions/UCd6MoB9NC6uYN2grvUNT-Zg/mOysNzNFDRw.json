[
  {
    "text": "- Hi, my name Talia Nassi,",
    "start": "5070",
    "end": "6740"
  },
  {
    "text": "and I'm a senior developer\nadvocate here at AWS Serverless.",
    "start": "6740",
    "end": "10349"
  },
  {
    "text": "This video is about building\nan event-driven application",
    "start": "10350",
    "end": "13020"
  },
  {
    "text": "with Amazon EventBridge.",
    "start": "13020",
    "end": "15189"
  },
  {
    "text": "In event-driven architecture,",
    "start": "15189",
    "end": "16460"
  },
  {
    "text": "services interact with\neach other through events.",
    "start": "16460",
    "end": "19609"
  },
  {
    "text": "An event is something that\nhappened in your application.",
    "start": "19610",
    "end": "23060"
  },
  {
    "text": "For example, an item was\nput into a shopping cart,",
    "start": "23060",
    "end": "25949"
  },
  {
    "text": "a new order was placed.",
    "start": "25950",
    "end": "28140"
  },
  {
    "text": "Events are JSON objects\nthat tell you information",
    "start": "28140",
    "end": "31090"
  },
  {
    "text": "about something that\nhappened in your application.",
    "start": "31090",
    "end": "34060"
  },
  {
    "text": "In event-driven architecture,",
    "start": "34060",
    "end": "35730"
  },
  {
    "text": "each component of the\napplication raises an event",
    "start": "35730",
    "end": "38640"
  },
  {
    "text": "whenever anything changes.",
    "start": "38640",
    "end": "40770"
  },
  {
    "text": "Other components listen and\ndecide what to do with it",
    "start": "40770",
    "end": "43720"
  },
  {
    "text": "and how they would like to react.",
    "start": "43720",
    "end": "46320"
  },
  {
    "text": "When you build applications\nwith event-driven architecture,",
    "start": "46320",
    "end": "49560"
  },
  {
    "text": "you decouple your event\nsources and event targets.",
    "start": "49560",
    "end": "53030"
  },
  {
    "text": "This can enable teams to\nact more independently",
    "start": "53030",
    "end": "55949"
  },
  {
    "text": "because your services are loosely coupled.",
    "start": "55950",
    "end": "58860"
  },
  {
    "text": "When you add new features\nto your applications,",
    "start": "58860",
    "end": "61590"
  },
  {
    "text": "you raise new events and then decide",
    "start": "61590",
    "end": "63710"
  },
  {
    "text": "on the event source and event target.",
    "start": "63710",
    "end": "66290"
  },
  {
    "text": "The event source is what emits the event",
    "start": "66290",
    "end": "68510"
  },
  {
    "text": "and the event target is what subscribes to",
    "start": "68510",
    "end": "70960"
  },
  {
    "text": "or receives the event.",
    "start": "70960",
    "end": "72060"
  },
  {
    "text": "Decoupling event sources and event targets",
    "start": "73890",
    "end": "76190"
  },
  {
    "text": "can greatly speed up development time",
    "start": "76190",
    "end": "78440"
  },
  {
    "text": "and it can simplify making\nchanges to your application.",
    "start": "78440",
    "end": "81773"
  },
  {
    "text": "Decoupling your application can allow",
    "start": "82950",
    "end": "84789"
  },
  {
    "text": "for more seamless cross\nteam collaboration.",
    "start": "84790",
    "end": "87720"
  },
  {
    "text": "For example, let's say you're a developer",
    "start": "87720",
    "end": "90170"
  },
  {
    "text": "at an e-Commerce company",
    "start": "90170",
    "end": "91750"
  },
  {
    "text": "and you're building a serverless\ne-Commerce application.",
    "start": "91750",
    "end": "95550"
  },
  {
    "text": "Your team is in charge\nof the account creation",
    "start": "95550",
    "end": "97950"
  },
  {
    "text": "and authentication process.",
    "start": "97950",
    "end": "100240"
  },
  {
    "text": "You build the login\nflow and raise an event",
    "start": "100240",
    "end": "103009"
  },
  {
    "text": "when a new user creates an account.",
    "start": "103010",
    "end": "105630"
  },
  {
    "text": "When the event is raised,\nother teams can be alerted.",
    "start": "105630",
    "end": "109320"
  },
  {
    "text": "The marketing team can listen",
    "start": "109320",
    "end": "110830"
  },
  {
    "text": "for the account created\nevent and act on it.",
    "start": "110830",
    "end": "113410"
  },
  {
    "text": "For example, they can\nsend promotional emails.",
    "start": "113410",
    "end": "116450"
  },
  {
    "text": "In this decoupled architecture,",
    "start": "116450",
    "end": "118630"
  },
  {
    "text": "event producers and consumers",
    "start": "118630",
    "end": "120250"
  },
  {
    "text": "don't have to know about each other.",
    "start": "120250",
    "end": "122330"
  },
  {
    "text": "They only have to listen to\nevents and act accordingly",
    "start": "122330",
    "end": "125600"
  },
  {
    "text": "when they're interested in that event.",
    "start": "125600",
    "end": "128060"
  },
  {
    "text": "This can be speed up development",
    "start": "128060",
    "end": "129530"
  },
  {
    "text": "by reducing the complexity\ncaused by building new features.",
    "start": "129530",
    "end": "133383"
  },
  {
    "text": "In event-driven applications,\nyou have the event producer,",
    "start": "135090",
    "end": "138360"
  },
  {
    "text": "the event bus and the event consumer.",
    "start": "138360",
    "end": "141143"
  },
  {
    "text": "The event producer is the event source",
    "start": "142550",
    "end": "144560"
  },
  {
    "text": "that the events come from.",
    "start": "144560",
    "end": "146200"
  },
  {
    "text": "This can be an AWS service,\nit can be a custom event",
    "start": "146200",
    "end": "149770"
  },
  {
    "text": "or an event that comes from\na third party SaaS app.",
    "start": "149770",
    "end": "153260"
  },
  {
    "text": "The event bus acts as an event\nrouter to route the events.",
    "start": "153260",
    "end": "157370"
  },
  {
    "text": "The event consumer listens for events",
    "start": "157370",
    "end": "159610"
  },
  {
    "text": "and acts only upon the\nevents they're interested in.",
    "start": "159610",
    "end": "162800"
  },
  {
    "text": "In AWS, events are choreographed",
    "start": "162800",
    "end": "165270"
  },
  {
    "text": "through Amazon EventBridge rules.",
    "start": "165270",
    "end": "167790"
  },
  {
    "text": "A rule matches incoming\nevents from an event source",
    "start": "167790",
    "end": "170969"
  },
  {
    "text": "and sends them to event\ntargets for processing.",
    "start": "170970",
    "end": "174697"
  },
  {
    "text": "EventBridge accepts events from\nmany different event sources",
    "start": "174697",
    "end": "177880"
  },
  {
    "text": "including over 200 AWS services,",
    "start": "177880",
    "end": "181040"
  },
  {
    "text": "custom events from your Lambda\nfunctions or applications,",
    "start": "181040",
    "end": "183879"
  },
  {
    "text": "and third party SaaS applications.",
    "start": "183880",
    "end": "186600"
  },
  {
    "text": "You specify an action to take",
    "start": "186600",
    "end": "188380"
  },
  {
    "text": "when EventBridge receives an event",
    "start": "188380",
    "end": "190300"
  },
  {
    "text": "that matches the event\npattern in the rule.",
    "start": "190300",
    "end": "193100"
  },
  {
    "text": "When an event is raised\nthat matches the rule,",
    "start": "193100",
    "end": "195860"
  },
  {
    "text": "EventBridge sends the event\nto the specified target",
    "start": "195860",
    "end": "198030"
  },
  {
    "text": "and triggers the action\ndefined in the rule.",
    "start": "198030",
    "end": "201440"
  },
  {
    "text": "To route events from these\nsources to the correct target,",
    "start": "201440",
    "end": "204610"
  },
  {
    "text": "the events must be placed on\na corresponding event bus.",
    "start": "204610",
    "end": "208260"
  },
  {
    "text": "There are three types of event buses.",
    "start": "208260",
    "end": "210452"
  },
  {
    "text": "The first type is the default bus,",
    "start": "211590",
    "end": "213500"
  },
  {
    "text": "which is always available\nin every account,",
    "start": "213500",
    "end": "215970"
  },
  {
    "text": "and it's where AWS events are routed to.",
    "start": "215970",
    "end": "219350"
  },
  {
    "text": "The second type is a custom event bus.",
    "start": "219350",
    "end": "222120"
  },
  {
    "text": "You can create custom event buses",
    "start": "222120",
    "end": "224040"
  },
  {
    "text": "for your own applications\nto meet your business needs.",
    "start": "224040",
    "end": "227140"
  },
  {
    "text": "Lastly, you can also\ncreate SaaS event buses,",
    "start": "227140",
    "end": "230010"
  },
  {
    "text": "which are created when you\nconfigure SaaS applications",
    "start": "230010",
    "end": "232420"
  },
  {
    "text": "as an event source.",
    "start": "232420",
    "end": "233683"
  },
  {
    "text": "There are many potential event targets.",
    "start": "235070",
    "end": "237290"
  },
  {
    "text": "Event targets are what\nthe event bus routes to",
    "start": "237290",
    "end": "240939"
  },
  {
    "text": "once a corresponding event happens.",
    "start": "240940",
    "end": "243460"
  },
  {
    "text": "Targets include AWS\nLambda, Amazon Kinesis,",
    "start": "243460",
    "end": "247983"
  },
  {
    "text": "AWS Step Functions, Amazon API Gateway,",
    "start": "247983",
    "end": "251260"
  },
  {
    "text": "and even event buses in other accounts.",
    "start": "251260",
    "end": "254090"
  },
  {
    "text": "This flexible design allows you",
    "start": "254090",
    "end": "255819"
  },
  {
    "text": "to create a wide variety\nof integration patterns",
    "start": "255820",
    "end": "258650"
  },
  {
    "text": "based on your specific needs.",
    "start": "258650",
    "end": "260673"
  },
  {
    "text": "This tutorial sends an\nevent from Amazon S3,",
    "start": "261950",
    "end": "264820"
  },
  {
    "text": "the event source, to AWS\nLambda, the event target,",
    "start": "264820",
    "end": "268700"
  },
  {
    "text": "using an event rule.",
    "start": "268700",
    "end": "270280"
  },
  {
    "text": "In this tutorial,",
    "start": "270280",
    "end": "271540"
  },
  {
    "text": "you learn how to configure\nevents with EventBridge",
    "start": "271540",
    "end": "274390"
  },
  {
    "text": "by deploying an AWS Serverless\nApplication Model template.",
    "start": "274390",
    "end": "279030"
  },
  {
    "text": "The AWS Serverless\nApplication Model, or SAM,",
    "start": "279030",
    "end": "282400"
  },
  {
    "text": "is an OpenSource framework",
    "start": "282400",
    "end": "283780"
  },
  {
    "text": "for building serverless applications.",
    "start": "283780",
    "end": "286230"
  },
  {
    "text": "It provides shorthand\nsyntax to express functions,",
    "start": "286230",
    "end": "289500"
  },
  {
    "text": "APIs, databases, and\nevent source mappings.",
    "start": "289500",
    "end": "293470"
  },
  {
    "text": "SAM is an extension of CloudFormation,",
    "start": "293470",
    "end": "296010"
  },
  {
    "text": "which is the AWS\ninfrastructure as code tool.",
    "start": "296010",
    "end": "299660"
  },
  {
    "text": "You define resources using CloudFormation",
    "start": "299660",
    "end": "302150"
  },
  {
    "text": "in your SAM template",
    "start": "302150",
    "end": "303360"
  },
  {
    "text": "and use the full suite of\nresources, intrinsic functions",
    "start": "303360",
    "end": "306840"
  },
  {
    "text": "and other template features",
    "start": "306840",
    "end": "308250"
  },
  {
    "text": "that are available in CloudFormation.",
    "start": "308250",
    "end": "310633"
  },
  {
    "text": "First, you're gonna upload\nimages to an S3 bucket.",
    "start": "312250",
    "end": "316040"
  },
  {
    "text": "This raises an event which\ninvokes a Lambda function,",
    "start": "316040",
    "end": "319240"
  },
  {
    "text": "which resizes the image and places it",
    "start": "319240",
    "end": "321669"
  },
  {
    "text": "in a different S3 bucket.",
    "start": "321670",
    "end": "323493"
  },
  {
    "text": "The only prerequisite for this tutorial",
    "start": "325010",
    "end": "327110"
  },
  {
    "text": "is to have the SAM CLI\ninstalled on your machine.",
    "start": "327110",
    "end": "330240"
  },
  {
    "text": "Note that if you're using Cloud9,",
    "start": "330240",
    "end": "332150"
  },
  {
    "text": "this is already installed for you.",
    "start": "332150",
    "end": "334639"
  },
  {
    "text": "First, navigate to the Serverless\nLand Patterns Collection",
    "start": "334640",
    "end": "337690"
  },
  {
    "text": "at serverlessland.com/patterns,\nfilter by SAM,",
    "start": "337690",
    "end": "342210"
  },
  {
    "text": "and then choose the\nservices EventBridge and S3.",
    "start": "342210",
    "end": "345729"
  },
  {
    "text": "Choose the pattern S3 to\nEventBridge to Lambda.",
    "start": "345730",
    "end": "349410"
  },
  {
    "text": "This SAM template deploys an S3 bucket,",
    "start": "349410",
    "end": "352250"
  },
  {
    "text": "a Lambda function, an EventBridge rule,",
    "start": "352250",
    "end": "354630"
  },
  {
    "text": "and the IAM resources required\nto run the application.",
    "start": "354630",
    "end": "358480"
  },
  {
    "text": "click on the cloning\ninstructions to copy it.",
    "start": "358480",
    "end": "360913"
  },
  {
    "text": "Then paste the cloning\ninstructions in your terminal",
    "start": "363730",
    "end": "366850"
  },
  {
    "text": "and run SAM deploy--guided\nto deploy the pattern.",
    "start": "366850",
    "end": "371243"
  },
  {
    "text": "Once the stack has finished deploying,",
    "start": "392140",
    "end": "393930"
  },
  {
    "text": "you'll see the success message.",
    "start": "393930",
    "end": "395753"
  },
  {
    "text": "Navigate to the EventBridge console",
    "start": "397870",
    "end": "399729"
  },
  {
    "text": "and choose rules from the left panel.",
    "start": "399730",
    "end": "402450"
  },
  {
    "text": "Then choose the rule that\nwas created by AWS SAM",
    "start": "402450",
    "end": "405460"
  },
  {
    "text": "starting with SAM app.",
    "start": "405460",
    "end": "407539"
  },
  {
    "text": "The event source is S3,\nand the rule is invoked",
    "start": "407540",
    "end": "410870"
  },
  {
    "text": "when an image is put into\nthe source bucket in S3.",
    "start": "410870",
    "end": "413992"
  },
  {
    "text": "Next, notice that the event\ntarget is the Lambda function",
    "start": "415230",
    "end": "418330"
  },
  {
    "text": "that you created from the SAM template.",
    "start": "418330",
    "end": "420843"
  },
  {
    "text": "Navigate to the S3 console",
    "start": "427360",
    "end": "429349"
  },
  {
    "text": "and choose buckets from the left panel.",
    "start": "429350",
    "end": "431793"
  },
  {
    "text": "Then choose the bucket\nthat was created for you,",
    "start": "433820",
    "end": "436690"
  },
  {
    "text": "choose the properties tab",
    "start": "436690",
    "end": "438220"
  },
  {
    "text": "and note that the integration\nwith EventBridge is on.",
    "start": "438220",
    "end": "441403"
  },
  {
    "text": "From the objects tab, choose\nupload and upload an image.",
    "start": "442970",
    "end": "446963"
  },
  {
    "text": "Navigate to the Lambda console",
    "start": "466670",
    "end": "468340"
  },
  {
    "text": "and choose your Lambda function.",
    "start": "468340",
    "end": "470110"
  },
  {
    "text": "Select the monitor tab and\nchoose view logs in CloudWatch.",
    "start": "470110",
    "end": "474810"
  },
  {
    "text": "You can see the event",
    "start": "474810",
    "end": "475870"
  },
  {
    "text": "that triggered the Lambda\nfunction in the logs.",
    "start": "475870",
    "end": "478593"
  },
  {
    "text": "In the previous example,\nyou add an EventBridge rule",
    "start": "504405",
    "end": "507030"
  },
  {
    "text": "that routes events from\nS3, the event source,",
    "start": "507030",
    "end": "510000"
  },
  {
    "text": "to Lambda, the event\ntarget, using an event bus.",
    "start": "510000",
    "end": "513330"
  },
  {
    "text": "Now let's add another rule.",
    "start": "513330",
    "end": "515270"
  },
  {
    "text": "From the EventBridge console,",
    "start": "515270",
    "end": "516919"
  },
  {
    "text": "choose rules and then create rule.",
    "start": "516920",
    "end": "520070"
  },
  {
    "text": "Enter a name and description for the rule.",
    "start": "520070",
    "end": "523620"
  },
  {
    "text": "Next, you'll need to\ndefine the event pattern",
    "start": "523620",
    "end": "526130"
  },
  {
    "text": "that's used to invoke the event targets.",
    "start": "526130",
    "end": "528653"
  },
  {
    "text": "For service provider, choose AWS,",
    "start": "537000",
    "end": "539870"
  },
  {
    "text": "and for service name, choose S3.",
    "start": "539870",
    "end": "542773"
  },
  {
    "text": "For event type, choose\nAmazon S3 event notification.",
    "start": "548850",
    "end": "552880"
  },
  {
    "text": "And in the event dropdown,\nchoose object created.",
    "start": "552880",
    "end": "556283"
  },
  {
    "text": "You are configuring the event source",
    "start": "557320",
    "end": "559130"
  },
  {
    "text": "to be an object created in your S3 bucket.",
    "start": "559130",
    "end": "562430"
  },
  {
    "text": "Select either the default AWS event bus",
    "start": "562430",
    "end": "566170"
  },
  {
    "text": "or a custom event bus.",
    "start": "566170",
    "end": "568850"
  },
  {
    "text": "Select the event target.",
    "start": "568850",
    "end": "570540"
  },
  {
    "text": "In this example, I configure\nan Amazon CloudWatch log group.",
    "start": "570540",
    "end": "575160"
  },
  {
    "text": "Enter any name for the log group,",
    "start": "575160",
    "end": "577009"
  },
  {
    "text": "which is created automatically,",
    "start": "577010",
    "end": "579190"
  },
  {
    "text": "and then choose create.",
    "start": "579190",
    "end": "580793"
  },
  {
    "text": "Next, upload an image to the S3 bucket.",
    "start": "597990",
    "end": "601660"
  },
  {
    "text": "Navigate to the Amazon CloudWatch console",
    "start": "601660",
    "end": "604600"
  },
  {
    "text": "and choose log groups from the left panel.",
    "start": "604600",
    "end": "607730"
  },
  {
    "text": "Choose the log group and\nthen choose a log stream.",
    "start": "607730",
    "end": "611102"
  },
  {
    "text": "You can see now that the event\nis logged to CloudWatch logs.",
    "start": "641812",
    "end": "646812"
  },
  {
    "text": "What's important to notice here",
    "start": "648640",
    "end": "650090"
  },
  {
    "text": "is that adding a second event rule",
    "start": "650090",
    "end": "651790"
  },
  {
    "text": "did not change the event source's behavior",
    "start": "651790",
    "end": "654360"
  },
  {
    "text": "or affect other event targets.",
    "start": "654360",
    "end": "656573"
  },
  {
    "text": "To learn more about\nevent-driven architecture",
    "start": "658120",
    "end": "660170"
  },
  {
    "text": "and Amazon EventBridge,\nhead to serverlessland.com,",
    "start": "660170",
    "end": "663550"
  },
  {
    "text": "where you'll find more\ncontent from me and my team.",
    "start": "663550",
    "end": "666320"
  },
  {
    "text": "I'm Talia Nassi.",
    "start": "666320",
    "end": "667340"
  },
  {
    "text": "Thanks for tuning in.",
    "start": "667340",
    "end": "668533"
  }
]