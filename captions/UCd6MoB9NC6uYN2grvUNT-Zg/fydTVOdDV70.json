[
  {
    "start": "0",
    "end": "93000"
  },
  {
    "text": "good afternoon everybody thank you so much for coming this is the advanced services and offerings track really",
    "start": "290",
    "end": "7799"
  },
  {
    "text": "appreciate you taking time out of your busy days to come join us today this morning we had a presentation for Mike",
    "start": "7799",
    "end": "14849"
  },
  {
    "text": "Koontz on route 53 and virtual private cloud right now Brian Tracy is going to",
    "start": "14849",
    "end": "21029"
  },
  {
    "text": "give us a presentation on Amazon RDS and Aurora and then Chad schmoozer and Chris",
    "start": "21029",
    "end": "27810"
  },
  {
    "text": "Malik will give us a presentation on ecs and then I'll finish up cloud formation",
    "start": "27810",
    "end": "34140"
  },
  {
    "text": "hope you enjoy it stay for the whole track thank you so much great Thank You",
    "start": "34140",
    "end": "40739"
  },
  {
    "text": "Larry good afternoon everybody as Larry said my name is brian tracy i am a",
    "start": "40739",
    "end": "46890"
  },
  {
    "text": "solutions architect with AWS i cover the southeast region for state and local government and mid-market education i am",
    "start": "46890",
    "end": "54960"
  },
  {
    "text": "going to try and prevent any of you from slipping into food coma understanding that we just had lunch my only thankful",
    "start": "54960",
    "end": "61949"
  },
  {
    "text": "thought is that at least i'm not in the last session of the day between you and the drinks sorry Larry so as Larry",
    "start": "61949",
    "end": "71220"
  },
  {
    "text": "mentioned i'm here to talk to you about RDS i come from a background of about 20 years of software development in leading",
    "start": "71220",
    "end": "78210"
  },
  {
    "text": "software engineering teams and enterprise database administrators and so today we'll do an overview of RDS and",
    "start": "78210",
    "end": "86369"
  },
  {
    "text": "all of the different platforms that RDS offers and then we'll take a little bit of a deeper look at amazon aurora so",
    "start": "86369",
    "end": "94590"
  },
  {
    "start": "93000",
    "end": "169000"
  },
  {
    "text": "first let's start with it with a poll show of hands if you will how many people are familiar with RDS and and how",
    "start": "94590",
    "end": "101520"
  },
  {
    "text": "it functions ok so fair amount of folks same same raise of hands how many folks",
    "start": "101520",
    "end": "107729"
  },
  {
    "text": "have provisioned RDS workloads ok a little bit less great so for those who",
    "start": "107729",
    "end": "115229"
  },
  {
    "text": "aren't aware of what RDS is let's talk a little bit about that RDS is a managed database platform so what that means to",
    "start": "115229",
    "end": "123570"
  },
  {
    "text": "you is you don't have to worry about provisioning a server you don't have to worry about patching an operating system",
    "start": "123570",
    "end": "129209"
  },
  {
    "text": "or loading database bits on top of it you literally start with hey RDS service I",
    "start": "129209",
    "end": "134750"
  },
  {
    "text": "would like a database and choose your flavor and a couple of other parameters and go from there RDS comes in 6",
    "start": "134750",
    "end": "141799"
  },
  {
    "text": "familiar engines of course amazon Aurora that we'll talk about here lasts today Maria DB my sequel postgres Microsoft",
    "start": "141799",
    "end": "150590"
  },
  {
    "text": "sequel server and oracle and as i mentioned it's as a managed service a",
    "start": "150590",
    "end": "156409"
  },
  {
    "text": "lot of the routine tasks that you would normally have to do when you're hosting your own on-premise over our database",
    "start": "156409",
    "end": "163730"
  },
  {
    "text": "server are handled for you with the RDS service and we'll dive deeper into what that means here in the next few slides",
    "start": "163730",
    "end": "170019"
  },
  {
    "start": "169000",
    "end": "230000"
  },
  {
    "text": "so why did we build amazon RDS honestly the biggest question are the biggest",
    "start": "170019",
    "end": "176659"
  },
  {
    "text": "answer to that is customers asked us to provide a database service that was easy",
    "start": "176659",
    "end": "181760"
  },
  {
    "text": "to use was scalable was secure and operated at very high levels of",
    "start": "181760",
    "end": "187670"
  },
  {
    "text": "performance so again and you've probably heard this earlier today you heard Andy Jassy talk about it ninety percent of",
    "start": "187670",
    "end": "195019"
  },
  {
    "text": "awss roadmap in terms of services and offerings are driven by customer ask so",
    "start": "195019",
    "end": "200209"
  },
  {
    "text": "it's folks just like you saying you know what I really need I really need this managing relational databases as hard as",
    "start": "200209",
    "end": "207650"
  },
  {
    "text": "the slide says doing things like provisioning the environment when I talked about earlier establishing back",
    "start": "207650",
    "end": "213980"
  },
  {
    "text": "up and restores dealing with patching and things of that nature also achieving",
    "start": "213980",
    "end": "220190"
  },
  {
    "text": "things like scalability and high performance are very difficult database tuning in your on prem environment takes",
    "start": "220190",
    "end": "227000"
  },
  {
    "text": "a skilled hand and it's very difficult to achieve so how does already asked",
    "start": "227000",
    "end": "232220"
  },
  {
    "start": "230000",
    "end": "313000"
  },
  {
    "text": "compared to the traditional database hosting so the column on the left are is not exhaustive by any means but but",
    "start": "232220",
    "end": "239569"
  },
  {
    "text": "shows you a lot of the details around particulars that you'd have to manage",
    "start": "239569",
    "end": "244760"
  },
  {
    "text": "and deal with and plan for when you're talking about hosting your database in your on prem environment so first you've",
    "start": "244760",
    "end": "251569"
  },
  {
    "text": "got to purchase that hardware right you heard mr. jesse this morning talk about a 10 to 18 week procurement timeline in",
    "start": "251569",
    "end": "259220"
  },
  {
    "text": "some cases that could be longer I worked in in government contracting for",
    "start": "259220",
    "end": "264280"
  },
  {
    "text": "a while and and that procurement cycle was much longer than that then you have to do things like load EOS if you're",
    "start": "264280",
    "end": "270490"
  },
  {
    "text": "going to create a clustered database you have to load your clustering software and get all of that configured and working properly then load your database",
    "start": "270490",
    "end": "277330"
  },
  {
    "text": "bits on top of that and so on and so forth with RDS as I mentioned earlier you you start by saying hey I would like",
    "start": "277330",
    "end": "284590"
  },
  {
    "text": "a database of XYZ flavor here's about how big I want it to be and from that",
    "start": "284590",
    "end": "291790"
  },
  {
    "text": "point forward you really focus on what's important to your your business and that is optimizing your query logic and",
    "start": "291790",
    "end": "298150"
  },
  {
    "text": "making sure your applications are performing at the anticipated level that you need to service your customers all",
    "start": "298150",
    "end": "305110"
  },
  {
    "text": "of the other maintenance tasks but below those covers are handled by RDS and",
    "start": "305110",
    "end": "310840"
  },
  {
    "text": "again we'll talk about that here in a couple seconds so it's easy and fast to deploy in order to get a",
    "start": "310840",
    "end": "317380"
  },
  {
    "start": "313000",
    "end": "373000"
  },
  {
    "text": "production-ready database you can literally do this in a couple of minutes time as I mentioned there's a couple of",
    "start": "317380",
    "end": "323440"
  },
  {
    "text": "fields that it will ask you to provision ie you know what flavor of database do",
    "start": "323440",
    "end": "328870"
  },
  {
    "text": "you want to run how much compute do you want on your database meaning a number",
    "start": "328870",
    "end": "334780"
  },
  {
    "text": "of cores amount of memory that you want your database to run in this case you see things up here like the licensing",
    "start": "334780",
    "end": "340419"
  },
  {
    "text": "model some of our databases which aren't open source come in either a license included or a bring your own license",
    "start": "340419",
    "end": "346840"
  },
  {
    "text": "model you have varied versions of the database engines so we have a you know a",
    "start": "346840",
    "end": "352599"
  },
  {
    "text": "pretty good offering of the different versions of a particular database engine",
    "start": "352599",
    "end": "357870"
  },
  {
    "text": "down there that shows you about the instant sizing multi AZ we're going to",
    "start": "357870",
    "end": "362889"
  },
  {
    "text": "talk about more in another slide or two here but that essentially gives you primary node with failover capability",
    "start": "362889",
    "end": "369760"
  },
  {
    "text": "and then your storage type and how much storage you want finally you'll get to",
    "start": "369760",
    "end": "375699"
  },
  {
    "text": "some configuration around how much how much do you want to persist to back up",
    "start": "375699",
    "end": "381250"
  },
  {
    "text": "with RDS their automated backups that we call snapshots they are incrementals",
    "start": "381250",
    "end": "387639"
  },
  {
    "text": "that act like fools so every day when your backup runs your having to back up hundreds of gigabytes",
    "start": "387639",
    "end": "394570"
  },
  {
    "text": "or terabytes it's essentially doing the diffs or the incremental from the last backup however they perform like Foles",
    "start": "394570",
    "end": "401110"
  },
  {
    "text": "which is pretty nice and they give you full point in time recovery the enhanced",
    "start": "401110",
    "end": "406270"
  },
  {
    "text": "monitoring is a newer capability that allows you to not only select that you want enhanced monitoring on your",
    "start": "406270",
    "end": "412690"
  },
  {
    "text": "database but also specify the particular granularity in terms of how often do you",
    "start": "412690",
    "end": "417760"
  },
  {
    "text": "want these metrics persisted write it in this case I chose every 60 seconds but you can get down essentially to about",
    "start": "417760",
    "end": "423700"
  },
  {
    "text": "every second and then of course the maintenance window RDS will apply minor",
    "start": "423700",
    "end": "429850"
  },
  {
    "text": "database patches for you and you can either choose as with the backup cycle",
    "start": "429850",
    "end": "435160"
  },
  {
    "text": "you can choose the existing sort of predefined Amazon window for doing this",
    "start": "435160",
    "end": "440890"
  },
  {
    "text": "maintenance or your backups or you can define your own maintenance period to do those backups this slide just shows a",
    "start": "440890",
    "end": "449560"
  },
  {
    "start": "447000",
    "end": "553000"
  },
  {
    "text": "simple application architecture it is not highly available just to be clear so",
    "start": "449560",
    "end": "454990"
  },
  {
    "text": "this is not a not exactly a best practice but it gives you a pretty good idea of a simple architecture that you",
    "start": "454990",
    "end": "460480"
  },
  {
    "text": "can run on AWS in a couple slides here we're going to see the more elaborate architecture that is employing things",
    "start": "460480",
    "end": "467230"
  },
  {
    "text": "like best practices in this one you'll see an elastic load balancer at the top and even though this particular workload",
    "start": "467230",
    "end": "474760"
  },
  {
    "text": "this application server web server happens to be a singular server a best practice is to put it behind an elastic",
    "start": "474760",
    "end": "481480"
  },
  {
    "text": "load balancer for a couple of reasons one so that your application doesn't have to an experience an outage later",
    "start": "481480",
    "end": "487360"
  },
  {
    "text": "when you choose to scale out and add additional servers beyond that and also the elastic load balancing service only",
    "start": "487360",
    "end": "494350"
  },
  {
    "text": "supports TCP and HTTPS or HTTP and what that means to you is it eliminates and",
    "start": "494350",
    "end": "501340"
  },
  {
    "text": "doesn't even entertain UDP packet requests and that and that isolates you",
    "start": "501340",
    "end": "506500"
  },
  {
    "text": "from about the 85 to 90 percent of script kiddies out there who are screwing around on the internet and",
    "start": "506500",
    "end": "512080"
  },
  {
    "text": "trying to do DDoS attacks on you this thing keeps moving forward and I think",
    "start": "512080",
    "end": "517150"
  },
  {
    "text": "that's because I'm hitting the button so I apologize so so you get down to the",
    "start": "517150",
    "end": "523659"
  },
  {
    "text": "second layer here which is your applications ACK that could be a web server it could be an application server and then",
    "start": "523660",
    "end": "530339"
  },
  {
    "text": "finally that's looking to a database behind the scenes in today's discussion that's an RDS database server it could",
    "start": "530339",
    "end": "537269"
  },
  {
    "text": "very easily be any flavor of database that you choose to run on ec2 instances and then finally s3 is in the picture",
    "start": "537269",
    "end": "544980"
  },
  {
    "text": "here in with the red bucket and that's where your snapshots which are your daily backups are persisted to so deja",
    "start": "544980",
    "end": "554040"
  },
  {
    "start": "553000",
    "end": "746000"
  },
  {
    "text": "vu you guys have already seen this slide multi AZ so what is multi AZ clustering",
    "start": "554040",
    "end": "560610"
  },
  {
    "text": "databases to give you a primary node and a secondary or failover node is very",
    "start": "560610",
    "end": "567240"
  },
  {
    "text": "complex to manage even as a software developer and engineer for for 20 years",
    "start": "567240",
    "end": "572310"
  },
  {
    "text": "I never liked to put my hands in that batter right and I had a very good friend who was an enterprise DBA at my",
    "start": "572310",
    "end": "578940"
  },
  {
    "text": "last company and still you know I left it up to him and it was still sort of voodoo to me multi AZ option with an AWS",
    "start": "578940",
    "end": "588060"
  },
  {
    "text": "takes a lot of that voodoo out of the equation for you it's literally as easy as saying yes I want the ability to have",
    "start": "588060",
    "end": "595170"
  },
  {
    "text": "a a primary node and a failover node in another availability zone hence the reason we call it multi AZ and that",
    "start": "595170",
    "end": "602339"
  },
  {
    "text": "insulates me you know from from a total system failure right if my primary node",
    "start": "602339",
    "end": "607980"
  },
  {
    "text": "fails in under two minutes the cname will be switched from my primary instance and will fail over to my",
    "start": "607980",
    "end": "613949"
  },
  {
    "text": "secondary instance when that happens an additional secondary instance is",
    "start": "613949",
    "end": "619199"
  },
  {
    "text": "automatically provisioned for you to make sure you continue to have high availability right should that should",
    "start": "619199",
    "end": "624240"
  },
  {
    "text": "that other node fail it's physically distinct as I just talked about being in",
    "start": "624240",
    "end": "630930"
  },
  {
    "text": "a separate AZ the database is synchronously mirrored so you can be",
    "start": "630930",
    "end": "637260"
  },
  {
    "text": "sure of atomic rights so when your data is written to the primary node that data is synchronously written to the second",
    "start": "637260",
    "end": "644490"
  },
  {
    "text": "area failover node which of course helps you in terms of no data loss when there's an issue I talked about failover",
    "start": "644490",
    "end": "652730"
  },
  {
    "text": "occurring automatically in response to scenarios where something might fail and",
    "start": "652730",
    "end": "659490"
  },
  {
    "text": "then something that I haven't mentioned yet which was the planned maintenance so when you're running in multi AZ mode the",
    "start": "659490",
    "end": "666900"
  },
  {
    "text": "maintenance is is actually performed on the secondary node first and then once",
    "start": "666900",
    "end": "672690"
  },
  {
    "text": "that maintenance is completed on the secondary node the system will actually fail fail over to the other node and it",
    "start": "672690",
    "end": "680520"
  },
  {
    "text": "will patch what was the primary node but is now the secondary node what that means for you is a minimal amount of",
    "start": "680520",
    "end": "687090"
  },
  {
    "text": "read only time that your databases is experiencing when that patching occurs",
    "start": "687090",
    "end": "692460"
  },
  {
    "text": "right so we do everything to ensure or assist that your infrastructure and your",
    "start": "692460",
    "end": "699840"
  },
  {
    "text": "applications are up so here's that",
    "start": "699840",
    "end": "704900"
  },
  {
    "text": "secondary slide that I talked about it's a little bit more of a resilient architecture in this case we've chosen",
    "start": "704900",
    "end": "711420"
  },
  {
    "text": "to take that application tier or web tier and load balance that it may be",
    "start": "711420",
    "end": "717300"
  },
  {
    "text": "also using a service like elastic or auto scaling rather to be able to scale",
    "start": "717300",
    "end": "722520"
  },
  {
    "text": "your ec2 instances up or down to match your workload they're reaching back to",
    "start": "722520",
    "end": "727590"
  },
  {
    "text": "what you see below as the master node or primary node and then you see this the the secondary node off to the right",
    "start": "727590",
    "end": "733830"
  },
  {
    "text": "where the synchronous replication is happening for your data and then as always the the s3 is is holding your",
    "start": "733830",
    "end": "741480"
  },
  {
    "text": "database snapshots for your data persistence and backups RDS comes with a",
    "start": "741480",
    "end": "748740"
  },
  {
    "start": "746000",
    "end": "848000"
  },
  {
    "text": "few different flavors of storage to help you again not pay for something that you",
    "start": "748740",
    "end": "754290"
  },
  {
    "text": "don't want there's three different levels of storage that RDS offers today there's a general-purpose storage which",
    "start": "754290",
    "end": "761310"
  },
  {
    "text": "is an SSD based swords a solid-state back to storage solution that's burst of",
    "start": "761310",
    "end": "766650"
  },
  {
    "text": "all so it provides anywhere from 3 I ops per second to 3000 it can burst to 3,000",
    "start": "766650",
    "end": "773870"
  },
  {
    "text": "provisioned I ops is where you define how many iOS per second you want your",
    "start": "773870",
    "end": "779580"
  },
  {
    "text": "database to perform at and the provision died on storage is a persistent and",
    "start": "779580",
    "end": "785820"
  },
  {
    "text": "sustainable I ops for that storage layer so what that means is it will be within ten",
    "start": "785820",
    "end": "793200"
  },
  {
    "text": "percent of that I operate for ninety-nine point nine percent of the data storage life cycle and the",
    "start": "793200",
    "end": "800280"
  },
  {
    "text": "provision I ops is meant for really heiio workloads right where general-purpose storage maybe for medium",
    "start": "800280",
    "end": "808020"
  },
  {
    "text": "sized workloads or databases that have moderate io provisioned I ops is really",
    "start": "808020",
    "end": "813750"
  },
  {
    "text": "for heavy oltp databases databases that are that are really getting hit pretty hard and then finally there's magnetic",
    "start": "813750",
    "end": "821360"
  },
  {
    "text": "that's for smaller workloads or databases that get hit very infrequently",
    "start": "821360",
    "end": "826940"
  },
  {
    "text": "honestly as an essay my guidance to customers is there's so little cost",
    "start": "826940",
    "end": "832290"
  },
  {
    "text": "difference between the magnetic and the general-purpose SSD I I sort of say",
    "start": "832290",
    "end": "837330"
  },
  {
    "text": "start at the general-purpose SSD and you know and we'll investigate pricing later",
    "start": "837330",
    "end": "843540"
  },
  {
    "text": "and if that's still too high we can move down to the magnetic so one thing about",
    "start": "843540",
    "end": "851220"
  },
  {
    "start": "848000",
    "end": "918000"
  },
  {
    "text": "databases is scaling can be difficult right because databases can only scale",
    "start": "851220",
    "end": "857730"
  },
  {
    "text": "so large and and typically databases are on a single system or they're a",
    "start": "857730",
    "end": "863310"
  },
  {
    "text": "clustered set of databases but you can only scale to the extent that you have Hardware meaning CPU and memory to allow",
    "start": "863310",
    "end": "870480"
  },
  {
    "text": "you to scale to write and at some point you're limited in your ability to scale beyond that what read replicas allow you",
    "start": "870480",
    "end": "877710"
  },
  {
    "text": "to do is essentially have read only copies of your database running on",
    "start": "877710",
    "end": "882990"
  },
  {
    "text": "additional hardware that will allow you to scale out horizontally for your reads",
    "start": "882990",
    "end": "888180"
  },
  {
    "text": "so in a scenario like that you would still keep your primary database for the rights as in it because it would be the",
    "start": "888180",
    "end": "895170"
  },
  {
    "text": "master but you can have your application reach out and scale out two additional I",
    "start": "895170",
    "end": "900570"
  },
  {
    "text": "didn't even touch the button that time you can even have it scale out to other databases for read so you can spread",
    "start": "900570",
    "end": "908370"
  },
  {
    "text": "your reads out and that allows you to scale your database out and accommodate your traffic a little bit easier now I'm",
    "start": "908370",
    "end": "918120"
  },
  {
    "start": "918000",
    "end": "1038000"
  },
  {
    "text": "touching the button there we go RTS provides all kinds of security we have things like you guys",
    "start": "918120",
    "end": "924040"
  },
  {
    "text": "are laughing at me we have things like a sock one two and three pci these icons",
    "start": "924040",
    "end": "932800"
  },
  {
    "text": "are pretty small so i apologize for that but things like ISO 27001 and I tar we",
    "start": "932800",
    "end": "939520"
  },
  {
    "text": "also have capabilities built into RDS that you may already be familiar with from our ec2 side or our lasted cloud",
    "start": "939520",
    "end": "947020"
  },
  {
    "text": "compute side called security groups those are stateful firewalls that allow you to control the ingress and egress",
    "start": "947020",
    "end": "953589"
  },
  {
    "text": "traffic to your database instance and we also allow you to operate your RDS in",
    "start": "953589",
    "end": "961089"
  },
  {
    "text": "your VPC your stateful firewalls will allow you determine whether that traffic",
    "start": "961089",
    "end": "966399"
  },
  {
    "text": "can leave your vp see if you want to entertain traffic on your RDS tier from",
    "start": "966399",
    "end": "971649"
  },
  {
    "text": "your on prem for instance or and i'm not saying you should do this or if you opened your database up to the outside",
    "start": "971649",
    "end": "977470"
  },
  {
    "text": "world which I I can't imagine one good use case why you'd want to do that except maybe your government agency you",
    "start": "977470",
    "end": "985240"
  },
  {
    "text": "know offering up a honeypot to try and catch criminals identity and access",
    "start": "985240",
    "end": "990760"
  },
  {
    "text": "management is built in as well so you can provide fine grain access in control to your your RDS databases so if you",
    "start": "990760",
    "end": "998740"
  },
  {
    "text": "have particular members of your organization that should be in there you know administering and configuring that",
    "start": "998740",
    "end": "1005670"
  },
  {
    "text": "environment for you great if you have users that maybe you want to be able to provide a read-only level of access you",
    "start": "1005670",
    "end": "1012180"
  },
  {
    "text": "can do that and and awss identity and access management allows you to apply",
    "start": "1012180",
    "end": "1017339"
  },
  {
    "text": "those fine-grained controls to that database tier we also offer encryption",
    "start": "1017339",
    "end": "1023670"
  },
  {
    "text": "both at rest and in transit so you know you can be assured that your data will",
    "start": "1023670",
    "end": "1029308"
  },
  {
    "text": "be safe while it's down on disk or while your particular application or web tears",
    "start": "1029309",
    "end": "1034949"
  },
  {
    "text": "are reaching back to your data instance cloud watches is another amazon service",
    "start": "1034949",
    "end": "1042120"
  },
  {
    "start": "1038000",
    "end": "1078000"
  },
  {
    "text": "that integrates well with RDS and most of the other AWS services it's a fantastic tool to be able to allow you",
    "start": "1042120",
    "end": "1049320"
  },
  {
    "text": "to be able to monitor the metrics of your database and you can monitor things like here it says",
    "start": "1049320",
    "end": "1055740"
  },
  {
    "text": "cpu utilization storage iOS per second memory and things of that nature you can",
    "start": "1055740",
    "end": "1062669"
  },
  {
    "text": "also set alarms so if your particular application you know experiences",
    "start": "1062669",
    "end": "1068130"
  },
  {
    "text": "problems above a certain threshold you can create alarms within cloud watch and be notified of that so that you can take",
    "start": "1068130",
    "end": "1074760"
  },
  {
    "text": "action if that particular case comes up RDS is cost effective so the whole idea",
    "start": "1074760",
    "end": "1081809"
  },
  {
    "start": "1078000",
    "end": "1146000"
  },
  {
    "text": "of the cloud is to only pay for the resources that you're using and not to",
    "start": "1081809",
    "end": "1088080"
  },
  {
    "text": "over provision right and so the idea here is only provision the database",
    "start": "1088080",
    "end": "1094590"
  },
  {
    "text": "instance size that you need and if you happen to outgrow that later we can",
    "start": "1094590",
    "end": "1099870"
  },
  {
    "text": "resize that database and and you know enlarge it to run your workload acid as",
    "start": "1099870",
    "end": "1105929"
  },
  {
    "text": "it changes in this particular use case I used an m4 extra-large running my sequel",
    "start": "1105929",
    "end": "1112110"
  },
  {
    "text": "in our northern virginia region I did it as a single AZ and using the on-demand",
    "start": "1112110",
    "end": "1117510"
  },
  {
    "text": "price and we assumed in this case that a month was about seven hundred and twenty",
    "start": "1117510",
    "end": "1123000"
  },
  {
    "text": "hours so that particular instance cost thirty-five cents per hour to run and",
    "start": "1123000",
    "end": "1129240"
  },
  {
    "text": "with a hundred gigabytes of storage for the database at eleven and a half cents an hour to run that for the month cost",
    "start": "1129240",
    "end": "1135510"
  },
  {
    "text": "you about two hundred and sixty three dollars so it's really very affordable to run that going a step further alright",
    "start": "1135510",
    "end": "1147409"
  },
  {
    "start": "1146000",
    "end": "1259000"
  },
  {
    "text": "another way that you can take advantage of AWS services but but secure a lower",
    "start": "1147409",
    "end": "1154350"
  },
  {
    "text": "price than our on-demand price is by utilizing something that we call reserved instances and reserved",
    "start": "1154350",
    "end": "1160470"
  },
  {
    "text": "instances essentially is making a commitment to AWS that you're going to run a particular workload for a year or",
    "start": "1160470",
    "end": "1168179"
  },
  {
    "text": "three years there we go and the idea",
    "start": "1168179",
    "end": "1173340"
  },
  {
    "text": "here is the on demand price as its name suggests is on demand so I can spin up a",
    "start": "1173340",
    "end": "1178919"
  },
  {
    "text": "database today I can run it for two hours and I can turn it off and never pay another dime for that database however",
    "start": "1178919",
    "end": "1186000"
  },
  {
    "text": "the on-demand price is also the highest price that you'll pay as an AWS customer so if you know you're going to run",
    "start": "1186000",
    "end": "1192990"
  },
  {
    "text": "workloads continuously over a period of time be it a one-year or a three-year period you can make a commitment to AWS",
    "start": "1192990",
    "end": "1200700"
  },
  {
    "text": "to say hey I'm going to run this workload continually and I'm making that commitment so I'd like a lower price",
    "start": "1200700",
    "end": "1206669"
  },
  {
    "text": "please and reserved instances allow you to do that so in this example and I know that the eye chart is kind of hard to",
    "start": "1206669",
    "end": "1212639"
  },
  {
    "text": "read but the the top line shows the on-demand price and because it's an on-demand price you're not paying",
    "start": "1212639",
    "end": "1219120"
  },
  {
    "text": "anything upfront and so you're you're essentially a your cumulative cost or your cumulative spend is essentially 263",
    "start": "1219120",
    "end": "1226350"
  },
  {
    "text": "dollars and fifty cents every month right with the one year reserved instance you make an upfront payment and",
    "start": "1226350",
    "end": "1233340"
  },
  {
    "text": "then your you'll see your cumulative spend goes up in very small increments",
    "start": "1233340",
    "end": "1239130"
  },
  {
    "text": "month over month and that's for the variable costs of things like the database storage and the iOS so",
    "start": "1239130",
    "end": "1244529"
  },
  {
    "text": "somewhere between months 7 and month 8 you'll start to recognize considerable savings and by the end of month 12",
    "start": "1244529",
    "end": "1251250"
  },
  {
    "text": "you'll see that you've saved more than 12 hundred dollars over the cost of that instance using reserved instances so how",
    "start": "1251250",
    "end": "1261330"
  },
  {
    "start": "1259000",
    "end": "1329000"
  },
  {
    "text": "do I already s backups work again we call them snapshots there are automated",
    "start": "1261330",
    "end": "1266340"
  },
  {
    "text": "backups but you can also take manual snapshots they provide a point-in-time recovery for you that's usually as early",
    "start": "1266340",
    "end": "1274200"
  },
  {
    "text": "as about 5 minutes ago and they're enabled by default and you can choose",
    "start": "1274200",
    "end": "1279570"
  },
  {
    "text": "between 0 and 35 days for your retention period of those backups as I mentioned",
    "start": "1279570",
    "end": "1284880"
  },
  {
    "text": "earlier there incrementals but they act like fools so the backups themselves",
    "start": "1284880",
    "end": "1291779"
  },
  {
    "text": "happen very quickly every night you can also take manual snapshots and there are good good reasons in cases where you",
    "start": "1291779",
    "end": "1298919"
  },
  {
    "text": "might want to do that for instance you're about to perform a very big upgrade on your environment please take",
    "start": "1298919",
    "end": "1304380"
  },
  {
    "text": "a manual snapshot don't rely just on the automated nightly snapshots another reason I really like the manual",
    "start": "1304380",
    "end": "1310799"
  },
  {
    "text": "snapshots is because if you happen to delete your database all of the automated backup",
    "start": "1310799",
    "end": "1316080"
  },
  {
    "text": "that were captured during the lifespan of that database go with that deletion where the manual snapshots will persist",
    "start": "1316080",
    "end": "1322649"
  },
  {
    "text": "until you choose to delete them it's",
    "start": "1322649",
    "end": "1328470"
  },
  {
    "text": "definitely wonky there we go we have an ability to allow cross region snapshots",
    "start": "1328470",
    "end": "1335460"
  },
  {
    "start": "1329000",
    "end": "1370000"
  },
  {
    "text": "so this is really good in terms of the dr pattern or also helpful if you're",
    "start": "1335460",
    "end": "1341970"
  },
  {
    "text": "trying to migrate your data it allows you essentially to say hey my database I've got these snapshots here and i want",
    "start": "1341970",
    "end": "1348990"
  },
  {
    "text": "to send those over to another region as a dr pattern where i might want to have a warm standby of my database persisted",
    "start": "1348990",
    "end": "1358340"
  },
  {
    "text": "excuse me or i may want to migrate my database to another region and a very",
    "start": "1358340",
    "end": "1364019"
  },
  {
    "text": "easy way to do that is to migrate that snapshot over to that other region and create a new database from that snapshot",
    "start": "1364019",
    "end": "1371870"
  },
  {
    "start": "1370000",
    "end": "1454000"
  },
  {
    "text": "it's very easy to migrate into RDS with the release of our data migration",
    "start": "1373130",
    "end": "1379679"
  },
  {
    "text": "service tool that you heard Andy talked about earlier today and the use of another tool called our schema",
    "start": "1379679",
    "end": "1385320"
  },
  {
    "text": "conversion tool you can easily migrate your database and its schema into RDS",
    "start": "1385320",
    "end": "1392039"
  },
  {
    "text": "what's really neat about the data migration service so you can see down here at the bottom or you could have",
    "start": "1392039",
    "end": "1397380"
  },
  {
    "text": "seen and this thing's really Milwaukee is not only will allow you to do a",
    "start": "1397380",
    "end": "1405289"
  },
  {
    "text": "homogeneous migrations meaning if I'm going to go from Oracle the Oracle or sequel server sequel server but it'll",
    "start": "1405289",
    "end": "1411779"
  },
  {
    "text": "also allow you to do heterogeneous migrations so and if you're if you're running one of those very large",
    "start": "1411779",
    "end": "1417929"
  },
  {
    "text": "enterprise databases that Andy talked about earlier but you're tired of being held hostage for the cost of that you",
    "start": "1417929",
    "end": "1425159"
  },
  {
    "text": "can use something like data migration service to and the schema migration tool to migrate out of that very expensive",
    "start": "1425159",
    "end": "1432480"
  },
  {
    "text": "Enterprise database and onto something like Amazon Aurora that we're going to talk here in the second part of my deck",
    "start": "1432480",
    "end": "1437659"
  },
  {
    "text": "very easily and very cost-effectively and effectively see about five times the",
    "start": "1437659",
    "end": "1443970"
  },
  {
    "text": "performance over my sequel and about one-tenth the cost excuse me so why",
    "start": "1443970",
    "end": "1456840"
  },
  {
    "start": "1454000",
    "end": "1500000"
  },
  {
    "text": "should you use RDS excuse me for all those things that I talked about earlier",
    "start": "1456840",
    "end": "1462110"
  },
  {
    "text": "you don't want to manage things like migration backup and recovery",
    "start": "1462110",
    "end": "1467840"
  },
  {
    "text": "configuration patching software upgrades oh thanks Larry excuse me I caught a",
    "start": "1467870",
    "end": "1474570"
  },
  {
    "text": "cold on the way up here in and you",
    "start": "1474570",
    "end": "1480360"
  },
  {
    "text": "really want to focus on things like the database schema the query design and the query optimization focus on your",
    "start": "1480360",
    "end": "1487380"
  },
  {
    "text": "business what's important to your customers and don't have to deal with all of the other things necessary to",
    "start": "1487380",
    "end": "1494159"
  },
  {
    "text": "operate a typical conventional database on Prem so Amazon Aurora this is part of",
    "start": "1494159",
    "end": "1504840"
  },
  {
    "start": "1500000",
    "end": "1534000"
  },
  {
    "text": "the RDS offering I'm super excited to talk to you guys about this today because of some of the things that Andy",
    "start": "1504840",
    "end": "1510779"
  },
  {
    "text": "said earlier much like RDS and how customers asked us to provide a platform",
    "start": "1510779",
    "end": "1515940"
  },
  {
    "text": "that will make it easy for them to operate databases amazon aurora was a",
    "start": "1515940",
    "end": "1523769"
  },
  {
    "text": "big ask from our customers who were tired of being held hostage by very large database providers and paying all",
    "start": "1523769",
    "end": "1531029"
  },
  {
    "text": "that money for that performance and scalability what is amazon Aurora so",
    "start": "1531029",
    "end": "1539130"
  },
  {
    "start": "1534000",
    "end": "1571000"
  },
  {
    "text": "it's it's essentially my sequel 56 compatible but what we did was and we'll",
    "start": "1539130",
    "end": "1546179"
  },
  {
    "text": "talk about this more on later slides is we completely customize the storage layer in ham zone Aurora so you get the",
    "start": "1546179",
    "end": "1555210"
  },
  {
    "text": "performance and availability of those commercial databases you get the simplicity of operating an RDS database",
    "start": "1555210",
    "end": "1561950"
  },
  {
    "text": "and and because it's delivered as a managed service you don't have to worry about all of the very complex",
    "start": "1561950",
    "end": "1568230"
  },
  {
    "text": "underpinnings of that database",
    "start": "1568230",
    "end": "1571610"
  },
  {
    "start": "1571000",
    "end": "1625000"
  },
  {
    "text": "so this slide really represents some of the changes that we made for Aurora we",
    "start": "1575210",
    "end": "1580650"
  },
  {
    "text": "reimagined it for the cloud we took that logging and storage layer out of the conventional database where you would",
    "start": "1580650",
    "end": "1588030"
  },
  {
    "text": "have primary nodes that would have their own storage and then a secondary node would have its own isolated storage I've",
    "start": "1588030",
    "end": "1594630"
  },
  {
    "text": "got a better slide here that'll that will illustrate that you guys are getting ahead of me again it leverages a",
    "start": "1594630",
    "end": "1601890"
  },
  {
    "text": "lot of the existing amazon services which are also built for high availability and performance like VPC",
    "start": "1601890",
    "end": "1609450"
  },
  {
    "text": "and DynamoDB and simple workflow and it maintains compatibility with my sequel",
    "start": "1609450",
    "end": "1615510"
  },
  {
    "text": "56 so if you're running my sequel five dot six today you should have absolutely no problem migrating Amazon Aurora this",
    "start": "1615510",
    "end": "1627150"
  },
  {
    "start": "1625000",
    "end": "1668000"
  },
  {
    "text": "chart shows you the performance enhancements it's about five times",
    "start": "1627150",
    "end": "1633870"
  },
  {
    "text": "faster than already s my sequel so the blue lines are Aurora and the red and",
    "start": "1633870",
    "end": "1640350"
  },
  {
    "text": "the green lines or my sequel 56 and 57 and you see almost almost exactly a 5x",
    "start": "1640350",
    "end": "1648240"
  },
  {
    "text": "performance difference in throughput based on the my sequel sis bench results",
    "start": "1648240",
    "end": "1654420"
  },
  {
    "text": "these results by the way are completely repeatable we have a white paper on this that will allow you to provision your",
    "start": "1654420",
    "end": "1661170"
  },
  {
    "text": "environments the way we provision them for the test and and perform them on your own I really like these slides",
    "start": "1661170",
    "end": "1671550"
  },
  {
    "start": "1668000",
    "end": "1720000"
  },
  {
    "text": "because what these slides show you is how performance scales when you scale the Amazon Aurora instances what you see",
    "start": "1671550",
    "end": "1684300"
  },
  {
    "text": "below you saw below that the red and the green lines again are 56 and 57 and even",
    "start": "1684300",
    "end": "1691320"
  },
  {
    "text": "as your instances go up and you scale to some very large instances you'll see that your performance doesn't really",
    "start": "1691320",
    "end": "1697410"
  },
  {
    "text": "scale with those instances and that's not exactly what you would expect right the blue line that's up into the right",
    "start": "1697410",
    "end": "1704340"
  },
  {
    "text": "there on both charts right Reed performance is Aurora so you can see if you scale your instance types",
    "start": "1704340",
    "end": "1710450"
  },
  {
    "text": "your performance is going to scale greatly with the Aurora with the Aurora solution here's a real life example of",
    "start": "1710450",
    "end": "1723740"
  },
  {
    "start": "1720000",
    "end": "1752000"
  },
  {
    "text": "performance differences with Aurora this was a gaming workload and then this one",
    "start": "1723740",
    "end": "1729100"
  },
  {
    "text": "we're running on are three four XL in a multi AZ configuration and you'll see",
    "start": "1729100",
    "end": "1736429"
  },
  {
    "text": "that the left side is before the Aurora migration and you saw the web",
    "start": "1736429",
    "end": "1743029"
  },
  {
    "text": "transaction response time was about 15 milliseconds and then after the migration to Aurora it came down to",
    "start": "1743029",
    "end": "1748940"
  },
  {
    "text": "about five-and-a-half milliseconds so how did we achieve this essentially",
    "start": "1748940",
    "end": "1756529"
  },
  {
    "start": "1752000",
    "end": "1796000"
  },
  {
    "text": "there's there's not a lot of magic we're doing less work and we're more efficient",
    "start": "1756529",
    "end": "1762020"
  },
  {
    "text": "so we're doing fewer iOS we're going to talk about that here in the next slide we're minimizing network traffic and",
    "start": "1762020",
    "end": "1769570"
  },
  {
    "text": "offloading some of the work that the database engine does almost all of the",
    "start": "1769570",
    "end": "1774919"
  },
  {
    "text": "steps are now a synchronous versus numerous synchronous process steps in the traditional my sequel model and",
    "start": "1774919",
    "end": "1781929"
  },
  {
    "text": "we've reduced latency as this slide says databases are all about IL network",
    "start": "1781929",
    "end": "1788510"
  },
  {
    "text": "attached storage is all about packets per second and high-throughput processing doesn't really work well with",
    "start": "1788510",
    "end": "1794210"
  },
  {
    "text": "context switches so this is what a traffic pattern looks like in a typical",
    "start": "1794210",
    "end": "1799640"
  },
  {
    "start": "1796000",
    "end": "1859000"
  },
  {
    "text": "my sequel environment where in the second column on the right here is a read replica and each one of those",
    "start": "1799640",
    "end": "1806870"
  },
  {
    "text": "colored arrows is the bottom will indicate for you represents a different data flow a different right if you will",
    "start": "1806870",
    "end": "1814309"
  },
  {
    "text": "and you can see that you're making a lot of repetitive rights not only to your primary tier where you've got your",
    "start": "1814309",
    "end": "1820399"
  },
  {
    "text": "primary instance and you're persisting it down to your elastic block store and then you're doing a secondary right so",
    "start": "1820399",
    "end": "1826850"
  },
  {
    "text": "that you have borne avoid things like torn rights but then you're going to replicate all that over to your replica",
    "start": "1826850",
    "end": "1832100"
  },
  {
    "text": "instance and it's going to do the same thing on its own storage tier so you can",
    "start": "1832100",
    "end": "1838970"
  },
  {
    "text": "see that the amount of traffic that you're pushing through that is considerable so at the",
    "start": "1838970",
    "end": "1845210"
  },
  {
    "text": "end of the day that supported about 7.4 million iOS per million transactions or",
    "start": "1845210",
    "end": "1851990"
  },
  {
    "text": "about 7.4 iOS per transaction again this is done with suspension this is",
    "start": "1851990",
    "end": "1857780"
  },
  {
    "text": "repeatable so let's look at what the traffic looks like an Aurora so you see",
    "start": "1857780",
    "end": "1863450"
  },
  {
    "start": "1859000",
    "end": "1968000"
  },
  {
    "text": "considerably less writing going on here however there's a couple things",
    "start": "1863450",
    "end": "1868850"
  },
  {
    "text": "definitely worth mentioning here so we're baack scarring all the redo logs",
    "start": "1868850",
    "end": "1874310"
  },
  {
    "text": "right and it's ordered by the log sequence number but and so up at the top there and with the purple which you can",
    "start": "1874310",
    "end": "1880430"
  },
  {
    "text": "barely see in the green lines you're essentially putting pushing your reduce over to your replica instances but",
    "start": "1880430",
    "end": "1887720"
  },
  {
    "text": "because Aurora uses a shared storage layer they're all using the same underlying storage layer so you don't",
    "start": "1887720",
    "end": "1894770"
  },
  {
    "text": "have to replicate all of that data to n number of nodes with their own vertical storage attached to them their own",
    "start": "1894770",
    "end": "1901160"
  },
  {
    "text": "private storage but what we do in Aurora is we replicate it six times across",
    "start": "1901160",
    "end": "1908300"
  },
  {
    "text": "three different az's so you have an incredible amount of data durability so we have six times more log rights as you",
    "start": "1908300",
    "end": "1915620"
  },
  {
    "text": "see down here in the bottom because we're writing your data essentially six copies of your data out but nine times",
    "start": "1915620",
    "end": "1921500"
  },
  {
    "text": "less network traffic because we're not doing all of those things that the previous slide was doing you're not",
    "start": "1921500",
    "end": "1929750"
  },
  {
    "text": "doing all of this stuff and then of course it's all persisted down to s3",
    "start": "1929750",
    "end": "1935530"
  },
  {
    "text": "Aurora is automatically backed up and continually backed up to s3 so in the",
    "start": "1935530",
    "end": "1942260"
  },
  {
    "text": "end you see about nine hundred and fifty thousand iOS per million transactions so",
    "start": "1942260",
    "end": "1947750"
  },
  {
    "text": "and by the way that accounts for the 6x amplification of storage and in seven",
    "start": "1947750",
    "end": "1954350"
  },
  {
    "text": "and seven point seven times less in terms of the i/o performance from the",
    "start": "1954350",
    "end": "1961580"
  },
  {
    "text": "other and then 30 to 35 X more of the actual transactions per second another",
    "start": "1961580",
    "end": "1971270"
  },
  {
    "start": "1968000",
    "end": "2058000"
  },
  {
    "text": "thing that you see when you talk about having replicas is a separation or what",
    "start": "1971270",
    "end": "1977760"
  },
  {
    "text": "they call lag between your primary instance and your secondary instance and",
    "start": "1977760",
    "end": "1983670"
  },
  {
    "text": "that's because that replication is typically being done asynchronously and",
    "start": "1983670",
    "end": "1989240"
  },
  {
    "text": "if there is if there is enough lag or",
    "start": "1989240",
    "end": "1994380"
  },
  {
    "text": "network whether for lack of a better term your asynchronous pushes to your",
    "start": "1994380",
    "end": "1999660"
  },
  {
    "text": "replica may take time to get there and they may take time to process and then as you may know if your replica gets too",
    "start": "1999660",
    "end": "2007610"
  },
  {
    "text": "far out of sync with your master then you have some problems to deal with and typically that meant you had to kill off",
    "start": "2007610",
    "end": "2013790"
  },
  {
    "text": "your replica and recreate it so replica replica lag is a really important thing",
    "start": "2013790",
    "end": "2019670"
  },
  {
    "text": "to watch with Aurora because you saw we were utilizing the same storage tier for",
    "start": "2019670",
    "end": "2026480"
  },
  {
    "text": "all of your nodes underneath the covers replica lag is typically something less",
    "start": "2026480",
    "end": "2031970"
  },
  {
    "text": "than 20 milliseconds and in fact in this example from goguardian they saw replica",
    "start": "2031970",
    "end": "2038270"
  },
  {
    "text": "lags almost in the 12-minute range just using regular RDS with my sequel and",
    "start": "2038270",
    "end": "2045100"
  },
  {
    "text": "when they utilize amazon Aurora their replicas lags never went beyond 20",
    "start": "2045100",
    "end": "2052280"
  },
  {
    "text": "milliseconds even across four read replicas so that's a that's a pretty incredible stat so here's what the i/o",
    "start": "2052280",
    "end": "2060860"
  },
  {
    "start": "2058000",
    "end": "2164000"
  },
  {
    "text": "traffic looks like an Aurora replicas versus my sequel this is another interesting slide that I really like",
    "start": "2060860",
    "end": "2066620"
  },
  {
    "text": "because when you think about scaling the performance of your database you think",
    "start": "2066620",
    "end": "2074270"
  },
  {
    "text": "about as i talked about earlier hey my primary instance is really getting up",
    "start": "2074270",
    "end": "2079520"
  },
  {
    "text": "there in terms of capacity i need to create a read replica and so you think",
    "start": "2079520",
    "end": "2084560"
  },
  {
    "text": "hey if i create a read replica i'm going to get double the performance theoretically right not so much on the",
    "start": "2084560",
    "end": "2090649"
  },
  {
    "text": "left here this is what read scaling looks like in my sequel in traditional my sequel you're still having to write",
    "start": "2090650",
    "end": "2097400"
  },
  {
    "text": "all of the updates in that one really noisy chart that I showed you over to your replica so it's still handling",
    "start": "2097400",
    "end": "2104120"
  },
  {
    "text": "seventy percent of the rights just like it is in your prime i know'd so when you create a reed replica you're really only getting a",
    "start": "2104120",
    "end": "2111090"
  },
  {
    "text": "thirty thirty percent bump in your new reads for the capacity that it can handle it's not really a very efficient",
    "start": "2111090",
    "end": "2117300"
  },
  {
    "text": "model and and so and by the way you're paying for a whole nother data volume and separate data storage for that so",
    "start": "2117300",
    "end": "2124440"
  },
  {
    "text": "it's not very efficient with aurora again because you're using that shared storage layer essential and the only the",
    "start": "2124440",
    "end": "2131970"
  },
  {
    "text": "only thing you're writing to your read replica is you're essentially your cash and so if you've got items pages in cash",
    "start": "2131970",
    "end": "2139350"
  },
  {
    "text": "from your database it will utilize that cash and update them if those pages aren't in cash it just it just ignores",
    "start": "2139350",
    "end": "2146670"
  },
  {
    "text": "that the page cash that's written to it because it can pull it from disk so you get effectively a hundred percent new",
    "start": "2146670",
    "end": "2153240"
  },
  {
    "text": "read capacity just by creating that Aurora replica so that that really makes this model very scalable in the Aurora",
    "start": "2153240",
    "end": "2162120"
  },
  {
    "text": "world so this is a pretty profound statement performance only matters if",
    "start": "2162120",
    "end": "2168780"
  },
  {
    "start": "2164000",
    "end": "2369000"
  },
  {
    "text": "your database is up I like that quote so I threw it in there so let's talk about",
    "start": "2168780",
    "end": "2174150"
  },
  {
    "text": "storage durability of your database amazon aurora functions a lot like s3",
    "start": "2174150",
    "end": "2181590"
  },
  {
    "text": "from a storage capacity so if you're familiar with the the concept of s3",
    "start": "2181590",
    "end": "2186600"
  },
  {
    "text": "being an object storage where you can put as little as a 1k file and effectively store as much data as you",
    "start": "2186600",
    "end": "2193140"
  },
  {
    "text": "want up to a single 5 terabyte file amazon aurora works in a similar fashion",
    "start": "2193140",
    "end": "2198260"
  },
  {
    "text": "the minimum database size is 10 gigs so it's not a 1k file but you start with a",
    "start": "2198260",
    "end": "2203550"
  },
  {
    "text": "10 gig file and it will grow as it needs to on its own so you don't have to",
    "start": "2203550",
    "end": "2208560"
  },
  {
    "text": "provision the storage for it and you don't have to worry about is my disk filling up and what happens if that does",
    "start": "2208560",
    "end": "2214530"
  },
  {
    "text": "and it will grow to 64 terabytes in size today and it does that in 10 gigabit 10",
    "start": "2214530",
    "end": "2221010"
  },
  {
    "text": "gigabyte chunks we have a quorum system for reading rights so as you saw earlier",
    "start": "2221010",
    "end": "2226530"
  },
  {
    "text": "I have six different data stores across three availability zones for right",
    "start": "2226530",
    "end": "2232800"
  },
  {
    "text": "consistency we make sure that we have acknowledgment from at least four of those volumes before we accept that are",
    "start": "2232800",
    "end": "2240270"
  },
  {
    "text": "right was successful and and and 33 of those",
    "start": "2240270",
    "end": "2245529"
  },
  {
    "text": "data volumes for read consistency as I mentioned earlier we continually backup",
    "start": "2245529",
    "end": "2251140"
  },
  {
    "text": "to s3 in we utilize a quorum or I'm",
    "start": "2251140",
    "end": "2256179"
  },
  {
    "text": "sorry we utilize a gossip protocol to fill in the blanks so earlier I mentioned that a lot of the data",
    "start": "2256179",
    "end": "2262119"
  },
  {
    "text": "replication across these different storage layers is now a synchronous and you may be thinking to yourself well",
    "start": "2262119",
    "end": "2267729"
  },
  {
    "text": "when he said asynchronous as it applies to read replicas that caused drift and that's a bad thing in this case that",
    "start": "2267729",
    "end": "2274749"
  },
  {
    "text": "that gives you quite a bit of performance but because we use the quorum method for 44 different volumes",
    "start": "2274749",
    "end": "2282009"
  },
  {
    "text": "for writing and three different volumes for reads that gives you the data resiliency and then we use the gossip",
    "start": "2282009",
    "end": "2288459"
  },
  {
    "text": "protocol to fill in the blanks so that we can ensure you don't lose any data as we do with many of our other AWS",
    "start": "2288459",
    "end": "2295329"
  },
  {
    "text": "services we continually monitor things like the the nodes for failure and",
    "start": "2295329",
    "end": "2300429"
  },
  {
    "text": "repair them unbeknownst to you on the underlying disk that's also monitor and",
    "start": "2300429",
    "end": "2307150"
  },
  {
    "text": "repaired I mentioned earlier that each of these storage segments is 10 gigabytes and that was done in a very",
    "start": "2307150",
    "end": "2314380"
  },
  {
    "text": "meaningful way because when you talk about having to recover from a database",
    "start": "2314380",
    "end": "2319949"
  },
  {
    "text": "failure the size of storage that you have to recover can be a pretty big deal",
    "start": "2319949",
    "end": "2326650"
  },
  {
    "text": "if it's a very large database and you have to go back and restore four terabytes of database your restoration",
    "start": "2326650",
    "end": "2333429"
  },
  {
    "text": "period is going to take some time to complete to say nothing of rewarming the",
    "start": "2333429",
    "end": "2339279"
  },
  {
    "text": "cash on that database so we actively set each storage volume in an Aurora",
    "start": "2339279",
    "end": "2347410"
  },
  {
    "text": "database at 10 gigabytes and and we did that because you can restore our 10 gigabytes very very quickly so if we",
    "start": "2347410",
    "end": "2354969"
  },
  {
    "text": "have things like hot spots or a data volume that fails we can stand up a new",
    "start": "2354969",
    "end": "2360489"
  },
  {
    "text": "data volume and repair that 10 gigabyte volume very very quickly with very",
    "start": "2360489",
    "end": "2366219"
  },
  {
    "text": "minimal or no impact to your environment this talks more about the fault tolerant",
    "start": "2366219",
    "end": "2372969"
  },
  {
    "start": "2369000",
    "end": "2417000"
  },
  {
    "text": "storage we're saving six copies in three different availability zones we already",
    "start": "2372969",
    "end": "2378970"
  },
  {
    "text": "talked about the 4 of 64 right quorum and 3064 read and the peer-to-peer you know the gossip protocol for replicating",
    "start": "2378970",
    "end": "2385690"
  },
  {
    "text": "repairs the last bullet talks more about because even if you have a 64 terabyte",
    "start": "2385690",
    "end": "2392560"
  },
  {
    "text": "Aurora database you essentially have thousands of 10 gigabyte volumes",
    "start": "2392560",
    "end": "2399310"
  },
  {
    "text": "attached to that powering that and that's and that's part of that model that allows you to spread your data out",
    "start": "2399310",
    "end": "2405790"
  },
  {
    "text": "across numerous volumes make it small enough so that we can quickly recover from a failure and also give you the",
    "start": "2405790",
    "end": "2413440"
  },
  {
    "text": "performance that you're looking for from the database another thing that we did",
    "start": "2413440",
    "end": "2420190"
  },
  {
    "start": "2417000",
    "end": "2476000"
  },
  {
    "text": "aside from changing the storage layer of the way we did was we removed the cash",
    "start": "2420190",
    "end": "2425740"
  },
  {
    "text": "from the database and and we make that part of that 10 gig volume so again if",
    "start": "2425740",
    "end": "2432100"
  },
  {
    "text": "you have a particular volume failure and you'll see this on the next slide your cache remains warm because it's no",
    "start": "2432100",
    "end": "2438520"
  },
  {
    "text": "longer directly associated with your database so one of the big things when you recover from the database failure is",
    "start": "2438520",
    "end": "2444580"
  },
  {
    "text": "is rewarming your cash right bringing all of the data that was in cash back",
    "start": "2444580",
    "end": "2449680"
  },
  {
    "text": "into memory and that can be a very time-consuming process and depending on",
    "start": "2449680",
    "end": "2454990"
  },
  {
    "text": "your particular workload doing that alone could also cause another failure so we chose to remove the cash from the",
    "start": "2454990",
    "end": "2462880"
  },
  {
    "text": "data volume from from the database its layer itself and handle it separately so",
    "start": "2462880",
    "end": "2468010"
  },
  {
    "text": "when you have failures in the database your cash is still in memory and stays warm shortening your recovery cycle this",
    "start": "2468010",
    "end": "2478600"
  },
  {
    "start": "2476000",
    "end": "2509000"
  },
  {
    "text": "talks about Aurora replicas for failover targets you can you can define things like the failover order it makes it real",
    "start": "2478600",
    "end": "2486580"
  },
  {
    "text": "easy for rebalancing across Aurora I didn't mention this earlier but you can",
    "start": "2486580",
    "end": "2491740"
  },
  {
    "text": "have up to 15 read replicas of Aurora so you can really scale out horizontally",
    "start": "2491740",
    "end": "2496960"
  },
  {
    "text": "for your reads as I mentioned the the failing database nodes are automatically",
    "start": "2496960",
    "end": "2502810"
  },
  {
    "text": "detected and replaced and data processing will continue a lot of vendors talk about and",
    "start": "2502810",
    "end": "2512480"
  },
  {
    "start": "2509000",
    "end": "2569000"
  },
  {
    "text": "particularly solutions architect so I'm guilty of this talk about planning for failure it's really important for you to",
    "start": "2512480",
    "end": "2518420"
  },
  {
    "text": "plan for failure because if you don't then you're not sure how your environment is going to operate when",
    "start": "2518420",
    "end": "2523579"
  },
  {
    "text": "failure actually happens you'll also hear a lot of vendors thanks thanks Larry you'll also hear a lot of vendors",
    "start": "2523579",
    "end": "2529640"
  },
  {
    "text": "talk about how their systems are you know built for failure and very",
    "start": "2529640",
    "end": "2535099"
  },
  {
    "text": "resilient I like the fact that Amazon takes this a step further and builds in",
    "start": "2535099",
    "end": "2540440"
  },
  {
    "text": "ways for you to simulate failures to see how this environment is going to operate when something bad happens right and so",
    "start": "2540440",
    "end": "2548119"
  },
  {
    "text": "you can do things like fail a component in the database or you know simulate the",
    "start": "2548119",
    "end": "2553190"
  },
  {
    "text": "failure of disks and for how long right on the number of disks and simulate network failures and so that will allow",
    "start": "2553190",
    "end": "2559130"
  },
  {
    "text": "you to not guess at how your system is going to perform when a failure happens",
    "start": "2559130",
    "end": "2564920"
  },
  {
    "text": "but know how your system is going to perform when a failure happens I already",
    "start": "2564920",
    "end": "2570619"
  },
  {
    "start": "2569000",
    "end": "2597000"
  },
  {
    "text": "mentioned this but it's Amazon Aurora's based on my sequel five dot six so it's",
    "start": "2570619",
    "end": "2576650"
  },
  {
    "text": "it's totally compatible with my sequel five dot six just that storage layer in",
    "start": "2576650",
    "end": "2581660"
  },
  {
    "text": "the caching underneath is is customized for proprietary I say completely",
    "start": "2581660",
    "end": "2587420"
  },
  {
    "text": "compatible with my sequel five six there are some caveats that assumes that you're using the nodb engine of course",
    "start": "2587420",
    "end": "2594309"
  },
  {
    "text": "but all of your existing tools will work with the amazon aurora tool so if you're",
    "start": "2594309",
    "end": "2604369"
  },
  {
    "start": "2597000",
    "end": "2614000"
  },
  {
    "text": "using things like tableau or looker informatica or slalom on your my sequel",
    "start": "2604369",
    "end": "2610069"
  },
  {
    "text": "environments today they'll continue to work with your amazon aurora here's many",
    "start": "2610069",
    "end": "2616190"
  },
  {
    "start": "2614000",
    "end": "2631000"
  },
  {
    "text": "other third-party monitoring tools that I just figured we need to show you that just because we're calling in Amazon",
    "start": "2616190",
    "end": "2623450"
  },
  {
    "text": "Aurora there is definitely some Amazon magic to it under the covers but it is a",
    "start": "2623450",
    "end": "2628970"
  },
  {
    "text": "my sequel compatible product migrating to Aurora very easy particularly if",
    "start": "2628970",
    "end": "2635030"
  },
  {
    "start": "2631000",
    "end": "2658000"
  },
  {
    "text": "you're already running a my sequel database in RDS there's literally an option to",
    "start": "2635030",
    "end": "2640490"
  },
  {
    "text": "gone your database and say hey my great my last snapshot over to Aurora and it will literally go and do that in a",
    "start": "2640490",
    "end": "2646970"
  },
  {
    "text": "matter of minutes here you're picking your database instance class meaning your amount of compute power and you'll",
    "start": "2646970",
    "end": "2652880"
  },
  {
    "text": "select a couple other options for where you want it to run in your environment and it will be off to the races so why",
    "start": "2652880",
    "end": "2659600"
  },
  {
    "start": "2658000",
    "end": "2710000"
  },
  {
    "text": "Aurora if the rest of my pitch didn't do it for you it's architected for four",
    "start": "2659600",
    "end": "2665420"
  },
  {
    "text": "nines of availability it gives you that Enterprise Performance 5x over my sequel",
    "start": "2665420",
    "end": "2671119"
  },
  {
    "text": "at one-tenth the cost of some of those larger vendors it'll automatically grow",
    "start": "2671119",
    "end": "2677600"
  },
  {
    "text": "to 6040 so you don't have to worry about provisioning storage that you think you're going to grow into and you may",
    "start": "2677600",
    "end": "2683510"
  },
  {
    "text": "never grow into and conversely you don't have to worry about oh god do I have enough database storage you know will I",
    "start": "2683510",
    "end": "2690140"
  },
  {
    "text": "be able to you know do I have to monitor that so I have to enlarge my database volumes later easy migration from my",
    "start": "2690140",
    "end": "2697490"
  },
  {
    "text": "sequel 15 read replicas is great cross read and replicas even better encryption",
    "start": "2697490",
    "end": "2703610"
  },
  {
    "text": "and transit at rest continually back up and and the best point of it all is that it's fully managed for you this slide I",
    "start": "2703610",
    "end": "2711440"
  },
  {
    "start": "2710000",
    "end": "2732000"
  },
  {
    "text": "just wanted to show you some of the recent releases my original intent here was to show you all of the releases in",
    "start": "2711440",
    "end": "2717350"
  },
  {
    "text": "RDS over the past year and I realized very quickly that would be an impossible chart to show you because it would just",
    "start": "2717350",
    "end": "2723890"
  },
  {
    "text": "be a screen of little white dots so this is literally just in the last two months or so of the different changes for",
    "start": "2723890",
    "end": "2731210"
  },
  {
    "text": "Amazon RDS you probably already know this but like many of the AWS services",
    "start": "2731210",
    "end": "2737420"
  },
  {
    "start": "2732000",
    "end": "2750000"
  },
  {
    "text": "you can try it for free if you just go to AWS amazon com / free you get a",
    "start": "2737420",
    "end": "2744859"
  },
  {
    "text": "certain number of instance hours in and can go out and try these things for yourself I thank you very much for your",
    "start": "2744859",
    "end": "2752420"
  },
  {
    "start": "2750000",
    "end": "2774000"
  },
  {
    "text": "time I have 50 seconds left so that is pretty good ah in the interest of",
    "start": "2752420",
    "end": "2758510"
  },
  {
    "text": "keeping Larry's track going I will remove myself from the stage but if anybody has questions or wants to talk",
    "start": "2758510",
    "end": "2763520"
  },
  {
    "text": "more about it I'll be in the back or out in the hallway thank you you",
    "start": "2763520",
    "end": "2770070"
  }
]