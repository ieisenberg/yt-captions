[
  {
    "text": "In this video, you’ll learn about the \nAmazon Kinesis Client Library (KCL).",
    "start": "0",
    "end": "4316"
  },
  {
    "text": "KCL is a Java library that helps you consume \nand process data from a Kinesis data stream",
    "start": "4971",
    "end": "9681"
  },
  {
    "text": "by taking care of many of the complex \ntasks associated with distributed computing.",
    "start": "9681",
    "end": "13825"
  },
  {
    "text": "Amazon Kinesis Data Streams ingests \na large amount of data in real time,",
    "start": "15143",
    "end": "19014"
  },
  {
    "text": "durably stores the data, and makes \nthe data available for consumption.",
    "start": "19014",
    "end": "22376"
  },
  {
    "text": "You have multiple options for \nconsuming data from the stream.",
    "start": "22922",
    "end": "25500"
  },
  {
    "text": "You can use third-party \ntools such as Apache Spark.",
    "start": "26627",
    "end": "29358"
  },
  {
    "text": "You can leverage an AWS SDK.",
    "start": "30403",
    "end": "32561"
  },
  {
    "text": "You can use built-in integration with AWS \nservices such as Kinesis Data Firehose,",
    "start": "33669",
    "end": "38136"
  },
  {
    "text": "Kinesis Data Analytics, and AWS Lambda.",
    "start": "38137",
    "end": "40554"
  },
  {
    "text": "Or, you can build a custom consumer \napplication using Kinesis Client Library",
    "start": "41654",
    "end": "45630"
  },
  {
    "text": "along with the Kinesis Connector Library.",
    "start": "45630",
    "end": "47457"
  },
  {
    "text": "Our focus is KCL, which is a Java library.",
    "start": "48665",
    "end": "51450"
  },
  {
    "text": "Support for languages other than Java \nis provided using a multi-language",
    "start": "51940",
    "end": "55097"
  },
  {
    "text": "interface called the MultiLangDaemon.",
    "start": "55097",
    "end": "57120"
  },
  {
    "text": "This daemon is Java-based and runs \nin the background when you are using",
    "start": "57529",
    "end": "60408"
  },
  {
    "text": "a KCL language other than Java.",
    "start": "60408",
    "end": "62454"
  },
  {
    "text": "KCL comes in two versions, 1.x and 2.x.",
    "start": "62935",
    "end": "66193"
  },
  {
    "text": "For information about the differences and \non how to migrate from KCL 1.x to KCL 2.x,",
    "start": "66593",
    "end": "72109"
  },
  {
    "text": "please refer to the link provided \nin the description for this video.",
    "start": "72109",
    "end": "75141"
  },
  {
    "text": "Note that if you want to use enhanced\nfan out consumers with dedicated read",
    "start": "75768",
    "end": "78912"
  },
  {
    "text": "throughput must use KCL2.x",
    "start": "78913",
    "end": "81864"
  },
  {
    "text": "KCL acts as an intermediary between your \nrecord processing logic and Kinesis Data Streams.",
    "start": "83100",
    "end": "87776"
  },
  {
    "text": "It handles complex issues out of the box, \nsuch as adapting to changes in the stream",
    "start": "88075",
    "end": "91854"
  },
  {
    "text": "volume, load balancing streaming data when \nresharding occurs, coordinating distributed",
    "start": "91855",
    "end": "96846"
  },
  {
    "text": "services and processing data with fault \ntolerance, and checkpointing processed records.",
    "start": "96846",
    "end": "101278"
  },
  {
    "text": "Let’s look at some key KCL concepts.",
    "start": "102423",
    "end": "104451"
  },
  {
    "text": "A KCL consumer application is a custom\nbuilt application designed to read and \nprocess records from data streams.",
    "start": "104978",
    "end": "110821"
  },
  {
    "text": "KCL consumer applications are \ntypically distributed across multiple",
    "start": "111239",
    "end": "114396"
  },
  {
    "text": "instances running simultaneously.",
    "start": "114396",
    "end": "116314"
  },
  {
    "text": "A worker is a high level class that a KCL consumer \napplication instance uses to start processing data.",
    "start": "117469",
    "end": "122728"
  },
  {
    "text": "The worker initializes and oversees various \ntasks, including syncing shard and lease ",
    "start": "123028",
    "end": "127158"
  },
  {
    "text": "information, tracking shard assignments, \nand processing data from the shards.",
    "start": "127158",
    "end": "131081"
  },
  {
    "text": "Note that in KCL 2.x, \nworkers are called schedulers.",
    "start": "131562",
    "end": "135206"
  },
  {
    "text": "A lease is the data that defines the \nbinding between a worker and a shard.",
    "start": "136360",
    "end": "139926"
  },
  {
    "text": "Distributed KCL consumer applications \nuse leases to partition data record",
    "start": "140299",
    "end": "143995"
  },
  {
    "text": "processing across a fleet of workers.",
    "start": "143995",
    "end": "146000"
  },
  {
    "text": "A lease table is a unique Amazon DynamoDB \ntable used to keep track of the shards being",
    "start": "147045",
    "end": "151514"
  },
  {
    "text": "leased and processed by the workers \nof the KCL consumer application.",
    "start": "151514",
    "end": "155024"
  },
  {
    "text": "A record processor is the logic \nthat defines how a KCL consumer",
    "start": "156096",
    "end": "159480"
  },
  {
    "text": "application processes the data \nit gets from the data streams.",
    "start": "159480",
    "end": "162478"
  },
  {
    "text": "At runtime, a KCL consumer application\n instance instantiates a worker, and this",
    "start": "162923",
    "end": "167442"
  },
  {
    "text": "worker instantiates a record processor \nfor each shard to which it holds a lease.",
    "start": "167442",
    "end": "171295"
  },
  {
    "text": "The Amazon Kinesis Data Stream \nDeveloper Guide provides extensive",
    "start": "173476",
    "end": "176484"
  },
  {
    "text": "information about developing custom consumer \napplications using the Kinesis Client Library.",
    "start": "176484",
    "end": "181153"
  },
  {
    "text": "First, let’s review the documentation on developing \ncustom consumers with shared throughput.",
    "start": "182153",
    "end": "186460"
  },
  {
    "text": "Topic links are provided for developing \nconsumers with the AWS SDK for Java or with KCL.",
    "start": "187596",
    "end": "192874"
  },
  {
    "text": "We’ll select KCL.",
    "start": "193319",
    "end": "194617"
  },
  {
    "text": "You can use either KCL 1.x or KCL 2.x to build \nconsumer applications that use shared throughput.",
    "start": "196480",
    "end": "202493"
  },
  {
    "text": "Let’s view the information for KCL 1.x.",
    "start": "202930",
    "end": "205540"
  },
  {
    "text": "We’ll choose the link for developing in Java.",
    "start": "206623",
    "end": "208708"
  },
  {
    "text": "The page provides various development \nresources, including a GitHub link.",
    "start": "210435",
    "end": "214144"
  },
  {
    "text": "Here you have Kinesis-client \nlibrary application code.",
    "start": "216307",
    "end": "219214"
  },
  {
    "text": "Code is provided for building a lease table, a \ncheckpoint, a worker or scheduler, and more.",
    "start": "220341",
    "end": "225618"
  },
  {
    "text": "You can explore this GitHub link \nfor ready to use code samples.",
    "start": "226808",
    "end": "229906"
  },
  {
    "text": "Let's go back to the previous page and\nscan the step-by-step task instructions",
    "start": "230142",
    "end": "233615"
  },
  {
    "text": "and sample code available there.",
    "start": "233615",
    "end": "235397"
  },
  {
    "text": "You can copy the sample code and modify \nit to implement your consumer application.",
    "start": "236187",
    "end": "240000"
  },
  {
    "text": "Similarly, you can access guidance and code for \ndeveloping consumers with dedicated throughput.",
    "start": "241190",
    "end": "245837"
  },
  {
    "text": "When developing consumer applications\nthat use dedicated throughput (also",
    "start": "246918",
    "end": "250393"
  },
  {
    "text": "known as Enhanced Fan-Out \nconsumers), you must use KCL 2.x.",
    "start": "250393",
    "end": "254773"
  },
  {
    "text": "This code shows an example implementation",
    "start": "259099",
    "end": "260976"
  },
  {
    "text": "that can be copied and modified to build\nconsumers that use Enhanced Fan-Out.",
    "start": "260976",
    "end": "264784"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "266620",
    "end": "269584"
  },
  {
    "text": "Thanks for watching. Now it's your turn to try.",
    "start": "269947",
    "end": "271927"
  }
]