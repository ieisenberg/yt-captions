[
  {
    "text": "- Hello, my name is Esteban Serna.",
    "start": "5370",
    "end": "7529"
  },
  {
    "text": "I am a Senior DynamoDB\nSpecialist Solution Architect.",
    "start": "7530",
    "end": "10950"
  },
  {
    "text": "And in my role,",
    "start": "10950",
    "end": "11820"
  },
  {
    "text": "I help customers to optimize\ntheir access patterns",
    "start": "11820",
    "end": "15150"
  },
  {
    "text": "and their data models",
    "start": "15150",
    "end": "16830"
  },
  {
    "text": "to get really low response\ntimes and increase throughput.",
    "start": "16830",
    "end": "21570"
  },
  {
    "text": "In today's video, we're\ngoing to discuss a situation",
    "start": "21570",
    "end": "24450"
  },
  {
    "text": "that I have faced with\nmany different customers.",
    "start": "24450",
    "end": "27810"
  },
  {
    "text": "It is called hot partitions,\nrolling hot keys,",
    "start": "27810",
    "end": "32070"
  },
  {
    "text": "sliding keys, monotonic hot key.",
    "start": "32070",
    "end": "35160"
  },
  {
    "text": "It has very different names,",
    "start": "35160",
    "end": "36720"
  },
  {
    "text": "but the symptoms are very similar.",
    "start": "36720",
    "end": "39030"
  },
  {
    "text": "What is a hot partition?",
    "start": "39030",
    "end": "42059"
  },
  {
    "text": "It is when you're trying to write",
    "start": "42060",
    "end": "43620"
  },
  {
    "text": "into the same virtual partition",
    "start": "43620",
    "end": "45270"
  },
  {
    "text": "inside an Amazon DynamoDB table.",
    "start": "45270",
    "end": "48350"
  },
  {
    "text": "As you might know,",
    "start": "48350",
    "end": "49593"
  },
  {
    "text": "virtual partitions store\none or more combinations",
    "start": "51390",
    "end": "54450"
  },
  {
    "text": "of partition key and sort\nkeys inside a DynamoDB table.",
    "start": "54450",
    "end": "57333"
  },
  {
    "text": "As an example, if you\ncreate one DynamoDB table,",
    "start": "59024",
    "end": "63293"
  },
  {
    "text": "your data could be stored\nin one in virtual partition.",
    "start": "64470",
    "end": "67993"
  },
  {
    "text": "That means all the combination",
    "start": "67993",
    "end": "69423"
  },
  {
    "text": "of your partition keys and sort key",
    "start": "69423",
    "end": "70896"
  },
  {
    "text": "could be stored in there.",
    "start": "70897",
    "end": "73320"
  },
  {
    "text": "DynamoDB behind the scenes",
    "start": "73320",
    "end": "74850"
  },
  {
    "text": "will give you more virtual partitions",
    "start": "74850",
    "end": "77010"
  },
  {
    "text": "as your traffic requires",
    "start": "77010",
    "end": "78780"
  },
  {
    "text": "or if you choose to provision those.",
    "start": "78780",
    "end": "80702"
  },
  {
    "text": "Now, let's talk about this scenario.",
    "start": "81750",
    "end": "84720"
  },
  {
    "text": "I have created one table, which\nis called the quotes table.",
    "start": "84720",
    "end": "89700"
  },
  {
    "text": "This quotes table has an\nhypothetical application of users",
    "start": "89700",
    "end": "93590"
  },
  {
    "text": "that create quotes over the internet.",
    "start": "93590",
    "end": "96630"
  },
  {
    "text": "Each one of these users might\nbelong to an organization",
    "start": "96630",
    "end": "100950"
  },
  {
    "text": "and each one of the posts or the quotes",
    "start": "100950",
    "end": "103710"
  },
  {
    "text": "has a quote identifier.",
    "start": "103710",
    "end": "105363"
  },
  {
    "text": "This is my quotes DynamoDB table.",
    "start": "106230",
    "end": "108590"
  },
  {
    "text": "As you can see,",
    "start": "108590",
    "end": "110250"
  },
  {
    "text": "it has nearly 88 million\nquotes from different users",
    "start": "110250",
    "end": "115110"
  },
  {
    "text": "and it's about 40 gigabytes.",
    "start": "115110",
    "end": "116820"
  },
  {
    "text": "The average item size is 447 bytes,",
    "start": "116820",
    "end": "119793"
  },
  {
    "text": "and I have created one\nglobal secondary index",
    "start": "121080",
    "end": "124920"
  },
  {
    "text": "that is called the migration-index,",
    "start": "124920",
    "end": "126540"
  },
  {
    "text": "which I'm going to introduce the situation",
    "start": "126540",
    "end": "128580"
  },
  {
    "text": "that we're going to face.",
    "start": "128580",
    "end": "130140"
  },
  {
    "text": "Now, before we go into the index,",
    "start": "130140",
    "end": "132210"
  },
  {
    "text": "let's explore the table data.",
    "start": "132210",
    "end": "133890"
  },
  {
    "text": "So I'm just going to\nrun and scan operation.",
    "start": "133890",
    "end": "137100"
  },
  {
    "text": "There's going to get some of the quotes",
    "start": "137100",
    "end": "138750"
  },
  {
    "text": "from the different users.",
    "start": "138750",
    "end": "140580"
  },
  {
    "text": "And let's explore this data.",
    "start": "140580",
    "end": "141930"
  },
  {
    "text": "For example, if I grab the first one,",
    "start": "141930",
    "end": "144239"
  },
  {
    "text": "you're seeing that the identifier is...",
    "start": "144240",
    "end": "147000"
  },
  {
    "text": "The partition key is the user ID,",
    "start": "147000",
    "end": "148980"
  },
  {
    "text": "which is a nano ID in this scenario.",
    "start": "148980",
    "end": "151530"
  },
  {
    "text": "The sort key,",
    "start": "151530",
    "end": "153030"
  },
  {
    "text": "it is the date when\nthat quote was created,",
    "start": "153030",
    "end": "156480"
  },
  {
    "text": "and it has a quote ID",
    "start": "156480",
    "end": "158640"
  },
  {
    "text": "to ensure that in case we\nhave a very active users",
    "start": "158640",
    "end": "162660"
  },
  {
    "text": "that produces several quotes\nper second, we don't get...",
    "start": "162660",
    "end": "166140"
  },
  {
    "text": "We ensure that this partition key,",
    "start": "166140",
    "end": "168900"
  },
  {
    "text": "this primary key, it's unique.",
    "start": "168900",
    "end": "170463"
  },
  {
    "text": "You can see that I also created one GSI",
    "start": "171450",
    "end": "174599"
  },
  {
    "text": "called with the organization",
    "start": "174600",
    "end": "176280"
  },
  {
    "text": "or the partition keys organization,",
    "start": "176280",
    "end": "178080"
  },
  {
    "text": "and the sort key is the user\nID that created that quote,",
    "start": "178080",
    "end": "183080"
  },
  {
    "text": "the date of the quote,",
    "start": "183600",
    "end": "185607"
  },
  {
    "text": "and the quote ID for the\nsame reasons as before.",
    "start": "185607",
    "end": "188523"
  },
  {
    "text": "You can say I could get all\nthe quotes from the user",
    "start": "189360",
    "end": "193500"
  },
  {
    "text": "that belong to the bravo organization",
    "start": "193500",
    "end": "196500"
  },
  {
    "text": "by using this global secondary index.",
    "start": "196500",
    "end": "199050"
  },
  {
    "text": "All the other information is just metadata",
    "start": "199050",
    "end": "201420"
  },
  {
    "text": "that I'm not really going\nto use in this example.",
    "start": "201420",
    "end": "204150"
  },
  {
    "text": "What I would like to show you",
    "start": "204150",
    "end": "205860"
  },
  {
    "text": "is what information I\ncan get from the index.",
    "start": "205860",
    "end": "209973"
  },
  {
    "text": "With my global secondary index,",
    "start": "211440",
    "end": "213180"
  },
  {
    "text": "let me just grab information\nfrom bravo organization,",
    "start": "213180",
    "end": "216782"
  },
  {
    "text": "so let's select the migration-index\ninto a query operation",
    "start": "217890",
    "end": "221940"
  },
  {
    "text": "where the partition key\nis organization bravo.",
    "start": "221940",
    "end": "224673"
  },
  {
    "text": "So I'm going to get where\nthe sort key begins with user",
    "start": "225600",
    "end": "230287"
  },
  {
    "text": "and then I put the user ID.",
    "start": "231990",
    "end": "233820"
  },
  {
    "text": "If I run this query,",
    "start": "233820",
    "end": "235080"
  },
  {
    "text": "I'm going to get some information\nabout that specific user.",
    "start": "235080",
    "end": "237780"
  },
  {
    "text": "You will see that this user ID,",
    "start": "237780",
    "end": "239643"
  },
  {
    "text": "all the information, it\nis about the same user ID,",
    "start": "240870",
    "end": "243370"
  },
  {
    "text": "which I have right here.",
    "start": "244680",
    "end": "246122"
  },
  {
    "text": "Now, what's the situation\nthat I might be facing?",
    "start": "247200",
    "end": "251129"
  },
  {
    "text": "What I want to do is to migrate\nall the messages from these,",
    "start": "251130",
    "end": "256130"
  },
  {
    "text": "from the users, from\nthe bravo organization.",
    "start": "256530",
    "end": "259743"
  },
  {
    "text": "Yeah, pretty simple.",
    "start": "261540",
    "end": "262800"
  },
  {
    "text": "Since I have the GSI,",
    "start": "262800",
    "end": "264629"
  },
  {
    "text": "I can just do a query operation,",
    "start": "264630",
    "end": "266910"
  },
  {
    "text": "grab the users as you're seeing right now",
    "start": "266910",
    "end": "269790"
  },
  {
    "text": "from the bravo organization,",
    "start": "269790",
    "end": "271620"
  },
  {
    "text": "and then write them into the\nnew DynamoDB table, right?",
    "start": "271620",
    "end": "276360"
  },
  {
    "text": "Seems pretty straightforward.",
    "start": "276360",
    "end": "277810"
  },
  {
    "text": "This table has a lot\nof records from memory.",
    "start": "279510",
    "end": "283770"
  },
  {
    "text": "I think this user specifically\nhas about 4 million,",
    "start": "283770",
    "end": "287427"
  },
  {
    "text": "4 1/2 million quotes,",
    "start": "287427",
    "end": "288903"
  },
  {
    "text": "so it has a lot of data that\nis pretty well-distributed.",
    "start": "289830",
    "end": "292650"
  },
  {
    "text": "You're seeing that the partition key",
    "start": "292650",
    "end": "293637"
  },
  {
    "text": "and the sort key of the index,",
    "start": "293637",
    "end": "296490"
  },
  {
    "text": "it is a very high cardinal number.",
    "start": "296490",
    "end": "298530"
  },
  {
    "text": "So you might think,",
    "start": "298530",
    "end": "299977"
  },
  {
    "text": "\"I should not have any issue with this,",
    "start": "299977",
    "end": "301830"
  },
  {
    "text": "with running this migration.\"",
    "start": "301830",
    "end": "303297"
  },
  {
    "text": "Let me show what happens",
    "start": "304170",
    "end": "306090"
  },
  {
    "text": "if you approach the migration in this way.",
    "start": "306090",
    "end": "309182"
  },
  {
    "text": "If you go to CloudWatch,",
    "start": "310350",
    "end": "312706"
  },
  {
    "text": "this is an example that I\nrun a couple of days ago",
    "start": "312706",
    "end": "316380"
  },
  {
    "text": "where the logic in my script",
    "start": "316380",
    "end": "318780"
  },
  {
    "text": "was let's grab all the information",
    "start": "318780",
    "end": "321660"
  },
  {
    "text": "from the global secondary\nindex that I just mentioned",
    "start": "321660",
    "end": "324990"
  },
  {
    "text": "from the bravo organization\nand on this specific user.",
    "start": "324990",
    "end": "329520"
  },
  {
    "text": "I reduce the scope for velocity purposes.",
    "start": "329520",
    "end": "333423"
  },
  {
    "text": "And when I try to write back,",
    "start": "334350",
    "end": "338220"
  },
  {
    "text": "I created an EC2 instance\nrunning on a script",
    "start": "338220",
    "end": "341730"
  },
  {
    "text": "using 16 cores,",
    "start": "341730",
    "end": "343740"
  },
  {
    "text": "just writing in parallel batch,",
    "start": "343740",
    "end": "345419"
  },
  {
    "text": "get a batch write item operations",
    "start": "345420",
    "end": "347850"
  },
  {
    "text": "into the new DynamoDB table,",
    "start": "347850",
    "end": "349683"
  },
  {
    "text": "which is this one,",
    "start": "351120",
    "end": "352083"
  },
  {
    "text": "and look what happened.",
    "start": "352980",
    "end": "354393"
  },
  {
    "text": "I was limited all time at\n1,000 writes per second.",
    "start": "355650",
    "end": "359853"
  },
  {
    "text": "During all the migration period,",
    "start": "360870",
    "end": "363300"
  },
  {
    "text": "all the moment that the\nscript was executing,",
    "start": "363300",
    "end": "366180"
  },
  {
    "text": "I couldn't get more than\n1,000 writes per second.",
    "start": "366180",
    "end": "368643"
  },
  {
    "text": "Here is my application code.",
    "start": "369810",
    "end": "371910"
  },
  {
    "text": "It is very straightforward.",
    "start": "371910",
    "end": "373980"
  },
  {
    "text": "You can see that I obtained\nthe maximum number of CPU",
    "start": "373980",
    "end": "378117"
  },
  {
    "text": "from this specific server\nbeing the EC2 instance,",
    "start": "378117",
    "end": "382410"
  },
  {
    "text": "and I initialized them\nin the boto3 client.",
    "start": "382410",
    "end": "385680"
  },
  {
    "text": "Very important to do this,",
    "start": "385680",
    "end": "386940"
  },
  {
    "text": "because if not, they will\nbe limited to 10 clients.",
    "start": "386940",
    "end": "390390"
  },
  {
    "text": "I have the source table, the quotes table,",
    "start": "390390",
    "end": "392580"
  },
  {
    "text": "the destination table.",
    "start": "392580",
    "end": "394050"
  },
  {
    "text": "I have my organization and my user ID.",
    "start": "394050",
    "end": "396332"
  },
  {
    "text": "From this expression,",
    "start": "397830",
    "end": "398939"
  },
  {
    "text": "I read information from the organization,",
    "start": "398940",
    "end": "400800"
  },
  {
    "text": "I paginate across all\nthe different results,",
    "start": "400800",
    "end": "403979"
  },
  {
    "text": "and I put the element in a queue.",
    "start": "403980",
    "end": "405633"
  },
  {
    "text": "I have a consumer method",
    "start": "407760",
    "end": "408871"
  },
  {
    "text": "that will put 25 items at\nthe time into the queue,",
    "start": "408871",
    "end": "412530"
  },
  {
    "text": "so I can do a batch write item,",
    "start": "412530",
    "end": "415110"
  },
  {
    "text": "and then I finally do\na processing operation.",
    "start": "415110",
    "end": "418770"
  },
  {
    "text": "This processing operation",
    "start": "418770",
    "end": "420090"
  },
  {
    "text": "is going to start a number of\nthreads that I have created.",
    "start": "420090",
    "end": "423783"
  },
  {
    "text": "Send the consumer,",
    "start": "424620",
    "end": "426300"
  },
  {
    "text": "send the data in the\nqueue to the consumer,",
    "start": "426300",
    "end": "431159"
  },
  {
    "text": "and then wait until they finish",
    "start": "431160",
    "end": "433441"
  },
  {
    "text": "and return the time that it consumed.",
    "start": "433441",
    "end": "437820"
  },
  {
    "text": "Finally, the write organization,",
    "start": "437820",
    "end": "439170"
  },
  {
    "text": "I'm doing a batch write item over here,",
    "start": "439170",
    "end": "442230"
  },
  {
    "text": "and I'm getting all the requests",
    "start": "442230",
    "end": "445050"
  },
  {
    "text": "that I received from the queue.",
    "start": "445050",
    "end": "446909"
  },
  {
    "text": "I send them, and in case\nthere are unprocessed items,",
    "start": "446910",
    "end": "449430"
  },
  {
    "text": "I send them back to the queue\nso I can retry them later.",
    "start": "449430",
    "end": "452229"
  },
  {
    "text": "I can see I first initialize the queue.",
    "start": "453450",
    "end": "455493"
  },
  {
    "text": "I do create one thread for the reads,",
    "start": "456870",
    "end": "460827"
  },
  {
    "text": "and I wait until all the reads.",
    "start": "460827",
    "end": "462780"
  },
  {
    "text": "I know that is not the\nmost efficient approach,",
    "start": "462780",
    "end": "464340"
  },
  {
    "text": "but that's the way that I chose to do.",
    "start": "464340",
    "end": "466199"
  },
  {
    "text": "I get all of these 4 1/2 million items,",
    "start": "466200",
    "end": "468813"
  },
  {
    "text": "and once I do that, look at this.",
    "start": "470910",
    "end": "473490"
  },
  {
    "text": "I create...",
    "start": "473490",
    "end": "474323"
  },
  {
    "text": "I first sort the items",
    "start": "474323",
    "end": "476130"
  },
  {
    "text": "and make sure that they're\nsorted in ascending order.",
    "start": "476130",
    "end": "480030"
  },
  {
    "text": "I don't have to do that,\nbut I did in this scenario,",
    "start": "480030",
    "end": "482430"
  },
  {
    "text": "because I know that you're\nalready beginning that way,",
    "start": "482430",
    "end": "484590"
  },
  {
    "text": "and then I invert them\njust to prove my point.",
    "start": "484590",
    "end": "488100"
  },
  {
    "text": "I create three queues:",
    "start": "488100",
    "end": "489540"
  },
  {
    "text": "working_queue, inverted_queue,\nand random_queue.",
    "start": "489540",
    "end": "492090"
  },
  {
    "text": "I put all the items in the working_queue,",
    "start": "492090",
    "end": "494370"
  },
  {
    "text": "and then I put all the\nitems in the inverted_queue",
    "start": "494370",
    "end": "496919"
  },
  {
    "text": "from the inverted_items,",
    "start": "496920",
    "end": "498120"
  },
  {
    "text": "and at the end I add a number of...",
    "start": "499050",
    "end": "500387"
  },
  {
    "text": "I add some NUMs to avoid the...",
    "start": "500387",
    "end": "502850"
  },
  {
    "text": "To seeing all the threads to stop working.",
    "start": "504330",
    "end": "507389"
  },
  {
    "text": "I run that operation.",
    "start": "507390",
    "end": "508980"
  },
  {
    "text": "I first do the read,",
    "start": "508980",
    "end": "510183"
  },
  {
    "text": "then on the normal, on just\nsort of descending order.",
    "start": "512250",
    "end": "517250"
  },
  {
    "text": "Then I do it in ascending\norder, the inverted_queue,",
    "start": "517980",
    "end": "520579"
  },
  {
    "text": "and finally when I do\nthese two, I shuffle.",
    "start": "522360",
    "end": "525390"
  },
  {
    "text": "Look at it, it's very\nsimple, it's no secret sauce.",
    "start": "525390",
    "end": "528390"
  },
  {
    "text": "I do a random shuffle for the items",
    "start": "528390",
    "end": "530517"
  },
  {
    "text": "and I put in the random_queue.",
    "start": "530517",
    "end": "532770"
  },
  {
    "text": "And finally, I write information\nin the Shuffled queue,",
    "start": "532770",
    "end": "536400"
  },
  {
    "text": "they will give me the...",
    "start": "536400",
    "end": "537330"
  },
  {
    "text": "And then I print the results.",
    "start": "537330",
    "end": "539190"
  },
  {
    "text": "These were some of the results that I did",
    "start": "539190",
    "end": "541480"
  },
  {
    "text": "that I run the other day.",
    "start": "543480",
    "end": "544620"
  },
  {
    "text": "Actually, this has 6 1/2 million items,",
    "start": "544620",
    "end": "547332"
  },
  {
    "text": "this query that I did,",
    "start": "547332",
    "end": "549149"
  },
  {
    "text": "and these were the number of seconds",
    "start": "549150",
    "end": "550903"
  },
  {
    "text": "that it took for each one of those.",
    "start": "550903",
    "end": "553530"
  },
  {
    "text": "Now, going back to CloudWatch.",
    "start": "553530",
    "end": "555470"
  },
  {
    "text": "First, it was descending.",
    "start": "556470",
    "end": "558209"
  },
  {
    "text": "The second time was ascending.",
    "start": "558210",
    "end": "560340"
  },
  {
    "text": "In the scenario number three",
    "start": "560340",
    "end": "562080"
  },
  {
    "text": "that I'm going to show you right now,",
    "start": "562080",
    "end": "563930"
  },
  {
    "text": "look how high I was able to\nget the writes from this table.",
    "start": "564930",
    "end": "569013"
  },
  {
    "text": "It moved from 1,000 writes per second",
    "start": "570240",
    "end": "573450"
  },
  {
    "text": "during all the duration of the test",
    "start": "573450",
    "end": "575310"
  },
  {
    "text": "to almost 5,700K,",
    "start": "575310",
    "end": "579960"
  },
  {
    "text": "5,700 write capacity unit",
    "start": "581700",
    "end": "584260"
  },
  {
    "text": "for a short duration of the period.",
    "start": "585240",
    "end": "587520"
  },
  {
    "text": "This shuffle operation allowed\nme to distribute this data",
    "start": "587520",
    "end": "592360"
  },
  {
    "text": "across the entire spectrum.",
    "start": "593400",
    "end": "595110"
  },
  {
    "text": "It was no longer in order,",
    "start": "595110",
    "end": "597300"
  },
  {
    "text": "and I was able to achieve\nhigher throughput.",
    "start": "597300",
    "end": "600363"
  },
  {
    "text": "You might be thinking,\n\"Hmm, I don't believe you.",
    "start": "601410",
    "end": "603959"
  },
  {
    "text": "It seems like there is something\nelse behind the scenes.\"",
    "start": "603960",
    "end": "607080"
  },
  {
    "text": "So that's what I generated,",
    "start": "607080",
    "end": "608490"
  },
  {
    "text": "something that internally\nwe call a heatmap.",
    "start": "608490",
    "end": "610959"
  },
  {
    "text": "Heatmaps will provide\nviews behind the scenes",
    "start": "612600",
    "end": "617279"
  },
  {
    "text": "how the virtual partitions\nin DynamoDB are behaving.",
    "start": "617280",
    "end": "621393"
  },
  {
    "text": "So this is the heatmap.",
    "start": "622770",
    "end": "624390"
  },
  {
    "text": "It starts at 7:00 PM",
    "start": "624390",
    "end": "626170"
  },
  {
    "text": "and it ends at 8:00 PM,",
    "start": "627463",
    "end": "629490"
  },
  {
    "text": "I can only get these files one per hour,",
    "start": "629490",
    "end": "632130"
  },
  {
    "text": "and it contains a test that I run",
    "start": "632130",
    "end": "634410"
  },
  {
    "text": "before the one that I show you,",
    "start": "634410",
    "end": "636629"
  },
  {
    "text": "but it tells you for\nthis specific partition,",
    "start": "636630",
    "end": "641220"
  },
  {
    "text": "you can see that the writes per second,",
    "start": "641220",
    "end": "643589"
  },
  {
    "text": "the IOPS was almost in 1,000 all the time.",
    "start": "643590",
    "end": "647490"
  },
  {
    "text": "And when it tried to write\ninto this virtual partition,",
    "start": "647490",
    "end": "649891"
  },
  {
    "text": "then it moved to the next one.",
    "start": "649891",
    "end": "651543"
  },
  {
    "text": "It tried to write all the elements",
    "start": "652530",
    "end": "654060"
  },
  {
    "text": "from the virtual partition",
    "start": "654060",
    "end": "655170"
  },
  {
    "text": "and it continued to move.",
    "start": "655170",
    "end": "656940"
  },
  {
    "text": "Hence, the rolling hot key\nhere is you're moving your...",
    "start": "656940",
    "end": "660270"
  },
  {
    "text": "Your hot partition is moving\nfrom partition to partition.",
    "start": "660270",
    "end": "663393"
  },
  {
    "text": "When I inverted the order,",
    "start": "664350",
    "end": "666209"
  },
  {
    "text": "what I got the result was similar,",
    "start": "666210",
    "end": "668520"
  },
  {
    "text": "only that the partitions were\nhit in a different order.",
    "start": "668520",
    "end": "673520"
  },
  {
    "text": "Heatmaps are very useful",
    "start": "673560",
    "end": "674400"
  },
  {
    "text": "to see how well-distributed\nis your traffic,",
    "start": "674400",
    "end": "677400"
  },
  {
    "text": "so this one was from seven to eight.",
    "start": "677400",
    "end": "679800"
  },
  {
    "text": "Let me just open the one at eight.",
    "start": "679800",
    "end": "682053"
  },
  {
    "text": "And now look at this.",
    "start": "684960",
    "end": "686940"
  },
  {
    "text": "This is also the second\nportion of the load test.",
    "start": "686940",
    "end": "691080"
  },
  {
    "text": "You can see that it's still\nhot, the rolling hot partition,",
    "start": "691080",
    "end": "694830"
  },
  {
    "text": "it was not as trivial before",
    "start": "694830",
    "end": "696240"
  },
  {
    "text": "that you can see actually\nthe diagonal on the heatmap.",
    "start": "696240",
    "end": "699240"
  },
  {
    "text": "But the symptoms are the same.",
    "start": "699240",
    "end": "700893"
  },
  {
    "text": "But here, what happened,",
    "start": "702270",
    "end": "704250"
  },
  {
    "text": "when I shuffled the records\nbefore sending the information",
    "start": "704250",
    "end": "708780"
  },
  {
    "text": "back to the new DynamoDB table,",
    "start": "708780",
    "end": "710940"
  },
  {
    "text": "I distributed my data.",
    "start": "710940",
    "end": "714330"
  },
  {
    "text": "DynamoDB likes to write data\nacross the entire spectrum.",
    "start": "714330",
    "end": "719330"
  },
  {
    "text": "Don't focus just one virtual partition.",
    "start": "719520",
    "end": "721860"
  },
  {
    "text": "And by just randomizing the item",
    "start": "721860",
    "end": "723810"
  },
  {
    "text": "that you had from your query,",
    "start": "723810",
    "end": "726480"
  },
  {
    "text": "I was able to take advantage\nof this one two, three, four...",
    "start": "726480",
    "end": "730260"
  },
  {
    "text": "For the five different\nvirtual individual partitions",
    "start": "730260",
    "end": "732270"
  },
  {
    "text": "that I had.",
    "start": "732270",
    "end": "733680"
  },
  {
    "text": "So I consume higher throughput in total",
    "start": "733680",
    "end": "737490"
  },
  {
    "text": "because each one of\nthese was consuming 400,",
    "start": "737490",
    "end": "740610"
  },
  {
    "text": "but I was consuming 400\nfor each virtual partition.",
    "start": "740610",
    "end": "743613"
  },
  {
    "text": "This is what we like to see in heatmaps.",
    "start": "745080",
    "end": "747420"
  },
  {
    "text": "We like to see that your\ntraffic is very well-distributed",
    "start": "747420",
    "end": "750720"
  },
  {
    "text": "and it is not just focused",
    "start": "750720",
    "end": "752129"
  },
  {
    "text": "in one single virtual\npartition at any time.",
    "start": "752130",
    "end": "755253"
  },
  {
    "text": "Try to avoid these kind\nof spikes in traffic,",
    "start": "756420",
    "end": "760980"
  },
  {
    "text": "especially on this migration,\nbecause you are in control.",
    "start": "760980",
    "end": "763665"
  },
  {
    "text": "If this kind of situation is\nbecause of organic traffic,",
    "start": "763666",
    "end": "767460"
  },
  {
    "text": "that's a different thing too.",
    "start": "767460",
    "end": "768990"
  },
  {
    "text": "There are different ways to handle that.",
    "start": "768990",
    "end": "770990"
  },
  {
    "text": "But when you're in control of\nthe writes, as you should be,",
    "start": "772290",
    "end": "775240"
  },
  {
    "text": "this kind of graphs is what\nI like, we would like to see.",
    "start": "776250",
    "end": "780060"
  },
  {
    "text": "All the information distributed\nacross the entire partitions",
    "start": "780060",
    "end": "784290"
  },
  {
    "text": "across the entire duration of the writes.",
    "start": "784290",
    "end": "786690"
  },
  {
    "text": "You can see that it is\nstarted at a 8:25:20",
    "start": "786690",
    "end": "791520"
  },
  {
    "text": "and it ended up at 8:43",
    "start": "791520",
    "end": "794070"
  },
  {
    "text": "and if you go back to CloudWatch,",
    "start": "794070",
    "end": "795630"
  },
  {
    "text": "you can see 8:24 to 8:44.",
    "start": "795630",
    "end": "800460"
  },
  {
    "text": "(indistinct) pretty much.",
    "start": "801739",
    "end": "803310"
  },
  {
    "text": "So here you have it.",
    "start": "803310",
    "end": "805770"
  },
  {
    "text": "Here is how you can see",
    "start": "805770",
    "end": "807400"
  },
  {
    "text": "the situation of the rolling hot key.",
    "start": "811170",
    "end": "813570"
  },
  {
    "text": "Below, you can see the\nthrottle that we had.",
    "start": "813570",
    "end": "817770"
  },
  {
    "text": "They are not synchronized.",
    "start": "817770",
    "end": "819540"
  },
  {
    "text": "You can see that when\nit starts at 7:20 PM,",
    "start": "819540",
    "end": "823230"
  },
  {
    "text": "7:25, it's like with this load test,",
    "start": "823230",
    "end": "826470"
  },
  {
    "text": "and then it keeps\nthrottling until 7:50 PM,",
    "start": "826470",
    "end": "830970"
  },
  {
    "text": "which is over here.",
    "start": "830970",
    "end": "832019"
  },
  {
    "text": "Remember this time, our GTM,",
    "start": "832020",
    "end": "833550"
  },
  {
    "text": "and it starts again\nwith the inverted test.",
    "start": "833550",
    "end": "836850"
  },
  {
    "text": "But finally, at 8:24, there\nare no more throttles,",
    "start": "836850",
    "end": "841850"
  },
  {
    "text": "so we were able to fully\nuse the power of DynamoDB.",
    "start": "842430",
    "end": "846810"
  },
  {
    "text": "So the invitation that I\nhave for you over here,",
    "start": "846810",
    "end": "848910"
  },
  {
    "text": "it is to always distribute your traffic",
    "start": "848910",
    "end": "851730"
  },
  {
    "text": "across the different\nindividual partitions.",
    "start": "851730",
    "end": "854160"
  },
  {
    "text": "DynamoDB will allow you\nto write a lot of traffic,",
    "start": "854160",
    "end": "857250"
  },
  {
    "text": "a lot of throughput",
    "start": "857250",
    "end": "858300"
  },
  {
    "text": "as long as you write the application,",
    "start": "858300",
    "end": "861180"
  },
  {
    "text": "distribute your traffic\nacross the entire spectrum,",
    "start": "861180",
    "end": "864140"
  },
  {
    "text": "meaning across all the virtual partitions.",
    "start": "864140",
    "end": "867540"
  },
  {
    "text": "I hope that this video is useful",
    "start": "867540",
    "end": "869339"
  },
  {
    "text": "and it might help you in future migrations",
    "start": "869340",
    "end": "871740"
  },
  {
    "text": "by just simply shuffling your elements.",
    "start": "871740",
    "end": "874830"
  },
  {
    "text": "You can avoid this kind of\nsituation that the hot key,",
    "start": "874830",
    "end": "877770"
  },
  {
    "text": "the hot key situation\nor the rolling hot key.",
    "start": "877770",
    "end": "880560"
  },
  {
    "text": "Other possibility that you might have.",
    "start": "880560",
    "end": "882460"
  },
  {
    "text": "You can query from your index,",
    "start": "883358",
    "end": "886290"
  },
  {
    "text": "but do it by users.",
    "start": "886290",
    "end": "888540"
  },
  {
    "text": "In our scenario, we\nhad the quotes by date.",
    "start": "888540",
    "end": "891750"
  },
  {
    "text": "So what if I start getting information",
    "start": "891750",
    "end": "894120"
  },
  {
    "text": "from different users day by day?",
    "start": "894120",
    "end": "895800"
  },
  {
    "text": "That's a different possibility,\nand it's also valid.",
    "start": "895800",
    "end": "898399"
  },
  {
    "text": "The choice is yours.",
    "start": "899340",
    "end": "901050"
  },
  {
    "text": "The idea is not to read all the data",
    "start": "901050",
    "end": "903959"
  },
  {
    "text": "from the original DynamoDB table",
    "start": "903960",
    "end": "905760"
  },
  {
    "text": "and that write it blindly\ninto the new DynamoDB table",
    "start": "905760",
    "end": "909150"
  },
  {
    "text": "because that will cause the\nrolling hot key situation.",
    "start": "909150",
    "end": "913260"
  },
  {
    "text": "Shuffle that data and you\nwill have higher throughput.",
    "start": "913260",
    "end": "917430"
  },
  {
    "text": "Thank you for listening,\nmy name is Esteban Serna,",
    "start": "917430",
    "end": "919529"
  },
  {
    "text": "I am a Senior DynamoDB Specialist,",
    "start": "919530",
    "end": "921750"
  },
  {
    "text": "and see you in the next video.",
    "start": "921750",
    "end": "923610"
  },
  {
    "text": "Thank you.",
    "start": "923610",
    "end": "924443"
  }
]