[
  {
    "start": "0",
    "end": "310000"
  },
  {
    "text": "hi twitch and welcome back back here today changing it up a little bit so we",
    "start": "1820",
    "end": "7859"
  },
  {
    "text": "just spoke with Amazon UK s team we're now here to talk with the Amazon Neptune team I have Brad here principal product",
    "start": "7859",
    "end": "15570"
  },
  {
    "text": "manager for Amazon Neptune Brad thank you so much for joining me today yeah great to be here have you really",
    "start": "15570",
    "end": "21150"
  },
  {
    "text": "appreciate it so you guys launched last week and generally available here today",
    "start": "21150",
    "end": "26189"
  },
  {
    "text": "with some live demo and question-asking action I'm super excited can you tell us",
    "start": "26189",
    "end": "33270"
  },
  {
    "text": "a little bit about what you launched last week yeah so we launched the general availability of Amazon Neptune",
    "start": "33270",
    "end": "39270"
  },
  {
    "text": "Amazon Neptune is a fast fully managed graph database service that supports",
    "start": "39270",
    "end": "44820"
  },
  {
    "text": "both property graph with the apache tinker pop and the gremlin language for imperative traversals and then it also",
    "start": "44820",
    "end": "50250"
  },
  {
    "text": "supports the w3c standards of rdf and sparkle 1:1 so for those of us that are",
    "start": "50250",
    "end": "55800"
  },
  {
    "text": "less familiar with graph databases can you give us a little bit of an overview on what a graph databases yeah so graphs",
    "start": "55800",
    "end": "62520"
  },
  {
    "text": "turned out to be a really important data structure and so we really think about it in terms of connected data so what we",
    "start": "62520",
    "end": "68970"
  },
  {
    "text": "saw was that people needed to process highly connected data and this is characterized by data that is changing",
    "start": "68970",
    "end": "76320"
  },
  {
    "text": "very quickly it's heterogeneous in terms of the data types and the attributes but really most importantly the value in applications",
    "start": "76320",
    "end": "83400"
  },
  {
    "text": "over it is in the relationship so if you think social networking or recommendation engines or knowledge",
    "start": "83400",
    "end": "88500"
  },
  {
    "text": "graphs so those are kind of graph application spaces and so Neptune is really optimized to efficiently process",
    "start": "88500",
    "end": "95670"
  },
  {
    "text": "graph traversals and graph queries so what are some reasons that customers",
    "start": "95670",
    "end": "101250"
  },
  {
    "text": "might be using a graph database or something like Neptune well we really are focusing on there's a six major",
    "start": "101250",
    "end": "107610"
  },
  {
    "text": "graph use cases there's a number of other ones but the six that we're primarily targeting for the initial",
    "start": "107610",
    "end": "112740"
  },
  {
    "text": "Neptune launch our social networks and I think everyone generally has a good sense of social networks recommendations",
    "start": "112740",
    "end": "118979"
  },
  {
    "text": "so product recommendations we ran a preview for a Neptune which was announced that last year's reinvent conference which was really you know",
    "start": "118979",
    "end": "125700"
  },
  {
    "text": "very popular and we were quite impressed by the breadth of customer use cases that they tried out so people did things",
    "start": "125700",
    "end": "132000"
  },
  {
    "text": "like in-game recommend so how can I present offers to customers to help them in game to make changes so",
    "start": "132000",
    "end": "138370"
  },
  {
    "text": "recommendations knowledge graphs this is a technique where people use a graph model to represent information and they",
    "start": "138370",
    "end": "144909"
  },
  {
    "text": "use it to drive information retrieval so we had customers like Siemens using knowledge graphs to help with industrial",
    "start": "144909",
    "end": "151510"
  },
  {
    "text": "applications fraud is classic graph use case and then Life Sciences and network topologies really so I think some time",
    "start": "151510",
    "end": "158709"
  },
  {
    "text": "it's a little bit more personal for me on this one is that craft databases are historically not super easy to work with",
    "start": "158709",
    "end": "166989"
  },
  {
    "text": "what are some ways that with with Neptune we've been able to kind of make that a little bit easier for you to get",
    "start": "166989",
    "end": "173290"
  },
  {
    "text": "the benefits of a graph database so being able to make connections between lots of different pieces of information but make it a little bit easier to run",
    "start": "173290",
    "end": "179829"
  },
  {
    "text": "operationally yeah I mean it's one of the things that we heard from a lot of customers is that they tried out a graph",
    "start": "179829",
    "end": "185530"
  },
  {
    "text": "database and it had been really successful so they've done a proof-of-concept or a POC and they liked the API as they thought it was easy to",
    "start": "185530",
    "end": "191829"
  },
  {
    "text": "solve their problem but when they scaled it up and they try to put it into production they ran into challenges like",
    "start": "191829",
    "end": "197379"
  },
  {
    "text": "you expressed you know they couldn't get high availability or encryption at rest without doing enterprise licensing those",
    "start": "197379",
    "end": "204400"
  },
  {
    "text": "kinds of things and then the other thing that we saw that really struck us as well is that there's a lot of different options that customers have for both the",
    "start": "204400",
    "end": "211209"
  },
  {
    "text": "property graph model and the resource description framework or the RDF model but there tends to be a really strong",
    "start": "211209",
    "end": "216250"
  },
  {
    "text": "performance bias towards one or the other so if you choose an RDF solution and you're not going to get great property graph performance or vice versa",
    "start": "216250",
    "end": "222699"
  },
  {
    "text": "so that was sort of the context that we built Neptune on and Neptune is designed to for graph use cases that need high",
    "start": "222699",
    "end": "230500"
  },
  {
    "text": "throughput query answering with very low latency and so it's a fully managed service so you don't have to do any of",
    "start": "230500",
    "end": "236620"
  },
  {
    "text": "the operational aspects you can configure high availability at all levels whether you provision the",
    "start": "236620",
    "end": "243909"
  },
  {
    "text": "smallest instance or the largest and the fully managed experience is designed to be very consistent with that that you've",
    "start": "243909",
    "end": "249549"
  },
  {
    "text": "come to expect from instance based database services at AWS so I know that a lot of the common questions that come",
    "start": "249549",
    "end": "256180"
  },
  {
    "text": "up around things like launches or what about things like cloud formation and extra regions and backups and stuff like",
    "start": "256180",
    "end": "261940"
  },
  {
    "text": "that can you talk a little bit about what Neptune shipped with and like because that you mentioned fully man",
    "start": "261940",
    "end": "267370"
  },
  {
    "text": "I think that's a big piece that goes to fully-managed yeah so we're super happy that we launched with CloudFormation",
    "start": "267370",
    "end": "273729"
  },
  {
    "text": "support at GA on day one we launched in four different regions so we launched in",
    "start": "273729",
    "end": "278770"
  },
  {
    "text": "US east Northern Virginia USA East Ohio us West Oregon and EU Ireland and so",
    "start": "278770",
    "end": "284919"
  },
  {
    "text": "we're now available in those regions as you mentioned it is a fully managed instance based database service so you",
    "start": "284919",
    "end": "290530"
  },
  {
    "text": "don't have to worry about patching you can use the console SDKs or API is to",
    "start": "290530",
    "end": "296680"
  },
  {
    "text": "back up you can provision Neptunes that uses a cluster based model so you can choose to provision the architectures",
    "start": "296680",
    "end": "303190"
  },
  {
    "text": "your cluster you can specify the failover order and perform those kinds of operations on it so most exciting",
    "start": "303190",
    "end": "310900"
  },
  {
    "start": "310000",
    "end": "613000"
  },
  {
    "text": "part I believe you have a demo for us so can you show us how it works absolutely let's stop talking and let's take a look",
    "start": "310900",
    "end": "316830"
  },
  {
    "text": "the best part the best answer is stop talking start doing so the first thing I wanted to show everybody was just how",
    "start": "316830",
    "end": "324070"
  },
  {
    "text": "you can start enough tuned instance so if we look over here and I think we're showing our console here yep so what I",
    "start": "324070",
    "end": "331630"
  },
  {
    "text": "can do is I'm just in the console here and I can just start with Neptune and I see it's showing up there and the first",
    "start": "331630",
    "end": "337840"
  },
  {
    "text": "thing I do is I launch a Neptune instance so we talked about Neptune is an instance space database service I can",
    "start": "337840",
    "end": "343870"
  },
  {
    "text": "choose my instance type here I'm going to choose in our for we're supporting the r4 family at launch and to enable",
    "start": "343870",
    "end": "350560"
  },
  {
    "text": "high availability all I have to do is leave this box checked okay and now I",
    "start": "350560",
    "end": "356139"
  },
  {
    "text": "have multi region high availability for my graph database by the way is probably the the most anti-climatic high",
    "start": "356139",
    "end": "364000"
  },
  {
    "text": "availability process that i've ever seen but that's what you want right you you",
    "start": "364000",
    "end": "369010"
  },
  {
    "text": "want high available that you don't have to worry about I'm not complaining it's definitely the most anti-climatic and I",
    "start": "369010",
    "end": "376479"
  },
  {
    "text": "love it so after that we have a couple of different options we can choose which VPC we wanted to play it in we can",
    "start": "376479",
    "end": "383139"
  },
  {
    "text": "choose to put it in an existing security group or have it create a new security group if we want to choose a different",
    "start": "383139",
    "end": "388510"
  },
  {
    "text": "cluster identifier we can do that we have some parameter groups we also support I am based authentication for",
    "start": "388510",
    "end": "395409"
  },
  {
    "text": "access to the endpoints and so when you provision an instance of Neptune you get both a gremlin web",
    "start": "395409",
    "end": "400900"
  },
  {
    "text": "socket server and we're supporting apache tinker pop 332 currently and then you get a rest endpoint that implements",
    "start": "400900",
    "end": "406810"
  },
  {
    "text": "the sparkle one one protocol and so you can choose to have I am authentication on that just by selecting enable had",
    "start": "406810",
    "end": "413860"
  },
  {
    "text": "that and you can then later configure it within your cluster same kinds of things for encryption so if you have a use case",
    "start": "413860",
    "end": "419949"
  },
  {
    "text": "where you want to have the integrity of encryption at rest you can do that using",
    "start": "419949",
    "end": "424979"
  },
  {
    "text": "kms or customer managed keys through with Amazon's key management service and",
    "start": "424979",
    "end": "430330"
  },
  {
    "text": "then again what I talked about failover you can specify the preference the backup maintenance period so all these",
    "start": "430330",
    "end": "436660"
  },
  {
    "text": "kinds of fully managed features are what you can do here through the console and I'm just going to go ahead and do that",
    "start": "436660",
    "end": "442300"
  },
  {
    "text": "and we're gonna go ahead and spin up an instance and we'll come back and take a look at that now you can don't have to",
    "start": "442300",
    "end": "448630"
  },
  {
    "text": "use the console to do this you can also use the COI or SDKs and so the here's",
    "start": "448630",
    "end": "454449"
  },
  {
    "text": "just an example of the documentation for the Neptune class in the Java SDK and",
    "start": "454449",
    "end": "459849"
  },
  {
    "text": "then we're going to be releasing some new documentation for cloud formation",
    "start": "459849",
    "end": "464979"
  },
  {
    "text": "support to help customers use cloud formation sneak peek to be able to provision Neptune instances and so",
    "start": "464979",
    "end": "471190"
  },
  {
    "text": "here's a quick look at what this page looks like and then here's an example of the cloud formation in the designer so",
    "start": "471190",
    "end": "477729"
  },
  {
    "text": "here's the one of the templates that we'll be shipping that you can create a Neptune instance inside of a VPC",
    "start": "477729",
    "end": "482940"
  },
  {
    "text": "provision an ec2 instance and access it within your cluster and then if we want",
    "start": "482940",
    "end": "488380"
  },
  {
    "text": "to take a look at that you know in the designer you know here's what it looks like as well and so those are sort of",
    "start": "488380",
    "end": "494979"
  },
  {
    "text": "how you get to creating an instance which is you know really cool but it's really just the first step of the",
    "start": "494979",
    "end": "501639"
  },
  {
    "text": "journey so what people really want to do is build graph enough already",
    "start": "501639",
    "end": "508479"
  },
  {
    "text": "show me show me the application so you know the first thing is you know how do I get data in there well there's a lot",
    "start": "508479",
    "end": "514209"
  },
  {
    "text": "of different ways so we support a bulk load capability so each Neptune instance has a rest endpoint that you can post",
    "start": "514209",
    "end": "521440"
  },
  {
    "text": "JSON documents where the json documents are specifications for loads and they specify an s3 bucket and then different",
    "start": "521440",
    "end": "528640"
  },
  {
    "text": "types of data so for property graph we support a CSV based serialization and for rdf we support for",
    "start": "528640",
    "end": "534400"
  },
  {
    "text": "for an RDF graph serialization so we support turtle and triple and quads and rdf/xml for",
    "start": "534400",
    "end": "541150"
  },
  {
    "text": "tinker pop or property graph applications there's a really handy open-source guide from someone named",
    "start": "541150",
    "end": "546430"
  },
  {
    "text": "Kelvin Lawrence I was put together a guide to getting started with gremlin and so gremlin is an open source",
    "start": "546430",
    "end": "552370"
  },
  {
    "text": "framework from the Apache tinker pop for property graphs in this case he uses an",
    "start": "552370",
    "end": "557380"
  },
  {
    "text": "airport code example to be able to show you and teach you how to use the language so if you look very simply you",
    "start": "557380",
    "end": "565330"
  },
  {
    "text": "know this this statement G dot V so graph that vertex has label Airport and",
    "start": "565330",
    "end": "570700"
  },
  {
    "text": "show me the values for the code and so if you walk through this and I think the link is in the chat you can see an example of how to do that now he's got",
    "start": "570700",
    "end": "577990"
  },
  {
    "text": "some data that he's made available here for the air routes data so this has airports routes between them flights and",
    "start": "577990",
    "end": "585820"
  },
  {
    "text": "carriers and we've also made available on the AWS labs some tooling to allow",
    "start": "585820",
    "end": "592540"
  },
  {
    "text": "you to convert data from graph ml which is a XML based serialization for graphs",
    "start": "592540",
    "end": "598360"
  },
  {
    "text": "into the CSV format that Neptune supports for property graph and so you",
    "start": "598360",
    "end": "603940"
  },
  {
    "text": "can see here is an example of the github site here's the example of the graph ml",
    "start": "603940",
    "end": "609550"
  },
  {
    "text": "to CSV and so we're gonna actually go take a look at that now so the first thing I've done here and I'll show you a",
    "start": "609550",
    "end": "616270"
  },
  {
    "start": "613000",
    "end": "890000"
  },
  {
    "text": "little bit more in detail but this is my cloud 9 instance so this is my sort of cloud base developer IDE that I'm using",
    "start": "616270",
    "end": "623100"
  },
  {
    "text": "for cloud 9 I really it's it's really super easy to demo for and so I really",
    "start": "623100",
    "end": "628170"
  },
  {
    "text": "found it at a summit about six months ago and I really so so the first thing",
    "start": "628170",
    "end": "635080"
  },
  {
    "text": "I'm going to do is actually just execute a curl command and download that file and then so I've downloaded the the",
    "start": "635080",
    "end": "642130"
  },
  {
    "text": "graph of L file and then I'm going to go through and execute a the script that",
    "start": "642130",
    "end": "649210"
  },
  {
    "text": "the Python script from the github repository and I'm gonna it's going to produce our two different files the",
    "start": "649210",
    "end": "656590"
  },
  {
    "text": "first is a set of all the nodes in CSV format and a set of all the edges and so you can see I've basically taken the",
    "start": "656590",
    "end": "663340"
  },
  {
    "text": "standard serialization from a very popular example now I've got to see viii files I'm ready to put them into my",
    "start": "663340",
    "end": "669640"
  },
  {
    "text": "s3 bucket and launch the Neptune load command so let's go take a look at that",
    "start": "669640",
    "end": "674820"
  },
  {
    "text": "so I'm gonna minimize my console here and I'll show you what the load command",
    "start": "674820",
    "end": "680470"
  },
  {
    "text": "looks like so here you can see a little bit more about cloud 9 so this is an",
    "start": "680470",
    "end": "685510"
  },
  {
    "text": "example of what a load command looks like you can see it's a very straightforward curl expression I'm",
    "start": "685510",
    "end": "691870"
  },
  {
    "text": "basically posting this JSON document it specifies the s3 bucket that I want to",
    "start": "691870",
    "end": "696910"
  },
  {
    "text": "read from now you can choose to specify a single file in which case we'll load just that file or you could specify a",
    "start": "696910",
    "end": "703630"
  },
  {
    "text": "folder endpoint in your bucket and if you specify a folder endpoint we'll load all of the files in that folder and you",
    "start": "703630",
    "end": "709779"
  },
  {
    "text": "can call that endpoint multiple times and we'll load new files for you you",
    "start": "709779",
    "end": "715480"
  },
  {
    "text": "also can specify the format for property graph that's just CSV for RDF graphs you can use the turtle format the region and",
    "start": "715480",
    "end": "722980"
  },
  {
    "text": "then we have some some parameters about how it fit how it works if there's an error or so on and so forth so that's",
    "start": "722980",
    "end": "728320"
  },
  {
    "text": "how you kind of get load data loaded into Neptune but let's look at how you'd access the graph and so the first thing",
    "start": "728320",
    "end": "734589"
  },
  {
    "text": "we're gonna do is i've downloaded apache tinker pops console so they have a Java",
    "start": "734589",
    "end": "739839"
  },
  {
    "text": "based console it's a repla style console I've downloaded the one from the tinker pop site and I've set it up on my server",
    "start": "739839",
    "end": "745510"
  },
  {
    "text": "here and in there there is a file you can see the hierarchy here on the left there's a configuration directory and",
    "start": "745510",
    "end": "752380"
  },
  {
    "text": "they have these yamo files and the llamó files specify different end point WebSocket server configurations that we",
    "start": "752380",
    "end": "758890"
  },
  {
    "text": "can use to connect to and so here I've taken the remote Nimal file that ships",
    "start": "758890",
    "end": "763930"
  },
  {
    "text": "with apache tinker pop and I've just made a couple of small changes I finally",
    "start": "763930",
    "end": "769930"
  },
  {
    "text": "put in a particular host here that we're using to to connect to it and what I'm",
    "start": "769930",
    "end": "777070"
  },
  {
    "text": "going to do now is actually just go ahead and connect to that server so I've started off my gremlin tinker prop",
    "start": "777070",
    "end": "785290"
  },
  {
    "text": "server I'll bring it up here so people can see it and this command is just",
    "start": "785290",
    "end": "791680"
  },
  {
    "text": "basically saying okay I want to go tinker pop console and connect to my",
    "start": "791680",
    "end": "797920"
  },
  {
    "text": "Neptune instance now this is a Neptune instance that I've provisioned and it's my VPC in the same VPC is the ec2",
    "start": "797920",
    "end": "803340"
  },
  {
    "text": "instance for cloud 9 and then I'm gonna say hey console send all of the commands",
    "start": "803340",
    "end": "812040"
  },
  {
    "text": "to the remote server that I just configured and so the first thing I'll do is just do a G dot V and that's gonna",
    "start": "812040",
    "end": "818100"
  },
  {
    "text": "just say hey I've got some data in there well so that's just kind of the mechanism well let's talk about what it",
    "start": "818100",
    "end": "823650"
  },
  {
    "text": "is you might actually want to do and so one of the things that happens pretty",
    "start": "823650",
    "end": "829020"
  },
  {
    "text": "regularly is fraud applications and this is a really basic fraud example and one",
    "start": "829020",
    "end": "834630"
  },
  {
    "text": "of the common things that happens with frauds is their sort of identity rings and these are basically where groups of",
    "start": "834630",
    "end": "841680"
  },
  {
    "text": "individuals are colluding and they're opening multiple accounts with sometimes the same or different financial",
    "start": "841680",
    "end": "847770"
  },
  {
    "text": "institutions and they share a little bit of information then they use the all of these sets of accounts and the collusion",
    "start": "847770",
    "end": "853620"
  },
  {
    "text": "to execute various different kinds of financial fraud insurance fraud so on and so forth so this is a very basic",
    "start": "853620",
    "end": "860370"
  },
  {
    "text": "example of you know for individuals that have several different types of",
    "start": "860370",
    "end": "865530"
  },
  {
    "text": "financial accounts they've got bank accounts credit cards loans so on and then they also have those accounts have",
    "start": "865530",
    "end": "871230"
  },
  {
    "text": "associated with them some identifying information so there's national IDs or social security numbers",
    "start": "871230",
    "end": "877020"
  },
  {
    "text": "there's telephone numbers there's emails so on and so forth so I want to then load this information into my graph",
    "start": "877020",
    "end": "883770"
  },
  {
    "text": "database and I want to write some gremlin traversals to help me find these fraud rings so the goal here by the way",
    "start": "883770",
    "end": "890520"
  },
  {
    "start": "890000",
    "end": "1060000"
  },
  {
    "text": "is that you're using pieces of information that aren't directly connected to make connections so that",
    "start": "890520",
    "end": "895800"
  },
  {
    "text": "I'm not I'm not just saying okay well this person that person is never gonna be directly linked to fraud",
    "start": "895800",
    "end": "901500"
  },
  {
    "text": "so you're basically using a graph database to connect lots of kind of semi connected pieces of data to get to",
    "start": "901500",
    "end": "907589"
  },
  {
    "text": "Traverse one relationship to get to the second one that's right so what these what what this example has done is",
    "start": "907589",
    "end": "913290"
  },
  {
    "text": "people have created these accounts and they they've they've put various different pieces of information but they haven't been perfect right so they",
    "start": "913290",
    "end": "919110"
  },
  {
    "text": "haven't you know they're reusing forms of the address they're reusing forms of the telephone so we're gonna use those",
    "start": "919110",
    "end": "924660"
  },
  {
    "text": "properties to write some graph traversals to help us try and find that so that's actually another example would",
    "start": "924660",
    "end": "930300"
  },
  {
    "text": "be if I'm friends with Brad and Brad's friends I mean then perhaps I might like to be",
    "start": "930300",
    "end": "937980"
  },
  {
    "text": "friends with a meet that's that's right and that that's actually that technique is formally called triadic closure and",
    "start": "937980",
    "end": "943890"
  },
  {
    "text": "basically graphs are the triangles are the smallest fully connected sub graphs and so by finding triangles that you can",
    "start": "943890",
    "end": "950700"
  },
  {
    "text": "complete by adding an edge is a really sort of key kind of recommendation sort",
    "start": "950700",
    "end": "955770"
  },
  {
    "text": "of approach or it's all it's how people get started with those kinds of applications so if you're just joining us on on Twitch and you've been one of",
    "start": "955770",
    "end": "961470"
  },
  {
    "text": "the people saying that you weren't quite sure what a graph database is I just give a really simple example but the",
    "start": "961470",
    "end": "967290"
  },
  {
    "text": "fraud example I think is a step further than that which is how can I use the things that I that I know that aren't",
    "start": "967290",
    "end": "972930"
  },
  {
    "text": "directly connected to find out another piece of information that I can use because I know some of those other",
    "start": "972930",
    "end": "978900"
  },
  {
    "text": "information so it's kind of like safe being a detective honestly like oh there's there's a lot of different but",
    "start": "978900",
    "end": "984810"
  },
  {
    "text": "you really it's any time that you have data where it's it's it's the relationships that matter so if your",
    "start": "984810",
    "end": "989940"
  },
  {
    "text": "application is about finding friends of someone if it's about looking at purchase histories and making",
    "start": "989940",
    "end": "995880"
  },
  {
    "text": "associations through chains of purchase histories if it's about saying making you know knowledge recommendation so",
    "start": "995880",
    "end": "1002530"
  },
  {
    "text": "Amazon Alexa is one of our GA launch customers you know they're using Neptune",
    "start": "1002530",
    "end": "1008360"
  },
  {
    "text": "as part of a set of technologies for building knowledge graphs and so you know fraud we're talking about here life",
    "start": "1008360",
    "end": "1014210"
  },
  {
    "text": "sciences that you know it turns out that lots of things in the life sciences have a natural network representation so",
    "start": "1014210",
    "end": "1019790"
  },
  {
    "text": "things like protein pathways we're gonna look at some disease genome associations here those are all cases where it's",
    "start": "1019790",
    "end": "1025579"
  },
  {
    "text": "really traversing that's the important thing and graph databases are designed specifically to do that right so I've a",
    "start": "1025579",
    "end": "1032900"
  },
  {
    "text": "couple questions from from from twitch I know that we talked about different the",
    "start": "1032900",
    "end": "1038900"
  },
  {
    "text": "the format of data basically and then if I use tinker pop then I could maybe export from one apache tinker pop to",
    "start": "1038900",
    "end": "1045829"
  },
  {
    "text": "another database so how can I eat both move my data how can I move my data into",
    "start": "1045829",
    "end": "1050930"
  },
  {
    "text": "Neptune so how can i migrate from something else and start using Neptune is that possible as long as I'm using the same format is that okay yeah",
    "start": "1050930",
    "end": "1057410"
  },
  {
    "text": "absolutely so we support for property graphs we support the CSV based serialization so what you need to do is",
    "start": "1057410",
    "end": "1063920"
  },
  {
    "start": "1060000",
    "end": "1115000"
  },
  {
    "text": "you either need to export your existing system into graph ml and then you can use that Python tool",
    "start": "1063920",
    "end": "1070169"
  },
  {
    "text": "that we've released on github to convert graph ml into the CSV file so that's one option or for many customers that are",
    "start": "1070169",
    "end": "1077280"
  },
  {
    "text": "either moving from another graph database or sometimes moving from a relational database or other systems they basically write a relatively",
    "start": "1077280",
    "end": "1083250"
  },
  {
    "text": "straightforward ETL job to take they decide what they want their nodes to be and then they export their nodes and the",
    "start": "1083250",
    "end": "1089490"
  },
  {
    "text": "node properties in a single CSV file and then they decide the edges and they export the edges and edge properties",
    "start": "1089490",
    "end": "1095070"
  },
  {
    "text": "into a CSV file and they're able to load that and to make it you know to load it",
    "start": "1095070",
    "end": "1101010"
  },
  {
    "text": "in now for RDF graphs RDF has a standard serialization so many customers will",
    "start": "1101010",
    "end": "1106200"
  },
  {
    "text": "bring us RDF data and we support RDF 1:1 so any data that you can serialize an RDF one one will load into Neptune",
    "start": "1106200",
    "end": "1113580"
  },
  {
    "text": "relatively easily if you're falling along on Twitch by the way some of these examples that brad has mentioned around",
    "start": "1113580",
    "end": "1119220"
  },
  {
    "start": "1115000",
    "end": "1321000"
  },
  {
    "text": "the Python library and the examples on the AWS samples github page links have",
    "start": "1119220",
    "end": "1125970"
  },
  {
    "text": "been posted in the chat so it should be links for you to follow if you want to click on any of these tools that Brad's",
    "start": "1125970",
    "end": "1132659"
  },
  {
    "text": "been talking about cool cool I did I derail the demo by the way but no no",
    "start": "1132659",
    "end": "1138090"
  },
  {
    "text": "that's fine it's important questions so so this is but going back to their fraud doma just so just to catch everybody up",
    "start": "1138090",
    "end": "1144150"
  },
  {
    "text": "so we have a fraud ring we got multiple individuals that they've created multiple accounts and we're trying to find places where they're sharing",
    "start": "1144150",
    "end": "1149640"
  },
  {
    "text": "information and so we can write a gremlin traversal to do that and so here",
    "start": "1149640",
    "end": "1155340"
  },
  {
    "text": "on my screen you'll you're seeing the gremlin traversal to find fraud rings at sort of an arbitrary depth here and what",
    "start": "1155340",
    "end": "1161490"
  },
  {
    "text": "we do is we start with an applicant so if you remember there were people that are applying for accounts and that's where we start and so we're gonna say",
    "start": "1161490",
    "end": "1167460"
  },
  {
    "text": "find all the potential fraud rings for this applicant whose name is terry wilder and what we're going to do is",
    "start": "1167460",
    "end": "1174360"
  },
  {
    "text": "we're gonna start with the applicant we're going to go to the account the credit account and then we're going to",
    "start": "1174360",
    "end": "1179580"
  },
  {
    "text": "find the different characteristics so the attributes associated with that and then we're going to walk back up the",
    "start": "1179580",
    "end": "1185549"
  },
  {
    "text": "graph and find other people that are reachable from there and that's basically the sort of the sort of pseudo",
    "start": "1185549",
    "end": "1191789"
  },
  {
    "text": "algorithm of what we're going to do and we do that by doing this loop in gremlin",
    "start": "1191789",
    "end": "1196909"
  },
  {
    "text": "until the loop is finished and we basically what gets output is a list of candidates that are sharing the",
    "start": "1196909",
    "end": "1204570"
  },
  {
    "text": "same identity information so now I'm going to go ahead and you recall I connected to my gremlin instance so I'm going to go ahead and drop this in and",
    "start": "1204570",
    "end": "1212340"
  },
  {
    "text": "I've run that against Neptune and I can see that in this case there's four five",
    "start": "1212340",
    "end": "1218490"
  },
  {
    "text": "people including Terry and four additional people that share some kind of account information so is it",
    "start": "1218490",
    "end": "1224300"
  },
  {
    "text": "definitive no but it's a good starting point and if you're looking you know if you're imagining a large system where there's lots of different sets of",
    "start": "1224300",
    "end": "1231000"
  },
  {
    "text": "information sets of accounts to sort through this will give you a really good way to quickly traverse and find places",
    "start": "1231000",
    "end": "1236250"
  },
  {
    "text": "that you may want to look in more detail and so we can and we also caught a criminal annex example which is bonus",
    "start": "1236250",
    "end": "1243270"
  },
  {
    "text": "points for that so I have a question from from twitch said how do you handle",
    "start": "1243270",
    "end": "1248400"
  },
  {
    "text": "extremely high load databases with large data sets so how would a failure of",
    "start": "1248400",
    "end": "1255870"
  },
  {
    "text": "master right we handled all so so two-part questions so one is it okay to have extremely large data sets and then",
    "start": "1255870",
    "end": "1261150"
  },
  {
    "text": "to how does a master write failure get him yeah we didn't really talk a lot about the underlying architecture but",
    "start": "1261150",
    "end": "1266640"
  },
  {
    "text": "you know that's really part of what makes Neptune enables the fully managed",
    "start": "1266640",
    "end": "1271740"
  },
  {
    "text": "experience and so Neptune itself is built on top of a distributed cloud native storage layer which is technology",
    "start": "1271740",
    "end": "1278040"
  },
  {
    "text": "that's shared with other instance based database services at AWS and that storage tag that storage layer supports",
    "start": "1278040",
    "end": "1285330"
  },
  {
    "text": "a segment size of up to 64 terabytes and so in our testing that translates into a",
    "start": "1285330",
    "end": "1291000"
  },
  {
    "text": "graph of somewhere between 100 billion and 200 billion nodes edges and properties or triples so you can",
    "start": "1291000",
    "end": "1296790"
  },
  {
    "text": "certainly get to that sort of data scale size and then the underlying architecture is that there's a write",
    "start": "1296790",
    "end": "1301830"
  },
  {
    "text": "master with up to 15 different low latency you read replicas so in the",
    "start": "1301830",
    "end": "1307500"
  },
  {
    "text": "event of a failure of the right master if you've provisioned a read replicas you'll basically you'll have a failover",
    "start": "1307500",
    "end": "1312960"
  },
  {
    "text": "in which case the read replicas will be promoted to the right master and if you",
    "start": "1312960",
    "end": "1318240"
  },
  {
    "text": "don't have a read replicas that one a new one will be created for you I think that's part of high availability as a",
    "start": "1318240",
    "end": "1323520"
  },
  {
    "start": "1321000",
    "end": "1360000"
  },
  {
    "text": "managed service too right is that there's there's always backup options in case something isn't working quite the",
    "start": "1323520",
    "end": "1329790"
  },
  {
    "text": "way that you expected so by saying it's fully managed and high available there's things like replicas",
    "start": "1329790",
    "end": "1335040"
  },
  {
    "text": "that you can failover to and then promote absolutely though you do need to sort of think about your architecture to",
    "start": "1335040",
    "end": "1340560"
  },
  {
    "text": "make sure that you know if your application needs a fast failover make sure that you provision to read replicas because that's going to make it maybe we",
    "start": "1340560",
    "end": "1347010"
  },
  {
    "text": "have to start a new instance for you when there's a failure it's gonna take a little bit longer so you do need to you",
    "start": "1347010",
    "end": "1352110"
  },
  {
    "text": "know there is a shared responsibility concept of thinking about your cluster and that we enable you to build those",
    "start": "1352110",
    "end": "1358380"
  },
  {
    "text": "kinds of configurations so I've seen a couple times from twitch questions around sharding does Neptune require",
    "start": "1358380",
    "end": "1364560"
  },
  {
    "text": "sharding or is that something that I should or need to do with Neptune no so Neptune is really designed so when we",
    "start": "1364560",
    "end": "1371160"
  },
  {
    "text": "talk to customers what they told us is that they really wanted a graph database that could serve these sort of",
    "start": "1371160",
    "end": "1376200"
  },
  {
    "text": "interactive graph queries with and provide high throughput in very low latency query answering and so we sort",
    "start": "1376200",
    "end": "1382320"
  },
  {
    "text": "of architected the Neptune to be able to meet that use case need so we do use a distributed storage layer underneath but",
    "start": "1382320",
    "end": "1389040"
  },
  {
    "text": "you don't have to shard or partition your data you also don't have to create indices over your data so Neptune uses",
    "start": "1389040",
    "end": "1395520"
  },
  {
    "text": "an indexing scheme that auto indexes it for you so you're going to be able to get good graph traversal performance",
    "start": "1395520",
    "end": "1401070"
  },
  {
    "text": "without having to decide you know do I need to index this particular property do I need to index this particular",
    "start": "1401070",
    "end": "1406230"
  },
  {
    "text": "attribute that's it that's all another one of those I guess Amazon book called the undifferentiated heavy lifting but",
    "start": "1406230",
    "end": "1412260"
  },
  {
    "text": "creating indices and maintaining them and then sharding a database is done it's not insignificant it's a pretty big",
    "start": "1412260",
    "end": "1419130"
  },
  {
    "text": "operational project to take on like if you don't start with the shorter database what happens when you have to go back and shard what you already have",
    "start": "1419130",
    "end": "1425430"
  },
  {
    "text": "so not necessary enough to no notice is no sharding that's right now you know I",
    "start": "1425430",
    "end": "1431100"
  },
  {
    "text": "kind the way I think about it is we want to basically reduce that time to graph right we want to make it your your time",
    "start": "1431100",
    "end": "1437310"
  },
  {
    "text": "just starting actually reading a graph application to get that to almost to zero so you know we're not quite there",
    "start": "1437310",
    "end": "1442320"
  },
  {
    "text": "yet but I think we've come a long way in terms of what you know what neptina provides as a fully managed capability I think that should be your nesting to",
    "start": "1442320",
    "end": "1448710"
  },
  {
    "text": "your next sticker for Neptune it's reduced time to graph get it getting to zero for getting the graphs I have",
    "start": "1448710",
    "end": "1456600"
  },
  {
    "start": "1456000",
    "end": "1484000"
  },
  {
    "text": "another question does Neptune support data encryption at rest so obviously if",
    "start": "1456600",
    "end": "1463110"
  },
  {
    "text": "I'm storing a bunch of data and I want to get insights on my stammers how can I make sure that my date is encrypted yeah so you know again",
    "start": "1463110",
    "end": "1469750"
  },
  {
    "text": "it's one of those things that you know we shipped with @ga and so you can choose when you provision",
    "start": "1469750",
    "end": "1475240"
  },
  {
    "text": "an instance you can choose to encrypt it at rest using your own key so you can use a key that you're managing through",
    "start": "1475240",
    "end": "1481990"
  },
  {
    "text": "the Amazon key management service or kms awesome so yes yes to encryption you can use kms",
    "start": "1481990",
    "end": "1488050"
  },
  {
    "start": "1484000",
    "end": "1679000"
  },
  {
    "text": "which is already an AWS to help you to help you handle that and for the people",
    "start": "1488050",
    "end": "1493420"
  },
  {
    "text": "that just asked if if Neptune is GA yes announced last week we're here with Brad",
    "start": "1493420",
    "end": "1499680"
  },
  {
    "text": "were we're demoing we're asking questions we're we're answering questions but J last week available in a",
    "start": "1499680",
    "end": "1506680"
  },
  {
    "text": "couple in a couple of different regions and now it's it's live demo time so yes to GA and for the people asking what is",
    "start": "1506680",
    "end": "1514240"
  },
  {
    "text": "Neptune if you're just joining us Neptune is a managed graph database that we announced in GA last week so do",
    "start": "1514240",
    "end": "1520900"
  },
  {
    "text": "things like traverse relationships to find out new pieces of information that",
    "start": "1520900",
    "end": "1526960"
  },
  {
    "text": "like Brad and I are both committing credit-card fraud and you could find",
    "start": "1526960",
    "end": "1532180"
  },
  {
    "text": "that because we both frequented the same the same place and did the same thing mm-hmm awesome there's links in there",
    "start": "1532180",
    "end": "1538960"
  },
  {
    "text": "there's a blog post out we've posted a couple links to the documentation available and someone just listed the",
    "start": "1538960",
    "end": "1545980"
  },
  {
    "text": "whole region so North Virginia Ohio Oregon and Ireland that's right your moderators on top of their game",
    "start": "1545980",
    "end": "1552460"
  },
  {
    "text": "fantastic they're a great team they're a great team of moderators so I wanted to switch over as well and just show a",
    "start": "1552460",
    "end": "1558640"
  },
  {
    "text": "couple other things for people that you know are interested in more about the property graph gremlin example we have",
    "start": "1558640",
    "end": "1564430"
  },
  {
    "text": "also have a github site on Amazon samples or excuse me AWS samples for it",
    "start": "1564430",
    "end": "1570430"
  },
  {
    "text": "with the Amazon Neptune samples and in particular there's currently a collaborative filtering example so",
    "start": "1570430",
    "end": "1575470"
  },
  {
    "text": "collaborative filtering is a technique that you can use to make recommendations and so this has everything that you",
    "start": "1575470",
    "end": "1581350"
  },
  {
    "text": "really need to get started so it has a image of the data set a small data set how to load the data it also has some",
    "start": "1581350",
    "end": "1590080"
  },
  {
    "text": "sample queries you know there's a sort of a gaming theme here so I would definitely encourage people to take a look at that you know",
    "start": "1590080",
    "end": "1596320"
  },
  {
    "text": "as a way to get started and you know we're really interested in seeing what you guys do with it so if people if",
    "start": "1596320",
    "end": "1601509"
  },
  {
    "text": "there are people out there who try something out and do something cool I mean we've had customers in the preview",
    "start": "1601509",
    "end": "1606630"
  },
  {
    "text": "model global tax compliance see as a graph to you know to hell it's pretty cool yeah it's it's kind of a nifty",
    "start": "1606630",
    "end": "1612490"
  },
  {
    "text": "applicant in fact the number of tax graph applications really is surprising me but it's also you know you also see",
    "start": "1612490",
    "end": "1617769"
  },
  {
    "text": "fraud you also see recommendations social but you know what customers do with graph is really really very",
    "start": "1617769",
    "end": "1623529"
  },
  {
    "text": "interesting I think it's incredibly powerful cuz like think about like think about something like like book recommendations",
    "start": "1623529",
    "end": "1630070"
  },
  {
    "text": "and how like something like that I liked a couple other books and Brad liked this",
    "start": "1630070",
    "end": "1635649"
  },
  {
    "text": "book and he likes the same book that I do sometimes then maybe you recommend me a third book",
    "start": "1635649",
    "end": "1640870"
  },
  {
    "text": "and the things that you can do with it are everything from like catching fraud to like looking at genomes to like recommending all the crappy books that I",
    "start": "1640870",
    "end": "1647799"
  },
  {
    "text": "buy to read on planes like it's really incredibly powerful it is it is and its really part of a so you know it's it's",
    "start": "1647799",
    "end": "1653769"
  },
  {
    "text": "that part of it it's a specialized purpose-built database that's designed for the relationships and so you know I",
    "start": "1653769",
    "end": "1659320"
  },
  {
    "text": "think one of the things that we're seeing is customers wanting to build applications that span multiple different kinds of databases and you",
    "start": "1659320",
    "end": "1665500"
  },
  {
    "text": "know Neptune is really kind of a great fit for those pieces where you need to do those kinds of traversals the recommendations network topologies that",
    "start": "1665500",
    "end": "1673419"
  },
  {
    "text": "work defense all of these applications really have some just really nice and strong graph components Dawson and the",
    "start": "1673419",
    "end": "1679720"
  },
  {
    "start": "1679000",
    "end": "1873000"
  },
  {
    "text": "link by the way to the Neptune samples that Brad just mentioned is already in twitch chat so if you're following along",
    "start": "1679720",
    "end": "1684909"
  },
  {
    "text": "with us you can see everything that he's doing on his screen is that that at that link fantastic classic and so the last",
    "start": "1684909",
    "end": "1691360"
  },
  {
    "text": "thing I really want to show before we kind of go through it more questions is we also support the RDF Sparkle datasets",
    "start": "1691360",
    "end": "1696940"
  },
  {
    "text": "and so you know customers often ask you know you know should I use property graph or should I use RDF and you know",
    "start": "1696940",
    "end": "1702940"
  },
  {
    "text": "you can do almost any application with either model what we find is that customers that are coming from a sort of",
    "start": "1702940",
    "end": "1709659"
  },
  {
    "text": "property graph or scuse me a relational database background often find property graph sort of a more natural traversal",
    "start": "1709659",
    "end": "1715299"
  },
  {
    "text": "so if they're thinking about tables and rows structures thinking about nodes and nodes properties or edges of the edge",
    "start": "1715299",
    "end": "1721149"
  },
  {
    "text": "properties is really natural fit for them and then customers that you know want to reuse datasets that are publicly",
    "start": "1721149",
    "end": "1727419"
  },
  {
    "text": "available like deep pedia or wiki data or information that's",
    "start": "1727419",
    "end": "1732540"
  },
  {
    "text": "published by the National Health Organization's RDF provides its standard data serialization so they can benefit",
    "start": "1732540",
    "end": "1738960"
  },
  {
    "text": "from taking advantage of those kinds of datasets and so this is an RDF example and what I have here much like my other",
    "start": "1738960",
    "end": "1745530"
  },
  {
    "text": "example with gremlin I'll make that a little bit bigger is that we have provisioned in Neptune instance again is",
    "start": "1745530",
    "end": "1752280"
  },
  {
    "text": "sitting in my V PC and I'm using that sparkle 1:1 protocol endpoint this is",
    "start": "1752280",
    "end": "1757500"
  },
  {
    "text": "the RDF forge a workbench this is an Eclipse license to open-source workbench that you can use to connect to any",
    "start": "1757500",
    "end": "1763430"
  },
  {
    "text": "sparkle and sparkle 1:1 endpoints and not just Neptune but others and I've loaded a data set that has disease",
    "start": "1763430",
    "end": "1770310"
  },
  {
    "text": "genome Association so this is published by one of the u.s. national health organizations and it's a catalog of",
    "start": "1770310",
    "end": "1776880"
  },
  {
    "text": "research about diseases and what genomes they've been associated with through research and I'm going to ask a sparkle",
    "start": "1776880",
    "end": "1783900"
  },
  {
    "text": "query so this is a declarative graph query and what I'm going to ask for is I want to find out about Alzheimer's",
    "start": "1783900",
    "end": "1790380"
  },
  {
    "text": "disease and I want to find out all of the genes that are associated with",
    "start": "1790380",
    "end": "1795840"
  },
  {
    "text": "Alzheimer's that have this score of greater than 0.29 so sparkle expresses",
    "start": "1795840",
    "end": "1802740"
  },
  {
    "text": "graph queries is a triple pattern so subject to predicate an object and so these are all representing different",
    "start": "1802740",
    "end": "1807930"
  },
  {
    "text": "triple patterns so this question mark here shows you is a shared variable so",
    "start": "1807930",
    "end": "1813090"
  },
  {
    "text": "basically find me a disease that's called Alzheimer's and then I'm going to reuse that variable in another tripping",
    "start": "1813090",
    "end": "1818640"
  },
  {
    "text": "pattern that's how I effectively do this joint operation that we talked about in the traversal I'm gonna pull back the",
    "start": "1818640",
    "end": "1823740"
  },
  {
    "text": "genes I'm also going to grab this score attribute and I'm gonna exit apply a",
    "start": "1823740",
    "end": "1828750"
  },
  {
    "text": "filter on the bottom and then just do it order by so if you how familiar with",
    "start": "1828750",
    "end": "1834060"
  },
  {
    "text": "sequel sparkle will look somewhat similar although there's some some important differences and then I'm just going to go ahead and execute that and I",
    "start": "1834060",
    "end": "1840600"
  },
  {
    "text": "can see here the six different genes that are associated you know with",
    "start": "1840600",
    "end": "1846230"
  },
  {
    "text": "Alzheimer's disease in this data set and I can choose if I want to go browse and",
    "start": "1846230",
    "end": "1851880"
  },
  {
    "text": "I can see more information about that so that's a quick example of you know looking at from the sparkle side and so",
    "start": "1851880",
    "end": "1857550"
  },
  {
    "text": "you know we have customers in preview doing both RDF and sparkle and property many organizations have used cases for",
    "start": "1857550",
    "end": "1864570"
  },
  {
    "text": "both and so we're really happy as a product that we're able to provide a first-class sort of optimized query",
    "start": "1864570",
    "end": "1870149"
  },
  {
    "text": "execution experience with full stacks so lots of stuff kind of coming out of the gate right so things like backups and",
    "start": "1870149",
    "end": "1876899"
  },
  {
    "start": "1873000",
    "end": "1953000"
  },
  {
    "text": "cloud formation a couple of different regions can access your data and the way that that works for you whether it's with a workbench or through another tool",
    "start": "1876899",
    "end": "1883590"
  },
  {
    "text": "that's right right out of the gate we have four to the four different regions that we talked about we have console we",
    "start": "1883590",
    "end": "1889380"
  },
  {
    "text": "have CLI we have SDK across all the language bindings we have cloud formation support and so really Neptune",
    "start": "1889380",
    "end": "1896610"
  },
  {
    "text": "is really ready for you to start using to build graph applications with that's awesome ok",
    "start": "1896610",
    "end": "1902490"
  },
  {
    "text": "well Brad it's been really great today thank you for for demoing Neptune for us if you've been following along in twitch",
    "start": "1902490",
    "end": "1908519"
  },
  {
    "text": "chat and check out some of those links so the samples and the github page and the the documentation page and there's a",
    "start": "1908519",
    "end": "1914250"
  },
  {
    "text": "there's a what's new there's a what's new blog post so tons of options out",
    "start": "1914250",
    "end": "1919559"
  },
  {
    "text": "there learn a little bit give it a try thanks to Brad and then keep if you have",
    "start": "1919559",
    "end": "1924960"
  },
  {
    "text": "questions keep passing them on through twitch chat i think the moderators will hang out for a couple minutes and answer",
    "start": "1924960",
    "end": "1930210"
  },
  {
    "text": "the rest of your questions so thank you for joining us today it's been an exciting day of live stream launch",
    "start": "1930210",
    "end": "1937679"
  },
  {
    "text": "announcements and we will see you another time very soon on twitch TV sasch AWS if you missed this broadcast",
    "start": "1937679",
    "end": "1945510"
  },
  {
    "text": "you can catch the video on the AWS twitch page thanks everybody thank you",
    "start": "1945510",
    "end": "1952760"
  }
]