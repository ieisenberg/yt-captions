[
  {
    "start": "0",
    "end": "15000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "2360"
  },
  {
    "text": "hi everybody I'm Slaton Janie I'm a",
    "start": "2360",
    "end": "5279"
  },
  {
    "text": "senior Solutions Architect for Amazon",
    "start": "5279",
    "end": "6870"
  },
  {
    "text": "Web Services in this video I'm going to",
    "start": "6870",
    "end": "8849"
  },
  {
    "text": "show you how to build dotnet",
    "start": "8849",
    "end": "10590"
  },
  {
    "text": "applications using Amazon recognition",
    "start": "10590",
    "end": "12360"
  },
  {
    "text": "let's get to it here in Amazon we have a",
    "start": "12360",
    "end": "15990"
  },
  {
    "start": "15000",
    "end": "103000"
  },
  {
    "text": "very long heritage with machine learning",
    "start": "15990",
    "end": "18529"
  },
  {
    "text": "starting off with our amazon.com",
    "start": "18529",
    "end": "20880"
  },
  {
    "text": "personalized recommendations as well as",
    "start": "20880",
    "end": "24269"
  },
  {
    "text": "our fulfillment automation and inventory",
    "start": "24269",
    "end": "26640"
  },
  {
    "text": "management in our fulfillment centers if",
    "start": "26640",
    "end": "29580"
  },
  {
    "text": "you actually take a look at those",
    "start": "29580",
    "end": "30630"
  },
  {
    "text": "awesome videos you'll see our robots",
    "start": "30630",
    "end": "33690"
  },
  {
    "text": "going around and in a adjusting and",
    "start": "33690",
    "end": "37110"
  },
  {
    "text": "delivering and stacking all these",
    "start": "37110",
    "end": "40370"
  },
  {
    "text": "different packages in our performance",
    "start": "40370",
    "end": "43469"
  },
  {
    "text": "centers using our machine learning",
    "start": "43469",
    "end": "46170"
  },
  {
    "text": "models to do so of course there's drones",
    "start": "46170",
    "end": "48660"
  },
  {
    "text": "and Amazon Prime air with our drone",
    "start": "48660",
    "end": "51210"
  },
  {
    "text": "delivery system using just as well using",
    "start": "51210",
    "end": "54360"
  },
  {
    "text": "machine learning and then there's Amazon",
    "start": "54360",
    "end": "57539"
  },
  {
    "text": "Alexa not only used for full home",
    "start": "57539",
    "end": "61020"
  },
  {
    "text": "automation for kids actually using it",
    "start": "61020",
    "end": "65869"
  },
  {
    "text": "everything from learning to building out",
    "start": "65869",
    "end": "70250"
  },
  {
    "text": "BOTS and indifferent artificial",
    "start": "70250",
    "end": "73470"
  },
  {
    "text": "intelligence skills for Alexa and then",
    "start": "73470",
    "end": "77700"
  },
  {
    "text": "this of course Amazon go our brand new",
    "start": "77700",
    "end": "81240"
  },
  {
    "text": "grocery shop customer experience that is",
    "start": "81240",
    "end": "85400"
  },
  {
    "text": "completely without any people in it you",
    "start": "85400",
    "end": "88140"
  },
  {
    "text": "just go in you take what you want you",
    "start": "88140",
    "end": "90810"
  },
  {
    "text": "take it out and we charge you for it and",
    "start": "90810",
    "end": "93450"
  },
  {
    "text": "the whole thing of course we're using",
    "start": "93450",
    "end": "95100"
  },
  {
    "text": "Amazon machine learning models to",
    "start": "95100",
    "end": "98090"
  },
  {
    "text": "continuously monitor and ensure that",
    "start": "98090",
    "end": "100799"
  },
  {
    "text": "everything is as it should be so if you",
    "start": "100799",
    "end": "103950"
  },
  {
    "start": "103000",
    "end": "195000"
  },
  {
    "text": "look at our machine learning stack we",
    "start": "103950",
    "end": "106770"
  },
  {
    "text": "have services like recognition the one",
    "start": "106770",
    "end": "108960"
  },
  {
    "text": "we're going to be talking about today",
    "start": "108960",
    "end": "110220"
  },
  {
    "text": "recognition video pali transcribe",
    "start": "110220",
    "end": "113310"
  },
  {
    "text": "translate comprehend and lacks lacks",
    "start": "113310",
    "end": "116430"
  },
  {
    "text": "being our alexa service in fact and then",
    "start": "116430",
    "end": "120210"
  },
  {
    "text": "we have platforms like amazon sage maker",
    "start": "120210",
    "end": "122909"
  },
  {
    "text": "which effectively simplifies building",
    "start": "122909",
    "end": "125850"
  },
  {
    "text": "out everything from you know from the",
    "start": "125850",
    "end": "128459"
  },
  {
    "text": "actual algorithms down to creating",
    "start": "128459",
    "end": "131819"
  },
  {
    "text": "models",
    "start": "131819",
    "end": "132470"
  },
  {
    "text": "to training those models and then",
    "start": "132470",
    "end": "134600"
  },
  {
    "text": "deploying these things in you know any",
    "start": "134600",
    "end": "137900"
  },
  {
    "text": "type of environment for any of the",
    "start": "137900",
    "end": "140390"
  },
  {
    "text": "services to consume it we also have",
    "start": "140390",
    "end": "143060"
  },
  {
    "text": "Amazon Mechanical Turk which actually",
    "start": "143060",
    "end": "145930"
  },
  {
    "text": "gives access to to many many many",
    "start": "145930",
    "end": "150920"
  },
  {
    "text": "hundreds of people throughout the world",
    "start": "150920",
    "end": "153830"
  },
  {
    "text": "to actually annotate and and and do you",
    "start": "153830",
    "end": "158420"
  },
  {
    "text": "know simple kind of classifications of",
    "start": "158420",
    "end": "161120"
  },
  {
    "text": "data and that way you know prevent any",
    "start": "161120",
    "end": "164360"
  },
  {
    "text": "type of bias that might be introduced in",
    "start": "164360",
    "end": "166850"
  },
  {
    "text": "the data that is used for machine",
    "start": "166850",
    "end": "169370"
  },
  {
    "text": "learning models and then there's of",
    "start": "169370",
    "end": "171140"
  },
  {
    "text": "course number of frameworks that we",
    "start": "171140",
    "end": "173690"
  },
  {
    "text": "support and use for building machine",
    "start": "173690",
    "end": "176090"
  },
  {
    "text": "learning models such as cafe to",
    "start": "176090",
    "end": "178120"
  },
  {
    "text": "Microsoft CNT K mix net first and",
    "start": "178120",
    "end": "182540"
  },
  {
    "text": "foremost PI torch tensorflow",
    "start": "182540",
    "end": "185750"
  },
  {
    "text": "very popular one the one that we are",
    "start": "185750",
    "end": "187700"
  },
  {
    "text": "using continuously carrots and glue on",
    "start": "187700",
    "end": "191240"
  },
  {
    "text": "as a kind of integration and API",
    "start": "191240",
    "end": "193850"
  },
  {
    "text": "services with these frameworks so",
    "start": "193850",
    "end": "196239"
  },
  {
    "start": "195000",
    "end": "229000"
  },
  {
    "text": "recognition what does it really address",
    "start": "196239",
    "end": "199130"
  },
  {
    "text": "it's the computer vision right so this",
    "start": "199130",
    "end": "203750"
  },
  {
    "text": "is a very good example of an autonomous",
    "start": "203750",
    "end": "205880"
  },
  {
    "text": "driving system by one of our customers",
    "start": "205880",
    "end": "208910"
  },
  {
    "text": "to simple using actually mix net",
    "start": "208910",
    "end": "211720"
  },
  {
    "text": "learning model to detect everything that",
    "start": "211720",
    "end": "216110"
  },
  {
    "text": "the car sees and react based upon it",
    "start": "216110",
    "end": "218989"
  },
  {
    "text": "right whether it's people whether it's",
    "start": "218989",
    "end": "221150"
  },
  {
    "text": "other cars and what you know but it's",
    "start": "221150",
    "end": "223459"
  },
  {
    "text": "the environment around it or you know",
    "start": "223459",
    "end": "225950"
  },
  {
    "text": "traffic signals and all that sort of",
    "start": "225950",
    "end": "227989"
  },
  {
    "text": "stuff",
    "start": "227989",
    "end": "228980"
  },
  {
    "text": "but you know we do have Amazon",
    "start": "228980",
    "end": "232940"
  },
  {
    "start": "229000",
    "end": "310000"
  },
  {
    "text": "recognition which is actually a pre",
    "start": "232940",
    "end": "234860"
  },
  {
    "text": "trained service so this is an example of",
    "start": "234860",
    "end": "237260"
  },
  {
    "text": "anywhere you don't have to worry about",
    "start": "237260",
    "end": "239630"
  },
  {
    "text": "building everything from ground up when",
    "start": "239630",
    "end": "242989"
  },
  {
    "text": "it comes to you know learning models",
    "start": "242989",
    "end": "245390"
  },
  {
    "text": "machine learning models and all that we",
    "start": "245390",
    "end": "247970"
  },
  {
    "text": "provide you with pre train models and",
    "start": "247970",
    "end": "250040"
  },
  {
    "text": "service that is ready for you to consume",
    "start": "250040",
    "end": "252340"
  },
  {
    "text": "service that is already you know auto",
    "start": "252340",
    "end": "255590"
  },
  {
    "text": "scale already resilient already",
    "start": "255590",
    "end": "257570"
  },
  {
    "text": "available nothing for you to worry about",
    "start": "257570",
    "end": "259609"
  },
  {
    "text": "just consume it so what does it do it",
    "start": "259609",
    "end": "262669"
  },
  {
    "text": "does object and seeing that action it",
    "start": "262669",
    "end": "264830"
  },
  {
    "text": "does facial",
    "start": "264830",
    "end": "266460"
  },
  {
    "text": "face search and match it can do things",
    "start": "266460",
    "end": "269610"
  },
  {
    "text": "like unsafe image detection celebrity",
    "start": "269610",
    "end": "272610"
  },
  {
    "text": "recognition and then obviously different",
    "start": "272610",
    "end": "274949"
  },
  {
    "text": "texts texts in images as well as",
    "start": "274949",
    "end": "277469"
  },
  {
    "text": "recognizing the type of language data is",
    "start": "277469",
    "end": "280199"
  },
  {
    "text": "in those texts one of the biggest",
    "start": "280199",
    "end": "282990"
  },
  {
    "text": "examples is work with law enforcement",
    "start": "282990",
    "end": "287120"
  },
  {
    "text": "agencies and different local government",
    "start": "287120",
    "end": "290159"
  },
  {
    "text": "officials on actually doing facial",
    "start": "290159",
    "end": "292469"
  },
  {
    "text": "recognition on through CCTV cameras and",
    "start": "292469",
    "end": "295590"
  },
  {
    "text": "different types of cameras throughout",
    "start": "295590",
    "end": "297629"
  },
  {
    "text": "for very quick a recognition of",
    "start": "297629",
    "end": "299909"
  },
  {
    "text": "potential suspects and which ensures",
    "start": "299909",
    "end": "302569"
  },
  {
    "text": "quick apprehension and obviously a lot",
    "start": "302569",
    "end": "305190"
  },
  {
    "text": "more safety for us the citizens and",
    "start": "305190",
    "end": "309000"
  },
  {
    "text": "everybody else how can we apply these",
    "start": "309000",
    "end": "311400"
  },
  {
    "text": "powerful capabilities to video well one",
    "start": "311400",
    "end": "314909"
  },
  {
    "text": "of the things when it comes to actual",
    "start": "314909",
    "end": "316949"
  },
  {
    "text": "image and vision recognition is that",
    "start": "316949",
    "end": "319340"
  },
  {
    "text": "dealing with still images it lacks the",
    "start": "319340",
    "end": "322349"
  },
  {
    "text": "context context such as temporal",
    "start": "322349",
    "end": "324539"
  },
  {
    "text": "information that is lost and motion",
    "start": "324539",
    "end": "326939"
  },
  {
    "text": "context that is lost slow and",
    "start": "326939",
    "end": "329270"
  },
  {
    "text": "error-prone you know analysis and",
    "start": "329270",
    "end": "332099"
  },
  {
    "text": "interpretation of results and it's",
    "start": "332099",
    "end": "334469"
  },
  {
    "text": "fairly expensive but with Amazon",
    "start": "334469",
    "end": "336870"
  },
  {
    "text": "recognition video we can go one step",
    "start": "336870",
    "end": "339300"
  },
  {
    "text": "further we can actually do object",
    "start": "339300",
    "end": "342150"
  },
  {
    "text": "detection face recognition and content",
    "start": "342150",
    "end": "344490"
  },
  {
    "text": "moderation as well as its celebrity",
    "start": "344490",
    "end": "345810"
  },
  {
    "text": "recognition but this way actually with a",
    "start": "345810",
    "end": "349770"
  },
  {
    "text": "context and temporal time information on",
    "start": "349770",
    "end": "352889"
  },
  {
    "text": "you know how people behaved and what",
    "start": "352889",
    "end": "356279"
  },
  {
    "text": "they did prior to what has been detected",
    "start": "356279",
    "end": "359190"
  },
  {
    "text": "and so to put a better context into the",
    "start": "359190",
    "end": "362580"
  },
  {
    "text": "whole thing now let me show you a demo",
    "start": "362580",
    "end": "364680"
  },
  {
    "text": "how to take advantage as a.net poor",
    "start": "364680",
    "end": "367259"
  },
  {
    "text": "developer of amazon recognition in a",
    "start": "367259",
    "end": "370800"
  },
  {
    "text": "sample lambda plication we're gonna go",
    "start": "370800",
    "end": "373259"
  },
  {
    "text": "step by step how wait to get right into",
    "start": "373259",
    "end": "376050"
  },
  {
    "text": "it so let's take a look at my amazon",
    "start": "376050",
    "end": "380219"
  },
  {
    "start": "377000",
    "end": "410000"
  },
  {
    "text": "workspace here where my windows visual",
    "start": "380219",
    "end": "383430"
  },
  {
    "text": "studio environment is so this is my",
    "start": "383430",
    "end": "385979"
  },
  {
    "text": "visual studio and as you can see if you",
    "start": "385979",
    "end": "388740"
  },
  {
    "text": "actually download it AWS toolkit for",
    "start": "388740",
    "end": "392400"
  },
  {
    "text": "visual studio your visual studio is",
    "start": "392400",
    "end": "394860"
  },
  {
    "text": "probably gonna look very similar to mine",
    "start": "394860",
    "end": "396389"
  },
  {
    "text": "you're gonna have here this",
    "start": "396389",
    "end": "398880"
  },
  {
    "text": "yes Explorer with the profile and the",
    "start": "398880",
    "end": "401700"
  },
  {
    "text": "regions and all the services here is",
    "start": "401700",
    "end": "403410"
  },
  {
    "text": "quite a bit that you can do she's pretty",
    "start": "403410",
    "end": "405840"
  },
  {
    "text": "awesome but are we going to go ahead and",
    "start": "405840",
    "end": "407640"
  },
  {
    "text": "create this application we're going to",
    "start": "407640",
    "end": "408930"
  },
  {
    "text": "start with a new project and once again",
    "start": "408930",
    "end": "411990"
  },
  {
    "start": "410000",
    "end": "437000"
  },
  {
    "text": "if you had installed at AWS toolkit for",
    "start": "411990",
    "end": "416700"
  },
  {
    "text": "a dub for visual studio specifically you",
    "start": "416700",
    "end": "419850"
  },
  {
    "text": "will have this option of a lambda",
    "start": "419850",
    "end": "422210"
  },
  {
    "text": "project net core so we're going to go",
    "start": "422210",
    "end": "425430"
  },
  {
    "text": "ahead and select this you can see it",
    "start": "425430",
    "end": "427890"
  },
  {
    "text": "kind of gives me is automatic name so",
    "start": "427890",
    "end": "430230"
  },
  {
    "text": "I'll just extend it here bullet",
    "start": "430230",
    "end": "435540"
  },
  {
    "text": "recognition and as you can see I have an",
    "start": "435540",
    "end": "440670"
  },
  {
    "start": "437000",
    "end": "465000"
  },
  {
    "text": "option of choosing different types of",
    "start": "440670",
    "end": "443520"
  },
  {
    "text": "blueprints so we actually try to help",
    "start": "443520",
    "end": "446100"
  },
  {
    "text": "you out quite a bit",
    "start": "446100",
    "end": "447300"
  },
  {
    "text": "with you know pre creating some of the",
    "start": "447300",
    "end": "450240"
  },
  {
    "text": "code with some of our samples and as it",
    "start": "450240",
    "end": "453120"
  },
  {
    "text": "happens so we do have this detect image",
    "start": "453120",
    "end": "455220"
  },
  {
    "text": "labels one specifically for the user",
    "start": "455220",
    "end": "458130"
  },
  {
    "text": "with Amazon recognition service so we're",
    "start": "458130",
    "end": "461550"
  },
  {
    "text": "gonna go ahead and select that guy and",
    "start": "461550",
    "end": "463920"
  },
  {
    "text": "press finish so what's happening now",
    "start": "463920",
    "end": "468750"
  },
  {
    "text": "it's actually creating a solution and a",
    "start": "468750",
    "end": "471570"
  },
  {
    "text": "project for us with our specific",
    "start": "471570",
    "end": "474650"
  },
  {
    "text": "dependencies as you can see the new get",
    "start": "474650",
    "end": "478050"
  },
  {
    "text": "packages and with our function that is",
    "start": "478050",
    "end": "480930"
  },
  {
    "text": "are now pre provisioned in this case so",
    "start": "480930",
    "end": "483960"
  },
  {
    "text": "a couple of things as you can see you",
    "start": "483960",
    "end": "485910"
  },
  {
    "text": "know this is a particular sample uses",
    "start": "485910",
    "end": "488370"
  },
  {
    "text": "dotnet core one o my project in fact in",
    "start": "488370",
    "end": "492210"
  },
  {
    "text": "the properties is pointing to the right",
    "start": "492210",
    "end": "494540"
  },
  {
    "text": "target framework and it is this is",
    "start": "494540",
    "end": "497820"
  },
  {
    "text": "awesome",
    "start": "497820",
    "end": "498960"
  },
  {
    "text": "you can actually leave it as such we can",
    "start": "498960",
    "end": "501600"
  },
  {
    "text": "go ahead and build it make sure",
    "start": "501600",
    "end": "504090"
  },
  {
    "text": "everything is fine",
    "start": "504090",
    "end": "504870"
  },
  {
    "text": "and then if we actually look at the",
    "start": "504870",
    "end": "508890"
  },
  {
    "text": "actual function over here rather just",
    "start": "508890",
    "end": "513630"
  },
  {
    "text": "like on the right thing a couple of",
    "start": "513630",
    "end": "517380"
  },
  {
    "start": "515000",
    "end": "675000"
  },
  {
    "text": "things that we can see so so now that we",
    "start": "517380",
    "end": "520440"
  },
  {
    "text": "pointing to the right assembly let's",
    "start": "520440",
    "end": "522900"
  },
  {
    "text": "open up a function let's see what we got",
    "start": "522900",
    "end": "524370"
  },
  {
    "text": "inside so first things first if you look",
    "start": "524370",
    "end": "527850"
  },
  {
    "text": "at this lambda serializer here that we",
    "start": "527850",
    "end": "529890"
  },
  {
    "text": "have so by default lambda accepts only",
    "start": "529890",
    "end": "532380"
  },
  {
    "text": "input",
    "start": "532380",
    "end": "532720"
  },
  {
    "text": "rameters and returns types of type",
    "start": "532720",
    "end": "535689"
  },
  {
    "text": "system iostream to use type classes for",
    "start": "535689",
    "end": "539050"
  },
  {
    "text": "input parameters and return types you",
    "start": "539050",
    "end": "541120"
  },
  {
    "text": "have to register a serializer which is",
    "start": "541120",
    "end": "542920"
  },
  {
    "text": "what we're doing right here so this",
    "start": "542920",
    "end": "545740"
  },
  {
    "text": "assembly attribute is registering the",
    "start": "545740",
    "end": "547480"
  },
  {
    "text": "lambda JSON serializer which uses mutant",
    "start": "547480",
    "end": "550180"
  },
  {
    "text": "soft but JSON to convert the streams to",
    "start": "550180",
    "end": "552819"
  },
  {
    "text": "type classes you can then set the",
    "start": "552819",
    "end": "555040"
  },
  {
    "text": "serializer at the assembly or the method",
    "start": "555040",
    "end": "559000"
  },
  {
    "text": "level if you want to so if you look at",
    "start": "559000",
    "end": "562600"
  },
  {
    "text": "the actual class over here it has two",
    "start": "562600",
    "end": "565329"
  },
  {
    "text": "constructors the first is a default",
    "start": "565329",
    "end": "567550"
  },
  {
    "text": "constructor that is used when lambda",
    "start": "567550",
    "end": "569500"
  },
  {
    "text": "invokes your function the constructor",
    "start": "569500",
    "end": "571569"
  },
  {
    "text": "creates the s3 and recognition service",
    "start": "571569",
    "end": "574360"
  },
  {
    "text": "clients and then gets the AWS",
    "start": "574360",
    "end": "576310"
  },
  {
    "text": "credentials for these clients from the",
    "start": "576310",
    "end": "578050"
  },
  {
    "text": "IAM role that you assigned to the",
    "start": "578050",
    "end": "579850"
  },
  {
    "text": "function when you deploy so the AWS",
    "start": "579850",
    "end": "582879"
  },
  {
    "text": "region for the clients is set to the",
    "start": "582879",
    "end": "586149"
  },
  {
    "text": "region your lambda function is already",
    "start": "586149",
    "end": "587649"
  },
  {
    "text": "running in and in this blueprint you",
    "start": "587649",
    "end": "590290"
  },
  {
    "text": "will want to add tags to the s3 object",
    "start": "590290",
    "end": "592839"
  },
  {
    "text": "in the recognition service and that has",
    "start": "592839",
    "end": "596230"
  },
  {
    "text": "minimum level of confidence set and",
    "start": "596230",
    "end": "599860"
  },
  {
    "text": "which is going to be set to around 60 so",
    "start": "599860",
    "end": "603819"
  },
  {
    "text": "the constructor checks the environment",
    "start": "603819",
    "end": "605379"
  },
  {
    "text": "whether the variable min confidence to",
    "start": "605379",
    "end": "607930"
  },
  {
    "text": "determine the acceptable confidence",
    "start": "607930",
    "end": "609610"
  },
  {
    "text": "level is being set and then you can set",
    "start": "609610",
    "end": "611740"
  },
  {
    "text": "this you know you can actually set this",
    "start": "611740",
    "end": "614019"
  },
  {
    "text": "whole environment variable when you",
    "start": "614019",
    "end": "615339"
  },
  {
    "text": "deploy the service itself so you can",
    "start": "615339",
    "end": "620829"
  },
  {
    "text": "then use the second constructor over",
    "start": "620829",
    "end": "625029"
  },
  {
    "text": "here let's scroll down to it for actual",
    "start": "625029",
    "end": "629800"
  },
  {
    "text": "testing the test project configures its",
    "start": "629800",
    "end": "632829"
  },
  {
    "text": "own s3 and recognition clients and",
    "start": "632829",
    "end": "634629"
  },
  {
    "text": "passes them in right so this is what we",
    "start": "634629",
    "end": "637930"
  },
  {
    "text": "have over there",
    "start": "637930",
    "end": "638709"
  },
  {
    "text": "so the function handler method which is",
    "start": "638709",
    "end": "641410"
  },
  {
    "text": "here at the bottom is the method that",
    "start": "641410",
    "end": "645550"
  },
  {
    "text": "lambda calls when it constructs the",
    "start": "645550",
    "end": "647230"
  },
  {
    "text": "instance notice that the input parameter",
    "start": "647230",
    "end": "649779"
  },
  {
    "text": "is the type of s3 band and not stream",
    "start": "649779",
    "end": "653470"
  },
  {
    "text": "you can do this because of the",
    "start": "653470",
    "end": "654910"
  },
  {
    "text": "registered lambdas Jason C realized",
    "start": "654910",
    "end": "656860"
  },
  {
    "text": "early on the astray then contains all",
    "start": "656860",
    "end": "659620"
  },
  {
    "text": "the information about the event",
    "start": "659620",
    "end": "661000"
  },
  {
    "text": "triggered in s3 the function then loops",
    "start": "661000",
    "end": "664089"
  },
  {
    "text": "through",
    "start": "664089",
    "end": "664460"
  },
  {
    "text": "three objects that were part of the",
    "start": "664460",
    "end": "666470"
  },
  {
    "text": "event and then tells recognition to",
    "start": "666470",
    "end": "668330"
  },
  {
    "text": "detect labels after the late labels are",
    "start": "668330",
    "end": "670760"
  },
  {
    "text": "detected they are then added as tax to",
    "start": "670760",
    "end": "673700"
  },
  {
    "text": "the s3 object itself so yeah we can open",
    "start": "673700",
    "end": "677420"
  },
  {
    "start": "675000",
    "end": "753000"
  },
  {
    "text": "also this AWS lambda tools default Jason",
    "start": "677420",
    "end": "682070"
  },
  {
    "text": "and you can see basically all the you",
    "start": "682070",
    "end": "684740"
  },
  {
    "text": "know all the different settings that we",
    "start": "684740",
    "end": "687350"
  },
  {
    "text": "have set over here",
    "start": "687350",
    "end": "688940"
  },
  {
    "text": "it sells which actually profile we're",
    "start": "688940",
    "end": "691130"
  },
  {
    "text": "going to be using in this case it's the",
    "start": "691130",
    "end": "693830"
  },
  {
    "text": "default profile you know with",
    "start": "693830",
    "end": "696550"
  },
  {
    "text": "credentials that are provided when I",
    "start": "696550",
    "end": "699080"
  },
  {
    "text": "actually set up a double use tools for",
    "start": "699080",
    "end": "700910"
  },
  {
    "text": "visual studio and then what is the what",
    "start": "700910",
    "end": "704360"
  },
  {
    "text": "is the region what configuration we're",
    "start": "704360",
    "end": "707420"
  },
  {
    "text": "gonna be using and then what is the",
    "start": "707420",
    "end": "709610"
  },
  {
    "text": "framework target framework and so on and",
    "start": "709610",
    "end": "712370"
  },
  {
    "text": "so forth so we want to make sure that we",
    "start": "712370",
    "end": "715460"
  },
  {
    "text": "actually rebuild this guy and we're",
    "start": "715460",
    "end": "718160"
  },
  {
    "text": "pointing it to the right framework and",
    "start": "718160",
    "end": "720080"
  },
  {
    "text": "the right function so now that if we are",
    "start": "720080",
    "end": "723320"
  },
  {
    "text": "actually fairly happy with the whole",
    "start": "723320",
    "end": "726170"
  },
  {
    "text": "thing we want to make sure just one more",
    "start": "726170",
    "end": "728630"
  },
  {
    "text": "time and that that we are doing the",
    "start": "728630",
    "end": "731570"
  },
  {
    "text": "right output what a build event is",
    "start": "731570",
    "end": "734180"
  },
  {
    "text": "actually using dotnet core one packages",
    "start": "734180",
    "end": "738320"
  },
  {
    "text": "debug resources so I think we actually",
    "start": "738320",
    "end": "741110"
  },
  {
    "text": "good to go and then we can actually",
    "start": "741110",
    "end": "744110"
  },
  {
    "text": "right click on the lambda itself and we",
    "start": "744110",
    "end": "749600"
  },
  {
    "text": "can say publish this to AWS lambda and",
    "start": "749600",
    "end": "753320"
  },
  {
    "start": "753000",
    "end": "882000"
  },
  {
    "text": "as you can see here we have language",
    "start": "753320",
    "end": "755960"
  },
  {
    "text": "writing runtime dotnet core version 1.0",
    "start": "755960",
    "end": "759230"
  },
  {
    "text": "actually selected we can actually now",
    "start": "759230",
    "end": "763730"
  },
  {
    "text": "give this function a name so it's test",
    "start": "763730",
    "end": "768430"
  },
  {
    "text": "recognition function and it's pointing",
    "start": "768430",
    "end": "776570"
  },
  {
    "text": "to the rights framework we do have the",
    "start": "776570",
    "end": "781010"
  },
  {
    "text": "right assembly name and make sure that",
    "start": "781010",
    "end": "784580"
  },
  {
    "text": "you have the right function or the right",
    "start": "784580",
    "end": "786950"
  },
  {
    "text": "method name for the handler itself",
    "start": "786950",
    "end": "789530"
  },
  {
    "text": "otherwise you might have a mismatch",
    "start": "789530",
    "end": "791300"
  },
  {
    "text": "there so we're gonna go to the next one",
    "start": "791300",
    "end": "795520"
  },
  {
    "text": "see what waits for us over here",
    "start": "795520",
    "end": "797970"
  },
  {
    "text": "so over here we can actually select an",
    "start": "797970",
    "end": "799769"
  },
  {
    "text": "existing rule or we can go ahead and",
    "start": "799769",
    "end": "802169"
  },
  {
    "text": "create a new role and we can select on",
    "start": "802169",
    "end": "806970"
  },
  {
    "text": "which type of access we want in this",
    "start": "806970",
    "end": "809549"
  },
  {
    "text": "case to make things easy we're going to",
    "start": "809549",
    "end": "811049"
  },
  {
    "text": "select AWS and the full access to a",
    "start": "811049",
    "end": "814619"
  },
  {
    "text": "street dynamo and a whole bunch of other",
    "start": "814619",
    "end": "816329"
  },
  {
    "text": "things and one thing pretty important",
    "start": "816329",
    "end": "821099"
  },
  {
    "text": "that you might remember from before is",
    "start": "821099",
    "end": "822749"
  },
  {
    "text": "that we need to also add an environment",
    "start": "822749",
    "end": "825149"
  },
  {
    "text": "variable called min confidence and we're",
    "start": "825149",
    "end": "834449"
  },
  {
    "text": "going to put the value of 60 as the",
    "start": "834449",
    "end": "836609"
  },
  {
    "text": "minimum confidence and because we kind",
    "start": "836609",
    "end": "839099"
  },
  {
    "text": "of want you know anything that is less",
    "start": "839099",
    "end": "841649"
  },
  {
    "text": "confident than 60% will be ignored in",
    "start": "841649",
    "end": "844139"
  },
  {
    "text": "this case so now we're going to be and",
    "start": "844139",
    "end": "848099"
  },
  {
    "text": "we don't need to select BBC subnets and",
    "start": "848099",
    "end": "850199"
  },
  {
    "text": "security groups this is in a case that",
    "start": "850199",
    "end": "851970"
  },
  {
    "text": "we are actually doing V PC deployment",
    "start": "851970",
    "end": "854220"
  },
  {
    "text": "itself so you're gonna go ahead here and",
    "start": "854220",
    "end": "858569"
  },
  {
    "text": "say upload so you'll see that it's",
    "start": "858569",
    "end": "864329"
  },
  {
    "text": "actually telling us everything that is",
    "start": "864329",
    "end": "865919"
  },
  {
    "text": "doing right now how it's actually",
    "start": "865919",
    "end": "867769"
  },
  {
    "text": "creating a I am role that lambda is is",
    "start": "867769",
    "end": "871979"
  },
  {
    "text": "going to use as part of its execution",
    "start": "871979",
    "end": "874019"
  },
  {
    "text": "policy and then it's going to actually",
    "start": "874019",
    "end": "876359"
  },
  {
    "text": "build the whole package and then publish",
    "start": "876359",
    "end": "879779"
  },
  {
    "text": "it to lambda so you can see it's telling",
    "start": "879779",
    "end": "884939"
  },
  {
    "start": "882000",
    "end": "1022000"
  },
  {
    "text": "me that the file has been changed Selmy",
    "start": "884939",
    "end": "886439"
  },
  {
    "text": "has long said changes so I'll say yes -",
    "start": "886439",
    "end": "889289"
  },
  {
    "text": "oh I'm gonna save this stuff so as you",
    "start": "889289",
    "end": "892619"
  },
  {
    "text": "see the function has been successfully",
    "start": "892619",
    "end": "894749"
  },
  {
    "text": "deployed and now we can actually go",
    "start": "894749",
    "end": "897539"
  },
  {
    "text": "ahead and configure a whole bunch of",
    "start": "897539",
    "end": "898859"
  },
  {
    "text": "things for the function itself we can",
    "start": "898859",
    "end": "900959"
  },
  {
    "text": "test the function by actually you know",
    "start": "900959",
    "end": "903959"
  },
  {
    "text": "using either example requests or",
    "start": "903959",
    "end": "905669"
  },
  {
    "text": "creating one of our own or we can",
    "start": "905669",
    "end": "908220"
  },
  {
    "text": "actually and there's a whole bunch of",
    "start": "908220",
    "end": "909839"
  },
  {
    "text": "them as you can see is pretty awesome",
    "start": "909839",
    "end": "911729"
  },
  {
    "text": "all for specific services but most",
    "start": "911729",
    "end": "914970"
  },
  {
    "text": "importantly we want to actually add an",
    "start": "914970",
    "end": "918329"
  },
  {
    "text": "event source which made basically means",
    "start": "918329",
    "end": "920459"
  },
  {
    "text": "that we're gonna hook into an event of",
    "start": "920459",
    "end": "923509"
  },
  {
    "text": "images being uploaded to a specific",
    "start": "923509",
    "end": "926579"
  },
  {
    "text": "bucket so I've pre created a bucket",
    "start": "926579",
    "end": "929339"
  },
  {
    "text": "prior to starting this demo",
    "start": "929339",
    "end": "931680"
  },
  {
    "text": "and I'm gonna now add to that bucket",
    "start": "931680",
    "end": "936600"
  },
  {
    "text": "here we go source is source type and the",
    "start": "936600",
    "end": "939000"
  },
  {
    "text": "bucket is running with my name is Latin",
    "start": "939000",
    "end": "943620"
  },
  {
    "text": "recognition test bucket and here you can",
    "start": "943620",
    "end": "946440"
  },
  {
    "text": "actually say what the suffix and the",
    "start": "946440",
    "end": "949290"
  },
  {
    "text": "prefix would be so that you can kind of",
    "start": "949290",
    "end": "951480"
  },
  {
    "text": "filter out for you know uploads to",
    "start": "951480",
    "end": "955350"
  },
  {
    "text": "specific folders in the bucket itself so",
    "start": "955350",
    "end": "958110"
  },
  {
    "text": "we're gonna go ahead and say ok we all",
    "start": "958110",
    "end": "962339"
  },
  {
    "text": "we need to do is just upload any image",
    "start": "962339",
    "end": "964740"
  },
  {
    "text": "with a label and you can actually test",
    "start": "964740",
    "end": "967800"
  },
  {
    "text": "it and see how it creates a rather",
    "start": "967800",
    "end": "971520"
  },
  {
    "text": "recognizes different labels and then",
    "start": "971520",
    "end": "974430"
  },
  {
    "text": "puts those labels into the actual",
    "start": "974430",
    "end": "976950"
  },
  {
    "text": "properties of that image so where do you",
    "start": "976950",
    "end": "981510"
  },
  {
    "text": "find those properties let me actually go",
    "start": "981510",
    "end": "984510"
  },
  {
    "text": "go ahead and show you so if I double",
    "start": "984510",
    "end": "987240"
  },
  {
    "text": "click on the on the bucket where we",
    "start": "987240",
    "end": "989520"
  },
  {
    "text": "created you can see that I before this",
    "start": "989520",
    "end": "992130"
  },
  {
    "text": "I've uploaded an image it's not gonna",
    "start": "992130",
    "end": "996180"
  },
  {
    "text": "have any tags but I can show you where",
    "start": "996180",
    "end": "997830"
  },
  {
    "text": "the tags will be and there you will",
    "start": "997830",
    "end": "999990"
  },
  {
    "text": "actually find them here so if you click",
    "start": "999990",
    "end": "1001580"
  },
  {
    "text": "on the properties of an image and you go",
    "start": "1001580",
    "end": "1003920"
  },
  {
    "text": "to the tags tab you will see all the",
    "start": "1003920",
    "end": "1007160"
  },
  {
    "text": "tags come through here",
    "start": "1007160",
    "end": "1008810"
  },
  {
    "text": "so go ahead upload your images and see",
    "start": "1008810",
    "end": "1011510"
  },
  {
    "text": "what you get grace we just covered how",
    "start": "1011510",
    "end": "1013910"
  },
  {
    "text": "to build up an applications using Amazon",
    "start": "1013910",
    "end": "1015770"
  },
  {
    "text": "recognition I hope you can take",
    "start": "1015770",
    "end": "1017180"
  },
  {
    "text": "advantage of it thank you for watching",
    "start": "1017180",
    "end": "1021190"
  },
  {
    "text": "[Music]",
    "start": "1021400",
    "end": "1024470"
  }
]