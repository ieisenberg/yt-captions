[
  {
    "start": "0",
    "end": "136000"
  },
  {
    "text": "So today we're going to be talking about infra immutable infrastructure and",
    "start": "1639",
    "end": "7480"
  },
  {
    "text": "production now have you ever had one of those crazy ideas everybody looked at you thought you had three heads well",
    "start": "7480",
    "end": "15719"
  },
  {
    "text": "that was kind of what we ended up doing was we said we have this crazy",
    "start": "15719",
    "end": "21199"
  },
  {
    "text": "idea we want to lock ourselves out of production my name is Martin surl with",
    "start": "21199",
    "end": "26560"
  },
  {
    "text": "AWS Professional Services and this is me a bag with exper consumer services and",
    "start": "26560",
    "end": "31720"
  },
  {
    "text": "director of technology for for experien Consumer Credit platform and so we did just that we",
    "start": "31720",
    "end": "39200"
  },
  {
    "text": "locked ourselves out this is a live shot of Experian production",
    "start": "39200",
    "end": "44719"
  },
  {
    "text": "account this is just a one instance filtered down here uh they have hundreds of instances in this account um we just",
    "start": "44719",
    "end": "51559"
  },
  {
    "text": "filtered one and as you can see this instance like all the other ones has no SSH key attached to it so of",
    "start": "51559",
    "end": "60160"
  },
  {
    "text": "you might be thinking that's not really possible but it is we launch the instances without keys and for those of",
    "start": "60160",
    "end": "66000"
  },
  {
    "text": "you that are familiar with dc2 you know that once this instance is launched there's no going back so truly locked",
    "start": "66000",
    "end": "73240"
  },
  {
    "text": "out of this instance on top of that the",
    "start": "73240",
    "end": "78360"
  },
  {
    "text": "uh IM IM permissions that we give for the default IM IM permissions for our users are the just the standard manage",
    "start": "78360",
    "end": "83960"
  },
  {
    "text": "policy read only so with some additional deny policies this basically just",
    "start": "83960",
    "end": "89040"
  },
  {
    "text": "becomes a way for them to log in and check Cloud watch metrics monitoring that sort of thing so no changes to",
    "start": "89040",
    "end": "96439"
  },
  {
    "text": "production whatsoever so let's take this from the top today I'm going to be talking about why we decided to do this",
    "start": "96439",
    "end": "103520"
  },
  {
    "text": "and how we implemented the production steps to get this deployment steps to get this into production and Mira is going to be",
    "start": "103520",
    "end": "110119"
  },
  {
    "text": "talking about the development side and what the development implications were on the development life cycle as well as",
    "start": "110119",
    "end": "116960"
  },
  {
    "text": "production monitoring so that we knew everything was going smoothly also a little bit of context about",
    "start": "116960",
    "end": "122439"
  },
  {
    "text": "myself I currently work for AWS but when we were working on this project I was a full-time consultant working with",
    "start": "122439",
    "end": "127479"
  },
  {
    "text": "Experian so this was really a joint effort uh and an effort uh that we were both working",
    "start": "127479",
    "end": "133200"
  },
  {
    "text": "on so the application in question we're going to be talking about today is",
    "start": "133200",
    "end": "138319"
  },
  {
    "start": "136000",
    "end": "136000"
  },
  {
    "text": "experian.com it serves credit reports and scores to over 10 million users has",
    "start": "138319",
    "end": "144080"
  },
  {
    "text": "over a 100,000 requests per hour and runs in a fully PCI Compliant",
    "start": "144080",
    "end": "149400"
  },
  {
    "text": "environment now why am I saying this not because these are big numbers or that I think",
    "start": "149400",
    "end": "154560"
  },
  {
    "text": "they're big numbers I mean obviously there's people that are bigger but so that you understand that this is a real",
    "start": "154560",
    "end": "159760"
  },
  {
    "text": "application this is a tier one business critical application not someone's pet project or you know some internal app",
    "start": "159760",
    "end": "166760"
  },
  {
    "text": "this is a real life real world production deployment so when we started working on",
    "start": "166760",
    "end": "173319"
  },
  {
    "text": "this we thought well obviously our first concern is security uh we have you know Network Security account security so how",
    "start": "173319",
    "end": "180159"
  },
  {
    "text": "are we going to secure this thing obviously network security comes down to firewalls right we're worried about",
    "start": "180159",
    "end": "185239"
  },
  {
    "text": "making sure that there's no uh all the oos top 10er cover dos protections you",
    "start": "185239",
    "end": "190920"
  },
  {
    "text": "know using things like security groups and network ACLS and layer 7even waffs uh web application firewalls and so",
    "start": "190920",
    "end": "198280"
  },
  {
    "text": "firewalls are pretty great for that but what we realized is that the standard deployment model of using SSH punches a",
    "start": "198280",
    "end": "205159"
  },
  {
    "text": "big giant hole right in the center of that and so what are the vulnerabilities and threats that we talking about here",
    "start": "205159",
    "end": "211319"
  },
  {
    "text": "well the standard one such as being able to SSH into and out of the instances of",
    "start": "211319",
    "end": "216720"
  },
  {
    "start": "212000",
    "end": "212000"
  },
  {
    "text": "course it's very easy to circumvent those firewall Rules by being able to potentially siphon data off on top of",
    "start": "216720",
    "end": "222720"
  },
  {
    "text": "that you run into you know how do I control access on the instance of course you know any standard L Linux admin is",
    "start": "222720",
    "end": "228480"
  },
  {
    "text": "going to be like okay we have users and groups and those sorts of things but there's a lot to think about there right then we have Key Management you",
    "start": "228480",
    "end": "235840"
  },
  {
    "text": "know we have to make sure that we're going to manage these SSH Keys uh maybe we'll use something like centrify or ad",
    "start": "235840",
    "end": "243280"
  },
  {
    "text": "but there's a whole management setup there that needs to be maintained and even if you do all of",
    "start": "243280",
    "end": "249439"
  },
  {
    "text": "that perfectly even if you you know manage to get everything right which honestly we see a lot of customers this",
    "start": "249439",
    "end": "254680"
  },
  {
    "text": "is kind of the last thing they think about right I'm sure many of you are like well we don't really have time to put all that into play there's one more",
    "start": "254680",
    "end": "261639"
  },
  {
    "text": "thing to think about ec2 roles right so if you've ever launched an ec2 instance",
    "start": "261639",
    "end": "267680"
  },
  {
    "text": "hopefully you've used ec2 roles and uh what that allows you to do is to assign",
    "start": "267680",
    "end": "273639"
  },
  {
    "text": "IM permissions to the instance that you can use inside of your application to call AWS apis so you don't have to",
    "start": "273639",
    "end": "280520"
  },
  {
    "text": "provision those credentials yourself we do that for you and rotate those for you automatically well the way that we do",
    "start": "280520",
    "end": "286479"
  },
  {
    "text": "that is with the metadata URL buil baked into every ec2 instance so we provision",
    "start": "286479",
    "end": "292440"
  },
  {
    "text": "those credentials which can last over 6 hours in time but we we rotate those",
    "start": "292440",
    "end": "298440"
  },
  {
    "text": "well that's great except what if you get SSH access to the instance and this metadata URL is not properly secured now",
    "start": "298440",
    "end": "305360"
  },
  {
    "text": "someone can take these credentials go halfway around the world and start pulling things out of your databases or S3 buckets so we thought well could you",
    "start": "305360",
    "end": "313840"
  },
  {
    "text": "in theory solve all these problems sure but wouldn't it just be easier if we",
    "start": "313840",
    "end": "319759"
  },
  {
    "text": "went into an immutable infrastructure model so what does that mean what does a mutable infrastructure mean how many of",
    "start": "319759",
    "end": "325960"
  },
  {
    "text": "you guys have heard the term before great if you've heard the before you're probably thinking that sounds",
    "start": "325960",
    "end": "331360"
  },
  {
    "text": "impossible going back to my three heads maybe we were up to four heads after last night but the thing is uh immutable",
    "start": "331360",
    "end": "340720"
  },
  {
    "text": "infrastructure is possible and so what we hope you'll take out of this session is some strategies on how you can",
    "start": "340720",
    "end": "346080"
  },
  {
    "text": "Implement that now what does a truly immutable infra piece of INF",
    "start": "346080",
    "end": "351639"
  },
  {
    "start": "349000",
    "end": "349000"
  },
  {
    "text": "infrastructure look like so we want to look at some models maybe in the real world that we can take into deploying",
    "start": "351639",
    "end": "357440"
  },
  {
    "text": "into AWS so this is an example of a time capsule right in the Time Capsule you seal it all up you weld it shut it goes",
    "start": "357440",
    "end": "364800"
  },
  {
    "text": "hundreds of feet into the into the Earth well obviously we can't just do a total",
    "start": "364800",
    "end": "370440"
  },
  {
    "text": "production lockout like that because I'm pretty sure your business owners and your product owners are probably going",
    "start": "370440",
    "end": "375560"
  },
  {
    "text": "to frown on never making any additional changes Beyond version 1.0 so we need to find a different model that we can",
    "start": "375560",
    "end": "381400"
  },
  {
    "text": "leverage to help get things into production what about this one hopefully most of you still remember",
    "start": "381400",
    "end": "388440"
  },
  {
    "start": "385000",
    "end": "385000"
  },
  {
    "text": "what these are disposable cameras I know I used to have one and disposable",
    "start": "388440",
    "end": "394720"
  },
  {
    "text": "cameras were great even if you already owned a camera right I used to own a regular camera little Polaroid",
    "start": "394720",
    "end": "401360"
  },
  {
    "text": "but even if you had one you still had a disposable why well cuz they were cheap",
    "start": "401360",
    "end": "406639"
  },
  {
    "text": "so if you had a few of them with you on your trip you lost one it was no big deal you didn't have pictures in there that you were worried about right so",
    "start": "406639",
    "end": "412960"
  },
  {
    "text": "they were easy to Manufactured they stamped them out they didn't have a lot of components inside that they had to worry about you know getting data in and",
    "start": "412960",
    "end": "418800"
  },
  {
    "text": "out so it was actually if you didn't you may not even realize this but it was actually pretty secure right it was",
    "start": "418800",
    "end": "424000"
  },
  {
    "text": "Secure because the only way to get pictures out of this thing was to take it to a you know uh uh actually a",
    "start": "424000",
    "end": "430039"
  },
  {
    "text": "pharmacy or something and they would get your pictures off for you and it was only the pictures that you use that one time so we really want to look at this",
    "start": "430039",
    "end": "437440"
  },
  {
    "text": "one-time use model and shoot for this as our way of getting things into",
    "start": "437440",
    "end": "442759"
  },
  {
    "text": "production so the goals no humans in Productions or very little uh readon",
    "start": "442759",
    "end": "450800"
  },
  {
    "text": "access and how are we going to do it we're going to do it by automating everything we're going to create a",
    "start": "450800",
    "end": "456720"
  },
  {
    "text": "production pipeline that helps us get things into production and so the key here isn't",
    "start": "456720",
    "end": "463800"
  },
  {
    "text": "that the infrastructure never changes we have some very specific goals that we're looking for so that we can accomplish",
    "start": "463800",
    "end": "469479"
  },
  {
    "start": "464000",
    "end": "464000"
  },
  {
    "text": "what we're trying to do which is to make sure that all changes are audited in production and that there's no humans",
    "start": "469479",
    "end": "474919"
  },
  {
    "text": "going on into the boxes so everything has to be automated no humans in production",
    "start": "474919",
    "end": "480599"
  },
  {
    "text": "and so most importantly no SSH back doors into production at all but something that we all kind of",
    "start": "480599",
    "end": "488599"
  },
  {
    "text": "don't think about a lot when we're you know you know handling security we're putting security policies into place is",
    "start": "488599",
    "end": "494360"
  },
  {
    "text": "really the development side you know this gets lost a lot we have these policies you know going in we're saying we're going to lock this down or we're",
    "start": "494360",
    "end": "500360"
  },
  {
    "text": "going to you know enforce these things but how does that have an impact on development you know Shadow it those",
    "start": "500360",
    "end": "506360"
  },
  {
    "text": "sorts of those sorts of implications and so we knew that whatever we did had to be easy just as easy and just as fast as",
    "start": "506360",
    "end": "514399"
  },
  {
    "text": "for the developer as actually going on the box and sshing or SFTP their code onto the box right that was an MVP for",
    "start": "514399",
    "end": "522200"
  },
  {
    "text": "this otherwise it wasn't going to work so what we realize is we need to",
    "start": "522200",
    "end": "528200"
  },
  {
    "start": "526000",
    "end": "526000"
  },
  {
    "text": "ask two questions in order to make this work number one and these seem pretty obvious but it's it's really the",
    "start": "528200",
    "end": "533560"
  },
  {
    "text": "fundamentals of how we look at this problem if we want to make changes to production how are we going to get those",
    "start": "533560",
    "end": "539880"
  },
  {
    "text": "changes automated into a pipeline right we're not going to go into those boxes so how do we automate this into",
    "start": "539880",
    "end": "545480"
  },
  {
    "text": "production and number two and this is probably the most important one that you're thinking about how do I get the",
    "start": "545480",
    "end": "551120"
  },
  {
    "text": "data I need off the box right how do I make sure that if you know if I do feel",
    "start": "551120",
    "end": "556240"
  },
  {
    "text": "like one you know maybe one or two times I need to get under that box I get some data that isn't in my log take a step",
    "start": "556240",
    "end": "562000"
  },
  {
    "text": "back and figure out how we can get the data we need off the box which we'll talk about",
    "start": "562000",
    "end": "568360"
  },
  {
    "start": "567000",
    "end": "567000"
  },
  {
    "text": "so on that first one we realize we have a Target environment that we need to uh",
    "start": "568360",
    "end": "574920"
  },
  {
    "text": "we need to uh figure out how we're going to do these five things so from the bottom up and by the way I realized this",
    "start": "574920",
    "end": "581480"
  },
  {
    "text": "looks someone mentioned to me that this looks like the uh uh Terror threat model",
    "start": "581480",
    "end": "586760"
  },
  {
    "text": "thing you know from the it is not that no color coordination Happening Here uh",
    "start": "586760",
    "end": "591959"
  },
  {
    "text": "it's all coincidence and they're not any particular order uh but if you look at this from a stack point of view we have our base instance configuration",
    "start": "591959",
    "end": "599440"
  },
  {
    "text": "so installing Apache engine X your application servers ETC number two code deployment right so",
    "start": "599440",
    "end": "606839"
  },
  {
    "text": "we got get the code onto the boxes once we've set it all up number three is application configuration such as you",
    "start": "606839",
    "end": "613760"
  },
  {
    "text": "know knowing how much uh my Heap size should be thread pool usage uh thread pool size Etc next is environment",
    "start": "613760",
    "end": "620279"
  },
  {
    "text": "configuration right got to figure out how we're going to uh get our database endpoints and you know all of our things",
    "start": "620279",
    "end": "626440"
  },
  {
    "text": "that around with the environment around us in there and finally last but definitely obviously not least how are",
    "start": "626440",
    "end": "633000"
  },
  {
    "text": "we going to monitor this thing once it's in production so you're probably thinking",
    "start": "633000",
    "end": "639120"
  },
  {
    "start": "637000",
    "end": "637000"
  },
  {
    "text": "Martin the next thing you're about to say is we're going to start baking some Amis right so Ami baking as many of you",
    "start": "639120",
    "end": "646480"
  },
  {
    "text": "know is very popular very common and does work we have a number of our big customers that use it right Netflix a",
    "start": "646480",
    "end": "652600"
  },
  {
    "text": "lot of them have baking pipelines the challenge that we realized when we were going with AMI baking is",
    "start": "652600",
    "end": "658639"
  },
  {
    "text": "that the development times getting the developers to be able to get their",
    "start": "658639",
    "end": "664440"
  },
  {
    "text": "changes into development can be somewhat slow and So you you're looking at",
    "start": "664440",
    "end": "669519"
  },
  {
    "text": "spinning up an instance configuring everything flashing it uh it's a it's a huge it's a huge overhead it's a huge",
    "start": "669519",
    "end": "676519"
  },
  {
    "text": "headache and you can sort of work your way around that but then your then the issue is your development environment",
    "start": "676519",
    "end": "682800"
  },
  {
    "text": "doesn't look like your production environment right so you want to make sure that whatever you do in Dev is the exact same as in production and so we",
    "start": "682800",
    "end": "689519"
  },
  {
    "text": "thought how can we going back to our that very important tenant how can we make this easy for",
    "start": "689519",
    "end": "695399"
  },
  {
    "text": "developers and just as fast and so we don't think that baking or we didn't think that baking was the way that we",
    "start": "695399",
    "end": "701279"
  },
  {
    "text": "wanted to go to solve that problem so how are we going to solve that problem",
    "start": "701279",
    "end": "706720"
  },
  {
    "start": "705000",
    "end": "705000"
  },
  {
    "text": "well here's what the sample pipeline would look like code commit obviously big fan of code Commit This Could Be",
    "start": "706720",
    "end": "712399"
  },
  {
    "text": "GitHub this could be any get repo on on Prem Etc we're going to clone that into",
    "start": "712399",
    "end": "718079"
  },
  {
    "text": "Jenkins uh do a build test there standard Jenkins CI stuff unit testing",
    "start": "718079",
    "end": "725240"
  },
  {
    "text": "Etc we're going to package everything up all the templates that we need for cloud formation which we talk about in a",
    "start": "725240",
    "end": "730639"
  },
  {
    "text": "second and we're going to send those to cloud formation all the deployment information that goes along with that package and it's going to deploy either",
    "start": "730639",
    "end": "738920"
  },
  {
    "text": "a code deploy or an Amazon ECS Docker setup right so either one of those code",
    "start": "738920",
    "end": "745920"
  },
  {
    "text": "deploy or Amazon ECS now key here is that no matter which",
    "start": "745920",
    "end": "751680"
  },
  {
    "text": "approach you take what happens next is that you don't do this all over again in every environment you take this exact",
    "start": "751680",
    "end": "758680"
  },
  {
    "text": "same thing that you did in one environment and you move the binaries or the containers on to the next environment right very important that",
    "start": "758680",
    "end": "766480"
  },
  {
    "text": "way you have a really nice audit Trail okay so I said the word cloud",
    "start": "766480",
    "end": "772320"
  },
  {
    "start": "771000",
    "end": "771000"
  },
  {
    "text": "formation maybe you don't know what it is I'll give you a really brief primer on it uh cloud formation really powerful",
    "start": "772320",
    "end": "778079"
  },
  {
    "text": "tool to be able to deploy resources and infrastructure into AWS at this point",
    "start": "778079",
    "end": "784079"
  },
  {
    "text": "pretty much anything that you could want to deploy there's obviously a couple of resources if you're familiar with Cloud information that aren't but most of the",
    "start": "784079",
    "end": "789680"
  },
  {
    "text": "common things are in there at this point so what you do is you take a template with all your all your resources and you",
    "start": "789680",
    "end": "797120"
  },
  {
    "text": "send it to Cloud information it's a big Json document or yaml file and it creates a stack for you and",
    "start": "797120",
    "end": "804519"
  },
  {
    "text": "that stack is composed of like I said all of those AWS resources so pretty",
    "start": "804519",
    "end": "809959"
  },
  {
    "text": "straightforward template has a bunch of uh Json stuff in it send it to cloud formation it creates my resources here's",
    "start": "809959",
    "end": "816560"
  },
  {
    "text": "what it looks like if you're not familiar uh real quick we have our Stacks there at the",
    "start": "816560",
    "end": "821639"
  },
  {
    "text": "top sorry about that Stacks there at the top and then the the all the resources",
    "start": "821639",
    "end": "827560"
  },
  {
    "text": "associated with that stack at the bottom and this could be anything right we have you see we have Dynamo tables in there Lambda functions the whole slew of it",
    "start": "827560",
    "end": "835079"
  },
  {
    "text": "right we deploy everything with cloud formation this handles our entire St set up for us right KMS Keys IM rolles the",
    "start": "835079",
    "end": "844120"
  },
  {
    "text": "works now as great as this is you're thinking well that probably that sounds probably pretty complicated to do right",
    "start": "844120",
    "end": "850800"
  },
  {
    "text": "I mean we have uh this is what an example of a resource looks like I mentioned it's Json and this is one S3",
    "start": "850800",
    "end": "856519"
  },
  {
    "text": "bucket resource and there's a lot of really powerful Tools in here right there's a a lot that you can do inside of cloud",
    "start": "856519",
    "end": "862399"
  },
  {
    "text": "formation but what we realized again we want to make this easy this has to be",
    "start": "862399",
    "end": "867440"
  },
  {
    "text": "easy we can't go to Every developer and say you have to do this or you can't deploy into production no not we don't",
    "start": "867440",
    "end": "873759"
  },
  {
    "text": "have there's no way hundreds of developers are going to be able to learn all the ins and outs of doing Cloud information properly right so we said",
    "start": "873759",
    "end": "881800"
  },
  {
    "text": "well that's okay because there's a lot of patterns that we have for our services that we can reuse and leverage into reusable templates and all you have",
    "start": "881800",
    "end": "889040"
  },
  {
    "text": "to do developers is give us a simplified version of what your stack looks like right so a very simple metadata file",
    "start": "889040",
    "end": "895880"
  },
  {
    "text": "that says here's the name of my awesome service if I do say so to myself uh the",
    "start": "895880",
    "end": "901279"
  },
  {
    "text": "deployment system ECS uh in this case or could be Cod deploy you know maybe the",
    "start": "901279",
    "end": "906880"
  },
  {
    "text": "uh also the whether it's python or Java or whatever your language of choices etc etc so some simple metadata and we'll",
    "start": "906880",
    "end": "914040"
  },
  {
    "text": "take that and build the templates for you because we know you know all the how to take you know uh get an elb and hook",
    "start": "914040",
    "end": "920079"
  },
  {
    "text": "it up to the instances and all that one thing missing here you're probably asking about is well what if I",
    "start": "920079",
    "end": "925399"
  },
  {
    "text": "need additional S3 buckets or KMS keys or Dynam so we thought of that as well",
    "start": "925399",
    "end": "931079"
  },
  {
    "text": "again all the additional parameters around you know creating an S3 bucket most the time most people use so we",
    "start": "931079",
    "end": "936639"
  },
  {
    "text": "don't need to expose all that most of that cloud formation functionality to the developers just a very simple",
    "start": "936639",
    "end": "943000"
  },
  {
    "text": "logical ID for the bucket that you're creating it could be multiple S3 buckets or Dynamo tables just the minimum amount",
    "start": "943000",
    "end": "949680"
  },
  {
    "text": "of parameters needed to get this thing into production and of course if we need to add more we can always add more on",
    "start": "949680",
    "end": "955319"
  },
  {
    "text": "request keep in mind that logical ID because we'll be talking about it later",
    "start": "955319",
    "end": "960920"
  },
  {
    "text": "so infrastructure in place we have Cloud information we have all the resources in",
    "start": "961240",
    "end": "966560"
  },
  {
    "text": "place now we're ready to configure the base instance how are we going to do that again you're probably thinking the",
    "start": "966560",
    "end": "972600"
  },
  {
    "text": "next thing I'm going to say is talking about configuration Management systems and there are a lot of great ones out there but it turns out Cloud information",
    "start": "972600",
    "end": "980160"
  },
  {
    "text": "actually does a lot of that for you right nothing wrong with any other other systems but we're already using Cloud",
    "start": "980160",
    "end": "985480"
  },
  {
    "text": "information why not just take advantage of all these tools that are built try in and what's great is that it's then",
    "start": "985480",
    "end": "991120"
  },
  {
    "text": "templatized and available to see exactly what went into that instance in order to see you know audit it later or you know",
    "start": "991120",
    "end": "997519"
  },
  {
    "text": "that kind of thing so packages users groups installing F uh you know putting",
    "start": "997519",
    "end": "1002759"
  },
  {
    "text": "files in the Box running even any kind of generic commands I want all possible right inside of cloud",
    "start": "1002759",
    "end": "1009120"
  },
  {
    "text": "formation and so with that we have our base instance configured we have you know open jdk installed we're ready for",
    "start": "1009120",
    "end": "1015720"
  },
  {
    "text": "some Java services and with that I'll hand it over to",
    "start": "1015720",
    "end": "1021480"
  },
  {
    "text": "Mira Thanks Martin as Martin mentioned uh when we first introduced this idea of",
    "start": "1021720",
    "end": "1027600"
  },
  {
    "text": "not being able to log into production I have to be honest with you a lot of us met that idea with the reactions like",
    "start": "1027600",
    "end": "1034520"
  },
  {
    "start": "1034000",
    "end": "1034000"
  },
  {
    "text": "this it's one of skepticism you know we're about to launch a new platform hundreds of instances brand new codebase",
    "start": "1034520",
    "end": "1042199"
  },
  {
    "text": "and we're telling me that the first day we launch this I'm not going to be able to log into the box and the reason is",
    "start": "1042199",
    "end": "1048199"
  },
  {
    "text": "because we tend to fall back on what we've done in the past right for decades on we've been logging into boxes to",
    "start": "1048199",
    "end": "1053600"
  },
  {
    "text": "verify code deployments to check application configuration up check the server.xml files Etc tail log files this",
    "start": "1053600",
    "end": "1061280"
  },
  {
    "text": "is something we've been doing our entire career and when you tell us hey we're not going to be able to do this that's",
    "start": "1061280",
    "end": "1067280"
  },
  {
    "text": "met with you know a reaction of skepticism fortunately for us you know we had members of the team who were",
    "start": "1067280",
    "end": "1073400"
  },
  {
    "text": "really bullish on this idea of Security First you know including our leadership and so we decided you know what let's",
    "start": "1073400",
    "end": "1079559"
  },
  {
    "text": "take a step back you know rather than falling back on what we've know and what we've done in the past this is an",
    "start": "1079559",
    "end": "1085400"
  },
  {
    "text": "opportunity to build a cloud native application what can we do differently and you know this is something you've heard in many lectures but this is",
    "start": "1085400",
    "end": "1091720"
  },
  {
    "text": "really the challenge that when you adopt AWS that you really need to do is challenge yourself to do something in a",
    "start": "1091720",
    "end": "1097120"
  },
  {
    "text": "different way so we went back and we said okay what do we really log into a box for and what are those needs and can",
    "start": "1097120",
    "end": "1102720"
  },
  {
    "text": "we do them differently so the first thing is deploy code you know how do I get how do I get my binary how get those",
    "start": "1102720",
    "end": "1109200"
  },
  {
    "text": "applications onto the Box uh for us what we did is we leveraged AWS code deploy",
    "start": "1109200",
    "end": "1116159"
  },
  {
    "start": "1113000",
    "end": "1113000"
  },
  {
    "text": "uh many of you are probably familiar with code deploy it's basically a service which automates the deployment",
    "start": "1116159",
    "end": "1121600"
  },
  {
    "text": "of your binary files uh onto ec2 instances essentially you have an agent",
    "start": "1121600",
    "end": "1126919"
  },
  {
    "text": "that sits on each ec2 instance that's pulling out constantly to code deploy saying is there a new deployment ready",
    "start": "1126919",
    "end": "1133039"
  },
  {
    "text": "for me is there a new deployment ready for me and when there is it goes through the those series of actions to deploy",
    "start": "1133039",
    "end": "1139400"
  },
  {
    "text": "the application and the manages the binaries on you can choose either GitHub",
    "start": "1139400",
    "end": "1144600"
  },
  {
    "text": "or on S3 the the other really nice aspect of this is that it works seamlessly with the auto scaling groups",
    "start": "1144600",
    "end": "1151240"
  },
  {
    "text": "in ec2 so you're able to do rolling deployments you know you don't have to worry about taking your service down",
    "start": "1151240",
    "end": "1157039"
  },
  {
    "text": "completely you can say okay take one instance down at a time do a rolling deployment of my service uh and make",
    "start": "1157039",
    "end": "1163640"
  },
  {
    "text": "sure that you have U uptime at all times so code deploy is has worked really well",
    "start": "1163640",
    "end": "1169440"
  },
  {
    "text": "for us it you know as I said it works seamlessly with both the ASG and the elbs now you may be thinking oh okay",
    "start": "1169440",
    "end": "1177200"
  },
  {
    "text": "it's not that simple I don't need to just get the binary on the box there's a lot of pre- steps I need to do in the",
    "start": "1177200",
    "end": "1182400"
  },
  {
    "text": "installation there's some validation of the service I I really need to be on the box to to to do some extra steps",
    "start": "1182400",
    "end": "1189880"
  },
  {
    "text": "fortunately code deploy is actually pretty flexible uh this is a sample of an app",
    "start": "1189880",
    "end": "1195039"
  },
  {
    "text": "speec file uh that's included with every deployment as you you can see it provides hooks for you to basically add",
    "start": "1195039",
    "end": "1201559"
  },
  {
    "text": "custom actions before and after the install uh how the application to start up and very importantly how to validate",
    "start": "1201559",
    "end": "1208440"
  },
  {
    "text": "the service after it's started up right I mean typically we've always done that tail the log file make sure it's",
    "start": "1208440",
    "end": "1214039"
  },
  {
    "text": "listening on 880 or whatever it is if it's a web service uh you can write scripts to automate that validation and",
    "start": "1214039",
    "end": "1221039"
  },
  {
    "text": "once those steps are complete then it'll work with the load balancer and the autoscaling group to include this",
    "start": "1221039",
    "end": "1227080"
  },
  {
    "text": "application back into the uh to the elb so that that works out well now you",
    "start": "1227080",
    "end": "1234159"
  },
  {
    "text": "may be thinking also is okay well what what happens when things go wrong you know how do I debug code deployments",
    "start": "1234159",
    "end": "1240200"
  },
  {
    "start": "1238000",
    "end": "1238000"
  },
  {
    "text": "because and I can tell you from experience this happens to us quite a bit not quite a bit but it's happened to us enough especially in the early",
    "start": "1240200",
    "end": "1246320"
  },
  {
    "text": "processes so how do you get visibility when something goes bad in terms of a deployment fortunately for us also code",
    "start": "1246320",
    "end": "1253240"
  },
  {
    "text": "deploy actually gives you pretty detailed auditing of that deployment as you can see here basically lists out",
    "start": "1253240",
    "end": "1259039"
  },
  {
    "text": "every step of the process the duration the status tells you which instances if you're deploying across instances it's",
    "start": "1259039",
    "end": "1265600"
  },
  {
    "text": "succeeded on and in the case of an error you have a pretty detailed event log as well that helps you identify the problem",
    "start": "1265600",
    "end": "1272720"
  },
  {
    "text": "and you know having been in production leveraging the system for a while I can tell you that that has actually um",
    "start": "1272720",
    "end": "1278400"
  },
  {
    "text": "really you know helped us uh tremendously so now uh we we have the",
    "start": "1278400",
    "end": "1286799"
  },
  {
    "start": "1283000",
    "end": "1283000"
  },
  {
    "text": "base instances configured you know we've potentially solved our first problem of",
    "start": "1286799",
    "end": "1292600"
  },
  {
    "text": "deploying code and getting the application running on the box then the typical second thing that we normally",
    "start": "1292600",
    "end": "1298000"
  },
  {
    "text": "like SSH onto a box for from a development point of view is to configure the application how do I you",
    "start": "1298000",
    "end": "1303520"
  },
  {
    "text": "know set how many threads are going to be um you know processing requests what the listen ports are Etc feature Flags",
    "start": "1303520",
    "end": "1311080"
  },
  {
    "text": "how how do I do that if I can't get onto the box for us uh what we did is we adopted",
    "start": "1311080",
    "end": "1317679"
  },
  {
    "text": "this notion of self Discovery right like any microservice architecture we're talking about managing hundreds of",
    "start": "1317679",
    "end": "1323679"
  },
  {
    "text": "instances of you know hundreds of services across we don't want to be logging into boxes to manage",
    "start": "1323679",
    "end": "1330520"
  },
  {
    "text": "configuration over there right so the notion that a service has to be able to discover information about itself and",
    "start": "1330520",
    "end": "1337279"
  },
  {
    "text": "this isn't really anything fancy it sounds fancy but it's three basic steps the first for us was to Leverage The",
    "start": "1337279",
    "end": "1344559"
  },
  {
    "text": "metadata URLs let me take a step back remember remember that ec2 um I'm sorry Leverage",
    "start": "1344559",
    "end": "1351440"
  },
  {
    "text": "The metadata URL so this uh URL if and on any ec2 instance uh this is actually",
    "start": "1351440",
    "end": "1357039"
  },
  {
    "text": "very similar to what Martin showed earlier about getting the access Keys you're able to get a document that tells",
    "start": "1357039",
    "end": "1362520"
  },
  {
    "text": "you about the instance itself right and for us what was key here is the instance ID this is the first thing that gives a",
    "start": "1362520",
    "end": "1370200"
  },
  {
    "text": "service kind of bearing about hey who am I you know and it comes up it gets an instance ID and now it can leverage the",
    "start": "1370200",
    "end": "1377400"
  },
  {
    "text": "second step of the process which is leveraging the AWS SD case so",
    "start": "1377400",
    "end": "1382919"
  },
  {
    "text": "now when a Services comes up the first thing once it grabs an instance ID and knows who it is it's able to Leverage",
    "start": "1382919",
    "end": "1388440"
  },
  {
    "text": "The SDK to get a little bit more information and what we did is we leveraged ec2 tags if you remember uh",
    "start": "1388440",
    "end": "1395240"
  },
  {
    "text": "when Martin talked about cloud formation in the template and it creating all the resources it obviously created these ec2",
    "start": "1395240",
    "end": "1401240"
  },
  {
    "text": "instances as well so it had the opportunity to inject custom information into the ec2 tags for each instance",
    "start": "1401240",
    "end": "1409440"
  },
  {
    "text": "and so this provided a lot of flexibility for us now you might be tempted to start putting more",
    "start": "1409440",
    "end": "1415799"
  },
  {
    "text": "configuration information in here but just a caveat to this is that you don't want to put any you know especially",
    "start": "1415799",
    "end": "1421440"
  },
  {
    "text": "secure information in here right because this is not encrypted it's uh available to anybody who has access to the console",
    "start": "1421440",
    "end": "1428039"
  },
  {
    "text": "Etc and it's not something that you can manage easily by changing very often so",
    "start": "1428039",
    "end": "1433240"
  },
  {
    "text": "we just want to put the minimal amount of information that the instance needs so for us now now that I have the the",
    "start": "1433240",
    "end": "1438559"
  },
  {
    "text": "instance ID I've leveraged the SDK to get a little bit more information about my environment what's the name of my",
    "start": "1438559",
    "end": "1444480"
  },
  {
    "text": "service I'm running in prod and very importantly where the arrows point to where do I go to get more information a",
    "start": "1444480",
    "end": "1451320"
  },
  {
    "text": "config location and this could be an IP address a dyn table whatever it is so",
    "start": "1451320",
    "end": "1456760"
  },
  {
    "text": "that leads to step three of the process is leveraging a secure configuration repository so once the service is up and",
    "start": "1456760",
    "end": "1463919"
  },
  {
    "text": "it knows where to go uh it can reach out and get the data it needs and you can use you know several tools out there you",
    "start": "1463919",
    "end": "1470080"
  },
  {
    "text": "could use something like console if you're a Java shop you can use spring Cloud config uh even custom Solutions",
    "start": "1470080",
    "end": "1476360"
  },
  {
    "text": "like Dynamo DB or Amazon S3 you know the nice thing about Dynamo and S3 are you",
    "start": "1476360",
    "end": "1482320"
  },
  {
    "text": "have very granular am permissions that make sure that only your service can access that particular bucket or that",
    "start": "1482320",
    "end": "1488880"
  },
  {
    "text": "particular table or even that particular primary key in a shared table um so once",
    "start": "1488880",
    "end": "1494760"
  },
  {
    "text": "the application has this then it's able to retrieve its feature Flags you know thread pool sizing listen ports Etc and",
    "start": "1494760",
    "end": "1501279"
  },
  {
    "text": "now the application can come up in in function so now we have the instance is",
    "start": "1501279",
    "end": "1506679"
  },
  {
    "text": "configured the app is up and now it's time to talk to the outside world and for that I'll hand it back to",
    "start": "1506679",
    "end": "1513919"
  },
  {
    "text": "Martin thanks mza so at this point you're thinking okay if you're familiar with deployment",
    "start": "1513919",
    "end": "1520440"
  },
  {
    "text": "models you have on one hand fully baked Amis on the other on the other end of",
    "start": "1520440",
    "end": "1525960"
  },
  {
    "text": "the spectrum you have uh fully bootst strapped IM fully bootstrapped instances and so far we've talked about the fully",
    "start": "1525960",
    "end": "1532240"
  },
  {
    "text": "bootstrapped model right and you if you're familiar with it you probably think there's some potential downsides of potential challenges with this model",
    "start": "1532240",
    "end": "1538640"
  },
  {
    "text": "and you're would be that would be accurate so there's a few so there's really two main ones but",
    "start": "1538640",
    "end": "1545200"
  },
  {
    "start": "1540000",
    "end": "1540000"
  },
  {
    "text": "uh the one that were the two main concerns would be one is this how do I",
    "start": "1545200",
    "end": "1550360"
  },
  {
    "text": "go out and get packages and libraries from the instance how do I make sure that's secure it's not being you know",
    "start": "1550360",
    "end": "1556399"
  },
  {
    "text": "man in the- Middle attacked things like that uh also for stability you know we want to make sure that you're not just",
    "start": "1556399",
    "end": "1562000"
  },
  {
    "text": "getting maybe latest you want to get version dependencies and you know there's and so there's a couple of",
    "start": "1562000",
    "end": "1567320"
  },
  {
    "text": "concerns there but we found that you can mostly mitigate those through you know local repos using artifactory Nexus OSS",
    "start": "1567320",
    "end": "1574039"
  },
  {
    "text": "things of that nature and making sure that you're explicit in your dependency management inside of your",
    "start": "1574039",
    "end": "1579840"
  },
  {
    "text": "application the other one is autoscaling so obviously when you're full of bootstrapping instances and when",
    "start": "1579840",
    "end": "1585880"
  },
  {
    "text": "you're Auto scaling you're going to end up with a couple more minutes Auto scaling time and you know what we saw in",
    "start": "1585880",
    "end": "1592559"
  },
  {
    "text": "practice for us was you know leveraging Amazon Linux which has a lot of stuff pre-installed really only installing",
    "start": "1592559",
    "end": "1598679"
  },
  {
    "text": "open jdk uh for you know for example for Java instances maybe a couple other minor dependencies it wasn't really",
    "start": "1598679",
    "end": "1604200"
  },
  {
    "text": "going to take that much longer to Auto scale maybe another couple minutes and in general uh if we were autoscaling we",
    "start": "1604200",
    "end": "1610880"
  },
  {
    "text": "knew that we were going to have like an email campaign it was going to be mostly pretty predictable so a couple minutes of Auto scaling wasn't a huge deal",
    "start": "1610880",
    "end": "1618559"
  },
  {
    "text": "but there is a potential if you do have a need for really quick autoscaling that",
    "start": "1618559",
    "end": "1623919"
  },
  {
    "text": "there might be some concerns with this bootstrapping model and in general you know maybe what we know we're thinking",
    "start": "1623919",
    "end": "1630039"
  },
  {
    "text": "of is okay we so far we've talked about how to lock ourselves out of production but hasn't necessarily been a strictly",
    "start": "1630039",
    "end": "1636840"
  },
  {
    "text": "immutable uh piece of infrastructure right we are making changes with code deploy which again is automated and it",
    "start": "1636840",
    "end": "1643120"
  },
  {
    "text": "and it meets our goals but it's not 100% immutable and there's some potential challenges so maybe is there a way that",
    "start": "1643120",
    "end": "1649399"
  },
  {
    "text": "we can combine those first two layers there and combine code deployment with the base instance configuration to make",
    "start": "1649399",
    "end": "1655679"
  },
  {
    "text": "a more mutable component there for that those bottom two and make it faster for",
    "start": "1655679",
    "end": "1661200"
  },
  {
    "text": "auto scaling and easier to deploy and so of course in 2016 I have to talk about",
    "start": "1661200",
    "end": "1667519"
  },
  {
    "text": "Docker so what is Docker uh probably most of you know but real quick I'll",
    "start": "1667519",
    "end": "1673799"
  },
  {
    "text": "review Docker essentially on the left hand side that's your standard configuration there you have a",
    "start": "1673799",
    "end": "1679960"
  },
  {
    "start": "1674000",
    "end": "1674000"
  },
  {
    "text": "hypervisor you deploy everything right on top of the hypervisor in your uh main OS your guest",
    "start": "1679960",
    "end": "1686080"
  },
  {
    "text": "OS and then your other model is that you use the docker engine which is what",
    "start": "1686080",
    "end": "1691320"
  },
  {
    "text": "Docker does which allows you to essentially deploy your applications inside of a process container uh on the",
    "start": "1691320",
    "end": "1697720"
  },
  {
    "text": "on the standard Amazon Linux images right so essentially Docker runs the process uh inside of the operating",
    "start": "1697720",
    "end": "1703360"
  },
  {
    "text": "system and creates kind of a virtual OS container for you and so it just helps to just really honestly look at what a",
    "start": "1703360",
    "end": "1710240"
  },
  {
    "text": "Docker file looks like a standard Docker file so this is honestly a standard python app flask app that uh you would",
    "start": "1710240",
    "end": "1716799"
  },
  {
    "text": "use hello world and as you can see I literally do everything from top to bottom on bootstrapping this thing uh",
    "start": "1716799",
    "end": "1723440"
  },
  {
    "text": "inside of my Docker file so no changes needed to the application I simply say which drro I want what ports I want to",
    "start": "1723440",
    "end": "1730240"
  },
  {
    "text": "expose which things need to be installed just like I was showing before with Cloud information I put that into a Docker",
    "start": "1730240",
    "end": "1735799"
  },
  {
    "text": "file now if you're not familiar with Docker you might be thinking well okay",
    "start": "1735799",
    "end": "1740880"
  },
  {
    "text": "uh that's still a couple hundred Megs right that's still going to be the same challenge as Amis you have to pull down the images it's going to be slow but it",
    "start": "1740880",
    "end": "1747760"
  },
  {
    "text": "turns out that Docker is extremely intelligent about how it layers its",
    "start": "1747760",
    "end": "1754080"
  },
  {
    "text": "containers so every container is layered based on each line of that Docker file so if I only make changes to the bottom",
    "start": "1754080",
    "end": "1760799"
  },
  {
    "text": "two layers there it's only going to be very small changes that get deployed into production so it's very fast there's not a whole baking process that",
    "start": "1760799",
    "end": "1767000"
  },
  {
    "text": "has to go into place docker builds are very quick and of course most most importantly it allows me to take a",
    "start": "1767000",
    "end": "1772039"
  },
  {
    "text": "container locally starting 100% locally and move it all the way through to production have a completely immutable",
    "start": "1772039",
    "end": "1779080"
  },
  {
    "text": "you know it uses Shaw hash to make sure that nothing is changed going from one one piece of INF one environment to the",
    "start": "1779080",
    "end": "1785880"
  },
  {
    "text": "next so really powerful tool for auditing um and even if you're worried from a security perspective well how am",
    "start": "1785880",
    "end": "1791919"
  },
  {
    "text": "I you know worried about you know if I'm worried about container security Etc even if you only run one container on",
    "start": "1791919",
    "end": "1797279"
  },
  {
    "text": "each instance you still get a lot of those benefits so got those bottom three",
    "start": "1797279",
    "end": "1803240"
  },
  {
    "text": "layers covered and now we're ready to configure the application and there's a lot to",
    "start": "1803240",
    "end": "1808600"
  },
  {
    "text": "configure right Dynamo tables KMS Keys sqsq how do we figure out what all those",
    "start": "1808600",
    "end": "1813640"
  },
  {
    "text": "endpoints are well remember Mira talked about",
    "start": "1813640",
    "end": "1819159"
  },
  {
    "text": "those ec2 tags you know Cloud information puts the stack name right there in the tag for me right and so",
    "start": "1819159",
    "end": "1825360"
  },
  {
    "text": "every one of these ec2 instances that I deploy with cl information I can use that when I'm getting all those tags and",
    "start": "1825360",
    "end": "1832320"
  },
  {
    "text": "know exactly where to go and make an API call to list stack resources and get all",
    "start": "1832320",
    "end": "1837640"
  },
  {
    "text": "the resources that were deployed as part of that stack now remember I said don't forget about the logical IDs earlier",
    "start": "1837640",
    "end": "1844399"
  },
  {
    "text": "this is important because there's a a physical ID mapping so that logical ID",
    "start": "1844399",
    "end": "1849679"
  },
  {
    "text": "that the developer put developer put into that metadata for their S3 bucket or Dynamo table is now has a really nice",
    "start": "1849679",
    "end": "1856159"
  },
  {
    "text": "mapping to a physical ID that they can use use in inside their code and make calls out and of course we we you know",
    "start": "1856159",
    "end": "1863200"
  },
  {
    "text": "Mir andam built a library to help abstract this away from the developers one last thing is credentials",
    "start": "1863200",
    "end": "1872440"
  },
  {
    "start": "1871000",
    "end": "1871000"
  },
  {
    "text": "right how am I going to manage credentials how you know am I going to have some kind of Vault or something like that to keep credentials in and you",
    "start": "1872440",
    "end": "1880480"
  },
  {
    "text": "might say well this is sort of a cop out but we actually didn't have any credentials why because we use Dynamo we",
    "start": "1880480",
    "end": "1885559"
  },
  {
    "text": "use S3 we use sqs and you're probably familiar enough to know that when you use these managed Services you don't",
    "start": "1885559",
    "end": "1891080"
  },
  {
    "text": "have credentials ec2 rolls handles all of your credentials for you as or if you're using Lambda then that has",
    "start": "1891080",
    "end": "1897639"
  },
  {
    "text": "built-in uh rotation of credentials so you really don't when you're using that model you don't even have to worry about",
    "start": "1897639",
    "end": "1903559"
  },
  {
    "text": "provisioning credentials at all if you do need something like RDS databases then you can still leverage the same IM",
    "start": "1903559",
    "end": "1910159"
  },
  {
    "text": "permissions using KMS to encrypt those credentials that are generated when the database is start up started up and",
    "start": "1910159",
    "end": "1917080"
  },
  {
    "text": "encrypt those and put maybe new environment variables or something like that",
    "start": "1917080",
    "end": "1922559"
  },
  {
    "text": "so with that everything's into production we're ready to start monitoring that for that I'll hand it",
    "start": "1922559",
    "end": "1928760"
  },
  {
    "text": "back to Miro Thanks Martin so now the",
    "start": "1928760",
    "end": "1933960"
  },
  {
    "text": "application's up it knows how to configure itself it knows how to speak to the outside world and then the",
    "start": "1933960",
    "end": "1940039"
  },
  {
    "text": "question becomes well how is it running right how is it performing in production and this is something that many of us",
    "start": "1940039",
    "end": "1946000"
  },
  {
    "text": "have always logged into the boxes for right this probably the number one primary need of why we even need to log into boxes is how do I validate",
    "start": "1946000",
    "end": "1953519"
  },
  {
    "text": "everything's going well in production you know a good Dane production may look something like this",
    "start": "1953519",
    "end": "1959600"
  },
  {
    "start": "1957000",
    "end": "1957000"
  },
  {
    "text": "right this is a sample of an app Dynamics dashboard where each of these nodes represents a service could be",
    "start": "1959600",
    "end": "1965480"
  },
  {
    "text": "multiple instances in each and you know Green is generally a side sign of good",
    "start": "1965480",
    "end": "1970519"
  },
  {
    "text": "right this is what we we hope for and this is the the kind of the the the standard that we're trying to meet and",
    "start": "1970519",
    "end": "1977000"
  },
  {
    "text": "at that time we know we really don't need SSH we're not missing it it's not a problem but what happens when we get",
    "start": "1977000",
    "end": "1982159"
  },
  {
    "text": "that page at 2: in the morning we log in and dashboard looks like this right I mean many of us have seen that where",
    "start": "1982159",
    "end": "1988639"
  },
  {
    "text": "we're calling you know we're just waking up and we're looking in and wow everything is down what do I do now",
    "start": "1988639",
    "end": "1995279"
  },
  {
    "text": "right now I've I've locked myself out of production you know is my reaction going to be something like this where I can't",
    "start": "1995279",
    "end": "2002320"
  },
  {
    "text": "go back to what I've done in my entire career you know I I need to do a kill dash3 I want to run a thread dump I need",
    "start": "2002320",
    "end": "2007960"
  },
  {
    "text": "to get onto the Box what am I going to do and so for us you know this we had this notion of you know keep calm you",
    "start": "2007960",
    "end": "2014320"
  },
  {
    "text": "and turn debug on and what I mean by that is you know we really didn't turn debug on in this case but quite honestly",
    "start": "2014320",
    "end": "2021840"
  },
  {
    "text": "the amount of information that's available in this environment it's as if you have debug on you know the first",
    "start": "2021840",
    "end": "2027639"
  },
  {
    "start": "2022000",
    "end": "2022000"
  },
  {
    "text": "thing is leveraging like Cloud watch and so on you have so many metrics available",
    "start": "2027639",
    "end": "2033159"
  },
  {
    "text": "to you so much data available to you it's almost as if you had debug on um so so first thing that we had is principle",
    "start": "2033159",
    "end": "2040200"
  },
  {
    "text": "that we had was that all logs are immediately shipped off of the box right is that we had to be comfortable with",
    "start": "2040200",
    "end": "2046679"
  },
  {
    "text": "log data being immediately off the Box no need for somebody to keep an instance",
    "start": "2046679",
    "end": "2052480"
  },
  {
    "text": "alive for us to be able to uh log into it that we're not going to lose anything we're not going to lose any sleep if an",
    "start": "2052480",
    "end": "2057960"
  },
  {
    "text": "instance dies at any given time and there's many tools you can use obviously for that right log stash elk you can use",
    "start": "2057960",
    "end": "2065118"
  },
  {
    "text": "um Splunk Etc you can also write to the cloudwatch logs and you Leverage The",
    "start": "2065119",
    "end": "2070960"
  },
  {
    "text": "subscriptions there so you really want to build that realtime dashboard that gives you very good visibility into your",
    "start": "2070960",
    "end": "2078599"
  },
  {
    "text": "production system and this has to be key obviously with microservices and it's critical especially if you can't get",
    "start": "2078599",
    "end": "2084720"
  },
  {
    "text": "onto that machine the other thing obviously is proactive monitoring right is as I",
    "start": "2084720",
    "end": "2091320"
  },
  {
    "text": "mentioned you have so many metrics available to you through cloudwatch whether it's you know CPU utilization discs memory Etc",
    "start": "2091320",
    "end": "2098160"
  },
  {
    "text": "you can also and this is what we do as well is leverage an APM solution you know such as New Relic or app Dynamics",
    "start": "2098160",
    "end": "2104720"
  },
  {
    "text": "and and now the the new one x-ray right so there's a lot of tools that are available to you to monitor this",
    "start": "2104720",
    "end": "2110599"
  },
  {
    "text": "proactively uh up front and the other thing is also that's helped us is",
    "start": "2110599",
    "end": "2115720"
  },
  {
    "text": "building in advanced health checks uh if you're using something like spring actuator and you could and there's many",
    "start": "2115720",
    "end": "2121079"
  },
  {
    "text": "packages that do this but this is just one example uh you you get built-in uh health checks that are available to you",
    "start": "2121079",
    "end": "2127440"
  },
  {
    "text": "you get built-in routes that provide metrics service information uh thread dumps even environment information you",
    "start": "2127440",
    "end": "2134800"
  },
  {
    "text": "want to really bake that into your application up front so that when things go bad you're not looking at I wish I",
    "start": "2134800",
    "end": "2141960"
  },
  {
    "text": "had this information it has to be baked into the process UPF front and that was you know really key about making the",
    "start": "2141960",
    "end": "2148839"
  },
  {
    "text": "decision to turn SSH off in production up front that drove us to to enable a",
    "start": "2148839",
    "end": "2154400"
  },
  {
    "text": "lot of these functionality because typically if you have that uh concept available to you then you're less",
    "start": "2154400",
    "end": "2160000"
  },
  {
    "text": "motivated to build a lot of these things up front in your application so what are the other",
    "start": "2160000",
    "end": "2166440"
  },
  {
    "start": "2164000",
    "end": "2164000"
  },
  {
    "text": "implications on development you know so now we're we're feeling pretty good about monitoring the application we know",
    "start": "2166440",
    "end": "2171720"
  },
  {
    "text": "what's going on uh we have good visibility into it what are some of the other things that we had to consider uh",
    "start": "2171720",
    "end": "2177319"
  },
  {
    "text": "the first you know as I mentioned earlier is that all instances must be femoral we have to be comfortable with",
    "start": "2177319",
    "end": "2182440"
  },
  {
    "text": "an instance being terminated at any given time and you know have no angst about it and this is really you know it",
    "start": "2182440",
    "end": "2189040"
  },
  {
    "text": "fits the microservices Paradigm you know so there's no application State that's written to the dis uh this is again key",
    "start": "2189040",
    "end": "2194960"
  },
  {
    "text": "for auto scaling right because you want to be able to scale up and scale right back down without having um any any",
    "start": "2194960",
    "end": "2201760"
  },
  {
    "text": "consequences for that and the other thing is really to make this possible it has to be cheap to manufacture you know",
    "start": "2201760",
    "end": "2208319"
  },
  {
    "text": "going back to that portable camera right if the if the camera breaks you just throw it away there's no angst you're",
    "start": "2208319",
    "end": "2214319"
  },
  {
    "text": "not going to lose any sleep over it because there hasn't been a human that went into production configured the",
    "start": "2214319",
    "end": "2219880"
  },
  {
    "text": "server spent the weekend getting a brand new instance up it was literally a man manner of logging in going to the",
    "start": "2219880",
    "end": "2226760"
  },
  {
    "text": "autoscaling group and saying yeah you know what go from 3 to six that was it that's what took it to go to Six",
    "start": "2226760",
    "end": "2232359"
  },
  {
    "text": "instances and that's what took it to go back down so there's no emotional attachment to",
    "start": "2232359",
    "end": "2238720"
  },
  {
    "text": "instances then uh you know we always have to ask ourselves okay what what happens when you know something really",
    "start": "2240839",
    "end": "2246760"
  },
  {
    "text": "bad goes happens right like what if I really need access to that disc you know",
    "start": "2246760",
    "end": "2252160"
  },
  {
    "text": "what am I going to do maybe it's for forensics reasons Etc uh you know the nice thing is you know if you have an",
    "start": "2252160",
    "end": "2257760"
  },
  {
    "text": "EBS backed instance you kind of follow the standard protocol that you would if you lost your SSH key for example so you",
    "start": "2257760",
    "end": "2264760"
  },
  {
    "text": "can snapshot that instance mount it to another instance with SSH if you need to",
    "start": "2264760",
    "end": "2270000"
  },
  {
    "text": "and you're you'll be able to access the disc if you really have to do that um what about if I need to do like a thread",
    "start": "2270000",
    "end": "2276440"
  },
  {
    "text": "dump you know I'm trying to tr double shoot Deadlocks Etc uh you can put in standardized logging on Startup and",
    "start": "2276440",
    "end": "2281960"
  },
  {
    "text": "shutdown sequences uh in your application they give you this information up front the key is really",
    "start": "2281960",
    "end": "2287280"
  },
  {
    "text": "to kind of think about what are you going to need when that happens and try to make sure you put it in up front so you're not left you know 2 in the",
    "start": "2287280",
    "end": "2293880"
  },
  {
    "text": "morning uh wishing you had that data available to you so then you know we're we're feeling",
    "start": "2293880",
    "end": "2301480"
  },
  {
    "start": "2299000",
    "end": "2299000"
  },
  {
    "text": "a little bit more comfortable now about about the application running and we know that nobody's come logging into the",
    "start": "2301480",
    "end": "2306920"
  },
  {
    "text": "box not changing config they don't have access to credentials on the box so we feel good about that then the focus for",
    "start": "2306920",
    "end": "2314079"
  },
  {
    "text": "us you know from a development point of view becomes how do we secure that code pipeline right how do we make sure all",
    "start": "2314079",
    "end": "2320960"
  },
  {
    "text": "changes of you know or version accordingly that are getting onto that box we also have to make sure that the",
    "start": "2320960",
    "end": "2327520"
  },
  {
    "text": "ability to deploy code right through code deploy for example is controlled through I am roles and we have to have",
    "start": "2327520",
    "end": "2334160"
  },
  {
    "text": "close watch uh on that process and the nice thing is you have you know cloud trail logging that tells you who",
    "start": "2334160",
    "end": "2340119"
  },
  {
    "text": "initiated deployments when it happened Etc and you can create alerts on this as",
    "start": "2340119",
    "end": "2345200"
  },
  {
    "text": "well uh on the development side we also have to make sure our source code is sanitized too right because now we're",
    "start": "2345200",
    "end": "2351800"
  },
  {
    "text": "dealing with since nobody's logging onto the Box physically how do you prevent malicious code from being deployed there",
    "start": "2351800",
    "end": "2358200"
  },
  {
    "text": "so really it's it's focusing back on having a a green room environment like a Nexus OSS Etc and maintaining clean",
    "start": "2358200",
    "end": "2365720"
  },
  {
    "text": "package dependencies if you're using a maven or ant you can put in like an oasp",
    "start": "2365720",
    "end": "2371200"
  },
  {
    "text": "dependency check where it'll check all the dependencies that you're pulling in and it'll tell you if there's any known",
    "start": "2371200",
    "end": "2376800"
  },
  {
    "text": "vulner vulnerabilities within those uh packages then it's also you know adding",
    "start": "2376800",
    "end": "2382160"
  },
  {
    "text": "static analysis to your code as well right so you can leverage tools like parasoft fortify veric code Etc there's",
    "start": "2382160",
    "end": "2388480"
  },
  {
    "text": "a whole variety of tools out there but the focus becomes securing the pipeline",
    "start": "2388480",
    "end": "2394200"
  },
  {
    "text": "of the code before it gets uh onto the Box",
    "start": "2394200",
    "end": "2399319"
  },
  {
    "text": "and with that I'll transition back to Martin",
    "start": "2399359",
    "end": "2406119"
  },
  {
    "text": "so one more note about the pipelines you know at Professional Services we consult",
    "start": "2406119",
    "end": "2411400"
  },
  {
    "text": "with a lot of big Enterprises doing migration and one of the things you know I work with a security team or security",
    "start": "2411400",
    "end": "2416960"
  },
  {
    "text": "uh practice and one thing that we're really focusing a lot on is this idea that rather than you know dealing with",
    "start": "2416960",
    "end": "2423319"
  },
  {
    "text": "security on the instances themselves we need to get earlier in this process you know talking about Dev SEC Ops is a big",
    "start": "2423319",
    "end": "2428960"
  },
  {
    "text": "buzz word now and really in order to scale security you really need to be earlier in the process and more",
    "start": "2428960",
    "end": "2434599"
  },
  {
    "text": "automated secure way and so we do a lot with this and you know I definitely encourage you guys to look at more of some of the dev SEC Ops tools to help",
    "start": "2434599",
    "end": "2441640"
  },
  {
    "text": "with that pipeline automation so you've done all that and you might be",
    "start": "2441640",
    "end": "2447119"
  },
  {
    "start": "2444000",
    "end": "2444000"
  },
  {
    "text": "thinking some of you might have even you know tried to implement so a break last in case of emergency scenario right if",
    "start": "2447119",
    "end": "2453400"
  },
  {
    "text": "something goes wrong maybe I'm going have an SSH key and S3 somewhere probably saying Martin isn't that okay",
    "start": "2453400",
    "end": "2459079"
  },
  {
    "text": "if we just have like one you know secured key and the challenge is is that",
    "start": "2459079",
    "end": "2464240"
  },
  {
    "text": "not only you going to have that key floating around but then you also still have SSH installed on the boxes themselves whereas otherwise you",
    "start": "2464240",
    "end": "2470119"
  },
  {
    "text": "wouldn't you could just you know uh you could uh uninstall SS lock down those ports Etc um but in this case you would",
    "start": "2470119",
    "end": "2477240"
  },
  {
    "text": "still have to have that installed this kind of goes back to that conversation earlier this year with uh",
    "start": "2477240",
    "end": "2482599"
  },
  {
    "text": "back doors into devices right once that back door is there anybody can use it",
    "start": "2482599",
    "end": "2488680"
  },
  {
    "text": "so no break glass in case of emergency no back doors into",
    "start": "2488680",
    "end": "2494280"
  },
  {
    "text": "production and that brings us back to our two questions that we talked about at the top of the session the questions",
    "start": "2494280",
    "end": "2500160"
  },
  {
    "text": "that we ask no matter what the scenario you know there might be some Al alternative problems here you're probably thinking what about this what",
    "start": "2500160",
    "end": "2506359"
  },
  {
    "text": "about this but my answer is always going to be let's ask the same two questions how are we going to get changes into",
    "start": "2506359",
    "end": "2512119"
  },
  {
    "text": "production in a completely automated way so that's it's always auditable and how are we going to get the data that we need off the the boxes so that if we do",
    "start": "2512119",
    "end": "2518200"
  },
  {
    "text": "need to debug we can do that in Dev get our information and push it all the way through to",
    "start": "2518200",
    "end": "2523880"
  },
  {
    "text": "production and so because we think we were able to solve this this is what we were able to",
    "start": "2523880",
    "end": "2529960"
  },
  {
    "text": "do with our production environment no SSH keys and lock down permissions and",
    "start": "2529960",
    "end": "2535480"
  },
  {
    "text": "so we started this two years ago and in two years the number of times we've logged in is",
    "start": "2535480",
    "end": "2542240"
  },
  {
    "text": "zero thank you very much [Applause]",
    "start": "2542240",
    "end": "2548829"
  }
]