[
  {
    "start": "0",
    "end": "55000"
  },
  {
    "text": "hi my name is philip zaha and i'm a",
    "start": "160",
    "end": "2000"
  },
  {
    "text": "specialist solutions architect for iot",
    "start": "2000",
    "end": "4160"
  },
  {
    "text": "at amazon web services",
    "start": "4160",
    "end": "6000"
  },
  {
    "text": "i will talk about aws iot core and",
    "start": "6000",
    "end": "8480"
  },
  {
    "text": "amazon timestream integration that means",
    "start": "8480",
    "end": "10559"
  },
  {
    "text": "how you can ingest data from your iot",
    "start": "10559",
    "end": "12559"
  },
  {
    "text": "devices",
    "start": "12559",
    "end": "13280"
  },
  {
    "text": "into amazon timestream what i'm going to",
    "start": "13280",
    "end": "16480"
  },
  {
    "text": "cover is",
    "start": "16480",
    "end": "17199"
  },
  {
    "text": "the architecture to ingest iot data what",
    "start": "17199",
    "end": "19920"
  },
  {
    "text": "an iot rule is",
    "start": "19920",
    "end": "21199"
  },
  {
    "text": "and how it works how to create a",
    "start": "21199",
    "end": "23760"
  },
  {
    "text": "database",
    "start": "23760",
    "end": "24400"
  },
  {
    "text": "and table in amazon timestream create an",
    "start": "24400",
    "end": "27039"
  },
  {
    "text": "iot rule",
    "start": "27039",
    "end": "28240"
  },
  {
    "text": "ingest data into aws iot core with a",
    "start": "28240",
    "end": "30960"
  },
  {
    "text": "data generating script",
    "start": "30960",
    "end": "32719"
  },
  {
    "text": "do some simple queries and do some basic",
    "start": "32719",
    "end": "35120"
  },
  {
    "text": "troubleshooting",
    "start": "35120",
    "end": "37200"
  },
  {
    "text": "there's also a brief story behind this",
    "start": "37200",
    "end": "38960"
  },
  {
    "text": "example setup",
    "start": "38960",
    "end": "40399"
  },
  {
    "text": "you have sensors and buildings which",
    "start": "40399",
    "end": "42239"
  },
  {
    "text": "measure humidity",
    "start": "42239",
    "end": "43600"
  },
  {
    "text": "pressure and temperature apart from the",
    "start": "43600",
    "end": "46399"
  },
  {
    "text": "measures",
    "start": "46399",
    "end": "47120"
  },
  {
    "text": "the sensors will also report the",
    "start": "47120",
    "end": "49039"
  },
  {
    "text": "building name and room number where they",
    "start": "49039",
    "end": "51120"
  },
  {
    "text": "are located",
    "start": "51120",
    "end": "52160"
  },
  {
    "text": "as well as the device id",
    "start": "52160",
    "end": "55920"
  },
  {
    "start": "55000",
    "end": "189000"
  },
  {
    "text": "let's take a look at the architecture to",
    "start": "56000",
    "end": "58000"
  },
  {
    "text": "ingest iot data into amazon timestream",
    "start": "58000",
    "end": "60399"
  },
  {
    "text": "in general",
    "start": "60399",
    "end": "62160"
  },
  {
    "text": "on the left side you have your iot",
    "start": "62160",
    "end": "63840"
  },
  {
    "text": "devices they are sending data to aws iot",
    "start": "63840",
    "end": "67280"
  },
  {
    "text": "core",
    "start": "67280",
    "end": "68159"
  },
  {
    "text": "a topic rule then injures data into",
    "start": "68159",
    "end": "70400"
  },
  {
    "text": "amazon timestream",
    "start": "70400",
    "end": "73520"
  },
  {
    "text": "now let's take a look at the topic and",
    "start": "73520",
    "end": "75360"
  },
  {
    "text": "message payload",
    "start": "75360",
    "end": "76640"
  },
  {
    "text": "your devices are sending data by using",
    "start": "76640",
    "end": "78880"
  },
  {
    "text": "the mqtt protocol",
    "start": "78880",
    "end": "80479"
  },
  {
    "text": "or via https these data are published as",
    "start": "80479",
    "end": "84240"
  },
  {
    "text": "a json object to a so-called",
    "start": "84240",
    "end": "86000"
  },
  {
    "text": "topic in our example sends was published",
    "start": "86000",
    "end": "89439"
  },
  {
    "text": "to the topic",
    "start": "89439",
    "end": "90400"
  },
  {
    "text": "dt slash sensor slash device id",
    "start": "90400",
    "end": "94960"
  },
  {
    "text": "the device id is the id of a particular",
    "start": "94960",
    "end": "97920"
  },
  {
    "text": "sensor",
    "start": "97920",
    "end": "98720"
  },
  {
    "text": "in this example the device id is sensor",
    "start": "98720",
    "end": "101920"
  },
  {
    "text": "underline 0 2. in the message payload",
    "start": "101920",
    "end": "105520"
  },
  {
    "text": "you can find the measures humidity",
    "start": "105520",
    "end": "107680"
  },
  {
    "text": "pressure and temperature and the",
    "start": "107680",
    "end": "109840"
  },
  {
    "text": "dimensions device id",
    "start": "109840",
    "end": "111680"
  },
  {
    "text": "building and room dimensions and",
    "start": "111680",
    "end": "114560"
  },
  {
    "text": "measures are terms from amazon",
    "start": "114560",
    "end": "116159"
  },
  {
    "text": "timestream",
    "start": "116159",
    "end": "117439"
  },
  {
    "text": "an entry in amazon timestream contains",
    "start": "117439",
    "end": "119759"
  },
  {
    "text": "dimensions and",
    "start": "119759",
    "end": "120719"
  },
  {
    "text": "measures dimensions are attributes",
    "start": "120719",
    "end": "124240"
  },
  {
    "text": "that describes the metadata of the time",
    "start": "124240",
    "end": "126560"
  },
  {
    "text": "series",
    "start": "126560",
    "end": "127520"
  },
  {
    "text": "and measures are attributes that",
    "start": "127520",
    "end": "130080"
  },
  {
    "text": "describe the data of the time series",
    "start": "130080",
    "end": "134160"
  },
  {
    "text": "and here you can see the iot rule which",
    "start": "134160",
    "end": "137040"
  },
  {
    "text": "ingests",
    "start": "137040",
    "end": "137520"
  },
  {
    "text": "data into amazon timestream an iot rule",
    "start": "137520",
    "end": "141200"
  },
  {
    "text": "consists of a sql statement",
    "start": "141200",
    "end": "143280"
  },
  {
    "text": "a topic filter and a rule action",
    "start": "143280",
    "end": "146480"
  },
  {
    "text": "with a sql statement you select humidity",
    "start": "146480",
    "end": "149040"
  },
  {
    "text": "pressure and temperature from the topic",
    "start": "149040",
    "end": "151680"
  },
  {
    "text": "dt sensor slash hash",
    "start": "151680",
    "end": "156319"
  },
  {
    "text": "hash is an mqtt wildcard the wildcard is",
    "start": "156319",
    "end": "159840"
  },
  {
    "text": "used here to receive",
    "start": "159840",
    "end": "161200"
  },
  {
    "text": "messages published by all sensors",
    "start": "161200",
    "end": "164400"
  },
  {
    "text": "values extracted by the select statement",
    "start": "164400",
    "end": "167040"
  },
  {
    "text": "are stored as",
    "start": "167040",
    "end": "168000"
  },
  {
    "text": "measures in amazon time stream in the",
    "start": "168000",
    "end": "171040"
  },
  {
    "text": "rule action for amazon time stream",
    "start": "171040",
    "end": "173200"
  },
  {
    "text": "you define which dimensions should be",
    "start": "173200",
    "end": "175280"
  },
  {
    "text": "stored",
    "start": "175280",
    "end": "176400"
  },
  {
    "text": "each dimension consists of a name value",
    "start": "176400",
    "end": "179360"
  },
  {
    "text": "pair",
    "start": "179360",
    "end": "180640"
  },
  {
    "text": "in this example we use the values from",
    "start": "180640",
    "end": "182879"
  },
  {
    "text": "the message payload",
    "start": "182879",
    "end": "184959"
  },
  {
    "text": "and now i will show you how to implement",
    "start": "184959",
    "end": "187200"
  },
  {
    "text": "this architecture",
    "start": "187200",
    "end": "190080"
  },
  {
    "start": "189000",
    "end": "256000"
  },
  {
    "text": "in the first step i will create a",
    "start": "190080",
    "end": "191680"
  },
  {
    "text": "database and a table in amazon",
    "start": "191680",
    "end": "193440"
  },
  {
    "text": "timestream",
    "start": "193440",
    "end": "194720"
  },
  {
    "text": "here you can see the timestream section",
    "start": "194720",
    "end": "196640"
  },
  {
    "text": "of the aws management console",
    "start": "196640",
    "end": "199360"
  },
  {
    "text": "i chose create database and then",
    "start": "199360",
    "end": "202319"
  },
  {
    "text": "standard database",
    "start": "202319",
    "end": "204400"
  },
  {
    "text": "i will use iot for my database name",
    "start": "204400",
    "end": "209200"
  },
  {
    "text": "leave encryption settings as they are",
    "start": "209440",
    "end": "211680"
  },
  {
    "text": "and create database",
    "start": "211680",
    "end": "214720"
  },
  {
    "text": "now i can create a table here under",
    "start": "214720",
    "end": "217360"
  },
  {
    "text": "tables",
    "start": "217360",
    "end": "218959"
  },
  {
    "text": "create a table i will choose the",
    "start": "218959",
    "end": "221519"
  },
  {
    "text": "database are you teachers that i just",
    "start": "221519",
    "end": "223599"
  },
  {
    "text": "created",
    "start": "223599",
    "end": "224959"
  },
  {
    "text": "use cinder data as my table name",
    "start": "224959",
    "end": "229360"
  },
  {
    "text": "and i will pick some arbitrary values",
    "start": "229920",
    "end": "232640"
  },
  {
    "text": "here for the data retention",
    "start": "232640",
    "end": "235200"
  },
  {
    "text": "like one day for memory store retention",
    "start": "235200",
    "end": "238400"
  },
  {
    "text": "and five days for magnetic store",
    "start": "238400",
    "end": "241760"
  },
  {
    "text": "attention",
    "start": "241760",
    "end": "244239"
  },
  {
    "text": "create the table",
    "start": "244319",
    "end": "247280"
  },
  {
    "text": "and that's it i have created a database",
    "start": "247599",
    "end": "250400"
  },
  {
    "text": "named iot",
    "start": "250400",
    "end": "251680"
  },
  {
    "text": "and a table named sensor data within",
    "start": "251680",
    "end": "254400"
  },
  {
    "text": "that database",
    "start": "254400",
    "end": "257280"
  },
  {
    "start": "256000",
    "end": "521000"
  },
  {
    "text": "now i'm going to create an iot rule i'm",
    "start": "257359",
    "end": "260320"
  },
  {
    "text": "using the iot core",
    "start": "260320",
    "end": "261680"
  },
  {
    "text": "section of the aws management console",
    "start": "261680",
    "end": "265120"
  },
  {
    "text": "rules are created under act",
    "start": "265120",
    "end": "268560"
  },
  {
    "text": "rules create a rule",
    "start": "268560",
    "end": "272560"
  },
  {
    "text": "choose a meaningful name",
    "start": "272560",
    "end": "275840"
  },
  {
    "text": "i will use to time stream rule as a name",
    "start": "277840",
    "end": "282000"
  },
  {
    "text": "and define the sql statement to select",
    "start": "282000",
    "end": "285040"
  },
  {
    "text": "data from our messages",
    "start": "285040",
    "end": "286880"
  },
  {
    "text": "we will select humidity",
    "start": "286880",
    "end": "292400"
  },
  {
    "text": "pressure and temperature",
    "start": "293199",
    "end": "297199"
  },
  {
    "text": "from the topic",
    "start": "297199",
    "end": "300160"
  },
  {
    "text": "dt slash sensor slash",
    "start": "300800",
    "end": "304720"
  },
  {
    "text": "hash next i'm going to add an action",
    "start": "304720",
    "end": "308800"
  },
  {
    "text": "in this case the time stream action",
    "start": "308800",
    "end": "312720"
  },
  {
    "text": "configure action i need to choose a",
    "start": "312720",
    "end": "316160"
  },
  {
    "text": "database",
    "start": "316160",
    "end": "317520"
  },
  {
    "text": "i will use the database that i just",
    "start": "317520",
    "end": "319440"
  },
  {
    "text": "created iot",
    "start": "319440",
    "end": "321120"
  },
  {
    "text": "and the table sensor data now i need to",
    "start": "321120",
    "end": "324320"
  },
  {
    "text": "define the dimensions",
    "start": "324320",
    "end": "327199"
  },
  {
    "text": "i will use the device id and get it from",
    "start": "327199",
    "end": "330880"
  },
  {
    "text": "the",
    "start": "330880",
    "end": "331600"
  },
  {
    "text": "message payload",
    "start": "331600",
    "end": "334479"
  },
  {
    "text": "another dimension is the building",
    "start": "336720",
    "end": "340960"
  },
  {
    "text": "we will also get the value from the",
    "start": "342560",
    "end": "344479"
  },
  {
    "text": "message payload",
    "start": "344479",
    "end": "347440"
  },
  {
    "text": "and we will also have the room in our",
    "start": "350720",
    "end": "354960"
  },
  {
    "text": "timestream database",
    "start": "354960",
    "end": "358160"
  },
  {
    "text": "also from the message payload",
    "start": "358160",
    "end": "361520"
  },
  {
    "text": "in the next step we need to define a",
    "start": "365440",
    "end": "368800"
  },
  {
    "text": "role or to",
    "start": "368800",
    "end": "369759"
  },
  {
    "text": "create a role which grants",
    "start": "369759",
    "end": "373039"
  },
  {
    "text": "aws iot permissions to write into amazon",
    "start": "373039",
    "end": "376240"
  },
  {
    "text": "time stream",
    "start": "376240",
    "end": "377199"
  },
  {
    "text": "create a row i will use the name iot",
    "start": "377199",
    "end": "381759"
  },
  {
    "text": "data to",
    "start": "381759",
    "end": "384800"
  },
  {
    "text": "time stream role create the role",
    "start": "384800",
    "end": "388479"
  },
  {
    "text": "a policy is attached automatically that",
    "start": "388479",
    "end": "391520"
  },
  {
    "text": "allows",
    "start": "391520",
    "end": "392240"
  },
  {
    "text": "the iot service to write into amazon",
    "start": "392240",
    "end": "394800"
  },
  {
    "text": "timestream",
    "start": "394800",
    "end": "396319"
  },
  {
    "text": "then i choose add action",
    "start": "396319",
    "end": "400160"
  },
  {
    "text": "and finally create the rule and here you",
    "start": "400639",
    "end": "403840"
  },
  {
    "text": "can",
    "start": "403840",
    "end": "404560"
  },
  {
    "text": "see the newly created rule to timestream",
    "start": "404560",
    "end": "407360"
  },
  {
    "text": "rule",
    "start": "407360",
    "end": "408319"
  },
  {
    "text": "for ingesting data from iot core into",
    "start": "408319",
    "end": "411520"
  },
  {
    "text": "amazon timestream",
    "start": "411520",
    "end": "414400"
  },
  {
    "text": "we need to generate some data to",
    "start": "414400",
    "end": "415919"
  },
  {
    "text": "populate the amazon timestream table",
    "start": "415919",
    "end": "418319"
  },
  {
    "text": "data are generated by a script the",
    "start": "418319",
    "end": "420960"
  },
  {
    "text": "script is",
    "start": "420960",
    "end": "421599"
  },
  {
    "text": "implemented in python 3 and uses boto3",
    "start": "421599",
    "end": "424479"
  },
  {
    "text": "the amazon web services sdk for python",
    "start": "424479",
    "end": "427199"
  },
  {
    "text": "to publish messages to iot core",
    "start": "427199",
    "end": "429759"
  },
  {
    "text": "to set up the environment for the script",
    "start": "429759",
    "end": "431759"
  },
  {
    "text": "you need to install",
    "start": "431759",
    "end": "432880"
  },
  {
    "text": "both 3 and set up authentication",
    "start": "432880",
    "end": "435520"
  },
  {
    "text": "credentials",
    "start": "435520",
    "end": "436720"
  },
  {
    "text": "you must associate the permission to",
    "start": "436720",
    "end": "439280"
  },
  {
    "text": "publish to iot with your credentials",
    "start": "439280",
    "end": "442400"
  },
  {
    "text": "installation of portal 3 and setting up",
    "start": "442400",
    "end": "444479"
  },
  {
    "text": "credentials is covered in the border 3",
    "start": "444479",
    "end": "446400"
  },
  {
    "text": "documentation",
    "start": "446400",
    "end": "447840"
  },
  {
    "text": "i will run the script on an aws cloud 9",
    "start": "447840",
    "end": "451199"
  },
  {
    "text": "ide",
    "start": "451199",
    "end": "452400"
  },
  {
    "text": "in my setup i have attached an instance",
    "start": "452400",
    "end": "454800"
  },
  {
    "text": "profile to my aws cloud9 instance",
    "start": "454800",
    "end": "457520"
  },
  {
    "text": "which allows me to publish data to aws",
    "start": "457520",
    "end": "460080"
  },
  {
    "text": "iot",
    "start": "460080",
    "end": "460960"
  },
  {
    "text": "but you can launch the script in any",
    "start": "460960",
    "end": "462560"
  },
  {
    "text": "other environment which meets",
    "start": "462560",
    "end": "464240"
  },
  {
    "text": "requirements to run it now let's start",
    "start": "464240",
    "end": "466639"
  },
  {
    "text": "the script",
    "start": "466639",
    "end": "467280"
  },
  {
    "text": "it's called sensor data",
    "start": "467280",
    "end": "471120"
  },
  {
    "text": "you can see here activities and messages",
    "start": "472639",
    "end": "475520"
  },
  {
    "text": "are",
    "start": "475520",
    "end": "475759"
  },
  {
    "text": "published to aws iot core to verify that",
    "start": "475759",
    "end": "479599"
  },
  {
    "text": "messages are reaching aws iot",
    "start": "479599",
    "end": "482160"
  },
  {
    "text": "you can use the mqtt test client which",
    "start": "482160",
    "end": "485199"
  },
  {
    "text": "is built into the management console",
    "start": "485199",
    "end": "488879"
  },
  {
    "text": "here we have the aws iot management",
    "start": "488879",
    "end": "491440"
  },
  {
    "text": "console",
    "start": "491440",
    "end": "492400"
  },
  {
    "text": "you find the tab client on test",
    "start": "492400",
    "end": "496479"
  },
  {
    "text": "and then we will subscribe to a topic",
    "start": "496479",
    "end": "500639"
  },
  {
    "text": "dt slash sensor slash",
    "start": "500720",
    "end": "504840"
  },
  {
    "text": "hash subscribe",
    "start": "504840",
    "end": "508639"
  },
  {
    "text": "as you can see messages are arriving at",
    "start": "509919",
    "end": "512399"
  },
  {
    "text": "aws iot",
    "start": "512399",
    "end": "514800"
  },
  {
    "text": "that looks good so far and now i will",
    "start": "514800",
    "end": "517919"
  },
  {
    "text": "continue",
    "start": "517919",
    "end": "518640"
  },
  {
    "text": "with some database queries",
    "start": "518640",
    "end": "522560"
  },
  {
    "start": "521000",
    "end": "664000"
  },
  {
    "text": "the amazon timestream console has a",
    "start": "522560",
    "end": "524720"
  },
  {
    "text": "built-in query editor",
    "start": "524720",
    "end": "526480"
  },
  {
    "text": "that i will use for some queries",
    "start": "526480",
    "end": "530480"
  },
  {
    "text": "how many rows do we have in the cinder",
    "start": "531920",
    "end": "534080"
  },
  {
    "text": "data table",
    "start": "534080",
    "end": "536720"
  },
  {
    "text": "now i run the query",
    "start": "543519",
    "end": "549360"
  },
  {
    "text": "that yields over 40 000 rows",
    "start": "549360",
    "end": "553200"
  },
  {
    "text": "as we have entries in the table that",
    "start": "553200",
    "end": "555120"
  },
  {
    "text": "means that our setup with",
    "start": "555120",
    "end": "556640"
  },
  {
    "text": "ingesting data to aws iot core and then",
    "start": "556640",
    "end": "559680"
  },
  {
    "text": "write the data with an iot",
    "start": "559680",
    "end": "561440"
  },
  {
    "text": "rule to amazon timestream is working",
    "start": "561440",
    "end": "565279"
  },
  {
    "text": "now let's find out which buildings do we",
    "start": "565279",
    "end": "567680"
  },
  {
    "text": "have in the table",
    "start": "567680",
    "end": "570640"
  },
  {
    "text": "select distinct",
    "start": "574839",
    "end": "579839"
  },
  {
    "text": "building from iot sensor data",
    "start": "580320",
    "end": "584720"
  },
  {
    "text": "you can see here three buildings named",
    "start": "587600",
    "end": "589839"
  },
  {
    "text": "doppler kumu and day one",
    "start": "589839",
    "end": "592240"
  },
  {
    "text": "and now we can also have a closer look",
    "start": "592240",
    "end": "594560"
  },
  {
    "text": "at the data for example from the",
    "start": "594560",
    "end": "596320"
  },
  {
    "text": "building",
    "start": "596320",
    "end": "597120"
  },
  {
    "text": "day one",
    "start": "597120",
    "end": "599600"
  },
  {
    "text": "select all data from iot sensor data",
    "start": "602839",
    "end": "606880"
  },
  {
    "text": "where",
    "start": "606880",
    "end": "609200"
  },
  {
    "text": "building is",
    "start": "610079",
    "end": "614240"
  },
  {
    "text": "day one run it",
    "start": "614240",
    "end": "619839"
  },
  {
    "text": "and you can see here a lot of results",
    "start": "624240",
    "end": "627519"
  },
  {
    "text": "you can see here the sensor id",
    "start": "627519",
    "end": "630560"
  },
  {
    "text": "building name the room number",
    "start": "630560",
    "end": "634399"
  },
  {
    "text": "a measure value and a measure name and",
    "start": "634399",
    "end": "636959"
  },
  {
    "text": "also the time when",
    "start": "636959",
    "end": "638160"
  },
  {
    "text": "the data were ingested into amazon",
    "start": "638160",
    "end": "640079"
  },
  {
    "text": "timestream",
    "start": "640079",
    "end": "642720"
  },
  {
    "text": "these were some very basic queries to",
    "start": "642800",
    "end": "645279"
  },
  {
    "text": "verify",
    "start": "645279",
    "end": "646079"
  },
  {
    "text": "that the whole setup is working if you",
    "start": "646079",
    "end": "648399"
  },
  {
    "text": "want to visualize your",
    "start": "648399",
    "end": "649839"
  },
  {
    "text": "data you can use for example grafana",
    "start": "649839",
    "end": "652320"
  },
  {
    "text": "which is",
    "start": "652320",
    "end": "653040"
  },
  {
    "text": "a analytics and monitoring solution",
    "start": "653040",
    "end": "656079"
  },
  {
    "text": "please take a look at our getting",
    "start": "656079",
    "end": "657680"
  },
  {
    "text": "started video how to visualize your time",
    "start": "657680",
    "end": "659760"
  },
  {
    "text": "stream data",
    "start": "659760",
    "end": "660640"
  },
  {
    "text": "by creating dashboards in grafana",
    "start": "660640",
    "end": "664720"
  },
  {
    "start": "664000",
    "end": "777000"
  },
  {
    "text": "finally some words about troubleshooting",
    "start": "664720",
    "end": "667200"
  },
  {
    "text": "in case your setup is not working as",
    "start": "667200",
    "end": "668959"
  },
  {
    "text": "expected",
    "start": "668959",
    "end": "669760"
  },
  {
    "text": "it can have several reasons one option",
    "start": "669760",
    "end": "672079"
  },
  {
    "text": "to find the root cause is to use amazon",
    "start": "672079",
    "end": "674240"
  },
  {
    "text": "cloudwatch which is our monitoring",
    "start": "674240",
    "end": "676000"
  },
  {
    "text": "service",
    "start": "676000",
    "end": "676800"
  },
  {
    "text": "when you enable logging for iot core",
    "start": "676800",
    "end": "678880"
  },
  {
    "text": "logs are written to amazon cloudwatch",
    "start": "678880",
    "end": "681040"
  },
  {
    "text": "logging can be enabled for iot core",
    "start": "681040",
    "end": "683600"
  },
  {
    "text": "under settings",
    "start": "683600",
    "end": "685279"
  },
  {
    "text": "as you can see here you can use",
    "start": "685279",
    "end": "688560"
  },
  {
    "text": "cloudwatch insights to query your logs",
    "start": "688560",
    "end": "692560"
  },
  {
    "text": "in the cloudwatch console under logs",
    "start": "692560",
    "end": "695440"
  },
  {
    "text": "select",
    "start": "695440",
    "end": "696000"
  },
  {
    "text": "insights and define your query",
    "start": "696000",
    "end": "699600"
  },
  {
    "text": "i want to know what the iot rule is",
    "start": "699600",
    "end": "702399"
  },
  {
    "text": "doing to ingest data into amazon time",
    "start": "702399",
    "end": "704640"
  },
  {
    "text": "stream",
    "start": "704640",
    "end": "706079"
  },
  {
    "text": "i am choosing the log groups for iot",
    "start": "706079",
    "end": "710000"
  },
  {
    "text": "that is aws iot locks",
    "start": "710000",
    "end": "714839"
  },
  {
    "text": "v2 and add a filter to the predefined",
    "start": "714839",
    "end": "718079"
  },
  {
    "text": "query",
    "start": "718079",
    "end": "720560"
  },
  {
    "text": "i will use a filter for the rule name",
    "start": "722320",
    "end": "726720"
  },
  {
    "text": "our rule was name to time",
    "start": "729360",
    "end": "734320"
  },
  {
    "text": "stream room",
    "start": "734320",
    "end": "737360"
  },
  {
    "text": "and i will run the query",
    "start": "737360",
    "end": "740880"
  },
  {
    "text": "and here you can see the results you can",
    "start": "743279",
    "end": "746320"
  },
  {
    "text": "see also",
    "start": "746320",
    "end": "747120"
  },
  {
    "text": "a lock level here within the results",
    "start": "747120",
    "end": "751120"
  },
  {
    "text": "and this is only one example how cloud",
    "start": "751120",
    "end": "754079"
  },
  {
    "text": "watch insights works",
    "start": "754079",
    "end": "755519"
  },
  {
    "text": "you can search other events for example",
    "start": "755519",
    "end": "757760"
  },
  {
    "text": "if your devices are ingesting data",
    "start": "757760",
    "end": "759920"
  },
  {
    "text": "properly into aws iot and much",
    "start": "759920",
    "end": "762240"
  },
  {
    "text": "much more yeah with that",
    "start": "762240",
    "end": "765519"
  },
  {
    "text": "we are at the end of this short quick",
    "start": "765519",
    "end": "767519"
  },
  {
    "text": "start and you have learned how to ingest",
    "start": "767519",
    "end": "769920"
  },
  {
    "text": "data from your iot devices with aws iot",
    "start": "769920",
    "end": "772880"
  },
  {
    "text": "core",
    "start": "772880",
    "end": "773279"
  },
  {
    "text": "into amazon timestream thank you for",
    "start": "773279",
    "end": "775680"
  },
  {
    "text": "your attention",
    "start": "775680",
    "end": "779360"
  }
]