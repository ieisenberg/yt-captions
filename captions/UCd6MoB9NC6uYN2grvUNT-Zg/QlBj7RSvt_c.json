[
  {
    "text": "[Music] hi this is runeet vashesh with amazon web",
    "start": "0",
    "end": "5520"
  },
  {
    "text": "services in this session i'm going to talk about deploying asp.net web applications",
    "start": "5520",
    "end": "12240"
  },
  {
    "text": "to amazon elastic kubernetes services or eks using aws code suite i will start with",
    "start": "12240",
    "end": "20000"
  },
  {
    "text": "introduction to amazon eks service what is eks and what is it used for",
    "start": "20000",
    "end": "26640"
  },
  {
    "text": "then i will talk about aws developer tool services an aws code suite which comprises of",
    "start": "26640",
    "end": "33360"
  },
  {
    "text": "services such as code commit code build and code pipeline",
    "start": "33360",
    "end": "38879"
  },
  {
    "text": "i will then set up an eks cluster and build and deploy an asp.net core web application onto",
    "start": "38879",
    "end": "46000"
  },
  {
    "text": "that eks cluster so what is eks eks is a managed service",
    "start": "46000",
    "end": "52320"
  },
  {
    "text": "that makes it easy for you to run kubernetes on aws without needing to install and operate",
    "start": "52320",
    "end": "59039"
  },
  {
    "text": "your own kubernetes control plane or worker nodes kubernetes",
    "start": "59039",
    "end": "64400"
  },
  {
    "text": "is an open source software that allows you to deploy and manage containerized applications at",
    "start": "64400",
    "end": "70840"
  },
  {
    "text": "scale kubernetes groups containers into logical groupings",
    "start": "70840",
    "end": "76159"
  },
  {
    "text": "for management and discoverability then launches them onto cluster of",
    "start": "76159",
    "end": "82159"
  },
  {
    "text": "compute or ec2 instances using kubernetes you can containerize applications",
    "start": "82159",
    "end": "89200"
  },
  {
    "text": "including microservices and batch processing workers",
    "start": "89200",
    "end": "94560"
  },
  {
    "text": "when you create an eks cluster you will get a cluster cname like this",
    "start": "94560",
    "end": "100000"
  },
  {
    "text": "this represents your cluster's id and when you deploy your worker nodes",
    "start": "100000",
    "end": "105200"
  },
  {
    "text": "they will connect into this cluster by connecting directly to that cname",
    "start": "105200",
    "end": "111680"
  },
  {
    "text": "when you want to connect to that cluster you'll configure kubernetes config file",
    "start": "112320",
    "end": "117360"
  },
  {
    "text": "or cube config that cube config file will then be referenced by the command line tool for kubernetes",
    "start": "117360",
    "end": "124960"
  },
  {
    "text": "called cubectl or cubecontrol this cname represents managed control",
    "start": "124960",
    "end": "131039"
  },
  {
    "text": "plane for your eks cluster and allows you to send operations that would tell kubernetes to schedule",
    "start": "131039",
    "end": "137760"
  },
  {
    "text": "containers for you when you create a cluster you usually go",
    "start": "137760",
    "end": "143120"
  },
  {
    "text": "through a couple of steps first step is to set up an environment which involves",
    "start": "143120",
    "end": "148959"
  },
  {
    "text": "setting up vpc subnets internet gateway or any other aws infrastructure items",
    "start": "148959",
    "end": "155200"
  },
  {
    "text": "required to make your clusters work second step is to create an eks cluster",
    "start": "155200",
    "end": "162000"
  },
  {
    "text": "this will create a highly available control plane and manage node groups with amazon eks managed node groups you",
    "start": "162000",
    "end": "169280"
  },
  {
    "text": "don't need to separately provision or register the amazon ec2 instances that provide compute capacity to run",
    "start": "169280",
    "end": "176480"
  },
  {
    "text": "your kubernetes applications all managed nodes are provisioned as",
    "start": "176480",
    "end": "182159"
  },
  {
    "text": "part of an amazon ec2 auto scaling group that is managed for you",
    "start": "182159",
    "end": "187360"
  },
  {
    "text": "by amazon eks last step is to deploy your workloads onto your",
    "start": "187360",
    "end": "193519"
  },
  {
    "text": "eks cluster you will have full control over how you build your application on top of this",
    "start": "193519",
    "end": "200400"
  },
  {
    "text": "cluster you have multiple options to get started",
    "start": "200400",
    "end": "205599"
  },
  {
    "text": "with setting up your cluster options such as aws cloud formation",
    "start": "205599",
    "end": "210799"
  },
  {
    "text": "which automates a lot of steps involved in setting up the environment and the case cluster other option is to use",
    "start": "210799",
    "end": "219360"
  },
  {
    "text": "command line tool called eks ctl it is a cli which can automate",
    "start": "219360",
    "end": "226239"
  },
  {
    "text": "provisioning your cluster for you you can also use one of the partner solutions",
    "start": "226239",
    "end": "232319"
  },
  {
    "text": "solutions like terraform bloomy rancher and many other to deploy cluster",
    "start": "232319",
    "end": "238640"
  },
  {
    "text": "using these tools for this session i have already created",
    "start": "238640",
    "end": "245760"
  },
  {
    "text": "an eks cluster using instructions in this user guide",
    "start": "245760",
    "end": "251519"
  },
  {
    "text": "i will include a link to this guide towards the end of this session this guide walks you through the steps",
    "start": "251519",
    "end": "257600"
  },
  {
    "text": "required to set up your eks environment and eks cluster using",
    "start": "257600",
    "end": "263520"
  },
  {
    "text": "cli tool called eks ctl it covers all the prerequisites such as",
    "start": "263520",
    "end": "269680"
  },
  {
    "text": "setting up aws cli and many other tools which are required",
    "start": "269680",
    "end": "274800"
  },
  {
    "text": "to set up your cluster i am now in my cloud9 terminal window",
    "start": "274800",
    "end": "283759"
  },
  {
    "text": "from where i can access my eks cluster let us look at some of the details of",
    "start": "283759",
    "end": "289600"
  },
  {
    "text": "this cluster",
    "start": "289600",
    "end": "297840"
  },
  {
    "text": "from the terminal i can do cube ctl and i can look at the cluster info i can",
    "start": "299120",
    "end": "311280"
  },
  {
    "text": "use cube ctl get nodes to find out all the work nodes in my",
    "start": "311280",
    "end": "316639"
  },
  {
    "text": "current cluster which in this case is three nodes",
    "start": "316639",
    "end": "322960"
  },
  {
    "text": "i don't have any application deployed but i can still run get deployments to see if there is any",
    "start": "323280",
    "end": "330560"
  },
  {
    "text": "resource and in this case it's none similarly i can check all the services",
    "start": "330560",
    "end": "337440"
  },
  {
    "text": "which are currently running and in this case i don't have any application",
    "start": "337440",
    "end": "342639"
  },
  {
    "text": "running now what i want to do is before i start using code suite",
    "start": "342639",
    "end": "349600"
  },
  {
    "text": "i want to deploy one simple web application",
    "start": "349600",
    "end": "354800"
  },
  {
    "text": "using my cli tools i have defined my application deployment in a file called",
    "start": "354800",
    "end": "361319"
  },
  {
    "text": "helloworlddeployment.yaml this is the deployment configuration and a few important things to call out this",
    "start": "361319",
    "end": "369280"
  },
  {
    "text": "is the deployment configuration hence the name deployment i'm going to run three replicas of this application",
    "start": "369280",
    "end": "376560"
  },
  {
    "text": "and my application will be served from a docker image which is stored on my ecr",
    "start": "376560",
    "end": "382479"
  },
  {
    "text": "repository listed here ecr is elastic container repository ecr is a",
    "start": "382479",
    "end": "390240"
  },
  {
    "text": "managed repository service which can be used to deploy your docker images",
    "start": "390240",
    "end": "396080"
  },
  {
    "text": "my application will be running on port 80 and the next configuration is my service",
    "start": "396080",
    "end": "402639"
  },
  {
    "text": "configuration this is doing the port mapping as well as it is configuring",
    "start": "402639",
    "end": "407680"
  },
  {
    "text": "my load balancer and the service name is going to be",
    "start": "407680",
    "end": "415280"
  },
  {
    "text": "hello world so let's go ahead and configure this",
    "start": "415280",
    "end": "420160"
  },
  {
    "text": "service i'm going to use cubectl apply and i'm going to give part of both",
    "start": "420840",
    "end": "428400"
  },
  {
    "text": "of my configuration files my deployment configuration and my service configuration",
    "start": "428400",
    "end": "434000"
  },
  {
    "text": "once my deployment and service on service configuration is created",
    "start": "434000",
    "end": "440000"
  },
  {
    "text": "i should be able to look at the services and deployments it's gonna take a second",
    "start": "442080",
    "end": "450080"
  },
  {
    "text": "okay my deployment and service is configured now i can look at my deployments and",
    "start": "450080",
    "end": "457440"
  },
  {
    "text": "services by using get deployment here i can see i have three of my",
    "start": "457440",
    "end": "465120"
  },
  {
    "text": "deployments ready",
    "start": "465120",
    "end": "468000"
  },
  {
    "text": "similarly i can look at the service description as well",
    "start": "471520",
    "end": "478800"
  },
  {
    "text": "now since my service is behind the load balancer i can get the url of my load balancer or",
    "start": "478800",
    "end": "485759"
  },
  {
    "text": "i can go back to my ec2 console and if i refresh my load balancers i can",
    "start": "485759",
    "end": "493599"
  },
  {
    "text": "see my load balancer is already created and if i look at the instances i see my instances are currently showing out of",
    "start": "493599",
    "end": "500080"
  },
  {
    "text": "service it's going to take few minutes before message my before my instances will be back up in the service",
    "start": "500080",
    "end": "507840"
  },
  {
    "text": "after waiting for a minute or so my instances are in service now",
    "start": "509120",
    "end": "515839"
  },
  {
    "text": "i can go back to my um cloud9 console i can get the grab of my",
    "start": "516240",
    "end": "523680"
  },
  {
    "text": "i can grab the dns of my load balancer or i can do the same thing from my uh",
    "start": "523680",
    "end": "530880"
  },
  {
    "text": "load balancer description as well and if i go to the browser and try to open the link",
    "start": "530880",
    "end": "536880"
  },
  {
    "text": "i can see a hello world application running now so with this we have just deployed a hello world",
    "start": "536880",
    "end": "543120"
  },
  {
    "text": "application on our eks cluster from",
    "start": "543120",
    "end": "548720"
  },
  {
    "text": "the cloud9 terminal using eks ctl",
    "start": "548720",
    "end": "554480"
  },
  {
    "text": "though i have a functional hello world application running on my eks cluster",
    "start": "555600",
    "end": "561120"
  },
  {
    "text": "my goal is to set up a deployment automation for my asp.net core web app",
    "start": "561120",
    "end": "567440"
  },
  {
    "text": "right from the source code to a running app on an eks cluster",
    "start": "567440",
    "end": "573920"
  },
  {
    "text": "for this i'm going to use aws code suite services which are part of aws developer tools",
    "start": "573920",
    "end": "581680"
  },
  {
    "text": "aws developer tools and services provides multiple options to host the code build test",
    "start": "581680",
    "end": "590000"
  },
  {
    "text": "and deploy your application to aws the aws developer tools are built to work",
    "start": "590000",
    "end": "595360"
  },
  {
    "text": "with aws making it easier for your team to get set up and be productive few of these tools and",
    "start": "595360",
    "end": "603040"
  },
  {
    "text": "services that we will use in this session are aws code commit",
    "start": "603040",
    "end": "608079"
  },
  {
    "text": "code build and code pipeline aws code commit is a fully managed",
    "start": "608079",
    "end": "613519"
  },
  {
    "text": "source control service that hosts secure gate-based repositories",
    "start": "613519",
    "end": "619120"
  },
  {
    "text": "it makes it easier for teams to collaborate on code in a secure and highly scalable",
    "start": "619120",
    "end": "624880"
  },
  {
    "text": "ecosystem code build is a fully managed continuous integration service",
    "start": "624880",
    "end": "630720"
  },
  {
    "text": "that compiles source code runs tests and produce software packages that are",
    "start": "630720",
    "end": "636240"
  },
  {
    "text": "ready to deploy with code build you don't need to provision manage and scale your own",
    "start": "636240",
    "end": "641600"
  },
  {
    "text": "build servers aws code pipeline is a fully managed continuous delivery service",
    "start": "641600",
    "end": "647600"
  },
  {
    "text": "that helps you automate your release pipeline for fast and reliable application and infrastructure updates",
    "start": "647600",
    "end": "654480"
  },
  {
    "text": "based on the release model you define code pipeline automates the release process every time there is",
    "start": "654480",
    "end": "660320"
  },
  {
    "text": "a code change the first code switch service that i am",
    "start": "660320",
    "end": "665760"
  },
  {
    "text": "going to use today is called code commit to get started with the code commit scroll down on aws management console",
    "start": "665760",
    "end": "673279"
  },
  {
    "text": "and click on code commit under developer tools",
    "start": "673279",
    "end": "677600"
  },
  {
    "text": "once you are in code commit console click on create repository",
    "start": "680959",
    "end": "686240"
  },
  {
    "text": "and give your repository a name in my case i'm calling my repository asp.net eks demo",
    "start": "686240",
    "end": "694399"
  },
  {
    "text": "once you've given the name click on create",
    "start": "695200",
    "end": "699680"
  },
  {
    "text": "and that's pretty much it our source code repository is ready to be used this is a git based",
    "start": "700240",
    "end": "706560"
  },
  {
    "text": "repository uh to which we can connect from uh any of the git clients",
    "start": "706560",
    "end": "712480"
  },
  {
    "text": "uh if you are planning to use code commit with visual studio there are a couple of additional steps required",
    "start": "712480",
    "end": "719200"
  },
  {
    "text": "here's a user guide to integrate code commit with visual studio you will need to create an iem user",
    "start": "719200",
    "end": "727120"
  },
  {
    "text": "and install aws toolkit for visual studio to get started with code commit i'm going to include a link",
    "start": "727120",
    "end": "734240"
  },
  {
    "text": "to this user guide towards the end of this video",
    "start": "734240",
    "end": "738720"
  },
  {
    "text": "i have already connected my visual studio with my code commit instance",
    "start": "739360",
    "end": "744720"
  },
  {
    "text": "and i have already committed the sample application the boilerplate asp.net core",
    "start": "744720",
    "end": "751680"
  },
  {
    "text": "web application to my source code repo this is my source code repo and you can",
    "start": "751680",
    "end": "758560"
  },
  {
    "text": "see my code is already here this is the standard application as i mentioned",
    "start": "758560",
    "end": "764720"
  },
  {
    "text": "with no specific changes to the boilerplate code i have included two additional files",
    "start": "764720",
    "end": "771440"
  },
  {
    "text": "first one is build spec.tml and another one is called hello k8s.amble",
    "start": "771440",
    "end": "777839"
  },
  {
    "text": "buildspec is my build specification that will be used in next step",
    "start": "777839",
    "end": "782880"
  },
  {
    "text": "buildspec is a file which is used by code build to build my application and my hello k8s",
    "start": "782880",
    "end": "790720"
  },
  {
    "text": "dot yaml file will be used to deploy my kubernetes application",
    "start": "790720",
    "end": "796079"
  },
  {
    "text": "on eks cluster let's take a look at build spec.yaml",
    "start": "796079",
    "end": "802399"
  },
  {
    "text": "here is the buildspec.eml file which i'm using from my project i have this build spec open on my local",
    "start": "803040",
    "end": "809440"
  },
  {
    "text": "machine this mil spec i have created using examples given in eks labs",
    "start": "809440",
    "end": "817360"
  },
  {
    "text": "this is the eks workshop or the eks lab if you are new to eks i will strongly",
    "start": "817360",
    "end": "824000"
  },
  {
    "text": "encourage you to take a look at this publicly available lab i will share",
    "start": "824000",
    "end": "829199"
  },
  {
    "text": "a link to this lab towards the end of my session",
    "start": "829199",
    "end": "834079"
  },
  {
    "text": "back in buildspec.yaml the build spec has multiple steps which are executed by",
    "start": "836399",
    "end": "843120"
  },
  {
    "text": "code build at the time of building the application let's take a look at few of these",
    "start": "843120",
    "end": "848560"
  },
  {
    "text": "important steps the first one is the installation stage this is where following steps or the selected steps",
    "start": "848560",
    "end": "855519"
  },
  {
    "text": "will be executed by code build the first step here is setting up aws im",
    "start": "855519",
    "end": "863360"
  },
  {
    "text": "authenticator amazon ecs uses identity and access management service",
    "start": "863360",
    "end": "869279"
  },
  {
    "text": "or iam to provide authentication to your kubernetes cluster through the",
    "start": "869279",
    "end": "875519"
  },
  {
    "text": "aws iem authenticator for kubernetes you can configure the stock cube ctl",
    "start": "875519",
    "end": "882320"
  },
  {
    "text": "client to work with amazon eks by installing the aws im authenticator for kubernetes",
    "start": "882320",
    "end": "889279"
  },
  {
    "text": "and modifying your cubectl configuration file to use it for authentication in the next",
    "start": "889279",
    "end": "895440"
  },
  {
    "text": "step i am setting up my cube ctl then setting up execute permissions as required",
    "start": "895440",
    "end": "902160"
  },
  {
    "text": "setting up path to the present working directory then installing couple of utilities like",
    "start": "902160",
    "end": "908480"
  },
  {
    "text": "jq and then upgrading my aws cli",
    "start": "908480",
    "end": "915360"
  },
  {
    "text": "once done with the installation stage the build will move to the pre-built stage the first step in the",
    "start": "916959",
    "end": "923519"
  },
  {
    "text": "pre-built stage is setting up tag which is equal to dollar repository name",
    "start": "923519",
    "end": "929120"
  },
  {
    "text": "dollar repository name is the environment variable which will be passed to the code build bill definition and then",
    "start": "929120",
    "end": "936800"
  },
  {
    "text": "appending repository branch and environment names these are also variables environment variables which are passed",
    "start": "936800",
    "end": "943199"
  },
  {
    "text": "to code build once tag is set up in the next line what i'm doing is",
    "start": "943199",
    "end": "950639"
  },
  {
    "text": "i am replacing a string called container underscore image",
    "start": "951199",
    "end": "956880"
  },
  {
    "text": "in my hello k8 start yaml with the full repository uri",
    "start": "956880",
    "end": "962000"
  },
  {
    "text": "appended with dollar tag after that the next step is to set up a",
    "start": "962000",
    "end": "968639"
  },
  {
    "text": "login to ecr ecr is where i'm going to push my docker image",
    "start": "968639",
    "end": "974240"
  },
  {
    "text": "in the post build stage the next major stage is the build stage",
    "start": "974240",
    "end": "980160"
  },
  {
    "text": "this is where my docker build will actually execute and it will",
    "start": "980160",
    "end": "985600"
  },
  {
    "text": "tag the docker image with dollar repository uri colon dollar tag uh repository uri will",
    "start": "985600",
    "end": "992959"
  },
  {
    "text": "be passed as environment variable and dollar tag is set up in the pre-built stage",
    "start": "992959",
    "end": "999759"
  },
  {
    "text": "once the build stage has succeeded code build will execute steps or the commands in the post build stage",
    "start": "1000880",
    "end": "1007839"
  },
  {
    "text": "the first one is pushing the docker image to remote ec repo",
    "start": "1007839",
    "end": "1012880"
  },
  {
    "text": "once that is done the next important step is before we can start",
    "start": "1012880",
    "end": "1019920"
  },
  {
    "text": "deploying our application to our eks cluster we need to assume a role which has required permissions to connect to",
    "start": "1019920",
    "end": "1026480"
  },
  {
    "text": "ecs eks cluster for that we're going to execute aws sds assume rule",
    "start": "1026480",
    "end": "1034079"
  },
  {
    "text": "for that we're going to use a role name which will be passed to our code build definition",
    "start": "1034079",
    "end": "1040079"
  },
  {
    "text": "as an environment variable which in this case is eks cubectl role arn",
    "start": "1040079",
    "end": "1047438"
  },
  {
    "text": "once the sts assume role has succeeded we are going to set up some aws",
    "start": "1047760",
    "end": "1053440"
  },
  {
    "text": "configuration variables like access key secret access session token etc",
    "start": "1053440",
    "end": "1060080"
  },
  {
    "text": "after setting up aws config values the next setup is to update cube config in this case i'm",
    "start": "1060320",
    "end": "1068240"
  },
  {
    "text": "passing the cluster name which will be passed to the build configuration as an environment variable",
    "start": "1068240",
    "end": "1074640"
  },
  {
    "text": "optionally you can also set up a region in case your build and your eks cluster are in the same region",
    "start": "1074640",
    "end": "1080559"
  },
  {
    "text": "you don't need to pass this value i'm then executing my cluster info this",
    "start": "1080559",
    "end": "1086559"
  },
  {
    "text": "is not required you can use this just to make sure that your configuration was updated correctly",
    "start": "1086559",
    "end": "1092799"
  },
  {
    "text": "and you can connect to the right eks cluster the uh the last important",
    "start": "1092799",
    "end": "1098559"
  },
  {
    "text": "step is to apply the configuration changes which are in hello kate s dot yaml in",
    "start": "1098559",
    "end": "1104799"
  },
  {
    "text": "this case let's take a look at this hello k8s config file",
    "start": "1104799",
    "end": "1110480"
  },
  {
    "text": "because that is a configuration that will be applied to our eks cluster",
    "start": "1110480",
    "end": "1116640"
  },
  {
    "text": "here is my hello k8s dot eml file this file has two different parts the",
    "start": "1117039",
    "end": "1124000"
  },
  {
    "text": "first one is my service configuration as you can see it is a lot similar to the service",
    "start": "1124000",
    "end": "1129200"
  },
  {
    "text": "configuration that we saw earlier i have my service name my service",
    "start": "1129200",
    "end": "1135039"
  },
  {
    "text": "selector and type as load balancer and then port mapping and if i scroll",
    "start": "1135039",
    "end": "1140720"
  },
  {
    "text": "down i can see my deployment configuration this is also a lot similar to the configuration",
    "start": "1140720",
    "end": "1146799"
  },
  {
    "text": "that we saw earlier the important thing to notice here is that my container runs on port 80",
    "start": "1146799",
    "end": "1153919"
  },
  {
    "text": "and the image here is a placeholder string called container underscore image this",
    "start": "1153919",
    "end": "1159600"
  },
  {
    "text": "placeholder is replaced at the runtime by my build spec you can see here",
    "start": "1159600",
    "end": "1165200"
  },
  {
    "text": "back in the build spec in the pre-built stage i am replacing container",
    "start": "1165200",
    "end": "1171679"
  },
  {
    "text": "underscore image with dollar repository colon dollar tag",
    "start": "1171679",
    "end": "1178880"
  },
  {
    "text": "to create a build automation we have to create a new build project using code build service for that",
    "start": "1178880",
    "end": "1186160"
  },
  {
    "text": "back in your management console scroll down to developer tools and click on code belt",
    "start": "1186160",
    "end": "1193840"
  },
  {
    "text": "once you're in code build click on create build project",
    "start": "1194559",
    "end": "1199360"
  },
  {
    "text": "give it a name in my case i'm calling it asp.net eks demo",
    "start": "1201600",
    "end": "1208559"
  },
  {
    "text": "now let's configure the source for this build which in my case is code commit",
    "start": "1208960",
    "end": "1216799"
  },
  {
    "text": "i could select other code providers source providers like github and code build also",
    "start": "1216799",
    "end": "1223840"
  },
  {
    "text": "supports bitbucket and github enterprise as well as s3 with code commit selected",
    "start": "1223840",
    "end": "1230960"
  },
  {
    "text": "i'm going to select my repo which is at eks demo my branch which is the default master",
    "start": "1230960",
    "end": "1237600"
  },
  {
    "text": "branch in this case then i have to configure the environment",
    "start": "1237600",
    "end": "1242640"
  },
  {
    "text": "to configure my environment i'm going to first select the operating system which i'm selecting ubuntu",
    "start": "1242640",
    "end": "1248880"
  },
  {
    "text": "runtime as standard and i want to go with the standard 4.0 image you can either leave to default",
    "start": "1248880",
    "end": "1257840"
  },
  {
    "text": "which is always to use latest image or i'm selecting i'm specifically selecting the latest",
    "start": "1257840",
    "end": "1263360"
  },
  {
    "text": "one which is 20.06.15. check the privilege checkbox this is",
    "start": "1263360",
    "end": "1269360"
  },
  {
    "text": "required to run all the docker commands which we're executing during our build stage like docker build and docker push",
    "start": "1269360",
    "end": "1277280"
  },
  {
    "text": "our code build build will be executed in the context of an iem role",
    "start": "1277280",
    "end": "1282480"
  },
  {
    "text": "you can choose to create an im role in my case i already have created a role which is called as eks admin so i'm just",
    "start": "1282480",
    "end": "1288880"
  },
  {
    "text": "going to search for that role and select that one",
    "start": "1288880",
    "end": "1292960"
  },
  {
    "text": "in my case all the steps which i want to execute during my build stage are defined in the build spec so i'm going",
    "start": "1295360",
    "end": "1301039"
  },
  {
    "text": "to check this box as it is i also need to define back in the environment",
    "start": "1301039",
    "end": "1307520"
  },
  {
    "text": "stage i also need to define my environment variables which my build spec is going to use i'm",
    "start": "1307520",
    "end": "1313600"
  },
  {
    "text": "leaving them as it is right now i'm going to come back fill these variables and then",
    "start": "1313600",
    "end": "1319440"
  },
  {
    "text": "show it to you so i have populated the environment",
    "start": "1319440",
    "end": "1325440"
  },
  {
    "text": "variables let's take a look at them the first one is called eks cluster name this is the name of eks cluster that the",
    "start": "1325440",
    "end": "1333120"
  },
  {
    "text": "build stage will use to connect to the next one is my repository uri this",
    "start": "1333120",
    "end": "1338480"
  },
  {
    "text": "is the docker repository uri where my docker image will be pushed in my case",
    "start": "1338480",
    "end": "1343600"
  },
  {
    "text": "this is the uri to my ecr repository",
    "start": "1343600",
    "end": "1349360"
  },
  {
    "text": "the next one is eks cube ctl role arn this is the",
    "start": "1350640",
    "end": "1357520"
  },
  {
    "text": "role which my build execution will assume",
    "start": "1357520",
    "end": "1362880"
  },
  {
    "text": "this role has to be an im role which has required permissions to connect to the eks cluster",
    "start": "1362880",
    "end": "1370480"
  },
  {
    "text": "or it should be the role which was used to create the cluster in first place",
    "start": "1370480",
    "end": "1375760"
  },
  {
    "text": "the next one is the name of repository and my repository branch i'm using these two",
    "start": "1375760",
    "end": "1381760"
  },
  {
    "text": "environment variables to create the tags which will be used to push my docker",
    "start": "1381760",
    "end": "1387280"
  },
  {
    "text": "image with these attributes all set and leaving",
    "start": "1387280",
    "end": "1392480"
  },
  {
    "text": "rest of the configuration settings as is i'm clicking on create build project",
    "start": "1392480",
    "end": "1399360"
  },
  {
    "text": "once my credit build project is ready i'm gonna click on start build",
    "start": "1399520",
    "end": "1406399"
  },
  {
    "text": "and click on start build",
    "start": "1408640",
    "end": "1412159"
  },
  {
    "text": "the build execution is take a couple of minutes i can see the progress under build logs",
    "start": "1415679",
    "end": "1422640"
  },
  {
    "text": "let me pause the video and come back once the execution has completed",
    "start": "1422640",
    "end": "1428240"
  },
  {
    "text": "it took couple of minutes but my build status has changed from in progress to succeeded if i scroll",
    "start": "1429679",
    "end": "1436000"
  },
  {
    "text": "down i can see details of all the steps which were executed by code build this includes all the",
    "start": "1436000",
    "end": "1443520"
  },
  {
    "text": "installation steps pre-built steps build steps as well as post build steps i can verify",
    "start": "1443520",
    "end": "1451200"
  },
  {
    "text": "that everything went fine by scrolling on this page now to look at my deployment let me",
    "start": "1451200",
    "end": "1457679"
  },
  {
    "text": "switch over to my cloud9 ide",
    "start": "1457679",
    "end": "1463440"
  },
  {
    "text": "i am now in my cloud9 environment which is connected to my eks cluster",
    "start": "1464320",
    "end": "1472000"
  },
  {
    "text": "i'm going to run cube ctl get services this should show me list of all the services which are currently running on",
    "start": "1472000",
    "end": "1478480"
  },
  {
    "text": "the cluster and i can see that my service ecs demo front end is currently running on this",
    "start": "1478480",
    "end": "1484559"
  },
  {
    "text": "load balancer i can see the uri of my load balancer as",
    "start": "1484559",
    "end": "1490000"
  },
  {
    "text": "well let's do the same thing for my deployments as well i can run cube ctl",
    "start": "1490000",
    "end": "1496000"
  },
  {
    "text": "get deployments and i can see my application with the name demo frontend is also up and running",
    "start": "1496000",
    "end": "1501919"
  },
  {
    "text": "let's take a look at this load balancer from ec2 console",
    "start": "1501919",
    "end": "1508720"
  },
  {
    "text": "i switch over to my ec2 console and on the left hand side if i click on load balancers i can see this load balancer up and",
    "start": "1510400",
    "end": "1517279"
  },
  {
    "text": "running looking at the instances i can see all three instances are in service",
    "start": "1517279",
    "end": "1523600"
  },
  {
    "text": "these are three worker nodes back in the description i'm going to copy the dns name",
    "start": "1523600",
    "end": "1531760"
  },
  {
    "text": "and open it in a new tab and yes i can see the newer version of application up and running this is the",
    "start": "1533039",
    "end": "1540000"
  },
  {
    "text": "version of application which is running my asp.net core web application",
    "start": "1540000",
    "end": "1546159"
  },
  {
    "text": "this is the boilerplate code then and the only thing which i modified in my code was adding the string called welcome to code",
    "start": "1546159",
    "end": "1553440"
  },
  {
    "text": "pipeline also if i go back to my ecs console i'm sorry ec2 console",
    "start": "1553440",
    "end": "1559520"
  },
  {
    "text": "and search for ecr",
    "start": "1559520",
    "end": "1563520"
  },
  {
    "text": "and click on repositories",
    "start": "1567679",
    "end": "1571840"
  },
  {
    "text": "if i click on my web app which is the name of repository that i was using and i can see the latest version of",
    "start": "1573120",
    "end": "1581120"
  },
  {
    "text": "image was uploaded recently and this was the name of image",
    "start": "1581120",
    "end": "1586240"
  },
  {
    "text": "and then there was a tag which was appended",
    "start": "1586240",
    "end": "1591120"
  },
  {
    "text": "with my source code in code commit and my build automation done by code build",
    "start": "1591840",
    "end": "1597039"
  },
  {
    "text": "i'm now ready to tie them together using code pipeline for that back in aws management console",
    "start": "1597039",
    "end": "1604880"
  },
  {
    "text": "scroll down to developer tools and click on code pipeline in the code pipeline i'm",
    "start": "1604880",
    "end": "1612080"
  },
  {
    "text": "going to create a new pipeline and give it a name eks",
    "start": "1612080",
    "end": "1617440"
  },
  {
    "text": "demo1 i'm ok with creation of a new service role",
    "start": "1617440",
    "end": "1622559"
  },
  {
    "text": "and click on next in my case the source provider is quote commit",
    "start": "1622559",
    "end": "1630559"
  },
  {
    "text": "i want code pipeline to monitor my code repo specifically my master branch",
    "start": "1630640",
    "end": "1637679"
  },
  {
    "text": "with that selected click on next my build provider is code build we have",
    "start": "1637679",
    "end": "1643120"
  },
  {
    "text": "just created a build definition called eks demo one",
    "start": "1643120",
    "end": "1648000"
  },
  {
    "text": "with that selected and everything else kept to as default click next",
    "start": "1648320",
    "end": "1655840"
  },
  {
    "text": "right now my deployment steps are part of code build so i'm gonna skip the deploy stage",
    "start": "1656720",
    "end": "1664640"
  },
  {
    "text": "with all of this setup click on create pipeline",
    "start": "1665919",
    "end": "1671520"
  },
  {
    "text": "it's going to take couple of seconds and my pipeline should be up and running as",
    "start": "1676960",
    "end": "1682080"
  },
  {
    "text": "soon as i create a pipeline my changes will be triggered right now you can see",
    "start": "1682080",
    "end": "1689440"
  },
  {
    "text": "my pipeline has is already in progress",
    "start": "1689440",
    "end": "1693600"
  },
  {
    "text": "after waiting for a couple of minutes i can see that the both the stages of my code pipeline have completed",
    "start": "1694720",
    "end": "1701520"
  },
  {
    "text": "successfully to do the recap",
    "start": "1701520",
    "end": "1707200"
  },
  {
    "text": "we started this session by creating a code commit repo and by checking in our asp.net core",
    "start": "1707360",
    "end": "1714640"
  },
  {
    "text": "web application project it was a standard boilerplate project",
    "start": "1714640",
    "end": "1719840"
  },
  {
    "text": "with not many changes two additional files which i've checked in along with my project",
    "start": "1719840",
    "end": "1725279"
  },
  {
    "text": "the first one is build spec.yaml build spec is the build specification it contains all the steps which will be",
    "start": "1725279",
    "end": "1732399"
  },
  {
    "text": "executed by code build at the time of running the build the",
    "start": "1732399",
    "end": "1737440"
  },
  {
    "text": "second is hello k8s.tml this contains both the deployment as well as service",
    "start": "1737440",
    "end": "1744080"
  },
  {
    "text": "configuration this configuration file is applied to my eks cluster",
    "start": "1744080",
    "end": "1749520"
  },
  {
    "text": "once the docker image containing my application is created and pushed to the ecr",
    "start": "1749520",
    "end": "1756640"
  },
  {
    "text": "repository it's not very uncommon to break down",
    "start": "1756640",
    "end": "1763520"
  },
  {
    "text": "your build step into further sub steps you may like to do your build and deployment separately",
    "start": "1763520",
    "end": "1771200"
  },
  {
    "text": "to illustrate that our devops team at aws has created this sample application in",
    "start": "1771200",
    "end": "1778159"
  },
  {
    "text": "this application you can extend your code pipeline and break your build stage",
    "start": "1778159",
    "end": "1783279"
  },
  {
    "text": "into build and deployment separately using aws lambda",
    "start": "1783279",
    "end": "1788639"
  },
  {
    "text": "with that i have come to the end of this session here's the list of resources that i",
    "start": "1789600",
    "end": "1795679"
  },
  {
    "text": "referenced throughout the session i hope you found this session useful",
    "start": "1795679",
    "end": "1800960"
  },
  {
    "text": "thank you",
    "start": "1800960",
    "end": "1808640"
  }
]