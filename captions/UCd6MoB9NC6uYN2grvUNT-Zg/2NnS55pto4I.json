[
  {
    "text": "hi my name is eugene stepanov i'm a senior database solution architect with aws",
    "start": "880",
    "end": "7520"
  },
  {
    "text": "here at aws i focus on sql server and postgres and today we will talk",
    "start": "7520",
    "end": "13679"
  },
  {
    "text": "about relatively new feature that we launched on april 3rd of this year and that is sql server read replica",
    "start": "13679",
    "end": "21760"
  },
  {
    "text": "so agenda for today first we will take a look at uh rds sql server multi-z",
    "start": "21760",
    "end": "29840"
  },
  {
    "text": "multi-ise has been around for quite some time then we will take a careful look at rds",
    "start": "29840",
    "end": "36559"
  },
  {
    "text": "sql server read replica the new feature the reason why i want to discuss",
    "start": "36559",
    "end": "42079"
  },
  {
    "text": "both of these features together because they're very much closely related they both build on",
    "start": "42079",
    "end": "48960"
  },
  {
    "text": "sql server native technology called always on availability group and read replica in essence is a logical",
    "start": "48960",
    "end": "56160"
  },
  {
    "text": "extension of multi-iz feature then we will discuss some of the limitations",
    "start": "56160",
    "end": "63359"
  },
  {
    "text": "that this feature comes with and then we'll jump straight to the demo",
    "start": "63359",
    "end": "69680"
  },
  {
    "text": "all right as i mentioned before uh sql server multi is been around for",
    "start": "70159",
    "end": "77200"
  },
  {
    "text": "quite quite some time and this is a perfect example",
    "start": "77200",
    "end": "82240"
  },
  {
    "text": "how high availability has been delivered to you as a managed experience",
    "start": "82240",
    "end": "90400"
  },
  {
    "text": "those of you who deployed failover cluster instances or possibly always on",
    "start": "90400",
    "end": "95520"
  },
  {
    "text": "availability group know how involved that process is and how many moving parts",
    "start": "95520",
    "end": "101360"
  },
  {
    "text": "there is to it here on rds it is just a click of a button um",
    "start": "101360",
    "end": "108159"
  },
  {
    "text": "it's that easy and and i will demonstrate that later it's going to be part of my demo later",
    "start": "108159",
    "end": "114720"
  },
  {
    "text": "all right so on the diagram here you've got a this is a high level architecture diagram for multi-z feature",
    "start": "114720",
    "end": "122880"
  },
  {
    "text": "so you have node 1 in availability zone az1",
    "start": "122880",
    "end": "128479"
  },
  {
    "text": "you also have node 2 in a separate availability zone called az2",
    "start": "128479",
    "end": "135280"
  },
  {
    "text": "by the way those of you who are not familiar az stands for availability zone and availability zone",
    "start": "135280",
    "end": "140560"
  },
  {
    "text": "is nothing but a logical grouping of data centers within the larger region and",
    "start": "140560",
    "end": "148080"
  },
  {
    "text": "we design these availability zones um in a way that they sit on a different",
    "start": "148080",
    "end": "156080"
  },
  {
    "text": "flood plains and they draw power from different power grids to to give you that resilience in god",
    "start": "156080",
    "end": "163120"
  },
  {
    "text": "forbid in the case of a natural disaster so now you have your databases db1 db2",
    "start": "163120",
    "end": "170480"
  },
  {
    "text": "and so forth and those databases sit on node 1. and they are part of",
    "start": "170480",
    "end": "178159"
  },
  {
    "text": "availability group called rds ag0 now every transaction that has been",
    "start": "178159",
    "end": "186400"
  },
  {
    "text": "executed against any of these databases will be synchronously replicated over to node 2.",
    "start": "186400",
    "end": "196159"
  },
  {
    "text": "and now if your application connects uh via that listener endpoint",
    "start": "196159",
    "end": "205519"
  },
  {
    "text": "then in a case of a failure the rds will fail over behind that",
    "start": "206799",
    "end": "212720"
  },
  {
    "text": "listener endpoint and um you don't need to change anything you don't need need to change your application all",
    "start": "212720",
    "end": "219599"
  },
  {
    "text": "your application has to be able to do is to to have that retry logic",
    "start": "219599",
    "end": "224959"
  },
  {
    "text": "to re-establish the dropped connection and connection will",
    "start": "224959",
    "end": "230640"
  },
  {
    "text": "be dropped during the failover reestablish that connection and re-execute the sequel that",
    "start": "230640",
    "end": "238239"
  },
  {
    "text": "was running when when a failover failover process started",
    "start": "238239",
    "end": "246239"
  },
  {
    "text": "all right um as i mentioned the the transactions to",
    "start": "246319",
    "end": "252480"
  },
  {
    "text": "node 2 will be synchronously replicated which means that that enables the no data loss no data last",
    "start": "252480",
    "end": "260239"
  },
  {
    "text": "scenario [Music] also [Music]",
    "start": "260239",
    "end": "266400"
  },
  {
    "text": "both automatic and manual failover uh failover available and um",
    "start": "266400",
    "end": "273759"
  },
  {
    "text": "it is important to remember that multi-id feature is available for both",
    "start": "273759",
    "end": "281120"
  },
  {
    "text": "enterprise and standard and for modern as well as",
    "start": "281120",
    "end": "287440"
  },
  {
    "text": "older uh versions of sql server but it's only 2016 and 2017",
    "start": "287440",
    "end": "295759"
  },
  {
    "text": "edition that rely on built-in always own availability group",
    "start": "295759",
    "end": "302000"
  },
  {
    "text": "technology for the multi-easy implementation",
    "start": "302000",
    "end": "307280"
  },
  {
    "text": "all standard editions and all the versions of enterprise like",
    "start": "307280",
    "end": "314080"
  },
  {
    "text": "2012 and 2014 they all rely on um database mirroring",
    "start": "314080",
    "end": "321759"
  },
  {
    "text": "for the multi-ic implementation and that will become later that will become important later",
    "start": "321759",
    "end": "330400"
  },
  {
    "text": "it is also important to remember that that second",
    "start": "330400",
    "end": "337600"
  },
  {
    "text": "hot standby secondary hot standby in note 2 is um a hot standby",
    "start": "337600",
    "end": "346560"
  },
  {
    "text": "uh exclusively reserved for high availability purposes only it is not possible to",
    "start": "346560",
    "end": "354479"
  },
  {
    "text": "send your read traffic against that that replica and essentially if you do",
    "start": "354479",
    "end": "363280"
  },
  {
    "text": "something like application intent read only hoping to get to that secondary",
    "start": "363280",
    "end": "368960"
  },
  {
    "text": "secondary note um that is not going to work that way",
    "start": "368960",
    "end": "374560"
  },
  {
    "text": "our customers love multi-z they loved the way",
    "start": "375360",
    "end": "382960"
  },
  {
    "text": "we implemented it they love that now it is so much easier to deploy",
    "start": "382960",
    "end": "388479"
  },
  {
    "text": "high availability [Music] but the customer feedback was",
    "start": "388479",
    "end": "395919"
  },
  {
    "text": "it's a great feature but we really need ability to offload our read traffic to a read",
    "start": "395919",
    "end": "403520"
  },
  {
    "text": "replicas and we take our our customer feedback customers like",
    "start": "403520",
    "end": "410479"
  },
  {
    "text": "yourself very very seriously and um actually 90 of our roadmap is is driven",
    "start": "410479",
    "end": "417599"
  },
  {
    "text": "by by the feedback feedback like that and straight out of the oven read replica",
    "start": "417599",
    "end": "425759"
  },
  {
    "text": "which was launched as i said on april 3rd of this year",
    "start": "425759",
    "end": "432720"
  },
  {
    "text": "all right what you see on the screen is a high level diagram",
    "start": "434880",
    "end": "440400"
  },
  {
    "text": "of the read replica implementation and hopefully you realize that this is",
    "start": "440400",
    "end": "446080"
  },
  {
    "text": "nothing but a logical extension of a diagram that we saw in the previous slide",
    "start": "446080",
    "end": "452800"
  },
  {
    "text": "here you still have your node 1 and availability zone az1",
    "start": "452800",
    "end": "457840"
  },
  {
    "text": "you still have node 2 and availabilities on az2 and there is a availability group",
    "start": "457840",
    "end": "465120"
  },
  {
    "text": "called rds ag0 but now we also have note 3",
    "start": "465120",
    "end": "470879"
  },
  {
    "text": "sitting in availabilities on az3 now note 3 has its own availability",
    "start": "470879",
    "end": "477919"
  },
  {
    "text": "group called read replica availability group and now both rds",
    "start": "477919",
    "end": "485280"
  },
  {
    "text": "ag0 and read replica g are both members of",
    "start": "485280",
    "end": "492240"
  },
  {
    "text": "another overarching availability group called distributed ag",
    "start": "492240",
    "end": "499440"
  },
  {
    "text": "and now every transaction that's been executed against master against any one of these",
    "start": "499440",
    "end": "506000"
  },
  {
    "text": "databases db1 db2 and so forth will still be synchronously replicated",
    "start": "506000",
    "end": "512000"
  },
  {
    "text": "over to the hot standby to the secondary in on the node 2",
    "start": "512000",
    "end": "518159"
  },
  {
    "text": "and will be asynchronously replicated over to node three i repeat it's",
    "start": "518159",
    "end": "524000"
  },
  {
    "text": "asynchronous replication only you cannot change that behavior",
    "start": "524000",
    "end": "530720"
  },
  {
    "text": "now um let's talk about the prerequisites um it's an enterprise edition only i hope that",
    "start": "530880",
    "end": "536720"
  },
  {
    "text": "makes sense not only is enterprise only",
    "start": "536720",
    "end": "542160"
  },
  {
    "text": "if you on 2016 your build number has to be at least this or later",
    "start": "542160",
    "end": "550600"
  },
  {
    "text": "5216.0 or higher if you on the lower on on the",
    "start": "550600",
    "end": "556640"
  },
  {
    "text": "earlier builds of 2016 you will not be able to launch read replica",
    "start": "556640",
    "end": "561760"
  },
  {
    "text": "if you own 2617 your build number has to be",
    "start": "561760",
    "end": "566959"
  },
  {
    "text": "at least 30 49.1 or later and again if you on the",
    "start": "566959",
    "end": "573279"
  },
  {
    "text": "earlier builds of 2017 again you're not going to be able to launch a read replica",
    "start": "573279",
    "end": "580959"
  },
  {
    "text": "your deployment has to be configured in the multi-z",
    "start": "580959",
    "end": "587600"
  },
  {
    "text": "uh odd if you in the single ac you will not be able to configure uh and launch read replica",
    "start": "587600",
    "end": "596560"
  },
  {
    "text": "and the automated backup retention policy has to be set to any number greater than zero i hope",
    "start": "596560",
    "end": "603360"
  },
  {
    "text": "that makes sense with that let's talk about some of the",
    "start": "603360",
    "end": "609360"
  },
  {
    "text": "limitations of the read replica the first one it's in region currently it is not",
    "start": "609360",
    "end": "616720"
  },
  {
    "text": "possible to launch any of the read replicas in a separate",
    "start": "616720",
    "end": "623519"
  },
  {
    "text": "um in a separate region you can have only up to five of them at this point",
    "start": "623519",
    "end": "630000"
  },
  {
    "text": "and as i mentioned before it's asynchronous replication mechanism only",
    "start": "630000",
    "end": "636399"
  },
  {
    "text": "again um read replicas every read replica comes with its own",
    "start": "636399",
    "end": "642560"
  },
  {
    "text": "separate endpoint and again uh going back to the going back to the",
    "start": "642560",
    "end": "648240"
  },
  {
    "text": "previous slide it is impossible to offload your read traffic and get to",
    "start": "648240",
    "end": "654880"
  },
  {
    "text": "note 3 through the primary endpoint it's just not going to work that way",
    "start": "654880",
    "end": "660480"
  },
  {
    "text": "in order to offload ud traffic you have to configure your application to go against",
    "start": "660480",
    "end": "666959"
  },
  {
    "text": "the read replica endpoint all right um there's also no",
    "start": "666959",
    "end": "673760"
  },
  {
    "text": "failover there is no failover between your primary and the read replica there is another",
    "start": "673760",
    "end": "679519"
  },
  {
    "text": "mechanism called promotion but promotion is completely completely different it's a completely different",
    "start": "679519",
    "end": "685440"
  },
  {
    "text": "different action um and it's it's a confusion that creates confusion for lots of folks so it's important to",
    "start": "685440",
    "end": "691839"
  },
  {
    "text": "understand the difference uh what failover does failover",
    "start": "691839",
    "end": "697279"
  },
  {
    "text": "you can fail over and you can fail back but that doesn't change the the the relationship between your",
    "start": "697279",
    "end": "703680"
  },
  {
    "text": "notes um what promotion does on the other hand after you initiate the promotion the",
    "start": "703680",
    "end": "711120"
  },
  {
    "text": "promotion will completely break up the relationship and by the end by the time the promotion",
    "start": "711120",
    "end": "717040"
  },
  {
    "text": "is is is complete you will end up with completely independent",
    "start": "717040",
    "end": "724800"
  },
  {
    "text": "completely standalone sql server deployment that has no longer related",
    "start": "724800",
    "end": "733360"
  },
  {
    "text": "to the original uh master there will be there will be no",
    "start": "733360",
    "end": "739120"
  },
  {
    "text": "relationship between the two that's very important it's very important to remember",
    "start": "739120",
    "end": "746160"
  },
  {
    "text": "and with that let's jump to the demo all right",
    "start": "746160",
    "end": "753760"
  },
  {
    "text": "i'm here i'm here at management console and i'm going to",
    "start": "753760",
    "end": "759600"
  },
  {
    "text": "click on rds let's go to rds console",
    "start": "759600",
    "end": "765600"
  },
  {
    "text": "let's click on the databases and here well i personally work a lot on",
    "start": "765600",
    "end": "772560"
  },
  {
    "text": "postgres and and sql server so you you see you see some postgres aurora",
    "start": "772560",
    "end": "779120"
  },
  {
    "text": "postgres rds postgres and sql server sql server",
    "start": "779120",
    "end": "784639"
  },
  {
    "text": "instances running prior to this demo i launched four um instances one two three and four",
    "start": "784639",
    "end": "792399"
  },
  {
    "text": "um as you can see here two of them are enterprise editions and two standard editions",
    "start": "792399",
    "end": "799360"
  },
  {
    "text": "the three and four standard editions now let's scroll to the very right",
    "start": "799360",
    "end": "807120"
  },
  {
    "text": "you can see all of them all of them available and let's take a look at this last",
    "start": "807120",
    "end": "812959"
  },
  {
    "text": "column called multi-z as i mentioned before multi-z",
    "start": "812959",
    "end": "819600"
  },
  {
    "text": "is available for both for standard info enterprise for newer and folder versions",
    "start": "819600",
    "end": "826800"
  },
  {
    "text": "right so here in the multi-easy column very simple right yes or no so we've got",
    "start": "826800",
    "end": "833920"
  },
  {
    "text": "two of them deployed as multi-z here and here and two of them are single",
    "start": "833920",
    "end": "840839"
  },
  {
    "text": "az and again the newer versions the the enterprise editions of 2016 and 2017",
    "start": "840839",
    "end": "849519"
  },
  {
    "text": "rely on always on availability group as the underlying mechanism for the for the multi-az",
    "start": "849519",
    "end": "857040"
  },
  {
    "text": "but older versions and all of the standard editions right um old standard and",
    "start": "857040",
    "end": "864959"
  },
  {
    "text": "2014 and 2012 of enterprise rely on database mirroring",
    "start": "864959",
    "end": "872399"
  },
  {
    "text": "and you can tell um in the parenthesis it tells you the internal mechanism that is relying on",
    "start": "872399",
    "end": "878639"
  },
  {
    "text": "all right with that let's go ahead and let's launch new instance",
    "start": "878639",
    "end": "886560"
  },
  {
    "text": "uh let's click sql server let's go with enterprise edition",
    "start": "888240",
    "end": "895040"
  },
  {
    "text": "here on the version drop down again",
    "start": "895040",
    "end": "902240"
  },
  {
    "text": "if you own 2016 you have to be",
    "start": "902240",
    "end": "907920"
  },
  {
    "text": "you have to be at least at the build number",
    "start": "910399",
    "end": "916199"
  },
  {
    "text": "5216.0 or higher uh if you on the earlier builds you're",
    "start": "916199",
    "end": "922240"
  },
  {
    "text": "not going to be able to launch read read replica and if you on 2016 you have to be",
    "start": "922240",
    "end": "930720"
  },
  {
    "text": "at least at the build number 30 49.1 or later and again if you only",
    "start": "930720",
    "end": "938480"
  },
  {
    "text": "older builds you're not going to be able to have your read replica i'm just going to go ahead with the latest one",
    "start": "938480",
    "end": "945279"
  },
  {
    "text": "and i am going to just say demo i'm going to give it",
    "start": "945279",
    "end": "952000"
  },
  {
    "text": "identifier unique identifier demo 5 and i am going to give it a",
    "start": "952000",
    "end": "961519"
  },
  {
    "text": "master user name and a password",
    "start": "962000",
    "end": "969839"
  },
  {
    "text": "all right and i'm gonna leave a lot of the settings to it to its defaults",
    "start": "973519",
    "end": "980800"
  },
  {
    "text": "here we're coming up on the availability and durability and again um those of you who deployed",
    "start": "981360",
    "end": "987920"
  },
  {
    "text": "failover cluster instances always unavailability group or database mirroring or lock shipping or any of",
    "start": "987920",
    "end": "993839"
  },
  {
    "text": "these technologies know how many steps how much how",
    "start": "993839",
    "end": "998959"
  },
  {
    "text": "how complex that process is how involved that process is here on rds it literally it's a it's a",
    "start": "998959",
    "end": "1005360"
  },
  {
    "text": "click of a button you say no and it's single lazy or you say yes and",
    "start": "1005360",
    "end": "1010399"
  },
  {
    "text": "we're gonna deploy your ha solution for you",
    "start": "1010399",
    "end": "1015440"
  },
  {
    "text": "all right um here i'm gonna deploy to default vpc and i am going to deploy to my private",
    "start": "1015440",
    "end": "1022959"
  },
  {
    "text": "subnet group and i suggest you do this the same do not deploy your database",
    "start": "1022959",
    "end": "1029438"
  },
  {
    "text": "instances into a public public subnet it's just a recipe for disaster and",
    "start": "1029439",
    "end": "1036640"
  },
  {
    "text": "i am going to deploy to my uh private sql server security group",
    "start": "1036640",
    "end": "1042880"
  },
  {
    "text": "egal security group is nothing but a virtual firewall that lets you configure the port and the protocol",
    "start": "1042880",
    "end": "1050840"
  },
  {
    "text": "and and that determines what what can come in and out",
    "start": "1050840",
    "end": "1059520"
  },
  {
    "text": "and essentially i'm going to scroll to the very bottom and i'm going to",
    "start": "1059520",
    "end": "1065200"
  },
  {
    "text": "create create database all right and now we see our demo",
    "start": "1065200",
    "end": "1073120"
  },
  {
    "text": "5 instance being created so that process it's going to take it's",
    "start": "1073120",
    "end": "1080160"
  },
  {
    "text": "going to take if i were to guess 25 30 minutes something like this but we don't have to wait i already have enough instances",
    "start": "1080160",
    "end": "1088240"
  },
  {
    "text": "that i launched prior to to this recording so let's go ahead and let's",
    "start": "1088240",
    "end": "1096160"
  },
  {
    "text": "um go and connect to my instance that i already have",
    "start": "1096160",
    "end": "1104000"
  },
  {
    "text": "running here and available and that would be",
    "start": "1104000",
    "end": "1109440"
  },
  {
    "text": "demore one so let's click on that and we're gonna see a lot of very",
    "start": "1109440",
    "end": "1116559"
  },
  {
    "text": "important details and summary about this instance but",
    "start": "1116559",
    "end": "1122960"
  },
  {
    "text": "what's relevant to this demo is here on the connectivity and security",
    "start": "1122960",
    "end": "1128559"
  },
  {
    "text": "and here you see a listener endpoint so let's grab",
    "start": "1128559",
    "end": "1134960"
  },
  {
    "text": "that and by the way you can tell that it's a listener because it has the word listener in the",
    "start": "1134960",
    "end": "1140880"
  },
  {
    "text": "e in in the endpoint itself so i'm going to copy that",
    "start": "1140880",
    "end": "1146480"
  },
  {
    "text": "and now i am going to my jump box",
    "start": "1146480",
    "end": "1154559"
  },
  {
    "text": "let me resize the window here",
    "start": "1154559",
    "end": "1165840"
  },
  {
    "text": "all right so i have a jump box with ssms install on it so let's go ahead and",
    "start": "1172400",
    "end": "1177440"
  },
  {
    "text": "let's connect to our listener endpoint",
    "start": "1177440",
    "end": "1183280"
  },
  {
    "text": "it is demo one instance",
    "start": "1184559",
    "end": "1193280"
  },
  {
    "text": "let's connect to it all right now we're connected to our listener endpoint",
    "start": "1193280",
    "end": "1199120"
  },
  {
    "text": "and as you can see there is nothing on that instance it's a freshly built it's a newly",
    "start": "1199120",
    "end": "1206480"
  },
  {
    "text": "deployed instance and by the way this database rds admin database um",
    "start": "1206480",
    "end": "1213679"
  },
  {
    "text": "you are yes admin database is part of our control plane so you our customer have no visibility",
    "start": "1213679",
    "end": "1221679"
  },
  {
    "text": "have no control over the over that database it is always there",
    "start": "1221679",
    "end": "1227919"
  },
  {
    "text": "all right so now i have this primitive script it uh it creates a",
    "start": "1227919",
    "end": "1234000"
  },
  {
    "text": "database it creates a single table and it puts a handful of handful of records into that table so",
    "start": "1234000",
    "end": "1242240"
  },
  {
    "text": "let's go ahead and let's execute it but first of all we need to connect this",
    "start": "1242240",
    "end": "1248320"
  },
  {
    "text": "window also all right",
    "start": "1248320",
    "end": "1253679"
  },
  {
    "text": "all right now we connected we are um",
    "start": "1261840",
    "end": "1267039"
  },
  {
    "text": "it's master here so let's go ahead and let's create database",
    "start": "1267120",
    "end": "1272240"
  },
  {
    "text": "all right database is created it's called db2 let's switch over to it db2",
    "start": "1272240",
    "end": "1278240"
  },
  {
    "text": "and let's go ahead create the table all right table is created i have 10",
    "start": "1278240",
    "end": "1285280"
  },
  {
    "text": "records here in my script let's go ahead and insert half of them",
    "start": "1285280",
    "end": "1290720"
  },
  {
    "text": "five records and we save the other five for later so okay uh",
    "start": "1290720",
    "end": "1297280"
  },
  {
    "text": "records are inserted let's make sure they're there",
    "start": "1297280",
    "end": "1304320"
  },
  {
    "text": "here's our five records and let's capture the net bias name of the server of our",
    "start": "1304320",
    "end": "1312320"
  },
  {
    "text": "primary server that's the server name that currently backs",
    "start": "1312320",
    "end": "1317520"
  },
  {
    "text": "and serves our listener endpoint right so let me put it here",
    "start": "1317520",
    "end": "1323919"
  },
  {
    "text": "now let's go back to the console we over here this is our",
    "start": "1323919",
    "end": "1332159"
  },
  {
    "text": "demo one instance and let's uh inject a failure let's click on a",
    "start": "1332159",
    "end": "1338960"
  },
  {
    "text": "reboot all right and i'm gonna say reboot with",
    "start": "1338960",
    "end": "1344240"
  },
  {
    "text": "a failover and now you can see the instance here",
    "start": "1344240",
    "end": "1351280"
  },
  {
    "text": "our instance is being rebooted now let's go back to the databases",
    "start": "1351280",
    "end": "1361280"
  },
  {
    "text": "and again we're going to see we're going to see it's rebooting",
    "start": "1361280",
    "end": "1367520"
  },
  {
    "text": "our demo 5 is still being created",
    "start": "1367600",
    "end": "1374720"
  },
  {
    "text": "but our primary is being rebooted but we don't have to wait again we have",
    "start": "1374720",
    "end": "1382240"
  },
  {
    "text": "a high availability deployed and we are connected via the listener endpoint so let's go",
    "start": "1382240",
    "end": "1389679"
  },
  {
    "text": "back to our um",
    "start": "1389679",
    "end": "1394720"
  },
  {
    "text": "to our jump box to the management studio and let's now execute the same",
    "start": "1394720",
    "end": "1402000"
  },
  {
    "text": "select well we still have the five records here but now let's execute the add add server",
    "start": "1402000",
    "end": "1409280"
  },
  {
    "text": "name and let's see and let's compare the netbias name of the server",
    "start": "1409280",
    "end": "1417120"
  },
  {
    "text": "that backs the and serves the endpoint now and you can see that the the name is",
    "start": "1417120",
    "end": "1423440"
  },
  {
    "text": "different now um and the explanation is is obvious right we just experienced the failover",
    "start": "1423440",
    "end": "1430720"
  },
  {
    "text": "therefore the the old the old primary is now being rebooted",
    "start": "1430720",
    "end": "1438080"
  },
  {
    "text": "but the um what used to be a hot standby is now new primary",
    "start": "1438080",
    "end": "1446000"
  },
  {
    "text": "all right so with that let's go back to the console",
    "start": "1446000",
    "end": "1452159"
  },
  {
    "text": "and let's refresh it",
    "start": "1453120",
    "end": "1459840"
  },
  {
    "text": "so demo one is now available",
    "start": "1467039",
    "end": "1473440"
  },
  {
    "text": "and let's go ahead and let's create a read replica grid replica here it's",
    "start": "1473440",
    "end": "1480240"
  },
  {
    "text": "off of the actions menu create read replica and it takes us to",
    "start": "1480240",
    "end": "1486000"
  },
  {
    "text": "the screen very similar to what we just went through the the creation",
    "start": "1486000",
    "end": "1491360"
  },
  {
    "text": "screen um um in in here's the power of the read",
    "start": "1491360",
    "end": "1497520"
  },
  {
    "text": "replica you don't have to size your read replica exactly the same way you size your primary",
    "start": "1497520",
    "end": "1504960"
  },
  {
    "text": "you can well of course depending on what you're going to do with it but if you if the intention is to",
    "start": "1504960",
    "end": "1512320"
  },
  {
    "text": "send send a heavy read traffic over to it maybe you need a bigger box",
    "start": "1512320",
    "end": "1518159"
  },
  {
    "text": "or maybe you can get away with uh with the smaller instance",
    "start": "1518159",
    "end": "1523200"
  },
  {
    "text": "just just be aware that this read replica still has to keep up with",
    "start": "1523200",
    "end": "1529039"
  },
  {
    "text": "the primary keep that in mind so i'm just going to go ahead and i'm going to create the same instant size",
    "start": "1529039",
    "end": "1536400"
  },
  {
    "text": "i'm going to leave a lot of it to its default",
    "start": "1536400",
    "end": "1543840"
  },
  {
    "text": "and i'm gonna say here oh this is the read replica source for the so for the instance identifier",
    "start": "1544320",
    "end": "1552480"
  },
  {
    "text": "let's go ahead and let's say demo one read replica",
    "start": "1552480",
    "end": "1561679"
  },
  {
    "text": "all right everything else is",
    "start": "1562159",
    "end": "1568799"
  },
  {
    "text": "we're going to leave alone and we're going to go ahead and we're going to create create we're going to click create read",
    "start": "1569679",
    "end": "1575120"
  },
  {
    "text": "replica all right let's refresh the screen",
    "start": "1575120",
    "end": "1585840"
  },
  {
    "text": "and now we can see that an instance called demo dash one",
    "start": "1588480",
    "end": "1594960"
  },
  {
    "text": "dash reads replica is it has a role of replica",
    "start": "1594960",
    "end": "1602799"
  },
  {
    "text": "and demo one is a master and let's scroll over and now it is",
    "start": "1602799",
    "end": "1610559"
  },
  {
    "text": "being created all right so this process is going to take few minutes",
    "start": "1610559",
    "end": "1616320"
  },
  {
    "text": "so i'm going to pause the recording and i'm going to go come back when when we have",
    "start": "1616320",
    "end": "1622880"
  },
  {
    "text": "our read replica up and running thank you all right it's been it's been about 20",
    "start": "1622880",
    "end": "1630080"
  },
  {
    "text": "minutes i'm back um and let's take a look let's take a look what's going on with",
    "start": "1630080",
    "end": "1636880"
  },
  {
    "text": "our read replica so it's right here demo read replica and",
    "start": "1636880",
    "end": "1641919"
  },
  {
    "text": "the status is now available all right so let's go ahead and",
    "start": "1641919",
    "end": "1649120"
  },
  {
    "text": "let's try to connect all right you click on uh read replica",
    "start": "1649120",
    "end": "1656960"
  },
  {
    "text": "and we are going to grab this endpoint",
    "start": "1656960",
    "end": "1662480"
  },
  {
    "text": "copy that and let's go to the jam box we still connect",
    "start": "1662480",
    "end": "1670000"
  },
  {
    "text": "it to our listener and now let's",
    "start": "1670000",
    "end": "1675039"
  },
  {
    "text": "open another connection",
    "start": "1675360",
    "end": "1683840"
  },
  {
    "text": "to our read replica all right so it is right here demo dash",
    "start": "1684880",
    "end": "1693039"
  },
  {
    "text": "one dash re-dash replica and we have our db2",
    "start": "1693039",
    "end": "1702080"
  },
  {
    "text": "database it's called synchronized let's take a look table 1 is here and let's select we have",
    "start": "1702080",
    "end": "1710320"
  },
  {
    "text": "five records now let's go back to our primary",
    "start": "1710320",
    "end": "1716880"
  },
  {
    "text": "this is still our listener right this is the the primary listener endpoint and let's",
    "start": "1717279",
    "end": "1723760"
  },
  {
    "text": "insert the another five records",
    "start": "1723760",
    "end": "1730720"
  },
  {
    "text": "so i'm inserted five records let's make sure they're there",
    "start": "1730720",
    "end": "1739840"
  },
  {
    "text": "all right we have now we have now 10 records and now",
    "start": "1741039",
    "end": "1748799"
  },
  {
    "text": "let's go back to the read replica",
    "start": "1748799",
    "end": "1753840"
  },
  {
    "text": "and let's re-execute the connection and now we see the same same five times sorry 10",
    "start": "1753840",
    "end": "1761039"
  },
  {
    "text": "records all right now let's go back to the console so here i have my demo one",
    "start": "1761039",
    "end": "1770080"
  },
  {
    "text": "read replica and now if i scroll down i'm coming up on this replication",
    "start": "1770080",
    "end": "1777440"
  },
  {
    "text": "section and here you can see our our master",
    "start": "1777440",
    "end": "1782799"
  },
  {
    "text": "role is master and then our read replica which obviously has roll",
    "start": "1782799",
    "end": "1789200"
  },
  {
    "text": "off replica and now you can see the replication state it's replicating and also there's this",
    "start": "1789200",
    "end": "1796799"
  },
  {
    "text": "lag column well in my case it's not populated but essentially what it is it's uh it's a",
    "start": "1796799",
    "end": "1803760"
  },
  {
    "text": "number of seconds that your read replica is behind your master",
    "start": "1803760",
    "end": "1809279"
  },
  {
    "text": "and the way we calculate it essentially if you have two databases one is behind by five seconds another one is behind by",
    "start": "1809279",
    "end": "1816720"
  },
  {
    "text": "10 seconds this lag is going to show you the 10 seconds seconds so it's the highest of all the lags",
    "start": "1816720",
    "end": "1825360"
  },
  {
    "text": "for all of the databases that are being replicated all right and now let's go and",
    "start": "1825360",
    "end": "1833440"
  },
  {
    "text": "let's promote our replica it is here again off of the actions menu",
    "start": "1833440",
    "end": "1841120"
  },
  {
    "text": "you can click promote and again [Music]",
    "start": "1841120",
    "end": "1847200"
  },
  {
    "text": "there are some configuration parameters you click on continue and here the",
    "start": "1847200",
    "end": "1853679"
  },
  {
    "text": "here's the note that essentially says that this is irreversible it's a one-way street",
    "start": "1853679",
    "end": "1860559"
  },
  {
    "text": "after you click on that promotion button there will be no going back you will not",
    "start": "1860559",
    "end": "1866559"
  },
  {
    "text": "be able to establish a replication between your",
    "start": "1866559",
    "end": "1872320"
  },
  {
    "text": "read replica and your master all right so we click read wrap promote",
    "start": "1872320",
    "end": "1879440"
  },
  {
    "text": "read replica",
    "start": "1879440",
    "end": "1882158"
  },
  {
    "text": "let's click on databases",
    "start": "1887360",
    "end": "1893840"
  },
  {
    "text": "let's see status it's now being modified",
    "start": "1894799",
    "end": "1900880"
  },
  {
    "text": "so this process is going to take some time so i'm going to pause and i'm going to come back when it's",
    "start": "1905200",
    "end": "1910799"
  },
  {
    "text": "done all right it's been about two minutes and now we",
    "start": "1910799",
    "end": "1916559"
  },
  {
    "text": "have our read replica being available so the process has",
    "start": "1916559",
    "end": "1924799"
  },
  {
    "text": "completed and in the role column you now can see",
    "start": "1924799",
    "end": "1931360"
  },
  {
    "text": "it's just an instance our demo one is no longer say",
    "start": "1931360",
    "end": "1936480"
  },
  {
    "text": "master and our read replica knows no longer says says replica because now it's a",
    "start": "1936480",
    "end": "1941919"
  },
  {
    "text": "standalone it's a standalone instance all right and that brings us to the end",
    "start": "1941919",
    "end": "1947519"
  },
  {
    "text": "of this demo i hope that was beneficial thank you very very much for finding",
    "start": "1947519",
    "end": "1955120"
  },
  {
    "text": "time and watching this video again i hope i hope you learn a lot and i hope you now",
    "start": "1955120",
    "end": "1962080"
  },
  {
    "text": "see how easy it is to deploy read replica on on rds and with that",
    "start": "1962080",
    "end": "1970480"
  },
  {
    "text": "i would like to wish all of you happy computing from all of us at aws thank you very much",
    "start": "1970480",
    "end": "1979600"
  }
]