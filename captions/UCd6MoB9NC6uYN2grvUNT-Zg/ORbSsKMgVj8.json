[
  {
    "start": "0",
    "end": "87000"
  },
  {
    "text": "hi everybody my name is shat Gupta and",
    "start": "5000",
    "end": "7439"
  },
  {
    "text": "I'm head of product for AWS entity",
    "start": "7439",
    "end": "10360"
  },
  {
    "text": "resolution AWS entity resolution helps",
    "start": "10360",
    "end": "13240"
  },
  {
    "text": "you to match link and enhance consumer",
    "start": "13240",
    "end": "16520"
  },
  {
    "text": "records across desperate channels and",
    "start": "16520",
    "end": "20560"
  },
  {
    "text": "applications AWS entity resolution",
    "start": "20560",
    "end": "23519"
  },
  {
    "text": "provides you rule machine learning and",
    "start": "23519",
    "end": "26320"
  },
  {
    "text": "provider based matching",
    "start": "26320",
    "end": "28000"
  },
  {
    "text": "capabilities today we're going to focus",
    "start": "28000",
    "end": "30439"
  },
  {
    "text": "on provider based matching capabilities",
    "start": "30439",
    "end": "32840"
  },
  {
    "text": "which spans across live ramp Transunion",
    "start": "32840",
    "end": "36520"
  },
  {
    "text": "and open framework uid",
    "start": "36520",
    "end": "39280"
  },
  {
    "text": "2.0 these different Integrations helps",
    "start": "39280",
    "end": "42480"
  },
  {
    "text": "you to achieve a better consumer view",
    "start": "42480",
    "end": "45280"
  },
  {
    "text": "with enhanced records at the same times",
    "start": "45280",
    "end": "47840"
  },
  {
    "text": "a set of advertising IDs that helps you",
    "start": "47840",
    "end": "50239"
  },
  {
    "text": "to go and create advertising campaigns",
    "start": "50239",
    "end": "53600"
  },
  {
    "text": "in the DSP provider of your",
    "start": "53600",
    "end": "56160"
  },
  {
    "text": "choice today this process takes weeks of",
    "start": "56160",
    "end": "59440"
  },
  {
    "text": "development time and what we going to",
    "start": "59440",
    "end": "61519"
  },
  {
    "text": "learn in the demo today will help reduce",
    "start": "61519",
    "end": "63879"
  },
  {
    "text": "all this development time to a few",
    "start": "63879",
    "end": "66439"
  },
  {
    "text": "clicks and for walking over the demo",
    "start": "66439",
    "end": "69600"
  },
  {
    "text": "specifically around uid 2.0 today we",
    "start": "69600",
    "end": "72920"
  },
  {
    "text": "have Jamie Nash in the room who is",
    "start": "72920",
    "end": "75640"
  },
  {
    "text": "director of product marketing at the",
    "start": "75640",
    "end": "77439"
  },
  {
    "text": "trade desk and we also have ponisha in",
    "start": "77439",
    "end": "79960"
  },
  {
    "text": "the room who is a Senor Solutions",
    "start": "79960",
    "end": "81680"
  },
  {
    "text": "architect with AWS entity resolution",
    "start": "81680",
    "end": "84840"
  },
  {
    "text": "with that let's get started so Jamie",
    "start": "84840",
    "end": "87320"
  },
  {
    "start": "87000",
    "end": "153000"
  },
  {
    "text": "tell us a little bit about uid 2.0 and",
    "start": "87320",
    "end": "90320"
  },
  {
    "text": "how is it an open framework sure and",
    "start": "90320",
    "end": "92920"
  },
  {
    "text": "thank you so much for having me Shabbat",
    "start": "92920",
    "end": "95040"
  },
  {
    "text": "so uid 2 or unified ID 2.0 is an email",
    "start": "95040",
    "end": "99600"
  },
  {
    "text": "or phone number based identifier that's",
    "start": "99600",
    "end": "102240"
  },
  {
    "text": "built with double encryption and cross",
    "start": "102240",
    "end": "104640"
  },
  {
    "text": "functional opt outs so this makes it an",
    "start": "104640",
    "end": "107399"
  },
  {
    "text": "upgrade to traditional identifiers used",
    "start": "107399",
    "end": "110320"
  },
  {
    "text": "for identity and first- party activation",
    "start": "110320",
    "end": "113439"
  },
  {
    "text": "across the programmatic ecosystem and",
    "start": "113439",
    "end": "116000"
  },
  {
    "text": "what makes this an open framework is the",
    "start": "116000",
    "end": "118759"
  },
  {
    "text": "open source availability of uid 2.0 that",
    "start": "118759",
    "end": "122920"
  },
  {
    "text": "means that anyone in the advertising",
    "start": "122920",
    "end": "125600"
  },
  {
    "text": "ecosystem whether you're an Advertiser a",
    "start": "125600",
    "end": "128319"
  },
  {
    "text": "publisher a data or a measurement",
    "start": "128319",
    "end": "130679"
  },
  {
    "text": "provider a DSP or an SSP can access and",
    "start": "130679",
    "end": "134920"
  },
  {
    "text": "use uuid2 for programmatic Activation",
    "start": "134920",
    "end": "138040"
  },
  {
    "text": "and use cases and because it's so",
    "start": "138040",
    "end": "141200"
  },
  {
    "text": "ubiquitous and accessible to anyone in",
    "start": "141200",
    "end": "143680"
  },
  {
    "text": "the ecosystem we have an opportunity to",
    "start": "143680",
    "end": "146200"
  },
  {
    "text": "upgrade identity across the entire open",
    "start": "146200",
    "end": "149280"
  },
  {
    "text": "internet",
    "start": "149280",
    "end": "150360"
  },
  {
    "text": "with better more durable identifiers",
    "start": "150360",
    "end": "152840"
  },
  {
    "text": "thank you Jamie so I also read that uid",
    "start": "152840",
    "end": "155360"
  },
  {
    "start": "153000",
    "end": "170000"
  },
  {
    "text": "2.0 is free of cost right which just",
    "start": "155360",
    "end": "157200"
  },
  {
    "text": "makes it easier for customers to use it",
    "start": "157200",
    "end": "159000"
  },
  {
    "text": "that's exactly right because it's an",
    "start": "159000",
    "end": "160640"
  },
  {
    "text": "open-source solution there's no cost to",
    "start": "160640",
    "end": "163519"
  },
  {
    "text": "any participant in the ecosystem that",
    "start": "163519",
    "end": "165879"
  },
  {
    "text": "wants to generate uid tws or send them",
    "start": "165879",
    "end": "168120"
  },
  {
    "text": "to Partners for Activation and",
    "start": "168120",
    "end": "169480"
  },
  {
    "text": "measurement got it and today I'm",
    "start": "169480",
    "end": "171800"
  },
  {
    "start": "170000",
    "end": "204000"
  },
  {
    "text": "assuming customers need to go and",
    "start": "171800",
    "end": "173200"
  },
  {
    "text": "integrate with apis like what do",
    "start": "173200",
    "end": "175239"
  },
  {
    "text": "customers do today to use uid so today",
    "start": "175239",
    "end": "177800"
  },
  {
    "text": "to use unified ID 2os in inside of AWS",
    "start": "177800",
    "end": "180840"
  },
  {
    "text": "there is some development work required",
    "start": "180840",
    "end": "183400"
  },
  {
    "text": "you need to integrate some data",
    "start": "183400",
    "end": "186560"
  },
  {
    "text": "sometimes you need to generate some",
    "start": "186560",
    "end": "188200"
  },
  {
    "text": "Computing resources and you also need to",
    "start": "188200",
    "end": "191159"
  },
  {
    "text": "maintain the Fidelity and quality of",
    "start": "191159",
    "end": "193599"
  },
  {
    "text": "your customer records and your uuid2",
    "start": "193599",
    "end": "196000"
  },
  {
    "text": "audiences so there can be both time and",
    "start": "196000",
    "end": "199040"
  },
  {
    "text": "cost Associated to maintaining and using",
    "start": "199040",
    "end": "201760"
  },
  {
    "text": "u2s today in AWS very interesting so",
    "start": "201760",
    "end": "204879"
  },
  {
    "start": "204000",
    "end": "235000"
  },
  {
    "text": "like I can really imagine a customer who",
    "start": "204879",
    "end": "206560"
  },
  {
    "text": "is using AWS ntity resolutions",
    "start": "206560",
    "end": "209040"
  },
  {
    "text": "rule-based matching or machine learning",
    "start": "209040",
    "end": "210599"
  },
  {
    "text": "base matching to duplicate their data",
    "start": "210599",
    "end": "213159"
  },
  {
    "text": "improve the data quality of their data",
    "start": "213159",
    "end": "215120"
  },
  {
    "text": "and then really going and generating the",
    "start": "215120",
    "end": "216680"
  },
  {
    "text": "set of uid 2.0 for creating an",
    "start": "216680",
    "end": "219159"
  },
  {
    "text": "advertising campaign yes that's exactly",
    "start": "219159",
    "end": "221680"
  },
  {
    "text": "right it spends use cases across",
    "start": "221680",
    "end": "223760"
  },
  {
    "text": "audience segmentation attribution and",
    "start": "223760",
    "end": "226360"
  },
  {
    "text": "measurement audience matching and",
    "start": "226360",
    "end": "228599"
  },
  {
    "text": "Activation so it can really facilitate",
    "start": "228599",
    "end": "231280"
  },
  {
    "text": "and upgrade what you're doing with",
    "start": "231280",
    "end": "232760"
  },
  {
    "text": "traditional identifiers today perfect",
    "start": "232760",
    "end": "235079"
  },
  {
    "start": "235000",
    "end": "298000"
  },
  {
    "text": "awesome so before I I give like a top",
    "start": "235079",
    "end": "237360"
  },
  {
    "text": "line of what this demo is going to be",
    "start": "237360",
    "end": "239120"
  },
  {
    "text": "let's talk about about a customer",
    "start": "239120",
    "end": "240439"
  },
  {
    "text": "example so let's just take a ficus",
    "start": "240439",
    "end": "242360"
  },
  {
    "text": "company that you can give a good",
    "start": "242360",
    "end": "244439"
  },
  {
    "text": "demonstration of which is a best",
    "start": "244439",
    "end": "246799"
  },
  {
    "text": "customer for using uid 2.2 great so",
    "start": "246799",
    "end": "249280"
  },
  {
    "text": "let's say for example you're a luxury",
    "start": "249280",
    "end": "251599"
  },
  {
    "text": "skin care brand you sell your product",
    "start": "251599",
    "end": "254159"
  },
  {
    "text": "direct to Consumers online also across",
    "start": "254159",
    "end": "257280"
  },
  {
    "text": "uh physical retail stores around the",
    "start": "257280",
    "end": "259400"
  },
  {
    "text": "country and you've spent a lot of time",
    "start": "259400",
    "end": "261959"
  },
  {
    "text": "building up your first- party data",
    "start": "261959",
    "end": "263320"
  },
  {
    "text": "footprint through transaction data",
    "start": "263320",
    "end": "266720"
  },
  {
    "text": "purchases on your site loyalty programs",
    "start": "266720",
    "end": "269639"
  },
  {
    "text": "newsletter signups now that you have a",
    "start": "269639",
    "end": "272039"
  },
  {
    "text": "drove of first-party data perhaps you've",
    "start": "272039",
    "end": "274639"
  },
  {
    "text": "decided to switch it up and store that",
    "start": "274639",
    "end": "276840"
  },
  {
    "text": "data in AWS for better management",
    "start": "276840",
    "end": "279759"
  },
  {
    "text": "segmentation and portability yep so",
    "start": "279759",
    "end": "282720"
  },
  {
    "text": "advertisers can use AWS entity",
    "start": "282720",
    "end": "285199"
  },
  {
    "text": "resolution to not only generate uid 2s",
    "start": "285199",
    "end": "288840"
  },
  {
    "text": "but then send those uid tws to different",
    "start": "288840",
    "end": "291120"
  },
  {
    "text": "endpoints for Activation with the",
    "start": "291120",
    "end": "293479"
  },
  {
    "text": "partners and platforms that are most",
    "start": "293479",
    "end": "295240"
  },
  {
    "text": "important to their workflows today very",
    "start": "295240",
    "end": "297880"
  },
  {
    "text": "interesting awesome so now now let's",
    "start": "297880",
    "end": "300080"
  },
  {
    "start": "298000",
    "end": "377000"
  },
  {
    "text": "switch a little bit to Punit giving us a",
    "start": "300080",
    "end": "301840"
  },
  {
    "text": "demo but let me tea up the demo a little",
    "start": "301840",
    "end": "303360"
  },
  {
    "text": "bit for our audiences so in the demo",
    "start": "303360",
    "end": "305520"
  },
  {
    "text": "today what you would see is you will see",
    "start": "305520",
    "end": "307160"
  },
  {
    "text": "three major steps that pun is going to",
    "start": "307160",
    "end": "308960"
  },
  {
    "text": "take uh to convert pii information into",
    "start": "308960",
    "end": "312400"
  },
  {
    "text": "U 2.0 IDs number one uh Punit will start",
    "start": "312400",
    "end": "315360"
  },
  {
    "text": "off by pointing us to the data source",
    "start": "315360",
    "end": "318400"
  },
  {
    "text": "which is sitting in Amazon S3 second Pon",
    "start": "318400",
    "end": "321400"
  },
  {
    "text": "is going to create a matching workflow",
    "start": "321400",
    "end": "323759"
  },
  {
    "text": "with uid 2.0 as the Chosen and preferred",
    "start": "323759",
    "end": "326520"
  },
  {
    "text": "matching technique so that our systems",
    "start": "326520",
    "end": "328880"
  },
  {
    "text": "knows what to generate and third p is",
    "start": "328880",
    "end": "332120"
  },
  {
    "text": "also going to point to what's the data",
    "start": "332120",
    "end": "334120"
  },
  {
    "text": "output location where we'll generate the",
    "start": "334120",
    "end": "336199"
  },
  {
    "text": "set of uid 2.0 to go and undergo the",
    "start": "336199",
    "end": "339039"
  },
  {
    "text": "activation ton with that over to you pit",
    "start": "339039",
    "end": "341639"
  },
  {
    "text": "thank you sh and thank you Jamie um as",
    "start": "341639",
    "end": "344440"
  },
  {
    "text": "part of my demo as explained uh",
    "start": "344440",
    "end": "346960"
  },
  {
    "text": "we'll take any company who already has",
    "start": "346960",
    "end": "348759"
  },
  {
    "text": "the skincare brand who already has data",
    "start": "348759",
    "end": "350520"
  },
  {
    "text": "in S3 um now in order for them to",
    "start": "350520",
    "end": "353120"
  },
  {
    "text": "generate these uid 2.0's on that data",
    "start": "353120",
    "end": "355880"
  },
  {
    "text": "the first step is they of course come to",
    "start": "355880",
    "end": "357880"
  },
  {
    "text": "entity resolution The Landing p page um",
    "start": "357880",
    "end": "360560"
  },
  {
    "text": "out there they'll see one of the options",
    "start": "360560",
    "end": "362199"
  },
  {
    "text": "is schema mappings now the first step",
    "start": "362199",
    "end": "364160"
  },
  {
    "text": "for them to do is create a schema",
    "start": "364160",
    "end": "365840"
  },
  {
    "text": "mapping this is essentially informing",
    "start": "365840",
    "end": "367599"
  },
  {
    "text": "the service that this is how my data",
    "start": "367599",
    "end": "369479"
  },
  {
    "text": "shape is these are all the different",
    "start": "369479",
    "end": "371080"
  },
  {
    "text": "attributes that I have and what would I",
    "start": "371080",
    "end": "372680"
  },
  {
    "text": "like to use in order to trans encode",
    "start": "372680",
    "end": "374880"
  },
  {
    "text": "them into uid 2.0 now in order to create",
    "start": "374880",
    "end": "378400"
  },
  {
    "start": "377000",
    "end": "679000"
  },
  {
    "text": "a schema we go to the schema mapping we",
    "start": "378400",
    "end": "380960"
  },
  {
    "text": "start by creating and giving it a name",
    "start": "380960",
    "end": "383599"
  },
  {
    "text": "so I say uid to demo as an example next",
    "start": "383599",
    "end": "386840"
  },
  {
    "text": "we go to the glue database um since the",
    "start": "386840",
    "end": "389599"
  },
  {
    "text": "data is already in S3 we assume that",
    "start": "389599",
    "end": "391720"
  },
  {
    "text": "it's been crawled represented as a glue",
    "start": "391720",
    "end": "393560"
  },
  {
    "text": "table so that's kind of the starting",
    "start": "393560",
    "end": "394880"
  },
  {
    "text": "point into the service uh we choose the",
    "start": "394880",
    "end": "397280"
  },
  {
    "text": "appropriate glue database where the data",
    "start": "397280",
    "end": "402000"
  },
  {
    "text": "resides next we Define the unique ID",
    "start": "403000",
    "end": "405520"
  },
  {
    "text": "column so for every record that's there",
    "start": "405520",
    "end": "407599"
  },
  {
    "text": "in the system this particular attribute",
    "start": "407599",
    "end": "409639"
  },
  {
    "text": "identifies every record uniquely in the",
    "start": "409639",
    "end": "411759"
  },
  {
    "text": "source next is the matching column so",
    "start": "411759",
    "end": "414280"
  },
  {
    "text": "this is the column that we'll use to",
    "start": "414280",
    "end": "415960"
  },
  {
    "text": "encode into uid 2.0 this could be an",
    "start": "415960",
    "end": "418400"
  },
  {
    "text": "email or a phone number I'll just use",
    "start": "418400",
    "end": "420240"
  },
  {
    "text": "email as an example here besides the",
    "start": "420240",
    "end": "423120"
  },
  {
    "text": "matching column the system also offers",
    "start": "423120",
    "end": "425759"
  },
  {
    "text": "flexibility where I can support multiple",
    "start": "425759",
    "end": "428319"
  },
  {
    "text": "pastel columns what pastel columns means",
    "start": "428319",
    "end": "430680"
  },
  {
    "text": "that they do not participate in the",
    "start": "430680",
    "end": "432400"
  },
  {
    "text": "encoding process but they do show up on",
    "start": "432400",
    "end": "434360"
  },
  {
    "text": "the output side so when service writes",
    "start": "434360",
    "end": "436160"
  },
  {
    "text": "the output along with those uuid2 tokens",
    "start": "436160",
    "end": "439720"
  },
  {
    "text": "what additional columns would you want",
    "start": "439720",
    "end": "441240"
  },
  {
    "text": "so that you can then use that output for",
    "start": "441240",
    "end": "442960"
  },
  {
    "text": "any kind of activation down um use cases",
    "start": "442960",
    "end": "445599"
  },
  {
    "text": "such as like segment ID and so on and so",
    "start": "445599",
    "end": "447680"
  },
  {
    "text": "for Segment ID it could be just even",
    "start": "447680",
    "end": "449400"
  },
  {
    "text": "your additional Pi attributes like name",
    "start": "449400",
    "end": "451319"
  },
  {
    "text": "address uh age yeah I'm just going to",
    "start": "451319",
    "end": "454319"
  },
  {
    "text": "for for Simplicity sake for this demo",
    "start": "454319",
    "end": "456400"
  },
  {
    "text": "I'm just going to select all my input",
    "start": "456400",
    "end": "457919"
  },
  {
    "text": "columns to show up on the output side as",
    "start": "457919",
    "end": "459800"
  },
  {
    "text": "well and I hit next now since I just",
    "start": "459800",
    "end": "463319"
  },
  {
    "text": "chose email as my input field I'm going",
    "start": "463319",
    "end": "465759"
  },
  {
    "text": "to map it to something that the service",
    "start": "465759",
    "end": "467599"
  },
  {
    "text": "understands of course it's email here so",
    "start": "467599",
    "end": "469039"
  },
  {
    "text": "it's very well spelled out but even if",
    "start": "469039",
    "end": "471360"
  },
  {
    "text": "it's spelled differently you're just",
    "start": "471360",
    "end": "472680"
  },
  {
    "text": "informing the service that this",
    "start": "472680",
    "end": "474000"
  },
  {
    "text": "particular column maps to something",
    "start": "474000",
    "end": "475599"
  },
  {
    "text": "called as email address that the service",
    "start": "475599",
    "end": "477280"
  },
  {
    "text": "now knows how to interpret",
    "start": "477280",
    "end": "480240"
  },
  {
    "text": "we hit next we keep going all the way",
    "start": "480240",
    "end": "482159"
  },
  {
    "text": "through to the last step which is review",
    "start": "482159",
    "end": "483720"
  },
  {
    "text": "and create uh we get an opportunity to",
    "start": "483720",
    "end": "485919"
  },
  {
    "text": "just take a look at all the settings",
    "start": "485919",
    "end": "487360"
  },
  {
    "text": "we've done if everything looks great",
    "start": "487360",
    "end": "489080"
  },
  {
    "text": "let's just go ahead and create a schema",
    "start": "489080",
    "end": "490639"
  },
  {
    "text": "so that's the first step um now that the",
    "start": "490639",
    "end": "493000"
  },
  {
    "text": "schema is created of course the next one",
    "start": "493000",
    "end": "494759"
  },
  {
    "text": "is to create that encoding workflow",
    "start": "494759",
    "end": "496759"
  },
  {
    "text": "where we want to translate the emails to",
    "start": "496759",
    "end": "498440"
  },
  {
    "text": "a uid",
    "start": "498440",
    "end": "500360"
  },
  {
    "text": "2. we start by creating a matching",
    "start": "500360",
    "end": "502720"
  },
  {
    "text": "workflow we give it a",
    "start": "502720",
    "end": "506120"
  },
  {
    "text": "name next we choose again the data",
    "start": "506120",
    "end": "508560"
  },
  {
    "text": "source input",
    "start": "508560",
    "end": "511240"
  },
  {
    "text": "we choose the uid to appropriate",
    "start": "513279",
    "end": "518000"
  },
  {
    "text": "schema lastly on this particular page we",
    "start": "518080",
    "end": "520479"
  },
  {
    "text": "see the IM permissions we let the",
    "start": "520479",
    "end": "522039"
  },
  {
    "text": "service create a new IM role for us uh",
    "start": "522039",
    "end": "524600"
  },
  {
    "text": "if you already have an IM rooll you can",
    "start": "524600",
    "end": "526399"
  },
  {
    "text": "very well use that as well the IM roll",
    "start": "526399",
    "end": "528360"
  },
  {
    "text": "essentially allows the service to make",
    "start": "528360",
    "end": "530160"
  },
  {
    "text": "those API calls on your behalf to uuid2",
    "start": "530160",
    "end": "532760"
  },
  {
    "text": "to get the right um encoding done as",
    "start": "532760",
    "end": "535640"
  },
  {
    "text": "well as the read write permissions for",
    "start": "535640",
    "end": "537080"
  },
  {
    "text": "your S3",
    "start": "537080",
    "end": "538200"
  },
  {
    "text": "location as I hit next on my matching",
    "start": "538200",
    "end": "541079"
  },
  {
    "text": "technique one of the options we now see",
    "start": "541079",
    "end": "542839"
  },
  {
    "text": "is Provider Services I'm going to select",
    "start": "542839",
    "end": "544839"
  },
  {
    "text": "that amongst the different provider",
    "start": "544839",
    "end": "547000"
  },
  {
    "text": "supported I'm interested in the UniFi",
    "start": "547000",
    "end": "549440"
  },
  {
    "text": "2.0 as I want to convert my Pi into uid",
    "start": "549440",
    "end": "553920"
  },
  {
    "text": "2.0 the service checks whether my AWS",
    "start": "553920",
    "end": "556880"
  },
  {
    "text": "account is subscribed to this service U",
    "start": "556880",
    "end": "559040"
  },
  {
    "text": "since in this case it is I hit next okay",
    "start": "559040",
    "end": "562600"
  },
  {
    "text": "lastly I provide the output location of",
    "start": "562600",
    "end": "564720"
  },
  {
    "text": "my S3 that is where would I like the",
    "start": "564720",
    "end": "567120"
  },
  {
    "text": "service to write the output to",
    "start": "567120",
    "end": "569800"
  },
  {
    "text": "so I choose an S3 PA on my",
    "start": "569800",
    "end": "574839"
  },
  {
    "text": "account as I keep scrolling down we see",
    "start": "574959",
    "end": "578399"
  },
  {
    "text": "the three additional uid 2.0 output",
    "start": "578399",
    "end": "581200"
  },
  {
    "text": "schema elements that would be appended",
    "start": "581200",
    "end": "583040"
  },
  {
    "text": "to the output file they are the",
    "start": "583040",
    "end": "584959"
  },
  {
    "text": "advertising ID the salt bucket ID and",
    "start": "584959",
    "end": "587160"
  },
  {
    "text": "the identifier itself and also as I keep",
    "start": "587160",
    "end": "589959"
  },
  {
    "text": "scrolling further down we see that all",
    "start": "589959",
    "end": "591839"
  },
  {
    "text": "the input columns that I had used also",
    "start": "591839",
    "end": "593760"
  },
  {
    "text": "show up on the output so if you",
    "start": "593760",
    "end": "595519"
  },
  {
    "text": "recollect during the schema mapping we",
    "start": "595519",
    "end": "597320"
  },
  {
    "text": "had those pass through columns they all",
    "start": "597320",
    "end": "599480"
  },
  {
    "text": "show up on my output side as well um",
    "start": "599480",
    "end": "602440"
  },
  {
    "text": "since all of this looks great I hit next",
    "start": "602440",
    "end": "605079"
  },
  {
    "text": "again last step of review create I go",
    "start": "605079",
    "end": "607920"
  },
  {
    "text": "through all my configurations",
    "start": "607920",
    "end": "609320"
  },
  {
    "text": "everything's great let's just go ahead",
    "start": "609320",
    "end": "610800"
  },
  {
    "text": "and click create and run now this is",
    "start": "610800",
    "end": "613519"
  },
  {
    "text": "going to submit the workflow where the",
    "start": "613519",
    "end": "616200"
  },
  {
    "text": "system is going to read the data from",
    "start": "616200",
    "end": "618000"
  },
  {
    "text": "that S3 location pick up those emails",
    "start": "618000",
    "end": "620320"
  },
  {
    "text": "send it out to the uid 2 service at the",
    "start": "620320",
    "end": "622160"
  },
  {
    "text": "back end get the output generated back",
    "start": "622160",
    "end": "624440"
  },
  {
    "text": "from that uid 2 service append it with",
    "start": "624440",
    "end": "626839"
  },
  {
    "text": "the other passer columns and finally",
    "start": "626839",
    "end": "628360"
  },
  {
    "text": "land the output into your S3 location of",
    "start": "628360",
    "end": "631440"
  },
  {
    "text": "choice now this may take a couple of",
    "start": "631440",
    "end": "633800"
  },
  {
    "text": "minutes to run in the meantime let's",
    "start": "633800",
    "end": "635480"
  },
  {
    "text": "look at something that I previously ran",
    "start": "635480",
    "end": "637160"
  },
  {
    "text": "so that we can look at how the output",
    "start": "637160",
    "end": "638880"
  },
  {
    "text": "shapes I'm going to switch to Athena I",
    "start": "638880",
    "end": "641279"
  },
  {
    "text": "have this query open up here could run",
    "start": "641279",
    "end": "643680"
  },
  {
    "text": "that",
    "start": "643680",
    "end": "645160"
  },
  {
    "text": "query and here we see the result as",
    "start": "645160",
    "end": "648839"
  },
  {
    "text": "expected we have those three uid 2",
    "start": "648839",
    "end": "651320"
  },
  {
    "text": "related schema elements on the output",
    "start": "651320",
    "end": "653079"
  },
  {
    "text": "side so we see the uuid2 bucket ID if I",
    "start": "653079",
    "end": "655279"
  },
  {
    "text": "keep scrolling I see the uuid2",
    "start": "655279",
    "end": "657880"
  },
  {
    "text": "advertising ID and and also the uid to",
    "start": "657880",
    "end": "660320"
  },
  {
    "text": "identifier alongside those three column",
    "start": "660320",
    "end": "662680"
  },
  {
    "text": "elements we also see the other",
    "start": "662680",
    "end": "664560"
  },
  {
    "text": "additional Pi elements that were part of",
    "start": "664560",
    "end": "666519"
  },
  {
    "text": "my pass through that I generated as part",
    "start": "666519",
    "end": "668639"
  },
  {
    "text": "of my",
    "start": "668639",
    "end": "669839"
  },
  {
    "text": "schema so this is the output that the",
    "start": "669839",
    "end": "672120"
  },
  {
    "text": "service generates now with this output",
    "start": "672120",
    "end": "673839"
  },
  {
    "text": "of course I can take this for any kind",
    "start": "673839",
    "end": "675440"
  },
  {
    "text": "of activation or other use cases that",
    "start": "675440",
    "end": "678079"
  },
  {
    "text": "this is more applicable awesome thank",
    "start": "678079",
    "end": "679519"
  },
  {
    "start": "679000",
    "end": "773000"
  },
  {
    "text": "you so much ponit I think we just showed",
    "start": "679519",
    "end": "681519"
  },
  {
    "text": "Dei as you could see in this example",
    "start": "681519",
    "end": "683240"
  },
  {
    "text": "that we took something that could have",
    "start": "683240",
    "end": "685160"
  },
  {
    "text": "taken weeks to just a few the few clicks",
    "start": "685160",
    "end": "687440"
  },
  {
    "text": "right and customer is now in the",
    "start": "687440",
    "end": "689079"
  },
  {
    "text": "position of the uid 2.0's uh tell us a",
    "start": "689079",
    "end": "691760"
  },
  {
    "text": "little bit about how will customer use",
    "start": "691760",
    "end": "693240"
  },
  {
    "text": "this uid 2.0 like what are the",
    "start": "693240",
    "end": "694600"
  },
  {
    "text": "downstream use cases that customer will",
    "start": "694600",
    "end": "696240"
  },
  {
    "text": "use it for so yeah absolutely so once",
    "start": "696240",
    "end": "699000"
  },
  {
    "text": "those uid 2s are generated in your AWS",
    "start": "699000",
    "end": "701399"
  },
  {
    "text": "entity resolution instance you can",
    "start": "701399",
    "end": "703760"
  },
  {
    "text": "connect them directly through an",
    "start": "703760",
    "end": "705040"
  },
  {
    "text": "endpoint to your DSP of choice there are",
    "start": "705040",
    "end": "707680"
  },
  {
    "text": "several dsps integrated with unified ID",
    "start": "707680",
    "end": "710399"
  },
  {
    "text": "2.0 which means you can onboard those",
    "start": "710399",
    "end": "713160"
  },
  {
    "text": "audiences for targeting expansion with",
    "start": "713160",
    "end": "716120"
  },
  {
    "text": "cross device activation across channels",
    "start": "716120",
    "end": "718959"
  },
  {
    "text": "including CTV and then you can work with",
    "start": "718959",
    "end": "721639"
  },
  {
    "text": "the partners of your choice including",
    "start": "721639",
    "end": "724000"
  },
  {
    "text": "partners that also work inside of AWS",
    "start": "724000",
    "end": "726279"
  },
  {
    "text": "entity resolution for measurement and",
    "start": "726279",
    "end": "728760"
  },
  {
    "text": "attribution so now you've got Clos Loop",
    "start": "728760",
    "end": "731360"
  },
  {
    "text": "targeting and measurement all with the",
    "start": "731360",
    "end": "733639"
  },
  {
    "text": "more durable more specific identifier",
    "start": "733639",
    "end": "737120"
  },
  {
    "text": "perfect thank you so much JY for your",
    "start": "737120",
    "end": "738560"
  },
  {
    "text": "time today thanks a l pit uh let me",
    "start": "738560",
    "end": "740680"
  },
  {
    "text": "summarize this for everybody watching",
    "start": "740680",
    "end": "742399"
  },
  {
    "text": "the video what all we learned today",
    "start": "742399",
    "end": "744480"
  },
  {
    "text": "today we learned about three things",
    "start": "744480",
    "end": "746360"
  },
  {
    "text": "number one what is AWS entity resolution",
    "start": "746360",
    "end": "749320"
  },
  {
    "text": "and how it helps you to match and link",
    "start": "749320",
    "end": "751519"
  },
  {
    "text": "your consumer records number two how do",
    "start": "751519",
    "end": "754320"
  },
  {
    "text": "you work and effectively create uid",
    "start": "754320",
    "end": "757000"
  },
  {
    "text": "2.0's using AWS entity resolution within",
    "start": "757000",
    "end": "760639"
  },
  {
    "text": "a few clicks and three how to use uid",
    "start": "760639",
    "end": "763800"
  },
  {
    "text": "2.0 across the DSP of your choice thank",
    "start": "763800",
    "end": "769240"
  },
  {
    "text": "you",
    "start": "772800",
    "end": "775800"
  }
]