[
  {
    "start": "0",
    "end": "50000"
  },
  {
    "text": "hey everybody uh welcome to Finn 303 we're",
    "start": "1240",
    "end": "7040"
  },
  {
    "text": "be talking about uh I guess we're a minute early here which is fine we'll be talking about um devop Security in a",
    "start": "7040",
    "end": "12160"
  },
  {
    "text": "pipeline today um I think we're doing okay on seats so it looks good so um we got a",
    "start": "12160",
    "end": "19320"
  },
  {
    "text": "lot to get through so we're going to kind of rush through it a little bit uh hopefully it's not too much at the end there'll be a link where you can sort of",
    "start": "19320",
    "end": "24560"
  },
  {
    "text": "find more information blog posts um and some of the assets that we're sort of",
    "start": "24560",
    "end": "30320"
  },
  {
    "text": "covering you can find some more information about them sort of after the talk so uh look for the link at the end of the",
    "start": "30320",
    "end": "35800"
  },
  {
    "text": "presentation um but before we jump in um we're going to be going over some tips and tricks some things that maybe you",
    "start": "35800",
    "end": "41480"
  },
  {
    "text": "can use in your own pipeline uh if you're if you're sort of leveraging that sort of Technology but before we jump",
    "start": "41480",
    "end": "46760"
  },
  {
    "text": "into some of the the technical overview and information we kind of want to talk a little bit about the motivation for",
    "start": "46760",
    "end": "52160"
  },
  {
    "start": "50000",
    "end": "50000"
  },
  {
    "text": "the presentation today kind of what we use as our is our kickoff for this so um",
    "start": "52160",
    "end": "57680"
  },
  {
    "text": "some of the high level uh challenges that we face and by the way my name is alen Garver I didn't introduce myself I'm a a professional services consultant",
    "start": "57680",
    "end": "64680"
  },
  {
    "text": "with AWS um and I work a lot with financial services customers uh primarily in the devop space uh",
    "start": "64680",
    "end": "70439"
  },
  {
    "text": "continuous delivery tooling automation uh devops organizational structures things like this um and so today we're",
    "start": "70439",
    "end": "77840"
  },
  {
    "text": "going to take you through a little bit of a journey we're working with uh with a customer uh right now on a project but",
    "start": "77840",
    "end": "82880"
  },
  {
    "text": "it's a it's a bunch of common scenarios that we see in financial services and so um some of the challenges that we that",
    "start": "82880",
    "end": "89240"
  },
  {
    "text": "we commonly face here are and Enterprises in general but a lot more specifically in financial services are",
    "start": "89240",
    "end": "96200"
  },
  {
    "text": "um monolithic applications these are some of the things we deal with in financial services these are applications that have been sitting in",
    "start": "96200",
    "end": "101399"
  },
  {
    "text": "the corner of our data centers probably for many years probably some code on there that was written that they don't even teach in the code language in",
    "start": "101399",
    "end": "108119"
  },
  {
    "text": "college anymore things like this um organizational boundaries so we tend to have organizations that in financial",
    "start": "108119",
    "end": "114000"
  },
  {
    "text": "services that are um sort of that predate things like devops and the concepts of services oriented",
    "start": "114000",
    "end": "120360"
  },
  {
    "text": "architectures and microservices and things like this uh and then sort of regulatory requirements that we have in",
    "start": "120360",
    "end": "125520"
  },
  {
    "text": "the space so these are some obvious things so we wanted to share with you a little bit some information about a a particular customer that we're working",
    "start": "125520",
    "end": "131560"
  },
  {
    "text": "with share some of the perspectives and things that they're doing uh in this space before we dive into some of the",
    "start": "131560",
    "end": "137080"
  },
  {
    "text": "technical things that we're that we're talking through and working through in that in that area so um today we have uh",
    "start": "137080",
    "end": "143879"
  },
  {
    "text": "Jamie Greco she's a senior vice president at city um she's a technical product management uh VP and so she's",
    "start": "143879",
    "end": "150840"
  },
  {
    "text": "working in this space a lot working on a big project there and working on so we're invite Jamie up she's going tell you a little bit about what we're doing",
    "start": "150840",
    "end": "156040"
  },
  {
    "text": "at City thanks wait wait wait",
    "start": "156040",
    "end": "163000"
  },
  {
    "text": "wait wait am I on okay first things most important first things everybody has to",
    "start": "163000",
    "end": "169040"
  },
  {
    "text": "say cheese ready cheese",
    "start": "169040",
    "end": "174760"
  },
  {
    "text": "cheese awesome thank you proof that I was here I guess thanks",
    "start": "174760",
    "end": "181319"
  },
  {
    "text": "Alan okay um so most of you may know that it's very challenging for many of",
    "start": "181319",
    "end": "186599"
  },
  {
    "text": "us in the financial service segment as we have been um building up our monoliths for decades um at City we have",
    "start": "186599",
    "end": "193599"
  },
  {
    "text": "a renewed focus on decomposing those monoliths building microservices and leveraging the services that AWS",
    "start": "193599",
    "end": "200159"
  },
  {
    "text": "provides to release features to our customers faster we're moving away from",
    "start": "200159",
    "end": "205280"
  },
  {
    "text": "proprietary Mainframe applications um toward Cloud platforms",
    "start": "205280",
    "end": "211480"
  },
  {
    "text": "that leverage the services AWS provides to significantly lower our cost basis",
    "start": "211480",
    "end": "217159"
  },
  {
    "text": "and increase our speed of development our goal is to automate our entire pipeline um including data protection",
    "start": "217159",
    "end": "224280"
  },
  {
    "text": "which Alan and Chuck will talk to you about U making us more efficient and more secure um we are achieving this by",
    "start": "224280",
    "end": "230879"
  },
  {
    "text": "establishing empowered autonomous teams that own their own products by",
    "start": "230879",
    "end": "236000"
  },
  {
    "text": "decomposing our monoliths into bite-sized microservices by taking advantage of the agility",
    "start": "236000",
    "end": "242959"
  },
  {
    "text": "elasticity and resilience that the cloud has to offer and by using purpose built",
    "start": "242959",
    "end": "248079"
  },
  {
    "text": "tools to enable self-service and raise guardrails that enforce and automate",
    "start": "248079",
    "end": "255200"
  },
  {
    "start": "255000",
    "end": "255000"
  },
  {
    "text": "compliance as we move to the open Cloud platforms we will decouple our business",
    "start": "255239",
    "end": "260680"
  },
  {
    "text": "logic and our presentation logic into more Atomic services that can be leveraged across multiple regions and",
    "start": "260680",
    "end": "266440"
  },
  {
    "text": "multiple lines of business we start by separating The View layer from the business logic and then by abstracting",
    "start": "266440",
    "end": "273199"
  },
  {
    "text": "the business logic from the ESB and the Mainframe resulting in data that will persist in a microservice rather than a",
    "start": "273199",
    "end": "280479"
  },
  {
    "text": "monolithic Mainframe decoupling our monolith decreases units of work and reduces our",
    "start": "280479",
    "end": "286680"
  },
  {
    "text": "batch size loose coupling allows services to be released on their own schedule allowing us to release features",
    "start": "286680",
    "end": "293240"
  },
  {
    "text": "to our customers faster and more frequently whoops to",
    "start": "293240",
    "end": "300840"
  },
  {
    "start": "299000",
    "end": "299000"
  },
  {
    "text": "we are executing our strategy using collocated empowered agile teams that",
    "start": "300840",
    "end": "305919"
  },
  {
    "text": "are fully dedicated to building and owning their products these teams will be responsible for everything from",
    "start": "305919",
    "end": "312199"
  },
  {
    "text": "standing up their own Tech Stacks to developing and testing code to deploying",
    "start": "312199",
    "end": "318280"
  },
  {
    "text": "and owning post launch as a result changes can be isolated to a specific team minimizing",
    "start": "318280",
    "end": "326199"
  },
  {
    "text": "the coordination with others This truly agile approach in a cicd environment",
    "start": "326199",
    "end": "332240"
  },
  {
    "text": "reduces the feedback loop and enables our teams to fail fast and iterate more",
    "start": "332240",
    "end": "338600"
  },
  {
    "text": "quickly our journey to decouple atom uh excuse me our journey to deploy Atomic",
    "start": "339160",
    "end": "344880"
  },
  {
    "text": "microservices in the cloud using automated tools will Resort in significant Improvement in speed cost",
    "start": "344880",
    "end": "351000"
  },
  {
    "text": "and quality single ownership structure test driven development and fully automated pipeline will reduce our",
    "start": "351000",
    "end": "357759"
  },
  {
    "text": "defect rates decou Services can launch at will allowing us to increase our",
    "start": "357759",
    "end": "364280"
  },
  {
    "text": "speed to Market and releasing features becomes more of a business decision than",
    "start": "364280",
    "end": "369360"
  },
  {
    "text": "a tech constraint utilization of cloud services lowers our overall cost we only",
    "start": "369360",
    "end": "375360"
  },
  {
    "text": "pay for what we need and as we need to scale we can scale on demand at City we're taking a very",
    "start": "375360",
    "end": "382400"
  },
  {
    "text": "holistic approach to modernize how we deliver features to our customers we're tackling the decomposition of our",
    "start": "382400",
    "end": "388599"
  },
  {
    "text": "monoliths we're tackling changing how we structure our teams and we're adopting a cloud first strategy we're making",
    "start": "388599",
    "end": "395520"
  },
  {
    "text": "ourselves faster less costly and more secure in the process alen and Chuck are",
    "start": "395520",
    "end": "401680"
  },
  {
    "text": "going to review the technical details of some of the initiatives that we're implementing under all of these",
    "start": "401680",
    "end": "407919"
  },
  {
    "text": "efforts whoops there go I'll jump down",
    "start": "407919",
    "end": "413479"
  },
  {
    "text": "over great um thank you Jamie exciting",
    "start": "413479",
    "end": "418560"
  },
  {
    "text": "stuff uh happening City it's really it's really great so what we wanted to do is share a few of the techniques some of",
    "start": "418560",
    "end": "424120"
  },
  {
    "text": "the things that uh some of the patterns that we're sort of leveraging there some of the things that we're that city is uh",
    "start": "424120",
    "end": "429160"
  },
  {
    "text": "is is working on implementing um and share those with you so before we get started though uh and getting into the",
    "start": "429160",
    "end": "436680"
  },
  {
    "text": "actual specifics of some of the techniques that we're going to talk through we wanted to just leverage and sort of level set set some definitions",
    "start": "436680",
    "end": "443039"
  },
  {
    "text": "so the assumption that we have is that many people in the room are probably familiar with the devops pipeline at this point you're probably here because",
    "start": "443039",
    "end": "448800"
  },
  {
    "text": "you're interested in and learning some of the techniques uh that you might want to consider for your own pipelines but",
    "start": "448800",
    "end": "454639"
  },
  {
    "text": "before we just wanted to make sure so we're going to just jump into some some high level uh information about",
    "start": "454639",
    "end": "459960"
  },
  {
    "start": "457000",
    "end": "457000"
  },
  {
    "text": "continuous ofy pipeline so a pipeline is really nothing more than a secure automated transport that lets you uh",
    "start": "459960",
    "end": "466680"
  },
  {
    "text": "typically take code from a from a source code repository and turn it into a",
    "start": "466680",
    "end": "471759"
  },
  {
    "text": "running set of production infrastructure that's converged and running some sort of application so along the way it's",
    "start": "471759",
    "end": "477319"
  },
  {
    "text": "divided into stages and along the way we do all kinds of uh automation to deploy things um it typically involves things",
    "start": "477319",
    "end": "483840"
  },
  {
    "text": "like a config management platform to configure virtual machines and put software on there um it usually",
    "start": "483840",
    "end": "489199"
  },
  {
    "text": "leverages things like infrastructure as code this is things like Cloud information on AWS um to to sort of automate the the",
    "start": "489199",
    "end": "496440"
  },
  {
    "text": "spin-up and the build of a of an application and then additionally in the pipeline in each of the stages that we",
    "start": "496440",
    "end": "501879"
  },
  {
    "text": "have uh we usually introduce tests and so we have tests that run the gamut and do different kinds of things from you",
    "start": "501879",
    "end": "507560"
  },
  {
    "text": "know inspecting our our source to make sure that we don't have syntax errors out to um doing penetration testing or",
    "start": "507560",
    "end": "513440"
  },
  {
    "text": "load testing across the fleet of servers to make sure that the environment that we're building is stable and and so that",
    "start": "513440",
    "end": "520000"
  },
  {
    "text": "that set of jobs and that set of Automation and the tests collectively and the stages that are divided up we're referring to as a",
    "start": "520000",
    "end": "526560"
  },
  {
    "text": "pipeline pipelines do a lot of things for us one uh they let sort of let us sleep at night because the automation is",
    "start": "526560",
    "end": "531680"
  },
  {
    "text": "there to make sure that things are running well in production environments um but they also help us ensure that when there's a failure we can give very",
    "start": "531680",
    "end": "537959"
  },
  {
    "text": "fast feedback to our developers so uh imagine a scenario where developer checks in just a syntax error on their",
    "start": "537959",
    "end": "544480"
  },
  {
    "text": "code they commit it to their repo the pipeline picks up and starts running the jobs and it senses uh that that there's",
    "start": "544480",
    "end": "550040"
  },
  {
    "text": "a syntax error it can give that feedback to the developer very quickly you know within typically within minutes of the",
    "start": "550040",
    "end": "556079"
  },
  {
    "text": "commit itself and so uh in that case it's a very powerful tool for us because",
    "start": "556079",
    "end": "561120"
  },
  {
    "text": "uh we don't have to wait for time between the the point where we write the code and we commit it to the repo until we get the feedback on it which in a lot",
    "start": "561120",
    "end": "567800"
  },
  {
    "text": "of models could be weeks um and and in that scenario you have to kind of remember what you were doing at the time",
    "start": "567800",
    "end": "572880"
  },
  {
    "text": "of the failure so your brain sort of has to retool and so fast feedback is is a really big Advantage here it helps our",
    "start": "572880",
    "end": "578360"
  },
  {
    "text": "developers immediately know oh I know where that error is and I can go fix it quickly pipelines can also be customized",
    "start": "578360",
    "end": "584640"
  },
  {
    "text": "to your software development life cycle so um you know the the common pipeline that you see um sort of that we talk",
    "start": "584640",
    "end": "590440"
  },
  {
    "text": "about at AWS on some of our product pages is sort of a build test deploy kind of model just to demonstrate those",
    "start": "590440",
    "end": "595640"
  },
  {
    "text": "capabilities of a pipeline but but stages are sort of unstructured you can build build them as you want and customize them to your own process and",
    "start": "595640",
    "end": "602120"
  },
  {
    "text": "so it provides a lot of flexibility uh in that way uh we have a",
    "start": "602120",
    "end": "607440"
  },
  {
    "text": "service on AWS called AWS code pipeline some of you may be using it um it allows you to create uh quickly model and",
    "start": "607440",
    "end": "613959"
  },
  {
    "text": "create pipelines and stages uh inside of a very friendly guey um you can also uh",
    "start": "613959",
    "end": "619360"
  },
  {
    "text": "write the code for it write the Json that sort of implements the structure uh of the stages that you want in your",
    "start": "619360",
    "end": "624800"
  },
  {
    "text": "pipeline um but it also gives you a view at a glance so at any time you can go in and see where your pipeline is in this",
    "start": "624800",
    "end": "629920"
  },
  {
    "text": "particular example you can see that this pipeline's running uh the acceptance stage at this time is in progress the",
    "start": "629920",
    "end": "635120"
  },
  {
    "text": "rest of the stages are are are complete um it integrates with a lot of your favorite tools so there's a good",
    "start": "635120",
    "end": "640880"
  },
  {
    "text": "chance that if you're uh using a CI process today uh AWS code pipeline will",
    "start": "640880",
    "end": "646200"
  },
  {
    "text": "integrate with those things and it also integrates seamlessly with a lot of other AWS",
    "start": "646200",
    "end": "651680"
  },
  {
    "text": "services so um there's uh one other element I want",
    "start": "651680",
    "end": "656800"
  },
  {
    "start": "654000",
    "end": "654000"
  },
  {
    "text": "to touch on and then we're going to jump into some some techniques for you um and this is the build artifact repository so",
    "start": "656800",
    "end": "663519"
  },
  {
    "text": "some of you may be familiar with uh utilities or software open source software like artifactory or Nexus that",
    "start": "663519",
    "end": "669560"
  },
  {
    "text": "that refer to themselves as artifact repositories we're going to talk about um the importance of that here but the",
    "start": "669560",
    "end": "675560"
  },
  {
    "text": "notion is is that during the build stage or when we're building or doing build activities in our pipeline we generally",
    "start": "675560",
    "end": "681160"
  },
  {
    "text": "will create assets that need to be stored somewhere for later use in our Pipeline and so this could be compiled Java code you know if your source code",
    "start": "681160",
    "end": "688320"
  },
  {
    "text": "repository is Java classes uh your your build process is probably going to involve some sort of compile you're",
    "start": "688320",
    "end": "694000"
  },
  {
    "text": "going to take that compile code and you're going to need to place the store it to version it uh to reference it later and this is the build artifact",
    "start": "694000",
    "end": "699600"
  },
  {
    "text": "repository and then later we leverage that asset to in our in the deploy phase when we're running our config management",
    "start": "699600",
    "end": "704839"
  },
  {
    "text": "platform or whatever it is so why would you use a build artifact repository um",
    "start": "704839",
    "end": "710279"
  },
  {
    "text": "it does there's a bunch of advantages to it but notably a few uh we get to build once and deploy many times so you know",
    "start": "710279",
    "end": "716680"
  },
  {
    "text": "we get to compile our Java code we keep it somewhere and if if we have a fleet of ec2 instances that we're converging",
    "start": "716680",
    "end": "722079"
  },
  {
    "text": "and we need to install that Java code on uh we can call it as many times as we need to from our artifact repository we",
    "start": "722079",
    "end": "727279"
  },
  {
    "text": "can do Version Control uh much like we do with a source code uh repository so we can tag builds you know the latest",
    "start": "727279",
    "end": "733959"
  },
  {
    "text": "release of a build or something so that our pipeline can always refer to the latest version um and artifacts are always",
    "start": "733959",
    "end": "739839"
  },
  {
    "text": "available in an artifact repository for later consumption so imagine an Autos scaling uh scenario where you have a",
    "start": "739839",
    "end": "745440"
  },
  {
    "text": "scaleup event that's maybe a year after you did the build of your pipeline um that artifact is always available for",
    "start": "745440",
    "end": "752160"
  },
  {
    "text": "those Auto scaling events out into the future of time so and one of the other important things that we talk about in",
    "start": "752160",
    "end": "757880"
  },
  {
    "text": "the space is the fact that it allows your build server to be sort of disassociated or not connected to the instances that are converging in that",
    "start": "757880",
    "end": "764240"
  },
  {
    "text": "pipeline so your deployed instances don't need to actually be talked to or even be talked to from your build server",
    "start": "764240",
    "end": "771000"
  },
  {
    "text": "because they independently using this this artifact repository as an as a medium in between so what are some things that you",
    "start": "771000",
    "end": "777839"
  },
  {
    "text": "do with pipeline buildar artifacts um the example that I put here is a chef cookbook so in this particular example",
    "start": "777839",
    "end": "784040"
  },
  {
    "text": "um we don't have a chef server in our build system um we're simply brokering Chef cookbooks into this environment uh",
    "start": "784040",
    "end": "790079"
  },
  {
    "text": "for those of you that aren't aware Chef is a configuration management platform it's a you can write a manifest in code",
    "start": "790079",
    "end": "795680"
  },
  {
    "text": "that essentially represents the state of a virtual machine um and you go through this process of convergence which means",
    "start": "795680",
    "end": "802040"
  },
  {
    "text": "the chef uh code itself will return that that virtual machine into the state that it's",
    "start": "802040",
    "end": "807199"
  },
  {
    "text": "expected um so in this in this particular case we're going to use our artifact repository to store a bundle of",
    "start": "807199",
    "end": "812639"
  },
  {
    "text": "cookbooks that that we're using bookshelf to assemble uh berkshelf so we have a chef cookbook it's in our source",
    "start": "812639",
    "end": "818440"
  },
  {
    "text": "code repository we do a Burks vendor on it that will gather all the dependencies and build the tar package we'll push",
    "start": "818440",
    "end": "823600"
  },
  {
    "text": "that out to our artifact repository and then later our running instances can call those objects out of our artifact",
    "start": "823600",
    "end": "829240"
  },
  {
    "text": "repository and run the chef client to converge um there's lots of other examples of where you would use build",
    "start": "829240",
    "end": "834759"
  },
  {
    "start": "832000",
    "end": "832000"
  },
  {
    "text": "artifacts uh config managements all over the place we have anible puppet Chef uh but we have other things like Java the",
    "start": "834759",
    "end": "840600"
  },
  {
    "text": "other things you might expect even Ruby python might host ruby gems or compil Java classes like we've already talked",
    "start": "840600",
    "end": "848079"
  },
  {
    "start": "848000",
    "end": "848000"
  },
  {
    "text": "about so um one of the things we want to sort of talk about is a simple artifact repository on AWS so um we're going to",
    "start": "848079",
    "end": "855600"
  },
  {
    "text": "take you through a scenario where you might use a build server uh with just by just simply creating an Amazon S3 bucket",
    "start": "855600",
    "end": "861639"
  },
  {
    "text": "S3 is our simple storage service it's uh you have the ability to create a bucket which you can put objects into and you",
    "start": "861639",
    "end": "867920"
  },
  {
    "text": "can store uh an unlimited amount virtually unlimited amount of objects in that bucket uh and you will only be you",
    "start": "867920",
    "end": "874759"
  },
  {
    "text": "only pay for the storage that you actually use and so in this particular example we have a build system in the lower uh left of the diagram our build",
    "start": "874759",
    "end": "882160"
  },
  {
    "text": "server is very simple we just have a Jenkins server running here with Maven and get installed uh and we're going to",
    "start": "882160",
    "end": "888040"
  },
  {
    "text": "use our artifact repositories just by creating an S3 bucket so we set up a Jenkins job at detex the commit on a",
    "start": "888040",
    "end": "893720"
  },
  {
    "text": "source code repository that's living somewhere maybe GitHub um once we asense that commit we we'll pull the code down",
    "start": "893720",
    "end": "899680"
  },
  {
    "text": "and maybe we'll use Maven to do a package so we will compile the code and build all the dependencies in that we have and now we have an assembled build",
    "start": "899680",
    "end": "905880"
  },
  {
    "text": "artifact we'll publish that artifact using a simple AWS API call through S3",
    "start": "905880",
    "end": "910959"
  },
  {
    "text": "to put the object into the S3 bucket and then we'll launch our ec2 instances with an ec2 API call uh and in this",
    "start": "910959",
    "end": "917519"
  },
  {
    "text": "particular example we're going to pass in some user data user data is is a way that we can pass in uh characters into",
    "start": "917519",
    "end": "923240"
  },
  {
    "text": "an instance at launch so that it can reference that only at launch um and it will refer to maybe a UR to the object",
    "start": "923240",
    "end": "929720"
  },
  {
    "text": "that we have in S3 or some other method if we've got pre-build scripts running on that in the Ami that we have uh that we're launching in this particular case",
    "start": "929720",
    "end": "936639"
  },
  {
    "text": "so our E2 instances will come up and our converging systems will retrieve the S3 object from S3 with an S3 get object",
    "start": "936639",
    "end": "942560"
  },
  {
    "text": "call it's a very simple artifact repository um it's a common sort of pattern that we see used in a lot of",
    "start": "942560",
    "end": "948680"
  },
  {
    "text": "places uh for for publishing build artifacts uh in a continuous delivery system so but we're going to take it to",
    "start": "948680",
    "end": "955399"
  },
  {
    "start": "952000",
    "end": "952000"
  },
  {
    "text": "the next level so S3 is is a great product um but we're going to talk about how uh we can build in some super strong",
    "start": "955399",
    "end": "961279"
  },
  {
    "text": "security into this because we're a bank uh and we're and you know there's a lot of things that we care about along the way so we're going to implement three",
    "start": "961279",
    "end": "967120"
  },
  {
    "text": "different things real quick three different ways that we can make our simple artifact repository very secure",
    "start": "967120",
    "end": "973199"
  },
  {
    "text": "the first way is we're going to we're going to implement some data protection using AWS KMS which is our Key Management Service it's a service that",
    "start": "973199",
    "end": "979360"
  },
  {
    "text": "allows us to uh leverage uh Keys uh encryption keys that we can uh entitle",
    "start": "979360",
    "end": "985399"
  },
  {
    "text": "certain people to have access to and use to encrypt and decrypt objects so we're going to talk a little bit about that we're going to talk about an entitlement",
    "start": "985399",
    "end": "991639"
  },
  {
    "text": "system in this space using AWS am and some resource policies and then we're",
    "start": "991639",
    "end": "996680"
  },
  {
    "text": "going to talk a little bit about uh ensuring Integrity in the system and some of the things that we can do there",
    "start": "996680",
    "end": "1002040"
  },
  {
    "start": "1001000",
    "end": "1001000"
  },
  {
    "text": "so we have a pattern that's common uh a lot of times you'll see key Services um Key Management Services like",
    "start": "1002040",
    "end": "1008440"
  },
  {
    "text": "awms uh they generally will allow you to stream a certain amount of data into the service so the notion here is that you",
    "start": "1008440",
    "end": "1015040"
  },
  {
    "text": "have an object or something that you want to encrypt you will pass that object to to a a Key Management Service",
    "start": "1015040",
    "end": "1020240"
  },
  {
    "text": "the Key Management Service will then return to you the encrypted version of that object um and you will have to come",
    "start": "1020240",
    "end": "1025438"
  },
  {
    "text": "back to the Key Management Service to decrypt because the key is stored in a safe place that nobody can get",
    "start": "1025439",
    "end": "1030798"
  },
  {
    "text": "to um and so in this particular example uh we have the ability to send typically",
    "start": "1030799",
    "end": "1035839"
  },
  {
    "text": "small things to the KMS service but we wouldn't want to send large binary files like what we're dealing dealing with in",
    "start": "1035839",
    "end": "1041319"
  },
  {
    "text": "the case uh of our build artifact repository so if we have a Java set of java code or maybe some binary objects",
    "start": "1041319",
    "end": "1048240"
  },
  {
    "text": "or something that are maybe gigabytes or megabytes in size um these are things that you typically wouldn't want to pass to a key",
    "start": "1048240",
    "end": "1054760"
  },
  {
    "text": "management service and wait for a large response and so one of the patterns that we see adopted very common in this space",
    "start": "1054760",
    "end": "1061039"
  },
  {
    "text": "is this notion of envelope encryption and so what we do here is we we will typically generate a key uh locally to",
    "start": "1061039",
    "end": "1067160"
  },
  {
    "text": "wherever the object is that we're trying to encrypt we will encrypt the object with that key and then we will ask the",
    "start": "1067160",
    "end": "1072520"
  },
  {
    "text": "cams servers to encrypt the key itself right KMS actually provides a nice feature uh called generate data key and",
    "start": "1072520",
    "end": "1079679"
  },
  {
    "text": "what generate data key will do is when you make the API call to KMS and you ask for it to generate a data key it will",
    "start": "1079679",
    "end": "1085159"
  },
  {
    "text": "use a custom customer manage key to provide you two two key elements one is the plain text version of a key that it",
    "start": "1085159",
    "end": "1091159"
  },
  {
    "text": "generated for you and the other is the cipher text blob the plain text version is the unencrypted version of that key",
    "start": "1091159",
    "end": "1096640"
  },
  {
    "text": "and the cipher text is the encrypted version and so what we can do is we can take the plain text that was returned by",
    "start": "1096640",
    "end": "1101720"
  },
  {
    "text": "the ks service we can uh use something like op SSL locally to encrypt our very",
    "start": "1101720",
    "end": "1107000"
  },
  {
    "text": "large binary object with the the plain text of that key store that encrypted out from that from that operation uh in",
    "start": "1107000",
    "end": "1114799"
  },
  {
    "text": "its R file along with the cipher text that cams returned to us and now we have an envelope and the envelope contains",
    "start": "1114799",
    "end": "1121000"
  },
  {
    "text": "the encrypted binary object as well as the cipher text or the encrypted version of the key that was used to encrypt that",
    "start": "1121000",
    "end": "1126720"
  },
  {
    "text": "object and so this is a client side encryption pattern and when we implement",
    "start": "1126720",
    "end": "1132320"
  },
  {
    "start": "1130000",
    "end": "1130000"
  },
  {
    "text": "this a pattern like this into our artifact repository with AWS uh on S3 you can see we've added a",
    "start": "1132320",
    "end": "1138840"
  },
  {
    "text": "couple of I've added a couple quick steps here one is the third step to encrypt so after we've done our Maven",
    "start": "1138840",
    "end": "1144000"
  },
  {
    "text": "package uh and we've compiled our Java code before we publish to S3 we can add this KMS generate data key envelope",
    "start": "1144000",
    "end": "1150760"
  },
  {
    "text": "encrypt the contents of our our compiled version of Maven that we got from Maven and published that now to S3 bucket and",
    "start": "1150760",
    "end": "1158080"
  },
  {
    "text": "so now we have a client side encrypted object that's sitting out in our artifact repository um but we're going to add a little flag here too because S3",
    "start": "1158080",
    "end": "1165400"
  },
  {
    "text": "supports uh server side encryption and server side encryption is is uh basically the notion that you can",
    "start": "1165400",
    "end": "1170720"
  },
  {
    "text": "generate a customer manage key in uh KMS that you can then use to Grant access to",
    "start": "1170720",
    "end": "1176080"
  },
  {
    "text": "the S3 service so the S3 service can encrypt at rest on your behalf and so we're going to ask the publish when",
    "start": "1176080",
    "end": "1182240"
  },
  {
    "text": "we're publishing this object to S3 we're going to ask it to implement server side encryption well so now we have both uh",
    "start": "1182240",
    "end": "1188559"
  },
  {
    "text": "client and server side encryption for that object out in our S3 bucket so we've covered a little bit",
    "start": "1188559",
    "end": "1194320"
  },
  {
    "start": "1192000",
    "end": "1192000"
  },
  {
    "text": "about encryption with our with our artifact repository uh let's talk about entitlement",
    "start": "1194320",
    "end": "1199559"
  },
  {
    "text": "so entitlement um we have the ability with a lot of the services at AWS to provide um resource policies on several",
    "start": "1199559",
    "end": "1207520"
  },
  {
    "text": "of the things that you can create and so two of those examples are um through S3 Amazon S3 we have the ability to",
    "start": "1207520",
    "end": "1213600"
  },
  {
    "text": "implement bucket policies and these are policies that are associated directly to that resource to that S3 bucket so when",
    "start": "1213600",
    "end": "1219240"
  },
  {
    "text": "we created a policy it's like an IM am policy that's applied at the service level we can also apply policies to keys",
    "start": "1219240",
    "end": "1227120"
  },
  {
    "text": "and so uh the examples I'm going to share with you here um we're gonna we're going to add a little bit of entitlement",
    "start": "1227120",
    "end": "1232960"
  },
  {
    "text": "into our artifact repository system by this particular S3 bucket we're going to create with cloud formation this is a",
    "start": "1232960",
    "end": "1238880"
  },
  {
    "text": "this is the new yaml version of cloud formation that we announced a couple of months ago um so this is a yaml cloud",
    "start": "1238880",
    "end": "1244520"
  },
  {
    "text": "formation template you're looking at um and you can see here we're creating an S3 bucket and we're actually associating",
    "start": "1244520",
    "end": "1250440"
  },
  {
    "text": "a a bucket policy to that bucket and so um there's two things in the statement there's two sort of particular actions",
    "start": "1250440",
    "end": "1256559"
  },
  {
    "text": "that we're doing we're allowing get object and get object ACL to this bucket and we're also allowing uh list buckets",
    "start": "1256559",
    "end": "1262880"
  },
  {
    "text": "to our to our S3 capability in the account and we're associating this to a role so you'll notice the principle here",
    "start": "1262880",
    "end": "1268919"
  },
  {
    "text": "um where we're saying we're getting attribute we're asking for the Arn the Amazon resource identifier for our uh",
    "start": "1268919",
    "end": "1275440"
  },
  {
    "text": "for a role that we've created previously and so we're we're associating this particular policy to a particular role",
    "start": "1275440",
    "end": "1281000"
  },
  {
    "text": "in this case we're calling the role artifact artifact client role and we'll talk about what that means in a minute",
    "start": "1281000",
    "end": "1286520"
  },
  {
    "text": "so we basically wrapped a policy around this 3 bucket that says only things that have the artifact client role can get",
    "start": "1286520",
    "end": "1293520"
  },
  {
    "text": "objects from this S3 bucket similarly we can go to the uh the KMS side and we can",
    "start": "1293520",
    "end": "1299080"
  },
  {
    "text": "put a a KMS policy around the key that we're going to be using the customer manage key and so what you're looking at",
    "start": "1299080",
    "end": "1304200"
  },
  {
    "text": "on the right side of this diagram is a is a policy that's associated to our KMS key and in this particular case we're",
    "start": "1304200",
    "end": "1310880"
  },
  {
    "text": "allowing decrypt and describe key again to our artifact client role so we've now",
    "start": "1310880",
    "end": "1316520"
  },
  {
    "text": "Associated these things to uh to both our S3 bucket and the KMS key that we used to client side encrypt objects um",
    "start": "1316520",
    "end": "1322960"
  },
  {
    "text": "and we've launched an ec2 instance and asked it to go and pull objects and decrypt them but it's being denied and",
    "start": "1322960",
    "end": "1329320"
  },
  {
    "text": "it's being denied because we forgot to associate this instance to the client role so let's take a look at what that",
    "start": "1329320",
    "end": "1335080"
  },
  {
    "text": "looks like we've now created the client role so this is the role that got Associated to those policies that we just showed you and in this particular",
    "start": "1335080",
    "end": "1341240"
  },
  {
    "text": "example uh we've just done some simple operations get bucket and list my buckets which really isn't enough permission for the ec2 instance to do",
    "start": "1341240",
    "end": "1347559"
  },
  {
    "text": "much with our our key in our bucket but because this thing is actually in the artifact client role we've Associated to",
    "start": "1347559",
    "end": "1353600"
  },
  {
    "text": "that specific role that we've tied to those policies that we've put around us3 and KMS uh we now have this instance now",
    "start": "1353600",
    "end": "1359600"
  },
  {
    "text": "has the ability or it's been granted access uh by the policies themselves to both pull the objects from S3 and",
    "start": "1359600",
    "end": "1365720"
  },
  {
    "text": "decrypt them with KMS um so that's a little bit about uh",
    "start": "1365720",
    "end": "1370760"
  },
  {
    "start": "1368000",
    "end": "1368000"
  },
  {
    "text": "entitlement in our in our uh simple artifact repository let's add a little bit of a Integrity checking and so um",
    "start": "1370760",
    "end": "1377600"
  },
  {
    "text": "this is a common uh thing that we see done uh in with a lot of it assets where we use Shaw",
    "start": "1377600",
    "end": "1383799"
  },
  {
    "text": "summing in this case in this particular example we're using Shaw 256 summing and the notion of summing an object or sha",
    "start": "1383799",
    "end": "1389640"
  },
  {
    "text": "summing an object um sometimes we md5 but we don't see that done much anymore",
    "start": "1389640",
    "end": "1395039"
  },
  {
    "text": "um uh but uh with sha summing now what we do is we'll take a a binary object we'll run it through a mathematical",
    "start": "1395039",
    "end": "1400720"
  },
  {
    "text": "equation it kind of looks at the ones and zeros and it produces a unique string associated with that and that",
    "start": "1400720",
    "end": "1405840"
  },
  {
    "text": "string no matter how many times you pass that object through the algorithm will always produce the same string and so in this particular case we're going to use",
    "start": "1405840",
    "end": "1411640"
  },
  {
    "text": "this to validate the Integrity of our object and so we're back to the envelope encryption at the point where we're envelope encrypting and we're stuffing",
    "start": "1411640",
    "end": "1417400"
  },
  {
    "text": "in this envelope our encrypted source and we're also putting into the envelope uh the the encrypted Cipher text of the",
    "start": "1417400",
    "end": "1423279"
  },
  {
    "text": "key that we used to encrypt it we can also jam into that envelope the Sha sum of that object uh at build time so when",
    "start": "1423279",
    "end": "1430120"
  },
  {
    "text": "the build server builds the object just before it encrypts it it can generate a sha sum of the object after it's been decrypted put that into the envelope uh",
    "start": "1430120",
    "end": "1437400"
  },
  {
    "text": "and then later on uh when we are uh pulling the object from our ec2 instances before we run the CI on the",
    "start": "1437400",
    "end": "1444600"
  },
  {
    "text": "system itself we can validate the Integrity of that object by comparing the sum that's in the envelope to the",
    "start": "1444600",
    "end": "1449720"
  },
  {
    "text": "actual sum of the binary object that we would be installing and so this adds a little layer of",
    "start": "1449720",
    "end": "1455279"
  },
  {
    "text": "Integrity uh into our system and so um we can also add another step in here uh",
    "start": "1455279",
    "end": "1462200"
  },
  {
    "text": "a lot of times what we uh what we see in this space is where maybe you have an",
    "start": "1462200",
    "end": "1467559"
  },
  {
    "text": "entity that you want to kind of look at artifacts things that are being passed through your CI system and you want somebody to sort of review them or do a",
    "start": "1467559",
    "end": "1473799"
  },
  {
    "text": "Security review on them and in this particular case you can Implement something like an authorization system",
    "start": "1473799",
    "end": "1479360"
  },
  {
    "text": "that can validate the integrity and so in this in this example we might have something simple like an Amazon Dynamo",
    "start": "1479360",
    "end": "1485120"
  },
  {
    "text": "DB table um Dynamo DB is a is a database service that we provide um that can do",
    "start": "1485120",
    "end": "1491039"
  },
  {
    "text": "simple key value object uh calls and so we might just store in this Amazon",
    "start": "1491039",
    "end": "1496080"
  },
  {
    "text": "Dynamo DB table a list of Shaws that we're allowed to install and so now on the client side when we are converging",
    "start": "1496080",
    "end": "1502080"
  },
  {
    "text": "an instance um we can make a call to the system and say am I allowed to uh to implement uh this particular artifact",
    "start": "1502080",
    "end": "1509320"
  },
  {
    "text": "and if it's in the table it will it will return yes you can or if it's not you can say no and that build would be",
    "start": "1509320",
    "end": "1516520"
  },
  {
    "text": "blocked so um uh so real quick we're going to talk",
    "start": "1517000",
    "end": "1522360"
  },
  {
    "text": "a little bit more about the pipeline we're going to go into some more elements of the pipeline and how we can customize it um we work a lot in this",
    "start": "1522360",
    "end": "1528080"
  },
  {
    "text": "space with a business partner called stelligent um stelligent has done a lot of work they specifically work in the",
    "start": "1528080",
    "end": "1533320"
  },
  {
    "text": "AWS space uh doing uh devops and continu delivery uh and Chuck Dudley is here from stelligent he's uh the director of",
    "start": "1533320",
    "end": "1540279"
  },
  {
    "text": "financial services accounts there uh and he's going to take you through a little bit more was Associates to it thanks",
    "start": "1540279",
    "end": "1547159"
  },
  {
    "text": "[Applause] chck so I want to go back to the",
    "start": "1547590",
    "end": "1554279"
  },
  {
    "text": "pipeline that Allan was talking about and go into a little bit more detail on that uh as Allan mentioned uh it's a",
    "start": "1554279",
    "end": "1560600"
  },
  {
    "text": "very simple concept uh build test deploy uh it um inspite of the fact that it's a",
    "start": "1560600",
    "end": "1567240"
  },
  {
    "text": "simple concept it's very powerful it's powerful because it gives you an easy",
    "start": "1567240",
    "end": "1573000"
  },
  {
    "text": "and and simple means of having repeatable uh consistent testing every",
    "start": "1573000",
    "end": "1578640"
  },
  {
    "text": "time there's a Code commit um this means that your application is going to be tested the same way every time it's",
    "start": "1578640",
    "end": "1584559"
  },
  {
    "text": "going to be held up to the same standards you're going to prevent regressions uh it also means that you have an automated automated means of",
    "start": "1584559",
    "end": "1591880"
  },
  {
    "text": "deployment of your application anytime there's a Code commit so that you're no longer dependent upon uh um an operator",
    "start": "1591880",
    "end": "1599720"
  },
  {
    "text": "or an engineer utilizing a runbook and perhaps there being variants in the means of deploying uh but we can do",
    "start": "1599720",
    "end": "1606399"
  },
  {
    "text": "better than this this is the uh pipeline that we typically look at made up of of",
    "start": "1606399",
    "end": "1612000"
  },
  {
    "text": "more stages than the the simple example we just talked about there's a commit",
    "start": "1612000",
    "end": "1617320"
  },
  {
    "text": "stage where we examine our codee an acceptance stage where we examine our",
    "start": "1617320",
    "end": "1622960"
  },
  {
    "text": "application a capacity stage where we examine the environment there's a",
    "start": "1622960",
    "end": "1628720"
  },
  {
    "text": "preprod and production phase that together represent the four stage where",
    "start": "1628720",
    "end": "1634360"
  },
  {
    "text": "pre-prod is US building a candidate environment for deployment into production and certain testing takes",
    "start": "1634360",
    "end": "1641120"
  },
  {
    "text": "place and then we do a blue green deployment most likely typically um to",
    "start": "1641120",
    "end": "1646279"
  },
  {
    "text": "bring that new candidate uh envir M into",
    "start": "1646279",
    "end": "1651279"
  },
  {
    "text": "production so uh the typical commit stage that you see the primary goal of",
    "start": "1651559",
    "end": "1656679"
  },
  {
    "start": "1652000",
    "end": "1652000"
  },
  {
    "text": "it is to provide fast feedback to the developer they want to know very quickly if the code they've written if the",
    "start": "1656679",
    "end": "1662440"
  },
  {
    "text": "changes they've just made uh are are reasonable and will do what they",
    "start": "1662440",
    "end": "1667880"
  },
  {
    "text": "expected uh in order to get that fast feedback in this commit stage we actually only look at the code we don't",
    "start": "1667880",
    "end": "1674360"
  },
  {
    "text": "build um any artifacts from it we don't build any aw us resources we just want to examine the code and see if it passes",
    "start": "1674360",
    "end": "1681120"
  },
  {
    "text": "the smell test it meets our standards meets our requirements so typically in the commit stage you'll see things like",
    "start": "1681120",
    "end": "1687039"
  },
  {
    "text": "unit tests that the developer writes along with this code to validate it's doing what he expects and static code",
    "start": "1687039",
    "end": "1693440"
  },
  {
    "text": "analysis which might uh ensure that you're following best practices with",
    "start": "1693440",
    "end": "1698960"
  },
  {
    "text": "your code um proper test coverage things like that we can add to this uh and and",
    "start": "1698960",
    "end": "1705200"
  },
  {
    "text": "make this stage a little stronger uh essentially what we want to do is add",
    "start": "1705200",
    "end": "1710399"
  },
  {
    "text": "security to our pipeline in all of our stages have it baked into the process so",
    "start": "1710399",
    "end": "1716080"
  },
  {
    "text": "one of the things that we can do is perform security static analysis of application code this is uh this is an",
    "start": "1716080",
    "end": "1723320"
  },
  {
    "text": "analysis that actually looks at your code and can see potential vulnerabilities before actually building",
    "start": "1723320",
    "end": "1729159"
  },
  {
    "text": "an executable you can do this with tools like laps flawfinder um and others",
    "start": "1729159",
    "end": "1735360"
  },
  {
    "text": "depending upon the language that you're using we can go one one step further too as Alan mentioned we have uh",
    "start": "1735360",
    "end": "1741960"
  },
  {
    "text": "infrastructure code as well as application code in the devops pipeline we can perform security static analysis",
    "start": "1741960",
    "end": "1748519"
  },
  {
    "text": "of our infrastructure code and determine if we have any problems any issues with",
    "start": "1748519",
    "end": "1754960"
  },
  {
    "text": "um the SE the security of the resources that we intend to",
    "start": "1754960",
    "end": "1762919"
  },
  {
    "text": "create so in order to be able to do security static analysis of cloud formation we need to do a few things we",
    "start": "1762919",
    "end": "1769399"
  },
  {
    "start": "1763000",
    "end": "1763000"
  },
  {
    "text": "need to build a model of the resources that the template intends to create um",
    "start": "1769399",
    "end": "1776960"
  },
  {
    "text": "and then be able to analyze that model this allows us to stop bad things before",
    "start": "1776960",
    "end": "1782559"
  },
  {
    "text": "they happen uh whereas with application code you go ahead and you build that",
    "start": "1782559",
    "end": "1787760"
  },
  {
    "text": "application code uh and then test it it's tested in a sandbox environment and it's and it's reasonably safe um even",
    "start": "1787760",
    "end": "1794679"
  },
  {
    "text": "though you're in a sandbox environment when you're creating resource ources in the cloud you have the potential for",
    "start": "1794679",
    "end": "1800200"
  },
  {
    "text": "creating resources that open you up to the world and therefore the level of risk is considerably higher um the other",
    "start": "1800200",
    "end": "1807480"
  },
  {
    "text": "interesting and very powerful thing that this does is it allows the security organization to Define their policy to",
    "start": "1807480",
    "end": "1814320"
  },
  {
    "text": "Define their security standards in code and have that code um unambiguously",
    "start": "1814320",
    "end": "1822760"
  },
  {
    "text": "verify against all development efforts that they meet the the best practice and",
    "start": "1822760",
    "end": "1828360"
  },
  {
    "text": "the standards of the organization so it essentially allows the security organization to scale across the Enterprise um and and be certain",
    "start": "1828360",
    "end": "1837080"
  },
  {
    "text": "unambiguous about the the rules that must be met in order to create safe",
    "start": "1837080",
    "end": "1843480"
  },
  {
    "text": "environments so um when we decided to start adding security static analysis to",
    "start": "1844039",
    "end": "1849399"
  },
  {
    "text": "our pipelines um we we looked around for different tools that might help us to do this and we really couldn't find",
    "start": "1849399",
    "end": "1854840"
  },
  {
    "text": "anything we couldn't find anything that did analysis of cloud formation templates um prior to creating resources",
    "start": "1854840",
    "end": "1863720"
  },
  {
    "text": "that also worked very well or or very easily in an automated pipeline fashion",
    "start": "1863720",
    "end": "1870080"
  },
  {
    "text": "so we went out and wrote a tool called CFN nag it's an open source tool you can pull it down of our GitHub repo uh and",
    "start": "1870080",
    "end": "1876320"
  },
  {
    "text": "essentially what it does is inspects the Json of a cloud formation template before convergence before doing a create",
    "start": "1876320",
    "end": "1881960"
  },
  {
    "text": "stack um in order to find patterns that uh may put you at risk things like overly permissive I policies or security",
    "start": "1881960",
    "end": "1889440"
  },
  {
    "text": "groups or disabled access logs or serers side",
    "start": "1889440",
    "end": "1894080"
  },
  {
    "text": "encryption so now I'm going to do what no no sane man should ever do and that's",
    "start": "1894639",
    "end": "1899679"
  },
  {
    "text": "to stand in front of thousand people and do a live demo can we",
    "start": "1899679",
    "end": "1908080"
  },
  {
    "text": "uh can we switch to the demo please am I on okay good great thank you",
    "start": "1908080",
    "end": "1916840"
  },
  {
    "text": "so so first we're going to start",
    "start": "1916840",
    "end": "1921480"
  },
  {
    "text": "um sorry so first we're going to start with a very simple cloud formation template",
    "start": "1928159",
    "end": "1935679"
  },
  {
    "text": "um you know this may look like a perfectly reasonable template to you uh",
    "start": "1935679",
    "end": "1940720"
  },
  {
    "text": "we have uh on our Ingress we have a single port being open to a single IP",
    "start": "1940720",
    "end": "1946559"
  },
  {
    "text": "address and you might think that that's a perfectly valid thing if we actually run this through our um oops",
    "start": "1946559",
    "end": "1954720"
  },
  {
    "text": "sorry if we actually run this through CFN nag we'll find that the fails so you",
    "start": "1954720",
    "end": "1960480"
  },
  {
    "text": "know immediately within a second we can determine that this doesn't meet our security requirements why doesn't it",
    "start": "1960480",
    "end": "1965760"
  },
  {
    "text": "meet our security requirements well it's because there was no egress rule applied to that Security Group uh the",
    "start": "1965760",
    "end": "1971960"
  },
  {
    "text": "implication of that is that if someone were to um infiltrate that system they",
    "start": "1971960",
    "end": "1977919"
  },
  {
    "text": "able to send out data potentially very sensitive data on any all through any port out to any IP address and have it",
    "start": "1977919",
    "end": "1985600"
  },
  {
    "text": "Escape know your organization so so this is something that we consider a drastic failure that should never happen so if",
    "start": "1985600",
    "end": "1994720"
  },
  {
    "text": "we go ahead and modify just very slightly that same cloud formation template you can see that we've added an",
    "start": "1994720",
    "end": "2001480"
  },
  {
    "text": "egress rule um where we've locked it down to only being able to send that data on a single Port Port 80 and we'll",
    "start": "2001480",
    "end": "2010279"
  },
  {
    "text": "run this through our uh CFN nag tool again and find that the failure has been",
    "start": "2010279",
    "end": "2016080"
  },
  {
    "text": "eliminated and it's produced a warning now typically a warning will be allowed to flow through the pipeline but it's",
    "start": "2016080",
    "end": "2022799"
  },
  {
    "text": "still feedback we think it's important for the developer to have uh the significance of this warning is that the",
    "start": "2022799",
    "end": "2031760"
  },
  {
    "text": "uh egress rule was although it was a single port it was out to any IP address in the world which means it could",
    "start": "2031760",
    "end": "2039039"
  },
  {
    "text": "potentially be problematic uh if it's intended that this is an outward an external facing web server then you know",
    "start": "2039039",
    "end": "2045799"
  },
  {
    "text": "Port 80 open to the world might be a fine thing uh if this is a tool that is",
    "start": "2045799",
    "end": "2051358"
  },
  {
    "text": "supposed to be used internally on an organization well you might want to lock down the CER block a little further and",
    "start": "2051359",
    "end": "2056480"
  },
  {
    "text": "if we in indeed uh change that uh egress rule to locking it down to a sl24 or",
    "start": "2056480",
    "end": "2063000"
  },
  {
    "text": "even a sl16 then this would pass without any warnings at all let's let's also",
    "start": "2063000",
    "end": "2068158"
  },
  {
    "text": "look at uh another example here we're creating an EBS volume that we intend to",
    "start": "2068159",
    "end": "2075000"
  },
  {
    "text": "attach to uh an instance again looks like a pretty normal kind of template",
    "start": "2075000",
    "end": "2080520"
  },
  {
    "text": "where're we're describing that we want to create a volume the size the the type the iops and where we want to create",
    "start": "2080520",
    "end": "2089720"
  },
  {
    "text": "it but if we run this through CFN nag again we'll find a failure and the failure is that uh serers side",
    "start": "2093079",
    "end": "2100119"
  },
  {
    "text": "encryption is not enabled uh to us it's a no-brainer it doesn't really cost anything to have serers side encryption",
    "start": "2100119",
    "end": "2105920"
  },
  {
    "text": "so there's uh logically no reason you should ever not have it on if we go back",
    "start": "2105920",
    "end": "2111720"
  },
  {
    "text": "and modify this cloud formation template and add in encrypted",
    "start": "2111720",
    "end": "2117519"
  },
  {
    "text": "true we run then run through and we uh we passed without any errors okay can we",
    "start": "2118640",
    "end": "2125720"
  },
  {
    "text": "go back to the slides now",
    "start": "2125720",
    "end": "2129640"
  },
  {
    "text": "thank you well I'm not done I just made it through thank you",
    "start": "2131040",
    "end": "2137800"
  },
  {
    "start": "2134000",
    "end": "2134000"
  },
  {
    "text": "though so next like to talk about the acceptance stage of the pipon if you remember what I said before the commit",
    "start": "2137800",
    "end": "2143920"
  },
  {
    "text": "stage has to do with examining the code the acceptance stage has to deal with",
    "start": "2143920",
    "end": "2149560"
  },
  {
    "text": "examining the application so typical activities you would find in the acceptance stage of a pipeline are",
    "start": "2149560",
    "end": "2155839"
  },
  {
    "text": "integration tests and acceptance tests uh pretty common practices for for most",
    "start": "2155839",
    "end": "2161160"
  },
  {
    "text": "organizations again we want to ratchet that up a little bit uh and and add security to our",
    "start": "2161160",
    "end": "2168119"
  },
  {
    "text": "pipeline so what we want to do is infrastructure analysis at the same time uh if you think about it if you're if",
    "start": "2168119",
    "end": "2174800"
  },
  {
    "text": "you compile an application like Allan was talking about Java uh you're going to want a place to run it you're going",
    "start": "2174800",
    "end": "2179880"
  },
  {
    "text": "to create some additional resources so uh you have an environment that's now changed and there's some impact to that",
    "start": "2179880",
    "end": "2185640"
  },
  {
    "text": "what's the impact that's what we're trying to determine so um so really what we're trying to do",
    "start": "2185640",
    "end": "2192560"
  },
  {
    "start": "2189000",
    "end": "2189000"
  },
  {
    "text": "here with this infrastructure analysis is to prevent infrastructure analysis that violate security policies that",
    "start": "2192560",
    "end": "2198000"
  },
  {
    "text": "might put us at risk um and we want to be able to do that rather than by",
    "start": "2198000",
    "end": "2203040"
  },
  {
    "text": "manually a security um individual examining um something and telling us",
    "start": "2203040",
    "end": "2209480"
  },
  {
    "text": "whether or not they like it whether or not it meets policy we want to codify that those security rules um and get",
    "start": "2209480",
    "end": "2216160"
  },
  {
    "text": "notifications um when violations occur that's also pretty important because in addition to us in our uh pipeline uh",
    "start": "2216160",
    "end": "2226000"
  },
  {
    "text": "creating resources making changes there's also the potential of people making changes outside of the pipeline",
    "start": "2226000",
    "end": "2232359"
  },
  {
    "text": "out of band and uh what that means is that the security of the application",
    "start": "2232359",
    "end": "2238119"
  },
  {
    "text": "might also be altered by out- of- Band changes that are coming in so we want to be able to check for all that stuff and",
    "start": "2238119",
    "end": "2243920"
  },
  {
    "text": "finally we want to be able to um execute this on demand within our pipeline so",
    "start": "2243920",
    "end": "2250119"
  },
  {
    "text": "the obvious tool for doing a lot of this is the AWS config tool and setting up the proper config rules to uh track this",
    "start": "2250119",
    "end": "2257359"
  },
  {
    "text": "but the problem is that pipeline enablement of uh AWS config can be a little bit challenging uh it's not",
    "start": "2257359",
    "end": "2263720"
  },
  {
    "text": "really designed to be um tested in a pipeline so much uh tends to be somewhat console Centric where you you would go",
    "start": "2263720",
    "end": "2270839"
  },
  {
    "text": "to see your results and such so we wanted to add to that we wanted to use that core technology um but we also",
    "start": "2270839",
    "end": "2278520"
  },
  {
    "text": "wanted to make it easier to use within the confines of a pipeline so we wrote another open source tool called config",
    "start": "2278520",
    "end": "2284760"
  },
  {
    "text": "rule status um so what does this do how does this help us well we're still using",
    "start": "2284760",
    "end": "2289920"
  },
  {
    "text": "AWS config under the hood but it allows us to set AWS AWS config up for resource",
    "start": "2289920",
    "end": "2295359"
  },
  {
    "text": "monitoring in an automated fashion um it creates config rules and Lambda",
    "start": "2295359",
    "end": "2301359"
  },
  {
    "text": "functions to evaluate the security compliance uh creates a tester Lambda function so that from within the",
    "start": "2301359",
    "end": "2306960"
  },
  {
    "text": "pipeline we can easily test and essentially get back the results of what are our asynchronous analysis of our",
    "start": "2306960",
    "end": "2314880"
  },
  {
    "text": "environment um it comes with a bundled CLI that allows um for easy deploying of the tool um can be invoked with a c uh",
    "start": "2315960",
    "end": "2324680"
  },
  {
    "text": "and uh it you can invoke it from within the pipeline to very easily catch policy violations before they get to",
    "start": "2324680",
    "end": "2332280"
  },
  {
    "start": "2332000",
    "end": "2332000"
  },
  {
    "text": "production technology it uses clearly it uses AWS config it also uses L to",
    "start": "2332280",
    "end": "2337920"
  },
  {
    "text": "automate the process of of rolling out uh the tester function and the deployment functions uh cloud formation",
    "start": "2337920",
    "end": "2344520"
  },
  {
    "text": "for creating supporting resources and the serverless framework for uh actually invoking the uh for orchestrating the",
    "start": "2344520",
    "end": "2351839"
  },
  {
    "text": "deployment of Lambda uh in support of the service so on this diagram here uh we",
    "start": "2351839",
    "end": "2360160"
  },
  {
    "text": "this is the overall architecture of environment utilizing config rule status",
    "start": "2360160",
    "end": "2365920"
  },
  {
    "text": "and as you can see at the top there is our deployment pipeline where this is actually going to be consumed uh the",
    "start": "2365920",
    "end": "2371640"
  },
  {
    "text": "next lever next level down you have the rules definition the config service that has to be stood up in order for you to",
    "start": "2371640",
    "end": "2378240"
  },
  {
    "text": "be able to do that testing um and then the third level the green level there is",
    "start": "2378240",
    "end": "2383680"
  },
  {
    "text": "the Lambda service which is used to facilitate um the automatic uh creation",
    "start": "2383680",
    "end": "2389720"
  },
  {
    "text": "of the the uh or configuration of the service uh and then finally you have the",
    "start": "2389720",
    "end": "2395280"
  },
  {
    "text": "actual environment at the fourth layer uh that's being analyzed uh having dodged the bullet on",
    "start": "2395280",
    "end": "2403040"
  },
  {
    "text": "the first demonstration I'm actually going to",
    "start": "2403040",
    "end": "2407560"
  },
  {
    "text": "do uh a video screencast um to",
    "start": "2409800",
    "end": "2415760"
  },
  {
    "text": "show uh config rules status in action",
    "start": "2415760",
    "end": "2421359"
  },
  {
    "text": "so so like I said it comes with it comes with the the tooling the the code to",
    "start": "2422880",
    "end": "2428599"
  },
  {
    "text": "automate the process of installing and creating this so right now what is going on is that the serverless framework is",
    "start": "2428599",
    "end": "2436040"
  },
  {
    "text": "is standing up creating the initial resources that we need in order to be able to to ex to execute to implement",
    "start": "2436040",
    "end": "2443599"
  },
  {
    "text": "the environment um the next thing that's going to go on as they mentioned um is",
    "start": "2443599",
    "end": "2449800"
  },
  {
    "text": "that we are going to deploy Lambda functions for rule logic uh we support",
    "start": "2449800",
    "end": "2456880"
  },
  {
    "text": "both standard conf uh config rules as well as custom config rules that you can Define yourself and this will allow you",
    "start": "2456880",
    "end": "2464040"
  },
  {
    "text": "to represent those in code and build them into the",
    "start": "2464040",
    "end": "2468599"
  },
  {
    "text": "environment so it's it's setting up all the resources necessary the topic the bucket so on and so forth um at this",
    "start": "2473359",
    "end": "2480960"
  },
  {
    "text": "point we're we're now deploying um the configuration in order to uh be able to support uh the the",
    "start": "2480960",
    "end": "2489680"
  },
  {
    "text": "testing through config rule status and it's actually deploying the",
    "start": "2489680",
    "end": "2496119"
  },
  {
    "text": "rules at this point in um in the process and here what we're doing is",
    "start": "2496119",
    "end": "2501839"
  },
  {
    "text": "some examples of of how you can use it you can use it from a command line here um we're running some mocha tests",
    "start": "2501839",
    "end": "2508640"
  },
  {
    "text": "actually testing the environment so um what's going on is you know this diagram",
    "start": "2508640",
    "end": "2515520"
  },
  {
    "text": "right here is showing you what the code might look like like within your pipeline to actually consume the results",
    "start": "2515520",
    "end": "2520599"
  },
  {
    "text": "of the Lambda tester function um and we do that and we see that we get a failure",
    "start": "2520599",
    "end": "2526640"
  },
  {
    "text": "if we go in and look at the results text we will find that we failed on the multiactor authentication rule um the",
    "start": "2526640",
    "end": "2534839"
  },
  {
    "text": "multiactor authentication will essentially says that all users must use multiactor authentication we go to the console and look and sure enough",
    "start": "2534839",
    "end": "2540680"
  },
  {
    "text": "someone's created a user that has no multiactor authentication turned on we",
    "start": "2540680",
    "end": "2546000"
  },
  {
    "text": "resolve that problem here here run the test again and you'll see that we now",
    "start": "2546000",
    "end": "2551800"
  },
  {
    "text": "pass uh very important thing is that when you encounter any problem in the pipeline you you stop the line fix the",
    "start": "2551800",
    "end": "2559119"
  },
  {
    "text": "problem before you're allowed to continue on and that's exactly what we're doing in this case uh even though it wasn't with our code it was with the",
    "start": "2559119",
    "end": "2565280"
  },
  {
    "text": "environment it's still very important that we we get a consistent environment so okay if we can go back to the slides",
    "start": "2565280",
    "end": "2574359"
  },
  {
    "text": "now so uh those probably that's all the time",
    "start": "2576119",
    "end": "2581599"
  },
  {
    "text": "I have to go into detail in those stages but there's certainly testing that you can do in the other stages of the",
    "start": "2581599",
    "end": "2586800"
  },
  {
    "text": "pipeline the capacity stage as I mentioned is really where we want to test the environment we want to um we",
    "start": "2586800",
    "end": "2592720"
  },
  {
    "text": "want to understand uh the environment structured as we intend to have it built out how we will um how we will Fair as",
    "start": "2592720",
    "end": "2602079"
  },
  {
    "text": "far as our security is concerned there again capacity is a standard stage you see in a lot of pipelines where you",
    "start": "2602079",
    "end": "2607200"
  },
  {
    "text": "might do performance tests or load tests uh if we want to add security to our pipeline we might want to do something",
    "start": "2607200",
    "end": "2613440"
  },
  {
    "text": "like penetration testing um or image testing actually testing the OS",
    "start": "2613440",
    "end": "2618680"
  },
  {
    "text": "configuration for vulnerabilities and that can all be built into the uh capacity phase and we",
    "start": "2618680",
    "end": "2623920"
  },
  {
    "text": "have tools that support that that you'll find in our GitHub repo um uh when you",
    "start": "2623920",
    "end": "2629400"
  },
  {
    "start": "2627000",
    "end": "2627000"
  },
  {
    "text": "go to the process of going into production the production stage as I mentioned there's two phases to it pre-prod and production uh in the",
    "start": "2629400",
    "end": "2636119"
  },
  {
    "text": "pre-prod we're building the candidate environment um which we intend to put",
    "start": "2636119",
    "end": "2641200"
  },
  {
    "text": "into production and so we might want to do things like check for out- of- band",
    "start": "2641200",
    "end": "2648319"
  },
  {
    "text": "changes um in uh in the environment uh as well as sorry I I skipped something",
    "start": "2648319",
    "end": "2655240"
  },
  {
    "text": "here so in so in the pre-prod stage um we will definitely want to continue to",
    "start": "2655240",
    "end": "2660319"
  },
  {
    "text": "do testing do smoke testing environment because this is this is no longer a test environment this is a candidate",
    "start": "2660319",
    "end": "2666000"
  },
  {
    "text": "production environment so a lot of the testing that we've done earlier in the pipeline gets repeated here uh before we",
    "start": "2666000",
    "end": "2671480"
  },
  {
    "text": "make the final go noo decision about rolling this into production and the very important thing is when we actually",
    "start": "2671480",
    "end": "2677440"
  },
  {
    "text": "get into production we want to continue the same kind of testing essentially the testing that we do all through the",
    "start": "2677440",
    "end": "2682640"
  },
  {
    "text": "pipeline becomes the monitoring of our production environment and the reason for that is because again out- of--and",
    "start": "2682640",
    "end": "2689079"
  },
  {
    "text": "changes can degrade our security posture as we move through so it's very important that whatever we've defined as",
    "start": "2689079",
    "end": "2695240"
  },
  {
    "text": "our proper security posture uh needs to be tested not just when we make a decision to roll into um into production",
    "start": "2695240",
    "end": "2702920"
  },
  {
    "text": "but also as we're in production so when we use config rule status we we utilize",
    "start": "2702920",
    "end": "2708119"
  },
  {
    "text": "it such that we are able to continue to have it run and to be able to report and",
    "start": "2708119",
    "end": "2713520"
  },
  {
    "text": "notify us about um changes so as Alan mentioned there's a",
    "start": "2713520",
    "end": "2719400"
  },
  {
    "text": "lot of code around everything that we've talked about there's a web page out there stage.com f303 It'll point you to a series of",
    "start": "2719400",
    "end": "2726280"
  },
  {
    "text": "blogg blog articles as well as a series of GitHub repos which have information",
    "start": "2726280",
    "end": "2731760"
  },
  {
    "text": "on everything that we've talked about today um it's all open source all available for you to use so would",
    "start": "2731760",
    "end": "2737400"
  },
  {
    "text": "encourage people to uh to get out there take a look at it try to incorporate these processes into your uh into your",
    "start": "2737400",
    "end": "2744200"
  },
  {
    "text": "continuous delivery pipeline so thank you",
    "start": "2744200",
    "end": "2750400"
  },
  {
    "text": "[Applause] everyone",
    "start": "2750400",
    "end": "2757880"
  }
]