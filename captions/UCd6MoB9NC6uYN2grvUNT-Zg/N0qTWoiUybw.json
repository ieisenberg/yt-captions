[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "In this video, you’ll see how to access data sets \nwith AWS Data Exchange for AWS Lake Formation.",
    "start": "0",
    "end": "5887"
  },
  {
    "text": "With this feature, subscribers can access third-party \nAWS Glue tables managed by AWS Lake Formation.",
    "start": "6352",
    "end": "12570"
  },
  {
    "text": "You can create resource links to read \nthe data from the Amazon Athena query",
    "start": "13050",
    "end": "16662"
  },
  {
    "text": "editor, and apply data filters that limit \ncolumn and row visibility according to",
    "start": "16662",
    "end": "20860"
  },
  {
    "text": "Identity and Access Management (IAM) role.",
    "start": "20860",
    "end": "23611"
  },
  {
    "start": "25000",
    "end": "78000"
  },
  {
    "text": "We’ll begin in the AWS Data Exchange console, \nwhere we can explore available data products.",
    "start": "25835",
    "end": "30827"
  },
  {
    "text": "For this example, we’ll subscribe to \nthe Legal Entity Identifier product.",
    "start": "31743",
    "end": "35565"
  },
  {
    "text": "Let’s scroll down to view the data sets \nthat are available with this product.",
    "start": "39431",
    "end": "42631"
  },
  {
    "text": "This data set uses the Lake Formation type.",
    "start": "43489",
    "end": "45828"
  },
  {
    "text": "Let’s continue to subscribe.",
    "start": "45959",
    "end": "47382"
  },
  {
    "text": "We’ll send our subscription \nrequest to the data provider.",
    "start": "57472",
    "end": "60000"
  },
  {
    "text": "Once the data provider approves the subscription \nrequest, we will have access to the data product.",
    "start": "62427",
    "end": "67177"
  },
  {
    "text": "The subscription request has been approved.",
    "start": "69590",
    "end": "71674"
  },
  {
    "text": "Let’s look at the data we’re entitled to.",
    "start": "72373",
    "end": "74276"
  },
  {
    "start": "78000",
    "end": "123000"
  },
  {
    "text": "We’ve received invitations to two resource \nshares in the Resource Access Manager (AWS RAM)",
    "start": "78666",
    "end": "84233"
  },
  {
    "text": "console that will allow us to connect with the\nAWS Glue database and the AWS Glue tables.",
    "start": "84233",
    "end": "89464"
  },
  {
    "text": "Let's go to the RAM console.",
    "start": "90307",
    "end": "91840"
  },
  {
    "text": "We’ll navigate to the resource shares page and \naccept both invitations so we can view the data sets.",
    "start": "95721",
    "end": "100444"
  },
  {
    "text": "The resource shares are both active.",
    "start": "109212",
    "end": "111000"
  },
  {
    "text": "Now, let's go to the AWS Lake Formation console.",
    "start": "111334",
    "end": "114225"
  },
  {
    "text": "The subscription resources appear \nalongside our first-party database and tables.",
    "start": "117000",
    "end": "121092"
  },
  {
    "start": "123000",
    "end": "146000"
  },
  {
    "text": "Next, we’ll configure a resource link that \nwe can reference when we query the",
    "start": "124159",
    "end": "127400"
  },
  {
    "text": "data sets using Amazon Athena.",
    "start": "127401",
    "end": "129229"
  },
  {
    "text": "Let’s select the table we want to link to.",
    "start": "129637",
    "end": "131512"
  },
  {
    "text": "Now, we’ll create the resource link.",
    "start": "133184",
    "end": "135000"
  },
  {
    "text": "Let’s name the resource link and choose our first-party \ndatabase, which is protected by a local AWS account.",
    "start": "138241",
    "end": "143468"
  },
  {
    "start": "146000",
    "end": "170000"
  },
  {
    "text": "The resource link has been created.",
    "start": "146898",
    "end": "148452"
  },
  {
    "text": "We can easily distinguish resource \nlinks by the italics format.",
    "start": "148656",
    "end": "151767"
  },
  {
    "text": "Next, we’ll go to the Athena query editor.",
    "start": "153000",
    "end": "155124"
  },
  {
    "text": "As a Data Lake administrator, we can \nread the data from the resource link.",
    "start": "158074",
    "end": "161729"
  },
  {
    "text": "Let’s run this sample query to find the distinct \ncount of exception.reason.1 from this table.",
    "start": "162630",
    "end": "167143"
  },
  {
    "text": "Here are the query results.",
    "start": "169571",
    "end": "171000"
  },
  {
    "start": "170000",
    "end": "241000"
  },
  {
    "text": "Next, we’ll go to the Lake Formation console to set up \ndata permissions on the table for specific IAM roles.",
    "start": "171262",
    "end": "176764"
  },
  {
    "text": "On the data filters page, we can create a filter\nto specify what data an IAM role can view.",
    "start": "177462",
    "end": "182519"
  },
  {
    "text": "We’ll name the data filter, and select the database \nthat contains the table we want to filter data on.",
    "start": "183290",
    "end": "187881"
  },
  {
    "text": "By default, this only shows the local databases.",
    "start": "188827",
    "end": "191566"
  },
  {
    "text": "To include the shared \ndatabases, we’ll select Load more.",
    "start": "191913",
    "end": "195000"
  },
  {
    "text": "Let’s select the shared \ndatabase and target table.",
    "start": "196919",
    "end": "199277"
  },
  {
    "text": "Under column-level access, we’ll select \nthe columns we want to include in the filter.",
    "start": "206835",
    "end": "211128"
  },
  {
    "text": "Finally, we’ll write a SQL-like row filter \nexpression to filter the rows further.",
    "start": "223265",
    "end": "227304"
  },
  {
    "text": "This filter will grant permissions for a \nrole to the selected columns and view",
    "start": "228118",
    "end": "231956"
  },
  {
    "text": "only the data where the exception.reason.1 \nfield is BINDING_LEGAL_COMMITMENTS.",
    "start": "231956",
    "end": "236583"
  },
  {
    "text": "Let’s create the filter.",
    "start": "236913",
    "end": "238144"
  },
  {
    "start": "241000",
    "end": "269000"
  },
  {
    "text": "Next, we’ll grant data permissions to a specific \nIAM role by using the filter we just created.",
    "start": "241808",
    "end": "246749"
  },
  {
    "text": "We’ll select the role, and choose \nthe Data Catalog resources.",
    "start": "247898",
    "end": "250862"
  },
  {
    "start": "269000",
    "end": "352000"
  },
  {
    "text": "Under Data filter permissions, we’ll choose \nwhat actions this role can perform on the data.",
    "start": "270000",
    "end": "274300"
  },
  {
    "text": "Let’s allow the role to select and describe data.",
    "start": "274533",
    "end": "276873"
  },
  {
    "text": "We won’t allow the data analyst role to\ngrant permissions to other user roles.",
    "start": "277978",
    "end": "281654"
  },
  {
    "text": "Note that granting permissions for a \nresource link does not grant permissions",
    "start": "282381",
    "end": "285549"
  },
  {
    "text": "for the target database or table.",
    "start": "285549",
    "end": "287220"
  },
  {
    "text": "Those permissions must be granted separately.",
    "start": "287351",
    "end": "289444"
  },
  {
    "text": "Let’s grant the data permissions.",
    "start": "290534",
    "end": "292074"
  },
  {
    "text": "Now let’s switch into the AWS \naccount as the DataAnalyst role.",
    "start": "293194",
    "end": "296493"
  },
  {
    "text": "In the Athena query editor, let's run the \nsame query we ran when we were",
    "start": "298586",
    "end": "302120"
  },
  {
    "text": "signed in as a data lake administrator.",
    "start": "302120",
    "end": "304232"
  },
  {
    "text": "As expected, the query results show only \nthe rows corresponding to the filter we set up.",
    "start": "307139",
    "end": "311739"
  },
  {
    "text": "Let's run another query to \ntest the column level filtering.",
    "start": "312829",
    "end": "315574"
  },
  {
    "text": "The query results show the columns included in \nthe filter, as well as extra date and time columns.",
    "start": "322300",
    "end": "327320"
  },
  {
    "text": "The table is partitioned on these two columns, \nso the column-level filters do not apply.",
    "start": "329356",
    "end": "333606"
  },
  {
    "text": "You’ve just seen how to access data sets with \nAWS Data Exchange for AWS Data Lake Formation.",
    "start": "338331",
    "end": "343693"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "345103",
    "end": "348244"
  },
  {
    "text": "Thanks for watching. Now it’s your turn to try.",
    "start": "348389",
    "end": "350500"
  }
]