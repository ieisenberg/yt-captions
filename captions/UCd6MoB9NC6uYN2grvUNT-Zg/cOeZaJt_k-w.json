[
  {
    "text": "In this video, you’ll see how to analyze activity logs \nwith AWS CloudTrail Lake and Amazon Athena. ",
    "start": "80",
    "end": "6699"
  },
  {
    "text": "With this capability, you can federate an event \ndata store in CloudTrail Lake so you can query",
    "start": "7040",
    "end": "12120"
  },
  {
    "text": "the data in Amazon Athena \nwith no additional setup.",
    "start": "12120",
    "end": "15116"
  },
  {
    "text": "You can then visualize your event data \nusing other services that run on Athena",
    "start": "15423",
    "end": "19381"
  },
  {
    "text": "such as Amazon QuickSight \nand Amazon Managed Grafana.",
    "start": "19381",
    "end": "22826"
  },
  {
    "text": "We’ll begin in Amazon S3 where \nwe usually store important data.",
    "start": "25162",
    "end": "29467"
  },
  {
    "text": "Today, however, our data is missing.",
    "start": "29724",
    "end": "32313"
  },
  {
    "text": "We need to find out immediately who \nremoved the data and how they did it.",
    "start": "32651",
    "end": "36942"
  },
  {
    "text": "To get started, let’s look at \nour S3 bucket permissions.",
    "start": "38052",
    "end": "41627"
  },
  {
    "text": "The bucket policy denies DeleteObject \ncalls coming from outside our VPC.",
    "start": "42342",
    "end": "47274"
  },
  {
    "text": "It’s possible that someone started \nnew EC2 instances in the VPC",
    "start": "47650",
    "end": "51854"
  },
  {
    "text": "and then made DeleteObject \ncalls from those instances.",
    "start": "51854",
    "end": "54900"
  },
  {
    "text": "We can use AWS CloudTrail to figure \nout who created those EC2 instances.",
    "start": "56108",
    "end": "60898"
  },
  {
    "text": "This is the Event data stores \npage in CloudTrail Lake.",
    "start": "62438",
    "end": "65788"
  },
  {
    "text": "CloudTrail Lake serves as a central \nlocation to immutably store, aggregate,",
    "start": "66084",
    "end": "71055"
  },
  {
    "text": "query, and visualize your activity logs.",
    "start": "71055",
    "end": "74131"
  },
  {
    "text": "We have an event data store enabled \nthat is already logging management",
    "start": "74710",
    "end": "78004"
  },
  {
    "text": "event APIs and S3 data event APIs.",
    "start": "78004",
    "end": "81668"
  },
  {
    "text": "At this time, Lake query federation is \nnot enabled for this event data store.",
    "start": "83313",
    "end": "87390"
  },
  {
    "text": "We’ll look at federation in a moment.",
    "start": "87509",
    "end": "89331"
  },
  {
    "text": "Before we begin our investigation,",
    "start": "91022",
    "end": "93020"
  },
  {
    "text": "let’s run a basic SELECT query to get \nfamiliar with the CloudTrail Lake Editor.",
    "start": "93020",
    "end": "97773"
  },
  {
    "text": "In the left pane, we have chosen our event \ndata store, and CloudTrail automatically",
    "start": "98238",
    "end": "103278"
  },
  {
    "text": "populated the event data store ID in \nthe FROM line of the query editor.",
    "start": "103278",
    "end": "107971"
  },
  {
    "text": "The Command output tab \nshows metadata about the query.",
    "start": "111215",
    "end": "114328"
  },
  {
    "text": "The Query results tab shows the \nevent data in the selected event",
    "start": "115628",
    "end": "118988"
  },
  {
    "text": "data store that matched the query.",
    "start": "118988",
    "end": "120857"
  },
  {
    "text": "The columns in the results correspond \nto the event properties to the left.",
    "start": "122101",
    "end": "125784"
  },
  {
    "text": "Next, we’ll return to the event data \nstore and enable Lake query federation.",
    "start": "126486",
    "end": "130669"
  },
  {
    "text": "Federation will allow us to see the metadata \nassociated with the event data store in the AWS",
    "start": "132732",
    "end": "138124"
  },
  {
    "text": "Glue Data Catalog and run SQL queries \non the event data using Amazon Athena.",
    "start": "138124",
    "end": "143635"
  },
  {
    "text": "We can create a new IAM \nrole or use an existing one.",
    "start": "145724",
    "end": "149080"
  },
  {
    "text": "The role must have the required \npermissions to allow Lake Formation",
    "start": "152246",
    "end": "155621"
  },
  {
    "text": "to access event data store data.",
    "start": "155621",
    "end": "157808"
  },
  {
    "text": "Note that enabling federation \ndoesn't incur any costs,",
    "start": "159539",
    "end": "162593"
  },
  {
    "text": "but queries run on Athena \nare based on Athena pricing.",
    "start": "162593",
    "end": "165618"
  },
  {
    "text": "Lake query federation is now enabled.",
    "start": "167586",
    "end": "169672"
  },
  {
    "text": "CloudTrail created a \nmanaged database named",
    "start": "169874",
    "end": "172426"
  },
  {
    "text": "aws:cloudtrail and a managed federated \ntable in the AWS Glue Data Catalog.",
    "start": "172426",
    "end": "177957"
  },
  {
    "text": "Let’s take a quick look \nat the table metadata.",
    "start": "178472",
    "end": "180628"
  },
  {
    "text": "The columns in the schema match those \nwe saw in the CloudTrail Lake query editor.",
    "start": "183248",
    "end": "187709"
  },
  {
    "text": "In addition, we can see the data type for each.",
    "start": "188033",
    "end": "190922"
  },
  {
    "text": "On the next tab, we can view the partitions.",
    "start": "192550",
    "end": "194836"
  },
  {
    "text": "These can be filtered on calendar day so \nAthena doesn’t have to scan all the data.",
    "start": "195000",
    "end": "199063"
  },
  {
    "text": "Next, let’s go to AWS Lake Formation \nto look at the database details.",
    "start": "199871",
    "end": "204699"
  },
  {
    "text": "From the Actions dropdown menu, we can \ngrant and revoke permissions to view the data.",
    "start": "206420",
    "end": "211380"
  },
  {
    "text": "Now let’s go to Amazon Athena so \nwe can query the DeleteObject calls.",
    "start": "212260",
    "end": "215917"
  },
  {
    "text": "The first query we’ll run selects the \nevent name, user identity, source IP",
    "start": "216979",
    "end": "221331"
  },
  {
    "text": "address, and event time from \nthe federated event data store.",
    "start": "221331",
    "end": "224909"
  },
  {
    "text": "In the left pane, we can \nview the table schema.",
    "start": "226095",
    "end": "228521"
  },
  {
    "text": "We can even run a query \nto preview the table.",
    "start": "228720",
    "end": "231237"
  },
  {
    "text": "Let’s go back to the first query.",
    "start": "234076",
    "end": "235655"
  },
  {
    "text": "Notice that this query filters on \nDeleteObject calls coming from within",
    "start": "238752",
    "end": "242461"
  },
  {
    "text": "our VPC and on a specific calendar \nday, and it orders them by event time.",
    "start": "242461",
    "end": "247804"
  },
  {
    "text": "Let’s run the query now.",
    "start": "248318",
    "end": "249930"
  },
  {
    "text": "The results show that someone assumed the role \nname \"Hacker\" and deleted objects from our VPC.",
    "start": "252954",
    "end": "258268"
  },
  {
    "text": "We have the source IP \naddresses and the event times.",
    "start": "258575",
    "end": "261862"
  },
  {
    "text": "We can use the source IP addresses, \nwhich were captured from our VPC flow logs,",
    "start": "262427",
    "end": "267506"
  },
  {
    "text": "to identify the EC2 instances involved.",
    "start": "267506",
    "end": "270636"
  },
  {
    "text": "For demonstration purposes, we've \nalready configured the VPC flow logs",
    "start": "273000",
    "end": "276798"
  },
  {
    "text": "to be sent to an S3 bucket, and we have\n a Glue table pointing to that S3 bucket.",
    "start": "276798",
    "end": "281662"
  },
  {
    "text": "We’ll join the federated event data store \nwith the VPC flow logs to find out which  ",
    "start": "282251",
    "end": "286897"
  },
  {
    "text": "EC2 instances made DeleteObject calls.",
    "start": "286897",
    "end": "290264"
  },
  {
    "text": "Here’s the VPC flow logs table schema.",
    "start": "293137",
    "end": "295763"
  },
  {
    "text": "This query joins on the source IP \naddress and groups by instance ID.",
    "start": "302012",
    "end": "305884"
  },
  {
    "text": "Let’s run it.",
    "start": "306124",
    "end": "306944"
  },
  {
    "text": "Five instances made DeleteObject calls.",
    "start": "309352",
    "end": "311952"
  },
  {
    "text": "The next query will help us figure \nout who created these instances.",
    "start": "312310",
    "end": "315664"
  },
  {
    "text": "This query runs the \nprevious one as a subquery,",
    "start": "316551",
    "end": "319366"
  },
  {
    "text": "storing the results in a temporary \ntable called instance-ids.",
    "start": "319366",
    "end": "323454"
  },
  {
    "text": "Next, it selects instance ID, source IP address, \nand user identity ARN and filters on run instances.",
    "start": "323931",
    "end": "331990"
  },
  {
    "text": "A response element then filters on the",
    "start": "332623",
    "end": "334623"
  },
  {
    "text": "instance events that created the \ninstance IDs from the subquery.",
    "start": "334623",
    "end": "338241"
  },
  {
    "text": "Let’s run the query.",
    "start": "338625",
    "end": "339730"
  },
  {
    "text": "Looking at the ARN column, we see that\nit was the Admin role that created these",
    "start": "342402",
    "end": "346668"
  },
  {
    "text": "instances and deleted data: \nthat means we are the culprit.",
    "start": "346668",
    "end": "350867"
  },
  {
    "text": "Now that we've identified the culprit, let’s find \nout how much these EC2 instances cost.",
    "start": "353930",
    "end": "359274"
  },
  {
    "text": "For that, we’ll query the cost report \nfrom the AWS Billing console.",
    "start": "359454",
    "end": "364028"
  },
  {
    "text": "We’ve configured the billing data to be sent \nto an S3 bucket, and we have a Glue table",
    "start": "366000",
    "end": "370440"
  },
  {
    "text": "pointing to that S3 bucket.",
    "start": "370440",
    "end": "372225"
  },
  {
    "text": "The only columns we care about for \nthis demo are product_servicecode,",
    "start": "373328",
    "end": "377291"
  },
  {
    "text": "line_item_resource_id, and \nline_item_blended_cost.",
    "start": "377291",
    "end": "381572"
  },
  {
    "text": "Let’s run this simple query to see \nwhat those values might look like.",
    "start": "382032",
    "end": "385445"
  },
  {
    "text": "We're going to be filtering on \nAmazon EC2 for product_servicecode.",
    "start": "387392",
    "end": "391304"
  },
  {
    "text": "The line_item_resource_id is \ngoing to be the instance ID, and",
    "start": "391508",
    "end": "395442"
  },
  {
    "text": "line_item_blended_cost is the actual cost.",
    "start": "395442",
    "end": "398261"
  },
  {
    "text": "Let’s look at the query.",
    "start": "398536",
    "end": "399870"
  },
  {
    "text": "We’ll use the same subquery as before to get the \ninstance IDs that made the DeleteObject calls.",
    "start": "403656",
    "end": "409177"
  },
  {
    "text": "We’ll join that data with the cost report, group \nby instance ID, and then sum up all the costs.",
    "start": "409382",
    "end": "415293"
  },
  {
    "text": "Now we have the cost \nbreakdown per instance ID.",
    "start": "418611",
    "end": "421952"
  },
  {
    "text": "This capability is useful in a production \nenvironment if there’s an incident.",
    "start": "422238",
    "end": "426181"
  },
  {
    "text": "Another benefit of CloudTrail \nLake federation is the ability  ",
    "start": "427496",
    "end": "430838"
  },
  {
    "text": "to use visualization and analytics \nservices that run on top of Athena.",
    "start": "430838",
    "end": "435492"
  },
  {
    "text": "For example, we could create a report \nfor this DeleteObject scenario in Amazon  ",
    "start": "437524",
    "end": "441844"
  },
  {
    "text": "QuickSight by running a SQL query and \nthen publishing the results to a dashboard.",
    "start": "441844",
    "end": "446497"
  },
  {
    "text": "Here we can explore and interpret the \ndata in an interactive visual environment.",
    "start": "448205",
    "end": "452647"
  },
  {
    "text": "You’ve just seen how to analyze activity logs \nwith AWS CloudTrail Lake and Amazon Athena.",
    "start": "456490",
    "end": "461966"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "462900",
    "end": "466637"
  },
  {
    "text": "Thanks for watching. Now it’s your turn to try.",
    "start": "467404",
    "end": "469896"
  }
]