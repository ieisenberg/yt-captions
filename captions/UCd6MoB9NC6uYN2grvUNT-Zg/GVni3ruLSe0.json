[
  {
    "start": "0",
    "end": "38000"
  },
  {
    "text": "hello everybody thank you for being here my name is Subaru I'm a product manager in Amazon and I'm here to speak today",
    "start": "179",
    "end": "6330"
  },
  {
    "text": "about our nearly none service AWS at mesh so what's at mesh at mesh in shark",
    "start": "6330",
    "end": "14880"
  },
  {
    "text": "is a service mesh to help you get more visibility and control into the communication between your micro",
    "start": "14880",
    "end": "20430"
  },
  {
    "text": "services and today I'm going to speak a lot more about why micro services why",
    "start": "20430",
    "end": "26160"
  },
  {
    "text": "service mesh proxy Wike service mesh control plane and why we built that mesh and then I'll get into a little bit of",
    "start": "26160",
    "end": "31740"
  },
  {
    "text": "how how do you represent your app what features do we have now and what's coming next",
    "start": "31740",
    "end": "37760"
  },
  {
    "text": "so to start with if we have to think about a real world analogy here and you know I think about really",
    "start": "37760",
    "end": "44730"
  },
  {
    "start": "38000",
    "end": "110000"
  },
  {
    "text": "popular chefs and their boutique restaurants there is a lot of process that goes into coming up with a new",
    "start": "44730",
    "end": "51180"
  },
  {
    "text": "recipe as well as to make sure that every single plate of food that goes out to the customer is perfectly the same",
    "start": "51180",
    "end": "57539"
  },
  {
    "text": "extent that they would come back for more and they would really give it the greatest reviews but that process is",
    "start": "57539",
    "end": "64260"
  },
  {
    "text": "very similar to how you would have built a monolith application it's it's easy",
    "start": "64260",
    "end": "69630"
  },
  {
    "text": "and simple there's one person who really knows it all who has spent a lot of time in tuning and refining it but it doesn't",
    "start": "69630",
    "end": "76470"
  },
  {
    "text": "really scale very well if you want to roll it out to become a countrywide a worldwide franchisee so if you want to",
    "start": "76470",
    "end": "83520"
  },
  {
    "text": "really go big and have multiple people be able to replicate the same dish",
    "start": "83520",
    "end": "89009"
  },
  {
    "text": "replicate it in a way that feels the closest to the original then you have to",
    "start": "89009",
    "end": "94320"
  },
  {
    "text": "come up with cookbooks and recipes and guidelines to really look for specific things and also teach people to be able",
    "start": "94320",
    "end": "100619"
  },
  {
    "text": "to do it very easily without having to put in a lot of innovation our new",
    "start": "100619",
    "end": "106409"
  },
  {
    "text": "thought into how it really is done so the analogy is like my monoliths and",
    "start": "106409",
    "end": "113610"
  },
  {
    "text": "micro services like I said monolith there is slow gradual improvement in the monolith unit over time you make it good",
    "start": "113610",
    "end": "120780"
  },
  {
    "text": "you make it better it's simple and nice but it's not often scalable like how you",
    "start": "120780",
    "end": "126090"
  },
  {
    "text": "would have to think about rolling or bigger franchisee change you would have to think about how do you replicate this",
    "start": "126090",
    "end": "132459"
  },
  {
    "text": "processes that you have learnt in building your applications today and make it repeatable so that everybody on",
    "start": "132459",
    "end": "138280"
  },
  {
    "text": "your team and every service follows it consistently and thereby function making it a well-functioning system that works",
    "start": "138280",
    "end": "145150"
  },
  {
    "text": "together on search that the source your customers in the best manner that it",
    "start": "145150",
    "end": "150159"
  },
  {
    "text": "could potentially do so this I'm pretty sure this something that we all have",
    "start": "150159",
    "end": "157359"
  },
  {
    "start": "153000",
    "end": "184000"
  },
  {
    "text": "thought about you've heard about before you're breaking down your monoliths which are potentially managed by one single team today to be handled to be",
    "start": "157359",
    "end": "165579"
  },
  {
    "text": "built as multiple services and these have different developers different teams different operational guidelines",
    "start": "165579",
    "end": "171599"
  },
  {
    "text": "different requirements and so they there are a lot of people in the people in the",
    "start": "171599",
    "end": "177700"
  },
  {
    "text": "process there are a lot of things that have to go right to really have it all come together very well and over time",
    "start": "177700",
    "end": "185079"
  },
  {
    "start": "184000",
    "end": "269000"
  },
  {
    "text": "the services evolve the services become tuned to doing one specific thing like",
    "start": "185079",
    "end": "191379"
  },
  {
    "text": "it is supposed to and they get the divergence in the sense that they could be using different programming languages",
    "start": "191379",
    "end": "198069"
  },
  {
    "text": "they could be optimized to run on different managed services they could be interacting with different sets of",
    "start": "198069",
    "end": "205590"
  },
  {
    "text": "dependencies and and still there are multiple teams who really have to bring",
    "start": "205590",
    "end": "211840"
  },
  {
    "text": "it all together and make it work well so over time you may have to invest or some",
    "start": "211840",
    "end": "217629"
  },
  {
    "text": "some companies do invest into having a separate infrastructure team which actually does this type of coordination",
    "start": "217629",
    "end": "223569"
  },
  {
    "text": "and offload some some of the tasks that could be common across all these",
    "start": "223569",
    "end": "230109"
  },
  {
    "text": "services so what you see here is a micro service which has several teams several",
    "start": "230109",
    "end": "236669"
  },
  {
    "text": "programming languages which are all interacting with each other so when you",
    "start": "236669",
    "end": "242259"
  },
  {
    "text": "think about how this evolved you would have very different pairs potentially of",
    "start": "242259",
    "end": "247419"
  },
  {
    "text": "when you start with VMs do you containerize it do you make it lambda functions do you make it manage services",
    "start": "247419",
    "end": "254290"
  },
  {
    "text": "and all these add to the complexity in the sense that there are different you",
    "start": "254290",
    "end": "259389"
  },
  {
    "text": "cannot really follow a single recipe anymore and you cannot make it one consistent guideline that everybody can",
    "start": "259389",
    "end": "265270"
  },
  {
    "text": "follow in the same manner anymore and that brings multiple needs for making sure",
    "start": "265270",
    "end": "272439"
  },
  {
    "start": "269000",
    "end": "316000"
  },
  {
    "text": "that every team does know and follow the best practices and the guidelines that",
    "start": "272439",
    "end": "277689"
  },
  {
    "text": "are recommended and this includes everything from getting visibility into every part of your application start",
    "start": "277689",
    "end": "284080"
  },
  {
    "text": "getting a consistent operational guy a guideline around how you deploy upgrade",
    "start": "284080",
    "end": "290740"
  },
  {
    "text": "monitor and even identify or fix errors it could be multiple teams who are doing",
    "start": "290740",
    "end": "297039"
  },
  {
    "text": "their own DevOps it could be centralized ops each company was to be a in a different organizational structure and",
    "start": "297039",
    "end": "304330"
  },
  {
    "text": "you still want to bring in all the CI CD mechanisms you want to automate it as much as possible and ensure that there",
    "start": "304330",
    "end": "310750"
  },
  {
    "text": "is highest security and compliance that is met by all of these individual teams so in in short what do you need to make",
    "start": "310750",
    "end": "319270"
  },
  {
    "start": "316000",
    "end": "356000"
  },
  {
    "text": "the microservices work well and work together is a consistent mechanism where",
    "start": "319270",
    "end": "325150"
  },
  {
    "text": "you can observe orient and decide and act what exactly and how exactly do you",
    "start": "325150",
    "end": "331990"
  },
  {
    "text": "handle them together so that includes communication management and that's",
    "start": "331990",
    "end": "337659"
  },
  {
    "text": "visibility and control across all these services it includes handling failure",
    "start": "337659",
    "end": "342909"
  },
  {
    "text": "situations isolation our failures and also controls to give you automatic",
    "start": "342909",
    "end": "348610"
  },
  {
    "text": "deployment capabilities to fix issue to fix the issues if something is wrong so",
    "start": "348610",
    "end": "356860"
  },
  {
    "text": "we saw about all the different things that micro services need how do they all come together and what are the options",
    "start": "356860",
    "end": "362199"
  },
  {
    "text": "and what do you do today the most common approach that has been used until today is libraries and SDKs",
    "start": "362199",
    "end": "368439"
  },
  {
    "text": "but there is a lot of heavy lifting involved in making sure that each team has that and follows that so at a very",
    "start": "368439",
    "end": "377199"
  },
  {
    "start": "376000",
    "end": "416000"
  },
  {
    "text": "high level summary as we case involve a lot of maintenance I mean there is installation you have take care of",
    "start": "377199",
    "end": "384029"
  },
  {
    "text": "migrations to keep track of the latest versions replication workflows upgrades",
    "start": "384029",
    "end": "389189"
  },
  {
    "text": "coordination between different teams that are required to maintain consistent versions if not there is actually a lot",
    "start": "389189",
    "end": "395649"
  },
  {
    "text": "of you know issues that could arise just because of these inconsistencies which affect the",
    "start": "395649",
    "end": "401750"
  },
  {
    "text": "velocity with which you can roll out any applications that affect the velocity of the overall pace at which each team can",
    "start": "401750",
    "end": "408740"
  },
  {
    "text": "run and deploy code to actually bring in new features and capabilities and over",
    "start": "408740",
    "end": "415550"
  },
  {
    "text": "time this gets really hard which is the reason why service mesh proxies have become the new architecture pattern so",
    "start": "415550",
    "end": "422390"
  },
  {
    "start": "416000",
    "end": "441000"
  },
  {
    "text": "this is not any net new capability it is bringing out the same features that is needed to unneeded for each service and",
    "start": "422390",
    "end": "431810"
  },
  {
    "text": "across each services and bringing that out as a site called proxy that runs along with your application instead of",
    "start": "431810",
    "end": "437990"
  },
  {
    "text": "being a part of your application itself so overall the proxy does provide",
    "start": "437990",
    "end": "444140"
  },
  {
    "start": "441000",
    "end": "473000"
  },
  {
    "text": "application the capabilities such as logging metrics tracing it runs along",
    "start": "444140",
    "end": "449840"
  },
  {
    "text": "with the application often in a containerized environment as a part of the same task or part as a sidecar and",
    "start": "449840",
    "end": "456100"
  },
  {
    "text": "the biggest benefit it brings is that it minimizes the application code required",
    "start": "456100",
    "end": "461780"
  },
  {
    "text": "in each service it simplifies it to be a template that you don't have to teach",
    "start": "461780",
    "end": "467600"
  },
  {
    "text": "every new team to learn and use in a similar manner and it actually brings in",
    "start": "467600",
    "end": "474940"
  },
  {
    "start": "473000",
    "end": "504000"
  },
  {
    "text": "the decoupling that is needed bit here with your business logic and your operational logic or the management",
    "start": "474940",
    "end": "481370"
  },
  {
    "text": "logic so that you can configure and handle them separately simplifying to a",
    "start": "481370",
    "end": "486440"
  },
  {
    "text": "large extent what your application code looks like and this minimization of inconsistencies",
    "start": "486440",
    "end": "492200"
  },
  {
    "text": "helps a lot in time in ensuring that each team can know faster and still do",
    "start": "492200",
    "end": "497600"
  },
  {
    "text": "the same right things that you have learned as that idea as the good practices that everything should be following so what we've spoken about",
    "start": "497600",
    "end": "506420"
  },
  {
    "start": "504000",
    "end": "543000"
  },
  {
    "text": "until now is why do you need a service mesh proxy at a very high level it helps",
    "start": "506420",
    "end": "512750"
  },
  {
    "text": "you migrate monoliths to micro services faster better and in a more efficient",
    "start": "512750",
    "end": "518000"
  },
  {
    "text": "manner and the and it provides you the operational controls that are required",
    "start": "518000",
    "end": "523280"
  },
  {
    "text": "to separate out the application logic and business logic with all the management and the infrastructure needs",
    "start": "523280",
    "end": "530620"
  },
  {
    "text": "so and and the benefit is that it can work the same way across teams across",
    "start": "530620",
    "end": "535730"
  },
  {
    "text": "languages and across different workflows that - each team has evolved to use so I",
    "start": "535730",
    "end": "544640"
  },
  {
    "text": "said we are going to speak more about at mesh today at mesh uses on my proxy and",
    "start": "544640",
    "end": "549770"
  },
  {
    "text": "why has evolved to be a very widely popular community project it has been",
    "start": "549770",
    "end": "555410"
  },
  {
    "text": "stable and proven in the community for a while and just yesterday it has been",
    "start": "555410",
    "end": "560420"
  },
  {
    "text": "promoted to a graduated project status in the CNC F so app mesh relies on using",
    "start": "560420",
    "end": "566260"
  },
  {
    "text": "a proxy to provide all the mesh proxy capabilities that we just spoke about so",
    "start": "566260",
    "end": "575150"
  },
  {
    "start": "573000",
    "end": "626000"
  },
  {
    "text": "you can a so we already have an open-source proxy what is the hard part in using it with each service and why do",
    "start": "575150",
    "end": "580310"
  },
  {
    "text": "we need anything else at all is what I want to talk about next and so the the",
    "start": "580310",
    "end": "586490"
  },
  {
    "text": "biggest way to handle the proxies today is to actually write your own logic to",
    "start": "586490",
    "end": "591710"
  },
  {
    "text": "make sure that every proxy has a has a consistent view and can reliably get the",
    "start": "591710",
    "end": "600290"
  },
  {
    "text": "latest configuration that it needs to handle the micro service communication so we don't without having to hard court",
    "start": "600290",
    "end": "606950"
  },
  {
    "text": "any hard code any part in each proxy itself the way you can provide it the",
    "start": "606950",
    "end": "612980"
  },
  {
    "text": "configuration in a reliable consistent manner requires a lot of work specially",
    "start": "612980",
    "end": "618529"
  },
  {
    "text": "when you have hundreds and thousands of proxies that is hundreds and thousands of containerized micro services that are",
    "start": "618529",
    "end": "624200"
  },
  {
    "text": "running and also potentially changing at the same time so there is there is a lot",
    "start": "624200",
    "end": "631430"
  },
  {
    "text": "of heavy lifting that's currently involved to make sure that they're all",
    "start": "631430",
    "end": "637400"
  },
  {
    "text": "the intent that comes in from each development team our operations team is translated into what a la a service mesh",
    "start": "637400",
    "end": "644450"
  },
  {
    "text": "proxy can understand and apply and and this intent has to be merged with the",
    "start": "644450",
    "end": "651070"
  },
  {
    "text": "intent that is required to actually align with your latest changes in the environment you may be doing new",
    "start": "651070",
    "end": "657440"
  },
  {
    "start": "652000",
    "end": "694000"
  },
  {
    "text": "deployments you may be upgrading your services you may be scaling your existing services or there could be",
    "start": "657440",
    "end": "662630"
  },
  {
    "text": "something that's happening in either the network health are the microservice health so you don't just need a system that",
    "start": "662630",
    "end": "668129"
  },
  {
    "text": "understands the static API so the intent of the teams you also needed to adapt to their dynamic changes that are happening",
    "start": "668129",
    "end": "674129"
  },
  {
    "text": "in your environment and that means that the proxy has to know keep track of all",
    "start": "674129",
    "end": "679709"
  },
  {
    "text": "these changes and apply it in a reliable manner so it has to compute store and distribute it in a reliable manner to",
    "start": "679709",
    "end": "686579"
  },
  {
    "text": "each and every micro service that wants to participate in the mesh and in the communication management so what do we",
    "start": "686579",
    "end": "695459"
  },
  {
    "text": "need here the at a very high level the control plane helps you sim just get",
    "start": "695459",
    "end": "702149"
  },
  {
    "text": "this logic or get a mechanism to reliably store and distribute the proxy configuration at scale and you need it",
    "start": "702149",
    "end": "710159"
  },
  {
    "text": "to not really be tied to the application or to the language you want it to ideally work across several compute",
    "start": "710159",
    "end": "715919"
  },
  {
    "text": "services that you used today and and also be tied to your existing systems be",
    "start": "715919",
    "end": "722219"
  },
  {
    "text": "eighth deployment mechanisms or visibility and monitoring tools and the easier we can make it for you to to use",
    "start": "722219",
    "end": "730379"
  },
  {
    "text": "it is is what is better so we are we are",
    "start": "730379",
    "end": "735749"
  },
  {
    "text": "looking for a way to make it simpler for you to not spend all the development",
    "start": "735749",
    "end": "740879"
  },
  {
    "text": "time effort and management it takes to build the mesh control name so when we",
    "start": "740879",
    "end": "747509"
  },
  {
    "start": "746000",
    "end": "808000"
  },
  {
    "text": "spoke to customers about what what exactly would they need to really have",
    "start": "747509",
    "end": "752879"
  },
  {
    "text": "this whole micro service migration go faster and better we heard a couple of additional requirements specially among",
    "start": "752879",
    "end": "759659"
  },
  {
    "text": "our customers who are running services across clusters across compute services",
    "start": "759659",
    "end": "764779"
  },
  {
    "text": "we wanted to build a system that meets the customers needs in terms of scale",
    "start": "764779",
    "end": "770359"
  },
  {
    "text": "reliability and also providing the same SLS that you expect from an Amazon",
    "start": "770359",
    "end": "775619"
  },
  {
    "text": "service with the partner integrations and with the Amazon tool integrations",
    "start": "775619",
    "end": "781289"
  },
  {
    "text": "that you require to do it in a similar manner of manner as much as possible we",
    "start": "781289",
    "end": "787259"
  },
  {
    "text": "did we did hear a lot of requests also about multiple container services and we wanted to build something that meets all",
    "start": "787259",
    "end": "793139"
  },
  {
    "text": "your needs in terms of not relying on the open source and the community innovations but also giving",
    "start": "793139",
    "end": "801220"
  },
  {
    "text": "you the Amazon style of using it without having to put in a lot of effort yourself and these are the motivations",
    "start": "801220",
    "end": "808959"
  },
  {
    "start": "808000",
    "end": "836000"
  },
  {
    "text": "that have led us to build our own at mesh which essentially integrates with",
    "start": "808959",
    "end": "815309"
  },
  {
    "text": "the existing deployment mechanisms which we want to integrate with the existing",
    "start": "815309",
    "end": "820989"
  },
  {
    "text": "deployment mechanisms we have integrate with the Container deploy orchestration services we have and also give you",
    "start": "820989",
    "end": "828579"
  },
  {
    "text": "integrations with the open source tools and the partner tools and the community and be as community friendly as possible",
    "start": "828579",
    "end": "836279"
  },
  {
    "start": "836000",
    "end": "872000"
  },
  {
    "text": "so what does the Atmos do at mesh essentially configures each proxy that",
    "start": "836369",
    "end": "842079"
  },
  {
    "text": "is running along with your micro services and it and once it distributes",
    "start": "842079",
    "end": "848169"
  },
  {
    "text": "the configuration the actual traffic path between services happens just between the proxies that are involved",
    "start": "848169",
    "end": "853749"
  },
  {
    "text": "with the services there is no in-app machine them makes in the sense that",
    "start": "853749",
    "end": "859139"
  },
  {
    "text": "your application container speak to the proxy on the egress side and then they",
    "start": "859139",
    "end": "864729"
  },
  {
    "text": "speak to the proxy on the destination service and that speaks to the application containers so as app mash is",
    "start": "864729",
    "end": "874629"
  },
  {
    "start": "872000",
    "end": "916000"
  },
  {
    "text": "available as preview starting today starting yesterday you have the ability",
    "start": "874629",
    "end": "879759"
  },
  {
    "text": "to plug in all the observability tools of your choice to bring in all the traffic control capabilities that you",
    "start": "879759",
    "end": "885189"
  },
  {
    "text": "would want to provide to your applications we are working on a couple of features we have their traffic",
    "start": "885189",
    "end": "890769"
  },
  {
    "text": "routing controls available for you to start using right now we are working on the traffic shaping features the",
    "start": "890769",
    "end": "897039"
  },
  {
    "text": "client-side retry circuit breaks etcetera and we are working on a lot of the integrations that will make it",
    "start": "897039",
    "end": "904779"
  },
  {
    "text": "easier for you to deploy run and manage applications on AWS",
    "start": "904779",
    "end": "910859"
  },
  {
    "text": "so it's starting it's available in four regions starting yesterday",
    "start": "910859",
    "end": "917009"
  },
  {
    "text": "we have a demo coming up later about integrations with X ray and Prometheus",
    "start": "917039",
    "end": "922899"
  },
  {
    "text": "where we have a cloud watch integration we are working with data doc to have that available as well and between this",
    "start": "922899",
    "end": "928959"
  },
  {
    "text": "preview and she will actually work on a lot more",
    "start": "928959",
    "end": "934260"
  },
  {
    "text": "smoothening the process and heavy lifting to make it all seamless and",
    "start": "934260",
    "end": "941170"
  },
  {
    "text": "smooth so what capabilities can you use",
    "start": "941170",
    "end": "946240"
  },
  {
    "text": "and what capabilities does it really help you with right now in terms of",
    "start": "946240",
    "end": "952210"
  },
  {
    "text": "observability along with getting all the locks metrics and stats into your",
    "start": "952210",
    "end": "957220"
  },
  {
    "text": "existing pane to your preferred tools you can also understand you can identify issues that may arise when before things",
    "start": "957220",
    "end": "965710"
  },
  {
    "text": "go completely wrong so it gives you better control and visibility over error codes it helps you isolate whether",
    "start": "965710",
    "end": "971530"
  },
  {
    "text": "errors are in the service itself or whether it's in the network between the services and helps you catch it when the",
    "start": "971530",
    "end": "976900"
  },
  {
    "text": "system goes into a degraded state rather than after it goes into a failure mode and it gives you the additional controls",
    "start": "976900",
    "end": "984700"
  },
  {
    "start": "983000",
    "end": "1006000"
  },
  {
    "text": "to not just handle it once but also bring in newer deployment newer versions",
    "start": "984700",
    "end": "990100"
  },
  {
    "text": "of your services and granular controls that are required to roll out new deployments in the sense that you could",
    "start": "990100",
    "end": "996030"
  },
  {
    "text": "you could you could do path based routing you could start doing canary",
    "start": "996030",
    "end": "1002390"
  },
  {
    "text": "rollouts and deployments in the sense that you can start testing out traffic and rolling it out to newer versions as",
    "start": "1002390",
    "end": "1009800"
  },
  {
    "start": "1006000",
    "end": "1045000"
  },
  {
    "text": "in a grace gradual phased manner rather than all at once so although you can do that level",
    "start": "1009800",
    "end": "1017880"
  },
  {
    "text": "of control with the number of parts and the number of tasks that you reply today mesh at mesh helps you do that in a much",
    "start": "1017880",
    "end": "1026880"
  },
  {
    "text": "more granular manner based on HTTP headers or cookies or and a lot more",
    "start": "1026880",
    "end": "1033530"
  },
  {
    "text": "finer controls into what specific traffic do you want her out into your",
    "start": "1033530",
    "end": "1038610"
  },
  {
    "text": "newer deployments before you actually are ready for it to go prime go live and grow from time what do we have in",
    "start": "1038610",
    "end": "1047550"
  },
  {
    "start": "1045000",
    "end": "1082000"
  },
  {
    "text": "preview we have the API is available we have some examples available for you and github and we do have a couple of",
    "start": "1047550",
    "end": "1054690"
  },
  {
    "text": "integrations special special based on stats T we have HTTP pass path routing ready we are working on a couple of",
    "start": "1054690",
    "end": "1061860"
  },
  {
    "text": "console integration we don't yet have a console we are going to provide a good",
    "start": "1061860",
    "end": "1067230"
  },
  {
    "text": "API good console experience for configuring and managing the mesh and we are working on integrations with",
    "start": "1067230",
    "end": "1072750"
  },
  {
    "text": "container services and we also will be bringing in multiple capabilities first",
    "start": "1072750",
    "end": "1080220"
  },
  {
    "text": "year going a little more into the",
    "start": "1080220",
    "end": "1085410"
  },
  {
    "start": "1082000",
    "end": "1117000"
  },
  {
    "text": "integrations today you can use mesh with dns based service discovery and we are working",
    "start": "1085410",
    "end": "1091530"
  },
  {
    "text": "with AWS cloud map which is other new service that we launched yesterday which can give you service discovery across",
    "start": "1091530",
    "end": "1097500"
  },
  {
    "text": "Amazon services this will help bridge services that you have deployed across",
    "start": "1097500",
    "end": "1104160"
  },
  {
    "text": "different container services and essentially extend your mesh to be",
    "start": "1104160",
    "end": "1109340"
  },
  {
    "text": "available not just with ECS Ori cares but also across ec2 in the future so how does this all",
    "start": "1109340",
    "end": "1119610"
  },
  {
    "start": "1117000",
    "end": "1137000"
  },
  {
    "text": "work I want to now switch gears to focus a little more about how do you represent your application in the earth match and",
    "start": "1119610",
    "end": "1126480"
  },
  {
    "text": "how do you really bring bring bring in the different routing controls",
    "start": "1126480",
    "end": "1132270"
  },
  {
    "text": "represented in the API so that you can do all the cool capabilities I just spoke about starting with let's say you",
    "start": "1132270",
    "end": "1140820"
  },
  {
    "start": "1137000",
    "end": "1176000"
  },
  {
    "text": "have a simple application where you have one service a interacting with a service",
    "start": "1140820",
    "end": "1146280"
  },
  {
    "text": "B so the first step is to actually create a mesh in the sense that it's",
    "start": "1146280",
    "end": "1152250"
  },
  {
    "text": "more of a logical boundary that holds the representation of each of your",
    "start": "1152250",
    "end": "1157380"
  },
  {
    "text": "version service so there is virtual nodes that represent specific version services and each each deployment or",
    "start": "1157380",
    "end": "1165570"
  },
  {
    "text": "each service version is represented as a virtual node in that machete ice so the",
    "start": "1165570",
    "end": "1173250"
  },
  {
    "text": "what you'll notice themselves have multiple fields listeners these are the",
    "start": "1173250",
    "end": "1178530"
  },
  {
    "start": "1176000",
    "end": "1238000"
  },
  {
    "text": "poles that you expose from each service these are the reports that you are having your services listen on it could",
    "start": "1178530",
    "end": "1185700"
  },
  {
    "text": "and then their service discovery this helps you of provide input on how you want a specific service to be discovered",
    "start": "1185700",
    "end": "1192090"
  },
  {
    "text": "essentially it how do you represent how do you identify the set of endpoints that you want",
    "start": "1192090",
    "end": "1198150"
  },
  {
    "text": "communicating with the other services that come and connect with this service today it's the DNS name and then we have",
    "start": "1198150",
    "end": "1205950"
  },
  {
    "text": "AWS cloud map integrations you can have name along with metadata where metadata",
    "start": "1205950",
    "end": "1211559"
  },
  {
    "text": "represent specific subsets of your services the third field is backends backends",
    "start": "1211559",
    "end": "1217289"
  },
  {
    "text": "represent the dependencies are the other services that this particular service",
    "start": "1217289",
    "end": "1223230"
  },
  {
    "text": "relies on so if your service a speaking to be backends would be B whereas",
    "start": "1223230",
    "end": "1228480"
  },
  {
    "text": "listener and service discovery is what a is exposing to the clients of a and all",
    "start": "1228480",
    "end": "1234630"
  },
  {
    "text": "this together represent the service a which you would need to have one for",
    "start": "1234630",
    "end": "1240570"
  },
  {
    "start": "1238000",
    "end": "1266000"
  },
  {
    "text": "each of your version service so once you have services a and be represented as",
    "start": "1240570",
    "end": "1246630"
  },
  {
    "text": "virtual nodes you would learn how do you connect them together for that we need a virtual router what your router is",
    "start": "1246630",
    "end": "1254779"
  },
  {
    "text": "essentially a construct that helps you expose the back-end service to all its",
    "start": "1254779",
    "end": "1260039"
  },
  {
    "text": "clients so the thing about the W box is here that you see what's your routers",
    "start": "1260039",
    "end": "1266000"
  },
  {
    "start": "1266000",
    "end": "1283000"
  },
  {
    "text": "essentially map to a set of service names where you are saying for for each",
    "start": "1266000",
    "end": "1271890"
  },
  {
    "text": "B service B that you want to expose to a set of clients the the DNS names that",
    "start": "1271890",
    "end": "1277679"
  },
  {
    "text": "you use on the service endpoints that we use for the service B is what you represent in a router and and then you",
    "start": "1277679",
    "end": "1284309"
  },
  {
    "start": "1283000",
    "end": "1336000"
  },
  {
    "text": "get to have a lot of routes which which represent exactly how this traffic has to be handled by each of the plan that",
    "start": "1284309",
    "end": "1290460"
  },
  {
    "text": "is connecting with the service so for each service you service what your router you can have multiple routes one",
    "start": "1290460",
    "end": "1298049"
  },
  {
    "text": "of the sample routes that you see here just has a very basic prefix match which says all traffic goes to note B so this",
    "start": "1298049",
    "end": "1305730"
  },
  {
    "text": "is actually creating the link between a and B in the sense telling at mesh to",
    "start": "1305730",
    "end": "1312000"
  },
  {
    "text": "come to create configuration for service B that will be distributed to the",
    "start": "1312000",
    "end": "1318179"
  },
  {
    "text": "proxies that are deployed with service a so note that there is that computation",
    "start": "1318179",
    "end": "1324840"
  },
  {
    "text": "of which clients need to be with the config that is map to a particular server service is done by the",
    "start": "1324840",
    "end": "1331320"
  },
  {
    "text": "proxies Ray's done by app mesh you can have one or more routes and once you",
    "start": "1331320",
    "end": "1338610"
  },
  {
    "start": "1336000",
    "end": "1379000"
  },
  {
    "text": "have if you want to represent a set of new service versions then you actually",
    "start": "1338610",
    "end": "1345900"
  },
  {
    "text": "create a new virtual node B and then you can update the exam router with having",
    "start": "1345900",
    "end": "1351360"
  },
  {
    "text": "routes that represent the new version as well so you have here you see an example",
    "start": "1351360",
    "end": "1356850"
  },
  {
    "text": "of how do you update the existing virtual router config from not just",
    "start": "1356850",
    "end": "1362940"
  },
  {
    "text": "sending all traffic to the version B but also send some part of it to version B",
    "start": "1362940",
    "end": "1369480"
  },
  {
    "text": "Prime again we support weighted routes so that will help you gradually roll out traffic",
    "start": "1369480",
    "end": "1375480"
  },
  {
    "text": "to the version P Prime so how does this all come together",
    "start": "1375480",
    "end": "1380940"
  },
  {
    "start": "1379000",
    "end": "1548000"
  },
  {
    "text": "if a speaking with B and B prime we have these virtual nodes you have virtual routers and then there is the mapping",
    "start": "1380940",
    "end": "1387960"
  },
  {
    "text": "between the backends that you specify and a way which speaks about all the",
    "start": "1387960",
    "end": "1393240"
  },
  {
    "text": "dependencies that the service a has to the service names that you have in the virtual router to identify which what",
    "start": "1393240",
    "end": "1402630"
  },
  {
    "text": "specific config you need in which service so note that this could also",
    "start": "1402630",
    "end": "1408270"
  },
  {
    "text": "include not just routing but also traffic shaping policies so the way it works is that once you have the routing",
    "start": "1408270",
    "end": "1415050"
  },
  {
    "text": "decision made at the client-side proxies the traffic policies that apply to that communication is applied after the",
    "start": "1415050",
    "end": "1422220"
  },
  {
    "text": "routing decisions so that if B has a different number of retries that it",
    "start": "1422220",
    "end": "1428010"
  },
  {
    "text": "expects its clients to make compared to B Prime then only the traffic going to be will have that specific config and",
    "start": "1428010",
    "end": "1435720"
  },
  {
    "text": "the traffic that is going to be Prime will be updated with the right traffic policies you specify for B Prime",
    "start": "1435720",
    "end": "1442500"
  },
  {
    "text": "so overall what is this helping you do it's helping you have a delineation",
    "start": "1442500",
    "end": "1448440"
  },
  {
    "text": "between the client services and the server services without actually having",
    "start": "1448440",
    "end": "1454410"
  },
  {
    "text": "the intricacies of the versions and the rollouts exposed to each other so it so",
    "start": "1454410",
    "end": "1460070"
  },
  {
    "text": "I'm the owner of service B I could be replying five versions per day but all the clients that are connecting to me",
    "start": "1460070",
    "end": "1466820"
  },
  {
    "text": "are still using the same DNS names and they're still using the same endpoints",
    "start": "1466820",
    "end": "1472220"
  },
  {
    "text": "to connect to and I get to control what specific traffic policies need to be applied to all that communication so",
    "start": "1472220",
    "end": "1479500"
  },
  {
    "text": "essentially you're some your template icing the service owners intent in terms",
    "start": "1479500",
    "end": "1486440"
  },
  {
    "text": "of how other PR clients need to communicate to the service on our service and then making it reliably",
    "start": "1486440",
    "end": "1493550"
  },
  {
    "text": "distributed and and app mesh is reliably distributing it to each proxy that is",
    "start": "1493550",
    "end": "1498650"
  },
  {
    "text": "deployed with the client services so that my intent of how my service is",
    "start": "1498650",
    "end": "1505790"
  },
  {
    "text": "exposed to all the clients are represented at the proxies that every client has and and this helps in keeping",
    "start": "1505790",
    "end": "1514190"
  },
  {
    "text": "the clean delineation and the separation in terms of who the ownership boundaries",
    "start": "1514190",
    "end": "1520820"
  },
  {
    "text": "as well as giving you consistent controls for multiple services that are",
    "start": "1520820",
    "end": "1526340"
  },
  {
    "text": "participating in the same system so with because all these services are having",
    "start": "1526340",
    "end": "1531650"
  },
  {
    "text": "the same Envoy proxy or similar versions of proxy you get the same observability matrix get the same traces and you still",
    "start": "1531650",
    "end": "1540050"
  },
  {
    "text": "have granular controls to shape the traffic in a manner that is appropriate for that service what happens if the",
    "start": "1540050",
    "end": "1549950"
  },
  {
    "start": "1548000",
    "end": "1598000"
  },
  {
    "text": "service B has multiple dependencies you map them as backends of the service B so what you see here is in that service B",
    "start": "1549950",
    "end": "1556850"
  },
  {
    "text": "as a part of the virtual node you will be mapping that to the virtual nodes that represent C and E to the server",
    "start": "1556850",
    "end": "1565580"
  },
  {
    "text": "virtual nodes that present C and E and how do you export all the observability",
    "start": "1565580",
    "end": "1571850"
  },
  {
    "text": "data into the endpoints and the tools of your choice you there is a way to plug",
    "start": "1571850",
    "end": "1580040"
  },
  {
    "text": "in the on my bootstrap again through the API which helps you connect pull all the",
    "start": "1580040",
    "end": "1585920"
  },
  {
    "text": "metrics and locks and stats that are collected at the unwind and publish it to the right endpoints",
    "start": "1585920",
    "end": "1593440"
  },
  {
    "text": "so with this we'll switch you over to our demo Dhoni until I touch the",
    "start": "1593530",
    "end": "1604280"
  },
  {
    "start": "1598000",
    "end": "1654000"
  },
  {
    "text": "keyboard right all right all right thank you so yeah that was that was exciting what I'm gonna show",
    "start": "1604280",
    "end": "1610580"
  },
  {
    "text": "briefly and even less time now than before is that there I'm gonna give a little demo to show working with the",
    "start": "1610580",
    "end": "1617059"
  },
  {
    "text": "mesh and show what that looks like there is a project that we will be open sourcing here shortly",
    "start": "1617059",
    "end": "1623840"
  },
  {
    "text": "look for this next few days next week it's based on the canonical docker voting app we made a few modifications",
    "start": "1623840",
    "end": "1630650"
  },
  {
    "text": "to it and said that we could show off service mesh at mesh and all we're gonna",
    "start": "1630650",
    "end": "1637460"
  },
  {
    "text": "show off right now today is I'm going to take the client we're gonna cast some votes and then we're gonna get some",
    "start": "1637460",
    "end": "1643070"
  },
  {
    "text": "results back we'll see results coming back to two different versions of our reports API so in terms of the mechanics",
    "start": "1643070",
    "end": "1651350"
  },
  {
    "text": "of making all of this work first of all we've got a typical cloud formation",
    "start": "1651350",
    "end": "1658220"
  },
  {
    "start": "1654000",
    "end": "1702000"
  },
  {
    "text": "stack it's got all of our services in it right now and the that really the only thing I want to call out in here it's",
    "start": "1658220",
    "end": "1663800"
  },
  {
    "text": "pretty standard stuff but when you take a look at our tasks for each given task",
    "start": "1663800",
    "end": "1671470"
  },
  {
    "text": "so it's like my audience a little weird",
    "start": "1671470",
    "end": "1676850"
  },
  {
    "text": "for each one of the nodes in our mesh so each of these services can be running they're all going to be instrumented and",
    "start": "1676850",
    "end": "1685090"
  },
  {
    "text": "each task definition in addition to the service itself you'll see here we're including envoy so envoy is going to run",
    "start": "1685090",
    "end": "1692840"
  },
  {
    "text": "as a sidecar with your task or if it's this ruku Bernays with your pod after we",
    "start": "1692840",
    "end": "1700220"
  },
  {
    "text": "deploy that you got a running application I should have logs and all that kind of",
    "start": "1700220",
    "end": "1707059"
  },
  {
    "start": "1702000",
    "end": "1712000"
  },
  {
    "text": "stuff and then the next part of this is",
    "start": "1707059",
    "end": "1713020"
  },
  {
    "start": "1712000",
    "end": "1736000"
  },
  {
    "text": "actually configuring AWS at mesh to work with this application so again this application is a micro service",
    "start": "1713020",
    "end": "1720490"
  },
  {
    "text": "applications got a number of services is a pretty simple topology here we deployed it with cloud formation and",
    "start": "1720490",
    "end": "1725919"
  },
  {
    "text": "then we had to configure it to participate in the mesh and what that",
    "start": "1725919",
    "end": "1730929"
  },
  {
    "text": "looks like for example for each one of the nodes again going back to this",
    "start": "1730929",
    "end": "1736809"
  },
  {
    "text": "picture right here so for vote and for the votes API the reports API in the backend we've got these definitions we",
    "start": "1736809",
    "end": "1744250"
  },
  {
    "text": "defined the virtual nodes I'll just pick a web for right now the front-end we",
    "start": "1744250",
    "end": "1750910"
  },
  {
    "text": "define those listeners that she was talking about and we've defined that we're gonna communicate from that node",
    "start": "1750910",
    "end": "1756640"
  },
  {
    "text": "to two different backends so to the votes and reports API and for each one",
    "start": "1756640",
    "end": "1761799"
  },
  {
    "text": "of those they're gonna let see votes will talk to a back-end it'll talk to the database and seeing with reports",
    "start": "1761799",
    "end": "1767740"
  },
  {
    "text": "it's very simple the configurations here are minimal and simplistic and the only",
    "start": "1767740",
    "end": "1773049"
  },
  {
    "text": "thing that we're going to do that's gonna be really interesting for this demo is we are going to do a little bit of simulated AV testing here where we're",
    "start": "1773049",
    "end": "1784540"
  },
  {
    "text": "going to ship traffic fifty percent between our reports service v1 and",
    "start": "1784540",
    "end": "1791049"
  },
  {
    "text": "report service v2 nothing super exciting dramatic as far as the changes between",
    "start": "1791049",
    "end": "1797799"
  },
  {
    "text": "those two services and also that a minute but that's it so each one of these routes are gonna be associated with a virtual router and those",
    "start": "1797799",
    "end": "1804520"
  },
  {
    "text": "definitions all live live in here very simple as far as defining that my point",
    "start": "1804520",
    "end": "1810070"
  },
  {
    "text": "here is that the configuration is simple to participate in the mesh there's not that much you have to define here other",
    "start": "1810070",
    "end": "1817690"
  },
  {
    "text": "than to make it very clear what these relationships are going to be between the nodes I do want to draw attention to",
    "start": "1817690",
    "end": "1822970"
  },
  {
    "text": "the fact that when we are defining here service names they're the logical",
    "start": "1822970",
    "end": "1827980"
  },
  {
    "text": "service names that your services will use to communicate with each other back-end",
    "start": "1827980",
    "end": "1834659"
  },
  {
    "text": "now I've already deployed the app and I've already actually applied these",
    "start": "1837550",
    "end": "1842710"
  },
  {
    "start": "1838000",
    "end": "1936000"
  },
  {
    "text": "configurations so I'm good to go I can vote I know what is it cats or dogs I'm",
    "start": "1842710",
    "end": "1855050"
  },
  {
    "text": "gonna go with cats and I guarantee that cats will give me winning so results",
    "start": "1855050",
    "end": "1861100"
  },
  {
    "text": "cheated I've already I got a number of votes here alright so what we can see here is that",
    "start": "1861610",
    "end": "1866840"
  },
  {
    "text": "b2 recent replied I'm going to run this a few times and approximately 50% of the",
    "start": "1866840",
    "end": "1874550"
  },
  {
    "text": "times the original v1 response comes back alright",
    "start": "1874550",
    "end": "1880250"
  },
  {
    "text": "so that's working all right so the next",
    "start": "1880250",
    "end": "1889700"
  },
  {
    "text": "thing that I want to point out here is that we have full visibility into what's",
    "start": "1889700",
    "end": "1895670"
  },
  {
    "text": "going on inside of a mesh oh is this not",
    "start": "1895670",
    "end": "1901960"
  },
  {
    "text": "right let me unplug and replug sorry Wow",
    "start": "1901960",
    "end": "1907400"
  },
  {
    "text": "well okay cats won but the point was there was a distribution here about 50%",
    "start": "1907400",
    "end": "1915800"
  },
  {
    "text": "of these responses are we do this again",
    "start": "1915800",
    "end": "1922870"
  },
  {
    "text": "yes show the v1 simple response and the v2 more complicated response and in",
    "start": "1929320",
    "end": "1935230"
  },
  {
    "text": "moving on quickly now what I want to point out is I'm in the x-ray console and we've got visibility into our",
    "start": "1935230",
    "end": "1944530"
  },
  {
    "start": "1936000",
    "end": "2054000"
  },
  {
    "text": "application topology and the routes that",
    "start": "1944530",
    "end": "1949840"
  },
  {
    "text": "were traversed so what's happening is that for every every segment here in our",
    "start": "1949840",
    "end": "1955180"
  },
  {
    "text": "in our mesh all the communication routes aggresses go through the app and go back",
    "start": "1955180",
    "end": "1960730"
  },
  {
    "text": "one of the app nodes and egress through an envoy proxy and and for any of these",
    "start": "1960730",
    "end": "1967120"
  },
  {
    "text": "we can take a look and we can investigate what's going on if we have any broken links in our in our mesh you",
    "start": "1967120",
    "end": "1973570"
  },
  {
    "text": "know if it's up one of our services and working responding we can take a look at Layton sees and and all that good stuff one cool thing to show is that Envoy",
    "start": "1973570",
    "end": "1981610"
  },
  {
    "text": "itself imposes minimal minimal overhead",
    "start": "1981610",
    "end": "1986860"
  },
  {
    "text": "as far as what's going on with the communication between these routes the",
    "start": "1986860",
    "end": "1991930"
  },
  {
    "text": "other thing I want to mention is that we even have an integration with Prometheus and Griffon another very popular",
    "start": "1991930",
    "end": "1998110"
  },
  {
    "text": "open-source package for for metrics and we can take a look at what's going",
    "start": "1998110",
    "end": "2003360"
  },
  {
    "text": "inside of the mesh here take a look at the number of successful Connexions",
    "start": "2003360",
    "end": "2009270"
  },
  {
    "text": "calls request responses that kind of stuff and I guess what I want to also",
    "start": "2009270",
    "end": "2016950"
  },
  {
    "text": "mention is that we got integrations as well with cloud watch and you can expect all your other types of integrations to",
    "start": "2016950",
    "end": "2022620"
  },
  {
    "text": "work because this is this is part of the this is part of the platform so some of",
    "start": "2022620",
    "end": "2028740"
  },
  {
    "text": "the stuff that involves open source integration that stuff's been done these examples will get published there'll be",
    "start": "2028740",
    "end": "2034650"
  },
  {
    "text": "a deep dive into the work that goes as far as what you can do how do you how",
    "start": "2034650",
    "end": "2039780"
  },
  {
    "text": "you change your configurations how you and how you integrate that into the rest",
    "start": "2039780",
    "end": "2045870"
  },
  {
    "text": "of your your dashboards so to you to recap pretty simple pretty",
    "start": "2045870",
    "end": "2054419"
  },
  {
    "start": "2054000",
    "end": "2078000"
  },
  {
    "text": "straightforward simple configurations that need to get applied to make these participate in the mesh and then you get",
    "start": "2054419",
    "end": "2060540"
  },
  {
    "text": "all the benefits of being in the mesh all the benefits that had outlined earlier so that's it for",
    "start": "2060540",
    "end": "2065809"
  },
  {
    "text": "the demo thank you [Applause]",
    "start": "2065809",
    "end": "2074919"
  },
  {
    "start": "2078000",
    "end": "2107000"
  },
  {
    "text": "yep so we have a lot of content out there",
    "start": "2080720",
    "end": "2086419"
  },
  {
    "text": "already we you can see some examples in our github repository",
    "start": "2086419",
    "end": "2091549"
  },
  {
    "text": "this is preview we have just started do let us know what you think and do let us know about the additional use cases you",
    "start": "2091549",
    "end": "2098390"
  },
  {
    "text": "would like us to think about as well as if you see any issues or if you want to have a discussion with the team and with",
    "start": "2098390",
    "end": "2105200"
  },
  {
    "text": "that I just want to say thank you for being here we have the team here as well",
    "start": "2105200",
    "end": "2110780"
  },
  {
    "start": "2107000",
    "end": "2163000"
  },
  {
    "text": "so we can take some questions there's a",
    "start": "2110780",
    "end": "2120740"
  },
  {
    "text": "mic on the side",
    "start": "2120740",
    "end": "2124089"
  },
  {
    "text": "mic would be better so that others can hear",
    "start": "2151930",
    "end": "2156730"
  },
  {
    "text": "Peter I have a question could you go over again how if you're not inside the",
    "start": "2160530",
    "end": "2166660"
  },
  {
    "text": "master Network how you connect with something inside of it Karen James Tony to just answer",
    "start": "2166660",
    "end": "2176020"
  },
  {
    "text": "questions if neither okay sorry go ahead",
    "start": "2176020",
    "end": "2183390"
  },
  {
    "start": "2183000",
    "end": "2229000"
  },
  {
    "text": "prefer migration as we're migrating onto at mesh how do you connect to stuff that",
    "start": "2184240",
    "end": "2189550"
  },
  {
    "text": "has not yet been integrated into it yet like say we have stuff on Prem the data center is it possible to then how would",
    "start": "2189550",
    "end": "2196180"
  },
  {
    "text": "I then communicate with something inside of this mesh so when we integrate with",
    "start": "2196180",
    "end": "2202240"
  },
  {
    "text": "AWS cloud map that will give you a way to represent your services across",
    "start": "2202240",
    "end": "2208000"
  },
  {
    "text": "multiple aw services so essentially you'll get a service and name and an",
    "start": "2208000",
    "end": "2213160"
  },
  {
    "text": "endpoint that can map to any AWS service that's how much we have planned for GA",
    "start": "2213160",
    "end": "2219070"
  },
  {
    "text": "if you have other on Prime use cases we would like to discuss that and plan for it at after that thank you I very quick",
    "start": "2219070",
    "end": "2230790"
  },
  {
    "start": "2229000",
    "end": "2299000"
  },
  {
    "text": "sto because Sims is a lot of air lapping with this I was curious to know if this",
    "start": "2230790",
    "end": "2237730"
  },
  {
    "text": "is your take on sto or you plan to divergence do something completely different so when we looked at what our",
    "start": "2237730",
    "end": "2246640"
  },
  {
    "text": "customers required the the most common theme was to actually have it based on on why open source proxy so that's what",
    "start": "2246640",
    "end": "2254170"
  },
  {
    "text": "both sto and earth mesh are using as the data plane component which is where most",
    "start": "2254170",
    "end": "2260560"
  },
  {
    "text": "of these capabilities come from and where most of this magic happens so we'll be contributing back to envoy",
    "start": "2260560",
    "end": "2265930"
  },
  {
    "text": "proxy pretty significantly in the coming weeks and months and sto will benefit from that as well",
    "start": "2265930",
    "end": "2271630"
  },
  {
    "text": "you can already run on uses T over T KS and with any kubernetes on AWS so these",
    "start": "2271630",
    "end": "2276850"
  },
  {
    "text": "are just different approaches to reaching the same end goals and this is",
    "start": "2276850",
    "end": "2281860"
  },
  {
    "text": "the Amazon built and run managed service model which would work for many of their",
    "start": "2281860",
    "end": "2288910"
  },
  {
    "text": "customer use cases we've heard until now so these have sizes and feel free to use",
    "start": "2288910",
    "end": "2295870"
  },
  {
    "text": "what works best way thank you hi two quick questions first one being",
    "start": "2295870",
    "end": "2301570"
  },
  {
    "start": "2299000",
    "end": "2352000"
  },
  {
    "text": "what layer but OSI layer does the proxy operate on and the second one being can we see egress to things like therefore",
    "start": "2301570",
    "end": "2311280"
  },
  {
    "text": "the proxy is layer Cement proxy so it understands the layers of intruder calls",
    "start": "2311280",
    "end": "2316530"
  },
  {
    "text": "starting with HDPE you can directly route on the HTTP headers and cookies we're planning to add all the G RPC and",
    "start": "2316530",
    "end": "2323080"
  },
  {
    "text": "other routing protocol support to add to that on were actually is a layer 3 for",
    "start": "2323080",
    "end": "2329590"
  },
  {
    "text": "proxy and the way it operates is having additional filters and hatch to DP is",
    "start": "2329590",
    "end": "2335470"
  },
  {
    "text": "one of those filters so whenever a new connection comes there are filters which start to process the bytes so you can",
    "start": "2335470",
    "end": "2342970"
  },
  {
    "text": "use it for anything which is TCP UDP is not supported yet ok fantastic thank you",
    "start": "2342970",
    "end": "2351180"
  },
  {
    "text": "which protocol will be enabled by default so I saw the demo only uses HTTP and but issue supports like a lot of",
    "start": "2351480",
    "end": "2358600"
  },
  {
    "start": "2352000",
    "end": "2827000"
  },
  {
    "text": "them HTTP to WebSockets today it",
    "start": "2358600",
    "end": "2363670"
  },
  {
    "text": "supports only HTTP 1 & 2 we will be soon adding GR PCE and other WebSockets all",
    "start": "2363670",
    "end": "2370120"
  },
  {
    "text": "the cable is which on web provides is just getting it out and so our goal",
    "start": "2370120",
    "end": "2375430"
  },
  {
    "text": "right now is to make sure that the distribution of configuration and the latency set scale are appropriate but",
    "start": "2375430",
    "end": "2381880"
  },
  {
    "text": "adding features as we just go and keep on adding them so right and also on most",
    "start": "2381880",
    "end": "2388030"
  },
  {
    "text": "supports like injecting your customers TP headers and base routing and these",
    "start": "2388030",
    "end": "2393310"
  },
  {
    "text": "headers will be also available eventually so custom headers when you inject though you're mostly adding some",
    "start": "2393310",
    "end": "2400030"
  },
  {
    "text": "filters is that so custom filters are not yet supported ok we will soon enable",
    "start": "2400030",
    "end": "2405970"
  },
  {
    "text": "configuration which will allow for configuring existing Envoy filters if you bring your own custom filters we",
    "start": "2405970",
    "end": "2411970"
  },
  {
    "text": "have an open issue in the examples I will open a proposal and we should",
    "start": "2411970",
    "end": "2417430"
  },
  {
    "text": "discuss on that thank you will I be able to use this for service",
    "start": "2417430",
    "end": "2423630"
  },
  {
    "text": "to service authorization at all that's sorry can you repeat it again can I use the service during the a finish for",
    "start": "2423630",
    "end": "2429660"
  },
  {
    "text": "service to service authorization yes so app mesh by itself doesn't provide",
    "start": "2429660",
    "end": "2435150"
  },
  {
    "text": "service discovery so it relies on say for example DNS or cloud map for service",
    "start": "2435150",
    "end": "2441060"
  },
  {
    "text": "discovery so if you bring say for example zookeeper or something else built on some @cd as a service discovery",
    "start": "2441060",
    "end": "2447810"
  },
  {
    "text": "so the two options are you have to build the EDS which is the Envoy service",
    "start": "2447810",
    "end": "2454650"
  },
  {
    "text": "discovery protocol shim so a shame on top of that we will be writing a shim",
    "start": "2454650",
    "end": "2460110"
  },
  {
    "text": "for cloud map which is HTTP API so we will be writing AG RPC endpoint for that",
    "start": "2460110",
    "end": "2466190"
  },
  {
    "text": "so but we'll provide a way to plug in your own custom EDS endpoint if that is",
    "start": "2466190",
    "end": "2472370"
  },
  {
    "text": "that is what required thank you hi how",
    "start": "2472370",
    "end": "2478680"
  },
  {
    "text": "do you see this product integrating with a pipeline the continuous integration",
    "start": "2478680",
    "end": "2483810"
  },
  {
    "text": "continuous deployment pipeline yes so I",
    "start": "2483810",
    "end": "2489950"
  },
  {
    "text": "so the baby model letters as you might noticed so what you'll notice is the",
    "start": "2489950",
    "end": "2495090"
  },
  {
    "text": "core concept the node is in endpoint provided by a set of so it is the name",
    "start": "2495090",
    "end": "2501750"
  },
  {
    "text": "provided to a set of endpoints so you can model in the pipeline when you deploy a new version you essentially are",
    "start": "2501750",
    "end": "2507690"
  },
  {
    "text": "going to create a new virtual node in the mesh as part of the pipeline hook and then it's up to you to configure the",
    "start": "2507690",
    "end": "2514710"
  },
  {
    "text": "route appropriate for that node so you can say for example a Bluegreen deployment you can say move a certain",
    "start": "2514710",
    "end": "2521700"
  },
  {
    "text": "percentage or maybe hundred percent to the new version test it for a while and if it doesn't work point the route back",
    "start": "2521700",
    "end": "2526950"
  },
  {
    "text": "to the old one so each of these versions which you are deploying through your pipeline will be represented as a node",
    "start": "2526950",
    "end": "2532080"
  },
  {
    "text": "they may have thousands of tasks behind them but they're collectively are pointed by a node and all the envoys",
    "start": "2532080",
    "end": "2538410"
  },
  {
    "text": "which are packaged so you need a package envoy along with your application and that envoy is injected with this know",
    "start": "2538410",
    "end": "2545220"
  },
  {
    "text": "the name and when it connects it is going to get the configuration corresponding to that so so the way yeah",
    "start": "2545220",
    "end": "2552690"
  },
  {
    "text": "in the pipeline you whenever new version that corresponds to a virtual node in the mesh hi I'm doing",
    "start": "2552690",
    "end": "2562510"
  },
  {
    "text": "any plans to implement like a front proxy platen sir yes so if you're",
    "start": "2562510",
    "end": "2568720"
  },
  {
    "text": "talking about ingress style so right now we are heavily relying on elbe and API",
    "start": "2568720",
    "end": "2574390"
  },
  {
    "text": "gateway to provide it so we have heard some customers ask for because of the",
    "start": "2574390",
    "end": "2580540"
  },
  {
    "text": "some protocols not yet supported in gia lb and envoy also provides more metrics",
    "start": "2580540",
    "end": "2586030"
  },
  {
    "text": "and stuff so there is nothing stopping you from actually modeling the node as",
    "start": "2586030",
    "end": "2591130"
  },
  {
    "text": "if like a ingress so at the end it is just a node which receives some routes the only difference being that Inglis",
    "start": "2591130",
    "end": "2597700"
  },
  {
    "text": "has some additional capabilities rather than just a sidecar so the scale may be different for example the number of",
    "start": "2597700",
    "end": "2603910"
  },
  {
    "text": "routes you may want to define on the ingress may be much higher than a sidecar so we haven't gone through that",
    "start": "2603910",
    "end": "2609400"
  },
  {
    "text": "so for a normal ingress it should still work but if you want to replace like the entire fleet that thousands of services",
    "start": "2609400",
    "end": "2616720"
  },
  {
    "text": "like Amazon would do that would require a special design and testing so you're",
    "start": "2616720",
    "end": "2621820"
  },
  {
    "text": "not testing for that use case thanks I'm just curious about the roadmap for a",
    "start": "2621820",
    "end": "2628210"
  },
  {
    "text": "plan use for like ec2 a firecracker or lambda yes so again available you can run envoy it",
    "start": "2628210",
    "end": "2635800"
  },
  {
    "text": "should be able to connect and get it right now the challenge is how do you get on way along with the application",
    "start": "2635800",
    "end": "2641730"
  },
  {
    "text": "with tasks and pods like ECS any case you have Orchestrator so that we can packet sidecar",
    "start": "2641730",
    "end": "2647859"
  },
  {
    "text": "but ec2 if you break it into the army or if you have a chef and simple or somehow",
    "start": "2647859",
    "end": "2652900"
  },
  {
    "text": "you get on way in their app machine doesn't care where the envoy is coming from as long as it has an IM role to",
    "start": "2652900",
    "end": "2659080"
  },
  {
    "text": "connect to the app mission the right permissions instead of the right DNS",
    "start": "2659080",
    "end": "2664300"
  },
  {
    "text": "record really is kind yes exact and in future we will look at much more tighter",
    "start": "2664300",
    "end": "2671320"
  },
  {
    "text": "integration with ec2 say for example auto scaling so that we can maybe automatically add or provide a template",
    "start": "2671320",
    "end": "2677380"
  },
  {
    "text": "so that envoy comes in and there and firecracker by itself directly you can't consume you will be consuming through",
    "start": "2677380",
    "end": "2683350"
  },
  {
    "text": "Fargate or lambda so lambda is something interesting to look at it fits in there but Fargate will have a",
    "start": "2683350",
    "end": "2690280"
  },
  {
    "text": "support thank you how it could",
    "start": "2690280",
    "end": "2695850"
  },
  {
    "text": "complement compared to the cloud map yes so cloud map is a way to define so you",
    "start": "2695850",
    "end": "2703390"
  },
  {
    "text": "point a resource name and that resource name may resolve to multiple resources which are defined on AWS so one way to",
    "start": "2703390",
    "end": "2710050"
  },
  {
    "text": "see that as you can have a resource name which is a service name and which may result or endpoints which is IP",
    "start": "2710050",
    "end": "2716560"
  },
  {
    "text": "addresses which are also sort of resources in AWS so one way to think is cloud map is a service discovery but you",
    "start": "2716560",
    "end": "2722680"
  },
  {
    "text": "can also think that is much more than service discovery so what app much does is it uses cloud map like a service",
    "start": "2722680",
    "end": "2728980"
  },
  {
    "text": "discovery and so what it does is takes the registry information which is",
    "start": "2728980",
    "end": "2734380"
  },
  {
    "text": "defined in the cloud map it takes that converts into Envoy and on by configuration which one way understands",
    "start": "2734380",
    "end": "2740410"
  },
  {
    "text": "and release it it basically sits on top of yes so it uses cloud map data as a",
    "start": "2740410",
    "end": "2745600"
  },
  {
    "text": "source of truth for the endpoints and release it to envoy so I mean again one more question is how compared to the",
    "start": "2745600",
    "end": "2751810"
  },
  {
    "text": "KJ's orchestration and also the eureka service right yep is it easy to migrate",
    "start": "2751810",
    "end": "2759930"
  },
  {
    "text": "yeah so we will we will have samples soon which works with eks it's not just",
    "start": "2759930",
    "end": "2765640"
  },
  {
    "text": "in case it's any kubernetes II case may have to install controllers to deal with",
    "start": "2765640",
    "end": "2771250"
  },
  {
    "text": "app mess integrations but you can use them to integrate with any kubernetes so yes so it will play well with",
    "start": "2771250",
    "end": "2778030"
  },
  {
    "text": "orchestration communities does well with deploying your applications APIs and any",
    "start": "2778030",
    "end": "2784000"
  },
  {
    "text": "service my solution works well with connecting those applications so they play complementary to each other rather",
    "start": "2784000",
    "end": "2789250"
  },
  {
    "text": "than like one replacing any other thank you have you looked into graph QL schema",
    "start": "2789250",
    "end": "2797440"
  },
  {
    "text": "stitching at all with remote delegation not yet that's an interesting idea right",
    "start": "2797440",
    "end": "2805540"
  },
  {
    "text": "now your heads down and getting the basic stuff but certainly we would love to get that feedback on the examples but",
    "start": "2805540",
    "end": "2811960"
  },
  {
    "text": "that's that's a great addition to one way itself and as a filter",
    "start": "2811960",
    "end": "2817710"
  },
  {
    "text": "awesome thank you very much thank you guys [Applause]",
    "start": "2820970",
    "end": "2829249"
  }
]