[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "[Music]",
    "start": "50",
    "end": "1010"
  },
  {
    "text": "[Applause]",
    "start": "1010",
    "end": "4088"
  },
  {
    "text": "[Music]",
    "start": "4960",
    "end": "11689"
  },
  {
    "text": "hello i'm ashmit an associate consultant",
    "start": "12240",
    "end": "14799"
  },
  {
    "text": "with the professional services team here",
    "start": "14799",
    "end": "16800"
  },
  {
    "text": "in dallas today i'm going to show you a",
    "start": "16800",
    "end": "19520"
  },
  {
    "text": "few examples on how you can troubleshoot",
    "start": "19520",
    "end": "22160"
  },
  {
    "text": "access denied or unauthorized operation",
    "start": "22160",
    "end": "24400"
  },
  {
    "text": "errors with an aws identity and access",
    "start": "24400",
    "end": "27119"
  },
  {
    "text": "management policy let's get started",
    "start": "27119",
    "end": "30640"
  },
  {
    "start": "30000",
    "end": "101000"
  },
  {
    "text": "access denied and unauthorized operation",
    "start": "30640",
    "end": "32640"
  },
  {
    "text": "errors occur when you have im policies",
    "start": "32640",
    "end": "35280"
  },
  {
    "text": "or resource level permissions that are",
    "start": "35280",
    "end": "37280"
  },
  {
    "text": "not valid to troubleshoot such errors we",
    "start": "37280",
    "end": "40079"
  },
  {
    "text": "must identify the api caller and then",
    "start": "40079",
    "end": "42399"
  },
  {
    "text": "evaluate the permissions by checking im",
    "start": "42399",
    "end": "44800"
  },
  {
    "text": "policies and resource level permissions",
    "start": "44800",
    "end": "47440"
  },
  {
    "text": "if there are any",
    "start": "47440",
    "end": "50000"
  },
  {
    "text": "if the error message doesn't include the",
    "start": "50000",
    "end": "51760"
  },
  {
    "text": "caller information then you can identify",
    "start": "51760",
    "end": "54320"
  },
  {
    "text": "the api caller in the aws management",
    "start": "54320",
    "end": "56800"
  },
  {
    "text": "console in the upper right corner of the",
    "start": "56800",
    "end": "58800"
  },
  {
    "text": "page",
    "start": "58800",
    "end": "60719"
  },
  {
    "text": "the api caller can be an iam user role",
    "start": "60719",
    "end": "63920"
  },
  {
    "text": "or a federated user with an im role in",
    "start": "63920",
    "end": "66880"
  },
  {
    "text": "this case it is a federated user visit",
    "start": "66880",
    "end": "69119"
  },
  {
    "text": "im role",
    "start": "69119",
    "end": "71520"
  },
  {
    "text": "if you are using aws command line",
    "start": "71520",
    "end": "73600"
  },
  {
    "text": "interface to make api calls then you can",
    "start": "73600",
    "end": "76240"
  },
  {
    "text": "run aws sds get caller identity to",
    "start": "76240",
    "end": "79439"
  },
  {
    "text": "confirm the identity of the api caller",
    "start": "79439",
    "end": "82240"
  },
  {
    "text": "you can also use the aws cli command",
    "start": "82240",
    "end": "85040"
  },
  {
    "text": "with debug flag to identify the source",
    "start": "85040",
    "end": "87520"
  },
  {
    "text": "of the credentials in this case it is an",
    "start": "87520",
    "end": "90079"
  },
  {
    "text": "iem user and the credentials are stored",
    "start": "90079",
    "end": "92560"
  },
  {
    "text": "in a shared credentials file in the aws",
    "start": "92560",
    "end": "94880"
  },
  {
    "text": "directory",
    "start": "94880",
    "end": "97119"
  },
  {
    "text": "now as promised let's take a look at a",
    "start": "97119",
    "end": "99600"
  },
  {
    "text": "couple examples of error messages and",
    "start": "99600",
    "end": "101520"
  },
  {
    "start": "101000",
    "end": "195000"
  },
  {
    "text": "the corresponding troubleshooting steps",
    "start": "101520",
    "end": "105280"
  },
  {
    "text": "in the first example we receive an",
    "start": "105280",
    "end": "107280"
  },
  {
    "text": "unauthorized operation error message",
    "start": "107280",
    "end": "109439"
  },
  {
    "text": "while attempting to describe an amazon",
    "start": "109439",
    "end": "111600"
  },
  {
    "text": "elastic compute cloud instance by using",
    "start": "111600",
    "end": "114159"
  },
  {
    "text": "the aws cli",
    "start": "114159",
    "end": "117200"
  },
  {
    "text": "this error message tells us that we",
    "start": "117200",
    "end": "118960"
  },
  {
    "text": "don't have permissions to call the",
    "start": "118960",
    "end": "120399"
  },
  {
    "text": "describe instances api",
    "start": "120399",
    "end": "122560"
  },
  {
    "text": "to troubleshoot this error after we",
    "start": "122560",
    "end": "124880"
  },
  {
    "text": "identify the api caller we'll evaluate",
    "start": "124880",
    "end": "127439"
  },
  {
    "text": "the im policy attached to the api caller",
    "start": "127439",
    "end": "130160"
  },
  {
    "text": "role or user",
    "start": "130160",
    "end": "132959"
  },
  {
    "text": "let's go back to the console and",
    "start": "132959",
    "end": "134640"
  },
  {
    "text": "navigate to the iam console",
    "start": "134640",
    "end": "136959"
  },
  {
    "text": "make sure that you log in as an admin or",
    "start": "136959",
    "end": "139440"
  },
  {
    "text": "as someone who has permissions to view",
    "start": "139440",
    "end": "141599"
  },
  {
    "text": "and manage iam",
    "start": "141599",
    "end": "144560"
  },
  {
    "text": "as the api caller is a user choose users",
    "start": "144560",
    "end": "147920"
  },
  {
    "text": "choose user one and then locate and open",
    "start": "147920",
    "end": "150720"
  },
  {
    "text": "the corresponding custom policy that's",
    "start": "150720",
    "end": "152640"
  },
  {
    "text": "attached to the user",
    "start": "152640",
    "end": "155599"
  },
  {
    "text": "you can see that this policy is",
    "start": "155599",
    "end": "157200"
  },
  {
    "text": "restricting describe instances action to",
    "start": "157200",
    "end": "159440"
  },
  {
    "text": "the my instance 1 ec2 instance",
    "start": "159440",
    "end": "162480"
  },
  {
    "text": "which is incorrect because the describe",
    "start": "162480",
    "end": "164400"
  },
  {
    "text": "instances action doesn't support",
    "start": "164400",
    "end": "166080"
  },
  {
    "text": "resource level permissions",
    "start": "166080",
    "end": "169040"
  },
  {
    "text": "to learn more about actions resources",
    "start": "169040",
    "end": "171519"
  },
  {
    "text": "and condition context keys for aws",
    "start": "171519",
    "end": "173680"
  },
  {
    "text": "services see the associated knowledge",
    "start": "173680",
    "end": "175920"
  },
  {
    "text": "center article",
    "start": "175920",
    "end": "178720"
  },
  {
    "text": "after changing the resource value we can",
    "start": "178720",
    "end": "181280"
  },
  {
    "text": "now describe the instances",
    "start": "181280",
    "end": "185080"
  },
  {
    "text": "in our second example we receive the",
    "start": "187200",
    "end": "189040"
  },
  {
    "text": "access denied error when calling the",
    "start": "189040",
    "end": "190879"
  },
  {
    "text": "assume role operation to assume a im",
    "start": "190879",
    "end": "193120"
  },
  {
    "text": "role",
    "start": "193120",
    "end": "194480"
  },
  {
    "text": "this error message includes the api name",
    "start": "194480",
    "end": "197200"
  },
  {
    "start": "195000",
    "end": "289000"
  },
  {
    "text": "api caller and the target resource",
    "start": "197200",
    "end": "200159"
  },
  {
    "text": "we must make sure that the api caller",
    "start": "200159",
    "end": "202159"
  },
  {
    "text": "has the right access to the resources",
    "start": "202159",
    "end": "204720"
  },
  {
    "text": "to do that we'll evaluate the trust",
    "start": "204720",
    "end": "206640"
  },
  {
    "text": "policy attached with the ec2 full access",
    "start": "206640",
    "end": "208959"
  },
  {
    "text": "role that we need to assume and the im",
    "start": "208959",
    "end": "211120"
  },
  {
    "text": "policy attached to user1 who is assuming",
    "start": "211120",
    "end": "213440"
  },
  {
    "text": "the said rule",
    "start": "213440",
    "end": "215200"
  },
  {
    "text": "let's go back to the console and",
    "start": "215200",
    "end": "216640"
  },
  {
    "text": "navigate to the iam console",
    "start": "216640",
    "end": "219040"
  },
  {
    "text": "make sure that you log in as an admin or",
    "start": "219040",
    "end": "221440"
  },
  {
    "text": "as someone who has permissions to view",
    "start": "221440",
    "end": "223360"
  },
  {
    "text": "and manage im",
    "start": "223360",
    "end": "225519"
  },
  {
    "text": "as the api caller is a user choose users",
    "start": "225519",
    "end": "228720"
  },
  {
    "text": "choose user 1 and then locate and open",
    "start": "228720",
    "end": "231280"
  },
  {
    "text": "the corresponding custom policy attached",
    "start": "231280",
    "end": "233360"
  },
  {
    "text": "to the user",
    "start": "233360",
    "end": "235120"
  },
  {
    "text": "you'll see that this policy allows",
    "start": "235120",
    "end": "236799"
  },
  {
    "text": "assume role action on the resource ec to",
    "start": "236799",
    "end": "239120"
  },
  {
    "text": "full access role",
    "start": "239120",
    "end": "240720"
  },
  {
    "text": "also there is no deny effect or",
    "start": "240720",
    "end": "242720"
  },
  {
    "text": "condition that doesn't meet the",
    "start": "242720",
    "end": "244159"
  },
  {
    "text": "requirements on assume role action so",
    "start": "244159",
    "end": "246400"
  },
  {
    "text": "the policy looks good",
    "start": "246400",
    "end": "248720"
  },
  {
    "text": "now let's check the trust policy",
    "start": "248720",
    "end": "250480"
  },
  {
    "text": "attached to the ec2 full access role and",
    "start": "250480",
    "end": "252720"
  },
  {
    "text": "see if there's anything wrong",
    "start": "252720",
    "end": "255840"
  },
  {
    "text": "you'll see that the trust policy trusts",
    "start": "256160",
    "end": "257919"
  },
  {
    "text": "the admin user but there is no mention",
    "start": "257919",
    "end": "260000"
  },
  {
    "text": "of user one",
    "start": "260000",
    "end": "262000"
  },
  {
    "text": "we can either add user one arn as a",
    "start": "262000",
    "end": "264160"
  },
  {
    "text": "principle or we can add the root as a",
    "start": "264160",
    "end": "266320"
  },
  {
    "text": "principle if we want this rule to trust",
    "start": "266320",
    "end": "268240"
  },
  {
    "text": "all i am entities from this account",
    "start": "268240",
    "end": "271440"
  },
  {
    "text": "after fixing the permissions and the",
    "start": "271440",
    "end": "273040"
  },
  {
    "text": "trust relationship we can now assume the",
    "start": "273040",
    "end": "275360"
  },
  {
    "text": "rule",
    "start": "275360",
    "end": "276880"
  },
  {
    "text": "we can check if the temporary",
    "start": "276880",
    "end": "278080"
  },
  {
    "text": "credentials that are returned are valid",
    "start": "278080",
    "end": "280080"
  },
  {
    "text": "by exporting the credentials returned to",
    "start": "280080",
    "end": "282000"
  },
  {
    "text": "environment variables and running the",
    "start": "282000",
    "end": "283680"
  },
  {
    "text": "get caller identity command using this",
    "start": "283680",
    "end": "286000"
  },
  {
    "text": "role's temporary credentials",
    "start": "286000",
    "end": "289440"
  },
  {
    "start": "289000",
    "end": "312000"
  },
  {
    "text": "in our third example we have an access",
    "start": "289600",
    "end": "291600"
  },
  {
    "text": "denied error when calling the get",
    "start": "291600",
    "end": "293280"
  },
  {
    "text": "session token operation",
    "start": "293280",
    "end": "295680"
  },
  {
    "text": "this error message indicates that the",
    "start": "295680",
    "end": "297520"
  },
  {
    "text": "get session token operation isn't",
    "start": "297520",
    "end": "299199"
  },
  {
    "text": "supported by temporary credentials",
    "start": "299199",
    "end": "301680"
  },
  {
    "text": "however if we run this command as an im",
    "start": "301680",
    "end": "304240"
  },
  {
    "text": "user then we get the temporary sts",
    "start": "304240",
    "end": "306320"
  },
  {
    "text": "credentials",
    "start": "306320",
    "end": "308960"
  },
  {
    "text": "in our fourth example we receive an",
    "start": "309039",
    "end": "310880"
  },
  {
    "text": "unauthorized operation error with an",
    "start": "310880",
    "end": "312720"
  },
  {
    "start": "312000",
    "end": "425000"
  },
  {
    "text": "encoded authorization failure message",
    "start": "312720",
    "end": "314880"
  },
  {
    "text": "when calling the associate im instance",
    "start": "314880",
    "end": "316800"
  },
  {
    "text": "profile operation",
    "start": "316800",
    "end": "319120"
  },
  {
    "text": "this error message returns an encoded",
    "start": "319120",
    "end": "321039"
  },
  {
    "text": "authorization failure message which can",
    "start": "321039",
    "end": "323039"
  },
  {
    "text": "be decoded using the code authorization",
    "start": "323039",
    "end": "325120"
  },
  {
    "text": "message cli command first we must be",
    "start": "325120",
    "end": "328160"
  },
  {
    "text": "sure that the cli user has permissions",
    "start": "328160",
    "end": "330320"
  },
  {
    "text": "to decode the authorization failure",
    "start": "330320",
    "end": "332240"
  },
  {
    "text": "message",
    "start": "332240",
    "end": "333919"
  },
  {
    "text": "after the user has permission to decode",
    "start": "333919",
    "end": "335840"
  },
  {
    "text": "authorization failure messages run the",
    "start": "335840",
    "end": "338080"
  },
  {
    "text": "aws sds decode authorization message",
    "start": "338080",
    "end": "340800"
  },
  {
    "text": "command to decode the message",
    "start": "340800",
    "end": "343600"
  },
  {
    "text": "when we read the output we'll find the",
    "start": "343600",
    "end": "345520"
  },
  {
    "text": "exact error such as an explicit deny or",
    "start": "345520",
    "end": "348240"
  },
  {
    "text": "incorrect resource specified in the",
    "start": "348240",
    "end": "349840"
  },
  {
    "text": "policy and so on to find the discrepancy",
    "start": "349840",
    "end": "353360"
  },
  {
    "text": "look for an explicit deny the principle",
    "start": "353360",
    "end": "355680"
  },
  {
    "text": "that is denied the access and what",
    "start": "355680",
    "end": "358080"
  },
  {
    "text": "action is being blocked",
    "start": "358080",
    "end": "360400"
  },
  {
    "text": "it is also important to identify the",
    "start": "360400",
    "end": "362160"
  },
  {
    "text": "resource and the context values such as",
    "start": "362160",
    "end": "364639"
  },
  {
    "text": "region service and any other details",
    "start": "364639",
    "end": "367280"
  },
  {
    "text": "that can help us find the root cause of",
    "start": "367280",
    "end": "368960"
  },
  {
    "text": "the error",
    "start": "368960",
    "end": "370639"
  },
  {
    "text": "here we can see that the user 1 is",
    "start": "370639",
    "end": "372960"
  },
  {
    "text": "missing the past role permissions on",
    "start": "372960",
    "end": "374880"
  },
  {
    "text": "instance profile rule resource",
    "start": "374880",
    "end": "377600"
  },
  {
    "text": "pass rule permission is required to pass",
    "start": "377600",
    "end": "379440"
  },
  {
    "text": "a rule to the service to later assume",
    "start": "379440",
    "end": "381680"
  },
  {
    "text": "the rule and perform actions on your",
    "start": "381680",
    "end": "383360"
  },
  {
    "text": "behalf",
    "start": "383360",
    "end": "384960"
  },
  {
    "text": "let's go to the im user in the console",
    "start": "384960",
    "end": "387199"
  },
  {
    "text": "and add pass rule permissions",
    "start": "387199",
    "end": "391160"
  },
  {
    "text": "after we add the pastoral permissions we",
    "start": "399440",
    "end": "401440"
  },
  {
    "text": "can now associate the im instance",
    "start": "401440",
    "end": "403360"
  },
  {
    "text": "profile to the ec2 instance",
    "start": "403360",
    "end": "406560"
  },
  {
    "text": "and this is how you troubleshoot common",
    "start": "406560",
    "end": "408160"
  },
  {
    "text": "access denied and unauthorized operation",
    "start": "408160",
    "end": "410160"
  },
  {
    "text": "error messages",
    "start": "410160",
    "end": "411520"
  },
  {
    "text": "always make sure that you have the right",
    "start": "411520",
    "end": "413199"
  },
  {
    "text": "api caller making the api calls and that",
    "start": "413199",
    "end": "415680"
  },
  {
    "text": "they have the correct impermissions",
    "start": "415680",
    "end": "418240"
  },
  {
    "text": "also if they have any resource level",
    "start": "418240",
    "end": "420240"
  },
  {
    "text": "permissions make sure that those",
    "start": "420240",
    "end": "421759"
  },
  {
    "text": "resource level permissions are supported",
    "start": "421759",
    "end": "423599"
  },
  {
    "text": "by the actions that you're performing",
    "start": "423599",
    "end": "426319"
  },
  {
    "start": "425000",
    "end": "441000"
  },
  {
    "text": "thanks for watching and happy cloud",
    "start": "426319",
    "end": "427919"
  },
  {
    "text": "computing from all of us here at aws",
    "start": "427919",
    "end": "430580"
  },
  {
    "text": "[Music]",
    "start": "430580",
    "end": "431620"
  },
  {
    "text": "[Applause]",
    "start": "431620",
    "end": "433370"
  },
  {
    "text": "[Music]",
    "start": "433370",
    "end": "436540"
  },
  {
    "text": "[Music]",
    "start": "438580",
    "end": "439919"
  },
  {
    "text": "you",
    "start": "439919",
    "end": "442000"
  }
]