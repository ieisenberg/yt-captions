[
  {
    "start": "0",
    "end": "40000"
  },
  {
    "text": "hello everyone welcome to this episode of field on AWS series I'm Alex",
    "start": "290",
    "end": "7410"
  },
  {
    "text": "californee and today's episode is focused on security for surplus applications so",
    "start": "7410",
    "end": "14429"
  },
  {
    "text": "what we're going to do is we're going to go through some of the basics some of",
    "start": "14429",
    "end": "19890"
  },
  {
    "text": "the features of the integrations that you can have in your subtopic in applications when it comes to security",
    "start": "19890",
    "end": "26519"
  },
  {
    "text": "some of the best practices so it will be there will be a little presentation in",
    "start": "26519",
    "end": "33180"
  },
  {
    "text": "the beginning and then I'll mostly do live coding so we'll build something together and we'll apply some of these",
    "start": "33180",
    "end": "39239"
  },
  {
    "text": "best practices so let me tell you what I do I'm a Technical Evangelist here and I",
    "start": "39239",
    "end": "46469"
  },
  {
    "text": "used to be a web developer full time and we're going to start out I also organize some circles events are in the world so",
    "start": "46469",
    "end": "54059"
  },
  {
    "text": "if you are curious about those ask me anything and I will be looking at the chat every now and then so if we have",
    "start": "54059",
    "end": "60840"
  },
  {
    "text": "specific questions don't be afraid to ask there are other friends and colleagues that can also take your",
    "start": "60840",
    "end": "66420"
  },
  {
    "text": "questions so another question is to the question though be shy ask us anything today so this the agenda",
    "start": "66420",
    "end": "75600"
  },
  {
    "start": "73000",
    "end": "179000"
  },
  {
    "text": "for today is very simple but before that I wanted to briefly tell me what we really mean by solace computing because",
    "start": "75600",
    "end": "81900"
  },
  {
    "text": "maybe not everybody is familiar with the term so they are here and on screen you",
    "start": "81900",
    "end": "87689"
  },
  {
    "text": "can see what our our city over bubbles said a couple years ago when we announced most of the struffolis",
    "start": "87689",
    "end": "94310"
  },
  {
    "text": "platform the idea is that as developers we want to write business logic",
    "start": "94310",
    "end": "99540"
  },
  {
    "text": "everything we want to care everyone we want to maintain is business logic so",
    "start": "99540",
    "end": "105060"
  },
  {
    "text": "the main core of your business should be all unity right and that means that",
    "start": "105060",
    "end": "111299"
  },
  {
    "text": "maintaining servers spinning up instances patching the already system especially when it comes to",
    "start": "111299",
    "end": "117700"
  },
  {
    "text": "security that's a lot of heavy lifting that as developers we don't you know maybe that's not your main focus or you",
    "start": "117700",
    "end": "125590"
  },
  {
    "text": "know in general if you can offload that to the cloud provider in this case Amazon Web Services you know they will",
    "start": "125590",
    "end": "131530"
  },
  {
    "text": "give you speed and agility and you'll be able to move faster in to deliver results faster as a team so the idea of",
    "start": "131530",
    "end": "140800"
  },
  {
    "text": "service computing especially when it comes to the computing part of it it'll",
    "start": "140800",
    "end": "146890"
  },
  {
    "text": "be a slam that our function as a service offering is that all you need to write is your functions your established",
    "start": "146890",
    "end": "153489"
  },
  {
    "text": "functions and these functions come with different languages in different shapes with different events and triggers that",
    "start": "153489",
    "end": "160209"
  },
  {
    "text": "can spin up your functions so today we are not going too deep into these basics",
    "start": "160209",
    "end": "165280"
  },
  {
    "text": "because we want to focus on security on the security aspects and if you're curious you know maybe ask in the child",
    "start": "165280",
    "end": "171670"
  },
  {
    "text": "we can provide you some links and videos and other getting started resources specifically get about surplice so this",
    "start": "171670",
    "end": "179890"
  },
  {
    "start": "179000",
    "end": "233000"
  },
  {
    "text": "is the agenda for today I will give you a little background on security concepts",
    "start": "179890",
    "end": "185700"
  },
  {
    "text": "some of the best boxes some of the tools available and then I'll show some seventh base material that you can take",
    "start": "185700",
    "end": "193000"
  },
  {
    "text": "with you and use it and consume it at your own pace it's actually a workshop",
    "start": "193000",
    "end": "199030"
  },
  {
    "text": "and I'll take inspiration from this workshop and show you some of the",
    "start": "199030",
    "end": "204819"
  },
  {
    "text": "modules some of the steps this workshop in this life coding experience which is",
    "start": "204819",
    "end": "211780"
  },
  {
    "text": "the third part of the agenda so let's start and let's go through some of the security background concepts what are",
    "start": "211780",
    "end": "219160"
  },
  {
    "text": "the best practices what are things that you may want to avoid and when building your service applications and what are",
    "start": "219160",
    "end": "225190"
  },
  {
    "text": "the tools and services that can help you deal with some of the most common",
    "start": "225190",
    "end": "230700"
  },
  {
    "text": "challenges so first of all there are two",
    "start": "230700",
    "end": "236169"
  },
  {
    "start": "233000",
    "end": "406000"
  },
  {
    "text": "important concepts to remember when it comes to security and that's the permission model of AWS lambda so",
    "start": "236169",
    "end": "244170"
  },
  {
    "text": "when basically your functions as soon as you create them you know they have no",
    "start": "244170",
    "end": "249480"
  },
  {
    "text": "permission attached maybe their permissions to unlock something into college locks but basically if they need",
    "start": "249480",
    "end": "256079"
  },
  {
    "text": "to read from database or you know write into a queue or anything like that data",
    "start": "256079",
    "end": "262440"
  },
  {
    "text": "that permissions to do so and even if you want these functions to be invoked via API gateway HTTP you know you need",
    "start": "262440",
    "end": "270810"
  },
  {
    "text": "some permissions there so there are two very important concepts the first one is the execution policies and this",
    "start": "270810",
    "end": "277710"
  },
  {
    "text": "basically means what your functions can do right so if you want a function a to",
    "start": "277710",
    "end": "284010"
  },
  {
    "text": "read from a data load to be table you need to specify that permission otherwise you will get access denied",
    "start": "284010",
    "end": "289740"
  },
  {
    "text": "right given one any function reading any database or any function right into any",
    "start": "289740",
    "end": "295110"
  },
  {
    "text": "queue or or a pub style topic and things like that so this is very important and",
    "start": "295110",
    "end": "300630"
  },
  {
    "text": "as developers you exactly know what your function is doing and you know it",
    "start": "300630",
    "end": "305970"
  },
  {
    "text": "doesn't take too too much effort to write down these permissions that I'll show you how you can do that even using",
    "start": "305970",
    "end": "314340"
  },
  {
    "text": "the UI the web console it'll yes the second important concept is function",
    "start": "314340",
    "end": "320190"
  },
  {
    "text": "policies this is slightly different concept because it's about who can",
    "start": "320190",
    "end": "326460"
  },
  {
    "text": "invoke your functions what other services can invoke your function so we talked a lot about D blends or triggers",
    "start": "326460",
    "end": "333780"
  },
  {
    "text": "in service computing and basically imagine that every time that something happens like there is new file and you",
    "start": "333780",
    "end": "340740"
  },
  {
    "text": "invented an Amazon s3 or there is new record in your Dan will be tabled you know and something happens in the system",
    "start": "340740",
    "end": "346830"
  },
  {
    "text": "you want to be able to invoke your functions and here the constant is very similar unless you give X this",
    "start": "346830",
    "end": "352350"
  },
  {
    "text": "permission to s3 or too heavy I get weary or to dine on the need to invoke your function those functions will not",
    "start": "352350",
    "end": "358650"
  },
  {
    "text": "be able to be involved so function policies is you know the complement of",
    "start": "358650",
    "end": "363890"
  },
  {
    "text": "execution policies in they are the side of things and we'll see how to do that for example if you",
    "start": "363890",
    "end": "370719"
  },
  {
    "text": "want to build a RESTful API and you want to API page way invoking your lambda",
    "start": "370719",
    "end": "376120"
  },
  {
    "text": "functions so you can invoke your functions via HTTP you you know if",
    "start": "376120",
    "end": "381400"
  },
  {
    "text": "you're doing in the console when you map a restful endpoint to allow the function",
    "start": "381400",
    "end": "386590"
  },
  {
    "text": "you will get a confirmation magic message saying hey do you want me to create the function policy for you so",
    "start": "386590",
    "end": "393699"
  },
  {
    "text": "that API to a chemical lambda and so the console is big easy if you want to do it",
    "start": "393699",
    "end": "399240"
  },
  {
    "text": "using confirmation it's very similar but you know today will be reusing most of",
    "start": "399240",
    "end": "405069"
  },
  {
    "text": "the console so let me start with some of the worst thing you can do as far as",
    "start": "405069",
    "end": "410259"
  },
  {
    "start": "406000",
    "end": "545000"
  },
  {
    "text": "security and this is about you know the concept that we just saw the execution policies so something that a lot of",
    "start": "410259",
    "end": "417129"
  },
  {
    "text": "developers tend to do is using placeholders like star okay if you give",
    "start": "417129",
    "end": "423789"
  },
  {
    "text": "permissions to your function to something like s3 column star or dynami",
    "start": "423789",
    "end": "430599"
  },
  {
    "text": "star or S&S star this means an any API code related to s3 you know this",
    "start": "430599",
    "end": "436839"
  },
  {
    "text": "function can call it okay you probably don't want that nice earrings in 99% of",
    "start": "436839",
    "end": "442750"
  },
  {
    "text": "the use cases you don't want that okay because as treats are means that your",
    "start": "442750",
    "end": "448000"
  },
  {
    "text": "function can create packet delete buckets change the configuration of the",
    "start": "448000",
    "end": "453039"
  },
  {
    "text": "bucket and really in most cases that's not what you want your function probably wants to read from a bucket or write",
    "start": "453039",
    "end": "459599"
  },
  {
    "text": "objects into a bucket but you know creating buckets deleting buckets from a",
    "start": "459599",
    "end": "465460"
  },
  {
    "text": "lambda function is slightly less common and the same holds for dynami you don't want to create or delete tables usually",
    "start": "465460",
    "end": "472300"
  },
  {
    "text": "if that's what you need to do you can provide those permissions but star means",
    "start": "472300",
    "end": "478210"
  },
  {
    "text": "anything you want so we you know want to do that and you we don't want to make bodies dry either so in general this is",
    "start": "478210",
    "end": "488050"
  },
  {
    "text": "not only for lambda functions or source computing do you want to apply the least privileged approach which means",
    "start": "488050",
    "end": "495660"
  },
  {
    "text": "function or every role or even every instance in your server full environment",
    "start": "495660",
    "end": "501570"
  },
  {
    "text": "needs to have to leave some out of privileges so if you only need read permission just grant read permissions",
    "start": "501570",
    "end": "508260"
  },
  {
    "text": "and write permissions on your buckets or tables and you can do that you can be bearing rumbler you can even provide for",
    "start": "508260",
    "end": "517590"
  },
  {
    "text": "example with that gonna be you can say this function can only read from this specific table even only this specific",
    "start": "517590",
    "end": "524850"
  },
  {
    "text": "field in that table like a column it's no single so there are no problems but it can be very very very specific so",
    "start": "524850",
    "end": "532470"
  },
  {
    "text": "it's not only about which API calls it's also about which resources and which very fine queries versus these your",
    "start": "532470",
    "end": "540120"
  },
  {
    "text": "functions can invoke we drive whatever action how do you do that well if you're",
    "start": "540120",
    "end": "547710"
  },
  {
    "start": "545000",
    "end": "629000"
  },
  {
    "text": "using the best practice of infrastructure as code and you are defining your applications as a JSON or",
    "start": "547710",
    "end": "554250"
  },
  {
    "text": "XML template well it takes not a few lines our configuration okay in this",
    "start": "554250",
    "end": "560220"
  },
  {
    "text": "case we are saying this function called my function can dynami get item only in",
    "start": "560220",
    "end": "567690"
  },
  {
    "text": "what specific table that I'm creating in the same confirmation template so I can",
    "start": "567690",
    "end": "575460"
  },
  {
    "text": "even preference it I donate to our code the ID of their research either so this",
    "start": "575460",
    "end": "580890"
  },
  {
    "text": "way it can be very specific it doesn't take you an hour if it's one and if it's",
    "start": "580890",
    "end": "587730"
  },
  {
    "text": "one whispers if you wanna be I thought that you need and get item is pretty common that's like three or four or five",
    "start": "587730",
    "end": "594690"
  },
  {
    "text": "lines of VMO so as a developer you exactly know what you're doing what your",
    "start": "594690",
    "end": "600030"
  },
  {
    "text": "code is doing the sooner you do this the more time you will spare later on in your project cuz if you do that move to",
    "start": "600030",
    "end": "606960"
  },
  {
    "text": "B star you know at some point someone else you they shouldn't stop you and say no this",
    "start": "606960",
    "end": "612050"
  },
  {
    "text": "function will not go alive because it has two broad permissions and then you have to go back look at your code and",
    "start": "612050",
    "end": "618490"
  },
  {
    "text": "try to remember what the code is doing you know you just waste more time later on so you better do it even in your",
    "start": "618490",
    "end": "625339"
  },
  {
    "text": "development environment just start applying this is a best practice all the time",
    "start": "625339",
    "end": "630459"
  },
  {
    "start": "629000",
    "end": "727000"
  },
  {
    "text": "another thing that a lot of developers tend to do is hard coding stuff in the",
    "start": "630459",
    "end": "636020"
  },
  {
    "text": "in your code it's much easier you can start a first time thing but then you kind of forget about you",
    "start": "636020",
    "end": "641750"
  },
  {
    "text": "know that URL that API endpoint or that configuration that parameter even that",
    "start": "641750",
    "end": "648740"
  },
  {
    "text": "database password that you just are coding your code you know you shouldn't do that this is bad for two things",
    "start": "648740",
    "end": "655550"
  },
  {
    "text": "probably on two different levels the first one is if you get push and if you are pushing your coding you get push",
    "start": "655550",
    "end": "662300"
  },
  {
    "text": "your code with these are coded secrets you know secrets of my week even if it's",
    "start": "662300",
    "end": "667790"
  },
  {
    "text": "a private repo you know maybe you will become a public repo in six months you never know and you don't want to have",
    "start": "667790",
    "end": "674810"
  },
  {
    "text": "these leaked leaked secrets in your mystery the second level is that our",
    "start": "674810",
    "end": "680300"
  },
  {
    "text": "coding secrets means that reusing and centralized centralizing the usages of",
    "start": "680300",
    "end": "685730"
  },
  {
    "text": "your secret gets much harder when the number of your functions grow imagine you have only three functions today but",
    "start": "685730",
    "end": "692990"
  },
  {
    "text": "maybe in six months you will have twenty functions and maybe they are sharing some of these secrets so you don't want",
    "start": "692990",
    "end": "698959"
  },
  {
    "text": "to go and find out where is your your parameters your secrets your tokens your",
    "start": "698959",
    "end": "704420"
  },
  {
    "text": "password are being used and by which functions and go and find them and",
    "start": "704420",
    "end": "710000"
  },
  {
    "text": "redeploy them when these secrets change you want to have a nice centralized place to save them and to update them",
    "start": "710000",
    "end": "717020"
  },
  {
    "text": "all the ones for everybody must for all so let's see what are the tools to kind",
    "start": "717020",
    "end": "722510"
  },
  {
    "text": "of mitigate these two challenges as as developers it's not a fart really it's just about applying the best practices",
    "start": "722510",
    "end": "728930"
  },
  {
    "text": "so there are three different ways you can do this with is using environment variables and these",
    "start": "728930",
    "end": "735350"
  },
  {
    "text": "concept X is kind of in every computing platform you can inject a variable value",
    "start": "735350",
    "end": "742310"
  },
  {
    "text": "a key value mapping in your environment at runtime so if you have a dev",
    "start": "742310",
    "end": "749360"
  },
  {
    "text": "environment a staging environment a production environment you know you might have different variables for the",
    "start": "749360",
    "end": "756019"
  },
  {
    "text": "API is your calling for the buckets or the databases or in whatever changes",
    "start": "756019",
    "end": "762019"
  },
  {
    "text": "based on the environment and actually environment variables are a very good",
    "start": "762019",
    "end": "769750"
  },
  {
    "text": "fit for all those parameters all those configurations that are environment",
    "start": "769750",
    "end": "774949"
  },
  {
    "text": "dependent so again an API a you know even a the name of your database or you",
    "start": "774949",
    "end": "784220"
  },
  {
    "text": "know something that might change based on Department it's not the best fit for example for shared configuration or for",
    "start": "784220",
    "end": "793760"
  },
  {
    "text": "secrets and tokens and password that might change so I do not recommend using",
    "start": "793760",
    "end": "798889"
  },
  {
    "text": "environment variables for secrets there are two more tools services actually called system and your parameter store",
    "start": "798889",
    "end": "806000"
  },
  {
    "text": "and it'll be a secrets matter and so these two are a better fit for",
    "start": "806000",
    "end": "811600"
  },
  {
    "text": "centralizing your parameters imagine you have 20 functions that all need to read",
    "start": "811600",
    "end": "817519"
  },
  {
    "text": "from the same table okay this is not really common because you don't want to do that but maybe that's what you have",
    "start": "817519",
    "end": "823910"
  },
  {
    "text": "so you don't want to are coded 20 times in your environment variables because",
    "start": "823910",
    "end": "829519"
  },
  {
    "text": "then you will need to redeploy those 20 functions when the value changes right",
    "start": "829519",
    "end": "835130"
  },
  {
    "text": "you don't want to redefine functions you don't even want to know exactly where",
    "start": "835130",
    "end": "840170"
  },
  {
    "text": "that part of that parameter is to use and by how many functions at some point when there are so many things happening",
    "start": "840170",
    "end": "846889"
  },
  {
    "text": "so nicely to centralize the value of these parameters is using the parameter",
    "start": "846889",
    "end": "852769"
  },
  {
    "text": "store it supports hierarchies parameters so you can have like different stages",
    "start": "852769",
    "end": "859129"
  },
  {
    "text": "different even multiple parameters under the same path so that you can fetch five",
    "start": "859129",
    "end": "866959"
  },
  {
    "text": "or ten parameters with one API call just by using it perfect",
    "start": "866959",
    "end": "872379"
  },
  {
    "text": "you're very funny with permissions well for you can write and create these",
    "start": "872379",
    "end": "878149"
  },
  {
    "text": "parameters versus who can read and consume these parameters right so if",
    "start": "878149",
    "end": "883429"
  },
  {
    "text": "your functions will probably need only read access to those parameters there is",
    "start": "883429",
    "end": "890119"
  },
  {
    "text": "the third use case that is a very good fit for it obviously it's my sequence manager which is all those parameters",
    "start": "890119",
    "end": "899059"
  },
  {
    "text": "that are not just static strings but that might be something that changes",
    "start": "899059",
    "end": "906049"
  },
  {
    "text": "over time something that for example if you want to rotate periodically think about database passwords or think about",
    "start": "906049",
    "end": "913929"
  },
  {
    "text": "tokens of third-party services like your Twitter or a Twitter API token you don't",
    "start": "913929",
    "end": "920239"
  },
  {
    "text": "want to use that talking forever maybe every month or every few weeks if not every day you want to take that token or",
    "start": "920239",
    "end": "929089"
  },
  {
    "text": "that password right that we call that rotation past token secret rotation so",
    "start": "929089",
    "end": "934850"
  },
  {
    "text": "the interval sickness manager allows you to just step and it's even better cause for some specific use cases like for",
    "start": "934850",
    "end": "943309"
  },
  {
    "text": "your RDS databases RDS is our relational database service if you're using MySQL",
    "start": "943309",
    "end": "950509"
  },
  {
    "text": "or the spray or in other databases or not yes you can integrate it natively",
    "start": "950509",
    "end": "958399"
  },
  {
    "text": "with the sequence manager so the civic measure will rotate the password automatically for you every few days or",
    "start": "958399",
    "end": "966980"
  },
  {
    "text": "every day or every month you can select the period there so this is really",
    "start": "966980",
    "end": "972889"
  },
  {
    "text": "powerful so all your function is is that secret and use it and the secret",
    "start": "972889",
    "end": "979050"
  },
  {
    "text": "manager will take care about click updating the database password and and your function will just update any value",
    "start": "979050",
    "end": "985710"
  },
  {
    "text": "fetch the value as long as it changes so three different tools to services to",
    "start": "985710",
    "end": "993150"
  },
  {
    "text": "handle your secrets and and parameters and during the next or life hour or so",
    "start": "993150",
    "end": "999300"
  },
  {
    "text": "it will be life coeliac and i'll show you some of these actually let me show",
    "start": "999300",
    "end": "1005210"
  },
  {
    "start": "1004000",
    "end": "1177000"
  },
  {
    "text": "you what it looks like in code so this is using the Python SDK and which is",
    "start": "1005210",
    "end": "1010790"
  },
  {
    "text": "called dr3 so here we are fetching a parameter using a get parameter function",
    "start": "1010790",
    "end": "1020530"
  },
  {
    "text": "several you need to do is creating SSM SSM users and system enter service and",
    "start": "1020530",
    "end": "1028780"
  },
  {
    "text": "once client money a quantity of the client and you do SSM to get parameter you pass it the name or the parameter",
    "start": "1028780",
    "end": "1035900"
  },
  {
    "text": "optionally you can decrypt it if it's an encrypted proper and now you need to do is get getting the parameter value from",
    "start": "1035900",
    "end": "1043670"
  },
  {
    "text": "the response so it's not crazy start if you are using it you love the function",
    "start": "1043670",
    "end": "1049340"
  },
  {
    "text": "as you can see on screen your plunder and look into spec value and either at",
    "start": "1049340",
    "end": "1054560"
  },
  {
    "text": "runtime or you can even decide to fetch the value of your handler so that you",
    "start": "1054560",
    "end": "1061790"
  },
  {
    "text": "can cache it across multiple locations this kind of depend on the use case of",
    "start": "1061790",
    "end": "1066980"
  },
  {
    "text": "your function if you do the outside and you want to cache it that's great but be",
    "start": "1066980",
    "end": "1072440"
  },
  {
    "text": "aware that you know if the value changes while you're catching the value basically you might have inconsistencies",
    "start": "1072440",
    "end": "1079130"
  },
  {
    "text": "maybe the bucket or the database name universe or something else might change and to do so something that you can do",
    "start": "1079130",
    "end": "1086750"
  },
  {
    "text": "is handle the change scenario in a reactive way so you can say whenever",
    "start": "1086750",
    "end": "1092180"
  },
  {
    "text": "there is this exception go and fetch the new value for me automatically",
    "start": "1092180",
    "end": "1097790"
  },
  {
    "text": "so there are different to do that but just keep that mine if you fetch it out of your handler you can",
    "start": "1097790",
    "end": "1103220"
  },
  {
    "text": "catch it you fetch it inside the handler you are adding some additional latency",
    "start": "1103220",
    "end": "1108679"
  },
  {
    "text": "to your lambda execution so it's a few milliseconds I think between 20 and 50",
    "start": "1108679",
    "end": "1114950"
  },
  {
    "text": "you know it kind of depends on the region of the time of day on everything but you know it's probably around 50 or",
    "start": "1114950",
    "end": "1121940"
  },
  {
    "text": "60 milliseconds so if you're doing like this in the inside your handler it would",
    "start": "1121940",
    "end": "1127909"
  },
  {
    "text": "be a bit you know something the seconds more in your execution time and I've actually written a spatial library for",
    "start": "1127909",
    "end": "1135919"
  },
  {
    "text": "Python I call it SSM cache and this library will give you you know a little bit of syntax sugar for for your handler",
    "start": "1135919",
    "end": "1145369"
  },
  {
    "text": "so we just define a parameter as SSM parameter if you the name and then you just do profit up value optionally you",
    "start": "1145369",
    "end": "1152720"
  },
  {
    "text": "can specify caching behaviors you know in seconds you can do different",
    "start": "1152720",
    "end": "1158119"
  },
  {
    "text": "parameters you can use events secrets as part of your group so it's a nice little library it's open source of detail so if",
    "start": "1158119",
    "end": "1165529"
  },
  {
    "text": "you're using Python and you want to integrate it with your with your function code I have a look at it report",
    "start": "1165529",
    "end": "1172730"
  },
  {
    "text": "any problem will help me improve it so there was a bit of a background about",
    "start": "1172730",
    "end": "1179200"
  },
  {
    "start": "1177000",
    "end": "1437000"
  },
  {
    "text": "some of the best practices some of the main challenges some of the interesting",
    "start": "1179200",
    "end": "1184639"
  },
  {
    "text": "challenges that developers face men approaching circle is because we are lazy it lets some admit it so we find",
    "start": "1184639",
    "end": "1191720"
  },
  {
    "text": "the right shortcuts but if you keep these practices in mind it'll be much easier later on when you operate your",
    "start": "1191720",
    "end": "1198259"
  },
  {
    "text": "API or your functions your service functions in production so now I want to",
    "start": "1198259",
    "end": "1204169"
  },
  {
    "text": "give you this very nice link Amazon talk to you or slash double security",
    "start": "1204169",
    "end": "1209480"
  },
  {
    "text": "okay this link will bring it to you and eat a burrito let me show it to you real quick so this",
    "start": "1209480",
    "end": "1219110"
  },
  {
    "text": "thing is a vivo and this is a workshop that anybody can take and can",
    "start": "1219110",
    "end": "1224580"
  },
  {
    "text": "through at their own pace it's composed by a few modules it's called social security workshop it starts from a very",
    "start": "1224580",
    "end": "1232410"
  },
  {
    "text": "common website architecture so you have some clients you have a console API v3",
    "start": "1232410",
    "end": "1238800"
  },
  {
    "text": "and it'll be slammed up in your architecture and maybe a database this specific workshop is using a relational",
    "start": "1238800",
    "end": "1246090"
  },
  {
    "text": "database Amazon RDS using Aurora but you know you might have other databases",
    "start": "1246090",
    "end": "1252390"
  },
  {
    "text": "under the hood it's composed by different modules there is a module to initialize everything like a setup",
    "start": "1252390",
    "end": "1258950"
  },
  {
    "text": "module and then there are eight more modules that you can take in any order",
    "start": "1258950",
    "end": "1265020"
  },
  {
    "text": "okay so today I'm not really going through these modules but I'm touching",
    "start": "1265020",
    "end": "1271110"
  },
  {
    "text": "some of some of these concepts some of these challenges website so I'm going to",
    "start": "1271110",
    "end": "1279810"
  },
  {
    "text": "show you how to deal with secrets and configuration parameters exactly the",
    "start": "1279810",
    "end": "1284910"
  },
  {
    "text": "topic I've just introduced and will go through input validation encryption",
    "start": "1284910",
    "end": "1290300"
  },
  {
    "text": "usage plans and API keys for throttling and monitoring your API and even",
    "start": "1290300",
    "end": "1297090"
  },
  {
    "text": "distributed tracing using Amazon x-ray so there are a few more modules like the",
    "start": "1297090",
    "end": "1303720"
  },
  {
    "text": "first module on authorization that will help you will help you configure your",
    "start": "1303720",
    "end": "1311670"
  },
  {
    "text": "web application with Amazon cognitive and those two scopes to handle the",
    "start": "1311670",
    "end": "1317640"
  },
  {
    "text": "permissions of your different clients and there is another module on dependency vulnerability that help you",
    "start": "1317640",
    "end": "1323990"
  },
  {
    "text": "you know at build time maybe as part of your continuous integration pipeline it",
    "start": "1323990",
    "end": "1329640"
  },
  {
    "text": "helps you detect if some of your dependencies are vulnerable so you don't",
    "start": "1329640",
    "end": "1335280"
  },
  {
    "text": "want to deploy them to production and there is even another module six on web",
    "start": "1335280",
    "end": "1340350"
  },
  {
    "text": "application fire so it helps you configure custom rules for example to",
    "start": "1340350",
    "end": "1347030"
  },
  {
    "text": "stop request you know payload size too",
    "start": "1347030",
    "end": "1352440"
  },
  {
    "text": "big like up to three megabytes or you know you can configure the payload size or even to block requests that look like",
    "start": "1352440",
    "end": "1360210"
  },
  {
    "text": "sequel injection SQL injection attacks so these modules will give you even more but today I'll",
    "start": "1360210",
    "end": "1366900"
  },
  {
    "text": "focus on the others so if you're curious check out to do the whole experience in your own head of this account as your",
    "start": "1366900",
    "end": "1373440"
  },
  {
    "text": "own pace these modules are pretty well-documented so you just click on the module and you know you will find very",
    "start": "1373440",
    "end": "1381600"
  },
  {
    "text": "nice documentation with the steps and what we're talking about and what they find out what architecture will look",
    "start": "1381600",
    "end": "1388260"
  },
  {
    "text": "like before you do all of that you want to go through module 0 that's a set up",
    "start": "1388260",
    "end": "1393710"
  },
  {
    "text": "with the confirmation template it was about everything in your account it will",
    "start": "1393710",
    "end": "1398880"
  },
  {
    "text": "guide you through you know filling some records in the database and yeah it's",
    "start": "1398880",
    "end": "1404940"
  },
  {
    "text": "nice little setup so you you are on the same page and you have the architecture and you get start from there to improve",
    "start": "1404940",
    "end": "1412440"
  },
  {
    "text": "it cool so let's get started I'm not following the order I'm not",
    "start": "1412440",
    "end": "1418950"
  },
  {
    "text": "actually using the same architecture of this workshop but I'm taking inspiration and I'm using some of the same concept",
    "start": "1418950",
    "end": "1426360"
  },
  {
    "text": "today so let's get started I will start with secrets management and configuration parameters management and",
    "start": "1426360",
    "end": "1434370"
  },
  {
    "text": "that we go through some of the others so let's switch to this console it's light",
    "start": "1434370",
    "end": "1441660"
  },
  {
    "start": "1437000",
    "end": "1467000"
  },
  {
    "text": "coded time before we go on is there any question for me in the chart let me have",
    "start": "1441660",
    "end": "1447960"
  },
  {
    "text": "a look [Music] elders a lot going on here",
    "start": "1447960",
    "end": "1454730"
  },
  {
    "text": "I'm seeing for me if you have questions during the",
    "start": "1454730",
    "end": "1459759"
  },
  {
    "text": "session just throw it in the chat and I try to answer we haven't started yet so",
    "start": "1459759",
    "end": "1465149"
  },
  {
    "text": "let's get started let's start by creating a new lambda function why not",
    "start": "1465149",
    "end": "1470829"
  },
  {
    "start": "1467000",
    "end": "1562000"
  },
  {
    "text": "so this is the lambda console I can just create a new lambda function I want to",
    "start": "1470829",
    "end": "1475959"
  },
  {
    "text": "alter it from scratch I might be using a blueprint or using this rule is apropos",
    "start": "1475959",
    "end": "1481299"
  },
  {
    "text": "for today I'm just creating one from",
    "start": "1481299",
    "end": "1486579"
  },
  {
    "text": "scratch cool let's give the name and I'm",
    "start": "1486579",
    "end": "1492159"
  },
  {
    "text": "going to choose a run time so these are all their run time supported by a double",
    "start": "1492159",
    "end": "1497679"
  },
  {
    "text": "is lambda by default if something's not here if you're every language start here you can use even your own custom run",
    "start": "1497679",
    "end": "1505029"
  },
  {
    "text": "time you know for today I'm fine using Python to the previous I'm a nostalgic person so let's use a 5 - 2 7 please",
    "start": "1505029",
    "end": "1516009"
  },
  {
    "text": "start noticing that by default this top of the permission stop is closed let's have a look in at the permission time so",
    "start": "1516009",
    "end": "1524019"
  },
  {
    "text": "by default the UI will create a new role with basic permissions basic formation",
    "start": "1524019",
    "end": "1530319"
  },
  {
    "text": "means the function will be able to access the internet and will be able to print we'll be able to lock something so",
    "start": "1530319",
    "end": "1538509"
  },
  {
    "text": "it will only have plum which locks permissions basically and we are ok with that for now we will have more",
    "start": "1538509",
    "end": "1544779"
  },
  {
    "text": "permissions later on so let's create our function you should take on a few",
    "start": "1544779",
    "end": "1550689"
  },
  {
    "text": "seconds there we go so that this didn't",
    "start": "1550689",
    "end": "1559899"
  },
  {
    "text": "work okay we got it so right now our function only as plot",
    "start": "1559899",
    "end": "1566529"
  },
  {
    "start": "1562000",
    "end": "2227000"
  },
  {
    "text": "which locks as you can see here on the right there are no triggers configure no API",
    "start": "1566529",
    "end": "1572020"
  },
  {
    "text": "nothing and that you can see the code is pretty basic we have our lambda and",
    "start": "1572020",
    "end": "1577180"
  },
  {
    "text": "handler and it's returning at 200 HTTP response so nothing crazy here that's",
    "start": "1577180",
    "end": "1584410"
  },
  {
    "text": "difficult oh yes sorry guys I'm using Python 2.7 because I had more experience",
    "start": "1584410",
    "end": "1590680"
  },
  {
    "text": "with it but it doesn't matter for today I'm just writing some simple Python code",
    "start": "1590680",
    "end": "1596350"
  },
  {
    "text": "it doesn't really matter I'm just pretty sure what I'm writing works I want to have 11 live coding errors right now so",
    "start": "1596350",
    "end": "1605020"
  },
  {
    "text": "let's start from this very basic code actually let's add some real Jason in",
    "start": "1605020",
    "end": "1612160"
  },
  {
    "text": "here like message okay cool so I'm",
    "start": "1612160",
    "end": "1620230"
  },
  {
    "text": "saving and I'm testing fault",
    "start": "1620230",
    "end": "1625810"
  },
  {
    "text": "I can empty input event so this day",
    "start": "1625810",
    "end": "1631030"
  },
  {
    "text": "input our function will receive that's created and tested so it's a default",
    "start": "1631030",
    "end": "1636940"
  },
  {
    "text": "code it works there is nothing special here are the messages okay so it's got",
    "start": "1636940",
    "end": "1642870"
  },
  {
    "text": "222 milliseconds we like we don't really feel a lot of memory but you know down",
    "start": "1642870",
    "end": "1648610"
  },
  {
    "text": "here you can configure a bar a memorable step what we have to talk about earlier and you can even encrypt them having",
    "start": "1648610",
    "end": "1655420"
  },
  {
    "text": "configure tags here is how where we configure the execution role so if I want to specific permissions I can open",
    "start": "1655420",
    "end": "1663370"
  },
  {
    "text": "the role and modifying here is where I configure their power I like the coroner to call it the memory",
    "start": "1663370",
    "end": "1669880"
  },
  {
    "text": "remember if you give it more memory you loss more CPU more networking or everything and for today were totally a",
    "start": "1669880",
    "end": "1676810"
  },
  {
    "text": "category three seconds there is some more debugging working Karissa configuration but for",
    "start": "1676810",
    "end": "1682710"
  },
  {
    "text": "today is totally fine so let's save it I'm going to get it now imagine that we",
    "start": "1682710",
    "end": "1688559"
  },
  {
    "text": "want to build an application that has an API a public HTTP endpoint that is",
    "start": "1688559",
    "end": "1696830"
  },
  {
    "text": "collecting like sign out sign up later like and the user will submit a post",
    "start": "1696830",
    "end": "1702420"
  },
  {
    "text": "request with some signup data like an email and some more some other",
    "start": "1702420",
    "end": "1708630"
  },
  {
    "text": "parameters and we want to store that into the database okay very very simple scenario",
    "start": "1708630",
    "end": "1713970"
  },
  {
    "text": "okay so we'll need to fetch data sign-up",
    "start": "1713970",
    "end": "1721470"
  },
  {
    "text": "data from party and we'll need to write their time in to dine ability we have",
    "start": "1721470",
    "end": "1729000"
  },
  {
    "text": "until use dynamo to be just with its speed simpler is no driver it's not configuration needed so it's pretty",
    "start": "1729000",
    "end": "1735330"
  },
  {
    "text": "straightforward and then we just want to return at 200 message okay or 21 that's",
    "start": "1735330",
    "end": "1742260"
  },
  {
    "text": "up to you so how do we do that well fetching the",
    "start": "1742260",
    "end": "1747540"
  },
  {
    "text": "message from the body is pretty simple you can just say Barling equal event",
    "start": "1747540",
    "end": "1753260"
  },
  {
    "text": "body we probably also want to do Jason loads because we want to get some JSON",
    "start": "1753260",
    "end": "1761010"
  },
  {
    "text": "input right so that's all you need to do we are fetching the body of the HTTP",
    "start": "1761010",
    "end": "1766380"
  },
  {
    "text": "request in there and then we'll look into how to actually write into database",
    "start": "1766380",
    "end": "1773490"
  },
  {
    "text": "but for now let's write a simple mark so we can say something like body and you",
    "start": "1773490",
    "end": "1783420"
  },
  {
    "text": "know just to test our function so if we create a new test we would probably get",
    "start": "1783420",
    "end": "1793340"
  },
  {
    "text": "and you can put like this hour but there will be some sort of jason and we'll",
    "start": "1793340",
    "end": "1801090"
  },
  {
    "text": "figure out what what the jason looks like in a second okay i'll actually",
    "start": "1801090",
    "end": "1807179"
  },
  {
    "text": "let's define it right now cuz we are writing a little text we want to we want to define it right now so i imagine that",
    "start": "1807179",
    "end": "1814700"
  },
  {
    "text": "once you get an email so let's write a simple email test and maybe we want to",
    "start": "1814700",
    "end": "1827820"
  },
  {
    "text": "optionally get a boolean for our newsletter because they are sign up for",
    "start": "1827820",
    "end": "1833100"
  },
  {
    "text": "a new platform that let's just pretend we have a newsletter",
    "start": "1833100",
    "end": "1838309"
  },
  {
    "text": "fill which is true and so this is our input and I'm escaping the strength",
    "start": "1838309",
    "end": "1846480"
  },
  {
    "text": "alligator here but not video and so this is newsletter true input okay",
    "start": "1846480",
    "end": "1856850"
  },
  {
    "text": "let's create it and test it I actually",
    "start": "1856850",
    "end": "1865110"
  },
  {
    "text": "didn't save and test it so I am printing the body just like the true email and so",
    "start": "1865110",
    "end": "1873000"
  },
  {
    "text": "we can already get something out of the body like email body our email and",
    "start": "1873000",
    "end": "1886490"
  },
  {
    "text": "newsletter newsletter but be safe and do",
    "start": "1886490",
    "end": "1894780"
  },
  {
    "text": "something like this so if the email is not in the body something will explode so let's do",
    "start": "1894780",
    "end": "1901020"
  },
  {
    "text": "something like this so it will be none by default and let's also do something",
    "start": "1901020",
    "end": "1907410"
  },
  {
    "text": "like this so it's a bit more safe but later on we'll see how to actually enforce that these parameters are in the",
    "start": "1907410",
    "end": "1915990"
  },
  {
    "text": "body of our event so for now let's give like like that sleep like is in general if we can leave our code",
    "start": "1915990",
    "end": "1926559"
  },
  {
    "text": "as soon as possible and try to leave all the validation of the input at the API layer that's what we're going to do",
    "start": "1926559",
    "end": "1932890"
  },
  {
    "text": "later you know it would simplify your code a lot so we'll talk about that in a",
    "start": "1932890",
    "end": "1938950"
  },
  {
    "text": "few in a few second cool I see some",
    "start": "1938950",
    "end": "1944409"
  },
  {
    "text": "comments maybe service asterisk star is bad okay thank you thanks Tara I think",
    "start": "1944409",
    "end": "1953169"
  },
  {
    "text": "I'll be able to show you how to actually avoid using star I know it's a very easy starting point for a lot of these cases",
    "start": "1953169",
    "end": "1960039"
  },
  {
    "text": "I will show you right now we need like five or ten minutes how to be a bit more",
    "start": "1960039",
    "end": "1966279"
  },
  {
    "text": "fine-grained when you start writing into a database or reading from from an s3",
    "start": "1966279",
    "end": "1971590"
  },
  {
    "text": "bucket for example it's not that hard I know if this light there is no help it's been hard to get started but let's",
    "start": "1971590",
    "end": "1979419"
  },
  {
    "text": "get there in a few minutes all right so what is not doing very much and there is nothing we haven't configure anything",
    "start": "1979419",
    "end": "1986830"
  },
  {
    "text": "about API so let's go and do that first of all so here on the left in the",
    "start": "1986830",
    "end": "1991990"
  },
  {
    "text": "designer panel we can just click on API gateway and configure our API so we want",
    "start": "1991990",
    "end": "1998649"
  },
  {
    "text": "to create the new one for now we will leave it open because I'm not talking",
    "start": "1998649",
    "end": "2004740"
  },
  {
    "text": "too much about the optimization authentication today by the workshop that I shared before we'll tell you all",
    "start": "2004740",
    "end": "2010860"
  },
  {
    "text": "about canítö JWT edges of web tokens and all of that so they behind his name is",
    "start": "2010860",
    "end": "2019830"
  },
  {
    "text": "fine let's use a deaf development stage",
    "start": "2019830",
    "end": "2026330"
  },
  {
    "text": "everything else is free okay so that's confirmed and we should be good to say",
    "start": "2026330",
    "end": "2039500"
  },
  {
    "text": "cool so this nice little API let's go",
    "start": "2039500",
    "end": "2045000"
  },
  {
    "text": "and see what it looks like it's actually configured you know a bit weird I want",
    "start": "2045000",
    "end": "2051118"
  },
  {
    "text": "to have an nei our clients to post something so maybe",
    "start": "2051119",
    "end": "2056970"
  },
  {
    "text": "let's go and edit this method I want to",
    "start": "2056970",
    "end": "2062520"
  },
  {
    "text": "have flex actually today I know I know",
    "start": "2062520",
    "end": "2069629"
  },
  {
    "text": "it's the default but let me show you how to create a new one so we created resource it will be signup resources web",
    "start": "2069630",
    "end": "2076950"
  },
  {
    "text": "/ signups so we want to post a new sign up in there create and then here we",
    "start": "2076950",
    "end": "2084300"
  },
  {
    "text": "create a method post confirm and here we",
    "start": "2084300",
    "end": "2091830"
  },
  {
    "text": "can pick the London function right there are different integration types by the light you know",
    "start": "2091830",
    "end": "2097440"
  },
  {
    "text": "just select along the function it's our tweet security now the default timeout is fine we want to use the lambda procs",
    "start": "2097440",
    "end": "2104670"
  },
  {
    "text": "integration that will do some magic for us it will give us of the headers the body there the pet parameter so you",
    "start": "2104670",
    "end": "2111210"
  },
  {
    "text": "define a lot the integration between API gateway Yolanda and as I mentioned",
    "start": "2111210",
    "end": "2116790"
  },
  {
    "text": "before here individually is confirming it is asking us are you sure do you want",
    "start": "2116790",
    "end": "2122610"
  },
  {
    "text": "this API to be able to invoke your function so it's creating a funding policy for API gateway to be able to",
    "start": "2122610",
    "end": "2128670"
  },
  {
    "text": "invoke a lot of action that's what we want so we are good beautiful so we are",
    "start": "2128670",
    "end": "2135000"
  },
  {
    "text": "created this lambda function if they between two Gration we can already deploy it it's in the dev environment",
    "start": "2135000",
    "end": "2144170"
  },
  {
    "text": "let's just deploy and there we go so we have this URL with the sign up",
    "start": "2144170",
    "end": "2151590"
  },
  {
    "text": "sign ups and point us try to use here I",
    "start": "2151590",
    "end": "2158040"
  },
  {
    "text": "a postman let's try to use postman to verify that everything is actually working and that",
    "start": "2158040",
    "end": "2163440"
  },
  {
    "text": "we are cooking the right endpoint so the use sign up let's just create a",
    "start": "2163440",
    "end": "2171000"
  },
  {
    "text": "collection cool",
    "start": "2171000",
    "end": "2176990"
  },
  {
    "text": "so here I'm creating a new request it's actually a post request this is the URL",
    "start": "2176990",
    "end": "2183440"
  },
  {
    "text": "is my endpoint the signups in the body I",
    "start": "2183440",
    "end": "2189040"
  },
  {
    "text": "want to pass some raw JSON so we want to",
    "start": "2189040",
    "end": "2195650"
  },
  {
    "text": "have email you know similar to what we did before and use letter trigger okay",
    "start": "2195650",
    "end": "2204470"
  },
  {
    "text": "exactly the same that we configured it's a bus request we can send it and I",
    "start": "2204470",
    "end": "2210470"
  },
  {
    "text": "expect to see a very similar output message okay right so we can keep",
    "start": "2210470",
    "end": "2218150"
  },
  {
    "text": "testing our function using postman and later on we want to test different things but for now we're good messages",
    "start": "2218150",
    "end": "2224330"
  },
  {
    "text": "okay we are working our function we are actually not returning anything special",
    "start": "2224330",
    "end": "2231170"
  },
  {
    "start": "2227000",
    "end": "2517000"
  },
  {
    "text": "so let's update our code to verify that everything is actually all right in our",
    "start": "2231170",
    "end": "2236480"
  },
  {
    "text": "tests so let's return back some new",
    "start": "2236480",
    "end": "2244460"
  },
  {
    "text": "selector the same newsletter parameter okay so with the response we want to see",
    "start": "2244460",
    "end": "2249680"
  },
  {
    "text": "hey okay we sign you up for each letter or not let's save it and if I invoke it",
    "start": "2249680",
    "end": "2256550"
  },
  {
    "text": "now with a very same data I expect to see is like a false why because in the",
    "start": "2256550",
    "end": "2262640"
  },
  {
    "text": "body oh that's fine let's see what's going on we have left first interesting over",
    "start": "2262640",
    "end": "2269270"
  },
  {
    "text": "there was a typo there was a space in here so let's fix it save it you see why",
    "start": "2269270",
    "end": "2275810"
  },
  {
    "text": "testing is important so that's the Ghanim you start there true these lies",
    "start": "2275810",
    "end": "2282290"
  },
  {
    "text": "are true so we're good we have something that works we have a public endpoint we",
    "start": "2282290",
    "end": "2287960"
  },
  {
    "text": "are in doing anything we are in posting we are invited into we are doing anything special so let's",
    "start": "2287960",
    "end": "2295070"
  },
  {
    "text": "go and do it we want to create database so let's open Diane wannabe and actually",
    "start": "2295070",
    "end": "2302230"
  },
  {
    "text": "create a new table for our signups so",
    "start": "2302230",
    "end": "2307790"
  },
  {
    "text": "twitch signups let's use email as the primary partition key okay let's",
    "start": "2307790",
    "end": "2318740"
  },
  {
    "text": "actually use the on demand capacity so we are not provisioning how many reads and how many rights we are just going to",
    "start": "2318740",
    "end": "2326390"
  },
  {
    "text": "be charged based on the amount on the number of queries and when we're going",
    "start": "2326390",
    "end": "2331880"
  },
  {
    "text": "to discuss encryption later you know encryption autonomy is enabled by default you can choose whether to add",
    "start": "2331880",
    "end": "2338180"
  },
  {
    "text": "default encryption with the master key owned by AWS or you can even provide",
    "start": "2338180",
    "end": "2343340"
  },
  {
    "text": "your own custom master key using the key management service kms let's go with the",
    "start": "2343340",
    "end": "2350240"
  },
  {
    "text": "default we are good let's create our table will take a few seconds cool",
    "start": "2350240",
    "end": "2359510"
  },
  {
    "text": "so this is the name of our table right actually the full R or table is down",
    "start": "2359510",
    "end": "2366980"
  },
  {
    "text": "here this is the full are the Amazon crystal name but for now it's kind we",
    "start": "2366980",
    "end": "2372440"
  },
  {
    "text": "can pretend that the table name is that",
    "start": "2372440",
    "end": "2378760"
  },
  {
    "text": "okay and this is what 90% of developers will do yes the table name I'm going to",
    "start": "2378760",
    "end": "2384800"
  },
  {
    "text": "use right that's a good starting point that's what most people start with so",
    "start": "2384800",
    "end": "2391040"
  },
  {
    "text": "the waiting is there anything failing okay I wouldn't prove it will request",
    "start": "2391040",
    "end": "2398960"
  },
  {
    "text": "like that either hi Burt but you never know so first of",
    "start": "2398960",
    "end": "2405410"
  },
  {
    "text": "all let's make sure that the name of table is depending on the environment so",
    "start": "2405410",
    "end": "2412250"
  },
  {
    "text": "one thing we could do is reading these table name from an environment variable",
    "start": "2412250",
    "end": "2417790"
  },
  {
    "text": "so if I do like this I take that and I did",
    "start": "2417790",
    "end": "2424430"
  },
  {
    "text": "something like terrible name value and I",
    "start": "2424430",
    "end": "2430789"
  },
  {
    "text": "can now go and read this table name and verifiable they're easily writing import",
    "start": "2430789",
    "end": "2437900"
  },
  {
    "text": "OS and I can do a start and Byron table lame okay this way I",
    "start": "2437900",
    "end": "2446960"
  },
  {
    "text": "just externalize the table name into an environment variable and if I save",
    "start": "2446960",
    "end": "2454539"
  },
  {
    "text": "everything should be cited I can test it I expect it to run good let's have some",
    "start": "2454539",
    "end": "2461589"
  },
  {
    "text": "some more print so we can make sure we're good using terrible table name okay let's see",
    "start": "2461589",
    "end": "2474410"
  },
  {
    "text": "if again let's look at the tests and we should be using the table tweet signups",
    "start": "2474410",
    "end": "2481220"
  },
  {
    "text": "and so we're just reading the we're just reading their environment particle here",
    "start": "2481220",
    "end": "2486260"
  },
  {
    "text": "nothing special I expected it to work but let's try to do something a bit more",
    "start": "2486260",
    "end": "2491289"
  },
  {
    "text": "sophisticated let's imagine we don't have one function but we have twenty functions and although that needs to",
    "start": "2491289",
    "end": "2497150"
  },
  {
    "text": "read this environment variable and we don't want to change my environment twenty of our variables give the table",
    "start": "2497150",
    "end": "2503809"
  },
  {
    "text": "changes so let's try to externalize the value of the table name into an actual",
    "start": "2503809",
    "end": "2509539"
  },
  {
    "text": "parameter so let's do that real quick so let's open the system manager console",
    "start": "2509539",
    "end": "2517460"
  },
  {
    "start": "2517000",
    "end": "2592000"
  },
  {
    "text": "here we find a lot of stuff on the left what we need is at the very bottom the",
    "start": "2517460",
    "end": "2523430"
  },
  {
    "text": "parameter store so here we can create a new parameter we can call it bridge",
    "start": "2523430",
    "end": "2530930"
  },
  {
    "text": "table name just give them under name you can choose between started a standard and advanced",
    "start": "2530930",
    "end": "2537349"
  },
  {
    "text": "parameter I will say stander is totally fine the difference is in the number of",
    "start": "2537349",
    "end": "2543910"
  },
  {
    "text": "parameters per region and the number of the size of each parameter and human the",
    "start": "2544109",
    "end": "2550240"
  },
  {
    "text": "number of current API calls that you can do to the progress or so for now we are",
    "start": "2550240",
    "end": "2555880"
  },
  {
    "text": "good with a strain here you can just string or secure string if you choose",
    "start": "2555880",
    "end": "2561369"
  },
  {
    "text": "secure string it will also be encrypted so that is best practice so let's do that and let's use the default key ID",
    "start": "2561369",
    "end": "2570790"
  },
  {
    "text": "the value is the same to each sign-ups that's a name of our table",
    "start": "2570790",
    "end": "2576220"
  },
  {
    "text": "so let's confirm it I have already the same let's just say",
    "start": "2576220",
    "end": "2586329"
  },
  {
    "text": "it was stable I did some tests yesterday and kind of the same parameter okay so",
    "start": "2586329",
    "end": "2592540"
  },
  {
    "start": "2592000",
    "end": "2867000"
  },
  {
    "text": "which table is the name of our parameter I can see the value because I have",
    "start": "2592540",
    "end": "2598000"
  },
  {
    "text": "permissions to see the value if you are just lambda developer and that's no system manager permissions you wouldn't",
    "start": "2598000",
    "end": "2606310"
  },
  {
    "text": "be able to see this value right so you can different people in the organization creating and updating parameters and",
    "start": "2606310",
    "end": "2613390"
  },
  {
    "text": "different people fetching and consuming those parameters so what needs to happen",
    "start": "2613390",
    "end": "2619000"
  },
  {
    "text": "now how do i do fetch that parameter pretty easy so in my code I can go in",
    "start": "2619000",
    "end": "2627849"
  },
  {
    "text": "here and import bottle three create an",
    "start": "2627849",
    "end": "2634240"
  },
  {
    "text": "SSM client is my X Empire and then maybe",
    "start": "2634240",
    "end": "2640030"
  },
  {
    "text": "I create a little function like a table name with a name parameter so I can do a",
    "start": "2640030",
    "end": "2649420"
  },
  {
    "text": "response as a same dot get and since I'm",
    "start": "2649420",
    "end": "2656349"
  },
  {
    "text": "really bad with remembering but the three Proctor's I already added here",
    "start": "2656349",
    "end": "2661630"
  },
  {
    "text": "open for me so this they bought the three documentation and that's what this index",
    "start": "2661630",
    "end": "2667720"
  },
  {
    "text": "looks like so we can get and the optional encryption/decryption",
    "start": "2667720",
    "end": "2672790"
  },
  {
    "text": "so let's just use that so we're safe",
    "start": "2672790",
    "end": "2679780"
  },
  {
    "text": "cool so the name of the parameter is twitch table and we want to decrypt it",
    "start": "2680740",
    "end": "2691010"
  },
  {
    "text": "because the parameter is a secure string for after so in order to be able to read",
    "start": "2691010",
    "end": "2696950"
  },
  {
    "text": "it you have to have both get parameter permissions and kms permissions here so",
    "start": "2696950",
    "end": "2704840"
  },
  {
    "text": "we'll just do that in a second and then",
    "start": "2704840",
    "end": "2710150"
  },
  {
    "text": "we can return the response value I can",
    "start": "2710150",
    "end": "2718040"
  },
  {
    "text": "index our get table name and we can do something like table name equal get",
    "start": "2718040",
    "end": "2725510"
  },
  {
    "text": "table name of the proper actually we want to do something better here right we want to use dynamic name and want to",
    "start": "2725510",
    "end": "2733790"
  },
  {
    "text": "pass that but wait the name of the parameter might be dependent on the",
    "start": "2733790",
    "end": "2739730"
  },
  {
    "text": "environment itself so we prod and in that I might want to use different",
    "start": "2739730",
    "end": "2745119"
  },
  {
    "text": "parameter names so let's do one more step let's do parameter name equal oh s and",
    "start": "2745119",
    "end": "2755690"
  },
  {
    "text": "Byron as the same name right so we can",
    "start": "2755690",
    "end": "2764420"
  },
  {
    "text": "actually go and read the name of the parameter from an environment variable and fetch it based on the environment",
    "start": "2764420",
    "end": "2771760"
  },
  {
    "text": "oops right so let's let's add the new",
    "start": "2771760",
    "end": "2777320"
  },
  {
    "text": "USSF parameter name we don't need this anymore as a cemetery",
    "start": "2777320",
    "end": "2782930"
  },
  {
    "text": "name and I'm using twitch table because that's not the name of the table that's",
    "start": "2782930",
    "end": "2788960"
  },
  {
    "text": "name of the parameter that contains lanthanum of stable it's a bit confusing but we might want to have different",
    "start": "2788960",
    "end": "2795859"
  },
  {
    "text": "products for different environments so I think this is a good trade-off between configuration and hard coding there's",
    "start": "2795859",
    "end": "2803059"
  },
  {
    "text": "not nothing I recorded clear actually so let's say you and now if I test it I",
    "start": "2803059",
    "end": "2812059"
  },
  {
    "text": "actually expected to fail because lambda this lambda function does not have permissions to to do much right so I",
    "start": "2812059",
    "end": "2820609"
  },
  {
    "text": "expect actually I have some syntax error somewhere what did I do wrong",
    "start": "2820609",
    "end": "2829690"
  },
  {
    "text": "the parameter is there it's there right let's see if it's the same so this is",
    "start": "2832210",
    "end": "2841339"
  },
  {
    "text": "real I always Parana parameter so this is like coding going",
    "start": "2841339",
    "end": "2846470"
  },
  {
    "text": "cool so still a narrower but now I get",
    "start": "2846470",
    "end": "2851809"
  },
  {
    "text": "the actual error so I am an access denied exception because they get parameter operation is failing I don't",
    "start": "2851809",
    "end": "2857900"
  },
  {
    "text": "have permission to do that so that's going to fix it let's go home down here",
    "start": "2857900",
    "end": "2865099"
  },
  {
    "text": "in the execution row and updated so this",
    "start": "2865099",
    "end": "2870530"
  },
  {
    "start": "2867000",
    "end": "3057000"
  },
  {
    "text": "is the role of my function you can do some things cannot do some other things what I want to do is I want to add",
    "start": "2870530",
    "end": "2877309"
  },
  {
    "text": "another policy so here I have a visual interface a user interface to choose",
    "start": "2877309",
    "end": "2884059"
  },
  {
    "text": "what my function could do I can select the groups that system manager service I",
    "start": "2884059",
    "end": "2893380"
  },
  {
    "text": "here I can choose which actions I want to read so it's probably going to be here somewhere and I need the get",
    "start": "2893380",
    "end": "2900589"
  },
  {
    "text": "parameter API ok how do I know it well because I know little bit about the API of the system",
    "start": "2900589",
    "end": "2907450"
  },
  {
    "text": "manager service if you don't know about it you know I can just google it and find the whole list of system manager",
    "start": "2907450",
    "end": "2914890"
  },
  {
    "text": "and exactly what's the name of the API or deduction so we want to use get",
    "start": "2914890",
    "end": "2921640"
  },
  {
    "text": "parameter and which resources well we don't want to give it access to every",
    "start": "2921640",
    "end": "2927880"
  },
  {
    "text": "parameter we want to give access to a specific resource so it's you IDI you",
    "start": "2927880",
    "end": "2936579"
  },
  {
    "text": "who was one it's well this account but now I'm lazy",
    "start": "2936579",
    "end": "2942010"
  },
  {
    "text": "and this is the name of the parameter okay so as you can see it's like a very",
    "start": "2942010",
    "end": "2949000"
  },
  {
    "text": "nice builder for me to generate the full are for my parameter it builds",
    "start": "2949000",
    "end": "2955690"
  },
  {
    "text": "everything for me I didn't need really to remember all this syntax I just need to give it the pitch table param name so",
    "start": "2955690",
    "end": "2963640"
  },
  {
    "text": "let's add that as review the policy let's call it as a sign great table",
    "start": "2963640",
    "end": "2973569"
  },
  {
    "text": "param name and let's go and create it so",
    "start": "2973569",
    "end": "2983670"
  },
  {
    "text": "if I if I go and look at the role now I",
    "start": "2983670",
    "end": "2989500"
  },
  {
    "text": "have this new in line policy so what the UI did for me is it built this nice",
    "start": "2989500",
    "end": "2996880"
  },
  {
    "text": "jason policy the adjacent statement so it was created with the visual editor",
    "start": "2996880",
    "end": "3002760"
  },
  {
    "text": "it's allowing its function to SSN get parameter for this specific resource",
    "start": "3002760",
    "end": "3008730"
  },
  {
    "text": "okay I think this is a good way to get started with building function policies",
    "start": "3008730",
    "end": "3013920"
  },
  {
    "text": "but of course you know when you get familiar it'll be much to just know the name of the option know",
    "start": "3013920",
    "end": "3019779"
  },
  {
    "text": "the structure of the resource and you can just build it manually as well but",
    "start": "3019779",
    "end": "3026169"
  },
  {
    "text": "you know I think this is a good way to get started so now it usually takes some seconds that",
    "start": "3026169",
    "end": "3033819"
  },
  {
    "text": "because I am catching I guess so let's see if we can now fetch the belly of the",
    "start": "3033819",
    "end": "3042369"
  },
  {
    "text": "parameter still some ever let's see what's in there still telling me I'm not",
    "start": "3042369",
    "end": "3049599"
  },
  {
    "text": "authorized let's try a few more times it does take some time it could be quit taking a meter up too so let's give it",
    "start": "3049599",
    "end": "3056709"
  },
  {
    "text": "some time in the meantime what we're going to do is well look at our code is not too complicated yet we are getting",
    "start": "3056709",
    "end": "3066909"
  },
  {
    "start": "3057000",
    "end": "3282000"
  },
  {
    "text": "the name of the table but we're not writing into the table yeah right so we created a table let's go and actually",
    "start": "3066909",
    "end": "3073509"
  },
  {
    "text": "ride into that table here I have some code for me to just put an item in to",
    "start": "3073509",
    "end": "3082419"
  },
  {
    "text": "dynamically so this is what this is what the API looks like but I think we are",
    "start": "3082419",
    "end": "3089649"
  },
  {
    "text": "slightly out of time so I don't want to worry with the diabetes in text so let me quickly go through it and skip this",
    "start": "3089649",
    "end": "3097630"
  },
  {
    "text": "section because I want to show you more stuff in the next 40 minutes roughly so let's pretending we are writing into",
    "start": "3097630",
    "end": "3104399"
  },
  {
    "text": "diameter billion that it works what happens is we would need to write that piece of code we will need to add a",
    "start": "3104399",
    "end": "3111249"
  },
  {
    "text": "new I am policy for put item dynam to be",
    "start": "3111249",
    "end": "3118149"
  },
  {
    "text": "API in that specific table so that's what we need to do and we need to write",
    "start": "3118149",
    "end": "3124630"
  },
  {
    "text": "an item that looks something like email and newsletter in our dynamically table I don't think that's particularly",
    "start": "3124630",
    "end": "3130299"
  },
  {
    "text": "relevant we already showed you how to create a new inline policy and how to update your code and how to quickly test",
    "start": "3130299",
    "end": "3137559"
  },
  {
    "text": "it so I want to show you some more interesting stuff let me skip that step it's not",
    "start": "3137559",
    "end": "3144609"
  },
  {
    "text": "particularly interesting so let's get into the into somehow more interesting",
    "start": "3144609",
    "end": "3152290"
  },
  {
    "text": "section I wanted to touch briefly on encryption but we do know it's encrypted",
    "start": "3152290",
    "end": "3158440"
  },
  {
    "text": "by default you can configure your own master keys if you want if you look in",
    "start": "3158440",
    "end": "3164290"
  },
  {
    "text": "the workshop that I've shared before there is an encryption and encryption model and here you'll be able to",
    "start": "3164290",
    "end": "3170710"
  },
  {
    "text": "actually enable encryption in your MySQL database okay you can configure the",
    "start": "3170710",
    "end": "3176020"
  },
  {
    "text": "database to only accept encryption connections and you know in the simple",
    "start": "3176020",
    "end": "3183070"
  },
  {
    "text": "world is a bit different basically you just have to enable it in your code and",
    "start": "3183070",
    "end": "3190650"
  },
  {
    "text": "force that every connection is encrypted with Dynamo it's a bit easier but if you",
    "start": "3190650",
    "end": "3197109"
  },
  {
    "text": "want to dive deeper into RDS encryption you can check out this module so let me go straight to the next to the next",
    "start": "3197109",
    "end": "3204130"
  },
  {
    "text": "module which is input validation so what is input validation the idea is that for",
    "start": "3204130",
    "end": "3211300"
  },
  {
    "text": "example here I am reading an email and a newsletter boolean from the body but",
    "start": "3211300",
    "end": "3219720"
  },
  {
    "text": "what if it's not there do we actually want to do something like if not email",
    "start": "3219720",
    "end": "3226619"
  },
  {
    "text": "returned 400 okay this is very boring",
    "start": "3226619",
    "end": "3233950"
  },
  {
    "text": "you know if you have 10 parameters you don't want to fill up your business logic with validation logic okay this is",
    "start": "3233950",
    "end": "3242050"
  },
  {
    "text": "something I've done hundreds of times in my life but there is a better way to do it so let's actually do something really",
    "start": "3242050",
    "end": "3248710"
  },
  {
    "text": "brave here and go back to our previous version of our super simple Python code",
    "start": "3248710",
    "end": "3254710"
  },
  {
    "text": "so here we want to give for granted that our parameters our body and our payload",
    "start": "3254710",
    "end": "3264520"
  },
  {
    "text": "we have the email and it's an email and a newsletter which is a boolean okay I",
    "start": "3264520",
    "end": "3270310"
  },
  {
    "text": "don't want to do that in my lambda code so let's save and let's do it in the API",
    "start": "3270310",
    "end": "3276790"
  },
  {
    "text": "gateway later so let me go and open the",
    "start": "3276790",
    "end": "3282400"
  },
  {
    "start": "3282000",
    "end": "3600000"
  },
  {
    "text": "API it's here so how can you do that with a negative it is a beautiful",
    "start": "3282400",
    "end": "3288369"
  },
  {
    "text": "feature called models okay in your model section here you can specify a model",
    "start": "3288369",
    "end": "3294970"
  },
  {
    "text": "that and you can mock that model to your API endpoints your API or resources and",
    "start": "3294970",
    "end": "3300849"
  },
  {
    "text": "if you get to it will do the Monday that they even put the payload validation for you actually for free you're not paying",
    "start": "3300849",
    "end": "3308470"
  },
  {
    "text": "that so your code your lambda function is not being executed if the payload is",
    "start": "3308470",
    "end": "3314170"
  },
  {
    "text": "invalid okay at scale this is very important not only for security to avoid",
    "start": "3314170",
    "end": "3319690"
  },
  {
    "text": "you know calling Junction and very nasty stuff it's also very powerful for from a",
    "start": "3319690",
    "end": "3326079"
  },
  {
    "text": "cost perspective because you don't want your functions to be executed if the payload is invalid so it's very much",
    "start": "3326079",
    "end": "3332980"
  },
  {
    "text": "scale this is very fundamental and super useful so let's actually go and see how",
    "start": "3332980",
    "end": "3340839"
  },
  {
    "text": "to do that I'm going to create a new model let's call it sign up this model",
    "start": "3340839",
    "end": "3349270"
  },
  {
    "text": "applies to application Jason content type I don't really want to describe it",
    "start": "3349270",
    "end": "3355060"
  },
  {
    "text": "but so let's do the tutorial sign up",
    "start": "3355060",
    "end": "3360240"
  },
  {
    "text": "it's a type of object and here I can specify all the different properties okay what kind of syntax are we using",
    "start": "3360240",
    "end": "3368319"
  },
  {
    "text": "here well it's just jason schema so let me find JSON schema",
    "start": "3368319",
    "end": "3375060"
  },
  {
    "text": "string so I here and that's what I can",
    "start": "3375060",
    "end": "3382569"
  },
  {
    "text": "do so actually in this train JSON schema field there is as if the body later for",
    "start": "3382569",
    "end": "3390609"
  },
  {
    "text": "an email kind of strange so I don't even have to write the email validation right",
    "start": "3390609",
    "end": "3396940"
  },
  {
    "text": "so how do we do that let me show it to you so I'm going to define a email",
    "start": "3396940",
    "end": "3404520"
  },
  {
    "text": "property of type strain and then I can",
    "start": "3404520",
    "end": "3411850"
  },
  {
    "text": "say something like format equal email",
    "start": "3411850",
    "end": "3417280"
  },
  {
    "text": "oops is that email yeah so there are",
    "start": "3417280",
    "end": "3422530"
  },
  {
    "text": "some built-in formats so if we have a date or an email address or a hostname and IP address you know these are called",
    "start": "3422530",
    "end": "3428860"
  },
  {
    "text": "JSON schema predefined types that you can just use yourself so here I define",
    "start": "3428860",
    "end": "3435340"
  },
  {
    "text": "an email property of time string for my email now you can actually say that the",
    "start": "3435340",
    "end": "3443560"
  },
  {
    "text": "email field is required so if there is no email in the payload I don't want the",
    "start": "3443560",
    "end": "3449800"
  },
  {
    "text": "request to proceed it's a required field so let's do the same for the newsletter",
    "start": "3449800",
    "end": "3458890"
  },
  {
    "text": "field we have another field called newsletter it's not uptime strain though",
    "start": "3458890",
    "end": "3465850"
  },
  {
    "text": "it's a boolean do we think we have a JSON schema boolean let's look for it",
    "start": "3465850",
    "end": "3472720"
  },
  {
    "text": "google it something yes so we have a boolean type what we need to do is is it",
    "start": "3472720",
    "end": "3478630"
  },
  {
    "text": "boolean or boolean I'm not sure sorry guys I'm not a native English speaker",
    "start": "3478630",
    "end": "3484090"
  },
  {
    "text": "I'm from Italy but yes so we can just do Thai",
    "start": "3484090",
    "end": "3490750"
  },
  {
    "text": "Leonore boolean and I also want the newsletter field to be required so",
    "start": "3490750",
    "end": "3500099"
  },
  {
    "text": "Jason's mom required is that how you say required yeah required and then just a",
    "start": "3500400",
    "end": "3511990"
  },
  {
    "text": "list cool I'm just double-checking because my memory is really bad again so",
    "start": "3511990",
    "end": "3518020"
  },
  {
    "text": "this is my schema this is my sign up model to require properties one string",
    "start": "3518020",
    "end": "3526240"
  },
  {
    "text": "formatting formatted as an email and one newsletter field which is a boolean so I",
    "start": "3526240",
    "end": "3532180"
  },
  {
    "text": "create that model and now it appears here in my models list what I can do now",
    "start": "3532180",
    "end": "3539170"
  },
  {
    "text": "is I can go into my sign ups post method",
    "start": "3539170",
    "end": "3545880"
  },
  {
    "text": "in the method request integration and here I can do something like request",
    "start": "3545880",
    "end": "3552760"
  },
  {
    "text": "validator validate body so I can update the body query string the headers so here I'm",
    "start": "3552760",
    "end": "3559150"
  },
  {
    "text": "just expected to post some jason body so what they thought is still fine I can",
    "start": "3559150",
    "end": "3564280"
  },
  {
    "text": "confirm that and then request body I add a new model here application Jason",
    "start": "3564280",
    "end": "3572609"
  },
  {
    "text": "signup model and that's it so let me",
    "start": "3572609",
    "end": "3578080"
  },
  {
    "text": "actually go and test it already I can test my post request here into a",
    "start": "3578080",
    "end": "3584440"
  },
  {
    "text": "delegate to the console if I give it an empty by you know I expected to fail I'm",
    "start": "3584440",
    "end": "3591220"
  },
  {
    "text": "actually given an invalid because body response so that's what I want if I give",
    "start": "3591220",
    "end": "3596560"
  },
  {
    "text": "it a another email like a number I",
    "start": "3596560",
    "end": "3603040"
  },
  {
    "text": "expected to fail because it's supposed to be an email if I give it a nice email",
    "start": "3603040",
    "end": "3608730"
  },
  {
    "text": "and a nice boolean like true I expect it",
    "start": "3608730",
    "end": "3616690"
  },
  {
    "text": "to go through cool of course if instead of a boolean",
    "start": "3616690",
    "end": "3622400"
  },
  {
    "text": "a strength I expected to fail so I have implemented input validation in the API",
    "start": "3622400",
    "end": "3629839"
  },
  {
    "text": "gateway layer and remember this is not only pretty cool this without doing with",
    "start": "3629839",
    "end": "3636020"
  },
  {
    "text": "two things first your code will be much simpler okay my lambda function code",
    "start": "3636020",
    "end": "3641390"
  },
  {
    "text": "here I can kind of give for granted that I will have an email and a newsletter",
    "start": "3641390",
    "end": "3647619"
  },
  {
    "text": "body payload I don't have to check for it I don't have to be super safe I like",
    "start": "3647619",
    "end": "3653119"
  },
  {
    "text": "to mess up and I don't have to add if statements and the second advantage is that you do not have to invoke your",
    "start": "3653119",
    "end": "3662150"
  },
  {
    "text": "functions just to validate the input if you are at scale and you have millions of requests every day and you want to",
    "start": "3662150",
    "end": "3669079"
  },
  {
    "text": "exclude from your costs from your budget all those requests that are about it and",
    "start": "3669079",
    "end": "3674480"
  },
  {
    "text": "maybe I gave you will do that for you so I think this is pretty cool and we can",
    "start": "3674480",
    "end": "3680119"
  },
  {
    "text": "do exactly the same if we redeploy our application our our API so I can just",
    "start": "3680119",
    "end": "3688069"
  },
  {
    "text": "redeploy it in the dev environment in the backstage and now I can just test it",
    "start": "3688069",
    "end": "3696410"
  },
  {
    "text": "exactly the same way from my postman so if I give it the right input it's fine",
    "start": "3696410",
    "end": "3702470"
  },
  {
    "text": "if I use the wrong type or if I don't give wool its passing this is",
    "start": "3702470",
    "end": "3709400"
  },
  {
    "text": "fascinating fine what's happening so let me double check",
    "start": "3709400",
    "end": "3716359"
  },
  {
    "text": "is it the right API is it the right endpoint yes yes sorry let me double",
    "start": "3716359",
    "end": "3727609"
  },
  {
    "text": "check having worked this happens we are",
    "start": "3727609",
    "end": "3733160"
  },
  {
    "text": "like coding so it's invalid let me try without an antibody here oh",
    "start": "3733160",
    "end": "3741819"
  },
  {
    "text": "you know what I'm not passing the right header so I'm supposed to pass a content type",
    "start": "3741819",
    "end": "3751710"
  },
  {
    "text": "header if I pass a content type JS",
    "start": "3751710",
    "end": "3757880"
  },
  {
    "text": "application Jason you know it will",
    "start": "3757880",
    "end": "3763890"
  },
  {
    "text": "actually be the request will be mapped to a to a to my model so what I was",
    "start": "3763890",
    "end": "3772770"
  },
  {
    "text": "doing wrong is that I wasn't passing right I was in passing any content type header and you know so something you may",
    "start": "3772770",
    "end": "3780869"
  },
  {
    "text": "want to do it is also using some kind of default model for like unknown content",
    "start": "3780869",
    "end": "3786510"
  },
  {
    "text": "types so here I am passing a body Jason body but without the right header and you",
    "start": "3786510",
    "end": "3792000"
  },
  {
    "text": "know he wasn't going through you probably don't want that so you know more advanced in area you also want to",
    "start": "3792000",
    "end": "3797460"
  },
  {
    "text": "apply the same model to other content types Ryan could be XML it could be like any",
    "start": "3797460",
    "end": "3806280"
  },
  {
    "text": "other content type or API you might be using cool so that's something I mean",
    "start": "3806280",
    "end": "3813540"
  },
  {
    "text": "tell you about another thing another and module another topic that is usage plans",
    "start": "3813540",
    "end": "3820099"
  },
  {
    "text": "over API keys or in other our use cases where you might have different API",
    "start": "3820099",
    "end": "3826500"
  },
  {
    "text": "consumers or different API clients and have different requirements or different",
    "start": "3826500",
    "end": "3833420"
  },
  {
    "text": "capabilities or different rate limits you know things like that imagine you",
    "start": "3833420",
    "end": "3838740"
  },
  {
    "text": "have different type of customers that pay a different subscription based on how many API calls they can they can",
    "start": "3838740",
    "end": "3845700"
  },
  {
    "text": "they can request per per minute per second per hour or that you want",
    "start": "3845700",
    "end": "3851670"
  },
  {
    "text": "watching a truck and do different throttling mechanisms monitoring",
    "start": "3851670",
    "end": "3856680"
  },
  {
    "text": "mechanism for different types of customers so we call those usage plans",
    "start": "3856680",
    "end": "3862020"
  },
  {
    "text": "so let me show you what it looks like on API did with you can go down here and",
    "start": "3862020",
    "end": "3867599"
  },
  {
    "text": "create even you use the user's plan so let's create it let's call it basic MMS menu we have a",
    "start": "3867599",
    "end": "3874699"
  },
  {
    "text": "basic API consumer and my advanced or premium API consumer so we can set up",
    "start": "3874699",
    "end": "3882169"
  },
  {
    "text": "different throttling mechanisms so how many requests per second you want your basic API consumer to be",
    "start": "3882169",
    "end": "3890749"
  },
  {
    "text": "able to do let's say one one is fine here and how many requests per month",
    "start": "3890749",
    "end": "3896719"
  },
  {
    "text": "do you want them to be able to do now let's say a hundred ok so this is a very basic maybe like a fruitier API",
    "start": "3896719",
    "end": "3905380"
  },
  {
    "text": "throttling configuration so you configure your your your users plan and",
    "start": "3905380",
    "end": "3912439"
  },
  {
    "text": "then you can create API key and stages so let's let's pick our API",
    "start": "3912439",
    "end": "3922759"
  },
  {
    "text": "let's mark the state environment and we're good and now that we have",
    "start": "3922759",
    "end": "3928999"
  },
  {
    "text": "configured the user's plan and mapped into the API stage we can actually go",
    "start": "3928999",
    "end": "3935299"
  },
  {
    "text": "and create API keys - you know we can give it that is to our different clients",
    "start": "3935299",
    "end": "3942049"
  },
  {
    "text": "and API consumers so we can create it we",
    "start": "3942049",
    "end": "3947689"
  },
  {
    "text": "just give it a name it could be like Alex is there a key I am personally going to use and you can either",
    "start": "3947689",
    "end": "3953979"
  },
  {
    "text": "auto-generated or provide a custom one and this is the custom one is particularly useful for example if",
    "start": "3953979",
    "end": "3960649"
  },
  {
    "text": "you're using Cognito to authenticate your API because you know you can you",
    "start": "3960649",
    "end": "3965989"
  },
  {
    "text": "can pop an API key in a user plan to a specific cognitive user or community or",
    "start": "3965989",
    "end": "3971329"
  },
  {
    "text": "client ID for example so for now let's hope to generate and I'm done so and I had this API key",
    "start": "3971329",
    "end": "3981650"
  },
  {
    "text": "API key here and it's mapped to my API",
    "start": "3981650",
    "end": "3987440"
  },
  {
    "text": "stage but my API is still open you see if I go and I'm okay now it's bothered",
    "start": "3987440",
    "end": "3994660"
  },
  {
    "text": "but if I go and invoke it with the right",
    "start": "3994660",
    "end": "3999820"
  },
  {
    "text": "payload my API is dirigible so what I want to do is update my API to request",
    "start": "3999820",
    "end": "4009730"
  },
  {
    "text": "to do to to always request an API key in the in the errors so there is a",
    "start": "4009730",
    "end": "4016360"
  },
  {
    "text": "parameter here that you can configure and I'm going to set it to true so my",
    "start": "4016360",
    "end": "4021430"
  },
  {
    "text": "API this specific API resource is going to require an API key in the request",
    "start": "4021430",
    "end": "4027130"
  },
  {
    "text": "other what otherwise it's not going to accept any requests so this is a bit of authorization and you know it's a piece",
    "start": "4027130",
    "end": "4038500"
  },
  {
    "text": "of authorization and use user plans so you can use different coupling and monitoring mechanisms for different",
    "start": "4038500",
    "end": "4044650"
  },
  {
    "text": "clients as we deploy it and now if I try",
    "start": "4044650",
    "end": "4050890"
  },
  {
    "text": "to invoke it I should get a really bad error I suppose I'm not yeah right so",
    "start": "4050890",
    "end": "4058600"
  },
  {
    "text": "I'm getting a network the deployment is done I'm getting a bigger network so what needs to happen is that I need to",
    "start": "4058600",
    "end": "4066070"
  },
  {
    "text": "pass another header which is as API key here and let me find the value of my API",
    "start": "4066070",
    "end": "4074800"
  },
  {
    "text": "I can find here show there like a cop it I use it in my X API key header and it",
    "start": "4074800",
    "end": "4085960"
  },
  {
    "text": "should now work okay so now it works I'm",
    "start": "4085960",
    "end": "4091570"
  },
  {
    "text": "using API key I have a one request per second",
    "start": "4091570",
    "end": "4097319"
  },
  {
    "text": "throttling limit and I have 100 API requests",
    "start": "4097710",
    "end": "4102859"
  },
  {
    "text": "one limitation because I'm using that in Turkey",
    "start": "4102859",
    "end": "4108020"
  },
  {
    "text": "so let me actually show you that if I start running a lot of requests I'm",
    "start": "4108020",
    "end": "4114520"
  },
  {
    "text": "going to get throttled so let's just a runner functionality of postman so if I",
    "start": "4114520",
    "end": "4123798"
  },
  {
    "text": "run this new signup request and I do it",
    "start": "4123799",
    "end": "4130429"
  },
  {
    "text": "you know ten times with zero millisecond latency between each request I expect",
    "start": "4130429",
    "end": "4138639"
  },
  {
    "text": "some requests to be throttled so let's see what happened yes you see so the",
    "start": "4138639",
    "end": "4147080"
  },
  {
    "text": "request is still passed that I'm getting 200 for a little while but at some point",
    "start": "4147080",
    "end": "4153770"
  },
  {
    "text": "I'm getting at 429 which is the status code for too many requests okay so I'm",
    "start": "4153770",
    "end": "4159500"
  },
  {
    "text": "getting throttled and if I keep doing it I will actually meet the 100 requests",
    "start": "4159500",
    "end": "4168639"
  },
  {
    "text": "per month so now I'm getting 429 in more or less",
    "start": "4168639",
    "end": "4174889"
  },
  {
    "text": "all the time right I already reached 100 so more or less for another month if we",
    "start": "4174889",
    "end": "4183020"
  },
  {
    "text": "want we can try again in 31 days I'm not going to be able to invoke the API for a",
    "start": "4183020",
    "end": "4189710"
  },
  {
    "text": "month because I saturated by 100 calls okay cool so let's go to one more topic",
    "start": "4189710",
    "end": "4200889"
  },
  {
    "text": "do we have any question given time you're using get not post am i I think",
    "start": "4200889",
    "end": "4210260"
  },
  {
    "text": "I'm using post on post then maybe it was related to mine",
    "start": "4210260",
    "end": "4216980"
  },
  {
    "text": "idiot but anyway I'm doing a post right now doing volunteer quest ever cost on",
    "start": "4216980",
    "end": "4222860"
  },
  {
    "text": "the gateway if I remember correctly no ok those requests are not being charged",
    "start": "4222860",
    "end": "4229969"
  },
  {
    "text": "on individually and if somebody in the chart like a tour or",
    "start": "4229969",
    "end": "4235079"
  },
  {
    "text": "some other service friends want to confirm that checking out the pricing page I'm 90% sure that those requests",
    "start": "4235079",
    "end": "4242489"
  },
  {
    "text": "are not being charged I'm a hundred percent sure they're not charged on lambda because not let's not be executed",
    "start": "4242489",
    "end": "4248489"
  },
  {
    "text": "I need to double-check on the AP I get excited but I'm pretty sure it's not we",
    "start": "4248489",
    "end": "4258480"
  },
  {
    "text": "have another question real quick so what's the API became language yeah as",
    "start": "4258480",
    "end": "4264989"
  },
  {
    "text": "test as a pant are responded it doesn't really matter in this case I could right",
    "start": "4264989",
    "end": "4270840"
  },
  {
    "text": "now go here and change their runtime to Java or no GS or Ruby or go rewrite my",
    "start": "4270840",
    "end": "4279989"
  },
  {
    "text": "function in probably 30 seconds because it's pretty simple and everything else",
    "start": "4279989",
    "end": "4285869"
  },
  {
    "text": "the input validation the users plants plants and API keys everything else I've",
    "start": "4285869",
    "end": "4292440"
  },
  {
    "text": "shown you would be exactly the same okay so it's not really a big deal so let me",
    "start": "4292440",
    "end": "4300059"
  },
  {
    "text": "go and show you another module another concert so we have seen the secrets we",
    "start": "4300059",
    "end": "4306929"
  },
  {
    "text": "have seen input validation we are talking about encryption real quick I told you about you just plants and API",
    "start": "4306929",
    "end": "4313409"
  },
  {
    "text": "keys and throttling with API gateway and I want to tell you a bit about x-ray and",
    "start": "4313409",
    "end": "4319530"
  },
  {
    "text": "distributed tracing and monitoring so what happens is that you may have different services different lambda",
    "start": "4319530",
    "end": "4326699"
  },
  {
    "text": "functions with different triggers like maybe Sun s3 bucket is triggering a lot",
    "start": "4326699",
    "end": "4331769"
  },
  {
    "text": "less on API gateway and point is triggering another laptop and all these reef functions are reading from a",
    "start": "4331769",
    "end": "4338340"
  },
  {
    "text": "database or writing in to you know the architectural pretty sophisticated that he complex",
    "start": "4338340",
    "end": "4343640"
  },
  {
    "text": "even to chalk in your mind so having a visual way to look at architecture and",
    "start": "4343640",
    "end": "4350630"
  },
  {
    "text": "to see what's going on and which API code are failing in our production system is pretty neat it will be",
    "start": "4350630",
    "end": "4359060"
  },
  {
    "text": "beautiful right and it's actually pretty bitchin in general depending on the architecture",
    "start": "4359060",
    "end": "4364360"
  },
  {
    "text": "so there is a service called on as an x-ray or AWS x-ray that does exactly",
    "start": "4364360",
    "end": "4371600"
  },
  {
    "text": "that for you so let me show you what it looks like first of all what we need to",
    "start": "4371600",
    "end": "4377570"
  },
  {
    "text": "do is we need to enable x-ray on lamda and an Englishman on a VIP a tree and",
    "start": "4377570",
    "end": "4383450"
  },
  {
    "text": "then we want to also track what our function is doing we are invoking the parameter store or we are writing into a",
    "start": "4383450",
    "end": "4390530"
  },
  {
    "text": "time gonna be table so we want to track also those API calls it to look at our",
    "start": "4390530",
    "end": "4395590"
  },
  {
    "text": "architectural overall so let's go and do that first of all in the lambda console",
    "start": "4395590",
    "end": "4402440"
  },
  {
    "text": "I can simply enable active tracing here and this is pretty cool because I will",
    "start": "4402440",
    "end": "4411110"
  },
  {
    "text": "need x-ray put trace segments permission and x-ray put two records permission and",
    "start": "4411110",
    "end": "4416930"
  },
  {
    "text": "that is obvious web console is doing that for you automatically so this is",
    "start": "4416930",
    "end": "4421940"
  },
  {
    "text": "pretty neat but if you're doing it in your confirmation to plate remember that you need those permissions for putting",
    "start": "4421940",
    "end": "4428960"
  },
  {
    "text": "traces into x-ray so let's just enable it real quick and let me do the same on",
    "start": "4428960",
    "end": "4436640"
  },
  {
    "text": "the API via to a science so here on the stages in my dev stage there is a logs",
    "start": "4436640",
    "end": "4444410"
  },
  {
    "text": "and tracing tab where I can enable X ray",
    "start": "4444410",
    "end": "4450320"
  },
  {
    "text": "tracing so now the x-ray is able to trace your API invocations will then map",
    "start": "4450320",
    "end": "4456500"
  },
  {
    "text": "them to your other functions so we can see a PID way in our visual distributed",
    "start": "4456500",
    "end": "4462020"
  },
  {
    "text": "tracing service let's also say that that's also we deploy I believe you you",
    "start": "4462020",
    "end": "4470240"
  },
  {
    "text": "will need to be deployed so let's do it real quick now if I just live it like",
    "start": "4470240",
    "end": "4478340"
  },
  {
    "text": "that I'm going to see API a tree and lambda but again I want to see more I",
    "start": "4478340",
    "end": "4484280"
  },
  {
    "text": "want to see what my function is doing what's other services it's actually invoking so I need to do something more",
    "start": "4484280",
    "end": "4491240"
  },
  {
    "text": "I need to enable I I need to add something to my code it's nothing really",
    "start": "4491240",
    "end": "4497630"
  },
  {
    "text": "crazy but it's you know it's a couple of lines of code to be able that to make",
    "start": "4497630",
    "end": "4503480"
  },
  {
    "text": "sure that whenever we are using the SDK or if you're doing HTTP calls to",
    "start": "4503480",
    "end": "4508850"
  },
  {
    "text": "third-party services could be like another Twitter API or the Twitter API you want to track also those calls so in",
    "start": "4508850",
    "end": "4515600"
  },
  {
    "text": "your visual x-ray diagram you can see everything so in order to do that we",
    "start": "4515600",
    "end": "4522230"
  },
  {
    "text": "need to add the X ray SDK to our function code so I can't just deploy",
    "start": "4522230",
    "end": "4530570"
  },
  {
    "text": "stuff add stuff to this river here to this deployment package here so let me",
    "start": "4530570",
    "end": "4535970"
  },
  {
    "text": "actually go and use Amazon AWS cloud 9 to modify my function install the X ray",
    "start": "4535970",
    "end": "4546920"
  },
  {
    "text": "SDK and redeploy everything so here this table yes cloud nine environment",
    "start": "4546920",
    "end": "4554140"
  },
  {
    "text": "it's basically an IDE in the cloud it's already connected to the cloud yeah I am",
    "start": "4554140",
    "end": "4560120"
  },
  {
    "text": "permission to fetch resources and to do anything you want so I can see here in",
    "start": "4560120",
    "end": "4566240"
  },
  {
    "text": "the 800s resources tab some remote functions these are all my other functions in the current region and I",
    "start": "4566240",
    "end": "4573380"
  },
  {
    "text": "want to take the twig security demo function and import it into the cloud 9",
    "start": "4573380",
    "end": "4580070"
  },
  {
    "text": "environment so I'm importing it and what this will do is it will fetch everything",
    "start": "4580070",
    "end": "4586610"
  },
  {
    "text": "from that on the function so I have the template the confirmation template that",
    "start": "4586610",
    "end": "4593810"
  },
  {
    "text": "allows me to deploy this function everywhere I want and I fi have the actual code it here is",
    "start": "4593810",
    "end": "4600370"
  },
  {
    "text": "the same code we were modifying in the lab that console so what I need to do is I need to add a few lines of code here",
    "start": "4600370",
    "end": "4608250"
  },
  {
    "text": "I'm really bad with memory again so I'll copy and paste it so I need to",
    "start": "4608250",
    "end": "4614080"
  },
  {
    "text": "import the catch old function from the",
    "start": "4614080",
    "end": "4621580"
  },
  {
    "text": "x-ray has decay core and what I do I just run it okay",
    "start": "4621580",
    "end": "4626950"
  },
  {
    "text": "this catch old will basically patch both of three you will touch you know the",
    "start": "4626950",
    "end": "4632560"
  },
  {
    "text": "HTTP clients even patch everything it finds in the environment if you want to",
    "start": "4632560",
    "end": "4638350"
  },
  {
    "text": "fetch specific modules you can just say they just catch for example bottle core",
    "start": "4638350",
    "end": "4646840"
  },
  {
    "text": "okay everything we are doing here is using boto to fetch an SM parameter so I",
    "start": "4646840",
    "end": "4655720"
  },
  {
    "text": "could just fetch water for an alley okay but you know if I were using other third",
    "start": "4655720",
    "end": "4662080"
  },
  {
    "text": "party API or whatever I would want to fetch all and it does everything for me I don't even need to configure it",
    "start": "4662080",
    "end": "4668730"
  },
  {
    "text": "but this library AWS x-ray SDK is not",
    "start": "4668730",
    "end": "4674050"
  },
  {
    "text": "included in the lambda environment in the lambda image in the lambda runtime",
    "start": "4674050",
    "end": "4679360"
  },
  {
    "text": "so I need to install it then bundle everything with my code so let me do it",
    "start": "4679360",
    "end": "4685600"
  },
  {
    "text": "really quick and dirty so let me use the",
    "start": "4685600",
    "end": "4691210"
  },
  {
    "text": "console the terminal down here so I'm",
    "start": "4691210",
    "end": "4696490"
  },
  {
    "text": "going to CD into this project to its",
    "start": "4696490",
    "end": "4701500"
  },
  {
    "text": "security demo where i have my files and i'm going to install the x-ray sdk in",
    "start": "4701500",
    "end": "4707830"
  },
  {
    "text": "this folder okay there are thousands better ways to do it but i am only a few",
    "start": "4707830",
    "end": "4713740"
  },
  {
    "text": "minutes you could do this in a docker container or you could automate your",
    "start": "4713740",
    "end": "4718780"
  },
  {
    "text": "your your Packaging using AWS SEM CLI in and out",
    "start": "4718780",
    "end": "4724600"
  },
  {
    "text": "just doing it really quickly for you to kind of understand what x-ray looks like so when I'm just installing a couple of",
    "start": "4724600",
    "end": "4733270"
  },
  {
    "text": "libraries and again this will be installed in the current folder so it's a lot of stuff that we need we are",
    "start": "4733270",
    "end": "4739210"
  },
  {
    "text": "installing only two libraries but it needs a lot of stuff it doesn't matter what I can do now is just right click",
    "start": "4739210",
    "end": "4748480"
  },
  {
    "text": "here and deploy okay cloud 9 will take the whole folder bundle it into a",
    "start": "4748480",
    "end": "4756460"
  },
  {
    "text": "deployment package a zip file and deploy it to London ok let's do that again",
    "start": "4756460",
    "end": "4764080"
  },
  {
    "text": "there are different ways to do it you can use the table spring or you can use it W Sam CLI you can build your own",
    "start": "4764080",
    "end": "4770620"
  },
  {
    "text": "tooling if you have another free time I think cloud 9 is really intuitive and",
    "start": "4770620",
    "end": "4777580"
  },
  {
    "text": "you can just right-click the point so now that we have a lot of dependencies and a lot of files in our on in package",
    "start": "4777580",
    "end": "4785500"
  },
  {
    "text": "I cannot open the code in my lambda",
    "start": "4785500",
    "end": "4790719"
  },
  {
    "text": "editor anymore it's telling me the decline package is too large to enabled inline code editing but it's fine I can",
    "start": "4790719",
    "end": "4797469"
  },
  {
    "text": "keep using my cloud line environment and update my code and right click deploy",
    "start": "4797469",
    "end": "4802630"
  },
  {
    "text": "that's a simple way to do it in a real world you probably want to have a continuous integration pipeline that",
    "start": "4802630",
    "end": "4809890"
  },
  {
    "text": "when you get pushed into your repo everything gets deployed to a",
    "start": "4809890",
    "end": "4815050"
  },
  {
    "text": "development or a production environment automatically but you know it's not today's topic so let's not focus too",
    "start": "4815050",
    "end": "4821620"
  },
  {
    "text": "much time it's not waste time on it for now so I dated my code let's see if it",
    "start": "4821620",
    "end": "4830590"
  },
  {
    "text": "actually if it still works because we are like things might break internals",
    "start": "4830590",
    "end": "4836500"
  },
  {
    "text": "Rivera so let's go and find out what happened so I can check my monitoring",
    "start": "4836500",
    "end": "4843550"
  },
  {
    "text": "tab and I can open the logs in cloud watch so we can see exactly what's",
    "start": "4843550",
    "end": "4849310"
  },
  {
    "text": "happening oh there is someone who's missing here",
    "start": "4849310",
    "end": "4857150"
  },
  {
    "text": "interesting so I'm probably installing the wrong dependencies let me do that",
    "start": "4857150",
    "end": "4862650"
  },
  {
    "text": "again so we need it only has X ray SDK and",
    "start": "4862650",
    "end": "4867900"
  },
  {
    "text": "setup tools - we also need and I think",
    "start": "4867900",
    "end": "4873419"
  },
  {
    "text": "this kind of depends on the environment ago running an animus not a package let",
    "start": "4873419",
    "end": "4881159"
  },
  {
    "text": "me see what's missing",
    "start": "4881159",
    "end": "4884479"
  },
  {
    "text": "yeah no modern amen so I think it might depend on the version of tip that I'm",
    "start": "4886189",
    "end": "4893579"
  },
  {
    "text": "using that's kind of giving for granted that some packages are already in the system while some are not so let me",
    "start": "4893579",
    "end": "4901169"
  },
  {
    "text": "divide that life because I don't really know how to solve this so let's find a",
    "start": "4901169",
    "end": "4906269"
  },
  {
    "text": "good solution to that okay let's see if",
    "start": "4906269",
    "end": "4915059"
  },
  {
    "text": "that was so bad for us sorry about the life issues so let's do 15 so this here",
    "start": "4915059",
    "end": "4926300"
  },
  {
    "text": "let's see if that's enough let's redeploy it I will do you think",
    "start": "4926300",
    "end": "4935699"
  },
  {
    "text": "I'm using tip for Python 3 oh you're",
    "start": "4935699",
    "end": "4940829"
  },
  {
    "text": "right you are right so I'm actually using the wrong bit so it's assuming",
    "start": "4940829",
    "end": "4947669"
  },
  {
    "text": "some libraries are there but some libraries are not there so that's a good point let's see if it works anyway it works",
    "start": "4947669",
    "end": "4957719"
  },
  {
    "text": "anyway okay so in Python 3 10mm 34 library is there by default it's not",
    "start": "4957719",
    "end": "4963659"
  },
  {
    "text": "like I'm through fighting - obviously so I installed it for some real magic it",
    "start": "4963659",
    "end": "4969510"
  },
  {
    "text": "works anyway so I'm using feed for Python 3 and the Python to run time so",
    "start": "4969510",
    "end": "4974939"
  },
  {
    "text": "this thing happened I could just update the run time here - pilot 3 and",
    "start": "4974939",
    "end": "4981690"
  },
  {
    "text": "would have fixed it anyway but you know we're lying if I'm doing it a bit quick",
    "start": "4981690",
    "end": "4986790"
  },
  {
    "text": "and dirty so let me show you the let's do some multiplication first let's give",
    "start": "4986790",
    "end": "4995880"
  },
  {
    "text": "it another and the fold parameter just for fun cool and let's open the x-ray",
    "start": "4995880",
    "end": "5004489"
  },
  {
    "text": "console so here now x-ray is computing a",
    "start": "5004489",
    "end": "5011000"
  },
  {
    "text": "visual map of what's happening in the system so there are some clients",
    "start": "5011000",
    "end": "5016130"
  },
  {
    "text": "invoking our API gateway and as you can see is it's life some invocations failed",
    "start": "5016130",
    "end": "5022340"
  },
  {
    "text": "that's why we have this red part of the circle and if anything is working is",
    "start": "5022340",
    "end": "5029510"
  },
  {
    "text": "invoking lambda and lambda is invoking the actual lambda function so this is a lambda Service is invoking that a lambda",
    "start": "5029510",
    "end": "5036110"
  },
  {
    "text": "function so let's click in here let's filter only the requests that worked and",
    "start": "5036110",
    "end": "5044210"
  },
  {
    "text": "let's view the traces so we have one tracing here let's see what it looks",
    "start": "5044210",
    "end": "5049969"
  },
  {
    "text": "like so we have some cold start up a",
    "start": "5049969",
    "end": "5059060"
  },
  {
    "text": "name let me actually find out trace it's not super clear let me do some more",
    "start": "5059060",
    "end": "5064699"
  },
  {
    "text": "invocation let me update the map and I'm",
    "start": "5064699",
    "end": "5075710"
  },
  {
    "text": "glad we find another trace that actually worked so we have a few choices here",
    "start": "5075710",
    "end": "5082610"
  },
  {
    "text": "this is the most recent one I think so",
    "start": "5082610",
    "end": "5091489"
  },
  {
    "text": "if you remember our code let's look at the code we are we are invoke we are",
    "start": "5091489",
    "end": "5100280"
  },
  {
    "text": "fetching from SSM only the first time",
    "start": "5100280",
    "end": "5105590"
  },
  {
    "text": "that our function is invoked so if we change this and we do something like that",
    "start": "5105590",
    "end": "5111280"
  },
  {
    "text": "and we start fetching the every single application just to show you some trip interesting traces here",
    "start": "5111280",
    "end": "5118340"
  },
  {
    "text": "okay this is not recommended but if I'm fetching the system manager parameter",
    "start": "5118340",
    "end": "5124219"
  },
  {
    "text": "and every single and education I want to show you what it'll be ass API calls and",
    "start": "5124219",
    "end": "5130640"
  },
  {
    "text": "I look like so let's quickly update it let's do some more if you my calls got",
    "start": "5130640",
    "end": "5138949"
  },
  {
    "text": "it some more let's change it to true and let's do a few more cool let's go back",
    "start": "5138949",
    "end": "5150010"
  },
  {
    "text": "let's look at the service map again let's update it so in the last five",
    "start": "5150010",
    "end": "5159890"
  },
  {
    "text": "minutes all green so this is a good it is good this is nice",
    "start": "5159890",
    "end": "5165580"
  },
  {
    "text": "and now you also see a WSS the same because our function is invoking as a",
    "start": "5165580",
    "end": "5172580"
  },
  {
    "text": "same if we were also writing into diamond to be as we should have been",
    "start": "5172580",
    "end": "5177620"
  },
  {
    "text": "doing you would also see that our function would be invoking DynamoDB so let's look at some of these",
    "start": "5177620",
    "end": "5185900"
  },
  {
    "text": "traces here let's view them let's pick",
    "start": "5185900",
    "end": "5191750"
  },
  {
    "text": "one this is two minutes old so probably not but the one okay still not there so",
    "start": "5191750",
    "end": "5199159"
  },
  {
    "text": "the nice thing of this to be the tracing is that it this it takes a while to actually get into your charts that yes",
    "start": "5199159",
    "end": "5206390"
  },
  {
    "text": "that you look at this data I have a few minutes or a few hours you don't really spend your whole day in real time",
    "start": "5206390",
    "end": "5212210"
  },
  {
    "text": "watching it the traces but this is a bit more interesting I think so this is real",
    "start": "5212210",
    "end": "5217850"
  },
  {
    "text": "okay this is an invocation where there was some call started here from I don't",
    "start": "5217850",
    "end": "5227540"
  },
  {
    "text": "think it was a cold start but this the lambda total execution here this is the",
    "start": "5227540",
    "end": "5235010"
  },
  {
    "text": "function execution so there is some you know before and after overhead but you",
    "start": "5235010",
    "end": "5241070"
  },
  {
    "text": "can also see that most of the execute which is this one here the dark blue one",
    "start": "5241070",
    "end": "5246820"
  },
  {
    "text": "is actually spent fetching the SSM Proctor so this roughly 50 milliseconds",
    "start": "5246820",
    "end": "5252699"
  },
  {
    "text": "out of those 51 are being used to fetch data parameter that's why you want to",
    "start": "5252699",
    "end": "5258340"
  },
  {
    "text": "fetch the parameter only once out of your lambda handler otherwise you're adding 50 plus minus 10",
    "start": "5258340",
    "end": "5266190"
  },
  {
    "text": "milliseconds to every single application but I think it's pretty cool that you can see word where the time of your",
    "start": "5266190",
    "end": "5273340"
  },
  {
    "text": "invocation is being spent if we were writing writing into dynamo moment",
    "start": "5273340",
    "end": "5278800"
  },
  {
    "text": "reading from history and doing all sort of things you will see a lot of lines here telling you exactly which the VI",
    "start": "5278800",
    "end": "5285639"
  },
  {
    "text": "call to which service was being involved so if you were doing SSM get per hour",
    "start": "5285639",
    "end": "5290860"
  },
  {
    "text": "you will see Daniel to be put on them or s3 and a get object for example and here",
    "start": "5290860",
    "end": "5299920"
  },
  {
    "text": "we're doing nothing after retrieving the parameter so we're spending roughly zero point four milliseconds recording this",
    "start": "5299920",
    "end": "5309900"
  },
  {
    "text": "JSON response in here so it's not super interesting but you can see what's going",
    "start": "5309900",
    "end": "5315100"
  },
  {
    "text": "on in your code so question is the",
    "start": "5315100",
    "end": "5320619"
  },
  {
    "text": "function if the function calls another external API can we see it - yes so",
    "start": "5320619",
    "end": "5326500"
  },
  {
    "text": "since we're doing as the X ray SDK core",
    "start": "5326500",
    "end": "5332469"
  },
  {
    "text": "touch all this would also match your your HTTP client so if you are calling",
    "start": "5332469",
    "end": "5340480"
  },
  {
    "text": "the Twitter API or if you're calling the Twilio API or some other third party",
    "start": "5340480",
    "end": "5345520"
  },
  {
    "text": "attack you will see those API calls in this visual lab as well so you here you",
    "start": "5345520",
    "end": "5352659"
  },
  {
    "text": "see another line another arrow pointing to the endpoints that your function is",
    "start": "5352659",
    "end": "5357699"
  },
  {
    "text": "invoking so that's pretty cool cool",
    "start": "5357699",
    "end": "5363340"
  },
  {
    "text": "another question lambda feet here so long interior is very useful so if",
    "start": "5363340",
    "end": "5371650"
  },
  {
    "text": "you're a startup if we have a side project there is we tear that allows you to vote lambda",
    "start": "5371650",
    "end": "5377909"
  },
  {
    "text": "roughly 1 million invocations are 100 millisecond every month for free forever",
    "start": "5377909",
    "end": "5385080"
  },
  {
    "text": "right so as you can see there are some services that are free for 12 months and",
    "start": "5385080",
    "end": "5390900"
  },
  {
    "text": "services that are free for ever up to a given quota and as you can see here it",
    "start": "5390900",
    "end": "5396190"
  },
  {
    "text": "is lambda gives you 1 million requests per month depending on the duration if",
    "start": "5396190",
    "end": "5401440"
  },
  {
    "text": "it's 200 millisecond it will be half a million invocations so it depends on the",
    "start": "5401440",
    "end": "5406989"
  },
  {
    "text": "duration of each invocation but you can do a lot I've seen startups surviving on",
    "start": "5406989",
    "end": "5413560"
  },
  {
    "text": "little desperate here maybe for a year or two until you actually reach those",
    "start": "5413560",
    "end": "5418750"
  },
  {
    "text": "one or two million invocations per month and when you do that it will be maybe a",
    "start": "5418750",
    "end": "5423760"
  },
  {
    "text": "couple of dollars so it's not that your cost will be 20 times more you just get",
    "start": "5423760",
    "end": "5429580"
  },
  {
    "text": "out of the 50s or paying a few dollars or pants depending on storage compute and so on",
    "start": "5429580",
    "end": "5434990"
  },
  {
    "text": "[Music] cool so I think we have too much time left we finished our 90 minutes I want",
    "start": "5434990",
    "end": "5445059"
  },
  {
    "text": "to remind you that most of the material Yoga steam is actually based on a public",
    "start": "5445059",
    "end": "5453039"
  },
  {
    "text": "workshop that you can find on Gita is here Amazon Tokyo /table security so check it",
    "start": "5453039",
    "end": "5460929"
  },
  {
    "text": "out it's and get up you can do all the steps I've shown you but using a relational database using a mysql or our",
    "start": "5460929",
    "end": "5469239"
  },
  {
    "text": "our database and you will see a lot more steps of our authorization with Cognito",
    "start": "5469239",
    "end": "5474900"
  },
  {
    "text": "1102 scopes and encryption in transit between lambda and and your RDS database",
    "start": "5474900",
    "end": "5483880"
  },
  {
    "text": "you will see a lot about dependency vulnerability scans maybe as part of your CID process so today we have on is",
    "start": "5483880",
    "end": "5491230"
  },
  {
    "text": "spread to service at the surface it was like a little bit of basics and best",
    "start": "5491230",
    "end": "5496780"
  },
  {
    "text": "practices are on rhythm management about input validation don't breathe don't",
    "start": "5496780",
    "end": "5503949"
  },
  {
    "text": "forget about APA Gateway models you can do it for validation for free without",
    "start": "5503949",
    "end": "5509559"
  },
  {
    "text": "hitting your lambda functions and you can also at the same time simply try your business logic code so don't forget",
    "start": "5509559",
    "end": "5516130"
  },
  {
    "text": "that it's a pretty big feature of a jacket way I hope you enjoyed the live",
    "start": "5516130",
    "end": "5521650"
  },
  {
    "text": "stream and the live coding and thank you very much for joining I'm Alex hassel",
    "start": "5521650",
    "end": "5527170"
  },
  {
    "text": "Bonnie you can find me on Twitter or LinkedIn if you have more questions that I could not take life please",
    "start": "5527170",
    "end": "5533559"
  },
  {
    "text": "just text me on Twitter text me on LinkedIn out the a bit too healthy thank everybody for joining",
    "start": "5533559",
    "end": "5540780"
  }
]