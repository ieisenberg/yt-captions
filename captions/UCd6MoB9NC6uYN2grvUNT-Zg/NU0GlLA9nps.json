[
  {
    "text": "well hello everyone thank you for coming my name is Dave Nielsen I'm with Intel specifically Intel",
    "start": "1760",
    "end": "8700"
  },
  {
    "text": "software in the Big Data technologies group and we've got a full lineup of",
    "start": "8700",
    "end": "15120"
  },
  {
    "text": "three speakers in addition to myself who are going to be introducing to you a",
    "start": "15120",
    "end": "20220"
  },
  {
    "text": "concept of large-scale deep learning with some demos and some explanations of",
    "start": "20220",
    "end": "26970"
  },
  {
    "text": "how things work within the SPARC ecosystem in particular we have Tim and",
    "start": "26970",
    "end": "33059"
  },
  {
    "text": "suji who are from elephant scale they have been working in the SPARC ecosystem",
    "start": "33059",
    "end": "39600"
  },
  {
    "text": "for quite some time written books do training consulting all of the above and",
    "start": "39600",
    "end": "45260"
  },
  {
    "text": "our contributors to the big-deal project that you'll learn about and also we have",
    "start": "45260",
    "end": "50579"
  },
  {
    "text": "Alex Cullinan he's the VP of AI and machine learning over at seismic and he",
    "start": "50579",
    "end": "56699"
  },
  {
    "text": "has been involved in quite a few image recognition projects and together we put",
    "start": "56699",
    "end": "62129"
  },
  {
    "text": "together this presentation along with some content some Jupiter notebooks such demos and that kind of thing so that you",
    "start": "62129",
    "end": "69479"
  },
  {
    "text": "can go back and try some of this at home and so without any further ado I'm gonna",
    "start": "69479",
    "end": "74549"
  },
  {
    "text": "go ahead and just turn it over to Tim and then after that will be Alex and then following that will be suji",
    "start": "74549",
    "end": "80100"
  },
  {
    "text": "so Tim jump on up here I'll turn over to you hi thanks Dave so yeah we're gonna",
    "start": "80100",
    "end": "89700"
  },
  {
    "text": "be talking today about large scale deep learning with big deal and so I'm Tim",
    "start": "89700",
    "end": "95280"
  },
  {
    "text": "Fox I work for elephant scale we do consulting training and contributing to",
    "start": "95280",
    "end": "102570"
  },
  {
    "text": "big DL as well I background in data engineering data science so that's about",
    "start": "102570",
    "end": "107640"
  },
  {
    "text": "me elephant scale we do workshops training in big data and AI we do consulting as",
    "start": "107640",
    "end": "113970"
  },
  {
    "text": "well we focus on especially on machine learning and deep learning on big data",
    "start": "113970",
    "end": "120149"
  },
  {
    "text": "platforms like Hadoop and spark so ok so gonna give you a quick roundup of AI and",
    "start": "120149",
    "end": "126869"
  },
  {
    "text": "machine learning and deep learning I'm sure this is to review for almost everybody here obviously you know AI is",
    "start": "126869",
    "end": "132030"
  },
  {
    "text": "a general general term talking about intelligent tasks machine learning is a subset of AI",
    "start": "132030",
    "end": "138599"
  },
  {
    "text": "that talks about being able to learn from data without being explicitly programmed and deep learning uses neural",
    "start": "138599",
    "end": "144390"
  },
  {
    "text": "networks to solve some hard problems it's a subset of machine learning so some of the applications that we",
    "start": "144390",
    "end": "149879"
  },
  {
    "text": "associate with deep learning are you know things like image recognition self-driving cars",
    "start": "149879",
    "end": "156420"
  },
  {
    "text": "the facial face recognition other kind of similar problems so now you know neural networks have",
    "start": "156420",
    "end": "162389"
  },
  {
    "text": "been with us a long time you know but there's there were some reasons why the past those didn't necessarily work as",
    "start": "162389",
    "end": "168989"
  },
  {
    "text": "well you know do to compute power in sufficiently size the training sets lack of parallelization so now we're kind of",
    "start": "168989",
    "end": "175769"
  },
  {
    "text": "in a renaissance of deep learning because now we have the the kind of the culmination of big data for what it",
    "start": "175769",
    "end": "181349"
  },
  {
    "text": "gives us the ability to train our models you know we have a big compute based on the cloud ecosystem that we have today",
    "start": "181349",
    "end": "187680"
  },
  {
    "text": "and on AWS we're able to able to in a very affordable and flexible way be able",
    "start": "187680",
    "end": "193709"
  },
  {
    "text": "to acquire the compute resources that we need to be successful in deep learning so we're sure many of you are familiar",
    "start": "193709",
    "end": "199650"
  },
  {
    "text": "with the the AI software ecosystem so in terms of machine learning we have great",
    "start": "199650",
    "end": "205919"
  },
  {
    "text": "libraries like scikit-learn welcome howdy T cetera and in terms of distributed we have SPARC ml ml Lib and",
    "start": "205919",
    "end": "212549"
  },
  {
    "text": "h2o that allow us to distribute that to scale in terms of deep learning you know we have frameworks like a 10 servo",
    "start": "212549",
    "end": "219359"
  },
  {
    "text": "Theano cafe etc and many others that are focused on deep learning as well and in",
    "start": "219359",
    "end": "225090"
  },
  {
    "text": "terms of deep learning at scale we're gonna be talking about that primarily we feel like big DL is it our open source",
    "start": "225090",
    "end": "231359"
  },
  {
    "text": "project has so unique space there but there are other frameworks that are working in that distributed deep learning as well so machine learning and",
    "start": "231359",
    "end": "239819"
  },
  {
    "text": "Big Data so now you know a lot of the machine learning work that's been done in the past has been focused on kind of single single computer resources we know",
    "start": "239819",
    "end": "247319"
  },
  {
    "text": "kind of vertical scalability a lot of our you know popular libraries tend to be more single node base or have very",
    "start": "247319",
    "end": "253079"
  },
  {
    "text": "limited ability to distribute but you know the big data ecosystem of course is designed around kind of massive",
    "start": "253079",
    "end": "259289"
  },
  {
    "text": "parallelization and just trimming our data on a cluster so here are some of",
    "start": "259289",
    "end": "265229"
  },
  {
    "text": "the modern deep learning frameworks we've mentioned before like tensorflow torch MX net Karis",
    "start": "265229",
    "end": "270479"
  },
  {
    "text": "theano cafe etc and of course we're gonna be talking about big DL so some of the tools that we have here for scalable",
    "start": "270479",
    "end": "278370"
  },
  {
    "text": "Big Data of course is apache spark and on top of hacci spartacus ml lib which is going to give a scalable machine",
    "start": "278370",
    "end": "284879"
  },
  {
    "text": "learning although not necessarily deep learning now big dl we're talking about today is going to bring deep learning",
    "start": "284879",
    "end": "290189"
  },
  {
    "text": "apache spark of course tensorflow and many other many other frameworks are allow us to do deep learning as well so",
    "start": "290189",
    "end": "297500"
  },
  {
    "text": "Amazon machine learning I'm sure as many of you hear this conference are familiar with it'll give us a lot of ready to go",
    "start": "297500",
    "end": "303360"
  },
  {
    "text": "algorithms etc okay so let's talk about big deal so it is a deep learning",
    "start": "303360",
    "end": "308669"
  },
  {
    "text": "library for Apache spark so it gives us feature parity with a lot of the deep learning frameworks that you're already",
    "start": "308669",
    "end": "314039"
  },
  {
    "text": "familiar with like tensorflow cafe torch etc and it can but importantly it can scale the huge data sets built on top of",
    "start": "314039",
    "end": "320759"
  },
  {
    "text": "the ecosystem of apache spark and hadoop so when we build a production ml deep",
    "start": "320759",
    "end": "327240"
  },
  {
    "text": "learning assistive it can be quite complex and the actual machine learning or deep learning piece we can kind of",
    "start": "327240",
    "end": "332699"
  },
  {
    "text": "see there in the middle there that is in some ways some of the most interesting part but in terms of our orchestration or whatever a lot in in terms of the",
    "start": "332699",
    "end": "339330"
  },
  {
    "text": "volume of code not necessarily the biggest or most complex so you know",
    "start": "339330",
    "end": "344669"
  },
  {
    "text": "dealing with that scalability of deep learning we have to go in and and it",
    "start": "344669",
    "end": "350370"
  },
  {
    "text": "consider that so big dl is designed to fill the gap between big data and deep",
    "start": "350370",
    "end": "356819"
  },
  {
    "text": "learning so going to give us the sending compute to data etc and using the data",
    "start": "356819",
    "end": "361889"
  },
  {
    "text": "locality that we talk about in terms of big data on HDFS s3 and other other",
    "start": "361889",
    "end": "367289"
  },
  {
    "text": "distributed file systems and allows us to use cluster managers like yarn mezzos etcetera now big dl sits on top of spark",
    "start": "367289",
    "end": "374940"
  },
  {
    "text": "so it allows us to use that resource like in-memory compute integrates with",
    "start": "374940",
    "end": "381060"
  },
  {
    "text": "spark in a lib and streaming and and other spark resources allows us to do",
    "start": "381060",
    "end": "386069"
  },
  {
    "text": "easy development with jupiter notebook so comparing with other frameworks like tensor flow one of the advantages that",
    "start": "386069",
    "end": "391889"
  },
  {
    "text": "we have here with big deal is the fact that it can run natively on SPARC and Hadoop labeled to be scalable across",
    "start": "391889",
    "end": "397139"
  },
  {
    "text": "massive clusters and of cron massive datasets so again big deal was gonna provide the big",
    "start": "397139",
    "end": "404129"
  },
  {
    "text": "compute plus big data so it's going to help us in balancing our needs for that",
    "start": "404129",
    "end": "409710"
  },
  {
    "text": "it's going to allow for massive scalability you know Hadoop is the kind of the big data platform for on-premises",
    "start": "409710",
    "end": "415469"
  },
  {
    "text": "deployment it also gonna play nicely with a big deal with other frameworks we can use our existing tensor floral cafe",
    "start": "415469",
    "end": "421949"
  },
  {
    "text": "models at scale in big DL we can also explore export our models from big DL desert Valon cafe so some of the use",
    "start": "421949",
    "end": "429449"
  },
  {
    "text": "cases of course we can use big deal for fraud detection sediment analysis image recognition many other use cases we have",
    "start": "429449",
    "end": "435389"
  },
  {
    "text": "a a repository there that which has a number of use cases here on a big deal",
    "start": "435389",
    "end": "441569"
  },
  {
    "text": "so okay so a lot of people ask us about GPUs and CPUs so GPUs of course have",
    "start": "441569",
    "end": "447599"
  },
  {
    "text": "been very successful for deep learning performance CPU in the past wasn't vectorized and not optimized for",
    "start": "447599",
    "end": "453870"
  },
  {
    "text": "parallel compute but Intel modern xeon processors have vectorized linear algebra that have been",
    "start": "453870",
    "end": "459270"
  },
  {
    "text": "able to approach the speed of GPUs so the Intel math kernal library is what's",
    "start": "459270",
    "end": "464699"
  },
  {
    "text": "been able de lot of that in a performance efficiency and tuning to happen so and you can see that Intel's",
    "start": "464699",
    "end": "472529"
  },
  {
    "text": "been doing a lot of work in terms of tuning libraries this is actually an example from Caffe but it is a",
    "start": "472529",
    "end": "478830"
  },
  {
    "text": "applicable to big deal as well showing the performance improvements that we've seen in recent years in terms of tuning",
    "start": "478830",
    "end": "484860"
  },
  {
    "text": "deep learning to CPU based performance now on big data we want to be able to run our we want to be able to run our",
    "start": "484860",
    "end": "491580"
  },
  {
    "text": "deep learning models on our existing Hadoop and spark clusters so then able to do that we can't always rely on",
    "start": "491580",
    "end": "497400"
  },
  {
    "text": "having GPU resources available so big dl is tuned to run very effectively on cpu",
    "start": "497400",
    "end": "504810"
  },
  {
    "text": "based resources so ok so when we're running big dl we know a lot of your",
    "start": "504810",
    "end": "510360"
  },
  {
    "text": "developers we want to make it as easy as possible to have you get started there so we have several different options we have a docker container available that",
    "start": "510360",
    "end": "516268"
  },
  {
    "text": "you can get from docker hub we have a VM sandbox that you can download as well we'll get you ready to go as a developer",
    "start": "516269",
    "end": "522779"
  },
  {
    "text": "we also have an Amazon ami including Dave will tell you later about free credit that you can use to try out big",
    "start": "522779",
    "end": "528690"
  },
  {
    "text": "deal ok so I'm going to give a brief demo here on what we have for",
    "start": "528690",
    "end": "534290"
  },
  {
    "text": "a brief demo here on what we have for big dl and i show you a few examples before turning things over to my",
    "start": "534290",
    "end": "540649"
  },
  {
    "text": "colleague Alex here who's going to be is going to be demonstrating a few other",
    "start": "540649",
    "end": "546709"
  },
  {
    "text": "things so let me get this going here alright and you switch this over to",
    "start": "546709",
    "end": "554620"
  },
  {
    "text": "alright so I'm trying to switch this over to sorry there we go",
    "start": "555850",
    "end": "561500"
  },
  {
    "text": "alright so let me get actually - I'm gonna get actually to what I'm gonna demonstrate here okay so this is",
    "start": "561500",
    "end": "568490"
  },
  {
    "text": "actually one of the examples that I have heat we have here in our repository that link we're going to be giving you it is",
    "start": "568490",
    "end": "574910"
  },
  {
    "text": "based on a I haven't show you several examples many of you may be familiar with the you may be familiar with the",
    "start": "574910",
    "end": "582589"
  },
  {
    "text": "IRS data set which is a simple example that we're going to demonstrate here so let me go ahead and show you this so",
    "start": "582589",
    "end": "590209"
  },
  {
    "text": "this data set here is going to shoot without show with several examples and",
    "start": "590209",
    "end": "598569"
  },
  {
    "text": "so this is actually showing from big DL so you can see here that we have some",
    "start": "599170",
    "end": "604279"
  },
  {
    "text": "parameters here in the notebook this is a learning rate training epochs etc so showing that and we in this for this",
    "start": "604279",
    "end": "612019"
  },
  {
    "text": "particular layer we have a four input dimensions we have three output classes",
    "start": "612019",
    "end": "617750"
  },
  {
    "text": "and we running with that on a simple feed-forward neural network that looks like this you know we have an input layer then we have a single hidden layer",
    "start": "617750",
    "end": "624829"
  },
  {
    "text": "feed-forward and then we have a softmax layer on the end so so so what we're",
    "start": "624829",
    "end": "632329"
  },
  {
    "text": "gonna do is we're going to go ahead and size the hidden layers so you know we're actually in this case we have a small",
    "start": "632329",
    "end": "637880"
  },
  {
    "text": "data set here and we can go ahead and use some some simple rules of thumb here",
    "start": "637880",
    "end": "642889"
  },
  {
    "text": "to say okay so you know we'll size the hidden layers appropriately and then we're going to use spark to actually",
    "start": "642889",
    "end": "649760"
  },
  {
    "text": "load the iris training and test data sets into spark data frames so that's",
    "start": "649760",
    "end": "655790"
  },
  {
    "text": "what we're gonna do and we're going to then convert those smart data frames to our tdys that you can see there we're",
    "start": "655790",
    "end": "663680"
  },
  {
    "text": "gonna look at our class data set we can see here that if you're familiar with the iris data set we're looking at three out three labels here",
    "start": "663680",
    "end": "670500"
  },
  {
    "text": "Satoshi virginica and versicolor and then we're going to look at what the data looks like here now what we're",
    "start": "670500",
    "end": "676350"
  },
  {
    "text": "gonna do is in big deal we're gonna set up our network so notice here that we're setting up a single hidden layer with",
    "start": "676350",
    "end": "682470"
  },
  {
    "text": "reloj activation and then we're going to set a output layer using softmax because we have three output classes so then",
    "start": "682470",
    "end": "690630"
  },
  {
    "text": "what we're gonna do is we're going to train the model so here's how we do that we have a optimizer here which is going",
    "start": "690630",
    "end": "697080"
  },
  {
    "text": "to going to use a degrade here with our learning rate etc we're also then going",
    "start": "697080",
    "end": "703230"
  },
  {
    "text": "to set our validation logic here for that model and we're going to output the",
    "start": "703230",
    "end": "708390"
  },
  {
    "text": "results here which we're gonna then view be able to view those results in tensor boards and more to demonstrate that in a",
    "start": "708390",
    "end": "713550"
  },
  {
    "text": "minute and let me just give ahead a little bit so then let's look at our results so we",
    "start": "713550",
    "end": "719310"
  },
  {
    "text": "show our we have a curve here which shows our loss during training we're also going to look at our top one",
    "start": "719310",
    "end": "725610"
  },
  {
    "text": "accuracy here during training as well so there is that so then we're going to see",
    "start": "725610",
    "end": "731160"
  },
  {
    "text": "our visualizations on tensor board so give me a second here yeah so and so",
    "start": "731160",
    "end": "738330"
  },
  {
    "text": "we're gonna load that on tensor board there so yeah so you can see here now we are running on tensor board of course",
    "start": "738330",
    "end": "744750"
  },
  {
    "text": "tensor board is part of the part of the tensor flow project however we use it as",
    "start": "744750",
    "end": "750540"
  },
  {
    "text": "well and big yell because it's awesome for doing visualizations and that kind of thing so you can see here that we",
    "start": "750540",
    "end": "757140"
  },
  {
    "text": "have more visualizations on the weights etc finally we look at the results here so you can see the result on this here",
    "start": "757140",
    "end": "764730"
  },
  {
    "text": "we have a confusion matrix here so you see we had actually won miss classification that we have here the",
    "start": "764730",
    "end": "771839"
  },
  {
    "text": "prediction accuracy here is I think 96% so we have that as well so okay so that",
    "start": "771839",
    "end": "777600"
  },
  {
    "text": "you saw the the kind of iris example running on the RTD based API now those",
    "start": "777600",
    "end": "783270"
  },
  {
    "text": "of you who are familiar with the SPARC ml 2.0 pipeline API we also have an",
    "start": "783270",
    "end": "790290"
  },
  {
    "text": "interface for that that uses the transformer and estimator interface so I'm going to go ahead and show you that",
    "start": "790290",
    "end": "796650"
  },
  {
    "text": "here so notice that we have a similar setup here where we're setting up our parameter",
    "start": "796650",
    "end": "801660"
  },
  {
    "text": "here for input classes output the input the input classes output classes etc now",
    "start": "801660",
    "end": "808530"
  },
  {
    "text": "notice here we're setting up vector assembler and a pipeline following a similar pattern for those of you are",
    "start": "808530",
    "end": "814050"
  },
  {
    "text": "familiar with spark ml so the cool thing about the pipeline API is that it will fit very well in your current spark ml",
    "start": "814050",
    "end": "820950"
  },
  {
    "text": "pipelines those of you are familiar with spark ml you probably recognize this a vector assembler standard scalar",
    "start": "820950",
    "end": "826220"
  },
  {
    "text": "pipelines etc the cool thing about big DL is it will plug directly into that so",
    "start": "826220",
    "end": "831510"
  },
  {
    "text": "you can go ahead and use that as part of your current pipelines and there's a lot of great infrastructure available for",
    "start": "831510",
    "end": "837990"
  },
  {
    "text": "that on as part of spark ml so okay",
    "start": "837990",
    "end": "844800"
  },
  {
    "text": "so once we did that we're just going to set up similar how we did before we're gonna set up our our layers here using",
    "start": "844800",
    "end": "850950"
  },
  {
    "text": "the DL classifier a task which is the it is going to implement the transformer interface within spark ml then we're",
    "start": "850950",
    "end": "858390"
  },
  {
    "text": "going to go ahead and set our our training parameters here and we're gonna go ahead and call fit method along the",
    "start": "858390",
    "end": "865350"
  },
  {
    "text": "model which is then going to fit that on our training set and get a classification model so okay so then",
    "start": "865350",
    "end": "873540"
  },
  {
    "text": "once we do that we can go ahead and get our output you can see there there's an hour prediction column which is going to",
    "start": "873540",
    "end": "879450"
  },
  {
    "text": "give our prediction for what the output class is going to be then we're also going to we're going to then do our",
    "start": "879450",
    "end": "887010"
  },
  {
    "text": "precision recall AUC area under curve calculate precision recall accuracy etc",
    "start": "887010",
    "end": "892590"
  },
  {
    "text": "and do other kind of similar metrics that we would normally do on a machine learning problem like this similar to",
    "start": "892590",
    "end": "898020"
  },
  {
    "text": "what we just did on the previous example and then we'll look at we can look at the accuracy and confusion matrix there",
    "start": "898020",
    "end": "905190"
  },
  {
    "text": "as well so okay so that is so this is",
    "start": "905190",
    "end": "910410"
  },
  {
    "text": "showing it you know here how we can do this with a very simple data set for iris now a lot of you are probably",
    "start": "910410",
    "end": "915660"
  },
  {
    "text": "thinking you know that's great for iris but iris is a pretty trivial data set you know how could we use big DL for",
    "start": "915660",
    "end": "921090"
  },
  {
    "text": "something a little bit more interesting so alex is actually going to be coming up shortly to show you that but I also",
    "start": "921090",
    "end": "926250"
  },
  {
    "text": "wanted to illustrate one more example as well of course all these examples are available on the github that you'll have",
    "start": "926250",
    "end": "932100"
  },
  {
    "text": "access to and you can play with I'm going to show you an example on a credit card fraud detection so let",
    "start": "932100",
    "end": "939660"
  },
  {
    "text": "me go ahead and bring that up here okay so we're gonna see another feat this is gonna be another feed-forward Network",
    "start": "939660",
    "end": "944910"
  },
  {
    "text": "again now we do support you know other many other types of networks you're gonna see our Alex is going to show you",
    "start": "944910",
    "end": "951210"
  },
  {
    "text": "a convolutional example and of course we have LST M's and RN and many other types",
    "start": "951210",
    "end": "956220"
  },
  {
    "text": "again this is another people were Network just for the sake of simplicity and we're gonna look at this for a credit card fraud data set where we're",
    "start": "956220",
    "end": "963030"
  },
  {
    "text": "going to then use this feed-forward network on some PC aid for credit card fraud data in order to do a a prediction",
    "start": "963030",
    "end": "971610"
  },
  {
    "text": "a prediction task classification task for this so you can see our dimension C here for that data set so okay so here",
    "start": "971610",
    "end": "980550"
  },
  {
    "text": "is our notebook you know again we're going to be important doing all of our imports with big DL we're gonna be setting up our parameters here for our",
    "start": "980550",
    "end": "987480"
  },
  {
    "text": "learning you know notice our parameters here batch size and ten thousand we're setting up our our or our layers here",
    "start": "987480",
    "end": "994140"
  },
  {
    "text": "for parameters here for number of inputs number of output classes in this case is binary so this - we're gonna have ten",
    "start": "994140",
    "end": "1000730"
  },
  {
    "text": "ten neurons and our hidden layer and so we're gonna go ahead and actually again",
    "start": "1000730",
    "end": "1006980"
  },
  {
    "text": "kind of illustrate how we came up with that number etc I'm not gonna go too far into that in the short period of time",
    "start": "1006980",
    "end": "1012650"
  },
  {
    "text": "that we have now and so now what we're gonna do is we're going to resize their",
    "start": "1012650",
    "end": "1018530"
  },
  {
    "text": "hidden layers now again we're going to be loading our input dataset into a spark data frame and we're going to be",
    "start": "1018530",
    "end": "1024770"
  },
  {
    "text": "selecting you know call right UM's of interest out of there just to illustrate what we have here again in this case you",
    "start": "1024770",
    "end": "1031040"
  },
  {
    "text": "can see the summary statistics on that particular dataset so then what we're",
    "start": "1031040",
    "end": "1037459"
  },
  {
    "text": "gonna do is we're going to look at the class frequency now in this case we actually have the vast majority of our",
    "start": "1037459",
    "end": "1044449"
  },
  {
    "text": "transaction classes here are normal rather than fraud which I hope at most banks that is the case I'd hate to think",
    "start": "1044449",
    "end": "1050450"
  },
  {
    "text": "that there's a lot of fraud transactions we are going to take that kind of you know that kind of imbalance in the",
    "start": "1050450",
    "end": "1056120"
  },
  {
    "text": "training into account in terms of how we are going to do the training so again we're gonna go ahead and split here what",
    "start": "1056120",
    "end": "1061640"
  },
  {
    "text": "we're going to do is actually we're going to do training and test by adjusting by time then you know have",
    "start": "1061640",
    "end": "1067190"
  },
  {
    "text": "items past a certain time be par the test set before that is part of the training set we're now going to use",
    "start": "1067190",
    "end": "1072740"
  },
  {
    "text": "we're illustrating actually this with the RTD based API so we're gonna go ahead and do our feature extraction task",
    "start": "1072740",
    "end": "1078169"
  },
  {
    "text": "and put that there now we're going to going to set that up in in the RTD of the sample class that",
    "start": "1078169",
    "end": "1085400"
  },
  {
    "text": "we have we're going to then I'm gonna skip here to how we do our again this is",
    "start": "1085400",
    "end": "1091250"
  },
  {
    "text": "a this is a FIFO or network we're going to set up our our layers now we're going",
    "start": "1091250",
    "end": "1097100"
  },
  {
    "text": "to do our training set you know notice here we're using SPD for our our",
    "start": "1097100",
    "end": "1102409"
  },
  {
    "text": "optimization we're going through again we're going to be saving all of our logs to a directory here that we can then",
    "start": "1102409",
    "end": "1107450"
  },
  {
    "text": "look at our training metrics and everything in tensor board and we're also going to be able to do some",
    "start": "1107450",
    "end": "1114100"
  },
  {
    "text": "visualizations right here on Jupiter notebook and you can look at that as well so we have some you know we have some",
    "start": "1114100",
    "end": "1120350"
  },
  {
    "text": "some illustrations there at the end of the day we're going to then see the confusion matrix accuracy and other",
    "start": "1120350",
    "end": "1126919"
  },
  {
    "text": "numbers for this example as well so you can look there at the training theater",
    "start": "1126919",
    "end": "1133250"
  },
  {
    "text": "we can go ahead and look at tensor board to illustrate those things I think we'll",
    "start": "1133250",
    "end": "1138500"
  },
  {
    "text": "skip that for the sake of brevity here also we're gonna go ahead and look at the confusion matrix and accuracy score",
    "start": "1138500",
    "end": "1145309"
  },
  {
    "text": "there and I Ella straight the confusion matrix here and you can see here let me",
    "start": "1145309",
    "end": "1152330"
  },
  {
    "text": "have here that you know the you can see the confusion matrix there as well so",
    "start": "1152330",
    "end": "1158020"
  },
  {
    "text": "alright so that actually brings me to the end of my demo so you can see here what we have is we actually have our I",
    "start": "1158020",
    "end": "1166610"
  },
  {
    "text": "actually have this currently running here in dr. container where we're all set up and you can actually look at",
    "start": "1166610",
    "end": "1172700"
  },
  {
    "text": "these notebooks that are here as part of that including the three examples I just showed you these are those so you notice",
    "start": "1172700",
    "end": "1179870"
  },
  {
    "text": "we have a number of feed-forward examples this is what I've looked at as well as other types of networks now I'm",
    "start": "1179870",
    "end": "1185030"
  },
  {
    "text": "going to turn this over to Alex now so alex is going to be going over a image",
    "start": "1185030",
    "end": "1193640"
  },
  {
    "text": "recognition example using a convolutional layers and integrate that with big deal so we'll go ahead I will",
    "start": "1193640",
    "end": "1199780"
  },
  {
    "text": "either will actually I think well in my case do you have any questions we'll save those for the end and so and",
    "start": "1199780",
    "end": "1205510"
  },
  {
    "text": "go ahead and do that but anyway I'm gonna bring up Alex now to take it from here so thank you Tim do you know how to",
    "start": "1205510",
    "end": "1212800"
  },
  {
    "text": "sleep talk to the presentation there no",
    "start": "1212800",
    "end": "1225280"
  },
  {
    "text": "there are four buttons here we'll figure it out okay thank you Tim talked about",
    "start": "1225280",
    "end": "1237010"
  },
  {
    "text": "big deal in general how to apply deep learning and actual libraries for different examples in the next 10-15",
    "start": "1237010",
    "end": "1244210"
  },
  {
    "text": "minutes I'll talk to you about a classical example of what usually think about when you talk about deep learning",
    "start": "1244210",
    "end": "1250690"
  },
  {
    "text": "which is image recognition and how we can implement and what kind of designs",
    "start": "1250690",
    "end": "1255850"
  },
  {
    "text": "we use to recognize images and how we can implement that in big deal I started",
    "start": "1255850",
    "end": "1263830"
  },
  {
    "text": "working on machine learning back in late 1990s when I was in school and doing my Master's and I remembered one of the",
    "start": "1263830",
    "end": "1271210"
  },
  {
    "text": "exciting parts at the time was I implemented a new algorithm I actually used a 32-bit API to get access to the",
    "start": "1271210",
    "end": "1279790"
  },
  {
    "text": "entire 64 megabytes of memory available on a computer at the time which made my",
    "start": "1279790",
    "end": "1284860"
  },
  {
    "text": "code run much faster but you can imagine things were much smaller and slower at the time this all began to change about",
    "start": "1284860",
    "end": "1292180"
  },
  {
    "text": "ten to eight years ago when we both got a lot more data we got much better processing power and also we got which",
    "start": "1292180",
    "end": "1299560"
  },
  {
    "text": "may be known less much better algorithms so it was more difficult to train neural",
    "start": "1299560",
    "end": "1305920"
  },
  {
    "text": "networks in the past because we actually didn't know how to do it efficiently and that was and that changed around 2006",
    "start": "1305920",
    "end": "1311910"
  },
  {
    "text": "2007 which gave this huge momentum to deep learning that we see in today and",
    "start": "1311910",
    "end": "1317910"
  },
  {
    "text": "currently I work at seismic and seismic recently combined with a company called rocket fuel and both those companies now",
    "start": "1317910",
    "end": "1325300"
  },
  {
    "text": "combined together provide intelligent marketing to advertisers and seismic runs a big chunk of internet",
    "start": "1325300",
    "end": "1332230"
  },
  {
    "text": "advertisement behind the scenes which creates a lot of demands and require for us on the execution part we've been",
    "start": "1332230",
    "end": "1340480"
  },
  {
    "text": "here with about 100 billion requests per day just to give you a sense of scale",
    "start": "1340480",
    "end": "1345670"
  },
  {
    "text": "here that's about 70 million per minute or over a million per second so that",
    "start": "1345670",
    "end": "1350920"
  },
  {
    "text": "requires us to build models that run really really fast and produce results in milliseconds on the other hand when",
    "start": "1350920",
    "end": "1358600"
  },
  {
    "text": "we train models we accumulate a lot of data necessarily at which we have to",
    "start": "1358600",
    "end": "1364240"
  },
  {
    "text": "build algorithms that work efficiently use frameworks I should spark to train on such data sets and the next few",
    "start": "1364240",
    "end": "1371200"
  },
  {
    "text": "slides I'll talk more about how we can apply the cross the spark and convolutional neural networks to design",
    "start": "1371200",
    "end": "1377500"
  },
  {
    "text": "an image recognition example using big DL a lot of you may have seen this kind",
    "start": "1377500",
    "end": "1382510"
  },
  {
    "text": "of picture when you look for deep learning on Google or anywhere else who has seen something like this these dots connected to each other great",
    "start": "1382510",
    "end": "1389440"
  },
  {
    "text": "does everyone know what they mean some",
    "start": "1389440",
    "end": "1394660"
  },
  {
    "text": "subset of people who saw this know what this means so yeah when I saw this myself for the first time this was",
    "start": "1394660",
    "end": "1400570"
  },
  {
    "text": "completely not intuitive at all to me and so I kind of gave a different presentation to this and what these dots",
    "start": "1400570",
    "end": "1406600"
  },
  {
    "text": "stand for are the current values at the network the neural network level in this",
    "start": "1406600",
    "end": "1412420"
  },
  {
    "text": "case and I'm gonna push the right button there you go the first blue level is blue blue layer is the input values we",
    "start": "1412420",
    "end": "1418870"
  },
  {
    "text": "get from the outside in this case these are actually intensities of a grayscale image just four values so you can",
    "start": "1418870",
    "end": "1424809"
  },
  {
    "text": "imagine we took an image and just took four pixels and pushed it into the network for whatever reason so we need",
    "start": "1424809",
    "end": "1430510"
  },
  {
    "text": "to calculate the values of the next layer and the way we do it is that each network every Network has weights",
    "start": "1430510",
    "end": "1438190"
  },
  {
    "text": "associated with it so each network design defines weights and in this case",
    "start": "1438190",
    "end": "1443800"
  },
  {
    "text": "in the fully connected network we use weights to calculate the next value and",
    "start": "1443800",
    "end": "1449320"
  },
  {
    "text": "the formula is actually very very simple and it's right there at the top we take each weight multiply it by the",
    "start": "1449320",
    "end": "1454720"
  },
  {
    "text": "corresponding value and sum them up that's all we really do it's a very simple formula and you'll get this",
    "start": "1454720",
    "end": "1460570"
  },
  {
    "text": "number now if we do only that we'll quickly find that this type of network",
    "start": "1460570",
    "end": "1466720"
  },
  {
    "text": "cannot really do anything interesting because if we just do linear trans formations in multiplication and",
    "start": "1466720",
    "end": "1472040"
  },
  {
    "text": "addition the linear transformations we can approximate only small number of functions so that's why Newell networks",
    "start": "1472040",
    "end": "1478640"
  },
  {
    "text": "have functions are called nonlinear functions and the most popular one used these days is called rectified linear",
    "start": "1478640",
    "end": "1484700"
  },
  {
    "text": "unit and it's again a very very simple function all it does if the value is",
    "start": "1484700",
    "end": "1490160"
  },
  {
    "text": "below zero it translates it at zero if it's positive it passes the forward unchanged so in this case the number is",
    "start": "1490160",
    "end": "1497420"
  },
  {
    "text": "negative we apply rectify linear unit we'll get zero then we repeat the same",
    "start": "1497420",
    "end": "1504590"
  },
  {
    "text": "process the same simple formula again again again for the second value its positive we have a positive value",
    "start": "1504590",
    "end": "1511030"
  },
  {
    "text": "negative value at zero and some other positive value 15 and we're done",
    "start": "1511030",
    "end": "1517580"
  },
  {
    "text": "so this layer is done they will move on to the next layer and the key point about neural networks is that the neural",
    "start": "1517580",
    "end": "1523460"
  },
  {
    "text": "networks only look backward to one layer back they doesn't care what happened beforehand here we can have two layers",
    "start": "1523460",
    "end": "1529610"
  },
  {
    "text": "or 50 layers this calculation does not really care and that allows us to create a really powerful networks that work",
    "start": "1529610",
    "end": "1537320"
  },
  {
    "text": "with more and more complex features over time as we will see in a few slides so in this case we apply the same",
    "start": "1537320",
    "end": "1542360"
  },
  {
    "text": "formula apply weights we get a negative number which becomes zero and the positive number and we're done so it",
    "start": "1542360",
    "end": "1548750"
  },
  {
    "text": "doesn't matter what these numbers mean on this particular example that will become more obvious in a few slides but",
    "start": "1548750",
    "end": "1553910"
  },
  {
    "text": "I have one quick question for you so for the first two layers how many total weights do we have here for the first",
    "start": "1553910",
    "end": "1561200"
  },
  {
    "text": "layer so we can calculate it we go from blue to the green one what's the total number of weights 16 so 4 by 4 and the",
    "start": "1561200",
    "end": "1569990"
  },
  {
    "text": "second layer from green to purple ish how many weights are there for 8 7 huh",
    "start": "1569990",
    "end": "1583660"
  },
  {
    "text": "so 8 right so to calculate the first value and the output layer we'll need four weights and then the second value",
    "start": "1583660",
    "end": "1589880"
  },
  {
    "text": "also for weight so it's basically multiply M by n how many cells you have in the first layer and how many cells in",
    "start": "1589880",
    "end": "1595100"
  },
  {
    "text": "the second layer if approximately have the same number of cells it's a quadratic function right so four and",
    "start": "1595100",
    "end": "1600410"
  },
  {
    "text": "four sixteen thousand thousand million and so on and so forth the reason why it's important is this so now we have this deep this network",
    "start": "1600410",
    "end": "1607230"
  },
  {
    "text": "that's basically is absolutely perfectly fine neural network we can use it to",
    "start": "1607230",
    "end": "1612299"
  },
  {
    "text": "recognize images and we can use it as an example this so that's what these connections and dots actually mean right",
    "start": "1612299",
    "end": "1619639"
  },
  {
    "text": "values at the nodes and the connections or weights that we used to calculate the",
    "start": "1619639",
    "end": "1625049"
  },
  {
    "text": "next value so we use this network to recognize images and in this case a very",
    "start": "1625049",
    "end": "1630720"
  },
  {
    "text": "simple image will try to use images of handwritten digits like four so four",
    "start": "1630720",
    "end": "1637139"
  },
  {
    "text": "looks to us like this but two computers a neural networks they represent it as numbers in this case it's a matrix with",
    "start": "1637139",
    "end": "1644940"
  },
  {
    "text": "most numbers zero is a black background and then you can actually make out number four in that series of numbers",
    "start": "1644940",
    "end": "1651450"
  },
  {
    "text": "and we're going to feed those numbers into the network and see if we can train it then and then it can learn to",
    "start": "1651450",
    "end": "1657090"
  },
  {
    "text": "recognize this numbers so there is only one issue with this and previously we",
    "start": "1657090",
    "end": "1664080"
  },
  {
    "text": "saw the neural network in the linear form a bunch of dots here I'm going to represent it in the form of a square so",
    "start": "1664080",
    "end": "1669299"
  },
  {
    "text": "it matches our image is more or less but it doesn't matter how you draw a layer see it's a line or you do it in the",
    "start": "1669299",
    "end": "1674820"
  },
  {
    "text": "matrix just fold in two charts exactly the same thing so the first image here the first matrix here is the input image",
    "start": "1674820",
    "end": "1681389"
  },
  {
    "text": "in the next matrix here is the first layer what we're going to do we're going",
    "start": "1681389",
    "end": "1686759"
  },
  {
    "text": "to take the input values from the image and calculate the values in the next layer just like we did a few slides ago",
    "start": "1686759",
    "end": "1692700"
  },
  {
    "text": "right so we take every single value on the input image apply weights and",
    "start": "1692700",
    "end": "1697860"
  },
  {
    "text": "calculate the first output value and then we do it again now a new set of",
    "start": "1697860",
    "end": "1704370"
  },
  {
    "text": "weights we apply to all the input values we calculate the next output value and we continue until we calculate every",
    "start": "1704370",
    "end": "1711029"
  },
  {
    "text": "single value in this layer by applying this very simple formula so nothing really changes I just changed how I draw",
    "start": "1711029",
    "end": "1717779"
  },
  {
    "text": "these things so the question that I have to you now is let's say we take 200 by",
    "start": "1717779",
    "end": "1723269"
  },
  {
    "text": "200 image which is not a huge huge image by any stretch of imagination right so",
    "start": "1723269",
    "end": "1728309"
  },
  {
    "text": "how many values will we have with the the input level if it's 200 by 200",
    "start": "1728309",
    "end": "1735779"
  },
  {
    "text": "what's the total number of and it's a grayscale image only one pixel one one number per pixel 40,000 right",
    "start": "1735779",
    "end": "1743940"
  },
  {
    "text": "let's that's the right answer so we have 40,000 values in the first",
    "start": "1743940",
    "end": "1749400"
  },
  {
    "text": "layer and we have 40,000 values in the second layer so how many connections do",
    "start": "1749400",
    "end": "1754800"
  },
  {
    "text": "we have between those layers is anybody good with zeros that would be 16 billion",
    "start": "1754800",
    "end": "1762000"
  },
  {
    "text": "or 1.6 billion I'm sorry so so just in the first two layers a planet - not a",
    "start": "1762000",
    "end": "1767940"
  },
  {
    "text": "huge image we have 1.6 values we have to keep somewhere in memory and we have to",
    "start": "1767940",
    "end": "1773760"
  },
  {
    "text": "run computation through them and it's just the first two layers now we want to do deep learning right so we want to",
    "start": "1773760",
    "end": "1779490"
  },
  {
    "text": "maybe throw like ten layers they'll be like sixteen billion values so that's",
    "start": "1779490",
    "end": "1784650"
  },
  {
    "text": "not gonna fit anywhere in any reasonable computer this today and if we could squeeze this kind of these kind of",
    "start": "1784650",
    "end": "1792240"
  },
  {
    "text": "values in the computer it will take forever to do every single pass to the network for a single image because it's",
    "start": "1792240",
    "end": "1798690"
  },
  {
    "text": "like sixteen billion values you have to calculate multiple times and so on so forth so we cannot trained really",
    "start": "1798690",
    "end": "1803820"
  },
  {
    "text": "efficiently maybe in the future we can but the problem is more fundamental sixteen billion means we have 16 billion",
    "start": "1803820",
    "end": "1810660"
  },
  {
    "text": "parameters we have to Train and if you look at a theory behind it and there are",
    "start": "1810660",
    "end": "1817290"
  },
  {
    "text": "different estimates but my rule of thumb is you should have approximately the same number of examples as you have",
    "start": "1817290",
    "end": "1823430"
  },
  {
    "text": "parameters need to train so somebody somewhere we need to come up with billions of labeled images that say this",
    "start": "1823430",
    "end": "1830430"
  },
  {
    "text": "is the car this is a giraffe this is something else the biggest data set today we have is a",
    "start": "1830430",
    "end": "1836040"
  },
  {
    "text": "called image net data set and has about 10 million images like a thousand times fewer even if you were to able to find",
    "start": "1836040",
    "end": "1843060"
  },
  {
    "text": "this data set now imagine how long will take to train this network the network is huge",
    "start": "1843060",
    "end": "1848850"
  },
  {
    "text": "the data set is huge it will be years before you get the first answer and you",
    "start": "1848850",
    "end": "1854310"
  },
  {
    "text": "won't be able to tweak your results quickly enough so that's didn't work and that's why we",
    "start": "1854310",
    "end": "1861000"
  },
  {
    "text": "invented a convolutional neural network to solve this particular problem of a huge number of values or weights if we",
    "start": "1861000",
    "end": "1868620"
  },
  {
    "text": "simply naively apply a fully connected network to images and the convolutional",
    "start": "1868620",
    "end": "1874840"
  },
  {
    "text": "neural network actually comes out of the really fascinating research done in 1964 1960s by Hubel and Wiesel",
    "start": "1874840",
    "end": "1883630"
  },
  {
    "text": "and what they did they took cats enesta sized them and then showed them different images and they connected to",
    "start": "1883630",
    "end": "1890590"
  },
  {
    "text": "some of their neurons in the brain and they measured which neurons responded to",
    "start": "1890590",
    "end": "1895600"
  },
  {
    "text": "which images and for a long time the experiment didn't work at all so",
    "start": "1895600",
    "end": "1900610"
  },
  {
    "text": "they were showing dots in different places in the neurons would not fire and then by accident they put a line drawn",
    "start": "1900610",
    "end": "1909100"
  },
  {
    "text": "on there on the glass then slid it across the field oh you of the count in the neuron fire and that's where they",
    "start": "1909100",
    "end": "1915670"
  },
  {
    "text": "discovered that that particular neuron fires only when it sees a tilted line that slides from left to right it does",
    "start": "1915670",
    "end": "1923020"
  },
  {
    "text": "not respond to anything else if you go up or down it doesn't do anything if it's not a line but a dot it doesn't do",
    "start": "1923020",
    "end": "1928270"
  },
  {
    "text": "anything that was very weird because if you think about it cats nor humans have",
    "start": "1928270",
    "end": "1934990"
  },
  {
    "text": "the line recognition neurons right we don't have a specific set neurons that recognize lines the other one recognizes cars the turn recognizes you know cats",
    "start": "1934990",
    "end": "1942010"
  },
  {
    "text": "they all the same so we'll we we know that we looked at the brain tissue of animals and humans and the all neurons",
    "start": "1942010",
    "end": "1948400"
  },
  {
    "text": "look exactly the same so how come one neuron responds to one signal and the other one to something",
    "start": "1948400",
    "end": "1954520"
  },
  {
    "text": "completely different altogether and so they designed this theory came up with the theory that neocortex in animals and",
    "start": "1954520",
    "end": "1961990"
  },
  {
    "text": "including us is hierarchical you have the layers of neurons the first near",
    "start": "1961990",
    "end": "1967150"
  },
  {
    "text": "layer responds to some really basic things like dots and light appearing the next layer responds to more complex",
    "start": "1967150",
    "end": "1973690"
  },
  {
    "text": "things like lines and circles subsequent layers respond to movements and eventually wind up with neurons that",
    "start": "1973690",
    "end": "1980170"
  },
  {
    "text": "fire when you see you know a person you know to a particular person and so we",
    "start": "1980170",
    "end": "1985930"
  },
  {
    "text": "borrowed these ideas and applied them to commotion neural networks and two ideas one is a hierarchical the other one is",
    "start": "1985930",
    "end": "1992050"
  },
  {
    "text": "the local visual cortex and local means that neurons that respond to signals in",
    "start": "1992050",
    "end": "1997660"
  },
  {
    "text": "our vision visual cortex they only cover a small area of our field so each neuron",
    "start": "1997660",
    "end": "2003810"
  },
  {
    "text": "watches only a small area of our field of view and if you shift out of it this neuron",
    "start": "2003810",
    "end": "2009180"
  },
  {
    "text": "stops responding so in other words it does not look at the whole field it looks like a small area and by looking",
    "start": "2009180",
    "end": "2015450"
  },
  {
    "text": "at these two things completely lost all the lines so one eye bill want to build",
    "start": "2015450",
    "end": "2022830"
  },
  {
    "text": "a neural network you can imagine the lines between those that is hierarchical and there are first layers respond to",
    "start": "2022830",
    "end": "2029130"
  },
  {
    "text": "very basic features but I was ago would go further along through a neural network it responds responds to more and",
    "start": "2029130",
    "end": "2035100"
  },
  {
    "text": "more complex features and eventually give us the answer is it a car or the giraffe or some other object and the two",
    "start": "2035100",
    "end": "2041910"
  },
  {
    "text": "key features in the commotion neural network that makes it different from a fully connected Network the first one is a convolution and the second one is",
    "start": "2041910",
    "end": "2048750"
  },
  {
    "text": "pulling and they're actually quite simple so convolution if you remember in",
    "start": "2048750",
    "end": "2055200"
  },
  {
    "text": "the fully connected example we had all the inputs from the first layer we applied weights to get the first value",
    "start": "2055200",
    "end": "2061169"
  },
  {
    "text": "of the next layer what the convolution does it says we're not going to do that instead we're only going to look at the",
    "start": "2061169",
    "end": "2067378"
  },
  {
    "text": "small set of pixels next to each other in this case two by two in the real",
    "start": "2067379",
    "end": "2072628"
  },
  {
    "text": "networks you typically see five by five or seven by seven but still is a very small field where PI weights to only",
    "start": "2072629",
    "end": "2079560"
  },
  {
    "text": "these pixels when we calculate the first output then we simply shift by one and",
    "start": "2079560",
    "end": "2086128"
  },
  {
    "text": "we take the next group of pixels and calculate the next output and also these",
    "start": "2086129",
    "end": "2091648"
  },
  {
    "text": "are the same weights we don't even change the weights between these channel transitions so now we just slide down",
    "start": "2091649",
    "end": "2099300"
  },
  {
    "text": "the image and we calculate the output values so we went from well in this case",
    "start": "2099300",
    "end": "2104640"
  },
  {
    "text": "would have been 15 by 15 225 weights to only 4 and then the larger measure would",
    "start": "2104640",
    "end": "2110850"
  },
  {
    "text": "have been billions away it's as you've just we've just seen it still would be only four or twenty five it's a five by",
    "start": "2110850",
    "end": "2116730"
  },
  {
    "text": "five matrix so the number of ways that we have now does not depend on the size of an image if the image is bigger we",
    "start": "2116730",
    "end": "2123420"
  },
  {
    "text": "just do slightly more calculations but the number of weights the same so that's how we solve the problem of enormous",
    "start": "2123420",
    "end": "2128970"
  },
  {
    "text": "amount of weights that we end up with in the fully connected network if you do",
    "start": "2128970",
    "end": "2135720"
  },
  {
    "text": "research you read about this you might this called as filters the filter is",
    "start": "2135720",
    "end": "2141090"
  },
  {
    "text": "basically this set of weights that we apply in this way so both are synonymous and typically is",
    "start": "2141090",
    "end": "2146730"
  },
  {
    "text": "called a filter and the second concept is pulling the pooling is just scaling",
    "start": "2146730",
    "end": "2152880"
  },
  {
    "text": "the image down so once we go through one layer of convolution but we want to scale it down and there are various algorithms to scale for example if you",
    "start": "2152880",
    "end": "2159900"
  },
  {
    "text": "go to Photoshop and you scale it there it'll apply some sophisticated algorithm in neural networks or convolution neural",
    "start": "2159900",
    "end": "2167040"
  },
  {
    "text": "networks will use a very simple algorithm where peak simply the highest value which works really well and super",
    "start": "2167040",
    "end": "2172260"
  },
  {
    "text": "easy to calculate just pick the highest value and we're done in this case we shrink the image from 4 by 4 to 2 by 2",
    "start": "2172260",
    "end": "2178230"
  },
  {
    "text": "it became much smaller and then we repeat that multiple times until we shrink our input to a very small set of",
    "start": "2178230",
    "end": "2185820"
  },
  {
    "text": "set of values and then we can apply fully connected network to that smaller set and get our classification so on the",
    "start": "2185820",
    "end": "2194130"
  },
  {
    "text": "top you can see if I apply to a number with just convolution pulling convolution pooling and then fully connected and then the answer would be",
    "start": "2194130",
    "end": "2200730"
  },
  {
    "text": "an array of only 10 values where we would see one that corresponds to an",
    "start": "2200730",
    "end": "2206100"
  },
  {
    "text": "image that our network recognized or in terms of images you can see at the bottom we take an image which is the",
    "start": "2206100",
    "end": "2211860"
  },
  {
    "text": "convolution then we shrink it another convolution we shrink it again and then we end up with with a classification for",
    "start": "2211860",
    "end": "2219780"
  },
  {
    "text": "small images we can have our simple data sets like reminisce dataset digit data",
    "start": "2219780",
    "end": "2226590"
  },
  {
    "text": "set we can have small networks and in fact this network is called Lynette 5 and it's a classical network that was",
    "start": "2226590",
    "end": "2232020"
  },
  {
    "text": "designed back in 98 and it was used by USPS to recognize digits on an envelope",
    "start": "2232020",
    "end": "2237480"
  },
  {
    "text": "so it's a production quality and neural network you can use tomorrow to recognize handwritten digits for to",
    "start": "2237480",
    "end": "2244560"
  },
  {
    "text": "recognize more complex images all we really do these days is simply add more layers so we go more and more layers",
    "start": "2244560",
    "end": "2250530"
  },
  {
    "text": "when you do more images to train but it can recognize a lot more images so I",
    "start": "2250530",
    "end": "2256620"
  },
  {
    "text": "want to show you a quick example there's a a cool sight and tried to switch",
    "start": "2256620",
    "end": "2265730"
  },
  {
    "text": "okay I need quality qualified help",
    "start": "2276740",
    "end": "2283140"
  },
  {
    "text": "so switched oh no in switch",
    "start": "2289910",
    "end": "2297500"
  },
  {
    "text": "done before how you do it can we",
    "start": "2306559",
    "end": "2313349"
  },
  {
    "text": "actually can we switch laptops here yes which",
    "start": "2313349",
    "end": "2320049"
  },
  {
    "text": "inputs here sorry something happened",
    "start": "2320049",
    "end": "2328559"
  },
  {
    "text": "maybe it's because okay we're good okay all right all right",
    "start": "2330550",
    "end": "2336599"
  },
  {
    "text": "thank you so we'll share the links up",
    "start": "2336599",
    "end": "2343619"
  },
  {
    "text": "two words so you'll be able to find this website but what it does implements a Lynette five neural network in the",
    "start": "2343619",
    "end": "2349619"
  },
  {
    "text": "browser where you can draw a digit and it will recognize it and a couple of",
    "start": "2349619",
    "end": "2354809"
  },
  {
    "text": "things I'd like to show you is the convolution so it goes through every layer the first is the input image this",
    "start": "2354809",
    "end": "2361829"
  },
  {
    "text": "is the first convolution that's pooling so same image as before just smaller and then so on so forth until wind up and",
    "start": "2361829",
    "end": "2368759"
  },
  {
    "text": "they array at the top where it makes guesses what it can be and actually here it gets incorrectly by saying eight so",
    "start": "2368759",
    "end": "2376710"
  },
  {
    "text": "this output for example if you look at this convolution it learned over time to",
    "start": "2376710",
    "end": "2383279"
  },
  {
    "text": "identify this interesting shapes like top and bottom curvy things like the ends of of these digits and what it does",
    "start": "2383279",
    "end": "2390059"
  },
  {
    "text": "and it sends this information further down the network and the network uses this information to identify the image",
    "start": "2390059",
    "end": "2395999"
  },
  {
    "text": "it's only one of the inputs but that's what this little convolution actually learned to do using only a small number",
    "start": "2395999",
    "end": "2401579"
  },
  {
    "text": "of a small filter 5x5 so if I draw a different image here let's say for you",
    "start": "2401579",
    "end": "2409950"
  },
  {
    "text": "see it still finds this interesting shaped top and bottom curvy things and",
    "start": "2409950",
    "end": "2415499"
  },
  {
    "text": "it ignores straight lines but then there's a different convolution that does find the straight vertical lines",
    "start": "2415499",
    "end": "2420960"
  },
  {
    "text": "and so all this information is being fed to higher layers and eventual Network learns to merge all these small features",
    "start": "2420960",
    "end": "2427529"
  },
  {
    "text": "and to come to a conclusion if there are so many straight lines I mean diagonal lines so many endings at the top on the",
    "start": "2427529",
    "end": "2433380"
  },
  {
    "text": "bottom then it has to be number 4 and most of the time that's correct sometime it sometimes makes mistakes but you can",
    "start": "2433380",
    "end": "2439710"
  },
  {
    "text": "train this network to be accurate to the nine point nine nine ninety nine point seven percent accuracy which is quite",
    "start": "2439710",
    "end": "2446009"
  },
  {
    "text": "remarkable for such a simple Network",
    "start": "2446009",
    "end": "2450319"
  },
  {
    "text": "oh and I have another demo okay so that was theory now I'll show",
    "start": "2455090",
    "end": "2462020"
  },
  {
    "text": "you what the code to implement all this actually looks in big DL and after did this presentation you can follow the",
    "start": "2462020",
    "end": "2468770"
  },
  {
    "text": "link so you can download the code and you can Dave will give away credits for",
    "start": "2468770",
    "end": "2474710"
  },
  {
    "text": "a my instances where we have everything pre-installed so you can experiment with it yourself and see how it works",
    "start": "2474710",
    "end": "2481960"
  },
  {
    "text": "yeah I should not have done that excellent thank you so who views Jupiter notebooks",
    "start": "2495810",
    "end": "2502800"
  },
  {
    "text": "previously okay so this this will look familiar Jupiter notebook is a basically",
    "start": "2502800",
    "end": "2508200"
  },
  {
    "text": "a web-based software that lets you run Python code inside it you can do it one cell at a time and look at the outputs",
    "start": "2508200",
    "end": "2514140"
  },
  {
    "text": "it's great for quick experimentation so here we have a setup where we're on an instance with spark installed on it big",
    "start": "2514140",
    "end": "2521190"
  },
  {
    "text": "deal and we have this Python connector just spark so the first cell is just",
    "start": "2521190",
    "end": "2526500"
  },
  {
    "text": "loading all the libraries that I need packages including big deal SC is the",
    "start": "2526500",
    "end": "2532650"
  },
  {
    "text": "spark context it's always good to run to make sure we have spark running as expected and this is our data set so M",
    "start": "2532650",
    "end": "2540240"
  },
  {
    "text": "nice data set is the data set used to measure lots of algorithms for image recognition and it comes in two parts",
    "start": "2540240",
    "end": "2546540"
  },
  {
    "text": "the training part and the test part the training part has 60,000 images 6,000 of",
    "start": "2546540",
    "end": "2554190"
  },
  {
    "text": "which image 0 1 2 3 4 5 and 60,000 labels that tell us which image that",
    "start": "2554190",
    "end": "2560340"
  },
  {
    "text": "actually is then we have a test set that has 10,000 images 1,000 H and labels and",
    "start": "2560340",
    "end": "2566790"
  },
  {
    "text": "the way we always do training and validation is we use the trade test training set to train the network or the",
    "start": "2566790",
    "end": "2574980"
  },
  {
    "text": "algorithm and then we're going to test it by using the test set but in k in that case we're not going to tell the network what actual labels are",
    "start": "2574980",
    "end": "2582690"
  },
  {
    "text": "instead it will say make a prediction and then we'll compare it over to what it's supposed to be and it's how we can",
    "start": "2582690",
    "end": "2587940"
  },
  {
    "text": "measure the accuracy and to give an idea what they did just look like they are",
    "start": "2587940",
    "end": "2593340"
  },
  {
    "text": "it's a digit 8 so it comes like this and we see it like this I will double check",
    "start": "2593340",
    "end": "2601560"
  },
  {
    "text": "the number of classes and number plus is a number of different labels that we have and we expect it to have 10 from 0",
    "start": "2601560",
    "end": "2608010"
  },
  {
    "text": "to 9 and in fact I can print them all so we have numbers 0 1 through through 9 the normalization just changes how our",
    "start": "2608010",
    "end": "2617460"
  },
  {
    "text": "values vary in the image instead of 0 to 255 I shrink it to 0.1 to 0.9 in the",
    "start": "2617460",
    "end": "2623910"
  },
  {
    "text": "simple transformation which will optimize the training you actually don't have to do it you can experiment",
    "start": "2623910",
    "end": "2629680"
  },
  {
    "text": "by not doing normalization and simply fitting the raw values it might take a bit longer to train but you should get",
    "start": "2629680",
    "end": "2636970"
  },
  {
    "text": "the same result so now prepared my values and this is what the neural",
    "start": "2636970",
    "end": "2642069"
  },
  {
    "text": "network and big deal looks like if you remember how we design one at five it has a convolution layer max pooling",
    "start": "2642069",
    "end": "2649950"
  },
  {
    "text": "convolution layer pooling and a couple of connected layers so it's a very",
    "start": "2649950",
    "end": "2655329"
  },
  {
    "text": "simple network and as you can see I have one layer commented out and in many cases we need to dip learning some of",
    "start": "2655329",
    "end": "2661809"
  },
  {
    "text": "that is up for experimentation so you might add a few layers or remove a few layers by using looking at your",
    "start": "2661809",
    "end": "2668230"
  },
  {
    "text": "particular data set and measuring the accuracy so there is no an exact answer",
    "start": "2668230",
    "end": "2673480"
  },
  {
    "text": "but there is some room for experimentation so I'm going to create this function I'm gonna run this",
    "start": "2673480",
    "end": "2679569"
  },
  {
    "text": "function so when I run it it creates this neural network in memory on this spark inside spark on this on this",
    "start": "2679569",
    "end": "2686829"
  },
  {
    "text": "computer but what will happen if we just apply this network now we'll pass the",
    "start": "2686829",
    "end": "2692770"
  },
  {
    "text": "number what will happen will be in the output any ideas",
    "start": "2692770",
    "end": "2701069"
  },
  {
    "text": "well nothing interesting right we just create an empty neural network and it's it's it's weights of zeros of random so",
    "start": "2702450",
    "end": "2710079"
  },
  {
    "text": "if we're gonna pass numbers it's just gonna produce some random output so that's not going to do anything for us for it to be useful we need to train it",
    "start": "2710079",
    "end": "2717460"
  },
  {
    "text": "and then we train it is by using the train set where we feed the images and we tell the network what they actual is",
    "start": "2717460",
    "end": "2723849"
  },
  {
    "text": "supposed to be then the network uses the algorithm called back propagation to constantly adjust these weights until",
    "start": "2723849",
    "end": "2729760"
  },
  {
    "text": "the answers of the network match what we actually tell it it should be or at",
    "start": "2729760",
    "end": "2734980"
  },
  {
    "text": "least match with high accuracy then we can use that network trained network we",
    "start": "2734980",
    "end": "2740109"
  },
  {
    "text": "can apply two new images and get the new labels which hopefully will be precise so the optimizer is the object and the",
    "start": "2740109",
    "end": "2747730"
  },
  {
    "text": "algorithm that actually does the training so here I create the optimizer I'll set up some logging and this is",
    "start": "2747730",
    "end": "2754599"
  },
  {
    "text": "also a login part so we'll be able to see how the network is being trained and that's it now we say optimizer optimized",
    "start": "2754599",
    "end": "2760990"
  },
  {
    "text": "and it will take our network and it will start training it so here I",
    "start": "2760990",
    "end": "2767510"
  },
  {
    "text": "restricted how many passes were gonna do the more passes that you over data set the more precise the network the more",
    "start": "2767510",
    "end": "2773240"
  },
  {
    "text": "accurate but will take more time I limited on the three passes which should take about a minute or two to finish it",
    "start": "2773240",
    "end": "2779150"
  },
  {
    "text": "will make our network fairly accurate but not completely accurate and this is how a training the results early results",
    "start": "2779150",
    "end": "2790550"
  },
  {
    "text": "of our training okay so our loss loss is",
    "start": "2790550",
    "end": "2797930"
  },
  {
    "text": "a difference between the prediction of the network and what we actually tell it it should be it should be it the",
    "start": "2797930",
    "end": "2802970"
  },
  {
    "text": "absolute value unless it's zero doesn't matter that much but it should be declining with time which means our",
    "start": "2802970",
    "end": "2808880"
  },
  {
    "text": "network is learning and in the second we should see the validation accuracy which",
    "start": "2808880",
    "end": "2815270"
  },
  {
    "text": "will tell us how good our network is doing so right now it's the first dot it's the only one value here we'll see",
    "start": "2815270",
    "end": "2820580"
  },
  {
    "text": "more in the moment so currently we have accuracy of eighty percent zero point eight so that's how our network is",
    "start": "2820580",
    "end": "2827060"
  },
  {
    "text": "already able to recognize images that's not particularly good eight times out of ten let's give it a few more minutes so",
    "start": "2827060",
    "end": "2835569"
  },
  {
    "text": "our loss is declining and there we have",
    "start": "2837490",
    "end": "2844369"
  },
  {
    "text": "so we went from point A to point eight four in another iteration we'll do a",
    "start": "2844369",
    "end": "2849680"
  },
  {
    "text": "couple more iterations and that world will stop but in reality you'll one rod much longer than three iterations to get",
    "start": "2849680",
    "end": "2854960"
  },
  {
    "text": "much better accuracy",
    "start": "2854960",
    "end": "2857680"
  },
  {
    "text": "94 I think we're finished yep so I'll remove smoothing because it",
    "start": "2868700",
    "end": "2874790"
  },
  {
    "text": "reload so now we see our three values",
    "start": "2874790",
    "end": "2881369"
  },
  {
    "text": "the three iterations the first iteration gave us 80% accuracy by the second one we'll went to 92 and now we got to 94 if",
    "start": "2881369",
    "end": "2888930"
  },
  {
    "text": "we continue to get better and better and better going into 99 percent which is pretty good for this network so now we",
    "start": "2888930",
    "end": "2895650"
  },
  {
    "text": "have our network trained we can apply this network to brand new numbers that hasn't seen yet in this case I take our",
    "start": "2895650",
    "end": "2901980"
  },
  {
    "text": "test data set and say model please predict these values I'll predict what",
    "start": "2901980",
    "end": "2908040"
  },
  {
    "text": "the what the numbers are and as you can see that was really fast so that's not a good thing about networks training is",
    "start": "2908040",
    "end": "2914579"
  },
  {
    "text": "long and hard but once you train it actually inference is pretty fast so I'm gonna collect these values and print",
    "start": "2914579",
    "end": "2921300"
  },
  {
    "text": "some so for the first ten digits never predict these values now we can't really",
    "start": "2921300",
    "end": "2927359"
  },
  {
    "text": "say if it's right or wrong so I wrote another function that helps us fix a randomly a number from the test set",
    "start": "2927359",
    "end": "2933440"
  },
  {
    "text": "prints the prediction in the actual number so the prediction is two the number is two which is pretty good",
    "start": "2933440",
    "end": "2940559"
  },
  {
    "text": "because it selects a tough number so let's see if I can find where the network made a mistake",
    "start": "2940559",
    "end": "2947030"
  },
  {
    "text": "okay zero zero five five six six well",
    "start": "2951740",
    "end": "2960299"
  },
  {
    "text": "this could take a while we have 94% accuracy right so it's an average six out of 100 all right I'll do",
    "start": "2960299",
    "end": "2967019"
  },
  {
    "text": "a few more tries but of course in your work you might want to do something more deterministic than trying to random link",
    "start": "2967019",
    "end": "2972539"
  },
  {
    "text": "yes where there is a mismatch all right",
    "start": "2972539",
    "end": "2979230"
  },
  {
    "text": "three more and I'm done yeah nope need to find one so that could be",
    "start": "2979230",
    "end": "2985170"
  },
  {
    "text": "your practice at home so take this notebook run it train it and then find all the all the digits that the network",
    "start": "2985170",
    "end": "2992119"
  },
  {
    "text": "recognized incorrectly and see why that may be the case so actually if you look at those digits you'll see that actually",
    "start": "2992119",
    "end": "2998130"
  },
  {
    "text": "they are written in pretty poor poor way so it's a it's not surprising the network has made those particular errors",
    "start": "2998130",
    "end": "3004609"
  },
  {
    "text": "so this concludes the national network and image recognition we'll send you the links at the end and now I'd like to",
    "start": "3004609",
    "end": "3010490"
  },
  {
    "text": "handle the control to sue GM and you probably want the presentation back",
    "start": "3010490",
    "end": "3017048"
  },
  {
    "text": "alright guys so hope you like - hope you like what you guys saw some really",
    "start": "3025950",
    "end": "3031300"
  },
  {
    "text": "interesting demos so the whole big deep learning space is very interesting right",
    "start": "3031300",
    "end": "3036670"
  },
  {
    "text": "and we believe big deal really brings deep learning and big data together so",
    "start": "3036670",
    "end": "3043300"
  },
  {
    "text": "and the project is open source so you know you can if you're really into it you can really get started with big deal",
    "start": "3043300",
    "end": "3050260"
  },
  {
    "text": "right away so we want to make sure getting started with the big deal is pretty simple because usually when",
    "start": "3050260",
    "end": "3055960"
  },
  {
    "text": "you when you getting some of this kind of complex frameworks there's a bunch of Hoops you jump through you get installed on your",
    "start": "3055960",
    "end": "3061300"
  },
  {
    "text": "software master versions we don't want you guys jump through any of those so what we have is three ways because can",
    "start": "3061300",
    "end": "3071320"
  },
  {
    "text": "run big deal very easily so we have a docker container we have a medium",
    "start": "3071320",
    "end": "3077530"
  },
  {
    "text": "sandbox and we have an amazing ami so I'm going to go through them real quick",
    "start": "3077530",
    "end": "3082920"
  },
  {
    "text": "so if you can run docker this is what we recommend basically what you do is we",
    "start": "3082920",
    "end": "3087970"
  },
  {
    "text": "have a docker container already available you pull the docker container get our",
    "start": "3087970",
    "end": "3093520"
  },
  {
    "text": "images download the tutorials and then launch the docker so the cool thing",
    "start": "3093520",
    "end": "3098950"
  },
  {
    "text": "about the setup is you're running a big deal and Spock is running it within docker container but all your work your",
    "start": "3098950",
    "end": "3106180"
  },
  {
    "text": "notebook your code they are all saved in your laptop right so even when you shut",
    "start": "3106180",
    "end": "3111970"
  },
  {
    "text": "down your container no big deal because we're all your work is saved in your laptop and next time you relaunch this",
    "start": "3111970",
    "end": "3117850"
  },
  {
    "text": "it'll it'll pick up from right where it was so this is good again you know all these links will be available at the end",
    "start": "3117850",
    "end": "3123100"
  },
  {
    "text": "so you guys can get going right away so doctor has some in a pretty strict",
    "start": "3123100",
    "end": "3128770"
  },
  {
    "text": "requirements especially on Windows and if you have Windows machine that maybe not know to give it one talker",
    "start": "3128770",
    "end": "3134830"
  },
  {
    "text": "this is something you can try this is the virtual machine based sandbox and you know you know you can run using",
    "start": "3134830",
    "end": "3141550"
  },
  {
    "text": "VMware or VirtualBox you know pretty much any any other virtual and technologies you can use to run this again download run it put me the same",
    "start": "3141550",
    "end": "3148330"
  },
  {
    "text": "concept once you run the tutorial it actually launch the VM and you can do all the work in the VM and then you can",
    "start": "3148330",
    "end": "3155050"
  },
  {
    "text": "say with snapshotted all the good stuff Williams allow you to do you can also run docker on AWS",
    "start": "3155050",
    "end": "3163839"
  },
  {
    "text": "alright so pretty much you know you can spin up any any ami and it'll make Linux ami you know we used to Bunter and then",
    "start": "3163839",
    "end": "3170890"
  },
  {
    "text": "basically you can pull the same docker image that we showed earlier and download the tutorials and get going",
    "start": "3170890",
    "end": "3176410"
  },
  {
    "text": "alright so nothing changes that you know everything is everything works s is supposed to and your work is saved locally and you run your daughter also",
    "start": "3176410",
    "end": "3184569"
  },
  {
    "text": "you can run we have a native a my own era with all the dependencies installed",
    "start": "3184569",
    "end": "3190269"
  },
  {
    "text": "and ready to go alright and it is in the marketplace you can you can get the mi going and also get the tutorials and",
    "start": "3190269",
    "end": "3197609"
  },
  {
    "text": "don't forget we actually giving your credits or am i right so if you are really curious comment of the day of the",
    "start": "3197609",
    "end": "3204760"
  },
  {
    "text": "presentation feel happy to give you some credits so that's that so again I hope",
    "start": "3204760",
    "end": "3211690"
  },
  {
    "text": "you guys like the demos you guys saw with deep learning and spark so",
    "start": "3211690",
    "end": "3216789"
  },
  {
    "text": "basically you think big DL really fills the gap real nicely and you can get started with big deal very easily using",
    "start": "3216789",
    "end": "3223630"
  },
  {
    "text": "you know any of the aslam any other technology we describe so basically this is the link you want to go to alright and everything you guys need is right",
    "start": "3223630",
    "end": "3229480"
  },
  {
    "text": "there or the links to the tutorials videos and also the docker containers we",
    "start": "3229480",
    "end": "3234789"
  },
  {
    "text": "have alright I guess thank you so much I'm going to hand it over to Dave real quick and put this back here yep",
    "start": "3234789",
    "end": "3242880"
  },
  {
    "text": "great thanks ok well thank you very much Tim Alex and suji now a couple things",
    "start": "3249040",
    "end": "3254500"
  },
  {
    "text": "they just want to mention as we're running out of time here do it too quick time check yep ok so we do have the big",
    "start": "3254500",
    "end": "3262600"
  },
  {
    "text": "deal am i up on the AWS marketplace ok if you just go to the marketplace and",
    "start": "3262600",
    "end": "3268960"
  },
  {
    "text": "search for a big deal you'll find it and now think about this for a second",
    "start": "3268960",
    "end": "3275980"
  },
  {
    "text": "everything we've shown you here can be done on your laptop it can be written done in an ami you could use elastic",
    "start": "3275980",
    "end": "3283660"
  },
  {
    "text": "MapReduce and load the big-deal library there but what's nice about this is with",
    "start": "3283660",
    "end": "3289150"
  },
  {
    "text": "spark let's say this becomes very workload intense you can scale out and",
    "start": "3289150",
    "end": "3297340"
  },
  {
    "text": "you don't have to do anything different it's all built into it ok so yes we",
    "start": "3297340",
    "end": "3303160"
  },
  {
    "text": "tried to show you some examples you can try yourself but if you ended up creating a very complex set of notebooks",
    "start": "3303160",
    "end": "3313030"
  },
  {
    "text": "or code Scala Python whatever and let's",
    "start": "3313030",
    "end": "3318130"
  },
  {
    "text": "say you your data was very large there's really nothing you have to change its spark it takes full advantage of",
    "start": "3318130",
    "end": "3324690"
  },
  {
    "text": "distributing out that data into all the nodes then what big DL does is as",
    "start": "3324690",
    "end": "3330060"
  },
  {
    "text": "through every iteration each one of the the weights that it's creating actually",
    "start": "3330060",
    "end": "3335290"
  },
  {
    "text": "get re shared and allocate across all the different nodes so it's all the nodes are actually training at the same",
    "start": "3335290",
    "end": "3340450"
  },
  {
    "text": "time ok so yeah there's a trick to this and the trick is instead of recreating",
    "start": "3340450",
    "end": "3347350"
  },
  {
    "text": "everything from scratch big deal takes full advantage of spark all right pretty straightforward now we want to",
    "start": "3347350",
    "end": "3354100"
  },
  {
    "text": "make sure that you've got the opportunity to try this so we've partner with Amazon Amazon and",
    "start": "3354100",
    "end": "3359200"
  },
  {
    "text": "Intel are providing credits for you to try this just come see me afterwards it starts off simple just gonna be a $25",
    "start": "3359200",
    "end": "3365830"
  },
  {
    "text": "certificate you know but that gives you enough money to try out on you know whatever instance you want and then if",
    "start": "3365830",
    "end": "3371860"
  },
  {
    "text": "once you do that you want more just come see me again I'll get you some more credits and we'll just keep going from there ok and just a quick note about the",
    "start": "3371860",
    "end": "3380020"
  },
  {
    "text": "resources here this is just my github but I put the resources that Tim and",
    "start": "3380020",
    "end": "3386470"
  },
  {
    "text": "Alex and suji have been talking about up there and also the slides so these slides if you go to that bitly that's",
    "start": "3386470",
    "end": "3391870"
  },
  {
    "text": "gonna redirect you to a SlideShare account with this presentation on it so",
    "start": "3391870",
    "end": "3397780"
  },
  {
    "text": "you'll have it as well and that's it so we're running out of time but I think we have maybe time for a question or two so",
    "start": "3397780",
    "end": "3405090"
  },
  {
    "text": "anybody have any questions yes in the back there yeah",
    "start": "3405090",
    "end": "3415630"
  },
  {
    "text": "so the question is does how much does it cost to run this on Amazon as you can imagine this is a very difficult",
    "start": "3415630",
    "end": "3421600"
  },
  {
    "text": "question to answer because it really depends on your workload etc I can tell",
    "start": "3421600",
    "end": "3426850"
  },
  {
    "text": "you that from a performance perspective we've done some tests on some of the",
    "start": "3426850",
    "end": "3433120"
  },
  {
    "text": "most recent Xeon Intel processors and you know up until recently the most",
    "start": "3433120",
    "end": "3439390"
  },
  {
    "text": "powerful processor with a c4 okay and with the c5 we've noticed around a 10%",
    "start": "3439390",
    "end": "3445630"
  },
  {
    "text": "increase in performance and that's because those processors are you know they're Intel's very well aware that the",
    "start": "3445630",
    "end": "3452290"
  },
  {
    "text": "deep learning is popular and so they've worked hard to improve the performance of the math kernal library that big deal",
    "start": "3452290",
    "end": "3458920"
  },
  {
    "text": "takes full advantage of it just comes with a big deal but it's free it's from Intel but it enables a big deal to take",
    "start": "3458920",
    "end": "3466450"
  },
  {
    "text": "full advantage of the you know the math calculations in the processor so yeah",
    "start": "3466450",
    "end": "3472780"
  },
  {
    "text": "that's probably where we're seeing the improvement but as far as like your cost you'll have to take a look at the Amazon",
    "start": "3472780",
    "end": "3478080"
  },
  {
    "text": "pricing for those instances you probably have to test it out compared to what you know what your workload is and figure it",
    "start": "3478080",
    "end": "3483790"
  },
  {
    "text": "out from there but I would take a look at the c4 and now the c5 and right we're",
    "start": "3483790",
    "end": "3493180"
  },
  {
    "text": "actually working on benchmarks of course we've started off on benchmarks that were in the Intel Xeon you know line and",
    "start": "3493180",
    "end": "3499870"
  },
  {
    "text": "so that's where we've started now that's where we saw that 10% increase and then we have some folks who are working on",
    "start": "3499870",
    "end": "3504910"
  },
  {
    "text": "benchmarks with other processors so yeah yes question",
    "start": "3504910",
    "end": "3511020"
  },
  {
    "text": "yes thank you for asking that question I meant to mention that yes it's one thing that we were very very keenly aware of",
    "start": "3513790",
    "end": "3520579"
  },
  {
    "text": "is that you know of course there's a lot of deep learning going on outside of spark right and there's a lot of models",
    "start": "3520579",
    "end": "3525859"
  },
  {
    "text": "out there I'm in fact we're creating models and so we want to be able to share those models and so oftentimes you'll be able to actually take a model",
    "start": "3525859",
    "end": "3532400"
  },
  {
    "text": "that's been created outside of spark and you can import it into big-deal tensorflow cafe and torch I believe are the ones",
    "start": "3532400",
    "end": "3539839"
  },
  {
    "text": "that are we're working to support or are already supported okay so we have a",
    "start": "3539839",
    "end": "3545390"
  },
  {
    "text": "model zoo up on the Intel analytics github page we've got some models we've put there that we're trained in big deal",
    "start": "3545390",
    "end": "3552680"
  },
  {
    "text": "and you can actually export and run them in tensorflow or some of the other so absolutely that's a very good point",
    "start": "3552680",
    "end": "3558829"
  },
  {
    "text": "thank you for bringing that okay we probably have time for maybe one or two more questions you were first great",
    "start": "3558829",
    "end": "3565579"
  },
  {
    "text": "thank you",
    "start": "3565579",
    "end": "3567880"
  },
  {
    "text": "yeah so you'll probably have to do a boots trip bootstrap action okay that's",
    "start": "3578060",
    "end": "3585380"
  },
  {
    "text": "the one I know has been working now there's also if you're using Scala it's probably a little bit easier and you",
    "start": "3585380",
    "end": "3591710"
  },
  {
    "text": "might be able to just submit the code but if you're using Python then I know we have to have those libraries on all",
    "start": "3591710",
    "end": "3596930"
  },
  {
    "text": "then all the nodes and bootstraps probably the way to work yes please beg",
    "start": "3596930",
    "end": "3602090"
  },
  {
    "text": "oh yeah oh right yes so then yeah so for",
    "start": "3602090",
    "end": "3614360"
  },
  {
    "text": "those will you online the answer is we do have examples in Scala there in the if you go to the",
    "start": "3614360",
    "end": "3619670"
  },
  {
    "text": "github slash Intel - analytics there's -",
    "start": "3619670",
    "end": "3624800"
  },
  {
    "text": "what do you pose up there one is big deal and ones big deal tutorials and you",
    "start": "3624800",
    "end": "3629990"
  },
  {
    "text": "should find both Python and Scala examples there so yeah thank you all right there was another question",
    "start": "3629990",
    "end": "3635000"
  },
  {
    "text": "here yes yes",
    "start": "3635000",
    "end": "3641740"
  },
  {
    "text": "I'm elect him one up here Tim let's say you take the mic so so they're both",
    "start": "3646220",
    "end": "3652080"
  },
  {
    "text": "supported actually so there's an RDD base supported API and actually the",
    "start": "3652080",
    "end": "3657240"
  },
  {
    "text": "example Alex showed you was using that as well as my first Cyrus example the second iris example was using the",
    "start": "3657240",
    "end": "3662730"
  },
  {
    "text": "pipeline ml spark ml live API that one is a data frame based API it uses the if",
    "start": "3662730",
    "end": "3669420"
  },
  {
    "text": "you're familiar with this spark ml estimator and sparked out ml dot transformer classes it implements those",
    "start": "3669420",
    "end": "3675720"
  },
  {
    "text": "I think personally that's really cool because it means is that the barrier to entry for you if you're already you know",
    "start": "3675720",
    "end": "3681870"
  },
  {
    "text": "running spark ml working a workloads in in spark you can very easily drop in a",
    "start": "3681870",
    "end": "3688350"
  },
  {
    "text": "like a deep learning classifier or to regressor or whatever and then and then and use that all that infrastructure",
    "start": "3688350",
    "end": "3694440"
  },
  {
    "text": "there so I'm very excited about that so and so the short answer is yes both are available yeah yeah that's correct",
    "start": "3694440",
    "end": "3706020"
  },
  {
    "text": "yeah it actually implements the it's working the data frame and it implements that using the estimator and transformer",
    "start": "3706020",
    "end": "3712170"
  },
  {
    "text": "interfaces the same is for example you would see for like the gbt or RF you",
    "start": "3712170",
    "end": "3718890"
  },
  {
    "text": "know classifiers that are already there in spark 10 ml so yeah yeah and I think",
    "start": "3718890",
    "end": "3725130"
  },
  {
    "text": "with that we're out of time I'm getting the sign there so thank you very much thank your presenters and please come",
    "start": "3725130",
    "end": "3731520"
  },
  {
    "text": "see me about the free computer",
    "start": "3731520",
    "end": "3734720"
  }
]