[
  {
    "start": "0",
    "end": "68000"
  },
  {
    "text": "so it's a real pleasure to be here my name is Paul Maddox I'm gonna be here today talking about C ICD and automation",
    "start": "149",
    "end": "7200"
  },
  {
    "text": "of software release processes mainly in context of server lists and containers",
    "start": "7200",
    "end": "12710"
  },
  {
    "text": "so a bit of background about me I've worked at AWS now for nearly four years",
    "start": "12710",
    "end": "18390"
  },
  {
    "text": "and started off 16 years ago in the industry and started off as a software",
    "start": "18390",
    "end": "23820"
  },
  {
    "text": "developer and have also worked in operational sre type roles and then",
    "start": "23820",
    "end": "29670"
  },
  {
    "text": "moved into systems architecture I'm a developer at heart I develop a lot Ingo",
    "start": "29670",
    "end": "35910"
  },
  {
    "text": "a lot in Jarvis and scene Odette cetera my contact details are also here if if",
    "start": "35910",
    "end": "43200"
  },
  {
    "text": "ever you want to ask questions around server list containers development best practices etc feel free to reach out to",
    "start": "43200",
    "end": "48660"
  },
  {
    "text": "us also if you want to tweet a picture of me on stage with my Twitter handle so",
    "start": "48660",
    "end": "54149"
  },
  {
    "text": "that my boss knows I'm working and not at the beach that's cool as well because I'm pretty sure he thinks I'm just",
    "start": "54149",
    "end": "60120"
  },
  {
    "text": "spending this whole time at the beach I'm yeah my boss is a guy called Julian",
    "start": "60120",
    "end": "65729"
  },
  {
    "text": "Julian the pin cool I'm so gender what are we going to cover today we're going",
    "start": "65729",
    "end": "72930"
  },
  {
    "start": "68000",
    "end": "138000"
  },
  {
    "text": "to focus heavily on automation right automation of your release processes and",
    "start": "72930",
    "end": "78060"
  },
  {
    "text": "pipelines we're going to cover off some of the best practices for how to build and test your applications we're going",
    "start": "78060",
    "end": "84990"
  },
  {
    "text": "to talk about how to deploy those applications and this is where they're kind of the talk kind of splits a bit",
    "start": "84990",
    "end": "90420"
  },
  {
    "text": "and we're going to talk about some best practices for service deployments and best practice for container deployments",
    "start": "90420",
    "end": "95970"
  },
  {
    "text": "and then we're going to talk a bit about how can you improve the developer",
    "start": "95970",
    "end": "100979"
  },
  {
    "text": "experience for your software automation right as we move to a world of micro services where we're spinning up",
    "start": "100979",
    "end": "107100"
  },
  {
    "text": "projects all the time what's that developer experience like in your organization if I'm a developer and I",
    "start": "107100",
    "end": "113250"
  },
  {
    "text": "it's you know it's my first day at your organization I I come and I want to start a new development project what",
    "start": "113250",
    "end": "118920"
  },
  {
    "text": "does that look like for me do I need to go and set up my own Jenkins box my own git repo etc how do you how do I get all",
    "start": "118920",
    "end": "126030"
  },
  {
    "text": "the best practices and learnings from this organization etc so we're going to cover kind of scaling out pipelines that",
    "start": "126030",
    "end": "132120"
  },
  {
    "text": "are bigger scale at the end of this so there we go so I want to start with a",
    "start": "132120",
    "end": "141310"
  },
  {
    "start": "138000",
    "end": "191000"
  },
  {
    "text": "bit of history about Amazon Amazon if you look back to Amazon in 2001 2002",
    "start": "141310",
    "end": "146980"
  },
  {
    "text": "amaz in the retail e-commerce site was a huge great big monolithic application",
    "start": "146980",
    "end": "152970"
  },
  {
    "text": "right it was very very painful for us back then we had you know lots and lots",
    "start": "152970",
    "end": "158860"
  },
  {
    "text": "of development teams centralized deployment team not much automation in place my getting code out from a",
    "start": "158860",
    "end": "166480"
  },
  {
    "text": "developer's laptop into production in front of customers to way longer than we wanted so we're a very data-driven",
    "start": "166480",
    "end": "173590"
  },
  {
    "text": "company at Amazon we did a study and we sent out a study back in 2009 so nearly",
    "start": "173590",
    "end": "178900"
  },
  {
    "text": "a decade ago now to try and work out where the inefficiencies were in our organization why was it taking us so",
    "start": "178900",
    "end": "185440"
  },
  {
    "text": "long to get code into production over here and surprise surprise it turns out",
    "start": "185440",
    "end": "193810"
  },
  {
    "start": "191000",
    "end": "238000"
  },
  {
    "text": "we were just waiting um so if you look a really really simplified version of a pipeline here you know taking code from",
    "start": "193810",
    "end": "200859"
  },
  {
    "text": "a developer's laptop writing the code building the code testing deploying to prod the actual time wasn't spent in any",
    "start": "200859",
    "end": "208060"
  },
  {
    "text": "of these particular workloads it was actually the waiting time in between so if we put this in relative terms here it",
    "start": "208060",
    "end": "214959"
  },
  {
    "text": "was taking you know minutes to write the code and in days for it to sit around waiting to progress to the next stage of",
    "start": "214959",
    "end": "220600"
  },
  {
    "text": "the deployment um in total it was taking us weeks it was taking weeks to get code",
    "start": "220600",
    "end": "226750"
  },
  {
    "text": "from laptops into production we knew if we could drop down those those long waiting times between our teams then we",
    "start": "226750",
    "end": "234220"
  },
  {
    "text": "could really bring down that time it takes to get code out and we could get that down to hours so to do this back in",
    "start": "234220",
    "end": "241530"
  },
  {
    "start": "238000",
    "end": "283000"
  },
  {
    "text": "2009 and we needed new tooling a lot of the kind of tooling that we wanted to do didn't exist and we built a whole load",
    "start": "241530",
    "end": "248170"
  },
  {
    "text": "of tools for things like pipeline visualization you know much like the pipeline software you've probably seen",
    "start": "248170",
    "end": "253720"
  },
  {
    "text": "in Jenkins and bitbucket etc we built something very similar called pipelines internally we built another tool called",
    "start": "253720",
    "end": "260769"
  },
  {
    "text": "Apollo and Apollo was the tool that does deployments for Amazon right and it it takes an artifact as it",
    "start": "260769",
    "end": "266889"
  },
  {
    "text": "and it knows how to do you know zero downtime rolling updates it knows how to do Bluegreen deployments and it prevents",
    "start": "266889",
    "end": "273819"
  },
  {
    "text": "developers having a think about how do I do that kind of safe deployment and lets them just hit the deploy button so we we",
    "start": "273819",
    "end": "280840"
  },
  {
    "text": "built these tools and went through a process of improvement and the net result was you know after this program",
    "start": "280840",
    "end": "288490"
  },
  {
    "start": "283000",
    "end": "319000"
  },
  {
    "text": "of work we had thousands of teams at Amazon doing development work all building micro-services always you know",
    "start": "288490",
    "end": "294129"
  },
  {
    "text": "dev test prod type environments and I think this numbers from 2015 we were",
    "start": "294129",
    "end": "301150"
  },
  {
    "text": "looking at around 50 million deployments a year right around 1.6 ish a second",
    "start": "301150",
    "end": "306189"
  },
  {
    "text": "deployments and these aren't big feature releases for most cases these could be a typo these could be a documentation",
    "start": "306189",
    "end": "312580"
  },
  {
    "text": "change a schema change etc we don't tend to bunch up these releases into big feature releases but we learn a few",
    "start": "312580",
    "end": "320830"
  },
  {
    "start": "319000",
    "end": "350000"
  },
  {
    "text": "things along the way on these journey about what good development tooling should look like some key tenants so",
    "start": "320830",
    "end": "327729"
  },
  {
    "text": "number one tolling needs to be self-service if I need to go and raise a ticket with an Operations team to get",
    "start": "327729",
    "end": "334449"
  },
  {
    "text": "some et2 instances etc right we failed as an organization right cloud takes you",
    "start": "334449",
    "end": "340330"
  },
  {
    "text": "beyond that it allows you to spin stuff up on demand self-service manner so tooling the tooling should be",
    "start": "340330",
    "end": "345879"
  },
  {
    "text": "self-service as well combine that with best practices so a CI",
    "start": "345879",
    "end": "353800"
  },
  {
    "text": "TD pipeline is an amazing place to put in checks and automations for best",
    "start": "353800",
    "end": "359620"
  },
  {
    "text": "practices in your organization things like security checks if you have to go through an InfoSec review on your",
    "start": "359620",
    "end": "365650"
  },
  {
    "text": "application every time you need to deploy how much is that is manual how much could be automated what if you",
    "start": "365650",
    "end": "371620"
  },
  {
    "text": "could put those automated checks in every single developers pipeline in your organization in a scalable way so",
    "start": "371620",
    "end": "377439"
  },
  {
    "text": "pipelines are a really really good place to bake in best practices in your organization and take all those",
    "start": "377439",
    "end": "382599"
  },
  {
    "text": "learnings that you've learned over the years and apply them in an automated fashion but it's also got to be able to",
    "start": "382599",
    "end": "388689"
  },
  {
    "text": "do that without being too restrictive and that's a fine balance like how do you prevent people getting frustrated so",
    "start": "388689",
    "end": "395680"
  },
  {
    "start": "395000",
    "end": "417000"
  },
  {
    "text": "number one it needs to be technology agnostic if you're building CIC detour",
    "start": "395680",
    "end": "400840"
  },
  {
    "text": "or putting in place see icd tolling and it's tied to a particular development language or a particular architecture or",
    "start": "400840",
    "end": "407800"
  },
  {
    "text": "a particular framework technology's going to move on in advance and then people are going to look and use other",
    "start": "407800",
    "end": "413199"
  },
  {
    "text": "solutions and not yours so the tooling needs to be technology agnostic and the number-one rule of this",
    "start": "413199",
    "end": "420010"
  },
  {
    "start": "417000",
    "end": "504000"
  },
  {
    "text": "kind of release automation process management tooling is it needs to be the path of least resistance if it's easier",
    "start": "420010",
    "end": "427419"
  },
  {
    "text": "for me to take out a credit card and go and spin up my own AWS account rather than go through the corporate process",
    "start": "427419",
    "end": "432430"
  },
  {
    "text": "I'm not going to follow it right I need to move fast I've got deadlines in a lot of cases etc so how do you get to the",
    "start": "432430",
    "end": "438160"
  },
  {
    "text": "point of path of least resistance and there's a concrete example of this as a developer in Amazon if I want to start a",
    "start": "438160",
    "end": "444490"
  },
  {
    "text": "new development project there's a portal I can go to and it asked me what programming language do I want to use",
    "start": "444490",
    "end": "450310"
  },
  {
    "text": "what kind of architectural decisions do I want to make and it will go and deploy a CI CD pipeline a source repo you know",
    "start": "450310",
    "end": "457840"
  },
  {
    "text": "staging environments production environments etc that get me most of the way there now we don't restrict that at Amazon as",
    "start": "457840",
    "end": "464919"
  },
  {
    "text": "an engineer in Amazon I'm pretty much free to use whatever technology I want whatever programming language I want",
    "start": "464919",
    "end": "470080"
  },
  {
    "text": "right there's a lot of freedom there but the reality is because this easy solution is the path of least resistance",
    "start": "470080",
    "end": "475330"
  },
  {
    "text": "it's the one that most people take unless they have a real reason to they need to innovate and take something",
    "start": "475330",
    "end": "481180"
  },
  {
    "text": "further so these are kind of the core lessons we learn around good tooling and",
    "start": "481180",
    "end": "486849"
  },
  {
    "text": "we took all that and we applied it in a load of AWS services for our customers so we have a load of services in this",
    "start": "486849",
    "end": "493599"
  },
  {
    "text": "kind of CI CD space and things like AWS copilot line AWS code build etc that",
    "start": "493599",
    "end": "499360"
  },
  {
    "text": "really help you build up these kind of capabilities in your org really quickly so in my role I speak to a lot of",
    "start": "499360",
    "end": "506830"
  },
  {
    "start": "504000",
    "end": "563000"
  },
  {
    "text": "companies I speak to a lot of companies of all different sizes and this is this is fairly common right when you speak to",
    "start": "506830",
    "end": "513729"
  },
  {
    "text": "a company and you say where's your build server like how are you doing this today what does it look like and it's like oh",
    "start": "513729",
    "end": "519610"
  },
  {
    "text": "yeah oh yeah it kind of sits under the desk and you know Bob set it up and he's",
    "start": "519610",
    "end": "525339"
  },
  {
    "text": "left our company now don't touch it and this is kind of to Aaron's point in the previous talk about things like Jenkins",
    "start": "525339",
    "end": "531520"
  },
  {
    "text": "Jenkins is a great tool but it's very easy to get a lot of really complex business",
    "start": "531520",
    "end": "536680"
  },
  {
    "text": "logic in Jenkins or other similar toolings the AWS approach is actually to",
    "start": "536680",
    "end": "541959"
  },
  {
    "text": "break up our tools into modular tools that do one thing on one thing well so code build really good at building code",
    "start": "541959",
    "end": "548649"
  },
  {
    "text": "pipeline really good at providing that visual overview so there's no excuse for this kind of scenario anymore and",
    "start": "548649",
    "end": "554500"
  },
  {
    "text": "hopefully with some of the services I'm going to show you in the next couple of slides you can see if this this rings true to your organization how you can",
    "start": "554500",
    "end": "561220"
  },
  {
    "text": "move on from there so first service I want to talk about is AWS code pipeline",
    "start": "561220",
    "end": "566860"
  },
  {
    "start": "563000",
    "end": "589000"
  },
  {
    "text": "um AWS code pipeline allows you to visualize complex workflows in a really",
    "start": "566860",
    "end": "573459"
  },
  {
    "text": "nice simple way right check in from source code whenever something in source code changes apply this process may be",
    "start": "573459",
    "end": "580060"
  },
  {
    "text": "going deploy a test environment run a load a load test teardown the test environment you know get a manual",
    "start": "580060",
    "end": "586600"
  },
  {
    "text": "approval from someone in my organization etc this is a concrete example of a",
    "start": "586600",
    "end": "591940"
  },
  {
    "start": "589000",
    "end": "652000"
  },
  {
    "text": "really simple pipeline so it's set up to trigger from github on the left here and",
    "start": "591940",
    "end": "597160"
  },
  {
    "text": "whenever a change happens in github we're using code build to actually build our code run our unit tests for example",
    "start": "597160",
    "end": "602920"
  },
  {
    "text": "and then when it comes to staging we have cloud formation deploying our",
    "start": "602920",
    "end": "607959"
  },
  {
    "text": "staging environment for us and then actually code deploy deploying the code on to the instances that have been",
    "start": "607959",
    "end": "613750"
  },
  {
    "text": "deployed so this is a really simple overview of a pipeline in this one we've got a manual approval stage it may be",
    "start": "613750",
    "end": "620769"
  },
  {
    "text": "that your organization doesn't trust you enough yet actually go fully automated",
    "start": "620769",
    "end": "626320"
  },
  {
    "text": "end-to-end so every developer check-in results in a production release automatically right that's the goal for",
    "start": "626320",
    "end": "631390"
  },
  {
    "text": "most organizations but if you've got a history of you know not doing testing well enough or failed rollouts and",
    "start": "631390",
    "end": "637779"
  },
  {
    "text": "deployments and emergency roll backs it can be hard to build that trust and you may still need those manual approval",
    "start": "637779",
    "end": "643240"
  },
  {
    "text": "gates in there so you can do that with code pipeline so this is a really really good way to just design orchestrate and",
    "start": "643240",
    "end": "649510"
  },
  {
    "text": "visualize your release workflows let's talk a bit about some of those services",
    "start": "649510",
    "end": "655660"
  },
  {
    "start": "652000",
    "end": "687000"
  },
  {
    "text": "in the pipeline and one thing I should call out before I do is the services I'm going to talk about you can plug them",
    "start": "655660",
    "end": "661329"
  },
  {
    "text": "into a pipeline you could swap them out for Jenkins it's kind of modular right it's like I've said a Lego bricks for",
    "start": "661329",
    "end": "666640"
  },
  {
    "text": "your pipeline I'm going to show you the AWS hawlings but there's loads of integrations with loads of other providers like Jenkins and teamcity etc",
    "start": "666640",
    "end": "673800"
  },
  {
    "text": "so we're going to talk about a couple of types of automation first how to automate building tests and then we're",
    "start": "673800",
    "end": "680800"
  },
  {
    "text": "going to talk about how to automate your infrastructure and deployments of your service and containerized applications",
    "start": "680800",
    "end": "686730"
  },
  {
    "text": "so when we talk about building tests traditionally if you've used something",
    "start": "686730",
    "end": "692230"
  },
  {
    "start": "687000",
    "end": "726000"
  },
  {
    "text": "like Jenkins you may be used to having your Jenkins instance and then like a build farm that goes out and does all",
    "start": "692230",
    "end": "698019"
  },
  {
    "text": "your builds that's cool but it's a lot to maintain right vm's instances operating systems Jenkins etc how do you",
    "start": "698019",
    "end": "704920"
  },
  {
    "text": "deploy that how do you upgrade it manage it patch it etc and code build takes a different approach",
    "start": "704920",
    "end": "710470"
  },
  {
    "text": "you give AWS code build your bill job and it will scale up behind the scenes and it will run your build jobs for you",
    "start": "710470",
    "end": "716170"
  },
  {
    "text": "and you just pay per minute so really really sweet way of just farming out your bills to this massively scalable",
    "start": "716170",
    "end": "722350"
  },
  {
    "text": "cloud and what's cool is that it comes pre-populated with a load of different",
    "start": "722350",
    "end": "727839"
  },
  {
    "start": "726000",
    "end": "759000"
  },
  {
    "text": "build environments so when I set up my new build project I can choose my operating system and runtime so the",
    "start": "727839",
    "end": "734319"
  },
  {
    "text": "runtime pre installs a load of tooling for like you know if I'm doing Android development it can install like the",
    "start": "734319",
    "end": "740319"
  },
  {
    "text": "Android development toolkit the ADK and stuff Java I can choose what Java version I want etcetera if these don't",
    "start": "740319",
    "end": "747519"
  },
  {
    "text": "fit your requirements you can just give us a docker container and that can be your build environment so really nice",
    "start": "747519",
    "end": "753220"
  },
  {
    "text": "and flexible there and again you're just paying per minute that your builds are running so how do you control this how",
    "start": "753220",
    "end": "760809"
  },
  {
    "start": "759000",
    "end": "803000"
  },
  {
    "text": "how do we keep this technology agnostic right how does code build know how to build your application and how to test",
    "start": "760809",
    "end": "767499"
  },
  {
    "text": "it etcetera and you have a file called the build spec file which sits inside",
    "start": "767499",
    "end": "772720"
  },
  {
    "text": "your application repo alongside your code and in this that's a lot of hooks and you tell code build okay here's the",
    "start": "772720",
    "end": "779740"
  },
  {
    "text": "commands you need to do to install or you know pre build so maybe before I build I want to run MPM install to fetch",
    "start": "779740",
    "end": "786639"
  },
  {
    "text": "all my dependencies maybe I want to run some tests and unit tests etc now this",
    "start": "786639",
    "end": "791709"
  },
  {
    "text": "is a go example running some go unit tests and linting and stuff there this is a really nice convenient way for",
    "start": "791709",
    "end": "797589"
  },
  {
    "text": "developers to be able to tell the code build service here's how you build my application",
    "start": "797589",
    "end": "803220"
  },
  {
    "start": "803000",
    "end": "831000"
  },
  {
    "text": "the end result you get a nice console in the AWS management console where you can",
    "start": "803220",
    "end": "809500"
  },
  {
    "text": "go and see the status of your builds you can see the logs from your builds etc so and there's actually if if you are using",
    "start": "809500",
    "end": "817270"
  },
  {
    "text": "Jenkins and don't want to use AWS code pipeline there's a really nice plugin for Jenkins that can just farm out all",
    "start": "817270",
    "end": "822490"
  },
  {
    "text": "your builds from Jenkins straight into this and so super convenient so this is",
    "start": "822490",
    "end": "827709"
  },
  {
    "text": "a great place to run your build to run your unit tests what about actually deploying the infrastructure and",
    "start": "827709",
    "end": "834370"
  },
  {
    "start": "831000",
    "end": "838000"
  },
  {
    "text": "deploying your applications so how many",
    "start": "834370",
    "end": "839380"
  },
  {
    "start": "838000",
    "end": "854000"
  },
  {
    "text": "people work at an organization today where you have these production environments and they're these super",
    "start": "839380",
    "end": "845620"
  },
  {
    "text": "shiny amazing machines right there every one tweaks everyone takes care of and like so much attention and detail goes",
    "start": "845620",
    "end": "852130"
  },
  {
    "text": "into your production environment but then when you look at your Devon test and staging environments and integration",
    "start": "852130",
    "end": "858880"
  },
  {
    "start": "854000",
    "end": "891000"
  },
  {
    "text": "environments they look like something that's been built in a school science fair and one day I got this picture off",
    "start": "858880",
    "end": "865750"
  },
  {
    "text": "Flickr with commercial license and stuff but one day like these people are going",
    "start": "865750",
    "end": "870820"
  },
  {
    "text": "to be in the audience or something or their parents are and I'm gonna be very embarrassed but this this was one of the",
    "start": "870820",
    "end": "876100"
  },
  {
    "text": "first results for like school science fair and this Clarins true I've worked at a lot of organizations before joining",
    "start": "876100",
    "end": "882010"
  },
  {
    "text": "AWS where you know bugs are introduced consistently because the staging",
    "start": "882010",
    "end": "887290"
  },
  {
    "text": "environments the integration environments look nothing like production and this is a really really quick way to lose trust right if you",
    "start": "887290",
    "end": "894550"
  },
  {
    "start": "891000",
    "end": "901000"
  },
  {
    "text": "want to go fully automated you need to build that trust in your in your business so consistent environments",
    "start": "894550",
    "end": "899950"
  },
  {
    "text": "matter so a really really common approach is infrastructure as code here um AWS has our cloud formation service",
    "start": "899950",
    "end": "907839"
  },
  {
    "start": "901000",
    "end": "915000"
  },
  {
    "text": "there's other services out there in the open source world like terraform essentially they allow you to take in",
    "start": "907839",
    "end": "913839"
  },
  {
    "text": "AWS architecture load balancers ec2 instances all those kind of resources",
    "start": "913839",
    "end": "919149"
  },
  {
    "start": "915000",
    "end": "963000"
  },
  {
    "text": "that make up your architecture and put them in a template and then deploy that over and over and over and over again so",
    "start": "919149",
    "end": "926320"
  },
  {
    "text": "really really cool um what's interesting is if you start checking in your architecture template into version",
    "start": "926320",
    "end": "932230"
  },
  {
    "text": "control along with your application you can deploy that in the same pipeline you can actually go",
    "start": "932230",
    "end": "938350"
  },
  {
    "text": "back in time in version control and see okay what's changed over time right when was the last firewall rule added to my",
    "start": "938350",
    "end": "944410"
  },
  {
    "text": "architecture etc and you can actually start doing unit tests and integration tests on your infrastructure as well as",
    "start": "944410",
    "end": "951310"
  },
  {
    "text": "your application so really powerful concept highly recommend if you're not doing infrastructure as code at all",
    "start": "951310",
    "end": "957220"
  },
  {
    "text": "today have a look into cloud formation it can just help automate those manual processes so as an example of this if",
    "start": "957220",
    "end": "965680"
  },
  {
    "start": "963000",
    "end": "990000"
  },
  {
    "text": "you're using containers today with ECS we publish a reference architecture that",
    "start": "965680",
    "end": "971380"
  },
  {
    "text": "allows you to spin up a whole ECS cluster all the best practices scaling",
    "start": "971380",
    "end": "976750"
  },
  {
    "text": "networking etc with a click of a button and you can just go and straight to this",
    "start": "976750",
    "end": "982240"
  },
  {
    "text": "github page and spin that up and it's got some example micro services and you can be up and running with containers in",
    "start": "982240",
    "end": "987519"
  },
  {
    "text": "in minutes with this cool so",
    "start": "987519",
    "end": "993180"
  },
  {
    "text": "infrastructure infrastructure as code cloud formation how do we actually get",
    "start": "993180",
    "end": "998980"
  },
  {
    "text": "our applications on these instances and this is kind of where the talk diverts a",
    "start": "998980",
    "end": "1004470"
  },
  {
    "text": "bit and we going to cover a bit of containers and a bit of server list and the different approaches there because they require different approaches so",
    "start": "1004470",
    "end": "1013050"
  },
  {
    "start": "1012000",
    "end": "1043000"
  },
  {
    "text": "let's start off with containers and one of the really nice things with Co pipeline is it has a direct integration",
    "start": "1013050",
    "end": "1019279"
  },
  {
    "text": "with ECS so it can actually go and deploy your containers straight into a",
    "start": "1019279",
    "end": "1025620"
  },
  {
    "text": "running ECS cluster for you there's like a native integration there you can use it for kubernetes as well there's not",
    "start": "1025620",
    "end": "1031438"
  },
  {
    "text": "the native integration and you need to take the approach that erin showed in the last talk around actually using a",
    "start": "1031439",
    "end": "1037860"
  },
  {
    "text": "lambda function there to do a bit of the legwork here with ECS is fully integrated so in this case we got a",
    "start": "1037860",
    "end": "1045480"
  },
  {
    "start": "1043000",
    "end": "1073000"
  },
  {
    "text": "source repository which could be Co commit or github and to build our",
    "start": "1045480",
    "end": "1050940"
  },
  {
    "text": "container image so actually take the docker file build the container image we're using code build you could use",
    "start": "1050940",
    "end": "1058020"
  },
  {
    "text": "Jenkins like you could swap out these are interchangeable modules and then code build will upload the container",
    "start": "1058020",
    "end": "1064799"
  },
  {
    "text": "image into our ECR or container registry and then once that's",
    "start": "1064799",
    "end": "1070080"
  },
  {
    "text": "done it can go and deploy it straight into ECS so this is actually a native integration if I want to set up a",
    "start": "1070080",
    "end": "1076169"
  },
  {
    "start": "1073000",
    "end": "1134000"
  },
  {
    "text": "pipeline that does exactly this these are the kind of steps I go through in the AWS console so first of all my",
    "start": "1076169",
    "end": "1082649"
  },
  {
    "text": "pipeline needs a source so this is where I choose you know is it github is it Co commit for example you know what's the",
    "start": "1082649",
    "end": "1089460"
  },
  {
    "text": "repository name you know which branch do I want to monitor any changes that happen are then going to trigger through",
    "start": "1089460",
    "end": "1095190"
  },
  {
    "text": "this pipeline the next step I choose the build provider so here in that drop-down",
    "start": "1095190",
    "end": "1100230"
  },
  {
    "text": "list there's other options like Jenkins etc here we're using AWS code build and",
    "start": "1100230",
    "end": "1106049"
  },
  {
    "text": "here we'd go through those previous options as I showed you where you choose your build image etc and setup those",
    "start": "1106049",
    "end": "1112019"
  },
  {
    "text": "options finally the deployment provider here you'll see options like deploying",
    "start": "1112019",
    "end": "1118169"
  },
  {
    "text": "to Beanstalk deploying to cloud formation here is the native integration with Co pipeline and ECS and this will",
    "start": "1118169",
    "end": "1124350"
  },
  {
    "text": "just find your service called sample web app and update it to the latest container version that's all you need to",
    "start": "1124350",
    "end": "1129960"
  },
  {
    "text": "do it's a really really simple integration gets your containers flowing through nicely and you can obviously",
    "start": "1129960",
    "end": "1134970"
  },
  {
    "start": "1134000",
    "end": "1151000"
  },
  {
    "text": "build up those pipelines over time add more complex logic like doing load testing for example deploying to",
    "start": "1134970",
    "end": "1141690"
  },
  {
    "text": "integration environments what about service how does this work with service",
    "start": "1141690",
    "end": "1147960"
  },
  {
    "text": "how best to integrate service into our pipelines is anyone here using Sam AWS Sam any",
    "start": "1147960",
    "end": "1157559"
  },
  {
    "start": "1151000",
    "end": "1205000"
  },
  {
    "text": "people okay AWS Sam is probably the coolest way to deploy server less applications okay so it allows you to",
    "start": "1157559",
    "end": "1165389"
  },
  {
    "text": "describe a service app in a more file a small Yama file so when we first started",
    "start": "1165389",
    "end": "1170669"
  },
  {
    "text": "with lambda and serverless an api gateway people were you know developing their first lambda function cool",
    "start": "1170669",
    "end": "1177090"
  },
  {
    "text": "everything is easy once you start developing a more complex and advanced service application you end up with lots",
    "start": "1177090",
    "end": "1183210"
  },
  {
    "text": "of moving parts lots of lambda functions lots of API gateway integrations and stuff how do",
    "start": "1183210",
    "end": "1188490"
  },
  {
    "text": "you deploy that back when we first launched all with this a lot of people use cloud formation if you try and",
    "start": "1188490",
    "end": "1194639"
  },
  {
    "text": "describe the average service application in cloud formation you get a template about that long it's not a nice thing to",
    "start": "1194639",
    "end": "1200220"
  },
  {
    "text": "do sam simplifies that so nice it's an extension to cloud formation that just",
    "start": "1200220",
    "end": "1206500"
  },
  {
    "text": "allows you to describe your service up in a really really concise way and deploy it over and over again so this is",
    "start": "1206500",
    "end": "1212860"
  },
  {
    "text": "an open-source specification you can find the specification on github and",
    "start": "1212860",
    "end": "1219190"
  },
  {
    "start": "1219000",
    "end": "1289000"
  },
  {
    "text": "this this is an example this is like a concrete example so here we've got a SAM template if you've used cloud formation",
    "start": "1219190",
    "end": "1226030"
  },
  {
    "text": "before this should look fairly similar so we have a resources section and this resources section is where all my lambda",
    "start": "1226030",
    "end": "1232420"
  },
  {
    "text": "functions and dinamo tables and you know my whole architecture sets and in this case we've got a function called get",
    "start": "1232420",
    "end": "1239260"
  },
  {
    "text": "HTML function as arbitrary name and it's of type AWS server list function we tell",
    "start": "1239260",
    "end": "1245230"
  },
  {
    "text": "it where to find our code and what the runtime is you know is it no Jas is it Java for example and then the events",
    "start": "1245230",
    "end": "1252280"
  },
  {
    "text": "that we want to trigger our service function so in this case we've got one event and it's type API and we want to",
    "start": "1252280",
    "end": "1260560"
  },
  {
    "text": "mount this lambda function at slash in fact flush anything so anything the person puts off to slash in the URL and",
    "start": "1260560",
    "end": "1267580"
  },
  {
    "text": "with any HTTP method so get post put patch etc so this is all I need to do to",
    "start": "1267580",
    "end": "1274540"
  },
  {
    "text": "define an application write a simple one function application and when I deploy this with cloud formation it's gonna",
    "start": "1274540",
    "end": "1281290"
  },
  {
    "text": "create for me my lambda function the API gateway the mapping between it all the iam permissions and roles etc one really",
    "start": "1281290",
    "end": "1290890"
  },
  {
    "start": "1289000",
    "end": "1335000"
  },
  {
    "text": "cool thing you can do with Sam as well is actually develop locally so we have something called Sam local that allows",
    "start": "1290890",
    "end": "1297730"
  },
  {
    "text": "you to take a Sam template and your server list code and just run it locally so uses docker behind the scenes on your",
    "start": "1297730",
    "end": "1303700"
  },
  {
    "text": "local machine to actually run your lambda functions locally simulate API gateway locally and later develop and",
    "start": "1303700",
    "end": "1310450"
  },
  {
    "text": "test really really quickly like nice fast iterative cycle debugging and stepping through except for all those",
    "start": "1310450",
    "end": "1316180"
  },
  {
    "text": "kind of normal development methodologies and you can just do it all locally and when you're happy with it push it into",
    "start": "1316180",
    "end": "1322090"
  },
  {
    "text": "the cloud so I wanted to show you the",
    "start": "1322090",
    "end": "1327580"
  },
  {
    "text": "easiest way to set all this up for service right how I go about starting",
    "start": "1327580",
    "end": "1333100"
  },
  {
    "text": "new server list projects and I was gonna do this as a live demo and unfortunately I've been really let",
    "start": "1333100",
    "end": "1339820"
  },
  {
    "text": "down by the Wi-Fi in here apparently like the access point can't keep up with like a couple of thousand Oberst geeks",
    "start": "1339820",
    "end": "1345970"
  },
  {
    "text": "or something but so I I'm gonna fall back to slides in this case and I",
    "start": "1345970",
    "end": "1351010"
  },
  {
    "start": "1348000",
    "end": "1406000"
  },
  {
    "text": "apologize for that but this is a product in the AWS management console called code star and every time I ask about",
    "start": "1351010",
    "end": "1358390"
  },
  {
    "text": "codes aren't asked people we know have you seen this have you played with it not many people have and it's kind of similar to the internal tool I mentioned",
    "start": "1358390",
    "end": "1365560"
  },
  {
    "text": "at Amazon where you go to start a new project you choose your programming language you choose what type of",
    "start": "1365560",
    "end": "1371260"
  },
  {
    "text": "application you're writing and the architecture and it deploys a best-practice CI CD pipeline deployment",
    "start": "1371260",
    "end": "1377140"
  },
  {
    "text": "all your tests etc for you so when you first go to it you get a chance to",
    "start": "1377140",
    "end": "1382210"
  },
  {
    "text": "create a brand new project and the first thing you see when you do that it's",
    "start": "1382210",
    "end": "1387250"
  },
  {
    "text": "those technology choices so I can go in here and I can say yeah I want to write a go application it's a web app and I",
    "start": "1387250",
    "end": "1393160"
  },
  {
    "text": "want to run it on lambda in this case I'm gonna go through and pick a nodejs one so I pick nodejs on the left hand",
    "start": "1393160",
    "end": "1400090"
  },
  {
    "text": "side and web application and I've got an option at the top left here for writing a no js' web app on service I then get",
    "start": "1400090",
    "end": "1408250"
  },
  {
    "start": "1406000",
    "end": "1423000"
  },
  {
    "text": "asked for the project details right like what's the name of the project where do I want the source to code to be stored",
    "start": "1408250",
    "end": "1414010"
  },
  {
    "text": "and in this case code star can create me a repo in either AWS code commit or just",
    "start": "1414010",
    "end": "1419050"
  },
  {
    "text": "don't get hub as well so in this case I've chosen github and when you",
    "start": "1419050",
    "end": "1424810"
  },
  {
    "start": "1423000",
    "end": "1438000"
  },
  {
    "text": "integrate with github so I'd go through a log in with github and it gets access to my github account etc I can then",
    "start": "1424810",
    "end": "1431020"
  },
  {
    "text": "choose whether I want code star to create for me a private repo or a public repo so in this case I've chosen a",
    "start": "1431020",
    "end": "1436150"
  },
  {
    "text": "private repo and then you get a summary of everything that's gonna be deployed for you so that's all the kind of wizard",
    "start": "1436150",
    "end": "1442870"
  },
  {
    "text": "that you need to go through all the information gathering etc you give it a name and where you want the project to be stored code stars then gonna go away",
    "start": "1442870",
    "end": "1450370"
  },
  {
    "text": "and it's going to create that sauce repo for you it's gonna create a build environment for you so if you chose",
    "start": "1450370",
    "end": "1456190"
  },
  {
    "text": "nodejs it's gonna write run npm install and npm test and stuff to run unit tests",
    "start": "1456190",
    "end": "1461950"
  },
  {
    "text": "and it's gonna write the build spec file that i showed you the code build configuration file for you it's going to",
    "start": "1461950",
    "end": "1467620"
  },
  {
    "text": "configure it all set it all up to automatically run your builds and tests and then it's going to write your cloud",
    "start": "1467620",
    "end": "1473260"
  },
  {
    "text": "formation templates for you to actually do all the deployments it's going to write that Sam template for you and then",
    "start": "1473260",
    "end": "1479530"
  },
  {
    "text": "it's going to set up things like monitoring as well so you get best practice monitoring on you know error rates invocation latencies etc so you",
    "start": "1479530",
    "end": "1488740"
  },
  {
    "start": "1487000",
    "end": "1533000"
  },
  {
    "text": "click Next it goes away and is creative for me a github repository and I get the URL and this for me as a developer is",
    "start": "1488740",
    "end": "1496000"
  },
  {
    "text": "the main way I interact with this project right I check out the code I make some changes test it locally etc",
    "start": "1496000",
    "end": "1502090"
  },
  {
    "text": "and then push back into the github repo and that's all I need to do to trigger a deployment so I can go in and have a",
    "start": "1502090",
    "end": "1509380"
  },
  {
    "text": "look at the github repo and you can see for me code stars created like a sample serverless application it's a really",
    "start": "1509380",
    "end": "1516100"
  },
  {
    "text": "simple one it just serves up a static website in this case but the code is there and you can start playing around",
    "start": "1516100",
    "end": "1521680"
  },
  {
    "text": "with it you can see that build spec file there for code build and a few others like template for the Sam template and",
    "start": "1521680",
    "end": "1528040"
  },
  {
    "text": "some Doc's below on you know what it does and the moving parts so once that's",
    "start": "1528040",
    "end": "1535360"
  },
  {
    "start": "1533000",
    "end": "1585000"
  },
  {
    "text": "done it takes like three or four minutes you get a nice dashboard for your development project you don't have to",
    "start": "1535360",
    "end": "1541120"
  },
  {
    "text": "use it like all of these tools are pre-configured as best practice but you can change an iterate on them as you go",
    "start": "1541120",
    "end": "1547300"
  },
  {
    "text": "on this this dashboard that it creates view is quite nice it shows you know your github issues and commits histories",
    "start": "1547300",
    "end": "1553750"
  },
  {
    "text": "in one place you've got your CI CD pipeline on the right-hand side here so you can watch it go through and modify",
    "start": "1553750",
    "end": "1559810"
  },
  {
    "text": "and goes through build and test etc and then you get your metrics and your logs as well so you can see straight here",
    "start": "1559810",
    "end": "1565480"
  },
  {
    "text": "right from your project dashboard you know what are my invitations and errors and this demo app I didn't really have",
    "start": "1565480",
    "end": "1571210"
  },
  {
    "text": "any demo data and you also get a chance to add team members really really easily so you don't need to go something up",
    "start": "1571210",
    "end": "1577210"
  },
  {
    "text": "like I am users etc for all your team members you can just really easily add team members to collaborate on your",
    "start": "1577210",
    "end": "1582940"
  },
  {
    "text": "project from here so I think AWS code",
    "start": "1582940",
    "end": "1589090"
  },
  {
    "start": "1585000",
    "end": "1602000"
  },
  {
    "text": "star rocks like it is the simplest way to get started with a server list project today",
    "start": "1589090",
    "end": "1594250"
  },
  {
    "text": "it doesn't just deployed a server lists it deploys to Beanstalk and a load of other options as well there but I see",
    "start": "1594250",
    "end": "1599860"
  },
  {
    "text": "this being used most for server lists these days okay let's talk a little bit about where",
    "start": "1599860",
    "end": "1607080"
  },
  {
    "start": "1602000",
    "end": "1645000"
  },
  {
    "text": "next I mentioned a bit about the developer experience what does it look like in your organization today when a",
    "start": "1607080",
    "end": "1613289"
  },
  {
    "text": "developer wants to start a new project what do they need to go through does it look like that code star example right",
    "start": "1613289",
    "end": "1618690"
  },
  {
    "text": "um so code stars a really really good way of getting started with all those best practices but you can't customize it",
    "start": "1618690",
    "end": "1626130"
  },
  {
    "text": "right you can you can tweak things after it's been deployed but you can't bake in all of your best practices and have any",
    "start": "1626130",
    "end": "1632340"
  },
  {
    "text": "one that goes to codes do I have like a custom tile for your application or your CI CD pipeline so how do you get all",
    "start": "1632340",
    "end": "1639179"
  },
  {
    "text": "these best practices bake him in a pipeline and then make it repeatable so",
    "start": "1639179",
    "end": "1644610"
  },
  {
    "text": "let's talk a bit about how to do that so when you build a code pipeline you can",
    "start": "1644610",
    "end": "1650639"
  },
  {
    "start": "1645000",
    "end": "1669000"
  },
  {
    "text": "do this graphically by the AWS management console there's like a nice UI that will take you through and you",
    "start": "1650639",
    "end": "1656789"
  },
  {
    "text": "can add more and more steps you know unit testing integration testing etc to your pipeline but that's not very",
    "start": "1656789",
    "end": "1663899"
  },
  {
    "text": "repeatable right that's human manual interaction every single time so one",
    "start": "1663899",
    "end": "1669929"
  },
  {
    "start": "1669000",
    "end": "1686000"
  },
  {
    "text": "thing you can do is these pipelines under the scenes behind the hood they're",
    "start": "1669929",
    "end": "1675090"
  },
  {
    "text": "just Jason right they're described as Jason so you can actually run using the AWS CLI once you built your pipeline",
    "start": "1675090",
    "end": "1682200"
  },
  {
    "text": "graphically just go and dump out the Jason and get the full Jason for your pipeline once you've got that you could",
    "start": "1682200",
    "end": "1689159"
  },
  {
    "start": "1686000",
    "end": "1716000"
  },
  {
    "text": "put it in a cloud formation template right and then you've got a cloud formation template that when it's spun",
    "start": "1689159",
    "end": "1694679"
  },
  {
    "text": "up will spin up a whole dev environment with source repo you know with all that kind of stuff with the pipeline with all",
    "start": "1694679",
    "end": "1700559"
  },
  {
    "text": "your best practices baked in so how do you distribute that cloud formation template then one option is to have like",
    "start": "1700559",
    "end": "1707820"
  },
  {
    "text": "a wiki page internally right and put your cloud formation template on there and have people spin it up not quite the",
    "start": "1707820",
    "end": "1713399"
  },
  {
    "text": "best developer experience there a better option is AWS Service Catalog if you",
    "start": "1713399",
    "end": "1719490"
  },
  {
    "start": "1716000",
    "end": "1737000"
  },
  {
    "text": "haven't seen Service Catalog it allows you to create portfolios of products and serve them up in a self-service way to",
    "start": "1719490",
    "end": "1727049"
  },
  {
    "text": "people in your organization those products have really just cloud formation templates so anything you can",
    "start": "1727049",
    "end": "1732870"
  },
  {
    "text": "put in a cloud formation template you can product eyes and make self-service so I can first create a portfolio so",
    "start": "1732870",
    "end": "1740370"
  },
  {
    "start": "1737000",
    "end": "1756000"
  },
  {
    "text": "service catalog I may create a portfolio for my developers for example and this",
    "start": "1740370",
    "end": "1746400"
  },
  {
    "text": "is a portfolio that all my developers will get access to and it's got a whole load of different products or pipelines in there that they can choose from so in",
    "start": "1746400",
    "end": "1753120"
  },
  {
    "text": "this case I created a portfolio called internal development and then within that portfolio I create my products and",
    "start": "1753120",
    "end": "1759600"
  },
  {
    "start": "1756000",
    "end": "1774000"
  },
  {
    "text": "in this case it might be like CI CD pipeline for NGO serverless applications",
    "start": "1759600",
    "end": "1764640"
  },
  {
    "text": "or something and I can take that nice pipeline I've designed with all my sort of security checks and best practices",
    "start": "1764640",
    "end": "1771090"
  },
  {
    "text": "etc and I can turn that into a product I get a chance to offer things like",
    "start": "1771090",
    "end": "1776970"
  },
  {
    "start": "1774000",
    "end": "1786000"
  },
  {
    "text": "support details like who to contact when this goes wrong for example I get a chance to tag the resources that get",
    "start": "1776970",
    "end": "1783510"
  },
  {
    "text": "created with this for cost control and then I choose my template so this is",
    "start": "1783510",
    "end": "1789900"
  },
  {
    "start": "1786000",
    "end": "1837000"
  },
  {
    "text": "where you upload your cloud formation template and once you've done this you've got your product it's been",
    "start": "1789900",
    "end": "1795000"
  },
  {
    "text": "bundled up people can then do this self-service one really nice feature of this is the iam permissions that are",
    "start": "1795000",
    "end": "1801510"
  },
  {
    "text": "needed so normally if I if I wanted to say give someone here a cloud formation template that spins up my pipeline that",
    "start": "1801510",
    "end": "1808320"
  },
  {
    "text": "user or that person is going to need all the permissions to create a pipeline to invoke loads of stuff like there's some",
    "start": "1808320",
    "end": "1814830"
  },
  {
    "text": "pretty lengthy iam permissions involved there weird new using Service Catalog the user only needs permission to",
    "start": "1814830",
    "end": "1821580"
  },
  {
    "text": "interact with service catalog Service Catalog is the one doing all the deployment and stuff so therefore it's a",
    "start": "1821580",
    "end": "1827820"
  },
  {
    "text": "really really nice way of giving these developers environments that they can spin up easily without having to have",
    "start": "1827820",
    "end": "1834570"
  },
  {
    "text": "loads of crazy iam permissions so create my product then when a developer logs in",
    "start": "1834570",
    "end": "1840500"
  },
  {
    "start": "1837000",
    "end": "1860000"
  },
  {
    "text": "once you've given them access to that portfolio of products they can just go in and they can see ok I've got you know",
    "start": "1840500",
    "end": "1846360"
  },
  {
    "text": "I might develop an environment here I can just go and launch this and I can see my existing ones that I've already launched and I can spin them up and spin",
    "start": "1846360",
    "end": "1853110"
  },
  {
    "text": "them down easily so this is a really nice way of sharing those pipelines",
    "start": "1853110",
    "end": "1858480"
  },
  {
    "text": "internally so I wanted to wrap up and",
    "start": "1858480",
    "end": "1865050"
  },
  {
    "start": "1860000",
    "end": "1939000"
  },
  {
    "text": "just sort of summarize what we've been over we talked a lot about bottlenecks at the beginning and using automation in",
    "start": "1865050",
    "end": "1871149"
  },
  {
    "text": "your software release processes to remove those bottlenecks I always try to encourage customers to whiteboard out",
    "start": "1871149",
    "end": "1876940"
  },
  {
    "text": "what your software delivery process looks like today try and work out which bits today are manual processes which",
    "start": "1876940",
    "end": "1883119"
  },
  {
    "text": "ones are the most expensive time-consuming ones and try and automate them and put them in a pipeline use",
    "start": "1883119",
    "end": "1888700"
  },
  {
    "text": "something like Co pipeline code build great for automating and scaling out your builds and tests for containers if",
    "start": "1888700",
    "end": "1896979"
  },
  {
    "text": "you're using EC s Co pipelines native integration with e CS makes it pretty trivial to deploy your containers",
    "start": "1896979",
    "end": "1902979"
  },
  {
    "text": "there's options as well for kubernetes that we showed in the last talk using service AWS Sam is a really nice concise",
    "start": "1902979",
    "end": "1910779"
  },
  {
    "text": "way to deploy your service applications test and run them develop on them locally for example and then as you get",
    "start": "1910779",
    "end": "1918369"
  },
  {
    "text": "to a point where you want to scale this out and make your pipelines more self-service have a look at AWS Service",
    "start": "1918369",
    "end": "1923889"
  },
  {
    "text": "Catalog so with that I'm gonna wrap this up I'm gonna be around at the front if",
    "start": "1923889",
    "end": "1930339"
  },
  {
    "text": "anyone has any questions they want to come and ask me about more than happy to hang around and answer questions thank",
    "start": "1930339",
    "end": "1936159"
  },
  {
    "text": "you very much [Applause]",
    "start": "1936159",
    "end": "1941339"
  }
]