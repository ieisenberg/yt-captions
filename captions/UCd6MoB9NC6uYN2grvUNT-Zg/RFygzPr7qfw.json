[
  {
    "start": "0",
    "end": "53000"
  },
  {
    "text": "hello my name is Kyle Bloom and I am a Senior Solutions architect with AWS",
    "start": "1280",
    "end": "6480"
  },
  {
    "text": "today's demo highlights how agents for Amazon bedrock and knowledge based for Amazon Bedrock work together to provide",
    "start": "6480",
    "end": "13080"
  },
  {
    "text": "automated task execution and efficient search capabilities for customer knowledge",
    "start": "13080",
    "end": "18560"
  },
  {
    "text": "repositories agents and knowledge based for Amazon Bedrock build on existing Enterprise resources so you can use your",
    "start": "18560",
    "end": "24720"
  },
  {
    "text": "existing business logic and customer authoritative data sources to power agent functionality this insurance agent",
    "start": "24720",
    "end": "31439"
  },
  {
    "text": "sample solution combines an agent knowledge based for Amazon Bedrock to automate the insurance claim life cycle",
    "start": "31439",
    "end": "38120"
  },
  {
    "text": "so the agent can perform actions like creating a new claim sending pending document reminders Gathering claims",
    "start": "38120",
    "end": "44280"
  },
  {
    "text": "evidence and searching for information on existing claims as well as other data across a customer authoritative data",
    "start": "44280",
    "end": "51079"
  },
  {
    "text": "repository stored in Amazon S3 we use streamlet in this solution to",
    "start": "51079",
    "end": "57480"
  },
  {
    "start": "53000",
    "end": "335000"
  },
  {
    "text": "launch an example front end intended to to emulate what would be a customer's production",
    "start": "57480",
    "end": "62600"
  },
  {
    "text": "application to the right of the streamlet app is our local terminal so you can see the backend processes of",
    "start": "62600",
    "end": "68360"
  },
  {
    "text": "each front end action our application provides two features the first is the",
    "start": "68360",
    "end": "73759"
  },
  {
    "text": "agent for Amazon Bedrock prompt input this allows the user to invoke the agent using their own task input and then",
    "start": "73759",
    "end": "80880"
  },
  {
    "text": "there's the knowledge based for Amazon Bedrock file upload feature so this enables the user to upload their local",
    "start": "80880",
    "end": "87079"
  },
  {
    "text": "files to the Amazon S3 bucket that is being used as the data source",
    "start": "87079",
    "end": "92479"
  },
  {
    "text": "for the customer's knowledge base once that file is uploaded that feature the file upload feature starts in ingestion",
    "start": "92479",
    "end": "99920"
  },
  {
    "text": "job to sync the knowledge-based data source we navigate to the agents for",
    "start": "99920",
    "end": "106399"
  },
  {
    "text": "Amazon Bedrock console and select our insurance agent the agent overview",
    "start": "106399",
    "end": "111640"
  },
  {
    "text": "provides metadata like the agent Name ID description and IM roll if we scroll",
    "start": "111640",
    "end": "118079"
  },
  {
    "text": "down we see the working draft of our agent once you select the working draft",
    "start": "118079",
    "end": "123439"
  },
  {
    "text": "you will see the foundation model and instructions used to configure your agent the model is the foundation model",
    "start": "123439",
    "end": "130119"
  },
  {
    "text": "that your agent will use for react prompting as part of its reasoning process and then the instructions",
    "start": "130119",
    "end": "135879"
  },
  {
    "text": "outline the agent's intended functionality so think of the instructions as part of the base prompt",
    "start": "135879",
    "end": "141680"
  },
  {
    "text": "that the agent uses during its iterative react prompting reasoning process this",
    "start": "141680",
    "end": "146800"
  },
  {
    "text": "is the process where through an iterative series of thoughts actions and then observations the agent reasons its",
    "start": "146800",
    "end": "153400"
  },
  {
    "text": "way to a final response the agent is equipped with with a set of tools some of which are",
    "start": "153400",
    "end": "160080"
  },
  {
    "text": "referred to as action groups so action groups are a set of apis in corresponding business logic their open",
    "start": "160080",
    "end": "167239"
  },
  {
    "text": "API schema is defined as Json file stored in Amazon S3 and that schema is",
    "start": "167239",
    "end": "172959"
  },
  {
    "text": "what allows the agent along with the Action Group descriptions to reason around the function of each API uh each",
    "start": "172959",
    "end": "180200"
  },
  {
    "text": "Action Group can specify one or more API paths and then those API paths business",
    "start": "180200",
    "end": "185519"
  },
  {
    "text": "logic is executed through the Lambda function that's associated with uh with the Action",
    "start": "185519",
    "end": "191519"
  },
  {
    "text": "Group when we select the create claim Action Group for example we see that the",
    "start": "191519",
    "end": "196760"
  },
  {
    "text": "action group is comprised of a description that allows the agent to identify what the action group is used",
    "start": "196760",
    "end": "202239"
  },
  {
    "text": "for and then we see the the Lambda that contains the API business Logic the open",
    "start": "202239",
    "end": "207599"
  },
  {
    "text": "API schema in S3 that provides a dist contextual details all for the agent to understand the API",
    "start": "207599",
    "end": "214640"
  },
  {
    "text": "functionality now knowledge bases knowledge bases provide fully managed rag capabilities retrieval augmented",
    "start": "214640",
    "end": "221439"
  },
  {
    "text": "generation capabilities to supply the agent with access to your data uh when we select our claims knowledge base you",
    "start": "221439",
    "end": "228239"
  },
  {
    "text": "will see that you configure the knowledge Base by specifying a description that instructs the agent",
    "start": "228239",
    "end": "233360"
  },
  {
    "text": "when to use your knowledge base hopping over to the knowledge base",
    "start": "233360",
    "end": "238840"
  },
  {
    "text": "console for Amazon bedrock and selecting our claims knowledge base to take a closer look at the",
    "start": "238840",
    "end": "245159"
  },
  {
    "text": "configuration in the knowledgebase overview you will see some configuration metadata including the knowledge based",
    "start": "245159",
    "end": "251519"
  },
  {
    "text": "Name ID description and IM roll as part of your knowledge based",
    "start": "251519",
    "end": "257560"
  },
  {
    "text": "configuration we are building on existing customer knowledge based repositories pointing the knowledge base",
    "start": "257560",
    "end": "263520"
  },
  {
    "text": "to an Amazon S3 data source uh we can cross launch into the S3 console to view",
    "start": "263520",
    "end": "269039"
  },
  {
    "text": "our S3 bucket contents in our case we initially have nine objects that are a",
    "start": "269039",
    "end": "275120"
  },
  {
    "text": "combination of documents that contain claim amounts repair estimates FAQ documents and other informational",
    "start": "275120",
    "end": "282240"
  },
  {
    "text": "documents jumping back to the knowledge based console and selecting our data",
    "start": "282240",
    "end": "287280"
  },
  {
    "text": "source we see it's sync history so when you create your knowledge base you",
    "start": "287280",
    "end": "292800"
  },
  {
    "text": "specify an existing Vector store or you allow Bedrock to create the vector store",
    "start": "292800",
    "end": "298000"
  },
  {
    "text": "on your behalf as part of the knowledge based configuration if it if it creates one on your behalf it's creating an open",
    "start": "298000",
    "end": "303800"
  },
  {
    "text": "search server list collection on your behalf to act as the vector store index once configured each data source sync",
    "start": "303800",
    "end": "312120"
  },
  {
    "text": "creates Vector embeddings of your text Data that's stored in S3 so that the",
    "start": "312120",
    "end": "317720"
  },
  {
    "text": "agent can uh use those embeddings to return information to the user or augment subsequent Foundation model",
    "start": "317720",
    "end": "324680"
  },
  {
    "text": "prompts based off of similarity search comparisons we see here that our",
    "start": "324680",
    "end": "329840"
  },
  {
    "text": "original mind objects are in sync with the knowledge base back to our streamlet UI we will",
    "start": "329840",
    "end": "337720"
  },
  {
    "start": "335000",
    "end": "470000"
  },
  {
    "text": "start by uploading a claim amount document so the streamlet UI shows us",
    "start": "337720",
    "end": "345280"
  },
  {
    "text": "that the file was successfully uploaded to S3 and the ingestion job status to",
    "start": "345280",
    "end": "352759"
  },
  {
    "text": "sync the knowledge base data source is shown below we can preview the claim amount",
    "start": "352759",
    "end": "359639"
  },
  {
    "text": "document within the app here's a closer view of the document which contains various vehicle property injury and",
    "start": "359639",
    "end": "367199"
  },
  {
    "text": "total claim amounts with the document uploaded to S3",
    "start": "367199",
    "end": "373039"
  },
  {
    "text": "and the knowledge base in sync we can now query the agent for the information contained within the document we'll",
    "start": "373039",
    "end": "378960"
  },
  {
    "text": "start with a query like what is the total claim amount for claim ID 3B 45C",
    "start": "378960",
    "end": "385240"
  },
  {
    "text": "hyphen 9d now behind the scenes the agent identifies that it needs to use the",
    "start": "385240",
    "end": "391039"
  },
  {
    "text": "knowledge-based search tool then performs a similarity search across documents using the text embeddings we",
    "start": "391039",
    "end": "397599"
  },
  {
    "text": "will discuss agent tracing in more detail uh towards the end of the",
    "start": "397599",
    "end": "402599"
  },
  {
    "text": "demo and we see the agents response back that the total claim amount for claim ID specified is",
    "start": "404039",
    "end": "410080"
  },
  {
    "text": "$86,400 we will follow up with another question",
    "start": "410080",
    "end": "415520"
  },
  {
    "text": "using the contextual history that the agent possesses to just specify what is the vehicle claim amount for the same",
    "start": "415520",
    "end": "423440"
  },
  {
    "text": "claim we see the agent's response that the vehicle claim amount for the specified claim ID is $",
    "start": "428680",
    "end": "436879"
  },
  {
    "text": "62,64 and we can validate those responses against the provided document for total claim amount and the vehicle",
    "start": "439400",
    "end": "445840"
  },
  {
    "text": "claim amount if we navigate back to to the Amazon S3 console and refresh we now see",
    "start": "445840",
    "end": "452520"
  },
  {
    "text": "that we have 10 objects in our bucket including the latest claims amount",
    "start": "452520",
    "end": "458199"
  },
  {
    "text": "document a similar refresh of our data source screen will show that the latest sync added a new file all part of the",
    "start": "458199",
    "end": "466759"
  },
  {
    "text": "knowledge based upload feature in our streamline app let's upload another document this",
    "start": "466759",
    "end": "473159"
  },
  {
    "start": "470000",
    "end": "695000"
  },
  {
    "text": "time a repair estimate document for the same claim we see that the file uploads and",
    "start": "473159",
    "end": "481039"
  },
  {
    "text": "the data source",
    "start": "481039",
    "end": "483879"
  },
  {
    "text": "syncs we can preview the document again and show you a closer glance at",
    "start": "487680",
    "end": "493960"
  },
  {
    "text": "the document which looks like this and we'll start with a question",
    "start": "493960",
    "end": "500960"
  },
  {
    "text": "about the repair estimate document with the question like what is the repair estimate total for the same",
    "start": "500960",
    "end": "507240"
  },
  {
    "text": "claim the use case here being a human insurance agent wanting to compare two",
    "start": "507240",
    "end": "512518"
  },
  {
    "text": "values across documents making sure that the repair estimate total matches the",
    "start": "512519",
    "end": "518440"
  },
  {
    "text": "vehicle claim amount total and we see the agent's response that the repair estimate total for the specified claim",
    "start": "518440",
    "end": "525399"
  },
  {
    "text": "is $ 62,64 now we'll ask in the repair",
    "start": "525399",
    "end": "530680"
  },
  {
    "text": "estimate diagnosis for that same",
    "start": "530680",
    "end": "534360"
  },
  {
    "text": "claim the diagnosis for that specified claim is front end collision broken",
    "start": "537720",
    "end": "543279"
  },
  {
    "text": "front axle and shattered windshield finally we'll ask what about the repair estimate resolution for that",
    "start": "543279",
    "end": "549720"
  },
  {
    "text": "same",
    "start": "549720",
    "end": "551959"
  },
  {
    "text": "claim and the agent responds that the resolution for that claim is that there",
    "start": "556880",
    "end": "562120"
  },
  {
    "text": "is an insurance payout required and we can validate the agent",
    "start": "562120",
    "end": "568279"
  },
  {
    "text": "provided responses with the information contained in the repair estimate",
    "start": "568279",
    "end": "574279"
  },
  {
    "text": "document now imagine that the human insurance agent is assisting a client with their claims process and the agent",
    "start": "574920",
    "end": "582000"
  },
  {
    "text": "will like to query the company's internal FAQ documents to provide responses to the client's questions for",
    "start": "582000",
    "end": "588480"
  },
  {
    "text": "instance how were policy premiums calculated based on the insured driving history and claims record maybe the",
    "start": "588480",
    "end": "596240"
  },
  {
    "text": "policy holder is worried about how a recent claim may affect their",
    "start": "596240",
    "end": "603079"
  },
  {
    "text": "premium and we see the agent response that premiums are calculated using a proprietary algorithm that contains",
    "start": "605680",
    "end": "611880"
  },
  {
    "text": "factors such as driving history claims frequency vehicle type and location an internal model analyzes historical data",
    "start": "611880",
    "end": "618800"
  },
  {
    "text": "to assess risk and determine appropriate premium rates so this would be an internal FAQ document response one maybe",
    "start": "618800",
    "end": "626120"
  },
  {
    "text": "we don't necessarily want to share externally with our clients but allows us to educate the human insurance agent",
    "start": "626120",
    "end": "633320"
  },
  {
    "text": "on our internal processes the human agent may follow up with a another question in this case in",
    "start": "633320",
    "end": "640720"
  },
  {
    "text": "the event of a claim what steps should agents follow to ensure a streamline and efficient claims",
    "start": "640720",
    "end": "648519"
  },
  {
    "text": "process the agent responds letting us know that agents should follow the internal claims handling protocol",
    "start": "654519",
    "end": "660760"
  },
  {
    "text": "initiating the process by collecting necessary information from the policy holder this includes details about the",
    "start": "660760",
    "end": "666040"
  },
  {
    "text": "incident photos and any supporting documents the internal claim system then guides agents through each step ensuring",
    "start": "666040",
    "end": "672880"
  },
  {
    "text": "a smooth and efficient claims resolution now what if we wanted to make similar FAQs externally available so",
    "start": "672880",
    "end": "679720"
  },
  {
    "text": "clients have on demand self-service access to the information that they need",
    "start": "679720",
    "end": "685440"
  },
  {
    "text": "well we can create a document that has the Journal FAQs contained in it you see",
    "start": "685440",
    "end": "691000"
  },
  {
    "text": "an example of such document here where we see the question answer and Source Uris we upload this",
    "start": "691000",
    "end": "699160"
  },
  {
    "start": "695000",
    "end": "854000"
  },
  {
    "text": "document using the same workflow demonstrated previously through the file upload",
    "start": "699160",
    "end": "706839"
  },
  {
    "text": "process then we can query the knowledge base once our data source is in sync",
    "start": "708519",
    "end": "714800"
  },
  {
    "text": "asking a question like what factors determine my car insurance premium",
    "start": "714800",
    "end": "720959"
  },
  {
    "text": "the agent responds that the factors that determine your car insurance premium include your driving record Age location",
    "start": "727880",
    "end": "733480"
  },
  {
    "text": "type of vehicle coverage options and more insurance companies use proprietary algorithms and models to analyze these",
    "start": "733480",
    "end": "739399"
  },
  {
    "text": "factors and determine appropriate premium rates based on risk maybe I would follow up then as the client to",
    "start": "739399",
    "end": "744880"
  },
  {
    "text": "ask another question how can I lower my car insurance rates",
    "start": "744880",
    "end": "750880"
  },
  {
    "text": "the agent informs us that there are several ways you can potentially lower your car insurance rates including",
    "start": "753040",
    "end": "759160"
  },
  {
    "text": "maintaining a good driving record with no accidents or traffic violations taking defensive driving courses which",
    "start": "759160",
    "end": "765480"
  },
  {
    "text": "may qualify you for a discount bundling multiple insurance policies with the same provider and qualifying for",
    "start": "765480",
    "end": "772440"
  },
  {
    "text": "available discounts such as good student safe driver Etc you can speak with an agent to discuss options specifically to",
    "start": "772440",
    "end": "779040"
  },
  {
    "text": "your policy and eligibility for Discount finally if we navigate back to our Amazon S3 document repository we now see",
    "start": "779040",
    "end": "786800"
  },
  {
    "text": "that there are 12 objects including the repair estimate for the specified claim",
    "start": "786800",
    "end": "792560"
  },
  {
    "text": "and now the external Insurance FAQ document a view of the data source sync",
    "start": "792560",
    "end": "798480"
  },
  {
    "text": "history shows two additional syncs Each of which have added one document that",
    "start": "798480",
    "end": "803839"
  },
  {
    "text": "being the repair estimate then the external Insurance fq document",
    "start": "803839",
    "end": "809399"
  },
  {
    "text": "then to demonstrate Action Group functionality we'll return to our streamlet app and provide one final user",
    "start": "809399",
    "end": "816279"
  },
  {
    "text": "input in this case the request to create a new claim based off this user input",
    "start": "816279",
    "end": "822760"
  },
  {
    "text": "the agent will identify that it needs to use the create claim Action Group which",
    "start": "822760",
    "end": "828240"
  },
  {
    "text": "corresponds to the create claim API path and corresponding business",
    "start": "828240",
    "end": "834000"
  },
  {
    "text": "logic ultimately returning the response that the agent has created a new claim with with a unique ID and the pending",
    "start": "834000",
    "end": "840959"
  },
  {
    "text": "documents that need to be processed for that claim are the driver's license registration and evidence please upload",
    "start": "840959",
    "end": "847279"
  },
  {
    "text": "these documents at your earliest convenience so we can proceed with processing your claim let me know if you",
    "start": "847279",
    "end": "852480"
  },
  {
    "text": "have any other questions a look at the agents architecture shows us that users can",
    "start": "852480",
    "end": "858759"
  },
  {
    "start": "854000",
    "end": "1003000"
  },
  {
    "text": "provide their inputs using text to interact with the agent for Amazon",
    "start": "858759",
    "end": "864800"
  },
  {
    "text": "Bedrock some of the sample prompts that we'd issue into here are things like creative a new claim or send pending",
    "start": "864800",
    "end": "871120"
  },
  {
    "text": "document reminders to the policy holder for a specific claim or any one of the natural queries that you maybe use for",
    "start": "871120",
    "end": "878240"
  },
  {
    "text": "the customer data repository things like what is the total repair estimate for a specific claim ID or FAQ questions like",
    "start": "878240",
    "end": "886600"
  },
  {
    "text": "how can I lower my insurance rates during pre-processing what you see",
    "start": "886600",
    "end": "892519"
  },
  {
    "text": "as number two here in our workflow the agent validates contextualizes and categorizes user input so user input",
    "start": "892519",
    "end": "899920"
  },
  {
    "text": "comes in in the form of a task that's interpreted by the agent using its chat history and the instructions and",
    "start": "899920",
    "end": "906279"
  },
  {
    "text": "underlying Foundation model that were specified by the user during agent creation so these instructions provide",
    "start": "906279",
    "end": "912720"
  },
  {
    "text": "descriptive guidance to the agent on its intended actions and its ultimate",
    "start": "912720",
    "end": "918240"
  },
  {
    "text": "purpose during orchestration step three the agent develops a rationale with",
    "start": "918240",
    "end": "924240"
  },
  {
    "text": "logical steps of which action group API invocations and knowledge based queries are needed to generate an",
    "start": "924240",
    "end": "930839"
  },
  {
    "text": "observation and it iteratively goes through that react style prompting until it comes up with a final response for",
    "start": "930839",
    "end": "937199"
  },
  {
    "text": "the user the tools that the agent are using are action groups and knowledge bases so action groups are a set of apis",
    "start": "937199",
    "end": "943399"
  },
  {
    "text": "in corresponding business logic where the open API schema is defined in Json stored in S3 and the business logic is",
    "start": "943399",
    "end": "951480"
  },
  {
    "text": "executed through Lambda functions knowledge bases are that fully managed",
    "start": "951480",
    "end": "956519"
  },
  {
    "text": "retrieval augmented generation capability that allows the agent to have access to customer specific data so you",
    "start": "956519",
    "end": "963079"
  },
  {
    "text": "specify an Amazon S3 data source that contains your document or knowledge",
    "start": "963079",
    "end": "968680"
  },
  {
    "text": "repository and then knowledge bases provide a managed Vector store and",
    "start": "968680",
    "end": "974560"
  },
  {
    "text": "create the vector embeddings themselves so that you can do similarity search across your document repository and",
    "start": "974560",
    "end": "981240"
  },
  {
    "text": "align that with the user input so you pull the most contextually relevant information and then augment the",
    "start": "981240",
    "end": "988120"
  },
  {
    "text": "original base prompt with that information ultimately moving to step number six where once all orchestration",
    "start": "988120",
    "end": "994880"
  },
  {
    "text": "iterations are complete the agent creates a final response using the Amazon Bedrock Foundation model on which",
    "start": "994880",
    "end": "1001600"
  },
  {
    "text": "the agent is built further examing the knowledge based architecture we see that",
    "start": "1001600",
    "end": "1007440"
  },
  {
    "text": "knowledge-based functionality is delineated through two key processes first pre-processing and then second is",
    "start": "1007440",
    "end": "1013120"
  },
  {
    "text": "runtime execution so during pre-processing in Step One the documents",
    "start": "1013120",
    "end": "1018279"
  },
  {
    "text": "that in the customer data source repository on Amazon S3 those documents",
    "start": "1018279",
    "end": "1024199"
  },
  {
    "text": "undergo segmentation through what we call chunking so that the text in those documents is pulled into more manageable",
    "start": "1024199",
    "end": "1031360"
  },
  {
    "text": "chunks and then those chunks in step two are converted into embeddings using an Amazon Bedrock embedding",
    "start": "1031360",
    "end": "1037520"
  },
  {
    "text": "model those embeddings are then utilized to create a vector index so we can perform semantic similarity comparisons",
    "start": "1037520",
    "end": "1044558"
  },
  {
    "text": "between the incoming user inputs and the text that's stored in the uh the data source that makes up the",
    "start": "1044559",
    "end": "1050720"
  },
  {
    "text": "knowledge base then during runtime the user provides their text input that input is",
    "start": "1050720",
    "end": "1057799"
  },
  {
    "text": "also transformed into vectors using that Amazon Bedrock embedding model the",
    "start": "1057799",
    "end": "1062840"
  },
  {
    "text": "vector index is queried for chunks related to that user query and we augment the base prompt through that",
    "start": "1062840",
    "end": "1068520"
  },
  {
    "text": "react prompting with additional context retriev from the vector index and then that augmented prompt coupled with the",
    "start": "1068520",
    "end": "1075120"
  },
  {
    "text": "additional context is ultimately used to generate a response for the user",
    "start": "1075120",
    "end": "1080400"
  },
  {
    "start": "1080000",
    "end": "1469000"
  },
  {
    "text": "user once your knowledge base is created you will navigate to the knowledge base console with an AWS Management console",
    "start": "1080720",
    "end": "1088440"
  },
  {
    "text": "you'll see on the Stacked menu on the left underneath orchestration is where you'll find knowledge based and agents",
    "start": "1088440",
    "end": "1095159"
  },
  {
    "text": "selecting for knowledge base you'll see your available knowledge bases we'll navigate to the claims knowledge base",
    "start": "1095159",
    "end": "1102520"
  },
  {
    "text": "where we will see an overview of our knowledge base configuration that includes the knowledge base name the",
    "start": "1102520",
    "end": "1108360"
  },
  {
    "text": "destion that lets us know what the knowledge base is used for the knowledge base ID and then some other metadata",
    "start": "1108360",
    "end": "1115679"
  },
  {
    "text": "stats around status and the created date and Associated IM role for the service",
    "start": "1115679",
    "end": "1121200"
  },
  {
    "text": "if we scroll down we'll see the data source that's configured for this knowledge base a claims data source that points to an S3",
    "start": "1121200",
    "end": "1129200"
  },
  {
    "text": "bucket if I open the data source I will see the name of the data source the data",
    "start": "1129200",
    "end": "1134799"
  },
  {
    "text": "source ID and additional metadata I also see the syn history so as I add new",
    "start": "1134799",
    "end": "1140480"
  },
  {
    "text": "documents to my Amazon S3 document repository I will sync the knowledge base to make sure that the embeddings",
    "start": "1140480",
    "end": "1146840"
  },
  {
    "text": "are up to dat and stored in the managed Vector store in our case an open search",
    "start": "1146840",
    "end": "1153240"
  },
  {
    "text": "serverless collection I'll navigate back to the knowledgebase console and I will",
    "start": "1153240",
    "end": "1158960"
  },
  {
    "text": "see the test window for knowledge base if the testing window is minimize select the test option in the top right you'll",
    "start": "1158960",
    "end": "1166440"
  },
  {
    "text": "select your model that you want to use to interact with the knowledge base in our case we'll use Claud",
    "start": "1166440",
    "end": "1173720"
  },
  {
    "text": "2.1 selecting that model I then have the opportunity to perform some testing using some example queries on this",
    "start": "1173799",
    "end": "1180159"
  },
  {
    "text": "knowledge base this allows me to validate the functionality of the knowledge base before I integrate it",
    "start": "1180159",
    "end": "1185760"
  },
  {
    "text": "with my agent I can ask a question like what is the diagnosis on the repair",
    "start": "1185760",
    "end": "1193720"
  },
  {
    "text": "estimate for claim ID 2s 34w hyphen 8x",
    "start": "1193720",
    "end": "1198799"
  },
  {
    "text": "I see the diagnosis for that on that repair estimate is a front end collision and a broken radiator I'll ask a question like what",
    "start": "1198799",
    "end": "1206760"
  },
  {
    "text": "is the resolution and repair estimate for that same claim so the knowledge base has the",
    "start": "1206760",
    "end": "1212200"
  },
  {
    "text": "ability to leverage conversation history and the document context in our",
    "start": "1212200",
    "end": "1218240"
  },
  {
    "text": "knowledge-based data source to provide the response that the claim ID of 2 s34",
    "start": "1218240",
    "end": "1223919"
  },
  {
    "text": "wyen 8X has the resolution of replacing the front bumper hood and radiator and",
    "start": "1223919",
    "end": "1228960"
  },
  {
    "text": "the repair estimate for the claim is $539 I also see footnotes here that",
    "start": "1228960",
    "end": "1236000"
  },
  {
    "text": "allow me to further inspect the response so I see the actual Chunk from which the response was generated I see that in",
    "start": "1236000",
    "end": "1242960"
  },
  {
    "text": "both cases for the resolution as well as the total repair cost and I can see the",
    "start": "1242960",
    "end": "1248640"
  },
  {
    "text": "result details if I expand this where I see the two chunks generated from the same document that have the relevant",
    "start": "1248640",
    "end": "1255360"
  },
  {
    "text": "context within them again sourced from this PDF document",
    "start": "1255360",
    "end": "1261360"
  },
  {
    "text": "that contains the information that we just queried from the knowledge base stored in Amazon S3 a look at the",
    "start": "1261360",
    "end": "1266919"
  },
  {
    "text": "simulated repair estimate we'll show you in the notes for that estimate that the diagnosis is a fronted collision and",
    "start": "1266919",
    "end": "1272720"
  },
  {
    "text": "broken radiator along with additional notes around the Cosmetic condition the resolution and the claim",
    "start": "1272720",
    "end": "1278679"
  },
  {
    "text": "ID we will continue with our testing asking a question to the knowledge base like what should the driver do after an",
    "start": "1278679",
    "end": "1285880"
  },
  {
    "text": "accident assuming your an insurance agent and you're in the process of",
    "start": "1285880",
    "end": "1291760"
  },
  {
    "text": "responding to a client that maybe recently was in an accident and they're asking for the best practices after an",
    "start": "1291760",
    "end": "1298279"
  },
  {
    "text": "accident that data is stored in our FAQ document that stor am Ison S3 and access",
    "start": "1298279",
    "end": "1303880"
  },
  {
    "text": "through the knowledge base so we see here that the driver should first ensure everyone's safety then exchange information with the other parties",
    "start": "1303880",
    "end": "1309120"
  },
  {
    "text": "involved take photos if possible and file a police report the driver should contact their insurance company",
    "start": "1309120",
    "end": "1314360"
  },
  {
    "text": "immediately to report the incident and start the claim process when we examine the result details here",
    "start": "1314360",
    "end": "1322039"
  },
  {
    "text": "we see that this contextual information is provided through the insurance fq document the insurance FAQ document",
    "start": "1322039",
    "end": "1329320"
  },
  {
    "text": "contains a series of six questions in their corresponding answers where the question of what should I do after an",
    "start": "1329320",
    "end": "1335240"
  },
  {
    "text": "accident and the corresponding answer are provided and read back to the user through the knowledge-based query",
    "start": "1335240",
    "end": "1342200"
  },
  {
    "text": "suppose the policy holder that's calling in reporting their accident is asking for the recommended accident report and",
    "start": "1342200",
    "end": "1349679"
  },
  {
    "text": "image recommendations for their reporting purposes you could also ask the knowledge based that",
    "start": "1349679",
    "end": "1357480"
  },
  {
    "text": "question the knowledge-based query Returns the results that for the accident report it's recommended to",
    "start": "1358520",
    "end": "1363640"
  },
  {
    "text": "include the date time and location of the accident contact information of all parties involved a description of the",
    "start": "1363640",
    "end": "1368919"
  },
  {
    "text": "accident how it occurred and a police report if available alternatively both parties can fill out an agreed statement",
    "start": "1368919",
    "end": "1374840"
  },
  {
    "text": "of facts on motor vehicle accident form for accident images it is recommended to submit detailed photos of the accident",
    "start": "1374840",
    "end": "1381279"
  },
  {
    "text": "scene Vehicles involved and some additional information there and again we see the footnotes and can see the",
    "start": "1381279",
    "end": "1387600"
  },
  {
    "text": "result details where we see the data source documents from which these chunks were generated in this case a word doc",
    "start": "1387600",
    "end": "1395360"
  },
  {
    "text": "file that shows the description for the accident report and a corresponding file for accident images that would mirror",
    "start": "1395360",
    "end": "1402000"
  },
  {
    "text": "this same format suppose the policy holder then is concerned of their deductible and how",
    "start": "1402000",
    "end": "1408000"
  },
  {
    "text": "that deductible will affect their ability to have an accident paid for by",
    "start": "1408000",
    "end": "1413159"
  },
  {
    "text": "their insurer so maybe they ask a question to the insurance agent like how is what is a deductible and how does it",
    "start": "1413159",
    "end": "1419840"
  },
  {
    "text": "work the agent can query the knowledge base for those details assuming that",
    "start": "1419840",
    "end": "1424880"
  },
  {
    "text": "those details are contained within an FAQ document in the customer's Amazon S3",
    "start": "1424880",
    "end": "1430400"
  },
  {
    "text": "document repository and this case we do have that FAQ document so we see if we",
    "start": "1430400",
    "end": "1436320"
  },
  {
    "text": "look at the result details where sourcing that relevant information from the FAQ document and the knowledge based",
    "start": "1436320",
    "end": "1442760"
  },
  {
    "text": "query responds that a deductible is the amount you're responsible for paying before your insurance coverage applies",
    "start": "1442760",
    "end": "1448760"
  },
  {
    "text": "for instance if your deductible is 500 and the repair cost are $ 2,000 you pay $500 and your insurance covers the",
    "start": "1448760",
    "end": "1455600"
  },
  {
    "text": "remaining ,500 and that's it for testing our knowledge based functionality once we've",
    "start": "1455600",
    "end": "1461559"
  },
  {
    "text": "confirmed knowledge-based performance we're comfortable integrating that knowledge base with the agent and we can perform end to end agent",
    "start": "1461559",
    "end": "1469240"
  },
  {
    "start": "1469000",
    "end": "1827000"
  },
  {
    "text": "testing for endtoend agent testing we first navigate to the agents for Amazon",
    "start": "1469240",
    "end": "1474360"
  },
  {
    "text": "Bedrock console we select our insurance agent and are presented with the agent Name ID description and other metadata",
    "start": "1474360",
    "end": "1482200"
  },
  {
    "text": "scrolling down we select our working draft which allows us to iteratively develop our",
    "start": "1482200",
    "end": "1488240"
  },
  {
    "text": "agent our agent is configured with an anthropic Cloud 2.1 model and a set of instructions that Define agent",
    "start": "1488240",
    "end": "1494559"
  },
  {
    "text": "functionality and intended purpose beneath that we see our three action groups in our knowledge base the claims",
    "start": "1494559",
    "end": "1501080"
  },
  {
    "text": "knowledge base is the one we just tested every time you modify your",
    "start": "1501080",
    "end": "1507200"
  },
  {
    "text": "working draft for instance by changing the agent instructions the agent console will",
    "start": "1507200",
    "end": "1513880"
  },
  {
    "text": "alert you of the need to prepare your agent which will package all of your agents recent changes into a testable",
    "start": "1513880",
    "end": "1520000"
  },
  {
    "text": "package we prepare our agent and see the green Banner confirming our agent has",
    "start": "1520000",
    "end": "1525480"
  },
  {
    "text": "been prepared now we can begin testing in our testing window first testing the create",
    "start": "1525480",
    "end": "1532320"
  },
  {
    "text": "claim action group with the user input create a new claim the agent uses its",
    "start": "1532320",
    "end": "1537399"
  },
  {
    "text": "instructions conversation history and set of available Action Group and knowledge based tools to complete the",
    "start": "1537399",
    "end": "1543120"
  },
  {
    "text": "user request through react prompting for each Action Group the agent uses the",
    "start": "1543120",
    "end": "1548200"
  },
  {
    "text": "Action Group description and API details included in the open API schema to understand the Action Group set of apis",
    "start": "1548200",
    "end": "1554640"
  },
  {
    "text": "and intended functionality and then the agent uses the AWS lamb to Define business logic to",
    "start": "1554640",
    "end": "1560559"
  },
  {
    "text": "respond that it created a new personal automobile claim with a unique ID for this specific policy ID the status is",
    "start": "1560559",
    "end": "1568360"
  },
  {
    "text": "open and there are three pending documents driver's license registration and evidence the policy holder receives",
    "start": "1568360",
    "end": "1574799"
  },
  {
    "text": "an email sent through Amazon simple notification service or SNS with their new claim information and a link to the",
    "start": "1574799",
    "end": "1581240"
  },
  {
    "text": "claim evidence portal the human insurance agent at this point may want to send a sending",
    "start": "1581240",
    "end": "1587960"
  },
  {
    "text": "document reminder followup using the send reminder Action",
    "start": "1587960",
    "end": "1593200"
  },
  {
    "text": "Group ultimately a pending document reminder is sent to the policy holder using SNS and a unique tracking ID is",
    "start": "1603399",
    "end": "1612519"
  },
  {
    "text": "provided we will expand our testing window for further readability",
    "start": "1613760",
    "end": "1619600"
  },
  {
    "text": "we can evaluate the logical steps the agent follows by inspecting the agent's trace for each Action Group API",
    "start": "1620320",
    "end": "1626240"
  },
  {
    "text": "invocation and knowledge based query this provides a view into how the",
    "start": "1626240",
    "end": "1633559"
  },
  {
    "text": "agent modifies the base prompt to the foundation model through its react prompting sequence during pre-processing we see",
    "start": "1633559",
    "end": "1640960"
  },
  {
    "text": "the agent uses contextual conversation history to identify the relevant claim",
    "start": "1640960",
    "end": "1646399"
  },
  {
    "text": "and the need to invoke the not pending documents API there are five categories a through",
    "start": "1646399",
    "end": "1652799"
  },
  {
    "text": "e into which the agent will categorize user input for this particular case we see",
    "start": "1652799",
    "end": "1658559"
  },
  {
    "text": "the agent categorizes into category D questions that can be answered or assisted by our function calling agent",
    "start": "1658559",
    "end": "1665720"
  },
  {
    "text": "using only the functions that has been provided and arguments from within the conversation history or relevant",
    "start": "1665720",
    "end": "1670840"
  },
  {
    "text": "arguments that can gather using the ask user function so the agent can follow up with clarifying questions direct to user",
    "start": "1670840",
    "end": "1679518"
  },
  {
    "text": "during orchestration we see the step one API",
    "start": "1679760",
    "end": "1685120"
  },
  {
    "text": "invocation and step two API response payload",
    "start": "1686640",
    "end": "1692000"
  },
  {
    "text": "processing postprocessing is inactive by default so nothing is shown",
    "start": "1692000",
    "end": "1697880"
  },
  {
    "text": "there we will now test the agent knowledge based integration with a user query that will require the agent",
    "start": "1697880",
    "end": "1704559"
  },
  {
    "text": "queries the knowledge base what types of coverage do you offer the human insurance agent might",
    "start": "1704559",
    "end": "1711640"
  },
  {
    "text": "ask the agent for Amazon Bedrock this question so they can quickly provide an answer to the client during a customer",
    "start": "1711640",
    "end": "1718200"
  },
  {
    "text": "service interaction or an organization can make this data directly accessible to their customer through a self-service",
    "start": "1718200",
    "end": "1724760"
  },
  {
    "text": "on demand model powered by agents and knowledge based for Amazon",
    "start": "1724760",
    "end": "1729600"
  },
  {
    "text": "Bedrock the agent response Trace is in this case case showing that during",
    "start": "1733480",
    "end": "1739200"
  },
  {
    "text": "pre-processing the agent identifies the need to query the knowledge based",
    "start": "1739200",
    "end": "1744639"
  },
  {
    "text": "tool then during orchestration we see that the knowledgebase query occurs in",
    "start": "1745039",
    "end": "1751840"
  },
  {
    "text": "Step",
    "start": "1751840",
    "end": "1754080"
  },
  {
    "text": "One in step two we see the context and full prompt pass to the anthropic CLA 2.1 model",
    "start": "1760360",
    "end": "1769320"
  },
  {
    "text": "and then the query response in step three is",
    "start": "1779039",
    "end": "1783320"
  },
  {
    "text": "shown with postprocessing still inactive by default if we want to modify the default settings for agent",
    "start": "1785720",
    "end": "1792159"
  },
  {
    "text": "pre-processing orchestration postprocessing and knowledge based generation we can can navigate to our",
    "start": "1792159",
    "end": "1797960"
  },
  {
    "text": "working drafts Advanced prompt",
    "start": "1797960",
    "end": "1801919"
  },
  {
    "text": "settings and change any of their respective base template",
    "start": "1804159",
    "end": "1809398"
  },
  {
    "text": "formats and that's it for our endan agent functionality testing with some additional user acceptance Peak load and",
    "start": "1815559",
    "end": "1822200"
  },
  {
    "text": "other performance tests your agent is well on its path to production thanks for watching and",
    "start": "1822200",
    "end": "1829440"
  }
]