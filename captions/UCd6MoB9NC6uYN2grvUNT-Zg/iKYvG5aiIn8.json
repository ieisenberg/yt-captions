[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "Welcome to another episode of\n'This is My Architecture'.",
    "start": "7302",
    "end": "9985"
  },
  {
    "text": "Today, I'm joined by \nCarlos from TrueBlue.",
    "start": "9985",
    "end": "12214"
  },
  {
    "text": "- Hi, Carlos.\n- Hi, Adrian.",
    "start": "12215",
    "end": "13384"
  },
  {
    "text": "Thanks for joining me.",
    "start": "13384",
    "end": "14340"
  },
  {
    "text": "Happy to be here.",
    "start": "14340",
    "end": "15479"
  },
  {
    "text": "Tell me about what\nTrueBlue does.",
    "start": "15479",
    "end": "17618"
  },
  {
    "text": "TrueBlue is a staffing company that\nconnects people to blue collar jobs",
    "start": "17618",
    "end": "22043"
  },
  {
    "text": "on demand\nacross North America.",
    "start": "22043",
    "end": "24178"
  },
  {
    "text": "Right. It's a buoyant economy at the moment, \nso I bet you're busy.",
    "start": "24178",
    "end": "26731"
  },
  {
    "text": "Tell us about some of the \nchallenges that you have.",
    "start": "26732",
    "end": "29183"
  },
  {
    "text": "Some of the biggest challenges are \nmatching the right people to the right jobs",
    "start": "29183",
    "end": "33635"
  },
  {
    "start": "30000",
    "end": "100000"
  },
  {
    "text": "and for that we need our data for jobs, \njob requests, and for workers",
    "start": "33635",
    "end": "38018"
  },
  {
    "text": "to be up-to-date in the present state, \nso we can make the most accurate match,",
    "start": "38019",
    "end": "41764"
  },
  {
    "text": "and then be able to send \nthe right people those jobs.",
    "start": "41764",
    "end": "43956"
  },
  {
    "text": "Right. Accurate matches are \nreally important for your customers, I bet.",
    "start": "43956",
    "end": "46889"
  },
  {
    "text": "Let's dive in.",
    "start": "46889",
    "end": "47970"
  },
  {
    "text": "Okay. So, it all starts here \nwith SQL Server.",
    "start": "47970",
    "end": "50318"
  },
  {
    "text": "We use DMS to migrate our transactional databases \nto AWS, specifically into S3.",
    "start": "50318",
    "end": "57276"
  },
  {
    "text": "So, we have a \nlanding bucket,",
    "start": "57276",
    "end": "58578"
  },
  {
    "text": "and we have Parquet files \ninsert sub dates and deletes ",
    "start": "58578",
    "end": "61496"
  },
  {
    "text": "for our transactional tables \nbeing accumulated here in this bucket.",
    "start": "61496",
    "end": "65859"
  },
  {
    "text": "So, the data \nmigration service,",
    "start": "65859",
    "end": "67234"
  },
  {
    "text": "native integration with all that \nSQL Server farm that you have there.",
    "start": "67234",
    "end": "71293"
  },
  {
    "text": "Once the files land in S3, \nwhat happens next?",
    "start": "71293",
    "end": "74556"
  },
  {
    "text": "So, what happens next is we set up S3 \nby notifications on this bucket,",
    "start": "74556",
    "end": "78297"
  },
  {
    "text": "and now this is actually \nfeeding to SQS queues",
    "start": "78297",
    "end": "82612"
  },
  {
    "text": "that are capturing \nthose events",
    "start": "82612",
    "end": "84894"
  },
  {
    "text": "and accumulating here in these queues\nfor downstream consumption.",
    "start": "84894",
    "end": "88940"
  },
  {
    "text": "Awesome. So, event driven architecture \nall kicks off from here.",
    "start": "88941",
    "end": "92175"
  },
  {
    "text": "Let's go into \nGlue here,",
    "start": "92175",
    "end": "94411"
  },
  {
    "text": "and I see you've got \na number of services,",
    "start": "94411",
    "end": "96467"
  },
  {
    "text": "- serverless services, in fact, \n- Mhm.",
    "start": "96467",
    "end": "98211"
  },
  {
    "text": "that support it. ",
    "start": "98211",
    "end": "99211"
  },
  {
    "text": "How does it work?",
    "start": "99211",
    "end": "100281"
  },
  {
    "start": "100000",
    "end": "154000"
  },
  {
    "text": "So, we have different latency \nrequirements for different tables,",
    "start": "100281",
    "end": "103412"
  },
  {
    "text": "and not all of them \nneed to be near real-time.",
    "start": "103413",
    "end": "105185"
  },
  {
    "text": "So, what we have here \nis three SQS queues,",
    "start": "105185",
    "end": "107503"
  },
  {
    "text": "one for each category of tables \nbased on latency.",
    "start": "107503",
    "end": "111470"
  },
  {
    "text": "And then we have here three\nEventBridge rules as well.",
    "start": "111470",
    "end": "114194"
  },
  {
    "text": "We have a 10-minute rule, \na 60-minute rule, and a 3-hour rule.",
    "start": "114194",
    "end": "117628"
  },
  {
    "text": "What EventBridge \nis doing is,",
    "start": "117628",
    "end": "119151"
  },
  {
    "text": "let's look at the 10-minute one,\nfor example.",
    "start": "119151",
    "end": "121258"
  },
  {
    "text": "It gets invoked \nevery 10 minutes.",
    "start": "121258",
    "end": "123176"
  },
  {
    "text": "It invokes a \nStep Function directly.",
    "start": "123176",
    "end": "125107"
  },
  {
    "text": "Native integration EventBridge \nto Step Functions.",
    "start": "125107",
    "end": "127325"
  },
  {
    "text": "And then this Step Function is \norchestrating a workflow of Glue jobs",
    "start": "127325",
    "end": "130993"
  },
  {
    "text": "where the first Glue job, the extractor, \nis going read from this SQS queue.",
    "start": "130993",
    "end": "137241"
  },
  {
    "text": "Basically, those are S3 locations \nfor the landing buckets.",
    "start": "137242",
    "end": "140841"
  },
  {
    "text": "And then it's going to write or update tables \nfor our transactional databases.",
    "start": "140841",
    "end": "147210"
  },
  {
    "text": "So, a common pattern that we see \nfor data lakes like this is to use EMR.",
    "start": "147210",
    "end": "151512"
  },
  {
    "text": "Now, I understand you \nwere using that before, right?",
    "start": "151512",
    "end": "154127"
  },
  {
    "start": "154000",
    "end": "217000"
  },
  {
    "text": "Yes, \nEMR is great. ",
    "start": "154128",
    "end": "155575"
  },
  {
    "text": "It allowed us to achieve this outcome \nof combining inserts, updates and deletions",
    "start": "155575",
    "end": "159838"
  },
  {
    "text": "to consistent views of tables\nvery, very fast.",
    "start": "159839",
    "end": "162719"
  },
  {
    "text": "But at TrueBlue \nwe are serverless first.",
    "start": "162719",
    "end": "165273"
  },
  {
    "text": "Also, our developers and our engineers \nwere serverless developers,",
    "start": "165274",
    "end": "169518"
  },
  {
    "text": "and that's just a \npersonal preference for us.",
    "start": "169518",
    "end": "172113"
  },
  {
    "text": "We were having some challenges \nbased on skill set and complexity",
    "start": "172113",
    "end": "176407"
  },
  {
    "text": "to manage the EMR clusters \nand the autoscaling,",
    "start": "176407",
    "end": "179727"
  },
  {
    "text": "and then debugging \nwhen something went wrong",
    "start": "179727",
    "end": "181644"
  },
  {
    "text": "because we have \nlong-running clusters.",
    "start": "181644",
    "end": "183736"
  },
  {
    "text": "It was just \nchallenging for us",
    "start": "183736",
    "end": "186036"
  },
  {
    "text": "and we wondered is there a \nserverless option that we could use.",
    "start": "186036",
    "end": "189237"
  },
  {
    "text": "Immediately, one of our engineers said, \n\"Can we do this with Glue?\"",
    "start": "189238",
    "end": "193104"
  },
  {
    "text": "Like, \"I don't know\".",
    "start": "193104",
    "end": "194117"
  },
  {
    "text": "So, we actually \ndecided to use Glue",
    "start": "194117",
    "end": "196944"
  },
  {
    "text": "and it actually worked \nperfectly fine for us.",
    "start": "196944",
    "end": "199487"
  },
  {
    "text": "It accomplishes the \nsame outcome as EMR for us,",
    "start": "199487",
    "end": "201843"
  },
  {
    "text": "but in a serverless fashion \nwhere we read the events from SQS",
    "start": "201843",
    "end": "207051"
  },
  {
    "text": "and then we write those \nto our Delta Lake in S3.",
    "start": "207051",
    "end": "210868"
  },
  {
    "text": "Right. So, it's also a familiar \nenvironment for your developers",
    "start": "210868",
    "end": "213786"
  },
  {
    "text": "to be able to write jobs\ndirectly into Glue, right?",
    "start": "213786",
    "end": "216789"
  },
  {
    "text": "Yes, both the engineers\nand data scientists.",
    "start": "216789",
    "end": "218928"
  },
  {
    "text": "Everyone is using \nGlue all the time.",
    "start": "218928",
    "end": "220224"
  },
  {
    "text": "Well, that's where \nI wanted to go to next.",
    "start": "220224",
    "end": "221339"
  },
  {
    "text": "How do your data scientists \nnow start querying it?",
    "start": "221339",
    "end": "224445"
  },
  {
    "text": "Yes. So, the data scientists \nactually are over here,",
    "start": "224445",
    "end": "226698"
  },
  {
    "text": "and they use \nSpark SQL, typically,",
    "start": "226698",
    "end": "229076"
  },
  {
    "text": "to read the tables \nfrom this Delta Lake.",
    "start": "229076",
    "end": "232427"
  },
  {
    "text": "We have three tiers in our Delta Lake:\nbronze, silver and gold.",
    "start": "232427",
    "end": "235712"
  },
  {
    "text": "So, we have raw \nand then we have views",
    "start": "235712",
    "end": "237805"
  },
  {
    "text": "that we create by \njoining those raw tables,",
    "start": "237805",
    "end": "240021"
  },
  {
    "text": "and that are \nfeature store for ML.",
    "start": "240022",
    "end": "241679"
  },
  {
    "text": "Now, they query from \nany one of those three stages.",
    "start": "241679",
    "end": "243969"
  },
  {
    "text": "It's very nice for them because \nit's very reliable how Glue ",
    "start": "243969",
    "end": "248760"
  },
  {
    "text": "is basically performing those upserts \nand keeping those tables up to date.",
    "start": "248761",
    "end": "251877"
  },
  {
    "text": "They're able to perform \naccurate matches as well",
    "start": "251877",
    "end": "254623"
  },
  {
    "text": "because they're able to extract their datasets\nby querying the Delta Lake.",
    "start": "254623",
    "end": "259032"
  },
  {
    "text": "I love the fact that you're using \nevent driven architecture",
    "start": "259032",
    "end": "261751"
  },
  {
    "text": "to keep up with the volume of changes \nthat are going on in this.",
    "start": "261751",
    "end": "264612"
  },
  {
    "text": "This is fantastic.",
    "start": "264612",
    "end": "265723"
  },
  {
    "text": "Thanks for sharing your \narchitecture with me, Carlos.",
    "start": "265723",
    "end": "267751"
  },
  {
    "text": "Thank you, Adrian.",
    "start": "267751",
    "end": "268751"
  },
  {
    "text": "And thank you for joining us on\n'This is My Architecture'.",
    "start": "268751",
    "end": "271747"
  }
]