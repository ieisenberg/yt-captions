[
  {
    "start": "0",
    "end": "66000"
  },
  {
    "text": "hello",
    "start": "4920",
    "end": "7560"
  },
  {
    "text": "my name is Estevan Serna I am a senior",
    "start": "7560",
    "end": "10440"
  },
  {
    "text": "Dynamo DVA especially solution architect",
    "start": "10440",
    "end": "13980"
  },
  {
    "text": "and I help customers optimize their data",
    "start": "13980",
    "end": "16859"
  },
  {
    "text": "models while working with Amazon",
    "start": "16859",
    "end": "18779"
  },
  {
    "text": "dynamodv but also to choose the right",
    "start": "18779",
    "end": "21240"
  },
  {
    "text": "features that they will that will fit",
    "start": "21240",
    "end": "23400"
  },
  {
    "text": "their specific use case",
    "start": "23400",
    "end": "25859"
  },
  {
    "text": "in this short video we're going to",
    "start": "25859",
    "end": "28740"
  },
  {
    "text": "discuss about a topic that is very",
    "start": "28740",
    "end": "30480"
  },
  {
    "text": "interesting and it's changed at the",
    "start": "30480",
    "end": "32279"
  },
  {
    "text": "capture with Amazon dynamodb",
    "start": "32279",
    "end": "35000"
  },
  {
    "text": "dynamodv supports item label change that",
    "start": "35000",
    "end": "38700"
  },
  {
    "text": "capture records that can be streamed in",
    "start": "38700",
    "end": "41280"
  },
  {
    "text": "near real time",
    "start": "41280",
    "end": "42960"
  },
  {
    "text": "to applications and Main decisions based",
    "start": "42960",
    "end": "46260"
  },
  {
    "text": "on the content of those records",
    "start": "46260",
    "end": "49559"
  },
  {
    "text": "for example you could create a change",
    "start": "49559",
    "end": "51600"
  },
  {
    "text": "that and by enabling dynamodb streams",
    "start": "51600",
    "end": "54420"
  },
  {
    "text": "you could create an application that",
    "start": "54420",
    "end": "56460"
  },
  {
    "text": "every time that you insert a record to",
    "start": "56460",
    "end": "59219"
  },
  {
    "text": "the users tables for example",
    "start": "59219",
    "end": "61500"
  },
  {
    "text": "you will send an email to the person",
    "start": "61500",
    "end": "63920"
  },
  {
    "text": "saying hi or greeting them to First",
    "start": "63920",
    "end": "67020"
  },
  {
    "text": "understand what we need why we need to",
    "start": "67020",
    "end": "70260"
  },
  {
    "text": "choose between the options that we have",
    "start": "70260",
    "end": "71880"
  },
  {
    "text": "with dynamodv",
    "start": "71880",
    "end": "73680"
  },
  {
    "text": "uh let's revisit what is inside a Dynamo",
    "start": "73680",
    "end": "78180"
  },
  {
    "text": "division what information is present",
    "start": "78180",
    "end": "80460"
  },
  {
    "text": "inside an stream it is basically a Json",
    "start": "80460",
    "end": "83340"
  },
  {
    "text": "object that has different attributes",
    "start": "83340",
    "end": "86220"
  },
  {
    "text": "those attributes will allow you to see",
    "start": "86220",
    "end": "88380"
  },
  {
    "text": "different portions of the data that has",
    "start": "88380",
    "end": "90840"
  },
  {
    "text": "been modified and some of them are the",
    "start": "90840",
    "end": "94080"
  },
  {
    "text": "even Source the region the even Source",
    "start": "94080",
    "end": "96900"
  },
  {
    "text": "area I mean",
    "start": "96900",
    "end": "98640"
  },
  {
    "text": "um that matches your string Arn the type",
    "start": "98640",
    "end": "101759"
  },
  {
    "text": "of event that had happened and inside",
    "start": "101759",
    "end": "103400"
  },
  {
    "text": "dynamodv which is the most important",
    "start": "103400",
    "end": "107060"
  },
  {
    "text": "record you have the change that was",
    "start": "107060",
    "end": "110640"
  },
  {
    "text": "recorded in your item level table",
    "start": "110640",
    "end": "115740"
  },
  {
    "text": "in your item level sorry",
    "start": "115740",
    "end": "118079"
  },
  {
    "text": "we have the approximate creation daytime",
    "start": "118079",
    "end": "120540"
  },
  {
    "text": "which is valid up to the millisecond",
    "start": "120540",
    "end": "122579"
  },
  {
    "text": "when that record or the modification",
    "start": "122579",
    "end": "124740"
  },
  {
    "text": "happened we all we could have also New",
    "start": "124740",
    "end": "127619"
  },
  {
    "text": "Image we have the sequence number and we",
    "start": "127619",
    "end": "131039"
  },
  {
    "text": "have what is the uh the the stream view",
    "start": "131039",
    "end": "134040"
  },
  {
    "text": "type there are four different options",
    "start": "134040",
    "end": "136260"
  },
  {
    "text": "you can have the new events the old",
    "start": "136260",
    "end": "138660"
  },
  {
    "text": "events the new and the old events or",
    "start": "138660",
    "end": "141540"
  },
  {
    "text": "only the keys that have been modified",
    "start": "141540",
    "end": "145280"
  },
  {
    "start": "144000",
    "end": "192000"
  },
  {
    "text": "there are two options to work with",
    "start": "145280",
    "end": "148440"
  },
  {
    "text": "dynamodb streams the first one is the",
    "start": "148440",
    "end": "151260"
  },
  {
    "text": "dynamodivistream solution",
    "start": "151260",
    "end": "153080"
  },
  {
    "text": "where you basically record the changes",
    "start": "153080",
    "end": "156120"
  },
  {
    "text": "on your application",
    "start": "156120",
    "end": "158340"
  },
  {
    "text": "all that information is sent or",
    "start": "158340",
    "end": "160260"
  },
  {
    "text": "limitations are sent dynamodb streams",
    "start": "160260",
    "end": "163620"
  },
  {
    "text": "um",
    "start": "163620",
    "end": "164879"
  },
  {
    "text": "and then assuming that you consume all",
    "start": "164879",
    "end": "167700"
  },
  {
    "text": "of these streams with AWS Lambda Lambda",
    "start": "167700",
    "end": "171300"
  },
  {
    "text": "will pull those records four times per",
    "start": "171300",
    "end": "174180"
  },
  {
    "text": "second",
    "start": "174180",
    "end": "175739"
  },
  {
    "text": "if the record matches the event",
    "start": "175739",
    "end": "178200"
  },
  {
    "text": "filtering condition that you should have",
    "start": "178200",
    "end": "180180"
  },
  {
    "text": "configured in Lambda then the Lambda",
    "start": "180180",
    "end": "183120"
  },
  {
    "text": "function will be executed it could have",
    "start": "183120",
    "end": "185220"
  },
  {
    "text": "up to two Lambda functions or two",
    "start": "185220",
    "end": "187379"
  },
  {
    "text": "subscribers subscribe to the same chart",
    "start": "187379",
    "end": "192140"
  },
  {
    "start": "192000",
    "end": "524000"
  },
  {
    "text": "we have another option that is called",
    "start": "192540",
    "end": "194280"
  },
  {
    "text": "kinesi data streams Kinesis data streams",
    "start": "194280",
    "end": "197159"
  },
  {
    "text": "will behave very similar you will get",
    "start": "197159",
    "end": "198900"
  },
  {
    "text": "all your information data from your",
    "start": "198900",
    "end": "201540"
  },
  {
    "text": "table",
    "start": "201540",
    "end": "203220"
  },
  {
    "text": "there is an internal service that is",
    "start": "203220",
    "end": "205620"
  },
  {
    "text": "called the data replicator service that",
    "start": "205620",
    "end": "207720"
  },
  {
    "text": "will continually add new records to the",
    "start": "207720",
    "end": "210659"
  },
  {
    "text": "Stream",
    "start": "210659",
    "end": "211379"
  },
  {
    "text": "and then if you are to the kinesi data",
    "start": "211379",
    "end": "214739"
  },
  {
    "text": "stream if if you're choosing lambdas",
    "start": "214739",
    "end": "217319"
  },
  {
    "text": "well Lambda will fall once per second to",
    "start": "217319",
    "end": "220739"
  },
  {
    "text": "get record from the Kinesis data stream",
    "start": "220739",
    "end": "222780"
  },
  {
    "text": "and if the event filter matches the",
    "start": "222780",
    "end": "225780"
  },
  {
    "text": "conditions that you have configured then",
    "start": "225780",
    "end": "228720"
  },
  {
    "text": "a Lambda function will be executed",
    "start": "228720",
    "end": "231840"
  },
  {
    "text": "you can subscribe up to five different",
    "start": "231840",
    "end": "234420"
  },
  {
    "text": "Lambda functions to a specific chart",
    "start": "234420",
    "end": "238140"
  },
  {
    "text": "there is a little star at the end of",
    "start": "238140",
    "end": "240480"
  },
  {
    "text": "that sentence because if you configure",
    "start": "240480",
    "end": "243120"
  },
  {
    "text": "Lambda function but you also configure",
    "start": "243120",
    "end": "246540"
  },
  {
    "text": "uh kinesi data analytics or Kinesis",
    "start": "246540",
    "end": "249959"
  },
  {
    "text": "Firehouse as part of those subscribers",
    "start": "249959",
    "end": "252140"
  },
  {
    "text": "those count as as a Lambda function so",
    "start": "252140",
    "end": "256320"
  },
  {
    "text": "in total you might need you you can only",
    "start": "256320",
    "end": "258120"
  },
  {
    "text": "have five subscribers to the same chart",
    "start": "258120",
    "end": "260160"
  },
  {
    "text": "in dynamodb you can have two in Dynamo",
    "start": "260160",
    "end": "263040"
  },
  {
    "text": "DV stream sorry you can have two in",
    "start": "263040",
    "end": "264479"
  },
  {
    "text": "kinesi data streams you can have five",
    "start": "264479",
    "end": "266840"
  },
  {
    "text": "the difference with kinesi data streams",
    "start": "266840",
    "end": "269699"
  },
  {
    "text": "is that you get the records that you put",
    "start": "269699",
    "end": "272940"
  },
  {
    "text": "in the Stream",
    "start": "272940",
    "end": "274440"
  },
  {
    "text": "they might be out of order",
    "start": "274440",
    "end": "278479"
  },
  {
    "text": "that means",
    "start": "279360",
    "end": "281160"
  },
  {
    "text": "that your application will have to",
    "start": "281160",
    "end": "283440"
  },
  {
    "text": "update the order of the records and you",
    "start": "283440",
    "end": "286020"
  },
  {
    "text": "can do that by using the attribute",
    "start": "286020",
    "end": "288060"
  },
  {
    "text": "approximates creation date time",
    "start": "288060",
    "end": "291660"
  },
  {
    "text": "another difference between kinesi data",
    "start": "291660",
    "end": "294600"
  },
  {
    "text": "streams and dynamodb streams is that",
    "start": "294600",
    "end": "296460"
  },
  {
    "text": "Kinesis data streams",
    "start": "296460",
    "end": "298979"
  },
  {
    "text": "with kinesi data streams you might have",
    "start": "298979",
    "end": "301139"
  },
  {
    "text": "duplicate of records and your",
    "start": "301139",
    "end": "303360"
  },
  {
    "text": "application should account for those",
    "start": "303360",
    "end": "305880"
  },
  {
    "text": "duplicates",
    "start": "305880",
    "end": "307620"
  },
  {
    "text": "with Kinesis with um",
    "start": "307620",
    "end": "311720"
  },
  {
    "text": "with with Dynamo DV streams you don't",
    "start": "311940",
    "end": "314699"
  },
  {
    "text": "have that problem you get the records in",
    "start": "314699",
    "end": "317820"
  },
  {
    "text": "a strict order as you can see on the",
    "start": "317820",
    "end": "319979"
  },
  {
    "text": "left side of the screen when we have an",
    "start": "319979",
    "end": "322740"
  },
  {
    "text": "order one with the status new with a",
    "start": "322740",
    "end": "324960"
  },
  {
    "text": "Time Zero and then order one will start",
    "start": "324960",
    "end": "327240"
  },
  {
    "text": "to speaking in time one we keep that",
    "start": "327240",
    "end": "329880"
  },
  {
    "text": "order in in Amazon",
    "start": "329880",
    "end": "332600"
  },
  {
    "text": "if you will do that in kinesi data",
    "start": "332600",
    "end": "335520"
  },
  {
    "text": "stream you might face the situation",
    "start": "335520",
    "end": "337620"
  },
  {
    "text": "where the picking status will be first",
    "start": "337620",
    "end": "339660"
  },
  {
    "text": "at the the newest status",
    "start": "339660",
    "end": "341880"
  },
  {
    "text": "remember your application is responsible",
    "start": "341880",
    "end": "344639"
  },
  {
    "text": "to reconfigure that order if you",
    "start": "344639",
    "end": "347759"
  },
  {
    "text": "are using kinesi data stream",
    "start": "347759",
    "end": "351060"
  },
  {
    "text": "the best way to decide which option is",
    "start": "351060",
    "end": "354120"
  },
  {
    "text": "best for you is to compare them side to",
    "start": "354120",
    "end": "356160"
  },
  {
    "text": "side so",
    "start": "356160",
    "end": "357840"
  },
  {
    "text": "there are many variables that you should",
    "start": "357840",
    "end": "359699"
  },
  {
    "text": "consider if you're thinking if your",
    "start": "359699",
    "end": "361560"
  },
  {
    "text": "application if the ordering of the",
    "start": "361560",
    "end": "363960"
  },
  {
    "text": "records are very important for you",
    "start": "363960",
    "end": "366240"
  },
  {
    "text": "it might be better to go with Dynamo DB",
    "start": "366240",
    "end": "368940"
  },
  {
    "text": "streams",
    "start": "368940",
    "end": "369960"
  },
  {
    "text": "but if you require for example a data",
    "start": "369960",
    "end": "372419"
  },
  {
    "text": "retention period that is very very high",
    "start": "372419",
    "end": "375539"
  },
  {
    "text": "in the edit of months it might be better",
    "start": "375539",
    "end": "377820"
  },
  {
    "text": "to use kinesi data streams because",
    "start": "377820",
    "end": "379860"
  },
  {
    "text": "kinesi data streams retain data up to",
    "start": "379860",
    "end": "383039"
  },
  {
    "text": "one year dynamodb streams can only",
    "start": "383039",
    "end": "385620"
  },
  {
    "text": "retain data for 24 hours",
    "start": "385620",
    "end": "388380"
  },
  {
    "text": "if for some reason you forgot to worry",
    "start": "388380",
    "end": "390660"
  },
  {
    "text": "that the stream in the next 24 hours",
    "start": "390660",
    "end": "393660"
  },
  {
    "text": "that those changes happen you will lose",
    "start": "393660",
    "end": "395940"
  },
  {
    "text": "that information",
    "start": "395940",
    "end": "397860"
  },
  {
    "text": "with the number of consumers will really",
    "start": "397860",
    "end": "399660"
  },
  {
    "text": "mention that",
    "start": "399660",
    "end": "400979"
  },
  {
    "text": "with kinesi data streams you can have",
    "start": "400979",
    "end": "402900"
  },
  {
    "text": "five consumers with Dynamo division",
    "start": "402900",
    "end": "404639"
  },
  {
    "text": "stream you can have two consumers to the",
    "start": "404639",
    "end": "407039"
  },
  {
    "text": "same chart in both cases but with",
    "start": "407039",
    "end": "409740"
  },
  {
    "text": "kinesic data streams if you are using",
    "start": "409740",
    "end": "411900"
  },
  {
    "text": "the Kinesis client Library version 2",
    "start": "411900",
    "end": "413819"
  },
  {
    "text": "with the enhanced find out functionality",
    "start": "413819",
    "end": "416039"
  },
  {
    "text": "you could subscribe up to 20 subscribers",
    "start": "416039",
    "end": "419220"
  },
  {
    "text": "to that specific chart",
    "start": "419220",
    "end": "422660"
  },
  {
    "text": "data stream there are virtually",
    "start": "423560",
    "end": "425460"
  },
  {
    "text": "unlimited with dynamodb streams we we do",
    "start": "425460",
    "end": "429600"
  },
  {
    "text": "have some service quotas in place by",
    "start": "429600",
    "end": "431880"
  },
  {
    "text": "default and which are there you can have",
    "start": "431880",
    "end": "434759"
  },
  {
    "text": "a table with 40 000 written right",
    "start": "434759",
    "end": "436500"
  },
  {
    "text": "capacity units uh with Dynamo DV streams",
    "start": "436500",
    "end": "439740"
  },
  {
    "text": "enabled if you need to increase that you",
    "start": "439740",
    "end": "442919"
  },
  {
    "text": "can contact contact AWS support",
    "start": "442919",
    "end": "446220"
  },
  {
    "text": "I'm not saying that it's not possible to",
    "start": "446220",
    "end": "447720"
  },
  {
    "text": "have it you just need to remember that",
    "start": "447720",
    "end": "449940"
  },
  {
    "text": "there are some quotas and you need to",
    "start": "449940",
    "end": "451919"
  },
  {
    "text": "update those quotas",
    "start": "451919",
    "end": "453960"
  },
  {
    "text": "on the durability level we have multiple",
    "start": "453960",
    "end": "456479"
  },
  {
    "text": "availability zones that I can handle any",
    "start": "456479",
    "end": "459060"
  },
  {
    "text": "kind of failure and ensure that the",
    "start": "459060",
    "end": "461940"
  },
  {
    "text": "services",
    "start": "461940",
    "end": "462960"
  },
  {
    "text": "it keeps working without interruption",
    "start": "462960",
    "end": "466020"
  },
  {
    "text": "we have the the delivery model is with",
    "start": "466020",
    "end": "469259"
  },
  {
    "text": "in both cases is with pool model over",
    "start": "469259",
    "end": "472680"
  },
  {
    "text": "within kinesi data streams over HTTP for",
    "start": "472680",
    "end": "475500"
  },
  {
    "text": "version one and HTTP 2 version 2.",
    "start": "475500",
    "end": "479280"
  },
  {
    "text": "uh with with enhanced find out",
    "start": "479280",
    "end": "481440"
  },
  {
    "text": "functionality sorry with the version two",
    "start": "481440",
    "end": "483360"
  },
  {
    "text": "you will use subscribe to Shard API uh",
    "start": "483360",
    "end": "487380"
  },
  {
    "text": "with version one and Dynamo DB streams",
    "start": "487380",
    "end": "489479"
  },
  {
    "text": "you will use the get record API",
    "start": "489479",
    "end": "492599"
  },
  {
    "text": "now another important difference between",
    "start": "492599",
    "end": "495060"
  },
  {
    "text": "both of those Kinesis data streams",
    "start": "495060",
    "end": "497400"
  },
  {
    "text": "support Kinesis client Library version",
    "start": "497400",
    "end": "499199"
  },
  {
    "text": "one and two the animated streams only",
    "start": "499199",
    "end": "502080"
  },
  {
    "text": "supports Kinesis Line library version 1.",
    "start": "502080",
    "end": "505139"
  },
  {
    "text": "you might have duplicate records in",
    "start": "505139",
    "end": "507120"
  },
  {
    "text": "kinesi data streams but Dynamo divisions",
    "start": "507120",
    "end": "510180"
  },
  {
    "text": "will guarantee that you don't have",
    "start": "510180",
    "end": "511919"
  },
  {
    "text": "duplications and the records are",
    "start": "511919",
    "end": "514320"
  },
  {
    "text": "presented in a strict order",
    "start": "514320",
    "end": "516240"
  },
  {
    "text": "kinesi data streams you have to reorder",
    "start": "516240",
    "end": "518700"
  },
  {
    "text": "them and you do have different options",
    "start": "518700",
    "end": "522060"
  },
  {
    "text": "streaming options with both Solutions",
    "start": "522060",
    "end": "524219"
  },
  {
    "start": "524000",
    "end": "691000"
  },
  {
    "text": "now you might be thinking what can I",
    "start": "524219",
    "end": "527100"
  },
  {
    "text": "actually do with change data capture",
    "start": "527100",
    "end": "529860"
  },
  {
    "text": "um and that's where event driven",
    "start": "529860",
    "end": "531120"
  },
  {
    "text": "architectures come into place",
    "start": "531120",
    "end": "532860"
  },
  {
    "text": "one of the best features no the best",
    "start": "532860",
    "end": "534839"
  },
  {
    "text": "functionality that you might have in",
    "start": "534839",
    "end": "536160"
  },
  {
    "text": "dynamodv is time to leave time to leave",
    "start": "536160",
    "end": "538680"
  },
  {
    "text": "will delete the data that you specify",
    "start": "538680",
    "end": "542940"
  },
  {
    "text": "for free you you specify a number a",
    "start": "542940",
    "end": "547080"
  },
  {
    "text": "column you define that column as a",
    "start": "547080",
    "end": "549480"
  },
  {
    "text": "number",
    "start": "549480",
    "end": "550560"
  },
  {
    "text": "and you put in in Epoch timestamp format",
    "start": "550560",
    "end": "553620"
  },
  {
    "text": "when that record wants to be deleted",
    "start": "553620",
    "end": "556500"
  },
  {
    "text": "then dynamodv will do it in base effort",
    "start": "556500",
    "end": "559980"
  },
  {
    "text": "is candidate all the tables and Define",
    "start": "559980",
    "end": "563339"
  },
  {
    "text": "if those records need to be expired if",
    "start": "563339",
    "end": "566160"
  },
  {
    "text": "that is true that data will be deleted",
    "start": "566160",
    "end": "568440"
  },
  {
    "text": "for free",
    "start": "568440",
    "end": "569420"
  },
  {
    "text": "and uh if it's not true that data will",
    "start": "569420",
    "end": "572580"
  },
  {
    "text": "be kept in your table but remember since",
    "start": "572580",
    "end": "574680"
  },
  {
    "text": "there are in best effort there is no",
    "start": "574680",
    "end": "576660"
  },
  {
    "text": "really an SLA to delete those items it's",
    "start": "576660",
    "end": "578820"
  },
  {
    "text": "usually in the next 20 48 hours that",
    "start": "578820",
    "end": "581880"
  },
  {
    "text": "those items are deleted the important",
    "start": "581880",
    "end": "584040"
  },
  {
    "text": "element here is that when that deletion",
    "start": "584040",
    "end": "586980"
  },
  {
    "text": "happens that generates if you have",
    "start": "586980",
    "end": "588899"
  },
  {
    "text": "enabled Dynamo TV streams an event that",
    "start": "588899",
    "end": "591779"
  },
  {
    "text": "event can be captured and then is stored",
    "start": "591779",
    "end": "594360"
  },
  {
    "text": "into S3 for example for long-term",
    "start": "594360",
    "end": "596880"
  },
  {
    "text": "archival",
    "start": "596880",
    "end": "599240"
  },
  {
    "text": "but at the same time you also have good",
    "start": "599279",
    "end": "601140"
  },
  {
    "text": "event architectures every time that",
    "start": "601140",
    "end": "603060"
  },
  {
    "text": "there is a change in your data with",
    "start": "603060",
    "end": "604740"
  },
  {
    "text": "Dynamo divisions or kinesi data streams",
    "start": "604740",
    "end": "606720"
  },
  {
    "text": "you can trigger a Lambda function that",
    "start": "606720",
    "end": "608820"
  },
  {
    "text": "Lambda function could generate real-time",
    "start": "608820",
    "end": "611040"
  },
  {
    "text": "aggregations and we're talking here",
    "start": "611040",
    "end": "613080"
  },
  {
    "text": "about simple aggregations",
    "start": "613080",
    "end": "616019"
  },
  {
    "text": "you can send those records to",
    "start": "616019",
    "end": "617640"
  },
  {
    "text": "elasticsearch those records in the",
    "start": "617640",
    "end": "619860"
  },
  {
    "text": "elasticsearch can use full text search",
    "start": "619860",
    "end": "621540"
  },
  {
    "text": "capabilities or you could send those",
    "start": "621540",
    "end": "624300"
  },
  {
    "text": "records to Kinesis fire hose that will",
    "start": "624300",
    "end": "626279"
  },
  {
    "text": "be stored that information into S3 and",
    "start": "626279",
    "end": "628560"
  },
  {
    "text": "eventually it will use Athena queries to",
    "start": "628560",
    "end": "630720"
  },
  {
    "text": "execute more add hot queries and more",
    "start": "630720",
    "end": "634680"
  },
  {
    "text": "aggregation and type of queries on your",
    "start": "634680",
    "end": "637620"
  },
  {
    "text": "data set so you keep all your",
    "start": "637620",
    "end": "639420"
  },
  {
    "text": "transactional information and queries in",
    "start": "639420",
    "end": "641459"
  },
  {
    "text": "dynamodv and all the other data access",
    "start": "641459",
    "end": "644459"
  },
  {
    "text": "like open or full text search and and",
    "start": "644459",
    "end": "647160"
  },
  {
    "text": "olap",
    "start": "647160",
    "end": "648600"
  },
  {
    "text": "could be done with elasticsearch and",
    "start": "648600",
    "end": "650399"
  },
  {
    "text": "Athena respectively",
    "start": "650399",
    "end": "652940"
  },
  {
    "text": "I eventually if you if your Downstream",
    "start": "652940",
    "end": "656640"
  },
  {
    "text": "applications need to notify the change",
    "start": "656640",
    "end": "658440"
  },
  {
    "text": "you can also just notify the change to",
    "start": "658440",
    "end": "659940"
  },
  {
    "text": "the other applications",
    "start": "659940",
    "end": "661800"
  },
  {
    "text": "I hope that this video has been useful",
    "start": "661800",
    "end": "663839"
  },
  {
    "text": "for you where we defined the difference",
    "start": "663839",
    "end": "666000"
  },
  {
    "text": "between Kinesis data streams and Amazon",
    "start": "666000",
    "end": "668040"
  },
  {
    "text": "Dynamo DV streams when we want to see",
    "start": "668040",
    "end": "670920"
  },
  {
    "text": "the change of the capture information",
    "start": "670920",
    "end": "673640"
  },
  {
    "text": "use the comparison to choose the base",
    "start": "673640",
    "end": "676440"
  },
  {
    "text": "that fits your requirements thank you",
    "start": "676440",
    "end": "679019"
  },
  {
    "text": "very much and my name is esteman Cerna I",
    "start": "679019",
    "end": "681720"
  },
  {
    "text": "am a senior dynamodv solution architect",
    "start": "681720",
    "end": "683760"
  },
  {
    "text": "thank you for listening goodbye",
    "start": "683760",
    "end": "687800"
  }
]