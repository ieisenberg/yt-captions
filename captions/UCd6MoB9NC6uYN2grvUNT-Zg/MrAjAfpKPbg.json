[
  {
    "start": "0",
    "end": "14000"
  },
  {
    "text": "[Music]",
    "start": "2100",
    "end": "7440"
  },
  {
    "text": "welcome to aws what's new",
    "start": "7440",
    "end": "9360"
  },
  {
    "text": "i'm jeff barr i've got three awesome",
    "start": "9360",
    "end": "11519"
  },
  {
    "text": "launches to share with you today",
    "start": "11519",
    "end": "13759"
  },
  {
    "text": "first up we launched a preview of lambda",
    "start": "13759",
    "end": "15839"
  },
  {
    "start": "14000",
    "end": "92000"
  },
  {
    "text": "extensions this one's really cool",
    "start": "15839",
    "end": "18640"
  },
  {
    "text": "the extension model makes it easy for",
    "start": "18640",
    "end": "20480"
  },
  {
    "text": "monitoring observability",
    "start": "20480",
    "end": "22080"
  },
  {
    "text": "and governance tools to work within the",
    "start": "22080",
    "end": "23680"
  },
  {
    "text": "lambda execution environment",
    "start": "23680",
    "end": "26080"
  },
  {
    "text": "these extensions use the new extensions",
    "start": "26080",
    "end": "27920"
  },
  {
    "text": "api to register",
    "start": "27920",
    "end": "29439"
  },
  {
    "text": "the extensions then get access to",
    "start": "29439",
    "end": "31199"
  },
  {
    "text": "lifecycle events along with greater",
    "start": "31199",
    "end": "32960"
  },
  {
    "text": "control of what happens during the",
    "start": "32960",
    "end": "34399"
  },
  {
    "text": "initialization",
    "start": "34399",
    "end": "35520"
  },
  {
    "text": "invocation and shutdown of the lambda",
    "start": "35520",
    "end": "37520"
  },
  {
    "text": "functions",
    "start": "37520",
    "end": "38879"
  },
  {
    "text": "so you can use prebuilt extensions from",
    "start": "38879",
    "end": "40559"
  },
  {
    "text": "the lambda ready partners",
    "start": "40559",
    "end": "42000"
  },
  {
    "text": "these are app dynamics checkpoint",
    "start": "42000",
    "end": "44640"
  },
  {
    "text": "datadog",
    "start": "44640",
    "end": "45600"
  },
  {
    "text": "dynatrace epsigon hashicorp lumigo",
    "start": "45600",
    "end": "49280"
  },
  {
    "text": "new relic thundra and splunk",
    "start": "49280",
    "end": "52640"
  },
  {
    "text": "you could also build your own extensions",
    "start": "52640",
    "end": "54559"
  },
  {
    "text": "these are also lambda functions",
    "start": "54559",
    "end": "56160"
  },
  {
    "text": "and i really look forward to seeing what",
    "start": "56160",
    "end": "57520"
  },
  {
    "text": "you come up with the extensions can run",
    "start": "57520",
    "end": "59920"
  },
  {
    "text": "either as part of the same process",
    "start": "59920",
    "end": "61520"
  },
  {
    "text": "that's executing the lambda function",
    "start": "61520",
    "end": "63280"
  },
  {
    "text": "or they can run in a separate process",
    "start": "63280",
    "end": "65360"
  },
  {
    "text": "within the same execution environment",
    "start": "65360",
    "end": "68159"
  },
  {
    "text": "my colleague julian woods wrote a pair",
    "start": "68159",
    "end": "69680"
  },
  {
    "text": "of great blog posts to show you how to",
    "start": "69680",
    "end": "71200"
  },
  {
    "text": "use and build these extensions",
    "start": "71200",
    "end": "73280"
  },
  {
    "text": "julian also linked to a rather cool one",
    "start": "73280",
    "end": "75280"
  },
  {
    "text": "built by the clever devs at square",
    "start": "75280",
    "end": "77840"
  },
  {
    "text": "the lambda secrets prefetch extension",
    "start": "77840",
    "end": "80000"
  },
  {
    "text": "does exactly that",
    "start": "80000",
    "end": "81520"
  },
  {
    "text": "it pulls a configurable set of secrets",
    "start": "81520",
    "end": "83439"
  },
  {
    "text": "from aw sequence manager",
    "start": "83439",
    "end": "84960"
  },
  {
    "text": "stores them in slash temp again i think",
    "start": "84960",
    "end": "87439"
  },
  {
    "text": "this is really cool",
    "start": "87439",
    "end": "88479"
  },
  {
    "text": "super powerful check it out let me know",
    "start": "88479",
    "end": "90479"
  },
  {
    "text": "what you think okay so next up",
    "start": "90479",
    "end": "92880"
  },
  {
    "start": "92000",
    "end": "134000"
  },
  {
    "text": "amazon elastic cash for redis now",
    "start": "92880",
    "end": "94640"
  },
  {
    "text": "supports version 6 of redis",
    "start": "94640",
    "end": "97119"
  },
  {
    "text": "with redis 6 you get better performance",
    "start": "97119",
    "end": "99680"
  },
  {
    "text": "there's a new protocol",
    "start": "99680",
    "end": "100880"
  },
  {
    "text": "that meshes more easily with client",
    "start": "100880",
    "end": "102240"
  },
  {
    "text": "libraries and there's also access",
    "start": "102240",
    "end": "103920"
  },
  {
    "text": "control lists or acls",
    "start": "103920",
    "end": "105840"
  },
  {
    "text": "the acls control the commands and the",
    "start": "105840",
    "end": "107920"
  },
  {
    "text": "keys that each user can access",
    "start": "107920",
    "end": "110320"
  },
  {
    "text": "amazon elastic redis builds on these",
    "start": "110320",
    "end": "112560"
  },
  {
    "text": "acls and you get managed role-based",
    "start": "112560",
    "end": "114960"
  },
  {
    "text": "access control",
    "start": "114960",
    "end": "116399"
  },
  {
    "text": "there's also efficient client-side",
    "start": "116399",
    "end": "118000"
  },
  {
    "text": "caching and some other improvements that",
    "start": "118000",
    "end": "119680"
  },
  {
    "text": "are going to make your applications both",
    "start": "119680",
    "end": "120880"
  },
  {
    "text": "more reliable and more available",
    "start": "120880",
    "end": "122880"
  },
  {
    "text": "and finally this news came in just as i",
    "start": "122880",
    "end": "124960"
  },
  {
    "text": "was preparing to record",
    "start": "124960",
    "end": "126320"
  },
  {
    "text": "alaska cache now supports the graviton",
    "start": "126320",
    "end": "128239"
  },
  {
    "text": "2-based m6g",
    "start": "128239",
    "end": "129840"
  },
  {
    "text": "and r6g instances to learn more you can",
    "start": "129840",
    "end": "132879"
  },
  {
    "text": "read chinese blog post",
    "start": "132879",
    "end": "134720"
  },
  {
    "start": "134000",
    "end": "186000"
  },
  {
    "text": "all right and finally one more cool",
    "start": "134720",
    "end": "136560"
  },
  {
    "text": "preview for you",
    "start": "136560",
    "end": "137840"
  },
  {
    "text": "cloudwatch lambda insights gives you",
    "start": "137840",
    "end": "139440"
  },
  {
    "text": "more information about the performance",
    "start": "139440",
    "end": "140879"
  },
  {
    "text": "of your lambda functions",
    "start": "140879",
    "end": "142640"
  },
  {
    "text": "you can learn more about compute usage",
    "start": "142640",
    "end": "144640"
  },
  {
    "text": "memory allocation and function duration",
    "start": "144640",
    "end": "146560"
  },
  {
    "text": "over time",
    "start": "146560",
    "end": "147440"
  },
  {
    "text": "and you can easily watch multiple",
    "start": "147440",
    "end": "148720"
  },
  {
    "text": "functions from one dashboard",
    "start": "148720",
    "end": "150560"
  },
  {
    "text": "the insights also work hand in glove",
    "start": "150560",
    "end": "152560"
  },
  {
    "text": "with both cloudwatch login sites and",
    "start": "152560",
    "end": "154720"
  },
  {
    "text": "cloudwatch service lens",
    "start": "154720",
    "end": "156160"
  },
  {
    "text": "so you have some great tools to help you",
    "start": "156160",
    "end": "157440"
  },
  {
    "text": "build even better applications",
    "start": "157440",
    "end": "159360"
  },
  {
    "text": "please check it out let me know what you",
    "start": "159360",
    "end": "160800"
  },
  {
    "text": "think to learn more you can read the",
    "start": "160800",
    "end": "162640"
  },
  {
    "text": "what's new",
    "start": "162640",
    "end": "164480"
  },
  {
    "text": "alright that's all for today as always",
    "start": "164480",
    "end": "166720"
  },
  {
    "text": "we look forward to your feedback",
    "start": "166720",
    "end": "168239"
  },
  {
    "text": "send us an email a tweet leave a comment",
    "start": "168239",
    "end": "170480"
  },
  {
    "text": "below",
    "start": "170480",
    "end": "171760"
  },
  {
    "text": "if you'd like to see some more videos",
    "start": "171760",
    "end": "172879"
  },
  {
    "text": "just like this you can subscribe to our",
    "start": "172879",
    "end": "174640"
  },
  {
    "text": "channel",
    "start": "174640",
    "end": "175120"
  },
  {
    "text": "click the bell for some notifications",
    "start": "175120",
    "end": "177120"
  },
  {
    "text": "thanks so much for watching we'll see",
    "start": "177120",
    "end": "178560"
  },
  {
    "text": "you again soon",
    "start": "178560",
    "end": "185840"
  },
  {
    "text": "you",
    "start": "186560",
    "end": "188640"
  }
]