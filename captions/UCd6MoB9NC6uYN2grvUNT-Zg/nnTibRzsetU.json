[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "What's up, everyone?",
    "start": "330",
    "end": "1546"
  },
  {
    "text": "If you're looking to create\nyour first machine learning project,",
    "start": "1546",
    "end": "4451"
  },
  {
    "text": "then stick around.",
    "start": "4451",
    "end": "5497"
  },
  {
    "text": "I'm going to show you\nhow you can use machine learning",
    "start": "5497",
    "end": "8108"
  },
  {
    "text": "to predict the outcome\nof any sports game.",
    "start": "8108",
    "end": "10723"
  },
  {
    "text": "Jack is from Philly and loves basketball.",
    "start": "19612",
    "end": "22303"
  },
  {
    "text": "He helps high school aged kids in Africa\nget college scholarships to play basketball,",
    "start": "22304",
    "end": "26916"
  },
  {
    "text": "and has even worked with a few people\nwho have reached the pros.",
    "start": "26916",
    "end": "30024"
  },
  {
    "text": "He wants to build an app",
    "start": "30024",
    "end": "31100"
  },
  {
    "text": "that will predict the outcome\nof basketball games.",
    "start": "31100",
    "end": "33399"
  },
  {
    "text": "Let's hear from Jack.",
    "start": "33399",
    "end": "34568"
  },
  {
    "text": "I'm here to bring you\nour NBA game predictor.",
    "start": "34569",
    "end": "37150"
  },
  {
    "text": "This tool will forecast\nthe outcome of NBA games.",
    "start": "37150",
    "end": "40892"
  },
  {
    "text": "Would you like to know the Sixers\nare going to beat the Knicks?",
    "start": "40892",
    "end": "44306"
  },
  {
    "text": "Well, of course\nthey're going to beat the Knicks,",
    "start": "44306",
    "end": "46124"
  },
  {
    "text": "everybody beats the Knicks.",
    "start": "46124",
    "end": "47720"
  },
  {
    "text": "But if you'd like to know\nby how much they're going to beat the Knicks,",
    "start": "47720",
    "end": "51283"
  },
  {
    "text": "then this tool is for you.",
    "start": "51283",
    "end": "53541"
  },
  {
    "text": "Our NBA game predictor will be powered",
    "start": "53541",
    "end": "55860"
  },
  {
    "text": "by the number one cloud computing platform\nin the world, Amazon Web Services.",
    "start": "55860",
    "end": "61700"
  },
  {
    "text": "They have some amazing services",
    "start": "61700",
    "end": "63751"
  },
  {
    "text": "such as Amazon Forecast,\nRedshift, and Athena.",
    "start": "63751",
    "end": "67769"
  },
  {
    "text": "We look forward to providing you\nwith this AWS driven tool.",
    "start": "67769",
    "end": "72946"
  },
  {
    "text": "I want you to turn on to what we're saying.",
    "start": "72946",
    "end": "75836"
  },
  {
    "text": "Tune in to the big data.",
    "start": "75836",
    "end": "78180"
  },
  {
    "text": "Use it as you see fit.",
    "start": "78180",
    "end": "81044"
  },
  {
    "text": "And then you can drop out of the rat race,\nand meet me on the beach of Bermuda.",
    "start": "81044",
    "end": "85888"
  },
  {
    "text": "Stay safe, Jack Whitehead out.",
    "start": "85888",
    "end": "89819"
  },
  {
    "text": "Jack wants to build an app that predicts\nthe score of basketball games in the NBA.",
    "start": "89819",
    "end": "94283"
  },
  {
    "text": "Let's do this.",
    "start": "94283",
    "end": "95715"
  },
  {
    "start": "95000",
    "end": "175000"
  },
  {
    "text": "And now it's time to introduce\nthe starting lineup of today's application.",
    "start": "95716",
    "end": "101641"
  },
  {
    "text": "Coming in at an ml.t3.large to train,",
    "start": "101641",
    "end": "105912"
  },
  {
    "text": "build, and deploy\nyour machine learning models,",
    "start": "105912",
    "end": "109464"
  },
  {
    "text": "Amazon SageMaker!",
    "start": "109464",
    "end": "113292"
  },
  {
    "text": "For all your serverless compute needs\nat any scale,",
    "start": "114893",
    "end": "119004"
  },
  {
    "text": "AWS Lambda!",
    "start": "119004",
    "end": "122024"
  },
  {
    "text": "Fans call him the watchdog\nfor his relentless monitoring",
    "start": "123692",
    "end": "127924"
  },
  {
    "text": "of AWS resources on the court and in AWS,",
    "start": "127924",
    "end": "132496"
  },
  {
    "text": "Amazon CloudWatch!",
    "start": "132496",
    "end": "135867"
  },
  {
    "text": "From Seattle, Washington, the creator,\nmaintainer,",
    "start": "139245",
    "end": "142743"
  },
  {
    "text": "and security guard for APIs,",
    "start": "142743",
    "end": "145896"
  },
  {
    "text": "Amazon API Gateway!",
    "start": "145896",
    "end": "149334"
  },
  {
    "text": "And now, the NoSQL database,",
    "start": "151118",
    "end": "154371"
  },
  {
    "text": "handling more than 10 trillion requests\nper game,",
    "start": "154371",
    "end": "159639"
  },
  {
    "text": "Amazon DynamoDB!",
    "start": "159639",
    "end": "164579"
  },
  {
    "text": "Ladies and gentlemen,\ngive it up for the starting lineup",
    "start": "167031",
    "end": "170938"
  },
  {
    "text": "of your machine learning application!",
    "start": "170938",
    "end": "174051"
  },
  {
    "start": "175000",
    "end": "453000"
  },
  {
    "text": "Based on a paper done\nby Professors Rory Bunker",
    "start": "176023",
    "end": "178618"
  },
  {
    "text": "at the University of Auckland",
    "start": "178618",
    "end": "180433"
  },
  {
    "text": "and Fadi Thabtah from Nelson Marlborough\nInstitute of Technology,",
    "start": "180433",
    "end": "184295"
  },
  {
    "text": "there are six main steps\nto create a sports prediction model.",
    "start": "184295",
    "end": "188380"
  },
  {
    "text": "Six steps? We can do that!",
    "start": "188380",
    "end": "190254"
  },
  {
    "text": "Way easier than climbing the rocky steps\nin Jack's hometown of Philly.",
    "start": "190254",
    "end": "194621"
  },
  {
    "text": "The MVP of this application\nis Amazon SageMaker.",
    "start": "194621",
    "end": "198417"
  },
  {
    "text": "SageMaker is the playmaker\nfor all six steps.",
    "start": "198417",
    "end": "202516"
  },
  {
    "text": "Successful machine learning requires\nhard to discover combinations of algorithms,",
    "start": "202516",
    "end": "206940"
  },
  {
    "text": "data, and parameters.",
    "start": "206940",
    "end": "208761"
  },
  {
    "text": "The first step is to pick a sport\nthat you know a lot about.",
    "start": "208761",
    "end": "211955"
  },
  {
    "text": "Can you answer the following questions\nabout your sport?",
    "start": "211955",
    "end": "214589"
  },
  {
    "text": "Who are the best players in the league?",
    "start": "214589",
    "end": "216656"
  },
  {
    "text": "Who are the best coaches in the league?",
    "start": "216656",
    "end": "218659"
  },
  {
    "text": "These are just a few questions\nthat you'll want to answer about your sport.",
    "start": "218659",
    "end": "222512"
  },
  {
    "text": "I say all this because\nit's tempting to create a model in which",
    "start": "222512",
    "end": "225750"
  },
  {
    "text": "past performance indicates\nfuture performance.",
    "start": "225750",
    "end": "228236"
  },
  {
    "text": "But you can't necessarily\nfollow that approach.",
    "start": "228236",
    "end": "230713"
  },
  {
    "text": "Your knowledge of the sport\ncan help focus the data",
    "start": "230713",
    "end": "233586"
  },
  {
    "text": "that is applied to the solution.",
    "start": "233586",
    "end": "236159"
  },
  {
    "text": "The next step\nis to understand your data.",
    "start": "236159",
    "end": "238854"
  },
  {
    "text": "Jack is passionate about the NBA.",
    "start": "238854",
    "end": "240653"
  },
  {
    "text": "So in his case, he would find a data set\ncontaining game performance from the league.",
    "start": "240653",
    "end": "245219"
  },
  {
    "text": "A lot of sports publish data sets\nso you probably won't have a hard time",
    "start": "245219",
    "end": "248752"
  },
  {
    "text": "finding a data set,\nunless you're into a really niche sport.",
    "start": "248752",
    "end": "252094"
  },
  {
    "text": "The third step is to prepare your data\nand extract features.",
    "start": "252094",
    "end": "255797"
  },
  {
    "text": "Feature extraction\nis a process of producing, combining,",
    "start": "255798",
    "end": "259202"
  },
  {
    "text": "or creating new variables in your data set.",
    "start": "259202",
    "end": "262207"
  },
  {
    "text": "You'll probably need to add\nadditional features to the data set.",
    "start": "262207",
    "end": "265573"
  },
  {
    "text": "For example,\nthe NBA data set doesn't tell you",
    "start": "265573",
    "end": "268570"
  },
  {
    "text": "if a player is the top shot blocker\nin the league,",
    "start": "268571",
    "end": "271190"
  },
  {
    "text": "which could indicate that any team that\nplays against him will score fewer points.",
    "start": "271190",
    "end": "276177"
  },
  {
    "text": "The fourth step is modeling.",
    "start": "276177",
    "end": "278532"
  },
  {
    "text": "A machine learning model\nis a mathematical representation",
    "start": "278532",
    "end": "282140"
  },
  {
    "text": "of a real world problem.",
    "start": "282140",
    "end": "283988"
  },
  {
    "text": "It's created as a result\nof applying an algorithm to a set of data.",
    "start": "283988",
    "end": "288530"
  },
  {
    "text": "There are a lot of ways\nthat you can go about this.",
    "start": "288530",
    "end": "291337"
  },
  {
    "text": "The simplest approach would be to use\nan algorithm called XGBoost.",
    "start": "291337",
    "end": "295941"
  },
  {
    "text": "XGBoost is the playbook\nfor implementing machine learning algorithms",
    "start": "295941",
    "end": "300191"
  },
  {
    "text": "under the gradient boosting framework.",
    "start": "300191",
    "end": "303053"
  },
  {
    "text": "Amazon SageMaker has XGBoost\nbuilt into the platform,",
    "start": "303053",
    "end": "306468"
  },
  {
    "text": "so it'll be easy to use and install.",
    "start": "306468",
    "end": "308314"
  },
  {
    "text": "Now that's a slam dunk.",
    "start": "308314",
    "end": "310199"
  },
  {
    "text": "I suggest you start with XGBoost,",
    "start": "310200",
    "end": "312269"
  },
  {
    "text": "and as you learn\nmore about machine learning,",
    "start": "312269",
    "end": "314323"
  },
  {
    "text": "then try other methods.",
    "start": "314323",
    "end": "315918"
  },
  {
    "text": "During the training process,\nSageMaker computes several metrics",
    "start": "315918",
    "end": "319442"
  },
  {
    "text": "such as training errors\nand prediction accuracy.",
    "start": "319442",
    "end": "322455"
  },
  {
    "text": "These metrics can help you\nget a play-by-play look",
    "start": "322455",
    "end": "325693"
  },
  {
    "text": "at whether the model is learning well.",
    "start": "325693",
    "end": "327927"
  },
  {
    "text": "These metrics are written\nto Amazon CloudWatch in real time.",
    "start": "327927",
    "end": "332726"
  },
  {
    "text": "The fifth step is evaluating\nhow the model has performed.",
    "start": "332726",
    "end": "336767"
  },
  {
    "text": "Typically, the amount of data\nthat you'll reserve to evaluate your model",
    "start": "336767",
    "end": "340526"
  },
  {
    "text": "is 20% to 30%\nof the total data set.",
    "start": "340526",
    "end": "343871"
  },
  {
    "text": "If you're happy with the accuracy rate,",
    "start": "343871",
    "end": "345711"
  },
  {
    "text": "then you're ready for step number six,",
    "start": "345711",
    "end": "347603"
  },
  {
    "text": "which is deploying the model into production.",
    "start": "347603",
    "end": "350478"
  },
  {
    "text": "Use a SageMaker endpoint.",
    "start": "350478",
    "end": "352146"
  },
  {
    "text": "And over time, you can use SageMaker\nmulti-model endpoint",
    "start": "352146",
    "end": "355550"
  },
  {
    "text": "to experiment with different models\nthat use different approaches",
    "start": "355550",
    "end": "358835"
  },
  {
    "text": "to see which model performs best.",
    "start": "358835",
    "end": "362182"
  },
  {
    "text": "To put your input into your lineup,",
    "start": "362183",
    "end": "364201"
  },
  {
    "text": "you'll want to use an AWS Lambda function\nto call the SageMaker endpoint.",
    "start": "364201",
    "end": "368682"
  },
  {
    "text": "For additional security,\nI like to use Amazon API Gateway",
    "start": "368683",
    "end": "372177"
  },
  {
    "text": "as the front door\nto my Lambda function.",
    "start": "372177",
    "end": "374941"
  },
  {
    "text": "If you're looking to create\na paid subscription service",
    "start": "374941",
    "end": "377405"
  },
  {
    "text": "and only allow a certain number of requests\nto your API,",
    "start": "377405",
    "end": "380912"
  },
  {
    "text": "check out API Gateway's usage plans.",
    "start": "380912",
    "end": "384086"
  },
  {
    "text": "Jack wants to allow users to be able\nto search his app for a team,",
    "start": "384087",
    "end": "388099"
  },
  {
    "text": "see the next team they're playing against,",
    "start": "388099",
    "end": "390115"
  },
  {
    "text": "and the predicted score of that game.",
    "start": "390115",
    "end": "392436"
  },
  {
    "text": "You can use Amazon DynamoDB\nto store the schedule of games.",
    "start": "392437",
    "end": "397876"
  },
  {
    "text": "You would use a Lambda function\nto fetch the next game",
    "start": "397876",
    "end": "400483"
  },
  {
    "text": "that the team is playing against.",
    "start": "400483",
    "end": "402405"
  },
  {
    "text": "Once you get the name of the rival team,",
    "start": "402405",
    "end": "404431"
  },
  {
    "text": "then you'll need to use Lambda\nto invoke API Gateway",
    "start": "404431",
    "end": "407992"
  },
  {
    "text": "in order to get the score of the game.",
    "start": "407992",
    "end": "410084"
  },
  {
    "text": "Now, it's time for a recap.",
    "start": "410084",
    "end": "413547"
  },
  {
    "text": "Lambda calls DynamoDB\nto get the head-to-head matchup.",
    "start": "413547",
    "end": "416842"
  },
  {
    "text": "The response triggers Lambda\nto pass the result to a request",
    "start": "416842",
    "end": "420049"
  },
  {
    "text": "to API Gateway to get the predicted score\nof the next game from Amazon SageMaker.",
    "start": "420049",
    "end": "424686"
  },
  {
    "text": "SageMaker passes the model\nto the front end via Lambda.",
    "start": "424686",
    "end": "427432"
  },
  {
    "text": "It takes a shot!",
    "start": "427432",
    "end": "429134"
  },
  {
    "text": "Oh, for the win!",
    "start": "429134",
    "end": "431163"
  },
  {
    "text": "Now it's time for you\nto build a sports prediction app.",
    "start": "431163",
    "end": "434876"
  },
  {
    "text": "It doesn't matter when you start,\nas long as you just get started.",
    "start": "434876",
    "end": "438417"
  },
  {
    "text": "Thanks for hanging out with me today.",
    "start": "438417",
    "end": "439951"
  },
  {
    "text": "See you next time.",
    "start": "439951",
    "end": "441315"
  }
]