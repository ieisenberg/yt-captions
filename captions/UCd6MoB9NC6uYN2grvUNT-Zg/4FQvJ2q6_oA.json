[
  {
    "text": "hello everyone and welcome to our deep dive into Amazon Elastic file system",
    "start": "1820",
    "end": "7290"
  },
  {
    "text": "would like to thank you all for joining us today my name is Duncan Lenox I'm the director of product management for",
    "start": "7290",
    "end": "13230"
  },
  {
    "text": "Amazon EFS and I'm joined by my colleague Vince carrion a senior product manager on the EFS team and we're also",
    "start": "13230",
    "end": "20310"
  },
  {
    "text": "really fortunate to have a builder with us today a customer from t-mobile who's going to talk a little bit about how they're using EFS later in the session",
    "start": "20310",
    "end": "29330"
  },
  {
    "text": "we've got a lot of great material we need to cover with you in the next hour we'd like to start out with a little bit",
    "start": "29330",
    "end": "35640"
  },
  {
    "text": "of an overview of AWS Storage give you a sense of the options that we have available and how we think about storage",
    "start": "35640",
    "end": "41700"
  },
  {
    "text": "at AWS and then I'm gonna turn it over to Vince to give you an introduction to Amazon Elastic file system and then",
    "start": "41700",
    "end": "47850"
  },
  {
    "text": "we're gonna dive deep into EFS and share with you a lot more of the details about the capabilities of EFS then we'll talk",
    "start": "47850",
    "end": "55079"
  },
  {
    "text": "a little bit about customer use cases how our customers are using EFS today wrap it up with some best practices some",
    "start": "55079",
    "end": "62250"
  },
  {
    "text": "guidelines for getting started with EFS and then take your questions at the end so let's get started",
    "start": "62250",
    "end": "68479"
  },
  {
    "text": "let's dive into the AWS Storage overview so AWS has been innovating with storage",
    "start": "68479",
    "end": "75869"
  },
  {
    "text": "rapidly over the last decade and we are really excited that Gartner and their clients have continued to recognize our",
    "start": "75869",
    "end": "82590"
  },
  {
    "text": "leadership on the public storage Magic Quadrant we're the vendor that is the highest on both axes and we've been",
    "start": "82590",
    "end": "89400"
  },
  {
    "text": "there since day one and being out dealing with storage at scale with our",
    "start": "89400",
    "end": "94979"
  },
  {
    "text": "customers has allowed us to gather a lot of feedback about storage and storage needs at AWS 90 to 95 percent of our",
    "start": "94979",
    "end": "103380"
  },
  {
    "text": "roadmap is driven by the feedback we hear from you our customers and it's allowed us to build a storage portfolio",
    "start": "103380",
    "end": "110040"
  },
  {
    "text": "that's broad and deep and in the almost 13 years now that we've been working with customers helping them move to the",
    "start": "110040",
    "end": "116610"
  },
  {
    "text": "AWS cloud we've learned a lot about adoption patterns and we see three core",
    "start": "116610",
    "end": "121950"
  },
  {
    "text": "adoption patterns out there with our customers the first one is Rijo stting and this is where you're taking an",
    "start": "121950",
    "end": "128310"
  },
  {
    "text": "existing application that might be running in virtual machines and moving it directly in the AWS cloud that's how we help",
    "start": "128310",
    "end": "135660"
  },
  {
    "text": "Lionsgate for example take their sharepoint and s AP applications and move them into the cloud another pattern",
    "start": "135660",
    "end": "142500"
  },
  {
    "text": "we see is replac form that's where you're taking an existing our application that you have moving it into",
    "start": "142500",
    "end": "149100"
  },
  {
    "text": "the AWS cloud and taking advantage of bits and pieces of AWS services including Amazon Elastic file system",
    "start": "149100",
    "end": "156470"
  },
  {
    "text": "that's how we help the BBC take their red button application and move it from",
    "start": "156470",
    "end": "161520"
  },
  {
    "text": "on Prem into the cloud and then the third pattern that we see is we architecting and this is where you're",
    "start": "161520",
    "end": "167550"
  },
  {
    "text": "modifying an existing application as you move it into the cloud and of course building new applications for the cloud",
    "start": "167550",
    "end": "172680"
  },
  {
    "text": "and leveraging a storage service like s3 through our API s I'm getting all this",
    "start": "172680",
    "end": "179850"
  },
  {
    "text": "feedback from customers and working with them has let us build out the options that we have for you and what we want to",
    "start": "179850",
    "end": "185160"
  },
  {
    "text": "be able to provide to you is more choice so you can select the right storage solution for each of your use cases so",
    "start": "185160",
    "end": "192150"
  },
  {
    "text": "whether that's a block storage service like Amazon EBS which you might be using and re hosting or file storage of course",
    "start": "192150",
    "end": "198540"
  },
  {
    "text": "like Amazon EFS for we are we platforming and then we architecting with something like Amazon s3 or Amazon",
    "start": "198540",
    "end": "205500"
  },
  {
    "text": "s3 glacier so why does file storage",
    "start": "205500",
    "end": "210510"
  },
  {
    "text": "matter well really when we're talking about file storage in this context we mean network file storage and of course",
    "start": "210510",
    "end": "216510"
  },
  {
    "text": "the vast majority of data that you have today is unstructured file data you have",
    "start": "216510",
    "end": "222329"
  },
  {
    "text": "a lot of applications that are depending on file and file systems so having",
    "start": "222329",
    "end": "227340"
  },
  {
    "text": "services available from AWS that provide file system services natively allows you",
    "start": "227340",
    "end": "233070"
  },
  {
    "text": "to take those applications that you have today and move them to the cloud without needing to rebuild core components that",
    "start": "233070",
    "end": "239610"
  },
  {
    "text": "sometimes are gonna be costly and expensive to re-architect or you may not even be able to have that as an option depending on where the",
    "start": "239610",
    "end": "245970"
  },
  {
    "text": "components come from so we're providing services that enable you to take those existing applications and your existing",
    "start": "245970",
    "end": "253019"
  },
  {
    "text": "IT environments and move them into the cloud so let's talk about fully managed",
    "start": "253019",
    "end": "259440"
  },
  {
    "text": "cloud systems so amazon EFS of course is what we're gonna do a deep dive into today but just yesterday a tree in Van",
    "start": "259440",
    "end": "266790"
  },
  {
    "text": "announce two new fully managed file service options that we have available Amazon fsx for Windows file server and",
    "start": "266790",
    "end": "273870"
  },
  {
    "text": "Amazon fsx for lustre so Amazon EFS is a general-purpose cloud native file system",
    "start": "273870",
    "end": "280560"
  },
  {
    "text": "designed for Linux workloads it's an NFS based service Amazon fsx for",
    "start": "280560",
    "end": "286740"
  },
  {
    "text": "Windows file server then is designed for your Windows workloads it delivers windows native capability in a fully",
    "start": "286740",
    "end": "292590"
  },
  {
    "text": "managed service an Amazon FS extra lustre is designed for your compute",
    "start": "292590",
    "end": "298020"
  },
  {
    "text": "intensive applications it's based on the popular open source parallel file system lustre but it's fully managed so today",
    "start": "298020",
    "end": "307410"
  },
  {
    "text": "we're gonna focus on Amazon Elastic file system and I'd like to turn it over to Vince for our deep dive good afternoon",
    "start": "307410",
    "end": "316890"
  },
  {
    "text": "my name is Vince Karen I'm one of the product managers on the Amazon EFS team I have a lot of insights and a lot of",
    "start": "316890",
    "end": "322770"
  },
  {
    "text": "stuff to go through so let's start with an introduction to Amazon DFS so a",
    "start": "322770",
    "end": "328490"
  },
  {
    "text": "couple years ago we launched Amazon EFS and before EFS if you wanted shared file",
    "start": "328490",
    "end": "336120"
  },
  {
    "text": "system in the AWS cloud you had to do it yourself so some of you may be familiar with an architecture similar to this in",
    "start": "336120",
    "end": "343110"
  },
  {
    "text": "doing it yourself and to do this it could be pretty burdensome definitely a lot to manage first you had to manage",
    "start": "343110",
    "end": "349530"
  },
  {
    "text": "the file server yet and manage the storage volumes and then you also had to worry about replicating that data across",
    "start": "349530",
    "end": "356070"
  },
  {
    "text": "availability zones to ensure for high availability so we launched DFS and we",
    "start": "356070",
    "end": "361290"
  },
  {
    "text": "had a couple things in mind when we did it so first thing we wanted EFS to be",
    "start": "361290",
    "end": "367290"
  },
  {
    "text": "who's wanted it to be as simple as possible amazon EFS is a fully managed",
    "start": "367290",
    "end": "372570"
  },
  {
    "text": "service it provides a simple interface for you to create and configure your",
    "start": "372570",
    "end": "377700"
  },
  {
    "text": "file systems and manages the file storage infrastructure for you and with just a few clicks you can create a",
    "start": "377700",
    "end": "384060"
  },
  {
    "text": "petabyte scale file system talking about elasticity that was our second core",
    "start": "384060",
    "end": "390390"
  },
  {
    "text": "tenant that we wanted EFS to be so EFS file systems automatically and instantly scales your file system storage capacity",
    "start": "390390",
    "end": "397890"
  },
  {
    "text": "up and down as you add or remove files there's no need to provision storage in",
    "start": "397890",
    "end": "403860"
  },
  {
    "text": "the last tenant is we wanted EFS to be scalable as I just mentioned with just a few clicks you can create a petabyte",
    "start": "403860",
    "end": "409890"
  },
  {
    "text": "scale file system that where throughput scales as well so we'll talk about each",
    "start": "409890",
    "end": "415080"
  },
  {
    "text": "of these in a second and on top of all that we wanted EFS to be highly available and highly durable so now that",
    "start": "415080",
    "end": "426600"
  },
  {
    "text": "you know a little bit about their tenants on how and why we built EFS let's go into some of the features of the service but before we do that I want",
    "start": "426600",
    "end": "435600"
  },
  {
    "text": "to talk a little bit about the service in the past year so as you can see from reinvent 2017 it's been a pretty busy",
    "start": "435600",
    "end": "442800"
  },
  {
    "text": "year for the EFS team we've launched more features launch DFS into more and more regions as you could see we",
    "start": "442800",
    "end": "449100"
  },
  {
    "text": "expanded to the Northern California seoul-tokyo and Singapore regions we",
    "start": "449100",
    "end": "454470"
  },
  {
    "text": "launched encryption of data in transit we launched a new feature called the provision throughput and we earned more",
    "start": "454470",
    "end": "460260"
  },
  {
    "text": "and more certifications and provided more ways for you to access that file system so I talked a lot about a number",
    "start": "460260",
    "end": "466440"
  },
  {
    "text": "of these we'll get into these in just a moment so you hear they learn a little bit more about Amazon EFS and we'll talk",
    "start": "466440",
    "end": "473130"
  },
  {
    "text": "about each of these again starting with elasticity and scalability so again you",
    "start": "473130",
    "end": "478980"
  },
  {
    "text": "can grow and shrink your file system on demand in fact there's no way to provision storage you simply just add or",
    "start": "478980",
    "end": "484500"
  },
  {
    "text": "remove files and EFS managed it for you you can grow up your your file systems",
    "start": "484500",
    "end": "489870"
  },
  {
    "text": "up to petabytes sighs there's no provisioning as I just mentioned and in the default bursting throughput mode",
    "start": "489870",
    "end": "496590"
  },
  {
    "text": "your performance scales as the file system grows and we'll talk about that in a second and lastly in terms of",
    "start": "496590",
    "end": "503190"
  },
  {
    "text": "scalability you could also mounds of instances with concurrent access to a single file",
    "start": "503190",
    "end": "509010"
  },
  {
    "text": "system Amazon EFS is designed to be",
    "start": "509010",
    "end": "515370"
  },
  {
    "text": "highly available and highly durable we're designed for 11:9 of durability and the distributed architecture of",
    "start": "515370",
    "end": "522330"
  },
  {
    "text": "Amazon EFS provides availability and durability protection from a-z outages",
    "start": "522330",
    "end": "527550"
  },
  {
    "text": "system failures or network connection errors will talk about the distributed architecture in a little bit in terms of",
    "start": "527550",
    "end": "534030"
  },
  {
    "text": "our best pack and that'll be towards the end of the session again you can mount your filesystem across multiple availability",
    "start": "534030",
    "end": "540900"
  },
  {
    "text": "zones we offer strong consistency for concurrent access and your data is",
    "start": "540900",
    "end": "546660"
  },
  {
    "text": "replicated within and across multiple availability zones again adding more layers of availability and durability",
    "start": "546660",
    "end": "554750"
  },
  {
    "text": "another benefit of Amazon EFS is the ability to access your filesystem from a",
    "start": "554840",
    "end": "560460"
  },
  {
    "text": "number of different locations so first you could access Amazon EFS through ec2",
    "start": "560460",
    "end": "565740"
  },
  {
    "text": "instances in your V PC you could also access the file system via AWS direct",
    "start": "565740",
    "end": "572670"
  },
  {
    "text": "connect to your on-premise servers in October we announce that you can now",
    "start": "572670",
    "end": "578220"
  },
  {
    "text": "access your EFS file systems from on-premise servers on-premises servers using AWS VPN connection as well as ec2",
    "start": "578220",
    "end": "585900"
  },
  {
    "text": "instances using intra region B PC peering and just this week we announced",
    "start": "585900",
    "end": "591780"
  },
  {
    "text": "that you can actually you can access your EFS file systems from ec2 instances",
    "start": "591780",
    "end": "597390"
  },
  {
    "text": "in other AWS regions using inter region V PC peering or via the newly launched",
    "start": "597390",
    "end": "603960"
  },
  {
    "text": "AWS transit gateway and in fact just yesterday we announced that you can now",
    "start": "603960",
    "end": "610770"
  },
  {
    "text": "access your EFS filesystem across accounts using the new shared V PC",
    "start": "610770",
    "end": "617900"
  },
  {
    "text": "with this we've increased the number of file systems that you're able to create per account as you can see there we",
    "start": "622380",
    "end": "628380"
  },
  {
    "text": "increase that to a thousand file systems per account or ten times increase and we've also added a new limit of four",
    "start": "628380",
    "end": "634500"
  },
  {
    "text": "hundred mount targets per V PC so Amazon",
    "start": "634500",
    "end": "640500"
  },
  {
    "text": "EFS has two different performance modes you have to pick the performance mode when you create the file system so let's",
    "start": "640500",
    "end": "646890"
  },
  {
    "text": "talk about both of these the default is the general purpose mode and this is",
    "start": "646890",
    "end": "652530"
  },
  {
    "text": "what we recommend for the majority of customer applications and as you test your application with DFS this is where",
    "start": "652530",
    "end": "657990"
  },
  {
    "text": "we recommend that you start the other performance mode is our max i/o",
    "start": "657990",
    "end": "663270"
  },
  {
    "text": "performance mode and this is really recommended for scale-out workloads so",
    "start": "663270",
    "end": "668520"
  },
  {
    "text": "let's compare and contrast the two different performance modes let's start with what's it for the general purpose of performance mode",
    "start": "668520",
    "end": "675480"
  },
  {
    "text": "is designed for just that general purpose file workloads as well as latency sensitive applications whereas",
    "start": "675480",
    "end": "683070"
  },
  {
    "text": "the max IO performance mode is really best for those large-scale out data heavy applications both performance",
    "start": "683070",
    "end": "690420"
  },
  {
    "text": "modes obviously comes with their own advantages as well as their trade-offs in the general purpose performance mode",
    "start": "690420",
    "end": "696990"
  },
  {
    "text": "your general purpose performance mode offers the lowest latency per file operation but it comes with a 7000 IO /",
    "start": "696990",
    "end": "706530"
  },
  {
    "text": "IO per second limit while the max IO performance mode you have a virtually",
    "start": "706530",
    "end": "712260"
  },
  {
    "text": "unlimited ability to scale throughput in AI ops but it comes with slightly higher latency x' per file operation as",
    "start": "712260",
    "end": "719340"
  },
  {
    "text": "compared to the general-purpose performance mode and when to use it as I mentioned before we recommended",
    "start": "719340",
    "end": "726630"
  },
  {
    "text": "customers start with the general-purpose performance mode test our applications but if you know that you have a",
    "start": "726630",
    "end": "732210"
  },
  {
    "text": "large-scale out type workload we really encourage you to look into the Maxell performance mode again you pick this",
    "start": "732210",
    "end": "738600"
  },
  {
    "text": "when you create the file system we also offer two different throughput modes the",
    "start": "738600",
    "end": "746310"
  },
  {
    "text": "first is the bursting throughput mode and this is where we recommend for the majority of workloads and in the",
    "start": "746310",
    "end": "752580"
  },
  {
    "text": "bursting throughput mode the throughput that you're able to draw with the file system is depends on the",
    "start": "752580",
    "end": "759450"
  },
  {
    "text": "size and scales up with the size of the file system itself so you're able to drive fifty megabytes a second",
    "start": "759450",
    "end": "765899"
  },
  {
    "text": "per terabyte of data stored at baseline but then burst to double that or a hundred megabytes a second per terabyte",
    "start": "765899",
    "end": "772260"
  },
  {
    "text": "of data stored the second throughput mode we launched in octave this year is",
    "start": "772260",
    "end": "778649"
  },
  {
    "text": "provision throughput now customers told us they want the ability to to drive higher levels of throughput compared to",
    "start": "778649",
    "end": "785940"
  },
  {
    "text": "their file system size so we launched this feature where you can actually set the throughput independent of the file",
    "start": "785940",
    "end": "791940"
  },
  {
    "text": "system size again let's compare and contrast the two options what is it for",
    "start": "791940",
    "end": "798420"
  },
  {
    "text": "again the bursting throughput mode is our default option it's good for workloads with variable throughput",
    "start": "798420",
    "end": "804480"
  },
  {
    "text": "demands whereas the provision throughput mode is really best for customers who",
    "start": "804480",
    "end": "809899"
  },
  {
    "text": "where you know you need a certain level of throughput for your application both",
    "start": "809899",
    "end": "815520"
  },
  {
    "text": "again come with their own unique advantages as well as trade-offs in the bursting throughput mode again one of",
    "start": "815520",
    "end": "821279"
  },
  {
    "text": "our tenants simple and inversing throughput mode it's simple your throughput scales as a size of the file",
    "start": "821279",
    "end": "826650"
  },
  {
    "text": "system grows however again the downside is that's a fixed ratio however with the",
    "start": "826650",
    "end": "831750"
  },
  {
    "text": "provision throughput mode the advantage is here is that you're able to define the throughput independent but it comes",
    "start": "831750",
    "end": "839190"
  },
  {
    "text": "with a little bit additional complexity in terms of pricing it adds in the pricing Domitian and we'll get to that in a second so when do you use it we",
    "start": "839190",
    "end": "846959"
  },
  {
    "text": "again we recommend the bursting throughput mode in general for most workloads however if you know that you have a higher throughput to storage",
    "start": "846959",
    "end": "854010"
  },
  {
    "text": "ratio we recommend the provision throughput mode you can actually switch between two the two throughput modes and",
    "start": "854010",
    "end": "860490"
  },
  {
    "text": "we'll get to that in a second and in fact later on during our best practices will talk about when that might actually be something you would want to consider",
    "start": "860490",
    "end": "868670"
  },
  {
    "text": "so again the provision throughput mode provision of throughput independent of",
    "start": "868670",
    "end": "874529"
  },
  {
    "text": "the size of the file system itself increases often as you'd like and you",
    "start": "874529",
    "end": "881370"
  },
  {
    "text": "can switch between the two modes or you can decrease about once every 24 hours again going back to our tenants we",
    "start": "881370",
    "end": "887160"
  },
  {
    "text": "wanted things to be as simple as possible so when we launched Amazon EFS about two and a half years ago we only offered the bursting",
    "start": "887160",
    "end": "893610"
  },
  {
    "text": "throughput mode but we got a lot of customer feedback telling us that they wanted provision throughput and we",
    "start": "893610",
    "end": "899010"
  },
  {
    "text": "launched that again in August of this year now customers have also told us that while they love the simplicity of",
    "start": "899010",
    "end": "904740"
  },
  {
    "text": "Amazon EFS it can be quite expensive to store large amounts of data for long periods of time so we took that feedback",
    "start": "904740",
    "end": "911670"
  },
  {
    "text": "we looked at all the various ways that we can reduce costs while still providing the the features that our",
    "start": "911670",
    "end": "918540"
  },
  {
    "text": "customers have come to expect so we're very excited to pre-announce this week",
    "start": "918540",
    "end": "924300"
  },
  {
    "text": "Amazon EFS infrequent access a new storage class that reduces the cost by",
    "start": "924300",
    "end": "930240"
  },
  {
    "text": "up to 85% now with Amazon EFS infrequent access there's no changes necessary to your",
    "start": "930240",
    "end": "937320"
  },
  {
    "text": "existing applications Amazon EFS transparent offers a single file system",
    "start": "937320",
    "end": "942420"
  },
  {
    "text": "namespace and will transparently serve that data from either the standard source class or the infrequent access",
    "start": "942420",
    "end": "948900"
  },
  {
    "text": "storage class to your applications cost savings of up to 85% for for that data",
    "start": "948900",
    "end": "954840"
  },
  {
    "text": "that is not an access as frequently and we offer off automatic lifecycle management to simplify things so let's",
    "start": "954840",
    "end": "961170"
  },
  {
    "text": "talk a little bit about how that actually works so when we launch amazon EFS infrequent access you simply create",
    "start": "961170",
    "end": "968100"
  },
  {
    "text": "your filesystem you also enable lifecycle management and then with",
    "start": "968100",
    "end": "973170"
  },
  {
    "text": "lifecycle management enabled any files that are not accessed within or for 30",
    "start": "973170",
    "end": "978180"
  },
  {
    "text": "days are automatically moved to the infrequent access storage class there's",
    "start": "978180",
    "end": "983790"
  },
  {
    "text": "no need for you to to manage and you can save like I said up to 85% we'll get to",
    "start": "983790",
    "end": "989610"
  },
  {
    "text": "the pricing and have a few slides so switch gears a little bit let's talk a",
    "start": "989610",
    "end": "995490"
  },
  {
    "text": "little bit about security and compliance at AWS Security's always a top concern so we offer a number of different",
    "start": "995490",
    "end": "1000890"
  },
  {
    "text": "mechanisms for you to control and secure your file systems first you can control",
    "start": "1000890",
    "end": "1006020"
  },
  {
    "text": "network traffic using Amazon V PC security groups as well as network ackles you can control file and",
    "start": "1006020",
    "end": "1013580"
  },
  {
    "text": "directory as access using standard POSIX permissions you can use AWS I am for",
    "start": "1013580",
    "end": "1021080"
  },
  {
    "text": "administrative access you can encrypt your data at rest using",
    "start": "1021080",
    "end": "1026089"
  },
  {
    "text": "keys managed in AWS kms as well as encrypt data in transit using industry standard TLS 1.2 and because which",
    "start": "1026090",
    "end": "1034760"
  },
  {
    "text": "Amazon EFS is has become HIPAA eligible gdpr compliant PCI DSS sock and ISO",
    "start": "1034760",
    "end": "1041930"
  },
  {
    "text": "compliant so we've talked a few minutes about the features of Amazon DFS let's",
    "start": "1041930",
    "end": "1048020"
  },
  {
    "text": "talk about a new integration that we were very excited to announce this week as well some of you may have seen this",
    "start": "1048020",
    "end": "1054350"
  },
  {
    "text": "week the new announcement of AWS data sync it combines the speed and reliability of network acceleration",
    "start": "1054350",
    "end": "1060590"
  },
  {
    "text": "tools software with cost-effectiveness of open source tools fast data transfer",
    "start": "1060590",
    "end": "1066260"
  },
  {
    "text": "you can transfer data from on-premises to AWS up to 10 gigabits a second it's",
    "start": "1066260",
    "end": "1072320"
  },
  {
    "text": "very easy to use you can use via the console via CLI via SDK it's secure and",
    "start": "1072320",
    "end": "1078830"
  },
  {
    "text": "reliable it supports encryption at rest as well as in transit and it's cost effective only four cents per gigabyte talking",
    "start": "1078830",
    "end": "1087530"
  },
  {
    "text": "about costs let's move on to some of the economics of Amazon EFS so there's no commitment minimum commitment no upfront",
    "start": "1087530",
    "end": "1094490"
  },
  {
    "text": "fees there's no need to provision store in storage in advance in fact there's no way for one to provision storage in",
    "start": "1094490",
    "end": "1101270"
  },
  {
    "text": "advance for with the FS and there's no other fees and charges so the default to",
    "start": "1101270",
    "end": "1107630"
  },
  {
    "text": "bursting throughput mode it's simple pricing it says only a single pricing dimension and you only pay for the",
    "start": "1107630",
    "end": "1113600"
  },
  {
    "text": "storage that you actually store on EFS and with bursting throughput you that if",
    "start": "1113600",
    "end": "1119450"
  },
  {
    "text": "this price includes 50 megabytes a second per terabyte of data stored as we previously discussed now if provision throughput it dad's",
    "start": "1119450",
    "end": "1126890"
  },
  {
    "text": "that second pricing dimension so the first of the storage price like we previously talked about whereas the",
    "start": "1126890",
    "end": "1131900"
  },
  {
    "text": "second is the throughput price and you pay separate for the throughput that you provision and in fact you only pay for",
    "start": "1131900",
    "end": "1138140"
  },
  {
    "text": "the provision throughput a mouth that's above the throughput that's included in the storage price",
    "start": "1138140",
    "end": "1145360"
  },
  {
    "text": "and now with EFS infrequent access the data in the standard class is charged",
    "start": "1147210",
    "end": "1153060"
  },
  {
    "text": "the same as we previously talked about however in frequently accessed data is",
    "start": "1153060",
    "end": "1158310"
  },
  {
    "text": "stored in the ia storage class and you can see the price there it's a 4.5 cents per gigabyte and separately you're also",
    "start": "1158310",
    "end": "1165660"
  },
  {
    "text": "charged for access they'll be one cent per gigabyte for access let's put it",
    "start": "1165660",
    "end": "1173850"
  },
  {
    "text": "back together with the slide that I talked about previously so obviously there's a lot of operational burden when",
    "start": "1173850",
    "end": "1179400"
  },
  {
    "text": "it comes to managing this yourself there's patching there's managing traffic over procuring let's talk about",
    "start": "1179400",
    "end": "1186330"
  },
  {
    "text": "what it actually what it actually would cost so if you did this on AWS you'd have to first pay for Amazon ec2",
    "start": "1186330",
    "end": "1193470"
  },
  {
    "text": "instance costs you'd have to worry about EBS volume cost and again you'd probably would likely have to over provision to",
    "start": "1193470",
    "end": "1200520"
  },
  {
    "text": "ensure that you had the capacity available to you and then you also have to worry about that inter AC data",
    "start": "1200520",
    "end": "1206010"
  },
  {
    "text": "transfer costs again for high availability and additionally with infrequent access you would have to",
    "start": "1206010",
    "end": "1211050"
  },
  {
    "text": "manage the tearing of data if you will between one storage option versus",
    "start": "1211050",
    "end": "1217020"
  },
  {
    "text": "another storage option and as you can see here if you take if you compare and contrast the two looking at a 500",
    "start": "1217020",
    "end": "1223740"
  },
  {
    "text": "gigabyte file system you could see that Amazon EFS is about 90% less expensive",
    "start": "1223740",
    "end": "1229710"
  },
  {
    "text": "than the do-it-yourself option and again this is a fully managed option there's no patching nothing that you need to",
    "start": "1229710",
    "end": "1235950"
  },
  {
    "text": "worry about for her operating the file system Amazon EFS is now available in",
    "start": "1235950",
    "end": "1242940"
  },
  {
    "text": "ten regions and we are excited to announce that we are coming soon to the London region as well as to the gov",
    "start": "1242940",
    "end": "1248880"
  },
  {
    "text": "cloud region so stay tuned there and with that I'd like to pass it back to Duncan and talk a little bit more about",
    "start": "1248880",
    "end": "1255120"
  },
  {
    "text": "how our customers how they're using the service as well as some of their use cases thank you thanks Vince so now that",
    "start": "1255120",
    "end": "1262050"
  },
  {
    "text": "we've had an opportunity to dive deep into some of the capabilities of EFS let's talk a little bit about how people are using it today so when we designed",
    "start": "1262050",
    "end": "1270330"
  },
  {
    "text": "EFS we designed it for to be a general-purpose file system for the broadest array of workloads so",
    "start": "1270330",
    "end": "1276330"
  },
  {
    "text": "everything from your scale-out workloads that need massively parallel i/o and high levels of throughput all the way down to",
    "start": "1276330",
    "end": "1283200"
  },
  {
    "text": "single threaded latency sensitive applications and everything in between and our customers are using EFS today in",
    "start": "1283200",
    "end": "1291120"
  },
  {
    "text": "a very wide set of applications which is a testament to what we've been able to do with our broad set of use cases I'm",
    "start": "1291120",
    "end": "1297029"
  },
  {
    "text": "not gonna go through all of them but I'll just pick a few to highlight we talked earlier about the BBC moving their red button application they",
    "start": "1297029",
    "end": "1303090"
  },
  {
    "text": "actually gave a chalk talk session earlier in the week on it and we have a detailed case study on their use of the",
    "start": "1303090",
    "end": "1308220"
  },
  {
    "text": "FS on our website so I'd encourage you to check that out we've also worked with enterprise application vendors to run",
    "start": "1308220",
    "end": "1315299"
  },
  {
    "text": "their applications on Amazon EFS so Atlassian actually runs their own implementation of their JIRA application",
    "start": "1315299",
    "end": "1321440"
  },
  {
    "text": "using Amazon EFS and we've worked with message broker application vendors like",
    "start": "1321440",
    "end": "1326669"
  },
  {
    "text": "IBM and TIBCO to get those running on EFS as well and companies like Celgene",
    "start": "1326669",
    "end": "1331830"
  },
  {
    "text": "have taken their high performance computing workloads and move those into the AWS cloud using amazon EFS but the",
    "start": "1331830",
    "end": "1340380"
  },
  {
    "text": "best thing is always to hear directly from a customer so we're delighted to have a builder here with us today and I'm gonna turn it over to a mereth from",
    "start": "1340380",
    "end": "1347010"
  },
  {
    "text": "t-mobile to hear about how t Mobile is using Amazon EFS Thank You Duncan thank",
    "start": "1347010",
    "end": "1356399"
  },
  {
    "text": "you wins it's an incredible honor to be here to talk about our use cases here t-mobile so who likes to be on world's",
    "start": "1356399",
    "end": "1370289"
  },
  {
    "text": "fastest 4G LTE and on a best network and to be with unused a lower-cost",
    "start": "1370289",
    "end": "1377639"
  },
  {
    "text": "long Fe here Thanks so that's what",
    "start": "1377639",
    "end": "1383820"
  },
  {
    "text": "t-mobile is doing so t-mobile is not only as we transform the wireless",
    "start": "1383820",
    "end": "1389580"
  },
  {
    "text": "industry here it has been through a lot of transformation over the last few years and we have not only changed the",
    "start": "1389580",
    "end": "1396360"
  },
  {
    "text": "wireless landscape through this transformation we have even transformed a lot of applications and whatever we",
    "start": "1396360",
    "end": "1404250"
  },
  {
    "text": "have done in our data center and we have moved a lot of things it abuse so we",
    "start": "1404250",
    "end": "1409320"
  },
  {
    "text": "have been an AW has played a key role in this transformation it has enabled us to",
    "start": "1409320",
    "end": "1414390"
  },
  {
    "text": "transform in a much faster fish and ef-s specifically has been part of our part",
    "start": "1414390",
    "end": "1421470"
  },
  {
    "text": "of our architecture and it has certainly helped us to move fast",
    "start": "1421470",
    "end": "1426740"
  },
  {
    "text": "my name is Amna Chandra Shekar I am from t-mobile and I'm also part of the cloud center of excellence team so as I told",
    "start": "1426980",
    "end": "1434640"
  },
  {
    "text": "you we not only transform the wireless industry we are also innovating in a very fast phase and we used a lot of",
    "start": "1434640",
    "end": "1441000"
  },
  {
    "text": "open source technology and we would love to contribute back to it as well and over the last few months and couple of",
    "start": "1441000",
    "end": "1448410"
  },
  {
    "text": "years we have open source a lot of our projects and some of the projects are here like the Josh serverless which uses",
    "start": "1448410",
    "end": "1455250"
  },
  {
    "text": "the lambda functions at AWS T Walt which is built on top of Hasek of Walt for",
    "start": "1455250",
    "end": "1460320"
  },
  {
    "text": "secure accessing your keys and we have integrated with our mesas and cubed as clusters at t-mobile at a pretty large",
    "start": "1460320",
    "end": "1466650"
  },
  {
    "text": "scale back border security compliance tool where teams have been using at t-mobile in a large scale for knowing",
    "start": "1466650",
    "end": "1474510"
  },
  {
    "text": "their compliance status and even you can write your own rules and it's again open",
    "start": "1474510",
    "end": "1479700"
  },
  {
    "text": "sourced and we have seen an incredible traction for people who are on AWS and we are also on blockchain with next",
    "start": "1479700",
    "end": "1486780"
  },
  {
    "text": "directory and teams we have been on partnership with multiple other industry folks to build the blockchain capability",
    "start": "1486780",
    "end": "1494430"
  },
  {
    "text": "as well and along with that we are also building capabilities on cumulative",
    "start": "1494430",
    "end": "1499440"
  },
  {
    "text": "platform which we called as conductor and which will be trying to open source in Ex coming months so the most common",
    "start": "1499440",
    "end": "1509190"
  },
  {
    "text": "question so ye FS so we have been running a pretty large scale container",
    "start": "1509190",
    "end": "1516120"
  },
  {
    "text": "orchestration systems at t-mobile and we have been running with both mesos and Cuban others we've been running with",
    "start": "1516120",
    "end": "1522810"
  },
  {
    "text": "more than six thousand containers with more than two thousand services that is running live and we have been taking in",
    "start": "1522810",
    "end": "1529340"
  },
  {
    "text": "transactions at about like close to 100,000 requests per second and we've",
    "start": "1529340",
    "end": "1534660"
  },
  {
    "text": "been doing that over a lot of our NPI launches EFS is a fully managed service",
    "start": "1534660",
    "end": "1540600"
  },
  {
    "text": "and fully managed we don't have to worry about launching these NFS file systems",
    "start": "1540600",
    "end": "1547290"
  },
  {
    "text": "on AWS and worry about scaling these aw are pre provisioning in it's been fully managed",
    "start": "1547290",
    "end": "1553080"
  },
  {
    "text": "we don't have to worry about patching or any of those it is highly scalable I",
    "start": "1553080",
    "end": "1558210"
  },
  {
    "text": "suggest all it's available on dual performance modes the general purpose and max are you because we are a large",
    "start": "1558210",
    "end": "1564029"
  },
  {
    "text": "enterprise company we have a wide variety of use cases it's also available",
    "start": "1564029",
    "end": "1569070"
  },
  {
    "text": "in throughput mode with bursting and provision and I'll be talking about these use cases and a deep dive into the",
    "start": "1569070",
    "end": "1574649"
  },
  {
    "text": "architecture of how we build those systems and we are using with EFS we",
    "start": "1574649",
    "end": "1579690"
  },
  {
    "text": "take security very seriously at t-mobile and we choose demanded services on AWS",
    "start": "1579690",
    "end": "1585059"
  },
  {
    "text": "which are in compliant and EFS is PCI compliant as well because we deal with",
    "start": "1585059",
    "end": "1590250"
  },
  {
    "text": "large number of customer data and payment data as well and of course it is very less expensive",
    "start": "1590250",
    "end": "1596279"
  },
  {
    "text": "it is about 70% less expensive and now it is 90% expensive as what Vince has",
    "start": "1596279",
    "end": "1603029"
  },
  {
    "text": "just talked about so what are the use cases seer like various architecture",
    "start": "1603029",
    "end": "1608850"
  },
  {
    "text": "patterns and one such is with Q brothers with CI CD with artifactory even TIBCO",
    "start": "1608850",
    "end": "1617490"
  },
  {
    "text": "and what is one thing common about all these architecture pattern is we use EFS",
    "start": "1617490",
    "end": "1622820"
  },
  {
    "text": "so if s is central to all these architecture patterns and I will be",
    "start": "1622820",
    "end": "1628529"
  },
  {
    "text": "talking about all these use cases now it's accumulative so over this",
    "start": "1628529",
    "end": "1634700"
  },
  {
    "text": "reinvent we have seen a lot of sessions with Fargate with eks and even customers",
    "start": "1634700",
    "end": "1643169"
  },
  {
    "text": "are using building large scale kubera des environments on AWS there over 51",
    "start": "1643169",
    "end": "1648779"
  },
  {
    "text": "percentage of Cuban artists clusters are turning on AWS and we are one of them",
    "start": "1648779",
    "end": "1654809"
  },
  {
    "text": "who are actually built pretty large-scale clusters on on AWS so we use EFS persistent volumes to mount the EFS",
    "start": "1654809",
    "end": "1663480"
  },
  {
    "text": "to the parts directly and we we have customers to our own customers to",
    "start": "1663480",
    "end": "1668519"
  },
  {
    "text": "actually have the application teams to use EFS directly and mounted to their",
    "start": "1668519",
    "end": "1673710"
  },
  {
    "text": "pods they can provision they won't EFS or we can actually manually create here files for them and they can mount it so",
    "start": "1673710",
    "end": "1679409"
  },
  {
    "text": "this even if the pods die pods move between one node to another node you don't have to worry about the",
    "start": "1679409",
    "end": "1685720"
  },
  {
    "text": "persistency of data because it's been stored in EFS and you can directly access it and it is scalable across",
    "start": "1685720",
    "end": "1692320"
  },
  {
    "text": "hundreds of nodes and it is as of what we have been using it's like 70% cost",
    "start": "1692320",
    "end": "1697750"
  },
  {
    "text": "effective then if you are doing it on ourselves the next use case is CI CD so",
    "start": "1697750",
    "end": "1704769"
  },
  {
    "text": "since we are a large scale enterprise and gathering like 2000 services and we are into congest integration and",
    "start": "1704769",
    "end": "1711370"
  },
  {
    "text": "continuous delivery using jenkins and any other pipelines what you are using what we found out is it is it is it's a",
    "start": "1711370",
    "end": "1719500"
  },
  {
    "text": "lot of a lot of work and it's it's we have to maintain large systems if you're",
    "start": "1719500",
    "end": "1724870"
  },
  {
    "text": "actually having Jenkins slaves on ec2 instances and we have already have a massive mesas and cube meters cluster is",
    "start": "1724870",
    "end": "1731019"
  },
  {
    "text": "what we are build so we started provisioning the Jenkins slaves on these clusters and we have we have been doing",
    "start": "1731019",
    "end": "1737409"
  },
  {
    "text": "build jobs and everything on these clusters and what we found out that every time you are doing a build it has",
    "start": "1737409",
    "end": "1744639"
  },
  {
    "text": "to download all those dependencies like maven dependencies or NPM dependencies into and every single time and that",
    "start": "1744639",
    "end": "1750820"
  },
  {
    "text": "takes a lot of time for for us to build those artifacts and then move to our factory and deploy so we have reduced",
    "start": "1750820",
    "end": "1758049"
  },
  {
    "text": "our build time from like 10 to 50 percent a depending on the length of the pipeline just because we are cashing",
    "start": "1758049",
    "end": "1763330"
  },
  {
    "text": "those on EFS and every time a new Jenkins slaves spawn it actually has",
    "start": "1763330",
    "end": "1768580"
  },
  {
    "text": "these EFS mounted on these pods so all the frequently downloaded artifacts everything has already been pre",
    "start": "1768580",
    "end": "1774879"
  },
  {
    "text": "available on these pods and every time you actually do a build job it only has these artifacts so you don't have to",
    "start": "1774879",
    "end": "1780190"
  },
  {
    "text": "download over again and again you're saving a lot of network past and even the throughput and even like you don't",
    "start": "1780190",
    "end": "1785919"
  },
  {
    "text": "have to worry about your bill job taking a lot of times and I'm pretty sure nobody wants their bill job to take",
    "start": "1785919",
    "end": "1791769"
  },
  {
    "text": "about like half an hour one or two run right so that's exactly what I've been doing and all the parts are short-lived",
    "start": "1791769",
    "end": "1797889"
  },
  {
    "text": "we don't have these parts running for days together and some parts run for like a few seconds some parts take",
    "start": "1797889",
    "end": "1804190"
  },
  {
    "text": "minutes some of these slaves takes even a day because of some backup jobs and we have been through this journey over",
    "start": "1804190",
    "end": "1810490"
  },
  {
    "text": "laughs last year or so another use case is",
    "start": "1810490",
    "end": "1815770"
  },
  {
    "text": "Factory so since we are in the CI CD and we have a centralized repository to",
    "start": "1815770",
    "end": "1821740"
  },
  {
    "text": "store our maven or artifact we are even our docker capacities we use artifactory",
    "start": "1821740",
    "end": "1827050"
  },
  {
    "text": "heavily and we wanted to be highly available and even it has to be dr disaster recovery proof even if one of",
    "start": "1827050",
    "end": "1833800"
  },
  {
    "text": "the region's goes down or even the artifactory goes down we should be able to serve the the nature of how",
    "start": "1833800",
    "end": "1840010"
  },
  {
    "text": "applications are containerized every time you run a new container or spawn up it has to download those dependencies and it has to you sorry factory to",
    "start": "1840010",
    "end": "1845980"
  },
  {
    "text": "download so we leverage the max ion provision throughput mode Safari factory so we were initially trying with the",
    "start": "1845980",
    "end": "1853840"
  },
  {
    "text": "default configurations of re factory and what we found out was we are not able to get the maximum performance out of EFS",
    "start": "1853840",
    "end": "1861640"
  },
  {
    "text": "so it is it is very important for us to choose the right modes and we chose in",
    "start": "1861640",
    "end": "1867850"
  },
  {
    "text": "last August actually the EFS team had released the protein throughput modes and we make use of those and then we",
    "start": "1867850",
    "end": "1875110"
  },
  {
    "text": "actually moved some of those to EFS and we store like more than 50,000 artifacts",
    "start": "1875110",
    "end": "1880570"
  },
  {
    "text": "with 200 terabyte of data the under use case where we actually initially started",
    "start": "1880570",
    "end": "1886150"
  },
  {
    "text": "200 years ago was to actually stand up to go on on AWS so it's a very simple",
    "start": "1886150",
    "end": "1892000"
  },
  {
    "text": "use case all all typical EMS needs is a single place where it can actually have",
    "start": "1892000",
    "end": "1898210"
  },
  {
    "text": "a config file and the TIBCO Emma's the master will actually talk to this I mean will actually make those read and write",
    "start": "1898210",
    "end": "1904060"
  },
  {
    "text": "operations on it the slave will just read from this config file but it is it",
    "start": "1904060",
    "end": "1909940"
  },
  {
    "text": "is it just initiated or start to start using EFS explore here first so this use cases and we were able to stand up a",
    "start": "1909940",
    "end": "1917230"
  },
  {
    "text": "typical EMS on a double years because of EFS so talking to all these use cases",
    "start": "1917230",
    "end": "1923680"
  },
  {
    "text": "I'm pretty sure there's a lot of developers and architects and a lot of folks would would love to hear how did",
    "start": "1923680",
    "end": "1930370"
  },
  {
    "text": "we implement these systems so the first architecture pattern which like to talk",
    "start": "1930370",
    "end": "1935470"
  },
  {
    "text": "about is on applications running on Cuba natives using EFS so this is an architecture",
    "start": "1935470",
    "end": "1942640"
  },
  {
    "text": "diagram that shows like we have children's masters and nodes the notes are an auto scaling group and each of",
    "start": "1942640",
    "end": "1949000"
  },
  {
    "text": "those easy to censors are running docker are running Cuba narratives agents and and these",
    "start": "1949000",
    "end": "1955850"
  },
  {
    "text": "connect back to the Cuban leaders masters and we have EFS that has been provisioned so each of those EFS is",
    "start": "1955850",
    "end": "1962420"
  },
  {
    "text": "actually highly available you mean to say that each of those EFS what you see in the diagram there is built on three",
    "start": "1962420",
    "end": "1968720"
  },
  {
    "text": "availability zones so we mount all these all these EFS directly to the pods it's",
    "start": "1968720",
    "end": "1976610"
  },
  {
    "text": "up to the application teams because application teams can provision EFS automatically in a self-service way through EFS provisioner so the",
    "start": "1976610",
    "end": "1983900"
  },
  {
    "text": "application teams manager won't EFS and and they use EFS solutions and since EF is a solid is scaleable there's no need",
    "start": "1983900",
    "end": "1990800"
  },
  {
    "text": "for us to pre provision or worry about scaling or patching or any of this it's",
    "start": "1990800",
    "end": "1997280"
  },
  {
    "text": "already available and the variety of use cases teams use EFS for and and use",
    "start": "1997280",
    "end": "2004450"
  },
  {
    "text": "cases like like what has talked about caching it could be one of the use cases or teams would like to legacy some",
    "start": "2004450",
    "end": "2010750"
  },
  {
    "text": "legacy systems where they have been transformed into containers and these containers need a persistent storage and",
    "start": "2010750",
    "end": "2016300"
  },
  {
    "text": "they use EFS for that if you're not in the cube where it is and you are into maiasaurs and if we want to provision",
    "start": "2016300",
    "end": "2021790"
  },
  {
    "text": "you can actually pre provision this EFS and directly mount those into the docker containers so so we have number of",
    "start": "2021790",
    "end": "2028030"
  },
  {
    "text": "applications here we actually use it so since i'm from the platform team at",
    "start": "2028030",
    "end": "2033790"
  },
  {
    "text": "t-mobile so we actually run the cumulus platform and we provide a self-service way for application teams to provision",
    "start": "2033790",
    "end": "2040030"
  },
  {
    "text": "their own EFS clusters and and then they can directly mounted so there is no need for us to have an interaction or",
    "start": "2040030",
    "end": "2047380"
  },
  {
    "text": "whatsoever because it is very simple to use EFS a search the second use case is",
    "start": "2047380",
    "end": "2054250"
  },
  {
    "text": "see a CD on it alright very typical they a developer comes in the morning he",
    "start": "2054250",
    "end": "2060970"
  },
  {
    "text": "wants to write code he writes code he checks in and then it goes to bitbucket and once it goes to bitbucket as a web",
    "start": "2060970",
    "end": "2067690"
  },
  {
    "text": "hook that triggers and it triggers a Jenkins job and Jenkins requests the",
    "start": "2067690",
    "end": "2074500"
  },
  {
    "text": "kubernetes or the mesh was master to actually create a new slave that slave gets provisioned in either of queue",
    "start": "2074500",
    "end": "2081280"
  },
  {
    "text": "models or the mezzos and each of when its provision as I talked about earlier it mounts these EFS",
    "start": "2081280",
    "end": "2086889"
  },
  {
    "text": "to it and that's how all the bill jobs take less number of frames because it's already been cashed and now it goes to",
    "start": "2086890",
    "end": "2094240"
  },
  {
    "text": "the iteration of okay it has to do a maven build it has to do a dockable it then pushes to re factory and once it",
    "start": "2094240",
    "end": "2099910"
  },
  {
    "text": "pushes to artifactory now it is available for it to deploy as a part itself and guess what it's on a same",
    "start": "2099910",
    "end": "2107590"
  },
  {
    "text": "cluster we are not building a new cluster just because you have to run as he s ad we are actually using the extra",
    "start": "2107590",
    "end": "2113290"
  },
  {
    "text": "space that is available in the same system so we are actually saving a lot of cost because it's running on the same",
    "start": "2113290",
    "end": "2118390"
  },
  {
    "text": "same cluster so it runs on the same cluster and then you're deploying it once you deploy your services the Kuban",
    "start": "2118390",
    "end": "2124060"
  },
  {
    "text": "it is and the mayor is going to tell it okay this particular part or the container is now available for use it",
    "start": "2124060",
    "end": "2129640"
  },
  {
    "text": "has passed the health checks now a user it could be an internal or external user if the user is actually accessing the",
    "start": "2129640",
    "end": "2135400"
  },
  {
    "text": "system's through the browser or an AP icon using postman or anything it has it will be going why are the English and",
    "start": "2135400",
    "end": "2141550"
  },
  {
    "text": "then it access the same nodes where both the Jenkins slaves and the part that is",
    "start": "2141550",
    "end": "2147310"
  },
  {
    "text": "actually serving the application is running so this is one such architecture pattern the third architecture pattern",
    "start": "2147310",
    "end": "2155200"
  },
  {
    "text": "is on how to build and highly available and a disaster recovery system on our",
    "start": "2155200",
    "end": "2160960"
  },
  {
    "text": "factory so this is our architecture so this is exactly how we use it today and",
    "start": "2160960",
    "end": "2167020"
  },
  {
    "text": "how we built it so you can see we have like two two instance ec2 instances that",
    "start": "2167020",
    "end": "2172900"
  },
  {
    "text": "is build that is running re factory and both are using EFS mounted on these and",
    "start": "2172900",
    "end": "2178570"
  },
  {
    "text": "all the artifacts and everything is having the persistent storage on EFS and we have RDS and we and we use EBS and",
    "start": "2178570",
    "end": "2187810"
  },
  {
    "text": "even the load balancer to actually load balancer traffic between the master and slave clusters of re factory we have a",
    "start": "2187810",
    "end": "2194530"
  },
  {
    "text": "mission control dr application that replicates the state from one region to another region even if the artifactory",
    "start": "2194530",
    "end": "2201760"
  },
  {
    "text": "goes down or even if the entire region of AWS goes down we will still not have any downtime and we can provide 99.99%",
    "start": "2201760",
    "end": "2209890"
  },
  {
    "text": "availability for our customers internally at t-mobile to actually make use of re factory",
    "start": "2209890",
    "end": "2216570"
  },
  {
    "text": "the fourth system is the typical EMS so this particular architecture is taken",
    "start": "2216600",
    "end": "2223750"
  },
  {
    "text": "from one of the architecture patterns at AWS itself we didn't want to reinvent the wheel of how to actually build",
    "start": "2223750",
    "end": "2230320"
  },
  {
    "text": "another system so I exactly took that here and I put up here so this can be found on on the QuickStart architecture",
    "start": "2230320",
    "end": "2237220"
  },
  {
    "text": "typical EMS so what you see here is you have a primary and secondary EMS over and it's pretty straightforward you have",
    "start": "2237220",
    "end": "2244630"
  },
  {
    "text": "an EFS that has been monitor across these two ec2 instances and it has a con trick files that are stored on EFS and",
    "start": "2244630",
    "end": "2250470"
  },
  {
    "text": "the primary master keeps writing those configurations and the metadata to the",
    "start": "2250470",
    "end": "2255990"
  },
  {
    "text": "EFS server and then the secondary whenever there's a failover event or the primary master goes down or if you are",
    "start": "2255990",
    "end": "2262420"
  },
  {
    "text": "doing a patching activity on your primary whatever you do and the primary goes down the secondary typical EMS",
    "start": "2262420",
    "end": "2269170"
  },
  {
    "text": "already it takes care and that becomes a primary node so this is one of the",
    "start": "2269170",
    "end": "2274630"
  },
  {
    "text": "simple architecture patterns what we did but this was started two and half years ago just when EFS was announced so I I",
    "start": "2274630",
    "end": "2281230"
  },
  {
    "text": "was initially planning to launch my own EFS cluster for for one such applications but then once I found about",
    "start": "2281230",
    "end": "2287410"
  },
  {
    "text": "EFS it was like very straightforward to use from day one so thank you everyone and thanks for this opportunity I was",
    "start": "2287410",
    "end": "2295270"
  },
  {
    "text": "not the wins",
    "start": "2295270",
    "end": "2297660"
  },
  {
    "text": "well thank thank you very much on breath so I want to leave you folks with some best practices for using and testing",
    "start": "2301410",
    "end": "2308800"
  },
  {
    "text": "with Amazon TFS so in general paralyze as much as possible we recommend that",
    "start": "2308800",
    "end": "2314290"
  },
  {
    "text": "you use multiple threads writes multiple directories in parallel and increase the i/o size as much as possible and doing",
    "start": "2314290",
    "end": "2321520"
  },
  {
    "text": "so will greatly improve the performance that you find on Amazon EFS so here",
    "start": "2321520",
    "end": "2326530"
  },
  {
    "text": "let's look at throughput in this example we're using a single instance to write a 1 MB or 16 MB block to an EFS filesystem",
    "start": "2326530",
    "end": "2334930"
  },
  {
    "text": "and you can see that when we add either more threads or increase the block size",
    "start": "2334930",
    "end": "2340030"
  },
  {
    "text": "of the writes we're able to maximize the throughput from the single instance so",
    "start": "2340030",
    "end": "2345100"
  },
  {
    "text": "in this case it's a single c-5 instance able to drive the 250 megabytes a second",
    "start": "2345100",
    "end": "2350350"
  },
  {
    "text": "to an EFS filesystem just by changing those two attributes and just to note the limit for a single instance",
    "start": "2350350",
    "end": "2357250"
  },
  {
    "text": "throughput for a filesystem is in fact 250 megabytes a second similarly with I",
    "start": "2357250",
    "end": "2363790"
  },
  {
    "text": "ops you can see that by increasing the number of threads as well as by writing to multiple directories to avoid inode",
    "start": "2363790",
    "end": "2370810"
  },
  {
    "text": "contention you could you're dramatically able to improve the i/o per second and performance to the filesystem now with",
    "start": "2370810",
    "end": "2378940"
  },
  {
    "text": "both of these in mind again paralyze as much as possible think about the tools that you're using or how you're writing",
    "start": "2378940",
    "end": "2384940"
  },
  {
    "text": "your applications so not all file transfer applications are created equal",
    "start": "2384940",
    "end": "2390760"
  },
  {
    "text": "you can see that by using a multi-threaded application such as FP sync or new parallel be able to drive",
    "start": "2390760",
    "end": "2397330"
  },
  {
    "text": "much higher levels of throughput as compared to single threaded applications and additionally as we mentioned earlier",
    "start": "2397330",
    "end": "2403420"
  },
  {
    "text": "the new AWS data sync is a quick and is an easy way to help you transfer your data from on-premises to the idea of its",
    "start": "2403420",
    "end": "2410740"
  },
  {
    "text": "cloud I talked earlier about the two different throughput modes and one best",
    "start": "2410740",
    "end": "2418480"
  },
  {
    "text": "practices again is to use the throughput mode because you're able to switch between the to use the throughput mode",
    "start": "2418480",
    "end": "2424030"
  },
  {
    "text": "that best makes sense for the job that you're doing so if you can think about if creating a brand new file system and",
    "start": "2424030",
    "end": "2429520"
  },
  {
    "text": "you're looking to ingest the large amount of data into the file system if you choose the bursting throughput",
    "start": "2429520",
    "end": "2434760"
  },
  {
    "text": "mode with no data in it again your file system throughput scales with the size of the file system itself however with",
    "start": "2434760",
    "end": "2440910"
  },
  {
    "text": "no data in it we are able to drive up to 100 megabytes a second using burst credits and you can see that if you're",
    "start": "2440910",
    "end": "2446970"
  },
  {
    "text": "looking to ingest a 1 terabyte of data it's going to take about three hours",
    "start": "2446970",
    "end": "2452630"
  },
  {
    "text": "however if you're able to parallel eyes as well as use the provision throughput mode you're able to dramatically reduce",
    "start": "2452720",
    "end": "2461070"
  },
  {
    "text": "that so it's a 10 times improvement thereby writing from four instances in parallel and you're able to achieve one",
    "start": "2461070",
    "end": "2467550"
  },
  {
    "text": "gig a second of throughput just a side note the default limit for provision",
    "start": "2467550",
    "end": "2473400"
  },
  {
    "text": "throughput amount is 1 Giga second if you require more just please reach out to to us and we're happy to have a conversation other best practices again",
    "start": "2473400",
    "end": "2482130"
  },
  {
    "text": "monitor your file system so you can use Amazon Cloud watch to monitor the various metrics I talked earlier about",
    "start": "2482130",
    "end": "2488550"
  },
  {
    "text": "the general-purpose performance mode and you can see there that the percent IO limit is specific to that again that's",
    "start": "2488550",
    "end": "2494670"
  },
  {
    "text": "the just that's a metric to help you see how close you are to getting to that 7,000 io per second limit",
    "start": "2494670",
    "end": "2501020"
  },
  {
    "text": "additionally we talked about the bursting throughput mode and you can see there's a burst credit balance that you could also monitor via Amazon Cloud",
    "start": "2501020",
    "end": "2508860"
  },
  {
    "text": "watch and in fact this past week the Amazon Cloud watch team just launched the new automatic dashboard automatic",
    "start": "2508860",
    "end": "2516930"
  },
  {
    "text": "dashboards provides you with an aggregated view of the health and performance of your various AWS resources so this is the default ef-s",
    "start": "2516930",
    "end": "2524280"
  },
  {
    "text": "view with automatic dashboards you get the insights you need really at a quick glance if you require more in-depth or a",
    "start": "2524280",
    "end": "2531900"
  },
  {
    "text": "custom metrics of course you can use the metric math feature with Amazon Cloud Watch in fact if you visit the EFS",
    "start": "2531900",
    "end": "2539100"
  },
  {
    "text": "performance tutorial we give a number of links and a number of suggestions to to",
    "start": "2539100",
    "end": "2544680"
  },
  {
    "text": "custom EFS specific calculations to simplify monitoring as well as alarming",
    "start": "2544680",
    "end": "2550730"
  },
  {
    "text": "and then to summarize a number of best practices again I talked about start with the general purpose performance",
    "start": "2551000",
    "end": "2557520"
  },
  {
    "text": "mode again this is the one that you have to select at file system creation time start with the bursting throughput mode",
    "start": "2557520",
    "end": "2564470"
  },
  {
    "text": "use a Linux kernel 4.3 or greater utilize the EFS mount helper and",
    "start": "2564470",
    "end": "2571200"
  },
  {
    "text": "really this is a wrapper that's executed to help you mount the file system with NFS for one as well as with the the",
    "start": "2571200",
    "end": "2577680"
  },
  {
    "text": "default recommended mount options and as I talked about large i/o size and",
    "start": "2577680",
    "end": "2583020"
  },
  {
    "text": "paralyze as much as possible multiple threads multiple instances writes multiple directories to avoid inode",
    "start": "2583020",
    "end": "2589800"
  },
  {
    "text": "contention and then monitor those metrics so to close out you quickly",
    "start": "2589800",
    "end": "2597180"
  },
  {
    "text": "create a scalable high-performing filesystem visit the AWS website you",
    "start": "2597180",
    "end": "2603930"
  },
  {
    "text": "could also take a look at some of our tutorials the the examples that I showed previously in the best practice section",
    "start": "2603930",
    "end": "2609180"
  },
  {
    "text": "you could actually walk through those yourself so visit the the AWS website and you can take a look at a lot of",
    "start": "2609180",
    "end": "2615090"
  },
  {
    "text": "those and with that I'd love to take any questions that you might have we're very",
    "start": "2615090",
    "end": "2620250"
  },
  {
    "text": "fortunate to have a mereth here so we're happy to take any questions about EFS or any questions for for how t mobile is",
    "start": "2620250",
    "end": "2626280"
  },
  {
    "text": "using the filesystem yes sir",
    "start": "2626280",
    "end": "2634130"
  },
  {
    "text": "coming soon coming soon yes it's a it's a very important feature and someone",
    "start": "2639520",
    "end": "2645430"
  },
  {
    "text": "that customers have asked us quite frequently for so we're happy to pre-announce them you may have seen it yesterday in Andy's keynote yesterday",
    "start": "2645430",
    "end": "2650980"
  },
  {
    "text": "but is coming soon I'm sorry sir yes so",
    "start": "2650980",
    "end": "2663460"
  },
  {
    "text": "you are able to drive your performance scales as your file system size grows in",
    "start": "2663460",
    "end": "2669340"
  },
  {
    "text": "the bursting provision in the bursting throughput mode you're able to drive up to three gigs a second depending on the region or one Giga second again",
    "start": "2669340",
    "end": "2675700"
  },
  {
    "text": "depending on that region but again it's depending on the size of your file system itself whereas with the provision",
    "start": "2675700",
    "end": "2681970"
  },
  {
    "text": "throughput mode you just set the provision amount to what you would like and again you just have the two different the two different pricing",
    "start": "2681970",
    "end": "2691030"
  },
  {
    "text": "dimensions yes sir",
    "start": "2691030",
    "end": "2695250"
  },
  {
    "text": "so sure so the so the question was about if the same things we've just talked",
    "start": "2701230",
    "end": "2706910"
  },
  {
    "text": "about with Amazon ifs applied to our new windows file system so the Amazon FS extra windows file server is a",
    "start": "2706910",
    "end": "2712789"
  },
  {
    "text": "completely different service offering it's designed for a different set of use cases and they do have their own performance features and their own",
    "start": "2712789",
    "end": "2719089"
  },
  {
    "text": "pricing as well so it's it is separate from Amazon EFS lustre as well Amazon FS",
    "start": "2719089",
    "end": "2726470"
  },
  {
    "text": "extra lustre also a separate service each one tuned for slightly different performance workloads and each has its",
    "start": "2726470",
    "end": "2732109"
  },
  {
    "text": "own set of features and its own separate pricing",
    "start": "2732109",
    "end": "2736328"
  },
  {
    "text": "yep so if I understand your question is you had an issue where you were slowly running out of burst credits and someone",
    "start": "2766329",
    "end": "2772769"
  },
  {
    "text": "recommended that you just add them add some padding data to your file system so that you're able to achieve the",
    "start": "2772769",
    "end": "2778989"
  },
  {
    "text": "throughput that you're looking for correct like I previously mentioned the when we launch the efest we want to make",
    "start": "2778989",
    "end": "2784299"
  },
  {
    "text": "it as simple as possible so we only had that single bursting throughput mode so well we in fact recommended for",
    "start": "2784299",
    "end": "2789880"
  },
  {
    "text": "customers to do is if you knew that you needed a certain throughput amount was to do something similar to what you just",
    "start": "2789880",
    "end": "2795369"
  },
  {
    "text": "did which is again just to ensure that you had file your file system size was of the appropriate size so there are a",
    "start": "2795369",
    "end": "2801489"
  },
  {
    "text": "number of different ways you could do that dd obviously was was one that obviously worked in your use case but obviously with provision throughput you",
    "start": "2801489",
    "end": "2807249"
  },
  {
    "text": "no longer need to do that so absolutely you can just just use provision throughput you could switch at any time you don't even need to create a new file",
    "start": "2807249",
    "end": "2813339"
  },
  {
    "text": "system and yeah that answer your question sir great so you know that the",
    "start": "2813339",
    "end": "2823599"
  },
  {
    "text": "question was about accessing an EFS file system from a Windows box it is an NFS file system so it's available from an",
    "start": "2823599",
    "end": "2830559"
  },
  {
    "text": "NFS v4 client what we found in talking to a lot of customers over the last year because we get asked about windows a lot",
    "start": "2830559",
    "end": "2836739"
  },
  {
    "text": "was that the needs of our windows customers were often quite unique and distinct and that's why we developed and",
    "start": "2836739",
    "end": "2842589"
  },
  {
    "text": "announced yesterday fsx for Windows file server so right now with Amazon EFS we",
    "start": "2842589",
    "end": "2848589"
  },
  {
    "text": "continue to be very focused on NFS and primarily Linux workloads",
    "start": "2848589",
    "end": "2854429"
  },
  {
    "text": "well Amazon ef-s itself does not offer a caching mechanism today but we are integrated with Amazon AWS to reconnect",
    "start": "2867490",
    "end": "2875410"
  },
  {
    "text": "for high-speed access into AWS and we just announced a few weeks ago that",
    "start": "2875410",
    "end": "2880450"
  },
  {
    "text": "we're now supporting AWS VPN for access from on-prem into EFS as well I think",
    "start": "2880450",
    "end": "2889480"
  },
  {
    "text": "there's a question here ok you know",
    "start": "2889480",
    "end": "2897340"
  },
  {
    "text": "that's a very common question customer feedback we take for customer feedback very seriously as we mentioned we",
    "start": "2897340",
    "end": "2902980"
  },
  {
    "text": "launched a number of new features this year we probably don't publicly comment on our roadmap but if you'd like we",
    "start": "2902980",
    "end": "2908530"
  },
  {
    "text": "could probably we'll step it we could take a take this offline and have a more in-depth discussion perhaps in a more a",
    "start": "2908530",
    "end": "2914350"
  },
  {
    "text": "different video there any questions for forearm wrath and on the on his use of",
    "start": "2914350",
    "end": "2921100"
  },
  {
    "text": "EFS and how t-mobile's be able to achieve success are there any other",
    "start": "2921100",
    "end": "2930460"
  },
  {
    "text": "questions in general yes sir",
    "start": "2930460",
    "end": "2935369"
  },
  {
    "text": "I'm sorry can you say that one more time sir",
    "start": "2947730",
    "end": "2951470"
  },
  {
    "text": "well you know again that's something that gets into really talking about our our roadmap going forward which is something we typically don't do in a",
    "start": "2970300",
    "end": "2976810"
  },
  {
    "text": "public session certainly though we we appreciate hearing that feedback that is something that we hear from folks we do",
    "start": "2976810",
    "end": "2982270"
  },
  {
    "text": "have as Vince talked about the new AWS Data Sync service for moving an ingesting data in DFS directly and that",
    "start": "2982270",
    "end": "2989320"
  },
  {
    "text": "supports both s3 and EFS natively yes",
    "start": "2989320",
    "end": "2996070"
  },
  {
    "text": "sir",
    "start": "2996070",
    "end": "2998190"
  },
  {
    "text": "so the lifecycle management feature is part of the new EFS infrequent access",
    "start": "3002230",
    "end": "3007300"
  },
  {
    "text": "storage class so we've announced that is coming soon so it's not yet available for people to use but we hope to get it",
    "start": "3007300",
    "end": "3013000"
  },
  {
    "text": "into customers hands very very soon and lifecycle management for newly created file systems once it becomes available",
    "start": "3013000",
    "end": "3019060"
  },
  {
    "text": "you can turn it on and then will automatically move being frequently accessed data after 30 days to the ia",
    "start": "3019060",
    "end": "3025150"
  },
  {
    "text": "storage class yes sir",
    "start": "3025150",
    "end": "3032190"
  },
  {
    "text": "yeah absolutely do you know in general like I mentioned the best practice you'll typically get large better",
    "start": "3042650",
    "end": "3049130"
  },
  {
    "text": "performance if you increase that IO size you know one of the key benefits of Amazon AFS is that we you know durably",
    "start": "3049130",
    "end": "3055940"
  },
  {
    "text": "store your data across multiple availability zones we support strong consistency so that any subsequent you",
    "start": "3055940",
    "end": "3061940"
  },
  {
    "text": "know when you close the following subsequent opens is immediately accessible that data is make it accessible due to which there is a",
    "start": "3061940",
    "end": "3068499"
  },
  {
    "text": "there's a small latency overhead associated with each file operation so",
    "start": "3068499",
    "end": "3074420"
  },
  {
    "text": "in general if you're able to increase that the IO size you'll be able to get better performance because that that",
    "start": "3074420",
    "end": "3081289"
  },
  {
    "text": "that latency overhead is amortized over a larger set of data I totally",
    "start": "3081289",
    "end": "3090859"
  },
  {
    "text": "understand it's I said if in general if you're able to increase the file size you'll get better performance but maybe",
    "start": "3090859",
    "end": "3097400"
  },
  {
    "text": "we could take this offline I'm happy to share a little bit more and learn a little bit more about your specific use case yes sir",
    "start": "3097400",
    "end": "3107440"
  },
  {
    "text": "well we would the use of of rattus with the FS is something we'd love to learn more about your specific use case traum",
    "start": "3137940",
    "end": "3144150"
  },
  {
    "text": "we're always looking for feedback like that so we'd love to have a conversation at the end of the session about that with you and learn more at the yet after",
    "start": "3144150",
    "end": "3151140"
  },
  {
    "text": "question sir",
    "start": "3151140",
    "end": "3153588"
  },
  {
    "text": "so again we'd be getting into things in terms of the roadmap which we typically don't talk about in a public forum right",
    "start": "3175050",
    "end": "3181630"
  },
  {
    "text": "now we're very excited to get in free could access out the door and into customers hands and we'll be listening intently to all the feedback we get",
    "start": "3181630",
    "end": "3188080"
  },
  {
    "text": "about where customers would like us to go from there yes sir",
    "start": "3188080",
    "end": "3196170"
  },
  {
    "text": "well EFS is designed where you want to have a file system a live file system available it's designed to be a drop-in",
    "start": "3200010",
    "end": "3206550"
  },
  {
    "text": "replacement for applications and use cases today that expect to have access to a file system and conduct file system",
    "start": "3206550",
    "end": "3213000"
  },
  {
    "text": "operations so that would be the primary use case for EFS today and they're another there are a number of",
    "start": "3213000",
    "end": "3218880"
  },
  {
    "text": "considerations s3 is a fantastic service obviously and it one of the things that we like to recommend is use the right",
    "start": "3218880",
    "end": "3225420"
  },
  {
    "text": "tool for the workload or the job that you're doing right while taking into consideration the the subtle differences",
    "start": "3225420",
    "end": "3231690"
  },
  {
    "text": "between the various services so for example one one thing is that s3 is",
    "start": "3231690",
    "end": "3236790"
  },
  {
    "text": "eventually consistent whereas EFS offers strong consistency so for some customers that doesn't matter for other customers",
    "start": "3236790",
    "end": "3242400"
  },
  {
    "text": "and other workloads like I have to have one or the other so again just it all depends on it's an",
    "start": "3242400",
    "end": "3247920"
  },
  {
    "text": "it depends Court of question",
    "start": "3247920",
    "end": "3251180"
  },
  {
    "text": "we don't have a standard list that says hey pick a versus pick B but we can talk",
    "start": "3255860",
    "end": "3262370"
  },
  {
    "text": "offline I'd love learn a little bit more about your particularly use case and then maybe I can help you with with that",
    "start": "3262370",
    "end": "3267980"
  },
  {
    "text": "journey cool yes sir",
    "start": "3267980",
    "end": "3272050"
  },
  {
    "text": "we use both so yeah so but EFS so in",
    "start": "3283790",
    "end": "3289040"
  },
  {
    "text": "case of disaster recovery and all those cases we use here for success only for those so that's the reason why we have",
    "start": "3289040",
    "end": "3301369"
  },
  {
    "text": "the throughput board that we have a higher throughput mode provision so that was announced last August so if you",
    "start": "3301369",
    "end": "3306830"
  },
  {
    "text": "actually go with the deepok default mode so that's going to be a very high even more high latency and it's it's going to",
    "start": "3306830",
    "end": "3313910"
  },
  {
    "text": "be snow work for us so that's why we pre provisioned okay well thank you very",
    "start": "3313910",
    "end": "3324650"
  },
  {
    "text": "much folks I know you guys have a number of different sessions too that you could choose from so we're very honored that you guys spend your time with us as",
    "start": "3324650",
    "end": "3330500"
  },
  {
    "text": "always thank you again and please fill out the survey and hope you guys enjoy the rest of your conference thank you",
    "start": "3330500",
    "end": "3337010"
  },
  {
    "text": "very much folks",
    "start": "3337010",
    "end": "3339369"
  }
]