[
  {
    "text": "In this video, you’ll see you’ll see Part 2 of how \nto create a container product on AWS Marketplace.",
    "start": "0",
    "end": "4980"
  },
  {
    "text": "By listing your container product on AWS \nMarketplace, you can grow your customer base,  ",
    "start": "5502",
    "end": "9719"
  },
  {
    "text": "protect your product’s Intellectual Property, \nand improve efficiency and reliability.",
    "start": "9720",
    "end": "13913"
  },
  {
    "text": "This video is part 2 of a three-part series.",
    "start": "14633",
    "end": "17176"
  },
  {
    "text": "In Part 1, we saw how to create a container  ",
    "start": "18180",
    "end": "20358"
  },
  {
    "text": "product for AWS Marketplace and \npublish it in a limited state.",
    "start": "20358",
    "end": "23460"
  },
  {
    "text": "In this segment, we’ll see how to complete \na Marketplace API integration needed for a ",
    "start": "24143",
    "end": "28199"
  },
  {
    "text": "pricing model and build a container image \nfor uploading it to AWS Marketplace.",
    "start": "28199",
    "end": "32367"
  },
  {
    "text": "Specifically, we’re going to deepdive into \nthe hourly pricing model and go through ",
    "start": "33244",
    "end": "37065"
  },
  {
    "text": "the process of setting up integration with \nthe RegisterUsage API using example code.",
    "start": "37065",
    "end": "41573"
  },
  {
    "text": "For this demonstration, we’ll be \nusing an NGINX Docker container",
    "start": "43722",
    "end": "46645"
  },
  {
    "text": "as our product to be listed.",
    "start": "46645",
    "end": "47940"
  },
  {
    "text": "We want to charge the customer for the \namount of time they use the container.",
    "start": "48840",
    "end": "51900"
  },
  {
    "text": "To do this, we need to integrate the \ncontainer product with the RegisterUsage API.",
    "start": "52269",
    "end": "56400"
  },
  {
    "text": "First, let’s go to the AWS Marketplace ",
    "start": "57360",
    "end": "59460"
  },
  {
    "text": "Management Portal and find the product \ninformation in the limited listing.",
    "start": "59460",
    "end": "62760"
  },
  {
    "text": "We can find the product ID \nand product code here.",
    "start": "64412",
    "end": "67020"
  },
  {
    "text": "For demonstration purposes, we’ve \nalready created a Python script  ",
    "start": "69480",
    "end": "72540"
  },
  {
    "text": "for calling the RegisterUsage API \nthat includes the product code.",
    "start": "72540",
    "end": "75720"
  },
  {
    "text": "We’ll incorporate that Python \nscript into the Docker file.",
    "start": "76722",
    "end": "79440"
  },
  {
    "text": "Next, let’s build the container image.",
    "start": "82342",
    "end": "84142"
  },
  {
    "text": "The RegisterUsage operation can only \nbe called from an Amazon Elastic",
    "start": "86153",
    "end": "89647"
  },
  {
    "text": "Container Service (ECS) task or EKS pod.",
    "start": "89647",
    "end": "92944"
  },
  {
    "text": "Trying to call it locally will produce an error.",
    "start": "93415",
    "end": "95580"
  },
  {
    "text": "For our purposes, we have already created \nan EKS cluster to call the operation from.",
    "start": "96420",
    "end": "100380"
  },
  {
    "text": "We also already have \neksctl and kubectl installed.",
    "start": "100892",
    "end": "104460"
  },
  {
    "text": "If we run the “kubectl get all” command,",
    "start": "108000",
    "end": "110446"
  },
  {
    "text": "we can see that a basic \ncluster is already defined.",
    "start": "110446",
    "end": "112680"
  },
  {
    "text": "Let’s go ahead and build \nour container image.",
    "start": "113520",
    "end": "115500"
  },
  {
    "text": "The container is built.",
    "start": "116453",
    "end": "117608"
  },
  {
    "text": "The next step is tagging it.",
    "start": "117884",
    "end": "119354"
  },
  {
    "text": "We want the tag to include the name of the \nrepository where we’ll be pushing the container.",
    "start": "119815",
    "end": "123447"
  },
  {
    "text": "Again, we can get that from the limited listing \nin the AWS Marketplace Management Portal.",
    "start": "124000",
    "end": "128280"
  },
  {
    "text": "We’ve already created a repository,  ",
    "start": "130654",
    "end": "132454"
  },
  {
    "text": "but let’s briefly go through the \nprocess of creating a new one.",
    "start": "132454",
    "end": "135000"
  },
  {
    "text": "We can add up to 50 repositories \nper product listing using this option.",
    "start": "135840",
    "end": "139379"
  },
  {
    "text": "We can fill in the name of the \nrepository and click submit,  ",
    "start": "142140",
    "end": "145020"
  },
  {
    "text": "and a request will be added to the queue.",
    "start": "145020",
    "end": "146863"
  },
  {
    "text": "Let’s go back now and review the request \nfor the repository we’ve already created.",
    "start": "147334",
    "end": "150832"
  },
  {
    "text": "Notice the status of request.",
    "start": "151774",
    "end": "153394"
  },
  {
    "text": "Now we’ll tag the container image \nwith the URL of the repository.",
    "start": "155933",
    "end": "159112"
  },
  {
    "text": "Next, let’s see how to push \nthe image to the repository.",
    "start": "160733",
    "end": "163613"
  },
  {
    "text": "First, we’ll log in to the Docker repository.",
    "start": "164533",
    "end": "166753"
  },
  {
    "text": "We can obtain the push commands",
    "start": "169263",
    "end": "170502"
  },
  {
    "text": "for the repository in the \nMarketplace Management Portal.",
    "start": "170502",
    "end": "173283"
  },
  {
    "text": "Let’s push the container \nimage to the repository.",
    "start": "181124",
    "end": "183523"
  },
  {
    "text": "Next, we need to make sure our \nEKS cluster service account can  ",
    "start": "186000",
    "end": "189164"
  },
  {
    "text": "actually be used for the\n RegisterUsage API calls.",
    "start": "189164",
    "end": "192180"
  },
  {
    "text": "Let’s create an AWS Identity \nand Access Management (IAM)  ",
    "start": "192712",
    "end": "196020"
  },
  {
    "text": "OpenID Connect (OIDC) provider \nassociation for the cluster.",
    "start": "196020",
    "end": "200160"
  },
  {
    "text": "We already have an IAM policy \nwith the required permissions,",
    "start": "203014",
    "end": "205936"
  },
  {
    "text": "hence this error message.",
    "start": "205936",
    "end": "207154"
  },
  {
    "text": "Let’s create a new service account \nfor the cluster and add the policy.",
    "start": "208000",
    "end": "211140"
  },
  {
    "text": "This command will create a \nCloudFormation stack behind the scenes.",
    "start": "212000",
    "end": "215002"
  },
  {
    "text": "Let’s take a quick look at the stack.",
    "start": "215330",
    "end": "217026"
  },
  {
    "text": "Here it is.",
    "start": "220213",
    "end": "220924"
  },
  {
    "text": "Let’s run this container.",
    "start": "221160",
    "end": "222324"
  },
  {
    "text": "This is the kubectl command for starting \nthat container, with the name of the pod,  ",
    "start": "226500",
    "end": "230100"
  },
  {
    "text": "the name of the image, the repository \nname, and the tag name: test_one.",
    "start": "230100",
    "end": "233880"
  },
  {
    "text": "Next, we’ll test the \ncontainer we just uploaded  ",
    "start": "235153",
    "end": "237397"
  },
  {
    "text": "to the Marketplace Management \nPortal with the tag test_one.",
    "start": "237397",
    "end": "240288"
  },
  {
    "text": "Now that we’ve kickstarted the pod, \nlet’s check if there’s a log file.",
    "start": "241463",
    "end": "244560"
  },
  {
    "text": "Notice that this code specifies the creation \nof a log file when the Python script is run.",
    "start": "247703",
    "end": "252023"
  },
  {
    "text": "Let’s view the log file.",
    "start": "254183",
    "end": "255563"
  },
  {
    "text": "We can see that when this container \nstarted it called the Python script.",
    "start": "258265",
    "end": "261565"
  },
  {
    "text": "The signature will contain details \nlike the product code and this key.",
    "start": "266363",
    "end": "269723"
  },
  {
    "text": "Along with those details, we got back \na 200 HTTP status code, as expected.",
    "start": "272000",
    "end": "277100"
  },
  {
    "text": "Next, let’s stop the container.",
    "start": "278000",
    "end": "279680"
  },
  {
    "text": "We now know that the RegisterUsage \ncall for the hourly usage of our",
    "start": "280722",
    "end": "283748"
  },
  {
    "text": "container product works.",
    "start": "283748",
    "end": "285222"
  },
  {
    "text": "Let’s delete the pod.",
    "start": "286305",
    "end": "287324"
  },
  {
    "text": "Next, let’s try building an image \nwith the wrong product code.",
    "start": "290000",
    "end": "292820"
  },
  {
    "text": "We’ll go ahead and run the container again.",
    "start": "307475",
    "end": "309335"
  },
  {
    "text": "Let’s check the log file.",
    "start": "311543",
    "end": "313103"
  },
  {
    "text": "This time, the log file says an error \noccurred due to an invalid product code.",
    "start": "316403",
    "end": "320303"
  },
  {
    "text": "Let’s stop and delete the pod.",
    "start": "321486",
    "end": "322986"
  },
  {
    "text": "In the next part of this video series,  ",
    "start": "327055",
    "end": "328735"
  },
  {
    "text": "we’ll continue the process of creating \nour AWS Marketplace container product.",
    "start": "328746",
    "end": "332586"
  },
  {
    "text": "You’ve just seen Part 2 of how to create \na container product in AWS Marketplace.",
    "start": "334045",
    "end": "338065"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "339215",
    "end": "342395"
  },
  {
    "text": "Thanks for watching. Now it’s your turn to try.",
    "start": "342631",
    "end": "344797"
  }
]