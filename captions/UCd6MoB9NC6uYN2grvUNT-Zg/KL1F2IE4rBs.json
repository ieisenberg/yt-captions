[
  {
    "start": "0",
    "end": "51000"
  },
  {
    "text": "hello I'm kosf A Cloud support engineer",
    "start": "8080",
    "end": "11639"
  },
  {
    "text": "here at the AWS office in Sydney today",
    "start": "11639",
    "end": "14759"
  },
  {
    "text": "I'm going to show you how to resolve",
    "start": "14759",
    "end": "17400"
  },
  {
    "text": "HTTP 502 errors from API Gateway rest",
    "start": "17400",
    "end": "21400"
  },
  {
    "text": "apis with AWS Lambda proxy integration",
    "start": "21400",
    "end": "25439"
  },
  {
    "text": "let's get",
    "start": "25439",
    "end": "26920"
  },
  {
    "text": "started if your Lambda functions",
    "start": "26920",
    "end": "29279"
  },
  {
    "text": "permissions are incorrect or the",
    "start": "29279",
    "end": "32119"
  },
  {
    "text": "response of the API request isn't",
    "start": "32119",
    "end": "34520"
  },
  {
    "text": "formatted correctly then API Gateway",
    "start": "34520",
    "end": "37760"
  },
  {
    "text": "returns an HTTP 502 status code HTTP 502",
    "start": "37760",
    "end": "43480"
  },
  {
    "text": "error messages appear in Amazon",
    "start": "43480",
    "end": "46039"
  },
  {
    "text": "cloudwatch logs as you see here for API",
    "start": "46039",
    "end": "50680"
  },
  {
    "text": "Gateway to handle a Lambda functions",
    "start": "50680",
    "end": "52840"
  },
  {
    "start": "51000",
    "end": "75000"
  },
  {
    "text": "response the function must return output",
    "start": "52840",
    "end": "56359"
  },
  {
    "text": "in a specific Json format as you see",
    "start": "56359",
    "end": "59640"
  },
  {
    "text": "here",
    "start": "59640",
    "end": "61640"
  },
  {
    "text": "to troubleshoot HTTP 502 error we can",
    "start": "61640",
    "end": "65280"
  },
  {
    "text": "use metrix and Amazon cloudwatch logs",
    "start": "65280",
    "end": "68920"
  },
  {
    "text": "let's log to the AWS Management console",
    "start": "68920",
    "end": "72320"
  },
  {
    "text": "choose API Gateway and then choose your",
    "start": "72320",
    "end": "77439"
  },
  {
    "start": "75000",
    "end": "144000"
  },
  {
    "text": "API to view metrics and logs choose",
    "start": "77439",
    "end": "81280"
  },
  {
    "text": "dashboard or stage choose the stage that",
    "start": "81280",
    "end": "84680"
  },
  {
    "text": "you want choose date range to specify a",
    "start": "84680",
    "end": "88960"
  },
  {
    "text": "range of dates",
    "start": "88960",
    "end": "90479"
  },
  {
    "text": "I'll choose last one day choose apply",
    "start": "90479",
    "end": "94880"
  },
  {
    "text": "choose refresh if needed here you can",
    "start": "94880",
    "end": "98360"
  },
  {
    "text": "view individual metrics if you have an",
    "start": "98360",
    "end": "101320"
  },
  {
    "text": "HTTP 502 error then you'll see an",
    "start": "101320",
    "end": "104600"
  },
  {
    "text": "increase in 5xx",
    "start": "104600",
    "end": "106960"
  },
  {
    "text": "Matrix by default cloudwatch logging on",
    "start": "106960",
    "end": "110280"
  },
  {
    "text": "new stages is not active let's turn it",
    "start": "110280",
    "end": "113640"
  },
  {
    "text": "on for our stage and API we'll use this",
    "start": "113640",
    "end": "117759"
  },
  {
    "text": "API ID later when searching for",
    "start": "117759",
    "end": "120640"
  },
  {
    "text": "cloudwatch logs the API ID is included",
    "start": "120640",
    "end": "124840"
  },
  {
    "text": "in the cloudwatch log group",
    "start": "124840",
    "end": "127840"
  },
  {
    "text": "name before checking logs let's test the",
    "start": "127840",
    "end": "131640"
  },
  {
    "text": "rest API method in the API Gateway",
    "start": "131640",
    "end": "134920"
  },
  {
    "text": "console choose",
    "start": "134920",
    "end": "137040"
  },
  {
    "text": "resources choose your",
    "start": "137040",
    "end": "139560"
  },
  {
    "text": "method for this video I'll choose",
    "start": "139560",
    "end": "143200"
  },
  {
    "text": "get and then choose",
    "start": "143200",
    "end": "145840"
  },
  {
    "start": "144000",
    "end": "160000"
  },
  {
    "text": "test choose",
    "start": "145840",
    "end": "148040"
  },
  {
    "text": "test the results show you the complete",
    "start": "148040",
    "end": "151319"
  },
  {
    "text": "request and response to view API Gateway",
    "start": "151319",
    "end": "154959"
  },
  {
    "text": "logs choose cloudwatch in the AWS",
    "start": "154959",
    "end": "157720"
  },
  {
    "text": "Management console then choose logs",
    "start": "157720",
    "end": "161519"
  },
  {
    "start": "160000",
    "end": "197000"
  },
  {
    "text": "choose log groups and then paste the",
    "start": "161519",
    "end": "165080"
  },
  {
    "text": "name of the API that you copied earlier",
    "start": "165080",
    "end": "168080"
  },
  {
    "text": "into the search bar choose this API log",
    "start": "168080",
    "end": "172280"
  },
  {
    "text": "group I'll choose the latest log",
    "start": "172280",
    "end": "177319"
  },
  {
    "text": "stream in the logs review the format of",
    "start": "178000",
    "end": "181239"
  },
  {
    "text": "your Lambda functions response to your",
    "start": "181239",
    "end": "184040"
  },
  {
    "text": "API if the response isn't in the",
    "start": "184040",
    "end": "186840"
  },
  {
    "text": "required Json format then reformat",
    "start": "186840",
    "end": "191120"
  },
  {
    "text": "it let's examine the Lambda code in the",
    "start": "191120",
    "end": "195120"
  },
  {
    "text": "AWS Management console choose Lambda",
    "start": "195120",
    "end": "199120"
  },
  {
    "start": "197000",
    "end": "256000"
  },
  {
    "text": "choose your function in my case it's my",
    "start": "199120",
    "end": "201760"
  },
  {
    "text": "Lambda function choose code review the",
    "start": "201760",
    "end": "205360"
  },
  {
    "text": "code and look for is B 64 encoded note",
    "start": "205360",
    "end": "210159"
  },
  {
    "text": "that this value is by default set to",
    "start": "210159",
    "end": "212720"
  },
  {
    "text": "false but you can set it to true if you",
    "start": "212720",
    "end": "215560"
  },
  {
    "text": "are using binary data the body must be",
    "start": "215560",
    "end": "218959"
  },
  {
    "text": "converted to a string if you are",
    "start": "218959",
    "end": "221040"
  },
  {
    "text": "returning data as",
    "start": "221040",
    "end": "223280"
  },
  {
    "text": "Json I'm using json. Dums to handle this",
    "start": "223280",
    "end": "227599"
  },
  {
    "text": "in Python note that other run times",
    "start": "227599",
    "end": "231040"
  },
  {
    "text": "require different solutions but the",
    "start": "231040",
    "end": "233439"
  },
  {
    "text": "concept is the same we must also make",
    "start": "233439",
    "end": "236439"
  },
  {
    "text": "sure that the Lambda functions resource",
    "start": "236439",
    "end": "239280"
  },
  {
    "text": "policy allows access to invoke the",
    "start": "239280",
    "end": "242519"
  },
  {
    "text": "function with API Gateway to verify the",
    "start": "242519",
    "end": "246439"
  },
  {
    "text": "access choose configurations choose",
    "start": "246439",
    "end": "250680"
  },
  {
    "text": "permissions and then choose",
    "start": "250680",
    "end": "253000"
  },
  {
    "text": "resource-based policy",
    "start": "253000",
    "end": "255919"
  },
  {
    "text": "statement make sure that the API Gateway",
    "start": "255919",
    "end": "259199"
  },
  {
    "start": "256000",
    "end": "324000"
  },
  {
    "text": "principle is allowed to invoke Lambda",
    "start": "259199",
    "end": "262240"
  },
  {
    "text": "function and the conditions are correct",
    "start": "262240",
    "end": "265120"
  },
  {
    "text": "the Lambda Handler name must be the same",
    "start": "265120",
    "end": "268560"
  },
  {
    "text": "as what's configured in the runtime",
    "start": "268560",
    "end": "270919"
  },
  {
    "text": "configuration to verify this choose",
    "start": "270919",
    "end": "275960"
  },
  {
    "text": "close choose code verify that the Lambda",
    "start": "276160",
    "end": "280720"
  },
  {
    "text": "function Handler name is the same as",
    "start": "280720",
    "end": "284120"
  },
  {
    "text": "what's configured in the runtime",
    "start": "284120",
    "end": "288199"
  },
  {
    "text": "settings if the Lambda execution fails",
    "start": "288400",
    "end": "291639"
  },
  {
    "text": "during runtime then check the Lambda",
    "start": "291639",
    "end": "294320"
  },
  {
    "text": "function logs and update the code to",
    "start": "294320",
    "end": "297560"
  },
  {
    "text": "view Lambda function logs choose",
    "start": "297560",
    "end": "300240"
  },
  {
    "text": "monitor scroll down to the cloudwatch",
    "start": "300240",
    "end": "303199"
  },
  {
    "text": "log",
    "start": "303199",
    "end": "305120"
  },
  {
    "text": "section and choose log stream to view",
    "start": "305120",
    "end": "308440"
  },
  {
    "text": "the logs in",
    "start": "308440",
    "end": "310360"
  },
  {
    "text": "cloudwatch and now you know how to",
    "start": "310360",
    "end": "313000"
  },
  {
    "text": "resolve HTTP 502 errors from API Gateway",
    "start": "313000",
    "end": "318039"
  },
  {
    "text": "rest apis with AWS Lambda proxy",
    "start": "318039",
    "end": "322520"
  },
  {
    "text": "integration thanks for watching and",
    "start": "322520",
    "end": "324800"
  },
  {
    "start": "324000",
    "end": "339000"
  },
  {
    "text": "happy cloud computing from all of us",
    "start": "324800",
    "end": "327280"
  },
  {
    "text": "here at AWS",
    "start": "327280",
    "end": "330800"
  }
]