[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "it's great to be here and I'm joined here with bill one of the team leads at Geoscience Australia we'll be talking",
    "start": "30",
    "end": "6420"
  },
  {
    "text": "about operating mission-critical applications to help citizens in the",
    "start": "6420",
    "end": "11759"
  },
  {
    "text": "face of national disasters so this is a voice of the customer session so you're not going to hear that much from me but",
    "start": "11759",
    "end": "19740"
  },
  {
    "text": "I'll just give a quick intro around some of the principles of architecture on a de Bresse and and talk a little bit",
    "start": "19740",
    "end": "25949"
  },
  {
    "text": "about our well architected program so one of the if you've been to a nativist",
    "start": "25949",
    "end": "32279"
  },
  {
    "start": "30000",
    "end": "30000"
  },
  {
    "text": "talk that's discussed architectural principles you've probably seen these sort of seven points put on a slide and",
    "start": "32279",
    "end": "39480"
  },
  {
    "text": "these some of the key points that we've highlighted to a lot of our customers and that we've found useful for them to",
    "start": "39480",
    "end": "45300"
  },
  {
    "text": "think about when building high scale distributed systems in in the cloud some",
    "start": "45300",
    "end": "51149"
  },
  {
    "text": "one was the first one here is says design design for failure and it's important and nothing will fail so it's",
    "start": "51149",
    "end": "58500"
  },
  {
    "text": "not you shouldn't be designing your system to fail but what you should be doing is thinking about all those failure scenarios that can happen in a",
    "start": "58500",
    "end": "66240"
  },
  {
    "text": "system and actually get rid of those you know get rid of single points of failure think about what happens in different",
    "start": "66240",
    "end": "72210"
  },
  {
    "text": "types of scenarios and that can be a iterative process so you might and I get it all correct up front and make safety",
    "start": "72210",
    "end": "78750"
  },
  {
    "text": "time secondly a building security in every layer so if you were used to a",
    "start": "78750",
    "end": "84150"
  },
  {
    "text": "traditional world you might have relied on so your boundary firewalls your DMZ and then not worried about security",
    "start": "84150",
    "end": "90950"
  },
  {
    "text": "inside the cloud we offer a much more fine and grained and secure posture",
    "start": "90950",
    "end": "97110"
  },
  {
    "text": "there so even right down to individual servers controlling what the traffic and go in and out of place and the third one",
    "start": "97110",
    "end": "105360"
  },
  {
    "text": "here is around leveraging different storage options so in the in the traditional world you might have been",
    "start": "105360",
    "end": "110460"
  },
  {
    "text": "used to well we bought a sand and we spent million dollars on it therefore that's the solution to all my storage",
    "start": "110460",
    "end": "115979"
  },
  {
    "text": "problems in the cloud is there's no upfront costs required you can you're",
    "start": "115979",
    "end": "121320"
  },
  {
    "text": "free to choose different options even as a project-by-project basis so that means you can choose the right option for the",
    "start": "121320",
    "end": "128039"
  },
  {
    "text": "the project at the time it's a lot more flexibility and then implementing elasticity's",
    "start": "128039",
    "end": "133770"
  },
  {
    "text": "really important for a use case like we're going to talk about today that needs to scale up rapidly in the face of",
    "start": "133770",
    "end": "139680"
  },
  {
    "text": "some sort of event but even for other applications in government say if you launch a policy initiative and so on we",
    "start": "139680",
    "end": "145830"
  },
  {
    "text": "get a lot of customer interest or in a say a federal election scenario where we've worked with customers to help in",
    "start": "145830",
    "end": "152520"
  },
  {
    "text": "those type of situations but as well as scaling up to meet load you also want to be able to scale down to save costs and",
    "start": "152520",
    "end": "159240"
  },
  {
    "text": "again that's something to think about in your architecture and then looking at parallelism and thinking can you take",
    "start": "159240",
    "end": "165720"
  },
  {
    "text": "advantage of parallelism to help in your architecture often people are used to just single servers and serial",
    "start": "165720",
    "end": "171930"
  },
  {
    "text": "processing in the cloud you might have had a workload that say took you eight hours to run on one server you could",
    "start": "171930",
    "end": "179160"
  },
  {
    "text": "still do that in the cloud but you could you're free to say I'll run eight servers for one hour and the cost is the",
    "start": "179160",
    "end": "184740"
  },
  {
    "text": "same in both cases but the time the results is you know one hour versus eight and then think about loose",
    "start": "184740",
    "end": "192300"
  },
  {
    "text": "coupling so this is like thinking about asynchronous processing decoupling part C system because that if there is a",
    "start": "192300",
    "end": "199320"
  },
  {
    "text": "failure in one component the rest can keep working and you can also give customers a better experience you know",
    "start": "199320",
    "end": "204930"
  },
  {
    "text": "it's much better experience to say send me some data often and then I'll let you",
    "start": "204930",
    "end": "210330"
  },
  {
    "text": "know why an email when it's ready rather than saying send me some data and wait till I've got the result for you on a",
    "start": "210330",
    "end": "216959"
  },
  {
    "text": "webpage and then finally think about don't fear constraints so often in a",
    "start": "216959",
    "end": "222570"
  },
  {
    "text": "traditional world you might be used to only running things in a server and only having these particular options if you",
    "start": "222570",
    "end": "228570"
  },
  {
    "text": "come to an environment like a device you've got a wealth of say server sizes and different options you can put in place you can leverage parallelism to",
    "start": "228570",
    "end": "235350"
  },
  {
    "text": "get around limits on single server sizes but you can also use completely different paradigms you move to",
    "start": "235350",
    "end": "240870"
  },
  {
    "text": "containers very easily moved to surplus lambda processing and so on and you'll see examples of some of these in this",
    "start": "240870",
    "end": "247920"
  },
  {
    "text": "talk today one of the programs we offer to help customers when they are",
    "start": "247920",
    "end": "253770"
  },
  {
    "text": "architecting solutions with us is what's called the well Arctic 2 program so if you go to our website you'll better find a wealth of white papers and material on",
    "start": "253770",
    "end": "260970"
  },
  {
    "text": "this and this goes through these five pillars so we we work with customers",
    "start": "260970",
    "end": "266010"
  },
  {
    "text": "their operational excellence making sure they've got best practice security in place diving down on things that are",
    "start": "266010",
    "end": "273570"
  },
  {
    "text": "they building a reliable system that responds well in the case of failure scenarios are he making the best",
    "start": "273570",
    "end": "280070"
  },
  {
    "text": "performance sufficiency trade-offs and using the right service for the job and ever you cost optimize so we actually",
    "start": "280070",
    "end": "286890"
  },
  {
    "text": "spend time helping customers save money on on the platform say with different",
    "start": "286890",
    "end": "291930"
  },
  {
    "text": "pricing models or different architectural choices so that's just a",
    "start": "291930",
    "end": "297270"
  },
  {
    "text": "little bit of introduction of some of the programs we do around the architecture space but I want to leave all the time now for Bill and to talk",
    "start": "297270",
    "end": "305880"
  },
  {
    "text": "about the earthquakes at GA website",
    "start": "305880",
    "end": "310850"
  },
  {
    "text": "hi everybody my name is Jill for Marcus and today I'm going to talk to about a journey to the cloud and getting",
    "start": "315070",
    "end": "321440"
  },
  {
    "text": "earthquakes GA on AWS so my team's called the flying hellfish and we're a team of seven software developers I'm",
    "start": "321440",
    "end": "327920"
  },
  {
    "text": "the tech lead iteration manager and of course my biggest passion which is software engineering so Geoscience",
    "start": "327920",
    "end": "334580"
  },
  {
    "text": "Australia is responsible for monitoring alerting and reporting on significant earthquakes to alert the government and",
    "start": "334580",
    "end": "340310"
  },
  {
    "text": "the public now Geoscience Australia has for mission-critical applications earthquakes that gee a tsunami warning",
    "start": "340310",
    "end": "347570"
  },
  {
    "text": "nuclear monitoring and Sentinel now Sentinel is G H bushfire monitoring application so Sentinel was our first",
    "start": "347570",
    "end": "354230"
  },
  {
    "text": "mission critical application that went to the cloud and with great success so the last two bushfire seasons we had",
    "start": "354230",
    "end": "360800"
  },
  {
    "text": "100% uptime and we saved the cost of about eighty five thousand per annum so",
    "start": "360800",
    "end": "366160"
  },
  {
    "text": "insane least we had great confidence in AWS as the products work really well the documentation is excellent and their",
    "start": "366160",
    "end": "373010"
  },
  {
    "text": "customer service is second to none and to mention sentinel the last",
    "start": "373010",
    "end": "378310"
  },
  {
    "text": "bushfire sees us on-premise we had five major outages and the earthquakes website when he was on premise we used",
    "start": "378310",
    "end": "384770"
  },
  {
    "text": "to crash every time we had a major event so not really ideal so cheer sites",
    "start": "384770",
    "end": "391460"
  },
  {
    "start": "390000",
    "end": "390000"
  },
  {
    "text": "australia runs the earthquakes alert center and this is run 24 by 7 and always has at least one seismologist on",
    "start": "391460",
    "end": "396980"
  },
  {
    "text": "duty so when an earthquake occurs it's picked up by ground stations around the",
    "start": "396980",
    "end": "402080"
  },
  {
    "text": "world there's over 200 of them they've been DUP to a satellite they come back the anti j on-premise and then they're",
    "start": "402080",
    "end": "407930"
  },
  {
    "text": "pushed up to the earthquakes alert center so this is where the seismologist comes into play they'll review the",
    "start": "407930",
    "end": "414140"
  },
  {
    "text": "seismic data in the in the xml and if they're happy with the data they'll publish it and then you end up on the",
    "start": "414140",
    "end": "419660"
  },
  {
    "text": "web application that you see down the bottom so this would be the component that we'll be focusing on today now keep",
    "start": "419660",
    "end": "424940"
  },
  {
    "text": "in mind that the earthquakes alerts a nativist system and earthquakes are GA we're both put up in a cloud in late May",
    "start": "424940",
    "end": "431300"
  },
  {
    "text": "and I went up together in parallel so now I'll delve into the architecture of",
    "start": "431300",
    "end": "436940"
  },
  {
    "start": "435000",
    "end": "435000"
  },
  {
    "text": "the system so don't feel too daunted by this diagram as I'll break down the components and I'll explain why we use",
    "start": "436940",
    "end": "442670"
  },
  {
    "text": "them now another thing to keep in mind is when we first started out to design",
    "start": "442670",
    "end": "448350"
  },
  {
    "text": "application we didn't come up with an architecture diagram we actually drew the diagram right at the end of the",
    "start": "448350",
    "end": "453390"
  },
  {
    "text": "process so about one week before as it was constantly evolving and I'll explain a bit about this a bit later so first",
    "start": "453390",
    "end": "461250"
  },
  {
    "start": "461000",
    "end": "461000"
  },
  {
    "text": "I'll start off with the user interface so user comes along they hit earthquakes joke of data you and then they hit route",
    "start": "461250",
    "end": "466500"
  },
  {
    "text": "53 now route 53 handles your traffic routing for you and then you'll react the cloud front so basically what cloud",
    "start": "466500",
    "end": "472950"
  },
  {
    "text": "fronts for it distributes your content to edge locations around the world so basically when a user hits your site",
    "start": "472950",
    "end": "478830"
  },
  {
    "text": "there's lower latency so it's faster performance and then you have s3 which is Amazon simple storage so we try to",
    "start": "478830",
    "end": "485820"
  },
  {
    "text": "use as many open source products as we can so the user interface is built with angular and the mapping component is",
    "start": "485820",
    "end": "492510"
  },
  {
    "text": "using open layers now when the application is built it's stored on s3 as a static content so and then it's ice",
    "start": "492510",
    "end": "501120"
  },
  {
    "text": "that has a website so there's no service involved in this process now why have we done it this way well you basically get",
    "start": "501120",
    "end": "506370"
  },
  {
    "text": "the same uptime as s3 another advantage is the cost of this is about $50 a month so it's pretty cheap to run another",
    "start": "506370",
    "end": "513719"
  },
  {
    "text": "advantage is there's a problem with the web services in the backend your website will still come up you still get a map",
    "start": "513719",
    "end": "518940"
  },
  {
    "text": "and let's say you hit the recent earthquakes tool the panel will open up and you can display a user-friendly error message so you go on are the days",
    "start": "518940",
    "end": "525540"
  },
  {
    "text": "of ugly stack traces so next I'll talk about how do we actually get the data",
    "start": "525540",
    "end": "531540"
  },
  {
    "start": "529000",
    "end": "529000"
  },
  {
    "text": "onto the map so how do we get to our fake points on for the map so for this we use geoserver and basically geoserver",
    "start": "531540",
    "end": "537930"
  },
  {
    "text": "lets you create a GC compliant web services off the spatial data in your IDs or your database so in the diagram",
    "start": "537930",
    "end": "545880"
  },
  {
    "text": "here on the left hand side at the top you can see was a slide I showed you before in the user interface so a cloud",
    "start": "545880",
    "end": "551040"
  },
  {
    "text": "front here is distributing static content now we're going to move to dynamic content which is on the right",
    "start": "551040",
    "end": "557070"
  },
  {
    "text": "side so you see cloud front talks to our application load balancer which is inside our virtual private cloud now our",
    "start": "557070",
    "end": "563160"
  },
  {
    "text": "application load balancer its responsibility is to distribute traffic to the ec2 instances now you notice here",
    "start": "563160",
    "end": "570600"
  },
  {
    "text": "that each ec2 instance there's at least one in each availability zone so there's a minimum of three running all the time",
    "start": "570600",
    "end": "576630"
  },
  {
    "text": "now this is done for redundancy so each ec2 instance has",
    "start": "576630",
    "end": "581730"
  },
  {
    "text": "single instance of geoserver running on it now if you look down a bit lower you see the arias which is our database once",
    "start": "581730",
    "end": "587970"
  },
  {
    "text": "again we run it across to availability zone so there's a master and a slave again this is done for redundancy and",
    "start": "587970",
    "end": "594810"
  },
  {
    "text": "just under that we have the auto scaling groups so the ASG basically allows you to set policies on when you want to",
    "start": "594810",
    "end": "601410"
  },
  {
    "text": "scale up so for us we look at CPU when it's at 80 percent and when it's there",
    "start": "601410",
    "end": "606449"
  },
  {
    "text": "for 2 minutes will scale to service now we scale it kind of aggressively because you've got to remember that it takes 1",
    "start": "606449",
    "end": "612000"
  },
  {
    "text": "or 2 minutes for a server instance to come up and on the right side also the",
    "start": "612000",
    "end": "617220"
  },
  {
    "text": "ASG is also responsible for health checks of the ec2 instances and if it finds one of",
    "start": "617220",
    "end": "623040"
  },
  {
    "text": "the ec2 is unhealthy you'll terminate it and start a new one now we can scale from about 3 to 10 services for our",
    "start": "623040",
    "end": "629610"
  },
  {
    "text": "scaling policies and you also put your cool-down policies as well so when you want to scale the arm now on the right",
    "start": "629610",
    "end": "635160"
  },
  {
    "text": "side you have the hey my now the ami is the Amazon machine image this is basically a master image for when the",
    "start": "635160",
    "end": "640889"
  },
  {
    "text": "ec2 starts up you'll grab this image and it will start with that so you know a my we have baked in geoserver and we have",
    "start": "640889",
    "end": "647760"
  },
  {
    "text": "other things like cloud watch alarms so the more things you get in a and why is the less that's got to do when it goes to startup so one of the key features of",
    "start": "647760",
    "end": "657029"
  },
  {
    "text": "the earthquakes at GA website is the ability to submit felt reports so basically when a user feels an",
    "start": "657029",
    "end": "662490"
  },
  {
    "text": "earthquake they can jump on the site they can feel in a quick multiple-choice form and then submit it",
    "start": "662490",
    "end": "667709"
  },
  {
    "text": "now the seismologists we use this to analyze the fill reports against the real earthquake so the blue dots on the",
    "start": "667709",
    "end": "673680"
  },
  {
    "text": "map they represent clusters where users filter an earthquake so if you jump on the site later and on the hour later if",
    "start": "673680",
    "end": "679860"
  },
  {
    "text": "you jump on the site later and zoom means you see the clusters break down and you'll see exactly where the earthquakes occurred you know this is",
    "start": "679860",
    "end": "687029"
  },
  {
    "text": "where service comes into it so for this component we use alias lambda so basically a Tobias lambda lets you run",
    "start": "687029",
    "end": "694260"
  },
  {
    "text": "code without having to provision or manage your own service so you're not paying for idle time so if you look here",
    "start": "694260",
    "end": "700680"
  },
  {
    "text": "the user comes in they feel our fill port they submit it and it will go through and you'll hit API DODOcase are",
    "start": "700680",
    "end": "706459"
  },
  {
    "text": "you so that will traffic through to api gateway with a secure key because to",
    "start": "706459",
    "end": "712439"
  },
  {
    "text": "talk to the api you got to have a secure APR 8 way will then passive will then",
    "start": "712439",
    "end": "717509"
  },
  {
    "text": "trigger lambda and lambda will then write your fill report into the database we can which you can see on the right",
    "start": "717509",
    "end": "722759"
  },
  {
    "text": "side which is the RDS now lambda can run multiple languages and for our purposes",
    "start": "722759",
    "end": "728159"
  },
  {
    "text": "we use node and lambda so we are sorry note in Java so we use Java for the more",
    "start": "728159",
    "end": "734489"
  },
  {
    "text": "complex parts we want to run we also use server lists for things like our RSS and",
    "start": "734489",
    "end": "741029"
  },
  {
    "text": "atom feed generators we use it for our email subscription service and we also use it for our cloud watch notifications",
    "start": "741029",
    "end": "748669"
  },
  {
    "text": "to slack which I'll talk about a bit later so this is the last architecture",
    "start": "748669",
    "end": "754829"
  },
  {
    "start": "754000",
    "end": "754000"
  },
  {
    "text": "diagram I'll run through so on the left side you can see the earthquakes alert center AWS account and on the right side",
    "start": "754829",
    "end": "760349"
  },
  {
    "text": "you can see the earthquakes of gads account that my team look after so like",
    "start": "760349",
    "end": "766229"
  },
  {
    "text": "I said before so small just comes in they'll publish an XML file and it's dropped on an s3 bucket you know the s3 bucket will trigger the",
    "start": "766229",
    "end": "773459"
  },
  {
    "text": "simple notification service and publish a message so on the outside we have the subscribe bar so you subscribe to the",
    "start": "773459",
    "end": "779489"
  },
  {
    "text": "topic so our simple notification service is sitting there listening it says yep I've got a message come in",
    "start": "779489",
    "end": "784769"
  },
  {
    "text": "I'm going to put on the queue which is our simple queue service SQS now you'll sit there on the queue until the",
    "start": "784769",
    "end": "790829"
  },
  {
    "text": "earthquakes press this application top right is will pick it up so the",
    "start": "790829",
    "end": "796079"
  },
  {
    "text": "earthquakes process application is a java application that basically passes the XML file and it does some other",
    "start": "796079",
    "end": "803009"
  },
  {
    "text": "things like calculate the epicentral time of the earthquake and then will write the information to the database so",
    "start": "803009",
    "end": "809069"
  },
  {
    "text": "there's one instance of the earthquakes processor application on each ec2 instance and that will sit there",
    "start": "809069",
    "end": "814679"
  },
  {
    "text": "listening and only one of them will pick it up off the queue processor and put it in the database and you also notice at",
    "start": "814679",
    "end": "820559"
  },
  {
    "text": "the top we have code deploy so code deploy we use to to deploy our",
    "start": "820559",
    "end": "825689"
  },
  {
    "text": "earthquakes process application to each ec2 instance and it will do that one at a time making short successful before",
    "start": "825689",
    "end": "831929"
  },
  {
    "text": "moving on so next I'll talked about load testing so we load test at 20 million",
    "start": "831929",
    "end": "838679"
  },
  {
    "start": "835000",
    "end": "835000"
  },
  {
    "text": "users hitting the website in over a one hour period so we use jmeter for our load testing we used five and four large",
    "start": "838679",
    "end": "846869"
  },
  {
    "text": "ec2 we use one master and four slaves now we did this fire for purposes of i/o so",
    "start": "846869",
    "end": "854510"
  },
  {
    "text": "CloudFront was getting hit 1500 times a second and we transferred 965 gigabytes",
    "start": "854510",
    "end": "860459"
  },
  {
    "text": "of data and the table at the bottom you can see the response times so 90% of the requests came back in 69 milliseconds",
    "start": "860459",
    "end": "866490"
  },
  {
    "text": "and 95% of the requests came back in 77 milliseconds so this is pretty phenomenal performance coming from cloud",
    "start": "866490",
    "end": "872490"
  },
  {
    "text": "front and the cost of door tests like this was about $250 and it's pretty much invaluable and you'll see why in the",
    "start": "872490",
    "end": "878820"
  },
  {
    "text": "next slide why it's so important so this is a good news story right but when we first ran this load test we had a",
    "start": "878820",
    "end": "884850"
  },
  {
    "text": "hundred percent CP on the database in about three minutes so at this point things were looking good because this is about two weeks out from production so",
    "start": "884850",
    "end": "891899"
  },
  {
    "text": "what we ended up having to do was we ended up having to do some performance tuning so the dis sites on the IDs I",
    "start": "891899",
    "end": "897870"
  },
  {
    "text": "think went from about 20 gig to 150 gig cause face rest relies on this we also",
    "start": "897870",
    "end": "902940"
  },
  {
    "text": "did some performance tuning of the system parameters inside PostScript so things like auto vacuum and page costs",
    "start": "902940",
    "end": "908399"
  },
  {
    "text": "we looked at tuning the connection pool size for geoserver and even the java virtual machine parameters for when GS",
    "start": "908399",
    "end": "915149"
  },
  {
    "text": "server starts up on ec2 instances so once we've done all that we've got the results you see here so everyone's on",
    "start": "915149",
    "end": "923730"
  },
  {
    "text": "the server list bandwagon right so I'm gonna break the bubble a bit here so we found it's excellent for tasks",
    "start": "923730",
    "end": "928980"
  },
  {
    "text": "guaranteed to run for less than 5 minutes and your performance expectations must be taken into account so we'll pricing XML files we've seen",
    "start": "928980",
    "end": "936570"
  },
  {
    "text": "from about 10 to 50,000 lines long it's all pressing in about 2-3 minutes and things were going well now a week out",
    "start": "936570",
    "end": "942630"
  },
  {
    "text": "from production the business decided to send through an XML file that they hadn't before that's 300,000 lines long",
    "start": "942630",
    "end": "947970"
  },
  {
    "text": "and lambda times out so at this point we're like this is no good so we ended",
    "start": "947970",
    "end": "953370"
  },
  {
    "text": "up doing because we had done our load testing we knew we had the capacity on our ec2 instances so what we did we",
    "start": "953370",
    "end": "959100"
  },
  {
    "text": "installed Tomcat on their package the wall file deployed it on there and it ran in 35 seconds so this kind of gave",
    "start": "959100",
    "end": "965070"
  },
  {
    "text": "us a baseline so for our needs lambda didn't suit for this particular function as well and the business had",
    "start": "965070",
    "end": "971790"
  },
  {
    "text": "said the pricing has to be under one minute after they discovered that it failed in lambda so we ended up having",
    "start": "971790",
    "end": "977910"
  },
  {
    "text": "to do a Ryoka texture and it only took one day so this is one of the best things about a device and cloud you can grab a",
    "start": "977910",
    "end": "984390"
  },
  {
    "text": "component if you built a good architecture with loose coupling you can rip it out you effects nothing else in the system you can move it onto the ec2",
    "start": "984390",
    "end": "991200"
  },
  {
    "text": "like we did and within a day you've changed your architecture and it's running perfectly as expected meets the",
    "start": "991200",
    "end": "996600"
  },
  {
    "text": "business expectations so this is a graph of cloud phone statistics for the month",
    "start": "996600",
    "end": "1003529"
  },
  {
    "start": "1000000",
    "end": "1000000"
  },
  {
    "text": "of August so this is everything heating cloud front it's not just the user interface this is your API calls your",
    "start": "1003529",
    "end": "1010310"
  },
  {
    "text": "RSS feeds atom feeds everything here so you can see on my stage you're doing about 250,000 to 300,000 hits now you",
    "start": "1010310",
    "end": "1017750"
  },
  {
    "text": "can see August the 8th there was I think a 3.3 in South Australia and there was a 4.3 and a 2.4 I think in South us know",
    "start": "1017750",
    "end": "1027438"
  },
  {
    "text": "Western Australia so you can see it spiked to 900,000 so this is where cloud is very important your scalability and",
    "start": "1027439",
    "end": "1034760"
  },
  {
    "text": "everything like that because you just don't know when an events going to happen and you want it sitting there you know if this was on-premise you'd have",
    "start": "1034760",
    "end": "1040520"
  },
  {
    "text": "to build a system they would have to support that kind of capability and you'd be running those servers all the time which is a waste of time because",
    "start": "1040520",
    "end": "1046250"
  },
  {
    "text": "look it happens one day of the month it happened that's when you need a capacity and that's when it scaled up so you",
    "start": "1046250",
    "end": "1053720"
  },
  {
    "text": "would have heard about the ASD essential 8 and this is what we're doing with this application to mitigate the risks so for",
    "start": "1053720",
    "end": "1060260"
  },
  {
    "text": "application whitelisting we're using continuous integration and continuous deployment for consistent and reliable",
    "start": "1060260",
    "end": "1066020"
  },
  {
    "text": "des fluence of the applications for number two and six we're using AWS patch manager so basically we set patching to",
    "start": "1066020",
    "end": "1073370"
  },
  {
    "text": "run every night and you can set your own server level to whatever you want to patch to number five restricting admin",
    "start": "1073370",
    "end": "1080600"
  },
  {
    "text": "privileges now this one's pretty important and we take it very seriously when it comes to security so write your",
    "start": "1080600",
    "end": "1086210"
  },
  {
    "text": "own custom iron policies don't put action star in there so for ec2 instances you should be saying you should put it the night",
    "start": "1086210",
    "end": "1092750"
  },
  {
    "text": "clause in there saying yoni are allowed to run em four large ec2 s and nothing else it's all about risk mitigation so I",
    "start": "1092750",
    "end": "1100309"
  },
  {
    "text": "am as well if you put I am star I am has a hundred and fifty eight actions in there if some if your account is",
    "start": "1100309",
    "end": "1106550"
  },
  {
    "text": "breached they can change your password and lucky out of your own account this user here that earthquakes is using a",
    "start": "1106550",
    "end": "1112340"
  },
  {
    "text": "new cause about ten twenty actions out of I so try restricted as much as possible",
    "start": "1112340",
    "end": "1117650"
  },
  {
    "text": "and again minimum privilege all your users in the system make sure they only need make sure they only have the",
    "start": "1117650",
    "end": "1123830"
  },
  {
    "text": "permissions they need to do their job not everyone needs admin access we also do multi-factor authentication for",
    "start": "1123830",
    "end": "1130100"
  },
  {
    "text": "anyone with console access and we do database and EBS snapshots on a daily",
    "start": "1130100",
    "end": "1135650"
  },
  {
    "text": "basis as well so some other security considerations to take into account AWS",
    "start": "1135650",
    "end": "1141200"
  },
  {
    "start": "1138000",
    "end": "1138000"
  },
  {
    "text": "guard duty I highly recommend turning this on is its intrusion protection and it cost 94 cents last month to run for",
    "start": "1141200",
    "end": "1147650"
  },
  {
    "text": "earthquakes so it's cheap insurance idea where's key management service so you can create encryption keys and you can set them to",
    "start": "1147650",
    "end": "1154309"
  },
  {
    "text": "automatically rotate so basically the encryption keys we create are for API gateway they're for an s3 bucket and",
    "start": "1154309",
    "end": "1160640"
  },
  {
    "text": "then for encrypting our database just to give a few examples and for the next one down which is the parameter store so",
    "start": "1160640",
    "end": "1166910"
  },
  {
    "text": "Davis parameter store lets you store things like your database credentials you can store them there with an encrypted key and they need this key to",
    "start": "1166910",
    "end": "1173780"
  },
  {
    "text": "be pulled backyard so when an ec2 instance starts up and geo server needs",
    "start": "1173780",
    "end": "1179120"
  },
  {
    "text": "to be configured you will go to parameter store and it will pull the user credentials out for the database",
    "start": "1179120",
    "end": "1184600"
  },
  {
    "text": "installing in the config file and then start up so they're stored in one central location they're not in a",
    "start": "1184600",
    "end": "1189679"
  },
  {
    "text": "repository somewhere they're in a safe encrypted place and for bitbucket pipelines who use encrypted environment",
    "start": "1189679",
    "end": "1195710"
  },
  {
    "text": "variables so you need your AWS deploy users and they're encrypted in the",
    "start": "1195710",
    "end": "1200990"
  },
  {
    "text": "bucket pipelines so another commonly overlooked aspect is repository",
    "start": "1200990",
    "end": "1207260"
  },
  {
    "start": "1204000",
    "end": "1204000"
  },
  {
    "text": "documentation so we at least put an image of what the app looks like when it's running for the next developer that",
    "start": "1207260",
    "end": "1213800"
  },
  {
    "text": "comes along we also put what it is how to build it deploy it test it and who do",
    "start": "1213800",
    "end": "1218960"
  },
  {
    "text": "you talk to if you have a problem so we also tried to apply separation of concerns to our repositories as well so",
    "start": "1218960",
    "end": "1225440"
  },
  {
    "text": "earthquakes the user interface with earthquakes UI has its own repo the earthquakes lambda has its own repository earthquakes AWS now this",
    "start": "1225440",
    "end": "1232429"
  },
  {
    "text": "one's used for our infrastructure as code which I'll talk about next but it also has things in there like our Ron",
    "start": "1232429",
    "end": "1237980"
  },
  {
    "text": "book our disaster recovery recovery plan and yet so I spoke about infrastructure",
    "start": "1237980",
    "end": "1246260"
  },
  {
    "start": "1244000",
    "end": "1244000"
  },
  {
    "text": "as code before and for this we use Tara for so terraform basically gives you version",
    "start": "1246260",
    "end": "1251450"
  },
  {
    "text": "control over infrastructure so it allows you to have consistent configuration",
    "start": "1251450",
    "end": "1256580"
  },
  {
    "text": "across all your environments so the example I have here is for our jump box",
    "start": "1256580",
    "end": "1261710"
  },
  {
    "text": "now jump box is basically a bastion host they let us access our private ec2 instances from inside GA s IP address so",
    "start": "1261710",
    "end": "1269660"
  },
  {
    "text": "configuration is there that terraform is required to run it and when you run this the output is the output is jump box",
    "start": "1269660",
    "end": "1276440"
  },
  {
    "text": "that has been built which is the image at the bottom which is in the ec2 dashboard",
    "start": "1276440",
    "end": "1282070"
  },
  {
    "text": "and another thing that terraform allows you to do is allows you to run plan which allows you to show you what the",
    "start": "1283000",
    "end": "1289880"
  },
  {
    "text": "execution would look like without actually having to apply the changes so for earthquakes 95% of the stack is in",
    "start": "1289880",
    "end": "1296510"
  },
  {
    "text": "terraform so the only time you're going to the console to make a change is never only initially when you have to set up",
    "start": "1296510",
    "end": "1304850"
  },
  {
    "text": "the user for terraform so you've got to setup DynamoDB you have to set up an IM user I am policy in an s3 bucket once you and",
    "start": "1304850",
    "end": "1312140"
  },
  {
    "text": "that's the only time you make a change and the rest is in there so yeah it's",
    "start": "1312140",
    "end": "1317450"
  },
  {
    "text": "all about consistency across your environments so I intended reinventing",
    "start": "1317450",
    "end": "1324230"
  },
  {
    "start": "1322000",
    "end": "1322000"
  },
  {
    "text": "Las Vegas last year which I highly recommend and in between all the casino sessions I actually managed to attend some talks",
    "start": "1324230",
    "end": "1329930"
  },
  {
    "text": "and I went to a talk called tools might fix your break in DevOps I highly",
    "start": "1329930",
    "end": "1335120"
  },
  {
    "text": "recommend you check this out on YouTube let's talk about some great things which included high-performing teams culture",
    "start": "1335120",
    "end": "1341810"
  },
  {
    "text": "and the inefficiencies of cab now I'm not a big fan of cab never have been as",
    "start": "1341810",
    "end": "1347120"
  },
  {
    "text": "I don't think it adds any value to the software or the organization and it definitely doesn't improve the quality",
    "start": "1347120",
    "end": "1352850"
  },
  {
    "text": "can I get a show of hands who still s a used cab to get a production that's some",
    "start": "1352850",
    "end": "1358220"
  },
  {
    "text": "people that's improving that's good so I'll show you what I've come up with here so on the left side we have our",
    "start": "1358220",
    "end": "1363530"
  },
  {
    "text": "branches in the middle we have our bitbucket repository where we store our source code and next up we have B park",
    "start": "1363530",
    "end": "1370070"
  },
  {
    "text": "of pipelines you know P Parker pipelines it will run a custom docker image that we've built and it has things in there",
    "start": "1370070",
    "end": "1376100"
  },
  {
    "text": "like the AWS command-line client it has night on there it has chrome headless on there so we require",
    "start": "1376100",
    "end": "1381450"
  },
  {
    "text": "crime headless to running our unit testing as it does testing on the browser and the pipeline when it runs",
    "start": "1381450",
    "end": "1387179"
  },
  {
    "text": "you also do the angular build you also do a unit testing and you'll do a static analysis so it's pretty strict with the",
    "start": "1387179",
    "end": "1393659"
  },
  {
    "text": "quality of code that comes there if there's a single space or a character in there the pipeline will fail so dinah",
    "start": "1393659",
    "end": "1400169"
  },
  {
    "text": "life of a software developer in my team you create a feature branch from the develop branch once the developer has",
    "start": "1400169",
    "end": "1406409"
  },
  {
    "text": "completed their work they'll create a pull request from feature to develop you know this requires one other team",
    "start": "1406409",
    "end": "1413250"
  },
  {
    "text": "members approval once I have this approval it's a single click which will automatically kick off the development",
    "start": "1413250",
    "end": "1418440"
  },
  {
    "text": "pipeline development pipeline will kick off people are cut pipelines so do the build the unit testing static analysis",
    "start": "1418440",
    "end": "1423840"
  },
  {
    "text": "and you'll automatically deploy to the non production database environment so we have to address environments",
    "start": "1423840",
    "end": "1430260"
  },
  {
    "text": "production on photographer duction if I split you know together production the",
    "start": "1430260",
    "end": "1435950"
  },
  {
    "text": "developer will then there's a couple more steps in this one so from develop to master you raise a pull request again but this time you",
    "start": "1435950",
    "end": "1443070"
  },
  {
    "text": "require at least two team members other than yourself of course to approve it and also the business owner you know at",
    "start": "1443070",
    "end": "1449789"
  },
  {
    "text": "this point we use JIRA for issue tracking so the business owner would have gone through tests are the changes in non production and I would have said",
    "start": "1449789",
    "end": "1455789"
  },
  {
    "text": "yep I'm happy for this to go to production so once that once you have all three you hit the merge button again",
    "start": "1455789",
    "end": "1461490"
  },
  {
    "text": "kicks off the master pipeline and it will run exactly the same pipeline that it ran before only this time it's",
    "start": "1461490",
    "end": "1466889"
  },
  {
    "text": "pushing to production so this is really efficient process it keeps the team happy you have the",
    "start": "1466889",
    "end": "1473909"
  },
  {
    "text": "right level of Governments that's not too heavy also the pipeline's take about five",
    "start": "1473909",
    "end": "1480000"
  },
  {
    "text": "minutes to run so we've done 51 deployments so earthquake since we launched it in May with zero roll backs",
    "start": "1480000",
    "end": "1486179"
  },
  {
    "text": "and if we did have to rollback it's five minutes you just find the last successful pipeline for that branch run",
    "start": "1486179",
    "end": "1491789"
  },
  {
    "text": "it and you've rolled back so it's a pretty good process so I spoke about",
    "start": "1491789",
    "end": "1498029"
  },
  {
    "start": "1498000",
    "end": "1498000"
  },
  {
    "text": "unit testing in the last pipeline in the last slide sorry and for earthquakes we",
    "start": "1498029",
    "end": "1504149"
  },
  {
    "text": "have 92 percent coverage and this is a report that angular produces when you run code coverage usually unit testing",
    "start": "1504149",
    "end": "1512190"
  },
  {
    "text": "only covers things like your JavaScript components but we test all the HTML components as well",
    "start": "1512190",
    "end": "1517200"
  },
  {
    "text": "form submissions button clicks this is all to ensure a higher quality code base",
    "start": "1517200",
    "end": "1524780"
  },
  {
    "text": "so next thing I talk to you about cost saving which reserved instances so I beat the plenty of these talks and",
    "start": "1524780",
    "end": "1530520"
  },
  {
    "text": "people say yeah it's great what you're doing how much does the thing cost so if you focus on the graph at the bottom you",
    "start": "1530520",
    "end": "1536010"
  },
  {
    "text": "can see the RDS and ec2 so your database and compute is where the majority of your cost is so Atos have the ability to",
    "start": "1536010",
    "end": "1544500"
  },
  {
    "text": "purchase up front reserved instances at a discount so for our ec2 compute you",
    "start": "1544500",
    "end": "1549750"
  },
  {
    "text": "can see if it's unreserved it will be about six thousand dollars reserved for one year up front the cost comes down to",
    "start": "1549750",
    "end": "1555480"
  },
  {
    "text": "three thousand if you reserved for three years upfront cost comes down to two thousand so you can start to see the cost savings coming in with the RDS cuz",
    "start": "1555480",
    "end": "1562290"
  },
  {
    "text": "the ids is multi zones runs across two zones cost a bit more it's 14,000 unreserved she reserved it for one year",
    "start": "1562290",
    "end": "1568860"
  },
  {
    "text": "comes down to about eight she reserved for three years comes down to five so the stack over the year is about 20k",
    "start": "1568860",
    "end": "1575300"
  },
  {
    "text": "preserve ec2 an RDS comes down to about 13 K you've reserved it for three years",
    "start": "1575300",
    "end": "1581160"
  },
  {
    "text": "it comes down to nine so over the life span of three years which is app is pretty much guaranteed to run the stack",
    "start": "1581160",
    "end": "1586740"
  },
  {
    "text": "of cost you $60,000 reserved instances comes down to 27 that's a massive cost saving especially when you're working",
    "start": "1586740",
    "end": "1592530"
  },
  {
    "text": "government so because they are tenders",
    "start": "1592530",
    "end": "1597600"
  },
  {
    "text": "DevOps we build that we operate the app as well so we responsible for it we use",
    "start": "1597600",
    "end": "1603210"
  },
  {
    "text": "we set up cloud watch alarms so basically a cloud watch alarms when one's triggered you will call lambda and",
    "start": "1603210",
    "end": "1609690"
  },
  {
    "text": "lambda we'll post our DevOps slack channel now this is all about getting communication to the right people at the",
    "start": "1609690",
    "end": "1615570"
  },
  {
    "text": "right time so the earthquakes alerts and subscribe to this channel and so is my",
    "start": "1615570",
    "end": "1620760"
  },
  {
    "text": "team of course so what are things we're monitoring we're looking at ec2 and RDS 80% CPU memory in this space",
    "start": "1620760",
    "end": "1627210"
  },
  {
    "text": "we look for lander timeouts we look for lander concurrent executions as you can only have a thousand per account by",
    "start": "1627210",
    "end": "1632700"
  },
  {
    "text": "default we look for any application errors so lambda Java or GS of errors you can actually pull the error out of",
    "start": "1632700",
    "end": "1639390"
  },
  {
    "text": "the log and you can actually post it the slack you know the application load balancer host tilt that that one was on",
    "start": "1639390",
    "end": "1645750"
  },
  {
    "text": "there in the beginning now I'm not going to get up here and say everything was perfectly Reaper if we never had an outage so we had a minor",
    "start": "1645750",
    "end": "1651890"
  },
  {
    "text": "erh and what had happened was a devious patch manager has done a colonel update and rebuild instances what's the one",
    "start": "1651890",
    "end": "1657980"
  },
  {
    "text": "thing we didn't test reboots on instances we tested manual terminations and that kind of stuff so what we ended",
    "start": "1657980",
    "end": "1664790"
  },
  {
    "text": "up doing was a jumped on the console had a look what the problem was and after being contacted from the business area",
    "start": "1664790",
    "end": "1670900"
  },
  {
    "text": "terminated instances that came back up because when you start instance from scratch the startup scripts there so the",
    "start": "1670900",
    "end": "1676730"
  },
  {
    "text": "first thing we did when going into work the next morning was we added this cloud watch al-ameen and we added the rubicon",
    "start": "1676730",
    "end": "1685160"
  },
  {
    "text": "tab we added the start up for geoserver so the lessons learned as john was",
    "start": "1685160",
    "end": "1691610"
  },
  {
    "start": "1689000",
    "end": "1689000"
  },
  {
    "text": "talking about earlier was the well architected reviews they provide invaluable feedback so we did them about",
    "start": "1691610",
    "end": "1696800"
  },
  {
    "text": "a month was about a month or two before production we got feedback and we applied changes like cloud watch alarms",
    "start": "1696800",
    "end": "1703010"
  },
  {
    "text": "for concurrent lambdas and it also keeps you provides feedback and lets you know",
    "start": "1703010",
    "end": "1709130"
  },
  {
    "text": "if you're doing the AWS practice as well so then definitely the importance of load testing as you can see it allows",
    "start": "1709130",
    "end": "1716630"
  },
  {
    "text": "for for future enhancements and changes you know whether you have capacity or not and what the system is going to",
    "start": "1716630",
    "end": "1722150"
  },
  {
    "text": "handle don't expect things to perform out of the box always allow time for performance tuning and the best thing",
    "start": "1722150",
    "end": "1728870"
  },
  {
    "text": "about cloud is you can experiment and file quickly for a reduced costs so that's all for me I want to thank you",
    "start": "1728870",
    "end": "1734750"
  },
  {
    "text": "for your time and now I'll hand you back to John",
    "start": "1734750",
    "end": "1738520"
  },
  {
    "text": "great well thank you thank you Bill and we've got a minute to go",
    "start": "1741850",
    "end": "1747610"
  },
  {
    "text": "this time for a couple of questions if people had something to draw down with",
    "start": "1747610",
    "end": "1752620"
  },
  {
    "text": "bill bill for any any questions we've got a mic that we can give out if people need that they just down in the front",
    "start": "1752620",
    "end": "1760270"
  },
  {
    "text": "here",
    "start": "1760270",
    "end": "1762540"
  },
  {
    "text": "maybe I'll just stir wondering if you thought about using spot for your process or instances and if so what made",
    "start": "1765370",
    "end": "1772180"
  },
  {
    "text": "you choose reserved over spot in that case yes I stopped spots where you can",
    "start": "1772180",
    "end": "1785890"
  },
  {
    "text": "bid for a instance so I guess in this case you wanted some guaranteed capacity",
    "start": "1785890",
    "end": "1793170"
  },
  {
    "text": "yeah so actually they did I think that came up in the review I mean one option there would be potentially you might",
    "start": "1796110",
    "end": "1801820"
  },
  {
    "text": "want to use reserved for your base capacity so they've initial three instances but you could potentially use",
    "start": "1801820",
    "end": "1808320"
  },
  {
    "text": "spot or on-demand for instances when they scale up any other questions I",
    "start": "1808320",
    "end": "1821640"
  },
  {
    "text": "think we've got maybe one more and that's it there's just one word in the middle there okay bill why terraform and",
    "start": "1821640",
    "end": "1833350"
  },
  {
    "text": "not CloudFormation okay well thank you",
    "start": "1833350",
    "end": "1852670"
  },
  {
    "text": "for your time and a place to give us feedback we use that to improve these sessions over time and let's so give it",
    "start": "1852670",
    "end": "1859660"
  },
  {
    "text": "one more thank you for bill [Applause]",
    "start": "1859660",
    "end": "1864380"
  }
]