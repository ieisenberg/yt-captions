[
  {
    "start": "0",
    "end": "29000"
  },
  {
    "text": "[Music] all right good afternoon everyone",
    "start": "210",
    "end": "6930"
  },
  {
    "text": "it's great to have you here hopefully you still have some energy after a long",
    "start": "6930",
    "end": "12179"
  },
  {
    "text": "day I'm sure you you've walked around and stuff at least I'm tired of all that",
    "start": "12179",
    "end": "18869"
  },
  {
    "text": "stuff but today and this afternoon I want to talk about a very very interesting topic of mine totally",
    "start": "18869",
    "end": "26640"
  },
  {
    "text": "fascinated with resiliency resiliency is the idea that failure always happened",
    "start": "26640",
    "end": "33360"
  },
  {
    "start": "29000",
    "end": "111000"
  },
  {
    "text": "and that we should build application and systems to end all failures",
    "start": "33360",
    "end": "38579"
  },
  {
    "text": "in fact in large scale systems you all build micro services now there's some",
    "start": "38579",
    "end": "44910"
  },
  {
    "text": "micro services might I have 10 20 100 different services it's very common when",
    "start": "44910",
    "end": "51480"
  },
  {
    "text": "you have micro services especially at large scale that at any moment some of",
    "start": "51480",
    "end": "57360"
  },
  {
    "text": "them will fail in fact if you have 4 or 5 micro services it's kind of normal to",
    "start": "57360",
    "end": "63090"
  },
  {
    "text": "always operate with all the services working right that's what we call full",
    "start": "63090",
    "end": "68270"
  },
  {
    "text": "operational system but once you go at tens or a few tens or hundreds of",
    "start": "68270",
    "end": "73740"
  },
  {
    "text": "thousands of micro services it's impossible right and we call this partial failure so we operate in partial",
    "start": "73740",
    "end": "82080"
  },
  {
    "text": "failure that means we still always operate but we handle failure and this is what we call resiliency and I've been",
    "start": "82080",
    "end": "89430"
  },
  {
    "text": "working on resiliency for about 10 years I joined the WS 3 years ago but before",
    "start": "89430",
    "end": "94560"
  },
  {
    "text": "that I worked in scaling and businesses and startups and especially back-end",
    "start": "94560",
    "end": "99869"
  },
  {
    "text": "system on AWS and in 2003 in 2012",
    "start": "99869",
    "end": "106170"
  },
  {
    "text": "there's something very interesting that happened and I will talk a little bit about this later but before we go into",
    "start": "106170",
    "end": "113820"
  },
  {
    "start": "111000",
    "end": "210000"
  },
  {
    "text": "talking about resiliency in multi-region I want to remind you couple of stuff but",
    "start": "113820",
    "end": "119729"
  },
  {
    "text": "it's very important when you talk about resiliency is to understand first availability and availability is the",
    "start": "119729",
    "end": "127350"
  },
  {
    "text": "time your service is going to be able for your customer availability doesn't",
    "start": "127350",
    "end": "132480"
  },
  {
    "text": "mean reliable you can be available and still returning an error so I'm just talking about availability so every",
    "start": "132480",
    "end": "140040"
  },
  {
    "text": "ability is the time your service will be up and very common in the industry is to",
    "start": "140040",
    "end": "145230"
  },
  {
    "text": "say our service our four nines of three to four nines available that means",
    "start": "145230",
    "end": "151230"
  },
  {
    "text": "yearly your system needs to tolerate 52 minutes of downtown one of the big",
    "start": "151230",
    "end": "158850"
  },
  {
    "text": "outage I had in my life that was like six years ago our alert system failed",
    "start": "158850",
    "end": "164820"
  },
  {
    "text": "our escalation past failed that means 26 minutes it took for us",
    "start": "164820",
    "end": "170810"
  },
  {
    "text": "between the system was down to actually receive alerts and in fact it was customer telling us your system is",
    "start": "170810",
    "end": "177990"
  },
  {
    "text": "experiencing issues so just one outage and we already had burned half of our",
    "start": "177990",
    "end": "183540"
  },
  {
    "text": "credits so I just want to show you those numbers because this is the most important thing when you build a",
    "start": "183540",
    "end": "189690"
  },
  {
    "text": "business and when you want to make a resilient system you need to know how",
    "start": "189690",
    "end": "194730"
  },
  {
    "text": "often it is to be available and how often it has to go down actually this",
    "start": "194730",
    "end": "200940"
  },
  {
    "text": "also tells you that you have very very little time that means you're ready to",
    "start": "200940",
    "end": "206730"
  },
  {
    "text": "automate everything okay but I want to drill in particular in this one this is",
    "start": "206730",
    "end": "213959"
  },
  {
    "start": "210000",
    "end": "292000"
  },
  {
    "text": "a very T's in series and when you have micro services when you build apps very often you put them in series and there",
    "start": "213959",
    "end": "220950"
  },
  {
    "text": "is this equation and this equation tells us that if part X of the system is 99%",
    "start": "220950",
    "end": "228209"
  },
  {
    "text": "available and it's in series with another system which is 99 available the",
    "start": "228209",
    "end": "234120"
  },
  {
    "text": "overall availability of the system actually goes down this is availability in series and this is something that",
    "start": "234120",
    "end": "241200"
  },
  {
    "text": "very often we forget there's another one that is very very important and actually",
    "start": "241200",
    "end": "246720"
  },
  {
    "text": "that's the topic of this presentation its ability in parallel and this",
    "start": "246720",
    "end": "252150"
  },
  {
    "text": "equation is your best friend let me tell you something if you have a system X",
    "start": "252150",
    "end": "257489"
  },
  {
    "text": "which is 99% available and you put it in parallel without doing almost any change on your",
    "start": "257489",
    "end": "265170"
  },
  {
    "text": "application you actually make it for nine available if you make it three",
    "start": "265170",
    "end": "270300"
  },
  {
    "text": "times in parallel it becomes six nines every row you haven't done pretty much",
    "start": "270300",
    "end": "275700"
  },
  {
    "text": "any change in the code the only thing what we've done is actually duplicating the application",
    "start": "275700",
    "end": "282000"
  },
  {
    "text": "making it in parallel and this is really the first thing you need to understand",
    "start": "282000",
    "end": "288120"
  },
  {
    "text": "when we talk about mobility and resiliency and it's also the very reason",
    "start": "288120",
    "end": "294330"
  },
  {
    "start": "292000",
    "end": "474000"
  },
  {
    "text": "why in the cloud we always architect around regions and nazy let me talk a little bit how we",
    "start": "294330",
    "end": "302190"
  },
  {
    "text": "define at AWS region so we have in AWS about 18 region worldwide a region is",
    "start": "302190",
    "end": "309720"
  },
  {
    "text": "actually a set of availability zones now it's a common mistake to think in one",
    "start": "309720",
    "end": "316200"
  },
  {
    "text": "every blizzy zone there's one data centers there's not this is one too many",
    "start": "316200",
    "end": "321810"
  },
  {
    "text": "is actually some of the biggest regions can have up to five data center per availability zones right and some of the",
    "start": "321810",
    "end": "329820"
  },
  {
    "text": "very big region can have 15 or plus 20 data centers within one region and we",
    "start": "329820",
    "end": "336090"
  },
  {
    "text": "organized those AZ so that they are physically separated they are physically",
    "start": "336090",
    "end": "341400"
  },
  {
    "text": "separated so that they also have a different electrical grid a different floodplain a different fire plane so",
    "start": "341400",
    "end": "348810"
  },
  {
    "text": "that in case of a problem in one a see the same region will continue running because we have other AZ available and",
    "start": "348810",
    "end": "357570"
  },
  {
    "text": "in one region there usually 3 AZ up to up to 6 ok so when you open an AWS account and",
    "start": "357570",
    "end": "365670"
  },
  {
    "text": "you select the region you are given a set of abilities on on where you should deploy an application and this is also",
    "start": "365670",
    "end": "373200"
  },
  {
    "text": "the reason why we always always tell our customers to architect their solution",
    "start": "373200",
    "end": "379230"
  },
  {
    "text": "across multi AZ actually the first thing you should do when you have an application is really deploy it so that",
    "start": "379230",
    "end": "386190"
  },
  {
    "text": "it works across multiple availability zone when you do this there is few requirements that you",
    "start": "386190",
    "end": "391520"
  },
  {
    "text": "need on the application one of the most important requirement is that your application is stateless right so that",
    "start": "391520",
    "end": "398360"
  },
  {
    "text": "if an application is treated with one AZ the other request can take and continue",
    "start": "398360",
    "end": "405620"
  },
  {
    "text": "the job right so the share the states between different AZ so that means your application does not store the state",
    "start": "405620",
    "end": "412099"
  },
  {
    "text": "locally is towards the state within the region and that's really the first level",
    "start": "412099",
    "end": "417710"
  },
  {
    "text": "of designing an application which is highly available and resilient in the cloud how many of you are already doing",
    "start": "417710",
    "end": "424940"
  },
  {
    "text": "this today so a lot of you now this is the next level and the next level is",
    "start": "424940",
    "end": "432159"
  },
  {
    "text": "doing multi region and this is really the topic of this presentation and you",
    "start": "432159",
    "end": "437240"
  },
  {
    "text": "might be wondering why do we do multi region there's few reasons and we'll go",
    "start": "437240",
    "end": "442639"
  },
  {
    "text": "through them later but what is very important here is to understand that even if you go multi region",
    "start": "442639",
    "end": "449020"
  },
  {
    "text": "there's a lot of work to do usually you need a DNS DNS with a cname and then a",
    "start": "449020",
    "end": "457610"
  },
  {
    "text": "policy which will distribute traffic between different region so what you did",
    "start": "457610",
    "end": "462979"
  },
  {
    "text": "is you just took an application in one region and copy/paste it and duplicate it inside the second region okay",
    "start": "462979",
    "end": "471229"
  },
  {
    "text": "so that's what we're going to talk about today and we have about 18 different",
    "start": "471229",
    "end": "476479"
  },
  {
    "start": "474000",
    "end": "499000"
  },
  {
    "text": "regions so when you want to do a multi region you can really almost architect your application across 18 different",
    "start": "476479",
    "end": "483080"
  },
  {
    "text": "region I'm not going to demo that today today I will demo you across two region",
    "start": "483080",
    "end": "488419"
  },
  {
    "text": "and we have 18 region with 55 ability zone so that gives you a lot a lot of",
    "start": "488419",
    "end": "495080"
  },
  {
    "text": "places where you want to deploy your application so why would we want to",
    "start": "495080",
    "end": "500900"
  },
  {
    "start": "499000",
    "end": "664000"
  },
  {
    "text": "build multi-region back-end well the first region or the first important",
    "start": "500900",
    "end": "507199"
  },
  {
    "text": "thing is to understand latency I'm show you all of the world latency latency is",
    "start": "507199",
    "end": "515450"
  },
  {
    "text": "the time it takes for a packet to go from one place to another okay and",
    "start": "515450",
    "end": "521110"
  },
  {
    "text": "that's latency in electrical fibers or in optical fibers is actually bound by the",
    "start": "521110",
    "end": "528410"
  },
  {
    "text": "speed of light and the speed of light no one yet has hacked it so when you take a region and you want to deploy services",
    "start": "528410",
    "end": "535610"
  },
  {
    "text": "for example in Europe and you have users in us your users will automatically have",
    "start": "535610",
    "end": "543260"
  },
  {
    "text": "a latency of about 140 milliseconds pair direction so that means a round-trip",
    "start": "543260",
    "end": "548750"
  },
  {
    "text": "will be 300 milliseconds now if I tell you that we did some tests on amazon.com",
    "start": "548750",
    "end": "555949"
  },
  {
    "text": "the retail website and adding 100 milliseconds latency on the page as an",
    "start": "555949",
    "end": "562279"
  },
  {
    "text": "effect of 1% drop in sales how many of you can detect 100 milliseconds no one",
    "start": "562279",
    "end": "570050"
  },
  {
    "text": "in fact the human a very fast human can go 250 minutes against 300 milliseconds",
    "start": "570050",
    "end": "576350"
  },
  {
    "text": "average person is 400 milliseconds but that means your unconscious mind will",
    "start": "576350",
    "end": "582440"
  },
  {
    "text": "detect 100 milliseconds and you will feel naturally the feeling or you will have the feeling that the application is",
    "start": "582440",
    "end": "588800"
  },
  {
    "text": "not responsive it's not fast and you'll just get bored and move on and 100 milliseconds it's not something you can",
    "start": "588800",
    "end": "596390"
  },
  {
    "text": "do by feelings it's something you detect by tests and data and trust me at the",
    "start": "596390",
    "end": "602630"
  },
  {
    "text": "scale of Amazon 1% drop in self is a lot of money ok so 100 milliseconds is a lot",
    "start": "602630",
    "end": "609160"
  },
  {
    "text": "so when you deploy your application globally that's one of the most",
    "start": "609160",
    "end": "615920"
  },
  {
    "text": "important reason it's actually 10 years ago it was very common for application for companies to have local applications",
    "start": "615920",
    "end": "622910"
  },
  {
    "text": "right it was not common to have a global reach nowadays when you launch an",
    "start": "622910",
    "end": "628819"
  },
  {
    "text": "application of one you launch an app you want to reach almost the global market when you put your application on the",
    "start": "628819",
    "end": "636260"
  },
  {
    "text": "iPhone or Android or Windows Phone they have a marketplace and users from pretty",
    "start": "636260",
    "end": "642949"
  },
  {
    "text": "much all over the world can download that and you don't want your user to experience 600 milliseconds latency if",
    "start": "642949",
    "end": "649430"
  },
  {
    "text": "your users are in Australia and you are in Europe right so there's an intent incentive to really",
    "start": "649430",
    "end": "655159"
  },
  {
    "text": "start deploying application across the world so this is one of the most common reason why people start to have multi",
    "start": "655159",
    "end": "663049"
  },
  {
    "text": "region systems another very important one is disaster recovery disaster",
    "start": "663049",
    "end": "670129"
  },
  {
    "start": "664000",
    "end": "776000"
  },
  {
    "text": "recovery that means you have a primarily region and the other one is passive and",
    "start": "670129",
    "end": "677299"
  },
  {
    "text": "we call that setup active passive so that means one region takes all the",
    "start": "677299",
    "end": "683749"
  },
  {
    "text": "traffic and the other one in case of a failures in a service in one region will",
    "start": "683749",
    "end": "689869"
  },
  {
    "text": "actually generate a switch of traffic to the other region okay so the passive",
    "start": "689869",
    "end": "696019"
  },
  {
    "text": "regions all of the suddens become active and this we call disaster recovery and",
    "start": "696019",
    "end": "701119"
  },
  {
    "text": "some customers have done that for a long time now the problem with such a setup",
    "start": "701119",
    "end": "707919"
  },
  {
    "text": "it takes a long time to actually move the traffic from one active to one",
    "start": "707919",
    "end": "714769"
  },
  {
    "text": "passive and especially it takes a long time to warm up this region and the problem with passive is very often the",
    "start": "714769",
    "end": "724249"
  },
  {
    "text": "cache the cue the messaging all the systems that you need to operate in a very large scale will have to warm up",
    "start": "724249",
    "end": "731569"
  },
  {
    "text": "and when they warm up you have a possibility to possibility to have a very big outage because it's something",
    "start": "731569",
    "end": "738379"
  },
  {
    "text": "that is not tested very often so going from the passive to active as a",
    "start": "738379",
    "end": "747229"
  },
  {
    "text": "potential for big outage simply because this is not practiced often so what we",
    "start": "747229",
    "end": "752809"
  },
  {
    "text": "want is really to have a system where pretty much both regions are working at",
    "start": "752809",
    "end": "758689"
  },
  {
    "text": "the same time and we just have to switch traffic from one to another and then",
    "start": "758689",
    "end": "763819"
  },
  {
    "text": "scale the other one to handle the traffic here and this is what we call active active and back in the day having",
    "start": "763819",
    "end": "771859"
  },
  {
    "text": "an active active architecture was very very difficult okay and I'll explain you",
    "start": "771859",
    "end": "778069"
  },
  {
    "text": "why in 2012 actually if Christmas 2012 Netflix",
    "start": "778069",
    "end": "783949"
  },
  {
    "text": "experienced an outage and it service of Netflix went down for a few hours and the problem here is Netflix",
    "start": "783949",
    "end": "791010"
  },
  {
    "text": "was not responsible in fix and in fact Netflix Netflix is on AWS 100% using AWS",
    "start": "791010",
    "end": "799290"
  },
  {
    "text": "for the service and they've been doing that for a long time but on the eve of Christmas 2012 one of the load balancer",
    "start": "799290",
    "end": "807660"
  },
  {
    "text": "in the region us is one experienced some issues and it created a cascading effect",
    "start": "807660",
    "end": "813030"
  },
  {
    "text": "that took the service down for a few hours and Netflix couldn't do anything because the load balancer where Amazon",
    "start": "813030",
    "end": "820320"
  },
  {
    "text": "or AWS responsibility we've now affixed all the issues but at that time Netflix thought that this",
    "start": "820320",
    "end": "828270"
  },
  {
    "text": "can't be because if you are competing with the normal broadcast people open",
    "start": "828270",
    "end": "834420"
  },
  {
    "text": "the TV and it works right so Netflix want the same experience for the user they don't want to say oh it's over the",
    "start": "834420",
    "end": "841050"
  },
  {
    "text": "internet we can be down a few hours and that's it they want that every time you actually play a movie on Netflix it will",
    "start": "841050",
    "end": "848280"
  },
  {
    "text": "work so this is decided in 2013 to do the first multi region active active",
    "start": "848280",
    "end": "855630"
  },
  {
    "text": "system and back in the day it was very very difficult there was no managed services so they",
    "start": "855630",
    "end": "861540"
  },
  {
    "text": "had to do a lot of engineering work like replicating databases replicating big",
    "start": "861540",
    "end": "866820"
  },
  {
    "text": "logs synchronously between region maintaining connections between regions and all that over the Internet and when",
    "start": "866820",
    "end": "874530"
  },
  {
    "text": "you do this over the internet you are at the mercy of change of traffic patterns latency change is not consistent so it",
    "start": "874530",
    "end": "881340"
  },
  {
    "text": "was really a big engineering working to big team of engineers and few months to",
    "start": "881340",
    "end": "887370"
  },
  {
    "text": "be able to achieve that and they haven't stopped there",
    "start": "887370",
    "end": "892710"
  },
  {
    "text": "in fact in 2016 16 the open services in Europe right and now many of you are",
    "start": "892710",
    "end": "899070"
  },
  {
    "text": "probably consuming Netflix right and because they wanted you to have a low",
    "start": "899070",
    "end": "904200"
  },
  {
    "text": "latency experience they actually started to have a region in Europe so now they have three active regions they have two",
    "start": "904200",
    "end": "910830"
  },
  {
    "text": "regions in the US east west and one in Europe so Netflix as the kind of architectures that we're",
    "start": "910830",
    "end": "918510"
  },
  {
    "text": "going to talk today and to test those architectures your",
    "start": "918510",
    "end": "927119"
  },
  {
    "start": "921000",
    "end": "985000"
  },
  {
    "text": "unit test of functional testing and integration testing actually don't work very very well anymore because those are",
    "start": "927119",
    "end": "934889"
  },
  {
    "text": "very good for single region isolated application but when you talk about the distributed systems you have to take",
    "start": "934889",
    "end": "941399"
  },
  {
    "text": "into account a lot of different problems and to be able to test this multi region",
    "start": "941399",
    "end": "948659"
  },
  {
    "text": "architectures they created some tools cause the chaos monkey how many of you have heard chaos monkeys yeah so cash",
    "start": "948659",
    "end": "955409"
  },
  {
    "text": "machines are cool cool little monkeys actually software system that you launch",
    "start": "955409",
    "end": "960479"
  },
  {
    "text": "or use in your application and they will just randomly kill stuff they will",
    "start": "960479",
    "end": "965579"
  },
  {
    "text": "randomly break things to see if the system recovers self-heal and starts and",
    "start": "965579",
    "end": "971489"
  },
  {
    "text": "so that your consumer and people can consume their service if you are",
    "start": "971489",
    "end": "977849"
  },
  {
    "text": "interested into this actually have a full talk tomorrow around chaos engineering so please come back but this",
    "start": "977849",
    "end": "983669"
  },
  {
    "text": "is actually pretty cool now let's talk about how do we actually build those",
    "start": "983669",
    "end": "989069"
  },
  {
    "start": "985000",
    "end": "1042000"
  },
  {
    "text": "systems so these few things that you have to understand when you go multi",
    "start": "989069",
    "end": "994169"
  },
  {
    "text": "region you are breaking the barrier of synchronous replication in fact we say",
    "start": "994169",
    "end": "1000199"
  },
  {
    "text": "that to have a synchronous replication we have to be under five milliseconds",
    "start": "1000199",
    "end": "1005389"
  },
  {
    "text": "separation between component and you were you've seen the latency between regions is usually 100 milliseconds to",
    "start": "1005389",
    "end": "1012259"
  },
  {
    "text": "300 or even more so when you go multi-region you go into the realm of",
    "start": "1012259",
    "end": "1017689"
  },
  {
    "text": "what we call a synchronous systems and you just don't have a choice but you cannot go around this you have to handle",
    "start": "1017689",
    "end": "1025579"
  },
  {
    "text": "a synchronous systems now it doesn't mean that the entire system is to be a",
    "start": "1025579",
    "end": "1031339"
  },
  {
    "text": "synchronous but it means most of your operation will have to be in synchronous because if you have to be synchronous",
    "start": "1031339",
    "end": "1038029"
  },
  {
    "text": "you usually have locking systems right and when you go a synchronous you enter",
    "start": "1038029",
    "end": "1045529"
  },
  {
    "start": "1042000",
    "end": "1125000"
  },
  {
    "text": "what we call the real move the cap theorem how many of you know the cap theorem",
    "start": "1045529",
    "end": "1051410"
  },
  {
    "text": "if you go into software engineering is very often a problem that comes into",
    "start": "1051410",
    "end": "1056450"
  },
  {
    "text": "mind the cap theorem just says that in the presence of a partition so a place",
    "start": "1056450",
    "end": "1061820"
  },
  {
    "text": "where you want to store data in a distributed systems you have to make a choice between consistency so that means",
    "start": "1061820",
    "end": "1069309"
  },
  {
    "text": "being able to have the same data on each in every place in your system at the",
    "start": "1069309",
    "end": "1075320"
  },
  {
    "text": "same time or being available having the data available at any time when you have",
    "start": "1075320",
    "end": "1082340"
  },
  {
    "text": "a consistent system and you inject system in this one you usually have to",
    "start": "1082340",
    "end": "1087500"
  },
  {
    "text": "lock it and then replicate the data and then release it and that locks makes",
    "start": "1087500",
    "end": "1094010"
  },
  {
    "text": "these nodes not available right because you want strong consistency but in a distributed system",
    "start": "1094010",
    "end": "1100240"
  },
  {
    "text": "usually ninety percent of the time or even more we want to be highly available",
    "start": "1100240",
    "end": "1105559"
  },
  {
    "text": "so that means you want to be able to write in a node here in this node here and here at the same time and you want",
    "start": "1105559",
    "end": "1112669"
  },
  {
    "text": "to be able to read at the same time regardless of the consistency and when",
    "start": "1112669",
    "end": "1118130"
  },
  {
    "text": "you do this all of a sudden you make another very important decision it's",
    "start": "1118130",
    "end": "1123380"
  },
  {
    "text": "called eventual consistency and eventual consistency means that at any given time",
    "start": "1123380",
    "end": "1130580"
  },
  {
    "start": "1125000",
    "end": "1202000"
  },
  {
    "text": "in your system you might have different version of the same data in every node",
    "start": "1130580",
    "end": "1135830"
  },
  {
    "text": "so for example if I have a value of a and I put two on it after a certain",
    "start": "1135830",
    "end": "1144140"
  },
  {
    "text": "moment of time maybe 10 seconds or a bit less let's say 100 milliseconds I'm",
    "start": "1144140",
    "end": "1149390"
  },
  {
    "text": "gonna add a equal to you know the nodes okay now let's say I make an update on a",
    "start": "1149390",
    "end": "1154760"
  },
  {
    "text": "I make an update on a and I give a equal five imagine I read a here right after I",
    "start": "1154760",
    "end": "1163940"
  },
  {
    "text": "put beef a five year well it might return actually the previous value because maybe the",
    "start": "1163940",
    "end": "1170900"
  },
  {
    "text": "replication hasn't happened right and we call this eventual consistency it means that after a particular certain amount",
    "start": "1170900",
    "end": "1178490"
  },
  {
    "text": "of time all the nodes have that value that also means that when you design UI an application you",
    "start": "1178490",
    "end": "1185600"
  },
  {
    "text": "need to have this in mind you cannot expect all your user experience and your",
    "start": "1185600",
    "end": "1191420"
  },
  {
    "text": "UI to be strongly consistent and this is one of the biggest problem in applications that want to handle",
    "start": "1191420",
    "end": "1198100"
  },
  {
    "text": "multi-region systems embrace eventual consistency now when you want to do",
    "start": "1198100",
    "end": "1205370"
  },
  {
    "text": "replication across multi region there's something very important to do you noticed Netflix took many years to be or",
    "start": "1205370",
    "end": "1212780"
  },
  {
    "text": "many months to design their architecture that's because the traffic back in the days was going from one region to",
    "start": "1212780",
    "end": "1218720"
  },
  {
    "text": "another across the internet and this is something that was a problem both from Netflix in actually for us when we",
    "start": "1218720",
    "end": "1225230"
  },
  {
    "text": "deploy services when we deploy region when we maintain services we actually use a lot of cross region deployments",
    "start": "1225230",
    "end": "1233240"
  },
  {
    "text": "and in 2016 to be able to control this",
    "start": "1233240",
    "end": "1241520"
  },
  {
    "text": "latency between different region we actually built a full global network of",
    "start": "1241520",
    "end": "1246590"
  },
  {
    "text": "our own fibers okay and it's a network",
    "start": "1246590",
    "end": "1252050"
  },
  {
    "start": "1250000",
    "end": "1284000"
  },
  {
    "text": "that actually links all the region together through direct connection",
    "start": "1252050",
    "end": "1257660"
  },
  {
    "text": "actually due to 100 the dual 100 gigs network circle around all our region so",
    "start": "1257660",
    "end": "1265970"
  },
  {
    "text": "that now if you want to send traffic between one region to another it's actually not over the internet but over",
    "start": "1265970",
    "end": "1272060"
  },
  {
    "text": "our network it's encrypted and it's especially going through a",
    "start": "1272060",
    "end": "1277250"
  },
  {
    "text": "system where we control the latency we can control the error rate and we can make it as performant as we want now",
    "start": "1277250",
    "end": "1285260"
  },
  {
    "start": "1284000",
    "end": "1351000"
  },
  {
    "text": "having that gives you a possibility to do once a very nice few years ago when",
    "start": "1285260",
    "end": "1292760"
  },
  {
    "text": "you want it to link region between each other you had to have what we call VPN appliance between regions right and that",
    "start": "1292760",
    "end": "1300050"
  },
  {
    "text": "was going over the Internet and very often you had to have two of them because you want to be resilient so you",
    "start": "1300050",
    "end": "1305960"
  },
  {
    "text": "need to have two in case one goes down that's a lot of operation since we launched the",
    "start": "1305960",
    "end": "1311860"
  },
  {
    "text": "global network now you can link every region through what we call VPC peering",
    "start": "1311860",
    "end": "1317470"
  },
  {
    "text": "so you have a VP see a network configuration in one region right and then you can link it through a peer",
    "start": "1317470",
    "end": "1324580"
  },
  {
    "text": "connection to another region with one click all right so you don't have",
    "start": "1324580",
    "end": "1329950"
  },
  {
    "text": "anymore to duplicate appliances VPN connection you don't have to maintain",
    "start": "1329950",
    "end": "1335620"
  },
  {
    "text": "them make sure that they are up sending traffic time all this kind of stuff that means very very annoying and complicated",
    "start": "1335620",
    "end": "1342549"
  },
  {
    "text": "to do so that gives you a lot more time to actually work on your business so",
    "start": "1342549",
    "end": "1347860"
  },
  {
    "text": "that's a good thing and we launched that last year another thing that there's",
    "start": "1347860",
    "end": "1353020"
  },
  {
    "start": "1351000",
    "end": "1438000"
  },
  {
    "text": "become possible with the global network is cross region replication a cross",
    "start": "1353020",
    "end": "1361030"
  },
  {
    "text": "replication on s/3 s/3 is our storage object storage service",
    "start": "1361030",
    "end": "1366640"
  },
  {
    "text": "where you can put a lot of data files or videos or JavaScript anything what you",
    "start": "1366640",
    "end": "1372010"
  },
  {
    "text": "want and when you put this in an s3 bucket traditionally we never ever move",
    "start": "1372010",
    "end": "1377470"
  },
  {
    "text": "that data out of the region but now if you want and only if you want you can",
    "start": "1377470",
    "end": "1383470"
  },
  {
    "text": "enable cross region replication and that means you take a bucket and you say as soon as you put data in this bucket we",
    "start": "1383470",
    "end": "1391000"
  },
  {
    "text": "will a synchronously replicate that same data into any other region this is very",
    "start": "1391000",
    "end": "1396190"
  },
  {
    "text": "good for data disaster recovery but also for active active system of course it",
    "start": "1396190",
    "end": "1402040"
  },
  {
    "text": "also means that you will have a latency between the data available here and here",
    "start": "1402040",
    "end": "1407200"
  },
  {
    "text": "but we call that eventual consistency and as I said is something you anyway have to deal with it the way you could",
    "start": "1407200",
    "end": "1414250"
  },
  {
    "text": "avoid that is storing do to put into all",
    "start": "1414250",
    "end": "1419440"
  },
  {
    "text": "the region or make a put in or the region but it's not very very friendly",
    "start": "1419440",
    "end": "1425530"
  },
  {
    "text": "so just embrace eventual consistency and handle this a synchronous replication",
    "start": "1425530",
    "end": "1432720"
  },
  {
    "text": "and this is a very very common way to move data from one region to another now",
    "start": "1432720",
    "end": "1438490"
  },
  {
    "start": "1438000",
    "end": "1546000"
  },
  {
    "text": "there is another things that has been made possible having how many of you are using RDS",
    "start": "1438490",
    "end": "1445890"
  },
  {
    "text": "currently is our managed database so RDS is our relational database sisters and",
    "start": "1445890",
    "end": "1452510"
  },
  {
    "text": "it's managed so we give you a managed cluster you can have a master and you",
    "start": "1452510",
    "end": "1459330"
  },
  {
    "text": "can have what we call read replicas with replicas are really good because if you want to scale an application you can",
    "start": "1459330",
    "end": "1465840"
  },
  {
    "text": "move the traffic from the right to the reeds so that means your master will handle",
    "start": "1465840",
    "end": "1471720"
  },
  {
    "text": "only the rights and the read replicas can handle all the rids RDS handles five",
    "start": "1471720",
    "end": "1477750"
  },
  {
    "text": "different replicas if you is the aurora engine or RDS it can handle 15 of them",
    "start": "1477750",
    "end": "1483570"
  },
  {
    "text": "so you really really can shard your reason you're right and scale very much but until last year the reed replicas",
    "start": "1483570",
    "end": "1492210"
  },
  {
    "text": "were only within one region right now if you want to go global and you have a relational database you can have cross",
    "start": "1492210",
    "end": "1500100"
  },
  {
    "text": "region read replicas so that means that the data that you put into a master will",
    "start": "1500100",
    "end": "1505980"
  },
  {
    "text": "be a synchronously replicated to all the replicas that you have deployed in other regions that gives you a capability to",
    "start": "1505980",
    "end": "1513390"
  },
  {
    "text": "scale the reads to the region but that also as a little bit with anti-pattern",
    "start": "1513390",
    "end": "1519120"
  },
  {
    "text": "right and I'm sure you all noticed is that only have one master so if the user",
    "start": "1519120",
    "end": "1524850"
  },
  {
    "text": "that is using the system it can read very fast because it's close to the reeds is close to the river época but if",
    "start": "1524850",
    "end": "1532890"
  },
  {
    "text": "he wants to ride a right he needs to do what we call a cross region right which",
    "start": "1532890",
    "end": "1539430"
  },
  {
    "text": "is an anti-pattern but that's the way to do it because this is transactional",
    "start": "1539430",
    "end": "1544620"
  },
  {
    "text": "database so our customers said okay but",
    "start": "1544620",
    "end": "1549660"
  },
  {
    "start": "1546000",
    "end": "1598000"
  },
  {
    "text": "that's not really really cool so we",
    "start": "1549660",
    "end": "1555780"
  },
  {
    "text": "announced actually that now you will be able and very soon be able to handle",
    "start": "1555780",
    "end": "1562050"
  },
  {
    "text": "what we call multi master and multi region right and we are gonna release",
    "start": "1562050",
    "end": "1568170"
  },
  {
    "text": "Ora with capability to have first multi-master within one region and then",
    "start": "1568170",
    "end": "1574610"
  },
  {
    "text": "multi-master across different regions so that means your application will be able",
    "start": "1574610",
    "end": "1579890"
  },
  {
    "text": "to write and read from any region okay and this is a capability that is going",
    "start": "1579890",
    "end": "1586550"
  },
  {
    "text": "to come within 2019 so there is not much time so just check up the what's",
    "start": "1586550",
    "end": "1594140"
  },
  {
    "text": "happening soon but that's a very very good capability now if you are a little",
    "start": "1594140",
    "end": "1599420"
  },
  {
    "start": "1598000",
    "end": "1678000"
  },
  {
    "text": "bit impatient you might have heard of dynamo DB I mean your view of her DynamoDB so DynamoDB is or no sequel",
    "start": "1599420",
    "end": "1607760"
  },
  {
    "text": "database it's actually a project that we launched in the mid 2000 so 2007 2009 Amazon",
    "start": "1607760",
    "end": "1618530"
  },
  {
    "text": "becomes was trying to scale and we had a lot of issues with scaling our transactional database we were running",
    "start": "1618530",
    "end": "1624980"
  },
  {
    "text": "Oracle database back in the days and we couldn't scale them up anymore so the traffic was jamming it was not a good",
    "start": "1624980",
    "end": "1631130"
  },
  {
    "text": "user experience when we listened or when we did an audit of all the relation all",
    "start": "1631130",
    "end": "1639050"
  },
  {
    "text": "the database queries what we realized is 70% of our queries we're",
    "start": "1639050",
    "end": "1644240"
  },
  {
    "text": "non-transactional and we were using transactional database with 70% of our query non-transactional first lesson",
    "start": "1644240",
    "end": "1652580"
  },
  {
    "text": "here is actually audit your queries buggy because very often we think queries are transactional when in fact",
    "start": "1652580",
    "end": "1659420"
  },
  {
    "text": "they're not the second thing is we went into building a system called dynamo which would allow us to scale so we",
    "start": "1659420",
    "end": "1667790"
  },
  {
    "text": "moved many of our system to dynamo transitionally and now most of amazon.com is running both on Amazon",
    "start": "1667790",
    "end": "1674570"
  },
  {
    "text": "DynamoDB and aura RDS and dynamo DB if",
    "start": "1674570",
    "end": "1680630"
  },
  {
    "start": "1678000",
    "end": "1724000"
  },
  {
    "text": "you wonder if it scales just let me give you a couple of numbers you know prime",
    "start": "1680630",
    "end": "1686600"
  },
  {
    "text": "day prime day is a day in the year where we actually open the gate we give a lot of sales so you have a lot of people",
    "start": "1686600",
    "end": "1696080"
  },
  {
    "text": "coming and buy and this is the time of the where the traffic grows dramatically and",
    "start": "1696080",
    "end": "1701690"
  },
  {
    "text": "we use DynamoDB to scale right and it was handling 13 million requests per",
    "start": "1701690",
    "end": "1708970"
  },
  {
    "text": "second at peak right this is dynamodb okay 13 million",
    "start": "1708970",
    "end": "1714260"
  },
  {
    "text": "requests per second it's kind of a big deal actually in all my career I've",
    "start": "1714260",
    "end": "1719720"
  },
  {
    "text": "never seen a system handling that much traffic at peak time okay and dynamodb",
    "start": "1719720",
    "end": "1725960"
  },
  {
    "start": "1724000",
    "end": "1771000"
  },
  {
    "text": "just released really a few few a few months ago actually I think 12 11 months",
    "start": "1725960",
    "end": "1732590"
  },
  {
    "text": "ago a system called DynamoDB stream DynamoDB stream is a way to capture",
    "start": "1732590",
    "end": "1738440"
  },
  {
    "text": "changes within DynamoDB so if you write into your table we output out of",
    "start": "1738440",
    "end": "1745850"
  },
  {
    "text": "DynamoDB a stream of information of everything what you've done in the table so the reads the writes the updates and",
    "start": "1745850",
    "end": "1751670"
  },
  {
    "text": "then you can capture that with a lambda function for example and do computing on",
    "start": "1751670",
    "end": "1757400"
  },
  {
    "text": "top of this and when we launch this a lot of folks started to use that system",
    "start": "1757400",
    "end": "1763580"
  },
  {
    "text": "to replicate data from one DynamoDB table to another so we thought okay",
    "start": "1763580",
    "end": "1769280"
  },
  {
    "text": "let's make this simple for our customers so we launched something called global tables and this is already generally",
    "start": "1769280",
    "end": "1776210"
  },
  {
    "start": "1771000",
    "end": "1850000"
  },
  {
    "text": "available everyone can use this and this is a multi master multi-region endpoint",
    "start": "1776210",
    "end": "1781490"
  },
  {
    "text": "for dynamodb so that means that you have a global table that is available in most",
    "start": "1781490",
    "end": "1787790"
  },
  {
    "text": "of the region that you can access anywhere you can write and read anywhere around the world and this is going to be",
    "start": "1787790",
    "end": "1795500"
  },
  {
    "text": "actually the main tool that I will use for the demos because we're going to do some demos I'm going to build one",
    "start": "1795500",
    "end": "1801620"
  },
  {
    "text": "architecture from scratch with you global table is actually very good for",
    "start": "1801620",
    "end": "1809300"
  },
  {
    "text": "distribute the application bear in mind that the replication is a synchronous so you need to end global table is eventual",
    "start": "1809300",
    "end": "1817010"
  },
  {
    "text": "consistent we don't have true consistency so that means you cannot lock a table in one region and wait for",
    "start": "1817010",
    "end": "1824450"
  },
  {
    "text": "the data to be replicated everywhere so it's eventual consistent so when you design your app it needs to handle",
    "start": "1824450",
    "end": "1831380"
  },
  {
    "text": "eventual consistency but eventually all the data in the nodes will converge to",
    "start": "1831380",
    "end": "1838190"
  },
  {
    "text": "the same same value and it's used in a lot of scenarios so now folks started to",
    "start": "1838190",
    "end": "1844640"
  },
  {
    "text": "use it for disaster recovery but actually a lot for active active architecture when you go multi region",
    "start": "1844640",
    "end": "1853670"
  },
  {
    "start": "1850000",
    "end": "1883000"
  },
  {
    "text": "there is very important tool that you need to use and that's what we call a",
    "start": "1853670",
    "end": "1860150"
  },
  {
    "text": "load balancer but you don't want to load balance within one region you want to load balance within multiple regions so",
    "start": "1860150",
    "end": "1867380"
  },
  {
    "text": "we have to balance the traffic on the dns level so you have a DNS request and",
    "start": "1867380",
    "end": "1872630"
  },
  {
    "text": "then we move the traffic from one region to another and to do this you need to have what we call routing routing",
    "start": "1872630",
    "end": "1879320"
  },
  {
    "text": "policies sorry my French accent when you",
    "start": "1879320",
    "end": "1884450"
  },
  {
    "start": "1883000",
    "end": "2053000"
  },
  {
    "text": "have broaching policies you have few scenarios one is called latency based routing and this is what we call like is",
    "start": "1884450",
    "end": "1891140"
  },
  {
    "text": "to kind of prioritize for the lowest possible latency so that means if I have resources in one region or another we",
    "start": "1891140",
    "end": "1899270"
  },
  {
    "text": "always going to send the traffic to the lowest latency order - for that",
    "start": "1899270",
    "end": "1904550"
  },
  {
    "text": "particular user so if I am a user in a US and the region is in the US here is",
    "start": "1904550",
    "end": "1911090"
  },
  {
    "text": "going to go there if I have another region in Europe the latency is going to",
    "start": "1911090",
    "end": "1916460"
  },
  {
    "text": "be over 130 milliseconds so we're not going to send the traffic there but it's only latency base and latency can change",
    "start": "1916460",
    "end": "1923900"
  },
  {
    "text": "right so you can have sometimes resource be an a that has different value and",
    "start": "1923900",
    "end": "1929420"
  },
  {
    "text": "maybe add a different time this one might have a bigger latency than this",
    "start": "1929420",
    "end": "1934730"
  },
  {
    "text": "one but this is a very good policy to have the best and fast latency and this",
    "start": "1934730",
    "end": "1942080"
  },
  {
    "text": "is the policy that is often used for gaming companies where latency is very very important another policy is called",
    "start": "1942080",
    "end": "1949940"
  },
  {
    "text": "geo dns policy so that means your DNS or you rub the traffic based on the",
    "start": "1949940",
    "end": "1955100"
  },
  {
    "text": "location of a user if my user in the US I will automatically rub the traffic to",
    "start": "1955100",
    "end": "1961610"
  },
  {
    "text": "the US region because I'm a your user in the US I will be there and it doesn't necessarily",
    "start": "1961610",
    "end": "1969040"
  },
  {
    "text": "follow the latency so I can sometimes have stronger latency here but since my",
    "start": "1969040",
    "end": "1976840"
  },
  {
    "text": "location is us the traffic will always be going there and this is very good",
    "start": "1976840",
    "end": "1982440"
  },
  {
    "text": "routing policy if you have strong compliancy requirement or if you want",
    "start": "1982440",
    "end": "1988960"
  },
  {
    "text": "for example that European users are only in database in Europe or us users only",
    "start": "1988960",
    "end": "1995560"
  },
  {
    "text": "in database in US so this system is also used a lot for this kind of operation",
    "start": "1995560",
    "end": "2000620"
  },
  {
    "text": "and then here what we call weighted round robin a weighted round robin is like ping pong is like you go from one",
    "start": "2000620",
    "end": "2007830"
  },
  {
    "text": "to another and you can affect affect the traffic so your request will go one and",
    "start": "2007830",
    "end": "2013680"
  },
  {
    "text": "then the other and then one and then the other and in case and the fourth one",
    "start": "2013680",
    "end": "2022230"
  },
  {
    "text": "sorry the first one is failover and if you have any of those three policies in use",
    "start": "2022230",
    "end": "2028530"
  },
  {
    "text": "and all of a sudden one of the resources one of the regions has issues with one",
    "start": "2028530",
    "end": "2033960"
  },
  {
    "text": "of the services it will call what we call a failure so you have DNS failover",
    "start": "2033960",
    "end": "2041670"
  },
  {
    "text": "so that means my entire traffic will move to one region so you can combine active active with DNS failover so",
    "start": "2041670",
    "end": "2050010"
  },
  {
    "text": "that's kind of the perfect scenarios for us right so another feature that we",
    "start": "2050010",
    "end": "2056669"
  },
  {
    "start": "2053000",
    "end": "2130000"
  },
  {
    "text": "launched by eight months ago it's called support for custom domain",
    "start": "2056669",
    "end": "2063300"
  },
  {
    "text": "names so API gateway is a service that can put in front of lamda ec2 instance",
    "start": "2063300",
    "end": "2070440"
  },
  {
    "text": "or containers and that gives you an API endpoint a way to manage your API a way",
    "start": "2070440",
    "end": "2076139"
  },
  {
    "text": "to staging which was throttling of this kind of functionality but when we",
    "start": "2076140",
    "end": "2082050"
  },
  {
    "text": "launched API gateway a didn't support custom domain so we had we gave by",
    "start": "2082050",
    "end": "2087870"
  },
  {
    "text": "default domain name to the to the API endpoint and obviously if you have a",
    "start": "2087870",
    "end": "2094169"
  },
  {
    "text": "deal domaine in your API endpoint than you have in your DNS you have C and C C",
    "start": "2094169",
    "end": "2100710"
  },
  {
    "text": "names mismatched so you can't have this kind of routing so we launched what we",
    "start": "2100710",
    "end": "2106050"
  },
  {
    "text": "call support for custom domain names so that means now you can take the same domain name that you will have for your",
    "start": "2106050",
    "end": "2113359"
  },
  {
    "text": "DNS and use it for your endpoints and now we have a capability to do all of a",
    "start": "2113359",
    "end": "2120240"
  },
  {
    "text": "sudden server less multi-region active active sir architectures okay so that",
    "start": "2120240",
    "end": "2128700"
  },
  {
    "text": "will be the demo demo we'll do something like this so we're gonna have a domain",
    "start": "2128700",
    "end": "2135810"
  },
  {
    "start": "2130000",
    "end": "3065000"
  },
  {
    "text": "so it's called global add or not me and I will be one user I will send some API",
    "start": "2135810",
    "end": "2141780"
  },
  {
    "text": "requests to to region my regions are identical they have one API gateway with",
    "start": "2141780",
    "end": "2148650"
  },
  {
    "text": "some lambda functions that supports a bunch of different API I get a post and a health check and then I'm using",
    "start": "2148650",
    "end": "2154940"
  },
  {
    "text": "dynamodb global table to replicate the data asynchronously between two region",
    "start": "2154940",
    "end": "2160470"
  },
  {
    "text": "so that means if I can if I make a request right here and then I made a",
    "start": "2160470",
    "end": "2165839"
  },
  {
    "text": "read here I should be able to see the value okay so I'm just gonna show you how to do this so I'll get off the",
    "start": "2165839",
    "end": "2172560"
  },
  {
    "text": "slides and let's start building some global table so this is the this is the",
    "start": "2172560",
    "end": "2179069"
  },
  {
    "text": "console for dynamodb so when you go on to the edibles console and you want to",
    "start": "2179069",
    "end": "2185040"
  },
  {
    "text": "create a table you can do something like this trade table and let's give it a",
    "start": "2185040",
    "end": "2191849"
  },
  {
    "text": "name so let's call it Lisbon is gone demo and let's give a part string cheese",
    "start": "2191849",
    "end": "2198119"
  },
  {
    "text": "so let's call this item ID and this is all I need to create the table a table",
    "start": "2198119",
    "end": "2204119"
  },
  {
    "text": "in dynamo DB needs the name and the primary key a primary key is a way to",
    "start": "2204119",
    "end": "2210000"
  },
  {
    "text": "address a particular item in the table okay so for example here I'm gonna store",
    "start": "2210000",
    "end": "2215700"
  },
  {
    "text": "some integer or some string and actually this is a string so I'm gonna store a string and I'll be able to call this",
    "start": "2215700",
    "end": "2222329"
  },
  {
    "text": "item by this idea when you do a global table the global",
    "start": "2222329",
    "end": "2227740"
  },
  {
    "text": "table currently as to have zero data into it eventually you'll be able to",
    "start": "2227740",
    "end": "2233890"
  },
  {
    "text": "migrate DynamoDB table to a global table but currently when you start a global table it needs to be empty",
    "start": "2233890",
    "end": "2240010"
  },
  {
    "text": "so now I have my table called Lisbon and you see there are zero items in there and if you go into the console there is",
    "start": "2240010",
    "end": "2247360"
  },
  {
    "text": "this little tab here or global table and when you click on it you see there",
    "start": "2247360",
    "end": "2253900"
  },
  {
    "text": "actually that message and this is the stream the DynamoDB streams that I",
    "start": "2253900",
    "end": "2260110"
  },
  {
    "text": "talked about which is actually the service that take a particular event on",
    "start": "2260110",
    "end": "2265720"
  },
  {
    "text": "the database and replicate this in a stream that is outputting outside the database so when you want to use global",
    "start": "2265720",
    "end": "2271720"
  },
  {
    "text": "tables you need to enable strength so let's enable stream enable stream we'll",
    "start": "2271720",
    "end": "2276760"
  },
  {
    "text": "take the new object the old object so you have all the information and now I can start creating what we call a global",
    "start": "2276760",
    "end": "2283360"
  },
  {
    "text": "table and I can start to add regions to it so when you do this you just select",
    "start": "2283360",
    "end": "2289840"
  },
  {
    "text": "the region in where you want to have the replica so the DynamoDB replica here we",
    "start": "2289840",
    "end": "2296380"
  },
  {
    "text": "have created the region in Oregon so let's have another region let's say in",
    "start": "2296380",
    "end": "2301410"
  },
  {
    "text": "Virginia and then I can proceed that's",
    "start": "2301410",
    "end": "2306430"
  },
  {
    "text": "it so now my table is being replicated into another region and that's pretty",
    "start": "2306430",
    "end": "2313090"
  },
  {
    "text": "much it it takes a couple of seconds and then I can start operating to it and when you do this by default you get",
    "start": "2313090",
    "end": "2321480"
  },
  {
    "text": "five grid capacity and five write capacity but actually you can enable",
    "start": "2321480",
    "end": "2328810"
  },
  {
    "text": "auto scaling if you want and add that automatically scale up on your traffic now you can see I can go on the table",
    "start": "2328810",
    "end": "2337660"
  },
  {
    "text": "there and now I have my table here called Lisbon demo and this is in Oregon",
    "start": "2337660",
    "end": "2345130"
  },
  {
    "text": "and then I will have a Lisbon demo in Virginia okay so now my table my is",
    "start": "2345130",
    "end": "2352720"
  },
  {
    "text": "global between two region if you want you could definitely add more take more region actually you",
    "start": "2352720",
    "end": "2359030"
  },
  {
    "text": "can add all the regions and you can support pretty me pretty much all that",
    "start": "2359030",
    "end": "2364550"
  },
  {
    "text": "now when you add region you have to bear in mind that you also augment the number",
    "start": "2364550",
    "end": "2370220"
  },
  {
    "text": "of write and read so it will be more costly okay so only add region into the",
    "start": "2370220",
    "end": "2376400"
  },
  {
    "text": "regions that you really need so let's let's test that so I have two tables in",
    "start": "2376400",
    "end": "2382600"
  },
  {
    "text": "in two region one Oregon so now I can start to add items so let's create an",
    "start": "2382600",
    "end": "2388460"
  },
  {
    "text": "item and it's called that full bar because foo bar is the most popular idea",
    "start": "2388460",
    "end": "2394550"
  },
  {
    "text": "we can have so now I have an item in the database and you see when I create an",
    "start": "2394550",
    "end": "2400940"
  },
  {
    "text": "item it actually adds fields to it those I didn't add the fields it were added by",
    "start": "2400940",
    "end": "2407450"
  },
  {
    "text": "the global table and this is the origin origin of the object",
    "start": "2407450",
    "end": "2414620"
  },
  {
    "text": "okay so West two which is Oregon and this is the time at which the object was",
    "start": "2414620",
    "end": "2420620"
  },
  {
    "text": "installed and now if I go into the other region it will have the item in the table so you can click on the item and",
    "start": "2420620",
    "end": "2427730"
  },
  {
    "text": "you'll see now the item embossed region bar so then you can also start from the",
    "start": "2427730",
    "end": "2435580"
  },
  {
    "text": "the other other side so barfoo and then let's do that and then let's go straight",
    "start": "2435580",
    "end": "2442310"
  },
  {
    "text": "here and see if this has been replicated and you see item now is in global table and this is between two region is about",
    "start": "2442310",
    "end": "2449390"
  },
  {
    "text": "150 second big latency so now you're able to read and write from any region",
    "start": "2449390",
    "end": "2454580"
  },
  {
    "text": "so if you look at this now I have that built okay any question with global",
    "start": "2454580",
    "end": "2462800"
  },
  {
    "text": "table to start with it's good you can add as many regions as you want",
    "start": "2462800",
    "end": "2468110"
  },
  {
    "text": "okay so now let's sorry let's create what we call the API endpoint with the",
    "start": "2468110",
    "end": "2475550"
  },
  {
    "text": "lambda functions and to do this I created I created server less server",
    "start": "2475550",
    "end": "2482750"
  },
  {
    "text": "less server less template so I'm using the server list frame many of you know the surveillance",
    "start": "2482750",
    "end": "2489160"
  },
  {
    "text": "framework so when you when you build surveillance application you have the",
    "start": "2489160",
    "end": "2494560"
  },
  {
    "text": "possibility to use a bunch of different service framework I started to build",
    "start": "2494560",
    "end": "2500590"
  },
  {
    "text": "stop using the service framework but you can use Sam CLI you can use sparked different on the language of the on the",
    "start": "2500590",
    "end": "2507100"
  },
  {
    "text": "wheels and several ice templates you define your API using a templates but",
    "start": "2507100",
    "end": "2513520"
  },
  {
    "text": "it's a template that is built-in llamó and you have the name of the service on",
    "start": "2513520",
    "end": "2519250"
  },
  {
    "text": "top it's called block version two I can see the provider here server let's",
    "start": "2519250",
    "end": "2524470"
  },
  {
    "text": "suppose different clouds so you for this demo we do AWS then I can define the",
    "start": "2524470",
    "end": "2531400"
  },
  {
    "text": "security groups that I want the memory the environment and you see here I'm",
    "start": "2531400",
    "end": "2536890"
  },
  {
    "text": "using variables like this so that means I'm taking environment variables from a",
    "start": "2536890",
    "end": "2542140"
  },
  {
    "text": "file emma file is this one and i have a value called statutes okay so basically i",
    "start": "2542140",
    "end": "2549030"
  },
  {
    "text": "deploy an environment with some environment variable called 200 then i",
    "start": "2549030",
    "end": "2555550"
  },
  {
    "text": "can have a lot of stuff so this is the resources that i want and give it some security and roles define some actions",
    "start": "2555550",
    "end": "2563740"
  },
  {
    "text": "but the most important here is this function so i have three functions which going to be deploying lambda lambda is a",
    "start": "2563740",
    "end": "2570880"
  },
  {
    "text": "server last function that you allows you to run code just the function you don't",
    "start": "2570880",
    "end": "2577570"
  },
  {
    "text": "have to deploy the entire instance or anything you just give it a function and it will run it of three function one",
    "start": "2577570",
    "end": "2583450"
  },
  {
    "text": "called gets another one called post and another one called health this is to store data in the dynamodb disease this",
    "start": "2583450",
    "end": "2590920"
  },
  {
    "text": "is to store data into dynamodb this is to get this item that i store and this is to check a health and when you do",
    "start": "2590920",
    "end": "2598510"
  },
  {
    "text": "routing you know we talked about the DNS failover to understand if a resource is",
    "start": "2598510",
    "end": "2605560"
  },
  {
    "text": "working or if a region is working you need to support what we call health checks the health checks that are built",
    "start": "2605560",
    "end": "2612670"
  },
  {
    "text": "here is very very simple is simply returning the statute is simply returning 200 so by",
    "start": "2612670",
    "end": "2619079"
  },
  {
    "text": "default when I'm going to deploy that is just returning 200 I want to demo to you the failover so at",
    "start": "2619079",
    "end": "2625260"
  },
  {
    "text": "some point I will switch that to 400 it will return an error so we can have all the traffic move from one region to",
    "start": "2625260",
    "end": "2631560"
  },
  {
    "text": "another okay this is the purpose of the status my post function is taking input",
    "start": "2631560",
    "end": "2638670"
  },
  {
    "text": "like an item ID here he has also a body text the item ID and extract the session",
    "start": "2638670",
    "end": "2646589"
  },
  {
    "text": "comment and the item ID from the body of the message and then stores this into",
    "start": "2646589",
    "end": "2651800"
  },
  {
    "text": "dynamo DB so I put the items and when item ID and then session comment into my",
    "start": "2651800",
    "end": "2658770"
  },
  {
    "text": "global table I have another then get item gate item",
    "start": "2658770",
    "end": "2664470"
  },
  {
    "text": "takes the ID that I want to retrieve and then extracts this from dynamo so table",
    "start": "2664470",
    "end": "2672150"
  },
  {
    "text": "get item and you can you can set up your dynamo DB table like this your resource",
    "start": "2672150",
    "end": "2678930"
  },
  {
    "text": "this is just a hack why it's not necessarily production code is just to give you an idea of how this works so I",
    "start": "2678930",
    "end": "2685230"
  },
  {
    "text": "have now get a port and the health and then I can deploy this in two regions so",
    "start": "2685230",
    "end": "2692010"
  },
  {
    "text": "you see I'm supporting us 1 and us two so when I do my server list queries when",
    "start": "2692010",
    "end": "2700680"
  },
  {
    "text": "I go there so for example let's me go into my project",
    "start": "2700680",
    "end": "2705650"
  },
  {
    "text": "whoa but where is my product",
    "start": "2708310",
    "end": "2716930"
  },
  {
    "text": "here so what I can do I can do something query is called several s deploy and I",
    "start": "2720260",
    "end": "2726770"
  },
  {
    "text": "can define in which region I want my template to be deployed so just for the sake of it let's do deploy us east so",
    "start": "2726770",
    "end": "2735080"
  },
  {
    "text": "what it does it takes the templates takes the lambda functions and then start deploying the lambda function in",
    "start": "2735080",
    "end": "2741830"
  },
  {
    "text": "one region here the US east and you see this template is just taking this is",
    "start": "2741830",
    "end": "2748490"
  },
  {
    "text": "going through all that take packaging these and then packaging all the lambda",
    "start": "2748490",
    "end": "2754370"
  },
  {
    "text": "function into into package and then deploying this to lambda so when this is",
    "start": "2754370",
    "end": "2761330"
  },
  {
    "text": "done then this gives me basically an endpoint like this and I can start doing",
    "start": "2761330",
    "end": "2770510"
  },
  {
    "text": "something called let's do HD people do you see in the background no so you can",
    "start": "2770510",
    "end": "2776690"
  },
  {
    "text": "do something like this and then I'll",
    "start": "2776690",
    "end": "2781730"
  },
  {
    "text": "give what did I do",
    "start": "2781730",
    "end": "2786700"
  },
  {
    "text": "it's the wrong endpoint",
    "start": "2787000",
    "end": "2790720"
  },
  {
    "text": "don't want does what does he do this and I'll create another item ID and I'll",
    "start": "2794780",
    "end": "2805940"
  },
  {
    "text": "give you give it the name bar and what",
    "start": "2805940",
    "end": "2814310"
  },
  {
    "text": "it does is now he's taken my object and actually store that into my table so if",
    "start": "2814310",
    "end": "2820910"
  },
  {
    "text": "I go inside my global to table I have an item now called foo foo bar and this was",
    "start": "2820910",
    "end": "2827630"
  },
  {
    "text": "just deployed now so that means my deployment as work okay and just to show you because I change",
    "start": "2827630",
    "end": "2836840"
  },
  {
    "text": "the name of the table is in this demo I'm just using a table called global - okay so then I can do the same into the",
    "start": "2836840",
    "end": "2844280"
  },
  {
    "text": "other region I can do SNS deploy and do this in the US - and then I'll have",
    "start": "2844280",
    "end": "2851240"
  },
  {
    "text": "endpoints in both regions right so let's leave it do that so I want to show you",
    "start": "2851240",
    "end": "2860750"
  },
  {
    "text": "basically what has been deployed so this is my my lambda service in AWS in the",
    "start": "2860750",
    "end": "2868190"
  },
  {
    "text": "console so you can see a bunch of lambda functions here and then I can I can sort",
    "start": "2868190",
    "end": "2877520"
  },
  {
    "text": "them so I have a bunch of services the ones I'm interested is my services",
    "start": "2877520",
    "end": "2883339"
  },
  {
    "text": "called blood v2 what does the name of the service that was in the template so you remember you remember the template",
    "start": "2883339",
    "end": "2889400"
  },
  {
    "text": "here block b2 this is the name of a service so all my functions will have block b2 and then the name of the",
    "start": "2889400",
    "end": "2895940"
  },
  {
    "text": "function and then I have the functions here so you can start seeing the function and what it does is shows me",
    "start": "2895940",
    "end": "2904609"
  },
  {
    "text": "that my function is actually linked to API gateway this is good because I give it an endpoint in the inside this",
    "start": "2904609",
    "end": "2909950"
  },
  {
    "text": "template and then it supports x-ray CloudWatch DynamoDB and also easy to so",
    "start": "2909950",
    "end": "2916490"
  },
  {
    "text": "this is a lot of stuff that I've been enabled but what is most important is you remember this statues environment",
    "start": "2916490",
    "end": "2922310"
  },
  {
    "text": "variable right so you see my environment variable has been deployed now means that this function will return",
    "start": "2922310",
    "end": "2929569"
  },
  {
    "text": "200 okay so when I will probe that through an else check it will always",
    "start": "2929569",
    "end": "2934729"
  },
  {
    "text": "return 200 I can change that value a bit later but first I want that to return 200 so I'll call my lambda functions",
    "start": "2934729",
    "end": "2941599"
  },
  {
    "text": "that being deployed so you see this now has been deploying to another API it's",
    "start": "2941599",
    "end": "2946849"
  },
  {
    "text": "called our CP okay and then this one is 3b ox okay",
    "start": "2946849",
    "end": "2952519"
  },
  {
    "text": "so now I have a system that is that is like this let me show you the slide so that you have it this is my WB global",
    "start": "2952519",
    "end": "2962059"
  },
  {
    "text": "table so now something like this okay now if I go away this is now what we",
    "start": "2962059",
    "end": "2967429"
  },
  {
    "text": "have we have deployed the API gateway with the lambda functions in both",
    "start": "2967429",
    "end": "2973519"
  },
  {
    "text": "regions and you can go and check actually in the console or so that your API gateway is correctly deployed so",
    "start": "2973519",
    "end": "2982429"
  },
  {
    "text": "here's my gateway and you see I have my dev blog - API that is being deployed in",
    "start": "2982429",
    "end": "2988099"
  },
  {
    "text": "Oregon and I also have another one that is in Virginia so if I go in Virginia",
    "start": "2988099",
    "end": "2994640"
  },
  {
    "text": "you'll be able to see the same API endpoint there okay so here I have my",
    "start": "2994640",
    "end": "3001630"
  },
  {
    "text": "API gateway there and you see myapi gateways she pours the paths that are",
    "start": "3001630",
    "end": "3006640"
  },
  {
    "text": "designed so create this is the post function has the get to get the item and",
    "start": "3006640",
    "end": "3013390"
  },
  {
    "text": "the health which is also a get so now I've both systems deployed globally so",
    "start": "3013390",
    "end": "3019089"
  },
  {
    "text": "this is what we have but not that's not enough okay so what we need is really to",
    "start": "3019089",
    "end": "3024819"
  },
  {
    "text": "have routing policy between different systems so now let's let's back up so I",
    "start": "3024819",
    "end": "3031989"
  },
  {
    "text": "have a domain name this is my this is my own I don't at me and what I do when I",
    "start": "3031989",
    "end": "3039429"
  },
  {
    "text": "did there I created a cname called global global a doorknob thing you see",
    "start": "3039429",
    "end": "3046150"
  },
  {
    "text": "when you look at it is actually define an endpoint called global Adam dot me",
    "start": "3046150",
    "end": "3053589"
  },
  {
    "text": "and what it use is use a traffic policy my traffic policy is called",
    "start": "3053589",
    "end": "3059720"
  },
  {
    "text": "blood nice so let's go and have a look what that is and we saw the traffic",
    "start": "3059720",
    "end": "3065270"
  },
  {
    "start": "3065000",
    "end": "3124000"
  },
  {
    "text": "policy is what it does to route to balanced traffic between regions so you",
    "start": "3065270",
    "end": "3070760"
  },
  {
    "text": "had the weighted round robin you had latency based routing or you had the",
    "start": "3070760",
    "end": "3076720"
  },
  {
    "text": "geolocation based routing so here what I've done is I created what we call a",
    "start": "3076720",
    "end": "3083869"
  },
  {
    "text": "weighted round robin policy so I have two weights of 50 you see in the end of",
    "start": "3083869",
    "end": "3090470"
  },
  {
    "text": "the room it's good so I have two weights so that means I will balance the load",
    "start": "3090470",
    "end": "3095799"
  },
  {
    "text": "between the two region 50% and 50% and I'm heading health checks okay and the",
    "start": "3095799",
    "end": "3102559"
  },
  {
    "text": "health check will target the lambda function that returns 200 okay this to",
    "start": "3102559",
    "end": "3109970"
  },
  {
    "text": "policy they go and target two end points and the endpoints with value called D",
    "start": "3109970",
    "end": "3116030"
  },
  {
    "text": "and D and this is okay this not the end point that we had for API gateway and",
    "start": "3116030",
    "end": "3121460"
  },
  {
    "text": "you write actually when you deploy API gateway you see it as it has an API that",
    "start": "3121460",
    "end": "3129440"
  },
  {
    "start": "3124000",
    "end": "3187000"
  },
  {
    "text": "is very different than what we had what we have in this target right and this is",
    "start": "3129440",
    "end": "3135920"
  },
  {
    "text": "because you're here using the normal see name of the API gateway but we want to",
    "start": "3135920",
    "end": "3141980"
  },
  {
    "text": "use a custom domain so when you are in API gateway and you want to go global you need to use what we call custom",
    "start": "3141980",
    "end": "3148520"
  },
  {
    "text": "domain and here you see I imported my certificate I don't got me and with the",
    "start": "3148520",
    "end": "3154400"
  },
  {
    "text": "cname global and assign this to my API gateway okay so now my API gateway you",
    "start": "3154400",
    "end": "3162920"
  },
  {
    "text": "can see the path when it takes it takes my API gateway and then I can start",
    "start": "3162920",
    "end": "3169339"
  },
  {
    "text": "watching traffic with the right don't see name so that means now I can really",
    "start": "3169339",
    "end": "3174500"
  },
  {
    "text": "have a policy to between that target",
    "start": "3174500",
    "end": "3181130"
  },
  {
    "text": "this is the target domain name in one region and there are other and this is the target name is the one that you use",
    "start": "3181130",
    "end": "3188809"
  },
  {
    "text": "in the routing policies okay so and route 53 will route traffic it will",
    "start": "3188809",
    "end": "3194420"
  },
  {
    "text": "wrap traffic to the different target names okay so now I have the system",
    "start": "3194420",
    "end": "3199970"
  },
  {
    "text": "pretty much ready right so let's have a look at the health check because now my health check is supposedly returning 200",
    "start": "3199970",
    "end": "3207440"
  },
  {
    "text": "so when you create sorry when you create a health check let's create one from",
    "start": "3207440",
    "end": "3212780"
  },
  {
    "text": "scratch so that you know you know a little bit what it is you give it a name so for example test you define what it",
    "start": "3212780",
    "end": "3220309"
  },
  {
    "text": "is and here you can give it a cost domain name okay and when you do a domain name you can see also advanced",
    "start": "3220309",
    "end": "3226339"
  },
  {
    "text": "configuration and this is what I want to show you you can request on your health",
    "start": "3226339",
    "end": "3231410"
  },
  {
    "text": "check every 30 seconds or every 10 seconds okay the most important is what",
    "start": "3231410",
    "end": "3238460"
  },
  {
    "text": "we call failure threshold a failure threshold is the number of time my",
    "start": "3238460",
    "end": "3243980"
  },
  {
    "text": "health check will have to return error to believe that this is actually down",
    "start": "3243980",
    "end": "3250609"
  },
  {
    "text": "okay and this is done to avoid intermittent errors in distributed in",
    "start": "3250609",
    "end": "3256579"
  },
  {
    "text": "distributed system one of the biggest problem is errors that are not real because you have such a big network this",
    "start": "3256579",
    "end": "3263569"
  },
  {
    "text": "goes over the internet so at any given time you can have a network error it doesn't mean the system is down it just",
    "start": "3263569",
    "end": "3269539"
  },
  {
    "text": "means maybe your time your request is going to timeout that didn't go didn't go through so you don't want necessarily",
    "start": "3269539",
    "end": "3275569"
  },
  {
    "text": "to over react and this is a very very important thing when you do DNS failover",
    "start": "3275569",
    "end": "3281329"
  },
  {
    "text": "do not over react because we will have intermittent errors so you need to",
    "start": "3281329",
    "end": "3286819"
  },
  {
    "text": "figure out in your system what kind of errors you are willing to accept before believing that the system is actually",
    "start": "3286819",
    "end": "3293329"
  },
  {
    "text": "experiencing real issue and here we are we're in actually the system I have",
    "start": "3293329",
    "end": "3299240"
  },
  {
    "text": "we're doing a fast check fast check so every 10 seconds and I will have a",
    "start": "3299240",
    "end": "3304520"
  },
  {
    "text": "threshold of 1 so that means that the first errors I will over react which is absolutely",
    "start": "3304520",
    "end": "3310520"
  },
  {
    "text": "what not you should do ok so do not do that but I want to demo so I want the",
    "start": "3310520",
    "end": "3317720"
  },
  {
    "text": "thing to fail fast so I created two health check okay and the health check what they do",
    "start": "3317720",
    "end": "3325019"
  },
  {
    "text": "is they target this URL which is my API",
    "start": "3325019",
    "end": "3331079"
  },
  {
    "text": "gateway and it calls their check okay so now I'm targeting the API gateway I say",
    "start": "3331079",
    "end": "3336869"
  },
  {
    "text": "if you have errors then fail overs I",
    "start": "3336869",
    "end": "3342170"
  },
  {
    "text": "need so fast one 10 seconds with a fetcher failure Trish hold up one and",
    "start": "3342170",
    "end": "3347640"
  },
  {
    "text": "both are like this and now you can see actually that all the health checkers are returning 200 ok so this is the",
    "start": "3347640",
    "end": "3355259"
  },
  {
    "start": "3355000",
    "end": "3537000"
  },
  {
    "text": "health check of us east so that means Virginia so let's now go and break the",
    "start": "3355259",
    "end": "3361469"
  },
  {
    "text": "whole thing actually now let's make a request first on the system to show that the data is going to be replicated I",
    "start": "3361469",
    "end": "3366739"
  },
  {
    "text": "don't want I love breaking things that's the problem so let's first actually create a tab and",
    "start": "3366739",
    "end": "3374180"
  },
  {
    "text": "then let's send some data into into that",
    "start": "3374180",
    "end": "3379979"
  },
  {
    "text": "so what I'm doing here I'm doing a for loop between 0 70 and",
    "start": "3379979",
    "end": "3387029"
  },
  {
    "text": "for each of the I between 0 and 70 I create an item called foo bar 0 1 2 3 4",
    "start": "3387029",
    "end": "3394289"
  },
  {
    "text": "5 6 7 ok so I'm going to post a lot of data there and there it is what I'm",
    "start": "3394289",
    "end": "3400380"
  },
  {
    "text": "doing is I'm gonna create another tab as well and I'll explain you why so when",
    "start": "3400380",
    "end": "3409799"
  },
  {
    "text": "you do requests like this in HTTP your local machine actually is loped is",
    "start": "3409799",
    "end": "3416539"
  },
  {
    "text": "caching the dns resolver so sometimes you have stickiness on that query so",
    "start": "3416539",
    "end": "3422549"
  },
  {
    "text": "what you need to do is create two threads so now I have a lot of items that is being created into dynamodb so I",
    "start": "3422549",
    "end": "3428369"
  },
  {
    "text": "can do then into the console and you'll see in my table called global I'm gonna",
    "start": "3428369",
    "end": "3433710"
  },
  {
    "text": "start adding items that is being created from a lot of different regions so you see now items that west east west east",
    "start": "3433710",
    "end": "3441509"
  },
  {
    "text": "so it goes a bit well in this case like",
    "start": "3441509",
    "end": "3446670"
  },
  {
    "text": "this and this is something that is very important to realize is when you are",
    "start": "3446670",
    "end": "3451769"
  },
  {
    "text": "routing policy 5050 it does mean that it's one here one here one",
    "start": "3451769",
    "end": "3456779"
  },
  {
    "text": "there it's after about thousand requests eventually the load will balance across",
    "start": "3456779",
    "end": "3463679"
  },
  {
    "text": "both regions so this is the first thing that you need to realize that's why I don't necessarily have a wide range of",
    "start": "3463679",
    "end": "3472140"
  },
  {
    "text": "US and West but you see for example here I do have some East I do have some West so you see let's go have a bunch more",
    "start": "3472140",
    "end": "3479160"
  },
  {
    "text": "items so I can I have some East you see here and then I have some West at the",
    "start": "3479160",
    "end": "3485699"
  },
  {
    "text": "end okay so eventually 5050 between this so not much traffic is really",
    "start": "3485699",
    "end": "3491900"
  },
  {
    "text": "distributed between two region so let's go and see okay this has stopped this",
    "start": "3491900",
    "end": "3498989"
  },
  {
    "text": "has stopped so now let's delete all the items here in the database I have 100",
    "start": "3498989",
    "end": "3506279"
  },
  {
    "text": "items yes and then the next 70 or the next 40",
    "start": "3506279",
    "end": "3515069"
  },
  {
    "text": "sorry 27 to 1740 something is wrong",
    "start": "3515069",
    "end": "3520349"
  },
  {
    "text": "there let's delete everything now we",
    "start": "3520349",
    "end": "3527159"
  },
  {
    "text": "have hundred for it okay so all my data has been deleted in all the regions okay",
    "start": "3527159",
    "end": "3533009"
  },
  {
    "text": "so now my region is empty of data okay we're all clear we are empty of data and all my health",
    "start": "3533009",
    "end": "3540209"
  },
  {
    "start": "3537000",
    "end": "3600000"
  },
  {
    "text": "checks written 200 so now let's break stuff so let's put here a 400 and let's save this and let's",
    "start": "3540209",
    "end": "3548900"
  },
  {
    "text": "very fast now see this and you see already my data is gonna start reporting",
    "start": "3548900",
    "end": "3557069"
  },
  {
    "text": "errors oops so which region oh I'm in Oregon up",
    "start": "3557069",
    "end": "3562289"
  },
  {
    "text": "wrong region so you see now my API is starting to see failures of this",
    "start": "3562289",
    "end": "3569189"
  },
  {
    "text": "endpoint so that means my system is gonna start thinking that oh there is a",
    "start": "3569189",
    "end": "3575640"
  },
  {
    "text": "lot of mistakes and let's start to fail over and the system when it checks an",
    "start": "3575640",
    "end": "3581789"
  },
  {
    "text": "API it checks the API from 6 different regions currently and three",
    "start": "3581789",
    "end": "3587130"
  },
  {
    "text": "abilities on so that means 18 18 different end point so we wait that all",
    "start": "3587130",
    "end": "3594000"
  },
  {
    "text": "18 of them will fail okay so that means we have to wait a little bit 10 seconds",
    "start": "3594000",
    "end": "3600210"
  },
  {
    "text": "distributed so that's actually goes quite fast and actually you'll see now the system is already unhealthy so that",
    "start": "3600210",
    "end": "3606690"
  },
  {
    "text": "means all my traffic will be pushed to one region so let's verify let's go",
    "start": "3606690",
    "end": "3613470"
  },
  {
    "text": "there and let's move more traffic and let's redo the whole thing and then I",
    "start": "3613470",
    "end": "3619349"
  },
  {
    "text": "can start checking the dynami DB table and you'll see eventually all my items",
    "start": "3619349",
    "end": "3625130"
  },
  {
    "text": "but we'll be in West - alright",
    "start": "3625130",
    "end": "3631578"
  },
  {
    "text": "so that means there's a demo issue what",
    "start": "3633940",
    "end": "3640770"
  },
  {
    "text": "what what is happening",
    "start": "3640770",
    "end": "3646140"
  },
  {
    "text": "it's my traffic am I in the right that's interesting",
    "start": "3646140",
    "end": "3651630"
  },
  {
    "text": "this is really pairs among healthy is my West so it should go all the traffic to",
    "start": "3651630",
    "end": "3657610"
  },
  {
    "text": "the east right we all agree on that why do West regions here oh because I",
    "start": "3657610",
    "end": "3670000"
  },
  {
    "text": "was checking in Virginia because the data is not there right so it's not synchronized all right so let's check",
    "start": "3670000",
    "end": "3675130"
  },
  {
    "text": "that items",
    "start": "3675130",
    "end": "3678000"
  },
  {
    "text": "what the hell is happening my gmail has some issues let's let's check this out",
    "start": "3682700",
    "end": "3688070"
  },
  {
    "text": "so let's go into the code global table here this it's deployed let's check my",
    "start": "3688070",
    "end": "3697580"
  },
  {
    "text": "health check that's interesting West is deployed 200 200 which wonder",
    "start": "3697580",
    "end": "3706070"
  },
  {
    "text": "function did are the right lambda functions here yes let's go into the",
    "start": "3706070",
    "end": "3713060"
  },
  {
    "text": "east",
    "start": "3713060",
    "end": "3715240"
  },
  {
    "text": "[Music] instead block my API gateway is there",
    "start": "3719010",
    "end": "3725300"
  },
  {
    "text": "three Bo X is anyone spotted some errors",
    "start": "3725300",
    "end": "3731930"
  },
  {
    "text": "that I haven't seen I gave 100% hundred dollar credit to WS if you find the error with me $100 thousand dollars",
    "start": "3731930",
    "end": "3740630"
  },
  {
    "text": "let's bring the mistakes up it's probably an error in my environment variable somewhere what's up sorry I",
    "start": "3740630",
    "end": "3753680"
  },
  {
    "text": "don't yeah let's reload that just to see",
    "start": "3753680",
    "end": "3760130"
  },
  {
    "text": "because the DynamoDB it's it's reloading",
    "start": "3760130",
    "end": "3765660"
  },
  {
    "text": "the right ish the right stuff okay let's delete all the items here and see what's",
    "start": "3765660",
    "end": "3770940"
  },
  {
    "text": "happening why actually let's go in lambda here and",
    "start": "3770940",
    "end": "3777240"
  },
  {
    "text": "see that my code really has the the get",
    "start": "3777240",
    "end": "3784470"
  },
  {
    "text": "especially I want to see the get right so function",
    "start": "3784470",
    "end": "3790640"
  },
  {
    "text": "but I just trust me it works huh its",
    "start": "3793040",
    "end": "3798050"
  },
  {
    "text": "first time the demo fails buddy I probably did something wrong to it a few",
    "start": "3798050",
    "end": "3803330"
  },
  {
    "text": "years you say did I change the as the global to [Music]",
    "start": "3803330",
    "end": "3814290"
  },
  {
    "text": "thousand dollars guys tell you come up with the right thing",
    "start": "3814290",
    "end": "3820880"
  },
  {
    "text": "what's up you have a microphone ruff",
    "start": "3823090",
    "end": "3828820"
  },
  {
    "text": "ah there's smart did I have the right the wrong else checks here on my traffic",
    "start": "3828820",
    "end": "3835630"
  },
  {
    "text": "policies",
    "start": "3835630",
    "end": "3838109"
  },
  {
    "text": "so much traffic policy here else check",
    "start": "3843220",
    "end": "3850060"
  },
  {
    "text": "the health check 7/7 e goes to West's",
    "start": "3850060",
    "end": "3858790"
  },
  {
    "text": "health check seven he goes to West's yes you're right you just you just earned",
    "start": "3858820",
    "end": "3869210"
  },
  {
    "text": "yourself a lot of credits awesome so yeah the error here as you as you very",
    "start": "3869210",
    "end": "3874430"
  },
  {
    "text": "well supported was that my traffic policy has the wrong API health check so",
    "start": "3874430",
    "end": "3880640"
  },
  {
    "text": "is as a health check from the wrong region so very well spotted so yeah it works trust me anyway if you want to",
    "start": "3880640",
    "end": "3892340"
  },
  {
    "text": "read all that from a blog post and see all the code it's actually on medium and",
    "start": "3892340",
    "end": "3897530"
  },
  {
    "text": "my github account I've done that from scratch so you can follow all the code",
    "start": "3897530",
    "end": "3903080"
  },
  {
    "text": "you can follow all the explanations there's three series of blog post and it also tells you how to do this within VPC",
    "start": "3903080",
    "end": "3910190"
  },
  {
    "text": "so if you want to deploy DynamoDB with a VPC endpoint and all that kind of stuff not everything is supported for example",
    "start": "3910190",
    "end": "3917630"
  },
  {
    "text": "coney toe authentication doesn't yet support multi-region so when you if you",
    "start": "3917630",
    "end": "3923450"
  },
  {
    "text": "want to use Kony toe you need to take create object in one in one region and",
    "start": "3923450",
    "end": "3928760"
  },
  {
    "text": "create the same user pool in the other one you can do this through a lambda but anyway what I just want to finish with",
    "start": "3928760",
    "end": "3935930"
  },
  {
    "text": "is few years ago it took injuring teams of twenty people and few months to",
    "start": "3935930",
    "end": "3940940"
  },
  {
    "text": "create that kind of things and now we can do this in couple of minutes when",
    "start": "3940940",
    "end": "3945980"
  },
  {
    "text": "you have good guys that can debug code thanks very much have a good day",
    "start": "3945980",
    "end": "3952630"
  },
  {
    "text": "and",
    "start": "3954610",
    "end": "3957610"
  }
]