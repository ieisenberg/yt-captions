[
  {
    "text": "I want to introduce to you something",
    "start": "320",
    "end": "2480"
  },
  {
    "text": "it's very exciting it is AWS Lambda",
    "start": "2480",
    "end": "6040"
  },
  {
    "text": "which is an event driven computer",
    "start": "6040",
    "end": "7480"
  },
  {
    "text": "service for dynamic",
    "start": "7480",
    "end": "10599"
  },
  {
    "text": "applications you can reduce your",
    "start": "13879",
    "end": "16000"
  },
  {
    "text": "development effort by writing no more",
    "start": "16000",
    "end": "18520"
  },
  {
    "text": "gluc Cod you can respond to new and",
    "start": "18520",
    "end": "22000"
  },
  {
    "text": "updated data quickly you can make",
    "start": "22000",
    "end": "24560"
  },
  {
    "text": "extending applications without by",
    "start": "24560",
    "end": "27359"
  },
  {
    "text": "writing new code without actually having",
    "start": "27359",
    "end": "29000"
  },
  {
    "text": "to change the old code",
    "start": "29000",
    "end": "30640"
  },
  {
    "text": "it can improve performance through",
    "start": "30640",
    "end": "33280"
  },
  {
    "text": "concurrency and you have to run no",
    "start": "33280",
    "end": "35680"
  },
  {
    "text": "servers no instances nothing you just",
    "start": "35680",
    "end": "39000"
  },
  {
    "text": "write a code and it will run for",
    "start": "39000",
    "end": "42200"
  },
  {
    "text": "you and so the focus here is on events",
    "start": "42200",
    "end": "46199"
  },
  {
    "text": "and so these events may be driven by for",
    "start": "46199",
    "end": "48559"
  },
  {
    "text": "example ads service services that will",
    "start": "48559",
    "end": "52000"
  },
  {
    "text": "trigger these events that could be for",
    "start": "52000",
    "end": "53559"
  },
  {
    "text": "example an",
    "start": "53559",
    "end": "55960"
  },
  {
    "text": "U an S3 upload notification or um in",
    "start": "55960",
    "end": "60600"
  },
  {
    "text": "Dynamo DB stream update but we'll get to",
    "start": "60600",
    "end": "62600"
  },
  {
    "text": "there in a minute and you'll write some",
    "start": "62600",
    "end": "64680"
  },
  {
    "text": "code in this case we were starting off",
    "start": "64680",
    "end": "67600"
  },
  {
    "text": "we'll just provide JavaScript which you",
    "start": "67600",
    "end": "69360"
  },
  {
    "text": "will be able to write other code later",
    "start": "69360",
    "end": "71200"
  },
  {
    "text": "on as well and most importantly as this",
    "start": "71200",
    "end": "75960"
  },
  {
    "text": "will run for you automatically without",
    "start": "75960",
    "end": "79320"
  },
  {
    "text": "any computer infrastructure that you",
    "start": "79320",
    "end": "81040"
  },
  {
    "text": "have to provision for",
    "start": "81040",
    "end": "83360"
  },
  {
    "text": "it this is easy to use low maintenance",
    "start": "83360",
    "end": "87840"
  },
  {
    "text": "you can run codes without managing INF",
    "start": "87840",
    "end": "89880"
  },
  {
    "text": "infastructure let me repeat that you can",
    "start": "89880",
    "end": "92799"
  },
  {
    "text": "wrote write code without having to",
    "start": "92799",
    "end": "95159"
  },
  {
    "text": "manage any infrastructure the cloud",
    "start": "95159",
    "end": "98079"
  },
  {
    "text": "function should write our in JavaScript",
    "start": "98079",
    "end": "100159"
  },
  {
    "text": "and Lambda will take care of managing",
    "start": "100159",
    "end": "102280"
  },
  {
    "text": "skaing monitoring and logging for you it",
    "start": "102280",
    "end": "105880"
  },
  {
    "text": "will respond very fast to events",
    "start": "105880",
    "end": "108520"
  },
  {
    "text": "execution of such a f function is in",
    "start": "108520",
    "end": "111320"
  },
  {
    "text": "milliseconds after that the event is",
    "start": "111320",
    "end": "113280"
  },
  {
    "text": "being triggered each event is then",
    "start": "113280",
    "end": "116240"
  },
  {
    "text": "processed through that status Cloud",
    "start": "116240",
    "end": "117960"
  },
  {
    "text": "function that you've written and",
    "start": "117960",
    "end": "120039"
  },
  {
    "text": "thousands of functions can run in",
    "start": "120039",
    "end": "123320"
  },
  {
    "text": "parallel and this is great because your",
    "start": "123320",
    "end": "125640"
  },
  {
    "text": "code will only run when needed for",
    "start": "125640",
    "end": "128319"
  },
  {
    "text": "example if you have a mobile device that",
    "start": "128319",
    "end": "130599"
  },
  {
    "text": "will send an update uh to S3 that will",
    "start": "130599",
    "end": "134599"
  },
  {
    "text": "now be triggered a cloud function only",
    "start": "134599",
    "end": "136760"
  },
  {
    "text": "then the function will run you won't",
    "start": "136760",
    "end": "139760"
  },
  {
    "text": "have to have this running all the time",
    "start": "139760",
    "end": "142120"
  },
  {
    "text": "there will be very low fee per request",
    "start": "142120",
    "end": "145120"
  },
  {
    "text": "cost effective at high rates low rates",
    "start": "145120",
    "end": "147480"
  },
  {
    "text": "and you know you can run it once a month",
    "start": "147480",
    "end": "149440"
  },
  {
    "text": "or maybe you can run thousands of these",
    "start": "149440",
    "end": "151440"
  },
  {
    "text": "functions a",
    "start": "151440",
    "end": "153400"
  },
  {
    "text": "second and so these events will come in",
    "start": "153400",
    "end": "156599"
  },
  {
    "text": "many many different shapes and forms",
    "start": "156599",
    "end": "158959"
  },
  {
    "text": "yeah for example S3 event notifications",
    "start": "158959",
    "end": "161560"
  },
  {
    "text": "when objects change or update or being",
    "start": "161560",
    "end": "163840"
  },
  {
    "text": "uh emitted uh it could be Dynamo DB",
    "start": "163840",
    "end": "166560"
  },
  {
    "text": "streams remember this launched a few",
    "start": "166560",
    "end": "168760"
  },
  {
    "text": "days ago where actually you can get",
    "start": "168760",
    "end": "170879"
  },
  {
    "text": "update streams out of all the changes",
    "start": "170879",
    "end": "173319"
  },
  {
    "text": "that happen in Dynamo DB uh Kinesis",
    "start": "173319",
    "end": "176720"
  },
  {
    "text": "events when events are being added to",
    "start": "176720",
    "end": "178720"
  },
  {
    "text": "the Kinesis uh uh uh streams or they can",
    "start": "178720",
    "end": "182239"
  },
  {
    "text": "be custom events just driven by you for",
    "start": "182239",
    "end": "185120"
  },
  {
    "text": "example from your mobile",
    "start": "185120",
    "end": "187519"
  },
  {
    "text": "devices and if you look at the number of",
    "start": "187519",
    "end": "189760"
  },
  {
    "text": "these use cases for example you want to",
    "start": "189760",
    "end": "192920"
  },
  {
    "text": "write server free backends yeah the",
    "start": "192920",
    "end": "197599"
  },
  {
    "text": "example that I just gave for mobile",
    "start": "197599",
    "end": "199720"
  },
  {
    "text": "devices where you just want to have a",
    "start": "199720",
    "end": "202159"
  },
  {
    "text": "backend that can that can respond to any",
    "start": "202159",
    "end": "205159"
  },
  {
    "text": "of the updates that you",
    "start": "205159",
    "end": "207000"
  },
  {
    "text": "sent um it can be data trigger",
    "start": "207000",
    "end": "210720"
  },
  {
    "text": "for example you do is send an image file",
    "start": "210720",
    "end": "213319"
  },
  {
    "text": "into Amazon S3 and you immediately want",
    "start": "213319",
    "end": "216000"
  },
  {
    "text": "to create some thumbnails for it or it",
    "start": "216000",
    "end": "219000"
  },
  {
    "text": "can be the world of the Internet of",
    "start": "219000",
    "end": "221000"
  },
  {
    "text": "Things where your sensor when it should",
    "start": "221000",
    "end": "224560"
  },
  {
    "text": "um there a temperature change will",
    "start": "224560",
    "end": "226680"
  },
  {
    "text": "happen will'll be able to trigger uh one",
    "start": "226680",
    "end": "230200"
  },
  {
    "text": "of the Lambda functions such that you",
    "start": "230200",
    "end": "232599"
  },
  {
    "text": "can send an SMS message to um to the",
    "start": "232599",
    "end": "237560"
  },
  {
    "text": "owner or it will be streamed processing",
    "start": "237560",
    "end": "240400"
  },
  {
    "text": "where for example updates in Dynamo DB",
    "start": "240400",
    "end": "244040"
  },
  {
    "text": "you will be able to do uh execute",
    "start": "244040",
    "end": "246920"
  },
  {
    "text": "business functions on data changes that",
    "start": "246920",
    "end": "249400"
  },
  {
    "text": "happen um or of course indexing and",
    "start": "249400",
    "end": "252599"
  },
  {
    "text": "synchronization is one of the common",
    "start": "252599",
    "end": "254720"
  },
  {
    "text": "things that customers do on our platform",
    "start": "254720",
    "end": "257160"
  },
  {
    "text": "with S3 so you will upload data into",
    "start": "257160",
    "end": "260120"
  },
  {
    "text": "Amazon",
    "start": "260120",
    "end": "261040"
  },
  {
    "text": "S3 and or and then you will want to run",
    "start": "261040",
    "end": "264000"
  },
  {
    "text": "a function to actually extract the",
    "start": "264000",
    "end": "266160"
  },
  {
    "text": "metadata from that and put that in",
    "start": "266160",
    "end": "268280"
  },
  {
    "text": "Dynamo DB",
    "start": "268280",
    "end": "270440"
  },
  {
    "text": "let's actually go through that last",
    "start": "270440",
    "end": "272880"
  },
  {
    "text": "example that might be a a good one so",
    "start": "272880",
    "end": "276320"
  },
  {
    "text": "you have a mobile device you upload a",
    "start": "276320",
    "end": "278680"
  },
  {
    "text": "photo in your S3 bucket which will",
    "start": "278680",
    "end": "283320"
  },
  {
    "text": "send which will trigger your Lambda",
    "start": "283320",
    "end": "286160"
  },
  {
    "text": "function that you've written who will",
    "start": "286160",
    "end": "288440"
  },
  {
    "text": "then extract The Meta data from that uh",
    "start": "288440",
    "end": "292440"
  },
  {
    "text": "photograph and will put it in a Dynamo",
    "start": "292440",
    "end": "297039"
  },
  {
    "text": "DB and then it will trick here another",
    "start": "297039",
    "end": "300800"
  },
  {
    "text": "function over all the streams of Dynamo",
    "start": "300800",
    "end": "304160"
  },
  {
    "text": "DB to figure out which of the metadata",
    "start": "304160",
    "end": "307320"
  },
  {
    "text": "functions for example place or location",
    "start": "307320",
    "end": "310000"
  },
  {
    "text": "or user are actually",
    "start": "310000",
    "end": "312720"
  },
  {
    "text": "trending and then you can add another",
    "start": "312720",
    "end": "315280"
  },
  {
    "text": "function to it that actually notifies",
    "start": "315280",
    "end": "318000"
  },
  {
    "text": "the customer if his or her photo is",
    "start": "318000",
    "end": "321479"
  },
  {
    "text": "actually one of the",
    "start": "321479",
    "end": "323400"
  },
  {
    "text": "trending um one of the trending photos",
    "start": "323400",
    "end": "326840"
  },
  {
    "text": "all of this you can write without",
    "start": "326840",
    "end": "329800"
  },
  {
    "text": "running any infrastructure any instances",
    "start": "329800",
    "end": "334199"
  },
  {
    "text": "to do it becomes extremely simple to",
    "start": "334199",
    "end": "337680"
  },
  {
    "text": "build highly reliable highly concurrent",
    "start": "337680",
    "end": "340560"
  },
  {
    "text": "applications this way so if you think",
    "start": "340560",
    "end": "344120"
  },
  {
    "text": "about cost of these service yeah there's",
    "start": "344120",
    "end": "346479"
  },
  {
    "text": "a number of unit costs that come",
    "start": "346479",
    "end": "350800"
  },
  {
    "text": "along so first of all there's the number",
    "start": "350800",
    "end": "353919"
  },
  {
    "text": "of requests and we'll count them per",
    "start": "353919",
    "end": "356600"
  },
  {
    "text": "million then there is execution time in",
    "start": "356600",
    "end": "360360"
  },
  {
    "text": "hundreds of",
    "start": "360360",
    "end": "361720"
  },
  {
    "text": "milliseconds and then there is the",
    "start": "361720",
    "end": "364039"
  },
  {
    "text": "amount of memory that you use in blocks",
    "start": "364039",
    "end": "366520"
  },
  {
    "text": "of",
    "start": "366520",
    "end": "368039"
  },
  {
    "text": "128 and so the pricing of this will be",
    "start": "368039",
    "end": "372120"
  },
  {
    "text": "20 cents per million",
    "start": "372120",
    "end": "374880"
  },
  {
    "text": "request and a lot of zeros and then 21",
    "start": "374880",
    "end": "379479"
  },
  {
    "text": "for every 100 milliseconds at 128",
    "start": "379479",
    "end": "383400"
  },
  {
    "text": "megabytes but more importantly for all",
    "start": "383400",
    "end": "386440"
  },
  {
    "text": "of you that want to try out this service",
    "start": "386440",
    "end": "388880"
  },
  {
    "text": "there is a free tier for base free tier",
    "start": "388880",
    "end": "391720"
  },
  {
    "text": "for all customers each month we can get",
    "start": "391720",
    "end": "395000"
  },
  {
    "text": "up to 3.2 million seconds of execution",
    "start": "395000",
    "end": "399120"
  },
  {
    "text": "and 1 million requests I think this is a",
    "start": "399120",
    "end": "401919"
  },
  {
    "text": "great way to get started and it will",
    "start": "401919",
    "end": "404000"
  },
  {
    "text": "totally revolutionize the way that you",
    "start": "404000",
    "end": "406919"
  },
  {
    "text": "will be writing your business",
    "start": "406919",
    "end": "409840"
  },
  {
    "text": "applications it's available today in",
    "start": "409840",
    "end": "414000"
  },
  {
    "text": "preview",
    "start": "418520",
    "end": "421520"
  },
  {
    "text": "available for you today in preview so go",
    "start": "421639",
    "end": "423639"
  },
  {
    "text": "and sign up and you can get started",
    "start": "423639",
    "end": "428560"
  }
]