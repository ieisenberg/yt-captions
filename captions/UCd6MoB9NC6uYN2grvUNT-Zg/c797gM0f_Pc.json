[
  {
    "text": "everybody thanks again for those you joining us here live on Twitch today we are coming in here live from the 80s",
    "start": "60",
    "end": "5790"
  },
  {
    "text": "loft in San Francisco where we're spending the whole day here today talking about serverless technology now",
    "start": "5790",
    "end": "11490"
  },
  {
    "text": "all this week here at the loft we're covering a recap of new launches and kind of a catch up on things since 80s",
    "start": "11490",
    "end": "17039"
  },
  {
    "text": "reinvent our yearly user conference we just happened at the end of 2018 and in November first week in December here all",
    "start": "17039",
    "end": "24000"
  },
  {
    "text": "day today we've been talking about server lists and so we're now at the the final stretch here the fifth of five",
    "start": "24000",
    "end": "29070"
  },
  {
    "text": "talks and so if you're just joining us thank you for joining us here I've got a bunch of great awesome crowd here in a",
    "start": "29070",
    "end": "35309"
  },
  {
    "text": "Davis loft thank you for all of you who've come here in person and stuck around for this or just joined us so far",
    "start": "35309",
    "end": "41460"
  },
  {
    "text": "today we've covered a wide range of topics inside of the the server list platform here at AWS we started talking",
    "start": "41460",
    "end": "47850"
  },
  {
    "text": "about lambda in surplused applications talk a little bit about our tooling so AWS Sam Sam CLI talked about lambda",
    "start": "47850",
    "end": "55260"
  },
  {
    "text": "layers and the lambda runtime to new core awesome capabilities inside of a TOS lambda we just spoke about Amazon",
    "start": "55260",
    "end": "62940"
  },
  {
    "text": "API gateway and the capabilities and the power of building API is with a we're gonna finish up here with another really",
    "start": "62940",
    "end": "70170"
  },
  {
    "text": "incredibly important part of the server list platform or portfolio I should say here at AWS which is a TOS step",
    "start": "70170",
    "end": "76110"
  },
  {
    "text": "functions and so again for those you're just joining my name is Chris Mons I'm a principal developer advocate for sir",
    "start": "76110",
    "end": "82500"
  },
  {
    "text": "bliss at AWS I've been here for a little over six and a half years across the number of different roles but",
    "start": "82500",
    "end": "87570"
  },
  {
    "text": "representing the service space for the last two years I'm based in New York City and I actually come from a startup",
    "start": "87570",
    "end": "93299"
  },
  {
    "text": "background having worked in ops or DevOps or s3 whatever you might want to call today for a number of startups back",
    "start": "93299",
    "end": "98700"
  },
  {
    "text": "there so all day Terry here been talking about the concept of the topic of server",
    "start": "98700",
    "end": "104790"
  },
  {
    "text": "list this is a really hot topic in the industry if you got to catch any part of AWS reinvent either in person or via the",
    "start": "104790",
    "end": "111030"
  },
  {
    "text": "live streams we had for that service was a hot topic that we talked about there was a lot of energy and buzz around we",
    "start": "111030",
    "end": "117030"
  },
  {
    "text": "had a number of really exciting announcements that came out in the period around there and so today we've been recapping some of those and then",
    "start": "117030",
    "end": "123299"
  },
  {
    "text": "kind of bringing everyone up to speed where we are with some of these various products now today we're going to talk",
    "start": "123299",
    "end": "128759"
  },
  {
    "text": "about step functions which there's a really incredible powerful tool and a really important part",
    "start": "128759",
    "end": "133890"
  },
  {
    "text": "of building a service application so let's talk a little but what a modern",
    "start": "133890",
    "end": "138959"
  },
  {
    "text": "application could look like with lambda we've talked and seen some really brief examples here today you can imagine a",
    "start": "138959",
    "end": "145890"
  },
  {
    "text": "world where you had a lot of different lambda functions talking to all sorts of different different parts of your",
    "start": "145890",
    "end": "151530"
  },
  {
    "text": "infrastructure you can be talking to queues or databases or HTTP endpoints or",
    "start": "151530",
    "end": "156720"
  },
  {
    "text": "API endpoints it can be talking to each other there could be all sorts of things that you might need to do to build the",
    "start": "156720",
    "end": "162570"
  },
  {
    "text": "complicated capabilities and needs that you have for your products and if you",
    "start": "162570",
    "end": "168150"
  },
  {
    "text": "think about each of these motions each of these connections each of these things that we're talking about there's",
    "start": "168150",
    "end": "174959"
  },
  {
    "text": "probably lots of things that we might want to do with those and there's lots of ways that we want them to interface with each other and the the downstream",
    "start": "174959",
    "end": "180540"
  },
  {
    "text": "services that they're talking to and so what we hear customers ask is they say things like I want a sink wince lambda",
    "start": "180540",
    "end": "187350"
  },
  {
    "text": "function so lambda a function a happens and then lambda function be parallelization I want these four things",
    "start": "187350",
    "end": "193230"
  },
  {
    "text": "to happen and at the end you know reduce back the resultant do something being",
    "start": "193230",
    "end": "198299"
  },
  {
    "text": "able to basically have a decision tree so based on the results of a I want it either to do C or D but not have to do",
    "start": "198299",
    "end": "205079"
  },
  {
    "text": "both of them other things like failure handling retries and all the kind of complicated logic that goes into it now",
    "start": "205079",
    "end": "211260"
  },
  {
    "text": "these are things that people have wanted to build into applications for long before lambda existed for example but in",
    "start": "211260",
    "end": "217019"
  },
  {
    "text": "lambda you have some nuanced aspects about it that make some of these things more complicated lambda functions today",
    "start": "217019",
    "end": "224640"
  },
  {
    "text": "have a default time limit of 15 minutes so that means that the maximum duration",
    "start": "224640",
    "end": "229680"
  },
  {
    "text": "of what you want to do in that function and what you want to talk to is limited by that 15-minute amount",
    "start": "229680",
    "end": "235019"
  },
  {
    "text": "there's also aspects someone had a great question earlier around limits for",
    "start": "235019",
    "end": "240269"
  },
  {
    "text": "storage size inside of lambda so lambda functions gave you 512 megabytes of temp storage and if you needed to process a 1",
    "start": "240269",
    "end": "247170"
  },
  {
    "text": "gigabyte file you couldn't do that and lambda easily today and so if we think about some of the ways that we might",
    "start": "247170",
    "end": "253410"
  },
  {
    "text": "want to try to accomplish this list of things here with lambda there's a couple ways we could do it but we'll talk about",
    "start": "253410",
    "end": "258930"
  },
  {
    "text": "like more of a specific use case here again in this service context so let's say that I want to book a vacation in",
    "start": "258930",
    "end": "265560"
  },
  {
    "text": "this case I want to go to the Grand Canyon but not only do I want to book a vacation in Grand Canyon so not just a",
    "start": "265560",
    "end": "270630"
  },
  {
    "text": "flight and a hotel I'm also going to reserve a car and now if I can't reserve",
    "start": "270630",
    "end": "276570"
  },
  {
    "text": "the car that I want then you know what I don't want to go and I'm gonna cancel my trip so I've got this logic that I need",
    "start": "276570",
    "end": "285450"
  },
  {
    "text": "to accomplish I need to book a hotel I need to book a flight I need to book a car if any of those don't work I'm gonna",
    "start": "285450",
    "end": "290640"
  },
  {
    "text": "need to roll back this process that I want to go through now there is the option of having one giant lambda",
    "start": "290640",
    "end": "297360"
  },
  {
    "text": "function that has sub functions inside of it and you see kind of that diagram here and again we have the issue of",
    "start": "297360",
    "end": "302610"
  },
  {
    "text": "coordination of handling failures of handling retries of that maximum time out and so that makes this kind of less",
    "start": "302610",
    "end": "309480"
  },
  {
    "text": "than ideal we could do function chaining and this is where you can definitely run into danger of having function a call B",
    "start": "309480",
    "end": "316350"
  },
  {
    "text": "call C call D and so on and so forth but again if somewhere towards the bottom of this diagram we have a failure",
    "start": "316350",
    "end": "322770"
  },
  {
    "text": "how far back do we have to coordinate that failure back up to the upstream now",
    "start": "322770",
    "end": "329010"
  },
  {
    "text": "the way that our application architects have handled this for a long time now is maybe they'll use something like a database to manage States you might also",
    "start": "329010",
    "end": "336450"
  },
  {
    "text": "do something like try to use queues or message buses to pass messages between systems and essentially pass an",
    "start": "336450",
    "end": "342960"
  },
  {
    "text": "ever-growing amount of state that you track across all of that and so a lot of these things are complicated",
    "start": "342960",
    "end": "348660"
  },
  {
    "text": "sophisticated of themselves and not necessarily ideal and so that led us to building AWS step functions and",
    "start": "348660",
    "end": "355380"
  },
  {
    "text": "apologies here the word it a function seems to be blending in a little bit on the slide and so we see here is an",
    "start": "355380",
    "end": "362520"
  },
  {
    "text": "example of a workflow diagram which is actually taken from the step functions",
    "start": "362520",
    "end": "367860"
  },
  {
    "text": "console and so step functions initially launched with the ability for you to coordinate lambda functions as we'll",
    "start": "367860",
    "end": "374460"
  },
  {
    "text": "talk about here in a moment you can actually now coordinate way more than just lambda functions but it's meant to handle all of this complexity that we",
    "start": "374460",
    "end": "381270"
  },
  {
    "text": "just talked about so with step functions the idea here is you could really easily",
    "start": "381270",
    "end": "387210"
  },
  {
    "text": "quickly go and fire up this this workflow orchestration build your coordination between services out having",
    "start": "387210",
    "end": "392790"
  },
  {
    "text": "to write a lot of code and then ideally here one of the key aspects about this as well is it manages the state for you",
    "start": "392790",
    "end": "398670"
  },
  {
    "text": "really really well so it's highly it's durable scales and you don't have",
    "start": "398670",
    "end": "405209"
  },
  {
    "text": "to think about the orchestration software is something that you need to maintain now I had mentioned that this",
    "start": "405209",
    "end": "412349"
  },
  {
    "text": "first launched for supporting lambda as an action but one of the things that we just launched a couple of weeks ago at a",
    "start": "412349",
    "end": "418019"
  },
  {
    "text": "Davis prevent 2018 is we've actually call richer workflows but what allows you to do is integrate with a lot of",
    "start": "418019",
    "end": "423899"
  },
  {
    "text": "other services at AWS so this is things like Amazon SNS or sqs where you can put",
    "start": "423899",
    "end": "430469"
  },
  {
    "text": "messages into a topic or a queue amazon sage maker and glue which are well",
    "start": "430469",
    "end": "436919"
  },
  {
    "text": "amazon sage baker as part of our machine learning space you can kick off stage maker jobs you can also kick off a SS",
    "start": "436919",
    "end": "443159"
  },
  {
    "text": "glue which is an ETL service or ETA miss patches or a batch service and then lastly you can also now cause container",
    "start": "443159",
    "end": "451589"
  },
  {
    "text": "based workloads to start up so for the places where the limitations of lambda",
    "start": "451589",
    "end": "456929"
  },
  {
    "text": "don't work well with what you need to do you could actually now coordinate that into something like far gate or ECS and",
    "start": "456929",
    "end": "463349"
  },
  {
    "text": "so really what it does is it makes step function it's just that much more applicable to what you're trying to do and can allow you to have some really",
    "start": "463349",
    "end": "470039"
  },
  {
    "text": "interesting work restoration workflows for your code so again when we talk",
    "start": "470039",
    "end": "478529"
  },
  {
    "text": "about it being able to allow you to quickly build out and iterate what you want to do we actually have a visual",
    "start": "478529",
    "end": "484079"
  },
  {
    "text": "editor for step functions here I'm going to show you that here in a little bit and so we can map out basically the",
    "start": "484079",
    "end": "489989"
  },
  {
    "text": "various aspects of what we have and so the diagram that we see here has a couple of different capabilities in it",
    "start": "489989",
    "end": "495449"
  },
  {
    "text": "the first thing that we see these these green boxes here you see a task so each",
    "start": "495449",
    "end": "500969"
  },
  {
    "text": "green box represents a task and a task could be again a lambda function or potentially an integration with any of",
    "start": "500969",
    "end": "507659"
  },
  {
    "text": "these services that I mentioned before when you look down at the green box the",
    "start": "507659",
    "end": "512669"
  },
  {
    "text": "second one down for the top which says image type check out of that can come what's called a choice so the two kind",
    "start": "512669",
    "end": "519479"
  },
  {
    "text": "of arrows that come off of that represent a decision tree where it's actually step functions handling that so",
    "start": "519479",
    "end": "525360"
  },
  {
    "text": "the image type check returns a results and then step functions decides which path we go down after that we could sort",
    "start": "525360",
    "end": "533129"
  },
  {
    "text": "image metadata we could have a failure action that we potentially handle some way if you go",
    "start": "533129",
    "end": "539120"
  },
  {
    "text": "below the store image metadata box and you go down to where there's kind of a dotted outline around the rest of the",
    "start": "539120",
    "end": "545300"
  },
  {
    "text": "workflow here you see a parallel task so this is gonna kick off two things in parallel and then after the both of them",
    "start": "545300",
    "end": "552559"
  },
  {
    "text": "are done from the recognition task you will have the ad recognized tags and",
    "start": "552559",
    "end": "557959"
  },
  {
    "text": "then after that this workflow ends and so again we've seen kind of a couple of",
    "start": "557959",
    "end": "562999"
  },
  {
    "text": "things here tasks choice fail and parallel these are all capabilities of step functions and now you could do this",
    "start": "562999",
    "end": "570589"
  },
  {
    "text": "in the UI or you can also define this in a JSON DSL that we have an apology's",
    "start": "570589",
    "end": "578180"
  },
  {
    "text": "here some of the fonts aren't showing up exactly way that I had hoped but there is inside of this resource here whoops",
    "start": "578180",
    "end": "584360"
  },
  {
    "text": "an Amazon a RN that is passed in but so the JSON itself is also pretty",
    "start": "584360",
    "end": "590329"
  },
  {
    "text": "straightforward and pretty powerful that we can see these executions happen and",
    "start": "590329",
    "end": "596449"
  },
  {
    "text": "we can do this from the console from the CLI or from an API typically you're probably going to integrate this in some",
    "start": "596449",
    "end": "602990"
  },
  {
    "text": "form or fashion with a monitoring or metrics tool and again it's coordinating all these various things so when it",
    "start": "602990",
    "end": "608779"
  },
  {
    "text": "executes a lambda function lambda still does all the logging and stuff that it needs to do and so all of those things",
    "start": "608779",
    "end": "613970"
  },
  {
    "text": "just work the way that they would normally so we can do things like run",
    "start": "613970",
    "end": "620540"
  },
  {
    "text": "steps in a sequence right so we see here the three steps that I mentioned for my",
    "start": "620540",
    "end": "625959"
  },
  {
    "text": "workflow for booking my travel I'm gonna book flight and then book a hotel and then book a car but what I really want",
    "start": "625959",
    "end": "633980"
  },
  {
    "text": "to do is be able to handle any sort of failure situation so if I go to book my",
    "start": "633980",
    "end": "639620"
  },
  {
    "text": "flight and that works great then go book a hotel if my hotel fails",
    "start": "639620",
    "end": "644829"
  },
  {
    "text": "then I'm gonna go down and cancel my flight however if I could book my hotel then I'll book a car but if that fails",
    "start": "644829",
    "end": "652279"
  },
  {
    "text": "then I'm gonna cancel my hotel and then cancel my flight and so you can see here basically the logic that I can put in",
    "start": "652279",
    "end": "657949"
  },
  {
    "text": "place to unwind failures that might happen or to successfully go through the",
    "start": "657949",
    "end": "663199"
  },
  {
    "text": "flow that I have in order and so each of the dotted boxes here could represent",
    "start": "663199",
    "end": "668300"
  },
  {
    "text": "again something like a lambda function or a Fargate task or ECS task and then all of the areas represent basically",
    "start": "668300",
    "end": "674660"
  },
  {
    "text": "decisions that are being made by the step function service so let's say",
    "start": "674660",
    "end": "682310"
  },
  {
    "text": "though that one of those steps failed for some reason so maybe a lambda function times out or it receives an error from another service so one of the",
    "start": "682310",
    "end": "689570"
  },
  {
    "text": "things that step functions can do for me is it can actually handle that failure and a retry maybe you talk to in API",
    "start": "689570",
    "end": "696380"
  },
  {
    "text": "that's a little flaky or that may be how scale issues whatever it might be that could happen and so with this here we",
    "start": "696380",
    "end": "703250"
  },
  {
    "text": "can handle all aspects about the retry things like max attempts to retry if",
    "start": "703250",
    "end": "710060"
  },
  {
    "text": "there's a back off rate interval that we want to do that retry in and so again we can take this code that we might have",
    "start": "710060",
    "end": "716150"
  },
  {
    "text": "potentially put in our actual application code and tell step functions to handle it on our behalf we can also",
    "start": "716150",
    "end": "723680"
  },
  {
    "text": "do things like catch exceptions so going back to that decision tree that we had back there before we could actually",
    "start": "723680",
    "end": "729080"
  },
  {
    "text": "output from our lambda functions custom error codes or custom error messages and",
    "start": "729080",
    "end": "735800"
  },
  {
    "text": "then basically react based on that so we can get really fine grained about what it is that our service tells us what",
    "start": "735800",
    "end": "741560"
  },
  {
    "text": "went wrong and how it should potentially handle that thing so key things about",
    "start": "741560",
    "end": "748220"
  },
  {
    "text": "step functions that it helps you with is automatically scaling not losing state",
    "start": "748220",
    "end": "753950"
  },
  {
    "text": "so again if you were doing this all from in a lambda function by itself in a Hamel coordination and it died there goes your state helps again with",
    "start": "753950",
    "end": "761330"
  },
  {
    "text": "errors and timeouts pretty easy and auditable and the auditable aspect is a really key thing that we'll talk about",
    "start": "761330",
    "end": "766940"
  },
  {
    "text": "here in a moment now in terms of all the different things that you can do we've seen the ability to do tasks and choices",
    "start": "766940",
    "end": "773510"
  },
  {
    "text": "and parallelization there are a couple other types of states that it supports so it supports a weight state so imagine",
    "start": "773510",
    "end": "780410"
  },
  {
    "text": "that you need to kick off some sort of action and that's going to take time you can basically have the equivalent of a",
    "start": "780410",
    "end": "785840"
  },
  {
    "text": "sleep if you will there's failure states and then succeeding in past dates and so",
    "start": "785840",
    "end": "791540"
  },
  {
    "text": "really just a couple of basic types but all of the ways that you could put them together is where the combination of",
    "start": "791540",
    "end": "797750"
  },
  {
    "text": "interesting things can happen so you mentioned before that this is",
    "start": "797750",
    "end": "803600"
  },
  {
    "text": "expanded beyond just for lambda you can now interface with all these different",
    "start": "803600",
    "end": "808820"
  },
  {
    "text": "services and so you know as part of this you can imagine all sorts of different",
    "start": "808820",
    "end": "815780"
  },
  {
    "text": "ways that you can build really complicated workflows that kick off things and do stuff you could have you",
    "start": "815780",
    "end": "821990"
  },
  {
    "text": "know given things like the weight State you could put messages into a queue something else takes that stuff out of the queue and acts on it you can have a",
    "start": "821990",
    "end": "828800"
  },
  {
    "text": "weight state that defines waiting for a certain period of time and then attempts to query a database or look for",
    "start": "828800",
    "end": "834020"
  },
  {
    "text": "something to happen there we also support the ability for you to do what's called a long pole so this allows you to",
    "start": "834020",
    "end": "841730"
  },
  {
    "text": "run any code that you want on say ec2 or in a container or even in your own data",
    "start": "841730",
    "end": "847340"
  },
  {
    "text": "center pulling a step function looking for work to take on and so you can do work with step functions out-of-band",
    "start": "847340",
    "end": "853760"
  },
  {
    "text": "from just the services that are directly integrated into it so I have it today in",
    "start": "853760",
    "end": "861290"
  },
  {
    "text": "the slides that we've had talked a lot about any customer use cases but just to give more examples towards what's",
    "start": "861290",
    "end": "867710"
  },
  {
    "text": "possible here I'm gonna come through a couple and so these are all public case studies that we have from customers that",
    "start": "867710",
    "end": "872960"
  },
  {
    "text": "are using step functions and again I want to walk through like what's capable with them so there's a company called",
    "start": "872960",
    "end": "879560"
  },
  {
    "text": "sweet Panda and what food Panda does is it enables you to be able to as a",
    "start": "879560",
    "end": "884660"
  },
  {
    "text": "restaurant use fat food panda to help with delivery so instead of having to have your own delivery team you could",
    "start": "884660",
    "end": "891170"
  },
  {
    "text": "use food panda to help coordinate that and so well excuse me that wasn't out of",
    "start": "891170",
    "end": "898190"
  },
  {
    "text": "place slide and so inside of food panda they use step functions and so they have",
    "start": "898190",
    "end": "903410"
  },
  {
    "text": "a really basic flow here for part of their workflow and basically what they want to do is they want to identify a",
    "start": "903410",
    "end": "908510"
  },
  {
    "text": "driver that's available to bring food to you and so what they do is they have a task which pulls in all of the available",
    "start": "908510",
    "end": "915530"
  },
  {
    "text": "vehicles they then run what they call their assignment algorithms so where does it make sense to grab a vehicle",
    "start": "915530",
    "end": "921650"
  },
  {
    "text": "from them in relation to the restaurant and to the order they can then dispatch that vehicle inform the customer or if",
    "start": "921650",
    "end": "930500"
  },
  {
    "text": "they can't dispatch the vehicle they will say that the vehicle cannot be contacted and potentially have an error and so again",
    "start": "930500",
    "end": "936890"
  },
  {
    "text": "each of these bits of work is a separate service as a separate lambda function what-have-you and then they also have a",
    "start": "936890",
    "end": "942440"
  },
  {
    "text": "failure State for no vehicles found which is if they are unable to load any available vehicles now this is just a",
    "start": "942440",
    "end": "949040"
  },
  {
    "text": "snippet of a SLAR jur workflow that they have but again something you can kind of",
    "start": "949040",
    "end": "954170"
  },
  {
    "text": "relate to here there's another one that we have here so Thomson Reuters which",
    "start": "954170",
    "end": "960680"
  },
  {
    "text": "provides all sorts of different services in the media entertainment financial sector space they have something where",
    "start": "960680",
    "end": "967160"
  },
  {
    "text": "they get three hundred and fifty news clips per day and they need to transcode them into 14 different formats in as",
    "start": "967160",
    "end": "974300"
  },
  {
    "text": "near real-time as possible and so they were able to use step functions to greatly speed up this",
    "start": "974300",
    "end": "979370"
  },
  {
    "text": "process but let's go ahead here and look at part of their workflow and so what",
    "start": "979370",
    "end": "984470"
  },
  {
    "text": "they actually do is they take video snippets and then they have functions that do introspection on them and gather",
    "start": "984470",
    "end": "991190"
  },
  {
    "text": "metadata about them look at how long they are split them down into smaller segments and then basically transcode",
    "start": "991190",
    "end": "997880"
  },
  {
    "text": "those individual segments and merge them back together and so because they're using step functions they can break up",
    "start": "997880",
    "end": "1003400"
  },
  {
    "text": "all those pieces of work each of those pieces of work can be running at different levels of parallelization in",
    "start": "1003400",
    "end": "1008560"
  },
  {
    "text": "terms of there'll be multiple of these executions happening at any point in time and then again this is brought down",
    "start": "1008560",
    "end": "1013960"
  },
  {
    "text": "the time that it's taken them to get these out from twenty minutes to two minutes in their world where you're trying to get news how quickly this can",
    "start": "1013960",
    "end": "1019960"
  },
  {
    "text": "be really valuable there's a company called out systems which offers up IT",
    "start": "1019960",
    "end": "1026319"
  },
  {
    "text": "automation and management services and they do something where they help people with doing things like database backups",
    "start": "1026320",
    "end": "1033459"
  },
  {
    "text": "and resizing and other capabilities around data management and so I included",
    "start": "1033459",
    "end": "1039280"
  },
  {
    "text": "this this example just strictly due to this diagram this is a really really",
    "start": "1039280",
    "end": "1044709"
  },
  {
    "text": "really long step functions workflow definition I couldn't even make it large enough to read the whole thing here and",
    "start": "1044709",
    "end": "1051550"
  },
  {
    "text": "what we see is something like 60 or 70 different tasks and actions and maybe a",
    "start": "1051550",
    "end": "1057580"
  },
  {
    "text": "little hard to tell the faintness of the lines here on the slide but all of the various failure states that they handle",
    "start": "1057580",
    "end": "1063070"
  },
  {
    "text": "for and how they do this and so this has been able to help them reduce cost speed",
    "start": "1063070",
    "end": "1068430"
  },
  {
    "text": "you know the way to resolve this and again they're not writing the code that handles all of this in their lambda",
    "start": "1068430",
    "end": "1074940"
  },
  {
    "text": "functions another example here with coca-cola where they had to update me those little",
    "start": "1074940",
    "end": "1082770"
  },
  {
    "text": "barcodes that you have on the food in the Nutrition Facts based on changes to FDA regulations they were able to do",
    "start": "1082770",
    "end": "1089250"
  },
  {
    "text": "this it used take 36 hours now it takes 10 seconds that's a pretty drastic change and so they use a number of different",
    "start": "1089250",
    "end": "1097440"
  },
  {
    "text": "AWS services they use step functions they use SNS these lambda Aurora I'd be a gateway all that stuff but in that",
    "start": "1097440",
    "end": "1105090"
  },
  {
    "text": "case this is what their workflow looks like and it's a workflow that has a couple of places of parallel tasks",
    "start": "1105090",
    "end": "1110940"
  },
  {
    "text": "called bunch of decision tasks some sequential tasks and they actually start off this function right away with a",
    "start": "1110940",
    "end": "1117570"
  },
  {
    "text": "bunch of change parallel tasks and this does all sorts of things it validates an",
    "start": "1117570",
    "end": "1123120"
  },
  {
    "text": "ID for a recipe it validates the serving size it validates the data quality for",
    "start": "1123120",
    "end": "1128300"
  },
  {
    "text": "containers that have more than one serving and so they're doing all of this work to meet regulatory needs for in",
    "start": "1128300",
    "end": "1135000"
  },
  {
    "text": "this case food labels which is an incredibly important thing you get that wrong and you get fined so an",
    "start": "1135000",
    "end": "1140250"
  },
  {
    "text": "interesting use case here so in terms of pricing the way that step functions",
    "start": "1140250",
    "end": "1146250"
  },
  {
    "text": "works is you paper transition so as you transition from one step of a step",
    "start": "1146250",
    "end": "1152100"
  },
  {
    "text": "function to another that is what you pay for and so depending on your region there are slightly different costs and",
    "start": "1152100",
    "end": "1158550"
  },
  {
    "text": "all of the regions are actually listed up on the product listing page for this",
    "start": "1158550",
    "end": "1163590"
  },
  {
    "text": "in most regions though it's a two and a half cents per thousand transitions and",
    "start": "1163590",
    "end": "1169410"
  },
  {
    "text": "so again I depending on what you're doing and how many transitions are",
    "start": "1169410",
    "end": "1174720"
  },
  {
    "text": "having this becomes a very small part of your ad abuse bill so let's like me to a",
    "start": "1174720",
    "end": "1180450"
  },
  {
    "text": "demo for this and now this is something that you can do yourself we have a",
    "start": "1180450",
    "end": "1186270"
  },
  {
    "text": "number of different workshops that exist here I actually talked about them too much here today but if you go to github",
    "start": "1186270",
    "end": "1191730"
  },
  {
    "text": "and you go to github AWS comm slash AWS",
    "start": "1191730",
    "end": "1197010"
  },
  {
    "text": "samples you'll find in there a repository called the",
    "start": "1197010",
    "end": "1202629"
  },
  {
    "text": "AWS - service - workshops I'm gonna show you this actually real quick we have a",
    "start": "1202629",
    "end": "1209019"
  },
  {
    "text": "whole bunch of workshops that are service workshops this covers sort of as web applications",
    "start": "1209019",
    "end": "1215470"
  },
  {
    "text": "DevOps data processing and so forth and these use kind of all the stuff we've been talking about here today but if",
    "start": "1215470",
    "end": "1222820"
  },
  {
    "text": "you're coming here to image processing this one is strictly around using step functions to do a number of things and",
    "start": "1222820",
    "end": "1229119"
  },
  {
    "text": "so you can come in here and just follow the steps for this and set this up you",
    "start": "1229119",
    "end": "1235149"
  },
  {
    "text": "could set this up and tear this down and this will all fit within the free tier for an account if your account still has the free tier for it if not create a new",
    "start": "1235149",
    "end": "1242950"
  },
  {
    "text": "account and if inside the stuff the free tier for you and this basically at the end of the day you end up with this step functions",
    "start": "1242950",
    "end": "1249759"
  },
  {
    "text": "workflow that you see here and so what you do with this is it takes photos it does face detection it looks to see if",
    "start": "1249759",
    "end": "1257590"
  },
  {
    "text": "that face has already been parsed and stored if it hasn't then it will go and",
    "start": "1257590",
    "end": "1263889"
  },
  {
    "text": "add the face to what it calls as an index generated thumbnail and then it persists metadata to a database and then",
    "start": "1263889",
    "end": "1270429"
  },
  {
    "text": "you can see here that there is a failure State if the photo does not have a face or meet the requirements of the",
    "start": "1270429",
    "end": "1277029"
  },
  {
    "text": "standards and when you go through this here it walks you through all the steps it uses CloudFormation it goes and",
    "start": "1277029",
    "end": "1284320"
  },
  {
    "text": "launches things and does a bunch of stuff like that well let's actually go in here and see this thing in action so",
    "start": "1284320",
    "end": "1291309"
  },
  {
    "text": "if I come in here to the step functions consul I can go and find the existing",
    "start": "1291309",
    "end": "1300279"
  },
  {
    "text": "functions or state machines I should say that I have and so I have this one here called Rider photo processing and I can",
    "start": "1300279",
    "end": "1307720"
  },
  {
    "text": "go and look at the definition for it and so I out here the image that we see here",
    "start": "1307720",
    "end": "1317409"
  },
  {
    "text": "I again lines of what we saw on the website - one of the steps that I didn't add yet to this but so when it comes",
    "start": "1317409",
    "end": "1325570"
  },
  {
    "text": "through again it will attempt to do face detection it will check to see if that's already been stored or not there's also",
    "start": "1325570",
    "end": "1331269"
  },
  {
    "text": "failure State for both of these which is that the photo does not meet a requirement otherwise it adds between",
    "start": "1331269",
    "end": "1336320"
  },
  {
    "text": "index and generates a thumbnail now if we go and we look at the actual syntax",
    "start": "1336320",
    "end": "1342080"
  },
  {
    "text": "for this again it's a JSON document it's in something called the Amazon State",
    "start": "1342080",
    "end": "1349220"
  },
  {
    "text": "definition language and what we have here and we can do things like collapse",
    "start": "1349220",
    "end": "1354559"
  },
  {
    "text": "this down so it's just basically where you start and then there's the states and then in here I've got a number of",
    "start": "1354559",
    "end": "1360710"
  },
  {
    "text": "states so I have a state called face detection and if you look at just that there is a type that's called task",
    "start": "1360710",
    "end": "1367639"
  },
  {
    "text": "there's the resource that it corresponds to which is the AR n for a lambda",
    "start": "1367639",
    "end": "1372980"
  },
  {
    "text": "function there is the result path so where are we going to go to next and",
    "start": "1372980",
    "end": "1378639"
  },
  {
    "text": "then it has the the next step here it will catch if there are certain errors so if the error equals photo does not",
    "start": "1378639",
    "end": "1385820"
  },
  {
    "text": "meet requirements then it will error out and basically then go to the next step",
    "start": "1385820",
    "end": "1392990"
  },
  {
    "text": "for that failure but then yep otherwise it goes on to another step we'll go on",
    "start": "1392990",
    "end": "1398509"
  },
  {
    "text": "to check face duplicate which is again type tasks cousin and Aeolus Arn in this",
    "start": "1398509",
    "end": "1404509"
  },
  {
    "text": "case doesn't have a failure path assigned to it I'm sorry it does have a failure tip it does have this here with",
    "start": "1404509",
    "end": "1410990"
  },
  {
    "text": "the catch but there's no result path to the next function so I might say and then at the bottom here we have parallel",
    "start": "1410990",
    "end": "1417169"
  },
  {
    "text": "processing so this is of type parallel and then there's two branches here that define two different steps which also",
    "start": "1417169",
    "end": "1424009"
  },
  {
    "text": "relate back to lambda functions so if we",
    "start": "1424009",
    "end": "1429620"
  },
  {
    "text": "go and execute this and I have an image that is stored let me go so this happy",
    "start": "1429620",
    "end": "1438889"
  },
  {
    "text": "face",
    "start": "1438889",
    "end": "1441070"
  },
  {
    "text": "let's open this up cool so this is the face that is stored so if I come here",
    "start": "1443950",
    "end": "1451219"
  },
  {
    "text": "into step functions I can pass any information that this needs and so in",
    "start": "1451219",
    "end": "1457070"
  },
  {
    "text": "this example you pass in the JSON to kick this off it already has a story and",
    "start": "1457070",
    "end": "1463279"
  },
  {
    "text": "just call this face example and I can click start execution now if I scroll",
    "start": "1463279",
    "end": "1472070"
  },
  {
    "text": "down here I'll see the event history as it happens I can also watch a little diagram which will refresh here as it",
    "start": "1472070",
    "end": "1477889"
  },
  {
    "text": "executes each of these lambda functions what it is that it's doing so in this",
    "start": "1477889",
    "end": "1483109"
  },
  {
    "text": "case I have a duplicate for this photo and so it spits back out that this has",
    "start": "1483109",
    "end": "1488269"
  },
  {
    "text": "failed now I can click on any of these and I can see what the input was and what the output was of the information",
    "start": "1488269",
    "end": "1496519"
  },
  {
    "text": "about it now the first thing that we do here is face detection and so the face detection function uses this here uses a",
    "start": "1496519",
    "end": "1505789"
  },
  {
    "text": "service at AWS has called recognition which can do recognizing what's going on",
    "start": "1505789",
    "end": "1511729"
  },
  {
    "text": "inside objects and videos and stuff like that and so it executes it took again that JSON structure I passed in which",
    "start": "1511729",
    "end": "1518179"
  },
  {
    "text": "had an s3 buckets and an image and then when it passes back is all sorts of",
    "start": "1518179",
    "end": "1523399"
  },
  {
    "text": "information about this so it detects here size of the image it can determine",
    "start": "1523399",
    "end": "1528919"
  },
  {
    "text": "for example approximately where it thinks the person inside of this is aged if they're smiling or not so they have",
    "start": "1528919",
    "end": "1536330"
  },
  {
    "text": "eyeglasses so it says false and we know that there's no eyeglasses on that photo it's a tournament gender is their beard",
    "start": "1536330",
    "end": "1543679"
  },
  {
    "text": "or mustache things like that there's a bunch of things that it passes back tells me what type of motion it thinks",
    "start": "1543679",
    "end": "1549080"
  },
  {
    "text": "it has and it thinks that the person is happy so that's good and then some other",
    "start": "1549080",
    "end": "1555229"
  },
  {
    "text": "aspects about it now if I click over here on to the check face duplicate task",
    "start": "1555229",
    "end": "1561349"
  },
  {
    "text": "I can come in here and scroll it down and go into the outputs and so we one of",
    "start": "1561349",
    "end": "1573349"
  },
  {
    "text": "the things that step functions does is it continually builds the input and output up for you so is merging in the inputs from the",
    "start": "1573349",
    "end": "1579270"
  },
  {
    "text": "previous step into the function and then the outputs typically contain all of that information as well so I have all",
    "start": "1579270",
    "end": "1585990"
  },
  {
    "text": "the previous information about the face then when I get down to the bottom here I see that the face and this is already",
    "start": "1585990",
    "end": "1591630"
  },
  {
    "text": "in the system so this has already been added to this it exists so let's go",
    "start": "1591630",
    "end": "1597240"
  },
  {
    "text": "ahead and try something different here I'm going to put into this s3 bucket",
    "start": "1597240",
    "end": "1603410"
  },
  {
    "text": "another photo that I have which is my",
    "start": "1603410",
    "end": "1612720"
  },
  {
    "text": "badge photo let's see what happens with this so I'm just uploading a file in s3",
    "start": "1612720",
    "end": "1623480"
  },
  {
    "text": "should be pretty quick dude cool so I",
    "start": "1625400",
    "end": "1632190"
  },
  {
    "text": "have this here so let me go and copy the name of it and come back to my JSON",
    "start": "1632190",
    "end": "1640700"
  },
  {
    "text": "let's just paste this in here I just",
    "start": "1640700",
    "end": "1645780"
  },
  {
    "text": "want this part actually copy it and let's do a new execution and",
    "start": "1645780",
    "end": "1654340"
  },
  {
    "text": "see what happens my photo it's again I'm",
    "start": "1654340",
    "end": "1662350"
  },
  {
    "text": "saying in my bucket use this photo and do this thing so let's go through the",
    "start": "1662350",
    "end": "1670330"
  },
  {
    "text": "workflow again it's can do face detection and hopefully my face looks like a face otherwise that'd be weird",
    "start": "1670330",
    "end": "1677370"
  },
  {
    "text": "and as you can see here I went through really quickly so face detection let's go and see what it says about me thank",
    "start": "1677370",
    "end": "1684670"
  },
  {
    "text": "god there's not like an attractiveness in here it would be kind of embarrassing so am i smiling is this true age range",
    "start": "1684670",
    "end": "1691780"
  },
  {
    "text": "wow that high one is really high I'll take the low I guess it not wearing",
    "start": "1691780",
    "end": "1699850"
  },
  {
    "text": "something so that it's it's a it's a copy of my badge photo here my Amazon employee badge photo so it's just",
    "start": "1699850",
    "end": "1705250"
  },
  {
    "text": "basically a headshot type of a thing beard true that's fair eyes open so on",
    "start": "1705250",
    "end": "1711580"
  },
  {
    "text": "and thankfully there's only a nine percent confidence rate for being disgusted",
    "start": "1711580",
    "end": "1717190"
  },
  {
    "text": "that's no happy so it got me about pretty much right for happy so that's cool and then if I go through here so",
    "start": "1717190",
    "end": "1725170"
  },
  {
    "text": "was this a duplicate face it's come all the way down to the output from this and",
    "start": "1725170",
    "end": "1730390"
  },
  {
    "text": "it was not a duplicate face so there is no exception that is captured so that's good and then I can go down and see what",
    "start": "1730390",
    "end": "1737440"
  },
  {
    "text": "else it did so it went and added the face to the index for recognition and",
    "start": "1737440",
    "end": "1743100"
  },
  {
    "text": "generated a thumbnail which it put into a different bucket and so we can go into that bucket actually I get that bucket",
    "start": "1743100",
    "end": "1752050"
  },
  {
    "text": "from here",
    "start": "1752050",
    "end": "1754800"
  },
  {
    "text": "sorry one second here no buckets and I",
    "start": "1757370",
    "end": "1769040"
  },
  {
    "text": "have in here an image which has been resized by a lambda function and that's",
    "start": "1769040",
    "end": "1777620"
  },
  {
    "text": "really small cool so what we saw here is you know example of and again if I ran",
    "start": "1777620",
    "end": "1783920"
  },
  {
    "text": "this again it would fail the check duplicate face thing let's let's try something completely different here",
    "start": "1783920",
    "end": "1789610"
  },
  {
    "text": "let's actually play into our s3 bucket something that is not an image and I'm",
    "start": "1789610",
    "end": "1801440"
  },
  {
    "text": "going to put in a screenshot actually that's an image so not that",
    "start": "1801440",
    "end": "1807490"
  },
  {
    "text": "we'll play in a Python or a PowerPoint template just to show the failure state",
    "start": "1808340",
    "end": "1814590"
  },
  {
    "text": "here probably could have used a smaller",
    "start": "1814590",
    "end": "1820799"
  },
  {
    "text": "file but that's okay cool so I have a",
    "start": "1820799",
    "end": "1827429"
  },
  {
    "text": "PowerPoint template let's go ahead and",
    "start": "1827429",
    "end": "1833900"
  },
  {
    "text": "watch this copy path pass this into here",
    "start": "1833900",
    "end": "1840830"
  },
  {
    "text": "do a new execution so a second",
    "start": "1852750",
    "end": "1863929"
  },
  {
    "text": "call us break",
    "start": "1865310",
    "end": "1868450"
  },
  {
    "text": "cool so face detection ran I put in the output here it says that yep this does",
    "start": "1878340",
    "end": "1884640"
  },
  {
    "text": "not meet the requirements it is not a JPEG or a PNG and so it went and did the",
    "start": "1884640",
    "end": "1890400"
  },
  {
    "text": "failure state and would pass this message back out now again if we went actually dove into what the lambda",
    "start": "1890400",
    "end": "1895980"
  },
  {
    "text": "functions are doing here and we can go and look at the actual definition of",
    "start": "1895980",
    "end": "1902190"
  },
  {
    "text": "this here we can go and look at the various executions that have happened so",
    "start": "1902190",
    "end": "1907230"
  },
  {
    "text": "that my photo execution we could actually now go back and do an audit of things so if something went wrong and so",
    "start": "1907230",
    "end": "1912540"
  },
  {
    "text": "I can come back here and I can see for the lambda function that was generated",
    "start": "1912540",
    "end": "1918720"
  },
  {
    "text": "thumbnail I could dive in and go and",
    "start": "1918720",
    "end": "1924030"
  },
  {
    "text": "look at what the code for this was and see that it's you know really pretty basic and without error handling talking",
    "start": "1924030",
    "end": "1930720"
  },
  {
    "text": "to the the service to get that data but anyway the key point here is that I could find everything about the",
    "start": "1930720",
    "end": "1936060"
  },
  {
    "text": "execution event history be able to dive into individual logs just see what the functions doing but in this case this",
    "start": "1936060",
    "end": "1943560"
  },
  {
    "text": "one succeeded and so that's good cool so",
    "start": "1943560",
    "end": "1949220"
  },
  {
    "text": "saw kind of really briefly here I didn't go through and actually create the step function on a fly but with the the the",
    "start": "1949220",
    "end": "1957960"
  },
  {
    "text": "DSL the JSON structure do that it's not terribly complicated and again what we saw was a workflow predefined failure",
    "start": "1957960",
    "end": "1964320"
  },
  {
    "text": "states for the functions that were there and my function code didn't have any of that logic so those lambda functions could have",
    "start": "1964320",
    "end": "1970620"
  },
  {
    "text": "been executed individually they could be executed via some sort of event source or with step functions but I in this",
    "start": "1970620",
    "end": "1977280"
  },
  {
    "text": "case the failure the retries any of that would have been handled just by step functions so with that we've covered",
    "start": "1977280",
    "end": "1985890"
  },
  {
    "text": "step functions here today again step functions allows you to remove orchestration from your code and pass it",
    "start": "1985890",
    "end": "1991050"
  },
  {
    "text": "up to a managed service pretty powerful stuff when it comes to building highly scaled architectures of distributed",
    "start": "1991050",
    "end": "1997320"
  },
  {
    "text": "systems you can find out a lot more about step functions in AWS today amazon.com slash server lists again the",
    "start": "1997320",
    "end": "2004580"
  },
  {
    "text": "white bar that you see here has links to resources such as getting started guides documentation",
    "start": "2004580",
    "end": "2010710"
  },
  {
    "text": "case studies like some of the ones that we saw here today about some of the step functions customers as well as other",
    "start": "2010710",
    "end": "2016710"
  },
  {
    "text": "webinars talks blog posts etc and then as well as links to all of the products",
    "start": "2016710",
    "end": "2022500"
  },
  {
    "text": "that we've talked about here in the serverless space just kind of wrapping up here today again so for those of you been tending we will",
    "start": "2022500",
    "end": "2030000"
  },
  {
    "text": "have decks sent out and available to you so you can come and go back and look at the slides for the user you've been",
    "start": "2030000",
    "end": "2035610"
  },
  {
    "text": "watching on twitch you want to see the twitch videos I believe these are all being recorded and it'll be made available later on cool I got a thumbs",
    "start": "2035610",
    "end": "2041490"
  },
  {
    "text": "up from the twitch team for that so you can come back and watch these videos or check on the ones that you haven't seen",
    "start": "2041490",
    "end": "2046550"
  },
  {
    "text": "catch us I think online here again today tomorrow for the next day in the reinvent recap where again this week",
    "start": "2046550",
    "end": "2054389"
  },
  {
    "text": "we're covering all sorts of recaps from the recent launches and new updates that happened at a TMS room in 2018 this is a",
    "start": "2054390",
    "end": "2061679"
  },
  {
    "text": "closest herbalist day again my name is Chris monzaemon principal of our advocate for service here at AWS you can",
    "start": "2061679",
    "end": "2067408"
  },
  {
    "text": "find me at Monday at amazon.com or at krysta moans on Twitter and we appreciate you joining us both on the",
    "start": "2067409",
    "end": "2073379"
  },
  {
    "text": "live stream and then for those of you who are here the San Francisco loft you have covered a number of things today from lambda2 EP a gateway to step",
    "start": "2073380",
    "end": "2080520"
  },
  {
    "text": "functions Sam and Sam CEO lie layers and runtime the service ecosystem has you",
    "start": "2080520",
    "end": "2086879"
  },
  {
    "text": "know even more than this than what we covered and so again do check out the service landing page for kind of the",
    "start": "2086880",
    "end": "2092010"
  },
  {
    "text": "rest of the portfolio of products and again thank you for coming and we hope to see you both here in the loft and",
    "start": "2092010",
    "end": "2099030"
  },
  {
    "text": "live on Twitch again soon thank you [Applause]",
    "start": "2099030",
    "end": "2106190"
  }
]