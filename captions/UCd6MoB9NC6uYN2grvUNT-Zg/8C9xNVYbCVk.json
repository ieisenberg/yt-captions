[
  {
    "text": "all right everybody we're gonna go ahead and get started first off thank you for coming to this talk my name is Gavin",
    "start": "0",
    "end": "6600"
  },
  {
    "text": "Fritz I'm a cloud and network sre on the cloud networking team at netflix hi my",
    "start": "6600",
    "end": "11849"
  },
  {
    "text": "name is Joel Kodama and I'm also a senior cloud network sre on the cloud network engineering team and we're gonna",
    "start": "11849",
    "end": "16859"
  },
  {
    "text": "talk a little bit about what it's like to be on this team and unfortunately like my counterpart on the core SRE team",
    "start": "16859",
    "end": "24269"
  },
  {
    "text": "I don't have any Netflix shoes but those of you that saw them they're stickers at",
    "start": "24269",
    "end": "29670"
  },
  {
    "text": "the booth so feel free to go get them so in traditional Netflix ways we're gonna",
    "start": "29670",
    "end": "35250"
  },
  {
    "text": "start off with some numbers a hundred and nine million raise your hand if you understand the",
    "start": "35250",
    "end": "40770"
  },
  {
    "text": "significance of this number to Netflix anybody out there this is actually the",
    "start": "40770",
    "end": "47070"
  },
  {
    "text": "number of global subscribers that we have and and hopefully that encompasses many of you out there a million-plus",
    "start": "47070",
    "end": "54980"
  },
  {
    "text": "this is actually the number of requests an average that we receive per second",
    "start": "54980",
    "end": "61109"
  },
  {
    "text": "from those hundred and nine million subscribers from a multitude of devices you think about connecting from your",
    "start": "61109",
    "end": "67080"
  },
  {
    "text": "phones and laptops and tablets and TVs and streaming sticks and every other",
    "start": "67080",
    "end": "72270"
  },
  {
    "text": "device that plays netflix out there and this is important to us a hundred and",
    "start": "72270",
    "end": "77310"
  },
  {
    "text": "fifty thousand plus this is the number of ec2 instances we're running at any given time to be able to power our micro",
    "start": "77310",
    "end": "84360"
  },
  {
    "text": "service architecture that is able to service those million plus requests per second seventy-five plus is the number",
    "start": "84360",
    "end": "93960"
  },
  {
    "text": "of accounts that we currently leverage and for some of you this may be small I know some people have hundreds or",
    "start": "93960",
    "end": "99659"
  },
  {
    "text": "thousands of accounts but we represent seventy-five of highly densely concentrated compute in those 75",
    "start": "99659",
    "end": "106170"
  },
  {
    "text": "accounts for this is the number of AWS",
    "start": "106170",
    "end": "112740"
  },
  {
    "text": "regions that we currently use three of them primarily for our streaming service which is an additional region that we",
    "start": "112740",
    "end": "119070"
  },
  {
    "text": "use for lots of our tooling as well as some supporting business applications now as far as our AWS infrastructure is",
    "start": "119070",
    "end": "126360"
  },
  {
    "text": "concerned all this lives in VPC but for those of you that know that that wasn't always the case",
    "start": "126360",
    "end": "132069"
  },
  {
    "text": "right a lot of our microservice were actually routed an ec2 classic how many",
    "start": "132069",
    "end": "137260"
  },
  {
    "text": "remember ec2 classic alright good number of you well if you remember ec2 classic",
    "start": "137260",
    "end": "143620"
  },
  {
    "text": "was a flat very open network utilizing the 1000 / 8 space for every customer so",
    "start": "143620",
    "end": "150069"
  },
  {
    "text": "that means if I launched an instance and several of you launched instances they were all in this sync in this simple",
    "start": "150069",
    "end": "155200"
  },
  {
    "text": "network right utilizing this 10/8 space and for our developers it was easy for",
    "start": "155200",
    "end": "161500"
  },
  {
    "text": "them they didn't really have to worry about how they interacted with this underlying infrastructure at all but",
    "start": "161500",
    "end": "167650"
  },
  {
    "text": "that lacked several aspects of EPC that we wanted to utilize things such as enhance network performance or newer",
    "start": "167650",
    "end": "174669"
  },
  {
    "text": "instance families and as well as the security to be able to not expose our instances out to the Internet and",
    "start": "174669",
    "end": "180840"
  },
  {
    "text": "because of this we really had an initiative to move all of our services from ec2 classic over the V PC now when",
    "start": "180840",
    "end": "191230"
  },
  {
    "text": "you think about V PC there's much more complexity involved in it and due to",
    "start": "191230",
    "end": "197049"
  },
  {
    "text": "that complexity it really required us to form a team that was out there to be able to create manage and evolve our",
    "start": "197049",
    "end": "204489"
  },
  {
    "text": "entire V PC infrastructure and think about how we are gonna scale that infrastructure for the next hundred",
    "start": "204489",
    "end": "209739"
  },
  {
    "text": "million customers so out of this formed a cloud network engineering team how many out there actually work on this how",
    "start": "209739",
    "end": "217120"
  },
  {
    "text": "many of you out there are in charge of managing V pcs and thinking about evolving that architecture oh great",
    "start": "217120",
    "end": "223720"
  },
  {
    "text": "great good number of you so when we took on this ownership of this migration project and we had to think about how do",
    "start": "223720",
    "end": "231220"
  },
  {
    "text": "we get to the point where we can you know migrate all of our services over into V PC and how can we scale that up",
    "start": "231220",
    "end": "236919"
  },
  {
    "text": "and we really wanted to keep it simple so we decided to go with you know a general deployment which is a public",
    "start": "236919",
    "end": "243879"
  },
  {
    "text": "subnet and a private subnet per availability zone and we utilizing that gateways for that it's a very simple",
    "start": "243879",
    "end": "249400"
  },
  {
    "text": "architecture it allows us to kind of stamp these out duplicate them across all the accounts we're going to need to deploy into now when we expand this out",
    "start": "249400",
    "end": "257169"
  },
  {
    "text": "to the regional level you know you think about ec2 classic and the fact that it was all in this very flat network so",
    "start": "257169",
    "end": "262570"
  },
  {
    "text": "every instance could talk to every other instance when we moved to VPC we needed to provide that same level of connectivity",
    "start": "262570",
    "end": "269020"
  },
  {
    "text": "and really in order to do so that meant we had to appear all of our V pcs together in the end this ends up with",
    "start": "269020",
    "end": "275050"
  },
  {
    "text": "the full mesh appearing very simple similar to how classic worked now if you",
    "start": "275050",
    "end": "281140"
  },
  {
    "text": "continue to zoom out to a global level we still needed to have connectivity",
    "start": "281140",
    "end": "286810"
  },
  {
    "text": "regardless of what region it's in and in order to do so you know for the public",
    "start": "286810",
    "end": "292030"
  },
  {
    "text": "side we generally use internet for the private side it meant that we needed to have some connectivity around our",
    "start": "292030",
    "end": "299740"
  },
  {
    "text": "private subnets and this meant creating our own MPLS backbone and we really use",
    "start": "299740",
    "end": "305200"
  },
  {
    "text": "you know Direct Connect for this connectivity itself now when you think",
    "start": "305200",
    "end": "310570"
  },
  {
    "text": "about this architecture it's pretty straightforward you know we try not to make it complex because that added",
    "start": "310570",
    "end": "316030"
  },
  {
    "text": "complexity it just makes it harder to manage and deploy and think about you know maintaining some consistent",
    "start": "316030",
    "end": "322150"
  },
  {
    "text": "configuration amongst all of our V pcs and accounts out there this straightforward architecture allowed us",
    "start": "322150",
    "end": "328660"
  },
  {
    "text": "to migrate all of our services from ec2 cl√°sico to V PC which took us about six months we completed this last year a q4",
    "start": "328660",
    "end": "336280"
  },
  {
    "text": "of 26 last year and we've been in V PC for roughly a year now now for those of",
    "start": "336280",
    "end": "343150"
  },
  {
    "text": "you that were here last year we did a presentation at reinvent talking all about this journey right all the things",
    "start": "343150",
    "end": "349990"
  },
  {
    "text": "that we had to go through in order to be able to migrate our service over into V PC and there's a couple things we",
    "start": "349990",
    "end": "355270"
  },
  {
    "text": "learned about that first off global unique IP space is good right we needed",
    "start": "355270",
    "end": "361510"
  },
  {
    "text": "to have global connectivity without added complexities of having to translate in between overlapping IP",
    "start": "361510",
    "end": "366940"
  },
  {
    "text": "space and so it's important for us to have this global unique IP space and enough of it to be able to grow and",
    "start": "366940",
    "end": "373810"
  },
  {
    "text": "scale to be able to support our next hundred million customers and beyond now",
    "start": "373810",
    "end": "379300"
  },
  {
    "text": "due to the fact that classic use of the 10/8 space we couldn't leverage that so",
    "start": "379300",
    "end": "384670"
  },
  {
    "text": "we decided to go with the next largest pseudo private IP space RFC sixty-five",
    "start": "384670",
    "end": "390130"
  },
  {
    "text": "98 which is basically 160 4/10 this provides us roughly 4 million addresses",
    "start": "390130",
    "end": "396520"
  },
  {
    "text": "that we can use to slice it DICE across all the VP sees and accounts that we were gonna need now one thing we",
    "start": "396520",
    "end": "403720"
  },
  {
    "text": "learned out of this though is that IP management's hard how many of you out",
    "start": "403720",
    "end": "408819"
  },
  {
    "text": "there have a past in traditional network engineering and how many of you want to",
    "start": "408819",
    "end": "415300"
  },
  {
    "text": "be able to kind of segment your environment with network space do you understand what's going on by looking at",
    "start": "415300",
    "end": "420969"
  },
  {
    "text": "the IP address itself me too that's tough right and in the cloud you",
    "start": "420969",
    "end": "427629"
  },
  {
    "text": "can't really do that it said we use public subnets and private subnets we don't have real segmentation so",
    "start": "427629",
    "end": "434039"
  },
  {
    "text": "forecasting and IP management is something that's very difficult to do but when we looked at you know creating",
    "start": "434039",
    "end": "441789"
  },
  {
    "text": "our vbc architecture thinking about how we were going to grow we tried to forecast that we tried to predict ok",
    "start": "441789",
    "end": "447940"
  },
  {
    "text": "these V pcs are gonna need this much IP space how many of you've gotten that wrong before yeah me too you know",
    "start": "447940",
    "end": "457150"
  },
  {
    "text": "luckily we have some tools around the ability to monitor our IP utilization we",
    "start": "457150",
    "end": "462490"
  },
  {
    "text": "constantly pull all of our subnets and we look at how many available IPS are there and we pump this into atlas which",
    "start": "462490",
    "end": "468580"
  },
  {
    "text": "is our time series metric collection system and here we can actually plot this and we look in this case at our",
    "start": "468580",
    "end": "475360"
  },
  {
    "text": "percent of utilization of subnets over a time span in this case we're looking at one account and we're looking at a",
    "start": "475360",
    "end": "481089"
  },
  {
    "text": "particular region uswest - on the left hand side you can see that percent of utilization and the bands",
    "start": "481089",
    "end": "486969"
  },
  {
    "text": "across the top actually represent our private subnets and our public subnets remember we have one persone so you kind",
    "start": "486969",
    "end": "493029"
  },
  {
    "text": "of see three lines kind of closely together if you notice on the left hand side there we're you know pushing the",
    "start": "493029",
    "end": "499120"
  },
  {
    "text": "bounds of 60 70 % utilization and for us that's concern especially as moving the",
    "start": "499120",
    "end": "504490"
  },
  {
    "text": "holidays you know how many of you are sitting around the holidays watching Netflix yeah me too and a lot of people",
    "start": "504490",
    "end": "510909"
  },
  {
    "text": "are which means that our service has to scale in order for our services scale that requires more IP addresses and as a",
    "start": "510909",
    "end": "518349"
  },
  {
    "text": "member of the cloud network engineering team it's it's my job to ensure that they can scale you know luckily Amazon",
    "start": "518349",
    "end": "525040"
  },
  {
    "text": "released a feature called VPC resize and this feature allows you to add additional cider blocks into a VPC",
    "start": "525040",
    "end": "531710"
  },
  {
    "text": "you can see around November 8th we added the new cider block and as applications redeploy they pick up these new subnets",
    "start": "531710",
    "end": "537320"
  },
  {
    "text": "and you can see they start to you know utilize IPs in these subnets and eventually these will kind of converge",
    "start": "537320",
    "end": "543110"
  },
  {
    "text": "so they'll balance out now in addition to monitoring our IP utilization we also",
    "start": "543110",
    "end": "549320"
  },
  {
    "text": "do things like monitor our infrastructure we actually pull our VPC configuration you know every few minutes",
    "start": "549320",
    "end": "556010"
  },
  {
    "text": "and we perform diffs against previous and current configuration this allows us",
    "start": "556010",
    "end": "561260"
  },
  {
    "text": "to see changes within our network itself and this is important because amazon",
    "start": "561260",
    "end": "567050"
  },
  {
    "text": "doesn't always provide a change event for everything that's changed within our environment in this example we're",
    "start": "567050",
    "end": "573020"
  },
  {
    "text": "looking at the fact that we have route propagation enabled on VG w's and because we use Direct Connect out there",
    "start": "573020",
    "end": "578570"
  },
  {
    "text": "you know new routes might get propagated in that network and I want to be informed when they do so I can get these",
    "start": "578570",
    "end": "584570"
  },
  {
    "text": "notifications that tell me hey these routes were added and any other changes that might happen in VPC we can also be",
    "start": "584570",
    "end": "590780"
  },
  {
    "text": "alerted now not only do we monitor our",
    "start": "590780",
    "end": "595820"
  },
  {
    "text": "infrastructure and in charge of our infrastructure but we're also responsible as a team for DNS and not",
    "start": "595820",
    "end": "601820"
  },
  {
    "text": "only for creating records and managing zones but we're more in charge of thinking about the performance and",
    "start": "601820",
    "end": "607880"
  },
  {
    "text": "availability of DNS itself you know when you think back to those millions of",
    "start": "607880",
    "end": "612950"
  },
  {
    "text": "requests per second that are processed all of those start off as a connection to a hostname whether it's an API",
    "start": "612950",
    "end": "620330"
  },
  {
    "text": "whether it's our web service right and we're in charge of you from going from connecting to Netflix to actually",
    "start": "620330",
    "end": "627230"
  },
  {
    "text": "watching Netflix so it's important to us how well you",
    "start": "627230",
    "end": "633439"
  },
  {
    "text": "actually can connect to less DNS servers can you and what's the performance of that now to gather some insight into",
    "start": "633439",
    "end": "640879"
  },
  {
    "text": "that availability and performance we've instrumented some DNS monitors across",
    "start": "640879",
    "end": "646999"
  },
  {
    "text": "our different platforms including iOS and Android and website and allows us to",
    "start": "646999",
    "end": "652279"
  },
  {
    "text": "start to understand some of the DNS latencies we see see in this case we're gathering all that data from different",
    "start": "652279",
    "end": "658759"
  },
  {
    "text": "networks out there represented by these numbers these numbers are a SNS autonomous system numbers or",
    "start": "658759",
    "end": "664069"
  },
  {
    "text": "representing networks in the world and in this case we're plotting this against our median route 53 latency based on",
    "start": "664069",
    "end": "670579"
  },
  {
    "text": "those numbers you can see across the bottom there's several different countries out there including US and Mexico and France and Great Britain you",
    "start": "670579",
    "end": "678139"
  },
  {
    "text": "can see across the left hand side there's latency in milliseconds the nice thing here is we get to see the density",
    "start": "678139",
    "end": "683749"
  },
  {
    "text": "of these DNS requests those bubbles the size of them represent the number of requests were seeing now generally let's",
    "start": "683749",
    "end": "690829"
  },
  {
    "text": "take us for example u.s. sits at median around 100 milliseconds for DNS response do you notice that bubble in the top",
    "start": "690829",
    "end": "697939"
  },
  {
    "text": "right hand side looks pretty bad right sitting around 800 milliseconds it's",
    "start": "697939",
    "end": "703160"
  },
  {
    "text": "basically 8x what the median latency is for us and these are things that we can gather insight around and drive a",
    "start": "703160",
    "end": "709639"
  },
  {
    "text": "resolution to them and in this case due to our great relationship with Amazon we can provide them this data talk to the",
    "start": "709639",
    "end": "716269"
  },
  {
    "text": "route 53 team say hey you guys we see that there's a problem to say SN and we can drive a resolution to that the nice",
    "start": "716269",
    "end": "722929"
  },
  {
    "text": "thing is that not only fixes it for us fixes it for everyone else on that network so you're welcome so in addition",
    "start": "722929",
    "end": "732139"
  },
  {
    "text": "to thinking about things like infrastructure and DNS we also want to",
    "start": "732139",
    "end": "737959"
  },
  {
    "text": "get some Network insight as an operator or an SRE within our organization you",
    "start": "737959",
    "end": "745459"
  },
  {
    "text": "know I'm commonly posed with questions that I want to be able to answer such as does anyone know if there are any kind",
    "start": "745459",
    "end": "751970"
  },
  {
    "text": "of network weather events going on in US East one we've seen a couple of host or Network partitions or hi there can",
    "start": "751970",
    "end": "757879"
  },
  {
    "text": "someone help me resolve a network connectivity issue between one micro service or another all right these are common questions I",
    "start": "757879",
    "end": "763740"
  },
  {
    "text": "want to be able to answer them and in some cases they may not even be questions but statements around network health I'm thinking this might be due to",
    "start": "763740",
    "end": "770160"
  },
  {
    "text": "some networking unpleasantness or I'm seeing what seems to be Network related errors on startup and the biggest thing",
    "start": "770160",
    "end": "776640"
  },
  {
    "text": "for me is how do I answer these VPC is a black box you don't really have a lot of",
    "start": "776640",
    "end": "782520"
  },
  {
    "text": "insight into the network but we want to extract some you want to gather some information about this so what have we",
    "start": "782520",
    "end": "789600"
  },
  {
    "text": "turned to well one of the advantages when we moved into V PC was this ability",
    "start": "789600",
    "end": "794700"
  },
  {
    "text": "to have flow logs alright these flow logs are records of traffic flow within",
    "start": "794700",
    "end": "800340"
  },
  {
    "text": "our environment between our applications and we found that flow logs are really good you know they're a canonical source",
    "start": "800340",
    "end": "806970"
  },
  {
    "text": "of this information they're given to us in a semi timely manner but as we",
    "start": "806970",
    "end": "812040"
  },
  {
    "text": "started to look at those to start answering some of the questions one of the things that we realize is that flow",
    "start": "812040",
    "end": "817920"
  },
  {
    "text": "logs are really good but really good meaningless data their IP is talking to",
    "start": "817920",
    "end": "823320"
  },
  {
    "text": "IPS right remember we're big and dynamic our ip's change all the time it's very",
    "start": "823320",
    "end": "829230"
  },
  {
    "text": "difficult to determine what those are so Donovan you've done a lot of work you know looking at vbc flow logs and trying",
    "start": "829230",
    "end": "835830"
  },
  {
    "text": "to identify some of the problems around them you know what are some of the things you've seen absolutely thanks",
    "start": "835830",
    "end": "842190"
  },
  {
    "text": "Joel again my name is Donovan Fritz I am another member of the cloud networking team at Netflix I've spent a lot of time",
    "start": "842190",
    "end": "849150"
  },
  {
    "text": "looking at VB flow logs and I think Joel hit the nail on the head here when you really start looking at VP throw logs",
    "start": "849150",
    "end": "856080"
  },
  {
    "text": "and diving in and trying to derive some insight from them they're really meaningless in the end and that's",
    "start": "856080",
    "end": "861870"
  },
  {
    "text": "because they lack context so who here has seen a vbc flow log record before I'm gonna show it hands awesome a lot of",
    "start": "861870",
    "end": "868110"
  },
  {
    "text": "you it's exciting it's super exciting ok so this is the BBC flow log record from the Amazon help site and we can see",
    "start": "868110",
    "end": "875490"
  },
  {
    "text": "based in this example there are two things communicating they're the two IP addresses in there and so we see two",
    "start": "875490",
    "end": "881640"
  },
  {
    "text": "things communicating inside VPC we see dot 1 3 9 in blue and dot 21 and green",
    "start": "881640",
    "end": "888860"
  },
  {
    "text": "but the problem is is that I have no idea what these are is there two IP addresses communicate",
    "start": "888860",
    "end": "894839"
  },
  {
    "text": "inside VPC but still having this information means absolutely nothing to me as Joel mentioned earlier in typical",
    "start": "894839",
    "end": "904380"
  },
  {
    "text": "networks we have the idea of network segmentation and a lot of networks I've",
    "start": "904380",
    "end": "909839"
  },
  {
    "text": "worked in in the past it's really common to be able to look at an IP address and understand that it's a database in this",
    "start": "909839",
    "end": "915690"
  },
  {
    "text": "data center or this IP address looks like this so it must be an Active Directory server in this corporate",
    "start": "915690",
    "end": "920910"
  },
  {
    "text": "office in the cloud we don't have any of this network segmentation again our service most forklifted from ec2 classic",
    "start": "920910",
    "end": "927720"
  },
  {
    "text": "into V PC that means that our V pcs end up being these large flat IP spaces and",
    "start": "927720",
    "end": "933480"
  },
  {
    "text": "they contain all of our resources now most of the time these resources are ec2",
    "start": "933480",
    "end": "939089"
  },
  {
    "text": "instances that we have a lot of control over but V pcs will also contain resources that we don't have a lot of",
    "start": "939089",
    "end": "944820"
  },
  {
    "text": "control over services like load balancers lastic cash lambda al B's RDS",
    "start": "944820",
    "end": "952079"
  },
  {
    "text": "all these services live inside of our V PC they all have addresses within our V PC address range and so when we see",
    "start": "952079",
    "end": "959220"
  },
  {
    "text": "these addresses communicating inside V PC we want to know what they are now",
    "start": "959220",
    "end": "964589"
  },
  {
    "text": "this isn't a problem with just things inside of our V PC but also services outside of our V PC as well so Amazon",
    "start": "964589",
    "end": "971459"
  },
  {
    "text": "sqs or the simple queue service is a great example of a service amazon offers that lives outside of our V PC it's",
    "start": "971459",
    "end": "979020"
  },
  {
    "text": "still in AWS but not in our V PC within AWS now typically when we interact with",
    "start": "979020",
    "end": "985170"
  },
  {
    "text": "HQs we use the provided SDK under the hood that SDK resolves a hostname that",
    "start": "985170",
    "end": "991980"
  },
  {
    "text": "hostname resolves to an IP address and so when we look at network level information like what we have in flow",
    "start": "991980",
    "end": "997980"
  },
  {
    "text": "logs we see this IP address show up and we want to know what it is so if we're trying to figure out a",
    "start": "997980",
    "end": "1006020"
  },
  {
    "text": "question that we want to have answered what are we really trying to get at here we want to know what application has",
    "start": "1006020",
    "end": "1011899"
  },
  {
    "text": "these IP addresses but it's actually a lot more complicated than that as we've discovered and this question isn't quite",
    "start": "1011899",
    "end": "1019459"
  },
  {
    "text": "good enough and we're going to update it in a second and the first big challenge that we ran into was that ideas change a",
    "start": "1019459",
    "end": "1025668"
  },
  {
    "text": "lot so if you think about a journey of an IP address through time at some point in",
    "start": "1025669",
    "end": "1031370"
  },
  {
    "text": "time let's say t1 that IP address could be assigned to an ec2 instance if that",
    "start": "1031370",
    "end": "1036470"
  },
  {
    "text": "instance is stopped terminated if for whatever reason it stops using that IP address is free to be used by something",
    "start": "1036470",
    "end": "1042199"
  },
  {
    "text": "else at this point in time I like to think of the V PC as a bucket of tokens and IP addresses are the the tokens",
    "start": "1042199",
    "end": "1049520"
  },
  {
    "text": "within that bucket now in order to communicate on the IP fabric that is V PC you need to hold on to a token that",
    "start": "1049520",
    "end": "1055250"
  },
  {
    "text": "token is yours and only your's to communicate and once you're done communicating you put it back in the",
    "start": "1055250",
    "end": "1061160"
  },
  {
    "text": "bucket and it's free to be used by something else once this instance is done with this address it can be picked",
    "start": "1061160",
    "end": "1066710"
  },
  {
    "text": "up by something else another resource it doesn't have to be an instance it could be something that we have little control over like a lambda function this lambda",
    "start": "1066710",
    "end": "1074180"
  },
  {
    "text": "function can live in our V PC and it can take that token from that bucket and use it to communicate and when it's done it",
    "start": "1074180",
    "end": "1079910"
  },
  {
    "text": "will put it back into the bucket where that IP address is then free to be used by something else like another ec2",
    "start": "1079910",
    "end": "1085100"
  },
  {
    "text": "instance it could be another Amazon resource as well just the dynamic nature is what's key here and again in our",
    "start": "1085100",
    "end": "1091910"
  },
  {
    "text": "environment this happens a lot so we're looking at that same graph that Joel had showed earlier of our IP utilization and",
    "start": "1091910",
    "end": "1097630"
  },
  {
    "text": "again we have our time on the x-axis to the two-week time span in our percentage",
    "start": "1097630",
    "end": "1103400"
  },
  {
    "text": "of utilization on the y-axis but what's interesting here and something different that I want to point out from Joel",
    "start": "1103400",
    "end": "1109400"
  },
  {
    "text": "earlier are these sharp increases in decreases now these big changes are actually an artifact of how we deploy",
    "start": "1109400",
    "end": "1115640"
  },
  {
    "text": "software at Netflix at Netflix and we deploy software into production we put that software onto new ec2 instance",
    "start": "1115640",
    "end": "1122300"
  },
  {
    "text": "inside of a new auto scaling group and we bring that auto scaling group to the same size as the old one shift rack look",
    "start": "1122300",
    "end": "1128420"
  },
  {
    "text": "we have traffic over and then decommission the old ASG and so when we have very large clusters doing software",
    "start": "1128420",
    "end": "1135290"
  },
  {
    "text": "deployments we have a very large influx of IPs suddenly being used and then when",
    "start": "1135290",
    "end": "1140540"
  },
  {
    "text": "that old cluster is done all the traffic is shifted over we have a sudden influx of IP addresses suddenly not being used",
    "start": "1140540",
    "end": "1146720"
  },
  {
    "text": "this just goes to show how much IP addresses change in our environment so",
    "start": "1146720",
    "end": "1152960"
  },
  {
    "text": "when we bring back our questions from earlier we need to add in this temporal component we need to think about this in in",
    "start": "1152960",
    "end": "1158450"
  },
  {
    "text": "terms of time we want to know what application or service how these IP addresses at this time because again",
    "start": "1158450",
    "end": "1165650"
  },
  {
    "text": "when we see these IPS and foe logs we don't really care about the address we care about the service or the application we want to be able to tie",
    "start": "1165650",
    "end": "1172250"
  },
  {
    "text": "that flow log record back to a longer lived entity again like an application or a service but even this question is",
    "start": "1172250",
    "end": "1179510"
  },
  {
    "text": "not quite good enough as Joel mentioned earlier we have global unique address space in our environment but we're not",
    "start": "1179510",
    "end": "1187520"
  },
  {
    "text": "perfect we do have corner cases where we do have overlapping VB sees and as somebody was",
    "start": "1187520",
    "end": "1193940"
  },
  {
    "text": "a strong networking background I consider overlapping IP space to be in the same routing domain so if we update",
    "start": "1193940",
    "end": "1200990"
  },
  {
    "text": "our question one more time we need to add in the routing domain we want to know what application had these IPs",
    "start": "1200990",
    "end": "1209090"
  },
  {
    "text": "at this time in this grounding domain and this is really the first big challenge with EPC flow logs the IP",
    "start": "1209090",
    "end": "1215870"
  },
  {
    "text": "addresses mean nothing so we're gonna go back to our VB flow log record example",
    "start": "1215870",
    "end": "1221960"
  },
  {
    "text": "again and we're going to look at another big challenge so with this flow log",
    "start": "1221960",
    "end": "1227810"
  },
  {
    "text": "record again we see two things communicating here but we don't know who's talking to two we don't know if",
    "start": "1227810",
    "end": "1233420"
  },
  {
    "text": "it's doubt 139 talking 2.21 or the other way around these records are stateless so if we look at if we",
    "start": "1233420",
    "end": "1245540"
  },
  {
    "text": "look at the TCP port numbers within the flow log record it's easy to see that dot 139 was sending traffic from TCP",
    "start": "1245540",
    "end": "1252800"
  },
  {
    "text": "port 2 0 6 4 1 going to TCP port 22 and we're in Vegas so if I'm gonna make a",
    "start": "1252800",
    "end": "1258980"
  },
  {
    "text": "bet as to which one's talking to which one I would say this is ssh traffic from doubt 139 going to dot 21 but if we",
    "start": "1258980",
    "end": "1268610"
  },
  {
    "text": "change the port numbers to something a lot less obvious it's much more difficult to see what's going on here in",
    "start": "1268610",
    "end": "1274070"
  },
  {
    "text": "this example now I've changed them to TCP port 1 1 2 1 1 & 8 0 0 8 now if",
    "start": "1274070",
    "end": "1281630"
  },
  {
    "text": "you're networking nerd like me port 1 1 2 1 1 would set up a light bulb and you would think that this must be memcache",
    "start": "1281630",
    "end": "1287960"
  },
  {
    "text": "this must be dot 21 speaking - 2.1 39 but if we consider what these",
    "start": "1287960",
    "end": "1295490"
  },
  {
    "text": "IP addresses are actually assigned to at this time this doesn't make sense this is a classic as if da 139 is the classic load",
    "start": "1295490",
    "end": "1302899"
  },
  {
    "text": "balancer this site this example kind of breaks down this classic load balancer",
    "start": "1302899",
    "end": "1308990"
  },
  {
    "text": "could be fronting the memcache cluster but we don't do that in our environment so now our assumptions about trying to",
    "start": "1308990",
    "end": "1315019"
  },
  {
    "text": "derive directionality from a state list of VV full log record is absolutely incorrect what was actually happening",
    "start": "1315019",
    "end": "1323690"
  },
  {
    "text": "here is that this is HTTP traffic over a non-standard port and the classic load balancer just happened to choose a",
    "start": "1323690",
    "end": "1330610"
  },
  {
    "text": "source ephemeral port of 1 1 2 1 1 that just happens to overlap with a",
    "start": "1330610",
    "end": "1336950"
  },
  {
    "text": "well-known service so we can see in this example that making assumptions around",
    "start": "1336950",
    "end": "1342889"
  },
  {
    "text": "TCP port numbers is problematic it's still problematic in fact in our environment we don't even do it so the",
    "start": "1342889",
    "end": "1351289"
  },
  {
    "text": "next challenge that we kind of run in 2 or 3 BC flow logs is that they're fragmented and fragmented is kind of an",
    "start": "1351289",
    "end": "1357049"
  },
  {
    "text": "interesting term interesting word choice let me show you the meaning so if we look at if we look at a connection",
    "start": "1357049",
    "end": "1364340"
  },
  {
    "text": "between two ec2 instances inside V PC this could be anything could be one micro service talking to another it",
    "start": "1364340",
    "end": "1370519"
  },
  {
    "text": "could be nodes in a Cassandra ring replicating data between each other if for whatever reason we have two",
    "start": "1370519",
    "end": "1376309"
  },
  {
    "text": "instances inside a vbc community or sending traffic we actually get for vbc",
    "start": "1376309",
    "end": "1381710"
  },
  {
    "text": "flow log records and this is an artifact of how flow log records are generated to begin with and V PC full log records are",
    "start": "1381710",
    "end": "1389960"
  },
  {
    "text": "generated by ionized or elastic network interfaces again they're stateless as we just mentioned so we'll always get one",
    "start": "1389960",
    "end": "1397070"
  },
  {
    "text": "record for traffic out in one record for traffic in and we see this on both sides of the connection we have for V PC full",
    "start": "1397070",
    "end": "1404480"
  },
  {
    "text": "log records now describing this one TCP connection",
    "start": "1404480",
    "end": "1409659"
  },
  {
    "text": "now I'll call that easy mode it's not quite fragmented yet but if we step up",
    "start": "1409720",
    "end": "1415130"
  },
  {
    "text": "to what I'm going to call medium level difficulty it gets a little bit more interesting now the same green instance",
    "start": "1415130",
    "end": "1421760"
  },
  {
    "text": "the information around that stays the same one record for traffic got one record for traffic again but as this",
    "start": "1421760",
    "end": "1428060"
  },
  {
    "text": "connection traverses in that gateway to an external service like Amazon sqs",
    "start": "1428060",
    "end": "1433880"
  },
  {
    "text": "again we actually see more VPC full log records as it traverses in that gateway",
    "start": "1433880",
    "end": "1439280"
  },
  {
    "text": "since NAT gateways live inside our V PC and since they live inside of our V if you see they have e'en eyes and since",
    "start": "1439280",
    "end": "1445760"
  },
  {
    "text": "they have yein eyes they generate VPC flow log records so now gateways the",
    "start": "1445760",
    "end": "1450800"
  },
  {
    "text": "purpose of the NAT gateways to NAT traffic so we see flow log records pre NAT and pulse nap for the pre NAT VV",
    "start": "1450800",
    "end": "1458060"
  },
  {
    "text": "flow log records it'll actually look like the instance of sending traffic directly to the nak a way so the layer 3",
    "start": "1458060",
    "end": "1465230"
  },
  {
    "text": "address that we see inside the flow log record will be sourced from the instances private IP going to the neck",
    "start": "1465230",
    "end": "1470600"
  },
  {
    "text": "gateways private IP and then we see the opposite for the other side of the state and full connection and on the post NAT",
    "start": "1470600",
    "end": "1477920"
  },
  {
    "text": "side of the traffic flow we see something very similar we see traffic source from the private IP of the NAT",
    "start": "1477920",
    "end": "1485120"
  },
  {
    "text": "gateway going to the public IP of Amazon sqs now this is what I again what I call",
    "start": "1485120",
    "end": "1492470"
  },
  {
    "text": "medium level difficulty it gets even more interesting if we replace sqs with a classic load balancer",
    "start": "1492470",
    "end": "1500230"
  },
  {
    "text": "now in this in this particular example we're replacing the neck or sqs with a",
    "start": "1502590",
    "end": "1507840"
  },
  {
    "text": "classic load balancer and since load balancers terminate TCP connections and they need to service that connection to",
    "start": "1507840",
    "end": "1514019"
  },
  {
    "text": "a back-end instance this now one service call generates two TCP connections so",
    "start": "1514019",
    "end": "1522539"
  },
  {
    "text": "since the classic load balancer is something that lives inside of our V PC it has an e nine and it generates full",
    "start": "1522539",
    "end": "1528929"
  },
  {
    "text": "log records and since it generates full log records we see the traffic from the",
    "start": "1528929",
    "end": "1534389"
  },
  {
    "text": "NAT gateway now going to the classic load balancer like that and what's",
    "start": "1534389",
    "end": "1540539"
  },
  {
    "text": "interesting about these full log records is that they're gonna show the exact opposite of what the nak eight-way shows",
    "start": "1540539",
    "end": "1546330"
  },
  {
    "text": "so again the NAT gateway will be coming the later three addresses inside the full log records will come from the",
    "start": "1546330",
    "end": "1552929"
  },
  {
    "text": "private IP address of the NAT gateway going to the public IP address of a classic load balancer and the classic",
    "start": "1552929",
    "end": "1559679"
  },
  {
    "text": "load balancer now will actually show the opposite it'll show the public IP address of the NAT gateway going to the",
    "start": "1559679",
    "end": "1566009"
  },
  {
    "text": "private IP address of the classic load balancer now since this classic load balancer has",
    "start": "1566009",
    "end": "1571740"
  },
  {
    "text": "to respond to this request via this back-end ec2 instance we'll see flow log",
    "start": "1571740",
    "end": "1576869"
  },
  {
    "text": "records describing that traffic flow from the classic load balancers perspective and from the instances perspective now this is a fairly",
    "start": "1576869",
    "end": "1585230"
  },
  {
    "text": "complicated example and but this is actually something very common at Netflix if you consider Atlas our open",
    "start": "1585230",
    "end": "1593279"
  },
  {
    "text": "sourced monitoring system this is what it looks like when it publishes traffic cross region we actually see this exact",
    "start": "1593279",
    "end": "1600090"
  },
  {
    "text": "same traffic flow in our environment in this example we have two TCP connections",
    "start": "1600090",
    "end": "1605999"
  },
  {
    "text": "in 12v BC flow log records now did everybody follow exactly what I just said",
    "start": "1605999",
    "end": "1612110"
  },
  {
    "text": "okay so there's there's some smart people there we got a few hands but the point is is that this is complicated we",
    "start": "1612110",
    "end": "1619740"
  },
  {
    "text": "have all this complexity to TCP connections 12v BC flow log records NAT",
    "start": "1619740",
    "end": "1625529"
  },
  {
    "text": "gateways load balancers we have all this complexity in all I'm really trying to answer from VVC flow logs all I really",
    "start": "1625529",
    "end": "1631950"
  },
  {
    "text": "care about is that the Greene instance communicating to the service in white",
    "start": "1631950",
    "end": "1637289"
  },
  {
    "text": "now the last challenge of BBC flow logs it has to do with our scale as Joel",
    "start": "1637380",
    "end": "1642760"
  },
  {
    "text": "mentioned earlier we operate in four amazon regions we have 75 accounts over",
    "start": "1642760",
    "end": "1648190"
  },
  {
    "text": "75 accounts we service over a million requests to are from our customers every single second and that a teeny given",
    "start": "1648190",
    "end": "1654760"
  },
  {
    "text": "time we have well over a hundred and fifty thousand ec2 instances online and running this all totals for up to 10",
    "start": "1654760",
    "end": "1663549"
  },
  {
    "text": "million VB Street flow log records every single second so if you really think",
    "start": "1663549",
    "end": "1668559"
  },
  {
    "text": "about that in the time that Joel and I have been up here talking we've Netflix as a company has generated well over a",
    "start": "1668559",
    "end": "1674380"
  },
  {
    "text": "billion vbc flow log records so now I",
    "start": "1674380",
    "end": "1679690"
  },
  {
    "text": "talked about the challenges quite a bit let's go through the solutions how are we going to solve each one of these",
    "start": "1679690",
    "end": "1684820"
  },
  {
    "text": "challenges for the first one if you remember we left off with this great",
    "start": "1684820",
    "end": "1690400"
  },
  {
    "text": "question we wanted to know what application or service had these IP addresses at this time in this routing",
    "start": "1690400",
    "end": "1696610"
  },
  {
    "text": "domain I think this is a really great question to answer to ask rather because it has specific inputs and it has",
    "start": "1696610",
    "end": "1703059"
  },
  {
    "text": "specific outputs it's a function it's a function we can design and build a system around given a routing domain an",
    "start": "1703059",
    "end": "1710110"
  },
  {
    "text": "IP address and a timestamp tell me what application or service had that address",
    "start": "1710110",
    "end": "1715230"
  },
  {
    "text": "the system that we've been working on internally to to answer this question is called sonar sonar works like this it's",
    "start": "1715230",
    "end": "1726520"
  },
  {
    "text": "broken down into three phases extract transform and load so we extract data",
    "start": "1726520",
    "end": "1733510"
  },
  {
    "text": "from cloud watch events from our own internal Netflix events and then we transform them into other events and we",
    "start": "1733510",
    "end": "1741730"
  },
  {
    "text": "transform them so that everything is in the context of an IP address we take",
    "start": "1741730",
    "end": "1747190"
  },
  {
    "text": "these events and then we send them into another data stream this data stream we",
    "start": "1747190",
    "end": "1753280"
  },
  {
    "text": "call it an IP change stream and we call all the events IP change events so this data stream now is our canonical source",
    "start": "1753280",
    "end": "1759039"
  },
  {
    "text": "of truth for what happened to an IP address over time this data stream will dictate any time something changes to an",
    "start": "1759039",
    "end": "1766210"
  },
  {
    "text": "address so if the private IP address was assigned to Annie and I a change event is generated if that you NIH's attached",
    "start": "1766210",
    "end": "1774160"
  },
  {
    "text": "to an ec2 instance a change event is generated if a titus container uses that",
    "start": "1774160",
    "end": "1779860"
  },
  {
    "text": "private IP address which is on an ec2 instance which is using that en I a change event is generated now Titus for",
    "start": "1779860",
    "end": "1787720"
  },
  {
    "text": "those who may have never heard before is our container platform at Netflix so we",
    "start": "1787720",
    "end": "1795370"
  },
  {
    "text": "don't live in a perfect world and unfortunately we can't make everything adventure then so there are still some cases where we have to do some polling",
    "start": "1795370",
    "end": "1800920"
  },
  {
    "text": "methodologies we have to pull the Amazon API we have to pull our own internal api's and some of our own internal logs",
    "start": "1800920",
    "end": "1806530"
  },
  {
    "text": "and then we have this really fun DNS crawling technique and we take these data sources we pull them at regular",
    "start": "1806530",
    "end": "1812140"
  },
  {
    "text": "intervals and so for the DNS crawling technique what we do is we think about",
    "start": "1812140",
    "end": "1817390"
  },
  {
    "text": "that Amazon sqs example we're trying to track something that is virtually intractable so we do is we generate all",
    "start": "1817390",
    "end": "1825220"
  },
  {
    "text": "the host names that all the Amazon services use so the host name that the Amazon SDK will actually use under the",
    "start": "1825220",
    "end": "1831880"
  },
  {
    "text": "hood we resolve that over and over and over again and we catalog the changes over time and then anytime we detect a",
    "start": "1831880",
    "end": "1837700"
  },
  {
    "text": "change we then put it in this stream as well so this is really great because we have this data stream that just that",
    "start": "1837700",
    "end": "1844380"
  },
  {
    "text": "depicts things inside of our V PC but also things outside of our V PC but",
    "start": "1844380",
    "end": "1849580"
  },
  {
    "text": "still in Amazon so anytime sqs uses a new IP address we we add a change event",
    "start": "1849580",
    "end": "1856570"
  },
  {
    "text": "anytime another Amazon service SMS is another great example the simple notification service anytime we detect",
    "start": "1856570",
    "end": "1863140"
  },
  {
    "text": "an IP change there we also put it into this change stream so that's great for",
    "start": "1863140",
    "end": "1868750"
  },
  {
    "text": "IP addresses now we have metadata around IP address as we can answer the",
    "start": "1868750",
    "end": "1874060"
  },
  {
    "text": "questions that we were asking before but what do we do about this stateless problem so what we do is remember we we",
    "start": "1874060",
    "end": "1882490"
  },
  {
    "text": "ran into problems and we had some challenges around being able to deterministic lis make our deterministic",
    "start": "1882490",
    "end": "1889690"
  },
  {
    "text": "figure out the state of a of a connection based on a stateless BBC flow log record and so as I mentioned earlier",
    "start": "1889690",
    "end": "1895390"
  },
  {
    "text": "we don't guess around port numbers we want to know for a fact so we do is you run our flea of ec2",
    "start": "1895390",
    "end": "1900820"
  },
  {
    "text": "instances and we run the Amazon SSM agent on them this SSM agent is in",
    "start": "1900820",
    "end": "1905980"
  },
  {
    "text": "responsible for telling us watch TCP or UDP port numbers that particular",
    "start": "1905980",
    "end": "1911559"
  },
  {
    "text": "instance was listening on and then we get this and we process this and we store it into a key value store for a",
    "start": "1911559",
    "end": "1916630"
  },
  {
    "text": "later lookup so the fragmented problem if you remember things got pretty",
    "start": "1916630",
    "end": "1923350"
  },
  {
    "text": "interesting we had one service call going across region two TCP connections up to 12 VB so log records ton of",
    "start": "1923350",
    "end": "1929799"
  },
  {
    "text": "complexity how do we solve this problem the truth is we don't we live with it",
    "start": "1929799",
    "end": "1935409"
  },
  {
    "text": "this is a known deficiency and it's something we need to be really cognizant of because when we start looking at the",
    "start": "1935409",
    "end": "1941710"
  },
  {
    "text": "data as we're gonna show later we need to understand how the data is being generated from flow logs and it's gonna",
    "start": "1941710",
    "end": "1947980"
  },
  {
    "text": "make sense and we're gonna see how the known deficiencies actually play out",
    "start": "1947980",
    "end": "1953500"
  },
  {
    "text": "when we're looking at the data so now for the last solution again this has to",
    "start": "1953500",
    "end": "1959950"
  },
  {
    "text": "do with our scale how do we as a company crunch through all these millions of vbc flow log records every single second the",
    "start": "1959950",
    "end": "1967659"
  },
  {
    "text": "system that does this internally is called dredge way dredge works is it",
    "start": "1967659",
    "end": "1972880"
  },
  {
    "text": "assumes that IP change events from sonar and vbc flow logs are both infinite data",
    "start": "1972880",
    "end": "1979659"
  },
  {
    "text": "streams and what dredge does is it takes the data from both those streams and it performs joins on them and then the",
    "start": "1979659",
    "end": "1987940"
  },
  {
    "text": "output of this is it would create what we call enriched DBC flow log records and these are rich previously flow log",
    "start": "1987940",
    "end": "1993760"
  },
  {
    "text": "records are put into yet another data stream and we leverage our internal data pipeline are already built",
    "start": "1993760",
    "end": "2000630"
  },
  {
    "text": "infrastructure for handling large amounts of data we leverage that for all of our enriched BBC flow log records the",
    "start": "2000630",
    "end": "2008120"
  },
  {
    "text": "the data pipeline team is then responsible for managing all those events and routing them into a Drude",
    "start": "2008120",
    "end": "2014490"
  },
  {
    "text": "cluster and for those who have made have never heard of drew before druid is a column-oriented distributed data store",
    "start": "2014490",
    "end": "2021870"
  },
  {
    "text": "and the reason why we use it is because it really excels at fast interactive queries",
    "start": "2021870",
    "end": "2028240"
  },
  {
    "text": "before I continue I need to mention that our colleague John Bennett is going to",
    "start": "2028240",
    "end": "2033620"
  },
  {
    "text": "be presenting on this system in much more detail tomorrow his talk is in the analytics and big data tracked accession",
    "start": "2033620",
    "end": "2039470"
  },
  {
    "text": "number abd 4:01 I encourage everybody to go view his session as well it's",
    "start": "2039470",
    "end": "2045230"
  },
  {
    "text": "tomorrow at 4 o'clock again abd 4 0 1 so",
    "start": "2045230",
    "end": "2050419"
  },
  {
    "text": "now as I mentioned dredge needs BBC flow logs to be in a data stream we use Amazon Kinesis for this and the",
    "start": "2050419",
    "end": "2057110"
  },
  {
    "text": "way we do this is we enable VB flow logs at the VB sea level then the flow logs",
    "start": "2057110",
    "end": "2063648"
  },
  {
    "text": "are then sent into a cloud watch log group we use cross account log sharing to aggregate all of our V pcs across all",
    "start": "2063649",
    "end": "2070220"
  },
  {
    "text": "of our accounts into a centralized source into a centralized account rather once in the centralized account we then",
    "start": "2070220",
    "end": "2076700"
  },
  {
    "text": "aggregate them across all the different regions into a centralized Kinesis stream so now that we have all these",
    "start": "2076700",
    "end": "2084378"
  },
  {
    "text": "full log records in a centralized Kinesis stream we need to join the data with the IP change events so it's going",
    "start": "2084379",
    "end": "2091280"
  },
  {
    "text": "to get really fun here so if you remember we have our three pieces of information that we need from sonar we",
    "start": "2091280",
    "end": "2097128"
  },
  {
    "text": "have the routing domain the IP address and the timestamp all present in the VB flow log record now technically the",
    "start": "2097129",
    "end": "2103970"
  },
  {
    "text": "routing domain isn't the account number in the en I ID we have to do another lookup to derive the routing domain but",
    "start": "2103970",
    "end": "2110330"
  },
  {
    "text": "given any account number in an ID in our system we can determine ously to make that lookup happen so we have our sonar",
    "start": "2110330",
    "end": "2118100"
  },
  {
    "text": "function domain IP time tell me what application has we take the IP address",
    "start": "2118100",
    "end": "2123320"
  },
  {
    "text": "and the start timestamp of each of this flow log and we plug it into this function and we get back our application",
    "start": "2123320",
    "end": "2130670"
  },
  {
    "text": "that held that address at that time so in this case we're getting back foo and bar now we need to determine the state",
    "start": "2130670",
    "end": "2137300"
  },
  {
    "text": "of the connection was this foo talking to bar or was this bar talking to foo so again we have to use that key value",
    "start": "2137300",
    "end": "2142880"
  },
  {
    "text": "store that memcache data store that we had created earlier and this will deterministically tell us if that",
    "start": "2142880",
    "end": "2149780"
  },
  {
    "text": "instance was listening on that port so in this example 2:06 for one IP address about 139 it was",
    "start": "2149780",
    "end": "2157280"
  },
  {
    "text": "not listening so I won my bet from earlier this is not this is in fact dot 139",
    "start": "2157280",
    "end": "2163660"
  },
  {
    "text": "talking in 2.21 so now we know for a fact that that was the direction of the",
    "start": "2163660",
    "end": "2169930"
  },
  {
    "text": "traffic flow so now what we do is we take these new pieces of data along with a lot of the old pieces of data and then",
    "start": "2169930",
    "end": "2177310"
  },
  {
    "text": "we mutate them into a new data structure and this new data structure is our enriched BBC flow log record and again",
    "start": "2177310",
    "end": "2184420"
  },
  {
    "text": "we just simply put that in rich BBC full log record and we hand it off into our Big Data Platform our internal data",
    "start": "2184420",
    "end": "2190330"
  },
  {
    "text": "pipeline where that team is then responsible for managing the data and routing it into Giroud cluster ooh",
    "start": "2190330",
    "end": "2198180"
  },
  {
    "text": "Joel we went through a lot of effort to enrich BBC flow log records to try and",
    "start": "2198190",
    "end": "2203770"
  },
  {
    "text": "derive meaning what do we get from all this effort good stuff Donovan Thanks",
    "start": "2203770",
    "end": "2209010"
  },
  {
    "text": "you know we you left off with me talking about how we gather some insight into the network that is VPC and and we did",
    "start": "2209010",
    "end": "2216370"
  },
  {
    "text": "all of this enriched these flow log records so we can start to actually gather some information but you know if",
    "start": "2216370",
    "end": "2222010"
  },
  {
    "text": "we take a look at historically how we gather an understanding of application dependencies you know we we used to rely",
    "start": "2222010",
    "end": "2228820"
  },
  {
    "text": "on request tracing like many application developers you know we instrument request tracing to understand what is it",
    "start": "2228820",
    "end": "2235030"
  },
  {
    "text": "from the application that you depend on and if we take an example and in this case we have our UI visualization tool",
    "start": "2235030",
    "end": "2241300"
  },
  {
    "text": "here that shows an application Themis on the left hand side and really it's only dependency from request tracing is a",
    "start": "2241300",
    "end": "2247450"
  },
  {
    "text": "Cassandra cluster now as a network person I can assume that this is not the",
    "start": "2247450",
    "end": "2253540"
  },
  {
    "text": "only call it's being made there's got to be something for you to call Cassandra to begin with yes some something that",
    "start": "2253540",
    "end": "2258880"
  },
  {
    "text": "may generate that call and since we know that the network never lies we can",
    "start": "2258880",
    "end": "2264670"
  },
  {
    "text": "utilize flow logs to look at all the different calls out there so if we take the same visualization and pump are",
    "start": "2264670",
    "end": "2270880"
  },
  {
    "text": "enriched flow logs into this we can actually see that there's a ton of other dependencies that are out there and",
    "start": "2270880",
    "end": "2276670"
  },
  {
    "text": "these may not be application dependencies but they are network dependencies right so we can see Themis",
    "start": "2276670",
    "end": "2283300"
  },
  {
    "text": "talks to SSM toxic as sandra talks to route 53 as well as several other internal applications out there",
    "start": "2283300",
    "end": "2290070"
  },
  {
    "text": "so this is some of the power that we have by gathering these in rich flow logs and helps us you know tell",
    "start": "2290070",
    "end": "2295710"
  },
  {
    "text": "developers hey you have many more dependencies than you really think and especially when it comes to troubleshooting an application this is a",
    "start": "2295710",
    "end": "2302850"
  },
  {
    "text": "good place like hey who do you talk to you where do I need to actually troubleshoot now we talked about druid",
    "start": "2302850",
    "end": "2309750"
  },
  {
    "text": "druid excels at these you know hi you know queries and one thing we laid",
    "start": "2309750",
    "end": "2316170"
  },
  {
    "text": "on top of that is swim swim is a UI visualization tool and if we take the same kind of approach of what we just",
    "start": "2316170",
    "end": "2322200"
  },
  {
    "text": "saw looking at famous we can actually see from our UI here not only do we get to",
    "start": "2322200",
    "end": "2327450"
  },
  {
    "text": "see the local app the Themis the directionality of the traffic being out as well as the splitting on the foreign",
    "start": "2327450",
    "end": "2332640"
  },
  {
    "text": "application we can see that FEMA still talks to all those but we get to see bytes volume bytes flows packets how",
    "start": "2332640",
    "end": "2339690"
  },
  {
    "text": "much data is going to these different applications to determine you know how much of a dependency is that now if you",
    "start": "2339690",
    "end": "2345510"
  },
  {
    "text": "look on the left hand side we have several dimensions we can actually slice on and and one of the nice things about",
    "start": "2345510",
    "end": "2350880"
  },
  {
    "text": "swiv is it's fast right when you lay this on top of druid Druidism excels at that fast query analysis so we can take",
    "start": "2350880",
    "end": "2357960"
  },
  {
    "text": "any of this data that we have and within seconds we can actually analyze from any",
    "start": "2357960",
    "end": "2363720"
  },
  {
    "text": "of these dimensions and if you notice we have things like time we have actions which this is valuable one of the pieces",
    "start": "2363720",
    "end": "2371010"
  },
  {
    "text": "of EPC flow logs that you get is it's really the only thing that can tell you whether a security group accepted or",
    "start": "2371010",
    "end": "2376800"
  },
  {
    "text": "rejected that traffic okay we then have things such as you know we split it on foreign and local and in those in those",
    "start": "2376800",
    "end": "2383490"
  },
  {
    "text": "kind of elements we have things like clusters applications regions VP CID",
    "start": "2383490",
    "end": "2389490"
  },
  {
    "text": "and we can filter on any of these and we can split on any of these dimensions as well as understand it volume wise from",
    "start": "2389490",
    "end": "2397140"
  },
  {
    "text": "either a bytes perspective a flows or an overall packet perspective so when you",
    "start": "2397140",
    "end": "2402630"
  },
  {
    "text": "look at things you know what does this really provide to us you know at a business level we can start to see things like how much traffic is going",
    "start": "2402630",
    "end": "2408810"
  },
  {
    "text": "between our regions right we do have global connectivity and we want to understand what is that traffic flow and",
    "start": "2408810",
    "end": "2414870"
  },
  {
    "text": "we can then you know dig further down and look at the applications that are communicating across region we can start",
    "start": "2414870",
    "end": "2421020"
  },
  {
    "text": "to do risk analysis understanding what tier we have service tiers and so we can understand the kinds",
    "start": "2421020",
    "end": "2427119"
  },
  {
    "text": "of tiers that are communicating across and understand is this risky should we talk to these application owners about",
    "start": "2427119",
    "end": "2432849"
  },
  {
    "text": "actually sending this traffic cross region now we talked earlier about fragmentation and how it's a known",
    "start": "2432849",
    "end": "2439690"
  },
  {
    "text": "deficiency within our environment and we just have to understand that and we can",
    "start": "2439690",
    "end": "2445210"
  },
  {
    "text": "do things like break this down on foreign kind of the nat gateway we can look at every single local local",
    "start": "2445210",
    "end": "2451779"
  },
  {
    "text": "application split on it and see which apps are actually using the NAT gateway right this is just the understanding we",
    "start": "2451779",
    "end": "2458469"
  },
  {
    "text": "have to have of that fragmentation and know that this really isn't traffic talking to in that gateway it's talking",
    "start": "2458469",
    "end": "2464499"
  },
  {
    "text": "through in that gateway and then we can also look from the other perspective and see from the local application or the",
    "start": "2464499",
    "end": "2469690"
  },
  {
    "text": "local kind not gateway where it's going to so we get a really good sense of a the volume of traffic we're sending out",
    "start": "2469690",
    "end": "2476200"
  },
  {
    "text": "to the Internet right because we know that if it's going through that gateway it's going out to the Internet and we can understand that you know from the",
    "start": "2476200",
    "end": "2482619"
  },
  {
    "text": "volume perspective which applications are actually doing so said there's a lot of advantages at the business level for",
    "start": "2482619",
    "end": "2489849"
  },
  {
    "text": "this but does this answer any of the questions I had or you know users brought to me on troubleshooting the",
    "start": "2489849",
    "end": "2495279"
  },
  {
    "text": "network in some cases it does write the fact that we can look at actions actually allows us to see rejects and so",
    "start": "2495279",
    "end": "2502539"
  },
  {
    "text": "we can analyze data we can look at applications to see like oh where am I getting rejects from so that allows us",
    "start": "2502539",
    "end": "2508479"
  },
  {
    "text": "to start troubleshooting some of the connection problems we may have it also",
    "start": "2508479",
    "end": "2514390"
  },
  {
    "text": "allows us to start looking at our dependencies on external services and this is powerful right when you think",
    "start": "2514390",
    "end": "2519819"
  },
  {
    "text": "about you know every cluster in our environment uses some form of aw a",
    "start": "2519819",
    "end": "2525700"
  },
  {
    "text": "service sqs SNS SES whatever it is we",
    "start": "2525700",
    "end": "2530829"
  },
  {
    "text": "need to understand what some of those dependencies are and so through dns crawling understanding the IP addresses",
    "start": "2530829",
    "end": "2537190"
  },
  {
    "text": "of all these services being able to use that metadata we can start to see which applications depend on sqs we can see",
    "start": "2537190",
    "end": "2544479"
  },
  {
    "text": "the volume of those and we can start to understand if that breaks what's gonna",
    "start": "2544479",
    "end": "2549910"
  },
  {
    "text": "happen which applications are actually gonna suffer or be degraded due to that service not being available",
    "start": "2549910",
    "end": "2556990"
  },
  {
    "text": "now as an SRE you know I also want to be",
    "start": "2556990",
    "end": "2562520"
  },
  {
    "text": "able to answer questions I get daily and with sonar we have IP metadata we use it",
    "start": "2562520",
    "end": "2569630"
  },
  {
    "text": "for dredge to enrich flow logs but it can be used for other things so for example when you slack and the nice",
    "start": "2569630",
    "end": "2577430"
  },
  {
    "text": "thing about slack is you can build slack BOTS and so we built a sonar bot that's",
    "start": "2577430",
    "end": "2582530"
  },
  {
    "text": "sonar Bart listens for IP addresses and instead of us having to answer it does for us so in this example if somebody's",
    "start": "2582530",
    "end": "2589849"
  },
  {
    "text": "asking hey I'm seeing a large amount of requests coming from this IP address can anyone help we can kind of nudge sonar",
    "start": "2589849",
    "end": "2595790"
  },
  {
    "text": "and say hey give me this info here you can see it responds with the fact it's in that gateway the region the nad ID",
    "start": "2595790",
    "end": "2603460"
  },
  {
    "text": "the account it's in right we don't have to do anything really it's nice because",
    "start": "2603460",
    "end": "2608690"
  },
  {
    "text": "it allows users to interact with this we also have a feature-rich API that has the ability for you know",
    "start": "2608690",
    "end": "2615619"
  },
  {
    "text": "programmatic access there's lots of different applications out there that want to be able to use this see what ip's are out there you know they may do",
    "start": "2615619",
    "end": "2622640"
  },
  {
    "text": "some metadata transformation at first where they grab a whole bunch of my peas they want to know what they are you know",
    "start": "2622640",
    "end": "2628160"
  },
  {
    "text": "this gives us that capability now again I'm a necessary so I get troubleshooting",
    "start": "2628160",
    "end": "2633740"
  },
  {
    "text": "questions a lot one of the things that I sometimes have to dig into his net stat how many guys jump on boxes run that",
    "start": "2633740",
    "end": "2640130"
  },
  {
    "text": "stat out there yeah me too it's problematic again",
    "start": "2640130",
    "end": "2645680"
  },
  {
    "text": "because I don't know what they these IP addresses mean just like flow logs the same problem goes with this I don't want",
    "start": "2645680",
    "end": "2651890"
  },
  {
    "text": "to spend my time troubleshooting what these connections are understanding what those IPS are so luckily we also have",
    "start": "2651890",
    "end": "2657980"
  },
  {
    "text": "some you know scripting around being able to take netstat data and pump it out to a pretty table like this hey now",
    "start": "2657980",
    "end": "2666560"
  },
  {
    "text": "I don't see eye peas I see directionality I see what kindness",
    "start": "2666560",
    "end": "2672170"
  },
  {
    "text": "is is it an instance is it an aw a service if it's an instance where does",
    "start": "2672170",
    "end": "2677540"
  },
  {
    "text": "this live what is G is it and what cluster is it in I get account info I",
    "start": "2677540",
    "end": "2682790"
  },
  {
    "text": "get regionality info I get state quantity right would this make it any",
    "start": "2682790",
    "end": "2689180"
  },
  {
    "text": "easier for you guys to troubleshoot out there absolutely now the biggest",
    "start": "2689180",
    "end": "2697070"
  },
  {
    "text": "question we have I know when you guys going to open source this I want it I",
    "start": "2697070",
    "end": "2702610"
  },
  {
    "text": "could use it in my environment and we're working on it you know the one of the",
    "start": "2702610",
    "end": "2709190"
  },
  {
    "text": "challenges we have is we have so many Netflix dependencies in it that we have to weed all those out and we have to try",
    "start": "2709190",
    "end": "2715220"
  },
  {
    "text": "to provide a product that would still work within your environment ok so we're working on it you know in",
    "start": "2715220",
    "end": "2721670"
  },
  {
    "text": "the meantime it has a team we love to talk to people we love to reach out and",
    "start": "2721670",
    "end": "2727160"
  },
  {
    "text": "you know understand is there anything we're missing out of this or or you know how could this help you in your environment we are gonna be at the booth",
    "start": "2727160",
    "end": "2734300"
  },
  {
    "text": "after this so if you want to stop by talk to us about it you want to you know meet out in the lobby we'd love to",
    "start": "2734300",
    "end": "2740060"
  },
  {
    "text": "discuss this with you because you know we're solving some of the problems that we have but you know there are things we",
    "start": "2740060",
    "end": "2746300"
  },
  {
    "text": "might not understand or know or you know for example the fragmentation problem someone may have solved that already in",
    "start": "2746300",
    "end": "2753050"
  },
  {
    "text": "we don't know about it so we'd love to come talk to you or love to talk to you about it so what's next where do we go",
    "start": "2753050",
    "end": "2761150"
  },
  {
    "text": "from here does this provide enough information to be able to answer some of",
    "start": "2761150",
    "end": "2766820"
  },
  {
    "text": "the questions that we have out there and the answer is unfortunately no right",
    "start": "2766820",
    "end": "2772070"
  },
  {
    "text": "this provides a lot more insight into the network the traffic that are going on but it's really not",
    "start": "2772070",
    "end": "2778069"
  },
  {
    "text": "enough to think about you know answering Network weather events for example and so we want to take this a step further",
    "start": "2778069",
    "end": "2784940"
  },
  {
    "text": "you know what what we're doing next is really going to be setting up some EBV f",
    "start": "2784940",
    "end": "2790160"
  },
  {
    "text": "on instance grabbing an understanding of TCP state an understanding of average",
    "start": "2790160",
    "end": "2796309"
  },
  {
    "text": "round-trip time latency things like retransmissions and pumping as further",
    "start": "2796309",
    "end": "2803869"
  },
  {
    "text": "enriching those VPC flow logs with this data and that's one of the next challenges that my colleague John",
    "start": "2803869",
    "end": "2810380"
  },
  {
    "text": "Bennett's actually gonna be working on here all right well we appreciate you",
    "start": "2810380",
    "end": "2816440"
  },
  {
    "text": "coming out and talking to us said my name is Joel Kodama you can see my email addresses up here please feel free to",
    "start": "2816440",
    "end": "2822319"
  },
  {
    "text": "reach out Donavan yep again my name is Donovan Fritz Joel and I work",
    "start": "2822319",
    "end": "2828740"
  },
  {
    "text": "hand-in-hand together it's difficult in this type of theater to do open Q&A so what we're gonna do is we're gonna kind",
    "start": "2828740",
    "end": "2834800"
  },
  {
    "text": "of walk off stage here and feel free to come up and ask us questions there is another event that we have to kind of",
    "start": "2834800",
    "end": "2840589"
  },
  {
    "text": "clear out of here for so if we get kicked out of the theater then just meet us in the hallway and then after that",
    "start": "2840589",
    "end": "2846109"
  },
  {
    "text": "we'll be at the Netflix booth from the Expo Center so thanks everybody's enjoyed the talk we'd love to talk to",
    "start": "2846109",
    "end": "2851660"
  },
  {
    "text": "you some more about this [Applause]",
    "start": "2851660",
    "end": "2856690"
  }
]