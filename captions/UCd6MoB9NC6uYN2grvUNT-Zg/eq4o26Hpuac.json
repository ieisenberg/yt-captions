[
  {
    "text": "Amazon Redshift Serverless makes it easy to run\nand scale analytics in seconds without the need to",
    "start": "600",
    "end": "5799"
  },
  {
    "text": "set up and manage data warehouse infrastructure. \nIn this demo, we’ll show you how to get started",
    "start": "5800",
    "end": "10400"
  },
  {
    "text": "with Redshift Serverless and run some \nsample queries.",
    "start": "10400",
    "end": "14799"
  },
  {
    "text": "Let’s start by heading to the Amazon Redshift console \nand creating our serverless data warehouse.",
    "start": "14800",
    "end": "19600"
  },
  {
    "text": "We could use the default settings for a quick and easy setup, but \nlet’s walk through customizing our own settings for this demo.",
    "start": "19600",
    "end": "24180"
  },
  {
    "text": "First, we’ll configure a Namespace, which is a collection of \ndatabase objects and users that groups together various",
    "start": "24180",
    "end": "31800"
  },
  {
    "text": "storage-related objects like schemas, tables, and data \nencryption keys. We’ll call it 'my-redshift-namespace'. ",
    "start": "31800",
    "end": "39140"
  },
  {
    "text": "Next, we’ll configure our admin user credentials. Let’s \nleave the admin user name alone, but check the",
    "start": "39140",
    "end": "45100"
  },
  {
    "text": "box to have Redshift generate a secure password for us. \nWe can also associate IAM roles to load and unload ",
    "start": "45100",
    "end": "52000"
  },
  {
    "text": "data or interact with related services like Amazon S3, \nCloudWatch Logs, SageMaker, or AWS Glue, if needed. ",
    "start": "52000",
    "end": "60000"
  },
  {
    "text": "Finally, instead of using the default encryption keys, \nlet’s choose our own custom AWS KMS key.",
    "start": "60000",
    "end": "66120"
  },
  {
    "text": "After configuring the Namespace, we need to configure \na Workgroup, which we’ll call 'my-redshift-workgroup'.",
    "start": "66120",
    "end": "73160"
  },
  {
    "text": "A Workgroup is a collection of compute resources\nlike RPUs, security groups, and VPC subnets,",
    "start": "73160",
    "end": "80400"
  },
  {
    "text": "which we’ve also selected. Enhanced VPC routing\nforces Redshift to route all COPY or UNLOAD",
    "start": "80400",
    "end": "86180"
  },
  {
    "text": "traffic that goes between our cluster and data\nrepositories through our VPC. We’ll leave that",
    "start": "86180",
    "end": "92100"
  },
  {
    "text": "setting turned off, as we won’t running any COPY\nor UNLOAD commands in this demo. Finally, we’ll",
    "start": "92100",
    "end": "98200"
  },
  {
    "text": "click Save Configuration, and in just a few minutes, \nour serverless Redshift cluster is ready to go!",
    "start": "98200",
    "end": "104200"
  },
  {
    "text": "Before we jump into our cluster and try out some queries, \nlet’s see how easy it is to set the base capacity for our",
    "start": "104200",
    "end": "109180"
  },
  {
    "text": "cluster and improve the overall \nquery performance. ",
    "start": "109180",
    "end": "112140"
  },
  {
    "text": "We just click on our workgroup name from the dashboard, \nswitch to the Limits tab, then click Edit to change the base",
    "start": "112140",
    "end": "120000"
  },
  {
    "text": "RPU capacity from the default of 128 to the new\nvalue of 200. Now, let’s open the Redshift Query",
    "start": "120000",
    "end": "127400"
  },
  {
    "text": "Editor v2 and run some queries. In the query\neditor, we can see the default dev database’s",
    "start": "127400",
    "end": "133140"
  },
  {
    "text": "public schema is empty. Let’s open the\n'sample_data_dev' database and load the 'tickit'",
    "start": "133140",
    "end": "138180"
  },
  {
    "text": "sample data, which is used in most examples\nthroughout the Amazon Redshift documentation.",
    "start": "138180",
    "end": "144000"
  },
  {
    "text": "Finally, let’s run the 'Sales per Event' query, which will show \nus the total ticket sales for each event in descending order.",
    "start": "144000",
    "end": "151120"
  }
]