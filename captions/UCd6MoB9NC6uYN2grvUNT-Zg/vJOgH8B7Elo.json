[
  {
    "text": "hello everyone my name is Shuin Lee i",
    "start": "1760",
    "end": "5600"
  },
  {
    "text": "work as a senior technical content",
    "start": "5600",
    "end": "7359"
  },
  {
    "text": "manager at",
    "start": "7359",
    "end": "8679"
  },
  {
    "text": "AWS today I'm going to talk about the",
    "start": "8679",
    "end": "11360"
  },
  {
    "text": "resource control policy",
    "start": "11360",
    "end": "13320"
  },
  {
    "text": "feature resource control policy is an",
    "start": "13320",
    "end": "16000"
  },
  {
    "text": "authorization policy managed in AWS",
    "start": "16000",
    "end": "19160"
  },
  {
    "text": "organizations it can be used to set the",
    "start": "19160",
    "end": "21760"
  },
  {
    "text": "maximum available permissions for",
    "start": "21760",
    "end": "23600"
  },
  {
    "text": "resources within your entire",
    "start": "23600",
    "end": "25600"
  },
  {
    "text": "organization",
    "start": "25600",
    "end": "28600"
  },
  {
    "text": "resource control policies or RCPs is a",
    "start": "29840",
    "end": "33280"
  },
  {
    "text": "new type of IM policy managed in AWS",
    "start": "33280",
    "end": "36680"
  },
  {
    "text": "organizations that applies IM access",
    "start": "36680",
    "end": "39520"
  },
  {
    "text": "control policies to resources across",
    "start": "39520",
    "end": "41840"
  },
  {
    "text": "multiple AWS",
    "start": "41840",
    "end": "43559"
  },
  {
    "text": "accounts using RCPs security",
    "start": "43559",
    "end": "46800"
  },
  {
    "text": "administrators can apply permissions",
    "start": "46800",
    "end": "48800"
  },
  {
    "text": "guardrails on resources centrally across",
    "start": "48800",
    "end": "51600"
  },
  {
    "text": "their entire AWS environment without",
    "start": "51600",
    "end": "54719"
  },
  {
    "text": "governing the IM policies individually",
    "start": "54719",
    "end": "57039"
  },
  {
    "text": "attached to each resource they",
    "start": "57039",
    "end": "59800"
  },
  {
    "text": "own as new resources are created they",
    "start": "59800",
    "end": "63280"
  },
  {
    "text": "become subject to the restrictions that",
    "start": "63280",
    "end": "65518"
  },
  {
    "text": "administrators express in their",
    "start": "65519",
    "end": "69680"
  },
  {
    "text": "RCPs rcps are configured and managed",
    "start": "69960",
    "end": "73520"
  },
  {
    "text": "centrally in AWS organizations",
    "start": "73520",
    "end": "76080"
  },
  {
    "text": "they can be attached to the root an OU",
    "start": "76080",
    "end": "79280"
  },
  {
    "text": "or a specific",
    "start": "79280",
    "end": "81159"
  },
  {
    "text": "account permissions guard rails defined",
    "start": "81159",
    "end": "83759"
  },
  {
    "text": "in the RCPs are then enforced on all",
    "start": "83759",
    "end": "86640"
  },
  {
    "text": "corresponding resources in the attached",
    "start": "86640",
    "end": "90360"
  },
  {
    "text": "scope currently RCPs support a subset of",
    "start": "90360",
    "end": "94240"
  },
  {
    "text": "services including S3 SQS STS secret",
    "start": "94240",
    "end": "99360"
  },
  {
    "text": "manager and KMS",
    "start": "99360",
    "end": "102320"
  },
  {
    "text": "you can manage RCPs from the management",
    "start": "102320",
    "end": "104720"
  },
  {
    "text": "account of your organization or from the",
    "start": "104720",
    "end": "107200"
  },
  {
    "text": "delegated administrator",
    "start": "107200",
    "end": "110719"
  },
  {
    "text": "account to understand what RCPs can do",
    "start": "112680",
    "end": "115840"
  },
  {
    "text": "for you let's look at an example use",
    "start": "115840",
    "end": "119399"
  },
  {
    "text": "case let's say that you have some S3",
    "start": "119399",
    "end": "122119"
  },
  {
    "text": "buckets you would like to make sure that",
    "start": "122119",
    "end": "124479"
  },
  {
    "text": "only principles in your own organization",
    "start": "124479",
    "end": "126960"
  },
  {
    "text": "can access your buckets",
    "start": "126960",
    "end": "129920"
  },
  {
    "text": "to address this requirement before the",
    "start": "129920",
    "end": "132319"
  },
  {
    "text": "introduction of RCP you could use",
    "start": "132319",
    "end": "134720"
  },
  {
    "text": "resource-based",
    "start": "134720",
    "end": "136360"
  },
  {
    "text": "policy security administrators could use",
    "start": "136360",
    "end": "139200"
  },
  {
    "text": "an automation to add restrictions to",
    "start": "139200",
    "end": "141440"
  },
  {
    "text": "resource-based policies when new buckets",
    "start": "141440",
    "end": "143920"
  },
  {
    "text": "are created or their policies are",
    "start": "143920",
    "end": "147160"
  },
  {
    "text": "changed the example in the slide showed",
    "start": "147160",
    "end": "150400"
  },
  {
    "text": "parts of a resource-based policy where",
    "start": "150400",
    "end": "153040"
  },
  {
    "text": "the security administrator added a deny",
    "start": "153040",
    "end": "155519"
  },
  {
    "text": "statement to achieve the requirement so",
    "start": "155519",
    "end": "158080"
  },
  {
    "text": "that even if developers accidentally",
    "start": "158080",
    "end": "160560"
  },
  {
    "text": "added over permissive policies that",
    "start": "160560",
    "end": "162879"
  },
  {
    "text": "grant access to external principles for",
    "start": "162879",
    "end": "165040"
  },
  {
    "text": "this bucket those external principles",
    "start": "165040",
    "end": "167840"
  },
  {
    "text": "are still denied",
    "start": "167840",
    "end": "169959"
  },
  {
    "text": "access in that policy you have a deny",
    "start": "169959",
    "end": "172800"
  },
  {
    "text": "statement and use conditions like AWS",
    "start": "172800",
    "end": "175599"
  },
  {
    "text": "principle or ID to protect the resource",
    "start": "175599",
    "end": "178480"
  },
  {
    "text": "from identities outside of your",
    "start": "178480",
    "end": "180720"
  },
  {
    "text": "organization",
    "start": "180720",
    "end": "183519"
  },
  {
    "text": "the example denies access unless it is",
    "start": "183519",
    "end": "186239"
  },
  {
    "text": "from identities in your own organization",
    "start": "186239",
    "end": "189360"
  },
  {
    "text": "or AWS services like cloud",
    "start": "189360",
    "end": "192760"
  },
  {
    "text": "trail such a policy works however such a",
    "start": "192760",
    "end": "196480"
  },
  {
    "text": "policy has to be defined on every single",
    "start": "196480",
    "end": "198959"
  },
  {
    "text": "bucket that needs such a",
    "start": "198959",
    "end": "201640"
  },
  {
    "text": "protection obviously this will not work",
    "start": "201640",
    "end": "204319"
  },
  {
    "text": "in scale for a large organization with",
    "start": "204319",
    "end": "206959"
  },
  {
    "text": "many such resources",
    "start": "206959",
    "end": "210599"
  },
  {
    "text": "this is where RCPs come and help to",
    "start": "213040",
    "end": "215519"
  },
  {
    "text": "address that requirement in a much more",
    "start": "215519",
    "end": "217519"
  },
  {
    "text": "scalable and efficient manner in the",
    "start": "217519",
    "end": "220239"
  },
  {
    "text": "slide I'm showing two policies one is a",
    "start": "220239",
    "end": "223280"
  },
  {
    "text": "resource-based policy attached to the",
    "start": "223280",
    "end": "225440"
  },
  {
    "text": "bucket the white box on the left it",
    "start": "225440",
    "end": "228799"
  },
  {
    "text": "grants access to certain principles",
    "start": "228799",
    "end": "231440"
  },
  {
    "text": "which could be principles outside of",
    "start": "231440",
    "end": "233280"
  },
  {
    "text": "your organization",
    "start": "233280",
    "end": "235280"
  },
  {
    "text": "on the right you see a resource control",
    "start": "235280",
    "end": "237760"
  },
  {
    "text": "policy that is attached to the",
    "start": "237760",
    "end": "239640"
  },
  {
    "text": "organization that includes the account",
    "start": "239640",
    "end": "242159"
  },
  {
    "text": "that the S3 bucket resides",
    "start": "242159",
    "end": "244920"
  },
  {
    "text": "in rcps will enable central",
    "start": "244920",
    "end": "248239"
  },
  {
    "text": "administration over the maximum",
    "start": "248239",
    "end": "250159"
  },
  {
    "text": "permissions on AWS",
    "start": "250159",
    "end": "252280"
  },
  {
    "text": "resources they are permissions guard",
    "start": "252280",
    "end": "254640"
  },
  {
    "text": "rails they don't grant permissions but",
    "start": "254640",
    "end": "257440"
  },
  {
    "text": "rather sets the maximum boundary around",
    "start": "257440",
    "end": "259919"
  },
  {
    "text": "possible access to",
    "start": "259919",
    "end": "262040"
  },
  {
    "text": "resources as you can see in the slide",
    "start": "262040",
    "end": "264880"
  },
  {
    "text": "the syntax of a resource control policy",
    "start": "264880",
    "end": "267120"
  },
  {
    "text": "is similar to resource-based policy the",
    "start": "267120",
    "end": "270400"
  },
  {
    "text": "difference is it is now enforced",
    "start": "270400",
    "end": "272880"
  },
  {
    "text": "centrally in an organization and once",
    "start": "272880",
    "end": "275560"
  },
  {
    "text": "enforced even if individual accounts or",
    "start": "275560",
    "end": "278400"
  },
  {
    "text": "resources have defined overly permissive",
    "start": "278400",
    "end": "281040"
  },
  {
    "text": "resource-based policy for example the",
    "start": "281040",
    "end": "283759"
  },
  {
    "text": "resource-based policy for the bucket",
    "start": "283759",
    "end": "285600"
  },
  {
    "text": "grants access to an external",
    "start": "285600",
    "end": "287639"
  },
  {
    "text": "principle access is still denied by the",
    "start": "287639",
    "end": "290800"
  },
  {
    "text": "resource control policies",
    "start": "290800",
    "end": "294000"
  },
  {
    "text": "rcps will serve as a preventive control",
    "start": "294000",
    "end": "297199"
  },
  {
    "text": "that will eliminate that need to manage",
    "start": "297199",
    "end": "299759"
  },
  {
    "text": "restrictions on the individual resource",
    "start": "299759",
    "end": "303000"
  },
  {
    "text": "basis resource-based policy can still be",
    "start": "303000",
    "end": "306320"
  },
  {
    "text": "useful for data owners to grant access",
    "start": "306320",
    "end": "309520"
  },
  {
    "text": "based on application requirements they",
    "start": "309520",
    "end": "312400"
  },
  {
    "text": "can be used to define fine grained",
    "start": "312400",
    "end": "314479"
  },
  {
    "text": "access controls based on specific",
    "start": "314479",
    "end": "316720"
  },
  {
    "text": "application use cases but they are still",
    "start": "316720",
    "end": "319280"
  },
  {
    "text": "bound by the permissions guard rails",
    "start": "319280",
    "end": "321280"
  },
  {
    "text": "defined in the",
    "start": "321280",
    "end": "324080"
  },
  {
    "text": "RCPs you might already know SCP service",
    "start": "325080",
    "end": "328720"
  },
  {
    "text": "control policy which is another type of",
    "start": "328720",
    "end": "331120"
  },
  {
    "text": "policy that can be used to centrally",
    "start": "331120",
    "end": "333680"
  },
  {
    "text": "control permissions on organizations",
    "start": "333680",
    "end": "336000"
  },
  {
    "text": "levels like the whole organization",
    "start": "336000",
    "end": "338560"
  },
  {
    "text": "organization unit or account",
    "start": "338560",
    "end": "341680"
  },
  {
    "text": "so what is the",
    "start": "341680",
    "end": "344440"
  },
  {
    "text": "difference service control policies",
    "start": "344440",
    "end": "346960"
  },
  {
    "text": "allow you to limit the permissions",
    "start": "346960",
    "end": "349039"
  },
  {
    "text": "granted to principles within your",
    "start": "349039",
    "end": "351199"
  },
  {
    "text": "organization such as AWS IM ro",
    "start": "351199",
    "end": "354199"
  },
  {
    "text": "rows by constraining these permissions",
    "start": "354199",
    "end": "357199"
  },
  {
    "text": "centrally within organizations you can",
    "start": "357199",
    "end": "359759"
  },
  {
    "text": "restrict access to AWS services specific",
    "start": "359759",
    "end": "363000"
  },
  {
    "text": "resources and even under what conditions",
    "start": "363000",
    "end": "365919"
  },
  {
    "text": "principles can make requests across",
    "start": "365919",
    "end": "368160"
  },
  {
    "text": "multiple AWS accounts",
    "start": "368160",
    "end": "370880"
  },
  {
    "text": "but you can only use it to define",
    "start": "370880",
    "end": "373039"
  },
  {
    "text": "permissions guardrails for your own",
    "start": "373039",
    "end": "375400"
  },
  {
    "text": "principles allowing or denying their",
    "start": "375400",
    "end": "377919"
  },
  {
    "text": "access to resources inside or outside of",
    "start": "377919",
    "end": "381039"
  },
  {
    "text": "your",
    "start": "381039",
    "end": "382520"
  },
  {
    "text": "organization you cannot use it to",
    "start": "382520",
    "end": "385039"
  },
  {
    "text": "control access to your resources by",
    "start": "385039",
    "end": "387759"
  },
  {
    "text": "principles outside of your organization",
    "start": "387759",
    "end": "392319"
  },
  {
    "text": "like shown in the picture a row in",
    "start": "392319",
    "end": "394800"
  },
  {
    "text": "another account on the right in the",
    "start": "394800",
    "end": "397039"
  },
  {
    "text": "picture could possibly access your",
    "start": "397039",
    "end": "399280"
  },
  {
    "text": "bucket if your bucket is set up",
    "start": "399280",
    "end": "402280"
  },
  {
    "text": "improperly your SCP will not help in",
    "start": "402280",
    "end": "405600"
  },
  {
    "text": "this",
    "start": "405600",
    "end": "407560"
  },
  {
    "text": "case rcps are complimentary to service",
    "start": "407560",
    "end": "411280"
  },
  {
    "text": "control policies that can help address",
    "start": "411280",
    "end": "413840"
  },
  {
    "text": "that",
    "start": "413840",
    "end": "415160"
  },
  {
    "text": "problem resource control policies can",
    "start": "415160",
    "end": "418000"
  },
  {
    "text": "apply IM permissions guardrails to all",
    "start": "418000",
    "end": "420960"
  },
  {
    "text": "resources across multiple AWS accounts",
    "start": "420960",
    "end": "424080"
  },
  {
    "text": "in your",
    "start": "424080",
    "end": "425880"
  },
  {
    "text": "organization as shown in the picture",
    "start": "425880",
    "end": "428720"
  },
  {
    "text": "with RCP you can now control whether a",
    "start": "428720",
    "end": "432400"
  },
  {
    "text": "row in an account outside of your",
    "start": "432400",
    "end": "434639"
  },
  {
    "text": "organization is able to access your S3",
    "start": "434639",
    "end": "437520"
  },
  {
    "text": "bucket which your SCP is not able to",
    "start": "437520",
    "end": "443720"
  },
  {
    "text": "scps and RCPs cover some common ground",
    "start": "444560",
    "end": "448080"
  },
  {
    "text": "where either SCPs or RCPs could",
    "start": "448080",
    "end": "451960"
  },
  {
    "text": "work for example when limiting",
    "start": "451960",
    "end": "454319"
  },
  {
    "text": "principles in your own organization to",
    "start": "454319",
    "end": "456720"
  },
  {
    "text": "access resources in your",
    "start": "456720",
    "end": "459880"
  },
  {
    "text": "organization selecting which type of",
    "start": "459880",
    "end": "462000"
  },
  {
    "text": "policy to use will depend on the",
    "start": "462000",
    "end": "464240"
  },
  {
    "text": "security objectives you are",
    "start": "464240",
    "end": "466599"
  },
  {
    "text": "pursuing as SCP is identity oriented and",
    "start": "466599",
    "end": "470639"
  },
  {
    "text": "RCP resource oriented in general if you",
    "start": "470639",
    "end": "474160"
  },
  {
    "text": "want to enforce permissions on",
    "start": "474160",
    "end": "476160"
  },
  {
    "text": "identities use SCPs while if you want to",
    "start": "476160",
    "end": "479840"
  },
  {
    "text": "enforce permissions on resources use",
    "start": "479840",
    "end": "483960"
  },
  {
    "text": "RCPs in an example where you want to",
    "start": "483960",
    "end": "486879"
  },
  {
    "text": "enforce an S3 bucket can only be",
    "start": "486879",
    "end": "489360"
  },
  {
    "text": "accessed through TRS you might want to",
    "start": "489360",
    "end": "492479"
  },
  {
    "text": "consider using RCPS if you want to",
    "start": "492479",
    "end": "495199"
  },
  {
    "text": "protect the resources no matter the",
    "start": "495199",
    "end": "497039"
  },
  {
    "text": "accesses from principles in your",
    "start": "497039",
    "end": "499000"
  },
  {
    "text": "organization or outside",
    "start": "499000",
    "end": "503639"
  },
  {
    "text": "and advice for using RCP is that similar",
    "start": "504160",
    "end": "507120"
  },
  {
    "text": "to SCP do not apply RCPs without first",
    "start": "507120",
    "end": "510560"
  },
  {
    "text": "evaluating impact on the resources of",
    "start": "510560",
    "end": "513039"
  },
  {
    "text": "the corresponding",
    "start": "513039",
    "end": "514760"
  },
  {
    "text": "accounts overly restrictive RCPs might",
    "start": "514760",
    "end": "518360"
  },
  {
    "text": "inadvertently disrupt existing",
    "start": "518360",
    "end": "521000"
  },
  {
    "text": "configurations for example denying",
    "start": "521000",
    "end": "523120"
  },
  {
    "text": "access that other people might have",
    "start": "523120",
    "end": "525120"
  },
  {
    "text": "granted explicitly on purpose",
    "start": "525120",
    "end": "528399"
  },
  {
    "text": "so do evaluate impact on existing",
    "start": "528399",
    "end": "530959"
  },
  {
    "text": "resources before associating an RCP to",
    "start": "530959",
    "end": "534080"
  },
  {
    "text": "an",
    "start": "534080",
    "end": "535640"
  },
  {
    "text": "account now let me show you where to",
    "start": "535640",
    "end": "538480"
  },
  {
    "text": "enable and configure RCP and how RCP",
    "start": "538480",
    "end": "542080"
  },
  {
    "text": "protects your resources using S3 buckets",
    "start": "542080",
    "end": "545200"
  },
  {
    "text": "as an",
    "start": "545200",
    "end": "547399"
  },
  {
    "text": "example resource control policies are",
    "start": "547399",
    "end": "550240"
  },
  {
    "text": "managed in the service AWS organizations",
    "start": "550240",
    "end": "553920"
  },
  {
    "text": "on the screen I'm showing you my sample",
    "start": "553920",
    "end": "556600"
  },
  {
    "text": "organization with a structure like this",
    "start": "556600",
    "end": "559920"
  },
  {
    "text": "i have a management account and I have a",
    "start": "559920",
    "end": "562399"
  },
  {
    "text": "couple of OUS i have a development I",
    "start": "562399",
    "end": "565279"
  },
  {
    "text": "have protection and a few accounts in",
    "start": "565279",
    "end": "568480"
  },
  {
    "text": "those",
    "start": "568480",
    "end": "570200"
  },
  {
    "text": "OUS resource control policies can be",
    "start": "570200",
    "end": "572959"
  },
  {
    "text": "enabled via SDK command line or directly",
    "start": "572959",
    "end": "576160"
  },
  {
    "text": "on the console let's do that on the",
    "start": "576160",
    "end": "578880"
  },
  {
    "text": "console go to policies",
    "start": "578880",
    "end": "582000"
  },
  {
    "text": "you see a list of different policy types",
    "start": "582000",
    "end": "584320"
  },
  {
    "text": "managed by AWS",
    "start": "584320",
    "end": "586040"
  },
  {
    "text": "organizations you might be using some of",
    "start": "586040",
    "end": "588480"
  },
  {
    "text": "them already like service control",
    "start": "588480",
    "end": "591800"
  },
  {
    "text": "policies so to enable resource control",
    "start": "591800",
    "end": "594480"
  },
  {
    "text": "policies click that one and simply click",
    "start": "594480",
    "end": "598080"
  },
  {
    "text": "the button to enable",
    "start": "598080",
    "end": "600360"
  },
  {
    "text": "it so now resource control policy has",
    "start": "600360",
    "end": "603519"
  },
  {
    "text": "been enabled",
    "start": "603519",
    "end": "605760"
  },
  {
    "text": "you see here a policy is automatically",
    "start": "605760",
    "end": "609360"
  },
  {
    "text": "created and associated for us this",
    "start": "609360",
    "end": "612720"
  },
  {
    "text": "policy is called RCP full AWS",
    "start": "612720",
    "end": "617160"
  },
  {
    "text": "access if you have been using service",
    "start": "617160",
    "end": "620240"
  },
  {
    "text": "control policies before this looks very",
    "start": "620240",
    "end": "622560"
  },
  {
    "text": "familiar to you so this default policy",
    "start": "622560",
    "end": "626519"
  },
  {
    "text": "allows everyone to access everything",
    "start": "626519",
    "end": "630760"
  },
  {
    "text": "basically if you look at the targets",
    "start": "630760",
    "end": "633600"
  },
  {
    "text": "that has been associated with this",
    "start": "633600",
    "end": "636040"
  },
  {
    "text": "policy we see the whole organization is",
    "start": "636040",
    "end": "639760"
  },
  {
    "text": "now associated with this default",
    "start": "639760",
    "end": "643720"
  },
  {
    "text": "RCP if we go back to look at the policy",
    "start": "643720",
    "end": "647640"
  },
  {
    "text": "itself the way that is defined using",
    "start": "647640",
    "end": "650800"
  },
  {
    "text": "wild cards on principle action and",
    "start": "650800",
    "end": "653680"
  },
  {
    "text": "resource might look scary to you you",
    "start": "653680",
    "end": "656399"
  },
  {
    "text": "might be thinking am I giving everyone",
    "start": "656399",
    "end": "658560"
  },
  {
    "text": "access to everything actually you are",
    "start": "658560",
    "end": "661880"
  },
  {
    "text": "not as we talked about earlier resource",
    "start": "661880",
    "end": "665440"
  },
  {
    "text": "control policies do not grant",
    "start": "665440",
    "end": "668120"
  },
  {
    "text": "permissions they define a maximum",
    "start": "668120",
    "end": "670560"
  },
  {
    "text": "boundary around possible access to",
    "start": "670560",
    "end": "673120"
  },
  {
    "text": "resources",
    "start": "673120",
    "end": "676000"
  },
  {
    "text": "by the way you cannot delete this AWS",
    "start": "676000",
    "end": "678560"
  },
  {
    "text": "managed policy or detach it but you can",
    "start": "678560",
    "end": "681920"
  },
  {
    "text": "define your own resource control",
    "start": "681920",
    "end": "684000"
  },
  {
    "text": "policies as permissions guard",
    "start": "684000",
    "end": "687640"
  },
  {
    "text": "rails now let's see RCPs in action let's",
    "start": "687640",
    "end": "692320"
  },
  {
    "text": "say that you have a development team",
    "start": "692320",
    "end": "694399"
  },
  {
    "text": "that is developing",
    "start": "694399",
    "end": "696360"
  },
  {
    "text": "applications they want their application",
    "start": "696360",
    "end": "699279"
  },
  {
    "text": "to access an S3 bucket in this",
    "start": "699279",
    "end": "702160"
  },
  {
    "text": "production account",
    "start": "702160",
    "end": "705600"
  },
  {
    "text": "i have another browser tab open where I",
    "start": "705600",
    "end": "709519"
  },
  {
    "text": "have logged in as one of the development",
    "start": "709519",
    "end": "711600"
  },
  {
    "text": "team",
    "start": "711600",
    "end": "713000"
  },
  {
    "text": "members in the S3 service we see a",
    "start": "713000",
    "end": "716720"
  },
  {
    "text": "couple of S3 buckets let's say that this",
    "start": "716720",
    "end": "720640"
  },
  {
    "text": "bucket customer marketing data I want to",
    "start": "720640",
    "end": "724160"
  },
  {
    "text": "allow my application which is running in",
    "start": "724160",
    "end": "727519"
  },
  {
    "text": "perhaps in another account to access the",
    "start": "727519",
    "end": "730240"
  },
  {
    "text": "data here",
    "start": "730240",
    "end": "732800"
  },
  {
    "text": "in order to do that I will define a",
    "start": "732800",
    "end": "735680"
  },
  {
    "text": "policy under permissions here so let's",
    "start": "735680",
    "end": "739360"
  },
  {
    "text": "edit the bucket",
    "start": "739360",
    "end": "740839"
  },
  {
    "text": "policy i put in the policy the intention",
    "start": "740839",
    "end": "744800"
  },
  {
    "text": "here is that this policy will grant my",
    "start": "744800",
    "end": "748880"
  },
  {
    "text": "application running in another account",
    "start": "748880",
    "end": "751519"
  },
  {
    "text": "to be able to do all the S3 actions on",
    "start": "751519",
    "end": "754880"
  },
  {
    "text": "anything in my bucket",
    "start": "754880",
    "end": "757920"
  },
  {
    "text": "let's say that I accidentally put in an",
    "start": "757920",
    "end": "760880"
  },
  {
    "text": "account ID that actually not in my",
    "start": "760880",
    "end": "764240"
  },
  {
    "text": "organization so instead of the correct",
    "start": "764240",
    "end": "766399"
  },
  {
    "text": "account ID where my application runs I",
    "start": "766399",
    "end": "768720"
  },
  {
    "text": "put in some account ID that is not in my",
    "start": "768720",
    "end": "773160"
  },
  {
    "text": "organization let's save changes",
    "start": "773160",
    "end": "777800"
  },
  {
    "text": "i have a third browser tab open here",
    "start": "778880",
    "end": "782079"
  },
  {
    "text": "where I have logged into the account",
    "start": "782079",
    "end": "784560"
  },
  {
    "text": "which the developer accidentally put",
    "start": "784560",
    "end": "786800"
  },
  {
    "text": "into that",
    "start": "786800",
    "end": "788279"
  },
  {
    "text": "policy as you might have expected we",
    "start": "788279",
    "end": "791519"
  },
  {
    "text": "could access that S3 bucket let's try",
    "start": "791519",
    "end": "794959"
  },
  {
    "text": "this list objects command as you can see",
    "start": "794959",
    "end": "798560"
  },
  {
    "text": "I can see the content of that S3 bucket",
    "start": "798560",
    "end": "802720"
  },
  {
    "text": "if we want we can also download the",
    "start": "802720",
    "end": "805839"
  },
  {
    "text": "sensitive information inside that S3",
    "start": "805839",
    "end": "809720"
  },
  {
    "text": "bucket security administrators do not",
    "start": "809720",
    "end": "812639"
  },
  {
    "text": "want this to happen with resource",
    "start": "812639",
    "end": "815440"
  },
  {
    "text": "control policies security administrators",
    "start": "815440",
    "end": "818320"
  },
  {
    "text": "can prevent this from happening whether",
    "start": "818320",
    "end": "820639"
  },
  {
    "text": "that bucket policy which is one type of",
    "start": "820639",
    "end": "822800"
  },
  {
    "text": "resource-based policy was defined",
    "start": "822800",
    "end": "825360"
  },
  {
    "text": "accidentally or on purpose",
    "start": "825360",
    "end": "829120"
  },
  {
    "text": "let's go back to the security",
    "start": "829120",
    "end": "830880"
  },
  {
    "text": "administrators view to prevent that",
    "start": "830880",
    "end": "834160"
  },
  {
    "text": "unintended access to happen let's create",
    "start": "834160",
    "end": "837600"
  },
  {
    "text": "a resource control",
    "start": "837600",
    "end": "840720"
  },
  {
    "text": "policy we name it denying S3 access from",
    "start": "842120",
    "end": "846240"
  },
  {
    "text": "external",
    "start": "846240",
    "end": "848199"
  },
  {
    "text": "or in the policy editor on the right you",
    "start": "848199",
    "end": "852720"
  },
  {
    "text": "see the list of services that currently",
    "start": "852720",
    "end": "855040"
  },
  {
    "text": "support resource control policy",
    "start": "855040",
    "end": "858240"
  },
  {
    "text": "let's pick",
    "start": "858240",
    "end": "859959"
  },
  {
    "text": "S3 all",
    "start": "859959",
    "end": "862920"
  },
  {
    "text": "actions for the resource element let's",
    "start": "862920",
    "end": "866399"
  },
  {
    "text": "add all",
    "start": "866399",
    "end": "869600"
  },
  {
    "text": "resources the core part of this resource",
    "start": "869800",
    "end": "873040"
  },
  {
    "text": "control policy is the",
    "start": "873040",
    "end": "876199"
  },
  {
    "text": "condition we want to deny access to S3",
    "start": "876199",
    "end": "879440"
  },
  {
    "text": "buckets from all principles outside of",
    "start": "879440",
    "end": "882560"
  },
  {
    "text": "our",
    "start": "882560",
    "end": "883720"
  },
  {
    "text": "organization let's add a condition",
    "start": "883720",
    "end": "886959"
  },
  {
    "text": "the condition key that we would like to",
    "start": "886959",
    "end": "889040"
  },
  {
    "text": "use is AWS principal or",
    "start": "889040",
    "end": "894000"
  },
  {
    "text": "ID let's put in the organization ID of",
    "start": "895880",
    "end": "900160"
  },
  {
    "text": "our own",
    "start": "900160",
    "end": "902360"
  },
  {
    "text": "org add condition",
    "start": "902360",
    "end": "906240"
  },
  {
    "text": "now we have a policy where we are",
    "start": "906240",
    "end": "908959"
  },
  {
    "text": "denying access to all S3 actions on all",
    "start": "908959",
    "end": "913560"
  },
  {
    "text": "resources unless the principal making",
    "start": "913560",
    "end": "916320"
  },
  {
    "text": "the request has a principal or ID that",
    "start": "916320",
    "end": "919600"
  },
  {
    "text": "is equal to",
    "start": "919600",
    "end": "921959"
  },
  {
    "text": "ours note that we have got a warning",
    "start": "921959",
    "end": "925560"
  },
  {
    "text": "here so the warning says",
    "start": "925560",
    "end": "928440"
  },
  {
    "text": "that resource control policies could",
    "start": "928440",
    "end": "931120"
  },
  {
    "text": "also impact service principles to access",
    "start": "931120",
    "end": "933839"
  },
  {
    "text": "our resources in this case service",
    "start": "933839",
    "end": "937040"
  },
  {
    "text": "principles like cloud trail might be",
    "start": "937040",
    "end": "940079"
  },
  {
    "text": "forbidden from access the S3",
    "start": "940079",
    "end": "942760"
  },
  {
    "text": "buckets so let's add an so that we can",
    "start": "942760",
    "end": "946399"
  },
  {
    "text": "prevent",
    "start": "946399",
    "end": "948720"
  },
  {
    "text": "that the condition key that we would",
    "start": "948839",
    "end": "951519"
  },
  {
    "text": "like to use is principle is AWS service",
    "start": "951519",
    "end": "958279"
  },
  {
    "text": "let's put in",
    "start": "962399",
    "end": "965440"
  },
  {
    "text": "false add",
    "start": "965480",
    "end": "967959"
  },
  {
    "text": "condition now that if service principles",
    "start": "967959",
    "end": "971839"
  },
  {
    "text": "like cloud trail would like to access",
    "start": "971839",
    "end": "974560"
  },
  {
    "text": "the bucket such a policy would allow",
    "start": "974560",
    "end": "978759"
  },
  {
    "text": "that let's create this policy",
    "start": "978759",
    "end": "983839"
  },
  {
    "text": "now that we have the policy the next",
    "start": "983839",
    "end": "986560"
  },
  {
    "text": "step to do is to attach the policy to",
    "start": "986560",
    "end": "990000"
  },
  {
    "text": "the scope where you want this policy to",
    "start": "990000",
    "end": "994560"
  },
  {
    "text": "apply you could attach the policy to the",
    "start": "997959",
    "end": "1001680"
  },
  {
    "text": "root of the",
    "start": "1001680",
    "end": "1004959"
  },
  {
    "text": "or particular account let's say that in",
    "start": "1005560",
    "end": "1008959"
  },
  {
    "text": "our case we want to attach it to the",
    "start": "1008959",
    "end": "1010959"
  },
  {
    "text": "production OU where those S3 buckets we",
    "start": "1010959",
    "end": "1014399"
  },
  {
    "text": "want to protect",
    "start": "1014399",
    "end": "1016839"
  },
  {
    "text": "resides attach",
    "start": "1016839",
    "end": "1020320"
  },
  {
    "text": "policy now let's go back to the terminal",
    "start": "1020759",
    "end": "1023519"
  },
  {
    "text": "session where we did the unintended",
    "start": "1023519",
    "end": "1026079"
  },
  {
    "text": "access",
    "start": "1026079",
    "end": "1027400"
  },
  {
    "text": "earlier let's run that same S3 command",
    "start": "1027400",
    "end": "1031240"
  },
  {
    "text": "again now you see access",
    "start": "1031240",
    "end": "1035000"
  },
  {
    "text": "denied if we go back to the S3",
    "start": "1035000",
    "end": "1039079"
  },
  {
    "text": "bucket the bucket policy itself still",
    "start": "1039079",
    "end": "1042319"
  },
  {
    "text": "allows",
    "start": "1042319",
    "end": "1043640"
  },
  {
    "text": "access but it is the permissions guard",
    "start": "1043640",
    "end": "1046798"
  },
  {
    "text": "rails that we have defined in that",
    "start": "1046799",
    "end": "1049120"
  },
  {
    "text": "resource control policy worked",
    "start": "1049120",
    "end": "1051440"
  },
  {
    "text": "protecting our S3 bucket",
    "start": "1051440",
    "end": "1055879"
  },
  {
    "text": "rcps as a new authorization policy",
    "start": "1058240",
    "end": "1061039"
  },
  {
    "text": "supported by AWS organizations provide",
    "start": "1061039",
    "end": "1064000"
  },
  {
    "text": "confidence to the central governance and",
    "start": "1064000",
    "end": "1066320"
  },
  {
    "text": "security teams that access to resources",
    "start": "1066320",
    "end": "1069360"
  },
  {
    "text": "within their AWS accounts conforms to",
    "start": "1069360",
    "end": "1071840"
  },
  {
    "text": "their organization's access control",
    "start": "1071840",
    "end": "1074280"
  },
  {
    "text": "guidelines when you apply RCPs in your",
    "start": "1074280",
    "end": "1077200"
  },
  {
    "text": "organization use them as a permissions",
    "start": "1077200",
    "end": "1079360"
  },
  {
    "text": "guardrails on organization OU and",
    "start": "1079360",
    "end": "1082080"
  },
  {
    "text": "account levels an RCP defines maximum",
    "start": "1082080",
    "end": "1086000"
  },
  {
    "text": "permissions or set limits on the actions",
    "start": "1086000",
    "end": "1088960"
  },
  {
    "text": "that identities can take on resources in",
    "start": "1088960",
    "end": "1091440"
  },
  {
    "text": "your organization they do not grant",
    "start": "1091440",
    "end": "1094760"
  },
  {
    "text": "permissions use identity based policies",
    "start": "1094760",
    "end": "1097440"
  },
  {
    "text": "to IM users or rows or resource-based",
    "start": "1097440",
    "end": "1100640"
  },
  {
    "text": "policies to resources in your accounts",
    "start": "1100640",
    "end": "1103280"
  },
  {
    "text": "to actually grant permissions",
    "start": "1103280",
    "end": "1106799"
  },
  {
    "text": "also note that RCPs do not apply on",
    "start": "1106799",
    "end": "1110000"
  },
  {
    "text": "resources in a management account and it",
    "start": "1110000",
    "end": "1112720"
  },
  {
    "text": "does not apply on service linked",
    "start": "1112720",
    "end": "1115880"
  },
  {
    "text": "rows rcp today is only supported by a",
    "start": "1115880",
    "end": "1119520"
  },
  {
    "text": "subset of services please check AWS",
    "start": "1119520",
    "end": "1122559"
  },
  {
    "text": "documentation for latest list of",
    "start": "1122559",
    "end": "1124640"
  },
  {
    "text": "services that support RCP",
    "start": "1124640",
    "end": "1129080"
  },
  {
    "text": "in this session you have looked at how",
    "start": "1130640",
    "end": "1132960"
  },
  {
    "text": "RCPs can help you prevent unintended",
    "start": "1132960",
    "end": "1135840"
  },
  {
    "text": "access to resources which is one of the",
    "start": "1135840",
    "end": "1138400"
  },
  {
    "text": "security objectives pursued by",
    "start": "1138400",
    "end": "1140160"
  },
  {
    "text": "enterprises building a data parameter on",
    "start": "1140160",
    "end": "1143160"
  },
  {
    "text": "AWS a data parameter is a set of",
    "start": "1143160",
    "end": "1145760"
  },
  {
    "text": "permissions guardrails in your AWS",
    "start": "1145760",
    "end": "1147840"
  },
  {
    "text": "environment you use to help ensure that",
    "start": "1147840",
    "end": "1150559"
  },
  {
    "text": "only your trusted identities are",
    "start": "1150559",
    "end": "1152640"
  },
  {
    "text": "accessing trusted resources from",
    "start": "1152640",
    "end": "1155120"
  },
  {
    "text": "expected networks",
    "start": "1155120",
    "end": "1157919"
  },
  {
    "text": "rcps along with SCPs can help you to",
    "start": "1157919",
    "end": "1161360"
  },
  {
    "text": "centrally establish a data parameter",
    "start": "1161360",
    "end": "1163679"
  },
  {
    "text": "across your AWS environment and prevent",
    "start": "1163679",
    "end": "1166720"
  },
  {
    "text": "unintended access at",
    "start": "1166720",
    "end": "1169640"
  },
  {
    "text": "scale scan the QR code or use the link",
    "start": "1169640",
    "end": "1172720"
  },
  {
    "text": "on the screen to know more about data",
    "start": "1172720",
    "end": "1174880"
  },
  {
    "text": "parameter",
    "start": "1174880",
    "end": "1177360"
  },
  {
    "text": "solutions this concludes my introduction",
    "start": "1177640",
    "end": "1180400"
  },
  {
    "text": "of the resource control policies thank",
    "start": "1180400",
    "end": "1183280"
  },
  {
    "text": "you for your time",
    "start": "1183280",
    "end": "1186840"
  }
]