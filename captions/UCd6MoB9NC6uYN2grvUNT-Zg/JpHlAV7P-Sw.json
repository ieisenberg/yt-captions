[
  {
    "text": "alright how's everyone doing yeah I hope everyone on Twitch is doing well too we",
    "start": "5050",
    "end": "11180"
  },
  {
    "text": "still got a couple thousand people watching which is fantastic it's been a fantastic day so far we just heard about",
    "start": "11180",
    "end": "17860"
  },
  {
    "text": "serverless now we're gonna talk a little bit about containers kind of a hot topic",
    "start": "17860",
    "end": "24230"
  },
  {
    "text": "of debate I'm on Team serverless Brent is on Team containers so yeah he literally on the",
    "start": "24230",
    "end": "31039"
  },
  {
    "text": "containers team so if you're new to containers if you want to understand how they can help make your architectures",
    "start": "31039",
    "end": "36949"
  },
  {
    "text": "your deploys your operational overhead less it do make everything better then Brett's going to show you how to do that",
    "start": "36949",
    "end": "43640"
  },
  {
    "text": "so please give Brent a round of applause thank you",
    "start": "43640",
    "end": "48579"
  },
  {
    "text": "[Applause]",
    "start": "49050",
    "end": "52180"
  },
  {
    "text": "still here we are alright sweet alright so everyone can hear me now right on",
    "start": "60210",
    "end": "65940"
  },
  {
    "text": "thanks Brandon for the introduction my name is Brent Langston I'm a developer advocate on the container services team",
    "start": "65940",
    "end": "72190"
  },
  {
    "text": "we're the team that brings you ek SEC s Fargate app mesh service discovery EC",
    "start": "72190",
    "end": "80740"
  },
  {
    "text": "are you name it like we are working all about containers and wire containers so",
    "start": "80740",
    "end": "87720"
  },
  {
    "text": "useful why are they so sought-after well a couple of reasons but one is",
    "start": "87720",
    "end": "95140"
  },
  {
    "text": "because they make your code super portable and you can use that to your advantage in a couple of different ways",
    "start": "95140",
    "end": "101850"
  },
  {
    "text": "one is it you it's portable in the end that helps make it deployable across an",
    "start": "101850",
    "end": "109450"
  },
  {
    "text": "entire fleet of servers very easily so you can build out your tooling your",
    "start": "109450",
    "end": "115929"
  },
  {
    "text": "workflow once and then you can make decisions about you know what language do you want to put in it what language",
    "start": "115929",
    "end": "123009"
  },
  {
    "text": "do you want to write you don't have to build tooling per language anymore and then the other thing is if you decide",
    "start": "123009",
    "end": "129640"
  },
  {
    "text": "you want to run on Prem Plus in the cloud you know you can do that as well",
    "start": "129640",
    "end": "134650"
  },
  {
    "text": "and we have offerings that can help do that as I'm talking to people I always",
    "start": "134650",
    "end": "139900"
  },
  {
    "text": "run across people who are like but how do I get started what do i do first and",
    "start": "139900",
    "end": "146220"
  },
  {
    "text": "that's what this talk is really all about so we're gonna take a very simple application a HelloWorld application and",
    "start": "146220",
    "end": "154209"
  },
  {
    "text": "we're just going to containerize it and we're gonna walk through kind of the decision-making process and how you can",
    "start": "154209",
    "end": "159970"
  },
  {
    "text": "I can get it done and then how you can optimize it and kind of make it into you",
    "start": "159970",
    "end": "165700"
  },
  {
    "text": "know something that you could think of as being production production worthy so that was my slide the rest of its",
    "start": "165700",
    "end": "173470"
  },
  {
    "text": "going to be live demo and we're gonna work from code that you can find out on",
    "start": "173470",
    "end": "179650"
  },
  {
    "text": "github already and you don't need to follow along in person right now but you can",
    "start": "179650",
    "end": "186530"
  },
  {
    "text": "certainly fork this take a look at it you can open pull requests against it to",
    "start": "186530",
    "end": "193700"
  },
  {
    "text": "improve it or whatever you decide to do later so docker hello world this is it right",
    "start": "193700",
    "end": "201890"
  },
  {
    "text": "now and what we're gonna do is we're just gonna start from the very beginning",
    "start": "201890",
    "end": "207760"
  },
  {
    "text": "so I I have a directory here that I've",
    "start": "207760",
    "end": "212780"
  },
  {
    "text": "already done this in once let's just get rid of it and start over",
    "start": "212780",
    "end": "219459"
  },
  {
    "text": "and for demonstration purposes I'm going to use nodejs so this could be any",
    "start": "225010",
    "end": "231430"
  },
  {
    "text": "language there's bound to be a hello world out there you can you can start with in whatever your preferred language",
    "start": "231430",
    "end": "237940"
  },
  {
    "text": "happens to be the one thing that I want to point out that that I'm going to do",
    "start": "237940",
    "end": "244420"
  },
  {
    "text": "here is i'm using a hello world that depends on express and I wanted",
    "start": "244420",
    "end": "249550"
  },
  {
    "text": "something that that would show a dependency so it's super easy to write",
    "start": "249550",
    "end": "256000"
  },
  {
    "text": "code that just spits out hello world but what if there's a dependency that you",
    "start": "256000",
    "end": "261130"
  },
  {
    "text": "need so as of now my apt j/s if I run it I get an error right because it's",
    "start": "261130",
    "end": "273070"
  },
  {
    "text": "looking for Express and it's not finding it so how would we solve this problem we would install Express right well think",
    "start": "273070",
    "end": "280030"
  },
  {
    "text": "about if you had to do this across an entire fleet of web servers and think about if you had some dependency that",
    "start": "280030",
    "end": "286720"
  },
  {
    "text": "required a specific version so how do you manage all of that used to you'd",
    "start": "286720",
    "end": "292539"
  },
  {
    "text": "have to manage it with config management you'd have to have like elaborate chef",
    "start": "292539",
    "end": "297610"
  },
  {
    "text": "recipes and and cookbooks and all that stuff and you'd have like one version",
    "start": "297610",
    "end": "303970"
  },
  {
    "text": "per server or you'd have some special language specific way of isolating your",
    "start": "303970",
    "end": "309580"
  },
  {
    "text": "code so that one piece of code runs in one directory and a different piece of code runs in another directory",
    "start": "309580",
    "end": "315580"
  },
  {
    "text": "what docker gives us is all that functionality baked into a single artifact so now we can contain our eyes",
    "start": "315580",
    "end": "323800"
  },
  {
    "text": "not just our app code but also all the dependencies and then we can push that",
    "start": "323800",
    "end": "328930"
  },
  {
    "text": "to a server that may not even have node installed and won't have Express installed and we'll still be able to run",
    "start": "328930",
    "end": "335229"
  },
  {
    "text": "our application so hopefully and you know 30 to 45 minutes will do exactly that with this particular application so",
    "start": "335229",
    "end": "343090"
  },
  {
    "text": "who knows who knows node how do I solve this problem just shout it out",
    "start": "343090",
    "end": "351060"
  },
  {
    "text": "npm install exactly so npm in it first if you want to get a package.json and",
    "start": "351060",
    "end": "358270"
  },
  {
    "text": "then install express right so that",
    "start": "358270",
    "end": "364599"
  },
  {
    "text": "installed express did it do anything else if we cat package.json you see that",
    "start": "364599",
    "end": "371830"
  },
  {
    "text": "we do list a dependency on Express for 17-0 but if we look at package - lock",
    "start": "371830",
    "end": "379960"
  },
  {
    "text": "json you'll actually see we installed a whole bunch of stuff so it's not even",
    "start": "379960",
    "end": "385210"
  },
  {
    "text": "just that there's one dependency there's just one that brought in a whole bunch of other dependencies and we want to",
    "start": "385210",
    "end": "391509"
  },
  {
    "text": "manage shipping all that stuff around so next up let's make a container so docker",
    "start": "391509",
    "end": "401830"
  },
  {
    "text": "i feel like they really got it right when they started building the workflow",
    "start": "401830",
    "end": "407770"
  },
  {
    "text": "for making containers because they did it from the developer perspective they said you know what all the code that",
    "start": "407770",
    "end": "414009"
  },
  {
    "text": "automates building a container we should have it live right alongside the app",
    "start": "414009",
    "end": "419830"
  },
  {
    "text": "code the developers should just own that so whatever you have to do on a server that's essentially what you should do in",
    "start": "419830",
    "end": "427360"
  },
  {
    "text": "a docker container we'll look at some of the optimizations that you can do after that but if you do nothing more than the",
    "start": "427360",
    "end": "434199"
  },
  {
    "text": "commands that you run on a server stick them in a docker container you'll probably get something that works so",
    "start": "434199",
    "end": "439900"
  },
  {
    "text": "let's start there when you're picking out a server you first usually have to pick out you know what operating system",
    "start": "439900",
    "end": "446409"
  },
  {
    "text": "am I going to run well the docker equivalent of that is from CentOS or from Ubuntu or from whatever operating",
    "start": "446409",
    "end": "454150"
  },
  {
    "text": "system is your preference so let's make a docker file and from CentOS I like",
    "start": "454150",
    "end": "465250"
  },
  {
    "text": "CentOS so that's that's what we're gonna start with if I do nothing more than this docker build dot docker build",
    "start": "465250",
    "end": "476710"
  },
  {
    "text": "current working directory this looks for the file the special file name docker",
    "start": "476710",
    "end": "482639"
  },
  {
    "text": "with a capital D and if it finds it in this directory it just builds it it follows all the instructions found",
    "start": "482639",
    "end": "488849"
  },
  {
    "text": "within we only have one instruction from CentOS docker images sorry",
    "start": "488849",
    "end": "501289"
  },
  {
    "text": "so with docker if I run docker images it's hard to see it we won't see it",
    "start": "504719",
    "end": "510659"
  },
  {
    "text": "right now but because I only have the one line I have CentOS in my images and",
    "start": "510659",
    "end": "516300"
  },
  {
    "text": "we see that that's equivalent to this particular image so it says tag latest I",
    "start": "516300",
    "end": "525750"
  },
  {
    "text": "didn't say latest because I didn't specify any tag whatsoever latest is the",
    "start": "525750",
    "end": "531839"
  },
  {
    "text": "default generally I want to tag things though so that I'm very specific about",
    "start": "531839",
    "end": "539339"
  },
  {
    "text": "the components that I'm putting in my container so if we want to go and check",
    "start": "539339",
    "end": "545399"
  },
  {
    "text": "out you know what tags should I use you can go to docker hub look at the sit and",
    "start": "545399",
    "end": "552029"
  },
  {
    "text": "all of the all of the major images do this but you can look at the tags tab",
    "start": "552029",
    "end": "557040"
  },
  {
    "text": "and you can see latest was just updated 11 days ago but also CentOS 7 6 18 10",
    "start": "557040",
    "end": "565860"
  },
  {
    "text": "was updated 11 days ago so I'm gonna copy that particular tag and use that so",
    "start": "565860",
    "end": "578069"
  },
  {
    "text": "let's go back over here and we'll change our from line",
    "start": "578069",
    "end": "582829"
  },
  {
    "text": "- CentOS CentOS : and then the tag name",
    "start": "586690",
    "end": "595240"
  },
  {
    "text": "so the tag name happens to also have the name CentOS in it CentOS : tag now we",
    "start": "595240",
    "end": "604000"
  },
  {
    "text": "don't have to stop there we can actually then add in there our next commands copy",
    "start": "604000",
    "end": "614250"
  },
  {
    "text": "dot current working directory destination dot the current working",
    "start": "614250",
    "end": "619600"
  },
  {
    "text": "directory inside the container we're gonna copy our stuff and then we're going to run node fjs sorry",
    "start": "619600",
    "end": "634800"
  },
  {
    "text": "so now let's docker build",
    "start": "637630",
    "end": "641190"
  },
  {
    "text": "so we built our container is this gonna work anyone no I can tell you it's not gonna",
    "start": "642850",
    "end": "649479"
  },
  {
    "text": "work yet well we'll see we'll see why though docker images so I have this",
    "start": "649479",
    "end": "656350"
  },
  {
    "text": "image no name no tag I didn't tag it or any of that stuff let's we'll look at",
    "start": "656350",
    "end": "662439"
  },
  {
    "text": "that next docker run so we have two",
    "start": "662439",
    "end": "672249"
  },
  {
    "text": "things we want to fix one we didn't name anything so we'll go back and we'll name it and two it looks like we don't have",
    "start": "672249",
    "end": "679539"
  },
  {
    "text": "node inside our container so we need to fix that too again this is the kind of stuff that you",
    "start": "679539",
    "end": "685629"
  },
  {
    "text": "work through when you're just like building out your little app server so we're doing that just inside a docker",
    "start": "685629",
    "end": "691359"
  },
  {
    "text": "file instead so let's name let's let's",
    "start": "691359",
    "end": "699549"
  },
  {
    "text": "do a few things let's actually name our container and then we'll also build it",
    "start": "699549",
    "end": "707139"
  },
  {
    "text": "I'm gonna paste in what our new docker file is gonna end up looking like and",
    "start": "707139",
    "end": "712929"
  },
  {
    "text": "then we'll delete the old stuff so we're gonna say from CentOS 7 whatever then",
    "start": "712929",
    "end": "719919"
  },
  {
    "text": "we're gonna copy in our app code then we're going to still run node app dot J",
    "start": "719919",
    "end": "726459"
  },
  {
    "text": "s but we're also going to install nodejs",
    "start": "726459",
    "end": "733509"
  },
  {
    "text": "and then book to install it on CentOS you need to first configure the repository to pull to pull the",
    "start": "733509",
    "end": "741189"
  },
  {
    "text": "installation so I've keyed to node 10 so we're gonna",
    "start": "741189",
    "end": "746439"
  },
  {
    "text": "download node source the Installer that'll configure the repository then",
    "start": "746439",
    "end": "751689"
  },
  {
    "text": "we're going to install node J s then copy our app code NPM install or run NPM",
    "start": "751689",
    "end": "758319"
  },
  {
    "text": "install and so and we'll talk about the rest in a second now",
    "start": "758319",
    "end": "764850"
  },
  {
    "text": "when it comes to building our container docker build if I want to give it a name",
    "start": "765279",
    "end": "772580"
  },
  {
    "text": "then I can actually name it right in the command line so docker hello world I'm",
    "start": "772580",
    "end": "784580"
  },
  {
    "text": "gonna tag it as latest just because I'm continuing to iterate on this and again",
    "start": "784580",
    "end": "789649"
  },
  {
    "text": "current working directory so you see how it's it's actually following the steps",
    "start": "789649",
    "end": "797300"
  },
  {
    "text": "that I laid out in the docker file it downloaded the repository information it just ran yum install for nodejs and",
    "start": "797300",
    "end": "804769"
  },
  {
    "text": "then it's going to copy my app code run npm install and we should be good to go",
    "start": "804769",
    "end": "812950"
  },
  {
    "text": "so docker images you see that my most",
    "start": "812950",
    "end": "820550"
  },
  {
    "text": "recent image 377 Meg's is called docker hello world and tag latest cool right",
    "start": "820550",
    "end": "828410"
  },
  {
    "text": "does it work let's check it and see let's docker run",
    "start": "828410",
    "end": "835029"
  },
  {
    "text": "we'll talk about this command what it all means here in just a second but I have my running container it outputs hey",
    "start": "835420",
    "end": "843560"
  },
  {
    "text": "this looks like it's working listening on port 3000 let's test it curl",
    "start": "843560",
    "end": "849339"
  },
  {
    "text": "localhost port 3000 hello world so I",
    "start": "849339",
    "end": "854810"
  },
  {
    "text": "have my working container now what what did I do what's different what what did I change",
    "start": "854810",
    "end": "861339"
  },
  {
    "text": "so I installed node I then added my app",
    "start": "861339",
    "end": "867380"
  },
  {
    "text": "code and I also added a step to run NPM install there's a step here where when I",
    "start": "867380",
    "end": "875360"
  },
  {
    "text": "ran docker run I did it with in it I don't know how many of you guys have",
    "start": "875360",
    "end": "880699"
  },
  {
    "text": "already been using docker containers have you ever run into the situation",
    "start": "880699",
    "end": "885740"
  },
  {
    "text": "where you ran your docker container and then you ctrl C and it won't and it won't die that yeah right so do it with",
    "start": "885740",
    "end": "892610"
  },
  {
    "text": "an it so what happens is you're running an application think think about running",
    "start": "892610",
    "end": "898010"
  },
  {
    "text": "it on a server when you run any application on a server it spawns a process and an",
    "start": "898010",
    "end": "904000"
  },
  {
    "text": "it manages that process right and in it is what handles sending and processing",
    "start": "904000",
    "end": "909850"
  },
  {
    "text": "signals well that doesn't exist inside a docker container unless you launch it with this",
    "start": "909850",
    "end": "915730"
  },
  {
    "text": "command-line option - - in it so what what's happening here is we're launching it and we're saying okay launch a tiny",
    "start": "915730",
    "end": "922720"
  },
  {
    "text": "in it that's built just for docker that's that's there just to spawn my",
    "start": "922720",
    "end": "927850"
  },
  {
    "text": "command and that way when I press control C it'll actually kill the",
    "start": "927850",
    "end": "935860"
  },
  {
    "text": "container and give me back my shell the other options in here are - I for",
    "start": "935860",
    "end": "941920"
  },
  {
    "text": "interactive mode I don't want it to fork into the background when I'm testing if I were gonna run this on a server I",
    "start": "941920",
    "end": "947740"
  },
  {
    "text": "would want it to fork into the background and then - p3000 colon 3000",
    "start": "947740",
    "end": "953350"
  },
  {
    "text": "if I leave this out it's kind of interesting and I make this mistake all",
    "start": "953350",
    "end": "959740"
  },
  {
    "text": "the time but if I leave that out it all looks like it's working right but if I",
    "start": "959740",
    "end": "966580"
  },
  {
    "text": "if I do my test I can't get to my container well inside the container my",
    "start": "966580",
    "end": "973480"
  },
  {
    "text": "app is listening on port 3,000 but we haven't exposed that port outwardly so",
    "start": "973480",
    "end": "979540"
  },
  {
    "text": "we don't have we don't have any kind of listener that can send that traffic into",
    "start": "979540",
    "end": "985000"
  },
  {
    "text": "the container so there's a couple of options that you have available to you if I'm only gonna run one of these on a",
    "start": "985000",
    "end": "992110"
  },
  {
    "text": "host then mapping 3000 of 3000 is fine but that means I can't run a second one",
    "start": "992110",
    "end": "998140"
  },
  {
    "text": "right because three thousands already taken up so I'd have to like pick a different port well if I'm gonna pick a",
    "start": "998140",
    "end": "1004589"
  },
  {
    "text": "different port then why not just make it all dynamic so there's a couple of ways to do that on the command line",
    "start": "1004589",
    "end": "1014570"
  },
  {
    "text": "I think the easiest way is to just do - capital P now what - capital P does is",
    "start": "1015620",
    "end": "1022970"
  },
  {
    "text": "it looks at the metadata of the container I added I don't know if you",
    "start": "1022970",
    "end": "1028610"
  },
  {
    "text": "remember but I added a line that says expose 3000 so in the docker file you",
    "start": "1028610",
    "end": "1037310"
  },
  {
    "text": "see this expose 3000 that's there so that if docker requests to get a dynamic",
    "start": "1037310",
    "end": "1044990"
  },
  {
    "text": "port map then it'll know what the target port inside the container should be so I",
    "start": "1044990",
    "end": "1050480"
  },
  {
    "text": "can certainly do that and then I can run as many of these on a host as the host",
    "start": "1050480",
    "end": "1055730"
  },
  {
    "text": "can actually handle how do I know what the port is what what to listen on well",
    "start": "1055730",
    "end": "1063280"
  },
  {
    "text": "sorry I meant to keep that running if I docker PS you can see that my running",
    "start": "1063280",
    "end": "1072920"
  },
  {
    "text": "container has port 32 769 forwarding to port 3000 inside the container",
    "start": "1072920",
    "end": "1079760"
  },
  {
    "text": "so while curl local host 3000 won't work the dynamic port 30 to 769 will work and",
    "start": "1079760",
    "end": "1092120"
  },
  {
    "text": "does work so your choice it depends on your workload how you're going to handle",
    "start": "1092120",
    "end": "1098930"
  },
  {
    "text": "running more than one container but as far as just building a container you just remember you're forwarding one port",
    "start": "1098930",
    "end": "1105650"
  },
  {
    "text": "to another port inside so outside pour it inside port that could either be dynamic or it could be static depending",
    "start": "1105650",
    "end": "1113180"
  },
  {
    "text": "on what your preference is when I'm when I'm developing and iterating I always",
    "start": "1113180",
    "end": "1118190"
  },
  {
    "text": "just keep it port 3000 - 3000 because I'm only going to run one and I don't want to have to sit there and look up",
    "start": "1118190",
    "end": "1124220"
  },
  {
    "text": "what is the container every time alright cool there's another thing",
    "start": "1124220",
    "end": "1133220"
  },
  {
    "text": "that's probably notable though actually did something wrong when I built this",
    "start": "1133220",
    "end": "1138350"
  },
  {
    "text": "container just now what if we go back and we look at the docker file this step",
    "start": "1138350",
    "end": "1145730"
  },
  {
    "text": "here where I copy everything to the container anyone know anyone have off",
    "start": "1145730",
    "end": "1153860"
  },
  {
    "text": "the top of your head what what's wrong with doing that why what's wrong with that he got it right so his answer was",
    "start": "1153860",
    "end": "1164030"
  },
  {
    "text": "you copied the node modules directory and that's absolutely correct so it's",
    "start": "1164030",
    "end": "1169400"
  },
  {
    "text": "it's not terrible in in this particular case it'll actually work just fine but",
    "start": "1169400",
    "end": "1174560"
  },
  {
    "text": "what if there's a node module that needs some kind of compilation or something like that it could actually not work and",
    "start": "1174560",
    "end": "1182000"
  },
  {
    "text": "and then you'd be stuck in this weird state where everything looks like it built fine but it's not actually running",
    "start": "1182000",
    "end": "1188750"
  },
  {
    "text": "correctly the other thing that you'll often run into if you have your code",
    "start": "1188750",
    "end": "1194120"
  },
  {
    "text": "under source control and you should then you'll be copying in like your get history the dot gets subdirectory and",
    "start": "1194120",
    "end": "1201890"
  },
  {
    "text": "you don't want to copy that either that just makes your container super super big especially if it's been a",
    "start": "1201890",
    "end": "1208790"
  },
  {
    "text": "long-running project so leave all that stuff out the way you do that just like",
    "start": "1208790",
    "end": "1215630"
  },
  {
    "text": "with git in fact you'll notice docker designed a lot of this stuff to model",
    "start": "1215630",
    "end": "1220730"
  },
  {
    "text": "itself after the way get works but just like with get there's a GUID ignore there's also a docker ignore so let's",
    "start": "1220730",
    "end": "1228260"
  },
  {
    "text": "take a look at that real quick I don't have one in this directory until now so",
    "start": "1228260",
    "end": "1236660"
  },
  {
    "text": "if we look at docker ignore I'm ignoring the get subdirectory or anything dot get",
    "start": "1236660",
    "end": "1242270"
  },
  {
    "text": "and then get ignore and the node module subdirectory now let's take a",
    "start": "1242270",
    "end": "1249410"
  },
  {
    "text": "before-and-after we'll scroll up a little bit to where I ran docker build",
    "start": "1249410",
    "end": "1255230"
  },
  {
    "text": "before so here's my docker build command and you see that sending build context was",
    "start": "1255230",
    "end": "1264470"
  },
  {
    "text": "almost 2 megabytes so I sent to the daemon all the contents of the sub",
    "start": "1264470",
    "end": "1270289"
  },
  {
    "text": "directory and that worked out to be almost 2 megabytes that's how you know it's probably not right if we build now",
    "start": "1270289",
    "end": "1279340"
  },
  {
    "text": "look at what I sent to the to the daemon now just less than 20 kilobytes so I",
    "start": "1279340",
    "end": "1286249"
  },
  {
    "text": "excluded all of that stuff that's sitting there locally that I built to see that the app runs and I don't have",
    "start": "1286249",
    "end": "1292849"
  },
  {
    "text": "to even have that anymore if I want to run the app locally obviously I do but if I want to I don't",
    "start": "1292849",
    "end": "1300559"
  },
  {
    "text": "need it and when I build my container I want it to be reproduced inside the",
    "start": "1300559",
    "end": "1306169"
  },
  {
    "text": "container from the build process so if",
    "start": "1306169",
    "end": "1311479"
  },
  {
    "text": "we look I just built this 29 seconds ago it's roughly the same size so I think",
    "start": "1311479",
    "end": "1319879"
  },
  {
    "text": "we're all good we can test it again if we want but I guess we may as well",
    "start": "1319879",
    "end": "1326109"
  },
  {
    "text": "just make sure testing is always good port 3000 hello world it's all good",
    "start": "1329080",
    "end": "1337780"
  },
  {
    "text": "right on okay so I think at this point",
    "start": "1337780",
    "end": "1342790"
  },
  {
    "text": "you could actually stop you could ship it and it would work great but we",
    "start": "1342790",
    "end": "1348490"
  },
  {
    "text": "haven't optimized anything so now let's take a second let's talk about what are",
    "start": "1348490",
    "end": "1354340"
  },
  {
    "text": "some of the kind of interesting behaviors of docker and how we can use",
    "start": "1354340",
    "end": "1360070"
  },
  {
    "text": "those to optimize our container and make it a little bit smaller so you see that",
    "start": "1360070",
    "end": "1366100"
  },
  {
    "text": "our container is 378 Meg's docker images 378 Meg's let's try and get it to be",
    "start": "1366100",
    "end": "1373780"
  },
  {
    "text": "smaller than that how small can we get it what's what's like a reasonable expectation let's go back and let me",
    "start": "1373780",
    "end": "1384760"
  },
  {
    "text": "show you the let me show you the sizes again if we look the image that I'm",
    "start": "1384760",
    "end": "1389890"
  },
  {
    "text": "starting with is 202 bags so if I'm gonna if I'm going to keep things with",
    "start": "1389890",
    "end": "1396190"
  },
  {
    "text": "Cintas and that base image then 202 is like the minim like I can't go below",
    "start": "1396190",
    "end": "1402700"
  },
  {
    "text": "that because that's my starting point 378 is is where I'm at now so I can I",
    "start": "1402700",
    "end": "1408100"
  },
  {
    "text": "think I can do better than that but just set your expectations appropriately depending on how much work you want to",
    "start": "1408100",
    "end": "1415270"
  },
  {
    "text": "put into this if you're going to stick with CentOS you won't get below to 202 but let's see where we can get okay so",
    "start": "1415270",
    "end": "1426840"
  },
  {
    "text": "I'm gonna copy this and then we will talk through it",
    "start": "1428030",
    "end": "1433660"
  },
  {
    "text": "so we're gonna keep the from I didn't copy it because it wasn't capitalized but there we go I'll fix that we're",
    "start": "1440170",
    "end": "1447460"
  },
  {
    "text": "going to keep the from and then this step where we ran curl and then we ran yum install if you're building docker",
    "start": "1447460",
    "end": "1455020"
  },
  {
    "text": "files one thing that you should watch for are cases where you have multiple",
    "start": "1455020",
    "end": "1460090"
  },
  {
    "text": "run commands and especially multiple run commands that are next to each other if",
    "start": "1460090",
    "end": "1466120"
  },
  {
    "text": "they're next to each other they're almost certainly combined about and if they're combined about then that means",
    "start": "1466120",
    "end": "1472420"
  },
  {
    "text": "that they go into the same layer here's the here's one little secret about docker and the file the docker file each",
    "start": "1472420",
    "end": "1479980"
  },
  {
    "text": "line is a new layer so what we're doing is we're starting with the Cintas base",
    "start": "1479980",
    "end": "1485080"
  },
  {
    "text": "image and then we're building a new layer on top of it and we're saying in",
    "start": "1485080",
    "end": "1490780"
  },
  {
    "text": "that layer run this curl command and that's going to download and going to",
    "start": "1490780",
    "end": "1495850"
  },
  {
    "text": "execute and going to run all the stuff that it's set up to run then we're going",
    "start": "1495850",
    "end": "1501730"
  },
  {
    "text": "to build another layer on top of that every time we build a new layer everything below becomes immutable it",
    "start": "1501730",
    "end": "1508510"
  },
  {
    "text": "becomes read-only we can't change it after that so if we fetch if we download",
    "start": "1508510",
    "end": "1513520"
  },
  {
    "text": "a whole bunch of stuff in one layer and then we run like make install and we build our artifact and in the next layer",
    "start": "1513520",
    "end": "1520360"
  },
  {
    "text": "and then in the third layer we go and we delete everything that we downloaded that's great but you get none of the",
    "start": "1520360",
    "end": "1526810"
  },
  {
    "text": "space back if you combine all that stuff into one layer if you put it all",
    "start": "1526810",
    "end": "1531940"
  },
  {
    "text": "together as one big step then you can actually retrieve process and delete and",
    "start": "1531940",
    "end": "1538690"
  },
  {
    "text": "you don't have to give up all that space so that's one really handy optimization",
    "start": "1538690",
    "end": "1545050"
  },
  {
    "text": "that you can do so we're going to we're going to do that we're going to instead",
    "start": "1545050",
    "end": "1551170"
  },
  {
    "text": "of running the curl and running yum install we're going to combine those",
    "start": "1551170",
    "end": "1558010"
  },
  {
    "text": "into a single command if you know anything about bash the bash shell you know that this is conditional execution",
    "start": "1558010",
    "end": "1565180"
  },
  {
    "text": "two ampersands conditional execution if the left side succeeds we proceed forward with the",
    "start": "1565180",
    "end": "1572080"
  },
  {
    "text": "right side if we it doesn't succeed we stop we fail so",
    "start": "1572080",
    "end": "1577360"
  },
  {
    "text": "after the curl command we're going to I'm gonna throw in a step of creating a",
    "start": "1577360",
    "end": "1582950"
  },
  {
    "text": "user we'll talk about that in a second but then we're gonna delete we're gonna clean up everything that we've done",
    "start": "1582950",
    "end": "1589269"
  },
  {
    "text": "whenever we run yum yum goes out and fetches a whole bunch of metadata and",
    "start": "1589269",
    "end": "1594559"
  },
  {
    "text": "then whenever we install an RPM it actually downloads that our PM into a cache a directory and saves it so we",
    "start": "1594559",
    "end": "1602570"
  },
  {
    "text": "don't need that stuff anymore unlike a server on a server we'll come back later and we might run other yum commands so",
    "start": "1602570",
    "end": "1609950"
  },
  {
    "text": "having that metadata cache is really handy it'll make things a lot faster you're never going to do that inside a",
    "start": "1609950",
    "end": "1615470"
  },
  {
    "text": "container that's one area where containers differ from servers so because we know we're never gonna do",
    "start": "1615470",
    "end": "1621440"
  },
  {
    "text": "that we're always going to go through this build process we don't need this cache in fact we don't even want it so",
    "start": "1621440",
    "end": "1628250"
  },
  {
    "text": "we're gonna delete it and try and free up some of the disk space now remember I",
    "start": "1628250",
    "end": "1633440"
  },
  {
    "text": "said I added a user one other difference between running stuff on a server and",
    "start": "1633440",
    "end": "1640130"
  },
  {
    "text": "running stuff in a container containers by default run applications as routes",
    "start": "1640130",
    "end": "1647450"
  },
  {
    "text": "but we all know if you run anything on a server you shouldn't do that you should drop privileges and run as some kind of",
    "start": "1647450",
    "end": "1654470"
  },
  {
    "text": "regular user so the docker way of doing that is to create your user account",
    "start": "1654470",
    "end": "1659510"
  },
  {
    "text": "inside the container and then switch to it before you execute your code so add",
    "start": "1659510",
    "end": "1666620"
  },
  {
    "text": "user is creating it and then the way I switch to it is by using the user",
    "start": "1666620",
    "end": "1672440"
  },
  {
    "text": "command the user verb switches to this user then work derv switches to that",
    "start": "1672440",
    "end": "1679850"
  },
  {
    "text": "directory that users home directory that's where I'm going to copy in my",
    "start": "1679850",
    "end": "1685750"
  },
  {
    "text": "application and then run npm install",
    "start": "1685750",
    "end": "1690519"
  },
  {
    "text": "all right we're going to do this real fast save this file docker build oh NP M",
    "start": "1691420",
    "end": "1702440"
  },
  {
    "text": "not found actually why is that",
    "start": "1702440",
    "end": "1707470"
  },
  {
    "text": "did I not save the dockerfile let me check",
    "start": "1712010",
    "end": "1716230"
  },
  {
    "text": "Oh bad editing",
    "start": "1719440",
    "end": "1724910"
  },
  {
    "text": "got to get rid of this stuff up here not that stuff",
    "start": "1727350",
    "end": "1732830"
  },
  {
    "text": "there we go",
    "start": "1733750",
    "end": "1736529"
  },
  {
    "text": "so it looks roughly the same as before but this time we're downloading we're",
    "start": "1743410",
    "end": "1749110"
  },
  {
    "text": "processing we're cleaning all in one layer so we'll get to free up all that",
    "start": "1749110",
    "end": "1754150"
  },
  {
    "text": "space and now we have our image built let's check out images hey not bad we",
    "start": "1754150",
    "end": "1764380"
  },
  {
    "text": "went from 378 Meg's down to 260 Meg's and we didn't even have to work that hard we'll work a little bit harder in a",
    "start": "1764380",
    "end": "1772030"
  },
  {
    "text": "second if I have yeah I have time okay so let's also test again docker run",
    "start": "1772030",
    "end": "1781049"
  },
  {
    "text": "Perle still works so also I switched to",
    "start": "1786550",
    "end": "1791830"
  },
  {
    "text": "running as a non privileged user I'm just running as a regular user account and you see the app still works",
    "start": "1791830",
    "end": "1798520"
  },
  {
    "text": "just fine so I didn't give up anything from from a functionality perspective but I increased my security posture",
    "start": "1798520",
    "end": "1805810"
  },
  {
    "text": "substantially now I'm no longer running as root so that's pretty great now",
    "start": "1805810",
    "end": "1812680"
  },
  {
    "text": "there's one other optimization I want to point out and this one isn't necessarily going to save us disk space but it is",
    "start": "1812680",
    "end": "1819730"
  },
  {
    "text": "going to save us time if we you saw the docker build it took 10-15 seconds if we",
    "start": "1819730",
    "end": "1826930"
  },
  {
    "text": "do it again it doesn't take 10 or 15 seconds again",
    "start": "1826930",
    "end": "1832810"
  },
  {
    "text": "anyone know why I heard it from the audience cache exactly",
    "start": "1832810",
    "end": "1839110"
  },
  {
    "text": "check out every single line of output here you see that it says using cache so",
    "start": "1839110",
    "end": "1845050"
  },
  {
    "text": "what happens as docker is processing that docker file it looks and it sees",
    "start": "1845050",
    "end": "1850360"
  },
  {
    "text": "that like hey line 1 never changed so I don't have to do anything different I'm just going to keep what I already had",
    "start": "1850360",
    "end": "1856650"
  },
  {
    "text": "line 2 never changed so I'm going to keep what I already had so we don't have",
    "start": "1856650",
    "end": "1861940"
  },
  {
    "text": "to rebuild those layers as soon as we hit a line that changed we have to",
    "start": "1861940",
    "end": "1868240"
  },
  {
    "text": "rebuild that layer and as soon as we have to rebuild any layer we have to rebuild every layer that comes after it",
    "start": "1868240",
    "end": "1873970"
  },
  {
    "text": "so what you want to do is move your stuff around move your lines around in a",
    "start": "1873970",
    "end": "1880660"
  },
  {
    "text": "way that'll still make sense but in a way where the the parts that change the most are the furthest down so that way",
    "start": "1880660",
    "end": "1887350"
  },
  {
    "text": "you're you're getting the benefit of cache for as many layers as possible and that way you don't have to rebuild as",
    "start": "1887350",
    "end": "1893980"
  },
  {
    "text": "much so this will help your developer experience when they're building a container they don't have to sit there",
    "start": "1893980",
    "end": "1899230"
  },
  {
    "text": "and wait for fifteen or thirty seconds every time they change their code and by the way this was a hello world app think",
    "start": "1899230",
    "end": "1906100"
  },
  {
    "text": "if I were actually installing a ton of NPM Zoar I was actually like copying",
    "start": "1906100",
    "end": "1911290"
  },
  {
    "text": "over a lot of data the build process can actually take quite a while so let's",
    "start": "1911290",
    "end": "1916690"
  },
  {
    "text": "change this around a little bit what I want to show you is if I change",
    "start": "1916690",
    "end": "1922169"
  },
  {
    "text": "apt Jas I'll show you before and after",
    "start": "1922169",
    "end": "1929200"
  },
  {
    "text": "so let's modify a pas this is the part that'll probably be changing all the",
    "start": "1929200",
    "end": "1934299"
  },
  {
    "text": "time right this is what the developers working on so instead of hello world will say you know hello collision and",
    "start": "1934299",
    "end": "1946539"
  },
  {
    "text": "now we'll build and let's pay attention to the caches so we got all the way to line five by cache so that's pretty cool",
    "start": "1946539",
    "end": "1956320"
  },
  {
    "text": "but line five is where we copy everything over and then we ran NPM",
    "start": "1956320",
    "end": "1961629"
  },
  {
    "text": "install again we actually didn't need to run NPM install again you know I mean",
    "start": "1961629",
    "end": "1967869"
  },
  {
    "text": "like none of that part changed but because I was doing copy dot copy dot includes app KS and because it",
    "start": "1967869",
    "end": "1976210"
  },
  {
    "text": "includes a pas that changed and every line after that changed so really we",
    "start": "1976210",
    "end": "1981279"
  },
  {
    "text": "don't want copy dot what we want instead",
    "start": "1981279",
    "end": "1986289"
  },
  {
    "text": "is two copies one",
    "start": "1986289",
    "end": "1994310"
  },
  {
    "text": "oops",
    "start": "1994310",
    "end": "1996760"
  },
  {
    "text": "one for package.json and then one for a",
    "start": "2001260",
    "end": "2006440"
  },
  {
    "text": "pas so even though this adds a layer to",
    "start": "2006440",
    "end": "2012720"
  },
  {
    "text": "my image it's negligible right how big is package.json and I'm the fact is it's",
    "start": "2012720",
    "end": "2019710"
  },
  {
    "text": "going to be in one layer by itself it was already on the on the image anyway so I'm really probably not adding any",
    "start": "2019710",
    "end": "2025919"
  },
  {
    "text": "space I'm just adding a layer but I'm getting the advantage of not having to",
    "start": "2025919",
    "end": "2030960"
  },
  {
    "text": "rebuild those n PM's every time I changed my app so if I docker build now",
    "start": "2030960",
    "end": "2036559"
  },
  {
    "text": "this is the before we still have to run npm install because i changed that line",
    "start": "2036559",
    "end": "2042240"
  },
  {
    "text": "above copying package.json but now let's go change app KS and well let's go back",
    "start": "2042240",
    "end": "2051750"
  },
  {
    "text": "to hello world",
    "start": "2051750",
    "end": "2054349"
  },
  {
    "text": "and when we build this time pay attention to the lair Wow right that was almost as fast as the",
    "start": "2057409",
    "end": "2063618"
  },
  {
    "text": "fully cached one I didn't have to run npm install it kept that line cached now",
    "start": "2063619",
    "end": "2071419"
  },
  {
    "text": "how big is the image 261 Meg's I think",
    "start": "2071419",
    "end": "2079849"
  },
  {
    "text": "that's a really good trade-off you get a ton of time saved by your developers it's like as fast as they push enter",
    "start": "2079849",
    "end": "2086898"
  },
  {
    "text": "it's basically done so they don't really have to wait around but you also get",
    "start": "2086899",
    "end": "2092138"
  },
  {
    "text": "still a you know relatively small container size now we don't really have",
    "start": "2092139",
    "end": "2099019"
  },
  {
    "text": "time to keep going but I'm curious in the audience what else would you do to shrink down this container use a",
    "start": "2099019",
    "end": "2110119"
  },
  {
    "text": "different base image exactly that's what I was hoping I would here so there are other base images that are purpose-built",
    "start": "2110119",
    "end": "2116420"
  },
  {
    "text": "for being a container base image one extremely popular one is called Alpine",
    "start": "2116420",
    "end": "2123469"
  },
  {
    "text": "Linux Alpine Linux is base image starts at 3 megabytes so I can actually and in",
    "start": "2123469",
    "end": "2129619"
  },
  {
    "text": "fact if you if you want to see how it's done well alright let's just do it we",
    "start": "2129619",
    "end": "2135619"
  },
  {
    "text": "have time so I have an Alpine docker file I'm just going to copy this over",
    "start": "2135619",
    "end": "2143749"
  },
  {
    "text": "the current one and then we'll talk through it real",
    "start": "2143749",
    "end": "2149619"
  },
  {
    "text": "quick all right so this is my new docker",
    "start": "2149619",
    "end": "2155440"
  },
  {
    "text": "file so I tried to incorporate the same basic steps that we were doing in in the Cintas one remember earlier when I said",
    "start": "2155440",
    "end": "2163030"
  },
  {
    "text": "I was optimizing and I was trying to do it with very little effort well this is more effort because really you have to",
    "start": "2163030",
    "end": "2169810"
  },
  {
    "text": "learn a different package manager' a different distribution it's not that hard and it's you know there's a ton of",
    "start": "2169810",
    "end": "2175810"
  },
  {
    "text": "documentation out there so learning this might might set you back 15 minutes but",
    "start": "2175810",
    "end": "2181570"
  },
  {
    "text": "it's worth it because you'll see what the image size is that we end up with but same same idea I'm adding nodejs and",
    "start": "2181570",
    "end": "2189820"
  },
  {
    "text": "NPM I'm creating a user account and then I'm copying my package JSON running NPM",
    "start": "2189820",
    "end": "2197920"
  },
  {
    "text": "install copying app KS exposing the port and then running node so all the same",
    "start": "2197920",
    "end": "2205030"
  },
  {
    "text": "stuff just different package manager right let's check it out docker build",
    "start": "2205030",
    "end": "2213420"
  },
  {
    "text": "whoops let's check for an error add app dot J s to the current working directory",
    "start": "2213810",
    "end": "2221010"
  },
  {
    "text": "is missing a dot all right so I download started you know",
    "start": "2221010",
    "end": "2228790"
  },
  {
    "text": "even line one couldn't be cashed couldn't use the cash anymore so everything after that had to be rebuilt",
    "start": "2228790",
    "end": "2234880"
  },
  {
    "text": "but now that it's done docker images",
    "start": "2234880",
    "end": "2242160"
  },
  {
    "text": "we're down to 49 mags so that was installing node installing NPM if I want to get really fancy",
    "start": "2242160",
    "end": "2249300"
  },
  {
    "text": "technically I don't even need NPM once I've used it right so I could really install it run NPM install then remove",
    "start": "2249300",
    "end": "2257620"
  },
  {
    "text": "it if I do that all on the same layer I get to free up all that space so I could",
    "start": "2257620",
    "end": "2262750"
  },
  {
    "text": "really be fancy and do that but you know what I'm pretty happy with 49 Meg's let's let's test it",
    "start": "2262750",
    "end": "2270000"
  },
  {
    "text": "docker run it works exactly the same curl I still get my hello world there",
    "start": "2270000",
    "end": "2278620"
  },
  {
    "text": "are some cases where Alpine doesn't work exactly the same it uses a different Lib",
    "start": "2278620",
    "end": "2285220"
  },
  {
    "text": "C than what you're used to if you're used to most of the other popular unix's",
    "start": "2285220",
    "end": "2290410"
  },
  {
    "text": "you're used to G Lib C Alpine is compiled with muscle so it's not the",
    "start": "2290410",
    "end": "2295600"
  },
  {
    "text": "same thing but it's almost the same thing so for most cases I think you can",
    "start": "2295600",
    "end": "2301420"
  },
  {
    "text": "save a ton of space and therefore ton of bandwidth pulling images by switching to",
    "start": "2301420",
    "end": "2306580"
  },
  {
    "text": "alpine alright so do we have any do we",
    "start": "2306580",
    "end": "2311830"
  },
  {
    "text": "have any questions or I don't know what do we do at the end of all of this",
    "start": "2311830",
    "end": "2317340"
  },
  {
    "text": "we've got a couple questions at least one from twitch so someone was asking",
    "start": "2320720",
    "end": "2326920"
  },
  {
    "text": "Carlitos one zero zero four zero I was like to shout out the name so people know that we're actually paying attention but he asked when basically",
    "start": "2326920",
    "end": "2335299"
  },
  {
    "text": "one day it would be better to use a multi-stage build instead of the thing that you've just demonstrated I like",
    "start": "2335299",
    "end": "2340789"
  },
  {
    "text": "that question so the question is when is a better to use a multi-stage build versus a single stage build I think the",
    "start": "2340789",
    "end": "2347450"
  },
  {
    "text": "answer is if you can if you can build something inside a container that you could more or less classify as an",
    "start": "2347450",
    "end": "2354109"
  },
  {
    "text": "artifact then it's super easy to just drop that into a smaller second stage",
    "start": "2354109",
    "end": "2360260"
  },
  {
    "text": "container so multistage build is use a big build environment don't care don't",
    "start": "2360260",
    "end": "2365900"
  },
  {
    "text": "optimize just have everything you need to build your artifact maybe it's a go",
    "start": "2365900",
    "end": "2371150"
  },
  {
    "text": "binary maybe it's a Java jar something like that but then once you're done with",
    "start": "2371150",
    "end": "2376579"
  },
  {
    "text": "the build environment you don't need all that stuff anymore you can just create a second container and copy your artifact",
    "start": "2376579",
    "end": "2383660"
  },
  {
    "text": "into it and have that be the runtime container and it will have everything that you need to run so you know I think",
    "start": "2383660",
    "end": "2390799"
  },
  {
    "text": "interpreted languages you might be able to do that with it can be it can be a little bit wonky but you know compiled",
    "start": "2390799",
    "end": "2397579"
  },
  {
    "text": "languages are almost a no-brainer so like go see Java you know those are all",
    "start": "2397579",
    "end": "2403700"
  },
  {
    "text": "easy to just have a second a multi-stage build awesome another question from",
    "start": "2403700",
    "end": "2410420"
  },
  {
    "text": "Geronimo which is what are the best practices to not run the app as route",
    "start": "2410420",
    "end": "2415940"
  },
  {
    "text": "you made it look really easy is that all there is to it that's what that's the main one you know this will keep it keep",
    "start": "2415940",
    "end": "2421940"
  },
  {
    "text": "you from running his route there are also some operating system specific things like if you're running",
    "start": "2421940",
    "end": "2427940"
  },
  {
    "text": "on CentOS or Red Hat or any of the red hot derivatives then you'll actually if",
    "start": "2427940",
    "end": "2433549"
  },
  {
    "text": "you enable selinux not only would you not be running as root but then you'll also be able to to run inside and a",
    "start": "2433549",
    "end": "2441650"
  },
  {
    "text": "confined selinux jail that can help like you know further prevent container",
    "start": "2441650",
    "end": "2448549"
  },
  {
    "text": "compromise there's there's one additional thing that I've seen I haven't yet been able to",
    "start": "2448549",
    "end": "2455440"
  },
  {
    "text": "test it out but there are some projects out there once you start getting past just container izing and you get into",
    "start": "2455440",
    "end": "2462010"
  },
  {
    "text": "orchestration you might start looking at ECS or you might even look at ek s there are some projects out there that you can",
    "start": "2462010",
    "end": "2468910"
  },
  {
    "text": "deploy to e KS that'll basically just give you sort of a checklist here's what",
    "start": "2468910",
    "end": "2474760"
  },
  {
    "text": "you're doing wrong and you know it'll show that you're running these containers is route you don't need to be",
    "start": "2474760",
    "end": "2481090"
  },
  {
    "text": "doing that and it'll walk it'll hopefully walk you through fixing it but the fix looks very much like what we",
    "start": "2481090",
    "end": "2488170"
  },
  {
    "text": "just did inside that container can you talk a little bit about can you talk a",
    "start": "2488170",
    "end": "2493450"
  },
  {
    "text": "little bit about how can a WS containerization works with your code",
    "start": "2493450",
    "end": "2498640"
  },
  {
    "text": "pipeline and how to audit I know here the last code pipeline how you integrate with code pipeline and make the",
    "start": "2498640",
    "end": "2505540"
  },
  {
    "text": "development yeah like yeah can you talk about that yeah exactly so the question if you didn't hear it",
    "start": "2505540",
    "end": "2510700"
  },
  {
    "text": "was talk a little bit about code pipeline and the development process I can I can even point you at a pretty",
    "start": "2510700",
    "end": "2517300"
  },
  {
    "text": "cool resource so code pipeline if you don't know what it is it's basically our workflow engine that allows you to go",
    "start": "2517300",
    "end": "2524230"
  },
  {
    "text": "from git commit all the way to deployed and the steps along the way are kind of",
    "start": "2524230",
    "end": "2529900"
  },
  {
    "text": "up to you to define but there are some you know sort of standard practices that you can follow that people have figured",
    "start": "2529900",
    "end": "2536830"
  },
  {
    "text": "out like pull from github or pull from your git repository drop an artifact",
    "start": "2536830",
    "end": "2543520"
  },
  {
    "text": "into an s3 bucket send that artifact to code build let code build build that",
    "start": "2543520",
    "end": "2549700"
  },
  {
    "text": "code in our case that would be building the container then it would shove the the built artifact the built container",
    "start": "2549700",
    "end": "2556869"
  },
  {
    "text": "into ECR a registry that we that you can host containers from from there you",
    "start": "2556869",
    "end": "2565660"
  },
  {
    "text": "would then need to trigger some kind of update some kind of signal to say ok run my new container now that is up to your",
    "start": "2565660",
    "end": "2573400"
  },
  {
    "text": "orchestration engine if you're using eks it might be like a cube cuddle command",
    "start": "2573400",
    "end": "2579720"
  },
  {
    "text": "anyone on the live stream I always say cube control so don't tell per sign that I just said cube cuddle",
    "start": "2579720",
    "end": "2586060"
  },
  {
    "text": "he'll probably like laugh at me okay so if it's ECS on the other hand it might",
    "start": "2586060",
    "end": "2592150"
  },
  {
    "text": "be just like a cloud formation update or it might be a code deploy command to",
    "start": "2592150",
    "end": "2597790"
  },
  {
    "text": "send out an e CS update but either way what you'll end up with you saw we were",
    "start": "2597790",
    "end": "2604060"
  },
  {
    "text": "using a docker tag latest the best practice is actually to use at something",
    "start": "2604060",
    "end": "2609610"
  },
  {
    "text": "other than latest I personally like to use the get short hash and I tagged all",
    "start": "2609610",
    "end": "2616030"
  },
  {
    "text": "of my containers with whatever the commit was that built that container and I use the short hash for that and then",
    "start": "2616030",
    "end": "2623020"
  },
  {
    "text": "that's the only thing I'm updating I'm saying okay go from running docker hello world cache a to docker hello world hash",
    "start": "2623020",
    "end": "2630700"
  },
  {
    "text": "be and that one line update will will deploy out on to and my Orchestrator",
    "start": "2630700",
    "end": "2636730"
  },
  {
    "text": "that's its job it just knows how to do that it'll it'll do it based on whatever I've defined as my rollout strategy so",
    "start": "2636730",
    "end": "2646120"
  },
  {
    "text": "code deploys definitely worth exploring if you want to actually see it in use",
    "start": "2646120",
    "end": "2651640"
  },
  {
    "text": "and try it out for yourself ECS workshop comm by the way I'm going",
    "start": "2651640",
    "end": "2659440"
  },
  {
    "text": "to point you at two resources since I'm up here ECS workshop and eks workshop",
    "start": "2659440",
    "end": "2665040"
  },
  {
    "text": "dot-com both are available for you to do they're",
    "start": "2665040",
    "end": "2670180"
  },
  {
    "text": "up a hundred percent of the time they're freely available there's nothing that you have to do except bring your own AWS",
    "start": "2670180",
    "end": "2676330"
  },
  {
    "text": "account and you can walk through building an entire DevOps workflow using",
    "start": "2676330",
    "end": "2681910"
  },
  {
    "text": "code deploy so this will actually build out",
    "start": "2681910",
    "end": "2688200"
  },
  {
    "text": "a code deploy that will you know take",
    "start": "2690480",
    "end": "2696150"
  },
  {
    "text": "you from github all the way into code pipeline will pull your code just like I",
    "start": "2696150",
    "end": "2702599"
  },
  {
    "text": "said pull your code start building it shove it into ECR and then deploy it out",
    "start": "2702599",
    "end": "2708480"
  },
  {
    "text": "onto ECS so the ECS workshop has all of that you can walk right through it it's",
    "start": "2708480",
    "end": "2714900"
  },
  {
    "text": "super simple if you want something that's a little bit more DIY people that",
    "start": "2714900",
    "end": "2722790"
  },
  {
    "text": "run kubernetes tend to like to do things in a DIY fashion so we have a couple of",
    "start": "2722790",
    "end": "2729089"
  },
  {
    "text": "chapters available that you can focus on one is CI CD with code pipeline here and",
    "start": "2729089",
    "end": "2739910"
  },
  {
    "text": "then the other one is deploying Jenkins so a lot of a lot of customers already",
    "start": "2739910",
    "end": "2746280"
  },
  {
    "text": "run Jenkins and they want to know how do I run it inside containers on kubernetes so this is how you can get started",
    "start": "2746280",
    "end": "2753050"
  },
  {
    "text": "running Jenkins on kubernetes I personally would shy away from that and I'd stick with code pipeline that's just",
    "start": "2753050",
    "end": "2759780"
  },
  {
    "text": "me though all right I'll be around I'll be over there actually the across the",
    "start": "2759780",
    "end": "2765690"
  },
  {
    "text": "across the aisle and the AWS booth come by ask me any other questions that you you feel like asking I'd love to talk to",
    "start": "2765690",
    "end": "2773280"
  },
  {
    "text": "you about all your container needs just let me know thanks",
    "start": "2773280",
    "end": "2780290"
  }
]